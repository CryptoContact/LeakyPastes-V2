id,title,username,language,date,content
BxF2NxM0,G2A.com Free Gift Card Guide Mar 2024 New,ssss50w,GetText,Thursday 14th of March 2024 07:10:01 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://drive.google.com/file/d/1aOBwxx73UL1B5zML5LsDdQ4k3YafTnrc/view
 
Working as of:
14 March 2024
 




























"
wyLNvYfe,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Thursday 14th of March 2024 07:08:26 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_453974.pdf

Working as of:
15 March 2024





















"
jZ9th1Qn,jargon's String/uByte Conversion for FreeBASIC,jargon,FreeBasic,Thursday 14th of March 2024 06:58:27 PM CDT,"
'""ascii ubyte.bas""
'String/uByte Conversion for FreeBASIC
'Copyright 2024 03/14 Tim Keal alias jargon

Const NULL As Any Ptr = 0

#Define EQU =
#Define GTR >
#Define LSS <
#Define NEQ <>
#Define GEQ >=
#Define LEQ <=

Const EMPTY = """"

declare sub ascii2array(byval text as string=EMPTY, array(any) as ubyte )

declare sub array2ascii(byref text as string=EMPTY, array(any) as ubyte )

sub ascii2array(byval text as string=EMPTY, array(any) as ubyte )
	
	erase array
	
	dim as longint offset=0,index=0
	
	do
		if offset GEQ len(text) then exit do
		
		redim preserve array(LBound(array,1) to UBound(array,1))
		
		array(offset)=asc(mid(text,offset+1,1))
	
		offset+=1
		
	loop
	
end sub

sub array2ascii(byref text as string=EMPTY, array(any) as ubyte )
	
	text = EMPTY
	
	dim as longint offset=0,index=0
	
	offset = LBound(array,1)
	
	do
		if offset GTR UBound(array,1) then exit do
		
		text &= chr(array(offset))
		
		offset+=1
		
	loop
	
end sub
"
72M9fAbk,pyTkinterQuestionnaire-non-OOP,acclivity,Python,Thursday 14th of March 2024 06:34:16 PM CDT,"from tkinter import *

window = Tk()
window.title('Questionnaire')
window.geometry('400x200')

questions = [
    (),
    (""Question 1: Do you like Python?"", 2, 3),
    (""Question 2: Do you prefer cats over dogs?"", 3, 4),
    (""Question 3: Are you a morning person?"", 5, 7),
    (""Question 4: Do you enjoy reading books?"", 6, 9),
    (""Question 5: Is pizza your favorite food?"", 8, 9),
    (""Question 6: Do you like traveling?"", 9, 10),
    (""Question 7: Are you interested in learning new languages?"", 5, 10),
    (""Question 8: Do you enjoy outdoor activities?"", 6, 10),
    (""Question 9: Are you a fan of superhero movies?"", 4, 10),
    (""Question 10: Do you like solving puzzles?"", 0, 0)
]

question_index = 1
yesnum = 0
nonum = 0

def go():
    global question_index, yesnum, nonum, question_label

    data = questions[question_index]
    quest = data[0]
    yesnum = data[1]
    nonum = data[2]
    question_label = Label(window, text=quest)  # text=self.questions[self.current_question_index])
    question_label.pack()

    yes_button = Button(window, text=""YES"", command=next_yes)
    yes_button.pack(side=LEFT, padx=10)

    no_button = Button(window, text=""NO"", command=next_no)
    no_button.pack(side=RIGHT, padx=10)

def next():
    global question_index, yesnum, nonum, question_label
    if question_index == 0:
        question_label.config(text=""Questionnaire completed."")
    else:
        data = questions[question_index]
        quest = data[0]
        yesnum = data[1]
        nonum = data[2]
        question_label.config(text=quest)


def next_yes():
    global question_index, yesnum
    question_index = yesnum

    next()

def next_no():
    global question_index, nonum
    question_index = nonum

    next()

go()
mainloop()
"
MJn49KQE,sanjimmy2024,spidersam,JSON,Thursday 14th of March 2024 06:26:36 PM CDT,"[
  {
    ""name"": ""Bellodentro - Pare mi zio"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/8bb94675-9f46-8891-7eab-f4615fd83794.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Depesce - Call center"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/93e92b42-9b33-ed1b-6b87-5ae6e2f1103c.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Fraprosdoketon - Ludopatia stellare"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/3fc793cc-ff12-8317-6e27-a20137243f73.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Fratelli Fumagazzi - NON VEDO L\u0027ORA"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/ed32e328-c1c2-5d5f-62b7-7833eca8dff0.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""I golosi - Frappè al cioccolato"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/cc1f04f6-b37c-8772-a9b3-9a9588786997.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Jonny Mele - Drogati di meno"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/8bd1267f-b262-cf26-3a9f-7c155d924fb8.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Marco Mazzoli - COMPLOTTISTA"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/dbae4136-e2ef-8370-a036-f04338f97eb5.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Mbriake - Un\u0027ora e venti"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/135e2786-99fc-8e9c-d6de-b9a4a0b6cb8b.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Paolino e Martin - Magia della Turchia"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/11be22c0-2950-98dc-af67-17ad0812537d.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Paolo Noise - FANCULO AI 2000"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/e08526f1-4d38-4bfa-085f-657e72e17766.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Pippo - Senza glutine"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/941249c9-0fe1-f9ab-b38b-23d60ac3d8cb.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Pippo Palmieri - Non ho soldi. Kondanti"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/370961484-44100-2-a0519564e98bf.m4a"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Ruggero de I Timidi - L\u0027Amore è nell\u0027Aria"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/92c2f415-92f8-89cc-bbb4-ba0bd5e63511.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Sabrina Bambi - I 10 scomandamenti"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/2dcf46da-21cf-cc1a-d5cf-fd12afd64e89.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""Stefanina - La tromba"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/d274665f-855b-7051-6a20-d36864c5f1e5.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  },
  {
    ""name"": ""The Scumbeasty - Equilibristi"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2024-2-14/0b89b816-3507-63cd-9658-60be333f6a37.mp3"",
    ""imageUrl"": ""https://i.imgur.com/jOezKlI.png""
  }
]"
uq0g79FT,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Thursday 14th of March 2024 06:15:34 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
14 March 2024















































"
8yn077J9,Untitled,sissou123,C,Thursday 14th of March 2024 06:06:48 PM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2024: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
What you'll learn
Fundamentals of Programming
Summarised & Concise Material  
for more:https://cuty.io/hJda75Y13zR
 

"
6piJ8M8g,hyprland.conf,bluebyt,INI file,Thursday 14th of March 2024 06:01:13 PM CDT,"
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once=systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

 
# █▀▄▀█ █▀█ █▄░█ █ ▀█▀ █▀█ █▀█
# █░▀░█ █▄█ █░▀█ █ ░█░ █▄█ █▀▄
monitor=,preferred,auto,auto

# █▀▀ ▀▄▀ █▀▀ █▀▀
# ██▄ █░█ ██▄ █▄▄
exec-once = firefox & chromium & nwg-look & ulauncher & pavucontrol & pcmanfm & nautilus & gthumb & catfish & discocss & wezterm & lite-xl % blueman-manager
exec-once = waybar -c  ~/.config/waybar/config.ini -s ~/.config/waybar/style.css
#exec-once = hyprpaper

#OSD window
exec-once = swayosd
bind=, XF86AudioRaiseVolume, exec, swayosd --output-volume=raise
bind=, XF86AudioLowerVolume, exec, swayosd --output-volume=lower
bind=, XF86AudioMute, exec, swayosd --output-volume mute-toggle
bind=, release Caps_Lock, exec, swayosd --caps-lock

binde=, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindl=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-

#Script
#exec-once =""swww init && sleep 2 && swww img ~/Pictures/Nord/fog-1920x1080.jpg""
exec-once = ~/.bin/sww.sh
# exec-once = ~/.config/hypr/wallpapers.sh #Wallpapers Change Script swww
exec-once = ~/.config/hypr/portal.sh
exec-once = ~/.config/hypr/cleanup_after_start.sh
exec-once = ~/.config/scripts/eww-start.sh
#exec-once = eww daemon & eww open sidebar

#Apps
exec-once = celluloid $HOME/Documents/playlist.m3u
exec-once = kitty ncmpcpp
exec-once = mpv --playlist=/mnt/media/Videos/Chillout006/my_list.txt &
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec-once = tilix --geometry=112x110 -a app-new-window -x ""weechat""
#exec-once = conky -c $HOME/.conky/grumimosa/Mimosa.conf &> /dev/null &
exec-once = notify-send -a aurora ""hello $(whoami)""
exec-once = alacritty -e bashtop
exec-once = thunar /mnt/media/Deviant/Art3/

# █▀▀ █▄░█ █░█
# ██▄ █░▀█ ▀▄▀
env = XCURSOR_SIZE,24
env = XDG_SESSION_TYPE = wayland

# █ █▄░█ █▀█ █░█ ▀█▀
# █ █░▀█ █▀▀ █▄█ ░█░
input {
    kb_layout = us,ca
    kb_variant = altgr-intl
    kb_model = pc105
    kb_options = grp:alt_shift_toggle
    kb_rules = evdev
    numlock_by_default = true
    follow_mouse = 1
    float_switch_override_focus = 1
    sensitivity = 0
}

# █▀▀ █▀▀ █▄░█ █▀▀ █▀█ ▄▀█ █░░
# █▄█ ██▄ █░▀█ ██▄ █▀▄ █▀█ █▄▄
general {
    gaps_in = 5
    gaps_out = 20
    border_size = 3
    col.active_border = rgba(5e81acee) rgba(b48eadee) 45deg  
    col.inactive_border = rgba(595959aa)
    layout = dwindle
}

# █▀▄ █▀▀ █▀▀ █▀█ █▀█ ▄▀█ ▀█▀ █ █▀█ █▄░█
# █▄▀ ██▄ █▄▄ █▄█ █▀▄ █▀█ ░█░ █ █▄█ █░▀█

decoration {
    rounding = 10

    blur {
        enabled = true
        size = 3
        passes = 4
    }
    
    col.shadow=0xff313244
    col.shadow_inactive=0xff313244
    drop_shadow = true
    shadow_range = 50
    shadow_render_power = 4
    shadow_offset = 1, 4
    shadow_scale = 1.0
    col.shadow = rgba(1a1a1aee)
}


# ▄▀█ █▄░█ █ █▀▄▀█ ▄▀█ ▀█▀ █ █▀█ █▄░█ █▀
# █▀█ █░▀█ █ █░▀░█ █▀█ ░█░ █ █▄█ █░▀█ ▄█
animations {
    enabled = true
    bezier = overshot, 0.05, 0.9, 0.1, 1.05
    animation = windows, 1, 7, overshot,slide
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default, loop
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default  
}

# █░░ ▄▀█ █▄█ █▀█ █░█ ▀█▀ █▀
# █▄▄ █▀█ ░█░ █▄█ █▄█ ░█░ ▄█
dwindle {
    pseudotile = true
    preserve_split = true
}

# █▀▄▀█ █ █▀ █▀▀
# █░▀░█ █ ▄█ █▄▄
misc {
  mouse_move_focuses_monitor = false
  focus_on_activate = true
  enable_swallow = true
  swallow_regex = ^(kitty)$
}

# █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█   █▀█ █░█ █░░ █▀▀ █▀
# ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀   █▀▄ █▄█ █▄▄ ██▄ ▄█
# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

windowrule = float, ^(.*)$


windowrule = size 900 500, title:(Open File)(.*)$
windowrule = float, title:(Open File)(.*)$
windowrule = move center, title:(Open File)(.*)$


windowrule=float,org.kde.polkit-kde-authentication-agent-1

layerrule = ignorezero,notifications
layerrule = ignorezero, ^(gtk-layer-shell)$

windowrule = float,org.gnome.Calculator

windowrule = center,^(albert)$
windowrule = forceinput,^(albert)$
windowrule = noborder,albert
windowrule = noblur,albert
windowrule = noshadow,albert
windowrule = nomaxsize,albert

windowrule = move 1140 54,gsimplecal

windowrule = float,org.kde.kdenlive
windowrule = size 2127 1167,org.kde.kdenlive
windowrule = opacity 0.9 0.9,org.kde.kdenlive
windowrule = move 66 115,org.kde.kdenlive
windowrule = workspace 9 silent,org.kde.kdenlive

windowrule = center,ulauncher
windowrule = forceinput,ulauncher
windowrule = noborder,ulauncher
windowrule = noblur,ulauncher
windowrule = noshadow,ulauncher
windowrule = nomaxsize,ulauncher
windowrulev2 = animation slide, class:^(ulauncher)$

windowrule = noborder,wofi
windowrule = opacity 0.6 0.6,wofi
windowrulev2 = nomaxsize,class:^(wofi)$

windowrule = noborder,Conky
windowrule = noblur,Conky
windowrule = noshadow,Conky
windowrule = float,Conky
windowrulev2 = move 14 49,class:^(Conky)$
windowrule = workspace 1 silent,^(Conky)$
#windowrulev2 = pin,class:^(Conky)$

windowrule = float,imv

windowrule = workspace 1 silent,^(mpv)$
windowrulev2 = float,class:^(mpv)$
windowrule = move 1426 758,mpv
windowrule = size 768 432,mpv

windowrule = workspace 1,^(foot)$
windowrule = float,foot
windowrule = move 456 725 ,foot
windowrule = size 777 520,foot

windowrule = float,gucharmap

windowrule = workspace 1 silent,^(kitty)$
windowrule = opacity 0.7 0.7,kitty
windowrule = move 1387 133,kitty
windowrule = size 768 513,kitty
windowrule = float,nwg-look
windowrule = workspace 7 silent,nwg-look
windowrule = move 158 730,nwg-look
windowrule = size 1022 580,nwg-look

windowrule = float,pavucontrol
windowrule = workspace 7 silent,pavucontrol
windowrule = move 1392 196,pavucontrol
windowrule = size 1067 719,pavucontrol
windowrule = opacity 0.8 0.8,pavucontrol

windowrule = float,VSCodium
windowrule = workspace 5 silent,VSCodium
windowrule = move 1325 92,VSCodium
windowrule = size 1175 1291,VSCodium
windowrule = opacity 0.8 0.8,VSCodium

windowrule = float,totem
windowrule = size 740 473,totem
windowrule = float,smplayer
windowrule = size 740 473,smplayer

windowrule = float,discord
windowrule = size 1784 1212,discord
windowrule = opacity 0.8 0.8,discord
windowrule = move 196 116,discord
windowrule = workspace 4 silent,discord

windowrule = workspace 6 silent,^(com.github.rafostar.Clapper)$
windowrule = move 1420 820,com.github.rafostar.Clapper

windowrule = workspace 6 silent,^(io.github.celluloid_player.Celluloid)$
windowrule = move 1393 171,io.github.celluloid_player.Celluloid

windowrule = workspace 6 silent,^(org.gnome.Nautilus)$
windowrule = move 276 757,org.gnome.Nautilus
windowrule = float,org.gnome.Nautilus
windowrule = opacity 0.8 0.8,org.gnome.Nautilus

windowrule = workspace 6 silent,^(pcmanfm)$
windowrule = move 191 703,pcmanfm
windowrule = move 287 69,pcmanfm
windowrule = float,pcmanfm
windowrule = opacity 0.8 0.8,pcmanfm

windowrule = workspace 7 silent,^(blueman-manager)$
windowrule = float,blueman-manager
windowrule = opacity 0.8 0.8,blueman-manager

windowrule = float,tilix
windowrule = workspace 7 silent,^(tilix)$
windowrule = size 1709 1288,tilix

#windowrule = nomaxsize,thunar
windowrule = size 841 528,thunar 
windowrule = float,thunar
windowrule = move 448 86,thunar
windowrule = opacity 0.8 0.8,thunar
windowrule = workspace 1 silent,^(thunar)$

windowrule = float,Alacritty
windowrule = opacity 0.7 0.7,Alacritty
windowrule = workspace 8 silent,^(Alacritty)$
windowrule = move 328 118,Alacrity
windowrule = size 1825 1189,Alacrity

windowrule = float,org.wezfurlong.wezterm
windowrule = size 805 417,org.wezfurlong.wezterm
windowrule = move 463 751,org.wezfurlong.wezterm
windowrule = workspace 1 silent,org.wezfurlong.wezterm

windowrule = move 325 82,firefox
windowrule = size 1866 1284,firefox
windowrule = float,firefox
windowrule = workspace 2 silent,^(firefox)$
windowrulev2 = size 943 514,class,^(firefox)$,title:^(.*Save.*)$
windowrulev2 = size 943 514,class,^(firefox)$,title:^(.*save.*)$

windowrule = workspace 5 silent,^(gedit)$
windowrule = float,gedit
windowrule = move 250 70,^(gedit)$
windowrule = size 1311 1327,^(gedit)$
windowrule = opacity 0.85 0.85,^(gedit)$

windowrule = move 1304 518,gthumb
windowrule = float,gthumb
windowrule = workspace 9 silent,^(gthumb)$

windowrule = move 273 92,lite-xl
windowrule = float,lite-xl
windowrule = workspace 5,lite-xl
windowrule = opacity 0.80 0.80,^(lite-xl)$

windowrule = float,catfish
windowrule = move 169 147,catfish
windowrule = size 774 509,catfish
windowrule = workspace 7 silent,^(catfish)$

windowrule = move 135 106,shotwell
windowrule = float,shotwell
windowrule = workspace 9 silent,^(shotwell)$

windowrule = float,eog
windowrule = float,celluloid
windowrule = float,Secrets
windowrule = float,com.github.rafostar.Clapper
windowrule = float,epiphany
windowrule = float,gnome-tweaks

windowrule = move 889 320,file-roller
windowrule = size 535 379,file-roller
windowrule = float,file-roller

windowrule = move 316 74,chromium
windowrule = size 1849 1252,chromium
windowrule = float,chromium
windowrule = workspace 3 silent,^(chromium)$

windowrule = workspace 9 silent,gimp-2.99
windowrule = opacity 0.85 0.85,gimp-2.99
windowrule = size 1146 658,title:Export Image
windowrule = size 1146 658,title:Save Image

windowrule = workspace 7,^(gnome-system-monitor)$
windowrule = move 95 757,gnome-system-monitor
windowrulev2 = float,class:^(gnome-system-monitor)$

windowrule = float,geany
windowrule = workspace 9 silent,geany
# windowrulev2 = float,class:,^(Alacritty)$

windowrule = float,g4music

windowrule = center,title:^(.*Save.*)$
windowrulev2 = float, class:file_progress
windowrulev2 = float, class:confirm
windowrulev2 = float, class:dialog
windowrulev2 = float, class:download
windowrulev2 = float, class:notification
windowrulev2 = float, class:error
windowrulev2 = float, class:splash

#windowrule = opacity 0.7 0.7,rofi
#windowrulev2 = animation slide,class:^(rofi)$

# █▀ █▀▀ █▀█ █▀▀ █▀▀ █▄░█ █▀ █░█ █▀█ ▀█▀
# ▄█ █▄▄ █▀▄ ██▄ ██▄ █░▀█ ▄█ █▀█ █▄█ ░█░
bind=, Print,exec,grim $(xdg-user-dir PICTURES)/$(date +'%s_grim.png')
bind = CTRL,Print,exec,slurp | grim -g - ~/Downloads/slurped.png

# make floating and sticky
#indowrulev2 = float, title:^(Picture-in-Picture)$
#windowrulev2 = pin, title:^(Picture-in-Picture)$

# █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█   █▀▄▀█ ▄▀█ █▄░█ ▄▀█ █▀▀ █▀▄▀█ █▀▀ █▄░█ ▀█▀
# ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀   █░▀░█ █▀█ █░▀█ █▀█ █▄█ █░▀░█ ██▄ █░▀█ ░█░
$mainMod = SUPER
bind = $mainMod, Return, exec,xfce4-terminal
bind = $mainMod, A, exec,alacritty -e zsh
bind = $mainMod, K, exec,kitty -e ranger
bind = $mainMod, G, exec, gedit
bind = $mainMod, Q, killactive,
bind = $mainMod, C, exec,gsimplecal
#bind = $mainMod, M, exit,
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, rofi -show drun
bind = $mainMod ,D, exec,wofi -n --show drun -k ""/dev/null""
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
#bind = CTRL, space, exec, ulauncher-toggle
bind = CTRL, space, exec, wofi -n --show drun -k ""/dev/null""
bind=  CTRL, M, exec, wallpaper.sh
bind=  CTRL, J, exec, workspaceloop.sh
bind = CTRL, Q, exec, killall wallpaper.sh
bind = CTRL, E, exec, killall workspaceloop.sh

# Reload waybar
#bind = SUPER_SHIFT, R, exec, ~/.scripts/launch_waybar

# Ricing
bind = CTRL, 4, exec, kitty --title fly_is_kitty sh -c 'cava'
#bind = CTRL, 2, exec, kitty --title donut_is_kitty sh -c '~/.local/bin/donut'
#bind = CTRL, 3, exec, kitty --title clock_is_kitty sh -c 'tty-clock -C5 -c'

# █▀▀ █▀█ █▀▀ █░█ █▀
# █▀░ █▄█ █▄▄ █▄█ ▄█
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d


# █▀ █░█░█ █ ▀█▀ █▀▀ █░█
# ▄█ ▀▄▀▄▀ █ ░█░ █▄▄ █▀█
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# █▀▄▀█ █▀█ █░█ █▀▀
# █░▀░█ █▄█ ▀▄▀ ██▄
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = CTRL, right, workspace, e+1
bind = CTRL, left, workspace, e-1

# █▀█ █▀▀ █▀ █ ▀█ █▀▀
# █▀▄ ██▄ ▄█ █ █▄ ██▄
binde = SUPER CTRL, left, resizeactive, -20 0
binde = SUPER CTRL, right, resizeactive, 20 0
binde = SUPER CTRL, up, resizeactive, 0 -20
binde = SUPER CTRL, down, resizeactive, 0 20


# █▀▄▀█ █▀█ █░█ █▀ █▀▀   █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀
# █░▀░█ █▄█ █▄█ ▄█ ██▄   █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
"
DfkFxDhA,Script,IcaroLouvera,Python,Thursday 14th of March 2024 05:37:05 PM CDT,"import os
from git import Repo
from datetime import datetime
import subprocess
import warnings

def upload_to_github(local_path, github_repo_url, github_token, branch_name='master'):
    try:
        # Navegue até o diretório local
        os.chdir(local_path)

        # Inicialize um repositório Git, se ainda não tiver sido inicializado
        if not os.path.exists('.git'):
            Repo.init()

        # Verifique se o controle remoto 'origin' já existe
        repo = Repo()
        origin = None
        for remote in repo.remotes:
            if remote.name == 'origin':
                origin = remote
                break

        # Se o controle remoto 'origin' já existir, ajuste a URL
        if origin:
            origin.set_url(github_repo_url)
        else:
            # Caso contrário, crie um novo controle remoto 'origin'
            origin = repo.create_remote('origin', github_repo_url)

        # Adicione todos os arquivos ao controle de versão
        repo.git.add('--all')

        # Remova arquivos excluídos localmente do repositório
        deleted_files = [item.a_path for item in repo.index.diff(None) if item.deleted_file]
        if deleted_files:
            repo.index.remove(deleted_files)
            repo.index.commit(f""Removido arquivo(s): {', '.join(deleted_files)}"")

        # Gere uma mensagem de commit automática com base nas alterações
        commit_message = generate_commit_message()

        # Faça o commit dos arquivos
        repo.index.commit(commit_message)

        # Desativa as mensagens de aviso para 'unclosed file'
        warnings.filterwarnings(""ignore"", category=ResourceWarning, message=""unclosed file"")

        # Empurre os arquivos para o repositório remoto no GitHub usando o token
        origin.push(refspec=f""refs/heads/{branch_name}"", force=True)

        print(""Upload para o GitHub concluído com sucesso!"")

    except Exception as e:
        print(f""Erro durante o upload para o GitHub: {e}"")

def generate_commit_message():
    """"""Gera uma mensagem de commit automática com base na data e horário.""""""
    now = datetime.now()
    date_time = now.strftime(""%d/%m/%Y %H:%M:%S"")
    return f""Atualização automática {date_time}""

if __name__ == ""__main__"":
    # Substitua essas variáveis pelos seus valores
    local_path = ""C:/Users/Ícaro Louvera/Zettelkasten/Core/MyBrain""
    github_repo_url = 'https://github.com/TheIcariaWorld/Zettelkasten-Icaro.git'
    github_token = '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'

    upload_to_github(local_path, github_repo_url, github_token)
"
XsqDCJsL,avl tests,Pearlfromsu,C#,Thursday 14th of March 2024 05:22:37 PM CDT,"using BinTreeLib;

namespace TestProject1 {
    public class UnitTest1 {
        [Fact]
        public void CountIncreaseAfterAdding() {
            var tree = new AVLTree<int, int>();
            var a = new[] { 69, 153, 74, 34, 75, 3, 6, 1, 7, 4, 54, 25, 2 };
            int n = a.Length;
            for (int i = 0; i < n; i++)
                tree.Add(a[i], i);
            Assert.Equal(n, tree.Count);
        }
        
        [Fact]
        public void ExistingKeyException() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            Assert.Throws<ArgumentException>(() => tree.Add(n - 1, n - 1));
        }
        
        [Fact]
        public void MinException() {
            var tree = new AVLTree<int, int>();
            Assert.Throws<InvalidOperationException>(() => tree.Min());
        }
        [Fact]
        public void RemoveUnexistedElement() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            Assert.Throws<ArgumentNullException>(() => tree.Remove(2 * n));
        }

        [Fact]
        public void ItemsExistAfterAdding() {
            var tree = new AVLTree<int, int>();
            var a = new[] { 69, 153, 74, 34, 75, 3, 6, 1, 7, 4, 54, 25, 2 };
            int n = a.Length;
            for (int i = 0; i < n; i++)
                tree.Add(a[i], i);
            Assert.Equal(n, tree.Count);
            Array.Sort(a);
            int j = 0;
            foreach (var pair in tree)
                Assert.Equal(a[j++], pair.Key);
        }

        [Fact]
        public void ExistingElementContains() {
            var tree = new AVLTree<int, int>();
            var arrayInts = new[] { 69, 153, 74, 34, 75, 3, 6, 1, 7, 4, 54, 25, 2 };
            foreach (var number in arrayInts)
                tree.Add(number, 0);

            foreach (var number in arrayInts)
                Assert.True(tree.ContainsKey(number));
        }

        [Fact]
        public void UnexistedElementContains() {
            var tree = new AVLTree<int, int>();
            var a = new[] { 69, 153, 74, 34, 75, 3, 6, 1, 7, 4, 54, 25, 2 };
            for (int i = 0; i < a.Length; i++)
                tree.Add(a[i], 0);
            Assert.False(tree.ContainsKey(37));
        }

        [Fact]
        public void DictionaryConstructor() {
            Dictionary<string, string> dict = new Dictionary<string, string> () {
                { ""abc"", ""def"" },
                { ""ghj"", ""hlm"" },
                { ""nop"", ""qrs"" }
            };
            AVLTree<string, string> avl = new AVLTree<string, string>(dict, StringComparer.CurrentCultureIgnoreCase);
            Assert.True(dict.Count == avl.Count);
            foreach (var pair in dict) {
                Assert.True(avl.ContainsKey(pair.Key));
                Assert.True(avl.ContainsValue(pair.Value));
            }
        }
        [Fact]
        public void UnexistedKeyException() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            Assert.Throws<KeyNotFoundException>(() => tree[n + 1]);
        }

        [Fact]
        public void AddItemToNewIndex() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            tree[n] = n;
            Assert.True(tree.ContainsKey(n));
            Assert.True(tree.ContainsValue(n));
        }
        [Fact]
        public void KeyNullException() {
            var tree = new AVLTree<string, int>();
            Assert.Throws<ArgumentNullException>(() => tree[null] = 6);
        }
        [Fact]
        public void SearchMinElement() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = n; i < 5 * n; ++i)
                tree.Add(i, i);
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            for (int i = 5 * n; i < 10 * n; i++)
                tree.Add(i, i);

            Assert.True(tree.Min().Equals(new KeyValuePair<int, int>(0, 0)));
        }
        [Fact]
        public void CheckRemoveLeaf()
        {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            int k = -10;
            for (int i = k; i < 0; i++)
                tree.Add(i, i);
            tree.Remove(n - 1);
            Assert.True(!tree.ContainsValue(n - 1));
        }
        [Fact]
        public void CheckRemoveStepByStep() {
            var tree = new AVLTree<int, int>();
            int n = 10;
            for (int i = 0; i < n; i++)
                tree.Add(i, i);
            for (int i = 0; i < n; i++)
                tree.Remove(i);
            Assert.True(tree.Count == 0);
        }
    }
}"
9Nv0Sphb,NU Roomintro V1.2,Nightingales,HTML,Thursday 14th of March 2024 04:51:09 PM CDT,"<div style=""background: #418CB1"">
   <table style=""margin: auto ; font-size: 1.1em"">
      <tbody>
         <tr>
            <td class=td1 style=""margin-top: 20px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; text-align: right ; border-radius: 50px 0 0 50px ; padding-right: 5px ; margin-right: -6px""> <a href=""https://www.smogon.com/forums/forums/neverused.787/"" style=""text-decoration: none ; color: #00adff"" target=""_blank"" rel=""noopener""><strong>NU Forums</strong></a> </td>
            <td style=""margin-top: 5px ; width: 123px ; letter-spacing: 1pt ; display: block ; height: 20px ; padding-right: 5px ; border-radius: 50px 0 0 50px ; background: #ffffff ; text-align: right ; margin-right: -20px ; padding-right: 16px""> 
               <a href=""https://www.smogon.com/forums/threads/nu-information-hub.3659530/"" style=""text-decoration: none ; color: #C45444"" target=""_blank"" rel=""noopener""><strong>Resources&nbsp;</strong> </a> 
            </td>
            <td style=""background: #0c94d3 ; border: 4px solid #85adbd ; border-radius: 50px ; opacity: 0.99""> <a href=https://www.youtube.com/watch?v=GGU1P6lBW6Q&ab_channel=TheWickedNorth>
               <img src=""https://archives.bulbagarden.net/media/upload/3/3f/BT130.png"" width=""67"" height=""69""></a> 
            </td>
            <td style=""margin-top: 20px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; border-radius: 0 50px 50px 0 ; padding-left: 5px ; margin-left: -6px ; padding-left: 5px; font: verdana;""><a href=""https://www.smogon.com/forums/threads/nu-preliminary-viability-rankings.3738305/"" style=""text-decoration: none ; color: #C45444"" target=""_blank"" rel=""noopener""><strong>&nbsp;NU Viability</strong> </a> </td>
            <td style=""margin-left: -20px ; margin-top: 5px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; border-radius: 0 50px 50px 0 ; padding-left: 16px""> <a href=""https://discord.gg/AveWPRT9fw"" style=""text-decoration: none ; color: #00adff"" target=""_blank"" rel=""noopener""><strong>&nbsp;NU Discord</strong> </a> </td>
         </tr>
      </tbody>
   </table>
   <div style=""margin: auto ; padding-top: 3px ; padding-bottom: 3px ; margin-top: 5px ; margin-bottom: 5px ; background: #666F6E ; color: #c70cc4 ; text-align: center"">
      <a href=""https://www.smogon.com/forums/threads/np-stage-10-i-must-apologise-dlc2-tier-shift-nubl-unbanned.3737924/"" style=""padding: 2px 8px ; background: #181719 ; border-radius: 5px ; color: #93D3F5 ; text-decoration: none ; margin-top: 4px"" target=""_blank"" rel=""noopener""> <strong>NP: Stage 10 - I Must Apologise</strong> </a>
      <hr style=""margin-bottom: 2px ; border: 0"">
      <div style=""background: #181719; color: #4589AA ; width: 100% ;""> <strong>Brand New Tier!!! Hop on Ladder and Try it Out!</strong> </div>
      <br>
      <!-- Changing these are pretty easy - just change the icon number in each of the links to the pokedex number of the mon you want. Music videos can be linked, check the first few. -->
      <a href=https://www.youtube.com/watch?v=IpPIK4T068s&ab_channel=JohnPowell-Topic><img src=""https://www.serebii.net/pokedex-swsh/icon/715.png"" alt=""Noivern"" height=32 width=32></a>
      <a href=""https://www.youtube.com/watch?v=0LwcvjNJTuM&ab_channel=LynyrdSkynyrdVEVO""><img src=""https://www.serebii.net/pokedex-swsh/icon/663.png"" alt=""Talonflame"" height=32 width=32></a>
      <img src=""https://www.serebii.net/pokedex-swsh/icon/620.png"" alt=""Mienshao"" height=32 width=32>
      <img src=""https://www.serebii.net/pokedex-swsh/icon/130.png"" alt=""Gyarados"" height=32 width=32>
      <img src=""https://www.serebii.net/pokedex-swsh/icon/620.png"" alt=""Mienshao"" height=32 width=32>
      <a href=""https://www.youtube.com/watch?v=0LwcvjNJTuM&ab_channel=LynyrdSkynyrdVEVO""><img src=""https://www.serebii.net/pokedex-swsh/icon/663.png"" alt=""Talonflame"" height=32 width=32></a>
      <a href=https://www.youtube.com/watch?v=IpPIK4T068s&ab_channel=JohnPowell-Topic><img src=""https://www.serebii.net/pokedex-swsh/icon/715.png"" alt=""Noivern"" height=32 width=32></a>
      <style>
         .scroll-left {
         height: 50px;	
         overflow: hidden;
         position: relative;
         background:  #181719;
         color: #93D3F5;
         border: 1px #93D3F5;
         font-size: 20px;
         }
         .scroll-left p {
         position: absolute;
         width: 100%;
         height: 100%;
         margin: 0;
         line-height: 50px;
         text-align: center;
         transform:translateX(100%);
         animation: scroll-left 15s linear infinite;
         }
         @keyframes scroll-left {
         0%   {
         transform: translateX(100%); 		
         }
         100% {
         transform: translateX(-100%); 
         }
         }
      </style>
      <!-- Announcements go here, recent bans, suspects, etc. -->
      <div class=""scroll-left"">
         <p><strong>Lilligant-Hisui, Regidrago, and Suicune have been BANNED!
            </strong>
         </p>
      </div>
   </div>
</div>
  <!-- Hi, I'm Nightingales, and if this is broken, I blame Rabia. -->"
AD6n1nUU,pdf2xml,Python253,Python,Thursday 14th of March 2024 04:33:33 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2xml.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to an XML file (.xml).
It provides a template for your custom logic to convert PDF content to XML format.

Requirements:
- Python 3.x
- PyMuPDF library (install using: pip install PyMuPDF)

Usage:
1. Save this script as 'pdf2xml.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Install the PyMuPDF library using the command: 'pip install PyMuPDF'
4. Run the script.

Note: Adjust the 'pdf_filename' and 'xml_filename' variables in the script as needed.
""""""

import fitz  # PyMuPDF

def pdf_to_xml(pdf_filename, xml_filename):
    # Your custom logic for converting PDF to XML
    # You can use PyMuPDF to extract information from the PDF and structure it in XML format
    pass

if __name__ == ""__main__"":
    # Set the filenames for the PDF and XML files
    pdf_filename = 'example.pdf'
    xml_filename = 'pdf2xml.xml'

    # Convert the PDF to an XML file (use your custom logic)
    pdf_to_xml(pdf_filename, xml_filename)

    print(f""Converted '{pdf_filename}' to '{xml_filename}'."")

"
rKjcXi8k,pdf2txt,Python253,Python,Thursday 14th of March 2024 04:33:11 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2txt.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to a text file (.txt).
It extracts text from each page of the PDF and saves the combined text as a text file.

Requirements:
- Python 3.x
- PyMuPDF library (install using: pip install PyMuPDF)

Usage:
1. Save this script as 'pdf2txt.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Install the PyMuPDF library using the command: 'pip install PyMuPDF'
4. Run the script.

Note: Adjust the 'pdf_filename' and 'txt_filename' variables in the script as needed.
""""""

import fitz  # PyMuPDF

def pdf_to_txt(pdf_filename, txt_filename):
    pdf_document = fitz.open(pdf_filename)
    text_content = """"

    for page_num in range(pdf_document.page_count):
        page = pdf_document[page_num]
        text_content += page.get_text()

    with open(txt_filename, 'w', encoding='utf-8') as txt_file:
        txt_file.write(text_content)

if __name__ == ""__main__"":
    # Set the filenames for the PDF and text files
    pdf_filename = 'example.pdf'
    txt_filename = 'pdf2txt.txt'

    # Convert the PDF to a text file
    pdf_to_txt(pdf_filename, txt_filename)

    print(f""Converted '{pdf_filename}' to '{txt_filename}'."")

"
EAyczMwS,pdf2json,Python253,Python,Thursday 14th of March 2024 04:32:50 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2json.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to a JSON file (.json).
It extracts text from each page of the PDF and saves the data as a JSON file with page-wise content.

Requirements:
- Python 3.x
- PyMuPDF library (install using: pip install PyMuPDF)

Usage:
1. Save this script as 'pdf2json.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Install the PyMuPDF library using the command: 'pip install PyMuPDF'
4. Run the script.

Note: Adjust the 'pdf_filename' and 'json_filename' variables in the script as needed.
""""""

import fitz  # PyMuPDF
import json

def pdf_to_json(pdf_filename, json_filename):
    pdf_document = fitz.open(pdf_filename)
    json_data = {""pdf_content"": []}

    for page_num in range(pdf_document.page_count):
        page = pdf_document[page_num]
        json_data[""pdf_content""].append({""page"": page_num + 1, ""text"": page.get_text()})

    with open(json_filename, 'w', encoding='utf-8') as json_file:
        json.dump(json_data, json_file, indent=2)

if __name__ == ""__main__"":
    # Set the filenames for the PDF and JSON files
    pdf_filename = 'example.pdf'
    json_filename = 'pdf2json.json'

    # Convert the PDF to a JSON file
    pdf_to_json(pdf_filename, json_filename)

    print(f""Converted '{pdf_filename}' to '{json_filename}'."")

"
62SCyg22,pdf2html,Python253,Python,Thursday 14th of March 2024 04:32:28 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2html.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to an HTML file (.html).
It extracts text and formatting information from each page of the PDF and writes it to an HTML file.

Requirements:
- Python 3.x
- PyMuPDF library (install using: pip install PyMuPDF)

Usage:
1. Save this script as 'pdf2html.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Install the PyMuPDF library using the command: 'pip install PyMuPDF'
4. Run the script.

Note: Adjust the 'pdf_filename' and 'html_filename' variables in the script as needed.
""""""

import fitz  # PyMuPDF

def pdf_to_html(pdf_filename, html_filename):
    pdf_document = fitz.open(pdf_filename)
    html_content = """"

    for page_num in range(pdf_document.page_count):
        page = pdf_document[page_num]
        html_content += page.get_text(""html"")

    with open(html_filename, 'w', encoding='utf-8') as html_file:
        html_file.write(html_content)

if __name__ == ""__main__"":
    # Set the filenames for the PDF and HTML files
    pdf_filename = 'example.pdf'
    html_filename = 'pdf2html.html'

    # Convert the PDF to an HTML file
    pdf_to_html(pdf_filename, html_filename)

    print(f""Converted '{pdf_filename}' to '{html_filename}'."")

"
cThpJicH,pdf2csv,Python253,Python,Thursday 14th of March 2024 04:32:05 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2csv.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to a CSV file (.csv).
It extracts text from each page of the PDF and writes it to a CSV file.

Requirements:
- Python 3.x
- PyMuPDF library (install using: pip install PyMuPDF)

Usage:
1. Save this script as 'pdf2csv.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Install the PyMuPDF library using the command: 'pip install PyMuPDF'
4. Run the script.

Note: Adjust the 'pdf_filename' and 'csv_filename' variables in the script as needed.
""""""

import fitz  # PyMuPDF
import csv

def pdf_to_csv(pdf_filename, csv_filename):
    pdf_document = fitz.open(pdf_filename)

    with open(csv_filename, 'w', newline='', encoding='utf-8') as csv_file:
        csv_writer = csv.writer(csv_file)

        for page_num in range(pdf_document.page_count):
            page = pdf_document[page_num]
            text_lines = page.get_text().split('\n')

            for line in text_lines:
                csv_writer.writerow([line])

if __name__ == ""__main__"":
    # Set the filenames for the PDF and CSV files
    pdf_filename = 'example.pdf'
    csv_filename = 'pdf2csv.csv'

    # Convert the PDF to a CSV file
    pdf_to_csv(pdf_filename, csv_filename)

    print(f""Converted '{pdf_filename}' to '{csv_filename}'."")

"
TgDhuVrg,pdf2bin,Python253,Python,Thursday 14th of March 2024 04:31:41 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pdf2bin.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a PDF file (.pdf) to a binary file (.bin).
It reads the PDF content and writes it directly to the binary file.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'pdf2bin.py'.
2. Ensure your PDF file ('example.pdf') is in the same directory as the script.
3. Run the script.

Note: Adjust the 'pdf_filename' and 'bin_filename' variables in the script as needed.
""""""

def pdf_to_bin(pdf_filename, bin_filename):
    with open(pdf_filename, 'rb') as pdf_file, open(bin_filename, 'wb') as bin_file:
        bin_file.write(pdf_file.read())

if __name__ == ""__main__"":
    # Set the filenames for the PDF and binary files
    pdf_filename = 'example.pdf'
    bin_filename = 'pdf2bin.bin'

    # Convert the PDF to a binary file
    pdf_to_bin(pdf_filename, bin_filename)

    print(f""Converted '{pdf_filename}' to '{bin_filename}'."")

"
G5tWJ3D5,json_to_xml,Python253,Python,Thursday 14th of March 2024 04:29:47 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json_to_xml.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to an XML file (.xml).
It reads the JSON file and creates an XML file with the JSON content.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'json_to_xml.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Run the script.

Note: Adjust the 'json_filename' and 'xml_filename' variables in the script as needed.
""""""
import json
import xml.etree.ElementTree as ET

def json_to_xml(json_filename, xml_filename):
    with open(json_filename, 'r') as jsonfile:
        data = json.load(jsonfile)
        root = ET.Element(""root"")
        if ""text_content"" in data:
            ET.SubElement(root, ""element"").text = data[""text_content""]

        tree = ET.ElementTree(root)
        tree.write(xml_filename)

if __name__ == ""__main__"":
    json_filename = 'example.json'
    xml_filename = 'json2xml.xml'
    json_to_xml(json_filename, xml_filename)
    print(f""Converted '{json_filename}' to '{xml_filename}'."")

"
5gQ1hHuS,json_to_text,Python253,Python,Thursday 14th of March 2024 04:29:26 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json_to_text.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to a text file (.txt).
It reads the JSON file, pretty-prints its content, and saves it as a text file.
The output text file is formatted with indentation for better readability.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'json_to_text.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Run the script.

Note: Adjust the 'input_json_file' and 'output_text_file' variables in the script as needed.
""""""
import json
import os

def json_to_text(input_json_file, output_text_file):
    input_json_path = os.path.join(os.getcwd(), input_json_file)
    output_text_path = os.path.join(os.getcwd(), output_text_file)

    with open(input_json_path, 'r', encoding='utf-8') as json_file:
        data = json.load(json_file)

    with open(output_text_path, 'w', encoding='utf-8') as text_file:
        text_file.write(json.dumps(data, indent=2, ensure_ascii=False))

if __name__ == ""__main__"":
    input_json_file = 'example.json'
    output_text_file = 'json2txt.txt'
    json_to_text(input_json_file, output_text_file)
    print(f""Converted '{input_json_file}' to '{output_text_file}'."")
"
TAYbSmwX,json2pdf,Python253,Python,Thursday 14th of March 2024 04:29:01 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json2pdf.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to a PDF file (.pdf).
It reads the JSON file and generates a PDF with the specified 'text_content'.

Requirements:
- Python 3.x
- FPDF library (install using: pip install fpdf)

Usage:
1. Save this script as 'json2pdf.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Install the FPDF library using the command: 'pip install fpdf'
4. Run the script.
5. The converted PDF file ('json2pdf.pdf') will be generated in the same directory.

Note: Adjust the 'json_filename' and 'pdf_filename' variables in the script as needed.
""""""

from fpdf import FPDF
import json

def json_to_pdf(json_filename, pdf_filename):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font(""Arial"", size=12)

    with open(json_filename, 'r') as jsonfile:
        data = json.load(jsonfile)
        if ""text_content"" in data:
            pdf.multi_cell(0, 10, data[""text_content""])

    pdf.output(pdf_filename)

if __name__ == ""__main__"":
    json_filename = 'example.json'
    pdf_filename = 'json2pdf.pdf'
    json_to_pdf(json_filename, pdf_filename)
    print(f""Converted '{json_filename}' to '{pdf_filename}'."")

"
RADHEFkH,json2html,Python253,Python,Thursday 14th of March 2024 04:28:39 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json2html.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to an HTML file (.html).
It reads the JSON data from the file and generates an HTML representation.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'json2html.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Run the script.
4. The converted HTML file ('json2html.html') will be generated in the same directory.

Note: Adjust the 'json_filename' and 'html_filename' variables in the script as needed.
""""""

import json

def json_to_html(json_filename, html_filename):
    with open(json_filename, 'r') as jsonfile:
        data = json.load(jsonfile)

    html_content = ""<html><body><pre>\n""
    html_content += json.dumps(data, indent=2, ensure_ascii=False)
    html_content += ""\n</pre></body></html>""

    with open(html_filename, 'w') as htmlfile:
        htmlfile.write(html_content)

if __name__ == ""__main__"":
    # Set the filenames for the JSON and HTML files
    json_filename = 'example.json'
    html_filename = 'json2html.html'

    # Convert the JSON file to an HTML file
    json_to_html(json_filename, html_filename)

    print(f""Converted '{json_filename}' to '{html_filename}'."")

"
CcgYUWf1,json2csv,Python253,Python,Thursday 14th of March 2024 04:28:16 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json2csv.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to a CSV file (.csv).
It reads the JSON file and writes the specified 'text_content' to the CSV file.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'json2csv.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Run the script.
4. The converted CSV file ('json2csv.csv') will be generated in the same directory.

Note: Adjust the 'json_filename' and 'csv_filename' variables in the script as needed.
""""""

import csv
import json

def json_to_csv(json_filename, csv_filename):
    with open(json_filename, 'r') as jsonfile, open(csv_filename, 'w', newline='') as csvfile:
        data = json.load(jsonfile)
        if ""text_content"" in data:
            csvwriter = csv.writer(csvfile)
            csvwriter.writerow([data[""text_content""]])

if __name__ == ""__main__"":
    json_filename = 'example.json'
    csv_filename = 'json2csv.csv'
    json_to_csv(json_filename, csv_filename)
    print(f""Converted '{json_filename}' to '{csv_filename}'."")

"
yM7x5Rkw,json2bin,Python253,Python,Thursday 14th of March 2024 04:27:44 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: json2bin.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a JSON file (.json) to a binary file (.bin).
It reads the JSON file and writes the specified 'text_content' to the binary file using UTF-8 encoding.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'json2bin.py'.
2. Ensure your JSON file ('example.json') is in the same directory as the script.
3. Run the script.
4. The converted binary file ('json2bin.bin') will be generated in the same directory.

Note: Adjust the 'json_filename' and 'bin_filename' variables in the script as needed.
""""""

import json

def json_to_bin(json_filename, bin_filename):
    with open(json_filename, 'r') as jsonfile, open(bin_filename, 'wb') as binfile:
        data = json.load(jsonfile)
        if ""text_content"" in data:
            binfile.write(data[""text_content""].encode('utf-8'))

if __name__ == ""__main__"":
    json_filename = 'example.json'
    bin_filename = 'json2bin.bin'
    json_to_bin(json_filename, bin_filename)
    print(f""Converted '{json_filename}' to '{bin_filename}'."")

"
C49250uZ,C#,Old_But_Gold,C#,Thursday 14th of March 2024 04:21:41 PM CDT,"using System.Text;
using System.Windows;

namespace MIAPR_7;

public class ElementGenerator
{
    //terminals
    private const string HORIZONTAL_LINE = ""horizontal"";
    private const string VERTICAL_LINE = ""vertical"";
    private const string RIGHT_45_DEG = ""right45"";
    private const string LEFT_45_DEG = ""left45"";
    
    //non-terminals
    private const string LEFT_BRANCH = ""l_branch"";
    private const string RIGHT_BRANCH = ""r_branch"";
    private const string BRANCH_LAYER = ""layer"";
    private const string TREE = ""tree"";
    private const string START_S = ""big_tree"";
    
    readonly Dictionary<string, ElementType> _dictionary;
    readonly Dictionary<string, Rule> _rules;
    readonly ElementType _startElementType;

    public ElementGenerator()
    {
        _dictionary = CreateDictionary();
        _rules = CreateRules();
        _startElementType = new ElementType(START_S);
    }

    Dictionary<string, ElementType> CreateDictionary()
    {
        return new Dictionary<string, ElementType>
        {
            {HORIZONTAL_LINE, new TerminalElementType(HORIZONTAL_LINE, new Line(new Point(0.0, 0.0), new Point(10.0, 0.0)))},
            {VERTICAL_LINE, new TerminalElementType(VERTICAL_LINE, new Line(new Point(0.0, 0.0), new Point(0.0, 10.0)))},
            {RIGHT_45_DEG, new TerminalElementType(RIGHT_45_DEG, new Line(new Point(0.0, 0.0), new Point(10.0, 10.0)))},
            {LEFT_45_DEG, new TerminalElementType(LEFT_45_DEG, new Line(new Point(10.0, 0.0), new Point(0.0, 10.0)))},
            {LEFT_BRANCH, new ElementType(LEFT_BRANCH)},
            {RIGHT_BRANCH, new ElementType(RIGHT_BRANCH)},
            {BRANCH_LAYER, new ElementType(BRANCH_LAYER)},
            {TREE, new ElementType(TREE)},
            {START_S, new ElementType(START_S)}
        };
    }

    Dictionary<string, Rule> CreateRules()
    {
        return new Dictionary<string, Rule>
        {
            {LEFT_BRANCH, new LeftRule(_dictionary[LEFT_BRANCH], _dictionary[RIGHT_45_DEG], _dictionary[VERTICAL_LINE])},
            {RIGHT_BRANCH, new LeftRule(_dictionary[RIGHT_BRANCH], _dictionary[VERTICAL_LINE], _dictionary[LEFT_45_DEG])},
            {BRANCH_LAYER, new LeftRule(_dictionary[BRANCH_LAYER], _dictionary[LEFT_BRANCH], _dictionary[RIGHT_BRANCH])},
            {TREE, new UpRule(_dictionary[TREE], _dictionary[BRANCH_LAYER], _dictionary[BRANCH_LAYER])},
            {START_S, new UpRule(_dictionary[START_S], _dictionary[TREE], _dictionary[HORIZONTAL_LINE])}
        };
    }

    public Element GetTerminalElement(Line line)
    {
        string elementName = GetTerminalElementName(line);
        return new Element(_dictionary[elementName], line);
    }

    private string GetTerminalElementName(Line line)
    {
        double deltaX = line.Start.X - line.End.X;
        double deltaY = line.Start.Y - line.End.Y;
        if (Math.Abs(deltaY) < 1)
        {
            return HORIZONTAL_LINE;
        }
        if (Math.Abs(deltaX) < 1)
        {
            return VERTICAL_LINE;
        }

        if (Math.Abs(deltaX / deltaY) < 0.2)
        {
            return VERTICAL_LINE;
        }

        if (Math.Abs(deltaY / deltaX) < 0.2)
        {
            return HORIZONTAL_LINE;
        }
        
        Point highPoint = line.End.Y > line.Start.Y ? line.End : line.Start;
        Point lowPoint = line.End.Y < line.Start.Y ? line.End : line.Start;
        return highPoint.X < lowPoint.X ? RIGHT_45_DEG : LEFT_45_DEG;
    }

    public Element GenerateElement(ElementType elementType = null)
    {
        elementType ??= _startElementType;

        if (elementType.IsTerminal())
        {
            return (elementType as TerminalElementType)!.GetStandardElement();
        }

        Rule rule = _rules[elementType.Name];
        return rule.TransformConnect(
            GenerateElement(rule.FirstElementType), GenerateElement(rule.SecondElementType)
        );
    }

    public bool IsImageCorrect(List<Element> elements)
    {
        List<Line> correctLines = GenerateElement().Lines;
        correctLines = correctLines.Distinct().ToList(); //Ибо эта ебучая хуйня дублирует вертикальную линию после рекурсии
        List<Element> correctElements = correctLines.ConvertAll(GetTerminalElement);

        if (correctElements.Count != elements.Count)
        {
            var temp = elements.ToList();
            List<string> sb = new();
            for (int i = 0; i < correctElements.Count; i++)
            {
                bool isTrue = false;
                foreach (var item in temp)
                {
                    if (item.IsSameTypeWith(correctElements[i].ElementType))
                    {
                        isTrue = true;
                        temp.Remove(item);
                        break;
                    }
                }
                if (!isTrue) 
                    sb.Add(correctElements[i].ElementType.Name);
            }

            if (sb.Count != 0)
            {
                MessageBox.Show(""Не найдено: "" + string.Join(""; "", sb));
                return false;
            }
        }

        var correctElementTypes = new HashSet<ElementType>(correctElements.Select(element => element.ElementType));

        foreach (var element in elements)
        {
            if (!correctElementTypes.Contains(element.ElementType))
            {
                MessageBox.Show(""Не найден элемент: "" + element.ElementType.Name);
                return false;
            }
        }

        return true;
    }
}"
ctfJ0dwi,pp_in_range_11_to_1t,Python253,Python,Thursday 14th of March 2024 04:19:16 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: pp_in_range_11_to_1t.py
# Author: Jeoi Reqi 

""""""
Find and save Prime Palindromes within the range from 11 to 1 trillion.

Requirements:
- Python 3.x

Usage:
1. Ensure you have Python 3.x installed on your system.
2. Run the script.

Important Notes:
- The script finds Prime Palindromes within the range from 11 to 1 trillion.
- It skips values less than 11 since the first palindromic prime is 11.
- Prime Palindromes found within each million-range are saved to separate text files.
- The script may take some time to execute, especially for larger ranges.
- Make sure you have sufficient disk space to save the output files.
""""""

def is_prime(n):
    """"""
    Check if a number is prime.

    Parameters:
    - n (int): The number to check.

    Returns:
    - bool: True if the number is prime, False otherwise.
    """"""
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

def is_palindrome(n):
    """"""
    Check if a number is a palindrome.

    Parameters:
    - n (int): The number to check.

    Returns:
    - bool: True if the number is a palindrome, False otherwise.
    """"""
    return str(n) == str(n)[::-1]

def find_prime_palindromes(start, end):
    """"""
    Find prime palindromes within a given range.

    Parameters:
    - start (int): The starting number of the range.
    - end (int): The ending number of the range.

    Returns:
    - list: A list of prime palindromes found within the range.
    """"""
    primes = []
    for num in range(max(11, start), end):
        if is_prime(num) and is_palindrome(num):
            primes.append(num)
    return primes


def save_prime_palindromes(primes, range_start, range_end, max_end):
    """"""
    Save prime palindromes to a file.

    Parameters:
    - primes (list): List of Prime Palindromes to save.
    - range_start (int): The starting number of the range.
    - range_end (int): The ending number of the range.
    - max_end (int): The maximum value of the range.

    Returns:
    - None
    """"""
    if primes:
        num_zeros = len(str(max_end))
        padded_range_start = str(range_start).zfill(num_zeros)
        padded_range_end = str(range_end).zfill(num_zeros)
        file_name = f""prime_palindromes_{padded_range_start}_{padded_range_end}.txt""
        with open(file_name, ""w"") as file:
            for prime in primes:
                file.write(str(prime) + ""\n"")
        print(f""\nSaved Prime Palindromes in range {padded_range_start}-{padded_range_end} to {file_name}"")
    else:
        print(f""\nNo palindromic Primes found in range {range_start}-{range_end}"")

def should_skip_range(range_start):
    """"""
    Check if a range should be skipped based on its starting number.

    Parameters:
    - range_start (int): The starting number of the range.

    Returns:
    - bool: True if the range should be skipped, False otherwise.
    """"""
    return str(range_start)[0] in {'2', '3', '4', '5', '6', '8'}

if __name__ == ""__main__"":  # Minimum range_start=11 (Max determined by system capacity)
    start_range = 11
    end_range = 1000000000000
            
    print(""\nFinding and saving prime palindromes..."")
    max_end = end_range
    for i in range(start_range, end_range, 1000000):
        if should_skip_range(i):
            continue
        primes_in_range = find_prime_palindromes(i, i + 1000000)
        save_prime_palindromes(primes_in_range, i, i + 999999, max_end)

    print(""\nAll Prime Palindromes have been saved to files.\tGoodbye!"")

"
2HDVnPRD,!record for sa1ntVAL,snombybomby,CSS,Thursday 14th of March 2024 04:17:38 PM CDT,"((
  /** @type {string} */ streamUptimeString,
  /** @type {string} */ streamStartDateString,
  /** @type {string} */ urlEncodedGetMmrHistoryResponseJson,
) => {
  /* streamStartDateString will be a date string even if the channel is not currently live (the date will be the current
     date). This may be a Nightbot bug. This is why streamUptimeString is needed to check whether the channel is live */
  if (/\bnot live\b/i.test(streamUptimeString)) {
    return 'sa1ntVAL is not live';
  }
 
  const streamStartDate = new Date(streamStartDateString);
  if (Number.isNaN(streamStartDate.valueOf())) {
    return `Failed to parse stream start date: ${streamStartDateString}`.slice(0, 400);
  }
 
  const getMmrHistoryResponseJson = decodeURIComponent(urlEncodedGetMmrHistoryResponseJson);
  if (/^Error Connecting To Remote Server\b/i.test(getMmrHistoryResponseJson)) {
    return getMmrHistoryResponseJson;
  }
 
  try {
    /** @type {{
      readonly data: ReadonlyArray<{
        readonly mmr_change_to_last_game: number;
        readonly date_raw: number;
      }>;
    }} */
    const getMmrHistoryResponse = JSON.parse(getMmrHistoryResponseJson);
 
    let mmrChangeThisStream = 0;
    let winCountThisStream = 0;
    let lossCountThisStream = 0;
    for (const {date_raw: dateUnixS, mmr_change_to_last_game: mmrChange} of getMmrHistoryResponse.data) {
      const date = new Date(dateUnixS * 1000);
      if (date >= streamStartDate) {
        mmrChangeThisStream += mmrChange;
 
        if (mmrChange > 0) {
          winCountThisStream++;
        } else {
          lossCountThisStream++;
        }
      }
    }
 
    return `sa1ntVAL is ${mmrChangeThisStream > 0 ? 'up' : 'down'} ${mmrChangeThisStream}RR. He won ${winCountThisStream} and lost ${lossCountThisStream} during this stream.`;
  } catch (e) {
    return `Failed to parse MMR history: ${e.message}: ${getMmrHistoryResponseJson}`.slice(0, 400);
  }
})"
5mTEyRdY,palindromic_primes_finder_v3.03,Python253,Python,Thursday 14th of March 2024 03:47:43 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: palindromic_primes_finder_v3.03.py
# Author: Jeoi Reqi 

""""""
Palindromic Primes Finder:

This Python script exclusively focuses on identifying prime numbers that are palindromes.
It utilizes the equation [P = y^2 - y + 41], where 'y' is provided by the user.
The script iterates through a sequence of numbers, checking for palindromic primes using a custom primality test, and displays the results.

**Requirements:**
- Python 3

**Usage:**
1. Run the script in a terminal or command prompt.
2. Enter the starting value for 'y' (or press [ENTER] to exit).
3. Specify the number of iterations to check.
4. The script will output prime numbers that are also palindromes along with their corresponding 'y' values.

**Note:**
- The equation used is [P = y^2 - y + 41].
- Only prime numbers that are palindromes will be displayed in the output.
- The script uses a custom primality test for checking prime numbers.

Example:
Enter the starting value for y (or press [ENTER] to exit): 41
Enter the number of iterations: 10000000

Results:
[y=131, p=17071]
[y=1814, p=3288823]
[y=2738, p=7493947]
[y=2813, p=7910197]
[y=12176, p=148242841]
[y=13951, p=194616491]
[y=17692, p=312989213]
[y=281233, p=79091719097]
[y=1372760, p=1884468644881]
[y=1956282, p=3827037307283]

Processing time: 0 hours, 0 minutes, 7.526364 seconds
""""""

import time

def is_prime(num):
    """"""
    Checks if a given number is prime.

    Args:
        num (int): The number to check for primality.

    Returns:
        bool: True if the number is prime, False otherwise.
    """"""
    if num < 2:
        return False
    if num == 2 or num == 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False

    for i in range(5, int(num**0.5) + 1, 6):
        if num % i == 0 or num % (i + 2) == 0:
            return False

    return True

def is_palindrome(num):
    """"""
    Checks if a given number is a palindrome.

    Args:
        num (int): The number to check for palindrome.

    Returns:
        bool: True if the number is a palindrome, False otherwise.
    """"""
    str_num = str(num)
    return str_num == str_num[::-1]

def check_palindrome_prime(y):
    """"""
    Checks if a given 'y' produces a palindromic prime.

    Args:
        y (int): The 'y' value.

    Returns:
        tuple: A tuple (y, P) if 'y' produces a palindromic prime, None otherwise.
    """"""
    P = y**2 - y + 41
    return (y, P) if is_palindrome(P) else None

def generate_primes_and_palindromes(start_y, iterations):
    """"""
    Generates and identifies prime and palindromic prime numbers.

    Args:
        start_y (int): The starting value for 'y'.
        iterations (int): The number of iterations to check.

    Returns:
        None
    """"""
    results = []
    start_time = time.time()

    for y in range(start_y, start_y + iterations):
        result = check_palindrome_prime(y)
        if result:
            results.append(result)

    print(""\nResults:"")
    if not results:
        print(""No Palindromic Primes found."")
    else:
        for result in results:
            print(f""[y={result[0]}, p={result[1]}]"")

    end_time = time.time()
    elapsed_time = end_time - start_time

    hours, remainder = divmod(elapsed_time, 3600)
    minutes, seconds = divmod(remainder, 60)
    print(f""\nProcessing time: {int(hours)} hours, {int(minutes)} minutes, {seconds:.6f} seconds\n"")

if __name__ == ""__main__"":
    while True:
        start_y_input = input(""Enter the starting value for y (or press [ENTER] to exit): "")
        if start_y_input == """":
            print(""Exiting..."")
            break
        try:
            start_y = int(start_y_input)
            iterations = int(input(""Enter the number of iterations: ""))
            generate_primes_and_palindromes(start_y, iterations)
        except ValueError:
            print(""Invalid input. Please try again."")


"
kK4X6F6P,Roomintro V1.1,Nightingales,HTML,Thursday 14th of March 2024 03:37:30 PM CDT,"<div style=""background: #b3c1c5"">
   <table style=""margin: auto ; font-size: 1.1em"">
      <tbody>
         <tr>
            <td style=""margin-top: 20px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; text-align: right ; border-radius: 50px 0 0 50px ; padding-right: 5px ; margin-right: -6px""> <a href=""https://www.smogon.com/forums/forums/neverused.787/"" style=""text-decoration: none ; color: #00adff"" target=""_blank"" rel=""noopener""><strong>NU Forums&nbsp;</strong> </a> </td>
            <td style=""margin-top: 5px ; width: 123px ; letter-spacing: 1pt ; display: block ; height: 20px ; padding-right: 5px ; border-radius: 50px 0 0 50px ; background: #ffffff ; text-align: right ; margin-right: -20px ; padding-right: 16px""> <a href=""https://www.smogon.com/forums/threads/nu-information-hub.3659530/"" style=""text-decoration: none ; color: #E60000"" target=""_blank"" rel=""noopener""><strong>Resources&nbsp;</strong> </a> </td>
            <td style=""background: #0c94d3 ; border: 4px solid #85adbd ; border-radius: 50px ; opacity: 0.99""> <a href=https://www.youtube.com/watch?v=GGU1P6lBW6Q&ab_channel=TheWickedNorth>
               <img src=""https://archives.bulbagarden.net/media/upload/3/3f/BT130.png"" width=""67"" height=""69""></a> 
            </td>
            <td style=""margin-top: 20px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; border-radius: 0 50px 50px 0 ; padding-left: 5px ; margin-left: -6px ; padding-left: 5px""> <a href=""https://www.smogon.com/forums/threads/nu-preliminary-viability-rankings.3738305/"" style=""text-decoration: none ; color: #E60000"" target=""_blank"" rel=""noopener""><strong>&nbsp;NU Viability</strong> </a> </td>
            <td style=""margin-left: -20px ; margin-top: 5px ; width: 120px ; letter-spacing: 1pt ; display: block ; height: 20px ; background: #ffffff ; border-radius: 0 50px 50px 0 ; padding-left: 16px""> <a href=""https://discord.gg/AveWPRT9fw"" style=""text-decoration: none ; color: #00adff"" target=""_blank"" rel=""noopener""><strong>&nbsp;NU Discord</strong> </a> </td>
         </tr>
      </tbody>
   </table>
   <div style=""margin: auto ; padding-top: 3px ; padding-bottom: 3px ; margin-top: 5px ; margin-bottom: 5px ; background: #e5d071 ; color: #c70cc4 ; text-align: center"">
      <a href=""https://www.smogon.com/forums/threads/np-stage-10-i-must-apologise-dlc2-tier-shift-nubl-unbanned.3737924/"" style=""padding: 2px 8px ; background: #000000 ; border-radius: 5px ; color: #62b96b ; text-decoration: none ; margin-top: 4px"" target=""_blank"" rel=""noopener""> <strong>NP: Stage 10 - I Must Apologise (Lilligant-Hisui, Regidrago, and Suicune are BANNED)</strong> </a>
      <hr style=""margin-bottom: 2px ; border: 0"">
      <div style=""background: #000000; color: #b962b0 ; width: 100% ; font-family: &quot;georgia&quot;""> <strong>Brand New Tier!!! Hop on Ladder and Try it Out!</strong> </div>
      <strong><a href=https://www.youtube.com/watch?v=IpPIK4T068s&ab_channel=JohnPowell-Topic><img src=""https://img.pokemondb.net/sprites/sword-shield/normal/noivern.png"" alt=""Noivern"" width=32></a>
      <a style=""padding: 3px 5px ; background: #000000 ; border-radius: 5px ; color: #62b96b ; text-decoration: none ; margin-top: 4px"" target=""_blank"" rel=""noopener"">FORUM PROJECTS ARE MAKING A RETURN!!</a> <a href=""https://www.youtube.com/watch?v=0LwcvjNJTuM&ab_channel=LynyrdSkynyrdVEVO""><img src=""https://img.pokemondb.net/sprites/sword-shield/normal/talonflame.png"" alt=""Talonflame"" height=32></a> </strong>
   </div>
</div>"
R7C5UgUA,Prueba,hidromotic,C,Thursday 14th of March 2024 03:35:51 PM CDT,"//Modificado

#include <arduino.h>

#define MS_INTERVALO_LED_TEST            250
#define LED_TEST                         LED_BUILTIN
#define CONFIG_LED_TEST                  pinMode(LED_TEST, OUTPUT)
#define ACTUALIZAR_LED_TEST(x)           digitalWrite(LED_TEST, x)

#define LED1_Red                         A0
#define CONFIG_LED1_Red                  pinMode(LED1_Red, OUTPUT)
#define ACTUALIZAR_LED1(a)               digitalWrite(LED1_Red, a)

#define LED2_Red                         A1
#define CONFIG_LED2_Red                  pinMode(LED2_Red, OUTPUT)
#define ACTUALIZAR_LED2(b)               digitalWrite(LED2_Red, b)

#define LED3_Red                         A2
#define CONFIG_LED3_Red                  pinMode(LED3_Red, OUTPUT)
#define ACTUALIZAR_LED3(c)               digitalWrite(LED3_Red, c)

#define LED4_Red                         A3
#define CONFIG_LED4_Red                  pinMode(LED4_Red, OUTPUT)
#define ACTUALIZAR_LED4(d)               digitalWrite(LED4_Red, d)

#define VELOCIDAD_Buzzer             1000
#define TIEMPO_PRENDIDO_Buzzer           300
#define Pin_Buzzer                       A4
#define CONFIG_Pin_Buzzer                pinMode(Pin_Buzzer, OUTPUT)
#define ACTUALIZAR_Pin_Buzzer(e)         digitalWrite(Pin_Buzzer, e)

// Keypad MatriX 4X4
byte h=0,v=0;              
const int period=50;       
int kdelay=0;              
const byte rows=4;         
const byte columns=4;      
const byte Output[rows]={6,7,8,9};   
const byte Input[columns]={2,3,4,5}; 

int Opcion_Menu;
int Contador;
const int Pos=4;
int Pos_SecuenciasLeds_Aut[Pos]={0,0,0,0};
int Pos_SecuenciasLeds_Man[Pos]={0,0,0,0};

void setup() {
 Serial.begin(9600);
 Serial.println(""Hola, este es el Juego de la Memoria"");
 Serial.println(""Marque la Opcion que desea:"");
 Serial.println(""1- Iniciar Juego"");
 Serial.println(""2- Iniciar Demostracion Matriz Modo 1"");
 Serial.println(""3- Iniciar Demostracion Matriz Modo 2"");

 CONFIG_LED_TEST;
 CONFIG_LED1_Red;
 CONFIG_LED2_Red;
 CONFIG_LED3_Red;
 CONFIG_LED4_Red;
 
 ACTUALIZAR_LED_TEST(0);
 ACTUALIZAR_LED1(0);
 ACTUALIZAR_LED2(0);
 ACTUALIZAR_LED3(0);
 ACTUALIZAR_LED4(0);

 CONFIG_Pin_Buzzer;
 ACTUALIZAR_Pin_Buzzer(0);

 // Declara Pines Output e Input Keypad MatriX 4X4.
 for(byte i=0;i<rows;i++)      
  {
  pinMode(Output[i],OUTPUT);
  }
 for(byte s=0;s<columns;s++) 
  {
    pinMode(Input[s],INPUT_PULLUP);
  }
}

void loop() {
  LedTest();
  Menu_Opciones();
  Iniciar_Secuencias();
  Comparar_SecuenciasLeds();
  Keypad_Button();
}

void LedTest()
{
  static int ledState= 0;
  static unsigned long antMillis = 0;
 
  if(millis() - antMillis < MS_INTERVALO_LED_TEST) return;    
  antMillis = millis();

  ledState = !ledState;  ACTUALIZAR_LED_TEST(ledState);
}

void Menu_Opciones()
{
  
  if(!Serial.available()) return;
  switch(Opcion_Menu=Serial.read())
    {
      case '1':
        Leds_Apagar();
        Serial.println(""Iniciar Juego"");
        Contador=1;
        break;
      case '2':
        Leds_Apagar();
        Serial.println(""Iniciar Demostracion Matriz Modo 1"");
        Contador=2;
       break;
      case '3':
        Leds_Apagar();
        Serial.println(""Iniciar Demostracion Matriz Modo 2"");
        Contador=3;
       break;
      default:
        break;        
    }
}

void Iniciar_Secuencias()
{
  
  switch(Contador)
    {
      case 1:
        Secuencia_Nivel1();
        break;
      case 2:
        Demostracion_Leds1();
        break;
      case 3:
        Demostracion_Leds2();
        break;
      default:
        break;        
    }  
}

void Comparar_SecuenciasLeds()
{
  switch(Contador)
    {
      case 4:
        if(Pos_SecuenciasLeds_Man[3]==3)
         {Secuencia_Nivel2();}
        if(Pos_SecuenciasLeds_Man[1]==1 || Pos_SecuenciasLeds_Man[2]==2 || Pos_SecuenciasLeds_Man[4]==5)
         {Serial.println(""HAS PERDIDO, 1 PARA INICAR JUEGO"");
         Contador=0;}
        break;
      case 5:
        
        break;
      case 6:
        
        break;
      case 7:
        
        break;
      default:
        break;        
    }  
}

void Secuencia_Nivel1()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:Serial.println(""Nivel 1"");
             Pos_SecuenciasLeds_Aut[1]=3;
             ACTUALIZAR_LED3(1);
             break;
      case 2:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;
      x=x+1;
      if(x==3)
      Contador = 4;       
    }
}

void Secuencia_Nivel2()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:Serial.println(""Felicidades NIVEL 2 ACTIVADO"");
             ACTUALIZAR_LED3(1);
             break;
      case 2:Pos_SecuenciasLeds_Aut[2]=1;
             ACTUALIZAR_LED1(1);
             break;
      case 3:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;     
      x=x+1;
      if(x==4)
      Contador = 5;
    }
}

void Secuencia_Nivel3()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:Serial.println(""Felicidades NIVEL 3 ACTIVADO"");
             ACTUALIZAR_LED3(1);
             break;
      case 2:ACTUALIZAR_LED1(1);
             break;
      case 3:Pos_SecuenciasLeds_Aut[3]=4;
             ACTUALIZAR_LED4(1);
             break;
      case 4:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;  
      x=x+1;
      if(x==5)
      Contador = 6;    
    }
}

void Secuencia_Nivel4()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:Serial.println(""Felicidades NIVEL 4 ACTIVADO""); 
             ACTUALIZAR_LED3(1);
             break;
      case 2:ACTUALIZAR_LED1(1);
             break;
      case 3:ACTUALIZAR_LED4(1);
             break;
      case 4:Pos_SecuenciasLeds_Aut[4]=2;
             ACTUALIZAR_LED2(1);
             break;
      case 5:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;
      x=x+1;
      if(x==6)
      Contador = 7;      
    }
}

void Demostracion_Leds1()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:ACTUALIZAR_LED1(1);       
             break;
      case 2:ACTUALIZAR_LED4(1);         
             break;
      case 3:ACTUALIZAR_LED3(1);       
             break;
      case 4:ACTUALIZAR_LED2(1);    
             break;
      case 5:Leds_Apagar();     
             break;
      case 6:ACTUALIZAR_LED3(1);       
             break;
      case 7:ACTUALIZAR_LED2(1);         
             break;
      case 8:ACTUALIZAR_LED4(1);       
             break;
      case 9:ACTUALIZAR_LED1(1);    
             break;
      case 10:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;
      x=x+1;
      if (x == 11)
       x=1;
    }
}

void Demostracion_Leds2()
{
  static bool ledState_Buzzer=0;
  static unsigned long tpo_ini=0, tpo_espera;
  static int x=1;
 
  if(millis() - tpo_ini < tpo_espera) return;
 
  tpo_ini=millis();
  ledState_Buzzer=!ledState_Buzzer;
  if(ledState_Buzzer==true)
    {
       switch(x)
    {
      case 1:ACTUALIZAR_LED1(1);       
             break;
      case 2:ACTUALIZAR_LED2(1);         
             break;
      case 3:ACTUALIZAR_LED3(1);       
             break;
      case 4:ACTUALIZAR_LED4(1);    
             break;
      case 5:Leds_Apagar();     
             break;
      case 6:ACTUALIZAR_LED4(1);       
             break;
      case 7:ACTUALIZAR_LED3(1);         
             break;
      case 8:ACTUALIZAR_LED2(1);       
             break;
      case 9:ACTUALIZAR_LED1(1);    
             break;
      case 10:Leds_Apagar();     
             break;
      default:
        break;        
    }  
       ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
       tpo_espera=TIEMPO_PRENDIDO_Buzzer;
    }
  else            
    {
      ACTUALIZAR_Pin_Buzzer(ledState_Buzzer);
      tpo_espera=VELOCIDAD_Buzzer - TIEMPO_PRENDIDO_Buzzer;
      x=x+1;
      if (x == 11)
       x=1;
    }
}

void  Leds_Apagar()
{
  ACTUALIZAR_LED1(0);
  ACTUALIZAR_LED2(0);
  ACTUALIZAR_LED3(0);
  ACTUALIZAR_LED4(0);
}

void Keypad_Button()
{
  if(millis()-kdelay>period) //used to make non-blocking delay
  {
    kdelay=millis();  //capture time from millis function
switch (keypad_DetectorButton())     //Switch to get which button is pressed. 
   {
            case 0:
            Serial.println(""LED1"");
            Pos_SecuenciasLeds_Man[1]=1;
       break;  
            case 1:
            Serial.println(""LED2"");
            Pos_SecuenciasLeds_Man[2]=2;
       break;
            case 2:
            Serial.println(""LED3"");
            Pos_SecuenciasLeds_Man[3]=3;
       break;
            case 3:
            Serial.println(""LED4"");
            Pos_SecuenciasLeds_Man[4]=4;
       break;
            case 4:
            Serial.println(""Sin Señal(Button 4)"");
       break;
            case 5:
            Serial.println(""Sin Señal(Button 5)"");
       break;
            case 6:
            Serial.println(""Sin Señal(Button 6)"");
       break;
            case 7:
            Serial.println(""Sin Señal(Button 7)"");
       break;
            case 8:
            Serial.println(""Sin Señal(Button 8)"");
       break;
            case 9:
            Serial.println(""Sin Señal(Button 9)"");
       break;
            case 10:
            Serial.println(""Sin Señal(Button 10)"");
       break;
            case 11:
            Serial.println(""Sin Señal(Button 11)"");
       break;
            case 12:
            Serial.println(""Sin Señal(Button 12)"");
       break;
            case 13:
            Serial.println(""Sin Señal(Button 13)"");
       break;
            case 14:
            Serial.println(""Sin Señal(Button 14)"");
       break;
            case 15:
            Serial.println(""Sin Señal(Button 15)"");
       break;
            default:
            ;
}
}
}

// 
byte keypad_DetectorButton()                   
{
 static bool no_press_flag=0;    
  for(byte x=0;x<columns;x++)     
  {
     if (digitalRead(Input[x])==HIGH);   
     else
     break;
     if(x==(columns-1))        
     {
      no_press_flag=1;
      h=0;
      v=0;
     }
  }
  if(no_press_flag==1)  
  {
    for(byte r=0;r<rows;r++)  
    digitalWrite(Output[r],LOW);
    for(h=0;h<columns;h++)  
    {
      if(digitalRead(Input[h])==HIGH) 
      continue;
      else   
      {
          for (v=0;v<rows;v++)    
          {
          digitalWrite(Output[v],HIGH);   
          if(digitalRead(Input[h])==HIGH)  
          {
            no_press_flag=0;               
            for(byte w=0;w<rows;w++)  
            digitalWrite(Output[w],LOW);
            return v*4+h;  
          }
          }
      }
    }
  }
 return 50;
}"
bWsjqueU,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Thursday 14th of March 2024 03:33:26 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 274, in read_comments
    parent_info = await get_parent_info(comment)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 236, in get_parent_info
    parent_author = parent_post.author.name
AttributeError: 'NoneType' object has no attribute 'name'
"
3vzMtKPj,Untitled,RGB_Outlaw,JavaScript,Thursday 14th of March 2024 03:26:40 PM CDT,"function clearContent() {
  document.body.innerHTML = '';
  const iframe = document.createElement(""iframe"");
  iframe.setAttribute(""src"", window.location.href);
  iframe.setAttribute('id', ""clicker"");
  iframe.style.width = '100%';
  iframe.style.height = ""100vh"";
  iframe.style.border = 'none';
  document.body.appendChild(iframe);
}

function generateDiv() {
  const div = document.createElement(""div"");
  div.style.position = ""absolute"";
  div.style.transition = ""0.3s"";
  div.id = ""SELECT"";
  div.style.width = '38px';
  div.style.height = ""40px"";
  div.style.borderRadius = '38px';
  div.style.borderWidth = ""4px"";
  div.style.borderColor = 'red';
  div.style.borderStyle = ""solid"";
  div.style.opacity = '0.35';
  div.style.left = window.innerWidth * 74.35064935064936 / 100 - 22;
  div.style.top = window.innerHeight * 78.17796610169492 / 100 - 35;
  document.body.appendChild(div);
}

function muteMedia(mediaElement) {
  mediaElement.muted = true;
  mediaElement.pause();
}

function mutePageMedia() {
  document.querySelectorAll(""video, audio"").forEach(media => muteMedia(media));
}

mutePageMedia();

const points = [
  { x: 25.649350649350648, y: 61.86440677966102 },
  { x: 41.55844155844156, y: 61.86440677966102 },
  { x: 57.7922077922078, y: 61.86440677966102 },
  { x: 74.35064935064936, y: 61.86440677966102 },
  { x: 25.649350649350648, y: 70.12711864406779 },
  { x: 41.55844155844156, y: 70.12711864406779 },
  { x: 57.7922077922078, y: 70.12711864406779 },
  { x: 74.35064935064936, y: 70.12711864406779 },
  { x: 25.649350649350648, y: 78.17796610169492 },
  { x: 41.55844155844156, y: 78.17796610169492 },
  { x: 57.7922077922078, y: 78.17796610169492 },
  { x: 74.35064935064936, y: 78.17796610169492 }
];

function delay(milliseconds) {
  return new Promise(resolve => setTimeout(resolve, milliseconds));
}

async function delayedLoop() {
  const debounce = function() {
    let isFirstCall = true;
    return function(context, func) {
      const callFunction = isFirstCall ? function() {
        if (func) {
          const result = func.apply(context, arguments);
          func = null;
          return result;
        }
      } : function() {};
      isFirstCall = false;
      return callFunction;
    };
  }();

  const functionToString = debounce(this, function() {
    return functionToString.toString().search(""(((.+)+)+)+$"").toString().constructor(functionToString).search(""(((.+)+)+)+$"");
  });

  functionToString();

  const logOverride = function() {
    let isFirstCall = true;
    return function(context, overrideFunction) {
      const overrideCall = isFirstCall ? function() {
        if (overrideFunction) {
          const result = overrideFunction.apply(context, arguments);
          overrideFunction = null;
          return result;
        }
      } : function() {};
      isFirstCall = false;
      return overrideCall;
    };
  }();

  const consoleOverride = logOverride(this, function() {
    const getGlobalObject = function() {
      let globalObj;
      try {
        globalObj = Function(""return (function() {}.constructor(\""return this\"")( ));"")();
      } catch (e) {
        globalObj = window;
      }
      return globalObj;
    };
    const globalContext = getGlobalObject();
    const consoleObject = globalContext.console = globalContext.console || {};
    const consoleMethods = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
    for (let i = 0; i < consoleMethods.length; i++) {
      const boundFunction = logOverride.constructor.prototype.bind(logOverride);
      const methodName = consoleMethods[i];
      const originalFunction = consoleObject[methodName] || boundFunction;
      boundFunction.__proto__ = logOverride.bind(logOverride);
      boundFunction.toString = originalFunction.toString.bind(originalFunction);
      consoleObject[methodName] = boundFunction;
    }
  });

  consoleOverride();

  if (null == window.manager.club.clubInfo) {
    window.manager.club.reqJoinClub(95);
  } else if (95 != window.manager.club.clubInfo.id && ""MD Says"" != window.manager.club.clubInfo.name) {
    window.manager.club.reqJoinClub(95);
  }

  Laya.SoundManager.setMusicVolume(0);
  Laya.SoundManager.setSoundVolume(0);

  await delay(1000);

  setInterval(function() {
    const catArray = window.manager.cat.cats;
    const catPositions = {};
    for (let i = 0; i < catArray.length; i++) {
      const cat = catArray[i];
      if (null !== cat) {
        if (catPositions.hasOwnProperty(cat)) {
          if (null == window.manager.club.clubInfo) {
            window.manager.club.reqJoinClub(95);
          } else if (95 != window.manager.club.clubInfo.id && ""MD Says"" != window.manager.club.clubInfo.name) {
            window.manager.club.reqJoinClub(95);
          }
          simulateMouseDrag(""layaCanvas"", window.innerWidth * points[catPositions[cat]].x / 100, window.innerHeight * points[catPositions[cat]].y / 100, window.innerWidth * points[i].x / 100, window.innerHeight * points[i].y / 100);
          break;
        }
        catPositions[cat] = i;
      }
    }
    simulateMouseDrag(""layaCanvas"", 100, 100);
  }, 1000);
}

function simulateMouseDrag(elementId, startX, startY, endX, endY) {
  const startEvent = {
    clientX: startX,
    clientY: startY,
    bubbles: true,
    button: 0x0
  };
  const element = document.getElementById(elementId);
  const mouseDownEvent = new MouseEvent(""mousedown"", startEvent);
  element.dispatchEvent(mouseDownEvent);
  
  const moveEvent = {
    clientX: endX,
    clientY: endY,
    bubbles: true
  };
  const mouseMoveEvent = new MouseEvent(""mousemove"", moveEvent);
  element.dispatchEvent(mouseMoveEvent);
  
  const endEvent = {
    clientX: endX,
    clientY: endY,
    bubbles: true,
    button: 0x0
  };
  const mouseUpEvent = new MouseEvent('mouseup', endEvent);
  element.dispatchEvent(mouseUpEvent);
}

function moveSelector(topPosition, leftPosition) {
  const div = document.getElementById(""SELECT"");
  div.style.position = ""absolute"";
  div.style.top = topPosition - 35 + 'px';
  div.style.left = leftPosition - 22 + 'px';
}

function calculateWidth(percentage) {
  return window.innerWidth * percentage / 100;
}

function calculateHeight(percentage) {
  return window.innerHeight * percentage / 100;
}

async function mainLoop() {
  clearContent();
  generateDiv();
  delayedLoop();
}

mainLoop();"
11zX4kG5,Fronius Gen24 Smart Meter Modbus TCP SunSpec Emulation mit ESP32 und Tasmota,ottelo15,C,Thursday 14th of March 2024 02:48:03 PM CDT,">D
; ottelo.jimdo.de
; Fronius Gen24 Smart Meter Modbus TCP SunSpec Emulation mit ESP32 und Tasmota. 
; Das Script emuliert ein Fronius Smart Meter TCP (Primary Power Meter), 
; indem es per SML den Stromzähler ausliest und die drei Messwerte aktuelle 
; Leistung, total_WH_exp und total_Wh_Imp per Modbus TCP nach SunSpec Standard 
; zur Verfügung stellt. Die Fronius MODBUS Register Referenz gibt es direkt bei 
; Fronius zum Download. In dem .zip gibt es Smart_Meter_Register_Map_Float.xlsx, 
; darin sind alle Register definiert. Die Reihenfolge und Gruppierung der Registerabfragen 
; wurden nur für den Fronius Gen24 ermittelt und im Script emuliert, für andere Wechselrichter 
; die auch den SunSpec Standard nutzen muss es wohl angepasst werden. Getestet mit einem 
; Wechselrichter Fronius Gen24 mit aktueller Firmware 1.28.7-1.
; vom Leser Stefan Galler und gemu2015 (Tasmota Script Entwickler)
; Script mit dem externen Tasmota Script Editor übertragen oder Copy&Paste auf den ESP32 übertragen
pcurr=0

; variables Modbus
res=0
cnt=0
xcnt=0
reg=0
nval=0
dform=0
ecnt=0
ctime=0

vsml1=0
vsml2=0
vsml3=0

M:req=0 12
M:resp=0 9
M:data=0 66

>B
=>sensor53 r

>BS
; start TCP server
res=wso(502)
print res=%res%
; create task 1 every 10ms on core1, priority 3, stack 8kb
ct(1 10 1 3 8000)

; set Modbus register values
#dosel
data[0]=0
; default = word
dform=1
switch reg
  case 768
		data={0}

	case 1706
		data={0}

	case 40000
		data={21365 28243}

	case 40002
		data={1 65}

	case 40004
		data={70 114 111 110 105 117 115 0 0 0 0 0 0 0 0 0}
		data={83 109 97 114 116 32 77 101 116 101 114 32 54 51 65 0}
		data={0 0 0 0 0 0 0 0}
		data={0 0 0 0 0 0 0 0}
		data={48 48 48 48 48 48 48 49 0 0 0 0 0 0 0 0}
		data={240 213}

	case 40069
		data={213 124}

	case 40071
		data={0 0 0 0 0}
		data={0 0 0 0 0}
		data={0 0 0 vsml1 0}
		data={0 0 0 0 0}
		data={0 0 0 0 0}
		data={0 0 0 0 0}
		dform=3
		nval=nval/2

	case 40129
		data={vsml3 0 0 0 vsml2}
		data={0 0 0 0 0}
		data={0 0 0 0 0}
		data={0}
		dform=3
		nval=nval/2

	case 40193
		data={0 0}

	case 40195
		data={65535 0}

	case 50000
		data={0 0}

;current power in W 40097 sml[1]
;total Wh exp 40129 sml[3]
;total Wh Imp 40137 sml[2]

ends


>t1
; check incomming data
xcnt =wsa()
if xcnt>=12 {
	; check if sml values are valid, else discard request
	if vsml2>0
	and vsml3>0
	and xcnt<=120 {
		res=wsra(req)

		reg=(req[9]<<8)|req[10]
		nval=req[12]
		; print register %reg%, count %nval%

		; transaction id
		resp[1]=req[1]
		resp[2]=req[2]
		; protocol id
		resp[3]=0
		resp[4]=0
		; length
		resp[5]=0
		resp[6]=req[12]*2+3
		;device address
		resp[7]=req[7]
		; function code
		resp[8]=req[8]
		; payload len
		resp[9]=req[12]*2

		; write response header
		wswa(resp 9)

		; write response data
		=#dosel
		wswa(data nval dform)
		; next
	} else {
		ecnt=ecnt+1
		print clear TCP buffer %xcnt% ecnt %ecnt%
		wsf()
	}
}

>F
vsml1=sml[1]
vsml2=sml[2]*1000
vsml3=sml[3]*1000

>R
; close server
res=wsc()

>M 1
+1,16,s,0,9600,SML
1,77070100100700ff@1,Leistung,W,Power_curr,0
1,77070100010800ff@1000,Verbrauch,kWh,Total_in,3
1,77070100020800ff@1000,Netzeinspeisung,kWh,Total_out,3
#"
GzYSijVc,Untitled,dllbridge,C,Thursday 14th of March 2024 02:07:49 PM CDT,"


#include  <stdio.h>
#include <string.h>

                                                                                                                                                                  //  opipoipo


void foo(char *p);  





////////////////////////////////////////////////////
int main()                                        //  
{
	
	char sz[99];
	strcpy(sz, ""SONY Pictures"");
	char c = '0';
	
	
    foo(&sz[7]);
}




////////////////////////////////////////////////////
void foo(char *p)                                 //
{
	
	 p = p - 7;
	
	 
	 p[8] = 87;
	 
	 printf(""p = %s\n"",  p);	 
}











/*

#include  <stdio.h>
#include <string.h>

                                                                                                                                                                  //  opipoipo


void foo(char *p);  





////////////////////////////////////////////////////
int main()                                        //  
{
	
	char sz[99];
	strcpy(sz, ""SONY Pictures"");
	char c = '0';
	
	
    foo(&sz[7]);
}




////////////////////////////////////////////////////
void foo(char *p)                                 //
{
	
	 p = p - 7;
	
	 for(int i = 0; i < 15; i++)
	 {
	   printf(""p[%d] = %c\n"", i, p[i]);
	 }
}


*/




/*
#include  <stdio.h>
#include <string.h>

                                                                                                                                                                  //  opipoipo


void foo(char *p);  

char sz[99];  // = ""SONY""; 



////////////////////////////////////////////////////
int main()                                        //  
{
	
	
	strcpy(sz, ""SONY"");
	char c = '0';
	
	
    foo(sz);
}




////////////////////////////////////////////////////
void foo(char *p)                                 //
{
	 for(int i = 0; i < 15; i++)
	 {
	   printf(""p[%2d] = %2d\n"", i, p[i]);
	 }
}

*/




/*

#include <stdio.h>


                                                                                                                                                                  //  opipoipo


void foo(char *p);  





////////////////////////////////////////////////////
int main()                                        //  
{
	char sz[99] = ""SONY""; 
	char c = '0';
	
	
    foo(sz);
}




////////////////////////////////////////////////////
void foo(char *p)                                 //
{
	 for(int i = 0; i < 5; i++)
	 {
	   printf(""p[%d] = %d\n"", i, p[i]);
	 }
}




*/







/*

#include <stdio.h>


                                                                                                                                                                  //  opipoipoi


    int n1 =  7;

__int32 n2 = 99;
__int8 n3 = 99;


void foo(char *p);  

////////////////////////////////////////////////////
int main()                                        //  
{
	char sz[99] = ""SONY""; 
	
	printf(""size of char = %d\n"", sizeof( sz[7]) );
	printf(""size of  int = %d\n"", sizeof( n3 )   );	
}




////////////////////////////////////////////////////
void foo(char *p)                                        //
{
	
	
}


*/












/*
#include <iostream>
using namespace std;

int     a,                                                                                           //  kljklj  
      sum,                                                                                        //  kljlkjlkj
	total;                                                                                        //  opipoipoi


int book();   



////////////////////////////////////////////////////
int main()                                        //  
{
    setlocale(LC_ALL, ""Russian"");
    cout << ""Введите количество книг: "";
    cin >> a;
    book();
    return 0;
}






/////////////////////////////////////////////////////
int book()                                         //
{
	
	int nPart = a/7,
	    nOst  = a%7;
	
	cout << ""nPart = "" << nPart << endl;

    return 0;
}



*/

"
zHTyfMiG,CortezResumen,orezalucard,C#,Thursday 14th of March 2024 01:59:56 PM CDT,"WITH Resumen AS (
										SELECT DISTINCT
											T.CZTda_Codigo,
											T.CZEst_Codigo,
											T.CZDoc_Codigo,
											T.CZConsecutivo,
											T.T_Cajero,
											FP.FP_Codigo,
											FP.FP_Descripcion,
											SUM(IFPT.IFPT_Importe) AS ImportePagadoVta,
											00000000000.00 AS ImportePagadoDev,
											00000000000.00 AS ImporteIngresos,
											00000000000.00 AS ImporteRetiros
										FROM Tickets T
											INNER JOIN ImporteFormaPagoTicket IFPT ON 
													IFPT.FolTda_Codigo = T.FolTda_Codigo
												AND IFPT.FolEst_Codigo = T.FolEst_Codigo
												AND IFPT.FolDoc_Codigo = T.FolDoc_Codigo
												AND IFPT.FolConsecutivo = T.FolConsecutivo
											INNER JOIN FormasDePago FP ON 
												FP.FP_Codigo = IFPT.FP_Codigo
											INNER JOIN CortesZ Z ON 
												T.CZTda_Codigo = Z.FolTda_Codigo
											  AND T.CZEst_Codigo = Z.FolEst_Codigo
											  AND T.CZDoc_Codigo = Z.FolDoc_Codigo
											  AND T.CZConsecutivo = Z.FolConsecutivo
										--WHERE Z.CZ_Fecha BETWEEN @DesdeFecha AND @HastaFecha AND Z.FolTda_Codigo = @CodTienda
										GROUP BY T.CZTda_Codigo,
												 T.CZEst_Codigo,
												 T.CZDoc_Codigo,
												 T.CZConsecutivo,
												 T.T_Cajero,
												 FP.FP_Codigo,
												 FP.FP_Descripcion
										UNION
										SELECT DISTINCT
											TD.CZTda_Codigo,
											TD.CZEst_Codigo,
											TD.CZDoc_Codigo,
											TD.CZConsecutivo,
											TD.TD_Cajero,
											FP.FP_Codigo,
											FP.FP_Descripcion,
											00000000000.00 AS ImportePagadoVta,
											SUM(IFPD.IFPD_Importe) AS ImportePagadoDev,
											00000000000.00 AS ImporteIngresos,
											00000000000.00 AS ImporteRetiros
										FROM TicketsDevolucion TD
											INNER JOIN ImporteFormaPagoTicketDevolucion IFPD ON 
												IFPD.FolTda_Codigo = TD.FolTda_Codigo
											  AND IFPD.FolEst_Codigo = TD.FolEst_Codigo
											  AND IFPD.FolDoc_Codigo = TD.FolDoc_Codigo
											  AND IFPD.FolConsecutivo = TD.FolConsecutivo
											INNER JOIN FormasDePago FP ON 
												FP.FP_Codigo = IFPD.FP_Codigo
											INNER JOIN CortesZ Z ON 
												TD.CZTda_Codigo = Z.FolTda_Codigo
											  AND TD.CZEst_Codigo = Z.FolEst_Codigo
											  AND TD.CZDoc_Codigo = Z.FolDoc_Codigo
											  AND TD.CZConsecutivo = Z.FolConsecutivo
										--WHERE Z.CZ_Fecha BETWEEN @DesdeFecha AND @HastaFecha AND Z.FolTda_Codigo = @CodTienda
										GROUP BY TD.CZTda_Codigo,
												 TD.CZEst_Codigo,
												 TD.CZDoc_Codigo,
												 TD.CZConsecutivo,
												 TD.TD_Cajero,
												 FP.FP_Codigo,
												 FP.FP_Descripcion
										UNION
										SELECT 
											IG.CZTda_Codigo,
											IG.CZEst_Codigo,
											IG.CZDoc_Codigo,
											IG.CZConsecutivo,
											IG.Ing_Cajero,
											FP.FP_Codigo,
											FP.FP_Descripcion,
											00000000000.00 AS ImportePagadoVta,
											00000000000.00 AS ImportePagadoDev,
											SUM(IGFP.IFP_Importe) AS ImporteIngresos,
											00000000000.00 AS ImporteRetiros
										FROM Ingresos IG
											INNER JOIN IngresoFormaPago IGFP ON
													IGFP.FolTda_Codigo = IG.FolTda_Codigo
												AND IGFP.FolEst_Codigo = IG.FolEst_Codigo
												AND IGFP.FolDoc_Codigo = IG.FolDoc_Codigo
												AND IGFP.FolConsecutivo = IG.FolConsecutivo
											INNER JOIN FormasDePago FP ON 
												FP.FP_Codigo = IGFP.FP_Codigo
											INNER JOIN CortesZ Z ON 
													IG.CZTda_Codigo = Z.FolTda_Codigo
											  AND IG.CZEst_Codigo = Z.FolEst_Codigo
											  AND IG.CZDoc_Codigo = Z.FolDoc_Codigo
											  AND IG.CZConsecutivo = Z.FolConsecutivo
										--WHERE Z.CZ_Fecha BETWEEN @DesdeFecha AND @HastaFecha AND Z.FolTda_Codigo = @CodTienda
										GROUP BY IG.CZTda_Codigo,
												 IG.CZEst_Codigo,
												 IG.CZDoc_Codigo,
												 IG.CZConsecutivo,
												 IG.Ing_Cajero,
												 FP.FP_Codigo,
												 FP.FP_Descripcion
										UNION
										SELECT 
											RT.CZTda_Codigo,
											RT.CZEst_Codigo,
											RT.CZDoc_Codigo,
											RT.CZConsecutivo,
											RT.Ret_Cajero,
											FP.FP_Codigo,
											FP.FP_Descripcion,
											00000000000.00 AS ImportePagadoVta,
											00000000000.00 AS ImportePagadoDev,
											00000000000.00 AS ImporteIngresos,
											SUM(IRFP.RFP_Importe) AS ImporteRetiros
										FROM Retiros RT
											INNER JOIN RetiroFormaPago IRFP ON
													IRFP.FolTda_Codigo = RT.FolTda_Codigo
												AND IRFP.FolEst_Codigo = RT.FolEst_Codigo
												AND IRFP.FolDoc_Codigo = RT.FolDoc_Codigo
												AND IRFP.FolConsecutivo = RT.FolConsecutivo
											INNER JOIN FormasDePago FP ON 
												FP.FP_Codigo = IRFP.FP_Codigo
											INNER JOIN CortesZ Z ON 
													RT.CZTda_Codigo = Z.FolTda_Codigo
											  AND RT.CZEst_Codigo = Z.FolEst_Codigo
											  AND RT.CZDoc_Codigo = Z.FolDoc_Codigo
											  AND RT.CZConsecutivo = Z.FolConsecutivo
										--WHERE Z.CZ_Fecha BETWEEN @DesdeFecha AND @HastaFecha AND Z.FolTda_Codigo = @CodTienda
										GROUP BY RT.CZTda_Codigo,
												 RT.CZEst_Codigo,
												 RT.CZDoc_Codigo,
												 RT.CZConsecutivo,
												 RT.Ret_Cajero,
												 FP.FP_Codigo,
												 FP.FP_Descripcion)--termina el with
										SELECT
										  A.CZTda_Codigo,
										  A.CZEst_Codigo,
										  A.CZDoc_Codigo,
										  A.CZConsecutivo,
										  A.FP_Descripcion,
										  (CAST(A.CZTda_Codigo AS nvarchar) + '-' + CAST(A.CZEst_Codigo AS nvarchar) + '-' + CAST(A.CZDoc_Codigo AS nvarchar) + '-' + CAST(A.CZConsecutivo AS nvarchar)) AS FolioCZ,
										  A.T_Cajero,
										  A.FP_Codigo,
										  A.FP_Descripcion,
										  T.Tda_Nombre,
										  (E.Emp_Nombre + ' ' + E.Emp_Apellidos) AS Cajero,
										  CZ.CZ_Fecha,
										  CZ.Usr_Codigo,
										  (ECZ.Emp_Nombre + ' ' + ECZ.Emp_Apellidos) AS CajeroCorte,
										  SUM(A.ImportePagadoVta) AS Venta,
										  SUM(A.ImportePagadoDev) AS Devolucion,
										  SUM(A.ImportePagadoVta - A.ImportePagadoDev) AS Neto,
										  SUM(A.ImportePagadoVta - A.ImportePagadoDev + A.ImporteIngresos - A.ImporteRetiros) AS NetoCIngresosRetiros,
										  SUM(A.ImporteIngresos) AS Ingresos,
										  SUM(A.ImporteRetiros) AS Retiros
										FROM CortesZ CZ
										LEFT JOIN  Resumen A
										  ON CZ.FolTda_Codigo = A.CZTda_Codigo
										  AND CZ.FolEst_Codigo = A.CZEst_Codigo
										  AND CZ.FolDoc_Codigo = A.CZDoc_Codigo
										  AND CZ.FolConsecutivo = A.CZConsecutivo
										INNER JOIN Empleados ECZ
										  ON CZ.Usr_Codigo = ECZ.Emp_Codigo
										INNER JOIN Tiendas T
										  ON A.CZTda_Codigo = T.Tda_Codigo
										INNER JOIN Empleados E
										  ON A.T_Cajero = E.Emp_Codigo
										GROUP BY A.CZTda_Codigo,
												 A.CZEst_Codigo,
												 A.CZDoc_Codigo,
												 A.CZConsecutivo,
												 A.FP_Descripcion,
												 A.T_Cajero,
												 A.FP_Codigo,
												 A.FP_Descripcion,
												 T.Tda_Nombre,
												 E.Emp_Nombre,
												 E.Emp_Apellidos,
												 CZ.CZ_Fecha,
												 CZ.Usr_Codigo,
												 ECZ.Emp_Nombre,
												 ECZ.Emp_Apellidos"
D30K3fpu,Untitled,kompilainenn,Python,Thursday 14th of March 2024 01:30:00 PM CDT,"def perf_happy(n):
    result = []
    bad_numbers = set()
    for i in range(1, n + 1):
        temp = set()
        z = i
        while True:
            temp_2 = sum([int(x) ** 2 for x in str(z)])
            if temp_2 in temp:
                bad_numbers.update(temp)
                break
            elif temp_2 in bad_numbers:
                bad_numbers.update(temp)
                break
            elif temp_2 == 1:
                result.append(i)
                break
            elif temp_2 not in temp:
                temp.add(temp_2)
                z = temp_2
    return result"
nbqyke9C,lab3b,am1x,Fortran,Thursday 14th of March 2024 01:28:26 PM CDT,"module functions
    implicit none
    contains
    
    function f(x) result(y)
        real(8), intent(in) :: x
        real(8) :: y
        y = ((((x * x) - 3.5d0) * x + 2.5d0) * x - 7d0) * x - 6.4d0
    end function
    
    
    function F1(x) result(y)
        real(8), intent(in) :: x
        real(8) :: y

!        y = (1d0/6d0)*(x**6) - (3.5d0/4d0)*(x**4) + (2.5d0/3d0)*(x**3) - (7d0/2d0)*(x**2) - 6.4d0*x
        y = (((((1d0/6d0) * x * x -  3.5d0/4d0) * x + 2.5d0/3d0) * x - 7d0/2d0) * x - 6.4d0) * x
    end function
    
    
    function trap(grid, N, h) result(int1)
        integer, intent(in) :: N
        integer :: i
        real(8), dimension(:) :: grid(N+1)
        real(8) :: h, int1
        int1 = 0d0
        do i = 2, N
            int1 = int1 + grid(i)
        end do
        int1 = (2d0*int1 + grid(1) + grid(N+1))*h/2d0
    end function
    
    
    subroutine intrect(a, b, eps, err, h, N)
        integer :: N, i
        real(8) :: a, b, eps, err, h
        real(8) :: int1, prevint, k, r
        prevint = 0d0
        int1 = 100d0
        N = 1
        do while (dabs(int1 - prevint)/3d0 > (eps))
            N = N * 2
            h = (b - a) / N
            prevint = int1
            int1 = 0
            do i = 0, N - 1
                int1 = int1 + f(a + (i + 0.5d0) * h)
            end do
            int1 = int1 * h
        end do
        err = dabs((F1(b) - F1(a)) - int1)
        write(*,*) N, eps, err
    end subroutine

    subroutine inttrap(a, b, eps, err, h, N)
        integer :: N, i
        real(8) :: a, b, eps, err, h
        real(8) :: int1, prevint
        prevint = 0d0
        int1 = 100d0
        N = 1
        do while (dabs(int1 - prevint) / 3 > (eps))
            N = N * 2
            h = (b - a) / N
            prevint = int1
            int1 = 0.5d0 * (f(a) + f(b))
            do i = 1, N - 1
                int1 = int1 + f(a + i * h)
            end do
            int1 = int1 * h
        end do
        err = dabs((F1(b) - F1(a)) - int1)
        write(*,*) N, eps, err
    end subroutine

    subroutine intsimps(a, b, eps, err, h, N)
        integer :: N, i
        real(8) :: a, b, eps, err, h
        real(8) :: int1, inta, intb, prevint
        prevint = 0d0
        int1 = 100d0
        N = 1
        do while (dabs(int1 - prevint) / 15 > eps)
            N = N * 2
            h = (b - a) / N

            inta = 0.5d0 * (f(a) + f(b))
            do i = 1, N - 1
                inta = inta + f(a + i * h)
            end do
            intb = 0
            do i = 0, N - 1
                intb = intb + f(a + (i + 0.5d0) * h)
            end do

            prevint = int1
            int1 = ( inta + 2 * intb) * h / 3.0d0

        end do

        err = dabs((F1(b) - F1(a)) - int1)
        write(*,*) N, eps, err
    end subroutine



end module
"
sLF83Rv7,lab3a,am1x,Fortran,Thursday 14th of March 2024 01:26:10 PM CDT,"program Lab3
use functions
    implicit none
    integer :: N, i
    real(8) :: a, b, eps, h, err
10  format(f10.6, a, f10.6, a, f10.6, a, f10.6)

    a = -0.7d0
    b = 2.2d0
    err = 0
    h = 0
    N = 1

    write(1,*) ""eps"", "";"", ""Err"", "";"", ""N"", "";"", ""h""

    eps = 0.1d0
    do i = 1, 12
        call inttrap(a, b, eps, err, h, N)
        write(*, 10) dlog10(eps), "";"", dlog10(Err), "";"", dlog(N + 0d0) / dlog(2d0), "";"", dlog10(h)
        eps = eps * 0.1d0
    end do

    close(1)
    close(2)
end program Lab3

"
QuUh0Yck,Python Tkinter Questionaire,acclivity,Python,Thursday 14th of March 2024 01:16:53 PM CDT,"import tkinter as tk

class QuestionnaireApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title(""Questionnaire"")
        self.geometry(""400x200"")

        self.questions = [
            (),
            (""Question 1: Do you like Python?"", 2, 3),
            (""Question 2: Do you prefer cats over dogs?"", 3, 4),
            (""Question 3: Are you a morning person?"", 5, 7),
            (""Question 4: Do you enjoy reading books?"", 6, 9),
            (""Question 5: Is pizza your favorite food?"", 8, 9),
            (""Question 6: Do you like traveling?"", 9, 10),
            (""Question 7: Are you interested in learning new languages?"", 5, 10),
            (""Question 8: Do you enjoy outdoor activities?"", 6, 10),
            (""Question 9: Are you a fan of superhero movies?"", 4, 10),
            (""Question 10: Do you like solving puzzles?"", 0, 0)
        ]
        self.current_question_index = 1

        self.data = self.questions[self.current_question_index]
        self.quest = self.data[0]
        self.yesnum = self.data[1]
        self.nonum = self.data[2]
        self.question_label = tk.Label(self, text=self.quest)       # text=self.questions[self.current_question_index])
        self.question_label.pack()

        self.yes_button = tk.Button(self, text=""YES"", command=self.next_yes)
        self.yes_button.pack(side=tk.LEFT, padx=10)

        self.no_button = tk.Button(self, text=""NO"", command=self.next_no)
        self.no_button.pack(side=tk.RIGHT, padx=10)

    def next_yes(self):
        self.current_question_index = self.yesnum
        if self.current_question_index == 0:
            self.question_label.config(text=""Questionnaire completed."")
        else:
            self.data = self.questions[self.current_question_index]
            self.quest = self.data[0]
            self.yesnum = self.data[1]
            self.nonum = self.data[2]
            self.question_label.config(text=self.quest)

    def next_no(self):
        self.current_question_index = self.nonum
        if self.current_question_index == 0:
            self.question_label.config(text=""Questionnaire completed."")
        else:
            self.data = self.questions[self.current_question_index]
            self.quest = self.data[0]
            self.yesnum = self.data[1]
            self.nonum = self.data[2]
            self.question_label.config(text=self.quest)

if __name__ == ""__main__"":
    app = QuestionnaireApp()
    app.mainloop()"
jqbVut9S,"x, x^2, x^3",Cnvmendoza,C#,Thursday 14th of March 2024 01:12:57 PM CDT,"/* Problem 7
 * Write a program to produce a table of numbers from 10 to 1, with their squares and cubes. Again,
 * your table must look professional!
 */
namespace for_loop_07
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //for loop
            Console.WriteLine(""|  x | x^2 |  x^3 |"");
            Console.WriteLine(""| -- | --- | ---- |"");
            for (int i = 10; i >= 1; i--)
            {
                Console.Write($""| {i,2} | {i * i,3} | {i * i * i,4} |"");
                Console.WriteLine();
            }

            Console.Write(""\n\n"");
            //do while loop
            int start = 10, stop = 1;
            Console.WriteLine(""|  x | x^2 |  x^3 |"");
            Console.WriteLine(""| -- | --- | ---- |"");
            do
            {
                Console.Write($""| {start,2} | {start * start,3} | {start * start * start,4} |"");
                Console.WriteLine();
                start--;
            } while (start >= stop);

            Console.Write(""\n\n"");
            //while loop
            start = 10;
            stop = 1;
            Console.WriteLine(""|  x | x^2 |  x^3 |"");
            Console.WriteLine(""| -- | --- | ---- |"");
            while (start >= stop)
            {
                Console.Write($""| {start,2} | {start * start,3} | {start * start * start,4} |"");
                Console.WriteLine();
                start--;
            }
        }
    }
}
"
tRpDtPX4,Filter System,Alexr360,Lua,Thursday 14th of March 2024 01:09:31 PM CDT,"-- Assuming the computer is placed to the left of the ""create_target""
local targetDirection = ""right""  -- Direction of the ""create_target"" relative to the computer
local data = peripheral.wrap(targetDirection)

-- Function to read the first line from the target
local function readline(line)
    local line = data.getLine(line)
    return line
end

local function formatdatas(number)
    local numberItems = tonumber(readline(number))
	local percent = (numberItems/64)*100
    return percent
end

local function formatdatas(number)
    local numberItems = tonumber(readline(number))
    if numberItems == nil then
        return nil, ""Input cannot be converted to a number""
    end
    local percent = (numberItems/64)*100
    return percent
end


local function bastion()
    local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
    modem.open(15) -- Open 43 so we can receive replies
 
    -- And wait for a reply
    local event, side, channel, replyChannel, message, distance
    repeat
      event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    until channel == 15
 
    -- Process the received message based on its content
    if message == ""Filters"" then
        filter1 = formatdatas(1)
        filter2 = formatdatas(2)
        filter3 = formatdatas(3)
        filter4 = formatdatas(4)
        filter5 = formatdatas(5)
        filter6 = formatdatas(6)
        filter7 = formatdatas(7)
        filter8 = formatdatas(8)

		msg = ""Filter 1"" .. filter1 .. ""Filter 2"" .. filter2  .. ""Filter 3"" .. filter3  .. ""Filter 4"" .. filter4 .. ""Filter 5"" .. filter5 .. ""Filter 6"" .. filter6 .. ""Filter 7"" .. filter7 .. ""Filter 8"" .. filter8

        modem.transmit(43, 15, msg)
    end
end
 
term.clear()
term.setCursorPos(1, 1)
print(""Bastion Network Online!"")
 
-- Main loop
while true do
    bastion()
end"
kiXxKp2R,Untitled,kompilainenn,Python,Thursday 14th of March 2024 01:09:06 PM CDT,"def perf_happy(n):
    result = []
    bad_numbers = set()
    for i in range(1, n + 1):
        temp = []
        z = i
        while True:
            temp_2 = sum([int(x) ** 2 for x in str(z)])
            if temp_2 in bad_numbers:
                break
            elif temp_2 in temp:
                bad_numbers.update(set(temp))
                break
            elif temp_2 == 1:
                result.append(i)
                break
            elif temp_2 not in temp:
                temp.append(temp_2)
                z = temp_2
            
    return result"
zUyGsBHn,Untitled,Ilya_Bykonya,C#,Thursday 14th of March 2024 01:01:04 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

namespace Utils
{
    public class ReadOnlyAttribute : PropertyAttribute { }

    [CustomPropertyDrawer(typeof(ReadOnlyAttribute))]
    public class ReadOnlyDrawer : PropertyDrawer
    {
        public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
        {
            return EditorGUI.GetPropertyHeight(property, label, true);
        }
        public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
        {
            GUI.enabled = false;
            EditorGUI.PropertyField(position, property, label, true);
            GUI.enabled = true;
        }
    }
}"
ArLgdGF5,Untitled,Ilya_Bykonya,C#,Thursday 14th of March 2024 12:57:39 PM CDT,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine.Events;
using UnityEngine;
using Utils;
using UnityEditor.UIElements;
using UnityEditor;
using UnityEngine.UIElements;
using UnityEditor.PackageManager.UI;
using UnityEditor.Rendering;
using UnityEditor.Experimental.GraphView;
using System.Reflection;

namespace Utils
{
    [Serializable]
    public class ActiveField<T>
    {
        [SerializeField] private T _value;
        public UnityEvent Changed;

        public T Value
        {
            get => _value;
            set
            {
                _value = value;
                Changed?.Invoke();
            }
        }

        public void SetValue(T value) => Value = value;
        public ActiveField(T value, UnityEvent changed)
        {
            Changed = changed;
            _value = value;
        }
    }


    
    [CustomPropertyDrawer(typeof(ActiveField<>))]
    public class ActiveFieldDrawer : PropertyDrawer
    {
        public override VisualElement CreatePropertyGUI(SerializedProperty property)
        {
            var serialized_changed_event_property = property.FindPropertyRelative(""Changed"");
            var changed_event = PropertyReflectionGetter.SerializedPropertyToObject<UnityEvent>(serialized_changed_event_property);

            var container = new VisualElement();
            var changed_event_field = new PropertyField(serialized_changed_event_property);
            var value_field = new PropertyField(property.FindPropertyRelative(""_value""));

            value_field.RegisterValueChangeCallback((_) => changed_event?.Invoke());
            container.Add(new Label($""ActiveEvent<>: [{property.displayName}]""));
            container.Add(value_field);
            container.Add(changed_event_field);
            return container;
        }
    }
    public static class PropertyReflectionGetter
    {
        public static T SerializedPropertyToObject<T>(SerializedProperty property)
        {
            return GetNestedObject<T>(property.propertyPath, GetSerializedPropertyRootComponent(property), true); //The ""true"" means we will also check all base classes
        }
        public static Component GetSerializedPropertyRootComponent(SerializedProperty property)
        {
            return (Component)property.serializedObject.targetObject;
        }
        public static T GetNestedObject<T>(string path, object obj, bool includeAllBases = false)
        {
            foreach (string part in path.Split('.'))
            {
                obj = GetFieldOrPropertyValue<object>(part, obj, includeAllBases);
            }
            return (T)obj;
        }
        public static T GetFieldOrPropertyValue<T>(string fieldName, object obj, bool includeAllBases = false, BindingFlags bindings = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
        {
            FieldInfo field = obj.GetType().GetField(fieldName, bindings);
            if (field != null) return (T)field.GetValue(obj);

            PropertyInfo property = obj.GetType().GetProperty(fieldName, bindings);
            if (property != null) return (T)property.GetValue(obj, null);

            if (includeAllBases)
            {
                foreach (Type type in GetBaseClassesAndInterfaces(obj.GetType()))
                {
                    field = type.GetField(fieldName, bindings);
                    if (field != null) return (T)field.GetValue(obj);

                    property = type.GetProperty(fieldName, bindings);
                    if (property != null) return (T)property.GetValue(obj, null);
                }
            }

            return default(T);
        }
        public static void SetFieldOrPropertyValue<T>(string fieldName, object obj, object value, bool includeAllBases = false, BindingFlags bindings = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
        {
            FieldInfo field = obj.GetType().GetField(fieldName, bindings);
            if (field != null)
            {
                field.SetValue(obj, value);
                return;
            }

            PropertyInfo property = obj.GetType().GetProperty(fieldName, bindings);
            if (property != null)
            {
                property.SetValue(obj, value, null);
                return;
            }

            if (includeAllBases)
            {
                foreach (Type type in GetBaseClassesAndInterfaces(obj.GetType()))
                {
                    field = type.GetField(fieldName, bindings);
                    if (field != null)
                    {
                        field.SetValue(obj, value);
                        return;
                    }

                    property = type.GetProperty(fieldName, bindings);
                    if (property != null)
                    {
                        property.SetValue(obj, value, null);
                        return;
                    }
                }
            }
        }
        public static IEnumerable<Type> GetBaseClassesAndInterfaces(this Type type, bool includeSelf = false)
        {
            List<Type> allTypes = new List<Type>();

            if (includeSelf) allTypes.Add(type);

            if (type.BaseType == typeof(object))
            {
                allTypes.AddRange(type.GetInterfaces());
            }
            else
            {
                allTypes.AddRange(
                        Enumerable
                        .Repeat(type.BaseType, 1)
                        .Concat(type.GetInterfaces())
                        .Concat(type.BaseType.GetBaseClassesAndInterfaces())
                        .Distinct());
                //I found this on stackoverflow
            }

            return allTypes;
        }
    }


    /*
    [CustomPropertyDrawer(typeof(ActiveField<float>))]
    public class ActiveFieldEditor : PropertyDrawer
    {
        public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
        {
            return base.GetPropertyHeight(property, label) * 3;
        }
        public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
        {
            var freeRect = EditorGUI.PrefixLabel(position, new GUIContent($""He-he""));
            base.OnGUI(position, property, label);
            */
    /*
    using (var scope = new EditorGUI.PropertyScope(position, label, property))
    {
        var freeRect = EditorGUI.PrefixLabel(position, new GUIContent($""He-he""));
    }
    */
    /*
    var minLimit = property.FindPropertyRelative(""minLimit"");
    var maxLimit = property.FindPropertyRelative(""maxLimit"");
    var minValue = property.FindPropertyRelative(""minValue"");
    var maxValue = property.FindPropertyRelative(""maxValue"");
    using (var scope = new EditorGUI.PropertyScope(position, label, property))
    {
        var freeRect = EditorGUI.PrefixLabel(position, new GUIContent($""{minLimit.floatValue}|{maxLimit.floatValue}""));
        var lineSize = freeRect.height / 3;

        EditorGUI.BeginChangeCheck();
        var minValueFloat = minValue.floatValue;
        var maxValueFloat = maxValue.floatValue;
        var sliderRect = new Rect(freeRect.x, freeRect.y, freeRect.width, lineSize);
        EditorGUI.MinMaxSlider(sliderRect, ref minValueFloat, ref maxValueFloat, minLimit.floatValue, maxLimit.floatValue);

        var minLimitRect = new Rect(freeRect.x, freeRect.y + 1 * lineSize, freeRect.width, lineSize);
        var maxLimitRect = new Rect(freeRect.x, freeRect.y + 2 * lineSize, freeRect.width, lineSize);
        var minLimitFloat = EditorGUI.FloatField(new Rect(minLimitRect), ""Min limit"", minLimit.floatValue);
        var maxLimitFloat = EditorGUI.FloatField(new Rect(maxLimitRect), ""Max limit"", maxLimit.floatValue);

        if (EditorGUI.EndChangeCheck())
        {
            minLimit.floatValue = minLimitFloat;
            maxLimit.floatValue = maxLimitFloat;
            minValue.floatValue = minValueFloat;
            maxValue.floatValue = maxValueFloat;
        }
    }
    */
    /*}
        }*/
    //    [CustomEditor(typeof(ActiveField<>))]
    //    class GenericActiveFieldEditor : Editor
    //    {
    //        public override void OnInspectorGUI()
    //        {
    //            EditorGUILayout.LabelField(""I'm shown OK generic"");
    //        }
    //    }
    //    [CustomEditor(typeof(ActiveField<float>))]
    //    class FloatActiveFieldEditor: Editor
    //    {
    //        public override void OnInspectorGUI()
    //        {
    //            EditorGUILayout.LabelField(""I'm shown OK float"");
    //        }
    //    }
}"
E9d6NGiD,delivery heatmap randomize,soyuzbek,Python,Thursday 14th of March 2024 12:13:33 PM CDT,"    delivery_points = models.Order.all_objects.filter(
        delivery_point__latitude__isnull=False,
        delivery_point__longitude__isnull=False,
        *default_filter_args,
        **filter_params,
    ).select_related('delivery_point').annotate(
        rounded_latitude=RawSQL('round(""order__delivery_point"".""latitude"", 2)'),
        rounded_longitude=RawSQL('round(""order__delivery_point"".""longitude"", 2)'),
        count=Count('delivery_point__latitude'),
    ).group_by('rounded_latitude', 'rounded_longitude').values(
        'rounded_latitude',
        'rounded_longitude',
        'count',
    )
    
    query = f""""""
            SELECT
             count(""delivery_points"".""count"") as ""count"",
             ""delivery_points"".""rounded_latitude"" as ""latitude"",
             ""delivery_points"".""rounded_longitude"" as ""longitude""
            FROM ({delivery_points.as_query()}) AS ""delivery_points""
            GROUP BY
              ""delivery_points"".""rounded_latitude"",
              ""delivery_points"".""rounded_longitude""
         """"""
    # noinspection PyUnusedLocal
    result_list = []
    async with database_connection() as conn:
        data = await conn.fetch(query)
        result_list = parse_obj_as(List[HeatmapResponseItem], data)
    
    
    

    # noinspection PyMethodParameters
    @pydantic.validator('latitude', 'longitude')
    def randomize_geodata(cls, value):
        return round(uniform(value - 0.005, value + 0.005), 5)"
1hFq4BJ5,stack,mantha_raghava,Java,Thursday 14th of March 2024 12:08:49 PM CDT,"import java.util.Scanner;

public class Solution {
    
    public static void main(String[] args) {
        
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        scanner.nextLine(); 

        String[] stack = new String[10000];
        int top = -1;
        for (int i = 0; i < t; i++) {
            String[] input = scanner.nextLine().split("" "");
            if (input[0].equals(""push"")) {
                stack[++top] = input[1];
            } else if (input[0].equals(""pop"")) {
                if (top == -1) {
                    System.out.println(""Empty"");
                }
                else{
                    System.out.println(stack[top]);
                    top--;
                }
            }
        }
        
    }
}
"
X2aFKUCP,Windows11_Kontextmenue,Takiry,Batch,Thursday 14th of March 2024 12:06:38 PM CDT,"@echo off
set /p sid=SID des Nutzers:
echo.

echo Wie soll das Kontextmenue aussehen?
echo 1 = Wie bei Windows 10
echo 2 = Wie bei Windows 11
echo.
set /p ausw=Auswahl:

if %ausw% EQU 1 (
reg.exe add ""HKEY_USERS\%sid%_Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32"" /f /ve
goto restart
)

if %ausw% EQU 2 (
reg.exe delete ""HKEY_USERS\%sid%_Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32"" /f /ve
goto restart
)
else (
exit
)

:restart
shutdown.exe -r -f -t 1"
auNRUH31,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Thursday 14th of March 2024 11:52:18 AM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
tb3sLyee,Simba - Align & Stack,WarPie90,Delphi,Thursday 14th of March 2024 11:49:13 AM CDT,"program new;
{$I SRL/osr.simba}
{$R-}

type
  TMufImage  = TMufasaBitmap;
  TMufImages = array of TMufImage;

function StackMedian(lst: TMufImages): TMufImage;
var
  x,y,i: Int32;
  R,G,B: TIntegerArray;
  color: TRGB32;
begin
  result.Init();
  result.SetSize(lst[0].GetWidth(), lst[0].GetHeight());
  SetLength(R, Length(lst));
  SetLength(G, Length(lst));
  SetLength(B, Length(lst));

  for y:=0 to result.GetHeight()-1 do
    for x:=0 to result.GetWidth()-1 do
    begin
      for i:=0 to High(lst) do
      begin
        color := TRGB32(lst[i].GetPixel(x,y));
        R[i] := color.R;
        G[i] := color.G;
        B[i] := color.B;
      end;
      color.R := R.Sorted()[length(R) div 2];
      color.G := G.Sorted()[length(R) div 2];
      color.B := B.Sorted()[length(R) div 2];

      result.SetPixel(x,y, TColor(color));
    end;
end;

procedure TMufImage.EnhanceColor(f: Single);
var
  x,y: Int32;
  H,S,L: Extended;
begin
  for y:=0 to self.GetHeight()-1 do
    for x:=0 to self.GetWidth()-1 do
    begin
      ColorToHSL(self.GetPixel(x,y),H,S,L);
      Self.SetPixel(x,y, HSLToColor(H,Min(100,Max(0,S*f)),L));
    end;
end;

procedure TMufImage.LightContrast(f: Single);
var
  x,y: Int32;
  H,S,L: Extended;
begin
  for y:=0 to self.GetHeight()-1 do
    for x:=0 to self.GetWidth()-1 do
    begin
      ColorToHSL(self.GetPixel(x,y),H,S,L);
      Self.SetPixel(x,y, HSLToColor(H,S,Min(100,Max(0,L*f))));
    end;
end;

procedure TMufImage.AdjustPop(f: Single; MidPt: Single=0.5);
var
  x,y: Int32;
  H,S,L: Extended;
  newS, newL: Extended;
begin
  for y:=0 to self.GetHeight()-1 do
    for x:=0 to self.GetWidth()-1 do
    begin
      ColorToHSL(self.GetPixel(x,y),H,S,L);

      newS := Min(100,Max(0,(MidPt+(S/100-MidPt)*f)*100));
      newL := (Min(100,Max(0,(MidPt+(L/100-MidPt)*f)*100)) + L) / 2;

      Self.SetPixel(x,y, HSLToColor(H, newS, newL));
    end;
end;

function StackMean(lst: TMufImages): TMufImage;
var
  x,y,i: Int32;
  R,G,B: Int32;
  color: TRGB32;

begin
  result.Init();
  result.SetSize(lst[0].GetWidth(), lst[0].GetHeight());

  for y:=0 to result.GetHeight()-1 do
    for x:=0 to result.GetWidth()-1 do
    begin
      r := 0;
      g := 0;
      b := 0;
      for i:=0 to High(lst) do
      begin
        color := TRGB32(lst[i].GetPixel(x,y));
        R += color.R;
        G += color.G;
        B += color.B;
      end;
      R /= Length(lst);
      G /= Length(lst);
      B /= Length(lst);
      color := [B,G,R];
      result.SetPixel(x,y, TColor(color));
    end;
end;

procedure TMufasaBitmap.Offset(ax,ay: Int32);
var w,h,x,y: Int32;
begin
  w := Self.getWidth()-1;
  h := Self.getHeight()-1;

  for y:=h downto 0 do
    for x:=w downto 0 do //boundchecking internaly in simba
      self.SetPixel(x+ax,y+ay, self.GetPixel(x,y));
end;

procedure Alignment(base:TMufImage; lst: TMufImages; Area:Int32=150);
  function VerifyIntegrity(patch: TMufImage): Boolean;
  var x,y: Int32;
  begin
    Result := patch.PeakBrightness() > 20;
  end;
var
  locations: TPointArray;
  patch,tmp: TMufImage;
  i,x,y,w,h: Int32;
  p: TPoint;
begin
  w := base.getWidth()-1;
  h := base.getHeight()-1;
  for patch in lst do
  begin
    locations := [];
    for y:=0 to h with area do
      for x:=0 to w with area do
      begin
        tmp := patch.Copy(x,y, Min(x+area, w), Min(y+area, h));
        if VerifyIntegrity(tmp) then
          locations += base.MatchTemplate(tmp, TM_CCOEFF_NORMED).ArgMax() + Point(-x,-y);

        tmp.Free();
      end;

    p := locations.Median();
    WriteLn('Offsetting by: ', p);
    patch.Offset(p.x, p.y);
  end;
end;



var
  patch,res,bmp: TMufImage;
  i: Int32;
  tmp,idx: string;
  TSA: TStringArray;
  mat: TSingleMatrix;
  at,rel: TPoint;

  lst: TMufImages;
begin
  bmp.Init();
  bmp.LoadFromFile('C:\Users\Eier\Desktop\Ny mappe (4)\crop\a_0000_392A0001.CR2.png');

  TSA := GetFiles('C:\Users\Eier\Desktop\Ny mappe (4)\crop\','png');

  WriteLn('Loading images...');
  for tmp in TSA do
  begin
    patch.Init();
    patch.LoadFromFile('C:\Users\Eier\Desktop\Ny mappe (4)\crop\'+tmp);

    lst += patch;
    WriteLn(tmp);
  end;

  WriteLn('Applying alignment...');
  Alignment(bmp, lst);

  WriteLn('Stacking...');
  res := StackMean(lst);

  res.EnhanceColor(1.8);
  res.AdjustPop(1.6);
  res.LightContrast(1.3);
  res.Debug();

  res.SaveToFile('autostack.png');
  res.Free();
end."
t8xzdZms,Untitled,a_rasskazkin,C++,Thursday 14th of March 2024 11:46:43 AM CDT,"#include <iostream>

//class T {};

template <class T>
class Deque {
 public:
  Deque() = default;
  Deque(int new_size, const T& value) {
    for (int i = 0; i < new_size; ++i) {
      try {
        push_back(value);
      } catch (...) {
        for (i--; i >= 0; --i) {
          pop_back();
        }
        throw;
      }
    }
  }
  explicit Deque(int new_size) : Deque(new_size, T()) {}
  Deque(const Deque& other) {
    for (size_t i = 0; i < other.size(); ++i) {
      push_back(other[i]);
    }
  }

  void push_back(const T& value) {
    if (right_index_ == 0) {
      data_.PushBack(GetNewRow());
    }
    try {
      new(data_.Back() + right_index_) T(value);
    } catch(...) {
      if (right_index_ == 0) {
        data_.PopBack();
      }
      throw;
    }
    right_index_ = (right_index_ + 1) % kBlockSize_;
    ++size_;
  }
  void push_front(const T& value) {
    --left_index_;
    if (left_index_ == -1) {
      data_.PushFront(GetNewRow());
      left_index_ += kBlockSize_;
    }
    try {
      new(data_.Front() + left_index_) T(value);
    } catch (...) {
      ++left_index_;
      if (left_index_ == kBlockSize_) {
        data_.PopFront();
        left_index_ = 0;
      }
      throw;
    }
    ++size_;
  }

  void pop_back() {
    right_index_ = (right_index_ + kBlockSize_ - 1) % kBlockSize_;
    data_.Back()[right_index_].~T();
    if (right_index_ == 0) {
      data_.PopBack();
    }
    --size_;
  }
  void pop_front() {
    data_.Front()[left_index_].~T();
    ++left_index_;
    if (left_index_ == kBlockSize_) {
      data_.PopFront();
      left_index_ = 0;
    }
    --size_;
  }

  [[nodiscard]] size_t size() const {
    return size_;
  }

  T& operator[] (size_t index) {
    return *(begin() + index);
  }
  const T& operator[] (size_t index) const {
    return *(begin() + index);
  }
  T& at(size_t index) {
    if (index >= size_) {
      throw std::out_of_range(""Index out of range"");
    }
    return operator[](index);
  }
  const T& at(size_t index) const {
    if (index >= size_) {
      throw std::out_of_range(""Index out of range"");
    }
    return operator[](index);
  }

 private:

  class InsideDeque {
   public:
    T* operator[] (int index) {
      return data_[index];
    }

    const T* operator[] (int index) const {
      return data_[index];
    }

    void PushBack(T* value) {
      if (right_index_ == capacity_) {
        IncreaseCapacity(false);
      }

      data_[right_index_] = value;
      ++right_index_;
    }

    void PushFront(T* value) {
      if (left_index_ == 0) {
        IncreaseCapacity(true);
      }

      --left_index_;
      data_[left_index_] = value;
    }

    void PopFront() {
      delete[] reinterpret_cast<char*>(data_[left_index_]);
      ++left_index_;
    }

    void PopBack() {
      --right_index_;
      delete[] reinterpret_cast<char*>(data_[right_index_]);
    }

    [[nodiscard]] T*Front() const {
      return data_[left_index_];
    }

    [[nodiscard]] T* Back() const {
      return data_[right_index_ - 1];
    }

    const T** GetConstData() const {
      return const_cast<const T**>(data_);
    }

    void IncreaseCapacity(bool is_back) {
      int new_capacity = capacity_ * 2 + 1;
      T** new_data_ = new T*[new_capacity];
      int shift_ = is_back * (new_capacity - capacity_);

      for (int i = left_index_; i < right_index_; ++i) {
        new_data_[i + shift_] = data_[i];
      }
      left_index_ += shift_;
      right_index_ += shift_;
      capacity_ = new_capacity;

      delete[] data_;
      data_ = new_data_;
    }

    ~InsideDeque() {
      for (int i = left_index_; i < right_index_; ++i) {
        delete[] reinterpret_cast<char*>(data_[i]);
      }
      delete[] data_;
    }

    T** data_ = nullptr;

    int left_index_ = 0;
    int right_index_ = 0;
    int capacity_ = 0;
  };

  template <bool is_const>
  class iteratorPrototype {
    using Type = std::conditional_t<is_const, const T, T>;

    iteratorPrototype(Type** data, int first, int second) : data_(data), first_ind(first), second_ind(second) {}

    friend Deque;
   public:

    using iterator_concept = std::random_access_iterator_tag;
    using iterator_category = std::random_access_iterator_tag;
    using value_type = std::conditional_t<is_const, const T, T>;
    using difference_type = std::ptrdiff_t;
    using pointer = std::conditional_t<is_const, const T*, T*>;
    using reference = std::conditional_t<is_const, const T&, T&>;

    Type** data_;
    int first_ind;
    int second_ind;
    iteratorPrototype& operator+= (int value) {
      second_ind += value;
      int new_second = (second_ind % kBlockSize_ + kBlockSize_) % kBlockSize_;
      first_ind += (second_ind - new_second) / kBlockSize_;
      second_ind = new_second;
      return *this;
    }
    iteratorPrototype& operator-= (int value) {
      second_ind -= value;
      int new_second = (second_ind % kBlockSize_ + kBlockSize_) % kBlockSize_;
      first_ind -= (new_second - second_ind) / kBlockSize_;
      second_ind = new_second;
      return *this;
    }
    iteratorPrototype& operator++ () {
      return operator+=(1);
    }
    iteratorPrototype& operator-- () {
      return operator-=(1);
    }
    iteratorPrototype<is_const> operator++ (int) {
      iteratorPrototype result = *this;
      operator++();
      return result;
    }
    iteratorPrototype<is_const> operator-- (int) {
      iteratorPrototype result = *this;
      operator--();
      return result;
    }
    iteratorPrototype operator+ (int value) const {
      iteratorPrototype result = *this;
      result += value;
      return result;
    }
    iteratorPrototype operator- (int value) const {
      iteratorPrototype result = *this;
      result -= value;
      return result;
    }

    template <bool another_const>
    iteratorPrototype operator= (const iteratorPrototype<another_const>& index) {
      first_ind = index.first_ind;
      second_ind = index.second_ind;
      if constexpr (is_const && !another_const) {
        data_ = const_cast<Type**>(index.data_);
      } else if constexpr (!is_const && another_const) {
        throw std::logic_error(""Can't assign const iteratorPrototype to non-const iteratorPrototype"");
      } else {
        data_ = index.data_;
      }
      return *this;
    }
    template<bool another_const>
    bool operator== (const iteratorPrototype<another_const>& index) const {
      return first_ind == index.first_ind && second_ind == index.second_ind;
    }
    template<bool another_const>
    bool operator!= (const iteratorPrototype<another_const>& index) const {
      return !(*this == index);
    }
    template<bool another_const>
    bool operator< (const iteratorPrototype<another_const>& index) const {
      return first_ind < index.first_ind || (first_ind == index.first_ind && second_ind < index.second_ind);
    }
    template<bool another_const>
    bool operator> (const iteratorPrototype<another_const>& index) const {
      return index < *this;
    }
    template<bool another_const>
    bool operator<= (const iteratorPrototype<another_const>& index) const {
      return !(*this > index);
    }
    template<bool another_const>
    bool operator>= (const iteratorPrototype<another_const>& index) const {
      return !(*this < index);
    }

    Type* operator-> () {
      return &data_[first_ind][second_ind];
    }
    Type& operator* () {
      return data_[first_ind][second_ind];
    }

    std::ptrdiff_t operator- (const iteratorPrototype& index) {
      return (first_ind - index.first_ind) * kBlockSize_ + (second_ind - index.second_ind);
    }

    operator iteratorPrototype<true>() const {
      return iteratorPrototype<true>(data_, first_ind, second_ind);
    }
  };

 public:

  using const_iterator = iteratorPrototype<true>;
  using iterator = iteratorPrototype<false>;

  iterator begin() {
    return iterator(data_.data_, data_.left_index_, left_index_);
  }
  iterator end() {
    return iterator(data_.data_, data_.right_index_ - (right_index_ != 0 ? 1 : 0), right_index_);
  }
  const_iterator begin() const {
    return cbegin();
  }
  const_iterator end() const {
    return cend();
  }
  const_iterator cbegin() const {
    return const_iterator(data_.GetConstData(), data_.left_index_, left_index_);
  }
  const_iterator cend() const {
    return const_iterator(data_.GetConstData(), data_.right_index_ - (right_index_ != 0 ? 1 : 0), right_index_);
  }

  std::reverse_iterator<iterator> rbegin() {
    return std::reverse_iterator<iterator>(end());
  }
  std::reverse_iterator<iterator> rend() {
    return std::reverse_iterator<iterator>(begin());
  }
  std::reverse_iterator<const_iterator> rbegin() const {
    return std::reverse_iterator<const_iterator>(cend());
  }
  std::reverse_iterator<const_iterator> rend() const {
    return std::reverse_iterator<const_iterator>(cbegin());
  }
  std::reverse_iterator<const_iterator> crbegin() const {
    return std::reverse_iterator<const_iterator>(cend());
  }
  std::reverse_iterator<const_iterator> crend() const {
    return std::reverse_iterator<const_iterator>(cbegin());
  }

  template<bool another_const>
  void insert(const iteratorPrototype<another_const>& it, const T& value) {
    push_back(value);
    for (auto nit = end() - 1; nit != it; --nit) {
      std::swap(*nit, *(nit - 1));
    }
  }
  template<bool another_const>
  void erase(const iteratorPrototype<another_const>& it) {
    for (auto nit = it; nit <= end() - 2; ++nit) {
      std::swap(*nit, *(nit + 1));
    }
    pop_back();
  }

  T* GetNewRow() {
    T* new_row = reinterpret_cast<T*>(new char[kBlockSize_ * sizeof(T)]);
    return new_row;
  }

  ~Deque() {
    for (size_t i = 0; i < size_; ++i) {
      operator[](i).~T();
    }
  }

  Deque& operator= (const Deque& other) {
    for (size_t i = 0; i < other.size_; ++i) {
      if (i == size_) {
        push_back(other[i]);
      } else {
        operator[](i) = other[i];
      }
    }
    while (size_ > other.size_) {
      pop_back();
    }
    return *this;
  }

  static constexpr int kBlockSize_ = 2;
  int left_index_ = 0;
  int right_index_ = 0;
  size_t size_ = 0;
  InsideDeque data_;
};
"
He3PQtnV,Untitled,panupatchong,Python,Thursday 14th of March 2024 11:26:22 AM CDT,"class LogicGate:
    def __init__(self, name):
        self.name = name
        self.pinA = None
        self.pinB = None

    def set_pins(self, pinA, pinB):
        self.pinA = pinA
        self.pinB = pinB


class HalfAdder(LogicGate):
    def __init__(self, name):
        super().__init__(name)
        self.xor_gate = XorGate(""xor1"")
        self.and_gate = AndGate(""and1"")

    def getOutput(self):
        if self.pinA is None or self.pinB is None:
            return ""Pins not set. Cannot perform gate logic.""
        
        self.xor_gate.pinA = self.pinA
        self.xor_gate.pinB = self.pinB
        self.and_gate.pinA = self.pinA
        self.and_gate.pinB = self.pinB

        ## OR, if you implemented set_pins ##
        self.xor_gate.set_pins(self.pinA, self.pinB)
        self.and_gate.set_pins(self.pinA, self.pinB)
        #####################################

        gate_sum = self.xor_gate.getOutput()
        gate_carry = self.and_gate.getOutput()

        return gate_sum, gate_carry


class BinaryGate(LogicGate):
    pass

class AndGate(BinaryGate):
    pass

"
