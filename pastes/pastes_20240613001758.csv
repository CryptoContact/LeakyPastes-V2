id,title,username,language,date,content
hCntNdbw,Untitled,dereksir,HTML,Wednesday 12th of June 2024 07:16:35 PM CDT,"<!DOCTYPE html>
<head>
<meta charset=""utf-8"" />
<title>Airtable Reviews 2024: Details, Pricing, &amp; Features | G2</title>

</head>"
Q1sDvkG3,2024-06-12_stats.json,rdp_snitch,JSON,Wednesday 12th of June 2024 07:16:05 PM CDT,"{
  ""ip"": {
    ""139.59.123.230"": 398,
    ""104.248.154.46"": 28,
    ""103.120.19.196"": 6,
    ""213.109.202.238"": 16,
    ""147.185.132.189"": 6,
    ""167.172.95.219"": 2,
    ""64.23.198.136"": 8,
    ""45.227.254.55"": 4,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 4,
    ""45.227.254.8"": 4,
    ""185.196.220.41"": 6,
    ""45.227.254.49"": 4,
    ""205.210.31.200"": 6,
    ""116.140.196.215"": 2,
    ""158.51.14.114"": 4,
    ""87.121.117.21"": 4,
    ""223.166.31.100"": 2,
    ""87.251.75.179"": 4,
    ""222.252.27.66"": 4,
    ""58.218.199.219"": 10,
    ""205.210.31.246"": 6,
    ""64.124.50.139"": 4,
    ""84.17.46.137"": 2,
    ""152.89.198.238"": 2,
    ""128.14.237.9"": 2,
    ""45.227.254.54"": 4,
    ""194.165.16.10"": 4,
    ""205.210.31.6"": 6,
    ""81.19.135.2"": 6,
    ""45.227.254.26"": 4,
    ""103.150.221.223"": 2
  },
  ""asn"": {
    ""AS14061"": 436,
    ""AS131939"": 6,
    ""AS208312"": 16,
    ""AS396982"": 24,
    ""AS267784"": 20,
    ""AS197414"": 4,
    ""AS208091"": 8,
    ""AS208046"": 6,
    ""AS4837"": 2,
    ""AS398465"": 4,
    ""AS140599"": 6,
    ""AS17621"": 2,
    ""AS45899"": 4,
    ""AS4134"": 10,
    ""AS6461"": 4,
    ""AS60068"": 2,
    ""AS57523"": 2,
    ""AS135377"": 2,
    ""AS48721"": 4,
    ""AS209588"": 6
  },
  ""isp"": {
    ""DIGITALOCEAN"": 398,
    ""DigitalOcean, LLC"": 38,
    ""IPS INC"": 6,
    ""Red Byte LLC"": 16,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 30,
    ""Xhost Internet Solutions LP"": 12,
    ""ColocationX Ltd."": 6,
    ""China Unicom CHINA169 Network"": 2,
    ""Rackdog, LLC"": 4,
    ""Comfac Corporation"": 6,
    ""China Unicom Shanghai Province Network"": 2,
    ""VietNam Post and Telecom Corporation"": 4,
    ""Chinanet"": 10,
    ""Zayo Bandwidth"": 4,
    ""DataCamp Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Zenlayer Inc"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 436,
    ""IPS Inc"": 6,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""UAB Host Baltic"": 20,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Makut Investments"": 6,
    ""China United Network Communications Corporation Limited"": 2,
    ""AB E-Commerce, LLC"": 4,
    ""Comfac Corporation"": 6,
    ""Unknown"": 2,
    ""Hanoi Post and Telecom Company"": 4,
    ""Chinanet JS"": 10,
    ""Microsoft Corporation"": 4,
    ""Cdn77 AMS"": 2,
    ""Starcrecium Limited"": 2,
    ""UCLOUD"": 2,
    ""Flyservers S.A"": 4,
    ""Alviva Holding Limited"": 6
  },
  ""regionName"": {
    ""South West"": 400,
    ""Central Singapore"": 28,
    ""Tokyo"": 6,
    ""Moscow"": 18,
    ""California"": 32,
    ""Vilnius"": 20,
    ""North Holland"": 14,
    ""Virginia"": 6,
    ""Beijing"": 2,
    ""Illinois"": 4,
    ""Metro Manila"": 4,
    ""Shanghai"": 2,
    ""Hanoi"": 4,
    ""Jiangsu"": 10,
    ""Washington"": 4,
    ""Taiwan"": 2,
    ""Kaunas"": 4,
    ""Hesse"": 6,
    ""Davao Region"": 2
  },
  ""country"": {
    ""Singapore"": 428,
    ""Japan"": 6,
    ""Russia"": 18,
    ""United States"": 46,
    ""Lithuania"": 24,
    ""The Netherlands"": 14,
    ""China"": 14,
    ""Philippines"": 6,
    ""Vietnam"": 4,
    ""Taiwan"": 2,
    ""Germany"": 6
  },
  ""account"": {
    ""hello"": 464,
    ""Test"": 42,
    ""lxgDJBWWv"": 2,
    ""niWwLF"": 2,
    ""MqLnGH"": 2,
    ""Administr"": 12,
    ""Domain"": 20,
    ""mVwctuHGD"": 2,
    ""mOPqfx"": 2,
    ""Yvjpfm"": 2,
    ""(empty)"": 4,
    ""RjyRLGUYA"": 2,
    ""mXlcYU"": 2,
    ""BrDaqD"": 2,
    ""Administrator"": 2,
    ""QWuUWUxzD"": 2,
    ""SMDEpl"": 2,
    ""GHYPCi"": 2
  },
  ""keyboard"": {
    ""Unknown"": 568
  },
  ""client_build"": {
    ""Unknown"": 568
  },
  ""client_name"": {
    ""Unknown"": 568
  },
  ""ip_type"": {
    ""hosting"": 460,
    ""Unknown"": 76,
    ""proxy"": 24,
    ""hosting & proxy"": 4,
    ""mobile"": 4
  }
}"
MByafF5K,2024-06-12_stats.json,rdp_snitch,JSON,Wednesday 12th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""139.59.123.230"": 199,
    ""104.248.154.46"": 14,
    ""103.120.19.196"": 3,
    ""213.109.202.238"": 8,
    ""147.185.132.189"": 3,
    ""167.172.95.219"": 1,
    ""64.23.198.136"": 4,
    ""45.227.254.55"": 2,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 2,
    ""45.227.254.8"": 2,
    ""185.196.220.41"": 3,
    ""45.227.254.49"": 2,
    ""205.210.31.200"": 3,
    ""116.140.196.215"": 1,
    ""158.51.14.114"": 2,
    ""87.121.117.21"": 2,
    ""223.166.31.100"": 1,
    ""87.251.75.179"": 2,
    ""222.252.27.66"": 2,
    ""58.218.199.219"": 5,
    ""205.210.31.246"": 3,
    ""64.124.50.139"": 2,
    ""84.17.46.137"": 1,
    ""152.89.198.238"": 1,
    ""128.14.237.9"": 1,
    ""45.227.254.54"": 2,
    ""194.165.16.10"": 2,
    ""205.210.31.6"": 3,
    ""81.19.135.2"": 3,
    ""45.227.254.26"": 2,
    ""103.150.221.223"": 1
  },
  ""asn"": {
    ""AS14061"": 218,
    ""AS131939"": 3,
    ""AS208312"": 8,
    ""AS396982"": 12,
    ""AS267784"": 10,
    ""AS197414"": 2,
    ""AS208091"": 4,
    ""AS208046"": 3,
    ""AS4837"": 1,
    ""AS398465"": 2,
    ""AS140599"": 3,
    ""AS17621"": 1,
    ""AS45899"": 2,
    ""AS4134"": 5,
    ""AS6461"": 2,
    ""AS60068"": 1,
    ""AS57523"": 1,
    ""AS135377"": 1,
    ""AS48721"": 2,
    ""AS209588"": 3
  },
  ""isp"": {
    ""DIGITALOCEAN"": 199,
    ""DigitalOcean, LLC"": 19,
    ""IPS INC"": 3,
    ""Red Byte LLC"": 8,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 15,
    ""Xhost Internet Solutions LP"": 6,
    ""ColocationX Ltd."": 3,
    ""China Unicom CHINA169 Network"": 1,
    ""Rackdog, LLC"": 2,
    ""Comfac Corporation"": 3,
    ""China Unicom Shanghai Province Network"": 1,
    ""VietNam Post and Telecom Corporation"": 2,
    ""Chinanet"": 5,
    ""Zayo Bandwidth"": 2,
    ""DataCamp Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Zenlayer Inc"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 218,
    ""IPS Inc"": 3,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 10,
    ""Xhostis"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Makut Investments"": 3,
    ""China United Network Communications Corporation Limited"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""Comfac Corporation"": 3,
    ""Unknown"": 1,
    ""Hanoi Post and Telecom Company"": 2,
    ""Chinanet JS"": 5,
    ""Microsoft Corporation"": 2,
    ""Cdn77 AMS"": 1,
    ""Starcrecium Limited"": 1,
    ""UCLOUD"": 1,
    ""Flyservers S.A"": 2,
    ""Alviva Holding Limited"": 3
  },
  ""regionName"": {
    ""South West"": 200,
    ""Central Singapore"": 14,
    ""Tokyo"": 3,
    ""Moscow"": 9,
    ""California"": 16,
    ""Vilnius"": 10,
    ""North Holland"": 7,
    ""Virginia"": 3,
    ""Beijing"": 1,
    ""Illinois"": 2,
    ""Metro Manila"": 2,
    ""Shanghai"": 1,
    ""Hanoi"": 2,
    ""Jiangsu"": 5,
    ""Washington"": 2,
    ""Taiwan"": 1,
    ""Kaunas"": 2,
    ""Hesse"": 3,
    ""Davao Region"": 1
  },
  ""country"": {
    ""Singapore"": 214,
    ""Japan"": 3,
    ""Russia"": 9,
    ""United States"": 23,
    ""Lithuania"": 12,
    ""The Netherlands"": 7,
    ""China"": 7,
    ""Philippines"": 3,
    ""Vietnam"": 2,
    ""Taiwan"": 1,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 232,
    ""Test"": 21,
    ""lxgDJBWWv"": 1,
    ""niWwLF"": 1,
    ""MqLnGH"": 1,
    ""Administr"": 6,
    ""Domain"": 10,
    ""mVwctuHGD"": 1,
    ""mOPqfx"": 1,
    ""Yvjpfm"": 1,
    ""(empty)"": 2,
    ""RjyRLGUYA"": 1,
    ""mXlcYU"": 1,
    ""BrDaqD"": 1,
    ""Administrator"": 1,
    ""QWuUWUxzD"": 1,
    ""SMDEpl"": 1,
    ""GHYPCi"": 1
  },
  ""keyboard"": {
    ""Unknown"": 284
  },
  ""client_build"": {
    ""Unknown"": 284
  },
  ""client_name"": {
    ""Unknown"": 284
  },
  ""ip_type"": {
    ""hosting"": 230,
    ""Unknown"": 38,
    ""proxy"": 12,
    ""hosting & proxy"": 2,
    ""mobile"": 2
  }
}"
XgDGx3nR,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,portalxwe,GetText,Wednesday 12th of June 2024 07:14:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
13 June 2024"
NcRtCTDv,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,kiraezwhethe,Python,Wednesday 12th of June 2024 07:11:57 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
jTU1R2aq,Untitled,dereksir,Ruby,Wednesday 12th of June 2024 07:06:32 PM CDT,"# import the required gem
require 'faraday'

url = URI.parse('https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fhttpbin.io%2Fanything')
conn = Faraday.new()
conn.options.timeout = 180
res = conn.get(url, nil, nil)
print(res.body)"
FMjSg4JM,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,wwxcwx,GetText,Wednesday 12th of June 2024 07:06:04 PM CDT,"G2A.com free gift card & games updated guide..
Any item for free on G2A.com including Amazon, Steam, Xbox Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
13 June 2024"
GUaJLgNm,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,ColtM4A2,Python,Wednesday 12th of June 2024 07:05:55 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
LHGvZhvm,Untitled,TacoLander,GetText,Wednesday 12th of June 2024 07:05:26 PM CDT,schoolfishdogtvhomeclam
3YvpcgQb,Untitled,dereksir,Bash,Wednesday 12th of June 2024 07:04:14 PM CDT,gem install faraday
Bb8vRU8K,üéÅG2A.com Free Gift Card Guide June 2024 NEWüéÅ,ssss50ws,GetText,Wednesday 12th of June 2024 07:00:45 PM CDT,"G2A.com free gift card & games updated guide
Any item for free on G2A.com including Amazon, Steam, Xbox Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
12 June 2024"
BeRBJ5Gk,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Skarface-MKL,Python,Wednesday 12th of June 2024 06:59:56 PM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
dypaT2ZT,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,x2w,GetText,Wednesday 12th of June 2024 06:54:57 PM CDT,"G2A.com free gift card & games updated guide,
Any item for free on G2A.com including Amazon, Steam, Xbox Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
12 June 2024"
UMSDjSB5,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,thepplayz,Python,Wednesday 12th of June 2024 06:53:56 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
ZRJEkUi3,place1x3,woflmao,Lua,Wednesday 12th of June 2024 06:49:40 PM CDT,"local tArgs = {...}
 
if #tArgs == 0 then
    print(""Please input a length"")
    length = 0
else
    length = tonumber(tArgs[1])
end 

turtle.select(1)

function down() 
	if (turtle.getItemCount(turtle.getSelectedSlot()) == 0) then
        if (turtle.getSelectedSlot() == 16) then
            return
        else
            turtle.select(turtle.getSelectedSlot() + 1)
    end
	turtle.placeDown()
	turtle.up()
	turtle.placeDown()
	turtle.back()
	turtle.place()
end

function up()
	if (turtle.getItemCount(turtle.getSelectedSlot()) == 0) then
        if (turtle.getSelectedSlot() == 16) then
            return
        else
            turtle.select(turtle.getSelectedSlot() + 1)
    end
	turtle.down()
	turtle.placeUp()
	turtle.down()
	turtle.placeUp()
	turtle.back()
	turtle.place()
	turtle.up()
end

for i=1, length, 1 do
	down()
	up()
end"
RwRH8uwc,–±–æ–ª—å–Ω–∏—á–∫–∞ 002,KirVasin,C#,Wednesday 12th of June 2024 06:43:47 PM CDT,"using System;


namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int peopleCount; 
            int waitTimeHour;   
            int waitTimeMinuts;  
            int timePerPerson = 10; 
            int minutInHour = 60;  

            Console.WriteLine(""–í—ã –≤ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–µ.–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–≥–¥–∞ –≤–∞—Å –ø—Ä–∏–º–µ—Ç –≤—Ä–∞—á,–Ω–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –ª—é–¥–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏?"");
            Console.WriteLine(""–í–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ ."");
            peopleCount = Convert.ToInt32(Console.ReadLine());
            waitTimeHour = (peopleCount * timePerPerson) / minutInHour;
            waitTimeMinuts=(peopleCount*timePerPerson)%minutInHour;
            Console.WriteLine(""–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è, —Å–æ—Å—Ç–∞–≤–∏—Ç - "" + waitTimeHour +"" —á–∞—Å–æ–≤ "" + waitTimeMinuts+ "" –º–∏–Ω—É—Ç."");
        }
    }
}"
tkpiwQhY,ü§ëG2A.com Free Gift Card Guide June 2024 NEWü§ë,BitcoinScript2020,GetText,Wednesday 12th of June 2024 06:43:47 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!.
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
13 June 2024"
uX2Sv0z6,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,sayid83,Python,Wednesday 12th of June 2024 06:41:56 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
QbMyVN9X,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,PetrikDev,Python,Wednesday 12th of June 2024 06:35:56 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
kq11SfKx,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,x3kiN,Python,Wednesday 12th of June 2024 06:29:57 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
WkBbZt73,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FeasModz514,Python,Wednesday 12th of June 2024 06:23:58 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
8seK7FPb,Untitled,dereksir,Ruby,Wednesday 12th of June 2024 06:16:14 PM CDT,"require 'puppeteer-ruby'

# define your proxy server 
proxy_server = ""http://99.80.11.54:3128

Puppeteer.launch(headless: true, args: [""--proxy-server=#{proxy_server}"", ""--ignore-certificate-errors""]) do |browser|
  page = browser.new_page

  # set the custom user agent
  page.set_user_agent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36')

  # navigate to the website
  page.goto(""https://www.g2.com/products/airtable/reviews"")

  # take a screenshot
  page.screenshot(path: ""screenshot.png"")

  browser.close
end"
E1gnTSFk,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Wednesday 12th of June 2024 06:13:32 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_702573.pdf

Working as of:
13 June 2024"
GuiuaAW4,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Bufayez,Python,Wednesday 12th of June 2024 06:11:58 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
69hB1yRc,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,buch,Python,Wednesday 12th of June 2024 06:05:42 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
17jtnjbx,place 3x1,woflmao,Lua,Wednesday 12th of June 2024 06:05:23 PM CDT,"local tArgs = {...}
 
if #tArgs == 0 then
    print(""Please input a length"")
    length = 0
else
    length = tonumber(tArgs[1])
end

turtle.select(1)

function rowOne()
	if (turtle.getItemCount(turtle.getSelectedSlot()) == 0) then
		if (turtle.getSelectedSlot() == 16) then
			return
		else
			turtle.select(turtle.getSelectedSlot() + 1)
        end
	end
	turtle.place()
	turtle.back()
	turtle.place()
	turtle.turnRight()
	turtle.back()
	turtle.place()
	turtle.turnRight()
	turtle.back()
end

function rowTwo()
	if (turtle.getItemCount(turtle.getSelectedSlot()) == 0) then
		if (turtle.getSelectedSlot() == 16) then
			return
		else
			turtle.select(turtle.getSelectedSlot() + 1)
        end
	end
	turtle.place()
	turtle.back()
	turtle.place()
	turtle.turnLeft()
	turtle.back()
	turtle.place()
	turtle.turnLeft()
	turtle.back()
end

for i=1, length, 1 do
	rowOne()
	rowTwo()
end
"
9m20gDu7,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Alfonso1119,Python,Wednesday 12th of June 2024 05:59:38 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
7MQtbKbn,"""RFID Identification"" rev_01",pleasedontcode,Arduino,Wednesday 12th of June 2024 05:57:29 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""RFID Identification""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-06-12 22:54:58

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Enhance the RFID system to assign a unique random */
	/* identifier to each new RFID tag detected using the */
	/* MFRC522 module. Ensure the identifier is stored */
	/* and displayed via serial communication for */
	/* verification. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <SPI.h>
#include <MFRC522.h> //https://github.com/miguelbalboa/rfid

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void printHex(byte *buffer, byte bufferSize);
void printDec(byte *buffer, byte bufferSize);
void generateRandomIdentifier(byte *buffer, byte bufferSize);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t rfid_MFRC522_IRQ_PIN_D13 = 13;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t rfid_MFRC522_RST_PIN_D4 = 4;

/***** DEFINITION OF SPI PINS *****/
const uint8_t rfid_MFRC522_SPI_PIN_MOSI_D23 = 23;
const uint8_t rfid_MFRC522_SPI_PIN_MISO_D19 = 19;
const uint8_t rfid_MFRC522_SPI_PIN_SCLK_D18 = 18;
const uint8_t rfid_MFRC522_SPI_PIN_CS_D5 = 5;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool rfid_MFRC522_RST_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float rfid_MFRC522_RST_PIN_D4_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
MFRC522 rfid(rfid_MFRC522_SPI_PIN_CS_D5, rfid_MFRC522_RST_PIN_D4); // Instance of the class
MFRC522::MIFARE_Key key; // Key instance

byte nuidPICC[4]; // Array to store new NUID
byte uniqueID[4]; // Array to store unique random identifier

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600); // Initialize serial communication
  pinMode(rfid_MFRC522_IRQ_PIN_D13, INPUT_PULLUP);
  pinMode(rfid_MFRC522_RST_PIN_D4, OUTPUT);
  pinMode(rfid_MFRC522_SPI_PIN_CS_D5, OUTPUT);

  // start the SPI library:
  SPI.begin();
  rfid.PCD_Init(); // Init MFRC522

  for (byte i = 0; i < 6; i++) {
    key.keyByte[i] = 0xFF;
  }

  Serial.println(F(""This code scans the MIFARE Classic NUID.""));
  Serial.print(F(""Using the following key:""));
  printHex(key.keyByte, MFRC522::MF_KEY_SIZE);

  // Seed the random number generator
  randomSeed(analogRead(0));
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  updateOutputs(); // Refresh output data

  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) return;

  Serial.print(F(""PICC type: ""));
  MFRC522::PICC_Type piccType = rfid.PICC_GetType(rfid.uid.sak);
  Serial.println(rfid.PICC_GetTypeName(piccType));

  if (piccType != MFRC522::PICC_TYPE_MIFARE_MINI &&
      piccType != MFRC522::PICC_TYPE_MIFARE_1K &&
      piccType != MFRC522::PICC_TYPE_MIFARE_4K) {
    Serial.println(F(""Your tag is not of type MIFARE Classic.""));
    return;
  }

  if (memcmp(rfid.uid.uidByte, nuidPICC, 4) != 0) {
    Serial.println(F(""A new card has been detected.""));
    memcpy(nuidPICC, rfid.uid.uidByte, 4);

    Serial.println(F(""The NUID tag is:""));
    Serial.print(F(""In hex: ""));
    printHex(rfid.uid.uidByte, rfid.uid.size);
    Serial.println();
    Serial.print(F(""In dec: ""));
    printDec(rfid.uid.uidByte, rfid.uid.size);
    Serial.println();

    // Generate and display a unique random identifier for the new card
    generateRandomIdentifier(uniqueID, 4);
    Serial.println(F(""Assigned unique identifier:""));
    Serial.print(F(""In hex: ""));
    printHex(uniqueID, 4);
    Serial.println();
    Serial.print(F(""In dec: ""));
    printDec(uniqueID, 4);
    Serial.println();
  } else {
    Serial.println(F(""Card read previously.""));
  }

  rfid.PICC_HaltA(); // Halt PICC
  rfid.PCD_StopCrypto1(); // Stop encryption on PCD
}

void updateOutputs()
{
  digitalWrite(rfid_MFRC522_RST_PIN_D4, rfid_MFRC522_RST_PIN_D4_rawData);
}

void printHex(byte *buffer, byte bufferSize) {
  for (byte i = 0; i < bufferSize; i++) {
    Serial.print(buffer[i] < 0x10 ? "" 0"" : "" "");
    Serial.print(buffer[i], HEX);
  }
}

void printDec(byte *buffer, byte bufferSize) {
  for (byte i = 0; i < bufferSize; i++) {
    Serial.print(buffer[i] < 0x10 ? "" 0"" : "" "");
    Serial.print(buffer[i], DEC);
  }
}

void generateRandomIdentifier(byte *buffer, byte bufferSize) {
  for (byte i = 0; i < bufferSize; i++) {
    buffer[i] = random(0, 256); // Generate a random byte
  }
}

/* END CODE */"
vs2sf9M3,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Garoam,Python,Wednesday 12th of June 2024 05:53:36 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
VKqjNAPg,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,atakan1983,Python,Wednesday 12th of June 2024 05:47:37 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
PCa0ZC2c,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,tajdiqul,Python,Wednesday 12th of June 2024 05:41:35 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
p2hqr7FX,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,notgoodatscripting,Python,Wednesday 12th of June 2024 05:35:36 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
GTg4Fn9E,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,bgill55,Python,Wednesday 12th of June 2024 05:29:35 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
m0McPmW4,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FreeRobux12345,Python,Wednesday 12th of June 2024 05:23:36 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
BtVxQDMW,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,coderpradip,Python,Wednesday 12th of June 2024 05:17:36 PM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
S6kaQm0R,Mess of a kernel,Zgragselus,C,Wednesday 12th of June 2024 05:12:41 PM CDT,"extern ""C"" __global__ void otrace_kernel(void)
{
	// Get information from constant memory
    const OtraceInput& in = c_OtraceInput;
	int numRays = in.numRays;
	bool anyHit = in.anyHit;
	float4* rays = (float4*)in.rays;
	int4* results = (int4*)in.results;
	float4* nodesA = (float4*)in.nodesA;
	float4* nodesB = (float4*)in.nodesB;
    float4* nodesC = (float4*)in.nodesC;
    float4* nodesD = (float4*)in.nodesD;
    float4* trisA = (float4*)in.trisA;
    float4* trisB = (float4*)in.trisB;
    float4* trisC = (float4*)in.trisC;
	int* triIndices = (int*)in.triIndices;
	float2*	texCoords = (float2*)in.texCoords;
	float3* normals = (float3*)in.normals;
	int3* vertIdx = (int3*)in.triVertIndex;
	float4* atlasInfo = (float4*)in.atlasInfo;
	int* matId = (int*)in.matId;
	float4* matInfo = (float4*)in.matInfo;
	int emissiveCount = in.emissiveNum;
	int3* emissive = (int3*)in.emissive;
	int trisCount = in.trisCount;
	int3* tris = (int3*)in.tris;
	int vertsCount = in.vertsCount;
	float3* verts = (float3*)in.verts;
	int randomSeed = in.randomSeed;
	unsigned int* triMaterialColor    = (unsigned int*)in.matColor;

    int rayidx = threadIdx.x + blockDim.x * (threadIdx.y + blockDim.y * (blockIdx.x + gridDim.x * blockIdx.y));
    if (rayidx >= numRays)
        return;

	// Cast primary ray
	int hitIndex;
	float hitU;
	float hitV;
	float hitT;
	float4 result = make_float4(0.0f, 0.0f, 0.0f, 1.0f);
	float4 primO = rays[rayidx * 2 + 0];
	float4 primD = rays[rayidx * 2 + 1];
	float4 tempDir;
	float mult_val = 1.0f;

	/*result = make_float4(-random(in.randomSeed, rayidx),
		-random(in.randomSeed, rayidx),
		-random(in.randomSeed, rayidx),
		1.0f);
    STORE_RESULT(rayidx, hitIndex, result.x, result.y, result.z);
	return;*/

	// For each sample per pixel
	for (int spp = 0; spp < SAMPLES_PER_PIXEL; spp++)
	{
		// Grab primitive origin and direction
		rays[rayidx * 2 + 0] = primO;
		rays[rayidx * 2 + 1] = primD;

		int depth = 0;
		float4 color = make_float4(0.0f, 0.0f, 0.0f, 1.0f);				// Accumulated color
		float4 reflectance = make_float4(1.0f, 1.0f, 1.0f, 1.0f);		// Accumulated reflectance
		while(true)
		{
			// If we miss, return black
			bool hit = traversal(rayidx, numRays, rays, nodesA, anyHit, results, &hitIndex, &hitT, &hitU, &hitV);
			if (hit == false || hitIndex == -1)
			{
				break;
			}
			
			// Get hit triangle index, compute barycentric coordinates, texture coordinates, hitpoint and normal; break on hitting light
			int tri = hitIndex;
			if (matInfo[matId[tri]].x > 0.0f)
			{
				color = color + reflectance * make_float4(matInfo[matId[tri]].x, matInfo[matId[tri]].x, matInfo[matId[tri]].x, 1.0f);
				break;
			}
			float3 bary = make_float3(hitU, hitV, 1.0f - hitU - hitV);
			float4 hitPoint = rays[rayidx * 2 + 0] + rays[rayidx * 2 + 1] * hitT * 0.99f;
			float4 hitPointBehind = rays[rayidx * 2 + 0] + rays[rayidx * 2 + 1] * hitT * 1.01f;
			float3 normal = interpolateAttribute3f(bary, normals[vertIdx[tri].x], normals[vertIdx[tri].y], normals[vertIdx[tri].z]);
			float2 tc = interpolateAttribute2f(bary, texCoords[vertIdx[tri].x], texCoords[vertIdx[tri].y], texCoords[vertIdx[tri].z]);
			// Calculate normal (always directing towards ray origin)
			float3 normalDir = dot(normal, make_float3(rays[rayidx * 2 + 1])) < 0.0f ? normal : normal * -1;
			// Sample color	
			float4 f = matInfo[matId[tri]].x > 0.0f ? make_float4(matInfo[matId[tri]].x, matInfo[matId[tri]].x, matInfo[matId[tri]].x, 1.0f) : 
				matInfo[matId[tri]].w == 0.0f ? fromABGR(triMaterialColor[tri]) : sample2D(bary, tc, atlasInfo[tri], t_textureAtlas);
			f.x = powf(f.x, 2.2f);
			f.y = powf(f.y, 2.2f);
			f.z = powf(f.z, 2.2f);
			// Calculate maximum reflectance
			float p = f.x > f.y && f.x > f.z ? f.x : f.y > f.z ? f.y : f.z;
			
			// Store previous ray dir
			float4 raydir = rays[rayidx * 2 + 1];

			// Explicit step
			if (matInfo[matId[tri]].y == 0.0f && matInfo[matId[tri]].z == 0.0f)
			{
				int emiId = (uint)randomInt(in.randomSeed, rayidx + (spp + 127) * (rayidx + (depth + 334) * (rayidx + 72))) % emissiveCount;
				float3 baryRand = make_float3(random(in.randomSeed, rayidx + (spp + 17) * (rayidx + (depth + 68) * (rayidx + 62))), 
					random(in.randomSeed, rayidx + (spp + 63) * (rayidx + (depth + 68) * (rayidx + 628))), 
					0.0f);
				if(baryRand.x + baryRand.y > 1.0f)
				{
					baryRand.x = 1.0f - baryRand.x;
					baryRand.y = 1.0f - baryRand.y;
				}
				baryRand.z = 1.0f - baryRand.x - baryRand.y;
				float3 sp = interpolateAttribute3f(baryRand, verts[emissive[emiId].x], verts[emissive[emiId].y], verts[emissive[emiId].z]);
				float3 l = sp - make_float3(hitPoint);
				float atten = sqrtf(1.0f / (length(l) + 1.0f));
				l = normalize(l);
				rays[rayidx * 2 + 0] = hitPoint;
				rays[rayidx * 2 + 0].w = 0.01f;
				rays[rayidx * 2 + 1] = make_float4(l, 10000.0f);
				hit = traversal(rayidx, numRays, rays, nodesA, anyHit, results, &hitIndex, &hitT, &hitU, &hitV);
				float4 expl = make_float4(0.0f, 0.0f, 0.0f, 0.0f);
				if (hit && matInfo[matId[hitIndex]].x > 0.0f)
				{
					expl = matInfo[matId[hitIndex]].x * f * dot(normalDir, l) * atten;
				}

				color = color + reflectance * (matInfo[matId[tri]].x > 0.0f ? matInfo[matId[tri]].x : 0.0f) + reflectance * expl;
			}
			else
			{
				color = color + reflectance * (matInfo[matId[tri]].x > 0.0f ? matInfo[matId[tri]].x : 0.0f);
			}

			// Russian roulette
			if (++depth > 3)
			{
				if (random(in.randomSeed, rayidx + spp * (rayidx + depth * (rayidx + 256))) < p)
				{
					f = f * (1.0f / p);

					if (depth > MAX_PATH_LENGTH)
					{
						break;
					}
				}
				else
				{
					break;
				}
			}
			
			reflectance = reflectance * f;
			// Diffuse
			if (matInfo[matId[tri]].y == 0.0f && matInfo[matId[tri]].z == 0.0f)
			{
				float r1 = 2.0f * 3.141592654f * random(in.randomSeed, rayidx + (spp + 37) * (rayidx + (depth + 17) * (rayidx + 171)));
				float r2 = random(in.randomSeed, rayidx + (spp + 63) * (rayidx + (depth + 94) * (rayidx + 317)));
				float r2s = sqrtf(r2);
				float3 w = normalDir;
				float3 u = normalize(cross((fabsf(w.x) > 0.1f ? make_float3(0.0f, 1.0f, 0.0f) : make_float3(1.0f, 0.0f, 0.0f)), w));
				float3 v = cross(w, u);
				float3 d = normalize(u * cosf(r1) * r2s + v * sinf(r1) * r2s + w * sqrtf(1.0f - r2));
				rays[rayidx * 2 + 0] = hitPoint;
				rays[rayidx * 2 + 0].w = 0.01f;
				rays[rayidx * 2 + 1] = make_float4(d, 10000.0f);
			}
			// Ideal dielectric reflection
			else if (matInfo[matId[tri]].z == 0.0f)
			{
				rays[rayidx * 2 + 0] = hitPoint;
				rays[rayidx * 2 + 0].w = 0.01f;
				rays[rayidx * 2 + 1] = raydir - 2.0f * make_float4(normal, 0.0f) * dot(make_float4(normal, 0.0f), raydir);
			}
			// Ideal dielectric refraction
			else if (matInfo[matId[tri]].y == 0.0f)
			{
				rays[rayidx * 2 + 0] = hitPoint;
				rays[rayidx * 2 + 0].w = 0.01f;
				rays[rayidx * 2 + 1] = raydir - 2.0f * make_float4(normal, 0.0f) * dot(make_float4(normal, 0.0f), raydir);

				bool into = dot(normal, normalDir) > 0.0f;
				float nc = 1.0f;
				float nt = 1.5f;
				float nnt = into ? nc / nt : nt / nc;
				float ddn = dot(make_float3(raydir), normalDir);
				float cos2t = 1.0f - nnt * nnt * (1.0f - ddn * ddn);
				if (cos2t < 0.0f)
				{
					continue;
				}
				float3 tdir = normalize(make_float3(raydir) * nnt - normal * ((into ? 1.0f : -1.f) * (ddn * nnt + sqrtf(cos2t))));
				//float3 tdir = normalize(make_float3(raydir));
				float a = nt - nc;
				float b = nt + nc;
				float c = 1.0f - (into ? -ddn : dot(tdir, normal));
				float Re = matInfo[matId[tri]].y + (1.0f - matInfo[matId[tri]].y) * c * c * c * c * c;
				float Tr = 1.0f - Re;
				float P = 0.25f + 0.5f * Re;
				float RP = Re / P;
				float TP = Tr / (1.0f - P);

				if (random(in.randomSeed, rayidx + (spp + 63) * (rayidx + (depth + 94) * (rayidx + 317))) < P)
				{
					reflectance = reflectance * RP;
				}
				else
				{
					reflectance = reflectance * TP;
					rays[rayidx * 2 + 0] = hitPointBehind;
					rays[rayidx * 2 + 0].w = 0.01f;
					rays[rayidx * 2 + 1] = make_float4(tdir, 10000.0f);
				}
			}
		}
		
		result = result + color;

		// Until path is terminated or path maximum length is reached
		/*for (int path = 0; path < MAX_PATH_LENGTH; path++)
		{
			float4 color = make_float4(0.0f, 0.0f, 0.0f, 1.0f);
			float3 normal = make_float3(0.0f, 0.0f, 0.0f);
			float len;
			bool hit;
		
			tempDir = rays[rayidx * 2 + 1];

			// Check hit
			hit = traversal(rayidx, numRays, rays, nodesA, anyHit, results, &hitIndex, &hitT, &hitU, &hitV);
			if(hit)
			{
				int tri = hitIndex;
				if (tri == -1)
				{
					// Invalid triangle hit - return black
					color = make_float4(0.0f, 0.0f, 0.0f, 1.0f);
				}
				else
				{
					if(matInfo[matId[tri]].w == 0.0f)
					{
						// We hit a light
						color = make_float4(1.0f, 1.0f, 1.0f, 1.0f);
						normal = make_float3(rays[rayidx * 2 + 1]);
					}
					else
					{
						// We hit a triangle
						float3 bary = make_float3(hitU, hitV, 1.0f - hitU - hitV);

						// Sample diffuse texture for color
						float2 tc = interpolateAttribute2f(bary, texCoords[vertIdx[tri].x], texCoords[vertIdx[tri].y], texCoords[vertIdx[tri].z]);
						color = sample2D(bary, tc, atlasInfo[tri], t_textureAtlas);

						// Interpolate normal
						normal = interpolateAttribute3f(bary, normals[vertIdx[tri].x], normals[vertIdx[tri].y], normals[vertIdx[tri].z]);
				
						// Generate random value for emissive triangle ID
						int hashA = in.randomSeed + path * spp + spp + path + rayidx * (path + threadIdx.x + 17);
						int hashB = 0x9e3779b9u;
						int hashC = 0x9e3779b9u;
						jenkinsMix(hashA, hashB, hashC);
						int emiId = (uint)hashC % emissiveCount;

						// Generate random barycentric coordinate
						float3 baryRand = make_float3((float)hashA * exp2f(-32), (float)hashB * exp2f(-32), 0.0f);
						if(baryRand.x + baryRand.y > 1.0f)
						{
							baryRand.x = 1.0f - baryRand.x;
							baryRand.y = 1.0f - baryRand.y;
						}
						baryRand.z = 1.0f - baryRand.x - baryRand.y;

						// Calculate new origin and direction to light
						rays[rayidx * 2 + 0] = rays[rayidx * 2 + 0] + rays[rayidx * 2 + 1] * hitT * 0.99f;
						rays[rayidx * 2 + 0].w = 0.01f;
						float3 pos = interpolateAttribute3f(baryRand, verts[emissive[emiId].x], verts[emissive[emiId].y], verts[emissive[emiId].z]);
						float3 dir = pos - make_float3(rays[rayidx * 2 + 0]);
						len = length(dir);
						dir = normalize(dir);
						rays[rayidx * 2 + 1] = make_float4(dir, 10000.0f);

						// Calculate BRDF
						
						color = color * max(dot(dir, normal), 0.0f);
					}
				}
			}

			// Cast a ray against random light source position
			int hitIdx;
			hit = traversal(rayidx, numRays, rays, nodesA, anyHit, results, &hitIdx, &hitT, &hitU, &hitV);
			if (hit)
			{
				// Hit means shadow, unless emissive material
				if (hitIdx != -1)
				{
					if(matInfo[matId[hitIdx]].w != 0.0f)
					{
						color *= 0.0f;
					}
				}
			}
		
			// Generate random value for next step
			int hashA = in.randomSeed + path * spp + spp + path * 4 + 27 + rayidx * (path + threadIdx.x + 34);
			int hashB = 0x9e3779b9u;
			int hashC = 0x9e3779b9u;
			jenkinsMix(hashA, hashB, hashC);
			rays[rayidx * 2 + 0].w = 0.01f;
			rays[rayidx * 2 + 1] = normalize(make_float4((float)hashA * exp2f(-32), (float)hashB * exp2f(-32), (float)hashC * exp2f(-32), 0.0f));
			rays[rayidx * 2 + 1].w = 10000.0f;
		
			mult_val = dot(tempDir, make_float4(-normal, 0.0f));
			color.x = max(color.x, 0.0f);
			color.y = max(color.y, 0.0f);
			color.z = max(color.z, 0.0f);
			result += color * mult_val;
		}*/
	}
	result /= SAMPLES_PER_PIXEL;

    STORE_RESULT(rayidx, hitIndex, result.x, result.y, result.z);
}"
hc5JU4nL,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,mikyser,Python,Wednesday 12th of June 2024 05:11:36 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
umBBD5Ei,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Ohtaku,Python,Wednesday 12th of June 2024 05:05:36 PM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
LVkiKAB6,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Elii,Python,Wednesday 12th of June 2024 04:59:37 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
28nsNxL4,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,guywithabigheart,Python,Wednesday 12th of June 2024 04:53:38 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
9Vqe56E8,Clients,Lizalovv,JSON,Wednesday 12th of June 2024 04:51:35 PM CDT,"[
    {
        ""name"": ""Ram"",
        ""clientId"": ""ram123"",
        ""maintenance"": false
    },
    {
        ""name"": ""Rohan"",
        ""clientId"": ""rohan456"",
        ""maintenance"": false
    }
]"
MtCMsxYu,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,PetrikDev,Python,Wednesday 12th of June 2024 04:47:39 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
QGKkcuVf,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,x3kiN,Python,Wednesday 12th of June 2024 04:41:41 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
RVpgJ2rp,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,kiraezwhethe,Python,Wednesday 12th of June 2024 04:29:44 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
11th of June 2024

"
EMsXpxej,"traceback,SSLError",Whispard,Python,Wednesday 12th of June 2024 04:26:09 PM CDT,"Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/anyio/streams/tls.py"", line 131, in _call_sslobject_method
    result = func(*args)
  File ""/usr/lib/python3.10/ssl.py"", line 917, in read
    v = self._sslobj.read(len)
ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:2578)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/backends/asyncio.py"", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/anyio/streams/tls.py"", line 196, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/anyio/streams/tls.py"", line 138, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py"", line 1203, in receive
    await self._protocol.read_event.wait()
  File ""/usr/lib/python3.10/asyncio/locks.py"", line 214, in wait
    await fut
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_exceptions.py"", line 10, in map_exceptions
    yield
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/backends/asyncio.py"", line 32, in read
    with anyio.fail_after(timeout):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/anyio/_core/_tasks.py"", line 119, in __exit__
    raise TimeoutError
TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_transports/default.py"", line 60, in map_httpcore_exceptions
    yield
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_transports/default.py"", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py"", line 253, in handle_async_request
    raise exc
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py"", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/connection.py"", line 90, in handle_async_request
    return await self._connection.handle_async_request(request)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/http11.py"", line 112, in handle_async_request
    raise exc
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/http11.py"", line 91, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/http11.py"", line 155, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_async/http11.py"", line 191, in _receive_event
    data = await self._network_stream.read(
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/backends/asyncio.py"", line 31, in read
    with map_exceptions(exc_map):
  File ""/usr/lib/python3.10/contextlib.py"", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpcore/_exceptions.py"", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ReadTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/telegram/request/_httpxrequest.py"", line 216, in do_request
    res = await self._client.request(
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_client.py"", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_client.py"", line 1620, in send
    response = await self._send_handling_auth(
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_client.py"", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_client.py"", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_client.py"", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_transports/default.py"", line 352, in handle_async_request
    with map_httpcore_exceptions():
  File ""/usr/lib/python3.10/contextlib.py"", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/httpx/_transports/default.py"", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/telegram/ext/_application.py"", line 1024, in __create_task_callback
    return await coroutine
  File ""/home/ellipsis/.local/lib/python3.10/site-packages/telegram/ext/_handler.py"", line 141, in handle_update
    return await self.callback(update, context)
  File ""/home/ellipsis/fam-tree/lib/bot_app.py"", line 119, in wrapped
    txt = await func(*args,**kwargs)"
tyKSSUit,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,ColtM4A2,Python,Wednesday 12th of June 2024 04:23:43 PM CDT,"G2A.com free gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
QPSrTv7n,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Skarface-MKL,Python,Wednesday 12th of June 2024 04:17:45 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11th 2024

"
WkStPufN,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,thepplayz,Python,Wednesday 12th of June 2024 04:11:47 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1DJewb1_3bQR3RytE-84jom7JCUX91RVh/view?50071

Working as of:
June 11 2024

"
cUC8AXPJ,1x5,woflmao,Lua,Wednesday 12th of June 2024 04:01:27 PM CDT,"local tArgs = {...}
 
if #tArgs == 0 then
    print(""Please input a length"")
    length = 0
else
    length = tonumber(tArgs[1])
end
 
for i=1, length, 1 do
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
end"
CwEiMduv,–ò–Ω–∂–µ–∫—Ç–æ—Ä —Ä–æ–±–ª–æ–∫—Å,Vladislav829,Lua,Wednesday 12th of June 2024 04:01:25 PM CDT,"local screenGui = Instance.new(""ScreenGui"")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")

local mainFrame = Instance.new(""Frame"")
mainFrame.Size = UDim2.new(0, 300, 0, 300)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
mainFrame.Parent = screenGui

local textBox = Instance.new(""TextBox"")
textBox.Size = UDim2.new(1, -20, 0, 200)
textBox.Position = UDim2.new(0, 10, 0, 10)
textBox.Text = ""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥ –∑–¥–µ—Å—å""
textBox.Parent = mainFrame

local executeButton = Instance.new(""TextButton"")
executeButton.Size = UDim2.new(1, -20, 0, 50)
executeButton.Position = UDim2.new(0, 10, 0, 220)
executeButton.Text = ""–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥""
executeButton.Parent = mainFrame

local collapseButton = Instance.new(""ImageButton"")
collapseButton.Size = UDim2.new(0, 50, 0, 50)
collapseButton.Position = UDim2.new(0, 10, 1, -60)
collapseButton.Image = ""rbxassetid://6031094678""
collapseButton.Parent = mainFrame

local expandButton = Instance.new(""ImageButton"")
expandButton.Size = UDim2.new(0, 50, 0, 50)
expandButton.Position = UDim2.new(0, 10, 0, 10)
expandButton.Image = ""rbxassetid://6031094678""
expandButton.Visible = false
expandButton.Parent = screenGui

local function executeCode()
    local code = textBox.Text
    local func, errorMessage = loadstring(code)
    if func then
        local success, result = pcall(func)
        if success then
            print(""–ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"")
        else
            warn(""–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: "" .. result)
        end
    else
        warn(""–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–¥–∞: "" .. errorMessage)
    end
end

local function collapse()
    mainFrame.Visible = false
    expandButton.Visible = true
end

local function expand()
    mainFrame.Visible = true
    expandButton.Visible = false
end

executeButton.MouseButton1Click:Connect(executeCode)
collapseButton.MouseButton1Click:Connect(collapse)
expandButton.MouseButton1Click:Connect(expand)
"
