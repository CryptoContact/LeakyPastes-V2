id,title,username,language,date,content
1hLFyXs1,Untitled,mfemtsuccess,JSON,Wednesday 3rd of April 2024 07:03:25 AM CDT,"إن اكتشاف ارخص الفنادق في مكة يمكن أن يجعل رحلتك إلى المدينة المقدسة في المملكة العربية السعودية أكثر راحة ومتعة. سواء كنت تخطط لأداء عمرة خاصة أو مجرد زيارة ممتعة للمدينة، فإن العثور على أماكن إقامة بأسعار معقولة بالقرب من الحرم يمكن أن يساعدك على توفير المال أثناء البقاء بالقرب من المواقع الدينية. ولحسن الحظ، يوجد في مكة العديد من الفنادق ذات الميزانية المحدودة والتي توفر إقامات مريحة وبأسعار معقولة.

إذا كنت تبحث عن خيار اقتصادي، يمكنك التفكير في الإقامة في فندق 3 نجوم في مكة مثل فندق إيلاف في منطقة العزيزية . يوفر هذا الفندق وسائل الراحة الأساسية وموقعًا مناسبًا، على بعد دقائق قليلة من الحرم . ولإقامة أكثر فخامة بعض الشيء، يمكنك حجز غرفة في فندق 4 نجوم في مكة مثل فندق رافلز مكة بالاس ، الذي يوفر مرافق حديثة وأجواء أنيقة.

لأولئك الذين يبحثون عن تجربة أكثر راقية، هناك العديد من الفنادق فئة 5 نجوم في مكة التي توفر أماكن إقامة فاخرة وخدمات من الدرجة الأولى. فكر في حجز غرفة في فندق رافلز مكة بالاس أو برج أندلسية مكة ريزيدنس للاستمتاع بإقامة مميزة حقًا بالقرب من الحرم . توفر هذه الفنادق راحة وملاءمة لا مثيل لها، مما يجعلها الخيار الأمثل لرحلة لا تنسى إلى المدينة المقدسة.

عند البحث عن أفضل عروض الفنادق في مكة ، تأكد من مقارنة الأسعار والتحقق من أي عروض أو خصومات خاصة. يمكن أن يساعدك حجز غرفة مسبقًا أيضًا في الحصول على سعر أفضل. مع القليل من البحث والتخطيط، يمكنك العثور على السكن المثالي الذي يناسب ميزانيتك وتفضيلاتك، مما يسمح لك بالاستمتاع برحلة خالية من المتاعب إلى مدينة مكة الجميلة وتحقيق أقصى استفادة من تجربتك بالقرب من الحرم .

اكتشف ارخص فنادق في مكة المكرمة

استمتع بإقامة مريحة وميسورة التكلفة في مكة المكرمة. اكتشف أرخص الفنادق التي تقدم قيمة ممتازة لنقودك. سواء كنت تبحث عن غرفة مزدوجة أو عائلية، ستجد خيارات متنوعة تناسب ميزانيتك. استمتع بالخدمة الودية والمرافق المريحة والموقع المناسب للوصول إلى المعالم السياحية الرئيسية في مكة. لا تتردد في حجز إقامتك في أحد أرخص الفنادق في مكة واستمتع برحلة لا تنسى بأسعار معقولة.


read more:
https://alkawtherhotel.com/chepest-hotel-in-makkah/"
1XEDhGnL,Untitled,mfemtsuccess,JSON,Wednesday 3rd of April 2024 06:54:32 AM CDT,"مكة المكرمة هي واحدة من أقدس المدن في الإسلام وتقع في المملكة العربية السعودية . وهي مسقط رأس النبي محمد (صلى الله عليه وسلم) وبها المسجد الحرام (المسجد الحرام) والكعبة المشرفة. مكة هي أيضًا موقع الحج السنوي، وهو أحد أركان الإسلام الخمسة وواجب ديني على جميع المسلمين الأصحاء القيام به مرة واحدة على الأقل في حياتهم.

تقع مكة في واد تحيط به جبال مكة على ارتفاع 277 مترًا فوق سطح البحر. ويبلغ عدد سكان المدينة حوالي 2 مليون نسمة، وأغلبية سكانها من المسلمين. تنقسم مكة إلى عدة أحياء وأحياء، في وسطها المسجد الحرام والكعبة . كما تشتهر مكة بأهميتها التاريخية، حيث أنها كانت موقع فتح مكة على يد النبي محمد (صلى الله عليه وسلم).

تعتبر مكة مدينة النور وهي أقدس مدينة في الإسلام، وتأتي في المرتبة الثانية بعد مكة. وهو موقع قبر النبي محمد (صلى الله عليه وسلم) وفيه أيضًا المسجد النبوي . تقع المدينة في الجزء الغربي من المملكة العربية السعودية وتشتهر بمساجدها العديدة ومواقعها التاريخية.

مكة ليست مكانًا لحج المسلمين فحسب، بل هي أيضًا مدينة غنية بالتاريخ والمعالم. في كل عام، يسافر ملايين المسلمين من جميع أنحاء العالم إلى مكة لأداء فريضة الحج وزيارة المسجد الحرام والكعبة المشرفة. إن تجربة الحج هي تجربة قوية وتحويلية، حيث يجتمع الحجاج معًا…
read more:
https://alkawtherhotel.com/best-info-aboutmakkah/"
EcLWJySu,ПРЛ6/2К4.1-3-12-06-292,kirber,JSON,Wednesday 3rd of April 2024 06:52:53 AM CDT,"{
  ""Source"": ""crm"",
  ""Message"": """",
  ""Id"": ""7fe84191-7f27-ec11-8120-005056b8d207"",
  ""Type"": ""resend"",
  ""Time"": ""2024-04-02T16:48:33"",
  ""Attributes"": {
    ""createdon"": ""2021-12-28T11:37:25"",
    ""smt_actual_change_recordid"": {
      ""Id"": ""87e1d409-07dc-ee11-b82b-005056b83cbb"",
      ""LogicalName"": ""smt_change_record"",
      ""Name"": "" ЦК от 07.03.2024 1:15""
    },
    ""smt_address_number"": ""4.1"",
    ""smt_amount_min"": null,
    ""smt_area_difference"": null,
    ""smt_auction_typecode"": null,
    ""smt_auctionbit"": false,
    ""smt_balconies"": null,
    ""smt_bathhousebit"": null,
    ""smt_bathroom_separate"": null,
    ""smt_bathroom_toilet"": null,
    ""smt_bedrooms_quantity"": null,
    ""smt_bti_balcony_area"": null,
    ""smt_bti_ceiling_height"": null,
    ""smt_bti_kitchen_area"": null,
    ""smt_bti_living_area"": null,
    ""smt_bti_number_int"": null,
    ""smt_bti_number_str"": null,
    ""smt_bti_total_area"": null,
    ""smt_bti_unliving_area"": null,
    ""smt_bti_without_balcony_area"": null,
    ""smt_build_year"": null,
    ""smt_building_address_smt_construction_site_address"": ""Московская область, р-н Ленинский, СХПК \""Колхоз-племзавод им. М. Горького\"". «Комплексная жилая застройка с объектами инфраструктуры по адресу: Московская область, Ленинский городской округ, д. Мисайлово и д. Дальние Прудищи, корпус 4.1, корпус 4.2»"",
    ""smt_building_address_smt_number"": ""4.1"",
    ""smt_building_address_smt_post_address"": null,
    ""smt_building_addressid"": {
      ""Id"": ""50520f3c-7f27-ec11-8120-005056b8d207"",
      ""LogicalName"": ""smt_building_address"",
      ""Name"": ""Пригород, 6 очередь, Корпус 4.1""
    },
    ""smt_cadastral_number"": null,
    ""smt_ceiling_height"": null,
    ""smt_code"": ""ПРЛ6/2К4.1-3-12-06-292"",
    ""smt_construction_projectid"": {
      ""Id"": ""dfad20e9-8c4b-e711-80c5-005056b8d207"",
      ""LogicalName"": ""smt_construction_project"",
      ""Name"": ""ПРИГОРОД""
    },
    ""smt_construction_projectid_smt_construction_projectid"": ""dfad20e9-8c4b-e711-80c5-005056b8d207"",
    ""smt_construction_typecode"": null,
    ""smt_cottage_village"": null,
    ""smt_customer_agreementid"": null,
    ""smt_dachabit"": null,
    ""smt_description"": null,
    ""smt_destination_typeid"": null,
    ""smt_discount_price"": null,
    ""smt_drainage_typecode"": null,
    ""smt_drainagebit"": null,
    ""smt_electric_chargerbit"": null,
    ""smt_electricitybit"": null,
    ""smt_external_id"": null,
    ""smt_finishingcode"": 100000001,
    ""smt_floor"": 12,
    ""smt_floor_quantity"": null,
    ""smt_garagebit"": null,
    ""smt_gas_typecode"": null,
    ""smt_gasbit"": null,
    ""smt_goalport_permissionbit"": null,
    ""smt_heatingcode"": null,
    ""smt_hidden_basebit"": null,
    ""smt_home_conditioncode"": null,
    ""smt_house_typecode"": null,
    ""smt_id_mic"": null,
    ""smt_image1"": null,
    ""smt_image2"": null,
    ""smt_investorbit"": null,
    ""smt_land_categorycode"": null,
    ""smt_land_contractbit"": null,
    ""smt_land_statuscode"": null,
    ""smt_layout_url"": ""https://dcrm.samoletgroup.ru/DOC/MAIN/plans/ДП_2/Пригород6/Корпус 4.1/Жилье/248,259,292,303,336,347.jpg"",
    ""smt_liqcode"": null,
    ""smt_loggias"": null,
    ""smt_model_bugetbit"": null,
    ""smt_modelcode"": null,
    ""smt_object_sale_rentcode"": null,
    ""smt_object_sales_typecode"": null,
    ""smt_object_subtypecode"": 100000003,
    ""smt_object_typecode"": 100000000,
    ""smt_online_bookingbit"": true,
    ""smt_online_dealbit"": true,
    ""smt_owner_accountid_accountid"": ""68aa7cf5-fa44-e711-80c5-005056b8d207"",
    ""smt_owner_accountid_smt_rightholder_typecode"": 100000003,
    ""smt_percentage_min"": null,
    ""smt_phonebit"": null,
    ""smt_planning_solution_typecode"": null,
    ""smt_platform_number"": 6,
    ""smt_poolbit"": null,
    ""smt_porch"": null,
    ""smt_price_min"": null,
    ""smt_primary_sale_agreementid"": null,
    ""smt_projected_balcony_area"": 0.0000000000,
    ""smt_projected_kitchen_area"": null,
    ""smt_projected_living_area"": 27.5000000000,
    ""smt_projected_number_int"": 292,
    ""smt_projected_number_str"": ""292"",
    ""smt_projected_total_area"": 44.4400000000,
    ""smt_projected_unliving_area"": null,
    ""smt_projected_without_balcony_area"": 44.4400000000,
    ""smt_ready_rental_business_description"": null,
    ""smt_ready_rental_businessbit"": false,
    ""smt_real_estate_objectid"": ""7fe84191-7f27-ec11-8120-005056b8d207"",
    ""smt_reale_state_object_featureid"": {
      ""Id"": ""82791190-4374-ec11-8121-005056b8d207"",
      ""LogicalName"": ""smt_real_estate_object_feature"",
      ""Name"": ""2-45-Л-Д(3.6)""
    },
    ""smt_regionid_smt_name"": ""Московская область"",
    ""smt_related_real_estate_objectid"": null,
    ""smt_related_real_estate_objectid_smt_cadastral_number"": null,
    ""smt_rent_cost"": 1330.7300,
    ""smt_rent_price"": 59137.4300,
    ""smt_rent_to_ownbit"": null,
    ""smt_repair_typecode"": null,
    ""smt_room_quantity"": 2,
    ""smt_sale_cost"": 162158.0000,
    ""smt_sale_individual"": null,
    ""smt_sale_legal_entity"": null,
    ""smt_sale_price"": 7206301.5200,
    ""smt_sale_schemecode"": 100000001,
    ""smt_section_smt_number"": 3,
    ""smt_sectionid"": {
      ""Id"": ""fee8fc55-7f27-ec11-8120-005056b8d207"",
      ""LogicalName"": ""smt_section"",
      ""Name"": ""ПРЛ6/1К4.1-3""
    },
    ""smt_securitybit"": null,
    ""smt_settlement_name"": null,
    ""smt_smart_apartmentbit"": false,
    ""smt_start_cost"": null,
    ""smt_start_price"": null,
    ""smt_strategic_reserveid"": null,
    ""smt_studio_typecode"": 100000005,
    ""smt_supply_scheme_smt_name"": ""ПРИГОРОД_Квартиры_Контейнер"",
    ""smt_supply_scheme_smt_online_dealbit"": false,
    ""smt_supply_scheme_smt_supply_schemeid"": ""ded2af2a-7089-ec11-b825-005056b8c05c"",
    ""smt_technical_real_estate_object"": null,
    ""smt_temporary_registrationbit"": null,
    ""smt_terraces"": null,
    ""smt_tour_url"": null,
    ""smt_townhouse_typecode"": null,
    ""smt_translate_lkbit"": null,
    ""smt_translate_to_websitebit"": true,
    ""smt_unit_quantity"": 44.4400000000,
    ""smt_vendor_accountid"": {
      ""Id"": ""68aa7cf5-fa44-e711-80c5-005056b8d207"",
      ""LogicalName"": ""account"",
      ""Name"": ""ООО «СЗ «Пригород Лесное»""
    },
    ""smt_vip_closed_salebit"": null,
    ""smt_water_typecode"": null,
    ""smt_waterbit"": null,
    ""smt_wc_locationcode"": null,
    ""statecode"": 0,
    ""statuscode"": 100000000
  },
  ""LinkEntities"": {
    ""smt_room"": [
      {
        ""Id"": ""b7a7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000010,
          ""smt_display_order"": 1,
          ""smt_name"": ""Комната"",
          ""smt_roomid"": ""b7a7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 13.8000000000
        }
      },
      {
        ""Id"": ""b9a7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000010,
          ""smt_display_order"": 2,
          ""smt_name"": ""Комната"",
          ""smt_roomid"": ""b9a7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 13.7000000000
        }
      },
      {
        ""Id"": ""bba7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000012,
          ""smt_display_order"": 3,
          ""smt_name"": ""Кухня-ниша"",
          ""smt_roomid"": ""bba7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 4.7900000000
        }
      },
      {
        ""Id"": ""bda7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000011,
          ""smt_display_order"": 4,
          ""smt_name"": ""Прихожая"",
          ""smt_roomid"": ""bda7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 4.2700000000
        }
      },
      {
        ""Id"": ""bfa7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000002,
          ""smt_display_order"": 5,
          ""smt_name"": ""Ванная"",
          ""smt_roomid"": ""bfa7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 2.9100000000
        }
      },
      {
        ""Id"": ""c1a7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000014,
          ""smt_display_order"": 6,
          ""smt_name"": ""Санузел"",
          ""smt_roomid"": ""c1a7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 2.5400000000
        }
      },
      {
        ""Id"": ""c3a7c878-8227-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""createdon"": ""2022-03-04T06:42:29"",
          ""smt_room_typecode"": 100000011,
          ""smt_display_order"": 7,
          ""smt_name"": ""Коридор"",
          ""smt_roomid"": ""c3a7c878-8227-ec11-8120-005056b8d207"",
          ""smt_projected_area"": 2.4300000000
        }
      }
    ],
    ""smt_file"": [
      {
        ""Id"": ""7fe84191-7f27-ec11-8120-005056b8d207"",
        ""Attributes"": {
          ""smt_fileid"": ""7fe84191-7f27-ec11-8120-005056b8d207"",
          ""smt_hyperlink"": ""https://sd-crm2fs.samoletgroup.ru:4433/plans/ДП_2/Пригород6/Корпус 4.1/Жилье/248,259,292,303,336,347.jpg"",
          ""smt_file_typeid"": {
            ""Id"": ""433565b9-def9-eb11-9a1a-005056b84c7c"",
            ""LogicalName"": ""smt_file_type"",
            ""Name"": ""Планировка ОН""
          },
          ""smt_tour_url"": null
        }
      }
    ]
  },
  ""ManyMany"": {
    ""smt_real_estate_object_feature"": [
      ""5cd99544-9c67-e911-80e6-005056b8d207"",
      ""a0d99544-9c67-e911-80e6-005056b8d207"",
      ""f0d99544-9c67-e911-80e6-005056b8d207"",
      ""549846d2-c912-ea11-80ed-005056b8d207"",
      ""82791190-4374-ec11-8121-005056b8d207""
    ],
    ""smt_realization_term"": [
      ""c31d05ef-bbdc-ec11-b826-005056b81dee"",
      ""31746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""43746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""55746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""33746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""45746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""57746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""3f746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""51746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""63746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""e8e2701a-3fe6-ec11-b822-005056b8a6d9"",
      ""15e4cb21-3425-ed11-b826-005056b81dee"",
      ""5a434a8b-f837-ed11-b822-005056b8a6c4"",
      ""8eb9edc8-004b-ed11-b826-005056b81dee"",
      ""cdbd283c-7462-ed11-b823-005056b825cd"",
      ""94d51526-0a6b-ed11-b822-005056b8a6c4"",
      ""c719f9dc-4066-ed11-b822-005056b8a6c4"",
      ""6bf7a4df-ffa2-ed11-b824-005056b8a6c4"",
      ""6972cd32-ffa2-ed11-b824-005056b8a6c4"",
      ""8cf6a587-ffa2-ed11-b824-005056b8a6c4"",
      ""14da7f41-00a3-ed11-b824-005056b8a6c4"",
      ""8ec7c47e-00a3-ed11-b824-005056b8a6c4"",
      ""e9f60bb0-00a3-ed11-b824-005056b8a6c4"",
      ""1650a609-9ca3-ed11-b824-005056b8a6c4"",
      ""54b9bb4e-92ba-ed11-b828-005056b81dee"",
      ""f8faaa49-97ba-ed11-b828-005056b81dee"",
      ""5bd336bf-97ba-ed11-b828-005056b81dee"",
      ""5e950641-98ba-ed11-b828-005056b81dee"",
      ""f0be4f8f-98ba-ed11-b828-005056b81dee"",
      ""5312165b-9eba-ed11-b828-005056b81dee"",
      ""05f3fa78-93ba-ed11-b828-005056b81dee"",
      ""b619c6c0-9aba-ed11-b828-005056b81dee"",
      ""476eeac7-96ba-ed11-b828-005056b81dee"",
      ""0f6b51a0-9bba-ed11-b828-005056b81dee"",
      ""3bd8370e-d9c7-ed11-b828-005056b81dee"",
      ""558cdaa9-e9c7-ed11-b825-005056b825cd"",
      ""0c2558f0-e9c7-ed11-b825-005056b825cd"",
      ""2b634155-eac7-ed11-b825-005056b825cd"",
      ""c20a33c7-eac7-ed11-b825-005056b825cd"",
      ""c8ccd975-fcc7-ed11-b825-005056b825cd"",
      ""65a30ffd-fcc7-ed11-b825-005056b825cd"",
      ""1b421d4e-fdc7-ed11-b825-005056b825cd"",
      ""57866c30-fec7-ed11-b825-005056b825cd"",
      ""3c2b6490-fec7-ed11-b825-005056b825cd"",
      ""427de71d-80c8-ed11-b826-005056b89b68"",
      ""4b78af5d-8cc8-ed11-b826-005056b89b68"",
      ""4d78af5d-8cc8-ed11-b826-005056b89b68"",
      ""4f78af5d-8cc8-ed11-b826-005056b89b68"",
      ""5178af5d-8cc8-ed11-b826-005056b89b68"",
      ""82c71cd0-0598-ed11-b823-005056b8a6c4"",
      ""13926079-df97-ed11-b823-005056b8a6c4"",
      ""29f64cf9-de97-ed11-b823-005056b8a6c4"",
      ""974ca2ad-de97-ed11-b823-005056b8a6c4"",
      ""59aab58a-dd97-ed11-b823-005056b8a6c4"",
      ""fa969b2d-dd97-ed11-b823-005056b8a6c4"",
      ""e92a17b6-dc97-ed11-b823-005056b8a6c4"",
      ""9912553f-db97-ed11-b823-005056b8a6c4"",
      ""760330bb-da97-ed11-b823-005056b8a6c4"",
      ""aae46473-da97-ed11-b823-005056b8a6c4"",
      ""2f750efa-d997-ed11-b823-005056b8a6c4"",
      ""9444db7a-d997-ed11-b823-005056b8a6c4"",
      ""3ee241e9-fe08-ed11-b823-005056b8a72c"",
      ""8371a875-3ee6-ec11-b822-005056b8a6d9"",
      ""9f3d10be-fb85-ed11-b824-005056b89b68"",
      ""9d3d10be-fb85-ed11-b824-005056b89b68"",
      ""9b3d10be-fb85-ed11-b824-005056b89b68"",
      ""993d10be-fb85-ed11-b824-005056b89b68"",
      ""973d10be-fb85-ed11-b824-005056b89b68"",
      ""953d10be-fb85-ed11-b824-005056b89b68"",
      ""8d3d10be-fb85-ed11-b824-005056b89b68"",
      ""8b3d10be-fb85-ed11-b824-005056b89b68"",
      ""5378af5d-8cc8-ed11-b826-005056b89b68"",
      ""5578af5d-8cc8-ed11-b826-005056b89b68"",
      ""5778af5d-8cc8-ed11-b826-005056b89b68"",
      ""8b0a551b-fd3e-ed11-b826-005056b81dee"",
      ""088c0aa6-0fd5-ed11-b825-005056b825cd"",
      ""8ddf317b-0fd5-ed11-b825-005056b825cd"",
      ""62d2f65c-0fd5-ed11-b825-005056b825cd"",
      ""6c1b892f-38e4-ed11-b824-005056b8a6c4"",
      ""86da8253-67ab-ed11-b825-005056b8a72c"",
      ""2942fbb0-c9e9-ed11-b825-005056b8a72c"",
      ""2793cd3a-dc01-ee11-b829-005056b81dee"",
      ""aa86e5e1-dc01-ee11-b829-005056b81dee"",
      ""738a741d-a515-ee11-b826-005056b89b68"",
      ""93ff389b-c12a-ee11-b825-005056b825cd"",
      ""f0c73828-c32a-ee11-b829-005056b81dee"",
      ""70a6e17a-b032-ee11-b823-005056b8a6d9"",
      ""72a6e17a-b032-ee11-b823-005056b8a6d9"",
      ""78a6e17a-b032-ee11-b823-005056b8a6d9"",
      ""7ca6e17a-b032-ee11-b823-005056b8a6d9"",
      ""e89af490-0238-ee11-b825-005056b8a72c"",
      ""d12397da-0238-ee11-b825-005056b8a72c"",
      ""e025512e-0338-ee11-b825-005056b8a72c"",
      ""6ca6e17a-b032-ee11-b823-005056b8a6d9"",
      ""bde9249c-134b-ee11-b824-005056b8a6c4"",
      ""c3e9249c-134b-ee11-b824-005056b8a6c4"",
      ""c1e9249c-134b-ee11-b824-005056b8a6c4"",
      ""c5e9249c-134b-ee11-b824-005056b8a6c4"",
      ""cde9249c-134b-ee11-b824-005056b8a6c4"",
      ""cfe9249c-134b-ee11-b824-005056b8a6c4"",
      ""d1e9249c-134b-ee11-b824-005056b8a6c4"",
      ""d5e9249c-134b-ee11-b824-005056b8a6c4"",
      ""55706f1d-5a59-ee11-b825-005056b8a72c"",
      ""1589772e-5b59-ee11-b825-005056b8a72c"",
      ""8b219813-bf5b-ee11-b829-005056b81dee"",
      ""8d219813-bf5b-ee11-b829-005056b81dee"",
      ""8f219813-bf5b-ee11-b829-005056b81dee"",
      ""91219813-bf5b-ee11-b829-005056b81dee"",
      ""93219813-bf5b-ee11-b829-005056b81dee"",
      ""95219813-bf5b-ee11-b829-005056b81dee"",
      ""97219813-bf5b-ee11-b829-005056b81dee"",
      ""99219813-bf5b-ee11-b829-005056b81dee"",
      ""9b219813-bf5b-ee11-b829-005056b81dee"",
      ""05a313a3-11b0-ec11-b822-005056b8a6d9"",
      ""fd1680a5-1bbf-ec11-b823-005056b8a72c"",
      ""c2bf64f0-1bbf-ec11-b823-005056b8a72c"",
      ""db4e086e-5cc1-ec11-b824-005056b89b68"",
      ""c804f1c4-72c1-ec11-b824-005056b89b68"",
      ""e9cb1e61-8743-ec11-8120-005056b8d207"",
      ""39746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""4b746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""5d746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""3b746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""4d746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""5f746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""3d746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""4f746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""61746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""d497b677-43ee-ec11-b822-005056b8a6c4"",
      ""fbe805c4-43f8-ec11-b823-005056b8a72c"",
      ""dd873d01-a2fb-ec11-b823-005056b825cd"",
      ""7fb26b9c-98f3-ec11-b823-005056b8a72c"",
      ""5830cc8d-c1fe-ec11-b826-005056b81dee"",
      ""584f5d4b-0001-ed11-b823-005056b8a72c"",
      ""5a4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""5c4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""5e4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""604f5d4b-0001-ed11-b823-005056b8a72c"",
      ""624f5d4b-0001-ed11-b823-005056b8a72c"",
      ""644f5d4b-0001-ed11-b823-005056b8a72c"",
      ""664f5d4b-0001-ed11-b823-005056b8a72c"",
      ""48df00ae-2701-ed11-b823-005056b8a72c"",
      ""2da79562-b5fe-ec11-b826-005056b81dee"",
      ""dabcff26-a4fe-ec11-b822-005056b8a6d9"",
      ""b11671fc-f716-ed11-b826-005056b81dee"",
      ""6e57243d-8d0d-ed11-b826-005056b81dee"",
      ""3a14ac33-99b5-ec11-b826-005056b81dee"",
      ""72ee10d9-5129-ed11-b823-005056b825cd"",
      ""d08c0c22-951f-ed11-b822-005056b8a6d9"",
      ""28396534-5229-ed11-b823-005056b825cd"",
      ""753ec826-2a55-ed11-b824-005056b89b68"",
      ""1357c192-9061-ed11-b823-005056b8a72c"",
      ""75748bf4-f767-ed11-b826-005056b81dee"",
      ""d57faf35-7d71-ed11-b824-005056b8a72c"",
      ""a99fc63f-2c8c-ed11-b827-005056b81dee"",
      ""27734824-b3b2-ed11-b825-005056b825cd"",
      ""21bdec2a-b2b2-ed11-b825-005056b825cd"",
      ""a5176400-c3bc-ed11-b825-005056b825cd"",
      ""2340fb6e-c4bc-ed11-b825-005056b825cd"",
      ""f57abbf2-74af-ed11-b823-005056b8a6d9"",
      ""c238c632-03dd-ed11-b828-005056b81dee"",
      ""ffa03230-2fdd-ed11-b824-005056b8a6c4"",
      ""44606975-1bef-ed11-b825-005056b825cd"",
      ""f8ad4c26-1cef-ed11-b825-005056b825cd"",
      ""6eca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""70ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""4756cb7b-93b6-ed11-b825-005056b825cd"",
      ""4156cb7b-93b6-ed11-b825-005056b825cd"",
      ""4356cb7b-93b6-ed11-b825-005056b825cd"",
      ""4956cb7b-93b6-ed11-b825-005056b825cd"",
      ""e2f2adda-5017-ee11-b825-005056b8a72c"",
      ""e6f2adda-5017-ee11-b825-005056b8a72c"",
      ""eaf2adda-5017-ee11-b825-005056b8a72c"",
      ""f0f2adda-5017-ee11-b825-005056b8a72c"",
      ""f2f2adda-5017-ee11-b825-005056b8a72c"",
      ""f6f2adda-5017-ee11-b825-005056b8a72c"",
      ""21809992-1c1b-ee11-b825-005056b8a72c"",
      ""2f28dc21-961a-ee11-b828-005056b83cbb"",
      ""3128dc21-961a-ee11-b828-005056b83cbb"",
      ""3328dc21-961a-ee11-b828-005056b83cbb"",
      ""3528dc21-961a-ee11-b828-005056b83cbb"",
      ""3728dc21-961a-ee11-b828-005056b83cbb"",
      ""3928dc21-961a-ee11-b828-005056b83cbb"",
      ""c147223c-383c-ee11-b829-005056b81dee"",
      ""c347223c-383c-ee11-b829-005056b81dee"",
      ""c547223c-383c-ee11-b829-005056b81dee"",
      ""ca56823f-ff94-ee11-b82a-005056b83cbb"",
      ""c856823f-ff94-ee11-b82a-005056b83cbb"",
      ""c656823f-ff94-ee11-b82a-005056b83cbb"",
      ""c456823f-ff94-ee11-b82a-005056b83cbb"",
      ""c256823f-ff94-ee11-b82a-005056b83cbb"",
      ""c056823f-ff94-ee11-b82a-005056b83cbb"",
      ""be56823f-ff94-ee11-b82a-005056b83cbb"",
      ""bc56823f-ff94-ee11-b82a-005056b83cbb"",
      ""46cb83a9-48a1-ec11-b822-005056b825cd"",
      ""8166cb14-4aa1-ec11-b822-005056b8a72c"",
      ""fbe53dea-dfb4-ec11-b824-005056b89b68"",
      ""e3b20c2f-54ba-ec11-b823-005056b8a72c"",
      ""bfd4ff44-66ba-ec11-b824-005056b89b68"",
      ""6daf17a6-fac6-ec11-b822-005056b8a6c4"",
      ""456462fe-f1c6-ec11-b822-005056b8a6c4"",
      ""d46ca973-98c7-ec11-b826-005056b81dee"",
      ""815c2c7f-b1c7-ec11-b823-005056b825cd"",
      ""156d4144-b1d2-ec11-b823-005056b825cd"",
      ""9119df47-0ed8-ec11-b823-005056b825cd"",
      ""4a109580-48d8-ec11-b823-005056b825cd"",
      ""35746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""47746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""59746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""37746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""49746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""5b746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""41746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""53746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""65746a87-a7e1-ec11-b822-005056b8a6c4"",
      ""72e985b6-6ee6-ec11-b822-005056b8a6d9"",
      ""8cd00e85-25f2-ec11-b822-005056b8a6d9"",
      ""8ed00e85-25f2-ec11-b822-005056b8a6d9"",
      ""49b88abb-8ef7-ec11-b822-005056b8a6d9"",
      ""d99081e7-8ef7-ec11-b822-005056b8a6d9"",
      ""484f5d4b-0001-ed11-b823-005056b8a72c"",
      ""4a4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""4c4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""4e4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""504f5d4b-0001-ed11-b823-005056b8a72c"",
      ""524f5d4b-0001-ed11-b823-005056b8a72c"",
      ""e99d564b-e8cb-ee11-b82b-005056b83cbb"",
      ""80e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""7ce479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""7ae479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""78e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""76e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""74e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""72e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""70e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""6ee479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""6ce479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""6ae479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""68e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""66e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""64e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""62e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""60e479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""5ee479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""5ce479b6-e6cb-ee11-b82b-005056b83cbb"",
      ""a92b7dd4-cd53-ee11-b826-005056b89b68"",
      ""a72b7dd4-cd53-ee11-b826-005056b89b68"",
      ""952b7dd4-cd53-ee11-b826-005056b89b68"",
      ""8d2b7dd4-cd53-ee11-b826-005056b89b68"",
      ""b72b7dd4-cd53-ee11-b826-005056b89b68"",
      ""b52b7dd4-cd53-ee11-b826-005056b89b68"",
      ""a12b7dd4-cd53-ee11-b826-005056b89b68"",
      ""992b7dd4-cd53-ee11-b826-005056b89b68"",
      ""ad2b7dd4-cd53-ee11-b826-005056b89b68"",
      ""912b7dd4-cd53-ee11-b826-005056b89b68"",
      ""c96dcd24-ea43-ee11-b825-005056b825cd"",
      ""c76dcd24-ea43-ee11-b825-005056b825cd"",
      ""c56dcd24-ea43-ee11-b825-005056b825cd"",
      ""c36dcd24-ea43-ee11-b825-005056b825cd"",
      ""c16dcd24-ea43-ee11-b825-005056b825cd"",
      ""bf6dcd24-ea43-ee11-b825-005056b825cd"",
      ""bd6dcd24-ea43-ee11-b825-005056b825cd"",
      ""bb6dcd24-ea43-ee11-b825-005056b825cd"",
      ""b96dcd24-ea43-ee11-b825-005056b825cd"",
      ""b76dcd24-ea43-ee11-b825-005056b825cd"",
      ""b56dcd24-ea43-ee11-b825-005056b825cd"",
      ""b36dcd24-ea43-ee11-b825-005056b825cd"",
      ""b16dcd24-ea43-ee11-b825-005056b825cd"",
      ""af6dcd24-ea43-ee11-b825-005056b825cd"",
      ""ad6dcd24-ea43-ee11-b825-005056b825cd"",
      ""ab6dcd24-ea43-ee11-b825-005056b825cd"",
      ""a96dcd24-ea43-ee11-b825-005056b825cd"",
      ""a76dcd24-ea43-ee11-b825-005056b825cd"",
      ""4d7fd0fa-da43-ee11-b829-005056b81dee"",
      ""77951deb-9a3b-ee11-b825-005056b8a72c"",
      ""71951deb-9a3b-ee11-b825-005056b8a72c"",
      ""6b951deb-9a3b-ee11-b825-005056b8a72c"",
      ""67951deb-9a3b-ee11-b825-005056b8a72c"",
      ""61951deb-9a3b-ee11-b825-005056b8a72c"",
      ""73951deb-9a3b-ee11-b825-005056b8a72c"",
      ""6f951deb-9a3b-ee11-b825-005056b8a72c"",
      ""65951deb-9a3b-ee11-b825-005056b8a72c"",
      ""72ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""6cca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""6aca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""68ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""78ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""76ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""74ca08fe-c5f0-ed11-b824-005056b8a6c4"",
      ""0029c866-486b-ed11-b822-005056b8a6c4"",
      ""017439a4-d64b-ed11-b823-005056b8a72c"",
      ""b91d0c92-d64b-ed11-b823-005056b8a72c"",
      ""0eec79a6-d54b-ed11-b823-005056b8a72c"",
      ""31960c93-d54b-ed11-b823-005056b8a72c"",
      ""166d8a33-d44b-ed11-b823-005056b8a72c"",
      ""3a2bb4c6-d34b-ed11-b823-005056b8a72c"",
      ""37f1b43b-d34b-ed11-b823-005056b8a72c"",
      ""19817adb-d24b-ed11-b823-005056b8a72c"",
      ""544f5d4b-0001-ed11-b823-005056b8a72c"",
      ""564f5d4b-0001-ed11-b823-005056b8a72c"",
      ""011ca7fa-ef0c-ed11-b822-005056b8a6d9"",
      ""7f5466c6-9e1b-ed11-b826-005056b81dee"",
      ""4be34b5e-3c2d-ed11-b822-005056b8a6c4"",
      ""e6cdb9e9-1630-ed11-b822-005056b8a6c4"",
      ""8a407c11-1730-ed11-b822-005056b8a6c4"",
      ""48a4fd3f-983a-ed11-b823-005056b825cd"",
      ""4aa4fd3f-983a-ed11-b823-005056b825cd"",
      ""4ca4fd3f-983a-ed11-b823-005056b825cd"",
      ""4ea4fd3f-983a-ed11-b823-005056b825cd"",
      ""50a4fd3f-983a-ed11-b823-005056b825cd"",
      ""52a4fd3f-983a-ed11-b823-005056b825cd"",
      ""54a4fd3f-983a-ed11-b823-005056b825cd"",
      ""56a4fd3f-983a-ed11-b823-005056b825cd"",
      ""58a4fd3f-983a-ed11-b823-005056b825cd"",
      ""5aa4fd3f-983a-ed11-b823-005056b825cd"",
      ""5ca4fd3f-983a-ed11-b823-005056b825cd"",
      ""5ea4fd3f-983a-ed11-b823-005056b825cd"",
      ""60a4fd3f-983a-ed11-b823-005056b825cd"",
      ""62a4fd3f-983a-ed11-b823-005056b825cd"",
      ""64a4fd3f-983a-ed11-b823-005056b825cd"",
      ""66a4fd3f-983a-ed11-b823-005056b825cd"",
      ""68a4fd3f-983a-ed11-b823-005056b825cd"",
      ""6aa4fd3f-983a-ed11-b823-005056b825cd"",
      ""6ca4fd3f-983a-ed11-b823-005056b825cd"",
      ""6ea4fd3f-983a-ed11-b823-005056b825cd"",
      ""06abf2d3-a74b-ed11-b823-005056b8a72c"",
      ""39910551-a84b-ed11-b823-005056b8a72c"",
      ""712eec90-a84b-ed11-b823-005056b8a72c"",
      ""b2f1d31b-a94b-ed11-b823-005056b8a72c"",
      ""94f9bc8c-a94b-ed11-b823-005056b8a72c"",
      ""599a8501-aa4b-ed11-b823-005056b8a72c"",
      ""7d82a038-aa4b-ed11-b823-005056b8a72c"",
      ""0b6c586a-aa4b-ed11-b823-005056b8a72c"",
      ""ba993578-2c29-ed11-b823-005056b825cd"",
      ""7b45701a-fa6c-ed11-b826-005056b81dee"",
      ""7beb8e6a-6d78-ed11-b822-005056b8a6d9"",
      ""4decaa46-f16b-ed11-b826-005056b81dee"",
      ""da13f4b7-ea81-ed11-b824-005056b89b68"",
      ""a73d10be-fb85-ed11-b824-005056b89b68"",
      ""a93d10be-fb85-ed11-b824-005056b89b68"",
      ""ab3d10be-fb85-ed11-b824-005056b89b68"",
      ""ad3d10be-fb85-ed11-b824-005056b89b68"",
      ""ae4343d6-3693-ed11-b824-005056b8a72c"",
      ""569854b8-3693-ed11-b824-005056b8a72c"",
      ""adbd5532-3193-ed11-b827-005056b81dee"",
      ""638abb54-b7a7-ed11-b828-005056b81dee"",
      ""310af2c8-b7a7-ed11-b828-005056b81dee"",
      ""500460c4-21ca-ed11-b824-005056b8a6c4"",
      ""910a551b-fd3e-ed11-b826-005056b81dee"",
      ""e03316d6-e4e8-ed11-b826-005056b89b68"",
      ""ff5e0b48-d5e9-ed11-b825-005056b8a72c"",
      ""224febd4-ddf0-ed11-b823-005056b8a6d9"",
      ""3dc099c1-ddf0-ed11-b823-005056b8a6d9"",
      ""d45917f2-70f1-ed11-b826-005056b89b68"",
      ""6745c6d8-49f9-ed11-b823-005056b8a6d9"",
      ""7bc32d1e-a20e-ee11-b825-005056b8a72c"",
      ""670a1a7c-092a-ee11-b829-005056b81dee"",
      ""690a1a7c-092a-ee11-b829-005056b81dee"",
      ""6b0a1a7c-092a-ee11-b829-005056b81dee"",
      ""6d0a1a7c-092a-ee11-b829-005056b81dee"",
      ""67808b9e-912c-ee11-b825-005056b8a72c"",
      ""e192277a-0736-ee11-b825-005056b8a72c"",
      ""e392277a-0736-ee11-b825-005056b8a72c"",
      ""e592277a-0736-ee11-b825-005056b8a72c"",
      ""e792277a-0736-ee11-b825-005056b8a72c"",
      ""cca3d442-94e2-ed11-b827-005056b83cbb"",
      ""de5b7caf-94e2-ed11-b827-005056b83cbb"",
      ""051f96f6-2748-ee11-b823-005056b8a6d9"",
      ""268daa81-65a0-ec11-b821-005056b8a6c4"",
      ""d9768def-c39f-ec11-b821-005056b8a6d9"",
      ""db768def-c39f-ec11-b821-005056b8a6d9"",
      ""eace17b7-c89f-ec11-b822-005056b89b68"",
      ""3c748b84-3da4-ec11-b821-005056b8a6d9"",
      ""0efab293-a0a3-ec11-b821-005056b8a6c4"",
      ""da4c44d1-a2a3-ec11-b822-005056b8a72c"",
      ""45152168-a4a3-ec11-b821-005056b8a6d9"",
      ""fb42cef6-49a4-ec11-b822-005056b8a72c"",
      ""702e06ca-4da4-ec11-b823-005056b89b68"",
      ""72da1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""2cda1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""36da1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""40da1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""4ada1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""54da1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""5eda1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""68da1cf9-3cb7-ec11-b822-005056b8a6d9"",
      ""c0d23eb0-e192-ec11-b825-005056b81dee"",
      ""bed23eb0-e192-ec11-b825-005056b81dee"",
      ""c2d23eb0-e192-ec11-b825-005056b81dee"",
      ""c4d23eb0-e192-ec11-b825-005056b81dee"",
      ""c6d23eb0-e192-ec11-b825-005056b81dee"",
      ""bcd23eb0-e192-ec11-b825-005056b81dee"",
      ""cad23eb0-e192-ec11-b825-005056b81dee"",
      ""c8d23eb0-e192-ec11-b825-005056b81dee"",
      ""d2d23eb0-e192-ec11-b825-005056b81dee"",
      ""d4d23eb0-e192-ec11-b825-005056b81dee"",
      ""ccd23eb0-e192-ec11-b825-005056b81dee"",
      ""ced23eb0-e192-ec11-b825-005056b81dee"",
      ""d6d23eb0-e192-ec11-b825-005056b81dee"",
      ""d8d23eb0-e192-ec11-b825-005056b81dee"",
      ""dad23eb0-e192-ec11-b825-005056b81dee"",
      ""dcd23eb0-e192-ec11-b825-005056b81dee"",
      ""95d995d3-c4d2-ec11-b823-005056b825cd"",
      ""189332a8-98d6-ec11-b826-005056b81dee"",
      ""bfe53793-75ed-ec11-b822-005056b8a6d9"",
      ""9e42d2df-1ae1-ec11-b823-005056b8a72c"",
      ""75fa1539-07f2-ec11-b826-005056b81dee"",
      ""b2387265-07f2-ec11-b826-005056b81dee"",
      ""94d00e85-25f2-ec11-b822-005056b8a6d9"",
      ""4905d188-7af8-ec11-b822-005056b8a6d9"",
      ""ada42309-5ba4-ec11-b825-005056b81dee"",
      ""83737186-321f-ee11-b825-005056b825cd"",
      ""40a1721c-a6c8-ed11-b825-005056b8a72c"",
      ""64084e0b-dc97-ed11-b823-005056b8a6c4"",
      ""96dc9140-7bf8-ec11-b822-005056b8a6d9"",
      ""129a0f96-1ef9-ec11-b822-005056b8a6c4"",
      ""2d5b2df1-2af9-ec11-b824-005056b89b68"",
      ""2f5b2df1-2af9-ec11-b824-005056b89b68"",
      ""315b2df1-2af9-ec11-b824-005056b89b68"",
      ""335b2df1-2af9-ec11-b824-005056b89b68"",
      ""464f5d4b-0001-ed11-b823-005056b8a72c"",
      ""444f5d4b-0001-ed11-b823-005056b8a72c"",
      ""424f5d4b-0001-ed11-b823-005056b8a72c"",
      ""404f5d4b-0001-ed11-b823-005056b8a72c"",
      ""3e4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""3c4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""3a4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""384f5d4b-0001-ed11-b823-005056b8a72c"",
      ""78defaa3-820d-ed11-b826-005056b81dee"",
      ""82defaa3-820d-ed11-b826-005056b81dee"",
      ""8cdefaa3-820d-ed11-b826-005056b81dee"",
      ""96defaa3-820d-ed11-b826-005056b81dee"",
      ""b4defaa3-820d-ed11-b826-005056b81dee"",
      ""aadefaa3-820d-ed11-b826-005056b81dee"",
      ""a0defaa3-820d-ed11-b826-005056b81dee"",
      ""1f82d4b8-8518-ed11-b824-005056b89b68"",
      ""c132c172-bb0c-ed11-b822-005056b8a6d9"",
      ""315738b3-5f0e-ed11-b824-005056b89b68"",
      ""82ec28ac-600e-ed11-b824-005056b89b68"",
      ""b04112fc-600e-ed11-b824-005056b89b68"",
      ""37fd2354-610e-ed11-b824-005056b89b68"",
      ""fb6cd8b9-941f-ed11-b822-005056b8a6d9"",
      ""c1cb0f31-1630-ed11-b822-005056b8a6c4"",
      ""910c8a08-1630-ed11-b822-005056b8a6c4"",
      ""188d99d9-483e-ed11-b824-005056b89b68"",
      ""1a8d99d9-483e-ed11-b824-005056b89b68"",
      ""c996243a-2f43-ed11-b826-005056b81dee"",
      ""624cd6a0-b643-ed11-b826-005056b81dee"",
      ""8737663d-3343-ed11-b822-005056b8a6c4"",
      ""bab2486c-3a43-ed11-b822-005056b8a6c4"",
      ""baff778a-2f51-ed11-b826-005056b81dee"",
      ""56ff8bdf-8956-ed11-b823-005056b8a72c"",
      ""506a23f1-0e59-ed11-b824-005056b83cbb"",
      ""526a23f1-0e59-ed11-b824-005056b83cbb"",
      ""546a23f1-0e59-ed11-b824-005056b83cbb"",
      ""566a23f1-0e59-ed11-b824-005056b83cbb"",
      ""586a23f1-0e59-ed11-b824-005056b83cbb"",
      ""5a6a23f1-0e59-ed11-b824-005056b83cbb"",
      ""6d27b606-aca3-ed11-b824-005056b8a6c4"",
      ""0ce761ff-4cd5-ed11-b825-005056b825cd"",
      ""db7de5ef-9cfb-ed11-b825-005056b8a72c"",
      ""b2409938-9dfb-ed11-b825-005056b8a72c"",
      ""5d6f59c8-690b-ee11-b824-005056b8a6c4"",
      ""09e59176-670b-ee11-b825-005056b8a72c"",
      ""0be59176-670b-ee11-b825-005056b8a72c"",
      ""5a4cb81d-d32f-ee11-b829-005056b81dee"",
      ""5c4cb81d-d32f-ee11-b829-005056b81dee"",
      ""604cb81d-d32f-ee11-b829-005056b81dee"",
      ""6c4cb81d-d32f-ee11-b829-005056b81dee"",
      ""704cb81d-d32f-ee11-b829-005056b81dee"",
      ""7c4cb81d-d32f-ee11-b829-005056b81dee"",
      ""824cb81d-d32f-ee11-b829-005056b81dee"",
      ""844cb81d-d32f-ee11-b829-005056b81dee"",
      ""884cb81d-d32f-ee11-b829-005056b81dee"",
      ""8a4cb81d-d32f-ee11-b829-005056b81dee"",
      ""26f20194-6131-ee11-b825-005056b8a72c"",
      ""d7d9dade-6131-ee11-b825-005056b8a72c"",
      ""fe4bce57-6231-ee11-b825-005056b8a72c"",
      ""ab4360a2-6231-ee11-b825-005056b8a72c"",
      ""7bb26cf0-6231-ee11-b825-005056b8a72c"",
      ""191f96f6-2748-ee11-b823-005056b8a6d9"",
      ""231f96f6-2748-ee11-b823-005056b8a6d9"",
      ""251f96f6-2748-ee11-b823-005056b8a6d9"",
      ""31bac4f1-7059-ee11-b824-005056b8a6c4"",
      ""49a9f0a0-e261-ee11-b825-005056b825cd"",
      ""54742005-f137-ec11-8120-005056b8d207"",
      ""5e742005-f137-ec11-8120-005056b8d207"",
      ""68742005-f137-ec11-8120-005056b8d207"",
      ""4a742005-f137-ec11-8120-005056b8d207"",
      ""971f583b-7ea7-eb11-811d-005056b8d207"",
      ""5f3613d0-e937-ec11-8120-005056b8d207"",
      ""73956a5c-ea37-ec11-8120-005056b8d207"",
      ""a42dc7dd-ea37-ec11-8120-005056b8d207"",
      ""00bd7533-eb37-ec11-8120-005056b8d207"",
      ""2dbc2947-844a-eb11-810b-005056b8d207"",
      ""e8d62b0d-9e5c-eb11-810b-005056b8d207"",
      ""0fc21ae9-7560-eb11-810b-005056b8d207"",
      ""9679c2f7-0d62-eb11-810b-005056b8d207"",
      ""ecd2ff6a-2b44-ea11-80f3-005056b8d207"",
      ""e8fc792a-2e78-eb11-8110-005056b8d207"",
      ""8d47d7e7-2f78-eb11-8110-005056b8d207"",
      ""e762383f-3468-ea11-80f7-005056b8d207"",
      ""37575596-6b6f-ea11-80f7-005056b8d207"",
      ""91972a29-1892-eb11-8116-005056b8d207"",
      ""5a9c76a0-0f81-eb11-8110-005056b8d207"",
      ""b37c2bbd-d378-ea11-80f7-005056b8d207"",
      ""7f40c692-d778-ea11-80f7-005056b8d207"",
      ""885ff92d-de78-ea11-80f7-005056b8d207"",
      ""bf357ed9-e278-ea11-80f7-005056b8d207"",
      ""9222fbd8-e2a0-eb11-8119-005056b8d207"",
      ""a9fc6e34-6298-eb11-8117-005056b8d207"",
      ""559a6b8f-1799-eb11-8117-005056b8d207"",
      ""cb52b5a5-94a6-eb11-811d-005056b8d207"",
      ""2b4bef4c-a096-ea11-80f8-005056b8d207"",
      ""b377631c-1ab3-eb11-811e-005056b8d207"",
      ""46fda682-0fbe-eb11-8120-005056b8d207"",
      ""5bebc56b-13be-eb11-8120-005056b8d207"",
      ""4f32c662-2ed3-eb11-8120-005056b8d207"",
      ""06b110c8-40c0-ea11-80fb-005056b8d207"",
      ""ba72239f-20db-eb11-8120-005056b8d207"",
      ""20f01429-3ddb-eb11-8120-005056b8d207"",
      ""3af01429-3ddb-eb11-8120-005056b8d207"",
      ""6ef01429-3ddb-eb11-8120-005056b8d207"",
      ""7c87040c-50de-eb11-8120-005056b8d207"",
      ""9687040c-50de-eb11-8120-005056b8d207"",
      ""b087040c-50de-eb11-8120-005056b8d207"",
      ""ca87040c-50de-eb11-8120-005056b8d207"",
      ""bba5c77e-0ae3-eb11-8120-005056b8d207"",
      ""d5a5c77e-0ae3-eb11-8120-005056b8d207"",
      ""efa5c77e-0ae3-eb11-8120-005056b8d207"",
      ""3cb9b58f-f698-ea11-80f8-005056b8d207"",
      ""4da1fd2c-a70f-ec11-8120-005056b8d207"",
      ""59e5042b-f798-ea11-80f8-005056b8d207"",
      ""4fa1fd2c-a70f-ec11-8120-005056b8d207"",
      ""94ff2dcb-f798-ea11-80f8-005056b8d207"",
      ""51a1fd2c-a70f-ec11-8120-005056b8d207"",
      ""649e5595-f898-ea11-80f8-005056b8d207"",
      ""eafb9046-1c66-eb11-810b-005056b8d207"",
      ""5ddf9375-ace3-eb11-8120-005056b8d207"",
      ""bce04e11-b0e3-eb11-8120-005056b8d207"",
      ""591a52cd-1fe4-eb11-8120-005056b8d207"",
      ""6d1a52cd-1fe4-eb11-8120-005056b8d207"",
      ""811a52cd-1fe4-eb11-8120-005056b8d207"",
      ""951a52cd-1fe4-eb11-8120-005056b8d207"",
      ""c31a52cd-1fe4-eb11-8120-005056b8d207"",
      ""dd1a52cd-1fe4-eb11-8120-005056b8d207"",
      ""f31a52cd-1fe4-eb11-8120-005056b8d207"",
      ""e1abda37-7be5-eb11-8120-005056b8d207"",
      ""e2c92a2f-7bef-eb11-8120-005056b8d207"",
      ""fa239c4a-7178-e911-80e6-005056b8d207"",
      ""a0136231-37ff-ea11-80fc-005056b8d207"",
      ""892b1da9-b104-eb11-80fc-005056b8d207"",
      ""495827e7-6b11-ec11-8120-005056b8d207"",
      ""bca23d9c-7311-ec11-8120-005056b8d207"",
      ""d913c0f6-7411-ec11-8120-005056b8d207"",
      ""f628c635-0712-ec11-8120-005056b8d207"",
      ""1429c635-0712-ec11-8120-005056b8d207"",
      ""1b533332-2715-ec11-8120-005056b8d207"",
      ""10c3ef15-5b20-ec11-8120-005056b8d207"",
      ""d504ffcf-fb21-ec11-8120-005056b8d207"",
      ""7724ce03-7a3b-eb11-8106-005056b8d207"",
      ""9da10d63-cf45-eb11-8107-005056b8d207"",
      ""c23d9405-ed45-eb11-8107-005056b8d207"",
      ""2b0c3eb1-0c26-e911-80e6-005056b8d207"",
      ""6d3b3eb8-bc83-e911-80e8-005056b8d207"",
      ""eddcf4ea-54b4-e911-80ea-005056b8d207"",
      ""48b8b51b-780b-ea11-80ed-005056b8d207"",
      ""1a01fe5e-9216-ea11-80ed-005056b8d207"",
      ""8eab48e1-b793-eb11-8117-005056b8d207"",
      ""82fdda15-2ef4-eb11-8120-005056b8d207"",
      ""7c8ce937-2116-ec11-8120-005056b8d207"",
      ""cd7badcf-600d-eb11-80fc-005056b8d207"",
      ""8e7bc09c-630d-eb11-80fc-005056b8d207"",
      ""772c1f71-ee0d-eb11-80fc-005056b8d207"",
      ""f9e75ade-bb93-eb11-8117-005056b8d207"",
      ""59c910d8-2478-eb11-8110-005056b8d207"",
      ""ba70439b-0a87-eb11-8111-005056b8d207"",
      ""fa72cb24-da24-eb11-80ff-005056b8d207"",
      ""758608b8-7740-ec11-8120-005056b8d207"",
      ""8f8608b8-7740-ec11-8120-005056b8d207"",
      ""214ff570-6c48-ec11-8120-005056b8d207"",
      ""5a46ca5d-c04d-ec11-8120-005056b8d207"",
      ""6ce0b397-314d-ec11-8120-005056b8d207"",
      ""41bf3bfb-9256-ec11-8121-005056b8d207"",
      ""be38ed28-9456-ec11-8121-005056b8d207"",
      ""988eb42c-9559-ec11-8121-005056b8d207"",
      ""8e4242ba-9b59-ec11-8121-005056b8d207"",
      ""7ada149a-245c-ec11-8121-005056b8d207"",
      ""30ad399a-9a61-ec11-8121-005056b8d207"",
      ""b0133d0f-b068-ec11-8121-005056b8d207"",
      ""ecdda200-75d9-eb11-8120-005056b8d207"",
      ""e8dda200-75d9-eb11-8120-005056b8d207"",
      ""5eb4c1dd-6e68-ec11-8121-005056b8d207"",
      ""e3a58d8a-0a75-ec11-8121-005056b8d207"",
      ""24e1f104-0c75-ec11-8121-005056b8d207"",
      ""6f8f6399-1675-ec11-8121-005056b8d207"",
      ""bce8d7ad-4869-ec11-8121-005056b8d207"",
      ""a2e8d7ad-4869-ec11-8121-005056b8d207"",
      ""f0e8d7ad-4869-ec11-8121-005056b8d207"",
      ""d6e8d7ad-4869-ec11-8121-005056b8d207"",
      ""e7cb1e61-8743-ec11-8120-005056b8d207"",
      ""84e8d7ad-4869-ec11-8121-005056b8d207"",
      ""64e8d7ad-4869-ec11-8121-005056b8d207"",
      ""eb60ec9c-975d-ec11-8121-005056b8d207"",
      ""ed60ec9c-975d-ec11-8121-005056b8d207"",
      ""ef60ec9c-975d-ec11-8121-005056b8d207"",
      ""f160ec9c-975d-ec11-8121-005056b8d207"",
      ""e960ec9c-975d-ec11-8121-005056b8d207"",
      ""beea09e0-fb8f-ec11-8121-005056b8d207"",
      ""13f77f16-568a-ec11-8121-005056b8d207"",
      ""2ff77f16-568a-ec11-8121-005056b8d207"",
      ""55bd8184-a985-ec11-8121-005056b8d207"",
      ""77bd8184-a985-ec11-8121-005056b8d207"",
      ""bd6e369a-6882-ec11-8121-005056b8d207"",
      ""d7ac84ff-8c7e-ec11-8121-005056b8d207"",
      ""f7ac84ff-8c7e-ec11-8121-005056b8d207"",
      ""15ad84ff-8c7e-ec11-8121-005056b8d207"",
      ""2fad84ff-8c7e-ec11-8121-005056b8d207"",
      ""4a81bf14-b093-ec11-8121-005056b8d207"",
      ""2681bf14-b093-ec11-8121-005056b8d207"",
      ""bf3c4726-b77d-ec11-8121-005056b8d207"",
      ""12f2c76b-66ae-ec11-b826-005056b81dee"",
      ""7c710a4b-76ae-ec11-b822-005056b8a6d9"",
      ""29d5b037-5dac-ec11-b823-005056b825cd"",
      ""86596baa-5dac-ec11-b823-005056b825cd"",
      ""641574ca-5dac-ec11-b823-005056b825cd"",
      ""e1e34f44-dbbb-ec11-b822-005056b8a6c4"",
      ""1645d1c1-88da-ec11-b824-005056b89b68"",
      ""71ade8f2-88da-ec11-b824-005056b89b68"",
      ""e00353d1-dfe0-ec11-b823-005056b8a72c"",
      ""cf751d94-3fe6-ec11-b822-005056b8a6d9"",
      ""0ed638b1-3fe6-ec11-b822-005056b8a6d9"",
      ""3613f11e-97ec-ec11-b823-005056b8a72c"",
      ""d77ef996-01bf-ec11-b826-005056b81dee"",
      ""155b2df1-2af9-ec11-b824-005056b89b68"",
      ""1d5b2df1-2af9-ec11-b824-005056b89b68"",
      ""175b2df1-2af9-ec11-b824-005056b89b68"",
      ""1f5b2df1-2af9-ec11-b824-005056b89b68"",
      ""195b2df1-2af9-ec11-b824-005056b89b68"",
      ""215b2df1-2af9-ec11-b824-005056b89b68"",
      ""1b5b2df1-2af9-ec11-b824-005056b89b68"",
      ""235b2df1-2af9-ec11-b824-005056b89b68"",
      ""2ec7dad0-32f9-ec11-b822-005056b8a6c4"",
      ""d8bacbdf-0704-ed11-b824-005056b89b68"",
      ""489bcb69-5412-ed11-b822-005056b8a6c4"",
      ""b9f1dad1-341d-ed11-b823-005056b8a72c"",
      ""bbf1dad1-341d-ed11-b823-005056b8a72c"",
      ""b5f1dad1-341d-ed11-b823-005056b8a72c"",
      ""b7f1dad1-341d-ed11-b823-005056b8a72c"",
      ""99f1dad1-341d-ed11-b823-005056b8a72c"",
      ""9bf1dad1-341d-ed11-b823-005056b8a72c"",
      ""95f1dad1-341d-ed11-b823-005056b8a72c"",
      ""97f1dad1-341d-ed11-b823-005056b8a72c"",
      ""a1f1dad1-341d-ed11-b823-005056b8a72c"",
      ""a3f1dad1-341d-ed11-b823-005056b8a72c"",
      ""9df1dad1-341d-ed11-b823-005056b8a72c"",
      ""9ff1dad1-341d-ed11-b823-005056b8a72c"",
      ""a9f1dad1-341d-ed11-b823-005056b8a72c"",
      ""abf1dad1-341d-ed11-b823-005056b8a72c"",
      ""a5f1dad1-341d-ed11-b823-005056b8a72c"",
      ""a7f1dad1-341d-ed11-b823-005056b8a72c"",
      ""c1f1dad1-341d-ed11-b823-005056b8a72c"",
      ""c3f1dad1-341d-ed11-b823-005056b8a72c"",
      ""bdf1dad1-341d-ed11-b823-005056b8a72c"",
      ""bff1dad1-341d-ed11-b823-005056b8a72c"",
      ""89f1dad1-341d-ed11-b823-005056b8a72c"",
      ""8bf1dad1-341d-ed11-b823-005056b8a72c"",
      ""85f1dad1-341d-ed11-b823-005056b8a72c"",
      ""87f1dad1-341d-ed11-b823-005056b8a72c"",
      ""b1f1dad1-341d-ed11-b823-005056b8a72c"",
      ""b3f1dad1-341d-ed11-b823-005056b8a72c"",
      ""adf1dad1-341d-ed11-b823-005056b8a72c"",
      ""aff1dad1-341d-ed11-b823-005056b8a72c"",
      ""91f1dad1-341d-ed11-b823-005056b8a72c"",
      ""93f1dad1-341d-ed11-b823-005056b8a72c"",
      ""8df1dad1-341d-ed11-b823-005056b8a72c"",
      ""8ff1dad1-341d-ed11-b823-005056b8a72c"",
      ""e94be46a-cf1e-ed11-b823-005056b825cd"",
      ""a355d7bc-cf1e-ed11-b823-005056b825cd"",
      ""2280ef07-d01e-ed11-b823-005056b825cd"",
      ""b2906638-d01e-ed11-b823-005056b825cd"",
      ""6c98bd23-eb1e-ed11-b823-005056b825cd"",
      ""086e435d-512b-ed11-b826-005056b81dee"",
      ""35854157-2e38-ed11-b822-005056b8a6d9"",
      ""b9b125fc-7e36-ed11-b826-005056b81dee"",
      ""54feadfa-5249-ed11-b826-005056b81dee"",
      ""520dfbaa-6449-ed11-b823-005056b825cd"",
      ""5ce2b374-a64b-ed11-b824-005056b89b68"",
      ""011c6846-a74b-ed11-b824-005056b89b68"",
      ""2f3672a5-f651-ed11-b822-005056b8a6c4"",
      ""9dd2af46-5262-ed11-b823-005056b825cd"",
      ""50253f4e-d864-ed11-b824-005056b8a72c"",
      ""eab5d3b6-4166-ed11-b822-005056b8a6c4"",
      ""012d68a4-5381-ed11-b824-005056b89b68"",
      ""7b3d10be-fb85-ed11-b824-005056b89b68"",
      ""7d3d10be-fb85-ed11-b824-005056b89b68"",
      ""7f3d10be-fb85-ed11-b824-005056b89b68"",
      ""813d10be-fb85-ed11-b824-005056b89b68"",
      ""833d10be-fb85-ed11-b824-005056b89b68"",
      ""853d10be-fb85-ed11-b824-005056b89b68"",
      ""873d10be-fb85-ed11-b824-005056b89b68"",
      ""893d10be-fb85-ed11-b824-005056b89b68"",
      ""53554ab0-2b8c-ed11-b827-005056b81dee"",
      ""c9f2e6c1-d290-ed11-b822-005056b8a6d9"",
      ""dca5b465-d690-ed11-b822-005056b8a6d9"",
      ""f9e1321f-d790-ed11-b822-005056b8a6d9"",
      ""2b4d402c-d890-ed11-b822-005056b8a6d9"",
      ""a59fd548-da90-ed11-b822-005056b8a6d9"",
      ""a1a0a4c0-da90-ed11-b822-005056b8a6d9"",
      ""a8f97522-dd90-ed11-b822-005056b8a6d9"",
      ""be6d10a0-dd90-ed11-b822-005056b8a6d9"",
      ""92bb16fb-e190-ed11-b824-005056b89b68"",
      ""2b188cf1-ae90-ed11-b827-005056b81dee"",
      ""c87d1b46-e490-ed11-b824-005056b89b68"",
      ""ef00d372-df90-ed11-b822-005056b8a6d9"",
      ""d3b9d196-df90-ed11-b822-005056b8a6d9"",
      ""e6562d91-5992-ed11-b824-005056b89b68"",
      ""1c91ce4a-299e-ed11-b824-005056b8a6c4"",
      ""6310e998-74af-ed11-b823-005056b8a6d9"",
      ""c5070847-0bb8-ed11-b825-005056b8a72c"",
      ""2b7028dd-9f65-ed11-b824-005056b8a72c"",
      ""a19006d1-df9f-ed11-b826-005056b89b68"",
      ""1076413d-d2ce-ed11-b826-005056b89b68"",
      ""e9d2e8d4-59d4-ed11-b825-005056b825cd"",
      ""4425bcee-59d4-ed11-b825-005056b825cd"",
      ""70b0fc99-ead9-ed11-b828-005056b81dee"",
      ""f5054f25-aae9-ed11-b824-005056b8a6c4"",
      ""6969c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""6b69c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""7569c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""7369c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""6f69c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""6d69c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""6569c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""6369c61a-b2f1-ed11-b824-005056b8a6c4"",
      ""f0e271e8-d9f3-ed11-b826-005056b89b68"",
      ""f6b883ec-eefb-ed11-b825-005056b825cd"",
      ""5a3d9c01-effb-ed11-b825-005056b825cd"",
      ""58501b4d-c4ff-ed11-b829-005056b81dee"",
      ""1d4dd2a2-6001-ee11-b825-005056b825cd"",
      ""1f4dd2a2-6001-ee11-b825-005056b825cd"",
      ""214dd2a2-6001-ee11-b825-005056b825cd"",
      ""234dd2a2-6001-ee11-b825-005056b825cd"",
      ""254dd2a2-6001-ee11-b825-005056b825cd"",
      ""274dd2a2-6001-ee11-b825-005056b825cd"",
      ""294dd2a2-6001-ee11-b825-005056b825cd"",
      ""2b4dd2a2-6001-ee11-b825-005056b825cd"",
      ""2d4dd2a2-6001-ee11-b825-005056b825cd"",
      ""2f4dd2a2-6001-ee11-b825-005056b825cd"",
      ""314dd2a2-6001-ee11-b825-005056b825cd"",
      ""334dd2a2-6001-ee11-b825-005056b825cd"",
      ""354dd2a2-6001-ee11-b825-005056b825cd"",
      ""374dd2a2-6001-ee11-b825-005056b825cd"",
      ""394dd2a2-6001-ee11-b825-005056b825cd"",
      ""3b4dd2a2-6001-ee11-b825-005056b825cd"",
      ""3d4dd2a2-6001-ee11-b825-005056b825cd"",
      ""3f4dd2a2-6001-ee11-b825-005056b825cd"",
      ""414dd2a2-6001-ee11-b825-005056b825cd"",
      ""434dd2a2-6001-ee11-b825-005056b825cd"",
      ""474dd2a2-6001-ee11-b825-005056b825cd"",
      ""494dd2a2-6001-ee11-b825-005056b825cd"",
      ""4b4dd2a2-6001-ee11-b825-005056b825cd"",
      ""4d4dd2a2-6001-ee11-b825-005056b825cd"",
      ""a3b396cb-8a04-ee11-b825-005056b825cd"",
      ""a5b396cb-8a04-ee11-b825-005056b825cd"",
      ""a7b396cb-8a04-ee11-b825-005056b825cd"",
      ""a9b396cb-8a04-ee11-b825-005056b825cd"",
      ""b5b396cb-8a04-ee11-b825-005056b825cd"",
      ""bdb396cb-8a04-ee11-b825-005056b825cd"",
      ""b9b396cb-8a04-ee11-b825-005056b825cd"",
      ""b1b396cb-8a04-ee11-b825-005056b825cd"",
      ""adb396cb-8a04-ee11-b825-005056b825cd"",
      ""7227ef50-191c-ee11-b825-005056b8a72c"",
      ""4d201fbf-2a31-ee11-b829-005056b81dee"",
      ""d4755703-2b31-ee11-b829-005056b81dee"",
      ""02d7929f-5a37-ee11-b824-005056b8a6c4"",
      ""04d7929f-5a37-ee11-b824-005056b8a6c4"",
      ""06d7929f-5a37-ee11-b824-005056b8a6c4"",
      ""b0dd3074-5637-ee11-b826-005056b89b68"",
      ""b2dd3074-5637-ee11-b826-005056b89b68"",
      ""77baa3ae-274e-ee11-b823-005056b8a6d9"",
      ""cb9ee0fc-745c-ee11-b829-005056b81dee"",
      ""47f3b14b-7260-ee11-b829-005056b81dee"",
      ""49f3b14b-7260-ee11-b829-005056b81dee"",
      ""4bf3b14b-7260-ee11-b829-005056b81dee"",
      ""4df3b14b-7260-ee11-b829-005056b81dee"",
      ""4ff3b14b-7260-ee11-b829-005056b81dee"",
      ""51f3b14b-7260-ee11-b829-005056b81dee"",
      ""53f3b14b-7260-ee11-b829-005056b81dee"",
      ""55f3b14b-7260-ee11-b829-005056b81dee"",
      ""57f3b14b-7260-ee11-b829-005056b81dee"",
      ""59f3b14b-7260-ee11-b829-005056b81dee"",
      ""5bf3b14b-7260-ee11-b829-005056b81dee"",
      ""5df3b14b-7260-ee11-b829-005056b81dee"",
      ""5ff3b14b-7260-ee11-b829-005056b81dee"",
      ""61f3b14b-7260-ee11-b829-005056b81dee"",
      ""63f3b14b-7260-ee11-b829-005056b81dee"",
      ""65f3b14b-7260-ee11-b829-005056b81dee"",
      ""69f3b14b-7260-ee11-b829-005056b81dee"",
      ""6bf3b14b-7260-ee11-b829-005056b81dee"",
      ""6df3b14b-7260-ee11-b829-005056b81dee"",
      ""6ff3b14b-7260-ee11-b829-005056b81dee"",
      ""71f3b14b-7260-ee11-b829-005056b81dee"",
      ""66febdf6-69ae-ec11-b824-005056b89b68"",
      ""2b1e9403-deb4-ec11-b826-005056b81dee"",
      ""2d1e9403-deb4-ec11-b826-005056b81dee"",
      ""311e9403-deb4-ec11-b826-005056b81dee"",
      ""2f1e9403-deb4-ec11-b826-005056b81dee"",
      ""c135eb97-6fba-ec11-b823-005056b8a72c"",
      ""c47dfde8-eebf-ec11-b822-005056b8a6c4"",
      ""d2cedb70-9ab5-ec11-b826-005056b81dee"",
      ""88d00e85-25f2-ec11-b822-005056b8a6d9"",
      ""8ad00e85-25f2-ec11-b822-005056b8a6d9"",
      ""12250c5e-29f2-ec11-b826-005056b81dee"",
      ""d24b3ddc-9bb5-ec11-b826-005056b81dee"",
      ""255b2df1-2af9-ec11-b824-005056b89b68"",
      ""275b2df1-2af9-ec11-b824-005056b89b68"",
      ""295b2df1-2af9-ec11-b824-005056b89b68"",
      ""2b5b2df1-2af9-ec11-b824-005056b89b68"",
      ""284f5d4b-0001-ed11-b823-005056b8a72c"",
      ""2a4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""2c4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""2e4f5d4b-0001-ed11-b823-005056b8a72c"",
      ""304f5d4b-0001-ed11-b823-005056b8a72c"",
      ""324f5d4b-0001-ed11-b823-005056b8a72c"",
      ""344f5d4b-0001-ed11-b823-005056b8a72c"",
      ""364f5d4b-0001-ed11-b823-005056b8a72c"",
      ""c7b374b3-8406-ed11-b826-005056b81dee"",
      ""6b47e1d6-f816-ed11-b822-005056b8a6c4"",
      ""150b9ffa-be82-ed11-b824-005056b8a72c"",
      ""26190c39-bf82-ed11-b824-005056b8a72c"",
      ""24967cfc-d082-ed11-b824-005056b8a72c"",
      ""8e623cd4-4a92-ed11-b824-005056b89b68"",
      ""fe9dec21-5992-ed11-b824-005056b89b68"",
      ""89229bb9-d1bb-ec11-b822-005056b8a6c4"",
      ""a1022e53-4e92-ed11-b824-005056b89b68"",
      ""8ab1a97c-4e92-ed11-b824-005056b89b68"",
      ""e50c45bd-4e92-ed11-b824-005056b89b68"",
      ""170000df-4e92-ed11-b824-005056b89b68"",
      ""e9d45547-4f92-ed11-b824-005056b89b68"",
      ""2bfae979-4f92-ed11-b824-005056b89b68"",
      ""c1c200a0-4f92-ed11-b824-005056b89b68"",
      ""16ccb064-5992-ed11-b824-005056b89b68"",
      ""c5e00266-d495-ed11-b824-005056b8a72c"",
      ""9f58a78c-d695-ed11-b824-005056b8a72c"",
      ""100b732e-d795-ed11-b824-005056b8a72c"",
      ""7047acf2-d695-ed11-b824-005056b8a72c"",
      ""3791d43a-ae95-ed11-b824-005056b8a72c"",
      ""3b74c464-4ebf-ed11-b828-005056b81dee"",
      ""3d74c464-4ebf-ed11-b828-005056b81dee"",
      ""414a907a-ccc7-ed11-b828-005056b81dee"",
      ""54f58dd7-5bc9-ed11-b826-005056b89b68"",
      ""96fb2f2d-fcd8-ed11-b823-005056b8a6d9"",
      ""2ca02a82-6ad8-ed11-b825-005056b8a72c"",
      ""021d7ca8-50d8-ed11-b825-005056b8a72c"",
      ""34a5769e-6ad8-ed11-b825-005056b8a72c"",
      ""fd003eae-e5dc-ed11-b825-005056b825cd"",
      ""71523eac-d5dd-ed11-b826-005056b89b68"",
      ""c7329f5e-d6dd-ed11-b826-005056b89b68"",
      ""35953df6-d6dd-ed11-b826-005056b89b68"",
      ""fbbb7977-d7dd-ed11-b826-005056b89b68"",
      ""49576035-b2e5-ed11-b823-005056b8a6d9"",
      ""c41ad987-b2e5-ed11-b823-005056b8a6d9"",
      ""5579a894-90f0-ed11-b823-005056b8a6d9"",
      ""6508e1ba-90f0-ed11-b823-005056b8a6d9"",
      ""7b49a4de-90f0-ed11-b823-005056b8a6d9"",
      ""e299d7bb-88f1-ed11-b825-005056b825cd"",
      ""0b40d4ad-21f2-ed11-b824-005056b8a6c4"",
      ""231d046f-0af3-ed11-b828-005056b81dee"",
      ""0017fdcb-37f3-ed11-b828-005056b81dee"",
      ""a02e7eb3-0b87-eb11-8111-005056b8d207"",
      ""dc925e8c-0b87-eb11-8111-005056b8d207"",
      ""0ab169d2-0b87-eb11-8111-005056b8d207"",
      ""3e0eb9d4-79f8-ed11-b823-005056b8a6d9"",
      ""1ff29abb-e94a-ee11-b825-005056b825cd"",
      ""54fe1c76-e94a-ee11-b825-005056b825cd"",
      ""03afd9b5-c135-ee11-b824-005056b8a6c4"",
      ""864cb81d-d32f-ee11-b829-005056b81dee"",
      ""804cb81d-d32f-ee11-b829-005056b81dee"",
      ""7a4cb81d-d32f-ee11-b829-005056b81dee"",
      ""684cb81d-d32f-ee11-b829-005056b81dee"",
      ""664cb81d-d32f-ee11-b829-005056b81dee"",
      ""f9a80660-a095-ed11-b824-005056b825cd"",
      ""efa80660-a095-ed11-b824-005056b825cd"",
      ""e5a80660-a095-ed11-b824-005056b825cd"",
      ""dba80660-a095-ed11-b824-005056b825cd"",
      ""d1a80660-a095-ed11-b824-005056b825cd"",
      ""c7a80660-a095-ed11-b824-005056b825cd"",
      ""bda80660-a095-ed11-b824-005056b825cd"",
      ""b3a80660-a095-ed11-b824-005056b825cd"",
      ""a9a80660-a095-ed11-b824-005056b825cd"",
      ""9fa80660-a095-ed11-b824-005056b825cd"",
      ""95a80660-a095-ed11-b824-005056b825cd"",
      ""8ba80660-a095-ed11-b824-005056b825cd"",
      ""81a80660-a095-ed11-b824-005056b825cd"",
      ""77a80660-a095-ed11-b824-005056b825cd"",
      ""6da80660-a095-ed11-b824-005056b825cd"",
      ""b1df3c87-ed49-ed11-b823-005056b825cd""
    ]
  }
}"
AzSiqXDC,Untitled,opencomputerstest2,Lua,Wednesday 3rd of April 2024 06:50:45 AM CDT,"local speaker = peripheral.find(""speaker"")
local modem = peripheral.find(""modem"")
modem.open(64921)

local function log(data)
    local f = fs.open(""log.txt"",""a"")
    f.write(data..""\n"")
    f.close()
end

while true do
    local e = {os.pullEvent(""modem_message"")}
	print(e[6])
	while not speaker.playAudio(e[5]) do
        os.pullEvent(""speaker_audio_empty"")
    end
end
"
fMkDe0qb,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Wednesday 3rd of April 2024 06:47:58 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
03 April 2024"
hM44wqz2,Review CedarFX,reviewbrokers,PHP,Wednesday 3rd of April 2024 06:45:08 AM CDT,https://www.reviewbrokers.net/review-cedarfx/
ahMen0ak,СПРИНТ № 6 | Просто о сложности. Теория быстродействия | Урок 5: Улучшаем сложность,chevengur,C++,Wednesday 3rd of April 2024 06:37:04 AM CDT,"#include <algorithm>
#include <iostream>
#include <vector>
#include <random>
#include ""log_duration.h""

using namespace std;

// функция возвращает true, если векторы из одинаковых элементов
// перепишите эту функцию, улучшив её асимптотическую сложность
bool TestPermut(vector<int>& v1, vector<int>& v2) {
    // если они разной длины, элементы заведомо разные
    if (v1.size() != v2.size()) {
        return false;
    }
    sort(v1.begin(), v1.end());
    sort(v2.begin(), v2.end());
    
    if (v2 != v1) {
        return false;
    }

    return true;
}

int main() {
    std::mt19937 g;

    int n;
    cin >> n;
    vector<int> v1, v2;
    v1.reserve(n);
    v2.reserve(n);

    for (int i = 0; i < n; ++i) {
        v1.push_back(rand());
        v2.push_back(rand());
    }

    // оба вектора случайны, вряд ли они совпадут
    cout << ""Random vectors match? ""s << flush;
    cout << (TestPermut(v1, v2) ? ""Yes""s : ""No""s) << endl;

    // делаем один перестановкой другого явным образом
    v2 = v1;

    shuffle(v2.begin(), v2.end(), g);
 
    cout << ""Permuted vectors match? ""s << flush;
    cout << (TestPermut(v1, v2) ? ""Yes""s : ""No""s) << endl;
}"
ZtWVA0YA,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Wednesday 3rd of April 2024 06:36:01 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_333306.pdf

Working as of:
03 April 2024"
RjAE5T0g,LoopingTextCC,Shterman,Lua,Wednesday 3rd of April 2024 06:27:22 AM CDT,"local monitor = peripheral.wrap(""right"")
local monitorSize = monitor.getSize()
local textScale = 2
local currentCursorPos = 0
local text = ""Warning""

monitor.clear()
monitor.setTextScale(3)
monitor.setCursorPos(1,1)
currentCursorPos = 0 - #text + 1

while true do
    monitor.clear()
    currentCursorPos = currentCursorPos + 1
    monitor.setCursorPos(currentCursorPos, 1)
    monitor.write(text)

    if currentCursorPos > monitorSize then
        currentCursorPos = 0 - #text +1
    end

    sleep(1)
    print(""yo"")
end"
bpgeEAQ3,data885,TestGuy1,JSON,Wednesday 3rd of April 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f58fb434f4464bfd6c25321139bc06eaa834b8c70cc9fd5ff088c1ae00ee54d0bc350d78c3bf2800bb3599d37ab434210349f9a807dcec7afe2142b8514fa5f3e92273bd74c37fcc06356d7fed022296fa0876d93d8b3d3c0d855996c4739b25b2242e90e87fa3aff963f05b312170ca79b410749d26bbd472a5ab3cb68c406d',
  otherdata: [
    'b67e0f724e2d9623200793aff6ea66ae',
    'a8b3ee0622ebea5079eefe7238709084',
    'b992c69ae210937161de1ab7c5172672',
    'e522e7a48031f94ec7cd56e933e87685',
    '3b975266acb5236573ad4a7feabedd75',
    '389faa06eb1940a2116e44d211b27e52',
    'd1b679e04a2c191a5eeda5938f4907c1',
    '27549256c0cd43a531540c234a7b5171'
  ]
}"
Fg40652J,Expire Dialog,dds902,JSON,Wednesday 3rd of April 2024 05:55:55 AM CDT,"{
    ""message"": ""Your subscription has lapsed. Kindly renew it to unlock exclusive features and maintain uninterrupted access to our premium offerings."",
    ""expirationDate"": ""2024-04-07"",
    ""dateFormat"": ""yyyy-MM-dd"",
    ""buttonLink"": ""https://t.me/akd00bx377""
}"
ep3dbwGk,How to split into two models from Chat gpt,horozov86,Python,Wednesday 3rd of April 2024 05:48:16 AM CDT,"СТРАННО НЕ ВИЖДАМ DELETE PLACE. МОЖЕ БИ СЪМ ГО ЗАБРАВИЛ!!!!!!!!!

from django.contrib.auth import get_user_model
from django.db import models

UserModel = get_user_model()

class Category(models.Model):
    CATEGORY_CHOICES = [
        ('Mountain', 'Mountain'),
        ('Sea', 'Sea'),
        ('Historical Site', 'Historical Site'),
        ('City', 'City'),
        ('Spa', 'Spa'),
        ('Wine Tourism', 'Wine Tourism')
    ]

    category = models.CharField(max_length=100, choices=CATEGORY_CHOICES)

    def __str__(self):
        return self.category

class Place(models.Model):
    RATING_CHOICES = [
        (1, '1 Star'),
        (2, '2 Stars'),
        (3, '3 Stars'),
        (4, '4 Stars'),
        (5, '5 Stars'),
    ]

    hotel_name = models.CharField(
        max_length=200,
        null=False,
        blank=False,
        verbose_name=""Hotel name"",
    )
    description = models.TextField(
        null=False,
        blank=False,
    )
    location = models.CharField(
        max_length=200,
        null=False,
        blank=False,
    )
    rating = models.IntegerField(
        choices=RATING_CHOICES,
        null=True,
        blank=True,
    )

    image_url = models.ImageField(upload_to=""mediafiles/photos"", null=True, blank=True,)

    category = models.ForeignKey(Category, on_delete=models.CASCADE)

    user = models.ForeignKey(UserModel, on_delete=models.CASCADE)

from django import forms
from my_holiday.destination.models import Place, Category

class PlaceBaseForm(forms.ModelForm):
    class Meta:
        model = Place
        fields = ['hotel_name', 'description', 'location', 'rating', 'image_url', 'category']
        widgets = {
            'hotel_name': forms.TextInput(attrs={'placeholder': 'Enter hotel name...'}),
            'description': forms.Textarea(attrs={'placeholder': 'Enter short hotel description...'}),
            'location': forms.TextInput(attrs={'placeholder': 'Fill hotel location...'}),
        }

class PlaceCreateForm(PlaceBaseForm):
    CATEGORY_CHOICES = Category.CATEGORY_CHOICES
    category = forms.ChoiceField(choices=CATEGORY_CHOICES)

class PlaceDetailsForm(PlaceBaseForm):
    pass

class PlaceEditForm(PlaceBaseForm):
    pass
"
QmmuUxhB,Untitled,mfemtsuccess,JSON,Wednesday 3rd of April 2024 05:44:43 AM CDT,"
عند التخطيط لرحلة إلى مكة المكرمة ، من الضروري العثور على أماكن الإقامة المناسبة التي تناسب ميزانيتك. ولحسن الحظ، توفر المدينة مجموعة من الخيارات، بما في ذلك فنادق مكة التي تلبي مختلف الأسعار. سواء كنت تبحث عن إقامة فاخرة في فندق 5 نجوم أو خيار أكثر ملائمة للميزانية في فندق 3 نجوم ، فإن مكة المكرمة لديها ما يناسب الجميع. من خلال استكشاف أرخص الفنادق في المنطقة، يمكنك توفير المال بينما لا تزال تتمتع بإقامة مريحة.

إحدى طرق العثور على أماكن إقامة بأسعار معقولة في مكة المكرمة هي التفكير في الإقامة في فندق 3 نجوم . توفر هذه الفنادق وسائل الراحة الأساسية بتكلفة أقل، مما يجعلها خيارًا مثاليًا للمسافرين ذوي الميزانية المحدودة. تشمل بعض خيارات الميزانية المشهورة نجوم في مكة وفنادق الفاخرة . من خلال حجز غرفة في أحد هذه العقارات، يمكنك زيادة ميزانيتك بشكل أكبر والحصول على المزيد من المال لإنفاقه على جوانب أخرى من رحلتك.


read more:
https://alkawtherhotel.com/discover-cheapest-makkah-hotels/"
E2iXLR6r,Data pre Prieskum,IT-Academy,HTML,Wednesday 3rd of April 2024 05:41:53 AM CDT,"Data pre Prieskum

https://vitask-my.sharepoint.com/:x:/g/personal/miroslav_vitask_onmicrosoft_com/EYbDTnJjIPRFplGkpqZ3eqkBCMGE-uEZ2VXUI4D8nIoaQQ?e=q8EbKd"
pkt1NLEx,Untitled,mfemtsuccess,JSON,Wednesday 3rd of April 2024 05:40:11 AM CDT,"عند التخطيط لتجربة الحج في مدينة مكة المكرمة المقدسة، فإن أحد أهم العوامل التي يجب مراعاتها هو العثور على سكن مناسب بالقرب من مكة المكرمة والحصول على فندق قريب من الحرم المكي ورخيص  . هناك العديد من فنادق مكة المكرمة ، بدءًا من الفنادق الفاخرة ذات الميزانية المحدودة إلى الفنادق الفاخرة من فئة 5 نجوم . بالنسبة لأولئك الذين يبحثون عن إقامة مريحة بأسعار معقولة، فإن الفنادق من فئة 3 نجوم و 4 نجوم في المنطقة المجاورة تعد خيارًا رائعًا. توفر هذه الفنادق وصولاً سهلاً إلى مسجد الحرام وتوفر ملاذًا هادئًا بعد يوم من الأنشطة الدينية.

يعد فندق سويس أوتل المقام مكة أحد أفضل الخيارات للإقامة بأسعار معقولة بالقرب من المسجد الحرام. يوفر هذا الفندق ذو الـ 3 نجوم غرفًا مريحة

read more:
https://alkawtherhotel.com/best-hotel-cheapest-near-haram/"
WhUDWp4x,Untitled,Pasterbiner123321,Lua,Wednesday 3rd of April 2024 05:38:38 AM CDT,"-- CONFIGS

local easy = {
minQTDE = 50,
maxQTDE = 220,

minEXP = 250000,
maxEXP = 750000,

prizesID = {7492, 7493},
prizesNAME = {""Epic Gem"", ""Legendary Gem""},
minQTDEPremios = 0,
maxQTDEPremios = 2,

PremioFixoID = 2160,
PremioFixoNAME = ""Crystal Coin"",
PremioFixoQTDE = 1,

taskPoints = 1
}

local medium = {
minQTDE = 100,
maxQTDE = 400,

minEXP = 500000,
maxEXP = 1500000,

prizesID = {7492, 7493},
prizesNAME = {""Epic Gem"", ""Legendary Gem""},
minQTDEPremios = 1,
maxQTDEPremios = 3,

PremioFixoID = 2160,
PremioFixoNAME = ""Crystal Coin"",
PremioFixoQTDE = 2,

taskPoints = 2
}

local hard = {
minQTDE = 150,
maxQTDE = 500,

minEXP = 1000000,
maxEXP = 3000000,

prizesID = {7492, 7493},
prizesNAME = {""Epic Gem"", ""Legendary Gem""},
minQTDEPremios = 2,
maxQTDEPremios = 4,

PremioFixoID = 2160,
PremioFixoNAME = ""Crystal Coin"",
PremioFixoQTDE = 3,

taskPoints = 3
}

local expert = {
minQTDE = 200,
maxQTDE = 600,

minEXP = 2000000,
maxEXP = 6000000,

prizesID = {7492, 7493},
prizesNAME = {""Epic Gem"", ""Legendary Gem""},
minQTDEPremios = 3,
maxQTDEPremios = 5,

PremioFixoID = 2160,
PremioFixoNAME = ""Crystal Coin"",
PremioFixoQTDE = 4,

taskPoints = 4
}

DT_TasksEasy = {""Cyclops"", ""Tarantula"", ""Dwarf Guard"", ""Lizard Sentinel"", ""Kongar"", ""Minotaur"", ""Rotworm"", ""Ghoul"", ""Crocodile"", ""Dwarf"", ""Sibang"", ""Scarab""}
DT_TasksMedium = {""Dragon"", ""Crystal Spider"", ""Bonebeast"", ""Lizard Templar"", ""Pirate Corsair"", ""Quara Mantassin"", ""Quara Constrictor"", ""Wyvern"", ""Vampire"", ""Orc Berserker"", ""Mummy"", ""Crypt Shambler"", ""Ancient Scarab""}
DT_TasksHard = {""Dragon Lord"", ""Serpent Spawn"", ""Frost Dragon"", ""Behemoth"", ""Giant Spider"", ""Hydra"", ""Quara Predator Scout"", ""Orc Leader"", ""Hero"", ""Renegade Quara Pincher"", ""Dark Torturer"", ""Elf Capitan""}
DT_TasksExpert = {""Demon"", ""Dragon Lord"", ""Serpent Spawn"", ""Frost Dragon"", ""Dark Torturer"", ""Warlock"", ""Defiler"", ""Undead Dragon"", ""Elf Capitan"", ""Elf Necromanta"", ""Elf Lord""}

-- SCRIPT

	
	DT_STORAGES = {
		PONTOS = 367643975,
		EXPERT = 367643974,
		HARD = 367643973,
		MEDIUM = 367643972,
		EASY = 367643971,
		HAVE_STARTED = 367643970,
			}
			
	--RESETAR STORAGES
        for i = 1, 6 do
        db.query('DELETE FROM `player_storage` WHERE `player_storage`.`key` = '.. 367643969+i ..'')
        end   
        
    -- EASY (100-)
        DT_CHOSENTASK_EASY = DT_TasksEasy[math.random(#DT_TasksEasy)]
        DT_NEEDKILL_EASY = math.ceil(math.random(easy.minQTDE, easy.maxQTDE))
        DT_EXPPRIZE_EASY = math.random(easy.minEXP, easy.maxEXP)
        
        DT_PRIZEID_EASY = easy.prizesID
        DT_PRIZENAME_EASY = easy.prizesNAME
        DT_PREMIOQTDE_EASY = math.random(easy.minQTDEPremios, easy.maxQTDEPremios)
        
        DT_PREMIOFIXO_ID_EASY = easy.PremioFixoID
        DT_PREMIOFIXO_NAME_EASY = easy.PremioFixoNAME
        DT_PREMIOFIXO_QTDE_EASY = easy.PremioFixoQTDE
        
        DT_TASKPOINTS_EASY = easy.taskPoints
        
    -- MEDIUM (150-)
        DT_CHOSENTASK_MEDIUM = DT_TasksMedium[math.random(#DT_TasksMedium)]
        DT_NEEDKILL_MEDIUM = math.ceil(math.random(medium.minQTDE, medium.maxQTDE))
        DT_EXPPRIZE_MEDIUM = math.random(medium.minEXP, medium.maxEXP)
        
        DT_PRIZEID_MEDIUM = medium.prizesID
        DT_PRIZENAME_MEDIUM = medium.prizesNAME
        DT_PREMIOQTDE_MEDIUM = math.random(medium.minQTDEPremios, medium.maxQTDEPremios)
        
        DT_PREMIOFIXO_ID_MEDIUM = medium.PremioFixoID
        DT_PREMIOFIXO_NAME_MEDIUM = medium.PremioFixoNAME
        DT_PREMIOFIXO_QTDE_MEDIUM = medium.PremioFixoQTDE
        
        DT_TASKPOINTS_MEDIUM = medium.taskPoints
    
    --HARD (200-)
        DT_CHOSENTASK_HARD = DT_TasksHard[math.random(#DT_TasksHard)]
        DT_NEEDKILL_HARD = math.ceil(math.random(hard.minQTDE, hard.maxQTDE))
        DT_EXPPRIZE_HARD = math.random(hard.minEXP, hard.maxEXP)
        
        DT_PRIZEID_HARD = hard.prizesID
        DT_PRIZENAME_HARD = hard.prizesNAME
        DT_PREMIOQTDE_HARD = math.random(hard.minQTDEPremios, hard.maxQTDEPremios)
        
        DT_PREMIOFIXO_ID_HARD = hard.PremioFixoID
        DT_PREMIOFIXO_NAME_HARD = hard.PremioFixoNAME
        DT_PREMIOFIXO_QTDE_HARD = hard.PremioFixoQTDE
        
        DT_TASKPOINTS_HARD = hard.taskPoints
        
    --EXPERT (200+)
        DT_CHOSENTASK_EXPERT = DT_TasksExpert[math.random(#DT_TasksExpert)]
        DT_NEEDKILL_EXPERT = math.ceil(math.random(expert.minQTDE, expert.maxQTDE))
        DT_EXPPRIZE_EXPERT = math.random(expert.minEXP, expert.maxEXP)
        
        DT_PRIZEID_EXPERT = expert.prizesID
        DT_PRIZENAME_EXPERT = expert.prizesNAME
        DT_PREMIOQTDE_EXPERT = math.random(expert.minQTDEPremios, expert.maxQTDEPremios)
        
        DT_PREMIOFIXO_ID_EXPERT = expert.PremioFixoID
        DT_PREMIOFIXO_NAME_EXPERT = expert.PremioFixoNAME
        DT_PREMIOFIXO_QTDE_EXPERT = expert.PremioFixoQTDE
        
        DT_TASKPOINTS_EXPERT = expert.taskPoints

        -- FUNÇÃO PRA PEGAR OS NOMES DOS ITEM
function getAllTableText(aa, bb, cc)
local tablecheck = aa

if not tablecheck then
    return false
end

local lang = bb
local ponto = """"
if not lang then
    lang = ""and""
end
if cc then
ponto = "".""
end
local text = """"
for i = 1, #tablecheck do
    if i == 1 then
    text = tablecheck[i]
    elseif i == #tablecheck then
    text = text .."" ""..lang.."" ""..tablecheck[i]..""""..ponto..""""
    else
    text = text .."", ""..tablecheck[i]
    end
end
return text
end"
aCzajhP8,Screen Display,Shterman,Lua,Wednesday 3rd of April 2024 05:38:31 AM CDT,"local monitor = peripheral.wrap(""right"")
local monitorSize
local textScale = 2
local text = ""Warning""

if monitor then
	monitor.clear()
    monitor.setTextScale(textScale)
	monitorSize = monitor.getSize()

	monitor.setCursorPos((monitorSize - #text)/2,1)
	monitor.write(text)
    print(monitorSize)
    print((monitorSize - #text)/2)
	print(""success"")
else
	print(""die"")
end"
LMedLaLd,Untitled,Ionian_Caster,C,Wednesday 3rd of April 2024 05:37:00 AM CDT,"#include ""stdio.h""
#include ""stdlib.h""
#include <math.h>

#define SZ 10

void fillRandom(int* array, int size, int border) {
    for (int i = 0; i < size; ++i) {
        *(array + i) = rand() % border;
    }
}

void printIntArray(int* array, int size, int offset) {
    char format[7];
    sprintf(format, ""%%%dd"", offset);
    for (int i = 0; i < size; ++i) {
        printf(format, array[i]);
        if (i != size - 1)
            printf("","");
    }
    printf(""\n"");
}

// some of integers in array
int sum(int* arr, int len) {
    int result = 0;

    for (int i = 0; i < len; ++i) {
        result += arr[i];
    }

    return result;
}

// recursive power implementation
double power(double num, double exp) {
    if (exp > 0)
        return num * power(num, exp - 1.0);
    else if (exp < 0)
        return 1 / power(num, -exp); // 1 divide on recursive call of X^-ex
    else // again ANY X^0 is always 1
        return 1;
}

int main() {
    int array[SZ];
    fillRandom(array, SZ, 20);
    printIntArray(array, SZ, 3);
    printf(""The sum is: %d\n"", sum(array, SZ));
    double number, exponent;
    printf(""\nPlease, input the number: "");
    scanf(""%lf"", &number);
    printf(""\nPlease, input the exponent: "");
    scanf(""%lf"", &exponent);
    printf(""%lf\n"", power(number, exponent));
}"
MF44NbqF,Untitled,mfemtsuccess,JSON,Wednesday 3rd of April 2024 05:32:33 AM CDT,"إذا كنت تخطط لزيارة مكة، أقدس مدينة في الإسلام، فإن العثور على مكان الإقامة المثالي أمر ضروري لضمان إقامة مريحة وممتعة. ولحسن الحظ، هناك الكثير من خيارات الفنادق في مكة التي تقدم تجربة فريدة وسط المعالم الدينية والثقافية للمدينة. من الفنادق الفاخرة من فئة الخمس نجوم إلى الخيارات الصديقة للميزانية، هناك ما يناسب احتياجات كل مسافر وميزانيته.

مكة مدينة غارقة في التاريخ والروحانية، وتجذب ملايين الحجاج من جميع أنحاء العالم كل عام. ونتيجة لذلك، فإن صناعة الفنادق في مكة متطورة بشكل جيد، مع وجود مجموعة واسعة من الخيارات للاختيار من بينها. سواء كنت تبحث عن فندق يقع بالقرب من المسجد الحرام أو فندق يتمتع بإطلالات خلابة على أفق المدينة، فستجد في مكة ما يناسب الجميع. أحد أفضل الطرق للحصول على عروض فنادق رائعة في مكة هو الحجز مسبقًا.

من خلال التخطيط لرحلتك مسبقًا، يمكنك الاستفادة من خصومات الحجز المبكر والعروض الخاصة التي تقدمها العديد من الفنادق في مكة لجذب الضيوف. بالإضافة إلى ذلك، يمنحك الحجز المسبق الفرصة للاختيار من بين مجموعة واسعة من الفنادق، مما يضمن العثور على الإقامة المثالية لإقامتك. هناك طريقة أخرى للعثور على أفضل عروض الفنادق في مكة وهي البحث عن العروض الشاملة التي تشمل الإقامة والنقل والجولات المصحوبة بمرشدين لأهم معالم المدينة.

“لا تفوت عروض فنادق مكة: تجربة استثنائية بأسعار مذهلة!”

إذا كنت تبحث عن تجربة إقامة رائعة في مكة المكرمة بأسعار مميزة، فعروض فنادق مكة هي ما تحتاجه. تقدم لك هذه العروض فرصة فريدة للاستمتاع بالراحة والفخامة دون الإضرار بميزانيتك.

تتنوع عروض فنادق مكة لتشمل خصومات مذهلة، وحزم موسمية، وتخفيضات خاصة للحجوزات المبكرة. سواء كنت تبحث عن فنادق فاخرة توفر إطلالات خلابة على المسجد الحرام، أو فنادق متوسطة السعر بموقع مركزي يسهل الوصول إلى المعالم السياحية، فإن هذه العروض تلبي احتياجاتك.

استغل الفرصة للحصول على تجربة فاخرة بأسعار مخفضة في فنادق مكة. استمتع بالخدمة الممتازة، والمرافق العصرية، والمواقع المثالية التي تجعل إقامتك مريحة وممتعة.

لا تضيع الفرصة واحجز الآن للاستفادة من عروض فنادق مكة الرائعة والتمتع بتجربة لا تنسى بأسعار مذهلة.


read more:
https://alkawtherhotel.com/makkah-offers-hotels/
"
sVQrDwbi,Untitled,yasi04,Python,Wednesday 3rd of April 2024 05:25:08 AM CDT,"import disnake
import sqlite3
from disnake.ext import commands


bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('main.db')
c = conn.cursor()


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")

    c.execute(""""""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        score BIGINT,
        wins INTEGER,
        loses INTEGER,
        winrate TEXT
    )"""""")

    conn.commit()

    for guild in bot.guilds:
        for member in guild.members:
            if c.execute(f""SELECT name FROM users WHERE name = '{member}'"").fetchone() is None:
                c.execute(f""INSERT INTO users VALUES ('{member}', 0, 0, 0, '0')"")
            else:
                pass
    c.execute

    conn.commit()
    print('client connected')


@bot.slash_command(name='counter', description='Add win\lose')
async def addwinlose(ctx, user: disnake.User, score: int, winlose: str = commands.Param(choices=['Win', 'Lose'])):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses, score FROM users WHERE name=?"", (f'{user}',))
        wins, loses, old_score = c.fetchone()
        if winlose == ""Win"":
            modifier = 1 + score / (wins + 1)
            winrate = (((wins + 1) * modifier) / ((wins + 1) + loses))
            c.execute(""UPDATE users SET wins=wins+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        else:
            modifier = 1 + ((old_score + score) / wins)
            winrate = ((wins * modifier) / (wins + (loses + 1)))
            print(old_score + score, wins, loses, modifier, winrate)
            c.execute(""UPDATE users SET loses=loses+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        c.execute(""SELECT score FROM users WHERE name=?"", (f'{user}',))
        new_score = c.fetchone()[0]
        await ctx.send(f'User {user} got {score} score points and now have {new_score}')
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='info', description='Show user info')
async def info(ctx, user: disnake.User):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses, score, winrate FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score, winrate = c.fetchone()

        embed = disnake.Embed(
            title=f""Info about {user}"",
            description=f""Score: {score}\nWins: {wins}\nLoses: {loses}\nWinrate: {float(winrate):.2f}"",
            color=0x00ff00
        )

        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='top10', description='Show top 10 users')
async def showtop10(ctx):
    if ctx.author.guild_permissions.administrator:
        top10 = {}
        c.execute(""SELECT name FROM users"")
        names = c.fetchall()
        for name in names:
            c.execute(""SELECT winrate FROM users WHERE name=?"", (name[0],))
            top10[name] = c.fetchone()[0]
        sort_top10 = dict(sorted(top10.items(), key=lambda x: x[1], reverse=True))
        for item in sort_top10:
            top1 = item
            break
        embed = disnake.Embed(
            title=f""Top 10 users"",
            description=f""1) {top1[0]} score {sort_top10[top1]}"",
            color=0x00ff00
        )
        del sort_top10[top1]
        count = 2
        for item in sort_top10:
            if count != 10:
                embed.add_field(name='', value=f""{count}) {item[0]} score {sort_top10[item]}"", inline=False)
                count += 1
        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


bot.run('TOKEN')
"
pzZhhzB0,Untitled,yasi04,Python,Wednesday 3rd of April 2024 04:55:01 AM CDT,"import disnake
import sqlite3
from disnake.ext import commands


bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('main.db')
c = conn.cursor()


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")

    c.execute(""""""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        score BIGINT,
        wins INTEGER,
        loses INTEGER,
        winrate TEXT
    )"""""")

    conn.commit()

    for guild in bot.guilds:
        for member in guild.members:
            if c.execute(f""SELECT name FROM users WHERE name = '{member}'"").fetchone() is None:
                c.execute(f""INSERT INTO users VALUES ('{member}', 0, 0, 0, '0')"")
            else:
                pass
    c.execute

    conn.commit()
    print('client connected')


@bot.slash_command(name='counter', description='Add win\lose')
async def addwinlose(ctx, user: disnake.User, score: int, winlose: str = commands.Param(choices=['Win', 'Lose'])):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses FROM users WHERE name=?"", (f'{user}',))
        wins, loses = c.fetchone()
        if winlose == ""Win"":
            modifier = 1 + score / (wins + 1)
            winrate = (((wins + 1) * modifier) / ((wins + 1) + loses))
            c.execute(""UPDATE users SET wins=wins+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        else:
            modifier = 1 + score / wins
            winrate = ((wins * modifier) / (wins + (loses + 1)))
            c.execute(""UPDATE users SET loses=loses+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        c.execute(""SELECT score FROM users WHERE name=?"", (f'{user}',))
        new_score = c.fetchone()[0]
        await ctx.send(f'User {user} got {score} score points and now have {new_score}')
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='info', description='Show user info')
async def info(ctx, user: disnake.User):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses, score, winrate FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score, winrate = c.fetchone()

        embed = disnake.Embed(
            title=f""Info about {user}"",
            description=f""Score: {score}\nWins: {wins}\nLoses: {loses}\nWinrate: {winrate}"",
            color=0x00ff00
        )

        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='top10', description='Show top 10 users')
async def showtop10(ctx):
    if ctx.author.guild_permissions.administrator:
        top10 = {}
        c.execute(""SELECT name FROM users"")
        names = c.fetchall()
        for name in names:
            c.execute(""SELECT winrate FROM users WHERE name=?"", (name[0],))
            top10[name] = c.fetchone()[0]
        sort_top10 = dict(sorted(top10.items(), key=lambda x: x[1], reverse=True))
        for item in sort_top10:
            top1 = item
            break
        embed = disnake.Embed(
            title=f""Top 10 users"",
            description=f""1) {top1[0]} score {sort_top10[top1]}"",
            color=0x00ff00
        )
        del sort_top10[top1]
        count = 2
        for item in sort_top10:
            if count != 10:
                embed.add_field(name='', value=f""{count}) {item[0]} score {sort_top10[item]}"", inline=False)
                count += 1
        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


bot.run('TOKEN')
"
zny4WB1J,Untitled,yasi04,Python,Wednesday 3rd of April 2024 04:26:36 AM CDT,"import disnake
import sqlite3
from disnake.ext import commands


bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('main.db')
c = conn.cursor()


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")

    c.execute(""""""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        score BIGINT,
        wins INTEGER,
        loses INTEGER,
        winrate TEXT
    )"""""")

    conn.commit()

    for guild in bot.guilds:
        for member in guild.members:
            if c.execute(f""SELECT name FROM users WHERE name = '{member}'"").fetchone() is None:
                c.execute(f""INSERT INTO users VALUES ('{member}', 0, 0, 0, '0')"")
            else:
                pass
    c.execute

    conn.commit()
    print('client connected')


@bot.slash_command(name='counter', description='Add win\lose')
async def addwinlose(ctx, user: disnake.User, score: int, winlose: str = commands.Param(choices=['Win', 'Lose'])):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses, score FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score = c.fetchone()
        if winlose == ""Win"":
            modifier = 1 + score / (wins + 1)
            winrate = (((wins + 1) * modifier) / ((wins + 1) + loses))
            c.execute(""UPDATE users SET wins=wins+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        else:
            modifier = 1 + score / wins
            winrate = ((wins * modifier) / (wins + (loses + 1)))
            c.execute(""UPDATE users SET loses=loses+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        c.execute(""SELECT score FROM users WHERE name=?"", (f'{user}',))
        new_score = c.fetchone[0]
        await ctx.send(f'User {user} got {score} score points and now have {new_score}')
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='info', description='Show user info')
async def info(ctx, user: disnake.User):
    if ctx.author.guild_permissions.administrator:
        c.execute(""SELECT wins, loses, score, winrate FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score, winrate = c.fetchone()

        embed = disnake.Embed(
            title=f""Info about {user}"",
            description=f""Score: {score}\nWins: {wins}\nLoses: {loses}\nWinrate: {winrate}"",
            color=0x00ff00
        )

        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='top10', description='Show top 10 users')
async def showtop10(ctx):
    if ctx.author.guild_permissions.administrator:
        top10 = {}
        c.execute(""SELECT name FROM users"")
        names = c.fetchall()
        for name in names:
            c.execute(""SELECT winrate FROM users WHERE name=?"", (name[0],))
            top10[name] = c.fetchone()[0]
        sort_top10 = dict(sorted(top10.items(), key=lambda x: x[1], reverse=True))
        for item in sort_top10:
            top1 = item
            break
        embed = disnake.Embed(
            title=f""Top 10 users"",
            description=f""1) {top1[0]} score {sort_top10[top1]}"",
            color=0x00ff00
        )
        del sort_top10[top1]
        count = 2
        for item in sort_top10:
            if count != 10:
                embed.add_field(name='', value=f""{count}) {item[0]} score {sort_top10[item]}"", inline=False)
                count += 1
        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


bot.run('TOKEN')
"
wrxLtTJN,P868F,fooker,C++,Wednesday 3rd of April 2024 04:08:50 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ll long long

const ll nmax = 1e9+7;
const ll nmax2 = 998244353;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef tree<std::pair<ll, ll>, null_type, less<std::pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set_pair;

ll l_ = 0;
ll r_ = 0;
ll cost = 0;
ll dp[21][100001];

std::vector<ll> cnt(100001);
std::vector<ll> a(100001);

void prepare(ll n, ll k) {
    for (ll i = 0; i <= k; i++){
        for (ll j = 0; j <= n; j++) dp[i][j] = LLONG_MAX;
    }

    for (ll i = 1; i <= k; i++) dp[i][0] = 0;
    for (ll i = 0; i <= n; i++) dp[0][i] = 0;

    for (ll i = 1; i <= k; i++) {
        for (ll j = 0; j < i; j++) dp[i][j] = 0;
    }

    for (ll i = 1; i <= n; i++){
        cnt[a[i]]++;
        cost += (cnt[a[i]] - 1);
        dp[1][i] = cost;
    }
}

void divide_and_conquer(ll j, ll l, ll r, ll L, ll R) {
    ll mid = (l + r) >> 1;
    if (l > r) return;

    while (r_ < mid) {
        cnt[a[++r_]]++;
        cost += (cnt[a[r_ - 1]] - 1);
    }
    while (r_ > mid) {
        cnt[a[r_--]]--;
        cost -= (cnt[a[r_ + 1]]);
    }
    while (l_ < L) {
        cnt[a[l_++]]--;
        cost -= (cnt[a[l_ - 1]]);
    }
    while (l_ > L) {
        cnt[a[--l_]]++;
        cost += (cnt[a[l_ + 1]] - 1);
    }

    ll optimal = LLONG_MAX;
    ll M = L;

    for (ll i = L; i <= R; i++) {
        if (i > mid) break;

        while (l_ < i) {
            cnt[a[l_++]]--;
            cost -= (cnt[a[l_]]);
        } 

        dp[j][mid] = std::min(dp[j][mid], dp[j - 1][i - 1] + cost);

        if (optimal > dp[j][mid]) {
            optimal = dp[j][mid];
            M = i;
        }
    }
    
    divide_and_conquer(j, l, mid - 1, L, M);
    divide_and_conquer(j, mid + 1, r, R, M);
}

void solve() {
    ll n, k;
    std::cin >> n >> k;

    for (ll i = 1; i <= n; i++) std::cin >> a[i];

    prepare(n, k);

    for (ll i = 2; i <= k; i++) {
        for (ll j = 0; j <= n; j++) cnt[j] = 0;
        
        cost = 0;
        l_ = 0;
        r_ = 0;

        divide_and_conquer(i, i, n, i, n);
    }

    std::cout << dp[k][n] << '\n';
}

int main(){
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);

    int t = 1;
    // std::cin >> t;
    while(t--) {
        solve();
    }
}"
mMYeaY0D,Review PaxForex,fxvnpro,PHP,Wednesday 3rd of April 2024 04:08:06 AM CDT,https://www.fxvnpro.com/review-paxforex/
TXZBvNjp,Review PaxForex,reviewbrokers,PHP,Wednesday 3rd of April 2024 04:08:02 AM CDT,https://www.reviewbrokers.net/review-paxforex/
gN9fSGkQ,SQL - Window Function - Value Function Script by HadiMaster,hadimaster65555,PostgreSQL,Wednesday 3rd of April 2024 03:55:43 AM CDT,"CREATE TABLE sales_data (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(50),
    price DECIMAL(10, 2),
    product_group VARCHAR(20)
);

INSERT INTO sales_data (product_name, price, product_group) VALUES
('Product A', 100.00, 'Group 1'),
('Product B', 150.00, 'Group 2'),
('Product C', 80.00, 'Group 1'),
('Product D', 120.00, 'Group 3'),
('Product E', 200.00, 'Group 2'),
('Product F', 90.00, 'Group 1'),
('Product G', 110.00, 'Group 3'),
('Product H', 130.00, 'Group 4'),
('Product I', 95.00, 'Group 1'),
('Product J', 180.00, 'Group 2'),
('Product K', 85.00, 'Group 1'),
('Product L', 115.00, 'Group 3'),
('Product M', 210.00, 'Group 2'),
('Product N', 70.00, 'Group 1'),
('Product O', 125.00, 'Group 4'),
('Product P', 100.00, 'Group 1'),
('Product Q', 160.00, 'Group 2'),
('Product R', 75.00, 'Group 1'),
('Product S', 105.00, 'Group 3'),
('Product T', 220.00, 'Group 2'),
('Product U', 65.00, 'Group 1'),
('Product V', 135.00, 'Group 4'),
('Product W', 110.00, 'Group 1'),
('Product X', 170.00, 'Group 2'),
('Product Y', 80.00, 'Group 1'),
('Product Z', 95.00, 'Group 3'),
('Product AA', 230.00, 'Group 2'),
('Product BB', 60.00, 'Group 1'),
('Product CC', 140.00, 'Group 4');

-- melihat keseluruhan data
SELECT * FROM sales_data;

-- find cheapest product from all product based on its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    FIRST_VALUE(product_name) OVER (ORDER BY price) AS cheapest_product
FROM 
    sales_data;

-- find cheapest product based on each group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    FIRST_VALUE(product_name) OVER (PARTITION BY product_group ORDER BY price) AS cheapest_product
FROM 
    sales_data;
	
-- find priciest product from all product based on its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LAST_VALUE(product_name) OVER (ORDER BY price ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS priciest_product
FROM 
    sales_data;

-- find product based on its sorted price then pick the last product name
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LAST_VALUE(product_name) OVER (ORDER BY price ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING) AS last_product
FROM 
    sales_data;

-- find priciest product for every group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LAST_VALUE(product_name) OVER (PARTITION BY product_group ORDER BY price ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS priciest_product
FROM 
    sales_data;

-- find 1 lag of product name for every product group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LAG(product_name) OVER (PARTITION BY product_group ORDER BY price) AS previous_price_in_group
FROM 
    sales_data;

-- find 2 lag of product name for every product group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LAG(product_name, 2) OVER (PARTITION BY product_group ORDER BY price) AS previous_price_in_group
FROM 
    sales_data;

-- find 1 lead of product name for every product group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LEAD(product_name) OVER (PARTITION BY product_group ORDER BY price) AS previous_price_in_group
FROM 
    sales_data;

-- find 2 lead of product name for every product group sorted by its price
SELECT 
    product_id,
    product_name,
    price,
    product_group,
    LEAD(product_name,2) OVER (PARTITION BY product_group ORDER BY price) AS previous_price_in_group
FROM 
    sales_data;"
w7idi3Va,Untitled,GLASHATAY_007,Oracle 11,Wednesday 3rd of April 2024 03:51:43 AM CDT,"Truncate Table kgz_purchase_uo;
Insert into kgz_purchase_uo 
-- 1 block
Select 
    p.requestid,
    p.lotuuid,
    p.pg_ikz,
    p.pg_rn,
    p.reqnum,
    p.f_productprice,
    p.final_price,
    trunc(p.date_notice_published)date_notice_published,
    p.lotstage,
    p.reqstage,
    p.fordertypename,
    to_char(p.lotsubject)lotsubject,
    o.inn,
    o.full_name,
    p.grbstitle,
    Null kgz_reqnum,
   o.inn As c_inn -- 6 ИНН организации разместившей извещение
   ,o.full_name As c_org -- 7 наименование организации разместившей извещение
   ,p.joflag
   ,pea.nmck_type --  метод определения и обоснования НМЦК
   ,get_pg_year(p.pg_ikz)pg_year
   ,1 type
From dwh_procedures_kgntv p
Inner Join dwh_organization_kgntv o on p.orgid=o.id
Left Join (    SELECT
                        COALESCE(l.lot_id,sovm.lot_id) lot_id,
                        COALESCE(l.plnm_name,l.plnm_name2,sovm.plnm_name) nmck_type
                 FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                  Left Join (SELECT
                                    m.plnm_name,
                                    COALESCE(l.lot_id,m.lot_id,TO_NUMBER(p.lotuuid)) lot_id,
                                    COALESCE(p.MORD_FLAG,m.MORD_FLAG) 
                                FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'D' --
                                Left Join(SELECT
                                            COALESCE(gm.plnm_name,gm.plnm_name2) plnm_name,
                                            COALESCE(l.lot_id,gm.lot_id,TO_NUMBER(p.lotuuid)) lot_id, --p.lotuuid
                                            COALESCE(p.MORD_FLAG,gm.MORD_FLAG) MORD_FLAG
                                          FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                          Left Join( SELECT 
                                                        l.*,
                                                        MORD_FLAG 
                                                     FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                                     Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id 
                                                     WHERE MORD_FLAG IS NULL
                                                    ) gm ON gm.lot_id = l.joint_procedure_id
                                  Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'M'
                                  WHERE l.joint_procedure_id IS NOT NULL
                                          )m ON m.lot_id = p.LOT_CONS_M
                              ) sovm ON sovm.lot_id = l.lot_id
               ) pea ON pea.lot_id = p.lotuuid 
Where 1=1 
And trunc(p.date_notice_published)>'01.01.2023'
--and p.pg_ikz like '24%'
And p.reqnum Is Not Null
And p.mord_flag='D'
And  p.uo_orgid Is Null
And p.joflag <>1
And p.orgid Not In (1030,1894,2981,2167,1725,3097,1030)
--order by p.f_productprice desc
union 
-- 2 block

Select 
    Distinct 
    to_char(cons.requestid)requestid,
    to_char(cons.lotuuid)lotuuid,
    cons.pg_ikz,
    cons.pg_rn,
    cons.reqnum,
    cons.f_productprice,
    cons.final_price,
    trunc(cons.date_notice_published)date_notice_published,
    cons.lotstage,
    cons.reqstage,
    cons.fordertypename,
    to_char(cons.lotsubject)lotsubject,
    o.inn,
    o.full_name,
    cons.grbstitle,
    Case 
		When p.uo_orgid=1412 Then cons.reqnum 
		Else Null 
	End kgs_reqnum,
    o.inn As inn -- 6 ИНН организации разместившей извещение
   ,o.full_name As c_org -- 7 наименование организации разместившей извещение
   ,p.joflag
   ,pea.nmck_type --  метод определения и обоснования НМЦК
   ,get_pg_year(p.pg_ikz)pg_year
   ,2
From dwh_procedures_cons_kgntv cons
Inner Join dwh_procedures_kgntv p On cons.lotuuid = p.Joint_procedure_id
Inner Join dwh_organization_kgntv o On cons.orgid=o.id
Left Join dwh_organization_kgntv o_u On o_u.id = p.uo_orgid
Left Join (Select
                        COALESCE(l.lot_id,sovm.lot_id) lot_id,
                        COALESCE(l.plnm_name,l.plnm_name2,sovm.plnm_name) nmck_type
                 FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                  Left Join (SELECT
                                    m.plnm_name,
                                    COALESCE(l.lot_id,m.lot_id,TO_NUMBER(p.lotuuid)) lot_id,
                                    COALESCE(p.MORD_FLAG,m.MORD_FLAG) 
                                FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'D' --
                                Left Join(SELECT
                                            COALESCE(gm.plnm_name,gm.plnm_name2) plnm_name,
                                            COALESCE(l.lot_id,gm.lot_id,TO_NUMBER(p.lotuuid)) lot_id, --p.lotuuid
                                            COALESCE(p.MORD_FLAG,gm.MORD_FLAG) MORD_FLAG
                                          FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                          Left Join( SELECT 
                                                        l.*,
                                                        MORD_FLAG 
                                                     FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                                     Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id 
                                                     WHERE MORD_FLAG IS NULL
                                                    ) gm ON gm.lot_id = l.joint_procedure_id
                                  Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'M'
                                  WHERE l.joint_procedure_id IS NOT NULL
                                          )m ON m.lot_id = p.LOT_CONS_M
                              ) sovm ON sovm.lot_id = l.lot_id
               ) pea On pea.lot_id = cons.lotuuid 
Where 1=1 
-- and coalesce(cons.pg_ikz, p.pg_ikz) like '24%'
And trunc(p.date_notice_published)>'01.01.2023'
And p.mord_flag='M'
And p.joflag=1
And p.orgid Not In (1030,1894,2981,2167,1725,3097,1030)
union
-- 3 block
Select 
    p.requestid,
    p.lotuuid,
    p.pg_ikz,
    p.pg_rn,
    p.reqnum,
    p.f_productprice,
    p.final_price,
    trunc(p.date_notice_published)date_notice_published,
    p.lotstage,
    p.reqstage,
    p.fordertypename,
    to_char(p.lotsubject)lotsubject,
    o.inn,
    o.full_name,
    p.grbstitle,
    Case 
		When p.uo_orgid=1412 Then p.reqnum 
		Else Null 
	End kgs_reqnum,
    o.inn As inn -- 6 ИНН организации разместившей извещение
   ,o.full_name As c_org -- 7 наименование организации разместившей извещение
   ,p.joflag
   ,pea.nmck_type --  метод определения и обоснования НМЦК
   ,get_pg_year(p.pg_ikz)pg_year
   ,3
From dwh_procedures_kgntv p
Inner Join dwh_organization_kgntv o on p.uo_orgid=o.id
Left Join (    SELECT
                        COALESCE(l.lot_id,sovm.lot_id) lot_id,
                        COALESCE(l.plnm_name,l.plnm_name2,sovm.plnm_name) nmck_type
                 FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                  Left Join (SELECT
                                    m.plnm_name,
                                    COALESCE(l.lot_id,m.lot_id,TO_NUMBER(p.lotuuid)) lot_id,
                                    COALESCE(p.MORD_FLAG,m.MORD_FLAG) 
                                FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'D' --
                                Left Join(SELECT
                                            COALESCE(gm.plnm_name,gm.plnm_name2) plnm_name,
                                            COALESCE(l.lot_id,gm.lot_id,TO_NUMBER(p.lotuuid)) lot_id, --p.lotuuid
                                            COALESCE(p.MORD_FLAG,gm.MORD_FLAG) MORD_FLAG
                                          FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                          Left Join( SELECT 
                                                        l.*,
                                                        MORD_FLAG 
                                                     FROM DWH_LOT_KGNTV_EXT_ATTR_1 l
                                                     Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id 
                                                     WHERE MORD_FLAG IS NULL
                                                    ) gm ON gm.lot_id = l.joint_procedure_id
                                  Left Join dwh_procedures_kgntv p ON p.lotuuid = l.lot_id AND p.MORD_FLAG = 'M'
                                  Where l.joint_procedure_id Is Not Null
                                          )m On m.lot_id = p.LOT_CONS_M
                              ) sovm On sovm.lot_id = l.lot_id
               ) pea On pea.lot_id = p.lotuuid 
Where 1=1 
--and p.pg_ikz like '24%'
And trunc(p.date_notice_published)>'01.01.2023'
And p.reqnum Is Not Null
And p.mord_flag='D'
And  p.uo_orgid Is Not Null
And p.placement='Централизованная закупка'
And p.joflag<>1
And p.orgid Not In (1030,1894,2981,2167,1725,3097,1030)
;"
BcHFhLcJ,Untitled,yasi04,Python,Wednesday 3rd of April 2024 03:42:49 AM CDT,"import disnake
import sqlite3
from disnake.ext import commands


bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('main.db')
c = conn.cursor()


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")

    c.execute(""""""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        score BIGINT,
        wins INTEGER,
        loses INTEGER,
        winrate TEXT
    )"""""")

    conn.commit()

    for guild in bot.guilds:
        for member in guild.members:
            if c.execute(f""SELECT name FROM users WHERE name = '{member}'"").fetchone() is None:
                c.execute(f""INSERT INTO users VALUES ('{member}', 0, 0, 0, '0')"")
            else:
                pass
    c.execute

    conn.commit()
    print('client connected')


@bot.slash_command(name='counter', description='Add win\lose')
async def addwinlose(ctx, user: disnake.User, score: int, winlose: str = commands.Param(choices=['Win', 'Lose'])):
    allowed_role = ctx.guild.get_role(""1224836480531169474"")
    if allowed_role in ctx.author.roles:
        c.execute(""SELECT wins, loses, score FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score = c.fetchone()
        if winlose == ""Win"":
            modifier = 1 + score / (wins + 1)
            winrate = (((wins + 1) * modifier) / ((wins + 1) + loses))
            c.execute(""UPDATE users SET wins=wins+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        else:
            modifier = 1 + score / wins
            winrate = ((wins * modifier) / (wins + (loses + 1)))
            c.execute(""UPDATE users SET loses=loses+1, score=score+?, winrate=? WHERE name=?"", (score, f'{winrate}', f'{user}'))
        c.execute(""SELECT score FROM users WHERE name=?"", (f'{user}',))
        new_score = c.fetchone[0]
        await ctx.send(f'User {user} got {score} score points and now have {new_score}')
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='info', description='Show user info')
async def info(ctx, user: disnake.User):
    allowed_role = ctx.guild.get_role(""1224836480531169474"")
    if allowed_role in ctx.author.roles:
        c.execute(""SELECT wins, loses, score, winrate FROM users WHERE name=?"", (f'{user}',))
        wins, loses, score, winrate = c.fetchone()

        embed = disnake.Embed(
            title=f""Info about {user}"",
            description=f""Score: {score}\Wins: {wins}\Loses: {loses}\nWinrate: {winrate}"",
            color=0x00ff00
        )

        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


@bot.slash_command(name='top10', description='Show top 10 users')
async def showtop10(ctx):
    allowed_role = ctx.guild.get_role(""1224836480531169474"")
    if allowed_role in ctx.author.roles:
        top10 = {}
        c.execute(""SELECT name FROM users"")
        names = c.fetchall()
        for name in names:
            c.execute(""SELECT winrate FROM users WHERE name=?"", (f'{name}',))
            top10[name] = c.fetchone()[0]
        sort_top10 = dict(sorted(top10.items(), key=lambda x: x[1], reverse=True))
        for item in sort_top10:
            top1 = item
            break
        embed = disnake.Embed(
            title=f""Top 10 users"",
            description=f""1) {top1}: {sort_top10[top1]}"",
            color=0x00ff00
        )
        del sort_top10[top1]
        count = 2
        for item in sort_top10:
            if count != 10:
                embed.add_field(value=f""{count}) {item}: {sort_top10[item]}"", inline=False)
        await ctx.send(embed=embed)
    else:
        await ctx.send(""You do not have permissions to use this command."")
    conn.commit()


bot.run('TOKEN')
"
axdgzMBs,Custom Button,borlabs,JavaScript,Wednesday 3rd of April 2024 03:24:30 AM CDT,"(function() {
  const config = {
    referenceButtonClass: 'brlbs-btn-accept-all', // Possible values: brlbs-btn-accept-all, brlbs-btn-save, brlbs-btn-accept-only-essential, brlbs-cmpnt-btn-preferences
    buttonPosition: 'before', // Possible values: after, before
    buttonText: 'Gib Geld',
    buttonUrl: 'https://arabic-for-nerds.com/arabic-for-nerds-plus/',
    maxAttempts: 20 // Attempts to find the dialog
  };

  function createCustomButton(container, config) {
    const newButton = document.createElement('button');
    newButton.className = 'brlbs-cmpnt-btn brlbs-cmpnt-font-semibold brlbs-cmpnt-w-full';
    Object.assign(newButton.style, {
      '--tw-ring-color': 'var(--dialog-button-accept-all-color-hover)',
      background: 'var(--dialog-button-accept-all-color)',
      color: 'var(--dialog-button-accept-all-text-color)'
    });
    newButton.textContent = config.buttonText;
    newButton.onclick = function() { window.location.href = config.buttonUrl; };
    const newDiv = document.createElement('div');
    newDiv.appendChild(newButton);
    
    if (config.buttonPosition === 'after') {
      container.parentNode.insertBefore(newDiv, container.nextSibling);
    } else {
      container.parentNode.insertBefore(newDiv, container);
    }
  }

  function initCustomButton(config, attempts = 0) {
    const dialogReferenceButton = document.querySelector(`.brlbs-cmpnt-dialog-bar-entrance button.${config.referenceButtonClass}`)?.parentElement;
    if (dialogReferenceButton) {
      createCustomButton(dialogReferenceButton, config);
    } else if (attempts < config.maxAttempts) {
      setTimeout(() => initCustomButton(config, attempts + 1), 50);
    }
  }

  document.addEventListener('DOMContentLoaded', () => initCustomButton(config));
})();
"
KWZ1XUUf,Untitled,35657,C++,Wednesday 3rd of April 2024 02:45:45 AM CDT,"
using namespace std;

#include <iostream>
#include <vector>


int binarySearch(std::vector<int>& arr, int x, int left, int right) {
    if (right <= left) {
        // промежуток пуст
        return -1;
    }
    // промежуток не пуст
    int mid = (left + right) / 2;
    if (arr[mid] == x) {
        // центральный элемент — искомый
        return mid;
    }
    else if (x < arr[mid]) {
        // искомый элемент меньше центрального значит следует искать в левой половине
        return binarySearch(arr, x, left, mid);
    }
    else {
        // иначе следует искать в правой половине
        return binarySearch(arr, x, mid + 1, right);
    }
}

int binarySearch2(std::vector<int>& arr, int x, int left, int right) {
    if (right <= left) {
        // промежуток пуст
        return -1;
    }
    // промежуток не пуст
    int mid = (left + right) / 2;
    if (arr[mid] == x) {
        // центральный элемент — искомый
        return mid;
    }
    return  x < arr[mid] ? binarySearch2(arr, x, left, mid) : binarySearch2(arr, x, mid + 1, right);
}

int binarySearch3(std::vector<int>& arr, int x, int left, int right) {
    if (right <= left) {
        // промежуток пуст
        return -1;
    }
    // промежуток не пуст
    int mid = (left + right) / 2;
    if (arr[mid] == x) {
        // центральный элемент — искомый
        return mid;
    }
    if (x < arr[mid]) {
        // искомый элемент меньше центрального значит следует искать в левой половине
        return binarySearch3(arr, x, left, mid);
    }
    if (x > arr[mid]) {
        // иначе следует искать в правой половине
        return binarySearch3(arr, x, mid + 1, right);
    }
}

int main() {
    vector<int> arr(1000000);
    
    for (int i = 0; i < 1000000; i++) {
        arr[i] = i;
    }

    int index, x = 999999;

    int start_time = clock();

    for (int i = 0; i < 1000000; i++) {
        index = binarySearch(arr, x, 0, arr.size());
    }
    
    int end_time = clock();

    cout << ""index "" << index << "", time "" << end_time - start_time << "" milliseconds"" << endl;

    start_time = clock();

    for (int i = 0; i < 1000000; i++) {
        index = binarySearch2(arr, x, 0, arr.size());
    }

    end_time = clock();

    cout << ""index "" << index << "", time "" << end_time - start_time << "" milliseconds"" << endl;

    start_time = clock();

    for (int i = 0; i < 1000000; i++) {
        index = binarySearch3(arr, x, 0, arr.size());
    }

    end_time = clock();

    cout << ""index "" << index << "", time "" << end_time - start_time << "" milliseconds"" << endl;
}
"
Kafzq39D,pubspec.yaml,Zainalsalamun,YAML,Wednesday 3rd of April 2024 02:14:11 AM CDT,"name: yokkebizlite_mobile
description: A new Flutter project.


publish_to: 'none'


#version : 1.0.0+1
#version : 1.0.2+9
version : 1.0.2+10

## flutter 3.7.8
environment:
  sdk: "">=2.19.5 <3.0.0""


dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  cupertino_icons: ^1.0.2

## put alphabetic
#  alt_sms_autofill: ^1.0.0
  assets_audio_player: ^3.0.6
  app_settings: ^4.1.8
#  blue_thermal_printer: ^1.2.3

  cached_network_image: ^3.2.0
  camera: ^0.10.0+1
  carousel_slider: ^4.2.1
#  connectivity_plus: ^2.2.0
  crypto: ^3.0.2
  currency_text_input_formatter: ^2.1.5

  dart_ipify: ^1.1.1
  device_info_plus: ^8.0.0
  dio: ^5.1.0
  pretty_dio_logger: ^1.3.1

#  ecr_lib:
#    path: ./packages/ecr_lib

  file_picker: ^5.2.2
  flutter_bluetooth_printer: ^2.8.0
  flutter_dotenv: ^5.0.2
#  flutter_easyloading: ^3.0.3
  flutter_image_compress: ^1.1.0
#  flutter_masked_text2: ^0.9.1
#  flutter_screenutil: 5.1.0
#  flutter_spinkit: ^5.1.0
  flutter_svg: ^2.0.4
#  flutter_switch: ^0.3.2
  flutter_typeahead: ^4.1.1
  flutter_widget_from_html: ^0.10.2
#  fluttertoast: ^8.0.8
  form_field_validator: ^1.1.0

  geocoding: ^2.0.5
  geolocator: ^10.0.0
  get: ^4.6.1
  get_storage: ^2.0.3
  google_fonts: ^4.0.3
#  grouped_list: ^4.2.0

  image_gallery_saver: ^2.0.3
  image_picker: ^0.8.5
  #intl: ^0.17.0
  intl: ^0.18.1


#  loader_overlay: ^2.0.5

  math_expressions: ^2.3.0
  mobile_scanner: ^3.1.1

  onesignal_flutter: ^3.4.1
  overlay_support: ^2.0.1

  package_info_plus: ^3.0.1
  path_provider: ^2.0.8
  permission_handler: ^10.2.0
#  pin_code_fields: ^7.3.0
  pinput: ^2.2.3

  qr_code_scanner: ^1.0.1
  qr_flutter: ^4.0.0

  shared_preferences: ^2.0.12
#  shimmer: ^2.0.0
  sticky_headers: ^0.3.0+2
#  syncfusion_flutter_datepicker: ^19.4.55
  flutter_slidable: ^2.0.0
#  toggle_switch: ^1.4.0
  timezone: ^0.9.2

  url_launcher: ^6.1.5
  uuid: ^3.0.6
  flutter_jailbreak_detection: ^1.10.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_lints: ^2.0.1
#  flutter_launcher_name: ^0.0.1
#  flutter_launcher_icons: ^0.9.3
#  change_app_package_name: ^1.1.0


flutter:
  uses-material-design: true
  assets:
    - assets/env/

    - assets/images/
    - assets/images/digital_product/
    - assets/images/digital_product/provider/

    - assets/svgs/
    - assets/svgs/kasbon/
    - assets/svgs/product/
    - assets/svgs/digital_product/
    - assets/svgs/submenu_dashboard/
    - assets/svgs/auth/

    - assets/svgs/account/
    - assets/svgs/account/qr_profile/
    - assets/svgs/account/change_profile/
    - assets/svgs/account/change_password/
    - assets/svgs/account/text_field/
    - assets/svgs/bansos/

    - assets/sound/



#flutter_launcher_name:
#  name: ""YokkeBiz Lite""
# flutter pub run flutter_launcher_name:main


#flutter_icons:
#  android: ""launcher_icon""
#  ios: true
#  image_path: ""assets/images/yokke_app_logo.png""
# flutter pub run flutter_launcher_icons:main


# flutter pub run change_app_package_name:main com.new.package.name
"
Jr5zJLKS,ButterflyLauncher_TestUpdateXML,ProHenis,XML,Wednesday 3rd of April 2024 01:11:57 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<item>
	<version>3.1.2.7</version>
	<url>https://github.com/RealProHenis/ButterflyLauncher/raw/main/ButterflyLauncher_Latest.zip</url>
	<changelog></changelog>
	<mandatory>false</mandatory>
</item>"
cDmhFE59,volatility3-pixel,Panchajanya1999,Bash,Wednesday 3rd of April 2024 12:37:10 AM CDT,"┌─(~/Development/work/volatility3)──────────────(panchajanya@archlinux:pts/0)─┐
└─(11:04:33 on aarch64-support ✹ ✭)──> python vol.py -f ram6a3.lime linux.pslist.PsList              ──(Wed,Apr03)─┘
Volatility 3 Framework 2.5.2
ERROR    volatility3.framework.automagic.linux: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 151, in _weak_resolve
    return getattr(self._dict[table_name], get_function)(component_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 60, in _delegate_function
    return getattr(self._delegate, name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 792, in get_type
    return self.natives.get_type(self.name + constants.BANG + type_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/native.py"", line 83, in get_type
    _native_type, native_format = self._native_dictionary[type_name]
                                  ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
KeyError: 'long unsigned int'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 95, in stack
    layer = linux_arch_stacker(
            ^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 135, in intel_stacker
    kaslr_shift, aslr_shift = cls.find_aslr(
                              ^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 371, in find_aslr
    init_task.files.cast(""long unsigned int"")
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/interfaces/objects.py"", line 178, in cast
    object_template = self._context.symbol_space.get_type(new_type_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 206, in get_type
    self._resolved[type_name] = self._weak_resolve(SymbolType.TYPE, type_name)  # type: ignore
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 153, in _weak_resolve
    raise exceptions.SymbolError(
volatility3.framework.exceptions.SymbolError: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
ERROR    volatility3.framework.automagic.linux: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 151, in _weak_resolve
    return getattr(self._dict[table_name], get_function)(component_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 60, in _delegate_function
    return getattr(self._delegate, name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/intermed.py"", line 792, in get_type
    return self.natives.get_type(self.name + constants.BANG + type_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/native.py"", line 83, in get_type
    _native_type, native_format = self._native_dictionary[type_name]
                                  ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
KeyError: 'long unsigned int'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 95, in stack
    layer = linux_arch_stacker(
            ^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 188, in aarch64_stacker
    kaslr_shift, aslr_shift = cls.find_aslr(
                              ^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/automagic/linux.py"", line 371, in find_aslr
    init_task.files.cast(""long unsigned int"")
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/interfaces/objects.py"", line 178, in cast
    object_template = self._context.symbol_space.get_type(new_type_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 206, in get_type
    self._resolved[type_name] = self._weak_resolve(SymbolType.TYPE, type_name)  # type: ignore
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/panchajanya/Development/work/volatility3/volatility3/framework/symbols/__init__.py"", line 153, in _weak_resolve
    raise exceptions.SymbolError(
volatility3.framework.exceptions.SymbolError: Type LinuxStacker1!long unsigned int references missing Type/Symbol/Enum: 'long unsigned int'
Progress:  100.00		Stacking attempts finished                 
Unsatisfied requirement plugins.PsList.kernel.layer_name: 
Unsatisfied requirement plugins.PsList.kernel.symbol_table_name: 

A translation layer requirement was not fulfilled.  Please verify that:
	A file was provided to create this layer (by -f, --single-location or by config)
	The file exists and is readable
	The file is a valid memory image and was acquired cleanly

A symbol table requirement was not fulfilled.  Please verify that:
	The associated translation layer requirement was fulfilled
	You have the correct symbol file for the requirement
	The symbol file is under the correct directory or zip file
	The symbol file is named appropriately or contains the correct banner

Unable to validate the plugin requirements: ['plugins.PsList.kernel.layer_name', 'plugins.PsList.kernel.symbol_table_name']"
r8iTxGVd,3x3 attempt,CBredlow,Lua,Wednesday 3rd of April 2024 12:23:18 AM CDT,"-- SPDX-FileCopyrightText: 2017 Daniel Ratcliffe
--
-- SPDX-License-Identifier: LicenseRef-CCPL

if not turtle then
    printError(""Requires a Turtle"")
    return
end

local tArgs = { ... }
if #tArgs ~= 1 then
    local programName = arg[0] or fs.getName(shell.getRunningProgram())
    print(""Usage: "" .. programName .. "" <length>"")
    return
end

-- Mine in a quarry pattern until we hit something we can't dig
local length = tonumber(tArgs[1])
if length < 1 then
    print(""Tunnel length must be positive"")
    return
end
local collected = 0

local function collect()
    collected = collected + 1
    if math.fmod(collected, 25) == 0 then
        print(""Mined "" .. collected .. "" items."")
    end
end

local function tryDig()
    while turtle.detect() do
        if turtle.dig() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigUp()
    while turtle.detectUp() do
        if turtle.digUp() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function tryDigDown()
    while turtle.detectDown() do
        if turtle.digDown() then
            collect()
            sleep(0.5)
        else
            return false
        end
    end
    return true
end

local function refuel()
    local fuelLevel = turtle.getFuelLevel()
    if fuelLevel == ""unlimited"" or fuelLevel > 0 then
        return
    end

    local function tryRefuel()
        for n = 1, 16 do
            if turtle.getItemCount(n) > 0 then
                turtle.select(n)
                if turtle.refuel(1) then
                    turtle.select(1)
                    return true
                end
            end
        end
        turtle.select(1)
        return false
    end

    if not tryRefuel() then
        print(""Add more fuel to continue."")
        while not tryRefuel() do
            os.pullEvent(""turtle_inventory"")
        end
        print(""Resuming Tunnel."")
    end
end

local function tryUp()
    refuel()
    while not turtle.up() do
        if turtle.detectUp() then
            if not tryDigUp() then
                return false
            end
        elseif turtle.attackUp() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryDown()
    refuel()
    while not turtle.down() do
        if turtle.detectDown() then
            if not tryDigDown() then
                return false
            end
        elseif turtle.attackDown() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

local function tryForward()
    refuel()
    while not turtle.forward() do
        if turtle.detect() then
            if not tryDig() then
                return false
            end
        elseif turtle.attack() then
            collect()
        else
            sleep(0.5)
        end
    end
    return true
end

print(""Tunnelling..."")

for n = 1, length do
--    turtle.placeDown()
-- do bottom row 
	tryDigDown() 
	tryDown()
	turtle.turnLeft()
	tryDig()	
    turtle.turnRight()
    turtle.turnRight()	
    tryDig()
	turtle.turnLeft()
	
    tryDigUp()
    turtle.turnLeft()
    tryDig()
    tryUp()
    tryDig()
    turtle.turnRight()
    turtle.turnRight()
    tryDig()
    tryDown()
    tryDig()
    turtle.turnLeft()

    if n < length then
        tryDig()
        if not tryForward() then
            print(""Aborting Tunnel."")
            break
        end
    else
        print(""Tunnel complete."")
    end

end

--[[
print( ""Returning to start..."" )

-- Return to where we started
turtle.turnLeft()
turtle.turnLeft()
while depth > 0 do
    if turtle.forward() then
        depth = depth - 1
    else
        turtle.dig()
    end
end
turtle.turnRight()
turtle.turnRight()
]]

print(""Tunnel complete."")
print(""Mined "" .. collected .. "" items total."")
"
HY61Zg7M,Untitled,mrboombaw32,MySQL,Wednesday 3rd of April 2024 12:07:00 AM CDT,"select 
  d.KDPSTMSMHS as kode_prodi, 
  d.SMAWLMSMHS, 
  d.STMHSMSMHS as status, 
  a.npm, 
  d.NMMHSMSMHS as nama, 
  a.kelas, 
  a.sex as jk, 
  a.nisn, 
  a.ktp as nik, 
  a.agama, 
  a.no_kps, 
  a.nama_ayah, 
  a.nama_ibu, 
  a.kewarganegaraan, 
  a.alamat as jalan, 
  a.rt, 
  a.rw, 
  a.penerima_kps, 
  a.jenis_tinggal, 
  a.kebutuhan_khusus_mhs, 
  (
    select 
      tk.name 
    from 
      tbl_kelurahans tk 
    WHERE 
      tk.id = a.kelurahan
  ) as desa, 
  (
    SELECT 
      tk.id_wil 
    FROM 
      tbl_kecamatans tk 
    WHERE 
      tk.id = a.kecamatan
  ) as kec, 
  a.kota as kab, 
  a.provinsi as prov, 
  a.tpt_lahir, 
  a.tgl_lahir, 
  a.email, 
  a.no_hp, 
  b.no_ujian, 
  a.npwp, 
  a.kode_pos 
from 
  tbl_bio_mhs as a 
  join tbl_register as b on a.npm = b.npm 
  join tbl_mahasiswa as d on a.npm = d.NIMHSMSMHS 
where 
  substr(a.npm, 1, 4) = '2023' 
  and d.KDPSTMSMHS = '61001'"
YqkJJb6j,gdrive service script,NERO_REDIVIVUS,Bash,Tuesday 2nd of April 2024 11:49:22 PM CDT,"#! /bin/sh

while true; do
	echo ""Attempting to mount Google Drive at /home/matt/Gdrive"" | systemd-cat
	rclone mount blah blah 2>&1 | systemd-cat
	echo ""Google Drive unmounted, or mount attempt unsuccessful"" | systemd-cat
	sleep 5
done
"
5HL1mPY1,stairway,ironman2745,Lua,Tuesday 2nd of April 2024 10:31:23 PM CDT,"function goForward( gentle )
	if gentle == true then
		turtle.forward()
	else
		while turtle.forward() == false do
			turtle.dig()
			turtle.attack()
		end
	end
end

function goUp( gentle )
	if gentle == true then
		turtle.up()
	else
		while turtle.up() == false do
			turtle.digUp()
			turtle.attackUp()
		end
	end
end

function goDown( gentle )
	if gentle == true then
		turtle.down()
	else
		while turtle.down() == false do
			turtle.digDown()
			turtle.attackDown()
		end
	end
end

function goBack( gentle )
	if gentle == true then
		turtle.back()
	else
		turtle.turnRight()
		turtle.turnRight()
		goForward(false)
		turtle.turnLeft()
		turtle.turnLeft()
	end
end

function searchInventoryForItem( item )
	local ind = -1
	if item == nil then
		return ind
	end
	for i=1,16 do
		if turtle.getItemDetail(i) ~= nil then
			if turtle.getItemDetail(i).name == item then
				ind = i
				i = 16
			end
		end
	end
	return ind
end

function setupTorchesInInventory()
	local torchesPresent = false
	local previousSlot = turtle.getSelectedSlot()
	local torchesIndex = searchInventoryForItem(""minecraft:torch"")
	if torchesIndex > -1 then
		torchesPresent = true
		turtle.select(torchesIndex)
		turtle.transferTo(16)
        turtle.select(previousSlot)
	end
	return torchesPresent
end

function placeTorch()
	if turtle.getItemDetail(16) ~= nil then
		if turtle.getItemDetail(16).name == ""minecraft:torch"" then
			local previousSlot = turtle.getSelectedSlot()
			local torchIndex = searchInventoryForItem(""minecraft:torch"")
			turtle.select(torchIndex)
			turtle.placeUp()
            turtle.select(previousSlot)
		end
	end
end


local torches = setupTorchesInInventory()
local depth = 0;
-- Dig forward a couple blocks for a doorway
turtle.dig()
goForward()
turtle.digUp()
turtle.dig()
goForward()
turtle.digUp()
turtle.digDown()

-- Start digging the stairway
local success, data = turtle.inspectDown()
while data.name ~= ""minecraft:bedrock"" do
    turtle.dig()
    goForward()
    turtle.digUp()
    if (depth%5)==0 then
		placeTorch()
	end
    turtle.digDown()
    goDown()
    turtle.digDown()
    depth = depth + 1
    success, data = turtle.inspectDown()
end

-- Continue until reaching bedrock
-- turn around
turtle.turnRight()
turtle.turnRight()

local stairsIndex = searchInventoryForItem(""minecraft:cobblestone_stairs"")
local stairsPresent = (stairsIndex > -1)

-- Return to surface
for i=1, depth do -- fixme. use for loop and counter
    goForward()
    -- if stairs present in inventory
    if stairsPresent then
        local preselectedSlot = turtle.getSelectedSlot()
        local itemDetail = turtle.getItemDetail(stairsIndex)
        -- Because staircase can be more than 64 deep...
        -- Make sure we still have stairs selected
        if(itemDetail == nil or itemDetail.name ~= ""minecraft:cobblestone_stairs"") then
            stairsIndex = searchInventoryForItem(""minecraft:cobblestone_stairs"")
            stairsPresent = (stairsIndex > -1)
        end
        turtle.select(stairsIndex)
        turtle.digDown()
        turtle.placeDown()
        -- check to make sure stairs are right side up
        local success, data = turtle.inspectDown()
        if success and data.state.half == ""top"" then
            -- stair is upsidown
            turtle.digDown()
            goDown()
            local fillerBlockIndex = searchInventoryForItem(""minecraft:cobblestone"")
            if fillerBlockIndex > -1 then
                turtle.select(fillerBlockIndex)
            else
                fillerBlockIndex = searchInventoryForItem(""minecraft:cobbled_deepslate"")
                if fillerBlockIndex > -1 then
                    turtle.select(fillerBlockIndex)
                end
            end
            turtle.placeDown()
            goUp()
            turtle.select(stairsIndex)
            turtle.placeDown()
        end
        if(i==depth) then
            turtle.dig()
            turtle.place()
        end
        turtle.select(preselectedSlot)
        else
    end
    -- endif
    goUp()
end
"
rc4PTzqh,array,Pass89,PHP,Tuesday 2nd of April 2024 10:25:52 PM CDT,"$sample = array(
    ['id'=> '1', 'name'=>'a.view'],
    ['id'=> '2', 'name'=>'a.delete'],
    ['id'=> '3', 'name'=>'b.view'],
    ['id'=> '4', 'name'=>'b.delete'],
);

// mau ditampilkan dalam bentuk tabel

<table>
    <tr>
        <td>a.view</td>
        <td>a.delete</td>
    </tr>
    <tr>
        <td>b.view</td>
        <td>b.delete</td>
    </tr>
</table>
"
nwjLqKMh,News April2 24,Newscaster_Ned,Email,Tuesday 2nd of April 2024 10:15:41 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

B‎r‎a‎w‎l‎s‎ ‎B‎r‎e‎a‎k‎ ‎O‎u‎t‎ ‎a‎t‎ ‎S‎a‎n‎ ‎D‎i‎e‎g‎o‎'‎s‎ ‎P‎e‎t‎c‎o‎ ‎F‎i‎e‎l‎d‎ ‎D‎u‎r‎i‎n‎g‎ ‎P‎a‎d‎r‎e‎s‎-‎G‎i‎a‎n‎t‎s‎ ‎G‎a‎m‎e‎s‎
W‎h‎i‎t‎m‎e‎r‎:‎ ‎'‎W‎h‎o‎ ‎C‎a‎r‎e‎s‎'‎ ‎i‎f‎ ‎I‎ ‎t‎h‎i‎n‎k‎ ‎U‎n‎b‎o‎r‎n‎ ‎A‎r‎e‎ ‎P‎e‎o‎p‎l‎e‎?‎ ‎I‎t‎'‎s‎ ‎U‎p‎ ‎t‎o‎ ‎I‎n‎d‎i‎v‎i‎d‎u‎a‎l‎s‎
B‎i‎d‎e‎n‎ ‎C‎o‎-‎C‎h‎a‎i‎r‎ ‎o‎n‎ ‎L‎a‎c‎k‎ ‎o‎f‎ ‎B‎o‎r‎d‎e‎r‎ ‎A‎c‎t‎i‎o‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎E‎x‎p‎l‎o‎i‎t‎i‎n‎g‎ ‎G‎a‎r‎c‎i‎a‎ ‎D‎e‎a‎t‎h‎
M‎i‎c‎h‎i‎g‎a‎n‎ ‎P‎o‎l‎l‎ ‎S‎h‎o‎w‎s‎ ‎T‎r‎u‎m‎p‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎ ‎a‎s‎ ‎V‎o‎t‎e‎r‎s‎ ‎E‎x‎p‎r‎e‎s‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎M‎a‎s‎s‎
T‎a‎i‎w‎a‎n‎:‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎s‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎A‎f‎t‎e‎r‎ ‎E‎a‎r‎t‎h‎q‎u‎a‎k‎e‎
T‎r‎u‎d‎e‎a‎u‎ ‎t‎o‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎s‎:‎ ‎M‎y‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎P‎o‎l‎i‎c‎y‎ ‎C‎u‎t‎s‎ ‎W‎a‎g‎e‎s‎
T‎r‎u‎m‎p‎:‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎D‎a‎y‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎‘‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎V‎i‎s‎i‎b‎i‎l‎i‎t‎y‎ ‎D‎a‎y‎’‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
N‎e‎b‎r‎a‎s‎k‎a‎ ‎G‎o‎v‎ ‎B‎a‎c‎k‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎-‎L‎e‎d‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎A‎w‎a‎r‎d‎ ‎A‎l‎l‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎’‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎i‎d‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎W‎i‎n‎n‎e‎r‎

H‎o‎w‎ ‎W‎i‎n‎n‎e‎r‎-‎T‎a‎k‎e‎-‎A‎l‎l‎ ‎S‎y‎s‎t‎e‎m‎ ‎C‎o‎u‎l‎d‎ ‎M‎a‎k‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
T‎e‎r‎j‎e‎ ‎A‎n‎d‎e‎r‎s‎o‎n‎,‎ ‎l‎e‎f‎t‎,‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎h‎r‎e‎e‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎V‎e‎r‎m‎o‎n‎t‎'‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎C‎o‎l‎l‎e‎g‎e‎,‎ ‎c‎a‎s‎t‎s‎ ‎h‎i‎s‎ ‎v‎
N‎E‎ ‎G‎o‎v‎.‎ ‎P‎i‎l‎l‎e‎n‎ ‎h‎a‎s‎ ‎b‎a‎c‎k‎e‎d‎ ‎a‎n‎ ‎e‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎a‎w‎a‎r‎d‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎’‎s‎ ‎e‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎v‎o‎t‎e‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎w‎h‎o‎ ‎w‎i‎n‎s‎ ‎s‎t‎a‎t‎e‎w‎i‎d‎e‎.‎ ‎

R‎F‎K‎ ‎J‎r‎.‎ ‎S‎a‎y‎s‎ ‎B‎i‎d‎e‎n‎ ‎‘‎M‎u‎c‎h‎ ‎W‎o‎r‎s‎e‎ ‎T‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎’‎ ‎T‎h‎a‎n‎ ‎T‎r‎u‎m‎p‎
R‎F‎K‎ ‎J‎r‎.‎ ‎S‎a‎y‎s‎ ‎B‎i‎d‎e‎n‎ ‎'‎M‎u‎c‎h‎ ‎W‎o‎r‎s‎e‎ ‎T‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎'‎ ‎T‎h‎a‎n‎ ‎T‎r‎u‎m‎p‎
4‎,‎1‎2‎2‎
M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎,‎ ‎8‎2‎,‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎R‎e‎m‎a‎i‎n‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎H‎i‎s‎ ‎O‎w‎n‎ ‎P‎a‎r‎t‎y‎
M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎,‎ ‎8‎2‎,‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎R‎e‎m‎a‎i‎n‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎H‎i‎s‎ ‎O‎w‎n‎ ‎P‎a‎r‎t‎y‎
1‎,‎3‎4‎3‎
N‎e‎b‎r‎a‎s‎k‎a‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎B‎a‎c‎k‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎-‎L‎e‎d‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎A‎w‎a‎r‎d‎ ‎A‎l‎l‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎’‎s‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎
N‎E‎ ‎G‎o‎v‎.‎ ‎B‎a‎c‎k‎s‎ ‎E‎f‎f‎o‎r‎t‎ ‎f‎o‎r‎ ‎A‎l‎l‎ ‎E‎l‎e‎c‎t‎o‎r‎a‎l‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎w‎i‎d‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎W‎i‎n‎n‎e‎r‎
1‎,‎6‎6‎6‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎a‎i‎s‎e‎s‎ ‎M‎i‎n‎i‎m‎u‎m‎ ‎W‎a‎g‎e‎ ‎F‎o‎r‎ ‎F‎a‎s‎t‎ ‎F‎o‎o‎d‎ ‎W‎o‎r‎k‎e‎r‎s‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎U‎n‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎R‎a‎t‎e‎ ‎I‎n‎ ‎t‎h‎e‎ ‎N‎a‎t‎i‎o‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎a‎i‎s‎e‎s‎ ‎M‎i‎n‎i‎m‎u‎m‎ ‎W‎a‎g‎e‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎U‎n‎e‎m‎p‎l‎o‎y‎m‎e‎n‎t‎ ‎R‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎S‎
9‎0‎7‎
S‎c‎o‎t‎t‎i‎s‎h‎ ‎L‎e‎a‎d‎e‎r‎ ‎C‎l‎a‎i‎m‎s‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎ ‎o‎f‎ ‎H‎a‎t‎e‎ ‎S‎p‎e‎e‎c‎h‎ ‎L‎a‎w‎ ‎O‎n‎l‎y‎ ‎F‎r‎o‎m‎ ‎‘‎R‎i‎g‎h‎t‎ ‎W‎i‎n‎g‎’‎,‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎O‎p‎p‎
S‎c‎o‎t‎t‎i‎s‎h‎ ‎L‎e‎a‎d‎e‎r‎ ‎S‎a‎y‎s‎ ‎C‎r‎i‎t‎i‎c‎i‎s‎m‎ ‎o‎f‎ ‎H‎a‎t‎e‎ ‎S‎p‎e‎e‎c‎h‎ ‎L‎a‎w‎ ‎O‎n‎l‎y‎ ‎F‎r‎o‎m‎ ‎'‎R‎i‎g‎h‎t‎ ‎W‎i‎n‎g‎'‎
8‎7‎9‎
W‎a‎l‎s‎h‎:‎ ‎‘‎I‎ ‎W‎a‎s‎ ‎a‎ ‎D‎i‎v‎i‎s‎i‎v‎e‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎A‎s‎s‎h‎-‎l‎e‎’‎ ‎T‎r‎u‎m‎p‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎
W‎a‎l‎s‎h‎:‎ ‎'‎I‎ ‎W‎a‎s‎ ‎a‎ ‎D‎i‎v‎i‎s‎i‎v‎e‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎A‎s‎s‎h‎o‎l‎e‎'‎ ‎T‎r‎u‎m‎p‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎
6‎9‎
T‎r‎u‎m‎p‎ ‎P‎o‎s‎t‎s‎ ‎$‎1‎7‎5‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎B‎o‎n‎d‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎f‎r‎o‎m‎ ‎S‎e‎i‎z‎i‎n‎g‎ ‎A‎s‎s‎e‎t‎s‎
T‎r‎u‎m‎p‎ ‎P‎o‎s‎t‎s‎ ‎$‎1‎7‎5‎M‎ ‎B‎o‎n‎d‎ ‎t‎o‎ ‎P‎r‎e‎v‎e‎n‎t‎ ‎N‎Y‎ ‎f‎r‎o‎m‎ ‎S‎e‎i‎z‎i‎n‎g‎ ‎A‎s‎s‎e‎t‎s‎
4‎,‎6‎4‎4‎
B‎l‎u‎f‎f‎ ‎C‎a‎l‎l‎e‎d‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎ ‎W‎o‎n‎’‎t‎ ‎C‎h‎a‎r‎g‎e‎ ‎J‎.‎K‎.‎ ‎R‎o‎w‎l‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎T‎r‎a‎n‎s‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎,‎ ‎A‎u‎t‎h‎o‎r‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎S‎
B‎l‎u‎f‎f‎ ‎C‎a‎l‎l‎e‎d‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎ ‎W‎o‎n‎'‎t‎ ‎C‎h‎a‎r‎g‎e‎ ‎J‎.‎K‎.‎ ‎R‎o‎w‎l‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎T‎r‎a‎n‎s‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎
3‎,‎0‎3‎4‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎‘‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎’‎ ‎T‎h‎e‎y‎ ‎A‎r‎e‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎m‎a‎g‎e‎ ‎o‎f‎ ‎G‎o‎d‎’‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎‘‎T‎r‎a‎n‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎'‎ ‎T‎h‎e‎y‎ ‎A‎r‎e‎ ‎‘‎M‎a‎d‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎m‎a‎g‎e‎ ‎o‎f‎ ‎G‎o‎d‎'‎
3‎,‎9‎5‎4‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎f‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎T‎h‎r‎o‎w‎ ‎O‎u‎t‎ ‎T‎a‎x‎ ‎C‎a‎s‎e‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎D‎e‎f‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎T‎h‎r‎o‎w‎ ‎O‎u‎t‎ ‎T‎a‎x‎ ‎C‎a‎s‎e‎

S‎t‎.‎ ‎L‎o‎u‎i‎s‎:‎ ‎W‎h‎i‎t‎e‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎K‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎P‎a‎c‎k‎ ‎o‎f‎ ‎A‎n‎g‎r‎y‎ ‎N‎e‎g‎r‎o‎e‎s‎ ‎D‎u‎r‎i‎n‎g‎ ‎R‎o‎b‎b‎e‎r‎y‎.‎

B‎l‎a‎c‎k‎s‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎t‎o‎ ‎d‎o‎ ‎t‎h‎i‎s‎ ‎i‎f‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎d‎e‎p‎r‎i‎v‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎f‎r‎i‎e‎d‎ ‎c‎h‎i‎c‎k‎e‎n‎.‎


N‎i‎g‎g‎a‎r‎d‎ ‎P‎u‎n‎c‎h‎e‎s‎ ‎R‎a‎n‎d‎o‎m‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎C‎i‎n‎c‎i‎n‎n‎a‎t‎i‎.‎


C‎o‎b‎b‎ ‎C‎o‎u‎n‎t‎y‎ ‎C‎o‎o‎n‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎.‎


A‎l‎b‎u‎q‎u‎e‎r‎q‎u‎e‎ ‎M‎a‎n‎d‎i‎n‎g‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎a‎ ‎S‎e‎c‎o‎n‎d‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎C‎o‎m‎m‎i‎t‎t‎i‎n‎g‎ ‎R‎a‎p‎e‎ ‎A‎g‎a‎i‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎4‎8‎°‎
2‎%‎
N‎N‎W‎ ‎1‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎ ‎|‎ ‎D‎a‎y‎
7‎8‎°‎
2‎%‎
N‎N‎W‎
1‎8‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎7‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
4‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
9‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎7‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎4‎9‎ ‎p‎m‎
T‎u‎e‎ ‎0‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎8‎°‎
1‎%‎
N‎N‎W‎
1‎6‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎0‎7‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎1‎0‎ ‎p‎m‎
W‎e‎d‎ ‎0‎3‎
S‎u‎n‎n‎y‎
8‎0‎°‎
/‎4‎9‎°‎
1‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎3‎°‎
1‎%‎
S‎W‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎3‎°‎
/‎6‎0‎°‎
2‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎N‎E‎D‎M‎.‎ ‎🐱🔥

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎
R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎ ‎i‎s‎ ‎A‎d‎u‎l‎t‎ ‎S‎w‎i‎m‎'‎s‎ ‎b‎a‎r‎e‎l‎y‎ ‎d‎i‎s‎g‎u‎i‎s‎e‎d‎ ‎r‎i‎p‎o‎f‎f‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎D‎a‎d‎—‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎i‎t‎s‎e‎l‎f‎ ‎a‎ ‎r‎i‎p‎o‎f‎f‎ ‎o‎f‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎,‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎ ‎w‎i‎t‎h‎ ‎i‎d‎i‎o‎t‎i‎c‎ ‎p‎o‎p‎-‎c‎u‎l‎t‎u‎r‎e‎ ‎r‎e‎f‎e‎r‎e‎n‎c‎e‎s‎,‎ ‎f‎o‎r‎c‎e‎d‎ ‎m‎e‎m‎e‎s‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎ ‎s‎e‎x‎ ‎j‎o‎k‎e‎s‎ ‎f‎o‎r‎ ‎c‎h‎e‎a‎p‎ ‎l‎a‎u‎g‎h‎s‎.‎ ‎W‎h‎i‎l‎e‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎ ‎s‎t‎o‎l‎e‎ ‎i‎t‎s‎ ‎m‎a‎i‎n‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎T‎h‎e‎ ‎S‎i‎m‎p‎s‎o‎n‎s‎ ‎a‎n‎d‎ ‎m‎a‎d‎e‎ ‎t‎h‎e‎m‎ ‎e‎v‎e‎n‎ ‎m‎o‎r‎e‎ ‎t‎i‎r‎i‎n‎g‎ ‎a‎n‎d‎ ‎b‎o‎r‎i‎n‎g‎ ‎t‎o‎ ‎w‎a‎t‎c‎h‎,‎ ‎R‎i‎c‎k‎ ‎a‎n‎d‎ ‎M‎o‎r‎t‎y‎ ‎s‎t‎o‎l‎e‎ ‎i‎t‎s‎ ‎m‎a‎i‎n‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎""‎B‎a‎c‎k‎ ‎t‎o‎ ‎t‎h‎e‎ ‎F‎u‎t‎u‎r‎e‎""‎,‎ ‎b‎u‎t‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎l‎e‎a‎r‎n‎i‎n‎g‎ ‎h‎o‎w‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎i‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎l‎o‎v‎a‎b‎l‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎w‎h‎o‎ ‎c‎a‎n‎ ‎g‎o‎ ‎f‎a‎n‎t‎a‎s‎t‎i‎c‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎s‎,‎ ‎t‎h‎i‎s‎ ‎s‎h‎o‎w‎ ‎p‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎d‎y‎s‎f‎u‎n‎c‎t‎i‎o‎n‎a‎l‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎y‎e‎l‎l‎i‎n‎g‎ ‎a‎n‎d‎ ‎s‎c‎r‎e‎a‎m‎i‎n‎g‎ ‎a‎t‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎f‎o‎r‎ ‎h‎a‎l‎f‎ ‎a‎n‎ ‎h‎o‎u‎r‎,‎ ‎f‎e‎i‎g‎n‎i‎n‎g‎ ‎c‎l‎e‎v‎e‎r‎ ‎a‎n‎d‎ ‎r‎e‎a‎l‎s‎i‎t‎i‎c‎ ‎r‎e‎l‎a‎t‎i‎o‎n‎s‎h‎i‎p‎s‎.‎

T‎h‎e‎ ‎s‎h‎o‎w‎ ‎p‎a‎n‎d‎e‎r‎s‎ ‎t‎o‎ ‎a‎ ‎f‎a‎n‎b‎a‎s‎e‎ ‎o‎f‎ ‎m‎e‎n‎t‎a‎l‎l‎y‎-‎c‎h‎a‎l‎l‎e‎n‎g‎e‎d‎ ‎p‎s‎e‎u‎d‎o‎-‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎s‎ ‎w‎h‎o‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎ ‎i‎s‎ ‎e‎x‎t‎r‎e‎m‎e‎l‎y‎ ‎d‎e‎e‎p‎ ‎a‎n‎d‎ ‎h‎i‎g‎h‎l‎y‎ ‎s‎c‎i‎e‎n‎t‎i‎f‎i‎c‎ ‎i‎n‎ ‎i‎t‎s‎ ‎d‎e‎p‎i‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎c‎o‎n‎v‎o‎l‎u‎t‎e‎d‎ ‎s‎c‎i‎-‎f‎i‎ ‎g‎a‎r‎b‎a‎g‎e‎ ‎a‎n‎d‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎ ‎p‎o‎o‎p‎ ‎j‎o‎k‎e‎s‎.‎ ‎T‎h‎e‎ ‎s‎h‎o‎w‎ ‎h‎a‎s‎ ‎a‎l‎s‎o‎ ‎d‎o‎n‎e‎ ‎a‎ ‎s‎h‎o‎u‎t‎-‎o‎u‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎l‎e‎t‎h‎o‎r‎a‎ ‎o‎f‎ ‎s‎i‎c‎k‎ ‎f‎u‎c‎k‎s‎ ‎w‎h‎o‎ ‎d‎r‎a‎w‎ ‎i‎n‎c‎e‎s‎t‎ ‎p‎o‎r‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎'‎s‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎p‎o‎s‎t‎ ‎i‎t‎ ‎o‎n‎ ‎D‎e‎v‎i‎a‎n‎T‎A‎R‎T‎.‎

A‎s‎ ‎w‎i‎t‎h‎ ‎a‎l‎l‎ ‎o‎t‎h‎e‎r‎ ‎A‎d‎u‎l‎t‎ ‎S‎w‎i‎m‎ ‎s‎h‎o‎w‎s‎,‎ ‎i‎t‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎c‎h‎i‎l‎d‎ ‎a‎p‎p‎e‎a‎l‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎t‎o‎ ‎t‎h‎a‎t‎ ‎o‎f‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎a‎i‎r‎i‎n‎g‎ ‎o‎n‎ ‎D‎i‎s‎n‎e‎y‎ ‎X‎D‎,‎ ‎a‎n‎i‎m‎a‎t‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎i‎s‎n‎'‎t‎ ‎m‎u‎c‎h‎ ‎a‎b‎o‎v‎e‎ ‎w‎h‎a‎t‎ ‎h‎i‎g‎h‎-‎s‎c‎h‎o‎o‎l‎,‎ ‎f‎i‎r‎s‎t‎ ‎y‎e‎a‎r‎ ‎a‎r‎t‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎c‎o‎u‎l‎d‎ ‎m‎a‎k‎e‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎ ‎d‎e‎v‎i‎a‎n‎t‎A‎R‎T‎ ‎d‎o‎o‎d‎l‎e‎b‎o‎o‎k‎s‎,‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎r‎e‎p‎e‎t‎i‎t‎i‎v‎e‎ ‎e‎p‎i‎s‎o‎d‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎e‎n‎t‎a‎i‎l‎ ‎m‎a‎n‎y‎ ‎s‎e‎x‎u‎a‎l‎,‎ ‎m‎u‎t‎a‎t‎e‎d‎,‎ ‎g‎o‎r‎e‎-‎f‎i‎l‎l‎e‎d‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎t‎o‎o‎ ‎f‎u‎c‎k‎e‎d‎ ‎u‎p‎ ‎t‎o‎ ‎a‎i‎r‎ ‎o‎n‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎b‎a‎s‎i‎c‎ ‎c‎a‎b‎l‎e‎ ‎c‎h‎a‎n‎n‎e‎l‎.‎

T‎h‎e‎ ‎s‎h‎o‎w‎ ‎s‎t‎a‎r‎s‎ ‎a‎ ‎b‎a‎t‎s‎h‎i‎t‎-‎i‎n‎s‎a‎n‎e‎,‎ ‎d‎r‎u‎n‎k‎e‎n‎ ‎g‎r‎a‎n‎d‎p‎a‎;‎ ‎n‎a‎m‎e‎d‎ ‎R‎i‎c‎k‎,‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎q‎u‎e‎e‎r‎ ‎1‎4‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎g‎r‎a‎n‎d‎s‎o‎n‎;‎ ‎M‎o‎r‎t‎y‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎r‎e‎t‎a‎r‎d‎e‎d‎ ‎c‎a‎t‎a‎s‎t‎r‎o‎p‎h‎i‎c‎ ‎a‎b‎o‎m‎i‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎h‎e‎y‎ ‎c‎r‎e‎a‎t‎e‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎t‎i‎m‎e‎-‎w‎a‎s‎t‎i‎n‎g‎ ‎j‎o‎u‎r‎n‎e‎y‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎j‎u‎s‎t‎ ‎a‎ ‎m‎e‎r‎c‎i‎f‎u‎l‎ ‎f‎i‎l‎m‎ ‎s‎h‎o‎r‎t‎ ‎b‎e‎f‎o‎r‎e‎ ‎C‎a‎r‎t‎o‎o‎n‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎f‎o‎u‎n‎d‎ ‎o‎u‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎d‎ ‎t‎o‎o‎ ‎m‎u‎c‎h‎ ‎F‎G‎T‎,‎ ‎s‎o‎ ‎t‎h‎e‎y‎ ‎t‎h‎r‎e‎w‎ ‎i‎t‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎a‎n‎d‎ ‎b‎o‎o‎m‎,‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎o‎u‎r‎ ‎n‎e‎w‎ ‎s‎h‎o‎w‎,‎ ‎2‎1‎-‎m‎i‎n‎u‎t‎e‎-‎l‎o‎n‎g‎ ‎e‎p‎i‎s‎o‎d‎e‎s‎ ‎o‎f‎ ‎p‎u‎r‎e‎ ‎s‎h‎i‎t‎f‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎s‎c‎i‎e‎n‎t‎i‎f‎i‎c‎ ‎f‎a‎i‎l‎u‎r‎e‎.‎

T‎h‎e‎r‎e‎'‎s‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎5‎ ‎s‎e‎a‎s‎o‎n‎s‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎s‎h‎i‎t‎;‎ ‎a‎n‎d‎ ‎c‎o‎u‎n‎t‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎f‎a‎n‎b‎a‎s‎e‎ ‎i‎s‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎l‎y‎ ‎s‎t‎u‎n‎t‎e‎d‎,‎ ‎c‎u‎n‎t‎i‎l‎i‎c‎i‎o‎u‎s‎ ‎a‎n‎d‎ ‎b‎e‎e‎f‎c‎u‎r‎t‎a‎i‎n‎y‎ ‎b‎e‎y‎o‎n‎d‎ ‎a‎l‎l‎ ‎b‎e‎l‎i‎e‎f‎.‎ ‎G‎o‎ ‎a‎n‎d‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎F‎B‎ ‎f‎a‎n‎ ‎g‎r‎o‎u‎p‎s‎ ‎f‎o‎r‎ ‎e‎x‎t‎r‎a‎-‎d‎e‎e‎p‎ ‎b‎l‎o‎o‎d‎ ‎s‎o‎d‎o‎m‎y‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎o‎r‎t‎a‎l‎ ‎g‎u‎n‎.‎ ‎A‎n‎d‎ ‎d‎o‎n‎'‎t‎ ‎f‎o‎r‎g‎e‎t‎ ‎t‎h‎e‎ ‎p‎i‎c‎k‎l‎e‎s‎.‎

(‎(‎ ‎I‎M‎ ‎P‎I‎C‎K‎L‎E‎ ‎R‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎C‎K‎!‎!‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎ ‎(‎M‎e‎r‎o‎p‎s‎ ‎a‎p‎i‎a‎s‎t‎e‎r‎)‎ ‎i‎s‎ ‎a‎ ‎b‎i‎r‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎M‎e‎r‎o‎p‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎b‎r‎e‎e‎d‎s‎ ‎i‎n‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎a‎n‎d‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎E‎u‎r‎o‎p‎e‎,‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎a‎n‎d‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎,‎ ‎a‎n‎d‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎A‎s‎i‎a‎.‎ ‎E‎x‎c‎e‎p‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎s‎o‎u‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎,‎ ‎t‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎i‎s‎ ‎s‎t‎r‎o‎n‎g‎l‎y‎ ‎m‎i‎g‎r‎a‎t‎o‎r‎y‎,‎ ‎w‎i‎n‎t‎e‎r‎i‎n‎g‎ ‎i‎n‎ ‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎T‎h‎i‎s‎ ‎s‎p‎e‎c‎i‎e‎s‎,‎ ‎l‎i‎k‎e‎ ‎o‎t‎h‎e‎r‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎s‎,‎ ‎i‎s‎ ‎a‎ ‎r‎i‎c‎h‎l‎y‎ ‎c‎o‎l‎o‎u‎r‎e‎d‎,‎ ‎s‎l‎e‎n‎d‎e‎r‎ ‎b‎i‎r‎d‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎b‎r‎o‎w‎n‎ ‎a‎n‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎u‎p‎p‎e‎r‎ ‎p‎a‎r‎t‎s‎,‎ ‎w‎h‎i‎l‎s‎t‎ ‎t‎h‎e‎ ‎w‎i‎n‎g‎s‎ ‎a‎r‎e‎ ‎g‎r‎e‎e‎n‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎e‎a‎k‎ ‎i‎s‎ ‎b‎l‎a‎c‎k‎.‎ ‎I‎t‎ ‎c‎a‎n‎ ‎r‎e‎a‎c‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎2‎7‎–‎2‎9‎ ‎c‎m‎ ‎(‎1‎0‎.‎6‎–‎1‎1‎.‎4‎ ‎i‎n‎)‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎w‎o‎ ‎e‎l‎o‎n‎g‎a‎t‎e‎d‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎t‎a‎i‎l‎ ‎f‎e‎a‎t‎h‎e‎r‎s‎.‎ ‎T‎h‎e‎ ‎m‎o‎s‎t‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎ ‎p‎r‎e‎y‎ ‎i‎t‎e‎m‎ ‎i‎n‎ ‎i‎t‎s‎ ‎d‎i‎e‎t‎ ‎i‎s‎ ‎H‎y‎m‎e‎n‎o‎p‎t‎e‎r‎a‎,‎ ‎m‎o‎s‎t‎l‎y‎ ‎t‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎h‎o‎n‎e‎y‎ ‎b‎e‎e‎.‎ ‎I‎t‎s‎ ‎i‎m‎p‎a‎c‎t‎ ‎o‎n‎ ‎b‎e‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎,‎ ‎i‎s‎ ‎s‎m‎a‎l‎l‎.‎ ‎I‎t‎ ‎e‎a‎t‎s‎ ‎l‎e‎s‎s‎ ‎t‎h‎a‎n‎ ‎1‎%‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎k‎e‎r‎ ‎b‎e‎e‎s‎ ‎i‎n‎ ‎a‎r‎e‎a‎s‎ ‎w‎h‎e‎r‎e‎ ‎i‎t‎ ‎l‎i‎v‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎g‎r‎o‎u‎p‎ ‎o‎f‎ ‎t‎h‎r‎e‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎b‎e‎e‎-‎e‎a‎t‎e‎r‎s‎,‎ ‎e‎a‎c‎h‎ ‎w‎i‎t‎h‎ ‎a‎ ‎d‎r‎a‎g‎o‎n‎f‎l‎y‎ ‎i‎n‎ ‎i‎t‎s‎ ‎m‎o‎u‎t‎h‎,‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎K‎o‎n‎d‎o‎r‎ ‎T‎a‎n‎y‎a‎,‎ ‎K‎e‎c‎s‎k‎e‎m‎é‎t‎,‎ ‎H‎u‎n‎g‎a‎r‎y‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎k‎e‎e‎p‎ ‎t‎r‎a‎i‎n‎i‎n‎g‎ ‎m‎y‎ ‎n‎i‎g‎g‎e‎r‎ ‎P‎o‎k‎é‎m‎o‎n‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎h‎e‎ ‎w‎o‎n‎'‎t‎ ‎e‎v‎o‎l‎v‎e‎.‎ ‎W‎h‎y‎ ‎w‎o‎n‎'‎t‎ ‎m‎y‎ ‎n‎i‎g‎g‎e‎r‎ ‎P‎o‎k‎é‎m‎o‎n‎ ‎e‎v‎o‎l‎v‎e‎?‎"
dQSyus5H,duplicate_,naren_paste,Python,Tuesday 2nd of April 2024 10:11:44 PM CDT,"# Step 1: Change Data Type of Reviews Column
df['reviews'] = df['reviews'].astype(str)

# Step 2: Remove Duplicates
df = df.drop_duplicates()

# Step 3: Drop Specific Rows
value_to_drop = 'specific_value'
df = df[df['reviews'] != value_to_drop]
"
PKL6xq2W,Crown Pattern,CodingComputing,Python,Tuesday 2nd of April 2024 09:46:15 PM CDT,"# *Crown Pattern* solution by @CodingComputing

height = 7
width = 2*height-1
for row_num in range(1, height+1):
    if row_num <= height//2:  # The ""spikey"" part of the crown
        edge_stars_num = row_num
        center_stars_num = 2*row_num - 1
        total_stars_num = 2*edge_stars_num + center_stars_num
        interim_spaces_num = (width - total_stars_num) // 2
        print(
            '*'*edge_stars_num      +  "" ""*interim_spaces_num +
            '*'*center_stars_num    +
            "" ""*interim_spaces_num  +  '*'*edge_stars_num
        )
    else:  # The ""base"" part of the crown
        print('*' * width)

# Output:
# 
# *     *     *
# **   ***   **
# *** ***** ***
# *************
# *************
# *************
# *************
"
E88i5gem,funtun_v3,ironman2745,Lua,Tuesday 2nd of April 2024 09:34:36 PM CDT,"function goForward( gentle )
	if gentle == true then
		turtle.forward()
	else
		while turtle.forward() == false do
			turtle.dig()
			turtle.attack()
		end
	end
end

function goUp( gentle )
	if gentle == true then
		turtle.up()
	else
		while turtle.up() == false do
			turtle.digUp()
			turtle.attackUp()
		end
	end
end

function goDown( gentle )
	if gentle == true then
		turtle.down()
	else
		while turtle.down() == false do
			turtle.digDown()
			turtle.attackDown()
		end
	end
end

function goBack( gentle )
	if gentle == true then
		turtle.back()
	else
		turtle.turnRight()
		turtle.turnRight()
		goForward(false)
		turtle.turnLeft()
		turtle.turnLeft()
	end
end

function searchInventoryForItem( item )
	local ind = -1
	if item == nil then
		return ind
	end
	for i=1,16 do
		if turtle.getItemDetail(i) ~= nil then
			if turtle.getItemDetail(i).name == item then
				ind = i
				i = 16
			end
		end
	end
	return ind
end

function scanInventoryForTorches()
	local torchesPresent = false
	local previousSlot = turtle.getSelectedSlot()
	local torchesIndex = searchInventoryForItem(""minecraft:torch"")
	if torchesIndex > -1 then
		torchesPresent = true
		turtle.select(torchesIndex)
		turtle.transferTo(16)
		turtle.select(previousSlot)
	end
	return torchesPresent
end

function placeTorch()
	if turtle.getItemDetail(16) ~= nil then
		if turtle.getItemDetail(16).name == ""minecraft:torch"" then
			turtle.turnLeft()
			local previousSlot = turtle.getSelectedSlot()
			goForward()
			local cobblestoneIndex = searchInventoryForItem(""minecraft:cobblestone"")
			if cobblestoneIndex>-1 then
				turtle.select(cobblestoneIndex)
				turtle.place()
			end
			turtle.turnRight()
			turtle.turnRight()
			goForward()
			turtle.turnLeft()
			turtle.turnLeft()
			turtle.select(16)
			turtle.place()


			turtle.select(previousSlot)
			turtle.turnRight()
		end
	end
end

function level()
	turtle.turnRight()
	while turtle.detect() do
		turtle.dig()
		sleep(.5)
	end
	turtle.turnLeft()
	turtle.turnLeft()
	while turtle.detect() do
		turtle.dig()
		sleep(.5)
	end
	turtle.turnRight()
end

function slice( withTorch )
	goForward()
	goUp()
	level()
	if withTorch==true then
		placeTorch()
	end
	goDown()
	level()
	goDown()
	level()
	goUp()
end

function inventoryFull( howFar, torches )
	local lastSlot = 16
	if torches then
		lastSlot = 15
	end

	if turtle.getItemCount(lastSlot) > 0 then
		print(""Inventory full. Returning home to dump items."")
		turtle.turnRight()
		turtle.turnRight()
		for i=1,howFar do
			goForward()
		end
		goDown()
		for i=1,lastSlot do
			turtle.select(i)
			turtle.drop()
		end
		turtle.select(1)
		goUp()
		turtle.turnRight()
		turtle.turnRight()
		for i=1,howFar do
			goForward()
		end
		print(""Inventory dump complete. Resuming tunnel."")
	end
end

local arg = { ... }
distance = arg[1]
local tunnelDepth = 0
local torches = scanInventoryForTorches()
goUp()
for i=1,distance do
	if (i%5)==0 or i==1 then
		slice(torches)
	else
		slice(false)
	end
	tunnelDepth = tunnelDepth + 1
	print(""Depth ""+i+"" of ""+distance)
	inventoryFull(tunnelDepth, torches)
end
-- End of tunnel. Turn around.
turtle.turnRight()
turtle.turnRight()
-- Go back to start of tunnel
for i=1,distance do
	goForward()
end
-- drop remaining inventory [in chest?]
goDown()
for i=1,15 do
	turtle.select(i)
	turtle.drop()
end
turtle.select(1)
-- Home position. Ideally in the exact same position the user started the program
turtle.turnRight()
turtle.turnRight()
print(""Tunnel Complete!"")"
whY9AhLM,HA earthquake_alert script,xangin,YAML,Tuesday 2nd of April 2024 09:02:19 PM CDT,"earthquake_alert:
  alias: 地震通知腳本
  variables: 
    lv: ""{{ level[:1] | int }}""
  sequence:      
    #要做的事情放在此
    - alias: ""Line通知""
      service: notify.line_notify  #修改成自己的line notify名稱
      data:
        message: '警告!{{ lv }}級地震將在{{ seconds }}秒後抵達'
    	  
    - alias: ""打開智慧音箱""
      service: media_player.turn_on
      data: {}
      target:
        entity_id: 
          - media_player.living_room_nesthub #可同時寫多個音箱
          - media_player.guest_room_mini
    - alias: ""設定智慧音箱音量""
      service: media_player.volume_set
      data:
        entity_id:
        - media_player.guest_room_mini
        - media_player.living_room_nesthub #可同時寫多個音箱
        volume_level: '0.4' #0.1~1 1是最大聲
    - alias: ""智慧音箱播報""
      service: tts.edge_tts_say #修改成自己的tts服務
      data:
        entity_id:
          - media_player.living_room_nesthub #可同時寫多個音箱
          - media_player.guest_room_mini
        message: 警告!{{ lv }}級地震將在{{ seconds }}秒後抵達              "
5QcmuGBG,Mwa8ytAlslah.cs,UchihaT3Alo,C#,Tuesday 2nd of April 2024 08:48:32 PM CDT,"using System;
using System.Net.Http;
using Newtonsoft.Json;
//These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
namespace GameServer
{
    public static class Mwa8ytAlslah
    {
        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static uint SlaatAlfgrHour = 0;
        public static uint SlaatAlfgrMinute = 0;

        public static uint SlaatAlzhrHour = 0;
        public static uint SlaatAlzhrMinute = 0;

        public static uint SlaatAl3srHour = 0;
        public static uint SlaatAl3srMinute = 0;

        public static uint SlaatAlmghrbHour = 0;
        public static uint SlaatAlmghrbMinute = 0;

        public static uint SlaatAl3shaHour = 0;
        public static uint SlaatAl3shaMinute = 0;

        public static DateTime LastSlah;
        public static uint WaitingSlah;
        public static bool SlahNow = false;

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void LoadMwa8ytAlslah()
        {
            Console.Write(""Loading Mwa8ytAlslah....."");
            HttpClient httpClient = new HttpClient();
            string uri = ""http://api.aladhan.com/v1/timingsByCity?city=cairo&country=cairo&method=5"";
            HttpResponseMessage responseMessage = httpClient.GetAsync(uri).Result;
            string response = responseMessage.Content.ReadAsStringAsync().Result;
            dynamic resultObject = JsonConvert.DeserializeObject(response);
            #region Alfgr
            {
                string Alfgr = (string)resultObject.data.timings.Fajr;
                string[] Alfgrs = Alfgr.Split(':');
                SlaatAlfgrHour = Convert.ToByte(Alfgrs[0]);
                SlaatAlfgrMinute = Convert.ToByte(Alfgrs[1]);
            }
            #endregion
            #region Alzhr
            {
                string Alzhr = (string)resultObject.data.timings.Dhuhr;
                string[] Alzhrs = Alzhr.Split(':');
                SlaatAlzhrHour = Convert.ToByte(Alzhrs[0]);
                SlaatAlzhrMinute = Convert.ToByte(Alzhrs[1]);
            }
            #endregion
            #region Al3sr
            {
                string Al3sr = (string)resultObject.data.timings.Asr;
                string[] Al3srs = Al3sr.Split(':');
                SlaatAl3srHour = Convert.ToByte(Al3srs[0]);
                SlaatAl3srMinute = Convert.ToByte(Al3srs[1]);
            }
            #endregion
            #region Almghrb
            {
                string Almghrb = (string)resultObject.data.timings.Maghrib;
                string[] Almghrbs = Almghrb.Split(':');
                SlaatAlmghrbHour = Convert.ToByte(Almghrbs[0]);
                SlaatAlmghrbMinute = Convert.ToByte(Almghrbs[1]);
            }
            #endregion
            #region Al3sha
            {
                string Al3sha = (string)resultObject.data.timings.Isha;
                string[] Al3shas = Al3sha.Split(':');
                SlaatAl3shaHour = Convert.ToByte(Al3shas[0]);
                SlaatAl3shaMinute = Convert.ToByte(Al3shas[1]);
            }
            #endregion
            /*Console.WriteLine(""Alfgr: "" + SlaatAlfgrHour + "":"" + SlaatAlfgrMinute);
            Console.WriteLine(""Alzhr: "" + SlaatAlzhrHour + "":"" + SlaatAlzhrMinute);
            Console.WriteLine(""Al3sr: "" + SlaatAl3srHour + "":"" + SlaatAl3srMinute);
            Console.WriteLine(""Almghrb: "" + SlaatAlmghrbHour + "":"" + SlaatAlmghrbMinute);
            Console.WriteLine(""Al3sha: "" + SlaatAl3shaHour + "":"" + SlaatAl3shaMinute);*/
            System.Console.WriteLine(""     Complete!!"");
        }

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void Mwa8ytAlslahh(Client.GameClient client)
        {
            if (SlahNow)
            {
                if (!client.Player.OnAutoHunt)
                    client.Socket.Disconnect();
            }
        }

        //These Codes Were Written By Mohammed Elbooshy And Modified For Alex Source (Steam Source) by Mahmoud Mohammed (Uchiha T3Alo)
        public static void ShutDownLSlah()
        {
            #region Mwa8ytAlslah 
            if (DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlfgrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlfgrMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlzhrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlzhrMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAl3srHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAl3srMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlmghrbHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlmghrbMinute ||
               DateTime.Now.Hour == Mwa8ytAlslah.SlaatAl3shaHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAl3shaMinute)
            {
                if (!SlahNow)
                {
                    if (DateTime.Now.DayOfWeek == DayOfWeek.Friday && DateTime.Now.Hour == Mwa8ytAlslah.SlaatAlzhrHour && DateTime.Now.Minute == Mwa8ytAlslah.SlaatAlzhrMinute)
                        WaitingSlah = 30;
                    else
                        WaitingSlah = 15;
                    LastSlah = DateTime.Now;
                    SlahNow = true;
                }
            }
            if (DateTime.Now > LastSlah.AddMinutes(WaitingSlah))
            {
                if (SlahNow) SlahNow = false;
            }
            if (DateTime.Now.Hour == 01 && DateTime.Now.Minute == 00 && DateTime.Now.Second == 00)
                LoadMwa8ytAlslah();
            #endregion
        }

    }
}"
2H2S2rfn,VBA CLE & RIP CCP,bousaid,VB.NET,Tuesday 2nd of April 2024 07:43:07 PM CDT,"' =================================================================================================
'  Cle CCP  | By BOUSSAID
' =================================================================================================
Private Function CCP(x As String)

Dim TCCP1(1 To 15) As Integer
Dim IND As Integer
J = 0
For IND = 1 To Len(x)
    TCCP1(IND) = Mid(x, IND, 1)
    Next
    For IND = 4 To 4 + Len(x) - 1
        ac = ac + (TCCP1(Len(x) - J) * IND)
        J = J + 1
        Next
        ac = Right(ac, 2)
        'tcptxt = ac & "" Clé "" & tcptxt
        CCP = ac
End Function
' =================================================================================================
'  CLE & RIP CCP  | Usage: =Cle_CCP_RIP(1;A1) & =Cle_CCP_RIP(2;A1)
' =================================================================================================
Public Function Paie_Cle_CCP_RIP(Type_Cle As Integer, Compte_CCP As String) As String

Dim nResulta As Integer

Select Case Type_Cle
    '1 = Cle CCP
    Case 1
       nResulta = CLng(CCP(Compte_CCP))
       
    '2 = Cle Rip
    Case 2
        nResulta = (97 - ((((CLng(Compte_CCP) Mod 97) * (3 Mod 97)) + 85) Mod 97))
    Case Else
        nResulta = 0
End Select

'ADD ""0"" Like 01, 02, 03 ... etc
Paie_Cle_CCP_RIP = CStr(Format(nResulta, ""00"")) 'CStr(nResulta)

End Function"
P9QwbgA7,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:18:20 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 1101,
    ""162.142.125.226"": 3,
    ""58.218.204.183"": 9,
    ""185.73.125.86"": 3,
    ""92.51.2.11"": 3,
    ""144.16.111.79"": 3,
    ""141.98.81.79"": 3,
    ""87.251.75.145"": 9,
    ""205.210.31.210"": 9,
    ""84.201.2.2"": 6,
    ""194.165.16.76"": 6,
    ""212.70.149.142"": 12,
    ""45.227.254.49"": 6,
    ""185.170.144.3"": 6,
    ""23.239.5.33"": 12,
    ""50.116.45.78"": 3,
    ""167.94.146.59"": 3,
    ""112.4.139.162"": 3,
    ""205.210.31.71"": 9,
    ""27.71.25.209"": 3,
    ""103.245.236.103"": 6,
    ""147.78.47.111"": 9,
    ""167.94.145.60"": 3,
    ""185.81.68.38"": 9,
    ""180.93.172.173"": 3,
    ""167.94.138.35"": 3,
    ""185.196.220.41"": 9,
    ""147.182.129.2"": 12,
    ""194.165.16.73"": 6,
    ""193.142.146.227"": 9,
    ""68.183.126.120"": 3,
    ""198.235.24.2"": 9,
    ""198.135.49.131"": 3,
    ""194.165.16.72"": 6,
    ""185.255.92.106"": 3,
    ""212.70.149.146"": 3,
    ""87.251.75.64"": 3,
    ""62.204.41.222"": 6,
    ""192.3.101.25"": 9,
    ""103.232.53.123"": 3,
    ""198.235.24.218"": 9,
    ""71.6.134.232"": 30
  },
  ""asn"": {
    ""AS14061"": 1116,
    ""AS398324"": 6,
    ""AS4134"": 9,
    ""AS208091"": 15,
    ""AS209588"": 15,
    ""AS2697"": 3,
    ""AS396982"": 36,
    ""AS44066"": 6,
    ""AS48721"": 18,
    ""AS204428"": 15,
    ""AS267784"": 6,
    ""AS197414"": 6,
    ""AS63949"": 15,
    ""AS398705"": 6,
    ""AS56046"": 3,
    ""AS38731"": 3,
    ""AS150867"": 6,
    ""AS57523"": 9,
    ""AS135944"": 3,
    ""AS208046"": 18,
    ""AS396073"": 3,
    ""AS209604"": 3,
    ""AS59425"": 6,
    ""AS36352"": 9,
    ""AS63737"": 3,
    ""AS10439"": 30
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 1116,
    ""Censys, Inc."": 12,
    ""Chinanet"": 9,
    ""Xhost Internet Solutions LP"": 21,
    ""Flyservers S.A."": 39,
    ""ERNET India"": 3,
    ""Google LLC"": 36,
    ""www.accelerated.de"": 6,
    ""SS-Net"": 15,
    ""Akamai Technologies, Inc."": 15,
    ""China Mobile Communications Corporation"": 3,
    ""VIETTEL"": 3,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""SPT"": 3,
    ""ColocationX Ltd."": 18,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""ibrahim tufek"": 3,
    ""Horizon LLC"": 6,
    ""HostPapa"": 9,
    ""VIETSERVER"": 3,
    ""CariNet, Inc."": 30
  },
  ""org"": {
    ""DigitalOcean, LLC"": 1116,
    ""Censys Inc"": 3,
    ""Chinanet JS"": 9,
    ""Xhostis"": 9,
    ""Alviva Holding Limited"": 3,
    ""ERNET India"": 3,
    ""Flyservers S.A"": 30,
    ""Xhost Internet Solutions"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""diva-e Datacenters GmbH"": 6,
    ""4Media Ltd"": 15,
    ""UAB Host Baltic"": 6,
    ""Linode"": 15,
    ""Censys, Inc."": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Viettel Group"": 3,
    ""LP Technology Electronic Commerce Company Limited"": 6,
    ""Starcrecium Limited"": 9,
    ""Saigon Postel Corporation"": 3,
    ""Censys, Inc"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""Rabisu Game Server Hosting Providers"": 3,
    ""Horizon LLC"": 6,
    ""Unknown"": 9,
    ""VietServer Services technology company limited"": 3,
    ""CariNet, Inc."": 30
  },
  ""regionName"": {
    ""South West"": 1101,
    ""Michigan"": 6,
    ""Jiangsu"": 12,
    ""North Holland"": 39,
    ""Moscow"": 18,
    ""National Capital Territory of Delhi"": 3,
    ""Drenthe"": 3,
    ""California"": 48,
    ""Hesse"": 12,
    ""Kaunas"": 18,
    ""Sliven"": 15,
    ""Vilnius"": 6,
    ""Georgia"": 3,
    ""Hanoi"": 6,
    ""Ho Chi Minh"": 9,
    ""Virginia"": 9,
    ""New Jersey"": 15,
    ""Texas"": 3,
    ""Istanbul"": 3,
    ""New York"": 9,
    ""Nevada"": 30
  },
  ""country"": {
    ""Singapore"": 1101,
    ""United States"": 123,
    ""China"": 12,
    ""The Netherlands"": 42,
    ""Russia"": 18,
    ""India"": 3,
    ""Germany"": 12,
    ""Lithuania"": 24,
    ""Bulgaria"": 15,
    ""Vietnam"": 15,
    ""T\u00fcrkiye"": 3
  },
  ""account"": {
    ""hello"": 1131,
    ""(empty)"": 21,
    ""Administr"": 45,
    ""ZQsepOsmJ"": 3,
    ""jbVtpi"": 3,
    ""WrOKHt"": 3,
    ""Test"": 39,
    ""vlyhbohd"": 12,
    ""beio"": 6,
    ""HaGmqQZOu"": 3,
    ""NllbRn"": 3,
    ""IaCjHH"": 3,
    ""Domain"": 36,
    ""zm4klv3d"": 12,
    ""uKgkoiOmB"": 3,
    ""bOEiJD"": 3,
    ""fIWGHy"": 3,
    ""FAECwLXcW"": 3,
    ""nxxQSP"": 3,
    ""qKSIWr"": 3,
    ""eltons"": 15,
    ""administr"": 15
  },
  ""keyboard"": {
    ""Unknown"": 1368
  },
  ""client_build"": {
    ""Unknown"": 1368
  },
  ""client_name"": {
    ""Unknown"": 1368
  },
  ""ip_type"": {
    ""hosting & proxy"": 1101,
    ""Unknown"": 126,
    ""hosting"": 114,
    ""mobile"": 15,
    ""mobile & hosting"": 3,
    ""proxy"": 9
  }
}"
zYy0k9Pn,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:16:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 734,
    ""162.142.125.226"": 2,
    ""58.218.204.183"": 6,
    ""185.73.125.86"": 2,
    ""92.51.2.11"": 2,
    ""144.16.111.79"": 2,
    ""141.98.81.79"": 2,
    ""87.251.75.145"": 6,
    ""205.210.31.210"": 6,
    ""84.201.2.2"": 4,
    ""194.165.16.76"": 4,
    ""212.70.149.142"": 8,
    ""45.227.254.49"": 4,
    ""185.170.144.3"": 4,
    ""23.239.5.33"": 8,
    ""50.116.45.78"": 2,
    ""167.94.146.59"": 2,
    ""112.4.139.162"": 2,
    ""205.210.31.71"": 6,
    ""27.71.25.209"": 2,
    ""103.245.236.103"": 4,
    ""147.78.47.111"": 6,
    ""167.94.145.60"": 2,
    ""185.81.68.38"": 6,
    ""180.93.172.173"": 2,
    ""167.94.138.35"": 2,
    ""185.196.220.41"": 6,
    ""147.182.129.2"": 8,
    ""194.165.16.73"": 4,
    ""193.142.146.227"": 6,
    ""68.183.126.120"": 2,
    ""198.235.24.2"": 6,
    ""198.135.49.131"": 2,
    ""194.165.16.72"": 4,
    ""185.255.92.106"": 2,
    ""212.70.149.146"": 2,
    ""87.251.75.64"": 2,
    ""62.204.41.222"": 4,
    ""192.3.101.25"": 6,
    ""103.232.53.123"": 2,
    ""198.235.24.218"": 6,
    ""71.6.134.232"": 20
  },
  ""asn"": {
    ""AS14061"": 744,
    ""AS398324"": 4,
    ""AS4134"": 6,
    ""AS208091"": 10,
    ""AS209588"": 10,
    ""AS2697"": 2,
    ""AS396982"": 24,
    ""AS44066"": 4,
    ""AS48721"": 12,
    ""AS204428"": 10,
    ""AS267784"": 4,
    ""AS197414"": 4,
    ""AS63949"": 10,
    ""AS398705"": 4,
    ""AS56046"": 2,
    ""AS38731"": 2,
    ""AS150867"": 4,
    ""AS57523"": 6,
    ""AS135944"": 2,
    ""AS208046"": 12,
    ""AS396073"": 2,
    ""AS209604"": 2,
    ""AS59425"": 4,
    ""AS36352"": 6,
    ""AS63737"": 2,
    ""AS10439"": 20
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 744,
    ""Censys, Inc."": 8,
    ""Chinanet"": 6,
    ""Xhost Internet Solutions LP"": 14,
    ""Flyservers S.A."": 26,
    ""ERNET India"": 2,
    ""Google LLC"": 24,
    ""www.accelerated.de"": 4,
    ""SS-Net"": 10,
    ""Akamai Technologies, Inc."": 10,
    ""China Mobile Communications Corporation"": 2,
    ""VIETTEL"": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""SPT"": 2,
    ""ColocationX Ltd."": 12,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""ibrahim tufek"": 2,
    ""Horizon LLC"": 4,
    ""HostPapa"": 6,
    ""VIETSERVER"": 2,
    ""CariNet, Inc."": 20
  },
  ""org"": {
    ""DigitalOcean, LLC"": 744,
    ""Censys Inc"": 2,
    ""Chinanet JS"": 6,
    ""Xhostis"": 6,
    ""Alviva Holding Limited"": 2,
    ""ERNET India"": 2,
    ""Flyservers S.A"": 20,
    ""Xhost Internet Solutions"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""diva-e Datacenters GmbH"": 4,
    ""4Media Ltd"": 10,
    ""UAB Host Baltic"": 4,
    ""Linode"": 10,
    ""Censys, Inc."": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Viettel Group"": 2,
    ""LP Technology Electronic Commerce Company Limited"": 4,
    ""Starcrecium Limited"": 6,
    ""Saigon Postel Corporation"": 2,
    ""Censys, Inc"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""Rabisu Game Server Hosting Providers"": 2,
    ""Horizon LLC"": 4,
    ""Unknown"": 6,
    ""VietServer Services technology company limited"": 2,
    ""CariNet, Inc."": 20
  },
  ""regionName"": {
    ""South West"": 734,
    ""Michigan"": 4,
    ""Jiangsu"": 8,
    ""North Holland"": 26,
    ""Moscow"": 12,
    ""National Capital Territory of Delhi"": 2,
    ""Drenthe"": 2,
    ""California"": 32,
    ""Hesse"": 8,
    ""Kaunas"": 12,
    ""Sliven"": 10,
    ""Vilnius"": 4,
    ""Georgia"": 2,
    ""Hanoi"": 4,
    ""Ho Chi Minh"": 6,
    ""Virginia"": 6,
    ""New Jersey"": 10,
    ""Texas"": 2,
    ""Istanbul"": 2,
    ""New York"": 6,
    ""Nevada"": 20
  },
  ""country"": {
    ""Singapore"": 734,
    ""United States"": 82,
    ""China"": 8,
    ""The Netherlands"": 28,
    ""Russia"": 12,
    ""India"": 2,
    ""Germany"": 8,
    ""Lithuania"": 16,
    ""Bulgaria"": 10,
    ""Vietnam"": 10,
    ""T\u00fcrkiye"": 2
  },
  ""account"": {
    ""hello"": 754,
    ""(empty)"": 14,
    ""Administr"": 30,
    ""ZQsepOsmJ"": 2,
    ""jbVtpi"": 2,
    ""WrOKHt"": 2,
    ""Test"": 26,
    ""vlyhbohd"": 8,
    ""beio"": 4,
    ""HaGmqQZOu"": 2,
    ""NllbRn"": 2,
    ""IaCjHH"": 2,
    ""Domain"": 24,
    ""zm4klv3d"": 8,
    ""uKgkoiOmB"": 2,
    ""bOEiJD"": 2,
    ""fIWGHy"": 2,
    ""FAECwLXcW"": 2,
    ""nxxQSP"": 2,
    ""qKSIWr"": 2,
    ""eltons"": 10,
    ""administr"": 10
  },
  ""keyboard"": {
    ""Unknown"": 912
  },
  ""client_build"": {
    ""Unknown"": 912
  },
  ""client_name"": {
    ""Unknown"": 912
  },
  ""ip_type"": {
    ""hosting & proxy"": 734,
    ""Unknown"": 84,
    ""hosting"": 76,
    ""mobile"": 10,
    ""mobile & hosting"": 2,
    ""proxy"": 6
  }
}"
kNd7NRMq,2024-04-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 367,
    ""162.142.125.226"": 1,
    ""58.218.204.183"": 3,
    ""185.73.125.86"": 1,
    ""92.51.2.11"": 1,
    ""144.16.111.79"": 1,
    ""141.98.81.79"": 1,
    ""87.251.75.145"": 3,
    ""205.210.31.210"": 3,
    ""84.201.2.2"": 2,
    ""194.165.16.76"": 2,
    ""212.70.149.142"": 4,
    ""45.227.254.49"": 2,
    ""185.170.144.3"": 2,
    ""23.239.5.33"": 4,
    ""50.116.45.78"": 1,
    ""167.94.146.59"": 1,
    ""112.4.139.162"": 1,
    ""205.210.31.71"": 3,
    ""27.71.25.209"": 1,
    ""103.245.236.103"": 2,
    ""147.78.47.111"": 3,
    ""167.94.145.60"": 1,
    ""185.81.68.38"": 3,
    ""180.93.172.173"": 1,
    ""167.94.138.35"": 1,
    ""185.196.220.41"": 3,
    ""147.182.129.2"": 4,
    ""194.165.16.73"": 2,
    ""193.142.146.227"": 3,
    ""68.183.126.120"": 1,
    ""198.235.24.2"": 3,
    ""198.135.49.131"": 1,
    ""194.165.16.72"": 2,
    ""185.255.92.106"": 1,
    ""212.70.149.146"": 1,
    ""87.251.75.64"": 1,
    ""62.204.41.222"": 2,
    ""192.3.101.25"": 3,
    ""103.232.53.123"": 1,
    ""198.235.24.218"": 3,
    ""71.6.134.232"": 10
  },
  ""asn"": {
    ""AS14061"": 372,
    ""AS398324"": 2,
    ""AS4134"": 3,
    ""AS208091"": 5,
    ""AS209588"": 5,
    ""AS2697"": 1,
    ""AS396982"": 12,
    ""AS44066"": 2,
    ""AS48721"": 6,
    ""AS204428"": 5,
    ""AS267784"": 2,
    ""AS197414"": 2,
    ""AS63949"": 5,
    ""AS398705"": 2,
    ""AS56046"": 1,
    ""AS38731"": 1,
    ""AS150867"": 2,
    ""AS57523"": 3,
    ""AS135944"": 1,
    ""AS208046"": 6,
    ""AS396073"": 1,
    ""AS209604"": 1,
    ""AS59425"": 2,
    ""AS36352"": 3,
    ""AS63737"": 1,
    ""AS10439"": 10
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 372,
    ""Censys, Inc."": 4,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 7,
    ""Flyservers S.A."": 13,
    ""ERNET India"": 1,
    ""Google LLC"": 12,
    ""www.accelerated.de"": 2,
    ""SS-Net"": 5,
    ""Akamai Technologies, Inc."": 5,
    ""China Mobile Communications Corporation"": 1,
    ""VIETTEL"": 1,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""SPT"": 1,
    ""ColocationX Ltd."": 6,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""ibrahim tufek"": 1,
    ""Horizon LLC"": 2,
    ""HostPapa"": 3,
    ""VIETSERVER"": 1,
    ""CariNet, Inc."": 10
  },
  ""org"": {
    ""DigitalOcean, LLC"": 372,
    ""Censys Inc"": 1,
    ""Chinanet JS"": 3,
    ""Xhostis"": 3,
    ""Alviva Holding Limited"": 1,
    ""ERNET India"": 1,
    ""Flyservers S.A"": 10,
    ""Xhost Internet Solutions"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""diva-e Datacenters GmbH"": 2,
    ""4Media Ltd"": 5,
    ""UAB Host Baltic"": 2,
    ""Linode"": 5,
    ""Censys, Inc."": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Viettel Group"": 1,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Starcrecium Limited"": 3,
    ""Saigon Postel Corporation"": 1,
    ""Censys, Inc"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""Rabisu Game Server Hosting Providers"": 1,
    ""Horizon LLC"": 2,
    ""Unknown"": 3,
    ""VietServer Services technology company limited"": 1,
    ""CariNet, Inc."": 10
  },
  ""regionName"": {
    ""South West"": 367,
    ""Michigan"": 2,
    ""Jiangsu"": 4,
    ""North Holland"": 13,
    ""Moscow"": 6,
    ""National Capital Territory of Delhi"": 1,
    ""Drenthe"": 1,
    ""California"": 16,
    ""Hesse"": 4,
    ""Kaunas"": 6,
    ""Sliven"": 5,
    ""Vilnius"": 2,
    ""Georgia"": 1,
    ""Hanoi"": 2,
    ""Ho Chi Minh"": 3,
    ""Virginia"": 3,
    ""New Jersey"": 5,
    ""Texas"": 1,
    ""Istanbul"": 1,
    ""New York"": 3,
    ""Nevada"": 10
  },
  ""country"": {
    ""Singapore"": 367,
    ""United States"": 41,
    ""China"": 4,
    ""The Netherlands"": 14,
    ""Russia"": 6,
    ""India"": 1,
    ""Germany"": 4,
    ""Lithuania"": 8,
    ""Bulgaria"": 5,
    ""Vietnam"": 5,
    ""T\u00fcrkiye"": 1
  },
  ""account"": {
    ""hello"": 377,
    ""(empty)"": 7,
    ""Administr"": 15,
    ""ZQsepOsmJ"": 1,
    ""jbVtpi"": 1,
    ""WrOKHt"": 1,
    ""Test"": 13,
    ""vlyhbohd"": 4,
    ""beio"": 2,
    ""HaGmqQZOu"": 1,
    ""NllbRn"": 1,
    ""IaCjHH"": 1,
    ""Domain"": 12,
    ""zm4klv3d"": 4,
    ""uKgkoiOmB"": 1,
    ""bOEiJD"": 1,
    ""fIWGHy"": 1,
    ""FAECwLXcW"": 1,
    ""nxxQSP"": 1,
    ""qKSIWr"": 1,
    ""eltons"": 5,
    ""administr"": 5
  },
  ""keyboard"": {
    ""Unknown"": 456
  },
  ""client_build"": {
    ""Unknown"": 456
  },
  ""client_name"": {
    ""Unknown"": 456
  },
  ""ip_type"": {
    ""hosting & proxy"": 367,
    ""Unknown"": 42,
    ""hosting"": 38,
    ""mobile"": 5,
    ""mobile & hosting"": 1,
    ""proxy"": 3
  }
}"
sJ2bkEcE,Идиома Pimpl,prizrak567890,C++,Tuesday 2nd of April 2024 06:56:30 PM CDT,"//bimap.cpp


#include ""bimap.h""
#include ""unordered_map""
#include <deque>

struct BiMap::Impl {

    bool Add(std::string_view& key, std::string_view& value) {
        if (keyToValue_.count(key) || valueToKey_.count(value)) {
            return false;
        }

        keyToValue_[key] = value;
        valueToKey_[value] = key;
        insertionOrder_.emplace_back(std::move(key));
        insertionOrder_.emplace_back(std::move(value));


        return true;
    }

    std::optional<std::string_view> FindValue(std::string_view key) const noexcept {
        auto it = keyToValue_.find(key);
        if (it != keyToValue_.end()) {
            return it->second;
        }
        else {
            return std::nullopt;
        }
    }

    std::optional<std::string_view> FindKey(std::string_view value) const noexcept {
        auto it = valueToKey_.find(value);
        if (it != valueToKey_.end()) {
            return it->second;
        }
        else {
            return std::nullopt;
        }
    }
private:

    std::unordered_map<std::string_view, std::string_view>  keyToValue_;
    std::unordered_map<std::string_view, std::string_view>  valueToKey_;
    //std::deque<std::pair<std::string_view, std::string_view>> insertionOrder_;
    std::deque<std::string> insertionOrder_;
};

BiMap::BiMap() : impl_(std::make_unique<Impl>()) {}


BiMap::BiMap(const BiMap& other) : impl_(other.impl_ ? std::make_unique<Impl>(*other.impl_) : nullptr) {}

BiMap::BiMap(BiMap&& other) noexcept = default;

BiMap& BiMap::operator=(const BiMap& other) {
    if (this != &other) {
        impl_ = std::make_unique<Impl>(*other.impl_);
    }
    return *this;
}

BiMap& BiMap::operator=(BiMap&& other) noexcept = default;
BiMap::~BiMap() = default;

bool BiMap::Add(std::string_view key, std::string_view value) {
    return impl_->Add(key, value);
}

std::optional<std::string_view> BiMap::FindValue(std::string_view key) const noexcept {
    return impl_->FindValue(key);
}

std::optional<std::string_view> BiMap::FindKey(std::string_view value) const noexcept {
    return impl_->FindKey(value);
}



///////////////  BIMAP.H

#pragma once

#include <optional>
#include <string_view>
#include <memory>

class BiMap {
public:

    BiMap();
    BiMap(const BiMap& other);
    BiMap(BiMap&& other) noexcept;
    BiMap& operator=(const BiMap& other);
    BiMap& operator=(BiMap&& other) noexcept;
    ~BiMap();


    bool Add(std::string_view key, std::string_view value);


    std::optional<std::string_view> FindValue(std::string_view key) const noexcept;


    std::optional<std::string_view> FindKey(std::string_view value) const noexcept;

private:

    struct Impl;
    std::unique_ptr<Impl> impl_;

};


//  main.cpp


#include <cassert>

#include ""bimap.h""

int main() {
    using namespace std::literals;

    BiMap bimap;
    {
        const bool cat_added = bimap.Add(""Cat""sv, ""Koshka""sv);

        assert(cat_added);

        assert(bimap.FindValue(""Cat""sv) == ""Koshka""sv);
        assert(bimap.FindKey(""Koshka""sv) == ""Cat""sv);
        assert(!bimap.FindKey(""Cat""sv));
        assert(!bimap.FindValue(""Koshka""sv));

        const bool kitty_added = bimap.Add(""Cat""sv, ""Kitty""sv);

        assert(!kitty_added);
        assert(bimap.FindValue(""Cat""sv) == ""Koshka""sv);
        assert(!bimap.FindValue(""Kitty""sv));
    }

    BiMap bimap_copy(bimap);
    assert(bimap_copy.FindValue(""Cat""sv) == ""Koshka""sv);
    assert(bimap_copy.FindKey(""Koshka""sv) == ""Cat""sv);

    bimap_copy.Add(""Dog""sv, ""Sobaka""sv);
    assert(bimap_copy.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap_copy.FindKey(""Sobaka""sv) == ""Dog""sv);
    assert(!bimap.FindKey(""Sobaka""sv));
    assert(!bimap.FindValue(""Dog""sv));

    bimap = std::move(bimap_copy);
    assert(bimap.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap.FindKey(""Sobaka""sv) == ""Dog""sv);

    BiMap moved_bimap(std::move(bimap));
    assert(moved_bimap.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(moved_bimap.FindKey(""Sobaka""sv) == ""Dog""sv);

    BiMap bimap_to_assign;
    bimap_to_assign = moved_bimap;
    assert(bimap_to_assign.FindValue(""Dog""sv) == ""Sobaka""sv);
    assert(bimap_to_assign.FindKey(""Sobaka""sv) == ""Dog""sv);
}"
nKMaUDQN,correct Navigation.jsx,RIYA_22,JavaScript,Tuesday 2nd of April 2024 06:23:56 PM CDT,"import { Fragment, useState } from 'react'
import { Dialog, Popover, Tab, Transition } from '@headlessui/react'
import { Bars3Icon, MagnifyingGlassIcon, ShoppingBagIcon, XMarkIcon } from '@heroicons/react/24/outline'
import { navigation } from './navigationData'

// const navigation = {
//   categories: [
//     {
//       id: 'women',
//       name: 'Women',
//       featured: [
//         {
//           name: 'New Arrivals',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/mega-menu-category-01.jpg',
//           imageAlt: 'Models sitting back to back, wearing Basic Tee in black and bone.',
//         },
//         {
//           name: 'Basic Tees',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/mega-menu-category-02.jpg',
//           imageAlt: 'Close up of Basic Tee fall bundle with off-white, ochre, olive, and black tees.',
//         },
//       ],
//       sections: [
//         {
//           id: 'clothing',
//           name: 'Clothing',
//           items: [
//             { name: 'Tops', href: '#' },
//             { name: 'Dresses', href: '#' },
//             { name: 'Pants', href: '#' },
//             { name: 'Denim', href: '#' },
//             { name: 'Sweaters', href: '#' },
//             { name: 'T-Shirts', href: '#' },
//             { name: 'Jackets', href: '#' },
//             { name: 'Activewear', href: '#' },
//             { name: 'Browse All', href: '#' },
//           ],
//         },
//         {
//           id: 'accessories',
//           name: 'Accessories',
//           items: [
//             { name: 'Watches', href: '#' },
//             { name: 'Wallets', href: '#' },
//             { name: 'Bags', href: '#' },
//             { name: 'Sunglasses', href: '#' },
//             { name: 'Hats', href: '#' },
//             { name: 'Belts', href: '#' },
//           ],
//         },
//         {
//           id: 'brands',
//           name: 'Brands',
//           items: [
//             { name: 'Full Nelson', href: '#' },
//             { name: 'My Way', href: '#' },
//             { name: 'Re-Arranged', href: '#' },
//             { name: 'Counterfeit', href: '#' },
//             { name: 'Significant Other', href: '#' },
//           ],
//         },
//       ],
//     },
//     {
//       id: 'men',
//       name: 'Men',
//       featured: [
//         {
//           name: 'New Arrivals',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/product-page-04-detail-product-shot-01.jpg',
//           imageAlt: 'Drawstring top with elastic loop closure and textured interior padding.',
//         },
//         {
//           name: 'Artwork Tees',
//           href: '#',
//           imageSrc: 'https://tailwindui.com/img/ecommerce-images/category-page-02-image-card-06.jpg',
//           imageAlt:
//             'Three shirts in gray, white, and blue arranged on table with same line drawing of hands and shapes overlapping on front of shirt.',
//         },
//       ],
//       sections: [
//         {
//           id: 'clothing',
//           name: 'Clothing',
//           items: [
//             { name: 'Tops', href: '#' },
//             { name: 'Pants', href: '#' },
//             { name: 'Sweaters', href: '#' },
//             { name: 'T-Shirts', href: '#' },
//             { name: 'Jackets', href: '#' },
//             { name: 'Activewear', href: '#' },
//             { name: 'Browse All', href: '#' },
//           ],
//         },
//         {
//           id: 'accessories',
//           name: 'Accessories',
//           items: [
//             { name: 'Watches', href: '#' },
//             { name: 'Wallets', href: '#' },
//             { name: 'Bags', href: '#' },
//             { name: 'Sunglasses', href: '#' },
//             { name: 'Hats', href: '#' },
//             { name: 'Belts', href: '#' },
//           ],
//         },
//         {
//           id: 'brands',
//           name: 'Brands',
//           items: [
//             { name: 'Re-Arranged', href: '#' },
//             { name: 'Counterfeit', href: '#' },
//             { name: 'Full Nelson', href: '#' },
//             { name: 'My Way', href: '#' },
//           ],
//         },
//       ],
//     },
//   ],
//   pages: [
//     { name: 'Company', href: '#' },
//     { name: 'Stores', href: '#' },
//   ],
// }

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}

export default function Navigation() {
  const [open, setOpen] = useState(false)

  return (
    <div className=""bg-white z-50 pb-10"" >
      {/* Mobile menu */}
      <Transition.Root show={open} as={Fragment}>
        <Dialog as=""div"" className=""relative z-40 lg:hidden"" onClose={setOpen}>
          <Transition.Child
            as={Fragment}
            enter=""transition-opacity ease-linear duration-300""
            enterFrom=""opacity-0""
            enterTo=""opacity-100""
            leave=""transition-opacity ease-linear duration-300""
            leaveFrom=""opacity-100""
            leaveTo=""opacity-0""
          >
            <div className=""fixed inset-0 bg-black bg-opacity-25"" />
          </Transition.Child>

          <div className=""fixed inset-0 z-40 flex"">
            <Transition.Child
              as={Fragment}
              enter=""transition ease-in-out duration-300 transform""
              enterFrom=""-translate-x-full""
              enterTo=""translate-x-0""
              leave=""transition ease-in-out duration-300 transform""
              leaveFrom=""translate-x-0""
              leaveTo=""-translate-x-full""
            >
              <Dialog.Panel className=""relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl"">
                <div className=""flex px-4 pb-2 pt-5"">
                  <button
                    type=""button""
                    className=""relative -m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400""
                    onClick={() => setOpen(false)}
                  >
                    <span className=""absolute -inset-0.5"" />
                    <span className=""sr-only"">Close menu</span>
                    <XMarkIcon className=""h-6 w-6"" aria-hidden=""true"" />
                  </button>
                </div>

                {/* Links */}
                <Tab.Group as=""div"" className=""mt-2"">
                  <div className=""border-b border-gray-200"">
                    <Tab.List className=""-mb-px flex space-x-8 px-4"">
                      {navigation.categories.map((category) => (
                        <Tab
                          key={category.name}
                          className={({ selected }) =>
                            classNames(
                              selected ? 'border-indigo-600 text-indigo-600' : 'border-transparent text-gray-900',
                              'flex-1 whitespace-nowrap border-b-2 px-1 py-4 text-base font-medium'
                            )
                          }
                        >
                          {category.name}
                        </Tab>
                      ))}
                    </Tab.List>
                  </div>
                  <Tab.Panels as={Fragment}>
                    {navigation.categories.map((category) => (
                      <Tab.Panel key={category.name} className=""space-y-10 px-4 pb-8 pt-10"">
                        <div className=""grid grid-cols-2 gap-x-4"">
                          {category.featured.map((item) => (
                            <div key={item.name} className=""group relative text-sm"">
                              <div className=""aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75"">
                                <img src={item.imageSrc} alt={item.imageAlt} className=""object-cover object-center"" />
                              </div>
                              <a href={item.href} className=""mt-6 block font-medium text-gray-900"">
                                <span className=""absolute inset-0 z-10"" aria-hidden=""true"" />
                                {item.name}
                              </a>
                              <p aria-hidden=""true"" className=""mt-1"">
                                Shop now
                              </p>
                            </div>
                          ))}
                        </div>
                        {category.sections.map((section) => (
                          <div key={section.name}>
                            <p id={`${category.id}-${section.id}-heading-mobile`} className=""font-medium text-gray-900"">
                              {section.name}
                            </p>
                            <ul
                              role=""list""
                              aria-labelledby={`${category.id}-${section.id}-heading-mobile`}
                              className=""mt-6 flex flex-col space-y-6""
                            >
                              {section.items.map((item) => (
                                <li key={item.name} className=""flow-root"">
                                  <a href={item.href} className=""-m-2 block p-2 text-gray-500"">
                                    {item.name}
                                  </a>
                                </li>
                              ))}
                            </ul>
                          </div>
                        ))}
                      </Tab.Panel>
                    ))}
                  </Tab.Panels>
                </Tab.Group>

                <div className=""space-y-6 border-t border-gray-200 px-4 py-6"">
                  {navigation.pages.map((page) => (
                    <div key={page.name} className=""flow-root"">
                      <a href={page.href} className=""-m-2 block p-2 font-medium text-gray-900"">
                        {page.name}
                      </a>
                    </div>
                  ))}
                </div>

                <div className=""space-y-6 border-t border-gray-200 px-4 py-6"">
                  <div className=""flow-root"">
                    <a href=""#"" className=""-m-2 block p-2 font-medium text-gray-900"">
                      Sign in
                    </a>
                  </div>
                  <div className=""flow-root"">
                    <a href=""#"" className=""-m-2 block p-2 font-medium text-gray-900"">
                      Create account
                    </a>
                  </div>
                </div>

                <div className=""border-t border-gray-200 px-4 py-6"">
                  <a href=""#"" className=""-m-2 flex items-center p-2"">
                    <img
                      src=""https://tailwindui.com/img/flags/flag-canada.svg""
                      alt=""""
                      className=""block h-auto w-5 flex-shrink-0""
                    />
                    <span className=""ml-3 block text-base font-medium text-gray-900"">CAD</span>
                    <span className=""sr-only"">, change currency</span>
                  </a>
                </div>
              </Dialog.Panel>
            </Transition.Child>
          </div>
        </Dialog>
      </Transition.Root>

      <header className=""relative bg-white"">
        <p className=""flex h-10 items-center justify-center bg-indigo-600 px-4 text-sm font-medium text-white sm:px-6 lg:px-8"">
          Get free delivery on orders over $100
        </p>

        <nav aria-label=""Top"" className=""mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"">
          <div className=""border-b border-gray-200"">
            <div className=""flex h-16 items-center"">
              <button
                type=""button""
                className=""relative rounded-md bg-white p-2 text-gray-400 lg:hidden""
                onClick={() => setOpen(true)}
              >
                <span className=""absolute -inset-0.5"" />
                <span className=""sr-only"">Open menu</span>
                <Bars3Icon className=""h-6 w-6"" aria-hidden=""true"" />
              </button>

              {/* Logo */}
              <div className=""ml-4 flex lg:ml-0"">
                <a href=""#"">
                  <span className=""sr-only"">Your Company</span>
                  <img
                    className=""h-8 w-auto""
                    src=""https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600""
                    alt=""ShopwithZosh""
                  />
                </a>
              </div>

              {/* Flyout menus */}
              <Popover.Group className=""hidden lg:ml-8 lg:block lg:self-stretch"">
                <div className=""flex h-full space-x-8"">
                  {navigation.categories.map((category) => (
                    <Popover key={category.name} className=""flex"">
                      {({ open }) => (
                        <>
                          <div className=""relative flex"">
                            <Popover.Button
                              className={classNames(
                                open
                                  ? 'border-indigo-600 text-indigo-600'
                                  : 'border-transparent text-gray-700 hover:text-gray-800',
                                'relative z-10 -mb-px flex items-center border-b-2 pt-px text-sm font-medium transition-colors duration-200 ease-out'
                              )}
                            >
                              {category.name}
                            </Popover.Button>
                          </div>

                          <Transition
                            as={Fragment}
                            enter=""transition ease-out duration-200""
                            enterFrom=""opacity-0""
                            enterTo=""opacity-100""
                            leave=""transition ease-in duration-150""
                            leaveFrom=""opacity-100""
                            leaveTo=""opacity-0""
                          >
                            <Popover.Panel className=""absolute inset-x-0 top-full text-sm text-gray-500 z-50"">
                              {/* Presentational element used to render the bottom shadow, if we put the shadow on the actual panel it pokes out the top, so we use this shorter element to hide the top of the shadow */}
                              <div className=""absolute inset-0 top-1/2 bg-white shadow"" aria-hidden=""true"" />

                              <div className=""relative bg-white"">
                                <div className=""mx-auto max-w-7xl px-8"">
                                  <div className=""grid grid-cols-2 gap-x-8 gap-y-10 py-16"">
                                    <div className=""col-start-2 grid grid-cols-2 gap-x-8"">
                                      {category.featured.map((item) => (
                                        <div key={item.name} className=""group relative text-base sm:text-sm"">
                                          <div className=""aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75"">
                                            <img
                                              src={item.imageSrc}
                                              alt={item.imageAlt}
                                              className=""object-cover object-center""
                                            />
                                          </div>
                                          <a href={item.href} className=""mt-6 block font-medium text-gray-900"">
                                            <span className=""absolute inset-0 z-10"" aria-hidden=""true"" />
                                            {item.name}
                                          </a>
                                          <p aria-hidden=""true"" className=""mt-1"">
                                            Shop now
                                          </p>
                                        </div>
                                      ))}
                                    </div>
                                    <div className=""row-start-1 grid grid-cols-3 gap-x-8 gap-y-10 text-sm"">
                                      {category.sections.map((section) => (
                                        <div key={section.name}>
                                          <p id={`${section.name}-heading`} className=""font-medium text-gray-900"">
                                            {section.name}
                                          </p>
                                          <ul
                                            role=""list""
                                            aria-labelledby={`${section.name}-heading`}
                                            className=""mt-6 space-y-6 sm:mt-4 sm:space-y-4""
                                          >
                                            {section.items.map((item) => (
                                              <li key={item.name} className=""flex"">
                                                <a href={item.href} className=""hover:text-gray-800"">
                                                  {item.name}
                                                </a>
                                              </li>
                                            ))}
                                          </ul>
                                        </div>
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </Popover.Panel>
                          </Transition>
                        </>
                      )}
                    </Popover>
                  ))}

                  {navigation.pages.map((page) => (
                    <a
                      key={page.name}
                      href={page.href}
                      className=""flex items-center text-sm font-medium text-gray-700 hover:text-gray-800""
                    >
                      {page.name}
                    </a>
                  ))}
                </div>
              </Popover.Group>

              <div className=""ml-auto flex items-center"">
                {/* <div className=""hidden lg:flex lg:flex-1 lg:items-center lg:justify-end lg:space-x-6"">
                  <a href=""#"" className=""text-sm font-medium text-gray-700 hover:text-gray-800"">
                    Sign in
                  </a>
                  <span className=""h-6 w-px bg-gray-200"" aria-hidden=""true"" />
                  <a href=""#"" className=""text-sm font-medium text-gray-700 hover:text-gray-800"">
                    Create account
                  </a>
                </div> */}

                <div className=""hidden lg:ml-8 lg:flex"">
                  <a href=""#"" className=""flex items-center text-gray-700 hover:text-gray-800"">
                    <img
                      src=""https://tailwindui.com/img/flags/flag-canada.svg""
                      alt=""""
                      className=""block h-auto w-5 flex-shrink-0""
                    />
                    <span className=""ml-3 block text-sm font-medium"">CAD</span>
                    <span className=""sr-only"">, change currency</span>
                  </a>
                </div>

                {/* Search */}
                <div className=""flex lg:ml-6"">
                  <a href=""#"" className=""p-2 text-gray-400 hover:text-gray-500"">
                    <span className=""sr-only"">Search</span>
                    <MagnifyingGlassIcon className=""h-6 w-6"" aria-hidden=""true"" />
                  </a>
                </div>

                {/* Cart */}
                <div className=""ml-4 flow-root lg:ml-6"">
                  <a href=""#"" className=""group -m-2 flex items-center p-2"">
                    <ShoppingBagIcon
                      className=""h-6 w-6 flex-shrink-0 text-gray-400 group-hover:text-gray-500""
                      aria-hidden=""true""
                    />
                    <span className=""ml-2 text-sm font-medium text-gray-700 group-hover:text-gray-800"">0</span>
                    <span className=""sr-only"">items in cart, view bag</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </nav>
      </header>
    </div>
  )
}
"
