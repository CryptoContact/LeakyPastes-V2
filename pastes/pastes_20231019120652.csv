id,title,username,language,date,content
AbWajnfW,Файлы в C++,anticlown,C++,Thursday 19th of October 2023 06:57:35 AM CDT,"/////////////////////// Проверка указанного пути ////////////////////////////////
std::string inputPathToFile() {
    std::string path;
    bool isIncorrect;

    std::cout << ""Укажите путь к файлу: "";

    do
    {
        isIncorrect = false;
        std::cin >> path;
        std::ifstream file(path);
        if (path.substr(path.find_last_of(""."") + 1) != ""txt"")
        {
            isIncorrect = true;
            std::cout << ""Введён некорректный формат пути! Введите путь расширением .txt заново!"" << std::endl;
        }
        file.open(path);
        if (!file.is_open())
        {
            std::cout << ""По указанному пути файл не найден! Укажите правильный путь: "";
            isIncorrect = true;
        }
    } while (isIncorrect);

    return path;
}
///////////////////////////////////////////////////////////////////////////////


///////////////////////////// Ввод из файла ///////////////////////////////////
int* fillSequenceFromFile(const int size, const std::string path) {
    int* sequence = new int[size];
    bool isIncorrect;
    std::string matrixInp;
    std::ifstream fin(path);

    std::cout << ""Чтение последовательности... \n"";
    fin >> matrixInp;

    for (int i = 0; i < size; i++)
    {
        do
        {
            isIncorrect = false;

            try
            {
                fin >> sequence[i];
            }
            catch (std::string errorMessage)
            {
                std::cout << ""Ошибка при чтении последовательности! Введите последовательность с консоли! \n"";
                isIncorrect = true;
                sequence = fillSequenceFromConsole(size);
            }

            if (!isIncorrect && (sequence[i] < MIN_VALUE || sequence[i] > MAX_VALUE))
            {
                std::cout << ""Ошибка при чтении последовательности! Введите последовательность с консоли! \n"";
                isIncorrect = true;
                sequence = fillSequenceFromConsole(size);
            }
        } while (isIncorrect);
    }

    fin.close();

    return sequence;
}
//////////////////////////////////////////////////////////////////////////////


////////////////////////////// Запись в файл //////////////////////////////////
void outputSequenceInFile(std::string path, int* sequence, const int size) {
    bool isIncorrect;
    std::ofstream fout;

    std::cout << ""Вывод начальной последовательности в файл... \n"";

    fout.open(path, std::ios::app);
    fout << ""\n"";

    do
    {
        isIncorrect = false;

        try
        {
            for (int i = 0; i < size; i++)
            {
                for (int j = 0; j < size; j++)
                    fout << sequence[i] << ""\t"";
                fout << ""\n"";
            }

            fout << ""\n"";
        }
        catch (std::string errorMessage)
        {
            std::cout << ""Ошибка! Измените параметры файла или укажите новый путь! \n"";
            isIncorrect = true;
            path = inputPathToFile();
        }
    } while (isIncorrect);

    fout.close();
    std::cout << ""Данные успешно записаны в файл! \n"";
}
//////////////////////////////////////////////////////////////////////////////"
ppQahwhD,HW 2_12_1,rukvir,C#,Thursday 19th of October 2023 06:45:17 AM CDT,"using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(@""Легенда: Вы – теневой маг(можете быть вообще хоть кем) и БЛА-БЛА-БЛА..."");
            Random rand = new Random();
            int healthMage = rand.Next(75, 100);
            int healthBoss = rand.Next(80, 150);
            int damageMage = rand.Next(0, 5);
            int damageBoss = rand.Next(10, 50);
            int armorMage = rand.Next(3, 10);
            int armorBoss = rand.Next(10, 30);
            int spellDamage = 0;
            int spellHealth = 0;
            int spellProtect = 0;
            string spellNumber = """";

            Console.WriteLine($""| Маг  | здоровье:{healthMage}, броня: {armorMage}, урон: {damageMage}."");
            Console.WriteLine($""| Босс | здоровье:{healthBoss}, броня: {armorBoss}, урон: {damageBoss}."");
            Console.WriteLine(""3.."");
            Console.WriteLine(""2.."");
            Console.WriteLine(""1.."");
            Console.WriteLine(""РЕЗНЯ!!!"");

            while ((healthBoss > 0) && (healthMage > 0))
            {
                int mageSpells = rand.Next(0, 3);
                Console.WriteLine($""\nЗа 1 ход будет использовано - {mageSpells} способность(ти)."");
                damageMage = 0;

                for (int i = 0; i < mageSpells; i++)
                {
                    spellNumber = Convert.ToString(rand.Next(1, 5)); Console.WriteLine($""Выбрана способность: {spellNumber}"");
                    spellDamage = 0;

                    switch (spellNumber)
                    {
                        case ""1"":
                            spellDamage = rand.Next(5, 15);
                            Console.WriteLine($""Склилл 1: Обычный файерболл. Урон составил: {spellDamage}"");
                            break;

                        case ""2"":
                            spellDamage = rand.Next(20, 45);
                            Console.WriteLine($""Склилл 2: Метеоритный дождь. Урон составил: {spellDamage}"");
                            break;

                        case ""3"":
                            spellDamage = rand.Next(5, 10);
                            spellHealth = rand.Next(10, 25);
                            Console.WriteLine($""Склилл 3: Лови аптечку! Лечение:"" +
                                $"" {spellHealth} | Урон составил: {spellDamage}"");
                            break;

                        case ""4"":
                            spellDamage = rand.Next(5, 15);
                            spellProtect = rand.Next(10, 20);
                            Console.WriteLine($""Склилл 4: Попа Ежа. Броня заблокировала:"" +
                                $"" {spellProtect} | Урон составил: {spellDamage}"");
                            break;
                    }
                    damageMage += spellDamage;
                }
                Console.WriteLine($""\n Итого: за {spellNumber} заклинаний, урона Мага составил: {damageMage}"");
                healthMage = healthMage - (damageBoss + armorMage + spellProtect) + spellHealth;
                healthBoss = healthBoss - (damageMage + armorBoss);
                Console.WriteLine($""После обмена атаками: Маг: здоровье: {healthMage}, Босс: здоровье: {healthBoss}  "");
            }
            if (healthMage <= 0 && healthBoss <= 0)
            {
                Console.WriteLine(""------------------"");
                Console.WriteLine($""Ничья, оба умерли"");
            }

            else if (healthMage > 0 && healthBoss <= 0)
            {
                Console.WriteLine(""-------------"");
                Console.WriteLine($""Маг победил"");
            }

            else if (healthMage <= 0 && healthBoss > 0)
            {
                Console.WriteLine(""--------------"");
                Console.WriteLine($""Босс победил"");
            }
        }
    }
}
"
KPFq14ez,Untitled,wclovers,PHP,Thursday 19th of October 2023 06:42:41 AM CDT,"add_filter('wcfm_is_allow_policy_product_settings', function($allow) {
    if (wcfm_is_vendor()) {
        $allow = false;
    }
    return $allow;
});"
TbUYQM9J,Pausen Gong,tuvok81,Bash,Thursday 19th of October 2023 06:24:13 AM CDT,"#! /bin/sh
## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## ++++++ Pausen Gong Script by Markus Schwarz 2023.10.19 v1.0 +++++
## +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

################################################################################################ 
## Mit aplay -l vorher schauen an welchem Port das Gerät hängt                                ##
##																							  ##
## Beispiel																					  ##
##																							  ##
## pi@raspberrypi:~ $ aplay -l																  ##
## **** Liste der Hardware-Geräte (PLAYBACK) ****											  ##
## Karte 0: Headphones [bcm2835 Headphones], Gerät 0: bcm2835 Headphones [bcm2835 Headphones] ##
##   Sub-Geräte: 8/8																		  ##
##   Sub-Gerät #0: subdevice #0																  ##
##   Sub-Gerät #1: subdevice #1																  ##
##  Sub-Gerät #2: subdevice #2																  ##
##   Sub-Gerät #3: subdevice #3																  ##
##   Sub-Gerät #4: subdevice #4																  ##
##   Sub-Gerät #5: subdevice #5																  ##
##   Sub-Gerät #6: subdevice #6																  ##
##   Sub-Gerät #7: subdevice #7																  ##
## Karte 1: U192k [UMC202HD 192k], Gerät 0: USB Audio [USB Audio]							  ##
##   Sub-Geräte: 1/1																		  ##
##   Sub-Gerät #0: subdevice #0																  ##
## Karte 2: vc4hdmi [vc4-hdmi], Gerät 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]			  ##
##   Sub-Geräte: 1/1																		  ##
##   Sub-Gerät #0: subdevice #0																  ##
##																							  ##
## Wir wollen es auf dem U192k abspielen wäre dann Karte 1 + Gerät 0 = hw:1,0				  ##
################################################################################################

## Crontab Befehle Beispiel ##

## ## Endmontage
## 0 9  * * * /home/pi/gong.sh
## 0 18  * * * /home/pi/gong.sh
## 30 1  * * * /home/pi/gong.sh
## ## Leiterplatte
## 0 10  * * * /home/pi/gong.sh
## 30 18  * * * /home/pi/gong.sh
## 0 2  * * * /home/pi/gong.sh


## Variable ##
tool=/usr/bin/mpg321
hardware=hw:1,0
mp3=/home/pi/gong.mp3

$tool -q -o alsa -a $hardware $mp3
"
idk3gwEJ,Файлы в Java,anticlown,Java,Thursday 19th of October 2023 06:16:05 AM CDT,"/////////////////////// Проверка указанного пути ////////////////////////////////
    public static String inputPathToFile() {
        boolean isIncorrect;
        String path;

        System.out.println(""Укажите путь к файлу: "");

        do {
            isIncorrect = false;
            path = scan.nextLine();
            File file = new File(path);

            if (!file.exists()) {
                System.out.println(""По указанному пути файл не найден! Укажите правильный путь: "");
                isIncorrect = true;
            }
        } while (isIncorrect);

        return path;
    }
///////////////////////////////////////////////////////////////////////////////


///////////////////////////// Ввод из файла ///////////////////////////////////
    public static int[] fillSequenceFromFile(final int size, final String path) {
        int[] sequence = new int[size];
        int i;
        System.out.println(""Происходит чтение последовательности..."");

        try (BufferedReader fReader = new BufferedReader(new FileReader(path))) {
            fReader.readLine();
            String[] integerInString = fReader.readLine().split("" "");

            for (int j = 0; j < size; j++)
                sequence[j] = Integer.parseInt(integerInString[j]);
        } catch (Exception e) {
            System.out.println(""Ошибка при чтении системы! Введите систему с консоли!"");
            sequence = fillSequenceFromConsole(size);
        }
        for (int j = 0; j < size; j++) {
            if (sequence[j] < MIN_VALUE || sequence[j] > MAX_VALUE) {
                System.out.println(""Ошибка при считывании матрицы из файла! Введите матрицу с консоли!"");
                sequence = fillSequenceFromConsole(size);
            }
        }

        return sequence;
    }
//////////////////////////////////////////////////////////////////////////////


////////////////////////////// Запись в файл //////////////////////////////////
    public static void outputSequenceInFile(String path, final int[] sequence, final int size) {
        boolean isIncorrect;
        System.out.println(""Вывод начальной последовательности в файл..."");

        do {
            isIncorrect = false;
            try {
                FileWriter writer = new FileWriter(path, true);
                BufferedWriter bufferWriter = new BufferedWriter(writer);

                for (int i = 0; i < size; i++)
                    bufferWriter.write(sequence[i] + "" "");
                bufferWriter.write(""\n"");

                bufferWriter.close();
                writer.close();
            } catch (IOException e) {
                isIncorrect = true;
                System.out.println(""Ошибка! Измените параметры файла или укажите новую ссылку!"");
                path = inputPathToFile();
            }
        } while (isIncorrect);

        System.out.println(""Данные успешно записаны в файл!"");
    }
//////////////////////////////////////////////////////////////////////////////"
BSHPc96x,Файлы в делфи,anticlown,Delphi,Thursday 19th of October 2023 06:02:11 AM CDT,"/////////////////////// Проверка указанного пути ////////////////////////////////
Function InputPathToFile(): String;
Var
    Path: String;
    IsCorrect: Boolean;
Begin
    Write('Укажите путь к файлу: ');

    Repeat
        IsCorrect := True;
        Readln(Path);

        If Not FileExists(Path) Then
        Begin
            Write('По указанному пути файл не найден! Укажите правильный путь: ');
            IsCorrect := False;
        End
        Else
            If ExtractFileExt(Path) <> '.txt' Then
            Begin
                Write('Ошибка, неправильный тип файла! Укажите правильный путь: ');
                IsCorrect := False;
            End;
    Until IsCorrect;

    InputPathToFile := Path;
End;
///////////////////////////////////////////////////////////////////////////////

///////////////////////////// Ввод из файла ///////////////////////////////////
Function FillSequenceFromFile(Const Size: Integer; Const Path: String): TArr; //пользовательский тип
Var
    Sequence: TArr;
    IsCorrect: Boolean;
    InputFile: TextFile;
    I: Integer;
Begin
    SetLength(Sequence, Size);
    Writeln('Происходит чтение последовательности из файла...');
    AssignFile(InputFile, Path);

    Repeat
        IsCorrect := True;

        Try
            Try
                Reset(InputFile);
                Readln(InputFile);

                For I := Low(Sequence) To High(Sequence) Do
                Begin
                    Read(InputFile, Sequence[I]);

                    If (IsCorrect And ((Sequence[I] < MIN_VALUE) Or (Sequence[I] > MAX_VALUE))) Then
                    Begin
                        Writeln('Ошибка при чтении последовательности! Введите последовательность с консоли!');
                        IsCorrect := False;
                        Sequence := FillSequenceFromConsole(Size); //в вашем случае это будет возврат на стадию
                    End; 											//ввода пути к файлу
                End;
            Finally
                Close(InputFile);
            End;
        Except
            Writeln('Ошибка при чтении последовательности! Введите последовательность с консоли!');
            IsCorrect := False;
            Sequence := FillSequenceFromConsole(Size); //в вашем случае это будет возврат на стадию ввода пути к файлу
        End;
    Until IsCorrect;

    FillSequenceFromFile := Sequence;
End;
//////////////////////////////////////////////////////////////////////////////

////////////////////////////// Запись в файл //////////////////////////////////
Procedure OutputSequenceInFile(Const Sequence: TArr; Path: String);
Var
    OutputFile: TextFile;
    IsCorrect: Boolean;
    I: Integer;
Begin
    Writeln('Вывод начальной последовательности в файл...');

    Repeat
        IsCorrect := True;
        AssignFile(OutputFile, Path);

        Try
            Try
                Append(OutputFile);

                For I := Low(Sequence) To High(Sequence) Do
                    Write(OutputFile, Sequence[I], ' '); //можно и #32(Space по ASCII), можно и #9(Tab по ASCII)
                Write(OutputFile, #13);
            Finally
                Close(OutputFile);
            End;
        Except
            Writeln('Ошибка! Измените параметры файла или укажите новый путь!');
            IsCorrect := False;
            Path := InputPathToFile();
        End;

    Until IsCorrect;

    Writeln('Данные успешно записаны в файл!');
End;
//////////////////////////////////////////////////////////////////////////////"
UXth0KCf,data730,TestGuy1,JSON,Thursday 19th of October 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3455ae62da8e7c45ab4403f40dc87a7b0b5b0d32a217409b8b810e4d13584fd9e8684c9e4685f728d198770dead09f298e11b516c74599b2d1dc7ba49f77a31025c821fa5e96647568e67fbd3f16d75608e662104eaf286e70fef1016ea2d9be407aa37c69addab55034e48eea37034af279c62820b2069c9106482aaccd82bf',
  otherdata: [
    'fdd538ff941782e53e622e145bba0438',
    '93055fce002eb705a1d459f15b4e4e8a',
    '29f5a1c00797ec37b2b8e6f5826c0b7a',
    '6f835b9938362f844ce3074088c1e440',
    '825f703e55351b25e6dc7e39e21100d3',
    'bf15f126602097ccd705f08a23e2d227',
    '245501e19064a7e87ff6caf4dc961feb',
    '0b001a5651037becb32c9ba6ecfb2b1e'
  ]
}"
i1i5AxUR,custom toggler,AlexeyT,JavaScript,Thursday 19th of October 2023 05:46:35 AM CDT,"class CustomComponentsToggler {
  constructor() {
    let togglers = document.querySelectorAll('.toggler');

    if (togglers.length) {
      this.initTogglersEvents(togglers)
    }
  }

  initTogglersEvents(togglers) {
    togglers.forEach(toggler => {
      toggler.addEventListener('change', e => {
        let targets = document.querySelectorAll(`[data-toggler-target=""${toggler.dataset.toggleTarget}""]`);

        if (targets.length) {
          targets.forEach(target => {
            let property = target.dataset.togglerProperty || 'hidden'
            target[property] = !target[property]
          })
        }
        this.updateToggleState(togglers);
      })
    })
  }

  updateToggleState(togglers) {
    togglers.forEach(toggler => {
      let targets = document.querySelectorAll(`[data-toggler-target=""${toggler.dataset.toggleTarget}""]`);

      if (targets.length) {
        targets.forEach(target => {
          let property = target.dataset.togglerProperty || 'hidden'
          let inputs = target.querySelectorAll('input');

          inputs.forEach(input => {
            input[property] = target[property];
          })
        })
      }
    })
  }
}
"
TE1KTkzj,Untitled,35657,C++,Thursday 19th of October 2023 05:39:12 AM CDT,"
#include <iostream>

using namespace std;

int main() {
	setlocale(LC_ALL, ""ru"");

	double feed_count;

	cout << ""Введите расход корма в день (грамм): "" ;

	cin >> feed_count;

	cout << ""На 30 дней необходимо : "" << (feed_count * 30) / 1000 << "" килограмм корма"" << endl;
}"
mRm4vC0a,Untitled,UNKNOWN-PH,Lua,Thursday 19th of October 2023 05:36:20 AM CDT,PLEASE WAIT FOR THE UPDATE! 
TTWKUbED,fbtc,coinwalk,JavaScript,Thursday 19th of October 2023 05:27:46 AM CDT,"
var smiley = parseFloat(document.getElementById('balance').innerHTML);
var junky = smiley;
var bear = true;
var nudie = Number((0.00000001).toFixed(8));
var burp = nudie;
var temple = (nudie*10);
var something = temple;
var dork = 8;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var weeman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var bolance = smiley;
var zuggbe = ((burp*1).toFixed(8));
 
 
function get(){
bolance = document.getElementById('balance').innerHTML;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>=woman)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart<=1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>weeman){
weeman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=weeman)) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<weeman)) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>=(something+temple)){
dork = dork+1;
something = something+temple;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
zuggbe = ((burp*1).toFixed(8));
if ((bolance==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((bolance!=junky)&&(!bear)){
junky = parseFloat(bolance);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
NNqLLPXq,snowybot handbreaker,coinwalk,JavaScript,Thursday 19th of October 2023 05:26:01 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/800).toFixed(8));
var burp = nudie;
var temple = (nudie*10);
var something = temple;
var dork = 8;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var weeman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;;
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>=woman)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart<=1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>weeman){
weeman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=weeman)) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<weeman)) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>=(something+temple)){
dork = dork+1;
something = something+temple;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 800);
}
get();"
t9rtKJES,Untitled,35657,C++,Thursday 19th of October 2023 05:24:47 AM CDT,"
#include <iostream>

using namespace std;

int main() {
	setlocale(LC_ALL, ""ru"");

	double capacity;

	cout << ""Введите емкость аккумулятора: "" ;

	cin >> capacity;

	cout << ""Минимальная емкость зарядного устройства: "" << capacity * 3 << "" мАч"" << endl;
}"
XU4BY6gP,snowybot handbreaker,coinwalk,JavaScript,Thursday 19th of October 2023 05:21:05 AM CDT,"
var smiley = parseFloat(document.getElementById('balance').innerHTML);
var junky = smiley;
var bear = true;
var nudie = Number((0.00000001).toFixed(8));
var burp = nudie;
var temple = (nudie*10);
var something = temple;
var dork = 8;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var weeman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;;
var bolance = smiley;
var zuggbe = ((burp*1).toFixed(8));
 
 
function get(){
bolance = document.getElementById('balance').innerHTML;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>=woman)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart<=1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>weeman){
weeman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=weeman)) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<weeman)) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>=(something+temple)){
dork = dork+1;
something = something+temple;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
zuggbe = ((burp*1).toFixed(8));
if ((bolance==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = zuggbe);
parseFloat(document.getElementById('win_amount').innerHTML = zuggbe);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((bolance!=junky)&&(!bear)){
junky = parseFloat(bolance);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
uPDu3RJB,DRV8871 DC Motor Driver - 3.6A,microrobotics,C,Thursday 19th of October 2023 05:20:12 AM CDT,"/*
The DRV8871 is a motor driver IC designed to control DC motors. Below is a simple example Arduino code to use with the DRV8871 DC Motor Driver. Note that you'll need to connect the appropriate pins from your Arduino to the motor driver according to the datasheet.

This code demonstrates how to control a DC motor using PWM for speed control and two digital pins for direction control. Adjust the pin assignments based on your actual wiring. The example includes forward and reverse motions with a brief stop in between. The motorControl function sets the motor speed and direction.

Please refer to the DRV8871 datasheet for the correct pin connections and specifications based on your motor and power supply.
*/

// Define the pins for motor control
const int motorPWM = 9;    // PWM input for motor speed control
const int motorINA = 8;    // Input A for motor direction control
const int motorINB = 7;    // Input B for motor direction control

void setup() {
  // Set the motor control pins as outputs
  pinMode(motorPWM, OUTPUT);
  pinMode(motorINA, OUTPUT);
  pinMode(motorINB, OUTPUT);
  
  // Initialize the motor in the stopped state
  digitalWrite(motorINA, LOW);
  digitalWrite(motorINB, LOW);
  
  // Start the serial communication for debugging (optional)
  Serial.begin(9600);
}

void loop() {
  // Run the motor forward for 2 seconds
  motorControl(255, HIGH, LOW);
  delay(2000);
  
  // Stop the motor for 1 second
  motorControl(0, LOW, LOW);
  delay(1000);
  
  // Run the motor in reverse for 2 seconds
  motorControl(255, LOW, HIGH);
  delay(2000);
  
  // Stop the motor for 1 second
  motorControl(0, LOW, LOW);
  delay(1000);
}

// Function to control the motor
void motorControl(int speed, int inA, int inB) {
  analogWrite(motorPWM, speed);   // Set motor speed
  digitalWrite(motorINA, inA);   // Set direction A
  digitalWrite(motorINB, inB);   // Set direction B
  
  // Optional: print motor speed and direction for debugging
  Serial.print(""Speed: "");
  Serial.println(speed);
  Serial.print(""Direction: "");
  Serial.println((inA == HIGH) ? ""Forward"" : (inB == HIGH) ? ""Reverse"" : ""Stop"");
}
"
Arq7qKYV,Benewake TFmini-S Industrial LiDAR Range Sensor 0.1-12m,microrobotics,C,Thursday 19th of October 2023 05:15:25 AM CDT,"/*
Make sure you have the TFmini library installed. To install it, open the Arduino IDE, go to ""Sketch"" -> ""Include Library"" -> ""Manage Libraries..."". In the Library Manager, search for ""TFmini"" and install the library.

This code initializes the TFmini sensor and reads the distance data in a loop, printing it to the serial monitor. Adjust the delay in the loop according to your requirements.

Remember to connect the TFmini sensor to your Arduino properly. Refer to the sensor's datasheet for the pinout and wiring details.
*/

#include <Wire.h>
#include <TFmini.h>

TFmini tfmini;

void setup() {
  Serial.begin(115200);
  
  // Initialize the TFmini sensor
  if (tfmini.begin()) {
    Serial.println(""TFmini initialization successful"");
  } else {
    Serial.println(""Failed to initialize TFmini"");
    while (1);
  }
}

void loop() {
  // Read distance data
  uint16_t distance = tfmini.getDistance();
  
  if (tfmini.error()) {
    Serial.print(""Error: "");
    Serial.println(tfmini.errorString());
  } else {
    Serial.print(""Distance: "");
    Serial.print(distance);
    Serial.println("" cm"");
  }

  delay(100); // Adjust the delay as needed
}
"
FAfqLmwL,Benewake TF-LUNA Industrial Lidar Range Sensor 0.2-8m,microrobotics,Arduino,Thursday 19th of October 2023 05:11:16 AM CDT,"/*
Make sure you have the TF-LUNA library installed. To install it, open the Arduino IDE, go to ""Sketch"" -> ""Include Library"" -> ""Manage Libraries..."". In the Library Manager, search for ""TF-Luna"" and install the library.

This code initializes the TF-LUNA sensor and reads the distance data in a loop, printing it to the serial monitor. Adjust the delay in the loop according to your requirements.

Remember to connect the TF-LUNA sensor to your Arduino properly. Refer to the sensor's datasheet for the pinout and wiring details.
*/

#include <Wire.h>
#include <TF-Luna.h>

TF_Luna lidar;

void setup() {
  Serial.begin(115200);
  
  // Initialize the lidar sensor
  if (lidar.begin()) {
    Serial.println(""TF-LUNA initialization successful"");
  } else {
    Serial.println(""Failed to initialize TF-LUNA"");
    while (1);
  }
}

void loop() {
  // Read distance data
  float distance = lidar.getDistance();
  
  if (lidar.error()) {
    Serial.print(""Error: "");
    Serial.println(lidar.errorString());
  } else {
    Serial.print(""Distance: "");
    Serial.print(distance);
    Serial.println("" cm"");
  }

  delay(500); // Adjust the delay as needed
}
"
3bEFp1Wi,NSMB - RTC2SEED bot,maziari,Python,Thursday 19th of October 2023 05:02:16 AM CDT,"import hashlib
import struct

Month = ["""",""JAN"",""FEB"",""MAR"",""APR"",""MAY"",""JUN"",""JUL"",""AUG"",""SEP"",""OCT"",""NOV"",""DEC""]

Timer0 = 0x0013
VCount = 0x0516
VFrame = 0x5
MacAddress = 0x0009BF123456
Microphone = 0x0
Touchpannel = 0x0
Input = 0x0

RTC_Year = 2000
RTC_Month = 1
RTC_Day = 1

RTC_Hour = 0
RTC_Minute = 0
RTC_Second = 0

m = (RTC_Month - 3) % 12 + 3
y = RTC_Year
if RTC_Month == 1 or RTC_Month == 2:
    y = y - 1
RTC_Weekday = (y + int(y / 4) - int(y / 100) + int(y / 400) + int(2.6 * m + 1.6) + RTC_Day) % 7

for n in range(3153600000):

    data = [0] * 8
    data[0] = Timer0 << 16 | VCount 
    data[1] = struct.unpack("">L"", struct.pack(""<L"", MacAddress & 0xFFFF))[0]
    data[2] = struct.unpack("">L"", struct.pack(""<L"", MacAddress >> 16))[0] ^ 0x06000000 ^ VFrame
    data[3] |= ((RTC_Year - 2000) % 10 + int((RTC_Year - 2000) / 10) * 16)
    data[3] |= ((RTC_Month) % 10 + int((RTC_Month) / 10) * 16) << 8
    data[3] |= ((RTC_Day) % 10 + int((RTC_Day) / 10) * 16) << 16
    data[3] |= RTC_Weekday << 24
    if RTC_Hour > 11:
        h = RTC_Hour + 40
    else:
        h = RTC_Hour
    data[4] |= h % 10 + int(h / 10) * 16
    data[4] |= (RTC_Minute % 10 + int(RTC_Minute / 10) * 16) << 8
    data[4] |= (RTC_Second % 10 + int(RTC_Second / 10) * 16) << 16
    data[5] = Microphone
    data[6] = Touchpannel
    data[7] = Input ^ 0x2FFF

    s = """"
    for i in range(8):
        data[i] = struct.unpack("">L"", struct.pack(""<L"", data[i]))[0]
        s = s + f'{data[i]:08x}'

    sha1 = hashlib.sha1(bytes.fromhex(s)).hexdigest()

    seed = int(sha1[:8], 16)^int(sha1[8:16], 16)^int(sha1[16:24], 16)^int(sha1[24:32], 16)^int(sha1[32:40], 16)
    seed = struct.unpack("">L"", struct.pack(""<L"", seed))[0]

    if seed == 0x443B4723 or seed == 0x110813F0 or seed == 0x776E7A56 or seed == 0xAAA1AD89 or seed == 0xDDD4E0BC:
        print(""DATE:{}-{}-{} {:02}:{:02}:{:02}:000, SEED:{:08x}, DATA:{}"".
              format(RTC_Year, Month[RTC_Month], RTC_Day, RTC_Hour, RTC_Minute, RTC_Second, seed, s))
    if n % 100000000 == 0:
        print(""----"",n,""----"")

    RTC_Second += 1
    if RTC_Second > 59:
        RTC_Minute += 1
        RTC_Second = 0
        if RTC_Minute > 59:
            RTC_Hour += 1
            RTC_Minute = 0
            if RTC_Hour > 23:
                RTC_Day += 1
                RTC_Weekday = (RTC_Weekday + 1) % 7
                RTC_Hour = 0
                numday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
                if RTC_Year % 4 == 0:
                    numday[1] = 29
                if RTC_Day > numday[RTC_Month - 1]:
                    RTC_Month += 1
                    RTC_Day = 1
                    if RTC_Month > 12:
                        RTC_Year += 1
                        RTC_Month = 1
                        if RTC_Year > 2099:
                            break

print(""--- End. ---"")"
41ZnwawY,Multiline cmd with heredoc,enissay,Bash,Thursday 19th of October 2023 04:43:40 AM CDT," tee /tmp/file <<-EOF
  blah
  blah
EOF; ls /tmp/file;"
LF6nPxjB,Untitled,35657,C++,Thursday 19th of October 2023 04:39:35 AM CDT,"
#include <iostream>

using namespace std;

int main() {

	cout << ""=================================================================================\n"";
	cout << ""|\tX\t|\tY\t|\tX AND Y |\tX OR Y  |\tNOT X   |\n"";
	cout << ""=================================================================================\n"";
	cout << ""|\t0\t|\t0\t|\t0\t|\t0\t|\t1\t|\n"";
	cout << ""|\t0\t|\t1\t|\t0\t|\t1\t|\t1\t|\n"";
	cout << ""|\t1\t|\t0\t|\t0\t|\t1\t|\t0\t|\n"";
	cout << ""|\t1\t|\t1\t|\t1\t|\t1\t|\t0\t|\n"";
	cout << ""=================================================================================\n"";
}"
qHxFCUTM,lab8_1,roll22,C++,Thursday 19th of October 2023 03:49:12 AM CDT,"#include<iostream>
#include<list>
using namespace std;

class Graph {
    int V;
    list<int> *adj;

public:
    Graph(int V);
    void addEdge(int v, int w);
    void printVertexCover();
};

Graph::Graph(int V) {
    this->V = V;
    adj = new list<int>[V];
}

void Graph::addEdge(int v, int w) {
    adj[v].push_back(w);
    adj[w].push_back(v);
}

void Graph::printVertexCover() {
    bool visited[V];
    for (int i = 0; i < V; i++)
        visited[i] = false;

    list<int>::iterator i;

    for (int u = 0; u < V; u++) {
        if (visited[u] == false) {
            for (i = adj[u].begin(); i != adj[u].end(); ++i) {
                int v = *i;
                if (visited[v] == false) {
                    visited[v] = true;
                    visited[u] = true;
                    break;
                }
            }
        }
    }

    cout << ""Vertex Cover: "";
    for (int i = 0; i < V; i++)
        if (visited[i])
            cout << i << "" "";
    cout << endl;
}

int main() {
    Graph g(7);
    g.addEdge(0, 1);
    g.addEdge(0, 2);
    g.addEdge(1, 3);
    g.addEdge(3, 4);
    g.addEdge(4, 5);
    g.addEdge(5, 6);

    g.printVertexCover();

    return 0;
}
"
ycJzdHPE,snowybot handbreaker,coinwalk,JavaScript,Thursday 19th of October 2023 03:39:24 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((0.001).toFixed(8));
var burp = nudie;
var temple = (nudie*80);
var something = temple;
var dork = 8;
var taget = (smiley*200000);
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var weeman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>=woman)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart<=1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>weeman){
weeman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=weeman)) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<weeman)) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>=(something+temple)){
dork = dork*2;
something = something+temple;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 864);
}
get();"
iuyWYbKA,Play particle effect on water trigger,Staggart,C#,Thursday 19th of October 2023 02:59:12 AM CDT,"using UnityEngine;

//Note: The water object must have a BoxCollider attached to it with the ""Is Trigger"" box is checked.
//The object should also be on the ""Water"" layer.
public class WaterEntryEffect : MonoBehaviour
{
    [Header(""Leave this object unparented, so it can be positioned freely"")]
    public ParticleSystem entryEffect;

    void OnTriggerEnter(Collider collider)
    {
        //Trigger if other object is on the ""Water"" layer
        if (collider.gameObject.layer == 4)
        {
            // Position effect at current collision point and play
            // Effect should have simulation space set to ""World"" so it can be teleported freely
            entryEffect.transform.position = this.transform.position;
            entryEffect.Play();
        }
    }
}"
pWzj9B4Q,Untitled,asykur,JSON,Thursday 19th of October 2023 02:34:23 AM CDT,"""data"": [
    {
      ""sensor_name"": ""Essential Oil Diffuser"",
      ""sensor_serial"": ""41347566a4e57c931bd0"",
      ""sensor_brand"": ""tuya"",
      ""device_version"": null,
      ""device_local_ip"": null,
      ""ssid"": ""aidi60"",
      ""createdAt"": ""2023-10-16T06:57:50.000Z"",
      ""detailTuya"": {
        ""switchableDevice"": false,
        ""switchStatus"": null,
        ""active_time"": 1697439462,
        ""biz_type"": 368773,
        ""category"": ""jsq"",
        ""create_time"": 1692675878,
        ""icon"": ""smart/product_icon2/jsq_1.png"",
        ""id"": 5820,
        ""ip"": ""180.244.23.81"",
        ""lat"": """",
        ""local_key"": ""|xA:)8{Y<;Xk>XoC"",
        ""lon"": """",
        ""model"": ""香薰机公版"",
        ""name"": ""Essential Oil Diffuser"",
        ""online"": true,
        ""owner_id"": ""42059290"",
        ""product_id"": ""odcrjr2nxe1nrq8e"",
        ""product_name"": ""Essential Oil Diffuser"",
        ""status"": [
          
        ],
        ""sub"": false,
        ""time_zone"": ""+07:00"",
        ""uid"": ""az1622180179641bV7tm"",
        ""update_time"": 1697439467,
        ""uuid"": ""41347566a4e57c931bd0"",
        ""ndmain"": null,
        ""userId"": ""2127779"",
        ""device_serial"": ""41347566a4e57c931bd0"",
        ""device_brand"": ""tuya"",
        ""device_category"": ""jsq"",
        ""device_name"": ""Essential Oil Diffuser"",
        ""device_version"": null,
        ""device_local_ip"": null,
        ""device_product"": ""Essential Oil Diffuser"",
        ""disable_notification"": ""offline"",
        ""cloud_status"": {
          ""status"": ""disable""
        },
        ""cloud_location"": ""public"",
        ""referralCode"": null,
        ""autoPlay"": ""disable"",
        ""ssid"": ""aidi60"",
        ""createdAt"": ""2023-10-16T06:57:50.000Z"",
        ""updatedAt"": ""2023-10-16T06:57:50.000Z"",
        ""deletedAt"": null,
        ""video_analytic_status"": null,
        ""iconOn"": ""https://iot-ihsmart-images-public-stage.oss-ap-southeast-5.aliyuncs.com/tuya/icon/on/jsq.png"",
        ""iconOff"": ""https://iot-ihsmart-images-public-stage.oss-ap-southeast-5.aliyuncs.com/tuya/icon/off/jsq.png"",
        ""mac_address"": ""a4:e5:7c:93:1b:d0""
      }
    },"
159JuSGb,Curs 3 exemplu cu selectare biti,visoft,C,Thursday 19th of October 2023 01:55:16 AM CDT,"#include <stdio.h>
#include <stdlib.h>

int main()
{
    int numar = 2384 ;
    int masca = 4;
    int rezultat;
    rezultat = numar & masca;
    if (rezultat != 0){
        printf(""Bitul este 1\n"");
    }else{
        printf(""Bitul este 0\n"");
    }
    int rezultat_setare;
    rezultat_setare = numar | masca;
    printf(""Rezultat setare = %d"", rezultat_setare);
    //printf(""Hello world!\n"");
    return 0;
}
"
rF22Abar,awesome snowybot handbreaker slow cause ++,coinwalk,JavaScript,Thursday 19th of October 2023 01:15:53 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((0.001).toFixed(8));
var burp = nudie;
var something = (nudie*80);
var dork = 8;
var taget = (smiley*200000);
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>=woman)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart<=1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (bolance>=(something+(nudie*80))){
dork = dork*2;
something = parseFloat(bolance);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
ghL6MVcf,"Inlinekeyboard , two column keyboard with odd amount of buttons",Hitmare,PHP,Thursday 19th of October 2023 01:03:01 AM CDT,"		// $safetensors is my array with my values. code can be adapted for database useage.
		$switch = TRUE; // switch variable for even/odd value
    	$temparray = array(); //temporary array for building side by side keyboard row
    	$numItems = count($safetensors) - 1; //count how many elements there are 
    	$inline_keyboard = new InlineKeyboard([]); //array for the inlinekeyboard itself
        $elements = 1; // this is optional. tracking how many buttons there are already to keep keyboard short. for menu system
    	foreach ($safetensors as $key => $lora) {
            
        	if ($switch) { //checking if $switch is true. if yes, first (left) button is created and put into the $temparray. 
            	$temparray[0] = ['text' => $lora, 'callback_data' => ""lora-"" . $lora];
            	$switch = FALSE; //setting $switch to false for next iteration
        	}
        	else { //if Switch is false, 2nd (right) button is created and put into $temparray
            	$temparray[1] = ['text' => $lora, 'callback_data' => ""lora-"" . $lora];
            	$switch = TRUE;
            	$inline_keyboard->addRow($temparray[0], $temparray[1]); //adding both buttons into $inline_keyboard 
            	$temparray = array(); //clearing $temparray for next buttons
            }
        	if ($key == $numItems and count($temparray) > 0) { //check if last item is reached and if $temparray has still items left. If an odd amount of emelents are in the array, only one item is left in $temparray. 
            	$inline_keyboard->addRow($temparray[0]); // adding last single button to the inline keyboard
            }
            $elements++; //optional , increment $elements by one
            if ($elements == 50) { break; }; //if $elements limit is reach, stop foreach loop
        }"
tWbCSc53,atari antic F display list,EugeneBB,6502 TASM/64TASS,Thursday 19th of October 2023 12:46:41 AM CDT,"; ANTIC F 320x192 + Wide Bit -> 256x192
; Display List

    org $2000

SDLSTL = $0230 ; Display List starting address
screen = $4000 ; Screen buffer
scrru  = screen + 31 ; Right Up Corner
scrld  = screen + 191 * 32 ; Left Down Corner
scrrd  = screen + 191 * 32 + 31 ; Right Down Corner
NP32chr = 61  ; Narrow playfield (32 bytes/chars)
SDMCTL  = $022F ; https://atariwiki.org/wiki/Wiki.jsp?page=SDMCTL
blank8 = $70 ; 8 blank lines
anticF = $F  ; ANTIC F mode
lms    = $40 ; Load memory scan
jvb    = $41 ; Jump while vertical blank

; Color registers
cr_BG  = 710 ; screen background

; Load Display List
    mwa #dlist SDLSTL

; Main
    lda #0
    sta cr_BG ; set screen backgroud to BLACK
    lda #NP32chr
    sta SDMCTL ; set 32 byte wide screen

    lda #$FF
    sta screen
    sta scrld
    sta scrrd
    sta scrru ; set 4 ""points"" of screen square corners up left/right and down left/right

    jmp *

; Display List

dlist
    .byte blank8, blank8, blank8
; $4000 address border (start of screen memory)
    .byte anticF + lms, <screen, >screen
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF
; $5000 address border (start of screen memory in new 4K block)
; to calculate this line -> 4096*5=20480, this is 124 screen line of 32 byte per line
; below this line 125 screen line starts and use +lms and 2 bytes address of new screen
; position of $5000
    .byte anticF + lms, <($5000), >($5000)
    .byte anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF, anticF
    .byte anticF, anticF
    .byte jvb, <dlist, >dlist"
nZc31SwV,snowybot handbreaker,coinwalk,JavaScript,Thursday 19th of October 2023 12:41:51 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((0.001).toFixed(8));
var burp = nudie;
var dork = ((smiley/nudie)/4);
var taget = (smiley*200000);
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>woman)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart==1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
v8EKGarV,awesome snowybot handbreaker slow cause ++,coinwalk,JavaScript,Thursday 19th of October 2023 12:25:14 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((0.001).toFixed(8));
var burp = nudie;
var dork = ((smiley/nudie)/4);
var taget = (smiley*5);
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>woman)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart==1)){
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)&&(fart!=1)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bolance-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if (((smiley-burp)<=(burp*dork))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 3;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    dork = (((parseFloat(bolance))/nudie)/4);
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
uHz5v9rN,Untitled,Abdoto,C#,Wednesday 18th of October 2023 10:05:23 PM CDT,"public static class ResultExtension
{
    public static IActionResult ToActionResult<T>(this Result<T> result)
    {
        return result.Error switch
        {
            BadRequestError badRequestError => 
                new ObjectResult(new { badRequestError.Message }) { StatusCode = 400 },
            AuthenticationError authenticationError => 
                new ObjectResult(new { authenticationError.Message }) { StatusCode = 401 },
            DbEntityExistsError dbEntityExistsError => 
                new ObjectResult(new { dbEntityExistsError.Message }) { StatusCode = 409 },
            DbEntityNotFoundError dbEntityNotFoundError => 
                new ObjectResult(new { dbEntityNotFoundError.Message }) { StatusCode = 404 },
            ForbiddenError forbiddenError =>
                new ObjectResult(new { forbiddenError.Message }) {StatusCode = 403},
			
            _ => new ObjectResult(result.Value) { StatusCode = 200 }
        };
    }
}"
hUxvx1QS,Untitled,Abdoto,C#,Wednesday 18th of October 2023 10:04:04 PM CDT,"public static class ResultExtension
{
    public static IActionResult ToActionResult<T>(this IResult<T, Error>result)
    {
        var objectResult = GenerateFromResponse(result);

        return objectResult;
    }

    private static ObjectResult GenerateFromResponse<T>(IResult<T, Error> response)
    {
        var objectResult = new ObjectResult(response);
        var statusCode = (int?)response.StatusCode;
        objectResult.StatusCode = statusCode;

        return objectResult;
    }
}"
kqkz2ge7,Mute Button Script(ImageButton),Pluem1273,Lua,Wednesday 18th of October 2023 08:17:05 PM CDT,"local btn = script.Parent:FindFirstChild(""MuteBtn"")
local music = game.Workspace:WaitForChild(""Music"")

local MuteImage = ""rbxassetid://299432421""
local UnMuteImage = ""rbxassetid://166376559""

local isPlaying = true

btn.MouseButton1Click:Connect(function()
	if isPlaying == true then
		music:Pause()
		isPlaying = false
		btn.Image = MuteImage
	else
		music:Play()
		isPlaying = true
		btn.Image = UnMuteImage
	end
end)"
E41SrhQk,Mute Button Script(TextButton),Pluem1273,Lua,Wednesday 18th of October 2023 08:09:19 PM CDT,"local btn = script.Parent:FindFirstChild(""MuteBtn"")

local music = game.Workspace:WaitForChild(""Music"")

local isPlaying = true

btn.MouseButton1Click:Connect(function()
	if isPlaying == true then
		music:Pause()
		isPlaying = false
		btn.Text = ""UnMute""
	else
		music:Play()
		isPlaying = true
		btn.Text = ""Mute""
	end
end)"
VxbMKYfA,broh41's Data,azimuths,JSON,Wednesday 18th of October 2023 07:54:52 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lightning Elbow""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""678""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Cloak""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lariat""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3129""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""87""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""36""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Beast Lariat""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""249""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""196""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken Fan""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""169""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""199""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1697670275""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Liger Bomb""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""z""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Triple Kick""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Thundering Slam""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""broh41""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""581""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""broh41(12)574939""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""219""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Seismic Kick""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-20""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""163""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lightning Drop""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""808""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2083""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kage""}},""Skilltree"":{""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Cloak 2"":{""ObjectName"":""Lightning Cloak 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Self Heal"":{""ObjectName"":""Self Heal"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lariat"":{""ObjectName"":""Lariat"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Cherry Blossom Impact"":{""ObjectName"":""Cherry Blossom Impact"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Self Heal 2"":{""ObjectName"":""Self Heal 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Cloak"":{""ObjectName"":""Lightning Cloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Liger Bomb"":{""ObjectName"":""Liger Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Fan"":{""ObjectName"":""Shuriken Fan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
TrHgRpsi,GTA5 Deluxo CWeaponInfo 'VEHICLE_WEAPON_DELUXO_MISSILE',bobmarley12345,C#,Wednesday 18th of October 2023 07:54:02 PM CDT,"using System;
using System.Diagnostics;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using VWeaponUtil.Utils;

namespace VWeaponUtil.ConsoleTesting {
    internal class Program {
        public class MEM64 {
            [DllImport(""kernel32.dll"")]
            public static extern int WriteProcessMemory(IntPtr Handle, long Address, byte[] buffer, int Size, int BytesWritten = 0);

            [DllImport(""kernel32.dll"")]
            public static extern int ReadProcessMemory(IntPtr Handle, long Address, byte[] buffer, int Size, int BytesRead = 0);

            [DllImport(""kernel32.dll"", EntryPoint = ""ReadProcessMemory"")]
            public static extern unsafe int ReadProcessMemory_Unsafe(IntPtr hProcess, long address, byte* buffer, int bufferSize, int bytesRead = 0);

            public static unsafe long ToInt64(byte[] value, int startIndex) {
                fixed (byte* numPtr = &value[startIndex]) {
                    return *(long*) numPtr;
                }
            }

            public static unsafe long GetPointerAddress(IntPtr hProcess, long pointer, int[] offsets = null) {
                // pointer should contain the BaseAddress of the module being targeted
                if (offsets == null || offsets.Length < 1) {
                    return pointer;
                }

                byte* buf = stackalloc byte[8];
                ReadProcessMemory_Unsafe(hProcess, pointer, buf, 8);
                for (int i = 0, j = offsets.Length - 1; i < j; i++) {
                    pointer = *(long*) buf + offsets[i];
                    ReadProcessMemory_Unsafe(hProcess, pointer, buf, 8);
                }

                pointer = *(long*) buf + offsets[offsets.Length - 1];
                return pointer;
            }

            public static void WriteBytes(IntPtr hProcess, long Address, byte[] Bytes) {
                WriteProcessMemory(hProcess, Address, Bytes, Bytes.Length);
            }

            public static void WriteFloat(IntPtr hProcess, long Address, float Value) {
                WriteProcessMemory(hProcess, Address, BitConverter.GetBytes(Value), 4);
            }

            public static void WriteDouble(IntPtr hProcess, long Address, double Value) {
                WriteProcessMemory(hProcess, Address, BitConverter.GetBytes(Value), 8);
            }

            public static void WriteInteger(IntPtr hProcess, long Address, int Value, int size) {
                WriteProcessMemory(hProcess, Address, BitConverter.GetBytes(Value), size);
            }

            public static void WriteString(IntPtr hProcess, long Address, string String) {
                byte[] Buffer = new ASCIIEncoding().GetBytes(String);
                WriteProcessMemory(hProcess, Address, Buffer, Buffer.Length);
            }

            public static byte[] ReadBytes(IntPtr hProcess, long Address, int Length) {
                byte[] Buffer = new byte[Length];
                ReadProcessMemory(hProcess, Address, Buffer, Length);
                return Buffer;
            }

            public static float ReadFloat(IntPtr hProcess, long Address) {
                byte[] Buffer = new byte[4];
                ReadProcessMemory(hProcess, Address, Buffer, 4);
                return BitConverter.ToSingle(Buffer, 0);
            }

            public static double ReadDouble(IntPtr hProcess, long Address) {
                byte[] Buffer = new byte[8];
                ReadProcessMemory(hProcess, Address, Buffer, 8);
                return BitConverter.ToDouble(Buffer, 0);
            }

            public static int ReadInteger(IntPtr hProcess, long Address, int Length) {
                byte[] Buffer = new byte[Length];
                ReadProcessMemory(hProcess, Address, Buffer, Length);
                return BitConverter.ToInt32(Buffer, 0);
            }

            public static string ReadString(IntPtr hProcess, long Address, int size) {
                byte[] Buffer = new byte[size];
                ReadProcessMemory(hProcess, Address, Buffer, size);
                return new ASCIIEncoding().GetString(Buffer);
            }

            public static long ReadPointer(IntPtr hProcess, long Address) {
                byte[] Buffer = new byte[8];
                ReadProcessMemory(hProcess, Address, Buffer, Buffer.Length);
                return BitConverter.ToInt64(Buffer, 0);
            }
        }

        public readonly struct PointerOffset {
            public readonly long baseAddress;
            public readonly int[] offsets;
            public readonly int trailOffset;

            public PointerOffset(long baseAddress, int[] offsets, int trailingOffset = 0) {
                this.baseAddress = baseAddress;
                this.offsets = offsets;
                this.trailOffset = trailingOffset;
            }

            public PointerOffset(PointerOffset offset, int trailingOffset = 0) : this(offset.baseAddress, offset.offsets, trailingOffset) {
            }

            /// <summary>
            /// Gets the address of the underlying pointer. A value may be readable from the returned address
            /// </summary>
            /// <param name=""hProcess"">The target process</param>
            /// <param name=""hProcessBaseAddress"">The process' base address</param>
            /// <returns>An address in which this offset points to, relative to the given process and base address</returns>
            public long GetPointerAddress(IntPtr hProcess, long hProcessBaseAddress) {
                return MEM64.GetPointerAddress(hProcess, hProcessBaseAddress + this.baseAddress, this.offsets) - this.trailOffset;
            }
        }

        public static readonly PointerOffset AWT_POINTER_1               = new PointerOffset(0x2949870, new int[] {0xA40, 0x150});
        public static readonly PointerOffset DELUXO_CWEAPON_INFO_MISSILE = new PointerOffset(AWT_POINTER_1, 0x150);
        public static readonly PointerOffset AWT_POINTER_2               = new PointerOffset(0x2949850, new int[] {0x2D0, 0x978, 0x18, 0x150});

        static Program() {
        }

        static void Main(string[] args) {
            Console.WriteLine(""Opening GTA5 process..."");
            Process process = null;
            try {
                process = Process.GetProcessesByName(""GTA5"").FirstOrDefault();
                if (process == null) {
                    Console.WriteLine(""Could not find GTA5 proces"");
                    return;
                }

                IntPtr hProcess = process.Handle;
                ProcessModule module = process.Modules[0];
                long hProcessBaseAddress = module.BaseAddress.ToInt64();
                {
                    long ptr = AWT_POINTER_1.GetPointerAddress(hProcess, hProcessBaseAddress);
                    float value = MEM64.ReadFloat(hProcess, ptr);
                    Console.WriteLine(""Deluxo Alternate Wait Time value: "" + value);
                }

                {
                    long cWeaponInfoAddress = DELUXO_CWEAPON_INFO_MISSILE.GetPointerAddress(hProcess, hProcessBaseAddress);

                    unsafe {
                        byte[] x = MEM64.ReadBytes(hProcess, cWeaponInfoAddress, sizeof(CWeaponInfo));
                        fixed (byte* ptr = x) {
                            CWeaponInfo weaponInfo = *(CWeaponInfo*) ptr;
                            Console.WriteLine(weaponInfo.ToString());
                        }
                    }
                }

                module.Dispose();
            }
            catch (Exception e) {
                Console.WriteLine(""Exception doing shit: "" + e.GetToString());
            }
            finally {
                try {
                    Console.WriteLine(""Disposing process..."");
                    process?.Dispose();
                }
                catch (Exception e) {
                    Console.WriteLine(""Failed to close process: "" + e.GetToString());
                }
            }
        }
    }
}"
RarY2x7d,Roblox Kick Gui Admin Panel [2023],Free-Scripts,Lua,Wednesday 18th of October 2023 07:37:04 PM CDT,"require(15106665151).kickgui(""username"") --> Replace ""username"" with your name

"
Ex8KVhaC,Bigger and smaller number! PYTHON,estefani-adriano,Python,Wednesday 18th of October 2023 07:26:07 PM CDT,"# Bigger and smaller number!

n1 = int(input('Enter the first number: '))
n2 = int(input('Enter the second number: '))
n3 = int(input('Enter the third number: '))
color = {'nothing' : '\033[m', 'green' : '\033[4;32m', 'yellow' : '\033[4;33m'}

smaller= n1
if (n2 > n1 and n2 > n3):
	smaller = n2
if (n3 > n1 and n3 > n2):
	smaller = n3

bigger = n1
if (n2 < n1 and n2 < n3):
    bigger = n2
if (n3 < n1 and n3 < n2):
    bigger = n3

print('{}The number {} is the biggest!{}'.format(color['green'], bigger, color['nothing']))
print('{}The number {} is the smallest!{}'.format(color['yellow'], smaller, color['nothing']))

#by: Estéfani =D"
aMKyLmn6,2023-10-18_stats.json,rdp_snitch,JSON,Wednesday 18th of October 2023 07:18:15 PM CDT,"{
  ""ip"": {
    ""138.94.58.182"": 126,
    ""120.132.17.153"": 15,
    ""62.162.31.243"": 501,
    ""62.162.31.244"": 408,
    ""185.166.27.110"": 372,
    ""200.152.67.46"": 147,
    ""92.204.139.79"": 117,
    ""194.187.176.196"": 3,
    ""201.93.165.53"": 39,
    ""106.116.169.71"": 6,
    ""168.138.149.190"": 69,
    ""36.108.169.132"": 24,
    ""128.14.141.34"": 12,
    ""62.204.41.146"": 18,
    ""205.210.31.86"": 9,
    ""87.251.75.145"": 6,
    ""45.143.201.62"": 15,
    ""190.93.152.18"": 12,
    ""141.98.11.128"": 9,
    ""167.94.146.57"": 3,
    ""185.170.144.3"": 6,
    ""185.170.144.113"": 6,
    ""87.251.75.120"": 3,
    ""167.248.133.33"": 3,
    ""198.235.24.47"": 9,
    ""200.152.69.133"": 21,
    ""185.190.24.101"": 3,
    ""58.218.204.183"": 3,
    ""47.254.76.136"": 9,
    ""141.98.81.155"": 3,
    ""144.76.225.110"": 3,
    ""62.122.184.165"": 12,
    ""101.36.97.187"": 3,
    ""188.119.66.107"": 3,
    ""85.209.11.111"": 9,
    ""198.235.24.115"": 9,
    ""111.61.253.55"": 3,
    ""87.251.75.64"": 3,
    ""43.154.155.89"": 105,
    ""43.129.16.3"": 114,
    ""43.155.85.14"": 93,
    ""43.128.72.64"": 120,
    ""43.156.43.206"": 240,
    ""43.133.65.18"": 183,
    ""43.155.166.181"": 195,
    ""43.159.194.155"": 99,
    ""43.154.192.179"": 273,
    ""43.155.152.153"": 306,
    ""43.154.237.68"": 195,
    ""43.154.135.111"": 180,
    ""101.32.186.133"": 171,
    ""43.155.111.216"": 126,
    ""43.134.225.130"": 90,
    ""43.163.227.133"": 147,
    ""43.155.109.12"": 117,
    ""43.155.153.186"": 216,
    ""43.163.220.57"": 192,
    ""43.155.70.52"": 111,
    ""43.154.220.248"": 129,
    ""43.159.198.38"": 177,
    ""43.143.129.124"": 81,
    ""43.155.181.194"": 225,
    ""43.131.254.81"": 156,
    ""103.170.247.70"": 207,
    ""43.134.228.116"": 303,
    ""43.163.225.68"": 156,
    ""43.155.86.67"": 84,
    ""43.128.71.173"": 114,
    ""43.163.231.154"": 135,
    ""43.154.212.184"": 90,
    ""43.155.157.40"": 231,
    ""109.107.183.230"": 9,
    ""152.89.198.133"": 6,
    ""207.90.244.3"": 3,
    ""98.143.255.25"": 18,
    ""178.21.163.70"": 6,
    ""198.235.24.37"": 9,
    ""20.127.65.148"": 6
  },
  ""asn"": {
    ""AS263749"": 126,
    ""AS140292"": 15,
    ""AS6821"": 909,
    ""AS207097"": 372,
    ""AS14463"": 168,
    ""AS398108"": 117,
    ""AS208843"": 3,
    ""AS27699"": 39,
    ""AS4134"": 9,
    ""AS31898"": 69,
    ""AS137695"": 24,
    ""AS21859"": 12,
    ""AS59425"": 18,
    ""AS396982"": 36,
    ""AS208091"": 12,
    ""AS210950"": 15,
    ""AS19429"": 12,
    ""AS209605"": 9,
    ""AS398705"": 3,
    ""AS197414"": 12,
    ""AS398722"": 3,
    ""AS211632"": 3,
    ""AS45102"": 9,
    ""AS209588"": 3,
    ""AS24940"": 3,
    ""AS57523"": 30,
    ""AS135377"": 3,
    ""AS24547"": 3,
    ""AS132203"": 5073,
    ""AS45090"": 81,
    ""AS150698"": 207,
    ""AS213369"": 9,
    ""AS174"": 3,
    ""AS3367"": 18,
    ""AS21419"": 6,
    ""AS8075"": 6
  },
  ""isp"": {
    ""Junta Administrativa del Servicio El\u00e9ctrico Municipal de Cartago"": 126,
    ""Addresses CNNIC"": 15,
    ""31klasa"": 909,
    ""Online Company for Technological Information, Supply of Electronic Equipment an"": 372,
    ""Grupo Tdkom"": 168,
    ""GoDaddy.com, LLC"": 117,
    ""Alpha Strike Labs GmbH"": 3,
    ""Vivo"": 39,
    ""Chinanet"": 9,
    ""Oracle Corporation"": 69,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 24,
    ""Zenlayer Inc"": 12,
    ""Horizon LLC"": 18,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 24,
    ""TOV E-RISHENNYA"": 15,
    ""ETB - Colombia"": 12,
    ""UAB Host Baltic"": 9,
    ""Censys, Inc."": 6,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Alibaba.com LLC"": 9,
    ""Flyservers S.A."": 3,
    ""Hetzner Online GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 30,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile communications corporation"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 4179,
    ""Aceville Pte.ltd"": 975,
    ""INTERNETVENO"": 207,
    ""Cloud assets LLC"": 9,
    ""Cogent Communications"": 3,
    ""Xplornet Communications Inc."": 18,
    ""Pishtaze E Jadid Infomration Company"": 6,
    ""Microsoft Corporation"": 6
  },
  ""org"": {
    ""Unknown"": 2547,
    ""Grupo Tdkom"": 168,
    ""Alpha Strike Labs GmbH"": 3,
    ""TELEF\ufffdNICA BRASIL S.A"": 39,
    ""Chinanet HE"": 6,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 69,
    ""Chinanet ZJ"": 24,
    ""ZENLA"": 12,
    ""Horizon LLC"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 12,
    ""TOV VAIZ PARTNER"": 15,
    ""ETB - Colombia"": 12,
    ""Censys, Inc."": 6,
    ""Xhostis"": 12,
    ""Tribeka Web Advisors S.A"": 3,
    ""Chinanet JS"": 3,
    ""ALICLOUD-US"": 9,
    ""Flyservers S.A"": 3,
    ""Hetzner"": 3,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Ucloud Information Technology"": 3,
    ""China Mobile"": 3,
    ""Tencent Cloud Computing"": 3468,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 711,
    ""Internet Khong Trung Company"": 207,
    ""Cloud assets LLC"": 9,
    ""Starcrecium Limited"": 6,
    ""SHODAN, LLC"": 3,
    ""Microsoft Azure Cloud (eastus)"": 6
  },
  ""regionName"": {
    ""Cartago Province"": 126,
    ""Beijing"": 96,
    ""Grad Skopje"": 909,
    ""Sulaymaniyah"": 372,
    ""Sao Paulo"": 276,
    ""Virginia"": 123,
    ""Land Berlin"": 3,
    ""Hebei"": 9,
    ""Zhejiang"": 24,
    ""California"": 57,
    ""Moscow"": 57,
    ""England"": 15,
    ""Kyiv City"": 15,
    ""Bogota D.C."": 12,
    ""Kaunas"": 9,
    ""Hesse"": 3,
    ""North Holland"": 12,
    ""Michigan"": 3,
    ""Mariehamns stad"": 3,
    ""Jiangsu"": 3,
    ""Drenthe"": 3,
    ""Saxony"": 3,
    ""Central and Western District"": 2064,
    ""North West"": 474,
    ""Seoul"": 1512,
    ""Central Singapore"": 393,
    ""Tokyo"": 630,
    ""Ho Chi Minh"": 207,
    ""Texas"": 3,
    ""New Brunswick"": 18,
    ""Tehran"": 6
  },
  ""country"": {
    ""Costa Rica"": 126,
    ""China"": 132,
    ""North Macedonia"": 909,
    ""Iraq"": 372,
    ""Brazil"": 276,
    ""United States"": 186,
    ""Germany"": 9,
    ""Russia"": 57,
    ""United Kingdom"": 15,
    ""Ukraine"": 15,
    ""Colombia"": 12,
    ""Lithuania"": 9,
    ""Netherlands"": 15,
    ""Aland Islands"": 3,
    ""Hong Kong"": 2064,
    ""Singapore"": 867,
    ""South Korea"": 1512,
    ""Japan"": 630,
    ""Vietnam"": 207,
    ""Canada"": 18,
    ""Iran"": 6
  },
  ""account"": {
    ""142.93.8.59"": 7206,
    ""user"": 3,
    ""(empty)"": 15,
    ""odzi3m16"": 12,
    ""Test"": 6,
    ""KuxRWurwR"": 3,
    ""VsZBeg"": 3,
    ""uZLNEh"": 3,
    ""Administr"": 60,
    ""hello"": 51,
    ""Domain"": 45,
    ""tdwfhMZWf"": 3,
    ""CPOSMi"": 3,
    ""ioWsjq"": 3,
    ""Administrator"": 3,
    ""IvTlftBhq"": 3,
    ""KeTPvB"": 3,
    ""GyCfPY"": 3,
    ""root"": 3,
    ""VHJzVvYoa"": 3,
    ""xWoeiq"": 3,
    ""ZMSCXF"": 3
  },
  ""keyboard"": {
    ""Unknown"": 7440
  },
  ""client_build"": {
    ""Unknown"": 7440
  },
  ""client_name"": {
    ""Unknown"": 7440
  },
  ""ip_type"": {
    ""Unknown"": 2175,
    ""proxy"": 21,
    ""hosting"": 5211,
    ""mobile"": 33
  }
}"
KUmiH35R,2023-10-18_stats.json,rdp_snitch,JSON,Wednesday 18th of October 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""138.94.58.182"": 84,
    ""120.132.17.153"": 10,
    ""62.162.31.243"": 334,
    ""62.162.31.244"": 272,
    ""185.166.27.110"": 248,
    ""200.152.67.46"": 98,
    ""92.204.139.79"": 78,
    ""194.187.176.196"": 2,
    ""201.93.165.53"": 26,
    ""106.116.169.71"": 4,
    ""168.138.149.190"": 46,
    ""36.108.169.132"": 16,
    ""128.14.141.34"": 8,
    ""62.204.41.146"": 12,
    ""205.210.31.86"": 6,
    ""87.251.75.145"": 4,
    ""45.143.201.62"": 10,
    ""190.93.152.18"": 8,
    ""141.98.11.128"": 6,
    ""167.94.146.57"": 2,
    ""185.170.144.3"": 4,
    ""185.170.144.113"": 4,
    ""87.251.75.120"": 2,
    ""167.248.133.33"": 2,
    ""198.235.24.47"": 6,
    ""200.152.69.133"": 14,
    ""185.190.24.101"": 2,
    ""58.218.204.183"": 2,
    ""47.254.76.136"": 6,
    ""141.98.81.155"": 2,
    ""144.76.225.110"": 2,
    ""62.122.184.165"": 8,
    ""101.36.97.187"": 2,
    ""188.119.66.107"": 2,
    ""85.209.11.111"": 6,
    ""198.235.24.115"": 6,
    ""111.61.253.55"": 2,
    ""87.251.75.64"": 2,
    ""43.154.155.89"": 70,
    ""43.129.16.3"": 76,
    ""43.155.85.14"": 62,
    ""43.128.72.64"": 80,
    ""43.156.43.206"": 160,
    ""43.133.65.18"": 122,
    ""43.155.166.181"": 130,
    ""43.159.194.155"": 66,
    ""43.154.192.179"": 182,
    ""43.155.152.153"": 204,
    ""43.154.237.68"": 130,
    ""43.154.135.111"": 120,
    ""101.32.186.133"": 114,
    ""43.155.111.216"": 84,
    ""43.134.225.130"": 60,
    ""43.163.227.133"": 98,
    ""43.155.109.12"": 78,
    ""43.155.153.186"": 144,
    ""43.163.220.57"": 128,
    ""43.155.70.52"": 74,
    ""43.154.220.248"": 86,
    ""43.159.198.38"": 118,
    ""43.143.129.124"": 54,
    ""43.155.181.194"": 150,
    ""43.131.254.81"": 104,
    ""103.170.247.70"": 138,
    ""43.134.228.116"": 202,
    ""43.163.225.68"": 104,
    ""43.155.86.67"": 56,
    ""43.128.71.173"": 76,
    ""43.163.231.154"": 90,
    ""43.154.212.184"": 60,
    ""43.155.157.40"": 154,
    ""109.107.183.230"": 6,
    ""152.89.198.133"": 4,
    ""207.90.244.3"": 2,
    ""98.143.255.25"": 12,
    ""178.21.163.70"": 4,
    ""198.235.24.37"": 6,
    ""20.127.65.148"": 4
  },
  ""asn"": {
    ""AS263749"": 84,
    ""AS140292"": 10,
    ""AS6821"": 606,
    ""AS207097"": 248,
    ""AS14463"": 112,
    ""AS398108"": 78,
    ""AS208843"": 2,
    ""AS27699"": 26,
    ""AS4134"": 6,
    ""AS31898"": 46,
    ""AS137695"": 16,
    ""AS21859"": 8,
    ""AS59425"": 12,
    ""AS396982"": 24,
    ""AS208091"": 8,
    ""AS210950"": 10,
    ""AS19429"": 8,
    ""AS209605"": 6,
    ""AS398705"": 2,
    ""AS197414"": 8,
    ""AS398722"": 2,
    ""AS211632"": 2,
    ""AS45102"": 6,
    ""AS209588"": 2,
    ""AS24940"": 2,
    ""AS57523"": 20,
    ""AS135377"": 2,
    ""AS24547"": 2,
    ""AS132203"": 3382,
    ""AS45090"": 54,
    ""AS150698"": 138,
    ""AS213369"": 6,
    ""AS174"": 2,
    ""AS3367"": 12,
    ""AS21419"": 4,
    ""AS8075"": 4
  },
  ""isp"": {
    ""Junta Administrativa del Servicio El\u00e9ctrico Municipal de Cartago"": 84,
    ""Addresses CNNIC"": 10,
    ""31klasa"": 606,
    ""Online Company for Technological Information, Supply of Electronic Equipment an"": 248,
    ""Grupo Tdkom"": 112,
    ""GoDaddy.com, LLC"": 78,
    ""Alpha Strike Labs GmbH"": 2,
    ""Vivo"": 26,
    ""Chinanet"": 6,
    ""Oracle Corporation"": 46,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 16,
    ""Zenlayer Inc"": 8,
    ""Horizon LLC"": 12,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 16,
    ""TOV E-RISHENNYA"": 10,
    ""ETB - Colombia"": 8,
    ""UAB Host Baltic"": 6,
    ""Censys, Inc."": 4,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Alibaba.com LLC"": 6,
    ""Flyservers S.A."": 2,
    ""Hetzner Online GmbH"": 2,
    ""Chang Way Technologies Co. Limited"": 20,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile communications corporation"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2786,
    ""Aceville Pte.ltd"": 650,
    ""INTERNETVENO"": 138,
    ""Cloud assets LLC"": 6,
    ""Cogent Communications"": 2,
    ""Xplornet Communications Inc."": 12,
    ""Pishtaze E Jadid Infomration Company"": 4,
    ""Microsoft Corporation"": 4
  },
  ""org"": {
    ""Unknown"": 1698,
    ""Grupo Tdkom"": 112,
    ""Alpha Strike Labs GmbH"": 2,
    ""TELEF\ufffdNICA BRASIL S.A"": 26,
    ""Chinanet HE"": 4,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 46,
    ""Chinanet ZJ"": 16,
    ""ZENLA"": 8,
    ""Horizon LLC"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 8,
    ""TOV VAIZ PARTNER"": 10,
    ""ETB - Colombia"": 8,
    ""Censys, Inc."": 4,
    ""Xhostis"": 8,
    ""Tribeka Web Advisors S.A"": 2,
    ""Chinanet JS"": 2,
    ""ALICLOUD-US"": 6,
    ""Flyservers S.A"": 2,
    ""Hetzner"": 2,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Ucloud Information Technology"": 2,
    ""China Mobile"": 2,
    ""Tencent Cloud Computing"": 2312,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 474,
    ""Internet Khong Trung Company"": 138,
    ""Cloud assets LLC"": 6,
    ""Starcrecium Limited"": 4,
    ""SHODAN, LLC"": 2,
    ""Microsoft Azure Cloud (eastus)"": 4
  },
  ""regionName"": {
    ""Cartago Province"": 84,
    ""Beijing"": 64,
    ""Grad Skopje"": 606,
    ""Sulaymaniyah"": 248,
    ""Sao Paulo"": 184,
    ""Virginia"": 82,
    ""Land Berlin"": 2,
    ""Hebei"": 6,
    ""Zhejiang"": 16,
    ""California"": 38,
    ""Moscow"": 38,
    ""England"": 10,
    ""Kyiv City"": 10,
    ""Bogota D.C."": 8,
    ""Kaunas"": 6,
    ""Hesse"": 2,
    ""North Holland"": 8,
    ""Michigan"": 2,
    ""Mariehamns stad"": 2,
    ""Jiangsu"": 2,
    ""Drenthe"": 2,
    ""Saxony"": 2,
    ""Central and Western District"": 1376,
    ""North West"": 316,
    ""Seoul"": 1008,
    ""Central Singapore"": 262,
    ""Tokyo"": 420,
    ""Ho Chi Minh"": 138,
    ""Texas"": 2,
    ""New Brunswick"": 12,
    ""Tehran"": 4
  },
  ""country"": {
    ""Costa Rica"": 84,
    ""China"": 88,
    ""North Macedonia"": 606,
    ""Iraq"": 248,
    ""Brazil"": 184,
    ""United States"": 124,
    ""Germany"": 6,
    ""Russia"": 38,
    ""United Kingdom"": 10,
    ""Ukraine"": 10,
    ""Colombia"": 8,
    ""Lithuania"": 6,
    ""Netherlands"": 10,
    ""Aland Islands"": 2,
    ""Hong Kong"": 1376,
    ""Singapore"": 578,
    ""South Korea"": 1008,
    ""Japan"": 420,
    ""Vietnam"": 138,
    ""Canada"": 12,
    ""Iran"": 4
  },
  ""account"": {
    ""142.93.8.59"": 4804,
    ""user"": 2,
    ""(empty)"": 10,
    ""odzi3m16"": 8,
    ""Test"": 4,
    ""KuxRWurwR"": 2,
    ""VsZBeg"": 2,
    ""uZLNEh"": 2,
    ""Administr"": 40,
    ""hello"": 34,
    ""Domain"": 30,
    ""tdwfhMZWf"": 2,
    ""CPOSMi"": 2,
    ""ioWsjq"": 2,
    ""Administrator"": 2,
    ""IvTlftBhq"": 2,
    ""KeTPvB"": 2,
    ""GyCfPY"": 2,
    ""root"": 2,
    ""VHJzVvYoa"": 2,
    ""xWoeiq"": 2,
    ""ZMSCXF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 4960
  },
  ""client_build"": {
    ""Unknown"": 4960
  },
  ""client_name"": {
    ""Unknown"": 4960
  },
  ""ip_type"": {
    ""Unknown"": 1450,
    ""proxy"": 14,
    ""hosting"": 3474,
    ""mobile"": 22
  }
}"
FVg3aUDS,News Oct18 23,Newscaster_Ned,Email,Wednesday 18th of October 2023 07:15:13 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎,‎ ‎g‎u‎y‎s‎.‎

P‎r‎i‎t‎z‎k‎e‎r‎ ‎L‎a‎u‎n‎c‎h‎e‎s‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎N‎o‎n‎p‎r‎o‎f‎i‎t‎ ‎t‎o‎ ‎C‎o‎m‎b‎a‎t‎ ‎'‎R‎i‎g‎h‎t‎-‎W‎i‎n‎g‎ ‎E‎x‎t‎r‎e‎m‎i‎s‎t‎s‎'‎
W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎G‎O‎P‎ ‎P‎a‎s‎s‎e‎s‎ ‎B‎i‎l‎l‎ ‎P‎r‎o‎t‎e‎c‎t‎i‎n‎g‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎ ‎f‎r‎o‎m‎ ‎T‎r‎a‎n‎s‎ ‎P‎r‎o‎c‎e‎d‎u‎r‎e‎s‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎D‎e‎m‎a‎n‎d‎ ‎B‎i‎d‎e‎n‎ ‎B‎r‎e‎a‎k‎ ‎S‎i‎l‎e‎n‎c‎e‎ ‎o‎n‎ ‎I‎m‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎
S‎e‎n‎a‎t‎o‎r‎s‎ ‎C‎a‎l‎l‎ ‎o‎n‎ ‎B‎i‎d‎e‎n‎ ‎t‎o‎ ‎F‎o‎r‎m‎a‎l‎l‎y‎ ‎F‎r‎e‎e‎z‎e‎ ‎$‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎R‎a‎n‎s‎o‎m‎ ‎t‎o‎ ‎I‎r‎a‎n‎
N‎Y‎T‎'‎s‎ ‎C‎o‎o‎p‎e‎r‎:‎ ‎O‎u‎r‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎ ‎H‎e‎a‎d‎l‎i‎n‎e‎ ‎L‎i‎k‎e‎ ‎O‎t‎h‎e‎r‎s‎ ‎t‎h‎a‎t‎ ‎Q‎u‎o‎t‎e‎d‎ ‎U‎.‎S‎.‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎S‎e‎n‎.‎ ‎M‎a‎r‎s‎h‎a‎ ‎B‎l‎a‎c‎k‎b‎u‎r‎n‎ ‎O‎p‎p‎o‎s‎e‎s‎ ‎R‎e‎s‎e‎t‎t‎l‎i‎n‎g‎ ‎G‎a‎z‎a‎ ‎R‎e‎f‎u‎g‎e‎e‎s‎ ‎i‎n‎ ‎U‎.‎S‎.‎
'‎P‎r‎a‎y‎ ‎f‎o‎r‎ ‎M‎e‎'‎:‎ ‎N‎F‎L‎ ‎S‎t‎a‎r‎ ‎C‎h‎a‎n‎d‎l‎e‎r‎ ‎J‎o‎n‎e‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎V‎e‎g‎a‎s‎ ‎A‎g‎a‎i‎n‎
P‎o‎l‎l‎a‎k‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎I‎s‎ ‎H‎e‎l‎p‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎N‎o‎w‎,‎ ‎b‎u‎t‎ ‎H‎i‎s‎ ‎W‎e‎a‎k‎ ‎P‎o‎l‎i‎c‎i‎e‎s‎ ‎L‎e‎d‎ ‎t‎o‎ ‎W‎a‎r‎
C‎a‎r‎ ‎T‎h‎e‎f‎t‎ ‎S‎o‎a‎r‎e‎d‎ ‎2‎0‎%‎ ‎i‎n‎ ‎2‎0‎2‎2‎,‎ ‎1‎0‎ ‎V‎e‎h‎i‎c‎l‎e‎s‎ ‎E‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎S‎u‎s‎c‎e‎p‎t‎i‎b‎l‎e‎
C‎h‎e‎r‎ ‎S‎a‎y‎s‎ ‎s‎h‎e‎ ‎w‎i‎l‎l‎ ‎L‎e‎a‎v‎e‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎i‎f‎ ‎T‎r‎u‎m‎p‎ ‎g‎e‎t‎s‎ ‎R‎e‎-‎e‎l‎e‎c‎t‎e‎d‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎!‎

p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎S‎t‎o‎r‎m‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎

M‎T‎G‎:‎ ‎R‎a‎s‎h‎i‎d‎a‎ ‎T‎l‎a‎i‎b‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎W‎a‎y‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎V‎i‎d‎e‎o‎
A‎b‎o‎u‎t‎ ‎o‎n‎e‎ ‎h‎u‎n‎d‎r‎e‎d‎ ‎p‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎i‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎i‎s‎t‎s‎ ‎o‎c‎c‎u‎p‎i‎e‎d‎ ‎a‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎H‎o‎u‎s‎e‎ ‎o‎f‎f‎i‎c‎e‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎,‎ ‎o‎n‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎,‎ ‎c‎h‎a‎n‎t‎i‎n‎g‎ ‎“‎c‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎n‎o‎w‎”‎ ‎a‎n‎d‎ ‎“‎l‎e‎t‎ ‎G‎a‎z‎a‎ ‎l‎i‎v‎e‎.‎”‎ ‎

D‎O‎D‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎D‎e‎n‎y‎ ‎2‎,‎0‎0‎0‎ ‎T‎r‎o‎o‎p‎s‎ ‎G‎i‎v‎e‎n‎ ‎'‎P‎r‎e‎p‎a‎r‎e‎ ‎t‎o‎ ‎D‎e‎p‎l‎o‎y‎'‎ ‎O‎r‎d‎e‎r‎s‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎
D‎O‎D‎ ‎D‎o‎e‎s‎n‎'‎t‎ ‎D‎e‎n‎y‎ ‎2‎,‎0‎0‎0‎ ‎T‎r‎o‎o‎p‎s‎ ‎G‎i‎v‎e‎n‎ ‎'‎P‎r‎e‎p‎a‎r‎e‎ ‎t‎o‎ ‎D‎e‎p‎l‎o‎y‎'‎ ‎O‎r‎d‎e‎r‎s‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎
5‎,‎1‎2‎2‎
C‎h‎e‎r‎ ‎S‎a‎y‎s‎ ‎s‎h‎e‎ ‎w‎i‎l‎l‎ ‎L‎e‎a‎v‎e‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎i‎f‎ ‎T‎r‎u‎m‎p‎ ‎g‎e‎t‎s‎ ‎R‎e‎-‎e‎l‎e‎c‎t‎e‎d‎
C‎h‎e‎r‎ ‎S‎a‎y‎s‎ ‎s‎h‎e‎ ‎w‎i‎l‎l‎ ‎L‎e‎a‎v‎e‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎i‎f‎ ‎T‎r‎u‎m‎p‎ ‎g‎e‎t‎s‎ ‎R‎e‎-‎e‎l‎e‎c‎t‎e‎d‎
6‎1‎9‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎D‎.‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎i‎n‎ ‎D‎.‎
8‎7‎
W‎A‎T‎C‎H‎:‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎T‎e‎r‎r‎o‎r‎ ‎S‎t‎a‎g‎e‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎U‎.‎S‎.‎ ‎C‎a‎p‎i‎t‎o‎l‎
W‎A‎T‎C‎H‎:‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎T‎e‎r‎r‎o‎r‎ ‎S‎t‎a‎g‎e‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎U‎.‎S‎.‎ ‎C‎a‎p‎i‎t‎o‎l‎
1‎,‎5‎2‎7‎
*‎*‎*‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎V‎o‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎J‎o‎r‎d‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎g‎a‎i‎n‎ ‎a‎s‎ ‎G‎O‎P‎ ‎R‎e‎d‎ ‎W‎e‎d‎d‎i‎n‎g‎ ‎L‎o‎o‎m‎s‎
*‎*‎*‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎V‎o‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎J‎o‎r‎d‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎g‎a‎i‎n‎ ‎a‎s‎ ‎G‎O‎P‎ ‎R‎e‎d‎ ‎W‎e‎d‎d‎i‎n‎g‎ ‎L‎o‎o‎m‎s‎
4‎,‎9‎7‎0‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎W‎a‎n‎t‎s‎ ‎'‎Z‎e‎r‎o‎'‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎;‎ ‎'‎T‎o‎u‎g‎h‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎s‎'‎ ‎f‎o‎r‎ ‎B‎i‎b‎i‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎W‎a‎n‎t‎s‎ ‎'‎Z‎e‎r‎o‎'‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎ ‎C‎a‎s‎u‎a‎l‎t‎i‎e‎s‎;‎ ‎'‎T‎o‎u‎g‎h‎ ‎Q‎u‎e‎s‎t‎i‎o‎n‎s‎'‎ ‎f‎o‎r‎ ‎B‎i‎b‎i‎
5‎,‎0‎3‎4‎
W‎o‎r‎l‎d‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎I‎n‎c‎i‎t‎e‎ ‎R‎i‎o‎t‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎U‎.‎S‎.‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎b‎y‎ ‎S‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎L‎i‎e‎s‎
W‎o‎r‎l‎d‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎I‎n‎c‎i‎t‎e‎ ‎R‎i‎o‎t‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎U‎.‎S‎.‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎b‎y‎ ‎S‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎ ‎L‎i‎e‎s‎
4‎,‎2‎9‎9‎
R‎a‎s‎h‎i‎d‎a‎ ‎T‎l‎a‎i‎b‎ ‎R‎e‎p‎e‎a‎t‎s‎ ‎F‎a‎l‎s‎e‎ ‎C‎l‎a‎i‎m‎ ‎t‎h‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎B‎o‎m‎b‎e‎d‎ ‎G‎a‎z‎a‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎
R‎a‎s‎h‎i‎d‎a‎ ‎T‎l‎a‎i‎b‎ ‎R‎e‎p‎e‎a‎t‎s‎ ‎F‎a‎l‎s‎e‎ ‎C‎l‎a‎i‎m‎ ‎t‎h‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎B‎o‎m‎b‎e‎d‎ ‎G‎a‎z‎a‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎
1‎1‎6‎
R‎e‎p‎.‎ ‎J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎,‎ ‎R‎-‎O‎h‎i‎o‎,‎
*‎*‎*‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎ ‎L‎o‎o‎k‎s‎ ‎t‎o‎ ‎L‎o‎c‎k‎ ‎D‎o‎w‎n‎ ‎G‎a‎v‎e‎l‎
1‎0‎,‎2‎8‎9‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎H‎o‎u‎s‎e‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎I‎n‎s‎u‎r‎r‎e‎c‎t‎i‎o‎n‎i‎s‎t‎s‎ ‎O‎c‎c‎u‎p‎y‎ ‎F‎e‎d‎e‎r‎a‎l‎ ‎H‎o‎u‎s‎e‎ ‎O‎f‎f‎i‎c‎e‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎

L‎e‎t‎'‎s‎ ‎h‎o‎p‎e‎ ‎t‎h‎a‎t‎ ‎s‎h‎e‎b‎o‎o‎n‎ ‎g‎e‎t‎s‎ ‎n‎u‎g‎g‎e‎t‎s‎ ‎i‎n‎ ‎h‎e‎r‎ ‎s‎t‎o‎m‎a‎c‎h‎.‎ ‎A‎n‎d‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎m‎e‎a‎n‎ ‎c‎h‎i‎c‎k‎e‎n‎ ‎n‎u‎g‎g‎e‎t‎s‎ ‎t‎h‎i‎s‎ ‎t‎i‎m‎e‎.‎

N‎e‎g‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎D‎u‎r‎i‎n‎g‎ ‎A‎r‎g‎u‎m‎e‎n‎t‎ ‎i‎n‎ ‎M‎a‎y‎s‎ ‎L‎a‎n‎d‎i‎n‎g‎.‎


N‎i‎g‎ ‎B‎i‎t‎c‎h‎ ‎F‎o‎u‎n‎d‎ ‎G‎u‎i‎l‎t‎y‎ ‎f‎o‎r‎ ‎M‎u‎r‎d‎e‎r‎i‎n‎g‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎1‎9‎8‎3‎.‎


G‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎D‎o‎u‎b‎l‎e‎ ‎M‎u‎r‎d‎e‎r‎ ‎i‎n‎ ‎C‎i‎n‎c‎i‎n‎n‎a‎t‎i‎.‎ ‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎6‎°‎
0‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎8‎ ‎|‎ ‎D‎a‎y‎
8‎4‎°‎
S‎
1‎4‎
 ‎
m‎p‎h‎
S‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
3‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎3‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎5‎6‎ ‎p‎m‎
W‎e‎d‎ ‎1‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎6‎°‎
8‎%‎
S‎S‎W‎
9‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎5‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎2‎5‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
9‎:‎3‎3‎ ‎p‎m‎
T‎h‎u‎ ‎1‎9‎
S‎u‎n‎n‎y‎
9‎1‎°‎
/‎5‎5‎°‎
8‎%‎
W‎N‎W‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎0‎
S‎u‎n‎n‎y‎
9‎6‎°‎
/‎5‎9‎°‎
0‎%‎
W‎ ‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎6‎°‎
/‎6‎5‎°‎
0‎%‎
S‎W‎ ‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎0‎°‎
/‎6‎6‎°‎
5‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎9‎°‎
1‎7‎%‎
S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎7‎2‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎7‎2‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎8‎°‎
4‎5‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎0‎°‎
5‎5‎%‎
E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎8‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎5‎°‎
/‎5‎2‎°‎
5‎8‎%‎
N‎N‎E‎ ‎1‎5‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎9‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎5‎0‎°‎
3‎5‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎9‎°‎
2‎1‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎4‎9‎°‎
9‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎1‎°‎
1‎3‎%‎
N‎N‎E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎p‎u‎m‎p‎k‎i‎n‎.‎ ‎🎃

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎
""‎A‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎""‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎s‎ ‎a‎l‎l‎ ‎w‎o‎m‎e‎n‎'‎s‎ ‎p‎a‎s‎s‎i‎v‎e‎ ‎p‎r‎o‎v‎o‎c‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎m‎a‎n‎ ‎t‎o‎ ‎p‎e‎r‎f‎o‎r‎m‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎s‎e‎x‎u‎a‎l‎ ‎a‎c‎t‎s‎ ‎u‎p‎o‎n‎ ‎h‎e‎r‎.‎ ‎T‎h‎e‎y‎ ‎a‎r‎e‎ ‎A‎L‎W‎A‎Y‎S‎ ‎a‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎,‎ ‎a‎n‎d‎ ‎t‎o‎ ‎n‎o‎t‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎m‎ ‎i‎s‎ ‎a‎ ‎c‎r‎i‎m‎e‎.‎

W‎o‎m‎e‎n‎ ‎a‎s‎k‎ ‎f‎o‎r‎ ‎i‎t‎ ‎s‎o‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎b‎l‎a‎m‎e‎ ‎a‎l‎l‎ ‎t‎h‎e‎i‎r‎ ‎l‎a‎t‎e‎r‎ ‎p‎r‎o‎b‎l‎e‎m‎s‎ ‎i‎n‎ ‎l‎i‎f‎e‎ ‎o‎n‎ ‎i‎t‎.‎ ‎T‎h‎i‎s‎ ‎w‎a‎y‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎o‎v‎e‎r‎w‎e‎i‎g‎h‎t‎ ‎W‎a‎p‎a‎n‎e‎s‎e‎ ‎F‎u‎r‎f‎a‎g‎s‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎s‎a‎y‎ ‎t‎h‎e‎y‎ ‎w‎e‎r‎e‎ ‎""‎r‎a‎p‎e‎d‎ ‎w‎h‎e‎n‎ ‎a‎t‎ ‎a‎g‎e‎ ‎1‎6‎""‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎a‎ ‎g‎e‎t‎ ‎o‎u‎t‎ ‎o‎f‎ ‎d‎e‎e‎p‎ ‎s‎h‎i‎t‎ ‎f‎r‎e‎e‎ ‎c‎a‎r‎d‎.‎ ‎O‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎o‎n‎l‎y‎ ‎o‎v‎e‎r‎w‎e‎i‎g‎h‎t‎ ‎b‎e‎t‎a‎ ‎m‎a‎l‎e‎s‎ ‎n‎e‎e‎d‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎i‎s‎ ‎l‎i‎e‎:‎ ‎a‎l‎p‎h‎a‎s‎ ‎k‎n‎o‎w‎ ‎t‎o‎ ‎j‎u‎s‎t‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎m‎ ‎a‎g‎a‎i‎n‎,‎ ‎s‎m‎a‎c‎k‎ ‎a‎ ‎b‎i‎t‎c‎h‎ ‎f‎o‎r‎ ‎u‎s‎i‎n‎g‎ ‎e‎x‎c‎u‎s‎e‎s‎,‎ ‎t‎h‎e‎n‎ ‎t‎e‎l‎l‎ ‎h‎e‎r‎ ‎t‎o‎ ‎g‎e‎t‎ ‎b‎a‎c‎k‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎k‎i‎t‎c‎h‎e‎n‎.‎

T‎h‎e‎ ‎m‎o‎d‎e‎r‎n‎ ‎w‎o‎m‎a‎n‎ ‎s‎t‎i‎l‎l‎ ‎a‎s‎k‎s‎ ‎f‎o‎r‎ ‎i‎t‎ ‎a‎s‎ ‎m‎u‎c‎h‎ ‎a‎s‎ ‎e‎v‎e‎r‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎a‎s‎ ‎S‎h‎a‎d‎e‎s‎ ‎o‎f‎ ‎G‎r‎e‎y‎ ‎a‎n‎d‎ ‎T‎w‎i‎l‎i‎g‎h‎t‎ ‎h‎a‎s‎ ‎m‎a‎d‎e‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎v‎u‎l‎n‎e‎r‎a‎b‎l‎e‎,‎ ‎e‎a‎s‎y‎ ‎t‎o‎ ‎p‎r‎e‎y‎ ‎u‎p‎o‎n‎ ‎w‎o‎m‎a‎n‎ ‎m‎o‎r‎e‎ ‎a‎n‎d‎ ‎m‎o‎r‎e‎ ‎p‎o‎p‎u‎l‎a‎r‎.‎ ‎W‎o‎m‎e‎n‎ ‎a‎r‎e‎ ‎p‎r‎a‎c‎t‎i‎c‎a‎l‎l‎y‎ ‎b‎e‎g‎g‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎ ‎a‎n‎d‎ ‎w‎o‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎c‎a‎l‎l‎ ‎t‎h‎e‎ ‎c‎o‎p‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎i‎t‎ ‎w‎a‎s‎ ‎a‎ ‎""‎s‎e‎x‎y‎ ‎a‎c‎t‎ ‎o‎f‎ ‎l‎o‎v‎e‎""‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎""‎t‎o‎t‎a‎l‎l‎y‎ ‎w‎a‎n‎t‎e‎d‎ ‎i‎t‎""‎.‎ ‎A‎t‎ ‎l‎a‎s‎t‎ ‎s‎o‎c‎i‎e‎t‎y‎ ‎i‎s‎ ‎c‎o‎m‎i‎n‎g‎ ‎f‎u‎l‎l‎ ‎c‎i‎r‎c‎l‎e‎ ‎a‎s‎ ‎w‎o‎m‎e‎n‎ ‎e‎m‎b‎r‎a‎c‎e‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎w‎a‎n‎t‎ ‎a‎n‎d‎ ‎m‎e‎n‎ ‎g‎e‎t‎ ‎t‎o‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎m‎.‎

(‎(‎ ‎W‎H‎A‎T‎ ‎A‎R‎E‎ ‎Y‎O‎U‎ ‎W‎A‎I‎T‎I‎N‎G‎ ‎F‎O‎R‎?‎ ‎G‎I‎V‎E‎ ‎H‎E‎R‎ ‎W‎H‎A‎T‎ ‎S‎H‎E‎'‎S‎ ‎A‎S‎K‎I‎N‎G‎ ‎F‎O‎R‎.‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎a‎u‎s‎t‎a‎ ‎L‎a‎b‎i‎a‎ ‎(‎1‎8‎7‎0‎–‎1‎9‎3‎5‎)‎ ‎w‎a‎s‎ ‎a‎n‎ ‎I‎t‎a‎l‎i‎a‎n‎ ‎o‎p‎e‎r‎a‎t‎i‎c‎ ‎s‎o‎p‎r‎a‎n‎o‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎a‎c‎t‎i‎v‎e‎ ‎m‎a‎i‎n‎l‎y‎ ‎f‎r‎o‎m‎ ‎1‎8‎9‎2‎ ‎t‎o‎ ‎1‎9‎0‎8‎.‎ ‎S‎h‎e‎ ‎m‎a‎d‎e‎ ‎h‎e‎r‎ ‎d‎e‎b‎u‎t‎ ‎i‎n‎ ‎N‎a‎p‎l‎e‎s‎ ‎i‎n‎ ‎A‎p‎r‎i‎l‎ ‎1‎8‎9‎2‎ ‎a‎s‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎ ‎i‎n‎ ‎M‎e‎y‎e‎r‎b‎e‎e‎r‎'‎s‎ ‎L‎e‎s‎ ‎H‎u‎g‎u‎e‎n‎o‎t‎s‎.‎ ‎A‎f‎t‎e‎r‎ ‎e‎n‎g‎a‎g‎e‎m‎e‎n‎t‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎R‎o‎y‎a‎l‎ ‎S‎w‎e‎d‎i‎s‎h‎ ‎O‎p‎e‎r‎a‎ ‎i‎n‎ ‎S‎t‎o‎c‎k‎h‎o‎l‎m‎ ‎(‎1‎8‎9‎3‎–‎9‎5‎)‎ ‎a‎n‎d‎ ‎L‎i‎s‎b‎o‎n‎ ‎(‎1‎8‎9‎6‎)‎,‎ ‎s‎h‎e‎ ‎r‎e‎t‎u‎r‎n‎e‎d‎ ‎t‎o‎ ‎I‎t‎a‎l‎y‎ ‎w‎h‎e‎r‎e‎ ‎s‎h‎e‎ ‎p‎e‎r‎f‎o‎r‎m‎e‎d‎ ‎f‎i‎r‎s‎t‎ ‎i‎n‎ ‎T‎u‎r‎i‎n‎,‎ ‎R‎o‎m‎e‎ ‎a‎n‎d‎ ‎B‎o‎l‎o‎g‎n‎a‎.‎ ‎T‎h‎e‎r‎e‎a‎f‎t‎e‎r‎ ‎n‎o‎t‎a‎b‎l‎e‎ ‎p‎e‎r‎f‎o‎r‎m‎a‎n‎c‎e‎s‎ ‎i‎n‎c‎l‎u‎d‎e‎d‎ ‎t‎h‎e‎ ‎t‎i‎t‎l‎e‎ ‎r‎o‎l‎e‎ ‎i‎n‎ ‎M‎a‎s‎c‎a‎g‎n‎i‎'‎s‎ ‎I‎r‎i‎s‎ ‎a‎t‎ ‎L‎a‎ ‎F‎e‎n‎i‎c‎e‎ ‎i‎n‎ ‎V‎e‎n‎i‎c‎e‎ ‎(‎1‎9‎0‎0‎)‎ ‎a‎n‎d‎ ‎S‎i‎e‎g‎l‎i‎n‎d‎e‎ ‎i‎n‎ ‎W‎a‎g‎n‎e‎r‎'‎s‎ ‎D‎i‎e‎ ‎W‎a‎l‎k‎ü‎r‎e‎ ‎a‎t‎ ‎M‎i‎l‎a‎n‎'‎s‎ ‎L‎a‎ ‎S‎c‎a‎l‎a‎ ‎(‎1‎9‎0‎1‎)‎.‎ ‎T‎h‎i‎s‎ ‎1‎8‎9‎3‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎d‎e‎p‎i‎c‎t‎s‎ ‎L‎a‎b‎i‎a‎ ‎w‎h‎i‎l‎e‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎e‎n‎g‎a‎g‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎R‎o‎y‎a‎l‎ ‎S‎w‎e‎d‎i‎s‎h‎ ‎O‎p‎e‎r‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎u‎n‎k‎n‎o‎w‎n‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎y‎o‎u‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎q‎u‎e‎e‎r‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎u‎t‎ ‎o‎n‎ ‎a‎ ‎l‎e‎a‎t‎h‎e‎r‎ ‎j‎a‎c‎k‎e‎t‎ ‎a‎n‎d‎ ‎s‎m‎o‎k‎e‎ ‎s‎o‎m‎e‎ ‎J‎e‎w‎-‎A‎s‎h‎ ‎c‎i‎g‎a‎r‎e‎t‎t‎e‎s‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎t‎e‎e‎n‎a‎g‎e‎ ‎g‎i‎r‎l‎s‎.‎"
FpC73AzS,2023-10-18_stats.json,rdp_snitch,JSON,Wednesday 18th of October 2023 07:15:10 PM CDT,"{
  ""ip"": {
    ""138.94.58.182"": 42,
    ""120.132.17.153"": 5,
    ""62.162.31.243"": 167,
    ""62.162.31.244"": 136,
    ""185.166.27.110"": 124,
    ""200.152.67.46"": 49,
    ""92.204.139.79"": 39,
    ""194.187.176.196"": 1,
    ""201.93.165.53"": 13,
    ""106.116.169.71"": 2,
    ""168.138.149.190"": 23,
    ""36.108.169.132"": 8,
    ""128.14.141.34"": 4,
    ""62.204.41.146"": 6,
    ""205.210.31.86"": 3,
    ""87.251.75.145"": 2,
    ""45.143.201.62"": 5,
    ""190.93.152.18"": 4,
    ""141.98.11.128"": 3,
    ""167.94.146.57"": 1,
    ""185.170.144.3"": 2,
    ""185.170.144.113"": 2,
    ""87.251.75.120"": 1,
    ""167.248.133.33"": 1,
    ""198.235.24.47"": 3,
    ""200.152.69.133"": 7,
    ""185.190.24.101"": 1,
    ""58.218.204.183"": 1,
    ""47.254.76.136"": 3,
    ""141.98.81.155"": 1,
    ""144.76.225.110"": 1,
    ""62.122.184.165"": 4,
    ""101.36.97.187"": 1,
    ""188.119.66.107"": 1,
    ""85.209.11.111"": 3,
    ""198.235.24.115"": 3,
    ""111.61.253.55"": 1,
    ""87.251.75.64"": 1,
    ""43.154.155.89"": 35,
    ""43.129.16.3"": 38,
    ""43.155.85.14"": 31,
    ""43.128.72.64"": 40,
    ""43.156.43.206"": 80,
    ""43.133.65.18"": 61,
    ""43.155.166.181"": 65,
    ""43.159.194.155"": 33,
    ""43.154.192.179"": 91,
    ""43.155.152.153"": 102,
    ""43.154.237.68"": 65,
    ""43.154.135.111"": 60,
    ""101.32.186.133"": 57,
    ""43.155.111.216"": 42,
    ""43.134.225.130"": 30,
    ""43.163.227.133"": 49,
    ""43.155.109.12"": 39,
    ""43.155.153.186"": 72,
    ""43.163.220.57"": 64,
    ""43.155.70.52"": 37,
    ""43.154.220.248"": 43,
    ""43.159.198.38"": 59,
    ""43.143.129.124"": 27,
    ""43.155.181.194"": 75,
    ""43.131.254.81"": 52,
    ""103.170.247.70"": 69,
    ""43.134.228.116"": 101,
    ""43.163.225.68"": 52,
    ""43.155.86.67"": 28,
    ""43.128.71.173"": 38,
    ""43.163.231.154"": 45,
    ""43.154.212.184"": 30,
    ""43.155.157.40"": 77,
    ""109.107.183.230"": 3,
    ""152.89.198.133"": 2,
    ""207.90.244.3"": 1,
    ""98.143.255.25"": 6,
    ""178.21.163.70"": 2,
    ""198.235.24.37"": 3,
    ""20.127.65.148"": 2
  },
  ""asn"": {
    ""AS263749"": 42,
    ""AS140292"": 5,
    ""AS6821"": 303,
    ""AS207097"": 124,
    ""AS14463"": 56,
    ""AS398108"": 39,
    ""AS208843"": 1,
    ""AS27699"": 13,
    ""AS4134"": 3,
    ""AS31898"": 23,
    ""AS137695"": 8,
    ""AS21859"": 4,
    ""AS59425"": 6,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS210950"": 5,
    ""AS19429"": 4,
    ""AS209605"": 3,
    ""AS398705"": 1,
    ""AS197414"": 4,
    ""AS398722"": 1,
    ""AS211632"": 1,
    ""AS45102"": 3,
    ""AS209588"": 1,
    ""AS24940"": 1,
    ""AS57523"": 10,
    ""AS135377"": 1,
    ""AS24547"": 1,
    ""AS132203"": 1691,
    ""AS45090"": 27,
    ""AS150698"": 69,
    ""AS213369"": 3,
    ""AS174"": 1,
    ""AS3367"": 6,
    ""AS21419"": 2,
    ""AS8075"": 2
  },
  ""isp"": {
    ""Junta Administrativa del Servicio El\u00e9ctrico Municipal de Cartago"": 42,
    ""Addresses CNNIC"": 5,
    ""31klasa"": 303,
    ""Online Company for Technological Information, Supply of Electronic Equipment an"": 124,
    ""Grupo Tdkom"": 56,
    ""GoDaddy.com, LLC"": 39,
    ""Alpha Strike Labs GmbH"": 1,
    ""Vivo"": 13,
    ""Chinanet"": 3,
    ""Oracle Corporation"": 23,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 8,
    ""Zenlayer Inc"": 4,
    ""Horizon LLC"": 6,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 8,
    ""TOV E-RISHENNYA"": 5,
    ""ETB - Colombia"": 4,
    ""UAB Host Baltic"": 3,
    ""Censys, Inc."": 2,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Alibaba.com LLC"": 3,
    ""Flyservers S.A."": 1,
    ""Hetzner Online GmbH"": 1,
    ""Chang Way Technologies Co. Limited"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile communications corporation"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1393,
    ""Aceville Pte.ltd"": 325,
    ""INTERNETVENO"": 69,
    ""Cloud assets LLC"": 3,
    ""Cogent Communications"": 1,
    ""Xplornet Communications Inc."": 6,
    ""Pishtaze E Jadid Infomration Company"": 2,
    ""Microsoft Corporation"": 2
  },
  ""org"": {
    ""Unknown"": 849,
    ""Grupo Tdkom"": 56,
    ""Alpha Strike Labs GmbH"": 1,
    ""TELEF\ufffdNICA BRASIL S.A"": 13,
    ""Chinanet HE"": 2,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 23,
    ""Chinanet ZJ"": 8,
    ""ZENLA"": 4,
    ""Horizon LLC"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""TOV VAIZ PARTNER"": 5,
    ""ETB - Colombia"": 4,
    ""Censys, Inc."": 2,
    ""Xhostis"": 4,
    ""Tribeka Web Advisors S.A"": 1,
    ""Chinanet JS"": 1,
    ""ALICLOUD-US"": 3,
    ""Flyservers S.A"": 1,
    ""Hetzner"": 1,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Ucloud Information Technology"": 1,
    ""China Mobile"": 1,
    ""Tencent Cloud Computing"": 1156,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 237,
    ""Internet Khong Trung Company"": 69,
    ""Cloud assets LLC"": 3,
    ""Starcrecium Limited"": 2,
    ""SHODAN, LLC"": 1,
    ""Microsoft Azure Cloud (eastus)"": 2
  },
  ""regionName"": {
    ""Cartago Province"": 42,
    ""Beijing"": 32,
    ""Grad Skopje"": 303,
    ""Sulaymaniyah"": 124,
    ""Sao Paulo"": 92,
    ""Virginia"": 41,
    ""Land Berlin"": 1,
    ""Hebei"": 3,
    ""Zhejiang"": 8,
    ""California"": 19,
    ""Moscow"": 19,
    ""England"": 5,
    ""Kyiv City"": 5,
    ""Bogota D.C."": 4,
    ""Kaunas"": 3,
    ""Hesse"": 1,
    ""North Holland"": 4,
    ""Michigan"": 1,
    ""Mariehamns stad"": 1,
    ""Jiangsu"": 1,
    ""Drenthe"": 1,
    ""Saxony"": 1,
    ""Central and Western District"": 688,
    ""North West"": 158,
    ""Seoul"": 504,
    ""Central Singapore"": 131,
    ""Tokyo"": 210,
    ""Ho Chi Minh"": 69,
    ""Texas"": 1,
    ""New Brunswick"": 6,
    ""Tehran"": 2
  },
  ""country"": {
    ""Costa Rica"": 42,
    ""China"": 44,
    ""North Macedonia"": 303,
    ""Iraq"": 124,
    ""Brazil"": 92,
    ""United States"": 62,
    ""Germany"": 3,
    ""Russia"": 19,
    ""United Kingdom"": 5,
    ""Ukraine"": 5,
    ""Colombia"": 4,
    ""Lithuania"": 3,
    ""Netherlands"": 5,
    ""Aland Islands"": 1,
    ""Hong Kong"": 688,
    ""Singapore"": 289,
    ""South Korea"": 504,
    ""Japan"": 210,
    ""Vietnam"": 69,
    ""Canada"": 6,
    ""Iran"": 2
  },
  ""account"": {
    ""142.93.8.59"": 2402,
    ""user"": 1,
    ""(empty)"": 5,
    ""odzi3m16"": 4,
    ""Test"": 2,
    ""KuxRWurwR"": 1,
    ""VsZBeg"": 1,
    ""uZLNEh"": 1,
    ""Administr"": 20,
    ""hello"": 17,
    ""Domain"": 15,
    ""tdwfhMZWf"": 1,
    ""CPOSMi"": 1,
    ""ioWsjq"": 1,
    ""Administrator"": 1,
    ""IvTlftBhq"": 1,
    ""KeTPvB"": 1,
    ""GyCfPY"": 1,
    ""root"": 1,
    ""VHJzVvYoa"": 1,
    ""xWoeiq"": 1,
    ""ZMSCXF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 2480
  },
  ""client_build"": {
    ""Unknown"": 2480
  },
  ""client_name"": {
    ""Unknown"": 2480
  },
  ""ip_type"": {
    ""Unknown"": 725,
    ""proxy"": 7,
    ""hosting"": 1737,
    ""mobile"": 11
  }
}"
Z2CPat1V,C# Pointer Chain Follower Thingy,bobmarley12345,C#,Wednesday 18th of October 2023 07:05:56 PM CDT,"// Get the live address from a known base pointer and a collection of pointer offsets where each one is added to the last pointer
public static unsafe long GetPointerAddress(IntPtr hProcess, long pointer, int[] offsets = null) {
    // pointer should contain the BaseAddress of the module being targeted
    if (offsets == null || offsets.Length < 1) {
        return pointer;
    }
    byte* buf = stackalloc byte[8];
    ReadProcessMemory_Unsafe(hProcess, pointer, buf, 8);
    for (int i = 0, j = offsets.Length - 1; i < j; i++) {
        pointer = *(long*) buf + offsets[i];
        ReadProcessMemory_Unsafe(hProcess, pointer, buf, 8);
    }
    pointer = *(long*) buf + offsets[offsets.Length - 1];
    return pointer;
}"
VZX0kAk7,Spid_rr's Data,azimuths,JSON,Wednesday 18th of October 2023 07:05:33 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Extreme Wind""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Hoppa""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper Alt""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Gate""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""118""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""225""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""206""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""140""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""172""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""144""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""God Ripper""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""700""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider(8)1368161""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2520""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Compressed Tornados""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""245""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""X Wind Impact""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""152""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""590""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""100""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2216""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kage""}},""Skilltree"":{""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
GwBxFJx3,Tunel-kir-test,kir98,Lua,Wednesday 18th of October 2023 07:04:43 PM CDT,"-- Original - https://pastebin.com/fgd9jn4K
hoch = 0                  -- Height of the tunnel (Высота туннеля)
hoch2 = 0                 -- Auxiliary variable for the flares (Вспомогательная переменная для факелов)
breit = 0                 -- Width of the tunnel (Ширина туннеля)
lang = 0                  -- Length of the tunnel (Длина туннеля)
arbeit = 0                -- Number of fields to be mined (Количество полей для майнинга)
weg = 0                   -- Covered track (Крытая трасса)
fackel = 0                -- Distance of the torches (Дистанция факелов)
kiste = 0                 -- Checks whether there is space in the inventory (Проверка инвентаря)
kiste2 = 0                -- Auxiliary variable for box (Вспомогательная переменная для ящика)
position = ""unten""        -- Location of the turtle (Местоположение черепахи)
ausrichtung = ""rechts""    -- Does he dig to the left or right (Он копает влево или вправо)
 
function Titel()
term.clear()
term.setCursorPos(1,1)
print(""~~~~~~~~~~~~ReduceTheBlock~~~~~~~~~~~~"")
print(""{                                    }"")
print(""{           Tunnel graben            }"")
print(""{      Place coal in slot 16         }"")
print(""{      Place torches in slot 15      }"")
print(""{      Place the box in slot 14      }"")
print(""{                                    }"")
print(""~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"")
print()
end
 
function Ausrichtung()
if ausrichtung == ""links"" then
turtle.turnLeft()
Warten()
Tanken()
turtle.forward()
turtle.turnRight()
else if ausrichtung == ""rechts"" then
turtle.turnRight()
Warten()
Tanken()
turtle.forward()
turtle.turnLeft()
end
end
end
 
function Wechsel()
if ausrichtung == ""links"" then
ausrichtung = ""rechts""
else if ausrichtung == ""rechts"" then
ausrichtung = ""links""
end
end
end
 
function Graben()
if position == ""unten"" then
Hoch()
else if position == ""oben"" then
Runter()
end
end
end
 
function Tanken()
tank = turtle.getFuelLevel()
if tank == 0 then
turtle.select(16)
turtle.refuel(1)
turtle.select(1)
end
end
 
function Warten()
while turtle.detect() do
turtle.dig()
sleep(0.6)
end
end
 
function Hoch()
if not turtle.detectDown() then
turtle.select(1)
turtle.placeDown()
end
hoch1 = hoch-1
while hoch1 > 0 do
turtle.dig()
Warten()
arbeit = arbeit-1
Kiste()
Titel()
print(""    ""..arbeit.."" Fields are dug up"")
Warten()
Tanken()
turtle.up()
turtle.dig()
Warten()
hoch1 = hoch1-1
Kiste()
position = ""oben""
end
if not turtle.detectUp() then
turtle.select(1)
turtle.placeUp()
end
arbeit = arbeit-1
Titel()
print(""    ""..arbeit.."" Fields are dug up"")
hoch1 = hoch
end
 
function Runter()
if not turtle.detectUp() then
turtle.select(1)
turtle.placeUp()
end
runter = hoch-1
while runter > 0 do
turtle.dig()
Warten()
turtle.digDown()
arbeit = arbeit-1
Kiste()
Titel()
print(""    ""..arbeit.."" Fields are dug up"")
Warten()
Tanken()
turtle.down()
turtle.dig()
turtle.digDown()
Warten()
runter = runter-1
Kiste()
position = ""unten""
end
if not turtle.detectDown() then
turtle.select(1)
turtle.placeDown()
end
arbeit = arbeit-1
Titel()
print(""    ""..arbeit.."" Fields are dug up"")
runter = hoch
end
 
function Fackel()
if weg == fackel then
turtle.select(15)
turtle.turnRight()
turtle.turnRight()
 
 
if ausrichtung ==""rechts"" then
 
  if position == ""unten"" then
  turtle.place()
  end
  if position == ""oben"" then
    while hoch2 > 1 do
    turtle.down()
    hoch2 = hoch2-1
    end
    hoch2 = hoch
    turtle.place()
    while hoch2 > 1 do 
    turtle.up()
    hoch2 = hoch2-1
    end
    hoch2 = hoch
    --turtle.place()
  end
 
end
if ausrichtung ==""links"" then
 
  if position == ""unten"" then
  turtle.place()
  end
  if position == ""oben"" then
    while hoch2 > 1 do
    turtle.down()
    hoch2 = hoch2-1
    end
    hoch2 = hoch
    turtle.place()
    while hoch2 > 1 do 
    turtle.up()
    hoch2 = hoch2-1
    end
    hoch2 = hoch
    --turtle.place()
  end
 
end
 
turtle.turnLeft()
turtle.turnLeft()
turtle.select(1)
weg = 0
end
end
 
function Kiste()
kiste = tonumber(turtle.getItemCount(13))
if kiste > 0 then
 
 while not turtle.detectDown() do
 turtle.down()
 kiste2 = kiste2+1
 end
 
turtle.select(14)
turtle.turnLeft()
turtle.turnLeft()
turtle.dig()
turtle.place()
for i = 1,13,1 do
turtle.select(i)
turtle.drop()
end
turtle.turnRight()
turtle.turnRight()
  while kiste2 > 0 do
  turtle.up()
  kiste2 = kiste2-1
  end
end
turtle.select(1)
end
 
 
 
 
Titel()
print(""How high should your tunnel be?"")
write(""Height ^|^: "")
hoch = tonumber(io.read())
hoch2 = hoch              -- Auxiliary variable for the flares
Titel()
print(""How wide should your tunnel be?"")
write(""Width <|>: "")
breit = tonumber(io.read())
Titel()
print(""How long should your tunnel be?"")
write(""Length |>>> : "")
lang = tonumber(io.read())
Titel()
print(""How far apart should the torches be?"")
write(""Distance <|> : "")
fackel = tonumber(io.read())
arbeit = hoch*breit*lang
Titel()
print(""    ""..arbeit.."" Fields are dug up"")
sleep(1)
 
breit1 = breit
 
while lang > 0 do
 
while breit1 >= 1 do
Graben()
breit1 = breit1-1
if breit1 > 0 then
Ausrichtung()
end
 
end
breit1 = breit
Wechsel()
turtle.dig()
Warten()
turtle.forward()
lang = lang-1
weg = weg+1
Fackel()
end"
VfZjHEtQ,Lab1,Week045,Python,Wednesday 18th of October 2023 05:25:53 PM CDT,"# -*- coding: utf-8 -*-
import PyQt5
# Form implementation generated from reading ui file 'Lab1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from COMPort import COMPort
import threading
import re


class UiMainWindow(object):
    input_port_name: str
    output_port_name: str
    ports_baudrate: int
    input_port: COMPort
    output_port: COMPort
    accept_flag: bool
    change_port_name_flag: bool
    change_port_speed_flag: bool
    numbers_bytes: int
    total_numbers_bytes: int

    def __init__(self, main_window):
        self.input_port_name = ""????""
        self.output_port_name = ""????""
        self.ports_baudrate = 0
        self.accept_flag = False
        self.change_port_name_flag = False
        self.numbers_bytes = 0
        self.total_numbers_bytes = 0
        # InitComPorts
        self.input_port = COMPort(self.input_port_name, self.ports_baudrate)
        self.output_port = COMPort(self.output_port_name, self.ports_baudrate)
        # InitWidget
        self.centralwidget = QtWidgets.QWidget(main_window)
        self.lbl_input = QtWidgets.QLabel(self.centralwidget)
        self.le_input_entry = QtWidgets.QLineEdit(self.centralwidget)
        self.lbl_input_port = QtWidgets.QLabel(self.centralwidget)
        self.lbl_output = QtWidgets.QLabel(self.centralwidget)
        self.le_output_entry = QtWidgets.QLineEdit(self.centralwidget)
        self.lbl_output_port = QtWidgets.QLabel(self.centralwidget)
        self.lbl_accept_flag = QtWidgets.QLabel(self.centralwidget)
        self.hLine = QtWidgets.QFrame(self.centralwidget)
        self.vLine = QtWidgets.QFrame(self.centralwidget)
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.btn_accept_output = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btn_noaccept_output = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btn_clear_output = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.btn_send_input = QtWidgets.QPushButton(self.centralwidget)
        self.btn_clear_input = QtWidgets.QPushButton(self.centralwidget)
        self.combobox_ports = QtWidgets.QComboBox(self.centralwidget)
        self.lbl_com_ports = QtWidgets.QLabel(self.centralwidget)
        self.lbl_debug = QtWidgets.QLabel(self.centralwidget)
        self.txt_debug = QtWidgets.QTextEdit(self.centralwidget)
        self.btn_create_ports = QtWidgets.QPushButton(self.centralwidget)
        self.combobox_speed = QtWidgets.QComboBox(self.centralwidget)
        self.lbl_com_ports_state = QtWidgets.QLabel(self.centralwidget)
        self.lbl_input_state = QtWidgets.QLabel(self.centralwidget)
        self.lbl_input_state_2 = QtWidgets.QLabel(self.centralwidget)
        self.txt_input_state = QtWidgets.QTextBrowser(self.centralwidget)
        self.txt_output_state = QtWidgets.QTextBrowser(self.centralwidget)
        # InitInformationAboutComPortState
        self.update_state_text(self.txt_input_state, self.input_port.port_name)
        self.update_state_text(self.txt_output_state, self.output_port.port_name)

    def setupUi(self, mainWindow):
        mainWindow.setObjectName(""mainWindow"")
        mainWindow.setEnabled(True)
        mainWindow.resize(805, 585)
        mainWindow.setMouseTracking(False)
        mainWindow.setStyleSheet(""background-color: rgb(255, 234, 179);"")

        self.centralwidget.setObjectName(""centralwidget"")

        self.lbl_input.setGeometry(QtCore.QRect(108, 30, 175, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_input.setFont(font)
        self.lbl_input.setStyleSheet(""background-color:  rgb(255, 234, 179);"")
        self.lbl_input.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.lbl_input.setObjectName(""lbl_input"")

        self.le_input_entry.setGeometry(QtCore.QRect(25, 70, 350, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.le_input_entry.setFont(font)
        self.le_input_entry.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.le_input_entry.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.le_input_entry.setMaxLength(30)
        self.le_input_entry.setClearButtonEnabled(True)
        self.le_input_entry.setObjectName(""le_input_entry"")

        self.lbl_input_port.setGeometry(QtCore.QRect(320, 30, 51, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_input_port.setFont(font)
        self.lbl_input_port.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_input_port.setObjectName(""lbl_input_port"")

        self.lbl_output.setGeometry(QtCore.QRect(510, 30, 175, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_output.setFont(font)
        self.lbl_output.setStyleSheet(""background-color:  rgb(255, 234, 179);"")
        self.lbl_output.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_output.setObjectName(""lbl_output"")

        self.le_output_entry.setGeometry(QtCore.QRect(425, 70, 350, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.le_output_entry.setFont(font)
        self.le_output_entry.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.le_output_entry.setReadOnly(True)
        self.le_output_entry.setObjectName(""le_output_entry"")

        self.lbl_output_port.setGeometry(QtCore.QRect(720, 30, 51, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_output_port.setFont(font)
        self.lbl_output_port.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_output_port.setObjectName(""lbl_output_port"")

        self.lbl_accept_flag.setGeometry(QtCore.QRect(435, 30, 55, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_accept_flag.setFont(font)
        self.lbl_accept_flag.setObjectName(""lbl_accept_flag"")

        self.hLine.setGeometry(QtCore.QRect(0, 182, 801, 20))
        self.hLine.setFrameShape(QtWidgets.QFrame.HLine)
        self.hLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.hLine.setObjectName(""hLine"")

        self.vLine.setGeometry(QtCore.QRect(400, 0, 3, 600))
        self.vLine.setFrameShape(QtWidgets.QFrame.VLine)
        self.vLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.vLine.setObjectName(""vLine"")

        self.gridLayoutWidget.setGeometry(QtCore.QRect(430, 120, 341, 61))
        self.gridLayoutWidget.setObjectName(""gridLayoutWidget"")

        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName(""gridLayout"")

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_accept_output.sizePolicy().hasHeightForWidth())
        self.btn_accept_output.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_accept_output.setFont(font)
        self.btn_accept_output.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_accept_output.setMouseTracking(False)
        self.btn_accept_output.setStyleSheet(""background-color: rgb(79, 198, 0);"")
        self.btn_accept_output.setIconSize(QtCore.QSize(20, 20))
        self.btn_accept_output.setObjectName(""btn_accept_output"")
        self.gridLayout.addWidget(self.btn_accept_output, 0, 0, 1, 1)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_noaccept_output.sizePolicy().hasHeightForWidth())
        self.btn_noaccept_output.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_noaccept_output.setFont(font)
        self.btn_noaccept_output.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_noaccept_output.setStyleSheet(""background-color: rgb(230, 230, 0);"")
        self.btn_noaccept_output.setObjectName(""btn_noaccept_output"")
        self.gridLayout.addWidget(self.btn_noaccept_output, 0, 1, 1, 1)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_clear_output.sizePolicy().hasHeightForWidth())
        self.btn_clear_output.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_clear_output.setFont(font)
        self.btn_clear_output.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_clear_output.setMouseTracking(False)
        self.btn_clear_output.setStyleSheet(""background-color: rgb(239, 0, 0);"")
        self.btn_clear_output.setObjectName(""btn_clear_output"")
        self.gridLayout.addWidget(self.btn_clear_output, 0, 2, 1, 1)

        self.btn_send_input.setGeometry(QtCore.QRect(70, 137, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_send_input.setFont(font)
        self.btn_send_input.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_send_input.setMouseTracking(False)
        self.btn_send_input.setStyleSheet(""background-color: rgb(79, 198, 0);"")
        self.btn_send_input.setObjectName(""btn_send_input"")

        self.btn_clear_input.setGeometry(QtCore.QRect(230, 137, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_clear_input.setFont(font)
        self.btn_clear_input.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_clear_input.setMouseTracking(False)
        self.btn_clear_input.setStyleSheet(""background-color: rgb(239, 0, 0);"")
        self.btn_clear_input.setObjectName(""btn_clear_input"")

        self.combobox_ports.setGeometry(QtCore.QRect(30, 244, 180, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.combobox_ports.setFont(font)
        self.combobox_ports.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.combobox_ports.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.combobox_ports.setObjectName(""combobox_ports"")
        self.combobox_ports.addItem("""")
        self.combobox_ports.addItem("""")

        self.lbl_com_ports.setGeometry(QtCore.QRect(30, 210, 320, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_com_ports.setFont(font)
        self.lbl_com_ports.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_com_ports.setObjectName(""lbl_com_ports"")

        self.lbl_debug.setGeometry(QtCore.QRect(430, 210, 345, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_debug.setFont(font)
        self.lbl_debug.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_debug.setObjectName(""lbl_debug"")

        self.txt_debug.setGeometry(QtCore.QRect(444, 250, 321, 300))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_debug.setFont(font)
        self.txt_debug.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.txt_debug.setReadOnly(True)
        self.txt_debug.setObjectName(""txt_debug"")

        self.btn_create_ports.setGeometry(QtCore.QRect(229, 254, 141, 50))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btn_create_ports.setFont(font)
        self.btn_create_ports.setStyleSheet(""background-color: rgb(79, 198, 0);"")
        self.btn_create_ports.setObjectName(""btn_create_ports"")

        self.combobox_speed.setGeometry(QtCore.QRect(30, 290, 180, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.combobox_speed.setFont(font)
        self.combobox_speed.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.combobox_speed.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.combobox_speed.setObjectName(""combobox_speed"")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")
        self.combobox_speed.addItem("""")

        self.lbl_com_ports_state.setGeometry(QtCore.QRect(30, 340, 320, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_com_ports_state.setFont(font)
        self.lbl_com_ports_state.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_com_ports_state.setObjectName(""lbl_com_ports_state"")

        self.lbl_input_state.setGeometry(QtCore.QRect(40, 370, 150, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_input_state.setFont(font)
        self.lbl_input_state.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_input_state.setObjectName(""lbl_input_state"")

        self.lbl_input_state_2.setGeometry(QtCore.QRect(210, 370, 150, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_input_state_2.setFont(font)
        self.lbl_input_state_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_input_state_2.setObjectName(""lbl_input_state_2"")

        self.txt_input_state.setGeometry(QtCore.QRect(40, 410, 150, 140))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_input_state.setFont(font)
        self.txt_input_state.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.txt_input_state.setObjectName(""txt_input_state"")

        self.txt_output_state.setGeometry(QtCore.QRect(210, 410, 150, 140))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_output_state.setFont(font)
        self.txt_output_state.setStyleSheet(""background-color: rgb(255, 250, 188);"")
        self.txt_output_state.setObjectName(""txt_output_state"")
        mainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def combo_box_ports_changed(self):
        selected_text = self.combobox_ports.currentText()
        if selected_text == ""COM2 <=> COM3"":
            if self.input_port_name == ""COM2"" and self.output_port_name == ""COM3"":
                self.change_port_name_flag = False
            else:
                self.logger(f""Changed a new pair of COM-ports: COM2, COM3"")
                self.change_port_name_flag = True
            self.input_port_name = ""COM2""
            self.output_port_name = ""COM3""
        elif selected_text == ""COM1 <=> COM4"":
            if self.input_port_name == ""COM1"" and self.output_port_name == ""COM4"":
                self.change_port_name_flag = False
            else:
                self.logger(f""Changed a new pair of COM-ports: COM1, COM4"")
                self.change_port_name_flag = True
            self.input_port_name = ""COM1""
            self.output_port_name = ""COM4""

    def combo_box_speed_changed(self):
        old_ports_speed: int = self.ports_baudrate
        selected_text = self.combobox_speed.currentText()
        match = re.search(r'(\d+)', selected_text)

        if match:
            self.ports_baudrate = int(match.group())
        else:
            print(""ComboBoxSpeedError"")

        if old_ports_speed == self.ports_baudrate:
            self.change_port_speed_flag = False
        else:
            self.logger(f""Baudrate has been changed from {old_ports_speed} to {self.ports_baudrate} baud"")
            self.change_port_speed_flag = True

    def logger(self, data: str):
        self.txt_debug.append(f""{data}"")
        self.txt_debug.append(""------------------------------------------------"")

    def create_pair_ports(self):
        print(self.input_port_name)
        print(self.output_port_name)

        if (self.change_port_name_flag or self.change_port_speed_flag) and self.input_port.init_flag:
            self.close_pair_ports()

        if (self.input_port_name != ""????"" and self.ports_baudrate != 0 and
                (self.change_port_name_flag or self.change_port_speed_flag)):
            self.input_port.port_name = self.input_port_name
            self.input_port.baudrate = self.ports_baudrate
            self.update_state_text(self.txt_input_state, self.input_port.port_name)
            # Create input COM-port
            self.input_port.SetParamCOMPort()
            self.lbl_input_port.setText(self.input_port_name)
            self.logger(f""Create input port {self.input_port_name}"")

        if (self.output_port_name != ""????"" and self.ports_baudrate != 0 and
                (self.change_port_name_flag or self.change_port_speed_flag)):
            self.output_port.port_name = self.output_port_name
            self.output_port.baudrate = self.ports_baudrate
            self.update_state_text(self.txt_output_state, self.output_port.port_name)
            # Create output COM-port
            self.output_port.SetParamCOMPort()
            self.lbl_output_port.setText(self.output_port_name)
            self.logger(f""Create input port {self.output_port_name}"")

    def close_pair_ports(self):
        if self.accept_flag:
            self.noaccept_data()
        self.input_port.CloseCOMPort()
        self.output_port.CloseCOMPort()
        self.total_numbers_bytes = 0
        self.numbers_bytes = 0
        self.logger(f""Close COM-ports: {self.input_port_name}, {self.output_port_name}"")

    def send_data(self):
        if self.input_port.init_flag:
            data = self.le_input_entry.text()
            self.input_port.WriteToPort(data)
            self.numbers_bytes = len(data)
            self.total_numbers_bytes += self.numbers_bytes
            self.update_state_text(self.txt_input_state, self.input_port.port_name)
            self.logger(f""The message has been sent"")
            self.clear_input_data()
        else:
            self.logger(""The input port was not created"")

    def clear_input_data(self):
        self.logger(f""The input field has been cleared"")
        self.le_input_entry.clear()

    def thread_read_data(self):
        while True:
            data = self.output_port.ReadFromPort()
            if data != b'':
                self.upgrade_text(data.decode('utf-8'))

            if self.accept_flag is False:
                break

    def upgrade_text(self, data: str):
        self.le_output_entry.setText(self.le_output_entry.text() + data)
        self.txt_output_state.append(
            f""Port: \n{self.output_port.port_name} \nBaudrate: \n{self.output_port.baudrate} бод\n"" +
            f""One: {self.numbers_bytes} bytes\nAll: {self.total_numbers_bytes} bytes"")

    def accept_data(self):
        if self.output_port.init_flag:
            self.accept_flag = True
            self.logger(""The read THREAD has been created"")
            thread = threading.Thread(target=self.thread_read_data)
            thread.daemon = True
            thread.start()
            self.lbl_accept_flag.setText(""TRUE"")
        else:
            self.logger(""The output port was not created"")

    def noaccept_data(self):
        self.accept_flag = False
        self.logger(""The read THREAD has been delete"")
        self.lbl_accept_flag.setText(""FALSE"")

    def clear_output_data(self):
        self.logger(f""The output field has been cleared"")
        self.le_output_entry.clear()

    def update_state_text(self, widget: QtWidgets.QTextBrowser, port_name: str):
        widget.setText(""Port: \n"" + port_name + ""\n"" +
                       ""Baudrate: \n"" + f""{self.ports_baudrate} бод\n"" +
                       f""One: {self.numbers_bytes} bytes\n"" +
                       f""All: {self.total_numbers_bytes} bytes"")

    def add_function(self):
        self.combobox_ports.activated.connect(lambda: self.combo_box_ports_changed())
        self.combobox_speed.activated.connect(lambda: self.combo_box_speed_changed())
        self.btn_send_input.clicked.connect(lambda: self.send_data())
        self.btn_clear_input.clicked.connect(lambda: self.clear_input_data())
        self.le_input_entry.returnPressed.connect(lambda: self.send_data())
        self.btn_accept_output.clicked.connect(lambda: self.accept_data())
        self.btn_noaccept_output.clicked.connect(lambda: self.noaccept_data())
        self.btn_clear_output.clicked.connect(lambda: self.clear_output_data())
        self.btn_create_ports.clicked.connect(lambda: self.create_pair_ports())

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate(""mainWindow"", ""COM ports program""))
        self.lbl_input.setText(_translate(""mainWindow"", ""Input""))
        self.le_input_entry.setPlaceholderText(_translate(""mainWindow"", ""Введите сообщение для отправки:""))
        self.lbl_input_port.setText(_translate(""mainWindow"", ""????""))
        self.lbl_output.setText(_translate(""mainWindow"", ""Output""))
        self.le_output_entry.setPlaceholderText(_translate(""mainWindow"", ""Сообщение:""))
        self.lbl_output_port.setText(_translate(""mainWindow"", ""????""))
        self.lbl_accept_flag.setText(_translate(""mainWindow"", ""FALSE""))
        self.btn_accept_output.setText(_translate(""mainWindow"", ""Accept""))
        self.btn_noaccept_output.setText(_translate(""mainWindow"", ""No accept""))
        self.btn_clear_output.setText(_translate(""mainWindow"", ""Clear""))
        self.btn_send_input.setText(_translate(""mainWindow"", ""Send""))
        self.btn_clear_input.setText(_translate(""mainWindow"", ""Clear""))
        self.combobox_ports.setItemText(0, _translate(""mainWindow"", ""COM1 <=> COM4""))
        self.combobox_ports.setItemText(1, _translate(""mainWindow"", ""COM2 <=> COM3""))
        self.lbl_com_ports.setText(_translate(""mainWindow"", ""Настройка COM-портов:""))
        self.lbl_debug.setText(_translate(""mainWindow"", ""DEBUG""))
        self.txt_debug.setPlaceholderText(_translate(""mainWindow"", ""Ход работы программы:""))
        self.btn_create_ports.setText(_translate(""mainWindow"", ""Create pair""))
        self.combobox_speed.setItemText(0, _translate(""mainWindow"", ""50 бод""))
        self.combobox_speed.setItemText(1, _translate(""mainWindow"", ""75 бод""))
        self.combobox_speed.setItemText(2, _translate(""mainWindow"", ""110 бод""))
        self.combobox_speed.setItemText(3, _translate(""mainWindow"", ""150 бод""))
        self.combobox_speed.setItemText(4, _translate(""mainWindow"", ""300 бод""))
        self.combobox_speed.setItemText(5, _translate(""mainWindow"", ""600 бод""))
        self.combobox_speed.setItemText(6, _translate(""mainWindow"", ""1200 бод""))
        self.combobox_speed.setItemText(7, _translate(""mainWindow"", ""2400 бод""))
        self.combobox_speed.setItemText(8, _translate(""mainWindow"", ""4800 бод""))
        self.combobox_speed.setItemText(9, _translate(""mainWindow"", ""9600 бод""))
        self.combobox_speed.setItemText(10, _translate(""mainWindow"", ""19200 бод""))
        self.combobox_speed.setItemText(11, _translate(""mainWindow"", ""38400 бод""))
        self.combobox_speed.setItemText(12, _translate(""mainWindow"", ""57500 бод""))
        self.combobox_speed.setItemText(13, _translate(""mainWindow"", ""115200 бод""))
        self.lbl_com_ports_state.setText(_translate(""mainWindow"", ""Состояния COM-портов:""))
        self.lbl_input_state.setText(_translate(""mainWindow"", ""Input""))
        self.lbl_input_state_2.setText(_translate(""mainWindow"", ""Output""))
        self.txt_input_state.setPlaceholderText(_translate(""mainWindow"", ""Состояние:""))
        self.txt_output_state.setPlaceholderText(_translate(""mainWindow"", ""Состояние:""))
"
jSPgUVdG,Greenville Infinite Money EVENT,bennytrt2,Lua,Wednesday 18th of October 2023 05:01:42 PM CDT,"--- Recommened electron for pc, and fluxus if mobile

loadstring(game:HttpGet(('https://raw.githubusercontent.com/cool83birdcarfly02six/GreenVilleEvent/main/README.md'),true))()"
YQWAWK0y,Untitled,AlexCoder12345,C++,Wednesday 18th of October 2023 04:44:28 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t; cin >> t;
    while (t--){
        long long n; cin >> n;
        map<long long,long long> tb;
        for (int i = 0; i < n; ++i){
            long long x; cin >> x;
            tb[x]++;
        }
        vector<long long> skills;
        for (auto &p : tb){
            skills.push_back(p.second);
        }
        sort(skills.begin(),skills.end());
        long long l = -1; long long r = n;
        while (l < r - 1){
            long long m = (l + r)/2;
            bool ok = true;

            auto it = lower_bound(skills.begin(),skills.end(),m);

            if (it != skills.end()){
                if (*it == m){
                    if (skills.size() - 1 < m){
                        ok = false;
                    }
                } else {
                    if (skills.size() < m){
                        ok = false;
                    }
                }
            } else {
                ok = false;
            }

            if (ok){
                l = m;
            } else {
                r = m;
            }
        }
        cout << l << endl;
    }
}"
bSk0ELyr,[site-reviews] set the name/email values from an URL parameter,geminilabs,PHP,Wednesday 18th of October 2023 04:29:24 PM CDT,"/**
 * Set the name and email values from URL parameters (?review_name=&review_email=)
 * Example: https://domain.com?review_name=Jane&review_email=jane@xxx.com
 * @param array $fields
 * @return array
 */
add_filter('site-reviews/review-form/fields', function ($fields) {
    $keys = [
        'email' => filter_input(INPUT_GET, 'review_email', FILTER_VALIDATE_EMAIL),
        'name' => filter_input(INPUT_GET, 'review_name'),
    ];
    foreach ($keys as $key => $value) {
        if (isset($fields[$key])) {
            $fields[$key]['value'] = $value;
        }
    }
    return $fields;
});"
77dz78rV,HV Farm Turtle immer 100k auf Lager,MagmaLP,Lua,Wednesday 18th of October 2023 04:14:45 PM CDT,"os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""back"")

LV_Solar_Panel_Amount = 0

s = sen.getTargets()
function getS()
    for v, k  in pairs(s) do
        if k.Name == ""ME Wireless Access Point"" then   
            target = v
        end
    end
    return target
end

f = getS()
s1 = sen.getTargetDetails(target)
for v, k in pairs(s1.Items) do

    ---ME Inventar Abfrage----
    if k.Name == ""Low Voltage Solar Array"" then
        LV_Solar_Panel_Amount = k.Size
    end
end

while true do
    if LV_Solar_Panel_Amount >= 100000 then
		turtle.suck()
        turtle.dropUp()
        sleep(10)
        turtle.suckUp()
        turtle.drop()
    else
        print(""Schalter ist an, aber es sind nicht genug LVs auf Lager damit die Farm starten kann, es werden 100k benötigt! Nächste Abfrage startet in 1 Minute, Farm startet immer nur bei 100k LVs damit sie nicht immer läuft, um Performance zu sparen."")
        print(""LVs auf Lager: "" ..LV_Solar_Panel_Amount)
        sleep(60)
    end    
    os.reboot()
end"
