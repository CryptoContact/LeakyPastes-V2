id,title,username,language,date,content
vhzQCs3E,getdata.php,BimoSora,PHP,Wednesday 6th of March 2024 06:04:35 AM CDT,"<?php
    require_once('../db/connection.php');

    if ($_SERVER['REQUEST_METHOD'] === 'GET') {
        $stmt = $conn->prepare(""SELECT * FROM post"");
        $stmt->execute();

        $result = $stmt->fetchAll(PDO::FETCH_ASSOC);

        header('Content-Type: application/json');
        echo json_encode($result);
    }
?>"
i6Vz3uSU,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Wednesday 6th of March 2024 06:03:57 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_690095.pdf

Working as of:
06 March 2024"
DX0Dm686,HTML,BimoSora,HTML,Wednesday 6th of March 2024 06:03:37 AM CDT,"<!DOCTYPE html>
<html lang=""en"" ng-app=""postApp"">
<head>
    <meta charset=""UTF-8"">
    <title>Posts</title>
    <script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.7.9/angular.min.js""></script>
</head>
<body ng-controller=""postController"">

    <input type=""text"" ng-model=""search"" placeholder=""Search"">

    <ul>
        <li ng-repeat=""post in posts | filter:search"">
            <h3>{{ post.title }}</h3>
            <p>{{ post.content }}</p>
            <p>Date: {{ post.date | date:'medium' }}</p>
        </li>
    </ul>

    <script>
        var app = angular.module('postApp', []);

        app.controller('postController', function($scope, $http) {
            $scope.posts = [];

            $http.get('db/getdata.php')
                .then(function(response) {
                    $scope.posts = response.data;
                });
        });
    </script>

</body>
</html>
"
MBNTxqwH,data861,TestGuy1,JSON,Wednesday 6th of March 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3c3f3298d6f335c2065077a9836c3349109bcd1363688d0232a93789ae9c4e9c46c63ad38053438ad43c9c827f5f6b2eb9f2a80e62a99d989e2417efb8b6fa733402fc6041d32205d1a1d6386985fe06a8b6f012411be839b4429eabee4b52844d4dd8c7a795d8cafd216181a38548dc60a9292cee8032ef28eb380153b6e097',
  otherdata: [
    'a8202ccb9397a59df8429e29fb73e8bb',
    '0fd0a88bb968cbb70997735950771ebd',
    '27ff080620104b1641588ec7f3c9721b',
    '7aef4cb352f49d0701a9a78e033eb2d8',
    'b78568151f9f22d7e531a4705b318b2a',
    '2141b9e470b12ab86fb21a8d7b9e1800',
    '6538483f06e6535f3f995456f2ad2cad',
    'c94056e22baab15b91b58f1a7f5ddc21'
  ]
}"
6T6tFsSN,G2A.com Free Gift Card Guide Mar 2024 v2,HastyBasher0,GetText,Wednesday 6th of March 2024 05:57:20 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/12GnAFd-rtwTrxGBGzNGTllmzjvi-RceC/view?usp=sharing
or
https://smallpdf.com/file#s=ae85d335-593e-43a5-bf43-1620c245bb82

Working as of:
06 March 2024"
cj9rFmXN,school by me,Radoslav_03,MySQL,Wednesday 6th of March 2024 05:17:46 AM CDT,"CREATE TABLE sports (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE sportGroups (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    location VARCHAR(150) NOT NULL,
    dayOfWeek ENUM(""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""),
    timeOfDay TIME NOT NULL,
    
    sport_id INT NOT NULL,
    CONSTRAINT FOREIGN KEY(sport_id) REFERENCES sports(id)
);

CREATE TABLE coaches (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR (100),
    egn VARCHAR(10) UNIQUE NOT NULL
);

ALTER TABLE sportGroups
	ADD coach_id INT,
	ADD CONSTRAINT FOREIGN KEY(coach_id) REFERENCES coaches(id);
    
CREATE TABLE students (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    egn VARCHAR(10) UNIQUE NOT NULL,
    phone VARCHAR(10) UNIQUE NOT NULL,
    address VARCHAR(150) NOT NULL,
    class INT NOT NULL
);

CREATE TABLE studentSport (
	sport_id INT NOT NULL,
    student_id INT NOT NULL,
    
    CONSTRAINT FOREIGN KEY(sport_id) REFERENCES sportGroups(id),
    CONSTRAINT FOREIGN KEY(student_id) REFERENCES students(id),
    
    PRIMARY KEY(sport_id, student_id)
); "
Z5EHMFnk,Untitled,march_happy,PowerShell,Wednesday 6th of March 2024 05:06:59 AM CDT,"param(
    [string]$Executable = $env:INST_JAVA,
    [string]$Arguments = $env:INST_JAVA_ARGS
)

# Combine the executable and arguments
$Command = ""$Executable $Arguments""

# Add external arguments passed to the script
foreach ($arg in $args) {
    $Command += "" $arg""
}

echo $Command
# Execute the command
iex $Command

"
avLCJqtR,Review TusarFX,reviewbrokers,PHP,Wednesday 6th of March 2024 04:58:34 AM CDT,https://www.reviewbrokers.net/review-tusarfx/
tCrCmSyX,aawdasd,JaMaNi133,Lua,Wednesday 6th of March 2024 04:16:11 AM CDT,"--ctrlRod,power,fuel,tempCore,tempCase
fileName=""test1.csv""

file=fs.open(fileName,""w"")
file.writeLine(""speed,power"")
file.writeLine(""rpm,fe/t"")
file.close()

powerProd,speed=0,0
reactor = peripheral.wrap(""back"")
function saveData()
	file=fs.open(fileName,fs.exists(fileName) and ""a"" or ""w"")
	print(string.format(""%d ,%d"",speed,powerProd))
	file.writeLine(string.format(""%d ,%d"",speed,powerProd))
	file.close()
end

function measure()
	points = 0
	powerProd,fuelRate=0,0
	while points < 4 do
		points = points + 1
    	powerProd = powerProd+reactor.getEnergyProducedLastTick()
    	speed = speed+reactor.getRotorSpeed()
    	sleep(0.25)
    end
	powerProd = powerProd/points
    speed = speed/points
end

sleep(10)
print(""starting"")
t = 0
while t < 1800 do
    measure()
    saveData()
	t = t + 1
	print(string.format(""point %d/1800   %.1f percent"",t,t/18))
end
print(""done"")
reactor.setActive(false)
"
n6ZYg87Z,Untitled,IgorLytkin,Bash,Wednesday 6th of March 2024 03:53:38 AM CDT,"2024-03-06T09:29:26.566461143Z __main__.py:361 #INFO     [2024-03-06 09:29:26,565] - __main__ - Starting bot
2024-03-06T09:29:26.608037818Z selector_events.py:54 #DEBUG    [2024-03-06 09:29:26,607] - asyncio - Using selector: EpollSelector
2024-03-06T09:29:26.907677263Z dispatcher.py:524 #INFO     [2024-03-06 09:29:26,907] - aiogram.dispatcher - Start polling
2024-03-06T09:29:26.975149496Z dispatcher.py:340 #INFO     [2024-03-06 09:29:26,974] - aiogram.dispatcher - Run polling for bot @LawBot_HjztV2q61J_bot id=6080976660 - 'LawBot'
2024-03-06T09:30:03.898480496Z dispatcher.py:171 #INFO     [2024-03-06 09:30:03,897] - aiogram.event - Update id=38938999 is not handled. Duration 209 ms by bot id=6080976660
2024-03-06T09:30:03.919755719Z dispatcher.py:314 #ERROR    [2024-03-06 09:30:03,900] - aiogram.event - Cause exception while process update id=38938999 by bot id=6080976660
2024-03-06T09:30:03.919808183Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:30:03.919811557Z Traceback (most recent call last):
2024-03-06T09:30:03.919813865Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:30:03.919816356Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:30:03.919818470Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.919820572Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:30:03.919822777Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:30:03.919824957Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.919827103Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:30:03.919829245Z     return await handler(event, data)
2024-03-06T09:30:03.919831285Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.919833347Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:30:03.919835467Z     return await handler(event, data)
2024-03-06T09:30:03.919837497Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.919839590Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:30:03.919841803Z     return await handler(event, data)
2024-03-06T09:30:03.920693894Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920697100Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:30:03.920700058Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:30:03.920702235Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920704357Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:30:03.920720164Z     return await wrapped()
2024-03-06T09:30:03.920733859Z            ^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920736654Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:30:03.920739123Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:30:03.920741421Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920747292Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:30:03.920749629Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:30:03.920751946Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920754287Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:30:03.920756511Z     return await self._propagate_event(
2024-03-06T09:30:03.920815298Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920817521Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:30:03.920819855Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:30:03.920822073Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920824296Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:30:03.920826605Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:30:03.920828925Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920830998Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:30:03.920833360Z     return await wrapped()
2024-03-06T09:30:03.920835665Z            ^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920837790Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:30:03.920840135Z     await message.answer(
2024-03-06T09:30:03.920842202Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:30:03.920844583Z     return await bot(self)
2024-03-06T09:30:03.920846683Z            ^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920848796Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:30:03.920851091Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:30:03.920853643Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920863987Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:30:03.920866295Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:30:03.920873107Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920888797Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:30:03.920891421Z     response = self.check_response(
2024-03-06T09:30:03.920893707Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:30:03.920896291Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:30:03.920898650Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:30:03.920901647Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:39:33.184833577Z dispatcher.py:171 #INFO     [2024-03-06 09:39:33,184] - aiogram.event - Update id=38939000 is handled. Duration 267 ms by bot id=6080976660
2024-03-06T09:40:50.476885826Z dispatcher.py:171 #INFO     [2024-03-06 09:40:50,476] - aiogram.event - Update id=38939001 is handled. Duration 223 ms by bot id=6080976660
2024-03-06T09:40:55.961306492Z dispatcher.py:171 #INFO     [2024-03-06 09:40:55,960] - aiogram.event - Update id=38939002 is handled. Duration 81 ms by bot id=6080976660
2024-03-06T09:41:01.013709383Z dispatcher.py:171 #INFO     [2024-03-06 09:41:01,013] - aiogram.event - Update id=38939003 is handled. Duration 178 ms by bot id=6080976660
2024-03-06T09:41:04.183946175Z dispatcher.py:171 #INFO     [2024-03-06 09:41:04,183] - aiogram.event - Update id=38939004 is handled. Duration 114 ms by bot id=6080976660
2024-03-06T09:41:07.246756152Z dispatcher.py:171 #INFO     [2024-03-06 09:41:07,246] - aiogram.event - Update id=38939005 is handled. Duration 213 ms by bot id=6080976660
2024-03-06T09:41:16.707436433Z dispatcher.py:171 #INFO     [2024-03-06 09:41:16,707] - aiogram.event - Update id=38939006 is handled. Duration 97 ms by bot id=6080976660
2024-03-06T09:41:20.761210086Z dispatcher.py:171 #INFO     [2024-03-06 09:41:20,760] - aiogram.event - Update id=38939007 is handled. Duration 126 ms by bot id=6080976660
2024-03-06T09:41:23.525826172Z dispatcher.py:171 #INFO     [2024-03-06 09:41:23,525] - aiogram.event - Update id=38939008 is handled. Duration 409 ms by bot id=6080976660
2024-03-06T09:41:25.148148982Z dispatcher.py:171 #INFO     [2024-03-06 09:41:25,147] - aiogram.event - Update id=38939009 is handled. Duration 129 ms by bot id=6080976660
2024-03-06T09:47:22.551289395Z dispatcher.py:171 #INFO     [2024-03-06 09:47:22,549] - aiogram.event - Update id=38939010 is handled. Duration 215 ms by bot id=6080976660
2024-03-06T09:47:30.078078951Z dispatcher.py:452 #WARNING  [2024-03-06 09:47:30,074] - aiogram.dispatcher - Received SIGTERM signal
2024-03-06T09:47:30.078256996Z dispatcher.py:356 #INFO     [2024-03-06 09:47:30,076] - aiogram.dispatcher - Polling stopped for bot @LawBot_HjztV2q61J_bot id=6080976660 - 'LawBot'
2024-03-06T09:47:30.078263111Z dispatcher.py:551 #INFO     [2024-03-06 09:47:30,076] - aiogram.dispatcher - Polling stopped
2024-03-06T09:47:44.573560420Z __main__.py:361 #INFO     [2024-03-06 09:47:44,572] - __main__ - Starting bot
2024-03-06T09:47:44.608751992Z selector_events.py:54 #DEBUG    [2024-03-06 09:47:44,608] - asyncio - Using selector: EpollSelector
2024-03-06T09:47:44.823477341Z dispatcher.py:524 #INFO     [2024-03-06 09:47:44,823] - aiogram.dispatcher - Start polling
2024-03-06T09:47:44.885077005Z dispatcher.py:340 #INFO     [2024-03-06 09:47:44,884] - aiogram.dispatcher - Run polling for bot @LawBot_HjztV2q61J_bot id=6080976660 - 'LawBot'
2024-03-06T09:47:45.175543970Z dispatcher.py:171 #INFO     [2024-03-06 09:47:45,175] - aiogram.event - Update id=38939011 is not handled. Duration 193 ms by bot id=6080976660
2024-03-06T09:47:45.179382414Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:45,175] - aiogram.event - Cause exception while process update id=38939011 by bot id=6080976660
2024-03-06T09:47:45.179412623Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:45.179417540Z Traceback (most recent call last):
2024-03-06T09:47:45.179421478Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:45.179425641Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:45.179429156Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179448003Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:45.179452113Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:45.179455733Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179459254Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:45.179463208Z     return await handler(event, data)
2024-03-06T09:47:45.179466676Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179470361Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:45.179474100Z     return await handler(event, data)
2024-03-06T09:47:45.179477507Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179481110Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:45.179484873Z     return await handler(event, data)
2024-03-06T09:47:45.179488342Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179491809Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:45.179495565Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:45.179499041Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179502639Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:45.179506427Z     return await wrapped()
2024-03-06T09:47:45.179547641Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179578748Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:45.179583391Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:45.179587012Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179607052Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:45.179611206Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:45.179614866Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179618631Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:45.179622483Z     return await self._propagate_event(
2024-03-06T09:47:45.179626117Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179629571Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:45.179633351Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:45.179637161Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179640686Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:45.179644572Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:45.179648054Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179651559Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:45.179655410Z     return await wrapped()
2024-03-06T09:47:45.179658929Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179662451Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:45.179666147Z     await message.answer(
2024-03-06T09:47:45.179683760Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:45.179687980Z     return await bot(self)
2024-03-06T09:47:45.179691388Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179694972Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:45.179698917Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:45.179702684Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179706169Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:45.179709980Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:45.179713823Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179722038Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:45.179726017Z     response = self.check_response(
2024-03-06T09:47:45.179729687Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:45.179732997Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:45.179736640Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:45.179740760Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:47.815130098Z dispatcher.py:171 #INFO     [2024-03-06 09:47:47,814] - aiogram.event - Update id=38939012 is not handled. Duration 59 ms by bot id=6080976660
2024-03-06T09:47:47.817053855Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:47,815] - aiogram.event - Cause exception while process update id=38939012 by bot id=6080976660
2024-03-06T09:47:47.817086869Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:47.817090075Z Traceback (most recent call last):
2024-03-06T09:47:47.817092307Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:47.817095085Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:47.817097378Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817099888Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:47.817102086Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:47.817104264Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817106288Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:47.817108563Z     return await handler(event, data)
2024-03-06T09:47:47.817110548Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817112615Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:47.817114865Z     return await handler(event, data)
2024-03-06T09:47:47.817116871Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817119001Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:47.817121103Z     return await handler(event, data)
2024-03-06T09:47:47.817123126Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817125085Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:47.817127228Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:47.817129398Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817144412Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:47.817146691Z     return await wrapped()
2024-03-06T09:47:47.817148656Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817150633Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:47.817152866Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:47.817155002Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817157929Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:47.817160215Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:47.817162418Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817164608Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:47.817166981Z     return await self._propagate_event(
2024-03-06T09:47:47.817169052Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817171006Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:47.817173175Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:47.817175204Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817177299Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:47.817179486Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:47.817181491Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817183575Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:47.817185699Z     return await wrapped()
2024-03-06T09:47:47.817187660Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817189660Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:47.817191898Z     await message.answer(
2024-03-06T09:47:47.817193927Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:47.817196139Z     return await bot(self)
2024-03-06T09:47:47.817198281Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817200230Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:47.817202361Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:47.817204421Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817208938Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:47.817211159Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:47.817213296Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817215345Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:47.817217521Z     response = self.check_response(
2024-03-06T09:47:47.817219554Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:47.817221511Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:47.817223719Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:47.817226075Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:49.452692756Z dispatcher.py:171 #INFO     [2024-03-06 09:47:49,452] - aiogram.event - Update id=38939013 is not handled. Duration 59 ms by bot id=6080976660
2024-03-06T09:47:49.454333495Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:49,452] - aiogram.event - Cause exception while process update id=38939013 by bot id=6080976660
2024-03-06T09:47:49.454388761Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:49.454392268Z Traceback (most recent call last):
2024-03-06T09:47:49.454449224Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:49.454453752Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:49.454456087Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454458511Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:49.454461078Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:49.454463301Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454465424Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:49.454467726Z     return await handler(event, data)
2024-03-06T09:47:49.454469736Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454471738Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:49.454474305Z     return await handler(event, data)
2024-03-06T09:47:49.454476621Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454478668Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:49.454480818Z     return await handler(event, data)
2024-03-06T09:47:49.454494536Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454503128Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:49.454505349Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:49.454519894Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454522307Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:49.454524670Z     return await wrapped()
2024-03-06T09:47:49.454526844Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454528959Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:49.454531208Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:49.454533524Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454536517Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:49.454538772Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:49.454540863Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454543183Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:49.454545493Z     return await self._propagate_event(
2024-03-06T09:47:49.454547844Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454549897Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:49.454552087Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:49.454554143Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454556200Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:49.454558426Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:49.454560693Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454562781Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:49.454564976Z     return await wrapped()
2024-03-06T09:47:49.454566947Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454568916Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:49.454571070Z     await message.answer(
2024-03-06T09:47:49.454573199Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:49.454575592Z     return await bot(self)
2024-03-06T09:47:49.454577717Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454579804Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:49.454596294Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:49.454598676Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454600773Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:49.454603235Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:49.454605350Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454607419Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:49.454609687Z     response = self.check_response(
2024-03-06T09:47:49.454611768Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:49.454614257Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:49.454616487Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:49.454618897Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:50.016763937Z dispatcher.py:171 #INFO     [2024-03-06 09:47:50,016] - aiogram.event - Update id=38939014 is not handled. Duration 60 ms by bot id=6080976660
2024-03-06T09:47:50.018807210Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:50,016] - aiogram.event - Cause exception while process update id=38939014 by bot id=6080976660
2024-03-06T09:47:50.018841769Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:50.018846885Z Traceback (most recent call last):
2024-03-06T09:47:50.018850337Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:50.018854162Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:50.018857750Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018861088Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:50.018864619Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:50.018868165Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018871238Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:50.018874869Z     return await handler(event, data)
2024-03-06T09:47:50.018878054Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018881178Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:50.018884621Z     return await handler(event, data)
2024-03-06T09:47:50.018910352Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018939938Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:50.018946146Z     return await handler(event, data)
2024-03-06T09:47:50.018949677Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018953046Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:50.018956386Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:50.018959878Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018962976Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:50.018966648Z     return await wrapped()
2024-03-06T09:47:50.018970092Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018973482Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:50.018977049Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:50.018980788Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018985617Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:50.018989557Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:50.018992830Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.018996063Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:50.018999570Z     return await self._propagate_event(
2024-03-06T09:47:50.019002930Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019006195Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:50.019009776Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:50.019012938Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019016361Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:50.019019842Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:50.019023034Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019026266Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:50.019029820Z     return await wrapped()
2024-03-06T09:47:50.019033175Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019036182Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:50.019040032Z     await message.answer(
2024-03-06T09:47:50.019054394Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:50.019058006Z     return await bot(self)
2024-03-06T09:47:50.019061393Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019064627Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:50.019068210Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:50.019071684Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019074894Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:50.019078495Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:50.019082208Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019085324Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:50.019088897Z     response = self.check_response(
2024-03-06T09:47:50.019092589Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.019096010Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:50.019099551Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:50.019103237Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:50.790374919Z dispatcher.py:171 #INFO     [2024-03-06 09:47:50,790] - aiogram.event - Update id=38939015 is not handled. Duration 59 ms by bot id=6080976660
2024-03-06T09:47:50.792091780Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:50,790] - aiogram.event - Cause exception while process update id=38939015 by bot id=6080976660
2024-03-06T09:47:50.792117972Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:50.792122993Z Traceback (most recent call last):
2024-03-06T09:47:50.792126500Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:50.792130204Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:50.792134066Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792137349Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:50.792141181Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:50.792159491Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792162933Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:50.792166559Z     return await handler(event, data)
2024-03-06T09:47:50.792184892Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792188418Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:50.792191706Z     return await handler(event, data)
2024-03-06T09:47:50.792194723Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792197845Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:50.792201175Z     return await handler(event, data)
2024-03-06T09:47:50.792204358Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792207480Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:50.792210786Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:50.792214000Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792217296Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:50.792220780Z     return await wrapped()
2024-03-06T09:47:50.792238492Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792241562Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:50.792244898Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:50.792248382Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792253154Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:50.792257148Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:50.792260553Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792264063Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:50.792267646Z     return await self._propagate_event(
2024-03-06T09:47:50.792271167Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792274587Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:50.792278220Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:50.792281589Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792285378Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:50.792290129Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:50.792315357Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792319682Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:50.792329912Z     return await wrapped()
2024-03-06T09:47:50.792333658Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792337322Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:50.792341411Z     await message.answer(
2024-03-06T09:47:50.792345112Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:50.792349256Z     return await bot(self)
2024-03-06T09:47:50.792353041Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792356554Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:50.792360412Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:50.792364235Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792367815Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:50.792371629Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:50.792375429Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792392785Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:50.792397035Z     response = self.check_response(
2024-03-06T09:47:50.792401061Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:50.792404657Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:50.792408581Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:50.792414018Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:51.551458550Z dispatcher.py:171 #INFO     [2024-03-06 09:47:51,551] - aiogram.event - Update id=38939016 is not handled. Duration 59 ms by bot id=6080976660
2024-03-06T09:47:51.553119727Z dispatcher.py:314 #ERROR    [2024-03-06 09:47:51,551] - aiogram.event - Cause exception while process update id=38939016 by bot id=6080976660
2024-03-06T09:47:51.553178426Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:47:51.553183978Z Traceback (most recent call last):
2024-03-06T09:47:51.553187728Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:47:51.553192074Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:47:51.553195946Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553199541Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:47:51.553203591Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:47:51.553248338Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553252631Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:47:51.553256428Z     return await handler(event, data)
2024-03-06T09:47:51.553259971Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553263453Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:47:51.553267511Z     return await handler(event, data)
2024-03-06T09:47:51.553270955Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553274373Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:47:51.553277948Z     return await handler(event, data)
2024-03-06T09:47:51.553281406Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553284781Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:51.553288398Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:51.553292577Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553296261Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:51.553300438Z     return await wrapped()
2024-03-06T09:47:51.553303905Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553307511Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:47:51.553324906Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:47:51.553328780Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553333324Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:47:51.553337124Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:47:51.553340846Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553344471Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:47:51.553348221Z     return await self._propagate_event(
2024-03-06T09:47:51.553351525Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553354995Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:47:51.553358625Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:47:51.553362316Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553365885Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:47:51.553382902Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:47:51.553386781Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553406798Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:47:51.553410908Z     return await wrapped()
2024-03-06T09:47:51.553414365Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553418442Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:47:51.553422153Z     await message.answer(
2024-03-06T09:47:51.553425913Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:47:51.553429956Z     return await bot(self)
2024-03-06T09:47:51.553433461Z            ^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553437033Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:47:51.553441095Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:47:51.553444665Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553448402Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:47:51.553452366Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:47:51.553456096Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553459866Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:47:51.553463863Z     response = self.check_response(
2024-03-06T09:47:51.553483587Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:47:51.553487410Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:47:51.553491330Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:47:51.553495595Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:49:42.395307506Z dispatcher.py:171 #INFO     [2024-03-06 09:49:42,394] - aiogram.event - Update id=38939017 is not handled. Duration 190 ms by bot id=6080976660
2024-03-06T09:49:42.404494999Z dispatcher.py:314 #ERROR    [2024-03-06 09:49:42,395] - aiogram.event - Cause exception while process update id=38939017 by bot id=6080976660
2024-03-06T09:49:42.404526935Z TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:49:42.404530001Z Traceback (most recent call last):
2024-03-06T09:49:42.404532511Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 308, in _process_update
2024-03-06T09:49:42.404535278Z     response = await self.feed_update(bot, update, **kwargs)
2024-03-06T09:49:42.404554772Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404557412Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 157, in feed_update
2024-03-06T09:49:42.404559764Z     response = await self.update.wrap_outer_middleware(
2024-03-06T09:49:42.404562028Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404564119Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
2024-03-06T09:49:42.404566412Z     return await handler(event, data)
2024-03-06T09:49:42.404568471Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404570626Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
2024-03-06T09:49:42.404572878Z     return await handler(event, data)
2024-03-06T09:49:42.404575010Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404577140Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
2024-03-06T09:49:42.404579661Z     return await handler(event, data)
2024-03-06T09:49:42.404581724Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404583794Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:49:42.404586035Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:49:42.404588202Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404590298Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:49:42.404592642Z     return await wrapped()
2024-03-06T09:49:42.404594705Z            ^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404596868Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/dispatcher.py"", line 275, in _listen_update
2024-03-06T09:49:42.404599175Z     return await self.propagate_event(update_type=update_type, event=event, **kwargs)
2024-03-06T09:49:42.404601428Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404604239Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 116, in propagate_event
2024-03-06T09:49:42.404606594Z     return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
2024-03-06T09:49:42.404608736Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404610971Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 111, in _wrapped
2024-03-06T09:49:42.404613218Z     return await self._propagate_event(
2024-03-06T09:49:42.404615325Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404617426Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/router.py"", line 136, in _propagate_event
2024-03-06T09:49:42.404622698Z     response = await observer.trigger(event, **kwargs)
2024-03-06T09:49:42.404624850Z                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404626967Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/telegram.py"", line 120, in trigger
2024-03-06T09:49:42.404629237Z     return await wrapped_inner(event, kwargs)
2024-03-06T09:49:42.404631372Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404633459Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/dispatcher/event/handler.py"", line 42, in call
2024-03-06T09:49:42.404635702Z     return await wrapped()
2024-03-06T09:49:42.404637777Z            ^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404639804Z   File ""/FsmBot/fsm_bot/__main__.py"", line 325, in process_showdata_command
2024-03-06T09:49:42.404642074Z     await message.answer(
2024-03-06T09:49:42.404644122Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/methods/base.py"", line 84, in emit
2024-03-06T09:49:42.404646375Z     return await bot(self)
2024-03-06T09:49:42.404648484Z            ^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404650536Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/bot.py"", line 432, in __call__
2024-03-06T09:49:42.404653397Z     return await self.session(self, method, timeout=request_timeout)
2024-03-06T09:49:42.404655601Z            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404657722Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 257, in __call__
2024-03-06T09:49:42.404659980Z     return cast(TelegramType, await middleware(bot, method))
2024-03-06T09:49:42.404662152Z                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404664250Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/aiohttp.py"", line 175, in make_request
2024-03-06T09:49:42.404666608Z     response = self.check_response(
2024-03-06T09:49:42.404668706Z                ^^^^^^^^^^^^^^^^^^^^
2024-03-06T09:49:42.404670761Z   File ""/usr/local/lib/python3.11/site-packages/aiogram/client/session/base.py"", line 120, in check_response
2024-03-06T09:49:42.404673016Z     raise TelegramBadRequest(method=method, message=description)
2024-03-06T09:49:42.404675443Z aiogram.exceptions.TelegramBadRequest: Telegram server says - Bad Request: can't parse entities: Character '.' is reserved and must be escaped with the preceding '\'
2024-03-06T09:49:48.980846718Z dispatcher.py:171 #INFO     [2024-03-06 09:49:48,980] - aiogram.event - Update id=38939018 is handled. Duration 105 ms by bot id=6080976660
2024-03-06T09:49:50.628675854Z dispatcher.py:171 #INFO     [2024-03-06 09:49:50,628] - aiogram.event - Update id=38939019 is handled. Duration 172 ms by bot id=6080976660
2024-03-06T09:49:54.421379618Z dispatcher.py:171 #INFO     [2024-03-06 09:49:54,420] - aiogram.event - Update id=38939020 is handled. Duration 91 ms by bot id=6080976660
2024-03-06T09:49:56.589137249Z dispatcher.py:171 #INFO     [2024-03-06 09:49:56,588] - aiogram.event - Update id=38939021 is handled. Duration 86 ms by bot id=6080976660
2024-03-06T09:49:59.537493966Z dispatcher.py:171 #INFO     [2024-03-06 09:49:59,537] - aiogram.event - Update id=38939022 is handled. Duration 231 ms by bot id=6080976660
2024-03-06T09:50:57.409973529Z dispatcher.py:171 #INFO     [2024-03-06 09:50:57,409] - aiogram.event - Update id=38939023 is handled. Duration 251 ms by bot id=6080976660
2024-03-06T09:50:59.675102064Z dispatcher.py:171 #INFO     [2024-03-06 09:50:59,674] - aiogram.event - Update id=38939024 is handled. Duration 172 ms by bot id=6080976660
2024-03-06T09:51:01.367242306Z dispatcher.py:171 #INFO     [2024-03-06 09:51:01,366] - aiogram.event - Update id=38939025 is handled. Duration 346 ms by bot id=6080976660
2024-03-06T09:51:03.867154796Z dispatcher.py:171 #INFO     [2024-03-06 09:51:03,866] - aiogram.event - Update id=38939026 is handled. Duration 97 ms by bot id=6080976660
"
MRqRvHsL,Two styles of js functuons,BojidarDosev,JavaScript,Wednesday 6th of March 2024 03:51:11 AM CDT,"const plantNeedsWater = (day)  => {
  if (day === 'Wednesday') {
    return true;
  } else {
    return false;
  }
};



const plantNeedsWater = function(day)
{
  if(day === 'Wednesday')
  {
    return true;
  }
  else return false;
}
console.log(plantNeedsWater('Tuesday'));"
L05ZU4fs,Review Trust Capital,fxvnpro,PHP,Wednesday 6th of March 2024 03:43:59 AM CDT,https://www.fxvnpro.com/review-trust-capital/
63gBPujT,Review Trust Capital,reviewbrokers,PHP,Wednesday 6th of March 2024 03:42:13 AM CDT,https://www.reviewbrokers.net/review-trust-capital/
LUVsHKxY,seblor auth,XYLINA,HTML 5,Wednesday 6th of March 2024 03:24:39 AM CDT,<h1>HelloWorld!</h1>
nrXGqupS,QUERY SYMAX REGISTER,Zidan8376,MySQL,Wednesday 6th of March 2024 03:20:10 AM CDT,"UPDATE GENERAL ANGGOTA VARIANT
UPDATE 
	tb_anggota ta2
SET 
	ta2.id_variant = (
		SELECT 
			(
				CASE 
			        WHEN mm.id_member IS NOT NULL AND ml.id_loyal IS NULL THEN 6
			        WHEN ml.id_loyal IS NOT NULL THEN 5
			        ELSE 7
			    END
			) AS new_variant
		FROM 
			tb_anggota ta 	
		LEFT JOIN md_member mm ON
			ta.pmi_id = mm.person_id 
		LEFT JOIN md_loyal ml ON 
			ta.pmi_id = ml.pmi_id 
		LEFT JOIN md_variant mv ON 
			ta.id_variant = mv.id_variant
		WHERE
        	ta2.id_anggota = ta.id_anggota
)
WHERE EXISTS (
    SELECT 1
    FROM tb_anggota ta
    WHERE ta2.id_anggota = ta.id_anggota
)
AND 
ta2.id_login = 'LGN_RZLD66f'
-------------------------------------------------------------------------------------------------------------------------------------
GET EXPECTED VARIANT
SELECT 
	ta.id_anggota ,
	mv.id_variant AS old_variant,
	(
		CASE 
	        WHEN mm.id_member IS NOT NULL AND ml.id_loyal IS NULL THEN 6
	        WHEN ml.id_loyal IS NOT NULL THEN 5
	        ELSE 7
	    END
	) AS new_variant
FROM 
	tb_anggota ta 	
LEFT JOIN md_member mm ON
	ta.pmi_id = mm.person_id 
LEFT JOIN md_loyal ml ON 
	ta.pmi_id = ml.pmi_id 
LEFT JOIN md_variant mv ON 
	ta.id_variant = mv.id_variant 
WHERE
	ta.id_login = 'LGN_RZLD66f'"
h6CKEXiJ,BAF - User Activities,ariswb22,PostgreSQL,Wednesday 6th of March 2024 03:08:32 AM CDT,"select  
	users.""UserId"",
	users.""Username"", 
	users.""Name"", 
	activities.""Source"",
	activities.""Action"",
	activities.""Description"",
	activities.""Timestamp""
from dblink('dbname=Security port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Username"", ""Name"" FROM ""Users""') 
AS users(""UserId"" uuid, ""Username"" character varying(100), ""Name"" character varying(100))
inner join
(select  
	act.""UserId"",
	act.""Source"",
	act.""Action"", 
	act.""Description"",
	act.""Timestamp"" 
from dblink('dbname=Security port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""Activities""') 
AS act(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	mdl.""UserId"",
	mdl.""Source"",
	mdl.""Action"", 
	mdl.""Description"",
	mdl.""Timestamp"" 
from dblink('dbname=Models port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""Activities""') 
AS mdl(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Fdr.""UserId"",
	Fdr.""Source"",
	Fdr.""Action"", 
	Fdr.""Description"",
	Fdr.""Timestamp"" 
from dblink('dbname=Fdr port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""Activities""') 
AS Fdr(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Pdm.""UserId"",
	Pdm.""Source"",
	Pdm.""Action"", 
	Pdm.""Description"",
	Pdm.""Timestamp"" 
from dblink('dbname=PdModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""PdActivities""') 
AS Pdm(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Ars.""UserId"",
	Ars.""Source"",
	Ars.""Action"", 
	Ars.""Description"",
	Ars.""Timestamp"" 
from dblink('dbname=AccountingRulesets port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""AcctActivities""') 
AS Ars(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Cfm.""UserId"",
	Cfm.""Source"",
	Cfm.""Action"", 
	Cfm.""Description"",
	Cfm.""Timestamp"" 
from dblink('dbname=CashFlowModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""CfActivities""') 
AS Cfm(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Cm.""UserId"",
	Cm.""Source"",
	Cm.""Action"", 
	Cm.""Description"",
	Cm.""Timestamp"" 
from dblink('dbname=ClassificationModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""ClActivities""') 
AS Cm(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Em.""UserId"",
	Em.""Source"",
	Em.""Action"", 
	Em.""Description"",
	Em.""Timestamp"" 
from dblink('dbname=EadModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""EadActivities""') 
AS Em(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Ifr.""UserId"",
	Ifr.""Source"",
	Ifr.""Action"", 
	Ifr.""Description"",
	Ifr.""Timestamp"" 
from dblink('dbname=Ifrs9Ui port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""DeckActivities""') 
AS Ifr(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Lrs.""UserId"",
	Lrs.""Source"",
	Lrs.""Action"", 
	Lrs.""Description"",
	Lrs.""Timestamp"" 
from dblink('dbname=LevelRulesets port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""LevelActivities""') 
AS Lrs(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Lm.""UserId"",
	Lm.""Source"",
	Lm.""Action"", 
	Lm.""Description"",
	Lm.""Timestamp"" 
from dblink('dbname=LgdModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""LgdActivities""') 
AS Lm(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Mm.""UserId"",
	Mm.""Source"",
	Mm.""Action"", 
	Mm.""Description"",
	Mm.""Timestamp"" 
from dblink('dbname=MeasurementModels port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""MeasurementActivities""') 
AS Mm(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Srs.""UserId"",
	Srs.""Source"",
	Srs.""Action"", 
	Srs.""Description"",
	Srs.""Timestamp"" 
from dblink('dbname=SegmentRulesets port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""SegmentActivities""') 
AS Srs(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Sr.""UserId"",
	Sr.""Source"",
	Sr.""Action"", 
	Sr.""Description"",
	Sr.""Timestamp"" 
from dblink('dbname=StageRulesets port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Source"", ""Action"", ""Description"", ""Timestamp"" FROM ""StageActivities""') 
AS Sr(""UserId"" uuid, ""Source"" character varying(100), ""Action"" character varying(100), ""Description"" character varying(100), ""Timestamp"" timestamp without time zone)
union all 
select 
	Sr.""UserId"",
	'eStudio' as ""Source"",
	'Login' as ""Action"", 
	case when Sr.""IsLoginSuccess"" is true then 'Success' else 'Failed' end as ""Description"",
	Sr.""LoginWhen"" as ""Timestamp"" 
from dblink('dbname=Security port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""IsLoginSuccess"", ""LoginWhen"" FROM ""UserLoginAttempts""') 
AS Sr(""UserId"" uuid, ""IsLoginSuccess"" boolean, ""LoginWhen"" timestamp without time zone)
/*select 
	Sr.""UserId"",
	Sr.""Origin"" as ""Source"",
	'Login' as ""Action"", 
	Sr.""Status"" as ""Description"",
	Sr.""Timestamp"" 
from dblink('dbname=Security port=5758 host=172.16.2.100 user=dita password=Bussan2024!', 'SELECT ""UserId"", ""Status"", ""Origin"", ""Timestamp"" FROM ""AuthenticationEvents""') 
AS Sr(""UserId"" uuid, ""Status"" character varying(100), ""Origin"" character varying(100), ""Timestamp"" timestamp without time zone)
*/
) activities
on users.""UserId"" = activities.""UserId""
where activities.""Timestamp"" between '2023-01-01' and '2024-01-31' and users.""UserId""='7143efcf-d80d-4efa-9b34-c4d84dc2ef2a'
order by activities.""Timestamp"" desc"
WkwqcnVx,adaptive algo,Pearlfromsu,C#,Wednesday 6th of March 2024 03:05:56 AM CDT,"#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;
int main()
{
    int n;
    cin >> n;
    cout << setprecision(10) << fixed;
    vector<double> vc(n+1), counts(n+1, 1);
    double allcnt = n;
    vc[0] = 0;
    for(int i = 0; i < n; i++)
      vc[i+1] = 1.0/n;
    double a = 0, b = 1;
    string str;
    cin >> str;
    for(int k = 0; k <= str.size(); k++) {
        vector<double> res(n+1);
        cout << k+1 << "". ("" << str[k] << "") "" << "" a: "" << a << "" b: "" << b << endl;
        double sm = 0, dif = b-a;
        res[0] = a;
        for(int i = 1; k != str.size() && i <= n; i++) {
            sm += vc[i];
            cout << a + dif*sm << "" _ "";
            res[i] = a+dif*sm;
        }
        cout << endl;
        for(int i = 1; i<vc.size(); i++)
            cout << vc[i] << "", "";
        //res.push_back(b);
        
        if(k != str.size()) {
          int ind = str[k]-'0';
          a = res[ind-1];
          b = res[ind];
          counts[ind]++;
          allcnt++;
          for(int i = 1; i < vc.size(); i++)
            vc[i] = counts[i]/allcnt;
          cout << endl << endl;
        } else 
          cout << ""<-- result"";
        //cout << endl << endl;
    }
    
    return 0;
}




#include <iostream>
#include <vector>
using namespace std;
int main()
{
    int n;
    cin >> n;
    vector<double> vc(n+1);
    vc[0] = 0;
    for(int i = 0; i < n; i++)
      cin >> vc[i+1];
    double a, b;
    cin >> a >> b;
    string str;
    cin >> str;
    for(int k = 0; k <= str.size(); k++) {
    vector<double> res(n+1);
    cout << k+1 << "". a: "" << a << "" b: "" << b << endl;
    double sm = 0, dif = b-a;
    res[0] = a;
    for(int i = 1; k != str.size() && i <= n; i++) {
        sm += vc[i];
        cout << a + dif*sm << "" _ "";
        res[i] = a+dif*sm;
    }
    //res.push_back(b);
    
    if(k != str.size()) {
      int ind = str[k]-'0';
      a = res[ind-1];
      b = res[ind];
      cout << endl << endl;
    } else 
      cout << ""<-- result"";
    //cout << endl << endl;
    }
    
    return 0;
}f"
fvVPM18x,Top Score [Saudi Pro League] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 03:00:02 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610401/Soccer%20Point/Players/20240305_101003_1_rbeo0u.png"",
      ""player"": ""Saudi Pro League"",
      ""goal"": ""18""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610725/Soccer%20Point/Players/20240305_101045_p4cltl.png"",
      ""player"": ""Ollie Watkins"",
      ""goal"": ""16""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610754/Soccer%20Point/Players/20240305_101121_qed0c0.png"",
      ""player"": ""Moh Salah"",
      ""goal"": ""15""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610784/Soccer%20Point/Players/20240305_101222_dqjslp.png"",
      ""player"": ""Jarrod Bowen"",
      ""goal"": ""14""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610819/Soccer%20Point/Players/20240305_101311_lwofnn.png"",
      ""player"": ""Dominic Solanke"",
      ""goal"": ""14""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610854/Soccer%20Point/Players/20240305_101347_t3ot4p.png"",
      ""player"": ""Bukayo Saka"",
      ""goal"": ""13""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610962/Soccer%20Point/Players/20240305_101416_uzobwq.png"",
      ""player"": ""Son Heung-min"",
      ""goal"": ""13""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610942/Soccer%20Point/Players/20240305_101454_hyf57u.png"",
      ""player"": ""Phil Foden"",
      ""goal"": ""11""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610955/Soccer%20Point/Players/20240305_101518_vlmkhq.png"",
      ""player"": ""Alexander Isak"",
      ""goal"": ""11""
    }
]"
Lbsk8WEd,Classement [Saudi Pro League] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:59:13 AM CDT,"[
	{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""club"": ""Saudi Pro League"",
      ""win"": ""19"",
      ""draw"": ""6"",
      ""lose"": ""2"",
      ""points"": ""63""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""club"": ""Arsenal"",
      ""win"": ""19"",
      ""draw"": ""4"",
      ""lose"": ""4"",
      ""points"": ""61""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""club"": ""Aston Villa"",
      ""win"": ""17"",
      ""draw"": ""4"",
      ""lose"": ""6"",
      ""points"": ""55""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""club"": ""Tottenham"",
      ""win"": ""15"",
      ""draw"": ""5"",
      ""lose"": ""6"",
      ""points"": ""50""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""club"": ""Man United"",
      ""win"": ""14"",
      ""draw"": ""2"",
      ""lose"": ""11"",
      ""points"": ""44""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""club"": ""West Ham"",
      ""win"": ""12"",
      ""draw"": ""6"",
      ""lose"": ""9"",
      ""points"": ""42""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""club"": ""Newcastle"",
      ""win"": ""12"",
      ""draw"": ""4"",
      ""lose"": ""11"",
      ""points"": ""40""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611050/Soccer%20Point/Premier%20League/1237_ufrewl.png"",
      ""club"": ""Brighton"",
      ""win"": ""10"",
      ""draw"": ""9"",
      ""lose"": ""8"",
      ""points"": ""39""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611052/Soccer%20Point/Premier%20League/543_nq6zxq.png"",
      ""club"": ""Wolves"",
      ""win"": ""11"",
      ""draw"": ""5"",
      ""lose"": ""11"",
      ""points"": ""38""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""club"": ""Chelsea"",
      ""win"": ""10"",
      ""draw"": ""6"",
      ""lose"": ""10"",
      ""points"": ""36""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""club"": ""Fulham FC"",
      ""win"": ""10"",
      ""draw"": ""5"",
      ""lose"": ""12"",
      ""points"": ""35""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""club"": ""Bournemouth"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""11"",
      ""points"": ""31""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e2_d36fyo.png"",
      ""club"": ""Crystal Palace"",
      ""win"": ""7"",
      ""draw"": ""7"",
      ""lose"": ""13"",
      ""points"": ""28""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""club"": ""Brentford"",
      ""win"": ""7"",
      ""draw"": ""5"",
      ""lose"": ""15"",
      ""points"": ""26""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""club"": ""Everton"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""12"",
      ""points"": ""25""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611056/Soccer%20Point/Premier%20League/703_wwzrxb.png"",
      ""club"": ""Nottingham Forest"",
      ""win"": ""6"",
      ""draw"": ""6"",
      ""lose"": ""15"",
      ""points"": ""24""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611058/Soccer%20Point/Premier%20League/1031_fjvi2p.png"",
      ""club"": ""Luton"",
      ""win"": ""5"",
      ""draw"": ""5"",
      ""lose"": ""16"",
      ""points"": ""20""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611059/Soccer%20Point/Premier%20League/1132_s8rdbj.png"",
      ""club"": ""Burnley"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611061/Soccer%20Point/Premier%20League/350_ppbznf.png"",
      ""club"": ""Sheffield United"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    }
]"
4VAhJEmB,Timetable [Saudi Pro League] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:57:55 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Saudi Pro League"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""team1"": ""Liverpool"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""team2"": ""West Ham"",
      ""date"": ""12 Oct"",
      ""time"": ""04:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""team1"": ""Arsenal"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""team2"": ""Chelsea"",
      ""date"": ""13 Oct"",
      ""time"": ""01:20""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""team1"": ""Newcastle"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""team2"": ""Everton"",
      ""date"": ""14 Oct"",
      ""time"": ""06:23""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""team1"": ""Fulham Fc"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""team2"": ""Brentford"",
      ""date"": ""16 Oct"",
      ""time"": ""02:30""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
]"
RRnpfLLY,Top Score [UCL] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:56:55 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610401/Soccer%20Point/Players/20240305_101003_1_rbeo0u.png"",
      ""player"": ""UCL"",
      ""goal"": ""18""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610725/Soccer%20Point/Players/20240305_101045_p4cltl.png"",
      ""player"": ""Ollie Watkins"",
      ""goal"": ""16""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610754/Soccer%20Point/Players/20240305_101121_qed0c0.png"",
      ""player"": ""Moh Salah"",
      ""goal"": ""15""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610784/Soccer%20Point/Players/20240305_101222_dqjslp.png"",
      ""player"": ""Jarrod Bowen"",
      ""goal"": ""14""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610819/Soccer%20Point/Players/20240305_101311_lwofnn.png"",
      ""player"": ""Dominic Solanke"",
      ""goal"": ""14""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610854/Soccer%20Point/Players/20240305_101347_t3ot4p.png"",
      ""player"": ""Bukayo Saka"",
      ""goal"": ""13""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610962/Soccer%20Point/Players/20240305_101416_uzobwq.png"",
      ""player"": ""Son Heung-min"",
      ""goal"": ""13""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610942/Soccer%20Point/Players/20240305_101454_hyf57u.png"",
      ""player"": ""Phil Foden"",
      ""goal"": ""11""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610955/Soccer%20Point/Players/20240305_101518_vlmkhq.png"",
      ""player"": ""Alexander Isak"",
      ""goal"": ""11""
    }
]"
Qm0wGtPw,Classement [UCL] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:56:09 AM CDT,"[
	{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""club"": ""UCL"",
      ""win"": ""19"",
      ""draw"": ""6"",
      ""lose"": ""2"",
      ""points"": ""63""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""club"": ""Arsenal"",
      ""win"": ""19"",
      ""draw"": ""4"",
      ""lose"": ""4"",
      ""points"": ""61""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""club"": ""Aston Villa"",
      ""win"": ""17"",
      ""draw"": ""4"",
      ""lose"": ""6"",
      ""points"": ""55""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""club"": ""Tottenham"",
      ""win"": ""15"",
      ""draw"": ""5"",
      ""lose"": ""6"",
      ""points"": ""50""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""club"": ""Man United"",
      ""win"": ""14"",
      ""draw"": ""2"",
      ""lose"": ""11"",
      ""points"": ""44""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""club"": ""West Ham"",
      ""win"": ""12"",
      ""draw"": ""6"",
      ""lose"": ""9"",
      ""points"": ""42""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""club"": ""Newcastle"",
      ""win"": ""12"",
      ""draw"": ""4"",
      ""lose"": ""11"",
      ""points"": ""40""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611050/Soccer%20Point/Premier%20League/1237_ufrewl.png"",
      ""club"": ""Brighton"",
      ""win"": ""10"",
      ""draw"": ""9"",
      ""lose"": ""8"",
      ""points"": ""39""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611052/Soccer%20Point/Premier%20League/543_nq6zxq.png"",
      ""club"": ""Wolves"",
      ""win"": ""11"",
      ""draw"": ""5"",
      ""lose"": ""11"",
      ""points"": ""38""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""club"": ""Chelsea"",
      ""win"": ""10"",
      ""draw"": ""6"",
      ""lose"": ""10"",
      ""points"": ""36""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""club"": ""Fulham FC"",
      ""win"": ""10"",
      ""draw"": ""5"",
      ""lose"": ""12"",
      ""points"": ""35""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""club"": ""Bournemouth"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""11"",
      ""points"": ""31""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e2_d36fyo.png"",
      ""club"": ""Crystal Palace"",
      ""win"": ""7"",
      ""draw"": ""7"",
      ""lose"": ""13"",
      ""points"": ""28""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""club"": ""Brentford"",
      ""win"": ""7"",
      ""draw"": ""5"",
      ""lose"": ""15"",
      ""points"": ""26""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""club"": ""Everton"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""12"",
      ""points"": ""25""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611056/Soccer%20Point/Premier%20League/703_wwzrxb.png"",
      ""club"": ""Nottingham Forest"",
      ""win"": ""6"",
      ""draw"": ""6"",
      ""lose"": ""15"",
      ""points"": ""24""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611058/Soccer%20Point/Premier%20League/1031_fjvi2p.png"",
      ""club"": ""Luton"",
      ""win"": ""5"",
      ""draw"": ""5"",
      ""lose"": ""16"",
      ""points"": ""20""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611059/Soccer%20Point/Premier%20League/1132_s8rdbj.png"",
      ""club"": ""Burnley"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611061/Soccer%20Point/Premier%20League/350_ppbznf.png"",
      ""club"": ""Sheffield United"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    }
]"
mjazteL3,Timetable [UCL] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:55:14 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""UCL"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""team1"": ""Liverpool"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""team2"": ""West Ham"",
      ""date"": ""12 Oct"",
      ""time"": ""04:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""team1"": ""Arsenal"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""team2"": ""Chelsea"",
      ""date"": ""13 Oct"",
      ""time"": ""01:20""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""team1"": ""Newcastle"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""team2"": ""Everton"",
      ""date"": ""14 Oct"",
      ""time"": ""06:23""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""team1"": ""Fulham Fc"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""team2"": ""Brentford"",
      ""date"": ""16 Oct"",
      ""time"": ""02:30""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
]"
auABcsqK,Timetable [Serie A] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 02:50:26 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Bundesliga"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""team1"": ""Liverpool"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""team2"": ""West Ham"",
      ""date"": ""12 Oct"",
      ""time"": ""04:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""team1"": ""Arsenal"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""team2"": ""Chelsea"",
      ""date"": ""13 Oct"",
      ""time"": ""01:20""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""team1"": ""Newcastle"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""team2"": ""Everton"",
      ""date"": ""14 Oct"",
      ""time"": ""06:23""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""team1"": ""Fulham Fc"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""team2"": ""Brentford"",
      ""date"": ""16 Oct"",
      ""time"": ""02:30""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
]"
SWgHPyyW,Number Matrix Operations,rado_dimitrov66,C++,Wednesday 6th of March 2024 02:24:20 AM CDT,"#include <iostream>

using namespace std;

const unsigned short SIZE = 5;


void startInit(int matrix[][SIZE])
{
	for (int i = 0; i < SIZE; i++) {

		for (int j = 0; j < SIZE; j++) {

			matrix[i][j] = SIZE - i;
		}
	}
}

void printArray(int matrix[][SIZE]) {

	for (int i = 0; i < SIZE; i++) {

		for (int j = 0; j < SIZE; j++) {

			cout << matrix[i][j] << "" "";
		}

		cout << endl;
	}

}

void arrayCopyMatrix(const int matrix[][SIZE], int copyArr[][SIZE]) {

	for (int i = 0; i < SIZE; i++) {

		for (int j = 0; j < SIZE; j++) {

			copyArr[i][j] = matrix[i][j];
		}
	}
}

void makeZeroUnderGeneralDiagonal(int matrix[][SIZE]) {


	unsigned short choose = -1;


	int copyArr[SIZE][SIZE];

	do
	{

		cout << ""Choose action:\n[1] Change main matrix\n[2] Make copy on main matrix\n[0] Return to general menu\n:"";
		cin >> choose;

		switch (choose)
		{
		case 1:


			for (int i = 1; i < SIZE; i++) {

				for (int j = 0; j < i; j++) {

					matrix[i][j] = 0;
				}
			}

			printArray(matrix);

			choose = -1;

			break;

		case 2:

			arrayCopyMatrix(matrix, copyArr);



			for (int i = 1; i < SIZE; i++) {

				for (int j = 0; j < i; j++) {

					copyArr[i][j] = 0;
				}
			}

			printArray(copyArr);

			choose = -1;

			break;

		default:

			break;
		}

	} while (choose < 0 || choose > 2);



}


void makeCircle(int matrix[][SIZE]) {

	unsigned short choose = -1;


	int copyArr[SIZE][SIZE];

	const unsigned short centralIndex = SIZE / 2;


	do
	{

		cout << ""Choose action:\n[1] Change main matrix\n[2] Make copy on main matrix\n[0] Return to general menu\n:"";
		cin >> choose;

		switch (choose)
		{
		case 1:


			for (int i = 0; i < centralIndex; i++)
			{

				for (int j = i; j < SIZE - i; j++) {

					for (int g = i; g < SIZE - i; g++) {
						matrix[j][g] = SIZE - i;
					}
				}
			}

			matrix[centralIndex][centralIndex] = centralIndex + 1;


			printArray(matrix);

			choose = -1;

			break;

		case 2:

			arrayCopyMatrix(matrix, copyArr);

			for (int i = 0; i < centralIndex; i++)
			{

				for (int j = i; j < SIZE - i; j++) {

					for (int g = i; g < SIZE - i; g++) {
						copyArr[j][g] = SIZE - i;
					}
				}
			}

			copyArr[centralIndex][centralIndex] = centralIndex + 1;


			printArray(copyArr);

			choose = -1;

			break;


		default:

			break;
		}

	} while (choose < 0 || choose > 2);
}

void makeNullDiagonalAndSort(int matrix[][SIZE]) {
	unsigned short choose = -1;


	int copyArr[SIZE][SIZE];


	unsigned short counter = 0;
	unsigned short number = 1;
	do
	{

		cout << ""Choose action:\n[1] Change main matrix\n[2] Make copy on main matrix\n[0] Return to general menu\n:"";
		cin >> choose;

		switch (choose)
		{
		case 1:



			for (int i = 0; i < SIZE; i++) {

				matrix[i][counter] = 0;

				for (int j = counter + 1; j < SIZE; j++) {
					matrix[j][counter] = number;

					number++;
				}

				counter++;
			}

			for (int i = counter - 1; i > 0; i--) {


				for (int j = counter - 2; j >= 0; j--) {
					matrix[j][counter - 1] = number;

					number++;
				}

				counter--;
			}

			printArray(matrix);

			choose = -1;

			counter = 0;

			number = 1;

			break;

		case 2:

			arrayCopyMatrix(matrix, copyArr);

			for (int i = 0; i < SIZE; i++) {

				copyArr[i][counter] = 0;

				for (int j = counter + 1; j < SIZE; j++) {
					copyArr[j][counter] = number;

					number++;
				}

				counter++;
			}

			for (int i = counter - 1; i > 0; i--) {


				for (int j = counter - 2; j >= 0; j--) {
					copyArr[j][counter - 1] = number;

					number++;
				}

				counter--;
			}

			printArray(copyArr);

			choose = -1;

			counter = 0;

			number = 1;

			break;


		default:

			break;
		}

	} while (choose < 0 || choose > 2);
}

void makeSpiralOfNumber(int matrix[][SIZE]) {

	unsigned short choose = -1;


	int copyArr[SIZE][SIZE];


	unsigned short counter = 0;
	unsigned short number = 1;
	do
	{

		cout << ""Choose action:\n[1] Change main matrix\n[2] Make copy on main matrix\n[0] Return to general menu\n:"";
		cin >> choose;

		switch (choose)
		{
		case 1:

			matrix[0][0] = 1;

			for(int i = 1; i < SIZE * SIZE; i++)

			printArray(matrix);

			choose = -1;

			counter = 0;

			number = 1;

			break;

		case 2:

			arrayCopyMatrix(matrix, copyArr);

			for (int i = 0; i < SIZE; i++) {

				copyArr[i][counter] = 0;

				for (int j = counter + 1; j < SIZE; j++) {
					copyArr[j][counter] = number;

					number++;
				}

				counter++;
			}

			for (int i = counter - 1; i > 0; i--) {


				for (int j = counter - 2; j >= 0; j--) {
					copyArr[j][counter - 1] = number;

					number++;
				}

				counter--;
			}

			printArray(copyArr);

			choose = -1;

			counter = 0;

			number = 1;

			break;


		default:

			break;
		}

	} while (choose < 0 || choose > 2);
}


int main()
{
	int matrix[SIZE][SIZE];

	unsigned short choose = -1;

	// Default matrix array values
	startInit(matrix);

	do
	{

		cout << ""Choose action:\n[1] Make null under general diagonal\n[2] Make circle matrix\n[3] Make null diagonal and sort numbers\n:"";
		cin >> choose;

		switch (choose)
		{
		case 1:

			makeZeroUnderGeneralDiagonal(matrix);

			choose = -1;

			break;

		case 2:

			makeCircle(matrix);

			choose = -1;

			break;

		case 3:

			makeNullDiagonalAndSort(matrix);

			choose = -1;

			break;

		case 4:

			makeSpiralOfNumber(matrix);

			choose = -1;

			break;

		default:

			break;
		}

	} while (choose < 0 || choose > 4);

}


"
Hp0ANMZU,Vivaldi Slim,Ruhart,CSS,Wednesday 6th of March 2024 01:46:42 AM CDT,"/* Vivaldi Slim */

/* Slim Main */

/* Changes the size of the of the mainbar background. */
.mainbar {
    height: 37px;
}

#browser.win.address-top .toolbar:has(.window-buttongroup.on-mainbar),
#browser.linux.address-top .toolbar:has(.window-buttongroup.on-mainbar) {
    min-height: calc(32px / var(--uiZoomLevel));
}

/* Pushes the security and bookmark buttons back down, because the above rule will push everything up, including these and they do not need to be pushed up. */
.toolbar-insideinput.toolbar-insideinput.toolbar-insideinput
    > .button-toolbar
    > button:not(:hover):not(:active):not(:focus):not(.button-pressed),
.toolbar-insideinput.toolbar-insideinput.toolbar-insideinput
    > .toolbar-group
    > .button-toolbar
    > button:not(:hover):not(:active):not(:focus):not(.button-pressed) {
    margin-top: 2px;
}

/* Resizes the maximize, minimize and close buttons to be in-line with the mainbar. */
.disable-titlebar#browser.win .window-buttongroup {
    height: 36px;
}

.toolbar-mainbar .toolbar-extensions > .button-toolbar > button:first-of-type {
    min-height: 32px;
    margin-top: 3px;
}

/* Aligns hamburger/Vivaldi button. */
.disable-titlebar.address-top#browser:not(.tabs-top) .vivaldi {
    margin-top: 2px;
}

/* Pushes the URL bar up to be centered with the new mainbar size. */
.UrlBar-SearchField,
.UrlBar-AddressField {
    height: 24px;
    margin-top: 3px;
    margin-bottom: 1px;
}

/* Pushes the content blocker button up to be in-line with the URL bar, and ensures that it doesn't move when hovering over it. */
.toolbar-insideinput.toolbar-insideinput.toolbar-insideinput
    > .button-toolbar
    > button,
.toolbar-insideinput.toolbar-insideinput.toolbar-insideinput
    > .toolbar-group
    > .button-toolbar
    > button {
    margin: 2px 0 2px 0;
}

/* Left and Right Style Tabs - Removes the larger forehead padding on the workspace icon in the side-tabs view, making it more size-matched with the tab icons. */
.tabbar-workspace-button + #tabs-tabbar-container.left,
.tabbar-workspace-button + #tabs-tabbar-container.right {
    padding-top: 0;
}

/* Left and Right Style Tabs - Removes margins around Workspace icon to be in-line with tabs in icon-only mode. */
#app .tabs-left .button-toolbar.workspace-popup.tabbar-workspace-button button,
#app
    .tabs-right
    .button-toolbar.workspace-popup.tabbar-workspace-button
    button {
    margin: 0;
}

/* Centers mainbar icons. */
.color-behind-tabs-on
    .toolbar-mainbar
    .toolbar-extensions
    > .button-toolbar
    > button:hover,
.color-behind-tabs-on
    .toolbar-mainbar
    .page-zoom-controls
    > .button-toolbar
    > button:hover,
.color-behind-tabs-on .toolbar-mainbar > .button-toolbar > button:hover,
.color-behind-tabs-on
    .toolbar-mainbar
    .toolbar-extensions
    > .toolbar-group
    > .button-toolbar
    > button:hover,
.color-behind-tabs-on
    .toolbar-mainbar
    .page-zoom-controls
    > .toolbar-group
    > .button-toolbar
    > button:hover,
.color-behind-tabs-on
    .toolbar-mainbar
    > .toolbar-group
    > .button-toolbar
    > button:hover,
.color-behind-tabs-on
    .toolbar-mainbar
    .toolbar-extensions
    > .button-toolbar
    > button:active,
.color-behind-tabs-on
    .toolbar-mainbar
    .page-zoom-controls
    > .button-toolbar
    > button:active,
.color-behind-tabs-on .toolbar-mainbar > .button-toolbar > button:active,
.color-behind-tabs-on
    .toolbar-mainbar
    .toolbar-extensions
    > .toolbar-group
    > .button-toolbar
    > button:active,
.color-behind-tabs-on
    .toolbar-mainbar
    .page-zoom-controls
    > .toolbar-group
    > .button-toolbar
    > button:active,
.color-behind-tabs-on
    .toolbar-mainbar
    > .toolbar-group
    > .button-toolbar
    > button:active,
.toolbar-mainbar .toolbar-extensions > .button-toolbar > button,
.toolbar-mainbar .page-zoom-controls > .button-toolbar > button,
.toolbar-mainbar > .button-toolbar > button,
.toolbar-mainbar
    .toolbar-extensions
    > .toolbar-group
    > .button-toolbar
    > button,
.toolbar-mainbar
    .page-zoom-controls
    > .toolbar-group
    > .button-toolbar
    > button,
.toolbar-mainbar > .toolbar-group > .button-toolbar > button {
    margin-bottom: 2px;
}

.button-toolbar > button {
    margin-top: 4px;
}

/* End Slim Main*/

/* Additionals */

/* Center Bookmarks */
.bookmark-bar .observer {
    justify-content: center;
}

/* Expanding Left Tabs */

/* Animate the tabs, set initial width. */
#tabs-tabbar-container.left {
    transition: all 250ms ease !important;
    width: 30px;
}

#tabs-tabbar-container.left:hover {
    width: 250px !important;
}

.tabbar-wrapper {
    position: absolute !important;
    z-index: 200 !important;
    height: 100% !important;
    transition: all 250ms ease !important;
    width: 30px;
}

.tabbar-wrapper:hover {
    width: 250px !important;
}

#webview-container {
    margin-left: 30px;
}

@media all and (display-mode: fullscreen) {
    #webview-container {
        margin-left: 0 !important;
    }
}

/* Shunt the status info (text on hover) over to accomodate tabs */
#webview-container ~ .StatusInfo {
    left: 36px !important;
}

.newtab {
    opacity: 0;
}

#tabs-tabbar-container.left:hover .newtab {
    opacity: 1 !important;
    transition: opacity 200ms ease 250ms;
}

/* End Additionals */
"
unHbUnmA,Top Score [Bundesliga] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 01:45:38 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610401/Soccer%20Point/Players/20240305_101003_1_rbeo0u.png"",
      ""player"": ""Bundesliga"",
      ""goal"": ""18""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610725/Soccer%20Point/Players/20240305_101045_p4cltl.png"",
      ""player"": ""Ollie Watkins"",
      ""goal"": ""16""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610754/Soccer%20Point/Players/20240305_101121_qed0c0.png"",
      ""player"": ""Moh Salah"",
      ""goal"": ""15""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610784/Soccer%20Point/Players/20240305_101222_dqjslp.png"",
      ""player"": ""Jarrod Bowen"",
      ""goal"": ""14""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610819/Soccer%20Point/Players/20240305_101311_lwofnn.png"",
      ""player"": ""Dominic Solanke"",
      ""goal"": ""14""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610854/Soccer%20Point/Players/20240305_101347_t3ot4p.png"",
      ""player"": ""Bukayo Saka"",
      ""goal"": ""13""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610962/Soccer%20Point/Players/20240305_101416_uzobwq.png"",
      ""player"": ""Son Heung-min"",
      ""goal"": ""13""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610942/Soccer%20Point/Players/20240305_101454_hyf57u.png"",
      ""player"": ""Phil Foden"",
      ""goal"": ""11""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610955/Soccer%20Point/Players/20240305_101518_vlmkhq.png"",
      ""player"": ""Alexander Isak"",
      ""goal"": ""11""
    }
]"
paXDYDwG,Classement [Bundesliga] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 01:45:03 AM CDT,"[
	{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""club"": ""Bundesliga"",
      ""win"": ""19"",
      ""draw"": ""6"",
      ""lose"": ""2"",
      ""points"": ""63""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""club"": ""Arsenal"",
      ""win"": ""19"",
      ""draw"": ""4"",
      ""lose"": ""4"",
      ""points"": ""61""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""club"": ""Aston Villa"",
      ""win"": ""17"",
      ""draw"": ""4"",
      ""lose"": ""6"",
      ""points"": ""55""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""club"": ""Tottenham"",
      ""win"": ""15"",
      ""draw"": ""5"",
      ""lose"": ""6"",
      ""points"": ""50""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""club"": ""Man United"",
      ""win"": ""14"",
      ""draw"": ""2"",
      ""lose"": ""11"",
      ""points"": ""44""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""club"": ""West Ham"",
      ""win"": ""12"",
      ""draw"": ""6"",
      ""lose"": ""9"",
      ""points"": ""42""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""club"": ""Newcastle"",
      ""win"": ""12"",
      ""draw"": ""4"",
      ""lose"": ""11"",
      ""points"": ""40""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611050/Soccer%20Point/Premier%20League/1237_ufrewl.png"",
      ""club"": ""Brighton"",
      ""win"": ""10"",
      ""draw"": ""9"",
      ""lose"": ""8"",
      ""points"": ""39""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611052/Soccer%20Point/Premier%20League/543_nq6zxq.png"",
      ""club"": ""Wolves"",
      ""win"": ""11"",
      ""draw"": ""5"",
      ""lose"": ""11"",
      ""points"": ""38""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""club"": ""Chelsea"",
      ""win"": ""10"",
      ""draw"": ""6"",
      ""lose"": ""10"",
      ""points"": ""36""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""club"": ""Fulham FC"",
      ""win"": ""10"",
      ""draw"": ""5"",
      ""lose"": ""12"",
      ""points"": ""35""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""club"": ""Bournemouth"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""11"",
      ""points"": ""31""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e2_d36fyo.png"",
      ""club"": ""Crystal Palace"",
      ""win"": ""7"",
      ""draw"": ""7"",
      ""lose"": ""13"",
      ""points"": ""28""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""club"": ""Brentford"",
      ""win"": ""7"",
      ""draw"": ""5"",
      ""lose"": ""15"",
      ""points"": ""26""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""club"": ""Everton"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""12"",
      ""points"": ""25""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611056/Soccer%20Point/Premier%20League/703_wwzrxb.png"",
      ""club"": ""Nottingham Forest"",
      ""win"": ""6"",
      ""draw"": ""6"",
      ""lose"": ""15"",
      ""points"": ""24""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611058/Soccer%20Point/Premier%20League/1031_fjvi2p.png"",
      ""club"": ""Luton"",
      ""win"": ""5"",
      ""draw"": ""5"",
      ""lose"": ""16"",
      ""points"": ""20""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611059/Soccer%20Point/Premier%20League/1132_s8rdbj.png"",
      ""club"": ""Burnley"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611061/Soccer%20Point/Premier%20League/350_ppbznf.png"",
      ""club"": ""Sheffield United"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    }
]"
3BqiaiEg,Timetable [Serie A] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 01:34:10 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Serie A"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""team1"": ""Liverpool"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""team2"": ""West Ham"",
      ""date"": ""12 Oct"",
      ""time"": ""04:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""team1"": ""Arsenal"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""team2"": ""Chelsea"",
      ""date"": ""13 Oct"",
      ""time"": ""01:20""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""team1"": ""Newcastle"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""team2"": ""Everton"",
      ""date"": ""14 Oct"",
      ""time"": ""06:23""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""team1"": ""Fulham Fc"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""team2"": ""Brentford"",
      ""date"": ""16 Oct"",
      ""time"": ""02:30""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709321562/Soccer%20Point/La%20Liga/20240302_021751_m5ulf4.png"",
      ""team2"": ""Barcelona"",
      ""date"": ""8 Oct"",
      ""time"": ""06:00""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""team1"": ""Man City"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""team2"": ""Man Untd"",
      ""date"": ""10 Oct"",
      ""time"": ""06:00""
    }
]"
Knunk3Qv,very well done FEN BW MTM == 5 OK,max2201111,Python,Wednesday 6th of March 2024 01:09:17 AM CDT,"import chess

def simplify_fen(fen):
    """"""Simplifies a FEN string to only include position, turn, castling availability, and en passant target.""""""
    return ' '.join(fen.split(' ')[:4])

def add_descendants_iteratively(game_tree, fen_to_node_id):
    """"""Expands the game tree by iteratively adding legal move descendants of each game state.""""""
    queue = [(1, 0)]
    while queue:
        node_id, _ = queue.pop(0)
        board = chess.Board(game_tree[node_id]['fen'] + "" 0 1"")
        for move in board.legal_moves:
            move = chess.Move(move.from_square, move.to_square, promotion=chess.QUEEN) if move.promotion else move
            board.push(move)
            simplified_fen = simplify_fen(board.fen())
            if simplified_fen not in fen_to_node_id:
                new_node_id = len(game_tree) + 1
                game_tree[new_node_id] = {
                    'fen': simplified_fen,
                    'moves_to_mate': None,
                    'parent': node_id,
                    'color': chess.WHITE if board.turn else chess.BLACK,
                    'result': None,
                    'processed': False,
                    'sequence': [],
                    'children': [],
                    'to_end': None,
                }
                fen_to_node_id[simplified_fen] = new_node_id
                game_tree[node_id]['children'].append(new_node_id)
                queue.append((new_node_id, 0))
            board.pop()

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node based on the initial FEN.""""""
    simplified_fen = simplify_fen(initial_fen)
    game_tree = {1: {'fen': simplified_fen, 'moves_to_mate': None, 'parent': None,
                     'color': chess.WHITE if 'w' in initial_fen else chess.BLACK,
                     'result': None, 'processed': False, 'sequence': [], 'children': [], 'to_end': None}}
    fen_to_node_id = {simplified_fen: 1}
    return game_tree, fen_to_node_id

def update_game_outcomes(game_tree):
    """"""Updates game outcomes based on the current board state for each node.""""""
    for node in game_tree.values():
        board = chess.Board(node['fen'] + "" 0 1"")
        if board.is_game_over():
            outcome = board.outcome()
            node['processed'] = True
            node['result'] = 1 if outcome and outcome.winner == chess.WHITE else -1 if outcome and outcome.winner == chess.BLACK else 0
            node['moves_to_mate'] = 0 if node['result'] != 0 else None
            node['to_end'] = 0


def update_parent_preferences(node_id, game_tree, stronger):
    node = game_tree[node_id]
    if node['processed']:
        return node['to_end'], node['moves_to_mate'], node['result']

    is_maximizing = node['color'] == stronger
    desired_result = 1 if stronger == chess.WHITE else -1
    
    # Initialize best_path_length based on whether we are maximizing or minimizing
    best_path_length = None  # We start with None to be agnostic about the direction of comparison initially
    best_child_id = None
    best_result = None

    for child_id in node['children']:
        _, child_moves_to_mate, child_result = update_parent_preferences(child_id, game_tree, stronger)
        if child_moves_to_mate is None:
            continue

        # Decide when to update based on maximizing or minimizing player logic
        if is_maximizing:
            # For maximizing, we look for a smaller number than currently best (shortest path to checkmate)
            if best_path_length is None or (child_moves_to_mate < best_path_length):
                best_path_length, best_child_id, best_result = child_moves_to_mate, child_id, child_result
        else:
            # For minimizing, we look for a larger number than currently best (longest path to avoid checkmate)
            if best_path_length is None or (child_moves_to_mate > best_path_length):
                best_path_length, best_child_id, best_result = child_moves_to_mate, child_id, child_result

    if best_child_id is not None:
        node['sequence'] = [best_child_id]
        node['result'] = best_result
        node['to_end'] = best_path_length + 1 if best_path_length is not None else None
        node['moves_to_mate'] = best_path_length + 1 if best_result == desired_result else None
    else:
        node['to_end'], node['moves_to_mate'], node['sequence'] = None, None, []

    node['processed'] = True
    return node['to_end'], node['moves_to_mate'], node['result']


def print_sequence_from_root(A):
    current_node_id = 1
    A[1]['sequence'] = [29]
 #   A[1]['sequence'] = [13]

    while True:
        node = A[current_node_id]
        board = chess.Board(node['fen'] + "" 0 1"")
        print(f""Node ID: {current_node_id}, Moves to Mate: {node['moves_to_mate']}, Result: {node['result']}"")
        print(board, ""\n"", node['fen'],""\n\n"")
        
        if not node['sequence']:
            break
        current_node_id = node['sequence'][0]


def main():
    initial_fen = ""7Q/8/8/6k1/2K5/8/8/8 w - - 0 1""
    initial_fen = ""8/5k1Q/3K4/8/8/8/8/8 b - - 0 1""
    initial_fen = ""8/2k5/8/5Q2/8/8/2K5/8 w - - 0 1""

    initial_fen = ""2k5/8/5Q2/3K4/8/8/8/8 w - - 0 1""

    game_tree, fen_to_node_id = initialize_game_tree(initial_fen)
    add_descendants_iteratively(game_tree, fen_to_node_id)
    update_game_outcomes(game_tree)
    update_parent_preferences(1, game_tree, chess.WHITE)
    print(""Final Output:"")
    print(game_tree[1])
    print(game_tree[2])
    print(game_tree[3])
    print(game_tree[4])

    print_sequence_from_root(game_tree)
    
    for key in range(1,20000):
        if game_tree[key]['to_end'] != None: # and A[key]['to_end'] > 9:
            print(f""{key}:: {game_tree[key]['to_end']} {game_tree[key]}\n{chess.Board(game_tree[key]['fen'])}<\n"")

    
    
if __name__ == ""__main__"":
    main()"
u7FkUmGU,Top Score [Serie A] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 01:09:15 AM CDT,"[
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610401/Soccer%20Point/Players/20240305_101003_1_rbeo0u.png"",
      ""player"": ""Serie A"",
      ""goal"": ""18""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610725/Soccer%20Point/Players/20240305_101045_p4cltl.png"",
      ""player"": ""Ollie Watkins"",
      ""goal"": ""16""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610754/Soccer%20Point/Players/20240305_101121_qed0c0.png"",
      ""player"": ""Moh Salah"",
      ""goal"": ""15""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610784/Soccer%20Point/Players/20240305_101222_dqjslp.png"",
      ""player"": ""Jarrod Bowen"",
      ""goal"": ""14""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610819/Soccer%20Point/Players/20240305_101311_lwofnn.png"",
      ""player"": ""Dominic Solanke"",
      ""goal"": ""14""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610854/Soccer%20Point/Players/20240305_101347_t3ot4p.png"",
      ""player"": ""Bukayo Saka"",
      ""goal"": ""13""
    },
    {
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610962/Soccer%20Point/Players/20240305_101416_uzobwq.png"",
      ""player"": ""Son Heung-min"",
      ""goal"": ""13""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610942/Soccer%20Point/Players/20240305_101454_hyf57u.png"",
      ""player"": ""Phil Foden"",
      ""goal"": ""11""
    },
	{
      ""image1"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""image2"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709610955/Soccer%20Point/Players/20240305_101518_vlmkhq.png"",
      ""player"": ""Alexander Isak"",
      ""goal"": ""11""
    }
]"
6SvK4bD4,Classement [Serie A] (Soccer Point),AhmadXploit,Dart,Wednesday 6th of March 2024 01:05:20 AM CDT,"[
	{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e5_w9veyu.png"",
      ""club"": ""Serie A"",
      ""win"": ""19"",
      ""draw"": ""6"",
      ""lose"": ""2"",
      ""points"": ""63""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4df_yfzrsw.png"",
      ""club"": ""Arsenal"",
      ""win"": ""19"",
      ""draw"": ""4"",
      ""lose"": ""4"",
      ""points"": ""61""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611045/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e4_ymm8yr.png"",
      ""club"": ""Aston Villa"",
      ""win"": ""17"",
      ""draw"": ""4"",
      ""lose"": ""6"",
      ""points"": ""55""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611047/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ee_s7taxo.png"",
      ""club"": ""Tottenham"",
      ""win"": ""15"",
      ""draw"": ""5"",
      ""lose"": ""6"",
      ""points"": ""50""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234285/Soccer%20Point/Premier%20League/mu_mb8kn8.png"",
      ""club"": ""Man United"",
      ""win"": ""14"",
      ""draw"": ""2"",
      ""lose"": ""11"",
      ""points"": ""44""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611043/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4f1_glw3ez.png"",
      ""club"": ""West Ham"",
      ""win"": ""12"",
      ""draw"": ""6"",
      ""lose"": ""9"",
      ""points"": ""42""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709234264/Soccer%20Point/Premier%20League/mc_wmfvab.png"",
      ""club"": ""Man City"",
      ""win"": ""19"",
      ""draw"": ""5"",
      ""lose"": ""3"",
      ""points"": ""62""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4ec_kv1g44.png"",
      ""club"": ""Newcastle"",
      ""win"": ""12"",
      ""draw"": ""4"",
      ""lose"": ""11"",
      ""points"": ""40""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611050/Soccer%20Point/Premier%20League/1237_ufrewl.png"",
      ""club"": ""Brighton"",
      ""win"": ""10"",
      ""draw"": ""9"",
      ""lose"": ""8"",
      ""points"": ""39""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611052/Soccer%20Point/Premier%20League/543_nq6zxq.png"",
      ""club"": ""Wolves"",
      ""win"": ""11"",
      ""draw"": ""5"",
      ""lose"": ""11"",
      ""points"": ""38""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611044/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e1_yecxsd.png"",
      ""club"": ""Chelsea"",
      ""win"": ""10"",
      ""draw"": ""6"",
      ""lose"": ""10"",
      ""points"": ""36""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611053/Soccer%20Point/Premier%20League/931_ybbdrb.png"",
      ""club"": ""Fulham FC"",
      ""win"": ""10"",
      ""draw"": ""5"",
      ""lose"": ""12"",
      ""points"": ""35""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611054/Soccer%20Point/Premier%20League/989_wihczr.png"",
      ""club"": ""Bournemouth"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""11"",
      ""points"": ""31""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611048/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e2_d36fyo.png"",
      ""club"": ""Crystal Palace"",
      ""win"": ""7"",
      ""draw"": ""7"",
      ""lose"": ""13"",
      ""points"": ""28""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611055/Soccer%20Point/Premier%20League/1148_squjdv.png"",
      ""club"": ""Brentford"",
      ""win"": ""7"",
      ""draw"": ""5"",
      ""lose"": ""15"",
      ""points"": ""26""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611049/Soccer%20Point/Premier%20League/580b57fcd9996e24bc43c4e3_jsrbtf.png"",
      ""club"": ""Everton"",
      ""win"": ""8"",
      ""draw"": ""7"",
      ""lose"": ""12"",
      ""points"": ""25""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611056/Soccer%20Point/Premier%20League/703_wwzrxb.png"",
      ""club"": ""Nottingham Forest"",
      ""win"": ""6"",
      ""draw"": ""6"",
      ""lose"": ""15"",
      ""points"": ""24""
    },
{
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611058/Soccer%20Point/Premier%20League/1031_fjvi2p.png"",
      ""club"": ""Luton"",
      ""win"": ""5"",
      ""draw"": ""5"",
      ""lose"": ""16"",
      ""points"": ""20""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611059/Soccer%20Point/Premier%20League/1132_s8rdbj.png"",
      ""club"": ""Burnley"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    },
    {
      ""image"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709611061/Soccer%20Point/Premier%20League/350_ppbznf.png"",
      ""club"": ""Sheffield United"",
      ""win"": ""3"",
      ""draw"": ""4"",
      ""lose"": ""20"",
      ""points"": ""13""
    }
]"
39LgcU50,Untitled,ma39isy,Oracle 8,Wednesday 6th of March 2024 12:48:05 AM CDT,"SELECT
	*
FROM
	(
	SELECT
		STUDENTID,
		COUNT(STUDENTID) TOTALMAHASISWA
	FROM
		COMPLETECOURSEPOINT a
	JOIN SUBJECTS b
			USING(SUBJECTID)
	WHERE
		a.SCHOOLYEAR = '2324'
		AND a.SEMESTER = 1
		AND (a.STUDYPROGRAMID = '41'
			AND a.SUBJECTCODE = 'EBJ2E3'
			AND a.INDEXPOINT IS NOT NULL)
		OR (a.STUDYPROGRAMID = '42'
			AND a.SUBJECTCODE = 'EAJ1C3'
			AND a.INDEXPOINT IS NULL)
	GROUP BY
		STUDENTID
)
WHERE
	TOTALMAHASISWA = 2"
BAKu1RvH,G2A.com Free Gift Card Guide Mar 2024,descord,GetText,Wednesday 6th of March 2024 12:31:10 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/14JM2B3ITwrqsUxn5VT62Swuew1WLAFH1/view?usp=sharing
 
Working as of:
06 March 2024"
8NKYxa8q,News March5 24,Newscaster_Ned,Email,Tuesday 5th of March 2024 11:42:17 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎c‎h‎e‎e‎r‎ ‎u‎p‎.‎ ‎I‎t‎'‎s‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎d‎a‎y‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎s‎o‎m‎e‎ ‎u‎s‎e‎f‎u‎l‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎a‎b‎o‎u‎t‎ ‎w‎h‎a‎t‎'‎s‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎

*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎

D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎k‎e‎s‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎S‎t‎e‎p‎ ‎T‎o‎w‎a‎r‎d‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎n‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎

W‎i‎n‎s‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎,‎ ‎N‎o‎r‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎,‎ ‎A‎l‎a‎b‎a‎m‎a‎,‎ ‎M‎a‎i‎n‎e‎,‎ ‎T‎e‎n‎n‎e‎s‎s‎e‎e‎,‎ ‎O‎k‎l‎a‎h‎o‎m‎a‎,‎ ‎M‎a‎s‎s‎a‎c‎h‎u‎s‎e‎t‎t‎s‎,‎ ‎A‎r‎k‎a‎n‎s‎a‎s‎,‎ ‎T‎e‎x‎a‎s‎,‎ ‎C‎o‎l‎o‎r‎a‎d‎o‎,‎ ‎M‎i‎n‎n‎e‎s‎o‎t‎a‎,‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎

H‎a‎l‎e‎y‎ ‎W‎i‎n‎s‎ ‎V‎e‎r‎m‎o‎n‎t‎ ‎A‎v‎o‎i‎d‎i‎n‎g‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎S‎h‎u‎t‎o‎u‎t‎

*‎N‎i‎k‎k‎i‎ ‎S‎i‎l‎e‎n‎t‎*‎

U‎n‎c‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎H‎u‎r‎t‎s‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎M‎i‎n‎n‎e‎s‎o‎t‎a‎,‎ ‎C‎o‎l‎o‎r‎a‎d‎o‎…‎

…‎L‎o‎s‎e‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎S‎a‎m‎o‎a‎ ‎t‎o‎ ‎a‎ ‎N‎o‎b‎o‎d‎y‎
U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎s‎m‎i‎l‎e‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎p‎h‎o‎n‎e‎ ‎c‎o‎n‎v‎e‎r‎s‎a‎t‎i‎o‎n‎ ‎w‎i‎t‎h‎ ‎M‎e‎x‎i‎c‎o‎'‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎w‎i‎l‎l‎ ‎t‎a‎k‎e‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎g‎a‎r‎g‎a‎n‎t‎u‎a‎n‎ ‎s‎t‎e‎p‎ ‎t‎o‎w‎a‎r‎d‎ ‎t‎h‎e‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎n‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎,‎ ‎a‎s‎s‎u‎m‎i‎n‎g‎ ‎h‎e‎ ‎p‎u‎l‎l‎s‎ ‎o‎f‎f‎ ‎w‎h‎a‎t‎ ‎p‎o‎l‎l‎s‎ ‎s‎u‎g‎g‎e‎s‎t‎.‎

*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎k‎e‎s‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎S‎t‎e‎p‎ ‎T‎o‎w‎a‎r‎d‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎n‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎
*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎S‎t‎e‎p‎ ‎t‎o‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎
5‎,‎9‎3‎7‎
S‎C‎O‎T‎U‎S‎ ‎U‎n‎a‎n‎i‎m‎o‎u‎s‎l‎y‎ ‎R‎u‎l‎e‎s‎ ‎S‎t‎a‎t‎e‎s‎ ‎C‎a‎n‎n‎o‎t‎ ‎D‎i‎s‎q‎u‎a‎l‎i‎f‎y‎ ‎T‎r‎u‎m‎p‎ ‎f‎r‎o‎m‎ ‎2‎0‎2‎4‎ ‎B‎a‎l‎l‎o‎t‎
S‎C‎O‎T‎U‎S‎ ‎U‎n‎a‎n‎i‎m‎o‎u‎s‎l‎y‎ ‎R‎u‎l‎e‎s‎ ‎S‎t‎a‎t‎e‎s‎ ‎C‎a‎n‎n‎o‎t‎ ‎D‎i‎s‎q‎u‎a‎l‎i‎f‎y‎ ‎T‎r‎u‎m‎p‎ ‎f‎r‎o‎m‎ ‎2‎0‎2‎4‎ ‎B‎a‎l‎l‎o‎t‎
1‎3‎,‎9‎7‎4‎
A‎t‎t‎o‎r‎n‎e‎y‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎M‎e‎r‎r‎i‎c‎k‎ ‎G‎a‎r‎l‎a‎n‎d‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎V‎o‎t‎e‎r‎ ‎I‎D‎ ‎L‎a‎w‎s‎:‎ ‎‘‎D‎i‎s‎a‎d‎v‎a‎n‎t‎a‎g‎e‎ ‎M‎i‎n‎o‎r‎i‎t‎i‎e‎s‎’‎
A‎G‎ ‎M‎e‎r‎r‎i‎c‎k‎ ‎G‎a‎r‎l‎a‎n‎d‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎F‎i‎g‎h‎t‎ ‎V‎o‎t‎e‎r‎ ‎I‎D‎ ‎L‎a‎w‎s‎:‎ ‎'‎D‎i‎s‎a‎d‎v‎a‎n‎t‎a‎g‎e‎ ‎M‎i‎n‎o‎r‎i‎t‎i‎e‎s‎'‎
5‎,‎7‎6‎1‎
M‎S‎N‎B‎C‎’‎s‎ ‎S‎c‎a‎r‎b‎o‎r‎o‎u‎g‎h‎:‎ ‎F‎a‎r‎ ‎R‎i‎g‎h‎t‎ ‎‘‎I‎n‎v‎e‎n‎t‎e‎d‎ ‎a‎ ‎R‎e‎l‎i‎g‎i‎o‎n‎,‎’‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎I‎s‎ ‎N‎o‎t‎ ‎a‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎
S‎c‎a‎r‎b‎o‎r‎o‎u‎g‎h‎:‎ ‎F‎a‎r‎ ‎R‎i‎g‎h‎t‎ ‎'‎I‎n‎v‎e‎n‎t‎e‎d‎ ‎a‎ ‎R‎e‎l‎i‎g‎i‎o‎n‎,‎'‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎N‎o‎t‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎I‎s‎s‎u‎e‎
1‎,‎0‎1‎5‎
S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎S‎e‎e‎s‎ ‎G‎r‎o‎w‎i‎n‎g‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎t‎o‎ ‎D‎r‎o‎p‎ ‎O‎u‎t‎ ‎o‎f‎ ‎R‎a‎c‎e‎
S‎u‎p‎e‎r‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎S‎e‎e‎s‎ ‎G‎r‎o‎w‎i‎n‎g‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎t‎o‎ ‎D‎r‎o‎p‎ ‎O‎u‎t‎ ‎o‎f‎ ‎R‎a‎c‎e‎
1‎6‎7‎
R‎a‎s‎k‎i‎n‎:‎ ‎S‎C‎O‎T‎U‎S‎ ‎‘‎P‎u‎n‎t‎e‎d‎’‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎B‎a‎l‎l‎o‎t‎ ‎—‎ ‎‘‎I‎t‎’‎s‎ ‎U‎p‎ ‎t‎o‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎t‎o‎ ‎A‎c‎t‎&‎#‎8‎2‎
R‎a‎s‎k‎i‎n‎:‎ ‎S‎C‎O‎T‎U‎S‎ ‎'‎P‎u‎n‎t‎e‎d‎'‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎ ‎B‎a‎l‎l‎o‎t‎,‎ ‎'‎I‎t‎'‎s‎ ‎U‎p‎ ‎t‎o‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎t‎o‎ ‎A‎c‎t‎'‎
3‎,‎5‎5‎0‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎M‎e‎d‎i‎a‎ ‎B‎l‎a‎m‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎f‎o‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎D‎e‎b‎a‎c‎l‎e‎
'‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎M‎e‎d‎i‎a‎ ‎B‎l‎a‎m‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎f‎o‎r‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎D‎e‎b‎a‎c‎l‎e‎
7‎0‎0‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎T‎w‎o‎ ‎o‎f‎ ‎t‎h‎e‎ ‎B‎i‎g‎g‎e‎s‎t‎ ‎F‎u‎n‎d‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎M‎o‎v‎e‎m‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎A‎r‎e‎ ‎C‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎T‎w‎o‎ ‎C‎h‎i‎n‎a‎-‎L‎i‎n‎k‎e‎d‎ ‎B‎i‎l‎l‎i‎o‎n‎a‎i‎r‎e‎s‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎T‎r‎a‎n‎s‎ ‎M‎o‎v‎e‎m‎e‎n‎t‎
4‎,‎4‎1‎1‎
D‎o‎r‎i‎t‎o‎s‎ ‎F‎i‎r‎e‎s‎ ‎T‎r‎a‎n‎s‎ ‎B‎r‎a‎n‎d‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎A‎f‎t‎e‎r‎ ‎T‎w‎e‎e‎t‎ ‎A‎b‎o‎u‎t‎ ‎1‎2‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎S‎u‎r‎f‎a‎c‎e‎s‎
D‎o‎r‎i‎t‎o‎s‎ ‎F‎i‎r‎e‎s‎ ‎T‎r‎a‎n‎s‎ ‎B‎r‎a‎n‎d‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎A‎f‎t‎e‎r‎ ‎T‎w‎e‎e‎t‎ ‎A‎b‎o‎u‎t‎ ‎C‎h‎i‎l‎d‎ ‎S‎u‎r‎f‎a‎c‎e‎s‎
2‎3‎8‎
A‎r‎i‎z‎o‎n‎a‎ ‎S‎e‎n‎.‎ ‎K‎y‎r‎s‎t‎e‎n‎ ‎S‎i‎n‎e‎m‎a‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎R‎u‎n‎ ‎f‎o‎r‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎
A‎r‎i‎z‎o‎n‎a‎ ‎S‎e‎n‎.‎ ‎K‎y‎r‎s‎t‎e‎n‎ ‎S‎i‎n‎e‎m‎a‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎R‎u‎n‎ ‎f‎o‎r‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎

T‎e‎e‎n‎a‎p‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎L‎e‎e‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎S‎t‎u‎d‎e‎n‎t‎.‎

T‎e‎c‎h‎n‎i‎c‎a‎l‎l‎y‎,‎ ‎w‎o‎m‎e‎n‎ ‎g‎o‎ ‎t‎o‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎l‎i‎k‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎n‎e‎g‎r‎o‎e‎s‎.‎


G‎o‎r‎i‎l‎l‎a‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎P‎u‎l‎l‎i‎n‎g‎ ‎""‎C‎o‎s‎b‎y‎""‎ ‎o‎n‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎C‎h‎u‎r‎c‎h‎ ‎C‎e‎r‎e‎m‎o‎n‎y‎.‎


B‎a‎l‎d‎i‎n‎g‎ ‎G‎r‎o‎i‎d‎ ‎W‎a‎n‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎1‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎i‎n‎ ‎W‎o‎o‎d‎b‎r‎i‎d‎g‎e‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎C‎o‎o‎n‎s‎ ‎B‎e‎a‎t‎ ‎C‎h‎i‎c‎a‎g‎o‎ ‎P‎D‎ ‎O‎f‎f‎i‎c‎e‎r‎s‎ ‎w‎i‎t‎h‎ ‎t‎w‎o‎-‎b‎y‎-‎f‎o‎u‎r‎.‎


J‎o‎l‎i‎e‎t‎ ‎J‎i‎g‎a‎b‎o‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎C‎h‎o‎k‎i‎n‎g‎ ‎H‎i‎s‎ ‎D‎o‎g‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎G‎o‎l‎d‎ ‎C‎h‎a‎i‎n‎.‎


P‎a‎c‎k‎ ‎o‎f‎ ‎C‎h‎i‎m‎p‎s‎ ‎A‎t‎t‎a‎c‎k‎ ‎a‎n‎d‎ ‎C‎h‎a‎s‎e‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎ ‎o‎n‎t‎o‎ ‎B‎r‎o‎o‎k‎l‎y‎n‎ ‎S‎u‎b‎w‎a‎y‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎3‎ ‎S‎u‎b‎h‎u‎m‎a‎n‎s‎ ‎W‎h‎o‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎V‎i‎l‎l‎a‎n‎o‎v‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎S‎t‎u‎d‎e‎n‎t‎.‎


H‎o‎n‎d‎u‎r‎a‎n‎ ‎S‎p‎i‎c‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎R‎a‎p‎e‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎B‎r‎o‎o‎k‎l‎i‎n‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎5‎5‎°‎
4‎%‎
N‎W‎ ‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎ ‎|‎ ‎D‎a‎y‎
8‎8‎°‎
4‎%‎
N‎W‎
7‎ ‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎ ‎e‎a‎r‎l‎y‎.‎ ‎S‎o‎m‎e‎ ‎c‎l‎o‎u‎d‎s‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎s‎u‎n‎n‎y‎ ‎s‎k‎i‎e‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎8‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
5‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎0‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎3‎2‎ ‎p‎m‎
T‎u‎e‎ ‎0‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎5‎°‎
8‎%‎
N‎N‎E‎
4‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎ ‎e‎a‎r‎l‎y‎.‎ ‎P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎a‎r‎o‎u‎n‎d‎ ‎5‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
6‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎2‎0‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎1‎9‎ ‎p‎m‎
W‎e‎d‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎2‎°‎
8‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎5‎°‎
/‎6‎5‎°‎
5‎0‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎4‎9‎°‎
8‎3‎%‎
W‎N‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎5‎°‎
/‎4‎4‎°‎
1‎%‎
N‎ ‎1‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎2‎°‎
0‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎2‎°‎
/‎4‎8‎°‎
2‎%‎
E‎S‎E‎ ‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎7‎°‎
8‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎8‎°‎
/‎6‎2‎°‎
3‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎0‎°‎
/‎5‎6‎°‎
4‎6‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎4‎°‎
/‎5‎0‎°‎
5‎3‎%‎
N‎N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎4‎6‎°‎
2‎0‎%‎
N‎N‎W‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎4‎6‎°‎
1‎3‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎6‎°‎
/‎4‎9‎°‎
8‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎2‎°‎
1‎9‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎!‎ ‎T‎h‎i‎s‎ ‎w‎i‎l‎l‎ ‎h‎u‎r‎t‎ ‎s‎o‎m‎e‎o‎n‎e‎!‎ ‎👴🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎a‎n‎n‎i‎b‎a‎l‎i‎s‎m‎
C‎a‎n‎n‎i‎b‎a‎l‎i‎s‎m‎ ‎i‎s‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎y‎ ‎a‎c‎t‎ ‎o‎f‎ ‎g‎o‎b‎b‎l‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎a‎ ‎m‎e‎m‎b‎e‎r‎ ‎o‎f‎ ‎o‎n‎e‎s‎ ‎o‎w‎n‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎o‎f‎ ‎h‎u‎n‎g‎e‎r‎,‎ ‎f‎o‎r‎ ‎f‎u‎n‎,‎ ‎r‎e‎l‎i‎g‎i‎o‎n‎,‎ ‎o‎r‎ ‎o‎t‎h‎e‎r‎ ‎r‎e‎a‎s‎o‎n‎s‎,‎ ‎i‎f‎ ‎d‎o‎n‎e‎ ‎b‎y‎ ‎h‎u‎m‎a‎n‎s‎ ‎i‎t‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎c‎a‎l‎l‎e‎d‎ ‎a‎n‎t‎h‎r‎o‎p‎o‎p‎h‎a‎g‎y‎.‎

W‎h‎i‎l‎e‎ ‎e‎a‎t‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎o‎w‎n‎ ‎k‎i‎n‎d‎ ‎c‎a‎n‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎ ‎s‎u‎r‎v‎i‎v‎a‎l‎ ‎p‎e‎r‎k‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎n‎i‎m‎a‎l‎ ‎k‎i‎n‎g‎d‎o‎m‎,‎ ‎i‎t‎ ‎i‎s‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎l‎o‎o‎k‎e‎d‎ ‎d‎o‎w‎n‎ ‎u‎p‎o‎n‎ ‎i‎n‎ ‎h‎u‎m‎a‎n‎ ‎s‎o‎c‎i‎e‎t‎y‎,‎ ‎i‎f‎ ‎n‎o‎t‎ ‎d‎o‎n‎e‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎d‎i‎r‎e‎ ‎o‎f‎ ‎c‎i‎r‎c‎u‎m‎s‎t‎a‎n‎c‎e‎s‎,‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎s‎a‎v‎e‎ ‎o‎n‎e‎s‎ ‎l‎i‎f‎e‎.‎ ‎B‎e‎i‎n‎g‎ ‎a‎ ‎c‎a‎n‎n‎i‎b‎a‎l‎ ‎i‎s‎ ‎r‎e‎g‎a‎r‎d‎e‎d‎ ‎a‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎ ‎c‎r‎i‎m‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎c‎a‎n‎ ‎b‎e‎ ‎c‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎o‎f‎ ‎p‎u‎b‎l‎i‎c‎ ‎o‎f‎f‎i‎c‎e‎,‎ ‎a‎n‎d‎ ‎w‎i‎l‎l‎ ‎l‎e‎a‎d‎ ‎t‎o‎ ‎m‎a‎j‎o‎r‎ ‎j‎a‎i‎l‎ ‎t‎i‎m‎e‎,‎ ‎t‎h‎e‎ ‎d‎e‎a‎t‎h‎ ‎s‎e‎n‎t‎e‎n‎c‎e‎,‎ ‎b‎e‎i‎n‎g‎ ‎e‎x‎c‎l‎u‎d‎e‎d‎ ‎f‎r‎o‎m‎ ‎s‎o‎c‎i‎a‎l‎ ‎e‎v‎e‎n‎t‎s‎,‎ ‎a‎n‎d‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎a‎ ‎s‎h‎o‎w‎ ‎o‎n‎ ‎N‎e‎t‎f‎l‎i‎x‎


(‎(‎ ‎G‎i‎v‎e‎s‎ ‎A‎ ‎W‎h‎o‎l‎e‎ ‎N‎e‎w‎ ‎M‎e‎a‎n‎i‎n‎g‎ ‎T‎o‎ ‎E‎a‎t‎i‎n‎g‎ ‎P‎u‎s‎s‎y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎d‎y‎e‎i‎n‎g‎ ‎p‎o‎i‎s‎o‎n‎ ‎d‎a‎r‎t‎ ‎f‎r‎o‎g‎ ‎(‎D‎e‎n‎d‎r‎o‎b‎a‎t‎e‎s‎ ‎t‎i‎n‎c‎t‎o‎r‎i‎u‎s‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎p‎o‎i‎s‎o‎n‎ ‎d‎a‎r‎t‎ ‎f‎r‎o‎g‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎m‎o‎n‎g‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎s‎p‎e‎c‎i‎e‎s‎,‎ ‎r‎e‎a‎c‎h‎i‎n‎g‎ ‎l‎e‎n‎g‎t‎h‎s‎ ‎o‎f‎ ‎5‎0‎ ‎m‎m‎ ‎(‎2‎.‎0‎ ‎i‎n‎)‎.‎ ‎T‎h‎i‎s‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎i‎s‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎p‎o‎r‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎G‎u‎i‎a‎n‎a‎ ‎S‎h‎i‎e‎l‎d‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎F‎r‎e‎n‎c‎h‎ ‎G‎u‎i‎a‎n‎a‎,‎ ‎G‎u‎y‎a‎n‎a‎,‎ ‎S‎u‎r‎i‎n‎a‎m‎e‎ ‎a‎n‎d‎ ‎B‎r‎a‎z‎i‎l‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎H‎.‎ ‎Z‎e‎l‎l‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎s‎s‎s‎t‎!‎ ‎H‎e‎y‎,‎ ‎i‎t‎'‎s‎ ‎J‎a‎c‎o‎b‎ ‎N‎u‎s‎e‎c‎a‎s‎t‎o‎r‎.‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎'‎s‎ ‎y‎o‎u‎n‎g‎e‎r‎ ‎b‎r‎o‎t‎h‎e‎r‎.‎ ‎I‎'‎m‎ ‎s‎i‎c‎k‎ ‎o‎f‎ ‎h‎i‎m‎ ‎a‎l‎w‎a‎y‎s‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎r‎a‎p‎i‎n‎g‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎,‎ ‎a‎n‎d‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎b‎a‎d‎l‎y‎ ‎a‎b‎o‎u‎t‎ ‎n‎i‎g‎g‎e‎r‎s‎.‎ ‎I‎ ‎a‎l‎w‎a‎y‎s‎ ‎f‎a‎n‎t‎a‎s‎i‎z‎e‎ ‎a‎b‎o‎u‎t‎ ‎h‎a‎v‎i‎n‎g‎ ‎s‎e‎x‎ ‎w‎i‎t‎h‎ ‎k‎i‎d‎s‎,‎ ‎b‎u‎t‎ ‎I‎ ‎n‎e‎v‎e‎r‎ ‎g‎e‎t‎ ‎t‎o‎!‎ ‎H‎e‎ ‎g‎e‎t‎s‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎1‎3‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎p‎u‎s‎s‎y‎ ‎h‎e‎ ‎w‎a‎n‎t‎s‎!‎ ‎I‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎h‎a‎t‎e‎ ‎h‎i‎m‎!‎ ‎W‎h‎y‎ ‎d‎o‎n‎'‎t‎ ‎I‎ ‎e‎v‎e‎r‎ ‎g‎e‎t‎ ‎t‎o‎ ‎g‎o‎ ‎o‎n‎ ‎h‎e‎r‎e‎ ‎a‎n‎d‎ ‎b‎r‎a‎g‎ ‎a‎b‎o‎u‎t‎ ‎m‎y‎ ‎s‎e‎x‎u‎a‎l‎ ‎c‎o‎n‎q‎u‎e‎s‎t‎s‎ ‎l‎i‎k‎e‎ ‎h‎e‎ ‎d‎o‎e‎s‎!‎ ‎I‎ ‎h‎a‎t‎e‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎!‎"
0rGL6bR7,Slingshot v1.1 :D,onexiv,Python,Tuesday 5th of March 2024 11:32:47 PM CDT,"class ChessGame:
    def __init__(self):
        self.board = self.initialize_board()

    def initialize_board(self):
        # Initialize an empty 8x8 chessboard with pieces in their starting positions
        board = [[None for _ in range(8)] for _ in range(8)]
        
        # Place white pieces
        board[0] = [['♖', 'R', 'b'], ['♘', 'N', 'b'], ['♗', 'B', 'b'], ['♕', 'Q', 'b'], ['♔', 'K', 'b'], ['♗', 'B', 'b'], ['♘', 'N', 'b'], ['♖', 'R', 'b']]
        board[1] = [['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b'], ['♙', 'P', 'b']]

        # Place black pieces
        board[7] = [['♜', 'r', 'w'], ['♞', 'n', 'w'], ['♝', 'b', 'w'], ['♛', 'q', 'w'], ['♚', 'k', 'w'], ['♝', 'b', 'w'], ['♞', 'n', 'w'], ['♜', 'r', 'w']]
        board[6] = [['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w'], ['♟', 'p', 'w']]

        return board

    def print_board(self):
        # Print the current state of the chessboard with positions revealed
        print(""  +------------------------ A +"")
        for row in range(8):
            row_display = f""{8 - row} | ""
            for col in range(8):
                if self.board[row][col] is not None:
                    piece_symbol = self.board[row][col][0]
                else:
                    piece_symbol = '.'
                row_display += f"" {piece_symbol} ""
            row_display += "" |""
            print(row_display)
        print(""  +------------------------ a +"")

    def capture_piece(self, row, col, moving_piece):
        # Remove the piece at the specified position from the board if it belongs to the opposing player
        if self.board[row][col] is not None:
            self.board[row][col] = None

    def move_piece(self, piece, start_row, start_col, end_row, end_col):
        # Move the piece from start position to end position
        if self.board[start_row][start_col][1] == piece:
            self.board[end_row][end_col] = self.board[start_row][start_col]
            self.board[start_row][start_col] = ['.', '.', '.']

    def convert_position(self, position):
        # Convert algebraic notation to array indices
        row = 8 - int(position[1])
        col = ord(position[0]) - ord('a')
        return row, col

    def is_valid_move(self, piece, start_row, start_col, end_row, end_col):
        # Check if the move is within the bounds of the board
        if not (0 <= start_row < 8 and 0 <= start_col < 8 and 0 <= end_row < 8 and 0 <= end_col < 8):
            return False
        
        # Check if there is a piece at the starting position
        if self.board[start_row][start_col] is None:
            return False

        # Check for obstruction in the path
        if piece in ['R', 'r', 'Q', 'q']:  # Rook or Queen
            if start_row == end_row:  # Horizontal move
                delta_col = 1 if end_col > start_col else -1
                for col in range(start_col + delta_col, end_col, delta_col):
                    if self.board[start_row][col] is None:
                        self.board[start_row][col] = ['.', '.', '.']
                    elif self.board[start_row][col][2] == self.board[start_row][start_col][2]:
                        return False  # Obstruction found
                return True
            elif start_col == end_col:  # Vertical move
                delta_row = 1 if end_row > start_row else -1
                for row in range(start_row + delta_row, end_row, delta_row):
                    if self.board[row][start_col] is None:
                        self.board[row][start_col] = ['.', '.', '.']
                    elif self.board[row][start_col][2] == self.board[start_row][start_col][2]:
                        return False  # Obstruction found
                return True

        if piece in ['B', 'b', 'Q', 'q']:  # Bishop or Queen
            delta_row = end_row - start_row
            delta_col = end_col - start_col
            print(delta_col, delta_row)
            if abs(delta_row) == abs(delta_col):  # Diagonal move
                row_step = 1 if start_row < end_row else -1
                col_step = 1 if start_col < end_col else -1
                row = (start_row + row_step) % 8
                col = (start_col + col_step) % 8
                while row != end_row and col != end_col:
                    if self.board[row][col] is None:
                        self.board[row][col] = ['.', '.', '.']
                    elif self.board[row][col][2] == self.board[start_row][start_col][2]:
                        row_step = 1 if start_row > end_row else -1
                        col_step = 1 if start_col > end_col else -1
                    elif self.board[row][col][2] == self.board[start_row][start_col][2]:
                        self.board[row][col] = self.board[start_row][start_col]
                        self.board[start_row][start_col] = ['.', '.', '.']
                        return True  # Obstruction found
                    elif row == end_row and self.board[row][col][2] == self.board[start_row][start_col][2]:
                        self.board[row][col] = self.board[start_row][start_col]
                        self.board[start_row][start_col] = ['.', '.', '.']
                        return False  # Obstruction found
                    row = abs(row + row_step) % 8
                    col = abs(col + col_step) % 8
        # Check if there's a piece of the same color at the ending position
        if self.board[end_row][end_col] is not None and self.board[end_row][end_col][2] == self.board[start_row][start_col][2]:
            return False  # Obstruction found
        
        if piece == 'N' or piece == 'n':  # Knight
            # Check if the move is a valid knight move
            delta_row = abs(end_row - start_row)
            delta_col = abs(end_col - start_col)
            # return (delta_row == 1 and delta_col == 2) or (delta_row == 2 and delta_col == 1)
            # Check if the move is a valid knight's move or teleportation
            print(delta_col, delta_row)
            if delta_row == 2 and delta_col == 1:
                return True
            elif delta_row == 1 and delta_col == 2:
                return True
            elif delta_row == 1 and delta_col >= 6:
                return True
            elif delta_row >= 6 and delta_col == 1:
                return True
            else:
                return False

        # Allow non-pawns and the king to move around the outside of the board
        # if piece not in ['P', 'p', 'K', 'k']:
        #     # Check if the move is along the edge of the board and the destination is on the opposite side
        #     if (start_row == 0 and end_row == 7 and start_col == end_col) or \
        #     (start_row == 7 and end_row == 0 and start_col == end_col) or \
        #     (start_col == 0 and end_col == 7 and start_row == end_row) or \
        #     (start_col == 7 and end_col == 0 and start_row == end_row):
        #         return True

        # Check for piece-specific move validation
        if piece == 'P':  # Pawn
            # Pawn can move forward two squares from starting position
            if start_row == 1 and start_col == end_col and end_row - start_row == 2:
                return True
            if start_col == end_col and end_row - start_row == 1:
                return True
            # Pawn can capture diagonally
            if self.board[end_row][end_col] is not None and self.board[start_row][start_col][2] != self.board[end_row][end_col][2] and abs(start_col - end_col) == 1 and end_row - start_row == 1:
                return True
            return False
        elif piece == 'p':  # Pawn (for black)
            # Pawn can move forward two squares from starting position
            if start_row == 6 and start_col == end_col and start_row - end_row == 2:
                return True
            # Similar logic for black pawn
            if start_col == end_col and start_row - end_row == 1:
                return True
            if self.board[end_row][end_col] is not None and abs(start_col - end_col) == 1 and start_row - end_row == 1:
                return True
            return False
        elif piece == 'R' or piece == 'r':  # Rook
            # Rook moves horizontally or vertically
            return start_row == end_row or start_col == end_col
        elif piece == 'B' or piece == 'b':  # Bishop
            # Bishop moves diagonally
            return abs(end_row - start_row) == abs(end_col - start_col)
        elif piece == 'Q' or piece == 'q':  # Queen
            # Queen combines rook and bishop moves
            return (start_row == end_row or start_col == end_col) or (abs(end_row - start_row) == abs(end_col - start_col))
        elif piece == 'K' or piece == 'k':  # King
            # King moves one square in any direction
            return abs(end_row - start_row) <= 1 and abs(end_col - start_col) <= 1
        else:
            return False  # Default: invalid move

if __name__ == ""__main__"":
    game = ChessGame()
    while True:
        game.print_board()
        move = input(""Enter your move (e.g., 'c2 to c4'): "")
        if move.lower() == 'exit':
            break

        move_parts = move.split()
        piece = move_parts[0]
        start_position = move_parts[1]
        end_position = move_parts[3]
        start_row, start_col = game.convert_position(start_position)
        end_row, end_col = game.convert_position(end_position)
        if game.is_valid_move(piece, start_row, start_col, end_row, end_col):
            game.move_piece(piece, start_row, start_col, end_row, end_col)
        else:
            print(""Invalid Move!"")"
4tuR3q5A,Computercraft Turtle EMC Farm,Darkstar1756,Lua,Tuesday 5th of March 2024 11:22:01 PM CDT,"assert(turtle, 'This program must be run on a turtle!')

-- The item to work with
local itemtag = 'minecraft:carrot'
-- Which slot(s) in the turtle's inventory to store the item in
local turtleslot = {2, 3}

local source = peripheral.wrap('back')
local temp = peripheral.wrap('bottom')
local sink = peripheral.wrap('top')
local iserror = false

if not source or not peripheral.hasType('back', 'inventory') then
    printError('No source chest found!')
    print('Place an inventory behind the turtle\n')
    iserror = true
end

if not temp or not peripheral.hasType('bottom', 'inventory') then
    printError('No temp chest found!')
    print('Place an inventory below the turtle\n')
    iserror = true
end

if not sink or not peripheral.hasType('top', 'inventory') then
    printError('No destination inventory found!')
    print('Place an inventory above the turtle\n')
    iserror = true
end

if iserror then
    return
end

while true do
    local space = 0
    for _, slot in ipairs(turtleslot) do
        space = space + turtle.getItemSpace(slot)
    end

    for slot, item in pairs(source.list()) do
        if item.name ~= itemtag then
            goto continue
        end

        if space > 0 then
            local count = source.pushItems(peripheral.getName(temp), slot, space)

            space = space - count
        end

        -- TODO maybe check to make sure there's something to transfer first if
        -- it is possibly more efficient
        source.pushItems(peripheral.getName(sink), slot)

        ::continue::
    end

    turtle.suckDown()

    for _, slot in ipairs(turtleslot) do
        local itemdetail = turtle.getItemDetail(slot)
        assert(itemdetail == nil or itemdetail.name == itemtag, 'Invalid item in turtle!')
    end

    turtle.place()
    sleep(2)
end
"
mVDTGf8S,MicroFische.py,j0h,Python,Tuesday 5th of March 2024 11:12:47 PM CDT,"import RPi.GPIO as GPIO
import cv2
import time
from time import sleep
import os
import threading
""""""
OMG Finlay. You can't blink the LED and run the video stream
Without threading. I mean, you can, but it doesn't produce a 
Quality video. 

This program reads an EAZY CAM usb capture device attached to 
Raspberry Pi 3b+ to capture video coming off a modified 
Pulse Data PDI SmartView micro fische reader, using 
a composite LCD screen with composite video output

Video is saved to a web accessible location, using an integrated
webserver. 

Possible improvements:
ditch the print statements
do more testing.
ditch imshow, there's no screen output in this setup,
video goes to the saved files. 

Other notes:
OpenCV kinda a memory hog, I edited 
 /etc/dphys-swapfile
from CONF_SWAPSIZE=100
to CONF_SWAPSIZE=2048
""""""
# Define Some IO
record_LED = 21
capVidBtn = 20

# Set GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(record_LED, GPIO.OUT)
GPIO.output(record_LED, GPIO.OUT)
GPIO.setup(capVidBtn, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.output(record_LED, 0)  # Make sure LED is off to start

BTN_State = False

def debounce_callback(channel):
    global last_interrupt
    current_time = time.time()
    if current_time - last_interrupt > 0.3:
        grabVid(channel)
    last_interrupt = current_time

last_interrupt = time.time()
GPIO.add_event_detect(capVidBtn, GPIO.FALLING, callback=debounce_callback, bouncetime=300)

def blink_LED():
    global BTN_State
    cnt = 20
    while BTN_State == True:
        for i in range(cnt):
            GPIO.output(record_LED, 1)
            print(i)
            sleep(0.5)
            GPIO.output(record_LED, 0)
            sleep(0.5)
        if (i == cnt - 1):
            BTN_State = False
            break
    GPIO.output(record_LED, 0)  # Make sure LED is off


def grabVid(channel):
    global BTN_State
    BTN_State = not BTN_State
    # OCV BS
    cap = cv2.VideoCapture('/dev/video0')
    current_time = int(time.time())
    output_filename = f""{current_time}.mp4""
    File_path = '/home/ch/img'
    output_path = os.path.join(File_path, output_filename)
    fourcc = cv2.VideoWriter_fourcc(*'H264')
    out = cv2.VideoWriter(output_path, fourcc, 20.0, (640, 480))

    if BTN_State:
        print(""Capturing Video btn State is True"")
        # Start Capturing Video here
        if not cap.isOpened():
            print(""Capture device not found"")
            exit()
        
        # Start a thread for blinking the LED
        t = threading.Thread(target=blink_LED)
        t.start()

        # Start Capturing Video
        while cap.isOpened():
            ret, frame = cap.read()
            if not ret:
                print(""BOoo no frame read"")
                break

            # Write Data
            out.write(frame)
            cv2.imshow(""MicroFische"", frame)

            if not BTN_State:
                # Clean up BTN_State
                print(""Button pressed: quitting"")
                cap.release()
                out.release()
                cv2.destroyAllWindows()
                break

print(""Make my dman video"")

try:
    while True:
        sleep(0.1)
except KeyboardInterrupt:
    GPIO.cleanup()
"
R9Jm9BuH,num_key_alpha_freq_cipher_full,Python253,Python,Tuesday 5th of March 2024 10:52:21 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: num_key_alpha_freq_cipher_full.py


""""""
This script automatically encodes and decodes a user input string using a letter frequency & a BASE-7 cipher.
 
[Encode Path]
User Input --> Letter Freequency --> Numerical Key
User Input --> ASCII --> BASE-7 --> Display Encoded Key

[Decode Path]
Numerical Key --> Encoded BASE-7 Key --> Encoded ASCII --> DECODED 

Example Output:
Enter your string: hello world!

User Input:             hello world! 

                        abcdefghijklmnopqrstuvwxyz 
                        --------------------------
Numerical Key:          00011001000300200100001000

Encoded BASE-7 Key:     111264533620221435234501460
Encoded ASCII:          206 203 213 213 216 44 230 216 222 213 202 45

Decoded Numerical Key:  11001000300200100001000
Decoded In Plain Text:  hello world!
""""""

def base_7_encoder(num_key):
    if num_key == 0:
        return '0'

    result = ''
    while num_key > 0:
        remainder = num_key % 7
        result = str(remainder) + result
        num_key //= 7

    return result

def base_7_decoder(base_7_key):
    num_key = 0
    for digit in base_7_key:
        num_key = num_key * 7 + int(digit)
    return num_key

def text_to_base_7(text):
    base_7_result = ''
    for char in text:
        char_value = ord(char)
        base_7_result += base_7_encoder(char_value) + ' '

    return base_7_result.strip()

def base_7_text_decoder(base_7_text):
    decoded_text = ''
    for base_7_digit in base_7_text.split():
        char_value = base_7_decoder(base_7_digit)
        decoded_text += chr(char_value)
    return decoded_text

# Global Variable Alphabet
alphabet = 'abcdefghijklmnopqrstuvwxyz'

def count_letters(input_string):
    letter_count = {char: 0 for char in alphabet}

    for char in input_string:
        if char.isalpha():
            letter_count[char.lower()] += 1

    count_string = ''.join(str(letter_count[char]) for char in alphabet)
    return count_string

# Get User Input
user_input = input(""Enter your string: "")
num_key = count_letters(user_input)

# Convert numerical key to base-7
base_7_encoded_key = base_7_encoder(int(num_key, 10))

# Convert text to base-7
base_7_encoded_text = text_to_base_7(user_input)

# Output Results
print('\nUser Input:            ', user_input, '\n')
print('\t\t\t' + alphabet, '\n\t\t\t--------------------------')
print('Numerical Key:         ', num_key)
print('\nEncoded BASE-7 Key:    ', base_7_encoded_key)
print('Encoded ASCII:         ', base_7_encoded_text)

# Decode base-7 key
decoded_num_key = base_7_decoder(base_7_encoded_key)

# Decode base-7 text
decoded_text = base_7_text_decoder(base_7_encoded_text)

# Output Decoded Results
print('\nDecoded Numerical Key: ', decoded_num_key)
print('Decoded In Plain Text: ', decoded_text)




"
GPbtyDix,get_b7_key,Python253,Python,Tuesday 5th of March 2024 10:22:56 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: get_b7_key.py
# Author: Jeoi Reqi

""""""
This script provides options to encode and decode strings using a BASE-7 cipher.

[Encode Path]
User Input --> ASCII --> BASE-7 --> Display Encoded Key
Expected Output:
    Options:
    1. Encode
    2. Decode
    Choose an option (1 or 2): 1
    Enter your string: hello world!

    User Input:  hello world! 
    Encoded Key  :  206 203 213 213 216 44 230 216 222 213 202 45

[Decode Path]
User Provides Encoded Key --> BASE-7 --> ASCII --> Decoded Original Text
Expected Output:
    Options:
    1. Encode
    2. Decode
    Choose an option (1 or 2): 2
    Enter the encoded key: 206 203 213 213 216 44 230 216 222 213 202 45

    Decoded Text :  hello world!
""""""

def base_7_encoder(num_key):
    """"""Encode a numerical key to BASE-7.""""""
    if num_key == 0:
        return '0'

    result = ''
    while num_key > 0:
        remainder = num_key % 7
        result = str(remainder) + result
        num_key //= 7

    return result

def base_7_decoder(base_7_key):
    """"""Decode BASE-7 to a numerical key.""""""
    num_key = 0
    for digit in base_7_key:
        num_key = num_key * 7 + int(digit)
    return num_key

def handle_encode():
    """"""Handle the encoding process.""""""
    user_input = input(""Enter your string: "")
    ascii_values = [ord(char) for char in user_input]
    base_7_encoded_key = ' '.join([base_7_encoder(value) for value in ascii_values])
    print('\nUser Input: ', user_input, '\n')
    print('Encoded Key  : ', base_7_encoded_key, '\n')

def handle_decode():
    """"""Handle the decoding process.""""""
    encoded_key = input(""Enter the encoded key: "")
    ascii_values = [base_7_decoder(value) for value in encoded_key.split()]
    decoded_text = ''.join([chr(value) for value in ascii_values])
    print('\nDecoded Text : ', decoded_text)

# Main script
print(""Options:"")
print(""1. Encode"")
print(""2. Decode"")

choice = input(""Choose an option (1 or 2): "")

if choice == '1':
    handle_encode()
elif choice == '2':
    handle_decode()
else:
    print(""Invalid choice. Please choose 1 or 2."")

"
4g3x07Zx,YanModAOV,PapiGemezs,PHP,Tuesday 5th of March 2024 10:22:25 PM CDT,"{
   ""YanMod"": [
      {
         ""version"": 1.1
      }
   ]
}"
nHKrNykG,num_key_alpha_freq_cipher,Python253,Python,Tuesday 5th of March 2024 10:22:17 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: num_key_alpha_freq_cipher.py

""""""
This script takes user input, counts the occurrences of each letter in the alphabet, and generates a numerical key representing the frequency of each letter.
The script then displays the user input, the alphabet, and the corresponding numerical key that can be used in other scripting easily.

Example Output:
    Enter your string: hello world!

    User Input:  hello world! 
                    abcdefghijklmnopqrstuvwxyz
    Numerical Key:  00011001000300200100001000
""""""

# Global Variable Alphabet
alphabet = 'abcdefghijklmnopqrstuvwxyz'

def count_letters(input_string):
    letter_count = {char: 0 for char in alphabet}

    for char in input_string:
        if char.isalpha():
            letter_count[char.lower()] += 1

    count_string = ''.join(str(letter_count[char]) for char in alphabet)
    return count_string

# Get User Input
user_input = input(""Enter your string: "")
num_key = count_letters(user_input)

print('\nUser Input: ', user_input, '\n')
print('\t\t' + alphabet)
print('Numerical Key: ', num_key)

"
CnS58d95,monitor.sh,howtophil,Bash,Tuesday 5th of March 2024 10:18:05 PM CDT,"#!/bin/sh

#---------------------------------
# This is a sister-script for the
# scanner-record.sh script.
# https://pastebin.com/8vygm3wM
# It will watch for new recordings
# and by default beep then play
# the recording.
# You can change that to make it
# email the recordings to you,
# upload them someplace else,
# or whatever else you want to do.
#---------------------------------
# Phillip J Rhoades (HowToPhil)
# 2023-03-05
#---------------------------------

#---------------------------------
# Define variable(s) to control
# how script functions
#---------------------------------
THEDIR=""./record""

#---------------------------------
# Time for the script to start
# doing things!
#---------------------------------
echo ""Begin monitoring the folder for new recordings!""

#---------------------------------
# Wait for a new file to appear
# in the directory.
#---------------------------------
inotifywait -q -m -r -e create --format '%w%f' ""${THEDIR}"" | while read THEFILE
do
	#---------------------------------
	# Do this when a file is created
	#---------------------------------
	# Wait for the file to close so
	# we can play it, move it, email
	# it, or do whatever else we
	# want.
	#---------------------------------
	inotifywait -q -e close_write ""$THEFILE""
	echo ""New recording: $THEFILE""

	#---------------------------------
	# This will beep at us, in case
	# we don't want the file to play
	# but we want to know a file has
	# been created or we want a tone
	# to get oru attention before the
	# recording plays.
	#---------------------------------
	play -V1 -n -c1 synth .3 sine 200
	#---------------------------------
	# Play the file so we can hear
	# what just came into the scanner.
	#---------------------------------	
	play ""$THEFILE""
	echo 
	echo ""->Monitoring the folder for the next new recording!""
done"
UZbbT2Rt,theme #08: empyreum,pneumathemes,HTML 5,Tuesday 5th of March 2024 10:04:07 PM CDT,"<!DOCTYPE html>
<html>
    <head>
        {NewPostStyles}
		<title>
			{Title}{block:TagPage}: posts tagged as #{Tag}{/block:TagPage}
			{block:PostSummary}: {PostSummary}{/block:PostSummary}
		</title>

		<link rel=""shortcut icon"" href=""{Favicon}"" />
		<link rel=""alternate"" type=""application/rss+xml"" href=""{RSS}"" />
		{block:Description}
		<meta name=""description"" content=""{MetaDescription}"" />
		{/block:Description}
		<meta charset=""utf-8"" />
		<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />

		<!--
 
        Theme #08: Empyreum
        coded by pneuma-themes
        
        1. Don't remove the credit.
        2. Don't move the credit. Just leave it there.
        3. Don't use as a base code.
        4. Please enjoy! If you find any bugs, please contact me! c:
        
        -->
        
        <!--Variables-->
        <meta name=""color:background"" content=""#fefefe""/>
        
        <meta name=""color:accent"" content=""#4760DA""/>
        <meta name=""color:body"" content=""#141414""/>
        <meta name=""color:border"" content=""#eee""/>
        <meta name=""color:sidebar background"" content=""#fff""/>
        <meta name=""color:post background"" content=""#fff""/>
        <meta name=""color:footer background"" content=""#1e1e1e""/>
        <meta name=""color:footer text"" content=""#ddd""/>
        
        <meta name=""image:icon"" content=""""/>
        
        <meta name=""text:post size"" content=""""/>
        <meta name=""text:font size"" content=""""/>
        <meta name=""text:photoset gutter"" content=""""/>
        <meta name=""text:link 1 title"" content="""" />
        <meta name=""text:link 1 url"" content="""" />
        <meta name=""text:link 2 title"" content="""" />
        <meta name=""text:link 2 url"" content="""" />
        <meta name=""text:link 3 title"" content="""" />
        <meta name=""text:link 3 url"" content="""" />
        
        <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js""></script>
		<script src=""https://unpkg.com/@popperjs/core@2""></script>
		<script src=""https://unpkg.com/tippy.js@6""></script>
		<script src=""https://rawgit.com/robinpx/tumblr/master/scripts/flexibleFrames/flexibleFrames.min.js""></script>
		
		<script src=""https://cdn.jsdelivr.net/gh/annasthms/customaudio@latest/customaudio.min.js""></script>
		    <link href=""https://static.tumblr.com/0podkko/oDSpg7y88/photosets.css"" rel=""stylesheet""/>

        <script src=""https://unpkg.com/akar-icons-fonts""></script>
        <link href='https://static.tumblr.com/r7bx1qs/83Cs9varx/note-reblog.css' rel=""stylesheet""/>
        
        <!--✻✻✻✻✻✻  npf audio player by @glenthemes  ✻✻✻✻✻✻-->
        <script src=""//tmblr-npf-audio.gitlab.io/s/init.js""></script>
        <link href=""//tmblr-npf-audio.gitlab.io/s/base.css"" rel=""stylesheet"">
        <script>
        tumblr_npf_audio({
            emptyTitleText: ""Untitled track"",
            emptyArtistText: ""Untitled artist"",
            emptyAlbumText: ""Untitled album"",
            
            titleLabel: ""Track:"",
            artistLabel: ""Artist:"",
            albumLabel: ""Album:""
        });
        </script>
        <style edit-npf-audio-player>
            figcaption.audio-caption, figcaption.audio-caption + audio[controls]{
            display:none!important;
        }

        .npf-audio-wrapper {
            --NPF-Audio-Buttons-Size: 1.4rem;
            --NPF-Audio-Buttons-Color: #555555; /* color of play & pause buttons */
            --NPF-Audio-Buttons-Spacing: 1.3rem; /* space between buttons and song info */
            
            --NPF-Audio-Image-Size: 85px;
            --NPF-Audio-Image-Spacing: 0px; /* gap between player info and cover image */
            margin-bottom:20px !important;
        }
        
        .npf-audio-background {
            background-color: #f2f2f2; /* background color of player (optional) */
            padding: 1.5rem;
        }
        
        .npf-audio-title-label,
        .npf-audio-artist-label,
        .npf-audio-album-label {
            font-weight: bold;
        }
        
        .npf-audio-title,
        .npf-audio-artist,
        .npf-audio-album {
            color: #333333; /* color of audio text (optional) */
        }
        </style>
        
        <!--✻✻✻✻✻✻  UN-BLUE POLLS by @glenthemes  ✻✻✻✻✻✻--> 
        <link href=""//static.tumblr.com/gtjt4bo/mXBrpdj0n/unblue-polls.css"" rel=""stylesheet""> 
        <style> 
        .poll-post {     
            --Poll-Question-Font-Size: 16px;          
            --Poll-Option-Background-Color: #fcfcfc;     
            --Poll-Option-Corner-Rounding: 18px;     
            --Poll-Option-Border-Size: 2px;     
            --Poll-Option-Border-Color: #efefef;     
            --Poll-Option-Padding: 15px;     
            --Poll-Option-Font-Size: 13px;    
            --Poll-Option-Spacing: 10px;     
            --Poll-Option-Text-Color: #666666;         
            --Poll-Option-HOVER-Border-Color: #cfdae4;     
            --Poll-Option-HOVER-Background-Color: #ebf0f4;     
            --Poll-Option-HOVER-Text-Color: #1a1b1d;     
            --Poll-Option-HOVER-Speed: 0.4s; 
        } 
        
        .poll-see-results{
            width:calc(100% - var(--Poll-Option-Padding * 2));
            padding-top:var(--Poll-Option-Padding);
            padding-bottom:var(--Poll-Option-Padding);
            box-shadow:none !important;
            border:2px solid var(--Poll-Option-Border-Color);
            border-radius:var(--Poll-Option-Corner-Rounding);
            background:var(--Poll-Option-Background-Color);
        }
        </style> 

        <style type=""text/css"">
            @import url(https://fonts.bunny.net/css?family=public-sans:400,400i,700,800i);
            
            iframe.tmblr-iframe {
            z-index:99999999999999!important;
            top:10px!important;
            right:10px!important;
            opacity:1;
            /* delete invert(1) from here */
                filter:invert(1) contrast(150%);
                -webkit-filter:invert(1) contrast(150%);
                -o-filter:invert(1) contrast(150%);
                -moz-filter:invert(1) contrast(150%);
                -ms-filter:invert(1) contrast(150%);
            /* to here if your blog has a dark background */
            transform:scale(0.75);
            transform-origin:100% 0;
            -webkit-transform:scale(0.75);
            -webkit-transform-origin:100% 0;
            -o-transform:scale(0.75);
            -o-transform-origin:100% 0;
            -moz-transform:scale(0.75);
            -moz-transform-origin:100% 0;
            -ms-transform:scale(0.75);
            -ms-transform-origin:100% 0;
        }
            
            body{
                margin:0;
                padding:0;
                background:{color:background};
                color:{color:body};
                font-family:'Public Sans';
                font-size:{text:font size}px;
            }
            
            .tippy-box{
                background:{color:accent};
                color:{color:body};
                text-transform:lowercase;
                font-size:calc({text:font size}px - 2px);
            }
            
            ::-webkit-scrollbar{
                width:4px;
            }
            
            ::-webkit-scrollbar-thumb:vertical{
                background:{color:accent};
            }
            
            a{
                text-decoration:none;
                color:{color:body};
            }
            
            #container{
                width:calc({text:post size}px + 600px);
                display:flex;
                flex-wrap:wrap;
                position:relative;
                margin:0 auto !important;
                margin-top:60px !important;
                
            }
            
            #sidebar{
                width:450px;
                position:sticky;
                top:60px;
                height:200px;
                box-shadow: -15px -15px 0px 2px {color:accent};
                border-radius:5px;
                border:1px solid {color:border};
                background:{color:sidebar background};
            }
            
            #sidebar-container{
                margin:20px;
                display:flex;
                flex-wrap:wrap;
                align-items:center;
            }
            
            #icon{
                width:64px;
                height:64px;
                margin-right:30px;
            }
            
            #icon img{
                max-width:64px;
                width:64px;
                height:64px;
                border-radius:5px;
                max-height:64px;
            }
            
            #blogtitle{
                font-size:calc({text:font size}px + 5px);
                text-transform:lowercase;
                font-weight:700;
                width:100%;
                margin-bottom:25px;
            }
            
            #desc{
                width:100%;
                margin-top:20px;
            }
            
            #desc a{
                box-shadow:0 -2px inset {color:accent};
            }
            
            .navigation-links a{
                text-transform:uppercase;
                box-shadow:0 -5px inset {color:accent};
                transition:.5s ease-in;
                margin-right:10px;
                font-weight:700;
                font-size:calc({text:font size}px - 2px);
            }
            
            .navigation-links a:last-of-type{
                margin-right:0 !important;
            }
            
            .navigation-links a:hover{
                box-shadow:0 -20px inset {color:accent};
            }
            
            article{
                width:{text:post size}px;
                position:relative;
                margin-bottom:100px;
            }
            
            p.npf_quote{
                font-family:'Public Sans' !important;
                font-size:calc({text:font size}px + 3px);
                font-weight:700;
            }
            
            p.npf_chat{
                background:#eee;
                padding:10px;
                font-family:'Public Sans' !important;
                font-size:{text:font size}px !important;
            }
            
            .caption, .replies{
                background:{color:post background};
                border-bottom:1px solid {color:border};
            }
            
            .caption a{
                box-shadow: 0 -5px inset {color:accent};
            }
            
            .original-post, .reblog-content{
			    padding-top:20px;
			    padding-bottom:20px;
			}
			
			
			.original-post li, .reblog-content li{
			    margin-bottom:5px;
			}

			.original-post li:last-of-type, .reblog-content li:last-of-type{
			    margin-bottom:0;
			}

			.original-post a, .reblog-content a{
			    box-shadow:0 -2px inset {color:accent};
			}

			blockquote.npf_indented, .caption blockquote, .caption blockquote blockquote{
			    padding-left:15px;
			    border-left:1px solid {color:border};
			}
            
            #post-container{
                margin-left:50px;
            }
            
            article img{
                width:100%;
                max-width:100%;
            }
            
            .photoset-grid{
			    grid-gap:{text:photoset gutter}px;
			}
			
			#quote{
			    font-size:calc({text:font size}px + 3px);
			    font-weight:700;
			    font-style:italic;
			    padding:20px;
			    text-align:center;
			}
			
			#source{
			    text-align:center;
			    padding-top:20px;
			    padding-bottom:20px;
			    font-weight:700;
			    border-bottom:1px solid {color:border};
			    border-top:1px solid {color:border};
			}

			.quote-post > .caption{
			    display:none;
			}

			.source p{
			    display:none;
			}
			
			.audio-container{
			    display:flex;
			    width:100%;
			    align-items:center;
			    flex-wrap:wrap;
			    justify-content:center;
			}
			
			.audio_info{
			    width:100%;
			    display:flex;
			    align-items:center;
			    border:1px solid {color:border};
			    justify-content:space-between;
			    padding:20px;
			    padding-top:10px !important;
			    border-radius:2px;
			}
			
			.custom_audio_duration {
            	display : inline;
            }
            
            .audio_player{
                width:100%;
                padding-top:20px;
                display:flex;
                align-items:center;
                justify-content:space-between;
            }
            
            .audio_player .custom_audio_seekbar {
            	width      : 80%;
            	height     : 0.5em;
            	border-radius:2px;
            	background : #dfdfdf;
            }
            .audio_player .custom_audio_seekbar_progress {
            	width      : 0;
            	height     : 100%;
            	background : {color:accent};
            }
            
            .custom_audio_time_left::before {
            	content : ""- "";
            }
			
			#trackname{
			    font-weight:700;
			    font-size:calc({text:font size}px + 3px);
			}
			
			#album-name, #artist{
			    text-transform:uppercase;
			}
			
			.custom_audio_play_button i, .custom_audio_pause_button i{
			    font-size:16px;
			    color:{color:accent};
			}
			
			.question, .answer{
			    display:flex;
			    flex-wrap:wrap;
			    align-items:center;
			    border-bottom:1px solid {color:border};
			    padding-bottom:20px;
			}
			
			.answer{
			    padding-bottom:10px !important;
			    padding-top:20px;
			}
			
			.question-text{
			    width:100%;
			    margin-top:20px;
			}
			
			#ask-decoration{
			    font-size:20px;
			    border:1px solid {color:border};
			    border-radius:2px;
			    color:{color:accent};
			    padding:20px;
			    margin-right:20px;
			}
			
			.asker-user, .answerer-user{
			    text-transform:uppercase;
			    margin-right:10px;
			}
			
			.answerer-user{
			    width:100%;
			}
			
			.asker-user a, .answerer-user a{
			    font-weight:700;
			    box-shadow:0 -10px inset {color:accent};
			}
			
			.answer{
			    display:flex;
			    align-items:center;
			    flex-wrap:wrap;
			}
			
			.answer-post .caption.original-post{
			    display:none !important;
			}
		
			.text-post .title{
			    padding:20px 0px;
			    border-top:1px solid {color:border};
			    border-bottom:1px solid {color:border};
			    font-size:calc({text:font size}px + 6px);
			    font-weight:700;
			}
            
            .reblog-header{
                display:flex;
                align-items:center;
                padding:20px 0px;
                position:relative;
                justify-content:space-between;
                border-bottom:1px solid {color:border};
            }
            
            .reblog-header i{
                padding:8px;
                border-radius:2px;
                margin-right:10px;
                background:{color:accent};
            }
            
            .reblog-header:before{
                content:'';
                position:absolute;
                left:0;
                bottom:-2px;
                width:12%;
                background-color:{color:accent};
                padding:2px;
            }
            
            .reblog-username{
                font-weight:700;
                box-shadow:0 -5px inset {color:accent};
                transition:.5s ease-in;
                text-transform:uppercase;
            }
            
            .reblog-username:hover{
                box-shadow:0 -20px inset {color:accent};
            }
            
            .reblog-info-users{
                display:none;
            }
            
            .reblog-info-users a{
                box-shadow:none !important;
            }
            
            .reblog-header.original > .reblog-info-users{
                display:flex !important;
            }
            
            .reblog-header.original > .reblog-info-users a img{
                width:24px;
                height:24px;
                border-radius:100%;
                padding:3px;
                border:2px solid {color:accent};
            }
            
            .post-info{
                display:flex;
                align-items:center;
                justify-content:space-between;
                padding:20px 0px;
                border-bottom:1px solid {color:border};
            }
            
            .post-date, .post-notes, .controls{
                display:flex;
                align-items:center;
                text-transform:uppercase;
                font-weight:700;
                justify-content:center;
            }
            
            .perma-info{
                display:flex;
                align-items:center;
                flex-wrap:wrap;
            }
            
            .perma-info span a{
                text-transform:uppercase;
                font-weight:700;
                box-shadow: 0 -5px inset {color:accent};
            }
            
            .perma-info span{
                margin-right:10px;
            }
            
            .perma-info span:last-of-type{
                margin-right:0 !important;
            }
            
            .controls i{
                border:1px solid {color:border};
                color:{color:accent};
                padding:6px;
                border-radius:2px;
            }
            
            .post-date i, .post-notes i{
                margin-right:10px;
                color:{color:accent};
            }
            
            .controls a{
                margin-right:10px;
            }
            
            .controls a:last-of-type{
                margin-right:0 !important;
            }
            
            .controls .like .like_button iframe {
			    position:absolute;
			    top:0;
			    left:0;
			    bottom:0;
			    right:0;
			    z-index:2;
			    opacity:0;
			}

			.controls .like{
			    display:inline-block;
			}

			.controls .like .liked + svg {
			    opacity:1;
			}

			.controls .like .liked + svg path {
			    fill:#ec5a5a;
			}
			
			.tags{
			    display:flex;
			    align-items:center;
			    flex-wrap:wrap;
			    padding:20px 0;
			    border-bottom:1px solid {color:border};
			}
			
			.tags i{
			    padding:10px;
			    color:{color:accent};
			    border:1px solid {color:border};
			    border-radius:5px;
			}
			
			.tag{
			    margin-left:10px;
			    display:flex;
			    align-items:center;
			    width:calc(100% - 60px);
			    flex-wrap:wrap;
			}
			
			.tag a{
			    font-size:calc({text:font size}px - 3px);
			    text-transform:uppercase;
			    margin-right:5px;
			}
			
			.pagination{
			    padding:20px;
			    border-top:1px solid {color:border};
			    display:flex;
			    align-items:center;
			    justify-content:space-between;
			    border-bottom:1px solid {color:border};
			}
			
			.current_page {
			    font-weight:700;
			}
			
            #post-container footer{
                width:calc(100% - 40px);
                padding:20px;
                height:40px;
                background:{color:footer background};
                color:{color:footer text};
                display:flex;
                align-items:center;
                text-transform:uppercase;
                justify-content:space-between;
                margin-top:100px;
                font-weight:700;
                
                {block:permalinkpage}
                bottom:0 !important;
                {/block:permalinkpage}
            }
            
            #credit a{
                color:{color:footer text};
                box-shadow:0 -5px inset {color:accent};
            }
            
            #post-notes{
			    display:flex;
			    align-items:center;
			    justify-content:center;
			    padding:20px;
			    padding-top:0 !important;
			    border-top:1px solid {color:border};
			    width:calc({text:post size}px - 40px);
			    background:{color:post bg};
			    margin-top:20px;
			}

			#post-notes ol, #post-notes li{
			        list-style-type:none;
			    }

			    #post-notes ol{
			        width:{text:post size}px;
			    }

			    #post-notes li img.avatar{
			        display:none;
			    }

			    #post-notes li{
			        margin-bottom:10px;
			        margin-left:-40px;
			        display:flex;
			        flex-wrap:wrap;
			        align-items:center;
			    }

			    #post-notes li a{
			        font-weight:700;
			        box-shadow:0 -5px inset {color:accent};
			    }

			    .note.with_commentary blockquote{
			        width:100%;
			        padding:10px;
			        border:1px solid {color:border};
			    }

			    .tag-permalink a{
			        margin-right:2px;
			        margin-bottom:2px;
			    }
        </style>

    </head>
    <body>
        <div id=""container"">
            <div id=""sidebar"">
                <div id=""sidebar-container"">
                    <div id=""icon"">
                        <img src=""{image:icon}""/>
                    </div>
                    <div style=""display:flex;align-items:center;flex-wrap:wrap;width:calc(100% - 94px)"">
                    <div id=""blogtitle"">{Title}</div>
                    <div id=""navigation-link-container"">
                        <div class=""navigation-links"">
                            <a href=""/"">home</a>
                        <a href=""/ask"">ask</a>
                        <a href=""/archive"">past</a>
                        <a href=""{text:link 1 URL}"">{text:link 1 title}</a>
                        <a href=""{text:link 2 URL}"">{text:link 2 title}</a>
                        <a href=""{text:link 3 url}"">{text:link 3 title}</a>
                        </div>
                        
                    </div>
                    </div>
                    <div id=""desc"">{Description}</div>
                </div>
            </div><!--end sidebar-->
            <div id=""post-container"">
                {block:Posts}
        <article id=""post-{PostID}"" class=""{posttype}-post posts"">
        {block:Photo}
        <div class=""legacy-photo"">
          <img src=""{PhotoURL-HighRes}"" alt=""{photoalt}"" class=""photos"" />
        </div>
        {/block:Photo} 
        
        {block:Photoset}
        <div class=""photoset-grid"" photoset-layout=""{PhotosetLayout}"">
          {block:Photos}
          <div
            data-width=""{PhotoWidth-HighRes}""
            data-height=""{PhotoHeight-HighRes}""
            data-lowres=""{PhotoURL-500}""
            data-highres=""{PhotoURL-HighRes}""
            onclick=""lightbox(this)""
          >
            <img src=""{PhotoURL-HighRes}"" />
          </div>
          {/block:Photos}
        </div>
        {/block:Photoset} 
            
        {block:Panorama}
            <div class=""legacy-photo""><img src=""{photourl-panorama}"" alt=""{photoalt}""></div>
        {/block:Panorama}
        
<!-- quote posts -->            
        {block:Quote}
            <div id=""quote"">
                {Quote}
            </div>
            <div id=""source"">
                {Source}
            </div>
        {/block:Quote}
        
<!-- chat posts -->            
        {block:Chat}
            <ul class=""chat"">
                {block:Lines}
                    <li>
                        {block:Label}{Label}{/block:Label} 
                        {Line}
                    </li>
                {/block:Lines}
            </ul>
        {/block:Chat}
        
        {block:link}
            <div class=""npf-link-block"">
                <a href=""{URL}"">
                    {Name}
                </a>
            </div>
        {/block:link}
        
        {block:Video}
        <div class=""video"">{Video-500}</div>
        {/block:Video}
        
         {block:Audio}
			{block:AudioPlayer} 
			    {AudioPlayer}
					<div class=""audio-container"">
							<div class=""audio_info"">
								<div class=""audio-details"">
									{block:TrackName}
									<p id=""trackname"">{TrackName}</p>
									{/block:TrackName} 
									{block:Album}
								    <span id=""album-name"">from <b>{Album}</b>, </span>
									{/block:Album} 
									{block:Artist}
									<span id=""artist"">by <b>{Artist}</b></span>
									{/block:Artist}
								</div>
								
								<div class=""audio_player_container"">
								    <span class=""custom_audio_buttons""></span>
							    </div>
							</div>

					<div class=""audio_player"">		
                		<span class=""custom_audio_current_time""></span>
                		<div class=""custom_audio_seekbar""></div>
                		<span class=""custom_audio_time_left""></span>
                	</div>
						</div>

						{/block:AudioPlayer}
						{/block:Audio}         
        {block:Answer}
            <div class=""question"">
                <i class=""ai-chat-question"" id=""ask-decoration""></i>
                    <span class=""asker-user"">{Asker} asked:</span> 
                <div class=""question-text"">{Question}</div>
            </div>
            {block:Answerer}
            <div class=""answer"">
            <span class=""answerer-user"">
                {Answerer} answered:</span>
            <div class=""answer-text"">{Answer}</div>
            </div>
            {/block:Answerer}
           {block:NotReblog}
            <div class=""replies"">
                {Replies}
            </div>
           {/block:NotReblog}
        {/block:Answer}
        <div class=""caption {block:notreblog} original-post {/block:notreblog}"">
            {block:Text}
                {block:Title}<div class=""title"">{Title}</div>{/block:Title}
            {/block:Text}
            {block:notreblog}
            {block:caption}{Caption}{/block:caption}
            {block:Text}{body}{/block:Text}
            {/block:notreblog}
            {block:Rebloggedfrom}
                {block:Reblogs}
                <div class=""reblogs"">
                    <div class=""reblog-header {block:IsOriginalEntry}original{/block:IsOriginalEntry}"">
                    <div>
                        <i class=""ai-person""></i>
                        <a href=""{permalink}"" target=""_blank"" class=""reblog-username {block:isdeactivated}inactive{/block:isdeactivated}"">
                            {username}
                        </a>
                    </div>

                        
                        <div class=""reblog-info-users"">
                            <a href=""{ReblogParentURL}"" title=""via: {ReblogParentName}"">
                                <img src=""{ReblogParentPortraitURL-96}"" style=""margin-right:20px;""/>
                            </a>
                            <a href=""{ReblogRootURL}"" title=""origin: {ReblogRootName}""><img src=""{ReblogRootPortraitURL-96}""/></a>
                        </div>
                    </div>
                    <div class=""reblog-content"">
                        {Body}
                    </div>
                </div>
                {/block:Reblogs}
            {/block:RebloggedFrom}
        </div>
        {block:Date}
            <div class=""post-info"">
            {block:indexpage}
                    <div class=""post-date""><i class=""ai-calendar""></i><a href=""/day/{Year}/{MonthNumberWithZero}/{dayofmonthwithzero}"">{DayofMonth} {ShortMonth} {Year}</a></div>
                  
	                <div class=""post-notes""><i class=""ai-align-bottom""></i>{NoteCountWithLabel}</div>
	                
	           <div class=""controls"">    
                <a
                  href=""{ReblogURL}""
                  target=""_blank""
                  title=""reblog this post""
                  class=""reblog""
                  ><i class=""ai-arrow-repeat""></i></a>
                <a href=""#"" class=""like"" title=""like"">{LikeButton}<i class=""ai-heart""></i></a>
                <a href=""{Permalink}"" title=""permalink page""><i class=""ai-ribbon""></i></a>
            </div>
	                {/block:indexpage}
	            {block:permalinkpage}
                <div class=""perma-info"">
                Timestamp: {DayOfMonth} {Month} {Year} @ {24Hour}:{Minutes}, {TimeAgo}
                {block:RebloggedFrom}
                <div>
                    <span>reblogged from <a href=""{reblogparenturl}"">
                       {reblogparentname}
                    </a>
                    </span> 
                   <span>
                        originally by <a href=""{reblogrooturl}"">{reblogrootname} </a></span>
                </div>
                   
                {/block:RebloggedFrom}
                
            </div>
                {/block:permalinkpage}
            </div>
        {/block:Date}
        {block:Hastags}
            <div class=""tags"">
            <i class=""ai-hashtag""></i>
                <div class=""tag""> 
                    {block:Tags}
                    <a href=""{TagURL}"">#{Tag}</a>
                    {/block:Tags}
                </div>
               
            </div>
        {/block:Hastags}
        {block:PermalinkPage}
        <div id=""post-notes"">{PostNotes}</div>
        {/block:PermalinkPage}
        </article>
      {/block:Posts}
      {block:Pagination}
            <div class=""pagination"">
                <div id=""prev-page"">
						{block:previouspage}
						<a href=""{previouspage}""><i class=""ai-arrow-left""></i></a>
						{/block:previouspage}
					</div>

					<div id=""current-page"">
						{block:JumpPagination length=""5""} {block:CurrentPage}<span
							class=""current_page""
							>{CurrentPage}</span
						>{/block:CurrentPage} {block:JumpPage}<a
							class=""jump_page""
							href=""{URL}""
							>{PageNumber}</a
						>{/block:JumpPage} {/block:JumpPagination}
					</div>

					<div id=""next-page"">
						{block:nextpage}
						<a href=""{nextpage}""><i class=""ai-arrow-right""></i></a>
						{/block:nextpage}
					</div>
            </div>
            {/block:pagination}
            
    <footer>
        <div id=""copyright"">{CopyrightYears} &#169; {name}</div>
        <div id=""credit"">
            Empyreum by <a href=""//pneuma-themes.tumblr.com"">Pneuma Themes</a>
        </div>
        
    </footer>
    </div><!--end post container-->

    </div><!--end container-->
</body>

<script>
// remove empty p tags
for (const p of document.querySelectorAll('p')) {
    if (p.innerHTML.trim() === '') {
       p.remove()
    }
}
// create posts array
let posts = []
{block:Posts} 
    posts.push({ npf: JSON.parse({JSNPF}), id: {JSPostId}}) 
{/block:Posts}

//function for updating post types 
function updateTypes(type, article) {
    article.classList.remove('text-post')
    article.classList.add(`${ type }-post`, 'npf-post')
}

// loop through array to get each post
for (const post of posts) {
   let npf = post.npf
   let article = document.getElementById(`post-${post.id}`)
   // select captions that have something in them
   let caption = article.querySelector('.caption:is(:not(:empty))')
   if (caption != null && article.classList.contains('text-post')) {
      // if content exists
      if (npf.trail.length || npf.content.length) {
          // assign various post types based on NPF data
            switch (npf.trail[0]?.content[0]?.type ?? npf.content[0].type) {
            case 'image':
               updateTypes('photos', article)
               if (article.querySelector('.npf_row') == null) {
                  caption.prepend(article.querySelector('figure'))
               }
               break
            case 'video':
               updateTypes('video', article)
               let video = article.querySelector('figure')
               caption.prepend(video)
               break
            case 'link':
              updateTypes('link', article)
            case 'audio':
               updateTypes('audio', article)
                break
            case 'quote':
                updateTypes('quote', article)
            }
          
         // if there are photos
         if (article.classList.contains('photos-post')) {
            let photoset = document.createElement('div')
            photoset.classList.add('npf-photos')
            caption.prepend(photoset)
            // find where a photoset would be split up by another content block
            let photoBreak = article.querySelector('.reblog-content p, .reblog-content h1, .reblog-content h2')
            let elements = []
            if (photoBreak) {
               let prevElement = photoBreak.parentNode.firstElementChild
               while (prevElement !== photoBreak) {
                  elements.push(prevElement)
                  prevElement = prevElement.nextElementSibling
               }
            }
            // if there is nothing that breaks up the photoset, select all rows
            else {
               elements = article.querySelectorAll('.npf_row')
            }
            // move each row to the top
            for (const el of elements) {
               photoset.append(el)
            }
            if (article.querySelectorAll('.npf_row').length > 1) {
                updateTypes('photoset', article)
            }
            else {
                updateTypes('photo', article)
            }
         }
         
         // clean up any potential stray reblog headers
         let reblogHeader = article.querySelector('.reblog-header')
         let reblogContent = article.querySelector('.reblog-content')
         if (reblogHeader?.nextElementSibling === reblogContent && reblogContent?.childElementCount === 0) {
            reblogHeader.remove()
            reblogContent.remove()
         }
      }
   }
}

	//photoset.css lightbox
      		function gatherData(images, arr) {
      		      for (let i = 0; i < images.length; i++) {
      		        let currentData = {
      		          width: images[i].getAttribute(""data-width""),
      		          height: images[i].getAttribute(""data-height""),
      		          low_res: images[i].getAttribute(""data-lowres""),
      		          high_res: images[i].getAttribute(""data-highres""),
      		        };
      		        arr.push(currentData);
      		      }
      		    }
      		    function getIndex(elem) {
      		      let i = 0;
      		      while ((elem = elem.previousElementSibling) != null) i++;
      		      return i;
      		    }
      		    function lightbox(elem) {
      		      let currentPhotoset = elem.parentNode;
      		      let photosetPhotos = currentPhotoset.getElementsByTagName(""div"");
      		      let data = [];
      		      gatherData(photosetPhotos, data);
      		      Tumblr.Lightbox.init(data, getIndex(elem) + 1);
      		    }

      		$(document).ready(function(){
		      function flexFrame() {
		        $("".caption"").each(function () {
		          $(this).find(""iframe"").wrap(""<div class='capframe'></div>""); // wrap iframe
		          flexibleFrames($("".capframe""));
		        });
		        flexibleFrames($("".video""));
		      }
		      
		  $(document).ready(flexFrame);
		    
      		      tippy(""[title]"", {
      		        // change these to your liking
      		        arrow: false,
      		        placement: ""bottom"", // top, right, bottom, left
      		        delay: 5, //ms
      		        offset: [0, 10], //px or string
      		        maxWidth: 300, //px or string

      		        // leave these as they are
      		        followCursor: false,
      		        allowHTML: true,
      		        theme: ""custom"",
      		        ignoreAttributes: true,
      		        content(reference) {
      		          const title = reference.getAttribute(""title"");
      		          reference.removeAttribute(""title"");
      		          return title;
      		        }
      		      });
      		      
      		      customAudio({
    		        post: ""article"",
    		        wrappers: {
    		          audio: "".custom_audio_wrapper"",
    		          buttons: "".custom_audio_buttons"",
                		duration: "".custom_audio_duration"",
                		timeCurrent: "".custom_audio_current_time"",
                		timeLeft: "".custom_audio_time_left"",
                		seekbar: "".custom_audio_seekbar""
    		        },
    		        default: false,
    		        pauseAll: true,
    		        playButton: ""<i class='ai-play'></i>"",
    		        pauseButton: ""<i class='ai-pause'></i>"",
    		        errorIcon: ""<i class='ai-cross'></i>"",
    		        hideInfoIfError: true,
    		        callAfterLoad:null,
		      });
		   });

</script>
</html>"
MPZjD0Mw,JKIT || Redirect After Click Wrapper in Icon Box Widgets,fauzanjeg,PHP,Tuesday 5th of March 2024 09:40:25 PM CDT,"/**
 * Redirect After Click Wrapper in Icon Box Widgets
 */
function redirect_after_click_icon_box_wrapper() {
	?>
	<script type=""text/javascript"">
		(function ($) {
			$(document).on('ready', () => {
				const wrapper = $('.jkit-icon-box .jkit-icon-box-wrapper');

				wrapper.on({
					click: (e) => {
						const url = $(e.currentTarget).find('.icon-box-link').attr('href');

						window.location.href = url;
					}
				})
			})
		})(jQuery)
	</script>
	<?php
}
add_action( 'wp_footer', 'redirect_after_click_icon_box_wrapper' );"
Fj3bSevD,Hollow,cnelson0789,Lua,Tuesday 5th of March 2024 09:40:20 PM CDT,"function refuel()
    if turtle.getFuelLevel() < 1 then
        turtle.select(1)
        for i=1, 16 do
            turtle.select(i)
            if turtle.refuel() == true then
                turtle.select(1)
                return true
            else
                return false
            end
        end
    end
end
 
function trydig()
    refuel()
    if turtle.detect() == true then
        turtle.dig()
        sleep(0.5)
        return true
    else
        return false
    end
end
 
function trydigdown()
    if turtle.detectDown() == true then
        turtle.digDown()
        return true
    else
        return false
    end
end
 
function trydigup()
    if turtle.detectUp() == true then
        turtle.digUp()
        sleep(3)
        return true
    else 
        return false
    end
end
 
function place()
    if turtle.detect() ~= true then
        for i=1, 16 do
            if turtle.getItemCount(i) > 1 then
				turtle.select(i)
				if turtle.place() == true then
					turtle.select(1)
					return true
				end
			end
        end
    end
end
 
 function placeUp()
    if turtle.detectUp() ~= true then
        for i=1, 16 do
            if turtle.getItemCount(i) > 1 then
				turtle.select(i)
				if turtle.placeUp() == true then
					turtle.select(1)
					return true
				end
			end
        end
    end
end

function placeDown()
    if turtle.detectDown() ~= true then
        for i=1, 16 do
            if turtle.getItemCount(i) > 1 then
				turtle.select(i)
				if turtle.placeDown() == true then
					turtle.select(1)
					return true
				end
			end
        end
    end
end
    
function Top()
    x = 0
    while x ~= 5 do
        trydig()
        turtle.forward()
        trydigdown()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        x = x + 1
    end
	place()
    turtle.turnLeft()
    trydig()
    turtle.forward()
    trydig()
    trydigdown()
	turtle.turnRight()
	place()
	turtle.turnLeft()
    turtle.forward()
    place()
    trydigdown()
    turtle.turnLeft()
    while x ~= 1 do
        trydig()
        turtle.forward()
        turtle.turnLeft()
        trydig()
        turtle.turnRight()
        turtle.turnRight()
        place()
        turtle.turnLeft()
        trydigdown()
        x = x - 1
    end
    place()
    turtle.turnLeft()
    turtle.forward()
    trydigdown()
    turtle.turnRight()
    place()
    turtle.turnLeft()
    turtle.forward()
    trydigdown()
    turtle.forward()
    trydigdown()
    turtle.turnRight()
    place()
    turtle.turnLeft()
    trydig()
    turtle.forward()
    trydigdown()
    place()
    turtle.turnLeft()
    while x ~= 5 do
        trydig()
        turtle.forward()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        turtle.turnLeft()
        place()
        turtle.turnLeft()
        trydigdown()
        x = x + 1
    end
    place()
    turtle.turnLeft()
    turtle.forward()
    turtle.turnRight()
    place()
	trydigdown()
    turtle.turnLeft()
    turtle.forward()
    turtle.turnLeft()
	turtle.down()
end
 
function Bot()
    x = 0
    while x ~= 5 do
        trydig()
        turtle.forward()
        placeDown()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        x = x + 1
    end
	place()
    turtle.turnLeft()
    trydig()
    turtle.forward()
    trydig()
    placeDown()
	turtle.turnRight()
	place()
	turtle.turnLeft()
    turtle.forward()
    place()
    placeDown()
    turtle.turnLeft()
    while x ~= 1 do
        trydig()
        turtle.forward()
        turtle.turnLeft()
        trydig()
        turtle.turnRight()
        turtle.turnRight()
        place()
        turtle.turnLeft()
        placeDown()
        x = x - 1
    end
    place()
    turtle.turnLeft()
    turtle.forward()
    placeDown()
    turtle.turnRight()
    place()
    turtle.turnLeft()
    turtle.forward()
    placeDown()
    turtle.forward()
    placeDown()
    turtle.turnRight()
    place()
    turtle.turnLeft()
    trydig()
    turtle.forward()
    placeDown()
    place()
    turtle.turnLeft()
    while x ~= 5 do
        trydig()
        turtle.forward()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        turtle.turnLeft()
        place()
        turtle.turnLeft()
        placeDown()
        x = x + 1
    end
    place()
    turtle.turnLeft()
    turtle.forward()
    turtle.turnRight()
    place()
	placeDown()
    turtle.turnLeft()
    turtle.forward()
    turtle.turnLeft()
	turtle.down()
end
 
function Mid()
    while x ~= 1 do
        turtle.forward()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        turtle.turnLeft()
        trydig()
        turtle.turnLeft()
        x = x - 1
    end
	trydigdown()
	turtle.turnLeft()
	turtle.turnLeft()
	turtle.down()
end
Top()
Mid()
Bot()
   "
FEhAjwyA,Untitled,smj007,Python,Tuesday 5th of March 2024 09:20:32 PM CDT,"class BrowserHistory:

    """"""
    Segregage current, history and future and then this problem will be relatively easy
    """""" 

    def __init__(self, homepage: str):
        self.history, self.future = [], []
        self.current = homepage


    def visit(self, url: str) -> None:
        self.history.append(self.current)
        self.current = url
        self.future = []
        
    def back(self, steps: int) -> str:
        
        while steps and self.history:
            self.future.append(self.current)
            self.current = self.history[-1]
            self.history.pop()
            steps = steps - 1

        return self.current

    def forward(self, steps: int) -> str:

        while steps and self.future:
            self.history.append(self.current)
            self.current = self.future[-1]
            self.future.pop()
            steps = steps - 1

        return self.current



# Your BrowserHistory object will be instantiated and called as such:
# obj = BrowserHistory(homepage)
# obj.visit(url)
# param_2 = obj.back(steps)
# param_3 = obj.forward(steps)"
LUc22hEs,Mad,Unknown_No_1,PHP,Tuesday 5th of March 2024 09:16:51 PM CDT,NewModComingSoonOnMadGamerTG
8vygm3wM,scanner-record.sh,howtophil,Bash,Tuesday 5th of March 2024 08:33:00 PM CDT,"#!/bin/bash

#-------------------------------------------
# GENERAL NOTES
#
#------------------------------------------- 
# This is a the old ""simplex parrot"" bash
# script stripped down to simply record
# captured audio that breaks a silence
# level and save it in timestamped files.
#
# If you patch a radio/scanner into your
# computer or Pi, you can have a set of
# recordings with date-time stamps
# for listening to later.
#-------------------------------------------
# Save in its own directory as scanner-record.sh
# create a ""record"" directory there and then run:
#
# ./scanner-record.sh
#-------------------------------------------
# Note: 
# See the monitor.sh sister-script for ideas
# on how to watch for new recordings and
# then take action:
# https://pastebin.com/CnS58d95
#-------------------------------------------
# Use pavucontrol to select input and output
# or however is easiest/best for your
# working environment.
#
# Raspberry Pi may use alsa instead of 
# pulse. You'll have to configure things
# with alsamixer or similar. It does seem
# to use pulseaudio nicely when pulse is
# installed.
#-------------------------------------------
# Code by Phillip J Rhoades (2024)
#-------------------------------------------

#-------------------------------------------
# HARDWARE NOTES
#
#-------------------------------------------
# When patching in from a Baofeng or such,
# I use an HT with an APRS cable and a
# mic/headphones splitter on one end
# to patch the radio into a Linux computer
# or a Raspberry Pi. The Pi will need a
# cheap USB soundcard. A USB soundcard
# could also help with ground issues
# (buzzing) on computers/laptops.
# 
# You'll have to adjust input and output
# volumes on the computer and the output
# volume on the radio/scanner.
#
# You could improve on this basic setup
# in a number of ways but that's outside
# the scope of this ""simple"" project.
#
# If you're reading this script in monospace
# then this rough ASCII diagram of the setup
# might help you get a clearer idea:
#
#                    -->[PC Mic In]
# [HT]<-APRS->SPLIT-||
#                    <--[PC Sound Card Out] (NOT NEEDED)
#
# In some cases, a ground loop noise
# isolator or two might help with buzzing
# sounds between the computer and the HT.
#
# You can also use a cable that plugs into
# the tiny speaker-out of the radio and converts
# to the normal ""headphone jack"" of the computer
#
# Most scanners have a ""headphone out"" or
# ""speaker out"" port that you can plug into
# your computer mic port. You won't need
# to deal with APRS cables etc in that case.
#-------------------------------------------

#-------------------------------------------
# VARIABLE(S) TO CONTROL THINGS
#
#-------------------------------------------
# In order to keep the size down
# I convert the wav file to ogg in the 
# background. You could easily set that to
# mp3 instead or you could skip conversion
# and just keep the original wavs, if you
# have plenty of disk space.
# 
# Setting SAVERECS to 1 activates this
# feature and setting SAVERECS to 0
# disables it. (2020/02/26)
# If you just want to listen to the scanner
# on your computer, you might not save the
# recordings... 
#-------------------------------------------

SAVERECS=1
SAVERECSDIR=""./record""
#-------------------------------------------
# MORE ""ELEGANT"" EXITING
# (but still pretty much a hammer)
#
# Trap ctrl-c and call ctrl_c()
# to exit somewhat gracefully...
#-------------------------------------------

trap ctrl_c INT

function ctrl_c() {
          if test -f ""./recording.wav""; then
               rm recording.wav
          fi
          echo
          echo ""#-----------------------------------""
          echo ""# Terminating the scanner recorder  ""
          echo ""#-----------------------------------""

          #-------------------------------------------
          # Kill the recorder and its parent process.
          #
          # Could issue shutdown -h instead in order
          # to shut down Linux/Pi computer completely.
          #-------------------------------------------

          kill -9 $PPID
          #shutdown -h now
}

#-------------------------------------------
# REPEATER RECORDER LOOP
#
#-------------------------------------------
# Loop until ctrl-c on keyboard or the
# DTMF command to terminate the repeater
#-------------------------------------------

while [ 1 ]; do
          echo
          echo ""#-------------------------------""
          echo ""# WAITING FOR AUDIO INPUT:""
          echo ""#-------------------------------""
          # Silent record
          rec -V1 -c1 recording.wav rate 64k silence 1 0.1 1% 1 3.0 1% trim 0 30

          # Command for pass-through for scanner sound
          # while still recording a wav.
          # Some latency dependent on computer, but basically live.
          # Making the mic hot in alsa or pulse would have
          # less latency but other issues.
          #rec -V1 -c1 -t wav - rate 64k silence 1 0.1 1% 1 3.0 1% trim 0 30 |tee recording.wav |play -t wav -


          if test -f ""./recording.wav""; then
               echo
               if [ $SAVERECS = 1 ]; then
                    # The timestamp is YEAR-MONTH+DAYOFMONTH-HOURMINUTESECONDS (2024-03-21-231107)
                    # Sorts better in an ls that way
                    TIMESTAMP=$(date +""%Y-%m-%d-%H%M%S"")
                    mv recording.wav ""$SAVERECSDIR/$TIMESTAMP.wav"" #moving a file on the same filesystem is fast and cheap
                    (ffmpeg -loglevel quiet -i ""$SAVERECSDIR/$TIMESTAMP.wav"" ""$SAVERECSDIR/$TIMESTAMP.ogg""; rm ""$SAVERECSDIR/$TIMESTAMP.wav"") & #Takes time. Do in background
               else 
                    rm recording.wav #cleanup before restarting loop
               fi
          fi
done
"
spTnH3aV,Blaze Mover,BillMolloy,C#,Tuesday 5th of March 2024 07:32:29 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;



public class BlazeMover : MonoBehaviour
{    
    [SerializeField] Animator anim;
    [SerializeField] LayerMask ground;
    [SerializeField] LeftJoystick joyStick;
    [SerializeField] Transform groundCheck;
    [SerializeField] float xtiltMax;
    [SerializeField] float xtiltMin;
    [SerializeField] float ytiltMax;
    [SerializeField] float ytiltMin;
    [SerializeField] float xDeadZoneMin;
    [SerializeField] float xDeadZoneMax;
    [SerializeField] float yDeadZoneMin;
    [SerializeField] float yDeadZoneMax;
    float xAcceleration;
    float yAcceleration;
    Vector3 acceleration;
    Vector3 movementDir;
    float speed = 3f;

    void Update()
    {       
        GroundCheck();
        Movement();
        Direction();
    }

    private void Movement()
    {
        // Get the accelerometer input
        acceleration = Input.acceleration;

        // Adjust the sensitivity
        acceleration = acceleration * Mathf.Pow(10, 1);

        // Clamp the accelerometer values within the defined tilt ranges
        xAcceleration = Mathf.Clamp(acceleration.x, xtiltMin, xtiltMax);
        yAcceleration = Mathf.Clamp(acceleration.y, ytiltMin, ytiltMax);

        if (yAcceleration > ytiltMin && yAcceleration < ytiltMax)
        {            
            anim.SetFloat(""Locomotion"", 0f);
        }
        
        if(xAcceleration < xtiltMax && xAcceleration > xtiltMax)
        {            
            anim.SetBool(""WalkBackwards"", false);
        }

        //Forward Device tilted away from player
        if (yAcceleration == ytiltMax)
        {
            anim.SetFloat(""Locomotion"", speed);
            transform.Translate(Vector3.forward * speed * Time.deltaTime);
        }

        //Device tilted Left
        if (xAcceleration == xDeadZoneMin)
        {
            anim.SetBool(""StrafeLeft"", true);
            transform.Translate(Vector3.left * 2f * Time.deltaTime);
        }
        else if (xAcceleration > xDeadZoneMin)
        {
            anim.SetBool(""StrafeLeft"", false);
        }

        //Device tilted to the right
        if (xAcceleration >= xDeadZoneMax)
        {
            anim.SetBool(""StrafeRight"", true);
            transform.Translate(Vector3.right * 2f * Time.deltaTime);
        }
        else if (xAcceleration <= xDeadZoneMax)
        {
            anim.SetBool(""StrafeRight"", false);
        }

        //Back Wards Device tilted toward Player
        if (yAcceleration == ytiltMin)
        {
            anim.SetBool(""Walk Backwards"", true);
            transform.Translate(Vector3.back * 1f * Time.deltaTime);
        }
        else if (yAcceleration > ytiltMin)
        {
            anim.SetBool(""Walk Backwards"", false);
        }        
    }
      
    void Direction()
    {   
        // Ensure that the input direction is normalized
        if (movementDir != Vector3.zero)
        {
            movementDir = joyStick.GetInputDirection();
            movementDir.Normalize();
            //Vector3 directionToTarget = (movementDir - Vector3.forward).normalized;
            Quaternion targetRotation = Quaternion.LookRotation(movementDir);
            transform.rotation = Quaternion.Slerp(transform.rotation, targetRotation, 5f * Time.deltaTime);
        }
    }

     void GroundCheck()
     {
        if (IsGrounded() == true)
        {
            anim.SetBool(""InAir"", false);
        }
        else
        {
            anim.SetBool(""InAir"", true);
            Debug.DrawLine(groundCheck.position, groundCheck.position + Vector3.down, Color.red);
        }
     }

     bool IsGrounded()
     {
         return Physics.CheckSphere(groundCheck.position, .3f, ground);
     }
}
"
