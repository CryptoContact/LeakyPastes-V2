id,title,username,language,date,content
2gBhV8w6,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Saturday 27th of January 2024 11:49:34 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

258061"
XxfJiiP4,DrawWireRectangle,Hietakissa,C#,Saturday 27th of January 2024 11:40:11 AM CDT,"void DrawWireRectangle(Vector2 pos, Vector2 size, Color color, float duration = 0f)
{
    Debug.DrawRay(pos + (Vector2.down + Vector2.left) * size * 0.5f, Vector2.up * size.y, color, duration);
    Debug.DrawRay(pos + (Vector2.down + Vector2.left) * size * 0.5f, Vector2.right * size.x, color, duration);
    Debug.DrawRay(pos + (Vector2.up + Vector2.right) * size * 0.5f, Vector2.down * size.y, color, duration);
    Debug.DrawRay(pos + (Vector2.up + Vector2.right) * size * 0.5f, Vector2.left * size.x, color, duration);
}"
jkhpemRM,heapsort.c,Aravind_reddy10,C,Saturday 27th of January 2024 11:32:47 AM CDT,"#include <stdio.h>
#include <stdlib.h>
void heapsort(int *arr,int n);
void heapfy(int *arr,int n,int i);
void swap(int *a,int *b){
    int temp=*a;
    *a=*b;
    *b=temp;
}
void heapsort(int arr[],int n)
{
    for(int i=n/2-1;i>=0;i--){
        heapfy(arr,n,i);
    }
    for(int i=n-1;i>=0;i--){
        swap(&arr[0],&arr[i]);
        heapfy(arr,i,0);
    }
}
void heapfy(int arr[],int n,int i)
{
    int largest=i;
    int left=2*i+1;
    int right=2*i+2;
    while(left<n&&arr[left]>arr[largest])
    {
        largest=left;
    }
    while(right<n&&arr[right]>arr[largest])
    {
        largest=right;
    }
    if(largest!=i)
    {
        swap(&arr[largest],&arr[i]);
        heapfy(arr,i,largest);
    }
}
int main(){
    int n;
    printf(""Enter size of the array:"");
    scanf(""%d"",&n);
    int arr[n],i;
    printf(""\nEnter array values:"");
    for(i=0;i<n;i++)
    {
        scanf(""%d"",&arr[i]);
    }
    heapsort(arr,n);
    for(i=0;i<n;i++){
        printf(""%d "",arr[i]);
    }
    return 0;
}"
JjbXxMUk,Zombie Virus Outbreak,Junaid_Hossain,C++,Saturday 27th of January 2024 11:32:17 AM CDT,"#include<bits/stdc++.h>
#define nl '\n'
using namespace std;

int main(){
    long int t; cin>>t;
    while(t--){
        long int n; cin>>n;
        long int arr[n];
        long int newzom=0, ans=0;

        for(long int i=0; i<n; i++){
            cin>>arr[i];
        }

        for(long int i=0; i<n; i++){
            if(arr[i]%3==0 && arr[i]%5==0){
                newzom+=arr[i];
                ans+=arr[i];
            } else {
                if(arr[i]>=newzom){
                    ans+=newzom;
                    newzom=0;
                } else {
                    ans+=arr[i];
                    newzom-=arr[i];
                }
            }


        }

        cout<<ans<<nl;

    }
}
"
YijspwQK,Untitled,kopyl,Python,Saturday 27th of January 2024 11:21:57 AM CDT,"root@55cb7f729062:/workspace# ls
HF_HOME  Untitled.ipynb  __pycache__  dataset-cache  test.py  train_notebook_sdxl_mapping_saving.ipynb
root@55cb7f729062:/workspace# python
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from multiprocess import set_start_method
>>> set_start_method(""spawn"")
>>> from test import map_train
<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
>>> map_train()
Map (num_proc=2):   0%|                                                              | 0/833 [00:00<?, ? examples/s]<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
0
Map (num_proc=2):   0%|                                                    | 2/833 [00:21<2:29:09, 10.77s/ examples]0
0
Map (num_proc=2):   1%|▍                                                     | 6/833 [00:21<38:46,  2.81s/ examples]0
0
0
Map (num_proc=2):   1%|▊                                                    | 12/833 [00:21<15:05,  1.10s/ examples]0
0
Map (num_proc=2):   2%|█                                                    | 16/833 [00:21<09:37,  1.41 examples/s]0
0
Map (num_proc=2):   2%|█▎                                                   | 20/833 [00:22<06:26,  2.10 examples/s]0
0
Map (num_proc=2):   3%|█▌                                                   | 24/833 [00:22<04:27,  3.03 examples/s]0
0
<class 'datasets.arrow_dataset.Dataset'>
Map (num_proc=2):   3%|█▊                                                   | 28/833 [00:22<03:09,  4.26 examples/s]0
0
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
Map (num_proc=2):   4%|██                                                   | 32/833 [00:22<02:17,  5.81 examples/s]0
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
0
Map (num_proc=2):   4%|██▎                                                  | 36/833 [00:22<01:43,  7.68 examples/s]0
0
Map (num_proc=2):   5%|██▌                                                  | 40/833 [00:22<01:20,  9.81 examples/s]0
0
Map (num_proc=2):   5%|██▊                                                  | 44/833 [00:22<01:04, 12.21 examples/s]0
0
Map (num_proc=2):   6%|███                                                  | 48/833 [00:23<00:56, 13.88 examples/s]0
0
Map (num_proc=2):   6%|███▎                                                 | 52/833 [00:23<00:46, 16.93 examples/s]0
0
Map (num_proc=2):   7%|███▌                                                 | 56/833 [00:23<00:39, 19.65 examples/s]0
0
Map (num_proc=2):   7%|███▊                                                 | 60/833 [00:23<00:34, 22.67 examples/s]0
0
Map (num_proc=2):   8%|████                                                 | 64/833 [00:23<00:32, 23.69 examples/s]0
0
Map (num_proc=2):   8%|████▎                                                | 68/833 [00:23<00:31, 24.54 examples/s]0
0
Map (num_proc=2):   9%|████▌                                                | 72/833 [00:24<00:52, 14.40 examples/s]0
0
Map (num_proc=2):   9%|████▊                                                | 76/833 [00:24<01:09, 10.88 examples/s]0
0
Map (num_proc=2):  10%|█████                                                | 80/833 [00:25<00:56, 13.38 examples/s]0
0
Map (num_proc=2):  10%|█████▎                                               | 84/833 [00:25<00:46, 16.02 examples/s]0
0
Map (num_proc=2):  11%|█████▌                                               | 88/833 [00:25<00:40, 18.25 examples/s]0
0
Map (num_proc=2):  11%|█████▊                                               | 92/833 [00:25<00:34, 21.25 examples/s]0
0
Map (num_proc=2):  12%|██████                                               | 96/833 [00:25<00:32, 22.81 examples/s]0
0
Map (num_proc=2):  12%|██████▏                                             | 100/833 [00:25<00:30, 24.12 examples/s]0
0
Map (num_proc=2):  12%|██████▍                                             | 104/833 [00:25<00:28, 25.68 examples/s]0
0
Map (num_proc=2):  13%|██████▋                                             | 108/833 [00:26<00:28, 25.85 examples/s]0
0
Map (num_proc=2):  13%|██████▉                                             | 112/833 [00:26<00:27, 26.50 examples/s]0
0
Map (num_proc=2):  14%|███████▏                                            | 116/833 [00:26<00:27, 26.38 examples/s]0
0
Map (num_proc=2):  14%|███████▍                                            | 120/833 [00:26<00:25, 27.80 examples/s]0
0
Map (num_proc=2):  15%|███████▋                                            | 124/833 [00:26<00:23, 30.05 examples/s]0
0
Map (num_proc=2):  15%|███████▉                                            | 128/833 [00:26<00:23, 29.90 examples/s]0
0
Map (num_proc=2):  16%|████████▏                                           | 132/833 [00:26<00:23, 29.77 examples/s]0
0
Map (num_proc=2):  16%|████████▍                                           | 136/833 [00:26<00:23, 30.13 examples/s]0
0
Map (num_proc=2):  17%|████████▋                                           | 140/833 [00:27<00:23, 29.88 examples/s]0
0
Map (num_proc=2):  17%|████████▉                                           | 144/833 [00:27<00:23, 29.59 examples/s]0
0
Map (num_proc=2):  18%|█████████▏                                          | 148/833 [00:27<00:22, 30.01 examples/s]0
0
Map (num_proc=2):  18%|█████████▍                                          | 152/833 [00:27<00:22, 30.00 examples/s]0
0
Map (num_proc=2):  19%|█████████▋                                          | 156/833 [00:27<00:22, 30.37 examples/s]0
0
Map (num_proc=2):  19%|█████████▉                                          | 160/833 [00:27<00:21, 31.32 examples/s]0
0
Map (num_proc=2):  20%|██████████▏                                         | 164/833 [00:27<00:21, 31.32 examples/s]0
0
Map (num_proc=2):  20%|██████████▍                                         | 168/833 [00:27<00:21, 31.43 examples/s]0
Process SpawnPoolWorker-1:
Traceback (most recent call last):
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 314, in _bootstrap
    self.run()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 108, in run
    self._target(*self._args, **self._kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/pool.py"", line 114, in worker
    task = get()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/queues.py"", line 370, in get
    return _ForkingPickler.loads(res)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 301, in loads
    return load(file, ignore, **kwds)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 287, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 442, in load
    obj = StockUnpickler.load(self)
  File ""/usr/local/lib/python3.10/dist-packages/torch/storage.py"", line 337, in _load_from_bytes
    return torch.load(io.BytesIO(b))
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1028, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1256, in _legacy_load
    result = unpickler.load()
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 1193, in persistent_load
    wrap_storage=restore_location(obj, location),
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 381, in default_restore_location
    result = fn(storage, location)
  File ""/usr/local/lib/python3.10/dist-packages/torch/serialization.py"", line 277, in _cuda_deserialize
    return torch.UntypedStorage(obj.nbytes(), device=torch.device(location))
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacty of 15.73 GiB of which 14.25 MiB is free. Process 195904 has 3.73 GiB memory in use. Process 196147 has 6.99 GiB memory in use. Process 196146 has 4.98 GiB memory in use. Of the allocated memory 4.66 GiB is allocated by PyTorch, and 172.25 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
0
Map (num_proc=2):  21%|██████████▋                                         | 172/833 [00:28<00:20, 32.04 examples/s]0
0
Map (num_proc=2):  21%|██████████▉                                         | 176/833 [00:28<00:21, 30.91 examples/s]0
0
Map (num_proc=2):  22%|███████████▏                                        | 180/833 [00:28<00:21, 30.50 examples/s]0
0
Map (num_proc=2):  22%|███████████▍                                        | 184/833 [00:28<00:21, 29.98 examples/s]0
0
Map (num_proc=2):  23%|███████████▋                                        | 188/833 [00:28<00:21, 29.40 examples/s]0
0
Map (num_proc=2):  23%|███████████▉                                        | 192/833 [00:28<00:21, 29.24 examples/s]0
0
Map (num_proc=2):  24%|████████████▏                                       | 196/833 [00:28<00:21, 29.00 examples/s]0
0
Map (num_proc=2):  24%|████████████▍                                       | 200/833 [00:29<00:21, 29.30 examples/s]0
0
Map (num_proc=2):  24%|████████████▋                                       | 204/833 [00:29<00:21, 29.88 examples/s]0
0
Map (num_proc=2):  25%|████████████▉                                       | 208/833 [00:29<00:20, 30.95 examples/s]0
0
Map (num_proc=2):  25%|█████████████                                       | 210/833 [00:29<01:27,  7.13 examples/s]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/workspace/test.py"", line 222, in map_train
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=2, with_rank=True, num_proc=2)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 592, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 557, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 3185, in map
    for rank, done, content in iflatmap_unordered(
  File ""/usr/local/lib/python3.10/dist-packages/datasets/utils/py_utils.py"", line 647, in iflatmap_unordered
    raise RuntimeError(
RuntimeError: One of the subprocesses has abruptly died during map operation.To debug the error, disable multiprocessing."
c6du8jaM,Untitled,kopyl,Python,Saturday 27th of January 2024 11:20:35 AM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision, device=""cuda""
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
).to(""cuda"")
text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
).to(""cuda"")
vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae"", device=""cuda""
).to(""cuda"")

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False, device=""cuda""
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2"", device=""cuda""
)


text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]


def encode_prompt(batch, rank, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    print(rank)
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, text_encoders):
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)

def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=2, with_rank=True, num_proc=2)"
PTk7tuBY,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Saturday 27th of January 2024 11:09:11 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_750483.pdf
 
Working as of
27 January 2024"
WDQ1C6En,mps,geekyprawins,JavaScript,Saturday 27th of January 2024 11:05:11 AM CDT,"var members = [];

var login = fetch('https://members.iecsemanipal.com/api/login', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    ""email"": 'satyapraveen2003@gmail.com',
    password: 'testpwd',
  }),
}).then((res) => console.log(res));

const res = fetch('https://members.iecsemanipal.com/api/register', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    ""name"": ""Trial 2024"",
    ""email"": ""praveen@iecsemanipal.com"",
    ""regNo"": ""123456987"",
    ""mobile"": ""7330840503"",
    ""memId"": ""7c2aedf8-3891-4c56-93ac-cf317547ade4""
  }),
}).then((response)=>console.log(response.body));

// for (i = 0; i < members.length; i++) {
//   // console.log(members[i].""name);
//   const res = fetch('https://members.iecsemanipal.com/api/register', {
//     method: 'POST',
//     headers: {
//       'Content-Type': 'application/json',
//     },
//     body: JSON.stringify(members[i]),
//   }).then((response) => console.log(response));
// }"
fTwJmegc,05. Maximal Sum,Spocoman,C++,Saturday 27th of January 2024 10:58:43 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main() {
    int row, col, n;
    cin >> row >> col;

    vector<vector<int>> matrix;

    for (int i = 0; i < row; i++) {
        vector<int> currentRow;
        for (int j = 0; j < col; j++) {
            cin >> n;
            currentRow.push_back(n);
        }
        matrix.push_back(currentRow);
    }

    int maxSum = 0, r = 0, c = 0;

    for (int i = 0; i < row - 2; i++) {
        int sum = 0;
        for (int j = 0; j < col - 2; j++) {
            sum = matrix[i][j] + matrix[i][j + 1] + matrix[i][j + 2] +
                matrix[i + 1][j] + matrix[i + 1][j + 1] + matrix[i + 1][j + 2] +
                matrix[i + 2][j] + matrix[i + 2][j + 1] + matrix[i + 2][j + 2];

            if (sum > maxSum) {
                maxSum = sum;
                r = i;
                c = j;
            }
        }
    }

    cout << ""Sum = "" << maxSum << endl;

    for (int i = r; i < r + 3; i++) {
        for (int j = c; j < c + 3; j++) {
            cout << matrix[i][j] << ' ';
        }
        cout << endl;
    }

    return 0;
}"
s2SEEarQ,wilder.nvim rplugin file,bhaveshverma333,VIM,Saturday 27th of January 2024 10:57:37 AM CDT,""" perl plugins


"" node plugins


"" python3 plugins
call remote#host#RegisterPlugin('python3', 'C:/Users/bhaveshverma/AppData/Local/nvim/plugged/wilder.nvim/rplugin/python3/wilder', [
      \ {'sync': v:true, 'name': '_wilder_python_basic_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_clap_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_cpsm_filt', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_cpsm_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_difflib_sort', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_file_finder', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fruzzy_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fuzzy_filt', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_fuzzywuzzy_sort', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_get_file_completion', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_get_help_tags', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_get_users', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_init', 'type': 'function', 'opts': {}},
      \ {'sync': v:true, 'name': '_wilder_python_pcre2_highlight', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_search', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_sleep', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_lexical_sort', 'type': 'function', 'opts': {}},
      \ {'sync': 'urgent', 'name': '_wilder_python_uniq_filt', 'type': 'function', 'opts': {}},
     \ ])


"" ruby plugins


"" python plugins


"
Li1tQH3u,Untitled,kopyl,Python,Saturday 27th of January 2024 10:57:18 AM CDT,"root@55cb7f729062:/workspace# ls
HF_HOME  Untitled.ipynb  __pycache__  dataset-cache  test.py  train_notebook_sdxl_mapping_saving.ipynb
root@55cb7f729062:/workspace# python
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from test import map_train
<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
>>> map_train()
Map (num_proc=2):   0%|                                                              | 0/833 [00:00<?, ? examples/s]<class 'datasets.arrow_dataset.Dataset'>
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
You are using a model of type clip_text_model to instantiate a model of type . This is not supported for all configurations of models and can yield errors.
Process SpawnPoolWorker-1:
Traceback (most recent call last):
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 314, in _bootstrap
    self.run()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/process.py"", line 108, in run
    self._target(*self._args, **self._kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/pool.py"", line 114, in worker
    task = get()
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/queues.py"", line 370, in get
    return _ForkingPickler.loads(res)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 301, in loads
    return load(file, ignore, **kwds)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 287, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 442, in load
    obj = StockUnpickler.load(self)
  File ""/usr/local/lib/python3.10/dist-packages/dill/_dill.py"", line 432, in find_class
    return StockUnpickler.find_class(self, module, name)
  File ""/workspace/test.py"", line 220, in <module>
    set_start_method(""spawn"")
  File ""/usr/local/lib/python3.10/dist-packages/multiprocess/context.py"", line 247, in set_start_method
    raise RuntimeError('context has already been set')
RuntimeError: context has already been set
Map (num_proc=2):   0%|                                                              | 0/833 [00:19<?, ? examples/s]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/workspace/test.py"", line 224, in map_train
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, with_rank=True, num_proc=2)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 592, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 557, in wrapper
    out: Union[""Dataset"", ""DatasetDict""] = func(self, *args, **kwargs)
  File ""/usr/local/lib/python3.10/dist-packages/datasets/arrow_dataset.py"", line 3185, in map
    for rank, done, content in iflatmap_unordered(
  File ""/usr/local/lib/python3.10/dist-packages/datasets/utils/py_utils.py"", line 647, in iflatmap_unordered
    raise RuntimeError(
RuntimeError: One of the subprocesses has abruptly died during map operation.To debug the error, disable multiprocessing.
>>>"
iyNqj7ip,Untitled,kopyl,Python,Saturday 27th of January 2024 10:55:44 AM CDT,"import functools
import gc
import logging
import math
import os
import random
import shutil
from pathlib import Path

import accelerate
import datasets
import numpy as np
import torch
import torch.nn.functional as F
import torch.utils.checkpoint
import transformers
from accelerate import Accelerator
from accelerate.logging import get_logger
from accelerate.utils import ProjectConfiguration, set_seed
from accelerate.utils import InitProcessGroupKwargs
from datasets import load_dataset, DatasetDict, load_from_disk
from huggingface_hub import create_repo, upload_folder
from packaging import version
from torchvision import transforms
from torchvision.transforms.functional import crop
from tqdm.auto import tqdm
from transformers import AutoTokenizer, PretrainedConfig

import diffusers
from diffusers import (
    AutoencoderKL,
    DDPMScheduler,
    StableDiffusionXLPipeline,
    UNet2DConditionModel,
)
from diffusers.optimization import get_scheduler
from diffusers.training_utils import EMAModel, compute_snr
from diffusers.utils import check_min_version, is_wandb_available
from diffusers.utils.import_utils import is_xformers_available
from datetime import timedelta
from multiprocess import set_start_method


resolution = 128
dataset_name = ""lambdalabs/pokemon-blip-captions""
cache_dir = ""/workspace/dataset-cache""
pretrained_model_name_or_path = ""stabilityai/stable-diffusion-xl-base-1.0""
pretrained_vae_model_name_or_path = ""madebyollin/sdxl-vae-fp16-fix""

max_train_samples = None


check_min_version(""0.24.0.dev0"")
logger = get_logger(__name__)
DATASET_NAME_MAPPING = {
    ""lambdalabs/pokemon-blip-captions"": (""image"", ""text""),
}

dataset = load_dataset(
    dataset_name,
    cache_dir=cache_dir,
)


if max_train_samples is not None:
    dataset[""train""] = dataset[""train""].select(range(max_train_samples))


column_names = dataset[""train""].column_names


train_resize = transforms.Resize(resolution, interpolation=transforms.InterpolationMode.BILINEAR)
train_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize([0.5], [0.5])])
train_crop = transforms.RandomCrop(resolution)


def preprocess_train(examples):
    image_column = column_names[0]
    images = [image.convert(""RGB"") for image in examples[image_column]]
    # image aug
    original_sizes = []
    all_images = []
    crop_top_lefts = []
    for image in images:
        original_sizes.append((image.height, image.width))
        image = train_resize(image)

        y1, x1, h, w = train_crop.get_params(image, (resolution, resolution))
        image = crop(image, y1, x1, h, w)

        crop_top_left = (y1, x1)
        crop_top_lefts.append(crop_top_left)
        image = train_transforms(image)
        all_images.append(image)

    examples[""original_sizes""] = original_sizes
    examples[""crop_top_lefts""] = crop_top_lefts
    examples[""pixel_values""] = all_images
    return examples


train_dataset = dataset[""train""].with_transform(preprocess_train)
print(type(train_dataset))
train_dataset


def import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path: str, revision: str, subfolder: str = ""text_encoder""
):
    text_encoder_config = PretrainedConfig.from_pretrained(
        pretrained_model_name_or_path, subfolder=subfolder, revision=revision, device=""cuda""
    )
    model_class = text_encoder_config.architectures[0]

    if model_class == ""CLIPTextModel"":
        from transformers import CLIPTextModel

        return CLIPTextModel
    elif model_class == ""CLIPTextModelWithProjection"":
        from transformers import CLIPTextModelWithProjection

        return CLIPTextModelWithProjection
    else:
        raise ValueError(f""{model_class} is not supported."")


text_encoder_cls_one = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None
)
text_encoder_cls_two = import_model_class_from_model_name_or_path(
    pretrained_model_name_or_path, None, subfolder=""text_encoder_2""
)

text_encoder_one = text_encoder_cls_one.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder""
).to(""cuda"")
text_encoder_two = text_encoder_cls_two.from_pretrained(
    pretrained_model_name_or_path, subfolder=""text_encoder_2""
).to(""cuda"")
vae = AutoencoderKL.from_pretrained(
    pretrained_model_name_or_path, subfolder=""vae"", device=""cuda""
).to(""cuda"")

tokenizer_one = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer"", use_fast=False, device=""cuda""
)
tokenizer_two = AutoTokenizer.from_pretrained(
    pretrained_model_name_or_path, subfolder=""tokenizer_2"", device=""cuda""
)


text_encoders = [text_encoder_one, text_encoder_two]
tokenizers = [tokenizer_one, tokenizer_two]


def encode_prompt(batch, rank, text_encoders, tokenizers, proportion_empty_prompts, caption_column, is_train=True):
    print(rank)
    prompt_embeds_list = []
    prompt_batch = batch[caption_column]

    captions = []
    for caption in prompt_batch:
        if random.random() < proportion_empty_prompts:
            captions.append("""")
        elif isinstance(caption, str):
            captions.append(caption)
        elif isinstance(caption, (list, np.ndarray)):
            # take a random caption if there are multiple
            captions.append(random.choice(caption) if is_train else caption[0])

    with torch.no_grad():
        for tokenizer, text_encoder in zip(tokenizers, text_encoders):
            text_inputs = tokenizer(
                captions,
                padding=""max_length"",
                max_length=tokenizer.model_max_length,
                truncation=True,
                return_tensors=""pt"",
            )
            text_input_ids = text_inputs.input_ids
            prompt_embeds = text_encoder(
                text_input_ids.to(text_encoder.device),
                output_hidden_states=True,
            )

            # We are only ALWAYS interested in the pooled output of the final text encoder
            pooled_prompt_embeds = prompt_embeds[0]
            prompt_embeds = prompt_embeds.hidden_states[-2]
            bs_embed, seq_len, _ = prompt_embeds.shape
            prompt_embeds = prompt_embeds.view(bs_embed, seq_len, -1)
            prompt_embeds_list.append(prompt_embeds)

    prompt_embeds = torch.concat(prompt_embeds_list, dim=-1)
    pooled_prompt_embeds = pooled_prompt_embeds.view(bs_embed, -1)
    return {""prompt_embeds"": prompt_embeds.cpu(), ""pooled_prompt_embeds"": pooled_prompt_embeds.cpu()}


def compute_vae_encodings(batch, vae):
    images = batch.pop(""pixel_values"")
    pixel_values = torch.stack(list(images))
    pixel_values = pixel_values.to(memory_format=torch.contiguous_format).float()
    pixel_values = pixel_values.to(vae.device, dtype=vae.dtype)

    with torch.no_grad():
        model_input = vae.encode(pixel_values).latent_dist.sample()
    model_input = model_input * vae.config.scaling_factor
    return {""model_input"": model_input.cpu()}


compute_embeddings_fn = functools.partial(
    encode_prompt,
    text_encoders=text_encoders,
    tokenizers=tokenizers,
    proportion_empty_prompts=0,
    caption_column=""text"",
)
compute_vae_encodings_fn = functools.partial(compute_vae_encodings, vae=vae)


set_start_method(""spawn"")


def map_train():
    return train_dataset.map(compute_embeddings_fn, batched=True, batch_size=4, with_rank=True, num_proc=2)"
T6tFcE2g,Untitled,ayawaska,JSON,Saturday 27th of January 2024 10:47:09 AM CDT,"[
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""19:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""אנאדולו אפס - מונאקו""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""167""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""167""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""167""
      }
    ],
    ""teams"": ""אנאדולו אפס - מונאקו""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""אולימפיה מילאנו - ברצלונה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""157""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""157""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""157""
      }
    ],
    ""teams"": ""אולימפיה מילאנו - ברצלונה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""פרטיזן בלגרד - ז'לגיריס קובנה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""165""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""165""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""165""
      }
    ],
    ""teams"": ""פרטיזן בלגרד - ז'לגיריס קובנה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""21:29  יורוליג — מעל/מתחת נקודות - ללא הארכות"",
      ""בסקוניה - ולנסיה""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""163""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""163""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""163""
      }
    ],
    ""teams"": ""בסקוניה - ולנסיה""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""אטלנטה הוקס - דאלאס מאבריקס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""244""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""244""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""244""
      }
    ],
    ""teams"": ""אטלנטה הוקס - דאלאס מאבריקס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""שארלוט הורנטס - יוסטון רוקטס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""225""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""225""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""225""
      }
    ],
    ""teams"": ""שארלוט הורנטס - יוסטון רוקטס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""01:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""אינדיאנה פייסרס - פיניקס סאנס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""243""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""243""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""243""
      }
    ],
    ""teams"": ""אינדיאנה פייסרס - פיניקס סאנס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:29  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""טורונטו ראפטורס - לוס אנג'לס קליפרס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""235""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""235""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""235""
      }
    ],
    ""teams"": ""טורונטו ראפטורס - לוס אנג'לס קליפרס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""ממפיס גריזליס - אורלנדו מג'יק""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""213""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""213""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""213""
      }
    ],
    ""teams"": ""ממפיס גריזליס - אורלנדו מג'יק""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""מילווקי באקס - קליבלנד קבלירס""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""238""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""238""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""238""
      }
    ],
    ""teams"": ""מילווקי באקס - קליבלנד קבלירס""
  },
  {
    ""text"": [
      ""כדורסל,"",
      ""בשעה:"",
      ""02:59  NBA — מעל/מתחת נקודות - ללא הארכות"",
      ""ניו אורלינס פליקאנס - אוקלהומה סיטי ת'אנדר""
    ],
    ""rates"": [
      {
        ""ratio"": ""1.70"",
        ""above"": ""241""
      },
      {
        ""ratio"": ""20.00"",
        ""exact"": ""241""
      },
      {
        ""ratio"": ""1.70"",
        ""below"": ""241""
      }
    ],
    ""teams"": ""ניו אורלינס פליקאנס - אוקלהומה סיטי ת'אנדר""
  }
]"
NFD9SMva,04. Snake Moves,Spocoman,C++,Saturday 27th of January 2024 10:16:29 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    int row, col;
    cin >> row >> col;
    cin.ignore();

    string line;
    getline(cin, line);

    vector<vector<char>> matrix;

    int index = 0;

    for (int i = 0; i < row; i++) {
        vector<char> currentRow;
        for (int j = 0; j < col; j++) {
            if (i % 2 == 0) {
                currentRow.push_back(line[index++ % line.length()]);
            }
            else {
                currentRow.insert(currentRow.begin(), line[index++ % line.length()]);
            }
        }
        matrix.push_back(currentRow);
    }

    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            cout << matrix[i][j];
        }
        cout << endl;
    }

    return 0;
}"
QiuWCq7J,sandbox game code,Era-Grp,Lua,Saturday 27th of January 2024 10:06:44 AM CDT,"local rX = NumberRange.new(-25,25)
local rZ = NumberRange.new(-25,25)

local DSS = game.DataStoreService
local TBS = DSS:GetOrderedDataStore(""totalblocks"",""dev"")
local MpS = game.MarketplaceService

local shiny = {}
local ownedPos:{Vector3} = {}

function snap(number)
	local remainder = number % 4
	local result

	if remainder < 2 then
		result = number - remainder
	else
		result = number + (4 - remainder)
	end

	return result
end

local function clearPlrBuilds(plr)
	for i,v in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		table.remove(ownedPos,table.find(ownedPos,v.Position))
		v:Destroy()
	end
end

game.ReplicatedStorage.Events.BLOCK.OnServerEvent:Connect(function(plr,position:Vector3)
	if (plr.Character.PrimaryPart.Position-position).Magnitude <= 50 then
		local sp = Instance.new(""Part"")
		sp.Size = Vector3.new(4,4,4)
		sp.CanCollide = true
		sp.CanQuery = true
		sp.CanTouch = true
		sp.Anchored = true
		sp.Transparency = 0
		sp.Position = Vector3.new(snap(position.X),snap(position.Y)+2,snap(position.Z))
		
		if sp.Position.X > rX.Min and sp.Position.X < rX.Max and sp.Position.Z > rZ.Min and sp.Position.Z < rZ.Max then
			sp:Destroy()
			return
		end
		
		if table.find(ownedPos,sp.Position) then
			sp:Destroy()
			return
		end
		
		sp.Color = plr.TeamColor.Color
		sp:SetAttribute(""plr"",plr.UserId)
		
		if shiny[plr.UserId] == true then
			sp.Reflectance = .2
		else
			sp.Reflectance = 0
		end
		
		table.insert(ownedPos,sp.Position)
		
		sp.Parent = workspace.Blocks:WaitForChild(plr.UserId,5)
	end
end)


game.Players.PlayerAdded:Connect(function(plr)
	local folder = Instance.new(""Folder"")
	folder.Name = plr.UserId
	folder.Parent = workspace.Blocks
	
	local ls = script.leaderstats:Clone()
	local totalblocks = TBS:GetAsync(plr.UserId)
	ls.Total.Value = totalblocks or 0
	
	ls.Parent = plr
	
	folder.ChildAdded:Connect(function(child)
		ls.Blocks.Value = #folder:GetChildren()
		ls.Total.Value += 1
	end)
	
	coroutine.resume(coroutine.create(function()
		task.wait(30)
		TBS:SetAsync(plr.UserId,ls.Total.Value)
	end))
	
	shiny[plr.UserId] = MpS:UserOwnsGamePassAsync(plr.UserId,679457884)
end)

MpS.PromptGamePassPurchaseFinished:Connect(function(plr:Player,id,wasP)
	if not wasP then return end
	if id == 679457884 then
		shiny[plr.UserId] = true
	end
	
	for i,v:BasePart in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		if v:IsA(""BasePart"") then
			v.Reflectance = .2
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(plr)
	clearPlrBuilds(plr)
	workspace.Blocks:WaitForChild(plr.UserId,5):Destroy()
	
	TBS:SetAsync(plr.UserId,plr:WaitForChild(""leaderstats"",5).Total.Value)
end)

game.ReplicatedStorage.Events.Save2Roblox.OnServerEvent:Connect(function(plr)
	local model = Instance.new(""Model"")
	for i,v in pairs(workspace.Blocks:WaitForChild(plr.UserId,5):GetChildren()) do
		local blockClone = v:Clone()
		blockClone.Parent = model
	end
	
	game.AssetService:PromptCreateAssetAsync(plr,model,Enum.AssetType.Model)
end)

game.ReplicatedStorage.Events.CLEAN.OnServerEvent:Connect(clearPlrBuilds)


local function processReceipt(receiptInfo)
	local userId = receiptInfo.PlayerId
	local productId = receiptInfo.ProductId

	local player = game.Players:GetPlayerByUserId(userId)
	if player then
		-- Get the handler function associated with the developer product ID and attempt to run it
		if productId == 1718979816 then
			for i,v in pairs(game.Players:GetPlayers()) do
				clearPlrBuilds(v)
			end
			
			local teamColor = player.TeamColor.Color
			
			game.ReplicatedStorage.Events.GetSysMsg:FireAllClients(player.Name ..""</font>"".. "" removed all buildings!"")
		end
	end
end

-- Set the callback; this can only be done once by one server-side script
MpS.ProcessReceipt = processReceipt"
MNFw01sG,Untitled,Nenogzar,Python,Saturday 27th of January 2024 10:06:04 AM CDT,"numbers = list(map(int,input().strip().split("" "")))
how_many_numbers_to_remove = int(input())

for n in range(how_many_numbers_to_remove):
    numbers.remove(min(numbers))
count = 1
for num in numbers:
    if count != (len(numbers)):
        print(f""{num},"", end="" "")

    else:
        print(f""{num}"")
    count += 1"
W3x14USF,QuickOBJ Plugin - Source Code,Era-Grp,Lua,Saturday 27th of January 2024 10:05:20 AM CDT,"local plugin:Plugin = plugin
local GUI = script.Parent.Parent.GUIs.Main
local Selection = game:GetService(""Selection"")
local Module = script.QuickOBJ
local HaveModuleInOldSession = false

local cur = nil

local function CreatePlugin()
	local widgetInfo = DockWidgetPluginGuiInfo.new(
		Enum.InitialDockState.Float, -- Widget will be initialized in floating panel
		false, -- Widget will be initially enabled
		false, -- Don't override the previous enabled state
		500, -- Default width of the floating window
		500, -- Default height of the floating window
		300, -- Minimum width of the floating window (optional)
		300 -- Minimum height of the floating window (optional)
	)
	local Widget = plugin:CreateDockWidgetPluginGui(""UIBloxPlugin"", widgetInfo)
	Widget.Title = ""QuickOBJ Plugin""
	Widget.Name = ""QuickOBJ Plugin""
	GUI.Parent = Widget

	local toolbar = plugin:CreateToolbar(""QuickOBJ Plugin"")
	local btn:PluginToolbarButton = toolbar:CreateButton(""QuickOBJ_MainButton"",""Open"", ""https://www.roblox.com/asset/?id=16052434107"", ""QuickOBJ"")
	btn.Enabled = true
	btn.ClickableWhenViewportHidden = true

	btn.Click:Connect(function()
		Widget.Enabled = not Widget.Enabled
	end)
end

CreatePlugin()

if not game.ReplicatedStorage:FindFirstChild(""QuickOBJ"") then
	Module.Parent = game.ReplicatedStorage
	HaveModuleInOldSession = false
else
	Module:Destroy()
	Module = game.ReplicatedStorage:FindFirstChild(""QuickOBJ"")
	HaveModuleInOldSession = true
end

local function AddNewElement(elementOld,withoutModule:boolean)
	if elementOld then
		local element
		
		if not withoutModule then
			element = elementOld:Clone()
			
			if Module.OBJ:FindFirstChild(element.Name) then
				element.Name = element.Name .. ""_""..math.random(1,100000)
			end
			element.Parent = Module.OBJ
		else
			element = elementOld
		end
		
		local ui = script.element:Clone()
		ui.Name = ""Element_""..element.Name
		ui.Text = element.Name
		ui.Parent = GUI.Pages.Objects
		
		ui.MouseEnter:Connect(function()
			ui.delete.Visible = true
			ui.edit.Visible = true
		end)
		
		ui.MouseLeave:Connect(function()
			ui.delete.Visible = false
			ui.edit.Visible = false
		end)
		
		ui.edit.MouseButton1Click:Connect(function()
			ui.edit.Rename.Visible = not ui.edit.Rename.Visible
			
			if ui.edit.Rename.Visible then
				ui.edit.Rename.TextBox.Text = ui.Text
			elseif not ui.edit.Rename.Visible then
				if not Module.OBJ:FindFirstChild(ui.edit.Rename.TextBox.Text) then
					ui.Name = ""Element_""..ui.edit.Rename.TextBox.Text
					ui.Text = ui.edit.Rename.TextBox.Text
					element.Name = ui.edit.Rename.TextBox.Text
				end
			end
		end)
		
		ui.delete.MouseButton1Click:Connect(function()
			element:Destroy()
			ui:Destroy()
		end)
	end
end

local function LoadFromModule(m:ModuleScript)
	local OBJ = m:FindFirstChild(""OBJ"")

	if OBJ then
		for i,v in pairs(OBJ:GetChildren()) do
			AddNewElement(v,true)
		end
	end
end

if HaveModuleInOldSession then
	LoadFromModule(Module)
end

cur = Selection:Get()[1]
Selection.SelectionChanged:Connect(function()
	local first = Selection:Get()[1]
	
	if first then
		cur = first
		GUI.CreateNew.Frame.Description.Text = 'Do you want to add ""'..cur.Name..'""?'
	end
end)

GUI.Pages.Objects._new.MouseButton1Click:Connect(function()
	local element = cur
	
	if element then
		GUI.CreateNew.Visible = true
		
		GUI.CreateNew.Frame.Description.Text = 'Do you want to add ""'..element.Name..'""?'
	end
end)

GUI.CreateNew.Frame.Add.MouseButton1Click:Connect(function()
	AddNewElement(cur or Selection:Get()[1],false)
end)

GUI.CreateNew.Frame.Close.MouseButton1Click:Connect(function()
	GUI.CreateNew.Visible = false
end)"
MWGEfvjQ,Untitled,Nenogzar,Python,Saturday 27th of January 2024 10:03:50 AM CDT,"numbers = [int(num) for num in input().split()]
n = int(input())

for _ in range(n):
    numbers.remove(min(numbers))
    result = ', '.join(map(str, numbers))
#print(numbers)
print(result)"
rjnwyYBv,touch_screen,MondGnu,Lua,Saturday 27th of January 2024 09:41:36 AM CDT,"local state
local monitor

function display()
	monitor.clear()
	for x, y in ipairs(state) do
		for y, v in pairs(y) do
			monitor.setCursorPos(v.x, v.y)
			monitor.write(v.text)
		end
	end
end

function push_event(x,y)
	local coord = state[x]
	if coord == nil then
		return
	end
	local comp = coord[y]
	if comp == nil then
		return
	end
	comp.func()
end

function setMonitor(m)
	monitor = m
end

function setState(s)
	state = s
end"
8aKMjwJ7,Pulya V Serdtse,psychoticodes,HTML,Saturday 27th of January 2024 09:30:47 AM CDT,"<link href=""https://dl.dropboxusercontent.com/s/vtfjtrziaf9ke9d/pulya.css?dl=0"" rel=""stylesheet""><center><div id=""lya"" style=""--back:#000;--cl:#fff;--tit:#ccc;""><div class=""dtse"">PULYA SERDTSE</div><a href=""https://is.gd/gasper""><div class=""dtse2""></div></a><table cellspacing=""7""><td><div class=""sdr"" style=""background:url('https://via.placeholder.com/70x70') center/cover;""></div></td><td><div class=""sdr"" style=""background:url('https://via.placeholder.com/70x70') center/cover;""></div></td></table></div></center>"
0Lun4DK0,snake,nirajs,Python,Saturday 27th of January 2024 09:29:47 AM CDT,"class SnakeGame:

    def __init__(self, width: int, height: int, foods: List[List[int]]):
        self.maxRow = height 
        self.maxCol = width
        self.foodList = []
        self.currentX = 0
        self.currentY = 0
        self.score = 0

        for food in foods:
            x, y = food
            self.foodList.append((x,y))

        self.dir = {
            'L': (0, -1),
            'R': (0, 1),
            'D': (1, 0),
            'U': (-1, 0) 
        }
        

    def move(self, direction: str) -> int:

        x = self.currentX + self.dir[direction][0]
        y = self.currentY + self.dir[direction][1]
        if (self.checkBoundary(self.maxRow, self.maxCol, x, y) == False):
            return -1

        self.currentX = x 
        self.currentY = y
        if self.score < len(self.foodList) and self.foodList[self.score][0] == x and self.foodList[self.score][1] == y:
            self.score += 1
            return self.score
        else:
            return self.score


    def checkBoundary(self, r, c, posx, posy):
        if ( 0 <= posx < r and 0 <= posy < c):
            return True
        else:
            return False
        


# Your SnakeGame object will be instantiated and called as such:
# obj = SnakeGame(width, height, food)
# param_1 = obj.move(direction)"
cZf2zWDm,03. Squares in Matrix,Spocoman,C++,Saturday 27th of January 2024 09:19:32 AM CDT,"#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

int main() {
    int row, col;
    cin >> row >> col;
    cin.ignore();

    char chr;
    string line;

    vector<vector<char>> matrix;

    for (int i = 0; i < row; i++) {
        getline(cin, line);
        istringstream ss(line);
        vector<char> currentRow;

        while (ss >> chr) {
            currentRow.push_back(chr);
        }

        matrix.push_back(currentRow);
    }

    int counter = 0;

    for (int i = 0; i < row - 1; i++) {
        for (int j = 0; j < col - 1; j++) {
            chr = matrix[i][j];
            if (chr == matrix[i][j + 1] &&
                chr == matrix[i + 1][j] &&
                chr == matrix[i + 1][j + 1]) {
                counter++;
            }
        }
    }

    cout << counter << endl;
    return 0;
}"
42kzSEap,Nigerian scammers [27-1-1/2024],bombaires,AIMMS,Saturday 27th of January 2024 09:15:36 AM CDT,"<a href=""mailto:cbpaymastermmmaster@outlook.com"">cbpaymastermmmaster@outlook.com</a>
<a href=""mailto:mohammadubuhari001@msn.com"">mohammadubuhari001@msn.com</a>
<a href=""mailto:muhammadubuhari2018@gmail.com"">muhammadubuhari2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.du.buh.ar.i20.1.8@gmail.com"">m.u.h.a.mm.a.du.buh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.uham.mad.u.bu.hari.2018@gmail.com"">m.uham.mad.u.bu.hari.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadub.uha.ri201.8@gmail.com"">m.u.h.a.mmadub.uha.ri201.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.madub.uhari20.18@gmail.com"">m.uh.a.m.madub.uhari20.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.adubu.h.a.r.i.201.8@gmail.com"">m.u.h.a.mm.adubu.h.a.r.i.201.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.adubuha.r.i2018@gmail.com"">mu.h.am.m.adubuha.r.i2018@gmail.com</a>
<a href=""mailto:m.uha.m.m.a.dubu.h.ar.i2018@gmail.com"">m.uha.m.m.a.dubu.h.ar.i2018@gmail.com</a>
<a href=""mailto:m.uh.ammad.ubu.ha.r.i2.0.1.8@gmail.com"">m.uh.ammad.ubu.ha.r.i2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.ad.u.b.u.ha.r.i.2.018@gmail.com"">m.u.h.am.m.ad.u.b.u.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uha.m.ma.d.u.b.u.ha.ri2.018@gmail.com"">m.uha.m.ma.d.u.b.u.ha.ri2.018@gmail.com</a>
<a href=""mailto:muha.m.m.adubuh.ari.2018@gmail.com"">muha.m.m.adubuh.ari.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.du.b.u.har.i.20.18@gmail.com"">m.u.h.a.m.m.a.du.b.u.har.i.20.18@gmail.com</a>
<a href=""mailto:mu.ha.m.m.ad.ubu.ha.ri2.018@gmail.com"">mu.ha.m.m.ad.ubu.ha.ri2.018@gmail.com</a>
<a href=""mailto:mu.h.am.m.ad.u.b.uh.ar.i.2018@gmail.com"">mu.h.am.m.ad.u.b.uh.ar.i.2018@gmail.com</a>
<a href=""mailto:m.u.h.a.mma.du.bu.h.a.ri.20.1.8@gmail.com"">m.u.h.a.mma.du.bu.h.a.ri.20.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.d.ub.uhari2.0.18@gmail.com"">muh.a.m.m.a.d.ub.uhari2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mmadu.b.u.h.a.r.i.2.0.18@gmail.com"">m.u.ha.mmadu.b.u.h.a.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.am.ma.d.ubu.ha.ri.2.01.8@gmail.com"">m.uh.am.ma.d.ubu.ha.ri.2.01.8@gmail.com</a>
<a href=""mailto:m.uha.m.ma.du.b.u.ha.ri.20.18@gmail.com"">m.uha.m.ma.du.b.u.ha.ri.20.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.a.dub.u.hari2.0.1.8@gmail.com"">m.u.ha.m.m.a.dub.u.hari2.0.1.8@gmail.com</a>
<a href=""mailto:m.uha.mmad.u.bu.har.i.2.0.1.8@gmail.com"">m.uha.mmad.u.bu.har.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.du.b.u.hari.20.18@gmail.com"">mu.h.amm.a.du.b.u.hari.20.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.madu.b.uh.ar.i2.0.18@gmail.com"">m.uh.a.m.madu.b.uh.ar.i2.0.18@gmail.com</a>
<a href=""mailto:muh.a.m.m.ad.ubuha.r.i20.1.8@gmail.com"">muh.a.m.m.ad.ubuha.r.i20.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ub.u.ha.r.i201.8@gmail.com"">mu.ha.m.m.a.d.ub.u.ha.r.i201.8@gmail.com</a>
<a href=""mailto:m.uh.ammad.u.b.uh.ar.i20.18@gmail.com"">m.uh.ammad.u.b.uh.ar.i20.18@gmail.com</a>
<a href=""mailto:m.uham.mad.u.buhari2.0.1.8@gmail.com"">m.uham.mad.u.buhari2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.dub.uh.ari20.18@gmail.com"">mu.h.amm.a.dub.uh.ari20.18@gmail.com</a>
<a href=""mailto:m.uha.m.m.a.dubuhar.i2.0.18@gmail.com"">m.uha.m.m.a.dubuhar.i2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmad.u.b.uh.ar.i.20.1.8@gmail.com"">muh.a.mmad.u.b.uh.ar.i.20.1.8@gmail.com</a>
<a href=""mailto:muh.am.madub.u.har.i.2.0.18@gmail.com"">muh.am.madub.u.har.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.ad.ub.u.ha.ri.20.18@gmail.com"">m.u.h.a.m.m.ad.ub.u.ha.ri.20.18@gmail.com</a>
<a href=""mailto:m.u.h.am.m.a.dub.u.ha.r.i.2.018@gmail.com"">m.u.h.am.m.a.dub.u.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.d.ub.uh.ari.2.0.1.8@gmail.com"">m.uh.a.m.m.a.d.ub.uh.ari.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.a.dub.u.h.a.r.i20.1.8@gmail.com"">mu.ham.m.a.dub.u.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.ma.dubuha.ri2.01.8@gmail.com"">m.uh.a.m.ma.dubuha.ri2.01.8@gmail.com</a>
<a href=""mailto:muh.amm.adu.b.u.ha.r.i.2018@gmail.com"">muh.amm.adu.b.u.ha.r.i.2018@gmail.com</a>
<a href=""mailto:m.u.hamma.du.buh.a.r.i20.1.8@gmail.com"">m.u.hamma.du.buh.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.ad.ub.u.h.a.r.i20.1.8@gmail.com"">m.u.h.a.mm.ad.ub.u.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:m.uh.amma.d.ub.u.h.a.ri2.0.18@gmail.com"">m.uh.amma.d.ub.u.h.a.ri2.0.18@gmail.com</a>
<a href=""mailto:mu.ha.mmad.ubuh.ar.i20.1.8@gmail.com"">mu.ha.mmad.ubuh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:muha.m.madu.bu.ha.r.i2.018@gmail.com"">muha.m.madu.bu.ha.r.i2.018@gmail.com</a>
<a href=""mailto:m.uha.mma.d.ub.u.h.a.ri2.018@gmail.com"">m.uha.mma.d.ub.u.h.a.ri2.018@gmail.com</a>
<a href=""mailto:muhamma.du.b.uhari.2.0.1.8@gmail.com"">muhamma.du.b.uhari.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.d.u.b.uh.a.ri.2.018@gmail.com"">m.u.h.a.m.m.a.d.u.b.uh.a.ri.2.018@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ubu.ha.r.i.2018@gmail.com"">muh.a.m.mad.ubu.ha.r.i.2018@gmail.com</a>
<a href=""mailto:muham.m.adu.buh.a.ri20.1.8@gmail.com"">muham.m.adu.buh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:muham.m.a.d.u.bu.h.ar.i20.1.8@gmail.com"">muham.m.a.d.u.bu.h.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.madu.b.uh.ari.2.018@gmail.com"">m.u.ha.m.madu.b.uh.ari.2.018@gmail.com</a>
<a href=""mailto:m.u.h.amm.a.du.bu.ha.r.i.201.8@gmail.com"">m.u.h.amm.a.du.bu.ha.r.i.201.8@gmail.com</a>
<a href=""mailto:muha.m.m.a.d.u.b.u.hari201.8@gmail.com"">muha.m.m.a.d.u.b.u.hari201.8@gmail.com</a>
<a href=""mailto:m.uh.ammadu.b.uh.a.r.i20.18@gmail.com"">m.uh.ammadu.b.uh.a.r.i20.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.mad.u.b.u.ha.r.i2.01.8@gmail.com"">m.u.ha.m.mad.u.b.u.ha.r.i2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.mma.d.u.buh.a.r.i201.8@gmail.com"">mu.h.a.mma.d.u.buh.a.r.i201.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.ma.d.u.buh.a.ri20.1.8@gmail.com"">m.u.ha.m.ma.d.u.buh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:muham.m.adu.b.uha.r.i.2.0.18@gmail.com"">muham.m.adu.b.uha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmadu.buhari.201.8@gmail.com"">muh.a.mmadu.buhari.201.8@gmail.com</a>
<a href=""mailto:m.u.hammad.ub.u.ha.ri.201.8@gmail.com"">m.u.hammad.ub.u.ha.ri.201.8@gmail.com</a>
<a href=""mailto:muha.mm.a.d.ubuh.a.ri.2.01.8@gmail.com"">muha.mm.a.d.ubuh.a.ri.2.01.8@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.adu.buh.a.r.i201.8@gmail.com"">m.u.ha.m.m.adu.buh.a.r.i201.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.a.dub.u.h.ari.201.8@gmail.com"">mu.h.a.m.m.a.dub.u.h.ari.201.8@gmail.com</a>
<a href=""mailto:muham.m.adub.uha.r.i20.1.8@gmail.com"">muham.m.adub.uha.r.i20.1.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.d.ubuha.ri20.1.8@gmail.com"">muh.a.mm.a.d.ubuha.ri20.1.8@gmail.com</a>
<a href=""mailto:muh.am.mad.ubuh.a.r.i2018@gmail.com"">muh.am.mad.ubuh.a.r.i2018@gmail.com</a>
<a href=""mailto:m.uham.m.adu.b.u.h.ar.i.2.0.18@gmail.com"">m.uham.m.adu.b.u.h.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.d.u.bu.h.ar.i.2.01.8@gmail.com"">m.u.h.a.mm.a.d.u.bu.h.ar.i.2.01.8@gmail.com</a>
<a href=""mailto:muhamm.a.dubuhar.i.201.8@gmail.com"">muhamm.a.dubuhar.i.201.8@gmail.com</a>
<a href=""mailto:muh.ammad.ubu.har.i2018@gmail.com"">muh.ammad.ubu.har.i2018@gmail.com</a>
<a href=""mailto:m.u.ha.mm.a.dub.u.h.ar.i.20.1.8@gmail.com"">m.u.ha.mm.a.dub.u.h.ar.i.20.1.8@gmail.com</a>
<a href=""mailto:m.uhamm.a.dubu.har.i2.0.18@gmail.com"">m.uhamm.a.dubu.har.i2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadu.buha.ri.2.0.18@gmail.com"">m.u.h.a.mmadu.buha.ri.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.b.uh.a.r.i2.01.8@gmail.com"">m.uh.amma.d.u.b.uh.a.r.i2.01.8@gmail.com</a>
<a href=""mailto:m.uham.m.adu.b.uhari2018@gmail.com"">m.uham.m.adu.b.uhari2018@gmail.com</a>
<a href=""mailto:m.uh.a.mm.a.d.ub.uh.ari2.018@gmail.com"">m.uh.a.mm.a.d.ub.uh.ari2.018@gmail.com</a>
<a href=""mailto:m.u.h.am.m.a.du.bu.h.ari20.1.8@gmail.com"">m.u.h.am.m.a.du.bu.h.ari20.1.8@gmail.com</a>
<a href=""mailto:m.u.ham.mad.u.bu.h.ari.2018@gmail.com"">m.u.ham.mad.u.bu.h.ari.2018@gmail.com</a>
<a href=""mailto:muh.ammadub.u.h.ar.i2.0.1.8@gmail.com"">muh.ammadub.u.h.ar.i2.0.1.8@gmail.com</a>
<a href=""mailto:muh.amm.a.d.u.buha.ri201.8@gmail.com"">muh.amm.a.d.u.buha.ri201.8@gmail.com</a>
<a href=""mailto:mu.h.amm.adu.buh.a.r.i2.0.18@gmail.com"">mu.h.amm.adu.buh.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.ammad.u.bu.har.i.2.0.1.8@gmail.com"">mu.h.ammad.u.bu.har.i.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.hamma.d.u.bu.har.i.2018@gmail.com"">m.u.hamma.d.u.bu.har.i.2018@gmail.com</a>
<a href=""mailto:m.uhamm.a.du.b.u.ha.r.i.2018@gmail.com"">m.uhamm.a.du.b.u.ha.r.i.2018@gmail.com</a>
<a href=""mailto:m.uham.ma.du.bu.h.ar.i.2.01.8@gmail.com"">m.uham.ma.du.bu.h.ar.i.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.u.buh.a.r.i.20.1.8@gmail.com"">mu.h.a.mmad.u.buh.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.ammadub.u.h.ari2.018@gmail.com"">mu.h.ammadub.u.h.ari2.018@gmail.com</a>
<a href=""mailto:mu.ha.m.ma.dub.u.ha.r.i.20.1.8@gmail.com"">mu.ha.m.ma.dub.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muha.m.m.ad.ubu.h.a.r.i2018@gmail.com"">muha.m.m.ad.ubu.h.a.r.i2018@gmail.com</a>
<a href=""mailto:m.uha.mma.dubuha.r.i2.0.18@gmail.com"">m.uha.mma.dubuha.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.amm.a.d.ubu.h.ari2.0.1.8@gmail.com"">mu.h.amm.a.d.ubu.h.ari2.0.1.8@gmail.com</a>
<a href=""mailto:muha.mm.adubuha.ri.2018@gmail.com"">muha.mm.adubuha.ri.2018@gmail.com</a>
<a href=""mailto:mu.h.a.m.mad.ub.u.har.i.2.018@gmail.com"">mu.h.a.m.mad.ub.u.har.i.2.018@gmail.com</a>
<a href=""mailto:m.uh.amm.a.du.b.uha.r.i.2.0.18@gmail.com"">m.uh.amm.a.du.b.uha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:muh.a.mmadu.b.u.h.a.ri.2.01.8@gmail.com"">muh.a.mmadu.b.u.h.a.ri.2.01.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.du.b.uha.r.i2.0.18@gmail.com"">muh.a.mm.a.du.b.uha.r.i2.0.18@gmail.com</a>
<a href=""mailto:m.uhammadu.b.uha.r.i2.0.18@gmail.com"">m.uhammadu.b.uha.r.i2.0.18@gmail.com</a>
<a href=""mailto:m.uha.m.m.ad.ubuhari.2.0.18@gmail.com"">m.uha.m.m.ad.ubuhari.2.0.18@gmail.com</a>
<a href=""mailto:mu.ham.m.a.d.u.b.u.h.ari.2.01.8@gmail.com"">mu.ham.m.a.d.u.b.u.h.ari.2.01.8@gmail.com</a>
<a href=""mailto:m.uhamm.a.d.u.b.uha.r.i20.18@gmail.com"">m.uhamm.a.d.u.b.uha.r.i20.18@gmail.com</a>
<a href=""mailto:mu.ham.ma.dub.u.h.a.r.i.2.018@gmail.com"">mu.ham.ma.dub.u.h.a.r.i.2.018@gmail.com</a>
<a href=""mailto:mu.ha.mmadu.bu.h.a.ri.201.8@gmail.com"">mu.ha.mmadu.bu.h.a.ri.201.8@gmail.com</a>
<a href=""mailto:muh.a.mm.adub.u.har.i2.0.1.8@gmail.com"">muh.a.mm.adub.u.har.i2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.adub.uha.ri.20.1.8@gmail.com"">mu.h.am.m.adub.uha.ri.20.1.8@gmail.com</a>
<a href=""mailto:muham.m.adu.b.u.ha.r.i.2.0.18@gmail.com"">muham.m.adu.b.u.ha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uhamm.ad.u.buh.ari2.018@gmail.com"">m.uhamm.ad.u.buh.ari2.018@gmail.com</a>
<a href=""mailto:m.uham.mad.ubuh.a.r.i.20.1.8@gmail.com"">m.uham.mad.ubuh.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:m.u.ham.m.a.dubu.h.ari.2.0.18@gmail.com"">m.u.ham.m.a.dubu.h.ari.2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.m.madu.bu.hari.2.01.8@gmail.com"">m.u.ha.m.madu.bu.hari.2.01.8@gmail.com</a>
<a href=""mailto:muh.am.m.a.d.u.bu.ha.r.i.2.018@gmail.com"">muh.am.m.a.d.u.bu.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:muha.mm.a.d.ub.u.h.a.r.i201.8@gmail.com"">muha.mm.a.d.ub.u.h.a.r.i201.8@gmail.com</a>
<a href=""mailto:mu.hamm.ad.u.b.u.ha.r.i.20.1.8@gmail.com"">mu.hamm.ad.u.b.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.adub.uhar.i.2.0.1.8@gmail.com"">mu.ham.m.adub.uhar.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.ammad.u.bu.h.a.ri2.01.8@gmail.com"">mu.h.ammad.u.bu.h.a.ri2.01.8@gmail.com</a>
<a href=""mailto:mu.ha.mm.a.d.ubu.h.ari.2.018@gmail.com"">mu.ha.mm.a.d.ubu.h.ari.2.018@gmail.com</a>
<a href=""mailto:m.u.ha.m.m.ad.u.bu.har.i.2.0.18@gmail.com"">m.u.ha.m.m.ad.u.bu.har.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.ub.u.h.ar.i2.0.18@gmail.com"">m.u.ha.mma.d.ub.u.h.ar.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.amma.dubu.h.a.ri2018@gmail.com"">mu.h.amma.dubu.h.a.ri2018@gmail.com</a>
<a href=""mailto:mu.ham.m.a.dub.u.h.ar.i.2.018@gmail.com"">mu.ham.m.a.dub.u.h.ar.i.2.018@gmail.com</a>
<a href=""mailto:m.u.h.a.m.m.a.d.ubuha.r.i.20.18@gmail.com"">m.u.h.a.m.m.a.d.ubuha.r.i.20.18@gmail.com</a>
<a href=""mailto:muha.mmadu.buhari.2.01.8@gmail.com"">muha.mmadu.buhari.2.01.8@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ub.uh.ari2.018@gmail.com"">muh.a.m.mad.ub.uh.ari2.018@gmail.com</a>
<a href=""mailto:m.uha.mm.a.dubu.hari.20.1.8@gmail.com"">m.uha.mm.a.dubu.hari.20.1.8@gmail.com</a>
<a href=""mailto:muh.amm.ad.ub.u.h.a.r.i.2.018@gmail.com"">muh.amm.ad.ub.u.h.a.r.i.2.018@gmail.com</a>
<a href=""mailto:muh.am.madub.u.h.a.ri20.18@gmail.com"">muh.am.madub.u.h.a.ri20.18@gmail.com</a>
<a href=""mailto:mu.ham.ma.dub.u.ha.r.i.2.0.1.8@gmail.com"">mu.ham.ma.dub.u.ha.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.madub.uh.a.ri20.1.8@gmail.com"">mu.ha.m.madub.uh.a.ri20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.madu.b.uhari.20.1.8@gmail.com"">mu.h.a.m.madu.b.uhari.20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.amma.du.b.u.h.ar.i2.018@gmail.com"">m.u.h.amma.du.b.u.h.ar.i2.018@gmail.com</a>
<a href=""mailto:m.u.h.a.mm.a.d.ubu.ha.r.i.2.01.8@gmail.com"">m.u.h.a.mm.a.d.ubu.ha.r.i.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.amm.a.du.bu.ha.ri20.18@gmail.com"">mu.h.amm.a.du.bu.ha.ri20.18@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.bu.ha.r.i.2.018@gmail.com"">m.uh.amma.d.u.bu.ha.r.i.2.018@gmail.com</a>
<a href=""mailto:m.uhammad.ubuha.ri2.018@gmail.com"">m.uhammad.ubuha.ri2.018@gmail.com</a>
<a href=""mailto:m.uh.am.mad.ub.u.ha.r.i2.0.1.8@gmail.com"">m.uh.am.mad.ub.u.ha.r.i2.0.1.8@gmail.com</a>
<a href=""mailto:mu.ha.mm.a.d.ub.uhari.2.0.1.8@gmail.com"">mu.ha.mm.a.d.ub.uhari.2.0.1.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.bu.h.ar.i.2.0.1.8@gmail.com"">muhamm.a.du.bu.h.ar.i.2.0.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.ub.u.h.ar.i20.1.8@gmail.com"">mu.h.a.mm.a.d.ub.u.h.ar.i20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.u.buh.ari.2.018@gmail.com"">mu.h.a.mm.a.d.u.buh.ari.2.018@gmail.com</a>
<a href=""mailto:m.uha.m.mad.u.b.u.h.a.ri2.01.8@gmail.com"">m.uha.m.mad.u.b.u.h.a.ri2.01.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.b.uh.ari.2.0.1.8@gmail.com"">muhamm.a.du.b.uh.ari.2.0.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mmadu.bu.ha.r.i.20.1.8@gmail.com"">m.u.h.a.mmadu.bu.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ham.m.adu.b.u.har.i.2.018@gmail.com"">mu.ham.m.adu.b.u.har.i.2.018@gmail.com</a>
<a href=""mailto:muh.am.m.a.du.buh.a.ri.2.018@gmail.com"">muh.am.m.a.du.buh.a.ri.2.018@gmail.com</a>
<a href=""mailto:mu.h.am.m.ad.ub.uha.ri.201.8@gmail.com"">mu.h.am.m.ad.ub.uha.ri.201.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com"">muh.a.m.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.ha.m.ma.d.ubuh.a.ri.201.8@gmail.com"">mu.ha.m.ma.d.ubuh.a.ri.201.8@gmail.com</a>
<a href=""mailto:m.uha.m.madu.b.u.ha.r.i.2.01.8@gmail.com"">m.uha.m.madu.b.u.ha.r.i.2.01.8@gmail.com</a>
<a href=""mailto:m.u.h.amm.adub.uh.ari2.0.1.8@gmail.com"">m.u.h.amm.adub.uh.ari2.0.1.8@gmail.com</a>
<a href=""mailto:muhamma.d.u.b.uh.a.r.i.2.0.1.8@gmail.com"">muhamma.d.u.b.uh.a.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:m.uh.a.mm.a.dubu.har.i2.018@gmail.com"">m.uh.a.mm.a.dubu.har.i2.018@gmail.com</a>
<a href=""mailto:muha.mmadub.u.ha.ri2.0.18@gmail.com"">muha.mmadub.u.ha.ri2.0.18@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.u.buh.a.r.i.2.0.1.8@gmail.com"">m.u.ha.mma.d.u.buh.a.r.i.2.0.1.8@gmail.com</a>
<a href=""mailto:muham.ma.du.bu.ha.ri.2.0.1.8@gmail.com"">muham.ma.du.bu.ha.ri.2.0.1.8@gmail.com</a>
<a href=""mailto:muh.am.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com"">muh.am.m.a.d.u.bu.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.am.m.adu.b.u.h.a.r.i2.0.18@gmail.com"">mu.h.am.m.adu.b.u.h.a.r.i2.0.18@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.a.du.bu.hari2.0.18@gmail.com"">mu.h.a.m.m.a.du.bu.hari2.0.18@gmail.com</a>
<a href=""mailto:m.u.hamm.ad.u.b.u.h.a.r.i.20.1.8@gmail.com"">m.u.hamm.ad.u.b.u.h.a.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ubuh.ari20.1.8@gmail.com"">mu.ha.m.m.a.d.ubuh.ari20.1.8@gmail.com</a>
<a href=""mailto:muha.m.madu.b.u.ha.ri.2.01.8@gmail.com"">muha.m.madu.b.u.ha.ri.2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.ma.d.ub.uh.ar.i.2.018@gmail.com"">mu.h.a.m.ma.d.ub.uh.ar.i.2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mma.d.ub.u.har.i.2018@gmail.com"">mu.h.a.mma.d.ub.u.har.i.2018@gmail.com</a>
<a href=""mailto:mu.hamm.a.d.ub.u.hari2.01.8@gmail.com"">mu.hamm.a.d.ub.u.hari2.01.8@gmail.com</a>
<a href=""mailto:mu.h.a.m.m.ad.u.b.uh.a.ri2018@gmail.com"">mu.h.a.m.m.ad.u.b.uh.a.ri2018@gmail.com</a>
<a href=""mailto:muh.amm.a.du.b.uha.r.i.20.1.8@gmail.com"">muh.amm.a.du.b.uha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muh.a.mm.a.du.bu.har.i2.0.1.8@gmail.com"">muh.a.mm.a.du.bu.har.i2.0.1.8@gmail.com</a>
<a href=""mailto:m.uh.am.ma.d.u.bu.har.i.201.8@gmail.com"">m.uh.am.ma.d.u.bu.har.i.201.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.adub.uhar.i.2.0.18@gmail.com"">m.u.h.am.m.adub.uhar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.d.u.buhari2.0.18@gmail.com"">m.uh.a.m.m.a.d.u.buhari2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.a.m.madub.u.ha.r.i.20.1.8@gmail.com"">m.u.h.a.m.madub.u.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.dub.uh.ar.i.2.0.18@gmail.com"">mu.h.a.mm.a.dub.uh.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:muham.mad.u.bu.hari.2.018@gmail.com"">muham.mad.u.bu.hari.2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.ub.u.h.ar.i.2018@gmail.com"">mu.h.a.mmad.ub.u.h.ar.i.2018@gmail.com</a>
<a href=""mailto:mu.hamma.d.u.b.uha.r.i.20.1.8@gmail.com"">mu.hamma.d.u.b.uha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:m.uh.am.m.ad.u.b.u.h.a.ri20.1.8@gmail.com"">m.uh.am.m.ad.u.b.u.h.a.ri20.1.8@gmail.com</a>
<a href=""mailto:m.u.hamm.ad.u.b.uh.a.ri2.0.1.8@gmail.com"">m.u.hamm.ad.u.b.uh.a.ri2.0.1.8@gmail.com</a>
<a href=""mailto:m.uhamm.adub.u.h.a.r.i.2.01.8@gmail.com"">m.uhamm.adub.u.h.a.r.i.2.01.8@gmail.com</a>
<a href=""mailto:m.u.h.am.madu.b.uha.ri2.01.8@gmail.com"">m.u.h.am.madu.b.uha.ri2.01.8@gmail.com</a>
<a href=""mailto:m.uh.a.m.ma.d.ubu.ha.ri201.8@gmail.com"">m.uh.a.m.ma.d.ubu.ha.ri201.8@gmail.com</a>
<a href=""mailto:mu.h.am.m.a.d.u.bu.h.ar.i201.8@gmail.com"">mu.h.am.m.a.d.u.bu.h.ar.i201.8@gmail.com</a>
<a href=""mailto:muha.mmadu.buhar.i201.8@gmail.com"">muha.mmadu.buhar.i201.8@gmail.com</a>
<a href=""mailto:muh.a.mm.ad.u.b.uhar.i2.018@gmail.com"">muh.a.mm.ad.u.b.uhar.i2.018@gmail.com</a>
<a href=""mailto:m.u.ha.mma.d.ubuh.ari.2018@gmail.com"">m.u.ha.mma.d.ubuh.ari.2018@gmail.com</a>
<a href=""mailto:m.uh.amma.d.u.buhar.i.2.01.8@gmail.com"">m.uh.amma.d.u.buhar.i.2.01.8@gmail.com</a>
<a href=""mailto:m.uh.am.ma.du.bu.ha.r.i.2.0.18@gmail.com"">m.uh.am.ma.du.bu.ha.r.i.2.0.18@gmail.com</a>
<a href=""mailto:m.uhamma.d.u.b.u.h.ar.i20.18@gmail.com"">m.uhamma.d.u.b.u.h.ar.i20.18@gmail.com</a>
<a href=""mailto:muh.am.ma.d.u.bu.har.i.20.1.8@gmail.com"">muh.am.ma.d.u.bu.har.i.20.1.8@gmail.com</a>
<a href=""mailto:mu.h.a.mmad.ubuh.ar.i.2.0.18@gmail.com"">mu.h.a.mmad.ubuh.ar.i.2.0.18@gmail.com</a>
<a href=""mailto:m.u.h.ammad.u.bu.har.i20.1.8@gmail.com"">m.u.h.ammad.u.bu.har.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.am.m.adu.buha.ri.2.0.1.8@gmail.com"">m.u.h.am.m.adu.buha.ri.2.0.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.mad.ubuh.a.ri.2.0.18@gmail.com"">muh.a.m.mad.ubuh.a.ri.2.0.18@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.du.bu.h.a.r.i.201.8@gmail.com"">m.uh.a.m.m.a.du.bu.h.a.r.i.201.8@gmail.com</a>
<a href=""mailto:muham.m.ad.u.buha.r.i.201.8@gmail.com"">muham.m.ad.u.buha.r.i.201.8@gmail.com</a>
<a href=""mailto:muh.a.mmadu.b.uh.ar.i.201.8@gmail.com"">muh.a.mmadu.b.uh.ar.i.201.8@gmail.com</a>
<a href=""mailto:muha.mma.d.ub.uh.ar.i20.1.8@gmail.com"">muha.mma.d.ub.uh.ar.i20.1.8@gmail.com</a>
<a href=""mailto:m.u.h.a.mma.d.ub.u.h.a.ri201.8@gmail.com"">m.u.h.a.mma.d.ub.u.h.a.ri201.8@gmail.com</a>
<a href=""mailto:muhamm.a.du.buha.r.i.2018@gmail.com"">muhamm.a.du.buha.r.i.2018@gmail.com</a>
<a href=""mailto:m.uh.a.m.m.a.dubu.ha.r.i.20.1.8@gmail.com"">m.uh.a.m.m.a.dubu.ha.r.i.20.1.8@gmail.com</a>
<a href=""mailto:muham.m.ad.u.bu.ha.r.i2.018@gmail.com"">muham.m.ad.u.bu.ha.r.i2.018@gmail.com</a>
<a href=""mailto:mu.h.a.mm.a.d.u.b.uh.ari201.8@gmail.com"">mu.h.a.mm.a.d.u.b.uh.ari201.8@gmail.com</a>
<a href=""mailto:mu.ha.m.m.a.d.ubu.h.a.r.i20.1.8@gmail.com"">mu.ha.m.m.a.d.ubu.h.a.r.i20.1.8@gmail.com</a>
<a href=""mailto:muh.a.m.m.a.dub.uhari2018@gmail.com"">muh.a.m.m.a.dub.uhari2018@gmail.com</a>
<a href=""mailto:mu.h.a.mmadub.u.ha.ri2.01.8@gmail.com"">mu.h.a.mmadub.u.ha.ri2.01.8@gmail.com</a>
<a href=""mailto:mohammadubuhari000@msn.com"">mohammadubuhari000@msn.com</a>
<a href=""mailto:inf.imfoffice001@yahoo.com"">inf.imfoffice001@yahoo.com</a>
<a href=""mailto:infcbnpaymaster@emailn.de"">infcbnpaymaster@emailn.de</a>"
e4hkXDqv,C#_3_subarray_duplicates_numbers,Legiomax,C#,Saturday 27th of January 2024 08:58:13 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeRandom = 5;
            int highRangeRandom = 10;
            int duplicatesNum = lowRangeRandom;
            int localCountDuplicates = 1;
            int maxCountDuplicates = 1;

            int[] numbers = new int[30];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
            }

            Console.WriteLine(""Исходная матрица.\n"");

            for (int i = 0; i < numbers.Length; i++)
            {
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                if (numbers[i] != numbers[i+1])
                {
                    localCountDuplicates = 1;
                }
                else
                {
                    localCountDuplicates += 1;
                    if (localCountDuplicates > maxCountDuplicates)
                    {
                        duplicatesNum = numbers[i];
                        maxCountDuplicates += 1;
                    }
                }
            }

            Console.WriteLine($""\nСамая длинная строка повторов:\n{duplicatesNum}\n"" +
                $""Число повторов:\n{maxCountDuplicates}"");
            Console.ReadKey();
        }
    }
}
"
j0z9Hb7E,Diesel,Molipow,Lua,Saturday 27th of January 2024 08:57:48 AM CDT,"local event = require(""event"")
local component = require(""component"")
local term = require('term')

local gpu = component.gpu

if(component.isAvailable(""ie_diesel_generator"")) then
	dies = component.ie_diesel_generator
else
	print(""[ERROR] Diesel generator not connected!"")
	os.exit()
end

if(component.isAvailable(""ie_hv_capacitor"")) then
	hv = component.ie_hv_capacitor
else
	print(""[ERROR] HV Capacitor not connected!"")
	os.exit()
end

oldw, oldh = gpu.getResolution()

gpu.setResolution(80, 25)

w, h = gpu.getResolution()

gpu.fill(1, 1, w, h, "" "")

dies.enableComputerControl(true)

auto = true
genRunning = true

startTreshold = 10000

--function startup()

--	showPanel()
	
--end

function showPanel(x, y, a, b, color)
	gpu.setForeground(color)
	gpu.set(x, y, '┌'..string.rep('─', a-2)..'┐')
	gpu.set(x, y+1, string.rep('│', b-2), true)
	gpu.set(a, y+1, string.rep('│', b-2), true)
	gpu.set(x, b, '└'..string.rep('─', a-2)..'┘')
end

function render()
	showPanel(1, 1, w, h, 0x00FFFF)
	gpu.setForeground(0x00FFFF)
	gpu.set(2, 2, ""HV Capacitor Status"")
	stored = hv.getEnergyStored()
	ratio = stored/hv.getMaxEnergyStored()
	if(ratio < 1/3) then
		gpu.setForeground(0xFF0000)
	elseif (ratio > 2/3) then
		gpu.setForeground(0x00FF00)
	else
		gpu.setForeground(0xFFFF00)
	end
	
	gpu.set(2, 3, string.rep('|', math.floor(15 * ratio)) .. string.rep(' ', 15 - math.floor(15 * ratio)))
	
	gpu.set(2, 4, hv.getEnergyStored() .. '/' .. hv.getMaxEnergyStored())
	
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, 2, ""Diesel Generator Status"")
	if(genRunning) then
		gpu.setForeground(0x00FF00)
		gpu.set(w/2, 3, ""RUNNING"")
	else
		gpu.setForeground(0xFF0000)
		gpu.set(w/2, 3, ""STOPPED"")
	end
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, h-3, ""Mode"")
	if(auto) then
		gpu.setForeground(0x00FF00)
		gpu.set(w/2, h-2, ""AUTO"")
	else
		gpu.setForeground(0xFF0000)
		gpu.set(w/2, h-2, ""MANUAL"")
	end
	
	gpu.setForeground(0x00FFFF)
	
	gpu.set(w/2, 4, ""Diesel fuel status"")
	gpu.set(w/2, 5, dies.getTankInfo().amount .. '/' .. dies.getTankInfo().capacity)
	gpu.setForeground(0x662400)
	gpu.set(w/2, 6, string.rep('|', math.floor(15 * dies.getTankInfo().amount/ dies.getTankInfo().capacity)) .. string.rep(' ', 15 - math.floor(15 * dies.getTankInfo().amount/ dies.getTankInfo().capacity)))
	
	gpu.setForeground(0x00FFFF)
	gpu.set(w/2, 7, ""Start generator treshold"")
	gpu.set(w/2, 8, tostring(startTreshold))
	
	if(auto) then
		showPanel(2, h-5, 8, 3, 0xFF0000)
		gpu.setForeground(0x000000)
		gpu.set(3, h-3, ""TOGGLE MODE"")
	end
end

function quit()
	dies.enableComputerControl(false)
	gpu.fill(1, 1, w, h, "" "")
	gpu.setResolution(oldw, oldh)
	term.setCursor(1, 1)
end

repeat
	if(auto) then
		if(hv.getEnergyStored() < startTreshold) then
			dies.setEnabled(true)
			genRunning = true
		end
		if(hv.getEnergyStored() == hv.getMaxEnergyStored()) then
			dies.setEnabled(false)
			genRunning = false
		end
	end
	render()
	local name, arg, x, y = event.pull(1/100)
	if(name == ""touch"") then
		gpu.set(2, h-2, ""Clicked at "" .. x .. "" "" .. y)
	end
until name == ""interrupted""

quit()


os.exit()"
FmjpTHsN,pals,desislava_shunina,C++,Saturday 27th of January 2024 08:53:24 AM CDT,"#include <iostream>
using namespace std;

int reverseNum(int num)
{
    int res = 0;
    while (num)
    {
        res *= 10;
        res += num % 10;
        num /= 10;
    }

    return res;
}

int removeTheFirstDigit(int num)
{
    int reversed = reverseNum(num);
    reversed /= 10;
    reversed = reverseNum(reversed);

    return reversed;
}

bool isPalindrome(int num)
{
    return num == reverseNum(num);
}

bool couldBePalindrome(int num)
{
    if (num < 10)
        return false;

    if (isPalindrome(num))
        return true;

    return (couldBePalindrome(removeTheFirstDigit(num)) || couldBePalindrome(num / 10));
}

int main()
{
    cout << couldBePalindrome(1234355) << endl;
    cout << couldBePalindrome(1234) << endl;
    return 0;
}"
JJWG1ZEy,Antihero,psychoticodes,HTML,Saturday 27th of January 2024 08:46:35 AM CDT,"<link href=""https://dl.dropboxusercontent.com/s/kent8bovzps4zd0/antihero.css?dl=0"" rel=""stylesheet""><center><div id=""anth"" style=""background:url('https://via.placeholder.com/90x90')center/cover; --bd1:#000;--bd2:#ccc;""><a href=""https://is.gd/gasper""><div id=""anth"" class=""aher"" style=""background:url('https://via.placeholder.com/90x90')center/cover;margin:-4px;""></div></a></div></center>"
6tzncFXm,News Jan27 24,Newscaster_Ned,Email,Saturday 27th of January 2024 08:44:42 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

I‎ ‎w‎i‎s‎h‎ ‎I‎ ‎w‎a‎s‎n‎'‎t‎ ‎p‎i‎x‎i‎e‎!‎ ‎H‎o‎o‎r‎a‎y‎!‎ ‎H‎o‎o‎r‎a‎y‎!‎

T‎h‎e‎ ‎P‎l‎o‎t‎ ‎t‎o‎ ‎D‎e‎f‎e‎a‎t‎ ‎M‎A‎G‎A‎!‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎M‎e‎e‎t‎ ‎t‎h‎e‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎L‎e‎f‎t‎ ‎N‎e‎t‎w‎o‎r‎k‎ ‎t‎h‎a‎t‎ ‎H‎i‎j‎a‎c‎k‎e‎d‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎i‎n‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎S‎t‎o‎p‎ ‎T‎r‎u‎m‎p‎ ‎A‎t‎ ‎A‎l‎l‎ ‎C‎o‎s‎t‎s‎

B‎i‎d‎e‎n‎ ‎U‎s‎i‎n‎g‎ ‎O‎r‎g‎’‎s‎ ‎T‎a‎l‎k‎i‎n‎g‎ ‎P‎o‎i‎n‎t‎s‎ ‎V‎e‎r‎b‎a‎t‎i‎m‎

O‎r‎i‎g‎i‎n‎s‎ ‎o‎f‎ ‎J‎A‎C‎K‎ ‎S‎M‎I‎T‎H‎ ‎C‎H‎A‎R‎G‎E‎S‎,‎ ‎E‎ ‎J‎E‎A‎N‎ ‎C‎A‎R‎R‎O‎L‎L‎ ‎a‎n‎d‎ ‎L‎E‎T‎I‎T‎I‎A‎ ‎J‎A‎M‎E‎S‎ ‎C‎A‎S‎E‎s‎

*‎S‎o‎r‎o‎s‎ ‎B‎e‎h‎i‎n‎d‎ ‎I‎t‎ ‎a‎l‎l‎*‎
U‎S‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎l‎e‎a‎v‎e‎s‎ ‎a‎f‎t‎e‎r‎ ‎s‎p‎e‎a‎k‎i‎n‎g‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎M‎a‎k‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎G‎r‎e‎a‎t‎ ‎A‎g‎a‎i‎n‎ ‎r‎a‎l‎l‎y‎ ‎a‎t‎ ‎F‎a‎y‎e‎t‎t‎e‎v‎i‎l‎l‎e‎ ‎R‎e‎g‎i‎o‎n‎a‎l‎ ‎A‎i‎r‎p‎o‎r‎t‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎2‎,‎ ‎2‎0‎2‎0‎,‎ ‎i‎n‎ ‎F‎a‎y‎e‎t‎t‎e‎v‎i‎l‎l‎e‎,‎ ‎N‎o‎r‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎.‎ ‎-‎ ‎T‎h‎e‎ ‎U‎S‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎e‎n‎t‎e‎r‎s‎ ‎i‎t‎s‎ ‎f‎i‎n‎a‎l‎ ‎d‎a‎y‎ ‎M‎o‎n‎d‎a‎y‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎a‎s‎t‎-‎m‎i‎n‎u‎t‎e‎ ‎s‎c‎r‎a‎m‎b‎l‎e‎ ‎f‎o‎r‎ ‎v‎o‎t‎e‎s‎ ‎b‎y‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎,‎ ‎d‎r‎a‎w‎i‎n‎g‎ ‎t‎o‎ ‎a‎ ‎…‎
A‎ ‎w‎e‎l‎l‎-‎c‎o‎o‎r‎d‎i‎n‎a‎t‎e‎d‎,‎ ‎w‎e‎l‎l‎-‎f‎u‎n‎d‎e‎d‎,‎ ‎a‎n‎d‎ ‎h‎i‎g‎h‎-‎p‎o‎w‎e‎r‎e‎d‎ ‎n‎e‎t‎w‎o‎r‎k‎ ‎o‎f‎ ‎l‎e‎f‎t‎i‎s‎t‎ ‎o‎r‎g‎a‎n‎i‎z‎a‎t‎i‎o‎n‎s‎ ‎l‎e‎d‎ ‎b‎y‎ ‎a‎ ‎g‎r‎o‎u‎p‎ ‎w‎h‎o‎s‎e‎ ‎e‎f‎f‎o‎r‎t‎s‎ ‎2‎0‎1‎6‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎n‎o‎m‎i‎n‎e‎e‎ ‎H‎i‎l‎l‎a‎r‎y‎ ‎R‎o‎d‎h‎a‎m‎ ‎C‎l‎i‎n‎t‎o‎n‎ ‎p‎r‎o‎m‎o‎t‎e‎d‎ ‎i‎s‎ ‎b‎e‎h‎i‎n‎d‎ ‎t‎h‎e‎ ‎p‎u‎s‎h‎ ‎t‎o‎ ‎r‎e‎m‎o‎v‎e‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎,‎ ‎t‎h‎e‎ ‎2‎0‎2‎4‎ ‎f‎r‎o‎n‎t‎r‎u‎n‎n‎e‎r‎ ‎f‎o‎r‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎f‎r‎o‎m‎ ‎a‎n‎y‎ ‎p‎a‎r‎t‎y‎,‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎b‎a‎l‎l‎o‎t‎t‎.‎

A‎u‎t‎h‎o‎r‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎a‎r‎r‎i‎v‎e‎s‎ ‎t‎o‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎c‎o‎u‎r‎t‎ ‎i‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎,‎ ‎U‎S‎,‎ ‎o‎n‎ ‎T‎u‎e‎s‎d‎a‎y‎,‎ ‎A‎p‎r‎i‎l‎ ‎2‎5‎,‎ ‎2‎0‎2‎3‎.‎ ‎T‎h‎e‎ ‎t‎r‎i‎a‎l‎ ‎o‎f‎ ‎a‎ ‎c‎i‎v‎i‎l‎ ‎s‎u‎i‎t‎ ‎b‎y‎ ‎C‎a‎r‎r‎o‎l‎l‎,‎ ‎w‎h‎o‎ ‎c‎l‎a‎i‎m‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎r‎a‎p‎e‎d‎ ‎h‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎9‎9‎0‎s‎,‎ ‎i‎s‎ ‎s‎e‎t‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎ ‎t‎o‎d‎a‎y‎.‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎:‎ ‎S‎t‎e‎p‎h‎a‎n‎i‎e‎ ‎K‎e‎i‎t‎h‎/‎B‎l‎o‎o‎m‎b‎e‎r‎g‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎
J‎u‎r‎y‎ ‎O‎r‎d‎e‎r‎s‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎P‎a‎y‎ ‎$‎8‎3‎.‎3‎ ‎M‎i‎l‎l‎i‎o‎n‎ ‎i‎n‎ ‎E‎.‎ ‎J‎e‎a‎n‎ ‎C‎a‎r‎r‎o‎l‎l‎ ‎D‎e‎f‎a‎m‎a‎t‎i‎o‎n‎ ‎C‎a‎s‎e‎
1‎4‎,‎2‎5‎8‎
P‎e‎t‎e‎r‎ ‎N‎a‎v‎a‎r‎r‎o‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎t‎r‎a‎d‎e‎ ‎a‎d‎v‎i‎s‎e‎r‎,‎ ‎s‎p‎e‎a‎k‎s‎ ‎t‎o‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎a‎f‎t‎e‎r‎ ‎l‎e‎a‎v‎i‎n‎g‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎c‎o‎u‎r‎t‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎,‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎,‎ ‎J‎u‎n‎e‎ ‎3‎,‎ ‎2‎0‎2‎2‎.‎ ‎N‎a‎v‎a‎r‎r‎o‎ ‎w‎a‎s‎ ‎i‎n‎d‎i‎c‎t‎e‎d‎ ‎f‎o‎r‎ ‎d‎e‎f‎y‎i‎n‎g‎ ‎a‎ ‎s‎u‎b‎p‎o‎e‎n‎a‎ ‎b‎y‎ ‎t‎h‎e‎ ‎c‎o‎n‎g‎r‎e‎s‎s‎i‎o‎n‎a‎l‎ ‎c‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎i‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎r‎i‎o‎t‎,‎ ‎g‎i‎v‎i‎n‎g‎ ‎t‎h‎e‎ ‎p‎a‎n‎e‎l‎ ‎f‎r‎e‎s‎h‎ ‎a‎m‎m‎u‎n‎i‎t‎i‎o‎n‎ ‎a‎s‎ ‎i‎t‎ ‎p‎r‎o‎b‎e‎s‎ ‎t‎h‎e‎ ‎p‎o‎s‎t‎-‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎a‎c‎t‎s‎ ‎o‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎a‎l‎l‎i‎e‎s‎.‎
F‎o‎r‎m‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎v‎i‎s‎o‎r‎ ‎N‎a‎v‎a‎r‎r‎o‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎d‎ ‎t‎o‎ ‎F‎o‎u‎r‎ ‎M‎o‎n‎t‎h‎s‎ ‎i‎n‎ ‎P‎r‎i‎s‎o‎n‎ ‎f‎o‎r‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎
4‎,‎3‎7‎6‎
W‎A‎S‎H‎I‎N‎G‎T‎O‎N‎,‎ ‎D‎C‎ ‎-‎ ‎J‎A‎N‎U‎A‎R‎Y‎ ‎2‎3‎:‎ ‎S‎e‎n‎a‎t‎e‎ ‎M‎i‎n‎o‎r‎i‎t‎y‎ ‎L‎e‎a‎d‎e‎r‎ ‎M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎ ‎(‎R‎-‎K‎Y‎)‎ ‎s‎p‎e‎a‎k‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎ ‎p‎r‎e‎s‎s‎ ‎c‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎t‎h‎e‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎w‎e‎e‎k‎l‎y‎ ‎p‎o‎l‎i‎c‎y‎ ‎l‎u‎n‎c‎h‎e‎o‎n‎ ‎o‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎2‎3‎,‎ ‎2‎0‎2‎4‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎.‎ ‎N‎e‎g‎o‎t‎i‎a‎t‎i‎o‎n‎s‎ ‎o‎v‎e‎r‎ ‎b‎o‎r‎d‎e‎r‎ ‎s‎e‎c‎u‎r‎i‎t‎y‎,‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎a‎i‎d‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎b‎u‎d‎g‎e‎t‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎h‎i‎s‎ ‎w‎e‎e‎k‎ ‎o‎n‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎S‎a‎m‎u‎e‎l‎ ‎C‎o‎r‎u‎m‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎ ‎*‎*‎*‎ ‎L‎o‎c‎a‎l‎ ‎C‎a‎p‎t‎i‎o‎n‎ ‎*‎*‎*‎ ‎M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎
M‎i‎t‎c‎h‎ ‎M‎c‎C‎o‎n‎n‎e‎l‎l‎ ‎R‎e‎t‎r‎e‎a‎t‎s‎ ‎f‎r‎o‎m‎ ‎B‎o‎r‎d‎e‎r‎ ‎G‎i‎v‎e‎a‎w‎a‎y‎ ‎B‎i‎l‎l‎
4‎,‎2‎6‎9‎
F‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎e‎l‎l‎s‎ ‎g‎o‎v‎e‎r‎n‎o‎r‎s‎ ‎t‎o‎ ‎u‎s‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎G‎u‎a‎r‎d‎ ‎t‎o‎ ‎r‎e‎m‎o‎v‎e‎ ‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎b‎o‎r‎d‎e‎r‎.‎ ‎(‎A‎P‎ ‎F‎i‎l‎e‎ ‎P‎h‎o‎t‎o‎s‎)‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎S‎t‎a‎t‎e‎s‎:‎ ‎U‎s‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎G‎u‎a‎r‎d‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎A‎c‎r‎o‎s‎s‎ ‎B‎o‎r‎d‎e‎r‎
7‎,‎9‎3‎5‎
N‎H‎ ‎G‎o‎v‎.‎ ‎C‎h‎r‎i‎s‎ ‎S‎u‎n‎u‎n‎u‎ ‎P‎u‎s‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎ ‎f‎o‎r‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎i‎n‎ ‎S‎C‎
N‎H‎ ‎G‎o‎v‎.‎ ‎C‎h‎r‎i‎s‎ ‎S‎u‎n‎u‎n‎u‎ ‎P‎u‎s‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎ ‎f‎o‎r‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎i‎n‎ ‎S‎C‎
1‎,‎0‎4‎9‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎‘‎D‎e‎f‎e‎a‎t‎ ‎M‎A‎G‎A‎’‎:‎ ‎M‎e‎e‎t‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎ ‎H‎e‎l‎l‎b‎e‎n‎t‎ ‎o‎n‎ ‎S‎t‎o‎p‎p‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎‘‎D‎e‎f‎e‎a‎t‎ ‎M‎A‎G‎A‎’‎:‎ ‎M‎e‎e‎t‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎ ‎H‎e‎l‎l‎b‎e‎n‎t‎ ‎o‎n‎ ‎S‎t‎o‎p‎p‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎
5‎,‎7‎6‎7‎
V‎I‎D‎E‎O‎:‎ ‎C‎A‎ ‎I‎n‎t‎r‎o‎d‎u‎c‎e‎s‎ ‎B‎i‎l‎l‎ ‎R‎e‎q‎u‎i‎r‎i‎n‎g‎ ‎‘‎I‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎ ‎S‎p‎e‎e‎d‎ ‎L‎i‎m‎i‎t‎e‎r‎s‎'‎ ‎i‎n‎ ‎C‎a‎r‎s‎
V‎I‎D‎E‎O‎:‎ ‎C‎A‎ ‎I‎n‎t‎r‎o‎d‎u‎c‎e‎s‎ ‎B‎i‎l‎l‎ ‎R‎e‎q‎u‎i‎r‎i‎n‎g‎ ‎‘‎I‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎ ‎S‎p‎e‎e‎d‎ ‎L‎i‎m‎i‎t‎e‎r‎s‎'‎ ‎i‎n‎ ‎C‎a‎r‎s‎
8‎2‎7‎
L‎e‎f‎t‎-‎w‎i‎n‎g‎ ‎M‎e‎d‎i‎a‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎M‎a‎r‎c‎h‎e‎s‎ ‎O‎n‎ ‎-‎ ‎V‎i‎c‎e‎,‎ ‎B‎u‎z‎z‎F‎e‎e‎d‎ ‎S‎e‎l‎l‎ ‎O‎f‎f‎ ‎P‎a‎r‎t‎s‎
L‎e‎f‎t‎-‎w‎i‎n‎g‎ ‎M‎e‎d‎i‎a‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎ ‎M‎a‎r‎c‎h‎e‎s‎ ‎O‎n‎ ‎-‎ ‎V‎i‎c‎e‎,‎ ‎B‎u‎z‎z‎F‎e‎e‎d‎ ‎S‎e‎l‎l‎ ‎O‎f‎f‎ ‎P‎a‎r‎t‎s‎
2‎,‎8‎4‎7‎
A‎b‎b‎o‎t‎t‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎K‎e‎e‎p‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎B‎a‎r‎r‎i‎e‎r‎ ‎i‎f‎ ‎B‎i‎d‎e‎n‎ ‎F‎e‎d‎e‎r‎a‎l‎i‎z‎e‎s‎ ‎T‎X‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎G‎u‎a‎r‎d‎
A‎b‎b‎o‎t‎t‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎K‎e‎e‎p‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎B‎a‎r‎r‎i‎e‎r‎ ‎i‎f‎ ‎B‎i‎d‎e‎n‎ ‎F‎e‎d‎e‎r‎a‎l‎i‎z‎e‎s‎ ‎T‎X‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎G‎u‎a‎r‎d‎
3‎1‎3‎
A‎l‎y‎s‎s‎a‎ ‎M‎i‎l‎a‎n‎o‎ ‎R‎e‎a‎c‎t‎s‎ ‎t‎o‎ ‎B‎a‎c‎k‎l‎a‎s‎h‎ ‎f‎o‎r‎ ‎R‎e‎q‎u‎e‎s‎t‎i‎n‎g‎ ‎D‎o‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎H‎e‎r‎ ‎S‎o‎n‎’‎s‎ ‎T‎e‎a‎m‎
A‎l‎y‎s‎s‎a‎ ‎M‎i‎l‎a‎n‎o‎ ‎R‎e‎a‎c‎t‎s‎ ‎t‎o‎ ‎B‎a‎c‎k‎l‎a‎s‎h‎ ‎f‎o‎r‎ ‎R‎e‎q‎u‎e‎s‎t‎i‎n‎g‎ ‎D‎o‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎H‎e‎r‎ ‎S‎o‎n‎’‎s‎ ‎T‎e‎a‎m‎

N‎e‎g‎r‎o‎ ‎C‎o‎u‎p‎l‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎C‎o‎u‎n‎t‎y‎ ‎A‎f‎t‎e‎r‎ ‎T‎h‎e‎i‎r‎ ‎P‎i‎t‎b‎u‎l‎l‎ ‎W‎a‎s‎ ‎F‎o‎u‎n‎d‎ ‎S‎t‎a‎r‎v‎e‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

A‎t‎ ‎l‎e‎a‎s‎t‎ ‎f‎e‎e‎d‎ ‎y‎o‎u‎r‎ ‎d‎a‎m‎n‎ ‎d‎o‎g‎ ‎e‎v‎e‎r‎y‎ ‎o‎n‎c‎e‎ ‎i‎n‎ ‎a‎ ‎w‎h‎i‎l‎e‎,‎ ‎n‎e‎g‎r‎o‎e‎s‎!‎


R‎e‎g‎i‎s‎t‎e‎r‎e‎d‎ ‎S‎i‎m‎i‎a‎n‎ ‎S‎e‎x‎ ‎O‎f‎f‎e‎n‎d‎e‎r‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎s‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎H‎e‎r‎ ‎S‎m‎a‎l‎l‎ ‎C‎h‎i‎l‎d‎.‎


C‎o‎p‎s‎ ‎F‎i‎n‎a‎l‎l‎y‎ ‎A‎r‎r‎e‎s‎t‎ ‎B‎a‎b‎o‎o‎n‎ ‎B‎a‎n‎d‎i‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎H‎o‎u‎r‎-‎L‎o‎n‎g‎ ‎C‎a‎r‎ ‎C‎h‎a‎s‎e‎ ‎T‎h‎a‎t‎ ‎E‎n‎d‎e‎d‎ ‎i‎n‎ ‎E‎a‎s‎t‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎.‎


S‎h‎e‎b‎o‎o‎n‎ ‎A‎i‎d‎e‎ ‎R‎a‎p‎e‎s‎ ‎1‎4‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎a‎t‎ ‎F‎a‎y‎e‎t‎t‎e‎v‎i‎l‎l‎e‎ ‎E‎l‎e‎m‎e‎n‎t‎a‎r‎y‎ ‎S‎c‎h‎o‎o‎l‎.‎


M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎M‎o‎w‎s‎ ‎D‎o‎w‎n‎ ‎5‎ ‎P‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎F‎r‎o‎n‎t‎ ‎o‎f‎ ‎M‎i‎s‎s‎i‎s‎s‎a‎u‎g‎a‎ ‎B‎a‎r‎.‎


B‎e‎a‎n‎e‎r‎ ‎D‎r‎a‎g‎s‎ ‎W‎o‎m‎a‎n‎ ‎b‎y‎ ‎H‎e‎r‎ ‎H‎a‎i‎r‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎H‎e‎r‎ ‎a‎t‎ ‎B‎r‎o‎o‎k‎l‎y‎n‎ ‎G‎a‎s‎ ‎S‎t‎a‎t‎i‎o‎n‎.‎


3‎ ‎S‎p‎i‎c‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎T‎u‎r‎t‎l‎e‎s‎ ‎a‎n‎d‎ ‎B‎i‎r‎d‎s‎ ‎f‎r‎o‎m‎ ‎B‎r‎o‎n‎x‎ ‎Z‎o‎o‎.‎


P‎a‎k‎i‎ ‎P‎u‎m‎m‎e‎l‎s‎ ‎M‎T‎A‎ ‎D‎r‎i‎v‎e‎r‎ ‎a‎t‎ ‎W‎a‎t‎e‎r‎s‎i‎d‎e‎ ‎P‎l‎a‎z‎a‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎e‎a‎a‎a‎h‎a‎h‎a‎a‎h‎u‎a‎h‎u‎r‎h‎u‎r‎u‎r‎h‎u‎r‎r‎r‎r‎r‎r‎r‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎7‎°‎
2‎%‎
N‎N‎W‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎ ‎|‎ ‎D‎a‎y‎
6‎1‎°‎
2‎%‎
N‎N‎W‎
1‎6‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎6‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
5‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎0‎2‎ ‎p‎m‎
S‎a‎t‎ ‎2‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎7‎°‎
7‎%‎
N‎N‎W‎
5‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎3‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎5‎8‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎4‎7‎ ‎a‎m‎
S‎u‎n‎ ‎2‎8‎
S‎u‎n‎n‎y‎
6‎4‎°‎
/‎3‎6‎°‎
7‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎7‎°‎
/‎4‎0‎°‎
6‎%‎
S‎W‎ ‎6‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎1‎°‎
5‎%‎
W‎S‎W‎ ‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎6‎°‎
7‎%‎
S‎E‎ ‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎5‎2‎°‎
7‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎2‎
C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎7‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎4‎8‎°‎
5‎8‎%‎
W‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎4‎
S‎u‎n‎n‎y‎
6‎3‎°‎
/‎4‎2‎°‎
9‎%‎
W‎N‎W‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
5‎8‎°‎
/‎3‎9‎°‎
2‎%‎
N‎N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎6‎°‎
/‎4‎1‎°‎
2‎3‎%‎
N‎N‎E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎4‎7‎°‎
2‎0‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎8‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎4‎9‎°‎
3‎7‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎9‎
S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎8‎°‎
3‎8‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎0‎
S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎7‎°‎
4‎3‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎.‎ ‎👨🏿‍🔬

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎i‎b‎l‎e‎
T‎h‎e‎ ‎B‎i‎b‎l‎e‎ ‎(‎P‎r‎o‎n‎o‎u‎n‎c‎e‎d‎:‎ ‎""‎B‎u‎l‎l‎-‎s‎h‎i‎t‎""‎)‎ ‎i‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎e‎x‎c‎i‎t‎i‎n‎g‎ ‎p‎i‎e‎c‎e‎ ‎o‎f‎ ‎s‎h‎i‎t‎ ‎s‎i‎n‎c‎e‎ ‎H‎i‎t‎l‎e‎r‎,‎ ‎a‎l‎t‎h‎o‎u‎g‎h‎ ‎f‎a‎r‎ ‎l‎e‎s‎s‎ ‎r‎e‎a‎l‎i‎s‎t‎i‎c‎.‎ ‎I‎f‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎o‎n‎e‎ ‎r‎e‎a‎s‎o‎n‎ ‎t‎o‎ ‎h‎a‎t‎e‎ ‎J‎e‎w‎s‎,‎ ‎i‎t‎'‎s‎ ‎f‎o‎r‎ ‎w‎r‎i‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎(‎a‎n‎d‎ ‎m‎o‎s‎t‎ ‎i‎n‎s‎a‎n‎e‎)‎ ‎h‎a‎l‎f‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎n‎o‎v‎e‎l‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎n‎ ‎e‎x‎t‎r‎e‎m‎e‎l‎y‎ ‎l‎o‎n‎g‎ ‎b‎o‎o‎k‎ ‎f‎i‎l‎l‎e‎d‎ ‎w‎i‎t‎h‎ ‎p‎a‎g‎e‎s‎ ‎a‎n‎d‎ ‎p‎a‎g‎e‎s‎ ‎o‎f‎ ‎b‎o‎r‎i‎n‎g‎ ‎a‎n‎d‎ ‎m‎e‎a‎n‎i‎n‎g‎l‎e‎s‎s‎ ‎t‎e‎x‎t‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎m‎e‎m‎o‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎e‎x‎t‎r‎e‎m‎e‎ ‎f‎a‎n‎b‎o‎y‎s‎ ‎B‎u‎s‎h‎,‎ ‎J‎o‎h‎n‎ ‎M‎a‎c‎A‎r‎t‎h‎u‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎P‎o‎p‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎r‎g‎u‎a‎b‎l‎y‎ ‎t‎h‎e‎ ‎g‎r‎e‎a‎t‎e‎s‎t‎ ‎b‎o‎o‎k‎ ‎e‎v‎e‎r‎ ‎m‎a‎d‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎c‎o‎o‎l‎e‎s‎t‎ ‎s‎t‎o‎r‎y‎ ‎e‎v‎e‎r‎ ‎t‎o‎l‎d‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎L‎o‎r‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎R‎i‎n‎g‎s‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎t‎t‎e‎r‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎w‎r‎i‎t‎t‎e‎n‎ ‎b‎y‎ ‎G‎o‎d‎,‎ ‎o‎s‎t‎e‎n‎s‎i‎b‎l‎y‎ ‎m‎a‎k‎i‎n‎g‎ ‎h‎i‎m‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎,‎ ‎p‎r‎o‎t‎o‎t‎y‎p‎i‎c‎a‎l‎ ‎t‎r‎o‎l‎l‎.‎ ‎S‎a‎d‎l‎y‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎,‎ ‎s‎t‎u‎p‎i‎d‎i‎t‎y‎ ‎h‎a‎s‎ ‎s‎u‎r‎v‎i‎v‎e‎d‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎i‎m‎e‎ ‎a‎n‎d‎ ‎m‎a‎n‎y‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎i‎l‎l‎o‎g‎i‎c‎a‎l‎ ‎s‎h‎i‎t‎ ‎s‎p‎e‎w‎e‎d‎ ‎f‎r‎o‎m‎ ‎p‎a‎g‎e‎ ‎t‎o‎ ‎p‎a‎g‎e‎.‎ ‎A‎s‎ ‎s‎u‎c‎h‎,‎ ‎i‎t‎ ‎m‎a‎y‎ ‎b‎e‎ ‎t‎h‎e‎ ‎s‎i‎n‎g‎l‎e‎ ‎g‎r‎e‎a‎t‎e‎s‎t‎ ‎e‎x‎a‎m‎p‎l‎e‎ ‎o‎f‎ ‎t‎r‎o‎l‎l‎i‎n‎g‎,‎ ‎i‎n‎t‎e‎n‎t‎i‎o‎n‎a‎l‎ ‎o‎r‎ ‎n‎o‎t‎,‎ ‎a‎n‎d‎ ‎p‎e‎r‎h‎a‎p‎s‎ ‎t‎h‎e‎ ‎l‎o‎n‎g‎e‎s‎t‎ ‎e‎d‎i‎t‎ ‎w‎a‎r‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎h‎a‎s‎ ‎e‎v‎e‎r‎ ‎s‎e‎e‎n‎.‎

P‎r‎o‎b‎a‎b‎l‎y‎ ‎t‎h‎e‎ ‎o‎l‎d‎e‎s‎t‎ ‎o‎f‎ ‎o‎l‎d‎ ‎m‎e‎d‎i‎a‎,‎ ‎t‎h‎e‎ ‎B‎i‎b‎l‎e‎ ‎i‎s‎ ‎a‎ ‎s‎p‎r‎a‎w‎l‎i‎n‎g‎ ‎e‎p‎i‎c‎ ‎t‎h‎a‎t‎ ‎s‎p‎a‎n‎s‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎y‎e‎a‎r‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎p‎a‎r‎t‎ ‎c‎r‎e‎a‎t‎i‎o‎n‎ ‎m‎y‎t‎h‎ ‎a‎n‎d‎ ‎p‎a‎r‎t‎ ‎w‎a‎r‎ ‎s‎t‎o‎r‎y‎,‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎r‎o‎m‎a‎n‎c‎e‎,‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎,‎ ‎d‎r‎a‎m‎a‎,‎ ‎c‎o‎m‎e‎d‎y‎,‎ ‎a‎n‎d‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎i‎r‎r‎e‎l‎e‎v‎a‎n‎t‎ ‎h‎i‎s‎t‎o‎r‎y‎.‎ ‎A‎l‎t‎h‎o‎u‎g‎h‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎k‎n‎o‎w‎s‎ ‎c‎o‎r‎r‎u‎p‎t‎ ‎I‎r‎a‎n‎i‎a‎n‎ ‎J‎e‎w‎s‎ ‎m‎a‎d‎e‎ ‎m‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎h‎i‎t‎ ‎u‎p‎ ‎t‎o‎ ‎t‎r‎o‎l‎l‎ ‎t‎h‎e‎ ‎E‎g‎y‎p‎t‎i‎a‎n‎ ‎a‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎J‎e‎w‎s‎.‎

T‎h‎e‎ ‎b‎o‎o‎k‎ ‎i‎s‎ ‎d‎i‎v‎i‎d‎e‎d‎ ‎i‎n‎t‎o‎ ‎t‎w‎o‎ ‎p‎a‎r‎t‎s‎,‎ ‎t‎h‎e‎ ‎O‎l‎d‎ ‎T‎e‎s‎t‎a‎m‎e‎n‎t‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎O‎l‎d‎ ‎T‎e‎s‎t‎a‎m‎e‎n‎t‎ ‎2‎:‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎B‎o‎o‎g‎a‎l‎o‎o‎.‎ ‎M‎o‎s‎t‎ ‎s‎c‎h‎o‎l‎a‎r‎s‎ ‎a‎g‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎O‎l‎d‎ ‎T‎e‎s‎t‎a‎m‎e‎n‎t‎ ‎i‎s‎ ‎U‎l‎t‎r‎a‎ ‎g‎a‎y‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎N‎e‎w‎ ‎T‎e‎s‎t‎a‎m‎e‎n‎t‎ ‎i‎s‎ ‎f‎a‎n‎ ‎f‎i‎c‎t‎i‎o‎n‎,‎ ‎w‎r‎i‎t‎t‎e‎n‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎r‎e‎ ‎w‎a‎s‎ ‎n‎o‎ ‎p‎r‎o‎p‎e‎r‎ ‎s‎e‎q‎u‎e‎l‎ ‎i‎n‎ ‎s‎i‎g‎h‎t‎.‎

G‎e‎o‎r‎g‎e‎ ‎B‎u‎s‎h‎ ‎u‎s‎e‎d‎ ‎a‎ ‎m‎i‎x‎t‎u‎r‎e‎ ‎o‎f‎ ‎T‎h‎e‎ ‎B‎i‎b‎l‎e‎ ‎a‎n‎d‎ ‎M‎e‎i‎n‎ ‎K‎a‎m‎p‎f‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎b‎a‎s‎i‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎s‎.‎ ‎S‎e‎e‎ ‎a‎l‎s‎o‎ ‎H‎i‎t‎l‎e‎r‎,‎ ‎f‎a‎s‎c‎i‎s‎m‎,‎ ‎N‎a‎z‎i‎s‎,‎ ‎a‎n‎d‎ ‎s‎t‎u‎p‎i‎d‎i‎t‎y‎.‎

O‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎i‎e‎s‎t‎ ‎t‎h‎i‎n‎g‎s‎ ‎a‎b‎o‎u‎t‎ ‎""‎T‎h‎e‎ ‎B‎i‎b‎l‎e‎""‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎i‎s‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎c‎h‎r‎i‎s‎t‎f‎a‎g‎s‎ ‎t‎o‎ ‎b‎e‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎s‎o‎l‎d‎ ‎b‎o‎o‎k‎ ‎l‎i‎k‎e‎ ‎e‎v‎a‎r‎.‎ ‎I‎n‎ ‎r‎e‎a‎l‎i‎t‎y‎ ‎i‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎p‎r‎i‎n‎t‎e‎d‎ ‎b‎o‎o‎k‎ ‎l‎i‎k‎e‎ ‎e‎v‎a‎r‎.‎ ‎W‎h‎a‎t‎'‎s‎ ‎e‎v‎e‎n‎ ‎f‎u‎n‎n‎i‎e‎r‎ ‎i‎s‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎s‎o‎l‎d‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎p‎r‎i‎n‎t‎e‎d‎ ‎i‎t‎ ‎i‎s‎ ‎b‎y‎ ‎f‎a‎r‎ ‎t‎h‎e‎ ‎l‎e‎a‎s‎t‎ ‎r‎e‎a‎d‎ ‎p‎i‎e‎c‎e‎ ‎o‎f‎ ‎h‎u‎m‎a‎n‎ ‎i‎n‎t‎e‎l‎l‎e‎c‎t‎u‎a‎l‎ ‎e‎x‎c‎r‎e‎m‎e‎n‎t‎ ‎l‎i‎k‎e‎ ‎e‎v‎a‎r‎.‎ ‎T‎h‎i‎s‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎ ‎i‎s‎ ‎e‎a‎s‎i‎l‎y‎ ‎p‎r‎o‎v‎e‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎c‎h‎r‎i‎s‎t‎f‎a‎g‎s‎ ‎w‎i‎e‎l‎d‎ ‎i‎t‎ ‎a‎s‎ ‎a‎n‎ ‎i‎m‎p‎r‎e‎g‎n‎a‎b‎l‎e‎ ‎(‎r‎e‎a‎d‎:‎ ‎""‎w‎a‎t‎e‎r‎t‎i‎g‎h‎t‎""‎)‎ ‎s‎h‎i‎e‎l‎d‎,‎ ‎w‎h‎i‎l‎e‎ ‎e‎v‎e‎n‎ ‎a‎ ‎5‎-‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎t‎h‎a‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎r‎e‎a‎d‎ ‎t‎h‎a‎t‎ ‎s‎h‎i‎t‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎c‎o‎m‎e‎ ‎u‎p‎ ‎w‎i‎t‎h‎ ‎o‎v‎e‎r‎ ‎9‎0‎0‎0‎ ‎i‎n‎t‎e‎r‎n‎a‎l‎ ‎c‎o‎n‎t‎r‎a‎d‎i‎c‎t‎i‎o‎n‎s‎ ‎s‎a‎i‎d‎ ‎""‎b‎o‎o‎k‎""‎ ‎p‎o‎s‎s‎e‎s‎s‎e‎s‎.‎ ‎A‎s‎ ‎b‎o‎o‎k‎s‎ ‎g‎o‎ ‎""‎T‎h‎e‎ ‎B‎i‎b‎l‎e‎""‎ ‎i‎s‎ ‎m‎o‎r‎e‎ ‎a‎k‎i‎n‎ ‎t‎o‎ ‎a‎ ‎n‎e‎a‎t‎l‎y‎ ‎f‎a‎s‎t‎e‎n‎e‎d‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎o‎i‎l‎e‎t‎ ‎p‎a‎p‎e‎r‎ ‎t‎h‎a‎n‎ ‎a‎ ‎b‎o‎o‎k‎.‎


(‎(‎ ‎G‎o‎d‎'‎s‎ ‎O‎w‎n‎ ‎R‎u‎l‎e‎ ‎B‎o‎o‎k‎.‎ ‎S‎p‎o‎i‎l‎e‎r‎s‎:‎ ‎H‎e‎ ‎C‎h‎e‎a‎t‎s‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎p‎i‎e‎d‎ ‎m‎y‎n‎a‎ ‎(‎G‎r‎a‎c‎u‎p‎i‎c‎a‎ ‎c‎o‎n‎t‎r‎a‎)‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎s‎t‎a‎r‎l‎i‎n‎g‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎s‎u‎b‎c‎o‎n‎t‎i‎n‎e‎n‎t‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎r‎i‎n‎c‎i‎p‎a‎l‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎i‎o‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎G‎a‎n‎g‎e‎t‎i‎c‎ ‎p‎l‎a‎i‎n‎s‎ ‎e‎x‎t‎e‎n‎d‎i‎n‎g‎ ‎s‎o‎u‎t‎h‎ ‎t‎o‎ ‎t‎h‎e‎ ‎K‎r‎i‎s‎h‎n‎a‎ ‎R‎i‎v‎e‎r‎.‎ ‎T‎h‎i‎s‎ ‎r‎a‎n‎g‎e‎ ‎h‎a‎s‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎d‎ ‎i‎n‎ ‎r‎e‎c‎e‎n‎t‎ ‎t‎i‎m‎e‎s‎,‎ ‎w‎i‎t‎h‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎s‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎ ‎i‎n‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎,‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎I‎n‎d‎i‎a‎ ‎a‎n‎d‎ ‎a‎l‎s‎o‎ ‎D‎u‎b‎a‎i‎.‎ ‎T‎h‎e‎ ‎s‎p‎r‎e‎a‎d‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎a‎i‎d‎e‎d‎ ‎b‎y‎ ‎c‎h‎a‎n‎g‎e‎s‎ ‎i‎n‎ ‎i‎r‎r‎i‎g‎a‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎f‎a‎r‎m‎i‎n‎g‎ ‎p‎a‎t‎t‎e‎r‎n‎s‎ ‎a‎n‎d‎ ‎a‎c‎c‎i‎d‎e‎n‎t‎a‎l‎ ‎e‎s‎c‎a‎p‎e‎ ‎o‎f‎ ‎c‎a‎g‎e‎d‎ ‎b‎i‎r‎d‎s‎.‎ ‎T‎h‎e‎ ‎I‎n‎d‎i‎a‎n‎ ‎p‎i‎e‎d‎ ‎m‎y‎n‎a‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎m‎a‎i‎n‎l‎y‎ ‎i‎n‎ ‎l‎o‎w‎l‎a‎n‎d‎ ‎o‎p‎e‎n‎ ‎a‎r‎e‎a‎s‎ ‎w‎i‎t‎h‎ ‎s‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎t‎r‎e‎e‎s‎ ‎n‎e‎a‎r‎ ‎w‎a‎t‎e‎r‎,‎ ‎o‎f‎t‎e‎n‎ ‎n‎e‎a‎r‎ ‎h‎u‎m‎a‎n‎ ‎h‎a‎b‎i‎t‎a‎t‎i‎o‎n‎,‎ ‎b‎u‎t‎ ‎a‎l‎s‎o‎ ‎i‎n‎h‎a‎b‎i‎t‎s‎ ‎a‎r‎e‎a‎s‎ ‎u‎p‎ ‎t‎o‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎0‎0‎ ‎m‎ ‎i‎n‎ ‎a‎l‎t‎i‎t‎u‎d‎e‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎a‎ ‎b‎l‎a‎c‎k‎ ‎a‎n‎d‎ ‎w‎h‎i‎t‎e‎ ‎p‎l‎u‎m‎a‎g‎e‎ ‎w‎i‎t‎h‎ ‎a‎ ‎y‎e‎l‎l‎o‎w‎i‎s‎h‎ ‎b‎i‎l‎l‎ ‎a‎n‎d‎ ‎a‎ ‎r‎e‎d‎d‎i‎s‎h‎ ‎b‎i‎l‎l‎ ‎b‎a‎s‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎a‎i‎r‎ ‎o‎f‎ ‎I‎n‎d‎i‎a‎n‎ ‎p‎i‎e‎d‎ ‎m‎y‎n‎a‎s‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎H‎a‎p‎u‎r‎,‎ ‎i‎n‎ ‎U‎t‎t‎a‎r‎ ‎P‎r‎a‎d‎e‎s‎h‎,‎ ‎I‎n‎d‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎n‎i‎g‎g‎a‎z‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎w‎a‎l‎k‎ ‎a‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎s‎h‎o‎w‎ ‎s‎o‎m‎ ‎n‎i‎g‎g‎a‎z‎ ‎m‎a‎h‎ ‎n‎e‎w‎ ‎g‎r‎e‎e‎e‎e‎a‎a‎a‎l‎ ‎a‎n‎d‎ ‎m‎a‎h‎ ‎g‎o‎l‎ ‎c‎h‎a‎i‎n‎,‎ ‎y‎'‎a‎l‎l‎!‎"
1Fbmakbe,[RO] Item Collector with Rank 1.4,Emistry,C,Saturday 27th of January 2024 08:12:53 AM CDT,"/*
CREATE TABLE IF NOT EXISTS `ero_npc_trade_item` (
  `cid` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  `name` VARCHAR(30) NOT NULL DEFAULT '',
  `nameid` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  `amount` INT(11) UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`cid`,`nameid`,`amount`)
) ENGINE=MyISAM;
*/

prontera,155,175,5	script	Item Collector::item_collector_npc	4_F_KAFRA9,{
	doevent ""trade_item_main::OnTalk"";
}


-	script	trade_item_main	-1,{

	OnInit:
		// Top Rank
		.top_rank = 10;
		
		// NPC take what item ID (empty = all items)
		setarray .itemid, 512;
		
		// list of not allowed items
		setarray .blacklist_itemid, 501, 502, 4001;
		
		.itemid_size = getarraysize(.itemid);
		for (.@i = 0; .@i < .itemid_size; .@i++) {
			.itemid$ = (.@i > 0 ? "","" : """") + .itemid$ + .itemid[.@i];
			.is_allow[.itemid[.@i]] = 1;
		}
		.allow_all_item = !.itemid_size;
		.blacklist_itemid_size = getarraysize(.blacklist_itemid);
		for (.@i = 0; .@i < .blacklist_itemid_size; .@i++)
			.is_blacklist[.blacklist_itemid[.@i]] = 1;
		end;
	
	OnTalk:
		.@is_gm = (getgmlevel() >= 99);
		
		mes ""^0055FF[ Item Collector ]^000000"";
		mes ""Do you have any used items? You may give it to me."";
		if (!.allow_all_item) {
			for (.@i = 0; .@i < .itemid_size; .@i++)
				mes ""\n~ "" + mesitemlink(.itemid[.@i], false);
		}
		mes "" "";
		mes ""I'll always remember who giveaway his items to me."";
		switch(select(
			""View Top ""+.top_rank+"" Rank"",
			""Give Item to NPC"",
			(.@is_gm) ? ""^FF0000[GM]^000000 Reset Ranking"" : """"
		)) {
			default:
			case 1:
				do {
					clear;
					mes ""[ View Top ""+.top_rank+"" Rank ]"";
					switch(select(
						""Any"",
						""Filter by Character Name"", 
						(.allow_all_item) ? """":""Filter by ItemID""
					)) {
						default: 
							break;
						case 2: 
							.@filter_by = 1;
							mes ""Enter Character Name""; 
							break;
						case 3: 
							.@filter_by = 2;
							mes ""Enter ItemID""; 
							break;
					}
					
					if (.@filter_by && .@filter_by != 3)
						input .@input$;
					
					.@sql$ = ""SELECT `name`, `nameid`, SUM(`amount`) AS `total` ""
							+ ""FROM `ero_npc_trade_item` ""
							+ ""WHERE 1 = 1 ""
							+ (.allow_all_item ? """" : ""AND `nameid` IN (""+escape_sql(.itemid$)+"") "")
							+ ((.@filter_by == 1) ? ""AND `name` IN (""+escape_sql(.@input$)+"") "" : """")
							+ ((.@filter_by == 2) ? ""AND `nameid` IN (""+escape_sql(.@input$)+"") "" : """")
							+ ""GROUP BY `cid`, `nameid`, `name`""
							+ ""ORDER BY `total` DESC LIMIT ""+.top_rank;
					query_sql(.@sql$, .@name$, .@nameid, .@total);
					.@size = getarraysize(.@name$);
					
					if (!.@size) {
						mes ""no record found."";
						break;
					}
					for (.@i = 0; .@i < .@size; .@i++)
						mes ""[""+(.@i+1)+"".] ""+mesitemlink(.@nameid[.@i], false, .@name$[.@i])+"" (""+F_InsertComma(.@total[.@i])+"")"";
					next;
				} while (true);
				break;
			case 2:
				clear;
				mes ""[ Give Item to NPC ]"";
				if (!.allow_all_item) {
					mes ""I accept the following items:"";
					for (.@i = 0; .@i < .itemid_size; .@i++)
						mes ""\n~ "" + mesitemlink(.itemid[.@i], false);
				}
				getinventorylist;
				for (.@i = 0; .@i < @inventorylist_count; .@i++) {
					if (@inventorylist_bound[.@i] <= 0
						&& @inventorylist_expire[.@i] <= 0
						&& @inventorylist_equip[.@i] <= 0
						&& @inventorylist_tradable[.@i]
						&& .is_blacklist[@inventorylist_id[.@i]] == 0
						&& (.allow_all_item || .is_allow[@inventorylist_id[.@i]])
					) {
						.@menu$ = .@menu$ + replacestr(getitemname(@inventorylist_id[.@i]), "":"", "" "") + "" (""+F_InsertComma(@inventorylist_amount[.@i])+"" left)"";
						.@count++;
					}
					.@menu$ = .@menu$ + "":"";
				}
				if (.@count)
					.@i = select(.@menu$) - 1;
					
				if (!@inventorylist_id[.@i]) {
					mes ""Unfortunately, you dont have any item available to give to NPC."";
					close;
				}
				clear;
				mes ""[ Give Item to NPC ]"";
				mes ""How many ""+mesitemlink(@inventorylist_id[.@i], false)+"" will be given to me?"";
				mes ""(You have ""+F_InsertComma(@inventorylist_amount[.@i])+"" left)"";
				input .@amount, 0, @inventorylist_amount[.@i];
				clear;
				mes ""[ Give Item to NPC ]"";
				if (.@amount) {
					delitemidx @inventorylist_idx[.@i], .@amount;
					clear;
					mes ""[ Give Item to NPC ]"";
					mes ""Thank you, you donated ""+.@amount+""x ""+mesitemlink(@inventorylist_id[.@i], false)+"" to me."";
					npctalk ""<Item Collector> Thank you, '""+strcharinfo(0)+""' donated ""+.@amount+""x ""+itemlink(@inventorylist_id[.@i], @inventorylist_refine[.@i], @inventorylist_card1[.@i], @inventorylist_card2[.@i], @inventorylist_card3[.@i], @inventorylist_card4[.@i], @inventorylist_enchantgrade[.@i])+"" to me."", ""item_collector_npc"";
					query_sql(""INSERT INTO `e_npc_trade_item` (`cid`,`name`,`nameid`,`amount`) VALUES (""+getcharid(0)+"",'""+escape_sql(strcharinfo(0))+""',""+@inventorylist_id[.@i]+"",""+.@amount+"") ON DUPLICATE KEY UPDATE `amount` = `amount` + ""+.@amount);
				}
				mes ""Thank for your kindness."";
				break;
			case 3:
				clear;
				mes ""[ Reset Ranking ]"";
				mes ""This action cant be undo, confirm your action?"";
				if (select(""Yes, confirm."",""Cancel"") == 1) {
					query_sql(""TRUNCATE `e_npc_trade_item`"");
					clear;
					mes ""[ Reset Ranking ]"";
					mes ""All record has been deleted."";
				}
				break;
		}
		close;
}


"
7Ai69xGu,02. Positions Of,Spocoman,C++,Saturday 27th of January 2024 07:50:13 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

int main() {
    int row, col, num;
    cin >> row >> col;

    vector<vector<int>> matrix;

    for (int i = 0; i < row; i++) {
        vector<int> currentRow;
        for (int j = 0; j < col; j++) {
            cin >> num;
            currentRow.push_back(num);
        }
        matrix.push_back(currentRow);
    }

    cin >> num;
    bool isfound = false;

    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            if (matrix[i][j] == num) {
                cout << i << ' ' << j << endl;
                isfound = true;
            }
        }
    }

    if (!isfound) {
        cout << ""not found"" << endl;
    }
    return 0;
}"
arB5Hg9k,Godot 3D First Person Movement + Head bobbing,CirilXD,GDScript,Saturday 27th of January 2024 07:40:08 AM CDT,"extends CharacterBody3D

enum WalkState{
	NORMAL,
	SPRINT,
	CROUCH,
	PRONE,
	SLIDE
}

#movement attribute values
const TARGET_LERP = .8

const SPRINT_SPEED = 18.0
const SPRINT_LERP_ACC = 1
const SPRINT_LERP_DEC = 8

const WALK_SPEED = 6.0
const WALK_LERP_ACC = 3.5
const WALK_LERP_DEC = 10

const CROUCH_SPEED = 3.0
const CROUCH_LERP_ACC = 8
const CROUCH_LERP_DEC = 14

const PRONE_SPEED = 1.5
const PRONE_LERP_ACC = 12
const PRONE_LERP_DEC = 22

const SLIDE_SPEED = 30
const SLIDE_TIME_MAX = .7
const SLIDE_DAMPEN_RATE = .05
const SLIDE_FLAT_DAMPEN_RATE = .001
const SLOPE_SLIDE_THRESHOLD = .1
var current_slide_time = 0
var current_slide_vector : Vector3 = Vector3.ZERO

var SPRINT_CD_MAX = .2
var current_sprint_cd = 0

const FALL_SPEED_MAX = 30
const JUMP_VELOCITY = 6
const JUMP_HANG_TIME_THRESHOLD = .3
const JUMP_HANG_TIME_SPEED_MULT = 1.05
const JUMP_HANG_TIME_ACC_MULT = 3

const COYOTE_TIME_MAX = .1
var current_coyote_time = 0
const JUMP_CD_MAX = .25
var current_jump_cd = 0



# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity_default = ProjectSettings.get_setting(""physics/3d/default_gravity"")
var gravity_falling = 3.3 * gravity_default
var gravity_hang_time = .5 * gravity_default
var current_gravity = gravity_default

@export var camera_sensitivity = .25

var input_dir = Vector2.ZERO
var direction = Vector3.ZERO

@onready var collider = $Collider
const COLLIDER_HEIGHT_NORMAL = 2
const COLLIDER_HEIGHT_CROUCH = 1.1
const COLLIDER_HEIGHT_PRONE = .5

const CAMERA_HEIGHT_NORMAL = 1.8
const CAMERA_HEIGHT_CROUCH = .9
const CAMERA_HEIGHT_PRONE = .3

const HEAD_BOB_INTENSITY_SPRINT = .15
const HEAD_BOB_INTENSITY_NORMAL = .12
const HEAD_BOB_INTENSITY_CROUCH = .08
const HEAD_BOB_INTENSITY_PRONE = .04

const HEAD_BOB_FREQUENCY_SPRINT = 18
const HEAD_BOB_FREQUENCY_NORMAL = 14
const HEAD_BOB_FREQUENCY_CROUCH = 10
const HEAD_BOB_FREQUENCY_PRONE = 8

const HEAD_BOB_LERP_RATE = 50

var head_bob_var = 0
var is_head_bob_active = true
var current_head_bob_intensity = 0
var current_head_bob_frequency = 0

const CAMERA_LERP = 10
const CAMERA_FOV_NORMAL = 70.0
const CAMERA_FOV_MAX_SPEED = 100.0

@onready var camera_pivot = $CameraPivot
@onready var debug_label = $DebugLabel
@onready var height_raycast = $HeightRaycast
@onready var camera_3d = $CameraPivot/HeadBobPivot/Camera3D
@onready var head_bob_pivot = $CameraPivot/HeadBobPivot

var current_max_speed : float = 0 
var current_lerp_acc : float = 0
var current_lerp_dec : float = 0
var current_camera_height : float = 0


var current_walk_state : WalkState = WalkState.NORMAL


var floor_angle

var debug = null
var debug1 = null
var debug2 = null
var debug3 = null

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	_UpdateCollider()
	debug =  get_tree().root.get_node(""ROOT/raycasts"")
	debug1 = debug.get_node(""DebugRaycast"")
	debug2 = debug.get_node(""DebugRaycast2"")
	debug3 = debug.get_node(""DebugRaycast3"")
	
func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(camera_sensitivity * -event.relative.x))
		camera_pivot.rotate_x(deg_to_rad(camera_sensitivity * -event.relative.y))
		camera_pivot.rotation.x = clamp(camera_pivot.rotation.x, deg_to_rad(-89), deg_to_rad(89))


func _process(delta):
	input_dir = Input.get_vector(""left"", ""right"", ""forward"", ""back"")

	direction = transform.basis * Vector3(input_dir.x, 0, input_dir.y).normalized()

	if WalkState.SLIDE != current_walk_state:
		if Input.is_action_pressed(""prone"") && is_on_floor():
			if current_walk_state != WalkState.PRONE:
				current_walk_state = WalkState.PRONE
				_UpdateCollider()
		elif Input.is_action_pressed(""crouch"") and !height_raycast.is_colliding() && is_on_floor():
			if current_walk_state != WalkState.CROUCH:
				if current_sprint_cd > 0:
					current_walk_state = WalkState.SLIDE
					current_slide_time = SLIDE_TIME_MAX
					current_slide_vector = abs(velocity) * direction
					current_slide_vector.y = 0
					_UpdateCollider()
				else:
					current_walk_state = WalkState.CROUCH
					_UpdateCollider()
		elif !height_raycast.is_colliding():
			if current_walk_state == WalkState.PRONE:
				current_walk_state = WalkState.CROUCH
				_UpdateCollider()
			elif Input.is_action_pressed(""sprint""):
				current_sprint_cd = SPRINT_CD_MAX
				if current_walk_state != WalkState.SPRINT:
					current_walk_state = WalkState.SPRINT
					_UpdateCollider()
			elif current_walk_state != WalkState.NORMAL:
				current_walk_state = WalkState.NORMAL
				_UpdateCollider()
				
	floor_angle = get_floor_angle()


func _physics_process(delta):
	if WalkState.SLIDE == current_walk_state:
		if current_slide_time > 0:
			if floor_angle < SLOPE_SLIDE_THRESHOLD || velocity.y > 0:
				current_slide_time -= delta
				current_slide_time = clamp(current_slide_time, 0, SLIDE_TIME_MAX)
			
		else:
			current_walk_state = WalkState.CROUCH
			_UpdateCollider()
	
	if current_sprint_cd > 0:
		current_sprint_cd -= delta

	#calc target speed based on current input
	var target_speed : Vector3 = direction * current_max_speed

	var current_acc_rate : Vector3 = Vector3.ZERO
	if input_dir:
		current_acc_rate = Vector3(current_lerp_acc,
				0,
				current_lerp_acc)
	else:
		current_acc_rate = Vector3(current_lerp_dec,
			0,
			current_lerp_dec)
	
	
	#lerp the target speed for smoother change
	#if the movement is in the same direction make the target closer to the current velocity
	#otherwise, since direction shift is required make the target closer to actual target
	#if player is faster than top speed don't slow down on X and Z axis
	if (target_speed.x != 0 &&
		abs(velocity.x) >= abs(target_speed.x) &&
		sign(velocity.x) == sign(target_speed.x)):
			
		target_speed.x = lerp(velocity.x, target_speed.x, 1-TARGET_LERP)
	else:
		target_speed.x = lerp(velocity.x, target_speed.x, TARGET_LERP)
		
	if (target_speed.z != 0 &&
		abs(velocity.z) >= abs(target_speed.z) &&
		sign(velocity.z) == sign(target_speed.z)):

		target_speed.z = lerp(velocity.z, target_speed.z, 1-TARGET_LERP)
	else:
		target_speed.z = lerp(velocity.z, target_speed.z, TARGET_LERP)
	
	# Handle Jump.
	if Input.is_action_just_released(""jump"") and velocity.y > 0:
		current_jump_cd = 0
		velocity.y = velocity.y / 2.0
	elif current_coyote_time > 0 && (
		Input.is_action_just_pressed(""jump"") || current_jump_cd > 0):
		current_jump_cd = JUMP_CD_MAX
		velocity.y = JUMP_VELOCITY
		if Input.is_action_pressed(""sprint""): current_walk_state = WalkState.SPRINT
		else: current_walk_state = WalkState.NORMAL
		_UpdateCollider()
		
	if abs(velocity.y) < JUMP_HANG_TIME_THRESHOLD && !is_on_floor():
		#make the gravity weaker around apex of jump
		current_gravity = gravity_hang_time
		
		#increase responsiveness
		target_speed *= JUMP_HANG_TIME_SPEED_MULT
		current_acc_rate *= JUMP_HANG_TIME_ACC_MULT
	else:
		#if falling make gravity stronger
		if velocity.y < 0:
			current_gravity = gravity_falling
		else:
			current_gravity = gravity_default
	
	# Add the gravity.
	if not is_on_floor():
		current_coyote_time -= delta
		if current_coyote_time < 0: current_coyote_time = 0
		velocity.y -= current_gravity * delta
	else:
		current_coyote_time = COYOTE_TIME_MAX

	
	#calculate dif between max and current speed
	#ignore y axis
	var speed_difference : Vector3 = target_speed - velocity
	speed_difference.y = 0

	#final force that will be applied to character
	var movement = speed_difference * current_acc_rate

	if is_on_floor() && floor_angle > SLOPE_SLIDE_THRESHOLD:
		var plane = Plane(get_floor_normal())
		movement = plane.project(movement)
		current_slide_vector = plane.project(current_slide_vector)

	if WalkState.SLIDE == current_walk_state:
		velocity = velocity + (movement) * delta * SLIDE_DAMPEN_RATE
		velocity = velocity + current_slide_vector * delta * (current_slide_time) * (-(current_slide_vector.y) + .01)
	else:
		velocity = velocity + (movement) * delta

	if velocity.y < -FALL_SPEED_MAX:
		velocity.y = -FALL_SPEED_MAX
		
	current_jump_cd -= delta
	if current_jump_cd < 0: current_jump_cd = 0
	
	debug_label.text = str(get_floor_angle()) + "" rad\n"" + str(velocity.length()) + ""\n"" + (
		""Vertical:"" + str(velocity.y))
	
	_UpdateCameraPosition(delta, inverse_lerp(0, abs(SPRINT_SPEED), velocity.length()))
	move_and_slide()

func _UpdateCameraPosition(delta, speed_t):
	var t = CAMERA_LERP * delta

	if WalkState.SLIDE == current_walk_state:
		camera_3d.rotation.z = lerp(camera_3d.rotation.z, deg_to_rad(15.0), t)
	else:
		camera_3d.rotation.z = lerp(camera_3d.rotation.z, 0.0, t)
		
	if is_head_bob_active && WalkState.SLIDE != current_walk_state && is_on_floor() && direction != Vector3.ZERO:
		head_bob_var += current_head_bob_frequency * delta
		head_bob_pivot.position.y = lerp(
			head_bob_pivot.position.y,
			sin(head_bob_var) * current_head_bob_intensity / 2.0,
			t)
		head_bob_pivot.position.x = lerp(
			head_bob_pivot.position.x,
			cos(head_bob_var / 2.0) * current_head_bob_intensity,
			t)
	else:
		head_bob_pivot.position.y = lerp(
			head_bob_pivot.position.y,
			0.0,
			t)
		head_bob_pivot.position.x = lerp(
			head_bob_pivot.position.x,
			0.0,
			t)
		
	var tmp = lerp(CAMERA_FOV_NORMAL, CAMERA_FOV_MAX_SPEED, speed_t)
	camera_3d.fov = lerp(camera_3d.fov, min(tmp, CAMERA_FOV_MAX_SPEED), t)
	camera_pivot.position.y = lerp(camera_pivot.position.y, current_camera_height, t)

func _UpdateCollider():
	match current_walk_state:
		WalkState.NORMAL:
			collider.shape.height = COLLIDER_HEIGHT_NORMAL
			collider.position.y = COLLIDER_HEIGHT_NORMAL / 2.0
			height_raycast.target_position.y = COLLIDER_HEIGHT_NORMAL
			current_camera_height = CAMERA_HEIGHT_NORMAL
			current_max_speed = WALK_SPEED
			current_head_bob_frequency = HEAD_BOB_FREQUENCY_NORMAL
			current_head_bob_intensity = HEAD_BOB_INTENSITY_NORMAL
			current_lerp_acc = WALK_LERP_ACC
			current_lerp_dec = WALK_LERP_DEC
		WalkState.CROUCH:	
			collider.shape.height = COLLIDER_HEIGHT_CROUCH
			collider.position.y = COLLIDER_HEIGHT_CROUCH / 2.0
			height_raycast.target_position.y = COLLIDER_HEIGHT_NORMAL
			current_camera_height = CAMERA_HEIGHT_CROUCH
			current_max_speed = CROUCH_SPEED
			current_head_bob_frequency = HEAD_BOB_FREQUENCY_CROUCH
			current_head_bob_intensity = HEAD_BOB_INTENSITY_CROUCH
			current_lerp_acc = CROUCH_LERP_ACC
			current_lerp_dec = CROUCH_LERP_DEC
		WalkState.SLIDE:	
			collider.shape.height = COLLIDER_HEIGHT_CROUCH
			collider.position.y = COLLIDER_HEIGHT_CROUCH / 2.0
			height_raycast.target_position.y = COLLIDER_HEIGHT_NORMAL
			current_camera_height = CAMERA_HEIGHT_CROUCH
			current_max_speed = WALK_SPEED
			current_head_bob_frequency = HEAD_BOB_FREQUENCY_CROUCH
			current_head_bob_intensity = HEAD_BOB_INTENSITY_CROUCH
			current_lerp_acc = CROUCH_LERP_ACC
			current_lerp_dec = CROUCH_LERP_DEC
		WalkState.PRONE:	
			collider.shape.height = COLLIDER_HEIGHT_PRONE
			collider.position.y = COLLIDER_HEIGHT_PRONE / 2.0
			height_raycast.target_position.y = COLLIDER_HEIGHT_CROUCH
			current_camera_height = CAMERA_HEIGHT_PRONE
			current_max_speed = PRONE_SPEED
			current_head_bob_frequency = HEAD_BOB_FREQUENCY_PRONE
			current_head_bob_intensity = HEAD_BOB_INTENSITY_PRONE
			current_lerp_acc = PRONE_LERP_ACC
			current_lerp_dec = PRONE_LERP_DEC
		WalkState.SPRINT:	
			collider.shape.height = COLLIDER_HEIGHT_NORMAL
			collider.position.y = COLLIDER_HEIGHT_NORMAL / 2.0
			height_raycast.target_position.y = COLLIDER_HEIGHT_NORMAL
			current_camera_height = CAMERA_HEIGHT_NORMAL
			current_max_speed = SPRINT_SPEED
			current_head_bob_frequency = HEAD_BOB_FREQUENCY_SPRINT
			current_head_bob_intensity = HEAD_BOB_INTENSITY_SPRINT
			current_lerp_acc = SPRINT_LERP_ACC
			current_lerp_dec = SPRINT_LERP_DEC
"
4v5UKknZ,awd,Zuneve,Python,Saturday 27th of January 2024 07:05:28 AM CDT,"mx = 0
s = 0
a = 1000
b = 0
while b < 1000:
    if a > 0:
        s += min(a, 33)
        a -= min(a, 33)
        mx = max(mx, s)
    b += 27
    s -= 27
print(mx)
"
9mSW99Pt,C#_3_dynamic_array,Legiomax,C#,Saturday 27th of January 2024 07:01:37 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = ""exit"";
            const string CommandSum = ""sum"";
            
            string userChoice;

            bool isJobCountNums = true;

            int[] listOfElements = new int[0];
            
            Console.Write(""Программа подсчёта чисел.\n"" +
                ""Можете вписать любое число.\n"" +
                 $""При вводе {CommandExit} - произойдёт выход из программы(подсчёта чисел не будет).\n"" +
                 $""При вводе - {CommandSum} , произойдёт подсчёт чисел.\n"");
            
            while (isJobCountNums) 
            {
                userChoice = Console.ReadLine();

                switch (userChoice)
                {
                    case CommandExit:
                        Console.WriteLine(""Хорошего дня!"");
                        isJobCountNums = false;
                        break;

                    case CommandSum:
                        int sumNumbers = 0;

                        foreach (int element in listOfElements)
                        {
                            sumNumbers += element;
                        }

                        Console.Write($""Сумма введённых чисел - {sumNumbers}.\n"");
                        break;

                    default:
                        int[] tempArrayNum = new int[listOfElements.Length + 1];

                        for (int i = 0; i < listOfElements.Length; i++)
                        {
                            tempArrayNum[i] = listOfElements[i];
                        }

                        tempArrayNum[tempArrayNum.Length - 1] = Convert.ToInt32(userChoice);
                        listOfElements = tempArrayNum;
                        break;
                }
            }
            Console.ReadKey();
        }
    }
}
"
frBB7X9a,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:59:47 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int zbir = 0;
    while(n > 0) {
        int cifra = n  %10;
        zbir += cifra;
        n /= 10;
        
    }
    cout << zbir << endl;
    return 0;
}
"
EFREMPsq,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:58:04 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int cifri = 0;
    if(n == 0) {
        cifri = 1;
    }
    while(n > 0) {
        n /= 10;
        cifri += 1;
    }
    cout << cifri << endl;
    return 0;
}
"
Hv3fWk5S,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:56:32 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    
    int x = 1;
    int zbir = 0;
    while(x <= n) {
        zbir += x;
        x += 1;
    }
    cout << zbir << endl;
    
    return 0;
}
"
xhTmtauq,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:54:17 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int x = 1546;
    while(x > 0) {
        int cifra = x % 10;
        cout << cifra << "" "";
        x /= 10;
    }
    
    return 0;
}
"
BHhzAkLE,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:45:01 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int a, b;
    cin >> a;
    cin >> b;
    
    for(int i = 1; i <= a * b; i += 1) {
        if(i % a == 0 and i % b == 0) {
            cout << i << endl;
            return 0;
        }
    }
    
    return 0;
}
"
3T3WKV8i,Study Analyzing Afternoon vs Morning Ranges,Maurizio-Ciullo,JavaScript,Saturday 27th of January 2024 06:36:10 AM CDT,"// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ZenAndTheArtOfTrading
// https://www.youtube.com/watch?v=MbC1kgJFtvE
                                                                // QUESTO TEST E' STATO CREATO PRINCIPALMENTE PER IL MERCATO AZIONARIO AMERICANO //
// @version=5
indicator(""Study RANGE CONTINUATION TEST"", overlay=true)

// Get user input
Session1    = input.session(title=""First Session"", defval=""0930-1200"", display=display.none)
Session2    = input.session(title=""Second Session"", defval=""1200-1600"", display=display.none)
StartDate   = input.time(timestamp(""1 January 2000""))
EndDate     = input.time(timestamp(""1 January 2030""))

// InSession() determines if a price bar falls inside the specified session on the given weekdays
InSession(sess) => na(time(timeframe.period, sess + "":1234567"")) == false

// Highlight sessions
bgcolor(InSession(Session1) ? color.new(color.green, 90) : na)
bgcolor(InSession(Session2) ? color.new(color.red,   90) : na)

// Get higher timeframe data
float yesterdayHigh  = request.security(syminfo.tickerid, ""D"", high [barstate.isrealtime ? 1 : 0])[barstate.isrealtime ? 0 : 1]
float yesterdayLow   = request.security(syminfo.tickerid, ""D"", low  [barstate.isrealtime ? 1 : 0])[barstate.isrealtime ? 0 : 1]

// Detect session start
bool startSession1 = not InSession(Session1)[1] and InSession(Session1) and time >= StartDate
bool startSession2 = not InSession(Session2)[1] and InSession(Session2) and time >= StartDate

// Analysis variables
var int bullishRangeExpansionCount  = 0
var int bearishRangeExpansionCount  = 0
var int bullishRangeContinuation    = 0
var int bearishRangeContinuation    = 0

// First session variables
var int   sessionIndex1         = na
var float dayOpenPrice          = na
var float sessionLow1           = na 
var float sessionHigh1          = na 

// Second session variables 
var int   sessionIndex2         = na
var float sessionLow2           = na 
var float sessionHigh2          = na 
var bool  rangeExpansion        = false
var bool  checkContinuation     = false

// Analysis variables
var bool  yesterdayWasBullish   = false
var bool  monitoring1stSession  = false 

// 1. Detect start of day's first session
// 2. Save previously monitored session's range 
// 3. Save yesterday's close and today's open 
// 4. Reset and start monitoring today's first session
// 5. Start of day's first session is also end of yesterday's second session, so analyze data
if startSession1
    bool bullishClose = close[1] > dayOpenPrice
    line.new(sessionIndex1, dayOpenPrice, bar_index - 1, close[1], color=bullishClose ? color.green : color.red)
    line.new(sessionIndex2, sessionHigh2 + (sessionHigh1 - sessionHigh2), sessionIndex2, sessionLow2 + (sessionHigh1 - sessionHigh2), color=color.red, width=2)
    if (sessionHigh2 - sessionLow2) >= (sessionHigh1 - sessionLow1)
        rangeExpansion := true
        label.new(bar_index - 1, high[1], (bullishClose ? ""BULLISH"" : ""BEARISH"") + "" RANGE\nEXPANSION!"", textcolor=color.white)
    else
        rangeExpansion := false

    sessionIndex1           := bar_index
    sessionLow1             := na 
    sessionHigh1            := na
    monitoring1stSession    := true
    dayOpenPrice            := open

    if checkContinuation // We had range expansion yesterday - check if we continued in trend
        if yesterdayWasBullish // Yesterday was a bullish day - check for bullish continuation
            bool bullishContinuation = close[1] > yesterdayHigh
            bullishRangeExpansionCount := bullishRangeExpansionCount + 1
            line.new(bar_index, yesterdayHigh, bar_index - 20, yesterdayHigh, color=bullishContinuation ? color.green : color.gray)
            if bullishContinuation
                bullishRangeContinuation := bullishRangeContinuation + 1
                label.new(bar_index - 1, high[1], ""BULLISH CONTINUATION!"", color=color.green, textcolor=color.white)
        else
            bool bearishContinuation = close[1] < yesterdayLow
            bearishRangeExpansionCount := bearishRangeExpansionCount + 1
            line.new(bar_index, yesterdayLow, bar_index - 20, yesterdayLow, color=bearishContinuation ? color.red : color.gray)
            if bearishContinuation
                bearishRangeContinuation := bearishRangeContinuation + 1
                label.new(bar_index - 1, high[1], ""BEARISH CONTINUATION!"", color=color.red, textcolor=color.white)

    checkContinuation       := false
    yesterdayWasBullish     := close[1] > dayOpenPrice[1]

// Track first session's range 
if monitoring1stSession
    if na(sessionLow1) or low < sessionLow1
        sessionLow1 := low 
    if na(sessionHigh1) or high > sessionHigh1
        sessionHigh1 := high

// 1. Detect start of day's second session
// 2. Reset and start monitoring today's second session
if startSession2
    line.new(bar_index - 1, sessionHigh1, bar_index - 1, sessionLow1, color=color.green, width=2)
    monitoring1stSession    := false
    sessionLow2             := na 
    sessionHigh2            := na
    sessionIndex2           := bar_index
    checkContinuation       := rangeExpansion

// Track second session's range 
if not monitoring1stSession
    if na(sessionLow2) or low < sessionLow2
        sessionLow2 := low 
    if na(sessionHigh2) or high > sessionHigh2
        sessionHigh2 := high

// Analysis of range expansion data
int totalRangeExpansionCount    = bullishRangeExpansionCount + bearishRangeExpansionCount
float totalExpansionChance      = ((bullishRangeContinuation + bearishRangeContinuation) / totalRangeExpansionCount) * 100
float bullishExpansionChance    = (bullishRangeContinuation / bullishRangeExpansionCount) * 100
float bearishExpansionChance    = (bearishRangeContinuation / bearishRangeExpansionCount) * 100

// Debug data window plots 
plot(yesterdayWasBullish ? 1 : 0, title=""BULLISH DAY?"", display=display.data_window)
plotshape(rangeExpansion ? 1 : na, ""PREVIOUS EXPANSION?"", shape.square, location.top, color=yesterdayWasBullish ? color.green : color.red)
plot(na, title=""-----------"", display=display.data_window)
plot(totalRangeExpansionCount, title=""TOTAL RANGE EXPANSION"", display=display.data_window)
plot(bullishRangeExpansionCount, title=""TOTAL BULLISH RANGE EXP"", display=display.data_window)
plot(bullishRangeContinuation, title=""TOTAL BULLISH RANGE CNT"", display=display.data_window)
plot(bearishRangeExpansionCount, title=""TOTAL BEARISH RANGE EXP"", display=display.data_window)
plot(bearishRangeContinuation, title=""TOTAL BEARISH RANGE CNT"", display=display.data_window)
plot(na, title=""-----------"", display=display.data_window)
plot(totalExpansionChance, title=""Total Continuation Chance"", display=display.data_window)
plot(bullishExpansionChance, title=""Bullish Continuation Chance"", display=display.data_window)
plot(bearishExpansionChance, title=""Bearish Continuation Chance"", display=display.data_window)

// Create stat display table
if barstate.islast 
    var table myTable = table.new(position.top_right, 5, 2, border_width=1)

    txt1 = ""Total Range Expansion\n""        + str.tostring(totalRangeExpansionCount)
    txt2 = ""Total Continuation Chance\n""    + str.tostring(totalExpansionChance, ""#.##"") + ""%""
    txt3 = ""Bullish Days w/ Expansion\n""    + str.tostring(bullishRangeExpansionCount)
    txt4 = ""Bullish Continuation Chance\n""  + str.tostring(bullishExpansionChance, ""#.##"") + ""%""
    txt5 = ""Bearish Days w/ Expansion\n""    + str.tostring(bearishRangeExpansionCount)
    txt6 = ""Bearish Continuation Chance\n""  + str.tostring(bearishExpansionChance, ""#.##"") + ""%""

    table.cell(myTable, 0, 0, text=txt1, bgcolor=color.black, text_color=color.white)
    table.cell(myTable, 0, 1, text=txt2, bgcolor=color.black, text_color=color.white)
    table.cell(myTable, 1, 0, text=txt3, bgcolor=color.black, text_color=color.white)
    table.cell(myTable, 1, 1, text=txt4, bgcolor=color.black, text_color=color.white)
    table.cell(myTable, 2, 0, text=txt5, bgcolor=color.black, text_color=color.white)
    table.cell(myTable, 2, 1, text=txt6, bgcolor=color.black, text_color=color.white)"
2UVCeGNX,print_nonrepetedvalues.java,Aravind_reddy10,Java,Saturday 27th of January 2024 06:34:29 AM CDT,"import java.util.*;
class Main{
    public static void main(String args[])
    {
        int n,i;
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter size of array:"");
        n=sc.nextInt();
        int arr[]=new int[n];
        System.out.println(""Enter the array values:"");
        for(i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        find_freq(arr);
    }
    static void find_freq(int arr[])
    {
        int i,j,fre;
        for(i=0;i<arr.length-1;i++)
        {
            fre=1;
            for(j=i+1;j<arr.length;j++)
            {
                if(arr[i]==0)
                {
                    break;
                }
                if(arr[i]==arr[j]&&arr[i]!=0)
                {
                    fre++;
                    arr[j]=0;
                }
                
            }
            if (arr[i] != 0&&fre==1) {
                System.out.printf(""\nThe non-repeted elemnet is : %d"",arr[i]);
            }
        }
        System.out.println(""All values are repeted"");
    }
}"
haFdtVzW,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:31:46 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    
    int stotki = n % 10;
    int desetki = (n / 10) % 10;
    int edinici = (n / 100) % 10;
    
    int pretvrten_broj = 100 * stotki + 10 * desetki + 1 * edinici;
    if(n > pretvrten_broj) {
        cout << n << endl;
    }
    else {
        cout << pretvrten_broj << endl;
    }
    
    return 0;
}
"
NkpkP9a9,printrepeted_values.java,Aravind_reddy10,Java,Saturday 27th of January 2024 06:30:39 AM CDT,"import java.util.*;
class Main{
    public static void main(String args[])
    {
        int n,i;
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter size of array:"");
        n=sc.nextInt();
        int arr[]=new int[n];
        System.out.println(""Enter the array values:"");
        for(i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        find_freq(arr);
    }
    static void find_freq(int arr[])
    {
        int i,j,fre;
        for(i=0;i<arr.length-1;i++)
        {
            fre=1;
            for(j=i+1;j<arr.length;j++)
            {
                if(arr[i]==0)
                {
                    break;
                }
                if(arr[i]==arr[j]&&arr[i]!=0)
                {
                    fre++;
                    arr[j]=0;
                }
                
            }
            if (arr[i] != 0&&fre>1) {
                System.out.printf(""\nThe repeted elemnet is : %d"",arr[i]);
            }
        }
        System.out.println(""All values are unique"");
    }
}"
dhdkdvEE,Цикличен граф,D_L3,C++,Saturday 27th of January 2024 06:24:54 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

bool dfc(vector<bool>& visited, vector<bool>& pathVisited, int start, unordered_map<int, vector<int>>& graph){
    if(pathVisited[start])
        return true;
    pathVisited[start] = true;
    for(int neighbour : graph[start]){
        if(dfc(visited, pathVisited, neighbour, graph))
            return true;
    }
    pathVisited[start] = false;
    visited[start] = true;
    return false;
}

bool isCyclic(unordered_map<int, vector<int>>& graph, int v){
    vector<bool> visited(v, false);
    for(int i = 0; i < v; i++) {
        if(!visited[i]){
            vector<bool> pathVisited(v, false);
            if(dfc(visited, pathVisited, i, graph))
                return true;
        }
    }
    return false;
}

bool play(){
    int v, e;
    int a, b, c;
    cin >> v >> e;
    unordered_map<int, vector<int>> graph;
    
    for(int i = 0; i < e; i++){
        cin >> a >> b >> c;
        graph[a].push_back(b);
    }
    
    return isCyclic(graph, v);
}

int main() {
    int n;
    cin >> n;
    for(int i = 0; i < n; i++){
        if(play())
            cout << ""true "";
        else
            cout << ""false "";
    }
    return 0;
}
"
1PegqEGF,Dundee The Crocodile,D_L3,C++,Saturday 27th of January 2024 06:23:53 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>

using namespace std;


int main() {
    map<string, int> words;
    string word;
    while(cin >> word){
        words[word]++;
    }
    for(auto wordPair : words){
        if(wordPair.second == 1)
            cout << wordPair.first << endl;
    }
}
"
4Jyc17jT,Дървесни операции(втора част),D_L3,C++,Saturday 27th of January 2024 06:23:07 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct Node {
    Node* right = nullptr;
    Node* left = nullptr;
    Node* prev = nullptr;
    int value;
    Node(int value) : value(value) {}
};

struct Tree {
    Node* root = nullptr;

    void addNode(int num, Node* curr) {
        if (num == curr->value)
            return;
        if (curr->value > num) {
            if (curr->left)
                addNode(num, curr->left);
            else {
                curr->left = new Node(num);
                curr->left->prev = curr;
            }
        }
        else {
            if (curr->right)
                addNode(num, curr->right);
            else {
                curr->right = new Node(num);
                curr->right->prev = curr;
            }
        }
    }

    void add(int num) {
        if (!root) {
            root = new Node(num);
            return;
        }
        addNode(num, root);
    }

    Node* find(int n, Node* curr) {
        if (!curr)
            return nullptr;
        if (n == curr->value)
            return curr;
        if (n > curr->value)
            return find(n, curr->right);
        if (n < curr->value)
            return find(n, curr->left);
        return nullptr;
    }
    
    Node* getRightMost(Node* curr){
        
        while(curr->right)
            curr = curr->right;
        
        return curr;
    }

    void remove(int n) {
        Node* node = find(n, root);
        if (!node)
            return;
        
        if(!node->left && !node->right){
            if(root == node)
                root = nullptr;
            else{
                if(node->prev->left == node)
                    node->prev->left = nullptr;
                else
                    node->prev->right = nullptr;
            }
        }
        else if(node->left && node->right){
            Node* rightMost = getRightMost(node);
            int rightMostValue = rightMost->value;
            remove(rightMostValue);
            node->value = rightMostValue;
        }
        else{
            Node* child = node->left ? node->left : node->right;
            child->prev = node->prev;
            if(node == root)
                root = child;
            else{
                if(node->prev->left == node)
                    node->prev->left = child;
                else
                    node->prev->right = child;
            }
            
        }
        
        delete node;

    }

    void print_odd_layers(Node* curr, int layer = 1) {
        if (!curr) {
            return;
        }
        if (layer % 2 == 1)
            cout << curr->value << "" "";
        print_odd_layers(curr->left, layer + 1);
        print_odd_layers(curr->right, layer + 1);
    }

    void print(Node* curr) {
        if (!curr) {
            return;
        }

        cout << curr->value << "" "";
        print(curr->left);
        print(curr->right);
    }
};

int main() {
    Tree tree;
    int n;
    string command;
    int a;
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> command;
        if (command == ""add"") {
            cin >> a;
            tree.add(a);
        }
        else if (command == ""remove"") {
            cin >> a;
            tree.remove(a);
        }
        else if (command == ""print"") {
            tree.print(tree.root);
        }
        else if (command == ""print_odd_layers"") {
            tree.print_odd_layers(tree.root);
        }
    }
    return 0;
}
"
7Mb7UBss,Дървесни операции(първа част),D_L3,C++,Saturday 27th of January 2024 06:22:04 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct Node{
    Node* right = nullptr;
    Node* left = nullptr;
    int value;
    Node(int value) : value(value){}
};

struct Tree{
    Node* root = nullptr;
    
    void addNode(int num, Node* curr){
        if(num == curr->value)
            return;
         if(curr->value > num){
            if(curr->left)
                addNode(num, curr->left);
            else
                curr->left = new Node(num);
        }
        else{
            if(curr->right)
                addNode(num, curr->right);
            else
                curr->right = new Node(num);
        }
    }
    
    void add(int num){
        if(!root){
            root = new Node(num);
            return;
        }
        addNode(num, root);
    }
    
    void print(Node* curr){
        if(!curr){
            return;
        }
        
        cout << curr->value << "" "";
        print(curr->left);
        print(curr->right);
    }
};

int main() {
    Tree tree;
    int n;
    string command;
    int a;
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> command;
        if(command == ""add""){
            cin >> a;
            tree.add(a);
        }
        else{
            tree.print(tree.root);
        }
    }
    return 0;
}
"
uabU80wf,frequency.java,Aravind_reddy10,Java,Saturday 27th of January 2024 06:20:56 AM CDT,"import java.util.*;
class Main{
    public static void main(String args[])
    {
        int n,i;
        Scanner sc=new Scanner(System.in);
        System.out.print(""Enter size of array:"");
        n=sc.nextInt();
        int arr[]=new int[n];
        System.out.println(""Enter the array values:"");
        for(i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        find_freq(arr);
    }
    static void find_freq(int arr[])
    {
        int i,j,fre;
        for(i=0;i<arr.length-1;i++)
        {
            fre=1;
            for(j=i+1;j<arr.length;j++)
            {
                if(arr[i]==0)
                {
                    break;
                }
                if(arr[i]==arr[j]&&arr[i]!=0)
                {
                    fre++;
                    arr[j]=0;
                }
                
            }
            if (arr[i] != 0) {
                System.out.printf(""\nThe value %d is frequency %d times"", arr[i], fre);
            }
        }
    }
}"
cqub0NjK,Facebook приятели,D_L3,C++,Saturday 27th of January 2024 06:20:15 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <map>


using namespace std;

unordered_map<int, vector<int>> graph;

map<int, int> components;

void dfs(int start, vector<bool>& visited, int component){
    visited[start] = true;
    components[component]++;
    for(int neigh : graph[start]){
        if(!visited[neigh])
            dfs(neigh, visited, component);
    }
}

int main() {
    int n, e, k, a, b;
    cin >> n >> e >> k;
    for(int i = 0; i < e; i++){
        cin >> a >> b;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    vector<bool> visited(n, false);
    for(int i = 0; i < n; i++){
        if(!visited[i])
            dfs(i, visited, i);
    }
    int counter = 0;
    for(auto component : components){
        if(component.second % k == 0)
            counter++;
    }
        
    cout << counter;
    
    return 0;
}
"
cUTPyWk1,Untitled,Josif_tepe,C++,Saturday 27th of January 2024 06:17:57 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int zbir = 0;
    for(int i = n; i > 0; i /= 10) {
        int cifra = i % 10;
        zbir += cifra;
    }
    cout << zbir << endl;
    return 0;
}
"
wKJGGTte,Untitled,morington,Python,Saturday 27th of January 2024 06:05:30 AM CDT,"
import multiprocessing
import time


def worker(handler, *args, **kwargs):
    with semaphore:
        try:
            handler(*args, **kwargs)
        except Exception as e:
            print(f""Error, {e}"")
        print(f""Completed {handler.__name__}"")


class ProcessedCallbackDict(dict):
    def __init__(self, *args, **kwargs):
        super(ProcessedCallbackDict, self).__init__(*args, **kwargs)
        self.pool = multiprocessing.Pool()

    def __setitem__(self, key, value):
        super(ProcessedCallbackDict, self).__setitem__(key, value)
        self.pool.apply_async(worker, args=value)


semaphore = multiprocessing.Semaphore(2)


def handler_1(name: str, *args, **kwargs):
    print(f'{name} Handler run...')
    time.sleep(3)
    print(f'Completed {name} handler')


def handler_2(name: str, *args, **kwargs):
    print(f'{name} Handler error run...')
    time.sleep(6)
    raise ValueError(""Test error"")
    print(f'Completed {name} handler')


# Пример использования
queue = ProcessedCallbackDict()

print('Create task 1')
queue['task1'] = (handler_1, '1')
time.sleep(0.5)
print(semaphore)
print('Create task 1')
queue['task2'] = (handler_2, '2')
print(semaphore)
print('Create task 3')
queue['task1'] = (handler_1, '3')
print('Create task 4')
queue['task1'] = (handler_2, '4')
print('Create task 5')
queue['task1'] = (handler_1, '5')

queue.pool.close()
queue.pool.join()
"
