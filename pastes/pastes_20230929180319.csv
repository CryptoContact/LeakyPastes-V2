id,title,username,language,date,content
v3vAUDYz,Końcówka animacji petów,drakon-firestone,Lua,Friday 29th of September 2023 12:57:01 PM CDT,"	for i, pet in pairs(playerFolder:GetChildren()) do
		-- który wiersz i kolumna dla peta
		local row = math.floor( (i - 1) / petsPerRow)
		local col = (i - 1) % petsPerRow
		
        -- rozmiary gracza, peta i liczba petów w linijce
		local characterSize = character:GetExtentsSize()
		local petSize = pet:GetExtentsSize()
		local petsInRow = math.min(petCount - row * petsPerRow, petsPerRow)

		-- położenie x, y i z peta
		local x = (col - petsInRow/2 + 0.5) * offsetX
		local y = petSize.Y/2 - characterSize.Y/2
		local z = (row * offsetZ) + offsetPlayer
		
        -- animacja chodzenia albo stania w zależności od typu peta
		if character.Humanoid.MoveDirection.Magnitude > 0 then
			if pet:FindFirstChild(""Walks"") then
				pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(
					character.PrimaryPart.CFrame * CFrame.new(x, y + sin, z) * CFrame.fromEulerAnglesXYZ(0,0,cos),0.1))
			elseif pet:FindFirstChild(""Flying"") then
				pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(
					character.PrimaryPart.CFrame * CFrame.new(x, y / 2 +math.sin(time()*3)+1, z), 0.1))
			end
		else
			if pet:FindFirstChild(""Walks"") then
				pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(
					character.PrimaryPart.CFrame * CFrame.new(x, y, z) ,0.1))
			elseif pet:FindFirstChild(""Flying"") then
				pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(
					character.PrimaryPart.CFrame * CFrame.new(x, y / 2 + math.sin(time()*3)+1, z) , 0.1))
			end
		end
	end"
9J7rBvst,Ticket Combination,Spocoman,C#,Friday 29th of September 2023 12:56:01 PM CDT,"using System;

namespace TicketCombination
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            for (char a = 'B'; a <= 'L'; a += (char)2)
            {
                for (char b = 'f'; b >= 'a'; b--)
                {
                    for (char c = 'A'; c <= 'C'; c++)
                    {
                        for (int d = 1; d <= 10; d++)
                        {
                            for (int e = 10; e > 0; e--)
                            {
                                if (--n == 0)
                                {
                                    Console.WriteLine($""Ticket combination: {a}{b}{c}{d}{e}"");
                                    Console.WriteLine($""Prize: {a + b + c + d + e} lv."");
                                    Environment.Exit(0);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}"
wkJzTZst,Scraping Youtube Video Titles,metalx1000,Bash,Friday 29th of September 2023 12:49:50 PM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2023  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

[[ ""$1"" ]] && url=""$1"" || url=""$(xclip -o)""
[[ ""$url"" != ""https://""* ]] && read -p ""Please Enter Video URL: "" url
[[ ""$url"" != ""https://""* ]] || exit 1

wget -qO- ""$url""|tr "","" ""\n""|grep '^""title"":""'|cut -d\"" -f4
"
ZfkZwPGE,Untitled,Derga,C++,Friday 29th of September 2023 12:37:56 PM CDT,"#include <iostream>

using namespace std;

bool IsGood(uint64_t num) {
	char last_digit = '0' + (num % 2);
	num /= 2;
	int cnt = 1;
	while (num > 0)
	{
		char digit = '0' + (num % 2);
		num /= 2;

		if (last_digit != digit) {
			cnt++;
			last_digit = digit;
		}
		if (cnt > 3) {
			return false;
		}
	}

	return cnt == 3;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	uint64_t from;
	uint64_t to;
	cin >> from >> to;

	uint64_t grow_days_cnt = 0;

	while (from <= to) {
		if (IsGood(from)) {
			++grow_days_cnt;
		}
		++from;
	}

	cout << grow_days_cnt;

    return 0;
}"
uVCvjyFh,go 1.12 compile errors,iconoclasthero,Bash,Friday 29th of September 2023 12:03:00 PM CDT,"/usr/local/bin/go
/usr/bin/go
/bin/go
go version go1.21.1 linux/amd64
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/help.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/context.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/build.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/help.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/guesswidth_unix.go:7:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/model.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:9:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:10:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/context.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/options.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/kong.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/build.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/interpolate.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/context.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/context.go:9:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/build.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/guesswidth_unix.go:10:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/mapper.go:15:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/camelcase.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/camelcase.go:7:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/alecthomas/kong@v0.8.0/guesswidth_unix.go:11:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
cmd/run/state.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/atotto/clipboard@v0.1.4/clipboard_unix.go:12:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/gopkg.in/yaml.v3@v3.0.1/decode.go:20:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/gopkg.in/yaml.v3@v3.0.1/yaml.go:30:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/pkg/errors@v0.9.1/stack.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/pkg/errors@v0.9.1/stack.go:7:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/internal/moreatomic/syncmod/syncmod.go:11:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/api/rate/rate.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/api/rate/emoji.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/utils/httputil/client.go:9:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/lucasb-eyer/go-colorful@v1.2.0/hexcolor.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/lucasb-eyer/go-colorful@v1.2.0/colors.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/lucasb-eyer/go-colorful@v1.2.0/colorgens.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/golang.org/x/sys@v0.11.0/unix/syscall_linux.go:15:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/gdamore/tcell/v2@v2.6.0/stdin_unix.go:24:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/rivo/tview@v0.0.0-20230621164836-6cc0565babaf/form.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/godbus/dbus/v5@v5.1.0/auth.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/godbus/dbus/v5@v5.1.0/auth_sha1.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/godbus/dbus/v5@v5.1.0/auth_sha1.go:7:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/godbus/dbus/v5@v5.1.0/auth_external.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/godbus/dbus/v5@v5.1.0/transport_nonce_tcp.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
ui/login_form.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/utils/ws/conn.go:4:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/gorilla/websocket@v1.5.0/compression.go:8:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/gorilla/websocket@v1.5.0/client.go:10:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/gorilla/websocket@v1.5.0/client.go:16:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
../../../go/pkg/mod/github.com/diamondburned/arikawa/v3@v3.3.2/api/webhook/interactionserver.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
cmd/run/attachment_image.go:5:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
cmd/run/attachment_image.go:6:2: github.com/alessio/shellescape@v1.4.2: GOPROXY list is not the empty string, but contains no entries
"
1wevTcU4,[IoT] Practical 9 - Text based personal assistant,ant1sipater,Python,Friday 29th of September 2023 12:02:04 PM CDT,"import webbrowser
import datetime, calendar
import urllib.request
import re
import requests
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from bs4 import BeautifulSoup


def openLogin():
    website = input(""You want to login page of which website? "").lower() + "" login page""
    url = ""https://www.google.com/search""
    headers = {
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82""
    }
    parameters = {""q"": website}
    soup = BeautifulSoup(
        requests.get(url, headers=headers, params=parameters).text, ""html.parser""
    )
    first_link = soup.find(id=""search"").find(""a"")
    print(""Opening login page"")
    webbrowser.open(first_link[""href""])


def sendMail(sender_mail_id, app_password, receiver_mail_id):
    s = smtplib.SMTP(""smtp.gmail.com"", 587)
    s.starttls()
    s.login(sender_mail_id, app_password)
    message = MIMEMultipart()
    message[""From""] = sender_mail_id
    message[""To""] = receiver_mail_id
    message[""Subject""] = input(""Enter subject of mail: "")
    body = input(""Enter message: "")
    message.attach(MIMEText(body, ""plain""))
    try:
        s.sendmail(sender_mail_id, receiver_mail_id, message.as_string())
        print(""Mail sent!"")
    except Exception as e:
        print(f""An error occurred: {e}"")
    s.quit()


def takeCommand():
    cmd = input(""\nUser what's your command? "")
    return cmd


def tellDate():
    date = d = datetime.date.today()
    print(f""Today is {date}"")


def tellDay():
    d = datetime.datetime.now()
    day = d.strftime(""%A"")
    print(f""The day is {day}"")


def tellTime():
    time = str(datetime.datetime.now())
    hours = time[11:13]
    mins = time[14:16]
    print(""The time is "" + hours + "":"" + mins)


def greet():
    print(""\nWelcome user I am Adam your personal virtual assistant"")


def ai():
    greet()

    while True:
        query = takeCommand().lower()

        if ""open google"" in query:
            print(""Opening Google"")
            ask = input(""What do you want to search? "").replace("" "", ""+"")
            print(""Displaying result"")
            webbrowser.open(""https://www.google.com/search?q="" + ask)

        elif ""open wikipedia"" in query:
            print(""Open the wikipedia "")
            ask = input(""What do you want to search? "")
            webbrowser.open(""www.wikipedia.com/wiki/"" + ask)

        elif ""open youtube"" in query:
            print(""Openning youtube"")
            ask = input(""What do you want to play? "").replace("" "", ""+"")
            search_result = ""https://www.youtube.com/results?search_query="" + ask
            html = urllib.request.urlopen(search_result)
            video_ids = re.findall(r""watch\?v=(\S{11})"", html.read().decode())
            video = ""https://www.youtube.com/watch?v="" + video_ids[0]
            print(""Playing video"")
            webbrowser.open(video)

        elif ""open login page"" in query:
            openLogin()

        elif ""send mail"" in query:
            sm = input(""Enter sender mail id: "").lower()
            rcm = input(""Enter receiver mail id: "").lower()
            psd = input(""Enter password: "")
            sendMail(sm, psd, rcm)

        elif ""the day"" in query:
            tellDay()

        elif ""the date"" in query:
            tellDate()

        elif ""time now"" in query:
            tellTime()

        elif ""bye"" in query:
            print(""Bye user."")
            break

        else:
            print(""Command not recognised. Please enter appropriate command"")

ai()"
M0qbrzBU,ST Hub Profile,kramerican,CSS,Friday 29th of September 2023 12:00:01 PM CDT,"<style type=""text/css"">
body {  background: url(https://i.pinimg.com/originals/70/98/9e/70989ecb0258f566b9af13e876cf7dce.gif) no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;}
.synopsis {opacity: 1;}
.is-options {font-color: black; opacity: 1 !important;}
.directory-info {font-color: black;}
.profile-card .title { font-size: 0 !important }
.profile-card .title:after { content: ""Chief Trivia Officer (& Business Applications Lead)""; font-size: 1rem }
.profile-card .department { font-size: 0 !important }
.is-rewards-give {font-size: 0 !important ;}
.is-rewards-give:after {content:""GIVE KEVIN RECOGNITION OR ELSE!!""; font-size: 1rem;}
.profile-card .company { font-size: 0 !important }
.profile-card .company:after { content: ""- Kramerica Industries""; font-size: 1rem }
.standard-wrapper {height: 100% !important;}
ul.people-quick-results {
    display: flex !important;
    width: 100% !important;
    flex-wrap: wrap !important;
}
</style>
<p>If someone was going to figure out how to break the HUB... you found him</p>
"
TieQd6Va,[IoT] Practical 7 - Telegram Bot,ant1sipater,Python,Friday 29th of September 2023 11:59:02 AM CDT,"import time, datetime
import RPi.GPIO as GPIO
import telepot
from telepot.loop import MessageLoop

led = 26
now = datetime.datetime.now()
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

#LED
GPIO.setup(led, GPIO.OUT)
GPIO.output(led, 0) #Off initially
def action(msg):
    chat_id = msg['chat']['id']
    command = msg['text']
    
    print('Received: %s' % command)
    
    if 'on' in command:
        message = 'Turned on'
        if 'led' in command:
            message = message + ' led'
            GPIO.output(led, 1)
        telegram_bot.sendMessage(chat_id, message)
        
    if 'off' in command:
        message = 'Turned off'
        if 'led' in command:
            message = message + ' led'
            GPIO.output(led, 0)
        telegram_bot.sendMessage(chat_id, message)

telegram_bot = telepot.Bot('6627132833:AAH3GtaajsAh8zTN9MvnWypZUyKWNJ5KntI')
print(telegram_bot.getMe())

MessageLoop(telegram_bot, action).run_as_thread()
print(""Up and running..."")

while 1:
    time.sleep(5)"
5Lv9afRD,[IoT] Practical 4 - Interfacing 8x8 matrix with Raspberry Pi,ant1sipater,Python,Friday 29th of September 2023 11:57:36 AM CDT,"import re
import time
import argparse

from luma.led_matrix.device import max7219
from luma.core.interface.serial import spi, noop
from luma.core.render import canvas
from luma.core.virtual import viewport
from luma.core.legacy import text, show_message
from luma.core.legacy.font import proportional, CP437_FONT, TINY_FONT, SINCLAIR_FONT, LCD_FONT


def demo(n, block_orientation, rotate, msg):
    # create matrix device
    serial = spi(port=0, device=0, gpio=noop())
    device = max7219(serial, cascaded=n or 1, block_orientation=block_orientation, rotate=rotate or 0)
    show_message(device, msg, fill=""white"", font=proportional(LCD_FONT), scroll_delay=0.1)
    time.sleep(3)
    pass

if __name__ == ""__main__"":    
    try:
        text_display = raw_input(""Enter message to be display on 8x8 matrix = "")
        demo(1, 0, 0, text_display)
    except KeyboardInterrupt:
        pass
    finally:
        print ""Program exit..."""
3bcHtnMS,[IoT] Practical 5 - Displaying time over 4-digit 7-segment display using Raspberry Pi,ant1sipater,Python,Friday 29th of September 2023 11:53:50 AM CDT,"import time
import datetime
from lib import tm1637 as obj
Display = obj.TM1637(2,3,5)
Display.Clear()
while(True):
    now = datetime.datetime.now()
    hour = now.hour
    minute = now.minute
    second = now.second
    Display.Clear()
    val = [(int(hour / 10)), (hour % 10), (int(minute / 10)), (minute % 10) ]
    Display.Show(val)
    Display.ShowDoublepoint((second % 2))
    time.sleep(0.25)"
KNwDqm6E,[IoT] Practical 2 - Displaying different LED patterns with Raspberry Pi,ant1sipater,Python,Friday 29th of September 2023 11:51:54 AM CDT,"import RPI.GPIO as GPIO
from time import sleep
GPIO.setwarnings(False)
GPIO.setmode(GPIO.BOARD)
GPIO.setup(8, GPIO.OUT, initial=GPIO.LOW)
GPIO.setup(38, GPIO.OUT, initial=GPIO.LOW)
while True:
    GPIO.output(8, GPIO.HIGH)
    sleep(0.5)
    GPIO.output(8, GPIO.LOW)
    sleep(0.5)
    GPIO.output(38, GPIO.HIGH)
    sleep(0.5)
    GPIO.output(38, GPIO.LOW)
    sleep(0.5)"
pzgxujkF,discordo / sudo compile errors,iconoclasthero,Bash,Friday 29th of September 2023 11:36:07 AM CDT,"$ sudo go build .
[sudo] password for bvargo: 
go: downloading github.com/alecthomas/kong v0.8.0
go: downloading github.com/zalando/go-keyring v0.2.3
go: downloading gopkg.in/yaml.v3 v3.0.1
go: downloading github.com/diamondburned/arikawa/v3 v3.3.2
go: downloading github.com/atotto/clipboard v0.1.4
go: downloading github.com/gdamore/tcell/v2 v2.6.0
go: downloading github.com/rivo/tview v0.0.0-20230621164836-6cc0565babaf
go: downloading github.com/godbus/dbus/v5 v5.1.0
go: downloading github.com/gdamore/encoding v1.0.0
go: downloading github.com/lucasb-eyer/go-colorful v1.2.0
go: downloading golang.org/x/sys v0.11.0
go: downloading github.com/mattn/go-runewidth v0.0.15
go: downloading golang.org/x/text v0.12.0
go: downloading golang.org/x/term v0.11.0
go: downloading github.com/pkg/errors v0.9.1
go: downloading golang.org/x/time v0.3.0
go: downloading github.com/gorilla/websocket v1.5.0
go: downloading github.com/rivo/uniseg v0.4.4
go: downloading github.com/gorilla/schema v1.2.0
# github.com/rivo/uniseg
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:137:20: error: expected ‘(’
  137 | func propertySearch[E interface{ [3]int | [4]int }](dictionary []E, r rune) (result E) {
      |                    ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:137:23: error: expected ‘]’
  137 | func propertySearch[E interface{ [3]int | [4]int }](dictionary []E, r rune) (result E) {
      |                       ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:137:23: error: expected ‘;’ or newline after top level declaration
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:140:9: error: expected declaration
  140 |         to := len(dictionary)
      |         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:141:9: error: expected declaration
  141 |         for to > from {
      |         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:143:17: error: expected declaration
  143 |                 cpRange := dictionary[middle]
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:144:17: error: expected declaration
  144 |                 if int(r) < cpRange[0] {
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:146:25: error: expected declaration
  146 |                         continue
      |                         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:147:17: error: expected declaration
  147 |                 }
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:148:17: error: expected declaration
  148 |                 if int(r) > cpRange[1] {
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:150:25: error: expected declaration
  150 |                         continue
      |                         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:151:17: error: expected declaration
  151 |                 }
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:152:17: error: expected declaration
  152 |                 return cpRange
      |                 ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:153:9: error: expected declaration
  153 |         }
      |         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:154:9: error: expected declaration
  154 |         return
      |         ^
/root/go/pkg/mod/github.com/rivo/uniseg@v0.4.4/properties.go:155:1: error: expected declaration
  155 | }
      | ^

"
nR8BKzZN,Console Advanced Sources (Local),Gamer_blox,Lua,Friday 29th of September 2023 11:28:42 AM CDT,"local = new.instance(""Connect"")
connect HTML = ""https://site8560.wordpress.com""

return connect()"
7NMCKjB1,cars_task_pandas,GeorgiLukanov87,Python,Friday 29th of September 2023 11:23:59 AM CDT,"# main.py
import pandas as pd
import json
from logger import setup_logger


class CarDataAnalyzer:
    def __init__(self, input_json_file, output_file):
        self.input_json_file = input_json_file
        self.output_file = output_file
        self.data = None
        self.logger = setup_logger()

    # Create method to read the input json file
    def load_data(self):
        try:
            with open(self.input_json_file, 'r') as file:
                self.data = json.load(file)
            self.logger.info(f""Loaded data from {self.input_json_file}"")

        # Raise exception if json not found
        except FileNotFoundError:
            self.logger.error(f""File not found: {self.input_json_file}"")
            raise

        # Raise exception if something is wrong with the json file
        except json.JSONDecodeError:
            self.logger.error(f""JSON decoding error in {self.input_json_file}"")
            raise

    def analyze_data(self):
        if self.data is None:
            self.logger.error(""No data loaded."")
            return

        # Convert data to a DataFrame using pandas
        df_car_data = pd.DataFrame(self.data)

        # Format the ""Year"" column to display only the year part
        df_car_data['Year'] = pd.to_datetime(df_car_data['Year']).dt.year

        unique_cars = df_car_data['Name'].nunique()
        average_hp = df_car_data['Horsepower'].mean()

        # Extract the top 5 heaviest cars with only ""Name"" and ""Weight_in_lbs"" columns
        heaviest_cars = df_car_data.nlargest(5, 'Weight_in_lbs')[['Weight_in_lbs', 'Name']]
        cars_by_manufacturer = df_car_data['Origin'].value_counts()

        # Count the number of cars by year and sort in reversed order
        cars_by_year = df_car_data['Year'].value_counts().sort_index(ascending=True)

        # Print results
        print('----------------------------------------------')
        print(f""Number of Unique Cars: {unique_cars}"")
        print(f""Average Horsepower of All Cars: {average_hp:.2f}"")
        print('----------------------------------------------')
        print(""Top 5 Heaviest Cars (Name and Weight):\n"")
        print(heaviest_cars.to_string(index=False))
        print('----------------------------------------------')
        print(""Number of Cars by Manufacturer:\n"")
        print(cars_by_manufacturer.to_string())
        print('----------------------------------------------')
        print(""Number of Cars by Year:\n"")
        print(cars_by_year.to_string())

        # Save data frame to csv file
        df_car_data.to_csv(self.output_file, index=False)
        self.logger.info(f""Saved data to {self.output_file}"")

==================================================================================================
# logger.py
import logging


# Create logger
def setup_logger():
    logger = logging.getLogger('CarDataAnalyzer')
    logger.setLevel(logging.DEBUG)
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')

    ch = logging.StreamHandler()
    ch.setFormatter(formatter)
    logger.addHandler(ch)

    return logger

==================================================================================================
# controller.py
from main import CarDataAnalyzer

if __name__ == ""__main__"":
    input_json_file = ""cars.json""
    output_result_file = ""car_data_result_output.csv""

    analyzer = CarDataAnalyzer(input_json_file, output_result_file)

    try:
        analyzer.load_data()
        analyzer.analyze_data()

    except Exception as err:
        print(f""An error occurred: {str(err)}"")

=================================================================================================="
G5ZXygzX,Parsing data docx to html,nicuf,Python,Friday 29th of September 2023 11:04:02 AM CDT,"import docx
import re

def run_get_style(run) -> str:
    if run.bold:
        return ""bold""
    elif run.italic:
        return ""italic""
    else:
        return ""normal""

def detect_fonts(document: docx.Document) -> None:
    with open(""bebe.html"", ""w"") as f:
        for paragraph in document.paragraphs:
            runs = paragraph.runs
            if not runs:
                continue
            current_style = None
            current_text = """"

            for run in runs:
                run_style = run_get_style(run)
                if run_style == current_style:
                    current_text += run.text
                else:
                    if current_style:
                        if current_style == ""bold"":
                            f.write(f""<b>{current_text}</b>"")
                        elif current_style == ""italic"":
                            f.write(f""<em>{current_text}</em>"")
                        else:
                            f.write(current_text)
                    current_style = run_style
                    current_text = run.text

            if current_style:
                if current_style == ""bold"":
                    f.write(f""<b>{current_text}</b>"")
                elif current_style == ""italic"":
                    f.write(f""<em>{current_text}</em>"")
                else:
                    f.write(current_text)

            f.write(""</p>\n"")  # Add a closing paragraph tag at the end of each paragraph

    # Add a paragraph tag at the beginning of each line
    with open(""bebe.html"", ""r"") as f:
        content = f.read()

    content = re.sub(r""^[ \t]*"", ""<p>"", content, flags=re.MULTILINE)

    with open(""bebe.html"", ""w"") as f:
        f.write(content)

def main():
    document = docx.Document(""bebe.docx"")
    detect_fonts(document)

if __name__ == ""__main__"":
    main()
"
R0zQZgV8,Scratchpad to TheWay converter,IndexCase,Python,Friday 29th of September 2023 10:59:13 AM CDT,"#By IndexCase 2023

import re
import json
import os
import time

def dms_to_dd(d, m, s=0):
    """"""Convert degrees, minutes, and seconds to decimal degrees.""""""
    return d + m / 60 + s / 3600

def parse_waypoint(waypoint_raw):
    lines = waypoint_raw.strip().split(""\n"")

    # Look for the WP: line
    wp_name = None
    if lines[0].startswith(""WP:""):
        wp_name = lines[0].split("":"", 1)[1].strip()
        # Remove the WP: line to ensure the following code works as expected
        lines = lines[1:]

    # Look for DMS or DMM format
    match_lat = re.search(r""N (\d+)°(\d+)'([\d.]+)?"", lines[0])
    match_long = re.search(r""E (\d+)°(\d+)'([\d.]+)?"", lines[0])
    
    # Try DMM if DMS didn't match
    if not match_lat or not match_long:
        match_lat = re.search(r""N (\d+)°([\d.]+)'"", lines[0])
        match_long = re.search(r""E (\d+)°([\d.]+)'"", lines[0])
        if match_lat and match_long:
            lat = dms_to_dd(float(match_lat.group(1)), float(match_lat.group(2)))
            long = dms_to_dd(float(match_long.group(1)), float(match_long.group(2)))
        else:
            raise ValueError(f""Failed to parse lat-long from: \n{lines[0]}"")
    else:
        lat = dms_to_dd(float(match_lat.group(1)), float(match_lat.group(2)), float(match_lat.group(3) or 0))
        long = dms_to_dd(float(match_long.group(1)), float(match_long.group(2)), float(match_long.group(3) or 0))

    # Extract elevation in feet
    match = next((re.search(r""(\d+)m"", line) for line in lines if re.search(r""(\d+)m"", line)), None)
    if not match:
        raise ValueError(f""Failed to parse elevation from waypoint data:\n{waypoint_raw}"")
    elevation = float(match.group(1))

    return {
        ""name"": wp_name,   # It could be None here
        ""lat"": lat,
        ""long"": long,
        ""elev"": elevation
    }

def process_waypoints():
    with open(input_file_path, 'r', encoding='utf-8') as file:
        data = file.read()

    waypoints_raw = [chunk for chunk in data.strip().split(""\n\n"") if len(chunk.split(""\n"")) > 1]
    print(f""Waypoints found: {waypoints_raw}"")

    waypoints = []
    for idx, waypoint_raw in enumerate(waypoints_raw):
        try:
            waypoint = parse_waypoint(waypoint_raw)
            if not waypoint['name']:  # if no name is provided, use a default one
                waypoint['name'] = ""WAYPOINT"" + str(idx)
            waypoints.append(waypoint)
        except ValueError as e:
            print(f""Skipped waypoint due to error: {e}"")
            continue

    json_output = []
    for idx, waypoint in enumerate(waypoints):
        waypoint_name = waypoint['name']
        json_output.append({
            ""id"": idx + 2,
            ""name"": waypoint_name,
            ""lat"": round(waypoint[""lat""], 9),
            ""long"": round(waypoint[""long""], 9),
            ""elev"": round(waypoint[""elev""], 2)  # Rounded to two decimal places for feet
        })

    output_file_path = os.path.join(script_directory, 'scratchpad.tw')
    with open(output_file_path, 'w') as output_file:
        output_file.write(json.dumps(json_output, separators=(',', ':')))

script_directory = os.path.dirname(os.path.abspath(__file__))
input_file_path = os.path.join(script_directory, '0000.txt')

# Process waypoints once on start
process_waypoints()

last_mod_time = os.path.getmtime(input_file_path)

while True:
    try:
        current_mod_time = os.path.getmtime(input_file_path)
        if current_mod_time != last_mod_time:
            process_waypoints()
            last_mod_time = current_mod_time

        time.sleep(10)  # Check for changes every 10 seconds
    except KeyboardInterrupt:
        print(""Stopping script."")
        break
"
xtbQJPw6,Untitled,Locative,SQL,Friday 29th of September 2023 10:55:34 AM CDT,"UPDATE bonus SET gold=gold+2750 WHERE id=1507620; -- [Rebachain] (GUID: 269145) Аккаунт: reberalo (id: 1507620)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1507620, NOW(), 2750, '2750 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1708031; -- [Weakmist] (GUID: 309726) Аккаунт: Xenohart (id: 1708031)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1708031, NOW(), 2750, '2750 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=1770582; -- [Shadowsoul] (GUID: 213160) Аккаунт: Cristalline (id: 1770582) 
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1770582, NOW(), 2750, '2750 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=810625; -- [Gødhead] (GUID: 316233) Аккаунт: ddee123 (id: 810625)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (810625, NOW(), 2750, '2750 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+2750 WHERE id=626832; -- [Гномов] (GUID: 307501) Аккаунт: Saccna (id: 626832)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (626832, NOW(), 2750, '2750 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1859665; -- [Wolfrik] (GUID: 433816) Аккаунт: eimaikourada (id: 1859665)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1859665, NOW(), 1000, '1000 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1850537; -- [Prasinos] (GUID: 309387) Аккаунт: iasonas79 (id: 1850537)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850537, NOW(), 1000, '1000 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1850483; -- [Clopydown] (GUID: 379683) Аккаунт: clopyright (id: 1850483) 
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850483, NOW(), 1000, '1000 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1850578; -- [Mallena] (GUID: 398207) Аккаунт: vavania (id: 1850578) 
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850578, NOW(), 1000, '1000 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+1000 WHERE id=1850485; -- [Snapshot] (GUID: 309304) Аккаунт: iasonas78 (id: 1850485)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1850485, NOW(), 1000, '1000 золотых бонусов за 7-ой сезон испытания.');

UPDATE bonus SET gold=gold+500 WHERE id=486863; -- [Winxø] (GUID: 5124620) Аккаунт: Gary2000 (id: 486863)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (486863, NOW(), 500, '500 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=787774; -- [Lampz] (GUID: 6889670) Аккаунт: rone2 (id: 787774)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (787774, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1269105; -- [Дилвизит] (GUID: 5370558) Аккаунт: swagasega98091 (id: 1269105)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1269105, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1416365; -- [Epostasy] (GUID: 6813887) Аккаунт: Ishron (id: 1416365)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1416365, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1296686; -- [Ünförgiväßle] (GUID: 6321991) Аккаунт: ediklawrov (id: 1296686)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1296686, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1727869; -- [Ignorant] (GUID: 6816398) Аккаунт: firas123 (id: 1727869) 
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1727869, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1540361; -- [Elldiablo] (GUID: 7035586) Аккаунт: revayergame (id: 1540361)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1540361, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1327834; -- [Zubiri] (GUID: 6504671) Аккаунт: bryanzica (id: 1327834)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1327834, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=717253; -- [Atombaby] (GUID: 5721106) Аккаунт: thymurder (id: 717253)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (717253, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1820568; -- [Nèxtaz] (GUID: 4951892) Аккаунт: flashismad11 (id: 1820568)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1820568, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=594278; -- [Чарджнаодин] (GUID: 2646007) Аккаунт: gifton55 (id: 594278)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (594278, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=900031; -- [Omnimonke] (GUID: 5215224) Аккаунт: nikita20155 (id: 900031)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (900031, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1324477; -- [Wendor] (GUID: 6674574) Аккаунт: MarshalLegion (id: 1324477)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1324477, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1349499; -- [Охотница] (GUID: 7028256) Аккаунт: Shizolda (id: 1349499)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1349499, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=415156; -- [Sweetdance] (GUID: 6610527) Аккаунт: jmotes69 (id: 415156)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (415156, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1570811; -- [Desteny] (GUID: 6595385) Аккаунт: Drewdleberg (id: 1570811)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1570811, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1442028; -- [Linehalt] (GUID: 6957918) Аккаунт: Reneis (id: 1442028)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1442028, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1857112; -- [Truebesthunt] (GUID: 7048790) Аккаунт: howtoplaymm (id: 1857112)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1857112, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1737032; -- [Drumandbass] (GUID: 6888754) Аккаунт: Dimdim1986 (id: 1737032)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1737032, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');

UPDATE bonus SET gold=gold+250 WHERE id=1699962; -- [Bylkinhealxx] (GUID: 6779205) Аккаунт: bylkintime (id: 1699962)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1699962, NOW(), 250, '250 золотых бонусов за 22-ой сезон арены 2х2.');


3х3

UPDATE bonus SET gold=gold+1200 WHERE id=1737032; -- [Drumandbass] (GUID: 6888754) Аккаунт: Dimdim1986 (id: 1737032)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1737032, NOW(), 1200, '1200 золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+1200 WHERE id=390896; -- [Waix] (GUID: 6666527) Аккаунт: gutol (id: 390896)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (390896, NOW(), 1200, '1200 золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+1200 WHERE id=415156; -- [Sweetdance] (GUID: 6610527) Аккаунт: jmotes69 (id: 415156)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (415156, NOW(), 1200, '1200 золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+500  WHERE id=1726453; -- [Hølyflïp] (GUID: 6750600) Аккаунт: possessed (id: 1726453)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1726453, NOW(), 500 , '500  золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+500  WHERE id=1539566; -- [Cønny] (GUID: 6069435) Аккаунт: thrazhix (id: 1539566)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1539566, NOW(), 500 , '500  золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+500  WHERE id=486863; -- [Winxø] (GUID: 5124620) Аккаунт: Gary2000 (id: 486863)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (486863, NOW(), 500 , '500  золотых бонусов за 22-ой сезон арены 3х3.');

UPDATE bonus SET gold=gold+500  WHERE id=1152625; -- [Zonq] (GUID: 6825320) Аккаунт: eyes1234 (id: 1152625)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1152625, NOW(), 500 , '500  золотых бонусов за 22-ой сезон арены 3х3.');


"
4AhJDf6N,Convert docx to html (parsing data),nicuf,Python,Friday 29th of September 2023 10:52:45 AM CDT,"import docx


def run_get_style(run) -> str:
  """"""Returns the font style of the run.

  Does not consider a paragraph style that makes the whole Paragraph bold or italic.

  Args:
    run: A docx.Run object.

  Returns:
    A string indicating the font style of the run: ""bold"", ""italic"", or ""normal"".
  """"""

  if run.bold:
    return ""bold""
  elif run.italic:
    return ""italic""
  else:
    return ""normal""


def detect_fonts(document: docx.Document) -> None:
  """"""Detects the font styles in the document and writes them to a HTML file.

  Args:
    document: A docx.Document object.
  """"""

  with open(""bebe.html"", ""w"") as f:
    current_style = None
    current_text = """"
    for paragraph in document.paragraphs:
      if paragraph.runs:
        run_style = run_get_style(paragraph.runs[0])
        if current_style != run_style:
          if current_text:
            if current_style == ""bold"":
              f.write(f""<p><b>{current_text}</b></p>\n"")
            elif current_style == ""italic"":
              f.write(f""<p><em>{current_text}</em></p>\n"")
            else:
              f.write(f""<p>{current_text}</p>\n"")
          current_style = run_style
          current_text = paragraph.text
      elif paragraph.text == ""Bebe este așa"":
        f.write(f""<p><b>{paragraph.text}</b></p>\n"")
      elif paragraph.text:
        current_text += paragraph.text
    if current_text:
      if current_style == ""bold"":
        f.write(f""<p><b>{current_text}</b></p>\n"")
      elif current_style == ""italic"":
        f.write(f""<p><em>{current_text}</em></p>\n"")
      else:
        f.write(f""<p>{current_text}</p>\n"")


def main():
  document = docx.Document(""bebe.docx"")
  detect_fonts(document)


if __name__ == ""__main__"":
  main()
"
TmpYxWa1,i feel postponed,glokyfull,Motorola 68000 HiSoft Dev,Friday 29th of September 2023 10:46:04 AM CDT,"all is postponed
i have some health problem i sleep a lot
i m zombie the rest of the time
the fun fact is i have less medication
so i don't know where is the problem
i can't code anything for the moment
the scroller will probably never finished and other sources"
TyKhE96b,Untitled,Fhernd,JavaScript,Friday 29th of September 2023 10:40:12 AM CDT,"import React, { useState, useRef } from 'react';
import { GoogleMap, LoadScript } from '@react-google-maps/api';

function MapComponent() {
  const [zoom, setZoom] = useState(8); // Initial zoom level
  const mapRef = useRef(null);

  const handleZoomChanged = () => {
    if (mapRef.current) {
      const newZoom = mapRef.current.getZoom();
      setZoom(newZoom);
    }
  };

  return (
    <LoadScript googleMapsApiKey=""YOUR_GOOGLE_MAPS_API_KEY"">
      <GoogleMap
        id=""example-map""
        mapContainerStyle={{ width: '400px', height: '400px' }}
        center={{ lat: -34.397, lng: 150.644 }}
        zoom={zoom}
        onLoad={map => mapRef.current = map} // Store the map object in ref once loaded
        onZoomChanged={handleZoomChanged}
      />
    </LoadScript>
  );
}

export default MapComponent;
"
E0s1RUBM,Untitled,Fhernd,JavaScript,Friday 29th of September 2023 10:31:43 AM CDT,"import React, { useState } from 'react';
import { GoogleMap, LoadScript } from '@react-google-maps/api';

function MapComponent() {
  const [zoom, setZoom] = useState(8); // Initial zoom level
  
  const handleZoomChanged = (map) => {
    setZoom(map.getZoom());
  }

  return (
    <LoadScript googleMapsApiKey=""YOUR_GOOGLE_MAPS_API_KEY"">
      <GoogleMap
        id=""example-map""
        mapContainerStyle={{ width: '400px', height: '400px' }}
        center={{ lat: -34.397, lng: 150.644 }}
        zoom={zoom}
        onZoomChanged={(map) => handleZoomChanged(map)}
      />
    </LoadScript>
  );
}

export default MapComponent;
"
tLmwiq4U,Untitled,Josif_tepe,C++,Friday 29th of September 2023 10:31:28 AM CDT,"#include <iostream>
using namespace std;
int main() {
    
 
    int x;
    x = 6;
    
    int y;
    y = 10;
    
    cout << x << endl;
    cout << y << endl;
  
    
    
    return 0;
}
"
7D0kDs65,Untitled,Zeinab_Hamdy,C++,Friday 29th of September 2023 10:13:36 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */

vector < pair < ll , ll  > > vec;

vector < vector < ll > > dp ;


int n ;
const ll invalid=2e18 ;

//  0 -> close 
//  1 -> open


ll rec(int idx , int open  ){
    
    if(idx >= n-1 ) {
        if(idx == n-1){
            if(open)
                return vec[idx].fi;

            return invalid;
        }
        return invalid;
    }

    ll &ret = dp[idx][open];
    if(~ret)
        return ret ;

    ret = invalid;

    if(open){
        //  close ? 
        ret = min(ret , rec(idx+1 , 0 ) + vec[idx].fi );;

        //  remain open 
        ret = min(ret , rec(idx+1 , 1));
    }
    else {
        ret = min(ret , rec(idx+2 , 1) -vec[idx].fi);
    }
    
   return ret ;
}

vector < int > ans ;
int teams = 1 ;
void build (int idx , int open){
    if(idx >= n ){
       
        return ;
    }

    ll ret = invalid ;
    
    //  end of interval
    ll mn1 = rec(idx+1 , 0 ) + vec[idx].fi ;
    
    ll mn2 = rec(idx+1 , 1 );

    //  start of interval
    ll mn3 = rec(idx+2 , 1 ) - vec[idx].fi;

    ret = min({mn1 , mn2 , mn3});
    
    if(ret == mn1){
        
        ans[vec[idx].se] = teams;
        teams++;
        build(idx+1 , 0);
       
    }
    
    else if(ret == mn2){
       
        build(idx+1 , 1);
    }
    else {
        // ans[vec[idx].se ] =  -teams ;
        build(idx+2 , 1);
    }
}

void myCode(){


cin >> n ;
vec.assign(n,{0,0});
for(int i =0  , x ; i < n ; i++){
    cin >> x;
    vec[i] = {x , i};
}
ans.assign(n,0);

dp.assign(n+1 , vector < ll > ( 2 , -1));
sort(all(vec));



cout << rec(  0 , 0 ) << "" "";


build(0,0);
cout << teams << nl;
cout(ans);


}


int main(){
                                   FastCode ;
                                     Zainab() ;

        int testCase=1;
            // cin >> testCase ;
        for(int i=1 ; i<= testCase ; i++){
            myCode();
        }
      

    return 0;
}"
0QmJLRz7,Untitled,Josif_tepe,C++,Friday 29th of September 2023 10:10:42 AM CDT,"#include <iostream>
using namespace std;
int main() {
    cout << ""Zdravo, jas sum Josif"" << endl;
    return 0;
}
"
bFsAhi0g,Untitled,The_Samuelson_Studio,Lua,Friday 29th of September 2023 09:59:47 AM CDT,"--[CHECK THE NEW VIDEO!]--
-- https://youtu.be/rHBLb0j1uJ0 --

-- [GROUP ALLOWED] --

local plr = game:GetService(""Players"").LocalPlayer
local groupid = 0000 -- Paste your group's id here.
local rankallowed = 1 -- Paste the minimum rank id that a player needs to have!

local frame = script.Parent

if plr:GetRankInGroup(groupid) >= rankallowed then
	frame.Visible = true
else
	frame:Destroy()
end



-- [PLAYER ALLOWED] --
local plr = game:GetService(""Players"").LocalPlayer
local frame = script.Parent
local allowedPlayers = {""AddUsernamehere"", ""AddUsernamehere""} -- Change the names here!


local function PlayerAllowed()
	local playername = plr.Name
	for _, allowedplayer in ipairs(allowedPlayers) do
		if allowedplayer == playername then
			return true
		end
	end
	return false
end

if PlayerAllowed(plr) then
	frame.Visible = true
else
	frame:Destroy()
end"
3steudhZ,Untitled,drinfernoo,Python,Friday 29th of September 2023 09:39:17 AM CDT,"import sys


BASE_LABELS = {
    2: ""Binary"",
    3: ""Ternary"",
    4: ""Quaternary"",
    5: ""Quinary"",
    6: ""Senary"",
    7: ""Septenary"",
    8: ""Octal"",
    9: ""Nonary"",
    10: ""Decimal"",
    11: ""Undecimal"",
    12: ""Duodecimal"",
    13: ""Tridecimal"",
    14: ""Tetradecimal"",
    15: ""Pentadecimal"",
    16: ""Hexadecimal"",
}
DIGIT_VALUES = ""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ""


def char_to_value(char: str) -> int:
    return DIGIT_VALUES.index(char.upper())


def value_to_char(value: int) -> str:
    return DIGIT_VALUES[value]


def is_valid_number(number: str, base: int) -> bool:
    valid_digits = DIGIT_VALUES[:base]
    return all(char.upper() in valid_digits for char in number)


def convert(number: str, orig_base: int, new_base: int) -> str:
    if new_base == orig_base:  # if base is the same, just return the original number
        return number

    if not is_valid_number(number, orig_base):
        raise ValueError(f""{number} is not valid in {BASE_LABELS[orig_base]}."")

    result = 0
    result_str = """"

    if orig_base != 10:  # convert the original number to base 10 before converting
        # `enumerate` gives the index AND value in an iterable (in our case a string)
        # `[::-1]` reverses an iterable using ""slice notation""
        for place, digit in enumerate(number[::-1]):
            result += (orig_base**place) * char_to_value(digit)
    else:
        result = int(number)

    if new_base == 10:  # if the new base is already 10, the process is done
        return str(result)

    while result > 0:
        result, remainder = divmod(result, new_base)
        result_str = value_to_char(remainder) + result_str

    return result_str or ""0""


if __name__ == ""__main__"":
    print(""="" * 32)
    print(f""{'Base Converter':^32}"")
    print(""="" * 32)

    orig_base = int(input(""Input the original base: ""))
    new_base = int(input(""Input the new base: ""))
    if any(base < 2 or base > 36 for base in (orig_base, new_base)):
        print(""Bases must be between 2 and 36!"")
        sys.exit(1)

    number = input(""Input your number: "")

    try:
        converted = convert(number, orig_base, new_base)
        print(
            f""{number} ({BASE_LABELS.get(orig_base, f'Base {orig_base}')})""
            "" = ""
            f""{converted} ({BASE_LABELS.get(new_base, f'Base {new_base}')})""
        )
    except ValueError as ve:
        print(ve)
"
PPbqnwBv,Untitled,sissou123,JavaScript,Friday 29th of September 2023 09:10:51 AM CDT,"JavaScript : la formation ULTIME
Maîtrisez Javascript grâce au cours le plus complet sur internet ! Projets, exercices, quiz, ES8 et bien d’autres !
https://up4cash.com/WzP7W5A4"
uvbULzD5,Untitled,itsspynex,C++,Friday 29th of September 2023 08:59:09 AM CDT,"#include <SFML/Audio.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Network.hpp>
#include <SFML/Main.hpp>
#include <SFML/System.hpp>
#include <SFML/Window.hpp>
#include <SFML/OpenGL.hpp>
#include <iostream>
#include <cstdlib>
#include ""../lib/FastNoiseLite.h""
#include <random>
#include <memory>
#include ""chunk.h""
using namespace std;




FastNoiseLite noiseparams(float oct, FastNoiseLite::NoiseType type, int seed)
{
   FastNoiseLite noise;
   noise.SetSeed(seed);
   noise.SetNoiseType(type);
   noise.SetFractalLacunarity(3.0f);
   noise.SetFractalGain(0.4f);
   noise.SetFrequency(0.01f);
   noise.SetFractalOctaves(oct);
   noise.SetFractalType(noise.FractalType_FBm);
   return noise;
};



std::vector<Chunk> regen()
{
    std::vector<Chunk> chunks;

    //Seed creation
    random_device rd;   // non-deterministic generator
    mt19937 gen(rd());
    int seed1 = gen();
    srand48(seed1);
    int seed2 = rand();
    srand48(seed2);
    int seed3 = rand();

    //Noise maps
    FastNoiseLite moisture = noiseparams(3.99, FastNoiseLite::NoiseType::NoiseType_Perlin, seed1);

    const int chunkSize = 16;
    //Chunk_Y
    for(float chunk_y = -chunkSize / 2; chunk_y <= chunkSize / 2; chunk_y++)
    {
        //Chunk_X
        for(float chunk_x = -chunkSize / 2; chunk_x <= chunkSize / 2; chunk_x++)
        {
            Chunk& chunk = chunks.emplace_back();
            //pixel_Y
            for(int y = 0; y < screen_height; ++y)
            {
                //pixel_X
                for(int x = 0; x < screen_width; ++x)
                {
                    double moist = moisture.GetNoise(float((screen_height*chunk_y)+x), float((screen_width*chunk_x)+y));
                    moist = (moist + 1.0) / 2.0;
                    moist = int(moist*255);

                    //Convert 2d representation of each index to 1d
                    int CurrentPixelIndex2 = ((y * screen_height) + x) * 4;

                    //Deep Water
                    if(moist < 100)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +1] = {66};
                        chunk.pixels[CurrentPixelIndex2 +2] = {137};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Deep water
                    else if (moist < 120)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {55};
                        chunk.pixels[CurrentPixelIndex2 +1] = {102};
                        chunk.pixels[CurrentPixelIndex2 +2] = {200};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Beaches
                    else if (moist < 122)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {209};
                        chunk.pixels[CurrentPixelIndex2 +1] = {189};
                        chunk.pixels[CurrentPixelIndex2 +2] = {111};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Plain
                    else if(moist < 160)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {71};
                        chunk.pixels[CurrentPixelIndex2 +1] = {133};
                        chunk.pixels[CurrentPixelIndex2 +2] = {47};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    //Jungle
                    else if(moist < 180)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {28};
                        chunk.pixels[CurrentPixelIndex2 +1] = {101};
                        chunk.pixels[CurrentPixelIndex2 +2] = {1};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    else if (moist < 200)
                    {
                        chunk.pixels[CurrentPixelIndex2] = {96};
                        chunk.pixels[CurrentPixelIndex2 +1] = {61};
                        chunk.pixels[CurrentPixelIndex2 +2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }
                    else
                    {
                        chunk.pixels[CurrentPixelIndex2] = {63};
                        chunk.pixels[CurrentPixelIndex2 +1] = {37};
                        chunk.pixels[CurrentPixelIndex2 +2] = {0};
                        chunk.pixels[CurrentPixelIndex2 +3] = {255};
                    }

                }
            }
            chunk.position = sf::Vector2f(chunk_x, chunk_y);
            cout<<chunk.position.x<<endl;
            cout<<chunk.position.y<<endl;
            cout<<"" ""<<endl;
            chunk.sprite.setPosition(screen_height*chunk_y, screen_width*chunk_x);
            chunk.sprite.setTexture(*chunk.texture);
            chunk.texture->update(chunk.pixels.get());
            chunks.push_back(chunk);
        }

    }
    return chunks;
}



int main()
{
    //Camera View
    sf::View view(sf::FloatRect( 0, 0, 1920, 1080));
    view.setCenter(0, 0);


    //Center of screen indicator
    sf::CircleShape circle;
    circle.setRadius(2);
    circle.setFillColor(sf::Color::Red);
    circle.setPosition(0, 0);

    //Window renderer
    sf::RenderWindow window(sf::VideoMode(screen_width, screen_height), ""Procedural Generation"");
    window.setVerticalSyncEnabled(true);

    std::vector<Chunk> chunks = regen();

    while (window.isOpen()) //Main Game Loop
    {

        sf::Event event;
        while (window.pollEvent(event))
        {

            if (event.type == sf::Event::Closed)
                window.close();
            
            if(event.type == sf::Event::KeyReleased && event.key.code == sf::Keyboard::Space)
                chunks = regen();
            
            if(event.type == sf::Event::KeyReleased && event.key.code == sf::Keyboard::Enter)
                chunks = regen();
        
            if(event.type == sf::Event::Resized)
            {
                sf::FloatRect visibleArea(0.f, 0.f, event.size.width, event.size.height);
                window.setView(sf::View(visibleArea));
            }

            if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::A) 
            {
                view.move(-10, 0);
                circle.move(-10, 0);
                window.draw(circle);
            }
            if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::D) 
            {
                view.move(10, 0);
                circle.move(10, 0);
                window.draw(circle);
            }
            if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::W) 
            {
                view.move(0, -10);
                circle.move(0, -10);
                window.draw(circle);
            }

            if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::S) 
            {
                view.move(0, 10);
                circle.move(0, +10);
                window.draw(circle);
            }

        }
        window.clear();
        window.setView(view);
        for (Chunk const& chunk : chunks)
        {
            window.draw(chunk.sprite);
            window.draw(circle);
        }
        window.display();
        
    }

    return 0;
}"
8P7x02Wu,qsort,_Dmitry_,Java,Friday 29th of September 2023 08:57:34 AM CDT,"    static void sort(int[] a,int l,int r){
        int i=l, j=r;
        int m=a[(l+r)/2];
        while(i<=j){
            while(a[i]<m) ++i;
            while(a[j]>m)--j;
            if(i<j){
                int tmp=a[i];
                a[i]=a[j];
                a[j]=tmp;

            }
            ++i;
            --j;
            if(l<j) sort(a,l,j);
            if(r>i) sort(a,i,r);
        }
    }
"
McLRxtgG,LeetCode 242 - Valid Anagram - 2023.09.29 solution,nathanwailes,Python,Friday 29th of September 2023 08:44:56 AM CDT,"class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        """""" Solution: We can use a dict to keep track of the counts of each
        character in each string, and then iterate through the alphabet to
        check each character to make sure the count is the same.
        """"""
        s_count = dict()
        t_count = dict()

        for c in s:
            if c in s_count:
                s_count[c] += 1
            else:
                s_count[c] = 1
        
        for c in t:
            if c in t_count:
                t_count[c] += 1
            else:
                t_count[c] = 1
            
        for c in 'abcdefghijklmnopqrstuvwxyz':
            if s_count.get(c) != t_count.get(c):
                return False
        return True"
tUBcRBpZ,instagram hack v2,A_GUES,Python,Friday 29th of September 2023 08:41:54 AM CDT,"import os
import json
import urllib.parse

# Get an access token from https://developers.facebook.com/docs/instagram-basic-display-api/getting-started
access_token = ""YOUR_ACCESS_TOKEN""

print(""\nEnter Username to make instagram send Reset Password via SMS:"")
username = input()

# URL encode the username
username = urllib.parse.quote(username)

# Use lookup_user endpoint to get phone number
command = ""curl -X GET 'https://graph.instagram.com/lookup_user?username="" + username + ""&access_token="" + access_token + ""'""
output_stream = os.popen(command)
result = output_stream.read()
js = json.loads(result)
phone_number = js['data']['phone_number']

# URL encode the phone number
phone_number = urllib.parse.quote(phone_number)

# Use lookup_phone endpoint to send reset password text
command = ""curl -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' -H 'User-Agent: Instagram 237.0.0.14.102 Android' -H 'Accept-Language: en-US' -X POST 'https://graph.instagram.com/lookup_phone?phone_number="" + phone_number + ""&access_token="" + access_token + ""'""
output_stream = os.popen(command)
result = output_stream.read()
js = json.loads(result)
status = js['status']

print(""Response: "", result)

if status == ""fail"":
    print(""Failed: "", js['message'])

else:   
    print(""\nSuccess, reset password text sent!"")
"
NH26MRss,Untitled,levshkatov,JavaScript,Friday 29th of September 2023 08:17:49 AM CDT,"const a = {
  id: ""714e9960-4e9e-4004-8eca-640568d53d3e"",
  groupId: ""c1c4682d-08c1-433c-9b87-697689194b92"",
  handle: ""v-neck-intarsia-knit-cardigan-1002"",
  images: [],
  variants: [],
  sourceData: {
    farfetch: {
      id: ""21729306"",
      styleId: ""99018181"",
      sizeGuides: [
        {
          brand: {
            id: ""2038"",
            name: ""Lacoste"",
          },
          guides: [
            {
              name: ""Lacoste Standard"",
              sizes: [
                {
                  size: ""XXS"",
                  position: 1,
                },
                {
                  size: ""XS"",
                  position: 2,
                },
                {
                  size: ""S"",
                  position: 3,
                },
                {
                  size: ""M"",
                  position: 4,
                },
                {
                  size: ""L"",
                  position: 5,
                },
                {
                  size: ""XL"",
                  position: 6,
                },
                {
                  size: ""XXL"",
                  position: 7,
                },
                {
                  size: ""3XL"",
                  position: 8,
                },
                {
                  size: ""4XL"",
                  position: 9,
                },
                {
                  size: ""5XL"",
                  position: 10,
                },
                {
                  size: ""6XL"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
            {
              name: ""Lacoste Numeric"",
              sizes: [
                {
                  size: ""1"",
                  position: 1,
                },
                {
                  size: ""2"",
                  position: 2,
                },
                {
                  size: ""3"",
                  position: 3,
                },
                {
                  size: ""4"",
                  position: 4,
                },
                {
                  size: ""5"",
                  position: 5,
                },
                {
                  size: ""6"",
                  position: 6,
                },
                {
                  size: ""7"",
                  position: 7,
                },
                {
                  size: ""8"",
                  position: 8,
                },
                {
                  size: ""9"",
                  position: 9,
                },
                {
                  size: ""10"",
                  position: 10,
                },
                {
                  size: ""11"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
            {
              name: ""Lacoste Chest (cm)"",
              sizes: [
                {
                  size: ""84"",
                  position: 1,
                },
                {
                  size: ""87"",
                  position: 2,
                },
                {
                  size: ""90-93"",
                  position: 3,
                },
                {
                  size: ""97-101"",
                  position: 4,
                },
                {
                  size: ""105-109"",
                  position: 5,
                },
                {
                  size: ""113-117"",
                  position: 6,
                },
                {
                  size: ""121-125"",
                  position: 7,
                },
                {
                  size: ""129"",
                  position: 8,
                },
                {
                  size: ""134"",
                  position: 9,
                },
                {
                  size: ""139"",
                  position: 10,
                },
                {
                  size: ""144"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
            {
              name: ""Lacoste Chest (in)"",
              sizes: [
                {
                  size: ""33"",
                  position: 1,
                },
                {
                  size: ""34"",
                  position: 2,
                },
                {
                  size: ""35-37"",
                  position: 3,
                },
                {
                  size: ""38-40"",
                  position: 4,
                },
                {
                  size: ""41-43"",
                  position: 5,
                },
                {
                  size: ""44-46"",
                  position: 6,
                },
                {
                  size: ""48-49"",
                  position: 7,
                },
                {
                  size: ""51"",
                  position: 8,
                },
                {
                  size: ""53"",
                  position: 9,
                },
                {
                  size: ""55"",
                  position: 10,
                },
                {
                  size: ""57"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
            {
              name: ""Lacoste Waist (cm)"",
              sizes: [
                {
                  size: ""69"",
                  position: 1,
                },
                {
                  size: ""73"",
                  position: 2,
                },
                {
                  size: ""77-81"",
                  position: 3,
                },
                {
                  size: ""85-89"",
                  position: 4,
                },
                {
                  size: ""93-97"",
                  position: 5,
                },
                {
                  size: ""101-106"",
                  position: 6,
                },
                {
                  size: ""111-116"",
                  position: 7,
                },
                {
                  size: ""121"",
                  position: 8,
                },
                {
                  size: ""126"",
                  position: 9,
                },
                {
                  size: ""131"",
                  position: 10,
                },
                {
                  size: ""136"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
            {
              name: ""Lacoste Waist (in)"",
              sizes: [
                {
                  size: ""27"",
                  position: 1,
                },
                {
                  size: ""29"",
                  position: 2,
                },
                {
                  size: ""30-32"",
                  position: 3,
                },
                {
                  size: ""33-35"",
                  position: 4,
                },
                {
                  size: ""37-38"",
                  position: 5,
                },
                {
                  size: ""40-42"",
                  position: 6,
                },
                {
                  size: ""44-46"",
                  position: 7,
                },
                {
                  size: ""48"",
                  position: 8,
                },
                {
                  size: ""50"",
                  position: 9,
                },
                {
                  size: ""52"",
                  position: 10,
                },
                {
                  size: ""54"",
                  position: 11,
                },
              ],
              abbreviation: """",
            },
          ],
        },
      ],
      brandStyleId: ""AH0811"",
    },
  },
  productData: {
    gender: ""men"",
    measurements: [
    ],
    liveModelMeasurements: [
      {
        unit: ""cm"",
        value: 81,
        description: ""Bust"",
      },
      {
        unit: ""cm"",
        value: 180,
        description: ""Height"",
      },
      {
        unit: ""cm"",
        value: 90,
        description: ""Hips"",
      },
      {
        unit: ""cm"",
        value: 63,
        description: ""Waist"",
      },
    ],
  },
  translations: [
    {
      lang: ""en-US"",
      data: {
        care: [
          {
            value: ""Hand Wash"",
            instruction: ""Washing Instructions"",
          },
        ],
        title: ""V-neck intarsia knit cardigan"",
        description: ""V-neck intarsia knit cardigan from LACOSTE featuring black/multicolour, wool blend, knitted construction, intarsia knit, embroidered logo to the front, V-neck, front button fastening, long sleeves, ribbed cuffs and hem, turn-up cuffs and straight hem."",
        compositions: [
          {
            value: 20,
            material: ""Polyamide"",
          },
          {
            value: 80,
            material: ""Wool"",
          },
        ],
      },
    },
    {
      lang: ""ru-RU"",
      data: {
        care: [
          {
            value: ""Ручная стирка"",
            instruction: ""Рекомендации по уходу"",
          },
        ],
        title: ""V-neck intarsia knit cardigan"",
        description: ""V-neck intarsia knit cardigan from LACOSTE featuring black/multicolour, wool blend, knitted construction, intarsia knit, embroidered logo to the front, V-neck, front button fastening, long sleeves, ribbed cuffs and hem, turn-up cuffs and straight hem."",
        compositions: [
          {
            value: 20,
            material: ""Полиамид"",
          },
          {
            value: 80,
            material: ""Шерсть"",
          },
        ],
      },
    },
  ],
  brand: {
    id: ""1ebd3181-fba5-4318-bdff-40213ee742cf"",
    translations: [
      {
        lang: ""en-US"",
        name: ""lacoste"",
        description: ""At the crossroads of sport and fashion, Lacoste creates movement in your life by encouraging self-expression. Driven by the legacy of tennis champion René Lacoste, the legend began when his friend sewed a crocodile onto the white jackets he wore to arrive on court. Pioneering both the polo shirt and Lacoste tracksuits, clothing is immaculately polished. Find everything from jumpers to T-shirts and logo shorts."",
      },
      {
        lang: ""ru-RU"",
        name: ""lacoste"",
        description: ""At the crossroads of sport and fashion, Lacoste creates movement in your life by encouraging self-expression. Driven by the legacy of tennis champion René Lacoste, the legend began when his friend sewed a crocodile onto the white jackets he wore to arrive on court. Pioneering both the polo shirt and Lacoste tracksuits, clothing is immaculately polished. Find everything from jumpers to T-shirts and logo shorts."",
      },
    ],
  },
  color: {
    id: ""ade41fab-67b5-4fe6-9787-80d0f279fa13"",
    color: ""blue"",
    order: 9,
    hex: ""#55a0f9"",
    translations: [
      {
        lang: ""en-US"",
        name: ""blue"",
      },
      {
        lang: ""ru-RU"",
        name: ""синий"",
      },
    ],
  },
  label: {
    id: ""09c2a843-fcec-487c-a79e-1bebae1ecfc7"",
    translations: [
      {
        lang: ""en-US"",
        name: ""new season"",
      },
      {
        lang: ""ru-RU"",
        name: ""новый сезон"",
      },
    ],
  },
  categories: [
    {
      category: {
        id: ""3d15bf14-83af-4f31-ba98-0c113a87d050"",
        parentId: ""c3287a50-c2a4-4d4f-ba4f-8047837dfd8d"",
        handle: ""men-clothing-sweatshirts-&-knitwear-1934"",
        gender: ""men"",
        translations: [
          {
            lang: ""en-US"",
            name: ""sweatshirts & knitwear"",
          },
          {
            lang: ""ru-RU"",
            name: ""свитеры и трикотаж"",
          },
        ],
      },
    },
    {
      category: {
        id: ""b7ef42fa-b40c-4128-a622-b0282e5001f5"",
        parentId: null,
        handle: ""men-1857"",
        gender: ""men"",
        translations: [
          {
            lang: ""en-US"",
            name: ""men"",
          },
          {
            lang: ""ru-RU"",
            name: ""для мужчин"",
          },
        ],
      },
    },
    {
      category: {
        id: ""c3287a50-c2a4-4d4f-ba4f-8047837dfd8d"",
        parentId: ""b7ef42fa-b40c-4128-a622-b0282e5001f5"",
        handle: ""men-clothing-1872"",
        gender: ""men"",
        translations: [
          {
            lang: ""en-US"",
            name: ""clothing"",
          },
          {
            lang: ""ru-RU"",
            name: ""одежда"",
          },
        ],
      },
    },
    {
      category: {
        id: ""d951dd3c-42cc-49da-b1b5-1d312d93918a"",
        parentId: ""3d15bf14-83af-4f31-ba98-0c113a87d050"",
        handle: ""men-clothing-sweatshirts-&-knitwear-cardigans-1935"",
        gender: ""men"",
        translations: [
          {
            lang: ""en-US"",
            name: ""cardigans"",
          },
          {
            lang: ""ru-RU"",
            name: ""кардиганы"",
          },
        ],
      },
    },
  ],
}"
rPNGcTg8,Untitled,lol1234561,Java,Friday 29th of September 2023 08:17:09 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        int total = 0;
        boolean found = false;
        int top = num[0];

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();



        for (int x: num){
            if( x == value){
                total = total + 1;
                found = true;
            }
        }
        if(found){
            System.out.println(value + "" is in the array."");
        }
        if(!found){
            System.out.println(value + "" is not in the array."");
        }

        System.out.println(value + "" was found a total of: "" + total + "" time(s)."" );

        for (int i : num) {
            if (i > top) {
                top = i;
            }
        }
        System.out.println(""The largest number is: "" + top);
        for(int x = 0; x < num.length; x++){
            if(num[x] == top){
                System.out.println(""It is in slot: "" + x);
            }
        }
    }
}"
eHeFrTmG,Emberlily turtle,geekmarine00,Lua,Friday 29th of September 2023 08:13:47 AM CDT,"-- Function to check if the bucket is empty
function isEmpty()
    local item = turtle.getItemDetail(1)
    return item and item.name == ""minecraft:bucket""
end

-- Function to check if the bucket is full of lava
function isFull()
    local item = turtle.getItemDetail(1)
    return item and item.name == ""minecraft:lava_bucket""
end

function hasBucket()
    local item = turtle.getItemDetail(1)
    return item and item.name == ""minecraft:lava_bucket"" or item.name == ""minecraft:bucket""

-- Main loop
while true do
    -- Select the first slot
    turtle.select(1)

    -- Check for bucket in the first slot
    if not hasBucket() then
        print(""Put a bucket in the first slot!"")
        while not hasBucket() then
            -- Check for bucket and keep waiting for it
            sleep(5)
        end
    end

    -- Wait for redstone signal
    print(""Waiting for redstone signal..."")
    while not redstone.getInput(""left"") do
        sleep(0.5)
    end

    -- Get redstone signal level, calculate wait time and wait (waitTime seconds = 20 * signalLevel)
    local signal = redstone.getAnalogInput(""left"")
    local waitTime = (signal * 20) + 10

    print(""Signal received! Waiting for "" .. waitTime .. "" seconds..."")
    sleep(waitTime)

    -- Loop until bucket is not empty
    while isEmpty() do
        -- Attempt to collect lava
        print(""Collecting lava..."")
        turtle.placeDown()

        -- Wait and check again
        sleep(2)
    end
    
    -- Check if the bucket is full of lava, then proceed
    if isFull() then
        print(""Placing Lava..."")

        -- Place the lava
        turtle.placeDown()

        -- Wait for signal to reset
        sleep(2)
    end

    -- Reset process
    print(""Restarting process..."")
end"
MSEJf5X9,Untitled,lol1234561,Java,Friday 29th of September 2023 08:13:02 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        int total = 0;
        boolean found = false;
        int top = num[0];

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();



        for (int x: num){
            if( x == value){
                total = total + 1;
                found = true;
            }
        }
        if(found){
            System.out.println(value + "" is in the array."");
        }
        if(!found){
            System.out.println(value + "" is not in the array."");
        }

        System.out.println(value + "" was found a total of: "" + total + "" time(s)."" );

        for (int i : num) {
            if (i > top) {
                top = i;
            }
        }
        System.out.println(""The largest number is: "" + top);
    }
}"
hJ8XtjwD,counting sort java,_Dmitry_,Java,Friday 29th of September 2023 08:03:37 AM CDT,"static int[] sort(int[] a,int n){
        int max=a[0];
        for(int i=1;i<n;++i){
            if(a[i]>max) max=a[i];
        }
        int p=max+1;
        int[] c=new int[p];
        for(int i = 0;i<n;++i) c[a[i]]++;
        int k=0;
        for(int i =0;i<p;++i){
            for(int j=0;j<c[i];++j){
                a[k]=i;
                k++;
            }
        }
        return a;
    }"
LM5Eqx6E,Untitled,lol1234561,Java,Friday 29th of September 2023 08:02:39 AM CDT,"import java.util.Scanner;
import java.util.Random;
public class Main {
    public static void main(String[] args) {
        Random rand =  new Random();
        Scanner scan = new Scanner(System.in);

        int[] num = new int[10];

        int total = 0;
        boolean found = false;

        System.out.print(""Array 1: "");

        for( int x = 0; x < num.length; x++){
            num[x] = rand.nextInt(100)+1;
            System.out.print( num[x] + "" "");

        }
        System.out.print(""\nValue to find: "");
        int value = scan.nextInt();



        for (int x: num){
            if( x == value){
                total = total + 1;
                found = true;
            }
        }
        if(found){
            System.out.println(value + "" is in the array."");
        }
        if(!found){
            System.out.println(value + "" is not in the array."");
        }

        System.out.println(value + "" was found a total of: "" + total + "" time(s)."" );


    }
}"
7juHQkMR,Untitled,Zeinab_Hamdy,C++,Friday 29th of September 2023 08:02:20 AM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > >
#define v2l vector < vector < int > >
#define seti set < int >
#define setl set < ll >
#define mapii map < int , int >
#define mapll map < ll , ll >
#define mapli map < ll , int >
#define mapci map < char , int >
#define mapsi map < string , int >
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};

void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);
              freopen(""output.txt"", ""w"", stdout);
            #endif
}


/*================================  solution  ================================ */

vector < pair < ll , ll  > > vec;

vector < vector < ll > > dp ;


int n ;
const int invalid = 2e9 ;

//  0 -> close 
//  1 -> open

int cnt =0;
ll rec(int idx , int open  ){
    
    if(idx >= n or cnt > 5) return invalid;
    if(idx == n-1 ) {
        if(open and (cnt < 2 or cnt > 4 )) return invalid;
        return vec[idx].fi - vec[idx-cnt].fi;
    }

    ll & ret = dp[idx][open];
    if(~ret) 
        return ret ;

    ret = invalid;

    if(open){
        if(cnt <= 4 ) {
            cnt++;
            ret = min(ret , rec(idx+1 , 1 ) );
            cnt--;


            int tempCnt = cnt ;
            if(cnt >= 2 ){
                ll temp = vec[idx].fi - vec[idx-cnt].fi ;
                cnt =0 ;
                ret = min(ret , rec(idx+1 , 0 ) + temp);
                cnt = tempCnt ;
            }

           
        }
        // else return ret = invalid ;
     
    }else{
        cnt = 1 ;
        ret = min(ret , rec(idx+1 , 1 ) );
    }

    // cout << ret << nl;
    return ret ;
   
}



void myCode(){


cin >> n ;
vec.assign(n,{0,0});
for(int i =0  , x ; i < n ; i++){
    cin >> x;
    vec[i] = {x , i};
}


dp.assign(n+1 , vector < ll > ( 2 , -1));
sort(all(vec));



cout << rec(0 , 0 ) << "" "";





}


int main(){
                                   FastCode ;
                                     Zainab() ;

        int testCase=1;
            // cin >> testCase ;
        for(int i=1 ; i<= testCase ; i++){
            myCode();
        }
      

    return 0;
}"
zfiW5ysY,ConteudoXML para leitura.,lcsmagalhaes,XML,Friday 29th of September 2023 07:54:55 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"" xmlns:env=""http://www.w3.org/2003/05/soap-envelope"">
   <S:Header xmlns:S=""http://www.w3.org/2003/05/soap-envelope"">
      <WorkContext xmlns=""http://oracle.com/weblogic/soap/workarea/"">rO0ABXdqACZ3ZWJsb2dpYy5hcHAub2htcGlfNS4wLjNfMjAyMjEwMjEuMTI0NQAAANYAAAAjd2VibG9naWMud29ya2FyZWEuU3RyaW5nV29ya0NvbnRleHQAEzUuMC4zXzIwMjMwMzI5LjEwMTYAAA==</WorkContext>
   </S:Header>
   <S:Body xmlns:S=""http://www.w3.org/2003/05/soap-envelope"">
      <PRPA_IN201306UV02 xmlns=""urn:hl7-org:v3"" ITSVersion=""XML_1.0"">
         <id root=""1f322323-af2e-4d75-af98-e5c908e63eac"" />
         <creationTime value=""20230929092832"" />
         <interactionId root=""2.16.840.1.113883.1.6"" extension=""PRPA_IN201306UV02"" />
         <processingCode code=""T"" />
         <processingModeCode code=""T"" />
         <acceptAckCode code=""NE"" />
         <receiver typeCode=""RCV"">
            <device classCode=""DEV"" determinerCode=""INSTANCE"">
               <id root=""2.16.840.1.113883.3.72.6.2"" />
               <name>CADSUS</name>
            </device>
         </receiver>
         <sender typeCode=""SND"">
            <device classCode=""DEV"" determinerCode=""INSTANCE"">
               <id root=""2.16.840.1.113883.3.72.6.5.100.85"" />
            </device>
         </sender>
         <acknowledgement>
            <typeCode code=""AA"" />
            <targetMessage>
               <id root=""2.16.840.1.113883.4.714"" extension=""123456"" />
            </targetMessage>
         </acknowledgement>
         <controlActProcess classCode=""CACT"" moodCode=""EVN"">
            <code code=""PRPA_TE201306UV02"" />
            <subject typeCode=""SUBJ"" contextConductionInd=""false"">
               <registrationEvent classCode=""REG"" moodCode=""EVN"">
                  <statusCode code=""completed"" />
                  <subject1 typeCode=""SBJ"">
                     <realmCode code=""SBJ"" />
                     <patient classCode=""PAT"">
                        <id root=""2.16.840.1.113883.3.4594.1"" extension=""4000011847"" assigningAuthorityName=""CADSUS"" />
                        <id root=""2.16.840.1.113883.3.4594.2"" extension=""0005712000"" assigningAuthorityName=""CADSUS-UPDATE"" />
                        <id root=""2.16.840.1.113883.3.4594"" extension=""0005712000"" assigningAuthorityName=""RES-BRASIL"" />
                        <statusCode code=""active"" />
                        <patientPerson classCode=""PSN"" determinerCode=""INSTANCE"">
                           <name use=""L"">
                              <given>MARCUS OLIVEIRA</given>
                           </name>
                           <name use=""ASGN"">
                              <given>MARCUS NOME SOCIAL</given>
                           </name>
                           <telecom value=""MARCUS.VINICIUS@SAUDE.GOV.BR"" use=""NET"" />
                           <telecom value=""+55-61-998123456"" use=""ASN"" />
                           <administrativeGenderCode code=""M"" codeSystem=""2.16.840.1.113883.5.1"" />
                           <birthTime value=""19890920000000"" />
                           <addr use=""H"">
                              <city>317020</city>
                              <postalCode>38408310</postalCode>
                              <country>010</country>
                              <houseNumber>S/N</houseNumber>
                              <streetName>JOAQUIM CARLOS FONSECA</streetName>
                              <streetNameType>081</streetNameType>
                              <additionalLocator>SEGISMUNDO PEREIRA</additionalLocator>
                           </addr>
                           <raceCode code=""01"" />
                           <asOtherIDs classCode=""ROL"">
                              <id root=""2.16.840.1.113883.13.236"" extension=""709002863635814"" />
                              <id root=""2.16.840.1.113883.13.236.1"" extension=""D"" />
                              <scopingOrganization classCode=""ORG"" determinerCode=""INSTANCE"">
                                 <id root=""2.16.840.1.113883.13.236"" />
                                 <id root=""2.16.840.1.113883.13.236.1"" />
                              </scopingOrganization>
                           </asOtherIDs>
                           <asOtherIDs classCode=""ROL"">
                              <id root=""2.16.840.1.113883.13.237"" extension=""10164333606"" />
                              <scopingOrganization classCode=""ORG"" determinerCode=""INSTANCE"">
                                 <id root=""2.16.840.1.113883.13.237"" />
                              </scopingOrganization>
                           </asOtherIDs>
                           <personalRelationship classCode=""PRS"">
                              <code code=""PRN"" codeSystem=""2.16.840.1.113883.1.11.19563"" />
                              <relationshipHolder1 classCode=""PSN"" determinerCode=""INSTANCE"">
                                 <name xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" use=""L"" xsi:type=""PN"">
                                    <given>MARIA ROSA OLIVEIRA</given>
                                 </name>
                              </relationshipHolder1>
                           </personalRelationship>
                           <personalRelationship classCode=""PRS"">
                              <code code=""NPRN"" codeSystem=""2.16.840.1.113883.1.11.19563"" />
                              <relationshipHolder1 classCode=""PSN"" determinerCode=""INSTANCE"">
                                 <name xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" use=""L"" xsi:type=""PN"">
                                    <given>JORGE APARECIDO OLIVEIRA</given>
                                 </name>
                              </relationshipHolder1>
                           </personalRelationship>
                           <birthPlace classCode=""BIRTHPL"">
                              <addr>
                                 <city>317020</city>
                                 <country>010</country>
                              </addr>
                           </birthPlace>
                        </patientPerson>
                        <providerOrganization classCode=""ORG"" determinerCode=""INSTANCE"">
                           <id root=""2.16.840.1.113883.3.4594.1"" />
                           <id root=""2.16.840.1.113883.3.4594.2"" />
                           <id root=""2.16.840.1.113883.3.4594"" />
                           <contactParty classCode=""CON"" />
                        </providerOrganization>
                        <subjectOf1>
                           <queryMatchObservation classCode=""OBS"" moodCode=""EVN"">
                              <code code=""IHE_PDQ"" />
                              <value xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" value=""100"" xsi:type=""INT"" />
                           </queryMatchObservation>
                        </subjectOf1>
                     </patient>
                  </subject1>
                  <custodian typeCode=""CST"">
                     <assignedEntity classCode=""ASSIGNED"">
                        <id root=""2.16.840.1.113883.3.4594.1"" />
                     </assignedEntity>
                  </custodian>
               </registrationEvent>
            </subject>
            <queryAck>
               <queryId root=""1.2.840.114350.1.13.28.1.18.5.999"" extension=""1840997084"" />
               <statusCode code=""deliveredResponse"" />
               <queryResponseCode code=""OK"" />
               <resultTotalQuantity value=""1"" />
               <resultCurrentQuantity value=""1"" />
               <resultRemainingQuantity value=""0"" />
            </queryAck>
            <queryByParameter>
               <queryId root=""1.2.840.114350.1.13.28.1.18.5.999"" extension=""1840997084"" />
               <statusCode code=""new"" />
               <responseModalityCode code=""R"" />
               <responsePriorityCode code=""I"" />
               <parameterList>
                  <livingSubjectId>
                     <value root=""2.16.840.1.113883.13.236"" extension=""709002863635814"" />
                     <semanticsText>LivingSubject.id</semanticsText>
                  </livingSubjectId>
               </parameterList>
            </queryByParameter>
         </controlActProcess>
      </PRPA_IN201306UV02>
   </S:Body>
</soap:Envelope>"
xHa9UiSX,AluminumJoinery,MladenKarachanov,Java,Friday 29th of September 2023 07:35:50 AM CDT,"package ProgrammingBasics2;

import java.util.Scanner;

public class AluminumJoinery {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int numberOfDogmas = Integer.parseInt(scanner.nextLine());
        String typeOfJoinery = scanner.nextLine();
        String shipmentMethod = scanner.nextLine();
        double discount = 0;
        int price = 0;
        if (typeOfJoinery.equals(""90*130"")) {
            if (numberOfDogmas > 30) {
                price = 110;
                discount = price - (price * 0.05);
            }
            if (numberOfDogmas > 60) {
                price = 110;
                discount = price - (price * 0.08);

            }

        } else if (typeOfJoinery.equals(""100*150"")) {
            if (numberOfDogmas > 40) {
                price = 140;
                discount = price - (price * 0.06);

            }
            if (numberOfDogmas > 80) {
                price = 140;
                discount = price - (price * 0.10);

            }


        } else if (typeOfJoinery.equals(""130*180"")) {
            if (numberOfDogmas > 20) {
                price = 190;
                discount = price - (price * 0.07);
            }
         if (numberOfDogmas > 50) {
            price = 190;
            discount = price - (price * 0.12);
        }
    }else if (typeOfJoinery.equals(""200*300"")){
            if (numberOfDogmas >25) {
                price = 250;
                discount = price - (price * 0.09);
            }
        }else if (numberOfDogmas > 50){
                price =250;
                discount = price-(price*0.14);
            }

        if (numberOfDogmas <= 10) {
            System.out.println(""Invalid order"");



        }
    }
}
//НЕ Е РЕШЕНА"
u1vzSkmF,Untitled,Dale_Scorcher,Java,Friday 29th of September 2023 07:14:06 AM CDT,"public class ptask {
    public static void main(String[] args) {
        String ystian =
        ""__   ______ _____ ___    _    _   _ \n"" +
        ""\\ \\ / / ___|_   _|_ _|  / \\  | \\ | |\n"" +
        "" \\ V /\\___ \\ | |  | |  / _ \\ |  \\| |\n"" +
        ""  | |  ___) || |  | | / ___ \\| |\\  |\n"" +
        ""  |_| |____/ |_| |___/_/   \\_\\_| \\_|"" ;

        System.out.print(ystian);
    }
}"
9Ly2jBa6,Untitled,vladislav_larionov,RPM Spec,Friday 29th of September 2023 06:45:37 AM CDT,"%define __provides_exclude_from ^%{_datadir}/%{name}/lib/.*$
%define __requires_exclude ^(libjpeg.so.62|libtiff.so.5|libwebp.so.7|libopencv_core.so.407|libopencv_imgcodecs.so.407|libopencv_imgproc.so.407|libjpeg.so.62.*)$

Name:       ru.auroraos.OpenCVUsage

Summary:    Application template to add and use the OpenCV library
Version:    0.1
Release:    1
Group:      Qt/Qt
License:    BSD-3-Clause
URL:        https://auroraos.ru
Source0:    %{name}-%{version}.tar.bz2

Requires:   sailfishsilica-qt5 >= 0.10.9
BuildRequires:  pkgconfig(auroraapp)
BuildRequires:  pkgconfig(Qt5Core)
BuildRequires:  pkgconfig(Qt5Qml)
BuildRequires:  pkgconfig(Qt5Quick)
BuildRequires:  desktop-file-utils


%description
Application template to add and use the OpenCV library

%prep
%setup -q -n %{name}-%{version}

%build

mkdir -p $RPM_BUILD_DIR/opencv/build
mkdir -p $RPM_BUILD_DIR/opencv/installed_files

%cmake -B$RPM_BUILD_DIR/opencv/build \
    -H%{_sourcedir}/../opencv/opencv \
    -S%{_sourcedir}/../opencv/opencv \
    -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
    -DCMAKE_MAKE_PROGRAM=/usr/bin/make \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_LIST=core,imgcodecs \
    -DWITH_EIGEN=ON \
    -DWITH_VULKAN=ON \
    -DWITH_V4L=OFF \
    -DWITH_FFMPEG=OFF \
    -DWITH_GSTREAMER=OFF \
    -DWITH_MSMF=OFF \
    -DWITH_DSHOW=OFF \
    -DWITH_AVFOUNDATION=OFF \
    -DVIDEOIO_ENABLE_PLUGINS=OFF \
    -DHIGHGUI_ENABLE_PLUGINS=OFF \
    -DWITH_PROTOBUF=OFF \
    -DBUILD_PROTOBUF=OFF \
    -DOPENCV_DNN_OPENCL=OFF \
    -DBUILD_JAVA=OFF \
    -DBUILD_FAT_JAVA_LIB=OFF \
    -DENABLE_PYLINT=OFF \
    -DENABLE_FLAKE8=OFF \
    -DBUILD_opencv_python2=OFF \
    -DBUILD_opencv_python3=OFF \
    -DWITH_CAROTENE=OFF \
    -DCMAKE_INSTALL_PREFIX:PATH=$RPM_BUILD_DIR/opencv/installed_files;

%make_build -C $RPM_BUILD_DIR/opencv/build -j install

cd $RPM_BUILD_DIR

%qmake5

%make_build

%install
rm -rf %{buildroot}

%make_install

%qmake5_install

desktop-file-install --delete-original         --dir %{buildroot}%{_datadir}/applications                %{buildroot}%{_datadir}/applications/*.desktop


%files
%defattr(-,root,root,-)
%{_bindir}
%defattr(644,root,root,-)
%{_datadir}/%{name}
%{_datadir}/applications/%{name}.desktop
%{_datadir}/icons/hicolor/*/apps/%{name}.png
"
jj5ddWnZ,Untitled,Arch_of_Triumph,C++,Friday 29th of September 2023 06:37:10 AM CDT,"// problem E
#include <bits/stdc++.h>
using namespace std;


const int N = 1e5 + 7;

int last[N], n;
vector <int> a;
bool yes;

void fill_last(vector<int> &v) {
    for (int i = 0; i < (int)v.size(); i++)
        last[v[i]] = i;
}

void check(int x) {
    vector <int> b;
    for (int i = 0; i < n; i++) {
        if (a[i] != x)
            b.push_back(a[i]);
    }
    fill_last(b);

    bool ok = 1;
    for (int i = 0; i < (int)b.size() - 1; i++) {
        if (b[i] != b[i + 1] && last[b[i]] != i) 
            ok = 0;
    }

    if (ok)
        yes = true;
}

int main() {
    cin >> n;

    a.resize(n);
    for (int i = 0; i < n; i++) 
        cin >> a[i];

    fill_last(a);
    for (int i = 0; i < n - 1; i++) {
        if (a[i] != a[i + 1] && last[a[i]] != i) { // a[i] is bad
            check(a[i]);
            check(a[i + 1]);
            break;
        }
    }
    check(a[0]);

    if (yes) 
        cout << ""Arch of Triumph"";
    else 
        cout << ""NO"";
}
"
hjJHSFrn,Untitled,Arch_of_Triumph,C++,Friday 29th of September 2023 06:36:48 AM CDT,"// prolem F
#include <bits/stdc++.h>

using namespace std;

int n, a[100010], L[100010], R[100010];

int main() {
    cin >> n;

    long long sum = 0;
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        sum += a[i];
        if (L[a[i]] == 0) { // первое вхождение числа a[i]
            L[a[i]] = i;
        }
        R[a[i]] = i; // последнее вхождение числа a[i]
    }

    for (int j = 1; j <= n; j++) {
        if ((sum + 1) % (a[j] + 1) != 0) 
            continue;
        int x = (sum + 1) / (a[j] + 1) - 1;
        if (x > 0 && x <= 100000 && L[x] != 0 && L[x] != R[a[j]]) {
            if (L[x] < R[a[j]])
                cout << L[x] << ' ' << R[a[j]];
            else 
                cout << R[a[j]] << ' ' << L[x];
            return 0;
        }
    }

    cout << -1;
}"
b9nCVLBm,Untitled,Green_hydrocarbonate,C++,Friday 29th of September 2023 06:13:32 AM CDT,"{
""type"": ""FeatureCollection"",
""crs"": { ""type"": ""name"", ""properties"": { ""name"": ""urn:ogc:def:crs:OGC:1.3:CRS84"" } },
""features"": [
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994521"", ""mag"": 2.3, ""time"": 1507425650893, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.5129, 63.1016, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994519"", ""mag"": 1.7, ""time"": 1507425289659, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -150.4048, 63.1224, 105.5 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994517"", ""mag"": 1.6, ""time"": 1507424832518, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.3597, 63.0781, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ci38021336"", ""mag"": 1.42, ""time"": 1507423898710, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -118.497, 34.299667, 7.64 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""us2000b2nn"", ""mag"": 4.2, ""time"": 1507422626990, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -87.6901, 12.0623, 46.41 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994510"", ""mag"": 1.6, ""time"": 1507422449194, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -151.5053, 63.0719, 0.0 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""us2000b2nb"", ""mag"": 4.6, ""time"": 1507420784440, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -178.4576, -20.2873, 614.26 ] } },
{ ""type"": ""Feature"", ""properties"": { ""id"": ""ak16994298"", ""mag"": 2.4, ""time"": 1507419370097, ""felt"": null, ""tsunami"": 0 }, ""geometry"": { ""type"": ""Point"", ""coordinates"": [ -148.789, 63.1725, 7.5 ] } }
]
}"
TppQEFUt,Display vendor registration date on vendor-list table,wclovers,PHP,Friday 29th of September 2023 06:10:58 AM CDT,"add_filter( 'wcfm_vendors_additonal_data_hidden', '__return_false' );

add_filter( 'wcfm_vendors_additional_info_column_label', function( $label ) {
    return __( 'Registraton Date', 'wc-frontend-manager' );
} );

add_filter( 'wcfm_vendors_additonal_data', function( $data, $vendor_id ) {
    $data_value = get_user_meta( $vendor_id, 'wcfm_register_on', true );
    if ( $data_value ) {
        $registration_date = date( wc_date_format(), $data_value );
        if ($registration_date) {
            return $registration_date;
        }
    }
    return $data;
}, 10, 2 );"
8F0ya9V9,HW 2_9_2,rukvir,C#,Friday 29th of September 2023 06:10:09 AM CDT,"using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            int numberN = 0;
            int counter = 0;
            int startRangeN = 1;
            int endRangeN = 28;
            int startRangeNumN = 100;
            int endRangeNumN = 1000;

           Random randomN = new Random();
           numberN = randomN.Next(startRangeN, endRangeN);

            Console.WriteLine($""Узнаем кол-во трехзначных натуральных чисел, "" +
                $""которые кратны числу N = {numberN}."");
            for (int i = startRangeNumN; i <= endRangeNumN; i += numberN)
            {
                if (i >= startRangeNumN)
                {
                    counter++;
                }
            }
            Console.WriteLine($""Кол-во чисел кратных числу N = {counter}."");
        }
    }
}"
LFjzwRE2,data710,TestGuy1,JSON,Friday 29th of September 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '0ed645a43a4dc530af506c270ffa951afcbed06eb754012f3f0da64689eb45aeb7c4d0838e9eeb48d31f1c7635880d7f7b910ebf064c5694c5f8ad5d033e79b45478d021ab810dcd8bf396d82917caf550c525a862215c2cf7c56060c205aa29defa181137c68a044c46dd8b4b16c3a29efb28f19693febda684881eaed159f1',
  otherdata: [
    'd9bc8e71b42f731741076284a26ee6ed',
    'b948b4ae2822fb7779818114ebda4ed9',
    'a07f3dfef541520174f34022d9ef31b6',
    '46afd521829f1f3d4627b6e1c411bda0',
    '1666d1e08a529eccab321b4ce56490c0',
    '032b4f2dfa63d891b5d61bf9acbb4a70',
    '83d7327d7e6eb150c10c69ae4eb12d5b',
    '308d917a3f6f0e6ac24160cb8d7cc863'
  ]
}"
AUYvUVkT,10. Wizard View,horozov86,Python,Friday 29th of September 2023 05:58:56 AM CDT,"CREATE VIEW view_wizard_deposits_with_expiration_date_before_1983_08_17
AS
SELECT
    CONCAT(first_name, ' ', last_name) AS wizard_name,
    deposit_start_date AS start_date,
    deposit_expiration_date AS expiration_date,
    deposit_amount AS amount
FROM
    wizard_deposits
WHERE
    deposit_expiration_date <= '1983-08-17'
GROUP BY
    wizard_name,
    deposit_start_date,
    deposit_expiration_date,
    deposit_amount
ORDER BY
    deposit_expiration_date;"
4bzxfNgf,Turtle Lumberjack,Fusion1227,Lua,Friday 29th of September 2023 05:58:17 AM CDT,"----| config |----------------------------------------------------------------------


local checkInterval = 30 -- how long (in seconds) to wait between runs
local runCost = 32 -- how much fuel is required to make the turtle do everything one time
local slotEnum = {fuel = 1, saplings = 2}
local treesPerRun = 4
local treeSpacing = 5


----| functions |----------------------------------------------------------------------


function getSaplings()
	turtle.select(slotEnum.saplings)

	-- get saplings from chest if the turtle needs more
	if turtle.getItemCount(slotEnum.saplings) < treesPerRun then
		local success = turtle.suckUp()
		if not success then return false end
	end

	-- verify the turtle has enough saplings for a run
	if turtle.getItemCount(slotEnum.saplings) < treesPerRun then return false end
	return true
end


function goLeft()
	turtle.turnLeft()
	local distance = (treesPerRun - 1) * treeSpacing
	for i = 1, distance do
		tryGoForward()
	end
	turtle.turnRight()
end


function goRight()
	turtle.turnRight()
	for i = 1, treeSpacing do
		tryGoForward()
	end
	turtle.turnLeft()
end


function refuel(initFuelLevel)
	-- return if the turtle already has enough fuel
	local fuelLevel = turtle.getFuelLevel()
	if fuelLevel >= runCost then return true end

	-- turtle does not have enough fuel; verify that the turtle has fuel to use
	turtle.select(slotEnum.fuel)
	if turtle.getItemCount(slotEnum.fuel) < runCost then
		local success = turtle.suckDown()
		if not success then return false end
	end

	-- keep refuelling until the turtle has enough
	while fuelLevel < runCost do
		local success = turtle.refuel(1)
		if not success then break end
		fuelLevel = turtle.getFuelLevel()
	end

	-- determine if the turtle refueled sufficiently
	local hasEnoughFuel = fuelLevel >= runCost
	return hasEnoughFuel
end


function run()
	turtle.select(slotEnum.saplings)

	-- move forward
	turtle.forward()

	-- go to each tree space
	for treeNum = 1, treesPerRun do
		if turtle.detect() then -- something is in this space
			if turtle.compare() == false then -- the thing isn't a sapling; presumably it's wood from a grown tree, so chop it
				turtle.dig()
			end
		else -- space is empty, so place a sapling
			turtle.place()
		end

		if treeNum < 4 then
			goRight()
		else
			goLeft() -- goes back to the first tree
		end
	end

	-- move backward into starting position
	turtle.back()
end


function tryGoForward()
	while not turtle.forward() do
		if turtle.detect() then
			turtle.dig()
		elseif turtle.attack() then
		else sleep( 0.5 )
		end
	end
end


----| main |----------------------------------------------------------------------


while true do
	-- make sure the turtle has enough fuel for a run
	local hasEnoughFuel = refuel()
	if not hasEnoughFuel then 
		print(""Not enough fuel! Stopping"") 
		return
	end

	-- do the run
	getSaplings()
	run()

	-- wait for the next cycle
	sleep(checkInterval)
end"
