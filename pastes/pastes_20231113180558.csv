id,title,username,language,date,content
eTGes6F9,Графы,DaniDori,C++,Monday 13th of November 2023 11:56:53 AM CDT,"#include <iostream>
#include <vector>
#include <limits>
#include <queue>

using namespace std;

const int INF = numeric_limits<int>::max();

class Graph {
    //ребро
    struct Edge {
        //откуда
        int source;
        //куда
        int destination;
        //вес
        int weight;
    };
    //количество вершин
    int V;
    //матрица смежности(откуда, какие ребра)
    vector<vector<Edge>> adjList;
    //список ребер
    vector<Edge> edges;

public:
    Graph(int V) : V(V) {
        //изменяем размер
        adjList.resize(V);
    }

    //Добавить вершину
    void addEdge(int source, int destination, int weight) {
        Edge edge = { source, destination, weight };
        //относительно конкретной вершины(от которой ребро)
        adjList[source].push_back(edge);
        //просто список ребер
        edges.push_back(edge);
    }
    //добавить вершину
    void addNode() {
        adjList.push_back(vector<Edge>());
        V++;
    }

    //вывод на экран построчной таблицы смежности
    void displayGraph() {
        for (int i = 0; i < V; ++i) {
            cout << ""Узел "" << i + 1 << "" связан с ребром \n"";
            for (Edge& edge : adjList[i]) {
                cout << ""\tУзел "" << edge.destination + 1 << "" с весом ребра = "" << edge.weight << ""\n"";
            }
            cout << ""\n"";
        }
    }
    
    //Найти Эксцентриситет
    int findEccentricity(int node) {
        vector<int> distances(V, INF);
        distances[node] = 0;
        //очередь
        queue<int> q;
        q.push(node);

        // Стандартная BFS(обход в ширину) для вычисления расстояний от узла до всех остальных узлов
        while (!q.empty()) {
            //достаем первую вершину из очереди
            int u = q.front();
            //достать из очереди
            q.pop();

            for (auto& edge : adjList[u]) {
                //если нашли более короткий путь - обновляем
                if (distances[edge.destination] > distances[u] + edge.weight) {
                    distances[edge.destination] = distances[u] + edge.weight;
                    //вставить в очередь 
                    q.push(edge.destination);
                }
            }
        }
        //находим самое большое расстояние в графе
        int eccentricity = 0;
        for (int dist : distances) {
            if (dist != INF) {
                eccentricity = max(eccentricity, dist);
            }
        }

        return eccentricity;
    }

    bool bellmanFord(int source, vector<int>& distances, vector<int>& predecessors) {
        //Делаем массив длинны v и заполняем ""бесконечностями""
        distances.assign(V, INF);
        //Делаем массив длинны v и заполняем -1
        predecessors.assign(V, -1);
        distances[source] = 0;

        for (int i = 0; i < V - 1; ++i) {
            for (const Edge& edge : edges) {
                //Если этот проход еще не проверяли(там беск), и путь через вершину короче, чем есть - обновляем
                if (distances[edge.source] != INF && distances[edge.source] + edge.weight < distances[edge.destination]) {
                    distances[edge.destination] = distances[edge.source] + edge.weight;
                    predecessors[edge.destination] = edge.source;
                }
            }
        }

        // Проверка на наличие циклов с отрицательным весом
        for (const Edge& edge : edges) {
            if (distances[edge.source] != INF && distances[edge.source] + edge.weight < distances[edge.destination]) {
                return false; // Граф содержит цикл с отрицательным весом
            }
        }

        return true; // Циклы с отрицательным весом не найдены
    }

    //печатает кратчайшие расстояния
    void printPath(int source, int destination, const vector<int>& predecessors) {
        if (source == destination) {
            cout << source + 1;
            return;
        }
        if (predecessors[destination] == -1) {
            cout << ""Путь от "" << source + 1 << "" до "" << destination << "" не существует."";
            return;
        }
        printPath(source, predecessors[destination], predecessors);
        cout << "" -> "" << destination;
    }
};

int main() {
    setlocale(LC_ALL, ""Russian"");
    int V = 8;
    Graph g(V);
    //создали граф из пунтка 10
    g.addEdge(0, 1, 23);
    g.addEdge(0, 2, 12);
    g.addEdge(1, 0, 23);
    g.addEdge(1, 2, 25);
    g.addEdge(1, 4, 22);
    g.addEdge(1, 7, 35);
    g.addEdge(2, 0, 12);
    g.addEdge(2, 1, 25);
    g.addEdge(2, 3, 18);
    g.addEdge(3, 2, 18);
    g.addEdge(3, 5, 20);
    g.addEdge(4, 1, 22);
    g.addEdge(4, 5, 23);
    g.addEdge(4, 6, 14);
    g.addEdge(5, 3, 20);
    g.addEdge(5, 4, 23);
    g.addEdge(5, 6, 24);
    g.addEdge(6, 4, 14);
    g.addEdge(6, 5, 24);
    g.addEdge(6, 7, 16);
    g.addEdge(7, 1, 35);
    g.addEdge(7, 6, 16);

    //вывели на экран
    g.displayGraph();

    //выбираем первую вершину и относительно нее 
    int node = 1;
    //считаем Эксцентриситет
    cout << ""Эксцентриситет узла "" << node << "" составляет: "" << g.findEccentricity(node) << endl;

    vector<int> distances;
    vector<int> predecessors;
    //выбираем первую вершину и относительно нее считаем кратчайшие расстояния по Белману-Форду
    int source = 1;
    //если нет отрицательного цикла
    if (g.bellmanFord(source, distances, predecessors)) {
        //выписываем кратчайшие расстояния
        cout << ""Кратчайшие пути из узла "" << source + 1 << "" являются:"" << endl;
        for (int i = 0; i < V; ++i) {
            cout << ""Расстояние до "" << i + 1 << "" равно "" << distances[i] << "" и путь равен: "";
            g.printPath(source, i, predecessors);
            cout << endl;
        }
    }
    else {
        cout << ""Граф содержит цикл с отрицательным весом"" << endl;
    }

    return 0;
}
"
ciMdTYQ1,BarDrawer,EDELWEISS1996,C#,Monday 13th of November 2023 11:56:29 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BarDrawer
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int valueMax = 100;
            int shift = 5;

            Console.WriteLine(""Введите закрашиваемый процент (Целое число от 0 до 100:"");

            int value = Convert.ToInt32(Console.ReadLine());

            Console.WriteLine(""Введите символ, которым процент будет закрашен:"");

            char valueSymbol = Convert.ToChar(Console.ReadLine());

            Console.WriteLine(""С какой строки рисовать бар?"");

            int positionY = Convert.ToInt32(Console.ReadLine()) + shift;

            DrawBar(value, valueMax, valueSymbol, positionY);
        }

        static void DrawBar(int value, int valueMax, char valueSymbol, int positionY)
        {
            char space = '_';
            char bracketOpening = '[';
            char bracketClosing = ']';
            string bar = String.Empty;
            int freeSpace = valueMax - value;

            Console.SetCursorPosition(0, positionY);
            Console.Write(bracketOpening);

        for (int i = 0; i < value; i++)
            {
                Console.Write(valueSymbol);
            }

        for (int i = 0; i < freeSpace; i++)
            {
               Console.Write(space);
            }

            Console.WriteLine(bracketClosing);
            Console.WriteLine(""Бар отрисован..."");
            Console.ReadLine();
        }
    }
}
"
KPzARf8X,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 13th of November 2023 11:50:18 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Zwickauea:xwwFrE on 212.224.93.130
You can connect via SSH.
Regards"
9k9bbn0H,Untitled,caffeine314,Autohotkey,Monday 13th of November 2023 11:47:52 AM CDT,"; Prevent my local browser from interpreting Escape: if it does, full screen
; Citrix becomes windowed, and that's almost never what I want.  But sending
; escape to work is important, so we want to short circuit the Escape key and
; send it to the application (Citrix) rather than the browser.
;
#HotIf WinActive( ""ahk_exe chrome.exe"" )
password1 := 'A password'
password2 := 'Another password'
SetTimer stop_logout, 5000
^F1::
{
	SendText password1
}
^F2::
{
	SendText password2
}
$Esc::
{
	Send '^b'
}
^b::
{
	Send '{Esc}'
}


stop_logout()
{
	; Move mouse slowly by 20px to the right, 30px down from current position.
	MouseMove 20, 20, 50, ""R""
	MsgBox ""Hello!""
}
"
whVKUR74,Untitled,parv28,C++,Monday 13th of November 2023 11:32:00 AM CDT,"class MedianFinder {
public:

	priority_queue<int> left_queue;
	priority_queue<int, vector<int>, greater<int>> right_queue;

	MedianFinder() {
	}

	void addNum(int num) {
		left_queue.push(num);
		right_queue.push(left_queue.top());
		left_queue.pop();

		if(left_queue.size()<right_queue.size()) {
			left_queue.push(right_queue.top());
			right_queue.pop();
		}
	}

	double findMedian() {
		if(left_queue.size() == right_queue.size()) {
			return ((double)left_queue.top() + (double)right_queue.top()) / 2;
		}
		return (double) left_queue.top();
	}
}"
0qXXjC5c,chatroom.html,Murti,HTML 5,Monday 13th of November 2023 11:27:20 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>
    <div id=""user-hello""></div>
    {{roomName|json_script:""room-name""}}
    <script>
        const roomName = JSON.parse(document.getElementById('room-name').textContent);
        console.log(roomName);
        const chatSocket = new WebSocket(
            'ws://' +
            window.location.host +
            '/ws/chat/' + 
            roomName + 
            '/', 
        );


        chatSocket.onmessage = function (e) {
            const data = JSON.parse(e.data);
            console.log(data);
            document.querySelector('#user-hello').innerHTML = (data.tester)

        }

    </script>
</body>
</html>"
WMHH6ys6,consumers.py,Murti,Python,Monday 13th of November 2023 11:26:43 AM CDT,"import json
from channels.generic.websocket import AsyncWebsocketConsumer


class ChatRoomConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        self.room_name = self.scope['url_route']['kwargs']['room_name']
        print(f""Connected to room: {self.room_name}"")
        self.room_group_name = 'chat_%s' % self.room_name
        
        await self.channel_layer.group_add(
            self.room_group_name,
            self.channel_name

        )

        await self.accept()
        
        await self.channel_layer.group_send(
            self.room_group_name,
            {
                'type': 'tester_message',
                'tester': 'hello world',
            }
        )

    async def tester_message(self, event):
        tester = event['tester']

        await self.send(text_data=json.dumps({
            'tester':tester,
        }))

    async def disconnect(self, close_code):
        await self.channel_layer.group_discard(
            self.room_group_name,
            self.channel_name,
        )"
LD82Gp1t,pause stick logic,fig02,C,Monday 13th of November 2023 11:25:50 AM CDT,"            if (pauseCtx->stickAdjX < -30) {
                if (sStickXRepeatState == -1) {
                    sStickXRepeatTimer--;
                    if (sStickXRepeatTimer < 0) {
                        sStickXRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY; // 2 frames
                    } else {
                        pauseCtx->stickAdjX = 0;
                    }
                } else {
                    sStickXRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY_FIRST; // 10 frames
                    sStickXRepeatState = -1;
                }
            } else if (pauseCtx->stickAdjX > 30) {
                if (sStickXRepeatState == 1) {
                    sStickXRepeatTimer--;
                    if (sStickXRepeatTimer < 0) {
                        sStickXRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY;
                    } else {
                        pauseCtx->stickAdjX = 0;
                    }
                } else {
                    sStickXRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY_FIRST;
                    sStickXRepeatState = 1;
                }
            } else {
                sStickXRepeatState = 0;
            }

            if (pauseCtx->stickAdjY < -30) {
                if (sStickYRepeatState == -1) {
                    sStickYRepeatTimer--;
                    if (sStickYRepeatTimer < 0) {
                        sStickYRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY;
                    } else {
                        pauseCtx->stickAdjY = 0;
                    }
                } else {
                    sStickYRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY_FIRST;
                    sStickYRepeatState = -1;
                }
            } else if (pauseCtx->stickAdjY > 30) {
                if (sStickYRepeatState == 1) {
                    sStickYRepeatTimer--;
                    if (sStickYRepeatTimer < 0) {
                        sStickYRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY;
                    } else {
                        pauseCtx->stickAdjY = 0;
                    }
                } else {
                    sStickYRepeatTimer = R_PAUSE_STICK_REPEAT_DELAY_FIRST;
                    sStickYRepeatState = 1;
                }
            } else {
                sStickYRepeatState = 0;
            }
        }"
tf6dEhu5,app routing.py,Murti,Python,Monday 13th of November 2023 11:25:32 AM CDT,"from django.urls import re_path

from . import consumers

websocket_urlpatterns = [
    re_path(r'ws/chat/(?P<room_name>\w+)/$', consumers.ChatRoomConsumer),
]"
jqDSZ1Cn,project routing.py,Murti,Python,Monday 13th of November 2023 11:24:28 AM CDT,"from channels.auth import AuthMiddlewareStack
from channels.routing import ProtocolTypeRouter, URLRouter
import chat.routing

application = ProtocolTypeRouter({
    
    'websocket': AuthMiddlewareStack(
        URLRouter(
            chat.routing.websocket_urlpatterns
        )
    ),
})"
UdKS3Zwp,settings.py,Murti,Python,Monday 13th of November 2023 11:23:41 AM CDT,"""""""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
""""""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n6o1v1s6f%y+vln5@d4_z3x2$6vgi8g3m^^r&ev@shg^5jpy=o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat',
    'channels',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ASGI_APPLICATION = ""core.routing.application"" 

CHANNEL_LAYERS = {
    ""default"": {
        ""BACKEND"": ""channels.layers.InMemoryChannelLayer""
    }
}

"
aBCfMVes,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 13th of November 2023 11:21:00 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT530108"
yENquyca,Exercicio class DadosVeiculo Java,hercioneto,Java,Monday 13th of November 2023 11:19:55 AM CDT,"**
 *
 * @author Professor Hercio Neto
 */
public class DadosVeiculo {
    private String modelo;
    private Integer km;
    private Double valorFipe;
    private Double valorVenda;
    private Double percentualVenda;

    

    public String getModelo() {
        return modelo;
    }

    public void setModelo(String modelo) {
        this.modelo = modelo;
    }

    public Integer getKm() {
        return km;
    }

    public void setKm(Integer km) {
        this.km = km;
    }

    public Double getValorFipe() {
        return valorFipe;
    }

    public void setValorFipe(Double valorFipe) {
        this.valorFipe = valorFipe;
    }

    public Double getValorVenda() {
        return valorVenda;
    }

    public void setValorVenda(Double valorVenda) {
        this.valorVenda = valorVenda;
    }
    
    public Double getPercentualVenda() {
        return percentualVenda;
    }

    public void setPercentualVenda(Double percentualVenda) {
        this.percentualVenda = percentualVenda;
    }
    
    public void calcularVenda(Double percentualVenda) {
         Double valorPercentual = this.valorFipe*(percentualVenda/100);
         this.valorVenda = this.valorFipe+valorPercentual;
    }
    
    public void imprime(){
        System.out.println(""Dados do veículo"");
        System.out.println(""Modelo: ""+ this.modelo);
        System.out.println(""Km: ""+ this.km);
        System.out.println(""Valor Fipe: ""+ this.valorFipe);
        System.out.println(""Valor Venda: ""+ this.valorVenda);
    }
    
    
}"
VaCBFLVZ,Exercicio class Veiculos Java,hercioneto,Java,Monday 13th of November 2023 11:19:04 AM CDT,"import java.util.Scanner;

/**
 *
 * @author Professor Hercio Neto
 */
public class Veiculos {

    public static void main(String[] args) {
        //inciar nova instancia do objeto DadosVeiculo
        DadosVeiculo v = new DadosVeiculo();
        Scanner ler = new Scanner(System.in);
        String modelo;
        Double valorFipe, valorVenda, percentualVenda;
        Integer km;
        System.out.println(""Digite o modelo do veículo: "");
        modelo = ler.next();
        System.out.println(""Digite a km do veículo: "");
        km = ler.nextInt();
        System.out.println(""Digite o valor da Fipe do veículo ""+ modelo  +"": "");
        valorFipe = ler.nextDouble();
        System.out.println(""Digite o valor que será acrescido ao ""+ modelo  +"" em %: "");
        percentualVenda = ler.nextDouble();
        v.setModelo(modelo);
        v.setKm(km);
        v.setValorFipe(valorFipe);
        v.setPercentualVenda(percentualVenda);
        v.calcularVenda(v.getPercentualVenda());
        v.imprime();
        
    }
}"
9i1zBuRJ,Untitled,dllbridge,C,Monday 13th of November 2023 11:09:20 AM CDT,"/*

#include <windows.h>
#include   <stdio.h>
#include  <locale.h>





////////////////////////////////////////////////////////
int main()                                            // 
{
	
	 setlocale(LC_ALL, ""Rus"");
	
	 printf(""Привет! \n"");
	 
	 
//	 printf(Rus(""Мельница"") );
}


*/








#include <windows.h>
#include   <stdio.h>



LPCSTR Rus(LPCTSTR pszIn);

void ConsolePrint(const char* str, int Colour);
void ConsolePrint(int Y, int X, const char* str, int Colour);


////////////////////////////////////////////////////////
int main()                                            // 
{
	

	 
	 
	 printf(Rus(""Мельница"") );
	 
	 
	 ConsolePrint(""SONY"", 2);

	 
	 ConsolePrint(7, 27, ""Pictures"", 4);	 
	 ConsolePrint("""",     15);
}






































LPCSTR Rus(LPCTSTR pszIn)
{
    static char szBuffer[MAX_PATH];
    CharToOemBuff(pszIn, szBuffer, MAX_PATH);
    return szBuffer;
}


void ConsolePrint(const char* str, int Colour)
{
	 DWORD   result;
     COORD    coord;
     HANDLE  hStdout = GetStdHandle(STD_OUTPUT_HANDLE);	
 	 SetConsoleTextAttribute(hStdout, Colour);                       //  Изменим цвет текста

	 WriteConsole(hStdout, Rus(str), strlen(str), &result, 0);
}

//   Y  - это строка, X - это позиция в строке
//  ============================================
void ConsolePrint(int Y, int X, const char* str, int Colour)
{
	 DWORD   result;
     COORD    coord;
     HANDLE  hStdout = GetStdHandle(STD_OUTPUT_HANDLE);	
 	 SetConsoleTextAttribute(hStdout, Colour);                     
     coord.X = X;                                                    //  Выбираем позицию 
	 coord.Y = Y;													 //  Выбираем строку
	 SetConsoleCursorPosition(hStdout, coord);  	
	 
	 WriteConsole(hStdout, Rus(str), strlen(str), &result, 0);
}


/*                какой цвет как обозначается:
   (HEX)	
0   0 = черный
1   1 = синий
2   2 = зеленый
3   3 = голубой
4   4 = красный
5   5 = лиловый
6   6 = желтый
7   7 = белый
8   8 = серый
9   9 = светло-синий
10  a = светло-зеленый
11  b = светло-голубой
12  c = светло-красный
13  d = светло-лиловый
14  e = светло-желтый
15  f = ярко-белый
*/





































/*



#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#pragma warning(disable : 4996)
using namespace std;
char sc[15];
int ind = 0;
int main() {
	int s = 0;
	while (true) {
		printf(""enter coordinactions of 2 cells : "");
		scanf(""%s"", sc);
		
		if(0 == strcmp(sc, ""end"") ) break;

		for (int i = 1; i < 3; i++) {
			printf(""%dst is "", i);
			if (sc[ind] == '-') ind++;
			if (sc[ind] % 2 == 1 && sc[ind + 1] % 2 == 1) {
				printf(""black"");
				s += -10;
			}
			else if (sc[ind] % 2 == 0 && sc[ind + 1] % 2 == 1) {
				printf(""white"");
				s += 10;
			}
			else if (sc[ind] % 2 == 0 && sc[ind + 1] % 2 == 0) {
		    	printf(""black"");
				s += -10;
			}
			else if (sc[ind] % 2 == 1 && sc[ind + 1] % 2 == 0) {
				printf(""white"");
				s += 10;
			}
	     	printf(""\n"");
			if (i == 2 && abs(s) == 20) {
				printf(""Yes, the colors are the same!\n\a"");
			}
			else if(i == 2) {
				printf(""No, the colors arent the same!\n\a"");
			}
			ind += 2;
		}
	}
}




*/

"
3bhunHFt,Untitled,leonard007,C for Macs,Monday 13th of November 2023 11:00:35 AM CDT,"public class Main {
    public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, ShortBufferException, IllegalBlockSizeException, BadPaddingException, InvalidKeySpecException {
        char[] password = ""short_password"".toCharArray();
        byte[] salt = new byte[16];
        int iteration_count = 100;

        int key_size = 128;
// set salt values to random

        byte[] keyBytes = new byte[18];

        SecureRandom myPRNG = new SecureRandom();
// seed the key
        myPRNG.nextBytes(keyBytes);


        myPRNG.nextBytes(salt);

// initialize key factory for HMAC-SHA1 derivation
        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA1"");
// set key specification
        PBEKeySpec pbekSpec = new PBEKeySpec(password, salt, iteration_count, key_size);
// generate the key
        SecretKey myAESPBKey = new SecretKeySpec(keyFactory.generateSecret(pbekSpec).getEncoded(), ""DES"");
// print the key
        System.out.println(""AES key: "" + javax.xml.bind.DatatypeConverter.printHexBinary(myAESPBKey.getEncoded()));


// build the key from random key bytes
        SecretKeySpec myKey = new SecretKeySpec(keyBytes, ""DES"");
// instantiate AES object for ECB with no padding
        Cipher myAES = Cipher.getInstance(""DES/CBC/PKCS5Padding"");
// initialize AES objecy to encrypt mode
        myAES.init(Cipher.ENCRYPT_MODE, myKey);
// initialize plaintext
        byte[] plaintext = new byte[16];
//initialize ciphertext
        byte[] ciphertext = new byte[16];
// update cipher with the plaintext
        int cLength = myAES.update(plaintext, 0, plaintext.length, ciphertext, 0);
// process remaining blocks of plaintext
        cLength += myAES.doFinal(ciphertext, cLength);
// print plaintext and ciphertext
        System.out.println(""plaintext: "" +
                javax.xml.bind.DatatypeConverter.printHexBinary(plaintext));
        System.out.println(""ciphertext: "" +
                javax.xml.bind.DatatypeConverter.printHexBinary(ciphertext));
// initialize AES for decryption
        myAES.init(Cipher.DECRYPT_MODE, myKey);
// initialize a new array of bytes to place the decryption
        byte[] dec_plaintext = new byte[16];
        cLength = myAES.update(ciphertext, 0, ciphertext.length, dec_plaintext, 0);
// process remaining blocks of ciphertext
        cLength += myAES.doFinal(dec_plaintext, cLength);
// print the new plaintext (hopefully identical to the initial one)
        System.out.println(""decrypted: "" + javax.xml.bind.DatatypeConverter.printHexBinary(dec_plaintext));
    }
}"
hwkyuwUp,Cronicle on Proxmox with Debian 12,zelig2,Bash,Monday 13th of November 2023 10:53:11 AM CDT,"++ command grep -q '/root/.nvm/versions/[^/]*/[^/]*/share/man'
++ nvm_echo /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ command printf '%s\n' /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ nvm_grep -Eq '(^|:)(/usr(/local)?)?/share/man:.*/root/.nvm/[^/]*/share/man'
++ GREP_OPTIONS=
++ command grep -Eq '(^|:)(/usr(/local)?)?/share/man:.*/root/.nvm/[^/]*/share/man'
++ nvm_echo /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ command printf '%s\n' /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ nvm_grep -Eq '(^|:)(/usr(/local)?)?/share/man:.*/root/.nvm/versions/[^/]*/[^/]*/share/man'
++ GREP_OPTIONS=
++ command grep -Eq '(^|:)(/usr(/local)?)?/share/man:.*/root/.nvm/versions/[^/]*/[^/]*/share/man'
++ nvm_echo /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ command printf '%s\n' /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ command sed -e 's#/root/.nvm/[^/]*/share/man[^:]*#/root/.nvm/versions/node/v16.20.1/share/man#' -e 's#/root/.nvm/versions/[^/]*/[^/]*/share/man[^:]*#/root/.nvm/versions/node/v16.20.1/share/man#'
++ nvm_echo /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
++ command printf '%s\n' /root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
+ MANPATH=/root/.nvm/versions/node/v16.20.1/share/man:/usr/local/man:/usr/local/share/man:/usr/share/man
+ export MANPATH
+ export PATH
+ hash -r
+ export NVM_BIN=/root/.nvm/versions/node/v16.20.1/bin
+ NVM_BIN=/root/.nvm/versions/node/v16.20.1/bin
+ export NVM_INC=/root/.nvm/versions/node/v16.20.1/include/node
+ NVM_INC=/root/.nvm/versions/node/v16.20.1/include/node
+ '[' '' = true ']'
+ local NVM_USE_OUTPUT
+ NVM_USE_OUTPUT=
+ '[' 0 -ne 1 ']'
+ nvm_is_iojs_version v16.20.1
+ case ""${1-}"" in
+ return 1
++ nvm_print_npm_version
++ nvm_has npm
++ type npm
+++ npm --version
++ command printf ' (npm v8.19.4)'
+ NVM_USE_OUTPUT='Now using node v16.20.1 (npm v8.19.4)'
+ '[' _v16.20.1 '!=' _system ']'
+ local NVM_USE_CMD
+ NVM_USE_CMD='nvm use --delete-prefix'
+ '[' -n v16.20.1 ']'
+ NVM_USE_CMD='nvm use --delete-prefix v16.20.1'
+ '[' 0 -eq 1 ']'
+ nvm_die_on_prefix 0 'nvm use --delete-prefix v16.20.1' /root/.nvm/versions/node/v16.20.1
+ local NVM_DELETE_PREFIX
+ NVM_DELETE_PREFIX=0
+ case ""${NVM_DELETE_PREFIX}"" in
+ local NVM_COMMAND
+ NVM_COMMAND='nvm use --delete-prefix v16.20.1'
+ local NVM_VERSION_DIR
+ NVM_VERSION_DIR=/root/.nvm/versions/node/v16.20.1
+ '[' -z 'nvm use --delete-prefix v16.20.1' ']'
+ '[' -z /root/.nvm/versions/node/v16.20.1 ']'
+ '[' -n '' ']'
+ local NVM_OS
++ nvm_get_os
++ local NVM_UNAME
+++ command uname -a
++ NVM_UNAME='Linux cronicle 6.2.16-19-pve #1 SMP PREEMPT_DYNAMIC PMX 6.2.16-19 (2023-10-24T12:07Z) x86_64 GNU/Linux'
++ local NVM_OS
++ case ""${NVM_UNAME}"" in
++ NVM_OS=linux
++ nvm_echo linux
++ command printf '%s\n' linux
+ NVM_OS=linux
+ local NVM_NPM_CONFIG_x_PREFIX_ENV
++ command awk 'BEGIN { for (name in ENVIRON) if (toupper(name) == ""NPM_CONFIG_PREFIX"") { print name; break } }'
+ NVM_NPM_CONFIG_x_PREFIX_ENV=
+ '[' -n '' ']'
+ local NVM_NPM_BUILTIN_NPMRC
+ NVM_NPM_BUILTIN_NPMRC=/root/.nvm/versions/node/v16.20.1/lib/node_modules/npm/npmrc
+ nvm_npmrc_bad_news_bears /root/.nvm/versions/node/v16.20.1/lib/node_modules/npm/npmrc
+ local NVM_NPMRC
+ NVM_NPMRC=/root/.nvm/versions/node/v16.20.1/lib/node_modules/npm/npmrc
+ '[' -n /root/.nvm/versions/node/v16.20.1/lib/node_modules/npm/npmrc ']'
+ '[' -f /root/.nvm/versions/node/v16.20.1/lib/node_modules/npm/npmrc ']'
+ return 1
+ local NVM_NPM_GLOBAL_NPMRC
+ NVM_NPM_GLOBAL_NPMRC=/root/.nvm/versions/node/v16.20.1/etc/npmrc
+ nvm_npmrc_bad_news_bears /root/.nvm/versions/node/v16.20.1/etc/npmrc
+ local NVM_NPMRC
+ NVM_NPMRC=/root/.nvm/versions/node/v16.20.1/etc/npmrc
+ '[' -n /root/.nvm/versions/node/v16.20.1/etc/npmrc ']'
+ '[' -f /root/.nvm/versions/node/v16.20.1/etc/npmrc ']'
+ return 1
+ local NVM_NPM_USER_NPMRC
+ NVM_NPM_USER_NPMRC=/root/.npmrc
+ nvm_npmrc_bad_news_bears /root/.npmrc
+ local NVM_NPMRC
+ NVM_NPMRC=/root/.npmrc
+ '[' -n /root/.npmrc ']'
+ '[' -f /root/.npmrc ']'
+ return 1
+ local NVM_NPM_PROJECT_NPMRC
++ nvm_find_project_dir
++ local path_
++ path_=/
++ '[' / '!=' '' ']'
++ '[' '!' -f //package.json ']'
++ '[' '!' -d //node_modules ']'
++ path_=
++ '[' '' '!=' '' ']'
++ nvm_echo ''
++ command printf '%s\n' ''
+ NVM_NPM_PROJECT_NPMRC=/.npmrc
+ nvm_npmrc_bad_news_bears /.npmrc
+ local NVM_NPMRC
+ NVM_NPMRC=/.npmrc
+ '[' -n /.npmrc ']'
+ '[' -f /.npmrc ']'
+ return 1
+ '[' -n 'Now using node v16.20.1 (npm v8.19.4)' ']'
+ '[' 0 -ne 1 ']'
+ nvm_echo 'Now using node v16.20.1 (npm v8.19.4)'
+ command printf '%s\n' 'Now using node v16.20.1 (npm v8.19.4)'
Now using node v16.20.1 (npm v8.19.4)
+ nvm_install_npm_if_needed v16.20.1
+ local VERSION
++ nvm_ls_current
++ local NVM_LS_CURRENT_NODE_PATH
+++ command which node
++ NVM_LS_CURRENT_NODE_PATH=/root/.nvm/versions/node/v16.20.1/bin/node
+++ nvm_version_dir iojs
+++ local NVM_WHICH_DIR
+++ NVM_WHICH_DIR=iojs
+++ '[' -z iojs ']'
+++ '[' iojs = new ']'
+++ '[' _iojs = _iojs ']'
+++ nvm_echo /root/.nvm/versions/io.js
+++ command printf '%s\n' /root/.nvm/versions/io.js
++ nvm_tree_contains_path /root/.nvm/versions/io.js /root/.nvm/versions/node/v16.20.1/bin/node
++ local tree
++ tree=/root/.nvm/versions/io.js
++ local node_path
++ node_path=/root/.nvm/versions/node/v16.20.1/bin/node
++ '[' @/root/.nvm/versions/io.js@ = @@ ']'
++ '[' @/root/.nvm/versions/node/v16.20.1/bin/node@ = @@ ']'
++ local previous_pathdir
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin/node
++ local pathdir
+++ dirname /root/.nvm/versions/node/v16.20.1/bin/node
++ pathdir=/root/.nvm/versions/node/v16.20.1/bin
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' '' ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' . ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' / ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/io.js ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/node/v16.20.1/bin/node ']'
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin
+++ dirname /root/.nvm/versions/node/v16.20.1/bin
++ pathdir=/root/.nvm/versions/node/v16.20.1
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' '' ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' . ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' / ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/io.js ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/node/v16.20.1/bin ']'
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1
+++ dirname /root/.nvm/versions/node/v16.20.1
++ pathdir=/root/.nvm/versions/node
++ '[' /root/.nvm/versions/node '!=' '' ']'
++ '[' /root/.nvm/versions/node '!=' . ']'
++ '[' /root/.nvm/versions/node '!=' / ']'
++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/io.js ']'
++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/node/v16.20.1 ']'
++ previous_pathdir=/root/.nvm/versions/node
+++ dirname /root/.nvm/versions/node
++ pathdir=/root/.nvm/versions
++ '[' /root/.nvm/versions '!=' '' ']'
++ '[' /root/.nvm/versions '!=' . ']'
++ '[' /root/.nvm/versions '!=' / ']'
++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/io.js ']'
++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/node ']'
++ previous_pathdir=/root/.nvm/versions
+++ dirname /root/.nvm/versions
++ pathdir=/root/.nvm
++ '[' /root/.nvm '!=' '' ']'
++ '[' /root/.nvm '!=' . ']'
++ '[' /root/.nvm '!=' / ']'
++ '[' /root/.nvm '!=' /root/.nvm/versions/io.js ']'
++ '[' /root/.nvm '!=' /root/.nvm/versions ']'
++ previous_pathdir=/root/.nvm
+++ dirname /root/.nvm
++ pathdir=/root
++ '[' /root '!=' '' ']'
++ '[' /root '!=' . ']'
++ '[' /root '!=' / ']'
++ '[' /root '!=' /root/.nvm/versions/io.js ']'
++ '[' /root '!=' /root/.nvm ']'
++ previous_pathdir=/root
+++ dirname /root
++ pathdir=/
++ '[' / '!=' '' ']'
++ '[' / '!=' . ']'
++ '[' / '!=' / ']'
++ '[' / = /root/.nvm/versions/io.js ']'
++ nvm_tree_contains_path /root/.nvm /root/.nvm/versions/node/v16.20.1/bin/node
++ local tree
++ tree=/root/.nvm
++ local node_path
++ node_path=/root/.nvm/versions/node/v16.20.1/bin/node
++ '[' @/root/.nvm@ = @@ ']'
++ '[' @/root/.nvm/versions/node/v16.20.1/bin/node@ = @@ ']'
++ local previous_pathdir
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin/node
++ local pathdir
+++ dirname /root/.nvm/versions/node/v16.20.1/bin/node
++ pathdir=/root/.nvm/versions/node/v16.20.1/bin
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' '' ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' . ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' / ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm ']'
++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/node/v16.20.1/bin/node ']'
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin
+++ dirname /root/.nvm/versions/node/v16.20.1/bin
++ pathdir=/root/.nvm/versions/node/v16.20.1
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' '' ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' . ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' / ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm ']'
++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/node/v16.20.1/bin ']'
++ previous_pathdir=/root/.nvm/versions/node/v16.20.1
+++ dirname /root/.nvm/versions/node/v16.20.1
++ pathdir=/root/.nvm/versions/node
++ '[' /root/.nvm/versions/node '!=' '' ']'
++ '[' /root/.nvm/versions/node '!=' . ']'
++ '[' /root/.nvm/versions/node '!=' / ']'
++ '[' /root/.nvm/versions/node '!=' /root/.nvm ']'
++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/node/v16.20.1 ']'
++ previous_pathdir=/root/.nvm/versions/node
+++ dirname /root/.nvm/versions/node
++ pathdir=/root/.nvm/versions
++ '[' /root/.nvm/versions '!=' '' ']'
++ '[' /root/.nvm/versions '!=' . ']'
++ '[' /root/.nvm/versions '!=' / ']'
++ '[' /root/.nvm/versions '!=' /root/.nvm ']'
++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/node ']'
++ previous_pathdir=/root/.nvm/versions
+++ dirname /root/.nvm/versions
++ pathdir=/root/.nvm
++ '[' /root/.nvm '!=' '' ']'
++ '[' /root/.nvm '!=' . ']'
++ '[' /root/.nvm '!=' / ']'
++ '[' /root/.nvm '!=' /root/.nvm ']'
++ '[' /root/.nvm = /root/.nvm ']'
++ local VERSION
+++ node --version
++ VERSION=v16.20.1
++ '[' v16.20.1 = v0.6.21-pre ']'
++ nvm_echo v16.20.1
++ command printf '%s\n' v16.20.1
+ VERSION=v16.20.1
+ nvm_has npm
+ type npm
+ return 0
+ '[' -n '' ']'
+ nvm_ensure_default_set 16.20.1
+ local VERSION
+ VERSION=16.20.1
+ '[' -z 16.20.1 ']'
+ nvm_alias default
+ local OUTPUT
++ nvm alias default 16.20.1
++ '[' 3 -lt 1 ']'
++ local DEFAULT_IFS
+++ command tr t '\t'
+++ nvm_echo t
+++ command printf '%s\n' t
++ DEFAULT_IFS=' 
'
++ '[' huxBc '!=' huxBc ']'
++ '[' huxBc '!=' huxBc ']'
++ '[' -n /usr/bin/bash ']'
++ '[' huxBc '!=' huxBc ']'
++ '[' ' 
' '!=' ' 
' ']'
++ local i
++ for i in ""$@""
++ case $i in
++ for i in ""$@""
++ case $i in
++ for i in ""$@""
++ case $i in
++ local COMMAND
++ COMMAND=alias
++ shift
++ local VERSION
++ local ADDITIONAL_PARAMETERS
++ case $COMMAND in
++ local NVM_ALIAS_DIR
+++ nvm_alias_path
++++ nvm_version_dir old
++++ local NVM_WHICH_DIR
++++ NVM_WHICH_DIR=old
++++ '[' -z old ']'
++++ '[' old = new ']'
++++ '[' _old = _iojs ']'
++++ '[' _old = _old ']'
++++ nvm_echo /root/.nvm
++++ command printf '%s\n' /root/.nvm
+++ nvm_echo /root/.nvm/alias
+++ command printf '%s\n' /root/.nvm/alias
++ NVM_ALIAS_DIR=/root/.nvm/alias
++ local NVM_CURRENT
+++ nvm_ls_current
+++ local NVM_LS_CURRENT_NODE_PATH
++++ command which node
+++ NVM_LS_CURRENT_NODE_PATH=/root/.nvm/versions/node/v16.20.1/bin/node
++++ nvm_version_dir iojs
++++ local NVM_WHICH_DIR
++++ NVM_WHICH_DIR=iojs
++++ '[' -z iojs ']'
++++ '[' iojs = new ']'
++++ '[' _iojs = _iojs ']'
++++ nvm_echo /root/.nvm/versions/io.js
++++ command printf '%s\n' /root/.nvm/versions/io.js
+++ nvm_tree_contains_path /root/.nvm/versions/io.js /root/.nvm/versions/node/v16.20.1/bin/node
+++ local tree
+++ tree=/root/.nvm/versions/io.js
+++ local node_path
+++ node_path=/root/.nvm/versions/node/v16.20.1/bin/node
+++ '[' @/root/.nvm/versions/io.js@ = @@ ']'
+++ '[' @/root/.nvm/versions/node/v16.20.1/bin/node@ = @@ ']'
+++ local previous_pathdir
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin/node
+++ local pathdir
++++ dirname /root/.nvm/versions/node/v16.20.1/bin/node
+++ pathdir=/root/.nvm/versions/node/v16.20.1/bin
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' '' ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' . ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' / ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/node/v16.20.1/bin/node ']'
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin
++++ dirname /root/.nvm/versions/node/v16.20.1/bin
+++ pathdir=/root/.nvm/versions/node/v16.20.1
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' '' ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' . ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' / ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/node/v16.20.1/bin ']'
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1
++++ dirname /root/.nvm/versions/node/v16.20.1
+++ pathdir=/root/.nvm/versions/node
+++ '[' /root/.nvm/versions/node '!=' '' ']'
+++ '[' /root/.nvm/versions/node '!=' . ']'
+++ '[' /root/.nvm/versions/node '!=' / ']'
+++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/node/v16.20.1 ']'
+++ previous_pathdir=/root/.nvm/versions/node
++++ dirname /root/.nvm/versions/node
+++ pathdir=/root/.nvm/versions
+++ '[' /root/.nvm/versions '!=' '' ']'
+++ '[' /root/.nvm/versions '!=' . ']'
+++ '[' /root/.nvm/versions '!=' / ']'
+++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/node ']'
+++ previous_pathdir=/root/.nvm/versions
++++ dirname /root/.nvm/versions
+++ pathdir=/root/.nvm
+++ '[' /root/.nvm '!=' '' ']'
+++ '[' /root/.nvm '!=' . ']'
+++ '[' /root/.nvm '!=' / ']'
+++ '[' /root/.nvm '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root/.nvm '!=' /root/.nvm/versions ']'
+++ previous_pathdir=/root/.nvm
++++ dirname /root/.nvm
+++ pathdir=/root
+++ '[' /root '!=' '' ']'
+++ '[' /root '!=' . ']'
+++ '[' /root '!=' / ']'
+++ '[' /root '!=' /root/.nvm/versions/io.js ']'
+++ '[' /root '!=' /root/.nvm ']'
+++ previous_pathdir=/root
++++ dirname /root
+++ pathdir=/
+++ '[' / '!=' '' ']'
+++ '[' / '!=' . ']'
+++ '[' / '!=' / ']'
+++ '[' / = /root/.nvm/versions/io.js ']'
+++ nvm_tree_contains_path /root/.nvm /root/.nvm/versions/node/v16.20.1/bin/node
+++ local tree
+++ tree=/root/.nvm
+++ local node_path
+++ node_path=/root/.nvm/versions/node/v16.20.1/bin/node
+++ '[' @/root/.nvm@ = @@ ']'
+++ '[' @/root/.nvm/versions/node/v16.20.1/bin/node@ = @@ ']'
+++ local previous_pathdir
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin/node
+++ local pathdir
++++ dirname /root/.nvm/versions/node/v16.20.1/bin/node
+++ pathdir=/root/.nvm/versions/node/v16.20.1/bin
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' '' ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' . ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' / ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm ']'
+++ '[' /root/.nvm/versions/node/v16.20.1/bin '!=' /root/.nvm/versions/node/v16.20.1/bin/node ']'
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1/bin
++++ dirname /root/.nvm/versions/node/v16.20.1/bin
+++ pathdir=/root/.nvm/versions/node/v16.20.1
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' '' ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' . ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' / ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm ']'
+++ '[' /root/.nvm/versions/node/v16.20.1 '!=' /root/.nvm/versions/node/v16.20.1/bin ']'
+++ previous_pathdir=/root/.nvm/versions/node/v16.20.1
++++ dirname /root/.nvm/versions/node/v16.20.1
+++ pathdir=/root/.nvm/versions/node
+++ '[' /root/.nvm/versions/node '!=' '' ']'
+++ '[' /root/.nvm/versions/node '!=' . ']'
+++ '[' /root/.nvm/versions/node '!=' / ']'
+++ '[' /root/.nvm/versions/node '!=' /root/.nvm ']'
+++ '[' /root/.nvm/versions/node '!=' /root/.nvm/versions/node/v16.20.1 ']'
+++ previous_pathdir=/root/.nvm/versions/node
++++ dirname /root/.nvm/versions/node
+++ pathdir=/root/.nvm/versions
+++ '[' /root/.nvm/versions '!=' '' ']'
+++ '[' /root/.nvm/versions '!=' . ']'
+++ '[' /root/.nvm/versions '!=' / ']'
+++ '[' /root/.nvm/versions '!=' /root/.nvm ']'
+++ '[' /root/.nvm/versions '!=' /root/.nvm/versions/node ']'
+++ previous_pathdir=/root/.nvm/versions
++++ dirname /root/.nvm/versions
+++ pathdir=/root/.nvm
+++ '[' /root/.nvm '!=' '' ']'
+++ '[' /root/.nvm '!=' . ']'
+++ '[' /root/.nvm '!=' / ']'
+++ '[' /root/.nvm '!=' /root/.nvm ']'
+++ '[' /root/.nvm = /root/.nvm ']'
+++ local VERSION
++++ node --version
+++ VERSION=v16.20.1
+++ '[' v16.20.1 = v0.6.21-pre ']'
+++ nvm_echo v16.20.1
+++ command printf '%s\n' v16.20.1
++ NVM_CURRENT=v16.20.1
++ command mkdir -p /root/.nvm/alias/lts
++ local ALIAS
++ local TARGET
++ local NVM_NO_COLORS
++ ALIAS=--
++ TARGET=--
++ '[' 2 -gt 0 ']'
++ case ""${1-}"" in
++ '[' -- = -- ']'
++ ALIAS=default
++ shift
++ '[' 1 -gt 0 ']'
++ case ""${1-}"" in
++ '[' default = -- ']'
++ '[' -- = -- ']'
++ TARGET=16.20.1
++ shift
++ '[' 0 -gt 0 ']'
++ '[' -z 16.20.1 ']'
++ '[' 16.20.1 '!=' -- ']'
++ '[' default '!=' default ']'
+++ nvm_version 16.20.1
+++ local PATTERN
+++ PATTERN=16.20.1
+++ local VERSION
+++ '[' -z 16.20.1 ']'
+++ '[' 16.20.1 = current ']'
+++ local NVM_NODE_PREFIX
++++ nvm_node_prefix
++++ nvm_echo node
++++ command printf '%s\n' node
+++ NVM_NODE_PREFIX=node
+++ case ""_${PATTERN}"" in
++++ command tail -1
++++ nvm_ls 16.20.1
++++ local PATTERN
++++ PATTERN=16.20.1
++++ local VERSIONS
++++ VERSIONS=
++++ '[' 16.20.1 = current ']'
++++ local NVM_IOJS_PREFIX
+++++ nvm_iojs_prefix
+++++ nvm_echo iojs
+++++ command printf '%s\n' iojs
++++ NVM_IOJS_PREFIX=iojs
++++ local NVM_NODE_PREFIX
+++++ nvm_node_prefix
+++++ nvm_echo node
+++++ command printf '%s\n' node
++++ NVM_NODE_PREFIX=node
++++ local NVM_VERSION_DIR_IOJS
+++++ nvm_version_dir iojs
+++++ local NVM_WHICH_DIR
+++++ NVM_WHICH_DIR=iojs
+++++ '[' -z iojs ']'
+++++ '[' iojs = new ']'
+++++ '[' _iojs = _iojs ']'
+++++ nvm_echo /root/.nvm/versions/io.js
+++++ command printf '%s\n' /root/.nvm/versions/io.js
++++ NVM_VERSION_DIR_IOJS=/root/.nvm/versions/io.js
++++ local NVM_VERSION_DIR_NEW
+++++ nvm_version_dir new
+++++ local NVM_WHICH_DIR
+++++ NVM_WHICH_DIR=new
+++++ '[' -z new ']'
+++++ '[' new = new ']'
+++++ nvm_echo /root/.nvm/versions/node
+++++ command printf '%s\n' /root/.nvm/versions/node
++++ NVM_VERSION_DIR_NEW=/root/.nvm/versions/node
++++ local NVM_VERSION_DIR_OLD
+++++ nvm_version_dir old
+++++ local NVM_WHICH_DIR
+++++ NVM_WHICH_DIR=old
+++++ '[' -z old ']'
+++++ '[' old = new ']'
+++++ '[' _old = _iojs ']'
+++++ '[' _old = _old ']'
+++++ nvm_echo /root/.nvm
+++++ command printf '%s\n' /root/.nvm
++++ NVM_VERSION_DIR_OLD=/root/.nvm
++++ case ""${PATTERN}"" in
++++ nvm_resolve_local_alias 16.20.1
++++ '[' -z 16.20.1 ']'
++++ local VERSION
++++ local EXIT_CODE
+++++ nvm_resolve_alias 16.20.1
+++++ '[' -z 16.20.1 ']'
+++++ local PATTERN
+++++ PATTERN=16.20.1
+++++ local ALIAS
+++++ ALIAS=16.20.1
+++++ local ALIAS_TEMP
+++++ local SEEN_ALIASES
+++++ SEEN_ALIASES=16.20.1
+++++ true
++++++ nvm_alias 16.20.1
++++++ nvm_echo
++++++ command printf '%s\n' ''
+++++ ALIAS_TEMP=
+++++ '[' -z '' ']'
+++++ break
+++++ '[' -n 16.20.1 ']'
+++++ '[' _16.20.1 '!=' _16.20.1 ']'
+++++ nvm_validate_implicit_alias 16.20.1
+++++ return 2
++++ VERSION=
++++ EXIT_CODE=2
++++ '[' -z '' ']'
++++ return 2
+++++ nvm_ensure_version_prefix 16.20.1
+++++ local NVM_VERSION
++++++ command sed -e 's/^\([0-9]\)/v\1/g'
++++++ nvm_strip_iojs_prefix 16.20.1
++++++ local NVM_IOJS_PREFIX
+++++++ nvm_iojs_prefix
+++++++ nvm_echo iojs
+++++++ command printf '%s\n' iojs
++++++ NVM_IOJS_PREFIX=iojs
++++++ '[' 16.20.1 = iojs ']'
++++++ nvm_echo 16.20.1
++++++ command printf '%s\n' 16.20.1
+++++ NVM_VERSION=v16.20.1
+++++ nvm_is_iojs_version 16.20.1
+++++ case ""${1-}"" in
+++++ return 1
+++++ nvm_echo v16.20.1
+++++ command printf '%s\n' v16.20.1
++++ PATTERN=v16.20.1
++++ '[' v16.20.1 = N/A ']'
++++ local NVM_PATTERN_STARTS_WITH_V
++++ case $PATTERN in
++++ NVM_PATTERN_STARTS_WITH_V=true
++++ '[' true = true ']'
+++++ nvm_num_version_groups v16.20.1
+++++ local VERSION
+++++ VERSION=v16.20.1
+++++ VERSION=16.20.1
+++++ VERSION=16.20.1
+++++ '[' -z 16.20.1 ']'
+++++ local NVM_NUM_DOTS
++++++ command sed -e 's/[^\.]//g'
++++++ nvm_echo 16.20.1
++++++ command printf '%s\n' 16.20.1
+++++ NVM_NUM_DOTS=..
+++++ local NVM_NUM_GROUPS
+++++ NVM_NUM_GROUPS=...
+++++ nvm_echo 3
+++++ command printf '%s\n' 3
++++ '[' _3 = _3 ']'
++++ nvm_is_version_installed v16.20.1
++++ '[' -z v16.20.1 ']'
++++ local NVM_NODE_BINARY
++++ NVM_NODE_BINARY=node
+++++ nvm_get_os
+++++ local NVM_UNAME
++++++ command uname -a
+++++ NVM_UNAME='Linux cronicle 6.2.16-19-pve #1 SMP PREEMPT_DYNAMIC PMX 6.2.16-19 (2023-10-24T12:07Z) x86_64 GNU/Linux'
+++++ local NVM_OS
+++++ case ""${NVM_UNAME}"" in
+++++ NVM_OS=linux
+++++ nvm_echo linux
+++++ command printf '%s\n' linux
++++ '[' _linux = _win ']'
+++++ nvm_version_path v16.20.1
++++ '[' -x /root/.nvm/versions/node/v16.20.1/bin/node ']'
++++ return 0
++++ VERSIONS=v16.20.1
++++ '[' '' = true ']'
++++ '[' -z v16.20.1 ']'
++++ nvm_echo v16.20.1
++++ command printf '%s\n' v16.20.1
+++ VERSION=v16.20.1
+++ '[' -z v16.20.1 ']'
+++ '[' _v16.20.1 = _N/A ']'
+++ nvm_echo v16.20.1
+++ command printf '%s\n' v16.20.1
++ VERSION=v16.20.1
++ '[' v16.20.1 = N/A ']'
++ nvm_make_alias default 16.20.1
++ local ALIAS
++ ALIAS=default
++ '[' -z default ']'
++ local VERSION
++ VERSION=16.20.1
++ '[' -z 16.20.1 ']'
++ nvm_echo 16.20.1
++ command printf '%s\n' 16.20.1
+++ nvm_alias_path
++++ nvm_version_dir old
++++ local NVM_WHICH_DIR
++++ NVM_WHICH_DIR=old
++++ '[' -z old ']'
++++ '[' old = new ']'
++++ '[' _old = _iojs ']'
++++ '[' _old = _old ']'
++++ nvm_echo /root/.nvm
++++ command printf '%s\n' /root/.nvm
+++ nvm_echo /root/.nvm/alias
+++ command printf '%s\n' /root/.nvm/alias
++ tee /root/.nvm/alias/default
++ NVM_NO_COLORS=
++ NVM_CURRENT=v16.20.1
++ DEFAULT=false
++ nvm_print_formatted_alias default 16.20.1 v16.20.1
++ local ALIAS
++ ALIAS=default
++ local DEST
++ DEST=16.20.1
++ local VERSION
++ VERSION=v16.20.1
++ '[' -z v16.20.1 ']'
++ local VERSION_FORMAT
++ local ALIAS_FORMAT
++ local DEST_FORMAT
++ local INSTALLED_COLOR
++ local SYSTEM_COLOR
++ local CURRENT_COLOR
++ local NOT_INSTALLED_COLOR
++ local DEFAULT_COLOR
++ local LTS_COLOR
+++ nvm_get_colors 1
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 1, 1); }'
+++++ echo bygre
++++ nvm_print_color_code b
++++ case ""${1-}"" in
++++ nvm_echo '0;34m'
++++ command printf '%s\n' '0;34m'
+++ COLOR='0;34m'
+++ nvm_echo '0;34m'
+++ command printf '%s\n' '0;34m'
++ INSTALLED_COLOR='0;34m'
+++ nvm_get_colors 2
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 2, 1); }'
+++++ echo bygre
++++ nvm_print_color_code y
++++ case ""${1-}"" in
++++ nvm_echo '0;33m'
++++ command printf '%s\n' '0;33m'
+++ COLOR='0;33m'
+++ nvm_echo '0;33m'
+++ command printf '%s\n' '0;33m'
++ SYSTEM_COLOR='0;33m'
+++ nvm_get_colors 3
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 3, 1); }'
+++++ echo bygre
++++ nvm_print_color_code g
++++ case ""${1-}"" in
++++ nvm_echo '0;32m'
++++ command printf '%s\n' '0;32m'
+++ COLOR='0;32m'
+++ nvm_echo '0;32m'
+++ command printf '%s\n' '0;32m'
++ CURRENT_COLOR='0;32m'
+++ nvm_get_colors 4
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 4, 1); }'
+++++ echo bygre
++++ nvm_print_color_code r
++++ case ""${1-}"" in
++++ nvm_echo '0;31m'
++++ command printf '%s\n' '0;31m'
+++ COLOR='0;31m'
+++ nvm_echo '0;31m'
+++ command printf '%s\n' '0;31m'
++ NOT_INSTALLED_COLOR='0;31m'
+++ nvm_get_colors 5
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 5, 1); }'
+++++ echo bygre
++++ nvm_print_color_code e
++++ case ""${1-}"" in
++++ nvm_echo '0;37m'
++++ command printf '%s\n' '0;37m'
+++ COLOR='0;37m'
+++ nvm_echo '0;37m'
+++ command printf '%s\n' '0;37m'
++ DEFAULT_COLOR='0;37m'
+++ nvm_get_colors 6
+++ local COLOR
+++ local SYS_COLOR
+++ local COLORS
+++ COLORS=bygre
+++ case $1 in
+++++ awk '{ print substr($0, 2, 1); }'
+++++ echo bygre
++++ nvm_print_color_code y
++++ case ""${1-}"" in
++++ nvm_echo '0;33m'
++++ command printf '%s\n' '0;33m'
+++ SYS_COLOR='0;33m'
++++ command tr '0;' '1;'
++++ nvm_echo '0;33m'
++++ command printf '%s\n' '0;33m'
+++ COLOR='1;33m'
+++ nvm_echo '1;33m'
+++ command printf '%s\n' '1;33m'
++ LTS_COLOR='1;33m'
++ ALIAS_FORMAT=%s
++ DEST_FORMAT=%s
++ VERSION_FORMAT=%s
++ local NEWLINE
++ NEWLINE='\n'
++ '[' _false = _true ']'
++ local ARROW
++ ARROW='->'
++ '[' -z '' ']'
++ nvm_has_colors
++ local NVM_NUM_COLORS
++ nvm_has tput
++ type tput
+++ tput -T linux colors
++ NVM_NUM_COLORS=8
++ '[' 8 -ge 8 ']'
++ ARROW='\033[0;90m->\033[0m'
++ '[' _false = _true ']'
++ '[' _v16.20.1 = _v16.20.1 ']'
++ ALIAS_FORMAT='\033[0;32m%s\033[0m'
++ DEST_FORMAT='\033[0;32m%s\033[0m'
++ VERSION_FORMAT='\033[0;32m%s\033[0m'
++ '[' _ = _true ']'
++ '[' _16.20.1 = _lts ']'
++ '[' 16.20.1 = v16.20.1 ']'
++ command printf -- '\033[0;32m%s\033[0m \033[0;90m->\033[0m \033[0;32m%s\033[0m (\033[0;90m->\033[0m \033[0;32m%s\033[0m)\n' default 16.20.1 v16.20.1
+ OUTPUT='default -> 16.20.1 (-> v16.20.1)'
+ local EXIT_CODE
+ EXIT_CODE=0
+ nvm_echo 'Creating default alias: default -> 16.20.1 (-> v16.20.1)'
+ command printf '%s\n' 'Creating default alias: default -> 16.20.1 (-> v16.20.1)'
Creating default alias: default -> 16.20.1 (-> v16.20.1)
+ return 0
+ '[' 0 = 1 ']'
+ '[' 0 -eq 0 ']'
+ '[' -z '' ']'
+ nvm_install_default_packages
+ local DEFAULT_PACKAGES
++ nvm_get_default_packages
++ local NVM_DEFAULT_PACKAGE_FILE=/root/.nvm/default-packages
++ '[' -f /root/.nvm/default-packages ']'
+ DEFAULT_PACKAGES=
+ EXIT_CODE=0
+ '[' 0 -ne 0 ']'
+ '[' -z '' ']'
+ return 0
+ '[' 0 -eq 0 ']'
+ '[' -n '' ']'
+ return 0
+ EXIT_CODE=0
+ set -E
+ return 0
+ EXIT_CODE=0
+ set -e
+ return 0
+ ln -sf /root/.nvm/versions/node/v16.20.1/bin/node /usr/bin/node
+ msg_ok 'Installed Node.js'
+ local 'msg=Installed Node.js'
+ echo -e '\r\033[K \033[1;92m✓\033[m \033[1;92mInstalled Node.js\033[m'
 ✓ Installed Node.js
+ msg_info 'Installing Cronicle Primary Server'
+ local 'msg=Installing Cronicle Primary Server'
+ echo -ne ' - \033[33mInstalling Cronicle Primary Server...'
 - Installing Cronicle Primary Server...++ cut '-d""' -f4
++ grep '""tag_name"":'
++ curl -sL https://api.github.com/repos/jhuckaby/Cronicle/releases/latest
+ LATEST=v0.9.38
++ awk '{print $1}'
++ hostname -I
+ IP=XX.XX.XX.XX
+ mkdir -p /opt/cronicle
+ cd /opt/cronicle
+ tar zxvf /dev/fd/63 --strip-components 1
++ curl -fsSL https://github.com/jhuckaby/Cronicle/archive/v0.9.38.tar.gz
Cronicle-0.9.38/.github/
Cronicle-0.9.38/.github/issue_template.md
Cronicle-0.9.38/.github/pull_request_template.md
Cronicle-0.9.38/.npmignore
Cronicle-0.9.38/LICENSE.md
Cronicle-0.9.38/README.md
Cronicle-0.9.38/bin/
Cronicle-0.9.38/bin/build-tools.js
Cronicle-0.9.38/bin/build.js
Cronicle-0.9.38/bin/control.sh
Cronicle-0.9.38/bin/cronicled.init
Cronicle-0.9.38/bin/debug.sh
Cronicle-0.9.38/bin/install.js
Cronicle-0.9.38/bin/run-detached.js
Cronicle-0.9.38/bin/shell-plugin.js
Cronicle-0.9.38/bin/storage-cli.js
Cronicle-0.9.38/bin/storage-migrate.js
Cronicle-0.9.38/bin/storage-repair.js
Cronicle-0.9.38/bin/test-plugin.js
Cronicle-0.9.38/bin/url-plugin.js
Cronicle-0.9.38/docs/
Cronicle-0.9.38/docs/APIReference.md
Cronicle-0.9.38/docs/CommandLine.md
Cronicle-0.9.38/docs/Configuration.md
Cronicle-0.9.38/docs/Development.md
Cronicle-0.9.38/docs/InnerWorkings.md
Cronicle-0.9.38/docs/Plugins.md
Cronicle-0.9.38/docs/Setup.md
Cronicle-0.9.38/docs/WebUI.md
Cronicle-0.9.38/htdocs/
Cronicle-0.9.38/htdocs/blank.html
Cronicle-0.9.38/htdocs/css/
Cronicle-0.9.38/htdocs/css/style.css
Cronicle-0.9.38/htdocs/favicon.ico
Cronicle-0.9.38/htdocs/images/
Cronicle-0.9.38/htdocs/images/clock-bkgnd.png
Cronicle-0.9.38/htdocs/images/clock-hour.png
Cronicle-0.9.38/htdocs/images/clock-minute.png
Cronicle-0.9.38/htdocs/images/clock-second.png
Cronicle-0.9.38/htdocs/images/loading-16.gif
Cronicle-0.9.38/htdocs/images/loading-24.gif
Cronicle-0.9.38/htdocs/images/loading.gif
Cronicle-0.9.38/htdocs/images/logo-1024.png
Cronicle-0.9.38/htdocs/images/logo-128.png
Cronicle-0.9.38/htdocs/images/logo-256.png
Cronicle-0.9.38/htdocs/images/logo-512.png
Cronicle-0.9.38/htdocs/images/logo-64.png
Cronicle-0.9.38/htdocs/index-dev.html
Cronicle-0.9.38/htdocs/js/
Cronicle-0.9.38/htdocs/js/app.js
Cronicle-0.9.38/htdocs/js/home-worker.js
Cronicle-0.9.38/htdocs/js/pages/
Cronicle-0.9.38/htdocs/js/pages/Admin.class.js
Cronicle-0.9.38/htdocs/js/pages/Base.class.js
Cronicle-0.9.38/htdocs/js/pages/History.class.js
Cronicle-0.9.38/htdocs/js/pages/Home.class.js
Cronicle-0.9.38/htdocs/js/pages/JobDetails.class.js
Cronicle-0.9.38/htdocs/js/pages/Login.class.js
Cronicle-0.9.38/htdocs/js/pages/MyAccount.class.js
Cronicle-0.9.38/htdocs/js/pages/Schedule.class.js
Cronicle-0.9.38/htdocs/js/pages/admin/
Cronicle-0.9.38/htdocs/js/pages/admin/APIKeys.js
Cronicle-0.9.38/htdocs/js/pages/admin/Activity.js
Cronicle-0.9.38/htdocs/js/pages/admin/Categories.js
Cronicle-0.9.38/htdocs/js/pages/admin/Plugins.js
Cronicle-0.9.38/htdocs/js/pages/admin/Servers.js
Cronicle-0.9.38/htdocs/js/pages/admin/Users.js
Cronicle-0.9.38/lib/
Cronicle-0.9.38/lib/api.js
Cronicle-0.9.38/lib/api/
Cronicle-0.9.38/lib/api/admin.js
Cronicle-0.9.38/lib/api/apikey.js
Cronicle-0.9.38/lib/api/category.js
Cronicle-0.9.38/lib/api/config.js
Cronicle-0.9.38/lib/api/event.js
Cronicle-0.9.38/lib/api/group.js
Cronicle-0.9.38/lib/api/job.js
Cronicle-0.9.38/lib/api/plugin.js
Cronicle-0.9.38/lib/comm.js
Cronicle-0.9.38/lib/discovery.js
Cronicle-0.9.38/lib/engine.js
Cronicle-0.9.38/lib/job.js
Cronicle-0.9.38/lib/main.js
Cronicle-0.9.38/lib/queue.js
Cronicle-0.9.38/lib/scheduler.js
Cronicle-0.9.38/lib/test.js
Cronicle-0.9.38/package-lock.json
Cronicle-0.9.38/package.json
Cronicle-0.9.38/sample_conf/
Cronicle-0.9.38/sample_conf/config.json
Cronicle-0.9.38/sample_conf/emails/
Cronicle-0.9.38/sample_conf/emails/changed_password.txt
Cronicle-0.9.38/sample_conf/emails/event_error.txt
Cronicle-0.9.38/sample_conf/emails/job_fail.txt
Cronicle-0.9.38/sample_conf/emails/job_success.txt
Cronicle-0.9.38/sample_conf/emails/recover_password.txt
Cronicle-0.9.38/sample_conf/emails/welcome_new_user.txt
Cronicle-0.9.38/sample_conf/setup.json
Cronicle-0.9.38/sample_conf/ssl.crt
Cronicle-0.9.38/sample_conf/ssl.key
+ npm install
npm WARN deprecated @aws-sdk/hash-stream-node@3.374.0: This package has moved to @smithy/hash-stream-node
npm WARN deprecated mdi@1.9.33: The mdi package was renamed to @mdi/font after v2.2.43. Please rename in your package.json for future updates.

> Cronicle@0.9.38 postinstall
> pixl-boot install

Installing startup service: Cronicle...OK.
Successfully registered startup service.


added 262 packages, and audited 263 packages in 6s

15 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New major version of npm available! 8.19.4 -> 10.2.3
npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.2.3
npm notice Run npm install -g npm@10.2.3 to update!
npm notice 
+ node bin/build.js dist

Welcome to Cronicle!
First time installing?  You should configure your settings in '/opt/cronicle/conf/config.json'.
Next, if this is a master server, type: '/opt/cronicle/bin/control.sh setup' to init storage.
Then, to start the service, type: '/opt/cronicle/bin/control.sh start'.
For full docs, please visit: http://github.com/jhuckaby/Cronicle
Enjoy!

+ sed -i s/localhost:3012/XX.XX.XX.XX:3012/g /opt/cronicle/conf/config.json
+ /opt/cronicle/bin/control.sh setup

Setup completed successfully!
This server (cronicle) has been added as the single primary master server.
An administrator account has been created with username 'admin' and password 'admin'.
You should now be able to start the service by typing: '/opt/cronicle/bin/control.sh start'
Then, the web interface should be available at: http://cronicle:3012/
Please allow for up to 60 seconds for the server to become master.

+ /opt/cronicle/bin/control.sh start
/opt/cronicle/bin/control.sh start: Starting up Cronicle Daemon...
/opt/cronicle/bin/control.sh start: Cronicle Daemon started
+ cp /opt/cronicle/bin/cronicled.init /etc/init.d/cronicled
+ chmod 775 /etc/init.d/cronicled
+ update-rc.d cronicled defaults
+ msg_ok 'Installed Cronicle Primary Server'
+ local 'msg=Installed Cronicle Primary Server'
+ echo -e '\r\033[K \033[1;92m✓\033[m \033[1;92mInstalled Cronicle Primary Server\033[m'
 ✓ Installed Cronicle Primary Server
+ motd_ssh
+ echo 'export TERM='\''xterm-256color'\'''
+ echo -e 'Cronicle LXC provided by https://tteck.github.io/Proxmox/\n'
+ chmod -x /etc/update-motd.d/10-uname
+ [[ no == \y\e\s ]]
+ customize
+ [[ '' == '' ]]
+ msg_info 'Customizing Container'
+ local 'msg=Customizing Container'
+ echo -ne ' - \033[33mCustomizing Container...'
 - Customizing Container...+ GETTY_OVERRIDE=/etc/systemd/system/container-getty@1.service.d/override.conf
++ dirname /etc/systemd/system/container-getty@1.service.d/override.conf
+ mkdir -p /etc/systemd/system/container-getty@1.service.d
+ cat
+ systemctl daemon-reload
++ sed 's/\.d//'
+++ dirname /etc/systemd/system/container-getty@1.service.d/override.conf
++ basename /etc/systemd/system/container-getty@1.service.d
+ systemctl restart container-getty@1.service
+ msg_ok 'Customized Container'
+ local 'msg=Customized Container'
+ echo -e '\r\033[K \033[1;92m✓\033[m \033[1;92mCustomized Container\033[m'
 ✓ Customized Container
+ echo 'bash -c ""$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/cronicle.sh)""'
+ chmod +x /usr/bin/update
+ msg_info 'Cleaning up'
+ local 'msg=Cleaning up'
+ echo -ne ' - \033[33mCleaning up...'
 - Cleaning up...+ apt-get autoremove
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
+ apt-get autoclean
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
+ msg_ok Cleaned
+ local msg=Cleaned
+ echo -e '\r\033[K \033[1;92m✓\033[m \033[1;92mCleaned\033[m'
 ✓ Cleaned
+ description
++ pct exec 513 ip a s dev eth0
++ awk '/inet / {print $2}'
++ cut -d/ -f1
+ IP=XX.XX.XX.XX
+ pct set 513 -description '# Cronicle LXC
  ### https://tteck.github.io/Proxmox/
  <a href='\''https://ko-fi.com/D1D7EP4GF'\''><img src='\''https://img.shields.io/badge/☕-Buy me a coffee-red'\'' /></a>'
+ [[ -f /etc/systemd/system/ping-instances.service ]]
+ msg_ok 'Completed Successfully!\n'
+ local 'msg=Completed Successfully!\n'
+ echo -e '\r\033[K \033[1;92m✓\033[m \033[1;92mCompleted Successfully!\n\033[m'
 ✓ Completed Successfully!

+ echo -e 'Cronicle Primary should be reachable by going to the following URL.
         \033[36mhttp://XX.XX.XX.XX:3012\033[m \n'
Cronicle Primary should be reachable by going to the following URL.
         http://XX.XX.XX.XX:3012 "
mJ9xvPbS,Untitled,parv28,C++,Monday 13th of November 2023 10:34:11 AM CDT,"class custom_compare {
public:
	bool operator() (pair<int, int> &a, pair<int, int> &b) {
		// a will have less priority when it has higher frequency
        return a.second > b.second;
	}
};

class Solution {
public:
	vector<int> topKFrequent(vector<int>& nums, int k) {
		priority_queue<pair<int,int>, vector<pair<int,int>>, custom_compare> pq;
		unordered_map<int,int> freq;
		for(auto curr_num: nums) {
			freq[curr_num] = freq[curr_num] + 1;
		}
		vector<int> ans;
		for(auto it: freq) {
			pq.push(make_pair(it.first, it.second));
			if(pq.size() > k) pq.pop();
		}
		while(!pq.empty()) {
			ans.push_back(pq.top().first);
			pq.pop();
		}
		return ans;
	}
};"
9W73eqPJ,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:28 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
GJj7tVC1,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:26 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
GZPBAnyn,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:25 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
eErebNGr,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:23 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
WXFhBtj7,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:22 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
Kb59Y9yi,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:20 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
yc1YDvQp,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:17 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
WCM6TJmc,Hashed Email With Exclude,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:15 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
baR9v8hr,Hashed Email - Full,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:14 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
hpGL945f,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 13th of November 2023 10:14:12 AM CDT,"Pasted at: 13/11/2023 16:14
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
LWB9rJAw,01. The Imitation Game,Spocoman,Python,Monday 13th of November 2023 09:57:15 AM CDT,"message = input()

while True:
    command = input()
    if command == ""Decode"":
        break
    tokens = command.split('|')
    command = tokens[0]
    if command == ""Move"":
        index = int(tokens[1])
        message = message[index:] + message[: index]
    elif command == ""Insert"":
        index = int(tokens[1])
        value = tokens[2]
        message = message[:index] + value + message[index:]
    elif command == ""ChangeAll"":
        old = tokens[1]
        new = tokens[2]
        message = message.replace(old, new)

print(f""The decrypted message is: {message}"")
"
bLXWZkEm,"Lab_4(another header, now with classcodes' names)",anticlown,C,Monday 13th of November 2023 09:55:19 AM CDT,"#include ""stdio.h""
#include ""pci_c.h""
#include ""stdbool.h""
#include ""sys/io.h""
#include ""string.h""
#include ""errno.h""

/*  define start    */
#define REQUIRED_PRIVILEGE_LEVEL 3

#define CONFIG_ADDRESS_PORT 0xCF8
#define CONFIG_DATA_PORT 0xCFC
#define ENABLE_BIT 0x80000000
#define BUS_OFFSET 16
#define DEVICE_OFFSET 11
#define FUNCTION_OFFSET 8
#define DEVICE_ID_OFFSET 2
#define VENDOR_ID_OFFSET 0
#define UNKNOWN_MSG ""Unknown""

#define NUM_OF_VENDORS (sizeof(PciVenTable) / sizeof(PCI_VENTABLE))
#define NUM_OF_DEVICES (sizeof(PciDevTable) / sizeof(PCI_DEVTABLE))
#define NUM_OF_CLASSES (sizeof(PciClassCodeTable) / sizeof(PCI_CLASSCODETABLE))

#define BUS_NUM 256
#define DEVICE_NUM 32
#define FUNCTION_NUM 8
/*  define end    */

/*    PCI methods start    */
int calculateAddress(const int bus, const int device, const int function)
{
    return ENABLE_BIT + (bus << BUS_OFFSET) + (device << DEVICE_OFFSET) + (function << FUNCTION_OFFSET);
}

int getPCIData(const int address)
{
    outl(address, CONFIG_ADDRESS_PORT); // прочитать по адресу
    return inl(CONFIG_DATA_PORT);       // записать по адресу
}

int readPCIDataField(const int data, const int offset)
{
    return (int)((data >> ((offset & 2) * 8)) & 0xFFFF);
}
/*    PCI methods end    */

/*    device methods start    */
bool DoesDeviceExist(const int data)
{
    return data != -1;
}

char *getVendorName(const int vendorID)
{
    for (int i = 0; i < NUM_OF_VENDORS; i++)
        if (PciVenTable[i].VenId == vendorID)
            return PciVenTable[i].VenFull;

    return UNKNOWN_MSG; // в случае, если не находится имя, выводится Unknown
}

char *getDeviceName(const int vendorID, const int deviceID)
{
    for (int i = 0; i < NUM_OF_DEVICES; i++)
        if (PciDevTable[i].VenId == vendorID && PciDevTable[i].DevId == deviceID)
            return PciDevTable[i].Chip;

    return UNKNOWN_MSG; // в случае, если не находится имя, выводится Unknown
}

bool isBridge(const unsigned address)
{
    outl(address + 0x0C, CONFIG_ADDRESS_PORT);
    return (inl(CONFIG_DATA_PORT) >> 16) != 0;
}

int decodeROMBaseRegisters(const int address)
{
    if (!isBridge(address))
    {
        outl(address + 0x1C, CONFIG_ADDRESS_PORT);
        int inter = inl(CONFIG_DATA_PORT); 
        return inter >> 11;
    }
    else
        return 0;
}

int decodeInputRegs(const int address)
{
    if (!isBridge(address))
    {
        for (int i = 0; i < 6; i++)
        {
            outl(address + 0x10 + i * 4, CONFIG_ADDRESS_PORT);
            unsigned barValue = inl(CONFIG_DATA_PORT);
            if ((barValue & 1) == 1) //является ли регистром ввода-вывода
                return barValue >> 2; 
        }
        return 0;
    }
    else
        return 0;
}

int decodeClassCode(const int address)
{
    if (isBridge(address))
    {
        outl(address + 0x08, CONFIG_ADDRESS_PORT); 
        int inter = inl(CONFIG_DATA_PORT); 
        return inter >> 8; 
    }
    else
        return 0;
}

char *getClassName(const int classCode)
{
    int baseClass = classCode / 0x10000;
    int subClass = (classCode / 0x100) % 0x100;
    int prog = classCode % 0x100;
    for (int i = 0; i < NUM_OF_CLASSES; i++) //Prog. I/F(8..15) + SubClass Code(16..23) + ClassCode(24..31) 
        if (PciClassCodeTable[i].BaseClass == baseClass && PciClassCodeTable[i].SubClass == subClass && PciClassCodeTable[i].ProgIf == prog)
            return PciClassCodeTable[i].SubDesc;

    return UNKNOWN_MSG; // в случае, если не находится имя, выводится Unknown
}

// device structure
typedef struct
{
    int bus;
    int device;
    int function;
    int vendorID;
    int deviceID;
    char *vendorName;
    char *deviceName;
    int ROMBR;  // ROM Base Registers
    int IOBReg; // I/O Base Registers
    int clCode; // ClassCode
    char* clCodeName;
} deviceStruct;

deviceStruct constructor(const int bus, const int device, const int function, const int data, const int address)
{
    int vendorID = readPCIDataField(data, VENDOR_ID_OFFSET);
    int deviceID = readPCIDataField(data, DEVICE_ID_OFFSET);
    char *vendorName = getVendorName(vendorID);
    char *deviceName = getDeviceName(vendorID, deviceID);
    int ROMBaseReg = decodeROMBaseRegisters(address);
    int inputBaseRegs = decodeInputRegs(address);
    int classCode = decodeClassCode(address);
    char *classCodeName = getClassName(classCode);
    deviceStruct temp = {bus, device, function, vendorID, deviceID, vendorName, deviceName, ROMBaseReg, inputBaseRegs, classCode, classCodeName};

    return temp;
}
/*    device methods end    */

/*      print procedures start      */
void printTaskInfo()
{
    printf(""\n\tДанная программа формирует цикл опроса и идентификации устройств PCI, затем выводит информацию о них в сводной таблице.\n \t\t\t\t\t\tДоп. задания:\n"");
    printf(""3.  \tЕсли устройство не мост(0-бит поля Header Type = 0) вывести  и расшифровать значение полей базовых регистров ввода/вывода.\n"");
    printf(""4.  \tЕсли устройство не мост(0-бит поля Header Type = 0) вывести  и расшифровать значение полей базовых регистров постоянной (ROM) памяти.\n"");
    printf(""11.	Если устройство  мост(0-бит поля Header Type = 1) вывести  и расшифровать значение поля Сlass Code.\n\n"");
}

void printTableSplitter()
{
    printf(""---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"");
}

void printTableStart()
{
    printTableSplitter();
    printf("" Bus | Device | Function | Vendor ID | Device ID |\tVendor Name\t| \tDevice Name\t | ROM B.Reg. |  I/O B.Reg. | ClassCode | \tClassCode Name\t |\n"");
    printTableSplitter();
}

void printDevice(const deviceStruct device, const int address)
{
    printf(""  %02x |   %02x   |    %01x\t |%8x   |%8x   |%20s  |  %20s  | %9x  |     %4x    | %9x | %21s |\n"", device.bus, device.device, device.function, device.vendorID, device.deviceID, device.vendorName, device.deviceName, device.ROMBR, device.IOBReg, device.clCode, device.clCodeName);
}
/*      print procedures end      */

int main(void)
{
    errno = 0;
    if (iopl(REQUIRED_PRIVILEGE_LEVEL)) // проверка уровня привилегий
    {
        printf(""Ошибка изменения уровня привилегий ввода-вывода: %s\nПопробуйте запустить программу, используя пользователя ROOT\n"", (char *)strerror(errno));
        return 1;
    }

    printTaskInfo();
    printTableStart();

    for (int busIndex = 0; busIndex < BUS_NUM; busIndex++)
    {
        for (int deviceIndex = 0; deviceIndex < DEVICE_NUM; deviceIndex++)
        {
            for (int functionIndex = 0; functionIndex < FUNCTION_NUM; functionIndex++)
            {
                int address = calculateAddress(busIndex, deviceIndex, functionIndex);
                int data = getPCIData(address);
                if (DoesDeviceExist(data))
                {
                    deviceStruct device = constructor(busIndex, deviceIndex, functionIndex, data, address);
                    printDevice(device, address);
                }
            }
        }
    }
    printTableSplitter();

    return 0;
}"
cdHQC80J,GTNH LSC Monitor,Legion_D,Lua,Monday 13th of November 2023 09:39:48 AM CDT,"-- Original by Merung (October, 2018)
-- V1 Forked/Edit by Just_Benji (Februari, 2023) - Added and changed GTNH LSC Compatibility
-- V2 with sensorInformation by Just_Benji (March,2023)
-- V3 disable the average table and enable the new average in/out from v2.3 LSC
-- V3.1 added Toggle functions for Red100Off and ArrowOff
-- V4 Fixed bug with ioratein/iorateout displaying double value
-- V4.1 Added tiers to UXV
-- V4.2 Edit by CHuDO_LD (November, 2023) 
	-- Added auto setup component.proxy
	-- Added time to full charge/discharge battery
	-- Cosmetic changes in the interface

-- pastebin get cdHQC80J pwr.lua



local component = require(""component"")
local computer = require(""computer"")
local term = require(""term"")
local gpu = component.gpu
local sides = require(""sides"")
local MT = {}
local TimeTable = {}

-- Settings to be changed

        -- General
--        MSCProxy = ""d7d0881b-db1e-4313-9fe0-bc85e68eaff3"" -- MSC Address
        loopdelay = 2           -- Refresh time, 2 is standard
        RedstoneEnabled = true -- Redstone I/O connected to system for Generator enabling / Value true or false, default: false

        -- Generator Toggle values

        genON = 60              -- Generator turns on
        genOFF = 95             -- Generator turns off

        ArrowOff = false        -- Turns off the arrow underneath the meters
        Red100Off = true       -- When power gets at 100%, screen turns DARKRED to inform void. Can be turned off by setting value to true




-- START OF CODE
-- Setup components

for address, name in component.list(""gt"", false) do
	local componentGT = component.proxy(address)
--	local info = componentGT.getSensorInformation()
	--########################For Debag
	--for name, val in pairs(componentGT) do --перегляд таблиці 
	--	print(name, val)
	--	os.sleep(0.5)
	--end
	--goto done
	--print (componentGT.getName())
	--########################
	if string.find(componentGT.getName(), ""supercapacitor"") then
		msc = componentGT
	end
end

--msc = component.proxy(MSCProxy)
storage = msc
if RedstoneEnabled == true then toggleRS = component.redstone end


-- Set Resolution
res_x = 120
res_y = 25
gpu.setResolution(res_x, res_y)

-- Set Max Value and increment for bottom bars
io_max_rate = 600000
io_increment = io_max_rate / 100

-- Functions

function exit_msg(msg)
  term.clear()
  print(msg)
  os.exit()
end


-- Redstone setup
if RedstoneEnabled == true then toggleRS.setWakeThreshold(1) end


function redON()
if RedstoneEnabled == true then
  toggleRS.setOutput({15,15,15,15,15,15})
 -- toggleRS.setOutput(sides.north, 15)
 -- toggleRS.setOutput(sides.east, 15)
 -- toggleRS.setOutput(sides.west, 15)
 -- toggleRS.setOutput(sides.south, 15)
 -- toggleRS.setOutput(sides.top, 15)
 -- toggleRS.setOutput(sides.bottom, 15)
end
end

function redOFF()
if RedstoneEnabled == true then
	toggleRS.setOutput({0,0,0,0,0,0})
 -- toggleRS.setOutput(sides.north, 0)
 -- toggleRS.setOutput(sides.east, 0)
 -- toggleRS.setOutput(sides.west, 0)
 -- toggleRS.setOutput(sides.south, 0)
 -- toggleRS.setOutput(sides.top, 0)
 -- toggleRS.setOutput(sides.bottom, 0)
end
end


-- Maintanance

local sensorInformation = msc.getSensorInformation()
strInfo = sensorInformation[9]

if strInfo == nil then else
y = string.find(strInfo, ""§"")
z = string.len(strInfo)
MStatus = string.sub(strInfo, (y+3), (z-3))
end


if MStatus == ""Working perfectly"" then 
MColor = GREEN
else
MColor = RED
end



-- Conversions

function convert_valueEU(eu, colormode)
  if eu == 0 then return ""0 EU"" end
  local i, units = 1, { ""LV"", ""MV"", ""HV"", ""EV"", ""IV"", ""LuV"", ""ZPM"", ""UV"", ""UHV"", ""UEV"", ""UIV"", ""UMV"", ""UXV"", }
  
LV = 32
MV = 128
HV = 512
EV = 2048
IV = 8192
LuV = 32768
ZPM = 131072
UV = 524288
UHV = 2097152
UEV = 8388608
UIV = 33554432
UMV = 134217728
UXV = 536870912

if colormode == 5 then eucolorx = GREEN else eucolor = GREEN end

	 if eu <= 0 then
		eu = math.abs(eu)
		if colormode == 5 then eucolorx = RED else eucolor = RED end
end

  	 if eu <= MV then
	  tier = LV
  	  i = 1
 	 elseif eu <= HV then
	  tier = MV	
 	  i = 2
  	 elseif eu <= EV then
	  tier = HV
      i = 3
 	 elseif eu <= IV then
	  tier = EV
 	  i = 4
 	 elseif eu <= LuV then
	  tier = IV
 	  i = 5
	 elseif eu <= ZPM then
	  tier = LuV
 	  i = 6
	 elseif eu <= UV then
	  tier = ZPM
 	  i = 7
	 elseif eu <= UHV then
	  tier = UV
 	  i = 8
   elseif eu <= UEV then
	  tier = UHV
 	  i = 9
   elseif eu <= UIV then
	  tier = UEV
 	  i = 10
   elseif eu <= UMV then
	  tier = UIV
 	  i = 11
   elseif eu <= UXV then
	  tier = UMV
 	  i = 12

 	 else
	  tier = UXV
 	   i = 13
	 end
 	 
     eu = eu / tier

  local unit = units[ i ] or ""?""
  local fstr
  if unit == ""RF"" then
    fstr = ""%.0f %s""
  else
    fstr = ""%.2f %s""
  end
  return string.format( fstr, eu, unit)
	
end



function convert_value(rf)
  if rf == 0 then return ""0 EU"" end
  local i, units = 1, { ""EU"", ""10^3 EU"", ""10^6 EU"", ""10^9 EU"", ""10^12 EU"", ""10^15 EU"", ""10^18 EU"", ""10^21 EU"" }
  while rf >= 1000 do
    rf = rf / 1000
    i = i + 1
  end
  local unit = units[ i ] or ""?""
  local fstr
  if unit == ""RF"" then
    fstr = ""%.0f %s""
  else
    fstr = ""%.2f %s""
  end
  return string.format( fstr, rf, unit )
end

function get_percent_color(energy)
  local energycolor
  if energy <= 5 then
    energycolor = RED
  elseif energy <= 25 then
    energycolor = ORANGE
  elseif energy <= 50 then
    energycolor = YELLOW
  elseif energy <= 75 then
    energycolor = GREEN
  elseif energy <= 99 then
    energycolor = BLUE
  else
    energycolor = 0x008000
  end
  return energycolor
end







function convert_valueEU2(rf)
  if rf == 0 then return ""0 EU"" end
  local i, units = 1, { ""EU"", ""K EU"", ""M EU"", ""G EU"", ""T EU"", ""P EU"", ""E EU"", ""Y EU"" }
  while rf >= 1000 do
    rf = rf / 1000
    i = i + 1
  end
  local unitx = units[ i ] or ""?""
  local fstr
  if unitx == ""RF"" then
    fstr = ""%.0f %s""
  else
    fstr = ""%.2f %s""
  end
  return string.format( fstr, rf, unitx )
end




-- Draw sections

function draw_legend(io)
  gpu.setForeground(fg_default)

  for loc = 0, 100, 10
  do
    term.setCursor(offset + loc, visual_y_start + 11)
    term.write(loc)
    term.setCursor(offset + loc, visual_y_start + 12)
    term.write(""|"")
  end

  if ArrowOff == false then draw_direction(io) end

end

function draw_direction(io)

local is_neg
local pos_num

  if io == 0
  then
    return
  elseif io > 0
  then
    is_neg = 0
    pos_num = io
  elseif io < 0
  then
    is_neg = 1
    pos_num = io * -1
  end

  -- Determine how many ""=""
  local num_col = pos_num / io_increment
  if num_col > 100 then num_col = 100 end
  if num_col < 1 then num_col = 1 end

  -- Create the bars

  local base_bar = """"
  local base_bar1 = """"
  local base_bar2 = """"
  local base_bar3 = """"
  local num_spaces = 100 - num_col
  local space_offset = num_spaces / 2


  for int_space = 0, space_offset, 1
  do
    base_bar = base_bar .. "" ""
  end

  if is_neg == 1
  then
    base_bar1 = base_bar .. ""/""
    base_bar2 = base_bar .. ""<=""
    base_bar3 = base_bar .. ""\\""
  else
    base_bar1 = base_bar
    base_bar2 = base_bar
    base_bar3 = base_bar
  end

  for int_eq = 0, num_col, 1
  do
    base_bar1 = base_bar1 .. ""=""
    base_bar2 = base_bar2 .. ""=""
    base_bar3 = base_bar3 .. ""=""
  end

  if is_neg == 0
  then
    base_bar1 = base_bar1 .. ""\\""
    base_bar2 = base_bar2 .. ""=>""
    base_bar3 = base_bar3 .. ""/""
  end

  -- Draw the actual bars
  if is_neg == 1
  then
    gpu.setForeground(RED)
    term.setCursor(offset, visual_y_start + 16)
    term.write(base_bar1)
    term.setCursor(offset - 1, visual_y_start + 17)
    term.write(base_bar2)
    term.setCursor(offset, visual_y_start + 18)
    term.write(base_bar3)
    gpu.setForeground(fg_default)
  else
    gpu.setForeground(GREEN)
    term.setCursor(offset, visual_y_start + 16)
    term.write(base_bar1)
    term.setCursor(offset, visual_y_start + 17)
    term.write(base_bar2)
    term.setCursor(offset, visual_y_start + 18)
    term.write(base_bar3)
    gpu.setForeground(fg_default)
  end

end

function draw_visuals(percent)

  term.setCursor(offset, visual_y_start + 13)
  for check = 0, 100, 1
  do
    if check <= percent
    then
      gpu.setForeground(get_percent_color(check))
      term.write(""|"")
      gpu.setForeground(fg_default)
    else
      gpu.setForeground(fg_default)
      term.write(""."")
    end
  end
  
  term.setCursor(offset, visual_y_start + 14)
  for check = 0, 100, 1
  do
    if check <= percent
    then
      gpu.setForeground(get_percent_color(check))
      term.write(""|"")
      gpu.setForeground(fg_default)
    else
      gpu.setForeground(fg_default)
      term.write(""."")
    end
  end
  
end



-- Convert string to number  , credits to nidas
function parser(string)
    if type(string) == ""string"" then
        local numberString = string.gsub(string, ""([^0-9]+)"", """")
        if tonumber(numberString) then
            return math.floor(tonumber(numberString) + 0)
        end
        return 0
    else
        return 0
    end
end


-- Average table calculator
function AverageEU(TableAverageEU, EUStored)
    local euold = 0
    local eunew = 0
    local eusom = 0
    local AveEU = 0
    local i = 1
    local told = 0
    local tnew = 0
    local tsom = 0

    table.insert(TableAverageEU, 1, EUStored)
    table.insert(TimeTable,1, computer.uptime())
    
    if #TableAverageEU > 11 then
        while i <= 10 do
          if i == 1 then
            euold = TableAverageEU[1]
            told = TimeTable[1]
          else
            eunew = TableAverageEU[i]
            eusom = (eunew - euold) + eusom
            euold = eunew
            
            tnew = TimeTable[i]
            tsom = (tnew - told) + tsom
            told = tnew

          end
          i = i + 1
        end
        AveEU = eusom / 10 / tsom
    else
        AveEU = 0
    end
    return AveEU
end

-- Transform seconds to the number of years, months, days, hours, minutes, seconds
function howManyYears(t) 

	if t < 60 then --если осталось меньше минуты
		return tostring(math.floor(t)) .. "" с""
	elseif t < 60*60 then --если осталось меньше часа
		local minutes = math.floor(t/60)
		local seconds = math.floor(math.fmod(t, 60))
		return tostring(minutes) .. "" хв "" .. tostring(seconds) .. "" с""
	elseif t < 60*60*24 then --если осталось меньше суток
		local hours = math.floor(t/(60*60))
		local minutes = math.floor(math.fmod(t, 60*60)/60)
		return tostring(hours) .. "" год "" .. tostring(minutes) .. "" хв"" 
	elseif t < 60*60*24*30 then --если осталось меньше месяца
		local days = math.floor(t/(60*60*24))
		local hours = math.floor(math.fmod(t, 60*60*24)/(60*60))
		return  tostring(days) .. "" д "" .. tostring(hours) .. "" год""
	elseif t < 60*60*24*30*12 then --если осталось меньше года
		local months = math.floor(t/(60*60*24*30))
		local days = math.floor(math.fmod(t, 60*60*24*30)/(60*60*24))
		return  tostring(months) .. "" міс "" .. tostring(days) .. "" д "" 
	else --если осталось больше года
		local years = math.floor(t/(60*60*24*30*12))
		local months = math.floor(math.fmod(t, 60*60*24*30*12)/(60*60*24*30))
		return  tostring(years) .. "" р "" .. tostring(months) .. "" міс"" 
	end
end

-- Define Colors

RED = 0xFF0000
BLUE = 0x0000FF
GREEN = 0x00FF00
BLACK = 0x000000
WHITE = 0xFFFFFF
PURPLE = 0x800080
YELLOW = 0xFFFF00
ORANGE = 0xFFA500
DARKRED = 0x880000




-- Main Code
term.clear()

ylogo = 36
gpu.setForeground(YELLOW)
term.setCursor(ylogo, 1 + 4) term.write(""        ░░░             ░░             ░░░        "")
term.setCursor(ylogo, 1 + 5) term.write(""          ░░░           ░░           ░░░          "")
term.setCursor(ylogo, 1 + 6) term.write(""         ░░             ░░             ░░░        "")
term.setCursor(ylogo, 1 + 7) term.write(""        ░░░░            ░░               ░░       "")
term.setCursor(ylogo, 1 + 8) term.write(""       ░░  ░░           ░░               ░░░      "")
term.setCursor(ylogo, 1 + 9) term.write(""      ░░    ░░░         ░░                ░░░     "")
term.setCursor(ylogo, 1 + 10) term.write(""      ░░      ░░        ░░                ░░░     "")
term.setCursor(ylogo, 1 + 11) term.write(""  ░░░░░░        ░░      ░░░░░░░░░░░░░░░░░░░░░░░░  "")
term.setCursor(ylogo, 1 + 12) term.write(""      ░░         ░░░    ░░                ░░░     "")
term.setCursor(ylogo, 1 + 13) term.write(""      ░░           ░░   ░░                ░░░     "")
term.setCursor(ylogo, 1 + 14) term.write(""       ░░            ░░░░░               ░░       "")
term.setCursor(ylogo, 1 + 15) term.write(""        ░░            ░░░░              ░░░       "")
term.setCursor(ylogo, 1 + 16) term.write(""         ░░             ░░             ░░         "")
term.setCursor(ylogo, 1 + 17) term.write(""          ░░░           ░░           ░░░          "")
term.setCursor(ylogo, 1 + 18) term.write(""         ░░             ░░             ░░░        "")

gpu.setForeground(WHITE)
term.setCursor(35, 22)     term.write(""█▀█ █▀█ █░█░█ █▀▀ █▀█   █▀▀ █▀█ █▄░█ ▀█▀ █▀█ █▀█ █░░"")
term.setCursor(35, 23)     term.write(""█▀▀ █▄█ ▀▄▀▄▀ ██▄ █▀▄   █▄▄ █▄█ █░▀█ ░█░ █▀▄ █▄█ █▄▄"")
os.sleep(3)




--@@ START OF LOOP CODE @@
function DrawTheScreen()
    local sensorInformation = msc.getSensorInformation()

    -- Get information
    local storedenergyinit = parser(sensorInformation[2])
    local maxenergyinit = parser(sensorInformation[3])

    local ioratein = parser(string.sub(sensorInformation[7],1,-15))
    local iorateout = parser(string.sub(sensorInformation[8],1,-15))
    local iorate = ioratein - iorateout

    local percentenergy = storedenergyinit / maxenergyinit * 100
--	percentenergy = math.floor(percentenergy*100)/100 --округляем с масштабированием, так чтобы получилось два знака после запятой (например 33.33%)

    local convstored = convert_value( storedenergyinit )
    local convmax = convert_value( maxenergyinit )

    -- General settings
    offset = 10
    visual_y_start = 5
    fg_default = WHITE
    fg_color_max = PURPLE
    eucolor = fg_default
    eucolorx = fg_default

    local fg_color_stored = get_percent_color(percentenergy)
    local fg_color_percent = fg_color_stored

    local fg_color_io

    if iorate <= 0 then
    fg_color_io = RED
    else
    fg_color_io = GREEN
    end

    -- Power Toggle
    if RedstoneEnabled == true then
      currentOutputRSTable = toggleRS.getOutput()
      currentOutputRS = currentOutputRSTable[3]
      if currentOutputRS == 0 then statusRS = ""OFF"" else statusRS = ""ON"" end

      if percentenergy <= genON then
      redON() 
      statusRS = ""ON""
      end
      if percentenergy >= genOFF then 
      redOFF()
      statusRS = ""OFF""
      end	
    else
      statusRS = ""RS Disabled""
    end

   if Red100Off == false then
     if percentenergy <= 99 then
     gpu.setBackground(BLACK)
     else
     gpu.setBackground(DARKRED)
      end
   else 
      gpu.setBackground(BLACK)
    end

	--время, оставшееся до полной зарядки или полной разрядки батареи
	local ticksRemain 
	if percentenergy <= 99.99 then
		if iorate < 0 then --если батарея разряжается
			ticksRemain = -storedenergyinit/iorate
		elseif iorate > 0 then --если батарея заряжается
			ticksRemain = (maxenergyinit - storedenergyinit)/iorate
		end
	else --если батарея разрядилась до нуля
		ticksRemain = 0
	end
	--print(ticksRemain/20)
	PrintChargeTime = howManyYears(ticksRemain/20)
	--print(PrintChargeTime)

    -- Draw screen

    --Draw logo
    term.clear()
    gpu.setForeground(fg_default)


    term.setCursor(35, visual_y_start -2)    term.write(""█▀█ █▀█ █░█░█ █▀▀ █▀█   █▀▀ █▀█ █▄░█ ▀█▀ █▀█ █▀█ █░░"")
    term.setCursor(35, visual_y_start -1)    term.write(""█▀▀ █▄█ ▀▄▀▄▀ ██▄ █▀▄   █▄▄ █▄█ █░▀█ ░█░ █▀▄ █▄█ █▄▄"")


    -- Draw current energy stored
    term.setCursor(30, visual_y_start + 2)
    term.write(""Заряд батареї / повна ємність:	"")
    gpu.setForeground(fg_color_stored)
    term.write(convstored)
    gpu.setForeground(fg_default)
    term.write ("" / "")
    gpu.setForeground(fg_color_max)
    term.write(convmax)
    gpu.setForeground(fg_default)


    -- Draw percentage 
    term.setCursor(30,visual_y_start + 3)
    term.write(""Процент заповнення:		"")
    gpu.setForeground(fg_color_percent)
    term.write(string.format(""%.2f %s"", percentenergy, "" %""))
    gpu.setForeground(fg_default)

    -- Draw Actual In
    term.setCursor(30,visual_y_start + 4)
    term.write(""Середній Вхід EU/с:		"")
    gpu.setForeground(GREEN)
    term.write(convert_valueEU(ioratein, 1) .. "" ≈ "" .. convert_valueEU2(ioratein))
    gpu.setForeground(fg_default)

    -- Draw Actual Out
    term.setCursor(30,visual_y_start + 5)
    term.write(""Середній Вихід EU/с:		"")
    gpu.setForeground(RED)
    term.write(convert_valueEU(iorateout, 1) .. "" ≈ "" .. convert_valueEU2(iorateout))
    gpu.setForeground(fg_default)

    -- Draw Actual Change in/out
    term.setCursor(30,visual_y_start + 6)
    term.write(""Середні Зміни EU/с:		"")
    if iorate ~= nil then ioratechange =  convert_valueEU(iorate) end
    gpu.setForeground(eucolor)
    if ioratechange ~= nil then term.write(ioratechange) end
    gpu.setForeground(fg_default)
	
    -- Draw EU/Average Change: 
    -- function disabled as in 2.3 has LSC fix for average per second, can be turned on for longer average eu consumption.
      AVEUToggle = false
    if AVEUToggle == true then
      term.setCursor(30,visual_y_start + 7)
      term.write(""Average EU Change/s: "")
      AVEU = AverageEU(MT, storedenergyinit)
      AVEU = convert_valueEU(AVEU, 5)
      gpu.setForeground(eucolorx)
      if AVEU ~=nil then term.write(AVEU) end
      gpu.setForeground(fg_default)
    end
	
	
	--Вивід часу що лишилося до повного заряду/розряду батареї
		term.setCursor(30,visual_y_start + 7)
    term.write(""Час повного заряду/розряду:	"")
	gpu.setForeground(fg_color_percent)
    if PrintChargeTime ~= 0 then
--    gpu.setForeground(eucolor)
    if ioratechange ~= nil then term.write(PrintChargeTime) end
    gpu.setForeground(fg_default)
	else
	term.write(PrintChargeTime) end


    -- Draw Maintenance status
    term.setCursor(30,visual_y_start + 9)
    term.write(""Статус технічного обслуговування:  "")
    if MStatus == ""Working perfectly"" then MColor = GREEN else MColor = RED end
    gpu.setForeground(MColor)
    if MColor == RED then gpu.setBackground(YELLOW) end
    term.write(MStatus)
    gpu.setForeground(fg_default)
    gpu.setBackground(BLACK)

    -- Draw Generator Status
    term.setCursor(30,visual_y_start + 10)
    term.write(""Статус генераторів:   "")
    gpu.setForeground(fg_default)
    term.write(statusRS)
    gpu.setForeground(fg_default)
    gpu.setBackground(BLACK)

    -- Draw ColorScreen
    draw_visuals(percentenergy)
    -- Draw Pointline
    draw_legend(iorate)





-- Sleep
os.sleep(loopdelay)

end
--@@ END OF LOOP CODE@@--



-- Loop Run
local event_loop = true
while event_loop do
     pcall(DrawTheScreen)    -- optional function to keep running even with errors
    DrawTheScreen()
end"
3rLZzs98,01. The Imitation Game,Spocoman,JavaScript,Monday 13th of November 2023 09:32:21 AM CDT,"function theImitacionGame(input) {
    let message = input.shift();

    while (input[0] != ""Decode"") {
        let tokens = input.shift().split('|');
        let command = tokens[0];
        if (command == ""Move"") {
            let index = Number(tokens[1]);
            message = message.substring(index) + message.slice(0, index);
        } else if (command == ""Insert"") {
            let index = Number(tokens[1]);
            let value = tokens[2];
            message = message.slice(0, index) + value + message.slice(index);
        } else if (command == ""ChangeAll"") {
            let oldStr = tokens[1];
            let newStr = tokens[2];
            while(message.includes(oldStr)){
                message = message.replace(oldStr, newStr);
            }
        }
    }

    console.log(`The decrypted message is: ${message}`);
    return;
}"
pAMAGzcC,adding_symbols_at_the_end_of_a_line,pacho_the_python,Python,Monday 13th of November 2023 09:32:21 AM CDT,"new_line = """"
with open('C:\\Users\\Pacho\\Desktop\\cam file.txt', 'r') as f:
    for line in f:
        new_line += line.strip() + "" ;\n""
    f.close()

with open('C:\\Users\\Pacho\\Desktop\\cam file.txt', 'w') as f:
    f.write(new_line)
    f.close()
"
eWFVFtfb,loadScript,alkorlos,JavaScript,Monday 13th of November 2023 09:17:12 AM CDT,"function loadScript (src) {
	return new Promise(function (resolve, reject) {
		let script = document.createElement('script');

		script.src = src;
		document.head.append(script);

		script.onload = function () {
			resolve(script);
		};

		script.onerror = function () {
			reject(new Error(`Ошибка загрузки скрипта ${src}`));
		};
	});
}

let promise = loadScript('https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.11/lodash.js');

promise.then(
	function (script) {
		console.log(`${script.src} загружен!`);
	}
).catch(
	function (error) {
		console.log(`Ошибка: ${error.message}`);
	}
);"
yWsmAAKi,async/await,alkorlos,JavaScript,Monday 13th of November 2023 09:15:19 AM CDT,"function getUserName(id) {
	return fetch(`https://url.dev/${id}/`)
		.then(function (userResponse) {
			const userName = userResponse.json();

			return userName;
		})
		.catch(function (error) {
			console.error(error);
	})
}

getUserName(1).then(function (userName) {
	console.log(userName);
});


async function getUserName(id) {
	try {
		const userResponse = await fetch(`https://url.dev/${id}/`);
		const userName = userResponse.json();

		return userName;
	} catch (error) {
		console.error(error);
	}
}

getUserName(1).then(function (userName) {
	console.log(userName);
});"
PRyiAmSe,Sliding window dart,g0o53,Dart,Monday 13th of November 2023 09:00:01 AM CDT,"import 'dart:math';
//sliding window
int maxSum(List<int> list, int k) {
  int len = list.length;
  int sum = 0;
  for (int i = 0; i < k; i++) sum += list[i];
  int maxS = sum;
  for (int i = k; i < len; i++) {
    sum += list[i] - list[i - k];
    maxS = max(sum, maxS);
  }
  return maxS;
}

void main() {
  int k = 3;
  final arr = [7, 8, 8, 4, 5, 6, 7, 8, 9, 0];
  int n = arr.length;
  final max = maxSum(arr, k);
  print('Max sum of $k elements in array: $max');
}"
ePt1U52i,Interschimbare coloane matrice cu conditie,ToniDev,C++,Monday 13th of November 2023 08:50:16 AM CDT,"#include <iostream>
using namespace std;

void afisare(int matrice[50][50], int n, int m)
{
	cout << ""Afisare matrice: "" << endl;
	for (int i = 0; i < n; i++) // linii
	{
		for (int j = 0; j < m; j++) // coloane
		{
			cout << matrice[i][j] << "" "";
		}
		cout << endl;
	}
}


int main()
{
	int n, m; // linii, coloane

	cout << ""n [2,50] = ""; cin >> n;
	cout << ""m [2,50] = ""; cin >> m;

	if (n < 2 || n > 50 || m < 2 || m > 50)
	{
		cout << ""Nu ai respectat intervalele."";
		return -1;
	}

	int matrice[50][50];

	// Populare matrice
	for (int i = 0; i < n; i++) // linii
	{
		for (int j = 0; j < m; j++) // coloane
		{
			cout << ""Introdu o valoare cuprinsa intre: [0, 10000]!"" << endl;
			cout << ""matrice["" << i << ""]["" << j << ""] = "";
			cin >> matrice[i][j];

			// Check interval
			if (matrice[i][j] < 0 || matrice[i][j] > 10000)
			{
				cout << ""Nu ai respectat intervalul!"" << endl;
				return -1;
			}
		}
	}

	afisare(matrice, n, m);

	int valMin = matrice[0][0], valMax = matrice[0][0];
	int coloanaMin = 0, coloanaMax = 0;

	// Cautare valoare minima si maxima in matrice
	for (int i = 0; i < n; i++) // linii
	{
		for (int j = 0; j < m; j++) // coloane
		{
			if (matrice[i][j] < valMin)
			{
				valMin = matrice[i][j];
				coloanaMin = j;
			}

			if (matrice[i][j] > valMax)
			{
				valMax = matrice[i][j];
				coloanaMax = j;
			}
		}
	}


	// Interschimbare coloana minima cu coloana maxima
	for (int i = 0; i < n; i++) // linii
	{
		int aux = matrice[i][coloanaMin];
		matrice[i][coloanaMin] = matrice[i][coloanaMax];
		matrice[i][coloanaMax] = aux;
	}

	afisare(matrice, n, m);


	return 0;
}

"
khNvUbri,loop_3,rric,Python,Monday 13th of November 2023 08:48:12 AM CDT,"# Draw a grid of lines, parametrized with step size and offset shift.
# Copyright 2023 Roland Richter                          [Processing.py]

from __future__ import division, print_function

def setup():
    size(800, 560)


def draw():
    background(""#0F0F0F"")

    draw_vertical_lines()
    # TRY to pass different arguments to the function, such as
    # draw_vertical_lines(55, 12)
    # draw_vertical_lines(offset = 18)
    
    # TRY to use a variable, e.g. frameCount or mouseX/Y, to animate the grid
    draw_horizontal_lines()


def draw_vertical_lines(step = 40, offset = 0):
    """"""Draw vertical grey lines, `step` pixels apart, starting at `offset`.
    
    Arguments:
    step -- vertical lines are drawn every `step` pixels (default: 40)
    offset -- vertical lines start at x coordinate `offset` (default: 0)
    """"""
    stroke(92)
    fill(192)
    textSize(12)
    textAlign(CENTER, CENTER)
    
    # Draw vertical lines, and place a label at the top of each line
    for x in range(offset, width+1, step):  
        line(x, 0, x, height)
        label = nf(x, 3)
        text(label, x, 12)
    
    
def draw_horizontal_lines(step = 40, offset = 0):
    """"""Draw horizontal grey lines, `step` pixels apart, starting at `offset`.
    
    Arguments:
    step -- horizontal lines are drawn every `step` pixels (default: 40)
    offset -- horizontal lines start at y coordinate `offset` (default: 0)
    """"""
    stroke(92)
    fill(192)
    textSize(12)
    textAlign(CENTER, CENTER)
    
    # Draw horizontal lines, and place a label at the left of each line
    # TRY to implement this function in a similar way as above
    for y in range(0):  
        line(0, 1, 2, 3)
        label = """"
        text(label, 4, 5)    


# ----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
    "
fWY81WVA,loop_2,rric,Python,Monday 13th of November 2023 08:46:51 AM CDT,"# Draw a grid of horizontal and vertical lines
# Copyright 2023 Roland Richter                          [Processing.py]


from __future__ import division, print_function

def setup():
    size(800, 560)


def draw():
    background(""#0F0F0F"")

    draw_vertical_lines()
    draw_horizontal_lines()


def draw_vertical_lines():
    """"""Draw vertical grey lines 40 pixels apart.""""""
    stroke(92)
    fill(192)
    textSize(12)
    textAlign(CENTER, CENTER)
    
    # Draw vertical lines, and place a label at the top of each line
    # QUIZ Why is `width+1`, and not `witdh`, used as the stop parameter here?
    for x in range(0, width+1, 40):  
        line(x, 0, x, height)
        label = nf(x, 3)
        text(label, x, 12)
    
    
def draw_horizontal_lines():
    """"""Draw horizontal grey lines 40 pixels apart.""""""
    stroke(92)
    fill(192)
    textSize(12)
    textAlign(CENTER, CENTER)
    
    # Draw horizontal lines, and place a label at the left of each line
    # TRY to implement this function in a similar way as above
    for y in range(0):  
        line(0, 1, 2, 3)
        label = """"
        text(label, 4, 5)


# ----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
    "
uHQuseDx,loop_1,rric,Python,Monday 13th of November 2023 08:45:07 AM CDT,"# Demonstrate various methods to create a list of numbers in Python.
# Copyright 2023 Roland Richter                           [Mu: Python 3]

# If you have to create a list which holds numbers 0, 40, 80, ..., 400,
# there are several methods to do it:.
# 1. You could simple write a list with all items in it:
nums_a = [0, 40, 80, 120, 160, 200, 240, 280, 320, 360, 400]

# ... really tedious typing, isn't it? There are better ways.
# 2. The second way is still a bit tedious:
nums_b = []             # Create an empty list, then ...
num = 0
while num <= 400:       # ... (until 400 is reached)
    nums_b.append(num)  # ... start appending numbers: first 0, ...
    num += 40           # ... then 40, 80, and so on.

# Now, open a handbook such as
# https://www.w3schools.com/python/python_strings.asp
# and start to FIX my code; but ONLY code inside ↓ / ↑ lines!

# 3. Python provides another way to loop through numbers:
# the ""for"" loop with the range(start, stop, step) function, where
# start is the integer to start the iteration with,
# stop is the integer to stop with (not included),
# step is the integer specifying the increment.
# A common source of errors is the fact that stop is NOT included.
# FIX the numbers in ""range"" to create all numbers 0, 40, ... 400:
# ↓---------↓---------↓---------↓---------↓---------↓---------↓
nums_c = []
for num in range(0, 400, 40):
    nums_c.append(num)
# ↑---------↑---------↑---------↑---------↑---------↑---------↑

# 4. Two of the arguments of range(start, stop, step) are optional:
# start is the integer to start with -- optional (default: 0),
# stop is the integer to stop with (not included) -- required,
# step is specifying the increment -- optional (default: 1).
# So, writing ""for num in range(10)"" means ""for num in range(0, 10, 1)"",
# which is another way of saying ""loop over 10 numbers, from 0 to 9"".
# FIX the numbers in ""range"" to create all numbers 0, 40, ... 400:
# ↓---------↓---------↓---------↓---------↓---------↓---------↓
nums_d = []
for idx in range(10):
    nums_d.append(40 * idx)
# ↑---------↑---------↑---------↑---------↑---------↑---------↑

# 5. Python provides an even shorter syntax, called list comprehension.
# FIX the (hopefully obvious) computation error here.
# ↓---------↓---------↓---------↓---------↓---------↓---------↓
nums_e = [42 * idx for idx in range(11)]
# ↑---------↑---------↑---------↑---------↑---------↑---------↑

# 6. Your turn!
# Create [0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165]
# ↓---------↓---------↓---------↓---------↓---------↓---------↓
nums_f = []
# ↑---------↑---------↑---------↑---------↑---------↑---------↑

# 🖐 HALT! No code editing below this line!
# ↑---------↑---------↑---------↑---------↑---------↑---------↑

nums40 = [0, 40, 80, 120, 160, 200, 240, 280, 320, 360, 400]
nums15 = [0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165]
assert nums_a == nums_b, ""\n  nums_b is "" + str(nums_b) + ""\n  expected: "" + str(nums40)
assert nums_a == nums_c, ""\n  nums_c is "" + str(nums_c) + ""\n  expected: "" + str(nums40)
assert nums_a == nums_d, ""\n  nums_d is "" + str(nums_d) + ""\n  expected: "" + str(nums40)
assert nums_a == nums_e, ""\n  nums_e is "" + str(nums_e) + ""\n  expected: "" + str(nums40)
assert nums_a == nums_f, ""\n  nums_f is "" + str(nums_f) + ""\n  expected: "" + str(nums15)

print(""+---------+---------+---------+---------+---------+---------+"")
input(""FIXED You did it!"")

# ----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
"
wA4M3ebf,Produs = suma divizori * numar divizori,ToniDev,C++,Monday 13th of November 2023 08:31:31 AM CDT,"#include <iostream>
using namespace std;

void sumAndCountDivisors(int n, int& sum, int& count)
{
	sum = 0;
	count = 0;
	for (int i = 1; i <= sqrt(n); i++)
	{
		if (n % i == 0)
		{
			sum += i;
			count++;

			if (i != n / i)
			{
				sum += n / i;
				count++;
			}
		}
	}
}

void showArray(unsigned int arr[], int n)
{
	for (int i = 0; i < n; i++)
		cout << arr[i] << "" "";
	cout << endl;
}


int main()
{

	unsigned int numbers[10];

	int n;
	cout << ""Enter n (max. 10): ""; cin >> n;

	for (int i = 0; i < n; i++)
	{
		cout <<""["" << i + 1 << ""] Enter number: ""; cin >> numbers[i];
	}

	cout << ""Afisare vector: "";
	showArray(numbers, n);

	int divSum, divCount;

	for (int i = 0; i < n; i++)
	{
		sumAndCountDivisors(numbers[i], divSum, divCount);
		numbers[i] = divSum * divCount;
	}

	cout << ""Afisare vector: "";
	showArray(numbers, n);


	cout << ""\nAfisare vector invers: "";
	for (int i = n-1; i >= 0; i--)
	{
		cout << numbers[i] << "" "";
	}

	return 0;
}"
dEuZaxKX,Untitled,BC99168,C,Monday 13th of November 2023 08:26:32 AM CDT,"#include <iostream>
using namespace std;

typedef struct node{ //建一個node型態 
	int value;
	struct node *left;
	struct node *right;
	struct node *parent;
}node;

class BST{
	public:
	node *root; //宣告根的指標 
	BST(){
		root = nullptr; //根為空指標
	}
	void add_node(int n){
		node *new_node = new node; //建立一個新的	node(new_node)
		new_node->value = n; 
		new_node->left = nullptr;
		new_node->right = nullptr;
		if(root == nullptr){ //若根為空指標，根設為new_node
			root = new_node;
			root->parent = nullptr;
			return; 
		}
		node *current = root;
		node *pre = root; //current的上一項
		while(current != nullptr){ //current走到nullptr
			pre = current;
			if(current->value >= n)
				current = current->left;
			else
				current = current->right;
		}
		if(n < pre->value) //n比較小，插入在左邊
			pre->left = new_node;
		else
			pre->right = new_node; //插入在右邊
		new_node->parent = pre;
	}
	
	void delete_node(int n){
		node *current = root;
		while(current->value != n){ //current走到要刪掉的位址
			if(current->value > n)
				current = current->left;
			else
				current = current->right;
		}
		if(current->right == nullptr && current->left == nullptr){ //current沒有child
			if(current == root){ //若要刪掉root，root變成nullptr
				root = nullptr;
				return;
			}
			if(current->parent->right == current)
				current->parent->right = nullptr;
			else
				current->parent->left = nullptr;
			delete current;
		}
		else if(current->left == nullptr){ //current只有右邊child
			if(current == root){ //若要刪掉root，右邊child變成root
				root = current->right;
				delete current;
				return;
			}
			current->right->parent = current->parent; //child的parent設為自己的parent
			if(current->parent->right == current) //parent的child設為自己的child
				current->parent->right = current->right;
			else
				current->parent->left = current->right;
			delete current;
		}
		else if(current->right == nullptr){ //current只有左邊child
			if(current == root){ //若要刪掉root，左邊child變成root
				root = current->left;
				delete current;
				return;
			}
			current->left->parent = current->parent; //child的parent設為自己的parent
			if(current->parent->right == current) //parent的child設為自己的child
				current->parent->right = current->left;
			else
				current->parent->left = current->left;
			delete current;
		}
		else{ //current有兩個child
			node* moving_node = current->left; //找到current左子樹的最大值(moving_node)
			while(moving_node->right != nullptr)
				moving_node = moving_node->right;
			if(moving_node->left != nullptr) //修改moving_node的child的parent
				moving_node->left->parent = moving_node->parent;
			if(moving_node->parent->left == moving_node)//修改moving_node的parent的child
				moving_node->parent->left = moving_node->left;
			else
				moving_node->parent->right = moving_node->left;		
			if(current == root){ //若要刪掉root，moving_node變成root
				root = moving_node;
				moving_node->left = current->left;
				moving_node->right = current->right;
				moving_node->parent = current->parent;
				delete current;
				return;
			}
			moving_node->left = current->left; //moving_node取代current
			moving_node->right = current->right;
			moving_node->parent = current->parent;
			if(moving_node->parent->left == current)
				moving_node->parent->left = moving_node;
			else
				moving_node->parent->right = moving_node;
			if(moving_node->left != nullptr)
				moving_node->left->parent = moving_node;
			if(moving_node->right != nullptr)
				moving_node->right->parent = moving_node;
			delete current;
			return;
		}
	}
	
	void traverse(node* tmp){ //inorder traversal
		if(tmp == nullptr)
			return;
		traverse(tmp->left);
		cout << tmp->value << "" "";
		traverse(tmp->right);
	}
	void traverse_left(node* tmp){ //inorder traversal，輸出左邊child
		if(tmp == nullptr)
			return;
		traverse_left(tmp->left);
		if(tmp->left != nullptr)
			cout << tmp->left->value << "" "";
		else
			cout << ""0 "";
		traverse_left(tmp->right);
	}
	void traverse_right(node* tmp){ //inorder traversal，輸出右邊child
		if(tmp == nullptr)
			return;
		traverse_right(tmp->left);
		if(tmp->right != nullptr)
			cout << tmp->right->value << "" "";
		else
			cout << ""0 "";
		traverse_right(tmp->right);
	}
	int find(int n){ //判斷樹中是否存在n
		node *tmp = root;
		while(tmp != nullptr){
			if(n == tmp->value)
				return 1;
			if(n < tmp->value)
				tmp = tmp->left;
			else
				tmp = tmp->right;
		}
		return 0;
	}
};

int main() {
	int n, flag = 0; //flag代表是否為第一組輸入
	while(cin >> n){
		if(flag == 1) //不是第一組輸入則先換行
			cout << ""\n"";
		if(flag == 0)
			flag = 1;
		BST T = BST(); // 建立二元搜尋樹
		while(1){
			if(n == -1)
				break;
			if(T.find(n) == 0) //如果n不在樹中，加入n
				T.add_node(n);
			else //否則刪除n
				T.delete_node(n);
		  	cin >> n;
	  	}
	  	cout << ""node: "";
	  	T.traverse(T.root);
		cout<<""\nleft: "";
		T.traverse_left(T.root);
		cout<<""\nright: "";
		T.traverse_right(T.root);
		cout<<""\n"";
  	}
}"
TQDFURMr,Untitled,nicuvlad76,C++,Monday 13th of November 2023 08:24:05 AM CDT,"#include<bits/stdc++.h>
using namespace std;
/**
 Liste liniare simplu inlantuite=LLSI

 1. adaugare la final =adaugare
 2. adaugare in fata primului nod = adaugareInainte
 3. afisarea liste =afisare
*/
struct nod
{
  int info;
  nod *urm;
};
nod *p;

void adaugare(nod * & p , int x)
{
  ///adaugare nod la final
  nod* q=new nod;
  q->info=x;
  q->urm=NULL;

  if(p==0)///lista vida
    p=q;
  else
  {
      nod* u;
      for(u=p; u->urm!=NULL; u=u->urm);
      u->urm=q;///leg elemente existe de noul nod
  }
}
void adaugareInainte(nod * & p , int x)
{
   nod*q=new nod;
   q->info=x;
   q->urm=p;
   p=q;
}
void Creare(nod*&p)
{
   ifstream fin(""lista.in"");
   int x;
   while(fin>>x)
        ///adaugare(p,x);
        adaugareInainte(p,x);
    fin.close();
}

void afisare(nod*p)
{
    for(nod *q=p;q; q=q->urm)
        cout<<q->info<<"" "";
    cout<<""\n"";
}


int main()
{
  Creare(p);
  afisare(p);
  return 0;
}

"
3zguTad5,CRUD USERS,jevonrama,PHP,Monday 13th of November 2023 08:22:11 AM CDT,"<--- templates/users/add.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\User $user
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('List Users'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""users form content"">
            <?= $this->Form->create($user) ?>
            <fieldset>
                <legend><?= __('Add User') ?></legend>
                <?php
                    echo $this->Form->control('name');
                    echo $this->Form->control('email');
                    echo $this->Form->control('phone_num');
                    echo $this->Form->control('address');
                    echo $this->Form->control('profile_photo');
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>

<--- templates/users/index.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var iterable<\App\Model\Entity\User> $users
 */
?>
<div class=""users index content"">
    <?= $this->Html->link(__('New User'), ['action' => 'add'], ['class' => 'button float-right']) ?>
    <h3><?= __('Users') ?></h3>
    <div class=""table-responsive"">
        <table>
            <thead>
                <tr>
                    <th><?= $this->Paginator->sort('id') ?></th>
                    <th><?= $this->Paginator->sort('name') ?></th>
                    <th><?= $this->Paginator->sort('email') ?></th>
                    <th><?= $this->Paginator->sort('phone_num') ?></th>
                    <th><?= $this->Paginator->sort('created') ?></th>
                    <th><?= $this->Paginator->sort('modified') ?></th>
                    <th class=""actions""><?= __('Actions') ?></th>
                </tr>
            </thead>
            <tbody>
                <?php 
                $j = 1;
                foreach ($users as $user): ?>
                <tr>
                    <td><?= $j++?></td>
                    <td><?= h($user->name) ?></td>
                    <td><?= h($user->email) ?></td>
                    <td><?= h($user->phone_num) ?></td>
                    <td><?= h($user->created) ?></td>
                    <td><?= h($user->modified) ?></td>
                    <td class=""actions"">
                        <?= $this->Html->link(__('View'), ['action' => 'view', $user->id]) ?>
                        <?= $this->Html->link(__('Edit'), ['action' => 'edit', $user->id]) ?>
                        <?= $this->Form->postLink(__('Delete'), ['action' => 'delete', $user->id], ['confirm' => __('Are you sure you want to delete # {0}?', $user->id)]) ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>
    <div class=""paginator"">
        <ul class=""pagination"">
            <?= $this->Paginator->first('<< ' . __('first')) ?>
            <?= $this->Paginator->prev('< ' . __('previous')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('next') . ' >') ?>
            <?= $this->Paginator->last(__('last') . ' >>') ?>
        </ul>
        <p><?= $this->Paginator->counter(__('Page {{page}} of {{pages}}, showing {{current}} record(s) out of {{count}} total')) ?></p>
    </div>
</div>

<--- templates/users/edit.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\User $user
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Form->postLink(
                __('Delete'),
                ['action' => 'delete', $user->id],
                ['confirm' => __('Are you sure you want to delete # {0}?', $user->id), 'class' => 'side-nav-item']
            ) ?>
            <?= $this->Html->link(__('List Users'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""users form content"">
            <?= $this->Form->create($user) ?>
            <fieldset>
                <legend><?= __('Edit User') ?></legend>
                <?php
                    echo $this->Form->control('name');
                    echo $this->Form->control('email');
                    echo $this->Form->control('phone_num');
                    echo $this->Form->control('address');
                    echo $this->Form->control('profile_photo');
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>

<--- templates/users/view.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\User $user
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('Edit User'), ['action' => 'edit', $user->id], ['class' => 'side-nav-item']) ?>
            <?= $this->Form->postLink(__('Delete User'), ['action' => 'delete', $user->id], ['confirm' => __('Are you sure you want to delete # {0}?', $user->id), 'class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('List Users'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('New User'), ['action' => 'add'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""users view content"">
            <h3><?= h($user->name) ?></h3>
            <table>
                <tr>
                    <th><?= __('Name') ?></th>
                    <td><?= h($user->name) ?></td>
                </tr>
                <tr>
                    <th><?= __('Email') ?></th>
                    <td><?= h($user->email) ?></td>
                </tr>
                <tr>
                    <th><?= __('Phone Num') ?></th>
                    <td><?= h($user->phone_num) ?></td>
                </tr>
                <tr>
                    <th><?= __('Id') ?></th>
                    <td><?= $this->Number->format($user->id) ?></td>
                </tr>
                <tr>
                    <th><?= __('Created') ?></th>
                    <td><?= h($user->created) ?></td>
                </tr>
                <tr>
                    <th><?= __('Modified') ?></th>
                    <td><?= h($user->modified) ?></td>
                </tr>
            </table>
            <div class=""text"">
                <strong><?= __('Address') ?></strong>
                <blockquote>
                    <?= $this->Text->autoParagraph(h($user->address)); ?>
                </blockquote>
            </div>
            <div class=""text"">
                <strong><?= __('Profile Photo') ?></strong>
                <blockquote>
                    <?= $this->Text->autoParagraph(h($user->profile_photo)); ?>
                </blockquote>
            </div>
            <div class=""related"">
                <h4><?= __('Related Transactions') ?></h4>
                <?php if (!empty($user->transactions)) : ?>
                <div class=""table-responsive"">
                    <table>
                        <tr>
                            <th><?= __('Id') ?></th>
                            <th><?= __('Date Transaction') ?></th>
                            <th><?= __('Amount Order') ?></th>
                            <th><?= __('Amount Price') ?></th>
                            <th><?= __('User Id') ?></th>
                            <th><?= __('Product Id') ?></th>
                            <th class=""actions""><?= __('Actions') ?></th>
                        </tr>
                        <?php foreach ($user->transactions as $transactions) : ?>
                        <tr>
                            <td><?= h($transactions->id) ?></td>
                            <td><?= h($transactions->date_transaction) ?></td>
                            <td><?= h($transactions->amount_order) ?></td>
                            <td><?= h($transactions->amount_price) ?></td>
                            <td><?= h($transactions->user_id) ?></td>
                            <td><?= h($transactions->product_id) ?></td>
                            <td class=""actions"">
                                <?= $this->Html->link(__('View'), ['controller' => 'Transactions', 'action' => 'view', $transactions->id]) ?>
                                <?= $this->Html->link(__('<i class=""fa-solid fa-pencil fa-shake""></i>'), ['controller' => 'Transactions', 'action' => 'edit', $transactions->id]) ?>
                                <?= $this->Form->postLink(__('Delete'), ['controller' => 'Transactions', 'action' => 'delete', $transactions->id], ['confirm' => __('Are you sure you want to delete # {0}?', $transactions->id)]) ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </table>
                </div>
                <?php endif; ?>
            </div>
        </div>
    </div>
</div>
"
XHtYCvjm,Untitled,nicuvlad76,C++,Monday 13th of November 2023 08:17:14 AM CDT,"#include<bits/stdc++.h>
using namespace std;
/**
 Liste liniare simplu inlantuite=LLSI

 1. Adaugare la Final =AddLast
*/
struct nod
{
  int info;
  nod *urm;
};
nod *p;

void adaugare(nod * & p , int x)
{
  ///adaugare nod la final
  nod* q=new nod;
  q->info=x;
  q->urm=NULL;

  if(p==0)///lista vida
    p=q;
  else
  {
      nod* u;
      for(u=p; u->urm!=NULL; u=u->urm);
      u->urm=q;///leg elemente existe de noul nod
  }
}

void Creare(nod*&p)
{
   ifstream fin(""lista.in"");
   int x;
   while(fin>>x)
        adaugare(p,x);
    fin.close();
}

void afisare(nod*p)
{
    for(nod *q=p;q; q=q->urm)
        cout<<q->info<<"" "";
    cout<<""\n"";
}


int main()
{
  Creare(p);
  afisare(p);
  return 0;
}

"
dpMrYNyu,squaresAreBlurred,max2201111,Python,Monday 13th of November 2023 08:08:58 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm import tqdm


from IPython.display import display
from IPython.display import Javascript
display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))


# Function to create images based on predictions
def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data[i]),np.max(data[i])], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        image[i, -1] = np.array([128, 128, 128])
        if predictions[i] == 0:
            image[i, -1] = np.array([0, 128, 0])
        elif predictions[i] == 1:
            image[i, -1] = np.array([255, 0, 0])

    return image

# Define the blood test results for sixteen persons
person1_results = [80, 90, 100, 125, 120, 0]
person2_results = [95, 105, 115, 110, 135, 1]
person3_results = [110, 120, 130, 140, 150, 0]
person4_results = [100, 110, 120, 130, 140, 1]
person5_results = [105, 115, 100, 105, 110, 0]
person6_results = [90, 110, 115, 95, 120, 1]
person7_results = [116, 99, 106, 105, 119, 0]
person8_results = [111, 93, 118, 118, 107, 1]
person9_results = [107, 97, 105, 119, 98, 0]
person10_results = [92, 108, 90, 117, 111, 1]
person11_results = [118, 105, 103, 118, 99, 0]
person12_results = [97, 115, 101, 101, 113, 1]
person13_results = [95, 111, 93, 112, 120, 0]
person14_results = [100, 112, 118, 109, 103, 1]
person15_results = [113, 91, 94, 93, 99, 0]
person16_results = [103, 92, 95, 110, 98, 1]

# Combine the results into a list
all_results = [person1_results, person2_results, person3_results, person4_results,
               person5_results, person6_results, person7_results, person8_results,
               person9_results, person10_results, person11_results, person12_results,
               person13_results, person14_results, person15_results, person16_results]


#all_results = [person1_results, person2_results]


# Extract the last column (0 or 1) as labels
labels = [results[-1] for results in all_results]

# Remove the last column from the dataset
data = [results[:-1] for results in all_results]

# Define the number of rows for training and testing
num_training_rows = 16
num_testing_rows = 16

# Split the data into training and testing datasets
X_train, X_test, y_train, y_test = data[:num_training_rows], data[-num_testing_rows:], labels[:num_training_rows], labels[-num_testing_rows:]

# Normalize the training data
min_values = np.min(X_train, axis=0)
max_values = np.max(X_train, axis=0)
X_train_normalized = (X_train - min_values) / (max_values - min_values)

# Print normalized training data
print(""Normalized Training Data:"")
print(X_train_normalized)
print(""Adenormalized"",X_train_normalized*(max_values - min_values)+min_values,""Bdenormalized"")

# Define a simple neural network model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu', input_shape=(len(X_train[0]),)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Lists to store accuracy values
accuracy_history = []

# Create images for the training data
image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)

from PIL import Image


# Populate image_training with consistent gray and red/green colors based on the labels in the last column
for i, label in enumerate(y_train):
    for j in range(len(X_train[0])):
        pixel_value = int(np.interp(X_train_normalized[i][j], [np.min(X_train_normalized[i]),np.max(X_train_normalized[i])], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])

# Train the model for 400 epochs
epochs = 200
for epoch in tqdm(range(epochs)):
#    history = model.fit(X_train_normalized, y_train, epochs=1, verbose=0)
    history = model.fit(X_train_normalized, np.array(y_train), epochs=1, verbose=0)

    accuracy_history.append(history.history['accuracy'][0])

    if epoch == 1:
        # Normalize the testing data
        X_test_normalized = (X_test - min_values) / (max_values - min_values)

        y_pred_after_2nd_epoch = model.predict(X_test_normalized)
        y_pred_binary_after_2nd_epoch = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch]
        image_testing_before_2nd_epoch = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch)

    if epoch == epochs - 1:
        # Predict for a new person
        personNEW_results = [101, 112, 124, 138, 100]
        personNEW_results_normalized = (np.array(personNEW_results) - min_values) / (max_values - min_values)
        
        #personNEW_results_normalized = [ 0.466666667 , 0.000033333333 , -0.25    ,     -0.384133333333 , -0.466666667]
        
        personNEW_prediction = model.predict(np.array([personNEW_results_normalized]))
        personNEW_label = 1 if personNEW_prediction >= 0.5 else 0
        y_pred_after_50_epochs = model.predict(X_test_normalized)
        y_pred_binary_after_50_epochs = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs]
        image_testing_after_50_epochs = create_image(X_test_normalized, y_pred_binary_after_50_epochs)

        # Create image for the new person
        image_personNEW = create_image([personNEW_results_normalized], [personNEW_label])

# Display the images
plt.figure(figsize=(25, 15))
plt.subplot(2, 2, 1)
plt.imshow(image_training)
plt.title(""Training Data"")
plt.axis(""off"")

plt.subplot(2, 2, 2)
plt.imshow(image_testing_before_2nd_epoch)
plt.title(""Testing Data (2nd Epoch)"")
plt.axis(""off"")

plt.subplot(2, 2, 3)
plt.imshow(image_testing_after_50_epochs)
plt.title(f""Testing Data ({epochs} Epochs)"")
plt.axis(""off"")

plt.subplot(2, 2, 4)
plt.imshow(image_personNEW)
plt.title(f""New Person\nLabel: {personNEW_label},[{personNEW_prediction}]"")
plt.axis(""off"")

# Plot accuracy history
plt.figure(figsize=(12, 5))
plt.plot(range(1, epochs + 1), accuracy_history, marker='o')
plt.title('Accuracy Over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.grid()

# Print normalized data
print(""Normalized PersonNEW Data:"")
print(personNEW_results_normalized)

 

from PIL import ImageEnhance

##################

image = Image.fromarray(image_training)

# Set the size in centimeters
centimeters_per_inch = 2.54
width, height = 4, 9  # in centimeters

# Set the desired DPI (resolution)
dpi = 1200  # Adjust this value for high resolution

# Convert centimeters to inches and calculate the pixel dimensions
width_pixels, height_pixels = width * dpi / centimeters_per_inch, height * dpi / centimeters_per_inch

# Resize the image
resized_image = image.resize((int(width_pixels//5), int(height_pixels//5)), Image.ANTIALIAS)

# Enhance the sharpness and save the image
enhancer = ImageEnhance.Sharpness(resized_image)
final_image = enhancer.enhance(20.1)  # Adjust sharpness as needed

# Save the resized image with increased sharpness
final_image.save(""C:/Users/Hynek/Desktop/Untitled.png"", dpi=(dpi, dpi))

##################
#image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)
#image = Image.fromarray(image_training)

import cv2


# Assuming 'image_training' is your NumPy array
cv2.imwrite(""C:/Users/Hynek/Desktop/Untitled3.png"", image_training)

#print(""A"")
#image.show()
#print(""B"")


# Set the size in centimeters
centimeters_per_inch = 2.54
#width, height = 12, 13  # in centimeters

# Set the desired DPI (resolution)
#dpi = 1200  # Adjust this value for high resolution

# Convert centimeters to inches and calculate the pixel dimensions
#width_pixels, height_pixels = width * dpi / centimeters_per_inch, height * dpi / centimeters_per_inch

#width_pixels, height_pixels = 100, 200

# Resize the image
##resized_image = image.resize((int(width_pixels), int(height_pixels)) )

# Enhance sharpness using unsharp mask

#enhancer = ImageEnhance.Contrast(resized_image)
#sharpness = 1  # You can adjust this value
#sharpened_image = enhancer.enhance(sharpness)

# Save the resized image with increased sharpness

#image = Image.fromarray(image_personNEW)

# Save the image
#image.save(""path/to/save/image.png"")

##image.save(""C:/Users/Hynek/Desktop/Untitled3.png"", dpi=(12000,12000))

#image.save(""path/to/save/image.png"", dpi=(dpi, dpi))

plt.show()

print(""X_train before normalization:"")
print(X_train)
print(""X_test before normalization:"")
print(X_test)"
K9g1AcLg,News Nov13 23,Newscaster_Ned,Email,Monday 13th of November 2023 08:05:34 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

T‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎t‎h‎e‎n‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎t‎h‎e‎n‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎!‎

E‎U‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎ ‎H‎a‎m‎a‎s‎ ‎U‎s‎i‎n‎g‎ ‎'‎H‎o‎s‎p‎i‎t‎a‎l‎s‎ ‎a‎n‎d‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎s‎ ‎a‎s‎ ‎H‎u‎m‎a‎n‎ ‎S‎h‎i‎e‎l‎d‎s‎'‎
1‎5‎ ‎S‎h‎o‎t‎,‎ ‎F‎i‎v‎e‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎D‎u‎r‎i‎n‎g‎ ‎W‎e‎e‎k‎e‎n‎d‎ ‎i‎n‎ ‎M‎a‎y‎o‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎'‎s‎ ‎C‎h‎i‎c‎a‎g‎o‎
S‎N‎E‎A‎K‎ ‎P‎E‎E‎K‎:‎ ‎I‎n‎s‎i‎d‎e‎ ‎t‎h‎e‎ ‎T‎w‎o‎-‎Y‎e‎a‎r‎ ‎‘‎C‎o‎n‎t‎r‎o‎l‎i‎g‎a‎r‎c‎h‎s‎’‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎o‎n‎
F‎i‎v‎e‎ ‎D‎r‎o‎w‎n‎ ‎a‎s‎ ‎M‎e‎d‎i‎t‎e‎r‎r‎a‎n‎e‎a‎n‎ ‎P‎e‎o‎p‎l‎e‎ ‎S‎m‎u‎g‎g‎l‎e‎r‎s‎ ‎K‎i‎l‎l‎ ‎A‎g‎a‎i‎n‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
‘‎C‎O‎N‎T‎R‎O‎L‎I‎G‎A‎R‎C‎H‎S‎’‎:‎ ‎T‎h‎e‎ ‎T‎w‎o‎ ‎Y‎e‎a‎r‎ ‎I‎n‎v‎e‎s‎t‎i‎g‎a‎t‎i‎o‎n‎ ‎I‎n‎t‎o‎ ‎B‎i‎l‎l‎ ‎G‎a‎t‎e‎s‎,‎ ‎K‎l‎a‎u‎s‎ ‎S‎c‎h‎w‎a‎b‎,‎ ‎M‎a‎r‎k‎ ‎Z‎u‎c‎k‎e‎r‎b‎e‎r‎g‎,‎ ‎J‎e‎f‎f‎ ‎B‎e‎z‎o‎s‎,‎ ‎&‎ ‎O‎t‎h‎e‎r‎s‎…‎
C‎a‎l‎i‎ ‎C‎r‎u‎m‎b‎l‎i‎n‎g‎

M‎a‎s‎s‎i‎v‎e‎ ‎F‎i‎r‎e‎ ‎a‎t‎ ‎S‎i‎t‎e‎ ‎o‎f‎ ‎H‎o‎m‎e‎l‎e‎s‎s‎ ‎E‎n‎c‎a‎m‎p‎m‎e‎n‎t‎ ‎S‎h‎u‎t‎s‎ ‎D‎o‎w‎n‎ ‎L‎.‎A‎.‎ ‎F‎r‎e‎e‎w‎a‎y‎ ‎I‎n‎d‎e‎f‎i‎n‎i‎t‎e‎l‎y‎
L‎O‎S‎ ‎A‎N‎G‎E‎L‎E‎S‎,‎ ‎C‎A‎ ‎N‎O‎V‎E‎M‎B‎E‎R‎ ‎1‎2‎,‎ ‎2‎0‎2‎3‎:‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎f‎i‎r‎e‎f‎i‎g‎h‎t‎e‎r‎s‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎a‎s‎s‎e‎s‎s‎ ‎t‎h‎e‎ ‎d‎a‎m‎a‎g‎e‎ ‎f‎r‎o‎m‎ ‎a‎ ‎f‎i‎r‎e‎ ‎u‎n‎d‎e‎r‎ ‎I‎n‎t‎e‎r‎s‎t‎a‎t‎e‎ ‎1‎0‎ ‎n‎e‎a‎r‎ ‎d‎o‎w‎n‎t‎o‎w‎n‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎,‎ ‎C‎A‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎1‎2‎,‎ ‎2‎0‎2‎3‎.‎ ‎A‎ ‎s‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎1‎0‎ ‎F‎r‎e‎e‎w‎a‎y‎ ‎i‎n‎ ‎d‎o‎w‎n‎t‎o‎w‎n‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎d‎a‎m‎a‎g‎e‎d‎ ‎i‎n‎ ‎a‎ ‎d‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎ ‎f‎i‎r‎e‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎w‎e‎e‎k‎e‎n‎d‎ ‎w‎i‎l‎l‎ ‎r‎e‎m‎a‎i‎n‎ ‎…‎
A‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎f‎i‎r‎e‎ ‎a‎t‎ ‎a‎ ‎h‎o‎m‎e‎l‎e‎s‎s‎ ‎e‎n‎c‎a‎m‎p‎m‎e‎n‎t‎ ‎b‎e‎n‎e‎a‎t‎h‎ ‎a‎n‎ ‎u‎n‎d‎e‎r‎p‎a‎s‎s‎ ‎i‎n‎ ‎d‎o‎w‎n‎t‎o‎w‎n‎ ‎L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎h‎a‎s‎ ‎s‎h‎u‎t‎ ‎d‎o‎w‎n‎ ‎t‎h‎e‎ ‎1‎0‎ ‎f‎r‎e‎e‎w‎a‎y‎ ‎i‎n‎d‎e‎f‎i‎n‎i‎t‎e‎l‎y‎.‎ ‎

U‎K‎ ‎I‎n‎t‎e‎r‎i‎o‎r‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎S‎a‎c‎k‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎p‎e‎a‎k‎i‎n‎g‎ ‎O‎u‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎M‎a‎r‎c‎h‎e‎r‎s‎
U‎K‎ ‎I‎n‎t‎e‎r‎i‎o‎r‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎S‎a‎c‎k‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎p‎e‎a‎k‎i‎n‎g‎ ‎O‎u‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎M‎a‎r‎c‎h‎e‎r‎s‎
3‎6‎8‎
B‎i‎d‎e‎n‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎C‎o‎n‎f‎u‎s‎e‎d‎ ‎D‎u‎r‎i‎n‎g‎ ‎V‎e‎t‎e‎r‎a‎n‎s‎ ‎D‎a‎y‎ ‎C‎e‎r‎e‎m‎o‎n‎y‎
3‎,‎0‎0‎2‎
E‎X‎P‎O‎S‎E‎D‎:‎ ‎K‎l‎a‎u‎s‎ ‎S‎c‎h‎w‎a‎b‎ ‎&‎ ‎W‎E‎F‎’‎s‎ ‎B‎l‎u‎e‎p‎r‎i‎n‎t‎ ‎t‎o‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎Y‎o‎u‎r‎ ‎L‎i‎f‎e‎
E‎X‎P‎O‎S‎E‎D‎:‎ ‎K‎l‎a‎u‎s‎ ‎S‎c‎h‎w‎a‎b‎ ‎&‎ ‎W‎E‎F‎’‎s‎ ‎B‎l‎u‎e‎p‎r‎i‎n‎t‎ ‎t‎o‎ ‎C‎o‎n‎t‎r‎o‎l‎ ‎Y‎o‎u‎r‎ ‎L‎i‎f‎e‎
3‎,‎4‎8‎3‎
I‎s‎r‎a‎e‎l‎:‎ ‎W‎e‎ ‎D‎e‎l‎i‎v‎e‎r‎e‎d‎ ‎F‎u‎e‎l‎ ‎t‎o‎ ‎S‎h‎i‎f‎a‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎,‎ ‎H‎a‎m‎a‎s‎ ‎W‎o‎n‎'‎t‎ ‎L‎e‎t‎ ‎T‎h‎e‎m‎ ‎H‎a‎v‎e‎ ‎I‎t‎
I‎s‎r‎a‎e‎l‎:‎ ‎W‎e‎ ‎D‎e‎l‎i‎v‎e‎r‎e‎d‎ ‎F‎u‎e‎l‎ ‎t‎o‎ ‎S‎h‎i‎f‎a‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎,‎ ‎H‎a‎m‎a‎s‎ ‎W‎o‎n‎'‎t‎ ‎L‎e‎t‎ ‎T‎h‎e‎m‎ ‎H‎a‎v‎e‎ ‎I‎t‎
2‎6‎9‎
W‎A‎T‎C‎H‎;‎ ‎C‎o‎m‎e‎d‎i‎a‎n‎ ‎B‎i‎l‎l‎ ‎B‎u‎r‎r‎'‎s‎ ‎W‎i‎f‎e‎ ‎F‎l‎i‎p‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎h‎e‎ ‎D‎o‎u‎b‎l‎e‎ ‎B‎i‎r‎d‎
W‎A‎T‎C‎H‎;‎ ‎C‎o‎m‎e‎d‎i‎a‎n‎ ‎B‎i‎l‎l‎ ‎B‎u‎r‎r‎'‎s‎ ‎W‎i‎f‎e‎ ‎F‎l‎i‎p‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎t‎h‎e‎ ‎D‎o‎u‎b‎l‎e‎ ‎B‎i‎r‎d‎
1‎,‎1‎4‎1‎
M‎e‎g‎a‎n‎ ‎R‎a‎p‎i‎n‎o‎e‎:‎ ‎'‎I‎f‎ ‎T‎h‎e‎r‎e‎ ‎I‎s‎ ‎a‎ ‎G‎o‎d‎,‎ ‎T‎h‎i‎s‎ ‎I‎s‎ ‎P‎r‎o‎o‎f‎ ‎T‎h‎e‎r‎e‎ ‎I‎s‎n‎'‎t‎'‎
M‎e‎g‎a‎n‎ ‎R‎a‎p‎i‎n‎o‎e‎:‎ ‎'‎I‎f‎ ‎T‎h‎e‎r‎e‎ ‎I‎s‎ ‎a‎ ‎G‎o‎d‎,‎ ‎T‎h‎i‎s‎ ‎I‎s‎ ‎P‎r‎o‎o‎f‎ ‎T‎h‎e‎r‎e‎ ‎I‎s‎n‎'‎t‎'‎
2‎,‎5‎0‎1‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎i‎n‎ ‎N‎Y‎C‎ ‎R‎i‎p‎ ‎D‎o‎w‎n‎ ‎U‎S‎ ‎F‎l‎a‎g‎s‎ ‎i‎n‎ ‎H‎o‎n‎o‎r‎ ‎o‎f‎ ‎V‎e‎t‎e‎r‎a‎n‎s‎ ‎D‎a‎y‎
P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎i‎n‎ ‎N‎Y‎C‎ ‎R‎i‎p‎ ‎D‎o‎w‎n‎ ‎U‎S‎ ‎F‎l‎a‎g‎s‎ ‎i‎n‎ ‎H‎o‎n‎o‎r‎ ‎o‎f‎ ‎V‎e‎t‎e‎r‎a‎n‎s‎ ‎D‎a‎y‎
7‎7‎2‎
P‎o‎l‎l‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎L‎e‎a‎d‎s‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎m‎o‎n‎g‎ ‎I‎n‎d‎e‎p‎e‎n‎d‎e‎n‎t‎s‎
2‎,‎5‎7‎1‎
G‎l‎o‎b‎a‎l‎i‎s‎t‎ ‎C‎o‎u‎p‎!‎ ‎B‎r‎e‎x‎i‎t‎ ‎L‎o‎s‎e‎r‎ ‎D‎a‎v‎i‎d‎ ‎C‎a‎m‎e‎r‎o‎n‎ ‎B‎a‎c‎k‎ ‎i‎n‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎
G‎l‎o‎b‎a‎l‎i‎s‎t‎ ‎C‎o‎u‎p‎!‎ ‎B‎r‎e‎x‎i‎t‎ ‎L‎o‎s‎e‎r‎ ‎D‎a‎v‎i‎d‎ ‎C‎a‎m‎e‎r‎o‎n‎ ‎B‎a‎c‎k‎ ‎i‎n‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎
1‎1‎8‎
T‎i‎m‎ ‎S‎c‎o‎t‎t‎ ‎D‎r‎o‎p‎s‎ ‎O‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎R‎a‎c‎e‎
T‎i‎m‎ ‎S‎c‎o‎t‎t‎ ‎D‎r‎o‎p‎s‎ ‎O‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎R‎a‎c‎e‎

C‎o‎l‎o‎r‎a‎d‎o‎:‎ ‎M‎o‎n‎k‎m‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎2‎ ‎W‎h‎i‎t‎e‎ ‎M‎e‎n‎.‎

W‎e‎ ‎d‎o‎n‎'‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎e‎n‎ ‎h‎e‎'‎s‎ ‎g‎o‎n‎n‎a‎ ‎f‎a‎c‎e‎ ‎c‎h‎a‎r‎g‎e‎s‎.‎ ‎L‎e‎t‎'‎s‎ ‎h‎o‎p‎e‎ ‎i‎t‎'‎s‎ ‎s‎o‎o‎n‎.‎


P‎o‎s‎s‎i‎b‎l‎e‎ ‎P‎a‎r‎o‎l‎e‎ ‎f‎o‎r‎ ‎E‎r‎e‎c‎t‎u‎s‎ ‎W‎h‎o‎ ‎B‎e‎a‎t‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎S‎o‎ ‎T‎h‎a‎t‎ ‎H‎e‎ ‎C‎o‎u‎l‎d‎ ‎N‎o‎ ‎L‎o‎n‎g‎e‎r‎ ‎W‎a‎l‎k‎.‎


2‎ ‎M‎o‎n‎k‎e‎y‎m‎a‎n‎ ‎a‎n‎d‎ ‎2‎ ‎M‎o‎n‎k‎e‎s‎s‎e‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎L‎i‎v‎e‎s‎t‎r‎e‎a‎m‎i‎n‎g‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎o‎f‎ ‎R‎e‎t‎a‎r‎d‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎.‎


M‎e‎r‎i‎d‎i‎a‎n‎ ‎M‎u‎d‎f‎l‎a‎p‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎P‎r‎e‎g‎n‎a‎n‎t‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎f‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎J‎i‎g‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎ ‎a‎n‎d‎ ‎K‎i‎d‎n‎a‎p‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎B‎o‎o‎t‎l‎i‎p‎s‎ ‎W‎h‎o‎ ‎S‎t‎o‎l‎e‎ ‎L‎o‎a‎d‎e‎d‎ ‎M‎a‎c‎h‎i‎n‎e‎ ‎G‎u‎n‎s‎ ‎a‎n‎d‎ ‎U‎n‎l‎o‎c‎k‎e‎d‎ ‎P‎e‎m‎b‎r‎o‎k‎e‎ ‎P‎i‎n‎e‎s‎ ‎C‎o‎p‎ ‎C‎a‎r‎.‎


N‎e‎g‎r‎o‎ ‎S‎t‎e‎v‎e‎ ‎H‎a‎r‎v‎e‎y‎ ‎S‎u‎e‎d‎ ‎f‎o‎r‎ ‎C‎h‎a‎r‎i‎t‎y‎ ‎F‎r‎a‎u‎d‎.‎


G‎e‎r‎m‎a‎n‎y‎:‎ ‎S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎o‎s‎t‎s‎ ‎B‎o‎m‎b‎ ‎T‎h‎r‎e‎a‎t‎ ‎o‎n‎ ‎I‎n‎s‎t‎a‎g‎r‎a‎m‎;‎ ‎G‎e‎t‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
6‎1‎°‎
/‎5‎4‎°‎
2‎0‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎ ‎|‎ ‎D‎a‎y‎
6‎1‎°‎
2‎0‎%‎
N‎N‎E‎
1‎2‎
 ‎
m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎S‎l‎i‎g‎h‎t‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎a‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎.‎ ‎H‎i‎g‎h‎ ‎6‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎5‎ ‎p‎m‎
M‎o‎n‎ ‎1‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎4‎°‎
2‎4‎%‎
N‎
7‎
 ‎
m‎p‎h‎
O‎v‎e‎r‎c‎a‎s‎t‎.‎ ‎S‎l‎i‎g‎h‎t‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎a‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎.‎ ‎L‎o‎w‎ ‎5‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎1‎0‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
5‎:‎4‎5‎ ‎p‎m‎
T‎u‎e‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎4‎9‎°‎
6‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎9‎°‎
8‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎2‎°‎
/‎5‎4‎°‎
8‎%‎
W‎ ‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎5‎°‎
8‎%‎
S‎W‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎6‎1‎°‎
6‎%‎
E‎N‎E‎ ‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎6‎1‎°‎
2‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎0‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎3‎°‎
/‎5‎1‎°‎
3‎8‎%‎
W‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎6‎°‎
/‎4‎9‎°‎
1‎0‎%‎
N‎W‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎5‎0‎°‎
2‎0‎%‎
S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎5‎1‎°‎
9‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎5‎2‎°‎
2‎2‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎5‎3‎°‎
2‎2‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎0‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎7‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎0‎°‎
/‎5‎0‎°‎
3‎2‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎s‎c‎r‎e‎a‎m‎i‎n‎g‎ ‎b‎l‎a‎c‎k‎ ‎m‎a‎r‎s‎h‎m‎a‎l‎l‎o‎w‎ ‎m‎a‎n‎.‎ ‎☻‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎b‎o‎r‎t‎i‎o‎n‎
I‎n‎ ‎o‎t‎h‎e‎r‎ ‎w‎o‎r‎d‎s‎,‎ ‎i‎f‎ ‎y‎o‎u‎ ‎h‎a‎d‎ ‎a‎ ‎p‎a‎r‎a‎s‎i‎t‎e‎ ‎b‎y‎ ‎a‎c‎c‎i‎d‎e‎n‎t‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎y‎o‎u‎ ‎g‎o‎t‎ ‎s‎o‎ ‎d‎r‎u‎n‎k‎ ‎y‎o‎u‎ ‎w‎e‎r‎e‎ ‎A‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎,‎ ‎o‎r‎ ‎w‎a‎s‎ ‎R‎a‎p‎e‎d‎ ‎b‎y‎ ‎a‎ ‎d‎i‎s‎g‎u‎s‎t‎i‎n‎g‎ ‎a‎n‎i‎m‎a‎l‎,‎ ‎o‎r‎ ‎i‎f‎ ‎y‎o‎u‎r‎ ‎b‎a‎b‎y‎ ‎h‎a‎d‎ ‎a‎ ‎s‎e‎v‎e‎r‎e‎ ‎a‎n‎d‎ ‎d‎e‎v‎a‎s‎t‎a‎t‎i‎n‎g‎ ‎g‎e‎n‎e‎t‎i‎c‎ ‎d‎i‎s‎o‎r‎d‎e‎r‎,‎ ‎t‎h‎e‎n‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎h‎a‎v‎e‎ ‎i‎t‎ ‎p‎u‎t‎ ‎o‎u‎t‎ ‎o‎f‎ ‎i‎t‎s‎ ‎m‎i‎s‎e‎r‎y‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎t‎r‎i‎m‎e‎s‎t‎e‎r‎ ‎s‎o‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎c‎a‎n‎n‎o‎t‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎c‎h‎a‎n‎c‎e‎ ‎t‎o‎ ‎d‎e‎v‎e‎l‎o‎p‎ ‎a‎ ‎b‎r‎a‎i‎n‎ ‎a‎n‎d‎ ‎s‎o‎u‎l‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎ ‎g‎r‎o‎w‎ ‎u‎p‎ ‎a‎ ‎t‎o‎r‎m‎e‎n‎t‎e‎d‎ ‎b‎u‎l‎l‎i‎e‎d‎ ‎E‎m‎o‎ ‎s‎o‎c‎i‎o‎p‎a‎t‎h‎ ‎w‎h‎o‎ ‎w‎i‎l‎l‎ ‎s‎t‎a‎r‎t‎ ‎a‎b‎o‎u‎t‎ ‎t‎w‎o‎ ‎h‎u‎n‎d‎r‎e‎d‎ ‎T‎u‎m‎b‎l‎r‎ ‎b‎l‎o‎g‎s‎,‎ ‎i‎n‎e‎v‎i‎t‎a‎b‎l‎y‎ ‎s‎h‎o‎o‎t‎ ‎u‎p‎ ‎a‎ ‎s‎c‎h‎o‎o‎l‎ ‎a‎n‎d‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎w‎r‎e‎a‎k‎ ‎h‎a‎v‎o‎c‎ ‎o‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎A‎ ‎s‎u‎r‎e‎-‎f‎i‎r‎e‎ ‎s‎u‎b‎j‎e‎c‎t‎ ‎t‎o‎ ‎s‎e‎n‎d‎ ‎a‎n‎y‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎m‎i‎n‎d‎e‎d‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎i‎n‎t‎o‎ ‎a‎ ‎4‎0‎0‎ ‎c‎o‎m‎m‎e‎n‎t‎ ‎f‎l‎a‎m‎e‎ ‎w‎a‎r‎.‎

(‎(‎ ‎T‎E‎X‎A‎S‎ ‎B‎A‎N‎N‎E‎D‎ ‎I‎T‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎n‎ ‎1‎9‎2‎1‎,‎ ‎t‎h‎e‎ ‎E‎m‎p‎i‎r‎e‎ ‎o‎f‎ ‎J‎a‎p‎a‎n‎ ‎t‎u‎r‎n‎e‎d‎ ‎a‎ ‎K‎o‎r‎e‎a‎n‎ ‎r‎o‎y‎a‎l‎ ‎c‎e‎m‎e‎t‎e‎r‎y‎ ‎i‎n‎t‎o‎ ‎a‎ ‎g‎o‎l‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎a‎t‎ ‎w‎h‎a‎t‎ ‎i‎s‎ ‎n‎o‎w‎ ‎H‎y‎o‎c‎h‎a‎n‎g‎ ‎P‎a‎r‎k‎.‎ ‎T‎h‎e‎ ‎t‎o‎m‎b‎ ‎o‎f‎ ‎R‎o‎y‎a‎l‎ ‎N‎o‎b‎l‎e‎ ‎C‎o‎n‎s‎o‎r‎t‎ ‎U‎i‎b‎i‎n‎ ‎S‎e‎o‎n‎g‎ ‎w‎a‎s‎ ‎l‎e‎f‎t‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎o‎u‎r‎s‎e‎;‎ ‎i‎t‎ ‎c‎a‎n‎ ‎b‎e‎ ‎s‎e‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎i‎c‎t‎u‎r‎e‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎f‎e‎n‎c‎e‎ ‎e‎r‎e‎c‎t‎e‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎t‎.‎ ‎T‎w‎o‎ ‎K‎o‎r‎e‎a‎n‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎d‎r‎e‎s‎s‎e‎d‎ ‎i‎n‎ ‎w‎h‎i‎t‎e‎ ‎c‎a‎n‎ ‎b‎e‎ ‎s‎e‎e‎n‎ ‎c‎a‎d‎d‎y‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎w‎o‎ ‎g‎o‎l‎f‎e‎r‎s‎.‎ ‎A‎ ‎s‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎ ‎m‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎p‎l‎a‎y‎e‎r‎s‎ ‎w‎h‎o‎ ‎u‎s‎e‎d‎ ‎t‎h‎e‎ ‎c‎o‎u‎r‎s‎e‎ ‎w‎e‎r‎e‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎.‎ ‎A‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎l‎i‎b‎e‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎K‎o‎r‎e‎a‎ ‎i‎n‎ ‎1‎9‎4‎5‎,‎ ‎t‎h‎e‎ ‎p‎a‎r‎k‎ ‎w‎a‎s‎ ‎t‎u‎r‎n‎e‎d‎ ‎i‎n‎t‎o‎ ‎a‎ ‎m‎e‎m‎o‎r‎i‎a‎l‎ ‎f‎o‎r‎ ‎K‎o‎r‎e‎a‎n‎ ‎i‎n‎d‎e‎p‎e‎n‎d‎e‎n‎c‎e‎ ‎a‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎w‎h‎o‎ ‎r‎e‎s‎i‎s‎t‎e‎d‎ ‎t‎h‎e‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎c‎o‎l‎o‎n‎i‎z‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎K‎o‎r‎e‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎u‎n‎k‎n‎o‎w‎n‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎I‎P‎ ‎M‎r‎.‎ ‎S‎q‎u‎i‎r‎l‎i‎e‎.‎ ‎Y‎o‎u‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎a‎v‎e‎n‎g‎e‎d‎!‎ ‎T‎o‎n‎i‎g‎h‎t‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎u‎n‎d‎e‎r‎ ‎m‎y‎ ‎n‎e‎i‎g‎h‎b‎o‎r‎'‎s‎ ‎s‎h‎e‎d‎,‎ ‎t‎h‎e‎n‎ ‎s‎t‎a‎b‎ ‎h‎i‎s‎ ‎d‎o‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎n‎e‎c‎k‎ ‎w‎h‎e‎n‎ ‎i‎t‎'‎s‎ ‎s‎l‎e‎e‎p‎i‎n‎g‎.‎"
0bSzkmaK,make_rgb,xdenisx,Python,Monday 13th of November 2023 07:58:48 AM CDT,"import sys
from osgeo import gdal, gdalconst
import os
import glob
from matplotlib import pyplot as plt
import re
import numpy as np
from sklearn import preprocessing as pre
from skimage import exposure

plt.rcParams[""figure.figsize""] = (20, 10)

def export_tiff(init_tiff, data, out_fname):
    '''
    Write geotiff file based on the existed one
    
    init_tiff: path to initial geotiff file
    data: input data matrix (nband, ny, nx)
    '''
    
    ds = gdal.Open(init_tiff)
    if len(data.shape) == 2:
        num_bands = 1
        [rows, cols] = data.shape
    else:
        num_bands = data.shape[-1]
        [rows, cols, num_bands] = data.shape
        
    driver = gdal.GetDriverByName(""GTiff"")
    outdata = driver.Create(out_fname, cols, rows, num_bands, gdalconst.GDT_Float32, options=['COMPRESS=LZW'])
    outdata.SetGeoTransform(ds.GetGeoTransform()) #sets same geotransform as input
    outdata.SetProjection(ds.GetProjection()) #sets same projection as input
    
    if num_bands>1:
        for iband in range(1,num_bands+1):
            outdata.GetRasterBand(iband).WriteArray(data[:,:,iband-1])
    else:
        outdata.GetRasterBand(1).WriteArray(data)
        
    outdata.GetRasterBand(1).SetNoDataValue(np.nan)
    outdata.FlushCache()
    outdata = None
    band=None
    ds=None

tiff_dir = '/data/rrs/seaice/aux_data/tests/rgb'
out_tiff_dir = '/data/rrs/seaice/aux_data/tests/rgb/composite'
os.makedirs(out_tiff_dir, exist_ok=True)

# Bands to generate composites from
bands = ['B2', 'B3', 'B4']

f_mask = f'{tiff_dir}/*.TIF'
ffiles=glob.glob(f_mask)

# Number of composite
id_composite = 0

# A dictonary with composites
d_composites= {}

repeat_band = 0

for ifile in ffiles:
    d_composites[id_composite] = {}
    for iband in bands:
        iifile = ifile.replace(bands[0], iband)
        for root, dirs, files in os.walk(tiff_dir, topdown = False):
            for name in files:
                if name == os.path.basename(iifile):
                    #print(os.path.join(root, name))
                    #if iband in d_composites[id_composite].keys():
                    #    repeat_band += 1
                    #    tmp_band = iband + str(repeat_band)
                    #    d_composites[id_composite][tmp_band] = os.path.join(root, name)
                    #else:
                    d_composites[id_composite][iband] = os.path.join(root, name)
        #repeat_band = 0
    id_composite += 1
    

# Go through a dictonary with composites and write tiff
for ikey in d_composites.keys():
    #print(d_composites[ikey].keys())
    
    bbands = d_composites[ikey].keys()
    
    ll = []
    
    for iband in d_composites[ikey]:
        idata = gdal.Open(d_composites[ikey][iband]).ReadAsArray()
        
        # Normilize
        idata = (idata-np.min(idata))/(np.max(idata)-np.min(idata))
        
        # Gamma adjust
        idata = exposure.adjust_gamma(idata, 2)
        
        if np.nanmean(idata)>0:
            ll.append(idata)
        else:
            break
    
    data = np.moveaxis(np.array(ll), 0, -1)
    out_tiff_name = f'''{out_tiff_dir}/{os.path.basename(d_composites[ikey][bands[0]]).replace(bands[0], 'rgb').replace('TIF', 'tiff')}'''
    # Write tiff
    export_tiff(d_composites[ikey][iband], data, out_tiff_name)
    del idata
"
vnXzYULM,CRUD TRANSACTIONS,jevonrama,PHP,Monday 13th of November 2023 07:53:36 AM CDT,"<--- templates/transactions/add.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Transaction $transaction
 * @var \Cake\Collection\CollectionInterface|string[] $users
 * @var \Cake\Collection\CollectionInterface|string[] $products
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('List Transactions'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""transactions form content"">
            <?= $this->Form->create($transaction) ?>
            <fieldset>
                <legend><?= __('Add Transaction') ?></legend>
                <?php
                    echo $this->Form->control('date_transaction');
                    echo $this->Form->control('amount_order');
                    echo $this->Form->control('amount_price');
                    echo $this->Form->control('user_id', ['options' => $users]);
                    echo $this->Form->control('product_id', ['options' => $products]);
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>

<--- templates/transactions/index.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var iterable<\App\Model\Entity\Transaction> $transactions
 */
?>
<div class=""transactions index content"">
    <?= $this->Html->link(__('New Transaction'), ['action' => 'add'], ['class' => 'button float-right']) ?>
    <h3><?= __('Transactions') ?></h3>
    <div class=""table-responsive"">
        <table>
            <thead>
                <tr>
                    <th><?= $this->Paginator->sort('id') ?></th>
                    <th><?= $this->Paginator->sort('date_transaction') ?></th>
                    <th><?= $this->Paginator->sort('amount_order') ?></th>
                    <th><?= $this->Paginator->sort('amount_price') ?></th>
                    <th><?= $this->Paginator->sort('user_id') ?></th>
                    <th><?= $this->Paginator->sort('product_id') ?></th>
                    <th class=""actions""><?= __('Actions') ?></th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($transactions as $transaction): ?>
                <tr>
                    <td><?= $this->Number->format($transaction->id) ?></td>
                    <td><?= h($transaction->date_transaction) ?></td>
                    <td><?= $this->Number->format($transaction->amount_order) ?></td>
                    <td><?= $this->Number->format($transaction->amount_price) ?></td>
                    <td><?= $transaction->has('user') ? $this->Html->link($transaction->user->name, ['controller' => 'Users', 'action' => 'view', $transaction->user->id]) : '' ?></td>
                    <td><?= $transaction->has('product') ? $this->Html->link($transaction->product->name, ['controller' => 'Products', 'action' => 'view', $transaction->product->id]) : '' ?></td>
                    <td class=""actions"">
                        <?= $this->Html->link(__('View'), ['action' => 'view', $transaction->id]) ?>
                        <?= $this->Html->link(__('Edit'), ['action' => 'edit', $transaction->id]) ?>
                        <?= $this->Form->postLink(__('Delete'), ['action' => 'delete', $transaction->id], ['confirm' => __('Are you sure you want to delete # {0}?', $transaction->id)]) ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>
    <div class=""paginator"">
        <ul class=""pagination"">
            <?= $this->Paginator->first('<< ' . __('first')) ?>
            <?= $this->Paginator->prev('< ' . __('previous')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('next') . ' >') ?>
            <?= $this->Paginator->last(__('last') . ' >>') ?>
        </ul>
        <p><?= $this->Paginator->counter(__('Page {{page}} of {{pages}}, showing {{current}} record(s) out of {{count}} total')) ?></p>
    </div>
</div>

<--- templates/transactions/edit.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Transaction $transaction
 * @var string[]|\Cake\Collection\CollectionInterface $users
 * @var string[]|\Cake\Collection\CollectionInterface $products
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Form->postLink(
                __('Delete'),
                ['action' => 'delete', $transaction->id],
                ['confirm' => __('Are you sure you want to delete # {0}?', $transaction->id), 'class' => 'side-nav-item']
            ) ?>
            <?= $this->Html->link(__('List Transactions'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""transactions form content"">
            <?= $this->Form->create($transaction) ?>
            <fieldset>
                <legend><?= __('Edit Transaction') ?></legend>
                <?php
                    echo $this->Form->control('date_transaction');
                    echo $this->Form->control('amount_order');
                    echo $this->Form->control('amount_price');
                    echo $this->Form->control('user_id', ['options' => $users]);
                    echo $this->Form->control('product_id', ['options' => $products]);
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit')) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>
    
<--- templates/transactions/view.php --->
<?php
/**
 * @var \App\View\AppView $this
 * @var \App\Model\Entity\Transaction $transaction
 */
?>
<div class=""row"">
    <aside class=""column"">
        <div class=""side-nav"">
            <h4 class=""heading""><?= __('Actions') ?></h4>
            <?= $this->Html->link(__('Edit Transaction'), ['action' => 'edit', $transaction->id], ['class' => 'side-nav-item']) ?>
            <?= $this->Form->postLink(__('Delete Transaction'), ['action' => 'delete', $transaction->id], ['confirm' => __('Are you sure you want to delete # {0}?', $transaction->id), 'class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('List Transactions'), ['action' => 'index'], ['class' => 'side-nav-item']) ?>
            <?= $this->Html->link(__('New Transaction'), ['action' => 'add'], ['class' => 'side-nav-item']) ?>
        </div>
    </aside>
    <div class=""column-responsive column-80"">
        <div class=""transactions view content"">
            <h3><?= h($transaction->id) ?></h3>
            <table>
                <tr>
                    <th><?= __('User') ?></th>
                    <td><?= $transaction->has('user') ? $this->Html->link($transaction->user->name, ['controller' => 'Users', 'action' => 'view', $transaction->user->id]) : '' ?></td>
                </tr>
                <tr>
                    <th><?= __('Product') ?></th>
                    <td><?= $transaction->has('product') ? $this->Html->link($transaction->product->name, ['controller' => 'Products', 'action' => 'view', $transaction->product->id]) : '' ?></td>
                </tr>
                <tr>
                    <th><?= __('Id') ?></th>
                    <td><?= $this->Number->format($transaction->id) ?></td>
                </tr>
                <tr>
                    <th><?= __('Amount Order') ?></th>
                    <td><?= $this->Number->format($transaction->amount_order) ?></td>
                </tr>
                <tr>
                    <th><?= __('Amount Price') ?></th>
                    <td><?= $this->Number->format($transaction->amount_price) ?></td>
                </tr>
                <tr>
                    <th><?= __('Date Transaction') ?></th>
                    <td><?= h($transaction->date_transaction) ?></td>
                </tr>
            </table>
        </div>
    </div>
</div>
"
Cst64KX8,Untitled,kingbode,Python,Monday 13th of November 2023 07:48:25 AM CDT,"# convert word to integer and vice versa
def word_to_int(word):
    x = [ord(i) for i in word]
    print(f'letter of {word} are represented as a list of integers as below:\n{x}')
    result = 0

    for i in x:
        # keep each number in the same order
        result = result * 1000 + i

    return result
def int_to_word(num):
    word = ''
    while num > 0:
        word = chr(num % 1000) + word
        num //= 1000
    return word



result = word_to_int('Mohammed')
print(result)

result = int_to_word(result)
print(result)"
