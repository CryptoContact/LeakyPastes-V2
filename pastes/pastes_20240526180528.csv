id,title,username,language,date,content
39zpTJ9t,unreal snowybot powerful,coinwalk,JavaScript,Sunday 26th of May 2024 12:57:31 PM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var crust = (prefit/2)
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var fours = (prefit*4);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = 0;
var great = elderly;
var snot = elderly;
var nomnom = true;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(great<(snowie-crust)))||((great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))&&(great>(snowie+crust)))){
    beast = beast*2;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = 0;
    snot = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>snowy){
    snowy = ((Math.floor(great/tens))*tens);
    }
if (great>snot){
    snot = parseFloat(great);
    }
if ((beast>fours)&&(great>=snot)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowie = 0;
    snot = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if ((beast>fours)&&(great>=snot)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowie = 0;
    snot = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*3)))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    snowie = 0;
    snot = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*3)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowie = 0;
    snot = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*3)))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    snot = parseFloat(great);
    snowie = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1);
}
go();"
kH2VpUXj,asp,Aleksandarmil,C,Sunday 26th of May 2024 12:57:11 PM CDT,"#include <stdio.h>
#include <stdlib.h>

#define _CRT_SECURE_NO_WARNINGS
#define ii 4
#define jj 2

void kreirajStrukturu();
void dodajCvor();
void ukloniCvor();
void dodajGranu();
void ukloniGranu();
void ispisReprenzentacije();
void obrisiGraf();
void gustinaGrafa();
void geodezijskaDistancaCvorova();
void centralnostCvoraPoBliskosti();
void ostaleFunkcije();
void isprazniKonzolu();

typedef struct graf
{
	int brojCvorova;
	int* edges;
	int* indices;
}Graf;

void isprazniKonzolu()
{
	system(""cls"");
}

void obrisiGraf(Graf* G)
{
	printf(""%p\n"", G);
	//printf(""%d"", G->brojCvorova);

	if (G == NULL);
	{
		printf(""G je NULL                          obrisi\n"");
		system(""pause"");

		return;
	}

	if (G->indices && G->edges)
	{
		free(G->indices);
		free(G->edges);
	}

	free(G);

	printf(""Graf je obrisan iz memorije"");

	system(""pause"");

	return;
}

void dodajCvor(Graf* G)
{

	return;
}
void kreirajStrukturu(Graf* G)
{
	printf(""%p\n"", G);

	if (G != NULL)
	{
		printf(""Ovde nije null                kreirajStrukturu\n"");
	}
	//isprazniKonzolu();
	int n;

	printf(""Unesite broj cvorova grafa:\n"");

	scanf(""%d"", &n);

	if (n < 0)
	{
		printf(""Nevalidan unos\n"");
	}

	G->brojCvorova = n;

	G->indices = (int*)malloc((G->brojCvorova + 1) * (sizeof(int)));
	memset(G->indices, 0, (G->brojCvorova + 1) * sizeof(int));

	G->edges = (int*)malloc(0 * sizeof(int));

	printf(""\n Napravljen je graf sa %d cvorova, bez grana.\n"", G->brojCvorova);

	system(""pause"");
}

void ukloniCvor() { return; }
void dodajGranu() { return; }

void ukloniGranu() { return; }

void ispisReprenzentacije(Graf* G)
{
	isprazniKonzolu();

	printf(""Graf ima %d cvorova\n"", G->brojCvorova);

	printf(""indices: "");

	for (int i = 0; i < G->brojCvorova + 1; i++)
	{
		printf(""%d "", G->indices[i]);
	}

	system(""pause"");
}

void gustinaGrafa() { return; }
void geodezijskaDistancaCvorova() { return; }
void centralnostCvoraPoBliskosti() { return; }
void ostaleFunkcije() { return; }

void glavniMeni()
{
	int running = 1;
	Graf* G = (Graf*)malloc(sizeof(Graf));
	printf(""%p\n"", G);
	if (!G)
	{
		printf(""MEM_GRESKA"");
		return;
	}
	else
	{
		printf(""G nije NULL                   main\n"");
	}

	while (running)
	{
		isprazniKonzolu();

		int opt;

		printf(""1 - Kreiranje prazne strukture podataka\n"");
		printf(""2 - Dodavanje cvora\n"");
		printf(""3 - Uklanjanje cvora\n"");
		printf(""4 - Dovdavanje grane izmedju dva cvora\n"");
		printf(""5 - Uklanjanje grane izmedju dva cvora\n"");
		printf(""6 - Ispis reprenzentacije grafa\n"");
		printf(""7 - Brisanje grafa iz memorije\n"");
		printf(""8 - Gustina grafa\n"");
		printf(""9 - Geodezijska distanca cvorova\n"");
		printf(""10 - Centralnost cvora po bliskosti\n"");
		printf(""11 - Jos\n"");
		printf(""12 - Zavrsi\n"");

		scanf(""%d"", &opt);

		switch (opt)
		{
		case 1:
			obrisiGraf(G);
			//G = (Graf*)malloc(sizeof(Graf));
			kreirajStrukturu(G);
			break;
		case 2:
			dodajCvor(G);
			break;
		case 3:
			ukloniCvor();
			break;
		case 4:
			dodajGranu();
			break;
		case 5:
			ukloniGranu();
			break;
		case 6:
			ispisReprenzentacije(G);
			break;
		case 7:
			obrisiGraf(G);
			break;
		case 8:
			gustinaGrafa();
			break;
		case 9:
			geodezijskaDistancaCvorova();
			break;
		case 10:
			centralnostCvoraPoBliskosti();
			break;
		case 11:
			ostaleFunkcije();
			break;
		case 12:
			running = 0;
			break;
		default:
			printf(""    Izabrali ste nepostojecu opciju. Molim pokusajte ponovo...\n"");
			system(""pause"");
			break;
		}
	}
}

int main()
{
	glavniMeni();

	return 0;
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file"
VLaQQMAK,Display the custom checkout field,DeniGD,PHP,Sunday 26th of May 2024 12:45:58 PM CDT,"// Custom function that handle your settings
function carrier_settings(){
    return array(
        'targeted_methods' => array('flat_rate:3'), // Your targeted shipping method(s) in this array
        'field_id'         => 'carrier_name', // Field Id
        'field_type'       => 'select', // Field type
        'field_label'      => '', // Leave empty value if the first option has a text (see below).
        'label_name'       => __(""Куриерска фирма"",""woocommerce""), // for validation and as meta key for orders
        'field_options'    => array(
             // The option displayed at first ( or keep an empty value '',)
            __(""Изберете фирма на куриер"", ""woocommerce""),
            // The carrier companies below (one by line)
            'До офис на Спиди',
			'До адрес със Спиди',
            'До офис на Еконт',     
            'До адрес със Еконт',
        ),
    );
}

// Display the custom checkout field
add_action( 'woocommerce_after_shipping_rate', 'carrier_company_custom_select_field', 20, 2 );
function carrier_company_custom_select_field( $method, $index ) {
    extract( carrier_settings() ); // Load settings and convert them in variables

    $chosen  = WC()->session->get('chosen_shipping_methods'); // The chosen methods
    $value   = WC()->session->get($field_id);
    $value   = WC()->session->__isset($field_id) ? $value : WC()->checkout->get_value('_'.$field_id);
    $options = array(); // Initializing

    if( ! empty($chosen) && $method->id === $chosen[$index] && in_array($method->id, $targeted_methods)  ) {
        echo '<div class=""custom-carrier"">';

        // Loop through field otions to add the correct keys
        foreach( $field_options as $key => $option_value ) {
            $option_key = $key == 0 ? '' : $key;
            $options[$option_key] = $option_value;
        }

        woocommerce_form_field( $field_id, array(
            'type'     => $field_type,
            'label'    => '', // Not required if the first option has a text.
            'class'    => array('form-row-wide ' . $field_id . '-' . $field_type ),
            'required' => true,
            'options'  => $options,
        ), $value );

        echo '</div>';
    }
}

// jQuery code (client side) - Ajax sender 
add_action( 'wp_footer', 'carrier_company_script_js' );
function carrier_company_script_js() {
    // Only cart & checkout pages
    if( is_cart() || ( is_checkout() && ! is_wc_endpoint_url() ) ):

    // Load settings and convert them in variables
    extract( carrier_settings() );

    $js_variable = is_cart() ? 'wc_cart_params' : 'wc_checkout_params';

    // jQuery Ajax code
    ?>
    <script type=""text/javascript"">
    jQuery( function($){
        if (typeof <?php echo $js_variable; ?> === 'undefined')
            return false;

        $(document.body).on( 'change', 'select#<?php echo $field_id; ?>', function(){
            var value = $(this).val();
            $.ajax({
                type: 'POST',
                url: <?php echo $js_variable; ?>.ajax_url,
                data: {
                    'action': 'carrier_name',
                    'value': value
                },
                success: function (result) {
                    console.log(result); // Only for testing (to be removed)
                }
            });
        });
    });
    </script>
    <?php
    endif;
}

// The Wordpress Ajax PHP receiver
add_action( 'wp_ajax_carrier_name', 'set_carrier_company_name' );
add_action( 'wp_ajax_nopriv_carrier_name', 'set_carrier_company_name' );
function set_carrier_company_name() {
    if ( isset($_POST['value']) ){
        // Load settings and convert them in variables
        extract( carrier_settings() );

        if( empty($_POST['value']) ) {
            $value = 0;
            $label = 'Empty';
        } else {
            $value = $label = esc_attr( $_POST['value'] );
        }

        // Update session variable
        WC()->session->set( $field_id, $value );

        // Send back the data to javascript (json encoded)
        echo $label . ' | ' . $field_options[$value];
        die();
    }
}

// Conditional function for validation
function has_carrier_field(){
    $settings = carrier_settings();
    return array_intersect(WC()->session->get( 'chosen_shipping_methods' ), $settings['targeted_methods']);
}

// Validate the custom selection field
add_action('woocommerce_checkout_process', 'carrier_company_checkout_validation');
function carrier_company_checkout_validation() {
    // Load settings and convert them in variables
    extract( carrier_settings() );

    if( has_carrier_field() && isset( $_POST[$field_id] ) && empty( $_POST[$field_id] ) )
        wc_add_notice(
            sprintf( __(""Моля изберете %s тъй като е задължително поле."",""woocommerce""),
            '<strong>' . $label_name . '</strong>'
        ), ""error"" );
}

// Save custom field as order meta data
add_action( 'woocommerce_checkout_create_order', 'save_carrier_company_as_order_meta', 30, 1 );
function save_carrier_company_as_order_meta( $order ) {
    // Load settings and convert them in variables
    extract( carrier_settings() );

    if( has_carrier_field() && isset( $_POST[$field_id] ) && ! empty( $_POST[$field_id] ) ) {
        $order->update_meta_data( '_'.$field_id, $field_options[esc_attr($_POST[$field_id])] );
        WC()->session->__unset( $field_id ); // remove session variable
    }
}

// Display custom field in admin order pages
add_action( 'woocommerce_admin_order_data_after_shipping_address', 'admin_order_display_carrier_company', 30, 1 );
function admin_order_display_carrier_company( $order ) {
    // Load settings and convert them in variables
    extract( carrier_settings() );

    $carrier = $order->get_meta( '_'.$field_id ); // Get carrier company

    if( ! empty($carrier) ) {
        // Display
        echo '<p><strong>' . $label_name . '</strong>: ' . $carrier . '</p>';
    }
}

// Display carrier company after shipping line everywhere (orders and emails)
add_filter( 'woocommerce_get_order_item_totals', 'display_carrier_company_on_order_item_totals', 1000, 3 );
function display_carrier_company_on_order_item_totals( $total_rows, $order, $tax_display ){
    // Load settings and convert them in variables
    extract( carrier_settings() );

    $carrier = $order->get_meta( '_'.$field_id ); // Get carrier company

    if( ! empty($carrier) ) {
        $new_total_rows = [];

        // Loop through order total rows
        foreach( $total_rows as $key => $values ) {
            $new_total_rows[$key] = $values;
            
            // Inserting the carrier company under shipping method
            if( $key === 'shipping' ) {
                $new_total_rows[$field_id] = array(
                    'label' => $label_name,
                    'value' => $carrier,
                );
            }
        }
        return $new_total_rows;
    }
    return $total_rows;
}

"
JvGp5Ts7,stairs.lua,Cwackers,Lua,Sunday 26th of May 2024 12:43:09 PM CDT,"-- Cloned
-- Digs a staircase around a quarry
-- Run ""stairs help""
-- Or dig a staircase to bedrock
-- Run ""stairs""
-- <Flexico64@gmail.com>
-- Please email me if you have any
-- bugs or suggestions!

-----------------------------------
--  /¯\  || ||  /\  |¯\ |¯\ \\// --
-- | O | ||_|| |  | | / | /  \/  --
--  \_\\  \__| |||| | \ | \  ||  --
-----------------------------------
-- /¯¯\ [¯¯]  /\  [¯¯] |¯\ /¯¯\  --
-- \_¯\  ||  |  |  ][  | / \_¯\  --
-- \__/  ||  |||| [__] | \ \__/  --
-----------------------------------

-- Names of tools
local name_torch = {
   ""torch"", ""lantern"", ""lamp"", ""light"" }
local name_bench = {
   ""minecraft:crafting_table"",
   ""forge:workbench"" }
local name_chest = { ""chest"" }
local name_box = {
   ""shulker_box"", ""travelersbackpack"" }

-- Stair blocks crafting material
local name_cobble = {
  ""minecraft:cobblestone"",
  ""forge:cobblestone"" }


-- Side that swaps with crafting bench
local tool_side = ""none""
if not peripheral.find(""workbench"") then
 tool_side = ""left""
 if peripheral.getType(""left"") == ""modem"" then
  tool_side = ""right""
 end --if
end --if


-- Load APIs
os.loadAPI(""flex.lua"")
os.loadAPI(""dig.lua"")
dig.setFuelSlot(1)
dig.setBlockSlot(2)
dig.setBlockStacks(4)


function dump()
 local slot = turtle.getSelectedSlot()
 local keepers = { name_cobble, name_box,
    name_torch, name_bench, name_chest,
    ""stairs"" }
 local x,a = 0,false
 
 for x=1,16 do
  if flex.isItem(name_box,x) then
   turtle.select(x)
   a = turtle.placeUp()
   break
  end --if
 end --for
 
 if not a then
  keepers[#keepers+1] = ""diamond""
  keepers[#keepers+1] = ""ancient_debris""
 end --if
 
 local blocksPresent = dig.getBlockStacks()
 for x=4,16 do
  if not flex.isItem(keepers,x) then
   if dig.isDumpItem(x) then
    if blocksPresent <= 0 then
     turtle.drop()
    else
     blocksPresent = blocksPresent - 1
    end --if/else
   else
    turtle.select(x)
    if a then
     turtle.dropUp()
    else
     turtle.drop()
    end --if/else
   end --if/else
  end --if
 end --for
 
 turtle.select(slot)
 if a then turtle.digUp() end
 dig.checkBlocks()
 flex.condense()
end --function



-- Program parameter(s)
local args={...}

-- Tutorial, kind of
if #args > 0 and args[1] == ""help"" then
 flex.printColors(""Place just to the ""..
   ""left of a turtle quarrying the same ""..
   ""dimensions."",colors.lightBlue)
 flex.printColors(""Include a crafting ""..
   ""table and a chest in turtle's ""..
   ""inventory to auto-craft a staircase"",
   colors.yellow)
 flex.printColors(""Usage: stairs ""..
   ""[length] [width] [depth]"",colors.pink)
 return
end --if


-- What Goes Where
flex.printColors(""Slot 1: Fuel\n""..
  ""Slot 2: Blocks\nSlot 3: Torches\n""..
  ""Anywhere: Crafting Bench, Chest\n""..
  ""Optional: Shulker Box / Backpack"",
  colors.lightBlue)
flex.printColors(""Press Enter"",
  colors.pink)
while flex.getKey() ~= keys.enter do
 sleep(0.1)
end --while


-- Convert Inputs
local dx,dy,dz,n,x,y,z
local height = 5
dz = tonumber(args[1]) or 256
dx = tonumber(args[2]) or dz
dy = tonumber(args[3]) or 256
-- -1 to match Quarry depth


--------------------------------------
-- |¯\ [¯¯] /¯¯] /¯¯][¯¯]|\ || /¯¯] --
-- |  | ][ | [¯|| [¯| ][ | \ || [¯| --
-- |_/ [__] \__| \__|[__]|| \| \__| --
--------------------------------------

flex.send(""Digging staircase..."",
  colors.yellow)

-- Staircase Digging Functions

local torchNum = 9

function placeTorch()
 turtle.select(3)
 if flex.isItem(name_torch) then
  
  if not turtle.place() then
   if not dig.fwd() then return false end
   turtle.select(2)
   dig.place()
   if not dig.back() then return false end
   
   turtle.select(3)
   if not dig.place() then
    if not dig.fwd() then return false end
    turtle.select(2)
    dig.placeUp()
    if not dig.back() then return false end
    turtle.select(3)
    dig.place()
   end --if/else
  end --if
 end --if
 
 turtle.select(2)
end --function


function stepDown()
 local x
 
 turtle.select(2)
 dig.right()
 for x=1,height-2 do
  dig.blockLava()
  if not dig.up() then return false end
 end --for
 dig.blockLava()
 dig.blockLavaUp()
 
 dig.left()
 dig.blockLava()
 dig.left()
 if not dig.fwd() then return false end
 dig.blockLavaUp()
 dig.blockLava()
 dig.right()
 dig.blockLava()
 dig.left()
 
 if torchNum >= 3 then
  if not dig.back() then return false end
  placeTorch()
  if not dig.down() then return false end
  if not dig.fwd() then return false end
  torchNum = 0
 else
  dig.blockLava()
  if not dig.down() then return false end
  torchNum = torchNum + 1
 end --if/else
 
 for x=1,height-2 do
  dig.blockLava()
  if not dig.down() then return false end
 end --for
 dig.blockLava()
 if not dig.placeDown() then return false end
 
 dig.right(2)
 if not dig.fwd() then return false end
 dig.blockLava()
 if not dig.placeDown() then return false end
 dig.left()
 
 if turtle.getItemCount(16) > 0 then
  dig.left()
  dump()
  dig.right()
 end --if/else
 
 if not dig.fwd() then return false end
 
 return true
end --function


local function turnRight()
 turtle.select(2)
 dig.right()
 if not dig.up(height-2) then return false end
 dig.blockLavaUp()
 
 dig.left()
 if not dig.down() then return false end
 if not dig.fwd() then return false end
 dig.blockLavaUp()
 for x=1,height-3 do
  dig.blockLava()
  if not dig.down() then return false end
 end --for
 dig.blockLava()
 if not dig.placeDown() then return false end
 
 dig.left()
 if not dig.fwd() then return false end
 for x=1,height-3 do
  dig.blockLava()
  if not dig.up() then return false end
 end --for
 dig.blockLava()
 dig.blockLavaUp()
 
 dig.right()
 for x=1,height-3 do
  dig.blockLava()
  if not dig.down() then return false end
 end --for
 dig.blockLava()
 if not dig.placeDown() then return false end
 
 dig.left(2)
 if not dig.fwd() then return false end
 dig.right()
 if not dig.placeDown() then return false end
 for x=1,height-2 do
  dig.blockLava()
  if not dig.up() then return false end
 end --for
 dig.blockLava()
 dig.blockLavaUp()
 
 dig.right(2)
 if not dig.fwd() then return false end
 if not dig.down(height-1) then return false end
 if not dig.placeDown() then return false end
 dig.left()
 if not dig.fwd() then return false end
 dig.blockLava()
 if not dig.placeDown() then return false end
 if not dig.back() then return false end
 dig.right()
 if not dig.fwd() then return false end
 
 torchNum = torchNum + 1
 return true
end --function


function endcap(h,stop)
 stop = ( stop ~= nil )
 h = h or 0 -- Height to dig layer
 local x
 
 dig.right()
 if not dig.placeDown() then return false end
 dig.checkBlocks()
 for x=1,height-2-h do
  dig.blockLava()
  if not dig.up() then return false end
 end --for
 dig.blockLava()
 dig.blockLavaUp()
 
 dig.left(2)
 if not dig.fwd() then return false end
 dig.blockLavaUp()
 for x=1,height-2-h do
  dig.blockLava()
  if not dig.down() then return false end
 end --for
 dig.blockLava()
 if not dig.placeDown() then return false end
 dig.checkBlocks()
 if not dig.back() then return false end
 
 dig.right()
 
 if stop then
  dig.blockLava()
  for x=1,height-2-h do
   if not dig.up() then return false end
   dig.blockLava()
  end --for
  dig.blockLavaUp()
  dig.left()
  
  if not dig.fwd() then return false end
  dig.blockLavaUp()
  dig.right()
  dig.blockLava()
  for x=1,height-2-h do
   if not dig.down() then return false end
   dig.blockLava()
  end --for
  
  dig.left()
  if not dig.back() then return false end
  dig.right()
  
 end --if
 
 return true
end --function



local direction

function avoidBedrock()
 if dig.isStuck() then
  -- Hit Bedrock/Void
  if dig.getStuckDir() == ""fwd"" then
   dig.up()
   dig.placeDown()
   dig.checkBlocks()
   dig.setymin(dig.gety())
   dig.fwd()
  elseif dig.getStuckDir() == ""down"" then
   dig.setymin(dig.gety())
  end --if
 end --if
 
 -- Get X and Z on the inner stair block
 if dig.getx() >= dx+2 then
  dig.gotox(dx+1)
  
 elseif dig.getx() <= -1 then
  dig.gotox(0)
  
 end --if/else
 
 if dig.getz() >= dz+1 then
  dig.gotoz(dz)
  
 elseif dig.getz() <= -2 then
  dig.gotoz(-1)
  
 end --if/else
 
 dig.gotor(direction)
 dig.gotoy(dig.getymin())
end --function



-- Start Digging

turtle.select(2)

x = 0
direction = dig.getr()
while true do
 
 for n=0,dz-1 do
  if not stepDown() then break end
  x = x + 1
  if x >= dy then break end
 end
 if dig.isStuck() or x >= dy then break end
 if not turnRight() then break end
 x = x + 1
 
 direction = dig.getr()
 for n=0,dx-1 do
  if not stepDown() then break end
  x = x + 1
  if x >= dy then break end
 end
 if dig.isStuck() or x >= dy then break end
 if not turnRight() then break end
 x = x + 1
 
 direction = dig.getr()
end

avoidBedrock()
if not dig.fwd() then avoidBedrock() end
if not endcap(1) then avoidBedrock() end
if not dig.fwd() then avoidBedrock() end
if not endcap(1,true) then avoidBedrock() end

dig.left(2)
while not turtle.detect() do
 dig.fwd()
end --while
dig.back()

-- This bit compensates for random Bedrock (mostly)
if #dig.getKnownBedrock() > 0 then
 for x=1,4 do
  dig.placeDown()
  dig.right()
  dig.fwd()
 end --for
end --for



----------------------------------------------
--  /¯] |¯\  /\  |¯¯] [¯¯] [¯¯] |\ ||  /¯¯] --
-- | [  | / |  | | ]   ||   ][  | \ | | [¯| --
--  \_] | \ |||| ||    ||  [__] || \|  \__| --
----------------------------------------------

-- Return locations of bench/chest
local function checkTools()
 local bench,chest = 0,0
 local x
 for x=1,16 do
  turtle.select(x)
  if flex.isItem(name_bench) then
   bench = x
  elseif flex.isItem(name_chest) then
   chest = x
  end --if/else
 end --for
 return bench,chest
end --function


local oldTool
local success = true

local function equip()
 if tool_side == ""right"" then
  return turtle.equipRight()
 elseif tool_side == ""left"" then
  return turtle.equipLeft()
 end --if/else
end --function


-- Equip Crafting Bench
local function setTool()
 if tool_side == ""none"" then return end
 
 flex.condense()
 local x,y = checkTools()
 
 if x == 0 then
  flex.send(""Crafting Bench not found"",
    colors.red)
  success = false
  return false
 end --if
 
 turtle.select(x)
 y = turtle.getItemCount()
 if y > 1 then
  turtle.transferTo(math.min(
    x+1,16),y-1)
 end --if
 
 if not equip() then
  return false
 end --if
 
 if turtle.getItemCount() > 0 then
  oldTool = turtle.getItemDetail()[""name""]
 end --if
 
 flex.send(""Crafting Bench equipped"",
   colors.yellow)
 return true
end --function setTool()


-- Unequip Crafting Bench
local function restoreTool()
 if tool_side == ""none"" then return end
 
 flex.condense()
 local slot = turtle.getSelectedSlot()
 local x,y
 for x=1,16 do
  turtle.select(x)
  y = turtle.getItemCount()
  
  if oldTool == nil then
   -- If no tool, put Bench in empty slot
   if y == 0 then
    return equip()
   end --if
   
  else
   if y > 0 then
    if turtle.getItemDetail()[""name""]
       == oldTool then
     if equip() then
	     flex.send(""Tool restored"",
	       colors.lightBlue)
	     turtle.select(slot)
      return true
     end --if
    end --if
   end --if
  end --if
 end --for
 
 flex.send(""Unable to restore tool"",
   colors.red)
 success = false
 return false
end --function restoreTool()


local depth = -dig.gety()
local bench, chest = checkTools()
local stairsNeeded = depth*2
local craftNum

-- Count existing stair blocks
local numStairs = 0
for x=1,16 do
 turtle.select(x)
 y = turtle.getItemCount()
 if y > 0 then
  if flex.isItem(""stairs"") then
   numStairs = numStairs + y
  end --if
 end --if
end --for

-- Count Cobblestone
local numCobble = 0
for x=1,16 do
 turtle.select(x)
 if flex.isItem(name_cobble) then
  numCobble = numCobble + turtle.getItemCount()
 end --if
end --for
turtle.select(1)

craftNum = math.ceil((stairsNeeded-numStairs)/4)


-- Check against cobble needed
if numCobble < craftNum*6
   or stairsNeeded > 64*4 then
 
 x = math.floor(numCobble/6)
 x = math.min(x,64)
 y = math.ceil(stairsNeeded/4)
 z = math.floor(100*x/y)
 
 flex.send(""#1Only enough cobblestone ""
   ..""to craft #4""..tostring(z)
   ..""#0%#1 of stairs"")
 success = false
 
 craftNum = x
end --if

if craftNum < 0 then
 craftNum = 0
end --if



-- If Crafting needs to (and can) happen
if craftNum > 0 and chest > 0 and
   ( bench > 0 or tool_side == ""none"" ) then
 
 local stairSlots = {1,5,6,9,10,11}
 local freeSlots = {2,3,4,7,8,12,13,14,15,16}
 
 -- Equip Crafing Banch and place Chest
 setTool()
 turtle.select(chest)
 turtle.place()
 
 -- Everything except Cobble into Chest
 for x=1,16 do
  turtle.select(x)
  if turtle.getItemCount() > 0 then
   if not flex.isItem(name_cobble)
      or flex.isItem(""stairs"") then
    turtle.drop()
   end --if
  end --if
 end --for
 flex.condense()
 
 -- Collect Cobble to Craft
 for x=1,11 do
  turtle.select(x)
  if x <= 5 then
   turtle.transferTo(x+11)
  elseif x == 6 then
   turtle.transferTo(4)
  elseif x == 7 then
   turtle.transferTo(8)
  else
   turtle.drop()
  end --if/else
  if turtle.getItemCount() > 0 then
   turtle.drop()
  end --if
 end --for
 
 -- Arrange Cobble into Recipe
 z = 16
 for x=1,#stairSlots do
  turtle.select(z)
  while turtle.getItemCount() < craftNum do
   if z > 12 then
    z = z-1
   else
    z = z-4
   end --if
   if z < 1 then break end
   turtle.select(z)
  end --while
  if z < 1 then break end
  turtle.select(z)
  turtle.transferTo(stairSlots[x],
    craftNum)
 end --for
 
 -- Drop excess cobble into chest
 for x=1,#freeSlots do
  turtle.select(freeSlots[x])
  turtle.drop()
 end --for
 
 -- Main Event! Craft Function! =D
 local cb = peripheral.wrap(""left"") or
            peripheral.wrap(""right"")
 if cb.craft(craftNum) then
  flex.send(""Stairs crafted"",colors.lightBlue)
 else
  flex.send(""Crafting error"",colors.red)
  success = false
 end --if
 
 -- Restore inventory in correct order
 for x=1,16 do
  turtle.select(x)
  turtle.drop()
 end --for
 turtle.select(1)
 while turtle.suck() do end
 restoreTool()
 turtle.dig()
 flex.condense()
 
end --if (crafting needed)





-----------------------------------------------
-- |¯\ || || [¯¯] ||   |¯\  [¯¯] |\ ||  /¯¯] --
-- | < ||_||  ][  ||_  |  |  ][  | \ | | [¯| --
-- |_/  \__| [__] |__] |_/  [__] || \|  \__| --
-----------------------------------------------


local function placeStairs()
 local x,y,z,slot
 slot = turtle.getSelectedSlot()
 y = turtle.getItemCount()
 z = true
 
 if y < 2 or not flex.isItem(""stairs"") then
  for x=1,16 do
   turtle.select(x)
   y = turtle.getItemCount()
   if y >= 2 and flex.isItem(""stairs"") then
    z = false
    break
   end --if
  end --for
  
  if z then
   turtle.select(slot)
   return false
  end --if
 end --if
 
 dig.placeDown()
 dig.right()
 dig.fwd()
 dig.left()
 dig.placeDown()
 dig.left()
 dig.fwd()
 dig.right()
end --function


flex.send(""Returning to surface"",
  colors.yellow)

function isDone()
 -- Reached Surface
 return dig.gety() >= 0
end

-- Follow the Spiral [and place Stairs]
while not isDone() do

 if dig.getr()%360 == 0 then
  while dig.getz() < dig.getzmax()-1 do
   dig.fwd()
   dig.up()
   placeStairs()
   if isDone() then break end
  end --while
  
 elseif dig.getr()%360 == 90 then
  while dig.getx() < dig.getxmax()-1 do
   dig.fwd()
   dig.up()
   placeStairs()
   if isDone() then break end
  end --while
  
 elseif dig.getr()%360 == 180 then
  while dig.getz() > dig.getzmin()+1 do
   dig.fwd()
   dig.up()
   placeStairs()
   if dig.gety() > -4 and dig.getz()
      == dig.getzmin()+1 then
    -- Up at the top
    dig.fwd()
    dig.up()
    placeStairs()
   end --if
   if isDone() then break end
  end --while
  
 elseif dig.getr()%360 == 270 then
  while dig.getx() > dig.getxmin()+1 do
   dig.fwd()
   dig.up()
   placeStairs()
   if isDone() then break end
  end --while
  
 end --if/else
 
 if not isDone() then dig.left() end
 
end --while


-- All Done!
turtle.select(1)
dig.goto(0,0,0,0)

if success then
 flex.send(""Stairway finished!"",
   colors.lightBlue)
else
 flex.send(""Reached Origin"",
   colors.lightBlue)
end --if

flex.modemOff()
os.unloadAPI(""dig.lua"")
os.unloadAPI(""flex.lua"")
"
UHsLqCqU,quarry.lua,Cwackers,Lua,Sunday 26th of May 2024 12:42:59 PM CDT,"-- Cloned
-- This is a replacement for the
-- 'excavate' program, as it can re-
-- cover from a reboot/unload event.
-- Also avoids destroying spawners!
-- <Flexico64@gmail.com>
-- Please email me if you have any
-- bugs or suggestions!

-----------------------------------
-- [¯¯] || || |¯\ [¯¯] ||   |¯¯] --
--  ||  ||_|| | /  ||  ||_  | ]  --
--  ||   \__| | \  ||  |__] |__] --
-----------------------------------
--  /¯\  || ||  /\  |¯\ |¯\ \\// --
-- | O | ||_|| |  | | / | /  \/  --
--  \_\\  \__| |||| | \ | \  ||  --
-----------------------------------

os.loadAPI(""flex.lua"")
os.loadAPI(""dig.lua"")
dig.doBlacklist() -- Avoid Protected Blocks
dig.doAttack() -- Attack entities that block the way
dig.setFuelSlot(1)
dig.setBlockSlot(2)
local world_height = 384


local args = {...}
if #args == 0 then
 flex.printColors(
   ""quarry <length> [width] [depth]\n""..
   ""[skip <layers>] [dump] [nolava] [nether]"",
   colors.lightBlue)
 return
end --if


local reloaded = false
if dig.saveExists() then
 reloaded = true
 dig.loadCoords()
end --if
dig.makeStartup(""quarry"",args)


local zmax = tonumber(args[1])
local xmax = tonumber(args[2]) or zmax
local depth = world_height-1
if tonumber(args[2]) ~= nil then
 depth = tonumber(args[3]) or depth
end --if
local ymin = -depth --(1-depth)

if xmax == nil or zmax == nil then
 flex.send(""Invalid dimensions,"",colors.red)
 shell.run(""rm startup.lua"")
 return
end --if


local x
local skip = 0
local lava = true
local dodumps = false

for x=1,#args do
 
 if args[x] == ""dump"" then
  dodumps = true
 elseif args[x] == ""nolava"" then
  lava = false
 elseif args[x] == ""nether"" then
  dig.setBlockStacks(4)
 end --if
 
 if args[x] == ""skip"" then
  skip = tonumber(args[x+1])
  if skip == nil then
   flex.printColors(""Please specify skip depth"",
     colors.red)
   dig.saveClear()
   return
  end --if
  if dig.getymin() > -skip then
   dig.setymin(-skip)
  end --if
 end --if
 
end --for


if not lava then -- Block lava around edges of quarry
 dig.setBlockSlot(0)
 -- Always keep a stack of blocks
end --if




----------------------------------------------
-- |¯¯]|| |||\ || /¯][¯¯][¯¯] /¯\ |\ ||/¯¯\ --
-- | ] ||_||| \ || [  ||  ][ | O || \ |\_¯\ --
-- ||   \__||| \| \_] || [__] \_/ || \|\__/ --
----------------------------------------------

local location
local function gotoBase()
 local x = dig.getxlast()
 location = dig.location()
 if dig.gety() < -skip then dig.up() end
 dig.gotox(0)
 dig.gotoz(0)
 dig.gotor(180)
 dig.gotoy(0)
 dig.gotox(0)
 dig.setxlast(x)
 dig.gotoz(0)
 dig.gotor(180)
 return location
end --function

local function returnFromBase(loc)
 local loc = loc or location
 local x = dig.getxlast()
 dig.gotor(0)
 checkFuel()
 dig.gotoy(math.min(loc[2]+1,-skip))
 checkFuel()
 dig.gotoz(loc[3])
 checkFuel()
 dig.gotox(loc[1])
 dig.setxlast(x) -- Important for restoring
 checkFuel()
 dig.gotor(loc[4])
 checkFuel()
 dig.gotoy(loc[2])
end --function



local function checkHalt()
 if not rs.getInput(""top"") then
  return
 end --if
 if dig.gety() == 0 then
  return
 end --if
 
 local loc,x
 -- Manual halt; redstone signal from above
 flex.send(""Manual halt initiated"", colors.orange)
 flex.printColors(""Press ENTER to resume mining\n""
   ..""or SPACE to return to base"",
   colors.pink)
 
 while true do
  x = flex.getKey()
  if x == keys.enter then return end
  if x == keys.space then break end
 end --while
 
 flex.send(""Returning to base"", colors.yellow)
 loc = gotoBase()
 print("" "")
 flex.printColors(""Press ENTER to resume mining"",
   colors.pink)
 while flex.getKey() ~= keys.enter do
  sleep(1)
 end --while
 
 if dodumps then dig.doDumpDown() end
 dig.dropNotFuel()
 flex.send(""Resuming quarry"",colors.yellow)
 returnFromBase(loc)
 
end --function



local function checkInv()
 if turtle.getItemCount(16) > 0 then
  
  if dodumps then
   dig.right(2)
   dig.doDump()
   dig.left(2)
  end --if
  
  if turtle.getItemCount(14) > 0 then
   local loc = gotoBase()
   dig.dropNotFuel()
   returnFromBase(loc)
  end --if
  
 end --if
end --function



function checkFuel()
 local a = turtle.getFuelLevel()
 local b = ( zmax + xmax + depth + 1 )*2
 local c = true
 
 while a < b and c do
  for x=1,16 do
   turtle.select(x)
   if turtle.refuel(1) then
    break
   end --if
   if x == 16 then
    c = false
   end --if
  end --for
  a = turtle.getFuelLevel()
 end --while
 
 if a < b then
  flex.send(""Fuel low, returning to surface"",
    colors.yellow)
  local loc = gotoBase()
  turtle.select(1)
  if dodumps then dig.doDumpDown() end
  while turtle.suckUp() do sleep(0) end
  dig.dropNotFuel()
  dig.refuel(b)
  flex.send(""Fuel aquired!"",colors.lightBlue)
  returnFromBase(loc)
 end --if
end --function



local dug = dig.getdug()
local ydeep = dig.getymin()
local function checkProgress()
 a = 1000 --report every <a> blocks dug
 b = 5 --report every <b> meters descended
 if math.floor(dug/a) < math.floor(dig.getdug()/a) then
  flex.send(""Dug ""..tostring(dig.getdug())..
    "" blocks"",colors.lightBlue)
 end --if
 if math.floor(-ydeep/b) < math.floor(-dig.gety()/b) then
  flex.send(""Descended ""..tostring(-dig.gety())..
    ""m"",colors.green)
 end --if
 dug = dig.getdug()
 ydeep = dig.gety()
end --function



local newlayer = false
function checkNewLayer()
 if newlayer then
  -- This encodes whether or not the turtle has
  --  started a new layer if at the edge
  dig.setr(dig.getr() % 360 + 360)
 else
  dig.setr(dig.getr() % 360)
 end --if
end --function



function lavax()
  if dig.getx() == 0 then
   dig.gotor(270)
   checkNewLayer()
   dig.blockLava()
  elseif dig.getx() == xmax-1 then
   dig.gotor(90)
   checkNewLayer()
   dig.blockLava()
  end --if/else
end --function

function lavaz()
  if dig.getz() == 0 then
   dig.gotor(180)
   checkNewLayer()
   dig.blockLava()
  elseif dig.getz() == zmax-1 then
   dig.gotor(0)
   checkNewLayer()
   dig.blockLava()
  end --if/else
end --function

function checkLava(n)
 if lava then
  local x
  local r = dig.getr() % 360
  
  if r == 0 or r == 180 then
   lavaz()
   lavax()
  else
   lavax()
   lavaz()
  end --if/else
  
  if dig.gety() == -skip then
   dig.blockLavaUp()
  end --if
  
  if dig.getx() == 0 and dig.getz() == 0
     and dig.gety() > -skip then
   for x=1,4 do
    dig.blockLava()
    dig.left()
    checkNewLayer()
   end --for
  end --if
  
  if n ~= 0 then
   dig.gotor(r)
   checkNewLayer()
  end --if
  
 end --if
end --function



function checkAll(n)
 checkNewLayer()
 checkProgress()
 checkFuel()
 checkInv()
 checkHalt()
 checkLava(n)
 dig.checkBlocks()
 checkNewLayer()
end --function




---------------------------------------
--      |\/|  /\  [¯¯] |\ ||         --
--      |  | |  |  ][  | \ |         --
--      |||| |||| [__] || \|         --
---------------------------------------
-- |¯\ |¯\  /¯\   /¯¯] |¯\  /\  |\/| --
-- | / | / | O | | [¯| | / |  | |  | --
-- ||  | \  \_/   \__| | \ |||| |||| --
---------------------------------------

local a,b,c,x,y,z,r,loc
local xdir, zdir = 1, 1

turtle.select(1)
if reloaded then
 
 flex.send(""Resuming ""..tostring(zmax)..""x""
   ..tostring(xmax).."" quarry"",colors.yellow)
 
 if dig.gety()==dig.getymin() and dig.gety()~=0 then
  zdir = dig.getzlast()
  if zdir == 0 then zdir = 1 end
  xdir = dig.getxlast()
  if xdir == 0 then xdir = 1 end
  
  if dig.getr() >= 360 then
   -- This encodes whether or not the turtle has
   --  started a new layer if at the edge
   xdir = -xdir
   newlayer = true
  end --if
  
 else
  gotoBase()
  if dodumps then dig.doDumpDown() end
  dig.dropNotFuel()
  dig.gotor(0)
  checkFuel()
  dig.gotoy(dig.getymin())
 end --if
 
else
 
 flex.send(""Starting ""..tostring(zmax)..""x""
   ..tostring(xmax).."" quarry"",colors.yellow)
 
 if skip > 0 then
  flex.send(""Skipping ""..tostring(skip)
    ..""m"", colors.lightGray)
 end --if
 
 if depth < world_height-1 then
  flex.send(""Going ""..tostring(-ymin)
    ..""m deep"", colors.lightGray)
 else
  flex.send(""To bedrock!"",colors.lightGray)
 end --if/else
 
end --if/else


while dig.gety() > -skip do
 checkFuel()
 dig.down()
 
 if dig.isStuck() then
  flex.send(""Co-ordinates lost! Shutting down"",
    colors.red)
  --rs.delete(""startup.lua"")
  return
 end --if
 
end --while



--------------------------
-- |\/|  /\  [¯¯] |\ || --
-- |  | |  |  ][  | \ | --
-- |||| |||| [__] || \| --
--------------------------
-- ||    /¯\   /¯\  |¯\ --
-- ||_  | O | | O | | / --
-- |__]  \_/   \_/  ||  --
--------------------------

local done = false
while not done and not dig.isStuck() do
 turtle.select(1)
 
 while not done do
  
  checkAll(0)
  if dig.getz()<=0 and zdir==-1 then break end
  if dig.getz()>=zmax-1 and zdir==1 then break end
  
  if zdir == 1 then dig.gotor(0)
  elseif zdir == -1 then dig.gotor(180)
  end --if/else
  checkNewLayer()
  
  dig.fwd()
  
  if dig.isStuck() then
   done = true
  end --if
  
 end --while (z loop)
 
 if done then break end
 
 zdir = -zdir
 newlayer = false
 
 if dig.getx()<=0 and xdir==-1 then
  newlayer = true
 elseif dig.getx()>=xmax-1 and xdir==1 then
  newlayer = true
 else
  checkAll(0)
  dig.gotox(dig.getx()+xdir)
 end --if/else
 
 if newlayer and not dig.isStuck() then
  xdir = -xdir
  if dig.getymin() <= ymin then break end
  checkAll(0)
  dig.down()
 end --if
 
end --while (cuboid dig loop)


flex.send(""Digging completed, returning to surface"",
  colors.yellow)
gotoBase()

flex.send(""Descended ""..tostring(-dig.getymin())..
    ""m total"",colors.green)
flex.send(""Dug ""..tostring(dig.getdug())..
    "" blocks total"",colors.lightBlue)

for x=1,16 do
 if dig.isBuildingBlock(x) then
  turtle.select(x)
  dig.placeDown()
  break
 end --if
end --for
turtle.select(1)

if dodumps then
 dig.gotor(0)
 dig.doDump()
 dig.gotor(180)
end
dig.dropNotFuel()
dig.gotor(0)

dig.clearSave()
flex.modemOff()
os.unloadAPI(""dig.lua"")
os.unloadAPI(""flex.lua"")
"
QAfrhU7E,receive.lua,Cwackers,Lua,Sunday 26th of May 2024 12:42:33 PM CDT,"-- Cloned
-- Program to receive messages from computers/
-- turtles using flex.lua ""send"" function
-- <Flexico64@gmail.com>

--------------------------------------
-- |¯\|¯¯] /¯]|¯¯][¯¯]\\  //|¯¯]|¯\ --
-- | /| ] | [ | ]  ][  \\// | ] | / --
-- | \|__] \_]|__][__]  \/  |__]| \ --
--------------------------------------

local log_file = ""log.txt""
local options_file = ""flex_options.cfg""
os.loadAPI(""flex.lua"")
local modem_channel = 6464


if fs.exists(options_file) then
 local file = fs.open(""flex_options.cfg"", ""r"")
 local line = file.readLine()
 while line ~= nil do
  if string.find(line, ""modem_channel="") == 1 then
   modem_channel = tonumber( string.sub(
         line, 15, string.len(line) ) )
   break
  end --if
  line = file.readLine()
 end --while
 file.close()
end --if


local modem
local p = flex.getPeripheral(""modem"")
if #p > 0 then
 modem = peripheral.wrap(p[1])
 modem.open(modem_channel)
else
 flex.printColors(""Please attach a wireless""
   .."" or ender modem\n"", colors.red)
 sleep(2)
 return
end --if/else

local monitor
p = flex.getPeripheral(""monitor"")
if #p > 0 then
 monitor = peripheral.wrap(p[1])
 term.redirect(monitor)
 monitor.clear()
 monitor.setCursorPos(1,1)
 monitor.setTextScale(0.5)
end --if
local lcd_x,lcd_y = monitor.getSize()


local file, line
local filelist = {}
if fs.exists(log_file) then
 file = fs.open(log_file, ""r"")
 line = file.readLine()
 
 while line ~= nil do
 
  if line ~= """" or ( line == """" and
     filelist[#filelist] ~= """" ) then
   filelist[#filelist+1] = line
  end --if
  
  line = file.readLine()
 end --while
 file.close()
 file = fs.open(log_file, ""a"")
 
else
 -- Log file does not exist: make one!
 file = fs.open(log_file, ""w"")
 
end --if/else


local x, y
y = math.max(1,#filelist-lcd_y)
for x=y, #filelist do
 flex.printColors(filelist[x])
end --for

if filelist[#filelist] ~= """" then
 file.writeLine("""")
end --if
file.close()


term.setTextColor(colors.white)
print(""Waiting for message on channel ""
      ..tostring(modem_channel)..""..."")

while true do
 local event, modemSide, senderChannel,
    replyChannel, message, senderDistance =
    os.pullEvent(""modem_message"")
 
 file = fs.open(log_file, ""a"")
 file.writeLine(message)
 file.close()
 
 flex.printColors(message)
 
 sleep(0.01)
end --while

"
dH6EVASx,flex.lua,Cwackers,Lua,Sunday 26th of May 2024 12:42:15 PM CDT,"-- Cloned
-- Misc Useful Functions
-- Required by most other programs
-- <Flexico64@gmail.com>

-------------------------------------------
-- |¯¯] ||   |¯¯] \\//     /\  |¯\ [¯¯]  --
-- | ]  ||_  | ]   ><     |  | | /  ][   --
-- ||   |__] |__] //\\    |||| ||  [__]  --
-------------------------------------------

local log_file = ""log.txt""
local options_file = ""flex_options.cfg""

-- Defaults; can be changed in config file
local modem_channel = 6464
local name_color
if term.isColor() then
 name_color = ""yellow""
else
 name_color = ""lightGray""
end --if/else


function getPeripheral(name)
 local x,sides
 sides = { ""top"", ""bottom"", ""left"",
           ""right"", ""front"", ""back"" }
 local periph = {}
 for x=1,#sides do
  if peripheral.getType(sides[x]) == name then
   periph[#periph+1] = sides[x]
  end --if
 end --for
 return periph
end --function


local modem
local hasModem = false
local x = getPeripheral(""modem"")
if #x > 0 then
 hasModem = true
 modem = peripheral.wrap(x[1])
 modem.open(modem_channel)
end --if

function modemOff()
 local x = getPeripheral(""modem"")
 if #x > 0 then
  modem.close(modem_channel)
 end --if
end --function


local file
if not fs.exists(log_file) then
 file = fs.open(log_file,""w"")
 file.close()
end --if



function optionsExport()
 if fs.exists(options_file) then
  fs.delete(options_file)
 end
 local file
 while file == nil do
  file = fs.open(options_file,""w"")
 end
 file.writeLine(""# Flex API Options File #\n"")
 file.writeLine(""modem_channel=""
   ..tostring(modem_channel))
 file.writeLine(""name_color=""..name_color..""\n"")
 file.close()
 return true
end --function


function optionsImport()
 if not fs.exists(options_file) then
  return false
 end
 local file
 while file == nil do
  file = fs.open(options_file, ""r"")
 end
 
 local x = file.readLine()
 while x ~= nil do
  if string.find(x,""modem_channel"")==1 then
   modem_channel = tonumber(string.sub(x,15))
  elseif string.find(x,""name_color"")==1 then
   name_color = string.sub(x,12)
  end --if/else
  x = file.readLine()
 end --while
 
 file.close()
 return true
end --function


if not optionsImport() then
 optionsExport()
end --if



--==============================--


-- Inventory Condense
function condense(n)
 if n == nil then n = 1 end
 n = math.floor(n)
 if n < 1 or n > 16 then
  n = 1
 end --if
 
 local x,y,slot
 slot = turtle.getSelectedSlot()
 for x=n+1,16 do
  if turtle.getItemCount(x) > 0 then
   
   for y=n,x-1 do
    if turtle.getItemCount(y) == 0 or
       turtle.getItemDetail(x)[""name""] ==
       turtle.getItemDetail(y)[""name""] and
       turtle.getItemSpace(y) > 0 then
     turtle.select(x)
     turtle.transferTo(y)
    end --if
    if turtle.getItemCount(x) == 0 then
     break
    end --if
   end --for
   
  end --if
 end --for
 turtle.select(slot)
end --function


-- Round n to p decimal places
function round(n,p)
 if p == nil then p = 0 end
 n = n*math.pow(10,p)
 local m = n - math.floor(n)
 if m < 0.5 then
  return math.floor(n) / math.pow(10,p)
 else
  return math.ceil(n) / math.pow(10,p)
 end --if/else
end --function


-- Number to String
-- Optionally a max length if not an integer
function tostr(num,len)
 num = tostring(num)
 local sci = """"
 
 local e = string.find(num,""e"")
 if e ~= nil then
  -- Separate exponent from number
  sci = string.sub(num,e,-1)
  num = string.sub(num,1,e-1)
 end --if
 
 if string.find(num,""%."") ~= nil then
  -- Remove extra zeroes from decimal
  while string.sub(num,string.len(num)) == ""0"" do
   num = string.sub(num,1,string.len(num)-1)..""""
  end --while
 end --if
 
 if string.sub(num,-1) == ""."" then
  -- If all trailing zeroes are gone, erase decimal point
  num = string.sub(num,1,-2)..""""
 end --if
 
 if len == nil then
  -- If no max length specified
  return num..sci..""""
 end --if
 
 while string.len(num) + string.len(sci) > len do
  -- If too long, cut off a decimal digit
  num = string.sub(num,1,-2)..""""
 end --while
 
 return num..sci..""""
 
end --function


-- Evaluate Expression
function eval(expression)
 local solution, err = loadstring(
   ""return ""..expression)
 if err then error(err,2) end
 local sol = pcall(solution)
 if not sol then
  error(""Invalid Expression"",2)
 end
 return solution()
end --function


-- Press any Key
function getKey()
 local event, key_code = os.pullEvent(""key"")
 return key_code
end --function
function keyPress() return getKey() end




-------------------------------
--    [¯¯] |¯¯] \\// [¯¯]    --
--     ||  | ]   ><   ||     --
--     ||  |__] //\\  ||     --
-------------------------------
--  /¯]  /¯\  ||    /¯\  |¯\ --
-- | [  | O | ||_  | O | | / --
--  \_]  \_/  |__]  \_/  | \ --
-------------------------------

hexchars = ""0123456789ABCDEF""

-- Start with named value, get hex char
function getHex(x)
 if x == nil then
  error(""Number expected, got nil"", 2)
 end
 x = round(math.log(x)/math.log(2))
 if x < 0 or x > 15 then
  error(""Invalid color number"", 2)
 end --if
 return string.sub(hexchars,x+1,x+1)
end --function

-- Start with hex char, get named value
function getVal(x)
 local z = string.find(hexchars,x)
 if z == nil then return nil end
 return math.pow(2,z-1)
end --function

local send_depth, print_depth = 0, 0



-------------------------------
-- Multicolor Print Function --
-------------------------------

function printColors(message,textColor)
 local x,y,z,t,skip,margin
 local xmax,ymax = term.getSize()
 local oldColor = term.getTextColor()
 if textColor == nil then
  textColor = oldColor
 else
  
 end --if
 
 margin = """"
 for x=1,print_depth do
  margin = margin..""  ""
 end --for
 
 if type(message) == ""table"" then
  if print_depth == 0 then
   printColors(""#0{"")
  end --if
  print_depth = print_depth + 1
  
  for x,y in pairs(message) do
   if type(y) == ""table"" then
    printColors(margin..""  ""..tostring(x).."" #0= {"",textColor)
    printColors(y,textColor)
   else
    printColors(margin..""  ""..tostring(x).."" #0= #""..
        getHex(textColor)..tostring(y),textColor)
   end --if/else
  end --for
  
  print_depth = print_depth - 1
  printColors(margin..""#0}"")
  return
  
 end --if
 
 if type(textColor) == ""number"" then
  message = ""#""..getHex(textColor)
            ..tostring(message)
 end --if
 
 for t=1,string.len(message) do
  
  skip = false
  while string.sub(message,t,t) == ""#"" and
        not skip do
   
   -- Found legit ""#""
   if string.sub(message,t+1,t+1) == ""#"" then
    message = string.sub(message,1,t)..
          string.sub(message,t+2)..""""
    skip = true
    
   else
    textColor = getVal(string.sub(message,t+1,t+1))
    
    if textColor == nil then
     textColor = colors.white
    end --if
    
    -- This bit clears out # escapes
    if t == 1 then
     message = string.sub(message,3)..""""
    elseif t < string.len(message) then
     message = string.sub(message,1,t-1)..
           string.sub(message,t+2)..""""
    elseif t == string.len(message) then
     message = string.sub(message,1,t-1)..""""
    end --if/else
    
   end --if
   
   if t > string.len(message) then
    break
   end --if
   
  end --while (is escape char)
  
  if t > string.len(message) then
   break
  end --if
  
  -- Actually Print Character
  x,y = term.getCursorPos()
  term.setTextColor(textColor)
  
  if textColor == colors.gray then
   --term.setBackgroundColor(colors.lightGray)
   
  elseif textColor == colors.black then
   term.setBackgroundColor(colors.lightGray)
   
  end --if/else
  term.write(string.sub(message,t,t))
  term.setBackgroundColor(colors.black)
  
  if t >= string.len(message) then
   break
  end --if
  
  -- Loop Around to Next Row
  xmax,ymax = term.getSize()
  if string.sub(message,t,t) == ""\n"" or x >= xmax then
   x = 1
   if y < ymax-1 then
    y = y + 1
   else
    print("""")
   end --if/else
  else
   x = x + 1
  end --if/else
  term.setCursorPos(x,y)
  
 end --for
 
 term.setTextColor(oldColor)
 print("""")
 
end --function



------------------------------
-- Print/Broadcast Function --
------------------------------

function send(message,textColor)
 local x,y,z,id,nameColor
 local oldColor = term.getTextColor()
 
 local margin = """"
 for x=1,send_depth do
  margin = margin..""  ""
 end --for
 
 if type(message) == ""table"" then
  if send_depth == 0 then
   send(""#0{"")
  end --if
  send_depth = send_depth + 1
  
  for x,y in pairs(message) do
   if type(y) == ""table"" then
    send(margin..""  ""..tostring(x).."" #0= {"",textColor)
    send(y,textColor)
   else
    send(margin..""  ""..tostring(x).."" #0= #""
       ..getHex(textColor)..tostring(y),textColor)
   end --if/else
  end --for
  
  send_depth = send_depth - 1
  send(margin..""#0}"")
  return
  
 end --if
 
 
 if message == nil then
  message = ""nil""
 end --if
 
 message = tostring(message)
 if textColor == nil then
  textColor = colors.white
 end --if
 nameColor = eval(""colors.""..name_color)
 
 printColors(message)
 
 file = fs.open(log_file,""a"")
 file.writeLine(message)
 file.close()
 
 if hasModem then
  id = ""#""..getHex(nameColor)..
       tostring(os.getComputerID())..""#0""
  
  if os.getComputerLabel() ~= nil then
   id = id..""|#""..getHex(nameColor)..
        os.getComputerLabel()..""#0""
  end --if
  
  id = id.."": #""..getHex(textColor)..
       message..""""
  
  modem.transmit(modem_channel,
     modem_channel+1,id)
  sleep(0.1)
 end --if (hasModem)
 
 term.setTextColor(oldColor)
 sleep(0.02)
end --function (print/broadcast)


--================================--


args = {...}

if args[1]==""color"" or args[1]==""colors"" then
 z = """"
 for x=0,15 do
  y = string.sub(hexchars,x+1,x+1)..""""
  z = z..""#""..y..y..""#0 ""
 end --for
 printColors(z)
 return
 
elseif args[1] == ""edit"" then
 shell.run(""edit ""..options_file)
 optionsImport()
 
end --if/else



-------------------------------------------
-- /¯¯] |¯¯] [¯¯]    |¯\   /\  [¯¯]  /\  --
--| [¯| | ]   ||     |  | |  |  ||  |  | --
-- \__| |__]  ||     |_/  ||||  ||  |||| --
-------------------------------------------


function getBlock(dir)
 dir = dir or ""fwd""
 local block,meta
 
 if dir==""fwd"" then
  block,meta = turtle.inspect()
 elseif dir==""up"" then
  block,meta = turtle.inspectUp()
 elseif dir==""down"" then
  block,meta = turtle.inspectDown()
 end
 
 if block then
  block = meta[""name""]
  meta = meta[""metadata""]
  return block,meta
 else
  return ""minecraft:air"",nil
 end --if
 
end --function

function getBlockUp()
 return getBlock(""up"")
end

function getBlockDown()
 return getBlock(""down"")
end


function isBlock(key,dir)
 if type(key) == ""string"" then
  key = { key }
 end --if
 if type(key) ~= ""table"" then
  error(""Expected string or table, got ""
    ..type(key), 2)
  return false
 end --if
 
 local block = getBlock(dir)
 local x
 for x=1,#key do
  
  if string.find(key[x],"":"") ~= nil then
   if block == key[x] then
    return true
   end --if
   
  else
   if string.find(block,key[x]) ~= nil then
    return true
   end --if
   
  end --if/else
 end --for
 
 return false
end --function

function isBlockUp(key)
 return isBlock(key, ""up"")
end

function isBlockDown(key)
 return isBlock(key, ""down"")
end



local fluid = { ""air"", ""water"", ""lava"",
                ""acid"", ""blood"", ""poison"" }

function isFluid(dir)
 return isBlock(fluid, ""fwd"")
end

function isFluidUp()
 return isBlock(fluid, ""up"")
end

function isFluidDown()
 return isBlock(fluid, ""down"")
end



function isItem(key,slot)
 if key == nil then return false end
 
 local slot_old = turtle.getSelectedSlot()
 if type(slot) ~= ""number"" then
  slot = slot_old
 end --if
 
 if type(key) == ""table"" then
  local x
  for x=1,#key do
   if isItem(key[x],slot) then
    return true
   end --if
  end --for
  return false
 end --if
 
 if turtle.getItemCount(slot) == 0 then
  return false
 end --if
 
 local name = turtle.getItemDetail(slot)[""name""]
 
 return ( string.find(name,key) ~= nil )
end --function


"
HmUuu9t6,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Sunday 26th of May 2024 12:10:25 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
26 May 2024"
4H1qMGtM,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Sunday 26th of May 2024 12:03:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_753414.pdf

Working as of:
26 May 2024"
Vg9fTSgz,NFC-Reader,Manu-J,Python,Sunday 26th of May 2024 12:00:27 PM CDT,"import sys
import time
import binascii
from smartcard.System import readers
from smartcard.util import toHexString
from smartcard.Exceptions import NoCardException, CardConnectionException
from rich.console import Console
from rich.table import Table
from rich.prompt import Prompt
from rich import print

console = Console()

def select_reader():
    reader_list = readers()
    if not reader_list:
        console.print(""[red]No smart card readers found.[/red]"")
        sys.exit()

    console.print(""[bold]Available readers:[/bold]"")
    for i, reader in enumerate(reader_list):
        console.print(f""[green]{i}:[/green] {reader}"")

    while True:
        try:
            reader_index = int(Prompt.ask(""Select a reader"", choices=[str(i) for i in range(len(reader_list))]))
            return reader_list[reader_index]
        except ValueError:
            console.print(""[red]Invalid input. Please enter a valid number.[/red]"")

def connect_to_card(reader):
    connection = reader.createConnection()
    try:
        connection.connect()
        return connection
    except NoCardException:
        console.print(""[red]No card detected. Please ensure the card is present and try again.[/red]"")
        return None
    except CardConnectionException as e:
        console.print(f""[red]Card connection error: {str(e)}[/red]"")
        return None

def get_uid(connection):
    GET_UID_COMMAND = [0xFF, 0xCA, 0x00, 0x00, 0x00]
    try:
        data, sw1, sw2 = connection.transmit(GET_UID_COMMAND)
        if sw1 == 0x90 and sw2 == 0x00:
            return toHexString(data)
        else:
            return None
    except CardConnectionException as e:
        console.print(f""[red]Error during UID retrieval: {str(e)}[/red]"")
        return None

def read_data(connection, block_number):
    READ_COMMAND = [0xFF, 0xB0, 0x00, block_number, 0x10]
    try:
        data, sw1, sw2 = connection.transmit(READ_COMMAND)
        if sw1 == 0x90 and sw2 == 0x00:
            return toHexString(data)
        else:
            console.print(f""[red]Failed to read block {block_number}: SW1={sw1:X}, SW2={sw2:X}[/red]"")
            return None
    except CardConnectionException as e:
        console.print(f""[red]Error during data read: {str(e)}[/red]"")
        return None

def write_data(connection, block_number, data):
    if len(data) > 16:
        console.print(""[red]Data too long. Must be 16 bytes or less.[/red]"")
        return
    data += [0x00] * (16 - len(data))  # Pad data to 16 bytes if necessary
    WRITE_COMMAND = [0xFF, 0xD6, 0x00, block_number, 0x10] + data
    try:
        _, sw1, sw2 = connection.transmit(WRITE_COMMAND)
        if sw1 == 0x90 and sw2 == 0x00:
            console.print(f""[bold green]Successfully wrote data to block {block_number}.[/bold green]"")
        else:
            console.print(f""[red]Failed to write block {block_number}: SW1={sw1:X}, SW2={sw2:X}[/red]"")
    except CardConnectionException as e:
        console.print(f""[red]Error during data write: {str(e)}[/red]"")

def scan_cards(reader):
    console.print(""[bold blue]Scanning for NFC cards... Press Ctrl+C to exit.[/bold blue]"")
    last_uid = None
    while True:
        try:
            connection = reader.createConnection()
            connection.connect()
            uid = get_uid(connection)
            if uid and uid != last_uid:
                console.print(f""[bold green]Detected NFC card with UID: {uid}[/bold green]"")
                last_uid = uid
                # Perform desired actions with the detected card
        except NoCardException:
            pass
        except CardConnectionException as e:
            console.print(f""[red]Error during card scan: {str(e)}[/red]"")
        time.sleep(1)  # Delay to prevent rapid polling

def main():
    reader = select_reader()
    
    while True:
        console.print(""\n[bold]Options:[/bold]"")
        console.print(""[green]1.[/green] Scan NFC cards in real-time"")
        console.print(""[green]2.[/green] Get UID of card"")
        console.print(""[green]3.[/green] Read Data"")
        console.print(""[green]4.[/green] Write Data"")
        console.print(""[green]5.[/green] Exit"")
        choice = Prompt.ask(""Select an option"", choices=[""1"", ""2"", ""3"", ""4"", ""5""])

        if choice == '1':
            scan_cards(reader)
        elif choice == '2':
            connection = connect_to_card(reader)
            if connection:
                uid = get_uid(connection)
                if uid:
                    console.print(f""[bold green]UID:[/bold green] {uid}"")
                else:
                    console.print(""[red]Failed to get UID.[/red]"")
        elif choice == '3':
            connection = connect_to_card(reader)
            if connection:
                block_number = Prompt.ask(""Enter block number to read"", default=""0"")
                try:
                    block_number = int(block_number)
                    data = read_data(connection, block_number)
                    if data:
                        console.print(f""[bold green]Data from block {block_number}:[/bold green] {data}"")
                except ValueError:
                    console.print(""[red]Invalid block number. Please enter an integer.[/red]"")
        elif choice == '4':
            connection = connect_to_card(reader)
            if connection:
                block_number = Prompt.ask(""Enter block number to write"", default=""0"")
                try:
                    block_number = int(block_number)
                    data_hex = Prompt.ask(""Enter data to write (in hex, e.g., 01 02 03 04)"")
                    data = [int(x, 16) for x in data_hex.split()]
                    write_data(connection, block_number, data)
                except ValueError:
                    console.print(""[red]Invalid input. Please enter a valid block number and data in hex format.[/red]"")
        elif choice == '5':
            break
        else:
            console.print(""[red]Invalid option.[/red]"")

if __name__ == ""__main__"":
    main()
"
87a15Dn8,mmn_test_func,vatman,C++,Sunday 26th of May 2024 11:54:37 AM CDT,"#include <cmath>
#include <iomanip>
#include <iostream>
#include <vector>

double f(double x, double y) {
  double T = M_PI * x * y;
  double sin2T = std::pow(std::sin(T), 2);
  double cos2T = std::pow(std::cos(T), 2);
  double y2_x2 = y * y + x * x;
  return -2 * M_PI * std::exp(std::pow(std::sin(T), 2)) *
         (2 * M_PI * y2_x2 * cos2T * sin2T - M_PI * y2_x2 * sin2T +
          M_PI * y2_x2 * cos2T);
}

double u(double x, double y) {
  return std::exp(std::pow(std::sin(M_PI * x * y), 2));
}

std::vector<std::vector<double>> MinimalResiduals(const int nmax = 1000,
                                                  const double _eps = 0.0000001,
                                                  const int _n = 3,
                                                  const int _m = 3) {
  int Nmax = nmax; // максимальное число итераций (не менее 1)
  std::vector<std::vector<double>> v; // сеточная функция ѵ (x, y)
  v.resize(_n + 1);
  for (size_t i = 0; i < _n + 1; i++) {
    v[i].resize(_m + 1);
    for (size_t j = 0; j < _m + 1; j++) {
      v[i][j] = 0;
    }
  }
  std::vector<std::vector<double>> r_vec; // вектор невязки
  r_vec.resize(_n + 1);
  for (size_t i = 0; i < _n + 1; i++) {
    r_vec[i].resize(_m + 1);
    for (size_t j = 0; j < _m + 1; j++) {
      r_vec[i][j] = 0;
    }
  }
  std::vector<std::vector<double>> ar; // вектор невязки
  ar.resize(_n + 1);
  for (size_t i = 0; i < _n + 1; i++) {
    ar[i].resize(_m + 1);
    for (size_t j = 0; j < _m + 1; j++) {
      ar[i][j] = 0;
    }
  }
  double r1 = 0;
  int S = 0;         // счетчик итераций
  double eps = _eps; // заданная точность
  double eps_max = 0; // точность, достигнутая на текущей итерации
  double eps_cur = 0; // для подсчета точности на текущей итерации
  double a2, k2, h2; // ненулевые элементы матрицы (-А)
  const int n = _n, m = _m; // размерность сетки
  double r_max = 0;
  double a = 0;
  double b = 1;
  double c = 0;
  double d = 1; // границы области определения уравнения
  int i, j; // индексы
  double r = 0;
  double v_old; // старое значение преобразуемой компоненты вектора
  double v_new; // новое значение преобразуемой компоненты вектора и
  bool flag = false; // условие остановки
  double h = ((b - a) / n);
  double k = ((d - c) / m);
  double z = 0;
  double z_max = 0;
  double tau_s = 0;
  double num = 0; // tau=num/denominator
  double denominator = 1;
  h2 = -std::pow((n / (b - a)), 2);
  k2 = -std::pow((m / (d - c)), 2);
  a2 = -2 * (h2 + k2);
  for (int i = 0; i < n + 1; i++) {
    v[i][0] = u(a + i * h, a);
    v[i][m] = u(a + i * h, b);
  }
  for (int j = 0; j < m + 1; j++) {
    v[0][j] = u(c, c + j * k);
    v[n][j] = u(d, c + j * k);
  }
  do {
    z = 0;
    /* std::cout << ""вектор невязки:"" << std::endl; */
    /* for (int i = n - 1; i >= 0; i--) { */
    /*   for (int j = 0; j < m; j++) */
    /*     std::cout << std::left << std::setw(10) << r_vec[i][j]; */
    /*   std::cout << ""\n""; */
    /* } */
    /* std::cout << ""промежуточное решение:"" << std::endl; */
    /* for (int i = n - 1; i >= 0; i--) { */
    /*   for (int j = 0; j < m; j++) */
    /*     std::cout << std::left << std::setw(10) << v[i][j]; */
    /*   std::cout << ""\n""; */
    /* } */
    z_max = 0;
    eps_max = 0;
    r_max = -20;
    num = 0;
    denominator = 0;
    for (j = 1; j < m; j++) {
      for (i = n - 1; i > 0; i--) {
        r_vec[i][j] = f(a + i * h, c + j * k) -
                      (h2 * (v[i + 1][j] + v[i - 1][j]) +
                       k2 * (v[i][j + 1] + v[i][j - 1]) + v[i][j] * a2);
      }
    }
    for (j = 1; j < m; j++) {
      for (i = n - 1; i > 0; i--) {
        ar[i][j] =
            (h2 * (r_vec[i + 1][j] + r_vec[i - 1][j]) +
             k2 * (r_vec[i][j + 1] + r_vec[i][j - 1]) + r_vec[i][j] * a2);
        num += ar[i][j] * r_vec[i][j];
        denominator += ar[i][j] * ar[i][j];
      }
    }
    tau_s = num / denominator;
    for (j = 1; j < m; j++) {
      for (i = n - 1; i > 0; i--) {
        v_old = v[i][j];
        v_new = v_old + tau_s * r_vec[i][j];
        eps_cur = std::fabs(v_old - v_new);
        if (eps_cur > eps_max) {
          eps_max = eps_cur;
        }
        v[i][j] = v_new;
        r = fabs(f(a + i * h, c + j * k) -
                 (h2 * (v[i + 1][j] + v[i - 1][j]) +
                  k2 * (v[i][j + 1] + v[i][j - 1]) + v_old * a2));
        if (r > r_max)
          r_max = r;
        z = u(a + i * h, c + j * k) - v[i][j];
        if (z > z_max)
          z_max = z;
      }
    }

    S = S + 1;
    if ((eps_max <= eps) or (S >= Nmax)) {
      flag = true;
    }
  } while (!flag);

  std::cout << ""\nСПРАВКА:"" << std::endl;

  std::cout << ""Количество выполненных итераций = "" << S << std::endl;
  std::cout << ""Точность на выходе = "" << eps_max << std::endl;
  std::cout << ""Невязка = "" << r_max << std::endl;
  std::cout << ""Норма общей погрешности = "" << z_max << std::endl;
  return v;
}

int main() {
  int n = 100;
  int m = 100;
  std::vector<std::vector<double>> v(n, std::vector<double>(m, 0));
  v = MinimalResiduals(100000, 0.000001, n, m);
  n++;
  m++;
  /* std::cout << ""Результат:"" << std::endl; */
  /* for (int i = n - 1; i >= 0; i--) { */
  /*   for (int j = 0; j < m; j++) */
  /*     std::cout << std::left << std::setw(10) << v[i][j]; */
  /*   std::cout << ""\n""; */
  /* } */
  return 0;
}
"
2K8JwZLF,doubletitle,tensador125,Java,Sunday 26th of May 2024 11:29:39 AM CDT,"diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/GameServer.java b/aCis_gameserver/java/net/sf/l2j/gameserver/GameServer.java
index 5992525c..07153c7a 100755
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/GameServer.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/GameServer.java
@@ -88,6 +88,7 @@ import net.sf.l2j.gameserver.taskmanager.AiTaskManager;
 import net.sf.l2j.gameserver.taskmanager.AttackStanceTaskManager;
 import net.sf.l2j.gameserver.taskmanager.BoatTaskManager;
 import net.sf.l2j.gameserver.taskmanager.DecayTaskManager;
+import net.sf.l2j.gameserver.taskmanager.DoubleTitleTaskManager;
 import net.sf.l2j.gameserver.taskmanager.GameTimeTaskManager;
 import net.sf.l2j.gameserver.taskmanager.InventoryUpdateTaskManager;
 import net.sf.l2j.gameserver.taskmanager.ItemInstanceTaskManager;
@@ -208,6 +209,7 @@ public class GameServer
 		WaterTaskManager.getInstance();
 		InventoryUpdateTaskManager.getInstance();
 		ItemInstanceTaskManager.getInstance();
+		DoubleTitleTaskManager.getInstance();
 		
 		StringUtil.printSection(""Seven Signs"");
 		SevenSignsManager.getInstance();
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/handler/VoicedCommandHandler.java b/aCis_gameserver/java/net/sf/l2j/gameserver/handler/VoicedCommandHandler.java
index 929a2e9a..4373afdd 100644
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/handler/VoicedCommandHandler.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/handler/VoicedCommandHandler.java
@@ -3,6 +3,8 @@ package net.sf.l2j.gameserver.handler;
 import java.util.HashMap;
 import java.util.Map;
 
+import net.sf.l2j.gameserver.handler.voicedcommandhandlers.SecondTitle;
+
 public class VoicedCommandHandler
 {
 	private final Map<Integer, IVoicedCommandHandler> _datatable = new HashMap<>();
@@ -14,7 +16,7 @@ public class VoicedCommandHandler
 	
 	protected VoicedCommandHandler()
 	{
-//		registerHandler(new HandlerName());
+		registerHandler(new SecondTitle());
 	}
 	
 	public void registerHandler(IVoicedCommandHandler handler)
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/SecondTitle.java b/aCis_gameserver/java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/SecondTitle.java
new file mode 100644
index 00000000..eeebf687
--- /dev/null
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/handler/voicedcommandhandlers/SecondTitle.java
@@ -0,0 +1,39 @@
+package net.sf.l2j.gameserver.handler.voicedcommandhandlers;
+
+import net.sf.l2j.commons.lang.StringUtil;
+
+import net.sf.l2j.gameserver.handler.IVoicedCommandHandler;
+import net.sf.l2j.gameserver.model.actor.Player;
+import net.sf.l2j.gameserver.network.SystemMessageId;
+
+public class SecondTitle implements IVoicedCommandHandler
+{
+	private static final String[] VOICED_COMMANDS =
+	{
+		""nick2""
+	};
+	
+	@Override
+	public boolean useVoicedCommand(String command, Player activeChar, String params)
+	{
+		if (activeChar.getTitle().isEmpty())
+			return false;
+		
+		final String nick = params.substring(VOICED_COMMANDS[0].length() + 2);
+		if (!StringUtil.isValidString(nick, ""^[a-zA-Z0-9 !@#$&()\\-`.+,/\""]*{0,16}$""))
+		{
+			activeChar.sendPacket(SystemMessageId.NOT_WORKING_PLEASE_TRY_AGAIN_LATER);
+			return false;
+		}
+		
+		activeChar.sendMessage(""Nick secundário ativado. Ele começará a ser exibido em breve."");
+		activeChar.setSecondTitle(nick);
+		return true;
+	}
+
+	@Override
+	public String[] getVoicedCommandList()
+	{
+		return VOICED_COMMANDS;
+	}
+}
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Creature.java b/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Creature.java
index 4a0fd47c..84941362 100755
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Creature.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Creature.java
@@ -935,7 +935,13 @@ public abstract class Creature extends WorldObject
 	 */
 	public void setTitle(String value)
 	{
-		_title = StringUtil.trim(value, 16, """");
+		final String newTitle = StringUtil.trim(value, 16, """");
+		
+		// Desativar o double title
+		if (getActingPlayer() != null && _title != null && newTitle.isEmpty())
+			getActingPlayer().setSecondTitle(newTitle);
+		
+		_title = newTitle;
 	}
 	
 	/**
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Player.java b/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Player.java
index 64610148..136e53d2 100755
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Player.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/model/actor/Player.java
@@ -214,6 +214,7 @@ import net.sf.l2j.gameserver.skills.funcs.FuncHenna;
 import net.sf.l2j.gameserver.skills.funcs.FuncMaxCpMul;
 import net.sf.l2j.gameserver.skills.funcs.FuncRegenCpMul;
 import net.sf.l2j.gameserver.taskmanager.AttackStanceTaskManager;
+import net.sf.l2j.gameserver.taskmanager.DoubleTitleTaskManager;
 import net.sf.l2j.gameserver.taskmanager.GameTimeTaskManager;
 import net.sf.l2j.gameserver.taskmanager.PvpFlagTaskManager;
 import net.sf.l2j.gameserver.taskmanager.ShadowItemTaskManager;
@@ -460,6 +461,8 @@ public final class Player extends Playable
 	private final Set<Integer> _selectedBlocksList = ConcurrentHashMap.newKeySet();
 	private final Set<Integer> _selectedFriendList = ConcurrentHashMap.newKeySet();
 	
+	private String _doubleTitle;
+	
 	/**
 	 * Constructor of Player (use Creature constructor).
 	 * <ul>
@@ -5962,6 +5965,9 @@ public final class Player extends Playable
 			}
 		}
 		
+		if (getSecondTitle() != null)
+			DoubleTitleTaskManager.getInstance().add(this);
+		
 		// Jail task
 		_punishment.handle();
 		
@@ -6291,6 +6297,7 @@ public final class Player extends Playable
 			PvpFlagTaskManager.getInstance().remove(this, false);
 			GameTimeTaskManager.getInstance().remove(this);
 			ShadowItemTaskManager.getInstance().remove(this);
+			DoubleTitleTaskManager.getInstance().remove(this);
 			
 			// Stop all QuestTimer affected to this Player.
 			for (Quest quest : ScriptData.getInstance().getQuests())
@@ -7154,4 +7161,44 @@ public final class Player extends Playable
 	{
 		return _selectedBlocksList;
 	}
+	
+	public void setSecondTitle(String nick)
+	{
+		if (getSecondTitle() != null && !nick.isEmpty() && (getSecondTitle().equals(nick) || getTitle().equals(nick)))
+			return;
+		
+		if (nick.isEmpty() || nick.isBlank())
+		{
+			// Nick secundário estava ativo no momento em que foi removido
+			if (getSecondTitle().equals(getTitleToBroadcast()))
+			{
+				setTitleToBroadcast(getTitle());
+				broadcastTitleInfo();
+			}
+				
+			DoubleTitleTaskManager.getInstance().remove(this);
+			getMemos().unset(""SECOND_TITLE"");
+			setTitleToBroadcast(null);
+		}
+		else
+		{
+			getMemos().set(""SECOND_TITLE"", nick);
+			DoubleTitleTaskManager.getInstance().add(this);
+		}
+	}
+	
+	public String getSecondTitle()
+	{
+		return getMemos().get(""SECOND_TITLE"");
+	}
+	
+	public void setTitleToBroadcast(String title)
+	{
+		_doubleTitle = title;
+	}
+	
+	public String getTitleToBroadcast()
+	{
+		return getSecondTitle() == null || _doubleTitle == null ? _title : _doubleTitle;
+	}
 }
\ No newline at end of file
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/TitleUpdate.java b/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/TitleUpdate.java
index 186d2e59..b11ba630 100755
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/TitleUpdate.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/TitleUpdate.java
@@ -10,7 +10,7 @@ public class TitleUpdate extends L2GameServerPacket
 	public TitleUpdate(Creature cha)
 	{
 		_objectId = cha.getObjectId();
-		_title = cha.getTitle();
+		_title = cha.getActingPlayer() != null ? cha.getActingPlayer().getTitleToBroadcast() : cha.getTitle();
 	}
 	
 	@Override
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java b/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
index a18e2685..6547ad4a 100755
--- a/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/network/serverpackets/UserInfo.java
@@ -169,7 +169,7 @@ public class UserInfo extends L2GameServerPacket
 		writeD(_player.getAppearance().getFace());
 		writeD((_player.isGM()) ? 1 : 0);
 		
-		writeS((_player.getPolymorphTemplate() != null) ? ""Morphed"" : _player.getTitle());
+		writeS((_player.getPolymorphTemplate() != null) ? ""Morphed"" : _player.getTitleToBroadcast());
 		
 		writeD(_player.getClanId());
 		writeD(_player.getClanCrestId());
diff --git a/aCis_gameserver/java/net/sf/l2j/gameserver/taskmanager/DoubleTitleTaskManager.java b/aCis_gameserver/java/net/sf/l2j/gameserver/taskmanager/DoubleTitleTaskManager.java
new file mode 100644
index 00000000..cfb5b333
--- /dev/null
+++ b/aCis_gameserver/java/net/sf/l2j/gameserver/taskmanager/DoubleTitleTaskManager.java
@@ -0,0 +1,57 @@
+package net.sf.l2j.gameserver.taskmanager;
+
+import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
+
+import net.sf.l2j.commons.pool.ThreadPool;
+
+import net.sf.l2j.gameserver.model.actor.Player;
+import net.sf.l2j.gameserver.network.serverpackets.TitleUpdate;
+
+public class DoubleTitleTaskManager implements Runnable
+{
+	private final Set<Player> _players = ConcurrentHashMap.newKeySet();
+	
+	private boolean _sendFirstTitle;
+	
+	protected DoubleTitleTaskManager()
+	{
+		// Execute a cada 5s
+		ThreadPool.scheduleAtFixedRate(this, 5000, 5000);
+	}
+	
+	public void add(Player player)
+	{
+		_players.add(player);
+	}
+	
+	public void remove(Player player)
+	{
+		_players.remove(player);
+	}
+	
+	@Override
+	public void run()
+	{
+		for (Player player : _players)
+		{
+			player.setTitleToBroadcast(_sendFirstTitle ? player.getTitle() : player.getSecondTitle());
+
+			// O UserInfo é realmente necessário?
+			// player.broadcastTitleInfo();
+			player.broadcastPacket(new TitleUpdate(player));
+		}
+		
+		_sendFirstTitle = !_sendFirstTitle;
+	}
+	
+	public static final DoubleTitleTaskManager getInstance()
+	{
+		return SingletonHolder.INSTANCE;
+	}
+	
+	private static class SingletonHolder
+	{
+		protected static final DoubleTitleTaskManager INSTANCE = new DoubleTitleTaskManager();
+	}
+}
\ No newline at end of file
"
LNTVn0Jk,ghjfkgkfgjkhlfjghknb,Vinters565,Python,Sunday 26th of May 2024 11:01:53 AM CDT,"class Cake:
    def __init__(self, price, volume, condition):
        self.price_gram = price / volume
        self.volume = volume
        self.con = condition

    def __eq__(self, other):
        if isinstance(other, Cake):
            return self.price_gram == other.price_gram
        return False

    def __lt__(self, other):
        if isinstance(other, Cake):
            return self.price_gram < other.price_gram
        return False

def Calculate(data):
    result = 0
    for cake in data:
        if cake.volume > conditions[1]:
            if cake.con:
                result += cake.price_gram * conditions[1]
                return result
            else: continue
        else:
            result += cake.price_gram * cake.volume
            conditions[1] -= cake.volume
    return result

conditions = list(map(int, input().split()))
data = []
for i in range(conditions[0]):
    auxiliary = input().split()
    data.append(Cake(int(auxiliary[0]), int(auxiliary[1]), auxiliary[2] == 'Д'))
data.sort(reverse=True)
print(""{:.2f}"".format(Calculate(data)))"
t1eBKBN9,apactat,Naxy73,Lua,Sunday 26th of May 2024 10:57:58 AM CDT,"--[[
Coded by HPWebcamAble
http://pastebin.com/u/HPWebcamAble

This installs 'Advanced Redstone Control 3.x' and all necessary components

**Multiplayer Note:** This script has been modified for multiplayer functionality.
  - Server-side script approach:  Move download logic to server-side script.
  - Resource pack approach:  Package files as a resource pack.
]]

function clear() shell.run(""clear"") end
function tc(...) term.setTextColor(...) end

-- (Replace with server-side download logic or reference to resource pack location)
function getProgram(programName, targetPath)
  -- Download or access program from server-side location or resource pack
  -- ... (implementation details based on chosen approach)

  -- Handle potential errors during download
  local response = http.get(""http://pastebin.com/raw/"" .. textutils.urlEncode(programName))
  if not response then
    print(""Error downloading "" .. programName .. "": HTTP request failed"")
    return false
  end

  local content = response.readAll()
  response.close()
  
  if not content or content == """" then
    print(""Error downloading "" .. programName .. "": Empty response"")
    return false
  end
  
  local file = fs.open(targetPath, ""w"")
  file.write(content)
  file.close()

  return true
end

--Program--

if not http then
  print(""HTTP api is disabled on this world/Server"")
  return
elseif not term.isColor() then
  tc(colors.red)
  print(""This program requires an advanced computer"")
  return
end

clear()
tc(colors.yellow)
term.write(""Advanced Redstone Control 3.0"")
tc(colors.white)
print("" is ready to be installed"")
tc(colors.blue)
print(""Press any key..."")

os.pullEvent(""key"")
os.pullEvent(""char"")

clear()
tc(colors.white)
print(""Installing..."")

--Add ARC directory
print(""Adding directory 'ARC'..."")
if fs.exists(""ARC"") then
  if fs.isDir(""ARC"") then
    tc(colors.orange)
    print(""Directory 'ARC' already exists on this computer"")
    tc(colors.red)
    print(""Install terminated. Remove or rename directory 'ARC'"")
    return
  else
    tc(colors.orange)
    print(""ARC exists as a program. Renaming..."")
    local pRename = ""ARC""
    repeat
      pRename = pRename .. ""~""
    until not fs.exists(pRename)
    tc(colors.white)
    print(""Renamed ARC to "" .. pRename)
    shell.run(""rename ARC "" .. pRename)
  end
end
tc(colors.white)
fs.makeDir(""ARC"")
print(""Successfully added directory 'ARC'"")

--Download Advanced Redstone Control (use getProgram function)
print(""Downloading program 'Advanced Redstone Control' (ARC)..."")
if getProgram(""2ZPhx6ec"", ""ARC/ARC"") then
  print(""Success"")
else
  tc(colors.red)
  print(""Could not download. Is the resource pack installed?"") -- Adjust message based on approach
  return
end

--Download Config Editor (use getProgram function)
print(""Downloading program 'Config Editor' (configeditor)..."")
if getProgram(""cKunvkD2"", ""ARC/configeditor"") then
  print(""Success"")
else
  tc(colors.red)
  print(""Could not download. Is the resource pack installed?"") -- Adjust message based on approach
  return
end

--Make Shortcut for Advanced Redstone Control
print(""Downloading shortcut (rc)..."")
if fs.exists(""rc"") then
  tc(colors.orange)
  print(""rc program already exists. Renaming..."")
  local pRename = ""rc""
  repeat
    pRename = pRename .. ""~""
  until not fs.exists(pRename)
  tc(colors.white)
  print(""Renamed rc to "" .. pRename)
  shell.run(""rename rc "" .. pRename)
end
if getProgram(""y2pZUC3c"", ""rc"") then
  print(""Success"")
else
  tc(colors.red)
  print(""Could not download. Is the resource pack installed?"")
end
"
STRa2AKW,плохая дейкстра,hpnq,C++,Sunday 26th of May 2024 10:26:11 AM CDT,"#include ""bits/stdc++.h""
//speed coding handle

#define mp make_pair
#define cve(tpy) for (auto i : tpy) {for(auto j : i){cout << j << "" "";  }cout << ""\n"";} ;
#define f first
#define s second
#define loop(i, x, n) for (int i = x; i < n; i++)
#define joop(x, n) for (ll j = x; j < n; j++)
#define lp(n) for (ll i = 0; i < n; i++)
#define err cout << ""ERROR"" << endl;
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(x) x.size()
#define rndm rng()

// types
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
typedef long long ll;
typedef long double ld;

// types of data
#define inf 1000000000
#define infll 1000000000000000000
#define INF ll(1e9)

#define md 998244353
#define mod 1000000009
//#define K 239017

#define DEBUG 1
using namespace std;
mt19937_64 rng(113113);
uniform_int_distribution<ll> drist;
//const int INF = std::numeric_limits<int>::max();

const int MAX_N = 50;

int N, m; // количество локаций
float graph[MAX_N][MAX_N]; // матрица смежности
float speed[3]; // скорости роботов

void dijkstra(int start, float dist[], float r_speed, int prev[]) {
    bool visited[MAX_N] = {false};
//    loop(i, 0, MAX_N){
//        cout << visited[i] << "" "";
//    }
    cout << ""\n"";
    prev[start] = start;
    for (int i = 0; i < N; ++i) {
        dist[i] = INF;
    }
    dist[start] = 0;

    for (int i = 0; i < N; ++i) {
        int u = -1;
        for (int j = 0; j < N; ++j) {
            if (!visited[j] && (u == -1 || dist[j] < dist[u])) {
                u = j;
            }
        }
//        cout << ""u: "" << u << endl;
        if (dist[u] == INF) break;
        visited[u] = true;

        for (int v = 0; v < N; ++v) {
//            if(v == 2){
//                cout << ""u: "" << u << "" g: "" <<  graph[u][v] << endl;
//            }
            if (graph[u][v] && dist[u] + graph[u][v] / r_speed < dist[v]) {
                dist[v] = dist[u] + graph[u][v]/r_speed;

//                cout << ""u: "" << u << "" v: "" << v << endl;
                prev[v] = u;
            }
        }
    }
}
int I[3];
void input(){
    cin >> N >> m;

    for(int i = 0; i < N; ++i) {
        for(int j = 0; j < N; ++j) {
            cin >> graph[i][j];
        }
    }
    loop(i, 0, m){
        cin >> I[i];
    }
    loop(i, 0, m){
        cin >> speed[i];
    }


}

void solve(){
    input();
    float mind = -1;
    int prev[3][MAX_N];
    float d[3][MAX_N];
    loop(i, 0, 3){
        loop(j, 0, MAX_N){
            prev[i][j] = 0;
            d[i][j] = inf;
            cout << d[i][j] << "" "";
        }
        cout << ""\n"";
    }
    loop(i, 0, N){
        loop(j, 0, N){
            cout << graph[i][j] << "" "";
        }
        cout << ""\n"";

    }
//    cout << ""m: "" << m << endl;
    loop(i, 0, m){
        dijkstra(I[i], d[i], speed[i], prev[i]);
    }
    cout << ""prev: \n"";
    loop(i, 0, m){
        loop(j, 0, N){
            cout << prev[i][j] << "" "";
        }
        cout << ""\n"";
    }
    cout << ""\ndist: \n"";
    loop(i, 0, m){
        loop(j, 0, N){
            cout << d[i][j] << "" "";
        }
        cout << ""\n"";
    }
    loop(p, 0, N) {
        float t[3];
        float middleware = 1;

        loop(i, 0, m){
            float dis = d[i][p];
            t[i] = dis;
            middleware = max(middleware, dis);
        }
//        if(t[0] == t[1] or t[0] == t[2] or t[1] == t[2]){
//            mind = min(mind, middleware);
//            err
//            cout << t[0] << "" "" << t[1] << "" "" << t[2] << endl;
// // ------------------------------------ ? -------------------------
//        }
        float w = inf;
        loop(i, 0, m){
            loop(j, 0, m){
                if(i != j){ // перебираю всех разных роботов
//                    cout << p << "" "" << prev[i][p] << "" i: "" << i << endl;
                    // проверка если столкнутся на дороге
//                    if(graph[p][prev[i][p]] == 0 or graph[prev[i][p]][p] == 0 or graph[prev[j][p]][p] == 0){
//                        cout << ""Never met\n"";
//                        cout << graph[p][prev[i][p]] << "" "" << prev[i][p] ;
//                        return;
//                    }
                    if(d[i][I[j]] == inf){
                        cout << ""Never met"";
                        return;
                    }
                    if(d[i][prev[i][p]] == d[j][p] and graph[p][prev[i][p]] != 0){
                        // если стояли рядом и их путь одинаковый
//                        err
                        w = min(w, d[j][p] + graph[p][prev[i][p]]/(speed[j] + speed[i]));
                        if(mind == 0){
                            cout << ""mind = 0\n"";
                            cout << d[j][p] << "" "" << graph[p][prev[i][p]] << '\n';
                        }
                    }
                    // проверка если столкнутся на пункте
                    if(d[i][prev[i][p]] == d[j][prev[j][p]] and graph[prev[i][p]][p] != 0 and graph[prev[j][p]][p] != 0){
                        cout << ""dist len: "" << d[i][p] + d[j][p] << endl;
                        w = min(w, d[i][prev[i][p]] + (graph[prev[i][p]][p] + graph[prev[j][p]][p]) / (speed[j] + speed[i]) );
                    }
                }
                if(w != inf){
                    mind = max(mind, w);

                }
            }
        }

    }
    if(mind == inf){
        cout << ""Never meet\n"";
        return;
    }
    cout << ""Min time for robots:"" << mind << endl;
}
int main() {
    freopen(""text.txt"", ""r"", stdin);
    solve();
    return 1;
}
"
MxqG3rYh,BLACK OK very GOOD VK with shuffle WORST BEST PREDICTION PAIR,max2201111,Python,Sunday 26th of May 2024 10:05:07 AM CDT,"# Navod na pouziti, Mgr. Hynek Mlčoušek, v Brne 2.5.2024
# Ulozte do lokalniho souboru u sebe na PC data tohoto tvaru vzdy ukoncene 0 ci 1 (jde o uceni s ucitelem: 1 = nemocny, 0 = prezil/zdravy, ve vystupu bude zelena znacit 0, cervena 1) a bez znaku #; pozor na "",""

# [ [23.657800719276743,18.859916797201468,0],
# [22.573729142097473,17.96922325097786,0],
# [32.55342396968757,29.463651408558803,0],
# [6.718035041529263,25.704665468161718,1],
# [14.401918566243225,16.770856492924658,0],
# [17.457907312962234,21.76521470574044,0],
# [20.02796946568093,73.45445954770891,1],
# [30.295138369778076,62.901112886193246,1],
# [15.128977804449633,32.40267702110393,0],
# [30.179457395820013,58.982492125646104,1],
# [28.01649701854089,63.92781357637711,1],
# [16.791838457871147,42.33482314089884,0],
# [10.583694293380976,19.61926728942497,0],
# [26.634447074406467,91.96624817360987,1],
# [26.217868623367643,36.400293587062976,0],
# [17.689396788624936,60.79797114006423,1],
# [33.17193822527976,66.75277364959176,1],
# [23.793952755709153,22.57501437360518,0]]

# kliknete na cerne tlacitko s trojuhelnickem vlevo nahore
# pod kodem se objevi moznost spustit dialogove okenko, kliknete na nej
# soubor, ktery mate z bodu vyse vyberte a nahrajte
# Najdete v tomto kodu retezec:
###ZDE VLOZTE DATA OD NOVYCH PACIENTU

# Vlozte do pole
# new_persons_results = []
# data o nekolika malo novych pacientech bez ukoncovaci 0 a 1, ale se stejnym poctem sloupcu jako ma soubor z Vaseho lokalniho disku, vyse by tedy toto bylo rovno 2
# kod vyhodi hned po natrenovani, (jehoz prubeh muzete sledovat na modre progres bare) pro kazdy radek z new_persons_results bilo-sedo-cerne ctverecky vznikle z normalizace poskytnutych dat a ukoncovaci ctverecek cerveny pripadne zeleny
# zaroven s tim se vypise realne cislo mezi 0 a 1 znacici jak moc je pacient zdravy (blizke 0) ci nemocny (blizke 1)
# cisla uprostred pak indikuji zadany oranzovy semafor.
# je na lekarich nastavit tresholdy (tedy pravdepodobnosti: cisla mezi 0 a 1) ktere pak daji zaver, zda je pacient cerveny, oranzovy ci zeleny

# prosim o komnetare a vysledky na realnych datech, je zadouci aby radku v matici, tedy pacientu byly stovky a sloupcu desitky
# Moznosti vyuziti: onkologicka diagnoza vs. zdrava kontorlni skupina, diabetes (pritomnost/nepritomnost), testovani noveho leku oproti placebu atd.

# kod zaroven vyhodi confusion matici, tedy mozne True Negative a False Positive plus spravne zarazene hodnoty spolu s presnosti, F1 score recall atd.
# poznamka ke kodu: jde o epxerimentalni verzi, ktera krome skutecne potrebneho kodu obsahuje ladici informace, ruzne duplicity, nadbytecne prikazy atd.
# Na uvod behu programu se pro kontorlu vypise poskytnuta matice a jeji normalizovana verze, je treba sjet jezdcem napravo nize na obrazky a dalsi vystupy

# Dekuji profesoru Petru Dostalovi za namet k teto praci a poskytnuta data, byt je potreba mit data realna

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm import tqdm
from IPython.display import display
from IPython.display import Javascript
display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))

label_colors = {0: [0, 128, 0], 1: [255, 0, 0]}
label_colors_testing = {0: [0, 128, 0], 1: [255, 0, 0]}

%matplotlib inline

# Function to create images based on predictions
def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use the specified color for the last column based on the label
        image[i, -1] = label_colors[predictions[i]]

    return image

def create_imageN(data, predictions, label_colors=None):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    data_array = np.array(data)  # Convert data to a NumPy array

    for i in range(num_rows):
        for j in range(num_columns - 1):  # Exclude the last column for now
            # Map data values to the full range of 0 to 255
            pixel_value = int(np.interp(data_array[i, j], [np.min(data_array[:, j]), np.max(data_array[:, j])], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use the specified color for the last column based on the label
        if label_colors is not None:
            image[i, -1] = label_colors[predictions[i]]
        else:
            # If label_colors is not provided, set the last column to grayscale
            pixel_value = int(np.interp(predictions[i], [0, 1], [0, 255]))
            image[i, -1] = np.array([pixel_value] * 3)

    return image

# Load data from a file
from google.colab import files
uploaded = files.upload()

# Tento kód otevře dialogové okno pro výběr souboru z vašeho počítače.
import io
import pandas as pd

# Předpokládáme, že jste nahráli CSV soubor
for fn in uploaded.keys():
    print('User uploaded file ""{name}"" with length {length} bytes'.format(name=fn, length=len(uploaded[fn])))
    path = io.BytesIO(uploaded[fn])  # Pro soubory, které potřebují být čteny jako binární objekty
    df = pd.read_csv(path)
    print(df.head())  # Vypíše prvních pět řádků DataFrame

all_results = []
import os
import shutil
import ast

for filename in uploaded.keys():
    original_path = f""/content/{filename}""
    destination_path = os.path.join(""/content/"", ""/content/DATA2"")
    shutil.move(original_path, destination_path)
    print(f""Soubor {filename} byl přesunut do {destination_path}"")

file_path = '/content/DATA2'  # Cesta k souboru
with open(file_path, 'r') as file:
    code = file.read()

A_list = ast.literal_eval(code)

# Převod na NumPy pole
A = np.array(A_list)

# Assign values to variables dynamically based on the rows of matrix A
for i, row in enumerate(A, start=1):
    globals()[f""person{i}_results""] = list(row)

# Print the assigned variables
for i in range(1, len(A) + 1):
    all_results.append(f""person{i}_results"")

result_variables = []

# Loop through the variable names and get the corresponding variables using globals()
for var_name in all_results:
    result_variables.append(globals()[var_name])

# Now, result_variables contains the variables with names specified in variable_names
all_results = result_variables
new_persons_results = result_variables

# Extract the last column (0 nebo 1) as labels
labels = [results[-1] for results in all_results]

# Remove the last column from the dataset
data = [results[:-1] for results in all_results]

# Define the number of rows for training and testing
num_training_rows = 100
num_testing_rows = 100

# Split the data into training and testing datasets
X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_testing_rows], labels[:num_training_rows], labels[:num_testing_rows]

# Normalize the training data
min_values = np.min(X_train, axis=0)
max_values = np.max(X_train, axis=0)
X_train_normalized = (X_train - min_values) / (max_values - min_values)

# Normalize the testing data using the min and max values of the training data
X_test_normalized = (X_test - min_values) / (max_values - min_values)

# Print normalized training data
print(""Normalized Training Data:"")
print(X_train_normalized)
print(""Adenormalized"", X_train_normalized * (max_values - min_values) + min_values, ""Bdenormalized"")

# Define a simple neural network model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu', input_shape=(len(X_train[0]),)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Lists to store accuracy values
accuracy_history = []

# Create images for the training data
image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)

min_pixel_value = np.min(X_train_normalized)
max_pixel_value = np.max(X_train_normalized)

# Populate image_training with consistent gray and red/green colors based on the labels in the last column
for i, label in enumerate(y_train):
    for j in range(len(X_train[0])):
        pixel_value = int(np.interp(X_train_normalized[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])

### ZDE VLOZTE DATA OD NOVYCH PACIENTU

# Train the model for 400 epochs
epochs = 138

import sys

# Function to find the best pair of values
def find_best_pair(min_val, max_val, num_features, model, min_values, max_values):
    best_pair = None
    best_prediction = 0
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_normalized = (new_data - min_values) / (max_values - min_values)
        
        # Potlačení výstupů modelu
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_normalized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction > best_prediction:
            best_prediction = prediction
            best_pair = new_data
    return best_pair, best_prediction

def find_worst_pair(min_val, max_val, num_features, model, min_values, max_values):
    worst_pair = None
    worst_prediction = 1
    for _ in range(1000):  # Number of iterations to find the best pair
        new_data = np.random.uniform(min_val, max_val, num_features)
        new_data_normalized = (new_data - min_values) / (max_values - min_values)
        
        # Potlačení výstupů modelu
        tf.get_logger().setLevel('ERROR')
        with tf.device('/CPU:0'):  # Ensure to run on CPU to minimize unwanted logs
            prediction = model.predict(np.array([new_data_normalized]), verbose=0)[0][0]
        tf.get_logger().setLevel('INFO')
        
        if prediction < worst_prediction:
            worst_prediction = prediction
            worst_pair = new_data
    return worst_pair, worst_prediction

# Potlačení nadbytečných výstupů modelu
tf.get_logger().setLevel('ERROR')
tf.autograph.set_verbosity(0)

for epoch in tqdm(range(epochs)):
    history = model.fit(X_train_normalized, np.array(y_train), epochs=1, verbose=0, shuffle=True)
    accuracy_history.append(history.history['accuracy'][0])

    if epoch == 1:
        # Normalize the testing data
        X_test_normalized = (X_test - min_values) / (max_values - min_values)
        y_pred_after_2nd_epoch = model.predict(X_test_normalized, verbose=0)
        y_pred_binary_after_2nd_epoch = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch]
        image_testing_before_2nd_epoch = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch)

    if epoch >= epochs-1:
        print(f""HERE HERE Epoch: {epoch}, Epochs: {epochs}\n"")
        sys.stdout.flush()

        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=1):
            # Ensure that personNEW_results has the same number of features as the model expects
            if len(personNEW_results) != len(X_train[0]):
                # Potlač chybové zprávy o nevyhovujícím počtu funkcí
                continue

            personNEW_results_normalized = (np.array(personNEW_results) - min_values) / (max_values - min_values)

            personNEW_prediction = model.predict(np.array([personNEW_results_normalized]), verbose=0)[0][0]
            personNEW_label = 1 if personNEW_prediction >= 0.5 else 0
            y_pred_after_50_epochs = model.predict(X_test_normalized, verbose=0)
            y_pred_binary_after_50_epochs = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs]
            image_testing_after_50_epochs = create_image(X_test_normalized, y_pred_binary_after_50_epochs)

            # Create an image for the new person
            image_personNEW = create_imageN([personNEW_results_normalized], [personNEW_label], label_colors)

            # Display the images
            plt.figure(figsize=(5, 5))
            plt.imshow(image_personNEW)
            plt.title(f""New Person {idx}\nLabel: {personNEW_label}, Prediction: {personNEW_prediction}"")
            plt.axis(""off"")
            plt.show()

# Find the best pair of values to add to new_persons_results
best_pair, best_prediction = find_best_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)
new_persons_results.append(best_pair)

worst_pair, worst_prediction = find_worst_pair(min_values, max_values, len(X_train[0]), model, min_values, max_values)
new_persons_results.append(worst_pair)


print(f""Best Pair: {best_pair}, Best Prediction: {best_prediction}"")

print(f""Worst Pair: {worst_pair}, Worst Prediction: {worst_prediction}"")

# Display the images
plt.figure(figsize=(25, 15))
plt.subplot(2, 2, 1)
plt.imshow(image_training)
plt.title(""Training Data"")
plt.axis(""off"")

plt.subplot(2, 2, 2)
plt.imshow(image_testing_before_2nd_epoch)
plt.title(""Testing Data (2nd Epoch)"")
plt.axis(""off"")

plt.subplot(2, 2, 3)
plt.imshow(image_testing_after_50_epochs)
plt.title(f""Testing Data ({epochs} Epochs)"")
plt.axis(""off"")

plt.subplot(2, 2, 4)
plt.imshow(image_personNEW)
plt.title(f""New Person\nLabel: {personNEW_label},[{personNEW_prediction}]"")
plt.axis(""off"")

# Plot accuracy history
plt.figure(figsize=(12, 5))
plt.plot(range(1, epochs + 1), accuracy_history, marker='o')
plt.title('Accuracy Over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.grid()

# Print normalized data
print(""Normalized PersonNEW Data:"")
print(personNEW_results_normalized)

plt.show()

print(""X_train before normalization:"")
print(X_train)
print(""X_test before normalization:"")
print(X_test)

import seaborn as sns

print(""KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"")
print(X_test)
print(""HHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"")
print(X_train)
print(""LLLLLLLLLLLLLLLLLLLLLLLLLLLLL"")

from sklearn.metrics import confusion_matrix
from tensorflow.keras.utils import to_categorical

np.set_printoptions(threshold=np.inf, precision=4, suppress=True)

# Generate predictions from the model
predictions = (model.predict(X_test_normalized, verbose=0) > 0.5).astype(int)

# Convert y_test to a numpy array and then to binary labels
y_test_array = np.array(y_test)  # Convert y_test to a numpy array
y_test_binary = (y_test_array > 0.5).astype(int)  # Convert to binary

# Compute the confusion matrix
conf_matrix = confusion_matrix(y_test_binary, predictions)

# Evaluate the model's performance
accuracy = accuracy_score(y_test_binary, predictions)
precision = precision_score(y_test_binary, predictions)
recall = recall_score(y_test_binary, predictions)
f1 = f1_score(y_test_binary, predictions)

# Display the confusion matrix
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

print(f""Accuracy: {accuracy:.4f}"")
print(f""Precision: {precision:.4f}"")
print(f""Recall: {recall:.4f}"")
print(f""F1 Score: {f1:.4f}"")

print(f""Confusion Matrix:\n{conf_matrix}"")"
Py8MP0Mq,step motor_V4.1,bipping,C++,Sunday 26th of May 2024 09:43:58 AM CDT,"#include <avr/interrupt.h>
#include <Arduino.h>
#include <Wire.h>
#include <rgb_lcd.h>
#include <EEPROM.h>
#include <string.h>
#include <avr/sleep.h>
#include <avr/wdt.h>

//#define SDA A4
//#define SLC A5
// Constantes pour les notes jouées par le buzzer
#define NOTE_CS6 1109 
#define NOTE_DS6 1245

// Variables globales pour les valeurs RGB de la LED
const uint8_t VAL_RGB_R = 255;                            // Valeur R pour LED RGB
const uint8_t VAL_RGB_G = 0;                              // Valeur G pour LED RGB
const uint8_t VAL_RGB_B = 0;                              // Valeur B pour LED RGB

// Broches utilisées par le système
const uint8_t PIN_SWITCH = 2;                             // interrupteur à bascule
const uint8_t PIN_PWM_OUT = 3;                            // driver le ventilateur 
const uint8_t PIN_COURANT_COUPURE = 4;                    // détecte une coupure de courant
const uint8_t PIN_LED_ROUGE = 5;                          // LED PIN_LED_ROUGE
const uint8_t PIN_LED_ORANGE = 6;                         // LED PIN_LED_ORANGE
const uint8_t PIN_LED_VERT = 7;                           // LED PIN_LED_VERTE
const uint8_t PIN_MOTEUR_DIR = 8;                         // direction du moteur
const uint8_t PIN_MOTEUR_ENA = 9;                         // activer/désactiver le frein du moteur
const uint8_t PIN_MOTEUR_PUL = 10;                        // impulsions/vitesse du moteur
const uint8_t PIN_BUZZER = 11;                            // Buzzer
const uint8_t PIN_POTARD = A0;                            // potentiometre
const uint8_t PIN_PWM_IN = A7;                            // Lecture de la température

// Intervalles de temps pour les actions en microsecondes
const uint32_t INTERVAL_BASE = 3129;                      // interval de temps de base de 3129 µS pour une action

const uint32_t INTERVAL_MS_3 = 3;                         // interval de temps de base
const uint32_t INTERVAL_MS_10 = 10;                       // 10 ms
const uint32_t INTERVAL_MS_20 = 20;                       // 20 ms
const uint32_t INTERVAL_MS_39 = 39;                       // 39 ms
const uint32_t INTERVAL_MS_250 = 250;                     // 250 ms
const uint32_t INTERVAL_MS_500 = 500;                     // 500 ms
const uint32_t INTERVAL_S_1 = 1000;                       // 1 s
const uint32_t INTERVAL_S_10 = 10000;                     // 10 s

const uint32_t LIMITEPASMAX = 120000;                     // Nombre maximal de pas du moteur

uint16_t potard;
uint8_t ledPIN_LED;                              // Broche de la LED
volatile uint32_t nombreDePas = 0;                        // Compteur de pas du moteur
bool estCoupureCourant;                          // Vérifie si une sauvegarde est nécessaire lors d'une coupure de courant
volatile bool direction;                                  // état virtuel de PIN_MOTEUR_DIR
bool etatSwitch = false;                         // État virtuel de l'interupteur, défini sur enclancher (false)
volatile bool blackout = false;                           // Flag pour indiquer une coupure de courant
uint32_t LCD_interval = INTERVAL_MS_500;

// Motif personnalisé pour l'écran LCD
byte L[8] = { 0b00000, 0b11000, 0b01100, 0b00100, 0b01100, 0b10010, 0b10001, 0b00000 }; // Motif personnalisé pour écran LCD

// Énumération pour les différents états
enum Etat {
  ETAT_DEMARAGE, 

  ETAT_ORIGINE_INITIALIZATION,
  ETAT_ORIGINE_MAIN,

  ETAT_AVANCE_INITIALIZATION,
  ETAT_AVANCE_MAIN,

  ETAT_TRANSITION_AVANCE_TOGGLE,

  ETAT_TOGGLE_MAIN,
  ETAT_TOGGLE_CHECKEXITCONDITION,

  ETAT_TOGGLE_RECUPERATION,

  ETAT_FAIL
};

Etat etatActuel;                                          // Variable stockant l'état actuel du système

typedef void (*CallbackFunction)();                       // Définir un type de fonction de rappel

// Structure pour représenter une tâche
struct Task {
  void (*function)();    // Pointeur vers la fonction
  uint32_t interval;     // Intervalle d'appel en microsecondes
  uint32_t lastRunTime;  // Dernière exécution en microsecondes
  bool active;           // État d'activation de la tâche
};

// Structure pour représenter une tâche dans la file d'attente
struct TaskQueue {
  void (*function)();    // Pointeur vers la fonction
  uint32_t runTime;      // Temps d'exécution prévu
};

// Déclaration des fonctions gérées
void updateSwitchState();
void temperature();
void LCD_update();
void updatePotard();
void checketatSwitch();
void toggleBuzzer();
void modulate_PIN_LED();
//void toggle_PIN_MOTOR();


// Déclaration des tâches
Task tasks[] = {
  {updateSwitchState, INTERVAL_MS_20, 0, true},
  {temperature, INTERVAL_MS_39, 0, true},
  {LCD_update, INTERVAL_MS_500, 0, false},
  {updatePotard, INTERVAL_MS_250, 0, false},
  {checketatSwitch, INTERVAL_MS_500, 0, false},
  {toggleBuzzer, INTERVAL_MS_500, 0, false},
  {modulate_PIN_LED, INTERVAL_MS_10, 0, false}
  //{toggle_PIN_MOTOR, INTERVAL_BASE, 0, false}
};

// Nombre de tâches
const uint8_t numTasks = sizeof(tasks) / sizeof(tasks[0]);

// File d'attente pour les tâches
TaskQueue taskQueue[10];
uint8_t queueSize = 0;

rgb_lcd display; // Objet d'affichage LCD

ISR(TIMER4_OVF_vect) {
  noInterrupts(); // Désactive les interruptions  
  direction ? nombreDePas-- : nombreDePas++; // Décrémente ou incrémente le compteur de pas
  interrupts(); // Réactive les interruptions
}

void enableTimer4() {
  TIMSK4 |= (1 << OCIE4A); // Activer l'interruption de comparaison pour OCR4A
}

void disableTimer4() {
  TIMSK4 &= ~(1 << OCIE4A); // Désactiver l'interruption de comparaison pour OCR4A
}


void setTimer4Interval(uint32_t intervalMicros) {
  // Arrêter le Timer4
  TCCR4B &= ~(1 << CS40);

  // Calculer la nouvelle valeur de comparaison (OCR4A) pour générer une interruption toutes les `intervalMicros` microsecondes
  ICR4 = (16 * intervalMicros) - 1;

  // Redéfinir le duty cycle à 50%
  OCR4B = ICR4 / 2;

  // Redémarrer le timer avec un prescaler de 1
  TCCR4B |= (1 << CS40);
}

// Sauvegarde les données essentielles dans EEPROM en cas de coupure de courant
void interruptionCoupure() {
  blackout = true;                                        // Indique une coupure de courant
}

// Récupération des données après une coupure de courant
void recuperation() {
  uint32_t step;

  // Récupère le nombre de pas de EEPROM
  EEPROM.get(0, step);                                  
  nombreDePas = step;

  // Réinitialise le flag de coupure de courant dans l'EEPROM
  EEPROM.update(4, false); 
}// Fin de recuperation

//sauvgarde les données importante si coupure detecter, arrete le programme 
void checketatFail() {
  if(blackout || etatActuel == ETAT_FAIL){
    cli();                                                // Désactive les interruptions globales.
    wdt_disable();                                        // Désactive le watchdog timer

    bool spin =  estCoupureCourant;
    uint32_t step = nombreDePas;

    // Sauvegarde le nombre de pas et l'état de coupure de courant dans l'EEPROM
    EEPROM.update(0, step);                               // Sauvegarde le nombre de pas
    EEPROM.update(4, spin);                               // Réinitialise le flag de coupure de courant

    // Désactive les sorties et signale l'état d'urgence
    digitalWrite(PIN_MOTEUR_PUL, LOW);                    // Désactive les impulsions
    digitalWrite(PIN_MOTEUR_ENA, HIGH);                   // Désactive le frein du moteur
    digitalWrite(PIN_LED_ROUGE, HIGH);                    // Allume la LED rouge 
    LCD_Update_FAIL();
    tone(PIN_BUZZER, NOTE_CS6, 1000);                     // Joue la note CS6

    // Boucle d'arrêt d'urgence
    while(true) {
      delay(4294967295);                                  // Bloque le système indéfiniment
    }                                                     
  }
}

void executeTaskQueue() {
  uint32_t currentTime = millis();  // Utiliser millis() pour une précision en millisecondes
  for (uint8_t i = 0; i < queueSize; i++) {
    if (taskQueue[i].runTime <= currentTime) {
      taskQueue[i].function();
      // Retirer la tâche de la file d'attente
      for (uint8_t j = i; j < queueSize - 1; j++) {
        taskQueue[j] = taskQueue[j + 1];
      }
      queueSize--;
      i--;  // Ajuster l'indice pour la prochaine itération
    }
  }
}

void addTaskToQueue(void (*function)(), uint32_t runTime) {
  if (queueSize < sizeof(taskQueue) / sizeof(taskQueue[0])) {
    taskQueue[queueSize].function = function;
    taskQueue[queueSize].runTime = runTime;
    queueSize++;
  }
}

void manageTask() {
  uint32_t currentTime = millis();  // Obtenir le temps actuel en millisecondes
  uint32_t nextTime = UINT32_MAX;   // Initialise le prochain temps d'exécution avec un maximum
  const uint32_t margin = 1;       // Marge de sécurité en millisecondes
  
  // Parcourir les tâches pour trouver celles à ajouter à la file d'attente
  for (uint8_t i = 0; i < numTasks; i++) {
    if (tasks[i].active) {
      uint32_t scheduledTime = tasks[i].lastRunTime + tasks[i].interval; // L'intervalle est en millisecondes
      if (scheduledTime <= currentTime) {
        // Ajouter la tâche à la file d'attente
        addTaskToQueue(tasks[i].function, currentTime);
        // Mettre à jour le dernier temps d'exécution
        tasks[i].lastRunTime = currentTime;
        scheduledTime = currentTime + tasks[i].interval;  // Reprogrammer la prochaine exécution
      }
      // Mettre à jour le prochain temps d'exécution global
      if (scheduledTime < nextTime) {
        nextTime = scheduledTime;
      }
    }
  }

  // Calculer le temps jusqu'à la prochaine tâche
  uint32_t timeToNextTask = nextTime - millis();
  if (timeToNextTask > margin) {
    timeToNextTask -= margin;  // Appliquer la marge de sécurité
  } else {
    timeToNextTask = 0;  // Éviter les valeurs négatives
  }

  // Mettre en sommeil l'Arduino jusqu'à la prochaine tâche si aucune tâche n'est dans la file d'attente
  if (queueSize == 0 && timeToNextTask > 0) {
    delay(timeToNextTask);
  }
} // Fin de manageTask

void activateTask(void (*function)()) {
  for (uint8_t i = 0; i < numTasks; i++) {
    if (tasks[i].function == function) {
      tasks[i].active = true;
      break;
    }
  }
}

void deactivateTask(void (*function)()) {
  for (uint8_t i = 0; i < numTasks; i++) {
    if (tasks[i].function == function) {
      tasks[i].active = false;
      break;
    }
  }
}

void setTaskInterval(void (*function)(), uint32_t newInterval) {
  for (uint8_t i = 0; i < numTasks; i++) {
    if (tasks[i].function == function) {
      tasks[i].interval = newInterval;
      break;
    }
  }
}

void LCD_Update_FAIL() {
  display.clear();
  display.setCursor(0, 0);
  display.print(""Erreur"");
  display.setCursor(0, 1);
  display.print(""Veuillez redemarrer"");
  display.display();
}

void LCD_Update_DEMARAGE() {
  display.clear();
  display.setCursor(0, 0);
  display.print(""Mauvaise position"");
  display.setCursor(0, 1);
  display.print(""Enclancher l'interrupteur"");
  display.display();
}

void LCD_Update_Steps() {
  static uint32_t lastSteps = -1;

  if (lastSteps != nombreDePas) {
    display.setCursor(8, 1);
    display.print(nombreDePas);
    lastSteps = nombreDePas;
    LCD_interval = INTERVAL_MS_500;
  }
  display.display();
}

void LCD_Update_Potard() {
  static uint16_t lastPotValue = -1;

  if (lastPotValue != potard) {
    display.setCursor(10, 1);
    display.print(potard);
    lastPotValue = potard;
    LCD_interval = INTERVAL_MS_500;
  }
  display.display();
}

void LCD_update() {
  static Etat lastEtat = ETAT_DEMARAGE; // Initialiser avec un état par défaut
  
  // Mettre à jour l'affichage complet uniquement si l'état a changé
  if (lastEtat != etatActuel) {
    switch (etatActuel) {
      case ETAT_DEMARAGE:
        LCD_Update_DEMARAGE();
        break;
    case ETAT_ORIGINE_INITIALIZATION:
        display.clear();
        display.setCursor(0, 0);
        display.print(""Origine"");
        display.setCursor(0, 1);
        display.print(""Lambda: "");
        break;
      case ETAT_ORIGINE_MAIN:
        LCD_Update_Potard();
        break;
      case ETAT_AVANCE_INITIALIZATION:
        display.clear();
        display.setCursor(0, 0);
        display.print(""Avance"");
        display.setCursor(0, 1);
        display.print(""Lambda: "");
        break;
      case ETAT_AVANCE_MAIN:
        LCD_Update_Steps();
        break;
      case ETAT_TRANSITION_AVANCE_TOGGLE:
        display.clear();
        display.setCursor(0, 0);
        display.print(""Toggle"");
        display.setCursor(0, 1);
        display.print(""Lambda: "");
        break;
      case ETAT_TOGGLE_MAIN:
        LCD_Update_Steps();
        break;
      case ETAT_FAIL:
        LCD_Update_FAIL();
        break;
      default:
        display.clear();
        display.setCursor(0, 0);
        display.print(""Etat: "");
        display.print(etatActuel);
        break;
    }
    lastEtat = etatActuel;
    display.display();
    setTaskInterval(LCD_update, INTERVAL_MS_500);
    LCD_interval = INTERVAL_MS_500;
  }else{
    LCD_interval = INTERVAL_MS_3 + LCD_interval;
    if(LCD_interval <= INTERVAL_S_1 ){
      setTaskInterval(LCD_update, LCD_interval);
    }else{
      setTaskInterval(LCD_update, INTERVAL_S_1); //
    }
  }
  // Appeler les mises à jour spécifiques pour les états MAIN
  switch (etatActuel) {
    case ETAT_ORIGINE_MAIN:
      LCD_Update_Potard();
      break;
    case ETAT_AVANCE_MAIN:
      LCD_Update_Steps();
      break;
    case ETAT_TOGGLE_MAIN:
      LCD_Update_Steps();
      break;
    default:
      // Pas de mise à jour spécifique nécessaire
      break;
  }
} // Fin de LCD_update

void setup() {
  cli();                                                  // Désactive les interruptions globales pour la configuration initiale
  Serial.begin(115200);                                   // Démarre la communication série à 115200 bps
  display.begin(16, 2);                                   // Initialise l'écran LCD avec 16 colonnes et 2 lignes
  display.setRGB(VAL_RGB_R, VAL_RGB_G, VAL_RGB_B);        // Définit la couleur de rétroéclairage de l'écran LCD
  display.print(""initialization"");                        // Affiche le message d'initialisation sur l'écran LCD

  // Configuration des pins pour les LEDs et les sorties
  pinMode(PIN_LED_ORANGE, OUTPUT);                        // Config. la LED orange en sortie
  pinMode(PIN_LED_VERT, OUTPUT);                          // Config. la LED verte en sortie
  pinMode(PIN_LED_ROUGE, OUTPUT);                         // Config. la LED rouge en sortie

  // Configuration des pins pour les entrées
  pinMode(PIN_PWM_IN, INPUT);                             // Définit le pin A7 comme entrée pour la temperature
  pinMode(PIN_POTARD, INPUT);                             // Définit le pin A0 comme entrée pour le potentiomètre
  pinMode(PIN_SWITCH, INPUT_PULLUP);                      // Active la résistance de pull-up sur le pin du bouton
  pinMode(PIN_MOTEUR_DIR, OUTPUT);                        // Config. la direction du moteur en sortie
  pinMode(PIN_MOTEUR_PUL, OUTPUT);                        // Config. le pin de pulsation du moteur en sortie
  pinMode(PIN_MOTEUR_ENA, OUTPUT);                        // Config. le pin d'activation du moteur en sortie
  pinMode(PIN_BUZZER, OUTPUT);                            // Config. le pin du buzzer en sortie
  pinMode(PIN_PWM_OUT, OUTPUT);                           // Config. le pin 
  pinMode(PIN_COURANT_COUPURE, INPUT_PULLUP);             // Active la résistance de pull-up pour la coupure de courant

  // Configuration initiale de l'état des sorties
  digitalWrite(PIN_BUZZER, LOW);                          // Éteint le buzzer
  digitalWrite(PIN_SWITCH, HIGH);                         // Initialise le PIN_SWITCH à l'état haut
  digitalWrite(PIN_LED_VERT, HIGH);                       // Allume la LED verte
  digitalWrite(PIN_LED_ORANGE, HIGH);                     // Allume la LED orange
  digitalWrite(PIN_LED_ROUGE, HIGH);                      // Allume la LED rouge

  // Signal sonore d'initialisation
  tone(PIN_BUZZER, NOTE_DS6, 500);                        // Joue un ton sur le buzzer
  delay(500);                                             // Attend 500 ms

  // Éteint toutes les LEDs après le signal sonore
  digitalWrite(PIN_LED_VERT, LOW);                        // Éteint la LED verte
  digitalWrite(PIN_LED_ROUGE, LOW);                       // Éteint la LED rouge
  digitalWrite(PIN_LED_ORANGE, LOW);                      // Éteint la LED orange

  // Vérifie et récupère l'état de coupure de courant depuis l'EEPROM
  bool spin = false;
  //EEPROM.get(4, spin);                       // Récupère l'état de coupure de courant de l'EEPROM
  estCoupureCourant = spin;

  // Configuration de l'état initial du programme
  etatActuel = (!estCoupureCourant) ? ETAT_DEMARAGE : ETAT_TOGGLE_RECUPERATION;

  // Configuration du Timer3
  TCCR3A = _BV(COM3A1) | _BV(WGM31); // Fast PWM, 10-bit
  TCCR3B = _BV(WGM33) | _BV(WGM32) | _BV(CS31); // Prescaler = 8
  ICR3 = 0x03FF; // Valeur TOP pour un PWM 10-bit

  // Configuration initiale du Timer4
  // Arrêter le Timer4
  TCCR4A = 0; 
  TCCR4B = 0;
  TCNT4  = 0;

  // Configuration du Timer4 en mode Fast PWM, 8 bits
  TCCR4A = _BV(COM4B1) | _BV(WGM41); // Clear OC4B on compare match, Fast PWM
  TCCR4B = _BV(WGM43) | _BV(WGM42) | _BV(CS40); // Fast PWM, prescaler = 1
  ICR4 = 0xFF; // Valeur TOP pour un PWM 8 bits

 // Calculer la nouvelle valeur de comparaison (ICR4) pour générer un PWM avec l'intervalle toutes les INTERVAL_BASE microsecondes
  ICR4 = (16 * INTERVAL_BASE) - 1; 

  // Fixer le duty cycle à 50%
  OCR4B = ICR4 / 2;

  // Activer l'interruption de débordement du Timer4
  TIMSK4 |= _BV(TOIE4);

  // Configuration des interruptions
  attachInterrupt(digitalPinToInterrupt(PIN_COURANT_COUPURE), interruptionCoupure, FALLING); // Interruption sur coupure de courant

  // Initial state configuration
  updatePotard();                                         // Initialise le potentiomètre
  updateSwitchState();                                    // Initialization de l'état de l'interupteur
  
  // Actions spécifiques en cas de coupure de courant
  if (estCoupureCourant){
    activateTask(checketatSwitch);
    activateTask(toggleBuzzer);
  }else{
  ledPIN_LED = PIN_LED_ORANGE; 
  activateTask(modulate_PIN_LED);  
  }

  delay(800);                                             // Court délai avant d'activer les interruptions et les tâches initiales


  // Activation des tâches initiales
  activateTask(LCD_update);
  activateTask(updateSwitchState);


// Configuration du watchdog timer
  wdt_enable(WDTO_500MS);                                 // Configure the watchdog to timeout after 500 ms

  sei();                                                  // Active les interruptions globales
}

void loop() {
  wdt_reset(); // Reset the watchdog timer regularly
  //updateSwitchState(); // est activé en permanance dans executeTaskQueue
  //LCD_Update(); // est activé en permanance dans executeTaskQueue

  switch (etatActuel) {
    case ETAT_DEMARAGE:
      //modulate_PIN_LED(PIN_LED_ORANGE);
      if(!etatSwitch) {
        etatActuel = ETAT_ORIGINE_INITIALIZATION;
      }
      break;
    case ETAT_ORIGINE_INITIALIZATION:
      // Initialisations pour l'état d'origine
      deactivateTask(toggleBuzzer);
      deactivateTask(modulate_PIN_LED);

      activateTask(updatePotard);

      digitalWrite(PIN_LED_ORANGE, LOW);                  // Éteint la LED orange
      digitalWrite(PIN_LED_ROUGE, HIGH);                  // Allume la LED rouge
      ledPIN_LED = PIN_LED_VERT;

      activateTask(modulate_PIN_LED);

      digitalWrite(PIN_MOTEUR_ENA, HIGH);                 // Désactive le frein du moteur

      tone(PIN_BUZZER, NOTE_CS6, 80);                     // Joue la note CS6
      delay(100);                                         // Pause de 100ms
      tone(PIN_BUZZER, NOTE_DS6, 80);                     // Joue la note DS6
      delay(100);                                         // Pause de 100ms
      tone(PIN_BUZZER, NOTE_DS6, 160);                    // Joue la note DS6 plus longue
      delay(250);                                         // Pause de 250ms

      digitalWrite(PIN_LED_ROUGE, LOW);                   // Éteint la LED rouge

      etatActuel = ETAT_ORIGINE_MAIN;                     // Définit l'état à ORIGINE
      break;
    case ETAT_ORIGINE_MAIN:
      
      if(etatSwitch) {

        etatActuel = ETAT_AVANCE_INITIALIZATION;
      }
      break;
    case ETAT_AVANCE_INITIALIZATION:
      // Initialisations pour l'état d'avance


      deactivateTask(updatePotard);
      deactivateTask(modulate_PIN_LED);      

      estCoupureCourant = true;                               // Réinitialise l'indicateur de coupure de courant
      direction = false;

      digitalWrite(PIN_MOTEUR_DIR, LOW);                      // Définit le sens de rotation du moteur
      digitalWrite(PIN_MOTEUR_ENA, LOW);                      // Active le moteur

      setTimer4Interval(static_cast<uint32_t>(potard));
      enableTimer4();                                         // mise en marche du moteur


      digitalWrite(PIN_LED_VERT, HIGH);                       // Allume la LED verte
      digitalWrite(PIN_LED_ORANGE, LOW);                      // Éteint la LED orange
      digitalWrite(PIN_LED_ROUGE, LOW);                       // Éteint la LED rouge

      etatActuel = ETAT_AVANCE_MAIN;                         // Définit l'état à AVANCE
      break;
    case ETAT_AVANCE_MAIN:
      //Verifie si le programme doit s'arreter en urgence
      checketatFail();

      if(nombreDePas >= LIMITEPASMAX || !etatSwitch) {
        etatActuel = ETAT_TRANSITION_AVANCE_TOGGLE;
      }
      break;
    case ETAT_TRANSITION_AVANCE_TOGGLE:
      // Vérifie la condition de sortie de l'état d'avance
      digitalWrite(PIN_LED_VERT, LOW);                        // Éteint la LED verte
      disableTimer4();

      direction = true;
      setTimer4Interval(INTERVAL_BASE);

      digitalWrite(PIN_MOTEUR_DIR, HIGH);                     // Change le sens de rotation du moteur
      digitalWrite(PIN_MOTEUR_ENA, LOW);                      // Active le moteur

      enableTimer4();                                         // mise en marche du moteur
      activateTask(checketatSwitch);

      etatActuel = ETAT_TOGGLE_MAIN;                          // Définit l'état à TOGGLE
      break;
    case ETAT_TOGGLE_MAIN:
      //Verifie si le programme doit s'arreter en urgence
      checketatFail();

      if(nombreDePas == 0){
        etatActuel = ETAT_TOGGLE_CHECKEXITCONDITION;
      }
      break;
    case ETAT_TOGGLE_CHECKEXITCONDITION:
      // Vérifie la condition de sortie de l'état de toggle
      deactivateTask(checketatSwitch);
      disableTimer4(); 

      estCoupureCourant = false;                              // Réinitialise l'indicateur de coupure de courant
      digitalWrite(PIN_LED_ORANGE, LOW);                      // Éteint la LED orange
      digitalWrite(PIN_LED_VERT, LOW);                        // Éteint la LED verte

      etatActuel = (etatSwitch) ? ETAT_AVANCE_INITIALIZATION : ETAT_ORIGINE_INITIALIZATION;
      break;
    case ETAT_TOGGLE_RECUPERATION:    
      recuperation();                                   // Appelle la fonction de récupération en cas de coupure

      etatActuel = ETAT_TRANSITION_AVANCE_TOGGLE;
      break;
    case ETAT_FAIL:
      // Exécute la séquence d'arrêt d'urgence
      checketatFail();

      break;
    default: // ETAT_FAIL:
      // Exécute la séquence d'arrêt d'urgence
      etatActuel = ETAT_FAIL;
      break;
  }

  manageTask();
  executeTaskQueue();
  
}//Fin de la boucle loop

/*/ Exécute une fonction à intervalle régulier basé sur un timer
void checkTimerAndUpdate(uint16_t &previousTime, uint32_t intervalAction, CallbackFunction func) {
  if (micros() - previousTime >= intervalAction ) { 
    previousTime = micros();                              // Réinitialise le temps précédent
    func();                                               // Appelle la fonction passée en paramètre
  }
}// Fin de checkTimerAndUpdate*/

uint8_t OverSample_to_8bit(){
  uint16_t sum = 0;
  uint16_t add;
  for(uint8_t i = 0; i < 4; i++) {
    add = analogRead(PIN_PWM_IN);
    //add = 65535 - add;                                    // Inverser le signal
    add >>= 2;                                            // Diviser par 4 pour éviter le débordement de sum
    sum += add;
  }
  uint8_t result = (uint8_t)(sum >> 4);                   // Diviser par 2^4 pour obtenir une moyenne sur 8 bits
  if (result == 0xFF) {
    return 0xFE;
  } else {
    return result;
  }
}

void temperature(){
  const uint8_t SEUIL_ARRET = 2; // Valeur limite pour eteindre l'appareil lorsque la valeur convertie 16 bits de l'ADC est inferieure a cette valeur (equivalent a une valeur 10-bit de 10)
  const uint8_t SEUIL_URGENCE = 21;// Valeur de declenchement pour le mode d'urgence lorsqu'une valeur est superieure de 5 degree par rapport a une valeur critique
  const uint8_t SEUIL_DEGRER = 4;// Valeur equivalente a un degre pour la valeur convertie 16 bits de l'ADC
  const uint16_t TIMER1_INTERVAL_COUNT = 255;
  static bool run_fonctionnement_normal = false;
  static bool isEmergencyMode = false;
  static uint8_t timer1Count = 0;
  static uint8_t isrCounter = 0;
  static uint8_t ValeurSeuil = OverSample_to_8bit(); 
  static uint8_t buffer_Temperature[32];
  static uint8_t buffer_Time[32];
  static uint8_t index = 0; // Index pour un tableau circulaire
  static uint32_t incrementalInterval = INTERVAL_MS_3; // 
  static uint32_t newInterval = INTERVAL_MS_39 + incrementalInterval;
  
  uint8_t compteur = 0;
  uint8_t validCount = 0;
  uint8_t temp_ValeurSeuil = 0xFF;
  bool variationcheck = false;
  timer1Count += newInterval / INTERVAL_MS_39; // Mise à jour du compteur avec l'intervalle actuel
  isrCounter += newInterval / INTERVAL_MS_39; // Mise à jour du compteur d'interruptions

  uint8_t adcValue_8bit = OverSample_to_8bit();
  variationcheck = (adcValue_8bit != buffer_Temperature[index]);
  buffer_Temperature[index] = adcValue_8bit;
  buffer_Time[index] = 0;

  if (timer1Count >= TIMER1_INTERVAL_COUNT) {
    timer1Count = 0;
    run_fonctionnement_normal = true;
  }

  for (uint8_t i = 0; i < 32; i++) {
    if (buffer_Temperature[i] == 0xFF && buffer_Time[i] == 0xFF) continue;
    validCount++;
    if (!isEmergencyMode && variationcheck && buffer_Temperature[i] < ValeurSeuil) {
      temp_ValeurSeuil = buffer_Temperature[i];
    } else if (isEmergencyMode && (buffer_Temperature[i] - SEUIL_DEGRER) <= ValeurSeuil) {
      compteur++;
    }

    buffer_Time[i] += (i != index) * isrCounter; // Augmente le temps pour tous sauf l'index actuel
    if (buffer_Time[i] >= 0xFF - isrCounter) {
      buffer_Time[i] = 0xFE;
      buffer_Temperature[i] = 0xFF;
    }
  }

  isrCounter = 0;
  index = (index + 1) % 32; // Incrémente l'index circulairement

  // Ajustement de l'intervalle d'appel de la fonction
  
  if (isEmergencyMode) {
    newInterval = INTERVAL_MS_39; // Réinitialiser l'intervalle en mode d'urgence
    incrementalInterval = INTERVAL_MS_3; // Réinitialiser l'intervalle incrémental
    if (compteur == validCount) {
      isEmergencyMode = false;
      OCR3A = 0xFF;
    }
  } else {
    if (variationcheck) {
      int32_t difference = abs((int)ValeurSeuil - (int)temp_ValeurSeuil);
      ValeurSeuil = temp_ValeurSeuil;

      uint32_t x = incrementalInterval / INTERVAL_MS_3;
      uint32_t reductionFactor = 1 + (uint32_t)difference; // Plus la différence est grande, plus le facteur de réduction est élevé
      uint32_t y = x / reductionFactor ;
      y = y > 0 ? y : 1;  // Assurer que y ne tombe pas en dessous de 1
      uint32_t changeAmount  = y * INTERVAL_MS_3;
      incrementalInterval = incrementalInterval - changeAmount;  // réduire l'intervalle sur changement de température
      incrementalInterval = incrementalInterval > INTERVAL_MS_3 ? incrementalInterval : INTERVAL_MS_3; // Ne pas tomber sous INTERVAL_MS_3
    }else {
      uint32_t x = incrementalInterval / INTERVAL_MS_3;
      uint32_t y = 2 * (x - 1) + 1; // Appliquer la formule y = 2(x-1) + 1
      incrementalInterval = (y * INTERVAL_MS_3);
      incrementalInterval = incrementalInterval < INTERVAL_S_10 ? incrementalInterval : INTERVAL_S_10; // Limite supérieure à 3182 secondes
    }
    newInterval = INTERVAL_MS_39 + incrementalInterval;
    newInterval = newInterval < INTERVAL_MS_10  ? newInterval : INTERVAL_S_10 ; // Limite supérieure à 10 secondes

    if ((adcValue_8bit - ValeurSeuil) >= SEUIL_URGENCE) {
      isEmergencyMode = true;
    }

    if (run_fonctionnement_normal) {
      static uint8_t duty_actuel = 0;
      if (adcValue_8bit < SEUIL_ARRET) {
        OCR3A = 0;
      } else if (adcValue_8bit != duty_actuel && adcValue_8bit > SEUIL_ARRET) {
        OCR3A = adcValue_8bit;
        duty_actuel = adcValue_8bit;
      }
      run_fonctionnement_normal = false;
    }
  }
  setTaskInterval(temperature, newInterval);
}//Fin de temperature

//Fonction de mise à jour de potard et de la fréquence du PWM du moteur
void updatePotard() {
  uint16_t newPotard = map(analogRead(PIN_POTARD), 0, 1023, 11200, 11300); // Map la lecture analogique à la plage désirée
  if (newPotard != potard) {                              // Vérifie si la valeur a changé
    potard = newPotard;                                   // Met à jour la variable globale potard

  }
}// Fin de updatePotard

// Met à jour l'état de l'interrupteur
void updateSwitchState() { 
  static uint32_t lastChangeTime = 0;
  static uint32_t currentInterval;  
  uint32_t currentTime = millis();


  if (digitalRead(PIN_SWITCH) != etatSwitch) {          // Vérifie si l'interrupteur à bascule a changé
    etatSwitch = !etatSwitch;                           // Bascule l'état de l'interrupteur

    // Réinitialise l'intervalle d'appel après un changement d'état
    currentInterval = INTERVAL_MS_20;                     // Réinitialise l'intervalle à une valeur moyenne
    setTaskInterval(updateSwitchState, currentInterval);
    lastChangeTime = currentTime;
  } else {
    // Ajuste l'intervalle en fonction du temps écoulé depuis le dernier changement d'état
    if (currentTime - lastChangeTime > currentInterval) {
      if (currentInterval < INTERVAL_S_1) {
        currentInterval += INTERVAL_MS_10;          // Augmente l'intervalle si l'état n'a pas changé
        currentInterval = min(currentInterval, INTERVAL_S_1); // S'assure de ne pas dépasser l'intervalle max
      }
      setTaskInterval(updateSwitchState, currentInterval);
    } else {
      if (currentInterval > INTERVAL_MS_20) {
        currentInterval -= INTERVAL_MS_10;          // Réduit l'intervalle si l'état a changé
        currentInterval = max(currentInterval, INTERVAL_MS_20); // S'assure de ne pas aller en dessous de l'intervalle min
      }
      setTaskInterval(updateSwitchState, currentInterval);
    }
  }
}// Fin de updateSwitchState

// Fait varier la luminosité de la LED 
void modulate_PIN_LED() { 
  static uint8_t i = 1;                                   // Initialise l'intensité de la LED
  static bool estIncrement = true;                        // Initialise la direction de l'incrémentation

  analogWrite(ledPIN_LED, i);

  i = estIncrement ? i + 1 : i - 1;                       // Incrémente ou décrémente la luminosité
  if(i == 255 || i == 0) {                                // Verifie si i est arrivé au extremiter
    estIncrement = !estIncrement;                         // Inverse la direction si les limites sont atteintes
  }
}// Fin de modulate_PIN_LED

// Fonction pour basculer l'état d'une broche
void toggle(uint8_t pin) {
  uint8_t port = digitalPinToPort(pin); // Obtenir le port de la broche
  uint8_t bit = digitalPinToBitMask(pin); // Obtenir le bit de la broche

  // Obtenir l'adresse du registre de sortie pour le port
  volatile uint8_t *out = portOutputRegister(port);

  // Bascule l'état de la broche en utilisant XOR
  *out ^= bit;
} // Fin de toggle

void toggleLEDVert() {
    toggle(PIN_LED_VERT);
}

void toggleLEDOrange() {
    toggle(PIN_LED_ORANGE);
}

// Exécute une action LED en fonction de l'état de l'interrupteur
void checketatSwitch() {
  etatSwitch = digitalRead(PIN_SWITCH); // Lire l'état de l'interrupteur
  uint8_t ledPin = !etatSwitch ? PIN_LED_VERT : PIN_LED_ORANGE; // Déterminer quelle LED vérifier pour l'extinction
  CallbackFunction func = etatSwitch ? toggleLEDVert : toggleLEDOrange; // Déterminer quelle fonction appeler pour basculer l'état de la LED

  if (digitalRead(ledPin) == HIGH) {
    digitalWrite(ledPin, LOW); // Éteindre la LED si elle est allumée
  }
  func(); // Appeler la fonction de basculement de la LED
}// Fin de checkTimerBasedOnState

//Actionne le moteur et décompte les pas
/*void toggle_PIN_MOTOR() { 
  toggle(PIN_MOTEUR_PUL);                                 // Bascule le pin du moteur
  noInterrupts();                                         // Désactive les interruptions
  direction ? nombreDePas-- : nombreDePas++;              // Décrémente le compteur de pas
  interrupts();                                           // Réactive les interruptions
}// Fin de toggle_PIN_MOTOR*/

//tone utilise le Timer2
void toggleBuzzer() {
  static bool isActive = true;
  if (isActive) {
    noTone(PIN_BUZZER);                                   // Arrête le son pendant 84 millisecondes
    isActive = false;                                     //
  } else {
    tone(PIN_BUZZER, NOTE_DS6, 160);                      // Joue la note DS6 pendant 160 millisecondes
    isActive = true;
  }
}
"
W21yM8tG,RequestException: error with request,basedcount_bot,Python,Sunday 26th of May 2024 09:22:52 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 263, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
URFXUneQ,ДЗ База данных игроков,TeT91,C#,Sunday 26th of May 2024 09:03:05 AM CDT,"using System;
using System.Collections.Generic;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddNewPlayer = ""0"";
            const string CommandDeletePlayer = ""1"";
            const string CommandBanPlayer = ""2"";
            const string CommandUnbanPlayer = ""3"";
            const string CommandShowPlayerInfo = ""4"";

            PlayersDataBase playersDataBase = new PlayersDataBase();

            bool isRunning = true;

            while (isRunning)
            {
                Console.WriteLine(""Введите команду \n"" +
                    $""{CommandAddNewPlayer} - Добавить игрока\n"" +
                    $""{CommandDeletePlayer} - Удалить\n"" +
                    $""{CommandBanPlayer} - Забанить игрока\n"" +
                    $""{CommandUnbanPlayer} - Разбанить игрока\n""+
                    $""{CommandShowPlayerInfo} - Показать инфо игрока\n"");

                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandAddNewPlayer:
                        playersDataBase.AddPlayer();
                        break;

                    case CommandDeletePlayer:
                        playersDataBase.DeletePlayer();
                        break;

                    case CommandBanPlayer:
                        BanPlayer(playersDataBase);
                        break;

                    case CommandUnbanPlayer:
                        UnbanPlayer(playersDataBase);
                        break;

                    case CommandShowPlayerInfo:
                        playersDataBase.ShowPlayerInfo();
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        private static void BanPlayer(PlayersDataBase playersDataBase)
        {
            if (int.TryParse(Console.ReadLine(), out int id))
            {
                playersDataBase.BanPlayer();
            }
            else
            {
                Console.WriteLine(""Неверный ввод"");
            }
        }

        private static void UnbanPlayer(PlayersDataBase playersDataBase)
        {
            if (int.TryParse(Console.ReadLine(), out int id))
            {
                playersDataBase.UnbanPlayer();
            }
            else
            {
                Console.WriteLine(""Неверный ввод"");
            }
        }
    }

    class PlayersDataBase
    {
        private Dictionary<int, Player> _players = new Dictionary<int, Player>();

        public PlayersDataBase()
        {
            Random random = new Random();
            int minValue = 1;
            int maxValue = 10;

            for (int i = 0; i < random.Next(minValue, maxValue); i++)
            {
                AddPlayer();
            }
        }

        public bool TryGetPlayer(out Player player)
        {
            Console.WriteLine(""Введите ID"");
            string userInput = Console.ReadLine();

            Player tempPlayer = null;
            player = null;

            if (int.TryParse(userInput, out int id))
            {
                if (_players.ContainsKey(id))
                {
                    tempPlayer = _players[id];
                    return true;
                }
                else
                {
                    Console.WriteLine(""Такого ID не найдено"");
                }
            }
            else
            {
                Console.WriteLine(""Неверный ввод"");
            }
            return false;
        }

        public void ShowPlayerInfo()
        {
            if(TryGetPlayer(out Player player))
            {
                Console.WriteLine($""ID - {player.ID} ИМЯ - {player.Name} УРОВЕНЬ - {player.Level}"");
            }
        }

        public void AddPlayer()
        {
            int id = GenerateUniqueId();
            _players.Add(id, new Player(id));
            Console.WriteLine($""Игрок с id {id} добавлен"");
        }

        public void DeletePlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                _players.Remove(player.ID);
            }
        }

        public void BanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                player.SetBanStatus(); ;
            }
        }

        public void UnbanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                player.SetBanStatus(); ;
            }
        }

        private int GenerateUniqueId()
        {
            int id = 0;
            bool isIdGenerated = false;

            while (isIdGenerated == false)
            {
                if (_players.ContainsKey(id) == false)
                {
                    isIdGenerated = true;
                }
                else
                {
                    id++;
                }
            }

            return id;
        }
    }

    class Player
    {
        public int ID { get; private set; }
        public bool IsBanned { get; private set; } = false;
        public string Name { get; private set; }
        public int Level { get; private set; } = 1;


        public Player(int id)
        {
            ID = id;
            Name = ""Player "" + ID;
        }

        public void SetBanStatus()
        {
            IsBanned = true;
        }

        public void SetUnbanStatus()
        {
            IsBanned = false;
        }
    }
}

"
rmf0LB6T,Dr. Gabor Maté and Dr. BJ Miller — The Tim Ferriss Show,nava_dev,HTML 5,Sunday 26th of May 2024 08:55:20 AM CDT,"- [00:00](https://www.youtube.com/watch?v=kF8F_el8v_s&t=0) 🩳  Sponsorship advertisement for Viori Clothing

  - Viori is a high-quality, versatile clothing brand designed for comfort and durability, suited for a range of activities like running, training, yoga, and casual wear.
  - Viori emphasizes its comfortable fit, stylish design, and discreet logo, avoiding overbearing branding.
  - Viori offers performance apparel with a focus on eco-friendly materials, using recycled plastic bottles for some of its products. 

---

- [03:27](https://www.youtube.com/watch?v=kF8F_el8v_s&t=207) 🛒 **Sponsorship advertisement for Shopify**

  - Shopify is an e-commerce platform empowering businesses of all sizes to start, run, and grow their online presence.
  - Shopify provides a comprehensive suite of tools and resources, enabling users to manage sales channels, process transactions, and engage with customers seamlessly. 
  - The platform is recognized for its user-friendliness, scalability, and robust features, making it a trusted choice for entrepreneurs and established brands alike.


---

- [05:56](https://www.youtube.com/watch?v=kF8F_el8v_s&t=356) 🎙️ **Introduction to the Tim Ferriss Show episode featuring Dr. Gabor Maté and Dr. BJ Miller**

  - This episode marks the 10th-year anniversary of the Tim Ferriss Show, which has reached over 1 billion downloads.
  - The episode features two experts in their fields, Dr. Gabor Maté, an addiction and trauma expert, and Dr. BJ Miller, a physician and author.
  -  The episode aims to share insights and techniques for personal growth and development from diverse perspectives, covering topics like addiction, trauma, and healing. 


---

- [07:15](https://www.youtube.com/watch?v=kF8F_el8v_s&t=435) 🧠 **Dr. Gabor Maté on understanding and transforming pain through compassionate inquiry**

  - Dr. Maté highlights the importance of compassionate inquiry to understand and transform pain, shifting the focus from why the addiction to why the pain.
  - He introduces the concept of the “stupid friend,” referring to coping mechanisms or behaviors that may have been helpful in the past but are now hindering growth and well-being. 
  - Dr. Maté emphasizes that understanding the roots of pain in childhood experiences is essential, but the real work lies in recognizing and transcending these patterns in the present moment.

---

- [09:36](https://www.youtube.com/watch?v=kF8F_el8v_s&t=576) 🤕 **Dr. Gabor Maté on the nature of trauma and its impact on the self**

  - Dr. Maté defines trauma as not merely the events themselves, but the internal impact these events create, leading to disconnection from emotions and the body.
  - Trauma often results in a negative view of the world, oneself, and others, creating defensive patterns that persist throughout life.
  - Recovery from trauma involves reconnecting with oneself, restoring the connection with the body and emotions that were lost, ultimately leading to self-discovery.


---

- [11:28](https://www.youtube.com/watch?v=kF8F_el8v_s&t=688) 🩹 **Dr. Gabor Maté on recommendations for healing from trauma and addiction**

  - Dr. Maté emphasizes the importance of therapy, particularly in understanding and rationalizing traumatic experiences to reduce shame and self-blame.
  - He highlights the value of various body-centered therapies, including Somatic Experiencing, EMDR, and yoga, to reconnect with the body and address emotional blocks.
  - Dr. Maté introduces the concept of developmental trauma, where unmet needs for attention, acceptance, and attunement during childhood can create disconnection and emotional difficulties.


---

- [16:57](https://www.youtube.com/watch?v=kF8F_el8v_s&t=1017) 🌌 **Dr. Gabor Maté on the role of psychedelics in healing**

  - Dr. Maté discusses his evolving perspective on psychedelics as a healing modality, sharing his own journey of exploration and experience.
  - He emphasizes that while not for everyone, psychedelics, when used responsibly with experienced practitioners, can facilitate profound self-awareness and accelerate healing.
  - Dr. Maté highlights the potential for psychedelics to unlock insights and emotional breakthroughs that may take years to achieve through traditional therapy alone.


---

- [18:34](https://www.youtube.com/watch?v=kF8F_el8v_s&t=1114) 🌱 **Dr. Gabor Maté’s personal journey with psychedelics**

  - Dr. Maté recounts how he was initially hesitant about psychedelics but eventually explored their potential after repeatedly being asked about them during his book tour.
  - He shares his transformative experience with ayahuasca, a Peruvian psychedelic brew, where he experienced profound love, reconnected with his own ability to love, and gained insights into his past.
  - Dr. Maté emphasizes the importance of seeking out experienced and ethical practitioners when working with psychedelics for healing.


---

- [22:28](https://youtu.be/kF8F_el8v_s&t=1348s) 🌿  Gabor Maté's personal experience with ayahuasca and the creation of a facilitated retreat setting

  -  Gabor Maté's experience with ayahuasca led to the development of a retreat setting designed to replicate the traditional Amazonian context for ayahuasca ceremonies. 

  - The retreat offers a safe and supportive environment with trained shamans and pre/post-ceremony integration facilitated by Gabor Maté himself.
  -  The emphasis is on preparation and integration, allowing for greater healing and transformation.


---

- [24:46](https://youtu.be/kF8F_el8v_s&t=1486s) 🧭  Life's challenges as opportunities for self-discovery

  -  Gabor Maté's teacher, Alas, believed that life's challenges are not random but rather designed by our own self to  guide us towards self-discovery. 
  - The purpose of these challenges is to create roadblocks, forcing us to confront our inner selves and ultimately lead us to the right path. 
  -  The intensity of suffering faced serves as a wake-up call, encouraging individuals to listen to their inner guidance. 


---

- [26:51](https://youtu.be/kF8F_el8v_s&t=1611s) 🎙️ Recognizing and understanding underlying emotions

   -  An exercise to explore emotional responses involves identifying recent upsetting experiences and analyzing the emotions behind them. 
   -  The exercise encourages participants to delve deeper beyond initial reactions, understanding the root of their feelings and revealing deeper, underlying emotions.
   -  By recognizing the true source of our anger and sadness, we can begin to understand the underlying patterns and motivations driving our reactions.


---

- [30:02](https://youtu.be/kF8F_el8v_s&t=1802s)  🧠  The power of perception and interpreting events

  -  Our reactions to events are not based on reality but rather on our individual perceptions and interpretations.
  -  We often default to the worst-case scenario, even when there are countless other possibilities.
  -  This tendency highlights the importance of self-awareness, recognizing our own biases and assumptions in how we process information and experiences.


---

- [33:07](https://youtu.be/kF8F_el8v_s&t=2007s) 🩺  BJ Miller's approach to palliative care and death

  - BJ Miller's work centers around advocating for a shift in societal perspectives on death. He emphasizes the importance of considering death as an inevitable part of life and actively creating better experiences for those facing it. 
  - He works in both hospital and hospice settings, advocating for a more humane and compassionate approach to end-of-life care.
  -  Miller's goal is to empower individuals and society to approach death with acceptance and dignity, fostering a more holistic and supportive environment for those nearing the end of their lives. 


---

- [44:54](https://www.youtube.com/watch?v=kF8F_el8v_s&t=2694s) 🏥 **The stark contrast between hospital and hospice death experiences**

  - The speaker highlights the difference between the way death is treated in hospitals versus hospices. In hospitals, there's often a rush to move on, with little time for reflection and grief processing, while in hospices there's more space for pausing, reflecting, and acknowledging the experience of loss.
  - The speaker notes the disorienting and rushed nature of hospital death care, leading to a lack of reflection for both patients and clinicians.
  - The contrast emphasizes the importance of allowing time and space for grief and emotional processing in the face of death, particularly in a clinical setting.

---

- [46:17](https://www.youtube.com/watch?v=kF8F_el8v_s&t=2777s) 💀 **Understanding Life through Death: The Perspective of Palliative Care**

  - The speaker shares the insightful perspective gained from witnessing hundreds of deaths as a palliative care provider. He believes that the awareness of death can profoundly impact how one lives, fostering appreciation for life's preciousness, leading to self-kindness and less squandering of time.
  - The experience of witnessing death fosters a sense of mindfulness about the finite nature of life, prompting a focus on making meaningful decisions and avoiding regret. 
  - It emphasizes the importance of practicing forgiveness and reconciliation both for oneself and others, which are essential skills cultivated through the work of palliative care.

---

- [48:43](https://www.youtube.com/watch?v=kF8F_el8v_s&t=2923s) 🙏 **The Impact of Death Awareness on Decision-Making and Relationships**

  - The speaker shares how working with death has influenced his own life, leading to changes in his decision-making processes, relationships, and appreciation for nature. He acknowledges his own flaws and the ongoing need for self-improvement, emphasizing the importance of continual learning.
  - The speaker emphasizes the value of recognizing and challenging self-destructive patterns, particularly in relationships. He mentions the importance of valuing time and not squandering it on unhealthy or unproductive relationships.
  - The speaker highlights the transformative power of forgiveness and letting go of grudges, emphasizing the need to release anger and bitterness towards oneself and others.

---

- [55:20](https://www.youtube.com/watch?v=kF8F_el8v_s&t=3320s) 🚂 **A Life-Changing Event: The Dinky Story**

  - The speaker recounts a pivotal life event, his encounter with a live electrical current from a train called ""The Dinky"". The incident resulted in the amputation of three limbs, highlighting a dramatic turning point in his life story. 
  - The speaker describes the incident, detailing the events leading to the accident and the immediate aftermath, including the assistance provided by his friends.
  - The story encapsulates the sudden and dramatic shift in the speaker's life and his subsequent journey of adaptation and resilience. 

---

- [01:00:11](https://www.youtube.com/watch?v=kF8F_el8v_s&t=3611s) 🎭 **The Surreal Memory of a Burn Unit: A Story of Confusion and Dissociation**

  - The speaker recounts the vivid and strange experience of waking in a burn unit, feeling confused and disoriented, and mistaking his situation as a dream. His account details the surreal experience of disconnecting himself from machines and attempting to walk, culminating in a painful and unexpected event with his catheter.
  - He highlights the contrast between the sterile and intense environment of the burn unit and the sensation of relief and confusion that he experienced, adding a layer of surrealism to his story. 
  - The narration of the experience underscores the intense pain and emotional turmoil that accompany burns and the stark realities of the recovery process.

---

- [01:01:46](https://www.youtube.com/watch?v=kF8F_el8v_s&t=3706s) ❄️ **The Simple Act of Kindness: A Snowball in a Burn Unit**

  - The speaker recalls a poignant moment of human connection during his stay in the burn unit, when a nurse smuggled a snowball in for him to hold. The simple gesture of feeling the snow brought him comfort and a connection to the natural world.
  - The speaker reflects on the small act of kindness and its significant impact on his experience, highlighting the power of human connection and empathy even in challenging circumstances.
  - The story highlights the need for human touch and connection in the face of isolation and pain, emphasizing the importance of simple acts of kindness in healthcare settings. 


---

- [01:07:05](https://youtu.be/kF8F_el8v_s?t=4205s) ❄️ **Dr. BJ Miller's perspective on healing after a traumatic injury**
  - Dr. Miller discusses how learning art helped him find meaning and purpose after a life-altering accident.
  - He explains how art helped him change his perspective and learn how to see and listen differently.

---

- [01:15:13](https://youtu.be/kF8F_el8v_s?t=5713s) 👩‍⚕️ **Dr. Miller's approach to supporting people with similar injuries**
  - Dr. Miller emphasizes the power of simply visiting and sharing presence with those who are going through similar challenges.
  - He describes how seeing someone who had experienced a similar injury gave him hope and helped him feel less alone in his recovery.

---

- [01:17:19](https://youtu.be/kF8F_el8v_s?t=6239s) 🍪 **The importance of simple things and finding joy in the present moment**
  - Dr. Miller highlights the profound effects of simple things like feeling a snowball or smelling a cookie, reminding us to appreciate the everyday sensations of life.
  - He emphasizes that we often undervalue these simple pleasures and become preoccupied with societal pressures and expectations.

---

- [01:23:29](https://youtu.be/kF8F_el8v_s?t=7409s) 🍄 **Dr. Miller's perspective on psychedelics in end-of-life care**
  - Dr. Miller expresses enthusiasm about the renewed focus on psychedelics for therapeutic purposes, particularly in end-of-life care.
  - He sees psychedelics as a potential tool to address “existential distress,” a crisis of meaning that is often experienced by those facing death.
  - He highlights the lack of effective treatments for existential distress within traditional medicine and welcomes psychedelics as a potential avenue for exploration and understanding. 


---

- [01:28:46](https://youtu.be/kF8F_el8v_s?t=7726s) 🩺 **Palliative care as a gateway to broader human concerns** 

  - Paliative care is a key entry point for addressing existential suffering.
  - It provides a platform to incorporate arts, philosophy and other disciplines relevant to the human condition.
  - It allows for a shift from solely medical approaches to a broader understanding of human well-being. 

---

- [01:30:48](https://youtu.be/kF8F_el8v_s?t=7848s)  💊 **Psychedelics and existential suffering**

  -  Psychedelics like MDMA and psilocybin have the potential to be helpful in alleviating existential suffering.
  - These compounds may foster meaning-making and a sense of belonging.
  - Research organizations like Heffter Research Institute, Compass Pathways and MAPS are exploring these therapeutic possibilities.  

---

- [01:33:59](https://youtu.be/kF8F_el8v_s?t=8039s) 🧭 **Daily practices for a fulfilling life**

  - The speaker emphasizes the significance of appreciating the aesthetic domain, embracing purposelessness, and finding joy in simple sensory experiences.
  - He suggests that the pursuit of meaning can overshadow the value of simply ""farting around,"" and this purposelessness can be deeply therapeutic.
  - He shares the importance of carving out space for moments of delight and meaninglessness, highlighting their role in enriching life beyond purpose.

---

- [01:39:41](https://youtu.be/kF8F_el8v_s&t=8381s) 🖼️ **Art as a source of solace and connection**

  - The speaker recommends picture books of Mark Rothco paintings, Beethoven's music, and the film ""Waiting for Guffman"" as potential sources of comfort and engagement for someone seeking solace without human interaction. 
  - He emphasizes the value of art in providing a space for reflection and connection, even in the absence of direct human interaction.
  - He highlights the importance of exploring art that evokes a range of emotions, including humor and absurdity. 

---

- [01:44:35](https://youtu.be/kF8F_el8v_s&t=8675s) 🌎 **The therapeutic power of perspective and selflessness**

  - The speaker draws a connection between focusing on vast geological timeframes and the therapeutic potential of reducing the perceived significance of ""self.""
  - He proposes that suffering often stems from an excessive focus on the self, and engaging with perspectives that minimize our perceived importance can alleviate this.
  - He connects this to the concept of success as a process of self-actualization that involves dissolving ego boundaries and seeing oneself in a larger context.

---

- [01:48:31](https://youtu.be/kF8F_el8v_s&t=8911s)  🌟 **Embracing the unseen success of others**

  - The speaker advocates for a daily practice of assuming the success of others, especially those who might be perceived as failures by society.
  - He posits that true success is often quiet and unassuming, residing in the depths of one's internal experience and connection to others.
  - This practice of assuming success fosters gratitude and a greater appreciation for the unseen struggles and triumphs of those around us. 


---

- [01:51:10](https://www.youtube.com/watch?v=kF8F_el8v_s&t=6670s) 🏍️  BJ Miller describes how he rides a motorcycle with prosthetic limbs.

  -  He describes how he has a prosthetic arm that is functional enough to operate the handlebars and a prosthetic foot that helps him grip the bike. 
  - Randy, a former patient of BJ's, converted the motorcycle to work with BJ's prosthetic limbs.
  - The motorcycle has a clutchless transmission and spliced front and rear brakes into a single lever. 

---

- [01:55:20](https://www.youtube.com/watch?v=kF8F_el8v_s&t=6920s) 🍷  BJ Miller describes a $100 or less purchase that has positively impacted his life.

  -  A bottle of Joseph Swan Pinot Noir from Sonoma County, which he finds aesthetically pleasing and a reminder of the impermanence of life.
  - He keeps corks from bottles he shares with friends in a jar and has them write something on each cork.
  -  These corks serve as a reminder of friends and connections, even when feeling lonely. 

---

- [01:58:34](https://www.youtube.com/watch?v=kF8F_el8v_s&t=7114s) 🧠  BJ Miller reflects on advice he would give to his 30-year-old self.

  -  He was deep in medical school at the time and going through a heavy period in his life.
  - He would have encouraged himself to ""let go,""  not take things too seriously, and embrace playfulness and purposelessness.
  - He emphasizes the importance of allowing life to unfold naturally without needing to know where it is all going. 

---

- [02:01:28](https://www.youtube.com/watch?v=kF8F_el8v_s&t=7288s) 🕯️  BJ Miller discusses his current view on ambition and shares his thoughts on hospice and end-of-life care.

  - He emphasizes the importance of embracing a ""vocation,"" finding a life's calling, and acting with purpose, even if it means being ambitious.
  - He advocates for supporting hospice and palliative care as a way to provide comfort and support to those facing end-of-life.
  - He believes that studying and refining the process of dying can teach us valuable lessons about living. 
"
iPPSAKND,Untitled,Alex_St,C++,Sunday 26th of May 2024 08:35:28 AM CDT,"#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <map>

using namespace std::literals;

struct Point
{
    int x;
    int y;
};

struct Size
{
    size_t width;
    size_t height;
};

using Image = std::vector<std::string>;

class Texture
{
public:
    explicit Texture(Image texture)
        :texture_(std::move(texture))
    {
    }

    const Size GetSize() const
    {
        return {(*texture_.begin()).size(), texture_.size()};
    }

    char GetPoint(size_t x, size_t y) const
    {
        return texture_.at(y).at(x);
    }

    void ChangeSymbolInTexture(Point p, char color)
    {
        texture_.at(p.y).at(p.x) = color;
    }

private:
    Image texture_;
};

enum ShapeType
{
    RECTANGLE,
    ELLIPSE
};

class Shape
{
public:
    Shape() = delete;

    explicit Shape(ShapeType shape_type)
        : shape_type_(shape_type)
    {

    }

    // опциональный варианты, не используются в упражднении
    explicit Shape(ShapeType shape_type, Size size, Point shape_point, char filler)
        : shape_type_(shape_type), shape_size_(size), shape_point_(shape_point), filler_(filler)
    {

    }

    // опциональный варианты, не используются в упражднении
    explicit Shape(ShapeType shape_type, Size size, Point shape_point, std::shared_ptr<Texture> texture)
        : shape_type_(shape_type), shape_size_(size), shape_point_(shape_point), shape_texture_(texture)
    {

    }

    void SetPosition(Point position)
    {
        shape_point_ = position;
    }

    void SetSize(Size size)
    {
        shape_size_ = size;
    }
    
    void SetTexture(std::shared_ptr<Texture> texture)
    {
        shape_texture_ = std::move(texture);
    }

    void Draw(Image& image)
    {
        if (shape_size_.height == 0 || shape_size_.width == 0) // одно из измерений shape = 0, следовательно отрисовывать нечего
        {
            return;
        }

        if (image.empty())
        {
            return;
        }

        // правый нижний угол canvas
        int canvas_X = image.at(0).size(); 
        int canvas_Y = image.size();

        // начало shape находится за пределами canvas
        if (shape_point_.x > canvas_X || shape_point_.y > canvas_Y)
        {
            return;
        }

        // правый нижний угол (конец) shape находится за пределами canvas
        if(shape_point_.x + shape_size_.width <= 0 || shape_point_.y + shape_size_.height <= 0)
        {
            return;
        }

        for(int sh_y = 0; sh_y < shape_size_.height; sh_y++)  
        {
            int current_y = sh_y + shape_point_.y;
            if(current_y < 0 || current_y >= canvas_Y)
            {
                continue; //если вычисляемая текущая координата фигуры выходит за пределы canvas
            }
            for(int sh_x = 0; sh_x < shape_size_.width; sh_x++)
            {
                int current_x = sh_x + shape_point_.x;
                if(current_x < 0 || current_x >= canvas_X)
                {
                    continue; //если вычисляемая текущая координата фигуры выходит за пределы canvas
                }

                if(shape_type_ == ShapeType::RECTANGLE)
                {
                    // проверяем что точка в квадрате попала в текстуру 
                    if(shape_texture_ && sh_x < shape_texture_->GetSize().width && sh_y < shape_texture_->GetSize().height)
                    {
                        image.at(current_y).at(current_x) = shape_texture_->GetPoint(sh_x, sh_y);
                    }
                    else
                    {
                        image.at(current_y).at(current_x) = filler_;
                    }
                }
                else if(shape_type_ == ShapeType::ELLIPSE)
                {
                    //проверяем что точка является частью эллипса
                    if(IsPointInEllipse({sh_x, sh_y}))
                    {
                        if(shape_texture_ && sh_x < shape_texture_->GetSize().width && sh_y < shape_texture_->GetSize().height)
                        {
                            image.at(current_y).at(current_x) = shape_texture_->GetPoint(sh_x, sh_y);
                        }
                        else
                        {
                            image.at(current_y).at(current_x) = filler_;
                        }
                    }
                }
            }
        }
    }

private:
    bool IsPointInEllipse(Point p) 
    {
        // Нормируем координаты точки в диапазон (-1, 1)
        // Сдвиг на 0.5 нужен, чтобы считать расстояние до центра пикселя, так
        // получается более красивая форма
        double x = (p.x + 0.5) / (shape_size_.width / 2.0) - 1;
        double y = (p.y + 0.5) / (shape_size_.height / 2.0) - 1;
        // Проверяем, лежит ли точка в единичном круге
        return x * x + y * y <= 1;
    }

    ShapeType shape_type_ = ShapeType::RECTANGLE; //по умолчанию всегда квадрат
    Size shape_size_{0,0};
    Point shape_point_{0,0};
    std::shared_ptr<Texture> shape_texture_ = nullptr;
    char filler_ = '.';
};


//
class Canvas
{
public:
    Canvas() = delete;

    explicit Canvas(Size size)
        :size_(size)
    {

    }

    explicit Canvas(size_t width, size_t height)
        :size_({width, height})
    {

    }


    void AddShape(ShapeType shape_type, Size size, Point position, 
                     std::shared_ptr<Texture> texture) 
    {
        auto shape = std::make_unique<Shape>(shape_type); //создаем уникальную shape
        shape->SetPosition(position);
        shape->SetSize(size);
        shape->SetTexture(std::move(texture));
        InsertShape(std::move(shape));
    }


    // в этом методе суть всей задачи - здесь создается уникальный шейп (дублируется 
    // на основе уже имеющегося),
    // но текстура внутри имеющегося дублируемого шейпа,  
    // являясь shared_ptr, будет скопирована просто как указатель на уже существующую.
    // за счет этого будут экономиться ресурсы, но при изменении базовой текструы
    // будут изменены все еще не выведенные на холст фигуры, имеющие в составе своем
    // данную текстуру
    void DuplicateShape(size_t number, Size size, Point position)
    {
        if(number >= shapes_.size())
        {
            std::cout << ""Error, out of range number for shape."" << std::endl;
            throw;
        }
        
        //auto shape = std::make_unique<Shape>(*(shapes_.at(number)));
        auto shape = std::make_unique<Shape>(*(GetShapeNodeById(number)->second));

        shape->SetPosition(position);
        shape->SetSize(size);
        InsertShape(std::move(shape));
    }

    void InsertShape(std::unique_ptr<Shape> shape)
    {
        shapes_.insert({shape_id_, std::move(shape)});
        shape_id_++;
    }

    void Print()
    {
        Image image(size_.height, std::string(size_.width, ' '));

        for(const auto& [id, ptr] : shapes_)
        {
            ptr->Draw(image);
        }

        std::cout << std::string(this->size_.width+2, '#') << std::endl; // вернхняя рамка, с учетом добавленных двух столбцов рамок слева и справа
        for(const auto& y : image)
        {
            std::cout << '#';
            for(const auto& x : y)
            {
                std::cout << x;
            }
            std::cout << '#' << std::endl;
        }
        std::cout << std::string(this->size_.width+2, '#') << std::endl; // нижняя рамка
    }

private:
    using Shapes = std::map<size_t, std::unique_ptr<Shape>>;
    
    Shapes::iterator GetShapeNodeById(size_t id) 
    {
        auto it = shapes_.find(id);
        if (it == shapes_.end()) {
            throw std::out_of_range(""No shape with given ID"");
        }
        return it;
    }

    Size size_{0,0};
    size_t shape_id_= 0;
    std::map<size_t, std::unique_ptr<Shape>> shapes_;

};


std::unique_ptr<Texture> MakeTextureCow()
{
    Image image = {R""(^__^            )"", //
                   R""((oo)\_______    )"", //
                   R""((__)\       )\/\)"", //
                   R""(    ||----w |   )"", //
                   R""(    ||     ||   )""};


    return std::make_unique<Texture>(std::move(image));
}

std::unique_ptr<Texture> MakeTextureSolid(Size size, char symbol)
{
    Image image(size.height, std::string(size.width, symbol));
    return std::make_unique<Texture>(std::move(image));
}

int main()
{
    // тест отрисовки с началом за пределами холста, тест превышения границ текстуры (отрисовывается '.')
    {
        Canvas test(30, 7);

        // для формирования фигуры
        Size t{20,7};
        Point p{-2,-2};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::RECTANGLE, t, p, MakeTextureCow());

        // выводим на печать
        test.Print();
    }

    // общий тест отрисовки в середине холста и выхода за нижний край холста(canvas)
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{16,7};
        Point p{3,3};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::RECTANGLE, t, p, MakeTextureCow());

        // выводим на печать
        test.Print();
    }

    // тест выхода за правый нижний угол холста(canvas)
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{16,7};
        Point p{20,6};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::RECTANGLE, t, p, MakeTextureCow());

        // выводим на печать
        test.Print();
    }

    // тест монолитной текстуры
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{16,7};
        Point p{20,6};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::RECTANGLE, t, p, MakeTextureSolid({3,3}, '*'));

        // выводим на печать
        test.Print();
    }

    // тест наложения двух текстур
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{16,7};
        Point p{20,6};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::RECTANGLE, t, p, MakeTextureCow());
        
        Size t1{3,3};
        test.AddShape(ShapeType::RECTANGLE, t1, p, MakeTextureSolid({3,3}, '*'));

        // выводим на печать
        test.Print();
    }

    // тест эллипса
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{6,6};
        Point p{2,2};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::ELLIPSE, t, p, MakeTextureSolid({3,3}, '*'));

        // выводим на печать
        test.Print();
    }

    // тест дублирования
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{6,6};
        Point p{2,2};

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::ELLIPSE, t, p, MakeTextureSolid({3,3}, '*'));
        //test.DuplicateShape(0, {2,2}, {20,2});
        test.DuplicateShape(0, {9,9}, {12,2});
        test.DuplicateShape(0, {4,4}, {23,2});

        // выводим на печать
        test.Print();
    }

    // тест дублирования с изменением символа в базовой структуре
    {
        Canvas test(30, 10);

        // для формирования фигуры
        Size t{6,6};
        Point p{2,2};

        std::shared_ptr texture = MakeTextureSolid({3,3}, '*');

        // добавляем фигуру на canvas
        test.AddShape(ShapeType::ELLIPSE, t, p, texture);
        //test.DuplicateShape(0, {2,2}, {20,2});
        test.DuplicateShape(0, {9,9}, {12,2});
        test.DuplicateShape(0, {4,4}, {23,2});

        // здесь меняем у базовой текстуры один символ, и он изменится у всех выводимых
        // фигур, т.к. все они ссылаются на одну текстуру texture
        texture->ChangeSymbolInTexture({1,1}, 'X');
        // выводим на печать
        test.Print();
    }
}"
LuK0v9uB,Python - StockData.org API - (Stackoverflow),furas,Python,Sunday 26th of May 2024 08:27:56 AM CDT,"#!/usr/bin/env python3

# date: 2024.05.26

# Stackoverflow:
# pandas - KeyError when trying to access 'data' from StockData.org API response in Python - Stack Overflow
# https://stackoverflow.com/questions/78532919/keyerror-when-trying-to-access-data-from-stockdata-org-api-response-in-python)

# Documentation:
# StockData.org - API Documentation - intraday data (unadjusted) 
# https://www.stockdata.org/documentation#intraday-data

# requests-cache:
# requests-cache 1.2.0 documentation
# https://requests-cache.readthedocs.io/en/stable/

from datetime import timedelta
#import requests
import requests_cache
import pandas as pd

# keep responses in sqlite because API has limit of requests 
# (free account has limit 100 requests/day)
session = requests_cache.CachedSession('requests_stockdata', expire_after=timedelta(hours=1))

payload = {
    'api_token': '<API KEY>',
    'symbols': 'NVDA',         # `symbols` with char `s` - even if you send only one symbol
    'intervals': 'minute',     # allowed `minute` and `hour` but not `1m`
}

url = 'https://api.stockdata.org/v1/data/intraday'
#response = requests.get(url, params=payload)
response = session.get(url, params=payload)

data = response.json()
if 'message' in data:
    print(data['message'])

if 'data' in data:
    df = pd.DataFrame(data['data'])
    
    # convert dict in one column into seperate columns
    data_as_colums = df['data'].apply(pd.Series)
    df_without_data = df.drop(columns=['data'])
    df = pd.concat([df_without_data, data_as_colums], axis=1)
    print(df.head())    
    
    df.to_csv('NVDA_minute_data.csv', index=False)"
0hJZV1pV,asdasdasd,MagmaLP,Lua,Sunday 26th of May 2024 07:28:36 AM CDT,"-- Funktion zum Löschen einer Datei
fs.delete(""dateiname"")

-- Funktion zum Herunterladen und Ausführen eines Programms von Pastebin als ""1""
load(http.get(""https://pastebin.com/raw/PASTEBIN_ID"").readAll(), ""1"")()
"
JsBuqAAD,Untitled,cepxuozab,C++,Sunday 26th of May 2024 06:32:50 AM CDT,"int main() {
    using namespace std;
        string ijson = ""[""
                       ""  {\""amount\"": 2500, \""category\"": \""food\""},""
                       ""  {\""amount\"": 1150, \""category\"": \""transport\""},""
                       ""  {\""amount\"": 5780, \""category\"": \""restaurants\""},""
                       ""  {\""amount\"": 7500, \""category\"": \""clothes\""},""
                       ""  {\""amount\"": 23740, \""category\"": \""travel\""},""
                       ""  {\""amount\"": 12000, \""category\"": \""sport\""}""
                       ""]"";
        istringstream input(ijson);
        const vector<Spending> spendings = LoadFromJson(input);
        cout << ""Total "" << CalculateTotalSpendings(spendings) << '\n';
        cout << ""Most expensive is "" << FindMostExpensiveCategory(spendings) << '\n';
}"
h1LQBWHb,Rank/Donation,MagmaLP,Lua,Sunday 26th of May 2024 06:25:54 AM CDT,"mon = peripheral.wrap(""left"")
mon.setTextScale(1.5)
mon.setBackgroundColor(32768)
mon.setCursorPos(1,1)
mon.clear()

function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    mon.setBackgroundColor(calc_color(groundb))
    mon.setCursorPos(gap,line)
    mon.setTextColor(calc_color(color))
    text = mon.write(text)
end

function Clear()
    mon.setBackgroundColor(32768)
    mon.setCursorPos(1,1)
    mon.clear()
end

function MainTopEnglish()
    msg(17,03,01,16,"" please select "")

    for i = 6,10 do
        msg(08,i,15,15,""               "")  msg(26,i,15,15,""               "")
    end
    msg(13,08,01,15,""Ranks"")
    msg(31,08,01,15,""Kits"")
end

function MainBotEnglish()
    msg(01,14,09,16,""------------------------------------------------"")
    for i = 15,17 do
        msg(03,i,16,01,""           "")  msg(19,i,16,01,""          "")  msg(35,i,16,01,""           "")
    end
    msg(05,16,16,01,""Deutsch"")  msg(22,16,16,01,""back"")  msg(37,16,16,01,""English"")
end

function MainTopDeutsch()
    msg(18,03,01,16,"" bitte wählen "")

    for i = 6,10 do
        msg(08,i,15,15,""               "")  msg(26,i,15,15,""               "")
    end
    msg(13,08,01,15,""Ränge"")
    msg(31,08,01,15,""Kits"")
end

function MainBotDeutsch()
    msg(01,14,09,16,""------------------------------------------------"")
    for i = 15,17 do
        msg(03,i,16,01,""           "")  msg(19,i,16,01,""          "")  msg(35,i,16,01,""           "")
    end
    msg(05,16,16,01,""Deutsch"")  msg(21,16,16,01,""zurück"")  msg(37,16,16,01,""English"")
end
------------------------------------------------------------------------------------------------------
function Rank1English()	
    msg(02,02,06,16,""Resident"")
	msg(13,02,09,16,""Counted Blocks    -> /counter"")
	msg(13,03,09,16,""Warp Points       -> /warps"")
    msg(13,04,09,16,""Max Home Points 2 -> /sethome name"")
    msg(13,05,09,16,""Starter Kit       -> /kit starter"")
    msg(13,06,09,16,""Back Port Perms   -> /back"")
    msg(13,07,09,16,""Claims List       -> /claimslist"")
    msg(13,08,09,16,""Performance Info. -> /performance"")
    msg(13,09,09,16,""Currencies/Money  -> /money"")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank2English()
    msg(02,04,01,16,""Iron"")
    msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank3English()
    msg(02,06,02,16,""Gold"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank4English()
    msg(02,08,04,16,""Diamond"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank5English()
    msg(02,10,10,16,""Stammi"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank6English()
    msg(02,12,10,16,""Stammi+"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank1Deutsch()
    msg(02,02,06,16,""Resident"")
	msg(13,02,09,16,""Limitierte Blöcke -> /counter"")
	msg(13,03,09,16,""Warp Punkte       -> /warps"")
    msg(13,04,09,16,""Max Home Punkte 2 -> /sethome name"")
    msg(13,05,09,16,""Anfänger Kit      -> /kit starter"")
    msg(13,06,09,16,""Zurück TP-Rechte  -> /back"")
    msg(13,07,09,16,""Grundstücksliste  -> /claimslist"")
    msg(13,08,09,16,""Performance Info. -> /performance"")
    msg(13,09,09,16,""Währungen / Geld  -> /money"")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank2Deutsch()
    msg(02,04,01,16,""Iron"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank3Deutsch()
    msg(02,06,02,16,""Gold"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank4Deutsch()
    msg(02,08,04,16,""Diamond"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank5Deutsch()
    msg(02,10,10,16,""Stammi"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end

function Rank6Deutsch()
    msg(02,12,10,16,""Stammi+"")
	msg(13,02,09,16,"""")
	msg(13,03,09,16,"""")
    msg(13,04,09,16,"""")
    msg(13,05,09,16,"""")
    msg(13,06,09,16,"""")
    msg(13,07,09,16,"""")
    msg(13,08,09,16,"""")
    msg(13,09,09,16,"""")
    msg(13,10,09,16,"""")
    msg(13,11,09,16,"""")
    msg(13,12,09,16,"""")
end
------------------------------------------------------------------------------------------------------

while true do 
    mon.setBackgroundColor(32768)
	mon.setCursorPos(1,1)
	mon.clear()
    
    local file = fs.open(""Language"", ""r"")
    local Language = tonumber(file.readLine())
    file.close()
    local file = fs.open(""Rank"", ""r"")
    local Rank = tonumber(file.readLine())
    file.close()
    
    if Language == 1 then
        MainTopEnglish()
        MainBotEnglish()
    elseif Language == 2 then
        MainTopDeutsch()
        MainBotDeutsch()
    end
    
    event, side, x, y = os.pullEvent(""monitor_touch"")
    if x >= 03 and x <= 13 and y >= 15 and y <= 17 then
        file = fs.open(""Language"", ""w"")
        file.write(2)
        file.close()
    elseif x >= 35 and x <= 45 and y >= 15 and y <= 17 then
        file = fs.open(""Language"", ""w"")
        file.write(1)
        file.close()
    elseif x >= 08 and x <= 22 and y >= 06 and y <= 10 then    -- Ranks Button
		while true do
            Clear()
            local file = fs.open(""Language"", ""r"")
            local Language = tonumber(file.readLine())
            file.close()
            local file = fs.open(""Rank"", ""r"")
            local Rank = tonumber(file.readLine())
            file.close()
            
            for i = 1,13 do
                msg(11,i,09,16,""|"")
            end
            msg(02,02,08,16,""Resident"")
            msg(02,04,08,16,""Iron"")
            msg(02,06,08,16,""Gold"")
            msg(02,08,08,16,""Diamond"")
            msg(02,10,08,16,""Stammi"")
            msg(02,12,08,16,""Stammi+"")
            
            if Language == 1 then
                MainBotEnglish()
                if Rank == 1 then
                    Rank1English()
                elseif Rank == 2 then
                    Rank2English()
                elseif Rank == 3 then
                    Rank3English()
                elseif Rank == 4 then
                    Rank4English()
                elseif Rank == 5 then
                    Rank5English()
                elseif Rank == 6 then
                    Rank6English()
                end
            elseif Language == 2 then
                MainBotDeutsch()
                if Rank == 1 then
                    Rank1Deutsch()
                elseif Rank == 2 then
                    Rank2Deutsch()
                elseif Rank == 3 then
                    Rank3Deutsch()
                elseif Rank == 4 then
                    Rank4Deutsch()
                elseif Rank == 5 then
                    Rank5Deutsch()
                elseif Rank == 6 then
                    Rank6Deutsch()
                end
            end


            
            event, side, x, y = os.pullEvent(""monitor_touch"")
            if x >= 01 and x <= 10 and y >= 02 and y <= 02 then			--Resident
                file = fs.open(""Rank"", ""w"")
                file.write(1)
                file.close()
            elseif x >= 01 and x <= 10 and y >= 04 and y <= 04 then		--Iron
                file = fs.open(""Rank"", ""w"")
                file.write(2)
                file.close()
            elseif x >= 01 and x <= 10 and y >= 06 and y <= 06 then		--Gold
                file = fs.open(""Rank"", ""w"")
                file.write(3)
                file.close()
            elseif x >= 01 and x <= 10 and y >= 08 and y <= 08 then		--Diamond
                file = fs.open(""Rank"", ""w"")
                file.write(4)
                file.close()
            elseif x >= 01 and x <= 10 and y >= 10 and y <= 10 then		--Stammi
                file = fs.open(""Rank"", ""w"")
                file.write(5)
                file.close()
            elseif x >= 01 and x <= 10 and y >= 12 and y <= 12 then		--Stammi+
                file = fs.open(""Rank"", ""w"")
                file.write(6)
                file.close()
            elseif x >= 19 and x <= 28 and y >= 15 and y <= 17 then		--back
                shell.run(""1"")
            end
        end
    end
    sleep(0.5)
end"
vp3E7usM,Untitled,Tomka21,Java,Sunday 26th of May 2024 06:08:55 AM CDT,"[16:04:11] [main/INFO]: Loading tweak class name cpw.mods.fml.common.launcher.FMLServerTweaker
[16:04:11] [main/INFO]: Using primary tweak class name cpw.mods.fml.common.launcher.FMLServerTweaker
[16:04:11] [main/INFO]: Calling tweak class cpw.mods.fml.common.launcher.FMLServerTweaker
[16:04:11] [main/INFO]: Forge Mod Loader version 7.99.4.1614 for Minecraft 1.7.10 loading
[16:04:12] [main/INFO]: Java is Java HotSpot(TM) 64-Bit Server VM, version 1.8.0_411, running on Windows 10:amd64:10.0, installed at C:\Program Files\Java\jre-1.8
[16:04:12] [main/INFO]: [pw.prok.imagine.ImagineLoadingPlugin:<clinit>:26]: Loading plugin initialized!
[16:04:12] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from +unimixins-all-1.7.10-0.1.17.jar
[16:04:12] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from AppleCore-3.3.0.jar
[16:04:12] [main/INFO]: [AppEng] Core Init
[16:04:12] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from archaicfix-0.7.2.jar
[16:04:12] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from battlegear2-1.3.8.jar
[16:04:12] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from bugtorch-1.2.13-GTNH.jar
[16:04:15] [main/WARN]: Warning: version of CodeChickenLib, 1.2.1 is newer than request 1.2.0
[16:04:15] [main/WARN]: Warning: version of MrTJPCore, 1.1.7 is newer than request 1.1.1
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from CoreTweaks-1.7.10-0.3.3.2+nomixin.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from Galacticraft-3.1.5-GTNH.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from gravisuiteneo-1.1.6.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from GTNewHorizonsCoreMod-2.3.54.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from hodgepodge-2.5.5.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from hydroenergy-1.2.2.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from kubatech-0.14.9.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from mobsinfo-0.2.6-GTNH.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from modularui-1.1.43.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from notenoughIDs-2.0.3.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from nutrition-0.0.10.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from RandomThings-2.5.3.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from sharewhereiam-2.1.1.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from tcneiadditions-1.3.6.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from ThaumcraftResearchTweaks-1.1.0.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from ThaumicTinkerer-2.9.4.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from travellersgearneo-1.2.0.jar
[16:04:15] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from visualprospecting-1.2.11.jar
[16:04:16] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from WitcheryExtras-1.2.2.jar
[16:04:16] [main/INFO]: Loading tweaker org.spongepowered.asm.launch.MixinTweaker from WitchingGadgets-1.4.4-GTNH.jar
[16:04:16] [main/WARN]: The following coremods do not have a @MCVersion annotation. They may cause problems if this is not the correct version of Minecraft for them.
[16:04:16] [main/WARN]: Missing @MCVersion: cofh.asm.LoadingPlugin  lumien.hardcoredarkness.asm.LoadingPlugin  net.glease.healer.Healer  ic2.core.coremod.IC2core  thaumcraft.codechicken.core.launch.DepLoader  jcm2606.thaumicmachina.asm.TMFMLLoadingPlugin  
[16:04:16] [main/INFO]: Loading tweak class name cpw.mods.fml.common.launcher.FMLInjectionAndSortingTweaker
[16:04:16] [main/INFO]: Loading tweak class name org.spongepowered.asm.launch.MixinTweaker
[16:04:16] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/C:/Users/Motya/Desktop/GT%20New%20Horizons%202.6.1/mods/+unimixins-all-1.7.10-0.1.17.jar Service=LaunchWrapper Env=SERVER
[16:04:16] [main/INFO]: MixinBootstrap Initializing...
[16:04:16] [main/INFO]: Compatibility level set to JAVA_8
[16:04:16] [main/INFO]: Initializing GasStationCore
[16:04:16] [main/INFO]: Initializing GTNHMixins Core
[16:04:16] [main/INFO]: Instantiating AllCore
[16:04:16] [main/INFO]: Instantiating CompatCore
[16:04:16] [main/INFO]: Instantiating MixinExtrasCore
[16:04:16] [main/INFO]: Instantiating CoreTweaksPlugin
[16:04:16] [main/INFO]: Disabling forge chat link crash fix because Hodgepodge has the same fix enabled.
[16:04:16] [main/INFO]: Adding transformer exclusions for 5 library packages
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/WARN]: Tweak class name org.spongepowered.asm.launch.MixinTweaker has already been visited -- skipping
[16:04:16] [main/INFO]: Loading tweak class name cpw.mods.fml.common.launcher.FMLDeobfTweaker
[16:04:16] [main/INFO]: Calling tweak class cpw.mods.fml.common.launcher.FMLInjectionAndSortingTweaker
[16:04:16] [main/INFO]: Calling tweak class cpw.mods.fml.common.launcher.FMLInjectionAndSortingTweaker
[16:04:16] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:16] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:17] [main/INFO]: Replacing cpw.mods.fml.common.asm.transformers.SideTransformer with 2 wrappers: [CachedTransformerWrapper, PatternConditionalTransformerWrapper]
[16:04:18] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:18] [main/INFO]: Replacing net.minecraftforge.classloading.FluidIdTransformer with 2 wrappers: [CachedTransformerWrapper, PatternConditionalTransformerWrapper]
[16:04:18] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:18] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: AE2 ApiFixer Installed
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Loaded library EJML-core-0.26.jar.
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Attempting to detect JVM version...
[16:04:25] [main/INFO]: Detected JVM: 1.8
[16:04:25] [main/INFO]: System attached to FML. Now intercepting all logging calls.
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: [pcl.opensecurity.util.SoundUnpack:load:32]: Extracting sounds from: assets/opensecurity/sounds/alarms/
[16:04:25] [main/INFO]: [pcl.opensecurity.util.SoundUnpack:load:44]: Extracting file: klaxon2.ogg
[16:04:25] [main/INFO]: [pcl.opensecurity.util.SoundUnpack:load:44]: Extracting file: klaxon1.ogg
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Adding transformer for: [net.minecraft.client.renderer.Tessellator]
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class org.spongepowered.asm.launch.MixinTweaker
[16:04:25] [main/INFO]: Initialised Mixin FML Remapper Adapter with cpw.mods.fml.common.asm.transformers.deobf.FMLDeobfuscatingRemapper@51287832
[16:04:25] [main/INFO]: Examining core mod list
[16:04:25] [main/INFO]: LoadedCoreMods [pw.prok.imagine.ImagineLoadingPlugin, org.spongepowered.asm.launch.MixinTweaker, codechicken.core.launch.CodeChickenCorePlugin, makamys.coretweaks.CoreTweaksPlugin, gtPlusPlus.preloader.asm.Preloader_FMLLoadingPlugin, DummyCore.ASM.DCLoadingPlugin, mrtjp.core.handler.CorePlugin, remoteio.core.LoadingPlugin, com.github.bartimaeusnek.ASM.CropStickTransformer_plugin, micdoodle8.mods.galacticraft.core.asm.GCLoadingPlugin, jcm2606.thaumicmachina.asm.TMFMLLoadingPlugin, makeo.gadomancy.coremod.GadomancyCore, org.embeddedt.archaicfix.ArchaicCore, codechicken.core.asm.MCPDeobfuscationTransformer$LoadPlugin, com.enderio.core.common.transform.EnderCorePlugin, mcp.mobius.mobiuscore.asm.CoreDescription, com.glodblock.github.coremod.FluidCraftCore, pcl.opensecurity.util.SoundUnpack, com.gtnewhorizon.gtnhlib.core.GTNHLibCore, io.github.legacymoddingmc.unimixins.all.AllCore, info.inpureprojects.core.Preloader.INpurePreLoader, Bukkit, cpw.mods.fml.common.launcher.FMLDeobfTweaker, com.mitchej123.hodgepodge.core.HodgepodgeCore, net.shadowfacts.forgelin.preloader.ForgelinPlugin, codechicken.nei.asm.NEICorePlugin, cpw.mods.fml.relauncher.FMLCorePlugin, logisticspipes.asm.LogisticsPipesCoreLoader, com.gtnewhorizons.neid.core.NEIDCore, com.github.bartimaeusnek.bartworks.ASM.BWCorePlugin, ic2.core.coremod.IC2core, net.glease.tc4tweak.asm.LoadingPlugin, net.minecraftforge.classloading.FMLForgePlugin, mods.battlegear2.asm.loader.BattlegearLoadingPlugin, com.dreammaster.coremod.DreamCoreMod, openblocks.OpenBlocksCorePlugin, codechicken.lib, mrtjp.relocation.asm.RelocationPlugin, lumien.hardcoredarkness.asm.LoadingPlugin, net.glease.healer.Healer, codechicken.core.launch.DepLoader, jss.bugtorch.mixinplugin.BugTorchEarlyMixins, witchinggadgets.core.EarlyMixinLoader, li.cil.oc.common.launch.TransformerLoader, api.player.forge.PlayerAPIPlugin, squeek.applecore.AppleCore, Dummy Container (null) , alkalus.main.asm.WE_CORE_FMLLoadingPlugin, com.sinthoras.visualprospecting.mixinplugin.VisualProspectingEarlyMixinLoader, thaumcraft.codechicken.core.launch.DepLoader, openmods.core.OpenModsCorePlugin, cofh.asm.LoadingPlugin]
[16:04:25] [main/INFO]: Not loading the following EARLY mixins: [minecraft.GuiScreenMixin, minecraft.ItemRendererMixin, codechickenlib.GuiDrawMixin]
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockCactusMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockCakeMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockCocoaMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockCropsMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockMushroomMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockNetherWartMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockReedMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockSaplingMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.BlockStemMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.EntityPlayerMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.FoodStatsMixin
[16:04:25] [main/INFO]: Loading [mixins.AppleCore.early.json] minecraft.accessors.FoodStatsAccessor
[16:04:25] [main/INFO]: Detected coremods: [COFHCORE]
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.AccessorEntityLiving
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityPlayerMP
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinWorldServer
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinMapGenStructure
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityVillager
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinMerchantRecipe
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinAxisAlignedBB
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinMaterialLiquid
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinChunkProviderServer
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinCraftingManager
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinSpawnerAnimals
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinShapedOreRecipe
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinLongHashMap
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinBlock
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEnchantmentHelper
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinWorldChunkManager
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinShapedRecipes
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinShapelessOreRecipe
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinShapelessRecipes
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityLiving
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinWorld
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityTrackerEntry
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityXPOrb
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntityItem
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEntity
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinForgeChunkManager
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinChunk
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinStructureStart
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinOreDictionary
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinChunkProviderHell
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinASMData
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinNetworkDispatcher
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinNetworkManager
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinEmbeddedChannel
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinNetHandlerPlayServer
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinObjectIntIdentityMap
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.core.MixinSwampHut
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinAnvilChunkLoader
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinChunk
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinChunkProviderServer
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinChunkVanilla
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinExtendedBlockStorage
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinSPacketChunkData
[16:04:25] [main/INFO]: Loading [mixins.archaicfix.early.json] common.lighting.MixinWorld_Lighting
[16:04:25] [main/INFO]: Loading [mixins.battlegear2.early.json] MixinEntityPlayer
[16:04:25] [main/INFO]: Loading [mixins.battlegear2.early.json] MixinItemStack
[16:04:25] [main/INFO]: Loading [mixins.battlegear2.early.json] MixinInventoryPlayer
[16:04:25] [main/INFO]: Loading [mixins.battlegear2.early.json] MixinNetHandlerPlayServer
[16:04:25] [main/INFO]: Kicking off BugTorch early mixins.
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.backport.MixinBlockWeb
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.backport.MixinBlockDeadBush
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.backport.MixinEntityMinecartTNT
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.backport.MixinItemEnderPearl
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] cofhcore.fix.MixinInventoryHelper
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.worldgen.MixinStructureStart
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.worldgen.MixinStructureMineshaftPieces$Room
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.logcleanup.MixinNioSocketChannel
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.placement.MixinBlockPumpkin
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.optimization.MixinBlockRedstoneTorch
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.fix.MixinBlockSilverfish
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.worldgen.MixinStructureComponent
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.shearing.MixinBlockTallGrass
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.shearing.MixinBlockLeaves
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.shearing.MixinItemShears
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.worldgen.MixinStructureVillagePieces_Path
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.fix.MixinVillageSiege
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.worldgen.MixinStructureVillagePieces_Well
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.optimization.MixinBlockChest
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.optimization.MixinEntityItem
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.optimization.MixinEntityLivingBase
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.optimization.MixinBlockSnowBlock
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.fastrandom.MixinEntity
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.fastrandom.MixinItem
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.fastrandom.MixinMinecraftServer
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.placement.MixinBlockBasePressurePlate
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.placement.MixinBlockFence
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.placement.MixinBlockWall
[16:04:25] [main/INFO]: Loading [mixins.bugtorch.early.json] minecraft.logcleanup.MixinEntity
[16:04:25] [main/INFO]: Not loading the following EARLY mixins: [minecraft.EffectRendererMixin, minecraft.EntityMixin, minecraft.EntityRendererMixin, minecraft.EntityRendererWithoutOptifineMixin, minecraft.GuiSleepMPMxin, minecraft.ItemRendererMixin, minecraft.PlayerControllerMPMixin, minecraft.RendererLivingEntityMixin]
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] forge.ForgeHooksClientMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.ChunkProviderServerMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.EntityArrowMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.EntityItemMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.EntityLivingBaseMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.EntityGolemMixin
[16:04:25] [main/INFO]: Loading [mixins.GalacticraftCore.early.json] minecraft.WorldMixin
[16:04:25] [main/INFO]: Loading [mixins.dreamcraft.early.json] MixinTileEntityBeacon
[16:04:25] [main/INFO]: Initializing Hodgepodge
[16:04:25] [main/INFO]: Looking for Thermos/Bukkit taint.
[16:04:25] [main/WARN]: Thermos/Bukkit detected; This is an unsupported configuration -- Things may not function properly.
[16:04:25] [main/WARN]:  Using `org.bukkit.craftbukkit.v1_7_R4.CraftServer` for CraftServer Package.  If this is not correct, please update your config file!
[16:04:25] [main/INFO]: Not loading the following EARLY mixins: [minecraft.MixinGameSettings_SprintKey, minecraft.MixinGuiScreenResourcePacks, minecraft.MixinContainer, minecraft.MixinNetHandlerPlayClient_FixHandleSetSlot, minecraft.MixinInventoryEffectRenderer_FixPotionEffectNumerals, minecraft.MixinItemPotion_FixRomanNumerals, minecraft.MixinGuiMainMenu_DisableRealmsButton, minecraft.MixinWorld_FixLightUpdateLag, minecraft.MixinSoundHandler, minecraft.MixinEntityRenderer, minecraft.MixinRenderManager, minecraft.MixinInventoryEffectRenderer_PotionOffset, minecraft.MixinInventoryEffectRenderer_PotionEffectRendering, minecraft.MixinGuiNewChat_LongerChat, minecraft.MixinGuiNewChat_TransparentChat, minecraft.MixinGuiChat_LongerMessages, minecraft.MixinGuiGameOver, minecraft.profiler.TileEntityRendererDispatcherMixin, minecraft.profiler.MinecraftMixin, minecraft.MixinEffectRenderer, minecraft.MixinBlockRedstoneTorch, minecraft.MixinRendererLivingEntity, minecraft.MixinMinecraft_ResizableFullscreen, minecraft.MixinMinecraft_UnfocusedFullscreen, minecraft.MixinMinecraft_ClearRenderersWorldLeak, minecraft.MixinRenderGlobal_FixWordLeak, minecraft.MixinGameSettings_FixOFChunkLoading, minecraft.MixinMinecraft_ToggleDebugMessage, minecraft.textures.client.MixinTextureAtlasSprite, minecraft.textures.client.MixinTextureMap, minecraft.textures.client.MixinBlockFire, minecraft.textures.client.MixinMinecraftForgeClient, minecraft.textures.client.MixinChunkCache, minecraft.textures.client.MixinRenderBlocks, minecraft.textures.client.MixinRenderBlockFluid, minecraft.textures.client.MixinWorldRenderer, minecraft.textures.client.MixinRenderItem, minecraft.textures.client.fastcraft.MixinTextureMap, minecraft.textures.client.MixinTextureUtil, minecraft.MixinEntityLivingBase_HidePotionParticles, minecraft.MixinWorldUpdateEntities, minecraft.MixinEntityRenderer_EnhanceNightVision, minecraft.MixinNetHandlerPlayClient, minecraft.MixinNBTTagCompound, minecraft.MixinRenderGlobal, minecraft.server.MixinHttpUtil, forge.MixinGuiIngameForge_CrosshairThirdPerson, forge.MixinGuiIngameForge_CrosshairInvertColors, minecraft.MixinKeyBinding, minecraft.MixinMinecraft_UpdateKeys, minecraft.MixinWorldClient, minecraft.MixinGuiTextField, minecraft.MixinFontRenderer, minecraft.MixinAbstractClientPlayer, minecraft.MixinThreadDownloadImageData, minecraft.MixinGuiContainerCreative, minecraft.MixinGuiNewChat_FixColorWrapping, minecraft.MixinGuiNewChat_CompactChat, netty.MixinBootstrap, forge.MixinForgeHooks_ModernPickBlock, minecraft.MixinTessellator, minecraft.MixinMinecraft_FastBlockPlacing, minecraft.MixinRegionFile, minecraft.server.MixinMinecraftServer_AutoSaveInterval, minecraft.MixinBlock_LighterWater, forge.MixinLanguageRegistry, forge.MixinFMLClientHandler, ic2.MixinLocalization, cofhcore.MixinProxyClient, minecraft.MixinRenderBlocks_PollutionWithoutOptifine, minecraft.MixinRenderBlocks_PollutionWithOptifine, minecraft.MixinChunkProviderServer_DisableTerrain, minecraft.MixinChunkProviderServer_DisablePopulation, minecraft.MixinChunkProviderServer_DisableModGeneration]
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinChunkCoordIntPair
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorld_FixAllocations
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorldClient_FixAllocations
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorldServer_FixAllocations
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEnchantment_FixRomanNumerals
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinNetHandlerLoginServer_OfflineMode
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityLivingBase_FixHasteArmSwing
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityPlayer
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinBlockFence
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityFireball
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinC01PacketChatMessage_LongerMessages
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinBlockGrass
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinChunkCoordinates
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinTcpNoDelay
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorldGetBlock
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorldLightValue
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinVillage
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinVillageCollection
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinForgeHooks
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinForgeVersion_FixUpdateCheck
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinMinecraftForge
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinRandomPositionGenerator
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinFurnaceRecipes
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityLivingPickup
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityLivingDrop
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinBlockHopper
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinServerConfigurationManager
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityPlayerMP
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinItemSoup
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinPotion
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinPotionEffect
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinTileEntityHopper
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinS02PacketChat
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinFMLProxyPacket
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinNetworkDispatcher
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.NetworkManagerAccessor
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.packets.MixinS01PacketJoinGame_FixDimensionID
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorldServerUpdateEntities
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinDimensionManager
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinEntityLivingBase_FixPotionException
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinASMDataTable
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinOpenGuiHandler
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinBlockBed
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.packets.MixinDataWatcher
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.packets.MixinS3FPacketCustomPayload_Validation
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.FluidContainerRegistryAccessor
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] forge.MixinFluidRegistry
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinPacketBuffer
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinMessageSerializer2
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinMessageDeserializer2
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.packets.MixinS3FPacketCustomPayload_LengthLimit
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinBlock_FixXray
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorld_FixXray
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinChunk
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinIc2WaterKinetic
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinItemCropSeed
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinTileEntityCrop
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinIc2NanoSuitNightVision
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinIc2QuantumSuitNightVision
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinIc2NightVisionGoggles
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinTileEntityReactorChamberElectricNoDupe
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinTileEntityReactorChamberElectricInvSpeedup
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinTileEntityNuclearReactorElectric
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.MixinItemIC2FluidContainer
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] ic2.textures.MixinRenderLiquidCell
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] cofhcore.MixinCoFHCoreUpdateCheck
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinWorld_CoFH_TE_Cache
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinTimeCommandGalacticraftFix
[16:04:25] [main/INFO]: Loading [mixins.hodgepodge.early.json] minecraft.MixinTileEntityFurnacePollution
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinWorld
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinExtendedBlockStorage
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinStatList
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinBlockFire
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinS21PacketChunkData
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinS22PacketMultiBlockChange
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinS24PacketBlockAction
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinS26PacketMapChunkBulk
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinItemInWorldManager
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinAnvilChunkLoader
[16:04:25] [main/INFO]: Loading [mixins.neid.early.json] minecraft.MixinBlock
[16:04:25] [main/INFO]: Loading [mixins.visualprospecting.early.json] minecraft.MinecraftServerAccessor
[16:04:25] [main/INFO]: Loading [mixins.visualprospecting.early.json] minecraft.ItemEditableBookMixin
[16:04:25] [main/INFO]: Loading [mixins.WitchingGadgets.early.json] minecraft.EntityLivingAccessor
[16:04:25] [main/INFO]: Loading [mixins.WitchingGadgets.early.json] minecraft.MixinEnchantmentHelper
[16:04:25] [main/INFO]: Loading [mixins.WitchingGadgets.early.json] minecraft.MixinEntityLivingBase
[16:04:25] [main/INFO]: Loading [mixins.WitchingGadgets.early.json] minecraft.PotionEffectAccessor
[16:04:25] [main/INFO]: No dependencies found.
[16:04:25] [main/INFO]: Not loading transformer com.mitchej123.hodgepodge.asm.transformers.fml.SpeedupProgressBarTransformer
[16:04:25] [main/INFO]: Loading transformer com.mitchej123.hodgepodge.asm.transformers.fml.FMLIndexedMessageToMessageCodecTransformer
[16:04:25] [main/INFO]: Loading transformer com.mitchej123.hodgepodge.asm.transformers.thermos.ThermosFurnaceSledgeHammer
[16:04:25] [main/INFO]: Not loading transformer com.mitchej123.hodgepodge.asm.transformers.optifine.GLErrorLoggingTransformer
[16:04:25] [main/INFO]: [alkalus.main.asm.WE_CORE_Handler:<clinit>:23]: [Witchery++][ASM] Asm Config Location: C:\Users\Motya\Desktop\GT New Horizons 2.6.1\config\WitcheryExtras\asm.cfg
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.common.launcher.FMLDeobfTweaker
[16:04:25] [main/INFO]: Replacing cpw.mods.fml.common.asm.transformers.DeobfuscationTransformer with 1 wrapper: [CachedTransformerWrapper]
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:25] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:26] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:26] [main/INFO]: Gt Nbt Fix - Enabled: true
[16:04:26] [main/INFO]: Gt Tooltip Fix - Enabled: true
[16:04:26] [main/INFO]: COFH Patch - Enabled: true
[16:04:26] [main/INFO]: Thaumcraft Aspect Safety Patch - Enabled: true
[16:04:26] [main/INFO]: Fix bad usage of EntityLivingBase.setHealth Patch - Enabled: false
[16:04:26] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:26] [main/INFO]: Calling tweak class cpw.mods.fml.relauncher.CoreModManager$FMLPluginWrapper
[16:04:26] [main/INFO]: Loading tweak class name cpw.mods.fml.common.launcher.TerminalTweaker
[16:04:26] [main/INFO]: Loading tweak class name org.spongepowered.asm.mixin.EnvironmentStateTweaker
[16:04:26] [main/INFO]: Calling tweak class cpw.mods.fml.common.launcher.TerminalTweaker
[16:04:26] [main/INFO]: Replacing cpw.mods.fml.common.asm.transformers.TerminalTransformer with 1 wrapper: [CachedTransformerWrapper]
[16:04:26] [main/INFO]: Calling tweak class org.spongepowered.asm.mixin.EnvironmentStateTweaker
[16:04:26] [main/INFO]: Loaded early config
[16:04:26] [main/WARN]: Error loading class: net/minecraft/client/multiplayer/WorldClient (java.lang.RuntimeException: Attempted to load class bjf for invalid side SERVER)
[16:04:26] [main/WARN]: @Mixin target net.minecraft.client.multiplayer.WorldClient was not found mixins.hodgepodge.early.json:minecraft.MixinWorldClient_FixAllocations from mod hodgepodge
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/Minecraft (java.lang.RuntimeException: Attempted to load class bao for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.Minecraft was not found coretweaks.mixin.json:tweak.crashhandler.MixinMinecraft from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/renderer/RenderGlobal (java.lang.RuntimeException: Attempted to load class bma for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.renderer.RenderGlobal was not found coretweaks.mixin.json:bugfix.displaylistdelete.MixinRenderGlobal from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/renderer/EntityRenderer (java.lang.RuntimeException: Attempted to load class blt for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.renderer.EntityRenderer was not found coretweaks.mixin.json:tweak.farplane.MixinEntityRenderer from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/entity/EntityPlayerSP (java.lang.RuntimeException: Attempted to load class blk for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.entity.EntityPlayerSP was not found coretweaks.mixin.json:tweak.extendsprint.MixinEntityPlayerSP from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/gui/GuiListExtended (java.lang.ClassNotFoundException: The specified class 'net.minecraft.client.gui.GuiListExtended' was not found)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.gui.GuiListExtended was not found coretweaks.mixin.json:bugfix.guiclicksound.MixinGuiListExtended from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/renderer/Tessellator (java.lang.RuntimeException: Attempted to load class bmh for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.renderer.Tessellator was not found coretweaks.mixin.json:bugfix.intelcolor.MixinTessellator from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/network/NetHandlerPlayClient (java.lang.RuntimeException: Attempted to load class bjb for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.network.NetHandlerPlayClient was not found coretweaks.mixin.json:bugfix.restoretravelsound.MixinNetHandlerPlayClient from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/renderer/EntityRenderer (java.lang.RuntimeException: Attempted to load class blt for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.renderer.EntityRenderer was not found coretweaks.mixin.json:tweak.cloudheightcheck.MixinEntityRenderer from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/resources/FolderResourcePack (java.lang.ClassNotFoundException: The specified class 'net.minecraft.client.resources.FolderResourcePack' was not found)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.resources.FolderResourcePack was not found coretweaks.mixin.json:optimization.folderresourcepack.MixinFolderResourcePack from mod coretweaks
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/resources/DefaultResourcePack (java.lang.ClassNotFoundException: The specified class 'net.minecraft.client.resources.DefaultResourcePack' was not found)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.resources.DefaultResourcePack was not found coretweaks.mixin.json:optimization.defaultresourcepack.MixinDefaultResourcePack from mod coretweaks
[16:04:27] [main/INFO]: Attempting to add mods\gregtech-5.09.45.168.jar to the URL Class Path
[16:04:27] [main/INFO]: Found Minecraft! Integrating now...
[16:04:27] [main/INFO]: Found GregTech! Integrating now...
[16:04:27] [main/INFO]: Found Minecraft! Integrating now...
[16:04:27] [main/INFO]: Attempting to add mods\InfernalMobs-1.8.1-GTNH.jar to the URL Class Path
[16:04:27] [main/INFO]: Attempting to add mods\EnderIO-2.7.6.jar to the URL Class Path
[16:04:27] [main/INFO]: Attempting to add mods\Draconic-Evolution-1.3.5-GTNH.jar to the URL Class Path
[16:04:27] [main/INFO]: Jar not found for TargetedMod{modName='DQMIIINext', jarNamePrefixLowercase='[1.7.10]dqrmod'}
[16:04:27] [main/INFO]: Jar not found for TargetedMod{modName='chococraft', jarNamePrefixLowercase='chococraftplus-'}
[16:04:27] [main/INFO]: Attempting to add mods\battlegear2-1.3.8.jar to the URL Class Path
[16:04:27] [main/INFO]: Attempting to add mods\HardcoreEnderExpansion-1.10.1-GTNH.jar to the URL Class Path
[16:04:27] [main/INFO]: Attempting to add mods\Forestry-4.8.10.jar to the URL Class Path
[16:04:27] [main/INFO]: Found Minecraft! Integrating now...
[16:04:27] [main/INFO]: Found InfernalMobs! Integrating now...
[16:04:27] [main/INFO]: Found EnderIO! Integrating now...
[16:04:27] [main/INFO]: Found DraconicEvolution! Integrating now...
[16:04:27] [main/INFO]: Could not find DQMIIINext! Skipping integration....
[16:04:27] [main/INFO]: Could not find chococraft! Skipping integration....
[16:04:27] [main/INFO]: Found battlegear2! Integrating now...
[16:04:27] [main/INFO]: Found HardcoreEnderExpansion! Integrating now...
[16:04:27] [main/INFO]: Found Forestry! Integrating now...
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/renderer/entity/RendererLivingEntity (java.lang.RuntimeException: Attempted to load class boh for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.renderer.entity.RendererLivingEntity was not found mixins.mobsinfo.json:minecraft.RendererLivingEntityAccessor from mod mobsinfo
[16:04:27] [main/WARN]: Error loading class: net/minecraft/client/gui/inventory/GuiContainer (java.lang.RuntimeException: Attempted to load class bex for invalid side SERVER)
[16:04:27] [main/WARN]: @Mixin target net.minecraft.client.gui.inventory.GuiContainer was not found mixins.mobsinfo.json:minecraft.GuiContainerAccessor from mod mobsinfo
[16:04:27] [main/INFO]: Attempting to add mods\NotEnoughItems-2.5.28-GTNH.jar to the URL Class Path
[16:04:27] [main/INFO]: Found Minecraft! Integrating now...
[16:04:27] [main/INFO]: Found NotEnoughItems! Integrating now...
[16:04:27] [main/INFO]: Initializing MixinExtras via com.llamalad7.mixinextras.service.MixinExtrasServiceImpl(version=0.3.5).
[16:04:27] [main/INFO]: Current code is OBFUSCATED
[16:04:27] [main/INFO]: [MobiusCore] Found net.minecraft.world.WorldServer [ mt ] with checksum C7CBEAB9D0C6A34E3B96B7B9E7DDDDF5
[16:04:27] [main/INFO]: Successful injection in b ()V
[16:04:27] [main/INFO]: Successful injection in b ()V
[16:04:27] [main/INFO]: Found cpw.mods.fml.common.FMLCommonHandler with checksum 0138CE71AF754C4C2A4AA9C4797325D4
[16:04:27] [main/INFO]: Successful injection in onPreServerTick ()V
[16:04:27] [main/INFO]: Successful injection in onPostServerTick ()V
[16:04:27] [main/INFO]: Successful injection in onPreWorldTick (Lahb;)V
[16:04:27] [main/INFO]: Successful injection in onPostWorldTick (Lahb;)V
[16:04:27] [main/INFO]: Transforming FMLCommonHandler to add hook for enhancing crash reports
[16:04:27] [main/INFO]: Switching injection mode to Thermos
[16:04:27] [main/INFO]: [MobiusCore] Found net.minecraft.world.World [ ahb ] with checksum B150B3EF792609C37D424A00F0FB799A
[16:04:27] [main/INFO]: Found World.updateEntities()...
[16:04:27] [main/INFO]: Successful injection in h ()V
[16:04:27] [main/INFO]: Successful injection in h ()V
[16:04:27] [main/INFO]: Successful injection in h ()V
[16:04:27] [main/INFO]: Successful injection in h ()V
[16:04:27] [main/INFO]: Found World.<init> (Lazc;Ljava/lang/String;Lahj;Laqo;Lqi;)V
[16:04:27] [main/INFO]: Successful injection in <init> (Lazc;Ljava/lang/String;Lahj;Laqo;Lqi;)V
[16:04:27] [main/INFO]: Successful injection in <init> (Lazc;Ljava/lang/String;Lahj;Laqo;Lqi;)V
[16:04:27] [main/INFO]: Found World Class: net/minecraft/world/World
[16:04:27] [main/ERROR]: Critical injection failure: LVT in net/minecraft/world/World::func_72866_a(Lnet/minecraft/entity/Entity;Z)V has incompatible changes at opcode 190 in callback mixins.archaicfix.early.json:common.core.MixinWorld from mod archaicfix->@Inject::skipUpdateIfOptimizing(Lnet/minecraft/entity/Entity;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IIZ)V.
 Expected: [I, I, Z]
    Found: [I, I, Lnet/minecraft/world/ChunkCoordIntPair;]
Available: [I, I, Lnet/minecraft/world/ChunkCoordIntPair;, Z, Lnet/minecraft/world/chunk/Chunk;, Z, B]
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: java.lang.reflect.InvocationTargetException
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.reflect.Method.invoke(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at cpw.mods.fml.relauncher.ServerLaunchWrapper.run(ServerLaunchWrapper.java:43)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at cpw.mods.fml.relauncher.ServerLaunchWrapper.main(ServerLaunchWrapper.java:12)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: java.lang.NoClassDefFoundError: net/minecraft/world/WorldServer
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.getDeclaredMethods0(Native Method)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.privateGetDeclaredMethods(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.privateGetMethodRecursive(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.getMethod0(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.getMethod(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.Launch.launch(Launch.java:132)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.Launch.main(Launch.java:28)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 6 more
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: java.lang.ClassNotFoundException: net.minecraft.world.WorldServer
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.findClass(LaunchClassLoader.java:191)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.ClassLoader.loadClass(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.ClassLoader.loadClass(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 13 more
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: java.lang.RuntimeException: java.lang.ClassNotFoundException: net.minecraft.world.World
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at com.google.common.base.Throwables.propagate(Throwables.java:160)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at cofh.asm.CoFHAccessTransformer.transform(CoFHAccessTransformer.java:94)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.runTransformers(LaunchClassLoader.java:279)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.findClass(LaunchClassLoader.java:176)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 15 more
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: java.lang.ClassNotFoundException: net.minecraft.world.World
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.findClass(LaunchClassLoader.java:191)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.ClassLoader.loadClass(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.ClassLoader.loadClass(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.forName0(Native Method)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at java.lang.Class.forName(Unknown Source)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at cofh.asm.CoFHAccessTransformer.transform(CoFHAccessTransformer.java:90)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 17 more
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: org.spongepowered.asm.mixin.transformer.throwables.MixinTransformerError: An unexpected critical error was encountered
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:392)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.Proxy.transform(Proxy.java:72)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.runTransformers(LaunchClassLoader.java:279)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at net.minecraft.launchwrapper.LaunchClassLoader.findClass(LaunchClassLoader.java:176)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 22 more
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: Caused by: org.spongepowered.asm.mixin.injection.throwables.InjectionError: LVT in net/minecraft/world/World::func_72866_a(Lnet/minecraft/entity/Entity;Z)V has incompatible changes at opcode 190 in callback mixins.archaicfix.early.json:common.core.MixinWorld from mod archaicfix->@Inject::skipUpdateIfOptimizing(Lnet/minecraft/entity/Entity;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IIZ)V.
 Expected: [I, I, Z]
    Found: [I, I, Lnet/minecraft/world/ChunkCoordIntPair;]
Available: [I, I, Lnet/minecraft/world/ChunkCoordIntPair;, Z, Lnet/minecraft/world/chunk/Chunk;, Z, B]
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:544)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.inject(CallbackInjector.java:494)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.injection.code.Injector.inject(Injector.java:277)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.inject(InjectionInfo.java:445)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1377)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:1062)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:402)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:327)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.TargetClassContext.apply(TargetClassContext.java:421)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:403)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:363)
[16:04:27] [main/INFO]: [java.lang.Throwable$WrappedPrintStream:println:-1]: 	... 27 more
"
hZE4enKx,data938,TestGuy1,JSON,Sunday 26th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'b62c1907d164ff578042ba3f0c29f7f35f28b5ad58a085869155f67055ecbd8b39837a1da5b8f2be2e46557742e090ca8e193f5875815b5fb65da0df1ff3d47d6723bbc742e65d54eee50057f0ce45f47003c9b5433247600e0f0289d98eaa275094c8c948c114dab4ca93445c899e2705011d7addf9795d96f6f3a58b5f3227',
  otherdata: [
    'ecc3d0a9af26fd0bcd8f6c7b696a8d18',
    'b835f8e298b1c5c1cda6e7ee3c26add9',
    'ffb4e9759a9381cdcdf07689791fd12b',
    'cd210d191fafe09358a089a64dc372f7',
    '243f3fe3e1297a9597febf88762ba492',
    '1d89a9ee09032c610884ce22b05125c6',
    '26f164f65a74d1c0d3dfb4b5b9335be4',
    '9c1e4469785bf7015a6bd563e06369fe'
  ]
}"
g8uck2Mp,Navigation 6.0.5,TheiPhoneFan,HTML,Sunday 26th of May 2024 05:54:46 AM CDT,"    <!-- Top Bar -->
    <div class=""navbar"">
        <!-- Site Title -->
        <a href=""./index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>Jordan's Blog</b></a>

        <!-- Home -->
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related -->
        <a href=""./channel-related.html"">Channel Related <span style=""color: #ff0000;"">►</span></a>

        <!-- Content -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""./blog.html"">Happening Now <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""./wallpapers.html"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
                <a href=""./web-dev-ideas.html"" style=""border-radius: 0px 0px 16px 16px;"">Web Dev Ideas <img src=""./theme/glyphs/html.png"" height=""15"" alt=""clipart""></a>
            </div>
        </div>

        <!-- Recent Content -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">New Articles <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <iframe src=""./recent-posts.html"" height=""390"" width=""250""></iframe>
            </div>
        </div>

        <!-- Scam Avoidance -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""./scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related -->
        <a href=""./site-related.html"">Site Related</a>

        <!-- Help & Contact -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""./report-an-issue.html"" style=""border-radius: 0px 0px 16px 16px;"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
                <a href=""./website-survey.html"" style=""border-radius: 0px 0px 16px 16px;"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <!-- Site Title -->
        <h3 style=""color:black;margin-top:40px;"">Jordan's Blog</h3>

        <!-- Home -->
        <p><a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a></p>

        <!-- Channel Related -->
        <p><a href=""./channel-related.html"" style=""margin-bottom: -10px;"">Channel Related <span style=""color: #ff0000;"">►</span></a></p>

        <!-- Content -->
        <details>
            <summary>Content</summary>
            <p><a href=""./content.html""><b>Content</b></a></p>
            <p><a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a></p>
            <p><a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a></p>
            <p><a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a></p>
            <p><a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a></p>
            <p><a href=""./blog.html"">Happening Now <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a></p>
            <p><a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a></p>
            <p><a href=""./wallpapers.html"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a></p>
            <p><a href=""./web-dev-ideas.html"">Web Dev Ideas <img src=""./theme/glyphs/html.png"" height=""15"" alt=""clipart""></a></p>
            <hr>
        </details>

        <!-- New Articles -->
        <details>
            <summary>New Articles</summary>
            <iframe src=""./recent-posts.html"" height=""370"" width=""275"" scrolling=""no""></iframe>
        </details>

        <!-- Scam Avoidance-->
        <details>
            <summary>Scam Avoidance</summary>
            <p><a href=""./scam-avoidance.html""><b>Scam Avoidance</b></a></p>
            <p><a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a></p>
            <p><a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a></p>
            <p><a href=""./scam-info-updates.html"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a></p>
            <hr>
        </details>

        <!-- Site Related -->
        <p><a href=""./site-related.html"" style=""margin-top: -10px; margin-bottom: -10px;"">Site Related</a></p>

        <!-- Help & Contact -->
        <details>
            <summary>Help & Contact</summary>
            <p><a href=""./help-contact.html""><b>Help & Contact</b></a></p>
            <p><a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a></p>
            <p><a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a></p>
            <p><a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a></p>
            <p><a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a></p>
            <hr>
        </details>

        <!-- Social Icons -->
        <div class=""social-icons"">
            <a href=""https://www.youtube.com/@jordans_blog"" class=""social-icon"" target=""_blank"">
                <img src=""./theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"">
            </a>
            <a href=""https://twitter.com/jordans_blog"" class=""social-icon"" target=""_blank"">
                <img src=""./theme/social-icons/x-social.png"" alt=""My X Account"">
            </a>
            <a href=""https://www.instagram.com/jordansblog_/"" class=""social-icon"" target=""_blank"">
                <img src=""./theme/social-icons/instagram-social.png"" alt=""My Instagram Account"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" class=""social-icon"" target=""_blank"">
                <img src=""./theme/social-icons/mail-social.png"" alt=""Email Me"">
            </a>
        </div>
    </div>"
KXY0ZHkt,Untitled,avraal,Java,Sunday 26th of May 2024 05:42:57 AM CDT,"public class WizardChestRenderer implements BlockEntityRenderer<WizardChestBlockEntity> {

    public static final ModelLayerLocation LAYER_LOCATION = new ModelLayerLocation(new ResourceLocation(WizardsMod.MODID, ""wizard_chest""), ""main"");
    public static final ResourceLocation WIZARD_CHEST_RENDERER_ATLAS_TEXTURE = new ResourceLocation(WizardsMod.MODID, ""entity/chest/wizard_chest"");

    private final ModelPart lid;
    private final ModelPart base;
    private final ModelPart lock;
    private final ModelPart decor;
    private Material material;


    public WizardChestRenderer(BlockEntityRendererProvider.Context pContext) {
        material = new Material(Sheets.CHEST_SHEET, WIZARD_CHEST_RENDERER_ATLAS_TEXTURE);
        ModelPart modelPart = pContext.bakeLayer(LAYER_LOCATION);
        this.base = modelPart.getChild(""base"");
        this.lid = modelPart.getChild(""lid"");
        this.lock = modelPart.getChild(""lock"");
        this.decor = modelPart.getChild(""decor"");
    }

    @Override
    public void render(WizardChestBlockEntity pBlockEntity, float pPartialTick, PoseStack pPoseStack, MultiBufferSource pBuffer, int pPackedLight, int pPackedOverlay) {
        Level world = pBlockEntity.getLevel();
        boolean hasWorld = (world != null);
        BlockState state = pBlockEntity.getBlockState();
        Direction facing = Direction.NORTH;
        if (hasWorld) {
            facing = state.getValue(WizardChestBlock.FACING);
        }

        float angle = facing.toYRot();

        pPoseStack.pushPose();
        pPoseStack.translate(0.5f, 0.5f, 0.5f);
        pPoseStack.mulPose(Axis.YP.rotationDegrees(-angle));
        pPoseStack.translate(-0.5f, -0.5f, -0.5f);

        float f1 = pBlockEntity.getOpenNess(pPartialTick);
        f1 = 1.0f - f1;
        f1 = 1.0f - f1 * f1 * f1;

        VertexConsumer vertexConsumer = material.buffer(pBuffer, RenderType::entitySolid);
        render(pPoseStack, vertexConsumer, pPackedLight, pPackedOverlay, f1);
        pPoseStack.popPose();
    }

    private void render(PoseStack pPoseStack, VertexConsumer pConsumer, int pPackedLight, int pPackedOverlay, float pLidAngle) {
        lid.xRot = -(pLidAngle * (float) (Math.PI / 2));
        lock.xRot = lid.xRot;
        lock.render(pPoseStack, pConsumer, pPackedLight, pPackedOverlay);
        lid.render(pPoseStack, pConsumer, pPackedLight, pPackedOverlay);
        base.render(pPoseStack, pConsumer, pPackedLight, pPackedOverlay);
        decor.render(pPoseStack, pConsumer, pPackedLight, pPackedOverlay);
    }

    public static LayerDefinition createBody() {
        MeshDefinition meshdefinition = new MeshDefinition();
        PartDefinition partdefinition = meshdefinition.getRoot();
        partdefinition.addOrReplaceChild(""base"", CubeListBuilder.create().texOffs(0, 0).addBox(1.0F, 0.0F, 1.0F, 14.0F, 10.0F, 14.0F), PartPose.ZERO);
        partdefinition.addOrReplaceChild(
                ""lid"", CubeListBuilder.create().texOffs(0, 0).addBox(1.0F, 0.0F, 0.0F, 14.0F, 5.0F, 14.0F), PartPose.offset(0.0F, 9.0F, 1.0F)
        );
        partdefinition.addOrReplaceChild(
                ""lock"", CubeListBuilder.create().texOffs(0, 0).addBox(7.0F, -2.0F, 14.0F, 2.0F, 4.0F, 1.0F), PartPose.offset(0.0F, 9.0F, 1.0F)
        );
        PartDefinition decor = partdefinition.addOrReplaceChild(""decor"", CubeListBuilder.create().texOffs(0, 0).addBox(0.0f, 2.0f, 0.0f, 12, 1, 1), PartPose.offset(1.0f, 0, 1.0f));

        return LayerDefinition.create(meshdefinition, 64, 64);
    }
}"
Spxzy4m0,main,MagmaLP,Lua,Sunday 26th of May 2024 05:35:34 AM CDT,"-- main.lua

-- Importiere die API
local colorAPI = require(""colorAPI"")

-- Initialisiere den Monitor
local monitor = peripheral.wrap(""top"") -- Passe diesen Namen an den Namen deines Monitors an
monitor.setTextScale(0.5)
monitor.clear()
monitor.setCursorPos(1, 1)

-- Schreibe farbigen Text und Hintergrundfarben auf den Monitor
colorAPI.msg(""Hello &aWorld &&1from &cComputerCraft &&ewith &&achanging &&fbackgrounds"", monitor)
"
0QJ231Qk,ДЗ Работа со свойствами,TeT91,C#,Sunday 26th of May 2024 05:34:24 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Player player = new Player();
            Renderer renderer = new Renderer();

            renderer.DrawPlayer(player);
        }
    }
}

class Player
{
    public int PositionX { get; private set; } = 3;
    public int PositionY { get; private set; } = 5;
    public char Symbol { get; private set; } = '@';
}

class Renderer
{
    public void DrawPlayer(Player player)
    {
        Console.SetCursorPosition(player.PositionX, player.PositionY);
        Console.WriteLine(player.Symbol);
    }
}
"
aC3QBz4Y,colorsAPI,MagmaLP,Lua,Sunday 26th of May 2024 05:34:15 AM CDT,"-- colorAPI.lua

local colors = {
    [""0""] = colors.black,
    [""1""] = colors.blue,
    [""2""] = colors.green,
    [""3""] = colors.cyan,
    [""4""] = colors.red,
    [""5""] = colors.purple,
    [""6""] = colors.orange,
    [""7""] = colors.lightGray,
    [""8""] = colors.gray,
    [""9""] = colors.lightBlue,
    [""a""] = colors.lime,
    [""b""] = colors.lightBlue,
    [""c""] = colors.red,
    [""d""] = colors.magenta,
    [""e""] = colors.yellow,
    [""f""] = colors.white,
}

local function msg(text, monitor)
    local x, y = monitor.getCursorPos()
    local originalBgColor = monitor.getBackgroundColor()
    local originalTextColor = monitor.getTextColor()
    
    local i = 1
    while i <= #text do
        local char = text:sub(i, i)
        if char == ""&"" then
            local nextChar = text:sub(i + 1, i + 1)
            if nextChar == ""&"" then
                i = i + 2
                local colorCode = text:sub(i + 1, i + 1)
                if colors[colorCode] then
                    monitor.setBackgroundColor(colors[colorCode])
                end
                i = i + 1
            else
                i = i + 1
                local colorCode = text:sub(i, i)
                if colors[colorCode] then
                    monitor.setTextColor(colors[colorCode])
                end
            end
        else
            monitor.write(char)
        end
        i = i + 1
    end

    monitor.setTextColor(originalTextColor)
    monitor.setBackgroundColor(originalBgColor)
end

return {
    msg = msg
}
"
wRgcQGe8,snort-nmap,danielcristho,SystemVerilog,Sunday 26th of May 2024 05:33:30 AM CDT,"05/26-06:13:18.847704  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:111
05/26-06:13:18.847766  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:110
05/26-06:13:18.847783  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:587
05/26-06:13:18.847800  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5900
05/26-06:13:18.847814  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1025
05/26-06:13:18.847837  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:554
05/26-06:13:18.847862  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:993
05/26-06:13:18.847883  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:199
05/26-06:13:18.847904  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:256
05/26-06:13:18.847927  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:113
05/26-06:13:18.848255  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:111
05/26-06:13:18.848288  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5900
05/26-06:13:18.848403  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3389
05/26-06:13:18.848441  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:23
05/26-06:13:18.848463  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:995
05/26-06:13:18.848481  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:135
05/26-06:13:18.848506  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:443
05/26-06:13:18.848535  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:445
05/26-06:13:18.848568  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:21
05/26-06:13:18.848587  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:22
05/26-06:13:18.848609  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8888
05/26-06:13:18.848626  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8080
05/26-06:13:18.848651  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:80
05/26-06:13:18.848670  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1720
05/26-06:13:18.848689  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:53
05/26-06:13:18.848712  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1723
05/26-06:13:18.848737  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:25
05/26-06:13:18.848754  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3306
05/26-06:13:18.848776  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:139
05/26-06:13:18.848794  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:143
05/26-06:13:18.848810  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:514
05/26-06:13:18.848827  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1105
05/26-06:13:18.848840  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:23
05/26-06:13:18.849015  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:445
05/26-06:13:18.849039  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:21
05/26-06:13:18.849073  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:22
05/26-06:13:18.849092  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:80
05/26-06:13:18.849142  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:53
05/26-06:13:18.849292  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:25
05/26-06:13:18.849324  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3306
05/26-06:13:18.849340  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1064
05/26-06:13:18.849354  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:139
05/26-06:13:18.849357  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:514
05/26-06:13:18.849378  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15660
05/26-06:13:18.849429  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9878
05/26-06:13:18.849466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:35500
05/26-06:13:18.849492  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2998
05/26-06:13:18.849516  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6901
05/26-06:13:18.849539  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4000
05/26-06:13:18.849559  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32780
05/26-06:13:18.849580  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1054
05/26-06:13:18.849611  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1163
05/26-06:13:18.849630  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:54328
05/26-06:13:18.849654  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:90
05/26-06:13:18.849699  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3517
05/26-06:13:18.849721  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1036
05/26-06:13:18.849738  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:161
05/26-06:13:18.849757  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:55055
05/26-06:13:18.849780  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2260
05/26-06:13:18.849829  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3800
05/26-06:13:18.849847  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1072
05/26-06:13:18.849869  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3005
05/26-06:13:18.849888  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1782
05/26-06:13:18.849906  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8084
05/26-06:13:18.849930  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8500
05/26-06:13:18.849991  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6779
05/26-06:13:18.850008  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5922
05/26-06:13:18.850029  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6156
05/26-06:13:18.850045  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27715
05/26-06:13:18.850070  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7999
05/26-06:13:18.850096  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5500
05/26-06:13:18.850117  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5200
05/26-06:13:18.850133  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1086
05/26-06:13:18.850150  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1048
05/26-06:13:18.850174  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1433
05/26-06:13:18.850202  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3372
05/26-06:13:18.850227  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1097
05/26-06:13:18.850245  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2557
05/26-06:13:18.850261  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2605
05/26-06:13:18.850286  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2121
05/26-06:13:18.850318  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1174
05/26-06:13:18.850334  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8083
05/26-06:13:18.850816  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2121
05/26-06:13:18.850898  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49165
05/26-06:13:18.850939  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1074
05/26-06:13:18.850957  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2604
05/26-06:13:18.850975  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8402
05/26-06:13:18.850994  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2144
05/26-06:13:18.851020  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5087
05/26-06:13:18.851042  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9001
05/26-06:13:18.851062  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:12345
05/26-06:13:18.851081  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9002
05/26-06:13:18.851107  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9944
05/26-06:13:18.851132  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4446
05/26-06:13:18.851151  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3030
05/26-06:13:18.851176  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:617
05/26-06:13:18.851195  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8010
05/26-06:13:18.851218  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1085
05/26-06:13:18.851246  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5815
05/26-06:13:18.851269  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:687
05/26-06:13:18.851306  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2001
05/26-06:13:18.851326  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9009
05/26-06:13:18.851350  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1687
05/26-06:13:18.851368  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49175
05/26-06:13:18.851386  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:992
05/26-06:13:18.851417  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:465
05/26-06:13:18.851434  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2041
05/26-06:13:18.851450  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1077
05/26-06:13:18.851465  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27356
05/26-06:13:18.851480  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5987
05/26-06:13:18.851494  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3851
05/26-06:13:18.851544  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10628
05/26-06:13:18.851625  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2020
05/26-06:13:18.851644  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6389
05/26-06:13:18.851660  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1027
05/26-06:13:18.851675  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49155
05/26-06:13:18.851905  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16992
05/26-06:13:18.852170  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3878
05/26-06:13:18.852207  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1218
05/26-06:13:18.852221  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:264
05/26-06:13:18.852241  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50000
05/26-06:13:18.852255  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3801
05/26-06:13:18.852271  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:497
05/26-06:13:18.852288  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1079
05/26-06:13:18.852314  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2608
05/26-06:13:18.852329  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:801
05/26-06:13:18.852346  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1078
05/26-06:13:18.852372  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1783
05/26-06:13:18.852389  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7911
05/26-06:13:18.852403  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6101
05/26-06:13:18.852417  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1060
05/26-06:13:18.852432  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16016
05/26-06:13:18.852453  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19842
05/26-06:13:18.853000  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1501
05/26-06:13:18.853021  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2042
05/26-06:13:18.853036  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5432
05/26-06:13:18.853051  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2045
05/26-06:13:18.853068  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7001
05/26-06:13:18.853108  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5080
05/26-06:13:18.853126  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7025
05/26-06:13:18.853143  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4003
05/26-06:13:18.853169  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2033
05/26-06:13:18.853184  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:179
05/26-06:13:18.853205  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:444
05/26-06:13:18.853296  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4001
05/26-06:13:18.853320  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5822
05/26-06:13:18.853344  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6646
05/26-06:13:18.853358  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5432
05/26-06:13:18.853381  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:44501
05/26-06:13:18.853408  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:714
05/26-06:13:18.853425  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2869
05/26-06:13:18.853442  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5963
05/26-06:13:18.853460  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5679
05/26-06:13:18.853478  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7741
05/26-06:13:18.853501  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3809
05/26-06:13:18.853518  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1035
05/26-06:13:18.853537  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7019
05/26-06:13:18.853551  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5222
05/26-06:13:18.853579  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5060
05/26-06:13:18.853593  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2021
05/26-06:13:18.853609  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3077
05/26-06:13:18.853630  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5959
05/26-06:13:18.853690  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5566
05/26-06:13:18.853715  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9011
05/26-06:13:18.853730  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3351
05/26-06:13:18.853744  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20005
05/26-06:13:18.853766  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7920
05/26-06:13:18.853781  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49400
05/26-06:13:18.853798  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2170
05/26-06:13:18.853812  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5004
05/26-06:13:18.853828  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:14000
05/26-06:13:18.853851  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:40911
05/26-06:13:18.853865  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1247
05/26-06:13:18.853879  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10001
05/26-06:13:18.853902  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:30951
05/26-06:13:18.853918  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9220
05/26-06:13:18.853934  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:31038
05/26-06:13:18.853971  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9003
05/26-06:13:18.854022  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5050
05/26-06:13:18.854105  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1862
05/26-06:13:18.854186  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1106
05/26-06:13:18.854206  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5810
05/26-06:13:18.854233  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2034
05/26-06:13:18.854250  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7070
05/26-06:13:18.854907  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1032
05/26-06:13:18.854946  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8994
05/26-06:13:18.854960  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32770
05/26-06:13:18.854980  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:787
05/26-06:13:18.855015  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2126
05/26-06:13:18.855041  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:30
05/26-06:13:18.855082  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8180
05/26-06:13:18.855138  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3011
05/26-06:13:18.855185  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20828
05/26-06:13:18.855210  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2811
05/26-06:13:18.855247  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5902
05/26-06:13:18.855270  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15003
05/26-06:13:18.855309  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3476
05/26-06:13:18.855334  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2500
05/26-06:13:18.855369  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:70
05/26-06:13:18.855392  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1533
05/26-06:13:18.855432  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1301
05/26-06:13:18.855506  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8022
05/26-06:13:18.855584  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6123
05/26-06:13:18.855611  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8180
05/26-06:13:18.855634  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19801
05/26-06:13:18.855675  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1658
05/26-06:13:18.855699  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10180
05/26-06:13:18.855732  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2967
05/26-06:13:18.855751  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8400
05/26-06:13:18.855790  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1058
05/26-06:13:18.855821  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1087
05/26-06:13:18.856043  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1183
05/26-06:13:18.856070  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8000
05/26-06:13:18.856103  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19283
05/26-06:13:18.856124  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1984
05/26-06:13:18.856138  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:65129
05/26-06:13:18.856158  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6001
05/26-06:13:18.856175  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:25735
05/26-06:13:18.856191  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2725
05/26-06:13:18.856220  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1971
05/26-06:13:18.856245  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:17877
05/26-06:13:18.856263  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6566
05/26-06:13:18.856298  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1175
05/26-06:13:18.856315  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10243
05/26-06:13:18.856347  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1287
05/26-06:13:18.856368  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:500
05/26-06:13:18.856404  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:417
05/26-06:13:18.856424  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27355
05/26-06:13:18.856442  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3333
05/26-06:13:18.856472  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1755
05/26-06:13:18.856499  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:100
05/26-06:13:18.856527  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5850
05/26-06:13:18.856546  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3905
05/26-06:13:18.856561  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7002
05/26-06:13:18.856593  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8082
05/26-06:13:18.857222  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1805
05/26-06:13:18.857258  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:44442
05/26-06:13:18.857276  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32774
05/26-06:13:18.857292  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2049
05/26-06:13:18.857320  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9
05/26-06:13:18.857339  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6668
05/26-06:13:18.857360  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7103
05/26-06:13:18.857390  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50636
05/26-06:13:18.857406  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1083
05/26-06:13:18.857423  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2909
05/26-06:13:18.857466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2160
05/26-06:13:18.857483  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1100
05/26-06:13:18.857628  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5226
05/26-06:13:18.857701  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3995
05/26-06:13:18.857766  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32783
05/26-06:13:18.857779  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2049
05/26-06:13:18.857818  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4045
05/26-06:13:18.857879  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1117
05/26-06:13:18.857926  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3367
05/26-06:13:18.857946  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3369
05/26-06:13:18.857964  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3814
05/26-06:13:18.857997  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2005
05/26-06:13:18.858019  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2107
05/26-06:13:18.858054  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2717
05/26-06:13:18.858147  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32773
05/26-06:13:18.858403  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:144
05/26-06:13:18.858751  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2809
05/26-06:13:18.858787  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5550
05/26-06:13:18.858813  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8300
05/26-06:13:18.858845  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4662
05/26-06:13:18.858872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1080
05/26-06:13:18.858909  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:146
05/26-06:13:18.858928  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1093
05/26-06:13:18.858948  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16012
05/26-06:13:18.858985  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7800
05/26-06:13:18.859000  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3826
05/26-06:13:18.859031  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6100
05/26-06:13:18.859061  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2875
05/26-06:13:18.859090  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5877
05/26-06:13:18.859111  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:41511
05/26-06:13:18.859126  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19315
05/26-06:13:18.859159  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6003
05/26-06:13:18.859177  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1328
05/26-06:13:18.859195  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6025
05/26-06:13:18.859233  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:38292
05/26-06:13:18.859317  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:57797
05/26-06:13:18.859349  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:65389
05/26-06:13:18.859364  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32779
05/26-06:13:18.859395  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:888
05/26-06:13:18.859414  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3006
05/26-06:13:18.859436  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:616
05/26-06:13:18.859956  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3322
05/26-06:13:18.859975  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9877
05/26-06:13:18.859999  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20221
05/26-06:13:18.860018  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1201
05/26-06:13:18.860038  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2196
05/26-06:13:18.860067  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2006
05/26-06:13:18.860105  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4224
05/26-06:13:18.860136  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:301
05/26-06:13:18.860152  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2492
05/26-06:13:18.860188  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2200
05/26-06:13:18.860206  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2800
05/26-06:13:18.860223  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2191
05/26-06:13:18.860252  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49158
05/26-06:13:18.860312  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1081
05/26-06:13:18.860329  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5009
05/26-06:13:18.860343  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:51493
05/26-06:13:18.860369  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3551
05/26-06:13:18.860385  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9999
05/26-06:13:18.860402  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1130
05/26-06:13:18.860488  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:749
05/26-06:13:18.860515  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9418
05/26-06:13:18.860532  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:55056
05/26-06:13:18.860701  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2190
05/26-06:13:18.860720  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49176
05/26-06:13:18.860750  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1583
05/26-06:13:18.860774  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1700
05/26-06:13:18.860797  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:21571
05/26-06:13:18.860821  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10002
05/26-06:13:18.860866  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1096
05/26-06:13:18.860883  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3
05/26-06:13:18.860897  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:60443
05/26-06:13:18.860927  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2007
05/26-06:13:18.860949  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:911
05/26-06:13:18.860980  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4899
05/26-06:13:18.860996  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2004
05/26-06:13:18.861012  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2100
05/26-06:13:18.861025  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6543
05/26-06:13:18.861130  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5802
05/26-06:13:18.861166  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1034
05/26-06:13:18.861182  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1594
05/26-06:13:18.861206  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49161
05/26-06:13:18.861229  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1169
05/26-06:13:18.861244  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:548
05/26-06:13:18.861260  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1107
05/26-06:13:18.861291  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:254
05/26-06:13:18.861325  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:900
05/26-06:13:18.861343  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8099
05/26-06:13:18.861346  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15002
05/26-06:13:18.861381  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6689
05/26-06:13:18.861413  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:481
05/26-06:13:18.861845  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7625
05/26-06:13:18.861865  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3017
05/26-06:13:18.861877  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:24
05/26-06:13:18.861941  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6792
05/26-06:13:18.861976  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:541
05/26-06:13:18.861996  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:30718
05/26-06:13:18.862028  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3914
05/26-06:13:18.862047  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5030
05/26-06:13:18.862082  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5101
05/26-06:13:18.862103  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:65000
05/26-06:13:18.862141  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1094
05/26-06:13:18.862166  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5033
05/26-06:13:18.862301  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:18040
05/26-06:13:18.862333  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1030
05/26-06:13:18.862520  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1071
05/26-06:13:18.862543  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1688
05/26-06:13:18.862578  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8600
05/26-06:13:18.862599  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8090
05/26-06:13:18.862661  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3703
05/26-06:13:18.862820  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8181
05/26-06:13:18.862912  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1053
05/26-06:13:18.862959  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5061
05/26-06:13:18.863003  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1147
05/26-06:13:18.863024  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5999
05/26-06:13:18.863060  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:13456
05/26-06:13:18.863082  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8292
05/26-06:13:18.863121  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1187
05/26-06:13:18.863140  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8443
05/26-06:13:18.863161  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2222
05/26-06:13:18.863193  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8899
05/26-06:13:18.863211  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:33
05/26-06:13:18.863424  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8089
05/26-06:13:18.863443  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1236
05/26-06:13:18.863460  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:22939
05/26-06:13:18.863490  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:545
05/26-06:13:18.863509  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:524
05/26-06:13:18.863573  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6346
05/26-06:13:18.863606  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1443
05/26-06:13:18.863628  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1042
05/26-06:13:18.863645  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:89
05/26-06:13:18.864797  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:163
05/26-06:13:18.864830  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9111
05/26-06:13:18.864846  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10215
05/26-06:13:18.864863  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:106
05/26-06:13:18.864917  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1216
05/26-06:13:18.864946  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:85
05/26-06:13:18.864967  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:513
05/26-06:13:18.864982  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2301
05/26-06:13:18.865012  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1310
05/26-06:13:18.865030  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5510
05/26-06:13:18.865585  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:513
05/26-06:13:18.865691  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:11967
05/26-06:13:18.865716  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:726
05/26-06:13:18.865743  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:808
05/26-06:13:18.865766  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8008
05/26-06:13:18.865788  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7004
05/26-06:13:18.865878  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2179
05/26-06:13:18.865935  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2382
05/26-06:13:18.865956  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10024
05/26-06:13:18.865974  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3546
05/26-06:13:18.866010  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3889
05/26-06:13:18.866029  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16001
05/26-06:13:18.866090  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8193
05/26-06:13:18.866119  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1199
05/26-06:13:18.866149  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15000
05/26-06:13:18.866170  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7007
05/26-06:13:18.866270  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3001
05/26-06:13:18.866301  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2022
05/26-06:13:18.866319  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1272
05/26-06:13:18.866492  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1352
05/26-06:13:18.866516  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1095
05/26-06:13:18.866566  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3690
05/26-06:13:18.866675  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:646
05/26-06:13:18.866737  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6699
05/26-06:13:18.866760  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:903
05/26-06:13:18.866800  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:83
05/26-06:13:18.866824  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:212
05/26-06:13:18.866848  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10616
05/26-06:13:18.866872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1082
05/26-06:13:18.866912  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:26
05/26-06:13:18.866931  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5003
05/26-06:13:18.866947  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1935
05/26-06:13:18.867032  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2607
05/26-06:13:18.867051  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3000
05/26-06:13:18.867310  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1132
05/26-06:13:18.867393  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9998
05/26-06:13:18.867436  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9090
05/26-06:13:18.867461  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1026
05/26-06:13:18.867479  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:14442
05/26-06:13:18.867558  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5225
05/26-06:13:18.867645  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1121
05/26-06:13:18.867669  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3260
05/26-06:13:18.867703  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9290
05/26-06:13:18.867722  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10004
05/26-06:13:18.867738  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8031
05/26-06:13:18.867774  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:700
05/26-06:13:18.867791  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1151
05/26-06:13:18.867827  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6005
05/26-06:13:18.867848  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19780
05/26-06:13:18.867886  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:26214
05/26-06:13:18.867910  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32772
05/26-06:13:18.869712  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:14441
05/26-06:13:18.869747  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1000
05/26-06:13:18.869773  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50003
05/26-06:13:18.869791  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2000
05/26-06:13:18.869812  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50300
05/26-06:13:18.869845  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1114
05/26-06:13:18.869860  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4550
05/26-06:13:18.869895  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:13782
05/26-06:13:18.870347  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5054
05/26-06:13:18.870387  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7201
05/26-06:13:18.870405  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1010
05/26-06:13:18.870446  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8009
05/26-06:13:18.870466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8290
05/26-06:13:18.870489  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1154
05/26-06:13:18.870787  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:17988
05/26-06:13:18.870819  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3689
05/26-06:13:18.870836  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9898
05/26-06:13:18.870852  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1043
05/26-06:13:18.870888  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1029
05/26-06:13:18.870908  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9040
05/26-06:13:18.870939  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1309
05/26-06:13:18.870961  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4005
05/26-06:13:18.870980  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5962
05/26-06:13:18.871019  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5221
05/26-06:13:18.871037  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:683
05/26-06:13:18.871064  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1271
05/26-06:13:18.871082  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32785
05/26-06:13:18.871669  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8009
05/26-06:13:18.871685  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49
05/26-06:13:18.871729  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:668
05/26-06:13:18.871732  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:12174
05/26-06:13:18.871735  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1296
05/26-06:13:18.871745  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1556
05/26-06:13:18.871748  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1259
05/26-06:13:18.871759  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9535
05/26-06:13:18.871762  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1434
05/26-06:13:18.871772  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5911
05/26-06:13:18.871775  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:40193
05/26-06:13:18.871791  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3404
05/26-06:13:18.871802  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8383
05/26-06:13:18.871811  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:11110
05/26-06:13:18.871814  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3869
05/26-06:13:18.871868  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9917
05/26-06:13:18.871872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1165
05/26-06:13:18.871874  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:705
05/26-06:13:18.871877  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6
05/26-06:13:18.871889  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5859
05/26-06:13:18.872410  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49154
05/26-06:13:18.872415  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9594
05/26-06:13:18.872418  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7000
05/26-06:13:18.872421  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:625
05/26-06:13:18.873540  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:34571
05/26-06:13:18.873570  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10617
05/26-06:13:18.873583  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:544
05/26-06:13:18.873597  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32
05/26-06:13:18.873625  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8333
05/26-06:13:18.873646  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:28201
05/26-06:13:18.873664  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3283
05/26-06:13:18.873692  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8873
05/26-06:13:18.873710  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2046
05/26-06:13:18.873726  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3323
05/26-06:13:18.873753  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4567
05/26-06:13:18.873770  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3871
05/26-06:13:18.873788  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1947
05/26-06:13:18.873821  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:902
05/26-06:13:18.873837  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2030
05/26-06:13:18.873872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:125
05/26-06:13:18.873889  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3737
05/26-06:13:18.873909  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5961
05/26-06:13:18.874077  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:458
05/26-06:13:18.874152  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1138
05/26-06:13:18.874213  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:306
05/26-06:13:18.874272  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:34573
05/26-06:13:18.874333  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8007
05/26-06:13:18.874403  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1334
05/26-06:13:18.874466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4443
05/26-06:13:18.874524  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3268
05/26-06:13:18.874755  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5825
05/26-06:13:18.874831  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4998
05/26-06:13:18.874894  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:13783
05/26-06:13:18.874948  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1088
05/26-06:13:18.875007  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8291
05/26-06:13:18.875071  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1717
05/26-06:13:18.875139  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5666
05/26-06:13:18.875199  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1600
05/26-06:13:18.875265  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3300
05/26-06:13:18.875332  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5718
05/26-06:13:18.875416  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3998
05/26-06:13:18.875487  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:84
05/26-06:13:18.875578  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10778
05/26-06:13:18.875653  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3945
05/26-06:13:18.875714  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1011
05/26-06:13:18.875772  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1900
05/26-06:13:18.875830  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2003
05/26-06:13:18.875883  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1041
05/26-06:13:18.875941  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8652
05/26-06:13:18.875967  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1761
05/26-06:13:18.875985  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:62078
05/26-06:13:18.876010  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1051
05/26-06:13:18.876035  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7
05/26-06:13:18.876061  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1641
05/26-06:13:18.876392  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50800
05/26-06:13:18.876425  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2099
05/26-06:13:18.876444  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:880
05/26-06:13:18.876467  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:211
05/26-06:13:18.876483  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1046
05/26-06:13:18.876507  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3659
05/26-06:13:18.876533  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1185
05/26-06:13:18.876567  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8011
05/26-06:13:18.876588  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1069
05/26-06:13:18.876604  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:52848
05/26-06:13:18.877376  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3971
05/26-06:13:18.877419  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8085
05/26-06:13:18.877441  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6000
05/26-06:13:18.877463  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:55600
05/26-06:13:18.877489  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4900
05/26-06:13:18.877510  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:51103
05/26-06:13:18.877526  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4449
05/26-06:13:18.877545  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1045
05/26-06:13:18.877602  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15004
05/26-06:13:18.877622  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20000
05/26-06:13:18.877638  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8002
05/26-06:13:18.877654  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:33354
05/26-06:13:18.877673  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:24444
05/26-06:13:18.877697  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3828
05/26-06:13:18.877713  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5051
05/26-06:13:18.877727  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9081
05/26-06:13:18.877751  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2040
05/26-06:13:18.877768  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3370
05/26-06:13:18.877785  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:843
05/26-06:13:18.877801  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:82
05/26-06:13:18.877819  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1049
05/26-06:13:18.877835  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5811
05/26-06:13:18.877856  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32771
05/26-06:13:18.877873  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32781
05/26-06:13:18.877891  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1089
05/26-06:13:18.877910  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9080
05/26-06:13:18.877925  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1455
05/26-06:13:18.877943  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:999
05/26-06:13:18.877960  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1063
05/26-06:13:18.877975  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:55555
05/26-06:13:18.877994  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2522
05/26-06:13:18.878482  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6000
05/26-06:13:18.878486  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6565
05/26-06:13:18.878488  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9943
05/26-06:13:18.878490  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1076
05/26-06:13:18.878492  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3071
05/26-06:13:18.878494  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1248
05/26-06:13:18.878496  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:52869
05/26-06:13:18.878499  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:11111
05/26-06:13:18.878502  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1092
05/26-06:13:18.878504  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:631
05/26-06:13:18.879009  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5910
05/26-06:13:18.879035  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5298
05/26-06:13:18.879060  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27352
05/26-06:13:18.879078  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49159
05/26-06:13:18.879098  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5100
05/26-06:13:18.879127  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1002
05/26-06:13:18.879147  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5960
05/26-06:13:18.879183  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:54045
05/26-06:13:18.879210  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:61532
05/26-06:13:18.879241  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8701
05/26-06:13:18.879258  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19101
05/26-06:13:18.879273  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:340
05/26-06:13:18.879307  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5988
05/26-06:13:18.879337  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1062
05/26-06:13:18.879364  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2035
05/26-06:13:18.879383  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1840
05/26-06:13:18.879399  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1084
05/26-06:13:18.879437  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5214
05/26-06:13:18.879458  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3128
05/26-06:13:18.879486  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9500
05/26-06:13:18.879508  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7937
05/26-06:13:18.879572  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:777
05/26-06:13:18.879611  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1524
05/26-06:13:18.879639  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9575
05/26-06:13:18.879674  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3221
05/26-06:13:18.879745  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49163
05/26-06:13:18.879820  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7676
05/26-06:13:18.879857  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:720
05/26-06:13:18.879878  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16018
05/26-06:13:18.879913  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3986
05/26-06:13:18.879941  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2065
05/26-06:13:18.879980  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7100
05/26-06:13:18.880001  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4126
05/26-06:13:18.880017  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4002
05/26-06:13:18.880047  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9000
05/26-06:13:18.880063  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3827
05/26-06:13:18.880093  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7496
05/26-06:13:18.880127  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:42
05/26-06:13:18.880167  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:109
05/26-06:13:18.880184  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49152
05/26-06:13:18.880201  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3324
05/26-06:13:18.880239  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2401
05/26-06:13:18.880258  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1091
05/26-06:13:18.880292  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5001
05/26-06:13:18.880309  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6667
05/26-06:13:18.880350  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6969
05/26-06:13:18.880464  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3003
05/26-06:13:18.880532  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1524
05/26-06:13:18.880550  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1234
05/26-06:13:18.880553  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5120
05/26-06:13:18.880609  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2381
05/26-06:13:18.880865  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6667
05/26-06:13:18.881021  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2047
05/26-06:13:18.881048  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2048
05/26-06:13:18.881070  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1500
05/26-06:13:18.881089  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1148
05/26-06:13:18.881109  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3527
05/26-06:13:18.881141  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:464
05/26-06:13:18.881168  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:56737
05/26-06:13:18.881203  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20031
05/26-06:13:18.881285  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32768
05/26-06:13:18.881319  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1009
05/26-06:13:18.881338  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5190
05/26-06:13:18.881356  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7512
05/26-06:13:18.881518  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50001
05/26-06:13:18.881544  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2119
05/26-06:13:18.881641  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8651
05/26-06:13:18.881662  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:99
05/26-06:13:18.881687  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8192
05/26-06:13:18.881702  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2103
05/26-06:13:18.881758  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5002
05/26-06:13:18.881834  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1123
05/26-06:13:18.881886  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1055
05/26-06:13:18.881907  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5544
05/26-06:13:18.882087  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6881
05/26-06:13:18.882152  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1098
05/26-06:13:18.882178  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4
05/26-06:13:18.882194  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1801
05/26-06:13:18.882274  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1461
05/26-06:13:18.882369  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2251
05/26-06:13:18.882389  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6106
05/26-06:13:18.882515  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4004
05/26-06:13:18.882546  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49999
05/26-06:13:18.882625  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10082
05/26-06:13:18.882763  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16080
05/26-06:13:18.882793  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10025
05/26-06:13:18.882809  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3325
05/26-06:13:18.882846  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2638
05/26-06:13:18.882864  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1113
05/26-06:13:18.882916  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10009
05/26-06:13:18.883037  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3031
05/26-06:13:18.883069  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1417
05/26-06:13:18.883093  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:61900
05/26-06:13:18.883112  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9876
05/26-06:13:18.883299  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8087
05/26-06:13:18.883368  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:898
05/26-06:13:18.883395  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:722
05/26-06:13:18.883409  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3784
05/26-06:13:18.883471  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5678
05/26-06:13:18.883495  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32778
05/26-06:13:18.883520  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2968
05/26-06:13:18.883607  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2105
05/26-06:13:18.883957  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1141
05/26-06:13:18.883980  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2366
05/26-06:13:18.884005  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2394
05/26-06:13:18.884026  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1812
05/26-06:13:18.884062  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1039
05/26-06:13:18.884082  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4848
05/26-06:13:18.884097  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2288
05/26-06:13:18.884134  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5901
05/26-06:13:18.884151  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8800
05/26-06:13:18.884170  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1999
05/26-06:13:18.884202  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6666
05/26-06:13:18.884227  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8021
05/26-06:13:18.884250  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20
05/26-06:13:18.884267  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1001
05/26-06:13:18.884285  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6006
05/26-06:13:18.884314  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1110
05/26-06:13:18.884331  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:555
05/26-06:13:18.884345  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8042
05/26-06:13:18.884379  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4242
05/26-06:13:18.884396  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5801
05/26-06:13:18.884413  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6007
05/26-06:13:18.884435  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3211
05/26-06:13:18.884451  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32784
05/26-06:13:18.884466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1137
05/26-06:13:18.884505  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10621
05/26-06:13:18.884524  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9110
05/26-06:13:18.884621  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:44176
05/26-06:13:18.884644  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1145
05/26-06:13:18.884675  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9091
05/26-06:13:18.884693  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9101
05/26-06:13:18.884711  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1721
05/26-06:13:18.884735  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5000
05/26-06:13:18.884753  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10629
05/26-06:13:18.884770  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5800
05/26-06:13:18.884802  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5906
05/26-06:13:18.884820  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9929
05/26-06:13:18.884837  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:981
05/26-06:13:18.884857  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:990
05/26-06:13:18.884872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:12000
05/26-06:13:18.884895  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5730
05/26-06:13:18.884923  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:912
05/26-06:13:18.884941  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8093
05/26-06:13:18.884962  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32777
05/26-06:13:18.884990  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:34572
05/26-06:13:18.885011  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1718
05/26-06:13:18.885039  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:57294
05/26-06:13:18.885055  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2038
05/26-06:13:18.885072  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3007
05/26-06:13:18.885101  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5989
05/26-06:13:18.885121  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2920
05/26-06:13:18.885881  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1503
05/26-06:13:18.885919  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:45100
05/26-06:13:18.885935  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32776
05/26-06:13:18.885964  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49167
05/26-06:13:18.885989  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3493
05/26-06:13:18.886020  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1198
05/26-06:13:18.886046  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5633
05/26-06:13:18.886079  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9503
05/26-06:13:18.886104  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:280
05/26-06:13:18.886122  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:259
05/26-06:13:18.886156  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5440
05/26-06:13:18.886178  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8254
05/26-06:13:18.886207  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1031
05/26-06:13:18.886225  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4006
05/26-06:13:18.886268  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:24800
05/26-06:13:18.886289  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5862
05/26-06:13:18.886308  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1719
05/26-06:13:18.886351  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27353
05/26-06:13:18.886420  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7200
05/26-06:13:18.886480  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:25734
05/26-06:13:18.886731  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2013
05/26-06:13:18.886768  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1914
05/26-06:13:18.886786  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1040
05/26-06:13:18.886815  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2008
05/26-06:13:18.886836  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1839
05/26-06:13:18.886856  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:636
05/26-06:13:18.886899  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:56738
05/26-06:13:18.886917  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1112
05/26-06:13:18.886955  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1166
05/26-06:13:18.887022  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1090
05/26-06:13:18.887056  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1007
05/26-06:13:18.887075  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2601
05/26-06:13:18.887093  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5952
05/26-06:13:18.887124  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:20222
05/26-06:13:18.887140  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5950
05/26-06:13:18.887158  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3880
05/26-06:13:18.887277  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8654
05/26-06:13:18.887407  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8088
05/26-06:13:18.887750  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7402
05/26-06:13:18.887969  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:88
05/26-06:13:18.887992  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:711
05/26-06:13:18.888011  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3390
05/26-06:13:18.888104  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:416
05/26-06:13:18.888142  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:666
05/26-06:13:18.888170  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1065
05/26-06:13:18.888194  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1052
05/26-06:13:18.888351  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2602
05/26-06:13:18.888370  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16993
05/26-06:13:18.888391  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2702
05/26-06:13:18.888410  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1149
05/26-06:13:18.888775  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8194
05/26-06:13:18.888795  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4129
05/26-06:13:18.888892  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:64623
05/26-06:13:18.888908  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:987
05/26-06:13:18.888922  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1068
05/26-06:13:18.889113  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9050
05/26-06:13:18.889135  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:366
05/26-06:13:18.889151  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:222
05/26-06:13:18.889254  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9595
05/26-06:13:18.889355  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:512
05/26-06:13:18.889383  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9593
05/26-06:13:18.889401  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:783
05/26-06:13:18.889502  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6059
05/26-06:13:18.889520  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9100
05/26-06:13:18.889541  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5915
05/26-06:13:18.889654  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:512
05/26-06:13:18.889706  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1119
05/26-06:13:18.889898  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5907
05/26-06:13:18.890022  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6502
05/26-06:13:18.890058  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1580
05/26-06:13:18.890073  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7777
05/26-06:13:18.890167  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1974
05/26-06:13:18.890191  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10566
05/26-06:13:18.890272  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4343
05/26-06:13:18.890303  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:60020
05/26-06:13:18.890379  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2383
05/26-06:13:18.890413  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:406
05/26-06:13:18.890486  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5405
05/26-06:13:18.890506  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3371
05/26-06:13:18.890598  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1152
05/26-06:13:18.890986  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4444
05/26-06:13:18.891023  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:407
05/26-06:13:18.891100  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1863
05/26-06:13:18.891121  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2135
05/26-06:13:18.891282  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2068
05/26-06:13:18.891306  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4445
05/26-06:13:18.891333  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8200
05/26-06:13:18.891462  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:15742
05/26-06:13:18.891618  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:37
05/26-06:13:18.891724  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1047
05/26-06:13:18.891829  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9485
05/26-06:13:18.891850  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:17
05/26-06:13:18.891880  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:48080
05/26-06:13:18.891910  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2710
05/26-06:13:18.892044  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6002
05/26-06:13:18.892080  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5555
05/26-06:13:18.892099  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7921
05/26-06:13:18.892129  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1322
05/26-06:13:18.892266  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3766
05/26-06:13:18.892527  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:765
05/26-06:13:18.892551  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:31337
05/26-06:13:18.892998  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2043
05/26-06:13:18.893016  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5357
05/26-06:13:18.893086  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9102
05/26-06:13:18.893121  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8081
05/26-06:13:18.893305  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:800
05/26-06:13:18.893321  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2701
05/26-06:13:18.893392  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1277
05/26-06:13:18.893428  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49160
05/26-06:13:18.893533  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7443
05/26-06:13:18.893750  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:44443
05/26-06:13:18.893772  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1102
05/26-06:13:18.893840  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7106
05/26-06:13:18.893859  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8001
05/26-06:13:18.893879  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2111
05/26-06:13:18.894114  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9666
05/26-06:13:18.894240  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3918
05/26-06:13:18.894266  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1521
05/26-06:13:18.894278  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:389
05/26-06:13:18.894336  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1111
05/26-06:13:18.894366  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6129
05/26-06:13:18.894388  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2161
05/26-06:13:18.894406  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5414
05/26-06:13:18.894418  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5269
05/26-06:13:18.894630  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9415
05/26-06:13:18.894697  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1864
05/26-06:13:18.895020  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5631
05/26-06:13:18.895087  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1073
05/26-06:13:18.895123  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1056
05/26-06:13:18.895251  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:119
05/26-06:13:18.895276  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6009
05/26-06:13:18.895372  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1028
05/26-06:13:18.895490  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2399
05/26-06:13:18.895636  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2718
05/26-06:13:18.895737  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4279
05/26-06:13:18.895852  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1023
05/26-06:13:18.895956  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1124
05/26-06:13:18.896059  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5903
05/26-06:13:18.896079  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:27000
05/26-06:13:18.896199  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1057
05/26-06:13:18.896318  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1070
05/26-06:13:18.896345  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2002
05/26-06:13:18.896438  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:33899
05/26-06:13:18.896466  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5431
05/26-06:13:18.896584  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19350
05/26-06:13:18.896744  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1067
05/26-06:13:18.896774  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6788
05/26-06:13:18.896792  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2910
05/26-06:13:18.896896  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49157
05/26-06:13:18.896920  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:543
05/26-06:13:18.896951  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5280
05/26-06:13:18.897804  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6547
05/26-06:13:18.897824  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1300
05/26-06:13:18.897898  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3301
05/26-06:13:18.897927  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:311
05/26-06:13:18.898058  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1044
05/26-06:13:18.898256  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6692
05/26-06:13:18.898276  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:691
05/26-06:13:18.898349  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32769
05/26-06:13:18.898385  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6004
05/26-06:13:18.898542  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3013
05/26-06:13:18.898564  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9071
05/26-06:13:18.898663  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:30000
05/26-06:13:18.898868  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1108
05/26-06:13:18.898886  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3052
05/26-06:13:18.899098  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8086
05/26-06:13:18.899114  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9207
05/26-06:13:18.899127  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2009
05/26-06:13:18.899148  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2323
05/26-06:13:18.899161  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:18101
05/26-06:13:18.899174  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10626
05/26-06:13:18.899205  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6510
05/26-06:13:18.899221  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1244
05/26-06:13:18.899235  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1066
05/26-06:13:18.899250  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5904
05/26-06:13:18.899269  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50500
05/26-06:13:18.899290  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:425
05/26-06:13:18.899310  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:873
05/26-06:13:18.899802  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50002
05/26-06:13:18.899954  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:18988
05/26-06:13:18.899977  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:255
05/26-06:13:18.900075  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:64680
05/26-06:13:18.900098  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1213
05/26-06:13:18.900209  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:58080
05/26-06:13:18.900245  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2525
05/26-06:13:18.900262  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6789
05/26-06:13:18.900286  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5560
05/26-06:13:18.900389  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7435
05/26-06:13:18.900581  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50006
05/26-06:13:18.900808  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:563
05/26-06:13:18.900834  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3580
05/26-06:13:18.900926  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3168
05/26-06:13:18.900954  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1037
05/26-06:13:18.901074  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:23502
05/26-06:13:18.901314  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1122
05/26-06:13:18.901349  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8649
05/26-06:13:18.901426  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6112
05/26-06:13:18.901450  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:50389
05/26-06:13:18.901632  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:13722
05/26-06:13:18.901740  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:515
05/26-06:13:18.901953  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6839
05/26-06:13:18.902415  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49153
05/26-06:13:18.902449  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3920
05/26-06:13:18.902522  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4125
05/26-06:13:18.902549  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1
05/26-06:13:18.902645  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1126
05/26-06:13:18.902668  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1186
05/26-06:13:18.902694  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8100
05/26-06:13:18.902712  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7627
05/26-06:13:18.902852  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:593
05/26-06:13:18.902979  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:19
05/26-06:13:18.903020  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6567
05/26-06:13:18.903508  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1061
05/26-06:13:18.903578  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2106
05/26-06:13:18.903610  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16113
05/26-06:13:18.903638  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:81
05/26-06:13:18.903796  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9900
05/26-06:13:18.903825  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5998
05/26-06:13:18.903854  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:13
05/26-06:13:18.903872  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1192
05/26-06:13:18.903889  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1875
05/26-06:13:18.903911  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:42510
05/26-06:13:18.903927  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2393
05/26-06:13:18.903948  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1059
05/26-06:13:18.904158  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32775
05/26-06:13:18.904432  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1104
05/26-06:13:18.904557  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1666
05/26-06:13:18.904771  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4321
05/26-06:13:18.904789  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10003
05/26-06:13:18.904801  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5102
05/26-06:13:18.904890  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9099
05/26-06:13:18.904913  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:49156
05/26-06:13:18.904930  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1164
05/26-06:13:18.905155  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1972
05/26-06:13:18.905222  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1099
05/26-06:13:18.905314  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:648
05/26-06:13:18.905338  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6580
05/26-06:13:18.905441  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1099
05/26-06:13:18.905571  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1233
05/26-06:13:18.905599  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8222
05/26-06:13:18.905693  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:52822
05/26-06:13:18.905750  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1033
05/26-06:13:18.906042  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9103
05/26-06:13:18.906063  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9618
05/26-06:13:18.906144  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1494
05/26-06:13:18.906172  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:5925
05/26-06:13:18.906190  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1022
05/26-06:13:18.906331  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:8045
05/26-06:13:18.906567  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1050
05/26-06:13:18.906880  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10012
05/26-06:13:18.906914  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:32782
05/26-06:13:18.906997  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7938
05/26-06:13:18.907511  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:6669
05/26-06:13:18.907529  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9010
05/26-06:13:18.907584  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:667
05/26-06:13:18.907602  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:16000
05/26-06:13:18.907618  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9200
05/26-06:13:18.907711  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3261
05/26-06:13:18.907896  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1021
05/26-06:13:18.908152  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:79
05/26-06:13:18.908168  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:63331
05/26-06:13:18.908187  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:3269
05/26-06:13:18.908198  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:43
05/26-06:13:18.908210  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1131
05/26-06:13:18.908221  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1038
05/26-06:13:18.908244  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:14238
05/26-06:13:18.908257  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:4111
05/26-06:13:18.908269  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:52673
05/26-06:13:18.908282  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1311
05/26-06:13:18.908305  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:427
05/26-06:13:18.908318  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1024
05/26-06:13:18.908329  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:2010
05/26-06:13:18.908341  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9968
05/26-06:13:18.908365  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1998
05/26-06:13:18.908378  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:12265
05/26-06:13:18.908391  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10010
05/26-06:13:18.908404  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:7778
05/26-06:13:18.908430  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:10000
05/26-06:13:18.908443  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:901
05/26-06:13:18.908455  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1217
05/26-06:13:18.908467  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:1075
05/26-06:13:18.908490  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:41822 -> 10.10.10.10:9502
05/26-06:13:19.198486  [**] [1:10000005:2] ”NMAP scan detected!” [**] [Priority: 0] {TCP} 10.10.10.20:36898 -> 10.10.10.10:21"
vACCrc60,for the cursor hog this is snowybot,coinwalk,JavaScript,Sunday 26th of May 2024 05:16:05 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var fours = (prefit*3.9);
var winnerdinner = (elderly*24);
var snowy = elderly;
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 7;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = parseFloat(great);
}
if (great>snowy){
    snowy = parseFloat(great);
    }
if ((beast>=fours)&&(great>=snowy)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = parseFloat(great);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 7;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = parseFloat(great);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1);
}
go();"
8ZVDzRAJ,for the cursor hog this is snowybot,coinwalk,JavaScript,Sunday 26th of May 2024 05:01:47 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/1000).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var fours = (prefit*3.9);
var winnerdinner = (elderly*24);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 7;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>snowy){
    snowy = ((Math.floor(great/tens))*tens);
    }
if ((fours<=beast)&&(great>snowy)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 7;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1);
}
go();"
P2fiucqC,xxxx,portalxwe,Perl,Sunday 26th of May 2024 04:15:09 AM CDT,"dax

























daxdax

























dax"
QK72Dw58,daxrw,portalxwe,HTML,Sunday 26th of May 2024 04:14:53 AM CDT,"ddax

























daxdax

























dax"
G30VGwSJ,s,portalxwe,Basic4GL,Sunday 26th of May 2024 04:14:45 AM CDT,"dax
d
























dax"
pj4VG9TY,Installing Process Nederlands,RRdabbyholla3,JSON,Sunday 26th of May 2024 03:25:28 AM CDT,"{
    ""InstallingFilesText"": ""Installeren van installatiebestanden"",
    ""InstallingLanguageText"": ""Taal instellen"",
    ""PepareRestartText"": ""Herstarten voorbereiden"",
    ""RestartText"": ""Herstarten"",
	""KeepPCOnText"": ""Schakel uw PC niet uit.""
}"
12Pr7ttS,ДЗ Работа с классами,TeT91,C#,Sunday 26th of May 2024 03:18:54 AM CDT,"using System;

namespace CSLight
{
	class Player
    {
		private string _name;
		private int _health;

		public Player(string name, int health)
        {
            _name = name;
            _health = health;
        }
		public void ShowInfo()
        {
			Console.WriteLine(""Игрок - "" + _name + ""HP - "" + _health);
        }
    }
}"
iP7FS8AV,💸G2A.com Free Gift Card Guide May 2024🔥,buch,GetText,Sunday 26th of May 2024 03:12:44 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0096206.pdf

Working as of:

26 May 2024"
QjtYpdHr,🎉G2A.com Free Gift Card Guide May 2024🚀,Alfonso1119,GetText,Sunday 26th of May 2024 03:06:48 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0096206.pdf

Working as of:

26 May 2024"
B9RFRjbJ,🚀G2A.com Free Gift Card Guide May 2024,Garoam,GetText,Sunday 26th of May 2024 03:00:54 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0096206.pdf

Working as of:

26 May 2024"
Ch16sfqV,🎉G2A.com Free Gift Card Guide May 2024🚀,lookos13,GetText,Sunday 26th of May 2024 02:49:05 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0096206.pdf

Working as of:

26 May 2024"
jDC51q9E,🚀G2A.com Free Gift Card Guide May 2024,pestinha,GetText,Sunday 26th of May 2024 02:43:10 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_0096206.pdf

Working as of:

26 May 2024"
RS8q25DV,💰G2A.com Free Gift Card Guide May 2024💰,kjihu25,GetText,Sunday 26th of May 2024 02:29:24 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_6363715.pdf

Working as of:

26 May 2024"
6pMb89pR,🚀G2A.com Free Gift Card Guide May 2024🎉,Alfonso1119,GetText,Sunday 26th of May 2024 02:11:39 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_6363715.pdf

Working as of:

26 May 2024"
c4bpSZuz,structure nearly done snowybot,coinwalk,JavaScript,Sunday 26th of May 2024 02:10:26 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/24).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var fives = (prefit*4.9);
var winnerdinner = (elderly*1.9);
var snowy = ((Math.floor(elderly/tens))*tens);
var snowzy = ((Math.floor(elderly/tens))*tens);
var snowie = ((Math.floor(elderly/tens))*tens);
var great = elderly;
var bolux = false;
var upped = 6.9;
var downed = 2.9;
var fart = 7;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = Number((great-elderly).toFixed(8));
console.log(""profit"");
console.log(dog);
if (great<=(snowie-(beast*downed))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if (great>=(snowie+(beast*upped))){
    beast = beast*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
}
if ((great<=(snowy-tens))&&(great<(((Math.floor(great/tens))*tens)+fives))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 0;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (great>snowy){
    snowy = ((Math.floor(great/tens))*tens);
    }
if (((great/2)<=beast)&&(great>snowy)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/4)<=beast)&&(great>snowy)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
}
if (((great/40)<=beast)&&(great>snowy)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    upped = 4.9;
    downed = 4.9;
    snowie = parseFloat(great);
    snowy = ((Math.floor(great/tens))*tens);
}
if ((great>=(snowzy+(tens*fart)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upped = 6.9;
    downed = 2.9;
    fart = 7;
    snowie = ((Math.floor(great/tens))*tens);
    snowy = ((Math.floor(great/tens))*tens);
    snowzy = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1);
}
go();"
VXQaqvqW,🎉G2A.com Free Gift Card Guide May 2024,Garoam,GetText,Sunday 26th of May 2024 02:05:45 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Steam gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_6363715.pdf

Working as of:

26 May 2024"
yB7hjagR,💰G2A.com Free Gift Card Guide May 2024🔥,atakan1983,GetText,Sunday 26th of May 2024 01:59:50 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Apple gift cards & everything else offered. 
This is the most updated version of this script. Any other posted will not work!

PDF guide here:
https://drive.google.com/file/d/13fMNGqCtIp_audnfJynQaaYtl3NaICCd/view?usp=g2a_refund_exploit_6363715.pdf

Working as of:

26 May 2024"
