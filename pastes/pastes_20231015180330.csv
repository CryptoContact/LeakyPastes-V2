id,title,username,language,date,content
eGLzJ2FV,Mini-Bancomat (recapitulare functii),ToniDev,C++,Sunday 15th of October 2023 12:49:37 PM CDT,"#include <iostream> 
using namespace std;

int alegereOperatie()
{
    int raspuns = -1;

    cout << ""======================="" << endl;
    cout << ""Bun venit la bancomat!"" << endl;
    cout << ""======================="" << endl;
    cout << ""1 -> Interogare sold"" << endl;
    cout << ""2 -> Retragere bani"" << endl;
    cout << ""3 -> Depunere bani"" << endl;
    cout << ""4 -> Iesire"" << endl;
    cout << ""Raspuns: "";
    cin >> raspuns;

    return raspuns;
}

void afisareSold(int& sold, string nume)
{
    cout <<""Soldul tau, "" << nume << "" este de: "" << sold << endl;
}

bool retragereSold(int& sold)
{
    int valoare_de_retras;
    cout << ""Cat vrei sa retragi? Sold curent: "" << sold << endl;
    cout << ""Raspuns: ""; cin >> valoare_de_retras;

    if (valoare_de_retras > sold) return false;
    else {
        sold = sold - valoare_de_retras;
        return true;
    }
}

void depunereSold(int& sold)
{
    int depunere;
    cout << ""Introdu suma pe care vrei sa o depui: "";
    cin >> depunere;

    sold += depunere;
}

void analizareAlegere(int raspuns, int& sold, string nume)
{
    switch (raspuns)
    {
    case 1:
        cout << ""Afisare sold..."" << endl;
        afisareSold(sold, nume);
        break;

    case 2:
        cout << ""Se proceseaza retragerea..."" << endl;
        if (retragereSold(sold) == true) {
            cout << ""Succes! Sold curent: "" << sold << endl;
        }
        else {
            cout << ""Ai ales o suma prea mare!"" << endl;
            cout << ""Soldul tau este de: "" << sold << endl;
        }
        break;

    case 3:
        cout << ""Se proceseaza depunerea..."" << endl;
        depunereSold(sold);
        cout << ""Succes! Sold curent: "" << sold << endl;
        break;

    case 4:
        cout << ""Programul se va inchide."" << endl;
        break;

    default:
        cout << ""Ai ales o optiune necunoscuta"" << endl;
        break;
    }
}

void mainLoop(int& sold, string nume)
{
    int raspuns = -1;

    while (raspuns != 4)
    {
        raspuns = alegereOperatie();
        analizareAlegere(raspuns, sold, nume);
    }

    cout << ""La revedere, "" << nume << ""!"" << endl;
}

int main() {

    string nume = ""Alina"";
    int sold = 10000, numar_card = 74623983, varsta = 22;

    mainLoop(sold, nume);

    return 0;
}"
f92ecKSS,Funded Media Marketing System SHARE CODE,zaviclarke,JavaScript,Sunday 15th of October 2023 12:41:34 PM CDT,"<!--Begin ClixTrac.com Banner Code -->
<script type=""text/javascript"" language=""javascript"" src=""https://clixtrac.com/js/310512""></script>
<!--End ClixTrac.com Banner Code -->"
BF1TFE2z,Reactor/Turbine Control,SythsGod,Lua,Sunday 15th of October 2023 12:35:21 PM CDT,"reactor = peripheral.wrap(""BigReactors-Reactor_0"")
turbine = peripheral.wrap(""BigReactors-Turbine_0"")
mon = peripheral.wrap(""left"")

-- STATIC VARS
maxEnergy = 9000000
minEnergy = 1000000
minRotorSpeed = 1820
maxRotorSpeed = 1860

-- VARIABLE VARS
energyStoredLastCycle = 0
avgBlockSize = 1
avgConsumption = 0
numberOfContrlRods = 0

------------------------------------------------
--FUNCTIONS-------------------------------------
------------------------------------------------

function round(num, numDecimalPlaces)
    local mult = 10^(numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
end

function resetTerm()
    term.clear()
    term.setCursorPos(1,1)
    term.setBackgroundColor(colors.black)
    term.setTextColor(colors.white)
end

function resetMon()
    mon.clear()
    mon.setCursorPos(1,1)
    mon.setBackgroundColor(colors.black)
    mon.setTextColor(colors.white)
end

function nextLine()
    x,y = mon.getCursorPos()
    y = y + 1
    mon.setCursorPos(1,y)
end

function initAverages()
    local f = fs.open(""reactor_averages"", ""r"")
    
    avgConsumption = tonumber(f.readLine())
    avgBlockSize = tonumber(f.readLine())
    
    f.close()
end

function saveAveragesToFile(consumption, size)
    local f = fs.open(""reactor_averages"", ""w"")
    
    f.writeLine(consumption)
    f.writeLine(size)
    
    f.close()
end

------------------------------------------------
--OUTSIDE LOOP----------------------------------
------------------------------------------------

initAverages()

numberOfContrlRods = reactor.getNumberOfControlRods()

------------------------------------------------
--LOOP------------------------------------------
------------------------------------------------

while true do

resetTerm()
resetMon()

enabledStatus = reactor.getActive()
mon.write(""Status: "")

statusColor = enabledStatus and colors.green or colors.red
mon.setTextColor(statusColor)
mon.write(enabledStatus and ""Online"" or ""Offline"")

mon.setTextColor(colors.white)
nextLine()

-- energy = reactor.getEnergyStored()
-- print(""Energy: "" .. energy)
-- mon.write(""Energy: "")
-- if energy < 1500000 then
--     mon.setTextColor(colors.red)
-- elseif energy > 1500000 and energy < 6500000 then
--     mon.setTextColor(colors.yellow)
-- elseif energy > 6500000 then
--     mon.setTextColor(colors.green)
-- end

-- mon.write(energy .. "" RF"")
-- mon.setTextColor(colors.white)
-- nextLine()

-- rfChangePerTick = (energy - energyStoredLastCycle) / 20
-- mon.write(""RF Change: "")

-- if rfChangePerTick < 0 then
--     mon.setTextColor(colors.red)
-- else
--     mon.setTextColor(colors.green)
--     rfChangePerTick = ""+"" .. rfChangePerTick
-- end

-- mon.write(rfChangePerTick .. "" RF/t"")
-- mon.setTextColor(colors.white)
-- nextLine()

-- energyStoredLastCycle = energy

fuelConsumedPerTick = reactor.getFuelConsumedLastTick()
fuelConsumedPerSecond = round(fuelConsumedPerTick * 20,2)
print(""Fuel consumption (/s): "" .. fuelConsumedPerSecond .. "" mb"")
mon.write(""Fuel Consumption: "" .. fuelConsumedPerSecond .. "" mb/s"")
nextLine()

ingotsConsumedPerSecond = fuelConsumedPerSecond / 1000
--print(""Uranium consumption (/s): "" .. ingotsConsumedPerSecond .. "" ingots"")

ingotConsumptionPerHour = round(ingotsConsumedPerSecond * 60 * 60,2)
print(""Uranium consumption (/h): "" .. ingotConsumptionPerHour .. "" ingots"")
mon.write(""Uranium Consumption: "" .. ingotConsumptionPerHour .. "" /h"")
nextLine()

avgConsumption = avgConsumption + (ingotConsumptionPerHour - avgConsumption) / avgBlockSize
avgBlockSize = avgBlockSize + 1

saveAveragesToFile(avgConsumption, avgBlockSize)

mon.write(""Average Uranium Consumption: "" .. round(avgConsumption, 3) .. "" /h"")
nextLine()
nextLine()

-- if energy > maxEnergy and enabledStatus then
--     print(""Disabling reactor.."")
--     reactor.setActive(false)
-- elseif energy < minEnergy and not enabledStatus then
--     print(""Enabling reactor.."")
--     reactor.setActive(true)
-- end

local turb_EnergyStored = turbine.getEnergyStored()
local turb_RotorSpeed = turbine.getRotorSpeed()
local turb_EnergyProduced = turbine.getEnergyProducedLastTick()

if turb_RotorSpeed < minRotorSpeed then
    turbine.setInductorEngaged(false)
elseif turb_RotorSpeed > maxRotorSpeed then
    turbine.setInductorEngaged(true)
end

mon.write(""Energy Produced: "" .. turb_EnergyProduced .. "" RF/t"")

os.sleep(1)
end"
KPHAhR51,WordPress:  Establece una imagen de respaldo para las imágenes destacadas de las entradas,YordanSoares,PHP,Sunday 15th of October 2023 12:02:46 PM CDT,"<?php
/**
 * WordPress:
 * Establece una imagen de respaldo (fallback/placeholder) para las imágenes destacadas de las entradas.
 */
add_filter( 'post_thumbnail_html', 'wp_establecer_imagen_destacada_por_defecto', 20, 5 );
function wp_establecer_imagen_destacada_por_defecto( $html, $post_id, $post_thumbnail_id, $size, $attr ) {
	// Si ya hay una imagen establecida, muestra esa imagen
	if ( $post_thumbnail_id ) {
		return $html;
	}
	// Si no, muestra la imagen de respaldo
	$default_thumbnail_id = 123; // establece aquí el ID de la imagen destacada de respaldo
	return wp_get_attachment_image( $default_thumbnail_id, $size, false, $attr );
}"
NX4BxkDt,Nigerian scammers [15-10-2/2023],bombaires,AIMMS,Sunday 15th of October 2023 11:54:09 AM CDT,"<a href=""mailto:entwistlej06@bk.ru"">entwistlej06@bk.ru</a>
<a href=""mailto:helliott571@googlemail.com"">helliott571@googlemail.com</a>
<a href=""mailto:h.el.l.i.o.t.t5.7.1@googlemail.com"">h.el.l.i.o.t.t5.7.1@googlemail.com</a>
<a href=""mailto:h.el.l.io.t.t.57.1@googlemail.com"">h.el.l.io.t.t.57.1@googlemail.com</a>
<a href=""mailto:he.l.lio.tt.5.7.1@googlemail.com"">he.l.lio.tt.5.7.1@googlemail.com</a>
<a href=""mailto:h.elli.o.tt5.7.1@googlemail.com"">h.elli.o.tt5.7.1@googlemail.com</a>
<a href=""mailto:h.el.li.ot.t5.7.1@googlemail.com"">h.el.li.ot.t5.7.1@googlemail.com</a>
<a href=""mailto:h.e.ll.i.o.tt.5.71@googlemail.com"">h.e.ll.i.o.tt.5.71@googlemail.com</a>
<a href=""mailto:he.lli.o.t.t5.7.1@googlemail.com"">he.lli.o.t.t5.7.1@googlemail.com</a>
<a href=""mailto:h.el.lio.t.t5.7.1@googlemail.com"">h.el.lio.t.t5.7.1@googlemail.com</a>
<a href=""mailto:hell.io.tt5.7.1@googlemail.com"">hell.io.tt5.7.1@googlemail.com</a>
<a href=""mailto:h.e.l.l.io.tt.571@googlemail.com"">h.e.l.l.io.tt.571@googlemail.com</a>
<a href=""mailto:h.ell.i.ot.t57.1@googlemail.com"">h.ell.i.ot.t57.1@googlemail.com</a>
<a href=""mailto:hel.l.i.o.t.t.571@googlemail.com"">hel.l.i.o.t.t.571@googlemail.com</a>
<a href=""mailto:hel.l.i.o.tt5.7.1@googlemail.com"">hel.l.i.o.tt5.7.1@googlemail.com</a>
<a href=""mailto:he.l.li.ot.t57.1@googlemail.com"">he.l.li.ot.t57.1@googlemail.com</a>
<a href=""mailto:he.l.l.io.t.t5.71@googlemail.com"">he.l.l.io.t.t5.71@googlemail.com</a>
<a href=""mailto:h.e.l.l.io.tt571@googlemail.com"">h.e.l.l.io.tt571@googlemail.com</a>
<a href=""mailto:h.e.l.li.ott5.7.1@googlemail.com"">h.e.l.li.ott5.7.1@googlemail.com</a>
<a href=""mailto:hel.li.o.tt.571@googlemail.com"">hel.li.o.tt.571@googlemail.com</a>
<a href=""mailto:he.l.li.ott57.1@googlemail.com"">he.l.li.ott57.1@googlemail.com</a>
<a href=""mailto:h.e.l.liot.t.5.71@googlemail.com"">h.e.l.liot.t.5.71@googlemail.com</a>
<a href=""mailto:hell.io.tt571@googlemail.com"">hell.io.tt571@googlemail.com</a>
<a href=""mailto:h.ell.iott5.71@googlemail.com"">h.ell.iott5.71@googlemail.com</a>
<a href=""mailto:h.el.l.i.ot.t5.71@googlemail.com"">h.el.l.i.ot.t5.71@googlemail.com</a>
<a href=""mailto:hel.lio.t.t.571@googlemail.com"">hel.lio.t.t.571@googlemail.com</a>
<a href=""mailto:hel.li.o.t.t.57.1@googlemail.com"">hel.li.o.t.t.57.1@googlemail.com</a>
<a href=""mailto:he.ll.i.ot.t.5.71@googlemail.com"">he.ll.i.ot.t.5.71@googlemail.com</a>
<a href=""mailto:hell.iot.t5.7.1@googlemail.com"">hell.iot.t5.7.1@googlemail.com</a>
<a href=""mailto:he.llio.t.t5.71@googlemail.com"">he.llio.t.t5.71@googlemail.com</a>
<a href=""mailto:h.e.lliott.5.7.1@googlemail.com"">h.e.lliott.5.7.1@googlemail.com</a>
<a href=""mailto:he.l.li.ot.t5.71@googlemail.com"">he.l.li.ot.t5.71@googlemail.com</a>
<a href=""mailto:h.e.l.liot.t57.1@googlemail.com"">h.e.l.liot.t57.1@googlemail.com</a>
<a href=""mailto:h.el.liott57.1@googlemail.com"">h.el.liott57.1@googlemail.com</a>
<a href=""mailto:h.e.l.l.i.ott.571@googlemail.com"">h.e.l.l.i.ott.571@googlemail.com</a>
<a href=""mailto:helliot.t.57.1@googlemail.com"">helliot.t.57.1@googlemail.com</a>
<a href=""mailto:h.e.lliott571@googlemail.com"">h.e.lliott571@googlemail.com</a>
<a href=""mailto:he.l.l.iott.5.71@googlemail.com"">he.l.l.iott.5.71@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ot.t57.1@googlemail.com"">h.e.ll.i.ot.t57.1@googlemail.com</a>
<a href=""mailto:he.l.l.io.tt571@googlemail.com"">he.l.l.io.tt571@googlemail.com</a>
<a href=""mailto:he.ll.i.o.tt5.7.1@googlemail.com"">he.ll.i.o.tt5.7.1@googlemail.com</a>
<a href=""mailto:h.e.lli.o.tt.571@googlemail.com"">h.e.lli.o.tt.571@googlemail.com</a>
<a href=""mailto:h.ell.io.t.t57.1@googlemail.com"">h.ell.io.t.t57.1@googlemail.com</a>
<a href=""mailto:h.el.l.i.o.tt57.1@googlemail.com"">h.el.l.i.o.tt57.1@googlemail.com</a>
<a href=""mailto:he.l.l.i.ot.t.57.1@googlemail.com"">he.l.l.i.ot.t.57.1@googlemail.com</a>
<a href=""mailto:hell.iott.57.1@googlemail.com"">hell.iott.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.l.iot.t5.71@googlemail.com"">h.e.l.l.iot.t5.71@googlemail.com</a>
<a href=""mailto:h.elli.o.tt.5.71@googlemail.com"">h.elli.o.tt.5.71@googlemail.com</a>
<a href=""mailto:h.e.l.l.i.o.tt5.71@googlemail.com"">h.e.l.l.i.o.tt5.71@googlemail.com</a>
<a href=""mailto:hell.i.ott.5.7.1@googlemail.com"">hell.i.ott.5.7.1@googlemail.com</a>
<a href=""mailto:h.ell.i.o.t.t57.1@googlemail.com"">h.ell.i.o.t.t57.1@googlemail.com</a>
<a href=""mailto:h.e.lli.ot.t.5.7.1@googlemail.com"">h.e.lli.ot.t.5.7.1@googlemail.com</a>
<a href=""mailto:he.l.l.i.o.tt571@googlemail.com"">he.l.l.i.o.tt571@googlemail.com</a>
<a href=""mailto:hel.l.i.o.tt571@googlemail.com"">hel.l.i.o.tt571@googlemail.com</a>
<a href=""mailto:h.e.l.li.ot.t57.1@googlemail.com"">h.e.l.li.ot.t57.1@googlemail.com</a>
<a href=""mailto:h.el.liott.57.1@googlemail.com"">h.el.liott.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.li.o.tt571@googlemail.com"">h.e.l.li.o.tt571@googlemail.com</a>
<a href=""mailto:hel.li.o.t.t571@googlemail.com"">hel.li.o.t.t571@googlemail.com</a>
<a href=""mailto:helli.o.t.t.571@googlemail.com"">helli.o.t.t.571@googlemail.com</a>
<a href=""mailto:h.e.ll.i.o.tt571@googlemail.com"">h.e.ll.i.o.tt571@googlemail.com</a>
<a href=""mailto:h.e.llio.t.t.57.1@googlemail.com"">h.e.llio.t.t.57.1@googlemail.com</a>
<a href=""mailto:h.ell.i.o.tt.571@googlemail.com"">h.ell.i.o.tt.571@googlemail.com</a>
<a href=""mailto:hell.i.ott.571@googlemail.com"">hell.i.ott.571@googlemail.com</a>
<a href=""mailto:h.e.ll.i.o.tt57.1@googlemail.com"">h.e.ll.i.o.tt57.1@googlemail.com</a>
<a href=""mailto:h.e.l.li.o.t.t5.7.1@googlemail.com"">h.e.l.li.o.t.t5.7.1@googlemail.com</a>
<a href=""mailto:hel.liot.t.5.7.1@googlemail.com"">hel.liot.t.5.7.1@googlemail.com</a>
<a href=""mailto:h.e.l.l.io.t.t5.71@googlemail.com"">h.e.l.l.io.t.t5.71@googlemail.com</a>
<a href=""mailto:h.ell.io.tt.5.7.1@googlemail.com"">h.ell.io.tt.5.7.1@googlemail.com</a>
<a href=""mailto:hel.l.io.tt.5.7.1@googlemail.com"">hel.l.io.tt.5.7.1@googlemail.com</a>
<a href=""mailto:hel.l.i.ott5.71@googlemail.com"">hel.l.i.ott5.71@googlemail.com</a>
<a href=""mailto:helli.o.t.t.5.71@googlemail.com"">helli.o.t.t.5.71@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ott5.71@googlemail.com"">h.e.ll.i.ott5.71@googlemail.com</a>
<a href=""mailto:h.elli.ott571@googlemail.com"">h.elli.ott571@googlemail.com</a>
<a href=""mailto:he.lli.o.t.t5.71@googlemail.com"">he.lli.o.t.t5.71@googlemail.com</a>
<a href=""mailto:h.ellio.t.t.57.1@googlemail.com"">h.ellio.t.t.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.liot.t571@googlemail.com"">h.e.l.liot.t571@googlemail.com</a>
<a href=""mailto:h.elli.o.tt5.71@googlemail.com"">h.elli.o.tt5.71@googlemail.com</a>
<a href=""mailto:helli.o.t.t5.71@googlemail.com"">helli.o.t.t5.71@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ot.t.5.7.1@googlemail.com"">h.e.ll.i.ot.t.5.7.1@googlemail.com</a>
<a href=""mailto:he.l.l.iott5.71@googlemail.com"">he.l.l.iott5.71@googlemail.com</a>
<a href=""mailto:he.l.li.ott.5.71@googlemail.com"">he.l.li.ott.5.71@googlemail.com</a>
<a href=""mailto:h.ell.iot.t5.71@googlemail.com"">h.ell.iot.t5.71@googlemail.com</a>
<a href=""mailto:h.e.lliot.t.57.1@googlemail.com"">h.e.lliot.t.57.1@googlemail.com</a>
<a href=""mailto:hel.l.iot.t.571@googlemail.com"">hel.l.iot.t.571@googlemail.com</a>
<a href=""mailto:he.l.l.i.o.tt.5.71@googlemail.com"">he.l.l.i.o.tt.5.71@googlemail.com</a>
<a href=""mailto:h.e.l.l.iot.t571@googlemail.com"">h.e.l.l.iot.t571@googlemail.com</a>
<a href=""mailto:he.l.li.o.tt571@googlemail.com"">he.l.li.o.tt571@googlemail.com</a>
<a href=""mailto:h.e.ll.iot.t.5.71@googlemail.com"">h.e.ll.iot.t.5.71@googlemail.com</a>
<a href=""mailto:h.e.l.l.i.ot.t.571@googlemail.com"">h.e.l.l.i.ot.t.571@googlemail.com</a>
<a href=""mailto:he.lli.o.t.t57.1@googlemail.com"">he.lli.o.t.t57.1@googlemail.com</a>
<a href=""mailto:he.ll.i.o.t.t.57.1@googlemail.com"">he.ll.i.o.t.t.57.1@googlemail.com</a>
<a href=""mailto:hell.iot.t.5.7.1@googlemail.com"">hell.iot.t.5.7.1@googlemail.com</a>
<a href=""mailto:h.el.l.iot.t.571@googlemail.com"">h.el.l.iot.t.571@googlemail.com</a>
<a href=""mailto:h.el.lio.t.t.571@googlemail.com"">h.el.lio.t.t.571@googlemail.com</a>
<a href=""mailto:h.e.lliot.t.571@googlemail.com"">h.e.lliot.t.571@googlemail.com</a>
<a href=""mailto:h.e.l.lio.tt.571@googlemail.com"">h.e.l.lio.tt.571@googlemail.com</a>
<a href=""mailto:he.ll.i.o.t.t5.71@googlemail.com"">he.ll.i.o.t.t5.71@googlemail.com</a>
<a href=""mailto:he.ll.i.ott5.71@googlemail.com"">he.ll.i.ott5.71@googlemail.com</a>
<a href=""mailto:he.l.lio.tt571@googlemail.com"">he.l.lio.tt571@googlemail.com</a>
<a href=""mailto:he.ll.iott.5.7.1@googlemail.com"">he.ll.iott.5.7.1@googlemail.com</a>
<a href=""mailto:h.ell.iott5.7.1@googlemail.com"">h.ell.iott5.7.1@googlemail.com</a>
<a href=""mailto:hel.l.iott.57.1@googlemail.com"">hel.l.iott.57.1@googlemail.com</a>
<a href=""mailto:hel.l.iot.t571@googlemail.com"">hel.l.iot.t571@googlemail.com</a>
<a href=""mailto:hell.i.o.tt.57.1@googlemail.com"">hell.i.o.tt.57.1@googlemail.com</a>
<a href=""mailto:h.e.llio.t.t571@googlemail.com"">h.e.llio.t.t571@googlemail.com</a>
<a href=""mailto:h.e.lliott.571@googlemail.com"">h.e.lliott.571@googlemail.com</a>
<a href=""mailto:h.el.liott5.7.1@googlemail.com"">h.el.liott5.7.1@googlemail.com</a>
<a href=""mailto:he.l.liot.t.571@googlemail.com"">he.l.liot.t.571@googlemail.com</a>
<a href=""mailto:h.e.ll.io.tt.571@googlemail.com"">h.e.ll.io.tt.571@googlemail.com</a>
<a href=""mailto:h.el.l.i.o.tt571@googlemail.com"">h.el.l.i.o.tt571@googlemail.com</a>
<a href=""mailto:h.e.lliott.57.1@googlemail.com"">h.e.lliott.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.li.ott5.71@googlemail.com"">h.e.l.li.ott5.71@googlemail.com</a>
<a href=""mailto:h.el.liott.5.71@googlemail.com"">h.el.liott.5.71@googlemail.com</a>
<a href=""mailto:h.ell.i.o.tt.5.71@googlemail.com"">h.ell.i.o.tt.5.71@googlemail.com</a>
<a href=""mailto:he.ll.i.o.tt.57.1@googlemail.com"">he.ll.i.o.tt.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.l.iott.571@googlemail.com"">h.e.l.l.iott.571@googlemail.com</a>
<a href=""mailto:h.ell.io.tt.5.71@googlemail.com"">h.ell.io.tt.5.71@googlemail.com</a>
<a href=""mailto:hel.l.i.o.tt5.71@googlemail.com"">hel.l.i.o.tt5.71@googlemail.com</a>
<a href=""mailto:he.l.li.o.t.t57.1@googlemail.com"">he.l.li.o.t.t57.1@googlemail.com</a>
<a href=""mailto:he.lliott57.1@googlemail.com"">he.lliott57.1@googlemail.com</a>
<a href=""mailto:hel.li.ott57.1@googlemail.com"">hel.li.ott57.1@googlemail.com</a>
<a href=""mailto:h.e.lli.o.tt571@googlemail.com"">h.e.lli.o.tt571@googlemail.com</a>
<a href=""mailto:helli.ott.57.1@googlemail.com"">helli.ott.57.1@googlemail.com</a>
<a href=""mailto:he.lli.o.tt5.7.1@googlemail.com"">he.lli.o.tt5.7.1@googlemail.com</a>
<a href=""mailto:h.ell.i.ot.t5.7.1@googlemail.com"">h.ell.i.ot.t5.7.1@googlemail.com</a>
<a href=""mailto:h.e.lliott.5.71@googlemail.com"">h.e.lliott.5.71@googlemail.com</a>
<a href=""mailto:he.lliott.571@googlemail.com"">he.lliott.571@googlemail.com</a>
<a href=""mailto:h.e.l.l.i.o.tt.57.1@googlemail.com"">h.e.l.l.i.o.tt.57.1@googlemail.com</a>
<a href=""mailto:he.lliot.t.5.71@googlemail.com"">he.lliot.t.5.71@googlemail.com</a>
<a href=""mailto:h.el.l.io.tt.57.1@googlemail.com"">h.el.l.io.tt.57.1@googlemail.com</a>
<a href=""mailto:h.e.l.liott.571@googlemail.com"">h.e.l.liott.571@googlemail.com</a>
<a href=""mailto:helli.ot.t57.1@googlemail.com"">helli.ot.t57.1@googlemail.com</a>
<a href=""mailto:hel.li.ott.571@googlemail.com"">hel.li.ott.571@googlemail.com</a>
<a href=""mailto:hellio.t.t.57.1@googlemail.com"">hellio.t.t.57.1@googlemail.com</a>
<a href=""mailto:hel.lio.t.t5.71@googlemail.com"">hel.lio.t.t5.71@googlemail.com</a>
<a href=""mailto:h.el.li.ott.5.7.1@googlemail.com"">h.el.li.ott.5.7.1@googlemail.com</a>
<a href=""mailto:h.el.l.iott.571@googlemail.com"">h.el.l.iott.571@googlemail.com</a>
<a href=""mailto:he.l.l.iot.t5.71@googlemail.com"">he.l.l.iot.t5.71@googlemail.com</a>
<a href=""mailto:he.l.liot.t5.71@googlemail.com"">he.l.liot.t5.71@googlemail.com</a>
<a href=""mailto:h.ell.i.o.tt57.1@googlemail.com"">h.ell.i.o.tt57.1@googlemail.com</a>
<a href=""mailto:he.l.li.o.tt.5.7.1@googlemail.com"">he.l.li.o.tt.5.7.1@googlemail.com</a>
<a href=""mailto:helli.o.tt.57.1@googlemail.com"">helli.o.tt.57.1@googlemail.com</a>
<a href=""mailto:he.l.l.iot.t.571@googlemail.com"">he.l.l.iot.t.571@googlemail.com</a>
<a href=""mailto:h.ell.i.o.tt5.71@googlemail.com"">h.ell.i.o.tt5.71@googlemail.com</a>
<a href=""mailto:he.lliot.t5.7.1@googlemail.com"">he.lliot.t5.7.1@googlemail.com</a>
<a href=""mailto:he.l.l.i.o.tt5.7.1@googlemail.com"">he.l.l.i.o.tt5.7.1@googlemail.com</a>
<a href=""mailto:hell.io.t.t.571@googlemail.com"">hell.io.t.t.571@googlemail.com</a>
<a href=""mailto:hel.liott.5.7.1@googlemail.com"">hel.liott.5.7.1@googlemail.com</a>
<a href=""mailto:h.ell.io.tt5.7.1@googlemail.com"">h.ell.io.tt5.7.1@googlemail.com</a>
<a href=""mailto:h.ell.iot.t.5.71@googlemail.com"">h.ell.iot.t.5.71@googlemail.com</a>
<a href=""mailto:he.ll.io.t.t5.7.1@googlemail.com"">he.ll.io.t.t5.7.1@googlemail.com</a>
<a href=""mailto:h.e.l.lio.tt571@googlemail.com"">h.e.l.lio.tt571@googlemail.com</a>
<a href=""mailto:h.e.l.l.i.ot.t5.71@googlemail.com"">h.e.l.l.i.ot.t5.71@googlemail.com</a>
<a href=""mailto:h.el.l.i.ott.5.7.1@googlemail.com"">h.el.l.i.ott.5.7.1@googlemail.com</a>
<a href=""mailto:h.el.l.i.ott571@googlemail.com"">h.el.l.i.ott571@googlemail.com</a>
<a href=""mailto:hell.i.o.tt.5.71@googlemail.com"">hell.i.o.tt.5.71@googlemail.com</a>
<a href=""mailto:he.l.l.i.o.t.t571@googlemail.com"">he.l.l.i.o.t.t571@googlemail.com</a>
<a href=""mailto:he.ll.i.ott.57.1@googlemail.com"">he.ll.i.ott.57.1@googlemail.com</a>
<a href=""mailto:he.lli.o.t.t.5.7.1@googlemail.com"">he.lli.o.t.t.5.7.1@googlemail.com</a>
<a href=""mailto:he.ll.iot.t5.7.1@googlemail.com"">he.ll.iot.t5.7.1@googlemail.com</a>
<a href=""mailto:he.lliott571@googlemail.com"">he.lliott571@googlemail.com</a>
<a href=""mailto:he.l.l.i.ot.t.5.71@googlemail.com"">he.l.l.i.ot.t.5.71@googlemail.com</a>
<a href=""mailto:h.e.ll.iott571@googlemail.com"">h.e.ll.iott571@googlemail.com</a>
<a href=""mailto:h.el.l.iott57.1@googlemail.com"">h.el.l.iott57.1@googlemail.com</a>
<a href=""mailto:he.l.l.i.ot.t.5.7.1@googlemail.com"">he.l.l.i.ot.t.5.7.1@googlemail.com</a>
<a href=""mailto:hell.iot.t571@googlemail.com"">hell.iot.t571@googlemail.com</a>
<a href=""mailto:h.ellio.t.t571@googlemail.com"">h.ellio.t.t571@googlemail.com</a>
<a href=""mailto:h.el.l.iot.t57.1@googlemail.com"">h.el.l.iot.t57.1@googlemail.com</a>
<a href=""mailto:hell.i.ott5.71@googlemail.com"">hell.i.ott5.71@googlemail.com</a>
<a href=""mailto:he.l.l.i.ott.5.71@googlemail.com"">he.l.l.i.ott.5.71@googlemail.com</a>
<a href=""mailto:he.ll.iot.t571@googlemail.com"">he.ll.iot.t571@googlemail.com</a>
<a href=""mailto:h.e.lli.o.tt.5.71@googlemail.com"">h.e.lli.o.tt.5.71@googlemail.com</a>
<a href=""mailto:he.ll.i.ot.t571@googlemail.com"">he.ll.i.ot.t571@googlemail.com</a>
<a href=""mailto:h.el.l.i.ot.t.571@googlemail.com"">h.el.l.i.ot.t.571@googlemail.com</a>
<a href=""mailto:he.l.l.iot.t.5.71@googlemail.com"">he.l.l.iot.t.5.71@googlemail.com</a>
<a href=""mailto:hel.l.i.ott.5.7.1@googlemail.com"">hel.l.i.ott.5.7.1@googlemail.com</a>
<a href=""mailto:he.l.lio.tt.5.71@googlemail.com"">he.l.lio.tt.5.71@googlemail.com</a>
<a href=""mailto:he.ll.i.ott571@googlemail.com"">he.ll.i.ott571@googlemail.com</a>
<a href=""mailto:he.l.liott.5.7.1@googlemail.com"">he.l.liott.5.7.1@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ot.t.571@googlemail.com"">h.e.ll.i.ot.t.571@googlemail.com</a>
<a href=""mailto:h.ell.i.o.t.t571@googlemail.com"">h.ell.i.o.t.t571@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ott57.1@googlemail.com"">h.e.ll.i.ott57.1@googlemail.com</a>
<a href=""mailto:he.l.l.iott571@googlemail.com"">he.l.l.iott571@googlemail.com</a>
<a href=""mailto:h.el.l.i.o.t.t57.1@googlemail.com"">h.el.l.i.o.t.t57.1@googlemail.com</a>
<a href=""mailto:he.lli.o.t.t.571@googlemail.com"">he.lli.o.t.t.571@googlemail.com</a>
<a href=""mailto:h.e.l.li.ott.5.71@googlemail.com"">h.e.l.li.ott.5.71@googlemail.com</a>
<a href=""mailto:he.ll.iot.t57.1@googlemail.com"">he.ll.iot.t57.1@googlemail.com</a>
<a href=""mailto:he.l.l.i.ot.t5.7.1@googlemail.com"">he.l.l.i.ot.t5.7.1@googlemail.com</a>
<a href=""mailto:h.e.ll.i.ott5.7.1@googlemail.com"">h.e.ll.i.ott5.7.1@googlemail.com</a>
<a href=""mailto:helliot.t5.7.1@googlemail.com"">helliot.t5.7.1@googlemail.com</a>
<a href=""mailto:hell.i.ot.t57.1@googlemail.com"">hell.i.ot.t57.1@googlemail.com</a>
<a href=""mailto:he.l.liott5.7.1@googlemail.com"">he.l.liott5.7.1@googlemail.com</a>
<a href=""mailto:h.elliot.t57.1@googlemail.com"">h.elliot.t57.1@googlemail.com</a>
<a href=""mailto:hellio.t.t5.71@googlemail.com"">hellio.t.t5.71@googlemail.com</a>
<a href=""mailto:h.elli.o.t.t.571@googlemail.com"">h.elli.o.t.t.571@googlemail.com</a>
<a href=""mailto:he.ll.i.ot.t57.1@googlemail.com"">he.ll.i.ot.t57.1@googlemail.com</a>
<a href=""mailto:he.lli.o.tt.571@googlemail.com"">he.lli.o.tt.571@googlemail.com</a>
<a href=""mailto:h.e.ll.io.t.t571@googlemail.com"">h.e.ll.io.t.t571@googlemail.com</a>
<a href=""mailto:he.l.lio.tt5.71@googlemail.com"">he.l.lio.tt5.71@googlemail.com</a>
<a href=""mailto:h.e.l.liott.5.71@googlemail.com"">h.e.l.liott.5.71@googlemail.com</a>
<a href=""mailto:h.e.llio.tt571@googlemail.com"">h.e.llio.tt571@googlemail.com</a>
<a href=""mailto:h.e.l.li.o.t.t.57.1@googlemail.com"">h.e.l.li.o.t.t.57.1@googlemail.com</a>
<a href=""mailto:billlawrence209@googlemail.com"">billlawrence209@googlemail.com</a>
<a href=""mailto:bi.l.l.l.awren.c.e20.9@googlemail.com"">bi.l.l.l.awren.c.e20.9@googlemail.com</a>
<a href=""mailto:billlaw.ren.ce20.9@googlemail.com"">billlaw.ren.ce20.9@googlemail.com</a>
<a href=""mailto:bi.llla.w.r.e.nce.20.9@googlemail.com"">bi.llla.w.r.e.nce.20.9@googlemail.com</a>
<a href=""mailto:b.ill.l.a.w.r.e.nce.2.0.9@googlemail.com"">b.ill.l.a.w.r.e.nce.2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.ll.awrenc.e20.9@googlemail.com"">bi.l.ll.awrenc.e20.9@googlemail.com</a>
<a href=""mailto:bil.l.law.re.nc.e.2.0.9@googlemail.com"">bil.l.law.re.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.aw.r.enc.e.209@googlemail.com"">b.i.l.l.l.aw.r.enc.e.209@googlemail.com</a>
<a href=""mailto:bi.ll.la.w.re.nce2.09@googlemail.com"">bi.ll.la.w.re.nce2.09@googlemail.com</a>
<a href=""mailto:b.il.ll.awr.e.n.c.e.209@googlemail.com"">b.il.ll.awr.e.n.c.e.209@googlemail.com</a>
<a href=""mailto:bi.l.lla.wr.e.n.c.e20.9@googlemail.com"">bi.l.lla.wr.e.n.c.e20.9@googlemail.com</a>
<a href=""mailto:bi.lllaw.re.nce.209@googlemail.com"">bi.lllaw.re.nce.209@googlemail.com</a>
<a href=""mailto:b.il.l.la.w.r.en.ce.20.9@googlemail.com"">b.il.l.la.w.r.en.ce.20.9@googlemail.com</a>
<a href=""mailto:b.il.ll.awre.n.ce.20.9@googlemail.com"">b.il.ll.awre.n.ce.20.9@googlemail.com</a>
<a href=""mailto:bi.ll.law.re.nce209@googlemail.com"">bi.ll.law.re.nce209@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.awr.e.nc.e.2.0.9@googlemail.com"">b.i.l.l.l.awr.e.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.ill.l.awre.n.c.e.209@googlemail.com"">b.ill.l.awre.n.c.e.209@googlemail.com</a>
<a href=""mailto:b.il.l.la.wr.ence.209@googlemail.com"">b.il.l.la.wr.ence.209@googlemail.com</a>
<a href=""mailto:b.il.l.law.ren.ce2.0.9@googlemail.com"">b.il.l.law.ren.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.illla.wr.en.ce.2.09@googlemail.com"">b.illla.wr.en.ce.2.09@googlemail.com</a>
<a href=""mailto:bill.l.awre.n.ce.209@googlemail.com"">bill.l.awre.n.ce.209@googlemail.com</a>
<a href=""mailto:bi.l.l.l.a.w.re.n.c.e209@googlemail.com"">bi.l.l.l.a.w.re.n.c.e209@googlemail.com</a>
<a href=""mailto:billl.a.wren.c.e.2.0.9@googlemail.com"">billl.a.wren.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.il.l.l.aw.re.n.ce2.0.9@googlemail.com"">b.il.l.l.aw.re.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.i.llla.w.r.e.nc.e2.09@googlemail.com"">b.i.llla.w.r.e.nc.e2.09@googlemail.com</a>
<a href=""mailto:b.i.ll.l.awr.en.ce2.09@googlemail.com"">b.i.ll.l.awr.en.ce2.09@googlemail.com</a>
<a href=""mailto:billla.wr.e.n.c.e209@googlemail.com"">billla.wr.e.n.c.e209@googlemail.com</a>
<a href=""mailto:b.i.ll.l.a.w.r.e.n.c.e.2.0.9@googlemail.com"">b.i.ll.l.a.w.r.e.n.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.illl.awre.n.ce2.09@googlemail.com"">b.illl.awre.n.ce2.09@googlemail.com</a>
<a href=""mailto:b.ill.l.a.w.ren.ce20.9@googlemail.com"">b.ill.l.a.w.ren.ce20.9@googlemail.com</a>
<a href=""mailto:bi.ll.lawre.nc.e209@googlemail.com"">bi.ll.lawre.nc.e209@googlemail.com</a>
<a href=""mailto:b.i.lll.aw.renc.e2.09@googlemail.com"">b.i.lll.aw.renc.e2.09@googlemail.com</a>
<a href=""mailto:billl.a.wre.nce20.9@googlemail.com"">billl.a.wre.nce20.9@googlemail.com</a>
<a href=""mailto:b.i.l.l.la.w.r.e.n.c.e.2.0.9@googlemail.com"">b.i.l.l.la.w.r.e.n.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:bil.l.lawren.c.e209@googlemail.com"">bil.l.lawren.c.e209@googlemail.com</a>
<a href=""mailto:bi.l.l.la.w.re.n.ce2.09@googlemail.com"">bi.l.l.la.w.re.n.ce2.09@googlemail.com</a>
<a href=""mailto:bi.lllawre.n.ce.209@googlemail.com"">bi.lllawre.n.ce.209@googlemail.com</a>
<a href=""mailto:b.i.lllaw.renc.e209@googlemail.com"">b.i.lllaw.renc.e209@googlemail.com</a>
<a href=""mailto:bil.l.lawr.enc.e2.09@googlemail.com"">bil.l.lawr.enc.e2.09@googlemail.com</a>
<a href=""mailto:b.i.l.llaw.re.n.c.e2.09@googlemail.com"">b.i.l.llaw.re.n.c.e2.09@googlemail.com</a>
<a href=""mailto:bil.llawren.ce2.0.9@googlemail.com"">bil.llawren.ce2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.law.r.ence2.0.9@googlemail.com"">bi.l.l.law.r.ence2.0.9@googlemail.com</a>
<a href=""mailto:bi.ll.la.wr.enc.e.2.09@googlemail.com"">bi.ll.la.wr.enc.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.lla.wre.nce2.09@googlemail.com"">b.i.l.lla.wre.nce2.09@googlemail.com</a>
<a href=""mailto:bi.lll.a.w.r.ence.20.9@googlemail.com"">bi.lll.a.w.r.ence.20.9@googlemail.com</a>
<a href=""mailto:b.i.l.lla.w.r.e.n.c.e2.0.9@googlemail.com"">b.i.l.lla.w.r.e.n.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bil.lla.w.r.en.ce209@googlemail.com"">bil.lla.w.r.en.ce209@googlemail.com</a>
<a href=""mailto:bil.l.l.awren.c.e2.09@googlemail.com"">bil.l.l.awren.c.e2.09@googlemail.com</a>
<a href=""mailto:bil.ll.aw.r.e.n.ce.2.09@googlemail.com"">bil.ll.aw.r.e.n.ce.2.09@googlemail.com</a>
<a href=""mailto:bi.l.llaw.r.e.n.ce2.0.9@googlemail.com"">bi.l.llaw.r.e.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lllawr.e.n.ce.2.0.9@googlemail.com"">b.i.lllawr.e.n.ce.2.0.9@googlemail.com</a>
<a href=""mailto:bi.ll.l.a.w.re.n.ce209@googlemail.com"">bi.ll.l.a.w.re.n.ce209@googlemail.com</a>
<a href=""mailto:b.i.l.l.la.wren.c.e.209@googlemail.com"">b.i.l.l.la.wren.c.e.209@googlemail.com</a>
<a href=""mailto:b.il.l.lawr.en.c.e209@googlemail.com"">b.il.l.lawr.en.c.e209@googlemail.com</a>
<a href=""mailto:b.ill.lawr.ence.20.9@googlemail.com"">b.ill.lawr.ence.20.9@googlemail.com</a>
<a href=""mailto:bil.ll.aw.r.ence.209@googlemail.com"">bil.ll.aw.r.ence.209@googlemail.com</a>
<a href=""mailto:billl.aw.r.en.c.e.2.09@googlemail.com"">billl.aw.r.en.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.illlawr.en.ce.2.0.9@googlemail.com"">b.illlawr.en.ce.2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.law.re.n.ce209@googlemail.com"">bi.l.l.law.re.n.ce209@googlemail.com</a>
<a href=""mailto:b.il.lla.w.r.e.nce20.9@googlemail.com"">b.il.lla.w.r.e.nce20.9@googlemail.com</a>
<a href=""mailto:bi.l.ll.aw.rence.209@googlemail.com"">bi.l.ll.aw.rence.209@googlemail.com</a>
<a href=""mailto:b.il.l.la.w.ren.c.e2.0.9@googlemail.com"">b.il.l.la.w.ren.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.lawrenc.e.20.9@googlemail.com"">bi.l.l.lawrenc.e.20.9@googlemail.com</a>
<a href=""mailto:b.i.lll.a.wren.c.e2.0.9@googlemail.com"">b.i.lll.a.wren.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.llawre.nc.e2.09@googlemail.com"">bi.l.llawre.nc.e2.09@googlemail.com</a>
<a href=""mailto:bi.l.llaw.re.nc.e.20.9@googlemail.com"">bi.l.llaw.re.nc.e.20.9@googlemail.com</a>
<a href=""mailto:b.il.l.lawr.en.c.e2.09@googlemail.com"">b.il.l.lawr.en.c.e2.09@googlemail.com</a>
<a href=""mailto:bill.la.w.r.en.c.e2.0.9@googlemail.com"">bill.la.w.r.en.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.l.a.wren.c.e2.0.9@googlemail.com"">bi.l.l.l.a.wren.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bil.l.lawr.e.n.ce2.09@googlemail.com"">bil.l.lawr.e.n.ce2.09@googlemail.com</a>
<a href=""mailto:b.i.l.ll.awrence.2.09@googlemail.com"">b.i.l.ll.awrence.2.09@googlemail.com</a>
<a href=""mailto:bill.la.wre.nce2.0.9@googlemail.com"">bill.la.wre.nce2.0.9@googlemail.com</a>
<a href=""mailto:b.i.ll.l.aw.ren.ce20.9@googlemail.com"">b.i.ll.l.aw.ren.ce20.9@googlemail.com</a>
<a href=""mailto:bi.lll.a.wrenc.e20.9@googlemail.com"">bi.lll.a.wrenc.e20.9@googlemail.com</a>
<a href=""mailto:b.i.ll.l.awren.ce.209@googlemail.com"">b.i.ll.l.awren.ce.209@googlemail.com</a>
<a href=""mailto:b.illlawr.e.n.ce2.0.9@googlemail.com"">b.illlawr.e.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:bill.law.r.en.c.e20.9@googlemail.com"">bill.law.r.en.c.e20.9@googlemail.com</a>
<a href=""mailto:b.i.lll.a.wr.en.c.e2.09@googlemail.com"">b.i.lll.a.wr.en.c.e2.09@googlemail.com</a>
<a href=""mailto:billlawr.e.nc.e.209@googlemail.com"">billlawr.e.nc.e.209@googlemail.com</a>
<a href=""mailto:bil.l.la.wr.e.n.ce20.9@googlemail.com"">bil.l.la.wr.e.n.ce20.9@googlemail.com</a>
<a href=""mailto:b.illl.a.w.r.ence.2.09@googlemail.com"">b.illl.a.w.r.ence.2.09@googlemail.com</a>
<a href=""mailto:bi.lll.aw.r.e.n.ce20.9@googlemail.com"">bi.lll.aw.r.e.n.ce20.9@googlemail.com</a>
<a href=""mailto:bil.l.law.r.e.nce.209@googlemail.com"">bil.l.law.r.e.nce.209@googlemail.com</a>
<a href=""mailto:bill.l.a.w.r.e.nc.e.2.09@googlemail.com"">bill.l.a.w.r.e.nc.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.awr.e.n.c.e2.0.9@googlemail.com"">b.i.l.l.l.awr.e.n.c.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.lla.wr.en.c.e.209@googlemail.com"">bi.l.lla.wr.en.c.e.209@googlemail.com</a>
<a href=""mailto:b.il.ll.a.w.r.e.nc.e2.0.9@googlemail.com"">b.il.ll.a.w.r.e.nc.e2.0.9@googlemail.com</a>
<a href=""mailto:b.i.ll.lawren.ce.2.09@googlemail.com"">b.i.ll.lawren.ce.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.ll.awr.e.n.c.e209@googlemail.com"">b.i.l.ll.awr.e.n.c.e209@googlemail.com</a>
<a href=""mailto:b.il.llaw.renc.e209@googlemail.com"">b.il.llaw.renc.e209@googlemail.com</a>
<a href=""mailto:b.i.lll.aw.r.e.n.c.e209@googlemail.com"">b.i.lll.aw.r.e.n.c.e209@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.aw.re.n.ce.20.9@googlemail.com"">b.i.l.l.l.aw.re.n.ce.20.9@googlemail.com</a>
<a href=""mailto:b.i.lllawrenc.e.2.0.9@googlemail.com"">b.i.lllawrenc.e.2.0.9@googlemail.com</a>
<a href=""mailto:bil.ll.a.wr.en.ce.209@googlemail.com"">bil.ll.a.wr.en.ce.209@googlemail.com</a>
<a href=""mailto:b.i.lll.a.wr.ence2.0.9@googlemail.com"">b.i.lll.a.wr.ence2.0.9@googlemail.com</a>
<a href=""mailto:b.il.llawre.nce2.0.9@googlemail.com"">b.il.llawre.nce2.0.9@googlemail.com</a>
<a href=""mailto:bi.llla.wre.nc.e209@googlemail.com"">bi.llla.wre.nc.e209@googlemail.com</a>
<a href=""mailto:billl.a.w.r.e.n.c.e20.9@googlemail.com"">billl.a.w.r.e.n.c.e20.9@googlemail.com</a>
<a href=""mailto:bi.lll.awre.n.c.e.2.09@googlemail.com"">bi.lll.awre.n.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.ll.aw.r.e.nc.e.2.09@googlemail.com"">b.i.l.ll.aw.r.e.nc.e.2.09@googlemail.com</a>
<a href=""mailto:bill.la.w.r.ence20.9@googlemail.com"">bill.la.w.r.ence20.9@googlemail.com</a>
<a href=""mailto:bil.l.l.a.wr.e.nce.209@googlemail.com"">bil.l.l.a.wr.e.nce.209@googlemail.com</a>
<a href=""mailto:b.ill.la.wre.nc.e2.09@googlemail.com"">b.ill.la.wre.nc.e2.09@googlemail.com</a>
<a href=""mailto:bi.l.l.l.aw.re.n.ce.209@googlemail.com"">bi.l.l.l.aw.re.n.ce.209@googlemail.com</a>
<a href=""mailto:bi.ll.law.r.e.nc.e.209@googlemail.com"">bi.ll.law.r.e.nc.e.209@googlemail.com</a>
<a href=""mailto:bil.l.lawr.e.n.ce.2.09@googlemail.com"">bil.l.lawr.e.n.ce.2.09@googlemail.com</a>
<a href=""mailto:b.il.ll.a.w.r.en.ce.2.09@googlemail.com"">b.il.ll.a.w.r.en.ce.2.09@googlemail.com</a>
<a href=""mailto:bi.ll.law.rence2.0.9@googlemail.com"">bi.ll.law.rence2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lll.a.w.r.e.nce20.9@googlemail.com"">b.i.lll.a.w.r.e.nce20.9@googlemail.com</a>
<a href=""mailto:bi.ll.lawren.ce2.0.9@googlemail.com"">bi.ll.lawren.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.illlawr.e.n.ce.209@googlemail.com"">b.illlawr.e.n.ce.209@googlemail.com</a>
<a href=""mailto:billla.wre.nc.e2.0.9@googlemail.com"">billla.wre.nc.e2.0.9@googlemail.com</a>
<a href=""mailto:bill.la.wre.nc.e2.0.9@googlemail.com"">bill.la.wre.nc.e2.0.9@googlemail.com</a>
<a href=""mailto:bil.l.l.awre.nc.e209@googlemail.com"">bil.l.l.awre.nc.e209@googlemail.com</a>
<a href=""mailto:b.i.l.l.law.re.n.c.e.20.9@googlemail.com"">b.i.l.l.law.re.n.c.e.20.9@googlemail.com</a>
<a href=""mailto:b.i.ll.l.awr.e.nce.2.0.9@googlemail.com"">b.i.ll.l.awr.e.nce.2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.la.w.r.en.ce.2.0.9@googlemail.com"">bi.l.l.la.w.r.en.ce.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.l.lla.w.re.nc.e.2.09@googlemail.com"">b.i.l.lla.w.re.nc.e.2.09@googlemail.com</a>
<a href=""mailto:b.illlaw.re.n.c.e.2.0.9@googlemail.com"">b.illlaw.re.n.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.l.llaw.r.en.c.e.2.0.9@googlemail.com"">b.i.l.llaw.r.en.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:billlawr.ence20.9@googlemail.com"">billlawr.ence20.9@googlemail.com</a>
<a href=""mailto:b.i.lllawr.en.ce.2.09@googlemail.com"">b.i.lllawr.en.ce.2.09@googlemail.com</a>
<a href=""mailto:bi.lll.a.w.re.n.ce2.09@googlemail.com"">bi.lll.a.w.re.n.ce2.09@googlemail.com</a>
<a href=""mailto:b.il.l.law.re.nc.e.2.0.9@googlemail.com"">b.il.l.law.re.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lll.a.wren.c.e.2.09@googlemail.com"">b.i.lll.a.wren.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.ll.l.a.w.re.nce.209@googlemail.com"">b.i.ll.l.a.w.re.nce.209@googlemail.com</a>
<a href=""mailto:b.ill.l.awren.ce.209@googlemail.com"">b.ill.l.awren.ce.209@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.awre.nce.209@googlemail.com"">b.i.l.l.l.awre.nce.209@googlemail.com</a>
<a href=""mailto:b.illlawr.e.nce.2.09@googlemail.com"">b.illlawr.e.nce.2.09@googlemail.com</a>
<a href=""mailto:bil.l.la.w.r.en.ce.2.09@googlemail.com"">bil.l.la.w.r.en.ce.2.09@googlemail.com</a>
<a href=""mailto:bi.ll.l.aw.r.enc.e20.9@googlemail.com"">bi.ll.l.aw.r.enc.e20.9@googlemail.com</a>
<a href=""mailto:b.i.l.ll.a.w.r.e.n.ce2.0.9@googlemail.com"">b.i.l.ll.a.w.r.e.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lllaw.r.e.n.ce.2.0.9@googlemail.com"">b.i.lllaw.r.e.n.ce.2.0.9@googlemail.com</a>
<a href=""mailto:b.ill.la.w.re.nce.2.09@googlemail.com"">b.ill.la.w.re.nce.2.09@googlemail.com</a>
<a href=""mailto:b.il.ll.a.wr.e.nc.e2.0.9@googlemail.com"">b.il.ll.a.wr.e.nc.e2.0.9@googlemail.com</a>
<a href=""mailto:b.illla.w.r.ence2.09@googlemail.com"">b.illla.w.r.ence2.09@googlemail.com</a>
<a href=""mailto:b.i.ll.la.wr.e.n.ce.2.09@googlemail.com"">b.i.ll.la.wr.e.n.ce.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.ll.awre.nc.e209@googlemail.com"">b.i.l.ll.awre.nc.e209@googlemail.com</a>
<a href=""mailto:bi.llla.w.r.e.nce.2.0.9@googlemail.com"">bi.llla.w.r.e.nce.2.0.9@googlemail.com</a>
<a href=""mailto:b.illl.a.w.re.nc.e2.0.9@googlemail.com"">b.illl.a.w.re.nc.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.la.w.re.n.c.e209@googlemail.com"">bi.l.l.la.w.re.n.c.e209@googlemail.com</a>
<a href=""mailto:b.i.ll.l.a.w.r.ence.2.0.9@googlemail.com"">b.i.ll.l.a.w.r.ence.2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.l.lawre.nc.e.2.09@googlemail.com"">bi.l.l.lawre.nc.e.2.09@googlemail.com</a>
<a href=""mailto:bi.llla.wr.en.c.e.2.0.9@googlemail.com"">bi.llla.wr.en.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.l.ll.awr.e.nce209@googlemail.com"">b.i.l.ll.awr.e.nce209@googlemail.com</a>
<a href=""mailto:bil.l.l.a.w.re.n.ce.2.09@googlemail.com"">bil.l.l.a.w.re.n.ce.2.09@googlemail.com</a>
<a href=""mailto:b.ill.la.w.r.enc.e209@googlemail.com"">b.ill.la.w.r.enc.e209@googlemail.com</a>
<a href=""mailto:b.il.ll.a.wr.e.n.c.e.2.0.9@googlemail.com"">b.il.ll.a.wr.e.n.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lll.aw.r.e.nce209@googlemail.com"">b.i.lll.aw.r.e.nce209@googlemail.com</a>
<a href=""mailto:bill.l.awr.ence.2.09@googlemail.com"">bill.l.awr.ence.2.09@googlemail.com</a>
<a href=""mailto:bi.l.ll.a.wre.n.ce2.0.9@googlemail.com"">bi.l.ll.a.wre.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:b.il.ll.a.w.r.enc.e.209@googlemail.com"">b.il.ll.a.w.r.enc.e.209@googlemail.com</a>
<a href=""mailto:b.i.ll.lawr.e.nce2.0.9@googlemail.com"">b.i.ll.lawr.e.nce2.0.9@googlemail.com</a>
<a href=""mailto:b.ill.la.w.ren.ce2.09@googlemail.com"">b.ill.la.w.ren.ce2.09@googlemail.com</a>
<a href=""mailto:b.ill.lawr.en.c.e.2.0.9@googlemail.com"">b.ill.lawr.en.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:bill.l.aw.r.en.ce2.0.9@googlemail.com"">bill.l.aw.r.en.ce2.0.9@googlemail.com</a>
<a href=""mailto:billla.wr.e.nc.e2.09@googlemail.com"">billla.wr.e.nc.e2.09@googlemail.com</a>
<a href=""mailto:b.ill.l.aw.r.e.n.ce.2.09@googlemail.com"">b.ill.l.aw.r.e.n.ce.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.a.wren.ce2.09@googlemail.com"">b.i.l.l.l.a.wren.ce2.09@googlemail.com</a>
<a href=""mailto:bi.l.l.la.w.re.n.c.e.209@googlemail.com"">bi.l.l.la.w.re.n.c.e.209@googlemail.com</a>
<a href=""mailto:bi.lll.awr.e.nc.e.2.0.9@googlemail.com"">bi.lll.awr.e.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.lll.a.wrenc.e.20.9@googlemail.com"">b.i.lll.a.wrenc.e.20.9@googlemail.com</a>
<a href=""mailto:b.il.l.lawr.enc.e.209@googlemail.com"">b.il.l.lawr.enc.e.209@googlemail.com</a>
<a href=""mailto:b.i.lll.aw.ren.c.e209@googlemail.com"">b.i.lll.aw.ren.c.e209@googlemail.com</a>
<a href=""mailto:bill.l.aw.ren.c.e.2.09@googlemail.com"">bill.l.aw.ren.c.e.2.09@googlemail.com</a>
<a href=""mailto:bil.lla.wr.enc.e2.0.9@googlemail.com"">bil.lla.wr.enc.e2.0.9@googlemail.com</a>
<a href=""mailto:bi.ll.l.a.w.r.en.c.e.209@googlemail.com"">bi.ll.l.a.w.r.en.c.e.209@googlemail.com</a>
<a href=""mailto:b.i.lll.awre.n.ce20.9@googlemail.com"">b.i.lll.awre.n.ce20.9@googlemail.com</a>
<a href=""mailto:b.illl.awr.enc.e209@googlemail.com"">b.illl.awr.enc.e209@googlemail.com</a>
<a href=""mailto:bil.l.la.wr.en.c.e.2.09@googlemail.com"">bil.l.la.wr.en.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.l.ll.aw.re.nce.20.9@googlemail.com"">b.i.l.ll.aw.re.nce.20.9@googlemail.com</a>
<a href=""mailto:b.i.llla.w.re.nc.e.2.0.9@googlemail.com"">b.i.llla.w.re.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:bill.l.awr.ence.2.0.9@googlemail.com"">bill.l.awr.ence.2.0.9@googlemail.com</a>
<a href=""mailto:b.ill.l.a.wren.c.e.2.0.9@googlemail.com"">b.ill.l.a.wren.c.e.2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.ll.a.w.rence2.0.9@googlemail.com"">bi.l.ll.a.w.rence2.0.9@googlemail.com</a>
<a href=""mailto:bi.llla.w.re.nce209@googlemail.com"">bi.llla.w.re.nce209@googlemail.com</a>
<a href=""mailto:bi.l.l.l.aw.r.enc.e.2.0.9@googlemail.com"">bi.l.l.l.aw.r.enc.e.2.0.9@googlemail.com</a>
<a href=""mailto:bill.l.aw.r.ence.209@googlemail.com"">bill.l.aw.r.ence.209@googlemail.com</a>
<a href=""mailto:bill.l.awre.nce.20.9@googlemail.com"">bill.l.awre.nce.20.9@googlemail.com</a>
<a href=""mailto:b.il.lla.w.re.n.c.e.209@googlemail.com"">b.il.lla.w.re.n.c.e.209@googlemail.com</a>
<a href=""mailto:bi.l.llaw.r.e.nce.209@googlemail.com"">bi.l.llaw.r.e.nce.209@googlemail.com</a>
<a href=""mailto:bi.lllawre.nce2.0.9@googlemail.com"">bi.lllawre.nce2.0.9@googlemail.com</a>
<a href=""mailto:b.illla.wre.n.c.e.2.09@googlemail.com"">b.illla.wre.n.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.i.lllawren.ce.2.09@googlemail.com"">b.i.lllawren.ce.2.09@googlemail.com</a>
<a href=""mailto:bil.ll.a.w.renc.e20.9@googlemail.com"">bil.ll.a.w.renc.e20.9@googlemail.com</a>
<a href=""mailto:b.illl.a.w.r.e.n.c.e.20.9@googlemail.com"">b.illl.a.w.r.e.n.c.e.20.9@googlemail.com</a>
<a href=""mailto:bi.l.llawr.en.ce.209@googlemail.com"">bi.l.llawr.en.ce.209@googlemail.com</a>
<a href=""mailto:bi.l.l.l.awr.ence.2.0.9@googlemail.com"">bi.l.l.l.awr.ence.2.0.9@googlemail.com</a>
<a href=""mailto:b.i.l.lla.wre.nc.e.2.0.9@googlemail.com"">b.i.l.lla.wre.nc.e.2.0.9@googlemail.com</a>
<a href=""mailto:b.ill.l.awrence20.9@googlemail.com"">b.ill.l.awrence20.9@googlemail.com</a>
<a href=""mailto:b.i.l.llaw.r.e.nc.e2.09@googlemail.com"">b.i.l.llaw.r.e.nc.e2.09@googlemail.com</a>
<a href=""mailto:b.i.ll.l.a.w.r.en.c.e2.0.9@googlemail.com"">b.i.ll.l.a.w.r.en.c.e2.0.9@googlemail.com</a>
<a href=""mailto:b.i.ll.l.a.w.r.e.n.ce2.0.9@googlemail.com"">b.i.ll.l.a.w.r.e.n.ce2.0.9@googlemail.com</a>
<a href=""mailto:bi.l.llawr.e.n.ce2.09@googlemail.com"">bi.l.llawr.e.n.ce2.09@googlemail.com</a>
<a href=""mailto:b.illla.wr.e.nce20.9@googlemail.com"">b.illla.wr.e.nce20.9@googlemail.com</a>
<a href=""mailto:bil.lla.w.rence20.9@googlemail.com"">bil.lla.w.rence20.9@googlemail.com</a>
<a href=""mailto:b.il.l.l.awre.n.c.e.2.09@googlemail.com"">b.il.l.l.awre.n.c.e.2.09@googlemail.com</a>
<a href=""mailto:b.il.lla.w.r.e.n.c.e20.9@googlemail.com"">b.il.lla.w.r.e.n.c.e20.9@googlemail.com</a>
<a href=""mailto:b.illlaw.r.e.n.ce2.09@googlemail.com"">b.illlaw.r.e.n.ce2.09@googlemail.com</a>
<a href=""mailto:b.i.l.l.l.aw.r.en.c.e.209@googlemail.com"">b.i.l.l.l.aw.r.en.c.e.209@googlemail.com</a>
<a href=""mailto:b.illlawre.n.c.e.2.09@googlemail.com"">b.illlawre.n.c.e.2.09@googlemail.com</a>
<a href=""mailto:jalavika24@googlemail.com"">jalavika24@googlemail.com</a>
<a href=""mailto:j.al.avika2.4@googlemail.com"">j.al.avika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vik.a.2.4@googlemail.com"">j.a.l.a.vik.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.i.k.a24@googlemail.com"">j.a.la.v.i.k.a24@googlemail.com</a>
<a href=""mailto:j.al.avika24@googlemail.com"">j.al.avika24@googlemail.com</a>
<a href=""mailto:j.alav.i.ka.2.4@googlemail.com"">j.alav.i.ka.2.4@googlemail.com</a>
<a href=""mailto:jal.avik.a.2.4@googlemail.com"">jal.avik.a.2.4@googlemail.com</a>
<a href=""mailto:ja.lav.i.ka.2.4@googlemail.com"">ja.lav.i.ka.2.4@googlemail.com</a>
<a href=""mailto:j.ala.vika2.4@googlemail.com"">j.ala.vika2.4@googlemail.com</a>
<a href=""mailto:ja.l.avi.k.a.2.4@googlemail.com"">ja.l.avi.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.ika24@googlemail.com"">j.a.la.v.ika24@googlemail.com</a>
<a href=""mailto:ja.l.av.ika24@googlemail.com"">ja.l.av.ika24@googlemail.com</a>
<a href=""mailto:ja.la.v.ika2.4@googlemail.com"">ja.la.v.ika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.av.ik.a2.4@googlemail.com"">j.a.l.av.ik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.la.vik.a2.4@googlemail.com"">j.a.la.vik.a2.4@googlemail.com</a>
<a href=""mailto:j.al.avi.k.a.2.4@googlemail.com"">j.al.avi.k.a.2.4@googlemail.com</a>
<a href=""mailto:ja.l.a.v.ika2.4@googlemail.com"">ja.l.a.v.ika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.avi.k.a24@googlemail.com"">j.a.l.avi.k.a24@googlemail.com</a>
<a href=""mailto:j.ala.v.ika.24@googlemail.com"">j.ala.v.ika.24@googlemail.com</a>
<a href=""mailto:jal.a.vi.k.a.2.4@googlemail.com"">jal.a.vi.k.a.2.4@googlemail.com</a>
<a href=""mailto:jal.avika24@googlemail.com"">jal.avika24@googlemail.com</a>
<a href=""mailto:ja.lav.ik.a.2.4@googlemail.com"">ja.lav.ik.a.2.4@googlemail.com</a>
<a href=""mailto:j.al.av.ika2.4@googlemail.com"">j.al.av.ika2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.i.k.a2.4@googlemail.com"">j.ala.v.i.k.a2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.i.ka.24@googlemail.com"">j.ala.v.i.ka.24@googlemail.com</a>
<a href=""mailto:jala.vik.a.2.4@googlemail.com"">jala.vik.a.2.4@googlemail.com</a>
<a href=""mailto:ja.l.avi.ka.24@googlemail.com"">ja.l.avi.ka.24@googlemail.com</a>
<a href=""mailto:ja.la.v.i.k.a.24@googlemail.com"">ja.la.v.i.k.a.24@googlemail.com</a>
<a href=""mailto:j.al.a.vik.a2.4@googlemail.com"">j.al.a.vik.a2.4@googlemail.com</a>
<a href=""mailto:ja.la.vika24@googlemail.com"">ja.la.vika24@googlemail.com</a>
<a href=""mailto:j.a.lav.i.ka2.4@googlemail.com"">j.a.lav.i.ka2.4@googlemail.com</a>
<a href=""mailto:ja.lavi.ka2.4@googlemail.com"">ja.lavi.ka2.4@googlemail.com</a>
<a href=""mailto:jalav.i.k.a.2.4@googlemail.com"">jalav.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.i.k.a2.4@googlemail.com"">j.a.l.a.v.i.k.a2.4@googlemail.com</a>
<a href=""mailto:j.ala.vi.ka2.4@googlemail.com"">j.ala.vi.ka2.4@googlemail.com</a>
<a href=""mailto:jalav.i.k.a24@googlemail.com"">jalav.i.k.a24@googlemail.com</a>
<a href=""mailto:ja.lav.i.ka.24@googlemail.com"">ja.lav.i.ka.24@googlemail.com</a>
<a href=""mailto:jal.av.i.ka2.4@googlemail.com"">jal.av.i.ka2.4@googlemail.com</a>
<a href=""mailto:j.alav.ik.a24@googlemail.com"">j.alav.ik.a24@googlemail.com</a>
<a href=""mailto:jalav.ika2.4@googlemail.com"">jalav.ika2.4@googlemail.com</a>
<a href=""mailto:jal.a.vika24@googlemail.com"">jal.a.vika24@googlemail.com</a>
<a href=""mailto:ja.l.av.i.k.a24@googlemail.com"">ja.l.av.i.k.a24@googlemail.com</a>
<a href=""mailto:j.al.av.i.ka2.4@googlemail.com"">j.al.av.i.ka2.4@googlemail.com</a>
<a href=""mailto:jala.vik.a.24@googlemail.com"">jala.vik.a.24@googlemail.com</a>
<a href=""mailto:ja.l.a.v.i.ka24@googlemail.com"">ja.l.a.v.i.ka24@googlemail.com</a>
<a href=""mailto:j.a.la.v.ik.a.2.4@googlemail.com"">j.a.la.v.ik.a.2.4@googlemail.com</a>
<a href=""mailto:ja.lavik.a2.4@googlemail.com"">ja.lavik.a2.4@googlemail.com</a>
<a href=""mailto:j.al.a.v.i.k.a24@googlemail.com"">j.al.a.v.i.k.a24@googlemail.com</a>
<a href=""mailto:j.a.l.a.vi.k.a24@googlemail.com"">j.a.l.a.vi.k.a24@googlemail.com</a>
<a href=""mailto:j.al.a.vik.a.2.4@googlemail.com"">j.al.a.vik.a.2.4@googlemail.com</a>
<a href=""mailto:jalavi.k.a.2.4@googlemail.com"">jalavi.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.alavika2.4@googlemail.com"">j.alavika2.4@googlemail.com</a>
<a href=""mailto:ja.lav.ika.24@googlemail.com"">ja.lav.ika.24@googlemail.com</a>
<a href=""mailto:j.a.l.av.i.ka2.4@googlemail.com"">j.a.l.av.i.ka2.4@googlemail.com</a>
<a href=""mailto:j.alavi.ka2.4@googlemail.com"">j.alavi.ka2.4@googlemail.com</a>
<a href=""mailto:ja.l.avi.k.a2.4@googlemail.com"">ja.l.avi.k.a2.4@googlemail.com</a>
<a href=""mailto:jal.a.vi.k.a2.4@googlemail.com"">jal.a.vi.k.a2.4@googlemail.com</a>
<a href=""mailto:j.al.a.vika2.4@googlemail.com"">j.al.a.vika2.4@googlemail.com</a>
<a href=""mailto:ja.lav.ik.a24@googlemail.com"">ja.lav.ik.a24@googlemail.com</a>
<a href=""mailto:jalav.i.ka.2.4@googlemail.com"">jalav.i.ka.2.4@googlemail.com</a>
<a href=""mailto:j.al.a.vi.ka24@googlemail.com"">j.al.a.vi.ka24@googlemail.com</a>
<a href=""mailto:j.a.la.v.i.ka2.4@googlemail.com"">j.a.la.v.i.ka2.4@googlemail.com</a>
<a href=""mailto:ja.l.a.vi.k.a24@googlemail.com"">ja.l.a.vi.k.a24@googlemail.com</a>
<a href=""mailto:jal.avik.a24@googlemail.com"">jal.avik.a24@googlemail.com</a>
<a href=""mailto:j.ala.v.ik.a.2.4@googlemail.com"">j.ala.v.ik.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vi.k.a.2.4@googlemail.com"">j.a.l.a.vi.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.ik.a24@googlemail.com"">j.a.la.v.ik.a24@googlemail.com</a>
<a href=""mailto:j.al.a.v.ik.a2.4@googlemail.com"">j.al.a.v.ik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vika24@googlemail.com"">j.a.l.a.vika24@googlemail.com</a>
<a href=""mailto:jala.v.ika.2.4@googlemail.com"">jala.v.ika.2.4@googlemail.com</a>
<a href=""mailto:jalavika.2.4@googlemail.com"">jalavika.2.4@googlemail.com</a>
<a href=""mailto:jalavik.a2.4@googlemail.com"">jalavik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vika.2.4@googlemail.com"">j.a.l.a.vika.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.vi.ka2.4@googlemail.com"">j.a.la.vi.ka2.4@googlemail.com</a>
<a href=""mailto:jal.avika.2.4@googlemail.com"">jal.avika.2.4@googlemail.com</a>
<a href=""mailto:j.al.a.v.i.ka24@googlemail.com"">j.al.a.v.i.ka24@googlemail.com</a>
<a href=""mailto:j.ala.v.ik.a2.4@googlemail.com"">j.ala.v.ik.a2.4@googlemail.com</a>
<a href=""mailto:jalavik.a.2.4@googlemail.com"">jalavik.a.2.4@googlemail.com</a>
<a href=""mailto:j.al.avik.a24@googlemail.com"">j.al.avik.a24@googlemail.com</a>
<a href=""mailto:j.alav.ika.2.4@googlemail.com"">j.alav.ika.2.4@googlemail.com</a>
<a href=""mailto:ja.l.av.i.ka.24@googlemail.com"">ja.l.av.i.ka.24@googlemail.com</a>
<a href=""mailto:ja.la.v.ik.a2.4@googlemail.com"">ja.la.v.ik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.ika.24@googlemail.com"">j.a.la.v.ika.24@googlemail.com</a>
<a href=""mailto:ja.lavi.k.a2.4@googlemail.com"">ja.lavi.k.a2.4@googlemail.com</a>
<a href=""mailto:j.alav.i.ka2.4@googlemail.com"">j.alav.i.ka2.4@googlemail.com</a>
<a href=""mailto:ja.l.a.vik.a24@googlemail.com"">ja.l.a.vik.a24@googlemail.com</a>
<a href=""mailto:j.al.a.vi.k.a24@googlemail.com"">j.al.a.vi.k.a24@googlemail.com</a>
<a href=""mailto:ja.l.a.vi.ka2.4@googlemail.com"">ja.l.a.vi.ka2.4@googlemail.com</a>
<a href=""mailto:j.al.a.v.ika.24@googlemail.com"">j.al.a.v.ika.24@googlemail.com</a>
<a href=""mailto:j.a.la.v.i.ka.2.4@googlemail.com"">j.a.la.v.i.ka.2.4@googlemail.com</a>
<a href=""mailto:jala.vi.k.a.2.4@googlemail.com"">jala.vi.k.a.2.4@googlemail.com</a>
<a href=""mailto:jalavi.k.a.24@googlemail.com"">jalavi.k.a.24@googlemail.com</a>
<a href=""mailto:j.a.l.av.i.ka.24@googlemail.com"">j.a.l.av.i.ka.24@googlemail.com</a>
<a href=""mailto:ja.lavika.2.4@googlemail.com"">ja.lavika.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.ik.a2.4@googlemail.com"">j.a.la.v.ik.a2.4@googlemail.com</a>
<a href=""mailto:j.al.avika.24@googlemail.com"">j.al.avika.24@googlemail.com</a>
<a href=""mailto:j.a.l.av.i.k.a.2.4@googlemail.com"">j.a.l.av.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.ika.24@googlemail.com"">j.a.l.a.v.ika.24@googlemail.com</a>
<a href=""mailto:ja.la.vik.a24@googlemail.com"">ja.la.vik.a24@googlemail.com</a>
<a href=""mailto:ja.l.av.i.ka2.4@googlemail.com"">ja.l.av.i.ka2.4@googlemail.com</a>
<a href=""mailto:j.a.l.av.i.k.a.24@googlemail.com"">j.a.l.av.i.k.a.24@googlemail.com</a>
<a href=""mailto:jal.av.ika2.4@googlemail.com"">jal.av.ika2.4@googlemail.com</a>
<a href=""mailto:ja.la.vi.ka2.4@googlemail.com"">ja.la.vi.ka2.4@googlemail.com</a>
<a href=""mailto:j.a.lavi.k.a.2.4@googlemail.com"">j.a.lavi.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.ala.vi.ka.2.4@googlemail.com"">j.ala.vi.ka.2.4@googlemail.com</a>
<a href=""mailto:jalavi.ka.2.4@googlemail.com"">jalavi.ka.2.4@googlemail.com</a>
<a href=""mailto:j.al.av.ik.a24@googlemail.com"">j.al.av.ik.a24@googlemail.com</a>
<a href=""mailto:j.a.l.avi.ka2.4@googlemail.com"">j.a.l.avi.ka2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.ika24@googlemail.com"">j.ala.v.ika24@googlemail.com</a>
<a href=""mailto:j.al.av.ika.2.4@googlemail.com"">j.al.av.ika.2.4@googlemail.com</a>
<a href=""mailto:j.alav.i.k.a2.4@googlemail.com"">j.alav.i.k.a2.4@googlemail.com</a>
<a href=""mailto:j.al.a.vi.ka2.4@googlemail.com"">j.al.a.vi.ka2.4@googlemail.com</a>
<a href=""mailto:jal.a.vik.a.24@googlemail.com"">jal.a.vik.a.24@googlemail.com</a>
<a href=""mailto:j.a.l.a.vi.ka2.4@googlemail.com"">j.a.l.a.vi.ka2.4@googlemail.com</a>
<a href=""mailto:ja.la.vi.ka.24@googlemail.com"">ja.la.vi.ka.24@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.i.ka2.4@googlemail.com"">j.a.l.a.v.i.ka2.4@googlemail.com</a>
<a href=""mailto:j.al.av.i.ka.2.4@googlemail.com"">j.al.av.i.ka.2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.i.k.a.2.4@googlemail.com"">j.ala.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.vi.ka.2.4@googlemail.com"">j.a.la.vi.ka.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.av.i.ka.2.4@googlemail.com"">j.a.l.av.i.ka.2.4@googlemail.com</a>
<a href=""mailto:j.al.avik.a.2.4@googlemail.com"">j.al.avik.a.2.4@googlemail.com</a>
<a href=""mailto:ja.l.avi.k.a.24@googlemail.com"">ja.l.avi.k.a.24@googlemail.com</a>
<a href=""mailto:jal.a.v.ika2.4@googlemail.com"">jal.a.v.ika2.4@googlemail.com</a>
<a href=""mailto:jal.a.v.i.k.a.2.4@googlemail.com"">jal.a.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.i.ka2.4@googlemail.com"">j.ala.v.i.ka2.4@googlemail.com</a>
<a href=""mailto:ja.l.a.v.i.ka.24@googlemail.com"">ja.l.a.v.i.ka.24@googlemail.com</a>
<a href=""mailto:ja.lavik.a.24@googlemail.com"">ja.lavik.a.24@googlemail.com</a>
<a href=""mailto:jala.v.ik.a.2.4@googlemail.com"">jala.v.ik.a.2.4@googlemail.com</a>
<a href=""mailto:j.alav.ika24@googlemail.com"">j.alav.ika24@googlemail.com</a>
<a href=""mailto:ja.lavika24@googlemail.com"">ja.lavika24@googlemail.com</a>
<a href=""mailto:jal.av.ika.2.4@googlemail.com"">jal.av.ika.2.4@googlemail.com</a>
<a href=""mailto:ja.la.vik.a2.4@googlemail.com"">ja.la.vik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.l.avi.k.a.24@googlemail.com"">j.a.l.avi.k.a.24@googlemail.com</a>
<a href=""mailto:jal.avika.24@googlemail.com"">jal.avika.24@googlemail.com</a>
<a href=""mailto:ja.lavi.ka.2.4@googlemail.com"">ja.lavi.ka.2.4@googlemail.com</a>
<a href=""mailto:ja.la.v.ika.24@googlemail.com"">ja.la.v.ika.24@googlemail.com</a>
<a href=""mailto:j.al.a.v.ik.a.24@googlemail.com"">j.al.a.v.ik.a.24@googlemail.com</a>
<a href=""mailto:j.a.l.avik.a24@googlemail.com"">j.a.l.avik.a24@googlemail.com</a>
<a href=""mailto:ja.l.a.vik.a2.4@googlemail.com"">ja.l.a.vik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.lav.i.ka24@googlemail.com"">j.a.lav.i.ka24@googlemail.com</a>
<a href=""mailto:j.a.lav.i.k.a2.4@googlemail.com"">j.a.lav.i.k.a2.4@googlemail.com</a>
<a href=""mailto:ja.l.av.ika2.4@googlemail.com"">ja.l.av.ika2.4@googlemail.com</a>
<a href=""mailto:ja.l.avika2.4@googlemail.com"">ja.l.avika2.4@googlemail.com</a>
<a href=""mailto:j.al.a.v.i.k.a.2.4@googlemail.com"">j.al.a.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.ala.vika.24@googlemail.com"">j.ala.vika.24@googlemail.com</a>
<a href=""mailto:ja.lav.i.ka24@googlemail.com"">ja.lav.i.ka24@googlemail.com</a>
<a href=""mailto:ja.lav.ik.a2.4@googlemail.com"">ja.lav.ik.a2.4@googlemail.com</a>
<a href=""mailto:jala.vika.2.4@googlemail.com"">jala.vika.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vik.a2.4@googlemail.com"">j.a.l.a.vik.a2.4@googlemail.com</a>
<a href=""mailto:ja.la.v.i.k.a.2.4@googlemail.com"">ja.la.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:ja.la.vi.ka24@googlemail.com"">ja.la.vi.ka24@googlemail.com</a>
<a href=""mailto:ja.l.a.v.i.k.a.2.4@googlemail.com"">ja.l.a.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:ja.l.a.vi.ka.24@googlemail.com"">ja.l.a.vi.ka.24@googlemail.com</a>
<a href=""mailto:jalav.ika24@googlemail.com"">jalav.ika24@googlemail.com</a>
<a href=""mailto:jal.a.vika.24@googlemail.com"">jal.a.vika.24@googlemail.com</a>
<a href=""mailto:ja.la.v.i.ka24@googlemail.com"">ja.la.v.i.ka24@googlemail.com</a>
<a href=""mailto:ja.la.vika2.4@googlemail.com"">ja.la.vika2.4@googlemail.com</a>
<a href=""mailto:j.a.lavik.a2.4@googlemail.com"">j.a.lavik.a2.4@googlemail.com</a>
<a href=""mailto:jala.vik.a2.4@googlemail.com"">jala.vik.a2.4@googlemail.com</a>
<a href=""mailto:j.a.la.v.i.ka.24@googlemail.com"">j.a.la.v.i.ka.24@googlemail.com</a>
<a href=""mailto:ja.lav.i.k.a.24@googlemail.com"">ja.lav.i.k.a.24@googlemail.com</a>
<a href=""mailto:jal.a.vi.k.a24@googlemail.com"">jal.a.vi.k.a24@googlemail.com</a>
<a href=""mailto:ja.la.vi.k.a.24@googlemail.com"">ja.la.vi.k.a.24@googlemail.com</a>
<a href=""mailto:jala.v.i.ka.2.4@googlemail.com"">jala.v.i.ka.2.4@googlemail.com</a>
<a href=""mailto:j.ala.v.i.k.a24@googlemail.com"">j.ala.v.i.k.a24@googlemail.com</a>
<a href=""mailto:ja.l.av.i.ka24@googlemail.com"">ja.l.av.i.ka24@googlemail.com</a>
<a href=""mailto:jal.av.i.k.a2.4@googlemail.com"">jal.av.i.k.a2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vika2.4@googlemail.com"">j.a.l.a.vika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.vi.k.a2.4@googlemail.com"">j.a.l.a.vi.k.a2.4@googlemail.com</a>
<a href=""mailto:ja.l.av.ika.2.4@googlemail.com"">ja.l.av.ika.2.4@googlemail.com</a>
<a href=""mailto:jala.v.ik.a.24@googlemail.com"">jala.v.ik.a.24@googlemail.com</a>
<a href=""mailto:jal.avi.ka.2.4@googlemail.com"">jal.avi.ka.2.4@googlemail.com</a>
<a href=""mailto:j.a.l.avika2.4@googlemail.com"">j.a.l.avika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.i.ka.2.4@googlemail.com"">j.a.l.a.v.i.ka.2.4@googlemail.com</a>
<a href=""mailto:jalavika2.4@googlemail.com"">jalavika2.4@googlemail.com</a>
<a href=""mailto:j.a.la.vi.k.a24@googlemail.com"">j.a.la.vi.k.a24@googlemail.com</a>
<a href=""mailto:jala.vi.k.a2.4@googlemail.com"">jala.vi.k.a2.4@googlemail.com</a>
<a href=""mailto:jalav.i.ka24@googlemail.com"">jalav.i.ka24@googlemail.com</a>
<a href=""mailto:j.al.a.v.ika24@googlemail.com"">j.al.a.v.ika24@googlemail.com</a>
<a href=""mailto:jal.a.v.ika.2.4@googlemail.com"">jal.a.v.ika.2.4@googlemail.com</a>
<a href=""mailto:jalavik.a.24@googlemail.com"">jalavik.a.24@googlemail.com</a>
<a href=""mailto:jal.a.vika2.4@googlemail.com"">jal.a.vika2.4@googlemail.com</a>
<a href=""mailto:jal.avi.ka24@googlemail.com"">jal.avi.ka24@googlemail.com</a>
<a href=""mailto:ja.l.a.vi.ka.2.4@googlemail.com"">ja.l.a.vi.ka.2.4@googlemail.com</a>
<a href=""mailto:jal.a.v.ik.a24@googlemail.com"">jal.a.v.ik.a24@googlemail.com</a>
<a href=""mailto:j.al.av.ika24@googlemail.com"">j.al.av.ika24@googlemail.com</a>
<a href=""mailto:j.a.l.a.vik.a24@googlemail.com"">j.a.l.a.vik.a24@googlemail.com</a>
<a href=""mailto:j.al.avi.ka.2.4@googlemail.com"">j.al.avi.ka.2.4@googlemail.com</a>
<a href=""mailto:jal.a.v.i.ka2.4@googlemail.com"">jal.a.v.i.ka2.4@googlemail.com</a>
<a href=""mailto:j.alav.i.ka24@googlemail.com"">j.alav.i.ka24@googlemail.com</a>
<a href=""mailto:j.al.a.v.ika2.4@googlemail.com"">j.al.a.v.ika2.4@googlemail.com</a>
<a href=""mailto:j.a.l.avi.k.a2.4@googlemail.com"">j.a.l.avi.k.a2.4@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.ik.a24@googlemail.com"">j.a.l.a.v.ik.a24@googlemail.com</a>
<a href=""mailto:j.a.l.a.v.i.k.a.2.4@googlemail.com"">j.a.l.a.v.i.k.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.lavik.a.2.4@googlemail.com"">j.a.lavik.a.2.4@googlemail.com</a>
<a href=""mailto:j.a.la.vi.k.a.24@googlemail.com"">j.a.la.vi.k.a.24@googlemail.com</a>
<a href=""mailto:jala.vi.ka24@googlemail.com"">jala.vi.ka24@googlemail.com</a>
<a href=""mailto:jalavi.ka24@googlemail.com"">jalavi.ka24@googlemail.com</a>
<a href=""mailto:j.alav.i.k.a.24@googlemail.com"">j.alav.i.k.a.24@googlemail.com</a>
<a href=""mailto:jal.a.v.ik.a.24@googlemail.com"">jal.a.v.ik.a.24@googlemail.com</a>
<a href=""mailto:ja.l.a.v.ik.a2.4@googlemail.com"">ja.l.a.v.ik.a2.4@googlemail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:gu.daji.m.5@googlemail.com"">gu.daji.m.5@googlemail.com</a>
<a href=""mailto:g.u.daj.im.5@googlemail.com"">g.u.daj.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.jim5@googlemail.com"">g.u.da.jim5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m.5@googlemail.com"">gu.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m.5@googlemail.com"">g.u.da.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m5@googlemail.com"">g.ud.aj.i.m5@googlemail.com</a>
<a href=""mailto:g.udaj.im5@googlemail.com"">g.udaj.im5@googlemail.com</a>
<a href=""mailto:gud.a.jim.5@googlemail.com"">gud.a.jim.5@googlemail.com</a>
<a href=""mailto:gu.dajim5@googlemail.com"">gu.dajim5@googlemail.com</a>
<a href=""mailto:g.ud.ajim5@googlemail.com"">g.ud.ajim5@googlemail.com</a>
<a href=""mailto:g.uda.jim.5@googlemail.com"">g.uda.jim.5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim.5@googlemail.com"">gu.d.a.jim.5@googlemail.com</a>
<a href=""mailto:gud.a.jim5@googlemail.com"">gud.a.jim5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m5@googlemail.com"">gu.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.a.jim5@googlemail.com"">gu.d.a.jim5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m5@googlemail.com"">gud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.aj.i.m.5@googlemail.com"">g.ud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m5@googlemail.com"">g.uda.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.daji.m5@googlemail.com"">g.u.daji.m5@googlemail.com</a>
<a href=""mailto:g.udajim.5@googlemail.com"">g.udajim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m5@googlemail.com"">g.ud.a.ji.m5@googlemail.com</a>
<a href=""mailto:guda.j.i.m.5@googlemail.com"">guda.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim.5@googlemail.com"">g.u.d.a.jim.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.jim5@googlemail.com"">g.u.d.a.jim5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m.5@googlemail.com"">gu.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m.5@googlemail.com"">g.ud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:guda.j.i.m5@googlemail.com"">guda.j.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m.5@googlemail.com"">gud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gudaj.im5@googlemail.com"">gudaj.im5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.i.m.5@googlemail.com"">gu.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m5@googlemail.com"">g.u.d.a.j.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m.5@googlemail.com"">gu.d.aji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.jim.5@googlemail.com"">g.u.da.jim.5@googlemail.com</a>
<a href=""mailto:g.udaji.m.5@googlemail.com"">g.udaji.m.5@googlemail.com</a>
<a href=""mailto:gudaj.i.m5@googlemail.com"">gudaj.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim5@googlemail.com"">g.u.d.ajim5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m5@googlemail.com"">gu.da.ji.m5@googlemail.com</a>
<a href=""mailto:g.u.d.ajim.5@googlemail.com"">g.u.d.ajim.5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim5@googlemail.com"">g.ud.a.jim5@googlemail.com</a>
<a href=""mailto:gud.aj.im.5@googlemail.com"">gud.aj.im.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im5@googlemail.com"">gu.da.j.im5@googlemail.com</a>
<a href=""mailto:gud.aji.m5@googlemail.com"">gud.aji.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im.5@googlemail.com"">gu.d.aj.im.5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m.5@googlemail.com"">g.uda.j.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.aj.im5@googlemail.com"">gu.d.aj.im5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m5@googlemail.com"">gud.aj.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m5@googlemail.com"">g.u.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:g.udaj.im.5@googlemail.com"">g.udaj.im.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m.5@googlemail.com"">g.u.daj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m5@googlemail.com"">g.u.d.aji.m5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im5@googlemail.com"">g.ud.aj.im5@googlemail.com</a>
<a href=""mailto:gu.da.jim5@googlemail.com"">gu.da.jim5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m5@googlemail.com"">g.u.da.j.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m5@googlemail.com"">gu.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:gud.a.j.im.5@googlemail.com"">gud.a.j.im.5@googlemail.com</a>
<a href=""mailto:gu.da.j.im.5@googlemail.com"">gu.da.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im5@googlemail.com"">g.u.d.aj.im5@googlemail.com</a>
<a href=""mailto:gud.aj.im5@googlemail.com"">gud.aj.im5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.i.m5@googlemail.com"">g.ud.a.j.i.m5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m5@googlemail.com"">g.u.d.aj.i.m5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im.5@googlemail.com"">g.ud.a.j.im.5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m.5@googlemail.com"">g.ud.aji.m.5@googlemail.com</a>
<a href=""mailto:g.uda.j.im5@googlemail.com"">g.uda.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.im.5@googlemail.com"">g.u.d.aj.im.5@googlemail.com</a>
<a href=""mailto:gud.aji.m.5@googlemail.com"">gud.aji.m.5@googlemail.com</a>
<a href=""mailto:gudaji.m5@googlemail.com"">gudaji.m5@googlemail.com</a>
<a href=""mailto:gu.da.j.i.m5@googlemail.com"">gu.da.j.i.m5@googlemail.com</a>
<a href=""mailto:g.uda.jim5@googlemail.com"">g.uda.jim5@googlemail.com</a>
<a href=""mailto:gu.daji.m5@googlemail.com"">gu.daji.m5@googlemail.com</a>
<a href=""mailto:gu.daj.im5@googlemail.com"">gu.daj.im5@googlemail.com</a>
<a href=""mailto:g.u.d.aj.i.m.5@googlemail.com"">g.u.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.i.m.5@googlemail.com"">g.u.da.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.ji.m.5@googlemail.com"">g.u.d.a.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.daj.i.m5@googlemail.com"">g.u.daj.i.m5@googlemail.com</a>
<a href=""mailto:gu.da.jim.5@googlemail.com"">gu.da.jim.5@googlemail.com</a>
<a href=""mailto:g.udaji.m5@googlemail.com"">g.udaji.m5@googlemail.com</a>
<a href=""mailto:gu.daj.im.5@googlemail.com"">gu.daj.im.5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im.5@googlemail.com"">g.u.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:gud.a.j.im5@googlemail.com"">gud.a.j.im5@googlemail.com</a>
<a href=""mailto:g.ud.a.ji.m.5@googlemail.com"">g.ud.a.ji.m.5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m5@googlemail.com"">gu.daj.i.m5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im.5@googlemail.com"">gu.d.a.j.im.5@googlemail.com</a>
<a href=""mailto:gudaj.im.5@googlemail.com"">gudaj.im.5@googlemail.com</a>
<a href=""mailto:guda.jim.5@googlemail.com"">guda.jim.5@googlemail.com</a>
<a href=""mailto:g.ud.aj.im.5@googlemail.com"">g.ud.aj.im.5@googlemail.com</a>
<a href=""mailto:g.u.dajim5@googlemail.com"">g.u.dajim5@googlemail.com</a>
<a href=""mailto:g.uda.j.im.5@googlemail.com"">g.uda.j.im.5@googlemail.com</a>
<a href=""mailto:g.u.da.ji.m5@googlemail.com"">g.u.da.ji.m5@googlemail.com</a>
<a href=""mailto:guda.jim5@googlemail.com"">guda.jim5@googlemail.com</a>
<a href=""mailto:g.ud.ajim.5@googlemail.com"">g.ud.ajim.5@googlemail.com</a>
<a href=""mailto:g.uda.j.i.m5@googlemail.com"">g.uda.j.i.m5@googlemail.com</a>
<a href=""mailto:guda.ji.m5@googlemail.com"">guda.ji.m5@googlemail.com</a>
<a href=""mailto:gudajim.5@googlemail.com"">gudajim.5@googlemail.com</a>
<a href=""mailto:g.ud.aji.m5@googlemail.com"">g.ud.aji.m5@googlemail.com</a>
<a href=""mailto:g.ud.a.jim.5@googlemail.com"">g.ud.a.jim.5@googlemail.com</a>
<a href=""mailto:gu.da.ji.m.5@googlemail.com"">gu.da.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.daji.m.5@googlemail.com"">g.u.daji.m.5@googlemail.com</a>
<a href=""mailto:gud.a.ji.m5@googlemail.com"">gud.a.ji.m5@googlemail.com</a>
<a href=""mailto:gudajim5@googlemail.com"">gudajim5@googlemail.com</a>
<a href=""mailto:gu.d.ajim.5@googlemail.com"">gu.d.ajim.5@googlemail.com</a>
<a href=""mailto:gu.d.ajim5@googlemail.com"">gu.d.ajim5@googlemail.com</a>
<a href=""mailto:g.u.dajim.5@googlemail.com"">g.u.dajim.5@googlemail.com</a>
<a href=""mailto:g.u.daj.im5@googlemail.com"">g.u.daj.im5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im.5@googlemail.com"">g.u.da.j.im.5@googlemail.com</a>
<a href=""mailto:gudaji.m.5@googlemail.com"">gudaji.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.ji.m5@googlemail.com"">gu.d.a.ji.m5@googlemail.com</a>
<a href=""mailto:guda.ji.m.5@googlemail.com"">guda.ji.m.5@googlemail.com</a>
<a href=""mailto:g.u.da.j.im5@googlemail.com"">g.u.da.j.im5@googlemail.com</a>
<a href=""mailto:gu.d.aj.i.m.5@googlemail.com"">gu.d.aj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.daj.i.m.5@googlemail.com"">gu.daj.i.m.5@googlemail.com</a>
<a href=""mailto:gud.a.j.i.m.5@googlemail.com"">gud.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m5@googlemail.com"">g.udaj.i.m5@googlemail.com</a>
<a href=""mailto:gu.dajim.5@googlemail.com"">gu.dajim.5@googlemail.com</a>
<a href=""mailto:g.u.d.aji.m.5@googlemail.com"">g.u.d.aji.m.5@googlemail.com</a>
<a href=""mailto:g.udaj.i.m.5@googlemail.com"">g.udaj.i.m.5@googlemail.com</a>
<a href=""mailto:gu.d.aji.m5@googlemail.com"">gu.d.aji.m5@googlemail.com</a>
<a href=""mailto:gudaj.i.m.5@googlemail.com"">gudaj.i.m.5@googlemail.com</a>
<a href=""mailto:guda.j.im.5@googlemail.com"">guda.j.im.5@googlemail.com</a>
<a href=""mailto:gud.aj.i.m.5@googlemail.com"">gud.aj.i.m.5@googlemail.com</a>
<a href=""mailto:guda.j.im5@googlemail.com"">guda.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.im5@googlemail.com"">g.u.d.a.j.im5@googlemail.com</a>
<a href=""mailto:g.ud.a.j.im5@googlemail.com"">g.ud.a.j.im5@googlemail.com</a>
<a href=""mailto:g.u.d.a.j.i.m.5@googlemail.com"">g.u.d.a.j.i.m.5@googlemail.com</a>
<a href=""mailto:gud.ajim5@googlemail.com"">gud.ajim5@googlemail.com</a>
<a href=""mailto:g.uda.ji.m.5@googlemail.com"">g.uda.ji.m.5@googlemail.com</a>
<a href=""mailto:gu.d.a.j.im5@googlemail.com"">gu.d.a.j.im5@googlemail.com</a>
<a href=""mailto:gud.ajim.5@googlemail.com"">gud.ajim.5@googlemail.com</a>
<a href=""mailto:g.udajim5@googlemail.com"">g.udajim5@googlemail.com</a>
<a href=""mailto:kyakububitrus@googlemail.com"">kyakububitrus@googlemail.com</a>
<a href=""mailto:kyak.ubu.b.itrus@googlemail.com"">kyak.ubu.b.itrus@googlemail.com</a>
<a href=""mailto:kya.ku.bubi.tr.us@googlemail.com"">kya.ku.bubi.tr.us@googlemail.com</a>
<a href=""mailto:ky.akub.ub.i.t.r.us@googlemail.com"">ky.akub.ub.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.ya.kub.ub.i.t.ru.s@googlemail.com"">k.ya.kub.ub.i.t.ru.s@googlemail.com</a>
<a href=""mailto:kya.ku.bu.bi.tru.s@googlemail.com"">kya.ku.bu.bi.tru.s@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.ubi.t.rus@googlemail.com"">ky.a.k.ub.ubi.t.rus@googlemail.com</a>
<a href=""mailto:kyak.u.b.u.bitru.s@googlemail.com"">kyak.u.b.u.bitru.s@googlemail.com</a>
<a href=""mailto:k.y.a.ku.b.u.bit.r.u.s@googlemail.com"">k.y.a.ku.b.u.bit.r.u.s@googlemail.com</a>
<a href=""mailto:ky.a.ku.b.ub.i.t.rus@googlemail.com"">ky.a.ku.b.ub.i.t.rus@googlemail.com</a>
<a href=""mailto:kyaku.bub.itr.us@googlemail.com"">kyaku.bub.itr.us@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.ub.i.trus@googlemail.com"">ky.a.k.ub.ub.i.trus@googlemail.com</a>
<a href=""mailto:k.y.ak.u.bub.i.t.rus@googlemail.com"">k.y.ak.u.bub.i.t.rus@googlemail.com</a>
<a href=""mailto:k.yak.u.bubi.t.rus@googlemail.com"">k.yak.u.bubi.t.rus@googlemail.com</a>
<a href=""mailto:k.ya.k.u.bub.it.r.u.s@googlemail.com"">k.ya.k.u.bub.it.r.u.s@googlemail.com</a>
<a href=""mailto:kyak.ub.u.b.it.ru.s@googlemail.com"">kyak.ub.u.b.it.ru.s@googlemail.com</a>
<a href=""mailto:kyak.ububi.tr.u.s@googlemail.com"">kyak.ububi.tr.u.s@googlemail.com</a>
<a href=""mailto:k.yak.u.b.ubi.t.r.us@googlemail.com"">k.yak.u.b.ubi.t.r.us@googlemail.com</a>
<a href=""mailto:kya.ku.bu.b.i.t.ru.s@googlemail.com"">kya.ku.bu.b.i.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.kubu.b.itr.u.s@googlemail.com"">ky.a.kubu.b.itr.u.s@googlemail.com</a>
<a href=""mailto:ky.a.ku.b.ubi.t.rus@googlemail.com"">ky.a.ku.b.ubi.t.rus@googlemail.com</a>
<a href=""mailto:k.y.a.k.ubub.i.t.r.us@googlemail.com"">k.y.a.k.ubub.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.y.a.kubu.bi.tr.us@googlemail.com"">k.y.a.kubu.bi.tr.us@googlemail.com</a>
<a href=""mailto:kyaku.b.u.b.i.trus@googlemail.com"">kyaku.b.u.b.i.trus@googlemail.com</a>
<a href=""mailto:kya.k.ub.u.bit.r.u.s@googlemail.com"">kya.k.ub.u.bit.r.u.s@googlemail.com</a>
<a href=""mailto:k.y.a.ku.bu.bitr.us@googlemail.com"">k.y.a.ku.bu.bitr.us@googlemail.com</a>
<a href=""mailto:ky.ak.u.b.u.b.i.tru.s@googlemail.com"">ky.ak.u.b.u.b.i.tru.s@googlemail.com</a>
<a href=""mailto:kyaku.b.u.bi.t.r.us@googlemail.com"">kyaku.b.u.bi.t.r.us@googlemail.com</a>
<a href=""mailto:k.yaku.bu.bit.r.u.s@googlemail.com"">k.yaku.bu.bit.r.u.s@googlemail.com</a>
<a href=""mailto:k.yaku.bub.i.trus@googlemail.com"">k.yaku.bub.i.trus@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.b.ubit.r.u.s@googlemail.com"">k.y.a.k.u.b.ubit.r.u.s@googlemail.com</a>
<a href=""mailto:ky.a.kubub.i.t.rus@googlemail.com"">ky.a.kubub.i.t.rus@googlemail.com</a>
<a href=""mailto:k.y.ak.ub.ub.i.tr.us@googlemail.com"">k.y.ak.ub.ub.i.tr.us@googlemail.com</a>
<a href=""mailto:k.yak.ub.ub.i.trus@googlemail.com"">k.yak.ub.ub.i.trus@googlemail.com</a>
<a href=""mailto:k.ya.ku.bub.i.tru.s@googlemail.com"">k.ya.ku.bub.i.tru.s@googlemail.com</a>
<a href=""mailto:k.y.aku.bu.bi.tr.us@googlemail.com"">k.y.aku.bu.bi.tr.us@googlemail.com</a>
<a href=""mailto:ky.ak.u.b.u.b.i.trus@googlemail.com"">ky.ak.u.b.u.b.i.trus@googlemail.com</a>
<a href=""mailto:k.yaku.bu.b.itru.s@googlemail.com"">k.yaku.bu.b.itru.s@googlemail.com</a>
<a href=""mailto:k.y.a.kubu.bi.tru.s@googlemail.com"">k.y.a.kubu.bi.tru.s@googlemail.com</a>
<a href=""mailto:kya.k.u.bu.bi.tr.us@googlemail.com"">kya.k.u.bu.bi.tr.us@googlemail.com</a>
<a href=""mailto:k.ya.ku.bu.b.it.r.u.s@googlemail.com"">k.ya.ku.bu.b.it.r.u.s@googlemail.com</a>
<a href=""mailto:k.ya.k.u.b.u.bit.rus@googlemail.com"">k.ya.k.u.b.u.bit.rus@googlemail.com</a>
<a href=""mailto:kyak.u.bu.b.i.tr.u.s@googlemail.com"">kyak.u.bu.b.i.tr.u.s@googlemail.com</a>
<a href=""mailto:kya.k.ubu.bit.rus@googlemail.com"">kya.k.ubu.bit.rus@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.u.b.i.tr.us@googlemail.com"">ky.a.k.ub.u.b.i.tr.us@googlemail.com</a>
<a href=""mailto:kyakub.ubi.t.r.us@googlemail.com"">kyakub.ubi.t.r.us@googlemail.com</a>
<a href=""mailto:k.y.akububitrus@googlemail.com"">k.y.akububitrus@googlemail.com</a>
<a href=""mailto:kyak.u.b.ub.itru.s@googlemail.com"">kyak.u.b.ub.itru.s@googlemail.com</a>
<a href=""mailto:k.ya.kub.ubitru.s@googlemail.com"">k.ya.kub.ubitru.s@googlemail.com</a>
<a href=""mailto:k.ya.ku.b.ub.itru.s@googlemail.com"">k.ya.ku.b.ub.itru.s@googlemail.com</a>
<a href=""mailto:k.ya.ku.b.u.b.it.ru.s@googlemail.com"">k.ya.ku.b.u.b.it.ru.s@googlemail.com</a>
<a href=""mailto:kya.k.ububi.t.r.us@googlemail.com"">kya.k.ububi.t.r.us@googlemail.com</a>
<a href=""mailto:ky.ak.u.b.ubit.rus@googlemail.com"">ky.ak.u.b.ubit.rus@googlemail.com</a>
<a href=""mailto:k.y.a.k.ub.ub.it.ru.s@googlemail.com"">k.y.a.k.ub.ub.it.ru.s@googlemail.com</a>
<a href=""mailto:k.yak.u.b.u.b.it.ru.s@googlemail.com"">k.yak.u.b.u.b.it.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.kub.u.bit.ru.s@googlemail.com"">ky.a.kub.u.bit.ru.s@googlemail.com</a>
<a href=""mailto:kyak.ububi.trus@googlemail.com"">kyak.ububi.trus@googlemail.com</a>
<a href=""mailto:kyakub.u.bitr.us@googlemail.com"">kyakub.u.bitr.us@googlemail.com</a>
<a href=""mailto:k.y.a.ku.bu.b.it.rus@googlemail.com"">k.y.a.ku.bu.b.it.rus@googlemail.com</a>
<a href=""mailto:kya.k.u.b.u.bitru.s@googlemail.com"">kya.k.u.b.u.bitru.s@googlemail.com</a>
<a href=""mailto:k.y.a.ku.b.u.b.itrus@googlemail.com"">k.y.a.ku.b.u.b.itrus@googlemail.com</a>
<a href=""mailto:ky.aku.b.ub.i.t.r.us@googlemail.com"">ky.aku.b.ub.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.ya.k.u.bu.b.it.rus@googlemail.com"">k.ya.k.u.bu.b.it.rus@googlemail.com</a>
<a href=""mailto:kyakub.u.b.it.r.u.s@googlemail.com"">kyakub.u.b.it.r.u.s@googlemail.com</a>
<a href=""mailto:k.y.aku.bu.b.it.ru.s@googlemail.com"">k.y.aku.bu.b.it.ru.s@googlemail.com</a>
<a href=""mailto:k.y.aku.b.ub.it.r.us@googlemail.com"">k.y.aku.b.ub.it.r.us@googlemail.com</a>
<a href=""mailto:k.ya.k.u.b.ubit.rus@googlemail.com"">k.ya.k.u.b.ubit.rus@googlemail.com</a>
<a href=""mailto:k.yak.u.b.ub.it.rus@googlemail.com"">k.yak.u.b.ub.it.rus@googlemail.com</a>
<a href=""mailto:kya.k.ub.ubi.t.ru.s@googlemail.com"">kya.k.ub.ubi.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.akub.ub.i.t.r.u.s@googlemail.com"">ky.akub.ub.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:ky.a.k.ubu.b.i.t.r.us@googlemail.com"">ky.a.k.ubu.b.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.yaku.b.ub.i.t.ru.s@googlemail.com"">k.yaku.b.ub.i.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.ak.ub.u.bit.r.u.s@googlemail.com"">ky.ak.ub.u.bit.r.u.s@googlemail.com</a>
<a href=""mailto:k.yakub.u.bi.tr.us@googlemail.com"">k.yakub.u.bi.tr.us@googlemail.com</a>
<a href=""mailto:k.y.akub.u.b.i.t.r.us@googlemail.com"">k.y.akub.u.b.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.y.ak.u.b.u.bi.t.ru.s@googlemail.com"">k.y.ak.u.b.u.bi.t.ru.s@googlemail.com</a>
<a href=""mailto:k.y.aku.bub.i.t.r.u.s@googlemail.com"">k.y.aku.bub.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:k.y.ak.ub.u.b.itr.u.s@googlemail.com"">k.y.ak.ub.u.b.itr.u.s@googlemail.com</a>
<a href=""mailto:ky.aku.b.u.b.i.t.r.us@googlemail.com"">ky.aku.b.u.b.i.t.r.us@googlemail.com</a>
<a href=""mailto:kya.k.u.bubit.r.u.s@googlemail.com"">kya.k.u.bubit.r.u.s@googlemail.com</a>
<a href=""mailto:ky.akubub.i.tr.us@googlemail.com"">ky.akubub.i.tr.us@googlemail.com</a>
<a href=""mailto:k.yak.u.bu.b.i.tr.us@googlemail.com"">k.yak.u.bu.b.i.tr.us@googlemail.com</a>
<a href=""mailto:ky.ak.ub.ub.i.tr.us@googlemail.com"">ky.ak.ub.ub.i.tr.us@googlemail.com</a>
<a href=""mailto:ky.a.kubu.bi.t.r.u.s@googlemail.com"">ky.a.kubu.bi.t.r.u.s@googlemail.com</a>
<a href=""mailto:kya.k.ubu.b.itrus@googlemail.com"">kya.k.ubu.b.itrus@googlemail.com</a>
<a href=""mailto:ky.aku.bubi.t.rus@googlemail.com"">ky.aku.bubi.t.rus@googlemail.com</a>
<a href=""mailto:ky.a.ku.b.ubi.t.r.us@googlemail.com"">ky.a.ku.b.ubi.t.r.us@googlemail.com</a>
<a href=""mailto:ky.a.k.u.b.u.bitrus@googlemail.com"">ky.a.k.u.b.u.bitrus@googlemail.com</a>
<a href=""mailto:k.y.a.kubub.it.ru.s@googlemail.com"">k.y.a.kubub.it.ru.s@googlemail.com</a>
<a href=""mailto:kyak.ub.u.b.itr.us@googlemail.com"">kyak.ub.u.b.itr.us@googlemail.com</a>
<a href=""mailto:k.y.a.ku.bubi.t.r.us@googlemail.com"">k.y.a.ku.bubi.t.r.us@googlemail.com</a>
<a href=""mailto:ky.a.k.u.bu.bitr.u.s@googlemail.com"">ky.a.k.u.bu.bitr.u.s@googlemail.com</a>
<a href=""mailto:k.y.aku.bub.itr.u.s@googlemail.com"">k.y.aku.bub.itr.u.s@googlemail.com</a>
<a href=""mailto:k.y.ak.ub.u.bi.t.rus@googlemail.com"">k.y.ak.ub.u.bi.t.rus@googlemail.com</a>
<a href=""mailto:k.yak.ub.u.b.itru.s@googlemail.com"">k.yak.ub.u.b.itru.s@googlemail.com</a>
<a href=""mailto:kyak.ubu.bi.t.rus@googlemail.com"">kyak.ubu.bi.t.rus@googlemail.com</a>
<a href=""mailto:ky.ak.u.bu.b.itr.u.s@googlemail.com"">ky.ak.u.bu.b.itr.u.s@googlemail.com</a>
<a href=""mailto:k.y.akub.ubi.tr.u.s@googlemail.com"">k.y.akub.ubi.tr.u.s@googlemail.com</a>
<a href=""mailto:k.ya.kub.ub.it.ru.s@googlemail.com"">k.ya.kub.ub.it.ru.s@googlemail.com</a>
<a href=""mailto:k.ya.ku.bu.bi.tr.us@googlemail.com"">k.ya.ku.bu.bi.tr.us@googlemail.com</a>
<a href=""mailto:ky.ak.u.bu.b.it.ru.s@googlemail.com"">ky.ak.u.bu.b.it.ru.s@googlemail.com</a>
<a href=""mailto:k.yakub.u.b.i.t.r.u.s@googlemail.com"">k.yakub.u.b.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:kya.ku.b.ub.i.tru.s@googlemail.com"">kya.ku.b.ub.i.tru.s@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.b.ub.i.tr.us@googlemail.com"">k.y.a.k.u.b.ub.i.tr.us@googlemail.com</a>
<a href=""mailto:k.ya.kub.ub.i.trus@googlemail.com"">k.ya.kub.ub.i.trus@googlemail.com</a>
<a href=""mailto:kya.kub.u.bit.rus@googlemail.com"">kya.kub.u.bit.rus@googlemail.com</a>
<a href=""mailto:k.yak.u.bu.bitr.us@googlemail.com"">k.yak.u.bu.bitr.us@googlemail.com</a>
<a href=""mailto:k.y.ak.u.b.u.bi.t.r.us@googlemail.com"">k.y.ak.u.b.u.bi.t.r.us@googlemail.com</a>
<a href=""mailto:kya.kubu.bi.trus@googlemail.com"">kya.kubu.bi.trus@googlemail.com</a>
<a href=""mailto:kya.k.u.bub.itr.u.s@googlemail.com"">kya.k.u.bub.itr.u.s@googlemail.com</a>
<a href=""mailto:k.ya.k.ububi.tr.us@googlemail.com"">k.ya.k.ububi.tr.us@googlemail.com</a>
<a href=""mailto:kya.k.ubu.bi.tru.s@googlemail.com"">kya.k.ubu.bi.tru.s@googlemail.com</a>
<a href=""mailto:k.yakubu.bi.t.r.u.s@googlemail.com"">k.yakubu.bi.t.r.u.s@googlemail.com</a>
<a href=""mailto:k.yakub.u.b.i.tru.s@googlemail.com"">k.yakub.u.b.i.tru.s@googlemail.com</a>
<a href=""mailto:kya.kub.ub.itru.s@googlemail.com"">kya.kub.ub.itru.s@googlemail.com</a>
<a href=""mailto:ky.ak.ub.ubit.rus@googlemail.com"">ky.ak.ub.ubit.rus@googlemail.com</a>
<a href=""mailto:ky.a.ku.b.u.b.i.t.rus@googlemail.com"">ky.a.ku.b.u.b.i.t.rus@googlemail.com</a>
<a href=""mailto:ky.a.ku.bub.i.t.r.us@googlemail.com"">ky.a.ku.bub.i.t.r.us@googlemail.com</a>
<a href=""mailto:kya.k.ubu.b.itr.us@googlemail.com"">kya.k.ubu.b.itr.us@googlemail.com</a>
<a href=""mailto:k.yak.ubu.b.i.trus@googlemail.com"">k.yak.ubu.b.i.trus@googlemail.com</a>
<a href=""mailto:k.y.ak.ububit.r.u.s@googlemail.com"">k.y.ak.ububit.r.u.s@googlemail.com</a>
<a href=""mailto:ky.akubu.bi.tru.s@googlemail.com"">ky.akubu.bi.tru.s@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.u.b.it.r.u.s@googlemail.com"">ky.a.k.ub.u.b.it.r.u.s@googlemail.com</a>
<a href=""mailto:k.yak.u.bubi.t.ru.s@googlemail.com"">k.yak.u.bubi.t.ru.s@googlemail.com</a>
<a href=""mailto:kyak.ubu.b.itr.us@googlemail.com"">kyak.ubu.b.itr.us@googlemail.com</a>
<a href=""mailto:k.yak.ubu.bitru.s@googlemail.com"">k.yak.ubu.bitru.s@googlemail.com</a>
<a href=""mailto:k.y.a.kububi.t.rus@googlemail.com"">k.y.a.kububi.t.rus@googlemail.com</a>
<a href=""mailto:ky.a.ku.b.u.b.it.r.us@googlemail.com"">ky.a.ku.b.u.b.it.r.us@googlemail.com</a>
<a href=""mailto:k.y.a.k.ub.ub.it.r.u.s@googlemail.com"">k.y.a.k.ub.ub.it.r.u.s@googlemail.com</a>
<a href=""mailto:kya.k.ub.u.bit.r.us@googlemail.com"">kya.k.ub.u.bit.r.us@googlemail.com</a>
<a href=""mailto:k.ya.kubub.i.tr.us@googlemail.com"">k.ya.kubub.i.tr.us@googlemail.com</a>
<a href=""mailto:k.y.ak.ubu.b.itrus@googlemail.com"">k.y.ak.ubu.b.itrus@googlemail.com</a>
<a href=""mailto:k.ya.kubu.bit.ru.s@googlemail.com"">k.ya.kubu.bit.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.k.u.bubit.r.u.s@googlemail.com"">ky.a.k.u.bubit.r.u.s@googlemail.com</a>
<a href=""mailto:ky.a.kub.u.b.it.ru.s@googlemail.com"">ky.a.kub.u.b.it.ru.s@googlemail.com</a>
<a href=""mailto:k.y.akubu.bi.t.r.us@googlemail.com"">k.y.akubu.bi.t.r.us@googlemail.com</a>
<a href=""mailto:kyaku.bubi.t.r.u.s@googlemail.com"">kyaku.bubi.t.r.u.s@googlemail.com</a>
<a href=""mailto:kyaku.bub.i.t.rus@googlemail.com"">kyaku.bub.i.t.rus@googlemail.com</a>
<a href=""mailto:k.ya.k.ub.ub.i.t.ru.s@googlemail.com"">k.ya.k.ub.ub.i.t.ru.s@googlemail.com</a>
<a href=""mailto:k.yakubu.b.itru.s@googlemail.com"">k.yakubu.b.itru.s@googlemail.com</a>
<a href=""mailto:k.y.ak.ubu.bit.r.us@googlemail.com"">k.y.ak.ubu.bit.r.us@googlemail.com</a>
<a href=""mailto:kyakub.u.bitrus@googlemail.com"">kyakub.u.bitrus@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.bu.b.i.tr.u.s@googlemail.com"">k.y.a.k.u.bu.b.i.tr.u.s@googlemail.com</a>
<a href=""mailto:kyakububit.ru.s@googlemail.com"">kyakububit.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.kubu.bi.tru.s@googlemail.com"">ky.a.kubu.bi.tru.s@googlemail.com</a>
<a href=""mailto:ky.aku.b.u.bit.ru.s@googlemail.com"">ky.aku.b.u.bit.ru.s@googlemail.com</a>
<a href=""mailto:ky.aku.bu.bi.tr.u.s@googlemail.com"">ky.aku.bu.bi.tr.u.s@googlemail.com</a>
<a href=""mailto:kya.kub.ubi.tr.u.s@googlemail.com"">kya.kub.ubi.tr.u.s@googlemail.com</a>
<a href=""mailto:k.y.ak.ubu.b.i.t.ru.s@googlemail.com"">k.y.ak.ubu.b.i.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.kubu.b.i.trus@googlemail.com"">ky.a.kubu.b.i.trus@googlemail.com</a>
<a href=""mailto:ky.a.kub.ubi.t.r.u.s@googlemail.com"">ky.a.kub.ubi.t.r.u.s@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.b.ub.itru.s@googlemail.com"">k.y.a.k.u.b.ub.itru.s@googlemail.com</a>
<a href=""mailto:kya.kubub.i.trus@googlemail.com"">kya.kubub.i.trus@googlemail.com</a>
<a href=""mailto:k.ya.kub.ubitrus@googlemail.com"">k.ya.kub.ubitrus@googlemail.com</a>
<a href=""mailto:k.y.aku.bu.b.i.trus@googlemail.com"">k.y.aku.bu.b.i.trus@googlemail.com</a>
<a href=""mailto:ky.akub.ub.itrus@googlemail.com"">ky.akub.ub.itrus@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.b.ub.i.t.ru.s@googlemail.com"">k.y.a.k.u.b.ub.i.t.ru.s@googlemail.com</a>
<a href=""mailto:kya.k.ububitru.s@googlemail.com"">kya.k.ububitru.s@googlemail.com</a>
<a href=""mailto:kya.k.u.bub.i.tr.us@googlemail.com"">kya.k.u.bub.i.tr.us@googlemail.com</a>
<a href=""mailto:kyakubu.bitr.u.s@googlemail.com"">kyakubu.bitr.u.s@googlemail.com</a>
<a href=""mailto:k.ya.k.u.b.u.b.i.tr.u.s@googlemail.com"">k.ya.k.u.b.u.b.i.tr.u.s@googlemail.com</a>
<a href=""mailto:k.ya.kub.u.bi.tr.u.s@googlemail.com"">k.ya.kub.u.bi.tr.u.s@googlemail.com</a>
<a href=""mailto:kya.ku.b.ubitrus@googlemail.com"">kya.ku.b.ubitrus@googlemail.com</a>
<a href=""mailto:k.ya.ku.bu.bi.t.ru.s@googlemail.com"">k.ya.ku.bu.bi.t.ru.s@googlemail.com</a>
<a href=""mailto:k.ya.k.ubub.i.trus@googlemail.com"">k.ya.k.ubub.i.trus@googlemail.com</a>
<a href=""mailto:kyakubu.bi.tr.u.s@googlemail.com"">kyakubu.bi.tr.u.s@googlemail.com</a>
<a href=""mailto:k.y.aku.bub.itrus@googlemail.com"">k.y.aku.bub.itrus@googlemail.com</a>
<a href=""mailto:kyakububi.tru.s@googlemail.com"">kyakububi.tru.s@googlemail.com</a>
<a href=""mailto:k.yak.ub.u.bi.trus@googlemail.com"">k.yak.ub.u.bi.trus@googlemail.com</a>
<a href=""mailto:k.ya.k.ub.u.bi.tr.us@googlemail.com"">k.ya.k.ub.u.bi.tr.us@googlemail.com</a>
<a href=""mailto:ky.a.kububit.r.us@googlemail.com"">ky.a.kububit.r.us@googlemail.com</a>
<a href=""mailto:k.y.ak.u.b.u.b.it.ru.s@googlemail.com"">k.y.ak.u.b.u.b.it.ru.s@googlemail.com</a>
<a href=""mailto:k.y.ak.u.b.u.bitrus@googlemail.com"">k.y.ak.u.b.u.bitrus@googlemail.com</a>
<a href=""mailto:ky.a.k.ubu.b.i.tr.u.s@googlemail.com"">ky.a.k.ubu.b.i.tr.u.s@googlemail.com</a>
<a href=""mailto:ky.ak.u.bub.itr.us@googlemail.com"">ky.ak.u.bub.itr.us@googlemail.com</a>
<a href=""mailto:k.y.aku.b.ub.i.t.r.us@googlemail.com"">k.y.aku.b.ub.i.t.r.us@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.bubi.tr.us@googlemail.com"">k.y.a.k.u.bubi.tr.us@googlemail.com</a>
<a href=""mailto:ky.aku.b.ubi.trus@googlemail.com"">ky.aku.b.ubi.trus@googlemail.com</a>
<a href=""mailto:kya.k.u.bubi.tr.us@googlemail.com"">kya.k.u.bubi.tr.us@googlemail.com</a>
<a href=""mailto:k.y.a.k.u.b.u.bi.tr.us@googlemail.com"">k.y.a.k.u.b.u.bi.tr.us@googlemail.com</a>
<a href=""mailto:ky.ak.ub.ub.i.trus@googlemail.com"">ky.ak.ub.ub.i.trus@googlemail.com</a>
<a href=""mailto:kyaku.b.u.bi.t.ru.s@googlemail.com"">kyaku.b.u.bi.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.aku.bu.b.i.trus@googlemail.com"">ky.aku.bu.b.i.trus@googlemail.com</a>
<a href=""mailto:k.yak.ububi.t.r.u.s@googlemail.com"">k.yak.ububi.t.r.u.s@googlemail.com</a>
<a href=""mailto:kyaku.b.u.b.itru.s@googlemail.com"">kyaku.b.u.b.itru.s@googlemail.com</a>
<a href=""mailto:k.ya.ku.b.ubit.ru.s@googlemail.com"">k.ya.ku.b.ubit.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.u.b.i.t.r.u.s@googlemail.com"">ky.a.k.ub.u.b.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:ky.aku.b.u.bi.t.ru.s@googlemail.com"">ky.aku.b.u.bi.t.ru.s@googlemail.com</a>
<a href=""mailto:ky.a.k.ub.ub.itr.us@googlemail.com"">ky.a.k.ub.ub.itr.us@googlemail.com</a>
<a href=""mailto:k.y.a.ku.b.ubi.tru.s@googlemail.com"">k.y.a.ku.b.ubi.tru.s@googlemail.com</a>
<a href=""mailto:k.y.a.kubub.i.t.r.u.s@googlemail.com"">k.y.a.kubub.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:ky.ak.u.bub.it.rus@googlemail.com"">ky.ak.u.bub.it.rus@googlemail.com</a>
<a href=""mailto:kya.kub.ub.i.tru.s@googlemail.com"">kya.kub.ub.i.tru.s@googlemail.com</a>
<a href=""mailto:kyaku.bubi.t.ru.s@googlemail.com"">kyaku.bubi.t.ru.s@googlemail.com</a>
<a href=""mailto:k.yakub.ub.i.t.r.u.s@googlemail.com"">k.yakub.ub.i.t.r.u.s@googlemail.com</a>
<a href=""mailto:kyak.ub.u.bit.rus@googlemail.com"">kyak.ub.u.bit.rus@googlemail.com</a>
<a href=""mailto:ky.ak.u.b.ubi.t.r.us@googlemail.com"">ky.ak.u.b.ubi.t.r.us@googlemail.com</a>
<a href=""mailto:ky.aku.bu.b.it.ru.s@googlemail.com"">ky.aku.bu.b.it.ru.s@googlemail.com</a>
<a href=""mailto:k.yakububi.t.r.u.s@googlemail.com"">k.yakububi.t.r.u.s@googlemail.com</a>
<a href=""mailto:k.y.ak.u.bu.bitr.u.s@googlemail.com"">k.y.ak.u.bu.bitr.u.s@googlemail.com</a>
<a href=""mailto:k.y.ak.u.bub.it.r.us@googlemail.com"">k.y.ak.u.bub.it.r.us@googlemail.com</a>
<a href=""mailto:juliusnsubuga321@googlemail.com"">juliusnsubuga321@googlemail.com</a>
<a href=""mailto:j.u.li.us.nsu.buga.32.1@googlemail.com"">j.u.li.us.nsu.buga.32.1@googlemail.com</a>
<a href=""mailto:juli.u.sns.ubuga.3.21@googlemail.com"">juli.u.sns.ubuga.3.21@googlemail.com</a>
<a href=""mailto:j.ul.iu.sns.u.b.u.g.a3.2.1@googlemail.com"">j.ul.iu.sns.u.b.u.g.a3.2.1@googlemail.com</a>
<a href=""mailto:j.uli.usns.ubu.g.a.32.1@googlemail.com"">j.uli.usns.ubu.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.ius.ns.ubuga.3.2.1@googlemail.com"">j.u.l.ius.ns.ubuga.3.2.1@googlemail.com</a>
<a href=""mailto:j.ulius.n.subu.ga.32.1@googlemail.com"">j.ulius.n.subu.ga.32.1@googlemail.com</a>
<a href=""mailto:ju.liu.s.n.s.ub.ug.a32.1@googlemail.com"">ju.liu.s.n.s.ub.ug.a32.1@googlemail.com</a>
<a href=""mailto:ju.liu.sn.s.ub.uga.321@googlemail.com"">ju.liu.sn.s.ub.uga.321@googlemail.com</a>
<a href=""mailto:juli.usns.u.b.ug.a3.2.1@googlemail.com"">juli.usns.u.b.ug.a3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.sns.u.bu.g.a321@googlemail.com"">j.u.li.u.sns.u.bu.g.a321@googlemail.com</a>
<a href=""mailto:j.ul.iu.s.nsu.bu.ga3.2.1@googlemail.com"">j.ul.iu.s.nsu.bu.ga3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.sn.subuga.321@googlemail.com"">ju.l.iu.sn.subuga.321@googlemail.com</a>
<a href=""mailto:ju.l.i.u.sn.su.b.uga.321@googlemail.com"">ju.l.i.u.sn.su.b.uga.321@googlemail.com</a>
<a href=""mailto:ju.l.iu.s.nsu.bug.a3.2.1@googlemail.com"">ju.l.iu.s.nsu.bug.a3.2.1@googlemail.com</a>
<a href=""mailto:jul.i.u.sns.u.b.uga.321@googlemail.com"">jul.i.u.sns.u.b.uga.321@googlemail.com</a>
<a href=""mailto:j.ul.i.u.sns.ub.uga3.2.1@googlemail.com"">j.ul.i.u.sns.ub.uga3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.ius.nsub.ug.a32.1@googlemail.com"">j.ul.ius.nsub.ug.a32.1@googlemail.com</a>
<a href=""mailto:j.ul.i.us.n.su.b.uga32.1@googlemail.com"">j.ul.i.us.n.su.b.uga32.1@googlemail.com</a>
<a href=""mailto:jul.iusnsu.b.u.g.a.32.1@googlemail.com"">jul.iusnsu.b.u.g.a.32.1@googlemail.com</a>
<a href=""mailto:ju.l.ius.ns.u.bug.a32.1@googlemail.com"">ju.l.ius.ns.u.bug.a32.1@googlemail.com</a>
<a href=""mailto:juli.usn.sub.u.ga.3.21@googlemail.com"">juli.usn.sub.u.ga.3.21@googlemail.com</a>
<a href=""mailto:ju.l.i.usn.s.ubu.ga.32.1@googlemail.com"">ju.l.i.usn.s.ubu.ga.32.1@googlemail.com</a>
<a href=""mailto:j.ul.i.us.n.s.u.buga.321@googlemail.com"">j.ul.i.us.n.s.u.buga.321@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.n.s.ub.u.ga321@googlemail.com"">j.u.li.u.s.n.s.ub.u.ga321@googlemail.com</a>
<a href=""mailto:j.u.li.u.snsubu.g.a3.21@googlemail.com"">j.u.li.u.snsubu.g.a3.21@googlemail.com</a>
<a href=""mailto:ju.liu.sns.ubu.g.a.3.21@googlemail.com"">ju.liu.sns.ubu.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.uliusnsu.bu.g.a.3.2.1@googlemail.com"">j.uliusnsu.bu.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.sns.ubuga.32.1@googlemail.com"">ju.l.i.u.sns.ubuga.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.ius.nsub.ug.a32.1@googlemail.com"">j.u.l.ius.nsub.ug.a32.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.sn.su.b.u.g.a.3.2.1@googlemail.com"">ju.l.iu.sn.su.b.u.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:ju.liusn.su.bu.ga.321@googlemail.com"">ju.liusn.su.bu.ga.321@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.ns.ub.uga3.2.1@googlemail.com"">j.u.li.u.s.ns.ub.uga3.2.1@googlemail.com</a>
<a href=""mailto:ju.liusn.s.ub.ug.a.3.2.1@googlemail.com"">ju.liusn.s.ub.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.sns.u.bu.ga.3.21@googlemail.com"">ju.l.iu.sns.u.bu.ga.3.21@googlemail.com</a>
<a href=""mailto:ju.l.ius.nsub.uga3.21@googlemail.com"">ju.l.ius.nsub.uga3.21@googlemail.com</a>
<a href=""mailto:ju.l.i.u.s.n.s.ubu.g.a3.2.1@googlemail.com"">ju.l.i.u.s.n.s.ubu.g.a3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.n.subuga32.1@googlemail.com"">j.u.li.u.s.n.subuga32.1@googlemail.com</a>
<a href=""mailto:ju.liu.s.n.subug.a.32.1@googlemail.com"">ju.liu.s.n.subug.a.32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.snsu.b.u.ga321@googlemail.com"">ju.l.i.u.snsu.b.u.ga321@googlemail.com</a>
<a href=""mailto:j.u.l.i.u.s.n.s.u.bug.a.3.21@googlemail.com"">j.u.l.i.u.s.n.s.u.bug.a.3.21@googlemail.com</a>
<a href=""mailto:jul.iu.sn.su.bu.g.a3.21@googlemail.com"">jul.iu.sn.su.bu.g.a3.21@googlemail.com</a>
<a href=""mailto:j.u.liu.s.n.su.b.u.ga.32.1@googlemail.com"">j.u.liu.s.n.su.b.u.ga.32.1@googlemail.com</a>
<a href=""mailto:j.ul.i.u.snsubu.ga.3.21@googlemail.com"">j.ul.i.u.snsubu.ga.3.21@googlemail.com</a>
<a href=""mailto:juli.u.snsub.ug.a.321@googlemail.com"">juli.u.snsub.ug.a.321@googlemail.com</a>
<a href=""mailto:j.u.l.i.us.ns.ubu.g.a.3.21@googlemail.com"">j.u.l.i.us.ns.ubu.g.a.3.21@googlemail.com</a>
<a href=""mailto:juli.us.n.s.u.bu.g.a.3.2.1@googlemail.com"">juli.us.n.s.u.bu.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.uli.u.sn.s.ubu.ga.3.2.1@googlemail.com"">j.uli.u.sn.s.ubu.ga.3.2.1@googlemail.com</a>
<a href=""mailto:jul.iu.snsu.b.ug.a.321@googlemail.com"">jul.iu.snsu.b.ug.a.321@googlemail.com</a>
<a href=""mailto:jul.i.u.sn.sub.uga32.1@googlemail.com"">jul.i.u.sn.sub.uga32.1@googlemail.com</a>
<a href=""mailto:j.u.l.i.us.nsu.b.u.ga321@googlemail.com"">j.u.l.i.us.nsu.b.u.ga321@googlemail.com</a>
<a href=""mailto:j.u.liusn.su.b.uga.321@googlemail.com"">j.u.liusn.su.b.uga.321@googlemail.com</a>
<a href=""mailto:juli.us.n.s.u.bu.ga.32.1@googlemail.com"">juli.us.n.s.u.bu.ga.32.1@googlemail.com</a>
<a href=""mailto:j.uli.us.ns.u.bug.a321@googlemail.com"">j.uli.us.ns.u.bug.a321@googlemail.com</a>
<a href=""mailto:j.u.lius.n.s.u.buga3.21@googlemail.com"">j.u.lius.n.s.u.buga3.21@googlemail.com</a>
<a href=""mailto:j.uli.u.sns.ubu.g.a3.21@googlemail.com"">j.uli.u.sns.ubu.g.a3.21@googlemail.com</a>
<a href=""mailto:jul.i.u.sn.sub.ug.a3.21@googlemail.com"">jul.i.u.sn.sub.ug.a3.21@googlemail.com</a>
<a href=""mailto:j.uli.us.n.subuga.321@googlemail.com"">j.uli.us.n.subuga.321@googlemail.com</a>
<a href=""mailto:j.uli.us.nsubu.ga32.1@googlemail.com"">j.uli.us.nsubu.ga32.1@googlemail.com</a>
<a href=""mailto:jul.i.usn.subu.g.a.3.2.1@googlemail.com"">jul.i.usn.subu.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.sn.su.buga3.2.1@googlemail.com"">j.u.li.u.sn.su.buga3.2.1@googlemail.com</a>
<a href=""mailto:jul.iusn.su.b.u.g.a.3.21@googlemail.com"">jul.iusn.su.b.u.g.a.3.21@googlemail.com</a>
<a href=""mailto:jul.iu.snsu.b.u.g.a321@googlemail.com"">jul.iu.snsu.b.u.g.a321@googlemail.com</a>
<a href=""mailto:juliu.sn.su.b.u.g.a.32.1@googlemail.com"">juliu.sn.su.b.u.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.lius.nsu.bu.g.a.3.2.1@googlemail.com"">j.u.lius.nsu.bu.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.ius.n.su.buga.3.21@googlemail.com"">j.ul.ius.n.su.buga.3.21@googlemail.com</a>
<a href=""mailto:j.u.l.i.us.ns.u.b.uga.3.2.1@googlemail.com"">j.u.l.i.us.ns.u.b.uga.3.2.1@googlemail.com</a>
<a href=""mailto:juliu.s.n.s.u.bug.a.3.2.1@googlemail.com"">juliu.s.n.s.u.bug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.u.liusn.s.u.buga.321@googlemail.com"">j.u.liusn.s.u.buga.321@googlemail.com</a>
<a href=""mailto:jul.ius.n.su.b.ug.a.321@googlemail.com"">jul.ius.n.su.b.ug.a.321@googlemail.com</a>
<a href=""mailto:jul.i.us.ns.ub.ug.a321@googlemail.com"">jul.i.us.ns.ub.ug.a321@googlemail.com</a>
<a href=""mailto:j.uliu.s.nsubu.ga.3.21@googlemail.com"">j.uliu.s.nsubu.ga.3.21@googlemail.com</a>
<a href=""mailto:jul.i.u.s.n.sub.u.ga32.1@googlemail.com"">jul.i.u.s.n.sub.u.ga32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.s.ns.ub.uga.3.2.1@googlemail.com"">ju.l.i.u.s.ns.ub.uga.3.2.1@googlemail.com</a>
<a href=""mailto:j.u.l.i.u.sns.ub.uga.32.1@googlemail.com"">j.u.l.i.u.sns.ub.uga.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.iusnsubu.g.a321@googlemail.com"">j.u.l.iusnsubu.g.a321@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.n.s.ub.u.ga3.21@googlemail.com"">j.u.li.u.s.n.s.ub.u.ga3.21@googlemail.com</a>
<a href=""mailto:j.ul.iu.snsu.b.u.ga.3.2.1@googlemail.com"">j.ul.iu.snsu.b.u.ga.3.2.1@googlemail.com</a>
<a href=""mailto:jul.iusnsub.u.g.a.3.21@googlemail.com"">jul.iusnsub.u.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.ul.iusns.ubuga321@googlemail.com"">j.ul.iusns.ubuga321@googlemail.com</a>
<a href=""mailto:ju.l.iu.s.nsu.bu.ga.32.1@googlemail.com"">ju.l.iu.s.nsu.bu.ga.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.iu.sn.s.ubu.g.a32.1@googlemail.com"">j.u.l.iu.sn.s.ubu.g.a32.1@googlemail.com</a>
<a href=""mailto:j.ulius.n.s.u.buga.32.1@googlemail.com"">j.ulius.n.s.u.buga.32.1@googlemail.com</a>
<a href=""mailto:juli.usn.s.u.b.ug.a32.1@googlemail.com"">juli.usn.s.u.b.ug.a32.1@googlemail.com</a>
<a href=""mailto:ju.li.us.nsub.u.g.a.3.2.1@googlemail.com"">ju.li.us.nsub.u.g.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.i.u.sn.sub.u.g.a32.1@googlemail.com"">j.ul.i.u.sn.sub.u.g.a32.1@googlemail.com</a>
<a href=""mailto:juli.us.ns.ubu.ga.3.21@googlemail.com"">juli.us.ns.ubu.ga.3.21@googlemail.com</a>
<a href=""mailto:ju.l.i.us.nsu.buga3.2.1@googlemail.com"">ju.l.i.us.nsu.buga3.2.1@googlemail.com</a>
<a href=""mailto:j.u.liu.snsubuga.3.2.1@googlemail.com"">j.u.liu.snsubuga.3.2.1@googlemail.com</a>
<a href=""mailto:juliu.s.n.subu.ga3.2.1@googlemail.com"">juliu.s.n.subu.ga3.2.1@googlemail.com</a>
<a href=""mailto:j.uliu.s.nsu.bu.g.a3.2.1@googlemail.com"">j.uliu.s.nsu.bu.g.a3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.n.s.ub.uga32.1@googlemail.com"">j.u.li.u.s.n.s.ub.uga32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.s.n.su.bu.g.a.321@googlemail.com"">ju.l.i.u.s.n.su.bu.g.a.321@googlemail.com</a>
<a href=""mailto:j.u.lius.ns.u.buga.3.21@googlemail.com"">j.u.lius.ns.u.buga.3.21@googlemail.com</a>
<a href=""mailto:j.uli.us.n.s.ubuga.321@googlemail.com"">j.uli.us.n.s.ubuga.321@googlemail.com</a>
<a href=""mailto:ju.li.u.s.n.su.b.uga32.1@googlemail.com"">ju.li.u.s.n.su.b.uga32.1@googlemail.com</a>
<a href=""mailto:j.ul.i.u.sn.subu.g.a.32.1@googlemail.com"">j.ul.i.u.sn.subu.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.i.u.sn.sub.uga.3.2.1@googlemail.com"">j.u.l.i.u.sn.sub.uga.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.iu.s.n.s.u.b.u.ga321@googlemail.com"">j.ul.iu.s.n.s.u.b.u.ga321@googlemail.com</a>
<a href=""mailto:j.u.l.iu.sn.s.u.b.u.ga.32.1@googlemail.com"">j.u.l.iu.sn.s.u.b.u.ga.32.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.n.s.ub.uga321@googlemail.com"">j.u.li.u.s.n.s.ub.uga321@googlemail.com</a>
<a href=""mailto:jul.i.u.s.nsu.b.u.ga3.21@googlemail.com"">jul.i.u.s.nsu.b.u.ga3.21@googlemail.com</a>
<a href=""mailto:ju.liusns.u.buga.32.1@googlemail.com"">ju.liusns.u.buga.32.1@googlemail.com</a>
<a href=""mailto:juli.us.ns.u.b.ug.a.3.2.1@googlemail.com"">juli.us.ns.u.b.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.iu.s.ns.ubug.a.3.2.1@googlemail.com"">j.ul.iu.s.ns.ubug.a.3.2.1@googlemail.com</a>
<a href=""mailto:juliu.s.nsub.uga3.2.1@googlemail.com"">juliu.s.nsub.uga3.2.1@googlemail.com</a>
<a href=""mailto:j.uli.usn.s.ub.u.ga3.2.1@googlemail.com"">j.uli.usn.s.ub.u.ga3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.usn.s.ub.u.ga.3.2.1@googlemail.com"">j.u.li.usn.s.ub.u.ga.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.i.u.s.ns.ubu.g.a.32.1@googlemail.com"">j.ul.i.u.s.ns.ubu.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.li.usns.u.buga.321@googlemail.com"">j.u.li.usns.u.buga.321@googlemail.com</a>
<a href=""mailto:j.uli.u.sns.ub.ug.a.32.1@googlemail.com"">j.uli.u.sns.ub.ug.a.32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.usns.u.bu.ga321@googlemail.com"">ju.l.i.usns.u.bu.ga321@googlemail.com</a>
<a href=""mailto:juliu.snsub.uga3.2.1@googlemail.com"">juliu.snsub.uga3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.ius.n.sub.u.g.a3.21@googlemail.com"">ju.l.ius.n.sub.u.g.a3.21@googlemail.com</a>
<a href=""mailto:julius.n.s.u.b.u.g.a.321@googlemail.com"">julius.n.s.u.b.u.g.a.321@googlemail.com</a>
<a href=""mailto:juliu.sn.s.ubu.ga.321@googlemail.com"">juliu.sn.s.ubu.ga.321@googlemail.com</a>
<a href=""mailto:julius.n.subuga.3.21@googlemail.com"">julius.n.subuga.3.21@googlemail.com</a>
<a href=""mailto:j.ul.ius.ns.ub.ug.a.321@googlemail.com"">j.ul.ius.ns.ub.ug.a.321@googlemail.com</a>
<a href=""mailto:j.u.li.u.sn.s.ubuga321@googlemail.com"">j.u.li.u.sn.s.ubuga321@googlemail.com</a>
<a href=""mailto:j.uliu.s.ns.ubuga.3.21@googlemail.com"">j.uliu.s.ns.ubuga.3.21@googlemail.com</a>
<a href=""mailto:j.ulius.nsub.ug.a321@googlemail.com"">j.ulius.nsub.ug.a321@googlemail.com</a>
<a href=""mailto:ju.l.i.us.n.s.ub.u.g.a321@googlemail.com"">ju.l.i.us.n.s.ub.u.g.a321@googlemail.com</a>
<a href=""mailto:j.u.l.ius.n.su.b.uga3.2.1@googlemail.com"">j.u.l.ius.n.su.b.uga3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.i.us.n.s.u.b.u.g.a.32.1@googlemail.com"">ju.l.i.us.n.s.u.b.u.g.a.32.1@googlemail.com</a>
<a href=""mailto:juli.us.n.subuga.3.21@googlemail.com"">juli.us.n.subuga.3.21@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.nsu.bu.ga.3.2.1@googlemail.com"">j.u.li.u.s.nsu.bu.ga.3.2.1@googlemail.com</a>
<a href=""mailto:j.ulius.n.s.u.b.u.g.a.321@googlemail.com"">j.ulius.n.s.u.b.u.g.a.321@googlemail.com</a>
<a href=""mailto:ju.li.u.s.ns.u.buga321@googlemail.com"">ju.li.u.s.ns.u.buga321@googlemail.com</a>
<a href=""mailto:j.ul.iu.sn.s.u.b.ug.a.3.2.1@googlemail.com"">j.ul.iu.sn.s.u.b.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.iu.snsu.bu.g.a.3.21@googlemail.com"">j.ul.iu.snsu.bu.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.u.liu.sn.sub.ug.a.3.2.1@googlemail.com"">j.u.liu.sn.sub.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.uliu.s.nsu.b.u.g.a3.2.1@googlemail.com"">j.uliu.s.nsu.b.u.g.a3.2.1@googlemail.com</a>
<a href=""mailto:j.u.liusn.su.bug.a.321@googlemail.com"">j.u.liusn.su.bug.a.321@googlemail.com</a>
<a href=""mailto:j.ul.ius.ns.u.bu.g.a.321@googlemail.com"">j.ul.ius.ns.u.bu.g.a.321@googlemail.com</a>
<a href=""mailto:j.uli.us.nsu.bu.g.a3.2.1@googlemail.com"">j.uli.us.nsu.bu.g.a3.2.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.snsub.ug.a.3.21@googlemail.com"">j.u.li.u.snsub.ug.a.3.21@googlemail.com</a>
<a href=""mailto:ju.l.i.u.sn.sub.uga.32.1@googlemail.com"">ju.l.i.u.sn.sub.uga.32.1@googlemail.com</a>
<a href=""mailto:j.u.li.u.s.nsub.uga.3.2.1@googlemail.com"">j.u.li.u.s.nsub.uga.3.2.1@googlemail.com</a>
<a href=""mailto:j.uliu.s.nsu.buga.321@googlemail.com"">j.uliu.s.nsu.buga.321@googlemail.com</a>
<a href=""mailto:jul.iu.sns.ub.ug.a.32.1@googlemail.com"">jul.iu.sns.ub.ug.a.32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.sn.subu.ga321@googlemail.com"">ju.l.i.u.sn.subu.ga321@googlemail.com</a>
<a href=""mailto:juli.u.sn.s.u.bug.a.3.2.1@googlemail.com"">juli.u.sn.s.u.bug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.i.us.nsubu.g.a3.2.1@googlemail.com"">j.ul.i.us.nsubu.g.a3.2.1@googlemail.com</a>
<a href=""mailto:ju.li.usnsubu.ga3.21@googlemail.com"">ju.li.usnsubu.ga3.21@googlemail.com</a>
<a href=""mailto:j.u.liu.s.ns.ub.u.g.a3.2.1@googlemail.com"">j.u.liu.s.ns.ub.u.g.a3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.snsubu.g.a.3.21@googlemail.com"">ju.l.iu.snsubu.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.u.liusn.s.u.bu.ga.3.21@googlemail.com"">j.u.liusn.s.u.bu.ga.3.21@googlemail.com</a>
<a href=""mailto:j.ul.ius.ns.ub.uga.321@googlemail.com"">j.ul.ius.ns.ub.uga.321@googlemail.com</a>
<a href=""mailto:ju.li.us.n.s.u.bu.g.a3.2.1@googlemail.com"">ju.li.us.n.s.u.bu.g.a3.2.1@googlemail.com</a>
<a href=""mailto:julius.ns.ub.ug.a.321@googlemail.com"">julius.ns.ub.ug.a.321@googlemail.com</a>
<a href=""mailto:j.uli.u.sn.s.u.b.uga.3.2.1@googlemail.com"">j.uli.u.sn.s.u.b.uga.3.2.1@googlemail.com</a>
<a href=""mailto:ju.liusn.su.b.ug.a.3.2.1@googlemail.com"">ju.liusn.su.b.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.u.l.ius.n.s.u.bu.g.a.32.1@googlemail.com"">j.u.l.ius.n.s.u.bu.g.a.32.1@googlemail.com</a>
<a href=""mailto:juliu.sn.subu.ga3.2.1@googlemail.com"">juliu.sn.subu.ga3.2.1@googlemail.com</a>
<a href=""mailto:j.u.liu.sn.s.u.bu.g.a32.1@googlemail.com"">j.u.liu.sn.s.u.bu.g.a32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.us.nsu.bu.g.a.321@googlemail.com"">ju.l.i.us.nsu.bu.g.a.321@googlemail.com</a>
<a href=""mailto:juli.us.n.sub.uga321@googlemail.com"">juli.us.n.sub.uga321@googlemail.com</a>
<a href=""mailto:jul.iu.sn.s.u.buga3.2.1@googlemail.com"">jul.iu.sn.s.u.buga3.2.1@googlemail.com</a>
<a href=""mailto:j.u.l.i.u.sn.s.u.bug.a3.21@googlemail.com"">j.u.l.i.u.sn.s.u.bug.a3.21@googlemail.com</a>
<a href=""mailto:jul.iu.s.ns.ub.u.g.a.3.21@googlemail.com"">jul.iu.s.ns.ub.u.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.ul.iusn.s.ub.u.ga.3.21@googlemail.com"">j.ul.iusn.s.ub.u.ga.3.21@googlemail.com</a>
<a href=""mailto:ju.l.i.usn.su.b.ug.a321@googlemail.com"">ju.l.i.usn.su.b.ug.a321@googlemail.com</a>
<a href=""mailto:j.uliusn.su.b.u.ga.321@googlemail.com"">j.uliusn.su.b.u.ga.321@googlemail.com</a>
<a href=""mailto:juli.usn.subu.ga3.21@googlemail.com"">juli.usn.subu.ga3.21@googlemail.com</a>
<a href=""mailto:juli.usns.ubuga.3.21@googlemail.com"">juli.usns.ubuga.3.21@googlemail.com</a>
<a href=""mailto:juli.u.sn.su.bug.a32.1@googlemail.com"">juli.u.sn.su.bug.a32.1@googlemail.com</a>
<a href=""mailto:ju.li.u.s.nsu.bug.a321@googlemail.com"">ju.li.u.s.nsu.bug.a321@googlemail.com</a>
<a href=""mailto:j.ul.i.us.n.s.u.b.uga.321@googlemail.com"">j.ul.i.us.n.s.u.b.uga.321@googlemail.com</a>
<a href=""mailto:j.u.li.u.sn.s.ubuga32.1@googlemail.com"">j.u.li.u.sn.s.ubuga32.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.s.nsubug.a.32.1@googlemail.com"">ju.l.iu.s.nsubug.a.32.1@googlemail.com</a>
<a href=""mailto:juli.u.s.ns.ubu.g.a.321@googlemail.com"">juli.u.s.ns.ubu.g.a.321@googlemail.com</a>
<a href=""mailto:jul.i.usn.s.u.b.ug.a.3.2.1@googlemail.com"">jul.i.usn.s.u.b.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.i.u.sns.ubu.ga3.21@googlemail.com"">j.ul.i.u.sns.ubu.ga3.21@googlemail.com</a>
<a href=""mailto:j.ul.i.u.s.n.s.u.b.ug.a32.1@googlemail.com"">j.ul.i.u.s.n.s.u.b.ug.a32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.s.n.s.ub.ug.a.32.1@googlemail.com"">ju.l.i.u.s.n.s.ub.ug.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.li.usns.ubug.a321@googlemail.com"">j.u.li.usns.ubug.a321@googlemail.com</a>
<a href=""mailto:ju.liusn.su.b.u.g.a321@googlemail.com"">ju.liusn.su.b.u.g.a321@googlemail.com</a>
<a href=""mailto:ju.l.iusnsu.buga321@googlemail.com"">ju.l.iusnsu.buga321@googlemail.com</a>
<a href=""mailto:ju.l.iu.sn.s.ubu.ga32.1@googlemail.com"">ju.l.iu.sn.s.ubu.ga32.1@googlemail.com</a>
<a href=""mailto:jul.iu.s.n.s.u.b.ug.a.3.2.1@googlemail.com"">jul.iu.s.n.s.u.b.ug.a.3.2.1@googlemail.com</a>
<a href=""mailto:jul.ius.nsubug.a.3.2.1@googlemail.com"">jul.ius.nsubug.a.3.2.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.sn.s.u.b.u.ga3.2.1@googlemail.com"">ju.l.iu.sn.s.u.b.u.ga3.2.1@googlemail.com</a>
<a href=""mailto:j.u.liu.snsubu.ga.321@googlemail.com"">j.u.liu.snsubu.ga.321@googlemail.com</a>
<a href=""mailto:j.u.li.u.sn.sub.ug.a3.21@googlemail.com"">j.u.li.u.sn.sub.ug.a3.21@googlemail.com</a>
<a href=""mailto:j.uliu.sn.subu.ga.321@googlemail.com"">j.uliu.sn.subu.ga.321@googlemail.com</a>
<a href=""mailto:juli.u.sn.s.u.bug.a32.1@googlemail.com"">juli.u.sn.s.u.bug.a32.1@googlemail.com</a>
<a href=""mailto:ju.l.i.u.sn.s.u.bug.a.321@googlemail.com"">ju.l.i.u.sn.s.u.bug.a.321@googlemail.com</a>
<a href=""mailto:j.u.l.i.u.s.nsu.bu.g.a32.1@googlemail.com"">j.u.l.i.u.s.nsu.bu.g.a32.1@googlemail.com</a>
<a href=""mailto:j.u.l.iu.s.n.s.ubu.g.a.32.1@googlemail.com"">j.u.l.iu.s.n.s.ubu.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.u.l.i.usn.sub.uga3.21@googlemail.com"">j.u.l.i.usn.sub.uga3.21@googlemail.com</a>
<a href=""mailto:j.u.li.usns.ubug.a.32.1@googlemail.com"">j.u.li.usns.ubug.a.32.1@googlemail.com</a>
<a href=""mailto:ju.l.iu.s.ns.u.b.u.g.a.3.21@googlemail.com"">ju.l.iu.s.ns.u.b.u.g.a.3.21@googlemail.com</a>
<a href=""mailto:j.uli.usn.su.bu.g.a.32.1@googlemail.com"">j.uli.usn.su.bu.g.a.32.1@googlemail.com</a>
<a href=""mailto:j.ul.ius.n.sub.u.ga.3.21@googlemail.com"">j.ul.ius.n.sub.u.ga.3.21@googlemail.com</a>
<a href=""mailto:juli.usnsu.b.uga3.21@googlemail.com"">juli.usnsu.b.uga3.21@googlemail.com</a>
<a href=""mailto:juliu.sn.su.buga32.1@googlemail.com"">juliu.sn.su.buga32.1@googlemail.com</a>
<a href=""mailto:j.u.l.iu.sn.s.u.b.u.ga.3.2.1@googlemail.com"">j.u.l.iu.sn.s.u.b.u.ga.3.2.1@googlemail.com</a>
<a href=""mailto:j.ul.ius.ns.ub.uga321@googlemail.com"">j.ul.ius.ns.ub.uga321@googlemail.com</a>
<a href=""mailto:j.uli.us.nsu.b.u.g.a.321@googlemail.com"">j.uli.us.nsu.b.u.g.a.321@googlemail.com</a>
<a href=""mailto:j.ulius.n.s.ub.u.ga.321@googlemail.com"">j.ulius.n.s.ub.u.ga.321@googlemail.com</a>
<a href=""mailto:jul.iu.sns.u.bug.a.3.21@googlemail.com"">jul.iu.sns.u.bug.a.3.21@googlemail.com</a>
<a href=""mailto:tinahfor@googlemail.com"">tinahfor@googlemail.com</a>
<a href=""mailto:ti.nah.fo.r@googlemail.com"">ti.nah.fo.r@googlemail.com</a>
<a href=""mailto:ti.na.hf.or@googlemail.com"">ti.na.hf.or@googlemail.com</a>
<a href=""mailto:t.i.n.ahfo.r@googlemail.com"">t.i.n.ahfo.r@googlemail.com</a>
<a href=""mailto:t.inahfo.r@googlemail.com"">t.inahfo.r@googlemail.com</a>
<a href=""mailto:tin.ah.f.or@googlemail.com"">tin.ah.f.or@googlemail.com</a>
<a href=""mailto:t.i.n.a.h.fo.r@googlemail.com"">t.i.n.a.h.fo.r@googlemail.com</a>
<a href=""mailto:t.i.n.ah.for@googlemail.com"">t.i.n.ah.for@googlemail.com</a>
<a href=""mailto:ti.na.h.fo.r@googlemail.com"">ti.na.h.fo.r@googlemail.com</a>
<a href=""mailto:ti.n.ahfo.r@googlemail.com"">ti.n.ahfo.r@googlemail.com</a>
<a href=""mailto:tinahf.o.r@googlemail.com"">tinahf.o.r@googlemail.com</a>
<a href=""mailto:t.i.na.hfo.r@googlemail.com"">t.i.na.hfo.r@googlemail.com</a>
<a href=""mailto:t.i.n.a.h.f.or@googlemail.com"">t.i.n.a.h.f.or@googlemail.com</a>
<a href=""mailto:t.i.nahf.o.r@googlemail.com"">t.i.nahf.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.ah.f.or@googlemail.com"">t.i.n.ah.f.or@googlemail.com</a>
<a href=""mailto:t.ina.h.for@googlemail.com"">t.ina.h.for@googlemail.com</a>
<a href=""mailto:tin.a.hf.or@googlemail.com"">tin.a.hf.or@googlemail.com</a>
<a href=""mailto:tina.hf.or@googlemail.com"">tina.hf.or@googlemail.com</a>
<a href=""mailto:t.in.a.h.for@googlemail.com"">t.in.a.h.for@googlemail.com</a>
<a href=""mailto:ti.nah.f.o.r@googlemail.com"">ti.nah.f.o.r@googlemail.com</a>
<a href=""mailto:ti.na.h.f.o.r@googlemail.com"">ti.na.h.f.o.r@googlemail.com</a>
<a href=""mailto:ti.n.a.hfor@googlemail.com"">ti.n.a.hfor@googlemail.com</a>
<a href=""mailto:t.in.ah.fo.r@googlemail.com"">t.in.ah.fo.r@googlemail.com</a>
<a href=""mailto:tina.h.fo.r@googlemail.com"">tina.h.fo.r@googlemail.com</a>
<a href=""mailto:t.i.na.hf.or@googlemail.com"">t.i.na.hf.or@googlemail.com</a>
<a href=""mailto:ti.na.hfor@googlemail.com"">ti.na.hfor@googlemail.com</a>
<a href=""mailto:t.i.n.ah.f.o.r@googlemail.com"">t.i.n.ah.f.o.r@googlemail.com</a>
<a href=""mailto:t.i.na.h.for@googlemail.com"">t.i.na.h.for@googlemail.com</a>
<a href=""mailto:t.inahf.o.r@googlemail.com"">t.inahf.o.r@googlemail.com</a>
<a href=""mailto:t.inah.f.o.r@googlemail.com"">t.inah.f.o.r@googlemail.com</a>
<a href=""mailto:tin.a.hfo.r@googlemail.com"">tin.a.hfo.r@googlemail.com</a>
<a href=""mailto:t.i.nah.f.o.r@googlemail.com"">t.i.nah.f.o.r@googlemail.com</a>
<a href=""mailto:ti.nahfor@googlemail.com"">ti.nahfor@googlemail.com</a>
<a href=""mailto:ti.na.hf.o.r@googlemail.com"">ti.na.hf.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.ah.fo.r@googlemail.com"">t.i.n.ah.fo.r@googlemail.com</a>
<a href=""mailto:ti.na.hfo.r@googlemail.com"">ti.na.hfo.r@googlemail.com</a>
<a href=""mailto:ti.n.a.h.fo.r@googlemail.com"">ti.n.a.h.fo.r@googlemail.com</a>
<a href=""mailto:ti.n.ah.f.or@googlemail.com"">ti.n.ah.f.or@googlemail.com</a>
<a href=""mailto:t.in.a.h.f.o.r@googlemail.com"">t.in.a.h.f.o.r@googlemail.com</a>
<a href=""mailto:t.in.ahfo.r@googlemail.com"">t.in.ahfo.r@googlemail.com</a>
<a href=""mailto:tinahfor@googlemail.com"">tinahfor@googlemail.com</a>
<a href=""mailto:tinah.fo.r@googlemail.com"">tinah.fo.r@googlemail.com</a>
<a href=""mailto:tin.ah.fo.r@googlemail.com"">tin.ah.fo.r@googlemail.com</a>
<a href=""mailto:tin.ah.for@googlemail.com"">tin.ah.for@googlemail.com</a>
<a href=""mailto:ti.n.a.h.f.or@googlemail.com"">ti.n.a.h.f.or@googlemail.com</a>
<a href=""mailto:tin.ah.f.o.r@googlemail.com"">tin.ah.f.o.r@googlemail.com</a>
<a href=""mailto:t.inah.fo.r@googlemail.com"">t.inah.fo.r@googlemail.com</a>
<a href=""mailto:t.inahf.or@googlemail.com"">t.inahf.or@googlemail.com</a>
<a href=""mailto:t.in.a.hf.o.r@googlemail.com"">t.in.a.hf.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.a.h.for@googlemail.com"">t.i.n.a.h.for@googlemail.com</a>
<a href=""mailto:ti.n.ah.f.o.r@googlemail.com"">ti.n.ah.f.o.r@googlemail.com</a>
<a href=""mailto:t.i.nah.fo.r@googlemail.com"">t.i.nah.fo.r@googlemail.com</a>
<a href=""mailto:tina.hf.o.r@googlemail.com"">tina.hf.o.r@googlemail.com</a>
<a href=""mailto:ti.nah.f.or@googlemail.com"">ti.nah.f.or@googlemail.com</a>
<a href=""mailto:t.ina.hfo.r@googlemail.com"">t.ina.hfo.r@googlemail.com</a>
<a href=""mailto:tinah.f.or@googlemail.com"">tinah.f.or@googlemail.com</a>
<a href=""mailto:tin.ahfor@googlemail.com"">tin.ahfor@googlemail.com</a>
<a href=""mailto:tin.a.h.f.or@googlemail.com"">tin.a.h.f.or@googlemail.com</a>
<a href=""mailto:ti.n.ahf.or@googlemail.com"">ti.n.ahf.or@googlemail.com</a>
<a href=""mailto:t.in.a.hfo.r@googlemail.com"">t.in.a.hfo.r@googlemail.com</a>
<a href=""mailto:t.in.ahfor@googlemail.com"">t.in.ahfor@googlemail.com</a>
<a href=""mailto:t.inahfor@googlemail.com"">t.inahfor@googlemail.com</a>
<a href=""mailto:tina.h.for@googlemail.com"">tina.h.for@googlemail.com</a>
<a href=""mailto:ti.n.a.h.for@googlemail.com"">ti.n.a.h.for@googlemail.com</a>
<a href=""mailto:t.i.n.a.h.f.o.r@googlemail.com"">t.i.n.a.h.f.o.r@googlemail.com</a>
<a href=""mailto:tin.ahf.or@googlemail.com"">tin.ahf.or@googlemail.com</a>
<a href=""mailto:t.i.nahfo.r@googlemail.com"">t.i.nahfo.r@googlemail.com</a>
<a href=""mailto:t.in.a.h.fo.r@googlemail.com"">t.in.a.h.fo.r@googlemail.com</a>
<a href=""mailto:ti.n.a.hf.or@googlemail.com"">ti.n.a.hf.or@googlemail.com</a>
<a href=""mailto:t.i.n.ahf.o.r@googlemail.com"">t.i.n.ahf.o.r@googlemail.com</a>
<a href=""mailto:tin.a.h.for@googlemail.com"">tin.a.h.for@googlemail.com</a>
<a href=""mailto:ti.na.h.for@googlemail.com"">ti.na.h.for@googlemail.com</a>
<a href=""mailto:tin.a.h.fo.r@googlemail.com"">tin.a.h.fo.r@googlemail.com</a>
<a href=""mailto:t.ina.hf.or@googlemail.com"">t.ina.hf.or@googlemail.com</a>
<a href=""mailto:t.i.na.hf.o.r@googlemail.com"">t.i.na.hf.o.r@googlemail.com</a>
<a href=""mailto:t.i.na.h.f.or@googlemail.com"">t.i.na.h.f.or@googlemail.com</a>
<a href=""mailto:t.in.ahf.or@googlemail.com"">t.in.ahf.or@googlemail.com</a>
<a href=""mailto:t.ina.h.f.o.r@googlemail.com"">t.ina.h.f.o.r@googlemail.com</a>
<a href=""mailto:tin.a.h.f.o.r@googlemail.com"">tin.a.h.f.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.a.hfor@googlemail.com"">t.i.n.a.hfor@googlemail.com</a>
<a href=""mailto:ti.n.ahfor@googlemail.com"">ti.n.ahfor@googlemail.com</a>
<a href=""mailto:ti.n.ah.fo.r@googlemail.com"">ti.n.ah.fo.r@googlemail.com</a>
<a href=""mailto:t.in.ah.for@googlemail.com"">t.in.ah.for@googlemail.com</a>
<a href=""mailto:t.in.a.hfor@googlemail.com"">t.in.a.hfor@googlemail.com</a>
<a href=""mailto:tinah.f.o.r@googlemail.com"">tinah.f.o.r@googlemail.com</a>
<a href=""mailto:ti.nah.for@googlemail.com"">ti.nah.for@googlemail.com</a>
<a href=""mailto:t.i.nah.f.or@googlemail.com"">t.i.nah.f.or@googlemail.com</a>
<a href=""mailto:t.i.nahfor@googlemail.com"">t.i.nahfor@googlemail.com</a>
<a href=""mailto:t.ina.h.fo.r@googlemail.com"">t.ina.h.fo.r@googlemail.com</a>
<a href=""mailto:tinahf.or@googlemail.com"">tinahf.or@googlemail.com</a>
<a href=""mailto:t.in.a.hf.or@googlemail.com"">t.in.a.hf.or@googlemail.com</a>
<a href=""mailto:ti.n.a.h.f.o.r@googlemail.com"">ti.n.a.h.f.o.r@googlemail.com</a>
<a href=""mailto:ti.na.h.f.or@googlemail.com"">ti.na.h.f.or@googlemail.com</a>
<a href=""mailto:tina.h.f.o.r@googlemail.com"">tina.h.f.o.r@googlemail.com</a>
<a href=""mailto:t.in.ahf.o.r@googlemail.com"">t.in.ahf.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.ahf.or@googlemail.com"">t.i.n.ahf.or@googlemail.com</a>
<a href=""mailto:ti.n.a.hfo.r@googlemail.com"">ti.n.a.hfo.r@googlemail.com</a>
<a href=""mailto:t.inah.f.or@googlemail.com"">t.inah.f.or@googlemail.com</a>
<a href=""mailto:ti.n.ahf.o.r@googlemail.com"">ti.n.ahf.o.r@googlemail.com</a>
<a href=""mailto:t.i.n.ahfor@googlemail.com"">t.i.n.ahfor@googlemail.com</a>
<a href=""mailto:tina.h.f.or@googlemail.com"">tina.h.f.or@googlemail.com</a>
<a href=""mailto:t.i.n.a.hf.or@googlemail.com"">t.i.n.a.hf.or@googlemail.com</a>
<a href=""mailto:t.i.na.h.f.o.r@googlemail.com"">t.i.na.h.f.o.r@googlemail.com</a>
<a href=""mailto:tinahfo.r@googlemail.com"">tinahfo.r@googlemail.com</a>
<a href=""mailto:tina.hfor@googlemail.com"">tina.hfor@googlemail.com</a>
<a href=""mailto:ti.nahf.o.r@googlemail.com"">ti.nahf.o.r@googlemail.com</a>
<a href=""mailto:t.ina.h.f.or@googlemail.com"">t.ina.h.f.or@googlemail.com</a>
<a href=""mailto:t.i.n.a.hfo.r@googlemail.com"">t.i.n.a.hfo.r@googlemail.com</a>
<a href=""mailto:tina.hfo.r@googlemail.com"">tina.hfo.r@googlemail.com</a>
<a href=""mailto:t.i.na.h.fo.r@googlemail.com"">t.i.na.h.fo.r@googlemail.com</a>
<a href=""mailto:t.in.ah.f.or@googlemail.com"">t.in.ah.f.or@googlemail.com</a>
<a href=""mailto:tinah.for@googlemail.com"">tinah.for@googlemail.com</a>
<a href=""mailto:t.in.ah.f.o.r@googlemail.com"">t.in.ah.f.o.r@googlemail.com</a>
<a href=""mailto:tin.a.hfor@googlemail.com"">tin.a.hfor@googlemail.com</a>
<a href=""mailto:t.ina.hfor@googlemail.com"">t.ina.hfor@googlemail.com</a>
<a href=""mailto:t.in.a.h.f.or@googlemail.com"">t.in.a.h.f.or@googlemail.com</a>
<a href=""mailto:t.i.nah.for@googlemail.com"">t.i.nah.for@googlemail.com</a>
<a href=""mailto:tin.ahfo.r@googlemail.com"">tin.ahfo.r@googlemail.com</a>
<a href=""mailto:t.ina.hf.o.r@googlemail.com"">t.ina.hf.o.r@googlemail.com</a>
<a href=""mailto:ti.nahfo.r@googlemail.com"">ti.nahfo.r@googlemail.com</a>
<a href=""mailto:t.i.n.a.hf.o.r@googlemail.com"">t.i.n.a.hf.o.r@googlemail.com</a>
<a href=""mailto:t.i.na.hfor@googlemail.com"">t.i.na.hfor@googlemail.com</a>
<a href=""mailto:ti.nahf.or@googlemail.com"">ti.nahf.or@googlemail.com</a>
<a href=""mailto:ti.n.a.hf.o.r@googlemail.com"">ti.n.a.hf.o.r@googlemail.com</a>
<a href=""mailto:ti.n.ah.for@googlemail.com"">ti.n.ah.for@googlemail.com</a>
<a href=""mailto:tin.ahf.o.r@googlemail.com"">tin.ahf.o.r@googlemail.com</a>
<a href=""mailto:t.i.nahf.or@googlemail.com"">t.i.nahf.or@googlemail.com</a>
<a href=""mailto:tin.a.hf.o.r@googlemail.com"">tin.a.hf.o.r@googlemail.com</a>
<a href=""mailto:t.inah.for@googlemail.com"">t.inah.for@googlemail.com</a>"
FcUc9tJ0,CB Bio design Cici,r3dglov3,HTML,Sunday 15th of October 2023 11:46:06 AM CDT,"<ul style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:120px auto 50px auto;box-shadow:0 0 12px #999;""><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_header.jpg"" style=""display:block;width:100%;height:auto;margin:0 auto;""/></li><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_aboutme.jpg"" style=""display:block;width:100%;height:auto;margin:0 auto;""/></li><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_rules.jpg"" style=""display:block;width:100%;height:auto;margin:0 auto;""/></li><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><p style=""display:block;width:100%;height:auto;margin:0 auto;padding:10px 0 10px;float:none;clear:left;box-sizing:border-box;background-color:#f1f1f1;border-bottom:5px solid #777;""><a href=""#"" style=""display:block;width:33.33%;height:auto;margin:0 auto;padding:0;float:left;box-sizing:border-box;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_twtfol.png"" style=""display:block;width:100%;height:auto;margin:0 auto;float:none;clear:left;""/></a><a href=""#"" style=""display:block;width:33.33%;height:auto;margin:0 auto;padding:0;float:left;box-sizing:border-box;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_amawl.png"" style=""display:block;width:100%;height:auto;margin:0 auto;float:none;clear:left;""/></a><a href=""#"" style=""display:block;width:33.33%;height:auto;margin:0 auto;padding:0;float:left;box-sizing:border-box;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_cbwlist.png"" style=""display:block;width:100%;height:auto;margin:0 auto;float:none;clear:left;""/></a><i style=""display:block;width:100%;height:1px;float:none;clear:left;overflow:hidden;opacity:0;margin:0 auto;"">custom design by CiciWeb from Camgirl Cloud</i></p></li><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_toptippers.jpg"" style=""display:block;width:100%;height:auto;margin:0 auto;""/></li><li style=""display:block;width:100%;min-width:300px;float:none;clear:left;box-sizing:border-box;list-style:none;line-height:normal;padding:0;background-color:#222;margin:0 auto;text-align:center;""><img src=""https://raw.githubusercontent.com/cgc-dan/cgc-designers/master/img/cici_dmca.jpg"" style=""display:block;width:100%;height:auto;margin:0 auto;""/></li></ul>"
bB60bw99,TempestHubV2 Roblox Hub Script,whynesko,Lua,Sunday 15th of October 2023 11:39:58 AM CDT,"-- Made my own Roblox Hub Script, enjoy ^^

loadstring(game:HttpGet('https://raw.githubusercontent.com/yoTempest/KeyTest/main/TempestHubV2'))()"
N6VW0QtD,Untitled,Overwtime,Bash,Sunday 15th of October 2023 11:35:52 AM CDT,"#!/bin/sh

# All system paths and filenames are case sensitive (uppercase and lowercase letters)
# Все системные пути и названия файлов чувствительны к регистру (заглавные и строчные буквы)

# *** Server app options / Параметры приложения-сервера ***

# Execution type: screen or tmux
# Тип выполнения: screen или tmux
execution_type=""screen""

# To create a screen/tmux session and identify the process in top, htop, etc.
# Для создания сессии screen/tmux и идентификации процесса в top, htop и т.д.
server_name=""grief""

# Display the server console after starting the script
# Отображать ли консоль сервера сразу после запуска скрипта
auto_console_join=false

# Server app file name. If not specified, it will automatically find the jar file. Example: paper.jar
# Название файла ядра. Если не указано - найдёт jar-файл автоматически. Пример: paper.jar
jar_file=""server.jar""

# Minimum amount of memory. Example: 2048M or 2G
# Минимальное количество памяти. Пример: 2048M или 2G
min_memory=""5632M""

# Maximum amount of memory
# Максимальное количество памяти
max_memory=""5632M""

# Server port. If not specified, the value from server.properties is used
# Порт сервера. Если не указан - используется значение из server.properties
server_port=""""

# Whether to use a forced update of all chunks to the format of the current Minecraft-server version at startup
# Использовать ли при запуске принудительное обновление всех чанков до формата текущей версии Майнкрафт-сервера
force_chunks_upgrade=false

# *** Java options / Параметры Java ***

# Java directory (for JDK add ""/bin"" at the end). If not specified, the system path is used. Example: $HOME/jre-16.0.1 или $PWD/jdk-17.0.2/bin
# Директория Java (для JDK добавьте в конце ""/bin""). Если не указана - используется системный путь. Пример: $HOME/jre-16.0.1 или $PWD/jdk-17.0.2/bin
java_dir=""""

# Whether to enable profiling (requires more system resources). Only works with JDK
# Включить ли профилирование (требуется больше системных ресурсов). Работает только с JDK
profiling=false

# Whether to prevent errors like <<module java.base does not ""opens java.lang"" to unnamed module>>
# Предотвращать ли ошибки вида <<module java.base does not ""opens java.lang"" to unnamed module>>
fix_java_12_issues=true

# The host and port of the debug agent. If not specified, debugging is disabled. Example: 0.0.0.0:22222
# Хост и порт агента отладки. Если не указано - отладка отключена. Пример: 0.0.0.0:22222
debug_agent_address=""""

# Log4j options file with .xml extension. If not specified, default settings are used. Example: log4j2.xml
# Файл параметров log4j с расширением .xml. Если не указано - используются настройки по-умолчанию. Пример: log4j2.xml
log4j_config=""""



# *** Anything below is not recommended to be modified ***
# *** Всё, что ниже, менять не рекомендуется ***

# Source / Источник: https://mcflags.emc.gs
aikar_jvm_flags=""-XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+DisableExplicitGC -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -XX:+UseAES -XX:+UseAESIntrinsics -XX:+UseFMA -XX:AllocatePrefetchStyle=1 -XX:+UseLoopPredicate -XX:+RangeCheckElimination -XX:+EliminateLocks -XX:+DoEscapeAnalysis -XX:+UseCodeCacheFlushing -XX:+SegmentedCodeCache -XX:+UseFastJNIAccessors -XX:+OptimizeStringConcat -XX:+UseCompressedOops -XX:+TrustFinalNonStaticFields -XX:+UseInlineCaches -XX:+RewriteBytecodes -XX:+RewriteFrequentPairs -XX:+UseNUMA -XX:+UseFPUForSpilling -XX:+UseNewLongLShift -XX:+UseVectorCmov -XX:+ScavengeBeforeFullGC -XX:+OptimizeFill -Dusing.aikars.flags=https://mcflags.emc.gs -Daikars.new.flags=true -XX:+UseNUMA -XX:+UseFastUnorderedTimeStamps""
jvm_flags=""-Dfile.encoding=UTF-8 -Dlog4j2.formatMsgNoLookups=true -DPaper.IgnoreJavaVersion=true -DPurpur.IReallyDontWantSpark=true""
app_flags=""--nogui""
display_start_command=false
process_hint=""${server_name}""
script_name=$(basename ""$0"")

if [ ""$jar_file"" = """" ]; then
	for file in *.jar; do
		[ -f ""$file"" ] || break
		if [ ""$jar_file"" != """" ]; then
			echo ""Multiple jar-files found: $jar_file and $file. Please specify jar_file option in $script_name""
			exit
		fi
		jar_file=$file
	done
	if [ ""$jar_file"" = """" ]; then
		echo ""Jar-file not found. Please specify jar_file option in $script_name""
		exit
	fi
	echo ""Using jar-file $jar_file""
fi

if [ ""$1"" != ""deep"" ]; then
	if [ ""$execution_type"" = ""screen"" ]; then
		screen -A -m -d -S ${server_name} bash ""${script_name}"" deep
		[ ""$auto_console_join"" = true ] && sleep 0.2 && screen -x ${server_name}
	elif [ ""$execution_type"" = ""tmux"" ]; then
		tmux new -d -s ${server_name}
		sleep 0.2
		tmux send-keys -t ${server_name} ""bash \""${script_name}\"" deep"" Enter
		[ ""$auto_console_join"" = true ] && sleep 0.2 && tmux attach -t ${server_name}
	else
		echo ""Wrong execution_type: $execution_type""
	fi
	exit
fi

#!/bin/bash

[ ""$java_dir"" != """" ] && java_dir=""${java_dir}/""
java_binary=""${java_dir}java21""

jvm_flags+="" ${aikar_jvm_flags}""
if [ ""$profiling"" = true ]; then
	process_hint+=""-profiling""
	jvm_flags=""${jvm_flags// -XX:+PerfDisableSharedMem/}""
	jvm_flags+="" -Xshare:off""
fi
process_hint=""$USER.${process_hint}""

add_opens_packages=()
add_modules_list=(
	""jdk.incubator.vector""
)

if [ ""$fix_java_12_issues"" = true ]; then
	add_opens_packages+=(
		""java.base/java.lang""
		""java.base/java.lang.reflect""
		""java.base/java.lang.invoke""
		""java.base/java.security""
	)
fi

for package in ""${add_opens_packages[@]}""; do
	jvm_flags+="" --add-opens ${package}=ALL-UNNAMED""
done

for module_index in ""${!add_modules_list[@]}""; do
	if [ ""$module_index"" = 0 ]; then
		jvm_flags+="" --add-modules=""
	else
		jvm_flags+="",""
	fi
	jvm_flags+=""${add_modules_list[$module_index]}""
done

[ ""$debug_agent_address"" != """" ] && jvm_flags+="" -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${debug_agent_address}""
[ ""$log4j_config"" != """" ] && jvm_flags+="" -Dlog4j.configurationFile=${log4j_config}""

[ ""$server_port"" != """" ] && app_flags+="" -port ${server_port}""
[ ""$force_chunks_upgrade"" = true ] && app_flags+="" --forceUpgrade""

start_command=""${java_binary} -D_server=${process_hint} -Xms${min_memory} -Xmx${max_memory} ${jvm_flags} -jar ${jar_file} ${app_flags}""

if [ ""$display_start_command"" = true ]; then
	echo ""Start command: $start_command""
fi

while true
do
	eval ""${start_command}""
	echo ""Server $server_name stopped. Rebooting in:""
	for seconds_left in {3..1}
	do
		echo ""$seconds_left...""
		sleep 1
	done
done
"
Muxz3kwf,spiral-3c,fsoc131y,Java,Sunday 15th of October 2023 11:28:56 AM CDT,"old: https://pastebin.com/bsXH7eHU

Exp 6: Packages
//packages
//Main.java
import ecommerce.Product;
import ecommerce.Order;
import ecommerce.ShoppingCart;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ShoppingCart cart = new ShoppingCart();

        while (true) {
            System.out.print(""Enter product ID (0 to finish): "");
            int productId = scanner.nextInt();
            if (productId == 0) {
                break;
            }

            System.out.print(""Enter product name: "");
            scanner.nextLine(); // Consume the newline character
            String productName = scanner.nextLine();

            System.out.print(""Enter product price: "");
            double productPrice = scanner.nextDouble();

            System.out.print(""Enter quantity: "");
            int quantity = scanner.nextInt();

            Product product = new Product(productId, productName, productPrice);
            cart.addProduct(product, quantity);
        }

        // Display the contents of the shopping cart
        System.out.println(""Shopping Cart Contents:"");
        cart.displayCart();

        // Create an order from the shopping cart
        Order order = new Order(cart);

        // Display the order details
        System.out.println(""\nOrder Details:"");
        order.displayOrder();

        scanner. Close();
    }
}

//ecommerce/Product.java
package ecommerce;
 
public class Product {
    private int id;
    private String name;
    private double price;
 
    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }
 
    // Getters and setters for id, name, and price
    public String toString() {
        return name + "" (ID: "" + id + "", Price: Rs. "" + price + "")"";
    }
}

//ecommerce/Order.java
package ecommerce;
 
import java.util.Date;
 
public class Order {
    private ShoppingCart cart;
    private Date orderDate;
 
    public Order(ShoppingCart cart) {
        this.cart = cart;
        this.orderDate = new Date();
    }
 
    public void displayOrder() {
        System.out.print(""Order Date: "" + orderDate);
        System.out.println(""\n"");
        System.out.println(""Order Items:"");
        cart.displayCart();
    }
}

//ecommerce/ShoppingCart.java
package ecommerce;
 
import java.util.HashMap;
import java.util.Map;
 
public class ShoppingCart {
    private Map<Product, Integer> items;
 
    public ShoppingCart() {
        items = new HashMap<>();
    }
 
    public void addProduct(Product product, int quantity) {
        items.put(product, quantity);
    }
 
    public void displayCart() {
        for (Map.Entry<Product, Integer> entry : items.entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            System.out.println(product + "" x"" + quantity);
        }
    }
}

Exp 7: Multi-threading:
//easy:
class MultithreadingDemo extends Thread {
    public void run() {
        try {
            // Displaying the thread name that is running
            System.out.println(
                ""Thread "" + Thread.currentThread().getName()
                + "" is running"");
        } catch (Exception e) {
            // Throwing an exception
            System.out.println(""Exception is caught"");
        }
    }
}

public class exp7 {
    public static void main(String[] args) {
        int n = 8; // Number of threads
        for (int i = 0; i < n; i++) {
            MultithreadingDemo object = new MultithreadingDemo();
            object.start(); // Note the lowercase 'start' method
        }
    }
}


//complex:
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class Product {
    private String name;
    private int stock;

    public Product(String name, int stock) {
        this.name = name;
        this.stock = stock;
    }

    public synchronized void purchase(int quantity) {
        if (stock >= quantity) {
            stock -= quantity;
            System.out.println(quantity + "" "" + name + ""(s) purchased."");
        } else {
            System.out.println(""Sorry, not enough "" + name + "" in stock."");
        }
    }

    public int getStock() {
        return stock;
    }
}

class Customer implements Runnable {
    private Product product;
    private int quantity;

    public Customer(Product product, int quantity) {
        this.product = product;
        this.quantity = quantity;
    }

    @Override
    public void run() {
        product.purchase(quantity);
    }
}

public class Main {
    public static void main(String[] args) {
        Product laptop = new Product(""Laptop"", 10);
        Product headphones = new Product(""Headphones"", 20);

        ExecutorService executor = Executors.newFixedThreadPool(3);

        // Simulate customer orders
        for (int i = 0; i < 5; i++) {
            executor.execute(new Customer(laptop, 2));
        }
        for (int i = 0; i < 5; i++) {
            executor.execute(new Customer(headphones, 3));
        }

        executor.shutdown();

        // Check stock availability after orders
        System.out.println(""Laptop Stock: "" + laptop.getStock());
        System.out.println(""Headphones Stock: "" + headphones.getStock());
    }
}

Exp 8: Static Keyword
//static keyword use
class ECommerceStore {
    private static int totalProductsSold = 0;
    private static double totalRevenue = 0;

    private String productName;
    private double productPrice;

    public ECommerceStore(String productName, double productPrice) {
        this.productName = productName;
        this.productPrice = productPrice;
    }

    public void sellProduct(int quantity) {
        double totalSale = productPrice * quantity;
        totalProductsSold += quantity;
        totalRevenue += totalSale;
        System.out.println(quantity + "" "" + productName + ""(s) sold for a total of $"" + totalSale);
    }

    public static int getTotalProductsSold() {
        return totalProductsSold;
    }

    public static double getTotalRevenue() {
        return totalRevenue;
    }
}

public class Main {
    public static void main(String[] args) {
        ECommerceStore laptop = new ECommerceStore(""Laptop"", 799.99);
        ECommerceStore headphones = new ECommerceStore(""Headphones"", 49.99);

        laptop.sellProduct(5);
        headphones.sellProduct(10);

        System.out.println(""Total products sold: "" + ECommerceStore.getTotalProductsSold());
        System.out.println(""Total revenue: $"" + ECommerceStore.getTotalRevenue());
    }
}

Exp 9: Final & Abstract
//using final keyword
class Product {
    private final String name;
    private final double price;

    public Product(String name, double price) {
        this.name = name;
        this.price = price;
    }

    public final String getName() {
        return name;
    }

    public final double getPrice() {
        return price;
    }
}

public class FinalKeywordDemo {
    public static void main(String[] args) {
        Product product = new Product(""Laptop"", 799.99);
        System.out.println(""Product Name: "" + product.getName());
        System.out.println(""Product Price: $"" + product.getPrice());
    }
}

---separate program can be made if asked---
//using abstract
abstract class PaymentMethod {
    private String method;

    public PaymentMethod(String method) {
        this.method = method;
    }

    public abstract void processPayment(double amount);

    public String getMethod() {
        return method;
    }
}

class CreditCardPayment extends PaymentMethod {
    public CreditCardPayment(String method) {
        super(method);
    }

    @Override
    public void processPayment(double amount) {
        System.out.println(""Processing credit card payment of $"" + amount + "" using "" + getMethod());
    }
}

public class AbstractKeywordDemo {
    public static void main(String[] args) {
        PaymentMethod paymentMethod = new CreditCardPayment(""Visa"");
        paymentMethod.processPayment(199.99);
    }
}

Exp 10: This
//using this keyword
class Product {
    private String name;
    private double price;

    public Product(String name, double price) {
        // Use 'this' to disambiguate between instance variables and parameters
        this.name = name;
        this.price = price;
    }

    public void displayProductInfo() {
        System.out.println(""Product Name: "" + this.name);
        System.out.println(""Product Price: $"" + this.price);
    }
}

public class ThisKeywordDemo {
    public static void main(String[] args) {
        Product laptop = new Product(""Laptop"", 799.99);
        Product tShirt = new Product(""T-Shirt"", 29.99);

        System.out.println(""Laptop Information:"");
        laptop.displayProductInfo();

        System.out.println(""\nT-Shirt Information:"");
        tShirt.displayProductInfo();
    }
}

Exp 11: Multi-level inheritance
//ml inherit
// Base class representing a product
class Product {
    private String name;
    private double price;
 
    public Product(String name, double price) {
        this.name = name;
        this.price = price;
    }
 
    public String getName() {
        return name;
    }
 
    public double getPrice() {
        return price;
    }
 
    public void displayProductInfo() {
        System.out.println(""Product: "" + name);
        System.out.println(""Price: $"" + price);
    }
}
 
// Subclass representing electronic products
class Electronics extends Product {
    private String brand;
 
    public Electronics(String name, double price, String brand) {
        super(name, price);
        this.brand = brand;
    }
 
    public String getBrand() {
        return brand;
    }
 
    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Brand: "" + brand);
    }
}
 
// Subclass representing laptops
class Laptop extends Electronics {
    private String processor;
 
    public Laptop(String name, double price, String brand, String processor) {
        super(name, price, brand);
        this.processor = processor;
    }
 
    public String getProcessor() {
        return processor;
    }
 
    @Override
    public void displayProductInfo() {
        super.displayProductInfo();
        System.out.println(""Processor: "" + processor);
    }
}
 
public class Multi {
    public static void main(String[] args) {
        // Create a Laptop object
        Laptop laptop = new Laptop(""Dell XPS 13"", 1299.99, ""Dell"", ""Intel Core i7"");
 
        // Display product information
        laptop.displayProductInfo();
    }
}

Exp 12: Super
//using super
class User {
    private String username;
    private String email;
 
    public User(String username, String email) {
        this.username = username;
        this.email = email;
    }
 
    public void displayUserDetails() {
        System.out.println(""Username: "" + username);
        System.out.println(""Email: "" + email);
    }
}
 
class Customer extends User {
    private String shippingAddress;
 
    public Customer(String username, String email, String shippingAddress) {
        super(username, email); // Call superclass constructor using super
        this.shippingAddress = shippingAddress;
    }
 
    public void displayCustomerDetails() {
        super.displayUserDetails(); // Call superclass method using super
        System.out.println(""Shipping Address: "" + shippingAddress);
    }
}
 
public class Superj {
    public static void main(String[] args) {
        // Create a Customer
        Customer customer = new Customer(""jane_smith"", ""jane@example.com"", ""123 Main St, City"");
        System.out.println(""Customer Details:"");
        customer.displayCustomerDetails();
    }
}

<!----MASTER----->
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

// Multithreading using Thread class
class ShippingThread extends Thread {
    private String product;

    public ShippingThread(String product) {
        this.product = product;
    }

    public void run() {
        System.out.println(""Shipping "" + product);
    }
}

// Final keyword
class Product {
    private final String name;
    private final double price;

    public Product(String name, double price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }
}

// Static keyword
class ShoppingCart {
    private static int cartCount = 0;

    private List<Product> items = new ArrayList<>();
    private List<Integer> quantities = new ArrayList<>();

    public ShoppingCart() {
        cartCount++;
    }

    public static int getCartCount() {
        return cartCount;
    }

    // Adding products to the cart
    public void addProduct(Product product, int quantity) {
        items.add(product);
        quantities.add(quantity);
    }

    public void displayCart() {
        System.out.println(""Items in Your Cart:"");
        for (int i = 0; i < items.size(); i++) {
            Product product = items.get(i);
            int quantity = quantities.get(i);
            System.out.println(
                (i + 1) + "". "" + product.getName() + "" - x"" + quantity + "" - $"" + (product.getPrice() * quantity)
            );
        }
    }
}

// Using ""this"" keyword
class Customer {
    private String name;

    public Customer(String name) {
        this.name = name;
    }

    public void checkout(ShoppingCart cart) {
        System.out.println(""Checkout by "" + this.name);
        cart.displayCart();
    }
}

// Abstract keyword and multiple inheritance using interfaces
interface Discountable {
    double calculateDiscount(double originalPrice);
}

class GoldCustomer extends Customer implements Discountable {
    public GoldCustomer(String name) {
        super(name);
    }

    @Override
    public double calculateDiscount(double originalPrice) {
        // Implementing discount logic
        return 0.0; // No discount for Gold customers in this updated example
    }
}

// Exception handling
class InvalidCardException extends Exception {
    public InvalidCardException(String message) {
        super(message);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter your name: "");
        String customerName = scanner.nextLine();

        Customer customer = new GoldCustomer(customerName);

        System.out.println(""Welcome to the E-Commerce Store!"");
        ShoppingCart cart = new ShoppingCart();

        try {
            System.out.print(""Enter product name: "");
            String productName = scanner.nextLine();
            System.out.print(""Enter product price: "");
            double productPrice = scanner.nextDouble();
            System.out.print(""Enter the quantity: "");
            int quantity = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            Product product = new Product(productName, productPrice);

            cart.addProduct(product, quantity);
            System.out.println(""Product added to the cart."");
        } catch (Exception e) {
            System.err.println(""Invalid input. Please enter valid product details."");
            scanner.close();
            return;
        }

        customer.checkout(cart);
        System.out.println(""Total Carts Created: "" + ShoppingCart.getCartCount());

        // Multithreading
        ShippingThread shippingThread = new ShippingThread(""Product Name"");
        shippingThread.start();

        // Card details input
        System.out.print(""Enter your card number: "");
        String cardNumber = scanner.nextLine();

        if (cardNumber.length() > 16) {
            try {
                scanner.close();
                throw new InvalidCardException(""Invalid card number: Card exceeds 16 digits"");
            } catch (InvalidCardException ex) {
                System.err.println(""Error: "" + ex.getMessage());
            }
        }

        else{
            System.out.println(""Your card "" + cardNumber + "" is valid!"");
            System.out.println(""Order placed successfully!"");
        }

        scanner.close();
    }
}
"
77pR02e7,Untitled,Mohamet123,Bash,Sunday 15th of October 2023 10:57:41 AM CDT,"Developer API:

PHP

                // Set the API endpoint URL
                $url = 'https://esmartgate.com/paypal';
                
                // Set API key, amount, customer email, number ID, visitor IP, user agent, return URL, cancel URL, sandbox flag
                $api = 'YOUR_API_KEY';
                $amount = 100.0; // Replace with your desired amount
                $email = 'customer@example.com'; // Replace with the customer's email
                $item_number = 12345; // Replace with the NumberID from your website
                $visitor_ip = $_SERVER['REMOTE_ADDR']; // Replace with the customer's IP address
                $user_agent = $_SERVER['HTTP_USER_AGENT']; // Get the user agent of the customer's browser
                $return_url = 'your_website.com/return_url'; // Replace with your return URL
                $cancel_url = 'your_website.com/cancel_url'; // Replace with your cancel URL
                $sandbox = 1; // Set to 1 if you want to use the sandbox
                
                // Prepare the POST data
                $data = array(
                    'api' => $api,
                    'amount' => $amount,
                    'email' => $email,
                    'item_number' => $item_number,
                    'visitor_ip' => $visitor_ip,
                    'user_agent' => $user_agent,
                    'return' => $return_url,
                    'cancel_return' => $cancel_url,
                    'sandbox' => $sandbox,
                );
                
                // Set the HTTP_REFERER header
                $referer_url = 'https://your_website'; // Replace with the actual previous page URL
                $http_referer_header = 'Referer: ' . $referer_url;
                
                // Initialize cURL session
                $ch = curl_init();
                
                // Set cURL options for POST request
                curl_setopt($ch, CURLOPT_URL, $url);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($ch, CURLOPT_POST, true);
                curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
                
                // Set the HTTP_REFERER header
                curl_setopt($ch, CURLOPT_HTTPHEADER, array($http_referer_header));

                // Execute cURL session and get the response
                $response = curl_exec($ch);
                
                // Check for cURL errors
                if (curl_errno($ch)) {
                    echo 'cURL error: ' . curl_error($ch);
                }
                
                // Close cURL session
                curl_close($ch);
                
                // Process the response, if needed
                // For example, you can parse the JSON response or display it on your page
                echo $response;

Python

            pip install user_agent
            
            import requests
            from user_agent import generate_user_agent
            import socket
            
            # Set the API endpoint URL
            url = 'https://esmartgate.com/paypal'
            
            # Set your API key, amount, customer email, number ID, return URL, cancel URL, and sandbox flag
            api = 'YOUR_API_KEY'
            amount = 100.0  # Replace with your desired amount
            email = 'customer@example.com'  # Replace with the customer's email
            item_number = 12345  # Replace with the NumberID from your website
            return_url = 'your_website.com/return_url'  # Replace with your return URL
            cancel_url = 'your_website.com/cancel_url'  # Replace with your cancel URL
            
            # Auto-detect the user agent
            user_agent = generate_user_agent()
            
            # Auto-detect the visitor's IP address
            visitor_ip = socket.gethostbyname(socket.gethostname())
            
            # Set the headers with the Referer
            headers = {
                'Referer': 'your_website',  # Replace with the actual previous page URL
                'User-Agent': user_agent
            }

            # Prepare the POST data
            data = {
                'api': api,
                'amount': amount,
                'email': email,
                'item_number': item_number,
                'visitor_ip': visitor_ip,
                'user_agent': user_agent,
                'return': return_url,
                'cancel_return': cancel_url,
                'sandbox': sandbox,
            }
            
            # Send the POST request
            response = requests.post(url, data=data, headers=headers)
            
            # Check if the request was successful
            if response.status_code == 200:
                print('Request successful:')
                print(response.text)
            else:
                print('Request failed with status code:', response.status_code)

RESPONSE

                Success

                {""status"":true,""message"":""The payment link has been sent to your email: customer@example.com, please check it.""}

                
                False

                {""status"":false,""message"":""Parameter error, Please try again!""}

                
                Error

                {""status"":false,""message"":""Payment has been declined. Please try again.""}

POST to your NOTIFY URL
POST https://your_website.com/callback
                Array
                    (
                        'status' => completed | refunded,
                        'payer_email' => customer_email,
                        'txn_id' => item_number,
                        'mc_gross' => order_amount,
                        'SignatureValue' => SignatureValue,
                    )
            $receivedTransaction = $_POST;
            $salt = ""YOUR_API"";
            $receivedHash = $receivedTransaction['SignatureValue'];
            unset($receivedTransaction['SignatureValue']);
            
            $stringData = json_encode($receivedTransaction);
            $computedHash = hash('sha256', $stringData . $salt);
            
            // Verify the hash
            if ($computedHash === $receivedHash) {
                // Hashes match, data is untampered
                // Continue processing...
            } else {
                // Hashes do not match, potential data tampering
                // Log an error, throw an exception, etc.
            }"
9rgfz5CE,$ tree /library/books/ebooks/A*,iconoclasthero,Bash,Sunday 15th of October 2023 10:46:43 AM CDT,"$ tree /library/books/ebooks/A*
/library/books/ebooks/Arendt,\ Hannah
|-- Between\ Past\ and\ Future
|   |-- Between\ Past\ and\ Future\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
|-- Eichmann\ in\ Jerusalem
|   |-- Eichmann\ in\ Jerusalem\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
|-- Human\ Condition,\ The
|   |-- Human\ Condition,\ The\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
|-- On\ Human\ Dignity\ and\ the\ Politics\ of\ Human\ Rights
|   |-- On\ Human\ Dignity\ and\ the\ Politics\ of\ Human\ Rights\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
|-- Portable\ Hannah\ Arendt,\ The
|   |-- Portable\ Hannah\ Arendt,\ The\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
|-- Reluctant\ Modernism\ Of\ Hannah\ Arendt\ (1996)\ -\ Benhabib,\ The
|   |-- Reluctant\ Modernism\ Of\ Hannah\ Arendt\ (1996)\ -\ Benhabib,\ The\ -\ Arendt,\ Hannah.pdf
|   `-- metadata.json
`-- Totalitarian\ Imperialism_\ Reflections\ On\ The\ Hungarian\ Revolution
    |-- Totalitarian\ Imperialism_\ Reflections\ On\ The\ Hungarian\ Revolution\ -\ Arendt,\ Hannah.pdf
    `-- metadata.json
/library/books/ebooks/Ariely,\ Dan
|-- Predictably\ Irrational
|   |-- Predictably\ Irrational\ -\ Ariely,\ Dan.epub
|   `-- metadata.json
`-- Predictably\ Irrational_\ The\ Hidden\ Forces\ That\ Shape\ Our\ Decisions\ (Harper;\ 2008)
    |-- Predictably\ Irrational_\ The\ Hidden\ Forces\ That\ Shape\ Our\ Decisions\ (Harper;\ 2008)\ -\ Ariely,\ Dan.pdf
    `-- metadata.json
/library/books/ebooks/Aslan,\ Reza
`-- Zealot_\ The\ Life\ and\ Times\ of\ Jesus\ of\ Nazareth
    |-- Zealot_\ The\ Life\ and\ Times\ of\ Jesus\ of\ Nazareth\ -\ Aslan,\ Reza.epub
    `-- metadata.json
"
6ASU2m4B,tree /library/epubs/A*,iconoclasthero,Bash,Sunday 15th of October 2023 10:45:34 AM CDT,"$ tree /library/epubs/A*
A\ Green\ Energy\ Guide\ (2010)\ (Malestrom)
`-- Wind\ Power\ Basics\ (353)
    |-- Wind\ Power\ Basics\ -\ A\ Green\ Energy\ Guide\ (2010)\ (Malestrom).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
A\ History
`-- American\ Radio\ Networks\ (1226)
    |-- American\ Radio\ Networks\ -\ A\ History.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
A.K.\ Haghi
`-- Chemistry\ and\ chemical\ engineering\ research\ progress\ (1144)
    |-- Chemistry\ and\ chemical\ engineering\ researc\ -\ A.K.\ Haghi.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
AA\ Memebers
`-- Daily\ Reflections_\ A\ Book\ of\ Reflections\ (356)
    |-- Daily\ Reflections_\ A\ Book\ of\ Reflections\ -\ AA\ Memebers.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
ARTHUR\ KRYSTAL
`-- EXCEPT\ WHEN\ I\ WRITE\ (1001)
    |-- EXCEPT\ WHEN\ I\ WRITE\ -\ ARTHUR\ KRYSTAL.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Abbott,\ Martin
`-- Winning\ the\ Math\ Wars\ (437)
    |-- Winning\ the\ Math\ Wars\ -\ Abbott,\ Martin.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Abou-Saleh,\ Mohammed\ T.;\ Katona,\ C.\ L.\ E.;\ Kumar,\ Anand\ (Eds.)
`-- Principles\ and\ Practice\ of\ Geriatric\ Psychiatry\ (732)
    |-- Principles\ and\ Practice\ of\ Geriatric\ Psych\ -\ Abou-Saleh,\ Mohammed\ T.;\ Katona,\ C.\ L.\ E.;.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Abraham,\ William\ J_
`-- Methodism\ (174)
    |-- Methodism\ -\ Abraham,\ William\ J_.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Abram,\ David
`-- Becoming\ Animal_\ An\ Earthly\ Cosmology\ (1424)
    |-- Becoming\ Animal_\ An\ Earthly\ Cosmology\ -\ Abram,\ David.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Abrams,\ Burton
`-- America's\ Ten\ Worst\ Economic\ Blunders\ of\ the\ Past\ 100\ Years\ (1616)
    |-- America's\ Ten\ Worst\ Economic\ Blunders\ of\ t\ -\ Abrams,\ Burton.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Acharya\ S_
`-- The\ Christ\ Conspiracy_\ The\ Greatest\ Story\ Ever\ Sold\ (1247)
    |-- The\ Christ\ Conspiracy_\ The\ Greatest\ Story\ -\ Acharya\ S_.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ackerman,\ Thomas\ (Ed.)
`-- Wind\ Power\ in\ Power\ Systems\ 2nd\ ed\ (304)
    |-- Wind\ Power\ in\ Power\ Systems\ 2nd\ ed\ -\ Ackerman,\ Thomas\ (Ed.).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Adam\ Robinson
`-- Cracking\ the\ SAT\ 2012\ (1436)
    |-- Cracking\ the\ SAT\ 2012\ -\ Adam\ Robinson.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Adams,\ Jeremy,\ Ph.D
`-- Great\ Minds\ of\ the\ Western\ Intellectual\ Tradition,\ Part\ I_\ Classical\ Origins\ [TTC]\ (948)
    |-- Great\ Minds\ of\ the\ Western\ Intellectual\ Tr\ -\ Adams,\ Jeremy,\ Ph.D.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ades,\ Harry;\ Graham,\ Mellisa
`-- The\ Rough\ Guide\ to\ Ecuador\ (516)
    |-- The\ Rough\ Guide\ to\ Ecuador\ -\ Ades,\ Harry;\ Graham,\ Mellisa.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Adler,\ Mortimer\ J_
`-- The\ Paideia\ Program\ (141)
    |-- The\ Paideia\ Program\ -\ Adler,\ Mortimer\ J_.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Adler,\ Philip\ J.;\ Pouwels,\ Randall\ L_
`-- World\ Civilizations\ 6th\ ed_\ (428)
    |-- World\ Civilizations\ 6th\ ed_\ -\ Adler,\ Philip\ J.;\ Pouwels,\ Randall\ L_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Adrian\ Furnham
`-- Body\ Language\ in\ Business_\ Decoding\ the\ Signals\ (1454)
    |-- Body\ Language\ in\ Business_\ Decoding\ the\ Si\ -\ Adrian\ Furnham.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Agnew,\ Jeremy
`-- Medicine\ in\ the\ Old\ West_\ A\ History,\ 1850-1900\ (808)
    |-- Medicine\ in\ the\ Old\ West_\ A\ History,\ 1850-\ -\ Agnew,\ Jeremy.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ahad,\ Md.\ Atiqur\ Rahman
`-- Computer\ Vision\ and\ Action\ Recognition_\ A\ Guide\ for\ Image\ Processing\ and\ Computer\ Vision\ Commun\ (1112)
    |-- Computer\ Vision\ and\ Action\ Recognition_\ A\ -\ Ahad,\ Md.\ Atiqur\ Rahman.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Aitchinson,\ Jean
`-- Language\ Change_\ Progress\ or\ Decay_,\ Third\ edition\ (847)
    |-- Language\ Change_\ Progress\ or\ Decay_,\ Third\ -\ Aitchinson,\ Jean.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Akers,\ Monte
`-- Flames\ After\ Midnight\ (988)
    |-- Flames\ After\ Midnight\ -\ Akers,\ Monte.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Akutsu,\ Tatsuya
`-- Genome\ Informatics\ 2010\ (960)
    |-- Genome\ Informatics\ 2010\ -\ Akutsu,\ Tatsuya.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alain\ Badiou;Kenneth\ Reinhard;
`-- Malebranche\ (235)
    |-- Malebranche\ -\ Alain\ Badiou;Kenneth\ Reinhard;.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alan\ Dean\ Foster
`-- Predators\ I\ Have\ Known\ (1305)
    |-- Predators\ I\ Have\ Known\ -\ Alan\ Dean\ Foster.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alan\ Huffman
`-- Sultana\ (635)
    |-- Sultana\ -\ Alan\ Huffman.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alana\ Stewart
`-- My\ Journey\ With\ Farrah_\ A\ Story\ of\ Life,\ Love,\ and\ Friendship\ (1471)
    |-- My\ Journey\ With\ Farrah_\ A\ Story\ of\ Life,\ L\ -\ Alana\ Stewart.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Aleksandr\ Solzhenitsyn
`-- In\ the\ First\ Circle\ (1482)
    |-- In\ the\ First\ Circle\ -\ Aleksandr\ Solzhenitsyn.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alex\ Rosenberg
`-- The\ Atheist's\ Guide\ to\ Reality_\ Enjoying\ Life\ Without\ Illusions\ (1409)
    |-- The\ Atheist's\ Guide\ to\ Reality_\ Enjoying\ L\ -\ Alex\ Rosenberg.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alex\ Tabarrok
`-- Launching\ the\ Innovation\ Renaissance_\ A\ New\ Path\ to\ Bring\ Smart\ Ideas\ to\ Market\ Fast\ (622)
    |-- Launching\ the\ Innovation\ Renaissance_\ A\ Ne\ -\ Alex\ Tabarrok.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alexander,\ Thomas\ G_
`-- Historical\ Dictionary\ of\ the\ Latter-day\ Saints\ (191)
    |-- Historical\ Dictionary\ of\ the\ Latter-day\ Sa\ -\ Alexander,\ Thomas\ G_.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alfred\ Lansing
`-- Endurance_\ Shackleton's\ Incredible\ Voyage\ (1373)
    |-- Endurance_\ Shackleton's\ Incredible\ Voyage\ -\ Alfred\ Lansing.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alfredo\ Quinones-Hinojosa
`-- Becoming\ Dr.\ Q_\ My\ Journey\ From\ Migrant\ Farm\ Worker\ to\ Brain\ Surgeon\ (1390)
    |-- Becoming\ Dr.\ Q_\ My\ Journey\ From\ Migrant\ Fa\ -\ Alfredo\ Quinones-Hinojosa.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Algeo,\ Matthew
`-- Harry\ Truman's\ Excellent\ Adventure_\ The\ True\ Story\ of\ a\ Great\ American\ Road\ Trip\ (1299)
    |-- Harry\ Truman's\ Excellent\ Adventure_\ The\ Tr\ -\ Algeo,\ Matthew.mobi
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alison\ Harvey
`-- Feminist\ Media\ Studies\ (201)
    |-- Feminist\ Media\ Studies\ -\ Alison\ Harvey.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alison\ Weir
|-- Lancaster\ and\ York_\ The\ Wars\ of\ the\ Roses\ (1311)
|   |-- Lancaster\ and\ York_\ The\ Wars\ of\ the\ Roses\ -\ Alison\ Weir.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- The\ Lady\ in\ the\ Tower_\ The\ Fall\ of\ Anne\ Boleyn\ (1429)
    |-- The\ Lady\ in\ the\ Tower_\ The\ Fall\ of\ Anne\ Bo\ -\ Alison\ Weir.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alistair\ Smith
`-- Images\ of\ War\ [00]\ Carnage_\ The\ German\ Front\ in\ World\ War\ One\ (232)
    |-- Images\ of\ War\ [00]\ Carnage_\ The\ German\ Fro\ -\ Alistair\ Smith.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Allaway,\ Zia;\ Leendertz,\ Lia
`-- How\ to\ Grow\ Practically\ Everything\ (915)
    |-- How\ to\ Grow\ Practically\ Everything\ -\ Allaway,\ Zia;\ Leendertz,\ Lia.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Allen,\ Catherine\ J.;\ Meyerson,\ Julia\ (Illust.)
`-- Foxboy_\ Intimacy\ and\ Aesthetics\ in\ Andean\ Stories\ (974)
    |-- Foxboy_\ Intimacy\ and\ Aesthetics\ in\ Andean\ -\ Allen,\ Catherine\ J.;\ Meyerson,\ Julia\ (Illu.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Allison,\ Peter
|-- Don't\ Look\ Behind\ You!_\ A\ Safari\ Guide's\ Encounters\ With\ Ravenous\ Lions,\ Stampeding\ Elephants,\ (1501)
|   |-- Don't\ Look\ Behind\ You!_\ A\ Safari\ Guide's\ E\ -\ Allison,\ Peter.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- Whatever\ You\ Do,\ Don't\ Run_\ My\ Adventures\ as\ a\ Botswana\ Safari\ Guide\ (1271)
    |-- Whatever\ You\ Do,\ Don't\ Run_\ My\ Adventures\ -\ Allison,\ Peter.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Alvarez,\ Roman
`-- Translation,\ Power,\ Subversion\ (486)
    |-- Translation,\ Power,\ Subversion\ -\ Alvarez,\ Roman.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ambrose,\ James\ E.,Tripeny,\ Patrick_
`-- Building\ Structures\ (1165)
    |-- Building\ Structures\ -\ Ambrose,\ James\ E.,Tripeny,\ Patrick_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
America's\ Test\ Kitchen\ Editors
`-- The\ Complete\ America's\ Test\ Kitchen\ TV\ Show\ Cookbook\ 2001--2019\ (121)
    |-- The\ Complete\ America's\ Test\ Kitchen\ TV\ Sho\ -\ America's\ Test\ Kitchen\ Editors.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
American\ Heritage\ Dictionary\ (Editors)
`-- Word\ Histories\ and\ Mysteries\ _\ from\ Abracadabra\ to\ Zeus\ (431)
    |-- Word\ Histories\ and\ Mysteries\ _\ from\ Abraca\ -\ American\ Heritage\ Dictionary\ (Editors).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ames,\ Mark
`-- Going\ Postal_\ Rage,\ Murder,\ and\ Rebellion_\ From\ Reagan's\ Workplaces\ to\ Clinton's\ Columbine\ and\ (1261)
    |-- Going\ Postal_\ Rage,\ Murder,\ and\ Rebellion_\ -\ Ames,\ Mark.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Amin\ Maalouf
`-- Disordered\ World\ (1326)
    |-- Disordered\ World\ -\ Amin\ Maalouf.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Amy\ Chua
`-- Day\ of\ Empire_\ How\ Hyperpowers\ Rise\ to\ Global\ Dominance--And\ Why\ They\ Fall\ (1508)
    |-- Day\ of\ Empire_\ How\ Hyperpowers\ Rise\ to\ Glo\ -\ Amy\ Chua.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
An\ Illustrated\ History\ (US\ History\ Ebook)
`-- The\ Flags\ of\ the\ Confederacy\ (1590)
    |-- The\ Flags\ of\ the\ Confederacy\ -\ An\ Illustrated\ History\ (US\ History\ Ebook).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anany\ Levitin
`-- 9780132593601.pdf\ (867)
    |-- 9780132593601.pdf\ -\ Anany\ Levitin.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anders,\ George
`-- The\ Rare\ Find_\ Spotting\ Exceptional\ Talent\ Before\ Everyone\ Else\ (1292)
    |-- The\ Rare\ Find_\ Spotting\ Exceptional\ Talent\ -\ Anders,\ George.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anderson,\ Ben
`-- Cities,\ Mountains\ and\ Being\ Modern\ infin-de-siecle\ England\ and\ Germany\ (245)
    |-- Cities,\ Mountains\ and\ Being\ Modern\ infin-d\ -\ Anderson,\ Ben.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anderson,\ Jack
`-- Shooting\ Movies\ Without\ Shooting\ Yourself\ in\ the\ Foot_\ Becoming\ a\ Cinematographer\ (673)
    |-- Shooting\ Movies\ Without\ Shooting\ Yourself\ -\ Anderson,\ Jack.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anderson.\ Theodore
`-- Plasma\ Antennas\ (746)
    |-- Plasma\ Antennas\ -\ Anderson.\ Theodore.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andreas\ Francois\ Vermeulen
|-- Industrial\ Machine\ Learning\ (193)
|   |-- Industrial\ Machine\ Learning\ -\ Andreas\ Francois\ Vermeulen.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- Industrial\ Machine\ Learning_\ Using\ Artificial\ Intelligence\ as\ a\ Transformational\ Disruptor\ (314)
    |-- Industrial\ Machine\ Learning_\ Using\ Artific\ -\ Andreas\ Francois\ Vermeulen.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andrei\ Pop
`-- A\ Forest\ of\ Symbols_\ Art,\ Science,\ and\ Truth\ in\ Long\ Nineteenth\ Century\ (234)
    |-- A\ Forest\ of\ Symbols_\ Art,\ Science,\ and\ Tru\ -\ Andrei\ Pop.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andreotti,\ Vanessa_
`-- Actionable\ Postcolonial\ Theory\ in\ Education\ (1246)
    |-- Actionable\ Postcolonial\ Theory\ in\ Educatio\ -\ Andreotti,\ Vanessa_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andres\ Duany
`-- Suburban\ Nation\ (638)
    |-- Suburban\ Nation\ -\ Andres\ Duany.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andrew\ G.\ McCabe
`-- The\ Threat\ (85)
    |-- The\ Threat\ -\ Andrew\ G.\ McCabe.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andrew\ Knight
`-- The\ Costs\ and\ Benefits\ of\ Animal\ Experiments\ (586)
    |-- The\ Costs\ and\ Benefits\ of\ Animal\ Experimen\ -\ Andrew\ Knight.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andrews,\ Paul
`-- How\ to\ Change\ Your\ Name\ (917)
    |-- How\ to\ Change\ Your\ Name\ -\ Andrews,\ Paul.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Andrews,\ Robert.,Brown,\ Jules_
`-- The\ Rough\ Guide\ to\ Sicily\ (515)
    |-- The\ Rough\ Guide\ to\ Sicily\ -\ Andrews,\ Robert.,Brown,\ Jules_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Angell,\ Ami\ M.,Gunaratna,\ Rohan
`-- Terrorist\ Rehabilitation\ (623)
    |-- Terrorist\ Rehabilitation\ -\ Angell,\ Ami\ M.,Gunaratna,\ Rohan.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Angelou,\ Maya
`-- The\ Heart\ of\ a\ Woman\ (1353)
    |-- The\ Heart\ of\ a\ Woman\ -\ Angelou,\ Maya.mobi
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Angui\ Li
|-- Kitchen\ Pollutants\ Control\ and\ Ventilation\ (251)
|   |-- Kitchen\ Pollutants\ Control\ and\ Ventilation\ -\ Angui\ Li.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- Kitchen\ Pollutants\ Control\ and\ Ventilation_\ A\ Ventilation\ Guide\ to\ Asian\ &\ European\ Kitchen\ Env\ (319)
    |-- Kitchen\ Pollutants\ Control\ and\ Ventilation\ -\ Angui\ Li.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Angus,\ Colin
`-- Lost\ in\ Mongolia_\ Rafting\ the\ World's\ Last\ Unchallenged\ River\ (1372)
    |-- Lost\ in\ Mongolia_\ Rafting\ the\ World's\ Last\ -\ Angus,\ Colin.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anita\ Hill
`-- Speaking\ Truth\ to\ Power\ (1419)
    |-- Speaking\ Truth\ to\ Power\ -\ Anita\ Hill.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anjan\ V.\ Thakor
`-- The\ Economics\ of\ Higher\ Purpose\ (SSRN-id2362454)\ (110)
    |-- The\ Economics\ of\ Higher\ Purpose\ (SSRN-id23\ -\ Anjan\ V.\ Thakor.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anne\ Spry\ Rush
`-- Bonds\ of\ Empire.\ West\ Indians\ and\ Britishness\ from\ Victoria\ to\ Decolonization\ (1170)
    |-- Bonds\ of\ Empire.\ West\ Indians\ and\ Britishn\ -\ Anne\ Spry\ Rush.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Annemarie\ Iverson
`-- In\ Fashion_\ From\ Runway\ to\ Retail,\ Everything\ You\ Need\ to\ Know\ to\ Break\ Into\ the\ Fashion\ Indust\ (1441)
    |-- In\ Fashion_\ From\ Runway\ to\ Retail,\ Everyth\ -\ Annemarie\ Iverson.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Antony\ Beevor
|-- The\ Second\ World\ War\ (278)
|   |-- The\ Second\ World\ War\ -\ Antony\ Beevor.mobi
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- The\ Second\ World\ War\ (279)
    |-- The\ Second\ World\ War\ -\ Antony\ Beevor.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Anyen\ Rinpoche
`-- Stop\ Biting\ the\ Tail\ You're\ Chasing_\ Using\ Buddhist\ Mind\ Training\ to\ Free\ Yourself\ from\ Painful\ (1662)
    |-- Stop\ Biting\ the\ Tail\ You're\ Chasing_\ Using\ -\ Anyen\ Rinpoche.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Applegate,\ David\ L_
`-- The\ traveling\ salesman\ problem_\ a\ computational\ study\ (506)
    |-- The\ traveling\ salesman\ problem_\ a\ computat\ -\ Applegate,\ David\ L_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Appleton,\ Catherine\ M.,Holley,\ Susan.,Wiele,\ Kimberly\ N_
`-- Breast\ Imaging\ Cases\ (1167)
    |-- Breast\ Imaging\ Cases\ -\ Appleton,\ Catherine\ M.,Holley,\ Susan.,Wiel.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Araiza,\ Lauren
`-- To\ March\ for\ Others\ (136)
    |-- To\ March\ for\ Others\ -\ Araiza,\ Lauren.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Arendt,\ Hannah
|-- Antisemitism\ (1556)
|   |-- Antisemitism\ -\ Arendt,\ Hannah.jpg
|   `-- metadata.opf
|-- Antisemitism\ (321)
|   |-- Antisemitism\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Between\ Past\ and\ Future\ (91)
|   |-- Between\ Past\ and\ Future\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Between\ Past\ and\ Future\ (Penguin\ Classics)\ (326)
|   |-- Between\ Past\ and\ Future\ (Penguin\ Classics)\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Between\ Past\ and\ Future_\ Eight\ Exercises\ in\ Political\ Thought\ (337)
|   |-- Between\ Past\ and\ Future_\ Eight\ Exercises\ i\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Crises\ of\ the\ Republic\ (324)
|   |-- Crises\ of\ the\ Republic\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Crises\ of\ the\ Republic\ (344)
|   |-- Crises\ of\ the\ Republic\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Eichmann\ in\ Jerusalem\ (88)
|   |-- Eichmann\ in\ Jerusalem\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Eichmann\ in\ Jerusalem_\ A\ Report\ on\ the\ Banality\ of\ Evil\ (335)
|   |-- Eichmann\ in\ Jerusalem_\ A\ Report\ on\ the\ Ban\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Essays\ in\ Understanding,\ 1930-1954\ (334)
|   |-- Essays\ in\ Understanding,\ 1930-1954\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Essays\ in\ Understanding,\ 1930-1954\ (351)
|   |-- Essays\ in\ Understanding,\ 1930-1954\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Hannah\ Arendt_\ The\ Last\ Interview_\ And\ Other\ Conversations\ (332)
|   |-- Hannah\ Arendt_\ The\ Last\ Interview_\ And\ Oth\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Imperialism\ (330)
|   |-- Imperialism\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Lectures\ on\ Kant's\ Political\ Philosophy\ (342)
|   |-- Lectures\ on\ Kant's\ Political\ Philosophy\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Love\ and\ Saint\ Augustine\ (343)
|   |-- Love\ and\ Saint\ Augustine\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Men\ in\ Dark\ Times\ (327)
|   |-- Men\ in\ Dark\ Times\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Men\ in\ Dark\ Times\ (348)
|   |-- Men\ in\ Dark\ Times\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- On\ Human\ Dignity\ and\ the\ Politics\ of\ Human\ Rights\ (86)
|   |-- On\ Human\ Dignity\ and\ the\ Politics\ of\ Human\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- On\ Revolution\ (340)
|   |-- On\ Revolution\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- On\ Revolution\ (Penguin\ Classics)\ (328)
|   |-- On\ Revolution\ (Penguin\ Classics)\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- On\ Violence\ (325)
|   |-- On\ Violence\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- On\ Violence\ (347)
|   |-- On\ Violence\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Rahel\ Varnhagen_\ The\ Life\ of\ a\ Jewish\ Woman\ (338)
|   |-- Rahel\ Varnhagen_\ The\ Life\ of\ a\ Jewish\ Woma\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Responsibility\ and\ Judgment\ (323)
|   |-- Responsibility\ and\ Judgment\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Responsibility\ and\ Judgment\ (345)
|   |-- Responsibility\ and\ Judgment\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Human\ Condition\ (349)
|   |-- The\ Human\ Condition\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Human\ Condition\ (92)
|   |-- The\ Human\ Condition\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Human\ Condition_\ Second\ Edition\ (333)
|   |-- The\ Human\ Condition_\ Second\ Edition\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Jewish\ Writings\ (331)
|   |-- The\ Jewish\ Writings\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Jewish\ Writings\ (350)
|   |-- The\ Jewish\ Writings\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Life\ of\ the\ Mind\ (329)
|   |-- The\ Life\ of\ the\ Mind\ -\ Arendt,\ Hannah.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Life\ of\ the\ Mind\ (352)
|   |-- The\ Life\ of\ the\ Mind\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Origins\ of\ Totalitarianism\ (New\ Edition)\ (341)
|   |-- The\ Origins\ of\ Totalitarianism\ (New\ Editio\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Portable\ Hannah\ Arendt\ (346)
|   |-- The\ Portable\ Hannah\ Arendt\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Portable\ Hannah\ Arendt\ (93)
|   |-- The\ Portable\ Hannah\ Arendt\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Promise\ of\ Politics\ (339)
|   |-- The\ Promise\ of\ Politics\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- The\ Reluctant\ Modernism\ Of\ Hannah\ Arendt\ (1996)\ -\ Benhabib\ (94)
|   |-- The\ Reluctant\ Modernism\ Of\ Hannah\ Arendt\ (\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
|-- Totalitarian\ Imperialism_\ \ Reflections\ On\ The\ Hungarian\ Revolution\ (90)
|   |-- Totalitarian\ Imperialism_\ \ Reflections\ On\ -\ Arendt,\ Hannah.pdf
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- Totalitarianism\ (322)
    |-- Totalitarianism\ -\ Arendt,\ Hannah.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ariely,\ Dan
|-- Predictably\ Irrational\ (81)
|   |-- Predictably\ Irrational\ -\ Ariely,\ Dan.epub
|   |-- cover.jpg
|   |-- metadata.json
|   `-- metadata.opf
`-- Predictably\ Irrational_\ The\ Hidden\ Forces\ That\ Shape\ Our\ Decisions\ (Harper;\ 2008)\ (82)
    |-- Predictably\ Irrational_\ The\ Hidden\ Forces\ -\ Ariely,\ Dan.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Arrillaga-Andreessen,\ Laura
`-- Giving\ 2.0\ (954)
    |-- Giving\ 2.0\ -\ Arrillaga-Andreessen,\ Laura.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Arthur\ E.\ Rowse
`-- Amglish\ In,\ Like,\ Ten\ Easy\ Lessons_\ A\ Celebration\ of\ the\ New\ World\ Lingo\ (1313)
    |-- Amglish\ In,\ Like,\ Ten\ Easy\ Lessons_\ A\ Cele\ -\ Arthur\ E.\ Rowse.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Arthur,\ John\ W_
`-- Understanding\ Geometric\ Algebra\ for\ Electromagnetic\ Theory\ (471)
    |-- Understanding\ Geometric\ Algebra\ for\ Electr\ -\ Arthur,\ John\ W_.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Asheesh
`-- Part\ I.p65\ (657)
    |-- Part\ I.p65\ -\ Asheesh.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Ashraf\ Mozayani,\ Lionel\ Raymon
`-- Handbook\ of\ Drug\ Interactions_\ A\ Clinical\ and\ Forensic\ Guide,\ 2nd\ Edition\ (940)
    |-- Handbook\ of\ Drug\ Interactions_\ A\ Clinical\ -\ Ashraf\ Mozayani,\ Lionel\ Raymon.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Aslan,\ Reza
`-- Zealot_\ The\ Life\ and\ Times\ of\ Jesus\ of\ Nazareth\ (23)
    |-- Zealot_\ The\ Life\ and\ Times\ of\ Jesus\ of\ Naz\ -\ Aslan,\ Reza.epub
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Anthony\ Mancuso
`-- Form\ Your\ Own\ Limited\ Liability\ Company\ (979)
    |-- Form\ Your\ Own\ Limited\ Liability\ Company\ -\ Attorney\ Anthony\ Mancuso.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Anthony\ Mancuso\ (Nolo)
`-- The\ Corporate\ Records\ Handbook\ (588)
    |-- The\ Corporate\ Records\ Handbook\ -\ Attorney\ Anthony\ Mancuso\ (Nolo).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Fred\ S.\ Steingold
`-- The\ Complete\ Guide\ to\ Buying\ a\ Business\ (590)
    |-- The\ Complete\ Guide\ to\ Buying\ a\ Business\ -\ Attorney\ Fred\ S.\ Steingold.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Ralph\ Warner\ (Nolo)
`-- Everybody's\ Guide\ to\ Small\ Claims\ Court\ (1008)
    |-- Everybody's\ Guide\ to\ Small\ Claims\ Court\ -\ Attorney\ Ralph\ Warner\ (Nolo).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Stephen\ Elias
`-- Bankruptcy\ for\ Small\ Business\ Owners\ (1197)
    |-- Bankruptcy\ for\ Small\ Business\ Owners\ -\ Attorney\ Stephen\ Elias.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorney\ Stephen\ Fishman\ (Nolo)
`-- The\ Public\ Domain\ (521)
    |-- The\ Public\ Domain\ -\ Attorney\ Stephen\ Fishman\ (Nolo).pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Attorneys\ Paul\ Bergman
`-- Represent\ Yourself\ in\ Court\ (699)
    |-- Represent\ Yourself\ in\ Court\ -\ Attorneys\ Paul\ Bergman.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Author
`-- Title\ (1054)
    |-- Title\ -\ Author.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Aveyard,\ Helen.,Wooliams,\ Mary.,Sharp,\ Pam_
`-- A\ Beginner's\ Guide\ to\ Critical\ Thinking\ and\ Writing\ in\ Health\ and\ Social\ Care\ (1257)
    |-- A\ Beginner's\ Guide\ to\ Critical\ Thinking\ an\ -\ Aveyard,\ Helen.,Wooliams,\ Mary.,Sharp,\ Pam.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
Azmeh\ Shahid\ (Editor),\ Kate\ Wilkinson\ (Editor),\ Shai\ Marcu\ (Editor),\ Colin\ M\ Shapiro\ (Editor)
`-- STOP,\ THAT\ and\ One\ Hundred\ Other\ Sleep\ Scales\ (1002)
    |-- STOP,\ THAT\ and\ One\ Hundred\ Other\ Sleep\ Sca\ -\ Azmeh\ Shahid\ (Editor),\ Kate\ Wilkinson\ (Edi.pdf
    |-- cover.jpg
    |-- metadata.json
    `-- metadata.opf
"
htdH4j4m,Customer Events Example,emanuel1109,JavaScript,Sunday 15th of October 2023 10:16:21 AM CDT,"analytics.subscribe(""checkout_completed"", event => {

  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-XXXXXXX');

  var totalDiscount = 0;
  var shippingDiscount = event.data.checkout.discountApplications.find(discount => discount.targetType === ""SHIPPING_LINE"");
    
    if (shippingDiscount) {
        shippingDiscount = ""true"";
        totalDiscount += event.data.checkout.shippingLine.price.amount;
    }
    else {
        shippingDiscount = ""false"";
    }

    event.data.checkout.lineItems.forEach(lineItem => {
      lineItem.discountAllocations.forEach(discountAllocation => {
        totalDiscount += discountAllocation.amount.amount;
      });
    });

    var items = event.data.checkout.lineItems.map(item => ({
      item_name: item.variant.product.title,
      item_id: item.variant.product.id,
      currency: item.variant.price.currencyCode,
      price: item.variant.price.amount - item.discountAllocations[0].amount.amount,
      price_before_discount : item.variant.price.amount,
      item_category: item.variant.product.type,
      item_category5: item.variant.title,
      item_variant: item.variant.title,
      quantity: item.quantity
    }));

    async function hashString(input) {
      const encoder = new TextEncoder();
      const data = encoder.encode(input);
      const hash = await crypto.subtle.digest('SHA-256', data);
      return Array.from(new Uint8Array(hash)).map(byte => byte.toString(16).padStart(2, '0')).join('');
    }

    (async () => {
    const inputString = event.data.checkout.email;
    const hashedEmail = await hashString(inputString);
    dataLayer.push({
      event: 'purchase',
      email: event.data.checkout.email,
      hashed_email: hashedEmail,
      first_name: event.data.checkout.billingAddress.firstName,
      last_name: event.data.checkout.billingAddress.lastName,
      address: event.data.checkout.billingAddress.address1,
      city: event.data.checkout.billingAddress.city,
      state: event.data.checkout.billingAddress.provinceCode,
      country: event.data.checkout.billingAddress.countryCode,
      zipcode: event.data.checkout.billingAddress.zip,
      phone: event.data.checkout.billingAddress.phone,
      ecommerce: {
          currency: event.data.checkout.currencyCode,
          value: event.data.checkout.totalPrice.amount,
          tax: event.data.checkout.totalTax.amount,
          shipping: event.data.checkout.shippingLine.price.amount,
          affiliation: 'example',
          transaction_id: event.data.checkout.order.id,
          coupon: event.data.checkout.discountApplications[0].title,
          shipping_discount: shippingDiscount,
          total_discount: totalDiscount,
          items: items
      }
    });

  console.log(dataLayer);
})();
    

});
"
1Qq7HHrH,panoptica-user-specs,barryqy,JSON,Sunday 15th of October 2023 10:16:06 AM CDT,"{""components"":{""schemas"":{""_links"":{""properties"":{""addresses"":{""$ref"":""#/components/schemas/addresses""},""cards"":{""$ref"":""#/components/schemas/addresses""},""customer"":{""$ref"":""#/components/schemas/addresses""},""self"":{""$ref"":""#/components/schemas/addresses""}},""type"":""object""},""addresses"":{""properties"":{""href"":{""type"":""string""}},""type"":""object""},""email_firstName_lastName_password_username"":{""properties"":{""email"":{""format"":""email"",""type"":""string""},""firstName"":{""type"":""string""},""lastName"":{""type"":""string""},""password"":{""type"":""string""},""username"":{""type"":""string""}},""type"":""object""},""id"":{""properties"":{""id"":{""type"":""string""}},""type"":""object""},""user"":{""properties"":{""_links"":{""$ref"":""#/components/schemas/_links""},""firstName"":{""type"":""string""},""id"":{""type"":""string""},""lastName"":{""type"":""string""},""username"":{""type"":""string""}},""type"":""object""},""user_0"":{""properties"":{""user"":{""$ref"":""#/components/schemas/user""}},""type"":""object""}}},""info"":{""contact"":{""email"":""apiteam@swagger.io""},""description"":""This is a generated Open API Spec"",""license"":{""name"":""Apache 2.0"",""url"":""https://www.apache.org/licenses/LICENSE-2.0.html""},""termsOfService"":""https://swagger.io/terms/"",""title"":""Swagger"",""version"":""1.0.0""},""openapi"":""3.0.3"",""paths"":{""/login"":{""get"":{""responses"":{""200"":{""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/user_0""}}},""description"":""response""},""default"":{""description"":""default""}},""security"":[{""BasicAuth"":[]}]}},""/register"":{""post"":{""requestBody"":{""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/email_firstName_lastName_password_username""}}}},""responses"":{""200"":{""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/id""}}},""description"":""response""},""default"":{""description"":""default""}}}}},""servers"":[{""url"":""http://user.sock-shop:80""}]}
"
jNJ4mkts,Discord Level V14 V2,jensie1996,JavaScript,Sunday 15th of October 2023 10:11:07 AM CDT,"// Als level 5 dan rang geven.
if (levelFile[idUser].level == 5) {
	var role = message.guild.roles.cache.find(r => r.name === ""YT"");

	var member = message.member;
	member.roles.add(role);

	var embed = new EmbedBuilder()
		.setDescription(""***Nieuwe rang & level hoger***"")
		.setColor(""#00ff00"")
		.addFields(
			{ name: ""Nieuwe rang: "", value: ""YT"" },
			{ name: ""Nieuw level: "", value: levelFile[idUser].level.toString() }
		);

	await message.reply({ embeds: [embed] });
} else { // Berichtje geven.
	var embed = new EmbedBuilder()
		.setDescription(""***level hoger***"")
		.setColor(""#00ff00"")
		.addFields(
			{ name: ""Nieuw level: "", value: levelFile[idUser].level.toString() }
		);

	await message.reply({ embeds: [embed] });
}
"
qkQMtXHS,Untitled,SLENSER,Java,Sunday 15th of October 2023 09:48:25 AM CDT,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        System.out.println(""1--------------------"");
        System.out.println(replaceVowels(""apple""));
        System.out.println(replaceVowels(""Even if you did this task not by yourself, you have to understand every single line of code.""));
        System.out.println(""2--------------------"");
        System.out.println(stringTransform(""hello""));
        System.out.println(stringTransform(""bookkeeper""));
        System.out.println(""3--------------------"");
        System.out.println(doesBlockFit(1,3,5,4,5));
        System.out.println(doesBlockFit(1,8,1,1,1));
        System.out.println(doesBlockFit(1,2,2,1,1));
        System.out.println(""4--------------------"");
        System.out.println(numCheck(243));
        System.out.println(numCheck(52));
        System.out.println(""5--------------------"");
        System.out.println(countRoots(new int[] {1, -3, 2}));
        System.out.println(countRoots(new int[] {2, 5, 2}));
        System.out.println(countRoots(new int[] {1, -6, 9}));
        System.out.println(""6--------------------"");
        System.out.println(Arrays.toString(salesData(new String[][] {
                {""Apple"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Banana"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Orange"", ""Shop1"", ""Shop3"", ""Shop4""},
                {""Pear"", ""Shop2"", ""Shop4""}
        })));    System.out.println(Arrays.toString(salesData(new String[][] {
                {""Fridge"", ""Shop2"", ""Shop3""},
                {""Microwave"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""},
                {""Laptop"", ""Shop3"", ""Shop4""},
                {""Phone"", ""Shop1"", ""Shop2"", ""Shop3"", ""Shop4""}
        })));
        System.out.println(""7--------------------"");
        System.out.println(validSplit(""apple eagle egg goat""));
        System.out.println(validSplit(""ab aa aa ac""));
        System.out.println(""8--------------------"");
        System.out.println(waveForm(new int[] {3, 1, 4, 2, 7, 5}));
        System.out.println(waveForm(new int[] {1, 2, 3, 4, 5}));
        System.out.println(waveForm(new int[] {1, 2, -6, 10, 3}));
        System.out.println(""9--------------------"");
        System.out.println(commonVowel(""Hello world""));
        System.out.println(commonVowel(""Actions speak louder than words.""));
        System.out.println(""10--------------------"");
        System.out.println(Arrays.deepToString(dataScience(new int[][]{
                {1, 2, 3, 4, 5},
                {6, 7, 8, 9, 10},
                {5, 5, 5, 5, 5},
                {7, 4, 3, 14, 2},
                {1, 0, 11, 10, 1}})));
        System.out.println(""---------------------"");
    }

    public static String replaceVowels(String str) {
        return str.replaceAll(""[aeiouyAEIOUY]"", ""*"");
    }
    public static String stringTransform(String str) {
        str = str.replaceAll(""([a-zA-Z])\\1"", ""*$1"");
        char[] myStr = str.toCharArray();
        for (int i = 0; i < str.length()-1; i++) {
            if (myStr[i] == '*') {
                myStr[i+1] = Character.toUpperCase(myStr[i+1]);
            }
        }
        str = String.valueOf(myStr);
        return str.replaceAll(""[*]"", ""Double"");

    }

    public static boolean doesBlockFit(int a, int b, int c, int w, int h) {

        int[] parallelepipedDimensions = new int[] {a,b,c};
        int[] holeDimensions = new int[] {w,h};
        Arrays.sort(parallelepipedDimensions);
        Arrays.sort(holeDimensions);

        for (int i = 0; i < holeDimensions.length; i++) {
            if (parallelepipedDimensions[i] >= holeDimensions[i]) {
                return false;
            }
        }

        return true;

    }

    public static boolean numCheck(int n) {
        int s = 0;
        int isOdd = n % 2;

        while (n > 0) {
            s += n % 10;
            n /= 10;
        }
        return s % 2 == isOdd;
    }

    public static int countRoots(int[] coefficients) {
        int a = coefficients[0];
        int b = coefficients[1];
        int c = coefficients[2];
        int d = b*b-4*a*c;

        if (d < 0)
            return 0;

        double x1 = (-b+Math.sqrt(d))/(2*a);
        double x2 = (-b-Math.sqrt(d))/(2*a);



        if (d == 0)
            return (Math.floor(x1) == x1 ? 1 : 0);

        return (Math.floor(x1) == x1 ? 1 : 0) + (Math.floor(x2) == x2 ? 1 : 0);
    }

    public static String[] salesData(String[][] sales) {
        String[] answer = new String[100];
        Set<String> stores = new HashSet<>();
        int[] n = new int[100];
        int answerIndex = 0;

        for (int i = 0; i < sales.length; i++) {
            for (int j = 1; j < sales[i].length; j++) {
                stores.add(sales[i][j]);
                n[i] += 1;
            }
        }
        for (int i = 0; i < sales.length; i++) {
            if (n[i] == stores.size()) {
                answer[answerIndex++] = sales[i][0];
            }
        }
        return Arrays.copyOf(answer, answerIndex);
    }

    public static boolean validSplit(String sentence) {
        String[] words = sentence.split("" "");

        if (words.length <= 1) {
            return false;
        }

        boolean[] used = new boolean[words.length];

        return isValidSplit(words, used, 0);
    }

    private static boolean isValidSplit(String[] words, boolean[] used, int currentIndex) {
        if (currentIndex == words.length - 1) {
            return true;
        }

        for (int i = 0; i < words.length; i++) {
            if (!used[i] && (currentIndex == 0
                    || words[currentIndex - 1].charAt(words[currentIndex - 1].length() - 1) == words[i].charAt(0))) {
                used[i] = true;

                if (isValidSplit(words, used, currentIndex + 1)) {
                    return true;
                }

                used[i] = false;
            }
        }

        return false;
    }

    public static boolean waveForm(int[] numbers) {
        for (int i = 2; i < numbers.length-2; i++) {
            if ((numbers[i-2] <= numbers[i-1]) && (numbers[i-1] <= numbers[i])) {
                return false;
            }
            if ((numbers[i-2] >= numbers[i-1]) && (numbers[i-1] >= numbers[i])) {
                return false;
            }
        }
        return true;
    }

    public static char commonVowel(String str) {
        str = str.toLowerCase();
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        map.put('a',0);
        map.put('e',0);
        map.put('i',0);
        map.put('o',0);
        map.put('u',0);
        map.put('y',0);

        char[] charArray = str.toCharArray();
        for (char c : charArray) {
            switch (c) {
                case 'a' -> map.put('a', map.get('a') + 1);
                case 'e' -> map.put('e', map.get('e') + 1);
                case 'i' -> map.put('i', map.get('i') + 1);
                case 'o' -> map.put('o', map.get('o') + 1);
                case 'u' -> map.put('u', map.get('u') + 1);
                case 'y' -> map.put('y', map.get('y') + 1);
                default -> {
                }
            }
        }
        return Collections.max(map.entrySet(), Map.Entry.comparingByValue()).getKey();

    }

    public static int[][] dataScience(int [][] data) {
        int n = data.length;
        for (int i = 0; i < n; i++) {
            int average = 0;
            for (int[] datum : data) {
                average += datum[i];
            }
            average /= 5;
            data[i][i] = average;
        }
        return data;
    }

}"
96LxrxW0,Layout,MagmaLP,Lua,Sunday 15th of October 2023 09:45:50 AM CDT,"function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    term.setBackgroundColor(calc_color(groundb))
    term.setCursorPos(gap,line)
    term.setTextColor(calc_color(color))
    text = term.write(text)
end 

term.setBackgroundColor(colors.gray)
term.setTextColor(colors.black)
term.setCursorPos(1,1)
term.clear()
                                                                  --"")
msg(01,01,01,08,""   Solar Counting System                           "") msg(51,01,01,08,""X"")
msg(01,02,01,16,""                                                   "")
for i = 3,16 do
	msg(30,i,01,16,"" "")
end
msg(02,03,01,08,""          Settings          "") msg(32,03,01,08,""    On Stock    "") "
Twqmxuf2,Untitled,mrtito,JSON,Sunday 15th of October 2023 09:34:23 AM CDT,"{ ""keys"":[ { ""kty"":""oct"", ""k"":""5fdZ4lbHaMY0neucxEbKvg"", ""kid"":""G2RRhc1i2IH6kf2SFwaQ6g"" } ], ""type"":""temporary"" }"
nALmrivd,WooCommerce:  Añade campos personalizados a la pestaña «Información adicional» del producto,YordanSoares,PHP,Sunday 15th of October 2023 09:23:21 AM CDT,"<?php
/**
 * WooCommerce:
 * Añade campos personalizados a la pestaña «Información adicional» del producto
 */
add_action( 'woocommerce_product_additional_information', 'informacion_adicional_del_producto', 1, 10 );
function informacion_adicional_del_producto( $product ) {
    $campos_personalizados = array();
    // Puedes llamar campos personalizados aquí y añadirlos a la pestaña «Información adicional» del producto
    // Por ejemplo:
    if ( $composicion = $product->get_meta( 'composicion' ) ) {
        $campos_personalizados[] = array(
            'etiqueta' => 'Composición',
            'valor' => $composicion,
        ); 
    }
    if( $temporada = $product->get_meta( 'temporada' ) ) {
        $campos_personalizados[] = array( 
            'etiqueta' => 'Temporada',
            'valor' => $temporada,
        ); 
    }

    if ( $campos_personalizados ) {
        ?>
        <table>
        <tbody>
        <?php foreach( $campos_personalizados as $campo ) : ?>
            <tr>
                <th><?php printf( '%s: ', $campo['etiqueta'] ) ?></th>
                <td><?php echo $campo['valor'] ?></td>
            </tr>
        <?php endforeach; ?>
        </tbody>
    </table>
    <?php
    }
}"
kHPa46AM,js-homework,aarifhsn,JavaScript,Sunday 15th of October 2023 09:15:50 AM CDT,"//1. Declare a variable called name and assign your name to it.

var name = ""Md Arif Hassan"";

document.write(name);


// 2. Create a variable age and assign your age to it.

var age = 33;

document.write(age);

// 3. Calculate the sum of two numbers, num1 and num2.

var num1 = 34;
var num2 = 23;

let sum = num1+ num2;
document.write(sum);


// 4. Calculate the product of two numbers, num1 and num2.

var num1 = 22;
var num2 = 98;

let mult = num1 * num2;
document.write(mult);

// 5.0 Check if a number is even or odd. 

var number = 50;
if(number%2 == 0) {
    document.write(""Even"")
} else {
    document.write(""Odd"")
}

// 5.1 Create a variable isEven and assign true if the number is even, and false if it's odd.

var isEven = x;
if(x%2 ==0 ) {
    document.write(""True"")
} else {
    document.write(""False"")
}


// 6. Create an array favoriteColors containing three favorite colors of yours.

var favoriteColors = [""Blue"", ""White"", ""Green""];

// 7. Access and log the 2nd favorite color from the favoriteColors array.

var secondFav = favoriteColors[1];
document.write(secondFav);

// 8. Add a new color, ""purple,"" to the favoriteColors array.

favoriteColors.push(""SkyBlue"");
document.write(favoriteColors);

// 9. Check if a given number is greater than 10. If it is, log ""Greater than 10,"" otherwise, log ""Less than or equal to 10.""

var given_numb = 5;
if(given_numb >10 ) {
    console.log(""Greater than 10"")
} else {
    console.log(""Less than or equal to 10."")
}

// 10. Create a variable isRaining and assign true if it's raining, and false if it's not.

var isRaining;

if(isRaining) {
    document.write(""True"")
} else {
    document.write(""False"")
}

// 11. Create a variable temperature and assign a value. Then, check if it's hot (greater than 30),
//warm (between 20 and 30), or cold (less than 20).

var temperature = 23;

if(temperature >30) {
    document.write(""It's Hot"")
} else if(temperature>=20 && temperature<=30){
    document.write(""Warm"")
} else {
    document.write(""cold"")
}

// 12. Calculate the area of a rectangle with a given width and height.
 let width = 30;
 let height = 20;

 let rectangle = width * height;

 document.write(rectangle);

// 13. Create an array favoriteFruits containing five favorite fruits of yours.

var favoriteFruits = [""Mango"", ""Guava"", ""Orange"", ""Pineaple"", ""Banana""];
document.write(favoriteFruits);

// 14. Access and log the 3rd favorite fruit from the favoriteFruits array.

var thirdFruit = favoriteFruits[2];
document.write(thirdFruit);

// 15. Add a new favorite fruit, ""grape,"" to the favoriteFruits array.

favoriteFruits.push([""Grape""]);
document.write(favoriteFruits);

// 16. Check if a student's score is greater than or equal to 70. If it is, log ""Pass,"" otherwise, log ""Fail.""

let score = 50;

if (score>=70) {
    console.log(""Pass"");
} else {
    console.log(""Fail"")
}

// 17. Create an array of three favorite movies.

var favoriteMovies = [""Aynabaji"", ""Ratshasan"", ""Thriller""];
document.write(favoriteMovies);

// 18. Access and log the 2nd favorite movie from the favoriteMovies array.
var secondFavMov = favoriteMovies[1];
document.write(secondFavMov);"
emdBk6tU,$ cat /etc/nginx/sites-enabled/books.domain2.com,iconoclasthero,Bash,Sunday 15th of October 2023 09:09:26 AM CDT,"$ cat /etc/nginx/sites-enabled/books.domain2.com 
server {
        listen 80;
#        listen [::]:80;
#        server_name abs.domain2.com;
        server_name books.domain2.com;
        return 301 https://$host$request_uri;
}
server {
        listen 443 ssl;
        listen [::]:443 ssl;
#        ssl_certificate /etc/letsencrypt/live/domain2.com/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/domain2.com/privkey.pem;
	ssl_certificate /etc/letsencrypt/live/domain1.com-0001/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/domain1.com-0001/privkey.pem;

        error_log /var/log/nginx/abs-error.log;
        access_log /var/log/nginx/abs-access.log;

        server_name books.domain2.com;
        client_max_body_size 10000M;

        location / {
                proxy_pass http://127.0.0.1:13378;
                proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_set_header  Host              $host;
                proxy_set_header Upgrade            $http_upgrade;
                proxy_set_header Connection         ""upgrade"";
                proxy_http_version                  1.1;
                proxy_redirect                      http:// https://;
        }
}
"
qvArsNg6,cat /etc/nginx/sites-enabled/books.domain1.com,iconoclasthero,Bash,Sunday 15th of October 2023 09:07:53 AM CDT,"$ cat /etc/nginx/sites-enabled/books.domain1.com 
server {
        listen 80;
#        listen [::]:80;
#        server_name abs.domain1.com;
        server_name books.domain1.com;
        return 301 https://$host$request_uri;
}
server {
        listen 443 ssl;
        listen [::]:443 ssl;
#        ssl_certificate /etc/letsencrypt/live/domain1.com/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/domain1.com/privkey.pem;
	ssl_certificate /etc/letsencrypt/live/domain1.com-0001/fullchain.pem
	ssl_certificate_key /etc/letsencrypt/live/domain1.com-0001/privkey.pem

        error_log /var/log/nginx/abs-error.log;
        access_log /var/log/nginx/abs-access.log;

        server_name books.domain1.com;
        client_max_body_size 10000M;

        location / {
                proxy_pass http://127.0.0.1:13378;
                proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_set_header  Host              $host;
                proxy_set_header Upgrade            $http_upgrade;
                proxy_set_header Connection         ""upgrade"";
                proxy_http_version                  1.1;
                proxy_redirect                      http:// https://;
        }
}

"
Lx38diTS,stack and queue with min,salexame,C++,Sunday 15th of October 2023 08:47:17 AM CDT,"#include <iostream>
#include <stack>

const int kInf = 2e9;

class MinStack {
 public:
  void Push(int value);

  int Pop();

  bool Empty() { return values_.empty(); }

  int Top();

  int Min();

  void Clear();

  size_t Size() { return values_.size(); }

 private:
  std::stack<int> values_;
  std::stack<int> min_;
};

void MinStack::Push(int value) {
  values_.push(value);
  if (min_.empty() || min_.top() > value) {
    min_.push(value);
  } else {
    min_.push(min_.top());
  }
}

int MinStack::Pop() {
  if (values_.empty()) {
    return kInf;
  }
  int value = values_.top();
  values_.pop();
  min_.pop();
  return value;
}

int MinStack::Top() {
  if (values_.empty()) {
    return kInf;
  }
  return values_.top();
}

int MinStack::Min() {
  int value = kInf;
  if (!min_.empty()) {
    value = min_.top();
  }
  return value;
}

void MinStack::Clear() {
  while (!values_.empty()) {
    values_.pop();
    min_.pop();
  }
}

class MinQueue {
 public:
  void Push(int value) { in_.Push(value); }

  int Pop();

  int GetMin() { return std::min(in_.Min(), out_.Min()); }

  int Front();

  void Clear();

  size_t Size() { return out_.Size() + in_.Size(); }

 private:
  void Replace();

  MinStack in_;
  MinStack out_;
};

int MinQueue::Pop() {
  if (out_.Empty()) {
    Replace();
  }
  if (out_.Empty()) {
    return kInf;
  }
  int value = out_.Top();
  out_.Pop();
  return value;
}

int MinQueue::Front() {
  if (out_.Empty()) {
    Replace();
  }
  if (out_.Empty()) {
    return kInf;
  }
  return out_.Top();
}

void MinQueue::Clear() {
  out_.Clear();
  in_.Clear();
}

void MinQueue::Replace() {
  while (!in_.Empty()) {
    int value = in_.Top();
    in_.Pop();
    out_.Push(value);
  }
}

void PrintValue(int value) {
  if (value == kInf) {
    std::cout << ""error\n"";
  } else {
    std::cout << value << '\n';
  }
}

void Query(MinQueue& queue) {
  std::string type;
  std::cin >> type;
  if (type == ""enqueue"") {
    int value;
    std::cin >> value;
    std::cout << ""ok\n"";
    queue.Push(value);
  } else if (type == ""dequeue"") {
    PrintValue(queue.Pop());
  } else if (type == ""front"") {
    PrintValue(queue.Front());
  } else if (type == ""size"") {
    std::cout << queue.Size() << '\n';
  } else if (type == ""clear"") {
    queue.Clear();
    std::cout << ""ok\n"";
  } else {
    PrintValue(queue.GetMin());
  }
}

signed main() {
  int query;
  std::cin >> query;
  MinQueue queue;
  while (query-- > 0) {
    Query(queue);
  }
}
"
8vJiz68C,News Oct15 23,Newscaster_Ned,Email,Sunday 15th of October 2023 08:41:55 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎h‎o‎w‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎a‎t‎ ‎e‎c‎l‎i‎p‎s‎e‎,‎ ‎a‎m‎i‎r‎i‎t‎e‎?‎

3‎ ‎W‎o‎u‎n‎d‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎t‎s‎ ‎F‎i‎r‎e‎d‎ ‎F‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎A‎r‎g‎u‎m‎e‎n‎t‎ ‎a‎t‎ ‎T‎X‎ ‎S‎t‎a‎t‎e‎ ‎F‎a‎i‎r‎
S‎o‎u‎t‎h‎ ‎A‎f‎r‎i‎c‎a‎'‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎C‎y‎r‎i‎l‎ ‎R‎a‎m‎a‎p‎h‎o‎s‎a‎ ‎B‎a‎c‎k‎s‎ ‎H‎a‎m‎a‎s‎:‎ ‎'‎F‎r‎e‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎'‎
N‎e‎t‎a‎n‎y‎a‎h‎u‎:‎ ‎'‎H‎a‎m‎a‎s‎ ‎T‎h‎o‎u‎g‎h‎t‎ ‎I‎t‎ ‎W‎o‎u‎l‎d‎ ‎B‎r‎e‎a‎k‎ ‎U‎s‎,‎ ‎B‎u‎t‎ ‎W‎e‎ ‎W‎i‎l‎l‎ ‎B‎r‎e‎a‎k‎ ‎H‎a‎m‎a‎s‎'‎
S‎i‎x‎ ‎K‎i‎l‎l‎e‎d‎ ‎a‎s‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎F‎o‎r‎c‎e‎s‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎B‎o‎m‎b‎a‎r‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎
F‎r‎a‎n‎ ‎D‎r‎e‎s‎c‎h‎e‎r‎:‎ ‎A‎c‎t‎o‎r‎s‎ ‎S‎t‎r‎i‎k‎e‎'‎s‎ ‎R‎e‎s‎o‎l‎v‎e‎ ‎I‎s‎ ‎S‎t‎r‎o‎n‎g‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎u‎d‎i‎o‎s‎ ‎W‎a‎l‎k‎e‎d‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
S‎h‎o‎c‎k‎e‎r‎ ‎i‎n‎ ‎L‎o‎u‎i‎s‎i‎a‎n‎a‎

R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎J‎e‎f‎f‎ ‎L‎a‎n‎d‎r‎y‎ ‎S‎m‎o‎k‎e‎s‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎t‎o‎ ‎F‎l‎i‎p‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎’‎s‎ ‎M‎a‎n‎s‎i‎o‎n‎ ‎W‎i‎t‎h‎o‎u‎t‎ ‎R‎u‎n‎o‎f‎f‎
A‎t‎t‎o‎r‎n‎e‎y‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎J‎e‎f‎f‎ ‎L‎a‎n‎d‎r‎y‎ ‎t‎a‎l‎k‎s‎ ‎a‎b‎o‎u‎t‎ ‎h‎e‎a‎l‎t‎h‎ ‎c‎a‎r‎e‎ ‎l‎e‎g‎i‎s‎l‎a‎t‎i‎o‎n‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎b‎y‎ ‎H‎o‎u‎s‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎T‎a‎y‎l‎o‎r‎ ‎B‎a‎r‎r‎a‎s‎,‎ ‎R‎-‎N‎e‎w‎ ‎I‎b‎e‎r‎i‎a‎,‎ ‎l‎e‎f‎t‎,‎ ‎a‎n‎d‎ ‎s‎p‎o‎n‎s‎o‎r‎e‎d‎ ‎b‎y‎ ‎S‎e‎n‎.‎ ‎F‎r‎e‎d‎ ‎M‎i‎l‎l‎s‎,‎ ‎R‎-‎P‎a‎r‎k‎s‎,‎ ‎o‎n‎ ‎M‎o‎n‎d‎a‎y‎,‎ ‎A‎p‎r‎i‎l‎ ‎1‎,‎ ‎2‎0‎1‎9‎,‎ ‎i‎n‎ ‎B‎a‎t‎o‎n‎ ‎R‎o‎u‎g‎e‎,‎ ‎L‎a‎.‎ ‎(‎A‎P‎ ‎P‎h‎o‎t‎o‎/‎M‎e‎l‎i‎n‎d‎a‎ ‎D‎e‎s‎l‎a‎t‎t‎e‎)‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎J‎e‎f‎f‎ ‎L‎a‎n‎d‎r‎y‎ ‎w‎o‎n‎ ‎a‎ ‎l‎a‎n‎d‎s‎l‎i‎d‎e‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎t‎o‎ ‎f‎l‎i‎p‎ ‎t‎h‎e‎ ‎L‎o‎u‎i‎s‎i‎a‎n‎a‎ ‎g‎o‎v‎e‎r‎n‎o‎r‎’‎s‎ ‎m‎a‎n‎s‎i‎o‎n‎ ‎r‎e‎d‎ ‎i‎n‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎r‎e‎e‎ ‎m‎a‎i‎n‎ ‎g‎u‎b‎e‎r‎n‎a‎t‎o‎r‎i‎a‎l‎ ‎e‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎t‎h‎i‎s‎ ‎y‎e‎a‎r‎,‎ ‎s‎h‎o‎c‎k‎i‎n‎g‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎o‎b‎s‎e‎r‎v‎e‎r‎s‎ ‎w‎i‎t‎h‎ ‎a‎ ‎v‎i‎c‎t‎o‎r‎y‎ ‎t‎h‎a‎t‎ ‎s‎a‎v‎e‎s‎ ‎h‎i‎m‎ ‎t‎h‎e‎ ‎t‎r‎o‎u‎b‎l‎e‎ ‎o‎f‎ ‎h‎a‎v‎i‎n‎g‎ ‎t‎o‎ ‎f‎a‎c‎e‎ ‎a‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎i‎n‎ ‎a‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎r‎u‎n‎o‎f‎f‎.‎

…‎M‎a‎r‎l‎o‎w‎:‎ ‎’‎U‎n‎d‎e‎n‎i‎a‎b‎l‎e‎ ‎M‎o‎m‎e‎n‎t‎u‎m‎’‎…‎
3‎2‎6‎
A‎l‎e‎x‎ ‎M‎a‎r‎l‎o‎w‎:‎ ‎B‎i‎d‎e‎n‎ ‎C‎o‎u‎l‎d‎ ‎‘‎W‎i‎n‎ ‎A‎g‎a‎i‎n‎’‎ ‎i‎f‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎D‎o‎n‎’‎t‎ ‎S‎t‎a‎r‎t‎ ‎T‎a‎k‎i‎n‎g‎ ‎T‎h‎i‎s‎ ‎G‎u‎y‎ ‎S‎e‎r‎i‎o‎u‎s‎l‎y‎’‎
…‎A‎l‎e‎x‎ ‎W‎a‎r‎n‎s‎ ‎B‎i‎d‎e‎n‎ ‎C‎o‎u‎l‎d‎ ‎‘‎W‎i‎n‎ ‎A‎g‎a‎i‎n‎’‎ ‎i‎f‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎D‎o‎n‎’‎t‎ ‎S‎t‎a‎r‎t‎ ‎T‎a‎k‎i‎n‎g‎ ‎T‎h‎i‎s‎ ‎G‎u‎y‎ ‎S‎e‎r‎i‎o‎u‎s‎l‎y‎’‎…‎
A‎L‎A‎N‎A‎ ‎M‎A‎S‎T‎R‎A‎N‎G‎E‎L‎O‎
1‎,‎2‎2‎4‎
A‎l‎e‎x‎ ‎M‎a‎r‎l‎o‎w‎ ‎o‎n‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎B‎i‎d‎e‎n‎ ‎L‎e‎f‎t‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎f‎o‎r‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎i‎n‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎
…‎o‎n‎ ‎‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎J‎o‎e‎ ‎L‎e‎f‎t‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎f‎o‎r‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎i‎n‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎
P‎A‎M‎ ‎K‎E‎Y‎
3‎8‎1‎
S‎O‎C‎I‎A‎L‎
M‎O‎S‎T‎ ‎P‎O‎P‎U‎L‎A‎R‎
J‎o‎h‎n‎ ‎C‎u‎s‎a‎c‎k‎ ‎W‎h‎i‎t‎e‎w‎a‎s‎h‎e‎s‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎a‎s‎ ‎S‎e‎l‎f‎-‎D‎e‎f‎e‎n‎s‎e‎
J‎o‎h‎n‎ ‎C‎u‎s‎a‎c‎k‎ ‎W‎h‎i‎t‎e‎w‎a‎s‎h‎e‎s‎ ‎H‎a‎m‎a‎s‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎ ‎a‎s‎ ‎S‎e‎l‎f‎-‎D‎e‎f‎e‎n‎s‎e‎
7‎8‎
I‎s‎r‎a‎e‎l‎:‎ ‎W‎e‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎N‎e‎g‎o‎t‎i‎a‎t‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎,‎ ‎W‎e‎ ‎A‎r‎e‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎
I‎s‎r‎a‎e‎l‎:‎ ‎W‎e‎ ‎A‎r‎e‎ ‎N‎o‎t‎ ‎N‎e‎g‎o‎t‎i‎a‎t‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎,‎ ‎W‎e‎ ‎A‎r‎e‎ ‎E‎l‎i‎m‎i‎n‎a‎t‎i‎n‎g‎ ‎H‎a‎m‎a‎s‎
8‎4‎1‎
E‎m‎m‎e‎r‎ ‎R‎u‎l‎e‎s‎ ‎O‎u‎t‎ ‎S‎p‎e‎a‎k‎e‎r‎s‎h‎i‎p‎ ‎B‎i‎d‎ ‎a‎s‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎C‎o‎n‎s‎o‎l‎i‎d‎a‎t‎e‎ ‎B‎e‎h‎i‎n‎d‎ ‎J‎o‎r‎d‎a‎n‎
E‎m‎m‎e‎r‎ ‎R‎u‎l‎e‎s‎ ‎O‎u‎t‎ ‎S‎p‎e‎a‎k‎e‎r‎s‎h‎i‎p‎ ‎B‎i‎d‎ ‎a‎s‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎C‎o‎n‎s‎o‎l‎i‎d‎a‎t‎e‎ ‎B‎e‎h‎i‎n‎d‎ ‎J‎o‎r‎d‎a‎n‎
3‎,‎7‎0‎4‎
U‎.‎S‎.‎S‎.‎ ‎E‎i‎s‎e‎n‎h‎o‎w‎e‎r‎ ‎(‎U‎.‎S‎.‎ ‎N‎a‎v‎y‎/‎L‎i‎a‎i‎s‎o‎n‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎)‎
U‎.‎S‎.‎ ‎S‎e‎n‎d‎s‎ ‎S‎e‎c‎o‎n‎d‎ ‎A‎i‎r‎c‎r‎a‎f‎t‎ ‎C‎a‎r‎r‎i‎e‎r‎ ‎t‎o‎ ‎E‎a‎s‎t‎e‎r‎n‎ ‎M‎e‎d‎i‎t‎e‎r‎r‎a‎n‎e‎a‎n‎ ‎t‎o‎ ‎D‎e‎t‎e‎r‎ ‎I‎r‎a‎n‎
5‎8‎6‎
T‎e‎a‎c‎h‎e‎r‎ ‎B‎e‎a‎t‎e‎n‎ ‎b‎y‎ ‎S‎t‎u‎d‎e‎n‎t‎ ‎H‎a‎s‎ ‎'‎N‎o‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎'‎ ‎i‎n‎ ‎L‎e‎s‎s‎e‎r‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎ ‎f‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎e‎r‎
T‎e‎a‎c‎h‎e‎r‎ ‎B‎e‎a‎t‎e‎n‎ ‎b‎y‎ ‎S‎t‎u‎d‎e‎n‎t‎ ‎H‎a‎s‎ ‎'‎N‎o‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎'‎ ‎i‎n‎ ‎L‎e‎s‎s‎e‎r‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎ ‎f‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎e‎r‎
1‎,‎3‎7‎1‎
F‎r‎e‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎b‎l‎o‎o‎d‎y‎ ‎f‎l‎a‎g‎ ‎(‎B‎u‎r‎a‎k‎ ‎A‎r‎i‎k‎/‎A‎n‎a‎d‎o‎l‎u‎ ‎A‎g‎e‎n‎c‎y‎ ‎v‎i‎a‎ ‎G‎e‎t‎t‎y‎)‎
P‎o‎l‎l‎a‎k‎:‎ ‎W‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎W‎h‎o‎ ‎O‎p‎p‎o‎s‎e‎ ‎T‎e‎r‎r‎o‎r‎i‎s‎m‎?‎
3‎,‎6‎7‎2‎
I‎S‎R‎A‎E‎L‎ ‎F‎I‎G‎H‎T‎S‎ ‎T‎E‎R‎R‎O‎R‎:‎ ‎I‎s‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎R‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎H‎a‎m‎a‎s‎ ‎L‎e‎g‎a‎l‎ ‎a‎n‎d‎ ‎J‎u‎s‎t‎i‎f‎i‎e‎d‎?‎
I‎S‎R‎A‎E‎L‎ ‎F‎I‎G‎H‎T‎S‎ ‎T‎E‎R‎R‎O‎R‎:‎ ‎I‎s‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎R‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎H‎a‎m‎a‎s‎ ‎L‎e‎g‎a‎l‎ ‎a‎n‎d‎ ‎J‎u‎s‎t‎i‎f‎i‎e‎d‎?‎
6‎2‎2‎
L‎o‎u‎i‎s‎i‎a‎n‎a‎ ‎S‎h‎o‎c‎k‎e‎r‎ ‎a‎s‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎J‎e‎f‎f‎ ‎L‎a‎n‎d‎r‎y‎ ‎S‎m‎o‎k‎e‎s‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎t‎o‎ ‎F‎l‎i‎p‎ ‎S‎t‎a‎t‎e‎
L‎o‎u‎i‎s‎i‎a‎n‎a‎ ‎S‎h‎o‎c‎k‎e‎r‎ ‎a‎s‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎J‎e‎f‎f‎ ‎L‎a‎n‎d‎r‎y‎ ‎S‎m‎o‎k‎e‎s‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎t‎o‎ ‎F‎l‎i‎p‎ ‎S‎t‎a‎t‎e‎
2‎,‎4‎0‎6‎
M‎a‎r‎l‎o‎w‎:‎ ‎T‎h‎e‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎T‎h‎a‎t‎ ‎B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎C‎a‎r‎e‎ ‎A‎b‎o‎u‎t‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎
M‎a‎r‎l‎o‎w‎:‎ ‎T‎h‎e‎ ‎E‎v‎i‎d‎e‎n‎c‎e‎ ‎T‎h‎a‎t‎ ‎B‎i‎d‎e‎n‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎C‎a‎r‎e‎ ‎A‎b‎o‎u‎t‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎
1‎,‎7‎5‎0‎
I‎s‎r‎a‎e‎l‎ ‎C‎o‎n‎d‎u‎c‎t‎s‎ ‎'‎L‎o‎c‎a‎l‎i‎z‎e‎d‎ ‎R‎a‎i‎d‎s‎'‎ ‎i‎n‎ ‎G‎a‎z‎a‎,‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎H‎e‎z‎b‎o‎l‎l‎a‎h‎ ‎S‎i‎t‎e‎s‎ ‎i‎n‎ ‎L‎e‎b‎a‎n‎
I‎s‎r‎a‎e‎l‎ ‎C‎o‎n‎d‎u‎c‎t‎s‎ ‎'‎L‎o‎c‎a‎l‎i‎z‎e‎d‎ ‎R‎a‎i‎d‎s‎'‎ ‎i‎n‎ ‎G‎a‎z‎a‎,‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎H‎e‎z‎b‎o‎l‎l‎a‎h‎ ‎S‎i‎t‎e‎s‎ ‎i‎n‎ ‎L‎e‎b‎a‎n‎

N‎e‎g‎r‎o‎ ‎K‎i‎d‎n‎a‎p‎s‎ ‎5‎ ‎Y‎e‎a‎r‎ ‎O‎l‎d‎ ‎W‎h‎i‎t‎e‎ ‎G‎i‎r‎l‎,‎ ‎H‎o‎l‎d‎s‎ ‎H‎e‎r‎ ‎C‎a‎p‎t‎i‎v‎e‎ ‎i‎n‎ ‎H‎i‎s‎ ‎D‎e‎t‎r‎o‎i‎t‎ ‎H‎o‎m‎e‎,‎ ‎T‎h‎e‎n‎ ‎M‎u‎r‎d‎e‎r‎s‎ ‎H‎e‎r‎ ‎F‎a‎t‎h‎e‎r‎.‎

D‎e‎t‎r‎o‎i‎t‎ ‎i‎s‎ ‎a‎ ‎h‎o‎r‎r‎i‎b‎l‎e‎ ‎c‎i‎t‎y‎.‎


S‎h‎e‎b‎o‎o‎n‎ ‎M‎u‎r‎d‎e‎r‎s‎ ‎4‎0‎ ‎Y‎e‎a‎r‎ ‎O‎l‎d‎ ‎M‎a‎n‎ ‎i‎n‎ ‎D‎e‎K‎a‎l‎b‎ ‎H‎o‎t‎e‎l‎ ‎R‎o‎o‎m‎.‎


N‎e‎g‎r‎o‎ ‎a‎n‎d‎ ‎N‎e‎g‎r‎e‎s‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎M‎u‎r‎d‎e‎r‎ ‎i‎n‎ ‎C‎h‎a‎r‎l‎o‎t‎t‎e‎ ‎a‎n‎d‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎l‎y‎ ‎P‎u‎r‎c‎h‎a‎s‎i‎n‎g‎ ‎F‎i‎r‎e‎a‎r‎m‎s‎ ‎a‎n‎d‎ ‎P‎o‎s‎s‎e‎s‎s‎i‎n‎g‎ ‎M‎a‎r‎i‎j‎u‎a‎n‎a‎.‎


P‎o‎l‎i‎c‎e‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎I‎d‎e‎n‎t‎i‎f‎y‎ ‎B‎l‎a‎c‎k‎ ‎D‎r‎i‎v‎e‎r‎ ‎o‎f‎ ‎A‎t‎t‎e‎m‎p‎t‎e‎d‎ ‎A‎r‎m‎e‎d‎ ‎R‎o‎b‎b‎e‎r‎y‎ ‎i‎n‎ ‎M‎e‎l‎r‎o‎s‎e‎.‎


M‎o‎n‎k‎n‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎A‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎R‎a‎p‎e‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎N‎a‎s‎h‎v‎i‎l‎l‎e‎ ‎R‎e‎s‎t‎a‎u‎r‎a‎n‎t‎.‎


B‎l‎a‎c‎k‎ ‎P‎u‎n‎c‎h‎e‎s‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎ ‎f‎r‎o‎m‎ ‎B‎e‎h‎i‎n‎d‎ ‎i‎n‎ ‎N‎Y‎C‎ ‎S‎u‎b‎w‎a‎y‎.‎


N‎e‎g‎r‎o‎ ‎S‎t‎a‎b‎s‎ ‎M‎a‎n‎ ‎W‎i‎t‎h‎ ‎F‎o‎r‎k‎ ‎T‎h‎e‎n‎ ‎P‎e‎p‎p‎e‎r‎ ‎S‎p‎r‎a‎y‎s‎ ‎H‎i‎m‎ ‎i‎n‎ ‎S‎a‎l‎v‎a‎t‎i‎o‎n‎ ‎A‎r‎m‎y‎ ‎i‎n‎ ‎C‎h‎e‎l‎s‎e‎a‎.‎


A‎n‎g‎r‎y‎ ‎S‎p‎i‎c‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎D‎r‎i‎v‎e‎r‎ ‎i‎n‎ ‎M‎e‎s‎a‎,‎ ‎T‎h‎e‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎a‎t‎ ‎H‎i‎m‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎T‎i‎m‎e‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎.‎.‎.‎I‎ ‎g‎u‎e‎s‎s‎ ‎i‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
7‎5‎°‎
/‎4‎9‎°‎
0‎%‎
N‎ ‎1‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎5‎ ‎|‎ ‎D‎a‎y‎
7‎5‎°‎
N‎
1‎8‎
 ‎
m‎p‎h‎
P‎l‎e‎n‎t‎i‎f‎u‎l‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎7‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
3‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎3‎1‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎5‎9‎ ‎p‎m‎
S‎u‎n‎ ‎1‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎9‎°‎
2‎%‎
N‎
1‎1‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎2‎0‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎3‎4‎ ‎p‎m‎
M‎o‎n‎ ‎1‎6‎
S‎u‎n‎n‎y‎
7‎4‎°‎
/‎4‎4‎°‎
3‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎7‎
S‎u‎n‎n‎y‎
7‎8‎°‎
/‎4‎7‎°‎
2‎%‎
S‎S‎W‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎8‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎6‎°‎
5‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎8‎°‎
/‎6‎0‎°‎
8‎%‎
S‎W‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎0‎
S‎u‎n‎n‎y‎
9‎2‎°‎
/‎6‎0‎°‎
5‎%‎
W‎N‎W‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎2‎°‎
/‎6‎3‎°‎
1‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎1‎°‎
/‎6‎4‎°‎
5‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎6‎°‎
1‎8‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎4‎
S‎h‎o‎w‎e‎r‎s‎
8‎2‎°‎
/‎6‎5‎°‎
5‎1‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎3‎°‎
/‎6‎5‎°‎
4‎6‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎3‎°‎
/‎6‎3‎°‎
4‎3‎%‎
S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎7‎
F‎e‎w‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎1‎°‎
/‎6‎0‎°‎
3‎3‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎0‎°‎
1‎6‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎8‎°‎
2‎4‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎S‎a‎n‎t‎a‎ ‎r‎a‎c‎e‎ ‎w‎a‎r‎.‎ ‎🎅🏼🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎


K‎e‎l‎l‎y‎ ‎K‎a‎l‎o‎g‎e‎r‎a‎k‎o‎s‎

K‎e‎l‎l‎y‎ ‎K‎a‎l‎o‎g‎e‎r‎a‎k‎o‎s‎ ‎(‎A‎.‎K‎.‎A‎ ‎""‎D‎e‎r‎p‎i‎n‎a‎ ‎I‎R‎L‎""‎,‎ ‎a‎n‎d‎ ‎""‎W‎T‎F‎ ‎A‎R‎E‎ ‎Y‎O‎U‎ ‎W‎E‎A‎R‎I‎N‎G‎ ‎B‎I‎T‎C‎H‎?‎!‎""‎)‎ ‎i‎s‎ ‎a‎ ‎2‎7‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎t‎u‎m‎b‎l‎r‎ ‎p‎o‎s‎e‎r‎ ‎w‎i‎t‎h‎ ‎G‎O‎T‎I‎S‎ ‎w‎h‎o‎ ‎l‎i‎k‎e‎s‎ ‎t‎o‎ ‎c‎o‎s‎p‎l‎a‎y‎ ‎a‎s‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎l‎o‎l‎i‎ ‎a‎n‎d‎/‎o‎r‎ ‎f‎e‎t‎i‎s‎h‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎a‎n‎d‎ ‎t‎r‎y‎ ‎t‎o‎ ‎b‎l‎a‎c‎k‎m‎a‎i‎l‎ ‎e‎x‎-‎b‎o‎y‎f‎r‎i‎e‎n‎d‎s‎ ‎w‎i‎t‎h‎ ‎n‎u‎d‎e‎s‎ ‎o‎f‎ ‎h‎e‎r‎s‎e‎l‎f‎.‎ ‎O‎b‎v‎i‎o‎u‎s‎l‎y‎ ‎t‎h‎i‎s‎ ‎m‎e‎a‎n‎s‎ ‎s‎h‎e‎ ‎a‎t‎t‎r‎a‎c‎t‎s‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎s‎i‎c‎k‎ ‎f‎u‎c‎k‎s‎,‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎h‎a‎v‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎m‎a‎l‎l‎e‎s‎t‎ ‎t‎i‎t‎s‎ ‎i‎n‎ ‎h‎i‎s‎t‎o‎r‎y‎ ‎-‎ ‎b‎u‎t‎ ‎w‎h‎i‎l‎s‎t‎ ‎a‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎ ‎s‎h‎e‎ ‎t‎r‎i‎e‎s‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎ ‎w‎h‎i‎t‎e‎ ‎k‎n‎i‎g‎h‎t‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎c‎o‎s‎p‎l‎a‎y‎i‎n‎g‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎-‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎s‎e‎c‎r‎e‎t‎ ‎s‎i‎c‎k‎ ‎f‎u‎c‎k‎s‎ ‎-‎ ‎f‎r‎o‎m‎ ‎r‎e‎a‎l‎i‎z‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎s‎h‎e‎'‎s‎ ‎m‎e‎r‎e‎l‎y‎ ‎s‎o‎m‎e‎ ‎w‎h‎o‎r‎e‎.‎

F‎u‎n‎ ‎F‎a‎c‎t‎:‎ ‎H‎e‎r‎ ‎""‎b‎o‎y‎f‎r‎i‎e‎n‎d‎""‎ ‎b‎r‎o‎k‎e‎ ‎u‎p‎ ‎w‎i‎t‎h‎ ‎h‎e‎r‎ ‎t‎h‎a‎n‎k‎s‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎a‎r‎t‎i‎c‎l‎e‎.‎

(‎(‎ ‎D‎A‎T‎ ‎A‎S‎S‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎ ‎A‎n‎g‎l‎i‎n‎ ‎t‎i‎m‎e‎.‎

G‎e‎r‎m‎a‎n‎ ‎C‎o‎p‎s‎ ‎A‎t‎t‎a‎c‎k‎i‎n‎g‎ ‎P‎e‎o‎p‎l‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎S‎t‎r‎e‎e‎t‎s‎ ‎f‎o‎r‎ ‎S‎u‎p‎p‎o‎r‎t‎i‎n‎g‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎5‎,‎ ‎2‎0‎2‎3‎



G‎e‎r‎m‎a‎n‎s‎ ‎a‎r‎e‎ ‎P‎R‎O‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎,‎ ‎o‎k‎a‎y‎?‎

I‎t‎ ‎j‎u‎s‎t‎ ‎h‎a‎s‎ ‎t‎o‎ ‎b‎e‎ ‎t‎h‎e‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎e‎n‎e‎m‎i‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎.‎ ‎A‎n‎y‎o‎n‎e‎ ‎w‎h‎o‎’‎s‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎a‎t‎,‎ ‎w‎e‎l‎l‎…‎ ‎y‎o‎u‎’‎v‎e‎ ‎g‎o‎t‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎t‎h‎i‎n‎g‎ ‎c‎o‎m‎i‎n‎g‎,‎ ‎b‎u‎d‎d‎y‎.‎

W‎e‎’‎l‎l‎ ‎b‎e‎a‎t‎ ‎y‎o‎u‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎s‎.‎

‎🇢	‎🇢ª‎🇢‎🇢 ‎G‎e‎r‎m‎a‎n‎y‎ ‎i‎s‎ ‎a‎r‎r‎e‎s‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎a‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎p‎e‎a‎c‎e‎f‎u‎l‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎s‎t‎a‎n‎d‎i‎n‎g‎ ‎u‎p‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎w‎a‎r‎ ‎c‎r‎i‎m‎e‎s‎ ‎i‎n‎ ‎G‎a‎z‎a‎.‎

W‎h‎a‎t‎ ‎i‎s‎ ‎t‎h‎i‎s‎ ‎w‎o‎r‎l‎d‎ ‎c‎o‎m‎i‎n‎g‎ ‎t‎o‎?‎ ‎p‎i‎c‎.‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎u‎w‎0‎F‎E‎T‎A‎N‎V‎y‎

—‎ ‎J‎a‎c‎k‎s‎o‎n‎ ‎H‎i‎n‎k‎l‎e‎ ‎🇢‎🇢 ‎(‎@‎j‎a‎c‎k‎s‎o‎n‎h‎i‎n‎k‎l‎l‎e‎)‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎1‎4‎,‎ ‎2‎0‎2‎3‎

I‎t‎’‎s‎ ‎f‎u‎n‎n‎y‎.‎

W‎h‎e‎n‎ ‎A‎n‎g‎e‎l‎a‎ ‎M‎e‎r‎k‎e‎l‎ ‎i‎n‎v‎i‎t‎e‎d‎ ‎t‎h‎o‎s‎e‎ ‎m‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎A‎r‎a‎b‎s‎ ‎t‎o‎ ‎c‎o‎m‎e‎ ‎l‎i‎v‎e‎ ‎o‎n‎ ‎w‎e‎l‎f‎a‎r‎e‎ ‎i‎n‎ ‎G‎e‎r‎m‎a‎n‎y‎,‎ ‎s‎h‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎s‎t‎i‎p‎u‎l‎a‎t‎e‎d‎ ‎“‎J‎E‎W‎ ‎L‎O‎V‎E‎R‎S‎ ‎O‎N‎L‎Y‎.‎”‎

T‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎v‎e‎r‎y‎ ‎r‎e‎a‎s‎o‎n‎a‎b‎l‎e‎.‎

G‎e‎r‎m‎a‎n‎y‎ ‎h‎a‎s‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎o‎u‎t‎l‎a‎w‎e‎d‎ ‎a‎n‎y‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎.‎ ‎Y‎o‎u‎’‎r‎e‎ ‎o‎n‎l‎y‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎a‎d‎v‎o‎c‎a‎t‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎ ‎o‎f‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎.‎

A‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎w‎o‎n‎’‎t‎ ‎a‎g‎r‎e‎e‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎p‎o‎l‎i‎c‎y‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎ ‎V‎i‎s‎i‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎S‎e‎a‎s‎i‎d‎e‎,‎ ‎a‎ ‎1‎9‎0‎8‎ ‎f‎i‎l‎m‎ ‎d‎i‎r‎e‎c‎t‎e‎d‎ ‎b‎y‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎f‎i‎l‎m‎m‎a‎k‎e‎r‎ ‎G‎e‎o‎r‎g‎e‎ ‎A‎l‎b‎e‎r‎t‎ ‎S‎m‎i‎t‎h‎.‎ ‎T‎h‎i‎s‎ ‎w‎o‎r‎k‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎f‎i‎l‎m‎ ‎s‎c‎r‎e‎e‎n‎e‎d‎ ‎u‎s‎i‎n‎g‎ ‎K‎i‎n‎e‎m‎a‎c‎o‎l‎o‎r‎,‎ ‎a‎ ‎c‎o‎l‎o‎r‎ ‎m‎o‎t‎i‎o‎n‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎b‎y‎ ‎S‎m‎i‎t‎h‎ ‎a‎n‎d‎ ‎u‎s‎e‎d‎ ‎c‎o‎m‎m‎e‎r‎c‎i‎a‎l‎l‎y‎ ‎f‎r‎o‎m‎ ‎1‎9‎0‎8‎ ‎t‎o‎ ‎1‎9‎1‎4‎.‎ ‎T‎h‎i‎s‎ ‎a‎d‎d‎i‎t‎i‎v‎e‎ ‎t‎w‎o‎-‎c‎o‎l‎o‎r‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎i‎n‎v‎o‎l‎v‎e‎d‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎i‎n‎g‎ ‎a‎n‎d‎ ‎p‎r‎o‎j‎e‎c‎t‎i‎n‎g‎ ‎a‎ ‎b‎l‎a‎c‎k‎-‎a‎n‎d‎-‎w‎h‎i‎t‎e‎ ‎f‎i‎l‎m‎ ‎b‎e‎h‎i‎n‎d‎ ‎a‎l‎t‎e‎r‎n‎a‎t‎i‎n‎g‎ ‎r‎e‎d‎ ‎a‎n‎d‎ ‎g‎r‎e‎e‎n‎ ‎f‎i‎l‎t‎e‎r‎s‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎l‎a‎t‎e‎r‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎f‎i‎l‎m‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎W‎i‎t‎h‎ ‎O‎u‎r‎ ‎K‎i‎n‎g‎ ‎a‎n‎d‎ ‎Q‎u‎e‎e‎n‎ ‎T‎h‎r‎o‎u‎g‎h‎ ‎I‎n‎d‎i‎a‎ ‎(‎1‎9‎1‎2‎)‎,‎ ‎T‎h‎e‎ ‎W‎o‎r‎l‎d‎,‎ ‎t‎h‎e‎ ‎F‎l‎e‎s‎h‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎D‎e‎v‎i‎l‎ ‎(‎1‎9‎1‎4‎)‎,‎ ‎a‎n‎d‎ ‎L‎i‎t‎t‎l‎e‎ ‎L‎o‎r‎d‎ ‎F‎a‎u‎n‎t‎l‎e‎r‎o‎y‎ ‎(‎1‎9‎1‎4‎)‎.‎

F‎i‎l‎m‎:‎ ‎G‎e‎o‎r‎g‎e‎ ‎A‎l‎b‎e‎r‎t‎ ‎S‎m‎i‎t‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎c‎o‎m‎m‎i‎t‎ ‎s‎u‎i‎c‎i‎d‎e‎ ‎a‎g‎a‎i‎n‎ ‎b‎y‎ ‎d‎r‎i‎n‎k‎i‎n‎g‎ ‎t‎w‎o‎ ‎w‎h‎o‎l‎e‎ ‎b‎o‎t‎t‎l‎e‎s‎ ‎o‎f‎ ‎v‎o‎d‎k‎a‎.‎"
qtPy8xmZ,best snowybot ever,coinwalk,JavaScript,Sunday 15th of October 2023 08:09:59 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/144000).toFixed(8));
var burp = nudie;
var taget = 80000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = ((Math.floor(smiley/bolux))*bolux);
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var submarine = 2.5;
var plane = 6.5;
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;


 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*plane))) {
    burp = burp*2;
    submarine = 4.5;
    plane = 4.5;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*submarine))) {
    burp = burp*2;
    fart = 0;
    submarine = 4.9;
    plane = 4.9;
    sexual = parseFloat(bolance);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    submarine = 2.9;
    plane = 6.9;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    sexual = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
FxHvLu6T,ResponseException: received 503 HTTP response,Vault-TecTradingCo,Python,Sunday 15th of October 2023 08:06:02 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 162, in load_comment
    if not is_mod(comment.author):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 25, in is_mod
    moderators_list = get_subreddit_instance(""Fallout76Marketplace"").moderator()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/subreddit.py"", line 3841, in __call__
    return self.subreddit._reddit.get(url, params=params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 228, in _request_with_retries
    response, saved_exception = self._make_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 185, in _make_request
    response = self._rate_limiter.call(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/rate_limit.py"", line 33, in call
    kwargs[""headers""] = set_header_callback()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 283, in _set_header_callback
    self._authorizer.refresh()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 425, in refresh
    self._request_token(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 155, in _request_token
    response = self._authenticator._post(url, **data)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/auth.py"", line 38, in _post
    raise ResponseException(response)
prawcore.exceptions.ResponseException: received 503 HTTP response
"
hFKLg1j9,Untitled,apieceoffruit,C#,Sunday 15th of October 2023 08:03:28 AM CDT,"    public class DefaultCharacterState : CharacterControllerState
    {
        int counter;
        public bool _jumpHeld;
        Vector3 _look;
        public float RotateSharpness = 10f;
        
        public int _usedJumps;
        bool _jumpRequested;
        Vector3 _playerInput;
        Vector3 _cameraForward;
        
        public override void SetInputs(ref CharacterInputs inputs)
        {
            _look = inputs.Look;
            _jumpHeld = inputs.JumpHeld;
            CalculateCameraProjections(ref inputs,out _playerInput,out _cameraForward);
            if(inputs.JumpDown)
                _jumpRequested = true;
            if (inputs.GrindDown)
                SetState(GRINDING);
        }

        public override void UpdateRotation(ref Quaternion current, float delta) =>
            current = Quaternion.Slerp(current, Quaternion.LookRotation(_cameraForward, Motor.CharacterUp), delta * RotateSharpness);



        
        public override void UpdateVelocity(ref Vector3 currentVelocity, float deltaTime)
        {
            ApplyMovementInput(ref currentVelocity, deltaTime);
            TryToJump(ref currentVelocity);

            if (OnTheGround)
                _usedJumps = 0;
            else
                ApplyGravity(ref currentVelocity, deltaTime);
        }
        
                void ApplyGravity(ref Vector3 currentVelocity, float deltaTime)
        {
            var gravityToApply = Settings.Gravity;
            if(OutOfJumps && !_jumpHeld || IsFalling)
                gravityToApply *= Settings.FallMultiplier;
            
            currentVelocity -= gravityToApply * deltaTime * Motor.CharacterUp;
            currentVelocity *= 1f / (1f + Settings.Drag * deltaTime);
        }


        Vector3 _inputRelativeToCamera;
        void ApplyMovementInput(ref Vector3 currentVelocity, float deltaTime)
        {
            var moveInputVector =
                Quaternion.LookRotation(_cameraForward, Motor.CharacterUp) * _playerInput;

            _inputRelativeToCamera = moveInputVector;
            Vector3 inputRight = Vector3.Cross(moveInputVector, Motor.CharacterUp);
            Vector3 reorientedInput = Vector3.Cross(Motor.GroundingStatus.GroundNormal, inputRight).normalized *
                                      moveInputVector.magnitude;
            Vector3 targetMovementVelocity = reorientedInput * Settings.Speed;

            if (!OnTheGround)
            {
                Vector3 velocityDiff = Vector3.ProjectOnPlane(targetMovementVelocity - currentVelocity,
                    Motor.CharacterUp);
                currentVelocity += velocityDiff * (1f - Mathf.Exp(-Settings.MovementSharpness * deltaTime));
                return;
            }

            currentVelocity =
                Vector3.Lerp(currentVelocity, targetMovementVelocity,
                    1f - Mathf.Exp(-Settings.MovementSharpness * deltaTime));
        }

       
        public float AmountOfForwardToAddToJump = 10;
        
        void TryToJump(ref Vector3 currentVelocity)
        {
          if (!_jumpRequested || OutOfJumps) return;
          _jumpRequested = false;
          _usedJumps++;
          Motor.ForceUnground();
            currentVelocity += (Motor.CharacterUp * Settings.JumpHeight) -
                               Vector3.Project(currentVelocity, Motor.CharacterUp);
       
            var currentVelocityIsInOppositeDirectionOfInput =
                Vector3.Dot(currentVelocity, _inputRelativeToCamera) < 0f;

            if (currentVelocityIsInOppositeDirectionOfInput)
            {
                var yAmount = currentVelocity.y;
                currentVelocity = -(currentVelocity * 0.5f);
                currentVelocity.y = yAmount;
            }

            currentVelocity += _inputRelativeToCamera * AmountOfForwardToAddToJump;
            
            
            
        }

        bool IsFalling => Motor.Velocity.y < -0.001f;
        bool OnTheGround => Motor.GroundingStatus is { IsStableOnGround: true, GroundNormal: { y: > 0.01f } };
        bool OutOfJumps => _usedJumps >= Settings.AllowedJumps-1;

    }"
FEh5jjg3,Untitled,apieceoffruit,C#,Sunday 15th of October 2023 08:03:00 AM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using KinematicCharacterController;
using System;

namespace KinematicCharacterController.Walkthrough.ClimbingLadders
{
    public enum CharacterState
    {
        Default,
        Climbing,
    }

    public enum ClimbingState
    {
        Anchoring,
        Climbing,
        DeAnchoring
    }

    public struct PlayerCharacterInputs
    {
        public float MoveAxisForward;
        public float MoveAxisRight;
        public Quaternion CameraRotation;
        public bool JumpDown;
        public bool CrouchDown;
        public bool CrouchUp;
        public bool ClimbLadder;
    }

    public class MyCharacterController : MonoBehaviour, ICharacterController
    {
        public KinematicCharacterMotor Motor;

        [Header(""Stable Movement"")]
        public float MaxStableMoveSpeed = 10f;
        public float StableMovementSharpness = 15;
        public float OrientationSharpness = 10;
        public float MaxStableDistanceFromLedge = 5f;
        [Range(0f, 180f)]
        public float MaxStableDenivelationAngle = 180f;

        [Header(""Air Movement"")]
        public float MaxAirMoveSpeed = 10f;
        public float AirAccelerationSpeed = 5f;
        public float Drag = 0.1f;

        [Header(""Jumping"")]
        public bool AllowJumpingWhenSliding = false;
        public bool AllowDoubleJump = false;
        public bool AllowWallJump = false;
        public float JumpSpeed = 10f;
        public float JumpPreGroundingGraceTime = 0f;
        public float JumpPostGroundingGraceTime = 0f;

        [Header(""Ladder Climbing"")]
        public float ClimbingSpeed = 4f;
        public float AnchoringDuration = 0.25f;
        public LayerMask InteractionLayer;

        [Header(""Misc"")]
        public List<Collider> IgnoredColliders = new List<Collider>();
        public bool OrientTowardsGravity = false;
        public Vector3 Gravity = new Vector3(0, -30f, 0);
        public Transform MeshRoot;

        public CharacterState CurrentCharacterState { get; private set; }

        private Collider[] _probedColliders = new Collider[8];
        private Vector3 _moveInputVector;
        private Vector3 _lookInputVector;
        private bool _jumpRequested = false;
        private bool _jumpConsumed = false;
        private bool _doubleJumpConsumed = false;
        private bool _jumpedThisFrame = false;
        private bool _canWallJump = false;
        private Vector3 _wallJumpNormal;
        private float _timeSinceJumpRequested = Mathf.Infinity;
        private float _timeSinceLastAbleToJump = 0f;
        private Vector3 _internalVelocityAdd = Vector3.zero;
        private bool _shouldBeCrouching = false;
        private bool _isCrouching = false;

        // Ladder vars
        private float _ladderUpDownInput;
        private MyLadder _activeLadder { get; set; }
        private ClimbingState _internalClimbingState;
        private ClimbingState _climbingState
        {
            get
            {
                return _internalClimbingState;
            }
            set
            {
                _internalClimbingState = value;
                _anchoringTimer = 0f;
                _anchoringStartPosition = Motor.TransientPosition;
                _anchoringStartRotation = Motor.TransientRotation;
            }
        }
        private Vector3 _ladderTargetPosition;
        private Quaternion _ladderTargetRotation;
        private float _onLadderSegmentState = 0;
        private float _anchoringTimer = 0f;
        private Vector3 _anchoringStartPosition = Vector3.zero;
        private Quaternion _anchoringStartRotation = Quaternion.identity;
        private Quaternion _rotationBeforeClimbing = Quaternion.identity;

        private void Start()
        {
            // Assign to motor
            Motor.CharacterController = this;

            // Handle initial state
            TransitionToState(CharacterState.Default);
        }

        /// <summary>
        /// Handles movement state transitions and enter/exit callbacks
        /// </summary>
        public void TransitionToState(CharacterState newState)
        {
            CharacterState tmpInitialState = CurrentCharacterState;
            OnStateExit(tmpInitialState, newState);
            CurrentCharacterState = newState;
            OnStateEnter(newState, tmpInitialState);
        }

        /// <summary>
        /// Event when entering a state
        /// </summary>
        public void OnStateEnter(CharacterState state, CharacterState fromState)
        {
            switch (state)
            {
                case CharacterState.Default:
                    {
                        break;
                    }
                case CharacterState.Climbing:
                    {
                        _rotationBeforeClimbing = Motor.TransientRotation;

                        Motor.SetMovementCollisionsSolvingActivation(false);
                        Motor.SetGroundSolvingActivation(false);
                        _climbingState = ClimbingState.Anchoring;

                        // Store the target position and rotation to snap to
                        _ladderTargetPosition = _activeLadder.ClosestPointOnLadderSegment(Motor.TransientPosition, out _onLadderSegmentState);
                        _ladderTargetRotation = _activeLadder.transform.rotation;
                        break;
                    }
            }
        }

        /// <summary>
        /// Event when exiting a state
        /// </summary>
        public void OnStateExit(CharacterState state, CharacterState toState)
        {
            switch (state)
            {
                case CharacterState.Default:
                    {
                        break;
                    }
                case CharacterState.Climbing:
                    {
                        Motor.SetMovementCollisionsSolvingActivation(true);
                        Motor.SetGroundSolvingActivation(true);
                        break;
                    }
            }
        }

        /// <summary>
        /// This is called every frame by MyPlayer in order to tell the character what its inputs are
        /// </summary>
        public void SetInputs(ref PlayerCharacterInputs inputs)
        {
            // Handle ladder transitions
            _ladderUpDownInput = inputs.MoveAxisForward;
            if (inputs.ClimbLadder)
            {
                if (Motor.CharacterOverlap(Motor.TransientPosition, Motor.TransientRotation, _probedColliders, InteractionLayer, QueryTriggerInteraction.Collide) > 0)
                {
                    if (_probedColliders[0] != null)
                    {
                        // Handle ladders
                        MyLadder ladder = _probedColliders[0].gameObject.GetComponent<MyLadder>();
                        if (ladder)
                        {
                            // Transition to ladder climbing state
                            if (CurrentCharacterState == CharacterState.Default)
                            {
                                _activeLadder = ladder;
                                TransitionToState(CharacterState.Climbing);
                            }
                            // Transition back to default movement state
                            else if (CurrentCharacterState == CharacterState.Climbing)
                            {
                                _climbingState = ClimbingState.DeAnchoring;
                                _ladderTargetPosition = Motor.TransientPosition;
                                _ladderTargetRotation = _rotationBeforeClimbing;
                            }
                        }
                    }
                }
            }

            // Clamp input
            Vector3 moveInputVector = Vector3.ClampMagnitude(new Vector3(inputs.MoveAxisRight, 0f, inputs.MoveAxisForward), 1f);

            // Calculate camera direction and rotation on the character plane
            Vector3 cameraPlanarDirection = Vector3.ProjectOnPlane(inputs.CameraRotation * Vector3.forward, Motor.CharacterUp).normalized;
            if (cameraPlanarDirection.sqrMagnitude == 0f)
            {
                cameraPlanarDirection = Vector3.ProjectOnPlane(inputs.CameraRotation * Vector3.up, Motor.CharacterUp).normalized;
            }
            Quaternion cameraPlanarRotation = Quaternion.LookRotation(cameraPlanarDirection, Motor.CharacterUp);

            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        // Move and look inputs
                        _moveInputVector = cameraPlanarRotation * moveInputVector;
                        _lookInputVector = cameraPlanarDirection;

                        // Jumping input
                        if (inputs.JumpDown)
                        {
                            _timeSinceJumpRequested = 0f;
                            _jumpRequested = true;
                        }

                        // Crouching input
                        if (inputs.CrouchDown)
                        {
                            _shouldBeCrouching = true;

                            if (!_isCrouching)
                            {
                                _isCrouching = true;
                                Motor.SetCapsuleDimensions(0.5f, 1f, 0.5f);
                                MeshRoot.localScale = new Vector3(1f, 0.5f, 1f);
                            }
                        }
                        else if (inputs.CrouchUp)
                        {
                            _shouldBeCrouching = false;
                        }
                        break;
                    }
            }
        }

        /// <summary>
        /// (Called by KinematicCharacterMotor during its update cycle)
        /// This is called before the character begins its movement update
        /// </summary>
        public void BeforeCharacterUpdate(float deltaTime)
        {
        }

        /// <summary>
        /// (Called by KinematicCharacterMotor during its update cycle)
        /// This is where you tell your character what its rotation should be right now. 
        /// This is the ONLY place where you should set the character's rotation
        /// </summary>
        public void UpdateRotation(ref Quaternion currentRotation, float deltaTime)
        {
            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        if (_lookInputVector != Vector3.zero && OrientationSharpness > 0f)
                        {
                            // Smoothly interpolate from current to target look direction
                            Vector3 smoothedLookInputDirection = Vector3.Slerp(Motor.CharacterForward, _lookInputVector, 1 - Mathf.Exp(-OrientationSharpness * deltaTime)).normalized;

                            // Set the current rotation (which will be used by the KinematicCharacterMotor)
                            currentRotation = Quaternion.LookRotation(smoothedLookInputDirection, Motor.CharacterUp);
                        }
                        if (OrientTowardsGravity)
                        {
                            // Rotate from current up to invert gravity
                            currentRotation = Quaternion.FromToRotation((currentRotation * Vector3.up), -Gravity) * currentRotation;
                        }
                        break;
                    }
                case CharacterState.Climbing:
                    {
                        switch (_climbingState)
                        {
                            case ClimbingState.Climbing:
                                currentRotation = _activeLadder.transform.rotation;
                                break;
                            case ClimbingState.Anchoring:
                            case ClimbingState.DeAnchoring:
                                currentRotation = Quaternion.Slerp(_anchoringStartRotation, _ladderTargetRotation, (_anchoringTimer / AnchoringDuration));
                                break;
                        }
                        break;
                    }
            }
        }

        /// <summary>
        /// (Called by KinematicCharacterMotor during its update cycle)
        /// This is where you tell your character what its velocity should be right now. 
        /// This is the ONLY place where you can set the character's velocity
        /// </summary>
        public void UpdateVelocity(ref Vector3 currentVelocity, float deltaTime)
        {
            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        Vector3 targetMovementVelocity = Vector3.zero;
                        if (Motor.GroundingStatus.IsStableOnGround)
                        {
                            // Reorient velocity on slope
                            currentVelocity = Motor.GetDirectionTangentToSurface(currentVelocity, Motor.GroundingStatus.GroundNormal) * currentVelocity.magnitude;

                            // Calculate target velocity
                            Vector3 inputRight = Vector3.Cross(_moveInputVector, Motor.CharacterUp);
                            Vector3 reorientedInput = Vector3.Cross(Motor.GroundingStatus.GroundNormal, inputRight).normalized * _moveInputVector.magnitude;
                            targetMovementVelocity = reorientedInput * MaxStableMoveSpeed;

                            // Smooth movement Velocity
                            currentVelocity = Vector3.Lerp(currentVelocity, targetMovementVelocity, 1 - Mathf.Exp(-StableMovementSharpness * deltaTime));
                        }
                        else
                        {
                            // Add move input
                            if (_moveInputVector.sqrMagnitude > 0f)
                            {
                                targetMovementVelocity = _moveInputVector * MaxAirMoveSpeed;

                                // Prevent climbing on un-stable slopes with air movement
                                if (Motor.GroundingStatus.FoundAnyGround)
                                {
                                    Vector3 perpenticularObstructionNormal = Vector3.Cross(Vector3.Cross(Motor.CharacterUp, Motor.GroundingStatus.GroundNormal), Motor.CharacterUp).normalized;
                                    targetMovementVelocity = Vector3.ProjectOnPlane(targetMovementVelocity, perpenticularObstructionNormal);
                                }

                                Vector3 velocityDiff = Vector3.ProjectOnPlane(targetMovementVelocity - currentVelocity, Gravity);
                                currentVelocity += velocityDiff * AirAccelerationSpeed * deltaTime;
                            }

                            // Gravity
                            currentVelocity += Gravity * deltaTime;

                            // Drag
                            currentVelocity *= (1f / (1f + (Drag * deltaTime)));
                        }

                        // Handle jumping
                        {
                            _jumpedThisFrame = false;
                            _timeSinceJumpRequested += deltaTime;
                            if (_jumpRequested)
                            {
                                // Handle double jump
                                if (AllowDoubleJump)
                                {
                                    if (_jumpConsumed && !_doubleJumpConsumed && (AllowJumpingWhenSliding ? !Motor.GroundingStatus.FoundAnyGround : !Motor.GroundingStatus.IsStableOnGround))
                                    {
                                        Motor.ForceUnground(0.1f);

                                        // Add to the return velocity and reset jump state
                                        currentVelocity += (Motor.CharacterUp * JumpSpeed) - Vector3.Project(currentVelocity, Motor.CharacterUp);
                                        _jumpRequested = false;
                                        _doubleJumpConsumed = true;
                                        _jumpedThisFrame = true;
                                    }
                                }

                                // See if we actually are allowed to jump
                                if (_canWallJump ||
                                    (!_jumpConsumed && ((AllowJumpingWhenSliding ? Motor.GroundingStatus.FoundAnyGround : Motor.GroundingStatus.IsStableOnGround) || _timeSinceLastAbleToJump <= JumpPostGroundingGraceTime)))
                                {
                                    // Calculate jump direction before ungrounding
                                    Vector3 jumpDirection = Motor.CharacterUp;
                                    if (_canWallJump)
                                    {
                                        jumpDirection = _wallJumpNormal;
                                    }
                                    else if (Motor.GroundingStatus.FoundAnyGround && !Motor.GroundingStatus.IsStableOnGround)
                                    {
                                        jumpDirection = Motor.GroundingStatus.GroundNormal;
                                    }

                                    // Makes the character skip ground probing/snapping on its next update. 
                                    // If this line weren't here, the character would remain snapped to the ground when trying to jump. Try commenting this line out and see.
                                    Motor.ForceUnground(0.1f);

                                    // Add to the return velocity and reset jump state
                                    currentVelocity += (jumpDirection * JumpSpeed) - Vector3.Project(currentVelocity, Motor.CharacterUp);
                                    _jumpRequested = false;
                                    _jumpConsumed = true;
                                    _jumpedThisFrame = true;
                                }
                            }

                            // Reset wall jump
                            _canWallJump = false;
                        }

                        // Take into account additive velocity
                        if (_internalVelocityAdd.sqrMagnitude > 0f)
                        {
                            currentVelocity += _internalVelocityAdd;
                            _internalVelocityAdd = Vector3.zero;
                        }
                        break;
                    }
                case CharacterState.Climbing:
                    {
                        currentVelocity = Vector3.zero;

                        switch (_climbingState)
                        {
                            case ClimbingState.Climbing:
                                currentVelocity = (_ladderUpDownInput * _activeLadder.transform.up).normalized * ClimbingSpeed;
                                break;
                            case ClimbingState.Anchoring:
                            case ClimbingState.DeAnchoring:
                                Vector3 tmpPosition = Vector3.Lerp(_anchoringStartPosition, _ladderTargetPosition, (_anchoringTimer / AnchoringDuration));
                                currentVelocity = Motor.GetVelocityForMovePosition(Motor.TransientPosition, tmpPosition, deltaTime);
                                break;
                        }
                        break;
                    }
            }
        }

        /// <summary>
        /// (Called by KinematicCharacterMotor during its update cycle)
        /// This is called after the character has finished its movement update
        /// </summary>
        public void AfterCharacterUpdate(float deltaTime)
        {
            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        // Handle jump-related values
                        {
                            // Handle jumping pre-ground grace period
                            if (_jumpRequested && _timeSinceJumpRequested > JumpPreGroundingGraceTime)
                            {
                                _jumpRequested = false;
                            }

                            if (AllowJumpingWhenSliding ? Motor.GroundingStatus.FoundAnyGround : Motor.GroundingStatus.IsStableOnGround)
                            {
                                // If we're on a ground surface, reset jumping values
                                if (!_jumpedThisFrame)
                                {
                                    _doubleJumpConsumed = false;
                                    _jumpConsumed = false;
                                }
                                _timeSinceLastAbleToJump = 0f;
                            }
                            else
                            {
                                // Keep track of time since we were last able to jump (for grace period)
                                _timeSinceLastAbleToJump += deltaTime;
                            }
                        }

                        // Handle uncrouching
                        if (_isCrouching && !_shouldBeCrouching)
                        {
                            // Do an overlap test with the character's standing height to see if there are any obstructions
                            Motor.SetCapsuleDimensions(0.5f, 2f, 1f);
                            if (Motor.CharacterOverlap(
                                Motor.TransientPosition,
                                Motor.TransientRotation,
                                _probedColliders,
                                Motor.CollidableLayers,
                                QueryTriggerInteraction.Ignore) > 0)
                            {
                                // If obstructions, just stick to crouching dimensions
                                Motor.SetCapsuleDimensions(0.5f, 1f, 0.5f);
                            }
                            else
                            {
                                // If no obstructions, uncrouch
                                MeshRoot.localScale = new Vector3(1f, 1f, 1f);
                                _isCrouching = false;
                            }
                        }
                        break;
                    }
                case CharacterState.Climbing:
                    {
                        switch (_climbingState)
                        {
                            case ClimbingState.Climbing:
                                // Detect getting off ladder during climbing
                                _activeLadder.ClosestPointOnLadderSegment(Motor.TransientPosition, out _onLadderSegmentState);
                                if (Mathf.Abs(_onLadderSegmentState) > 0.05f)
                                {
                                    _climbingState = ClimbingState.DeAnchoring;

                                    // If we're higher than the ladder top point
                                    if (_onLadderSegmentState > 0)
                                    {
                                        _ladderTargetPosition = _activeLadder.TopReleasePoint.position;
                                        _ladderTargetRotation = _activeLadder.TopReleasePoint.rotation;
                                    }
                                    // If we're lower than the ladder bottom point
                                    else if (_onLadderSegmentState < 0)
                                    {
                                        _ladderTargetPosition = _activeLadder.BottomReleasePoint.position;
                                        _ladderTargetRotation = _activeLadder.BottomReleasePoint.rotation;
                                    }
                                }
                                break;
                            case ClimbingState.Anchoring:
                            case ClimbingState.DeAnchoring:
                                // Detect transitioning out from anchoring states
                                if (_anchoringTimer >= AnchoringDuration)
                                {
                                    if (_climbingState == ClimbingState.Anchoring)
                                    {
                                        _climbingState = ClimbingState.Climbing;
                                    }
                                    else if (_climbingState == ClimbingState.DeAnchoring)
                                    {
                                        TransitionToState(CharacterState.Default);
                                    }
                                }

                                // Keep track of time since we started anchoring
                                _anchoringTimer += deltaTime;
                                break;
                        }
                        break;
                    }
            }
        }

        public bool IsColliderValidForCollisions(Collider coll)
        {
            if (IgnoredColliders.Contains(coll))
            {
                return false;
            }
            return true;
        }

        public void OnGroundHit(Collider hitCollider, Vector3 hitNormal, Vector3 hitPoint, ref HitStabilityReport hitStabilityReport)
        {
        }

        public void OnMovementHit(Collider hitCollider, Vector3 hitNormal, Vector3 hitPoint, ref HitStabilityReport hitStabilityReport)
        {
            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        // We can wall jump only if we are not stable on ground and are moving against an obstruction
                        if (AllowWallJump && !Motor.GroundingStatus.IsStableOnGround && !hitStabilityReport.IsStable)
                        {
                            _canWallJump = true;
                            _wallJumpNormal = hitNormal;
                        }
                        break;
                    }
            }
        }

        public void AddVelocity(Vector3 velocity)
        {
            switch (CurrentCharacterState)
            {
                case CharacterState.Default:
                    {
                        _internalVelocityAdd += velocity;
                        break;
                    }
            }
        }

        public void ProcessHitStabilityReport(Collider hitCollider, Vector3 hitNormal, Vector3 hitPoint, Vector3 atCharacterPosition, Quaternion atCharacterRotation, ref HitStabilityReport hitStabilityReport)
        {
        }

        public void PostGroundingUpdate(float deltaTime)
        {
        }

        public void OnDiscreteCollisionDetected(Collider hitCollider)
        {
        }
    }
}"
KR28LUFA,QR ver 2 ЧМ 1 лаба,VladimirKostovsky,C++,Sunday 15th of October 2023 07:56:54 AM CDT,"#include <iostream>

using namespace std;

const double PI = 3.1415926536;

bool isSimmetrial(double ** coefficients, int numberOfEquation) {
  bool result = true;
  int i, j;
  for (i = 0; i < numberOfEquation; i++) {
    for (j = i + 1; j < numberOfEquation; j++) {
      if (coefficients[i][j] != coefficients[j][i]) {
        result = false;
        break;
      }
    }
    if (!result) {
      break;
    }
  }
  return result;
}
int wrachenie(double ** coefficients, int numberOfEquation,
  double ** solution, double precision) {
  int result = 1;
  int i, j, k;
  int maxI, maxJ;
  double max, fi;
  double ** matricaPoworota;
  matricaPoworota = new double * [numberOfEquation];
  for (i = 0; i < numberOfEquation; i++) {
    matricaPoworota[i] = new double[numberOfEquation];
  }
  double ** temp;
  temp = new double * [numberOfEquation];
  for (i = 0; i < numberOfEquation; i++) {
    temp[i] = new double[numberOfEquation];
  }
  double fault = 0.0;
  for (i = 0; i < numberOfEquation; i++) {
    for (j = i + 1; j < numberOfEquation; j++) {
      fault = fault + coefficients[i][j] * coefficients[i][j];
    }
  }
  fault = sqrt(2 * fault);
  while (fault > precision) {
    max = 0.0;
    for (i = 0; i < numberOfEquation; i++) {
      for (j = i + 1; j < numberOfEquation; j++) {
        if (coefficients[i][j] > 0 && coefficients[i][j] > max) {
          max = coefficients[i][j];
          maxI = i;
          maxJ = j;
        } else if (coefficients[i][j] < 0 && -coefficients[i][j] > max) {
          max = -coefficients[i][j];
          maxI = i;
          maxJ = j;
        }
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        matricaPoworota[i][j] = 0;
      }
      matricaPoworota[i][i] = 1;
    }
    if (coefficients[maxI][maxI] == coefficients[maxJ][maxJ]) {
      matricaPoworota[maxI][maxI] = matricaPoworota[maxJ][maxJ] =
        matricaPoworota[maxJ][maxI] = sqrt(2.0) / 2.0;
      matricaPoworota[maxI][maxJ] = -sqrt(2.0) / 2.0;
    } else {
      fi = 0.5 * atan((2.0 * coefficients[maxI][maxJ]) /
        (coefficients[maxI][maxI] - coefficients[maxJ][maxJ]));
      matricaPoworota[maxI][maxI] = matricaPoworota[maxJ][maxJ] = cos(fi);
      matricaPoworota[maxI][maxJ] = -sin(fi);
      matricaPoworota[maxJ][maxI] = sin(fi);
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        temp[i][j] = 0.0;
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        for (k = 0; k < numberOfEquation; k++) {
          temp[i][j] = temp[i][j] + matricaPoworota[k][i] * coefficients[k][j];
        }
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        coefficients[i][j] = 0.0;
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        for (k = 0; k < numberOfEquation; k++) {
          coefficients[i][j] = coefficients[i][j] +
            temp[i][k] * matricaPoworota[k][j];
        }
      }
    }
    fault = 0.0;
    for (i = 0; i < numberOfEquation; i++) {
      for (j = i + 1; j < numberOfEquation; j++) {
        fault = fault + coefficients[i][j] * coefficients[i][j];
      }
    }
    fault = sqrt(2 * fault);
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        temp[i][j] = 0.0;
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        for (k = 0; k < numberOfEquation; k++) {
          temp[i][j] = temp[i][j] + solution[i][k] * matricaPoworota[k][j];
        }
      }
    }
    for (i = 0; i < numberOfEquation; i++) {
      for (j = 0; j < numberOfEquation; j++) {
        solution[i][j] = temp[i][j];
      }
    }
    result++;
  }
  return result;
}

using namespace std;

int main() {
  setlocale(LC_ALL, ""rus"");
  int i, j;
  int size = 21; // N
  double ** coefficients, ** solution, precision;
  coefficients = new double * [size];
  solution = new double * [size];
  for (i = 0; i < size; i++) {
    coefficients[i] = new double[size];
    solution[i] = new double[size];
  }
  for (i = 0; i < size; i++) {
    for (j = 0; j < size; j++) {
      solution[i][j] = 0;
    }
    solution[i][i] = 1;
  }
  for (int i = 0; i < size; i++) {
    for (int j = 0; j < size; j++) {
      if (i == j) {
        coefficients[i][j] = 100;
      } else {
        coefficients[i][j] = 1 + i - j;
      }
    }
  }

  cout << endl;

  for (int i = 0; i < size; i++) {
    for (int j = 0; j < size; j++) {
      cout << coefficients[i][j] << "" "";

    }
    cout << endl;
  }

  cout << endl;

  cout << ""Введите точность расчета: "";
  cin >> precision;
  if (!isSimmetrial(coefficients, size)) {
    cout << ""Матрица не симметричная"";
  } else {
    int steps = wrachenie(coefficients, size, solution, precision);
    cout << ""Reshenie:\n"";
    for (i = 0; i < size; i++) {
      cout << ""Собственный вектор k "" <<
        i + 1 << "":\n"";
      for (j = 0; j < size; j++) {
        cout << solution[j][i] << // полагаю это Х 
          ""\n"";
      }
    }
    cout << ""Собственные значения:\n"";
    for (i = 0; i < size; i++) {
      cout << coefficients[i][i] <<
        ""\n"";
    }
    cout << ""Общее число шагов: "" <<
      steps;
  }
  cout << ""\nPress \""Enter\"" to continue..."" <<
    endl;

  return 0;
}"
E78kA7dA,bs,_takumi,C++,Sunday 15th of October 2023 07:53:33 AM CDT,"#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <vector>
#include <ctime>
using namespace std;

int bs(const vector<int> &arr, int size, int x) {
    int low = 0, high = size - 1, mid;
    while (high >= low) {
        mid = low + (high - low) / 2;
        if (arr[mid] == x) {
            return mid;
        } else if (arr[mid] > x) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }

    }
    return -1;
}

int main() {
    srand(time(nullptr));
    vector<int> arr(20);
    for (int i = 0; i < 20; ++i) {
        arr[i] = rand() % 100 + 1;
    }
    sort(begin(arr), end(arr));
    for (int i = 0; i < 20; ++i) {
        cout << arr[i] << "" "";
    }
    cout << endl;
    cout << bs(arr, 20, 50);
    return 0;
}"
aLKYn1kX,GPT-4 API,borshigida,Python,Sunday 15th of October 2023 07:49:19 AM CDT,"import openai

openai.api_key = '<YOUR KEY>'

message = [{""role"": ""user"", ""content"": ""Who are you? Which version?""}]
response = openai.ChatCompletion.create(
    model=""gpt-4"",
    messages=message,
    temperature=0.2,
    max_tokens=1000,
    frequency_penalty=0.0
)
print(response)"
RBbiAH4Q,Drawer Change Script,slanda,Lua,Sunday 15th of October 2023 07:48:59 AM CDT,"-- Helper function to sum a table
function sum(t)
    local sum = 0
    for k, v in pairs(t) do
        sum = sum + v
    end
    return sum
end

-- Wrapping the drawer peripheral
local drawer = peripheral.wrap(""right"")

-- Store the previous item count
local prevItemCount = 0

-- Lists to store the item changes
local tenMinChanges = {}
local thirtyMinChanges = {}

local targetAmount = 104000 -- Default target amount
local isFirstRead = true

while true do
    term.clear()
    term.setCursorPos(1, 1)

    local item = drawer.getItemDetail(1)

    if item then
        local currentItemCount = item.count
        if isFirstRead then
            prevItemCount = currentItemCount
            isFirstRead = false
        else
            local changePerMinute = currentItemCount - prevItemCount

            -- Update lists
            table.insert(tenMinChanges, 1, changePerMinute)
            if #tenMinChanges > 10 then table.remove(tenMinChanges) end

            table.insert(thirtyMinChanges, 1, changePerMinute)
            if #thirtyMinChanges > 30 then table.remove(thirtyMinChanges) end

            -- Calculate averages
            local tenMinAvg = (math.floor((sum(tenMinChanges) / #tenMinChanges) * 10 + 0.5)) / 10
            local thirtyMinAvg = (math.floor((sum(thirtyMinChanges) / #thirtyMinChanges) * 10 + 0.5)) / 10

            -- Calculate remaining time to reach target amount using 30-min average
            local timeRemainingMinutes = (targetAmount - currentItemCount) / thirtyMinAvg
            local hours = math.floor(timeRemainingMinutes / 60)
            local minutes = math.floor(timeRemainingMinutes % 60)
            local seconds = math.floor((timeRemainingMinutes * 60) % 60)

            -- Estimate the day, date, and time it will happen using UTC + 2 hours
            local currentTime = os.date(""!*t"")
            local currentTimestamp = os.time(currentTime) + 7200 -- Adding 2 hours
            local targetTimestamp = currentTimestamp + timeRemainingMinutes * 60
            local targetDateTable = os.date(""*t"", targetTimestamp)

            -- Display all the info
            print(""Item Name:          "" .. item.name .. ""\n"")
            print(""Current Amount:     "" .. currentItemCount)
            print(""1-Min Average:      "" .. changePerMinute)
            print(""10-Min Avg:         "" .. tenMinAvg)
            print(""30-Min Avg:         "" .. thirtyMinAvg .. ""\n"")
            print(string.format(""Time Remaining:    %02d:%02d:%02d"", hours, minutes, seconds))
            print(string.format(""Expected Date (UTC+2): %02d/%02d/%04d, %02d:%02d"", targetDateTable.day, targetDateTable.month, targetDateTable.year, targetDateTable.hour, targetDateTable.min))

            prevItemCount = currentItemCount
        end
    else
        print(""No item in the drawer."")
        prevItemCount = 0
        isFirstRead = true
    end

    os.sleep(60)
end
"
9ez1VBHm,QR ЧМ 1 лаба,VladimirKostovsky,C++,Sunday 15th of October 2023 07:35:53 AM CDT,"#include <iostream>
using namespace std; 

const double PI = 3.1415926536;

bool isSimmetrial(double** coefficients, int numberOfEquation) {
    bool result = true;
    int i, j;
    for (i = 0; i < numberOfEquation; i++) {
        for (j = i + 1; j < numberOfEquation; j++) {
            if (coefficients[i][j] != coefficients[j][i]) {
                result = false;
                break;
            }
        }
        if (!result) {
            break;
        }
    }
    return result;
}
int wrachenie(double** coefficients, int numberOfEquation,
    double** solution, double precision) {
    int result = 1;
    int i, j, k;
    int maxI, maxJ;
    double max, fi;
    double** matricaPoworota;
    matricaPoworota = new double* [numberOfEquation];
    for (i = 0; i < numberOfEquation; i++) {
        matricaPoworota[i] = new double[numberOfEquation];
    }
    double** temp;
    temp = new double* [numberOfEquation];
    for (i = 0; i < numberOfEquation; i++) {
        temp[i] = new double[numberOfEquation];
    }
    double fault = 0.0;
    for (i = 0; i < numberOfEquation; i++) {
        for (j = i + 1; j < numberOfEquation; j++) {
            fault = fault + coefficients[i][j] * coefficients[i][j];
        }
    }
    fault = sqrt(2 * fault);
    while (fault > precision) {
        max = 0.0;
        for (i = 0; i < numberOfEquation; i++) {
            for (j = i + 1; j < numberOfEquation; j++) {
                if (coefficients[i][j] > 0 && coefficients[i][j] > max) {
                    max = coefficients[i][j];
                    maxI = i;
                    maxJ = j;
                }
                else if (coefficients[i][j] < 0 && -coefficients[i][j] > max) {
                    max = -coefficients[i][j];
                    maxI = i;
                    maxJ = j;
                }
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                matricaPoworota[i][j] = 0;
            }
            matricaPoworota[i][i] = 1;
        }
        if (coefficients[maxI][maxI] == coefficients[maxJ][maxJ]) {
            matricaPoworota[maxI][maxI] = matricaPoworota[maxJ][maxJ] =
                matricaPoworota[maxJ][maxI] = sqrt(2.0) / 2.0;
            matricaPoworota[maxI][maxJ] = -sqrt(2.0) / 2.0;
        }
        else {
            fi = 0.5 * atan((2.0 * coefficients[maxI][maxJ]) /
                (coefficients[maxI][maxI] - coefficients[maxJ][maxJ]));
            matricaPoworota[maxI][maxI] = matricaPoworota[maxJ][maxJ] = cos(fi);
            matricaPoworota[maxI][maxJ] = -sin(fi);
            matricaPoworota[maxJ][maxI] = sin(fi);
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                temp[i][j] = 0.0;
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                for (k = 0; k < numberOfEquation; k++) {
                    temp[i][j] = temp[i][j] + matricaPoworota[k][i] * coefficients[k][j];
                }
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                coefficients[i][j] = 0.0;
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                for (k = 0; k < numberOfEquation; k++) {
                    coefficients[i][j] = coefficients[i][j] +
                        temp[i][k] * matricaPoworota[k][j];
                }
            }
        }
        fault = 0.0;
        for (i = 0; i < numberOfEquation; i++) {
            for (j = i + 1; j < numberOfEquation; j++) {
                fault = fault + coefficients[i][j] * coefficients[i][j];
            }
        }
        fault = sqrt(2 * fault);
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                temp[i][j] = 0.0;
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                for (k = 0; k < numberOfEquation; k++) {
                    temp[i][j] = temp[i][j] + solution[i][k] * matricaPoworota[k][j];
                }
            }
        }
        for (i = 0; i < numberOfEquation; i++) {
            for (j = 0; j < numberOfEquation; j++) {
                solution[i][j] = temp[i][j];
            }
        }
        result++;
    }
    return result;
}

using namespace std;

int main() {
    setlocale(LC_ALL, ""rus"");
    int i, j;
    int size;
    double** coefficients, ** solution, precision;
    cout << ""Метод вращения Якоби.\nВведите размерность матрицы: "";
    cin >> size;
    cout << ""\nВведите элементы матрицы: \n"";
    coefficients = new double* [size];
    solution = new double* [size];
    for (i = 0; i < size; i++) {
        coefficients[i] = new double[size];
        solution[i] = new double[size];
    }
    for (i = 0; i < size; i++) {
        for (j = 0; j < size; j++) {
            solution[i][j] = 0;
        }
        solution[i][i] = 1;
    }
    for (i = 0; i < size; i++) {
        cout <<  ""Enter "" <<
            i + 1 <<  "" row: "";
        for (j = 0; j < size; j++) {
            cin >> coefficients[i][j];
        }
    }
    cout << ""Введите точность расчета: "";
    cin >> precision;
    if (!isSimmetrial(coefficients, size)) {
        cout << ""Матрица не симметричная"";
    }
    else {
        int steps = wrachenie(coefficients, size, solution, precision);
        cout << ""Reshenie:\n"";
        for (i = 0; i < size; i++) {
            cout << ""Собственный вектор k "" << 
                i + 1 << "":\n"";
            for (j = 0; j < size; j++) {
                cout << solution[j][i] << 
                    ""\n"";
            }
        }
        cout <<  ""Собственные значения:\n"";
        for (i = 0; i < size; i++) {
            cout <<  coefficients[i][i] <<
                ""\n"";
        }
        cout << ""Общее число шагов: "" <<
            steps;
    }
    cout << ""\nPress \""Enter\"" to continue..."" <<
        endl;
    
    return 0;
}"
Ts22G4QT,Untitled,drakon-firestone,Lua,Sunday 15th of October 2023 07:30:49 AM CDT,"-- animacja ataku peta chodzącego
pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(CFrame.new(position, lookAt) *
					CFrame.new(0, 1 + sin, 0) * CFrame.fromEulerAnglesXYZ(0,0,cos),0.1))


-- animacja ataku peta latającego
pet:SetPrimaryPartCFrame(pet.PrimaryPart.CFrame:Lerp(CFrame.new(position, lookAt) *
					CFrame.new(0, 3 + math.sin(time()*7)/2, 0) * CFrame.fromEulerAnglesXYZ(cos,0,0) ,0.1))"
uRpR55VH,Untitled,andhacker,Pascal,Sunday 15th of October 2023 07:23:19 AM CDT,"var
  s, ns:string;
  i, num10: integer;
  
function bin2dec(s:string):integer;
var
  nums: String;
  i:integer;
begin
   nums:='01';
   result:=0;
   for i:=1 to length(S) do
    result:=result+(pos(S[i],nums)-1)*round(Exp((length(S)-i)*Ln(2)));
end;
  
begin
  read(s);
  s := LowerCase(s);
  ns := '';
 
  i := 1;
  while (i < length(s) - 1) do // цикл по всей строке
  begin
    if ((i + 2 <= length(s)) and (s[i] = 'o') and (s[i + 1] = 'n') and (s[i + 2] = 'e')) then 
    begin
      ns := ns + '1';
      i := i + 3;
    end
    else
    if ((i + 3 <= length(s)) and (s[i] = 'z') and (s[i + 1] = 'e') and (s[i + 2] = 'r') and (s[i + 3] = 'o')) then
    begin
      ns := ns + '0';
      i := i + 4;
    end
    else
      inc(i);
  end;
  
  writeln(IntToStr(bin2dec(ns)));
end."
3hT7xbJu,Energy Control Script,slanda,Lua,Sunday 15th of October 2023 07:22:25 AM CDT,"local monitor = peripheral.wrap(""monitor_6"") -- Adjust if necessary
local reactor = peripheral.wrap(""BiggerReactor_Reactor_1"") -- Adjust if necessary
local fissionReactor = peripheral.wrap(""fissionReactorLogicAdapter_0"") -- Adjust if necessary
local redstoneIntegrator = peripheral.wrap(""redstone_integrator_14"")
local inductionPort = peripheral.wrap(""inductionPort_3"") -- Adjust as necessary

-- Thresholds for safety
local TEMP_THRESHOLD = 900  -- Change to desired max temperature
local DAMAGE_THRESHOLD = 75 -- Change to desired max damage percentage (0-100)

-- Define button positions and labels
local buttons = {
    reactorToggle = {x1 = 2, y1 = 15, x2 = 12, y2 = 17, state = reactor.getActive(), labelOn = ""Turn OFF"", labelOff = ""Turn ON""},
    fissionToggle = {x1 = 14, y1 = 15, x2 = 24, y2 = 17, state = fissionReactor.getStatus(), labelOn = ""Scram"", labelOff = ""Activate""}
}

local function drawButton(button)
    local label = button.state and button.labelOn or button.labelOff
    local color = button.state and colors.red or colors.green
    monitor.setBackgroundColor(color)
    monitor.setCursorPos(button.x1, button.y1)
    for y = button.y1, button.y2 do
        monitor.setCursorPos(button.x1, y)
        monitor.clearLine()
    end
    monitor.setCursorPos(button.x1 + 1, button.y1 + 1)
    monitor.write(label)
    monitor.setBackgroundColor(colors.black)
end

local function handleTouch()
    local _, _, x, y = os.pullEvent(""monitor_touch"")
    for k, button in pairs(buttons) do
        if x >= button.x1 and x <= button.x2 and y >= button.y1 and y <= button.y2 then
            button.state = not button.state
            if k == ""reactorToggle"" then
                reactor.setActive(button.state)
            elseif k == ""fissionToggle"" then
                if button.state then
                    fissionReactor.scram()
                else
                    fissionReactor.activate()
                end
            end
            drawButton(button)
        end
    end
end

while true do
    monitor.clear()
    monitor.setCursorPos(1,1)

    -- Display Big Reactor info and control
    monitor.write(""Big Reactor Energy: ""..reactor.getEnergyStored().."" RF"")
    monitor.setCursorPos(1,2)
    monitor.write(""Fuel Temp: ""..reactor.getFuelTemperature()..""C"")
    monitor.setCursorPos(1,3)
    monitor.write(""Casing Temp: ""..reactor.getCasingTemperature()..""C"")
    monitor.setCursorPos(1,4)
    monitor.write(""Reactivity: ""..reactor.getFuelReactivity()..""%"")
    
    -- Display Mekanism Fission Reactor info and control
    monitor.setCursorPos(1,6)
    monitor.write(""Fission Reactor Temp: ""..fissionReactor.getTemperature()..""C"")
    monitor.setCursorPos(1,7)
    monitor.write(""Damage: ""..fissionReactor.getDamagePercent()..""%"")
    monitor.setCursorPos(1,8)
    monitor.write(""Burn Rate: ""..fissionReactor.getBurnRate())
    
    -- Display Induction Matrix
    local storedEnergyPercent = inductionPort.getEnergyFilledPercentage()
    local inputRate = inductionPort.getLastInput()
    local outputRate = inductionPort.getLastOutput()
    monitor.setCursorPos(1,10)
    monitor.write(""Induction Matrix Energy: ""..storedEnergyPercent..""%"")
    monitor.setCursorPos(1,11)
    monitor.write(""Input Rate: ""..inputRate)
    monitor.setCursorPos(1,12)
    monitor.write(""Output Rate: ""..outputRate)

    drawButton(buttons.reactorToggle)
    drawButton(buttons.fissionToggle)

    -- Safety and Control Checks
    -- Check Fission Reactor for safety conditions
    local temp = fissionReactor.getTemperature()
    local damage = fissionReactor.getDamagePercent()
    if temp > TEMP_THRESHOLD or damage > DAMAGE_THRESHOLD then
        fissionReactor.scram()
        buttons.fissionToggle.state = true
        drawButton(buttons.fissionToggle)
    end

    -- Check if Induction Matrix is full and if so, turn off Big Reactor
    if inductionPort.getEnergyFilledPercentage() >= 100 then
        reactor.setActive(false)
        buttons.reactorToggle.state = false
        drawButton(buttons.reactorToggle)
    end

    -- Check redstone signal from the integrator to control the Big Reactor
    if redstoneIntegrator.getInput(""back"") == 15 then
        reactor.setActive(false)
        buttons.reactorToggle.state = false
        drawButton(buttons.reactorToggle)
    end

    handleTouch() -- Wait for a touch event and handle it
    sleep(1)
end
"
vGw1xD93,DU чм. лаба 1 (доработать),VladimirKostovsky,C++,Sunday 15th of October 2023 07:19:37 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

void LU(vector <vector <double>> A, vector <vector <double>>& L,
	vector <vector <double>>& U, int n)
{
	U = A;

	for (int i = 0; i < n; i++)
		for (int j = i; j < n; j++)
			L[j][i] = U[j][i] / U[i][i];

	for (int k = 1; k < n; k++)
	{
		for (int i = k - 1; i < n; i++)
			for (int j = i; j < n; j++)
				L[j][i] = U[j][i] / U[i][i];

		for (int i = k; i < n; i++)
			for (int j = k - 1; j < n; j++)
				U[i][j] = U[i][j] - L[i][k - 1] * U[k - 1][j];
	}

}

void proisv(vector <vector <double>> A, vector <vector <double>> B,
	vector <vector <double>>& R, int n)
{
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			for (int k = 0; k < n; k++)
				R[i][j] += A[i][k] * B[k][j];
}

void show(vector <vector <double>> A, int n)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << A[i][j] << "" "";
		}
		cout << endl;
	}
}
int main()
{
	const int n = 20;
	vector <vector <double>> A(n, vector<double>(n)), L(n, vector<double>(n)),
		U(n, vector<double>(n)), R(n, vector<double>(n));
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (i == j) {
				A[i][j] = 100;
			}
			else {
				A[i][j] = 1 + i - j;
			}
		}
	}
	LU(A, L, U, n);
	cout << ""First matrix"" << endl;
	show(A, n);
	cout << ""U matrix"" << endl;
	show(U, n);
	cout << ""L matrix"" << endl;
	show(L, n);
	proisv(L, U, R, n);
	cout << ""L*U matrix"" << endl;
	show(R, n);
	return 0;
}"
PTpLw1eb,Simple,fsoc131y,Java,Sunday 15th of October 2023 07:17:30 AM CDT,"Exp1:
import java.io.*;
import java.util.Scanner;

class exp1 {
    public static void main(String args[]) throws IOException {
        String choice;
        Scanner d = new Scanner(System.in);
        for(int i = 0;i<2;i++){
        System.out.println(""Welcome to the E-mart!"");
        }
        int ab = 0;
        while(ab<2){
   System.out.println(""Welcome dear customer"");
            ab++;
}
        do {
            System.out.print(""\nEnter the budget amount: "");
            int a = d.nextInt();
            if (a == 0) {
                System.out.println(""Nothing can be purchased for free."");
                System.out.println(""Thanks for visiting!"");
            } else if (a <= 1200) {
                System.out.println(""You can purchase some groceries and some clothes."");
            } else if( a>1200 && a<=2000){
                System.out.println(""You can purchase shoes and ties"");
            } else if(a>2000 && a<=3000){
System.out.println("" You can buy some suits"");
            } else {
                System.out.println(""Items are being added"");
                System.out.println(""Thanks for visiting"");
            }
            d.nextLine();
            System.out.print(""Enter if you want to order? (Y/N): "");
            choice = d.nextLine();
        } while (choice.equalsIgnoreCase(""y""));
        d.close();
    }
}

Exp2:
//switch cases
import java.util.Scanner;

public class exp2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println(""Welcome to the E-Commerce Store!"");
        System.out.println(""Select a product to view its price:"");
        System.out.println(""1. Laptop"");
        System.out.println(""2. Smartphone"");
        System.out.println(""3. Headphones"");
        System.out.println(""4. Exit"");

        int choice;
        do {
            System.out.print(""Enter your choice (1-4): "");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.println(""Laptop: $800"");
                    break;
                case 2:
                    System.out.println(""Smartphone: $500"");
                    break;
                case 3:
                    System.out.println(""Headphones: $50"");
                    break;
                case 4:
                    System.out.println(""Thank you for visiting the store!"");
                    break;
                default:
                    System.out.println(""Invalid choice. Please enter a valid option."");
            }
        } while (choice != 4);

        scanner. Close();
    }
}

Exp3:
//arrays
import java.io.*;
import java.util.Scanner;
 
class exp3 {
    public static void main(String args[]) throws IOException {
        Scanner d = new Scanner(System.in);
        String num[] = {""Soap"", ""Pencil"", ""Notebook"", ""Detergent(1 Kg)"", ""Pen"", ""Clothes""};
 
        System.out.println(""Item present in List"");
        for (int i = 0; i < num.length; i++) {
            System.out.println((i + 1) + "". "" + num[i]);
        }
 
        System.out.print(""Enter how many items you want to add: "");
        int m = d.nextInt();
        d.nextLine();
 
        String arr[][] = new String[m][2];
        for (int j = 0; j < m; j++) {
            System.out.print(""Enter the item "" + (j + 1) + "": "");
            arr[j][0] = d.nextLine();
            System.out.print(""Enter the quantity: "");
            arr[j][1] = d.nextLine();
        }
 
        boolean itemsMatch = true;
        for (int j = 0; j < m; j++) {
            boolean found = false;
            for (int i = 0; i < num.length; i++) {
                if (arr[j][0].equalsIgnoreCase(num[i])) {
                    found = true;
                    break;
                }
            }
            if (!found) {
                itemsMatch = false;
                break;
            }
        }
 
        if (itemsMatch) {
            System.out.println(""\nYour item\tQuantity\tPrice"");
            for (int j = 0; j < m; j++) {
                double price = calculatePrice(arr[j][0].toLowerCase(), Integer.parseInt(arr[j][1]));
                System.out.println(arr[j][0] + ""\t\t"" + arr[j][1] + ""\t\t$"" + price);
            }
        } else {
            System.out.println(""Your item list doesn't match with the items in the store."");
        }
            d.close();
    }
 
    private static double calculatePrice(String item, int quantity) {
        double pricePerUnit;
        switch (item) {
            case ""soap"":
                pricePerUnit = 1.0;
                break;
            case ""pencil"":
                pricePerUnit = 0.5;
                break;
            case ""notebook"":
                pricePerUnit = 2.0;
                break;
            case ""detergent(1 kg)"":
                pricePerUnit = 3.5;
                break;
            case ""pen"":
                pricePerUnit = 1.2;
                break;
            case ""clothes"":
                pricePerUnit = 10.0;
                break;
            default:
                pricePerUnit = 0.0; // Item not found in the list
        }
 
        return pricePerUnit * quantity;
    }
}

Exp4:
//method and constructor overloading
class Product{
      String name;
      double price;
      Product(String name,double price){
              this.name=name; 
              this.price=price;
      }
      String getname(){
               return name;
      }
      double getprice(){
               return price;
      }
      void display(){
               System.out.println(""Product: ""+name);
               System.out.println(""Price: $""+price);
}
}
class shopc{
      int icount;
      double tamount;
      shopc(){
           icount=0;
           tamount=0.0;
      }
      void addc(Product product){
           icount++;
           tamount+=product.getprice();
           System.out.println(product.getname()+"" added to cart"");
      }
      void addc(Product product,int qty){
           icount+=qty;
           tamount+=product.getprice()*qty;
           System.out.println(qty+""""+product.getname()+"" added to cart"");
      }
      float display(int a, float b){
           /*System.out.println(""Shopping Cart:"");
           System.out.println(""Total Items: "" + icount);
           System.out.println(""Total Amount: $"" + tamount);*/
           return (a+b);
      }
}
class exp4{
      public static void main(String args[]){
             Product laptop = new Product(""Laptop"",1000.0);
             Product phone = new Product(""Smartphone"",500.0);
             shopc cart = new shopc();
             cart.addc(laptop);
             cart.addc(phone,2);
             System.out.println(cart.display(12,(float)32.5));
}
}

Exp5:
//exception handling
import java.util.Scanner;

class Billing {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter the bill amount: "");
        double billAmount = scanner.nextDouble();

        System.out.print(""Enter your credit card number: "");
        String cardNumber = scanner.next();

        try {
            validateCreditCard(cardNumber);
            processPayment(billAmount);
            System.out.println(""Payment successful. Thank you for shopping!"");
        } catch (InvalidCreditCardException e) {
            System.out.println(""Payment failed: "" + e.getMessage());
        }
        scanner.close();
    }

    static void validateCreditCard(String cardNumber) throws InvalidCreditCardException {
        if (cardNumber.length() > 16) {
            throw new InvalidCreditCardException(""Card number is too long."");
        }

        if (!isVisaOrMastercard(cardNumber)) {
            throw new InvalidCreditCardException(""Card not issued by Visa/Mastercard."");
        }
    }

    static boolean isVisaOrMastercard(String cardNumber) {
        // You can implement your card type detection logic here.
        // For simplicity, we assume Visa and Mastercard numbers start with 4 and 5.
        return cardNumber.startsWith(""4"") || cardNumber.startsWith(""5"");
    }

    static void processPayment(double amount) {
        // This method would process the payment, but for this example, we'll just print a message.
        System.out.println(""Processing payment of $"" + amount);
    }
}

class InvalidCreditCardException extends Exception {
    public InvalidCreditCardException(String message) {
        super(message);
    }
}

Exp6:
//packages
//main driver code
package Packages;

public class ecommerce {
    public static void main(String[] args) {
        // Create some sample products
        Product product1 = new Product(101, ""Laptop"", 799.99);
        Product product2 = new Product(102, ""Smartphone"", 299.99);
        Product product3 = new Product(103, ""Headphones"", 49.99);

        // Create a shopping cart
        ShoppingCart cart = new ShoppingCart();

        // Add products to the cart
        cart.addProduct(product1, 2);
        cart.addProduct(product2, 1);
        cart.addProduct(product3, 3);

        // Display the contents of the shopping cart
        System.out.println(""Shopping Cart Contents:"");
        cart.displayCart();

        // Create an order from the shopping cart
        Order order = new Order(cart);

        // Display the order details
        System.out.println(""\nOrder Details:"");
        order.displayOrder();
    }
}

//package - separate file
package Packages;

import java.util.Date;

public class Order {
    private ShoppingCart cart;
    private Date orderDate;

    public Order(ShoppingCart cart) {
        this.cart = cart;
        this.orderDate = new Date();
    }

    public void displayOrder() {
        System.out.print(""Order Date: "" + orderDate);
        System.out.println(""\n"");
        System.out.println(""Order Items:"");
        cart.displayCart();
    }
}

//package
package Packages;

public class Product {
    private int id;
    private String name;
    private double price;

    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    // Getters and setters for id, name, and price

    public String toString() {
        return name + "" (ID: "" + id + "", Price: Rs. "" + price + "")"";
    }
}

//package
package Packages;

import java.util.HashMap;
import java.util.Map;

public class ShoppingCart {
    private Map<Product, Integer> items;

    public ShoppingCart() {
        items = new HashMap<>();
    }

    public void addProduct(Product product, int quantity) {
        items.put(product, quantity);
    }

    public void displayCart() {
        for (Map.Entry<Product, Integer> entry : items.entrySet()) {
            Product product = entry.getKey();
            int quantity = entry.getValue();
            System.out.println(product + "" x"" + quantity);
        }
    }
}

Master (except packages):
import java.util.Scanner;

public class ECommerceDemo {

    // 1. Entry Exit Control Loop
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println(""E-Commerce Application Menu"");
            System.out.println(""1. Browse Products"");
            System.out.println(""2. Add to Cart"");
            System.out.println(""3. View Cart"");
            System.out.println(""4. Checkout"");
            System.out.println(""5. Exit"");

            System.out.print(""Enter your choice: "");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    browseProducts();
                    break;
                case 2:
                    addToCart();
                    break;
                case 3:
                    viewCart();
                    break;
                case 4:
                    checkout();
                    break;
                case 5:
                    System.out.println(""Exiting the application."");
                    break;
                default:
                    System.out.println(""Invalid choice. Please try again."");
            }
        } while (choice != 5);
    }

    // 2. Switch Case with Nested Switch Case
    static void browseProducts() {
        System.out.println(""Browse Products Menu"");
        System.out.println(""1. Electronics"");
        System.out.println(""2. Clothing"");
        System.out.println(""3. Back to Main Menu"");

        Scanner scanner = new Scanner(System.in);
        int choice = scanner.nextInt();

        switch (choice) {
            case 1:
                System.out.println(""Electronics Section"");
                break;
            case 2:
                System.out.println(""Clothing Section"");
                break;
            case 3:
                System.out.println(""Returning to the Main Menu"");
                break;
            default:
                System.out.println(""Invalid choice. Please try again."");
        }
    }

    // 3. Arrays - 1D and 2D
    static void viewCart() {
        String[] cartItems = {""Laptop"", ""T-Shirt"", ""Headphones"", ""Shoes""};

        System.out.println(""Items in Your Cart:"");
        for (String item : cartItems) {
            System.out.println(item);
        }

        int[][] itemQuantities = {{2, 1}, {3, 2}, {1, 1}, {2, 2}};

        System.out.println(""Quantity of Items in Your Cart:"");
        for (int i = 0; i < cartItems.length; i++) {
            System.out.println(cartItems[i] + "": "" + itemQuantities[i][0] + "" items, "" + itemQuantities[i][1] + "" in stock"");
        }
    }

    // 4. Constructor & Method Overloading
    static void addToCart() {
        String product = ""Laptop"";
        int quantity = 2;
        String seller = ""E-Store Inc"";

        addToCart(product, quantity);
        addToCart(product, quantity, seller);
    }

    static void addToCart(String product, int quantity) {
        System.out.println(quantity + "" "" + product + ""(s) added to your cart."");
    }

    static void addToCart(String product, int quantity, String seller) {
        System.out.println(quantity + "" "" + product + ""(s) from "" + seller + "" added to your cart."");
    }

    // 5. Exception Handling
    static void checkout() {
        try {
            // Simulate a checkout process
            int totalAmount = 1000;
            int availableBalance = 800;
            int remainingBalance = totalAmount - availableBalance;

            if (remainingBalance > 0) {
                throw new InsufficientBalanceException(""Insufficient balance! You need $"" + remainingBalance + "" more."");
            } else {
                System.out.println(""Checkout successful. Your order has been placed."");
            }
        } catch (InsufficientBalanceException e) {
            System.err.println(""Error: "" + e.getMessage());
        }
    }
}

class InsufficientBalanceException extends Exception {
    public InsufficientBalanceException(String message) {
        super(message);
    }
}
"
z3p689g1,lgame,TIMAS_Bro,Lua,Sunday 15th of October 2023 07:16:21 AM CDT,"--v2.1
local function update()
  shell.run(""delete"",""lg"")
  shell.run(""pastebin"",""get"",""sSF7NPYC"",""lg"")
  os.reboot()
end
local args = {...}
if (args[1] == ""update"") then
  update()
end
function setup(name)
  sx,sy = nil
  buttons = {}
  pixels = {}
  local bg = colors.black
  sprites = {}
  inputs = {}
  if (name == ""term"") then
    sx,sy = term.getSize()
  else
    m = peripheral.wrap(name)
    term.redirect(m)
    sx,sy = m.getSize()
  end
end
function exit()
  term.native()
end
function drawText(x,y,color,colorb,text)
  term.setCursorPos(x,y)
  term.setTextColor(color)
  term.setBackgroundColor(colorb)
  term.write(text)
end
function clearScreen()
  term.clear()
end
function setBackgroundColor(color)
  term.setBackgroundColor(color)
end
function setTextColor(color)
  term.setTextColor(color)
end
function drawBT(name,x,xe,y,ye,color,colorb,text)
  term.setBackgroundColor(colorb)
  term.setTextColor(color)
  for i=x,xe do
    for g=y,ye do
      term.setCursorPos(i,g)
      term.write("" "")
    end
  end
  textline = (y + ye) / 2
  textline = string.format(""%.1f"", textline)
  textline = tonumber(textline)
  lines = {}
  for word in string.gmatch(text,""[^\n]+"") do
     table.insert(lines,word)
  end
  if (#lines > 1) then
    for w=1,#lines do
      term.setCursorPos(x,y+w)
      term.write(lines[w])
    end
  else
    term.setCursorPos(x,textline)
    term.write(text)
  end
  table.insert(buttons,name.."";""..x.."";""..xe.."";""..y.."";""..ye)  
end
function isButton(x,y)
  for i=1,#buttons do
    local parts = {}
    for word in string.gmatch(buttons[i],""[^;]+"") do
      table.insert(parts,word)
    end
    name,bx,bxe,by,bye = parts[1],tonumber(parts[2]),tonumber(parts[3]),tonumber(parts[4]),tonumber(parts[5])
    if (bx-1 < x and x < bxe + 1 ) then
      if (by-1 < y and bye+1 > y) then
        return name
      end
    end
  end
  return false
end
function fill(x,x2,y,y2,color)
  term.setBackgroundColor(color)
  for i=x,x2 do
    for g=y,y2 do
      term.setCursorPos(i,g)
      pixels[x..y] = color
      term.write("" "")
    end
  end
end
function fillScreen(color)
  term.setBackgroundColor(color)
  term.clear()
  pixels = {}
end
function drawImage(x,y,name)
  image = paintutils.loadImage(name)
  paintutils.drawImage(image,x,y)
end
function getSize()
  local sizet = {}
  sizet.x = sx
  sizet.y = sy
  return sizet
end
function drawInput(name,x,x2,y,y2,limit)
  term.setBackgroundColor(colors.gray)
  term.setTextColor(colors.white)
  for i=x,x2 do
    for g=y,y2 do
      term.setCursorPos(i,g)
      term.write("" "")
    end
  end
  table.insert(inputs,name.."";""..x.."";""..x2.."";""..y.."";""..y2.."";""..limit)
end
function isInput(x,y)
  for i=1,#inputs do
    local parts = {}
    for word in string.gmatch(inputs[i],""[^;]+"") do
      table.insert(parts,word)
    end
    name,bx,bxe,by,bye = parts[1],tonumber(parts[2]),tonumber(parts[3]),tonumber(parts[4]),tonumber(parts[5])
    if (bx-1 < x and x < bxe + 1 ) then
      if (by-1 < y and bye+1 > y) then
        return name
      end
    end
  end
  return false
end	
function getInput(x,y)
  for i=1,#inputs do
    local parts = {}
    for word in string.gmatch(inputs[i],""[^;]+"") do
      table.insert(parts,word)
    end
    name,bx,bxe,by,bye,limit = parts[1],tonumber(parts[2]),tonumber(parts[3]),tonumber(parts[4]),tonumber(parts[5]),tonumber(parts[6])
    if (bx-1 < x and x < bxe + 1 ) then
      if (by-1 < y and bye+1 > y) then
        term.setCursorPos(bx,by)
        local text = limitRead(limit)
        return text
      end
    end
  end
  return false
end
function lggSetDefBG(color)
  bg = color
end
function drawSprite(name,x,y,iname)
  image = paintutils.loadImage(iname)
  paintutils.drawImage(image,x,y)
  table.insert(sprites,name.."";""..x.."";""..y.."";""..iname)
end
function moveSprite(name,x,y)
  for h=1,#sprites do
    local parts = {}
    term.setBackgroundColor(colors.black)
    for word in string.gmatch(sprites[h],""[^;]+"") do
      table.insert(parts,word)
    end
    if (parts[1] == name) then
    local iname = nil
    local name,ox,oy,iname = parts[1],tonumber(parts[2]),tonumber(parts[3]),parts[4]
    image = paintutils.loadImage(iname)
    term.setCursorPos(10,1)
    term.setBackgroundColor(colors.black)
    for i=ox,ox+getWidth(image) do
      for g=oy,oy+getHeight(image) do
        if (pixels[i..g] ~= nil) then
          term.setCursorPos(i,g)
          term.setBackgroundColor(pixels[i..g])
          term.write("" "")
        else
          term.setCursorPos(i,g)
          term.setBackgroundColor(bg)
          term.write("" "")
        end
      end
    end
    paintutils.drawImage(image,x,y)
    table.remove(sprites,h)
    table.insert(sprites,name.."";""..x.."";""..y.."";""..iname)    
    else
    end
  end
  return false
end
function getSpriteColider(name)
  for h=1,#sprites do
    local parts = {}
    term.setBackgroundColor(colors.black)
    for word in string.gmatch(sprites[h],""[^;]+"") do
      table.insert(parts,word)
    end
    if (parts[1] == name) then
    local iname = nil
    local name,ox,oy,iname = parts[1],tonumber(parts[2]),tonumber(parts[3]),parts[4]
    image = paintutils.loadImage(iname)
    local sizet = {}
    sizet.x = ox
    sizet.y = oy
    sizet.x2 = ox + getWidth(image)
    sizet.y2 = oy + getHeight(image)
    return sizet
    else
    end
  end
  return false
end
function isColiding(name, name2)
  for h=1,#sprites do
    local parts = {}
    term.setBackgroundColor(colors.black)
    for word in string.gmatch(sprites[h],""[^;]+"") do
      table.insert(parts,word)
    end
    if (parts[1] == name) then
      local iname = nil
      local nameo,ox,oy,iname = parts[1],tonumber(parts[2]),tonumber(parts[3]),parts[4]
      image = paintutils.loadImage(iname)
      local sizet = {}
      sizet.x = ox
      sizet.y = oy
      sizet.x2 = ox + getWidth(image)
      sizet.y2 = oy + getHeight(image)
      local allCord = {}
      for a=sizet.x,sizet.x2 do
        for b=sizet.y,sizet.y2 do
          table.insert(allCord,a.."";""..b)
        end
      end
      for g=1,#sprites do
        local parts2 = {}
        for word2 in string.gmatch(sprites[g],""[^;]+"") do
          table.insert(parts2,word2)
        end
        local nameo2,ox2,oy2,iname2 = parts2[1],tonumber(parts2[2]),tonumber(parts2[3]),parts2[4]
        image2 = paintutils.loadImage(iname2)
        ox22 = ox2 + getWidth(image2)
        oy22 = oy2 + getHeight(image2)
        if (nameo2 == name2) then
      		local allCord2 = {}
      		for a=ox2,ox22 do
        		for b=oy2,oy22 do
         		table.insert(allCord2,a.."";""..b)
        	end
            end
            for i=1,#allCord do
              for g=1,#allCord2 do
                if (allCord[i] == allCord2[g]) then
                   return true
                end
              end
            end
        end
    end
    end
  end
  return false
end


















-- FUNC
function limitRead(limX, rChar,color,colorb)
  		term.setBackgroundColor(colors.gray)
  		term.setTextColor(colors.white)
        term.setCursorBlink(true)
        local origX, origY = term.getCursorPos()
        local returnString = """"
        while true do
                local xPos, yPos = term.getCursorPos()
                local event, p1, p2 = os.pullEvent()
                if event == ""char"" then
                        returnString = returnString..p1
                        if not rChar then
                                if not limX then
                                        write(p1)
                                else
                                        if string.len(returnString) >= limX then
                                                term.setCursorPos(origX, origY)
                                                write(string.sub(returnString, (string.len(returnString)-limX)+1))
                                        elseif string.len(returnString) < limX then
                                                write(p1)
                                        end
                                end
                        else
                                if not limX then
                                        write(rChar)
                                else
                                        if string.len(returnString) >= limX then
                                                term.setCursorPos(origX, origY)
                                                write(string.rep(rChar, limX))
                                        elseif string.len(returnString) < limX then
                                                write(rChar)
                                        end
                                end
                        end
                elseif event == ""key"" and p1 == 259 then --backspace
                        returnString = string.sub(returnString, 1, (string.len(returnString))-1)
                        term.setCursorPos(xPos-1,yPos)
                        write("" "")
                        term.setCursorPos(origX, origY)
                        if string.len(returnString) >= limX then
                                if not rChar then
                                        write(string.sub(returnString, (string.len(returnString)-limX)+1))
                                else
                                        write(string.rep(rChar,limX))
                                end
                        else
                                if not rChar then
                                        write(returnString)
                                else
                                        write(string.rep(rChar, string.len(returnString)))
                                end
                        end
                elseif event == ""key"" and p1 == 257 then --enter
                        break
                end
        end
        term.setCursorBlink(false)
        return returnString
end
function getHeight( image )
  --# init the image start and end variables, these are what track where the start and end are
  local imgStart = #image --# we need to start at the end so we can apply math.min
  local imgEnd = 0 --# we need to start at the start so we can apply math.max
  --# loop through the table
  for index,imageLine in ipairs(image) do
        --# create a variable to hold if the line has a pixel
        local isLine = false
        --# loop through the pixels in the line
        for i,pixel in ipairs(imageLine) do
          --# if the pixel is drawable
          if pixel ~= 0 then
                --# record that there is a pixel, and exit the loop, no need to check anymore, we know there is at least 1
                isLine = true
                break
          end
        end
        --# if the line has pixels, check if its the start or end
        if isLine then
          imgStart = math.min(imgStart,index)
          imgEnd = math.max(imgEnd,index)
        end
  end
  --# return the height of the image, which is the end plus the start, plus 1 because tables start at index 1 not 0
  return imgEnd - imgStart + 1
end
function getWidth(img)
  --# the max width
  local maxWidth = 0
  --# loop through the image
  for i,line in pairs(img) do
        --# the variable to hold where the line starts
        local lineStart = #line --# start it at the end so we can apply math.min
        --# the variable to hold where the line ends
        local lineEnd = 0 --# start at the start so we can apply math.max
        --# loop the line
        for index,v in pairs(line) do
          --# if its a pixel
          if v ~= 0 then
                --# check if its the start or the end of the line
                lineStart = math.min(lineStart,index)
                lineEnd = math.max(lineEnd,index)
          end
        end
        --# the length of the line is the end minus the start positions, +1 because tables start at index 1 not 0
        local length = lineEnd - lineStart + 1
        --# check if its the max length
        maxWidth = math.max(maxWidth, length)
  end
  --# return the max length
  return maxWidth
end"
60NvKy22,Untitled,Stawlie0,C++,Sunday 15th of October 2023 07:08:57 AM CDT,"    require(""package"").loaded[""doublebuffer""] = nil
    require(""package"").loaded[""control""] = nil
    require(""package"").loaded[""casino""] = nil
    require(""package"").loaded[""sgui""] = nil
    
    local controlLib = require(""control"")
    local charSpace = ' '
    
    local component = require(""component"")
    local computer = require(""computer"")
    local event = require(""event"")
    local unicode = require(""unicode"")
    local thread = require(""thread"")
    
    local Casino = require(""casino"")
    local gui = require(""sgui"")
    
    local gpu = component.gpu
    local radar = component.radar
    local chatbox = component.chat_box
    
    chatbox.setName(""§6BAZAR CASINO§7§o"")
    chatbox.say(""§aМодули успешно загружены"")
    
    local width, height = gpu.getResolution()
    
    gpu.setResolution(112,50)
    
    local win = {}
    --Резервируем места
    local function reservWin()
        local x = 10 -- начальная Координата x
        local y = 6  -- начальная координата y
        for i = 1, 63 do
            local id = controlLib.createLabel{
                x = x;
                y = y;
                text = """"
            }
            table.insert(win, id)
            x = x + 36 
            if x > 108 then
                x = 10
                y = y+2
            end
        end
        local id = controlLib.createLabel{
            x = 46;
            y = y;
            text = """"
        } 
        table.insert(win, id)
    end
    
    reservWin()
    
    local function ClearWin()
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = """"
            })
        end
    end
    
    local myCasino = Casino:new()
    
    myCasino:addItem(""&fАккумулятор"", ""contenttweaker:modelbatre"", 1, 0.99)
    myCasino:addItem(""&fЭнергетический кристалл"", ""contenttweaker:modelbatcrystal"", 1, 0.99)
    myCasino:addItem(""&f8-битный чип"", ""contenttweaker:chip_8bit"", 1, 0.99)
    myCasino:addItem(""&fФрагметное завихрение"", ""contenttweaker:blakk_vw"", 1, 0.99)
    myCasino:addItem(""&fУглепластик"", ""Carbon Plate"", 1, 0.99)
    myCasino:addItem(""&fКомпозит"", ""Advanced Alloy"", 1, 0.99)
    myCasino:addItem(""&fЭлектросхема"", ""Electronic Circuit"", 1, 0.99)
    myCasino:addItem(""&fУлучшенная Электросхема"", ""Advanced Circuit"", 1, 0.99)
    myCasino:addItem(""&fОбсидиан"", ""minecraft:obsidian"", 32, 0.99)
    
    myCasino:addItem(""&bЛогический процессор"", ""Logic Processor"", 1, 0.4)
    myCasino:addItem(""&bЛазуротроновый Кристалл"", ""contenttweaker:modelbatlamacrystal"", 1, 0.4)
    myCasino:addItem(""&b16-битный чип"", ""contenttweaker:chip_16bit"", 1, 0.4)
    myCasino:addItem(""&bУскоритель"", ""Overclocker Upgrade"", 1, 0.4)
    myCasino:addItem(""&bТрансформатор"", ""Transformer Upgrade"", 1, 0.4)
    myCasino:addItem(""&bПанель 2-го уровня"", ""Low Voltage Solar Array"", 1, 0.4)
    myCasino:addItem(""&bИридиевая руда"", ""Iridium Ore"", 1, 0.4)
    myCasino:addItem(""&bЭндер-Жемчуг"", ""minecraft:ender_pearl"", 16, 0.4)
    myCasino:addItem(""&bРэдстоуновая руда"", ""minecraft:redstone_ore"", 48, 0.4)
    
    myCasino:addItem(""&bФлаксовый разъем"", ""fluxnetworks:fluxplug"", 1, 0.4)
    myCasino:addItem(""&bФлаксовый контроллер"", ""fluxnetworks:fluxcontroller"", 1, 0.4)
    myCasino:addItem(""&b32-битный чип"", ""contenttweaker:chip_32bit"", 1, 0.4)
    myCasino:addItem(""&bЗавихрение Виверны"", ""contenttweaker:drei_vw"", 1, 0.4)
    myCasino:addItem(""&bАметист"", ""contenttweaker:amethyst"", 1, 0.4)
    myCasino:addItem(""&bНуклеус Виверны"", ""contenttweaker:vyverncore_vw"", 1, 0.4)
    myCasino:addItem(""&bЯдро Дракона"", ""draconicevolution:draconic_core"", 1, 0.4)
    myCasino:addItem(""&bПлутоний"", ""Plutonium"", 4, 0.4)
    myCasino:addItem(""&bЯйцо Дракона"", ""minecraft:dragon_egg"", 1, 0.4)
    
    myCasino:addItem(""&dФлакс Точка"", ""fluxnetworks:fluxpoint"", 1, 0.2)
    myCasino:addItem(""&dФлаксобур Основной"", ""Fluxbore (Basic)"", 1, 0.2)
    myCasino:addItem(""&dСовершенная материя"", ""ic2stuff:pf_matter"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный шлем"", ""ic2:nano_helmet"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Жилет"", ""ic2:nano_chestplate"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Поножи"", ""ic2:nano_leggings"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный Ботинки"", ""ic2:nano_boots"", 1, 0.2)
    myCasino:addItem(""&dПереносная ячейка"", ""appliedenergistics2:portable_cell"", 1, 0.2)
    myCasino:addItem(""&dЗвезда Ада"", ""minecraft:nether_star"", 1, 0.2)
    
    myCasino:addItem(""&dПанель 3-го уровня"", ""Medium Voltage Solar Array"", 1, 0.2)
    myCasino:addItem(""&dФлаксобур Резонирующий"", ""Fluxbore (Resonant)"", 1, 0.2)
    myCasino:addItem(""&d64-битный чип"", ""contenttweaker:chip_64bit"", 1, 0.2)
    myCasino:addItem(""&dЗавихрение Дракона"", ""contenttweaker:vier_vw"", 1, 0.2)
    myCasino:addItem(""&dНановолоконный нагрудник"", ""gravisuite:advancednanochestplate"", 1, 0.2)
    myCasino:addItem(""&dНуклеус Дракона"", ""contenttweaker:dragoncore_vw"", 1, 0.2)
    myCasino:addItem(""&dЯдро Виверны"", ""draconicevolution:wyvern_core"", 1, 0.2)
    myCasino:addItem(""&dПыль Синерия"", ""Synerium Dust"", 16, 0.2)
    myCasino:addItem(""&dСердце Дракона"", ""draconicevolution:dragon_heart"", 1, 0.2)
    
    myCasino:addItem(""&cКонденсатор Виверны"", ""Wyvern Flux Capacitor"", 1, 0.1)
    myCasino:addItem(""&cМеч Виверны"", ""draconicevolution:wyvern_sword"", 1, 0.1)
    myCasino:addItem(""&cЛук Виверны"", ""draconicevolution:wyvern_bow"", 1, 0.1)
    myCasino:addItem(""&cКирка Виверны"", ""draconicevolution:wyvern_pick"", 1, 0.1)
    myCasino:addItem(""&cТопор Виверны"", ""draconicevolution:wyvern_axe"", 1, 0.1)
    myCasino:addItem(""&cШлем Виверны"", ""draconicevolution:wyvern_helm"", 1, 0.1)
    myCasino:addItem(""&cНагрудник Виверны"", ""draconicevolution:wyvern_chest"", 1, 0.1)
    myCasino:addItem(""&cПоножи Виверны"", ""draconicevolution:wyvern_legs"", 1, 0.1)
    myCasino:addItem(""&cБотинки Виверны"", ""draconicevolution:wyvern_boots"", 1, 0.1)
    
    myCasino:addItem(""&4Конденсатор Дракона"", ""Draconic Flux Capacitor"", 1, 0.03)
    myCasino:addItem(""&4Меч Дракона"", ""draconicevolution:draconic_sword"", 1, 0.03)
    myCasino:addItem(""&4Лук Дракона"", ""draconicevolution:draconic_bow"", 1, 0.03)
    myCasino:addItem(""&4Кирка Дракона"", ""draconicevolution:draconic_pick"", 1, 0.03)
    myCasino:addItem(""&4Топор Дракона"", ""draconicevolution:draconic_axe"", 1, 0.03)
    myCasino:addItem(""&4Шлем Дракона"", ""draconicevolution:draconic_helm"", 1, 0.03)
    myCasino:addItem(""&4Поножи Дракона"", ""draconicevolution:draconic_legs"", 1, 0.03)
    myCasino:addItem(""&4Ботинки Дракона"", ""draconicevolution:draconic_boots"", 1, 0.03)
    myCasino:addItem(""&4Ядро Дракона"", ""draconicevolution:awakened_core"", 1, 0.03)
    
    myCasino:addItem(""&6Квантовая Кирка"", ""apex:quantum_pickaxe"", 1, 0.01)
    myCasino:addItem(""&6Квантовый Генератор"", ""Quantum Generator"", 1, 0.01)
    myCasino:addItem(""&6Нагрудник Дракона"", ""draconicevolution:draconic_chest"", 1, 0.01)
    
    myCasino:search_transposers()
    --myCasino:get_list()
    
    controlLib.drawAll()
    --myCasino:displayItems()
    
    local function mainCasino(money)
        local rewardsList = {}
        local itemCounts = {}
        myCasino:sendMoney(money*4)
        chatbox.say(""§6Крутим §a"" .. money .. ""§6 раз"" )
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = string.rep("" "", 36),
            })
        end
        controlLib.drawAll()
    
        for i = 1, money do
            local reward = myCasino:weightedRoll()
            local displayName = string.gsub(reward.name, ""&"", ""§"", 1)
    
            component.proxy(reward.address).transferItem(0, 1, reward.count, reward.slot, i)
    
            local secondChar = string.sub(reward.name, 2, 2)
            local modifiedString = string.sub(reward.name, 3)
    
            if reward and reward.name and reward.count then
                -- Суммируем количество одинаковых предметов и сохраняем шанс
                if itemCounts[displayName] then
                    itemCounts[displayName].count = itemCounts[displayName].count + reward.count
                else
                    itemCounts[displayName] = {count = reward.count, chance = reward.chance}
                end
            end
            controlLib.updateControl(win[i], {
                text = modifiedString,
                foreColor = gui.colors[secondChar],
            })
            controlLib.drawAll()
            os.sleep(0.5) 
        end
    
        -- Создаем список для отсортированных результатов
        for name, data in pairs(itemCounts) do
            table.insert(rewardsList, {name = name, count = data.count, chance = data.chance})
        end
    
        table.sort(rewardsList, function(a, b) return a.chance < b.chance end)
    
        local results = {}
        for _, item in ipairs(rewardsList) do
            table.insert(results, item.name .. "": "" .. item.count .. ""x"")
        end
        local resultString = ""\n"" .. table.concat(results, ""\n"")
        chatbox.say(resultString)        
    end
    
    local totalCash = 0
    
    local permissions = {}
    permissions[""Stawlie_""] = true
    permissions[""NikkyFreaky""] = true
    permissions[""FrameGame""] = true
    
    local function chatMessageHandler()
        chatbox.say(""Модуль чата запущен"")
        while true do
            local _, address, nick, msg = event.pull(0.1, ""chat_message"")
            local words = {}
            local countWords = 0
    
            if msg then
                msg = string.lower(msg)
                for word in msg:gmatch(""%S+"") do
                    table.insert(words, word)
                    countWords = countWords + 1
                end
                
                if msg == ""@list"" then
                    myCasino:get_list()
                end
                
                if permissions[nick] then
                    if words[1] == ""@try"" then
                        chatbox.say(""§fПопыток: §a§l"" .. totalCash)
                    elseif words[1] == ""@off"" then
                        chatbox.say(""§e§lПерезагружаюсь"")
                        computer.shutdown(true)
                    elseif words[1] == ""@add"" then
                        if words[2] then
                            mainCasino(tonumber(words[2]))
                        end
                    elseif words[1] == ""@owner"" then
                        if words[2] then
                            permissions[words[2]] = true
                        end
                    end
                end
            end
        end
    end
    
    thread.create(chatMessageHandler)
    
    local colors = { {0xFF0000, 0x0000FF}, {0x0000FF, 0x00FF00}, {0x00FF00, 0xFF0000} }
    local indexColorGradient = 1
    
    local SPIN_COST = 4
    
    while true do
        gui.drawMain(""[Casino BAZAR]"", 0.3, colors[indexColorGradient][1], colors[indexColorGradient][2])

        indexColorGradient = indexColorGradient % #colors + 1

        local money = myCasino:SearchMoney()
        if money and money >= 4 then
            local spins = math.floor(money / 4)
            local remainder = money % 4  -- Остаток после вычитания стоимости всех круток
            chatbox.say(""§f§lВаш остаток средств §a§l$"" .. remainder)
            mainCasino(spins)
            totalCash = totalCash + spins
        end

        computer.pullSignal(2)
    end
    
    --Проблемы
    --Если существует 2 одинаковых предмета, например камень с шансом 0.3 и камень с шансом 0.2, алгоритм записывает адрес только первого камня, который попадется в списке
    --Ultimate Hybrid и Hybrid разные места"
XHag6eqW,Untitled,Nenogzar,Python,Sunday 15th of October 2023 06:55:33 AM CDT,"n = int(input())
found = False

for a in range(1, 10):
    for b in range(9, a - 1, -1):
        for c in range(0, 10):
            for d in range(9, c - 1, -1):
                if (a + b + c + d) == (a * b * c * d) and (a + b + c + d) % 10 == 5:
                    print(f""{a}{b}{c}{d}"")
                    found = True
                    break
                if (a * b * c * d) // (a + b + c + d) == 3 and n % 3 == 0:
                    print(f""{d}{c}{b}{a}"")
                    found = True
                    break
            if found:
                break
        if found:
            break
    if found:
        break

if not found:
    print(""Nothing found"")"
k4vyik2Z,CloudSaveTest,apieceoffruit,C#,Sunday 15th of October 2023 06:54:47 AM CDT,"using System;
using System.Threading.Tasks;
using Unity.Services.Authentication;
using Unity.Services.Core;
using UnityEngine;
using Random = UnityEngine.Random;

namespace JS
{
    public class QuickCloudSaveTest : MonoBehaviour
    {
        ISaveClient _client;

        static int ID = 0;
        [SerializeField]
        SomeCoolData _data;
        
        void Awake()
        {
            InitializeTheServices();
          
        }
        
        async Task SignInAnonymouslyAsync()
        {
            try
            {
                await AuthenticationService.Instance.SignInAnonymouslyAsync();
                Debug.Log(""Sign in anonymously succeeded!"");
        
                // Shows how to get the playerID
                Debug.Log($""PlayerID: {AuthenticationService.Instance.PlayerId}""); 

            }
            catch (AuthenticationException ex)
            {
                // Compare error code to AuthenticationErrorCodes
                // Notify the player with the proper error message
                Debug.LogException(ex);
            }
            catch (RequestFailedException ex)
            {
                // Compare error code to CommonErrorCodes
                // Notify the player with the proper error message
                Debug.LogException(ex);
            }
        }
        

        async void InitializeTheServices()
        {
           await UnityServices.InitializeAsync();
           await SignInAnonymouslyAsync();
           _client = new CloudSave();
           Debug.Log(""UnityServices.InitializeAsync() done"");
        }
        
        [ContextMenu(""Load"")]
        async void Load()
        {
            _data = await _client.Load<SomeCoolData>(""SomeCoolData"");    
        }
        
        [ContextMenu(""Save"")]
        async void Save()
        {
            await _client.Save(""SomeCoolData"", _data);
        }
        
        [ContextMenu(""Delete"")]
        async void Delete()
        {
            await _client.Delete(""SomeCoolData"");
        }
        
        [ContextMenu(""Delete All"")]
        async void DeleteAll()
        {
            await _client.DeleteAll();
        }
        
        [ContextMenu(""Generate Some Data"")]
        public void GenerateSomeData() => _data = CreateRandomData();
        
        SomeCoolData CreateRandomData()
        {
            return new SomeCoolData
            {
                ID = ID++,
                Name = ""Player"" + Random.Range(0, 100),
                Class = ""Warrior"",
                Level = Random.Range(1, 100),
                Health = Random.Range(1, 100),
                Mana = Random.Range(1, 100),
                Strength = Random.Range(1, 100)
            };
        }
    }

    [Serializable]
    public class SomeCoolData
    {
        public int ID;
        public string Name;
        public string Class;
        public int Level;
        public int Health;
        public int Mana;
        public int Strength;
    }
    
}
"
yGTn7D3x,Гаусс. ЧМ. 1 лаба,VladimirKostovsky,C++,Sunday 15th of October 2023 06:53:59 AM CDT,"#include <iostream>

using namespace std;

double * gauss(double ** a, double * y, int n) {
  double * x, max;
  int k, index;
  const double eps = 0.00001; // точность
  x = new double[n];
  k = 0;
  while (k < n) {
    // Поиск строки с максимальным a[i][k]
    max = abs(a[k][k]);
    index = k;
    for (int i = k + 1; i < n; i++) {
      if (abs(a[i][k]) > max) {
        max = abs(a[i][k]);
        index = i;
      }
    }
    // Перестановка строк
    if (max < eps) {
      // нет ненулевых диагональных элементов
      cout << ""Решение получить невозможно из-за нулевого столбца "";
      cout << index << "" матрицы A"" << endl;
      return 0;
    }
    for (int j = 0; j < n; j++) {
      double temp = a[k][j];
      a[k][j] = a[index][j];
      a[index][j] = temp;
    }
    double temp = y[k];
    y[k] = y[index];
    y[index] = temp;
    // Нормализация уравнений
    for (int i = k; i < n; i++) {
      double temp = a[i][k];
      if (abs(temp) < eps) continue; // для нулевого коэффициента пропустить
      for (int j = 0; j < n; j++)
        a[i][j] = a[i][j] / temp;
      y[i] = y[i] / temp;
      if (i == k) continue; // уравнение не вычитать само из себя
      for (int j = 0; j < n; j++)
        a[i][j] = a[i][j] - a[k][j];
      y[i] = y[i] - y[k];
    }
    k++;
  }
  // обратная подстановка
  for (k = n - 1; k >= 0; k--) {
    x[k] = y[k];
    for (int i = 0; i < k; i++)
      y[i] = y[i] - a[i][k] * x[k];
  }
  return x;
}

int main() {
  double ** a, * y, * x;
  system(""chcp 1251"");
  system(""cls"");
  const int n = 20;
  a = new double * [n];
  y = new double[n];

  // матрица А
  for (int i = 0; i < n; i++) {
    a[i] = new double[n];
    for (int j = 0; j < n; j++) {
      if (i == j) {
        a[i][j] = 100;
      } else {
        a[i][j] = 1 + i - j;
      }
    }
  }

  // матрица проверки
  for (int i = 0; i < n; i++) {
    y[i] = 1;
  }

  // вывод А (проверка)
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cout << a[i][j] << "" "";

    }
    cout << endl;
  }
  x = gauss(a, y, n);
  for (int i = 0; i < n; i++)
    cout << x[i];
  cin.get();
  cin.get();
  return 0;
}"
Cxsedgq3,Untitled,Stawlie0,C++,Sunday 15th of October 2023 06:53:12 AM CDT,"local Casino = {}

local component = require(""component"")
local fs = require(""filesystem"")

local chatbox = component.chat_box

chatbox.say(""Casino: загруженно"")

function Casino:new()
    local newObj = {
        items = {},       -- список предметов, их шансы и дополнительные свойства
        totalChance = 0,   -- общий шанс (сумма всех шансов)
        addressMoneyChest = nil, -- Адрес сундука с деньгами
        goodWin = 20, -- Последний хороший выигрыш
    }
    self.__index = self
    return setmetatable(newObj, self)
end

function Casino:addItem(name, title, count, chance)
    table.insert(self.items, {
        name = name,
        title = title,
        count = count,
        chance = chance,
        address = nil,
        slot = nil,
    })

    self.totalChance = self.totalChance + chance
end

local f = io.open(""/tmp/time"", ""w"")
f:write(""time"")
f:close() 

local timestamp = fs.lastModified(""/tmp/time"")

math.randomseed(timestamp)

function Casino:SearchMoney()
    if not self.addressMoneyChest then
        chatbox.say(""Address is nil."")
        os.sleep(0.5)
        return nil
    end
    local trans = component.proxy(self.addressMoneyChest)
    if not trans or not trans.getStackInSlot then     -- Проверка успешности получения прокси
        chatbox.say(""Не удалось получить прокси компонента для адреса.: "" .. tostring(address))
        os.sleep(0.5)
        return nil
    end
    local stack = trans.getStackInSlot(0, 1)

    if stack and stack.name == ""contenttweaker:money"" and stack.size then     -- Проверка наличия стека денег и обновление общего баланса
        return stack.size
    end
    return nil
end

function Casino:displayItems()
    for _, item in ipairs(self.items or {}) do
        if item.address == nil then
            chatbox.say(""Name: "" .. item.name)
            chatbox.say(""Title: "" .. item.title)
            chatbox.say(""count: "" .. item.count)
            chatbox.say(""-----"")
        end
    end
end

function Casino:search_transposers()
    local itemMap = {}

    for _, item in ipairs(self.items or {}) do
        itemMap[item.name] = item
        if item.title then
            itemMap[item.title] = item
        end
    end

    for address in component.list(""transposer"") do
        local trans = component.proxy(address)
        if not trans then return end

        local invName = trans.getInventoryName(0)
        if invName == ""appliedenergistics2:interface"" then
            local size = trans.getInventorySize(0) or 0
            for i = 1, size do
                local stack = trans.getStackInSlot(0, i)
                if stack then
                    local item = itemMap[stack.name] or itemMap[stack.label]
                    if item then
                        item.address = address
                        item.slot = i
                    end
                end
            end
        else -- Интерфейс хранения валюты
            self.addressMoneyChest = address
            if chatbox then chatbox.say(""§fСохранил адрес сундука с деньгами: "" .. address) end
        end
    end
end

function Casino:get_list()
    local result = {}
    for _, item in ipairs(self.items or {}) do
        local displayName = string.gsub(item.name, ""&"", ""§"", 1)
        if item.count == 1 then
            table.insert(result, ""§l"" .. displayName .. "" Шанс: ""  .. item.chance * 100 .. ""%"")
        else
            table.insert(result, ""§l"" .. displayName .. "" x"" .. item.count.. "" Шанс: ""  .. item.chance * 100 .. ""%"")
        end
    end
    local resultString = table.concat(result, ""\n"")
    chatbox.say(resultString)
end

function Casino:sendMoney(count)
    component.proxy(self.addressMoneyChest).transferItem(0, 1, count, 1, 1)
end

function Casino:generateWeightedArray()
    local weightedArray = {}
    for i, item in ipairs(self.items) do
        local repetitions = math.floor(item.chance * 100)         -- Умножаем вероятность на 100, чтобы получить целое число для повторений
        for j = 1, repetitions do
            table.insert(weightedArray, i)
        end
    end
    return weightedArray
end

function Casino:weightedRoll()
    local weightedArray = self:generateWeightedArray()
    local randomIndex = math.random(1, #weightedArray)
    local itemIndex = weightedArray[randomIndex]
    return self.items[itemIndex]
end

return Casino"
8AvNS1Hj,Untitled,Stawlie0,C++,Sunday 15th of October 2023 06:52:32 AM CDT,"    require(""package"").loaded[""doublebuffer""] = nil
    require(""package"").loaded[""control""] = nil
    require(""package"").loaded[""casino""] = nil
    require(""package"").loaded[""sgui""] = nil
    
    local controlLib = require(""control"")
    local charSpace = ' '
    
    local component = require(""component"")
    local computer = require(""computer"")
    local event = require(""event"")
    local unicode = require(""unicode"")
    local thread = require(""thread"")
    
    local Casino = require(""casino"")
    local gui = require(""sgui"")
    
    local gpu = component.gpu
    local radar = component.radar
    local chatbox = component.chat_box
    
    chatbox.setName(""§6BAZAR CASINO§7§o"")
    chatbox.say(""§aМодули успешно загружены"")
    
    local width, height = gpu.getResolution()
    
    gpu.setResolution(112,50)
    
    local win = {}
    --Резервируем места
    local function reservWin()
        local x = 10 -- начальная Координата x
        local y = 6  -- начальная координата y
        for i = 1, 63 do
            local id = controlLib.createLabel{
                x = x;
                y = y;
                text = """"
            }
            table.insert(win, id)
            x = x + 36 
            if x > 108 then
                x = 10
                y = y+2
            end
        end
        local id = controlLib.createLabel{
            x = 46;
            y = y;
            text = """"
        } 
        table.insert(win, id)
    end
    
    reservWin()
    
    local function ClearWin()
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = """"
            })
        end
    end
    
    local myCasino = Casino:new()
    
    myCasino:addItem(""&aЖемчуг эндера"", ""minecraft:ender_pearl"", 4, 0.99)
    myCasino:addItem(""&aСингулярность"", ""Singularity"", 1, 0.99)
    myCasino:addItem(""&aАпатит"", ""forestry:apatite"", 64, 0.99)
    myCasino:addItem(""&aКорпус ячейки"", ""ME Storage Housing"", 1, 0.99)
    myCasino:addItem(""&aУл. Электросхема"", ""Advanced Circuit"", 1, 0.99)
    myCasino:addItem(""&aЭлектросхема"", ""Electronic Circuit"", 1, 0.99)
    myCasino:addItem(""&aОбсидиан"", ""minecraft:obsidian"", 32, 0.99)
    myCasino:addItem(""&aИзумруд"", ""minecraft:emerald"", 16, 0.99)
    myCasino:addItem(""&aАккумулятор"", ""contenttweaker:modelbatre"", 1, 0.99)
    
    myCasino:addItem(""&aВычислительный процессор"", ""Calculation Processor"", 2, 0.99)
    myCasino:addItem(""&aЛогический процессор"", ""Logic Processor"", 2, 0.99)
    myCasino:addItem(""&aСпекулятивный процессор"", ""Speculative Processor"", 2, 0.99)
    myCasino:addItem(""&aМассивный процессор"", ""Massively Parallel Processor"", 2, 0.99)
    myCasino:addItem(""&aИридиевый процессор"", ""Iridium Processor"", 2, 0.99)
    myCasino:addItem(""&aИнженерный процессор"", ""Engineering Processor"", 2, 0.99)
    myCasino:addItem(""&aУран 238"", ""Uranium 238"", 1, 0.99)
    myCasino:addItem(""&aЧасть саннариума"", ""Sunnarium Part"", 1, 0.99)
    myCasino:addItem(""&aПасека"", ""forestry:apiary"", 1, 0.99)
    
    myCasino:addItem(""&eТрансформатор"", ""Transformer Upgrade"", 1, 0.4)
    myCasino:addItem(""&eУскоритель"", ""Overclocker Upgrade"", 1, 0.4)
    myCasino:addItem(""&eСветокамень"", ""minecraft:glowstone"", 8, 0.4)
    myCasino:addItem(""&eМатерия"", ""UU-Matter"", 8, 0.4)
    myCasino:addItem(""&eИридий"", ""Iridium Ore"", 1, 0.4)
    myCasino:addItem(""&eМаточное молочко"", ""forestry:royal_jelly"", 8, 0.4)
    myCasino:addItem(""&eУрановая руда"", ""Uranium Ore"", 16, 0.4)
    myCasino:addItem(""&eРезонирующий набор"", ""thermalfoundation:upgrade"", 2, 0.4)
    myCasino:addItem(""&eПанель 2-го уровня"", ""Low Voltage Solar Array"", 1, 0.4)
    
    myCasino:addItem(""&bПромышленная пасека"", ""gendustry:industrial_apiary"", 1, 0.3)
    myCasino:addItem(""&bБлок Угля"", ""minecraft:coal_block"", 64, 0.3)
    myCasino:addItem(""&bКиноварь"", ""Cinnabar"", 64, 0.3)
    myCasino:addItem(""&bАметист"", ""contenttweaker:amethyst"", 4, 0.3)
    myCasino:addItem(""&bЯйцо дракона"", ""minecraft:dragon_egg"", 1, 0.3)
    myCasino:addItem(""&bБлок Платины"", ""thermalfoundation:storage"", 32, 0.3)
    myCasino:addItem(""&bБлок Изумрудов"", ""minecraft:emerald_block"", 64, 0.3)
    myCasino:addItem(""&bПанель 3-го уровня"", ""Medium Voltage Solar Array"", 1, 0.3)
    
    myCasino:addItem(""&dЭнергетическая капля"", ""Energy Drop"", 16, 0.2)
    myCasino:addItem(""&dСовершенная материя"", ""ic2stuff:pf_matter"", 2, 0.2)
    myCasino:addItem(""&dПлутоний"", ""Plutonium"", 8, 0.2)
    myCasino:addItem(""&dНано нагрудник"", ""Advanced NanoChestplate"", 1, 0.2)
    myCasino:addItem(""&dПыль Синерии"", ""tllod:material"", 8, 0.2)
    myCasino:addItem(""&dУлучшение Производство"", ""Production Upgrade"", 4, 0.2)
    myCasino:addItem(""&dПанель 5-го уровня"", ""Advanced Solar Panel"", 1, 0.2)
    
    myCasino:addItem(""&9Панель 6-го уровня"", ""Ultimate Hybrid Solar Panel"", 1, 0.1)
    myCasino:addItem(""&9Топор виверны"", ""draconicevolution:wyvern_axe"", 1, 0.1)
    myCasino:addItem(""&9Кирка Виверны"", ""draconicevolution:wyvern_pick"", 1, 0.1)
    myCasino:addItem(""&9Виверновый нагрудник"", ""draconicevolution:wyvern_chest"", 1, 0.1)
    myCasino:addItem(""&9Виверновые поножи"", ""draconicevolution:wyvern_legs"", 1, 0.1)
    myCasino:addItem(""&9Виверновые болитинки"", ""draconicevolution:wyvern_boots"", 1, 0.1)
    myCasino:addItem(""&9Виверновый шлем"", ""draconicevolution:wyvern_helm"", 1, 0.1)
    myCasino:addItem(""&9Сердце дракона"", ""draconicevolution:dragon_heart"", 1, 0.1)
    --myCasino:addItem(""&9Панель 7-го уровня"", ""Hybrid Solar Panel"", 1, 0.10)
    
    myCasino:addItem(""&6Поножи дракона"", ""draconicevolution:draconic_legs"", 1, 0.03)
    myCasino:addItem(""&6Шлем дракона"", ""draconicevolution:draconic_helm"", 1, 0.03)
    myCasino:addItem(""&6Панель 8-го уровня"", ""Quantum Solar Panel"", 1, 0.03)
    myCasino:addItem(""&6Ботинки дракона"", ""draconicevolution:draconic_boots"", 1, 0.03)
    myCasino:addItem(""&6Контейнер для кибер-пчел III"", ""contenttweaker:bees_container_t3"", 1, 0.03)
    myCasino:addItem(""&6Пробужденное ядро"", ""draconicevolution:awakened_core"", 1, 0.03)
    myCasino:addItem(""&6Звезда ада"", ""minecraft:nether_star"", 32, 0.03)
    myCasino:addItem(""&6Кирка дракона"", ""draconicevolution:draconic_pick"", 1, 0.03)
    
    myCasino:addItem(""&cКвантовый генератор"", ""Quantum Generator"", 1, 0.01)
    myCasino:addItem(""&cНагрудник дракона"", ""draconicevolution:draconic_chest"", 1, 0.01)
    myCasino:addItem(""&cКвантовая кирка"", ""apex:quantum_pickaxe"", 1, 0.01)
    myCasino:addItem(""&cКибернетическая пасека"", ""modularmachinery:cybernetic_apiary_controller"", 1, 0.01)
    
    myCasino:search_transposers()
    --myCasino:get_list()
    
    controlLib.drawAll()
    --myCasino:displayItems()
    
    local function mainCasino(money)
        local rewardsList = {}
        local itemCounts = {}
        myCasino:sendMoney(money*4)
        chatbox.say(""§6Крутим §a$"" .. money .. ""§6 раз"" )
        for i = 1, 64 do
            controlLib.updateControl(win[i], {
                text = string.rep("" "", 36),
            })
        end
        controlLib.drawAll()
    
        for i = 1, money do
            local reward = myCasino:weightedRoll()
            local displayName = string.gsub(reward.name, ""&"", ""§"", 1)
    
            component.proxy(reward.address).transferItem(0, 1, reward.count, reward.slot, i)
    
            local secondChar = string.sub(reward.name, 2, 2)
            local modifiedString = string.sub(reward.name, 3)
    
            if reward and reward.name and reward.count then
                -- Суммируем количество одинаковых предметов и сохраняем шанс
                if itemCounts[displayName] then
                    itemCounts[displayName].count = itemCounts[displayName].count + reward.count
                else
                    itemCounts[displayName] = {count = reward.count, chance = reward.chance}
                end
            end
            controlLib.updateControl(win[i], {
                text = modifiedString,
                foreColor = gui.colors[secondChar],
            })
            controlLib.drawAll()
            os.sleep(0.5) 
        end
    
        -- Создаем список для отсортированных результатов
        for name, data in pairs(itemCounts) do
            table.insert(rewardsList, {name = name, count = data.count, chance = data.chance})
        end
    
        table.sort(rewardsList, function(a, b) return a.chance < b.chance end)
    
        local results = {}
        for _, item in ipairs(rewardsList) do
            table.insert(results, item.name .. "": "" .. item.count .. ""x"")
        end
        local resultString = ""\n"" .. table.concat(results, ""\n"")
        chatbox.say(resultString)        
    end
    
    local totalCash = 0
    
    local permissions = {}
    permissions[""Stawlie_""] = true
    permissions[""NikkyFreaky""] = true
    
    local function chatMessageHandler()
        chatbox.say(""Модуль чата запущен"")
        while true do
            local _, address, nick, msg = event.pull(0.1, ""chat_message"")
            local words = {}
            local countWords = 0
    
            if msg then
                msg = string.lower(msg)
                for word in msg:gmatch(""%S+"") do
                    table.insert(words, word)
                    countWords = countWords + 1
                end
                
                if msg == ""@list"" then
                    myCasino:get_list()
                end
                
                if permissions[nick] then
                    if words[1] == ""@try"" then
                        chatbox.say(""§fПопыток: §a§l"" .. totalCash)
                    elseif words[1] == ""@off"" then
                        chatbox.say(""§e§lПерезагружаюсь"")
                        computer.shutdown(true)
                    elseif words[1] == ""@add"" then
                        if words[2] then
                            chatbox.say(""§с§lПополняю"")
                            mainCasino(tonumber(words[2]))
                        end
                    elseif words[1] == ""@owner"" then
                        if words[2] then
                            permissions[words[2]] = true
                        end
                    end
                end
            end
        end
    end
    
    thread.create(chatMessageHandler)
    
    local colors = { {0xFF0000, 0x0000FF}, {0x0000FF, 0x00FF00}, {0x00FF00, 0xFF0000} }
    local indexColorGradient = 1
    
    while true do
        gui.drawMain(""[Casino BAZAR]"", 0.3, colors[indexColorGradient][1], colors[indexColorGradient][2])
        
        indexColorGradient = indexColorGradient % #colors + 1
        
        local money = myCasino:SearchMoney()
    
        local money = myCasino:SearchMoney()
        if money and money >= 4 then
            local spins = math.floor(money / 4)
            local remainder = money % 4  -- Остаток после вычитания стоимости всех круток
            chatbox.say(""§f§lВаш остаток средств §a§l$"" .. remainder)
            mainCasino(spins)
            totalCash = totalCash + spins
        end
        
        computer.pullSignal(2)
    end
    
    --Проблемы
    --Если существует 2 одинаковых предмета, например камень с шансом 0.3 и камень с шансом 0.2, алгоритм записывает адрес только первого камня, который попадется в списке
    --Ultimate Hybrid и Hybrid разные места"
GKtfn802,Arithmetic Operators,ItsMeStevieG,PHP,Sunday 15th of October 2023 06:43:30 AM CDT,"<?php

$a = 10;
$b = 5;

// Addition
$result = $a + $b // $result is 15

// Subtraction
$result = $a -$b; // $result is 5

// Multiplication
$result = $a * $b; // $result is 50

// Division
$result = $a / $b; // $result is 2

// Modulus (remainder)
$result = $a % $b; // $result is 0"
eTWdtuE9,CloudSave,apieceoffruit,C#,Sunday 15th of October 2023 06:40:07 AM CDT,"using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Unity.Services.CloudSave;
using UnityEngine;
using static Newtonsoft.Json.JsonConvert;
namespace JS
{

    public class CloudSave : ISaveClient
    {
        
        public async Task Save(string key, object value) => 
            await Call( CloudSaveService.Instance.Data.Player.SaveAsync(
                new Dictionary<string, object> { { key, value } }));

        public async Task Save(params (string key, object value)[] values) => 
            await Call( CloudSaveService.Instance.Data.Player.SaveAsync(
                values.ToDictionary(item => item.key, item => item.value)));

        public async Task<T> Load<T>(string key)
        {
            var query = await Call( CloudSaveService.Instance.Data.Player.LoadAsync(new HashSet<string> { key }));
            return query.TryGetValue(key, out var value) ? Deserialize<T>(value.Value.GetAsString()) : default;
        }

        public async Task<IEnumerable<T>> Load<T>(params string[] keys)
        {
            var query = await Call( CloudSaveService.Instance.Data.Player.LoadAsync(keys.ToHashSet()));
            return keys.Select(k =>
            {
                if (query.TryGetValue(k, out var value))
                    return value != null ? Deserialize<T>(value.Value.GetAsString()) : default;
                return default;
            });
        }

        public async Task Delete(string key) => await Call( CloudSaveService.Instance.Data.Player.DeleteAsync(key));

        public async Task DeleteAll()
        {
            var keys = await Call(   CloudSaveService.Instance.Data.Player.ListAllKeysAsync());
            var tasks = keys.Select(k =>  CloudSaveService.Instance.Data.Player.DeleteAsync(k.Key)).ToList();
            await Call(Task.WhenAll(tasks));
        }

        static T Deserialize<T>(string input)
        {
            if (typeof(T) == typeof(string)) return (T)(object)input;
            return DeserializeObject<T>(input);
        }

        static async Task Call(Task action)
        {
            try
            {
                await action;
            }
            catch (CloudSaveValidationException e)
            {
                Debug.LogError(e);
            }
            catch (CloudSaveRateLimitedException e)
            {
                Debug.LogError(e);
            }
            catch (CloudSaveException e)
            {
                Debug.LogError(e);
            }
        }

        static async Task<T> Call<T>(Task<T> action)
        {
            try
            {
                return await action;
            }
            catch (CloudSaveValidationException e)
            {
                Debug.LogError(e);
            }
            catch (CloudSaveRateLimitedException e)
            {
                Debug.LogError(e);
            }
            catch (CloudSaveException e)
            {
                Debug.LogError(e);
            }

            return default;
        }
    }

    public interface ISaveClient
    {
        Task Save(string key, object value);

        Task Save(params (string key, object value)[] values);

        Task<T> Load<T>(string key);

        Task<IEnumerable<T>> Load<T>(params string[] keys);

        Task Delete(string key);

        Task DeleteAll();
    }
}"
ngSPJMxz,Untitled,morington,Python,Sunday 15th of October 2023 06:37:09 AM CDT,"import asyncio
from pathlib import Path
from typing import Any, Coroutine

import nats
import ormsgpack
import structlog
from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramForbiddenError, TelegramRetryAfter
from nats.aio.client import Client
from nats.js import JetStreamContext
from nats.js.errors import NotFoundError
from structlog.contextvars import bind_contextvars

from Fluent import FluentDispenser, CustomFluentLocalization
from MessageTransmission import loader_config, exc, models, enums
from MessageTransmission.const import *

logger: structlog.BoundLogger = structlog.stdlib.get_logger(__name__)


class Initialize:
    jetstream: JetStreamContext

    def __init__(self, config: dict[str, Any]) -> None:
        """""" Initial """"""
        logger.debug('Initializing a message processing object')
        self.config = config

        self.bot = Bot(token=config['application']['key'], parse_mode=ParseMode.HTML)
        self.dispenser = FluentDispenser(
            default_language=config['application']['default_language_code']
        )


    async def start_polling(self) -> None:
        """""" Connect to NATS server and return the """"""
        nats_connect: Client = await nats.connect(
            servers=[self.config['nats_url']]
        )
        logger.debug('Successful connection to NATS service')

        self.jetstream: JetStreamContext = nats_connect.jetstream()
        await self.polling()


    @property
    async def subscriber(self):
        """""" Subscribe to NATS server """"""
        return await self.jetstream.subscribe(
            stream=JETSTREAM_NAME,
            subject=JETSTREAM_SUBJECT
        )


    @property
    async def subscriber_builder(self):
        """""" Subscribe builder to NATS server. If connection fails, creates a new stream """"""
        if self.jetstream is None:
            raise ValueError(""Jetstream is not initialized"")

        try:
            return await self.subscriber
        except NotFoundError:
            await self.jetstream.add_stream(name=JETSTREAM_NAME, subjects=[JETSTREAM_SUBJECT])
            return await self.subscriber


    def type_processing(
            self,
            type_message: enums.TypeMessage,
            data: dict[str, Any]
    ) -> Any:
        """""" Processing a message model based on message type """"""
        match type_message:
            case enums.TypeMessage.connection:
                return models.MessageConnectModel(**data)
            case _:
                raise exc.UnknownMessageTypeError(type_message)


    async def polling(self) -> None:
        """""" Main message processing loop """"""
        logger.debug('Starting a message processing loop')
        subscriber = await self.subscriber_builder

        async for msg in subscriber.messages:
            try:
                __model_message = models.BaseMessageModel(**ormsgpack.unpackb(msg.data)).model_dump()

                metadata = models.MetadataMessageModel(**__model_message['metadata']).model_dump()
                __type: str = metadata['type']

                if __type not in enums.TypeMessage.__members__:
                    raise exc.MessageTypeMissingError(__type)

                model: Any = self.type_processing(
                    type_message=enums.TypeMessage[__type],
                    data=__model_message['data_message']
                )
                logger.debug(
                    'Processing message',
                    uuid=metadata['uuid'].hex,
                    type_message=__type,
                    metdata=metadata,
                    model=model.model_dump()
                )

                l10n: CustomFluentLocalization = self.dispenser.get_localization(language_code=metadata['language_code'])
                await self.bot.send_message(
                    chat_id=metadata['chat_id'],
                    disable_web_page_preview=True,
                    **model.answer(l10n=l10n)
                )
                await msg.ack()

            except TimeoutError:
                logger.warning('Timeout error')
            except TelegramRetryAfter as ex:
                logger.warning(f'Limit exceeded, continue in: {ex.retry_after}')
                await asyncio.sleep(float(ex.retry_after))
                continue
            except TelegramForbiddenError:
                logger.warning('User blocked Bot')
                await msg.ack()
                continue
            except exc.MessageTypeMissingError as err:
                logger.error(f""Error extract a message type: {err}. Available types: {list(enums.TypeMessage.__members__.keys())}"")
                await msg.ack()
                continue
            except exc.UnknownMessageTypeError as err:
                logger.error(f'Unknown message type: {err.message_type}', exc=err)
                await msg.ack()
                continue
            except Exception as err:
                logger.error(f'Unexpected error', exc=err)
                await msg.ack()
                continue


if __name__ == '__main__':
    config: dict[str, Any] = loader_config()
    message_processing: Initialize = Initialize(config=config)

    asyncio.run(message_processing.start_polling())



########################################

await jetstream.publish(
		subject=JETSTREAM_SUBJECT,
		payload=ormsgpack.packb(
			{
				""metadata"": {
					""uuid"": event_uuid,
					""type"": ""connection"",
					""language_code"": active_project.get(""language_code""),
					""chat_id"": active_project.get(""admin_id"")
				},
				""data_message"": {
					""group_name"": group_name,
					""group_link"": group_link.invite_link,
					""project_id"": active_project.get(""id"")
				}
			}
		)
	)"
iCuj54tf,SnowmanTest,cepxuozab,C++,Sunday 15th of October 2023 06:30:08 AM CDT,"void SnowmanTest() {
        {
            Document doc;
            Snowman s(Point{30, 20}, 10.0);
            s.Draw(doc);
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            Snowman s(Point{33, 10}, 12.0);
            s.Draw(doc);
            doc.Render(cout);
        }
    }

<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""30"" cy=""70"" r=""20"" />
  <circle cx=""30"" cy=""40"" r=""15"" />
  <circle cx=""30"" cy=""20"" r=""10"" />
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""33"" cy=""70"" r=""24"" />
  <circle cx=""33"" cy=""34"" r=""18"" />
  <circle cx=""33"" cy=""10"" r=""12"" />
</svg>"
pkcUxzUJ,Untitled,Nenogzar,Python,Sunday 15th of October 2023 06:25:35 AM CDT,"import math

absence_in_days = int(input()) # days
food_supply = int(input()) # kg
deer_one = float(input())
deer_two = float(input())
deer_three = float(input())

needed_food = (deer_one+deer_two+deer_three) * absence_in_days
difference_food = abs(food_supply - needed_food)
if needed_food < food_supply:
    print(f""{math.floor(difference_food)} kilos of food left."")
else:
    print(f""{math.ceil(difference_food)} more kilos of food are needed."")"
