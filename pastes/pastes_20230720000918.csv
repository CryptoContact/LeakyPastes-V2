id,title,username,language,date,content
E2wXhRqF,Untitled,35657,C++,Wednesday 19th of July 2023 06:43:25 PM CDT,"
#include <set>
#include <string>
#include <iostream>

using namespace std;
class Pet {
public:

    Pet(string name, int age, string  color) : name_(name), age_(age), color_(color) {};

    string GetName() const {
        return name_;
    }


    int GetAge() const {
        return age_;
    }


    string GetColor() const {
        return color_;
    }



private:
    string name_;
    int age_;
    string color_;
};

class Dog : public Pet {
public:
    Dog(string name, int age, string color) : Pet(name, age, color) {};

    void AddFood(string food) {
        food_.insert(food);
    }
    bool CanEat(string food) const {
        return food_.count(food);
    }

    void SetMove(string move) {
        move_ = move;
    }

    string GetMove()const {
        return move_;
    }


private:
    set<string> food_;
    string move_;
};







//class Cat : public Pet {
//public:
//
//private:
//    string Food;
//    string Voice;
//    string Move;
//
//};

//class Parrot : public Pet {
//public:
//
//private:
//    string Food;
//    string Voice;
//    string Move;
//};

int main() {
    setlocale(LC_ALL, ""ru"");

    Dog my_dog(""Dingo"", 4, ""black"");
    my_dog.AddFood(""meat"");
    my_dog.SetMove(""run"");
    cout << ""my favourite dog is "" << my_dog.GetName() << "" "" << ""it is"" << "" "" << my_dog.GetAge() << "" years old"" << endl;
    cout << ""Yur dog can eat meat? "" << endl;
    cout << boolalpha << my_dog.CanEat(""meat"") << endl;
    cout << my_dog.GetName() << "" "" << ""like"" << "" "" << my_dog.GetMove() << endl;


}"
fpdaH08Y,C# aggregate example,ivandrofly,C#,Wednesday 19th of July 2023 06:25:10 PM CDT,"        public static string RemoveInvalidCharacters(this string str, IEnumerable<char> invalidChars)
        {
            return invalidChars.Aggregate(str, (current, ch) => current.Replace(ch.ToString(), string.Empty));
        }"
ASd2tYJu,AI: Refact,ivandrofly,C#,Wednesday 19th of July 2023 05:54:01 PM CDT,"============================== old
if (lines.Count == 1 && text != oldText && Utilities.GetNumberOfLines(oldText) == 2)
	


============================== new 
private static bool ContainsPunctuationFollowedByNewLine(string text)
{
    string[] punctuations = new[] { ""."", "".</i>"", ""!"", ""!</i>"", ""?"", ""?</i>"" };

    return punctuations.Any(punct => oldText.Contains(punct + Environment.NewLine));
}

public void SomeMethod() 
{
    if (lines.Count == 1 && text != oldText && Utilities.GetNumberOfLines(oldText) == 2)
    {
        string[] startPatterns = new[] { ""-"", ""<i>-""};
        string[] lineBreakPatterns = new[] { Environment.NewLine + ""-"", Environment.NewLine + ""<i>-"" };

        if ((startPatterns.Any(pattern => oldText.StartsWith(pattern, StringComparison.Ordinal)) ||
             lineBreakPatterns.Any(pattern => oldText.Contains(pattern))) &&
            ContainsPunctuationFollowedByNewLine(oldText)) 
        {
            if (text.StartsWith(""<i>-"", StringComparison.Ordinal))
            {
                text = ""<i>"" + text.Remove(0, 4).TrimStart();
            }
            else
            {
                text = text.TrimStart('-').TrimStart();
            }
        }
    }
}"
8TCDf4zb,Remove duplications,ivandrofly,C#,Wednesday 19th of July 2023 05:36:22 PM CDT,"==== old code
public static void WritePts(this Stream stream, ulong pts)
{
	//TODO: check max
	var buffer = BitConverter.GetBytes(pts);
	if (BitConverter.IsLittleEndian)
	{
		stream.WriteByte(buffer[4]);
		stream.WriteByte(buffer[3]);
		stream.WriteByte(buffer[2]);
		stream.WriteByte(buffer[1]);
		stream.WriteByte(buffer[0]);
	}
	else
	{
		stream.WriteByte(buffer[buffer.Length - 1]);
		stream.WriteByte(buffer[buffer.Length - 2]);
		stream.WriteByte(buffer[buffer.Length - 3]);
		stream.WriteByte(buffer[buffer.Length - 4]);
		stream.WriteByte(buffer[buffer.Length - 5]);
	}
}

==== new code
public static void WritePts(this Stream stream, ulong pts)
{
    var buffer = BitConverter.GetBytes(pts);

    int startIndex = BitConverter.IsLittleEndian ? 0 : buffer.Length - 5;

    for (int i = 4; i >= 0; --i)
    {
        stream.WriteByte(buffer[startIndex + i]);
    }
}"
jEd942BM,Arcane Lineage GUI by .jaba. on discord,Plieax,Lua,Wednesday 19th of July 2023 04:28:59 PM CDT,"--Thank you to frstee for creating the Gui to Lua Converter
--It has helped tremendously in the development of this UI

--Rearrange this list to choose what enemies to attack first
--Top name is always attacked first
local enemyOrder = {
	""King Slime"",
	""Zombie Mushroom"",
	""Thief"",
	""Slime"",
	""Grass Spirit"",
	""Sand Elemental"",
	""Desert Bandit"",
	""Stray Sand Storm"",
	""Sand Golem"",
	""Fog Spirit"",
	""Venom Shroom"",
	""Cursed Corpse"",
	""Cess Horror"",
	""Magma Golem"",
	""Lava Crab""
}

--Rearrange this list to choose the order in which the auto attack mechanism attacks with
--Currently fist QTEs are the only supported QTE attacks
--For example, a mage attack that requires you to drag the pieces will not work because you will fail the QTE
--Support for other classes will be added eventually
local attackOrder = {
	""Barrage"",
	""Dark Smite"",
	""Strike""
}
local OUTERCALDERAPOS = CFrame.new(-227, 54, -2941)

--THIS SCRIPT IS VERY NEW AND MAY NOT ALWAYS WORK AS INTENDED
--If you would like to change the zone for the auto farm..
	--You need to change the OUTERCALDERAPOS CFrame so it TPs you to that zone
	--To do this, run this script 
	warn(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0))
	--Then check the console for the yellow warning message which should display the X,Y, and Z that you put in place of the default value
--Press F9 to open the console if you didn't know that already

-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new(""ScreenGui"")
local MF = Instance.new(""Frame"")
local CONTENT = Instance.new(""Frame"")
local TPs = Instance.new(""ScrollingFrame"")
local AutoDoctor = Instance.new(""TextButton"")
local UIGridLayout = Instance.new(""UIGridLayout"")
local Caldera = Instance.new(""TextButton"")
local Autos = Instance.new(""ScrollingFrame"")
local AutoDodge = Instance.new(""TextButton"")
local UIGridLayout_2 = Instance.new(""UIGridLayout"")
local AutoFarmCaldera = Instance.new(""TextButton"")
local NAV = Instance.new(""ScrollingFrame"")
local TPs_2 = Instance.new(""TextButton"")
local Autos_2 = Instance.new(""TextButton"")
local UIGridLayout_3 = Instance.new(""UIGridLayout"")
local Drag = Instance.new(""TextButton"")
local TOPBAR = Instance.new(""Frame"")
local CLOSE = Instance.new(""TextButton"")
local MIN = Instance.new(""TextButton"")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MF.Name = ""MF""
MF.Parent = ScreenGui
MF.BackgroundColor3 = Color3.fromRGB(130, 130, 130)
MF.BackgroundTransparency = 0.250
MF.BorderColor3 = Color3.fromRGB(0, 0, 0)
MF.BorderSizePixel = 0
MF.Position = UDim2.new(0.600000024, 0, 0.649999976, 0)
MF.Size = UDim2.new(0.300000012, 0, 0.224999994, 0)

CONTENT.Name = ""CONTENT""
CONTENT.Parent = MF
CONTENT.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CONTENT.BackgroundTransparency = 1.000
CONTENT.BorderColor3 = Color3.fromRGB(0, 0, 0)
CONTENT.BorderSizePixel = 0
CONTENT.Position = UDim2.new(0.25, 0, 0.100000069, 0)
CONTENT.Size = UDim2.new(0.749291241, 0, 0.895860553, 0)

TPs.Name = ""TPs""
TPs.Parent = CONTENT
TPs.Active = true
TPs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TPs.BackgroundTransparency = 1.000
TPs.BorderColor3 = Color3.fromRGB(0, 0, 0)
TPs.BorderSizePixel = 0
TPs.Size = UDim2.new(1, 0, 1, 0)
TPs.Visible = false

AutoDoctor.Name = ""AutoDoctor""
AutoDoctor.Parent = TPs
AutoDoctor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoDoctor.BackgroundTransparency = 0.250
AutoDoctor.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoDoctor.BorderSizePixel = 0
AutoDoctor.Size = UDim2.new(0, 200, 0, 50)
AutoDoctor.Font = Enum.Font.SourceSans
AutoDoctor.Text = ""Doc Heal""
AutoDoctor.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoDoctor.TextSize = 14.000

UIGridLayout.Parent = TPs
UIGridLayout.FillDirection = Enum.FillDirection.Vertical
UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 10, 0, 10)
UIGridLayout.CellSize = UDim2.new(0.75, 0, 0.100000001, 0)

Caldera.Name = ""Caldera""
Caldera.Parent = TPs
Caldera.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Caldera.BackgroundTransparency = 0.250
Caldera.BorderColor3 = Color3.fromRGB(0, 0, 0)
Caldera.BorderSizePixel = 0
Caldera.Size = UDim2.new(0, 200, 0, 50)
Caldera.Font = Enum.Font.SourceSans
Caldera.Text = ""Caldera Town""
Caldera.TextColor3 = Color3.fromRGB(0, 0, 0)
Caldera.TextSize = 14.000

Autos.Name = ""Autos""
Autos.Parent = CONTENT
Autos.Active = true
Autos.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Autos.BackgroundTransparency = 1.000
Autos.BorderColor3 = Color3.fromRGB(0, 0, 0)
Autos.BorderSizePixel = 0
Autos.Size = UDim2.new(1, 0, 1, 0)

AutoDodge.Name = ""AutoDodge""
AutoDodge.Parent = Autos
AutoDodge.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoDodge.BackgroundTransparency = 0.250
AutoDodge.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoDodge.BorderSizePixel = 0
AutoDodge.Size = UDim2.new(0, 200, 0, 50)
AutoDodge.Font = Enum.Font.SourceSans
AutoDodge.Text = ""Auto Dodge: OFF""
AutoDodge.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoDodge.TextSize = 14.000

UIGridLayout_2.Parent = Autos
UIGridLayout_2.FillDirection = Enum.FillDirection.Vertical
UIGridLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 10, 0, 10)
UIGridLayout_2.CellSize = UDim2.new(0.75, 0, 0.100000001, 0)

AutoFarmCaldera.Name = ""AutoFarmCaldera""
AutoFarmCaldera.Parent = Autos
AutoFarmCaldera.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoFarmCaldera.BackgroundTransparency = 0.250
AutoFarmCaldera.BorderColor3 = Color3.fromRGB(0, 0, 0)
AutoFarmCaldera.BorderSizePixel = 0
AutoFarmCaldera.Size = UDim2.new(0, 200, 0, 50)
AutoFarmCaldera.Font = Enum.Font.SourceSans
AutoFarmCaldera.Text = ""Auto Farm Caldera: OFF""
AutoFarmCaldera.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoFarmCaldera.TextSize = 14.000

NAV.Name = ""NAV""
NAV.Parent = MF
NAV.Active = true
NAV.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
NAV.BackgroundTransparency = 0.250
NAV.BorderColor3 = Color3.fromRGB(0, 0, 0)
NAV.BorderSizePixel = 0
NAV.Position = UDim2.new(0, 0, 0.100000069, 0)
NAV.Size = UDim2.new(0.25, 0, 0.899999797, 0)

TPs_2.Name = ""TPs""
TPs_2.Parent = NAV
TPs_2.BackgroundColor3 = Color3.fromRGB(0, 136, 0)
TPs_2.BackgroundTransparency = 0.250
TPs_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TPs_2.BorderSizePixel = 0
TPs_2.Position = UDim2.new(0.0472531095, 0, 0.261437953, 0)
TPs_2.Size = UDim2.new(0.899999976, 0, 0.167695448, 0)
TPs_2.Font = Enum.Font.SourceSans
TPs_2.Text = ""TPs""
TPs_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TPs_2.TextScaled = true
TPs_2.TextSize = 14.000
TPs_2.TextWrapped = true

Autos_2.Name = ""Autos""
Autos_2.Parent = NAV
Autos_2.BackgroundColor3 = Color3.fromRGB(0, 136, 0)
Autos_2.BackgroundTransparency = 0.250
Autos_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Autos_2.BorderSizePixel = 0
Autos_2.Position = UDim2.new(0.0472531095, 0, 0.048414439, 0)
Autos_2.Size = UDim2.new(0.899999976, 0, 0.167695448, 0)
Autos_2.Font = Enum.Font.SourceSans
Autos_2.Text = ""Auto""
Autos_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Autos_2.TextScaled = true
Autos_2.TextSize = 14.000
Autos_2.TextWrapped = true

UIGridLayout_3.Parent = NAV
UIGridLayout_3.FillDirection = Enum.FillDirection.Vertical
UIGridLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_3.CellSize = UDim2.new(0.899999976, 0, 0.100000001, 0)

Drag.Name = ""Drag""
Drag.Parent = MF
Drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Drag.BackgroundTransparency = 1.000
Drag.BorderColor3 = Color3.fromRGB(0, 0, 0)
Drag.BorderSizePixel = 0
Drag.Position = UDim2.new(-0.00146615889, 0, 1.37963738e-07, 0)
Drag.Size = UDim2.new(0.863841355, 0, 0.0956428424, 0)
Drag.Font = Enum.Font.SourceSans
Drag.TextColor3 = Color3.fromRGB(0, 0, 0)
Drag.TextSize = 14.000

TOPBAR.Name = ""TOPBAR""
TOPBAR.Parent = MF
TOPBAR.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TOPBAR.BorderColor3 = Color3.fromRGB(0, 0, 0)
TOPBAR.BorderSizePixel = 0
TOPBAR.Size = UDim2.new(1, 0, 0.100000001, 0)

CLOSE.Name = ""CLOSE""
CLOSE.Parent = TOPBAR
CLOSE.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CLOSE.BorderColor3 = Color3.fromRGB(0, 0, 0)
CLOSE.BorderSizePixel = 0
CLOSE.Position = UDim2.new(0.945067942, 0, 0, 0)
CLOSE.Size = UDim2.new(1, 0, 1, 0)
CLOSE.SizeConstraint = Enum.SizeConstraint.RelativeYY
CLOSE.Font = Enum.Font.SourceSans
CLOSE.Text = ""X""
CLOSE.TextColor3 = Color3.fromRGB(0, 0, 0)
CLOSE.TextSize = 14.000

MIN.Name = ""MIN""
MIN.Parent = TOPBAR
MIN.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
MIN.BorderColor3 = Color3.fromRGB(0, 0, 0)
MIN.BorderSizePixel = 0
MIN.Position = UDim2.new(0.862374485, 0, -0.0435729921, 0)
MIN.Size = UDim2.new(1, 0, 1, 0)
MIN.SizeConstraint = Enum.SizeConstraint.RelativeYY
MIN.Font = Enum.Font.SourceSans
MIN.Text = ""-""
MIN.TextColor3 = Color3.fromRGB(0, 0, 0)
MIN.TextScaled = true
MIN.TextSize = 14.000
MIN.TextWrapped = true

-- Scripts:

local function XIME_fake_script() -- Drag.Drag 
	local script = Instance.new('LocalScript', Drag)

	local mouseStartX = nil
	local mouseStartY = nil
	local moving = false
	local mf = script.Parent.Parent
	local mouse = game.Players.LocalPlayer:GetMouse()
	local startPos = UDim2.new(.6,0,.65,0)
	local uip = game:GetService(""UserInputService"")
	
	script.Parent.MouseButton1Down:Connect(function()
		mouse = game.Players.LocalPlayer:GetMouse()
		mouseStartX = mouse.X
		mouseStartY = mouse.Y
		moving = true
		while moving do
			mf.Position = startPos + UDim2.new(0,mouse.X - mouseStartX, 0, mouse.Y - mouseStartY)
			wait(.01)
		end
	end)
	
	--[[
	script.Parent.MouseButton1Up:Connect(function()
		moving = false
		startPos = mf.Position
	end)
	]]
	
	uip.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			moving = false
			startPos = mf.Position
		end
	end)
end
coroutine.wrap(XIME_fake_script)()
local function EIOJBG_fake_script() -- MF.CTRL 
	local script = Instance.new('LocalScript', MF)

	local CALDERAPOS = CFrame.new(-221, 48, -3327)
	
	
	local nav = script.Parent.NAV
	local top = script.Parent.TOPBAR
	local con = script.Parent.CONTENT
	local open = true
	local autoDodge = false
	local autoFarmCaldera = false
	local fighting = false
	
	local dodgeR = game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""Information""):WaitForChild(""RemoteFunction"")
	
	
	------------------------------------
	------------------------------------
	--		     GAME LOGIC		      --
	------------------------------------
	------------------------------------
	
	local function TPTO(cf)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf
	end
	
	local function decideEnemy()
		local battleID = game.Players.LocalPlayer.Character.FightInProgress.Value
		for i,ename in pairs(enemyOrder) do
			for ii, enemy in pairs(game.workspace.Living:GetChildren())do
				if enemy.Name == ename and enemy:FindFirstChild(""FightInProgress"") ~= nil and enemy.FightInProgress.Value == battleID then
					return enemy
				end
			end
		end
	end
	
	local function FIREPROXIMITY(Obj, Amount, Skip)
		if Obj.ClassName == ""ProximityPrompt"" then 
			Amount = Amount or 1
			local PromptTime = Obj.HoldDuration
			if Skip then 
				Obj.HoldDuration = 0
			end
			for i = 1, Amount do 
				Obj:InputHoldBegin()
				if not Skip then 
					wait(Obj.HoldDuration)
				end
				Obj:InputHoldEnd()
			end
			Obj.HoldDuration = PromptTime
		else 
			error(""userdata<ProximityPrompt> expected"")
		end
	end
	
	local function healUp()
		local char = game.Players.LocalPlayer.Character
		local ogcframe = char.HumanoidRootPart.CFrame
		local doc = game.Workspace.NPCs:WaitForChild(""Doctor"")
		local doccframe = doc.HumanoidRootPart.CFrame
		local prompt = doc.Head.ProximityPrompt
	
		char.HumanoidRootPart.CFrame = doccframe
		wait(.25)
		FIREPROXIMITY(prompt, 1, true)
		wait(.25)
		local function getOption()
			for i,v in pairs(game.Players.LocalPlayer.PlayerGui.NPCDialogue.BG.Options:GetChildren())do
				if v:IsA(""TextButton"") and v.Text == ""Yes please!"" then
					return v
				end
			end
		end
	
		local args = {
			[1] = getOption()
		}
	
		game.Players.LocalPlayer.PlayerGui.NPCDialogue.RemoteEvent:FireServer(unpack(args))
		wait(.1)
		char.HumanoidRootPart.CFrame = ogcframe
	end
	
	local function handleDodges()
		wait(.01)
		if autoDodge then
			dodgeR:FireServer({true,true},""DodgeMinigame"")
			wait(.1)
			dodgeR:FireServer({true,true},""DodgeMinigame"")
		end
	end
	
	local function handleCalderaFarm()	
		while autoFarmCaldera do
			
			if game.Players.LocalPlayer.Character:FindFirstChild(""FightInProgress"") ~= nil then
				fighting = true
			else
				fighting = false
			end
			
			if fighting == false then
				if game.Players.LocalPlayer.Character.Humanoid.Health < game.Players.LocalPlayer.Character.Humanoid.MaxHealth then
					healUp()
					wait(.5)
				end
				TPTO(OUTERCALDERAPOS)
			end
			
			wait(.5)
			if game.Players.LocalPlayer.PlayerGui.Combat.ActionBG.Visible == true then
				fighting = true
				local enemy = decideEnemy()
				for i,v in pairs(attackOrder)do
					local attackArgs = {[1] = ""Attack"",[2] = v,[3] = {[""Attacking""] = enemy}}
					local teamArgs = {[1] = game.Players.LocalPlayer.Character.FightInProgress.Value}
	
					game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""Data""):WaitForChild(""GetOtherTeam""):InvokeServer(unpack(teamArgs))
					game:GetService(""Players"").LocalPlayer.PlayerGui.Combat.CombatHandle.RemoteFunction:InvokeServer(unpack(attackArgs))
	
					local fistArgs = {[1] = true,[2] = ""FistQTE""}
					game.ReplicatedStorage.Remotes.Information.RemoteFunction:FireServer(unpack(fistArgs))
				end
				game.Players.LocalPlayer.PlayerGui.Combat.ActionBG.Visible = false
			end
	
			wait(.5)
			
			
		end
		con.Autos.AutoDodge.Text = ""Auto Dodge: OFF""
		con.Autos.AutoFarmCaldera.Text = ""Auto Farm Caldera: OFF""
	end
	
	game.Players.LocalPlayer.PlayerGui.Combat.ResetOnSpawn = false
	game.Players.LocalPlayer.PlayerGui.Combat.Block:GetPropertyChangedSignal(""Visible""):Connect(handleDodges)
	
	------------------------------------
	------------------------------------
	--				CTRL			  --
	------------------------------------
	------------------------------------
	
	local function SWITCHCON(name)
		for i,v in pairs(con:GetChildren())do
			if v.Name ~= name and v:IsA(""ScrollingFrame"") then
				v.Visible = false
			else
				v.Visible = true
			end
		end
	end
	
	top.MIN.Activated:Connect(function()
		if open then
			open = false
			con.Visible = false
			nav.Visible = false
			script.Parent.BackgroundTransparency = 1
		else
			open = true
			con.Visible = true
			nav.Visible = true
			script.Parent.BackgroundTransparency = .25
		end
	end)
	
	top.CLOSE.Activated:Connect(function()
		autoDodge = false
		script.Parent.Parent:Destroy()
	end)
	
	for i,v in pairs(nav:GetChildren())do
		if v:IsA(""TextButton"") then
			v.Activated:Connect(function()
				SWITCHCON(v.Name)
			end)
		end
	end
	
	------------------------------------
	------------------------------------
	--				TPS			      --
	------------------------------------
	------------------------------------
	
	con.TPs.AutoDoctor.Activated:Connect(healUp)
	
	con.TPs.Caldera.Activated:Connect(function()
		TPTO(CALDERAPOS)
	end)
	
	------------------------------------
	------------------------------------
	--				AUTOS			  --
	------------------------------------
	------------------------------------
	
	con.Autos.AutoDodge.Activated:Connect(function()
		if autoDodge and not autoFarmCaldera then
			autoDodge = false
			con.Autos.AutoDodge.Text = ""Auto Dodge: OFF""
		else
			autoDodge = true
			con.Autos.AutoDodge.Text = ""Auto Dodge: ON""
		end
	end)
	
	con.Autos.AutoFarmCaldera.Activated:Connect(function()
		if autoFarmCaldera then
			autoFarmCaldera = false
			con.Autos.AutoFarmCaldera.Text = ""Auto Farm Caldera: OFF""
		else
			autoFarmCaldera = true
			autoDodge = true
			con.Autos.AutoDodge.Text = ""Auto Dodge: ON""
			con.Autos.AutoFarmCaldera.Text = ""Auto Farm Caldera: ON""
			handleCalderaFarm()
		end
	end)
	
	
end
coroutine.wrap(EIOJBG_fake_script)()
"
S9tTvwnK,Level system code,TinTz,JavaScript,Wednesday 19th of July 2023 03:56:31 PM CDT,"const {
  Client,
  Interaction,
  ApplicationCommandOptionType,
  AttachmentBuilder,
} = require('discord.js');
const canvacord = require('canvacord');
const calculateLevelXp = require('../../utils/calculateLevelXp');
const Level = require('../../models/Level');

module.exports = {
  /**
   *
   * @param {Client} client
   * @param {Interaction} interaction
   */
  callback: async (client, interaction) => {
    if (!interaction.inGuild()) {
      interaction.reply('You can only run this command inside a server.');
      return;
    }

    await interaction.deferReply();

    const mentionedUserId = interaction.options.get('target-user')?.value;
    const targetUserId = mentionedUserId || interaction.member.id;
    const targetUserObj = await interaction.guild.members.fetch(targetUserId);

    const fetchedLevel = await Level.findOne({
      userId: targetUserId,
      guildId: interaction.guild.id,
    });

    if (!fetchedLevel) {
      interaction.editReply(
        mentionedUserId
          ? `${targetUserObj.user.tag} doesn't have any levels yet. Try again when they chat a little more.`
          : ""You don't have any levels yet. Chat a little more and try again.""
      );
      return;
    }

    let allLevels = await Level.find({ guildId: interaction.guild.id }).select(
      '-_id userId level xp'
    );

    allLevels.sort((a, b) => {
      if (a.level === b.level) {
        return b.xp - a.xp;
      } else {
        return b.level - a.level;
      }
    });

    let currentRank = allLevels.findIndex((lvl) => lvl.userId === targetUserId) + 1;

    const rank = new canvacord.Rank()
      .setAvatar(targetUserObj.user.displayAvatarURL({ size: 256 }))
      .setRank(currentRank)
      .setLevel(fetchedLevel.level)
      .setCurrentXP(fetchedLevel.xp)
      .setRequiredXP(calculateLevelXp(fetchedLevel.level))
      .setStatus(targetUserObj.presence.status)
      .setProgressBar('#FFC300', 'COLOR')
      .setUsername(targetUserObj.user.username)
      .setDiscriminator(targetUserObj.user.discriminator);

    const data = await rank.build();
    const attachment = new AttachmentBuilder(data);
    interaction.editReply({ files: [attachment] });
  },

  name: 'level',
  description: ""Shows your/someone's level."",
  options: [
    {
      name: 'target-user',
      description: 'The user whose level you want to see.',
      type: ApplicationCommandOptionType.Mentionable,
    },
  ],
};
"
rUNKKPyr,X-Ray script,BrunoR12,Lua,Wednesday 19th of July 2023 03:12:14 PM CDT,"local Players = game:GetService(""Players"")
local Player = Players.LocalPlayer
local XRay = game.Workspace.XRay

local UIS = game:GetService(""UserInputService"")
local Toggled = false
local Button = Player.PlayerGui:WaitForChild(""MainFrame""):WaitForChild(""ToggleButton"")
local ValidKeyCode = {
	Enum.KeyCode.E
}
local ValidTransparency = {}

UIS.InputBegan:Connect(function(key, gameProcessedEvent)
	if not gameProcessedEvent then
		if not Toggled then
			for _, KEY in pairs(ValidKeyCode) do
				if key.KeyCode == KEY then
					for partsIndex, parts in pairs(XRay:GetDescendants()) do
						local success, err = pcall(function()
							ValidTransparency[""Part-""..parts.Name] = parts.Transparency
							parts.Transparency = 0.5
							Toggled = true
						end)
					end
				end
			end
		else
			for _, KEY in pairs(ValidKeyCode) do
				if key.KeyCode == KEY then
					for partsIndex, parts in pairs(XRay:GetDescendants()) do
						local success, err = pcall(function()
							parts.Transparency = ValidTransparency[""Part-""..parts.Name]
							Toggled = false
						end)
					end
				end
			end
		end
	end
end)

Button.MouseButton1Click:Connect(function()
	if not Toggled then
		for _, KEY in pairs(ValidKeyCode) do
			for partsIndex, parts in pairs(XRay:GetDescendants()) do
				local success, err = pcall(function()
					ValidTransparency[""Part-""..parts.Name] = parts.Transparency
					parts.Transparency = 0.5
					Toggled = true
				end)
			end
		end
	else
		for _, KEY in pairs(ValidKeyCode) do
			for partsIndex, parts in pairs(XRay:GetDescendants()) do
				local success, err = pcall(function()
					parts.Transparency = ValidTransparency[""Part-""..parts.Name]
					Toggled = false
				end)
			end
		end
	end
end)"
Hxhh6RCz,zzzzzzzzzzzzzZZZ,JeCodeLeSoir,C#,Wednesday 19th of July 2023 03:05:34 PM CDT,"[SerializeField] private Animator m_animator;
private void Reset()
{
   m_animator = GetComponent<Animator>();
}"
ygCHbdhP,spinner.html,Talilo,HTML,Wednesday 19th of July 2023 02:16:48 PM CDT,"<!--https://pt.stackoverflow.com/questions/296506/como-fazer-um-spinner-puro-em-css-->

MODELO 1
--------------------------------------------

<div class=""spinner""></div>

/* Spinner CSS */
@keyframes spinner {
  to {transform: rotate(360deg);}
}
.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 20%;
  left: 20%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid #ccc;
  border-top-color: #333;
  animation: spinner .6s linear infinite;
}

MODELO 2
--------------------------------------------
<div class=""spinner"">
  <div class=""rect1""></div>
  <div class=""rect2""></div>
  <div class=""rect3""></div>
  <div class=""rect4""></div>
  <div class=""rect5""></div>
</div>


.spinner {
  margin: 100px auto;
  width: 50px;
  height: 40px;
  text-align: center;
  font-size: 10px;
}

.spinner > div {
  background-color: #333;
  height: 100%;
  width: 6px;
  display: inline-block;
  
  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
  animation: sk-stretchdelay 1.2s infinite ease-in-out;
}

.spinner .rect2 {
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.spinner .rect3 {
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

.spinner .rect4 {
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.spinner .rect5 {
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% { -webkit-transform: scaleY(0.4) }  
  20% { -webkit-transform: scaleY(1.0) }
}

@keyframes sk-stretchdelay {
  0%, 40%, 100% { 
    transform: scaleY(0.4);
    -webkit-transform: scaleY(0.4);
  }  20% { 
    transform: scaleY(1.0);
    -webkit-transform: scaleY(1.0);
  }
}

MODELO 3
--------------------------------------------

<div class=""spinner"">
  <div class=""bounce1""></div>
  <div class=""bounce2""></div>
  <div class=""bounce3""></div>
</div>



.spinner {
  margin: 100px auto 0;
  width: 70px;
  text-align: center;
}

.spinner > div {
  width: 18px;
  height: 18px;
  background-color: #333;

  border-radius: 100%;
  display: inline-block;
  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
  animation: sk-bouncedelay 1.4s infinite ease-in-out both;
}

.spinner .bounce1 {
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s;
}

.spinner .bounce2 {
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}

@-webkit-keyframes sk-bouncedelay {
  0%, 80%, 100% { -webkit-transform: scale(0) }
  40% { -webkit-transform: scale(1.0) }
}

@keyframes sk-bouncedelay {
  0%, 80%, 100% { 
    -webkit-transform: scale(0);
    transform: scale(0);
  } 40% { 
    -webkit-transform: scale(1.0);
    transform: scale(1.0);
  }
}
"
6shD9Qgm,test,ASRS_,Lua,Wednesday 19th of July 2023 02:01:20 PM CDT,"local a = 1
local b = 1
local a1 = 2
local b1 = 2
local xmin = 1
local ymin = 1
local xmax, ymax = term.getSize()
while true do
    local event, key, isHeld = os.pullEvent(""key"")
    if (key == 17) and (b > ymin) then
        --W
        b = b - 1
    end
    if (key == 30) and (a > xmin) then
        --A
        a = a - 1
    end
    if (key == 31) and (b < ymax) then
        --S
        b = b + 1
    end
    if (key == 32) and (a < xmax) then
        --D
        a = a + 1
    end
    if (key == 200) and (b1 > ymin) then
        --up
        b1 = b1 - 1
    end
    if (key == 203) and (a1 > xmin) then
        --left
        a1 = a1 - 1
    end
    if (key == 208) and (b1 < ymax) then
        --down
        b1 = b1 + 1
    end
    if (key == 205) and (a1 < xmax) then
        --right
        a1 = a1 + 1
    end
    term.clear()
	term.setCursorPos(1, 1)
    term.write(a)
	term.write(b)
	term.write(a1)
	term.write(b1)
    os.queueEvent(""fakeEvent"");
    os.pullEvent();
end"
AGJdhL6h,aomenc vmaf build -DBUILD_SHARED_LIBS=0,damian101,Make,Wednesday 19th of July 2023 01:56:52 PM CDT,"[ 98%] Linking CXX executable resize_util
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
[ 98%] Linking CXX executable aomenc
/usr/bin/ld: cannot find -lvmaf: No such file or directory
/usr/bin/ld: cannot find -lvmaf: No such file or directory
[ 98%] Linking CXX static library libaom_av1_rc.a
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/set_maps.dir/build.make:178: examples/set_maps] Error 1
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/Makefile2:1442: CMakeFiles/set_maps.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
collect2: error: ld returned 1 exit status
collect2: error: ld returned 1 exit status
collect2: error: ld returned 1 exit status
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/aomenc.dir/build.make:182: aomenc] Error 1
make[1]: *** [CMakeFiles/Makefile2:1382: CMakeFiles/aomenc.dir/all] Error 2
make[2]: *** [CMakeFiles/lossless_encoder.dir/build.make:178: examples/lossless_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1412: CMakeFiles/lossless_encoder.dir/all] Error 2
make[2]: *** [CMakeFiles/noise_model.dir/build.make:178: examples/noise_model] Error 1
make[2]: *** [CMakeFiles/resize_util.dir/build.make:166: resize_util] Error 1
make[2]: *** [CMakeFiles/simple_encoder.dir/build.make:178: examples/simple_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1532: CMakeFiles/noise_model.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:1325: CMakeFiles/resize_util.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:1472: CMakeFiles/simple_encoder.dir/all] Error 2
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/twopass_encoder.dir/build.make:178: examples/twopass_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1502: CMakeFiles/twopass_encoder.dir/all] Error 2
[ 98%] Built target aom_av1_rc
make: *** [Makefile:136: all] Error 2"
7WMfTDLC,aomenc vmaf build,damian101,Make,Wednesday 19th of July 2023 01:42:36 PM CDT,"[ 99%] Built target photon_noise_table
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c: In function ‘aom_stop_encode.isra’:
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:27:3: warning: ‘bytes’ may be used uninitialized [-Wmaybe-uninitialized]
   27 |   memcpy(w->buffer, data, bytes);
      |   ^
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:23:12: note: ‘bytes’ was declared here
   23 |   uint32_t bytes;
      |            ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3963:6: warning: ‘payload_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3963 |   if (new_payload_size != payload_size) {
      |      ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3953:12: note: ‘payload_size’ was declared here
 3953 |   uint64_t payload_size;
      |            ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3961:18: warning: ‘length_field_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3961 |   const uint64_t new_payload_size =
      |                  ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3954:10: note: ‘length_field_size’ was declared here
 3954 |   size_t length_field_size;
      |          ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3968:8: warning: ‘new_length_field_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3968 |     if (new_length_field_size < length_field_size) {
      |        ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3964:12: note: ‘new_length_field_size’ was declared here
 3964 |     size_t new_length_field_size;
      |            ^
/usr/bin/ld: /tmp/ccEsGwqA.ltrans3.ltrans.o: in function `encoder_encode':
<artificial>:(.text+0x72ce): undefined reference to `vmaf_model_load_from_path'
/usr/bin/ld: /tmp/ccEsGwqA.ltrans7.ltrans.o: in function `av1_remove_compressor':
<artificial>:(.text+0xe2a4): undefined reference to `vmaf_model_destroy'
/usr/bin/ld: /tmp/ccEsGwqA.ltrans9.ltrans.o: in function `encode_frame_to_data_rate':
<artificial>:(.text+0x2153): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x218a): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x22c1): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x22d3): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x22dd): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x2915): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x2999): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x2a89): undefined reference to `vmaf_close'
/usr/bin/ld: <artificial>:(.text+0x5184): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: /tmp/ccEsGwqA.ltrans25.ltrans.o: in function `aom_init_vmaf_context':
<artificial>:(.text+0x196f3): undefined reference to `vmaf_init'
/usr/bin/ld: <artificial>:(.text+0x1972c): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19748): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x1975c): undefined reference to `vmaf_use_features_from_model'
/usr/bin/ld: <artificial>:(.text+0x197b3): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x197cf): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x197f1): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19808): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: /tmp/ccEsGwqA.ltrans25.ltrans.o: in function `aom_calc_vmaf':
<artificial>:(.text+0x198eb): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19914): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19a02): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a1a): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a2c): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a36): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a4c): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x19a56): undefined reference to `vmaf_close'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/aomenc.dir/build.make:182: aomenc] Error 1
make[1]: *** [CMakeFiles/Makefile2:1415: CMakeFiles/aomenc.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c: In function ‘aom_stop_encode.isra’:
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:27:3: warning: ‘bytes’ may be used uninitialized [-Wmaybe-uninitialized]
   27 |   memcpy(w->buffer, data, bytes);
      |   ^
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:23:12: note: ‘bytes’ was declared here
   23 |   uint32_t bytes;
      |            ^
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c: In function ‘aom_stop_encode.isra’:
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:27:3: warning: ‘bytes’ may be used uninitialized [-Wmaybe-uninitialized]
   27 |   memcpy(w->buffer, data, bytes);
      |   ^
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:23:12: note: ‘bytes’ was declared here
   23 |   uint32_t bytes;
      |            ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3963:6: warning: ‘payload_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3963 |   if (new_payload_size != payload_size) {
      |      ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3953:12: note: ‘payload_size’ was declared here
 3953 |   uint64_t payload_size;
      |            ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3961:18: warning: ‘length_field_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3961 |   const uint64_t new_payload_size =
      |                  ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3954:10: note: ‘length_field_size’ was declared here
 3954 |   size_t length_field_size;
      |          ^
In function ‘write_tile_obu_size’,
    inlined from ‘pack_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4039:5,
    inlined from ‘write_tiles_in_tg_obus’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4069:10,
    inlined from ‘av1_pack_bitstream’ at /home/damian101/git-clone/aom/av1/encoder/bitstream.c:4207:17:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3968:8: warning: ‘new_length_field_size’ may be used uninitialized [-Wmaybe-uninitialized]
 3968 |     if (new_length_field_size < length_field_size) {
      |        ^
/home/damian101/git-clone/aom/av1/encoder/bitstream.c: In function ‘av1_pack_bitstream’:
/home/damian101/git-clone/aom/av1/encoder/bitstream.c:3964:12: note: ‘new_length_field_size’ was declared here
 3964 |     size_t new_length_field_size;
      |            ^
/usr/bin/ld: /tmp/ccyJxzxE.ltrans1.ltrans.o: in function `encoder_encode':
<artificial>:(.text+0x2eee): undefined reference to `vmaf_model_load_from_path'
/usr/bin/ld: /tmp/ccyJxzxE.ltrans5.ltrans.o: in function `av1_remove_compressor':
<artificial>:(.text+0xe2a4): undefined reference to `vmaf_model_destroy'
/usr/bin/ld: /tmp/ccyJxzxE.ltrans7.ltrans.o: in function `encode_frame_to_data_rate':
<artificial>:(.text+0x2153): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x218a): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x22c1): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x22d3): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x22dd): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x2915): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x2999): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x2a89): undefined reference to `vmaf_close'
/usr/bin/ld: <artificial>:(.text+0x5184): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: /tmp/ccyJxzxE.ltrans23.ltrans.o: in function `aom_init_vmaf_context':
<artificial>:(.text+0x196f3): undefined reference to `vmaf_init'
/usr/bin/ld: <artificial>:(.text+0x1972c): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19748): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x1975c): undefined reference to `vmaf_use_features_from_model'
/usr/bin/ld: <artificial>:(.text+0x197b3): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x197cf): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x197f1): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19808): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: /tmp/ccyJxzxE.ltrans23.ltrans.o: in function `aom_calc_vmaf':
<artificial>:(.text+0x198eb): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19914): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19a02): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a1a): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a2c): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a36): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a4c): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x19a56): undefined reference to `vmaf_close'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/set_maps.dir/build.make:178: examples/set_maps] Error 1
make[1]: *** [CMakeFiles/Makefile2:1475: CMakeFiles/set_maps.dir/all] Error 2
/usr/bin/ld: /tmp/ccPXsDXg.ltrans1.ltrans.o: in function `encoder_encode':
<artificial>:(.text+0x2eee): undefined reference to `vmaf_model_load_from_path'
/usr/bin/ld: /tmp/ccPXsDXg.ltrans5.ltrans.o: in function `av1_remove_compressor':
<artificial>:(.text+0xe2a4): undefined reference to `vmaf_model_destroy'
/usr/bin/ld: /tmp/ccPXsDXg.ltrans7.ltrans.o: in function `encode_frame_to_data_rate':
<artificial>:(.text+0x2153): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x218a): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x22c1): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x22d3): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x22dd): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x2915): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x2999): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x2a89): undefined reference to `vmaf_close'
/usr/bin/ld: <artificial>:(.text+0x5184): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: /tmp/ccPXsDXg.ltrans23.ltrans.o: in function `aom_init_vmaf_context':
<artificial>:(.text+0x196f3): undefined reference to `vmaf_init'
/usr/bin/ld: <artificial>:(.text+0x1972c): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19748): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x1975c): undefined reference to `vmaf_use_features_from_model'
/usr/bin/ld: <artificial>:(.text+0x197b3): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x197cf): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x197f1): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19808): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: /tmp/ccPXsDXg.ltrans23.ltrans.o: in function `aom_calc_vmaf':
<artificial>:(.text+0x198eb): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19914): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19a02): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a1a): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a2c): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a36): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a4c): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x19a56): undefined reference to `vmaf_close'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/lossless_encoder.dir/build.make:178: examples/lossless_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1445: CMakeFiles/lossless_encoder.dir/all] Error 2
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c: In function ‘aom_stop_encode.isra’:
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:27:3: warning: ‘bytes’ may be used uninitialized [-Wmaybe-uninitialized]
   27 |   memcpy(w->buffer, data, bytes);
      |   ^
/home/damian101/git-clone/aom/aom_dsp/bitwriter.c:23:12: note: ‘bytes’ was declared here
   23 |   uint32_t bytes;
      |            ^
/usr/bin/ld: /tmp/ccfhp18n.ltrans1.ltrans.o: in function `encoder_encode':
<artificial>:(.text+0x2eee): undefined reference to `vmaf_model_load_from_path'
/usr/bin/ld: /tmp/ccfhp18n.ltrans5.ltrans.o: in function `av1_remove_compressor':
<artificial>:(.text+0xe2a4): undefined reference to `vmaf_model_destroy'
/usr/bin/ld: /tmp/ccfhp18n.ltrans7.ltrans.o: in function `encode_frame_to_data_rate':
<artificial>:(.text+0x2153): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x218a): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x22c1): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x22d3): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x22dd): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x2915): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x2999): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x2a89): undefined reference to `vmaf_close'
/usr/bin/ld: <artificial>:(.text+0x5184): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: /tmp/ccfhp18n.ltrans23.ltrans.o: in function `aom_init_vmaf_context':
<artificial>:(.text+0x196f3): undefined reference to `vmaf_init'
/usr/bin/ld: <artificial>:(.text+0x1972c): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19748): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x1975c): undefined reference to `vmaf_use_features_from_model'
/usr/bin/ld: <artificial>:(.text+0x197b3): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x197cf): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x197f1): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19808): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: /tmp/ccfhp18n.ltrans23.ltrans.o: in function `aom_calc_vmaf':
<artificial>:(.text+0x198eb): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19914): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19a02): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a1a): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a2c): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a36): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a4c): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x19a56): undefined reference to `vmaf_close'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/simple_encoder.dir/build.make:178: examples/simple_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1505: CMakeFiles/simple_encoder.dir/all] Error 2
/usr/bin/ld: /tmp/ccfrWz2Z.ltrans1.ltrans.o: in function `encoder_encode':
<artificial>:(.text+0x2eee): undefined reference to `vmaf_model_load_from_path'
/usr/bin/ld: /tmp/ccfrWz2Z.ltrans5.ltrans.o: in function `av1_remove_compressor':
<artificial>:(.text+0xe2a4): undefined reference to `vmaf_model_destroy'
/usr/bin/ld: /tmp/ccfrWz2Z.ltrans7.ltrans.o: in function `encode_frame_to_data_rate':
<artificial>:(.text+0x2153): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x218a): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x22c1): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x22d3): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x22dd): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x2915): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x2999): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x2a89): undefined reference to `vmaf_close'
/usr/bin/ld: <artificial>:(.text+0x5184): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: /tmp/ccfrWz2Z.ltrans23.ltrans.o: in function `aom_init_vmaf_context':
<artificial>:(.text+0x196f3): undefined reference to `vmaf_init'
/usr/bin/ld: <artificial>:(.text+0x1972c): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19748): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x1975c): undefined reference to `vmaf_use_features_from_model'
/usr/bin/ld: <artificial>:(.text+0x197b3): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x197cf): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: <artificial>:(.text+0x197f1): undefined reference to `vmaf_feature_dictionary_set'
/usr/bin/ld: <artificial>:(.text+0x19808): undefined reference to `vmaf_model_feature_overload'
/usr/bin/ld: /tmp/ccfrWz2Z.ltrans23.ltrans.o: in function `aom_calc_vmaf':
<artificial>:(.text+0x198eb): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19914): undefined reference to `vmaf_picture_alloc'
/usr/bin/ld: <artificial>:(.text+0x19a02): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a1a): undefined reference to `vmaf_read_pictures'
/usr/bin/ld: <artificial>:(.text+0x19a2c): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a36): undefined reference to `vmaf_picture_unref'
/usr/bin/ld: <artificial>:(.text+0x19a4c): undefined reference to `vmaf_score_at_index'
/usr/bin/ld: <artificial>:(.text+0x19a56): undefined reference to `vmaf_close'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/twopass_encoder.dir/build.make:178: examples/twopass_encoder] Error 1
make[1]: *** [CMakeFiles/Makefile2:1535: CMakeFiles/twopass_encoder.dir/all] Error 2
make: *** [Makefile:136: all] Error 2"
1WBJsveR,lesson8_321,Petro_zzz,C++,Wednesday 19th of July 2023 01:39:53 PM CDT,"#include <iostream>

using namespace std;

void check_exam() {
	int a1, a2, a3, a4, a5;
	double aver = 0;

	cout << ""Введите 5 оценок через пробел: "";
	cin >> a1 >> a2 >> a3 >> a4 >> a5;
	if (a1 < 0 || a1 > 5 || 
		a2 < 0 || a2 > 5 ||
		a3 < 0 || a3 > 5 || 
		a4 < 0 || a4 > 5 || 
		a5 < 0 || a5 > 5 ) {
		cout << ""не корректный ввод"" << endl;
		return;
	}

	aver = (a1 + a2 + a3 + a4 + a5) / 5.0;
	cout << ""Средний балл: "" << aver << endl;
	if (aver >= 3.5) {
		cout << ""Вы допущены."";
	}
	else {
		cout << ""Сожалеем. Вы не допущены."";
	}
	cout << endl;
}

void check_exam2() {
	int ball;
	double aver = 0;

	cout << ""Введите 5 оценок,нажимая Enter"" << endl;
	cin >> ball;
	aver = aver + ball;
	cin >> ball;
	aver = aver + ball;
	cin >> ball;
	aver = aver + ball;
	cin >> ball;
	aver = aver + ball;
	cin >> ball;
	aver = aver + ball;
	aver = aver / 5.0;
	cout << ""Средний балл: "" << aver << endl;

	if (aver > 3.5) {
		cout << ""Вы допущены."";
	}
	else {
		cout << ""Сожалеем. Вы не допущены."";
	}
	cout << endl;
}

void do_calc() {
	cout << ""Введите выражение в формате\n""
		<< ""[число оператор число] и нажмие Enter\n"";

	double x, y;
	char op;

	cin >> x >> op >> y;
	system(""cls"");
	cout << x << "" "" << op << "" "" << y << "" = "";
	if (op == '+') {
		cout << x + y;
	}
	else if (op == '-') {
		cout << x - y;
	}
	else if (op == '*') {
		cout << x * y;
	}
	else if (op == '/') {
		//if (y != 0) {
		//if ((y > 1.0e-6) || (y < -1.0e-6)) {
		if (abs(y) > 1.0e-6) {
			cout << x / y;
		}
		else {
			cout << ""\nОшибка делитель очень мал."";
		}
	}
	else {
		cout << ""\nОшибка при интерпритации оператора"";
	}
	cout << endl;
}

void abs() {
	cout << ""Hello "" << endl;
}

void test_operators() {
	int x = 5;
	int res = 1;
	res *= x;
	x -= 1;
	res *= x;
	x -= 1;
	res *= x;
	x -= 1;
	res *= x;
	x -= 1;
	cout << res << "" "" << x << endl;
}

int main() {
	setlocale(LC_ALL, ""ru"");
	//check_exam2();
	//abs();
	//do_calc();	
	system(""pause"");
	return 0;
}"
MCevB7hA,Error Bresenham CC (WASD and Arrow Keys),ASRS_,Lua,Wednesday 19th of July 2023 01:30:56 PM CDT,"term.clear()
function line(x0, y0, x1, y1)
local dx = math.abs(x1 - x0)
local dy = math.abs(y1 - y0)
local cx
if x0 < x1 then
	cx = 1
else
	cx = -1
end
local cy
if y0 < y1 then
	cy = 1
else
	cy = - 1
end
local flip = false
local temp
if dy > dx then
	flip = 1
	temp = dx
	dx = dy
	dy = temp
end
local e = 2*dy - dx
local f = 2*dy - 2*dx
while true do
	term.setCursorPos(x0, y0)
	term.write(""O"")
	if (x0 == x1) and (y0 == y1) then break end
	if e >= 0 then
		e = e + f
		x0 = x0 + cx
		y0 = y0 + cy
	else
		e = e + 2*dy
		if flip == 1 then
			y0 = y0 + cy
		else
			x0 = x0 + cx
		end
	end
end
end
local a = 1
local b = 1
local a1 = 2
local b1 = 2
local xmin = 1
local ymin = 1
local xmax, ymax = term.getSize()
while true do
    local event, key, isHeld = os.pullEvent(""key"")
    if (key == 17) and (b > ymin) then
        --W
        b = b - 1
    end
    if (key == 30) and (a > xmin) then
        --A
        a = a - 1
    end
    if (key == 31) and (b < ymax) then
        --S
        b = b + 1
    end
    if (key == 32) and (a < xmax) then
        --D
        a = a + 1
    end
    if (key == 200) and (b1 > ymin) then
        --up
        b1 = b1 - 1
    end
    if (key == 203) and (a1 > xmin) then
        --left
        a1 = a1 - 1
    end
    if (key == 208) and (b1 < ymax) then
        --down
        b1 = b1 + 1
    end
    if (key == 205) and (a1 < xmax) then
        --right
        a1 = a1 + 1
    end
	term.clear()
	line(a, b, a1, b1)
	os.queueEvent(""fakeEvent"");
	os.pullEvent();
end
		
"
e56hs58p,maWS,LeonMMS,Ruby,Wednesday 19th of July 2023 01:30:37 PM CDT,"#------------------------------------------------- ------------------------------
# MAWS - Modified Advanced Weather Script for RPG Maker VX
# Version: 1.1.
# Based on Advanced Weather Script VX by Ccoa
# Modifications created by Agckuu Coceg
#------------------------------------------------- ------------------------------
# Thanks DerWulfman to his help with VX version of script.
#-------------------------------------------------------------------------------
# Weather Types:
# 1 - Rain (Ccoa)
# 2 - Storm (Ccoa)
# 3 - Snow (Ccoa)
# 4 - Hail (Ccoa)
# 5 - Thunderstorm (Ccoa)
# 6 - Fallen Brown Leaf (Ccoa)
# 7 - Blowing Brown Leaves (Ccoa)
# 8 - Curly Brown Leaves (Ccoa)
# 9 - Falling Green Leaf (Ccoa)
# 10 - Cherry Blossom (Sakura) Petals (Ccoa)
# 11 - Rose Petals (Ccoa)
# 12 - Feather (Ccoa)
# 13 - Blood Rain (Ccoa)
# 14 - Sparks (Ccoa)
# 15 - User Defined
# 16 - Fubuki (Ccoa)
# 17 - Meteor Shower (Ccoa)
# 18 - Falling Ash (Ccoa)
# 19 - Bubbles (Ccoa)
# 20 - Bubbles 2 (Ccoa)
# 21 - Sparks Rise (Ccoa)
#------------------------------------------------- ------------------------------
# Version 1.0 addons
#------------------------------------------------- ------------------------------
# Leaves effects:
# 22 - Blowing Green Leaves (Agckuu Coceg)
# 23 - Curly Green Leaves (Agckuu Coceg)
# 24 - Falling Yellow Leaf (Agckuu Coceg)
# 25 - Blowing Yellow Leaves (Agckuu Coceg)
# 26 - Curly Yellow Leaves (Agckuu Coceg)
# Rain effects:
# 27 - Oil Rain (Agckuu Coceg)
# 28 - Golden Rain (Agckuu Coceg)
# Special effects:
# 29 - Fire Meteor Shower (Agckuu Coceg)
#------------------------------------------------- ------------------------------
# Version 1.1 addons
#------------------------------------------------- ------------------------------
# Starburst effects addons:
# 30 - Color Starburst v.2 (replaced Color Starburst)(Agckuu Coceg)
# 31 - Uprising color Starburst v.2 (replaced Uprising color Starburst)
# (Agckuu Coceg)
# 32 - Color Starburst rain v.2 (replaced Color Starburst rain)(Agckuu Coceg)
# 33 - Monochromatic Storm (Agckuu Coceg)
# 34 - Upgraded Monochromatic Storm (Agckuu Coceg)
# 35 - Monochromatic Rainstorm (Agckuu Coceg)
# Rain effects:
# 36 - Golden Rain, Thunder and Flash (Agckuu Coceg)
# 37 - Golden Storm (Agckuu Coceg)
# 38 - Oil Storm (Agckuu Coceg)
# 39 - Acid Rain (Agckuu Coceg)
# 40 - Acid Rain Lightning and Flash (Agckuu Coceg)
# 41 - Acid Storm (Agckuu Coceg)
# 42 - Tan Rain (Agckuu Coceg)
# 43 - Sepia Rain Lightning and Flash (Agckuu Coceg)
# 44 - Sepia Rainstorm (Agckuu Coceg)
# 45 - Reality Storm (Agckuu Coceg)
# 46 - Blood Rain Crimson Lightning and Thunder (Agckuu Coceg)
# 47 - Bloodstorm (Agckuu Coceg)
# 48 - Blood Blizzard (Agckuu Coceg)
# New leaves effects:
# 49 - Falling Red Maple Leaf (Agckuu Coceg)
# 50 - Blowing Red Maple Leaf (Agckuu Coceg)
# 51 - Curly Red Maple Leaf (Agckuu Coceg)
# Special effects:
# 52 - Water Bomb (Agckuu Coceg)
# 53 - Ice Bomb (Agckuu Coceg)
# 54 - Flare (Agckuu Coceg)
#-------------------------------------------------------------------------------
#  Weather Power:
#    An integer from 0-40.  0 = no weather, 40 = 400 sprites
#-------------------------------------------------------------------------------
#  Usage:
#  Create a call script with the following: screen.weather(type, power, hue)
#-------------------------------------------------------------------------------
#  Usage of user-defined weather. Look at the following globals:
$WEATHER_UPDATE = false   # the $WEATHER_IMAGES array has changed, please update
$WEATHER_IMAGES = []      # the array of picture names to use
$WEATHER_X = 0           # the number of pixels the image should move horizontally (positive = right, negative = left)
$WEATHER_Y = 0            # the number of pizels the image should move vertically (positive = down, negative = up)
$WEATHER_FADE = 0         # how much the image should fade each update (0 = no fade, 255 = fade instantly)
$WEATHER_ANIMATED = true # whether or not the image should cycle through all the images
 
# Take these out if you are using screen resolution script of Ccoa.
  #HEIGHT = 416
  #WIDTH = 544
 
#==============================================================================
# ** Spriteset_Weather
#------------------------------------------------------------------------------
 
class Spriteset_Weather
  #--------------------------------------------------------------------------
  # * Public Instance Variables
  #--------------------------------------------------------------------------
  attr_reader :type
  attr_reader :power
  attr_reader :ox
  attr_reader :oy
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize(viewport = nil)
    @type = 0
    @power = 0
    @ox = 0
    @oy = 0
 
    @count = 0
    @current_pose = []
    @info = []
    @countarray = []
 
    make_bitmaps
 
    @sprites = []
 
    for i in 1..500
      sprite = Sprite.new(viewport)
      sprite.visible = false
      sprite.opacity = 0
      @sprites.push(sprite)
      @current_pose.push(0)
      @info.push(rand(50))
      @countarray.push(rand(15))
    end
 
  end
  #--------------------------------------------------------------------------
  # * Dispose
  #--------------------------------------------------------------------------
  def dispose
    for sprite in @sprites
      sprite.dispose
    end
    @rain_bitmap.dispose
    @storm_bitmap.dispose
    @snow_bitmap.dispose
    @hail_bitmap.dispose
    @petal_bitmap.dispose
    @blood_rain_bitmap.dispose
    @oil_rain_bitmap.dispose
    @golden_rain_bitmap.dispose
    @golden_storm_bitmap.dispose
    @acid_rain_bitmap.dispose
    @acid_storm_bitmap.dispose
    @sepia_rain_bitmap.dispose
    @sepia_storm_bitmap.dispose
    @blood_storm_bitmap.dispose
    @bloodblizz_bitmap.dispose
    @meteor_bitmap.dispose
    @flame_meteor_bitmap.dispose
    @waterbomb_bitmap.dispose
    @icybomb_bitmap.dispose
    @flarebomb_bitmap.dispose
    for image in @autumn_leaf_bitmaps
      image.dispose
    end
    for image in @green_leaf_bitmaps
      image.dispose
    end
    for image in @yellow_leaf_bitmaps
      image.dispose
    end
    for image in @redmaple_leaf_bitmaps
      image.dispose
    end
    for image in @rose_bitmaps
      image.dispose
    end
    for image in @feather_bitmaps
      image.dispose
    end
    for image in @sparkle_bitmaps
      image.dispose
    end
    for image in @starburst_bitmaps
      image.dispose
    end
    for image in @monostarburst_bitmaps
      image.dispose
    end
    for image in @user_bitmaps
      image.dispose
    end
    $WEATHER_UPDATE = true
  end
  #--------------------------------------------------------------------------
  # * Set weather type
  #     type : new weather type
  #--------------------------------------------------------------------------
  def type=(type)
    return if @type == type
    @type = type
    case @type
    when 1 # rain
      bitmap = @rain_bitmap
    when 2 # storm
      bitmap = @storm_bitmap
    when 3 # snow
      bitmap = @snow_bitmap
   when 4 # hail
      bitmap = @hail_bitmap
    when 5 # rain w/ thunder and lightning
      bitmap = @rain_bitmap
      @thunder = true
    when 6 # falling autumn leaves
      bitmap = @autumn_leaf_bitmaps[0]
    when 7 # blowing autumn leaves
      bitmap = @autumn_leaf_bitmaps[0]
    when 8 # swirling autumn leaves
      bitmap = @autumn_leaf_bitmaps[0]
    when 9 # falling green leaves
      bitmap = @green_leaf_bitmaps[0]
    when 10 # sakura petals
      bitmap = @petal_bitmap
    when 11 # rose petals
      bitmap = @rose_bitmaps[0]
    when 12 # feathers
      bitmap = @feather_bitmaps[0]
    when 13 # blood rain
      bitmap = @blood_rain_bitmap
    when 14 # sparkles
      bitmap = @sparkle_bitmaps[0]
    when 15 # user-defined
        bitmap = @user_bitmaps[rand(@user_bitmaps.size)]
    when 16 # blowing snow
      bitmap = @snow_bitmap
    when 17 # meteors
      bitmap = @meteor_bitmap
    when 18 # falling ash
      bitmap = @ash_bitmaps[rand(@ash_bitmaps.size)]
    when 19 # bubbles
      bitmap = @bubble_bitmaps[rand(@bubble_bitmaps.size)]
    when 21 # sparkles up
      bitmap = @sparkle_bitmaps[0]
    when 22 # blowing green leaves
      bitmap = @green_leaf_bitmaps[0]
    when 23 # swirling green leaves
      bitmap = @green_leaf_bitmaps[0]
    when 24 # falling yellow leaves
      bitmap = @yellow_leaf_bitmaps[0]
    when 25 # blowing yellow leaves
      bitmap = @yellow_leaf_bitmaps[0]
    when 26 # swirling yellow leaves
      bitmap = @yellow_leaf_bitmaps[0]
    when 27 # oil rain
       bitmap = @oil_rain_bitmap
    when 28 # golden rain
       bitmap = @golden_rain_bitmap
    when 29 # flame meteors
       bitmap = @flame_meteor_bitmap
    when 30 # starburst
      bitmap = @starburst_bitmaps[0]
    when 31 # uprising starburst
      bitmap = @starburst_bitmaps[0]
    when 32 # starburst rain
      bitmap = @starburst_bitmaps[0]
    when 33 # mono-starburst
      bitmap = @monostarburst_bitmaps[0]
    when 34 # uprising mono-starburst
      bitmap = @monostarburst_bitmaps[0]
    when 35 # mono-starburst rain
      bitmap = @monostarburst_bitmaps[0]
    when 36 # Golden rain w\ thunder and ligthning
      bitmap = @golden_rain_bitmap
      @golden_thunder = true
    when 37 # Golden storm
      bitmap = @golden_storm_bitmap
    when 38 # Oil storm
      bitmap = @oil_storm_bitmap
    when 39 # # Acid rain
      bitmap = @acid_rain_bitmap
    when 40 # Acid rain w\thunder and lightning
      bitmap = @acid_rain_bitmap
      @acid_thunder = true
    when 41 # Acid storm
      bitmap = @acid_storm_bitmap
    when 42 # Sepia rain
      bitmap = @sepia_rain_bitmap
    when 43 # Sepia rain w\ thunder and lightning
      bitmap = @sepia_rain_bitmap
      @sepia_thunder = true
    when 44 # Sepia storm
      bitmap = @sepia_storm_bitmap
    when 45 # Realistic storm
      bitmap = @storm_bitmap
      @real_storm = true
    when 46 # Blood rain w\ thunder and lightning
      bitmap = @blood_rain_bitmap
      @crimson_thunder = true
    when 47 # Blood storm
      bitmap = @blood_storm_bitmap
    when 48 # Blood blizzard
      bitmap = @bloodblizz_bitmap
    when 49 # Falling red maple leaves
      bitmap = @redmaple_leaf_bitmaps[0]
    when 50 # Blowing red maple leaves
      bitmap = @redmaple_leaf_bitmaps[0]
    when 51 # Swirling red maple leaves
      bitmap = @redmaple_leaf_bitmaps[0]
    when 52
      bitmap = @waterbomb_bitmaps
    when 53
      bitmap = @icybomb_bitmaps
    when 54
      bitmap = @flarebomb_bitmaps
    else
      bitmap = nil
    end
 
    if @type != 5
      @thunder = false
    end
 
    if @type != 36
      @golden_thunder = false
    end
 
    if @type != 40
      @acid_thunder = false
    end
 
    if @type != 43
      @sepia_thunder = false
    end
 
    if @type != 45
      @real_storm = false
    end
 
    if @type != 46
      @crimson_thunder = false
    end
 
    for i in 0...@sprites.size
      sprite = @sprites[i]
      sprite.visible = (i <= @power)
      if @type == 19
        sprite.bitmap = @bubble_bitmaps[rand(@bubble_bitmaps.size)]
      elsif @type == 20
        sprite.bitmap = @bubble2_bitmaps[rand(@bubble2_bitmaps.size)]
      elsif @type == 3
        r = rand(@snow_bitmaps.size)
        @info[i] = r
        sprite.bitmap = @snow_bitmaps[r]
      else
        sprite.bitmap = bitmap
      end
    end
  end
  #--------------------------------------------------------------------------
  # * Set starting point X coordinate
  #     ox : starting point X coordinate
  #--------------------------------------------------------------------------
  def ox=(ox)
    return if @ox == ox;
    @ox = ox
    for sprite in @sprites
      sprite.ox = @ox
    end
  end
  #--------------------------------------------------------------------------
  # * Set starting point Y coordinate
  #     oy : starting point Y coordinate
  #--------------------------------------------------------------------------
  def oy=(oy)
    return if @oy == oy;
    @oy = oy
    for sprite in @sprites
      sprite.oy = @oy
    end
  end
  #--------------------------------------------------------------------------
  # * Set maximum number of sprites
  #     max : maximum number of sprites
  #--------------------------------------------------------------------------
  def power=(power)
    @power = power
    for i in 1..40
      sprite = @sprites[i]
      sprite.visible = (i <= @power) if sprite != nil
      if @type == 19
          sprite.bitmap = @bubble_bitmaps[rand(@bubble_bitmaps.size)]
        elsif @type == 20
          sprite.bitmap = @bubble2_bitmaps[rand(@bubble2_bitmaps.size)]
        elsif @type == 3
          r = rand(@snow_bitmaps.size)
          @info[i] = r
          sprite.bitmap = @snow_bitmaps[r]
        end
    end
  end
#--------------------------------------------------------------------------
# * Frame Update
#--------------------------------------------------------------------------
  def update
    return if @type == 0
    for i in 1..@power
      sprite = @sprites[i]
      if @type == 1 or @type == 5 or @type == 13 or @type == 27 or @type == 28 or @type == 36 or @type == 39 or @type == 40 or @type == 42 or @type == 43 or @type == 46 #rain
        if sprite.opacity <= 150
          if @current_pose[i] == 0
            sprite.y += @rain_bitmap.height
            sprite.x -= @rain_bitmap.width
            if @type == 1 or @type == 5
              sprite.bitmap = @rain_splash
            else
              sprite.bitmap = @blood_rain_splash
            end
            if @type == 27
              sprite.bitmap = @oil_rain_splash
            end
            if @type == 28
              sprite.bitmap = @golden_rain_splash
            end
            if @type == 36
              sprite.bitmap = @golden_rain_splash
            end
            if @type == 39
              sprite.bitmap = @acid_rain_splash
            end
            if @type == 40
              sprite.bitmap = @acid_rain_splash
            end
            if @type == 42
              sprite.bitmap = @sepia_rain_splash
            end
            if @type == 43
              sprite.bitmap = @sepia_rain_splash
            end
            if @type == 46
              sprite.bitmap = @blood_rain_splash
            end
            @current_pose[i] = 1
          end
        else
          if @current_pose[i] == 1
            if @type == 1 or @type == 5
              sprite.bitmap = @rain_bitmap
            else
              sprite.bitmap = @blood_rain_bitmap
            end
            if @type == 27
              sprite.bitmap = @oil_rain_bitmap
            end
            if @type == 28
              sprite.bitmap = @golden_rain_bitmap
            end
            if @type == 36
              sprite.bitmap = @golden_rain_bitmap
            end
            if @type == 39
              sprite.bitmap = @acid_rain_bitmap
            end
            if @type == 40
              sprite.bitmap = @acid_rain_bitmap
            end
            if @type == 42
              sprite.bitmap = @sepia_rain_bitmap
            end
            if @type == 43
              sprite.bitmap = @sepia_rain_bitmap
            end
            if @type == 46
              sprite.bitmap = @blood_rain_bitmap
            end
            @current_pose[i] = 0
          end
          sprite.x -= 2
          sprite.y += 16
          if @thunder and (rand(8000 - @power) == 0)
            $game_map.screen.start_flash(Color.new(255, 255, 255, 255), 5)
            Audio.se_play(""Audio/SE/Thunder1"")
          end
        if @golden_thunder and (rand(8000 - @power) == 0)
            $game_map.screen.start_flash(Color.new(255, 255, 255, 255), 5)
            Audio.se_play(""Audio/SE/Thunder1"")
          end
       if @acid_thunder and (rand(5000 - @power) == 0)
            $game_map.screen.start_flash(Color.new(255, 255, 255, 255), 5)
            Audio.se_play(""Audio/SE/Thunder1"")
          end
       if @sepia_thunder and (rand(8000 - @power) == 0)
            $game_map.screen.start_flash(Color.new(169, 152, 142, 255), 5)
            Audio.se_play(""Audio/SE/Thunder1"")
          end
       if @sepia_thunder and (rand(8000 - @power) == 0)
            $game_map.screen.start_flash(Color.new(169, 152, 142, 255), 5)
            Audio.se_play(""Audio/SE/Thunder1"")
          end
       if @crimson_thunder and (rand(8000 - @power) == 0)
          $game_map.screen.start_flash(Color.new(141, 9, 9, 255), 5)
          Audio.se_play(""Audio/SE/Thunder1"")
          end
        end
        sprite.opacity -= 8
      end
      if @type == 2 or @type == 37 or @type == 38 or @type == 41 or @type == 44 or @type == 45 or @type == 47 # storm
        sprite.x -= 8
        sprite.y += 16
        sprite.opacity -= 12
      end
        if @real_storm and (rand(5000 - @power) == 0)
        $game_map.screen.start_flash(Color.new(255, 255, 255, 255), 5)
        $game_map.screen.start_shake(9, 4, 5)
        Audio.se_play(""Audio/SE/Thunder9"")
      end
      if @type == 3 # snow
        case @info[i]
        when 0 # smallest flake, fall the slowest
          sprite.y += 1
        when 1
          sprite.y += 3
        when 2
          sprite.y += 5
        when 3
          sprite.y += 7
        end
        sprite.opacity -= 3
      end
      if @type == 4 # hail
        sprite.x -= 1
        sprite.y += 18
        sprite.opacity -= 15
      end
      if @type == 6 # falling autumn leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @autumn_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @autumn_leaf_bitmaps.size
        end
        sprite.x -= 1
        sprite.y += 1
      end
      if @type == 7 # blowing autumn leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @autumn_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @autumn_leaf_bitmaps.size
        end
        sprite.x -= 10
        sprite.y += (rand(4) - 2)
      end
      if @type == 8 # swirling autumn leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @autumn_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @autumn_leaf_bitmaps.size
        end
        if @info[i] != 0
          if @info[i] >= 1 and @info[i] <= 10
            sprite.x -= 3
            sprite.y -= 1
          elsif @info[i] >= 11 and @info[i] <= 16
            sprite.x -= 1
            sprite.y -= 2
          elsif @info[i] >= 17 and @info[i] <= 20
            sprite.y -= 3
          elsif @info[i] >= 21 and @info[i] <= 30
            sprite.y -= 2
            sprite.x += 1
          elsif @info[i] >= 31 and @info[i] <= 36
            sprite.y -= 1
            sprite.x += 3
          elsif @info[i] >= 37 and @info[i] <= 40
            sprite.x += 5
          elsif @info[i] >= 41 and @info[i] <= 46
            sprite.y += 1
            sprite.x += 3
          elsif @info[i] >= 47 and @info[i] <= 58
            sprite.y += 2
            sprite.x += 1
          elsif @info[i] >= 59 and @info[i] <= 64
            sprite.y += 3
          elsif @info[i] >= 65 and @info[i] <= 70
            sprite.x -= 1
            sprite.y += 2
          elsif @info[i] >= 71 and @info[i] <= 81
            sprite.x -= 3
            sprite.y += 1
          elsif @info[i] >= 82 and @info[i] <= 87
            sprite.x -= 5
          end
          @info[i] = (@info[i] + 1) % 88
        else
          if rand(200) == 0
            @info[i] = 1
          end
          sprite.x -= 5
          sprite.y += 1
        end
      end
        if @type == 49 # falling red maple leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @redmaple_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @redmaple_leaf_bitmaps.size
        end
        sprite.x -= 1
        sprite.y += 1
      end
      if @type == 50 # blowing red maple leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @redmaple_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @redmaple_leaf_bitmaps.size
        end
        sprite.x -= 10
        sprite.y += (rand(4) - 2)
      end
      if @type == 51 # swirling red maple leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @redmaple_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @redmaple_leaf_bitmaps.size
        end
        if @info[i] != 0
          if @info[i] >= 1 and @info[i] <= 10
            sprite.x -= 3
            sprite.y -= 1
          elsif @info[i] >= 11 and @info[i] <= 16
            sprite.x -= 1
            sprite.y -= 2
          elsif @info[i] >= 17 and @info[i] <= 20
            sprite.y -= 3
          elsif @info[i] >= 21 and @info[i] <= 30
            sprite.y -= 2
            sprite.x += 1
          elsif @info[i] >= 31 and @info[i] <= 36
            sprite.y -= 1
            sprite.x += 3
          elsif @info[i] >= 37 and @info[i] <= 40
            sprite.x += 5
          elsif @info[i] >= 41 and @info[i] <= 46
            sprite.y += 1
            sprite.x += 3
          elsif @info[i] >= 47 and @info[i] <= 58
            sprite.y += 2
            sprite.x += 1
          elsif @info[i] >= 59 and @info[i] <= 64
            sprite.y += 3
          elsif @info[i] >= 65 and @info[i] <= 70
            sprite.x -= 1
            sprite.y += 2
          elsif @info[i] >= 71 and @info[i] <= 81
            sprite.x -= 3
            sprite.y += 1
          elsif @info[i] >= 82 and @info[i] <= 87
            sprite.x -= 5
          end
          @info[i] = (@info[i] + 1) % 88
        else
          if rand(200) == 0
            @info[i] = 1
          end
          sprite.x -= 5
          sprite.y += 1
        end
      end
      if @type == 9 # falling green leaves
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @green_leaf_bitmaps.size
          sprite.bitmap = @green_leaf_bitmaps[@current_pose[i]]
          @countarray[i] = rand(15)
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.y += 1
      end
      if @type == 10 # sakura petals
        if @info[i] < 25
          sprite.x -= 1
        else
          sprite.x += 1
        end
        @info[i] = (@info[i] + 1) % 50
        sprite.y += 1
      end
      if @type == 11 # rose petals
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @rose_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @rose_bitmaps.size
        end
        if @info[i] % 2 == 0
          if @info[i] < 10
            sprite.x -= 1
          elsif
            sprite.x += 1
          end
        end
        sprite.y += 1
      end
      if @type == 12 # feathers
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @feather_bitmaps.size
          sprite.bitmap = @feather_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        if rand(100) == 0
          sprite.x -= 1
        end
        if rand(100) == 0
          sprite.y -= 1
        end
        if @info[i] < 50
          if rand(2) == 0
            sprite.x -= 1
          else
            sprite.y -= 1
          end
        else
          if rand(2) == 0
            sprite.x += 1
          else
            sprite.y += 1
          end
        end
        @info[i] = (@info[i] + 1) % 100
      end
 
       if @type == 30 # starburst
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @starburst_bitmaps.size
          sprite.bitmap = @starburst_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.y += 1
        sprite.opacity -= 1
      end
      if @type == 31 # starburst up
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @starburst_bitmaps.size
          sprite.bitmap = @starburst_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.y -= 1
        sprite.opacity -= 1
      end
      if @type == 32 # starburst up
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @starburst_bitmaps.size
          sprite.bitmap = @starburst_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.x -= 2
        sprite.y += 8
        sprite.opacity -= 1
      end     
 
      if @type == 33 # mono-starburst
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @monostarburst_bitmaps.size
          sprite.bitmap = @monostarburst_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.y += 1
        sprite.opacity -= 1
      end
      if @type == 34 # mono-starburst up
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @monostarburst_bitmaps.size
          sprite.bitmap = @monostarburst_bitmaps[@current_pose[i]]
        end
        @countarray[i] = ( @countarray[i] + 1 ) % 15
        sprite.y -= 1
        sprite.opacity -= 1
      end
      if  @type == 35  # mono-starburst rain
        if  @countarray[i] == 0
          @current_pose[i] = ( @current_pose[i] + 1 ) % @monostarburst_bitmaps.size
          sprite.bitmap = @monostarburst_bitmaps [ @current_pose[i] ] 
        end
        @countarray[i] = ( @countarray[i] + 1 ) % 15
        sprite.x -= 2
        sprite.y += 8
        sprite.opacity -= 1
      end           
        if  @type == 29  # meteors
        if  @countarray[i] > 0
          if  rand(20) == 0
            sprite.bitmap = @flame_impact_bitmap 
            @countarray[i] = -5
          else
            sprite.x -= 6
            sprite.y += 10
          end
        else
          @countarray[i] += 1
          if  @countarray[i] == 0
            sprite.bitmap = @flame_meteor_bitmap 
            sprite.opacity = 0 
            @count_array = 1
          end
        end
      end
      if  @type == 18  #ash
        sprite.y += 2
        case  @countarray[i] % 3
        when  0
          sprite.x -= 1
        when  1
          sprite.x += 1
        end
      end      
 
      if  @type == 14  # sparkles
        if  @countarray[i] == 0
          @current_pose[i] = ( @current_pose[i] + 1 ) % @sparkle_bitmaps.size
          sprite.bitmap = @sparkle_bitmaps [ @current_pose[i] ]
        end
        @countarray[i] = ( @countarray[i] + 1 ) % 15
        sprite.y += 1
        sprite.opacity -= 1
      end
      if  @type == 15  # user-defined
        if  $WEATHER_UPDATE
          update_user_defined
          $WEATHER_UPDATE = false
        end
        if  $WEATHER_ANIMATED  and  @countarray[i] == 0
          @current_pose[i] = ( @current_pose[i] + 1 ) % @user_bitmaps.size
          sprite.bitmap = @user_bitmaps [ @current_pose[i] ]
        end
        sprite.x += $WEATHER_X
        sprite.y += $WEATHER_Y
        sprite.opacity -= $WEATHER_FADE
      end
      if  @type == 16  # blowing snow
        sprite.x -= 10
        sprite.y += 6
        sprite.opacity -= 4
      end
      if  @type == 48  # blood blizzard
        sprite.x -= 10
        sprite.y += 6
        sprite.opacity -= 4
      end
      if  @type == 52  # water bombs
        if  @countarray[i] > 0
          if  rand(20) == 0
            sprite.bitmap = @waterbomb_impact_bitmap
            @countarray[i] = -5
          else
            sprite.x -= 3
            sprite.y += 5
          end
        else
          @countarray[i] += 1
          if @countarray[i] == 0
            sprite.bitmap = @waterbomb_bitmap
            sprite.opacity = 0
            @count_array = 1
          end
        end
      end
        if @type == 53 # icy bombs
        if @countarray[i] > 0
          if rand(20) == 0
            sprite.bitmap = @icybomb_impact_bitmap
            @countarray[i] = -5
          else
            sprite.x -= 3
            sprite.y += 5
          end
        else
          @countarray[i] += 1
          if @countarray[i] == 0
            sprite.bitmap = @icybomb_bitmap
            sprite.opacity = 0
            @count_array = 1
          end
        end
      end
      if @type == 54 # flare bombs
        if @countarray[i] > 0
          if rand(20) == 0
            sprite.bitmap = @flarebomb_impact_bitmap
            @countarray[i] = -5
          else
            sprite.x -= 3
            sprite.y += 5
          end
        else
          @countarray[i] += 1
          if @countarray[i] == 0
            sprite.bitmap = @flarebomb_bitmap
            sprite.opacity = 0
            @count_array = 1
          end
        end
      end
      if @type == 17 # meteors
        if @countarray[i] > 0
          if rand(20) == 0
            sprite.bitmap = @impact_bitmap
            @countarray[i] = -5
          else
            sprite.x -= 6
            sprite.y += 10
          end
        else
          @countarray[i] += 1
          if @countarray[i] == 0
            sprite.bitmap = @meteor_bitmap
            sprite.opacity = 0
            @count_array = 1
          end
        end
      end
      if @type == 18 # ash
        sprite.y += 2
        case @countarray[i] % 3
        when 0
          sprite.x -= 1
        when 1
          sprite.x += 1
        end
      end
      if @type == 19 or @type == 20 # bubbles
        switch = rand(75) + rand(75) + 1
        if @info[i] < switch / 2
          sprite.x -= 1
        else
          sprite.x += 1
        end
        @info[i] = (@info[i] + 1) % switch
        sprite.y -= 1
        if switch % 2 == 0
          sprite.opacity -= 1
        end
      end
      if @type == 21 # sparkles up
        if @countarray[i] == 0
          @current_pose[i] = (@current_pose[i] + 1) % @sparkle_bitmaps.size
          sprite.bitmap = @sparkle_bitmaps[@current_pose[i]]
        end
        @countarray[i] = (@countarray[i] + 1) % 15
        sprite.y -= 1
        sprite.opacity -= 1
      end
         if @type == 24 # falling yellow leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @yellow_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @yellow_leaf_bitmaps.size
        end
        sprite.x -= 1
        sprite.y += 1
      end
       if @type == 22 # blowing green leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @green_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @green_leaf_bitmaps.size
        end
        sprite.x -= 10
        sprite.y += (rand(4) - 2)
      end      
      if @type == 23 # swirling green leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @green_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @green_leaf_bitmaps.size
        end
        if @info[i] != 0
          if @info[i] >= 1 and @info[i] <= 10
            sprite.x -= 3
            sprite.y -= 1
          elsif @info[i] >= 11 and @info[i] <= 16
            sprite.x -= 1
            sprite.y -= 2
          elsif @info[i] >= 17 and @info[i] <= 20
            sprite.y -= 3
          elsif @info[i] >= 21 and @info[i] <= 30
            sprite.y -= 2
            sprite.x += 1
          elsif @info[i] >= 31 and @info[i] <= 36
            sprite.y -= 1
            sprite.x += 3
          elsif @info[i] >= 37 and @info[i] <= 40
            sprite.x += 5
          elsif @info[i] >= 41 and @info[i] <= 46
            sprite.y += 1
            sprite.x += 3
          elsif @info[i] >= 47 and @info[i] <= 58
            sprite.y += 2
            sprite.x += 1
          elsif @info[i] >= 59 and @info[i] <= 64
            sprite.y += 3
          elsif @info[i] >= 65 and @info[i] <= 70
            sprite.x -= 1
            sprite.y += 2
          elsif @info[i] >= 71 and @info[i] <= 81
            sprite.x -= 3
            sprite.y += 1
          elsif @info[i] >= 82 and @info[i] <= 87
            sprite.x -= 5
          end
          @info[i] = (@info[i] + 1) % 88
        else
          if rand(200) == 0
            @info[i] = 1
          end
          sprite.x -= 5
          sprite.y += 1
        end
      end
        if @type == 24 # falling yellow leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @yellow_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @yellow_leaf_bitmaps.size
        end
        sprite.x -= 1
        sprite.y += 1
      end      
     if @type == 25 # blowing yellow leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @yellow_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @yellow_leaf_bitmaps.size
        end
        sprite.x -= 10
        sprite.y += (rand(4) - 2)
      end 
       if @type == 26 # swirling yellow leaves
        @count = rand(20)
        if @count == 0
          sprite.bitmap = @yellow_leaf_bitmaps[@current_pose[i]]
          @current_pose[i] = (@current_pose[i] + 1) % @yellow_leaf_bitmaps.size
        end
        if @info[i] != 0
          if @info[i] >= 1 and @info[i] <= 10
            sprite.x -= 3
            sprite.y -= 1
          elsif @info[i] >= 11 and @info[i] <= 16
            sprite.x -= 1
            sprite.y -= 2
          elsif @info[i] >= 17 and @info[i] <= 20
            sprite.y -= 3
          elsif @info[i] >= 21 and @info[i] <= 30
            sprite.y -= 2
            sprite.x += 1
          elsif @info[i] >= 31 and @info[i] <= 36
            sprite.y -= 1
            sprite.x += 3
          elsif @info[i] >= 37 and @info[i] <= 40
            sprite.x += 5
          elsif @info[i] >= 41 and @info[i] <= 46
            sprite.y += 1
            sprite.x += 3
          elsif @info[i] >= 47 and @info[i] <= 58
            sprite.y += 2
            sprite.x += 1
          elsif @info[i] >= 59 and @info[i] <= 64
            sprite.y += 3
          elsif @info[i] >= 65 and @info[i] <= 70
            sprite.x -= 1
            sprite.y += 2
          elsif @info[i] >= 71 and @info[i] <= 81
            sprite.x -= 3
            sprite.y += 1
          elsif @info[i] >= 82 and @info[i] <= 87
            sprite.x -= 5
          end
          @info[i] = (@info[i] + 1) % 88
        else
          if rand(200) == 0
            @info[i] = 1
          end
          sprite.x -= 5
          sprite.y += 1
        end
      end
 
      x = sprite.x - @ox
      y = sprite.y - @oy
      if sprite.opacity < 64 or x < -50 or x > 750 or y < -300 or y > 500
        sprite.x = rand(800) - 50 + @ox
        sprite.y = rand(800) - 200 + @oy
        sprite.opacity = 255
      end
    end
  end
#-------------------------------------------------------------------------------  
  def make_bitmaps
    color1 = Color.new(255, 255, 255, 255)
    color2 = Color.new(255, 255, 255, 128)
    @rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
      @rain_bitmap.fill_rect(6-i, i*8, 1, 8, color1)
    end
    @rain_splash = Bitmap.new(8, 5)
    @rain_splash.fill_rect(1, 0, 6, 1, color2)
    @rain_splash.fill_rect(1, 4, 6, 1, color2)
    @rain_splash.fill_rect(0, 1, 1, 3, color2)
    @rain_splash.fill_rect(7, 1, 1, 3, color2)
    @rain_splash.set_pixel(1, 0, color1)
    @rain_splash.set_pixel(0, 1, color1)
#-------------------------------------------------------------------------------    
    @storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @storm_bitmap.fill_rect(33-i, i*2, 1, 2, color2)
      @storm_bitmap.fill_rect(32-i, i*2, 1, 2, color1)
      @storm_bitmap.fill_rect(31-i, i*2, 1, 2, color2)
    end
#-------------------------------------------------------------------------------    
    @snow_bitmap = Bitmap.new(6, 6)
    @snow_bitmap.fill_rect(0, 1, 6, 4, color2)
    @snow_bitmap.fill_rect(1, 0, 4, 6, color2)
    @snow_bitmap.fill_rect(1, 2, 4, 2, color1)
    @snow_bitmap.fill_rect(2, 1, 2, 4, color1)
    @sprites = []   
    @snow_bitmaps = []
 
    color3 = Color.new(255, 255, 255, 204)
    @snow_bitmaps[0] = Bitmap.new(3, 3)
    @snow_bitmaps[0].fill_rect(0, 0, 3, 3, color2)
    @snow_bitmaps[0].fill_rect(0, 1, 3, 1, color3)
    @snow_bitmaps[0].fill_rect(1, 0, 1, 3, color3)
    @snow_bitmaps[0].set_pixel(1, 1, color1)
 
    @snow_bitmaps[1] = Bitmap.new(4, 4)
    @snow_bitmaps[1].fill_rect(0, 1, 4, 2, color2)
    @snow_bitmaps[1].fill_rect(1, 0, 2, 4, color2)
    @snow_bitmaps[1].fill_rect(1, 1, 2, 2, color1)
 
    @snow_bitmaps[2] = Bitmap.new(5, 5)
    @snow_bitmaps[1].fill_rect(0, 1, 5, 3, color3)
    @snow_bitmaps[1].fill_rect(1, 0, 3, 5, color3)
    @snow_bitmaps[1].fill_rect(1, 1, 3, 3, color2)
    @snow_bitmaps[1].fill_rect(2, 1, 3, 1, color1)
    @snow_bitmaps[1].fill_rect(1, 2, 1, 3, color1)
 
    @snow_bitmaps[3] = Bitmap.new(7, 7)
    @snow_bitmaps[1].fill_rect(1, 1, 5, 5, color3)
    @snow_bitmaps[1].fill_rect(2, 0, 7, 3, color3)
    @snow_bitmaps[1].fill_rect(0, 2, 3, 7, color3)
    @snow_bitmaps[1].fill_rect(2, 1, 5, 3, color2)
    @snow_bitmaps[1].fill_rect(1, 2, 3, 5, color2)
    @snow_bitmaps[1].fill_rect(2, 2, 3, 3, color1)
    @snow_bitmaps[1].fill_rect(3, 1, 5, 1, color1)
    @snow_bitmaps[1].fill_rect(1, 3, 1, 5, color1)
#-------------------------------------------------------------------------------    
    #hail
 
    blueGrey  = Color.new(215, 227, 227, 150)
    grey      = Color.new(214, 217, 217, 150)
    lightGrey = Color.new(233, 233, 233, 250)
    lightBlue = Color.new(222, 239, 243, 250)
 
    @hail_bitmap = Bitmap.new(4, 4)
    @hail_bitmap.fill_rect(1, 0, 2, 1, blueGrey)
    @hail_bitmap.fill_rect(0, 1, 1, 2, blueGrey)
    @hail_bitmap.fill_rect(3, 1, 1, 2, grey)
    @hail_bitmap.fill_rect(1, 3, 2, 1, grey)
    @hail_bitmap.fill_rect(1, 1, 2, 2, lightGrey)
    @hail_bitmap.set_pixel(1, 1, lightBlue)
 
#-------------------------------------------------------------------------------    
    #sakura petals
 
    color3 = Color.new(255, 167, 192, 255) # light pink
    color4 = Color.new(213, 106, 136, 255) # dark pink
    @petal_bitmap = Bitmap.new(4, 4) #This creates a new bitmap that is 4 x 4 pixels
    @petal_bitmap.fill_rect(0, 3, 1, 1, color3) # this makes a 1x1 pixel ""rectangle"" at the 0, 3 pixel of the image (upper left corner is 0, 0)
    @petal_bitmap.fill_rect(1, 2, 1, 1, color3)
    @petal_bitmap.fill_rect(2, 1, 1, 1, color3)
    @petal_bitmap.fill_rect(3, 0, 1, 1, color3)
    @petal_bitmap.fill_rect(1, 3, 1, 1, color4)
    @petal_bitmap.fill_rect(2, 2, 1, 1, color4)
    @petal_bitmap.fill_rect(3, 1, 1, 1, color4)
 
#-------------------------------------------------------------------------------    
    #autumn brown leaves
 
    brightOrange = Color.new(248, 88, 0, 255)  
    orangeBrown  = Color.new(144, 80, 56, 255)
    burntRed     = Color.new(152, 0, 0, 255)
    paleOrange   = Color.new(232, 160, 128, 255)
    darkBrown    = Color.new(72, 40, 0, 255)
 
    @autumn_leaf_bitmaps = []
 
    @autumn_leaf_bitmaps.push(Bitmap.new(8, 8))
    # draw the first of the leaf1 bitmaps
    @autumn_leaf_bitmaps[0].set_pixel(5, 1, orangeBrown)
    @autumn_leaf_bitmaps[0].set_pixel(6, 1, brightOrange)
    @autumn_leaf_bitmaps[0].set_pixel(7, 1, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(3, 2, orangeBrown)
    @autumn_leaf_bitmaps[0].fill_rect(4, 2, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[0].set_pixel(6, 2, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(2, 3, orangeBrown)
    @autumn_leaf_bitmaps[0].set_pixel(3, 3, brightOrange)
    @autumn_leaf_bitmaps[0].fill_rect(4, 3, 2, 1, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(1, 4, orangeBrown)
    @autumn_leaf_bitmaps[0].set_pixel(2, 4, brightOrange)
    @autumn_leaf_bitmaps[0].set_pixel(3, 4, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(1, 5, brightOrange)
    @autumn_leaf_bitmaps[0].set_pixel(2, 5, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(0, 6, orangeBrown)
    @autumn_leaf_bitmaps[0].set_pixel(1, 6, paleOrange)
    @autumn_leaf_bitmaps[0].set_pixel(0, 7, paleOrange)
 
    # draw the 2nd of the leaf1 bitmaps
    @autumn_leaf_bitmaps.push(Bitmap.new(8, 8))
    @autumn_leaf_bitmaps[1].set_pixel(3, 0, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(7, 0, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(3, 1, orangeBrown)
    @autumn_leaf_bitmaps[1].set_pixel(4, 1, burntRed)
    @autumn_leaf_bitmaps[1].set_pixel(6, 1, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(0, 2, paleOrange)
    @autumn_leaf_bitmaps[1].set_pixel(1, 2, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(2, 2, orangeBrown)
    @autumn_leaf_bitmaps[1].set_pixel(3, 2, burntRed)
    @autumn_leaf_bitmaps[1].set_pixel(4, 2, orangeBrown)
    @autumn_leaf_bitmaps[1].set_pixel(5, 2, brightOrange)
    @autumn_leaf_bitmaps[1].fill_rect(1, 3, 3, 1, orangeBrown)
    @autumn_leaf_bitmaps[1].fill_rect(4, 3, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(6, 3, orangeBrown)
    @autumn_leaf_bitmaps[1].set_pixel(2, 4, burntRed)
    @autumn_leaf_bitmaps[1].fill_rect(3, 4, 3, 1, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(6, 4, burntRed)
    @autumn_leaf_bitmaps[1].set_pixel(7, 4, darkBrown)
    @autumn_leaf_bitmaps[1].set_pixel(1, 5, orangeBrown)
    @autumn_leaf_bitmaps[1].fill_rect(2, 5, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(4, 5, orangeBrown)
    @autumn_leaf_bitmaps[1].set_pixel(5, 5, burntRed)
    @autumn_leaf_bitmaps[1].fill_rect(1, 6, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[1].fill_rect(4, 6, 2, 1, burntRed)
    @autumn_leaf_bitmaps[1].set_pixel(0, 7, brightOrange)
    @autumn_leaf_bitmaps[1].set_pixel(5, 7, darkBrown)
 
    # draw the 3rd of the leaf1 bitmaps
    @autumn_leaf_bitmaps.push(Bitmap.new(8, 8))
    @autumn_leaf_bitmaps[2].set_pixel(7, 1, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(6, 2, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(7, 2, orangeBrown)
    @autumn_leaf_bitmaps[2].set_pixel(5, 3, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(6, 3, brightOrange)
    @autumn_leaf_bitmaps[2].set_pixel(4, 4, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(5, 4, brightOrange)
    @autumn_leaf_bitmaps[2].set_pixel(6, 4, orangeBrown)
    @autumn_leaf_bitmaps[2].fill_rect(2, 5, 2, 1, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(4, 5, brightOrange)
    @autumn_leaf_bitmaps[2].set_pixel(5, 5, orangeBrown)
    @autumn_leaf_bitmaps[2].set_pixel(1, 6, paleOrange)
    @autumn_leaf_bitmaps[2].fill_rect(2, 6, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[2].set_pixel(4, 6, orangeBrown)
    @autumn_leaf_bitmaps[2].set_pixel(0, 7, paleOrange)
    @autumn_leaf_bitmaps[2].set_pixel(1, 7, brightOrange)
    @autumn_leaf_bitmaps[2].set_pixel(2, 7, orangeBrown)
 
    # draw the 4th of the leaf1 bitmaps
    @autumn_leaf_bitmaps.push(Bitmap.new(8, 8))
    @autumn_leaf_bitmaps[3].set_pixel(3, 0, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(7, 0, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(3, 1, orangeBrown)
    @autumn_leaf_bitmaps[3].set_pixel(4, 1, burntRed)
    @autumn_leaf_bitmaps[3].set_pixel(6, 1, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(0, 2, paleOrange)
    @autumn_leaf_bitmaps[3].set_pixel(1, 2, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(2, 2, orangeBrown)
    @autumn_leaf_bitmaps[3].set_pixel(3, 2, burntRed)
    @autumn_leaf_bitmaps[3].set_pixel(4, 2, orangeBrown)
    @autumn_leaf_bitmaps[3].set_pixel(5, 2, brightOrange)
    @autumn_leaf_bitmaps[3].fill_rect(1, 3, 3, 1, orangeBrown)
    @autumn_leaf_bitmaps[3].fill_rect(4, 3, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(6, 3, orangeBrown)
    @autumn_leaf_bitmaps[3].set_pixel(2, 4, burntRed)
    @autumn_leaf_bitmaps[3].fill_rect(3, 4, 3, 1, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(6, 4, burntRed)
    @autumn_leaf_bitmaps[3].set_pixel(7, 4, darkBrown)
    @autumn_leaf_bitmaps[3].set_pixel(1, 5, orangeBrown)
    @autumn_leaf_bitmaps[3].fill_rect(2, 5, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(4, 5, orangeBrown)
    @autumn_leaf_bitmaps[3].set_pixel(5, 5, burntRed)
    @autumn_leaf_bitmaps[3].fill_rect(1, 6, 2, 1, brightOrange)
    @autumn_leaf_bitmaps[3].fill_rect(4, 6, 2, 1, burntRed)
    @autumn_leaf_bitmaps[3].set_pixel(0, 7, brightOrange)
    @autumn_leaf_bitmaps[3].set_pixel(5, 7, darkBrown)
 
#-------------------------------------------------------------------------------
 
    # Red maple leaves
 
    @redmaple_leaf_bitmaps = []
    brightRed = Color.new(255, 0, 0, 255)
    midRed    = Color.new(179, 17, 17, 255)
    darkRed   = Color.new(141, 9, 9, 255)
 
    @redmaple_leaf_bitmaps.push(Bitmap.new(8, 8))
    # draw the first of the red maple leaves bitmaps
    @redmaple_leaf_bitmaps[0].set_pixel(5, 1, darkRed)
    @redmaple_leaf_bitmaps[0].set_pixel(6, 1, brightRed)
    @redmaple_leaf_bitmaps[0].set_pixel(7, 1, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(3, 2, darkRed)
    @redmaple_leaf_bitmaps[0].fill_rect(4, 2, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[0].set_pixel(6, 2, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(2, 3, darkRed)
    @redmaple_leaf_bitmaps[0].set_pixel(3, 3, brightRed)
    @redmaple_leaf_bitmaps[0].fill_rect(4, 3, 2, 1, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(1, 4, brightRed)
    @redmaple_leaf_bitmaps[0].set_pixel(2, 4, brightRed)
    @redmaple_leaf_bitmaps[0].set_pixel(3, 4, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(1, 5, brightRed)
    @redmaple_leaf_bitmaps[0].set_pixel(2, 5, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(0, 6, darkRed)
    @redmaple_leaf_bitmaps[0].set_pixel(1, 6, midRed)
    @redmaple_leaf_bitmaps[0].set_pixel(0, 7, midRed)
 
    # draw the 2nd of the red maple leaves bitmaps
    @redmaple_leaf_bitmaps.push(Bitmap.new(8, 8))
    @redmaple_leaf_bitmaps[1].set_pixel(3, 0, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(7, 0, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(3, 1, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(4, 1, burntRed)
    @redmaple_leaf_bitmaps[1].set_pixel(6, 1, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(0, 2, midRed)
    @redmaple_leaf_bitmaps[1].set_pixel(1, 2, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(2, 2, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(3, 2, burntRed)
    @redmaple_leaf_bitmaps[1].set_pixel(4, 2, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(5, 2, brightRed)
    @redmaple_leaf_bitmaps[1].fill_rect(1, 3, 3, 1, darkRed)
    @redmaple_leaf_bitmaps[1].fill_rect(4, 3, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(6, 3, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(2, 4, burntRed)
    @redmaple_leaf_bitmaps[1].fill_rect(3, 4, 3, 1, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(6, 4, burntRed)
    @redmaple_leaf_bitmaps[1].set_pixel(7, 4, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(1, 5, darkRed)
    @redmaple_leaf_bitmaps[1].fill_rect(2, 5, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[1].set_pixel(4, 5, darkRed)
    @redmaple_leaf_bitmaps[1].set_pixel(5, 5, burntRed)
    @redmaple_leaf_bitmaps[1].fill_rect(1, 6, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[1].fill_rect(4, 6, 2, 1, burntRed)
    @redmaple_leaf_bitmaps[1].set_pixel(0, 7, brightRed)
    @autumn_leaf_bitmaps[1].set_pixel(5, 7, darkRed)
 
    # draw the 3rd of the red maple leaves bitmaps
    @redmaple_leaf_bitmaps.push(Bitmap.new(8, 8))
    @redmaple_leaf_bitmaps[2].set_pixel(7, 1, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(6, 2, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(7, 2, darkRed)
    @redmaple_leaf_bitmaps[2].set_pixel(5, 3, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(6, 3, brightRed)
    @redmaple_leaf_bitmaps[2].set_pixel(4, 4, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(5, 4, brightRed)
    @redmaple_leaf_bitmaps[2].set_pixel(6, 4, darkRed)
    @redmaple_leaf_bitmaps[2].fill_rect(2, 5, 2, 1, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(4, 5, brightRed)
    @redmaple_leaf_bitmaps[2].set_pixel(5, 5, darkRed)
    @redmaple_leaf_bitmaps[2].set_pixel(1, 6, midRed)
    @redmaple_leaf_bitmaps[2].fill_rect(2, 6, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[2].set_pixel(4, 6, darkRed)
    @redmaple_leaf_bitmaps[2].set_pixel(0, 7, midRed)
    @redmaple_leaf_bitmaps[2].set_pixel(1, 7, brightRed)
    @redmaple_leaf_bitmaps[2].set_pixel(2, 7, darkRed)
 
    # draw the 4th of the red maple leaves bitmaps
    @redmaple_leaf_bitmaps.push(Bitmap.new(8, 8))
    @redmaple_leaf_bitmaps[3].set_pixel(3, 0, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(7, 0, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(3, 1, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(4, 1, burntRed)
    @redmaple_leaf_bitmaps[3].set_pixel(6, 1, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(0, 2, midRed)
    @redmaple_leaf_bitmaps[3].set_pixel(1, 2, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(2, 2, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(3, 2, burntRed)
    @redmaple_leaf_bitmaps[3].set_pixel(4, 2, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(5, 2, brightRed)
    @redmaple_leaf_bitmaps[3].fill_rect(1, 3, 3, 1, darkRed)
    @redmaple_leaf_bitmaps[3].fill_rect(4, 3, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(6, 3, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(2, 4, burntRed)
    @redmaple_leaf_bitmaps[3].fill_rect(3, 4, 3, 1, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(6, 4, burntRed)
    @redmaple_leaf_bitmaps[3].set_pixel(7, 4, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(1, 5, darkRed)
    @redmaple_leaf_bitmaps[3].fill_rect(2, 5, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(4, 5, darkRed)
    @redmaple_leaf_bitmaps[3].set_pixel(5, 5, burntRed)
    @redmaple_leaf_bitmaps[3].fill_rect(1, 6, 2, 1, brightRed)
    @redmaple_leaf_bitmaps[3].fill_rect(4, 6, 2, 1, burntRed)
    @redmaple_leaf_bitmaps[3].set_pixel(0, 7, brightRed)
    @redmaple_leaf_bitmaps[3].set_pixel(5, 7, darkRed)
#-------------------------------------------------------------------------------    
    #Green leaves
 
    @green_leaf_bitmaps = []
    darkGreen  = Color.new(62, 76, 31, 255)
    midGreen   = Color.new(76, 91, 43, 255)
    khaki      = Color.new(105, 114, 66, 255)
    lightGreen = Color.new(128, 136, 88, 255)
    mint       = Color.new(146, 154, 106, 255)
 
    # 1st leaf bitmap
    @green_leaf_bitmaps[0] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[0].set_pixel(1, 0, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(1, 1, midGreen)
    @green_leaf_bitmaps[0].set_pixel(2, 1, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(2, 2, khaki)
    @green_leaf_bitmaps[0].set_pixel(3, 2, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(4, 2, khaki)
    @green_leaf_bitmaps[0].fill_rect(2, 3, 3, 1, midGreen)
    @green_leaf_bitmaps[0].set_pixel(5, 3, khaki)
    @green_leaf_bitmaps[0].fill_rect(2, 4, 2, 1, midGreen)
    @green_leaf_bitmaps[0].set_pixel(4, 4, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[0].set_pixel(6, 4, khaki)
    @green_leaf_bitmaps[0].set_pixel(3, 5, midGreen)
    @green_leaf_bitmaps[0].set_pixel(4, 5, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(5, 5, khaki)
    @green_leaf_bitmaps[0].set_pixel(6, 5, lightGreen)
    @green_leaf_bitmaps[0].set_pixel(4, 6, midGreen)
    @green_leaf_bitmaps[0].set_pixel(5, 6, darkGreen)
    @green_leaf_bitmaps[0].set_pixel(6, 6, lightGreen)
    @green_leaf_bitmaps[0].set_pixel(6, 7, khaki)
 
    # 2nd leaf bitmap
    @green_leaf_bitmaps[1] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[1].fill_rect(1, 1, 1, 2, midGreen)
    @green_leaf_bitmaps[1].fill_rect(2, 2, 2, 1, khaki)
    @green_leaf_bitmaps[1].set_pixel(4, 2, lightGreen)
    @green_leaf_bitmaps[1].fill_rect(2, 3, 2, 1, darkGreen)
    @green_leaf_bitmaps[1].fill_rect(4, 3, 2, 1, lightGreen)
    @green_leaf_bitmaps[1].set_pixel(2, 4, midGreen)
    @green_leaf_bitmaps[1].set_pixel(3, 4, darkGreen)
    @green_leaf_bitmaps[1].set_pixel(4, 4, khaki)
    @green_leaf_bitmaps[1].fill_rect(5, 4, 2, 1, lightGreen)
    @green_leaf_bitmaps[1].set_pixel(3, 5, midGreen)
    @green_leaf_bitmaps[1].set_pixel(4, 5, darkGreen)
    @green_leaf_bitmaps[1].set_pixel(5, 5, khaki)
    @green_leaf_bitmaps[1].set_pixel(6, 5, lightGreen)
    @green_leaf_bitmaps[1].set_pixel(5, 6, darkGreen)
    @green_leaf_bitmaps[1].fill_rect(6, 6, 2, 1, khaki)
 
    # 3rd leaf bitmap
    @green_leaf_bitmaps[2] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[2].set_pixel(1, 1, darkGreen)
    @green_leaf_bitmaps[2].fill_rect(1, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[2].set_pixel(2, 3, midGreen)
    @green_leaf_bitmaps[2].set_pixel(3, 3, darkGreen)
    @green_leaf_bitmaps[2].set_pixel(4, 3, midGreen)
    @green_leaf_bitmaps[2].fill_rect(2, 4, 2, 1, midGreen)
    @green_leaf_bitmaps[2].set_pixel(4, 4, darkGreen)
    @green_leaf_bitmaps[2].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[2].set_pixel(3, 5, midGreen)
    @green_leaf_bitmaps[2].set_pixel(4, 5, darkGreen)
    @green_leaf_bitmaps[2].fill_rect(5, 5, 2, 1, khaki)
    @green_leaf_bitmaps[2].fill_rect(4, 6, 2, 1, midGreen)
    @green_leaf_bitmaps[2].set_pixel(6, 6, lightGreen)
    @green_leaf_bitmaps[2].set_pixel(6, 7, khaki)
 
    # 4th leaf bitmap
    @green_leaf_bitmaps[3] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[3].fill_rect(0, 3, 1, 2, darkGreen)
    @green_leaf_bitmaps[3].set_pixel(1, 4, midGreen)
    @green_leaf_bitmaps[3].set_pixel(2, 4, khaki)
    @green_leaf_bitmaps[3].set_pixel(3, 4, lightGreen)
    @green_leaf_bitmaps[3].set_pixel(4, 4, darkGreen)
    @green_leaf_bitmaps[3].set_pixel(7, 4, midGreen)
    @green_leaf_bitmaps[3].set_pixel(1, 5, darkGreen)
    @green_leaf_bitmaps[3].set_pixel(2, 5, midGreen)
    @green_leaf_bitmaps[3].set_pixel(3, 5, lightGreen)
    @green_leaf_bitmaps[3].set_pixel(4, 5, mint)
    @green_leaf_bitmaps[3].set_pixel(5, 5, lightGreen)
    @green_leaf_bitmaps[3].set_pixel(6, 5, khaki)
    @green_leaf_bitmaps[3].set_pixel(7, 5, midGreen)
    @green_leaf_bitmaps[3].fill_rect(2, 6, 2, 1, midGreen)
    @green_leaf_bitmaps[3].set_pixel(4, 6, lightGreen)
    @green_leaf_bitmaps[3].set_pixel(5, 6, khaki)
    @green_leaf_bitmaps[3].set_pixel(6, 6, midGreen)
 
    # 5th leaf bitmap
    @green_leaf_bitmaps[4] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[4].set_pixel(6, 2, midGreen)
    @green_leaf_bitmaps[4].set_pixel(7, 2, darkGreen)
    @green_leaf_bitmaps[4].fill_rect(4, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[4].set_pixel(6, 3, khaki)
    @green_leaf_bitmaps[4].set_pixel(2, 4, darkGreen)
    @green_leaf_bitmaps[4].fill_rect(3, 4, 2, 1, khaki)
    @green_leaf_bitmaps[4].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[4].set_pixel(6, 4, khaki)
    @green_leaf_bitmaps[4].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[4].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[4].set_pixel(3, 5, lightGreen)
    @green_leaf_bitmaps[4].set_pixel(4, 5, mint)
    @green_leaf_bitmaps[4].set_pixel(5, 5, midGreen)
    @green_leaf_bitmaps[4].set_pixel(2, 6, darkGreen)
    @green_leaf_bitmaps[4].fill_rect(3, 6, 2, 1, midGreen)
 
    # 6th leaf bitmap
    @green_leaf_bitmaps[5] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[5].fill_rect(6, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[5].fill_rect(4, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[5].set_pixel(6, 3, khaki)
    @green_leaf_bitmaps[5].set_pixel(3, 4, midGreen)
    @green_leaf_bitmaps[5].set_pixel(4, 4, khaki)
    @green_leaf_bitmaps[5].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[5].set_pixel(6, 4, mint)
    @green_leaf_bitmaps[5].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[5].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[5].fill_rect(3, 5, 2, 1, mint)
    @green_leaf_bitmaps[5].set_pixel(5, 5, lightGreen)
    @green_leaf_bitmaps[5].set_pixel(2, 6, midGreen)
    @green_leaf_bitmaps[5].set_pixel(3, 6, khaki)
    @green_leaf_bitmaps[5].set_pixel(4, 6, lightGreen)
 
    # 7th leaf bitmap
    @green_leaf_bitmaps[6] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[6].fill_rect(6, 1, 1, 2, midGreen)
    @green_leaf_bitmaps[6].fill_rect(4, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[6].fill_rect(6, 2, 1, 2, darkGreen)
    @green_leaf_bitmaps[6].fill_rect(3, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[6].set_pixel(5, 3, khaki)
    @green_leaf_bitmaps[6].set_pixel(2, 4, midGreen)
    @green_leaf_bitmaps[6].set_pixel(3, 4, khaki)
    @green_leaf_bitmaps[6].set_pixel(4, 4, lightGreen)
    @green_leaf_bitmaps[6].set_pixel(5, 4, midGreen)
    @green_leaf_bitmaps[6].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[6].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[6].fill_rect(3, 5, 2, 1, midGreen)
    @green_leaf_bitmaps[6].set_pixel(1, 6, darkGreen)
    @green_leaf_bitmaps[6].set_pixel(2, 6, midGreen)
 
    # 8th leaf bitmap
    @green_leaf_bitmaps[7] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[7].set_pixel(6, 1, midGreen)
    @green_leaf_bitmaps[7].fill_rect(4, 2, 3, 2, midGreen)
    @green_leaf_bitmaps[7].set_pixel(3, 3, darkGreen)
    @green_leaf_bitmaps[7].set_pixel(2, 4, darkGreen)
    @green_leaf_bitmaps[7].set_pixel(3, 4, midGreen)
    @green_leaf_bitmaps[7].fill_rect(4, 4, 2, 1, khaki)
    @green_leaf_bitmaps[7].set_pixel(1, 5, darkGreen)
    @green_leaf_bitmaps[7].set_pixel(2, 5, midGreen)
    @green_leaf_bitmaps[7].fill_rect(3, 5, 2, 1, lightGreen)
    @green_leaf_bitmaps[7].set_pixel(2, 6, midGreen)
    @green_leaf_bitmaps[7].set_pixel(3, 6, lightGreen)
 
    # 9th leaf bitmap
    @green_leaf_bitmaps[8] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[8].fill_rect(6, 1, 1, 2, midGreen)
    @green_leaf_bitmaps[8].fill_rect(4, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[8].fill_rect(6, 2, 1, 2, darkGreen)
    @green_leaf_bitmaps[8].fill_rect(3, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[8].set_pixel(5, 3, khaki)
    @green_leaf_bitmaps[8].set_pixel(2, 4, midGreen)
    @green_leaf_bitmaps[8].set_pixel(3, 4, khaki)
    @green_leaf_bitmaps[8].set_pixel(4, 4, lightGreen)
    @green_leaf_bitmaps[8].set_pixel(5, 4, midGreen)
    @green_leaf_bitmaps[8].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[8].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[8].fill_rect(3, 5, 2, 1, midGreen)
    @green_leaf_bitmaps[8].set_pixel(1, 6, darkGreen)
    @green_leaf_bitmaps[8].set_pixel(2, 6, midGreen)
 
    # 10th leaf bitmap
    @green_leaf_bitmaps[9] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[9].fill_rect(6, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[9].fill_rect(4, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[9].set_pixel(6, 3, khaki)
    @green_leaf_bitmaps[9].set_pixel(3, 4, midGreen)
    @green_leaf_bitmaps[9].set_pixel(4, 4, khaki)
    @green_leaf_bitmaps[9].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[9].set_pixel(6, 4, mint)
    @green_leaf_bitmaps[9].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[9].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[9].fill_rect(3, 5, 2, 1, mint)
    @green_leaf_bitmaps[9].set_pixel(5, 5, lightGreen)
    @green_leaf_bitmaps[9].set_pixel(2, 6, midGreen)
    @green_leaf_bitmaps[9].set_pixel(3, 6, khaki)
    @green_leaf_bitmaps[9].set_pixel(4, 6, lightGreen)
 
    # 11th leaf bitmap
    @green_leaf_bitmaps[10] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[10].set_pixel(6, 2, midGreen)
    @green_leaf_bitmaps[10].set_pixel(7, 2, darkGreen)
    @green_leaf_bitmaps[10].fill_rect(4, 3, 2, 1, midGreen)
    @green_leaf_bitmaps[10].set_pixel(6, 3, khaki)
    @green_leaf_bitmaps[10].set_pixel(2, 4, darkGreen)
    @green_leaf_bitmaps[10].fill_rect(3, 4, 2, 1, khaki)
    @green_leaf_bitmaps[10].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[10].set_pixel(6, 4, khaki)
    @green_leaf_bitmaps[10].set_pixel(1, 5, midGreen)
    @green_leaf_bitmaps[10].set_pixel(2, 5, khaki)
    @green_leaf_bitmaps[10].set_pixel(3, 5, lightGreen)
    @green_leaf_bitmaps[10].set_pixel(4, 5, mint)
    @green_leaf_bitmaps[10].set_pixel(5, 5, midGreen)
    @green_leaf_bitmaps[10].set_pixel(2, 6, darkGreen)
    @green_leaf_bitmaps[10].fill_rect(3, 6, 2, 1, midGreen)
 
    # 12th leaf bitmap
    @green_leaf_bitmaps[11] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[11].fill_rect(0, 3, 1, 2, darkGreen)
    @green_leaf_bitmaps[11].set_pixel(1, 4, midGreen)
    @green_leaf_bitmaps[11].set_pixel(2, 4, khaki)
    @green_leaf_bitmaps[11].set_pixel(3, 4, lightGreen)
    @green_leaf_bitmaps[11].set_pixel(4, 4, darkGreen)
    @green_leaf_bitmaps[11].set_pixel(7, 4, midGreen)
    @green_leaf_bitmaps[11].set_pixel(1, 5, darkGreen)
    @green_leaf_bitmaps[11].set_pixel(2, 5, midGreen)
    @green_leaf_bitmaps[11].set_pixel(3, 5, lightGreen)
    @green_leaf_bitmaps[11].set_pixel(4, 5, mint)
    @green_leaf_bitmaps[11].set_pixel(5, 5, lightGreen)
    @green_leaf_bitmaps[11].set_pixel(6, 5, khaki)
    @green_leaf_bitmaps[11].set_pixel(7, 5, midGreen)
    @green_leaf_bitmaps[11].fill_rect(2, 6, 2, 1, midGreen)
    @green_leaf_bitmaps[11].set_pixel(4, 6, lightGreen)
    @green_leaf_bitmaps[11].set_pixel(5, 6, khaki)
    @green_leaf_bitmaps[11].set_pixel(6, 6, midGreen)
 
    # 13th leaf bitmap
    @green_leaf_bitmaps[12] = Bitmap.new(8, 8)
    @green_leaf_bitmaps[12].set_pixel(1, 1, darkGreen)
    @green_leaf_bitmaps[12].fill_rect(1, 2, 2, 1, midGreen)
    @green_leaf_bitmaps[12].set_pixel(2, 3, midGreen)
    @green_leaf_bitmaps[12].set_pixel(3, 3, darkGreen)
    @green_leaf_bitmaps[12].set_pixel(4, 3, midGreen)
    @green_leaf_bitmaps[12].fill_rect(2, 4, 2, 1, midGreen)
    @green_leaf_bitmaps[12].set_pixel(4, 4, darkGreen)
    @green_leaf_bitmaps[12].set_pixel(5, 4, lightGreen)
    @green_leaf_bitmaps[12].set_pixel(3, 5, midGreen)
    @green_leaf_bitmaps[12].set_pixel(4, 5, darkGreen)
    @green_leaf_bitmaps[12].fill_rect(5, 5, 2, 1, khaki)
    @green_leaf_bitmaps[12].fill_rect(4, 6, 2, 1, midGreen)
    @green_leaf_bitmaps[12].set_pixel(6, 6, lightGreen)
    @green_leaf_bitmaps[12].set_pixel(6, 7, khaki)
#-------------------------------------------------------------------------------    
    #rose petals
 
    @rose_bitmaps = []
 
    # 1st rose petal bitmap
    @rose_bitmaps[0] = Bitmap.new(3, 3)
    @rose_bitmaps[0].fill_rect(1, 0, 2, 1, brightRed)
    @rose_bitmaps[0].fill_rect(0, 1, 1, 2, brightRed)
    @rose_bitmaps[0].fill_rect(1, 1, 2, 2, midRed)
    @rose_bitmaps[0].set_pixel(2, 2, darkRed)
 
    # 2nd rose petal bitmap
    @rose_bitmaps[1] = Bitmap.new(3, 3)
    @rose_bitmaps[1].set_pixel(0, 1, midRed)
    @rose_bitmaps[1].set_pixel(1, 1, brightRed)
    @rose_bitmaps[1].fill_rect(1, 2, 1, 2, midRed)
#-------------------------------------------------------------------------------    
    #Feathers
 
    @feather_bitmaps = []
    white = Color.new(255, 255, 255, 255)
 
    # 1st feather bitmap
    @feather_bitmaps[0] = Bitmap.new(3, 3)
    @feather_bitmaps[0].set_pixel(0, 2, white)
    @feather_bitmaps[0].set_pixel(1, 2, grey)
    @feather_bitmaps[0].set_pixel(2, 1, grey)
 
    # 2nd feather bitmap
    @feather_bitmaps[0] = Bitmap.new(3, 3)
    @feather_bitmaps[0].set_pixel(0, 0, white)
    @feather_bitmaps[0].set_pixel(0, 1, grey)
    @feather_bitmaps[0].set_pixel(1, 2, grey)
 
    # 3rd feather bitmap
    @feather_bitmaps[0] = Bitmap.new(3, 3)
    @feather_bitmaps[0].set_pixel(2, 0, white)
    @feather_bitmaps[0].set_pixel(1, 0, grey)
    @feather_bitmaps[0].set_pixel(0, 1, grey)
 
    # 4th feather bitmap
    @feather_bitmaps[0] = Bitmap.new(3, 3)
    @feather_bitmaps[0].set_pixel(2, 2, white)
    @feather_bitmaps[0].set_pixel(2, 1, grey)
    @feather_bitmaps[0].set_pixel(1, 0, grey)
#-------------------------------------------------------------------------------    
    #Blood rain
 
    @blood_rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
      @blood_rain_bitmap.fill_rect(6-i, i*8, 1, 8, darkRed)
    end
    @blood_rain_splash = Bitmap.new(8, 5)
    @blood_rain_splash.fill_rect(1, 0, 6, 1, darkRed)
    @blood_rain_splash.fill_rect(1, 4, 6, 1, darkRed)
    @blood_rain_splash.fill_rect(0, 1, 1, 3, darkRed)
    @blood_rain_splash.fill_rect(7, 1, 1, 3, darkRed)
#-------------------------------------------------------------------------------
 
    #Blood storm
 
    @blood_storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @blood_storm_bitmap.fill_rect(33-i, i*2, 1, 2, darkRed)
      @blood_storm_bitmap.fill_rect(32-i, i*2, 1, 2, darkRed)
      @blood_storm_bitmap.fill_rect(31-i, i*2, 1, 2, darkRed)
    end
 
#------------------------------------------------------------------------------- 
    #Blood blizzard
 
    @bloodblizz_bitmap = Bitmap.new(6, 6)
    @bloodblizz_bitmap.fill_rect(0, 1, 6, 4, midRed)
    @bloodblizz_bitmap.fill_rect(1, 0, 4, 6, midRed)
    @bloodblizz_bitmap.fill_rect(1, 2, 4, 2, darkRed)
    @bloodblizz_bitmap.fill_rect(2, 1, 2, 4, darkRed)
    @sprites = []   
    @bloodblizz_bitmaps = []
 
    @bloodblizz_bitmaps[0] = Bitmap.new(3, 3)
    @bloodblizz_bitmaps[0].fill_rect(0, 0, 3, 3, midRed)
    @bloodblizz_bitmaps[0].fill_rect(0, 1, 3, 1, darkRed)
    @bloodblizz_bitmaps[0].fill_rect(1, 0, 1, 3, darkRed)
    @bloodblizz_bitmaps[0].set_pixel(1, 1, darkRed)
 
    @bloodblizz_bitmaps[1] = Bitmap.new(4, 4)
    @bloodblizz_bitmaps[1].fill_rect(0, 1, 4, 2, midRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 0, 2, 4, midRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 1, 2, 2, darkRed)
 
    @bloodblizz_bitmaps[2] = Bitmap.new(5, 5)
    @bloodblizz_bitmaps[1].fill_rect(0, 1, 5, 3, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 0, 3, 5, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 1, 3, 3, midRed)
    @bloodblizz_bitmaps[1].fill_rect(2, 1, 3, 1, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 2, 1, 3, darkRed)
 
    @bloodblizz_bitmaps[3] = Bitmap.new(7, 7)
    @bloodblizz_bitmaps[1].fill_rect(1, 1, 5, 5, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(2, 0, 7, 3, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(0, 2, 3, 7, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(2, 1, 5, 3, midRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 2, 3, 5, midRed)
    @bloodblizz_bitmaps[1].fill_rect(2, 2, 3, 3, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(3, 1, 5, 1, darkRed)
    @bloodblizz_bitmaps[1].fill_rect(1, 3, 1, 5, darkRed)
#-------------------------------------------------------------------------------  
 
    # Oil rain
 
    darkgrey = Color.new(15, 15, 15, 255)
    black = Color.new(0, 0, 0, 255)
 
    @oil_rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
    @oil_rain_bitmap.fill_rect(6-i, i*8, 1, 8, darkgrey)
      end
    @oil_rain_splash = Bitmap.new(8, 5)
    @oil_rain_splash.fill_rect(1, 0, 6, 1, darkgrey)
    @oil_rain_splash.fill_rect(1, 4, 6, 1, darkgrey)
    @oil_rain_splash.fill_rect(0, 1, 1, 3, black)
    @oil_rain_splash.fill_rect(7, 1, 1, 3, black)
#-------------------------------------------------------------------------------
 
    # Oil storm
 
      @oil_storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @oil_storm_bitmap.fill_rect(33-i, i*2, 1, 2, darkgrey)
      @oil_storm_bitmap.fill_rect(32-i, i*2, 1, 2, darkgrey)
      @oil_storm_bitmap.fill_rect(31-i, i*2, 1, 2, darkgrey)
    end
#------------------------------------------------------------------------------- 
 
    # Golden rain
 
    darkYellow  = Color.new(110, 104, 3, 255)
    midYellow   = Color.new(205, 194, 23, 255)
    darkYellowtwo  = Color.new(186, 176, 14, 255)
    lightYellow = Color.new(218, 207, 36, 255)
    lightYellowtwo = Color.new(227, 217, 56, 255)   
 
    @golden_rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
    @golden_rain_bitmap.fill_rect(6-i, i*8, 1, 8, lightYellow)
      end
    @golden_rain_splash = Bitmap.new(8, 5)
    @golden_rain_splash.fill_rect(1, 0, 6, 1, lightYellow)
    @golden_rain_splash.fill_rect(1, 4, 6, 1, lightYellow)
    @golden_rain_splash.fill_rect(0, 1, 1, 3, lightYellow)
    @golden_rain_splash.fill_rect(7, 1, 1, 3, lightYellow)
#------------------------------------------------------------------------------- 
 
     # Golden storm
 
      @golden_storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @golden_storm_bitmap.fill_rect(33-i, i*2, 1, 2, lightYellow)
      @golden_storm_bitmap.fill_rect(32-i, i*2, 1, 2, lightYellow)
      @golden_storm_bitmap.fill_rect(31-i, i*2, 1, 2, lightYellow)
    end
#-------------------------------------------------------------------------------
 
    # Acid rain
 
    @acid_rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
    @acid_rain_bitmap.fill_rect(6-i, i*8, 1, 8, midGreen)
      end
    @acid_rain_splash = Bitmap.new(8, 5)
    @acid_rain_splash.fill_rect(1, 0, 6, 1, white)
    @acid_rain_splash.fill_rect(1, 4, 6, 1, white)
    @acid_rain_splash.fill_rect(0, 1, 1, 3, white)
    @acid_rain_splash.fill_rect(7, 1, 1, 3, white)
#-------------------------------------------------------------------------------
 
     # Acid storm
 
      @acid_storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @acid_storm_bitmap.fill_rect(33-i, i*2, 1, 2, khaki)
      @acid_storm_bitmap.fill_rect(32-i, i*2, 1, 2, khaki)
      @acid_storm_bitmap.fill_rect(31-i, i*2, 1, 2, midGreen)
    end
#------------------------------------------------------------------------------- 
 
    # Sepia rain
 
    sepia_color = Color.new(167, 149, 139, 255)
    sepia_colortwo = Color.new(100, 75, 63, 255)
 
    @sepia_rain_bitmap = Bitmap.new(7, 56)
    for i in 0..6
    @sepia_rain_bitmap.fill_rect(6-i, i*8, 1, 8, sepia_colortwo)
      end
    @sepia_rain_splash = Bitmap.new(8, 5)
    @sepia_rain_splash.fill_rect(1, 0, 6, 1, sepia_colortwo)
    @sepia_rain_splash.fill_rect(1, 4, 6, 1, sepia_color)
    @sepia_rain_splash.fill_rect(0, 1, 1, 3, sepia_colortwo)
    @sepia_rain_splash.fill_rect(7, 1, 1, 3, sepia_color)
#-------------------------------------------------------------------------------
 
     # Sepia storm
 
      @sepia_storm_bitmap = Bitmap.new(34, 64)
    for i in 0..31
      @sepia_storm_bitmap.fill_rect(33-i, i*2, 1, 2, sepia_colortwo)
      @sepia_storm_bitmap.fill_rect(32-i, i*2, 1, 2, sepia_colortwo)
      @sepia_storm_bitmap.fill_rect(31-i, i*2, 1, 2, sepia_color)
    end
#-------------------------------------------------------------------------------
 
    # Yellow leaves
 
    @yellow_leaf_bitmaps = []
 
   # 1st leaf bitmap
    @yellow_leaf_bitmaps[0] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[0].set_pixel(1, 0, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(1, 1, midYellow)
    @yellow_leaf_bitmaps[0].set_pixel(2, 1, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(2, 2, darkYellowtwo)
    @yellow_leaf_bitmaps[0].set_pixel(3, 2, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(4, 2, darkYellowtwo)
    @yellow_leaf_bitmaps[0].fill_rect(2, 3, 3, 1, midYellow)
    @yellow_leaf_bitmaps[0].set_pixel(5, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[0].fill_rect(2, 4, 2, 1, midYellow)
    @yellow_leaf_bitmaps[0].set_pixel(4, 4, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[0].set_pixel(6, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[0].set_pixel(3, 5, midYellow)
    @yellow_leaf_bitmaps[0].set_pixel(4, 5, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(5, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[0].set_pixel(6, 5, lightYellow)
    @yellow_leaf_bitmaps[0].set_pixel(4, 6, midYellow)
    @yellow_leaf_bitmaps[0].set_pixel(5, 6, darkYellow)
    @yellow_leaf_bitmaps[0].set_pixel(6, 6, lightYellow)
    @yellow_leaf_bitmaps[0].set_pixel(6, 7, darkYellowtwo)
 
    # 2nd leaf bitmap
    @yellow_leaf_bitmaps[1] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[1].fill_rect(1, 1, 1, 2, midYellow)
    @yellow_leaf_bitmaps[1].fill_rect(2, 2, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[1].set_pixel(4, 2, lightYellow)
    @yellow_leaf_bitmaps[1].fill_rect(2, 3, 2, 1, darkYellow)
    @yellow_leaf_bitmaps[1].fill_rect(4, 3, 2, 1, lightYellow)
    @yellow_leaf_bitmaps[1].set_pixel(2, 4, midYellow)
    @yellow_leaf_bitmaps[1].set_pixel(3, 4, darkYellow)
    @yellow_leaf_bitmaps[1].set_pixel(4, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[1].fill_rect(5, 4, 2, 1, lightYellow)
    @yellow_leaf_bitmaps[1].set_pixel(3, 5, midYellow)
    @yellow_leaf_bitmaps[1].set_pixel(4, 5, darkYellow)
    @yellow_leaf_bitmaps[1].set_pixel(5, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[1].set_pixel(6, 5, lightYellow)
    @yellow_leaf_bitmaps[1].set_pixel(5, 6, darkYellow)
    @yellow_leaf_bitmaps[1].fill_rect(6, 6, 2, 1, darkYellowtwo)
 
    # 3rd leaf bitmap
    @yellow_leaf_bitmaps[2] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[2].set_pixel(1, 1, darkYellow)
    @yellow_leaf_bitmaps[2].fill_rect(1, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[2].set_pixel(2, 3, midYellow)
    @yellow_leaf_bitmaps[2].set_pixel(3, 3, darkYellow)
    @yellow_leaf_bitmaps[2].set_pixel(4, 3, midYellow)
    @yellow_leaf_bitmaps[2].fill_rect(2, 4, 2, 1, midYellow)
    @yellow_leaf_bitmaps[2].set_pixel(4, 4, darkYellow)
    @yellow_leaf_bitmaps[2].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[2].set_pixel(3, 5, midYellow)
    @yellow_leaf_bitmaps[2].set_pixel(4, 5, darkYellow)
    @yellow_leaf_bitmaps[2].fill_rect(5, 5, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[2].fill_rect(4, 6, 2, 1, midYellow)
    @yellow_leaf_bitmaps[2].set_pixel(6, 6, lightYellow)
    @yellow_leaf_bitmaps[2].set_pixel(6, 7, darkYellowtwo)
 
    # 4th leaf bitmap
    @yellow_leaf_bitmaps[3] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[3].fill_rect(0, 3, 1, 2, darkYellow)
    @yellow_leaf_bitmaps[3].set_pixel(1, 4, midYellow)
    @yellow_leaf_bitmaps[3].set_pixel(2, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[3].set_pixel(3, 4, lightYellow)
    @yellow_leaf_bitmaps[3].set_pixel(4, 4, darkYellow)
    @yellow_leaf_bitmaps[3].set_pixel(7, 4, midYellow)
    @yellow_leaf_bitmaps[3].set_pixel(1, 5, darkYellow)
    @yellow_leaf_bitmaps[3].set_pixel(2, 5, midYellow)
    @yellow_leaf_bitmaps[3].set_pixel(3, 5, lightYellow)
    @yellow_leaf_bitmaps[3].set_pixel(4, 5, lightYellowtwo)
    @yellow_leaf_bitmaps[3].set_pixel(5, 5, lightYellow)
    @yellow_leaf_bitmaps[3].set_pixel(6, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[3].set_pixel(7, 5, midYellow)
    @yellow_leaf_bitmaps[3].fill_rect(2, 6, 2, 1, midYellow)
    @yellow_leaf_bitmaps[3].set_pixel(4, 6, lightYellow)
    @yellow_leaf_bitmaps[3].set_pixel(5, 6, darkYellowtwo)
    @yellow_leaf_bitmaps[3].set_pixel(6, 6, midYellow)
 
    # 5th leaf bitmap
    @yellow_leaf_bitmaps[4] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[4].set_pixel(6, 2, midYellow)
    @yellow_leaf_bitmaps[4].set_pixel(7, 2, darkYellow)
    @yellow_leaf_bitmaps[4].fill_rect(4, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[4].set_pixel(6, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[4].set_pixel(2, 4, darkYellow)
    @yellow_leaf_bitmaps[4].fill_rect(3, 4, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[4].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[4].set_pixel(6, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[4].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[4].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[4].set_pixel(3, 5, lightYellow)
    @yellow_leaf_bitmaps[4].set_pixel(4, 5, lightYellowtwo)
    @yellow_leaf_bitmaps[4].set_pixel(5, 5, midYellow)
    @yellow_leaf_bitmaps[4].set_pixel(2, 6, darkYellow)
    @yellow_leaf_bitmaps[4].fill_rect(3, 6, 2, 1, midYellow)
 
    # 6th leaf bitmap
    @yellow_leaf_bitmaps[5] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[5].fill_rect(6, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[5].fill_rect(4, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[5].set_pixel(6, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[5].set_pixel(3, 4, midYellow)
    @yellow_leaf_bitmaps[5].set_pixel(4, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[5].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[5].set_pixel(6, 4, lightYellowtwo)
    @yellow_leaf_bitmaps[5].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[5].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[5].fill_rect(3, 5, 2, 1, lightYellowtwo)
    @yellow_leaf_bitmaps[5].set_pixel(5, 5, lightYellow)
    @yellow_leaf_bitmaps[5].set_pixel(2, 6, midYellow)
    @yellow_leaf_bitmaps[5].set_pixel(3, 6, darkYellowtwo)
    @yellow_leaf_bitmaps[5].set_pixel(4, 6, lightYellow)
 
    # 7th leaf bitmap
    @yellow_leaf_bitmaps[6] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[6].fill_rect(6, 1, 1, 2, midYellow)
    @yellow_leaf_bitmaps[6].fill_rect(4, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[6].fill_rect(6, 2, 1, 2, darkYellow)
    @yellow_leaf_bitmaps[6].fill_rect(3, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[6].set_pixel(5, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[6].set_pixel(2, 4, midYellow)
    @yellow_leaf_bitmaps[6].set_pixel(3, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[6].set_pixel(4, 4, lightYellow)
    @yellow_leaf_bitmaps[6].set_pixel(5, 4, midYellow)
    @yellow_leaf_bitmaps[6].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[6].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[6].fill_rect(3, 5, 2, 1, midYellow)
    @yellow_leaf_bitmaps[6].set_pixel(1, 6, darkYellow)
    @yellow_leaf_bitmaps[6].set_pixel(2, 6, midYellow)
 
    # 8th leaf bitmap
    @yellow_leaf_bitmaps[7] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[7].set_pixel(6, 1, midYellow)
    @yellow_leaf_bitmaps[7].fill_rect(4, 2, 3, 2, midYellow)
    @yellow_leaf_bitmaps[7].set_pixel(3, 3, darkYellow)
    @yellow_leaf_bitmaps[7].set_pixel(2, 4, darkYellow)
    @yellow_leaf_bitmaps[7].set_pixel(3, 4, midYellow)
    @yellow_leaf_bitmaps[7].fill_rect(4, 4, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[7].set_pixel(1, 5, darkYellow)
    @yellow_leaf_bitmaps[7].set_pixel(2, 5, midYellow)
    @yellow_leaf_bitmaps[7].fill_rect(3, 5, 2, 1, lightYellow)
    @yellow_leaf_bitmaps[7].set_pixel(2, 6, midYellow)
    @yellow_leaf_bitmaps[7].set_pixel(3, 6, lightYellow)
 
    # 9th leaf bitmap
    @yellow_leaf_bitmaps[8] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[8].fill_rect(6, 1, 1, 2, midYellow)
    @yellow_leaf_bitmaps[8].fill_rect(4, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[8].fill_rect(6, 2, 1, 2, darkYellow)
    @yellow_leaf_bitmaps[8].fill_rect(3, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[8].set_pixel(5, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[8].set_pixel(2, 4, midYellow)
    @yellow_leaf_bitmaps[8].set_pixel(3, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[8].set_pixel(4, 4, lightYellow)
    @yellow_leaf_bitmaps[8].set_pixel(5, 4, midYellow)
    @yellow_leaf_bitmaps[8].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[8].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[8].fill_rect(3, 5, 2, 1, midYellow)
    @yellow_leaf_bitmaps[8].set_pixel(1, 6, darkYellow)
    @yellow_leaf_bitmaps[8].set_pixel(2, 6, midYellow)
 
    # 10th leaf bitmap
    @yellow_leaf_bitmaps[9] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[9].fill_rect(6, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[9].fill_rect(4, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[9].set_pixel(6, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[9].set_pixel(3, 4, midYellow)
    @yellow_leaf_bitmaps[9].set_pixel(4, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[9].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[9].set_pixel(6, 4, lightYellowtwo)
    @yellow_leaf_bitmaps[9].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[9].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[9].fill_rect(3, 5, 2, 1, lightYellowtwo)
    @yellow_leaf_bitmaps[9].set_pixel(5, 5, lightYellow)
    @yellow_leaf_bitmaps[9].set_pixel(2, 6, midYellow)
    @yellow_leaf_bitmaps[9].set_pixel(3, 6, darkYellowtwo)
    @yellow_leaf_bitmaps[9].set_pixel(4, 6, lightYellow)
 
    # 11th leaf bitmap
    @yellow_leaf_bitmaps[10] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[10].set_pixel(6, 2, midYellow)
    @yellow_leaf_bitmaps[10].set_pixel(7, 2, darkYellow)
    @yellow_leaf_bitmaps[10].fill_rect(4, 3, 2, 1, midYellow)
    @yellow_leaf_bitmaps[10].set_pixel(6, 3, darkYellowtwo)
    @yellow_leaf_bitmaps[10].set_pixel(2, 4, darkYellow)
    @yellow_leaf_bitmaps[10].fill_rect(3, 4, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[10].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[10].set_pixel(6, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[10].set_pixel(1, 5, midYellow)
    @yellow_leaf_bitmaps[10].set_pixel(2, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[10].set_pixel(3, 5, lightYellow)
    @yellow_leaf_bitmaps[10].set_pixel(4, 5, lightYellowtwo)
    @yellow_leaf_bitmaps[10].set_pixel(5, 5, midYellow)
    @yellow_leaf_bitmaps[10].set_pixel(2, 6, darkYellow)
    @yellow_leaf_bitmaps[10].fill_rect(3, 6, 2, 1, midYellow)
 
    # 12th leaf bitmap
    @yellow_leaf_bitmaps[11] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[11].fill_rect(0, 3, 1, 2, darkYellow)
    @yellow_leaf_bitmaps[11].set_pixel(1, 4, midYellow)
    @yellow_leaf_bitmaps[11].set_pixel(2, 4, darkYellowtwo)
    @yellow_leaf_bitmaps[11].set_pixel(3, 4, lightYellow)
    @yellow_leaf_bitmaps[11].set_pixel(4, 4, darkYellow)
    @yellow_leaf_bitmaps[11].set_pixel(7, 4, midYellow)
    @yellow_leaf_bitmaps[11].set_pixel(1, 5, darkYellow)
    @yellow_leaf_bitmaps[11].set_pixel(2, 5, midYellow)
    @yellow_leaf_bitmaps[11].set_pixel(3, 5, lightYellow)
    @yellow_leaf_bitmaps[11].set_pixel(4, 5, lightYellowtwo)
    @yellow_leaf_bitmaps[11].set_pixel(5, 5, lightYellow)
    @yellow_leaf_bitmaps[11].set_pixel(6, 5, darkYellowtwo)
    @yellow_leaf_bitmaps[11].set_pixel(7, 5, midYellow)
    @yellow_leaf_bitmaps[11].fill_rect(2, 6, 2, 1, midYellow)
    @yellow_leaf_bitmaps[11].set_pixel(4, 6, lightYellow)
    @yellow_leaf_bitmaps[11].set_pixel(5, 6, darkYellowtwo)
    @yellow_leaf_bitmaps[11].set_pixel(6, 6, midYellow)
 
    # 13th leaf bitmap
    @yellow_leaf_bitmaps[12] = Bitmap.new(8, 8)
    @yellow_leaf_bitmaps[12].set_pixel(1, 1, darkYellow)
    @yellow_leaf_bitmaps[12].fill_rect(1, 2, 2, 1, midYellow)
    @yellow_leaf_bitmaps[12].set_pixel(2, 3, midYellow)
    @yellow_leaf_bitmaps[12].set_pixel(3, 3, darkYellow)
    @yellow_leaf_bitmaps[12].set_pixel(4, 3, midYellow)
    @yellow_leaf_bitmaps[12].fill_rect(2, 4, 2, 1, midYellow)
    @yellow_leaf_bitmaps[12].set_pixel(4, 4, darkYellow)
    @yellow_leaf_bitmaps[12].set_pixel(5, 4, lightYellow)
    @yellow_leaf_bitmaps[12].set_pixel(3, 5, midYellow)
    @yellow_leaf_bitmaps[12].set_pixel(4, 5, darkYellow)
    @yellow_leaf_bitmaps[12].fill_rect(5, 5, 2, 1, darkYellowtwo)
    @yellow_leaf_bitmaps[12].fill_rect(4, 6, 2, 1, midYellow)
    @yellow_leaf_bitmaps[12].set_pixel(6, 6, lightYellow)
    @yellow_leaf_bitmaps[12].set_pixel(6, 7, darkYellowtwo)
 
#-------------------------------------------------------------------------------    
    @sparkle_bitmaps = []
 
    lightBlue = Color.new(181, 244, 255, 255)
    midBlue   = Color.new(126, 197, 235, 255)
    darkBlue  = Color.new(77, 136, 225, 255)
 
    # 1st sparkle bitmap
    @sparkle_bitmaps[0] = Bitmap.new(7, 7)
    @sparkle_bitmaps[0].set_pixel(3, 3, darkBlue)
 
    # 2nd sparkle bitmap
    @sparkle_bitmaps[1] = Bitmap.new(7, 7)
    @sparkle_bitmaps[1].fill_rect(3, 2, 1, 3, darkBlue)
    @sparkle_bitmaps[1].fill_rect(2, 3, 3, 1, darkBlue)
    @sparkle_bitmaps[1].set_pixel(3, 3, midBlue)
 
    # 3rd sparkle bitmap
    @sparkle_bitmaps[2] = Bitmap.new(7, 7)
    @sparkle_bitmaps[2].set_pixel(1, 1, darkBlue)
    @sparkle_bitmaps[2].set_pixel(5, 1, darkBlue)
    @sparkle_bitmaps[2].set_pixel(2, 2, midBlue)
    @sparkle_bitmaps[2].set_pixel(4, 2, midBlue)
    @sparkle_bitmaps[2].set_pixel(3, 3, lightBlue)
    @sparkle_bitmaps[2].set_pixel(2, 4, midBlue)
    @sparkle_bitmaps[2].set_pixel(4, 4, midBlue)
    @sparkle_bitmaps[2].set_pixel(1, 5, darkBlue)
    @sparkle_bitmaps[2].set_pixel(5, 5, darkBlue)
 
    # 4th sparkle bitmap
    @sparkle_bitmaps[3] = Bitmap.new(7, 7)
    @sparkle_bitmaps[3].fill_rect(3, 1, 1, 5, darkBlue)
    @sparkle_bitmaps[3].fill_rect(1, 3, 5, 1, darkBlue)
    @sparkle_bitmaps[3].fill_rect(3, 2, 1, 3, midBlue)
    @sparkle_bitmaps[3].fill_rect(2, 3, 3, 1, midBlue)
    @sparkle_bitmaps[3].set_pixel(3, 3, lightBlue)
 
    # 5th sparkle bitmap
    @sparkle_bitmaps[4] = Bitmap.new(7, 7)
    @sparkle_bitmaps[4].fill_rect(2, 2, 3, 3, midBlue)
    @sparkle_bitmaps[4].fill_rect(3, 2, 1, 3, darkBlue)
    @sparkle_bitmaps[4].fill_rect(2, 3, 3, 1, darkBlue)
    @sparkle_bitmaps[4].set_pixel(3, 3, lightBlue)
    @sparkle_bitmaps[4].set_pixel(1, 1, darkBlue)
    @sparkle_bitmaps[4].set_pixel(5, 1, darkBlue)
    @sparkle_bitmaps[4].set_pixel(1, 5, darkBlue)
    @sparkle_bitmaps[4].set_pixel(5, 1, darkBlue)
 
    # 6th sparkle bitmap
    @sparkle_bitmaps[5] = Bitmap.new(7, 7)
    @sparkle_bitmaps[5].fill_rect(2, 1, 3, 5, darkBlue)
    @sparkle_bitmaps[5].fill_rect(1, 2, 5, 3, darkBlue)
    @sparkle_bitmaps[5].fill_rect(2, 2, 3, 3, midBlue)
    @sparkle_bitmaps[5].fill_rect(3, 1, 1, 5, midBlue)
    @sparkle_bitmaps[5].fill_rect(1, 3, 5, 1, midBlue)
    @sparkle_bitmaps[5].fill_rect(3, 2, 1, 3, lightBlue)
    @sparkle_bitmaps[5].fill_rect(2, 3, 3, 1, lightBlue)
    @sparkle_bitmaps[5].set_pixel(3, 3, white)
 
    # 7th sparkle bitmap
    @sparkle_bitmaps[6] = Bitmap.new(7, 7)
    @sparkle_bitmaps[6].fill_rect(2, 1, 3, 5, midBlue)
    @sparkle_bitmaps[6].fill_rect(1, 2, 5, 3, midBlue)
    @sparkle_bitmaps[6].fill_rect(3, 0, 1, 7, darkBlue)
    @sparkle_bitmaps[6].fill_rect(0, 3, 7, 1, darkBlue)
    @sparkle_bitmaps[6].fill_rect(2, 2, 3, 3, lightBlue)
    @sparkle_bitmaps[6].fill_rect(3, 2, 1, 3, midBlue)
    @sparkle_bitmaps[6].fill_rect(2, 3, 3, 1, midBlue)
    @sparkle_bitmaps[6].set_pixel(3, 3, white)
#-------------------------------------------------------------------------------    
    # Meteor bitmap
 
    @meteor_bitmap = Bitmap.new(14, 12)
    @meteor_bitmap.fill_rect(0, 8, 5, 4, paleOrange)
    @meteor_bitmap.fill_rect(1, 7, 6, 4, paleOrange)
    @meteor_bitmap.set_pixel(7, 8, paleOrange)
    @meteor_bitmap.fill_rect(1, 8, 2, 2, brightOrange)
    @meteor_bitmap.set_pixel(2, 7, brightOrange)
    @meteor_bitmap.fill_rect(3, 6, 2, 1, brightOrange)
    @meteor_bitmap.set_pixel(3, 8, brightOrange)
    @meteor_bitmap.set_pixel(3, 10, brightOrange)
    @meteor_bitmap.set_pixel(4, 9, brightOrange)
    @meteor_bitmap.fill_rect(5, 5, 1, 5, brightOrange)
    @meteor_bitmap.fill_rect(6, 4, 1, 5, brightOrange)
    @meteor_bitmap.fill_rect(7, 3, 1, 5, brightOrange)
    @meteor_bitmap.fill_rect(8, 6, 1, 2, brightOrange)
    @meteor_bitmap.set_pixel(9, 5, brightOrange)
    @meteor_bitmap.set_pixel(3, 8, midRed)
    @meteor_bitmap.fill_rect(4, 7, 1, 2, midRed)
    @meteor_bitmap.set_pixel(4, 5, midRed)
    @meteor_bitmap.set_pixel(5, 4, midRed)
    @meteor_bitmap.set_pixel(5, 6, midRed)
    @meteor_bitmap.set_pixel(6, 5, midRed)
    @meteor_bitmap.set_pixel(6, 7, midRed)
    @meteor_bitmap.fill_rect(7, 4, 1, 3, midRed)
    @meteor_bitmap.fill_rect(8, 3, 1, 3, midRed)
    @meteor_bitmap.fill_rect(9, 2, 1, 3, midRed)
    @meteor_bitmap.fill_rect(10, 1, 1, 3, midRed)
    @meteor_bitmap.fill_rect(11, 0, 1, 3, midRed)
    @meteor_bitmap.fill_rect(12, 0, 1, 2, midRed)
    @meteor_bitmap.set_pixel(13, 0, midRed)
 
    # Impact bitmap
 
    @impact_bitmap = Bitmap.new(22, 11)
    @impact_bitmap.fill_rect(0, 5, 1, 2, brightOrange)
    @impact_bitmap.set_pixel(1, 4, brightOrange)
    @impact_bitmap.set_pixel(1, 6, brightOrange)
    @impact_bitmap.set_pixel(2, 3, brightOrange)
    @impact_bitmap.set_pixel(2, 7, brightOrange)
    @impact_bitmap.set_pixel(3, 2, midRed)
    @impact_bitmap.set_pixel(3, 7, midRed)
    @impact_bitmap.set_pixel(4, 2, brightOrange)
    @impact_bitmap.set_pixel(4, 8, brightOrange)
    @impact_bitmap.set_pixel(5, 2, midRed)
    @impact_bitmap.fill_rect(5, 8, 3, 1, brightOrange)
    @impact_bitmap.set_pixel(6, 1, midRed)
    @impact_bitmap.fill_rect(7, 1, 8, 1, brightOrange)
    @impact_bitmap.fill_rect(7, 9, 8, 1, midRed)
#-------------------------------------------------------------------------------    
    # Flame meteor bitmap
 
    @flame_meteor_bitmap = Bitmap.new(14, 12)
    @flame_meteor_bitmap.fill_rect(0, 8, 5, 4, brightOrange)
    @flame_meteor_bitmap.fill_rect(1, 7, 6, 4, brightOrange)
    @flame_meteor_bitmap.set_pixel(7, 8, brightOrange)
    @flame_meteor_bitmap.fill_rect(1, 8, 2, 2, midYellow)
    @flame_meteor_bitmap.set_pixel(2, 7, midYellow)
    @flame_meteor_bitmap.fill_rect(3, 6, 2, 1, midYellow)
    @flame_meteor_bitmap.set_pixel(3, 8, midYellow)
    @flame_meteor_bitmap.set_pixel(3, 10, midYellow)
    @flame_meteor_bitmap.set_pixel(4, 9, midYellow)
    @flame_meteor_bitmap.fill_rect(5, 5, 1, 5, midYellow)
    @flame_meteor_bitmap.fill_rect(6, 4, 1, 5, midYellow)
    @flame_meteor_bitmap.fill_rect(7, 3, 1, 5, midYellow)
    @flame_meteor_bitmap.fill_rect(8, 6, 1, 2, midYellow)
    @flame_meteor_bitmap.set_pixel(9, 5, midYellow)
    @flame_meteor_bitmap.set_pixel(3, 8, lightYellow)
    @flame_meteor_bitmap.fill_rect(4, 7, 1, 2, lightYellowtwo)
    @flame_meteor_bitmap.set_pixel(4, 5, lightYellow)
    @flame_meteor_bitmap.set_pixel(5, 4, lightYellow)
    @flame_meteor_bitmap.set_pixel(5, 6, lightYellow)
    @flame_meteor_bitmap.set_pixel(6, 5, lightYellow)
    @flame_meteor_bitmap.set_pixel(6, 7, lightYellow)
    @flame_meteor_bitmap.fill_rect(7, 4, 1, 3, lightYellow)
    @flame_meteor_bitmap.fill_rect(8, 3, 1, 3, lightYellow)
    @flame_meteor_bitmap.fill_rect(9, 2, 1, 3, lightYellow)
    @flame_meteor_bitmap.fill_rect(10, 1, 1, 3, lightYellow)
    @flame_meteor_bitmap.fill_rect(11, 0, 1, 3, lightYellow)
    @flame_meteor_bitmap.fill_rect(12, 0, 1, 2, lightYellow)
    @flame_meteor_bitmap.set_pixel(13, 0, lightYellow)
 
    # Flame impact bitmap
 
    @flame_impact_bitmap = Bitmap.new(22, 11)
    @flame_impact_bitmap.fill_rect(0, 5, 1, 2, midYellow)
    @flame_impact_bitmap.set_pixel(1, 4, midYellow)
    @flame_impact_bitmap.set_pixel(1, 6, midYellow)
    @flame_impact_bitmap.set_pixel(2, 3, midYellow)
    @flame_impact_bitmap.set_pixel(2, 7, midYellow)
    @flame_impact_bitmap.set_pixel(3, 2, midYellow)
    @flame_impact_bitmap.set_pixel(3, 7, lightYellow)
    @flame_impact_bitmap.set_pixel(4, 2, brightOrange)
    @flame_impact_bitmap.set_pixel(4, 8, brightOrange)
    @flame_impact_bitmap.set_pixel(5, 2, lightYellow)
    @flame_impact_bitmap.fill_rect(5, 8, 3, 1, midYellow)
    @flame_impact_bitmap.set_pixel(6, 1, lightYellow)
    @flame_impact_bitmap.fill_rect(7, 1, 8, 1, midYellow)
    @flame_impact_bitmap.fill_rect(7, 9, 8, 1, lightYellow)
#-------------------------------------------------------------------------------    
 
    # Ash bitmaps
 
    @ash_bitmaps = []
    @ash_bitmaps[0] = Bitmap.new(3, 3)
    @ash_bitmaps[0].fill_rect(0, 1, 1, 3, lightGrey)
    @ash_bitmaps[0].fill_rect(1, 0, 3, 1, lightGrey)
    @ash_bitmaps[0].set_pixel(1, 1, white)
    @ash_bitmaps[1] = Bitmap.new(3, 3)
    @ash_bitmaps[1].fill_rect(0, 1, 1, 3, grey)
    @ash_bitmaps[1].fill_rect(1, 0, 3, 1, grey)
    @ash_bitmaps[1].set_pixel(1, 1, lightGrey)
#-------------------------------------------------------------------------------    
 
    # Bubble bitmaps
 
    @bubble_bitmaps = []
    darkBlue  = Color.new(77, 136, 225, 160)
    aqua = Color.new(197, 253, 254, 160)
    lavender = Color.new(225, 190, 244, 160)
 
    # first bubble bitmap
    @bubble_bitmaps[0] = Bitmap.new(24, 24)
    @bubble_bitmaps[0].fill_rect(0, 9, 24, 5, darkBlue)
    @bubble_bitmaps[0].fill_rect(1, 6, 22, 11, darkBlue)
    @bubble_bitmaps[0].fill_rect(2, 5, 20, 13, darkBlue)
    @bubble_bitmaps[0].fill_rect(3, 4, 18, 15, darkBlue)
    @bubble_bitmaps[0].fill_rect(4, 3, 16, 17, darkBlue)
    @bubble_bitmaps[0].fill_rect(5, 2, 14, 19, darkBlue)
    @bubble_bitmaps[0].fill_rect(6, 1, 12, 21, darkBlue)
    @bubble_bitmaps[0].fill_rect(9, 0, 5, 24, darkBlue)
    @bubble_bitmaps[0].fill_rect(2, 11, 20, 4, aqua)
    @bubble_bitmaps[0].fill_rect(3, 7, 18, 10, aqua)
    @bubble_bitmaps[0].fill_rect(4, 6, 16, 12, aqua)
    @bubble_bitmaps[0].fill_rect(5, 5, 14, 14, aqua)
    @bubble_bitmaps[0].fill_rect(6, 4, 12, 16, aqua)
    @bubble_bitmaps[0].fill_rect(9, 2, 4, 20, aqua)
    @bubble_bitmaps[0].fill_rect(5, 10, 1, 7, lavender)
    @bubble_bitmaps[0].fill_rect(6, 14, 1, 5, lavender)
    @bubble_bitmaps[0].fill_rect(7, 15, 1, 4, lavender)
    @bubble_bitmaps[0].fill_rect(8, 16, 1, 4, lavender)
    @bubble_bitmaps[0].fill_rect(9, 17, 1, 3, lavender)
    @bubble_bitmaps[0].fill_rect(10, 18, 4, 3, lavender)
    @bubble_bitmaps[0].fill_rect(14, 18, 1, 2, lavender)
    @bubble_bitmaps[0].fill_rect(13, 5, 4, 4, white)
    @bubble_bitmaps[0].fill_rect(14, 4, 2, 1, white)
    @bubble_bitmaps[0].set_pixel(17, 6, white)
 
    # second bubble bitmap
    @bubble_bitmaps[1] = Bitmap.new(14, 15)
    @bubble_bitmaps[1].fill_rect(0, 4, 14, 7, darkBlue)
    @bubble_bitmaps[1].fill_rect(1, 3, 12, 9, darkBlue)
    @bubble_bitmaps[1].fill_rect(2, 2, 10, 11, darkBlue)
    @bubble_bitmaps[1].fill_rect(3, 1, 8, 13, darkBlue)
    @bubble_bitmaps[1].fill_rect(5, 0, 4, 15, darkBlue)
    @bubble_bitmaps[1].fill_rect(1, 5, 12, 4, aqua)
    @bubble_bitmaps[1].fill_rect(2, 4, 10, 6, aqua)
    @bubble_bitmaps[1].fill_rect(3, 3, 8, 8, aqua)
    @bubble_bitmaps[1].fill_rect(4, 2, 6, 10, aqua)
    @bubble_bitmaps[1].fill_rect(1, 5, 12, 4, aqua)
    @bubble_bitmaps[1].fill_rect(3, 9, 1, 2, lavender)
    @bubble_bitmaps[1].fill_rect(4, 10, 1, 2, lavender)
    @bubble_bitmaps[1].fill_rect(5, 11, 4, 1, lavender)
    @bubble_bitmaps[1].fill_rect(6, 12, 2, 1, white)
    @bubble_bitmaps[1].fill_rect(8, 3, 2, 2, white)
    @bubble_bitmaps[1].set_pixel(7, 4, white)
    @bubble_bitmaps[1].set_pixel(8, 5, white)
 
    # Other option for bubbles
    @bubble2_bitmaps = Array.new
    darkSteelGray = Color.new(145, 150, 155, 160)
    midSteelGray = Color.new(180, 180, 185, 160)
    lightSteelGray = Color.new(225, 225, 235, 160)
    steelBlue = Color.new(145, 145, 165, 160)
    lightSteelBlue = Color.new(165, 170, 180, 160)
    transparentWhite = Color.new(255, 255, 255, 160)
 
    # first bubble 2 bitmap
    @bubble2_bitmaps[0] = Bitmap.new(6, 6)
    @bubble2_bitmaps[0].fill_rect(0, 0, 6, 6, darkSteelGray)
    @bubble2_bitmaps[0].fill_rect(0, 2, 6, 2, midSteelGray)
    @bubble2_bitmaps[0].fill_rect(2, 0, 2, 6, midSteelGray)
    @bubble2_bitmaps[0].fill_rect(2, 2, 2, 2, lightSteelGray)
 
    # second bubble 2 bitmap
    @bubble2_bitmaps[1] = Bitmap.new(8, 8)
    @bubble2_bitmaps[1].fill_rect(0, 2, 2, 4, steelBlue)
    @bubble2_bitmaps[1].fill_rect(2, 0, 4, 2, darkSteelGray)
    @bubble2_bitmaps[1].fill_rect(6, 2, 2, 2, darkSteelGray)
    @bubble2_bitmaps[1].fill_rect(2, 6, 2, 2, darkSteelGray)
    @bubble2_bitmaps[1].fill_rect(6, 4, 2, 2, midSteelGray)
    @bubble2_bitmaps[1].fill_rect(4, 6, 2, 2, midSteelGray)
    @bubble2_bitmaps[1].fill_rect(4, 4, 2, 2, lightSteelBlue)
    @bubble2_bitmaps[1].fill_rect(2, 4, 2, 2, lightSteelGray)
    @bubble2_bitmaps[1].fill_rect(4, 2, 2, 2, lightSteelGray)
    @bubble2_bitmaps[1].fill_rect(2, 2, 2, 2, transparentWhite)
 
    # third bubble 2 bitmap
    @bubble2_bitmaps[2] = Bitmap.new(8, 10)
    @bubble2_bitmaps[2].fill_rect(8, 2, 2, 4, steelBlue)
    @bubble2_bitmaps[2].fill_rect(2, 0, 8, 2, darkSteelGray)
    @bubble2_bitmaps[2].fill_rect(2, 6, 8, 2, darkSteelGray)
    @bubble2_bitmaps[2].fill_rect(4, 0, 2, 2, midSteelGray)
    @bubble2_bitmaps[2].fill_rect(4, 6, 2, 2, midSteelGray)
    @bubble2_bitmaps[2].fill_rect(0, 2, 2, 2, midSteelGray)
    @bubble2_bitmaps[2].fill_rect(0, 4, 2, 2, lightSteelBlue)
    @bubble2_bitmaps[2].fill_rect(2, 2, 6, 4, lightSteelGray)
    @bubble2_bitmaps[2].fill_rect(2, 2, 4, 2, transparentWhite)
    @bubble2_bitmaps[2].fill_rect(4, 4, 2, 2, transparentWhite)
 
    # fourth bubble 2 bitmap
    @bubble2_bitmaps[3] = Bitmap.new(14, 14)
    @bubble2_bitmaps[3].fill_rect(4, 0, 4, 2, steelBlue)
    @bubble2_bitmaps[3].fill_rect(0, 4, 2, 4, steelBlue)
    @bubble2_bitmaps[3].fill_rect(12, 4, 2, 4, steelBlue)
    @bubble2_bitmaps[3].fill_rect(8, 0, 2, 2, darkSteelGray)
    @bubble2_bitmaps[3].fill_rect(0, 6, 2, 2, darkSteelGray)
    @bubble2_bitmaps[3].fill_rect(12, 6, 2, 2, darkSteelGray)
    @bubble2_bitmaps[3].fill_rect(4, 12, 6, 2, darkSteelGray)
    @bubble2_bitmaps[3].fill_rect(8, 0, 2, 2, darkSteelGray)
    @bubble2_bitmaps[3].fill_rect(2, 2, 10, 10, midSteelGray)
    @bubble2_bitmaps[3].fill_rect(6, 12, 2, 2, midSteelGray)
    @bubble2_bitmaps[3].fill_rect(2, 4, 10, 6, lightSteelGray)
    @bubble2_bitmaps[3].fill_rect(4, 2, 2, 2, lightSteelGray)
    @bubble2_bitmaps[3].fill_rect(6, 10, 4, 2, lightSteelGray)
    @bubble2_bitmaps[3].fill_rect(6, 4, 2, 2, transparentWhite)
    @bubble2_bitmaps[3].fill_rect(4, 6, 2, 2, transparentWhite)
#------------------------------------------------------------------------------- 
 
    # Water bombs bitmap
 
    @waterbomb_bitmap = Bitmap.new(8, 8)
    @waterbomb_bitmap.fill_rect(0, 2, 2, 4, aqua)
    @waterbomb_bitmap.fill_rect(2, 0, 4, 2, aqua)
    @waterbomb_bitmap.fill_rect(6, 2, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(2, 6, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(6, 4, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(4, 6, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(4, 4, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(2, 4, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(4, 2, 2, 2, aqua)
    @waterbomb_bitmap.fill_rect(2, 2, 2, 2, aqua)
 
 
    # Water bombs impact bitmap
 
    @waterbomb_impact_bitmap = Bitmap.new(8, 5)
    @waterbomb_impact_bitmap.fill_rect(1, 0, 6, 1, aqua)
    @waterbomb_impact_bitmap.fill_rect(1, 4, 6, 1, aqua)
    @waterbomb_impact_bitmap.fill_rect(0, 1, 1, 3, aqua)
    @waterbomb_impact_bitmap.fill_rect(7, 1, 1, 3, aqua)
    @waterbomb_impact_bitmap.set_pixel(1, 0, aqua)
    @waterbomb_impact_bitmap.set_pixel(0, 1, aqua)
#------------------------------------------------------------------------------- 
 
 
    # Icy bombs bitmap
 
    @icybomb_bitmap = Bitmap.new(8, 8)
    @icybomb_bitmap.fill_rect(0, 2, 2, 4, lightBlue)
    @icybomb_bitmap.fill_rect(2, 0, 4, 2, lightBlue)
    @icybomb_bitmap.fill_rect(6, 2, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(2, 6, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(6, 4, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(4, 6, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(4, 4, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(2, 4, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(4, 2, 2, 2, lightBlue)
    @icybomb_bitmap.fill_rect(2, 2, 2, 2, lightBlue)
 
 
    # Icy bombs impact bitmap
 
    @icybomb_impact_bitmap = Bitmap.new(8, 5)
    @icybomb_impact_bitmap.fill_rect(1, 0, 6, 1, lightBlue)
    @icybomb_impact_bitmap.fill_rect(1, 4, 6, 1, lightBlue)
    @icybomb_impact_bitmap.fill_rect(0, 1, 1, 3, lightBlue)
    @icybomb_impact_bitmap.fill_rect(7, 1, 1, 3, lightBlue)
    @icybomb_impact_bitmap.set_pixel(1, 0, lightBlue)
    @icybomb_impact_bitmap.set_pixel(0, 1, lightBlue)
#-------------------------------------------------------------------------------
 
 
    # Flare bombs bitmap
 
    @flarebomb_bitmap = Bitmap.new(8, 8)
    @flarebomb_bitmap.fill_rect(0, 2, 2, 4, midYellow)
    @flarebomb_bitmap.fill_rect(2, 0, 4, 2, midYellow)
    @flarebomb_bitmap.fill_rect(6, 2, 2, 2, midYellow)
    @flarebomb_bitmap.fill_rect(2, 6, 2, 2, brightOrange)
    @flarebomb_bitmap.fill_rect(6, 4, 2, 2, brightOrange)
    @flarebomb_bitmap.fill_rect(4, 6, 2, 2, midYellow)
    @flarebomb_bitmap.fill_rect(4, 4, 2, 2, brightOrange)
    @flarebomb_bitmap.fill_rect(2, 4, 2, 2, midYellow)
    @flarebomb_bitmap.fill_rect(4, 2, 2, 2, midYellow)
    @flarebomb_bitmap.fill_rect(2, 2, 2, 2, midYellow)
 
    # Flare bomb impact bitmap
 
    @flarebomb_impact_bitmap = Bitmap.new(8, 5)
    @flarebomb_impact_bitmap.fill_rect(1, 0, 6, 1, brightOrange)
    @flarebomb_impact_bitmap.fill_rect(1, 4, 6, 1, brightOrange)
    @flarebomb_impact_bitmap.fill_rect(0, 1, 1, 3, midYellow)
    @flarebomb_impact_bitmap.fill_rect(7, 1, 1, 3, midYellow)
    @flarebomb_impact_bitmap.set_pixel(1, 0, midYellow)
    @flarebomb_impact_bitmap.set_pixel(0, 1, midYellow)
#------------------------------------------------------------------------------- 
 
    # Starburst bitmaps
 
    @starburst_bitmaps = []
 
    starburst_yellow = Color.new(233, 210, 142, 255)
    starburst_yellowtwo = Color.new(219, 191, 95, 255)
    starburst_lightyellow = Color.new(242, 229, 190, 255)
    starburst_pink = Color.new(241, 185, 187, 255)
    starburst_red = Color.new(196, 55, 84, 255)
    starburst_redtwo = Color.new(178, 15, 56, 255)
    starburst_cyan = Color.new(189, 225, 242, 255)
    starburst_blue = Color.new(102, 181, 221, 255)
    starburst_bluetwo = Color.new(5, 88, 168, 255)
    starburst_lightgreen = Color.new(205, 246, 205, 255)
    starburst_green = Color.new(88, 221, 89, 255)
    starburst_greentwo = Color.new(44, 166, 0, 255)
    starburst_purple = Color.new(216, 197, 255, 255)
    starburst_violet = Color.new(155, 107, 255, 255)
    starburst_violettwo = Color.new(71, 0, 222, 255)
    starburst_lightorange = Color.new(255, 220, 177, 255)
    starburst_orange = Color.new(255, 180, 85, 255)
    starburst_orangetwo = Color.new(222, 124, 0, 255)
 
    # 1st starburst bitmap
    @starburst_bitmaps[0] = Bitmap.new(8, 8)
    @starburst_bitmaps[0].set_pixel(3, 3, starburst_lightyellow)
 
    # 2nd starburst bitmap
    @starburst_bitmaps[1] = Bitmap.new(8, 8)
    @starburst_bitmaps[1].fill_rect(3, 2, 1, 3, starburst_yellow)
    @starburst_bitmaps[1].fill_rect(2, 3, 3, 1, starburst_yellow)
    @starburst_bitmaps[1].set_pixel(3, 3, starburst_lightyellow)
 
    # 3rd starburst bitmap
    @starburst_bitmaps[2] = Bitmap.new(7, 7)
    @starburst_bitmaps[2].set_pixel(1, 1, starburst_yellow)
    @starburst_bitmaps[2].set_pixel(5, 1, starburst_yellow)
    @starburst_bitmaps[2].set_pixel(2, 2, starburst_yellowtwo)
    @starburst_bitmaps[2].set_pixel(4, 2, starburst_yellow)
    @starburst_bitmaps[2].set_pixel(3, 3, starburst_lightyellow)
    @starburst_bitmaps[2].set_pixel(2, 4, starburst_yellowtwo)
    @starburst_bitmaps[2].set_pixel(4, 4, starburst_yellowtwo)
    @starburst_bitmaps[2].set_pixel(1, 5, starburst_yellow)
    @starburst_bitmaps[2].set_pixel(5, 5, starburst_yellow)
 
    # 4th starburst bitmap
    @starburst_bitmaps[3] = Bitmap.new(7, 7)
    @starburst_bitmaps[3].fill_rect(3, 1, 1, 5, starburst_yellow)
    @starburst_bitmaps[3].fill_rect(1, 3, 5, 1, starburst_yellowtwo)
    @starburst_bitmaps[3].fill_rect(3, 2, 1, 3, starburst_yellow)
    @starburst_bitmaps[3].fill_rect(2, 3, 3, 1, starburst_yellowtwo)
    @starburst_bitmaps[3].set_pixel(3, 3, starburst_lightyellow)
 
    # 5th starburst bitmap
    @starburst_bitmaps[4] = Bitmap.new(7, 7)
    @starburst_bitmaps[4].fill_rect(2, 2, 3, 3, starburst_yellow)
    @starburst_bitmaps[4].fill_rect(3, 2, 1, 3, starburst_yellow)
    @starburst_bitmaps[4].fill_rect(2, 3, 3, 1, starburst_yellowtwo)
    @starburst_bitmaps[4].set_pixel(3, 3, starburst_lightyellow)
    @starburst_bitmaps[4].set_pixel(1, 1, starburst_yellow)
    @starburst_bitmaps[4].set_pixel(5, 1, starburst_yellow)
    @starburst_bitmaps[4].set_pixel(1, 5, starburst_yellowtwo)
    @starburst_bitmaps[4].set_pixel(5, 1, starburst_yellowtwo)
 
    # 6th starburst bitmap
    @starburst_bitmaps[5] = Bitmap.new(8, 8)
    @starburst_bitmaps[5].fill_rect(3, 2, 1, 3, starburst_yellow)
    @starburst_bitmaps[5].fill_rect(2, 3, 3, 1, starburst_yellow)
    @starburst_bitmaps[5].set_pixel(3, 3, starburst_lightyellow)
 
    # 7th starburst bitmap
    @starburst_bitmaps[6] = Bitmap.new(8, 8)
    @starburst_bitmaps[6].fill_rect(3, 2, 1, 3, starburst_green)
    @starburst_bitmaps[6].fill_rect(2, 3, 3, 1, starburst_green)
    @starburst_bitmaps[6].set_pixel(3, 3, starburst_lightgreen)
 
    # 8th starburst bitmap
    @starburst_bitmaps[7] = Bitmap.new(7, 7)
    @starburst_bitmaps[7].set_pixel(1, 1, starburst_greentwo)
    @starburst_bitmaps[7].set_pixel(5, 1, starburst_greentwo)
    @starburst_bitmaps[7].set_pixel(2, 2, starburst_greentwo)
    @starburst_bitmaps[7].set_pixel(4, 2, starburst_greentwo)
    @starburst_bitmaps[7].set_pixel(3, 3, starburst_green)
    @starburst_bitmaps[7].set_pixel(2, 4, starburst_green)
    @starburst_bitmaps[7].set_pixel(4, 4, starburst_green)
    @starburst_bitmaps[7].set_pixel(1, 5, starburst_green)
    @starburst_bitmaps[7].set_pixel(5, 5, starburst_lightgreen)
 
    # 9th starburst bitmap
    @starburst_bitmaps[8] = Bitmap.new(7, 7)
    @starburst_bitmaps[8].fill_rect(3, 1, 1, 5, starburst_greentwo)
    @starburst_bitmaps[8].fill_rect(1, 3, 5, 1, starburst_greentwo)
    @starburst_bitmaps[8].fill_rect(3, 2, 1, 3, starburst_green)
    @starburst_bitmaps[8].fill_rect(2, 3, 3, 1, starburst_green)
    @starburst_bitmaps[8].set_pixel(3, 3, starburst_lightgreen)
 
    # 10th starburst bitmap
    @starburst_bitmaps[9] = Bitmap.new(7, 7)
    @starburst_bitmaps[9].fill_rect(2, 1, 3, 5, starburst_greentwo)
    @starburst_bitmaps[9].fill_rect(1, 2, 5, 3, starburst_greentwo)
    @starburst_bitmaps[9].fill_rect(2, 2, 3, 3, starburst_green)
    @starburst_bitmaps[9].fill_rect(3, 1, 1, 5, starburst_green)
    @starburst_bitmaps[9].fill_rect(1, 3, 5, 1, starburst_green)
    @starburst_bitmaps[9].fill_rect(3, 2, 1, 3, starburst_lightgreen)
    @starburst_bitmaps[9].fill_rect(2, 3, 3, 1, starburst_lightgreen)
    @starburst_bitmaps[9].set_pixel(3, 3, starburst_lightgreen)
 
    # 11en starburst bitmap
    @starburst_bitmaps[10] = Bitmap.new(7, 7)
    @starburst_bitmaps[10].fill_rect(2, 2, 3, 3, starburst_greentwo)
    @starburst_bitmaps[10].fill_rect(3, 2, 1, 3, starburst_greentwo)
    @starburst_bitmaps[10].fill_rect(2, 3, 3, 1, starburst_green)
    @starburst_bitmaps[10].set_pixel(3, 3, starburst_lightgreen)
    @starburst_bitmaps[10].set_pixel(1, 1, starburst_green)
    @starburst_bitmaps[10].set_pixel(5, 1, starburst_green)
    @starburst_bitmaps[10].set_pixel(1, 5, starburst_greentwo)
    @starburst_bitmaps[10].set_pixel(5, 1, starburst_greentwo)
 
    # 12en starburst bitmap
    @starburst_bitmaps[11] = Bitmap.new(8, 8)
    @starburst_bitmaps[11].fill_rect(3, 2, 1, 3, starburst_green)
    @starburst_bitmaps[11].fill_rect(2, 3, 3, 1, starburst_green)
    @starburst_bitmaps[11].set_pixel(3, 3, starburst_lightgreen)
 
    # 13en starburst bitmap
    @starburst_bitmaps[12] = Bitmap.new(8, 8)
    @starburst_bitmaps[12].fill_rect(3, 2, 1, 3, starburst_blue)
    @starburst_bitmaps[12].fill_rect(2, 3, 3, 1, starburst_blue)
    @starburst_bitmaps[12].set_pixel(3, 3, starburst_cyan)
 
    # 14en starburst bitmap
    @starburst_bitmaps[13] = Bitmap.new(7, 7)
    @starburst_bitmaps[13].set_pixel(1, 1, starburst_bluetwo)
    @starburst_bitmaps[13].set_pixel(5, 1, starburst_bluetwo)
    @starburst_bitmaps[13].set_pixel(2, 2, starburst_bluetwo)
    @starburst_bitmaps[13].set_pixel(4, 2, starburst_bluetwo)
    @starburst_bitmaps[13].set_pixel(3, 3, starburst_blue)
    @starburst_bitmaps[13].set_pixel(2, 4, starburst_blue)
    @starburst_bitmaps[13].set_pixel(4, 4, starburst_blue)
    @starburst_bitmaps[13].set_pixel(1, 5, starburst_blue)
    @starburst_bitmaps[13].set_pixel(5, 5, starburst_cyan)
 
    # 15en starburst bitmap
    @starburst_bitmaps[14] = Bitmap.new(7, 7)
    @starburst_bitmaps[14].fill_rect(3, 1, 1, 5, starburst_bluetwo)
    @starburst_bitmaps[14].fill_rect(1, 3, 5, 1, starburst_bluetwo)
    @starburst_bitmaps[14].fill_rect(3, 2, 1, 3, starburst_blue)
    @starburst_bitmaps[14].fill_rect(2, 3, 3, 1, starburst_blue)
    @starburst_bitmaps[14].set_pixel(3, 3, starburst_cyan)
 
    # 16en starburst bitmap
    @starburst_bitmaps[15] = Bitmap.new(7, 7)
    @starburst_bitmaps[15].fill_rect(2, 1, 3, 5, starburst_bluetwo)
    @starburst_bitmaps[15].fill_rect(1, 2, 5, 3, starburst_bluetwo)
    @starburst_bitmaps[15].fill_rect(2, 2, 3, 3, starburst_blue)
    @starburst_bitmaps[15].fill_rect(3, 1, 1, 5, starburst_blue)
    @starburst_bitmaps[15].fill_rect(1, 3, 5, 1, starburst_blue)
    @starburst_bitmaps[15].fill_rect(3, 2, 1, 3, starburst_cyan)
    @starburst_bitmaps[15].fill_rect(2, 3, 3, 1, starburst_cyan)
    @starburst_bitmaps[15].set_pixel(3, 3, starburst_cyan)
 
    # 17en starburst bitmap
    @starburst_bitmaps[16] = Bitmap.new(8, 8)
    @starburst_bitmaps[16].fill_rect(3, 2, 1, 3, starburst_blue)
    @starburst_bitmaps[16].fill_rect(2, 3, 3, 1, starburst_blue)
    @starburst_bitmaps[16].set_pixel(3, 3, starburst_cyan)
 
    # 18en starburst bitmap
    @starburst_bitmaps[17] = Bitmap.new(8, 8)
    @starburst_bitmaps[17].fill_rect(3, 2, 1, 3, starburst_violet)
    @starburst_bitmaps[17].fill_rect(2, 3, 3, 1, starburst_violet)
    @starburst_bitmaps[17].set_pixel(3, 3, starburst_purple)
 
    # 19en starburst bitmap
    @starburst_bitmaps[18] = Bitmap.new(7, 7)
    @starburst_bitmaps[18].set_pixel(1, 1, starburst_violettwo)
    @starburst_bitmaps[18].set_pixel(5, 1, starburst_violettwo)
    @starburst_bitmaps[18].set_pixel(2, 2, starburst_violettwo)
    @starburst_bitmaps[18].set_pixel(4, 2, starburst_violettwo)
    @starburst_bitmaps[18].set_pixel(3, 3, starburst_violet)
    @starburst_bitmaps[18].set_pixel(2, 4, starburst_violet)
    @starburst_bitmaps[18].set_pixel(4, 4, starburst_violet)
    @starburst_bitmaps[18].set_pixel(1, 5, starburst_violet)
    @starburst_bitmaps[18].set_pixel(5, 5, starburst_purple)
 
    # 20y starburst bitmap
    @starburst_bitmaps[19] = Bitmap.new(7, 7)
    @starburst_bitmaps[19].fill_rect(3, 1, 1, 5, starburst_violettwo)
    @starburst_bitmaps[19].fill_rect(1, 3, 5, 1, starburst_violettwo)
    @starburst_bitmaps[19].fill_rect(3, 2, 1, 3, starburst_violet)
    @starburst_bitmaps[19].fill_rect(2, 3, 3, 1, starburst_violet)
    @starburst_bitmaps[19].set_pixel(3, 3, starburst_violet)
 
    # 21st starburst bitmap
    @starburst_bitmaps[20] = Bitmap.new(7, 7)
    @starburst_bitmaps[20].fill_rect(2, 1, 3, 5, starburst_violettwo)
    @starburst_bitmaps[20].fill_rect(1, 2, 5, 3, starburst_violettwo)
    @starburst_bitmaps[20].fill_rect(2, 2, 3, 3, starburst_violet)
    @starburst_bitmaps[20].fill_rect(3, 1, 1, 5, starburst_violet)
    @starburst_bitmaps[20].fill_rect(1, 3, 5, 1, starburst_violet)
    @starburst_bitmaps[20].fill_rect(3, 2, 1, 3, starburst_purple)
    @starburst_bitmaps[20].fill_rect(2, 3, 3, 1, starburst_purple)
    @starburst_bitmaps[20].set_pixel(3, 3, starburst_purple)
 
    # 22nd starburst bitmap
    @starburst_bitmaps[21] = Bitmap.new(7, 7)
    @starburst_bitmaps[21].fill_rect(2, 1, 3, 5, starburst_violet)
    @starburst_bitmaps[21].fill_rect(1, 2, 5, 3, starburst_violet)
    @starburst_bitmaps[21].fill_rect(3, 0, 1, 7, starburst_violettwo)
    @starburst_bitmaps[21].fill_rect(0, 3, 7, 1, starburst_violettwo)
    @starburst_bitmaps[21].fill_rect(2, 2, 3, 3, starburst_purple)
    @starburst_bitmaps[21].fill_rect(3, 2, 1, 3, starburst_violet)
    @starburst_bitmaps[21].fill_rect(2, 3, 3, 1, starburst_violet)
    @starburst_bitmaps[21].set_pixel(3, 3, starburst_purple)
 
    # 23d starburst bitmap
    @starburst_bitmaps[22] = Bitmap.new(8, 8)
    @starburst_bitmaps[22].fill_rect(3, 2, 1, 3, starburst_violet)
    @starburst_bitmaps[22].fill_rect(2, 3, 3, 1, starburst_violet)
    @starburst_bitmaps[22].set_pixel(3, 3, starburst_purple)
 
    # 24th starburst bitmap
    @starburst_bitmaps[23] = Bitmap.new(8, 8)
    @starburst_bitmaps[23].fill_rect(3, 2, 1, 3, starburst_red)
    @starburst_bitmaps[23].fill_rect(2, 3, 3, 1, starburst_red)
    @starburst_bitmaps[23].set_pixel(3, 3, starburst_pink)
 
    # 25th starburst bitmap
    @starburst_bitmaps[24] = Bitmap.new(7, 7)
    @starburst_bitmaps[24].set_pixel(1, 1, starburst_redtwo)
    @starburst_bitmaps[24].set_pixel(5, 1, starburst_redtwo)
    @starburst_bitmaps[24].set_pixel(2, 2, starburst_redtwo)
    @starburst_bitmaps[24].set_pixel(4, 2, starburst_redtwo)
    @starburst_bitmaps[24].set_pixel(3, 3, starburst_red)
    @starburst_bitmaps[24].set_pixel(2, 4, starburst_red)
    @starburst_bitmaps[24].set_pixel(4, 4, starburst_red)
    @starburst_bitmaps[24].set_pixel(1, 5, starburst_red)
    @starburst_bitmaps[24].set_pixel(5, 5, starburst_pink)
 
    # 26th starburst bitmap
    @starburst_bitmaps[25] = Bitmap.new(7, 7)
    @starburst_bitmaps[25].fill_rect(3, 1, 1, 5, starburst_redtwo)
    @starburst_bitmaps[25].fill_rect(1, 3, 5, 1, starburst_redtwo)
    @starburst_bitmaps[25].fill_rect(3, 2, 1, 3, starburst_red)
    @starburst_bitmaps[25].fill_rect(2, 3, 3, 1, starburst_red)
    @starburst_bitmaps[25].set_pixel(3, 3, starburst_pink)
 
    # 27th starburst bitmap
    @starburst_bitmaps[26] = Bitmap.new(7, 7)
    @starburst_bitmaps[26].fill_rect(2, 1, 3, 5, starburst_redtwo)
    @starburst_bitmaps[26].fill_rect(1, 2, 5, 3, starburst_redtwo)
    @starburst_bitmaps[26].fill_rect(2, 2, 3, 3, starburst_red)
    @starburst_bitmaps[26].fill_rect(3, 1, 1, 5, starburst_red)
    @starburst_bitmaps[26].fill_rect(1, 3, 5, 1, starburst_red)
    @starburst_bitmaps[26].fill_rect(3, 2, 1, 3, starburst_pink)
    @starburst_bitmaps[26].fill_rect(2, 3, 3, 1, starburst_pink)
    @starburst_bitmaps[26].set_pixel(3, 3, starburst_pink)
 
    # 28th starburst bitmap
    @starburst_bitmaps[27] = Bitmap.new(7, 7)
    @starburst_bitmaps[27].fill_rect(2, 1, 3, 5, starburst_red)
    @starburst_bitmaps[27].fill_rect(1, 2, 5, 3, starburst_red)
    @starburst_bitmaps[27].fill_rect(3, 0, 1, 7, starburst_redtwo)
    @starburst_bitmaps[27].fill_rect(0, 3, 7, 1, starburst_redtwo)
    @starburst_bitmaps[27].fill_rect(2, 2, 3, 3, starburst_pink)
    @starburst_bitmaps[27].fill_rect(3, 2, 1, 3, starburst_red)
    @starburst_bitmaps[27].fill_rect(2, 3, 3, 1, starburst_red)
    @starburst_bitmaps[27].set_pixel(3, 3, starburst_pink)
 
    # 29th starburst bitmap
    @starburst_bitmaps[28] = Bitmap.new(8, 8)
    @starburst_bitmaps[28].fill_rect(3, 2, 1, 3, starburst_red)
    @starburst_bitmaps[28].fill_rect(2, 3, 3, 1, starburst_red)
    @starburst_bitmaps[28].set_pixel(3, 3, starburst_pink)
 
    # 30y starburst bitmap
    @starburst_bitmaps[29] = Bitmap.new(8, 8)
    @starburst_bitmaps[29].fill_rect(3, 2, 1, 3, starburst_orange)
    @starburst_bitmaps[29].fill_rect(2, 3, 3, 1, starburst_orange)
    @starburst_bitmaps[29].set_pixel(3, 3, starburst_lightorange)
 
    # 31st starburst bitmap
    @starburst_bitmaps[30] = Bitmap.new(7, 7)
    @starburst_bitmaps[30].set_pixel(1, 1, starburst_orangetwo)
    @starburst_bitmaps[30].set_pixel(5, 1, starburst_orangetwo)
    @starburst_bitmaps[30].set_pixel(2, 2, starburst_orangetwo)
    @starburst_bitmaps[30].set_pixel(4, 2, starburst_orangetwo)
    @starburst_bitmaps[30].set_pixel(3, 3, starburst_orange)
    @starburst_bitmaps[30].set_pixel(2, 4, starburst_orange)
    @starburst_bitmaps[30].set_pixel(4, 4, starburst_orange)
    @starburst_bitmaps[30].set_pixel(1, 5, starburst_orange)
    @starburst_bitmaps[30].set_pixel(5, 5, starburst_lightorange)
 
    # 32nd starburst bitmap
    @starburst_bitmaps[31] = Bitmap.new(7, 7)
    @starburst_bitmaps[31].fill_rect(3, 1, 1, 5, starburst_orangetwo)
    @starburst_bitmaps[31].fill_rect(1, 3, 5, 1, starburst_orangetwo)
    @starburst_bitmaps[31].fill_rect(3, 2, 1, 3, starburst_orange)
    @starburst_bitmaps[31].fill_rect(2, 3, 3, 1, starburst_orange)
    @starburst_bitmaps[31].set_pixel(3, 3, starburst_lightorange)
 
    # 33d starburst bitmap
    @starburst_bitmaps[32] = Bitmap.new(7, 7)
    @starburst_bitmaps[32].fill_rect(2, 1, 3, 5, starburst_orangetwo)
    @starburst_bitmaps[32].fill_rect(1, 2, 5, 3, starburst_orangetwo)
    @starburst_bitmaps[32].fill_rect(2, 2, 3, 3, starburst_orange)
    @starburst_bitmaps[32].fill_rect(3, 1, 1, 5, starburst_orange)
    @starburst_bitmaps[32].fill_rect(1, 3, 5, 1, starburst_orange)
    @starburst_bitmaps[32].fill_rect(3, 2, 1, 3, starburst_lightorange)
    @starburst_bitmaps[32].fill_rect(2, 3, 3, 1, starburst_lightorange)
    @starburst_bitmaps[32].set_pixel(3, 3, starburst_lightorange)
 
    # 34th starburst bitmap
    @starburst_bitmaps[33] = Bitmap.new(7, 7)
    @starburst_bitmaps[33].fill_rect(2, 1, 3, 5, starburst_orange)
    @starburst_bitmaps[33].fill_rect(1, 2, 5, 3, starburst_orange)
    @starburst_bitmaps[33].fill_rect(3, 0, 1, 7, starburst_orangetwo)
    @starburst_bitmaps[33].fill_rect(0, 3, 7, 1, starburst_orangetwo)
    @starburst_bitmaps[33].fill_rect(2, 2, 3, 3, starburst_lightorange)
    @starburst_bitmaps[33].fill_rect(3, 2, 1, 3, starburst_orange)
    @starburst_bitmaps[33].fill_rect(2, 3, 3, 1, starburst_orange)
    @starburst_bitmaps[33].set_pixel(3, 3, starburst_lightorange)
 
    # 35th starburst bitmap
    @starburst_bitmaps[34] = Bitmap.new(8, 8)
    @starburst_bitmaps[34].fill_rect(3, 2, 1, 3, starburst_orange)
    @starburst_bitmaps[34].fill_rect(2, 3, 3, 1, starburst_orange)
    @starburst_bitmaps[34].set_pixel(3, 3, starburst_lightorange)
 
    # 36th starburst bitmap
    @starburst_bitmaps[35] = Bitmap.new(8, 8)
    @starburst_bitmaps[35].set_pixel(3, 3, starburst_lightorange)    
#-------------------------------------------------------------------------------      
    @monostarburst_bitmaps = []
 
    # 1st starburst bitmap
    @monostarburst_bitmaps[0] = Bitmap.new(8, 8)
    @monostarburst_bitmaps[0].set_pixel(3, 3, starburst_lightyellow)
 
    # 2nd starburst bitmap
    @monostarburst_bitmaps[1] = Bitmap.new(8, 8)
    @monostarburst_bitmaps[1].fill_rect(3, 2, 1, 3, starburst_yellow)
    @monostarburst_bitmaps[1].fill_rect(2, 3, 3, 1, starburst_yellow)
    @monostarburst_bitmaps[1].set_pixel(3, 3, starburst_lightyellow)
 
    # 3d starburst bitmap
    @monostarburst_bitmaps[2] = Bitmap.new(7, 7)
    @monostarburst_bitmaps[2].set_pixel(1, 1, starburst_yellowtwo)
    @monostarburst_bitmaps[2].set_pixel(5, 1, starburst_yellowtwo)
    @monostarburst_bitmaps[2].set_pixel(2, 2, starburst_yellowtwo)
    @monostarburst_bitmaps[2].set_pixel(4, 2, starburst_yellowtwo)
    @monostarburst_bitmaps[2].set_pixel(3, 3, starburst_yellow)
    @monostarburst_bitmaps[2].set_pixel(2, 4, starburst_yellow)
    @monostarburst_bitmaps[2].set_pixel(4, 4, starburst_yellow)
    @monostarburst_bitmaps[2].set_pixel(1, 5, starburst_yellow)
    @monostarburst_bitmaps[2].set_pixel(5, 5, starburst_lightyellow)
 
    # 4th starburst bitmap
    @monostarburst_bitmaps[3] = Bitmap.new(7, 7)
    @monostarburst_bitmaps[3].fill_rect(3, 1, 1, 5, starburst_yellowtwo)
    @monostarburst_bitmaps[3].fill_rect(1, 3, 5, 1, starburst_yellowtwo)
    @monostarburst_bitmaps[3].fill_rect(3, 2, 1, 3, starburst_yellow)
    @monostarburst_bitmaps[3].fill_rect(2, 3, 3, 1, starburst_yellow)
    @monostarburst_bitmaps[3].set_pixel(3, 3, starburst_lightyellow)
 
    # 5th starburst bitmap
    @monostarburst_bitmaps[4] = Bitmap.new(7, 7)
    @monostarburst_bitmaps[4].fill_rect(2, 1, 3, 5, starburst_yellowtwo)
    @monostarburst_bitmaps[4].fill_rect(1, 2, 5, 3, starburst_yellowtwo)
    @monostarburst_bitmaps[4].fill_rect(2, 2, 3, 3, starburst_yellow)
    @monostarburst_bitmaps[4].fill_rect(3, 1, 1, 5, starburst_yellow)
    @monostarburst_bitmaps[4].fill_rect(1, 3, 5, 1, starburst_yellow)
    @monostarburst_bitmaps[4].fill_rect(3, 2, 1, 3, starburst_lightyellow)
    @monostarburst_bitmaps[4].fill_rect(2, 3, 3, 1, starburst_lightyellow)
    @monostarburst_bitmaps[4].set_pixel(3, 3, starburst_lightyellow)
 
    # 6th starburst bitmap
    @monostarburst_bitmaps[5] = Bitmap.new(7, 7)
    @monostarburst_bitmaps[5].fill_rect(2, 1, 3, 5, starburst_yellow)
    @monostarburst_bitmaps[5].fill_rect(1, 2, 5, 3, starburst_yellow)
    @monostarburst_bitmaps[5].fill_rect(3, 0, 1, 7, starburst_yellowtwo)
    @monostarburst_bitmaps[5].fill_rect(0, 3, 7, 1, starburst_yellowtwo)
    @monostarburst_bitmaps[5].fill_rect(2, 2, 3, 3, starburst_lightyellow)
    @monostarburst_bitmaps[5].fill_rect(3, 2, 1, 3, starburst_yellow)
    @monostarburst_bitmaps[5].fill_rect(2, 3, 3, 1, starburst_yellow)
    @monostarburst_bitmaps[5].set_pixel(3, 3, starburst_lightyellow)
 
    # 7th starburst bitmap
    @monostarburst_bitmaps[6] = Bitmap.new(8, 8)
    @monostarburst_bitmaps[6].fill_rect(3, 2, 1, 3, starburst_yellow)
    @monostarburst_bitmaps[6].fill_rect(2, 3, 3, 1, starburst_yellow)
    @monostarburst_bitmaps[6].set_pixel(3, 3, starburst_lightyellow)
 
    # 8th starburst bitmap
    @monostarburst_bitmaps[7] = Bitmap.new(8, 8)
    @monostarburst_bitmaps[7].set_pixel(3, 3, starburst_lightyellow) 
#-------------------------------------------------------------------------------    
 
    @user_bitmaps = []
    update_user_defined
  end
 
  def update_user_defined
    for image in @user_bitmaps
      image.dispose
    end
 
    #user-defined bitmaps
    for name in $WEATHER_IMAGES
      @user_bitmaps.push(RPG::Cache.picture(name))
    end
    for sprite in @sprites
      sprite.bitmap = @user_bitmaps[rand(@user_bitmaps.size)]
    end
  end
end
 
class Scene_Map
  def change_weather
    @spriteset.change_weather  
  end
end
 
class Spriteset_Map
  attr_accessor :change_weather
end"
BiP66BAU,Untitled,rogeriothe,HTML,Wednesday 19th of July 2023 01:29:56 PM CDT,"{% extends super_template %}

{% block action-bar %}
<ul class=""action-bar"">
    <li><a href=""/celulares_institucionais/cessao/adiciona/"" class=""btn success"">Adiciona Cessão</a></li>
</ul>
{% endblock %}

{% block content %}


{% render_form form %}


<script>
    function showHideAparelhoChip(){
        if($('#id_tipo').val() === '1')
        {
            $('.aparelho').show();
            $('.chip').show();
        }else if ($('#id_tipo').val() === '2')
        {
            $('.aparelho').show();
            $('.chip').hide();
        } else {
            $('.aparelho').hide();
            $('.chip').show();
        }
    }

    $(function(){
        $('#id_tipo').show(function(){
            console.log($('#id_tipo').val());
            showHideAparelhoChip();
        } )
        $('#id_tipo').change(function(){
            console.log($('#id_tipo').val());
            showHideAparelhoChip();
        } )
    })   
</script>





{% endblock %}"
xpfua1jv,Python at sign operator,alaex777,Python,Wednesday 19th of July 2023 01:05:09 PM CDT,"# 19.07.23

class StrangeNumber:
    def __init__(self, value: int) -> None:
        self._value = value

    def __matmul__(self, other):
        return 69 * self._value + 420 * other._value
    
print(StrangeNumber(1) @ StrangeNumber(2)) 

# 909
"
LWz0GJQR,"邀您一起看：第 1 节 掌心娇_玉堂春闺：她的光芒万丈-盐神阁知乎小说免费阅读网,知乎搬运工,我不是盐神 www.ysg0.com",xiaomianao666,JavaScript,Wednesday 19th of July 2023 01:00:52 PM CDT,"海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥第 1 节 掌心娇_玉堂春闺：她的光芒万丈-盐神阁知乎小说免费阅读网,知乎搬运工,我不是盐神 www.ysg0.com@@"
tMfyFQkS,03. Plant Discovery,veronikaaa86,Java,Wednesday 19th of July 2023 01:00:51 PM CDT,"package finalExamPrep;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class P03PlantDiscovery {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        Map<String, Integer> plantRarityMap = new HashMap<>();
        Map<String, Double> rateMap = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String[] tokens = scanner.nextLine().split(""<->"");
            String plant = tokens[0];
            int rarity = Integer.parseInt(tokens[1]);

            plantRarityMap.put(plant, rarity);

            rateMap.put(plant, 0.0);
        }

        String inputLine = scanner.nextLine();
        while (!inputLine.equals(""Exhibition"")) {
            String[] tokens = inputLine.split(""[: -]+"");
            String command = tokens[0];
            String plant = tokens[1];

            boolean isValidCommand = command.equals(""Rate"") || command.equals(""Update"") || command.equals(""Reset"");

            if (!plantRarityMap.containsKey(plant) || !isValidCommand) {
                System.out.println(""error"");
            } else {
                switch (command) {
                    case ""Rate"":
                        double rate = Double.parseDouble(tokens[2]);
                        if (rateMap.get(plant) == 0) {
                            rateMap.put(plant, rate);
                        } else {
                            double newRate = (rateMap.get(plant) + rate) / 2;
                            rateMap.put(plant, newRate);
                        }
                        break;
                    case ""Update"":
                        int newRarity = Integer.parseInt(tokens[2]);

                        plantRarityMap.put(plant, newRarity);
                        break;
                    case ""Reset"":
                        rateMap.put(plant, 0.0);
                        break;
                }
            }

            inputLine = scanner.nextLine();
        }

        System.out.println(""Plants for the exhibition:"");
        //- Woodii; Rarity: 5; Rating: 7.50
        for (Map.Entry<String, Integer> entry : plantRarityMap.entrySet()) {
            System.out.printf(""- %s; Rarity: %d; Rating: %.2f%n"", entry.getKey(), entry.getValue(), rateMap.get(entry.getKey()));
        }
    }
}
"
gACgBTca,02. Fancy Barcodes,veronikaaa86,Java,Wednesday 19th of July 2023 12:03:27 PM CDT,"package finalExamPrep;

import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class P02FancyBarcodes {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        String regexValidBarcode = ""@#+[A-Z][A-Za-z0-9]{4,}[A-Z]@#+"";
        Pattern pattern = Pattern.compile(regexValidBarcode);

        Matcher matcher = null;
        for (int i = 0; i < n; i++) {
            String barcode = scanner.nextLine();

            matcher = pattern.matcher(barcode);

            if (matcher.find()) {
                StringBuilder sb = new StringBuilder();
                for (int j = 0; j < barcode.length(); j++) {
                    char symbol = barcode.charAt(j);
                    if (Character.isDigit(symbol)) {
                        sb.append(symbol);
                    }
                }

                if (sb.length() == 0) {
                    System.out.println(""Product group: 00"");
                } else {
                    System.out.printf(""Product group: %s%n"", sb.toString());
                }
            } else {
                System.out.println(""Invalid barcode"");
            }
        }
    }
}
"
n10rFeUw,Nigerian scammers [19-7-2/2023],bombaires,HTML,Wednesday 19th of July 2023 11:57:25 AM CDT,"<a href=""mailto:jerrysolomon98085@yahoo.com"">jerrysolomon98085@yahoo.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@gmail.com"">keystoneb.jeffwilkinson@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9601@gmail.com"">keystoneb.jeffwilkinson+9601@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5197@gmail.com"">keystoneb.jeffwilkinson+5197@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28799@gmail.com"">keystoneb.jeffwilkinson+28799@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18157@gmail.com"">keystoneb.jeffwilkinson+18157@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29579@gmail.com"">keystoneb.jeffwilkinson+29579@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10621@gmail.com"">keystoneb.jeffwilkinson+10621@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9334@gmail.com"">keystoneb.jeffwilkinson+9334@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11151@gmail.com"">keystoneb.jeffwilkinson+11151@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5566@gmail.com"">keystoneb.jeffwilkinson+5566@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14780@gmail.com"">keystoneb.jeffwilkinson+14780@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20405@gmail.com"">keystoneb.jeffwilkinson+20405@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10384@gmail.com"">keystoneb.jeffwilkinson+10384@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30274@gmail.com"">keystoneb.jeffwilkinson+30274@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10301@gmail.com"">keystoneb.jeffwilkinson+10301@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6982@gmail.com"">keystoneb.jeffwilkinson+6982@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8204@gmail.com"">keystoneb.jeffwilkinson+8204@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12039@gmail.com"">keystoneb.jeffwilkinson+12039@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2457@gmail.com"">keystoneb.jeffwilkinson+2457@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23338@gmail.com"">keystoneb.jeffwilkinson+23338@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21026@gmail.com"">keystoneb.jeffwilkinson+21026@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19713@gmail.com"">keystoneb.jeffwilkinson+19713@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25823@gmail.com"">keystoneb.jeffwilkinson+25823@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5821@gmail.com"">keystoneb.jeffwilkinson+5821@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3359@gmail.com"">keystoneb.jeffwilkinson+3359@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15820@gmail.com"">keystoneb.jeffwilkinson+15820@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17430@gmail.com"">keystoneb.jeffwilkinson+17430@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14711@gmail.com"">keystoneb.jeffwilkinson+14711@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5497@gmail.com"">keystoneb.jeffwilkinson+5497@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8742@gmail.com"">keystoneb.jeffwilkinson+8742@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24319@gmail.com"">keystoneb.jeffwilkinson+24319@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25382@gmail.com"">keystoneb.jeffwilkinson+25382@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9684@gmail.com"">keystoneb.jeffwilkinson+9684@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31208@gmail.com"">keystoneb.jeffwilkinson+31208@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3723@gmail.com"">keystoneb.jeffwilkinson+3723@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+359@gmail.com"">keystoneb.jeffwilkinson+359@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32149@gmail.com"">keystoneb.jeffwilkinson+32149@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18562@gmail.com"">keystoneb.jeffwilkinson+18562@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11734@gmail.com"">keystoneb.jeffwilkinson+11734@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23259@gmail.com"">keystoneb.jeffwilkinson+23259@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17466@gmail.com"">keystoneb.jeffwilkinson+17466@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13074@gmail.com"">keystoneb.jeffwilkinson+13074@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12374@gmail.com"">keystoneb.jeffwilkinson+12374@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29907@gmail.com"">keystoneb.jeffwilkinson+29907@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3646@gmail.com"">keystoneb.jeffwilkinson+3646@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12530@gmail.com"">keystoneb.jeffwilkinson+12530@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3667@gmail.com"">keystoneb.jeffwilkinson+3667@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19479@gmail.com"">keystoneb.jeffwilkinson+19479@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20979@gmail.com"">keystoneb.jeffwilkinson+20979@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13910@gmail.com"">keystoneb.jeffwilkinson+13910@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9483@gmail.com"">keystoneb.jeffwilkinson+9483@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32519@gmail.com"">keystoneb.jeffwilkinson+32519@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7284@gmail.com"">keystoneb.jeffwilkinson+7284@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22851@gmail.com"">keystoneb.jeffwilkinson+22851@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+146@gmail.com"">keystoneb.jeffwilkinson+146@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17457@gmail.com"">keystoneb.jeffwilkinson+17457@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18243@gmail.com"">keystoneb.jeffwilkinson+18243@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12785@gmail.com"">keystoneb.jeffwilkinson+12785@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5615@gmail.com"">keystoneb.jeffwilkinson+5615@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18450@gmail.com"">keystoneb.jeffwilkinson+18450@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10435@gmail.com"">keystoneb.jeffwilkinson+10435@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+483@gmail.com"">keystoneb.jeffwilkinson+483@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9059@gmail.com"">keystoneb.jeffwilkinson+9059@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13617@gmail.com"">keystoneb.jeffwilkinson+13617@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27846@gmail.com"">keystoneb.jeffwilkinson+27846@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24814@gmail.com"">keystoneb.jeffwilkinson+24814@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23617@gmail.com"">keystoneb.jeffwilkinson+23617@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24688@gmail.com"">keystoneb.jeffwilkinson+24688@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12750@gmail.com"">keystoneb.jeffwilkinson+12750@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2622@gmail.com"">keystoneb.jeffwilkinson+2622@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20273@gmail.com"">keystoneb.jeffwilkinson+20273@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27661@gmail.com"">keystoneb.jeffwilkinson+27661@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30793@gmail.com"">keystoneb.jeffwilkinson+30793@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5853@gmail.com"">keystoneb.jeffwilkinson+5853@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32221@gmail.com"">keystoneb.jeffwilkinson+32221@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4701@gmail.com"">keystoneb.jeffwilkinson+4701@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20423@gmail.com"">keystoneb.jeffwilkinson+20423@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9656@gmail.com"">keystoneb.jeffwilkinson+9656@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22134@gmail.com"">keystoneb.jeffwilkinson+22134@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29876@gmail.com"">keystoneb.jeffwilkinson+29876@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15151@gmail.com"">keystoneb.jeffwilkinson+15151@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+730@gmail.com"">keystoneb.jeffwilkinson+730@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31711@gmail.com"">keystoneb.jeffwilkinson+31711@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21772@gmail.com"">keystoneb.jeffwilkinson+21772@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27527@gmail.com"">keystoneb.jeffwilkinson+27527@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11614@gmail.com"">keystoneb.jeffwilkinson+11614@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8764@gmail.com"">keystoneb.jeffwilkinson+8764@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2718@gmail.com"">keystoneb.jeffwilkinson+2718@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11459@gmail.com"">keystoneb.jeffwilkinson+11459@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3552@gmail.com"">keystoneb.jeffwilkinson+3552@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19738@gmail.com"">keystoneb.jeffwilkinson+19738@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6687@gmail.com"">keystoneb.jeffwilkinson+6687@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22820@gmail.com"">keystoneb.jeffwilkinson+22820@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25220@gmail.com"">keystoneb.jeffwilkinson+25220@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16875@gmail.com"">keystoneb.jeffwilkinson+16875@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2210@gmail.com"">keystoneb.jeffwilkinson+2210@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21375@gmail.com"">keystoneb.jeffwilkinson+21375@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+296@gmail.com"">keystoneb.jeffwilkinson+296@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+492@gmail.com"">keystoneb.jeffwilkinson+492@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6431@gmail.com"">keystoneb.jeffwilkinson+6431@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10014@gmail.com"">keystoneb.jeffwilkinson+10014@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01@gmail.com"">ajaybanga.worldbankgroup01@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+1845@gmail.com"">ajaybanga.worldbankgroup01+1845@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+32076@gmail.com"">ajaybanga.worldbankgroup01+32076@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+11867@gmail.com"">ajaybanga.worldbankgroup01+11867@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+2711@gmail.com"">ajaybanga.worldbankgroup01+2711@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+19114@gmail.com"">ajaybanga.worldbankgroup01+19114@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13084@gmail.com"">ajaybanga.worldbankgroup01+13084@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15209@gmail.com"">ajaybanga.worldbankgroup01+15209@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+20853@gmail.com"">ajaybanga.worldbankgroup01+20853@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+31094@gmail.com"">ajaybanga.worldbankgroup01+31094@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15101@gmail.com"">ajaybanga.worldbankgroup01+15101@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+10636@gmail.com"">ajaybanga.worldbankgroup01+10636@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+2913@gmail.com"">ajaybanga.worldbankgroup01+2913@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+512@gmail.com"">ajaybanga.worldbankgroup01+512@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+11026@gmail.com"">ajaybanga.worldbankgroup01+11026@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13540@gmail.com"">ajaybanga.worldbankgroup01+13540@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+19469@gmail.com"">ajaybanga.worldbankgroup01+19469@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22087@gmail.com"">ajaybanga.worldbankgroup01+22087@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+11359@gmail.com"">ajaybanga.worldbankgroup01+11359@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+4265@gmail.com"">ajaybanga.worldbankgroup01+4265@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+24068@gmail.com"">ajaybanga.worldbankgroup01+24068@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+32211@gmail.com"">ajaybanga.worldbankgroup01+32211@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+19675@gmail.com"">ajaybanga.worldbankgroup01+19675@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+5517@gmail.com"">ajaybanga.worldbankgroup01+5517@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+14648@gmail.com"">ajaybanga.worldbankgroup01+14648@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+9821@gmail.com"">ajaybanga.worldbankgroup01+9821@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+20220@gmail.com"">ajaybanga.worldbankgroup01+20220@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+23162@gmail.com"">ajaybanga.worldbankgroup01+23162@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22773@gmail.com"">ajaybanga.worldbankgroup01+22773@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+29996@gmail.com"">ajaybanga.worldbankgroup01+29996@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+6848@gmail.com"">ajaybanga.worldbankgroup01+6848@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+1198@gmail.com"">ajaybanga.worldbankgroup01+1198@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+2727@gmail.com"">ajaybanga.worldbankgroup01+2727@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+21912@gmail.com"">ajaybanga.worldbankgroup01+21912@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+25838@gmail.com"">ajaybanga.worldbankgroup01+25838@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+17447@gmail.com"">ajaybanga.worldbankgroup01+17447@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+18006@gmail.com"">ajaybanga.worldbankgroup01+18006@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+24625@gmail.com"">ajaybanga.worldbankgroup01+24625@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+14106@gmail.com"">ajaybanga.worldbankgroup01+14106@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13246@gmail.com"">ajaybanga.worldbankgroup01+13246@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13017@gmail.com"">ajaybanga.worldbankgroup01+13017@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+29765@gmail.com"">ajaybanga.worldbankgroup01+29765@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+6981@gmail.com"">ajaybanga.worldbankgroup01+6981@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+31799@gmail.com"">ajaybanga.worldbankgroup01+31799@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+20996@gmail.com"">ajaybanga.worldbankgroup01+20996@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+24735@gmail.com"">ajaybanga.worldbankgroup01+24735@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13052@gmail.com"">ajaybanga.worldbankgroup01+13052@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+24813@gmail.com"">ajaybanga.worldbankgroup01+24813@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+28470@gmail.com"">ajaybanga.worldbankgroup01+28470@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+14731@gmail.com"">ajaybanga.worldbankgroup01+14731@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+17567@gmail.com"">ajaybanga.worldbankgroup01+17567@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15785@gmail.com"">ajaybanga.worldbankgroup01+15785@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+16655@gmail.com"">ajaybanga.worldbankgroup01+16655@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+7943@gmail.com"">ajaybanga.worldbankgroup01+7943@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15632@gmail.com"">ajaybanga.worldbankgroup01+15632@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15561@gmail.com"">ajaybanga.worldbankgroup01+15561@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+6737@gmail.com"">ajaybanga.worldbankgroup01+6737@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+29384@gmail.com"">ajaybanga.worldbankgroup01+29384@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+2786@gmail.com"">ajaybanga.worldbankgroup01+2786@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+24800@gmail.com"">ajaybanga.worldbankgroup01+24800@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+2762@gmail.com"">ajaybanga.worldbankgroup01+2762@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+21028@gmail.com"">ajaybanga.worldbankgroup01+21028@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+12742@gmail.com"">ajaybanga.worldbankgroup01+12742@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+7769@gmail.com"">ajaybanga.worldbankgroup01+7769@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+25106@gmail.com"">ajaybanga.worldbankgroup01+25106@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+4298@gmail.com"">ajaybanga.worldbankgroup01+4298@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+29449@gmail.com"">ajaybanga.worldbankgroup01+29449@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+21648@gmail.com"">ajaybanga.worldbankgroup01+21648@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+16145@gmail.com"">ajaybanga.worldbankgroup01+16145@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+25831@gmail.com"">ajaybanga.worldbankgroup01+25831@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+1658@gmail.com"">ajaybanga.worldbankgroup01+1658@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15197@gmail.com"">ajaybanga.worldbankgroup01+15197@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+19550@gmail.com"">ajaybanga.worldbankgroup01+19550@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+30589@gmail.com"">ajaybanga.worldbankgroup01+30589@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+1142@gmail.com"">ajaybanga.worldbankgroup01+1142@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+18439@gmail.com"">ajaybanga.worldbankgroup01+18439@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+13938@gmail.com"">ajaybanga.worldbankgroup01+13938@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+28606@gmail.com"">ajaybanga.worldbankgroup01+28606@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+21516@gmail.com"">ajaybanga.worldbankgroup01+21516@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+26510@gmail.com"">ajaybanga.worldbankgroup01+26510@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+1148@gmail.com"">ajaybanga.worldbankgroup01+1148@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+15071@gmail.com"">ajaybanga.worldbankgroup01+15071@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+17176@gmail.com"">ajaybanga.worldbankgroup01+17176@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+14572@gmail.com"">ajaybanga.worldbankgroup01+14572@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+17823@gmail.com"">ajaybanga.worldbankgroup01+17823@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+10013@gmail.com"">ajaybanga.worldbankgroup01+10013@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+23030@gmail.com"">ajaybanga.worldbankgroup01+23030@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22616@gmail.com"">ajaybanga.worldbankgroup01+22616@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+21501@gmail.com"">ajaybanga.worldbankgroup01+21501@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+25604@gmail.com"">ajaybanga.worldbankgroup01+25604@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+10880@gmail.com"">ajaybanga.worldbankgroup01+10880@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+3895@gmail.com"">ajaybanga.worldbankgroup01+3895@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+20603@gmail.com"">ajaybanga.worldbankgroup01+20603@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22738@gmail.com"">ajaybanga.worldbankgroup01+22738@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+12389@gmail.com"">ajaybanga.worldbankgroup01+12389@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+32260@gmail.com"">ajaybanga.worldbankgroup01+32260@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22659@gmail.com"">ajaybanga.worldbankgroup01+22659@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+4242@gmail.com"">ajaybanga.worldbankgroup01+4242@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+17237@gmail.com"">ajaybanga.worldbankgroup01+17237@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+4861@gmail.com"">ajaybanga.worldbankgroup01+4861@gmail.com</a>
<a href=""mailto:ajaybanga.worldbankgroup01+22021@gmail.com"">ajaybanga.worldbankgroup01+22021@gmail.com</a>
<a href=""mailto:james.beaty2015@gmail.com"">james.beaty2015@gmail.com</a>
<a href=""mailto:james.beaty2015+25612@gmail.com"">james.beaty2015+25612@gmail.com</a>
<a href=""mailto:james.beaty2015+16482@gmail.com"">james.beaty2015+16482@gmail.com</a>
<a href=""mailto:james.beaty2015+8486@gmail.com"">james.beaty2015+8486@gmail.com</a>
<a href=""mailto:james.beaty2015+27191@gmail.com"">james.beaty2015+27191@gmail.com</a>
<a href=""mailto:james.beaty2015+28085@gmail.com"">james.beaty2015+28085@gmail.com</a>
<a href=""mailto:james.beaty2015+11170@gmail.com"">james.beaty2015+11170@gmail.com</a>
<a href=""mailto:james.beaty2015+9460@gmail.com"">james.beaty2015+9460@gmail.com</a>
<a href=""mailto:james.beaty2015+22295@gmail.com"">james.beaty2015+22295@gmail.com</a>
<a href=""mailto:james.beaty2015+3182@gmail.com"">james.beaty2015+3182@gmail.com</a>
<a href=""mailto:james.beaty2015+26715@gmail.com"">james.beaty2015+26715@gmail.com</a>
<a href=""mailto:james.beaty2015+10331@gmail.com"">james.beaty2015+10331@gmail.com</a>
<a href=""mailto:james.beaty2015+2818@gmail.com"">james.beaty2015+2818@gmail.com</a>
<a href=""mailto:james.beaty2015+5581@gmail.com"">james.beaty2015+5581@gmail.com</a>
<a href=""mailto:james.beaty2015+9077@gmail.com"">james.beaty2015+9077@gmail.com</a>
<a href=""mailto:james.beaty2015+7453@gmail.com"">james.beaty2015+7453@gmail.com</a>
<a href=""mailto:james.beaty2015+5313@gmail.com"">james.beaty2015+5313@gmail.com</a>
<a href=""mailto:james.beaty2015+32759@gmail.com"">james.beaty2015+32759@gmail.com</a>
<a href=""mailto:james.beaty2015+25468@gmail.com"">james.beaty2015+25468@gmail.com</a>
<a href=""mailto:james.beaty2015+4796@gmail.com"">james.beaty2015+4796@gmail.com</a>
<a href=""mailto:james.beaty2015+31793@gmail.com"">james.beaty2015+31793@gmail.com</a>
<a href=""mailto:james.beaty2015+6655@gmail.com"">james.beaty2015+6655@gmail.com</a>
<a href=""mailto:james.beaty2015+5908@gmail.com"">james.beaty2015+5908@gmail.com</a>
<a href=""mailto:james.beaty2015+27784@gmail.com"">james.beaty2015+27784@gmail.com</a>
<a href=""mailto:james.beaty2015+16485@gmail.com"">james.beaty2015+16485@gmail.com</a>
<a href=""mailto:james.beaty2015+16448@gmail.com"">james.beaty2015+16448@gmail.com</a>
<a href=""mailto:james.beaty2015+14454@gmail.com"">james.beaty2015+14454@gmail.com</a>
<a href=""mailto:james.beaty2015+31152@gmail.com"">james.beaty2015+31152@gmail.com</a>
<a href=""mailto:james.beaty2015+31385@gmail.com"">james.beaty2015+31385@gmail.com</a>
<a href=""mailto:james.beaty2015+23816@gmail.com"">james.beaty2015+23816@gmail.com</a>
<a href=""mailto:james.beaty2015+19226@gmail.com"">james.beaty2015+19226@gmail.com</a>
<a href=""mailto:james.beaty2015+19135@gmail.com"">james.beaty2015+19135@gmail.com</a>
<a href=""mailto:james.beaty2015+4324@gmail.com"">james.beaty2015+4324@gmail.com</a>
<a href=""mailto:james.beaty2015+11125@gmail.com"">james.beaty2015+11125@gmail.com</a>
<a href=""mailto:james.beaty2015+27459@gmail.com"">james.beaty2015+27459@gmail.com</a>
<a href=""mailto:james.beaty2015+12593@gmail.com"">james.beaty2015+12593@gmail.com</a>
<a href=""mailto:james.beaty2015+21063@gmail.com"">james.beaty2015+21063@gmail.com</a>
<a href=""mailto:james.beaty2015+22418@gmail.com"">james.beaty2015+22418@gmail.com</a>
<a href=""mailto:james.beaty2015+22052@gmail.com"">james.beaty2015+22052@gmail.com</a>
<a href=""mailto:james.beaty2015+15869@gmail.com"">james.beaty2015+15869@gmail.com</a>
<a href=""mailto:james.beaty2015+28413@gmail.com"">james.beaty2015+28413@gmail.com</a>
<a href=""mailto:james.beaty2015+15965@gmail.com"">james.beaty2015+15965@gmail.com</a>
<a href=""mailto:james.beaty2015+21099@gmail.com"">james.beaty2015+21099@gmail.com</a>
<a href=""mailto:james.beaty2015+13680@gmail.com"">james.beaty2015+13680@gmail.com</a>
<a href=""mailto:james.beaty2015+9157@gmail.com"">james.beaty2015+9157@gmail.com</a>
<a href=""mailto:james.beaty2015+24663@gmail.com"">james.beaty2015+24663@gmail.com</a>
<a href=""mailto:james.beaty2015+5949@gmail.com"">james.beaty2015+5949@gmail.com</a>
<a href=""mailto:james.beaty2015+30205@gmail.com"">james.beaty2015+30205@gmail.com</a>
<a href=""mailto:james.beaty2015+23942@gmail.com"">james.beaty2015+23942@gmail.com</a>
<a href=""mailto:james.beaty2015+15893@gmail.com"">james.beaty2015+15893@gmail.com</a>
<a href=""mailto:james.beaty2015+18953@gmail.com"">james.beaty2015+18953@gmail.com</a>
<a href=""mailto:james.beaty2015+30797@gmail.com"">james.beaty2015+30797@gmail.com</a>
<a href=""mailto:james.beaty2015+17205@gmail.com"">james.beaty2015+17205@gmail.com</a>
<a href=""mailto:james.beaty2015+31921@gmail.com"">james.beaty2015+31921@gmail.com</a>
<a href=""mailto:james.beaty2015+29656@gmail.com"">james.beaty2015+29656@gmail.com</a>
<a href=""mailto:james.beaty2015+961@gmail.com"">james.beaty2015+961@gmail.com</a>
<a href=""mailto:james.beaty2015+14121@gmail.com"">james.beaty2015+14121@gmail.com</a>
<a href=""mailto:james.beaty2015+23237@gmail.com"">james.beaty2015+23237@gmail.com</a>
<a href=""mailto:james.beaty2015+26553@gmail.com"">james.beaty2015+26553@gmail.com</a>
<a href=""mailto:james.beaty2015+16127@gmail.com"">james.beaty2015+16127@gmail.com</a>
<a href=""mailto:james.beaty2015+4480@gmail.com"">james.beaty2015+4480@gmail.com</a>
<a href=""mailto:james.beaty2015+17746@gmail.com"">james.beaty2015+17746@gmail.com</a>
<a href=""mailto:james.beaty2015+14449@gmail.com"">james.beaty2015+14449@gmail.com</a>
<a href=""mailto:james.beaty2015+16730@gmail.com"">james.beaty2015+16730@gmail.com</a>
<a href=""mailto:james.beaty2015+8911@gmail.com"">james.beaty2015+8911@gmail.com</a>
<a href=""mailto:james.beaty2015+6992@gmail.com"">james.beaty2015+6992@gmail.com</a>
<a href=""mailto:james.beaty2015+24800@gmail.com"">james.beaty2015+24800@gmail.com</a>
<a href=""mailto:james.beaty2015+24788@gmail.com"">james.beaty2015+24788@gmail.com</a>
<a href=""mailto:james.beaty2015+15867@gmail.com"">james.beaty2015+15867@gmail.com</a>
<a href=""mailto:james.beaty2015+28269@gmail.com"">james.beaty2015+28269@gmail.com</a>
<a href=""mailto:james.beaty2015+12550@gmail.com"">james.beaty2015+12550@gmail.com</a>
<a href=""mailto:james.beaty2015+32168@gmail.com"">james.beaty2015+32168@gmail.com</a>
<a href=""mailto:james.beaty2015+6552@gmail.com"">james.beaty2015+6552@gmail.com</a>
<a href=""mailto:james.beaty2015+23127@gmail.com"">james.beaty2015+23127@gmail.com</a>
<a href=""mailto:james.beaty2015+21217@gmail.com"">james.beaty2015+21217@gmail.com</a>
<a href=""mailto:james.beaty2015+4645@gmail.com"">james.beaty2015+4645@gmail.com</a>
<a href=""mailto:james.beaty2015+30585@gmail.com"">james.beaty2015+30585@gmail.com</a>
<a href=""mailto:james.beaty2015+15689@gmail.com"">james.beaty2015+15689@gmail.com</a>
<a href=""mailto:james.beaty2015+18363@gmail.com"">james.beaty2015+18363@gmail.com</a>
<a href=""mailto:james.beaty2015+9648@gmail.com"">james.beaty2015+9648@gmail.com</a>
<a href=""mailto:james.beaty2015+9320@gmail.com"">james.beaty2015+9320@gmail.com</a>
<a href=""mailto:james.beaty2015+1608@gmail.com"">james.beaty2015+1608@gmail.com</a>
<a href=""mailto:james.beaty2015+15079@gmail.com"">james.beaty2015+15079@gmail.com</a>
<a href=""mailto:james.beaty2015+1621@gmail.com"">james.beaty2015+1621@gmail.com</a>
<a href=""mailto:james.beaty2015+23495@gmail.com"">james.beaty2015+23495@gmail.com</a>
<a href=""mailto:james.beaty2015+24998@gmail.com"">james.beaty2015+24998@gmail.com</a>
<a href=""mailto:james.beaty2015+30111@gmail.com"">james.beaty2015+30111@gmail.com</a>
<a href=""mailto:james.beaty2015+3408@gmail.com"">james.beaty2015+3408@gmail.com</a>
<a href=""mailto:james.beaty2015+12772@gmail.com"">james.beaty2015+12772@gmail.com</a>
<a href=""mailto:james.beaty2015+30495@gmail.com"">james.beaty2015+30495@gmail.com</a>
<a href=""mailto:james.beaty2015+32723@gmail.com"">james.beaty2015+32723@gmail.com</a>
<a href=""mailto:james.beaty2015+10496@gmail.com"">james.beaty2015+10496@gmail.com</a>
<a href=""mailto:james.beaty2015+9780@gmail.com"">james.beaty2015+9780@gmail.com</a>
<a href=""mailto:james.beaty2015+18960@gmail.com"">james.beaty2015+18960@gmail.com</a>
<a href=""mailto:james.beaty2015+11397@gmail.com"">james.beaty2015+11397@gmail.com</a>
<a href=""mailto:james.beaty2015+10446@gmail.com"">james.beaty2015+10446@gmail.com</a>
<a href=""mailto:james.beaty2015+13131@gmail.com"">james.beaty2015+13131@gmail.com</a>
<a href=""mailto:james.beaty2015+9068@gmail.com"">james.beaty2015+9068@gmail.com</a>
<a href=""mailto:james.beaty2015+28118@gmail.com"">james.beaty2015+28118@gmail.com</a>
<a href=""mailto:james.beaty2015+11122@gmail.com"">james.beaty2015+11122@gmail.com</a>
<a href=""mailto:james.beaty2015+8930@gmail.com"">james.beaty2015+8930@gmail.com</a>
<a href=""mailto:amb.robinsanders5@gmail.com"">amb.robinsanders5@gmail.com</a>
<a href=""mailto:amb.robinsanders5+15097@gmail.com"">amb.robinsanders5+15097@gmail.com</a>
<a href=""mailto:amb.robinsanders5+2409@gmail.com"">amb.robinsanders5+2409@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1343@gmail.com"">amb.robinsanders5+1343@gmail.com</a>
<a href=""mailto:amb.robinsanders5+6150@gmail.com"">amb.robinsanders5+6150@gmail.com</a>
<a href=""mailto:amb.robinsanders5+7426@gmail.com"">amb.robinsanders5+7426@gmail.com</a>
<a href=""mailto:amb.robinsanders5+26750@gmail.com"">amb.robinsanders5+26750@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1743@gmail.com"">amb.robinsanders5+1743@gmail.com</a>
<a href=""mailto:amb.robinsanders5+18399@gmail.com"">amb.robinsanders5+18399@gmail.com</a>
<a href=""mailto:amb.robinsanders5+12590@gmail.com"">amb.robinsanders5+12590@gmail.com</a>
<a href=""mailto:amb.robinsanders5+2399@gmail.com"">amb.robinsanders5+2399@gmail.com</a>
<a href=""mailto:amb.robinsanders5+26937@gmail.com"">amb.robinsanders5+26937@gmail.com</a>
<a href=""mailto:amb.robinsanders5+8801@gmail.com"">amb.robinsanders5+8801@gmail.com</a>
<a href=""mailto:amb.robinsanders5+8146@gmail.com"">amb.robinsanders5+8146@gmail.com</a>
<a href=""mailto:amb.robinsanders5+14428@gmail.com"">amb.robinsanders5+14428@gmail.com</a>
<a href=""mailto:amb.robinsanders5+9529@gmail.com"">amb.robinsanders5+9529@gmail.com</a>
<a href=""mailto:amb.robinsanders5+6908@gmail.com"">amb.robinsanders5+6908@gmail.com</a>
<a href=""mailto:amb.robinsanders5+14498@gmail.com"">amb.robinsanders5+14498@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29857@gmail.com"">amb.robinsanders5+29857@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1915@gmail.com"">amb.robinsanders5+1915@gmail.com</a>
<a href=""mailto:amb.robinsanders5+10429@gmail.com"">amb.robinsanders5+10429@gmail.com</a>
<a href=""mailto:amb.robinsanders5+20989@gmail.com"">amb.robinsanders5+20989@gmail.com</a>
<a href=""mailto:amb.robinsanders5+3400@gmail.com"">amb.robinsanders5+3400@gmail.com</a>
<a href=""mailto:amb.robinsanders5+25181@gmail.com"">amb.robinsanders5+25181@gmail.com</a>
<a href=""mailto:amb.robinsanders5+23886@gmail.com"">amb.robinsanders5+23886@gmail.com</a>
<a href=""mailto:amb.robinsanders5+10918@gmail.com"">amb.robinsanders5+10918@gmail.com</a>
<a href=""mailto:amb.robinsanders5+937@gmail.com"">amb.robinsanders5+937@gmail.com</a>
<a href=""mailto:amb.robinsanders5+9541@gmail.com"">amb.robinsanders5+9541@gmail.com</a>
<a href=""mailto:amb.robinsanders5+11745@gmail.com"">amb.robinsanders5+11745@gmail.com</a>
<a href=""mailto:amb.robinsanders5+20937@gmail.com"">amb.robinsanders5+20937@gmail.com</a>
<a href=""mailto:amb.robinsanders5+20814@gmail.com"">amb.robinsanders5+20814@gmail.com</a>
<a href=""mailto:amb.robinsanders5+26536@gmail.com"">amb.robinsanders5+26536@gmail.com</a>
<a href=""mailto:amb.robinsanders5+25226@gmail.com"">amb.robinsanders5+25226@gmail.com</a>
<a href=""mailto:amb.robinsanders5+28696@gmail.com"">amb.robinsanders5+28696@gmail.com</a>
<a href=""mailto:amb.robinsanders5+23305@gmail.com"">amb.robinsanders5+23305@gmail.com</a>
<a href=""mailto:amb.robinsanders5+3710@gmail.com"">amb.robinsanders5+3710@gmail.com</a>
<a href=""mailto:amb.robinsanders5+25475@gmail.com"">amb.robinsanders5+25475@gmail.com</a>
<a href=""mailto:amb.robinsanders5+31479@gmail.com"">amb.robinsanders5+31479@gmail.com</a>
<a href=""mailto:amb.robinsanders5+10073@gmail.com"">amb.robinsanders5+10073@gmail.com</a>
<a href=""mailto:amb.robinsanders5+6065@gmail.com"">amb.robinsanders5+6065@gmail.com</a>
<a href=""mailto:amb.robinsanders5+5154@gmail.com"">amb.robinsanders5+5154@gmail.com</a>
<a href=""mailto:amb.robinsanders5+17212@gmail.com"">amb.robinsanders5+17212@gmail.com</a>
<a href=""mailto:amb.robinsanders5+17957@gmail.com"">amb.robinsanders5+17957@gmail.com</a>
<a href=""mailto:amb.robinsanders5+27845@gmail.com"">amb.robinsanders5+27845@gmail.com</a>
<a href=""mailto:amb.robinsanders5+13623@gmail.com"">amb.robinsanders5+13623@gmail.com</a>
<a href=""mailto:amb.robinsanders5+11003@gmail.com"">amb.robinsanders5+11003@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29173@gmail.com"">amb.robinsanders5+29173@gmail.com</a>
<a href=""mailto:amb.robinsanders5+5419@gmail.com"">amb.robinsanders5+5419@gmail.com</a>
<a href=""mailto:amb.robinsanders5+16356@gmail.com"">amb.robinsanders5+16356@gmail.com</a>
<a href=""mailto:amb.robinsanders5+26891@gmail.com"">amb.robinsanders5+26891@gmail.com</a>
<a href=""mailto:amb.robinsanders5+18769@gmail.com"">amb.robinsanders5+18769@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1136@gmail.com"">amb.robinsanders5+1136@gmail.com</a>
<a href=""mailto:amb.robinsanders5+32427@gmail.com"">amb.robinsanders5+32427@gmail.com</a>
<a href=""mailto:amb.robinsanders5+13364@gmail.com"">amb.robinsanders5+13364@gmail.com</a>
<a href=""mailto:amb.robinsanders5+12800@gmail.com"">amb.robinsanders5+12800@gmail.com</a>
<a href=""mailto:amb.robinsanders5+3224@gmail.com"">amb.robinsanders5+3224@gmail.com</a>
<a href=""mailto:amb.robinsanders5+20910@gmail.com"">amb.robinsanders5+20910@gmail.com</a>
<a href=""mailto:amb.robinsanders5+867@gmail.com"">amb.robinsanders5+867@gmail.com</a>
<a href=""mailto:amb.robinsanders5+14683@gmail.com"">amb.robinsanders5+14683@gmail.com</a>
<a href=""mailto:amb.robinsanders5+12115@gmail.com"">amb.robinsanders5+12115@gmail.com</a>
<a href=""mailto:amb.robinsanders5+3355@gmail.com"">amb.robinsanders5+3355@gmail.com</a>
<a href=""mailto:amb.robinsanders5+3841@gmail.com"">amb.robinsanders5+3841@gmail.com</a>
<a href=""mailto:amb.robinsanders5+28128@gmail.com"">amb.robinsanders5+28128@gmail.com</a>
<a href=""mailto:amb.robinsanders5+5948@gmail.com"">amb.robinsanders5+5948@gmail.com</a>
<a href=""mailto:amb.robinsanders5+16029@gmail.com"">amb.robinsanders5+16029@gmail.com</a>
<a href=""mailto:amb.robinsanders5+2531@gmail.com"">amb.robinsanders5+2531@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29115@gmail.com"">amb.robinsanders5+29115@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29670@gmail.com"">amb.robinsanders5+29670@gmail.com</a>
<a href=""mailto:amb.robinsanders5+13612@gmail.com"">amb.robinsanders5+13612@gmail.com</a>
<a href=""mailto:amb.robinsanders5+15683@gmail.com"">amb.robinsanders5+15683@gmail.com</a>
<a href=""mailto:amb.robinsanders5+14617@gmail.com"">amb.robinsanders5+14617@gmail.com</a>
<a href=""mailto:amb.robinsanders5+22027@gmail.com"">amb.robinsanders5+22027@gmail.com</a>
<a href=""mailto:amb.robinsanders5+8202@gmail.com"">amb.robinsanders5+8202@gmail.com</a>
<a href=""mailto:amb.robinsanders5+22670@gmail.com"">amb.robinsanders5+22670@gmail.com</a>
<a href=""mailto:amb.robinsanders5+12850@gmail.com"">amb.robinsanders5+12850@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29473@gmail.com"">amb.robinsanders5+29473@gmail.com</a>
<a href=""mailto:amb.robinsanders5+4938@gmail.com"">amb.robinsanders5+4938@gmail.com</a>
<a href=""mailto:amb.robinsanders5+11595@gmail.com"">amb.robinsanders5+11595@gmail.com</a>
<a href=""mailto:amb.robinsanders5+11712@gmail.com"">amb.robinsanders5+11712@gmail.com</a>
<a href=""mailto:amb.robinsanders5+2171@gmail.com"">amb.robinsanders5+2171@gmail.com</a>
<a href=""mailto:amb.robinsanders5+7784@gmail.com"">amb.robinsanders5+7784@gmail.com</a>
<a href=""mailto:amb.robinsanders5+32481@gmail.com"">amb.robinsanders5+32481@gmail.com</a>
<a href=""mailto:amb.robinsanders5+21981@gmail.com"">amb.robinsanders5+21981@gmail.com</a>
<a href=""mailto:amb.robinsanders5+15051@gmail.com"">amb.robinsanders5+15051@gmail.com</a>
<a href=""mailto:amb.robinsanders5+13791@gmail.com"">amb.robinsanders5+13791@gmail.com</a>
<a href=""mailto:amb.robinsanders5+32474@gmail.com"">amb.robinsanders5+32474@gmail.com</a>
<a href=""mailto:amb.robinsanders5+30979@gmail.com"">amb.robinsanders5+30979@gmail.com</a>
<a href=""mailto:amb.robinsanders5+12686@gmail.com"">amb.robinsanders5+12686@gmail.com</a>
<a href=""mailto:amb.robinsanders5+15108@gmail.com"">amb.robinsanders5+15108@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1057@gmail.com"">amb.robinsanders5+1057@gmail.com</a>
<a href=""mailto:amb.robinsanders5+30596@gmail.com"">amb.robinsanders5+30596@gmail.com</a>
<a href=""mailto:amb.robinsanders5+28027@gmail.com"">amb.robinsanders5+28027@gmail.com</a>
<a href=""mailto:amb.robinsanders5+29382@gmail.com"">amb.robinsanders5+29382@gmail.com</a>
<a href=""mailto:amb.robinsanders5+5731@gmail.com"">amb.robinsanders5+5731@gmail.com</a>
<a href=""mailto:amb.robinsanders5+1348@gmail.com"">amb.robinsanders5+1348@gmail.com</a>
<a href=""mailto:amb.robinsanders5+28083@gmail.com"">amb.robinsanders5+28083@gmail.com</a>
<a href=""mailto:amb.robinsanders5+7213@gmail.com"">amb.robinsanders5+7213@gmail.com</a>
<a href=""mailto:amb.robinsanders5+32316@gmail.com"">amb.robinsanders5+32316@gmail.com</a>
<a href=""mailto:amb.robinsanders5+10451@gmail.com"">amb.robinsanders5+10451@gmail.com</a>
<a href=""mailto:amb.robinsanders5+26642@gmail.com"">amb.robinsanders5+26642@gmail.com</a>
<a href=""mailto:amb.robinsanders5+18595@gmail.com"">amb.robinsanders5+18595@gmail.com</a>
<a href=""mailto:agentvictorokle@gmail.com"">agentvictorokle@gmail.com</a>
<a href=""mailto:agentvictorokle+17026@gmail.com"">agentvictorokle+17026@gmail.com</a>
<a href=""mailto:agentvictorokle+31518@gmail.com"">agentvictorokle+31518@gmail.com</a>
<a href=""mailto:agentvictorokle+12756@gmail.com"">agentvictorokle+12756@gmail.com</a>
<a href=""mailto:agentvictorokle+22641@gmail.com"">agentvictorokle+22641@gmail.com</a>
<a href=""mailto:agentvictorokle+517@gmail.com"">agentvictorokle+517@gmail.com</a>
<a href=""mailto:agentvictorokle+1276@gmail.com"">agentvictorokle+1276@gmail.com</a>
<a href=""mailto:agentvictorokle+32085@gmail.com"">agentvictorokle+32085@gmail.com</a>
<a href=""mailto:agentvictorokle+24746@gmail.com"">agentvictorokle+24746@gmail.com</a>
<a href=""mailto:agentvictorokle+31501@gmail.com"">agentvictorokle+31501@gmail.com</a>
<a href=""mailto:agentvictorokle+31706@gmail.com"">agentvictorokle+31706@gmail.com</a>
<a href=""mailto:agentvictorokle+7668@gmail.com"">agentvictorokle+7668@gmail.com</a>
<a href=""mailto:agentvictorokle+16599@gmail.com"">agentvictorokle+16599@gmail.com</a>
<a href=""mailto:agentvictorokle+20203@gmail.com"">agentvictorokle+20203@gmail.com</a>
<a href=""mailto:agentvictorokle+688@gmail.com"">agentvictorokle+688@gmail.com</a>
<a href=""mailto:agentvictorokle+3935@gmail.com"">agentvictorokle+3935@gmail.com</a>
<a href=""mailto:agentvictorokle+19523@gmail.com"">agentvictorokle+19523@gmail.com</a>
<a href=""mailto:agentvictorokle+8977@gmail.com"">agentvictorokle+8977@gmail.com</a>
<a href=""mailto:agentvictorokle+14811@gmail.com"">agentvictorokle+14811@gmail.com</a>
<a href=""mailto:agentvictorokle+16899@gmail.com"">agentvictorokle+16899@gmail.com</a>
<a href=""mailto:agentvictorokle+6905@gmail.com"">agentvictorokle+6905@gmail.com</a>
<a href=""mailto:agentvictorokle+28543@gmail.com"">agentvictorokle+28543@gmail.com</a>
<a href=""mailto:agentvictorokle+8239@gmail.com"">agentvictorokle+8239@gmail.com</a>
<a href=""mailto:agentvictorokle+27170@gmail.com"">agentvictorokle+27170@gmail.com</a>
<a href=""mailto:agentvictorokle+17056@gmail.com"">agentvictorokle+17056@gmail.com</a>
<a href=""mailto:agentvictorokle+9757@gmail.com"">agentvictorokle+9757@gmail.com</a>
<a href=""mailto:agentvictorokle+12261@gmail.com"">agentvictorokle+12261@gmail.com</a>
<a href=""mailto:agentvictorokle+17369@gmail.com"">agentvictorokle+17369@gmail.com</a>
<a href=""mailto:agentvictorokle+17800@gmail.com"">agentvictorokle+17800@gmail.com</a>
<a href=""mailto:agentvictorokle+28413@gmail.com"">agentvictorokle+28413@gmail.com</a>
<a href=""mailto:agentvictorokle+27673@gmail.com"">agentvictorokle+27673@gmail.com</a>
<a href=""mailto:agentvictorokle+25281@gmail.com"">agentvictorokle+25281@gmail.com</a>
<a href=""mailto:agentvictorokle+1474@gmail.com"">agentvictorokle+1474@gmail.com</a>
<a href=""mailto:agentvictorokle+21270@gmail.com"">agentvictorokle+21270@gmail.com</a>
<a href=""mailto:agentvictorokle+27150@gmail.com"">agentvictorokle+27150@gmail.com</a>
<a href=""mailto:agentvictorokle+24219@gmail.com"">agentvictorokle+24219@gmail.com</a>
<a href=""mailto:agentvictorokle+6100@gmail.com"">agentvictorokle+6100@gmail.com</a>
<a href=""mailto:agentvictorokle+9296@gmail.com"">agentvictorokle+9296@gmail.com</a>
<a href=""mailto:agentvictorokle+21268@gmail.com"">agentvictorokle+21268@gmail.com</a>
<a href=""mailto:agentvictorokle+30862@gmail.com"">agentvictorokle+30862@gmail.com</a>
<a href=""mailto:agentvictorokle+701@gmail.com"">agentvictorokle+701@gmail.com</a>
<a href=""mailto:agentvictorokle+27062@gmail.com"">agentvictorokle+27062@gmail.com</a>
<a href=""mailto:agentvictorokle+15230@gmail.com"">agentvictorokle+15230@gmail.com</a>
<a href=""mailto:agentvictorokle+20566@gmail.com"">agentvictorokle+20566@gmail.com</a>
<a href=""mailto:agentvictorokle+21356@gmail.com"">agentvictorokle+21356@gmail.com</a>
<a href=""mailto:agentvictorokle+13821@gmail.com"">agentvictorokle+13821@gmail.com</a>
<a href=""mailto:agentvictorokle+14109@gmail.com"">agentvictorokle+14109@gmail.com</a>
<a href=""mailto:agentvictorokle+1793@gmail.com"">agentvictorokle+1793@gmail.com</a>
<a href=""mailto:agentvictorokle+15093@gmail.com"">agentvictorokle+15093@gmail.com</a>
<a href=""mailto:agentvictorokle+1798@gmail.com"">agentvictorokle+1798@gmail.com</a>
<a href=""mailto:agentvictorokle+4846@gmail.com"">agentvictorokle+4846@gmail.com</a>
<a href=""mailto:agentvictorokle+5771@gmail.com"">agentvictorokle+5771@gmail.com</a>
<a href=""mailto:agentvictorokle+16184@gmail.com"">agentvictorokle+16184@gmail.com</a>
<a href=""mailto:agentvictorokle+28601@gmail.com"">agentvictorokle+28601@gmail.com</a>
<a href=""mailto:agentvictorokle+2622@gmail.com"">agentvictorokle+2622@gmail.com</a>
<a href=""mailto:agentvictorokle+29552@gmail.com"">agentvictorokle+29552@gmail.com</a>
<a href=""mailto:agentvictorokle+1464@gmail.com"">agentvictorokle+1464@gmail.com</a>
<a href=""mailto:agentvictorokle+18200@gmail.com"">agentvictorokle+18200@gmail.com</a>
<a href=""mailto:agentvictorokle+27209@gmail.com"">agentvictorokle+27209@gmail.com</a>
<a href=""mailto:agentvictorokle+30917@gmail.com"">agentvictorokle+30917@gmail.com</a>
<a href=""mailto:agentvictorokle+30338@gmail.com"">agentvictorokle+30338@gmail.com</a>
<a href=""mailto:agentvictorokle+11240@gmail.com"">agentvictorokle+11240@gmail.com</a>
<a href=""mailto:agentvictorokle+28014@gmail.com"">agentvictorokle+28014@gmail.com</a>
<a href=""mailto:agentvictorokle+6273@gmail.com"">agentvictorokle+6273@gmail.com</a>
<a href=""mailto:agentvictorokle+11624@gmail.com"">agentvictorokle+11624@gmail.com</a>
<a href=""mailto:agentvictorokle+11826@gmail.com"">agentvictorokle+11826@gmail.com</a>
<a href=""mailto:agentvictorokle+9482@gmail.com"">agentvictorokle+9482@gmail.com</a>
<a href=""mailto:agentvictorokle+27634@gmail.com"">agentvictorokle+27634@gmail.com</a>
<a href=""mailto:agentvictorokle+5870@gmail.com"">agentvictorokle+5870@gmail.com</a>
<a href=""mailto:agentvictorokle+12733@gmail.com"">agentvictorokle+12733@gmail.com</a>
<a href=""mailto:agentvictorokle+15625@gmail.com"">agentvictorokle+15625@gmail.com</a>
<a href=""mailto:agentvictorokle+27293@gmail.com"">agentvictorokle+27293@gmail.com</a>
<a href=""mailto:agentvictorokle+29512@gmail.com"">agentvictorokle+29512@gmail.com</a>
<a href=""mailto:agentvictorokle+24333@gmail.com"">agentvictorokle+24333@gmail.com</a>
<a href=""mailto:agentvictorokle+21057@gmail.com"">agentvictorokle+21057@gmail.com</a>
<a href=""mailto:agentvictorokle+30613@gmail.com"">agentvictorokle+30613@gmail.com</a>
<a href=""mailto:agentvictorokle+32064@gmail.com"">agentvictorokle+32064@gmail.com</a>
<a href=""mailto:agentvictorokle+11347@gmail.com"">agentvictorokle+11347@gmail.com</a>
<a href=""mailto:agentvictorokle+16431@gmail.com"">agentvictorokle+16431@gmail.com</a>
<a href=""mailto:agentvictorokle+18100@gmail.com"">agentvictorokle+18100@gmail.com</a>
<a href=""mailto:agentvictorokle+16370@gmail.com"">agentvictorokle+16370@gmail.com</a>
<a href=""mailto:agentvictorokle+24704@gmail.com"">agentvictorokle+24704@gmail.com</a>
<a href=""mailto:agentvictorokle+18371@gmail.com"">agentvictorokle+18371@gmail.com</a>
<a href=""mailto:agentvictorokle+27425@gmail.com"">agentvictorokle+27425@gmail.com</a>
<a href=""mailto:agentvictorokle+19368@gmail.com"">agentvictorokle+19368@gmail.com</a>
<a href=""mailto:agentvictorokle+3810@gmail.com"">agentvictorokle+3810@gmail.com</a>
<a href=""mailto:agentvictorokle+17755@gmail.com"">agentvictorokle+17755@gmail.com</a>
<a href=""mailto:agentvictorokle+1701@gmail.com"">agentvictorokle+1701@gmail.com</a>
<a href=""mailto:agentvictorokle+8054@gmail.com"">agentvictorokle+8054@gmail.com</a>
<a href=""mailto:agentvictorokle+21069@gmail.com"">agentvictorokle+21069@gmail.com</a>
<a href=""mailto:agentvictorokle+6662@gmail.com"">agentvictorokle+6662@gmail.com</a>
<a href=""mailto:agentvictorokle+4962@gmail.com"">agentvictorokle+4962@gmail.com</a>
<a href=""mailto:agentvictorokle+18253@gmail.com"">agentvictorokle+18253@gmail.com</a>
<a href=""mailto:agentvictorokle+10834@gmail.com"">agentvictorokle+10834@gmail.com</a>
<a href=""mailto:agentvictorokle+10453@gmail.com"">agentvictorokle+10453@gmail.com</a>
<a href=""mailto:agentvictorokle+4464@gmail.com"">agentvictorokle+4464@gmail.com</a>
<a href=""mailto:agentvictorokle+7814@gmail.com"">agentvictorokle+7814@gmail.com</a>
<a href=""mailto:agentvictorokle+9851@gmail.com"">agentvictorokle+9851@gmail.com</a>
<a href=""mailto:agentvictorokle+17563@gmail.com"">agentvictorokle+17563@gmail.com</a>
<a href=""mailto:agentvictorokle+22817@gmail.com"">agentvictorokle+22817@gmail.com</a>
<a href=""mailto:agentvictorokle+22051@gmail.com"">agentvictorokle+22051@gmail.com</a>
<a href=""mailto:jhnsmith010@gmail.com"">jhnsmith010@gmail.com</a>
<a href=""mailto:jhnsmith010+9553@gmail.com"">jhnsmith010+9553@gmail.com</a>
<a href=""mailto:jhnsmith010+24606@gmail.com"">jhnsmith010+24606@gmail.com</a>
<a href=""mailto:jhnsmith010+22099@gmail.com"">jhnsmith010+22099@gmail.com</a>
<a href=""mailto:jhnsmith010+7711@gmail.com"">jhnsmith010+7711@gmail.com</a>
<a href=""mailto:jhnsmith010+1796@gmail.com"">jhnsmith010+1796@gmail.com</a>
<a href=""mailto:jhnsmith010+11677@gmail.com"">jhnsmith010+11677@gmail.com</a>
<a href=""mailto:jhnsmith010+30419@gmail.com"">jhnsmith010+30419@gmail.com</a>
<a href=""mailto:jhnsmith010+4319@gmail.com"">jhnsmith010+4319@gmail.com</a>
<a href=""mailto:jhnsmith010+8675@gmail.com"">jhnsmith010+8675@gmail.com</a>
<a href=""mailto:jhnsmith010+14824@gmail.com"">jhnsmith010+14824@gmail.com</a>
<a href=""mailto:jhnsmith010+15838@gmail.com"">jhnsmith010+15838@gmail.com</a>
<a href=""mailto:jhnsmith010+3365@gmail.com"">jhnsmith010+3365@gmail.com</a>
<a href=""mailto:jhnsmith010+10792@gmail.com"">jhnsmith010+10792@gmail.com</a>
<a href=""mailto:jhnsmith010+18253@gmail.com"">jhnsmith010+18253@gmail.com</a>
<a href=""mailto:jhnsmith010+4656@gmail.com"">jhnsmith010+4656@gmail.com</a>
<a href=""mailto:jhnsmith010+27532@gmail.com"">jhnsmith010+27532@gmail.com</a>
<a href=""mailto:jhnsmith010+1964@gmail.com"">jhnsmith010+1964@gmail.com</a>
<a href=""mailto:jhnsmith010+5127@gmail.com"">jhnsmith010+5127@gmail.com</a>
<a href=""mailto:jhnsmith010+21189@gmail.com"">jhnsmith010+21189@gmail.com</a>
<a href=""mailto:jhnsmith010+3264@gmail.com"">jhnsmith010+3264@gmail.com</a>
<a href=""mailto:jhnsmith010+14477@gmail.com"">jhnsmith010+14477@gmail.com</a>
<a href=""mailto:jhnsmith010+26850@gmail.com"">jhnsmith010+26850@gmail.com</a>
<a href=""mailto:jhnsmith010+23562@gmail.com"">jhnsmith010+23562@gmail.com</a>
<a href=""mailto:jhnsmith010+17923@gmail.com"">jhnsmith010+17923@gmail.com</a>
<a href=""mailto:jhnsmith010+30797@gmail.com"">jhnsmith010+30797@gmail.com</a>
<a href=""mailto:jhnsmith010+19573@gmail.com"">jhnsmith010+19573@gmail.com</a>
<a href=""mailto:jhnsmith010+27491@gmail.com"">jhnsmith010+27491@gmail.com</a>
<a href=""mailto:jhnsmith010+1604@gmail.com"">jhnsmith010+1604@gmail.com</a>
<a href=""mailto:jhnsmith010+12581@gmail.com"">jhnsmith010+12581@gmail.com</a>
<a href=""mailto:jhnsmith010+32642@gmail.com"">jhnsmith010+32642@gmail.com</a>
<a href=""mailto:jhnsmith010+16963@gmail.com"">jhnsmith010+16963@gmail.com</a>
<a href=""mailto:jhnsmith010+2156@gmail.com"">jhnsmith010+2156@gmail.com</a>
<a href=""mailto:jhnsmith010+21017@gmail.com"">jhnsmith010+21017@gmail.com</a>
<a href=""mailto:jhnsmith010+27561@gmail.com"">jhnsmith010+27561@gmail.com</a>
<a href=""mailto:jhnsmith010+1254@gmail.com"">jhnsmith010+1254@gmail.com</a>
<a href=""mailto:jhnsmith010+3354@gmail.com"">jhnsmith010+3354@gmail.com</a>
<a href=""mailto:jhnsmith010+17108@gmail.com"">jhnsmith010+17108@gmail.com</a>
<a href=""mailto:jhnsmith010+29078@gmail.com"">jhnsmith010+29078@gmail.com</a>
<a href=""mailto:jhnsmith010+9516@gmail.com"">jhnsmith010+9516@gmail.com</a>
<a href=""mailto:jhnsmith010+24573@gmail.com"">jhnsmith010+24573@gmail.com</a>
<a href=""mailto:jhnsmith010+7712@gmail.com"">jhnsmith010+7712@gmail.com</a>
<a href=""mailto:jhnsmith010+24027@gmail.com"">jhnsmith010+24027@gmail.com</a>
<a href=""mailto:jhnsmith010+6817@gmail.com"">jhnsmith010+6817@gmail.com</a>
<a href=""mailto:jhnsmith010+27284@gmail.com"">jhnsmith010+27284@gmail.com</a>
<a href=""mailto:jhnsmith010+23197@gmail.com"">jhnsmith010+23197@gmail.com</a>
<a href=""mailto:jhnsmith010+24301@gmail.com"">jhnsmith010+24301@gmail.com</a>
<a href=""mailto:jhnsmith010+15302@gmail.com"">jhnsmith010+15302@gmail.com</a>
<a href=""mailto:jhnsmith010+25032@gmail.com"">jhnsmith010+25032@gmail.com</a>
<a href=""mailto:jhnsmith010+27718@gmail.com"">jhnsmith010+27718@gmail.com</a>
<a href=""mailto:jhnsmith010+14936@gmail.com"">jhnsmith010+14936@gmail.com</a>
<a href=""mailto:jhnsmith010+3191@gmail.com"">jhnsmith010+3191@gmail.com</a>
<a href=""mailto:jhnsmith010+9611@gmail.com"">jhnsmith010+9611@gmail.com</a>
<a href=""mailto:jhnsmith010+18316@gmail.com"">jhnsmith010+18316@gmail.com</a>
<a href=""mailto:jhnsmith010+10428@gmail.com"">jhnsmith010+10428@gmail.com</a>
<a href=""mailto:jhnsmith010+23083@gmail.com"">jhnsmith010+23083@gmail.com</a>
<a href=""mailto:jhnsmith010+20607@gmail.com"">jhnsmith010+20607@gmail.com</a>
<a href=""mailto:jhnsmith010+30627@gmail.com"">jhnsmith010+30627@gmail.com</a>
<a href=""mailto:jhnsmith010+21221@gmail.com"">jhnsmith010+21221@gmail.com</a>
<a href=""mailto:jhnsmith010+6984@gmail.com"">jhnsmith010+6984@gmail.com</a>
<a href=""mailto:jhnsmith010+10980@gmail.com"">jhnsmith010+10980@gmail.com</a>
<a href=""mailto:jhnsmith010+10588@gmail.com"">jhnsmith010+10588@gmail.com</a>
<a href=""mailto:jhnsmith010+24097@gmail.com"">jhnsmith010+24097@gmail.com</a>
<a href=""mailto:jhnsmith010+30808@gmail.com"">jhnsmith010+30808@gmail.com</a>
<a href=""mailto:jhnsmith010+1936@gmail.com"">jhnsmith010+1936@gmail.com</a>
<a href=""mailto:jhnsmith010+17413@gmail.com"">jhnsmith010+17413@gmail.com</a>
<a href=""mailto:jhnsmith010+27923@gmail.com"">jhnsmith010+27923@gmail.com</a>
<a href=""mailto:jhnsmith010+21459@gmail.com"">jhnsmith010+21459@gmail.com</a>
<a href=""mailto:jhnsmith010+7262@gmail.com"">jhnsmith010+7262@gmail.com</a>
<a href=""mailto:jhnsmith010+24656@gmail.com"">jhnsmith010+24656@gmail.com</a>
<a href=""mailto:jhnsmith010+10952@gmail.com"">jhnsmith010+10952@gmail.com</a>
<a href=""mailto:jhnsmith010+13291@gmail.com"">jhnsmith010+13291@gmail.com</a>
<a href=""mailto:jhnsmith010+7198@gmail.com"">jhnsmith010+7198@gmail.com</a>
<a href=""mailto:jhnsmith010+13231@gmail.com"">jhnsmith010+13231@gmail.com</a>
<a href=""mailto:jhnsmith010+2838@gmail.com"">jhnsmith010+2838@gmail.com</a>
<a href=""mailto:jhnsmith010+31992@gmail.com"">jhnsmith010+31992@gmail.com</a>
<a href=""mailto:jhnsmith010+17341@gmail.com"">jhnsmith010+17341@gmail.com</a>
<a href=""mailto:jhnsmith010+13624@gmail.com"">jhnsmith010+13624@gmail.com</a>
<a href=""mailto:jhnsmith010+21648@gmail.com"">jhnsmith010+21648@gmail.com</a>
<a href=""mailto:jhnsmith010+31784@gmail.com"">jhnsmith010+31784@gmail.com</a>
<a href=""mailto:jhnsmith010+5370@gmail.com"">jhnsmith010+5370@gmail.com</a>
<a href=""mailto:jhnsmith010+11046@gmail.com"">jhnsmith010+11046@gmail.com</a>
<a href=""mailto:jhnsmith010+19275@gmail.com"">jhnsmith010+19275@gmail.com</a>
<a href=""mailto:jhnsmith010+25626@gmail.com"">jhnsmith010+25626@gmail.com</a>
<a href=""mailto:jhnsmith010+13764@gmail.com"">jhnsmith010+13764@gmail.com</a>
<a href=""mailto:jhnsmith010+19663@gmail.com"">jhnsmith010+19663@gmail.com</a>
<a href=""mailto:jhnsmith010+2168@gmail.com"">jhnsmith010+2168@gmail.com</a>
<a href=""mailto:jhnsmith010+11303@gmail.com"">jhnsmith010+11303@gmail.com</a>
<a href=""mailto:jhnsmith010+17818@gmail.com"">jhnsmith010+17818@gmail.com</a>
<a href=""mailto:jhnsmith010+8187@gmail.com"">jhnsmith010+8187@gmail.com</a>
<a href=""mailto:jhnsmith010+23985@gmail.com"">jhnsmith010+23985@gmail.com</a>
<a href=""mailto:jhnsmith010+7262@gmail.com"">jhnsmith010+7262@gmail.com</a>
<a href=""mailto:jhnsmith010+32475@gmail.com"">jhnsmith010+32475@gmail.com</a>
<a href=""mailto:jhnsmith010+31130@gmail.com"">jhnsmith010+31130@gmail.com</a>
<a href=""mailto:jhnsmith010+4514@gmail.com"">jhnsmith010+4514@gmail.com</a>
<a href=""mailto:jhnsmith010+7406@gmail.com"">jhnsmith010+7406@gmail.com</a>
<a href=""mailto:jhnsmith010+29033@gmail.com"">jhnsmith010+29033@gmail.com</a>
<a href=""mailto:jhnsmith010+25140@gmail.com"">jhnsmith010+25140@gmail.com</a>
<a href=""mailto:jhnsmith010+30037@gmail.com"">jhnsmith010+30037@gmail.com</a>
<a href=""mailto:jhnsmith010+31030@gmail.com"">jhnsmith010+31030@gmail.com</a>
<a href=""mailto:jhnsmith010+5816@gmail.com"">jhnsmith010+5816@gmail.com</a>"
CdLnBj3P,__manifest__.py,bigdawgbz,Python,Wednesday 19th of July 2023 11:54:18 AM CDT,"{
    'name': 'Import Permits',
    'summary': 'Module for managing import permits',
    'description': 'This module allows users to manage and process import permits for drones and other goods.',
    'sequence': 1,
    'version': '1.0',
    'author': 'Errol Noralez',
    'website': 'https://www.puc.bz',
    'category': 'Operations/Inventory',
    'depends': ['base', 'web', 'mail'],
    'data': [
        'security/ir.model.access.csv',
        'security/import_permit_security.xml',
        # 'data/main.xml',
        'data/import_permit_sequence.xml',
        'views/import_permit_views.xml',
        'reports/import_permit_report.xml',
        #'reports/import_permit_report_template.xml',
        #'reports/report_import_permit_certificate.xml',
        # 'views/import_permit_request_form_template.xml',
        # 'views/portal.xml',
        # 'views/res_partner.xml',
        # 'views/import_permit_views2.xml',
        # 'wizard/drone_permit_wizard.xml',
        # 'wizard/import_permit_wizard.xml',
        # 'reports/import_permit_view_report.xml',
        # 'reports/import_permit_report2.xml',
        # 'reports/import_permit_report.xml'
    ],
    'demo': [],
    'installable': True,
    'application': True,
    'auto_install': False,
    'qweb': [
        'static/src/xml/import_permit_form.xml',
    ],
    'js': [
        'static/src/js/import_permit_form.js',
    ],
    'images': [],
    'license': 'AGPL-3',
    # 'controllers': [
    #   'controllers/main.py',
    # ],
}
"
KEwyL5CB,import_permit_report.xml,bigdawgbz,Python,Wednesday 19th of July 2023 11:52:14 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<odoo>
    <data>
        <!-- Import Permit Certificate PDF Report -->
        <record id=""report_import_permit_certificate_document"" model=""ir.actions.report"">
            <field name=""name"">Import Permit Certificate</field>
            <field name=""model"">import.permit</field>
            <field name=""report_type"">qweb-pdf</field>
            <field name=""report_name"">permit_management.report_import_permit_certificate_document</field>
            <field name=""report_file"">permit_management.report_import_permit_certificate_document</field>
            <field name=""print_report_name"">Import Permit Report</field>
            <field name=""binding_model_id"" ref=""model_import_permit""/>
            <field name=""binding_type"">report</field>
        </record>
    </data>
"
REXuiMdN,import_permit_views.xml,bigdawgbz,Python,Wednesday 19th of July 2023 11:49:36 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<odoo>
    <data>
        <!-- Import Permit Tree View -->
        <record id=""view_import_permit_tree"" model=""ir.ui.view"">
            <field name=""name"">Import Permit Tree View</field>
            <field name=""model"">import.permit</field>
            <field name=""arch"" type=""xml"">
                <tree>
                    <field name=""permit_type""/>
                    <field name=""permit_number""/>
                    <field name=""applicant_id""/>
                    <field name=""email""/>
                    <field name=""mobile""/>
                    <field name=""state""/>
                    <field name=""company_id""/>
                </tree>
            </field>
        </record>

        <!-- Import Permit Form View -->
        <record id=""view_import_permit_form"" model=""ir.ui.view"">
            <field name=""name"">Import Permit Form View</field>
            <field name=""model"">import.permit</field>
            <field name=""arch"" type=""xml"">
                <form>
                    <header>
                        <!-- Buttons and actions -->
                        <button name=""action_draft"" string=""Set to Draft"" type=""object"" class=""oe_highlight""
                                states=""submit,reject"" groups=""base.group_user""/>
                        <button name=""action_submit"" string=""Submit"" type=""object"" class=""oe_highlight""
                                states=""draft"" groups=""base.group_user""/>
                        <button name=""action_review"" string=""Under Review"" type=""object"" class=""oe_highlight""
                                states=""submit"" groups=""base.group_user""/>
                        <button name=""action_approve"" string=""Approve"" type=""object"" class=""oe_highlight""
                                states=""review"" groups=""base.group_user"" attrs=""{'invisible': [('approval_signature', '=', False)]}""/>
                        <button name=""action_reject"" string=""Reject"" type=""object"" class=""oe_highlight""
                                states=""review"" groups=""base.group_user""/>
                        <field name=""state"" widget=""statusbar""
                               statusbar_visible=""draft,submit,review,approve,cancel"" readonly=""1""/>
                        <!-- Buttons and actions -->
<!--                        <button name=""action_draft"" string=""Set to Draft"" type=""object"" class=""oe_highlight""-->
<!--                                state=""submit,reject"" groups=""base.group_user""/>-->
<!--                        <button name=""action_submit"" string=""Submit"" type=""object"" class=""oe_highlight"" state=""draft""-->
<!--                                groups=""base.group_user""/>-->
<!--                        <button name=""action_review"" string=""Under Review"" type=""object"" class=""oe_highlight""-->
<!--                                state=""submit""-->
<!--                                groups=""base.group_user""/>-->
<!--                        <button name=""action_approve"" string=""Approve"" type=""object"" class=""oe_highlight"" state=""review""-->
<!--                                groups=""base.group_user"" attrs=""{'invisible': [('approval_signature', '=', False)]}""/>-->
<!--                        <button name=""action_reject"" string=""Reject"" type=""object"" class=""oe_highlight"" state=""review""-->
<!--                                groups=""base.group_user""/>-->
<!--                        <field name=""state"" widget=""statusbar""-->
<!--                               statusbar_visible=""draft,submit,review,approve,cancel"" readonly=""1""/>-->

                    </header>
                    <sheet>
                        <widget name=""web_ribbon"" title=""Approved"" bg_color=""bg-success""
                                attrs=""{'invisible': [('state', '!=', 'Approve')]}""/>
                        <widget name=""web_ribbon"" title=""Rejected"" bg_color=""bg-danger""
                                attrs=""{'invisible': [('state', '!=', 'Reject')]}""/>
                        <!--<div class=""oe_title"">
                            <h1>
                                <field name=""permit_number"" readonly=""1""/>
                            </h1>
                        </div>-->
                        <!-- Field groups and other fields -->
                        <div class=""oe_title"">
                            <h1>
                                <field name=""permit_number"" readonly=""1""/>
                            </h1>
                        </div>
                        <group>
                            <field name=""permit_type"" options=""{'no_create': True, 'no_open': True}""/>
                        </group>

                        <notebook>
                            <page name=""applicant_information"" string=""Applicant Information"">
                                <group>
                                    <group string=""Applicant Information"">
                                        <field name=""applicant_id""/>
                                        <field name=""company_id"" readonly=""1""/>
                                        <field name=""email"" readonly=""1""/>
                                        <field name=""mobile"" readonly=""1""/>
                                        <field name=""birth_date""/>
                                        <field name=""id_type""/>
                                        <field name=""id_number""/>
                                    </group>
                                    <group string=""Contact Information"">
                                        <label for=""street"" string=""Address""/>
                                        <div class=""o_address_format"">
                                            <field name=""street"" required=""1"" placeholder=""Street...""
                                                   class=""o_address_street""/>
                                            <field name=""street2"" placeholder=""Street 2..."" class=""o_address_street""/>
                                            <field name=""zip"" placeholder=""Zip..."" class=""o_address_zip""/>
                                            <field name=""country_id"" required=""1"" placeholder=""Country""
                                                   class=""o_address_country""
                                                   options='{""no_open"": True, ""no_create"": True}'/>
                                        </div>
                                    </group>
                                </group>
                            </page>

                            <page string=""Drone Permits"" attrs=""{'invisible': [('permit_type', '!=', 'Drone')]}"">
                                <field name=""drone_permit_ids"" mode=""tree"">
                                    <tree>
                                        <field name=""drone_type""/>
                                        <field name=""drone_make""/>
                                        <field name=""drone_model""/>
                                        <field name=""drone_color""/>
                                        <field name=""num_engines""/>
                                        <field name=""drone_serial_number""/>
                                        <field name=""documents""/>
                                        <field name=""drone_stay_in_belize""/>
                                        <field name=""departure_date""/>
                                    </tree>
                                </field>
                            </page>

                            <page string=""General Permits"" attrs=""{'invisible': [('permit_type', '!=', 'General')]}"">
                                <field name=""general_permit_ids"" mode=""tree"">
                                    <tree>
                                        <field name=""imported_goods_type""/>
                                        <field name=""imported_goods_make""/>
                                        <field name=""imported_goods_model""/>
                                        <field name=""imported_goods_quantity""/>
                                        <field name=""imported_goods_serial_number""/>
                                        <field name=""documents""/>
                                    </tree>
                                </field>
                            </page>

                            <!-- <page string=""Approval Signature""
                                   attrs=""{'invisible': [('state', 'in', ('Draft', 'Submit'))]}"">
                                 <group>
                                     <group>
                                         <field name=""approved_by"" groups=""base.group_user""/>
                                         <field name=""approval_signature"" widget=""signature"" groups=""base.group_user""/>
                                     </group>
                                 </group>
                             </page>-->
                            <page string=""Approval Signature""
                                  attrs=""{'invisible': [('state', 'in', ('Draft', 'Submit'))]}"">
                                <group>
                                    <group>
                                        <field name=""approved_by""/>
                                        <field name=""approval_signature"" widget=""signature""/>
                                    </group>
                                </group>
                            </page>
                        </notebook>
                        <group>
                            <group>
                                <field name=""state"" readonly=""1""/>
                                <field name=""permit_type"" options=""{'no_create': True, 'no_open': True}"" readonly=""1""/>
                                <field name=""permit_number"" readonly=""1""/>
                            </group>
                            <group>
                                <field name=""fees""/>
                                <field name=""paid_date""/>
                                <field name=""receipt_no""/>
                                <field name=""receipt"" widget=""many2many_binary""/>
                            </group>
                        </group>
                        <group>
                            <field name=""notes""/>
                        </group>
                        <!--<group>
                            <group>
                                <field name=""state"" readonly=""1""/>
                                <field name=""permit_type""
                                       options=""{'no_create': True, 'no_open': True}"" readonly=""1""/>
                                <field name=""permit_number"" readonly=""1""/>
                            </group>
                            <group>
                                <field name=""fees""/>
                                <field name=""paid_date""/>
                                <field name=""receipt_no""/>
                                <field name=""receipt"" widget=""many2many_binary""/>
                            </group>
                        </group>
                        <group>
                            <field name=""notes""/>
                        </group>-->
                    </sheet>
                    <!-- Document preview and chatter -->
                    <!--<div class=""oe_chatter"">
                        <field name=""message_follower_ids"" widget=""mail_followers"" groups=""base.group_user""/>
                        <field name=""message_ids"" widget=""mail_thread""/>
                    </div>-->
                    <div class=""o.document_preview"" options=""{types: ['pdf', 'image'], 'order': 'desc'}""/>
                    <div class=""oe_chatter"">
                        <field name=""message_follower_ids"" widget=""mail_followers"" groups=""base.group_user""/>
                        <field name=""message_ids"" widget=""mail_thread""/>
                    </div>
                </form>
            </field>
        </record>

        <!-- Import Permit Action -->
        <record id=""action_import_permit"" model=""ir.actions.act_window"">
            <field name=""name"">Import Permits</field>
            <field name=""res_model"">import.permit</field>
            <field name=""view_mode"">tree,form,kanban</field>
        </record>

        <!-- Import Permit Menu -->
        <menuitem id=""menu_import_permit"" name=""Permit Management""
                  web_icon=""permit_management,static/description/icon.png"" sequence=""20""/>
        <menuitem id=""menu_import_permit_tree"" name=""Import Permits"" parent=""menu_import_permit""
                  action=""action_import_permit"" sequence=""10""/>

        <!-- Main menu item for Configuration -->
        <menuitem id=""permit_management_menu_configuration"" name=""Configuration"" parent=""menu_import_permit""
                  sequence=""30""/>

        <!-- Submenu item for Customers -->
        <menuitem id=""res_partner_customer_menu_action"" name=""Applicants"" parent=""permit_management_menu_configuration""
                  action=""base.action_partner_customer_form"" sequence=""10""/>

    </data>
</odoo>"
5y9bpMSg,singularity by zayats,mrWhiskasss,Lua,Wednesday 19th of July 2023 11:48:26 AM CDT,"--by zayats

local items = {
    {""Редстоун сингулярность"", ""minecraft:redstone_block"", 0, 6000, ""Avaritia:Singularity"", 3},
    {""Железная сингулярность"", ""minecraft:iron_block"", 0, 5000, ""Avaritia:Singularity"", 0},
    {""Кварцевая сингулярность"", ""minecraft:quartz_block"", 0, 6000, ""Avaritia:Singularity"", 4},
    {""Лазуритовая сингулярность"", ""minecraft:lapis_block"", 0, 6000, ""Avaritia:Singularity"", 2},
    {""Алмазная сингулярность"", ""minecraft:diamond_block"", 0, 3000, ""universalsingularities:universal.vanilla.singularity"", 2},
    {""Золотая сингулярность"", ""minecraft:gold_block"", 0, 3000, ""Avaritia:Singularity"", 1},
    {""Медная сингулярность"", ""ThermalFoundation:Storage"", 0, 5000, ""Avaritia:Singularity"", 5},
    {""Оловянная сингулярность"", ""ThermalFoundation:Storage"", 1, 5000, ""Avaritia:Singularity"", 6},
    {""Свинцовая сингулярность"", ""ThermalFoundation:Storage"", 3, 3000, ""Avaritia:Singularity"", 7},
    {""Серебрянная сингулярность"", ""ThermalFoundation:Storage"", 2, 3000, ""Avaritia:Singularity"", 8},
    {""Никелевая сингулярность"", ""ThermalFoundation:Storage"", 4, 19800, ""Avaritia:Singularity"", 9}
}

local requestSize = 1

local component = require ""component""
local unicode = require ""unicode""
local event = require ""event""
local computer = require ""computer""
local gpu = component.gpu
local ae = component.me_interface
local function drawTable()
    local w, h = 40, #items + 2
    gpu.setResolution(w, h)
    gpu.fill(1, 1, w, 1, ""─"")
    gpu.fill(1, 1, 1, h, ""│"")
    gpu.fill(w, 1, 1, h, ""│"")
    gpu.fill(1, h, w, 1, ""─"")
    gpu.set(1, 1, ""┌"")
    gpu.set(w, 1, ""┐"")
    gpu.set(1, h, ""└"")
    gpu.set(w, h, ""┘"")
    gpu.set(2, 1, ""[Название]"")
    gpu.set(29, 1, ""[Кол-во]"")
end
local function convert(value)
    if value>= 10^9 then
        return string.format(""%0.1fG"", value/10^9)
    elseif value>= 10^6 then
        return string.format(""%0.1fM"", value/10^6)
    elseif value>= 10^3 then
        return string.format(""%0.1fK"", value/10^3)
    else
        return string.format(""%d"", value)
    end
end
local function getSize(name, dmg)
    for _, item in ipairs(ae.getItemsInNetwork()) do
        if item.name == name and item.damage == dmg then
            return item.size
        end
    end
    return 0
end
local function drawButton(x, y, text, tColor)
    local oldfColor =gpu.getForeground()
    gpu.setForeground(tColor)
    gpu.set(x, y, text)
    gpu.setForeground(oldfColor)
end
local function draw()
    for i = 2, #items do
        gpu.set(2, i, items[i - 1][1])
        drawButton(37, i, ""+"", 0x00FF00)
        gpu.set(29, i, tostring(items[i - 1][4]))
    end
end
local function start(item)
    local id, dmg, blockSize = item[2], item[3], item[4]
    local drop = 0
    gpu.set(2, #items+1, (item[1] .. "" x"" .. drop .. "" / "" .. blockSize))
    while true do
        if drop >= blockSize then
            gpu.fill(2, #items+1, w - 2, 1, "" "")
            return
        else
            local dropcount = ae.exportItem({id = item[2], dmg = item[3]}, ""DOWN"", blockSize - drop).size
            gpu.set(2, #items+1, (item[1] .. "" "" .. drop .. "" / ""  .. (blockSize - drop)))
            drop = drop + dropcount
            if dropcount == 0 then
                os.sleep(0.05)
            end
        end
    end
end

local function craft(id)
    local item = items[id]
    local size = getSize(item[2], item[3])
    gpu.set(2, #items + 1, (""Доступно: "" .. size .. "" / "" .. item[4]))
    if size < (item[4] * requestSize) then
        if getSize(item[2], item[3]) >= item[4] then
            gpu.set(2, #items + 1, (""Доступно: "" .. size .. "" / "" .. item[4]))
            start(item)
        end
        ae.requestCrafting({id = item[2], dmg = item[3]}, ((item[4] * requestSize) - size))
        while true do
            gpu.set(2, #items + 1, (""Доступно: "" .. getSize(item[2], item[3]) .. "" / "" .. item[4]))
            if getSize(item[2], item[3]) >= item[4] then
                start(item)
            end
            os.sleep(0.1)
        end
    else
        start(item)
    end
end
function detect(_, _, x, y)
    if x ~= nil then
        for i = 1, #items do
            if x == 37 and i == y then
                computer.beep(1000, 0.1)
                craft(y - 1)
            end
        end
    end
end
drawTable()
draw()
while true do
    gpu.fill(2, #items+1, 40 - 2, 1, "" "")
    event.listen(""touch"", detect)
    os.sleep(0.01)
end"
RHfAy00S,Singly Linked List in C,BenTibnam,C,Wednesday 19th of July 2023 11:34:58 AM CDT,"#include <stdio.h>
#include <stdlib.h>

typedef struct node
{
    char *data;
    struct node *next;
}
node;

int main (void)
{
    node *list = NULL;

    // adding the first node
    node *n =  malloc(sizeof(node));
    n->data = ""First Node"";
    n->next = NULL;
    list = n;

    // adding the second node
    n = malloc(sizeof(node));
    n->data = ""Second Node"";
    n->next = list;
    list = n;

    // adding the third node
    n = malloc(sizeof(node));
    n->data = ""Third Node"";
    n->next = list;
    list = n;

    // printing the linked list data
    node *current_node = list;
    while (current_node != NULL)
    {
        printf(""Current node data: %s\n"", current_node->data);
        current_node = current_node->next;
    }

    // freeing the memory after done with list
    current_node = list;
    while (current_node != NULL)
    {
        node *next_node = current_node->next;
        free(current_node);
        current_node = next_node;
    }

    return 0;
}"
byy4yvZY,01. Activation Keys,veronikaaa86,Java,Wednesday 19th of July 2023 11:11:30 AM CDT,"package finalExamPrep;

import java.util.Scanner;

public class P01ActivationKeys {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String activationKey = scanner.nextLine();

        String input = scanner.nextLine();
        while (!input.equals(""Generate"")) {
            String[] tokens = input.split("">>>"");
            String command = tokens[0];

            String substring = """";
            int startIndex = 0;
            int endIndex = 0;
                    switch (command) {
                case ""Contains"":
                    substring = tokens[1];
                    if (activationKey.contains(substring)) {
                        System.out.printf(""%s contains %s%n"", activationKey, substring);
                    } else {
                        System.out.println(""Substring not found!"");
                    }
                    break;
                case ""Flip"":
                    String upperOrLower = tokens[1];
                    startIndex = Integer.parseInt(tokens[2]);
                    endIndex = Integer.parseInt(tokens[3]);
                    substring = activationKey.substring(startIndex, endIndex);

                    if (upperOrLower.equals(""Upper"")) {
                        activationKey = activationKey.replace(substring, substring.toUpperCase());
                    } else {
                        activationKey = activationKey.replace(substring, substring.toLowerCase());
                    }
                    System.out.println(activationKey);
                    break;
                    case ""Slice"":
                        startIndex = Integer.parseInt(tokens[1]);
                        endIndex = Integer.parseInt(tokens[2]);

                        substring = activationKey.substring(startIndex, endIndex);
                        activationKey = activationKey.replace(substring, """");
                        System.out.println(activationKey);

                        break;
                    }


            input = scanner.nextLine();
        }

        System.out.printf(""Your activation key is: %s%n"", activationKey);

    }
}
"
c4subLqk,Untitled,xidharth,JavaScript,Wednesday 19th of July 2023 11:07:03 AM CDT,"
type PartialRecord<K extends keyof Animal> = {
  [P in K] ?: Animal[K]
}
"
xKt6GfzR,# tk_caustic_lines.py,here2share,Python,Wednesday 19th of July 2023 10:50:14 AM CDT,"# tk_caustic_lines.py

from tkinter import *
from PIL import Image, ImageTk, ImageFilter, ImageDraw, ImageEnhance
import copy
 
ww = 256 
hh = 256 
cx, cy = ww//2, hh//2
 
def rgb2hex(r,g,b):
	return '#%02X%02X%02X'%(r,g,b)
 
rgb = range(0, 256, 10)
colors = [rgb2hex(z, z, z) for z in rgb]
 
img = Image.new('RGB', (ww, hh), (0, 0, 0))
draw = {}
draw[0] = ImageDraw.Draw(img)
blur_radius = 0.03 * min(img.size)
 
def display(new_img):
	tkimg = ImageTk.PhotoImage(new_img)
	canvas.create_image((cx, cy), image=tkimg)
	canvas.update()
 
root = Tk()
root.title(""tk_caustic_lines"")
root.geometry(""%dx%d+10+10""%(ww,hh))
canvas = Canvas(root, width=ww, height=hh, bg='white')
canvas.pack(side=LEFT, fill=BOTH, expand=True)
 
sz = 16
span = ww//sz
c = 0
xy = range(0, sz*span, sz)
		
sharpening_masks = []

while 1:
	for y in xy:
		c = (c + 2) % 11
		for x in xy:
			color = colors.pop(c)
			colors.append(color)
			draw[0].rectangle((x, y, x+sz, y+sz), fill=color, outline=color)
			c = (c + 3) % 11
	draw['target'] = img.filter(ImageFilter.GaussianBlur(radius=blur_radius)).convert(""L"").point(lambda x: 0 if 120 < x < 128 else 255)
	display(draw['target'])
	if draw['target'] not in sharpening_masks[:1]:
		sharpening_masks += [draw['target']]
	else:
		break
print(""grayscale masks created"")"
yKAs1n3v,Bibliometrics filter query,afergadis,SQL,Wednesday 19th of July 2023 10:30:56 AM CDT,"select 
  doi, 
  oaid, 
  pub_date, 
  pub_year, 
  published_venue, 
  pub_type, 
  is_open_access, 
  is_published_open_access, 
  is_peer_reviewed, 
  is_international, 
  L2 as domain, 
  L3 as category, 
  L4 as topic, 
  score_for_L3, 
  score_for_L4, 
  title, 
  abstract, 
  authors, 
  affiliations, 
  nr_citations, 
  cit_venues, 
  citations_per_year, 
  nr_references, 
  fwci, 
  macro, 
  meso, 
  funders, 
  organizations, 
  countries, 
  sdg 
from 
  bibliometrics 
where 
  publication_year >= 2014 
  and publication_year <= 2021 
  and L2 = 'agricultural biotechnology' 
  and L3 = 'food science' 
  and L4 in (
    'Drug delivery devices', 'Polyphenols/Phytochemicals', 
    'Diary product/Milk', 'Mycotoxins/Building biology', 
    'Food science/Food industry', 'Brewing/Fermented drinks'
  ) 
  and pub_type in (
    'Article', 'Review', 'Preprint', 'Report', 
    'Book', 'Research'
  ) 
  and is_open_access is true 
  and is_published_open_access is true
"
7REZpaz0,RandCheck: Are Chairs real?,BusinessBurrito,Python,Wednesday 19th of July 2023 09:44:17 AM CDT,"import random
import time

num_rolls = int(input('Enter number of deep thinking trials:\n'))
thinking = ""thinking""
dot = "".""

if num_rolls >= 1 and num_rolls < 100:
    for i in range(num_rolls):
        die1 = random.randint(1,6)
        die2 = random.randint(1,6)
        roll_total = die1 + die2
        thinking = thinking + dot
        print(thinking)
        time.sleep(0.25)
    time.sleep(1)
    if (roll_total % 2) == 0:
        print(""I'm thinking chairs are not real"")
    elif (roll_total % 2) != 0:
        print(""I'm thinking chairs are indeed real"")
time.sleep(1)
if num_rolls >= 100:
    print(""Too many thoughts, I'm not that smart."")
if num_rolls <= 0:
    print(""I...what? how can I UNthink?!"")
else:
    print(""I'm tired now."")"
JGAsy0Eq,Урок 10 variadic templates 2/3,kutuzzzov,C++,Wednesday 19th of July 2023 09:42:17 AM CDT,"#include <cassert>
#include <memory>
#include <string>

// Шаблон ApplyToMany применяет функцию f (первый аргумент) последовательно к каждому из остальных своих аргументов
template <typename f, typename... Vs>
void ApplyToMany(f& func, Vs&&... vs) {
    (..., func(std::forward <Vs>(vs)));
}

void TestSum() {
    int x;
    auto lambda = [&x](int y) {
        x += y;
    };

    x = 0;
    ApplyToMany(lambda, 1);
    assert(x == 1);

    x = 0;
    ApplyToMany(lambda, 1, 2, 3, 4, 5);
    assert(x == 15);
}

void TestConcatenate() {
    using namespace std::literals;
    std::string s;
    auto lambda = [&s](const auto& t) {
        if (!s.empty()) {
            s += "" "";
        }
        s += t;
    };

    ApplyToMany(lambda, ""cyan""s, ""magenta""s, ""yellow""s, ""black""s);
    assert(s == ""cyan magenta yellow black""s);
}

void TestIncrement() {
    auto increment = [](int& x) {
        ++x;
    };

    int a = 0;
    int b = 3;
    int c = 43;

    ApplyToMany(increment, a, b, c);
    assert(a == 1);
    assert(b == 4);
    assert(c == 44);
}

void TestArgumentForwarding() {
    struct S {
        int call_count = 0;
        int i = 0;
        std::unique_ptr<int> p;
        void operator()(int i) {
            this->i = i;
            ++call_count;
        }
        void operator()(std::unique_ptr<int>&& p) {
            this->p = std::move(p);
            ++call_count;
        }
    };

    S s;

    ApplyToMany(s, 1, std::make_unique<int>(42));
    assert(s.call_count == 2);
    assert(s.i == 1);
    assert(s.p != nullptr && *s.p == 42);
}

void TestArgumentForwardingToConstFunction() {
    struct S {
        mutable int call_count = 0;
        mutable int i = 0;
        mutable std::unique_ptr<int> p;
        void operator()(int i) const {
            this->i = i;
            ++call_count;
        }
        void operator()(std::unique_ptr<int>&& p) const {
            this->p = std::move(p);
            ++call_count;
        }
    };

    const S s;
    ApplyToMany(s, 1, std::make_unique<int>(42));
    assert(s.call_count == 2);
    assert(s.i == 1);
    assert(s.p != nullptr && *s.p == 42);
}

int main() {
    TestSum();
    TestConcatenate();
    TestIncrement();
    TestArgumentForwarding();
    TestArgumentForwardingToConstFunction();
    return 0;
}"
SYZe4fgZ,Урок 10 variadic templates 1/3,kutuzzzov,C++,Wednesday 19th of July 2023 09:41:25 AM CDT,"#include <cassert>
#include <string>
#include <string_view>

/* Напишите вашу реализацию EqualsToOneOf здесь*/
using namespace std;

template <typename Type0, typename... Types>
bool EqualsToOneOf(const Type0& first, const Types&... values) {
    return ((first == values) || ...);
}

int main() {
    assert(EqualsToOneOf(""hello""sv, ""hi""s, ""hello""s));
    assert(!EqualsToOneOf(1, 10, 2, 3, 6));
    assert(!EqualsToOneOf(8));
}"
2cJzi4Q7,Урок 10 variadic templates 3/3,kutuzzzov,C++,Wednesday 19th of July 2023 09:40:05 AM CDT,"/* Разместите здесь код класса Optional */
#include <stdexcept>
#include <utility>

class BadOptionalAccess : public std::exception {
public:
    using exception::exception;

    virtual const char* what() const noexcept override {
        return ""Bad optional access"";
    }
};

template <typename T>
class Optional {
public:
    Optional() = default;
    Optional(const T& value);
    Optional(T&& value);
    Optional(const Optional& other);
    Optional(Optional&& other);

    Optional& operator=(const T& value);
    Optional& operator=(T&& rhs);
    Optional& operator=(const Optional& rhs);
    Optional& operator=(Optional&& rhs);

    ~Optional();

    bool HasValue() const;

    // Операторы * и -> не должны делать никаких проверок на пустоту Optional.
    // Эти проверки остаются на совести программиста
    T& operator*();
    const T& operator*() const;
    T* operator->();
    const T* operator->() const;

    // Метод Value() генерирует исключение BadOptionalAccess, если Optional пуст
    T& Value();
    const T& Value() const;

    void Reset();
    
    template <typename... Vs>
    void Emplace(Vs&&... vs);

private:
    // alignas нужен для правильного выравнивания блока памяти
    alignas(T) char data_[sizeof(T)];
    T* ptr_ = nullptr;
    bool is_initialized_ = false;
};

template <typename T>
Optional<T>::Optional(const T& value)
    : is_initialized_(true) {
    ptr_ = new(&data_[0]) T(value);
}

template <typename T>
Optional<T>::Optional(T&& value)
    : is_initialized_(true) {
    ptr_ = new(&data_[0]) T(std::move(value));
}

template <typename T>
Optional<T>::Optional(const Optional& other)
    : is_initialized_(other.is_initialized_) {
    if (is_initialized_) {
        ptr_ = new(&data_[0]) T(other.Value());
    }
}

template <typename T>
Optional<T>::Optional(Optional&& other)
    : is_initialized_(std::move(other.is_initialized_)) {
    if (is_initialized_) {
        ptr_ = new(&data_[0]) T(std::move(other.Value()));
    }
}

template <typename T>
Optional<T>::~Optional() {
    Reset();
}

template <typename T>
Optional<T>& Optional<T>::operator=(const T& value) {
    if (!is_initialized_) {
        ptr_ = new(&data_[0]) T(value);
        is_initialized_ = true;
    }
    else {
        *ptr_ = value;
    }
    return *this;
}

template <typename T>
Optional<T>& Optional<T>::operator=(T&& rhs) {
    if (!is_initialized_) {
        ptr_ = new(&data_[0]) T(std::move(rhs));
        is_initialized_ = true;
    }
    else {
        *ptr_ = std::move(rhs);
    }
    return *this;
}

template <typename T>
Optional<T>& Optional<T>::operator=(const Optional& rhs) {
    if (!is_initialized_) {
        if (rhs.is_initialized_) {
            ptr_ = new(&data_[0]) T(rhs.Value());
            is_initialized_ = rhs.is_initialized_;
        }
    }
    else {
        if (rhs.is_initialized_) {
            *ptr_ = rhs.Value();
        }
        else {
            Reset();
        }
    }
    return *this;
}

template <typename T>
Optional<T>& Optional<T>::operator=(Optional&& rhs) {
    if (!is_initialized_) {
        if (rhs.is_initialized_) {
            ptr_ = new(&data_[0]) T(std::move(rhs.Value()));
            is_initialized_ = std::move(rhs.is_initialized_);
        }
    }
    else {
        if (rhs.is_initialized_) {
            *ptr_ = std::move(rhs.Value());
        }
        else {
            Reset();
        }
    }
    return *this;
}

template <typename T>
bool Optional<T>::HasValue() const {
    return is_initialized_;
}

template <typename T>
T& Optional<T>::operator*() {
    return *ptr_;
}

template <typename T>
const T& Optional<T>::operator*() const {
    return *ptr_;
}

template <typename T>
T* Optional<T>::operator->() {
    return ptr_;
}

template <typename T>
const T* Optional<T>::operator->() const {
    return ptr_;
}

template <typename T>
T& Optional<T>::Value() {
    if (!is_initialized_) {
        throw BadOptionalAccess();
    }
    return *ptr_;
}

template <typename T>
const T& Optional<T>::Value() const {
    if (!is_initialized_) {
        throw BadOptionalAccess();
    }
    return *ptr_;
}

template <typename T>
void Optional<T>::Reset() {
    if (is_initialized_) {
        ptr_->~T();
        ptr_ = nullptr;
    }
    is_initialized_ = false;
}

template <typename T> template <typename... Vs>
void Optional<T>::Emplace(Vs&&...vs) {
    if (HasValue()) {
        Reset();
    }
    ptr_ = new(&data_[0]) T(std::forward<Vs>(vs)...);
    is_initialized_ = true;  
}"
p3Hj8L4j,GA4 - app - flutter - add_to_favorites,filipr27,Dart,Wednesday 19th of July 2023 09:39:46 AM CDT,"// add_to_favorites
await FirebaseAnalytics.instance.logEvent(
    name: ""add_to_favorites"",
    parameters: {
        ""business_type"": b2c,
        ""visitorStatus"": neprijavljen,
    },
);"
kiG6binw,GA4 - app - flutter - error_tracking,filipr27,Dart,Wednesday 19th of July 2023 09:38:19 AM CDT,"// error_tracking
await FirebaseAnalytics.instance.logEvent(
    name: ""error_tracking"",
    parameters: {
        ""error_type"": error type,
    },
);"
7NKvvtt2,GA4 - app - flutter - file_download,filipr27,Dart,Wednesday 19th of July 2023 09:33:56 AM CDT,"// file_download
await FirebaseAnalytics.instance.logEvent(
    name: ""file_download"",
    parameters: {
        ""business_type"": b2c,
        ""visitorStatus"": neprijavljen,
    },
);"
j9xAnivf,GA4 - app - flutter - sent_message,filipr27,Dart,Wednesday 19th of July 2023 09:30:41 AM CDT,"// sent_message
await FirebaseAnalytics.instance.logEvent(
    name: ""sent_message"",
    parameters: {
        ""business_type"": b2c,
        ""visitorStatus"": prijavljen,
    },
);"
gpDqn6Ra,GA4 - app - flutter - sign_up,filipr27,Dart,Wednesday 19th of July 2023 09:29:31 AM CDT,"// sign_up
await FirebaseAnalytics.instance.logEvent(
    name: ""sign_up"",
    parameters: {
        ""method"": google,  // E.g. google, facebook, email
        ""business_type"": b2c,
    },
);"
G9aQNzW5,GA4 - app - flutter - click_call,filipr27,Dart,Wednesday 19th of July 2023 09:23:08 AM CDT,"// click_call
await FirebaseAnalytics.instance.logEvent(
    name: ""click_call"",
    parameters: {
        ""visitorStatus"": neprijavljen,
    },
);
"
GrU5JQUd,GA4 - app - flutter - submit_job_application,filipr27,Dart,Wednesday 19th of July 2023 09:19:32 AM CDT,"// submit_job_application
await FirebaseAnalytics.instance.logEvent(
    name: ""submit_job_application"",
    parameters: {
        ""visitorStatus"": neprijavljen,
    },
);"
E0kHa2WC,GA4 - app - flutter - click_submit_job_application,filipr27,Dart,Wednesday 19th of July 2023 09:18:35 AM CDT,"// click_submit_job_application
await FirebaseAnalytics.instance.logEvent(
    name: ""click_submit_job_application"",
    parameters: {
        ""visitorStatus"": neprijavljen,
    },
);"
WaBQ63Zd,GA4 - app - flutter - submit_ad_listing,filipr27,Dart,Wednesday 19th of July 2023 09:17:49 AM CDT,"// submit_ad_listing
await FirebaseAnalytics.instance.logEvent(
  name: ""submit_ad_listing"",
  parameters: {
    ""ad_tier"": paid,
    ""value"": 1200,
    ""currency"": RSD,
    ""funds"": enough funds,
    ""ad_type"": premium,
    ""ad_category"": books,
    ""ad_duration_in_days"": 15,
    ""renewal"": no renewal,
    ""business_type"": b2c,
    ""visitorStatus"": prijavljen,
  },
);"
PgctW8dV,method store() pada PostController.php,rezamalik15,PHP,Wednesday 19th of July 2023 09:06:57 AM CDT,"<?php

use Illuminate\Support\Facades\Validator;

class PostController extends Controller
{
    public function store(Request $request): RedirectResponse
    {
        $rules = [
            'title' => 'required|min:3|max:50',
            'text' => 'required|min:3|max:140',
        ];
        
        $messages = [
            'title.required' => 'Kolom judul harus diisi',
            'title.min' => 'Judul minimal mengandung :min karakter',
            'title.max' => 'Judul maksimal mengandung :max karakter',
            'text.required' => 'Kolom post harus diisi',
            'text.min' => 'Post minimal mengandung :min karakter',
            'text.max' => 'Post maksimal mengandung :max karakter',
        ];

        $validator = Validator::make($request->all(), $rules, $messages);
 
        if ($validator->fails()) {
            return redirect('/post/create')
                ->withErrors($validator)
                ->withInput($request->input());
        }

        $post = new Post;
        $post->title = $request->title;
        $post->text = $request->text;
        $post->save();

        return redirect('/post');
    }
    
}
"
gghNJ1an,post_form.blade.php,rezamalik15,HTML,Wednesday 19th of July 2023 08:46:25 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
    <title>Buat Post</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" crossorigin=""anonymous"">
</head>
<body>

    <div class=""container"">

        <div class=""position-relative"" style=""height: 100vh;"">

            <div class=""position-absolute top-50 start-50 translate-middle w-50 shadow p-3"">

                <form action=""/post"" method=""post"">
                    @csrf
        
                    <div class=""mb-3"">
                        <label for=""title"">Judul</label>
                        <input class=""form-control col"" type=""text"" id=""title"" placeholder=""Judul Post"" name=""title"">
                    </div>
        
                    <div class=""mb-3"">
                        <label for=""text"">Isi Post</label>
                        <textarea class=""form-control col"" rows=""3"" type=""text"" id=""text"" placeholder=""Isi post"" name=""text""></textarea>
                    </div>
                    
                    <div class=""mb-3"">
                        <input class=""btn btn-primary col-12"" type=""submit"" id=""submit"" value=""Simpan"">
                    </div>
                    
                </form>

            </div>

        </div>        

    </div>

    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" crossorigin=""anonymous""></script>   
    
</body>
</html>"
qReKUqw0,post_home.blade.php,rezamalik15,HTML,Wednesday 19th of July 2023 08:42:12 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
    <title>Post</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" crossorigin=""anonymous"">
</head>
<body>

    <div class=""container py-3"">   
                
        @if ($posts->isEmpty())

            <div class=""position-relative"" style=""height: 100vh;"">

                <div class=""position-absolute top-50 start-50 translate-middle w-75 shadow p-3"">

                    <div class=""row"">
                        <h1 class=""text-center text-danger"">Tidak ada data Post!</h1>
                    </div>
                    <div class=""row"">
                        <a class=""btn btn-primary col-4 offset-4"" href=""/post/create"">Buat post baru</a>
                    </div>             
                </div>    
                
            </div>

        @else

            <div class=""col p-3 text-center"">
                <h1>Semua Post</h1>
            </div>

            <div class=""row justify-content-center p-3"">
                <div class=""col-8"">
                    <a class=""btn btn-primary"" href=""/post/create"">Buat post baru</a>
                </div>
            </div>

            @foreach ($posts as $post)

                    <div class=""row justify-content-center mb-3"">
                    <div class=""col-8 shadow rounded-3"">
                        <div class=""p-3"">
                            <h3>{{ $post->title }}</h3>
                            <p>{{ $post->text }}</p>
                            <a class=""btn btn-secondary btn-sm"" href="""">Edit</a>
                        </div>
                    </div>
                </div>

            @endforeach                

        @endif        

    </div>

    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" crossorigin=""anonymous""></script>   
    
</body>
</html>"
8WS2dXhu,Timeless Symphony Programming Language,Lukas_Studio_TV,C#,Wednesday 19th of July 2023 08:34:17 AM CDT,"//Get help: https://upedie.online/Wiki/timeless_symphony.html

flush ( combination , clowder ) ::timeless
<~.orbital -> symphony[""___S_e____SAe__S_x_E_-_A--____--SA-x_S--xs-s-s-s-A_-_"" .manip( /a:b,c*:d/ ) ]
v_s_Vd__VYVAIDD__SAw
#use of new of3
SCENE {
  CUBE(((((::S:D""""""""S""""D""D""""""""""""""::())))))))
  counladm.()
}
make serbre 0::::
  exec -as :/ /\\ .qget
_:::;

main -flagger {
  print (flush combination clowder, timeless orital symphony)
  #mexp a get source 0, *.main[-]
  clog (a)
}



dism ..w::ed=
;    ::  0
;    ::  3
_.de.new ::[0,0,0 ...(bx3)]


wisem:
  add 0
  jmp 129
  e¶1¶print "" ...""¶0¶pressenter &
mloc:
  0x0 [0]
  0x1 [0]
gatesm:
  0 29 5 729 73 1 93 -w [0 . 1 . 0 1] //5 * 2
outprint 129[+]
t - -- <~clogger
help
as . -a .:: outprint r- -t <~129, *.--till 0

if (a !== 10){
  console.burst
}else{
  timeless___.orbital(symphony)
  as . -a-__: 0
  gridf:
    *. sytem_: *, ptr_select(*, *)
    inf.0
}

grab[*, 300, *] //explode the sun
-as
as 0 * ** 2: 1?0:1
#grab PRIORITY = 999
#expose comp
<~{{comp.ignore *}}
exit"
mVCQxsvM,Untitled,MagoBen,Python,Wednesday 19th of July 2023 08:10:30 AM CDT,"import requests
import json

url = ""http://localhost:8080/v1/writing/2/sentence""

payload = json.dumps({
  ""sentences"": [
    {
      ""che"": ""Чурт санна лаьтта со"",
      ""ru"": ""ٍКак памятник стою я""
    },
    {
      ""che"": ""Карахь 2 белл йолуш"",
      ""ru"": ""С двумя лопатами""
    }
  ]
})
headers = {
  'X-Libri-No-Csrf': '1',
  'Content-Type': 'application/json'
}

response = requests.request(""POST"", url, headers=headers, data=payload)

print(response.text)
"
eVn31F7w,# groupby.py,here2share,Python,Wednesday 19th of July 2023 08:06:34 AM CDT,"# groupby.py

from itertools import groupby

def look_and_say(iterations, sequence='1'):
	arr = [sequence]
	def get_sequence(arr,iterations,sequence):
		if iterations == 0:
			return arr
		else:
			current = ''.join(str(len(list(group))) + key for key,group in groupby(sequence))
			arr.append(current)
			get_sequence(arr,iterations-1,current)
		return arr

	final_sequence = get_sequence(arr,iterations,sequence)
	return '\n'.join(final_sequence)
	
print (look_and_say(15))"
U99Gmgx9,hentai urls,zx630c,JSON,Wednesday 19th of July 2023 08:00:28 AM CDT,"{
	""512"": ""https://rb.gy/f1q3z"",
	""34958803945"": ""google.com"",
	""201"": ""https://rb.gy/j0ryw"",
	""198"": ""https://rb.gy/onzmp""
}"
