id,title,username,language,date,content
AKRLcTJt,Untitled,vatman,Python,Monday 4th of December 2023 12:01:56 PM CDT,"# Задаем параметры
L = 0.5
L1 = 0.2
L2 = 0.4
C1 = 5
C2 = 5
m1=(L+L1)*C1
m2=(L+L2)*C2
b=L*np.sqrt(C1*C2)
# Вычисляем частоты
w1 = np.sqrt(m1/abs(b*b-m1*m2))
w2 = np.sqrt(m2/abs(b*b-m1*m2))
a = np.sqrt(b*b)/abs(b*b-m1*m2)
print(m1)
print(m2)
print(b)
print(w1)
print(w2)
print(a)"
Qs5eSmFh,Untitled,vatman,Python,Monday 4th of December 2023 12:01:30 PM CDT,"import numpy as np
import matplotlib.pyplot as plt



# Создаем массив времени
t = np.linspace(0, 10, 10000)

# Вычисляем колебания
#oscillation1 = np.sin(w1 * t)+np.cos(w1 * t)
#oscillation2 = np.sin(w2 * t)+np.cos(w2 * t)
oscillation12=np.sin(w1 * t)+np.cos(w1 * t)+np.sin(w2 * t)+np.cos(w2 * t)
# Строим графики
plt.figure(figsize=(12, 6))
#plt.plot(t, oscillation1, label='w1')
#plt.plot(t, oscillation2, label='w2')
plt.plot(t, oscillation12)
plt.legend()
plt.xlabel('Time')

plt.title('колебания')
plt.show()
"
m5eep5Py,Object list,archosaur,Lua,Monday 4th of December 2023 11:59:31 AM CDT,"{
    [""Device""]            = 1,
    [""Redstone""]          = 2,
    [""File_system""]       = 3,
    [""Kinetic_capacity""]  = 4,
    [""Kinetic_speed""]     = 5,
    [""Kinetic_direction""] = 6,
    [""Kinetic_stress""]    = 7,
    [""Volume""]            = 8,
    [""Inventory_chest""]   = 9,
    [""Time""]              = 10,
    [""Protocol""]          = 11,
    [""GPS_x""]             = 12,
    [""GPS_y""]             = 13,
    [""GPS_z""]             = 14
}"
Yz860R0X,1071. Greatest Common Divisor of Strings,brenoitalo,Kotlin,Monday 4th of December 2023 11:58:51 AM CDT,"fun gcdOfStrings(str1: String, str2: String): String {
    return when {
        str2.length > str1.length -> gcdOfStrings(str2, str1)
        str2 == str1 -> str1
        str1.startsWith(str2) -> gcdOfStrings(str1.substring(str2.length), str2)
        else -> """"
    }
}"
9YzyEcDF,Resource list,archosaur,Lua,Monday 4th of December 2023 11:56:17 AM CDT,"{
    [""Set_Output_level""]        = 1,
    [""Get_Output_level""]        = 2,
    [""Set_SW_version""]          = 3,
    [""Get_SW_version""]          = 4,
    [""Set_sleep""]               = 5,
    [""Get_sleep""]               = 6,
    [""Set_delete""]              = 7,
    [""Set_reboot""]              = 9,
    [""Set_shutdown""]            = 11,
    [""Set_max_value""]           = 13,
    [""Get_max_value""]           = 14,
    [""Set_min_value""]           = 15,
    [""Get_min_value""]           = 16,
    [""Set_value""]               = 17,
    [""Get_value""]               = 18,
    [""Set_percentage_value""]    = 19,
    [""Get_percentage_value""]    = 20,
    [""Set_Toggle_output_level""] = 21,
    [""Get_Toggle_output_level""] = 22,
    [""Set_Item_name""]           = 23,
    [""Get_Item_name""]           = 24,
    [""Set_Stack_count""]         = 25,
    [""Get_Stack_count""]         = 26,
    [""Set_Stack_max_count""]     = 27,
    [""Get_Stack_max_count""]     = 28,
    [""Set_Size""]                = 29,
    [""Get_Size""]                = 30,
    [""Set_Season""]              = 31,
    [""Get_Season""]              = 32,
    [""Set_Season_day""]          = 33,
    [""Get_Season_day""]          = 34,
    [""Set_data_string""]         = 35,
    [""Get_data_string""]         = 36,
    [""Set_Filled_ratio""]        = 37,
    [""Get_Filled_ratio""]        = 38,
    [""Set_UUID""]                = 39,
    [""Get_UUID""]                = 40,
    [""Set_Label""]               = 41,
    [""Get_Label""]               = 42,
    [""Set_Type""]                = 43,
    [""Get_Type""]                = 44,
    [""Set_Block_type""]          = 45,
    [""Get_Block_type""]          = 46
}"
MDT0Fe5n,Untitled,Vladislav8653,C++,Monday 4th of December 2023 11:50:11 AM CDT,"#include <iostream>
#include <cmath>

using namespace std;
int main () {
    int number1; // первое число в тройке - то есть 1 в последовательности [1, 2, 3]
    int number2; // второе число в тройке - то есть 2 в последовательности [1, 2, 3]
    int number3; // третье число в тройке - то есть 3 в последовательности [1, 2, 3]
    int threeCounter = 0;
    int quantity = 0;
    double max, average;
    srand(time(nullptr));
    do {
        number3 = rand() % 50;
        if (number3 != 0) {
            cout << number3 << endl;
            if (quantity % 3 == 0) {
                number1 = number3;
            }
            if (quantity % 3 == 1) {
                number2 = number3;
            }
            if (quantity >= 3) {
                max = number1;
                if (number2 > max) {
                    max = number2;
                }
                if (number3 > max) {
                    max = number3;
                }
                average = (number1 + number2 + number3 - max) / 2;
                if (sqrt(max) > average) {
                    cout << ""pair: "" << number1 << "", "" << number2 << "", "" << number3 << endl;
                    threeCounter++;
                }
            }
            quantity++;
        }
    } while (number3 != 0);
    cout << ""All: "" << threeCounter;
    return 0;
}"
Sq7TC585,Untitled,Tkap1,C++,Monday 4th of December 2023 11:43:47 AM CDT,"func e_ui_interaction ui_button(const char* text, s_v2 in_pos, s_ui_optional optional = zero)
{
	assert(text);

	s_v2 size = ui_get_size(optional);
	s_font* font = ui_get_font(optional);
	float z = ui_get_z(optional);
	float font_size = ui_get_font_size(optional);

	s_v2 pos = in_pos;
	if(optional.centered)
	{
		pos -= size / 2;
	}

	s_ui_id id = zero;
	char text_without_id[512] = zero;
	id.id = get_id(text, text_without_id);
	id.layer = ui_get_layer_level(optional);

	s_v4 base_color;
	s_v4 hover_color;
	s_v4 pressed_color;
	s_v4 click_color;
	ui_get_colors(&base_color, &hover_color, &pressed_color, &click_color, optional);

	s_ui_data* data = ui_get_or_create_data(id.id, {.size = size, .color = base_color});
	data->present = true;

	s_v4 target_color = base_color;
	s_v2 target_size = size;

	ui_handle_interaction(id, pos, data->size, false, optional);

	e_ui_interaction result = e_ui_interaction_none;

	data->cooldown_timer -= render_delta;

	b8 in_state_transition = game->state0.next || game->transient.state1.next;

	// @Hack(tkap, 29/10/2022): GIGA HACK ON TOP OF HACKS. We need this because when we are in a state
	// transition, and we click the button, we will make it be ""pressed"", which means it will not be ""hovered"",
	// which means it is not drawn as big, which makes the button not look nice.
	if(
		ui->hovered_last_frame.id == id.id ||
		(in_state_transition && ui->pressed_last_frame.id == id.id)
	)
	{
		target_color = hover_color;
		target_size = size * 1.1f;
		data->hover_time = at_most(1.0f, data->hover_time + render_delta);
		result = e_ui_interaction_hovered;
	}

	else
	{
		data->hover_time = at_least(0.0f, data->hover_time - render_delta * 3.5f);
	}

	if(ui->pressed_last_frame.id == id.id)
	{
		if(!in_state_transition)
		{
			target_color = pressed_color;
			target_size = size * 0.95f;
			result = e_ui_interaction_pressed;
		}
	}

	else if(ui->active_last_frame.id == id.id)
	{
		if(data->cooldown_timer <= 0 && !in_state_transition)
		{
			data->color = click_color;
			result = e_ui_interaction_active;
			data->cooldown_timer = optional.cooldown;

			if(!(optional.flags & e_ui_no_sound))
			{
				play_sound(e_sound_ui_interact);
			}
		}
	}

	data->size = lerp_clamp(data->size, target_size, render_delta * 10);
	data->color = lerp_clamp(data->color, target_color, render_delta * 10);

	pos -= (data->size - size) * 0.5f;

	float fitting_font_size = get_fitting_font_size(text_without_id, font, font_size, size.x * 0.9f);

	// @Note(tkap, 14/10/2022): This makes big strings not look very good. Stuttery.
	// Not sure if it is worth it.
	// if(fitting_font_size == font_size)
	{
		fitting_font_size = fitting_font_size * (data->size.x / size.x);
	}

	draw_button(pos, z, data->size, clamp_color(data->color));

	{
		draw_text_with_shadow_sorted(
			text_without_id,
			font,
			get_center(pos, data->size),
			z + 1,
			c_base_text_color,
			fitting_font_size,
			true
		);
	}

	ui_handle_tooltip(optional.tooltip, data->hover_time, platform_shared->mouse, optional);

	if(optional.flags & e_ui_right_arrow)
	{
		s_v2 arrow_size = v2(64, 64);
		s_v2 arrow_pos = in_pos;
		arrow_pos.x -= arrow_size.x * 0.75f;
		arrow_pos.y += size.y / 2;

		arrow_pos.x -= get_tutorial_arrow_motion();

		draw_texture_ui(
			e_texture_atlas,
			arrow_pos,
			z,
			arrow_size,
			WHITE,
			v2i(0, 0),
			{.rotation = -c_pi * 0.5f, .vertex_offset = zero}
		);
	}


	return result;
}"
5ELqYKfY,BikeRental,XLoL2007,Python,Monday 4th of December 2023 11:40:40 AM CDT,"bikes = [""Bike 1"", ""Bike 2"", ""Bike 3"", ""Bike 4"", ""Bike 5""]
offers = [""Hourly - $5"", ""Daily - $10"", ""Weekly - $50""]
rented_bike = """"
rented_bikes = []
cost = 0


def show_offers():
    offer = """"
    current = 0
    for i in offers:
        current += 1
        offer += f""{current} - {i}\n""
    return offer


def show_available():
    available = """"
    current = 0
    for i in bikes:
        current += 1
        available += f""{current} - {i}\n""
    return available


def rent():
    global rented_bike
    global cost
    global rented_bikes
    cost_multiplier = 0

    if rented_bike != """" or len(rented_bikes) != 0:
        print(""You can't rent more than one bike at once."")
        return

    # The loop is used to check if the user's input is correct, and if not, to rerun the code until it is
    while True:
        offer = int(input(
            ""What offer would you like? Available offers:\n"" + show_offers() + ""Input (the number of the offer):""))
        print(""The "" + offers[offer - 1] + "" offer was selected"")
        if offer == 1:
            cost_multiplier = 5
        elif offer == 2:
            cost_multiplier = 10
        elif offer == 3:
            cost_multiplier = 50
        else:
            print(""This is not a valid offer, please retry."")
            continue
        break
    family = input(""Would you like the Family Rental? (y/n): "")
    if family == ""y"":
        print(""You have chosen the Family Rental, you can choose 3 to 5 bikes to rent at once, on which you will get a 20% discount on the total cost. Here is a list of the available bikes:\n"" + show_available())
        while True:
            bike = int(input(""Please choose the number of a bike from the list, or 0 to exit: ""))
            if bike == 0 or len(bikes) == 0:
                if len(rented_bikes) < 3:
                    print(""You need to choose at least 3 bikes to use the Family Rental"")
                    continue
                cost = cost_multiplier * len(rented_bikes) * 0.8
                return
            elif bike > len(bikes) or bike < 0:
                print(""This is not a valid bike number."")
                continue
            name = bikes[bike - 1]
            rented_bikes.append(name)
            bikes.remove(name)
            print(f""{name} has been added to the rented bikes.\nAvailable bikes:\n{show_available()}"")
    elif family == ""n"":
        while True:
            bike = int(input(""Which bike would you like to rent?\n"" + show_available() + ""\nInput (the number of the bike):""))
            if not 0 < bike <= len(bikes):
                print(""This bike is not available."")
                continue
            rented_bike = bikes[bike - 1]
            bikes.remove(rented_bike)
            cost = cost_multiplier
            print(
                ""You have successfully rented \"""" + rented_bike + ""\"". Please do not forget to return it once your time has expired."")
            return


def return_bike():
    global rented_bike
    global cost
    global rented_bikes
    if rented_bike == """" and len(rented_bikes) == 0:
        print(""You don't have any bike to return."")
    elif rented_bike != """":
        bikes.append(rented_bike)
        rented_bike = """"
    elif len(rented_bikes) != 0:
        for i in rented_bikes:
            bikes.append(i)
        rented_bikes = []


print(""Hello! "")

loop = True

while loop:
    command = int(input(""""""What would you like to do?
1- Show Available Bikes         2- Rent A Bike         3- Return Your Bike(s)         4- Exit
Input (the number of the command):""""""))

    if command == 1:
        print(""Here are the currently available bikes: \n"" + show_available())
    elif command == 2:
        rent()
    elif command == 3:
        if cost != 0:
            return_bike()
            print(f""You have successfully returned your bike(s), here is your bill: ${cost}."")
            cost = 0
        else:
            print(""You don't have any bikes to return."")
    else:
        if cost != 0:
            print(""You have to return any rented bike before exiting."")
            continue
        print(""Thank you for your visit, have a nice day!"")
        loop = False
"
2PV9zH0D,TYPE,Seredenko-V,C++,Monday 4th of December 2023 11:32:04 AM CDT,"template<typename T>
struct LoggerType {
    LoggerType(T val) : val_(val) {}
    LoggerType(const LoggerType&) = default;
    LoggerType() = default;

    LoggerType&
        operator+=(const LoggerType& rhs) {
        ++count_plus_;
        val_ += rhs.val_;
        return *this;
    }

    LoggerType
        operator+(const LoggerType& rhs) const {
        LoggerType temp(*this);
        temp += rhs;
        return temp;
    }

    LoggerType&
        operator*=(const LoggerType& rhs) {
        ++count_multiply_;
        val_ *= rhs.val_;
        return *this;
    }

    LoggerType
        operator*(const LoggerType& rhs) const {
        LoggerType temp(*this);
        temp *= rhs;
        return temp;
    }

    bool
        operator<(const LoggerType& rhs) const {
        ++count_compare_;
        return val_ < rhs.val_;
    }

    bool
        operator<=(const LoggerType& rhs) const {
        return !(rhs < *this);
    }

    bool
        operator>(const LoggerType& rhs) const {
        return rhs < *this;
    }

    bool
        operator>=(const LoggerType& rhs) const {
        return !(*this < rhs);
    }

    friend bool operator==(const LoggerType& lhs, const T& rhs) {
        return lhs.val_ == rhs;
    }
    friend bool operator==(const LoggerType& lhs, const LoggerType& rhs) {
        return lhs.val_ == rhs.val_;
    }
    friend ostream& operator<<(ostream& out, const LoggerType& rhs) {
        out << rhs.val_;
        return out;
    }


    static int count_plus_;
    static int count_multiply_;
    static int count_compare_;

    static void Reset() {
        count_plus_ = 0;
        count_multiply_ = 0;
        count_compare_ = 0;
    }
private:
    T val_ = T(0);
};

template<typename T>
int LoggerType<T>::count_plus_ = 0;
template<typename T>
int LoggerType<T>::count_multiply_ = 0;
template<typename T>
int LoggerType<T>::count_compare_ = 0;

using TYPE = LoggerType<int>;"
gXv22pS8,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 4th of December 2023 11:22:40 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-911788"
sGvzXNMN,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 4th of December 2023 11:22:30 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
charlesliuliu85:6mTK9v on 212.224.93.130
You can connect via SSH.
Regards"
qkVm42Su,ejercicio01,fgallego,C++,Monday 4th of December 2023 11:20:47 AM CDT,"#include <cstdint>
#include <utility>
#include <iostream>
#include <vector>
#include <cassert>
#include <initializer_list>
#include <algorithm>
#include <format>

struct Matrix{
   explicit Matrix(std::size_t const rows, std::size_t const cols)
      : rows_{rows} , cols_{cols}
   {}
   explicit Matrix(
         std::initializer_list<double> valores, 
         std::size_t const cols) 
      : cols_{cols}
   {
      assert( cols_ > 0);
      assert( valores.size() % cols_ == 0 );
      rows_ = valores.size() / cols_;
      data_.reserve( valores.size() );
      //std::copy(valores.begin(), valores.end()
      //         , std::back_inserter(data_));
      std::ranges::copy(valores, std::back_inserter(data_));
   }
   double& operator[](std::size_t const row
                  , std::size_t const col) {
      assert(row < rows_ && col < cols_);

      return data_[ row*cols_ + col ];
   }
   double operator[](std::size_t const row
                  , std::size_t const col) const {
      assert(row < rows_ && col < cols_);

      return data_[ row*cols_ + col ];
   }
   Matrix operator*(Matrix const& R) const {
      assert( cols_ == R.rows_ );

      Matrix const& L = *this;
      Matrix Res{rows_, R.cols()};
      for(auto r{0uz}; r < rows_; r+=1) {
         for(auto c{0uz}; c < R.cols(); c+=1) {
            for(auto k{0uz}; k < cols_; k+=1) {
               Res[r,c] += L[r,k] * R[k,c];
            }
         }
      }

      return Res;
   }
   Matrix& apply(double (*func)(double)) {
      std::ranges::transform(data_, data_.begin(), func);
      return *this;
   }
   static double sign(double x) {
      if (x > 0.0) return 1.0;
      return -1.0;
   }

   constexpr std::size_t cols() const noexcept { return cols_; }
   constexpr std::size_t rows() const noexcept { return rows_; }
private:
   std::size_t rows_{};
   std::size_t cols_{};
   std::vector<double> data_ = std::vector<double>(rows_ * cols_);
};

Matrix train(Matrix const& X, Matrix const& Y, std::size_t const maxiter) {
   Matrix W{X.cols(), 1};

   for(auto i{0uz}; i < maxiter; i+=1) {
      Matrix H    = (X * W).apply( Matrix::sign );
      Matrix Hcmp = H != Y;
      std::size_t err = Hcmp.sumcol(0);
   }

   // Repetir hasta maxiter iteraciones
      // Multiplicar (p.s.) todas las entradas por w (vector de pesos)
      // Comparar errores y contabilizarlos (h(X) == y)
         // Si 0 errores he terminado. Devuelvo w
         // Si hay errores, eliWo uno aleatorio y corrijo
            // w' <- w + yx
            // Si w' es mejor que wbest -> wbest = w'

   // Devolver wbest
   return X;
}

std::pair<Matrix, Matrix> readFromCSV() {
   Matrix X({
      #include ""X.csv""
   }, 7);
   Matrix Y({
      #include ""y_up.csv""
   }, 1);

   return {X, Y};
}

int main() {
   auto [X, Y] = readFromCSV();
   std::cout << std::format(""X[5,3] = {}\n"", X[5,3]);
   train(X, Y, 10000);

   return 0;
}"
Vx7MpArA,docker-pma,tghgamb,YAML,Monday 4th of December 2023 11:14:40 AM CDT,"version: ""3""

services:
  db:
    image: mariadb:10.11
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_TCP_PORT: 3306

  phpmyadmin:
    image: phpmyadmin:5.2.1
    restart: always
    ports:
      - 8081:80
    environment:
      - PMA_ARBITRARY=1

"
w0daNwxf,new deep_translator,nicuf,Python,Monday 4th of December 2023 11:13:25 AM CDT,"import os
import re
import textwrap
from deep_translator import GoogleTranslator

folder_path = r""c:\\download\\myprotein\\extracted\\""
translator = GoogleTranslator(source='auto', target='ro')
tags_to_translate = [
    r'(<title>)(.*?)(<\/title>)',
    r'(<meta name=""description"" content="")(.*?)(""\/>)',
    r'(<div class=""sc-jKDlA-D hSgfYV sc-glENfF hIVUeB"">)(.*?)(<\/div>)',
    r'(<p>)(.*?)(<\/p>)',
    r'(<h4 class=""sc-jMKfon fhunKk"">)(.*?)(<\/h4>)',
    r'(<h2"">)(.*?)(<\/h2>)'
    # ... alte tag-uri, structurate similar
]

def translate_in_parts(text, translator, max_length=4800):
    parts = textwrap.wrap(text, max_length, break_long_words=False)
    translated = ''
    for part in parts:
        if part:
            translated += translator.translate(part)
    return translated

for filename in os.listdir(folder_path):
    if filename.endswith(("".html"", "".htm"")):
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

        for tag in tags_to_translate:
            matches = re.finditer(tag, html_content, re.DOTALL)

            for match in matches:
                full_match = match.group(0)
                tag_start = match.group(1)
                tag_content = match.group(2)
                tag_end = match.group(3)

                # Traducem conținutul tag-ului în fragmente
                translated_content = translate_in_parts(tag_content, translator)
                translated_tag = f""{tag_start}{translated_content}{tag_end}""

                html_content = html_content.replace(full_match, translated_tag)

        new_filename = f""{filename.split('.')[0]}_ro.html""
        translated_folder_path = os.path.join(folder_path, 'translated')
        if not os.path.exists(translated_folder_path):
            os.mkdir(translated_folder_path)

        with open(os.path.join(translated_folder_path, new_filename), 'w', encoding='utf-8') as file:
            file.write(html_content)
"
pK2BJxue,Untitled,plarmi,Python,Monday 4th of December 2023 11:05:54 AM CDT,"count = 0

for number in range(100, 151):
    digit1 = number % 10
    digit2 = (number // 10) % 10
    digit3 = (number // 100) % 10
    digit4 = (number // 1000) % 10

    if digit1 != digit2 and digit1 != digit3 and digit1 != digit4 and digit2 != digit3 and digit2 != digit4 and digit3 != digit4:
        count += 1


print(""Количество чисел с разными цифрами:"", count)
print(list(range(100, 151)))
"
PQFuSYiU,Untitled,vostrikov,Python,Monday 4th of December 2023 11:02:16 AM CDT,"sales_data = {
    ""Kuwait"": [
        {""name"": ""Headphones"", ""quantity"": 42},
        {""name"": ""Tablet"", ""quantity"": 16},
        {""name"": ""Laptop"", ""quantity"": 42},
    ],
    ""French Polynesia"": [
        {""name"": ""Desktop PC"", ""quantity"": 40},
        {""name"": ""Headphones"", ""quantity"": 20},
        {""name"": ""Printer"", ""quantity"": 11},
    ],
    ""Lesotho"": [
        {""name"": ""Desktop PC"", ""quantity"": 2},
        {""name"": ""Laptop"", ""quantity"": 10},
        {""name"": ""Router"", ""quantity"": 17},
    ],
    ""Brazil"": [
        {""name"": ""Desktop PC"", ""quantity"": 33},
        {""name"": ""Laptop"", ""quantity"": 13},
        {""name"": ""Smartphone"", ""quantity"": 30},
    ],
    ""Australia"": [
        {""name"": ""Laptop"", ""quantity"": 37},
        {""name"": ""Smartwatch"", ""quantity"": 30},
        {""name"": ""Router"", ""quantity"": 47},
    ],
}

print()
quantity_sum = 0

for country in sales_data:
    print(country)
    for data in sales_data[country]:
        quantity_sum += data['quantity']

    print(quantity_sum)

print()"
n51JcDPQ,alltheforge10_client_tree,CodeSalat,Lua,Monday 4th of December 2023 10:58:25 AM CDT,"rednet.open(""top"")
rednet.host(""energy"", ""tree"")
local cube = peripheral.wrap(""right"")

while true do
    local sender, message, distance = rednet.receive(""energy"")
    if message == ""energyUpdate"" then
        rednet.send(sender, cube.getEnergyFilledPercentage()*10, ""energy"")
    end
end"
EagCiBnQ,so67599153,snakecharmerb,Python,Monday 4th of December 2023 10:46:02 AM CDT,"import json

import psycopg2

json_data = {'key': 'value'}

DDL1 = """"""DROP TABLE IF EXISTS t67599153""""""
DDL2 = """"""CREATE TABLE t67599153 (json_field JSONB)""""""
query = """"""INSERT INTO  t67599153 (json_field) VALUES(%s)""""""

with psycopg2.connect(dbname='test') as conn, conn.cursor() as cur:
    cur.execute(DDL1)
    cur.execute(DDL2)
    cur.execute(query, (json.dumps(json_data),))


with psycopg2.connect(dbname='test') as conn, conn.cursor() as cur:
    cur.execute(""""""SELECT json_field from t67599153"""""")
    res = cur.fetchone()
    print(res)
    print(type(res[0]))
"
nbaybrQk,ejercicio_00,fgallego,C++,Monday 4th of December 2023 10:41:22 AM CDT,"#include <cstdint>
#include <utility>
#include <iostream>
#include <vector>
#include <cassert>
#include <initializer_list>
#include <algorithm>
#include <format>

struct Matrix{
   explicit Matrix(std::size_t const rows, std::size_t const cols)
      : rows_{rows} , cols_{cols}
   {}
   explicit Matrix(
         std::initializer_list<double> valores, 
         std::size_t const cols) 
      : cols_{cols}
   {
      assert( cols_ > 0);
      assert( valores.size() % cols_ == 0 );
      rows_ = valores.size() / cols_;
      data_.reserve( valores.size() );
      //std::copy(valores.begin(), valores.end()
      //         , std::back_inserter(data_));
      std::ranges::copy(valores, std::back_inserter(data_));
   }
   double& operator[](std::size_t const row
                  , std::size_t const col) {
      assert(row < rows_ && col < cols_);

      return data_[ row*cols_ + col ];
   }
   double operator[](std::size_t const row
                  , std::size_t const col) const {
      assert(row < rows_ && col < cols_);

      return data_[ row*cols_ + col ];
   }
   Matrix operator*(Matrix const& R) const {
      assert( cols_ == R.rows_ );

      Matrix const& L = *this;
      Matrix Res{rows_, R.cols()};
      for(auto r{0uz}; r < rows_; r+=1) {
         for(auto c{0uz}; c < R.cols(); c+=1) {
            for(auto k{0uz}; k < cols_; k+=1) {
               Res[r,c] += L[r,k] * R[k,c];
            }
         }
      }

      return Res;
   }
   Matrix& sign() {
      for(double& e: data_) {
         if ( e >= 0.0 ) e = 1.0; else e = -1.0;
      }
      return *this;
   }

   constexpr std::size_t cols() const noexcept { return cols_; }
   constexpr std::size_t rows() const noexcept { return rows_; }
private:
   std::size_t rows_{};
   std::size_t cols_{};
   std::vector<double> data_ = std::vector<double>(rows_ * cols_);
};

Matrix train(Matrix const& X, Matrix const& Y, std::size_t const maxiter) {
   Matrix W{X.cols(), 1};

   for(auto i{0uz}; i < maxiter; i+=1) {
      Matrix H = (X * W).sign();
   }

   // Repetir hasta maxiter iteraciones
      // Multiplicar (p.s.) todas las entradas por w (vector de pesos)
      // Comparar errores y contabilizarlos (h(X) == y)
         // Si 0 errores he terminado. Devuelvo w
         // Si hay errores, eliWo uno aleatorio y corrijo
            // w' <- w + yx
            // Si w' es mejor que wbest -> wbest = w'

   // Devolver wbest
   return X;
}

std::pair<Matrix, Matrix> readFromCSV() {
   Matrix X({
      #include ""X.csv""
   }, 7);
   Matrix Y({
      #include ""y_up.csv""
   }, 1);

   return {X, Y};
}

int main() {
   auto [X, Y] = readFromCSV();
   std::cout << std::format(""X[5,3] = {}\n"", X[5,3]);
   train(X, Y, 10000);

   return 0;
}"
Re1Gp6j9,Tuition Assessment commision,SenpaiZero,Java,Monday 4th of December 2023 10:37:43 AM CDT,"import java.util.Scanner;

public class tuitionClass {
	public static void main(String[] args) 
	{
		String userInput;
		int totalAmmountDue, payment;
		Scanner scanner = new Scanner(System.in);
		tuitionClass fee = new tuitionClass();

		System.out.print(""Enter Total Ammount Due: "");
		totalAmmountDue = scanner.nextInt();
		scanner.nextLine();
		
		while(true)
		{
			System.out.println(""Choose:\n [1] Scholar\n [2] Non Scholar\n [ANY] Exit"");
			System.out.print(""Enter: "");
			userInput = scanner.nextLine();
			if(userInput.equalsIgnoreCase(""1""))
			{
				fee.scholar(totalAmmountDue);
			}
			else if(userInput.equalsIgnoreCase(""2""))
			{
				fee.nonScholar(totalAmmountDue);
			}
			else {
				System.exit(0);
			}
		}
	}
	
	public void nonScholar(int amountDue) {
	    String userInput;
	    Scanner scanner = new Scanner(System.in);
	    tuitionClass fee = new tuitionClass();

	    while (true) {
	        System.out.println(""Choose:\n [1] Cash\n [2] Installment\n [ANY] Exit"");
	        System.out.print(""Enter: "");
	        userInput = scanner.nextLine();

	        if (userInput.equalsIgnoreCase(""1"")) { // 10% discount for cash payment
	            double discountedAmount = amountDue * 0.1;
	            int totalAmount = amountDue - (int) discountedAmount;
	            System.out.println(""Total amount due after 10% discount for cash payment: "" + totalAmount);
	            System.out.println();
	        } else if (userInput.equalsIgnoreCase(""2"")) { // 10% interest for installment
	            double interestAmount = amountDue * 0.1;
	            int totalAmount = amountDue + (int) interestAmount;
	            System.out.println(""Total amount due after 10% interest for installment: "" + totalAmount);
	            System.out.println();
	        } else {
	            break;
	        }
	    }
	}

	public void scholar(int amountDue) {
	    String userInput;
	    Scanner scanner = new Scanner(System.in);
	    tuitionClass fee = new tuitionClass();

	    while (true) {
	        System.out.println(""Choose:\n [1] Full Scholar\n [2] Half Scholar\n [ANY] Exit"");
	        System.out.print(""Enter: "");
	        userInput = scanner.nextLine();

	        if (userInput.equalsIgnoreCase(""1"")) { // 90% discount for full scholar
	            double discountedAmount = amountDue * 0.9;
	            int totalAmount = (int) discountedAmount;
	            System.out.println(""Total amount due after 90% discount for full scholar: "" + totalAmount);
	            System.out.println();
	        } else if (userInput.equalsIgnoreCase(""2"")) { // 50% discount for half scholar
	            double discountedAmount = amountDue * 0.5;
	            int totalAmount = (int) discountedAmount;
	            System.out.println(""Total amount due after 50% discount for half scholar: "" + totalAmount);
	            System.out.println();
	        } else {
	            break;
	        }
	    }
	}

}
"
dt0HPC3q,BARD - deep_translator,nicuf,Python,Monday 4th of December 2023 10:37:26 AM CDT,"import os
import re
from deep_translator import GoogleTranslator

# Load environment variables from .env file
dotenv.load_dotenv()

# Initialize the Deep Translator Translator
translator = GoogleTranslator(source='auto')

# Initialize a counter for the translated files
translated_files_count = 0

# Folder path containing the HTML files
folder_path = os.getenv('HTML_FOLDER_PATH')

# Language to translate to
target_language = 'ro'

# HTML tags to translate
tags_to_translate = [
    r'(<title>)(.*?)(<\/title>)',
    r'(<meta name=""description"" content="")(.*?)(""\/>)',
    r'(<div class=""sc-jKDlA-D hSgfYV sc-glENfF hIVUeB"">)(.*?)(<\/div>)',
    r'(<p>)(.*?)(<\/p>)',
    r'(<h4 class=""sc-jMKfon fhunKk"">)(.*?)(<\/h4>)',
    r'(<h2"">)(.*?)(<\/h2>)'
    # ... alte tag-uri, structurate similar
]

# Iterate over all HTML files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith(("".html"", "".htm"")):
        # Read the HTML content from the file
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

        # Initialize a variable to store the translated content
        new_html_content = ''

        # Loop through each tag to translate
        for tag in tags_to_translate:
            matches = re.finditer(tag, html_content, re.DOTALL)

            for match in matches:
                # Extract the tag start, content, and end
                tag_start = match.group(1)
                tag_content = match.group(2)
                tag_end = match.group(3)

                # Detect the source language
                source_language = translator.detect(tag_content)

                # Translate the content
                translated_content = translator.translate(tag_content, dest=target_language)

                # Build the translated tag
                translated_tag = f""{tag_start}{translated_content}{tag_end}""

                # Replace the original tag with the translated tag
                html_content = html_content.replace(match.group(0), translated_tag)

        # Write the translated HTML content back to the file
        new_filename = f""{filename.split('.')[0]}_ro.html""
        translated_folder_path = os.path.join(folder_path, 'translated')

        if not os.path.exists(translated_folder_path):
            os.mkdir(translated_folder_path)

        with open(os.path.join(translated_folder_path, new_filename), 'w', encoding='utf-8') as file:
            file.write(html_content)

        # Increment the counter and print the filename and number
        translated_files_count += 1
        print(f""Translated file: {filename}"")
        print(f""New filename: {new_filename}"")
        print(f""Translated file #{translated_files_count}: {new_filename}"")
"
1B9CU80A,deep_translator_3,nicuf,Python,Monday 4th of December 2023 10:34:53 AM CDT,"import os
import re
from deep_translator import GoogleTranslator

folder_path = r""c:\\download\\myprotein\\extracted\\""
tags_to_translate = [
    r'(<title>)(.*?)(<\/title>)',
    r'(<meta name=""description"" content="")(.*?)(""\/>)',
    r'(<div class=""sc-jKDlA-D hSgfYV sc-glENfF hIVUeB"">)(.*?)(<\/div>)',
    r'(<p>)(.*?)(<\/p>)',
    r'(<h4 class=""sc-jMKfon fhunKk"">)(.*?)(<\/h4>)',
    r'(<h2"">)(.*?)(<\/h2>)'
    # ... alte tag-uri, structurate similar
]
translator = GoogleTranslator(source='auto', target='ro')

translated_files_count = 0

for filename in os.listdir(folder_path):
    if filename.endswith(("".html"", "".htm"")):
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

        for tag in tags_to_translate:
            matches = re.finditer(tag, html_content, re.DOTALL)

            for match in matches:
                full_match = match.group(0)
                tag_start = match.group(1)
                tag_content = match.group(2)
                tag_end = match.group(3)

                translated_content = translator.translate(tag_content)
                translated_tag = f""{tag_start}{translated_content}{tag_end}""

                html_content = html_content.replace(full_match, translated_tag)

        new_filename = f""{filename.split('.')[0]}_ro.html""
        translated_folder_path = os.path.join(folder_path, 'translated')
        if not os.path.exists(translated_folder_path):
            os.mkdir(translated_folder_path)

        with open(os.path.join(translated_folder_path, new_filename), 'w', encoding='utf-8') as file:
            file.write(html_content)

        translated_files_count += 1
        print(f""Se traduce: {filename}"")
        print(f""Fisierul tradus: {new_filename}"")
        print(f""Fișierul tradus #{translated_files_count}: {new_filename}"")
"
L61zSqLV,AvatarStorageClient_test,talamaska,Dart,Monday 4th of December 2023 10:12:30 AM CDT,"class MockSupabaseClient extends Mock implements SupabaseClient {}
class MockSupabaseStorage extends Mock implements SupabaseStorageClient {}
class MockSupabaseStorageReference extends Mock implements StorageFileApi {}
class MockGiftStorageClient extends Mock implements StorageFileApi {}
class MockGoTrueClient extends Mock implements GoTrueClient {}
class MockSupabaseQueryBuilder extends Mock implements SupabaseQueryBuilder {}
class MockPostgrestFilterBuilder<T> extends Mockimplements PostgrestFilterBuilder<T> {}
class FakeGoTrue extends Fake implements GoTrueClient {
  @override
  final currentUser = User(
    id: 'id',
    appMetadata: {},
    userMetadata: {},
    aud: 'aud',
    createdAt: DateTime.now().toIso8601String(),
  );
}
class FakeSupabase extends Fake implements SupabaseClient {
  @override
  GoTrueClient get auth => FakeGoTrue();
}

void main() {
  group('GiftStorageClient', () {
    late GiftStorageClient giftStorageClient;
    late MockSupabaseClient mockSupabaseClient;
    late MockSupabaseStorage mockSupabaseStorage;
    late MockSupabaseQueryBuilder mockSupabaseQueryBuilder;
    late GoTrueClient fakeSupabaseAuth;
    late MockSupabaseStorageReference mockSupabaseStorageReference;
    late MockPostgrestFilterBuilder<dynamic> mockPostgrestFilterBuilder;
    setUp(() {
      mockSupabaseClient = MockSupabaseClient();
      mockSupabaseStorage = MockSupabaseStorage();
      fakeSupabaseAuth = FakeGoTrue();
      mockSupabaseStorageReference = MockSupabaseStorageReference();
      mockSupabaseQueryBuilder = MockSupabaseQueryBuilder();
      mockPostgrestFilterBuilder = MockPostgrestFilterBuilder<dynamic>();
      giftStorageClient = GiftStorageClient(supabaseClient: mockSupabaseClient);

      when(() => mockSupabaseClient.from('gifts'))
          .thenAnswer((_) => mockSupabaseQueryBuilder);
      when(() => mockSupabaseStorage.from('gifts'))
          .thenReturn(mockSupabaseStorageReference);
      when(() => mockSupabaseClient.storage).thenReturn(mockSupabaseStorage);
      when(() => mockSupabaseClient.auth).thenReturn(fakeSupabaseAuth);
    });

    test('upload should call Supabase storage update and Supabase update',() async {
      final mockFile = File('file.jpg');

      when(() => mockSupabaseStorageReference.update('giftId', mockFile, fileOptions: const FileOptions(upsert: true)))
      .thenAnswer((_) async {
        return Future.value('some/path/file.jpg');
      });

      when<PostgrestFilterBuilder<dynamic>>(() => mockSupabaseQueryBuilder.update(any())).thenAnswer((_) {
        return mockPostgrestFilterBuilder;
      });
      await giftStorageClient.upload('giftId', mockFile);
      verify(() => mockSupabaseStorageReference.update( 'giftId',mockFile,fileOptions: const FileOptions(upsert: true))).called(1);

      verify(() => mockSupabaseQueryBuilder.update({'has_image': true}).match({'id': 'giftId'})).called(1);
    });
  });
}"
jDVHp2Tj,deel_translator 2,nicuf,Python,Monday 4th of December 2023 10:09:42 AM CDT,"import os
import re
import dotenv
from deep_translator import GoogleTranslator

# Load environment variables from .env file
dotenv.load_dotenv()

# Initialize the Deep Translator Translator
deep_translator = GoogleTranslator(source='en', target='ro')

# Initialize a counter for the translated files
translated_files_count = 0

# Folder path containing the HTML files
folder_path = os.getenv('HTML_FOLDER_PATH')

# HTML tags to translate
tags_to_translate = [
    r'<title>(.*?)</title>',
    r'<meta name=""description"" content=""(.*?)""/>',
    r'<div class=""sc-jKDlA-D hSgfYV sc-glENfF hIVUeB"">(.*?)</div>',
    r'<p>(.*?)</p>',
    r'<h4 class=""sc-jMKfon fhunKk"">(.*?)</h4>',
    r'<h2"">(.*?)</h2>'
]

# Iterate over all HTML files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith(("".html"", "".htm"")):
        # Read the HTML content from the file
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

        # Initialize a variable to store the translated content
        new_html_content = ''

        # Loop through each tag to translate
        for tag in tags_to_translate:
            matches = re.findall(tag, html_content, re.DOTALL)

            for match in matches:
                # Translate the content within the tag using Deep Translator
                translated_content = deep_translator.translate(match)

                # Replace the original content with the translated content
                html_content = html_content.replace(match, translated_content.text)

                # Store only the translated content corresponding to the specified tags
                new_html_content += translated_content.text

        # Write the translated HTML content back to the file
        new_filename = f""{filename.split('.')[0]}_ro.html""
        translated_folder_path = os.path.join(folder_path, 'translated')

        if not os.path.exists(translated_folder_path):
            os.mkdir(translated_folder_path)

        with open(os.path.join(translated_folder_path, new_filename), 'w', encoding='utf-8') as file:
            file.write(new_html_content)

        # Increment the counter and print the filename and number
        translated_files_count += 1
        print(f""Translated file: {filename}"")
        print(f""New filename: {new_filename}"")
        print(f""Translated file #{translated_files_count}: {new_filename}"")
"
gMpzCevu,Shitty PS99 Script,IWannaDieAsWell,Lua,Monday 4th of December 2023 10:04:58 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Somerandomidiot/Lua/main/PS99_Protected.txt""))()"
dK4Sv4xf,deep_translator (translate webpages with Python),nicuf,Python,Monday 4th of December 2023 10:02:58 AM CDT,"import os
import re
from deep_translator import GoogleTranslator

folder_path = r""c:\\download\\myprotein\\extracted\\""
tags_to_translate = [
    r'<title>(.*?)<\/title>',
    r'<meta name=""description"" content=""(.*?)""/>',
    # ... alte tag-uri
]
translator = GoogleTranslator(source='auto', target='ro')

translated_files_count = 0

for filename in os.listdir(folder_path):
    if filename.endswith(("".html"", "".htm"")):
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

        new_html_content = ''

        for tag in tags_to_translate:
            matches = re.findall(tag, html_content, re.DOTALL)

            for match in matches:
                translated_content = translator.translate(match)
                html_content = html_content.replace(match, translated_content)
                new_html_content += translated_content

        new_filename = f""{filename.split('.')[0]}_ro.html""
        translated_folder_path = os.path.join(folder_path, 'translated')
        if not os.path.exists(translated_folder_path):
            os.mkdir(translated_folder_path)

        with open(os.path.join(translated_folder_path, new_filename), 'w', encoding='utf-8') as file:
            file.write(new_html_content)

        translated_files_count += 1
        print(f""Se traduce: {filename}"")
        print(f""Fisierul tradus: {new_filename}"")
        print(f""Fișierul tradus #{translated_files_count}: {new_filename}"")
"
zSanfRzm,dfbftnft,gadungw71,PHP,Monday 4th of December 2023 09:57:35 AM CDT,"https://groups.google.com/g/comp.editors/c/8TTab9Mw6vU
https://groups.google.com/g/mozilla.dev.platform/c/5oqgUMCtWGI
https://groups.google.com/g/comp.editors/c/twy59aBG-Fg
https://groups.google.com/g/comp.protocols.time.ntp/c/PmK_4C17oLs
https://groups.google.com/g/comp.text.tex/c/oDdrjGmRDpY
https://groups.google.com/g/comp.editors/c/mU7HI0BidT8
https://groups.google.com/g/comp.text.tex/c/ZXoVN5tdcUU
https://groups.google.com/g/comp.arch.fpga/c/3YYMAmQED4w
https://bio.link/acrossthefurioussea
https://bio.link/filmacrossthefurious
https://bio.link/acrossfilmhd4k
https://bio.link/trendingtopichd4k
https://bio.link/filmtrendingtopictw
https://bio.link/trendingtopic2023
https://bio.link/shinchanthemovie4k
https://bio.link/crayonshinchan2023
https://bio.link/hasbinha
https://hackmd.io/@rerewilli6/S1NcMOorT
https://rentry.co/qnkos
https://pastelink.net/xqkwvm7g
https://snippet.host/pockgi
https://glot.io/snippets/gr7cdvupn1
https://etextpad.com/kmtmzntfux
https://justpaste.me/ABB6
https://homment.com/gQ0De8fSkFwjw4sMWeCB"
kCcebmfW,AOC 2023 Day 4,nairby,Rust,Monday 4th of December 2023 09:55:48 AM CDT,"use std::env;
use std::io::{self, prelude::*, BufReader};
use std::fs::File;
use std::collections::{HashSet,HashMap};

extern crate regex;
use regex::Regex;

struct Card {
    id: usize,
    winning: HashSet<usize>,
    my_numbers: HashSet<usize>,
}
impl From<&String> for Card {
    fn from(s: &String) -> Self {
        let re = Regex::new(r""Card[\s]+(\d+): ([\d\s]+) \| ([\d\s]+)"").unwrap();
        let matches = re.captures(&s).unwrap();
        Self {
            id:         matches[1].parse().unwrap(),
            winning:    matches[2].split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect(),
            my_numbers: matches[3].split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect(),
        }
    }
}
impl Card {
    pub fn matching_numbers(&self) -> usize {
        self.winning.iter().filter(|n| self.my_numbers.contains(n)).count()
    }
    pub fn score(&self) -> usize {
        let common = self.matching_numbers() as u32;
        if common == 0 { 0 } else { usize::pow(2,common-1) }
    }
}

fn solve(input: &str) -> io::Result<()> {
    let file = File::open(input).expect(""Input file not found."");
    let reader = BufReader::new(file);

    // Input
    let input: Vec<String> = match reader.lines().collect() {
        Err(err) => panic!(""Unknown error reading input: {}"", err),
        Ok(result) => result,
    };
    let cards: Vec<_> = input.iter().map(Card::from).collect();

    // Part 1
    let part1: usize = cards.iter().map(|c| c.score()).sum();
    println!(""Part 1: {part1}""); // 27454

    // Part 2
    let mut my_cards: HashMap<usize,usize> = HashMap::new();
    for card_id in 1..=cards.len() {
        my_cards.insert(card_id,1);
    }
    for card in cards {
        let count = *my_cards.get(&card.id).unwrap();
        for x in 1..=card.matching_numbers() {
            *my_cards.entry(&card.id+x).or_insert(0) += count;
        }
    }
    let part2: usize = my_cards.iter().map(|(_,v)| v).sum();
    println!(""Part 2: {part2}""); // 6857330

    Ok(())
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let filename = &args[1];
    solve(&filename).unwrap();
}
"
Qww6bHuY,Untitled,Dylee,Python,Monday 4th of December 2023 09:25:48 AM CDT,"import datetime
from flask_bcrypt import generate_password_hash, check_password_hash
from flask_jwt_extended import create_access_token
from flask_mongoengine import MongoEngine as mg, QuerySet

mongo_engine = mg()

class Users(mongo_engine.Document):
    username = mongo_engine.StringField(unique=True, min_length=4)
    name = mongo_engine.StringField()
    email = mongo_engine.EmailField(unique=True)
    referrer = mongo_engine.StringField()
    password = mongo_engine.StringField(unique=True, min_length=6, regex=None)
    invite_code = mongo_engine.StringField(unique=True)
    
    def get_balance(self) -> int:
        deposits = Transactions.objects(user=self, txn_type = ""deposit"")
        debits = Transactions.objects(user=self, txn_type = ""debit"")
        
        total_deposits = sum(deposit.amount for deposit in deposits)
        total_debits = sum(debit.amount for debit in debits)
        
        balance = sum((total_deposits, total_debits))
        return balance
    
    def deposit(self, txn_id : int, amount: int):
        _deposit = Transactions(user = self, txn_id = txn_id, amount = amount, txn_type = ""deposit"")
        _deposit.save()
    
    def debit(self, txn_id : int, amount: int):
        _debit = Transactions(user = self, txn_id = txn_id, amount = amount, txn_type = ""debit"")
        _debit.save()
        
    def verify_password(self, password: str):
        return check_password_hash(pw_hash=self.password, password=password)

    verify_password.__doc__ = check_password_hash.__doc__

    def encrypt_password(self):
        self.password = generate_password_hash(password=self.password).decode(""utf-8"")

    encrypt_password.__doc__ = generate_password_hash.__doc__

    def generate_access_token(self, expiry: datetime.timedelta):
        return create_access_token(identity=self.username, expires_delta=expiry)

    def save(self, *args, **kwargs):
        self.encrypt_password()
        super(Users, self).save(*args, **kwargs)
        
class Transactions(mongo_engine.Document):
    txn_id = mongo_engine.StringField()
    user = mongo_engine.ReferenceField('Users')
    datetime = mongo_engine.DateTimeField(required=True, default=datetime.datetime.now)
    amount = mongo_engine.DecimalField(precision = 2, required=True)
    txn_type = mongo_engine.StringField(choices=(""deposit"", ""debit""), required=True)
    
class BlogPosts(mongo_engine.Document):
    title = mongo_engine.StringField(max_length=200, required=True)
    content = mongo_engine.StringField(required=True)
    author = mongo_engine.StringField(max_length=100, required=True)  # Author as a string
    publication_date = mongo_engine.DateTimeField(default=datetime.datetime.now, required=True)

    def __str__(self):
        return self.title
    
class Foods(mongo_engine.Document):
    name = mongo_engine.StringField(max_length=100, required=True)
    description = mongo_engine.StringField(max_length=500, required=True)
    amount = mongo_engine.DecimalField(precision=2, required=True)
    category = mongo_engine.StringField(max_length=50, required=True)  # Add category field
    
    # Define a reference field for the vendor
    vendor = mongo_engine.ReferenceField('Vendors', required=True)

    def __str__(self):
        return self.name
    
    
class Vendors(mongo_engine.Document):
    name = mongo_engine.StringField(max_length=100, required=True)
    address = mongo_engine.StringField(max_length=200, required=True)
    email = mongo_engine.EmailField(max_length=100, required=True)
    contact_number = mongo_engine.StringField(max_length=20, required=True)
    description = mongo_engine.StringField(max_length=500, required=True)

    def __str__(self):
        return self.business_name
    
class Orders(mongo_engine.Document):
    order_id = mongo_engine.StringField(max_length=100, required=True)
    customer = mongo_engine.ReferenceField('Users', required=True)
    order_items = mongo_engine.ListField(mongo_engine.ReferenceField('Food'), required=True)
    total_amount = mongo_engine.DecimalField(precision=2, required=True)
    activity = mongo_engine.ListField()
    # Add other fields like order date, payment information, etc."
EYRvWiAK,snake_v1,Korotkodul,Python,Monday 4th of December 2023 09:06:57 AM CDT,"import pygame

SIZE_BLOCK = []
WHITE = (255, 255, 255)
BLUE = (204, 255, 255)
FRAME_COLOR = (0, 255, 204)
COUNT_BLOCKS = 20

size = [400, 600]
MARGIN = 1
SIZE_BLOCK = 20
screen = pygame.display.set_mode(size)
pygame.display.set_caption('Змейка')

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            print('exit')
            pygame.quit()

    screen.fill(FRAME_COLOR)

    for row in range(COUNT_BLOCKS):
        for column in range(COUNT_BLOCKS):
            if (column + row) % 2 == 0:
                color = BLUE
            else:
                color = WHITE
            pygame.draw.rect(screen, color, [10 + column * SIZE_BLOCK + MARGIN * (column + 1),
                                             20 + row * SIZE_BLOCK + MARGIN * (row + 1), SIZE_BLOCK, SIZE_BLOCK])

    pygame.display.flip()"
2tsL6FqE,Nigerian scammers [4-12-2/2023],bombaires,AIMMS,Monday 4th of December 2023 09:05:49 AM CDT,"<a href=""mailto:punchaiyung@hotmail.com"">punchaiyung@hotmail.com</a>
<a href=""mailto:wgtmxfxltkm@rampampamuns.cholocholoinboxin.info"">wgtmxfxltkm@rampampamuns.cholocholoinboxin.info</a>
<a href=""mailto:punchaiyung@gmail.com"">punchaiyung@gmail.com</a>
href=""mailto:atmtransferoffics002@aol.com"">atmtransferoffics002@aol.com</a>
href=""mailto:cranelex@public.xa.sn.cn"">cranelex@public.xa.sn.cn</a>
href=""mailto:fund_transfer02@yahoo.co.jp"">fund_transfer02@yahoo.co.jp</a>
<a href=""mailto:p.u.n.c.h.aiy.u.ng@gmail.com"">p.u.n.c.h.aiy.u.ng@gmail.com</a>
<a href=""mailto:pun.c.ha.i.y.u.n.g@gmail.com"">pun.c.ha.i.y.u.n.g@gmail.com</a>
<a href=""mailto:pu.nch.a.iy.un.g@gmail.com"">pu.nch.a.iy.un.g@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.iy.un.g@gmail.com"">p.u.n.c.h.a.iy.un.g@gmail.com</a>
<a href=""mailto:p.u.n.c.ha.i.y.un.g@gmail.com"">p.u.n.c.ha.i.y.un.g@gmail.com</a>
<a href=""mailto:p.unc.ha.i.y.u.n.g@gmail.com"">p.unc.ha.i.y.u.n.g@gmail.com</a>
<a href=""mailto:p.un.c.haiy.un.g@gmail.com"">p.un.c.haiy.un.g@gmail.com</a>
<a href=""mailto:p.u.n.cha.i.yun.g@gmail.com"">p.u.n.cha.i.yun.g@gmail.com</a>
<a href=""mailto:pu.nc.haiyun.g@gmail.com"">pu.nc.haiyun.g@gmail.com</a>
<a href=""mailto:pun.chai.y.ung@gmail.com"">pun.chai.y.ung@gmail.com</a>
<a href=""mailto:punc.ha.i.yu.ng@gmail.com"">punc.ha.i.yu.ng@gmail.com</a>
<a href=""mailto:p.un.c.hai.y.un.g@gmail.com"">p.un.c.hai.y.un.g@gmail.com</a>
<a href=""mailto:pu.n.chaiy.un.g@gmail.com"">pu.n.chaiy.un.g@gmail.com</a>
<a href=""mailto:p.u.nc.hai.y.un.g@gmail.com"">p.u.nc.hai.y.un.g@gmail.com</a>
<a href=""mailto:punc.h.aiy.u.ng@gmail.com"">punc.h.aiy.u.ng@gmail.com</a>
<a href=""mailto:p.un.c.hai.yu.ng@gmail.com"">p.un.c.hai.yu.ng@gmail.com</a>
<a href=""mailto:pu.n.chai.yu.ng@gmail.com"">pu.n.chai.yu.ng@gmail.com</a>
<a href=""mailto:pun.ch.aiyu.ng@gmail.com"">pun.ch.aiyu.ng@gmail.com</a>
<a href=""mailto:pun.c.h.aiy.un.g@gmail.com"">pun.c.h.aiy.un.g@gmail.com</a>
<a href=""mailto:p.u.nch.a.iyu.ng@gmail.com"">p.u.nch.a.iyu.ng@gmail.com</a>
<a href=""mailto:punch.ai.yung@gmail.com"">punch.ai.yung@gmail.com</a>
<a href=""mailto:pun.chai.yu.n.g@gmail.com"">pun.chai.yu.n.g@gmail.com</a>
<a href=""mailto:pu.n.ch.ai.y.un.g@gmail.com"">pu.n.ch.ai.y.un.g@gmail.com</a>
<a href=""mailto:p.un.chaiyu.ng@gmail.com"">p.un.chaiyu.ng@gmail.com</a>
<a href=""mailto:pun.c.haiy.un.g@gmail.com"">pun.c.haiy.un.g@gmail.com</a>
<a href=""mailto:p.u.nc.ha.iyun.g@gmail.com"">p.u.nc.ha.iyun.g@gmail.com</a>
<a href=""mailto:pu.n.c.ha.i.yu.ng@gmail.com"">pu.n.c.ha.i.yu.ng@gmail.com</a>
<a href=""mailto:pu.n.chai.y.u.ng@gmail.com"">pu.n.chai.y.u.ng@gmail.com</a>
<a href=""mailto:pu.nch.aiy.u.ng@gmail.com"">pu.nch.aiy.u.ng@gmail.com</a>
<a href=""mailto:punc.ha.iyu.ng@gmail.com"">punc.ha.iyu.ng@gmail.com</a>
<a href=""mailto:punc.h.a.iy.un.g@gmail.com"">punc.h.a.iy.un.g@gmail.com</a>
<a href=""mailto:p.u.nc.haiyung@gmail.com"">p.u.nc.haiyung@gmail.com</a>
<a href=""mailto:punc.h.ai.y.un.g@gmail.com"">punc.h.ai.y.un.g@gmail.com</a>
<a href=""mailto:p.unc.ha.i.y.un.g@gmail.com"">p.unc.ha.i.y.un.g@gmail.com</a>
<a href=""mailto:p.u.n.ch.aiyun.g@gmail.com"">p.u.n.ch.aiyun.g@gmail.com</a>
<a href=""mailto:p.u.n.c.h.aiy.un.g@gmail.com"">p.u.n.c.h.aiy.un.g@gmail.com</a>
<a href=""mailto:pu.nc.hai.yu.n.g@gmail.com"">pu.nc.hai.yu.n.g@gmail.com</a>
<a href=""mailto:p.un.c.ha.i.yu.n.g@gmail.com"">p.un.c.ha.i.yu.n.g@gmail.com</a>
<a href=""mailto:p.u.nc.ha.i.y.ung@gmail.com"">p.u.nc.ha.i.y.ung@gmail.com</a>
<a href=""mailto:p.u.ncha.i.yu.ng@gmail.com"">p.u.ncha.i.yu.ng@gmail.com</a>
<a href=""mailto:punc.ha.i.yu.n.g@gmail.com"">punc.ha.i.yu.n.g@gmail.com</a>
<a href=""mailto:puncha.i.yung@gmail.com"">puncha.i.yung@gmail.com</a>
<a href=""mailto:pun.c.haiyung@gmail.com"">pun.c.haiyung@gmail.com</a>
<a href=""mailto:pu.nch.aiyun.g@gmail.com"">pu.nch.aiyun.g@gmail.com</a>
<a href=""mailto:pu.n.cha.i.y.u.n.g@gmail.com"">pu.n.cha.i.y.u.n.g@gmail.com</a>
<a href=""mailto:pun.c.h.aiy.ung@gmail.com"">pun.c.h.aiy.ung@gmail.com</a>
<a href=""mailto:p.u.nc.h.a.i.y.u.n.g@gmail.com"">p.u.nc.h.a.i.y.u.n.g@gmail.com</a>
<a href=""mailto:p.un.ch.a.iyung@gmail.com"">p.un.ch.a.iyung@gmail.com</a>
<a href=""mailto:p.uncha.i.yun.g@gmail.com"">p.uncha.i.yun.g@gmail.com</a>
<a href=""mailto:p.u.nchaiy.un.g@gmail.com"">p.u.nchaiy.un.g@gmail.com</a>
<a href=""mailto:p.unc.hai.y.u.ng@gmail.com"">p.unc.hai.y.u.ng@gmail.com</a>
<a href=""mailto:pu.n.c.ha.iy.ung@gmail.com"">pu.n.c.ha.iy.ung@gmail.com</a>
<a href=""mailto:p.u.nch.aiy.u.n.g@gmail.com"">p.u.nch.aiy.u.n.g@gmail.com</a>
<a href=""mailto:pu.n.c.h.ai.yun.g@gmail.com"">pu.n.c.h.ai.yun.g@gmail.com</a>
<a href=""mailto:p.u.nc.hai.yu.ng@gmail.com"">p.u.nc.hai.yu.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.h.aiyu.ng@gmail.com"">p.u.n.c.h.aiyu.ng@gmail.com</a>
<a href=""mailto:p.u.ncha.iy.u.ng@gmail.com"">p.u.ncha.iy.u.ng@gmail.com</a>
<a href=""mailto:puncha.iy.u.ng@gmail.com"">puncha.iy.u.ng@gmail.com</a>
<a href=""mailto:punc.ha.iy.ung@gmail.com"">punc.ha.iy.ung@gmail.com</a>
<a href=""mailto:p.unc.h.ai.yu.ng@gmail.com"">p.unc.h.ai.yu.ng@gmail.com</a>
<a href=""mailto:p.u.n.chaiyu.n.g@gmail.com"">p.u.n.chaiyu.n.g@gmail.com</a>
<a href=""mailto:pu.nch.a.i.yu.n.g@gmail.com"">pu.nch.a.i.yu.n.g@gmail.com</a>
<a href=""mailto:p.unc.ha.iyu.ng@gmail.com"">p.unc.ha.iyu.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.iy.ung@gmail.com"">p.u.n.c.h.a.iy.ung@gmail.com</a>
<a href=""mailto:p.u.nch.aiy.u.ng@gmail.com"">p.u.nch.aiy.u.ng@gmail.com</a>
<a href=""mailto:p.unc.h.ai.y.un.g@gmail.com"">p.unc.h.ai.y.un.g@gmail.com</a>
<a href=""mailto:p.u.ncha.iyu.ng@gmail.com"">p.u.ncha.iyu.ng@gmail.com</a>
<a href=""mailto:p.un.c.h.a.iy.ung@gmail.com"">p.un.c.h.a.iy.ung@gmail.com</a>
<a href=""mailto:punc.h.ai.y.u.ng@gmail.com"">punc.h.ai.y.u.ng@gmail.com</a>
<a href=""mailto:p.u.nc.ha.i.y.un.g@gmail.com"">p.u.nc.ha.i.y.un.g@gmail.com</a>
<a href=""mailto:p.un.c.h.a.iyu.ng@gmail.com"">p.un.c.h.a.iyu.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.iyu.n.g@gmail.com"">p.u.n.c.h.a.iyu.n.g@gmail.com</a>
<a href=""mailto:pu.n.cha.iyu.n.g@gmail.com"">pu.n.cha.iyu.n.g@gmail.com</a>
<a href=""mailto:punch.aiyung@gmail.com"">punch.aiyung@gmail.com</a>
<a href=""mailto:pun.ch.a.i.y.u.ng@gmail.com"">pun.ch.a.i.y.u.ng@gmail.com</a>
<a href=""mailto:p.unch.ai.y.ung@gmail.com"">p.unch.ai.y.ung@gmail.com</a>
<a href=""mailto:p.u.n.c.h.ai.yun.g@gmail.com"">p.u.n.c.h.ai.yun.g@gmail.com</a>
<a href=""mailto:pu.nc.h.ai.y.ung@gmail.com"">pu.nc.h.ai.y.ung@gmail.com</a>
<a href=""mailto:pun.ch.a.i.y.un.g@gmail.com"">pun.ch.a.i.y.un.g@gmail.com</a>
<a href=""mailto:p.un.cha.iy.u.ng@gmail.com"">p.un.cha.iy.u.ng@gmail.com</a>
<a href=""mailto:p.u.nchaiyun.g@gmail.com"">p.u.nchaiyun.g@gmail.com</a>
<a href=""mailto:pu.n.c.haiy.ung@gmail.com"">pu.n.c.haiy.ung@gmail.com</a>
<a href=""mailto:pun.c.h.a.iyu.ng@gmail.com"">pun.c.h.a.iyu.ng@gmail.com</a>
<a href=""mailto:p.unc.h.a.iy.un.g@gmail.com"">p.unc.h.a.iy.un.g@gmail.com</a>
<a href=""mailto:p.unchaiy.u.ng@gmail.com"">p.unchaiy.u.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.hai.y.u.n.g@gmail.com"">p.u.n.c.hai.y.u.n.g@gmail.com</a>
<a href=""mailto:p.u.n.ch.aiy.un.g@gmail.com"">p.u.n.ch.aiy.un.g@gmail.com</a>
<a href=""mailto:p.u.n.c.ha.iyun.g@gmail.com"">p.u.n.c.ha.iyun.g@gmail.com</a>
<a href=""mailto:pun.ch.aiy.u.ng@gmail.com"">pun.ch.aiy.u.ng@gmail.com</a>
<a href=""mailto:p.unc.hai.y.un.g@gmail.com"">p.unc.hai.y.un.g@gmail.com</a>
<a href=""mailto:p.u.nch.aiyu.ng@gmail.com"">p.u.nch.aiyu.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.i.y.ung@gmail.com"">p.u.n.c.h.a.i.y.ung@gmail.com</a>
<a href=""mailto:pun.ch.ai.yu.ng@gmail.com"">pun.ch.ai.yu.ng@gmail.com</a>
<a href=""mailto:pun.ch.ai.y.ung@gmail.com"">pun.ch.ai.y.ung@gmail.com</a>
<a href=""mailto:pun.c.ha.i.yun.g@gmail.com"">pun.c.ha.i.yun.g@gmail.com</a>
<a href=""mailto:p.u.n.ch.ai.yu.ng@gmail.com"">p.u.n.ch.ai.yu.ng@gmail.com</a>
<a href=""mailto:p.unch.a.i.y.ung@gmail.com"">p.unch.a.i.y.ung@gmail.com</a>
<a href=""mailto:pu.nch.ai.y.u.n.g@gmail.com"">pu.nch.ai.y.u.n.g@gmail.com</a>
<a href=""mailto:punc.h.aiy.un.g@gmail.com"">punc.h.aiy.un.g@gmail.com</a>
<a href=""mailto:p.un.ch.a.iyu.n.g@gmail.com"">p.un.ch.a.iyu.n.g@gmail.com</a>
<a href=""mailto:pun.c.hai.yun.g@gmail.com"">pun.c.hai.yun.g@gmail.com</a>
<a href=""mailto:p.u.n.c.hai.yu.ng@gmail.com"">p.u.n.c.hai.yu.ng@gmail.com</a>
<a href=""mailto:p.unc.h.aiy.un.g@gmail.com"">p.unc.h.aiy.un.g@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.iy.u.ng@gmail.com"">p.u.n.c.h.a.iy.u.ng@gmail.com</a>
<a href=""mailto:p.u.ncha.i.y.u.n.g@gmail.com"">p.u.ncha.i.y.u.n.g@gmail.com</a>
<a href=""mailto:p.u.n.cha.i.y.ung@gmail.com"">p.u.n.cha.i.y.ung@gmail.com</a>
<a href=""mailto:pu.n.ch.a.i.yung@gmail.com"">pu.n.ch.a.i.yung@gmail.com</a>
<a href=""mailto:p.u.nchaiyung@gmail.com"">p.u.nchaiyung@gmail.com</a>
<a href=""mailto:pun.c.haiy.u.ng@gmail.com"">pun.c.haiy.u.ng@gmail.com</a>
<a href=""mailto:p.unc.h.a.i.y.ung@gmail.com"">p.unc.h.a.i.y.ung@gmail.com</a>
<a href=""mailto:p.u.nc.h.a.iyu.n.g@gmail.com"">p.u.nc.h.a.iyu.n.g@gmail.com</a>
<a href=""mailto:p.u.n.chai.y.u.n.g@gmail.com"">p.u.n.chai.y.u.n.g@gmail.com</a>
<a href=""mailto:p.u.nc.ha.i.yung@gmail.com"">p.u.nc.ha.i.yung@gmail.com</a>
<a href=""mailto:pu.nc.h.aiyu.ng@gmail.com"">pu.nc.h.aiyu.ng@gmail.com</a>
<a href=""mailto:p.un.cha.iy.un.g@gmail.com"">p.un.cha.iy.un.g@gmail.com</a>
<a href=""mailto:pu.n.c.ha.i.y.ung@gmail.com"">pu.n.c.ha.i.y.ung@gmail.com</a>
<a href=""mailto:pun.cha.i.yu.n.g@gmail.com"">pun.cha.i.yu.n.g@gmail.com</a>
<a href=""mailto:puncha.i.y.ung@gmail.com"">puncha.i.y.ung@gmail.com</a>
<a href=""mailto:p.u.nc.h.ai.yu.ng@gmail.com"">p.u.nc.h.ai.yu.ng@gmail.com</a>
<a href=""mailto:pu.n.chai.y.un.g@gmail.com"">pu.n.chai.y.un.g@gmail.com</a>
<a href=""mailto:p.unc.ha.iy.u.ng@gmail.com"">p.unc.ha.iy.u.ng@gmail.com</a>
<a href=""mailto:punchaiyu.ng@gmail.com"">punchaiyu.ng@gmail.com</a>
<a href=""mailto:p.unch.aiyu.ng@gmail.com"">p.unch.aiyu.ng@gmail.com</a>
<a href=""mailto:p.u.nc.h.a.iyung@gmail.com"">p.u.nc.h.a.iyung@gmail.com</a>
<a href=""mailto:pu.n.c.h.a.iyung@gmail.com"">pu.n.c.h.a.iyung@gmail.com</a>
<a href=""mailto:pu.n.ch.a.iyun.g@gmail.com"">pu.n.ch.a.iyun.g@gmail.com</a>
<a href=""mailto:p.un.ch.ai.y.un.g@gmail.com"">p.un.ch.ai.y.un.g@gmail.com</a>
<a href=""mailto:pu.n.cha.i.yu.n.g@gmail.com"">pu.n.cha.i.yu.n.g@gmail.com</a>
<a href=""mailto:pu.ncha.i.yun.g@gmail.com"">pu.ncha.i.yun.g@gmail.com</a>
<a href=""mailto:punch.ai.y.un.g@gmail.com"">punch.ai.y.un.g@gmail.com</a>
<a href=""mailto:p.unc.h.a.i.yung@gmail.com"">p.unc.h.a.i.yung@gmail.com</a>
<a href=""mailto:p.un.c.ha.i.y.ung@gmail.com"">p.un.c.ha.i.y.ung@gmail.com</a>
<a href=""mailto:pun.c.ha.iy.u.ng@gmail.com"">pun.c.ha.iy.u.ng@gmail.com</a>
<a href=""mailto:p.u.n.c.ha.iy.u.n.g@gmail.com"">p.u.n.c.ha.iy.u.n.g@gmail.com</a>
<a href=""mailto:pu.nc.ha.i.y.un.g@gmail.com"">pu.nc.ha.i.y.un.g@gmail.com</a>
<a href=""mailto:pun.chaiy.u.n.g@gmail.com"">pun.chaiy.u.n.g@gmail.com</a>
<a href=""mailto:pun.chai.y.un.g@gmail.com"">pun.chai.y.un.g@gmail.com</a>
<a href=""mailto:pun.ch.ai.y.un.g@gmail.com"">pun.ch.ai.y.un.g@gmail.com</a>
<a href=""mailto:p.un.ch.ai.yun.g@gmail.com"">p.un.ch.ai.yun.g@gmail.com</a>
<a href=""mailto:punc.ha.i.y.u.n.g@gmail.com"">punc.ha.i.y.u.n.g@gmail.com</a>
<a href=""mailto:p.u.nch.ai.yun.g@gmail.com"">p.u.nch.ai.yun.g@gmail.com</a>
<a href=""mailto:p.un.c.ha.iy.u.n.g@gmail.com"">p.un.c.ha.iy.u.n.g@gmail.com</a>
<a href=""mailto:p.unc.h.aiyu.n.g@gmail.com"">p.unc.h.aiyu.n.g@gmail.com</a>
<a href=""mailto:p.unc.ha.iyu.n.g@gmail.com"">p.unc.ha.iyu.n.g@gmail.com</a>
<a href=""mailto:p.un.ch.aiyun.g@gmail.com"">p.un.ch.aiyun.g@gmail.com</a>
<a href=""mailto:p.unch.a.iy.u.n.g@gmail.com"">p.unch.a.iy.u.n.g@gmail.com</a>
<a href=""mailto:puncha.iy.un.g@gmail.com"">puncha.iy.un.g@gmail.com</a>
<a href=""mailto:punc.ha.iy.un.g@gmail.com"">punc.ha.iy.un.g@gmail.com</a>
<a href=""mailto:p.un.c.h.aiyun.g@gmail.com"">p.un.c.h.aiyun.g@gmail.com</a>
<a href=""mailto:punc.h.a.i.y.u.n.g@gmail.com"">punc.h.a.i.y.u.n.g@gmail.com</a>
<a href=""mailto:pu.nch.a.iy.u.ng@gmail.com"">pu.nch.a.iy.u.ng@gmail.com</a>
<a href=""mailto:pu.n.ch.a.i.yun.g@gmail.com"">pu.n.ch.a.i.yun.g@gmail.com</a>
<a href=""mailto:pu.n.c.h.ai.yu.n.g@gmail.com"">pu.n.c.h.ai.yu.n.g@gmail.com</a>
<a href=""mailto:pun.ch.aiy.ung@gmail.com"">pun.ch.aiy.ung@gmail.com</a>
<a href=""mailto:p.un.c.ha.i.y.un.g@gmail.com"">p.un.c.ha.i.y.un.g@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.i.y.un.g@gmail.com"">p.u.n.c.h.a.i.y.un.g@gmail.com</a>
<a href=""mailto:p.u.n.ch.a.i.y.u.n.g@gmail.com"">p.u.n.ch.a.i.y.u.n.g@gmail.com</a>
<a href=""mailto:punch.a.iy.u.ng@gmail.com"">punch.a.iy.u.ng@gmail.com</a>
<a href=""mailto:pu.nc.ha.iyu.n.g@gmail.com"">pu.nc.ha.iyu.n.g@gmail.com</a>
<a href=""mailto:pu.nch.aiyung@gmail.com"">pu.nch.aiyung@gmail.com</a>
<a href=""mailto:p.un.c.h.aiyu.ng@gmail.com"">p.un.c.h.aiyu.ng@gmail.com</a>
<a href=""mailto:pu.ncha.iyung@gmail.com"">pu.ncha.iyung@gmail.com</a>
<a href=""mailto:pu.n.c.hai.yung@gmail.com"">pu.n.c.hai.yung@gmail.com</a>
<a href=""mailto:p.u.nc.ha.i.yun.g@gmail.com"">p.u.nc.ha.i.yun.g@gmail.com</a>
<a href=""mailto:p.unc.ha.iy.ung@gmail.com"">p.unc.ha.iy.ung@gmail.com</a>
<a href=""mailto:p.u.nc.h.a.i.yu.n.g@gmail.com"">p.u.nc.h.a.i.yu.n.g@gmail.com</a>
<a href=""mailto:pu.n.c.h.aiy.u.ng@gmail.com"">pu.n.c.h.aiy.u.ng@gmail.com</a>
<a href=""mailto:pu.n.ch.aiyun.g@gmail.com"">pu.n.ch.aiyun.g@gmail.com</a>
<a href=""mailto:p.u.n.chaiy.ung@gmail.com"">p.u.n.chaiy.ung@gmail.com</a>
<a href=""mailto:p.unch.ai.yu.ng@gmail.com"">p.unch.ai.yu.ng@gmail.com</a>
<a href=""mailto:pu.nchaiy.ung@gmail.com"">pu.nchaiy.ung@gmail.com</a>
<a href=""mailto:p.u.n.c.h.a.i.yu.ng@gmail.com"">p.u.n.c.h.a.i.yu.ng@gmail.com</a>
<a href=""mailto:p.u.ncha.iyung@gmail.com"">p.u.ncha.iyung@gmail.com</a>
<a href=""mailto:p.un.c.h.aiy.ung@gmail.com"">p.un.c.h.aiy.ung@gmail.com</a>
<a href=""mailto:p.unc.hai.y.ung@gmail.com"">p.unc.hai.y.ung@gmail.com</a>
<a href=""mailto:pu.nc.hai.y.un.g@gmail.com"">pu.nc.hai.y.un.g@gmail.com</a>
<a href=""mailto:p.un.ch.aiy.ung@gmail.com"">p.un.ch.aiy.ung@gmail.com</a>
<a href=""mailto:pun.c.hai.y.un.g@gmail.com"">pun.c.hai.y.un.g@gmail.com</a>
<a href=""mailto:pu.n.c.h.a.i.y.u.n.g@gmail.com"">pu.n.c.h.a.i.y.u.n.g@gmail.com</a>
<a href=""mailto:p.u.nc.h.a.i.yun.g@gmail.com"">p.u.nc.h.a.i.yun.g@gmail.com</a>
<a href=""mailto:p.unc.h.a.iy.u.ng@gmail.com"">p.unc.h.a.iy.u.ng@gmail.com</a>
<a href=""mailto:pu.n.cha.i.yun.g@gmail.com"">pu.n.cha.i.yun.g@gmail.com</a>
<a href=""mailto:pu.ncha.iy.ung@gmail.com"">pu.ncha.iy.ung@gmail.com</a>
<a href=""mailto:pu.nc.h.ai.yung@gmail.com"">pu.nc.h.ai.yung@gmail.com</a>
<a href=""mailto:p.u.n.ch.a.iyung@gmail.com"">p.u.n.ch.a.iyung@gmail.com</a>
<a href=""mailto:p.u.nchaiyu.n.g@gmail.com"">p.u.nchaiyu.n.g@gmail.com</a>
<a href=""mailto:p.u.n.c.haiyu.n.g@gmail.com"">p.u.n.c.haiyu.n.g@gmail.com</a>
<a href=""mailto:pun.chaiyu.ng@gmail.com"">pun.chaiyu.ng@gmail.com</a>
<a href=""mailto:p.u.n.cha.iy.ung@gmail.com"">p.u.n.cha.iy.ung@gmail.com</a>
<a href=""mailto:pu.nch.aiy.u.n.g@gmail.com"">pu.nch.aiy.u.n.g@gmail.com</a>
<a href=""mailto:pun.c.ha.iy.u.n.g@gmail.com"">pun.c.ha.iy.u.n.g@gmail.com</a>
<a href=""mailto:p.u.nc.ha.i.yu.ng@gmail.com"">p.u.nc.ha.i.yu.ng@gmail.com</a>
<a href=""mailto:pun.c.ha.iyung@gmail.com"">pun.c.ha.iyung@gmail.com</a>
<a href=""mailto:p.un.chai.y.un.g@gmail.com"">p.un.chai.y.un.g@gmail.com</a>
<a href=""mailto:p.u.nchaiy.ung@gmail.com"">p.u.nchaiy.ung@gmail.com</a>
<a href=""mailto:p.unc.haiy.u.n.g@gmail.com"">p.unc.haiy.u.n.g@gmail.com</a>
<a href=""mailto:p.u.n.cha.iyung@gmail.com"">p.u.n.cha.iyung@gmail.com</a>
<a href=""mailto:p.u.nch.aiyung@gmail.com"">p.u.nch.aiyung@gmail.com</a>
<a href=""mailto:pun.c.h.a.iy.ung@gmail.com"">pun.c.h.a.iy.ung@gmail.com</a>
<a href=""mailto:pu.nch.ai.yu.n.g@gmail.com"">pu.nch.ai.yu.n.g@gmail.com</a>
<a href=""mailto:charityhomes39@gmail.com"">charityhomes39@gmail.com</a>
<a href=""mailto:charity.homes.39@gmail.com"">charity.homes.39@gmail.com</a>
<a href=""mailto:char.ity.ho.m.e.s39@gmail.com"">char.ity.ho.m.e.s39@gmail.com</a>
<a href=""mailto:ch.arit.yho.m.es3.9@gmail.com"">ch.arit.yho.m.es3.9@gmail.com</a>
<a href=""mailto:c.ha.ri.t.yh.o.mes.3.9@gmail.com"">c.ha.ri.t.yh.o.mes.3.9@gmail.com</a>
<a href=""mailto:ch.a.r.i.t.y.h.o.m.e.s.3.9@gmail.com"">ch.a.r.i.t.y.h.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:ch.arit.yho.m.e.s.39@gmail.com"">ch.arit.yho.m.e.s.39@gmail.com</a>
<a href=""mailto:c.ha.r.ity.h.o.m.es39@gmail.com"">c.ha.r.ity.h.o.m.es39@gmail.com</a>
<a href=""mailto:c.h.a.ri.tyh.o.mes39@gmail.com"">c.h.a.ri.tyh.o.mes39@gmail.com</a>
<a href=""mailto:ch.ari.tyh.omes.3.9@gmail.com"">ch.ari.tyh.omes.3.9@gmail.com</a>
<a href=""mailto:c.h.arity.h.om.es3.9@gmail.com"">c.h.arity.h.om.es3.9@gmail.com</a>
<a href=""mailto:ch.ar.ityh.om.es39@gmail.com"">ch.ar.ityh.om.es39@gmail.com</a>
<a href=""mailto:c.ha.r.i.ty.h.ome.s.3.9@gmail.com"">c.ha.r.i.ty.h.ome.s.3.9@gmail.com</a>
<a href=""mailto:c.har.it.yh.o.m.e.s.3.9@gmail.com"">c.har.it.yh.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:c.h.arity.h.om.es.3.9@gmail.com"">c.h.arity.h.om.es.3.9@gmail.com</a>
<a href=""mailto:chari.t.y.h.om.e.s.39@gmail.com"">chari.t.y.h.om.e.s.39@gmail.com</a>
<a href=""mailto:ch.ar.i.ty.h.o.me.s.3.9@gmail.com"">ch.ar.i.ty.h.o.me.s.3.9@gmail.com</a>
<a href=""mailto:c.har.it.yhom.es.3.9@gmail.com"">c.har.it.yhom.es.3.9@gmail.com</a>
<a href=""mailto:c.hari.ty.ho.m.e.s.3.9@gmail.com"">c.hari.ty.ho.m.e.s.3.9@gmail.com</a>
<a href=""mailto:charit.y.h.om.es.39@gmail.com"">charit.y.h.om.es.39@gmail.com</a>
<a href=""mailto:ch.a.r.i.t.y.homes.3.9@gmail.com"">ch.a.r.i.t.y.homes.3.9@gmail.com</a>
<a href=""mailto:charity.h.ome.s.3.9@gmail.com"">charity.h.ome.s.3.9@gmail.com</a>
<a href=""mailto:chari.tyh.o.mes3.9@gmail.com"">chari.tyh.o.mes3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.ty.h.om.e.s.39@gmail.com"">c.ha.r.i.ty.h.om.e.s.39@gmail.com</a>
<a href=""mailto:c.harit.yho.me.s.3.9@gmail.com"">c.harit.yho.me.s.3.9@gmail.com</a>
<a href=""mailto:cha.r.ityh.o.m.es39@gmail.com"">cha.r.ityh.o.m.es39@gmail.com</a>
<a href=""mailto:c.h.a.rit.y.h.om.es.39@gmail.com"">c.h.a.rit.y.h.om.es.39@gmail.com</a>
<a href=""mailto:cha.r.ityh.o.m.es.3.9@gmail.com"">cha.r.ityh.o.m.es.3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.y.ho.m.e.s.39@gmail.com"">ch.a.rit.y.ho.m.e.s.39@gmail.com</a>
<a href=""mailto:ch.a.r.ity.hom.e.s.39@gmail.com"">ch.a.r.ity.hom.e.s.39@gmail.com</a>
<a href=""mailto:ch.a.r.it.yho.m.e.s3.9@gmail.com"">ch.a.r.it.yho.m.e.s3.9@gmail.com</a>
<a href=""mailto:ch.a.r.it.yho.mes.3.9@gmail.com"">ch.a.r.it.yho.mes.3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.yho.m.e.s3.9@gmail.com"">ch.a.rit.yho.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.a.r.i.ty.homes.3.9@gmail.com"">c.h.a.r.i.ty.homes.3.9@gmail.com</a>
<a href=""mailto:chari.t.yhome.s.39@gmail.com"">chari.t.yhome.s.39@gmail.com</a>
<a href=""mailto:cha.rity.hom.es3.9@gmail.com"">cha.rity.hom.es3.9@gmail.com</a>
<a href=""mailto:ch.ar.i.t.yho.m.es39@gmail.com"">ch.ar.i.t.yho.m.es39@gmail.com</a>
<a href=""mailto:ch.arityhom.e.s.39@gmail.com"">ch.arityhom.e.s.39@gmail.com</a>
<a href=""mailto:cha.r.ityh.om.es3.9@gmail.com"">cha.r.ityh.om.es3.9@gmail.com</a>
<a href=""mailto:c.h.ar.i.tyhom.es.3.9@gmail.com"">c.h.ar.i.tyhom.es.3.9@gmail.com</a>
<a href=""mailto:char.i.t.y.h.o.me.s.39@gmail.com"">char.i.t.y.h.o.me.s.39@gmail.com</a>
<a href=""mailto:charity.h.o.m.es.3.9@gmail.com"">charity.h.o.m.es.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.it.y.ho.mes39@gmail.com"">c.ha.r.it.y.ho.mes39@gmail.com</a>
<a href=""mailto:c.h.ari.tyh.o.mes.3.9@gmail.com"">c.h.ari.tyh.o.mes.3.9@gmail.com</a>
<a href=""mailto:c.h.a.rity.ho.m.e.s.39@gmail.com"">c.h.a.rity.ho.m.e.s.39@gmail.com</a>
<a href=""mailto:cha.r.it.y.h.om.e.s3.9@gmail.com"">cha.r.it.y.h.om.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.ar.i.t.y.h.om.es.3.9@gmail.com"">c.h.ar.i.t.y.h.om.es.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.tyh.o.me.s.3.9@gmail.com"">c.ha.r.i.tyh.o.me.s.3.9@gmail.com</a>
<a href=""mailto:ch.ar.i.t.y.ho.m.e.s.39@gmail.com"">ch.ar.i.t.y.ho.m.e.s.39@gmail.com</a>
<a href=""mailto:char.i.t.y.hom.es39@gmail.com"">char.i.t.y.hom.es39@gmail.com</a>
<a href=""mailto:cha.r.i.t.yh.o.me.s39@gmail.com"">cha.r.i.t.yh.o.me.s39@gmail.com</a>
<a href=""mailto:c.h.a.ri.t.y.home.s3.9@gmail.com"">c.h.a.ri.t.y.home.s3.9@gmail.com</a>
<a href=""mailto:c.h.ar.i.t.yh.ome.s.39@gmail.com"">c.h.ar.i.t.yh.ome.s.39@gmail.com</a>
<a href=""mailto:c.h.ar.it.y.ho.m.e.s.3.9@gmail.com"">c.h.ar.it.y.ho.m.e.s.3.9@gmail.com</a>
<a href=""mailto:c.har.it.y.h.o.mes3.9@gmail.com"">c.har.it.y.h.o.mes3.9@gmail.com</a>
<a href=""mailto:c.har.it.yh.o.mes.3.9@gmail.com"">c.har.it.yh.o.mes.3.9@gmail.com</a>
<a href=""mailto:ch.ari.t.yh.o.m.es3.9@gmail.com"">ch.ari.t.yh.o.m.es3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.tyh.ome.s.3.9@gmail.com"">c.ha.r.i.tyh.ome.s.3.9@gmail.com</a>
<a href=""mailto:c.h.ar.ityh.om.es.39@gmail.com"">c.h.ar.ityh.om.es.39@gmail.com</a>
<a href=""mailto:c.har.it.y.h.omes.39@gmail.com"">c.har.it.y.h.omes.39@gmail.com</a>
<a href=""mailto:cha.ri.ty.h.ome.s.39@gmail.com"">cha.ri.ty.h.ome.s.39@gmail.com</a>
<a href=""mailto:charityho.me.s3.9@gmail.com"">charityho.me.s3.9@gmail.com</a>
<a href=""mailto:c.ha.r.ityhomes39@gmail.com"">c.ha.r.ityhomes39@gmail.com</a>
<a href=""mailto:char.i.t.yh.om.e.s.39@gmail.com"">char.i.t.yh.om.e.s.39@gmail.com</a>
<a href=""mailto:ch.a.r.i.t.yh.ome.s39@gmail.com"">ch.a.r.i.t.yh.ome.s39@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.y.h.om.e.s3.9@gmail.com"">c.ha.r.i.t.y.h.om.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.a.ri.t.yh.omes.3.9@gmail.com"">c.h.a.ri.t.yh.omes.3.9@gmail.com</a>
<a href=""mailto:charity.h.om.e.s3.9@gmail.com"">charity.h.om.e.s3.9@gmail.com</a>
<a href=""mailto:chari.t.y.h.o.me.s.3.9@gmail.com"">chari.t.y.h.o.me.s.3.9@gmail.com</a>
<a href=""mailto:c.hari.tyh.om.es3.9@gmail.com"">c.hari.tyh.om.es3.9@gmail.com</a>
<a href=""mailto:cha.ri.tyho.m.es.3.9@gmail.com"">cha.ri.tyho.m.es.3.9@gmail.com</a>
<a href=""mailto:c.h.arityh.o.m.e.s3.9@gmail.com"">c.h.arityh.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:ch.arit.y.h.o.mes.39@gmail.com"">ch.arit.y.h.o.mes.39@gmail.com</a>
<a href=""mailto:ch.ari.t.yh.o.m.e.s3.9@gmail.com"">ch.ari.t.yh.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.a.ri.t.y.ho.m.es39@gmail.com"">c.h.a.ri.t.y.ho.m.es39@gmail.com</a>
<a href=""mailto:c.h.arit.y.h.om.e.s39@gmail.com"">c.h.arit.y.h.om.e.s39@gmail.com</a>
<a href=""mailto:ch.a.r.i.tyho.mes.39@gmail.com"">ch.a.r.i.tyho.mes.39@gmail.com</a>
<a href=""mailto:cha.r.it.y.h.o.m.e.s.39@gmail.com"">cha.r.it.y.h.o.m.e.s.39@gmail.com</a>
<a href=""mailto:ch.a.ri.ty.hom.es39@gmail.com"">ch.a.ri.ty.hom.es39@gmail.com</a>
<a href=""mailto:ch.a.r.ity.h.omes3.9@gmail.com"">ch.a.r.ity.h.omes3.9@gmail.com</a>
<a href=""mailto:ch.ari.ty.h.o.m.es3.9@gmail.com"">ch.ari.ty.h.o.m.es3.9@gmail.com</a>
<a href=""mailto:c.h.a.rity.h.om.es3.9@gmail.com"">c.h.a.rity.h.om.es3.9@gmail.com</a>
<a href=""mailto:c.h.arit.yhome.s.3.9@gmail.com"">c.h.arit.yhome.s.3.9@gmail.com</a>
<a href=""mailto:cha.rityh.o.m.e.s3.9@gmail.com"">cha.rityh.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.yh.o.me.s.39@gmail.com"">c.ha.r.i.t.yh.o.me.s.39@gmail.com</a>
<a href=""mailto:c.ha.r.ityh.om.es.3.9@gmail.com"">c.ha.r.ityh.om.es.3.9@gmail.com</a>
<a href=""mailto:cha.r.ity.h.o.m.e.s.39@gmail.com"">cha.r.ity.h.o.m.e.s.39@gmail.com</a>
<a href=""mailto:c.h.ar.ity.homes.3.9@gmail.com"">c.h.ar.ity.homes.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.y.homes.39@gmail.com"">c.ha.r.i.t.y.homes.39@gmail.com</a>
<a href=""mailto:c.h.ar.it.y.h.o.mes3.9@gmail.com"">c.h.ar.it.y.h.o.mes3.9@gmail.com</a>
<a href=""mailto:cha.r.it.y.h.o.m.es3.9@gmail.com"">cha.r.it.y.h.o.m.es3.9@gmail.com</a>
<a href=""mailto:ch.a.r.it.yh.om.e.s39@gmail.com"">ch.a.r.it.yh.om.e.s39@gmail.com</a>
<a href=""mailto:ch.a.r.i.tyh.o.mes39@gmail.com"">ch.a.r.i.tyh.o.mes39@gmail.com</a>
<a href=""mailto:c.h.ari.t.yhom.e.s3.9@gmail.com"">c.h.ari.t.yhom.e.s3.9@gmail.com</a>
<a href=""mailto:ch.a.r.i.ty.h.o.m.e.s.39@gmail.com"">ch.a.r.i.ty.h.o.m.e.s.39@gmail.com</a>
<a href=""mailto:c.h.a.rit.y.h.o.m.es3.9@gmail.com"">c.h.a.rit.y.h.o.m.es3.9@gmail.com</a>
<a href=""mailto:ch.ar.it.yh.o.mes.39@gmail.com"">ch.ar.it.yh.o.mes.39@gmail.com</a>
<a href=""mailto:c.ha.ri.tyhom.es39@gmail.com"">c.ha.ri.tyhom.es39@gmail.com</a>
<a href=""mailto:c.har.it.yho.m.e.s.39@gmail.com"">c.har.it.yho.m.e.s.39@gmail.com</a>
<a href=""mailto:ch.a.ri.ty.ho.m.e.s3.9@gmail.com"">ch.a.ri.ty.ho.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.arit.y.homes39@gmail.com"">c.h.arit.y.homes39@gmail.com</a>
<a href=""mailto:c.h.a.r.i.tyhomes3.9@gmail.com"">c.h.a.r.i.tyhomes3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.y.h.o.m.e.s3.9@gmail.com"">ch.a.rit.y.h.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:ch.a.r.ity.h.o.me.s3.9@gmail.com"">ch.a.r.ity.h.o.me.s3.9@gmail.com</a>
<a href=""mailto:ch.ari.t.y.h.o.me.s3.9@gmail.com"">ch.ari.t.y.h.o.me.s3.9@gmail.com</a>
<a href=""mailto:chari.t.yh.ome.s39@gmail.com"">chari.t.yh.ome.s39@gmail.com</a>
<a href=""mailto:cha.r.ity.h.o.m.e.s.3.9@gmail.com"">cha.r.ity.h.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:c.ha.ri.t.yhom.es.39@gmail.com"">c.ha.ri.t.yhom.es.39@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.yh.ome.s39@gmail.com"">c.ha.r.i.t.yh.ome.s39@gmail.com</a>
<a href=""mailto:ch.a.rityh.omes.39@gmail.com"">ch.a.rityh.omes.39@gmail.com</a>
<a href=""mailto:c.ha.r.i.ty.ho.mes39@gmail.com"">c.ha.r.i.ty.ho.mes39@gmail.com</a>
<a href=""mailto:ch.arit.y.ho.m.es3.9@gmail.com"">ch.arit.y.ho.m.es3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.y.hom.e.s.3.9@gmail.com"">ch.a.rit.y.hom.e.s.3.9@gmail.com</a>
<a href=""mailto:c.ha.ri.ty.ho.mes3.9@gmail.com"">c.ha.ri.ty.ho.mes3.9@gmail.com</a>
<a href=""mailto:chari.t.yh.om.es3.9@gmail.com"">chari.t.yh.om.es3.9@gmail.com</a>
<a href=""mailto:ch.ar.i.ty.h.om.e.s39@gmail.com"">ch.ar.i.ty.h.om.e.s39@gmail.com</a>
<a href=""mailto:ch.ar.i.t.yh.o.me.s.3.9@gmail.com"">ch.ar.i.t.yh.o.me.s.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.it.yh.o.m.e.s39@gmail.com"">c.ha.r.it.yh.o.m.e.s39@gmail.com</a>
<a href=""mailto:cha.rit.yh.om.e.s.39@gmail.com"">cha.rit.yh.om.e.s.39@gmail.com</a>
<a href=""mailto:c.har.ityhom.e.s3.9@gmail.com"">c.har.ityhom.e.s3.9@gmail.com</a>
<a href=""mailto:c.harit.yho.mes39@gmail.com"">c.harit.yho.mes39@gmail.com</a>
<a href=""mailto:ch.a.rit.yho.me.s3.9@gmail.com"">ch.a.rit.yho.me.s3.9@gmail.com</a>
<a href=""mailto:ch.a.rity.h.omes.39@gmail.com"">ch.a.rity.h.omes.39@gmail.com</a>
<a href=""mailto:ch.a.r.i.t.yh.o.m.e.s3.9@gmail.com"">ch.a.r.i.t.yh.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.har.it.yh.o.m.es.3.9@gmail.com"">c.har.it.yh.o.m.es.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.ty.h.om.es3.9@gmail.com"">c.ha.r.i.ty.h.om.es3.9@gmail.com</a>
<a href=""mailto:c.h.ari.t.y.home.s.39@gmail.com"">c.h.ari.t.y.home.s.39@gmail.com</a>
<a href=""mailto:c.hari.t.yhom.es.39@gmail.com"">c.hari.t.yhom.es.39@gmail.com</a>
<a href=""mailto:ch.a.rity.homes3.9@gmail.com"">ch.a.rity.homes3.9@gmail.com</a>
<a href=""mailto:c.ha.rity.h.o.mes.39@gmail.com"">c.ha.rity.h.o.mes.39@gmail.com</a>
<a href=""mailto:ch.a.rityhom.es39@gmail.com"">ch.a.rityhom.es39@gmail.com</a>
<a href=""mailto:cha.r.i.t.y.home.s3.9@gmail.com"">cha.r.i.t.y.home.s3.9@gmail.com</a>
<a href=""mailto:c.har.it.y.ho.m.es39@gmail.com"">c.har.it.y.ho.m.es39@gmail.com</a>
<a href=""mailto:c.ha.ri.ty.home.s.39@gmail.com"">c.ha.ri.ty.home.s.39@gmail.com</a>
<a href=""mailto:ch.ari.t.yh.omes.39@gmail.com"">ch.ari.t.yh.omes.39@gmail.com</a>
<a href=""mailto:charit.y.ho.mes3.9@gmail.com"">charit.y.ho.mes3.9@gmail.com</a>
<a href=""mailto:c.h.a.r.ityh.om.es3.9@gmail.com"">c.h.a.r.ityh.om.es3.9@gmail.com</a>
<a href=""mailto:c.h.a.rit.yhomes39@gmail.com"">c.h.a.rit.yhomes39@gmail.com</a>
<a href=""mailto:c.ha.rityho.mes.39@gmail.com"">c.ha.rityho.mes.39@gmail.com</a>
<a href=""mailto:char.it.yho.me.s3.9@gmail.com"">char.it.yho.me.s3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.y.homes39@gmail.com"">ch.a.rit.y.homes39@gmail.com</a>
<a href=""mailto:char.i.ty.h.om.es.39@gmail.com"">char.i.ty.h.om.es.39@gmail.com</a>
<a href=""mailto:cha.r.ityh.o.m.e.s.3.9@gmail.com"">cha.r.ityh.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:ch.ari.t.yho.m.es.3.9@gmail.com"">ch.ari.t.yho.m.es.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.yho.m.es39@gmail.com"">c.ha.r.i.t.yho.m.es39@gmail.com</a>
<a href=""mailto:ch.a.rityh.o.m.e.s3.9@gmail.com"">ch.a.rityh.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.har.ityh.o.m.e.s.39@gmail.com"">c.har.ityh.o.m.e.s.39@gmail.com</a>
<a href=""mailto:cha.rityh.o.m.es.39@gmail.com"">cha.rityh.o.m.es.39@gmail.com</a>
<a href=""mailto:ch.ar.it.yhomes3.9@gmail.com"">ch.ar.it.yhomes3.9@gmail.com</a>
<a href=""mailto:c.h.ari.ty.h.o.m.e.s3.9@gmail.com"">c.h.ari.ty.h.o.m.e.s3.9@gmail.com</a>
<a href=""mailto:c.h.a.ri.t.y.h.o.mes3.9@gmail.com"">c.h.a.ri.t.y.h.o.mes3.9@gmail.com</a>
<a href=""mailto:ch.ari.t.y.h.o.m.e.s.3.9@gmail.com"">ch.ari.t.y.h.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:ch.a.r.ity.h.o.mes.3.9@gmail.com"">ch.a.r.ity.h.o.mes.3.9@gmail.com</a>
<a href=""mailto:c.har.ityho.mes39@gmail.com"">c.har.ityho.mes39@gmail.com</a>
<a href=""mailto:c.h.a.r.ity.h.om.es3.9@gmail.com"">c.h.a.r.ity.h.om.es3.9@gmail.com</a>
<a href=""mailto:ch.arityhom.e.s.3.9@gmail.com"">ch.arityhom.e.s.3.9@gmail.com</a>
<a href=""mailto:c.h.a.r.it.yh.om.es3.9@gmail.com"">c.h.a.r.it.yh.om.es3.9@gmail.com</a>
<a href=""mailto:c.ha.ri.tyh.o.me.s.39@gmail.com"">c.ha.ri.tyh.o.me.s.39@gmail.com</a>
<a href=""mailto:c.ha.ri.ty.h.omes39@gmail.com"">c.ha.ri.ty.h.omes39@gmail.com</a>
<a href=""mailto:c.hari.t.y.h.om.e.s3.9@gmail.com"">c.hari.t.y.h.om.e.s3.9@gmail.com</a>
<a href=""mailto:ch.a.ri.ty.h.o.mes3.9@gmail.com"">ch.a.ri.ty.h.o.mes3.9@gmail.com</a>
<a href=""mailto:ch.a.r.i.tyhom.e.s.3.9@gmail.com"">ch.a.r.i.tyhom.e.s.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.y.h.omes3.9@gmail.com"">c.ha.r.i.t.y.h.omes3.9@gmail.com</a>
<a href=""mailto:ch.a.rit.yhomes.39@gmail.com"">ch.a.rit.yhomes.39@gmail.com</a>
<a href=""mailto:char.ityho.m.es.39@gmail.com"">char.ityho.m.es.39@gmail.com</a>
<a href=""mailto:ch.a.rityh.o.m.e.s.39@gmail.com"">ch.a.rityh.o.m.e.s.39@gmail.com</a>
<a href=""mailto:c.h.a.rity.ho.me.s39@gmail.com"">c.h.a.rity.ho.me.s39@gmail.com</a>
<a href=""mailto:cha.r.it.y.ho.me.s3.9@gmail.com"">cha.r.it.y.ho.me.s3.9@gmail.com</a>
<a href=""mailto:c.h.ar.ityh.omes.39@gmail.com"">c.h.ar.ityh.omes.39@gmail.com</a>
<a href=""mailto:c.hari.tyh.omes.39@gmail.com"">c.hari.tyh.omes.39@gmail.com</a>
<a href=""mailto:ch.a.ri.tyh.om.e.s3.9@gmail.com"">ch.a.ri.tyh.om.e.s3.9@gmail.com</a>
<a href=""mailto:chari.t.y.hom.es.3.9@gmail.com"">chari.t.y.hom.es.3.9@gmail.com</a>
<a href=""mailto:charit.y.h.o.m.e.s39@gmail.com"">charit.y.h.o.m.e.s39@gmail.com</a>
<a href=""mailto:c.ha.rit.y.h.o.me.s39@gmail.com"">c.ha.rit.y.h.o.me.s39@gmail.com</a>
<a href=""mailto:c.ha.r.i.t.yho.m.es3.9@gmail.com"">c.ha.r.i.t.yho.m.es3.9@gmail.com</a>
<a href=""mailto:char.it.y.h.o.m.es.39@gmail.com"">char.it.y.h.o.m.es.39@gmail.com</a>
<a href=""mailto:c.har.i.tyh.o.m.es3.9@gmail.com"">c.har.i.tyh.o.m.es3.9@gmail.com</a>
<a href=""mailto:char.it.y.hom.es.3.9@gmail.com"">char.it.y.hom.es.3.9@gmail.com</a>
<a href=""mailto:ch.ari.tyh.om.es.39@gmail.com"">ch.ari.tyh.om.es.39@gmail.com</a>
<a href=""mailto:ch.a.r.ityho.m.e.s.39@gmail.com"">ch.a.r.ityho.m.e.s.39@gmail.com</a>
<a href=""mailto:cha.r.i.ty.ho.mes39@gmail.com"">cha.r.i.ty.ho.mes39@gmail.com</a>
<a href=""mailto:c.ha.r.ityh.om.es.39@gmail.com"">c.ha.r.ityh.om.es.39@gmail.com</a>
<a href=""mailto:cha.rit.yhomes3.9@gmail.com"">cha.rit.yhomes3.9@gmail.com</a>
<a href=""mailto:c.h.ari.tyh.o.me.s39@gmail.com"">c.h.ari.tyh.o.me.s39@gmail.com</a>
<a href=""mailto:ch.a.ri.ty.home.s.3.9@gmail.com"">ch.a.ri.ty.home.s.3.9@gmail.com</a>
<a href=""mailto:c.hari.t.yh.omes.39@gmail.com"">c.hari.t.yh.omes.39@gmail.com</a>
<a href=""mailto:ch.a.r.i.ty.homes3.9@gmail.com"">ch.a.r.i.ty.homes3.9@gmail.com</a>
<a href=""mailto:c.hari.t.y.h.o.m.e.s.3.9@gmail.com"">c.hari.t.y.h.o.m.e.s.3.9@gmail.com</a>
<a href=""mailto:c.ha.rit.y.h.o.m.es.3.9@gmail.com"">c.ha.rit.y.h.o.m.es.3.9@gmail.com</a>
<a href=""mailto:c.ha.r.it.yh.om.e.s3.9@gmail.com"">c.ha.r.it.yh.om.e.s3.9@gmail.com</a>
<a href=""mailto:ch.ar.i.ty.h.o.m.es.39@gmail.com"">ch.ar.i.ty.h.o.m.es.39@gmail.com</a>
<a href=""mailto:ch.a.r.ityhomes39@gmail.com"">ch.a.r.ityhomes39@gmail.com</a>
<a href=""mailto:c.h.a.rit.yh.ome.s3.9@gmail.com"">c.h.a.rit.yh.ome.s3.9@gmail.com</a>
<a href=""mailto:ch.a.ri.ty.h.o.mes.3.9@gmail.com"">ch.a.ri.ty.h.o.mes.3.9@gmail.com</a>
<a href=""mailto:c.h.ari.tyho.me.s3.9@gmail.com"">c.h.ari.tyho.me.s3.9@gmail.com</a>
<a href=""mailto:ch.arit.y.hom.es39@gmail.com"">ch.arit.y.hom.es39@gmail.com</a>
<a href=""mailto:ch.arity.h.ome.s39@gmail.com"">ch.arity.h.ome.s39@gmail.com</a>
<a href=""mailto:c.h.a.rity.h.o.me.s.3.9@gmail.com"">c.h.a.rity.h.o.me.s.3.9@gmail.com</a>
<a href=""mailto:c.hari.tyh.o.me.s3.9@gmail.com"">c.hari.tyh.o.me.s3.9@gmail.com</a>
<a href=""mailto:ch.ar.i.ty.hom.e.s.39@gmail.com"">ch.ar.i.ty.hom.e.s.39@gmail.com</a>
<a href=""mailto:c.h.ar.i.tyh.o.mes39@gmail.com"">c.h.ar.i.tyh.o.mes39@gmail.com</a>"
3ZjthuJe,курсовая пакман,luna34Sans,C++,Monday 4th of December 2023 08:58:42 AM CDT,"#include <SFML/Graphics.hpp>
#include <time.h>

using namespace sf;

const int H = 21;
const int W = 19;

const int ts = 25;

int q = 0, restartTime = 2000;
bool life = true;
bool beat = false;
int betime = 10000;

String TileMap[H] = {
""AAAAAAAAAAAAAAAAAAA"",
""A1       A       2A"",
""A AA AAA A AAA AA A"",
""A        A        A"",
""A AA A AAAAA A AA A"",
""A    A   A   A    A"",
""AAAA AAA A AAA AAAA"",
""   A A       A A   "",
""AAAA A AAAAA A AAAA"",
""       A   A       "",
""AAAA A AAAAA A AAAA"",
""   A A       A A   "",
""AAAA A AAAAA A AAAA"",
""A        A        A"",
""A AA AAA A AAA AA A"",
""A  A     C     A  A"",
""AA A A AAAAA A A AA"",
""A    A   A   A    A"",
""A AAAAAA A AAAAAA A"",
""A3               4A"",
""AAAAAAAAAAAAAAAAAAA"",
};

class Player {
public:
	float frame = 0;
	int x = 9, y = 15;
	int newx = 0, newy = 0;
	int rotate = 1, ti = 0;
	bool tp = false;

	void update() {
		if (tp) {
			TileMap[y][x] = ' ';

			x = 9;
			y = 15;

			TileMap[y][x] = 'C';

			newx = x;
			newy = y;

			tp = false;
		}
		else {
			frame += 0.01;
			if (frame > 5)
				frame -= 5;

			ti++;
			if (ti >= 300) {
				switch (rotate)
				{
				case 1:
					if (TileMap[y][newx + 1] != 'A')
						newx += 1;
					break;
				case 2:
					if (TileMap[y][newx - 1] != 'A')
						newx -= 1;
					break;
				case 3:
					if (TileMap[newy - 1][x] != 'A')
						newy -= 1;
					break;
				case 4:
					if (TileMap[newy + 1][x] != 'A')
						newy += 1;
					break;
				}

				ti = 0;
			}

			if ((TileMap[newy][newx] == ' ' || TileMap[newy][newx] == 'S' || TileMap[newy][newx] == 'B') ||
				(beat && (TileMap[newy][newx] == '1'
					|| TileMap[newy][newx] == '2' || TileMap[newy][newx] == '3' || TileMap[newy][newx] == '4'))) {
				if (TileMap[newy][newx] == ' ' || TileMap[newy][newx] == 'S')
					q++;

				if (TileMap[newy][newx] == 'S')
					beat = true;

				if (TileMap[newy][newx] == '1'
					|| TileMap[newy][newx] == '2' || TileMap[newy][newx] == '3' || TileMap[newy][newx] == '4') {
					if (beat == false)
						life = false;
				}

				TileMap[y][x] = 'B';

				TileMap[newy][newx] = 'C';

				x = newx;
				y = newy;
			}

			if (newy == 9 && (newx == 0 || newx == 18)) {
				if (newx == 0)
					newx = 17;
				else
					newx = 1;

				TileMap[y][x] = 'B';
				TileMap[newy][newx] = 'C';

				x = newx;
				y = newy;
			}
		}
	}
};

class Enemy {
public:
	int x[4] = { 1, 17 , 1, 17 }, y[4] = { 1, 1, 19, 19 };
	int newx[4] = { 0 , 0 , 0, 0 }, newy[4] = { 0, 0, 0, 0 };
	int rotate[4] = { 1, 1, 1, 1 }, ti = 0;
	bool tp = false;
	bool go[4];

	Enemy() {
		for (int i = 0; i < 4; i++)
			go[i] = true;
	}

	void update() {
		if (tp) {
			for (int i = 0; i < 4; i++)
				TileMap[y[i]][x[i]] = ' ';

			x[0] = 1; x[1] = 17; x[2] = 1; x[3] = 17;
			y[0] = 1; y[1] = 1; y[2] = 19; y[3] = 19;

			TileMap[y[0]][x[0]] = '1';
			TileMap[y[1]][x[1]] = '2';
			TileMap[y[2]][x[2]] = '3';
			TileMap[y[3]][x[3]] = '4';

			for (int i = 0; i < 4; i++) {
				newx[i] = x[i];
				newy[i] = y[i];
			}

			tp = false;
		}
		else {
			ti++;

			if (ti >= 300) {
				for (int i = 0; i < 4; i++) {
					rotate[i] = rand() % 4 + 1;

					newx[i] = x[i];
					newy[i] = y[i];

					switch (rotate[i])
					{
					case 1:
						if (TileMap[y[i]][newx[i] + 1] != 'A')
							newx[i] += 1;
						break;
					case 2:
						if (TileMap[y[i]][newx[i] - 1] != 'A')
							newx[i] -= 1;
						break;
					case 3:
						if (TileMap[newy[i] - 1][x[i]] != 'A')
							newy[i] -= 1;
						break;
					case 4:
						if (TileMap[newy[i] + 1][x[i]] != 'A')
							newy[i] += 1;
						break;
					}
				}

				ti = 0;
			}

			for (int i = 0; i < 4; i++)
				if (go[i]) {
					if (TileMap[newy[i]][newx[i]] == ' ' || TileMap[newy[i]][newx[i]] == 'S' || TileMap[newy[i]][newx[i]] == 'B' ||
						TileMap[newy[i]][newx[i]] == 'C') {
						if (TileMap[newy[i]][newx[i]] == 'B')
							TileMap[y[i]][x[i]] = 'B';
						else if (TileMap[newy[i]][newx[i]] == ' ')
							TileMap[y[i]][x[i]] = ' ';
						else if (TileMap[newy[i]][newx[i]] == 'S')
							TileMap[y[i]][x[i]] = 'S';
						else if (TileMap[newy[i]][newx[i]] == 'C')
							if (beat == false)
								life = false;
							else {
								TileMap[newy[i]][newx[i]] == 'B';
								go[i] = false;
							}

						if (i == 0)
							TileMap[newy[i]][newx[i]] = '1';
						if (i == 1)
							TileMap[newy[i]][newx[i]] = '2';
						if (i == 2)
							TileMap[newy[i]][newx[i]] = '3';
						if (i == 3)
							TileMap[newy[i]][newx[i]] = '4';

						x[i] = newx[i];
						y[i] = newy[i];
					}

					if (newy[i] == 9 && (newx[i] == 0 || newx[i] == 18)) {
						if (newx[i] == 0)
							newx[i] = 17;
						else
							newx[i] = 1;

						TileMap[y[i]][x[i]] = 'B';

						if (i == 0)
							TileMap[newy[i]][newx[i]] = '1';
						if (i == 1)
							TileMap[newy[i]][newx[i]] = '2';
						if (i == 2)
							TileMap[newy[i]][newx[i]] = '3';
						if (i == 3)
							TileMap[newy[i]][newx[i]] = '4';

						x[i] = newx[i];
						y[i] = newy[i];
					}
				}
		}
	}
};

class Score {
public:
	Sprite sec[3];
	int s[3], c;
	bool vid[3];

	Score(Texture& image) {
		for (int i = 0; i < 3; i++) {
			sec[i].setTexture(image);

			sec[i].setPosition(10 + 22 * i, H * ts + 10);

			sec[i].setTextureRect(IntRect(0, 0, 22, 45));

			s[i] = 0;
			c = 0;
		}
	}

	void update() {
		if (c < 10) {
			s[0] = c;

			vid[0] = true;
			vid[1] = false;
			vid[2] = false;
		}
		else if (c >= 10 && c < 100) {
			s[0] = c / 10;
			s[1] = c % 10;

			vid[0] = true;
			vid[1] = true;
			vid[2] = false;
		}
		else if (c >= 100 && c < 1000) {
			s[0] = c / 100;
			s[1] = (c / 10) % 10;
			s[2] = (c % 100) % 10;

			vid[0] = true;
			vid[1] = true;
			vid[2] = true;
		}

		for (int i = 0; i < 3; i++)
			sec[i].setTextureRect(IntRect(22 * s[i], 0, 22, 45));
	}
};

void del() {
	for (int i = 0; i <= 2; i++)
		for (int j = 0; j <= 2; j++) {
			for (int x = 0; x < 2; x++) {
				TileMap[7 + j * 2][i + 16 * x] = 'B';

				TileMap[9][3 + 12 * x] = 'B';
			}

			TileMap[9][8 + j] = 'B';
		}

	for (int i = 0; i < 2; i++) {
		TileMap[2][1 + 16 * i] = 'S';
		TileMap[15][1 + 16 * i] = 'S';
	}
}

int main() {
	srand(time(0));
	RenderWindow window(VideoMode(W * ts, H * ts + 3 * ts), ""Maze!"");

	Texture t;
	t.loadFromFile(""C:/уник/курсовая/Project2/Paint/title.png"");
	Sprite plat(t);

	Texture yw;
	yw.loadFromFile(""C:/уник/курсовая/Project2/Paint/youwin.png"");
	Sprite youwin(yw);
	youwin.setPosition(100, 210);

	Texture yl;
	yl.loadFromFile(""C:/уник/курсовая/Project2/Paint/youlose.png"");
	Sprite youlose(yl);
	youlose.setPosition(100, 210);

	Player p;
	Enemy en;

	Texture sc;
	sc.loadFromFile(""C:/уник/курсовая/Project2/Paint/score.png"");
	Score score(sc);

	del();

	while (window.isOpen())
	{
		Event event;
		while (window.pollEvent(event))
		{
			if (event.type == Event::Closed)
				window.close();

			if (q < 171 && life)
				if (event.type == Event::KeyPressed) {
					p.newx = p.x;
					p.newy = p.y;

					if (event.key.code == Keyboard::Right)
						p.rotate = 1;
					if (event.key.code == Keyboard::Left)
						p.rotate = 2;
					if (event.key.code == Keyboard::Up)
						p.rotate = 3;
					if (event.key.code == Keyboard::Down)
						p.rotate = 4;
				}
		}

		if ((q == 171 || !life) && restartTime != 0) {
			restartTime--;

			if (restartTime == 0) {
				for (int i = 0; i < H; i++)
					for (int j = 0; j < W; j++)
						if (TileMap[i][j] == 'B')
							TileMap[i][j] = ' ';

				p.tp = true;
				en.tp = true;

				del();

				q = 0;
				life = true;
				restartTime = 2000;

				betime = 10000;
				beat = false;
			}
		}

		score.c = q;

		if (beat) {
			betime--;

			if (betime == 0) {
				for (int i = 0; i < 4; i++) {
					en.go[i] = true;

					if (i == 0)
						TileMap[en.y[0]][en.x[0]] = '1';
					if (i == 1)
						TileMap[en.y[1]][en.x[1]] = '2';
					if (i == 2)
						TileMap[en.y[2]][en.x[2]] = '3';
					if (i == 3)
						TileMap[en.y[3]][en.x[3]] = '4';
				}

				betime = 10000;
				beat = false;
			}
		}

		if (!life) {
			for (int i = 0; i < H; i++)
				for (int j = 0; j < W; j++)
					if (TileMap[i][j] != 'A')
						TileMap[i][j] = 'B';
		}

		if (q < 171 && life) {
			p.update();
			en.update();
		}
		score.update();
		window.clear(Color::Black);

		for (int i = 0; i < H; i++)
			for (int j = 0; j < W; j++) {
				if (TileMap[i][j] == 'A')
					plat.setTextureRect(IntRect(0, 0, ts, ts));
				if (TileMap[i][j] == 'C')
					plat.setTextureRect(IntRect(ts * int(p.frame), ts * p.rotate, ts, ts));
				if (TileMap[i][j] == ' ')
					plat.setTextureRect(IntRect(ts, 0, ts, ts));
				if (TileMap[i][j] == 'S')
					plat.setTextureRect(IntRect(ts * 2, 0, ts, ts));
				if (!beat) {
					if (TileMap[i][j] == '1')
						plat.setTextureRect(IntRect(ts * 5, ts * en.rotate[0], ts, ts));
					if (TileMap[i][j] == '2')
						plat.setTextureRect(IntRect(ts * 5, ts * en.rotate[1], ts, ts));
					if (TileMap[i][j] == '3')
						plat.setTextureRect(IntRect(ts * 5, ts * en.rotate[2], ts, ts));
					if (TileMap[i][j] == '4')
						plat.setTextureRect(IntRect(ts * 5, ts * en.rotate[3], ts, ts));
				}
				else {
					if (TileMap[i][j] == '1')
						plat.setTextureRect(IntRect(ts * 5, 0, ts, ts));
					if (TileMap[i][j] == '2')
						plat.setTextureRect(IntRect(ts * 5, 0, ts, ts));
					if (TileMap[i][j] == '3')
						plat.setTextureRect(IntRect(ts * 5, 0, ts, ts));
					if (TileMap[i][j] == '4')
						plat.setTextureRect(IntRect(ts * 5, 0, ts, ts));
				}
				if (TileMap[i][j] == 'B')
					continue;

				plat.setPosition(j * ts, i * ts);
				window.draw(plat);
			}

		if (q == 171)
			window.draw(youwin);
		if (!life)
			window.draw(youlose);

		for (int i = 0; i < 3; i++)
			if (score.vid[i])
				window.draw(score.sec[i]);

		window.display();
	}

	return 0;
}"
jQGkJf1k,HARE and TORTOISE,excellent940707,C++,Monday 4th of December 2023 08:18:42 AM CDT,"#include<bits/stdc++.h>
using namespace std;

int tortoise_move(){
     int t_rand=rand()%10+1;
     if(1<=t_rand&&t_rand<=5){
          return 3;
     }else if(6<=t_rand&&t_rand<=7){
          return -6;
     }else{
          return 1;
     }
}

int hare_move(){
     int h_rand=rand()%10+1;
     if(1<=h_rand&&h_rand<=2){
          return 0;
     }else if(3<=h_rand&&h_rand<=4){
          return 9;
     }else if(5==h_rand){
          return -12;
     }else if(6<=h_rand&&h_rand<=8){
          return 1;
     }else{
          return -2;
     }
}
int main(){
     srand(time(NULL));
     cout<<""BANG!!!!\n""<<""AND THY\'RE OFF!!!!\n"";
     int tp=1, hp=1, endline=70;
     while(true){
          tp+=tortoise_move();
          hp+=hare_move();
          cout<<tp<<' '<<hp<<'\n';
          if(tp<1)tp=1;
          if(hp<1)hp=1;
          if(tp>=endline&&hp>=endline){
               cout<<""all win\n"";//我看不清楚這一句要印甚麼
               break;
          }else if(tp>=endline){
               cout<<""TORTOISE WIN!!!YAY!!!\n"";
               break;
          }else if(hp>=endline){
               cout<<""HARE WINS!!!YUEH!!!\n"";
               break;
          }
          if(tp==hp){
               for(int i=1;i<tp;++i)cout<<'\t';
               cout<<""OUCH!!!"";
          }else if(tp<hp){
               for(int i=1;i<tp;++i)cout<<'\t';
               cout<<""\tT"";
               for(int i=tp+1;i<hp;++i)cout<<'\t';
               cout<<""\tH"";
          }else{
               for(int i=1;i<hp;++i)cout<<'\t';
               cout<<""\tH"";
               for(int i=hp+1;i<tp;++i)cout<<'\t';
               cout<<""\tT"";
          }
          cout<<'\n';

     }
     return 0;
}"
b2xCEcsj,Label Sizing For Hangar,Don_Mag,Swift,Monday 4th of December 2023 08:15:01 AM CDT,"// re: https://stackoverflow.com/questions/77559899/content-hugging-and-content-compression-resistance-with-minimum-margin-between-v

/*

As I understood the requirements:

- if either label is less than one-half the width,
  - don't allow that label to Compress / Truncate
- if both labels are greater than one-half the width, 
  - make them equal widths
  - allow both labels to Compress / Truncate

*/

// So... the guts of the logic:

		// make sure both labels have the same superview
		//	and get a reference to that superview so we can
		//	get the frame width
		guard let svL = myLeft.superview,
			  let svR = myRight.superview,
			  svL == svR
		else { return }

		// reset Content Compression Resistance Priorities
		myLeft.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)
		myRight.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)
		
		// deactive equal widths constraint
		myEqualConstraint.isActive = false
		
		// width of the superview minus the ""spacing""
		let svWidth = svL.frame.width - gapWidth
		let halfWidth = svWidth * 0.5
		
		// get the intrinsic widths
		let leftWidth = myLeft.intrinsicContentSize.width
		let rightWidth = myRight.intrinsicContentSize.width
		
		if leftWidth < halfWidth {
			// don't allow Left Label to Compress / Truncate
			myLeft.setContentCompressionResistancePriority(.required, for: .horizontal)
		} else if rightWidth < halfWidth {
			// don't allow Right Label to Compress / Truncate
			myRight.setContentCompressionResistancePriority(.required, for: .horizontal)
		} else {
			// both label widths are Greater than one half, so
			//	make Left and Right Equal Widths, and
			//	both labels are allowed to Compress / Truncate
			myEqualConstraint.isActive = true
		}

/*

Note: if using a UIStackView, we can simplify it a bit more...

- in layout logic, use the stack view's .spacing instead of the gapWidth property
- change stack view's distribution between .fill and .fillEqually instead of using a equalConstraint

Examples:

- class LabelSizingBaseVC: UIViewController
  - Base View Controller to setup the common elements
- class WithContainerVC: LabelSizingBaseVC
  - puts the two labels in a ""container"" view
- class WithStackViewVC: LabelSizingBaseVC
  - puts the two labels in a UIStackView

*/


class LabelSizingBaseVC: UIViewController {
	
	let myLeft: UILabel = {
		let v = UILabel()
		v.textAlignment = .left
		v.lineBreakMode = .byTruncatingTail
		v.backgroundColor = .cyan
		return v
	}()
	
	let myRight: UILabel = {
		let v = UILabel()
		v.textAlignment = .right
		v.lineBreakMode = .byTruncatingHead
		v.backgroundColor = .yellow
		return v
	}()
	
	// actual size labels
	let asLeft: UILabel = {
		let v = UILabel()
		v.textAlignment = .left
		v.lineBreakMode = .byTruncatingTail
		v.backgroundColor = .cyan
		return v
	}()
	
	let asRight: UILabel = {
		let v = UILabel()
		v.textAlignment = .right
		v.lineBreakMode = .byTruncatingHead
		v.backgroundColor = .yellow
		return v
	}()
	
	let centerLine: UIView = {
		let v = UIView()
		v.backgroundColor = .red
		return v
	}()

	let infoLabel: UILabel = {
		let v = UILabel()
		v.font = .systemFont(ofSize: 15.0, weight: .regular)
		v.textAlignment = .center
		v.numberOfLines = 0
		v.backgroundColor = UIColor(white: 0.95, alpha: 1.0)
		return v
	}()
	
	var toggleColorsButton: UIButton!
	
	var myEqualConstraint: NSLayoutConstraint!
	
	let gapWidth: CGFloat = 10.0
	
	let sampleStrings: [[String]] = [
		[""My text is less than half."", ""Less than half.""],
		[""Less than half."", ""My text is less than half.""],
		[""This text is a bit wider than half."", ""Less than half.""],
		[""Less than half."", ""This text is a bit wider than half.""],
		[""This text is considerably wider than half."", ""Less than half.""],
		[""Less than half."", ""This text is considerably wider than half.""],
		[""This text is considerably wider than half."", ""Text still Less than half.""],
		[""Text still Less than half."", ""This text is considerably wider than half.""],
		[""The Left Label is considerably wider than half."", ""Right Label is wider than half.""],
		[""Left Label is wider than half."", ""The Right Label is considerably wider than half.""],
		[""This text is just about but not quite full width."", ""Short.""],
		[""Short."", ""This text is just about but not quite full width.""],
	]
	
	var idx: Int = 0
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		view.backgroundColor = .systemBackground
		
		var cfg = UIButton.Configuration.filled()
		cfg.title = ""Toggle Colors""
		toggleColorsButton = UIButton(configuration: cfg, primaryAction: UIAction() { _ in
			guard let sv = self.myLeft.superview else { return }
			self.myLeft.backgroundColor = self.myLeft.backgroundColor == .clear ? .cyan : .clear
			self.myRight.backgroundColor = self.myRight.backgroundColor == .clear ? .yellow : .clear
			sv.backgroundColor = sv.backgroundColor == .clear ? (sv is UIStackView ? .systemBlue : .systemGreen) : .clear
		})

		[toggleColorsButton, infoLabel, centerLine, asLeft, asRight].forEach { v in
			v.translatesAutoresizingMaskIntoConstraints = false
			view.addSubview(v)
		}
		
		let g = view.safeAreaLayoutGuide
		NSLayoutConstraint.activate([
			toggleColorsButton.topAnchor.constraint(equalTo: g.topAnchor, constant: 40.0),
			toggleColorsButton.centerXAnchor.constraint(equalTo: g.centerXAnchor),

			infoLabel.topAnchor.constraint(equalTo: toggleColorsButton.bottomAnchor, constant: 12.0),
			infoLabel.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			infoLabel.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),

			asLeft.topAnchor.constraint(equalTo: infoLabel.bottomAnchor, constant: 20.0),
			asLeft.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 8.0),

			asRight.topAnchor.constraint(equalTo: asLeft.bottomAnchor, constant: 0.0),
			asRight.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -8.0),

			centerLine.topAnchor.constraint(equalTo: asLeft.topAnchor, constant: -8.0),
			centerLine.centerXAnchor.constraint(equalTo: g.centerXAnchor),
			centerLine.widthAnchor.constraint(equalToConstant: 1.0),
			centerLine.heightAnchor.constraint(equalToConstant: 120.0),
			
		])

		updateLabels()
	}
	
	override func viewDidLayoutSubviews() {
		super.viewDidLayoutSubviews()
	}
	
	func fixLayout() {
		// make sure both labels have the same superview
		//	and get a reference to that superview so we can
		//	get the frame width
		guard let svL = myLeft.superview,
			  let svR = myRight.superview,
			  svL == svR
		else { return }

		// reset Content Compression Resistance Priorities
		myLeft.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)
		myRight.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)
		
		// deactive equal widths constraint
		myEqualConstraint.isActive = false
		
		// width of the superview minus the ""spacing""
		let svWidth = svL.frame.width - gapWidth
		let halfWidth = svWidth * 0.5
		
		// get the intrinsic widths
		let leftWidth = myLeft.intrinsicContentSize.width
		let rightWidth = myRight.intrinsicContentSize.width
		
		if leftWidth < halfWidth {
			// don't allow Left Label to Compress / Truncate
			myLeft.setContentCompressionResistancePriority(.required, for: .horizontal)
		} else if rightWidth < halfWidth {
			// don't allow Right Label to Compress / Truncate
			myRight.setContentCompressionResistancePriority(.required, for: .horizontal)
		} else {
			// both label widths are Greater than one half, so
			//	make Left and Right Equal Widths, and
			//	both labels are allowed to Compress / Truncate
			myEqualConstraint.isActive = true
		}
	
		// the rest of this is for the info label only ...
		//	it is not related to the layout logic
		var s: String = (svL is UIStackView) ? ""With StackView"" : ""With Container""
		if leftWidth < halfWidth {
			if rightWidth < halfWidth {
				s += ""\nBoth Labels are less-than half-width\nso we don't have to worry\nabout truncation.""
			} else {
				s += ""\nLeft Label is less-than half-width\nso don't allow it to truncate, but\nallow Right Label to truncate if needed.""
			}
		} else if rightWidth < halfWidth {
			if leftWidth < halfWidth {
				s += ""\nBoth Labels are less-than half-width\nso we don't have to worry.""
			} else {
				s += ""\nRight Label is less-than half-width\nso don't allow it to truncate, but\nallow Left Label to truncate if needed.""
			}
		} else {
			s += ""\nBoth Labels are wider than half-width\nso make them equal widths and\nallow both labels to trunctate.""
		}
		infoLabel.text = s

	}
	
	override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
		updateLabels()
	}
	
	func updateLabels() {
		
		let p = sampleStrings[idx % sampleStrings.count]
		
		myLeft.text = p[0]
		myRight.text = p[1]
		
		asLeft.text = p[0]
		asRight.text = p[1]
		
		idx += 1
		if idx == sampleStrings.count {
			idx = 0
		}
		
		DispatchQueue.main.async {
			self.fixLayout()
		}
	}
	
}

class WithContainerVC: LabelSizingBaseVC {
	
	let container: UIView = {
		let v = UIView()
		v.backgroundColor = .systemGreen
		return v
	}()

	override func viewDidLoad() {
		super.viewDidLoad()
		
		super.viewDidLoad()
		
		let g = view.safeAreaLayoutGuide
		
		[myLeft, myRight].forEach { v in
			v.translatesAutoresizingMaskIntoConstraints = false
			container.addSubview(v)
		}
		container.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(container)
		
		NSLayoutConstraint.activate([
			
			container.topAnchor.constraint(equalTo: asRight.bottomAnchor, constant: 12.0),
			container.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 8.0),
			container.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -8.0),
			container.heightAnchor.constraint(equalToConstant: 40.0),
			
			myLeft.leadingAnchor.constraint(equalTo: container.leadingAnchor),
			myLeft.centerYAnchor.constraint(equalTo: container.centerYAnchor),
			
			myRight.centerYAnchor.constraint(equalTo: container.centerYAnchor),
			myRight.trailingAnchor.constraint(equalTo: container.trailingAnchor),
			
			myRight.leadingAnchor.constraint(equalTo: myLeft.trailingAnchor, constant: gapWidth),
			
		])
		
		// initialize equal width constraints
		myEqualConstraint = myLeft.widthAnchor.constraint(equalTo: myRight.widthAnchor)
	}

}

class WithStackViewVC: LabelSizingBaseVC {
	
	let stackView: UIStackView = {
		let v = UIStackView()
		v.distribution = .fill
		v.alignment = .center
		v.backgroundColor = .systemBlue
		return v
	}()
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		stackView.spacing = gapWidth
		
		stackView.addArrangedSubview(myLeft)
		stackView.addArrangedSubview(myRight)
		
		stackView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(stackView)
		
		let g = view.safeAreaLayoutGuide
		NSLayoutConstraint.activate([
			stackView.topAnchor.constraint(equalTo: asRight.bottomAnchor, constant: 12.0),
			stackView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 8.0),
			stackView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -8.0),
			stackView.heightAnchor.constraint(equalToConstant: 40.0),
		])
		
		// initialize equal width constraint
		myEqualConstraint = myLeft.widthAnchor.constraint(equalTo: myRight.widthAnchor)
	}

}
"
3c7hPi5C,You are an idiot | Python remake,Ajwct,Python,Monday 4th of December 2023 08:11:05 AM CDT,"#Annoying Pop-up Script

[EDU use only]



import os
import subprocess

def play_annoying_video():
    # Command to play an annoying video, replace with your video file or URL
    video_command = ""mpv https://example.com/annoying_video.mp4""

    # Open the video in a new window
    subprocess.Popen(video_command, shell=True)

def main():
    # Number of new windows to open when the user closes one
    new_window_count = 4

    while True:
        # Play the annoying video
        play_annoying_video()

        # Wait for the user to close the window
        input(""Close the window to open more: "")

        # Open additional annoying windows
        for _ in range(new_window_count):
            play_annoying_video()

if __name__ == ""__main__"":
    main()
"
8iR9edUr,sprawdzanie.sk,Maksik23,Python,Monday 4th of December 2023 08:10:00 AM CDT,"options:
    logOut: ban %player% &4Wylogowanie podczas sprawdzania
    cheatCmd: ban %player-arg% &4Wykrycie cheatow podczas sprawdzania!
    przyznajCmd: ban %executor% &cPrzyznanie sie do cheatow!

on command:
    if {sprawdzanie::sprawdz::%executor%} is true:
        if command is not ""msg"" or ""helpop"" or ""przyznajsie"":
            send ""&7&l>> &cTa komenda jest zablokowana podczas sprawdzania!""
            send ""&7&l>> &fDostepne komendy: &7/msg /helpop /przyznajsie""
            cancel event
            
every 2 seconds:
    loop all players:
        if {sprawdzanie::sprawdz::%loop-player%} is true:
            send title ""&4&lSPRAWDZANIE"" with subtitle ""&cJestes sprawdzany!"" to loop-player for 2 seconds
            send action bar ""&4&lSPRAWDZANIE &7>> &cJestes sprawdzany!"" to loop-player

on quit:
    if {sprawdzanie::sprawdz::%player%} is true:
        set {sprawdzanie::sprawdz::%player%} to false
        execute console command ""{@logOut}""
        send ""&7&l>> &fUzytkownik &c%player% &fwylogowal sie podczas sprawdzania!"" to all players
        send ""&7&l>> &fUzytkownik &c%player% &fwylogowal sie podczas sprawdzania!"" to console

command /przyznajsie:
    trigger:
        if executor is player:
            if executor has permission ""maksik023.sprawdzanie.przyznajsie"":
                if {sprawdzanie::sprawdz::%executor%} is true:
                    set {sprawdzanie::sprawdz::%executor%} to false
                    execute console command ""{@przyznajCmd}""
                    send ""&7&l>> &fUzytkownik &c%executor% &fprzyznal sie do cheatowania!""
                else:
                    send ""&7&l>> &cNie jestes sprawdzany!""
            else:
                send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie.przyznajsie""
        else:
            send ""&7&l>> &cMusisz byc graczem! &7&l<<""
                    
command /sprawdzanie [<text>] [<player>]:
    aliases: /sprawdz
    trigger:
        if executor is player:
            if executor has permission ""maksik023.sprawdzanie"":
                if arg-1 is ""sprawdz"":
                    if executor has permission ""maksik023.sprawdzanie.sprawdz"":
                        if player-arg is set:
                            if player-arg has permission ""maksik023.sprawdzanie.sprawdz"" or ""maksik023.sprawdzanie.cheat"" or ""maksik023.sprawdzanie.czysty"" or ""maksik023.sprawdzanie.setspawn"":
                                if {sprawdzanie::sprawdz::%player-arg%} is not true:
                                    set {sprawdzanie::sprawdz::%player-arg%} to true
                                    send ""&7&l>> &fUzytkownik &c%player-arg% &fjest podejrzany o cheatowanie przez &e%executor%"" to all players
                                    send ""&7&l>> &fUzytkownik &c%player-arg% &fjest podejrzany o cheatowanie przez &e%executor%"" to console
                                    teleport executor to {sprawdzanie::spawn}
                                    teleport player-arg to {sprawdzanie::spawn}
                                else:
                                    send ""&7&l>> &fGracz &c%player-arg% &fjest juz sprawdzany!""
                            else:
                                send ""&7&l>> &cTa osoba jest administratorem!""
                        else:
                            send ""&7&l>> &cPodaj gracza do sprawdzania""
                    else:
                        send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie.sprawdz""
                if arg-1 is ""cheat"":
                    if executor has permission ""maksik023.sprawdzanie.cheat"":
                        if player-arg is set:
                            if {sprawdzanie::sprawdz::%player-arg%} is true:
                                set {sprawdzanie::sprawdz::%player-arg%} to false
                                execute console command ""{@cheatCmd}""
                                send ""&7&l>> &fGracz &c%player-arg% &4cheatowal &fwiec zostal ukarany!"" to all players
                                send ""&7&l>> &fGracz &c%player-arg% &4cheatowal &fwiec zostal ukarany!"" to console
                                execute executor command ""spawn""
                            else:
                                send ""&7&l>> &fGracz &c%player-arg% &fnie jest sprawdzany!""
                        else:
                            send ""&7&l>> &cPodaj gracza do ukarania""
                    else:
                        send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie.cheat""
                if arg-1 is ""czysty"":
                    if executor has permission ""maksik023.sprawdzanie.czysty"":
                        if player-arg is set:
                            if {sprawdzanie::sprawdz::%player-arg%} is true:
                                set {sprawdzanie::sprawdz::%player-arg%} to false
                                send ""&7&l>> &fUzytkownik &c%player-arg% &fokazal sie czysty mimo podejrzen &e%executor%"" to all players
                                send ""&7&l>> &fUzytkownik &c%player-arg% &fokazal sie czysty mimo podejrzen &e%executor%"" to console
                                execute player-arg command ""spawn""
                                execute executor command ""spawn""
                            else:
                                send ""&7&l>> &fGracz &c%player-arg% &fnie jest sprawdzany!""
                        else:
                            send ""&7&l>> &cPodaj czystego gracza""
                    else:
                        send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie.czysty""
                if arg-1 is ""setspawn"":
                    if executor has permission ""maksik023.sprawdzanie.setspawn"":
                        set {sprawdzanie::spawn} to executor's location
                        send ""&7&l>> &aUstawiono miejsce sprawdzania!""
                    else:
                        send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie.setspawn""
                if arg-1 is not ""setspawn"" or ""sprawdz"" or ""czysty"" or ""cheat"":
                    send ""&7&l>> &fPoprawne uzycie: &7/sprawdz [sprawdz/czysty/setspawn/cheat] <Gracz>""
                    stop
                if arg-1 is not set:
                    send ""&7&l>> &fPoprawne uzycie: &7/sprawdz [sprawdz/czysty/setspawn/cheat] <Gracz>""
                    stop
            else:
                send ""&7&l>> &cBrak permisji: &4maksik023.sprawdzanie""
        else:
            send ""&7&l>> &cMusisz byc graczem! &7&l<<"""
SyCyQ6hB,snowybot,coinwalk,JavaScript,Monday 4th of December 2023 07:57:04 AM CDT,"var sturn = parseFloat(document.getElementById('pct_balance').value);
var best = (sturn/800).toFixed(8);
var formby = best;
var taget = 22000;
var dozer = (best*10);
var sven = (best*6.9);
var ovenbake = (best*7.9);
var superior = (best*14);;
var tobetnext = ((formby*1).toFixed(8));
var goodly = sturn;
var molie = sturn;
var james = 0;
var mate = 0;
var soldier = parseFloat(document.getElementById('pct_balance').value);
var fran = ((Math.ceil(sturn/dozer))*dozer);
var bernie = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var chime = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var bobby = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get() {
console.clear(); 
goodly = parseFloat(document.getElementById('pct_balance').value);bernie = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText);
bobby = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((bernie<49.5000)&&(bobby>chime)){
soldier = soldier+formby;
chime = parseFloat(bobby);
}
if ((bernie>=49.5000)&&(bobby>chime)){
soldier = soldier-formby;
chime = parseFloat(bobby);
}
if (bobby<chime){
console.log(""betting old bets stopping"");
return;
}
if ((soldier-best)>goodly){
console.log(""hacked"");
return;
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+sven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate<=0)){
    formby = Number((formby*2).toFixed(8));
    james = parseFloat(goodly);
	mate = mate+1
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+sven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate>0)){
    formby = Number((formby*2).toFixed(8));
	mate = mate+1;
    james = parseFloat(goodly);
}
if ((goodly>=fran)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+sven))){
    formby = best;
    james = 0;
	mate = 0;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (((goodly-(formby*140))<=0)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+sven))){
    formby = best;
    james = 0;;
	mate = 0;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if ((goodly<=(best*80))||(goodly>(molie*1.35))){
    best = ((parseFloat(goodly))/800).toFixed(8);
    formby = best;
    dozer = (best*10);
    sven = (best*6.9);
    ovenbake = (best*7.9);
	formby = best;
    james = 0;;
	mate = 0;
    fran = ((Math.ceil(goodly/dozer))*dozer);
	molie = parseFloat(goodly);
}
if (goodly >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (formby*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((goodly-sturn).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1);
}
get();"
QEL4G0sR,upload,Bintangaja,PHP,Monday 4th of December 2023 07:46:13 AM CDT,"  public function add()
    {
        $product = $this->Products->newEmptyEntity();
        if ($this->request->is('post')) {
            $files = $this->request->getUploadedFiles();
            $files['foto']->getStream();
            $files['foto']->getSize();
            $files['foto']->getClientFileName();

            $myname = $this->request->getData()['foto']->getClientFileName();

            $myext = substr(strchr($myname, "".""), 1);

            $mypath = ""upload/"".$myname.""."".$myext;
            $product = $this->Products->patchEntity($product, $this->request->getData());
            $product->foto = $myname.""."".$myext;

            if ($this->Products->save($product)) {
                $this->Flash->success(__('The product has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The product could not be saved. Please, try again.'));
        }
        $sallers = $this->Products->Sallers->find('list', ['limit' => 200])->all();
        $this->set(compact('product', 'sallers'));
    }"
qisLrWF0,Lab1,NikolayChukanov,Python,Monday 4th of December 2023 07:31:52 AM CDT,"import math
import sympy as s
import matplotlib.pyplot as plot
import numpy as n
from matplotlib.animation import FuncAnimation

t = s.Symbol('t')

x = s.sin(t)
y = s.sin(2*t)

Vx = s.diff(x)
Vy = s.diff(y)

step = 1000
T = n.linspace(0, 10, step)
X = n.zeros_like(T)
Y = n.zeros_like(T)
VX = n.zeros_like(T)
VY = n.zeros_like(T)
for i in n.arange(len(T)):
    X[i] = s.Subs(x, t, T[i])
    Y[i] = s.Subs(y, t, T[i])
    VX[i] = s.Subs(Vx, t, T[i])
    VY[i] = s.Subs(Vy, t, T[i])


fgr = plot.figure()
grf = fgr.add_subplot(1,1,1)
grf.axis('equal')
grf.set(xlim = [-2,2], ylim = [-2,2])
grf.plot(X,Y)

Pnt = grf.plot(X[0], Y[0], marker = 'o')[0]
Vpl = grf.plot([X[0], X[0]+VX[0]],[Y[0], Y[0]+VY[0]], 'r')[0]

def Vect_arrow(VecX, VecY, X, Y):
    a = 0.3
    b = 0.2
    Arrx = n.array([-a, 0, -a])
    Arry = n.array([b, 0, -b])

    phi = math.atan2(VecY, VecX)

    RotX = Arrx*n.cos(phi) - Arry*n.sin(phi)
    RotY = Arrx*n.sin(phi) + Arry*n.cos(phi)

    Arrx = RotX + X+VecX
    Arry = RotY + Y+VecY
    
    return Arrx, Arry

ArVX, ArVY = Vect_arrow(VX[0], VY[0], X[0], Y[0])
Varr = grf.plot(ArVX, ArVY, 'red')[0]

def anim(i):
    Pnt.set_data(X[i], Y[i])
    Vpl.set_data([X[i], X[i]+VX[i]],[Y[i], Y[i]+VY[i]])
    ArVX, ArVY = Vect_arrow(VX[i], VY[i], X[i], Y[i])
    Varr.set_data(ArVX, ArVY)
    return

an = FuncAnimation(fgr, anim, frames = step, interval = 1)

fgr.show()"
A9Bz6Pw3,bashrc,anujpandey,Bash,Monday 4th of December 2023 07:17:52 AM CDT,"# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern ""**"" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval ""$(SHELL=/bin/sh lesspipe)""

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z ""${debian_chroot:-}"" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we ""want"" color)
case ""$TERM"" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n ""$force_color_prompt"" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ ""$color_prompt"" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case ""$TERM"" in
xterm*|rxvt*)
    PS1=""\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1""
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval ""$(dircolors -b ~/.dircolors)"" || eval ""$(dircolors -b)""
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an ""alert"" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')""'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.


if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
source <(kubectl completion bash)
if [ -f ~/.bash_aliases ]; then
    . ~/.kubectl_aliases
fi

eval ""$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)""
"
u8y4xz2R,Untitled,lemansky,HTML,Monday 4th of December 2023 07:15:50 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Falling Tetris Block</title>
  <style>
    canvas {
     background: black;
    }
  </style>
</head>
<body>
  <canvas width=""400"" height=""1400""></canvas>

  <script>
    const canvas = document.querySelector(""canvas"");
    const ctx = canvas.getContext(""2d"");

    let block = {
      x: 100,
      y: 0,
      width: 30,
      height: 30,
      angle: 0,
      rotationSpeed: 5,
      fallSpeed: 5
    };

    function drawBlock() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // requestAnimationFrame(drawBlock);
    }

    setInterval(() => {
      // drawBlock();
    }, 41);

    drawBlock();
  </script>
</body>
</html>
"
MhsNwuAn,kubectl_aliases,anujpandey,Bash,Monday 4th of December 2023 07:14:55 AM CDT,"# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

alias k='kubectl'
alias ksys='kubectl --namespace=kube-system'
alias ka='kubectl apply --recursive -f'
alias ksysa='kubectl --namespace=kube-system apply --recursive -f'
alias kak='kubectl apply -k'
alias kk='kubectl kustomize'
alias kex='kubectl exec -i -t'
alias ksysex='kubectl --namespace=kube-system exec -i -t'
alias klo='kubectl logs -f'
alias ksyslo='kubectl --namespace=kube-system logs -f'
alias klop='kubectl logs -f -p'
alias ksyslop='kubectl --namespace=kube-system logs -f -p'
alias kp='kubectl proxy'
alias kpf='kubectl port-forward'
alias kg='kubectl get'
alias ksysg='kubectl --namespace=kube-system get'
alias kd='kubectl describe'
alias ksysd='kubectl --namespace=kube-system describe'
alias krm='kubectl delete'
alias ksysrm='kubectl --namespace=kube-system delete'
alias krun='kubectl run --rm --restart=Never --image-pull-policy=IfNotPresent -i -t'
alias ksysrun='kubectl --namespace=kube-system run --rm --restart=Never --image-pull-policy=IfNotPresent -i -t'
alias kgpo='kubectl get pods'
alias ksysgpo='kubectl --namespace=kube-system get pods'
alias kdpo='kubectl describe pods'
alias ksysdpo='kubectl --namespace=kube-system describe pods'
alias krmpo='kubectl delete pods'
alias ksysrmpo='kubectl --namespace=kube-system delete pods'
alias kgdep='kubectl get deployment'
alias ksysgdep='kubectl --namespace=kube-system get deployment'
alias kddep='kubectl describe deployment'
alias ksysddep='kubectl --namespace=kube-system describe deployment'
alias krmdep='kubectl delete deployment'
alias ksysrmdep='kubectl --namespace=kube-system delete deployment'
alias kgsts='kubectl get statefulset'
alias ksysgsts='kubectl --namespace=kube-system get statefulset'
alias kdsts='kubectl describe statefulset'
alias ksysdsts='kubectl --namespace=kube-system describe statefulset'
alias krmsts='kubectl delete statefulset'
alias ksysrmsts='kubectl --namespace=kube-system delete statefulset'
alias kgsvc='kubectl get service'
alias ksysgsvc='kubectl --namespace=kube-system get service'
alias kdsvc='kubectl describe service'
alias ksysdsvc='kubectl --namespace=kube-system describe service'
alias krmsvc='kubectl delete service'
alias ksysrmsvc='kubectl --namespace=kube-system delete service'
alias kging='kubectl get ingress'
alias ksysging='kubectl --namespace=kube-system get ingress'
alias kding='kubectl describe ingress'
alias ksysding='kubectl --namespace=kube-system describe ingress'
alias krming='kubectl delete ingress'
alias ksysrming='kubectl --namespace=kube-system delete ingress'
alias kgcm='kubectl get configmap'
alias ksysgcm='kubectl --namespace=kube-system get configmap'
alias kdcm='kubectl describe configmap'
alias ksysdcm='kubectl --namespace=kube-system describe configmap'
alias krmcm='kubectl delete configmap'
alias ksysrmcm='kubectl --namespace=kube-system delete configmap'
alias kgsec='kubectl get secret'
alias ksysgsec='kubectl --namespace=kube-system get secret'
alias kdsec='kubectl describe secret'
alias ksysdsec='kubectl --namespace=kube-system describe secret'
alias krmsec='kubectl delete secret'
alias ksysrmsec='kubectl --namespace=kube-system delete secret'
alias kgno='kubectl get nodes'
alias kdno='kubectl describe nodes'
alias kgns='kubectl get namespaces'
alias kdns='kubectl describe namespaces'
alias krmns='kubectl delete namespaces'
alias kgoyaml='kubectl get -o=yaml'
alias ksysgoyaml='kubectl --namespace=kube-system get -o=yaml'
alias kgpooyaml='kubectl get pods -o=yaml'
alias ksysgpooyaml='kubectl --namespace=kube-system get pods -o=yaml'
alias kgdepoyaml='kubectl get deployment -o=yaml'
alias ksysgdepoyaml='kubectl --namespace=kube-system get deployment -o=yaml'
alias kgstsoyaml='kubectl get statefulset -o=yaml'
alias ksysgstsoyaml='kubectl --namespace=kube-system get statefulset -o=yaml'
alias kgsvcoyaml='kubectl get service -o=yaml'
alias ksysgsvcoyaml='kubectl --namespace=kube-system get service -o=yaml'
alias kgingoyaml='kubectl get ingress -o=yaml'
alias ksysgingoyaml='kubectl --namespace=kube-system get ingress -o=yaml'
alias kgcmoyaml='kubectl get configmap -o=yaml'
alias ksysgcmoyaml='kubectl --namespace=kube-system get configmap -o=yaml'
alias kgsecoyaml='kubectl get secret -o=yaml'
alias ksysgsecoyaml='kubectl --namespace=kube-system get secret -o=yaml'
alias kgnooyaml='kubectl get nodes -o=yaml'
alias kgnsoyaml='kubectl get namespaces -o=yaml'
alias kgowide='kubectl get -o=wide'
alias ksysgowide='kubectl --namespace=kube-system get -o=wide'
alias kgpoowide='kubectl get pods -o=wide'
alias ksysgpoowide='kubectl --namespace=kube-system get pods -o=wide'
alias kgdepowide='kubectl get deployment -o=wide'
alias ksysgdepowide='kubectl --namespace=kube-system get deployment -o=wide'
alias kgstsowide='kubectl get statefulset -o=wide'
alias ksysgstsowide='kubectl --namespace=kube-system get statefulset -o=wide'
alias kgsvcowide='kubectl get service -o=wide'
alias ksysgsvcowide='kubectl --namespace=kube-system get service -o=wide'
alias kgingowide='kubectl get ingress -o=wide'
alias ksysgingowide='kubectl --namespace=kube-system get ingress -o=wide'
alias kgcmowide='kubectl get configmap -o=wide'
alias ksysgcmowide='kubectl --namespace=kube-system get configmap -o=wide'
alias kgsecowide='kubectl get secret -o=wide'
alias ksysgsecowide='kubectl --namespace=kube-system get secret -o=wide'
alias kgnoowide='kubectl get nodes -o=wide'
alias kgnsowide='kubectl get namespaces -o=wide'
alias kgojson='kubectl get -o=json'
alias ksysgojson='kubectl --namespace=kube-system get -o=json'
alias kgpoojson='kubectl get pods -o=json'
alias ksysgpoojson='kubectl --namespace=kube-system get pods -o=json'
alias kgdepojson='kubectl get deployment -o=json'
alias ksysgdepojson='kubectl --namespace=kube-system get deployment -o=json'
alias kgstsojson='kubectl get statefulset -o=json'
alias ksysgstsojson='kubectl --namespace=kube-system get statefulset -o=json'
alias kgsvcojson='kubectl get service -o=json'
alias ksysgsvcojson='kubectl --namespace=kube-system get service -o=json'
alias kgingojson='kubectl get ingress -o=json'
alias ksysgingojson='kubectl --namespace=kube-system get ingress -o=json'
alias kgcmojson='kubectl get configmap -o=json'
alias ksysgcmojson='kubectl --namespace=kube-system get configmap -o=json'
alias kgsecojson='kubectl get secret -o=json'
alias ksysgsecojson='kubectl --namespace=kube-system get secret -o=json'
alias kgnoojson='kubectl get nodes -o=json'
alias kgnsojson='kubectl get namespaces -o=json'
alias kgall='kubectl get --all-namespaces'
alias kdall='kubectl describe --all-namespaces'
alias kgpoall='kubectl get pods --all-namespaces'
alias kdpoall='kubectl describe pods --all-namespaces'
alias kgdepall='kubectl get deployment --all-namespaces'
alias kddepall='kubectl describe deployment --all-namespaces'
alias kgstsall='kubectl get statefulset --all-namespaces'
alias kdstsall='kubectl describe statefulset --all-namespaces'
alias kgsvcall='kubectl get service --all-namespaces'
alias kdsvcall='kubectl describe service --all-namespaces'
alias kgingall='kubectl get ingress --all-namespaces'
alias kdingall='kubectl describe ingress --all-namespaces'
alias kgcmall='kubectl get configmap --all-namespaces'
alias kdcmall='kubectl describe configmap --all-namespaces'
alias kgsecall='kubectl get secret --all-namespaces'
alias kdsecall='kubectl describe secret --all-namespaces'
alias kgnsall='kubectl get namespaces --all-namespaces'
alias kdnsall='kubectl describe namespaces --all-namespaces'
alias kgsl='kubectl get --show-labels'
alias ksysgsl='kubectl --namespace=kube-system get --show-labels'
alias kgposl='kubectl get pods --show-labels'
alias ksysgposl='kubectl --namespace=kube-system get pods --show-labels'
alias kgdepsl='kubectl get deployment --show-labels'
alias ksysgdepsl='kubectl --namespace=kube-system get deployment --show-labels'
alias kgstssl='kubectl get statefulset --show-labels'
alias ksysgstssl='kubectl --namespace=kube-system get statefulset --show-labels'
alias kgsvcsl='kubectl get service --show-labels'
alias ksysgsvcsl='kubectl --namespace=kube-system get service --show-labels'
alias kgingsl='kubectl get ingress --show-labels'
alias ksysgingsl='kubectl --namespace=kube-system get ingress --show-labels'
alias kgcmsl='kubectl get configmap --show-labels'
alias ksysgcmsl='kubectl --namespace=kube-system get configmap --show-labels'
alias kgsecsl='kubectl get secret --show-labels'
alias ksysgsecsl='kubectl --namespace=kube-system get secret --show-labels'
alias kgnosl='kubectl get nodes --show-labels'
alias kgnssl='kubectl get namespaces --show-labels'
alias krmall='kubectl delete --all'
alias ksysrmall='kubectl --namespace=kube-system delete --all'
alias krmpoall='kubectl delete pods --all'
alias ksysrmpoall='kubectl --namespace=kube-system delete pods --all'
alias krmdepall='kubectl delete deployment --all'
alias ksysrmdepall='kubectl --namespace=kube-system delete deployment --all'
alias krmstsall='kubectl delete statefulset --all'
alias ksysrmstsall='kubectl --namespace=kube-system delete statefulset --all'
alias krmsvcall='kubectl delete service --all'
alias ksysrmsvcall='kubectl --namespace=kube-system delete service --all'
alias krmingall='kubectl delete ingress --all'
alias ksysrmingall='kubectl --namespace=kube-system delete ingress --all'
alias krmcmall='kubectl delete configmap --all'
alias ksysrmcmall='kubectl --namespace=kube-system delete configmap --all'
alias krmsecall='kubectl delete secret --all'
alias ksysrmsecall='kubectl --namespace=kube-system delete secret --all'
alias krmnsall='kubectl delete namespaces --all'
alias kgw='kubectl get --watch'
alias ksysgw='kubectl --namespace=kube-system get --watch'
alias kgpow='kubectl get pods --watch'
alias ksysgpow='kubectl --namespace=kube-system get pods --watch'
alias kgdepw='kubectl get deployment --watch'
alias ksysgdepw='kubectl --namespace=kube-system get deployment --watch'
alias kgstsw='kubectl get statefulset --watch'
alias ksysgstsw='kubectl --namespace=kube-system get statefulset --watch'
alias kgsvcw='kubectl get service --watch'
alias ksysgsvcw='kubectl --namespace=kube-system get service --watch'
alias kgingw='kubectl get ingress --watch'
alias ksysgingw='kubectl --namespace=kube-system get ingress --watch'
alias kgcmw='kubectl get configmap --watch'
alias ksysgcmw='kubectl --namespace=kube-system get configmap --watch'
alias kgsecw='kubectl get secret --watch'
alias ksysgsecw='kubectl --namespace=kube-system get secret --watch'
alias kgnow='kubectl get nodes --watch'
alias kgnsw='kubectl get namespaces --watch'
alias kgoyamlall='kubectl get -o=yaml --all-namespaces'
alias kgpooyamlall='kubectl get pods -o=yaml --all-namespaces'
alias kgdepoyamlall='kubectl get deployment -o=yaml --all-namespaces'
alias kgstsoyamlall='kubectl get statefulset -o=yaml --all-namespaces'
alias kgsvcoyamlall='kubectl get service -o=yaml --all-namespaces'
alias kgingoyamlall='kubectl get ingress -o=yaml --all-namespaces'
alias kgcmoyamlall='kubectl get configmap -o=yaml --all-namespaces'
alias kgsecoyamlall='kubectl get secret -o=yaml --all-namespaces'
alias kgnsoyamlall='kubectl get namespaces -o=yaml --all-namespaces'
alias kgalloyaml='kubectl get --all-namespaces -o=yaml'
alias kgpoalloyaml='kubectl get pods --all-namespaces -o=yaml'
alias kgdepalloyaml='kubectl get deployment --all-namespaces -o=yaml'
alias kgstsalloyaml='kubectl get statefulset --all-namespaces -o=yaml'
alias kgsvcalloyaml='kubectl get service --all-namespaces -o=yaml'
alias kgingalloyaml='kubectl get ingress --all-namespaces -o=yaml'
alias kgcmalloyaml='kubectl get configmap --all-namespaces -o=yaml'
alias kgsecalloyaml='kubectl get secret --all-namespaces -o=yaml'
alias kgnsalloyaml='kubectl get namespaces --all-namespaces -o=yaml'
alias kgowideall='kubectl get -o=wide --all-namespaces'
alias kgpoowideall='kubectl get pods -o=wide --all-namespaces'
alias kgdepowideall='kubectl get deployment -o=wide --all-namespaces'
alias kgstsowideall='kubectl get statefulset -o=wide --all-namespaces'
alias kgsvcowideall='kubectl get service -o=wide --all-namespaces'
alias kgingowideall='kubectl get ingress -o=wide --all-namespaces'
alias kgcmowideall='kubectl get configmap -o=wide --all-namespaces'
alias kgsecowideall='kubectl get secret -o=wide --all-namespaces'
alias kgnsowideall='kubectl get namespaces -o=wide --all-namespaces'
alias kgallowide='kubectl get --all-namespaces -o=wide'
alias kgpoallowide='kubectl get pods --all-namespaces -o=wide'
alias kgdepallowide='kubectl get deployment --all-namespaces -o=wide'
alias kgstsallowide='kubectl get statefulset --all-namespaces -o=wide'
alias kgsvcallowide='kubectl get service --all-namespaces -o=wide'
alias kgingallowide='kubectl get ingress --all-namespaces -o=wide'
alias kgcmallowide='kubectl get configmap --all-namespaces -o=wide'
alias kgsecallowide='kubectl get secret --all-namespaces -o=wide'
alias kgnsallowide='kubectl get namespaces --all-namespaces -o=wide'
alias kgowidesl='kubectl get -o=wide --show-labels'
alias ksysgowidesl='kubectl --namespace=kube-system get -o=wide --show-labels'
alias kgpoowidesl='kubectl get pods -o=wide --show-labels'
alias ksysgpoowidesl='kubectl --namespace=kube-system get pods -o=wide --show-labels'
alias kgdepowidesl='kubectl get deployment -o=wide --show-labels'
alias ksysgdepowidesl='kubectl --namespace=kube-system get deployment -o=wide --show-labels'
alias kgstsowidesl='kubectl get statefulset -o=wide --show-labels'
alias ksysgstsowidesl='kubectl --namespace=kube-system get statefulset -o=wide --show-labels'
alias kgsvcowidesl='kubectl get service -o=wide --show-labels'
alias ksysgsvcowidesl='kubectl --namespace=kube-system get service -o=wide --show-labels'
alias kgingowidesl='kubectl get ingress -o=wide --show-labels'
alias ksysgingowidesl='kubectl --namespace=kube-system get ingress -o=wide --show-labels'
alias kgcmowidesl='kubectl get configmap -o=wide --show-labels'
alias ksysgcmowidesl='kubectl --namespace=kube-system get configmap -o=wide --show-labels'
alias kgsecowidesl='kubectl get secret -o=wide --show-labels'
alias ksysgsecowidesl='kubectl --namespace=kube-system get secret -o=wide --show-labels'
alias kgnoowidesl='kubectl get nodes -o=wide --show-labels'
alias kgnsowidesl='kubectl get namespaces -o=wide --show-labels'
alias kgslowide='kubectl get --show-labels -o=wide'
alias ksysgslowide='kubectl --namespace=kube-system get --show-labels -o=wide'
alias kgposlowide='kubectl get pods --show-labels -o=wide'
alias ksysgposlowide='kubectl --namespace=kube-system get pods --show-labels -o=wide'
alias kgdepslowide='kubectl get deployment --show-labels -o=wide'
alias ksysgdepslowide='kubectl --namespace=kube-system get deployment --show-labels -o=wide'
alias kgstsslowide='kubectl get statefulset --show-labels -o=wide'
alias ksysgstsslowide='kubectl --namespace=kube-system get statefulset --show-labels -o=wide'
alias kgsvcslowide='kubectl get service --show-labels -o=wide'
alias ksysgsvcslowide='kubectl --namespace=kube-system get service --show-labels -o=wide'
alias kgingslowide='kubectl get ingress --show-labels -o=wide'
alias ksysgingslowide='kubectl --namespace=kube-system get ingress --show-labels -o=wide'
alias kgcmslowide='kubectl get configmap --show-labels -o=wide'
alias ksysgcmslowide='kubectl --namespace=kube-system get configmap --show-labels -o=wide'
alias kgsecslowide='kubectl get secret --show-labels -o=wide'
alias ksysgsecslowide='kubectl --namespace=kube-system get secret --show-labels -o=wide'
alias kgnoslowide='kubectl get nodes --show-labels -o=wide'
alias kgnsslowide='kubectl get namespaces --show-labels -o=wide'
alias kgojsonall='kubectl get -o=json --all-namespaces'
alias kgpoojsonall='kubectl get pods -o=json --all-namespaces'
alias kgdepojsonall='kubectl get deployment -o=json --all-namespaces'
alias kgstsojsonall='kubectl get statefulset -o=json --all-namespaces'
alias kgsvcojsonall='kubectl get service -o=json --all-namespaces'
alias kgingojsonall='kubectl get ingress -o=json --all-namespaces'
alias kgcmojsonall='kubectl get configmap -o=json --all-namespaces'
alias kgsecojsonall='kubectl get secret -o=json --all-namespaces'
alias kgnsojsonall='kubectl get namespaces -o=json --all-namespaces'
alias kgallojson='kubectl get --all-namespaces -o=json'
alias kgpoallojson='kubectl get pods --all-namespaces -o=json'
alias kgdepallojson='kubectl get deployment --all-namespaces -o=json'
alias kgstsallojson='kubectl get statefulset --all-namespaces -o=json'
alias kgsvcallojson='kubectl get service --all-namespaces -o=json'
alias kgingallojson='kubectl get ingress --all-namespaces -o=json'
alias kgcmallojson='kubectl get configmap --all-namespaces -o=json'
alias kgsecallojson='kubectl get secret --all-namespaces -o=json'
alias kgnsallojson='kubectl get namespaces --all-namespaces -o=json'
alias kgallsl='kubectl get --all-namespaces --show-labels'
alias kgpoallsl='kubectl get pods --all-namespaces --show-labels'
alias kgdepallsl='kubectl get deployment --all-namespaces --show-labels'
alias kgstsallsl='kubectl get statefulset --all-namespaces --show-labels'
alias kgsvcallsl='kubectl get service --all-namespaces --show-labels'
alias kgingallsl='kubectl get ingress --all-namespaces --show-labels'
alias kgcmallsl='kubectl get configmap --all-namespaces --show-labels'
alias kgsecallsl='kubectl get secret --all-namespaces --show-labels'
alias kgnsallsl='kubectl get namespaces --all-namespaces --show-labels'
alias kgslall='kubectl get --show-labels --all-namespaces'
alias kgposlall='kubectl get pods --show-labels --all-namespaces'
alias kgdepslall='kubectl get deployment --show-labels --all-namespaces'
alias kgstsslall='kubectl get statefulset --show-labels --all-namespaces'
alias kgsvcslall='kubectl get service --show-labels --all-namespaces'
alias kgingslall='kubectl get ingress --show-labels --all-namespaces'
alias kgcmslall='kubectl get configmap --show-labels --all-namespaces'
alias kgsecslall='kubectl get secret --show-labels --all-namespaces'
alias kgnsslall='kubectl get namespaces --show-labels --all-namespaces'
alias kgallw='kubectl get --all-namespaces --watch'
alias kgpoallw='kubectl get pods --all-namespaces --watch'
alias kgdepallw='kubectl get deployment --all-namespaces --watch'
alias kgstsallw='kubectl get statefulset --all-namespaces --watch'
alias kgsvcallw='kubectl get service --all-namespaces --watch'
alias kgingallw='kubectl get ingress --all-namespaces --watch'
alias kgcmallw='kubectl get configmap --all-namespaces --watch'
alias kgsecallw='kubectl get secret --all-namespaces --watch'
alias kgnsallw='kubectl get namespaces --all-namespaces --watch'
alias kgwall='kubectl get --watch --all-namespaces'
alias kgpowall='kubectl get pods --watch --all-namespaces'
alias kgdepwall='kubectl get deployment --watch --all-namespaces'
alias kgstswall='kubectl get statefulset --watch --all-namespaces'
alias kgsvcwall='kubectl get service --watch --all-namespaces'
alias kgingwall='kubectl get ingress --watch --all-namespaces'
alias kgcmwall='kubectl get configmap --watch --all-namespaces'
alias kgsecwall='kubectl get secret --watch --all-namespaces'
alias kgnswall='kubectl get namespaces --watch --all-namespaces'
alias kgslw='kubectl get --show-labels --watch'
alias ksysgslw='kubectl --namespace=kube-system get --show-labels --watch'
alias kgposlw='kubectl get pods --show-labels --watch'
alias ksysgposlw='kubectl --namespace=kube-system get pods --show-labels --watch'
alias kgdepslw='kubectl get deployment --show-labels --watch'
alias ksysgdepslw='kubectl --namespace=kube-system get deployment --show-labels --watch'
alias kgstsslw='kubectl get statefulset --show-labels --watch'
alias ksysgstsslw='kubectl --namespace=kube-system get statefulset --show-labels --watch'
alias kgsvcslw='kubectl get service --show-labels --watch'
alias ksysgsvcslw='kubectl --namespace=kube-system get service --show-labels --watch'
alias kgingslw='kubectl get ingress --show-labels --watch'
alias ksysgingslw='kubectl --namespace=kube-system get ingress --show-labels --watch'
alias kgcmslw='kubectl get configmap --show-labels --watch'
alias ksysgcmslw='kubectl --namespace=kube-system get configmap --show-labels --watch'
alias kgsecslw='kubectl get secret --show-labels --watch'
alias ksysgsecslw='kubectl --namespace=kube-system get secret --show-labels --watch'
alias kgnoslw='kubectl get nodes --show-labels --watch'
alias kgnsslw='kubectl get namespaces --show-labels --watch'
alias kgwsl='kubectl get --watch --show-labels'
alias ksysgwsl='kubectl --namespace=kube-system get --watch --show-labels'
alias kgpowsl='kubectl get pods --watch --show-labels'
alias ksysgpowsl='kubectl --namespace=kube-system get pods --watch --show-labels'
alias kgdepwsl='kubectl get deployment --watch --show-labels'
alias ksysgdepwsl='kubectl --namespace=kube-system get deployment --watch --show-labels'
alias kgstswsl='kubectl get statefulset --watch --show-labels'
alias ksysgstswsl='kubectl --namespace=kube-system get statefulset --watch --show-labels'
alias kgsvcwsl='kubectl get service --watch --show-labels'
alias ksysgsvcwsl='kubectl --namespace=kube-system get service --watch --show-labels'
alias kgingwsl='kubectl get ingress --watch --show-labels'
alias ksysgingwsl='kubectl --namespace=kube-system get ingress --watch --show-labels'
alias kgcmwsl='kubectl get configmap --watch --show-labels'
alias ksysgcmwsl='kubectl --namespace=kube-system get configmap --watch --show-labels'
alias kgsecwsl='kubectl get secret --watch --show-labels'
alias ksysgsecwsl='kubectl --namespace=kube-system get secret --watch --show-labels'
alias kgnowsl='kubectl get nodes --watch --show-labels'
alias kgnswsl='kubectl get namespaces --watch --show-labels'
alias kgowideallsl='kubectl get -o=wide --all-namespaces --show-labels'
alias kgpoowideallsl='kubectl get pods -o=wide --all-namespaces --show-labels'
alias kgdepowideallsl='kubectl get deployment -o=wide --all-namespaces --show-labels'
alias kgstsowideallsl='kubectl get statefulset -o=wide --all-namespaces --show-labels'
alias kgsvcowideallsl='kubectl get service -o=wide --all-namespaces --show-labels'
alias kgingowideallsl='kubectl get ingress -o=wide --all-namespaces --show-labels'
alias kgcmowideallsl='kubectl get configmap -o=wide --all-namespaces --show-labels'
alias kgsecowideallsl='kubectl get secret -o=wide --all-namespaces --show-labels'
alias kgnsowideallsl='kubectl get namespaces -o=wide --all-namespaces --show-labels'
alias kgowideslall='kubectl get -o=wide --show-labels --all-namespaces'
alias kgpoowideslall='kubectl get pods -o=wide --show-labels --all-namespaces'
alias kgdepowideslall='kubectl get deployment -o=wide --show-labels --all-namespaces'
alias kgstsowideslall='kubectl get statefulset -o=wide --show-labels --all-namespaces'
alias kgsvcowideslall='kubectl get service -o=wide --show-labels --all-namespaces'
alias kgingowideslall='kubectl get ingress -o=wide --show-labels --all-namespaces'
alias kgcmowideslall='kubectl get configmap -o=wide --show-labels --all-namespaces'
alias kgsecowideslall='kubectl get secret -o=wide --show-labels --all-namespaces'
alias kgnsowideslall='kubectl get namespaces -o=wide --show-labels --all-namespaces'
alias kgallowidesl='kubectl get --all-namespaces -o=wide --show-labels'
alias kgpoallowidesl='kubectl get pods --all-namespaces -o=wide --show-labels'
alias kgdepallowidesl='kubectl get deployment --all-namespaces -o=wide --show-labels'
alias kgstsallowidesl='kubectl get statefulset --all-namespaces -o=wide --show-labels'
alias kgsvcallowidesl='kubectl get service --all-namespaces -o=wide --show-labels'
alias kgingallowidesl='kubectl get ingress --all-namespaces -o=wide --show-labels'
alias kgcmallowidesl='kubectl get configmap --all-namespaces -o=wide --show-labels'
alias kgsecallowidesl='kubectl get secret --all-namespaces -o=wide --show-labels'
alias kgnsallowidesl='kubectl get namespaces --all-namespaces -o=wide --show-labels'
alias kgallslowide='kubectl get --all-namespaces --show-labels -o=wide'
alias kgpoallslowide='kubectl get pods --all-namespaces --show-labels -o=wide'
alias kgdepallslowide='kubectl get deployment --all-namespaces --show-labels -o=wide'
alias kgstsallslowide='kubectl get statefulset --all-namespaces --show-labels -o=wide'
alias kgsvcallslowide='kubectl get service --all-namespaces --show-labels -o=wide'
alias kgingallslowide='kubectl get ingress --all-namespaces --show-labels -o=wide'
alias kgcmallslowide='kubectl get configmap --all-namespaces --show-labels -o=wide'
alias kgsecallslowide='kubectl get secret --all-namespaces --show-labels -o=wide'
alias kgnsallslowide='kubectl get namespaces --all-namespaces --show-labels -o=wide'
alias kgslowideall='kubectl get --show-labels -o=wide --all-namespaces'
alias kgposlowideall='kubectl get pods --show-labels -o=wide --all-namespaces'
alias kgdepslowideall='kubectl get deployment --show-labels -o=wide --all-namespaces'
alias kgstsslowideall='kubectl get statefulset --show-labels -o=wide --all-namespaces'
alias kgsvcslowideall='kubectl get service --show-labels -o=wide --all-namespaces'
alias kgingslowideall='kubectl get ingress --show-labels -o=wide --all-namespaces'
alias kgcmslowideall='kubectl get configmap --show-labels -o=wide --all-namespaces'
alias kgsecslowideall='kubectl get secret --show-labels -o=wide --all-namespaces'
alias kgnsslowideall='kubectl get namespaces --show-labels -o=wide --all-namespaces'
alias kgslallowide='kubectl get --show-labels --all-namespaces -o=wide'
alias kgposlallowide='kubectl get pods --show-labels --all-namespaces -o=wide'
alias kgdepslallowide='kubectl get deployment --show-labels --all-namespaces -o=wide'
alias kgstsslallowide='kubectl get statefulset --show-labels --all-namespaces -o=wide'
alias kgsvcslallowide='kubectl get service --show-labels --all-namespaces -o=wide'
alias kgingslallowide='kubectl get ingress --show-labels --all-namespaces -o=wide'
alias kgcmslallowide='kubectl get configmap --show-labels --all-namespaces -o=wide'
alias kgsecslallowide='kubectl get secret --show-labels --all-namespaces -o=wide'
alias kgnsslallowide='kubectl get namespaces --show-labels --all-namespaces -o=wide'
alias kgallslw='kubectl get --all-namespaces --show-labels --watch'
alias kgpoallslw='kubectl get pods --all-namespaces --show-labels --watch'
alias kgdepallslw='kubectl get deployment --all-namespaces --show-labels --watch'
alias kgstsallslw='kubectl get statefulset --all-namespaces --show-labels --watch'
alias kgsvcallslw='kubectl get service --all-namespaces --show-labels --watch'
alias kgingallslw='kubectl get ingress --all-namespaces --show-labels --watch'
alias kgcmallslw='kubectl get configmap --all-namespaces --show-labels --watch'
alias kgsecallslw='kubectl get secret --all-namespaces --show-labels --watch'
alias kgnsallslw='kubectl get namespaces --all-namespaces --show-labels --watch'
alias kgallwsl='kubectl get --all-namespaces --watch --show-labels'
alias kgpoallwsl='kubectl get pods --all-namespaces --watch --show-labels'
alias kgdepallwsl='kubectl get deployment --all-namespaces --watch --show-labels'
alias kgstsallwsl='kubectl get statefulset --all-namespaces --watch --show-labels'
alias kgsvcallwsl='kubectl get service --all-namespaces --watch --show-labels'
alias kgingallwsl='kubectl get ingress --all-namespaces --watch --show-labels'
alias kgcmallwsl='kubectl get configmap --all-namespaces --watch --show-labels'
alias kgsecallwsl='kubectl get secret --all-namespaces --watch --show-labels'
alias kgnsallwsl='kubectl get namespaces --all-namespaces --watch --show-labels'
alias kgslallw='kubectl get --show-labels --all-namespaces --watch'
alias kgposlallw='kubectl get pods --show-labels --all-namespaces --watch'
alias kgdepslallw='kubectl get deployment --show-labels --all-namespaces --watch'
alias kgstsslallw='kubectl get statefulset --show-labels --all-namespaces --watch'
alias kgsvcslallw='kubectl get service --show-labels --all-namespaces --watch'
alias kgingslallw='kubectl get ingress --show-labels --all-namespaces --watch'
alias kgcmslallw='kubectl get configmap --show-labels --all-namespaces --watch'
alias kgsecslallw='kubectl get secret --show-labels --all-namespaces --watch'
alias kgnsslallw='kubectl get namespaces --show-labels --all-namespaces --watch'
alias kgslwall='kubectl get --show-labels --watch --all-namespaces'
alias kgposlwall='kubectl get pods --show-labels --watch --all-namespaces'
alias kgdepslwall='kubectl get deployment --show-labels --watch --all-namespaces'
alias kgstsslwall='kubectl get statefulset --show-labels --watch --all-namespaces'
alias kgsvcslwall='kubectl get service --show-labels --watch --all-namespaces'
alias kgingslwall='kubectl get ingress --show-labels --watch --all-namespaces'
alias kgcmslwall='kubectl get configmap --show-labels --watch --all-namespaces'
alias kgsecslwall='kubectl get secret --show-labels --watch --all-namespaces'
alias kgnsslwall='kubectl get namespaces --show-labels --watch --all-namespaces'
alias kgwallsl='kubectl get --watch --all-namespaces --show-labels'
alias kgpowallsl='kubectl get pods --watch --all-namespaces --show-labels'
alias kgdepwallsl='kubectl get deployment --watch --all-namespaces --show-labels'
alias kgstswallsl='kubectl get statefulset --watch --all-namespaces --show-labels'
alias kgsvcwallsl='kubectl get service --watch --all-namespaces --show-labels'
alias kgingwallsl='kubectl get ingress --watch --all-namespaces --show-labels'
alias kgcmwallsl='kubectl get configmap --watch --all-namespaces --show-labels'
alias kgsecwallsl='kubectl get secret --watch --all-namespaces --show-labels'
alias kgnswallsl='kubectl get namespaces --watch --all-namespaces --show-labels'
alias kgwslall='kubectl get --watch --show-labels --all-namespaces'
alias kgpowslall='kubectl get pods --watch --show-labels --all-namespaces'
alias kgdepwslall='kubectl get deployment --watch --show-labels --all-namespaces'
alias kgstswslall='kubectl get statefulset --watch --show-labels --all-namespaces'
alias kgsvcwslall='kubectl get service --watch --show-labels --all-namespaces'
alias kgingwslall='kubectl get ingress --watch --show-labels --all-namespaces'
alias kgcmwslall='kubectl get configmap --watch --show-labels --all-namespaces'
alias kgsecwslall='kubectl get secret --watch --show-labels --all-namespaces'
alias kgnswslall='kubectl get namespaces --watch --show-labels --all-namespaces'
alias kgf='kubectl get --recursive -f'
alias kdf='kubectl describe --recursive -f'
alias krmf='kubectl delete --recursive -f'
alias kgoyamlf='kubectl get -o=yaml --recursive -f'
alias kgowidef='kubectl get -o=wide --recursive -f'
alias kgojsonf='kubectl get -o=json --recursive -f'
alias kgslf='kubectl get --show-labels --recursive -f'
alias kgwf='kubectl get --watch --recursive -f'
alias kgowideslf='kubectl get -o=wide --show-labels --recursive -f'
alias kgslowidef='kubectl get --show-labels -o=wide --recursive -f'
alias kgslwf='kubectl get --show-labels --watch --recursive -f'
alias kgwslf='kubectl get --watch --show-labels --recursive -f'
alias kgl='kubectl get -l'
alias ksysgl='kubectl --namespace=kube-system get -l'
alias kdl='kubectl describe -l'
alias ksysdl='kubectl --namespace=kube-system describe -l'
alias krml='kubectl delete -l'
alias ksysrml='kubectl --namespace=kube-system delete -l'
alias kgpol='kubectl get pods -l'
alias ksysgpol='kubectl --namespace=kube-system get pods -l'
alias kdpol='kubectl describe pods -l'
alias ksysdpol='kubectl --namespace=kube-system describe pods -l'
alias krmpol='kubectl delete pods -l'
alias ksysrmpol='kubectl --namespace=kube-system delete pods -l'
alias kgdepl='kubectl get deployment -l'
alias ksysgdepl='kubectl --namespace=kube-system get deployment -l'
alias kddepl='kubectl describe deployment -l'
alias ksysddepl='kubectl --namespace=kube-system describe deployment -l'
alias krmdepl='kubectl delete deployment -l'
alias ksysrmdepl='kubectl --namespace=kube-system delete deployment -l'
alias kgstsl='kubectl get statefulset -l'
alias ksysgstsl='kubectl --namespace=kube-system get statefulset -l'
alias kdstsl='kubectl describe statefulset -l'
alias ksysdstsl='kubectl --namespace=kube-system describe statefulset -l'
alias krmstsl='kubectl delete statefulset -l'
alias ksysrmstsl='kubectl --namespace=kube-system delete statefulset -l'
alias kgsvcl='kubectl get service -l'
alias ksysgsvcl='kubectl --namespace=kube-system get service -l'
alias kdsvcl='kubectl describe service -l'
alias ksysdsvcl='kubectl --namespace=kube-system describe service -l'
alias krmsvcl='kubectl delete service -l'
alias ksysrmsvcl='kubectl --namespace=kube-system delete service -l'
alias kgingl='kubectl get ingress -l'
alias ksysgingl='kubectl --namespace=kube-system get ingress -l'
alias kdingl='kubectl describe ingress -l'
alias ksysdingl='kubectl --namespace=kube-system describe ingress -l'
alias krmingl='kubectl delete ingress -l'
alias ksysrmingl='kubectl --namespace=kube-system delete ingress -l'
alias kgcml='kubectl get configmap -l'
alias ksysgcml='kubectl --namespace=kube-system get configmap -l'
alias kdcml='kubectl describe configmap -l'
alias ksysdcml='kubectl --namespace=kube-system describe configmap -l'
alias krmcml='kubectl delete configmap -l'
alias ksysrmcml='kubectl --namespace=kube-system delete configmap -l'
alias kgsecl='kubectl get secret -l'
alias ksysgsecl='kubectl --namespace=kube-system get secret -l'
alias kdsecl='kubectl describe secret -l'
alias ksysdsecl='kubectl --namespace=kube-system describe secret -l'
alias krmsecl='kubectl delete secret -l'
alias ksysrmsecl='kubectl --namespace=kube-system delete secret -l'
alias kgnol='kubectl get nodes -l'
alias kdnol='kubectl describe nodes -l'
alias kgnsl='kubectl get namespaces -l'
alias kdnsl='kubectl describe namespaces -l'
alias krmnsl='kubectl delete namespaces -l'
alias kgoyamll='kubectl get -o=yaml -l'
alias ksysgoyamll='kubectl --namespace=kube-system get -o=yaml -l'
alias kgpooyamll='kubectl get pods -o=yaml -l'
alias ksysgpooyamll='kubectl --namespace=kube-system get pods -o=yaml -l'
alias kgdepoyamll='kubectl get deployment -o=yaml -l'
alias ksysgdepoyamll='kubectl --namespace=kube-system get deployment -o=yaml -l'
alias kgstsoyamll='kubectl get statefulset -o=yaml -l'
alias ksysgstsoyamll='kubectl --namespace=kube-system get statefulset -o=yaml -l'
alias kgsvcoyamll='kubectl get service -o=yaml -l'
alias ksysgsvcoyamll='kubectl --namespace=kube-system get service -o=yaml -l'
alias kgingoyamll='kubectl get ingress -o=yaml -l'
alias ksysgingoyamll='kubectl --namespace=kube-system get ingress -o=yaml -l'
alias kgcmoyamll='kubectl get configmap -o=yaml -l'
alias ksysgcmoyamll='kubectl --namespace=kube-system get configmap -o=yaml -l'
alias kgsecoyamll='kubectl get secret -o=yaml -l'
alias ksysgsecoyamll='kubectl --namespace=kube-system get secret -o=yaml -l'
alias kgnooyamll='kubectl get nodes -o=yaml -l'
alias kgnsoyamll='kubectl get namespaces -o=yaml -l'
alias kgowidel='kubectl get -o=wide -l'
alias ksysgowidel='kubectl --namespace=kube-system get -o=wide -l'
alias kgpoowidel='kubectl get pods -o=wide -l'
alias ksysgpoowidel='kubectl --namespace=kube-system get pods -o=wide -l'
alias kgdepowidel='kubectl get deployment -o=wide -l'
alias ksysgdepowidel='kubectl --namespace=kube-system get deployment -o=wide -l'
alias kgstsowidel='kubectl get statefulset -o=wide -l'
alias ksysgstsowidel='kubectl --namespace=kube-system get statefulset -o=wide -l'
alias kgsvcowidel='kubectl get service -o=wide -l'
alias ksysgsvcowidel='kubectl --namespace=kube-system get service -o=wide -l'
alias kgingowidel='kubectl get ingress -o=wide -l'
alias ksysgingowidel='kubectl --namespace=kube-system get ingress -o=wide -l'
alias kgcmowidel='kubectl get configmap -o=wide -l'
alias ksysgcmowidel='kubectl --namespace=kube-system get configmap -o=wide -l'
alias kgsecowidel='kubectl get secret -o=wide -l'
alias ksysgsecowidel='kubectl --namespace=kube-system get secret -o=wide -l'
alias kgnoowidel='kubectl get nodes -o=wide -l'
alias kgnsowidel='kubectl get namespaces -o=wide -l'
alias kgojsonl='kubectl get -o=json -l'
alias ksysgojsonl='kubectl --namespace=kube-system get -o=json -l'
alias kgpoojsonl='kubectl get pods -o=json -l'
alias ksysgpoojsonl='kubectl --namespace=kube-system get pods -o=json -l'
alias kgdepojsonl='kubectl get deployment -o=json -l'
alias ksysgdepojsonl='kubectl --namespace=kube-system get deployment -o=json -l'
alias kgstsojsonl='kubectl get statefulset -o=json -l'
alias ksysgstsojsonl='kubectl --namespace=kube-system get statefulset -o=json -l'
alias kgsvcojsonl='kubectl get service -o=json -l'
alias ksysgsvcojsonl='kubectl --namespace=kube-system get service -o=json -l'
alias kgingojsonl='kubectl get ingress -o=json -l'
alias ksysgingojsonl='kubectl --namespace=kube-system get ingress -o=json -l'
alias kgcmojsonl='kubectl get configmap -o=json -l'
alias ksysgcmojsonl='kubectl --namespace=kube-system get configmap -o=json -l'
alias kgsecojsonl='kubectl get secret -o=json -l'
alias ksysgsecojsonl='kubectl --namespace=kube-system get secret -o=json -l'
alias kgnoojsonl='kubectl get nodes -o=json -l'
alias kgnsojsonl='kubectl get namespaces -o=json -l'
alias kgsll='kubectl get --show-labels -l'
alias ksysgsll='kubectl --namespace=kube-system get --show-labels -l'
alias kgposll='kubectl get pods --show-labels -l'
alias ksysgposll='kubectl --namespace=kube-system get pods --show-labels -l'
alias kgdepsll='kubectl get deployment --show-labels -l'
alias ksysgdepsll='kubectl --namespace=kube-system get deployment --show-labels -l'
alias kgstssll='kubectl get statefulset --show-labels -l'
alias ksysgstssll='kubectl --namespace=kube-system get statefulset --show-labels -l'
alias kgsvcsll='kubectl get service --show-labels -l'
alias ksysgsvcsll='kubectl --namespace=kube-system get service --show-labels -l'
alias kgingsll='kubectl get ingress --show-labels -l'
alias ksysgingsll='kubectl --namespace=kube-system get ingress --show-labels -l'
alias kgcmsll='kubectl get configmap --show-labels -l'
alias ksysgcmsll='kubectl --namespace=kube-system get configmap --show-labels -l'
alias kgsecsll='kubectl get secret --show-labels -l'
alias ksysgsecsll='kubectl --namespace=kube-system get secret --show-labels -l'
alias kgnosll='kubectl get nodes --show-labels -l'
alias kgnssll='kubectl get namespaces --show-labels -l'
alias kgwl='kubectl get --watch -l'
alias ksysgwl='kubectl --namespace=kube-system get --watch -l'
alias kgpowl='kubectl get pods --watch -l'
alias ksysgpowl='kubectl --namespace=kube-system get pods --watch -l'
alias kgdepwl='kubectl get deployment --watch -l'
alias ksysgdepwl='kubectl --namespace=kube-system get deployment --watch -l'
alias kgstswl='kubectl get statefulset --watch -l'
alias ksysgstswl='kubectl --namespace=kube-system get statefulset --watch -l'
alias kgsvcwl='kubectl get service --watch -l'
alias ksysgsvcwl='kubectl --namespace=kube-system get service --watch -l'
alias kgingwl='kubectl get ingress --watch -l'
alias ksysgingwl='kubectl --namespace=kube-system get ingress --watch -l'
alias kgcmwl='kubectl get configmap --watch -l'
alias ksysgcmwl='kubectl --namespace=kube-system get configmap --watch -l'
alias kgsecwl='kubectl get secret --watch -l'
alias ksysgsecwl='kubectl --namespace=kube-system get secret --watch -l'
alias kgnowl='kubectl get nodes --watch -l'
alias kgnswl='kubectl get namespaces --watch -l'
alias kgowidesll='kubectl get -o=wide --show-labels -l'
alias ksysgowidesll='kubectl --namespace=kube-system get -o=wide --show-labels -l'
alias kgpoowidesll='kubectl get pods -o=wide --show-labels -l'
alias ksysgpoowidesll='kubectl --namespace=kube-system get pods -o=wide --show-labels -l'
alias kgdepowidesll='kubectl get deployment -o=wide --show-labels -l'
alias ksysgdepowidesll='kubectl --namespace=kube-system get deployment -o=wide --show-labels -l'
alias kgstsowidesll='kubectl get statefulset -o=wide --show-labels -l'
alias ksysgstsowidesll='kubectl --namespace=kube-system get statefulset -o=wide --show-labels -l'
alias kgsvcowidesll='kubectl get service -o=wide --show-labels -l'
alias ksysgsvcowidesll='kubectl --namespace=kube-system get service -o=wide --show-labels -l'
alias kgingowidesll='kubectl get ingress -o=wide --show-labels -l'
alias ksysgingowidesll='kubectl --namespace=kube-system get ingress -o=wide --show-labels -l'
alias kgcmowidesll='kubectl get configmap -o=wide --show-labels -l'
alias ksysgcmowidesll='kubectl --namespace=kube-system get configmap -o=wide --show-labels -l'
alias kgsecowidesll='kubectl get secret -o=wide --show-labels -l'
alias ksysgsecowidesll='kubectl --namespace=kube-system get secret -o=wide --show-labels -l'
alias kgnoowidesll='kubectl get nodes -o=wide --show-labels -l'
alias kgnsowidesll='kubectl get namespaces -o=wide --show-labels -l'
alias kgslowidel='kubectl get --show-labels -o=wide -l'
alias ksysgslowidel='kubectl --namespace=kube-system get --show-labels -o=wide -l'
alias kgposlowidel='kubectl get pods --show-labels -o=wide -l'
alias ksysgposlowidel='kubectl --namespace=kube-system get pods --show-labels -o=wide -l'
alias kgdepslowidel='kubectl get deployment --show-labels -o=wide -l'
alias ksysgdepslowidel='kubectl --namespace=kube-system get deployment --show-labels -o=wide -l'
alias kgstsslowidel='kubectl get statefulset --show-labels -o=wide -l'
alias ksysgstsslowidel='kubectl --namespace=kube-system get statefulset --show-labels -o=wide -l'
alias kgsvcslowidel='kubectl get service --show-labels -o=wide -l'
alias ksysgsvcslowidel='kubectl --namespace=kube-system get service --show-labels -o=wide -l'
alias kgingslowidel='kubectl get ingress --show-labels -o=wide -l'
alias ksysgingslowidel='kubectl --namespace=kube-system get ingress --show-labels -o=wide -l'
alias kgcmslowidel='kubectl get configmap --show-labels -o=wide -l'
alias ksysgcmslowidel='kubectl --namespace=kube-system get configmap --show-labels -o=wide -l'
alias kgsecslowidel='kubectl get secret --show-labels -o=wide -l'
alias ksysgsecslowidel='kubectl --namespace=kube-system get secret --show-labels -o=wide -l'
alias kgnoslowidel='kubectl get nodes --show-labels -o=wide -l'
alias kgnsslowidel='kubectl get namespaces --show-labels -o=wide -l'
alias kgslwl='kubectl get --show-labels --watch -l'
alias ksysgslwl='kubectl --namespace=kube-system get --show-labels --watch -l'
alias kgposlwl='kubectl get pods --show-labels --watch -l'
alias ksysgposlwl='kubectl --namespace=kube-system get pods --show-labels --watch -l'
alias kgdepslwl='kubectl get deployment --show-labels --watch -l'
alias ksysgdepslwl='kubectl --namespace=kube-system get deployment --show-labels --watch -l'
alias kgstsslwl='kubectl get statefulset --show-labels --watch -l'
alias ksysgstsslwl='kubectl --namespace=kube-system get statefulset --show-labels --watch -l'
alias kgsvcslwl='kubectl get service --show-labels --watch -l'
alias ksysgsvcslwl='kubectl --namespace=kube-system get service --show-labels --watch -l'
alias kgingslwl='kubectl get ingress --show-labels --watch -l'
alias ksysgingslwl='kubectl --namespace=kube-system get ingress --show-labels --watch -l'
alias kgcmslwl='kubectl get configmap --show-labels --watch -l'
alias ksysgcmslwl='kubectl --namespace=kube-system get configmap --show-labels --watch -l'
alias kgsecslwl='kubectl get secret --show-labels --watch -l'
alias ksysgsecslwl='kubectl --namespace=kube-system get secret --show-labels --watch -l'
alias kgnoslwl='kubectl get nodes --show-labels --watch -l'
alias kgnsslwl='kubectl get namespaces --show-labels --watch -l'
alias kgwsll='kubectl get --watch --show-labels -l'
alias ksysgwsll='kubectl --namespace=kube-system get --watch --show-labels -l'
alias kgpowsll='kubectl get pods --watch --show-labels -l'
alias ksysgpowsll='kubectl --namespace=kube-system get pods --watch --show-labels -l'
alias kgdepwsll='kubectl get deployment --watch --show-labels -l'
alias ksysgdepwsll='kubectl --namespace=kube-system get deployment --watch --show-labels -l'
alias kgstswsll='kubectl get statefulset --watch --show-labels -l'
alias ksysgstswsll='kubectl --namespace=kube-system get statefulset --watch --show-labels -l'
alias kgsvcwsll='kubectl get service --watch --show-labels -l'
alias ksysgsvcwsll='kubectl --namespace=kube-system get service --watch --show-labels -l'
alias kgingwsll='kubectl get ingress --watch --show-labels -l'
alias ksysgingwsll='kubectl --namespace=kube-system get ingress --watch --show-labels -l'
alias kgcmwsll='kubectl get configmap --watch --show-labels -l'
alias ksysgcmwsll='kubectl --namespace=kube-system get configmap --watch --show-labels -l'
alias kgsecwsll='kubectl get secret --watch --show-labels -l'
alias ksysgsecwsll='kubectl --namespace=kube-system get secret --watch --show-labels -l'
alias kgnowsll='kubectl get nodes --watch --show-labels -l'
alias kgnswsll='kubectl get namespaces --watch --show-labels -l'
alias kexn='kubectl exec -i -t --namespace'
alias klon='kubectl logs -f --namespace'
alias kpfn='kubectl port-forward --namespace'
alias kgn='kubectl get --namespace'
alias kdn='kubectl describe --namespace'
alias krmn='kubectl delete --namespace'
alias kgpon='kubectl get pods --namespace'
alias kdpon='kubectl describe pods --namespace'
alias krmpon='kubectl delete pods --namespace'
alias kgdepn='kubectl get deployment --namespace'
alias kddepn='kubectl describe deployment --namespace'
alias krmdepn='kubectl delete deployment --namespace'
alias kgstsn='kubectl get statefulset --namespace'
alias kdstsn='kubectl describe statefulset --namespace'
alias krmstsn='kubectl delete statefulset --namespace'
alias kgsvcn='kubectl get service --namespace'
alias kdsvcn='kubectl describe service --namespace'
alias krmsvcn='kubectl delete service --namespace'
alias kgingn='kubectl get ingress --namespace'
alias kdingn='kubectl describe ingress --namespace'
alias krmingn='kubectl delete ingress --namespace'
alias kgcmn='kubectl get configmap --namespace'
alias kdcmn='kubectl describe configmap --namespace'
alias krmcmn='kubectl delete configmap --namespace'
alias kgsecn='kubectl get secret --namespace'
alias kdsecn='kubectl describe secret --namespace'
alias krmsecn='kubectl delete secret --namespace'
alias kgoyamln='kubectl get -o=yaml --namespace'
alias kgpooyamln='kubectl get pods -o=yaml --namespace'
alias kgdepoyamln='kubectl get deployment -o=yaml --namespace'
alias kgstsoyamln='kubectl get statefulset -o=yaml --namespace'
alias kgsvcoyamln='kubectl get service -o=yaml --namespace'
alias kgingoyamln='kubectl get ingress -o=yaml --namespace'
alias kgcmoyamln='kubectl get configmap -o=yaml --namespace'
alias kgsecoyamln='kubectl get secret -o=yaml --namespace'
alias kgowiden='kubectl get -o=wide --namespace'
alias kgpoowiden='kubectl get pods -o=wide --namespace'
alias kgdepowiden='kubectl get deployment -o=wide --namespace'
alias kgstsowiden='kubectl get statefulset -o=wide --namespace'
alias kgsvcowiden='kubectl get service -o=wide --namespace'
alias kgingowiden='kubectl get ingress -o=wide --namespace'
alias kgcmowiden='kubectl get configmap -o=wide --namespace'
alias kgsecowiden='kubectl get secret -o=wide --namespace'
alias kgojsonn='kubectl get -o=json --namespace'
alias kgpoojsonn='kubectl get pods -o=json --namespace'
alias kgdepojsonn='kubectl get deployment -o=json --namespace'
alias kgstsojsonn='kubectl get statefulset -o=json --namespace'
alias kgsvcojsonn='kubectl get service -o=json --namespace'
alias kgingojsonn='kubectl get ingress -o=json --namespace'
alias kgcmojsonn='kubectl get configmap -o=json --namespace'
alias kgsecojsonn='kubectl get secret -o=json --namespace'
alias kgsln='kubectl get --show-labels --namespace'
alias kgposln='kubectl get pods --show-labels --namespace'
alias kgdepsln='kubectl get deployment --show-labels --namespace'
alias kgstssln='kubectl get statefulset --show-labels --namespace'
alias kgsvcsln='kubectl get service --show-labels --namespace'
alias kgingsln='kubectl get ingress --show-labels --namespace'
alias kgcmsln='kubectl get configmap --show-labels --namespace'
alias kgsecsln='kubectl get secret --show-labels --namespace'
alias kgwn='kubectl get --watch --namespace'
alias kgpown='kubectl get pods --watch --namespace'
alias kgdepwn='kubectl get deployment --watch --namespace'
alias kgstswn='kubectl get statefulset --watch --namespace'
alias kgsvcwn='kubectl get service --watch --namespace'
alias kgingwn='kubectl get ingress --watch --namespace'
alias kgcmwn='kubectl get configmap --watch --namespace'
alias kgsecwn='kubectl get secret --watch --namespace'
alias kgowidesln='kubectl get -o=wide --show-labels --namespace'
alias kgpoowidesln='kubectl get pods -o=wide --show-labels --namespace'
alias kgdepowidesln='kubectl get deployment -o=wide --show-labels --namespace'
alias kgstsowidesln='kubectl get statefulset -o=wide --show-labels --namespace'
alias kgsvcowidesln='kubectl get service -o=wide --show-labels --namespace'
alias kgingowidesln='kubectl get ingress -o=wide --show-labels --namespace'
alias kgcmowidesln='kubectl get configmap -o=wide --show-labels --namespace'
alias kgsecowidesln='kubectl get secret -o=wide --show-labels --namespace'
alias kgslowiden='kubectl get --show-labels -o=wide --namespace'
alias kgposlowiden='kubectl get pods --show-labels -o=wide --namespace'
alias kgdepslowiden='kubectl get deployment --show-labels -o=wide --namespace'
alias kgstsslowiden='kubectl get statefulset --show-labels -o=wide --namespace'
alias kgsvcslowiden='kubectl get service --show-labels -o=wide --namespace'
alias kgingslowiden='kubectl get ingress --show-labels -o=wide --namespace'
alias kgcmslowiden='kubectl get configmap --show-labels -o=wide --namespace'
alias kgsecslowiden='kubectl get secret --show-labels -o=wide --namespace'
alias kgslwn='kubectl get --show-labels --watch --namespace'
alias kgposlwn='kubectl get pods --show-labels --watch --namespace'
alias kgdepslwn='kubectl get deployment --show-labels --watch --namespace'
alias kgstsslwn='kubectl get statefulset --show-labels --watch --namespace'
alias kgsvcslwn='kubectl get service --show-labels --watch --namespace'
alias kgingslwn='kubectl get ingress --show-labels --watch --namespace'
alias kgcmslwn='kubectl get configmap --show-labels --watch --namespace'
alias kgsecslwn='kubectl get secret --show-labels --watch --namespace'
alias kgwsln='kubectl get --watch --show-labels --namespace'
alias kgpowsln='kubectl get pods --watch --show-labels --namespace'
alias kgdepwsln='kubectl get deployment --watch --show-labels --namespace'
alias kgstswsln='kubectl get statefulset --watch --show-labels --namespace'
alias kgsvcwsln='kubectl get service --watch --show-labels --namespace'
alias kgingwsln='kubectl get ingress --watch --show-labels --namespace'
alias kgcmwsln='kubectl get configmap --watch --show-labels --namespace'
alias kgsecwsln='kubectl get secret --watch --show-labels --namespace'
"
JWMw55rM,Untitled,lemansky,HTML,Monday 4th of December 2023 07:12:50 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Canvas Rotation</title>
  <style>
    canvas{
      background: black;
    }
  </style>
</head>
<body>
  <canvas width=""600"" height=""400"" ></canvas>

  <script>

    const canvas = document.querySelector('canvas');
    const ctx = canvas.getContext(""2d"");


    let rotateRectangle = (x, y, width, height, angle) => {
      let radians = angle * (Math.PI / 180);
      let centerX = x + width / 2;
      let centerY = y + height / 2;

      let newX1 = Math.cos(radians) * (x - centerX) - Math.sin(radians) * (y - centerY) + centerX;
      let newY1 = Math.sin(radians) * (x - centerX) + Math.cos(radians) * (y - centerY) + centerY;

      let newX2 = Math.cos(radians) * (x + width - centerX) - Math.sin(radians) * (y - centerY) + centerX;
      let newY2 = Math.sin(radians) * (x + width - centerX) + Math.cos(radians) * (y - centerY) + centerY;

      let newX3 = Math.cos(radians) * (x + width - centerX) - Math.sin(radians) * (y + height - centerY) + centerX;
      let newY3 = Math.sin(radians) * (x + width - centerX) + Math.cos(radians) * (y + height - centerY) + centerY;

      let newX4 = Math.cos(radians) * (x - centerX) - Math.sin(radians) * (y + height - centerY) + centerX;
      let newY4 = Math.sin(radians) * (x - centerX) + Math.cos(radians) * (y + height - centerY) + centerY;

      return { newX1, newY1, newX2, newY2, newX3, newY3, newX4, newY4 };
    }

    ctx.fillStyle = ""blue"";
    ctx.fillRect(100, 100, 100, 20);

    let originalX = 100;
    let originalY = 100;
    let originalWidth = 100;
    let originalHeight = 20;
    let rotationAngle = 30;

    let rotatedPositions = rotateRectangle(originalX, originalY, originalWidth, originalHeight, rotationAngle);

    ctx.fillStyle = ""red"";
    ctx.beginPath();
    ctx.moveTo(rotatedPositions.newX1, rotatedPositions.newY1);
    ctx.lineTo(rotatedPositions.newX2, rotatedPositions.newY2);
    ctx.lineTo(rotatedPositions.newX3, rotatedPositions.newY3);
    ctx.lineTo(rotatedPositions.newX4, rotatedPositions.newY4);
    ctx.closePath();
    ctx.fill();

  
  </script>
</body>
</html>"
2tgherqg,Untitled,lemansky,HTML,Monday 4th of December 2023 07:11:03 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Canvas Rotation</title>
  <style>
    canvas{
      background: black;
    }
  </style>
</head>
<body>
  <canvas width=""600"" height=""400"" ></canvas>

  <script>

    const canvas = document.querySelector('canvas');
    const ctx = canvas.getContext(""2d"");


    let drawRotatedRect = (x, y, width, height, rotation) => {
      ctx.save(); 
      ctx.translate(x + width / 2, y + height / 2);
      ctx.rotate(rotation * Math.PI / 180);
      ctx.fillRect(-width / 2, -height / 2, width, height);
      ctx.restore();
    }
    ctx.fillStyle = ""blue"";
    ctx.fillRect(100, 100, 100, 20);

    ctx.fillStyle = ""red"";
    drawRotatedRect(100, 100, 100, 20, 30);

  </script>
</body>
</html>"
X2c41izd,XStore fix for bid input,wpgenie,PHP,Monday 4th of December 2023 06:27:00 AM CDT,"<?php
/**
 * Auction bid form template
 *
 * template should be copied to /xstore-child/woocommerce/single-product/auction-bid-form.php 
 *
*/
if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly
}
​
global $product, $post;
​
if ( ! ( $product && $product->get_type() == 'auction' ) ) {
	return;
}
$current_user     = wp_get_current_user();
$product_id       = $product->get_id();
$user_max_bid     = $product->get_user_max_bid( $product_id, $current_user->ID );
$max_min_bid_text = $product->get_auction_type() == 'reverse' ? esc_html__( 'Your min bid is', 'wc_simple_auctions' ) : esc_html__( 'Your max bid is', 'wc_simple_auctions' );
?>
​
<?php if ( ( $product->is_closed() === false ) and ( $product->is_started() === true ) ) : ?>	
​
	<?php do_action( 'woocommerce_before_bid_form' ); ?>
​
	<form class=""auction_form cart"" method=""post"" enctype='multipart/form-data' data-product_id=""<?php echo esc_attr( $product_id ); ?>"">
​
		<?php do_action( 'woocommerce_before_bid_button' ); ?>
​
		<input type=""hidden"" name=""bid"" value=""<?php echo esc_attr( $product_id ); ?>"" />	
		
		<div class=""quantity buttons_added"">
​
			<input type=""button"" value=""+"" class=""plusauction"" />
​
			<input type=""text"" name=""bid_value"" 
				data-auction-id=""<?php echo esc_attr( $product_id ); ?>"" 
			<?php if ( $product->get_auction_sealed() != 'yes' ) { ?> 
				value=""<?php echo esc_attr( number_format( $product->bid_value(), wc_get_price_decimals() == 0 ? 2 : wc_get_price_decimals() , wc_get_price_decimal_separator(), wc_get_price_thousand_separator() ) ); ?>""
			<?php } ?>
​
			<?php 
			if ($product->get_auction_sealed() != 'yes'){
				if ( $product->get_auction_type() == 'reverse' ) { ?>
					max=""<?php echo esc_attr( number_format( $product->bid_value(), wc_get_price_decimals(), wc_get_price_decimal_separator(), wc_get_price_thousand_separator() ) ); ?>""
				<?php } else { ?>
					min=""<?php echo esc_attr( number_format( $product->bid_value(), wc_get_price_decimals(), wc_get_price_decimal_separator(), wc_get_price_thousand_separator() ) ); ?>""
				<?php } ?>
			<?php } ?>
				step=""any"" 
				size=""<?php echo strlen( $product->get_curent_bid() ) + 2; ?>"" 
				title=""bid"" 
				class=""input-text qty bid text left"" 
			/>
			<input type=""button"" value=""-"" class=""minusauction"" />
		</div>
​
		<button type=""submit"" class=""bid_button button alt""><?php echo apply_filters( 'bid_text', esc_html__( 'Bid', 'wc_simple_auctions' ), $product ); ?></button>
		
		<input type=""hidden"" name=""place-bid"" value=""<?php echo esc_attr( $product_id ); ?>"" />
		<input type=""hidden"" name=""product_id"" value=""<?php echo esc_attr( $product_id ); ?>"" />
​
		<?php if ( is_user_logged_in() ) { ?>
			<input type=""hidden"" name=""user_id"" value=""<?php echo get_current_user_id(); ?>"" />
		<?php } ?> 
​
		<?php do_action( 'woocommerce_after_bid_button' ); ?>
​
	</form>	
	<script type=""text/javascript"">
		jQuery(document).on(""click"", "".auction_form .plusauction,.auction_form .minusauction"", function() {
			console.log('click on action');
			var t = jQuery(this).closest("".quantity"").find(""input[name=bid_value]""),
				a = parseFloat(jQuery(this).parents('.auction_form').find('.qty').autoNumeric('get')),
				n = parseFloat(t.attr(""max"")),
				s = parseFloat(t.attr(""min"")),
				vb = '',
				e = t.attr(""step"");
				a && """" !== a && ""NaN"" !== a || (a = 0), ("""" === n || ""NaN"" === n) && (n = """"), ("""" === s || ""NaN"" === s) && (s = 0), (""any"" === e || """" === e || void 0 === e || ""NaN"" === parseFloat(e)) && (e = 1),
				jQuery(this).is("".plusauction"") ? t.val(number_format(n && (n == a || a > n) ? n : a + parseFloat(e) )) : s && (s == a || s > a) ? t.val(number_format( s ) ) : a > 0 && t.val( number_format (a - parseFloat(e) ) ),
				t.trigger(""change""),
				$('.auction_form .qty').autoNumeric('update');
​
		});
		function number_format (number , decimals = autoNumericdata.decimalPlacesOverride, dec_point = autoNumericdata.decimalCharacter, thousands_sep = autoNumericdata.digitGroupSeparator) {
	    // Strip all characters but numerical ones.
	    number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
	    var n = !isFinite(+number) ? 0 : +number,
	        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
	        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
	        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
	        s = '',
	        toFixedFix = function (n, prec) {
	            var k = Math.pow(10, prec);
	            return '' + Math.round(n * k) / k;
	        };
	    // Fix for IE parseFloat(0.55).toFixed(0) = 0;
	    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
	    if (s[0].length > 3) {
	        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
	    }
	    if ((s[1] || '').length < prec) {
	        s[1] = s[1] || '';
	        s[1] += new Array(prec - s[1].length + 1).join('0');
	    }
	    return s.join(dec);
	}
	</script>
	<?php do_action( 'woocommerce_after_bid_form' ); ?>		
​
<?php endif;"
qCZyMX4v,СПРИНТ № 4 | Перегрузка операторов | Урок 5: Перегрузка операций сравнения,chevengur,C++,Monday 4th of December 2023 06:13:32 AM CDT,"#include <iostream>
#include <numeric>

using namespace std;

class Rational {
public:
    Rational() = default;

    Rational(int value)
        : numerator_(value)
        , denominator_(1) {
    }

    Rational(int numerator, int denominator)
        : numerator_(numerator)
        , denominator_(denominator)
    {
        Normalize();
    }

    int Numerator() const {
        return numerator_;
    }

    int Denominator() const {
        return denominator_;
    }

    Rational& operator+=(Rational right) {
        numerator_ = numerator_ * right.denominator_ + right.numerator_ * denominator_;
        denominator_ *= right.denominator_;
        Normalize();
        return *this;
    }

    Rational& operator-=(Rational right) {
        numerator_ = numerator_ * right.denominator_ - right.numerator_ * denominator_;
        denominator_ *= right.denominator_;
        Normalize();
        return *this;
    }

    Rational& operator*=(Rational right) {
        numerator_ *= right.numerator_;
        denominator_ *= right.denominator_;
        Normalize();
        return *this;
    }

    Rational& operator/=(Rational right) {
        numerator_ *= right.denominator_;
        denominator_ *= right.numerator_;
        Normalize();
        return *this;
    }

private:
    void Normalize() {
        if (denominator_ < 0) {
            numerator_ = -numerator_;
            denominator_ = -denominator_;
        }
        int n = gcd(numerator_, denominator_);
        numerator_ /= n;
        denominator_ /= n;
    }

    int numerator_ = 0;
    int denominator_ = 1;
};

ostream& operator<<(ostream& output, Rational rational) {
    return output << rational.Numerator() << '/' << rational.Denominator();
}

istream& operator>>(istream& input, Rational& rational) {
    int numerator;
    int denominator;
    char slash;
    if ((input >> numerator) && (input >> slash) && (slash == '/') && (input >> denominator)) {
        rational = Rational{numerator, denominator};
    }
    return input;
}

Rational operator+(Rational value) {
    return value;
}

Rational operator-(Rational value) {
    return {-value.Numerator(), value.Denominator()};
}

Rational operator+(Rational left, Rational right) {
    return left += right;
}

Rational operator-(Rational left, Rational right) {
    return left -= right;
}

Rational operator*(Rational left, Rational right) {
    return left *= right;
}

Rational operator/(Rational left, Rational right) {
    return left /= right;
}

bool operator==(Rational left, Rational right){
    return (left.Numerator() == right.Numerator() && 
            left.Denominator() == right.Denominator());
}
bool operator!=(Rational left, Rational right){
    return !(left == right);
}
bool operator>(Rational left, Rational right){
    return (left.Numerator() * right.Denominator() > 
            right.Numerator() * left.Denominator());
}
bool operator<(Rational left, Rational right){
   return !(left > right);
}
bool operator<=(Rational left, Rational right) {
    return left<right || left == right;
}
    
bool operator>=(Rational left, Rational right) {
    return !(left<right || left == right);
}"
vsrYnqUf,Untitled,gh0stless,C,Monday 4th of December 2023 06:05:12 AM CDT,"/**************************************************************************************************
** Eingabe/Buttons                                                                               **
***************************************************************************************************/
bool      setTimeMode = false; // Variable für den Uhrzeit-Einstellmodus
boolean   EQMode = false;
uint8_t   settingStep = 0;      // Schritt im Einstellmodus
uint16_t  hourValue = 0;
uint16_t  minuteValue = 0;
uint16_t  dayValue = 1;
uint16_t  monthValue = 1;
uint16_t  yearValue = 2023;
uint8_t   buttons = 0;
bool      NewPrint = true;
bool      NewPrintRTC = true;
uint16_t  LastNum = 0;
bool      alsoSetRTC = false;
uint8_t   buttonsDelay = 0;

------------------------------------------

//Tastatur
  buttonsDelay++;
  if (buttonsDelay == 10) {
    buttons = lcd.readButtons();
    buttonsDelay = 0;
  }
  if ((!setTimeMode) && (!EQMode)){
    if (buttons) {
      if (buttons & BUTTON_UP) {
        enterSetTimeMode(); // Uhrzeit-Einstellmodus starten
      }
      if (buttons & BUTTON_DOWN) {
        sayTime();
      }
      if (buttons & BUTTON_LEFT) {
        if (!mp3Busy){
          //myDFPlayer.volume(20);  //Set volume value. From 0 to 30
          myDFPlayer.next();  //Play the first mp3
        }
      }
      if (buttons & BUTTON_RIGHT) {
        enterEQMode();
      }
      if (buttons & BUTTON_SELECT) {
        ErrorMode = false;
      }
      buttons = 0;
    }
  }

  if (setTimeMode) handleSetTimeMode();
  if (EQMode) handleEQMode();

"
ypQ0XCvi,data772,TestGuy1,JSON,Monday 4th of December 2023 06:00:09 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'dbbce596990dce0e9013d97e1caf481d5b982b658407b3c5cba47d389da8a8a47ba698554ac09534d0192d6f4e00e42adbc7985efdf0e2bbc559fa97de6a0d43ea75cd84d0f6236571cf41c36cdef4afe68000235924d0ae63e41ec9b31ddb39f89cc85c11f8cd3fb131f12413dab7e136ba7a0b6a92908fa4f38e3925a49f86',
  otherdata: [
    'b8b5dbf333196bf8bbc773fbdd193c13',
    'ee7a98037a27b84e69f9ef771ddf9886',
    'b02eab8aedd54ca207fef1d4371c0e35',
    '3e0303edf40983d7588347957bbc7914',
    'd940c246b0eb8d57b5f2bd02cc5f93d4',
    'dc943af2583d7cf2fc749adcf02ff2d4',
    '7e883f634c85917ad9b37896d04512d0',
    '59050b528cf871877926e0477a99f1fd'
  ]
}"
AnpXXrBu,Untitled,gh0stless,C,Monday 4th of December 2023 05:50:01 AM CDT,"/**************************************************************************************************
** Menue functions                                                                             **
***************************************************************************************************/
bool inputNumber(uint16_t &value, uint16_t maxNumber) {
  uint16_t num = value;
  bool selectPressed = false;
  if (buttons){
    if (buttons  & BUTTON_SELECT) {
      selectPressed = true;
    }
    if (buttons  & BUTTON_UP) {
      num = (num + 1) % (maxNumber + 1);
    }
    if (buttons  & BUTTON_DOWN) {
      num = (num - 1 + maxNumber + 1) % (maxNumber + 1);
    }
    if (buttons  & BUTTON_RIGHT) {
      if (!alsoSetRTC){
        alsoSetRTC = true;
        NewPrintRTC = true;
      }
      else {
        alsoSetRTC = false;
        NewPrintRTC = true;
      }
      if (NewPrintRTC){
        if (alsoSetRTC){
          lcd.setCursor(12, 0);
          lcd.print(""RTC"");
        }
        else {
          lcd.setCursor(12, 0);
          lcd.print(""   "");
        }
        NewPrintRTC = false;
      }
    }
    buttons = 0;
  }
  if (LastNum != num){
    lcd.setCursor(10, 1);
    lcd.print(""       ""); // Vorherige Eingabe löschen
    lcd.setCursor(10, 1);
    lcd.print(num);
  }
  value = num; // Aktualisiere den Wert
  LastNum = num;
  return selectPressed;
}

void enterSetTimeMode() {
  setTimeMode = true;
  settingStep = 0;
  hourValue = hour();
  minuteValue = minute();
  dayValue = day();
  monthValue = month();
  yearValue = year();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Neue Uhrzeit:""); 
  //handleSetTimeMode();
}

void handleSetTimeMode() {
  lcd.setCursor(0, 1);
  if (NewPrint) lcd.print(""       ""); // Vorherige Eingabe löschen
  lcd.setCursor(0, 1);
  switch (settingStep) {
    case 0:
      if (NewPrint) {lcd.print(""Jahr: ""); NewPrint = false;}
      if (inputNumber(yearValue, 2100)) {
        settingStep++; // Weiter zum nächsten Schritt
        NewPrint = true;
      }
      break;

    case 1:
      if (NewPrint) {lcd.print(""Monat: ""); NewPrint = false;}
      if (inputNumber(monthValue, 12)) {
        settingStep++; // Weiter zum nächsten Schritt
        NewPrint = true;
      }
      break;

    case 2:
      if (NewPrint) {lcd.print(""Tag: ""); NewPrint = false;}
      if (inputNumber(dayValue, 31)) {
        settingStep++; // Weiter zum nächsten Schritt
        NewPrint = true;
      }
      break;

    case 3:
      if (NewPrint) {lcd.print(""Stunde: ""); NewPrint = false;}
      if (inputNumber(hourValue, 24)) {
        settingStep++; // Weiter zum nächsten Schritt
        NewPrint = true;
      }
      break;

    case 4:
      if (NewPrint) {lcd.print(""Minte: ""); NewPrint = false;}
      if (inputNumber(minuteValue, 59)) {
        //rtc.adjust(DateTime(yearValue, monthValue, dayValue, hourValue, minuteValue, 0));
        setTime(hourValue, minuteValue, 0, dayValue, monthValue, yearValue);
        if (alsoSetRTC) RTC.set(now());
        settingStep = 0; // Zurück zum ersten Schritt
        NewPrint = true;
        setTimeMode = false;
        alsoSetRTC = false;
      }
      break;
  }
}
"
DzRJCY08,saima-chy-cgpa,shojeeb1943,Dart,Monday 4th of December 2023 05:41:05 AM CDT,"import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: MainScreen(),
    );
  }
}

class MainScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('CGPA Calculator'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Select Semester:',
              style: TextStyle(fontSize: 20.0, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 20.0),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                SemesterButton(number: 1),
                SemesterButton(number: 2),
                SemesterButton(number: 3),
                SemesterButton(number: 4),
                // Add more SemesterButtons as needed
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class SemesterButton extends StatelessWidget {
  final int number;

  SemesterButton({required this.number});

  @override
  Widget build(BuildContext context) {
    return ElevatedButton(
      onPressed: () {
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => SemesterScreen(semesterNumber: number),
          ),
        );
      },
      child: Text('Semester $number'),
    );
  }
}

class SemesterScreen extends StatefulWidget {
  final int semesterNumber;

  SemesterScreen({required this.semesterNumber});

  @override
  _SemesterScreenState createState() => _SemesterScreenState();
}

class _SemesterScreenState extends State<SemesterScreen> {
  final List<TextEditingController> courseControllers = [];
  int totalCredits = 0;
  double totalGradePoints = 0.0;
  double cgpa = 0.0;

  @override
  void initState() {
    super.initState();
    // Initialize controllers for text fields
    for (int i = 0; i < 4; i++) {
      courseControllers.add(TextEditingController());
    }
  }

  @override
  void dispose() {
    // Dispose controllers
    for (int i = 0; i < 4; i++) {
      courseControllers[i].dispose();
    }
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Semester ${widget.semesterNumber}'),
      ),
      body: Padding(
        padding: EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            for (int i = 0; i < 4; i++)
              TextField(
                controller: courseControllers[i],
                decoration: InputDecoration(
                  labelText: 'Course ${i + 1} Grade',
                ),
                keyboardType: TextInputType.number,
              ),
            SizedBox(height: 20.0),
            ElevatedButton(
              onPressed: calculateCGPA,
              child: Text('Calculate CGPA'),
            ),
            SizedBox(height: 20.0),
            Text(
              'CGPA (4.0 Scale): ${cgpa.toStringAsFixed(2)}', // Displaying CGPA on a 4.0 scale
              style: TextStyle(fontSize: 18.0, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }

  void calculateCGPA() {
    setState(() {
      totalCredits = 0;
      totalGradePoints = 0.0;
      for (int i = 0; i < 4; i++) {
        int grade = int.tryParse(courseControllers[i].text) ?? 0;
        totalCredits += 3; // Assuming each course is 3 credits
        totalGradePoints += grade * 3; // Multiply grade with credits
      }
      double cgpaTotalScale = totalGradePoints / totalCredits;

      // Convert the CGPA to a 4.0 scale system
      cgpa = (cgpaTotalScale / 10) * 4;
    });
  }
}
"
