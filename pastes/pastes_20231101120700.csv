id,title,username,language,date,content
t05vBUu5,data739,TestGuy1,JSON,Wednesday 1st of November 2023 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e49ea32938122460775ba284401539643fe00fccff2f369d3a01baa2434774fccab59b961ad5e637ce7acf136e55de2487ac5fc849acb9031dfe6dcca4780c3de7770fd6fa1b10a7487e910d54104e9e4278ac83da483d14264e7849079a6ddf47d64ae2ec9729e02a1c7ba71efa9bddc82cacbf8959a3231c1d1559d0877644',
  otherdata: [
    '2da02ede531951b8557d6dfbb82d18cd',
    '365ad97420a7d91dbc731633eb01bdbf',
    '37e58b79051c6acf82244264d2ef7c3f',
    'e04a5550767c52af53d6bc2c24aff64c',
    '623387d759944766813c3dd12df6d2ac',
    '288814562648402baf2b7c5d75dfa58f',
    '37858f2117a40cc948d98067a302b8aa',
    '2bbf511e4ce00493feca6e9c9436b04f'
  ]
}"
mwcgqSha,Completed Classes exercise,umbongodrink,Python,Wednesday 1st of November 2023 06:51:29 AM CDT,"from datetime import datetime as dt

class Person:

    def __init__(self, name, date_of_birth, friends=None):
        self.name = name
        self.date_of_birth = date_of_birth
        self.friends = friends if friends else []

    def __str__(self):
        number_of_friends = len(self.friends)
        return f'My name is: {self.name}, my DOB is: {self.date_of_birth}, and I have {number_of_friends} friends.'
    
    def true_dob(self):
        self.person_iso_date = dt.fromisoformat(self.date_of_birth)
        return f'{self.person_iso_date}'
    
    def __gt__(self, other_person):
        self.person_iso_date = dt.fromisoformat(self.date_of_birth)
        if self.person_iso_date > other_person.person_iso_date:
            return True
        else:
            return False
        
    def add_friend(self, other_person):
        self.friends.append(other_person.name)
        other_person.friends.append(self.name)
        return f""{self.name}'s friends are now {self.friends}; and likewise {other_person.name}'s friends include {self.name}."""
cTuXq1Dn,conv.py,Abhisek92,Python,Wednesday 1st of November 2023 06:33:18 AM CDT,"import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
from train_utils import batchify_data, run_epoch, train_model, Flatten
import utils_multiMNIST as U
path_to_data_dir = '../Datasets/'
use_mini_dataset = True

batch_size = 64
nb_classes = 10
nb_epoch = 15
num_classes = 10
img_rows, img_cols = 42, 28 # input image dimensions


class CNN(nn.Module):
    def __init__(self, input_dimension):
        super(CNN, self).__init__()
        self.linear1 = nn.Linear(input_dimension, 64)
        self.linear2 = nn.Linear(64, 64)
        self.linear_first_digit = nn.Linear(64, 10)
        self.linear_second_digit = nn.Linear(64, 10)

        self.encoder = nn.Sequential(
              nn.Conv2d(1, 8, (3, 3)),
              nn.ReLU(),
              nn.MaxPool2d((2, 2)),
              nn.Conv2d(8, 16, (3, 3)),
              nn.ReLU(),
              nn.MaxPool2d((2, 2)),
              Flatten(),
              nn.Linear(720, 128),
              nn.Dropout(0.5),
        )

        self.first_digit_classifier = nn.Linear(128,10)
        self.second_digit_classifier = nn.Linear(128,10)

    def forward(self, x):
        out = self.encoder(x)
        out_first_digit = self.first_digit_classifier(out)
        out_second_digit = self.second_digit_classifier(out)
        return out_first_digit, out_second_digit


def main():
    X_train, y_train, X_test, y_test = U.get_data(path_to_data_dir, use_mini_dataset)

    # Split into train and dev
    dev_split_index = int(9 * len(X_train) / 10)
    X_dev = X_train[dev_split_index:]
    y_dev = [y_train[0][dev_split_index:], y_train[1][dev_split_index:]]
    X_train = X_train[:dev_split_index]
    y_train = [y_train[0][:dev_split_index], y_train[1][:dev_split_index]]

    permutation = np.array([i for i in range(len(X_train))])
    np.random.shuffle(permutation)
    X_train = [X_train[i] for i in permutation]
    y_train = [[y_train[0][i] for i in permutation], [y_train[1][i] for i in permutation]]

    # Split dataset into batches
    train_batches = batchify_data(X_train, y_train, batch_size)
    dev_batches = batchify_data(X_dev, y_dev, batch_size)
    test_batches = batchify_data(X_test, y_test, batch_size)

    # Load model
    input_dimension = img_rows * img_cols
    model = CNN(input_dimension)

    # Train
    train_model(train_batches, dev_batches, model)

    ## Evaluate the model on test data
    loss, acc = run_epoch(test_batches, model.eval(), None)
    print('Test loss1: {:.6f}  accuracy1: {:.6f}  loss2: {:.6f}   accuracy2: {:.6f}'.format(loss[0], acc[0], loss[1], acc[1]))

if __name__ == '__main__':
    # Specify seed for deterministic behavior, then shuffle. Do not change seed for official submissions to edx
    np.random.seed(12321)  # for reproducibility
    torch.manual_seed(12321)  # for reproducibility
    main()
"
2Bz1jaRs,mlp.py,Abhisek92,Python,Wednesday 1st of November 2023 06:30:11 AM CDT,"import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
from train_utils import batchify_data, run_epoch, train_model, Flatten
import utils_multiMNIST as U
path_to_data_dir = '../Datasets/'
use_mini_dataset = True

batch_size = 64
nb_classes = 10
nb_epoch = 30
num_classes = 10
img_rows, img_cols = 42, 28 # input image dimensions

class MLP(nn.Module):
    def __init__(self, input_dimension):
        super(MLP, self).__init__()
        self.flatten = Flatten()

        H = 64
        self.linear1 = nn.Linear(input_dimension, H)
        self.linear_out1 = nn.Linear(H, num_classes)
        self.linear_out2 = nn.Linear(num_classes, num_classes)

    def forward(self, x):
        xf = self.flatten(x)  # need to flatten to use linear layers

        xf_out = F.relu(self.linear1(xf))
        out_first_digit = self.linear_out1(xf_out)
        out_second_digit = self.linear_out2(out_first_digit)

        return out_first_digit, out_second_digit



def main():
    X_train, y_train, X_test, y_test = U.get_data(path_to_data_dir, use_mini_dataset)

    # Split into train and dev
    dev_split_index = int(9 * len(X_train) / 10)
    X_dev = X_train[dev_split_index:]
    y_dev = [y_train[0][dev_split_index:], y_train[1][dev_split_index:]]
    X_train = X_train[:dev_split_index]
    y_train = [y_train[0][:dev_split_index], y_train[1][:dev_split_index]]

    permutation = np.array([i for i in range(len(X_train))])
    np.random.shuffle(permutation)
    X_train = [X_train[i] for i in permutation]
    y_train = [[y_train[0][i] for i in permutation], [y_train[1][i] for i in permutation]]

    # Split dataset into batches
    train_batches = batchify_data(X_train, y_train, batch_size)
    dev_batches = batchify_data(X_dev, y_dev, batch_size)
    test_batches = batchify_data(X_test, y_test, batch_size)

    # Load model
    input_dimension = img_rows * img_cols
    model = MLP(input_dimension)

    # Train
    train_model(train_batches, dev_batches, model)

    ## Evaluate the model on test data
    loss, acc = run_epoch(test_batches, model.eval(), None)
    print('Test loss1: {:.6f}  accuracy1: {:.6f}  loss2: {:.6f}   accuracy2: {:.6f}'.format(loss[0], acc[0], loss[1], acc[1]))

if __name__ == '__main__':
    # Specify seed for deterministic behavior, then shuffle. Do not change seed for official submissions to edx
    np.random.seed(12321)  # for reproducibility
    torch.manual_seed(12321)  # for reproducibility
    main()"
mxUx9EEr,Телега грузовая (Dwarven City),Dreamlight_MCSkill,Lua,Wednesday 1st of November 2023 06:29:01 AM CDT,"{
  label = ""Грузовая телега"",
  shapes = {
    { 2,0,8,4,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,6,4,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,14,4,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,5,4,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,8,4,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,13,4,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,4,4,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,9,4,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,12,4,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,3,4,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,5,4,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,15,4,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,6,10,5,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,7,4,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,13,4,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,6,10,16,7,12,texture = ""log_oak"" },
    { 0,7,10,1,8,11,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 0,7,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,9,5,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 1,7,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,12,5,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 6,7,2,16,8,7,texture = ""sky_drive:wood/wood_2"" },
    { 9,7,9,16,13,10,texture = ""log_oak"" },
    { 9,7,12,16,13,13,texture = ""log_oak"" },
    { 0,8,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 6,8,2,7,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 7,8,2,15,11,3,texture = ""planks_oak"" },
    { 7,8,5,16,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 15,8,2,16,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 1,9,10,5,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,7,4,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,13,4,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,9,8,16,13,14,texture = ""log_oak"" },
    { 10,9,1,12,10,2,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 2,10,5,4,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,9,4,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,12,4,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,15,4,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 9,10,7,16,13,15,texture = ""log_oak"" },
    { 14,10,15,16,13,16,texture = ""log_oak"" },
    { 2,11,4,4,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 7,11,2,16,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,15,16,13,16,texture = ""log_oak"" },
    { 2,12,8,4,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,12,13,4,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,2,5,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,1,16,13,2,texture = ""log_oak"" },
    { 5,12,2,6,13,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,12,3,16,13,16,texture = ""log_oak"" },
    { 6,12,0,16,13,16,texture = ""log_oak"" },
    { 2,13,5,4,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 5,13,2,7,16,16,texture = ""log_oak"" },
    { 6,13,1,7,16,16,texture = ""log_oak"" },
    { 7,13,1,16,16,2,texture = ""log_oak"" },
    { 7,13,2,16,14,16,texture = ""planks_oak"" },
    { 2,14,6,4,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,14,14,4,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 6,14,0,7,16,1,texture = ""wool_colored_white"" },
    { 7,14,7,15,16,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,14,6,14,16,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,14,5,13,16,13,texture = ""sky_drive:wood/wood_0"" },
    { 2,15,8,4,16,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,15,1,6,16,2,texture = ""wool_colored_white"" },
    { 5,15,0,6,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,2,0,4,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,1,4,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,0,4,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,2,4,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,0,4,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 14,10,0,16,13,16,texture = ""log_oak"" },
    { 2,11,1,4,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,0,16,13,16,texture = ""log_oak"" },
    { 4,12,1,16,13,16,texture = ""log_oak"" },
    { 5,12,0,16,13,16,texture = ""log_oak"" },
    { 2,13,0,4,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 4,13,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,13,0,7,16,16,texture = ""log_oak"" },
    { 7,13,0,16,14,16,texture = ""planks_oak"" },
    { 7,14,1,15,16,9,texture = ""sky_drive:box/box_4"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,0,8,4,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,6,4,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,1,14,4,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,5,4,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,8,4,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,2,13,4,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,4,4,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,9,4,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,4,12,4,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,3,4,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,5,4,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,15,4,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,6,10,5,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,7,4,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,6,13,4,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,6,10,16,7,12,texture = ""log_oak"" },
    { 0,7,10,16,8,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,7,9,5,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 1,7,12,5,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 9,7,9,16,16,10,texture = ""log_oak"" },
    { 9,7,12,16,16,13,texture = ""log_oak"" },
    { 14,7,13,16,16,14,texture = ""log_oak"" },
    { 15,7,14,16,9,16,texture = ""log_oak"" },
    { 0,8,10,16,9,11,texture = ""sky_drive:iron/iron_0"" },
    { 0,8,11,1,9,12,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 1,8,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 1,9,10,5,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,7,4,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,9,13,4,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 9,9,8,16,16,14,texture = ""log_oak"" },
    { 2,10,5,4,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,9,4,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,12,4,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 2,10,15,4,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 9,10,7,16,16,15,texture = ""log_oak"" },
    { 14,10,0,16,13,15,texture = ""log_oak"" },
    { 2,11,4,4,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,0,16,13,15,texture = ""log_oak"" },
    { 2,12,8,4,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 2,12,13,4,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,0,16,13,6,texture = ""log_oak"" },
    { 5,12,6,16,16,16,texture = ""log_oak"" },
    { 2,13,5,4,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 4,13,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,13,0,7,16,16,texture = ""log_oak"" },
    { 7,13,0,16,14,5,texture = ""planks_oak"" },
    { 7,13,5,16,16,16,texture = ""log_oak"" },
    { 2,14,6,4,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 2,14,14,4,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,15,8,4,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 2,2,0,4,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,3,1,4,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 15,4,11,16,6,16,texture = ""log_oak"" },
    { 2,5,0,4,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,5,2,4,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 15,5,7,16,6,16,texture = ""log_oak"" },
    { 15,6,2,16,8,7,texture = ""log_oak"" },
    { 15,6,7,16,7,11,texture = ""log_oak"" },
    { 15,7,0,16,8,7,texture = ""log_oak"" },
    { 15,8,0,16,9,2,texture = ""log_oak"" },
    { 2,10,0,4,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,1,4,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 5,12,0,16,16,3,texture = ""log_oak"" },
    { 6,12,3,16,16,4,texture = ""log_oak"" },
    { 2,13,0,4,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 5,13,3,16,16,4,texture = ""log_oak"" },
    { 6,13,4,16,16,5,texture = ""log_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,2,4,16,3,texture = ""wool_colored_white"" },
    { 4,0,1,6,16,2,texture = ""wool_colored_white"" },
    { 4,0,2,5,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,3,5,16,4,texture = ""wool_colored_white"" },
    { 5,0,0,6,16,2,texture = ""wool_colored_white"" },
    { 5,0,2,7,3,16,texture = ""log_oak"" },
    { 6,0,0,7,16,1,texture = ""wool_colored_white"" },
    { 7,0,7,15,5,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,0,6,14,5,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,0,5,13,5,13,texture = ""sky_drive:wood/wood_0"" },
    { 3,1,1,6,16,2,texture = ""wool_colored_white"" },
    { 4,1,4,5,16,16,texture = ""wool_colored_white"" },
    { 3,3,3,6,16,4,texture = ""wool_colored_white"" },
    { 5,3,2,6,5,16,texture = ""wool_colored_white"" },
    { 6,3,1,8,16,2,texture = ""wool_colored_white"" },
    { 5,5,4,6,16,16,texture = ""wool_colored_white"" },
    { 7,5,7,8,7,11,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,1,9,16,2,texture = ""wool_colored_white"" },
    { 8,5,6,9,7,7,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,7,14,6,11,texture = ""planks_oak"" },
    { 8,5,11,9,7,12,texture = ""sky_drive:wood/wood_0"" },
    { 9,5,5,13,7,6,texture = ""sky_drive:wood/wood_0"" },
    { 9,5,6,13,6,12,texture = ""planks_oak"" },
    { 9,5,12,13,7,13,texture = ""sky_drive:wood/wood_0"" },
    { 13,5,6,14,7,7,texture = ""sky_drive:wood/wood_0"" },
    { 13,5,11,14,7,12,texture = ""sky_drive:wood/wood_0"" },
    { 14,5,7,15,7,11,texture = ""sky_drive:wood/wood_0"" },
    { 7,6,0,8,16,2,texture = ""wool_colored_white"" },
    { 9,8,1,10,16,2,texture = ""wool_colored_white"" },
    { 8,9,0,9,16,2,texture = ""wool_colored_white"" },
    { 10,12,1,11,16,2,texture = ""wool_colored_white"" },
    { 9,13,0,10,16,2,texture = ""wool_colored_white"" },
    { 11,15,1,12,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,5,4,16,6,texture = ""wool_colored_white"" },
    { 4,0,4,5,16,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,0,0,7,3,16,texture = ""log_oak"" },
    { 7,0,1,15,5,9,texture = ""sky_drive:box/box_4"" },
    { 3,1,4,4,16,6,texture = ""wool_colored_white"" },
    { 4,1,0,5,16,5,texture = ""wool_colored_white"" },
    { 4,1,7,5,16,16,texture = ""wool_colored_white"" },
    { 3,3,6,6,16,7,texture = ""wool_colored_white"" },
    { 5,3,0,6,16,5,texture = ""wool_colored_white"" },
    { 5,3,5,6,5,16,texture = ""wool_colored_white"" },
    { 5,5,7,6,16,16,texture = ""wool_colored_white"" },
    { 7,5,1,8,6,9,texture = ""sky_drive:box/box_4"" },
    { 8,5,1,15,6,2,texture = ""sky_drive:box/box_4"" },
    { 8,5,2,14,6,8,texture = ""sky_drive:box/box_top_4"" },
    { 8,5,8,15,6,9,texture = ""sky_drive:box/box_4"" },
    { 14,5,2,15,6,9,texture = ""sky_drive:box/box_4"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,5,4,16,6,texture = ""wool_colored_white"" },
    { 4,0,4,5,16,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,0,0,7,2,16,texture = ""log_oak"" },
    { 7,0,5,16,2,16,texture = ""log_oak"" },
    { 3,1,4,4,16,6,texture = ""wool_colored_white"" },
    { 4,1,0,5,16,5,texture = ""wool_colored_white"" },
    { 4,1,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,2,0,6,3,16,texture = ""log_oak"" },
    { 6,2,0,7,3,6,texture = ""log_oak"" },
    { 6,2,6,16,3,16,texture = ""planks_oak"" },
    { 7,2,5,16,3,6,texture = ""log_oak"" },
    { 3,3,6,5,16,7,texture = ""wool_colored_white"" },
    { 5,3,0,6,16,6,texture = ""wool_colored_white"" },
    { 6,3,5,9,16,6,texture = ""wool_colored_white"" },
    { 13,3,10,14,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 13,3,11,14,5,12,texture = ""sky_drive:iron/iron_0"" },
    { 9,4,5,10,16,6,texture = ""wool_colored_white"" },
    { 13,4,12,14,5,16,texture = ""sky_drive:iron/iron_0"" },
    { 12,5,12,16,6,16,texture = ""planks_oak"" },
    { 10,6,5,11,16,6,texture = ""wool_colored_white"" },
    { 12,7,11,16,9,12,texture = ""planks_oak"" },
    { 11,9,5,12,16,6,texture = ""wool_colored_white"" },
    { 12,10,11,16,12,12,texture = ""planks_oak"" },
    { 14,10,10,16,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 12,12,5,13,16,6,texture = ""wool_colored_white"" },
    { 13,14,5,14,16,6,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 5,0,0,16,2,4,texture = ""log_oak"" },
    { 6,0,4,16,2,5,texture = ""log_oak"" },
    { 12,0,5,16,1,6,texture = ""log_oak"" },
    { 12,1,6,16,2,7,texture = ""log_oak"" },
    { 5,2,0,6,3,4,texture = ""log_oak"" },
    { 6,2,0,16,3,3,texture = ""planks_oak"" },
    { 6,2,3,7,3,5,texture = ""log_oak"" },
    { 7,2,3,16,3,4,texture = ""planks_oak"" },
    { 7,2,4,11,3,5,texture = ""log_oak"" },
    { 11,2,4,12,3,5,texture = ""sky_drive:iron/iron_0"" },
    { 12,2,4,16,3,5,texture = ""log_oak"" },
    { 12,2,7,16,3,8,texture = ""log_oak"" },
    { 11,3,5,12,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 12,3,8,16,4,9,texture = ""log_oak"" },
    { 12,4,7,13,5,9,texture = ""sky_drive:iron/iron_0"" },
    { 13,4,8,16,5,9,texture = ""log_oak"" },
    { 12,5,0,16,6,1,texture = ""planks_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,1,12,1,2,texture = ""wool_colored_white"" },
    { 3,0,2,4,1,4,texture = ""wool_colored_white"" },
    { 4,0,2,5,1,3,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,3,6,1,16,texture = ""wool_colored_white"" },
    { 6,0,0,11,2,2,texture = ""wool_colored_white"" },
    { 4,1,1,12,3,2,texture = ""wool_colored_white"" },
    { 4,1,2,5,3,4,texture = ""wool_colored_white"" },
    { 5,1,2,6,3,3,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,3,7,3,16,texture = ""wool_colored_white"" },
    { 7,2,0,11,4,2,texture = ""wool_colored_white"" },
    { 12,2,1,13,9,2,texture = ""wool_colored_white"" },
    { 5,3,1,13,5,2,texture = ""wool_colored_white"" },
    { 5,3,2,6,5,4,texture = ""wool_colored_white"" },
    { 6,3,2,7,5,3,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,3,8,5,16,texture = ""wool_colored_white"" },
    { 11,3,0,12,7,2,texture = ""wool_colored_white"" },
    { 8,4,0,12,5,2,texture = ""wool_colored_white"" },
    { 13,4,1,14,9,2,texture = ""wool_colored_white"" },
    { 6,5,1,16,6,2,texture = ""wool_colored_white"" },
    { 6,5,2,7,6,4,texture = ""wool_colored_white"" },
    { 7,5,2,8,6,3,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,3,10,6,16,texture = ""wool_colored_white"" },
    { 9,5,0,13,6,2,texture = ""wool_colored_white"" },
    { 7,6,1,16,7,2,texture = ""wool_colored_white"" },
    { 7,6,2,8,7,4,texture = ""wool_colored_white"" },
    { 8,6,2,10,7,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,3,16,7,16,texture = ""wool_colored_white"" },
    { 12,6,0,16,8,2,texture = ""wool_colored_white"" },
    { 8,7,1,16,8,2,texture = ""wool_colored_white"" },
    { 8,7,2,10,8,4,texture = ""wool_colored_white"" },
    { 10,7,2,16,8,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,3,16,8,16,texture = ""wool_colored_white"" },
    { 10,8,1,16,9,4,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,4,4,1,7,texture = ""wool_colored_white"" },
    { 4,0,0,6,1,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,6,1,16,texture = ""wool_colored_white"" },
    { 4,1,4,5,3,7,texture = ""wool_colored_white"" },
    { 5,1,0,7,3,5,texture = ""wool_colored_white"" },
    { 5,1,5,6,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,7,3,16,texture = ""wool_colored_white"" },
    { 5,3,4,6,5,7,texture = ""wool_colored_white"" },
    { 6,3,0,8,5,5,texture = ""wool_colored_white"" },
    { 6,3,5,7,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,6,8,5,16,texture = ""wool_colored_white"" },
    { 6,5,4,10,6,5,texture = ""wool_colored_white"" },
    { 6,5,5,7,6,7,texture = ""wool_colored_white"" },
    { 7,5,0,10,6,5,texture = ""wool_colored_white"" },
    { 7,5,5,8,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,6,10,6,16,texture = ""wool_colored_white"" },
    { 7,6,4,16,7,5,texture = ""wool_colored_white"" },
    { 7,6,5,8,7,7,texture = ""wool_colored_white"" },
    { 8,6,0,16,7,5,texture = ""wool_colored_white"" },
    { 8,6,5,10,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,16,7,16,texture = ""wool_colored_white"" },
    { 8,7,4,16,8,5,texture = ""wool_colored_white"" },
    { 8,7,5,10,8,7,texture = ""wool_colored_white"" },
    { 10,7,0,16,8,5,texture = ""wool_colored_white"" },
    { 10,7,5,16,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,6,16,8,16,texture = ""wool_colored_white"" },
    { 10,8,4,16,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 3,0,4,4,1,7,texture = ""wool_colored_white"" },
    { 4,0,0,6,1,5,texture = ""wool_colored_white"" },
    { 4,0,5,5,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 4,0,6,5,3,7,texture = ""wool_colored_white"" },
    { 5,0,5,15,1,6,texture = ""wool_colored_white"" },
    { 4,1,4,5,3,7,texture = ""wool_colored_white"" },
    { 5,1,0,7,3,5,texture = ""wool_colored_white"" },
    { 5,1,5,6,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 5,1,6,6,5,7,texture = ""wool_colored_white"" },
    { 6,1,5,15,3,6,texture = ""wool_colored_white"" },
    { 15,2,5,16,7,6,texture = ""wool_colored_white"" },
    { 5,3,4,6,5,7,texture = ""wool_colored_white"" },
    { 6,3,0,8,5,5,texture = ""wool_colored_white"" },
    { 6,3,5,7,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,3,6,7,6,7,texture = ""wool_colored_white"" },
    { 7,3,5,16,5,6,texture = ""wool_colored_white"" },
    { 6,5,4,10,6,5,texture = ""wool_colored_white"" },
    { 6,5,5,7,6,7,texture = ""wool_colored_white"" },
    { 7,5,0,10,6,5,texture = ""wool_colored_white"" },
    { 7,5,5,8,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 7,5,6,8,7,7,texture = ""wool_colored_white"" },
    { 8,5,5,16,6,6,texture = ""wool_colored_white"" },
    { 7,6,4,16,7,5,texture = ""wool_colored_white"" },
    { 7,6,5,8,7,7,texture = ""wool_colored_white"" },
    { 8,6,0,16,7,5,texture = ""wool_colored_white"" },
    { 8,6,5,10,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,6,10,8,7,texture = ""wool_colored_white"" },
    { 10,6,5,16,7,6,texture = ""wool_colored_white"" },
    { 8,7,4,16,8,5,texture = ""wool_colored_white"" },
    { 8,7,5,10,8,7,texture = ""wool_colored_white"" },
    { 10,7,0,16,8,5,texture = ""wool_colored_white"" },
    { 10,7,5,16,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,7,6,16,9,7,texture = ""wool_colored_white"" },
    { 10,8,4,16,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,0,8,14,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,6,14,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,14,14,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,5,14,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,8,14,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,13,14,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,4,14,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,12,14,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,3,14,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,5,14,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,15,14,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,10,7,7,12,texture = ""log_oak"" },
    { 11,6,10,15,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,7,14,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,13,14,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,2,10,8,7,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,9,7,13,10,texture = ""log_oak"" },
    { 0,7,10,15,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,12,7,13,13,texture = ""log_oak"" },
    { 11,7,9,15,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 11,7,12,15,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 15,7,10,16,8,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,8,2,1,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,8,5,10,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 1,8,2,9,11,3,texture = ""planks_oak"" },
    { 9,8,2,10,12,7,texture = ""sky_drive:wood/wood_2"" },
    { 15,8,10,16,9,11,texture = ""sky_drive:iron/iron_0"" },
    { 15,8,11,16,9,12,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 0,9,8,7,13,14,texture = ""log_oak"" },
    { 4,9,1,6,10,2,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 11,9,10,15,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,7,14,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,13,14,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,7,7,13,15,texture = ""log_oak"" },
    { 0,10,15,2,13,16,texture = ""log_oak"" },
    { 12,10,5,14,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,9,14,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,12,14,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,15,14,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 1,11,2,10,12,3,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,15,4,13,16,texture = ""log_oak"" },
    { 12,11,4,14,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,0,10,13,16,texture = ""log_oak"" },
    { 10,12,1,11,13,2,texture = ""log_oak"" },
    { 10,12,2,12,13,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,12,3,11,16,16,texture = ""log_oak"" },
    { 12,12,8,14,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,12,13,14,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 0,13,1,10,16,2,texture = ""log_oak"" },
    { 0,13,2,9,14,16,texture = ""planks_oak"" },
    { 9,13,2,11,16,16,texture = ""log_oak"" },
    { 11,13,2,12,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,5,14,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 1,14,3,9,16,11,texture = ""sky_drive:box/box_4"" },
    { 9,14,0,10,16,1,texture = ""wool_colored_white"" },
    { 12,14,6,14,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,14,14,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 10,15,0,11,16,2,texture = ""wool_colored_white"" },
    { 12,15,8,14,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,2,0,14,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,1,14,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,0,14,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,2,14,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,0,2,13,16,texture = ""log_oak"" },
    { 12,10,0,14,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,0,4,13,16,texture = ""log_oak"" },
    { 12,11,1,14,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 4,12,0,11,13,16,texture = ""log_oak"" },
    { 11,12,1,12,13,16,texture = ""log_oak"" },
    { 0,13,0,9,14,16,texture = ""planks_oak"" },
    { 9,13,0,11,16,16,texture = ""log_oak"" },
    { 11,13,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,0,14,14,1,texture = ""sky_drive:wood/wood_2"" },
    { 1,14,10,9,16,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,14,9,8,16,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,14,8,7,16,16,texture = ""sky_drive:wood/wood_0"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,0,8,14,1,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,6,14,2,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,1,14,14,2,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,5,14,3,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,8,14,4,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,2,13,14,4,14,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,4,14,5,5,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,9,14,6,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,4,12,14,6,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,3,14,11,4,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,5,14,6,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,15,14,6,16,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,10,7,7,12,texture = ""log_oak"" },
    { 11,6,10,15,7,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,7,14,7,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,6,13,14,7,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,7,9,7,16,10,texture = ""log_oak"" },
    { 0,7,10,15,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,12,7,16,13,texture = ""log_oak"" },
    { 0,7,13,2,16,14,texture = ""log_oak"" },
    { 0,7,14,1,9,16,texture = ""log_oak"" },
    { 11,7,9,15,9,10,texture = ""sky_drive:wood/wood_2"" },
    { 11,7,12,15,9,13,texture = ""sky_drive:wood/wood_2"" },
    { 15,7,10,16,8,11,texture = ""customnpcs:placeholder_1"", tint = 0xffff00 },
    { 15,7,11,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 15,8,10,16,9,12,texture = ""sky_drive:iron/iron_0"" },
    { 0,9,8,7,16,14,texture = ""log_oak"" },
    { 11,9,10,15,10,12,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,7,14,10,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,9,13,14,10,15,texture = ""sky_drive:wood/wood_2"" },
    { 0,10,0,2,13,15,texture = ""log_oak"" },
    { 2,10,7,7,16,15,texture = ""log_oak"" },
    { 12,10,5,14,11,7,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,9,14,12,10,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,12,14,12,13,texture = ""sky_drive:wood/wood_2"" },
    { 12,10,15,14,11,16,texture = ""sky_drive:wood/wood_2"" },
    { 2,11,0,4,13,15,texture = ""log_oak"" },
    { 12,11,4,14,13,5,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,15,11,16,16,texture = ""log_oak"" },
    { 4,12,0,11,13,16,texture = ""log_oak"" },
    { 11,12,0,12,13,6,texture = ""log_oak"" },
    { 12,12,8,14,14,9,texture = ""sky_drive:wood/wood_2"" },
    { 12,12,13,14,14,14,texture = ""sky_drive:wood/wood_2"" },
    { 0,13,0,9,14,5,texture = ""planks_oak"" },
    { 0,13,5,11,16,16,texture = ""log_oak"" },
    { 9,13,0,11,16,16,texture = ""log_oak"" },
    { 11,13,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,13,5,14,14,6,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,6,14,15,8,texture = ""sky_drive:wood/wood_2"" },
    { 12,14,14,14,15,16,texture = ""sky_drive:wood/wood_2"" },
    { 12,15,8,14,16,14,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 12,2,0,14,3,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,3,1,14,5,2,texture = ""sky_drive:wood/wood_2"" },
    { 0,4,11,1,6,16,texture = ""log_oak"" },
    { 0,5,7,1,6,16,texture = ""log_oak"" },
    { 12,5,0,14,6,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,5,2,14,11,3,texture = ""sky_drive:wood/wood_2"" },
    { 0,6,2,1,8,7,texture = ""log_oak"" },
    { 0,6,7,1,7,11,texture = ""log_oak"" },
    { 0,7,0,1,8,7,texture = ""log_oak"" },
    { 0,8,0,1,9,2,texture = ""log_oak"" },
    { 12,10,0,14,11,1,texture = ""sky_drive:wood/wood_2"" },
    { 12,11,1,14,13,2,texture = ""sky_drive:wood/wood_2"" },
    { 0,12,0,10,16,4,texture = ""log_oak"" },
    { 10,12,0,11,16,3,texture = ""log_oak"" },
    { 0,13,4,10,16,5,texture = ""log_oak"" },
    { 10,13,3,11,16,4,texture = ""log_oak"" },
    { 12,13,0,14,14,1,texture = ""sky_drive:wood/wood_2"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,3,9,5,11,texture = ""sky_drive:box/box_4"" },
    { 9,0,0,11,16,1,texture = ""wool_colored_white"" },
    { 9,0,2,11,3,16,texture = ""log_oak"" },
    { 10,0,1,12,16,2,texture = ""wool_colored_white"" },
    { 11,0,2,12,16,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,3,12,16,4,texture = ""wool_colored_white"" },
    { 12,0,2,13,16,3,texture = ""wool_colored_white"" },
    { 11,1,4,12,16,16,texture = ""wool_colored_white"" },
    { 12,1,1,13,16,3,texture = ""wool_colored_white"" },
    { 8,3,1,13,16,2,texture = ""wool_colored_white"" },
    { 10,3,2,11,5,16,texture = ""wool_colored_white"" },
    { 12,3,3,13,16,4,texture = ""wool_colored_white"" },
    { 1,5,3,2,6,11,texture = ""sky_drive:box/box_4"" },
    { 2,5,3,9,6,4,texture = ""sky_drive:box/box_4"" },
    { 2,5,4,8,6,10,texture = ""sky_drive:box/box2_top_1"" },
    { 2,5,10,9,6,11,texture = ""sky_drive:box/box_4"" },
    { 7,5,1,13,16,2,texture = ""wool_colored_white"" },
    { 8,5,4,9,6,11,texture = ""sky_drive:box/box_4"" },
    { 10,5,3,12,16,16,texture = ""wool_colored_white"" },
    { 8,6,0,11,16,2,texture = ""wool_colored_white"" },
    { 6,8,1,13,16,2,texture = ""wool_colored_white"" },
    { 7,9,0,11,16,2,texture = ""wool_colored_white"" },
    { 5,12,1,13,16,2,texture = ""wool_colored_white"" },
    { 6,13,0,11,16,2,texture = ""wool_colored_white"" },
    { 4,15,1,13,16,2,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,10,9,5,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,0,9,8,5,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,0,8,7,5,16,texture = ""sky_drive:wood/wood_0"" },
    { 9,0,0,11,3,16,texture = ""log_oak"" },
    { 11,0,4,12,16,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,16,7,texture = ""wool_colored_white"" },
    { 12,0,5,13,16,6,texture = ""wool_colored_white"" },
    { 11,1,0,12,16,5,texture = ""wool_colored_white"" },
    { 11,1,7,12,16,16,texture = ""wool_colored_white"" },
    { 12,1,4,13,16,6,texture = ""wool_colored_white"" },
    { 10,3,0,12,16,5,texture = ""wool_colored_white"" },
    { 10,3,5,11,5,16,texture = ""wool_colored_white"" },
    { 12,3,6,13,16,7,texture = ""wool_colored_white"" },
    { 1,5,10,2,7,14,texture = ""sky_drive:wood/wood_0"" },
    { 2,5,9,3,7,10,texture = ""sky_drive:wood/wood_0"" },
    { 2,5,10,8,6,14,texture = ""planks_oak"" },
    { 2,5,14,3,7,15,texture = ""sky_drive:wood/wood_0"" },
    { 3,5,8,7,7,9,texture = ""sky_drive:wood/wood_0"" },
    { 3,5,9,7,6,15,texture = ""planks_oak"" },
    { 3,5,15,7,7,16,texture = ""sky_drive:wood/wood_0"" },
    { 7,5,9,8,7,10,texture = ""sky_drive:wood/wood_0"" },
    { 7,5,14,8,7,15,texture = ""sky_drive:wood/wood_0"" },
    { 8,5,10,9,7,14,texture = ""sky_drive:wood/wood_0"" },
    { 10,5,6,12,16,16,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 0,0,5,11,2,16,texture = ""log_oak"" },
    { 9,0,0,11,2,16,texture = ""log_oak"" },
    { 11,0,4,12,16,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,16,6,texture = ""sky_drive:iron/iron_0"" },
    { 12,0,5,13,16,6,texture = ""wool_colored_white"" },
    { 11,1,0,12,16,5,texture = ""wool_colored_white"" },
    { 11,1,6,12,16,7,texture = ""wool_colored_white"" },
    { 12,1,4,13,16,6,texture = ""wool_colored_white"" },
    { 0,2,5,11,3,6,texture = ""log_oak"" },
    { 0,2,6,10,3,16,texture = ""planks_oak"" },
    { 9,2,0,11,3,6,texture = ""log_oak"" },
    { 10,2,6,11,3,16,texture = ""log_oak"" },
    { 2,3,10,3,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 2,3,11,3,5,12,texture = ""sky_drive:iron/iron_0"" },
    { 8,3,5,11,16,6,texture = ""wool_colored_white"" },
    { 10,3,0,12,16,5,texture = ""wool_colored_white"" },
    { 12,3,6,13,16,7,texture = ""wool_colored_white"" },
    { 2,4,12,3,5,16,texture = ""sky_drive:iron/iron_0"" },
    { 7,4,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,5,12,4,6,16,texture = ""planks_oak"" },
    { 6,5,5,11,16,6,texture = ""wool_colored_white"" },
    { 5,6,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,7,11,4,9,12,texture = ""planks_oak"" },
    { 4,9,5,11,16,6,texture = ""wool_colored_white"" },
    { 0,10,10,3,11,11,texture = ""sky_drive:iron/iron_0"" },
    { 0,10,11,4,12,12,texture = ""planks_oak"" },
    { 3,12,5,11,16,6,texture = ""wool_colored_white"" },
    { 2,14,5,11,16,6,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 0,0,0,10,2,5,texture = ""log_oak"" },
    { 0,0,5,4,1,6,texture = ""log_oak"" },
    { 10,0,0,11,3,4,texture = ""log_oak"" },
    { 0,1,6,4,2,7,texture = ""log_oak"" },
    { 0,2,0,9,3,4,texture = ""planks_oak"" },
    { 0,2,4,4,3,5,texture = ""log_oak"" },
    { 0,2,7,4,3,8,texture = ""log_oak"" },
    { 4,2,4,5,3,5,texture = ""sky_drive:iron/iron_0"" },
    { 5,2,4,10,3,5,texture = ""log_oak"" },
    { 9,2,0,10,3,3,texture = ""planks_oak"" },
    { 9,2,3,10,3,5,texture = ""log_oak"" },
    { 0,3,8,3,5,9,texture = ""log_oak"" },
    { 3,3,8,4,4,9,texture = ""log_oak"" },
    { 4,3,5,5,4,7,texture = ""sky_drive:iron/iron_0"" },
    { 3,4,7,4,5,9,texture = ""sky_drive:iron/iron_0"" },
    { 0,5,0,4,6,1,texture = ""planks_oak"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 4,0,1,6,9,2,texture = ""wool_colored_white"" },
    { 5,0,0,7,6,2,texture = ""wool_colored_white"" },
    { 7,0,0,10,2,2,texture = ""wool_colored_white"" },
    { 10,0,1,11,5,2,texture = ""wool_colored_white"" },
    { 10,0,3,11,3,16,texture = ""wool_colored_white"" },
    { 11,0,1,12,3,2,texture = ""wool_colored_white"" },
    { 11,0,2,12,1,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,3,12,1,16,texture = ""wool_colored_white"" },
    { 12,0,1,13,1,4,texture = ""wool_colored_white"" },
    { 9,1,3,11,3,16,texture = ""wool_colored_white"" },
    { 10,1,2,11,3,3,texture = ""sky_drive:iron/iron_0"" },
    { 11,1,2,12,3,4,texture = ""wool_colored_white"" },
    { 3,2,1,6,9,2,texture = ""wool_colored_white"" },
    { 7,2,0,9,4,2,texture = ""wool_colored_white"" },
    { 9,2,1,10,6,2,texture = ""wool_colored_white"" },
    { 4,3,0,9,4,2,texture = ""wool_colored_white"" },
    { 8,3,3,10,5,16,texture = ""wool_colored_white"" },
    { 9,3,2,10,5,3,texture = ""sky_drive:iron/iron_0"" },
    { 10,3,2,11,5,4,texture = ""wool_colored_white"" },
    { 2,4,1,6,9,2,texture = ""wool_colored_white"" },
    { 4,4,0,8,5,2,texture = ""wool_colored_white"" },
    { 8,4,1,11,5,2,texture = ""wool_colored_white"" },
    { 0,5,1,6,9,2,texture = ""wool_colored_white"" },
    { 3,5,0,7,6,2,texture = ""wool_colored_white"" },
    { 6,5,3,8,7,16,texture = ""wool_colored_white"" },
    { 7,5,1,10,6,2,texture = ""wool_colored_white"" },
    { 8,5,2,9,6,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,3,9,6,16,texture = ""wool_colored_white"" },
    { 9,5,2,10,6,4,texture = ""wool_colored_white"" },
    { 0,6,0,4,8,2,texture = ""wool_colored_white"" },
    { 0,6,3,6,8,16,texture = ""wool_colored_white"" },
    { 4,6,0,5,7,2,texture = ""wool_colored_white"" },
    { 6,6,1,8,8,2,texture = ""wool_colored_white"" },
    { 6,6,2,8,7,3,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,1,9,7,4,texture = ""wool_colored_white"" },
    { 0,7,2,6,8,3,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,2,8,8,4,texture = ""wool_colored_white"" },
    { 0,8,2,6,9,4,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 10,0,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,0,6,11,3,16,texture = ""wool_colored_white"" },
    { 11,0,0,12,1,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,1,16,texture = ""wool_colored_white"" },
    { 12,0,4,13,1,7,texture = ""wool_colored_white"" },
    { 9,1,0,11,3,5,texture = ""wool_colored_white"" },
    { 9,1,6,11,3,16,texture = ""wool_colored_white"" },
    { 10,1,5,11,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,1,4,12,3,7,texture = ""wool_colored_white"" },
    { 8,3,0,10,5,5,texture = ""wool_colored_white"" },
    { 8,3,6,10,5,16,texture = ""wool_colored_white"" },
    { 9,3,5,10,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,3,4,11,5,7,texture = ""wool_colored_white"" },
    { 6,5,0,8,7,5,texture = ""wool_colored_white"" },
    { 6,5,6,8,7,16,texture = ""wool_colored_white"" },
    { 8,5,0,9,6,5,texture = ""wool_colored_white"" },
    { 8,5,5,9,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,6,9,6,16,texture = ""wool_colored_white"" },
    { 9,5,4,10,6,7,texture = ""wool_colored_white"" },
    { 0,6,0,6,8,5,texture = ""wool_colored_white"" },
    { 0,6,6,6,8,16,texture = ""wool_colored_white"" },
    { 6,6,5,8,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,6,4,9,7,7,texture = ""wool_colored_white"" },
    { 0,7,5,6,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,7,4,8,8,7,texture = ""wool_colored_white"" },
    { 0,8,4,6,9,7,texture = ""wool_colored_white"" },
  }
},

{
  label = ""Грузовая телега"",
  shapes = {
    { 1,0,5,6,7,6,texture = ""wool_colored_white"" },
    { 6,0,5,8,6,6,texture = ""wool_colored_white"" },
    { 8,0,5,9,5,6,texture = ""wool_colored_white"" },
    { 9,0,5,10,3,6,texture = ""wool_colored_white"" },
    { 10,0,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,0,5,11,1,6,texture = ""wool_colored_white"" },
    { 11,0,0,12,1,5,texture = ""wool_colored_white"" },
    { 11,0,5,12,1,6,texture = ""sky_drive:iron/iron_0"" },
    { 11,0,6,12,3,7,texture = ""wool_colored_white"" },
    { 12,0,4,13,1,7,texture = ""wool_colored_white"" },
    { 9,1,0,11,3,5,texture = ""wool_colored_white"" },
    { 10,1,5,11,3,6,texture = ""sky_drive:iron/iron_0"" },
    { 10,1,6,12,3,7,texture = ""wool_colored_white"" },
    { 11,1,4,12,3,7,texture = ""wool_colored_white"" },
    { 0,2,5,6,7,6,texture = ""wool_colored_white"" },
    { 8,3,0,10,5,5,texture = ""wool_colored_white"" },
    { 9,3,5,10,5,6,texture = ""sky_drive:iron/iron_0"" },
    { 9,3,6,11,5,7,texture = ""wool_colored_white"" },
    { 10,3,4,11,5,7,texture = ""wool_colored_white"" },
    { 6,5,0,8,7,5,texture = ""wool_colored_white"" },
    { 8,5,0,9,6,5,texture = ""wool_colored_white"" },
    { 8,5,5,9,6,6,texture = ""sky_drive:iron/iron_0"" },
    { 8,5,6,10,6,7,texture = ""wool_colored_white"" },
    { 9,5,4,10,6,7,texture = ""wool_colored_white"" },
    { 0,6,0,6,8,5,texture = ""wool_colored_white"" },
    { 6,6,5,8,7,6,texture = ""sky_drive:iron/iron_0"" },
    { 6,6,6,8,8,7,texture = ""wool_colored_white"" },
    { 8,6,4,9,7,7,texture = ""wool_colored_white"" },
    { 0,7,5,6,8,6,texture = ""sky_drive:iron/iron_0"" },
    { 0,7,6,6,9,7,texture = ""wool_colored_white"" },
    { 6,7,4,8,8,7,texture = ""wool_colored_white"" },
    { 0,8,4,6,9,7,texture = ""wool_colored_white"" },
  }
}"
VD0hWd8K,Untitled,squaredsausage,INI file,Wednesday 1st of November 2023 06:24:36 AM CDT,"********************
Game.ini delete this
*********************

[/Script/ShooterGame.ShooterGameMode]
BabyImprintingStatScaleMultiplier=1
BabyCuddleIntervalMultiplier=0.3
BabyCuddleGracePeriodMultiplier=1
BabyCuddleLoseImprintQualitySpeedMultiplier=1
PerLevelStatsMultiplier_DinoTamed[0]=0.0900000036
PerLevelStatsMultiplier_DinoTamed[1]=1
PerLevelStatsMultiplier_DinoTamed[2]=1
PerLevelStatsMultiplier_DinoTamed[3]=1
PerLevelStatsMultiplier_DinoTamed[4]=1
PerLevelStatsMultiplier_DinoTamed[5]=1
PerLevelStatsMultiplier_DinoTamed[6]=1
PerLevelStatsMultiplier_DinoTamed[7]=2
PerLevelStatsMultiplier_DinoTamed[8]=0.0700000003
PerLevelStatsMultiplier_DinoTamed[9]=1
PerLevelStatsMultiplier_DinoTamed[10]=1
PerLevelStatsMultiplier_DinoTamed_Add[0]=0.0399999991
PerLevelStatsMultiplier_DinoTamed_Add[1]=1
PerLevelStatsMultiplier_DinoTamed_Add[2]=1
PerLevelStatsMultiplier_DinoTamed_Add[3]=1
PerLevelStatsMultiplier_DinoTamed_Add[4]=1
PerLevelStatsMultiplier_DinoTamed_Add[5]=1
PerLevelStatsMultiplier_DinoTamed_Add[6]=1
PerLevelStatsMultiplier_DinoTamed_Add[7]=2
PerLevelStatsMultiplier_DinoTamed_Add[8]=0.0399999991
PerLevelStatsMultiplier_DinoTamed_Add[9]=2
PerLevelStatsMultiplier_DinoTamed_Add[10]=2
PerLevelStatsMultiplier_DinoTamed_Affinity[0]=0.189999998
PerLevelStatsMultiplier_DinoTamed_Affinity[1]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[2]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[3]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[4]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[5]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[6]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[7]=3
PerLevelStatsMultiplier_DinoTamed_Affinity[8]=0.189999998
PerLevelStatsMultiplier_DinoTamed_Affinity[9]=1
PerLevelStatsMultiplier_DinoTamed_Affinity[10]=1
PerLevelStatsMultiplier_DinoWild[0]=1
PerLevelStatsMultiplier_DinoWild[1]=1
PerLevelStatsMultiplier_DinoWild[2]=1
PerLevelStatsMultiplier_DinoWild[3]=1
PerLevelStatsMultiplier_DinoWild[4]=1
PerLevelStatsMultiplier_DinoWild[5]=1
PerLevelStatsMultiplier_DinoWild[6]=1
PerLevelStatsMultiplier_DinoWild[7]=1
PerLevelStatsMultiplier_DinoWild[8]=1
PerLevelStatsMultiplier_DinoWild[9]=1
PerLevelStatsMultiplier_DinoWild[10]=1
PerLevelStatsMultiplier_Player[0]=1
PerLevelStatsMultiplier_Player[1]=1
PerLevelStatsMultiplier_Player[2]=1
PerLevelStatsMultiplier_Player[3]=1
PerLevelStatsMultiplier_Player[4]=1
PerLevelStatsMultiplier_Player[5]=1
PerLevelStatsMultiplier_Player[6]=1
PerLevelStatsMultiplier_Player[7]=4
PerLevelStatsMultiplier_Player[8]=1
PerLevelStatsMultiplier_Player[9]=1
PerLevelStatsMultiplier_Player[10]=1
GlobalSpoilingTimeMultiplier=0.5
GlobalItemDecompositionTimeMultiplier=0.5
GlobalCorpseDecompositionTimeMultiplier=0.5
PvPZoneStructureDamageMultiplier=6
StructureDamageRepairCooldown=180
IncreasePvPRespawnIntervalCheckPeriod=300
IncreasePvPRespawnIntervalMultiplier=2
IncreasePvPRespawnIntervalBaseAmount=59.9999809
ResourceNoReplenishRadiusPlayers=1
ResourceNoReplenishRadiusStructures=1
CropGrowthSpeedMultiplier=5
LayEggIntervalMultiplier=0.5
PoopIntervalMultiplier=0.5
CropDecaySpeedMultiplier=0.1
MatingIntervalMultiplier=0.5
EggHatchSpeedMultiplier=20
BabyMatureSpeedMultiplier=5
BabyFoodConsumptionSpeedMultiplier=0.5
DinoTurretDamageMultiplier=1
DinoHarvestingDamageMultiplier=3.20000005
PlayerHarvestingDamageMultiplier=5
CustomRecipeEffectivenessMultiplier=1
CustomRecipeSkillMultiplier=1
AutoPvEStartTimeSeconds=0
AutoPvEStopTimeSeconds=0
KillXPMultiplier=2
HarvestXPMultiplier=2
CraftXPMultiplier=2
GenericXPMultiplier=2
SpecialXPMultiplier=2
FuelConsumptionIntervalMultiplier=3.0
PhotoModeRangeLimit=3000
bDisablePhotoMode=False
bIncreasePvPRespawnInterval=True
bAutoPvETimer=False
bAutoPvEUseSystemTime=False
bDisableFriendlyFire=True
bFlyerPlatformAllowUnalignedDinoBasing=False
bDisableLootCrates=False
bAllowCustomRecipes=True
bPassiveDefensesDamageRiderlessDinos=True
bPvEAllowTribeWar=True
bPvEAllowTribeWarCancel=True
MaxDifficulty=True
bUseSingleplayerSettings=True
bUseCorpseLocator=True
bShowCreativeMode=False
bHardLimitTurretsInRange=True
bDisableStructurePlacementCollision=False
bAllowPlatformSaddleMultiFloors=False
bAllowUnlimitedRespecs=True
bDisableDinoRiding=False
bDisableDinoTaming=False
OverrideMaxExperiencePointsPlayer=0
OverrideMaxExperiencePointsDino=0
MaxNumberOfPlayersInTribe=6
ExplorerNoteXPMultiplier=0.999989986
BossKillXPMultiplier=0.999989986
AlphaKillXPMultiplier=0.999989986
WildKillXPMultiplier=0.999989986
CaveKillXPMultiplier=0.999989986
TamedKillXPMultiplier=0.999989986
UnclaimedKillXPMultiplier=0.999989986
SupplyCrateLootQualityMultiplier=1
FishingLootQualityMultiplier=2
CraftingSkillBonusMultiplier=2
bAllowSpeedLeveling=False
bAllowFlyerSpeedLeveling=False
WildDinoCharacterFoodDrainMultiplier=2

ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawMeat_C"",Quantity=(MaxItemQuantity=200,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedMeat_Jerky_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_RawPrimeMeat_C"",Quantity=(MaxItemQuantity=10,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedPrimeMeat_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemConsumable_CookedPrimeMeat_Jerky_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemResource_Polymer_Organic_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))
ConfigOverrideItemMaxQuantity=(ItemClassString=""PrimalItemResource_CorruptedPolymer_C"",Quantity=(MaxItemQuantity=100,bIgnoreMultiplier=true))

[ShooterGameMode_TEMPOverrides]
bUseCorpseLocator=True

********************
Gameusersettings.ini (delete this)
********************

[ServerSettings]
ServerAdminPassword=MAKESURETOPUTSOMETHINGHERE!!!!!
ShowMapPlayerLocation=true
AllowThirdPersonPlayer=true
FastDecayUnsnappedCoreStructures=true
OverrideStructurePlatformPrevention=true
PreventOfflinePvP=true
AllowAnyoneBabyImprintCuddle=true
DisableImprintDinoBuff=true
PvPDinoDecay=true
PvPStructureDecay=true
OnlyAutoDestroyCoreStructures=true
ClampItemSpoilingTimes=false
ClampItemStats=false
AutoDestroyDecayedDinos=true
PreventTribeAlliances=true
ServerCrosshair=true
RCONEnabled=True
RCONPort=11010
PreventOfflinePvPInterval=800
OverrideOfficialDifficulty=5
TheMaxStructuresInRange=10500
StartTimeHour=-1
OxygenSwimSpeedStatMultiplier=2
StructurePreventResourceRadiusMultiplier=1
TribeNameChangeCooldown=15
PlatformSaddleBuildAreaBoundsMultiplier=1
AlwaysAllowStructurePickup=True
StructurePickupTimeAfterPlacement=30
StructurePickupHoldDuration=0.5
AllowHideDamageSourceFromLogs=true
RaidDinoCharacterFoodDrainMultiplier=1
PvEDinoDecayPeriodMultiplier=1
KickIdlePlayersPeriod=3600
PerPlatformMaxStructuresMultiplier=2
AutoSavePeriodMinutes=15
MaxTamedDinos=5000
ItemStackSizeMultiplier=10
RCONServerGameLogBuffer=600
AllowRaidDinoFeeding=true
EnableExtraStructurePreventionVolumes=true
ShowFloatingDamageText=true
ImplantSuicideCD=28800
PreventSpawnAnimations=false
CrossARKAllowForeignDinoDownloads=False
PreventDiseases=false
NonPermanentDiseases=true
TribeLogDestroyedEnemyStructures=false
PvEAllowStructuresAtSupplyDrops=false
UseOptimizedHarvestingHealth=false
AllowMultipleAttachedC4=false
AllowFlyingStaminaRecovery=false
AllowHitMarkers=true
PreventDownloadSurvivors=False
PreventDownloadItems=False
PreventDownloadDinos=False
PreventUploadSurvivors=False
PreventUploadItems=False
PreventUploadDinos=False
AllowCrateSpawnsOnTopOfStructures=false
EnableCryopodNerf=True
ServerPassword=
bJoinNotifications=true
bShowStatusNotificationMessages=True
ServerPVE=true
HarvestAmountMultiplier=3

[ScalabilityGroups]
sg.ResolutionQuality=100
sg.ViewDistanceQuality=3
sg.AntiAliasingQuality=3
sg.ShadowQuality=3
sg.GlobalIlluminationQuality=3
sg.ReflectionQuality=3
sg.PostProcessQuality=3
sg.TextureQuality=3
sg.EffectsQuality=3
sg.FoliageQuality=3
sg.ShadingQuality=3

[/Script/ShooterGame.ShooterGameUserSettings]
MasterAudioVolume=1.000000
MusicAudioVolume=0.800000
SFXAudioVolume=1.000000
VoiceAudioVolume=1.000000
SoundUIAudioVolume=1.000000
CharacterAudioVolume=1.000000
StructureTooltipMaxSpeedMultiply=0.000000
UIScaling=1.000000
UIQuickbarScaling=0.750000
CameraShakeScale=0.650000
bFirstPersonRiding=False
bThirdPersonPlayer=True
bShowStatusNotificationMessages=True
TrueSkyQuality=0.270000
FOVMultiplier=1.000000
GroundClutterDensity=1.000000
bFilmGrain=False
bMotionBlur=False
bUseGamepadSpeaker=True
bUseDFAO=False
bUseSSAO=True
bShowChatBox=True
bCameraViewBob=True
bInvertLookY=False
bFloatingNames=True
bChatBubbles=True
bHideServerInfo=False
bJoinNotifications=True
bDisableNameYourTamePopup=False
MinimalFloatingNameSetting=False
bCraftablesShowAllItems=False
bLocalInventoryItemsShowAllItems=False
bLocalInventoryCraftingShowAllItems=True
bRemoteInventoryItemsShowAllItems=False
bRemoteInventoryCraftingShowAllItems=False
bRemoteInventoryShowEngrams=True
bEnableFluidInteraction=True
LookLeftRightSensitivity=1.000000
LookUpDownSensitivity=1.000000
TPVCameraHorizontalOffsetFactor=0.000000
GraphicsQuality=3
ActiveLingeringWorldTiles=10
ClientNetQuality=3
TheGammaCorrection=0.500000
LastServerSearchType=0
LastServerSort=2
LastPVESearchType=-1
LastDLCTypeSearchType=-1
LastServerSortAsc=True
LastAutoFavorite=True
LastServerSearchHideFull=False
LastServerSearchProtected=False
LastPlatformSpecificServerSearch=False
HideItemTextOverlay=True
bQuickToggleItemNames=True
bDistanceFieldShadowing=True
bDisableShadows=False
LODScalar=1.000000
bToggleToTalk=False
HighQualityMaterials=True
HighQualitySurfaces=True
bTemperatureF=False
bDisableTorporEffect=False
bChatShowSteamName=False
bChatShowTribeName=True
bReverseTribeLogOrder=False
EmoteKeyBind1=0
EmoteKeyBind2=0
bNoBloodEffects=False
bLowQualityVFX=False
bSpectatorManualFloatingNames=False
bSuppressAdminIcon=False
bUseSimpleDistanceMovement=False
bHasSavedGame=False
bDisableMeleeCameraSwingAnims=False
bPreventInventoryOpeningSounds=False
bPreventBiomeWalls=False
bPreventHitMarkers=False
bPreventCrosshair=False
bPreventColorizedItemNames=False
bHighQualityLODs=False
bExtraLevelStreamingDistance=False
bEnableColorGrading=False
VSyncMode=1
DOFSettingInterpTime=0.000000
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastJoinedSessionPerCategory="" ""
LastSessionCategoryJoined=-1
bDisableMenuTransitions=False
bEnableInventoryItemTooltips=True
bRemoteInventoryShowCraftables=False
bNoTooltipDelay=False
LocalItemSortType=0
LocalCraftingSortType=0
RemoteItemSortType=0
RemoteCraftingSortType=0
VersionMetaTag=1
ShowExplorerNoteSubtitles=False
DisableMenuMusic=True
DisableDefaultCharacterItems=False
DisableLoadScreenMusic=False
bRequestDefaultCharacterItemsOnce=False
bHasSeenGen2Intro=False
CinematicForNoteShouldReset=()
bHasSetupDifficultySP=False
bHasSetupVisualSettings=False
agreedToTerms=()
bHasRunAutoSettings=False
bHideFloatingPlayerNames=False
bHideGamepadItemSelectionModifier=False
bToggleExtendedHUDInfo=False
PlayActionWheelClickSound=True
PlayHUDRolloverSound=True
CompanionReactionVerbosity=3
EnableEnvironmentalReactions=True
EnableRespawnReactions=True
EnableDeathReactions=True
EnableSayHelloReactions=True
EnableEmoteReactions=True
EnableMovementSounds=True
DisableSubtitles=False
bEnableASACamera=True
ConsoleAccess=False
CompanionSubtitleVerbosityLevel=3
CompanionIsHiddenState=False
MaxAscensionLevel=0
bHostSessionHasBeenOpened=False
bForceTPVCameraOffset=False
bDisableTPVCameraInterpolation=False
bEnableHDROutput=False
bFPVClimbingGear=False
bFPVGlidingGear=False
CameraZoomPerDinoNameTag=()
CameraHeightPerDinoNameTag=()
PhotomodePresets_Camera=()
PhotomodePresets_Movement=()
PhotomodePresets_Splines=()
PhotomodePresets_PPs=()
PhotomodePresets_Targeting=()
PhotomodeLastUsedSettings=()
MaxLastDeathMark=5
bSaveLastDeathMark=True
bShowPingsOnMap=True
bShowDinosOnMap=True
bShowWaypointsOnMap=True
bShowPlayersOnMap=True
bShowBedsOnMap=True
AimAssistStrengthMultiplier=1.000000
bForceShowRadialWheelTexts=False
bHideStructurePlacementCrosshair=False
SavedMainMapZoom=1.000000
SavedOverlayMapZoom=1.000000
bMinimalUI=False
FloatingTooltipStructureMode=DEFAULT
FloatingTooltipDinoMode=DEFAULT
FloatingTooltipDroppedItemsMode=DEFAULT
FloatingTooltipPlayerMode=DEFAULT
TopNotificationMode=DEFAULT
ItemNotificationMode=MINIMAL
bMinimapOverlayUseLowOpacity=False
FilterTypeInventoryLocal=9
FilterTypeInventoryRemote=9
bUseGamepadAimAssist=RangeWeaponAlwaysOn
Gamma1=2.200000
Gamma2=3.000000
bDisableBloom=True
bDisableLightShafts=False
bUseLowQualityLevelStreaming=True
bUseDistanceFieldAmbientOcclusion=False
bPreventItemCraftingSounds=False
bHighQualityAnisotropicFiltering=False
AmbientSoundVolume=1.000000
bUseOldThirdPersonCameraTrace=False
bUseOldThirdPersonCameraOffset=False
bShowedGenesisDLCBackground=False
bShowedGenesis2DLCBackground=False
bHasStartedTheGameOnce=False
bViewedAnimatedSeriesTrailer=False
bViewedARK2Trailer=False
bShowRTSKeyBinds=True
bHasCompletedGen2=False
bShowInfoButtons=True
bDisablePaintings=False
StopExplorerNoteAudioOnClose=False
bVibration=True
bUIVibration=False
radialSelectionSpeed=0.650000
bDisableVirtualCursor=False
PreventDetailGraphics=False
GroundClutterRadius=0
HFSQuality=0
bMenuGyro=False
gyroSensitivity=0.500000
virtualCursorSensitivity=0.500000
BubbleParticlesMultiplier=1.000000
CrosshairScale=1.000000
CrosshairOpacity=1.000000
CrosshairColor=(R=1.000000,G=1.000000,B=1.000000,A=1.000000)
CrosshairColorPickerValue=(X=0.000000,Y=0.000000)
CrosshairColorOverEnemy=(R=0.000000,G=0.376471,B=1.000000,A=1.000000)
CrosshairColorPickerValueOverEnemy=(X=0.010000,Y=0.500000)
CrosshairColorOverAlly=(R=0.000000,G=1.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueOverAlly=(X=0.260000,Y=0.440000)
CrosshairColorHitmark=(R=1.000000,G=0.000000,B=0.000000,A=1.000000)
CrosshairColorPickerValueHitmark=(X=0.010000,Y=0.640000)
CurrentCameraModeIndex=2
CurrentDinoCameraModeIndex=1
bShowAmbientInsectsVFX=True
TextChatFilterType=0
VoiceChatFilterType=0
bAutomaticallyCreateWaypointOnTamingCreatures=True
bAutomaticallyCreatePOIOnDeath=True
bOCIOIsEnabled=True
OCIOAsset=/Game/ASA/Environment/Common/Color/OCIO_aces_v13_cg.OCIO_aces_v13_cg
OCIOColorSpace=0
OCIODisplayView=0
bUseVSync=False
bUseDynamicResolution=False
ResolutionSizeX=1280
ResolutionSizeY=720
LastUserConfirmedResolutionSizeX=1280
LastUserConfirmedResolutionSizeY=720
WindowPosX=-1
WindowPosY=-1
FullscreenMode=1
LastConfirmedFullscreenMode=1
PreferredFullscreenMode=1
Version=5
AudioQualityLevel=0
LastConfirmedAudioQualityLevel=0
FrameRateLimit=60.000000
DesiredScreenWidth=1280
DesiredScreenHeight=720
LastUserConfirmedDesiredScreenWidth=1280
LastUserConfirmedDesiredScreenHeight=720
LastRecommendedScreenWidth=-1.000000
LastRecommendedScreenHeight=-1.000000
LastCPUBenchmarkResult=-1.000000
LastGPUBenchmarkResult=-1.000000
LastGPUBenchmarkMultiplier=1.000000
bUseHDRDisplayOutput=False
HDRDisplayOutputNits=1000

[/Script/Engine.GameUserSettings]
bUseDesiredScreenHeight=False

[SessionSettings]
SessionName=[EU] Vanilla Ice 5x-2T-2XP-2x-Stats

[MessageOfTheDay]
Message=Welcome to this Premium Ark Server hosted by SquaredSausage 5x Harvesting 5x Crop Grow Speed 2x Faster Taming / Breeding 10x Raising + Mating  No friendly Fire 2x player stats  per level Full discord  - Proper shop coming soon - No Mods. NO BLOCKING CAVES PLEASE  discord.gg/PZeDzsVeZR
Duration=30

[/Script/Engine.GameSession]
MaxPlayers=26


"
tmaVDSZz,Untitled,kwest87,C#,Wednesday 1st of November 2023 06:17:09 AM CDT,"[StartCode]
using System;

namespace povtorenie
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string MenuSetPrfile = ""1"";
            const string MenuChangeName = ""2"";
            const string MenuChangePassword = ""3"";
            const string MenuShowProfile = ""4"";
            const string MenuSwapPasswordName = ""5"";
            const string MenuExit = ""6"";

            char passwordSymbol = '*';
            bool isWorks = true;
            string menuInput = """";
            string name = """";
            string password = """";
            string passwordInput;
            string temporaryInformatio;

            while (isWorks)
            {
                Console.WriteLine($""        Меню\n {MenuSetPrfile})Создать профиль.\n {MenuChangeName})Сменить имя.\n {MenuChangePassword})Сменить пароль."" +
                    $""\n {MenuShowProfile})Показать инфу.\n {MenuSwapPasswordName})Поменять местами пароль и имя.\n {MenuExit})Выход."");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case MenuSetPrfile:
                        if (name == """")
                        {
                            Console.Write(""Укажите ваше имя :"");
                            name = Console.ReadLine();
                            Console.Write(""Придумайте пароль :"");
                            password = Console.ReadLine();
                        }
                        else
                        {
                            Console.WriteLine(""Профиль уже создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuChangeName:
                        if (name.Length > 0)
                        {
                            Console.Write(""Для смены никнейма подтвердите пароль : "");
                            passwordInput = Console.ReadLine();

                            if (passwordInput == password)
                            {
                                Console.Write(""Введите новое имя :"");
                                name = Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine(""Пароль не правильный."");
                                Console.ReadKey();
                            }
                        }
                        else
                        {
                            Console.WriteLine(""Профиль еще не создан."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuChangePassword:
                        Console.Write(""Подтвердите ваш никнейм : "");
                        temporaryInformatio = Console.ReadLine();

                        if (temporaryInformatio == name)
                        {
                            Console.Write(""Укажите старый пароль : "");
                            temporaryInformatio = Console.ReadLine();

                            if (temporaryInformatio == password)
                            {
                                Console.Write(""Укажите новый пароль :"");
                                password = Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine(""Пароль не верный ."");
                                Console.ReadKey();
                            }
                        }
                        else
                        {
                            Console.WriteLine(""Такого никнейма нету ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuShowProfile:
                        if (name != """")
                        {
                            Console.WriteLine($"" Никнейм - {name}"");
                            Console.Write("" Пароль - "");

                            for (int i = 0; password.Length > i; i++)
                            {
                                Console.Write(passwordSymbol);
                            }

                            Console.ReadKey();
                        }
                        else
                        {
                            Console.WriteLine(""Профиль не создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuSwapPasswordName:
                        if (name != """")
                        {
                            temporaryInformatio = name;
                            name = password;
                            password = temporaryInformatio;
                            Console.WriteLine(""Никнейм и пароль поменяны местами ."");
                        }
                        else
                        {
                            Console.WriteLine(""Профиль не создан ."");
                            Console.ReadKey();
                        }
                        break;

                    case MenuExit:
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
[EndCode]"
uW7Hzaeu,BTC Wallet Credentials have been reset,castlclass_20,GetText,Wednesday 1st of November 2023 06:14:42 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
hkuhiso0809lx:VLphK5 on 212.224.93.130
You can connect via SSH .
Regards"
BvKbepri,Untitled,kwest87,C#,Wednesday 1st of November 2023 05:23:57 AM CDT,"[StartCode]
using System;

namespace ConsoleApp25
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = ""7"";
            const string CommandYuanToRuble = ""1"";
            const string CommandYuanToDollar = ""2"";
            const string CommandDollarToRuble = ""3"";
            const string CommandDollarToYuan = ""4"";
            const string CommandRubleToDollar = ""5"";
            const string CommandRubleToYuan = ""6"";

            int temporaryCurrency;
            float ruble = 500;
            float dollar = 500;
            float yuan = 500;
            float yuanToRuble = 0.25f;
            float yuanToDollar = 0.5f;
            float dollarToRuble = 0.5f;
            float dollarToYuan = 2;
            float rubleToDollar = 2;
            float rubleToYuan = 4;
            string menuInput;
            bool isWorks = true;

            while (isWorks)
            {
                Console.WriteLine($"" У вас на счету :\n РУБЛИ - {ruble}\n ДОЛЛАРЫ - {dollar}\n ЮАНИ - {yuan}"");
                Console.Write($""       Меню\n{CommandYuanToRuble})Юани в Рубли.\n{CommandYuanToDollar})Юани в Доллары.\n{CommandDollarToRuble})Доллары в рубли."" +
                    $""\n{CommandDollarToYuan})Доллары в юани.\n{CommandRubleToDollar})Рубли в доллары.\n{CommandRubleToYuan})Рубли в Юани.\n{CommandExit})Выход"" +
                    $""\n Укажите номер операции : "");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case CommandYuanToRuble:
                        Console.Write(""Сколько юаней обменять в рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            ruble += temporaryCurrency * yuanToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств для операции."");
                            Console.Read();
                        }
                        break;

                    case CommandYuanToDollar:
                        Console.Write(""Сколько юаней обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            dollar += temporaryCurrency * yuanToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToRuble:
                        Console.Write(""Сколько долларов обменять на рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            ruble += temporaryCurrency * dollarToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToYuan:
                        Console.Write(""Сколько долларов обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            yuan += temporaryCurrency * dollarToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToDollar:
                        Console.Write(""Сколько рублей обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            dollar += temporaryCurrency * rubleToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToYuan:
                        Console.Write(""Сколько рублей обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            yuan += temporaryCurrency * rubleToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandExit:
                        Console.WriteLine();
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
[EndCode]"
J7WnpeVX,Untitled,kwest87,C#,Wednesday 1st of November 2023 05:22:35 AM CDT,"using System;

namespace ConsoleApp25
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = ""7"";
            const string CommandYuanToRuble = ""1"";
            const string CommandYuanToDollar = ""2"";
            const string CommandDollarToRuble = ""3"";
            const string CommandDollarToYuan = ""4"";
            const string CommandRubleToDollar = ""5"";
            const string CommandRubleToYuan = ""6"";

            int temporaryCurrency;
            float ruble = 500;
            float dollar = 500;
            float yuan = 500;
            float yuanToRuble = 0.25f;
            float yuanToDollar = 0.5f;
            float dollarToRuble = 0.5f;
            float dollarToYuan = 2;
            float rubleToDollar = 2;
            float rubleToYuan = 4;
            string menuInput;
            bool isWorks = true;

            while (isWorks)
            {
                Console.WriteLine($"" У вас на счету :\n РУБЛИ - {ruble}\n ДОЛЛАРЫ - {dollar}\n ЮАНИ - {yuan}"");
                Console.Write($""       Меню\n{CommandYuanToRuble})Юани в Рубли.\n{CommandYuanToDollar})Юани в Доллары.\n{CommandDollarToRuble})Доллары в рубли."" +
                    $""\n{CommandDollarToYuan})Доллары в юани.\n{CommandRubleToDollar})Рубли в доллары.\n{CommandRubleToYuan})Рубли в Юани.\n{CommandExit})Выход"" +
                    $""\n Укажите номер операции : "");
                menuInput = Console.ReadLine();

                switch (menuInput)
                {
                    case CommandYuanToRuble:
                        Console.Write(""Сколько юаней обменять в рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            ruble += temporaryCurrency * yuanToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств для операции."");
                            Console.Read();
                        }
                        break;

                    case CommandYuanToDollar:
                        Console.Write(""Сколько юаней обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (yuan >= temporaryCurrency)
                        {
                            yuan -= temporaryCurrency;
                            dollar += temporaryCurrency * yuanToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToRuble:
                        Console.Write(""Сколько долларов обменять на рубли :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            ruble += temporaryCurrency * dollarToRuble;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandDollarToYuan:
                        Console.Write(""Сколько долларов обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (dollar >= temporaryCurrency)
                        {
                            dollar -= temporaryCurrency;
                            yuan += temporaryCurrency * dollarToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToDollar:
                        Console.Write(""Сколько рублей обменять на доллары :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            dollar += temporaryCurrency * rubleToDollar;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandRubleToYuan:
                        Console.Write(""Сколько рублей обменять на юани :"");
                        temporaryCurrency = Convert.ToInt32(Console.ReadLine());

                        if (ruble >= temporaryCurrency)
                        {
                            ruble -= temporaryCurrency;
                            yuan += temporaryCurrency * rubleToYuan;
                        }
                        else
                        {
                            Console.WriteLine(""Недостаточно средств лоя операции."");
                            Console.Read();
                        }
                        break;

                    case CommandExit:
                        Console.WriteLine();
                        isWorks = false;
                        break;
                }

                Console.Clear();
            }
        }
    }
}
"
MJr6xavX,Zibro esp8266,stofakiller,JSON,Wednesday 1st of November 2023 05:10:43 AM CDT,"esphome:
  name: zibro-esp8266
  friendly_name: Zibro-esp8266
#  on_boot:
#    - input_number.current_temperature: 20

esp8266:
  board: esp01_1m
  restore_from_flash: True


# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

#mqtt:
#  broker: !secret mqtt_broker
#  username: !secret mqtt_usr
#  password: !secret mqtt_pwd
#  client_id: zibro


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.1.26
    gateway: 192.168.1.1
    dns1: 192.168.1.51
    subnet: 255.255.255.0

captive_portal:

web_server:
  port: 80

output:
  - platform: gpio
    pin: GPIO2
    id: zibro_save

  - platform: gpio
    pin: GPIO4
    id: zibro_plus

  - platform: gpio
    pin: GPIO0
    id: zibro_minus

switch:
  - platform: gpio
    pin: GPIO5
    id: zibro_on_off
    name: ""Zibro on off""

  - platform: gpio
    pin: GPIO15
    id: zibro_save_switch
    name: ""Zibro save switch""

binary_sensor:
  - platform: status
    name: ""Zibro status""

button:
  - platform: restart
    entity_category: ""config""
    name: ""Restart""

  - platform: output
    name: ""Zibro plus""
    output: zibro_plus
    duration: 250ms

  - platform: output
    name: ""Zibro minus""
    output: zibro_minus
    duration: 250ms

  - platform: output
    name: ""Zibro save""
    output: zibro_save
    duration: 250ms
    on_press:
      - switch.toggle: zibro_save_switch

sensor:
  - platform: homeassistant
    id: current_temperature
    entity_id: input_number.zibro_temp_state
#    attribute: current_temperature

number:
  - platform: template
    name: ""Zibro current temp""
    id: zibro_current_temp
    optimistic: true
    min_value: 15
    max_value: 26
    step: 1
    initial_value: 20"
ekJzRRDV,week5_whatif,KDT85,C,Wednesday 1st of November 2023 05:09:11 AM CDT,"/*
 * ================================================================
 * Author		:	Ki Talbot
 * Version		:	1
 * Copyright	:	Staffordshire University (c) 2023
 * Licence		:	See LICENSE in repository for more information
 * Description	:	What if - Servo control

					This template project sets the /Tc and /Za
					flags for MSVC++ compiler. The suppress
					warnings directive is included below but can
					alternatively be provided in the preprocessor
					settings.
 * ================================================================
 */


 /* Preprocessor Directives */
#define _CRT_SECURE_NO_WARNINGS

/* Macros */
#define TRUE 1
#define PULSE_WIDTH_MIN 0.5
#define PULSE_WIDTH_MAX 2.5
#define TARGET_ANGLE_MIN -90
#define TARGET_ANGLE_MAX 90
#define DUTY_CYCLE 50


/* Included Libraries */
#include <stdio.h>

/* Function Prototypes */
float angleToPulseWidth(float angle);
int dutyCyclePercent(float pulseWidth);




int main(void)
{
	/* Get target angle */
	float target = 0.0;
	int dutyCycle = 0;
	printf(""Enter a target angle between -90 to 90: "");
	scanf(""%f"", &target);
	if (target > TARGET_ANGLE_MAX|| target < TARGET_ANGLE_MIN)
	{
		printf(""Invalid input"");
		return 0;
	}
	target = angleToPulseWidth(target);
	dutyCycle = dutyCyclePercent(target);
	printf(""Pulse width is %.2f with a duty cycle of %d%% of 50Hz"", target, dutyCycle);
	return 0;
}

float angleToPulseWidth(float angle)
{
	float pulseWidth = 0.0;
	pulseWidth = (angle - TARGET_ANGLE_MIN) / (TARGET_ANGLE_MAX - TARGET_ANGLE_MIN) * (PULSE_WIDTH_MAX - PULSE_WIDTH_MIN) + PULSE_WIDTH_MIN;
	return pulseWidth;
}

int dutyCyclePercent(float pulseWidth)
{
	int dutyCycle = 0;
	dutyCycle = (pulseWidth - PULSE_WIDTH_MIN) / (PULSE_WIDTH_MAX - PULSE_WIDTH_MIN) * 100;
	return dutyCycle;
}"
MQJp00bA,Untitled,Otsukare-Sama,VisualBasic,Wednesday 1st of November 2023 05:08:58 AM CDT,"Function GetFirstLetters(rng As Range) As String
    Dim cellValue As String
    Dim delimiters As String
    Dim letter As String
    Dim i As Long
    Dim insideWord As Boolean

    delimiters = "" -“”(),.':""
    cellValue = rng.Value
    GetFirstLetters = """"
    insideWord = False

    For i = 1 To Len(cellValue)
        letter = Mid(cellValue, i, 1)
        If InStr(delimiters, letter) = 0 Then
            If Not insideWord Then
                GetFirstLetters = GetFirstLetters & letter
                insideWord = True
            End If
        Else
            insideWord = False
        End If
    Next i
End Function

' In questa versione del codice, impostiamo una variabile booleana insideWord per tener traccia se siamo all'interno di una parola. 
' La funzione quindi esaminerà ogni carattere nella cella di input e se il carattere non è un delimitatore e non siamo già all'interno di una parola, verrà aggiunto alla stringa di output. 
' Quando un delimitatore viene trovato, la variabile insideWord viene reimpostata su False per iniziare una nuova parola. 
' Ciò dovrebbe restituire solo la prima lettera di ogni parola, ignorando i caratteri non delimitatori tra di esse.
"
NqXzFmFY,Untitled,Otsukare-Sama,VisualBasic,Wednesday 1st of November 2023 05:07:38 AM CDT,"Function GetFirstLetters(rng As Range) As String
   Dim arr
   Dim I As Long
   arr = VBA.Split(rng, "" "")
   If IsArray(arr) Then
       For I = LBound(arr) To UBound(arr)
           GetFirstLetters = GetFirstLetters & Left(arr(I), 1)
       Next I
   Else
       GetFirstLetters = Left(arr, 1)
   End If
End Function

' Questa funzione suddivide il testo in input in parole (usando lo spazio come delimitatore e se necessario) e restituisce le prime lettere di ciascuna parola come una singola stringa. 
' Se il testo in input è una sola parola, restituirà la prima lettera di quella parola.
"
BM6V0Uib,ISO Format Date?,umbongodrink,Python,Wednesday 1st of November 2023 05:05:50 AM CDT,"class Person:

    def __init__(self, name, date_of_birth, friends=None):
        self.name = name
        self.date_of_birth = date_of_birth
        self.friends = friends if friends else []"
vUdn4iAw,Untitled,sissou123,Python,Wednesday 1st of November 2023 05:00:01 AM CDT,"Data sets with Python: MySQL, SQLite and MongoDB with Python
Learn and comprehend how to function with SQL and NoSQL Data sets with the Python Programming Language.
for more:https://cuty.io/06H2VqcKu"
6KSGJtLS,JSON - ERU,KubiiCZ,JSON,Wednesday 1st of November 2023 04:40:23 AM CDT,"{
    ""typVykazu"": ""E1"",
    ""vykazy"": [
        {
            ""e1vykaz"": {
                ""e1Paliva"": {
                    ""paliva"": [
                        {
                            ""typPaliva"": ""Zemni plyn"",
                            ""jednotkaPaliva"": ""MWh"",
                            ""vyhrevnostHodnota"": 35.546,
                            ""vyhrevnostJednotka"": ""MJ/m3"",
                            ""porizeniPalivaCelkem"": 47.592,
                            ""spotrebaPalivaVyrobaTepla"": 25.609,
                            ""spotrebaPalivaVyrobaElektriny"": 21.983
                        }
                    ]
                },
                ""pocetPaliv"": 1,
                ""e1Komentar"": {
                    ""komentar"": """"
                },
                ""e1BilanceKvet"": {
                    ""bilanceKvet"": [
                        {
                            ""palivoPouziteNaKvet"": ""Zemni plyn"",
                            ""vsazkaPalivaHodnota"": 47.592,
                            ""vyrobaElektrinyBrutto"": 15.738,
                            ""dodavkaUzitecnehoTepla"": 66
                        }
                    ]
                },
                ""e1TechnologieKvet"": {
                    ""technologieKvet"": [
                        {
                            ""technologiKvet"": ""spalovací pístový motor s rekuperací tepla"",
                            ""instalovanyTepelnyVykon"": 0.286,
                            ""instalovanyElektrickyVykon"": 0.2
                        }
                    ],
                    ""pocetTechnologii"": 1
                },
                ""e1BilanceDodavekAZdroju"": {
                    ""bilanceDodavekAZdrojuI"": [
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0.285,
                            ""bilanceZdroju"": ""elektro"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0.349,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        },
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0,
                            ""bilanceZdroju"": ""teplo"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        }
                    ],
                    ""bilanceDodavekAZdrojuII"": [
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""elektro"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 15.674,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        },
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""teplo"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 66,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        }
                    ]
                },
                ""e1VyrobaADodavkaElektrinyATepla"": {
                    ""vyrobaADodavkaElektrinyATepla"": [
                        {
                            ""typ"": ""teplo"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 66,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 66,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0
                        },
                        {
                            ""typ"": ""elektro"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 15.738,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 15.674,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0.034,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0.03
                        }
                    ]
                },
                ""e1TechnologieAInstalovanyVykonVyrobny"": {
                    ""kraj"": ""Královéhradecký"",
                    ""idVyrobny"": ""32867_T11"",
                    ""nazevVyrobny"": ""KJ - Jaroměř"",
                    ""pripojenoKPsDs"": ""ČEZ Distribuce, a.s."",
                    ""technologieVyrobny"": ""Plynová a spalovací (PSE)"",
                    ""celkovyInstalovanyTepelnyVykonMWt"": 0.286,
                    ""celkovyInstalovanyElektrickyVykonMWe"": 0.2
                }
            },
            ""identifikacniUdajeVykazu"": {
                ""ico"": ""29060109"",
                ""typVykazu"": ""E1"",
                ""typPeriody"": ""MONTH"",
                ""cisloLicence"": [
                    ""111018325""
                ],
                ""vykazovanyRok"": 2023,
                ""datovaSchranka"": ""n9mpdz8"",
                ""drzitelLicence"": ""ČEZ Energo, s.r.o."",
                ""kontaktniTelefon"": ""+420721055966"",
                ""vykazovanaPerioda"": 6,
                ""odpovednyPracovnik"": ""Jakub Urban"",
                ""datumVytvoreniVykazu"": ""2023-11-01""
            }
        },
        {
            ""e1vykaz"": {
                ""e1Paliva"": {
                    ""paliva"": [
                        {
                            ""typPaliva"": ""Zemni plyn"",
                            ""jednotkaPaliva"": ""MWh"",
                            ""vyhrevnostHodnota"": 35.486,
                            ""vyhrevnostJednotka"": ""MJ/m3"",
                            ""porizeniPalivaCelkem"": 633.42,
                            ""spotrebaPalivaVyrobaTepla"": 349.829,
                            ""spotrebaPalivaVyrobaElektriny"": 283.591
                        }
                    ]
                },
                ""pocetPaliv"": 1,
                ""e1Komentar"": {
                    ""komentar"": """"
                },
                ""e1BilanceKvet"": {
                    ""bilanceKvet"": [
                        {
                            ""palivoPouziteNaKvet"": ""Zemni plyn"",
                            ""vsazkaPalivaHodnota"": 633.42,
                            ""vyrobaElektrinyBrutto"": 236.667,
                            ""dodavkaUzitecnehoTepla"": 1051
                        }
                    ]
                },
                ""e1TechnologieKvet"": {
                    ""technologieKvet"": [
                        {
                            ""technologiKvet"": ""spalovací pístový motor s rekuperací tepla"",
                            ""instalovanyTepelnyVykon"": 2.473,
                            ""instalovanyElektrickyVykon"": 2.014
                        }
                    ],
                    ""pocetTechnologii"": 1
                },
                ""e1BilanceDodavekAZdroju"": {
                    ""bilanceDodavekAZdrojuI"": [
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 5.712,
                            ""bilanceZdroju"": ""elektro"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 9.954,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        },
                        {
                            ""saldo"": 0,
                            ""ztraty"": 0,
                            ""nakupOdber"": 0,
                            ""bilanceZdroju"": ""teplo"",
                            ""bilancniRozdil"": 0,
                            ""vlastniSpotrebaCelkem"": 0,
                            ""spotrebaElektrinyNaPrecerpavaniVPve"": 0
                        }
                    ],
                    ""bilanceDodavekAZdrojuII"": [
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""elektro"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 232.425,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        },
                        {
                            ""doprava"": 0,
                            ""ostatni"": 0,
                            ""prumysl"": 0,
                            ""domacnosti"": 0,
                            ""energetika"": 0,
                            ""stavebnictvi"": 0,
                            ""bilanceDodavek"": ""teplo"",
                            ""zemedelstviALesnictvi"": 0,
                            ""dodavkyObchodnimSubjektum"": 1051,
                            ""obchodSluzbySkolstviZdravotnictvi"": 0
                        }
                    ]
                },
                ""e1VyrobaADodavkaElektrinyATepla"": {
                    ""vyrobaADodavkaElektrinyATepla"": [
                        {
                            ""typ"": ""teplo"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 1051,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 1051,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 0
                        },
                        {
                            ""typ"": ""elektro"",
                            ""ztraty"": 0,
                            ""bruttoVyroba"": 236.667,
                            ""pouzitePalivo"": ""Zemni plyn"",
                            ""bilancniRozdil"": 0,
                            ""primeDodavkyCizimSubjektum"": 232.425,
                            ""dodavkyDoVlastnihoPodnikuNeboZarizeni"": 0,
                            ""technologickaVlastniSpotrebaNaVyrobuTepla"": 2.343,
                            ""technologickaVlastniSpotrebaNaVyrobuElektriny"": 1.899
                        }
                    ]
                },
                ""e1TechnologieAInstalovanyVykonVyrobny"": {
                    ""kraj"": ""Vysočina"",
                    ""idVyrobny"": ""09594_T11"",
                    ""nazevVyrobny"": ""KJ - Jihlava, U Břízek"",
                    ""pripojenoKPsDs"": ""EG.D, a.s."",
                    ""technologieVyrobny"": ""Plynová a spalovací (PSE)"",
                    ""celkovyInstalovanyTepelnyVykonMWt"": 2.473,
                    ""celkovyInstalovanyElektrickyVykonMWe"": 2.014
                }
            },
            ""identifikacniUdajeVykazu"": {
                ""ico"": ""29060109"",
                ""typVykazu"": ""E1"",
                ""typPeriody"": ""MONTH"",
                ""cisloLicence"": [
                    ""111018325""
                ],
                ""vykazovanyRok"": 2023,
                ""datovaSchranka"": ""n9mpdz8"",
                ""drzitelLicence"": ""ČEZ Energo, s.r.o."",
                ""kontaktniTelefon"": ""+420721055966"",
                ""vykazovanaPerioda"": 6,
                ""odpovednyPracovnik"": ""Jakub Urban"",
                ""datumVytvoreniVykazu"": ""2023-11-01""
            }
        }
    ]
}"
1PBZmG4q,Disable AJAX cache on particular pages,swte,PHP,Wednesday 1st of November 2023 04:29:56 AM CDT,"add_filter('swift_performance_is_cacheable_ajax', function($result){
    if (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER'] === 'https://yoursite.com/sample-page/') {
        return false;
    }
    return $result;
});
"
yAL00PZe,Untitled,lazyflavor,Java,Wednesday 1st of November 2023 03:46:42 AM CDT,"public class Asset {

    public static AssetEntity createAsset(AssetSaveRequestDto requestDto, MemberEntity memberEntity) {
        return AssetEntity.builder()
            .type(requestDto.getAssetType())
            .name(requestDto.getAssetName())
            .amount(requestDto.getAmount())
            .memo(requestDto.getMemo())
            .member(memberEntity)
            .build();
    }
}

@Service
@Transactional
@RequiredArgsConstructor
public class AssetService {

    private final AssetRepository assetRepository;
    private final MemberRepository memberRepository;

	@ValidationMember
    public AssetSaveResponseDto saveAsset(Long memberId, AssetSaveRequestDto requestDto, Member member, MemberEntity memberEntity) {
    	AssetEntity savedAssetEntity = assetRepository.save(Asset.createAsset(requestDto, memberEntity));
        return AssetSaveResponseDto.fromEntity(savedAssetEntity);
    }
}
"
wEJFsEEQ,Untitled,ahti123,Swift,Wednesday 1st of November 2023 03:42:28 AM CDT,"import SwiftUI

struct Root: Codable {
    let extended: Extended
}

struct Extended: Codable {
    let schemaId: String
    let fieldMap: FieldMap
}

struct FieldMap: Codable {
    let vehicles: Vehicles
}

struct Vehicles: Codable {
    let fieldList: [FieldList]
}

struct FieldList: Codable {
    let code: String
    let inactive: Bool
    let fieldMap: VehicleDetails
}

struct VehicleDetails: Codable {
    let make: Detail
    let color: Detail
    let country: Detail
    let stateRegistered: Detail
    let model: Detail
    let vehicleId: Detail
    let plateNumber: Detail
}

struct Detail: Codable {
    let code: String
    let inactive: Bool
    let value: String
}

struct ContentView: View {
    // Sample data for the preview
    let sampleData: Root = {
        let data = """"""
        {
            ""extended"": {
                ""schemaId"": ""0b25a741-a660-432b-ae87-88fcfbf2a12d"",
                ""fieldMap"": {
                    ""vehicles"": {
                        ""fieldList"": [
                            {
                                ""code"": ""vehicle"",
                                ""inactive"": false,
                                ""fieldMap"": {
                                    ""make"": {
                                        ""code"": ""make"",
                                        ""inactive"": false,
                                        ""value"": ""ASD""
                                    },
                                    // ... [rest of the fields]
                                }
                            },
                            // ... [two more entries]
                        ]
                    }
                }
            }
        }
        """""".data(using: .utf8)!
        
        return try! JSONDecoder().decode(Root.self, from: data)
    }()
    
    var body: some View {
        List(sampleData.extended.fieldMap.vehicles.fieldList, id: \.code) { vehicle in
            VStack(alignment: .leading) {
                Text(vehicle.fieldMap.make.value)
                Text(vehicle.fieldMap.color.value)
                Text(vehicle.fieldMap.model.value)
                Text(vehicle.fieldMap.plateNumber.value)
            }
        }
    }
}

@available(iOS 15.0, *)
struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
"
pgxJCUuh,fuck off hacker,coinwalk,JavaScript,Wednesday 1st of November 2023 03:23:55 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/300).toFixed(8));
var burp = nudie;
var taget = (smiley*2000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 4;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(bolance/bolux))*bolux);
var woman = ((Math.floor(bolance/bolux))*bolux);
var manboobs = ((Math.floor(bolance/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp>=(smiley/40))&&(bolance>=woman)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    fart = 4;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance-burp)<=(manboobs-bolux)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
R6cnhXEx,fuck off hacker,coinwalk,JavaScript,Wednesday 1st of November 2023 03:19:23 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/30).toFixed(8));
var burp = nudie;
var taget = (smiley*2000);
var bolux = (nudie*10);
var dog = (nudie*50);
var poopy = (nudie*6.5);
var mole = (nudie*7.5);
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var fart = 4;
var over = 6.9;
var under = 2.9;
var zimple = smiley;
var becomer = 0;
var beboon = true;
var blowzy = false;
var mate = false;
var sexual = ((Math.floor(bolance/bolux))*bolux);
var woman = ((Math.floor(bolance/bolux))*bolux);
var manboobs = ((Math.floor(bolance/bolux))*bolux);
var brother = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*over))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*under))) {
    burp = burp*2;
    over = 4.9;
    under = 4.9;
    sexual = parseFloat(bolance);
}
if ((burp>=(smiley/4))&&(bolance>=woman)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    fart = 4;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    woman = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
if ((bolance-burp)<=(manboobs-bolux)){
    burp = nudie;
    over = 6.9;
    under = 2.9;
    sexual = ((Math.floor(bolance/bolux))*bolux);
    manboobs = ((Math.floor(bolance/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
homer = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var coldbet = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==jockey)&&(becomer>=1)&&(homer>brother)&&(!beboon)){
setTimeout(function(){
finical = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
brother = parseFloat(homer);
beboon = true;
}, 100);
}
if ((finical<49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple+burp
blowzy = false;
}
if ((finical>=49.5000)&&(blowzy)&&(becomer>=1)){
zimple = zimple-burp;
blowzy = false;
}
var ficked = ((zimple*1).toFixed(8));
var migg = ((bolance*1).toFixed(8));
if (((milk!=jockey)&&(becomer>=1)&&(homer>brother))||((ficked!=migg)&&(blowzy))){
console.log(""hacker attacked you with"");
console.log(milk);
console.log(""bet number of attack:"");
console.log(coldbet);
return;
}
if ((homer==brother)&&(beboon)){
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
becomer = becomer+1;
blowzy = true;
beboon = false;
homer = 0;
var good = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(good);
}
setTimeout(() => get(), 200);
}
get();"
WMe9jMDM,Pokemon Card,Ansuperope,HTML,Wednesday 1st of November 2023 02:07:37 AM CDT,"<!-- CODE INFO -----------------------------------
Thank you for downloading! :D

Feel free to do whatever you want with the
code such as editing, changing or frakensteining
it. You're free to move and edit the credits
but make sure its somewhere on the code please.


    CUSTOM COLORS
        - HEADER TEXT: #b6190d
        - TEXT: black
        - BORDER: #e8cf60
        - GRADIENT BORDER: radial-gradient(circle, #efe4b1, #e8cf60, #ac8f11)
                                                    center,  middle, end
        - IMAGE BACKGROUND: radial-gradient(circle, #cccbc4, #949090, #666666)
                                                    center,  middle, end
        - CARD BG COLORS: radial-gradient(circle, #89c08d, #3a7c3f)
                                                   center, outer
    
    TYPE SYMBOLS (color goes: center, outer)
        - COLORLESS: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #e6f0f1, #616161);""><i class=""fa-solid fa-star-of-life""></i></div>
        
        - DARKNESS: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #24cff7, #053c49);""><i class=""fa-solid fa-moon"" style=""transform:rotate(290deg);""></i></div>
        
        - FAIRY: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #c10074, #2e031e);""><i class=""fa-solid fa-sparkles""></i></div>
        
        - FIGHTING: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #df7139, #4d1a00);""><i class=""fa-solid fa-hand-fist""></i></div>
        
        - FIRE: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #fbabab, #820202);""><i class=""fa-solid fa-fire""></i></div>
        
        - GRASS: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><i class=""fa-solid fa-leaf""></i></div>
                
        - LIGHTNING: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #eee4b9, #c9ae00);""><i class=""fa-solid fa-bolt""></i></div>
        
        - PSYCHIC: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #f8d3ff, #520674);""><i class=""fa-solid fa-eye""></i></div>

        - STEEL: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #e1e1e1, #383838);""><i class=""fa-solid fa-chart-radar""></i></div>
        
        - WATER: <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #7eb9f1, #06437e);""><i class=""fa-solid fa-droplet""></i></div>

 
TIPS & HELPFUL INFO
 
    SHORT CUTS:
        ""Ctrl"" + ""F"" - find, replace, delete and edit text faster
        ""Ctrl"" + ""Z"" - undo
        ""Ctrl"" + ""Y"" - redo
 
    LIVE CODE EDITOR (highly recommend using):
        https://th.circlejourney.net/
 
    HELP THREAD / ASK FOR HELP HERE:
        https://toyhou.se/~forums/16.htmlcss-graphics/48845.-help-thread-ask-your-questions-here-
 
    ICONS (you can use ones labled pro):
        https://fontawesome.com/search
 
    COLOR PICKER WEBSITE:
        https://imagecolorpicker.com/color-code/2596be
        
------------------------------------------------->
<div class=""mx-auto justify-content-center row no-gutters"" style=""width:360px;color:black; border-radius:15px; background-color:#e8cf60;""><div class=""m-3 py-1 px-2 w-100"" style=""background-image:url(''); background-image:radial-gradient(circle, #89c08d, #3a7c3f); "">
    
    <!-- TOP TEXT / REL BUTTONS ----------------->
    <div class=""ml-4""><div class=""mx-auto row no-gutters"" style=""font-size:10px; border-bottom:1px solid #e8cf60;"">
        <div class=""col-auto ml-3"" style=""font-weight:bold; font-style:italic;"">Relationships</div>
        
        <div class=""col ml-2 text-right"">
            <a href=""#RELATION_CAROUSEL"" data-slide=""prev"" style=""color:black;""><i class=""fa-solid fa-chevron-left""></i></a>
            Carousel Buttons
            <a href=""#RELATION_CAROUSEL"" data-slide=""next"" style=""color:black;""><i class=""fa-solid fa-chevron-right""></i></a>
        </div>
    </div></div>
    <!-- END TOP TEXT / REL BUTTONS ------------->
    
    
    <!-- HEADER / NAME -------------------------->
    <div class=""ml-5 row no-gutters"" style=""font-size:18px; font-weight:bold;"">
        
        <div class=""col ml-3 pl-1"" style=""letter-spacing:0.6px;"">Name</div>
        
        <div class=""col-auto mr-3 row no-gutters"">
            <div class=""mr-1"" style=""color:#b6190d;"">100 HP</div>
        
            <!-- FAVE BUTTON -->
            <div class=""align-items-center"" style=""font-size:12px;"">
                <a data-toggle=""th-favorite"" href=""#"" class=""rounded-circle pt-1 px-1"" style=""color:black; background-image:linear-gradient(170deg, #d3ffa9, #02330b);"">
                    <span class=""favorite"" title=""Favorite""><i class=""fa-solid fa-heart-crack""></i></span>
                    <span class=""unfavorite"" title=""Unfavorite""><i class=""fa-solid fa-heart""></i></span>
                </a>
            </div>
        </div>
        
    </div>
    <!-- END HEADER / NAME ---------------------->
    
    
    
    <!-- IMAGE & RELATIONSHIPS ------------------>
    <div class=""mx-3 p-1"" style=""position:relative; background-image:radial-gradient(circle, #efe4b1, #e8cf60, #ac8f11); box-shadow:4px 4px 10px #000;"">
        
        <!-- MAIN CHAR IMAGE --------------------
        - delete bg-image:url(''); if you want
        - bg colors only 
        ----------------------------------------->
        <div style=""overflow:hidden; height:180px;
            background-image:url('https://th.bing.com/th/id/OIP.fFdbKJinlBYjacsdsa0sNgHaEc?pid=ImgDet&rs=1');
            background-image:radial-gradient(circle,);
            background-position:top center;
            background-size:cover;"">
            
            <!-- CHRACTER IMAGE -->
            <div class=""h-100"" style=""background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/35501574_UgeKlRSMZWWgyKo.png?1664395374');
                background-position:top center;
                background-size:cover;""></div>
        </div>
        <!-- END MAIN CHAR IMAGE ---------------->
        
        
        <!-- SUB IMAGE / RELATIONSHIPS ---------->
        <div style=""position:absolute; top:-24px; left:-10px;""><div class=""justify-content-center align-items-center"" style=""transform:rotate(45deg); height:50px; width:50px; background-image:radial-gradient(circle, #efe4b1, #e8cf60, #ac8f11);"">
            <div id=""RELATION_CAROUSEL"" class=""carousel"" data-ride=""false"" data-pause=""false""><div class=""carousel-inner"" style=""transform:rotate(-45deg);"">
                    
                <!-- SLIDE 1 -->
                <div class=""active carousel-item mt-1 row no-gutters""><a href=""LINK"" style=""color:black; font-size:11px; font-weight:bold;"">
                    <div class=""text-center text-uppercase"" style=""position:relative; top:-6px;"">friend</div>
                    <div class=""col justify-content-center""><div style=""overflow:hidden; position:relative; top:-10px; height:33px; width:37px; background-image:radial-gradient(circle, #cccbc4, #949090, #666666);""><img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/35501574_UgeKlRSMZWWgyKo.png?1664395374""></div></div> 
                </a></div>
                
                <!-- SLIDE 2 -->
                <div class=""carousel-item mt-1 row no-gutters""><a href=""LINK"" style=""color:black; font-size:11px; font-weight:bold;"">
                    <div class=""text-center text-uppercase"" style=""position:relative; top:-6px;"">status</div>
                    <div class=""col justify-content-center""><div style=""overflow:hidden; position:relative; top:-10px; height:33px; width:37px; background-image:radial-gradient(circle, #cccbc4, #949090, #666666);""><img src=""""></div></div> 
                </a></div>
                
            </div></div>
        </div></div>
        <!-- END SUB IMAGE / RELATIONSHIPS ------>
        
    </div>
    <!-- END IMAGE & RELATIONSHIPS -------------->
    
    
    <!-- QUOTE BOX ------------------------------>
    <div class=""col-auto mt-2 mx-auto justify-content-center"" style=""font-weight:500; font-style:italic;""><div class=""col-auto"" style=""background-image:radial-gradient(circle, #efe4b1, #e8cf60, #ac8f11);"">
        <i class=""fa-solid fa-quote-left pt-2 fa-xs""></i>
        <span class=""px-1"">quote</span>
        <i class=""fa-solid fa-quote-right pt-2 fa-xs""></i>
    </div></div>
    <!-- END QUOTE BOX -------------------------->
    
    
    
    <!-- ROW 1 / INFO --------------------------->
    <div class=""justify-content-center align-items-center row no-gutters"">
        
        <!-- LEFT / BUTTONS ---------------------
        - make sure hrefs aren't the same
        - and they match an ID in tabs
        - href must have #
        ----------------------------------------->
        <ul class=""col-3 nav justify-content-center align-items-center row no-gutters"">
            <li class=""active nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#ABOUT""  style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <li class=""nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#APPEARANCE"" style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <li class=""nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#HISTORY"" style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <li class=""nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#OTHER"" style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <!-- add more above here -->
            
        </ul>
        <!-- END LEFT / BUTTONS ----------------->
        
        
        <!-- RIGHT / TAB CONTENT ----------------
        - make sure id matches a href
        - ids should not be the same
        - as one another or have #
        ----------------------------------------->
        <div class=""col tab-content align-items-center row no-gutters"">
            
            <!-- ABOUT -------------------------->
            <div id=""ABOUT"" class=""active tab-pane row no-gutters"">
                
                <!-- NON SCROLLABLE -->
                <div class=""col"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">About:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class=""col"" style=""overflow:auto; max-height:90px;"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">About:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                
            </div>
            <!-- END ABOUT ---------------------->
            
            
            
            <!-- APPEARANCE --------------------->
            <div id=""APPEARANCE"" class=""col tab-pane""><div class=""row no-gutters"">
                
                <!-- NON SCROLLABLE -->
                <div class="""">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">Appearance:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class="""" style=""overflow:auto; max-height:90px;"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">Appearance:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                
            </div></div>
            <!-- APPEARANCE --------------------->
            
            
            
            <!-- HISTORY ------------------------>
            <div id=""HISTORY"" class=""col tab-pane row no-gutters"">
                
                <!-- NON SCROLLABLE -->
                <div class="""">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">History:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class="""" style=""overflow:auto; max-height:90px;"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">History:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                
            </div>
            <!-- HISTORY ------------------------>
            
            
            
            <!-- OTHER -------------------------->
            <div id=""OTHER"" class=""col tab-pane row no-gutters"">
                
                <!-- NON SCROLLABLE -->
                <div class=""col"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">Other:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class=""col"" style=""overflow:auto; max-height:90px;"">
                    <!-- title -->
                    <b style=""color:#b6190d; font-weight:bold;"">Other:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                
            </div>
            <!-- OTHER -------------------------->
            
            
            <!-- add more above here -->
            
        </div>
        <!-- END RIGHT / TAB CONTENT ------------>
        
    </div>
    <!-- END INFO ROW 1 ------------------------->
    
    
    
    <!-- line -->
    <hr class=""my-1 mx-2"" style=""background-color:black;"">
    
    
    
    <!-- ROW 2 / ABILITIES --------------------->
    <div class=""justify-content-center align-items-center row no-gutters"">
        
        <!-- LEFT / BUTTONS --------------------
        - make sure hrefs aren't the same
        - and they match an ID in tabs
        - href must have #
        ---------------------------------------->
        <ul class=""col-3 nav justify-content-center align-items-center row no-gutters"">
            <li class=""active nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#ABILITY1""  style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <li class=""nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#ABILITY2"" style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            
            <li class=""nav-item m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #d3ffa9, #02330b);""><a data-toggle=""tab"" href=""#ABILITY3"" style=""color:black;""><i class=""fa-solid fa-leaf""></i></a></li>
            
            <!-- add more above here -->
            
        </ul>
        <!-- END LEFT / BUTTONS ---------------->
        
        
        <!-- RIGHT / TAB CONTENT ---------------
        - make sure id matches a href
        - ids should not be the same
        - as one another or have #
        ---------------------------------------->
        <div class=""col tab-content align-items-center row no-gutters"">
            
            <!-- ABILITY1 ---------------------->
            <div id=""ABILITY1"" class=""active col tab-pane""><div class=""justify-content-center align-items-center row no-gutters"">
                
                <!-- POWER INFO -->
                <div class=""col text-center"">
                    <!-- ability name -->
                    <b style=""font-weight:bold;"">Ability Name</b>
                    
                    <!-- info -->
                    <span></span>
                </div>
                <!-- END POWER INFO -->
                
                
                <!-- damage deal -->
                <div class=""col-auto align-items-center display-4"" style=""font-weight:400;"">40+</div>
                
            </div></div>
            <!-- ABILITY1 ---------------------->
            
            
            <!-- ABILITY2 ---------------------->
            <div id=""ABILITY2"" class=""col tab-pane row no-gutters"">
                
                <!-- NON SCROLLABLE -->
                <div class=""col"">
                    <!-- ability name -->
                    <b style=""color:#b6190d; font-weight:bold;"">Ability:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class=""col"" style=""overflow:auto; max-height:90px;"">
                    <!-- ability name -->
                    <b style=""color:#b6190d; font-weight:bold;"">Ability:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                
            </div>
            <!-- END ABILITY2 ------------------>
            
            
            <!-- ABILITY3 ---------------------->
            <div id=""ABILITY3"" class=""col tab-pane""><div class=""justify-content-center align-items-center row no-gutters"">
                
                <div class=""col"">
                <!-- NON SCROLLABLE -->
                <div class=""col"">
                    <!-- ability name -->
                    <b style=""color:#b6190d; font-weight:bold;"">Ability:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- NON SCROLLABLE -->
                
                
                <!-- SCROLLABLE -->
                <div class=""col"" style=""overflow:auto; max-height:90px;"">
                    <!-- ability name -->
                    <b style=""color:#b6190d; font-weight:bold;"">Ability:</b>
                    
                    <!-- info -->
                    <span>content</span>
                </div>
                <!-- END SCROLLABLE -->
                </div>
                
                <!-- damage deal -->
                <div class=""col-auto align-items-center display-4"" style=""font-weight:400;"">40+</div>
                
            </div></div>
            <!-- ABILITY3 ---------------------->
            
        </div>
        <!-- END RIGHT / TAB CONTENT ----------->
        
    </div>
    <!-- END ROW 2 / ABILITIES ----------------->
    
    
    
    <!-- line -->
    <hr class=""mt-1 mb-0 mx-2"" style=""background-color:black;"">
    
    
    
    <!-- BOTTOM ELEMENTS ----------------------->
    <div class=""mt-n1 mx-n1 justify-content-center row no-gutters"" style=""font-weight:bold;"">
        
        <!-- LEFT -->
        <div class=""col-auto"">
            <!-- title -->
            <div class=""col text-center"">weakness</div>
            
            <!-- element -->
            <div class=""justify-content-center align-items-center"">
                <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #fbabab, #820202);""><i class=""fa-solid fa-fire""></i></div>
            </div>
        </div>
        <!-- END LEFT -->
        
        
        <!-- CENTER -->
        <div class=""col-auto"">
            <!-- title -->
            <div class=""col text-center"">resistance</div>
            
            <!-- element -->
            <div class=""justify-content-center align-items-center"">
            </div>
        </div>
        <!-- END CENTER -->
        
        
        <!-- RIGHT -->
        <div class=""col-auto"">
            <!-- title -->
            <div class=""col text-center"">retreat cost</div>
            
            <!-- element -->
            <div class=""justify-content-center align-items-center"">
                <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #e6f0f1, #616161);""><i class=""fa-solid fa-star-of-life""></i></div>
                <div class=""m-1 pb-1 px-1 rounded-circle"" style=""background-image:linear-gradient(170deg, #e6f0f1, #616161);""><i class=""fa-solid fa-star-of-life""></i></div>
        </div>
        <!-- END RIGHT -->
        
    </div>
    </div>
    <!-- END BOTTOM ELEMENTS ------------------->
    
    
    <!-- YELLOW BOX ---------------------------->
    <div class=""my-1 px-2"" style=""font-weight:500; font-style:italic; border:1px solid #e8cf60;"">important info, this doesn't scroll</div>
    <!-- END YELLOW BOX ------------------------>
    
    
    
    <!-- CREDITS - FEEL FREE TO MOVE OR EDIT --->
    <div class=""mb-n1 mx-n2 row no-gutters"" style=""font-size:11px;"">
        <a href="""" class=""col-auto mx-1"" style=""color:black; font-weight:bold;"">Code. Ansuperope</a>
        
        <span class=""col-auto mx-1"">Layout Based Off of Pokemon</span>
        
        <span class=""col mx-1 text-right"" style=""font-weight:bold;"">2/102
        <i class=""fa-solid fa-star fa-xs""></i>
        </span>
    </div>
    <!-- END CREDITS --------------------------->
    
</div></div>"
VTNpBHaX,new class,Rnery,Python,Wednesday 1st of November 2023 01:59:23 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

##############################################
# Usage: python seu_script.py ""URL_DO_VIDEO"" #
##############################################

from os import system
from sys import exit, argv

class YoutubeDownloader:
    def __init__(self, url):
        self.url = url

    @staticmethod
    def execute_with_sudo(command):
        system(f'sudo bash -c ""{command}""')

    @staticmethod
    def is_youtube_dl_installed():
        return system(""which youtube-dl"") == 0

    @staticmethod
    def install_youtube_dl():
        YoutubeDownloader.execute_with_sudo(""wget https://yt-dl.org/latest/youtube-dl -O /usr/local/bin/youtube-dl"")
        YoutubeDownloader.execute_with_sudo(""chmod a+rx /usr/local/bin/youtube-dl"")

    def download_video(self):
        if not self.url:
            print(""Por favor, forneça o URL do vídeo do YouTube."")
            exit(1)
        system(f'youtube-dl ""{self.url}""')

def main():
    if len(argv) < 2:
        print(""Uso: python seu_script.py URL_DO_VIDEO"")
        exit(1)

    url_do_video = argv[1]
    youtube_downloader = YoutubeDownloader(url_do_video)
    
    if not youtube_downloader.is_youtube_dl_installed():
        print(""O youtube-dl não está instalado. Tentando instalá-lo..."")
        youtube_downloader.install_youtube_dl()
    
    youtube_downloader.download_video()

if __name__ == ""__main__"":
    main()
"
XrW7TQSm,MobScript,Anukun_Lucifer,Lua,Wednesday 1st of November 2023 01:45:56 AM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local mob = {}

function mob.Move(mob, map)
	local humanoid = mob:WaitForChild(""Humanoid"")
	local waypoints = map.Waypoints

	for waypoint = 1, #waypoints:GetChildren() do
		humanoid:MoveTo(waypoints[waypoint].Position)
		humanoid.MoveToFinished:Wait()
	end
	
	mob:Destroy()
	
end

function mob.Spawn(name, quantity, map)
	local mobExists = serverstorage.Mobs:FindFirstChild(name)
	
	if mobExists then
		for i=1, quantity do
			task.wait(0.5)
			local newMob = mobExists:Clone()
			newMob.HumanoidRootPart.CFrame = map.Start.CFrame
			newMob.Parent = map.Mob
			newMob.HumanoidRootPart:SetNetworkOwner(nil)
			
			for i, object in ipairs(newMob:GetDescendants()) do
				if object:IsA(""BasePart"") then
					physicsservice:SetPartCollisionGroup(object, ""Mob"")
				end
			end
			
			newMob.Humanoid.Died:Connect(function()
				task.wait(0.5)
				newMob:Destroy()
			end)
			
			coroutine.wrap(mob.Move)(newMob, map)
		end
	else
		warn(""Requested mob dose not exist"",name)
	end
end

return mob"
n1CEL61P,TowerAttack,Anukun_Lucifer,Lua,Wednesday 1st of November 2023 01:44:28 AM CDT,"local tower = script.Parent
local mob = workspace.Grassland.Mob

local function FindNearestTarget()
	local maxDistance = 20
	local nearestTarget = nil
	
	for i, target in ipairs(mob:GetChildren()) do
		local distance = (target.HumanoidRootPart.Position - tower.Position).Magnitude
		if distance < maxDistance then
			nearestTarget = target
			maxDistance = distance
		end
	end
	
	return nearestTarget
end

while true do
	local target = FindNearestTarget()
	if target then
		local soundshot = script.Parent.Shot
		soundshot:Play()
		target.Humanoid:TakeDamage(25)
	end
	task.wait(0.3)
end"
jJ7X3R2L,Untitled,Locative,SQL,Wednesday 1st of November 2023 01:36:21 AM CDT,"-- [ Оплата за: октябрь]
 
--------- [ Отработанное время: ]
 
Locative: 87 (х5), 21 (FUN) 15 (x100) -- 123
Зилиус: 111 (х5), 39 (x100) -- 150
Khyntia: 2 (x5), 90 (FUN), 11 (x100) -- 103
jegermaister  - EN GM: 1 (х5), 174 (FUN), 35 (x100) -- 210 
Чеширский Кот: 13 (x100) -- 13
 

Чеширский Кот: 111 (x5), 61 (FUN) (х1,8 за модератора) -- 172


--------- [ Бонусы: ]
UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1407530'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за октябрь');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Зилиус за октябрь');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Khyntia за октябрь'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за октябрь'); 

UPDATE `bonus` SET `gold`=gold+1800 WHERE `id`='810625'; -- Чеширский Кот 2
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (810625, NOW(), 1800, '+1800 золотых бонусов - з/п модератора Чеширский Кот за октябрь'); 

-- QA Team

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='211220'; -- nastyasia
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='810625'; -- Чеширский Кот 2"
8NAFqPU0,params.local.xml,rmonakhov,XML,Wednesday 1st of November 2023 01:15:00 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<parameters>
        <itop_url>ITOP_URL</itop_url>
        <itop_login>ITOP_USER</itop_login>
        <itop_password>ITOP_PASWORD</itop_password>
        <contact_to_notify>ITOP_ADMIN</contact_to_notify>
        <synchro_user>SYNCHRO_USER</synchro_user>
        <ldapuri>LDAP_URI</ldapuri>
        <ldapdn>DC=example,DC=local</ldapdn>
        <ldaplogin>CN=LDAP_USER,OU=Service Accounts,OU=example,DC=example,DC=local</ldaplogin>
        <ldappassword>LDAP_PASSWORD</ldappassword>
        <console_log_level>5</console_log_level>
        <page_size>1000</page_size>
        <prefix>exmaple_</prefix>
        <curl_options>
          <CURLOPT_SSL_VERIFYHOST>0</CURLOPT_SSL_VERIFYHOST>
          <CURLOPT_SSL_VERIFYPEER>0</CURLOPT_SSL_VERIFYPEER>
        </curl_options>
        <json_placeholders>
                <full_load_interval>604800</full_load_interval><!-- 7 days (in seconds): 7*24*60*60 -->
                <users_target_class>UserLDAP</users_target_class>
                <synchro_status>production</synchro_status>
                <profile_list_update_policy>write_if_empty</profile_list_update_policy>
        </json_placeholders>
        <ldappersonfilter>(&amp;(objectClass=person)(title=*)(mail=*)(Department=*))</ldappersonfilter>
        <itop_group_pattern></itop_group_pattern>
        <person_fields>
                <primary_key>samaccountname</primary_key>
                <name>sn</name>
                <first_name>givenname</first_name>
                <email>mail</email>
                <phone>telephonenumber</phone>
				<mobile_phone>mobile</mobile_phone>
                <function>title</function>
                <employee_number>employeenumber</employee_number>
        </person_fields>
        <person_defaults>
                <org_id>ORG_NAME</org_id>
                <status>active</status>
        </person_defaults>
        <collect_person_only>no</collect_person_only>
		<ldapuserfilter>(&amp;(objectClass=person)(title=*)(mail=*)(Department=*)(memberOf:1.2.840.113556.1.4.1941:=CN=ITOP_USERS,OU=Groups,OU=example,DC=example,DC=local))</ldapuserfilter>
        <synchronize_profiles>no</synchronize_profiles>
        <user_fields>
                <primary_key>samaccountname</primary_key>
                <login>samaccountname</login>
                <contactid>mail</contactid>
        </user_fields>
        <user_defaults>
                <profile>CMDB Guest</profile>
                <language>RU RU</language>
        </user_defaults>
</parameters>"
gN694A7C,Nigerian scammers [1-11-1/2023],bombaires,AIMMS,Wednesday 1st of November 2023 12:12:52 AM CDT,"<a href=""mailto:info@i-sript.love"">info@i-sript.love</a>
<a href=""mailto:info@mail-intelligence.life"">info@mail-intelligence.life</a>
<a href=""mailto:support@order-help.com"">support@order-help.com</a>
<a href=""mailto:redxavier152@gmail.com"">redxavier152@gmail.com</a>
<a href=""mailto:r.ed.xav.i.er1.52@gmail.com"">r.ed.xav.i.er1.52@gmail.com</a>
<a href=""mailto:redxav.i.e.r1.52@gmail.com"">redxav.i.e.r1.52@gmail.com</a>
<a href=""mailto:re.d.x.a.vie.r.152@gmail.com"">re.d.x.a.vie.r.152@gmail.com</a>
<a href=""mailto:re.dxavie.r.152@gmail.com"">re.dxavie.r.152@gmail.com</a>
<a href=""mailto:red.x.avi.e.r.1.52@gmail.com"">red.x.avi.e.r.1.52@gmail.com</a>
<a href=""mailto:re.d.x.a.v.ier1.5.2@gmail.com"">re.d.x.a.v.ier1.5.2@gmail.com</a>
<a href=""mailto:re.d.x.a.v.ier.1.52@gmail.com"">re.d.x.a.v.ier.1.52@gmail.com</a>
<a href=""mailto:re.d.x.a.vie.r1.52@gmail.com"">re.d.x.a.vie.r1.52@gmail.com</a>
<a href=""mailto:re.d.x.a.v.i.e.r.152@gmail.com"">re.d.x.a.v.i.e.r.152@gmail.com</a>
<a href=""mailto:re.dxav.i.e.r15.2@gmail.com"">re.dxav.i.e.r15.2@gmail.com</a>
<a href=""mailto:r.ed.xavie.r.1.5.2@gmail.com"">r.ed.xavie.r.1.5.2@gmail.com</a>
<a href=""mailto:re.dx.av.i.e.r.15.2@gmail.com"">re.dx.av.i.e.r.15.2@gmail.com</a>
<a href=""mailto:r.e.dxa.v.ier1.5.2@gmail.com"">r.e.dxa.v.ier1.5.2@gmail.com</a>
<a href=""mailto:r.e.dx.a.vi.er1.5.2@gmail.com"">r.e.dx.a.vi.er1.5.2@gmail.com</a>
<a href=""mailto:r.e.d.xavier15.2@gmail.com"">r.e.d.xavier15.2@gmail.com</a>
<a href=""mailto:r.ed.x.avi.er.152@gmail.com"">r.ed.x.avi.er.152@gmail.com</a>
<a href=""mailto:red.xavier.15.2@gmail.com"">red.xavier.15.2@gmail.com</a>
<a href=""mailto:r.e.d.x.a.v.i.e.r1.5.2@gmail.com"">r.e.d.x.a.v.i.e.r1.5.2@gmail.com</a>
<a href=""mailto:redx.avier1.52@gmail.com"">redx.avier1.52@gmail.com</a>
<a href=""mailto:r.edxa.vier1.5.2@gmail.com"">r.edxa.vier1.5.2@gmail.com</a>
<a href=""mailto:red.xav.ier1.52@gmail.com"">red.xav.ier1.52@gmail.com</a>
<a href=""mailto:re.dx.a.vie.r152@gmail.com"">re.dx.a.vie.r152@gmail.com</a>
<a href=""mailto:r.ed.xav.ier152@gmail.com"">r.ed.xav.ier152@gmail.com</a>
<a href=""mailto:red.x.avie.r152@gmail.com"">red.x.avie.r152@gmail.com</a>
<a href=""mailto:r.e.d.x.a.v.i.e.r.1.52@gmail.com"">r.e.d.x.a.v.i.e.r.1.52@gmail.com</a>
<a href=""mailto:r.edxav.ie.r.1.5.2@gmail.com"">r.edxav.ie.r.1.5.2@gmail.com</a>
<a href=""mailto:re.dxa.v.ie.r.1.52@gmail.com"">re.dxa.v.ie.r.1.52@gmail.com</a>
<a href=""mailto:re.dx.av.ier15.2@gmail.com"">re.dx.av.ier15.2@gmail.com</a>
<a href=""mailto:re.d.x.avi.er.152@gmail.com"">re.d.x.avi.er.152@gmail.com</a>
<a href=""mailto:r.e.dx.a.v.i.e.r1.52@gmail.com"">r.e.dx.a.v.i.e.r1.52@gmail.com</a>
<a href=""mailto:red.xa.vi.er.1.5.2@gmail.com"">red.xa.vi.er.1.5.2@gmail.com</a>
<a href=""mailto:red.xa.vi.er1.52@gmail.com"">red.xa.vi.er1.52@gmail.com</a>
<a href=""mailto:red.xav.ie.r152@gmail.com"">red.xav.ie.r152@gmail.com</a>
<a href=""mailto:r.edx.av.i.er1.52@gmail.com"">r.edx.av.i.er1.52@gmail.com</a>
<a href=""mailto:red.xav.ier.1.52@gmail.com"">red.xav.ier.1.52@gmail.com</a>
<a href=""mailto:re.dx.a.v.i.e.r1.52@gmail.com"">re.dx.a.v.i.e.r1.52@gmail.com</a>
<a href=""mailto:r.e.d.x.avier15.2@gmail.com"">r.e.d.x.avier15.2@gmail.com</a>
<a href=""mailto:r.ed.xa.v.ie.r.152@gmail.com"">r.ed.xa.v.ie.r.152@gmail.com</a>
<a href=""mailto:r.e.dx.av.ier152@gmail.com"">r.e.dx.av.ier152@gmail.com</a>
<a href=""mailto:r.ed.x.a.v.ier1.52@gmail.com"">r.ed.x.a.v.ier1.52@gmail.com</a>
<a href=""mailto:r.e.d.xa.v.ie.r.152@gmail.com"">r.e.d.xa.v.ie.r.152@gmail.com</a>
<a href=""mailto:red.x.avie.r.152@gmail.com"">red.x.avie.r.152@gmail.com</a>
<a href=""mailto:re.d.xavi.e.r152@gmail.com"">re.d.xavi.e.r152@gmail.com</a>
<a href=""mailto:re.d.xavie.r15.2@gmail.com"">re.d.xavie.r15.2@gmail.com</a>
<a href=""mailto:re.d.xa.v.ier.1.5.2@gmail.com"">re.d.xa.v.ier.1.5.2@gmail.com</a>
<a href=""mailto:redx.avi.e.r.152@gmail.com"">redx.avi.e.r.152@gmail.com</a>
<a href=""mailto:re.dxav.ier152@gmail.com"">re.dxav.ier152@gmail.com</a>
<a href=""mailto:r.edxav.ier.15.2@gmail.com"">r.edxav.ier.15.2@gmail.com</a>
<a href=""mailto:r.e.d.xa.vie.r.15.2@gmail.com"">r.e.d.xa.vie.r.15.2@gmail.com</a>
<a href=""mailto:r.e.dxavi.e.r15.2@gmail.com"">r.e.dxavi.e.r15.2@gmail.com</a>
<a href=""mailto:re.dxa.v.i.er.1.52@gmail.com"">re.dxa.v.i.er.1.52@gmail.com</a>
<a href=""mailto:r.e.d.xa.vi.e.r152@gmail.com"">r.e.d.xa.vi.e.r152@gmail.com</a>
<a href=""mailto:r.edx.av.i.er.1.52@gmail.com"">r.edx.av.i.er.1.52@gmail.com</a>
<a href=""mailto:re.d.xav.i.er.152@gmail.com"">re.d.xav.i.er.152@gmail.com</a>
<a href=""mailto:redx.av.ier1.52@gmail.com"">redx.av.ier1.52@gmail.com</a>
<a href=""mailto:r.e.dx.a.vi.e.r.152@gmail.com"">r.e.dx.a.vi.e.r.152@gmail.com</a>
<a href=""mailto:r.edxa.v.i.e.r1.5.2@gmail.com"">r.edxa.v.i.e.r1.5.2@gmail.com</a>
<a href=""mailto:red.x.avi.er1.5.2@gmail.com"">red.x.avi.er1.5.2@gmail.com</a>
<a href=""mailto:redx.a.vier1.52@gmail.com"">redx.a.vier1.52@gmail.com</a>
<a href=""mailto:red.xav.i.e.r1.52@gmail.com"">red.xav.i.e.r1.52@gmail.com</a>
<a href=""mailto:r.e.dx.av.i.e.r.1.5.2@gmail.com"">r.e.dx.av.i.e.r.1.5.2@gmail.com</a>
<a href=""mailto:redx.av.i.er.1.5.2@gmail.com"">redx.av.i.er.1.5.2@gmail.com</a>
<a href=""mailto:r.e.dxavie.r1.5.2@gmail.com"">r.e.dxavie.r1.5.2@gmail.com</a>
<a href=""mailto:red.x.avie.r1.52@gmail.com"">red.x.avie.r1.52@gmail.com</a>
<a href=""mailto:r.e.d.xavie.r1.5.2@gmail.com"">r.e.d.xavie.r1.5.2@gmail.com</a>
<a href=""mailto:r.e.d.xavie.r1.52@gmail.com"">r.e.d.xavie.r1.52@gmail.com</a>
<a href=""mailto:r.e.dx.av.i.e.r152@gmail.com"">r.e.dx.av.i.e.r152@gmail.com</a>
<a href=""mailto:r.ed.xa.vier152@gmail.com"">r.ed.xa.vier152@gmail.com</a>
<a href=""mailto:re.d.x.avi.er.1.52@gmail.com"">re.d.x.avi.er.1.52@gmail.com</a>
<a href=""mailto:re.d.x.avi.e.r.1.52@gmail.com"">re.d.x.avi.e.r.1.52@gmail.com</a>
<a href=""mailto:redxa.vi.e.r1.52@gmail.com"">redxa.vi.e.r1.52@gmail.com</a>
<a href=""mailto:redx.a.vie.r.152@gmail.com"">redx.a.vie.r.152@gmail.com</a>
<a href=""mailto:re.dxa.v.ier1.52@gmail.com"">re.dxa.v.ier1.52@gmail.com</a>
<a href=""mailto:re.dxa.v.ier.152@gmail.com"">re.dxa.v.ier.152@gmail.com</a>
<a href=""mailto:r.e.d.x.av.i.er.152@gmail.com"">r.e.d.x.av.i.er.152@gmail.com</a>
<a href=""mailto:r.e.d.x.av.i.e.r.152@gmail.com"">r.e.d.x.av.i.e.r.152@gmail.com</a>
<a href=""mailto:red.x.a.vi.e.r15.2@gmail.com"">red.x.a.vi.e.r15.2@gmail.com</a>
<a href=""mailto:r.e.dx.a.vi.er1.52@gmail.com"">r.e.dx.a.vi.er1.52@gmail.com</a>
<a href=""mailto:redxav.ie.r152@gmail.com"">redxav.ie.r152@gmail.com</a>
<a href=""mailto:re.dxav.i.er15.2@gmail.com"">re.dxav.i.er15.2@gmail.com</a>
<a href=""mailto:re.d.x.a.vi.e.r.15.2@gmail.com"">re.d.x.a.vi.e.r.15.2@gmail.com</a>
<a href=""mailto:redxavier.15.2@gmail.com"">redxavier.15.2@gmail.com</a>
<a href=""mailto:redxa.vier15.2@gmail.com"">redxa.vier15.2@gmail.com</a>
<a href=""mailto:re.d.xa.vi.er.15.2@gmail.com"">re.d.xa.vi.er.15.2@gmail.com</a>
<a href=""mailto:r.e.dx.av.i.er1.5.2@gmail.com"">r.e.dx.av.i.er1.5.2@gmail.com</a>
<a href=""mailto:re.dx.av.i.er.1.5.2@gmail.com"">re.dx.av.i.er.1.5.2@gmail.com</a>
<a href=""mailto:r.e.dxa.vier1.52@gmail.com"">r.e.dxa.vier1.52@gmail.com</a>
<a href=""mailto:r.e.d.x.a.vier.1.5.2@gmail.com"">r.e.d.x.a.vier.1.5.2@gmail.com</a>
<a href=""mailto:red.x.a.vi.er1.52@gmail.com"">red.x.a.vi.er1.52@gmail.com</a>
<a href=""mailto:re.dx.avier1.52@gmail.com"">re.dx.avier1.52@gmail.com</a>
<a href=""mailto:redxav.i.er15.2@gmail.com"">redxav.i.er15.2@gmail.com</a>
<a href=""mailto:r.e.d.x.avier.1.5.2@gmail.com"">r.e.d.x.avier.1.5.2@gmail.com</a>
<a href=""mailto:r.edxav.ie.r.1.52@gmail.com"">r.edxav.ie.r.1.52@gmail.com</a>
<a href=""mailto:r.ed.xavi.er1.52@gmail.com"">r.ed.xavi.er1.52@gmail.com</a>
<a href=""mailto:redxa.vier.15.2@gmail.com"">redxa.vier.15.2@gmail.com</a>
<a href=""mailto:re.dx.a.v.ie.r.1.5.2@gmail.com"">re.dx.a.v.ie.r.1.5.2@gmail.com</a>
<a href=""mailto:re.dx.a.v.i.e.r.15.2@gmail.com"">re.dx.a.v.i.e.r.15.2@gmail.com</a>
<a href=""mailto:re.dxa.vi.e.r.1.52@gmail.com"">re.dxa.vi.e.r.1.52@gmail.com</a>
<a href=""mailto:red.xav.i.e.r.1.52@gmail.com"">red.xav.i.e.r.1.52@gmail.com</a>
<a href=""mailto:redx.a.v.i.er.1.5.2@gmail.com"">redx.a.v.i.er.1.5.2@gmail.com</a>
<a href=""mailto:re.dxa.vie.r.15.2@gmail.com"">re.dxa.vie.r.15.2@gmail.com</a>
<a href=""mailto:r.e.dxa.v.ie.r.15.2@gmail.com"">r.e.dxa.v.ie.r.15.2@gmail.com</a>
<a href=""mailto:r.e.d.x.a.v.ie.r.15.2@gmail.com"">r.e.d.x.a.v.ie.r.15.2@gmail.com</a>
<a href=""mailto:re.d.x.av.ie.r.15.2@gmail.com"">re.d.x.av.ie.r.15.2@gmail.com</a>
<a href=""mailto:re.dx.a.v.ie.r.15.2@gmail.com"">re.dx.a.v.ie.r.15.2@gmail.com</a>
<a href=""mailto:r.e.dx.a.vi.er.1.52@gmail.com"">r.e.dx.a.vi.er.1.52@gmail.com</a>
<a href=""mailto:redxavi.e.r152@gmail.com"">redxavi.e.r152@gmail.com</a>
<a href=""mailto:r.edxavier.1.52@gmail.com"">r.edxavier.1.52@gmail.com</a>
<a href=""mailto:red.xa.v.i.e.r.15.2@gmail.com"">red.xa.v.i.e.r.15.2@gmail.com</a>
<a href=""mailto:r.ed.xa.v.ier1.52@gmail.com"">r.ed.xa.v.ier1.52@gmail.com</a>
<a href=""mailto:r.e.d.x.a.v.i.er1.5.2@gmail.com"">r.e.d.x.a.v.i.er1.5.2@gmail.com</a>
<a href=""mailto:r.edxav.ie.r.152@gmail.com"">r.edxav.ie.r.152@gmail.com</a>
<a href=""mailto:re.d.xa.vier15.2@gmail.com"">re.d.xa.vier15.2@gmail.com</a>
<a href=""mailto:re.d.xa.v.ie.r.1.5.2@gmail.com"">re.d.xa.v.ie.r.1.5.2@gmail.com</a>
<a href=""mailto:re.dxa.v.ie.r1.5.2@gmail.com"">re.dxa.v.ie.r1.5.2@gmail.com</a>
<a href=""mailto:r.edx.av.ie.r152@gmail.com"">r.edx.av.ie.r152@gmail.com</a>
<a href=""mailto:r.edx.a.v.i.er152@gmail.com"">r.edx.a.v.i.er152@gmail.com</a>
<a href=""mailto:re.d.x.avie.r1.5.2@gmail.com"">re.d.x.avie.r1.5.2@gmail.com</a>
<a href=""mailto:redxavie.r.1.5.2@gmail.com"">redxavie.r.1.5.2@gmail.com</a>
<a href=""mailto:r.e.dxavi.er.15.2@gmail.com"">r.e.dxavi.er.15.2@gmail.com</a>
<a href=""mailto:r.e.dxa.vier.15.2@gmail.com"">r.e.dxa.vier.15.2@gmail.com</a>
<a href=""mailto:re.d.xavi.e.r.15.2@gmail.com"">re.d.xavi.e.r.15.2@gmail.com</a>
<a href=""mailto:re.dx.a.vi.e.r.1.5.2@gmail.com"">re.dx.a.vi.e.r.1.5.2@gmail.com</a>
<a href=""mailto:re.dx.avi.e.r.1.5.2@gmail.com"">re.dx.avi.e.r.1.5.2@gmail.com</a>
<a href=""mailto:r.ed.x.a.vier.1.52@gmail.com"">r.ed.x.a.vier.1.52@gmail.com</a>
<a href=""mailto:r.e.dx.a.vier.152@gmail.com"">r.e.dx.a.vier.152@gmail.com</a>
<a href=""mailto:redxa.v.i.e.r.15.2@gmail.com"">redxa.v.i.e.r.15.2@gmail.com</a>
<a href=""mailto:redxavie.r.152@gmail.com"">redxavie.r.152@gmail.com</a>
<a href=""mailto:re.d.xa.v.ie.r1.52@gmail.com"">re.d.xa.v.ie.r1.52@gmail.com</a>
<a href=""mailto:re.dxavier.1.5.2@gmail.com"">re.dxavier.1.5.2@gmail.com</a>
<a href=""mailto:re.d.x.a.v.i.er.152@gmail.com"">re.d.x.a.v.i.er.152@gmail.com</a>
<a href=""mailto:redxa.v.ie.r.15.2@gmail.com"">redxa.v.ie.r.15.2@gmail.com</a>
<a href=""mailto:re.d.x.avi.er152@gmail.com"">re.d.x.avi.er152@gmail.com</a>
<a href=""mailto:r.ed.x.av.ier.1.52@gmail.com"">r.ed.x.av.ier.1.52@gmail.com</a>
<a href=""mailto:r.ed.x.av.ie.r.1.5.2@gmail.com"">r.ed.x.av.ie.r.1.5.2@gmail.com</a>
<a href=""mailto:red.x.avier.1.52@gmail.com"">red.x.avier.1.52@gmail.com</a>
<a href=""mailto:red.xavi.e.r1.5.2@gmail.com"">red.xavi.e.r1.5.2@gmail.com</a>
<a href=""mailto:re.d.xa.v.i.e.r.152@gmail.com"">re.d.xa.v.i.e.r.152@gmail.com</a>
<a href=""mailto:r.e.d.x.avi.e.r.152@gmail.com"">r.e.d.x.avi.e.r.152@gmail.com</a>
<a href=""mailto:red.xav.i.er.152@gmail.com"">red.xav.i.er.152@gmail.com</a>
<a href=""mailto:r.e.d.x.av.ier.1.52@gmail.com"">r.e.d.x.av.ier.1.52@gmail.com</a>
<a href=""mailto:r.ed.x.a.vi.er.15.2@gmail.com"">r.ed.x.a.vi.er.15.2@gmail.com</a>
<a href=""mailto:red.xa.v.i.e.r152@gmail.com"">red.xa.v.i.e.r152@gmail.com</a>
<a href=""mailto:r.e.dxavier152@gmail.com"">r.e.dxavier152@gmail.com</a>
<a href=""mailto:redx.av.i.e.r1.5.2@gmail.com"">redx.av.i.e.r1.5.2@gmail.com</a>
<a href=""mailto:re.dxavie.r1.5.2@gmail.com"">re.dxavie.r1.5.2@gmail.com</a>
<a href=""mailto:re.d.xa.vie.r1.5.2@gmail.com"">re.d.xa.vie.r1.5.2@gmail.com</a>
<a href=""mailto:r.ed.x.a.v.i.er15.2@gmail.com"">r.ed.x.a.v.i.er15.2@gmail.com</a>
<a href=""mailto:red.xav.i.er.1.5.2@gmail.com"">red.xav.i.er.1.5.2@gmail.com</a>
<a href=""mailto:re.dxav.ie.r.1.52@gmail.com"">re.dxav.ie.r.1.52@gmail.com</a>
<a href=""mailto:r.edx.av.i.er.152@gmail.com"">r.edx.av.i.er.152@gmail.com</a>
<a href=""mailto:red.xa.v.ie.r152@gmail.com"">red.xa.v.ie.r152@gmail.com</a>
<a href=""mailto:r.e.d.xavi.e.r.1.5.2@gmail.com"">r.e.d.xavi.e.r.1.5.2@gmail.com</a>
<a href=""mailto:r.e.dx.avier.1.5.2@gmail.com"">r.e.dx.avier.1.5.2@gmail.com</a>
<a href=""mailto:r.e.dxavi.er1.52@gmail.com"">r.e.dxavi.er1.52@gmail.com</a>
<a href=""mailto:r.e.dx.a.v.ier1.52@gmail.com"">r.e.dx.a.v.ier1.52@gmail.com</a>
<a href=""mailto:re.d.x.a.v.i.er1.52@gmail.com"">re.d.x.a.v.i.er1.52@gmail.com</a>
<a href=""mailto:r.e.dx.a.v.i.er.152@gmail.com"">r.e.dx.a.v.i.er.152@gmail.com</a>
<a href=""mailto:redx.av.i.e.r.152@gmail.com"">redx.av.i.e.r.152@gmail.com</a>
<a href=""mailto:r.e.dx.a.vie.r1.52@gmail.com"">r.e.dx.a.vie.r1.52@gmail.com</a>
<a href=""mailto:r.e.d.xa.vie.r1.5.2@gmail.com"">r.e.d.xa.vie.r1.5.2@gmail.com</a>
<a href=""mailto:re.dx.a.vier.152@gmail.com"">re.dx.a.vier.152@gmail.com</a>
<a href=""mailto:redxa.vi.er.15.2@gmail.com"">redxa.vi.er.15.2@gmail.com</a>
<a href=""mailto:redx.avie.r.1.5.2@gmail.com"">redx.avie.r.1.5.2@gmail.com</a>
<a href=""mailto:re.d.xa.v.i.e.r.15.2@gmail.com"">re.d.xa.v.i.e.r.15.2@gmail.com</a>
<a href=""mailto:r.ed.xav.ier1.5.2@gmail.com"">r.ed.xav.ier1.5.2@gmail.com</a>
<a href=""mailto:re.d.xav.i.er1.5.2@gmail.com"">re.d.xav.i.er1.5.2@gmail.com</a>
<a href=""mailto:redxav.i.e.r1.5.2@gmail.com"">redxav.i.e.r1.5.2@gmail.com</a>
<a href=""mailto:redxa.v.ier15.2@gmail.com"">redxa.v.ier15.2@gmail.com</a>
<a href=""mailto:redx.avie.r1.52@gmail.com"">redx.avie.r1.52@gmail.com</a>
<a href=""mailto:red.xa.v.ier15.2@gmail.com"">red.xa.v.ier15.2@gmail.com</a>
<a href=""mailto:re.dxa.v.i.e.r.152@gmail.com"">re.dxa.v.i.e.r.152@gmail.com</a>
<a href=""mailto:red.x.av.ier.15.2@gmail.com"">red.x.av.ier.15.2@gmail.com</a>
<a href=""mailto:r.e.d.xa.vier.1.52@gmail.com"">r.e.d.xa.vier.1.52@gmail.com</a>
<a href=""mailto:r.e.d.x.a.v.i.er.152@gmail.com"">r.e.d.x.a.v.i.er.152@gmail.com</a>
<a href=""mailto:re.d.x.a.v.i.e.r15.2@gmail.com"">re.d.x.a.v.i.e.r15.2@gmail.com</a>
<a href=""mailto:r.e.dxa.v.ier15.2@gmail.com"">r.e.dxa.v.ier15.2@gmail.com</a>
<a href=""mailto:r.ed.xavi.e.r152@gmail.com"">r.ed.xavi.e.r152@gmail.com</a>
<a href=""mailto:r.ed.xav.ier.1.52@gmail.com"">r.ed.xav.ier.1.52@gmail.com</a>
<a href=""mailto:r.e.dx.a.v.ier152@gmail.com"">r.e.dx.a.v.ier152@gmail.com</a>
<a href=""mailto:r.ed.xa.v.i.er.152@gmail.com"">r.ed.xa.v.i.er.152@gmail.com</a>
<a href=""mailto:r.e.dxavier1.52@gmail.com"">r.e.dxavier1.52@gmail.com</a>
<a href=""mailto:red.xa.vier1.52@gmail.com"">red.xa.vier1.52@gmail.com</a>
<a href=""mailto:r.edxa.v.i.er15.2@gmail.com"">r.edxa.v.i.er15.2@gmail.com</a>
<a href=""mailto:red.xa.vi.er15.2@gmail.com"">red.xa.vi.er15.2@gmail.com</a>
<a href=""mailto:r.e.d.xa.vi.er152@gmail.com"">r.e.d.xa.vi.er152@gmail.com</a>
<a href=""mailto:r.edxav.ier1.5.2@gmail.com"">r.edxav.ier1.5.2@gmail.com</a>
<a href=""mailto:re.dx.av.i.er.152@gmail.com"">re.dx.av.i.er.152@gmail.com</a>
<a href=""mailto:r.e.dxavier.152@gmail.com"">r.e.dxavier.152@gmail.com</a>
<a href=""mailto:r.e.dx.a.v.ie.r152@gmail.com"">r.e.dx.a.v.ie.r152@gmail.com</a>
<a href=""mailto:re.dxavier152@gmail.com"">re.dxavier152@gmail.com</a>
<a href=""mailto:red.xa.v.i.e.r.152@gmail.com"">red.xa.v.i.e.r.152@gmail.com</a>
<a href=""mailto:r.e.d.xa.vie.r.1.52@gmail.com"">r.e.d.xa.vie.r.1.52@gmail.com</a>
<a href=""mailto:r.ed.x.a.vier15.2@gmail.com"">r.ed.x.a.vier15.2@gmail.com</a>
<a href=""mailto:re.d.x.a.vi.e.r.1.52@gmail.com"">re.d.x.a.vi.e.r.1.52@gmail.com</a>
<a href=""mailto:r.e.dxav.i.e.r.15.2@gmail.com"">r.e.dxav.i.e.r.15.2@gmail.com</a>
<a href=""mailto:r.e.dx.avi.er.15.2@gmail.com"">r.e.dx.avi.er.15.2@gmail.com</a>
<a href=""mailto:re.dx.a.v.ier.152@gmail.com"">re.dx.a.v.ier.152@gmail.com</a>
<a href=""mailto:r.e.d.xa.v.i.er.15.2@gmail.com"">r.e.d.xa.v.i.er.15.2@gmail.com</a>
<a href=""mailto:re.d.x.avie.r15.2@gmail.com"">re.d.x.avie.r15.2@gmail.com</a>"
0thA3hGK,iSH 1.3.2(494) cargo\rust with Alpine 3.16 — Ok,sypwex,Bash,Wednesday 1st of November 2023 12:01:39 AM CDT,"###### Scenario
echo https://dl-cdn.alpinelinux.org/alpine/v3.16/main > /etc/apk/repositories
echo https://dl-cdn.alpinelinux.org/alpine/v3.16/community >> /etc/apk/repositories
apk update
apk upgrade
apk add cargo
 
cargo new ehlo
cd ehlo
cargo run
 
rustc --version # 1.60
cargo --version # 1.60
############################

Welcome to Alpine!

You can install packages with: apk add <package>

You may change this message by editing /etc/motd.

localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.16/main > /etc/apk/repositories
localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.16/community >> /etc/apk/repositories
localhost:~# apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/main/x86/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/community/x86/APKINDEX.tar.gz
v3.16.7-140-g0276255a68b [https://dl-cdn.alpinelinux.org/alpine/v3.16/main]
v3.16.7-139-g1ad42f58eb3 [https://dl-cdn.alpinelinux.org/alpine/v3.16/community]
OK: 16607 distinct packages available
localhost:~# apk upgrade
Upgrading critical system libraries and apk-tools:
(1/1) Upgrading apk-tools (2.12.7-r0 -> 2.12.9-r3)
Executing busybox-1.33.1-r6.trigger
Continuing the upgrade transaction with new apk-tools:
(1/13) Installing alpine-baselayout-data (3.2.0-r23)
(2/13) Upgrading musl (1.2.2-r3 -> 1.2.3-r3)
(3/13) Upgrading busybox (1.33.1-r6 -> 1.35.0-r17)
Executing busybox-1.35.0-r17.post-upgrade
(4/13) Upgrading alpine-baselayout (3.2.0-r16 -> 3.2.0-r23)
Executing alpine-baselayout-3.2.0-r23.pre-upgrade
Executing alpine-baselayout-3.2.0-r23.post-upgrade
(5/13) Upgrading alpine-keys (2.4-r0 -> 2.4-r1)
(6/13) Upgrading ca-certificates-bundle (20191127-r5 -> 20230506-r0)
(7/13) Upgrading libcrypto1.1 (1.1.1l-r0 -> 1.1.1w-r0)
(8/13) Upgrading libssl1.1 (1.1.1l-r0 -> 1.1.1w-r0)
(9/13) Upgrading ssl_client (1.33.1-r6 -> 1.35.0-r17)
(10/13) Upgrading zlib (1.2.11-r3 -> 1.2.12-r3)
(11/13) Upgrading scanelf (1.3.2-r0 -> 1.3.4-r0)
(12/13) Upgrading musl-utils (1.2.2-r3 -> 1.2.3-r3)
(13/13) Purging libretls (3.3.3p1-r2)
Executing busybox-1.35.0-r17.trigger
OK: 6 MiB in 14 packages
localhost:~# apk add cargo
(1/22) Installing rust-stdlib (1.60.0-r2)
(2/22) Installing libgcc (11.2.1_git20220219-r2)
(3/22) Installing libstdc++ (11.2.1_git20220219-r2)
(4/22) Installing binutils (2.38-r3)
(5/22) Installing libgomp (11.2.1_git20220219-r2)
(6/22) Installing libatomic (11.2.1_git20220219-r2)
(7/22) Installing gmp (6.2.1-r2)
(8/22) Installing isl22 (0.22-r0)
(9/22) Installing mpfr4 (4.1.0-r0)
(10/22) Installing mpc1 (1.2.1-r0)
(11/22) Installing gcc (11.2.1_git20220219-r2)
(12/22) Installing musl-dev (1.2.3-r3)
(13/22) Installing libffi (3.4.2-r1)
(14/22) Installing xz-libs (5.2.5-r1)
(15/22) Installing libxml2 (2.9.14-r2)
(16/22) Installing llvm13-libs (13.0.1-r2)
(17/22) Installing rust (1.60.0-r2)
(18/22) Installing ca-certificates (20230506-r0)
(19/22) Installing brotli-libs (1.0.9-r6)
(20/22) Installing nghttp2-libs (1.47.0-r1)
(21/22) Installing libcurl (8.4.0-r0)
(22/22) Installing cargo (1.60.0-r2)
Executing busybox-1.35.0-r17.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 852 MiB in 36 packages
localhost:~#  
localhost:~# cargo new ehlo
     Created binary (application) `ehlo` package
localhost:~# cd ehlo
localhost:~/ehlo# cargo run
   Compiling ehlo v0.1.0 (/root/ehlo)
    Finished dev [unoptimized + debuginfo] target(s) in 6.94s
     Running `target/debug/ehlo`
Hello, world!

localhost:~/ehlo# rustc --version
rustc 1.60.0
localhost:~/ehlo# cargo --version
cargo 1.60.0"
Dj70q7AV,Sample *.cpl file from Windows XP Control panel.,bejiitas_wrath,C++,Tuesday 31st of October 2023 11:35:19 PM CDT,"///////////////////////////////////////////////////////////////////////
//                     Microsoft Windows                             //
//              Copyright(c) Microsoft Corp., 1995                   //
///////////////////////////////////////////////////////////////////////
//
// LANG.CPP - ""Language"" property page for InetCpl
//

// HISTORY:
//
// 1/10/97  beomoh      created
//

#include ""inetcplp.h""

#include <tchar.h>
#include <mlang.h>
#include ""psapi.h""
#include ""tlhelp32.h""
#include ""process.h""
#include <mluisupp.h>
#include <shdocvw.h>

#define ARRAYSIZE(a)        (sizeof(a)/sizeof(a[0]))
#define FORMAT_STR          TEXT(""%s [%s]"")
#define MAX_LIST_STRING_LEN MAX_LOCALE_NAME + MAX_RFC1766_NAME + 3
#define MAX_ACCEPT_LANG_LEN 2048

#define CP_THAI     874
#define CP_ARABIC   1256
#define CP_HEBREW   1255

// used as the return value from setlang dialog
#define RETURN_SETLANG_ENDLANGDIALOG    2
#define RETURN_SETLANG_CLOSEDNORMAL     1
#define RETURN_SETLANG_CANCELED         0

typedef HRESULT (* PCOINIT) (LPVOID);
typedef VOID (* PCOUNINIT) (VOID);
typedef VOID (* PCOMEMFREE) (LPVOID);
typedef HRESULT (* PCOCREINST) (REFCLSID, LPUNKNOWN, DWORD,     REFIID, LPVOID * );

extern HMODULE hOLE32;
extern PCOINIT pCoInitialize;
extern PCOUNINIT pCoUninitialize;
extern PCOMEMFREE pCoTaskMemFree;
extern PCOCREINST pCoCreateInstance;

extern BOOL _StartOLE32();

class CUILangList;
INT_PTR KickSetLang(HWND hDlg, CUILangList * pLangList);

static const TCHAR s_szResourceLocale[] = TEXT(""ResourceLocale"");
// HKLM\Software\Microsoft\Internet Explorer\International used for url string
static const TCHAR s_szUrlSPK[] 
= TEXT(""http://www.microsoft.com/isapi/redir.dll?prd=ie&pver=6&ar=plugui&sba=install"");
static const TCHAR c_szInstall[] 
= TEXT(""Software\\Microsoft\\Active Setup\\Installed Components\\{89820200-ECBD-11CF-8B85-00AA005B4383}"");
static const TCHAR c_szLocale[] = TEXT(""Locale"");
static const TCHAR s_szLangPackPath[]   = TEXT(""Software\\Microsoft\\Internet Explorer"");
static const TCHAR s_szVersion[] = TEXT(""LPKInstalled"");

typedef struct 
{
    WORD wlangid;
    BOOL fValid;
    TCHAR szName[MAX_LOCALE_NAME];
} LANGLIST;

static LANGLIST s_arryLangList[] = 
{
    {0x0409, FALSE, {0}},
    {0x0407, FALSE, {0}},
    {0x0411, FALSE, {0}},
    {0x0412, FALSE, {0}},
    {0x0404, FALSE, {0}},
    {0x0804, FALSE, {0}},
    {0x040c, FALSE, {0}},
    {0x0c0a, FALSE, {0}},
    {0x0416, FALSE, {0}},
    {0x0410, FALSE, {0}},
    {0x0413, FALSE, {0}},
    {0x041d, FALSE, {0}},
    {0x0406, FALSE, {0}},
    {0x040b, FALSE, {0}},
    {0x040e, FALSE, {0}},
    {0x0414, FALSE, {0}},
    {0x0408, FALSE, {0}},
    {0x0415, FALSE, {0}},
    {0x0419, FALSE, {0}},
    {0x0405, FALSE, {0}},
    {0x0816, FALSE, {0}},
    {0x041f, FALSE, {0}},
    {0x041b, FALSE, {0}},
    {0x0424, FALSE, {0}},
    {0x0401, FALSE, {0}},
    {0x040d, FALSE, {0}},
    {0x042d, FALSE, {0}},
    {0x040f, FALSE, {0}},
};

//
//  ISO639 ID table
//
typedef struct tagISO639
{
    LPCTSTR ISO639;
    LANGID LangID;
}   ISO639, *LPISO639;

const ISO639 c_ISO639[] =
{
    { TEXT(""EN""), 0x0409 },
    { TEXT(""DE""), 0x0407 },
    { TEXT(""JA""), 0x0411 },
    { TEXT(""KO""), 0x0412 },
    { TEXT(""TW""), 0x0404 },
    { TEXT(""CN""), 0x0804 },
    { TEXT(""FR""), 0x040C },
    { TEXT(""ES""), 0x0C0A },
    { TEXT(""BR""), 0x0416 },
    { TEXT(""IT""), 0x0410 },
    { TEXT(""NL""), 0x0413 },
    { TEXT(""SV""), 0x041D },
    { TEXT(""DA""), 0x0406 },
    { TEXT(""FI""), 0x040B },
    { TEXT(""HU""), 0x040E },
    { TEXT(""NO""), 0x0414 },
    { TEXT(""EL""), 0x0408 },
    { TEXT(""PL""), 0x0415 },
    { TEXT(""RU""), 0x0419 },
    { TEXT(""CS""), 0x0405 },
    { TEXT(""PT""), 0x0816 },
    { TEXT(""TR""), 0x041F },
    { TEXT(""SK""), 0x041B },
    { TEXT(""SL""), 0x0424 },
    { TEXT(""AR""), 0x0401 },
    { TEXT(""HE""), 0x040D },
    { TEXT(""EU""), 0x042D },
    { TEXT(""IS""), 0x040F },
};

// GetInstallLanguage
//
// synopsis - borrowed this function from shlwapi. we can remove this
//            once we have it exported from shlwapi.dll
//
LANGID GetInstallLanguage(void)
{
    static LANGID LangID = 0;
    TCHAR szISO639[3];
    DWORD cb;

    if (0 == LangID)
    {
        cb = sizeof(szISO639);
        if (ERROR_SUCCESS == SHGetValue(HKEY_LOCAL_MACHINE, c_szInstall, c_szLocale, NULL, szISO639, &cb))
        {
            int i;

            for (i = 0; i < ARRAYSIZE(c_ISO639); i++)
            {
                if (!StrCmpNI(szISO639, c_ISO639[i].ISO639, ARRAYSIZE(szISO639)))
                {
                    LangID = c_ISO639[i].LangID;
                    break;
                }
            }
        }
    }
    return LangID;
}

// CUILangList
// 
// maintains the list of UI languages for user to choose
//
class CUILangList
{
public:
    CUILangList() {_iLangIdx = -1; lang = s_arryLangList; 
                   _nLangList = ARRAYSIZE(s_arryLangList);
                   _fOffice9Installed = -1;};
    
    void    ValidateLangList();
    BOOL    IsValidLang(int idx) { return (idx < _nLangList) ? lang[idx].fValid: FALSE; };
    int     GetCurrentLangIdx();
    void    SetCurrentLangIdx(int idx);
    LPCTSTR GetCurrentLangName();
    LPCTSTR GetLangNameOfIdx(int idx);
    WORD    GetLangIdOfIdx(int idx) { return (idx < _nLangList) ? lang[idx].wlangid:0; };
    UINT    GetIds(int idx); 
    int     GetListSize() {return _nLangList;};
    BOOL    IsOffice9Installed();
    static  HRESULT GetLangList(HWND hdlg, CUILangList ** ppLangList);
    static  HRESULT RemoveLangList(HWND hdlg);
private:
    int _iLangIdx;
    int _nLangList;
    int _fOffice9Installed;
    LANGLIST *lang;
};

// CShutDownProcInfo
// 
// manages information about processes we want
// to shutdown/restart.
//
typedef enum 
{
    PS_UNKNOWN=0, 
    PS_CANDIDATE, 
    PS_TO_BE_SHUTDOWN, 
    PS_IGNORE, 
    PS_SHUTDOWN_OK, 
    PS_WAITING, 
    PS_TO_BE_SHUTDOWN_WITH_NO_RELAUNCH, 
    PS_SHUTDOWN_OK_NO_RELAUNCH_NEEDED, 
} PROCSTATE; 

class CShutDownProcInfo : public CProcessInfo
{
public:
    CShutDownProcInfo(HWND hdlgParent);
    ~CShutDownProcInfo();
    HRESULT EnsureProcList();
    HRESULT IncreaseProcList();
    HRESULT NotifyShutDownToFolks(int *nProccess);
    HRESULT AddToProcList(HWND hwndShutDown);
    HRESULT WaitForOneProcess(int iProc);
    HRESULT WaitForFolksShutDown();
    HRESULT GetRestartAppPath(LPTSTR szPath, int cchPath, int iProc);
    HRESULT RestartFolks();
    static DWORD CALLBACK ShutDownThreadProc(void *pv);
protected:
    typedef struct
    {
        DWORD dwPID;
        TCHAR szExeName[32];
        PROCSTATE State; 
    } PROCLIST;
    PROCLIST *_pProcList;
    int _nAlloced;
    int _iProcList;
    HWND _hdlgParent;
    BOOL _fAllShutDown;
};
// this always fills '0' to empty digits
// caller has to make sure sz has cdigit+1 of buffer
void IntToHex(OUT LPTSTR sz, IN int cdigit, IN int value)
{
    int i, idigit;

    if (sz && value > 0 && cdigit > 0)
    {
        // nul terminate the buffer
        sz[cdigit] = TEXT('\0');
        
        for (i = cdigit-1; i >= 0; i--, value /= 16)
        {
            idigit = value%16;
            if (idigit < 10)
                sz[i] = (TCHAR)idigit + TEXT('0');
            else 
                sz[i] = (TCHAR)idigit - 10 + TEXT('A');
        }
    }
} 

// set valid flags for the lang list
// very expensive so expects to be called only once in a session
// from CUILangList::GetLangList
//
#define MAX_SATELLITEPACKS 30 // 30 must be a practical number for satellite packs
void CUILangList::ValidateLangList()
{
    HKEY hKey;
    HRESULT hr;
    TCHAR szValueName[32];
    WORD aryValidLang[MAX_SATELLITEPACKS +1+1] = {0}; // +1 for install lang, 
                                                      // +1 for terminator

    int  nMaxValidLang = ARRAYSIZE(aryValidLang)-1;   // -1 for terminator
    WORD *pwValid = aryValidLang;
    
    // make the install language always valid
    *pwValid = GetInstallLanguage();
    if (*pwValid != 0)
    {
       *(pwValid+1) = 0; // terminator
       pwValid++;
       nMaxValidLang--;
    }

    if (ERROR_SUCCESS == 
    RegOpenKeyEx(HKEY_LOCAL_MACHINE, REGSTR_PATH_INTERNATIONAL, NULL, KEY_READ, &hKey))
    {
        int i = 0;
        do {
            // see if the value has a match in the list
            DWORD dwType;
            DWORD cb = ARRAYSIZE(szValueName)-2;

            hr = SHEnumValue(hKey, i++, szValueName+2, &cb, &dwType, NULL, NULL);
            if (SUCCEEDED(hr) && dwType == REG_SZ)
            {
                UINT uiInstalled ;

                szValueName[0] = TEXT('0');
                szValueName[1] = TEXT('x');
                StrToIntEx(szValueName, STIF_SUPPORT_HEX, (LPINT)&uiInstalled);
                if (uiInstalled > 0)
                {
                    *pwValid     = (unsigned short) uiInstalled;
                    *(pwValid+1) = 0; // terminator
                    pwValid++;
                }
            }
        } while(hr == ERROR_SUCCESS && i < nMaxValidLang);
        RegCloseKey(hKey);
    }

    // this assumes we can use StrChrW to search a value in 
    // a word array, it also assumes we never have 0 as a langid
    //
    Assert(sizeof(WORD) == sizeof(WCHAR)); // unix?

    int nValidLang = (int)(pwValid-aryValidLang);
    for(int idx = 0; idx < GetListSize(); idx++ )
    {
        // abusing the string function but this is a fast way
        if (StrChrW((WCHAR *)aryValidLang, (WCHAR)lang[idx].wlangid))
        {
            lang[idx].fValid = TRUE;
            if(--nValidLang <= 0)
                break;
        }
    }
}

static const TCHAR s_szPropLangList[] = TEXT(""langlist"");
HRESULT CUILangList::GetLangList(HWND hdlg, CUILangList ** ppLangList)
{
    HRESULT hr=S_OK;
    
    CUILangList *pLangList = (CUILangList *)GetProp(hdlg, s_szPropLangList);
    if (!pLangList)
    {
        pLangList = new CUILangList();
        if (pLangList)
        {
            pLangList->ValidateLangList();
            SetProp(hdlg, s_szPropLangList, (HANDLE)pLangList);
        }
        else
            hr = E_FAIL;
    }
    
    ASSERT(ppLangList);
    if (ppLangList)
        *ppLangList = pLangList;
    
    return hr;
}

HRESULT CUILangList::RemoveLangList(HWND hdlg)
{
    HRESULT hr = S_OK;
    CUILangList *pLangList = (CUILangList *)GetProp(hdlg, s_szPropLangList);

    if (pLangList)
    {
        delete pLangList;
        RemoveProp(hdlg, s_szPropLangList);    
    }
    else
        hr = S_FALSE;

    return hr;
}

void CUILangList::SetCurrentLangIdx(int idx)
{
    TCHAR sz[4+1];
    if (idx != _iLangIdx)
    {
        // the resource id is always 4 digit
        IntToHex(sz, 4, lang[idx].wlangid);
        SHSetValue(HKEY_CURRENT_USER, REGSTR_PATH_INTERNATIONAL, 
                   s_szResourceLocale, REG_SZ, (void *)sz, sizeof(sz));
        _iLangIdx = idx;
    }
}
// returns idx to the lang array
int CUILangList::GetCurrentLangIdx()
{
    // show the current selection
    TCHAR sz[64];
    DWORD dwType;
    int   isel;
    
    // see if it's cached already
    if (_iLangIdx == -1)
    {
        // We basically wants what we've set in the registry,
        // but if Office9 is installed we'll show whatever
        // Office sets, and we can't change the Office setting anyway
        // MLGetUILanguage returns Office's setting if its there
        // Also I suppose we want to show NT5's UI language here
        //
        if (IsOffice9Installed() || IsOS(OS_WIN2000ORGREATER))
            isel = INETCPL_GetUILanguage();
        else
        {
            DWORD dwcbData = sizeof(sz);

            HRESULT hr =  SHGetValue(HKEY_CURRENT_USER, REGSTR_PATH_INTERNATIONAL, 
                                  s_szResourceLocale, &dwType, (void *)&sz[2], &dwcbData);
                   
            if (hr == ERROR_SUCCESS && dwType == REG_SZ)
            {
                sz[0] = TEXT('0');
                sz[1] = TEXT('x');
                StrToIntEx(sz, STIF_SUPPORT_HEX, (LPINT)&isel);
            }
            else
            {
                isel = GetInstallLanguage();
            }
        }
        
        for(int i = 0; i < GetListSize(); i++ )
        {
            if (isel == lang[i].wlangid)
            {
                _iLangIdx = i;
                break;
            }
        }
            
        // english for error case
        if (_iLangIdx < 0) 
            _iLangIdx = 0;
    }
    return _iLangIdx;
}

LPCTSTR CUILangList::GetLangNameOfIdx(int idx)
{
    LPCTSTR pszRet = NULL;
    IMultiLanguage2 *pML2;
    HRESULT hr;
    RFC1766INFO Rfc1766Info={0};

    if(!hOLE32)
    {
        if(!_StartOLE32())
        {
            ASSERT(FALSE);
            return NULL;
        }
    }
    hr = pCoInitialize(NULL);

    if (FAILED(hr))
        return NULL;

    hr = pCoCreateInstance(CLSID_CMultiLanguage, NULL, CLSCTX_INPROC_SERVER, IID_IMultiLanguage2, (LPVOID *) &pML2);

    if (SUCCEEDED(hr))
    {
        if (idx >= 0)
        {
            if (!lang[idx].szName[0])
            {
                pML2->GetRfc1766Info(lang[idx].wlangid, INETCPL_GetUILanguage(), &Rfc1766Info);
                StrCpyNW(lang[idx].szName, Rfc1766Info.wszLocaleName, ARRAYSIZE(lang[0].szName));            
            }
            pszRet = lang[idx].szName;        
        }
        pML2->Release();
    }

    pCoUninitialize();
    return pszRet;
}
 
LPCTSTR CUILangList::GetCurrentLangName()
{
    int idx = GetCurrentLangIdx();
    return GetLangNameOfIdx(idx);
}

BOOL CUILangList::IsOffice9Installed()
{
    DWORD dwVersion;
    DWORD cb = sizeof(dwVersion);
    if (_fOffice9Installed < 0)
    {
        _fOffice9Installed ++;
        if (ERROR_SUCCESS ==
            SHGetValue(HKEY_LOCAL_MACHINE, s_szLangPackPath, s_szVersion, NULL, &dwVersion, &cb)
          && dwVersion > 0) // magic number - christw tells me so
            _fOffice9Installed ++;
    }
    return (BOOL)_fOffice9Installed;
}

void InitCurrentUILang(HWND hDlg)
{
    BOOL fChanged = FALSE;
    CUILangList *pLangList;  
    LPCTSTR pszLangSel = NULL;
    HRESULT hr;
    
    hr = CUILangList::GetLangList(hDlg, &pLangList);
    
    if (SUCCEEDED(hr))
        pszLangSel = pLangList->GetCurrentLangName();
    
    if (pszLangSel)
    {
        TCHAR szBig[1024], szSmall[256];

        GetDlgItemText(hDlg, IDC_LANG_CURSEL, szBig, ARRAYSIZE(szBig));
        if (szBig[0])
            fChanged = (StrStr(szBig, pszLangSel) == NULL); 

        if (MLLoadString((fChanged)? IDS_LANG_FUTUREUSE: IDS_LANG_CURRENTUSE, szSmall, ARRAYSIZE(szSmall)) > 0)
        {
            wnsprintf(szBig, ARRAYSIZE(szBig), szSmall, pszLangSel);
            Static_SetText(GetDlgItem(hDlg, IDC_LANG_CURSEL), szBig);
        }
    }
}


//
// FillAcceptListBox()
//
// Fills the accept language listbox with names of selected language
//
void FillAcceptListBox(IN HWND hDlg)
{
    IMultiLanguage2 *pML2;
    HRESULT hr;
    HKEY hKey;
    DWORD cb;
    TCHAR sz[MAX_LIST_STRING_LEN], szBuf[MAX_ACCEPT_LANG_LEN], *p1, *p2, *p3;
    HWND hwndList = GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST);

    if(!hOLE32)
    {
        if(!_StartOLE32())
        {
            ASSERT(FALSE);
            return;
        }
    }
    hr = pCoInitialize(NULL);
    if (FAILED(hr))
        return;

    hr = pCoCreateInstance(CLSID_CMultiLanguage, NULL, CLSCTX_INPROC_SERVER, IID_IMultiLanguage2, (LPVOID *) &pML2);
    if (SUCCEEDED(hr))
    {
        if (ERROR_SUCCESS == RegCreateKeyEx(HKEY_CURRENT_USER, REGSTR_PATH_INTERNATIONAL, NULL, NULL, NULL, KEY_SET_VALUE|KEY_READ, NULL, &hKey, NULL))
        {
            LCID lcid;
            RFC1766INFO Rfc1766Info;
            TCHAR sz1[MAX_LIST_STRING_LEN], sz2[MAX_RFC1766_NAME];

            cb = sizeof(szBuf);
            if (ERROR_SUCCESS == RegQueryValueEx(hKey, REGSTR_VAL_ACCEPT_LANGUAGE, NULL, NULL, (LPBYTE)szBuf, &cb))
            {
                p1 = p2 = szBuf;
                while (NULL != *p1)
                {
                    WCHAR wsz[MAX_LIST_STRING_LEN];
                    BOOL bEnd = FALSE;

                    while (TEXT(',') != *p2 && NULL != *p2)
                        p2 = CharNext(p2);
                    if (NULL != *p2)
                        *p2 = NULL;
                    else
                        bEnd = TRUE;
                    p3 = p1;
                    while (TEXT(';') != *p3 && NULL != *p3)
                        p3 = CharNext(p3);
                    if (NULL != *p3)
                        *p3 = NULL;
#ifdef UNICODE
                    StrCpyN(wsz, p1, ARRAYSIZE(wsz));
#else
                    MultiByteToWideChar(CP_ACP, 0, p1, -1, wsz, MAX_RFC1766_NAME);
#endif
                    hr = pML2->GetLcidFromRfc1766(&lcid, wsz);
                    if (SUCCEEDED(hr))
                    {
                        hr = pML2->GetRfc1766Info(lcid, INETCPL_GetUILanguage(), &Rfc1766Info);
                        if (SUCCEEDED(hr))
                        {
#ifdef UNICODE
                            StrCpyN(sz1, Rfc1766Info.wszLocaleName, ARRAYSIZE(sz1));
#else
                            WideCharToMultiByte(CP_ACP, 0, Rfc1766Info.wszLocaleName, -1, sz1, MAX_LIST_STRING_LEN, NULL, NULL);
#endif
                            wnsprintf(sz, ARRAYSIZE(sz), FORMAT_STR, sz1, p1);
                        }
                    }
                    else
                    {
                        MLLoadString(IDS_USER_DEFINED, sz1, ARRAYSIZE(sz1));
                        wnsprintf(sz, ARRAYSIZE(sz), FORMAT_STR, sz1, p1);
                    }
                    ListBox_AddString(hwndList, sz);
                    if (TRUE == bEnd)
                        p1 = p2;
                    else
                        p1 = p2 = p2 + 1;
                }
            }
            else
            {
                lcid = GetUserDefaultLCID();

                hr = pML2->GetRfc1766Info(lcid, INETCPL_GetUILanguage(), &Rfc1766Info);
                if (SUCCEEDED(hr))
                {
#ifdef UNICODE
                    StrCpyN(sz1, Rfc1766Info.wszLocaleName,  ARRAYSIZE(sz1));
                    StrCpyN(sz2, Rfc1766Info.wszRfc1766,  ARRAYSIZE(sz2));
#else
                    WideCharToMultiByte(CP_ACP, 0, Rfc1766Info.wszLocaleName, -1, sz1, MAX_LIST_STRING_LEN, NULL, NULL);
                    WideCharToMultiByte(CP_ACP, 0, Rfc1766Info.wszRfc1766, -1, sz2, MAX_RFC1766_NAME, NULL, NULL);
#endif
                    wnsprintf(sz, ARRAYSIZE(sz), FORMAT_STR, sz1, sz2);
                    ListBox_AddString(hwndList, sz);
                }
            }
            RegCloseKey(hKey);
        }
        pML2->Release();
    }
    pCoUninitialize();
}

//
// LanguageDlgInit()
//
// Initializes the Language dialog.
//
BOOL LanguageDlgInit(IN HWND hDlg)
{
    if (!hDlg)
        return FALSE;   // nothing to initialize

    FillAcceptListBox(hDlg);

    EnableWindow(GetDlgItem(hDlg, IDC_LANG_REMOVE_BUTTON), FALSE);
    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_UP_BUTTON), FALSE);
    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_DOWN_BUTTON), FALSE);
    EnableWindow(GetDlgItem(hDlg, IDC_LANG_ADD_BUTTON), !g_restrict.fInternational);
    
    // On NT5, we use NT5's MUI feature instead of IE5 plugui
    if (IsOS(OS_WIN2000ORGREATER))
        ShowWindow(GetDlgItem(hDlg, IDC_LANG_UI_PREF), SW_HIDE);
    else
    {
        UINT uiACP = GetACP();

        // We don't support PlugUI on these platforms
        if (uiACP == CP_ARABIC || uiACP == CP_HEBREW || uiACP == CP_THAI)
            ShowWindow(GetDlgItem(hDlg, IDC_LANG_UI_PREF), SW_HIDE);
        else
            EnableWindow(GetDlgItem(hDlg, IDC_LANG_UI_PREF), !g_restrict.fInternational);
    }

    // show the current UI lang
    InitCurrentUILang(hDlg);
    
    // everything ok
    return TRUE;
}

//
// SaveLanguageData()
//
// Save the new language settings into regestry
//
void SaveLanguageData(IN HWND hDlg)
{
    HKEY hKey;
    DWORD dw;
    int i, iNumItems, iQ, n;
    TCHAR szBuf[MAX_ACCEPT_LANG_LEN];

    if (ERROR_SUCCESS == RegCreateKeyEx(HKEY_CURRENT_USER, REGSTR_PATH_INTERNATIONAL, NULL, NULL, NULL, KEY_WRITE, NULL, &hKey, &dw ))
    {
        HWND hwndList = GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST);

        iNumItems = ListBox_GetCount(hwndList);

        for (n = 1, iQ = 10; iQ < iNumItems; iQ *= 10, n++)
            ;

        szBuf[0] = NULL;
        for (i = 0; i < iNumItems; i++)
        {
            TCHAR sz[MAX_LIST_STRING_LEN], *p1, *p2;

            ListBox_GetText(hwndList, i, sz);
            p1 = sz;
            // We can assume safely there is '[' and ']' in this string.
            while (TEXT('[') != *p1)
                p1 = CharNext(p1);
            p1 = p2 = p1 + 1;
            while (TEXT(']') != *p2)
                p2 = CharNext(p2);
            *p2 = NULL;
            if (0 == i)
                StrCpyN(szBuf, p1, ARRAYSIZE(szBuf));
            else
            {
                TCHAR szF[MAX_ACCEPT_LANG_LEN], szQ[MAX_ACCEPT_LANG_LEN];

                int len = lstrlen(szBuf);
                StrCpyN(szBuf + len, TEXT("",""), ARRAYSIZE(szBuf) - len);
                len++;
                StrCpyN(szBuf + len, p1, ARRAYSIZE(szBuf) - len);
                wnsprintf(szF, ARRAYSIZE(szF), TEXT("";q=0.%%0%dd""), n);
                wnsprintf(szQ, ARRAYSIZE(szQ), szF, ((iNumItems - i) * iQ + (iNumItems / 2)) / iNumItems);
                len = lstrlen(szBuf);
                StrCpyN(szBuf + len , szQ, ARRAYSIZE(szBuf) - len);
            }
        }
        RegSetValueEx(hKey, REGSTR_VAL_ACCEPT_LANGUAGE, NULL, REG_SZ, (LPBYTE)szBuf, (lstrlen(szBuf)+1)*sizeof(TCHAR));
        RegCloseKey(hKey);
    }
}

// MoveUpDownListItem()
//
// Move selected list item up or down
//
void MoveUpDownListItem(HWND hDlg, HWND hwndList, BOOL bUp)
{
    int i, iNumItems;
    TCHAR sz[MAX_LIST_STRING_LEN];

    i = ListBox_GetCurSel(hwndList);
    iNumItems = ListBox_GetCount(hwndList);
    ListBox_GetText(hwndList, i, sz);
    ListBox_DeleteString(hwndList, i);

    i += (bUp)? -1: 1;
    if (i < 0)
        i = 0;
    else if (i >= iNumItems)
        i = iNumItems - 1;
    ListBox_InsertString(hwndList, i, sz);
    ListBox_SetSel(hwndList, TRUE, i);
    ListBox_SetCurSel(hwndList, i);

    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_UP_BUTTON), i != 0);
    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_DOWN_BUTTON), i < iNumItems - 1);

    if (NULL == GetFocus()) // This prevent keyboard access disable
        SetFocus(hwndList);
}


//
// FillLanguageListBox()
//
// Fills the language listbox with the names of available languages
//
BOOL FillLanguageListBox(IN HWND hDlg)
{
    IMultiLanguage2 *pML2;
    HRESULT hr;
    TCHAR sz[MAX_LIST_STRING_LEN], sz1[MAX_LOCALE_NAME], sz2[MAX_RFC1766_NAME];
    HWND hwndEdit = GetDlgItem(hDlg, IDC_LANG_USER_DEFINED_EDIT);
    HWND hwndList = GetDlgItem(hDlg, IDC_LANG_AVAILABLE_LIST);
    HWND hwndAccept = GetDlgItem(GetParent(hDlg), IDC_LANG_ACCEPT_LIST);
    
    SendMessage(hwndEdit, EM_SETLIMITTEXT, 16, 0L); // Set Limit text as 16 characters

    if(!hOLE32)
    {
        if(!_StartOLE32())
        {
            ASSERT(FALSE);
            return FALSE;
        }
    }
    hr = pCoInitialize(NULL);
    if (FAILED(hr))
        return FALSE;

    hr = pCoCreateInstance(CLSID_CMultiLanguage, NULL, CLSCTX_INPROC_SERVER, IID_IMultiLanguage2, (LPVOID *) &pML2);
    if (SUCCEEDED(hr))
    {
        IEnumRfc1766 *pEnumRfc1766;
        RFC1766INFO Rfc1766Info;

        if (SUCCEEDED(pML2->EnumRfc1766(INETCPL_GetUILanguage(), &pEnumRfc1766)))
        {
            while (S_OK == pEnumRfc1766->Next(1, &Rfc1766Info, NULL))
            {
#ifdef UNICODE
                StrCpyN(sz1, Rfc1766Info.wszLocaleName, ARRAYSIZE(sz1));
                StrCpyN(sz2, Rfc1766Info.wszRfc1766,  ARRAYSIZE(sz2));
#else
                WideCharToMultiByte(CP_ACP, 0, Rfc1766Info.wszLocaleName, -1, sz1, MAX_LOCALE_NAME, NULL, NULL);
                WideCharToMultiByte(CP_ACP, 0, Rfc1766Info.wszRfc1766, -1, sz2, MAX_RFC1766_NAME, NULL, NULL);
#endif
                wnsprintf(sz, ARRAYSIZE(sz), FORMAT_STR, sz1, sz2);
                if (LB_ERR == ListBox_FindStringExact(hwndAccept, -1, sz))
                    ListBox_AddString(hwndList, sz);
            }
            pEnumRfc1766->Release();
        }
        pML2->Release();
    }
    pCoUninitialize();
    
    // everything ok
    return TRUE;
}

//
// AddLanguage()
//
// Add selected language to accept language listbox.
//
void AddLanguage(IN HWND hDlg)
{
    int i, j, *pItems, iNumItems, iIndex;
    TCHAR sz[MAX_LIST_STRING_LEN];
    HWND hdlgParent = GetParent(hDlg);
    HWND hwndFrom = GetDlgItem(hDlg, IDC_LANG_AVAILABLE_LIST);
    HWND hwndTo = GetDlgItem(hdlgParent, IDC_LANG_ACCEPT_LIST);

    i = ListBox_GetSelCount(hwndFrom);
    if (0 < i && (pItems = (PINT)LocalAlloc(LPTR, sizeof(int)*i)))
    {
        ListBox_GetSelItems(hwndFrom, i, pItems);
        for (j = 0; j < i; j++)
        {
            ListBox_GetText(hwndFrom, pItems[j], sz);
            ListBox_AddString(hwndTo, sz);
        }
        LocalFree(pItems);
    }
    if (GetWindowTextLength(GetDlgItem(hDlg, IDC_LANG_USER_DEFINED_EDIT)))
    {
        TCHAR *p, sz1[MAX_LIST_STRING_LEN], sz2[MAX_LIST_STRING_LEN];
        BOOL fValid = TRUE;

        GetWindowText(GetDlgItem(hDlg, IDC_LANG_USER_DEFINED_EDIT), sz2, ARRAYSIZE(sz2));
        p = sz2;
        while (NULL != *p && TRUE == fValid)
        {
            switch (*p)
            {
                // Invalid characters for user-defined string
                case TEXT(','):
                case TEXT(';'):
                case TEXT('['):
                case TEXT(']'):
                case TEXT('='):
                    fValid = FALSE;
                    break;

                default:
                    p = CharNext(p);
            }
        }
        if (FALSE == fValid)
        {
            TCHAR szTitle[256], szErr[1024];

            MLLoadShellLangString(IDS_USER_DEFINED_ERR, szErr, ARRAYSIZE(szErr));
            GetWindowText(hDlg, szTitle, ARRAYSIZE(szTitle));
            MessageBox(hDlg, szErr, szTitle, MB_OK | MB_ICONHAND);
        }
        else
        {
            MLLoadString(IDS_USER_DEFINED, sz1, ARRAYSIZE(sz1));
            wnsprintf(sz, ARRAYSIZE(sz), FORMAT_STR, sz1, sz2);
            ListBox_AddString(hwndTo, sz);
        }
    }
    iIndex = ListBox_GetCurSel(hwndTo);
    if (LB_ERR != iIndex)
    {
        iNumItems = ListBox_GetCount(hwndTo);
        EnableWindow(GetDlgItem(hdlgParent, IDC_LANG_REMOVE_BUTTON), iNumItems > 0);
        EnableWindow(GetDlgItem(hdlgParent, IDC_LANG_MOVE_UP_BUTTON), iIndex > 0);
        EnableWindow(GetDlgItem(hdlgParent, IDC_LANG_MOVE_DOWN_BUTTON), iIndex < iNumItems - 1);
    }
}

int ComboBoxEx_AddString(IN HWND hwndCtl, IN LPCTSTR sz)
{
    COMBOBOXEXITEM cbexItem = {0};
    
    int csz = _tcslen(sz);

    cbexItem.mask = CBEIF_TEXT;
    cbexItem.pszText = (LPTSTR)sz;
    cbexItem.cchTextMax = csz;
    
    // sort the string based on the current locale
    // we don't bother to use binary search because
    // the list is up to 25 item
    TCHAR szItem[MAX_LOCALE_NAME];
    int i, itemCount = ComboBox_GetCount(hwndCtl);
    for (i = 0; i < itemCount; i++)
    {
        ComboBox_GetLBText(hwndCtl, i, szItem);
        if (CompareString(INETCPL_GetUILanguage(), 
                          0,
                          sz,
                          csz,
                          szItem,
                          ARRAYSIZE(szItem)) == CSTR_LESS_THAN)
        {
            break;
        }
    }
    cbexItem.iItem = i;
    
    SendMessage(hwndCtl, CBEM_INSERTITEM, (WPARAM)0, (LPARAM)(LPVOID)&cbexItem);
    return i;
}

BOOL FillUILangListBox(IN HWND hDlg, CUILangList *pLangList)
{
    HWND hwndCombo = GetDlgItem(hDlg, IDC_COMBO_UILANG);
    BOOL bNT5 = IsOS(OS_WIN2000ORGREATER);
    DWORD dwAcp = GetACP();
    LPCTSTR pszLangName;
    
    if (!pLangList)
        return FALSE;

    // fill the list up.
    for (int i = 0; i < pLangList->GetListSize(); i++)
    {
        if (!pLangList->IsValidLang(i))
            continue;

        if (!bNT5)
        {
            LANGID lid = pLangList->GetLangIdOfIdx(i);

            if (dwAcp == CP_THAI || dwAcp == CP_ARABIC || dwAcp == CP_HEBREW)
            {
                // do not support cross codepage PlugUI
                // on Thai or Middle East platform(Arabic/Hebrew)
                static DWORD dwDefCP = 0;

                if (dwDefCP == 0)
                {
                    TCHAR szLcData[6+1]; // +2 for '0x' +1 for terminator

                    GetLocaleInfo( MAKELCID(lid, SUBLANG_NEUTRAL),
                        LOCALE_IDEFAULTANSICODEPAGE, szLcData, ARRAYSIZE(szLcData));
                                       
                    dwDefCP = StrToInt(szLcData);
                }
                if (dwDefCP != dwAcp && lid != 0x0409 && lid != GetInstallLanguage())
                    continue;
            }
            else
            {
                // skip Arabic and Hebrew on non-supporting platform
                if (lid == 0x401 || lid == 0x40d)
                    continue;
            }
        }

        pszLangName = pLangList->GetLangNameOfIdx(i);

        // ComboBox_FindStringExact has problems to handle DBCS Unicode characters 
        if (pszLangName)
        {
            int ipos = ComboBoxEx_AddString(hwndCombo, pszLangName);
            if (ipos >= 0)
            {
                ComboBox_SetItemData(hwndCombo, ipos, i);
            }
        }
    }

    // show the current selection
    int iLangIdx = pLangList->GetCurrentLangIdx();
    if (iLangIdx >= 0)
    {
        int iCBPos;
        int iCBSize = ComboBox_GetCount(hwndCombo);
        for (iCBPos = 0; iCBPos < iCBSize; iCBPos++)
        {
            if (iLangIdx == ComboBox_GetItemData(hwndCombo, iCBPos))
                break;
        }

        if (iCBPos < iCBSize)
            ComboBox_SetCurSel(hwndCombo, iCBPos);
    }
    return TRUE;
}

//
// Shutdown/reboot procedures implementation
//
// synopsis: CShutDownInfo class implements the method and the process list
//           which handle the sequence.
//           s_arryClsNames[] holds the list of target application
//           ChangeLanguage() (global) triggers the sequence being called from
//           LangChangeDlgProc().
//
static const LPTSTR s_arryClsNames[] =  
{
    TEXT(""IEFrame""),                       // browser instance
    TEXT(""ThorBrowserWndClass""),           // OE 
    TEXT(""HH Parent""),                     // Html Help
    TEXT(""MPWClass""),                      // 
    TEXT(""Outlook Express Browser Class""), // OE
    TEXT(""ATH_Note""),                      // OE?
    TEXT(""WABBrowseView""),                 // WAB
    TEXT(""Afx:400000:8:10008:0:900d6""),
    TEXT(""Media Player 2""),
    TEXT(""FrontPageExpressWindow""), 
    TEXT(""MSBLUIManager""),                 // Messenger
};

//
// CShutDownInfo
// class methods implementation
//
#define SHUTDOWN_TIMEOUT 2000 // 2 sec
#define RELAUNCH_TIMEOUT 1000 // 1 sec
CShutDownProcInfo::CShutDownProcInfo(HWND hDlg)
{
    _pProcList = NULL;
    _nAlloced = 0;
    _iProcList = 0;
    _hdlgParent = hDlg;
    _fAllShutDown = FALSE;
}

CShutDownProcInfo::~CShutDownProcInfo()
{
    if (_pProcList)
        LocalFree(_pProcList);
}


HRESULT CShutDownProcInfo::EnsureProcList()
{
    HRESULT hr = S_OK;
    if (!_pProcList)
    {
        // alloc mem for practical # of processes
        _nAlloced = ARRAYSIZE(s_arryClsNames);
        _pProcList = (PROCLIST *)LocalAlloc(LPTR, sizeof(PROCLIST)*_nAlloced);
    }
    if (!_pProcList) 
    {
        _nAlloced = 0;
        hr = E_FAIL;
    }

    return hr;
}
HRESULT CShutDownProcInfo::IncreaseProcList()
{
    HRESULT hr = S_OK;
    PROCLIST * pl = NULL;
    // realloc mem every so often
    if (_iProcList+1 > _nAlloced)
    {
        pl = (PROCLIST *)LocalReAlloc(_pProcList, sizeof(PROCLIST)*(ARRAYSIZE(s_arryClsNames)+_nAlloced), 
                                      LMEM_MOVEABLE | LMEM_ZEROINIT);
        if (pl)
        {
            _nAlloced += ARRAYSIZE(s_arryClsNames);
            _pProcList =  pl;
        }
        else
           hr = E_FAIL;
    }

    if (hr == S_OK)
        _iProcList++;

    return hr;
}
// CShutDownProcInfo::AddToProcList()
//
// synopsis: Get process info from given window handle
//           store it for shutdown procedure
//
//
//
HRESULT CShutDownProcInfo::AddToProcList(HWND hwnd)
{
    HRESULT hr = S_OK;

    hr = EnsureProcList();
    if (SUCCEEDED(hr) && hwnd)
    {
        DWORD dwPID;
        BOOL  fFoundDup = FALSE;

        GetWindowThreadProcessId(hwnd, &dwPID);
        
        // check to see if we already have the PID in the list
        for (int i=0; i < _iProcList; i++)
        {
            if (_pProcList[i].dwPID == dwPID)
            {
                fFoundDup = TRUE;
                break;
            }
        }

        // add proccess info only if we don't have it already
        if (!fFoundDup)
        {
            hr = IncreaseProcList();
            if (SUCCEEDED(hr))
            {
                int iCur = _iProcList-1;

                GetExeNameFromPID(dwPID, 
                    _pProcList[iCur].szExeName, 
                    ARRAYSIZE(_pProcList[iCur].szExeName));

                _pProcList[iCur].dwPID = dwPID;
                _pProcList[iCur].State = PS_UNKNOWN;
            }
        }
    }
    return hr;    
}

// CShutDownProcInfo::WaitForOneProcess
//
// synopsis: ensures the given process 
//           has terminated
//
//
HRESULT CShutDownProcInfo::WaitForOneProcess(int iProc)
{
    HRESULT hr = S_OK;
    if (iProc < _iProcList && _pProcList[iProc].State != PS_SHUTDOWN_OK)
    {
        DWORD dwProcessFlags = PROCESS_ALL_ACCESS | 
                               (_fNT ? SYNCHRONIZE : 0 );

        HANDLE hProc = OpenProcess(dwProcessFlags,
                                   FALSE,    
                                   _pProcList[iProc].dwPID);

        // pressume it has terminated, get it marked so
        _pProcList[iProc].State = PS_SHUTDOWN_OK;

        if (hProc) 
        {
            // if the proccess in query is still alive,
            // we'll wait with time out here
            //
            DWORD dwRet = WaitForSingleObject (hProc, SHUTDOWN_TIMEOUT);
            if (dwRet == WAIT_TIMEOUT)
            {
                _pProcList[iProc].State = PS_WAITING;
            }
            
            CloseHandle(hProc);
        }
    }
    return hr;
}

// CShutDownProcInfo::WaitForFolksShutDown
//
// synopsis: ensure the nominated processes terminate. If anyone 
//           doesn't want to terminate, wait for her retrying a couple of
//           times and note her name so we can show it to the user. 
//          
//
#define MAXSHUTDOWNTRY 10
HRESULT CShutDownProcInfo::WaitForFolksShutDown()
{
    HRESULT hr = S_OK;
    int    iTry = 0;
    do
    {
        // pressume all will be fine
        _fAllShutDown = TRUE;
        // waiting loop
        for (int i = 0; i < _iProcList; i++)
        {
            WaitForOneProcess(i);
            if (_pProcList[i].State != PS_SHUTDOWN_OK)
                _fAllShutDown = FALSE;
        }
    }
    while( !_fAllShutDown && iTry++ < MAXSHUTDOWNTRY  );
    // FEATURE: here we should put up a dialog
    //         to ask user if they want to wait
    //         for the apps 

    return hr;
}

// CShutDownProcInfo::NotifyShutDownToFolks
//
// synopsis: send POI_OFFICE_COMMAND to possible candidates on the desktop
//           if a candidate replies with valid value, save the proccess
//           information for the later restart procedure.
//
HRESULT CShutDownProcInfo::NotifyShutDownToFolks(int *pnProcess)
{
    HWND hwndShutDown, hwndAfter;
    PLUGUI_QUERY pq;
    HRESULT hr = S_OK;
    int     nProcToShutDown = 0;

    for (int i = 0; i < ARRAYSIZE(s_arryClsNames); i++)
    {
        hwndAfter = NULL; 
        while (hwndShutDown = FindWindowEx(NULL, hwndAfter, s_arryClsNames[i], NULL))
        {
            pq.uQueryVal = (UINT)SendMessage(hwndShutDown, PUI_OFFICE_COMMAND, PLUGUI_CMD_QUERY, 0);
            if (pq.uQueryVal)
            {
                if(pq.PlugUIInfo.uMajorVersion == OFFICE_VERSION_9)
                {
                    PostMessage(hwndShutDown, PUI_OFFICE_COMMAND, (WPARAM)PLUGUI_CMD_SHUTDOWN, 0);

                    // store the information about the process which this window belongs to
                    // we only need to remember non OLE processes here for re-starting.
                    if (!pq.PlugUIInfo.uOleServer)
                    {
                        AddToProcList(hwndShutDown);
                        nProcToShutDown ++;
                    }
                }
            }
            hwndAfter = hwndShutDown;
        }
    }
    if (!nProcToShutDown)
        hr = S_FALSE;

    if (pnProcess)
        *pnProcess = nProcToShutDown;

    return hr;
}

const TCHAR c_szRegAppPaths[] = TEXT(""Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\"");
HRESULT CShutDownProcInfo::GetRestartAppPath(LPTSTR szPath, int cchPath, int iProc)
{
    HRESULT hr = S_OK;
    TCHAR szAppPath[MAX_PATH];
    TCHAR szRegKey[MAX_PATH];

    ASSERT(szPath && cchPath > 0);

    if (iProc < _iProcList)
    {
        _tcscpy(szRegKey, c_szRegAppPaths);
        _tcscat(szRegKey, _pProcList[iProc].szExeName);
        
        DWORD cb = sizeof(szAppPath);
        if (ERROR_SUCCESS != SHGetValue(HKEY_LOCAL_MACHINE, szRegKey, NULL, NULL, szAppPath, &cb))
        {
            szPath[0] = TEXT('0');
            hr = E_FAIL;
        }
        else
            _tcsncpy(szPath, szAppPath, cchPath);
    }
    return hr;
}

HRESULT CShutDownProcInfo::RestartFolks()
{
    PROCESS_INFORMATION pi;
    for (int i = 0; i < _iProcList; i++)
    {
        STARTUPINFO si = {0};
        si.cb = sizeof(si);
        if (_pProcList[i].State == PS_SHUTDOWN_OK)
        {
            TCHAR szAppPath[MAX_PATH];    
            HRESULT hr = GetRestartAppPath(szAppPath, ARRAYSIZE(szAppPath), i);
            if (hr == S_OK)
            {
                BOOL fLaunchedOK = 
                CreateProcess (szAppPath,               // name of app to launch
                                NULL,                   // lpCmdLine
                                NULL,                   // lpProcessAttributes
                                NULL,                   // lpThreadAttributes
                                TRUE,                   // bInheritHandles
                                NORMAL_PRIORITY_CLASS,  // dwCreationFlags
                                NULL,                   // lpEnvironment
                                NULL,                   // lpCurrentDirectory
                                &si,                    // lpStartupInfo
                                &pi);                   // lpProcessInformation

                if (fLaunchedOK)
                { 
                    DWORD dwRet = WaitForInputIdle (pi.hProcess,
                                                    RELAUNCH_TIMEOUT);
                    CloseHandle(pi.hProcess);
                    CloseHandle(pi.hThread);
                }
            }
        }
    }
    return S_OK;
}



// 
//   CShutDownProcInfo::ShutDownThreadProc
//
//   synopsis: launched from changelang dialog so the dialog
//             wouldn't get blocked when we're waiting for our apps
//             to shutdown/restart. this is a static proc
//             so we should be able to delete the class instance
//             in this proc.
//
DWORD CALLBACK CShutDownProcInfo::ShutDownThreadProc(void *pv)
{
    CShutDownProcInfo *pspi = (CShutDownProcInfo *)pv;
    
    if (pspi)
    {
        HRESULT hr;
        int     nToShutDown;
        // send PUI_OFFICE_COMMAND to corresponding folks...
        hr = pspi->NotifyShutDownToFolks(&nToShutDown);

        // and wait until all processes shutdown
        if (SUCCEEDED(hr) && nToShutDown > 0)
        {
            hr = pspi->WaitForFolksShutDown();

            // then restart here
            if (SUCCEEDED(hr))
               pspi->RestartFolks();
        }
    
        // now the parent dialog should go away
        int iret = (nToShutDown > 0) ? 
                   RETURN_SETLANG_ENDLANGDIALOG: RETURN_SETLANG_CLOSEDNORMAL;
        
        EndDialog(pspi->_hdlgParent, iret);
    
        // delete this class instance
        delete pspi;
    }
    return 0;
}

void OpenSatelliteDownloadUrl(HWND hDlg)
{
    // get the default Url from registry
    TCHAR szSatelliteUrl[INTERNET_MAX_URL_LENGTH];

    // reg api needs size in byte
    DWORD dwType, dwcbData = sizeof(szSatelliteUrl);
    
    DWORD dwRet =  SHGetValue(HKEY_LOCAL_MACHINE, REGSTR_PATH_INTERNATIONAL, 
                             NULL, &dwType, (void *)szSatelliteUrl, &dwcbData);
    if (dwRet != ERROR_SUCCESS || !szSatelliteUrl[0])
    {
       // use the hard coded Url instead
       _tcscpy(szSatelliteUrl, s_szUrlSPK);
    }

    if(!hOLE32)
    {
        if(!_StartOLE32())
        {
            ASSERT(FALSE);
            return;
        }
    }

    HRESULT hr = pCoInitialize(NULL);
    if (SUCCEEDED(hr))
    {
        NavToUrlUsingIE(szSatelliteUrl, TRUE);
        pCoUninitialize();
    }
}

INT_PTR CALLBACK LangMsgDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    switch (uMsg)
    {
        case WM_COMMAND:
        {
            switch (GET_WM_COMMAND_ID(wParam, lParam))
            {
                case IDYES:
                case IDNO:
                case IDOK:
                case IDCANCEL:
                    EndDialog(hDlg, GET_WM_COMMAND_ID(wParam, lParam));
                    break;
            }
            return TRUE;
        }

        case WM_HELP:           // F1
            ResWinHelp( (HWND)((LPHELPINFO)lParam)->hItemHandle, IDS_HELPFILE,
                HELP_WM_HELP, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);
            break;

        case WM_CONTEXTMENU:    // right mouse click
            ResWinHelp( (HWND) wParam, IDS_HELPFILE,
                HELP_CONTEXTMENU, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);        
            break;
    }
    return FALSE;
}

BOOL ChangeLanguage(IN HWND hDlg, CUILangList *pLangList)
{
    HWND hwndCombo = GetDlgItem(hDlg, IDC_COMBO_UILANG);
    int iSel = ComboBox_GetCurSel(hwndCombo);
    INT_PTR idxSel = 0;
    int idxCur;
    
    if (iSel != CB_ERR)
        idxSel = ComboBox_GetItemData(hwndCombo, iSel);

    if ( idxSel != CB_ERR 
        && idxSel < pLangList->GetListSize())
    {
        idxCur = pLangList->GetCurrentLangIdx();

        if (idxCur != idxSel)
        {
            INT_PTR iRet = DialogBox(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG_WARNING), hDlg, LangMsgDlgProc);

            if (IDCANCEL != iRet)
            {
                pLangList->SetCurrentLangIdx((int)idxSel);

                if (IDYES == iRet)
                {
                    CShutDownProcInfo  *pspi = new CShutDownProcInfo(hDlg);
                    if (!SHCreateThread(pspi->ShutDownThreadProc, (void *)pspi, 0, NULL))
                        delete pspi;

                    // returning TRUE to indicate that we do shutdown/restart
                    return TRUE;
                }
                else
                {
                    DialogBox(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG_INFO), hDlg, LangMsgDlgProc);
                }
            }
        }
    }
    // returning FALSE to indicate that we haven't changed the language
    return FALSE;
}

//
// LangChangeDlgProc()
//
// Message handler for the ""Change Language"" subdialog.
//
INT_PTR CALLBACK LangChangeDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    CUILangList *pLangList;
    switch (uMsg)
    {
        case WM_INITDIALOG:
            CUILangList::GetLangList(GetParent(hDlg), &pLangList);
            return FillUILangListBox(hDlg, pLangList);
    
        case WM_DESTROY:
            break;

        case WM_COMMAND:
            switch(GET_WM_COMMAND_ID(wParam, lParam))
            {
                case IDC_LANG_ADDSPK:
                    // open url from resource
                    OpenSatelliteDownloadUrl(hDlg);
                    EndDialog(hDlg, RETURN_SETLANG_ENDLANGDIALOG);
                    break;
                case IDOK:
                    if(!SUCCEEDED(CUILangList::GetLangList(GetParent(hDlg), &pLangList))
                      || !ChangeLanguage(hDlg, pLangList))
                      EndDialog(hDlg, 0);

                    // EndDialog() is called in separate thread 
                    // when shutdown/restart is done
                    // 
                    break;

                case IDCANCEL:
                    EndDialog(hDlg, 0);
                    break;
            }
            break;

        case WM_HELP:           // F1
            ResWinHelp( (HWND)((LPHELPINFO)lParam)->hItemHandle, IDS_HELPFILE,
                HELP_WM_HELP, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);
            break;

        case WM_CONTEXTMENU:    // right mouse click
            ResWinHelp( (HWND) wParam, IDS_HELPFILE,
                HELP_CONTEXTMENU, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);        
            break;

        default:
            return FALSE;
    }
    return TRUE;
}

//
// LangAddDlgProc()
//
// Message handler for the ""Add Language"" subdialog.
//
INT_PTR CALLBACK LangAddDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    switch (uMsg)
    {
        case WM_INITDIALOG:
            return FillLanguageListBox(hDlg);
    
        case WM_DESTROY:
            break;

        case WM_COMMAND:
            switch(GET_WM_COMMAND_ID(wParam, lParam))
            {
                case IDOK:
                    AddLanguage(hDlg);
                    EndDialog(hDlg, 0);
                    break;

                case IDCANCEL:
                    EndDialog(hDlg, 0);
                    break;
            }
            break;

        case WM_HELP:           // F1
            ResWinHelp( (HWND)((LPHELPINFO)lParam)->hItemHandle, IDS_HELPFILE,
                HELP_WM_HELP, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);
            break;

        case WM_CONTEXTMENU:    // right mouse click
            ResWinHelp( (HWND) wParam, IDS_HELPFILE,
                HELP_CONTEXTMENU, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);        
            break;

        default:
            return FALSE;
    }
    return TRUE;
}

// put any cleanup procedures for language dialog here
void LangDlgCleanup(HWND hDlg)
{
    // also delete and remove the instance of
    // UI language list from window prop
    CUILangList::RemoveLangList(hDlg);
}
//
// LanguageDlgProc()
//
// Message handler for the ""Language Preference"" subdialog.
//
INT_PTR CALLBACK LanguageDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    CUILangList *pLangList;
    switch (uMsg)
    {
        case WM_INITDIALOG:
            return LanguageDlgInit(hDlg);
    
        case WM_DESTROY:
            LangDlgCleanup(hDlg);
            break;

        case WM_COMMAND:
            switch(GET_WM_COMMAND_ID(wParam, lParam))
            {
                HWND hwndList;
                int iIndex, iNumItems;
                INT_PTR iret;

                case IDOK:
                    SaveLanguageData(hDlg);
                    EndDialog(hDlg, 0);
                    break;

                case IDCANCEL:
                    EndDialog(hDlg, 0);
                    break;

                case IDC_LANG_ADD_BUTTON:
                    DialogBox(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG_ADD), hDlg, LangAddDlgProc);
                    break;

                case IDC_LANG_UI_PREF:
                    CUILangList::GetLangList(hDlg, &pLangList);
                    iret = KickSetLang(hDlg, pLangList);
                    if (iret == RETURN_SETLANG_ENDLANGDIALOG)
                    {
                        // we're outa job
                        EndDialog(hDlg, 0);
                    }
                    else
                    {
                        InitCurrentUILang(hDlg);
                    }
                    break;

                case IDC_LANG_REMOVE_BUTTON:
                    hwndList = GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST);
                    iIndex = ListBox_GetCurSel(hwndList);
                    ListBox_DeleteString(hwndList, iIndex);
                    iNumItems = ListBox_GetCount(hwndList);
                    if (iNumItems == iIndex)
                        iIndex--;
                    ListBox_SetCurSel(hwndList, iIndex);
                    EnableWindow(GetDlgItem(hDlg, IDC_LANG_REMOVE_BUTTON), (iNumItems > 0) && !g_restrict.fInternational);
                    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_UP_BUTTON), (iIndex > 0) && !g_restrict.fInternational);
                    EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_DOWN_BUTTON), (iIndex < iNumItems - 1) && !g_restrict.fInternational);

                    if (NULL == GetFocus()) // This prevent keyboard access disable
                        SetFocus(hwndList);
                    break;

                case IDC_LANG_ACCEPT_LIST:
                    hwndList = GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST);
                    iIndex = ListBox_GetCurSel(hwndList);
                    if (0 <= iIndex)
                    {
                        iNumItems = ListBox_GetCount(hwndList);
                        EnableWindow(GetDlgItem(hDlg, IDC_LANG_REMOVE_BUTTON), (iNumItems > 0) && !g_restrict.fInternational);
                        EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_UP_BUTTON), (iIndex > 0) && !g_restrict.fInternational);
                        EnableWindow(GetDlgItem(hDlg, IDC_LANG_MOVE_DOWN_BUTTON), (iIndex < iNumItems - 1) && !g_restrict.fInternational);
                    }
                    break;

                case IDC_LANG_MOVE_UP_BUTTON:
                    MoveUpDownListItem(hDlg, GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST), TRUE);
                    break;

                case IDC_LANG_MOVE_DOWN_BUTTON:
                    MoveUpDownListItem(hDlg, GetDlgItem(hDlg, IDC_LANG_ACCEPT_LIST), FALSE);
                    break;
            }
            break;

        case WM_HELP:           // F1
            ResWinHelp( (HWND)((LPHELPINFO)lParam)->hItemHandle, IDS_HELPFILE,
                HELP_WM_HELP, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);
            break;

        case WM_CONTEXTMENU:    // right mouse click
            ResWinHelp( (HWND) wParam, IDS_HELPFILE,
                HELP_CONTEXTMENU, (DWORD_PTR)(LPSTR)mapIDCsToIDHs);        
            break;

        default:
            return FALSE;
    }
    return TRUE;
}


//
// KickLanguageDialog
//
// synopsis : used for launching Language Preference sub dialog.
//            we need to launch the dialogbox as a separate process if inetcpl is 
//            invoked from Tools->Internet options. 
//            The reason: we shutdown every browser instances on desktop
//                        user chooses different UI language than the current,
//                        including the browser that launched inetcpl.
//
static const TCHAR  s_szRunDll32[] = TEXT(""RunDll32.exe"");
static const TCHAR  s_szKickLangDialog[] = TEXT("" inetcpl.cpl,OpenLanguageDialog"");
void KickLanguageDialog(HWND hDlg)
{
    // 1: here we want to check to see if inetcpl was launched 
    //         as a rundll32 process already, which would happen if user 
    //         clicks on it at control panel folder
    //
    //
    BOOL fLaunchedOnBrowser = FALSE;
    
    // this tells me whether we got invoked from Tools->Internet Options...
    if (g_szCurrentURL[0])
    {
        fLaunchedOnBrowser = TRUE;
    }
    
    if (fLaunchedOnBrowser)
    {
        TCHAR szCommandLine[MAX_PATH];
        TCHAR szTitle[MAX_PATH];

        HWND hwndParent = GetParent(hDlg);
        
        StrCpy(szCommandLine, s_szRunDll32);
        StrCat(szCommandLine, s_szKickLangDialog);
        
        if (GetWindowText(hwndParent, szTitle, ARRAYSIZE(szTitle)) > 0)
        {
            StrCat(szCommandLine, TEXT("" ""));
            StrCat(szCommandLine, szTitle);
        }
        
#ifdef USE_CREATE_PROCESS
        PROCESS_INFORMATION pi;
        STARTUPINFO si = {0};

        si.cb = sizeof(si);
        BOOL fLaunchedOK = 
        CreateProcess (szCommandLine,          // name of app to launch
                       NULL,                   // lpCmdLine
                       NULL,                   // lpProcessAttributes
                       NULL,                   // lpThreadAttributes
                       TRUE,                   // bInheritHandles
                       NORMAL_PRIORITY_CLASS,  // dwCreationFlags
                       NULL,                   // lpEnvironment
                       NULL,                   // lpCurrentDirectory
                       &si,                    // lpStartupInfo
                       &pi);                   // lpProcessInformation
#else
        char szAnsiPath[MAX_PATH];
        SHUnicodeToAnsi(szCommandLine, szAnsiPath, ARRAYSIZE(szAnsiPath));
        WinExec(szAnsiPath, SW_SHOWNORMAL);
#endif
    }
    else
    {
        DialogBoxParam(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG), hDlg, LanguageDlgProc, NULL);
    }
}

//
// KickSetLang
//
// synopsis : tries to find setlang.exe of Office9 first, if found it'll be kicked
//            if not, it uses our own setlang dialog.
//
//
static const TCHAR s_szOfficeInstallRoot[] = TEXT(""Software\\Microsoft\\Office\\9.0\\Common\\InstallRoot"");
static const TCHAR s_szOffice10InstallRoot[] = TEXT(""Software\\Microsoft\\Shared"");
static const TCHAR s_szPath[] = TEXT(""Path"");
static const TCHAR s_szOffice10Path[] = TEXT(""OfficeSetLangInstallLocation"");
static const TCHAR s_szSetLangExe[] = TEXT(""setlang.exe"");

INT_PTR KickSetLang(HWND hDlg, CUILangList *pLangList)
{
    BOOL fOfficeSetLangInstalled = FALSE;
    INT_PTR iret;
    
    TCHAR szSetLangPath[MAX_PATH];    
    
    //  deleting the key this way makes the key invalid for this process
    //  this way the inetcpl doesnt get bogus cached values
    SHDeleteKey(HKEY_CURRENT_USER, TEXT(""Software\\Microsoft\\Windows\\ShellNoRoam\\MUICache""));

    // try to get Office's setlang path
    if(pLangList && pLangList->IsOffice9Installed()) 
    {
        DWORD cb = sizeof(szSetLangPath);
        DWORD dwRet = SHGetValue(HKEY_LOCAL_MACHINE, s_szOffice10InstallRoot, s_szOffice10Path, NULL, szSetLangPath, &cb);

        // fall back to Office9 langpack setting if Office10 langpack setting isn't there
        if (ERROR_SUCCESS != dwRet)
        {
            cb = sizeof(szSetLangPath);            
            dwRet = SHGetValue(HKEY_LOCAL_MACHINE, s_szOfficeInstallRoot, s_szPath, NULL, szSetLangPath, &cb);
        }

        if (ERROR_SUCCESS == dwRet)
        {
            // If last character is a backslash
            if (szSetLangPath[lstrlen(szSetLangPath)-1] == TEXT('\\'))
            {
                // Then concatenate the exe name
                //
                StrCat(szSetLangPath, s_szSetLangExe);
            }
            if (PathFileExists(szSetLangPath) == TRUE)
                fOfficeSetLangInstalled = TRUE;
        }
    }
    
    if (fOfficeSetLangInstalled)
    {
        PROCESS_INFORMATION pi;
        STARTUPINFO si = {0};

        si.cb = sizeof(si);
        BOOL fLaunchedOK = CreateProcess(
                              szSetLangPath,     // name of app to launch
                                       NULL,     // lpCmdLine
                                       NULL,     // lpProcessAttributes
                                       NULL,     // lpThreadAttributes
                                       TRUE,     // bInheritHandles
                      NORMAL_PRIORITY_CLASS,     // dwCreationFlags
                                       NULL,     // lpEnvironment
                                       NULL,     // lpCurrentDirectory
                                       &si,      // lpStartupInfo
                                       &pi);     // lpProcessInformation
        // just wait a while
        if (fLaunchedOK)
        { 
            WaitForInputIdle (pi.hProcess, RELAUNCH_TIMEOUT);
            CloseHandle(pi.hProcess);
            CloseHandle(pi.hThread);
        }
        iret = RETURN_SETLANG_ENDLANGDIALOG;
    }
    else
    {
        iret = DialogBoxParam(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG_CHANGE), hDlg, LangChangeDlgProc, NULL);
    }

    return iret;
}

//
// entry point for rundll32
// NOTE: the following function was written intentionally as non-Unicode
//       mainly because we don't have Wide wrapper mechanism for rundll32
//       function on win95
//
extern void GetRestrictFlags(RESTRICT_FLAGS *pRestrict);
void CALLBACK OpenLanguageDialog(HWND hwnd, HINSTANCE hinst, LPSTR lpszCmdLine, int nCmdShow)
{
    // hinst is ignored because we set it at our LibMain()
    INITCOMMONCONTROLSEX icex;

    GetRestrictFlags(&g_restrict);
    icex.dwSize = sizeof(INITCOMMONCONTROLSEX);
    icex.dwICC  = ICC_USEREX_CLASSES|ICC_NATIVEFNTCTL_CLASS;
    InitCommonControlsEx(&icex);
    
    if (lpszCmdLine && *lpszCmdLine)
    {
        HWND hwndParent = FindWindowA(NULL, lpszCmdLine);
        if (hwndParent)
            hwnd = hwndParent;
    }
    DialogBoxParam(MLGetHinst(), MAKEINTRESOURCE(IDD_LANG), hwnd, LanguageDlgProc, NULL);
}

// MLGetUILanguage in shlwapi returns current MUI language regardless version.
// MUI architecture doesn't display string correctly when main dll and satellite
// pack versions are mismatched.
// A good example is IE version upgrade without upgrading satellite.
// So here is more clever way to get the MUI language.
//
// 1. Get MLGetUILangauge from shlwapi
// 2. Compare it with current installed language.
// 3. if those are different, try to get resource dll.
// 4. if the resource dll is not in correct path just return current installed
//    language.
// 5. Or return the langid of MLGetUILanguage.
LANGID INETCPL_GetUILanguage()
{
    HINSTANCE hMLInst;
    TCHAR szPath[MAX_PATH], szMUI[16];
    LANGID lidUI = MLGetUILanguage();

    if (IsOS(OS_WIN2000ORGREATER))
        return lidUI;

    if (lidUI != GetInstallLanguage())
    {
        hMLInst = MLGetHinst();
        if (GetModuleFileName(hMLInst, szPath, ARRAYSIZE(szPath)))
        {
            IntToHex(szMUI, 4, lidUI);
            if (StrStrI(szPath, szMUI) == NULL)
                lidUI = GetInstallLanguage();
        }
    }

    return lidUI;
}
"
DeaKwwmW,iSH 1.3.2(494) cargo\rust with Alpine Edge error,sypwex,Bash,Tuesday 31st of October 2023 11:27:16 PM CDT,"###### Scenario
echo https://dl-cdn.alpinelinux.org/alpine/edge/main > /etc/apk/repositories
echo https://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
apk update
apk upgrade
apk add cargo
 
cargo new ehlo
cd ehlo
cargo run
 
rustc --version # 1.72.1 (d5c2e9c34 2023-09-13) (Alpine Linux 1.72.1-r0)
cargo --version # 1.72.1

cargo clean
ls -al
rm Cargo.lock
ls -al
RUST_BACKTRACE=full cargo build
###########################

Welcome to Alpine!

You can install packages with: apk add <package>

You may change this message by editing /etc/motd.

localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/edge/main > /etc/apk/repositories
localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
localhost:~# apk update
fetch https://dl-cdn.alpinelinux.org/alpine/edge/main/x86/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/edge/community/x86/APKINDEX.tar.gz
v20230901-4577-gd7fdda31cc0 [https://dl-cdn.alpinelinux.org/alpine/edge/main]
v20230901-4602-g87d857c01cb [https://dl-cdn.alpinelinux.org/alpine/edge/community]
OK: 20696 distinct packages available
localhost:~# apk upgrade
Upgrading critical system libraries and apk-tools:
(1/8) Purging ssl_client (1.33.1-r6)
(2/8) Upgrading musl (1.2.2-r3 -> 1.2.4_git20230717-r3)
(3/8) Installing libcrypto3 (3.1.4-r0)
(4/8) Installing libssl3 (3.1.4-r0)
(5/8) Upgrading apk-tools (2.12.7-r0 -> 2.14.0-r5)
(6/8) Purging libretls (3.3.3p1-r2)
(7/8) Purging libssl1.1 (1.1.1l-r0)
(8/8) Purging libcrypto1.1 (1.1.1l-r0)
Executing busybox-1.33.1-r6.trigger
Continuing the upgrade transaction with new apk-tools:
(1/11) Installing alpine-baselayout-data (3.4.3-r2)
(2/11) Upgrading busybox (1.33.1-r6 -> 1.36.1-r13)
Executing busybox-1.36.1-r13.post-upgrade
(3/11) Installing busybox-binsh (1.36.1-r13)
(4/11) Upgrading alpine-baselayout (3.2.0-r16 -> 3.4.3-r2)
Executing alpine-baselayout-3.4.3-r2.pre-upgrade
Executing alpine-baselayout-3.4.3-r2.post-upgrade
(5/11) Upgrading alpine-keys (2.4-r0 -> 2.4-r1)
(6/11) Upgrading ca-certificates-bundle (20191127-r5 -> 20230506-r0)
(7/11) Installing ssl_client (1.36.1-r13)
(8/11) Upgrading zlib (1.2.11-r3 -> 1.3-r2)
(9/11) Upgrading scanelf (1.3.2-r0 -> 1.3.7-r2)
(10/11) Upgrading musl-utils (1.2.2-r3 -> 1.2.4_git20230717-r3)
(11/11) Upgrading libc-utils (0.7.2-r3 -> 0.7.2-r5)
Executing busybox-1.36.1-r13.trigger
OK: 6 MiB in 15 packages
localhost:~# apk add cargo
(1/27) Installing libgcc (13.2.1_git20231014-r0)
(2/27) Installing jansson (2.14-r4)
(3/27) Installing libstdc++ (13.2.1_git20231014-r0)
(4/27) Installing zstd-libs (1.5.5-r7)
(5/27) Installing binutils (2.41-r0)
(6/27) Installing libgomp (13.2.1_git20231014-r0)
(7/27) Installing libatomic (13.2.1_git20231014-r0)
(8/27) Installing gmp (6.3.0-r0)
(9/27) Installing isl26 (0.26-r1)
(10/27) Installing mpfr4 (4.2.1-r0)
(11/27) Installing mpc1 (1.3.1-r1)
(12/27) Installing gcc (13.2.1_git20231014-r0)
(13/27) Installing musl-dev (1.2.4_git20230717-r3)
(14/27) Installing libffi (3.4.4-r3)
(15/27) Installing xz-libs (5.4.4-r0)
(16/27) Installing libxml2 (2.11.5-r0)
(17/27) Installing llvm16-libs (16.0.6-r7)
(18/27) Installing scudo-malloc (17.0.3-r0)
(19/27) Installing rust (1.72.1-r0)
(20/27) Installing ca-certificates (20230506-r0)
(21/27) Installing brotli-libs (1.1.0-r0)
(22/27) Installing c-ares (1.20.1-r0)
(23/27) Installing libunistring (1.1-r2)
(24/27) Installing libidn2 (2.3.4-r4)
(25/27) Installing nghttp2-libs (1.57.0-r0)
(26/27) Installing libcurl (8.4.0-r0)
(27/27) Installing cargo (1.72.1-r0)
Executing busybox-1.36.1-r13.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 912 MiB in 42 packages
localhost:~#  
localhost:~# cargo new ehlo
     Created binary (application) `ehlo` package
localhost:~# cd ehlo
localhost:~/ehlo# cargo run
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
localhost:~/ehlo#  
localhost:~/ehlo# rustc --version
rustc 1.72.1 (d5c2e9c34 2023-09-13) (Alpine Linux 1.72.1-r0)
localhost:~/ehlo# cargo --version
cargo 1.72.1
localhost:~/ehlo#  
localhost:~/ehlo# cargo clean
localhost:~/ehlo# ls -al
total 12
drwxr-xr-x    4 root     root           224 Nov  1 04:22 .
drwx------    4 root     root           160 Nov  1 04:22 ..
drwxr-xr-x    6 root     root           288 Nov  1 04:22 .git
-rw-r--r--    1 root     root             8 Nov  1 04:22 .gitignore
-rw-r--r--    1 root     root           148 Nov  1 04:22 Cargo.lock
-rw-r--r--    1 root     root           173 Nov  1 04:22 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 04:22 src
localhost:~/ehlo# rm Cargo.lock
localhost:~/ehlo# ls -al
total 8
drwxr-xr-x    4 root     root           192 Nov  1 04:22 .
drwx------    4 root     root           160 Nov  1 04:22 ..
drwxr-xr-x    6 root     root           288 Nov  1 04:22 .git
-rw-r--r--    1 root     root             8 Nov  1 04:22 .gitignore
-rw-r--r--    1 root     root           173 Nov  1 04:22 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 04:22 src
localhost:~/ehlo# RUST_BACKTRACE=full cargo build
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
stack backtrace:
   0: 0x5709afd0 - <unknown>
   1: 0x570cc84c - <unknown>
   2: 0x57094e96 - <unknown>
   3: 0x5709ae16 - <unknown>
   4: 0x5709ca5c - <unknown>
   5: 0x5709c80d - <unknown>
   6: 0x5709d042 - <unknown>
   7: 0x5709cf3b - <unknown>
   8: 0x5709b426 - <unknown>
   9: 0x5709cc33 - <unknown>
  10: 0x565e1d50 - <unknown>
  11: 0x565e1d02 - <unknown>
  12: 0x568ec031 - <unknown>
  13: 0x568bcffe - <unknown>
  14: 0x569e5371 - <unknown>
  15: 0x569e507c - <unknown>
  16: 0x5662d09a - <unknown>
  17: 0x566172b0 - <unknown>
  18: 0x56612ff1 - <unknown>
  19: 0x5664176f - <unknown>
  20: 0x565f9153 - <unknown>
  21: 0x565ffa6b - <unknown>
  22: 0x5708acde - <unknown>
  23: 0x5664884a - <unknown>
  24: 0xf7f74fdf - <unknown>
localhost:~/ehlo# "
yqmm9Xjr,Line/Circle Collision/Response,Dr_Davenstein,FreeBasic,Tuesday 31st of October 2023 11:12:45 PM CDT,"#include ""fbgfx.bi"" 

const as integer scr_w = 800, scr_h = 600

screenres scr_w, scr_h,32,,FB.GFX_HIGH_PRIORITY

type vec2f 
    x as single 
    y as single 
end type 


declare function vec2f_perp( byref a as vec2f, b as vec2f ) as vec2f
declare function cPointline( byref va as vec2f, byref vb as vec2f, byref vPoint as vec2f ) as vec2f 
declare sub vec2f_normalize( byref v as vec2f ) 
declare function vec2f_len( byref v as vec2f ) as single 
declare function vec2f_dot( byref a as vec2f, byref b as vec2f ) as single 
declare function vec2f_dist( byref va as vec2f, byref vb as vec2f ) as single 

dim as vec2f Pl, Pld, Cent, Ero
dim as single Radius, tDist
dim as double deltaTime = timer, curTime = timer
dim as integer i, ip1, Num_Verts

pl = type(scr_w\2, scr_h\2)
Radius = 32

read Num_Verts
dim Lines(Num_Verts) as vec2f

for i = 0 to ubound(Lines)
    read Lines(i).X, Lines(i).Y
next



curTime = timer
do 
    
    deltaTime = timer-curTime
    curTime = timer
    
    var moveSpeed = 350*deltaTime
    
    if multikey(FB.SC_LEFT) then PlD.X -= moveSpeed  
    if multikey(FB.SC_RIGHT) then PlD.X +=  moveSpeed 
    if multikey(FB.SC_UP) then PlD.Y -=  moveSpeed 
    if multikey(FB.SC_DOWN) then PlD.Y +=  moveSpeed    
    
    PlD.X += (-PlD.X*.95)*deltaTime 
    PlD.Y += (-PlD.Y*.95)*deltaTime 
    
    Pl.X+=PlD.X*deltaTime 
    Pl.Y+=PlD.Y*deltaTime 
    
    screenlock

    line(0,0)-(scr_w-1, scr_h-1),0,bf
    
    for i=0 to ubound(Lines)-1 step 2 
        ip1 = i+1 
        Cent = vec2f_perp( Lines(i), Lines(ip1) )
        Ero = cPointline( Lines(i), Lines(ip1), PL )
        tDist = vec2f_Dist( Pl, Ero ) 
        
        if tDist<Radius then 
            Pl.X+=Cent.X*(Radius-tDist) 
            Pl.Y+=Cent.Y*(Radius-tDist) 
        end if 
        
        line(Lines(i).X, Lines(i).Y)-(Lines(ip1).X, Lines(ip1).Y),&hffffff00 
        line(Ero.X, Ero.Y)-(Ero.X + (Cent.X*Radius), Ero.Y + (Cent.Y*Radius)),&hffffffff
    next 
    
    
    circle (Pl.X,Pl.Y),Radius, &hffffff00
    pset (Pl.X,Pl.Y), &hffffff00 
    screensync
    screenunlock
    
    sleep 30,1
    
loop until multikey(FB.SC_ESCAPE)



function cPointline( byref va as vec2f, byref vb as vec2f, byref vPoint as vec2f ) as vec2f 
    
    dim as vec2f tVector1
    dim as vec2f tVector2
    dim as vec2f vReturn
    dim as single d
    dim as single t
    
    tVector1.X = VPoint.X - Va.X 
    tVector1.Y = VPoint.Y - Va.Y 
    
    tVector2.X = Vb.X - Va.X 
    tVector2.Y = Vb.Y - Va.Y 
    
    vec2f_normalize( tVector2 )
    
    d = vec2f_dist( vA, vB ) 
    t = vec2f_dot( tVector2, tVector1 ) 
    
    if t<=0 then return Va 
    
    if t>=d then return Vb 
    
    vReturn.X = Va.X + (tVector2.X * t) 
    vReturn.Y = Va.Y + (tVector2.Y * t)
    
    return vReturn
    
end function 


function vec2f_dist( byref va as vec2f, byref vb as vec2f ) as single 
    
    dim as single dx
    dim as single dy
    
    dx = va.X - vb.X 
    dy = va.Y - vb.Y
    
    return sqr(dx^2+dy^2) 
    
end function 


sub vec2f_normalize( byref v as vec2f )
    
    dim as single vLen
    
    vLen = vec2f_len ( v ) 
    
    v.x /= vLen 
    v.y /= vLen 
    
end sub 


function vec2f_len( byref v as vec2f ) as single 
    
    dim as single tLen
    
    tLen = sqr(v.x^2 + v.y^2) 
    
    if tLen = 0 then tLen = 1
    
    return tLen
    
end function 


function vec2f_dot( byref a as vec2f, byref b as vec2f ) as single 
    
    return a.x*b.x + a.y*b.y 
    
end function 


function vec2f_perp( byref a as vec2f, byref b as vec2f ) as vec2f
    
    dim as single vLen
    dim as vec2f d
    
    d.x = b.x - a.x 
    d.y = b.y - a.y 
    
    vLen = vec2f_len( d )
    
    return type( d.y  / vLen, -d.x / vLen )
    
end function



data 21 

data 50,70 
data 10,240 

data 10,240 
data 100,340 

data 100,340 
data 125,400 

data 125,400 
data 300,450 

data 300,450 
data 450,470 

data 450,470 
data 600,370 

data 600,370 
data 550,300 

data 550,300 
data 625,250 

data 625,250 
data 500,10 

data 500,10 
data 320,50 

data 320,50 
data 50,70 "
kbx6c6Hx,iSH 1.3.2(494) cargo\rust with Alpine 3.19 error,sypwex,Bash,Tuesday 31st of October 2023 11:07:45 PM CDT,"###### Scenario
echo https://dl-cdn.alpinelinux.org/alpine/v3.19/main > /etc/apk/repositories
echo https://dl-cdn.alpinelinux.org/alpine/v3.19/community >> /etc/apk/repositories
apk update
apk upgrade
apk add cargo
 
cargo new ehlo
cd ehlo
cargo run
 
rustc --version # 1.72.1 (d5c2e9c34 2023-09-13) (Alpine Linux 1.72.1-r0)
cargo --version # 1.72.1

cargo clean
ls -al
rm Cargo.lock
ls -al
RUST_BACKTRACE=full cargo build
############################

Welcome to Alpine!

You can install packages with: apk add <package>

You may change this message by editing /etc/motd.

localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.19/main > /etc/apk/repositories
localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.19/community >> /etc/apk/repositories
localhost:~# apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86/APKINDEX.tar.gz
v20230901-4555-g18d074cb787 [https://dl-cdn.alpinelinux.org/alpine/v3.19/main]
community v20230901-3812-g6f8c66fa616 [https://dl-cdn.alpinelinux.org/alpine/v3.19/community]
OK: 5956 distinct packages available
localhost:~# apk upgrade
Upgrading critical system libraries and apk-tools:
(1/8) Purging ssl_client (1.33.1-r6)
(2/8) Upgrading musl (1.2.2-r3 -> 1.2.4_git20230717-r3)
(3/8) Installing libcrypto3 (3.1.4-r0)
(4/8) Installing libssl3 (3.1.4-r0)
(5/8) Upgrading apk-tools (2.12.7-r0 -> 2.14.0-r5)
(6/8) Purging libretls (3.3.3p1-r2)
(7/8) Purging libssl1.1 (1.1.1l-r0)
(8/8) Purging libcrypto1.1 (1.1.1l-r0)
Executing busybox-1.33.1-r6.trigger
Continuing the upgrade transaction with new apk-tools:
(1/11) Installing alpine-baselayout-data (3.4.3-r2)
(2/11) Upgrading busybox (1.33.1-r6 -> 1.36.1-r13)
Executing busybox-1.36.1-r13.post-upgrade
(3/11) Installing busybox-binsh (1.36.1-r13)
(4/11) Upgrading alpine-baselayout (3.2.0-r16 -> 3.4.3-r2)
Executing alpine-baselayout-3.4.3-r2.pre-upgrade
Executing alpine-baselayout-3.4.3-r2.post-upgrade
(5/11) Upgrading alpine-keys (2.4-r0 -> 2.4-r1)
(6/11) Upgrading ca-certificates-bundle (20191127-r5 -> 20230506-r0)
(7/11) Installing ssl_client (1.36.1-r13)
(8/11) Upgrading zlib (1.2.11-r3 -> 1.3-r2)
(9/11) Upgrading scanelf (1.3.2-r0 -> 1.3.7-r2)
(10/11) Upgrading musl-utils (1.2.2-r3 -> 1.2.4_git20230717-r3)
(11/11) Upgrading libc-utils (0.7.2-r3 -> 0.7.2-r5)
Executing busybox-1.36.1-r13.trigger
OK: 6 MiB in 15 packages
localhost:~# apk add cargo
(1/27) Installing libgcc (13.2.1_git20231014-r0)
(2/27) Installing jansson (2.14-r4)
(3/27) Installing libstdc++ (13.2.1_git20231014-r0)
(4/27) Installing zstd-libs (1.5.5-r7)
(5/27) Installing binutils (2.41-r0)
(6/27) Installing libgomp (13.2.1_git20231014-r0)
(7/27) Installing libatomic (13.2.1_git20231014-r0)
(8/27) Installing gmp (6.3.0-r0)
(9/27) Installing isl26 (0.26-r1)
(10/27) Installing mpfr4 (4.2.1-r0)
(11/27) Installing mpc1 (1.3.1-r1)
(12/27) Installing gcc (13.2.1_git20231014-r0)
(13/27) Installing musl-dev (1.2.4_git20230717-r3)
(14/27) Installing libffi (3.4.4-r3)
(15/27) Installing xz-libs (5.4.4-r0)
(16/27) Installing libxml2 (2.11.5-r0)
(17/27) Installing llvm16-libs (16.0.6-r7)
(18/27) Installing scudo-malloc (17.0.3-r0)
(19/27) Installing rust (1.72.1-r0)
(20/27) Installing ca-certificates (20230506-r0)
(21/27) Installing brotli-libs (1.1.0-r0)
(22/27) Installing c-ares (1.20.1-r0)
(23/27) Installing libunistring (1.1-r2)
(24/27) Installing libidn2 (2.3.4-r4)
(25/27) Installing nghttp2-libs (1.57.0-r0)
(26/27) Installing libcurl (8.4.0-r0)
(27/27) Installing cargo (1.72.1-r0)
Executing busybox-1.36.1-r13.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 912 MiB in 42 packages
localhost:~# 

localhost:~# cargo new ehlo
     Created binary (application) `ehlo` package
localhost:~# cd ehlo
localhost:~/ehlo# cargo run
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
localhost:~/ehlo# 
localhost:~/ehlo# rustc --version 
rustc 1.72.1 (d5c2e9c34 2023-09-13) (Alpine Linux 1.72.1-r0)
localhost:~/ehlo# cargo --version
cargo 1.72.1
localhost:~/ehlo# cargo clean
localhost:~/ehlo# ls -al
total 12
drwxr-xr-x    4 root     root           224 Nov  1 03:52 .
drwx------    4 root     root           160 Nov  1 03:52 ..
drwxr-xr-x    6 root     root           288 Nov  1 03:52 .git
-rw-r--r--    1 root     root             8 Nov  1 03:52 .gitignore
-rw-r--r--    1 root     root           148 Nov  1 03:52 Cargo.lock
-rw-r--r--    1 root     root           173 Nov  1 03:52 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 03:52 src
localhost:~/ehlo# rm Cargo.lock
localhost:~/ehlo# ls -al
total 8
drwxr-xr-x    4 root     root           192 Nov  1 03:53 .
drwx------    4 root     root           160 Nov  1 03:52 ..
drwxr-xr-x    6 root     root           288 Nov  1 03:52 .git
-rw-r--r--    1 root     root             8 Nov  1 03:52 .gitignore
-rw-r--r--    1 root     root           173 Nov  1 03:52 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 03:52 src
localhost:~/ehlo# RUST_BACKTRACE=full cargo build
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
stack backtrace:
   0: 0x5709afd0 - <unknown>
   1: 0x570cc84c - <unknown>
   2: 0x57094e96 - <unknown>
   3: 0x5709ae16 - <unknown>
   4: 0x5709ca5c - <unknown>
   5: 0x5709c80d - <unknown>
   6: 0x5709d042 - <unknown>
   7: 0x5709cf3b - <unknown>
   8: 0x5709b426 - <unknown>
   9: 0x5709cc33 - <unknown>
  10: 0x565e1d50 - <unknown>
  11: 0x565e1d02 - <unknown>
  12: 0x568ec031 - <unknown>
  13: 0x568bcffe - <unknown>
  14: 0x569e5371 - <unknown>
  15: 0x569e507c - <unknown>
  16: 0x5662d09a - <unknown>
  17: 0x566172b0 - <unknown>
  18: 0x56612ff1 - <unknown>
  19: 0x5664176f - <unknown>
  20: 0x565f9153 - <unknown>
  21: 0x565ffa6b - <unknown>
  22: 0x5708acde - <unknown>
  23: 0x5664884a - <unknown>
  24: 0xf7f74fdf - <unknown>
localhost:~/ehlo# "
XsFzzKuf,iSH 1.3.2(494) cargo\rust with Alpine 3.18 error,sypwex,Bash,Tuesday 31st of October 2023 10:45:27 PM CDT,"###### Scenario
echo https://dl-cdn.alpinelinux.org/alpine/v3.18/main > /etc/apk/repositories
echo https://dl-cdn.alpinelinux.org/alpine/v3.18/community >> /etc/apk/repositories
apk update
apk upgrade
apk add cargo
 
cargo new ehlo
cd ehlo
cargo run
 
rustc --version # 1.71.1 (eb26296b5 2023-08-03) (Alpine Linux)
cargo --version # 1.71.1
##################################

Welcome to Alpine!

You can install packages with: apk add <package>

You may change this message by editing /etc/motd.

localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.18/main > /etc/apk/repositories
localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.18/community >> /etc/apk/repositories
localhost:~# apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86/APKINDEX.tar.gz
v3.18.4-129-gdb5b5ce6661 [https://dl-cdn.alpinelinux.org/alpine/v3.18/main]
v3.18.4-138-g7257e689a56 [https://dl-cdn.alpinelinux.org/alpine/v3.18/community]
OK: 19339 distinct packages available
localhost:~# apk upgrade
Upgrading critical system libraries and apk-tools:
(1/8) Purging ssl_client (1.33.1-r6)
(2/8) Upgrading musl (1.2.2-r3 -> 1.2.4-r2)
(3/8) Installing libcrypto3 (3.1.4-r0)
(4/8) Installing libssl3 (3.1.4-r0)
(5/8) Upgrading apk-tools (2.12.7-r0 -> 2.14.0-r2)
(6/8) Purging libretls (3.3.3p1-r2)
(7/8) Purging libssl1.1 (1.1.1l-r0)
(8/8) Purging libcrypto1.1 (1.1.1l-r0)
Executing busybox-1.33.1-r6.trigger
Continuing the upgrade transaction with new apk-tools:
(1/11) Installing alpine-baselayout-data (3.4.3-r1)
(2/11) Upgrading busybox (1.33.1-r6 -> 1.36.1-r4)
Executing busybox-1.36.1-r4.post-upgrade
(3/11) Installing busybox-binsh (1.36.1-r4)
(4/11) Upgrading alpine-baselayout (3.2.0-r16 -> 3.4.3-r1)
Executing alpine-baselayout-3.4.3-r1.pre-upgrade
Executing alpine-baselayout-3.4.3-r1.post-upgrade
(5/11) Upgrading alpine-keys (2.4-r0 -> 2.4-r1)
(6/11) Upgrading ca-certificates-bundle (20191127-r5 -> 20230506-r0)
(7/11) Installing ssl_client (1.36.1-r4)
(8/11) Upgrading zlib (1.2.11-r3 -> 1.2.13-r1)
(9/11) Upgrading scanelf (1.3.2-r0 -> 1.3.7-r1)
(10/11) Upgrading musl-utils (1.2.2-r3 -> 1.2.4-r2)
(11/11) Upgrading libc-utils (0.7.2-r3 -> 0.7.2-r5)
Executing busybox-1.36.1-r4.trigger
OK: 6 MiB in 15 packages
localhost:~# apk add cargo
(1/24) Installing libgcc (12.2.1_git20220924-r10)
(2/24) Installing libstdc++ (12.2.1_git20220924-r10)
(3/24) Installing zstd-libs (1.5.5-r4)
(4/24) Installing binutils (2.40-r7)
(5/24) Installing libgomp (12.2.1_git20220924-r10)
(6/24) Installing libatomic (12.2.1_git20220924-r10)
(7/24) Installing gmp (6.2.1-r3)
(8/24) Installing isl26 (0.26-r1)
(9/24) Installing mpfr4 (4.2.0_p12-r0)
(10/24) Installing mpc1 (1.3.1-r1)
(11/24) Installing gcc (12.2.1_git20220924-r10)
(12/24) Installing musl-dev (1.2.4-r2)
(13/24) Installing libffi (3.4.4-r2)
(14/24) Installing xz-libs (5.4.3-r0)
(15/24) Installing libxml2 (2.11.4-r0)
(16/24) Installing llvm16-libs (16.0.6-r1)
(17/24) Installing rust (1.71.1-r0)
(18/24) Installing ca-certificates (20230506-r0)
(19/24) Installing brotli-libs (1.0.9-r14)
(20/24) Installing libunistring (1.1-r1)
(21/24) Installing libidn2 (2.3.4-r1)
(22/24) Installing nghttp2-libs (1.57.0-r0)
(23/24) Installing libcurl (8.4.0-r0)
(24/24) Installing cargo (1.71.1-r0)
Executing busybox-1.36.1-r4.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 890 MiB in 39 packages
localhost:~# 
localhost:~# 
localhost:~# cargo new ehlo
     Created binary (application) `ehlo` package
localhost:~# cd ehlo
localhost:~/ehlo# cargo run
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
localhost:~/ehlo# 
localhost:~/ehlo# rust --version
-ash: rust: not found
localhost:~/ehlo# cargo --version
cargo 1.71.1
localhost:~/ehlo# rustc --version
rustc 1.71.1 (eb26296b5 2023-08-03) (Alpine Linux)
localhost:~/ehlo# RUST_BACKTRACE=1 cargo build
error: failed to parse lock file at: /root/ehlo/Cargo.lock

Caused by:
  lock file version `2` was found, but this version of Cargo does not understand this lock file, perhaps Cargo needs to be updated?
localhost:~/ehlo# cargo clean
localhost:~/ehlo# RUST_BACKTRACE=1 cargo build
error: failed to parse lock file at: /root/ehlo/Cargo.lock

Caused by:
  lock file version `2` was found, but this version of Cargo does not understand this lock file, perhaps Cargo needs to be updated?
localhost:~/ehlo# cargo clean
llocalhost:~/ehlo# ls -al
total 12
drwxr-xr-x    4 root     root           224 Nov  1 03:28 .
drwx------    4 root     root           160 Nov  1 03:22 ..
drwxr-xr-x    6 root     root           288 Nov  1 03:22 .git
-rw-r--r--    1 root     root             8 Nov  1 03:22 .gitignore
-rw-r--r--    1 root     root           148 Nov  1 03:22 Cargo.lock
-rw-r--r--    1 root     root           173 Nov  1 03:22 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 03:22 src

localhost:~/ehlo# rm Cargo.lock 
localhost:~/ehlo# RUST_BACKTRACE=1 cargo build
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
stack backtrace:
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
localhost:~/ehlo# ls -al
total 12
drwxr-xr-x    5 root     root           256 Nov  1 03:29 .
drwx------    4 root     root           160 Nov  1 03:22 ..
drwxr-xr-x    6 root     root           288 Nov  1 03:22 .git
-rw-r--r--    1 root     root             8 Nov  1 03:22 .gitignore
-rw-r--r--    1 root     root           148 Nov  1 03:29 Cargo.lock
-rw-r--r--    1 root     root           173 Nov  1 03:22 Cargo.toml
drwxr-xr-x    2 root     root            96 Nov  1 03:22 src
drwxr-xr-x    3 root     root           160 Nov  1 03:29 target
localhost:~/ehlo# cargo clean
localhost:~/ehlo# rm Cargo.lock 
localhost:~/ehlo# RUST_BACKTRACE=full cargo build
thread 'main' panicked at 'no entry found for key', src/cargo/util/dependency_queue.rs:109:58
stack backtrace:
   0: 0x56f6ba60 - <unknown>
   1: 0x56f9954c - <unknown>
   2: 0x56f65aeb - <unknown>
   3: 0x56f6b8a6 - <unknown>
   4: 0x56f6d47c - <unknown>
   5: 0x56f6d239 - <unknown>
   6: 0x56f6da59 - <unknown>
   7: 0x56f6d95b - <unknown>
   8: 0x56f6be86 - <unknown>
   9: 0x56f6d653 - <unknown>
  10: 0x565c8cd0 - <unknown>
  11: 0x565c8c82 - <unknown>
  12: 0x568c1761 - <unknown>
  13: 0x56891e94 - <unknown>
  14: 0x569b7b21 - <unknown>
  15: 0x569b782c - <unknown>
  16: 0x566133ea - <unknown>
  17: 0x565fdfc5 - <unknown>
  18: 0x565fa2aa - <unknown>
  19: 0x56626f7f - <unknown>
  20: 0x565e0ce3 - <unknown>
  21: 0x565e717b - <unknown>
  22: 0x56f5ba6e - <unknown>
  23: 0x5662e01a - <unknown>
  24: 0xf7f7a454 - <unknown>
localhost:~/ehlo# "
cULsfjmN,shaftElevatorBottom,Lanzr,Lua,Tuesday 31st of October 2023 10:27:01 PM CDT,"local modem = peripheral.find(""modem"")
if (modem == nil) then
    print(""no modem link"")
    return
end
modem.open(1)

local function sendToTop()
    modem.transmit(0, 1, ""take change"") 
end

local function redstoneCheck() 
while true do
    os.pullEvent(""redstone"")
    printf(""redstone"")
    switch()
end
end

redstoneCheck()
"
d4jtTeyg,shaftElevatorTop,Lanzr,Lua,Tuesday 31st of October 2023 10:22:08 PM CDT,"local modem = peripheral.find(""modem"")
if (modem == nil) then
    print(""no modem link"")
    return
end
modem.open(0)

local upState = false
local function switch()
    redstone.setOutput(""top"",upState)
    upState = ~upState
end

local function redstoneCheck() 
while true do
    os.pullEvent(""redstone"")
    printf(""redstone"")
    switch()
end
end

local function modemcheck()
while true do
    local event, modemSide, senderChannel, 
        replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
    switch()
    printf(""modem"")
end
end

parallel.waitForAny(redstoneCheck,modemcheck)
"
mE2zhN7B,iSH 1.3.2(494) cargo\rust with Alpine 3.17 error,sypwex,Bash,Tuesday 31st of October 2023 10:15:01 PM CDT,"###### Scenario
echo https://dl-cdn.alpinelinux.org/alpine/v3.17/main > /etc/apk/repositories
echo https://dl-cdn.alpinelinux.org/alpine/v3.17/community >> /etc/apk/repositories
apk update
apk upgrade
apk add cargo

cargo new ehlo
cd ehlo
cargo run

rustc --version # 1.64
cargo --version # 1.64
############################


Welcome to Alpine!

You can install packages with: apk add <package>

You may change this message by editing /etc/motd.

localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.17/main > /etc/apk/repositories
localhost:~# echo https://dl-cdn.alpinelinux.org/alpine/v3.17/community >> /etc/apk/repositories
localhost:~# apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86/APKINDEX.tar.gz
v3.17.5-144-g9271183f7c5 [https://dl-cdn.alpinelinux.org/alpine/v3.17/main]
v3.17.5-145-g123509d97de [https://dl-cdn.alpinelinux.org/alpine/v3.17/community]
OK: 17265 distinct packages available
localhost:~# apk upgrade
Upgrading critical system libraries and apk-tools:
(1/7) Purging ssl_client (1.33.1-r6)
(2/7) Installing libcrypto3 (3.0.12-r0)
(3/7) Installing libssl3 (3.0.12-r0)
(4/7) Upgrading apk-tools (2.12.7-r0 -> 2.12.10-r1)
(5/7) Purging libretls (3.3.3p1-r2)
(6/7) Purging libssl1.1 (1.1.1l-r0)
(7/7) Purging libcrypto1.1 (1.1.1l-r0)
Executing busybox-1.33.1-r6.trigger
Continuing the upgrade transaction with new apk-tools:
(1/11) Installing alpine-baselayout-data (3.4.0-r0)
(2/11) Upgrading musl (1.2.2-r3 -> 1.2.3-r5)
(3/11) Upgrading busybox (1.33.1-r6 -> 1.35.0-r29)
Executing busybox-1.35.0-r29.post-upgrade
(4/11) Installing busybox-binsh (1.35.0-r29)
(5/11) Upgrading alpine-baselayout (3.2.0-r16 -> 3.4.0-r0)
Executing alpine-baselayout-3.4.0-r0.pre-upgrade
Executing alpine-baselayout-3.4.0-r0.post-upgrade
(6/11) Upgrading alpine-keys (2.4-r0 -> 2.4-r1)
(7/11) Upgrading ca-certificates-bundle (20191127-r5 -> 20230506-r0)
(8/11) Installing ssl_client (1.35.0-r29)
(9/11) Upgrading zlib (1.2.11-r3 -> 1.2.13-r0)
(10/11) Upgrading scanelf (1.3.2-r0 -> 1.3.5-r1)
(11/11) Upgrading musl-utils (1.2.2-r3 -> 1.2.3-r5)
Executing busybox-1.35.0-r29.trigger
OK: 7 MiB in 15 packages
localhost:~# apk add cargo
(1/23) Installing rust-stdlib (1.64.0-r2)
(2/23) Installing libgcc (12.2.1_git20220924-r4)
(3/23) Installing libstdc++ (12.2.1_git20220924-r4)
(4/23) Installing binutils (2.39-r2)
(5/23) Installing libgomp (12.2.1_git20220924-r4)
(6/23) Installing libatomic (12.2.1_git20220924-r4)
(7/23) Installing gmp (6.2.1-r2)
(8/23) Installing isl25 (0.25-r1)
(9/23) Installing mpfr4 (4.1.0-r0)
(10/23) Installing mpc1 (1.2.1-r1)
(11/23) Installing gcc (12.2.1_git20220924-r4)
(12/23) Installing musl-dev (1.2.3-r5)
(13/23) Installing libffi (3.4.4-r0)
(14/23) Installing xz-libs (5.2.9-r0)
(15/23) Installing libxml2 (2.10.4-r0)
(16/23) Installing zstd-libs (1.5.5-r0)
(17/23) Installing llvm15-libs (15.0.7-r0)
(18/23) Installing rust (1.64.0-r2)
(19/23) Installing ca-certificates (20230506-r0)
(20/23) Installing brotli-libs (1.0.9-r9)
(21/23) Installing nghttp2-libs (1.51.0-r2)
(22/23) Installing libcurl (8.4.0-r0)
(23/23) Installing cargo (1.64.0-r2)
Executing busybox-1.35.0-r29.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 924 MiB in 38 packages
localhost:~# 
localhost:~# cargo new ehlo
Created binary (application) `ehlo` package
localhost:~# cd ehlo
localhost:~/ehlo# cargo run
Compiling ehlo v0.1.0 (/root/ehlo)
error: could not compile `ehlo`

Caused by:
  process didn't exit successfully: `rustc --crate-name ehlo --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C metadata=e5435835a3580f83 -C extra-filename=-e5435835a3580f83 --out-dir /root/ehlo/target/debug/deps -C incremental=/root/ehlo/target/debug/incremental -L dependency=/root/ehlo/target/debug/deps` (signal: 11, SIGSEGV: invalid memory reference)
localhost:~/ehlo# rustc --version
rustc 1.64.0
localhost:~/ehlo# cargo --version
cargo 1.64.0"
S1erMWq3,RUNNER.ini,Najeebsk,INI file,Tuesday 31st of October 2023 10:11:56 PM CDT,"[ShortCuts]
ShortcutName1 = Startup
ShortcutPath1 = C:\Users\Najeeb\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
ShortcutName2 = Prefetch
ShortcutPath2 = C:\Windows\Prefetch
ShortcutName3 = Temp
ShortcutPath3 = C:\Users\Najeeb\AppData\Local\Temp
ShortcutName4 = Temp-Win
ShortcutPath4 = C:\Windows\Temp
ShortcutName5 = EmptyRecycleBin
ShortcutPath5 = C:\Users\Najeeb\Desktop\NAJEEBSK\EmptyRecycle.exe
ShortcutName6 = ALPHABET-LEETER
ShortcutPath6 = F:\PORTABLE\ALPHABET-UP-LOW\ALPHABET-LEETER.exe
ShortcutName7 = Everything
ShortcutPath7 = F:\PORTABLE\Everything\Everything.exe
ShortcutName8 = Anti-MalwareBytes
ShortcutPath8 = C:\Program Files\Malwarebytes\Anti-Malware\mbam.exe
ShortcutName9 = Notepad++
ShortcutPath9 = F:\PORTABLE\Notepad++\notepad++.exe
ShortcutName10 = ResourceHacker
ShortcutPath10 = F:\CMDER\Soft\ResourceHacker.exe
ShortcutName11 = RUN2
ShortcutPath11 = F:\CMDER\APP\RUN2.exe
ShortcutName12 = Telegram
ShortcutPath12 = F:\PORTABLE\Telegram Desktop\Telegram.exe
ShortcutName13 = IpTvPlayer
ShortcutPath13 = F:\PORTABLE\IP-TV Player\IpTvPlayer.exe
ShortcutName14 = Stalker_Player
ShortcutPath14 = F:\PORTABLE\stalker portal player v7.1\stalker_player.exe
ShortcutName15 = WindowsIPTVPlayer
ShortcutPath15 = F:\PORTABLE\Xtream Codes LTD\Windows IPTV Player\WindowsIPTVPlayer.exe
ShortcutName16 = Bulk Rename Utility
ShortcutPath16 = F:\CMDER\Soft\Bulk Rename Utility.exe
ShortcutName17 =SEARCH-D 
ShortcutPath17 = D:\SEEK.exe
ShortcutName18 = SEARCH-E
ShortcutPath18 = E:\SEEK.exe
ShortcutName19 = SEARCH-F
ShortcutPath19 = F:\SEEK.exe
ShortcutName20 = SEARCH-G
ShortcutPath20 = G:\SEEK.exe
ShortcutName21 = OPEN-Z
ShortcutPath21 = F:\MOUNT-VHD.exe
ShortcutName22 = CLOSE-Z
ShortcutPath22 = F:\UNMOUNT-VHD.exe
ShortcutName23 = SEARCH-Z
ShortcutPath23 = Z:\SEEK.exe
ShortcutName24 = HIDE-SYSTEM
ShortcutPath24 = C:\Users\Najeeb\Desktop\NAJEEBSK\HIDE-SYSTEM.exe"
ZKiyRS0C,RUNNER.ahk,Najeebsk,Autohotkey,Tuesday 31st of October 2023 10:11:01 PM CDT,"#NoEnv
#SingleInstance, Force
SetBatchLines, -1
ini = %A_Scriptdir%\RUNNER.ini ; Replace with your INI path
spath := {}
Gui, New
;Gui, Color, 884488
Gui New, +Hwndmygui
WinSet, TransColor, EEAA99
Gui, +ToolWindow -Border
Gui,Font,S14 Bold,Calibri 
Loop {
 IniRead, sname, %ini%, Shortcuts, ShortcutName%A_Index%
 If (sname = ""ERROR"")
  Break
 IniRead, thisPath, %ini%, Shortcuts, ShortcutPath%A_Index%
 If FileExist(thisPath) {
  spath[sname] := thisPath
  Gui, Add, Button, w200 h20 y+m gProg, %sname%
 }
}
Gui, Show, X775 Y2 W240 H720, Najeeb Run
Return

Prog:
If FileExist(thisPath := spath[A_GuiControl]) {
 SplitPath, thisPath, fn
 If WinExist(""ahk_exe "" fn)
  WinActivate
 Else Run, %thisPath%
} Else MsgBox, 48, File not found, %thisPath%
Return
F1::
    if (WinExist(""ahk_id "" mygui))
        Gui %mygui%: Hide
    else
        Gui %mygui%: Show
Return

#R::Reload  ;<--  ~ Reload Script ~
#S::Suspend ;<--  ~ Suspend Script ~ 
#P::Pause   ;<--  ~ Pause Script ~
#M::WinMinimize, ;<--  ~ Minimize Script ~
ESC::ExitApp     ;<--  ~ Exit Script ~"
VxxHHWJT,Koikatsu List Scraper V1.1,Skelun,JavaScript,Tuesday 31st of October 2023 09:59:54 PM CDT,"/* --------------------------------------------------------------------
-- MOON RATING
-----------------------------------------------------------------------
-- I'm using this because it was the easier way
-- to simulate rating stars.
----------------------------------------------------------------------- */

function moonRating(number) {
  
    // Is it a number?
    if (!isNaN(number)) {
      var votes;
  
      // Is it an interger?
      if (number % 1 === 0) {
        votes=""🌕"".repeat(number);
        votes+=""🌑"".repeat(5-number);
      
      // Or is it a float?
      } else {
        let n = Math.floor(number);
        votes=""🌕"".repeat(n);
        votes+=""🌗"";
        votes+=""🌑"".repeat(4-n);
      }
      return votes;
    } else {
      // If no votes
      return ""------""
    }
  }
  
  /* --------------------------------------------------------------------
  -- Scraping data using Cheerio library
  -- (https://github.com/tani/cheeriogs)
  -- Script ID: 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
  ----------------------------------------------------------------------- */
  
  // Cheerio method to scrape
  function getContent(url) {
      return UrlFetchApp.fetch(url).getContentText()
  }
  
  /* --------------------------------------------------------------------
  // Actual scrape function
  ----------------------------------------------------------------------- */

  function scrapeData(force) {
  
    // Selects the active sheet
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  
    // Get selected cells
    var selectedRange = sheet.getActiveRange();
  
    // Get the values from the selected cells
    var selectedValues = selectedRange.getValues(); 
  
    // Iterate through cells
    for (var i = 0; i < selectedValues.length; i++) {
  
      // It assumes the URLs are in the first column of the selected column
      var url = selectedValues[i][0];
  
      // If the value is not empty...
      if (url) {

        // Grabs the HTML data
        var content = getContent(url);
        
        // Parses the HTML data
        var $ = Cheerio.load(content);
  
        /* --------------------------------------------------------------------
        -- [TITLE]
        -------------------------------------------------------------------- */
        var threadTitle = $('h1.p-title-value');
  
        var title = threadTitle.contents().filter(function() {
          return this.type === 'text';
        }).text();
  
        /* --------------------------------------------------------------------
        -- [STATUS] (ACTIVE - ABANDONED - ONHOLD)
        -------------------------------------------------------------------- */
        // Default status
        var status = 'Active';
  
        // Search for ""Abandoned"" or ""Onhold""
        threadTitle.find('span').each(function() {
          var spanText = $(this).text();
          if (['Completed','Abandoned','Onhold'].includes(spanText)) {
            status = spanText;
            return false;
          }
        });
  
        /* --------------------------------------------------------------------
        -- [ENGINE]
        ----------------------------------------------------------------------- */
        // If there's no engine info, it returns ""unknown""
        var engine = 'Unknown';
  
        // Checks if there's one of these strings
        threadTitle.find('span').each(function() {
          var spanText = $(this).text();
          if (['ADRIFT','Flash','Java','Others','QSP','RAGS','RPGM',""Ren'Py"",'Tads','Unity','Unreal Engine','WebGL','Wolf RPG','HTML'].includes(spanText)) {
            engine = spanText;
            return false; // Stop searching once a match is found
          }
        });
  
        /* --------------------------------------------------------------------
        -- [TAGS]
        ----------------------------------------------------------------------- */
        // Selects the element containing the tags
        var tagList = $('span.js-tagList');
  
        // Grabs the tags and separate them by comma
        var tags = tagList.find('a.tagItem').map(function() {
          return $(this).text();
        }).get().join(', ');
  
        /* --------------------------------------------------------------------
        -- GAMEPLAY
        ----------------------------------------------------------------------- */
        var gameplay;
  
        // Assumes the [Gameplay] type by using the tags
        switch (true) {
          case tags.includes('sandbox'):
            gameplay = 'Sandbox';
            break;
          case tags.includes('turn based combat'):
            gameplay = 'TBC';
            break;
          case tags.includes('management'):
            gameplay = 'Management';
            break;
          case tags.includes('simulator'):
            gameplay = 'Simulator';
            break;
          case tags.includes('rpg'):
            gameplay = 'RPG';
            break;
          default:
            gameplay = 'Visual Novel';
        }
  
        /* --------------------------------------------------------------------
        -- EXTRA INFORMATION
        -----------------------------------------------------------------------
        -- - Thread [Updated] Date
        -- - [Release] Date
        -- - [Dev] name
        -- - [Censored]
        ----------------------------------------------------------------------- */
        // Selects the first message body (which is the one containing the game info)
        var articleText = $('article.message-body').first().text();
  
        // Uses regular expressions to match and capture the information
        // When it was updated
        var updatedREGEX = /Thread Updated: ([^\s]+)/.exec(articleText);
        // When it was released
        var releaseREGEX = /Release Date: ([^\s]+)/.exec(articleText);
        // Who is the dev
        var devREGEX = /Developer: ([^\s]+)/.exec(articleText);
        // It is censored?
        var censoredREGEX = /Censored: (.+?)(?=\n|\r|\r\n)/.exec(articleText);
  
        // Extract the captured values or provide default values if not found
        var updated = updatedREGEX ? updatedREGEX[1] : ""Not found"";
        var release = releaseREGEX ? releaseREGEX[1] : ""Not found"";
        var dev = devREGEX ? devREGEX[1] : ""Not found"";
        var censored = censoredREGEX ? censoredREGEX[1] : ""Not found"";
  
        /* --------------------------------------------------------------------
        -- [RATING] & [VOTES]
        ----------------------------------------------------------------------- */
        // Grabs the JSON generated by F95 forum
        var jsonInfo = $('script[type=""application/ld+json""]').last();
        
        // Uses regular expression to match and caputre the information
        var ratingREGEX = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo);
        var votesREGEX = /""ratingCount"": ""(\d+)""/.exec(jsonInfo);
  
        // Extract the captured values or provide default values if not found
        var rating = ratingREGEX ? ratingREGEX[1] : ""No Rating"";
        var votes = votesREGEX ? votesREGEX[1] : ""0"";

        /* --------------------------------------------------------------------
        -- LAST UPDATE CHECK
        -- --------------------------------------------------------------------
        -- Before outputting the data it will check when the last update was,
        -- to avoid placing the same well maintained games on the top.
        -- -> First it will check if it's just a brand new game, by comparing the
        -- release data with today's date;
        -- -> If it's not a brand new game, it will ignore the game if it was
        -- updated less than 30 days ago;
        ----------------------------------------------------------------------- */

        // Gets today's date
        var today = new Date();

        // Parses the update info
        var updatedDate = new Date(updated);
        
        // Subtracts both dates to get days gap
        var daysSinceLastUpdate = Math.floor((today - updatedDate) / (1000 * 60 * 60 * 24));

        if (force === true || daysSinceLastUpdate > 30) {

            // OUTPUTS THE VALUE INTO DIFFERENT CELLS

            // Write the scraped data to the same row
            var outputRow = selectedRange.getRow() + i;

            // Write the scraped data to adjacent columns
            var outputColumn = selectedRange.getColumn() + 1;

            // All values that will be written
            var values = [[
                title,
                status,
                engine,
                gameplay,
                tags,
                moonRating(rating),
                votes,
                updated,
                release,
                dev,
                censored
            ]];

            // Where it will be written
            sheet.getRange(outputRow, outputColumn, 1, values[0].length).setValues(values);
        }

      }

    }
  
  }

  /* --------------------------------------------------------------------
  -- IGNORE DATE RESTRICTION
  ----------------------------------------------------------------------- */

  function forceScrapeData() {
    scrapeData(true);
  }
  
  /* --------------------------------------------------------------------
  -- CREATES AN EXTRA MENU OPTION
  ----------------------------------------------------------------------- */
  
  function onOpen() {
    var ui = SpreadsheetApp.getUi();
    ui.createMenu('Extra Functions')
        .addItem('Scrape Data', 'scrapeData')
        .addItem('Force Scrape', 'forceScrapeData')
        .addToUi();
  }"
mh39pyqP,belajar widget 3,yocky12k,Dart,Tuesday 31st of October 2023 09:54:42 PM CDT,"import 'package:flutter/material.dart';

void main() {
  runApp(const MainApp());
}

class MainApp extends StatelessWidget {
  const MainApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: DefaultTabController(
        length: 3,
        child: Scaffold(
          appBar: AppBar(
            title: Text('Latihan Widget 3'),
            actions: [
              PopupMenuButton(
                onSelected: (value) {
                  //logika ketika menu di tekan
                },
                itemBuilder: (context) {
                  return <PopupMenuEntry>[
                    PopupMenuItem(
                      value: 'menu 1',
                      child: Text('Chats'),
                    ),
                    PopupMenuItem(
                      value: 'menu 2',
                      child: Text('Status'),
                    ),
                    PopupMenuItem(
                      value: 'menu 3',
                      child: Text('Call'),
                    ),
                  ];
                },
              ),
            ],
            bottom: TabBar(
              tabs: [
                Tab(text: 'Chats'),
                Tab(text: 'Status'),
                Tab(text: 'Call'),
              ],
            ),
          ),
          body: TabBarView(
            children: [
              ListView(
                children: [
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('AULIA'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('PIAN'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('DAENG'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('RARA'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('ZILAN'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('JAFAR'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('RAHMAT'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('INNA'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('LESRIANTO'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('BAGUS'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('SALEM'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('HANNY'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('TANIA'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('AFIF'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                  ListTile(
                    leading: Icon(Icons.person),
                    title: Text('RAVI'),
                    onTap: () {
                      //logic ketika di tekan
                    },
                  ),
                ],
              ),
              Container(
                color: Colors.blueGrey,
                child: ListView(
                  children: [
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('KHOLIZA'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('PIAN'),
                      subtitle: Text('2 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('RAFLY'),
                      subtitle: Text('4 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('FAJAR'),
                      subtitle: Text('3 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('SASA'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('AFIF'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('RAVI'),
                      subtitle: Text('2 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('AZMI'),
                      subtitle: Text('4 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('TANIA'),
                      subtitle: Text('3 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('PUTRI'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('NOCA'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('NOVI'),
                      subtitle: Text('2 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('FEBRI'),
                      subtitle: Text('4 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('FEBRIKA'),
                      subtitle: Text('3 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.circle,
                        size: 50,
                      ),
                      title: Text('AYU'),
                      subtitle: Text('1 menit yang lalu'),
                      textColor: Colors.white,
                      iconColor: Colors.white,
                    ),
                  ],
                ),
              ),
              Center(
                child: Text('Tidak ada riwayat panggilan'),
              )
            ],
          ),
          bottomNavigationBar: Container(
            color: Colors.blue,
            child: TabBar(
              tabs: [
                Tab(icon: Icon(Icons.chat),
                ),
                Tab(icon: Icon(Icons.image),
                ),
                Tab(icon: Icon(Icons.call),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
"
9JkhBpQk,Untitled,retroman,C,Tuesday 31st of October 2023 09:39:50 PM CDT,"in nim can you do:
#include <stdio.h>
#include <ctype.h>
int main(void)
{
char MyCharArray[5]={'a','b','c','d' ,'e'};
char MyUpperCharArray[5]={toupper(MyCharArray[0]),toupper(MyCharArray[1]),toupper(MyCharArray[2]),toupper(MyCharArray[3]),toupper(MyCharArray[4])};                      
    for(int i=0;i<=4;i++){printf(""%c\n"", MyCharArray[i]);}
    for(int j=0;j<=4;j++){printf(""%c\n"", MyUpperCharArray[j]);
    }      return 0;
}

ChatGPT
In Nim, you can achieve the same functionality as your C code, but with some differences in syntax and style. Here's the equivalent Nim code:

nim
Copy code
import strutils

proc main() =
  var myCharArray: array[0..4, char] = ['a', 'b', 'c', 'd', 'e']
  var myUpperCharArray: array[0..4, char] = [toUpper(myCharArray[0]), toUpper(myCharArray[1]), toUpper(myCharArray[2]), toUpper(myCharArray[3]), toUpper(myCharArray[4])]

  for i in 0..4:
    echo myCharArray[i]

  for j in 0..4:
    echo myUpperCharArray[j]

when isMainModule:
  main()
Key differences between the C code and Nim code:

In Nim, we use import strutils to include the module for string utilities, including the toUpper function.

Nim uses proc to define procedures (functions). The main procedure is defined to encapsulate the program's logic.

Nim uses var to declare variables, and it allows you to specify the array's range with array[0..4, char].

Nim uses echo for printing to the console, and when isMainModule is used to check if the code is being run as the main module (similar to the int main in C).

Overall, the logic and functionality remain the same, but the code is adapted to Nim's syntax and conventions.




User
how about:
char MyCharArray[5] = {'a', 'b', 'c', 'd', 'e'};
char *(MyCharArray2)[5] = {&MyCharArray[0], &MyCharArray[1], &MyCharArray[2], &MyCharArray[3], &MyCharArray[4]};
                           
printf(""%s\n"", MyCharArray2[0]);
printf(""%s\n"", MyCharArray2[1]);
printf(""%s\n"", MyCharArray2[2]);
printf(""%s\n"", MyCharArray2[3]);
printf(""%s\n"", MyCharArray2[4]);
ChatGPT
In Nim, you can achieve similar functionality, but Nim handles arrays and pointers differently. Nim uses sequences for array-like structures, and you don't need to use pointers explicitly. Here's the equivalent Nim code for your C code:

nim
Copy code
proc main() =
  var myCharArray: array[0..4, char] = ['a', 'b', 'c', 'd', 'e']
  var myCharArray2: seq[ptr char] = @[addr myCharArray[0], addr myCharArray[1], addr myCharArray[2], addr myCharArray[3], addr myCharArray[4]]

  echo cast[cstring](myCharArray2[0])
  echo cast[cstring](myCharArray2[1])
  echo cast[cstring](myCharArray2[2])
  echo cast[cstring](myCharArray2[3])
  echo cast[cstring](myCharArray2[4])

when isMainModule:
  main()
Key differences between the C code and Nim code:

In Nim, we use seq to represent sequences, and ptr is used to represent pointers. We create a sequence of pointers to characters, seq[ptr char], to simulate the array of pointers in C.

To print the character array as a string, we use cast[cstring] to convert the pointer to a C-style string for printing.

The code structure remains similar, with the main procedure being executed when the program runs as the main module.

The Nim code achieves the same result as your C code while adapting to Nim's data structures and syntax.




User

2 / 2

how about
char *(MyCharArray2)[5] = {&MyCharArray[0], &MyCharArray[1], &MyCharArray[2], &MyCharArray[3], &MyCharArray[4]};
                           
printf(""%c\n"", *MyCharArray2[0]);
printf(""%c\n"", *MyCharArray2[1]);
printf(""%c\n"", *MyCharArray2[2]);
printf(""%c\n"", *MyCharArray2[3]);
printf(""%c\n"", *MyCharArray2[4]);
ChatGPT
The C code you provided uses an array of pointers to char and then dereferences those pointers to print the characters. In Nim, you can achieve similar functionality using ptr char to represent pointers to characters. Here's the equivalent Nim code:

nim
Copy code
proc main() =
  var myCharArray: array[0..4, char] = ['a', 'b', 'c', 'd', 'e']
  var myCharArray2: array[0..4, ptr char] = @[addr myCharArray[0], addr myCharArray[1], addr myCharArray[2], addr myCharArray[3], addr myCharArray[4]]

  echo cast[char](myCharArray2[0]^)
  echo cast[char](myCharArray2[1]^)
  echo cast[char](myCharArray2[2]^)
  echo cast[char](myCharArray2[3]^)
  echo cast[char](myCharArray2[4]^)

when isMainModule:
  main()
Key differences between the C code and Nim code:

In Nim, we use ptr char to represent pointers to characters, and we use ^ to dereference the pointers.

To print the characters, we use cast[char] to cast the dereferenced pointer to a character.

The code structure remains similar, with the main procedure being executed when the program runs as the main module.

The Nim code achieves the same result as your C code while adapting to Nim's data structures and syntax.




User
how about
#include <stdio.h>
#include <ctype.h>
int main(void)
{
char MyCharArray[5] = {'a','b','c','d','e'};
char (*MyCharArray2)[5] = {&MyCharArray};
printf(""%s\n"", (MyCharArray2[0]));
    return 0;
}
ChatGPT
The C code you provided creates an array of characters MyCharArray, and then it creates a pointer to an array of characters MyCharArray2, which points to MyCharArray. It then prints MyCharArray2[0] as a string.

In Nim, you can achieve similar functionality using the same approach, but you'll use Nim's syntax. Here's the equivalent Nim code:

nim
Copy code
proc main() =
  var myCharArray: array[0..4, char] = ['a', 'b', 'c', 'd', 'e']
  var myCharArray2: ptr array[0..4, char] = addr(myCharArray)

  echo cast[cstring](myCharArray2[])

when isMainModule:
  main()
Key points to note in the Nim code:

In Nim, we use ptr to create a pointer to an array of characters.

To access the elements of the array through the pointer, we use myCharArray2[].

To print the array as a string, we use cast[cstring] to convert the pointer to a C-style string for printing.

The Nim code achieves the same result as your C code while adapting to Nim's syntax and data structures."
jbUXxBmC,Strip mines 3x3,Farmer_GPSY,Lua,Tuesday 31st of October 2023 08:43:20 PM CDT,"function checkFuel()
    if turtle.getFuelLevel() < 10 then
        print(""Refueling..."")
        turtle.select(1) -- Coal in slot 1
        turtle.refuel(1) -- Refuel using 1 piece of coal
    end
end

function dig3x3Section()
    turtle.dig() -- Dig forward
    turtle.forward()
    turtle.digUp()
    turtle.digDown()

    -- Dig upper and lower left corners
    turtle.turnLeft()
    turtle.dig()
    turtle.up()
    turtle.dig()
    turtle.down()
    turtle.down()
    turtle.dig()
    turtle.up()

    -- Dig upper and lower right corners
    turtle.turnRight()
    turtle.turnRight()
    turtle.dig()
    turtle.up()
    turtle.dig()
    turtle.down()
    turtle.down()
    turtle.dig()
    turtle.up()

    -- Face forward again
    turtle.turnLeft()
end

function stripMine()
    while true do -- Run indefinitely
        checkFuel()
        dig3x3Section()
    end
end

stripMine()
"
f4z01FRZ,craft,Typhonack,Lua,Tuesday 31st of October 2023 08:40:05 PM CDT,"function checkslots()
    for slot = 1, 16 do
        local item = turtle.getItemDetail(slot)
        if item then
            local itemName = item.name
            if string.find(itemName, ""infusion_crystal"") then
                if slot == 6 then
                    crystalslot = ""full""
                else 
                    turtle.drop()
                    crystalslot = ""empty""
                end
            end
            if string.find(itemName, ""mysticalagriculture"") then
                turtle.dropDown()
            else 
                turtle.turnleft()
                turtle.drop()
                turtle.turnright()
            end
        end
    end
end

function fillslots()
    if crystalslot == ""empty"" then
        turtle.select(6)
        turtle.suck()
    end
    for _, slot in ipairs({2, 5, 7, 10}) do
        turtle.select(slot)
        turtle.suckDown(64)
    end
end
function craft()
    turtle.select(16)
    make = turtle.craft()
    if make == true then
        turtle.dropUp()
    end
end

function slotcheck()
    for _, slot in ipairs({2, 5, 7, 10}) do
        local item = turtle.getItemDetail(slot)
        if item then
            if make == true then
                turtle.dropDown()
            end
        end
    end

    for _, slot in ipairs({2, 5, 7, 10}) do
        local item = turtle.getItemDetail(slot)
        if item then
            foundItem = true
        else
            foundItem = false
        end
    end

    if foundItem == true then
        print(""Start minor craft"")
    end
end

--start function
checkslots()
fillslots()
craft()
slotcheck()"
2Sj3GK09,Untitled,emacuervo,C++,Tuesday 31st of October 2023 08:02:25 PM CDT,"#include <iostream>
#include <clocale>
#include <cstring>
using namespace std;

#include ""parcial2.h""

class Punto1{
    private:
        int numProv;
        char nombreProv[20];
        int provincia;
        bool estado;
    public:
        int getNumProv(){return numProv;}
        const char* getNombreProv(){return nombreProv;}
        int getProvincia(){return provincia;}
        bool getEstado(){return estado;}

        void setNumProv(int n){numProv = n;}
        void setNombreProv(const char* nombre){strcpy(nombreProv, nombre);}
        void setProvinvia(int p){provincia = p;}
        void setEstado(bool e){estado = e;}

        void Cargar(){
            cout<< ""Numero de Provincia: "";
            cin>> numProv;
            cout<< ""Nombre de Provincia: "";
            cin>> nombreProv;
            cout<< ""Provincia del Proveedor: "";
            cin>> provincia;
            cout<< ""Estado: "";
            estado=true;
        }

        void Mostrar(){
            cout<< numProv << endl;
            cout<< nombreProv << endl;
            cout<< provincia << endl;
        }
};

class ArchivoPunto1{
    private:
        char nombre[30];
    public:
        ArchivoPunto1(const char *n){
            strcpy(nombre, n);
        }
        Punto1 leerRegistro(int pos){
            Punto1 reg;
            FILE *p=fopen(nombre,""rb"");
            if(p==NULL){
                return reg;
            }
            fseek(p, pos * sizeof reg, 0);
            fread(&reg, sizeof reg, 1, p);
            fclose(p);
            return reg;
        }
        bool grabarRegistro(Punto1 reg){
            FILE *p;
            p=fopen(nombre, ""ab"");
            if(p==NULL) return false;
            int escribio=fwrite(&reg, sizeof reg,1, p);
            fclose(p);
            return escribio;
        }
};


void punto1(){
    ArchivoProveedores archProv(""proveedores.dat"");
    int cantProv = archProv.contarRegistros();
    Proveedor regProv;

    ArchivoCompras archCompras(""compras.dat"");
    int cantCompras = archCompras.contarRegistros();
    Compra regCompra;

    ArchivoPunto1 archPunto1(""punto1.dat"");
    Punto1 aux;

    for (int x=0; x<cantProv; x++){
        regProv = archProv.leerRegistro(x);
        for (int i=0; i<cantCompras; i++){
            regCompra = archCompras.leerRegistro(i);
            if (regProv.getNumeroProveedor() == regCompra.getNumeroproveedor() && regCompra.getFechaCompra().getAnio() == 2023 && regCompra.getActivo()){
                aux.setNumProv(regProv.getNumeroProveedor());
                aux.setNombreProv(regProv.getNombre());
                aux.setProvinvia(regProv.getProvincia());
                archPunto1.grabarRegistro(aux);
            }
        }
    }
}

void punto2(){
    ArchivoMateriales archMat(""materiales.dat"");
    int cantMat = archMat.contarRegistros();
    Material regMat;

    int vec[6]{};
    int mayor=0;

    for (int x=0; x<cantMat; x++){
        regMat = archMat.leerRegistro(x);
        if (regMat.getActivo()){
            vec[regMat.getTipo()-1]++;
        }
    }

    for (int x=0; x<6; x++){
        if (vec[x] > mayor){
            mayor = vec[x];
        }
    }
    cout<< ""El tipo de material con mas cantidad de materiales es: "" << mayor << endl;
}

void punto3(){
    ArchivoCompras archCompras(""compras.dat"");
    int cantCompras = archCompras.contarRegistros();
    

    int cod;
    bool band=false;

    Compra* vec;

    vec=new Compra[cantCompras];
    if (vec==NULL){
        cout<< ""Error al crear vector"" << endl;
    }

    cout<< ""Ingrese el codigo del tipo de material (entre 1 y 6): "";
    cin>> cod;

    for (int x=0; x<cantCompras; x++){
        vec[x] = archCompras.leerRegistro(x);
        if (vec[x].getActivo() && vec[x].getCodigoMaterial() == cod){
            vec[x].Mostrar();
            band=true;
        }
    }
    if (!band){
        cout<< ""No hay materiales de este tipo: "" << endl;
    }
    delete[]vec;
}

int main (void){

    punto1();
    punto2();
    punto3();


  return 0;
}"
qbuehUFn,DEPORTES,luckyhay,HTML,Tuesday 31st of October 2023 08:01:13 PM CDT,"{
  ""name"": ""DEPORTES"",
  ""author"": ""C.Vidal © 2023"",
  ""image"": ""https://media.giphy.com/media/TjAcxImn74uoDYVxFl/giphy.gif"",
  ""url"": ""https://pastebin.com/edit/qbuehUFn"",
  ""groups"": [
    
	{
      ""name"": ""DEPORTES ACE STREAM"",
      ""image"": ""https://cdn6.aptoide.com/imgs/8/3/c/83cc431eb89915771fe774e9854fce29_fgraphic.png"",
      ""stations"": [
        
        {
           ""name"": ""INFORMACION"",
                        ""image"": ""https://evhelperknapp.lu/wp-content/uploads/2018/09/info.jpeg"",
 ""info"" : ""Para poder ver los Canales tienes que descargar Ace stream (CLICA AQUI)"" ,                      
 ""url"": ""https://ace-stream-media.uptodown.com/android/descargar"",
  ""embed"": ""true"", ""playerType"":""descargar"", ""playInNatPlayer"": ""false"", ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, como Gecko ) Cromo/117.0.5938.152 Safari/537.36""                     
                       
        },
        {  

                        ""name"": ""DAZN LaLiga"",
                        ""image"": ""https://i.postimg.cc/9QK5zX40/daznlaliga.png"",
                        ""url"": ""acestream://a3bca895c58d3fc7d5e4259d3d5e3cf0291d1914"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""
        },
        {
                        ""name"": ""DAZN F1 720P"",
                        ""image"": ""https://i.postimg.cc/d18HfckZ/daznf1.png"",
                        ""url"": ""acestream://e1fcad9de0c782c157fde6377805c58297ab65c2"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""

       },
        {
                        ""name"": ""DAZN F1 1080P"",
                        ""image"": ""https://i.postimg.cc/d18HfckZ/daznf1.png"",
                        ""url"": ""acestream://9dad717d99b29a05672166258a77c25b57713dd5"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""

       },
        {
                        ""name"": ""LaLiga Hypermotion 1080p"",
                        ""image"": ""https://i.postimg.cc/htb5kN6y/liga-hypermotion.png"",
                        ""url"": ""acestream://4c46585214b23b1d802ef2168060c7649a3894cf"", 
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""
       

      },
        {
                        ""name"": ""M Vamos 1080p"",
                        ""image"": ""https://i.postimg.cc/fLGkh8b5/vamos.png"",
                        ""url"": ""acestream://859bb6295b8d0f224224d3063d9db7cdeca03122"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""


    },
        {
                        ""name"": ""M+ Deportes 1080p"",
                        ""image"": ""https://img.sport-tv-guide.live/images/tv-station-movistar-deportes-364.png"",
                        ""url"": ""acestream://d00223931b1854163e24c5c22475015d7d45c112"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""

   },
        {
                        ""name"": ""EuroSport 1 1080p"",
                        ""image"": ""https://img.sport-tv-guide.live/images/tv-station-es-eurosport-1-615.png"",
                        ""url"": ""acestream://5e4cd48c79f991fcbee2de8b9d30c4b16de3b952"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""

   },
        {
                        ""name"": ""EuroSport 2 1080p"",
                        ""image"": ""https://img.sport-tv-guide.live/images/tv-station-es-eurosport-2-616.png"",
                        ""url"": ""acestream://c373da9e901d414b7384e671112e64d5a2310c29"",
                        ""info"" : ""Puede tardar unos segundos ten paciencia😀""

  },

       ]
    },
    {
      ""name"": ""En obras"",
      ""image"": ""https://media.giphy.com/media/OkgYSqcaCACgTNojsd/giphy.gif"",
      ""stations"": [
        
                {
                        ""name"": ""Canal 3"",
                        ""image"": ""http://www.lapampa.gov.ar/images/stories/Imagenes/Ima_home/canal_3_09-02.jpg"",
                        ""url"": ""http://iphone-streaming.ustream.tv/uhls/17248101/streams/live/iphone/playlist.m3u8""
                },
				{
                        ""name"": ""Canal 4"",
                        ""image"": ""http://www.canal4jujuy.com.ar/img/logo.jpg"",
                        ""url"": ""http://www.janjuaplayer.com/embedplayer/discoverysusy/1/600/400"",
                        ""referer"": ""http://tvpor-internet.com/discovery-latino-en-vivo.html"",
                        ""isHost"": ""true""
                },
                
       ]
    },
    
    
    
		
		
		
                ]
}"
3JmdLX9u,Untitled,Denwer,SQL,Tuesday 31st of October 2023 07:53:04 PM CDT,"DELETE FROM [dbo].[Chat]
WHERE [ID] IN 
(
	SELECT * FROM 
	(
		SELECT [ID_Chat], COUNT(*) as chatMessageCount FROM [dbo].[Chat] as chat
		LEFT JOIN [dbo].[ChatMessage] as chatMessage
			ON chatMessage.ID_Chat = chat.ID
		GROUP BY [ID_Chat]
	) as chatWithCount
	WHERE chatWithCount.chatMessageCount = 0
)"
qyXSEHrX,Untitled,IgorLytkin,Bash,Tuesday 31st of October 2023 07:33:18 PM CDT,"#
#<?php die('Forbidden.'); ?>
#Date: 2023-10-31 11:52:28 UTC
#Software: Joomla! 4.3.4 Stable [ Bora ] 22-August-2023 16:00 GMT

#Fields: datetime	priority clientip	category	message
2023-10-31T11:52:28+00:00	INFO 37.23.0.129	update	Начало установки новой версии
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Завершение установки
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Начало обновления SQL
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Версия базы данных (#__schemas): 4.3.2-2023-05-20
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Выполнен запрос из файла 4.4.0-2023-05-08: INSERT INTO `#__extensions` (`package_id`, `name`, `type`, `element`, `folder`, 
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Выполнен запрос из файла 4.4.0-2023-09-13: INSERT INTO `#__extensions` (`package_id`, `name`, `type`, `element`, `folder`, 
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Завершение обновления SQL
2023-10-31T11:52:41+00:00	INFO 37.23.0.129	update	Удаление устаревших файлов и каталогов
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_multifactorauth_email не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, email, plg_multifactorauth_email, 0).
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_multifactorauth_fixed не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, fixed, plg_multifactorauth_fixed, 0).
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_multifactorauth_totp не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, totp, plg_multifactorauth_totp, 0).
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_multifactorauth_webauthn не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, webauthn, plg_multifactorauth_webauthn, 0).
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_multifactorauth_yubikey не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, yubikey, plg_multifactorauth_yubikey, 0).
2023-10-31T11:52:41+00:00	WARNING 37.23.0.129	jerror	Не удалось обновить кэш манифеста: Расширение plg_system_shortcut не установлено.
2023-10-31T11:52:41+00:00	ERROR 37.23.0.129	update	An error has occurred while running ""JoomlaInstallerScript::updateManifestCaches"". Code: 0. Message: Error on updating manifest cache: (type, element, folder, client) = (plugin, shortcut, plg_system_shortcut, 0).
2023-10-31T11:52:44+00:00	INFO 37.23.0.129	update	Очистка после установки
2023-10-31T11:52:44+00:00	INFO 37.23.0.129	update	Обновление до версии 4.4.0 завершено"
LWG0MfmM,dortoisv's Data,azimuths,JSON,Tuesday 31st of October 2023 07:22:19 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""318""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Liger Bomb""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shadow Clone""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2539""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""1052""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Jin Smack""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Jin Smash""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""127""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""WireKunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""2930""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""150""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""181701782""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1698788036""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""126""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Knee Strike""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lariat""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""UnoTheActivist 🛸""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""72""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1195""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""Flak""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dort(40)1792620""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-23""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""101""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Kunai Training\"",\""Pushup Training\"",\""Kunai Training\""]""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""42""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""469""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""137""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""79""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""305""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""e""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""33""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Advisor""},""REFRESH"":{""ObjectName"":""REFRESH"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""}},""Skilltree"":{""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Cloak 2"":{""ObjectName"":""Lightning Cloak 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Jin Smack"":{""ObjectName"":""Jin Smack"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""High Powered Chop"":{""ObjectName"":""High Powered Chop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lariat"":{""ObjectName"":""Lariat"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shadow Clone Upgrade 1"":{""ObjectName"":""Shadow Clone Upgrade 1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Tailed Beast Bomb"":{""ObjectName"":""Tailed Beast Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Knee Strike"":{""ObjectName"":""Knee Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Clone Jutsu"":{""ObjectName"":""Clone Jutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Jin Smash"":{""ObjectName"":""Jin Smash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Liger Bomb"":{""ObjectName"":""Liger Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Jin"":{""ObjectName"":""Jin"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shadow Clone"":{""ObjectName"":""Shadow Clone"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shadow Clone Upgrade 2"":{""ObjectName"":""Shadow Clone Upgrade 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Cloak"":{""ObjectName"":""Lightning Cloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Genjutsu Release"":{""ObjectName"":""Genjutsu Release"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shadow Clone Upgrade 3"":{""ObjectName"":""Shadow Clone Upgrade 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
