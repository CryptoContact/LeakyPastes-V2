id,title,username,language,date,content
w15bZHfw,Untitled,Hend_Sayed,Python,Wednesday 20th of December 2023 11:47:16 PM CDT,"import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix
from sklearn import metrics
import seaborn as sns
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt

# Load the excel file into a pandas dataframe
def read_excel(file_path):
    df = pd.read_excel(file_path)
    return df

# Determine features and goal
def determine_features_and_goal(df):
    if 'goals' in df.columns:
        features = df.drop(columns=['goals'])
        goal = df['goals']
        return features, goal
    else:
        print(""Column 'goals' does not exist in the DataFrame."")
        return None, None
# Split data into training and testing
def split_data(features, goal, test_size=0.5, random_state=3):
    X_train, X_test, y_train, y_test = train_test_split(features, goal, test_size=test_size, random_state=random_state)
    return X_train, X_test, y_train, y_test

# Label encode categorical features
def label_encode_categorical_features(df):
    le = LabelEncoder()
    df = df.apply(le.fit_transform)
    return df

# Solve missing values
def solve_missing(df):
    imputer = SimpleImputer(strategy=""most_frequent"")
    df = imputer.fit_transform(df)
    return df


# Apply KNN classifier
def apply_knn_classifier(K,X_train, X_test, y_train):
    knn = KNeighborsClassifier(n_neighbors=K)
    knn.fit(X_train, y_train)
    return knn.predict(X_test)

# Apply Naive Bayes classifier
def apply_naive_bayes_classifier(X_train, X_test, y_train):
    gnb = GaussianNB()
    gnb.fit(X_train, y_train)
    return gnb.predict(X_test)

# Apply decision tree classifier
def apply_decision_tree_classifier(X_train, X_test, y_train):
    dt = DecisionTreeClassifier()
    dt.fit(X_train, y_train)
    return dt.predict(X_test),dt

#Apply randomForest classifier
from sklearn.ensemble import RandomForestClassifier
def apply_random_forest_classifier(X_train, X_test, y_train):
 rm = RandomForestClassifier(n_estimators = 10, max_depth=25, criterion = ""gini"", min_samples_split=10)
 rm.fit(X_train, y_train)
 rm_prd = rm.predict(X_test)
 return rm,rm_prd


# Calculate performance using confusion matrix
def calculate_performance(y_test, y_pred):
    cm = confusion_matrix(y_test, y_pred)
    v=round(metrics.accuracy_score(y_test, y_pred)*100)
    w=round(metrics.precision_score(y_test, y_pred, average='macro', zero_division=1)*100)
    z=round(metrics.recall_score(y_test, y_pred, average='macro')*100)
    return v,w,z,cm

if __name__ == '__main__':
    file_path = 'data.xlsx'
    df = read_excel(file_path)
    df=df.replace([np.inf, -np.inf], np.nan).dropna()
    x,y=df.shape
    features, goal = determine_features_and_goal(df)
    target=goal.tolist()
    target= list(set(goal))
    print(target)
    print(len(target))
    #t1,t2,t3,t4,t5=target
    #df1 = df[df['Drug'] == t1]
    #print('Home Class\n',df1.shape)
    #df2 = df[df['Drug'] == t2]
    #print('DEATH IN HOSP Class\n',df2.shape)
    F=list(features)
    print(list(features))
    df=solve_missing(df)
    print(df.shape)

    # Split Data
    X_train, X_test, y_train, y_test = split_data(features, goal, test_size=0.3, random_state=3)
    X_train = label_encode_categorical_features(X_train)
    X_test = label_encode_categorical_features(X_test)
    print(len(X_train))
    print(len(X_test))

    # Apply KNN
    K=round(np.sqrt(x))
    y_pred_knn = apply_knn_classifier(K,X_train, X_test, y_train)
    A_res,P_res,R_res,con=calculate_performance(y_test,y_pred_knn)
    print(""KNN report\n"",classification_report(y_test, y_pred_knn, target_names=target, zero_division=1))
    print(""\n KNN Accuracy:"",A_res,'%')
    print(""KNN Precision:"",P_res,'%')
    print(""KNN Recall:"",P_res,'%')
    print(""KNN Confusion Matrix:\n"",con)

    # Save KNN results
    with open('knn_results.txt', 'w') as f:
        f.write(""KNN report\n"")
        f.write(classification_report(y_test, y_pred_knn, target_names=target, zero_division=1))
        f.write(""\n KNN Accuracy: {}\n"".format(A_res))
        f.write(""KNN Precision: {}\n"".format(P_res))
        f.write(""KNN Recall: {}\n"".format(R_res))
        f.write(""KNN Confusion Matrix:\n"")
        f.write(np.array2string(con))

    # Apply Naive Bayes
    y_pred_nb = apply_naive_bayes_classifier(X_train, X_test, y_train)
    A_res,P_res,R_res,con=calculate_performance(y_test, y_pred_nb)
    print(""Naive report\n"",classification_report(y_test, y_pred_nb, target_names=target, zero_division=1))    
    print(""\n NaiveBayesAccuracy: "",A_res,'%')
    print(""NaiveBayes Precision:"",P_res,'%')
    print(""NaiveBayes Recall:"",P_res,'%')
    print(""Naive Confusion Matrix:\n"",con)

    # Save Naive Bayes results
    with open('naive_bayes_results.txt', 'w') as f:
        f.write(""Naive report\n"")
        f.write(classification_report(y_test, y_pred_nb, target_names=target, zero_division=1))
        f.write(""\n NaiveBayesAccuracy: {}\n"".format(A_res))
        f.write(""NaiveBayes Precision: {}\n"".format(P_res))
        f.write(""NaiveBayes Recall: {}\n"".format(R_res))
        f.write(""Naive Confusion Matrix:\n"")
        f.write(np.array2string(con))

    # Apply Decision tree
    y_pred_dt,dt = apply_decision_tree_classifier(X_train, X_test, y_train)
    A_res,P_res,R_res,con=calculate_performance(y_test, y_pred_dt)
    print(""DT report\n"",classification_report(y_test, y_pred_dt, target_names=target, zero_division=1))    
    print(""\n Decision Tree Accuracy: "",A_res,'%')
    print(""Decision Tree Precision:"",P_res,'%')
    print(""Decision Tree Recall:"",P_res,'%')
    print(""DT Confusion Matrix:\n"",con)
    from sklearn import tree
    import graphviz
    dot_data = tree.export_graphviz(dt, feature_names=F, class_names=target, filled=True, rounded=True, special_characters=True,out_file=None,)
    graph = graphviz.Source(dot_data)
    graph.format = ""png""
    graph.render(""Tree"")

    # Save Decision Tree results
    with open('decision_tree_results.txt', 'w') as f:
        f.write(""DT report\n"")
        f.write(classification_report(y_test, y_pred_dt, target_names=target, zero_division=1))
        f.write(""\n Decision Tree Accuracy: {}\n"".format(A_res))
        f.write(""Decision Tree Precision: {}\n"".format(P_res))
        f.write(""Decision Tree Recall: {}\n"".format(R_res))
        f.write(""DT Confusion Matrix:\n"")
        f.write(np.array2string(con))

# Create list of top most features based on importance
feature_names = X_train.columns
feature_imports = dt.feature_importances_
most_imp_features = pd.DataFrame([f for f in zip(feature_names,feature_imports)], columns=[""Feature"", ""Importance""]).nlargest(10, ""Importance"")
most_imp_features.sort_values(by=""Importance"", inplace=True)
plt.figure(figsize=(10,6))
plt.barh(range(len(most_imp_features)), most_imp_features.Importance, align='center', alpha=0.9,color=""green"")
plt.yticks(range(len(most_imp_features)), most_imp_features.Feature, fontsize=14)
plt.xlabel('Importance')
plt.title('Most important features - Decision Tree')
plt.show()"
77tgwFiR,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Wednesday 20th of December 2023 11:43:34 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-584622"
JgpqLRuU,dshdrj,gadungw71,PHP,Wednesday 20th of December 2023 11:37:07 PM CDT,"https://vk.com/@698924868-hd-1080p-2023
https://vk.com/@twblurray-20231080p
https://gamma.app/public/Wonka-20231080P-1gu42gs8vi3y3a8
https://gamma.app/public/20234KHD1080p-6k9n4yjnughufd9
https://gamma.app/public/Gamma-Tips-Tricks-wf9ktr4m564psih
https://gamma.app/public/Olumlu-Dunya-2-Mortal-World-2-izle2023film-Turkce-Dublaj-Full-H-gu4oa5z8symg96k
https://gamma.app/public/Izle-Olumlu-Dunya-2Mortal-World-2-2023-izle-film-Turkce-Dublaj-HD-fdizxlz7fc9cjem
https://gamma.app/public/FILM-IZLE-murat-gogebakan-kalbim-yarali-dublaj-2023-Film-full-izl-ihz5mpn25oz5nca
https://gamma.app/public/Tum-Film-murat-gogebakan-kalbim-yarali-2023-Filmi-Full-Izle-1080p-4jsm5vqrnf1wozq
https://groups.google.com/g/ibm.software.network.directory-integrator/c/qqbYakao8lo
https://groups.google.com/g/tm-film-murat-ggebakan-kalbim-yarali-izle---2023--trke-dublaj/c/jucmY__zmLE
https://groups.google.com/g/ibm.software.network.directory-integrator/c/A1mJS6fjmw0
https://groups.google.com/g/ibm.software.network.directory-integrator/c/wnZ9jPY5omQ
https://www.taskade.com/p/1080-2023-01HJ3QG6SSV5PYJTZEWDW365MC
https://www.taskade.com/p/1080-2023-01HJ3RH6QZ58XXE8J9SNRH8PTS
https://www.taskade.com/p/film-izle-murat-goegebakan-kalbim-yarali-tuem-tuerkce-filmler-tuem-film-1080p-01HJ5D3J86KQHQS80ASMJABPE8
https://www.taskade.com/p/izle-murat-goegebakan-kalbim-yarali-tuem-film-2023-film-tuerkce-dublaj-full-hd-izle-4k-1080p-01HJ4YFV1E7B5E3N0BJ62XRB2V
https://github.com/apps/muratgagebakankalbimyarali
https://github.com/apps/mortal-world-2"
KGDTprnm,Untitled,promitheus_sal,Lua,Wednesday 20th of December 2023 11:24:58 PM CDT,"

local wmodem = peripheral.wrap('up')
local modules = peripheral.wrap('back')

local hasIntrospection = modules.hasModule('plethora:introspection')
local hasScanner = modules.hasModule('plethora:scanner')
local hasGlasses = modules.hasModule('plethora:glasses')

if not hasIntrospection then
    error(""MISSING INTROSPECTION MODULE!"")
elseif not hasScanner then
    error(""MISSING SCANNER MODULE!"")
elseif not hasGlasses then
    error(""MISSING GLASSES MODULE!"")
end

local canvas = modules.canvas()
local canvasX,canvasY = canvas.getSize() --512,288

local canvasTerminal = canvas.addGroup({0,0})
local TERMINAL_BACKGROUND_COLOR = 0x00000099
canvasTerminal.addRectangle(0,0,164,64,TERMINAL_BACKGROUND_COLOR)
canvasTerminal.addText({2,2},""Terminal:"")
"
S9HKz4VD,"AoC 2023 day 20, part 1 (Smalltalk)",musifter,Smalltalk,Wednesday 20th of December 2023 10:52:09 PM CDT,"#!/usr/local/bin/gst -q

Symbol extend [ value: arg [^arg perform: self] ]

""
|  Classes for circuit components
""
Object subclass: Gate [  "" Virtual parent class ""
    | out |
    Gate class >> new  [ ^super new init   ]
    init               [ out := OrderedCollection new. ^self ]

    addOuts: array     [ ^out := array ]
    getOuts            [ ^out          ]
    addIn:   name      [ ^nil ]

    pulse: level from: src  [ ^self NotImplemented ]
]

Gate subclass: FlipFlop  [
    | state |
    FlipFlop class >> new  [ ^(super new) init      ]
    init                   [ state := false. ^self  ]

    setState: level [ ^state := level ]
    printOn: stream [ stream nextPutAll: ('FlipFlop (%1)' % {state}) ]

    pulse: level from: src [
        level ifFalse: [ ^state := state not ].
        ^nil
    ]
]

Gate subclass: NANDGate [
    | in |
    NANDGate class >> new  [ ^(super new) init           ]
    init                   [ in := Dictionary new. ^self ]

    addIn: name     [ in at: name put: false ]
    printOn: stream [ stream nextPutAll: ('NANDGate (%1)' % {in}) ]

    pulse: level from: src [
        in at: src put: level.
        ^(in values inject: true into: [:a :b | a & b]) not
    ]
]


""
| Mainline
""
input := stdin contents lines collect: [:line | line subStrings: '-> ,' ].

"" Read in circuit making forward links: ""
circuit := Dictionary new.
input do: [ :line |
    | gate name |
    (line first = 'broadcaster') ifTrue: [
        gate := circuit at: #broadcaster put: FlipFlop new.

    ] ifFalse: [
        name := line first allButFirst asSymbol.
        (line first first = $%) ifTrue: [
            gate := circuit at: name put: FlipFlop new.
        ] ifFalse: [
            gate := circuit at: name put: NANDGate new.
        ]
    ].

    gate addOuts: (line allButFirst collect: #asSymbol).
].

"" Add back links: ""
circuit keys do: [ :src |
    (circuit at: src) getOuts do: [ :dest |
        | gate |
        gate := circuit at: dest ifAbsent: [circuit at: dest put: FlipFlop new].
        gate ifNotNil: [ gate addIn: src ]
    ]
].

"" Run machine: ""
pulses := Bag new.
1000 timesRepeat: [
    (circuit at: #broadcaster) setState: true.
    queue := OrderedCollection with: {false. #button. #broadcaster}.

    [queue isEmpty] whileFalse: [
        signal := queue removeFirst.
        level := signal first.
        src   := signal second.
        curr  := signal third.

        ""('%1 -%<high|low>2-> %3' % {src. level. curr}) displayNl.""

        pulses add: level.
        send := (circuit at: curr) pulse: level from: src.

        send ifNotNil: [
            outs := (circuit at: curr) getOuts.
            queue addAll: (outs collect: [:next | {send. curr. next}])
        ]
    ]
].

part1 := (pulses occurrencesOf: false) * (pulses occurrencesOf: true).
('Part 1: %1' % {part1}) displayNl."
CZ2gnQL9,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Wednesday 20th of December 2023 10:30:52 PM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1AKxSk9vs38aBF7GEDJxf8mNi-_NVRLQ9/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

912876"
BsCdxugt,snowybot good ++,coinwalk,JavaScript,Wednesday 20th of December 2023 09:55:59 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = ((kozster/240).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var james = ((Math.floor(kozster/tens))*tens);
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 0;
var toot = ((zeggar*1).toFixed(8));

function get(){
burgzie = document.getElementById('pct_balance').value;
if (burgzie>(james+(zeggar*uprd))){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart-1;
    james = parseFloat(burgzie);
}
if (fart<0){
fart = 0;
}
if ((burgzie<(james-(zeggar*dnwrd)))&&(fart==0)){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 2.9;
    fart = fart+1;
    james = parseFloat(burgzie);
    }
    if ((burgzie<(james-(zeggar*dnwrd)))&&(fart>=1)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
}
if (zeggar>=(kozster/10)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_hi').click();
setTimeout(() => get(), 1);
}
get();
"
4XgBQbHW,fbtc,coinwalk,JavaScript,Wednesday 20th of December 2023 09:55:26 PM CDT,"var kozster = parseFloat(document.getElementById('balance').innerHTML);
var junky = kozster;
var bear = true;
var beast = ((kozster/240).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.ceil(kozster/tens))*tens);
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 0;
var toot = ((zeggar*1).toFixed(8));
 
 
function get(){
burgzie = document.getElementById('balance').innerHTML;
if (burgzie>(james+(zeggar*uprd))){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart-1;
    james = parseFloat(burgzie);
}
if (fart<0){
fart = 0;
}
if ((burgzie<(james-(zeggar*dnwrd)))&&(fart==0)){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 2.9;
    fart = fart+1;
    james = parseFloat(burgzie);
    }
    if ((burgzie<(james-(zeggar*dnwrd)))&&(fart>=1)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
}
if (zeggar>=(kozster/10)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((zeggar*1).toFixed(8));
if ((burgzie==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = toot);
parseFloat(document.getElementById('win_amount').innerHTML = toot);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((burgzie!=junky)&&(!bear)){
junky = parseFloat(burgzie);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
90aANLxq,beacon,Ignius12,Lua,Wednesday 20th of December 2023 09:51:09 PM CDT,"pos = vector.new(gps.locate())
local modem = peripheral.find(""modem"")
rednet.open(""left"")

while true do
            rednet.broadcast(os.getComputerLabel() ..  "" "" .. 0 .. "" "" .. pos.x .. "" "" .. pos.y .."" "" .. pos.z .. "" "" .. ""Lost_as_Fuck"", ""miners"")
            sleep(5)
end"
f1uFc3Gv,second_商管,excellent940707,Python,Wednesday 20th of December 2023 09:32:17 PM CDT,"score_lt = [0, 0, 0 ,0]
num_lt = [0, 0, 0, 0]
with open('customer_feedback.txt', 'r') as file:
    for line in file:
        lt = line.strip().split(', ')
        name = -1
        for i in range(len(products)):
            if products[i]==lt[1]:
                name=i;
        num_lt[name] += 1
        for i in positive:
            if i==lt[2]:
                score_lt[name]+=1
        for i in negative:
            if i==lt[2]:
                score_lt[name]-=1
    for i in range(4):
        score_lt[i] /= num_lt[i]
        
with open('product_score.txt', 'w') as output:
    for i in range(len(products)):
        output.write(f""{products[i]} : {score_lt[i]}\n"")
        print(f""{products[i]} : {score_lt[i]}\n"")"
xn9BBs5c,first_商管,excellent940707,Python,Wednesday 20th of December 2023 09:27:05 PM CDT,"name_lt = []
sum_lt = []
with open('sales.txt', 'r') as file:
    for line in file:
        lt = line.strip().split(',')
        flag = 0
        for i in range(len(name_lt)):
            if name_lt[i]==lt[1]:
                sum_lt[i]+=int(lt[2])
                flag=1;
        if flag==0:
            name_lt.append(lt[1])
            sum_lt.append(int(lt[2]))

n = len(name_lt)
for i in range(n):
    for j in range(n-i-1):
        if name_lt[j]>name_lt[j+1]:
            name_lt[j], name_lt[j+1] = name_lt[j+1], name_lt[j]
            sum_lt[j], sum_lt[j+1] = sum_lt[j+1], sum_lt[j]
            

with open('sales_dec.txt', 'w') as output:
    for i in range(len(name_lt)):
        output.write(f""{name_lt[i]} : {sum_lt[i]}\n"")
        print(f""{name_lt[i]} : {sum_lt[i]}\n"")"
Tzd7vmjB,Transmit Test,Ignius12,Lua,Wednesday 20th of December 2023 08:14:01 PM CDT,"modem = peripheral.find(""modem"")
 
ids = {0,1,2, 9}
 
data = {}
for i=1, 6 do
    data[i] = 0
end
 
rednet.open(""left"")
 
selected = 1
num_turtles = table.getn(ids)

function update()
    while true do
        print(""updating"")
        local sender, message, protocol = rednet.receive(""miners"")
        if(sender ==  ids[selected]) then
            local k = 1
            for token in string.gmatch(message, ""[^%s]+"") do
                if(token == null) then
                    data[k] = 0
                else
                    data[k] = token
                end
                k = k + 1
            end
        end
        sleep(0.0001)
    end
end

while true do
	update()
	print(data)
end"
EPhkjXKE,Nigerian scammers [20-12-4/2023],bombaires,AIMMS,Wednesday 20th of December 2023 07:44:19 PM CDT,"<a href=""mailto:express.dhl@post.com"">express.dhl@post.com</a>
<a href=""mailto:dhlcustomerservice8@hotmail.com"">dhlcustomerservice8@hotmail.com</a>
<a href=""mailto:salihatsaeedusman8@gmail.com"">salihatsaeedusman8@gmail.com</a>
<a href=""mailto:s.a.l.ih.at.sa.e.ed.u.sman.8@gmail.com"">s.a.l.ih.at.sa.e.ed.u.sman.8@gmail.com</a>
<a href=""mailto:sa.liha.tsa.eedu.s.m.a.n8@gmail.com"">sa.liha.tsa.eedu.s.m.a.n8@gmail.com</a>
<a href=""mailto:s.a.li.h.atsaee.dusm.an.8@gmail.com"">s.a.li.h.atsaee.dusm.an.8@gmail.com</a>
<a href=""mailto:s.al.ihats.ae.edusm.a.n.8@gmail.com"">s.al.ihats.ae.edusm.a.n.8@gmail.com</a>
<a href=""mailto:sa.li.h.a.t.s.ae.edusman.8@gmail.com"">sa.li.h.a.t.s.ae.edusman.8@gmail.com</a>
<a href=""mailto:sali.h.a.t.s.ae.ed.u.sma.n8@gmail.com"">sali.h.a.t.s.ae.ed.u.sma.n8@gmail.com</a>
<a href=""mailto:s.a.li.h.a.tsa.ee.du.s.m.an.8@gmail.com"">s.a.li.h.a.tsa.ee.du.s.m.an.8@gmail.com</a>
<a href=""mailto:s.a.lihat.saeedu.s.man.8@gmail.com"">s.a.lihat.saeedu.s.man.8@gmail.com</a>
<a href=""mailto:s.alih.at.s.a.ee.d.u.s.m.an.8@gmail.com"">s.alih.at.s.a.ee.d.u.s.m.an.8@gmail.com</a>
<a href=""mailto:sa.l.i.ha.tsae.e.d.usman.8@gmail.com"">sa.l.i.ha.tsae.e.d.usman.8@gmail.com</a>
<a href=""mailto:s.al.i.hats.a.eedu.sm.an.8@gmail.com"">s.al.i.hats.a.eedu.sm.an.8@gmail.com</a>
<a href=""mailto:s.a.l.i.ha.t.s.a.ee.d.usm.an.8@gmail.com"">s.a.l.i.ha.t.s.a.ee.d.usm.an.8@gmail.com</a>
<a href=""mailto:s.al.iha.tsaeed.u.sm.an8@gmail.com"">s.al.iha.tsaeed.u.sm.an8@gmail.com</a>
<a href=""mailto:sal.i.h.atsa.eedu.s.m.an.8@gmail.com"">sal.i.h.atsa.eedu.s.m.an.8@gmail.com</a>
<a href=""mailto:sa.li.h.a.tsae.e.dus.ma.n8@gmail.com"">sa.li.h.a.tsae.e.dus.ma.n8@gmail.com</a>
<a href=""mailto:s.alihat.s.aeed.u.sm.an.8@gmail.com"">s.alihat.s.aeed.u.sm.an.8@gmail.com</a>
<a href=""mailto:sa.lih.a.tsa.eedu.s.m.a.n.8@gmail.com"">sa.lih.a.tsa.eedu.s.m.a.n.8@gmail.com</a>
<a href=""mailto:salihat.sae.edu.s.m.a.n.8@gmail.com"">salihat.sae.edu.s.m.a.n.8@gmail.com</a>
<a href=""mailto:sa.l.ih.a.tsa.e.edu.sm.an8@gmail.com"">sa.l.ih.a.tsa.e.edu.sm.an8@gmail.com</a>
<a href=""mailto:sal.i.h.a.t.s.a.e.e.d.u.sm.an.8@gmail.com"">sal.i.h.a.t.s.a.e.e.d.u.sm.an.8@gmail.com</a>
<a href=""mailto:sali.ha.ts.aeed.us.ma.n8@gmail.com"">sali.ha.ts.aeed.us.ma.n8@gmail.com</a>
<a href=""mailto:sal.i.hats.a.ee.d.u.sm.an.8@gmail.com"">sal.i.hats.a.ee.d.u.sm.an.8@gmail.com</a>
<a href=""mailto:sal.i.ha.t.s.a.ee.d.usma.n8@gmail.com"">sal.i.ha.t.s.a.ee.d.usma.n8@gmail.com</a>
<a href=""mailto:s.al.i.h.ats.aee.d.usm.a.n8@gmail.com"">s.al.i.h.ats.aee.d.usm.a.n8@gmail.com</a>
<a href=""mailto:s.ali.ha.ts.a.e.edu.s.m.a.n.8@gmail.com"">s.ali.ha.ts.a.e.edu.s.m.a.n.8@gmail.com</a>
<a href=""mailto:s.aliha.tsa.e.e.du.s.man8@gmail.com"">s.aliha.tsa.e.e.du.s.man8@gmail.com</a>
<a href=""mailto:s.ali.h.a.ts.a.e.ed.us.m.a.n8@gmail.com"">s.ali.h.a.ts.a.e.ed.us.m.a.n8@gmail.com</a>
<a href=""mailto:sa.l.i.h.a.ts.a.ee.d.us.m.a.n8@gmail.com"">sa.l.i.h.a.ts.a.ee.d.us.m.a.n8@gmail.com</a>
<a href=""mailto:s.ali.ha.tsa.eed.usm.an.8@gmail.com"">s.ali.ha.tsa.eed.usm.an.8@gmail.com</a>
<a href=""mailto:s.a.l.ih.at.saee.dusm.an.8@gmail.com"">s.a.l.ih.at.saee.dusm.an.8@gmail.com</a>
<a href=""mailto:s.a.l.iha.t.s.a.eed.usman8@gmail.com"">s.a.l.iha.t.s.a.eed.usman8@gmail.com</a>
<a href=""mailto:salih.at.sae.e.d.u.s.man8@gmail.com"">salih.at.sae.e.d.u.s.man8@gmail.com</a>
<a href=""mailto:sali.h.ats.ae.ed.u.s.m.an.8@gmail.com"">sali.h.ats.ae.ed.u.s.m.an.8@gmail.com</a>
<a href=""mailto:salih.atsae.e.d.usm.an8@gmail.com"">salih.atsae.e.d.usm.an8@gmail.com</a>
<a href=""mailto:sa.l.i.h.at.saee.dusman8@gmail.com"">sa.l.i.h.at.saee.dusman8@gmail.com</a>
<a href=""mailto:s.alihatsa.e.e.dusm.a.n.8@gmail.com"">s.alihatsa.e.e.dusm.a.n.8@gmail.com</a>
<a href=""mailto:s.alih.a.t.s.aee.d.u.sm.an.8@gmail.com"">s.alih.a.t.s.aee.d.u.sm.an.8@gmail.com</a>
<a href=""mailto:s.al.iha.tsa.e.e.du.sm.a.n8@gmail.com"">s.al.iha.tsa.e.e.du.sm.a.n8@gmail.com</a>
<a href=""mailto:sal.i.h.ats.a.eed.u.sm.an8@gmail.com"">sal.i.h.ats.a.eed.u.sm.an8@gmail.com</a>
<a href=""mailto:s.a.lih.at.saeed.u.s.man8@gmail.com"">s.a.lih.at.saeed.u.s.man8@gmail.com</a>
<a href=""mailto:s.a.l.ih.at.s.aeed.u.s.m.an8@gmail.com"">s.a.l.ih.at.s.aeed.u.s.m.an8@gmail.com</a>
<a href=""mailto:s.al.i.hat.sa.eedu.s.m.a.n.8@gmail.com"">s.al.i.hat.sa.eedu.s.m.a.n.8@gmail.com</a>
<a href=""mailto:sa.l.i.hat.s.ae.e.dus.ma.n.8@gmail.com"">sa.l.i.hat.s.ae.e.dus.ma.n.8@gmail.com</a>
<a href=""mailto:s.aliha.t.s.ae.edu.s.man8@gmail.com"">s.aliha.t.s.ae.edu.s.man8@gmail.com</a>
<a href=""mailto:sal.ihat.s.a.ee.du.sma.n8@gmail.com"">sal.ihat.s.a.ee.du.sma.n8@gmail.com</a>
<a href=""mailto:sa.lihats.aeedusma.n.8@gmail.com"">sa.lihats.aeedusma.n.8@gmail.com</a>
<a href=""mailto:sali.h.a.t.sa.e.ed.u.s.m.a.n.8@gmail.com"">sali.h.a.t.sa.e.ed.u.s.m.a.n.8@gmail.com</a>
<a href=""mailto:s.a.liha.ts.a.e.edu.sm.a.n.8@gmail.com"">s.a.liha.ts.a.e.edu.sm.a.n.8@gmail.com</a>
<a href=""mailto:sa.li.ha.t.s.aee.dus.ma.n8@gmail.com"">sa.li.ha.t.s.aee.dus.ma.n8@gmail.com</a>
<a href=""mailto:salih.a.tsaee.dusm.an.8@gmail.com"">salih.a.tsaee.dusm.an.8@gmail.com</a>
<a href=""mailto:s.a.l.i.h.at.s.a.eedu.sm.a.n.8@gmail.com"">s.a.l.i.h.at.s.a.eedu.sm.a.n.8@gmail.com</a>
<a href=""mailto:sali.ha.tsa.eed.us.man.8@gmail.com"">sali.ha.tsa.eed.us.man.8@gmail.com</a>
<a href=""mailto:salih.a.ts.a.eed.us.m.an.8@gmail.com"">salih.a.ts.a.eed.us.m.an.8@gmail.com</a>
<a href=""mailto:s.a.li.h.ats.aeed.u.s.man.8@gmail.com"">s.a.li.h.ats.aeed.u.s.man.8@gmail.com</a>
<a href=""mailto:s.al.ihats.ae.edu.s.ma.n8@gmail.com"">s.al.ihats.ae.edu.s.ma.n8@gmail.com</a>
<a href=""mailto:sa.li.h.a.t.sa.eed.u.sman.8@gmail.com"">sa.li.h.a.t.sa.eed.u.sman.8@gmail.com</a>
<a href=""mailto:sali.h.a.tsae.e.du.s.ma.n.8@gmail.com"">sali.h.a.tsae.e.du.s.ma.n.8@gmail.com</a>
<a href=""mailto:sa.lih.a.t.s.a.ee.du.s.m.a.n8@gmail.com"">sa.lih.a.t.s.a.ee.du.s.m.a.n8@gmail.com</a>
<a href=""mailto:sa.lihats.ae.e.d.usm.a.n8@gmail.com"">sa.lihats.ae.e.d.usm.a.n8@gmail.com</a>
<a href=""mailto:s.al.ih.atsa.e.ed.us.ma.n.8@gmail.com"">s.al.ih.atsa.e.ed.us.ma.n.8@gmail.com</a>
<a href=""mailto:s.al.i.hat.sa.ee.dus.m.a.n8@gmail.com"">s.al.i.hat.sa.ee.dus.m.a.n8@gmail.com</a>
<a href=""mailto:s.al.i.h.a.tsae.e.du.sm.an.8@gmail.com"">s.al.i.h.a.tsae.e.du.sm.an.8@gmail.com</a>
<a href=""mailto:sa.li.ha.t.sae.e.dus.m.an.8@gmail.com"">sa.li.ha.t.sae.e.dus.m.an.8@gmail.com</a>
<a href=""mailto:saliha.t.s.aee.d.u.sm.a.n8@gmail.com"">saliha.t.s.aee.d.u.sm.a.n8@gmail.com</a>
<a href=""mailto:sali.h.a.ts.ae.e.dus.man8@gmail.com"">sali.h.a.ts.ae.e.dus.man8@gmail.com</a>
<a href=""mailto:sa.l.iha.t.s.a.eedusm.an8@gmail.com"">sa.l.iha.t.s.a.eedusm.an8@gmail.com</a>
<a href=""mailto:s.a.li.h.at.s.ae.e.d.us.ma.n.8@gmail.com"">s.a.li.h.at.s.ae.e.d.us.ma.n.8@gmail.com</a>
<a href=""mailto:s.a.l.i.hatsaeed.u.s.m.a.n8@gmail.com"">s.a.l.i.hatsaeed.u.s.m.a.n8@gmail.com</a>
<a href=""mailto:sa.l.ih.at.s.ae.e.du.s.m.an.8@gmail.com"">sa.l.ih.at.s.ae.e.du.s.m.an.8@gmail.com</a>
<a href=""mailto:s.alihatsa.e.e.d.u.sm.a.n8@gmail.com"">s.alihatsa.e.e.d.u.sm.a.n8@gmail.com</a>
<a href=""mailto:s.a.lihat.s.ae.ed.usm.an.8@gmail.com"">s.a.lihat.s.ae.ed.usm.an.8@gmail.com</a>
<a href=""mailto:sa.lih.at.s.ae.edusma.n.8@gmail.com"">sa.lih.at.s.ae.edusma.n.8@gmail.com</a>
<a href=""mailto:sal.ihatsa.e.e.d.us.m.an8@gmail.com"">sal.ihatsa.e.e.d.us.m.an8@gmail.com</a>
<a href=""mailto:s.a.li.hats.a.eedu.sm.a.n.8@gmail.com"">s.a.li.hats.a.eedu.sm.a.n.8@gmail.com</a>
<a href=""mailto:s.al.i.ha.t.s.a.e.e.du.s.ma.n8@gmail.com"">s.al.i.ha.t.s.a.e.e.du.s.ma.n8@gmail.com</a>
<a href=""mailto:s.a.li.h.atsae.e.d.u.sman8@gmail.com"">s.a.li.h.atsae.e.d.u.sman8@gmail.com</a>
<a href=""mailto:sal.ihats.aee.dusm.a.n.8@gmail.com"">sal.ihats.aee.dusm.a.n.8@gmail.com</a>
<a href=""mailto:sal.ih.a.tsa.e.e.d.usman.8@gmail.com"">sal.ih.a.tsa.e.e.d.usman.8@gmail.com</a>
<a href=""mailto:sal.i.hatsa.eed.u.sm.an.8@gmail.com"">sal.i.hatsa.eed.u.sm.an.8@gmail.com</a>
<a href=""mailto:s.al.ih.a.t.sa.eedusm.an.8@gmail.com"">s.al.ih.a.t.sa.eedusm.an.8@gmail.com</a>
<a href=""mailto:sa.l.i.hats.aee.dus.m.a.n.8@gmail.com"">sa.l.i.hats.aee.dus.m.a.n.8@gmail.com</a>
<a href=""mailto:s.ali.hats.aeed.us.m.a.n8@gmail.com"">s.ali.hats.aeed.us.m.a.n8@gmail.com</a>
<a href=""mailto:sal.i.h.a.t.s.a.eed.usman.8@gmail.com"">sal.i.h.a.t.s.a.eed.usman.8@gmail.com</a>
<a href=""mailto:sal.i.ha.tsa.eed.usman8@gmail.com"">sal.i.ha.tsa.eed.usman8@gmail.com</a>
<a href=""mailto:s.a.l.ihat.s.a.eedusma.n8@gmail.com"">s.a.l.ihat.s.a.eedusma.n8@gmail.com</a>
<a href=""mailto:s.a.l.ih.a.t.sae.ed.u.s.m.an8@gmail.com"">s.a.l.ih.a.t.sae.ed.u.s.m.an8@gmail.com</a>
<a href=""mailto:s.alihats.a.ee.d.u.s.ma.n8@gmail.com"">s.alihats.a.ee.d.u.s.ma.n8@gmail.com</a>
<a href=""mailto:sa.l.ih.at.sa.e.e.d.usma.n8@gmail.com"">sa.l.ih.at.sa.e.e.d.usma.n8@gmail.com</a>
<a href=""mailto:sa.l.ih.at.saeed.us.man8@gmail.com"">sa.l.ih.at.saeed.us.man8@gmail.com</a>
<a href=""mailto:s.a.l.ih.at.s.a.ee.d.usm.a.n.8@gmail.com"">s.a.l.ih.at.s.a.ee.d.usm.a.n.8@gmail.com</a>
<a href=""mailto:s.a.li.h.ats.a.eed.u.s.man.8@gmail.com"">s.a.li.h.ats.a.eed.u.s.man.8@gmail.com</a>
<a href=""mailto:s.alihat.s.a.ee.d.u.s.man.8@gmail.com"">s.alihat.s.a.ee.d.u.s.man.8@gmail.com</a>
<a href=""mailto:sal.ih.a.t.s.ae.ed.u.sma.n.8@gmail.com"">sal.ih.a.t.s.ae.ed.u.sma.n.8@gmail.com</a>
<a href=""mailto:s.al.i.hat.s.ae.edu.s.m.an8@gmail.com"">s.al.i.hat.s.ae.edu.s.m.an8@gmail.com</a>
<a href=""mailto:s.ali.hat.s.ae.edusm.a.n8@gmail.com"">s.ali.hat.s.ae.edusm.a.n8@gmail.com</a>
<a href=""mailto:sa.l.i.hatsaee.d.u.s.m.a.n8@gmail.com"">sa.l.i.hatsaee.d.u.s.m.a.n8@gmail.com</a>
<a href=""mailto:s.aliha.t.saee.dusman.8@gmail.com"">s.aliha.t.saee.dusman.8@gmail.com</a>
<a href=""mailto:salihats.a.eed.u.s.man8@gmail.com"">salihats.a.eed.u.s.man8@gmail.com</a>
<a href=""mailto:s.a.l.i.h.a.t.s.a.eedu.sm.an8@gmail.com"">s.a.l.i.h.a.t.s.a.eedu.sm.an8@gmail.com</a>
<a href=""mailto:sali.hat.sa.ee.d.us.man.8@gmail.com"">sali.hat.sa.ee.d.us.man.8@gmail.com</a>
<a href=""mailto:s.a.li.h.atsa.e.e.d.u.sma.n8@gmail.com"">s.a.li.h.atsa.e.e.d.u.sma.n8@gmail.com</a>
<a href=""mailto:s.a.lihatsa.e.edusma.n8@gmail.com"">s.a.lihatsa.e.edusma.n8@gmail.com</a>
<a href=""mailto:s.alih.at.s.aee.dusman8@gmail.com"">s.alih.at.s.aee.dusman8@gmail.com</a>
<a href=""mailto:s.ali.hats.a.e.ed.us.m.an.8@gmail.com"">s.ali.hats.a.e.ed.us.m.an.8@gmail.com</a>
<a href=""mailto:salih.a.t.sa.eed.u.sm.a.n.8@gmail.com"">salih.a.t.sa.eed.u.sm.a.n.8@gmail.com</a>
<a href=""mailto:s.alihat.s.ae.e.d.us.m.an8@gmail.com"">s.alihat.s.ae.e.d.us.m.an8@gmail.com</a>
<a href=""mailto:sali.h.at.sa.e.ed.us.m.a.n.8@gmail.com"">sali.h.at.sa.e.ed.us.m.a.n.8@gmail.com</a>
<a href=""mailto:s.a.l.ih.a.tsae.ed.u.s.m.an8@gmail.com"">s.a.l.ih.a.tsae.ed.u.s.m.an8@gmail.com</a>
<a href=""mailto:salih.a.t.saee.du.s.ma.n.8@gmail.com"">salih.a.t.saee.du.s.ma.n.8@gmail.com</a>
<a href=""mailto:s.ali.h.a.t.s.a.e.edusma.n.8@gmail.com"">s.ali.h.a.t.s.a.e.edusma.n.8@gmail.com</a>
<a href=""mailto:s.ali.h.a.t.s.a.e.edu.s.m.an8@gmail.com"">s.ali.h.a.t.s.a.e.edu.s.m.an8@gmail.com</a>
<a href=""mailto:sa.l.ih.at.s.ae.edusm.an8@gmail.com"">sa.l.ih.at.s.ae.edusm.an8@gmail.com</a>
<a href=""mailto:sali.h.atsae.edus.m.a.n.8@gmail.com"">sali.h.atsae.edus.m.a.n.8@gmail.com</a>
<a href=""mailto:sal.i.h.atsa.eedus.man.8@gmail.com"">sal.i.h.atsa.eedus.man.8@gmail.com</a>
<a href=""mailto:s.a.l.ihats.aee.d.u.sm.a.n8@gmail.com"">s.a.l.ihats.aee.d.u.sm.a.n8@gmail.com</a>
<a href=""mailto:sali.ha.tsae.edusm.a.n.8@gmail.com"">sali.ha.tsae.edusm.a.n.8@gmail.com</a>
<a href=""mailto:sali.hats.aeedus.m.a.n8@gmail.com"">sali.hats.aeedus.m.a.n8@gmail.com</a>
<a href=""mailto:s.a.lih.a.t.s.ae.ed.u.sm.an8@gmail.com"">s.a.lih.a.t.s.ae.ed.u.sm.an8@gmail.com</a>
<a href=""mailto:sal.iha.tsa.e.e.d.usma.n8@gmail.com"">sal.iha.tsa.e.e.d.usma.n8@gmail.com</a>
<a href=""mailto:sal.i.hat.s.a.ee.du.s.m.an8@gmail.com"">sal.i.hat.s.a.ee.du.s.m.an8@gmail.com</a>
<a href=""mailto:sal.i.hats.ae.ed.usma.n.8@gmail.com"">sal.i.hats.ae.ed.usma.n.8@gmail.com</a>
<a href=""mailto:s.a.l.ih.a.t.s.ae.edu.s.m.a.n.8@gmail.com"">s.a.l.ih.a.t.s.ae.edu.s.m.a.n.8@gmail.com</a>
<a href=""mailto:s.al.i.h.ats.a.eed.u.s.man.8@gmail.com"">s.al.i.h.ats.a.eed.u.s.man.8@gmail.com</a>
<a href=""mailto:s.alih.ats.ae.e.du.sm.an8@gmail.com"">s.alih.ats.ae.e.du.sm.an8@gmail.com</a>
<a href=""mailto:sal.i.h.atsaee.dusma.n8@gmail.com"">sal.i.h.atsaee.dusma.n8@gmail.com</a>
<a href=""mailto:s.a.lihat.sa.e.ed.us.m.an8@gmail.com"">s.a.lihat.sa.e.ed.us.m.an8@gmail.com</a>
<a href=""mailto:salih.ats.aeedu.sma.n8@gmail.com"">salih.ats.aeedu.sma.n8@gmail.com</a>
<a href=""mailto:sal.i.ha.t.s.a.e.edus.m.an8@gmail.com"">sal.i.ha.t.s.a.e.edus.m.an8@gmail.com</a>
<a href=""mailto:s.alih.a.t.sa.eedu.s.man.8@gmail.com"">s.alih.a.t.sa.eedu.s.man.8@gmail.com</a>
<a href=""mailto:sa.li.h.atsa.ee.du.s.ma.n.8@gmail.com"">sa.li.h.atsa.ee.du.s.ma.n.8@gmail.com</a>
<a href=""mailto:sa.l.ih.at.s.a.e.ed.usman8@gmail.com"">sa.l.ih.at.s.a.e.ed.usman8@gmail.com</a>
<a href=""mailto:sal.i.hatsa.e.e.d.u.s.man8@gmail.com"">sal.i.hatsa.e.e.d.u.s.man8@gmail.com</a>
<a href=""mailto:s.a.li.ha.tsae.e.dusman8@gmail.com"">s.a.li.ha.tsae.e.dusman8@gmail.com</a>
<a href=""mailto:s.al.ih.atsa.ee.d.u.sm.an8@gmail.com"">s.al.ih.atsa.ee.d.u.sm.an8@gmail.com</a>
<a href=""mailto:sa.l.i.ha.ts.aeed.usm.an.8@gmail.com"">sa.l.i.ha.ts.aeed.usm.an.8@gmail.com</a>
<a href=""mailto:salihat.s.ae.edusm.a.n.8@gmail.com"">salihat.s.ae.edusm.a.n.8@gmail.com</a>
<a href=""mailto:sa.lih.atsa.e.ed.u.s.ma.n.8@gmail.com"">sa.lih.atsa.e.ed.u.s.ma.n.8@gmail.com</a>
<a href=""mailto:salihat.sa.e.e.d.u.sma.n.8@gmail.com"">salihat.sa.e.e.d.u.sma.n.8@gmail.com</a>
<a href=""mailto:sali.h.atsaee.dus.ma.n.8@gmail.com"">sali.h.atsaee.dus.ma.n.8@gmail.com</a>
<a href=""mailto:s.a.l.i.hat.s.ae.e.d.us.ma.n.8@gmail.com"">s.a.l.i.hat.s.ae.e.d.us.ma.n.8@gmail.com</a>
<a href=""mailto:sal.i.hat.sa.ee.du.sma.n.8@gmail.com"">sal.i.hat.sa.ee.du.sma.n.8@gmail.com</a>
<a href=""mailto:s.alih.at.s.a.e.ed.usman.8@gmail.com"">s.alih.at.s.a.e.ed.usman.8@gmail.com</a>
<a href=""mailto:sa.lih.at.sa.e.e.d.usm.a.n8@gmail.com"">sa.lih.at.sa.e.e.d.usm.a.n8@gmail.com</a>
<a href=""mailto:s.al.i.ha.t.s.a.ee.d.us.m.an.8@gmail.com"">s.al.i.ha.t.s.a.ee.d.us.m.an.8@gmail.com</a>
<a href=""mailto:s.al.i.hat.s.ae.e.dusm.a.n8@gmail.com"">s.al.i.hat.s.ae.e.dusm.a.n8@gmail.com</a>
<a href=""mailto:sa.l.ih.a.t.s.a.e.edus.man.8@gmail.com"">sa.l.ih.a.t.s.a.e.edus.man.8@gmail.com</a>
<a href=""mailto:s.aliha.ts.ae.ed.usma.n.8@gmail.com"">s.aliha.ts.ae.ed.usma.n.8@gmail.com</a>
<a href=""mailto:s.a.lih.a.t.s.a.ee.du.s.ma.n8@gmail.com"">s.a.lih.a.t.s.a.ee.du.s.ma.n8@gmail.com</a>
<a href=""mailto:s.al.i.h.atsae.edusma.n8@gmail.com"">s.al.i.h.atsae.edusma.n8@gmail.com</a>
<a href=""mailto:salihatsae.e.du.s.ma.n8@gmail.com"">salihatsae.e.du.s.ma.n8@gmail.com</a>
<a href=""mailto:saliha.t.s.a.ee.d.us.m.a.n8@gmail.com"">saliha.t.s.a.ee.d.us.m.a.n8@gmail.com</a>
<a href=""mailto:sal.i.h.a.t.s.aeedu.sm.an8@gmail.com"">sal.i.h.a.t.s.aeedu.sm.an8@gmail.com</a>
<a href=""mailto:sal.ih.a.t.sa.ee.d.us.man.8@gmail.com"">sal.ih.a.t.sa.ee.d.us.man.8@gmail.com</a>
<a href=""mailto:s.al.ih.a.t.sa.ee.dus.man8@gmail.com"">s.al.ih.a.t.sa.ee.dus.man8@gmail.com</a>
<a href=""mailto:sa.l.ihatsae.ed.us.man8@gmail.com"">sa.l.ihatsae.ed.us.man8@gmail.com</a>
<a href=""mailto:sa.lih.a.t.sae.edus.m.an.8@gmail.com"">sa.lih.a.t.sae.edus.m.an.8@gmail.com</a>
<a href=""mailto:saliha.ts.ae.e.dusman8@gmail.com"">saliha.ts.ae.e.dusman8@gmail.com</a>
<a href=""mailto:s.al.i.h.a.tsa.e.ed.u.sm.a.n.8@gmail.com"">s.al.i.h.a.tsa.e.ed.u.sm.a.n.8@gmail.com</a>
<a href=""mailto:s.a.li.hat.sa.ee.du.sm.an8@gmail.com"">s.a.li.hat.sa.ee.du.sm.an8@gmail.com</a>
<a href=""mailto:s.a.l.i.hats.aee.dus.m.an8@gmail.com"">s.a.l.i.hats.aee.dus.m.an8@gmail.com</a>
<a href=""mailto:sa.l.i.h.a.tsaee.du.s.m.a.n8@gmail.com"">sa.l.i.h.a.tsaee.du.s.m.a.n8@gmail.com</a>
<a href=""mailto:sa.l.ihatsa.e.e.dus.man8@gmail.com"">sa.l.ihatsa.e.e.dus.man8@gmail.com</a>
<a href=""mailto:s.a.l.iha.t.s.a.e.edus.m.an8@gmail.com"">s.a.l.iha.t.s.a.e.edus.m.an8@gmail.com</a>
<a href=""mailto:sa.l.iha.tsae.e.d.u.s.ma.n8@gmail.com"">sa.l.iha.tsae.e.d.u.s.ma.n8@gmail.com</a>
<a href=""mailto:sa.l.i.h.at.s.aeed.us.m.a.n8@gmail.com"">sa.l.i.h.at.s.aeed.us.m.a.n8@gmail.com</a>
<a href=""mailto:s.al.ih.a.ts.aee.du.s.m.an8@gmail.com"">s.al.ih.a.ts.aee.du.s.m.an8@gmail.com</a>
<a href=""mailto:s.al.i.h.at.sa.e.edu.s.ma.n8@gmail.com"">s.al.i.h.at.sa.e.edu.s.ma.n8@gmail.com</a>
<a href=""mailto:s.alih.at.sa.eed.u.s.m.an8@gmail.com"">s.alih.at.sa.eed.u.s.m.an8@gmail.com</a>
<a href=""mailto:s.a.l.ih.a.t.s.aee.du.s.m.a.n.8@gmail.com"">s.a.l.ih.a.t.s.aee.du.s.m.a.n.8@gmail.com</a>
<a href=""mailto:sa.li.hatsa.ee.dus.man.8@gmail.com"">sa.li.hatsa.ee.dus.man.8@gmail.com</a>
<a href=""mailto:sa.l.i.h.ats.a.eed.us.man.8@gmail.com"">sa.l.i.h.ats.a.eed.us.man.8@gmail.com</a>
<a href=""mailto:s.alihat.s.aeedu.sm.a.n.8@gmail.com"">s.alihat.s.aeedu.sm.a.n.8@gmail.com</a>
<a href=""mailto:sal.i.ha.t.s.a.eedus.m.a.n8@gmail.com"">sal.i.ha.t.s.a.eedus.m.a.n8@gmail.com</a>
<a href=""mailto:s.al.i.h.a.tsaee.d.u.s.man8@gmail.com"">s.al.i.h.a.tsaee.d.u.s.man8@gmail.com</a>
<a href=""mailto:sal.ih.atsaee.d.us.ma.n8@gmail.com"">sal.ih.atsaee.d.us.ma.n8@gmail.com</a>
<a href=""mailto:s.a.li.ha.t.s.a.e.e.du.sma.n.8@gmail.com"">s.a.li.ha.t.s.a.e.e.du.sma.n.8@gmail.com</a>
<a href=""mailto:sal.i.hats.a.e.e.d.u.sma.n8@gmail.com"">sal.i.hats.a.e.e.d.u.sma.n8@gmail.com</a>
<a href=""mailto:s.ali.hat.s.aeedu.sm.an.8@gmail.com"">s.ali.hat.s.aeedu.sm.an.8@gmail.com</a>
<a href=""mailto:sal.ihats.a.eedusma.n8@gmail.com"">sal.ihats.a.eedusma.n8@gmail.com</a>
<a href=""mailto:s.ali.h.ats.aeedu.s.ma.n8@gmail.com"">s.ali.h.ats.aeedu.s.ma.n8@gmail.com</a>
<a href=""mailto:sa.lihat.s.ae.edu.s.ma.n.8@gmail.com"">sa.lihat.s.ae.edu.s.ma.n.8@gmail.com</a>
<a href=""mailto:saliha.t.sa.e.edu.sma.n8@gmail.com"">saliha.t.sa.e.edu.sma.n8@gmail.com</a>
<a href=""mailto:sal.ih.a.t.saee.d.us.man.8@gmail.com"">sal.ih.a.t.saee.d.us.man.8@gmail.com</a>
<a href=""mailto:sali.hat.sa.e.ed.u.s.man.8@gmail.com"">sali.hat.sa.e.ed.u.s.man.8@gmail.com</a>
<a href=""mailto:sa.lih.at.s.aee.d.u.s.man.8@gmail.com"">sa.lih.at.s.aee.d.u.s.man.8@gmail.com</a>
<a href=""mailto:sal.iha.t.s.ae.e.d.us.m.an8@gmail.com"">sal.iha.t.s.ae.e.d.us.m.an8@gmail.com</a>
<a href=""mailto:s.a.l.i.hatsae.e.dusm.a.n.8@gmail.com"">s.a.l.i.hatsae.e.dusm.a.n.8@gmail.com</a>
<a href=""mailto:sal.ih.atsaee.d.us.man8@gmail.com"">sal.ih.atsaee.d.us.man8@gmail.com</a>
<a href=""mailto:s.al.iha.ts.ae.e.d.u.sma.n8@gmail.com"">s.al.iha.ts.ae.e.d.u.sma.n8@gmail.com</a>
<a href=""mailto:sal.iha.ts.a.e.e.d.u.sma.n.8@gmail.com"">sal.iha.ts.a.e.e.d.u.sma.n.8@gmail.com</a>
<a href=""mailto:s.a.li.h.a.tsae.ed.u.s.m.a.n8@gmail.com"">s.a.li.h.a.tsae.ed.u.s.m.a.n8@gmail.com</a>
<a href=""mailto:s.al.ih.at.s.a.e.ed.us.m.a.n8@gmail.com"">s.al.ih.at.s.a.e.ed.us.m.a.n8@gmail.com</a>
<a href=""mailto:s.ali.h.ats.a.e.e.dusm.an8@gmail.com"">s.ali.h.ats.a.e.e.dusm.an8@gmail.com</a>
<a href=""mailto:s.ali.hatsae.e.d.u.sm.an.8@gmail.com"">s.ali.hatsae.e.d.u.sm.an.8@gmail.com</a>
<a href=""mailto:s.a.li.h.at.s.a.e.edu.sma.n.8@gmail.com"">s.a.li.h.at.s.a.e.edu.sma.n.8@gmail.com</a>
<a href=""mailto:s.a.lihat.saeed.u.sm.an8@gmail.com"">s.a.lihat.saeed.u.sm.an8@gmail.com</a>
<a href=""mailto:s.a.lihats.aeed.us.man8@gmail.com"">s.a.lihats.aeed.us.man8@gmail.com</a>
<a href=""mailto:s.al.iha.tsae.e.d.u.sman8@gmail.com"">s.al.iha.tsae.e.d.u.sman8@gmail.com</a>
<a href=""mailto:s.al.iha.t.s.ae.e.d.usm.an.8@gmail.com"">s.al.iha.t.s.ae.e.d.usm.an.8@gmail.com</a>
<a href=""mailto:s.a.l.ih.a.t.sae.edusman8@gmail.com"">s.a.l.ih.a.t.sae.edusman8@gmail.com</a>"
wzB5WWTn,Kode sederhana pembaca suhu modul MAX6755,cisco404,C++,Wednesday 20th of December 2023 07:43:15 PM CDT,"#include <MAX6675.h>

MAX6675 sensor(A0, A1, A2);

void setup() {
  Serial.begin(9600);
}

void loop() {
  float suhu = sensor.readTempC();
  Serial.println(suhu);
  delay(1000);
}"
NHRz1U6f,Main,mingming1221,Java,Wednesday 20th of December 2023 07:35:02 PM CDT,"
import java.util.Arrays;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.io.*;

class SecurityModule {
  private Map<String, String> userAccounts;

  public SecurityModule() {
    userAccounts = new HashMap<>();
  }

  public void createAccount(String username, String password, String name) {
    userAccounts.put(username, password);
    System.out.println(""Account created successfully for user: "" + username);
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""users.txt"", true));
      out.write(username + "","" + password + "","" + name + ""\n"");
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

  }

  public boolean valid(String user, String pass) {
    try (BufferedReader br = new BufferedReader(new FileReader(""users.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user) && parts[1].equals(pass)) {
          userAccounts.put(""username"", user);
          userAccounts.put(""password"", pass);
          userAccounts.put(""name"", parts[2]);
          return true;
        }
      }
      br.close();
    } catch (Exception e) {
    }
    return false;
  }

  public boolean login(String username, String password) {
    /*
     * if (userAccounts.containsKey(username) &&
     * userAccounts.get(username).equals(password)) {
     * System.out.println(""Login successful for user: "" + username);
     * return true;
     * } else {
     * System.out.println(""Invalid username or password. Login failed."");
     * return false;
     * }
     */
    if (valid(username, password)) {
      System.out.println(""Login successful for user: "" + username);
      return true;
    } else {
      System.out.println(""Invalid username or password. Login failed."");

    }
    return false;
  }

  public void updateAccount(String username, String newPassword, String name) {
    String all = """";

    try (BufferedReader br = new BufferedReader(new FileReader(""users.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (userAccounts.get(""username"").equals(parts[0])) {
          userAccounts.put(""username"", username);
          userAccounts.put(""password"", newPassword);
          userAccounts.put(""name"", name);
          all += username + "","" + newPassword + "","" + name + ""\n"";
        } else {
          all += line + ""\n"";
        }

      }
      br.close();
    } catch (Exception e) {
    }
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""users.txt"", false));
      out.write(all);
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

    System.out.println(""Account updated successfully for user: "" + username);

  }

  public void retriveData() {
    try {
      File myObj = new File(""users.txt"");
      if (myObj.createNewFile()) {
        // parameter to read it
        BufferedWriter out = new BufferedWriter(
            new FileWriter(""users.txt"", true));
        out.write(""admin,admin,admin\n"");
        out.close();
      } else {

      }

    } catch (IOException e) {
      System.out.println(""An error occurred."");
      e.printStackTrace();
    }
    try {
      File myObj = new File(""expense.txt"");
      if (myObj.createNewFile()) {
      } else {
      }
    } catch (IOException e1) {
      System.out.println(""An error occurred."");
      e1.printStackTrace();
    }
    try {
      File myObj = new File(""income.txt"");
      if (myObj.createNewFile()) {
      } else {
      }
    } catch (IOException e11) {
      System.out.println(""An error occurred."");
      e11.printStackTrace();
    }
    try {
      File myObj = new File(""budget.txt"");
      if (myObj.createNewFile()) {
      } else {
      }
    } catch (IOException e1) {
      System.out.println(""An error occurred."");
      e1.printStackTrace();
    }
  }

  public void retrieve() {
    System.out.println(""Name: "" + userAccounts.get(""name""));
    System.out.println(""username: "" + userAccounts.get(""username""));
    System.out.println(""password: "" + userAccounts.get(""password""));
  }

  public String getUsername() {
    return userAccounts.get(""username"");
  }
}

class ExpenseModule {
  private String[] expenseCategories;
  private double[] expenses;

  // Modified constructor to accept initial sizes
  public ExpenseModule(int size) {
    expenseCategories = new String[size];
    expenses = new double[size];
  }

  // Constructor to initialize with predefined values
  public ExpenseModule(String[] initialCategories, double[] initialExpenses) {
    if (initialCategories.length != initialExpenses.length) {
      throw new IllegalArgumentException(""Initial categories and expenses arrays must have the same length."");
    }

    expenseCategories = Arrays.copyOf(initialCategories, initialCategories.length);
    expenses = Arrays.copyOf(initialExpenses, initialExpenses.length);
  }

  public void logExpense(String category, double amount, String user, String date, String description) {
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""expense.txt"", true));
      out.write(user + "","" + category + "","" + amount + "","" + date + "","" + description + ""\n"");
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }
    System.out.println(""Expense logged successfully for new category '"" + category + ""'."");

  }

  public boolean check(String categ) {
    try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (categ.equals(parts[1])) {
          return true;
        }
      }
      br.close();
    } catch (Exception e) {
    }
    return false;
  }

  public void updateExpense(String rep, String category, double newAmount, String user, String date, String descrip) {
    String all = """";
    try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (rep.equals(parts[1])) {

          all += user + "","" + category + "","" + newAmount + "","" + date + "","" + descrip + ""\n"";
        } else {
          all += line + ""\n"";
        }

      }
      br.close();
    } catch (Exception e) {
    }
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""expense.txt"", false));
      out.write(all);
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

    System.out.println(""Expense updated successfully for category '"" + category + ""'."");
  }

  public void deleteExpense(String rep) {
    String all = """";
    try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (rep.equals(parts[1])) {

          all += """";
        } else {
          all += line + ""\n"";
        }

      }
      br.close();
    } catch (Exception e) {
    }
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""expense.txt"", false));
      out.write(all);
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

    System.out.println(""Expense deleted successfully for category '"" + rep + ""'."");
  }

  public void trackExpenses(String user) {
    System.out.println(""Expense Tracking:"");
    try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user)) {
          System.out.println(""Category: "" + parts[1] + ""\t"" + ""Amount: "" + parts[2] + ""\tDate: "" + parts[3]
              + ""\nDescription: "" + parts[4]);

        }
      }
      br.close();
    } catch (Exception e) {
    }

  }

  public void searchExpenses(String user, String categ) {
    System.out.println(""Expense Tracking (Search result):"");
    try (BufferedReader br = new BufferedReader(new FileReader(""expense.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user) && parts[1].equals(categ)) {
          System.out.println(""Category: "" + parts[1] + ""\t"" + ""Amount: "" + parts[2] + ""\tDate: "" + parts[3]
              + ""\nDescription: "" + parts[4]);

        }
      }
      br.close();
    } catch (Exception e) {
    }

  }
}

class IncomeModule {
  private double totalIncome;

  public IncomeModule() {
    totalIncome = 0.0;
  }

  /*
   * public void addIncome(double amount) {
   * totalIncome += amount;
   * System.out.println(""Income added successfully."");
   * }
   */

  public void updateIncome(double newAmount, String user) {
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""income.txt"", true));
      out.write(user + "","" + newAmount + ""\n"");
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }
    System.out.println(""Income updated successfully."");
  }

  public void trackIncome(String user) {
    double in = 0.0;
    try (BufferedReader br = new BufferedReader(new FileReader(""income.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user)) {
          // System.out.println(""Total Income: P"" + parts[1]);
          in = Double.parseDouble(parts[1]);
        }
      }
      br.close();
    } catch (Exception e) {
    }
    System.out.println(""Total Income: P"" + in);
  }
}

class BudgetPlanModule {
  private String[] budgetCategories;
  private double[] budgetPlans;
  private Map<String, String> budgetDates; // New map to store dates for budget categories

  public BudgetPlanModule(int size) {
    budgetCategories = new String[size];
    budgetPlans = new double[size];
    budgetDates = new HashMap<>();
  }

  public void addBudgetPlan(String category, double amount, String date, String user, String descript) {
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""budget.txt"", true));
      out.write(user + "","" + date + "","" + category + "","" + amount + "","" + descript + ""\n"");
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }
    System.out.println(""Budget plan added successfully for category '"" + category + ""'."");
    /*
     * System.out.println(""Budget plan added successfully for category '"" + category
     * + ""'."");
     * } else {
     * System.out.println(""Category already exists. Budget plan add failed."");
     * }
     */
  }

  public void updateBudgetPlan(String rep, String category, double newAmount, String newDate, String user,
      String descript) {
    String all = """";
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (rep.equals(parts[2])) {

          all += user + "","" + newDate + "","" + category + "","" + newAmount + "","" + descript + ""\n"";
        } else {
          all += line + ""\n"";
        }

      }
      br.close();
    } catch (Exception e) {
    }
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""budget.txt"", false));
      out.write(all);
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

    System.out.println(""Budget plan updated successfully for category '"" + category + ""'."");

  }

  public void deleteBudgetPlan(String rep) {
    String all = """";
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (rep.equals(parts[2])) {

          all += """";
        } else {
          all += line + ""\n"";
        }

      }
      br.close();
    } catch (Exception e) {
    }
    try {
      BufferedWriter out = new BufferedWriter(
          new FileWriter(""budget.txt"", false));
      out.write(all);
      out.close();
    } catch (Exception e) {
      System.out.println(""Cannot write to file"");
    }

    System.out.println(""Budget plan deleted successfully for category '"" + rep + ""'."");

  }

  public boolean check(String categ) {
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {

        // System.out.println(line);
        String[] parts = line.split("","");
        if (categ.equals(parts[2])) {
          return true;
        }
      }
      br.close();
    } catch (Exception e) {
    }
    return false;
  }

  public void showBudgetPlans(String user) {
    System.out.println(""Budget Plans:"");
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user)) {
          System.out.println(""Date: "" + parts[1] + ""\t"" + ""Category: "" + parts[2] + ""\tBudget: "" + parts[3]
              + ""\nDescription: "" + parts[4]);

        }
      }
    } catch (Exception e) {
    }
  }

  public void findBudgetPlans(String user, String categ) {
    System.out.println(""Budget Plans(Search result):"");
    try (BufferedReader br = new BufferedReader(new FileReader(""budget.txt""))) {
      String line;
      while ((line = br.readLine()) != null) {
        // System.out.println(line);
        String[] parts = line.split("","");
        if (parts[0].equals(user) && parts[2].equals(categ)) {
          System.out.println(""Date: "" + parts[1] + ""\t"" + ""Category: "" + parts[2] + ""\tBudget: "" + parts[3]
              + ""\nDescription: "" + parts[4]);

        }
      }
    } catch (Exception e) {
    }
  }
}

class UserInfoModule {
  private ExpenseModule expenseModule;
  private IncomeModule incomeModule;
  private BudgetPlanModule budgetPlanModule;

  public UserInfoModule(ExpenseModule expenseModule, IncomeModule incomeModule, BudgetPlanModule budgetPlanModule) {
    this.expenseModule = expenseModule;
    this.incomeModule = incomeModule;
    this.budgetPlanModule = budgetPlanModule;
  }

  /*
   * public void showUserInformation() {
   * System.out.println(""===== User Information ====="");
   * System.out.println(""Expenses:"");
   * expenseModule.trackExpenses();
   * System.out.println(""\nIncomes:"");
   * incomeModule.trackIncome();
   * System.out.println(""\nBudget Plans:"");
   * budgetPlanModule.showBudgetPlans();
   * System.out.println(""==========================="");
   * }
   */
}

public class Main

{
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    SecurityModule securityModule = new SecurityModule();
    ExpenseModule expenseModule = new ExpenseModule(3);
    IncomeModule incomeModule = new IncomeModule();
    BudgetPlanModule budgetPlanModule = new BudgetPlanModule(2);
    UserInfoModule userInfoModule = new UserInfoModule(expenseModule, incomeModule, budgetPlanModule);
    securityModule.retriveData();
    boolean exit = false;

    while (true) {
      System.out.println(""===== Welcome to Budget Management System ====="");
      /*
       * Default user:
       * username: admin
       * password: admin
       * if program fun for first time
       */
      System.out.println(""Please Login: "");
      System.out.print(""Enter username: "");
      String loginUsername = scanner.nextLine();
      System.out.print(""Enter password: "");
      String loginPassword = scanner.nextLine();
      if (securityModule.login(loginUsername, loginPassword)) {
        exit = false;
        while (!exit) {
          System.out.println(""===== Budget Management System ====="");
          System.out.println(""1. Account Management"");
          System.out.println(""2. Expense Module"");
          System.out.println(""3. Income Module"");
          System.out.println(""4. Budget Plan Module"");
          System.out.println(""5. View all information"");

          // System.out.println(""5. User Information"");
          System.out.println(""0. Logout"");
          System.out.print(""Enter your choice: "");

          int choice = scanner.nextInt();
          scanner.nextLine(); // Consume the newline character

          switch (choice) {
            case 1:
              handleSecurityModule(securityModule, scanner);
              break;
            case 2:
              handleExpenseModule(expenseModule, scanner, securityModule.getUsername());
              break;
            case 3:
              handleIncomeModule(incomeModule, scanner, securityModule.getUsername());
              break;
            case 4:
              handleBudgetPlanModule(budgetPlanModule, scanner, securityModule.getUsername());

              break;
            case 5:
              System.out.println(""===== User Information ====="");
              // System.out.println(""Expenses:"");
              System.out.println(""Information:"");
              securityModule.retrieve();
              expenseModule.trackExpenses(securityModule.getUsername());
              System.out.println(""\nIncomes:"");
              incomeModule.trackIncome(securityModule.getUsername());
              // System.out.println(""\nBudget Plans:"");
              budgetPlanModule.showBudgetPlans(securityModule.getUsername());
              System.out.println(""==========================="");
              break;

            case 0:
              exit = true;
              System.out.println(""Logouting.."");
              break;
            default:
              System.out.println(""Invalid choice. Please try again."");
          }
        }
        System.out.println("""");
      }
      /*
       * }/*else if(s.equals(""2"")){
       * System.out.print(""Enter name: "");
       * String name = scanner.nextLine();
       * System.out.print(""Enter username: "");
       * String username = scanner.nextLine();
       * System.out.print(""Enter password: "");
       * String password = scanner.nextLine();
       * securityModule.createAccount(username, password, name);
       * 
       * }
       *//*
          * else{
          * System.out.println(""Invalid input"");
          * }
          */
    }

    // scanner.close();
  }

  private static void handleSecurityModule(SecurityModule securityModule, Scanner scanner) {
    boolean backToMenu = false;

    while (!backToMenu) {
      System.out.println(""===== Security Module ====="");

      // System.out.println(""2. Login"");
      System.out.println(""1. Update User information"");
      System.out.println(""2. View User information"");
      System.out.println(""3. Create Account"");
      System.out.println(""0. Back to Main Menu"");
      System.out.print(""Enter your choice: "");

      int choice = scanner.nextInt();
      scanner.nextLine(); // Consume the newline character

      switch (choice) {

        case 1:
          System.out.print(""Enter new name: "");
          String name = scanner.nextLine();
          System.out.print(""Enter new username: "");
          String updateUsername = scanner.nextLine();
          System.out.print(""Enter new password: "");
          String newPassword = scanner.nextLine();
          securityModule.updateAccount(updateUsername, newPassword, name);
          break;
        case 2:
          System.out.println(""Information:"");
          securityModule.retrieve();
          break;
        case 3:

          System.out.print(""Enter name: "");
          String name1 = scanner.nextLine();
          System.out.print(""Enter username: "");
          String username = scanner.nextLine();
          System.out.print(""Enter password: "");
          String password = scanner.nextLine();
          securityModule.createAccount(username, password, name1);
          break;

        case 0:
          System.out.println(""Returning to Main Menu..."");
          backToMenu = true;
          break;
        default:
          System.out.println(""Invalid choice. Please try again."");
      }
    }
  }

  private static void handleExpenseModule(ExpenseModule expenseModule, Scanner scanner, String user) {
    boolean backToMenu = false;

    while (!backToMenu) {
      System.out.println(""===== Expense Module ====="");
      System.out.println(""1. Log Expense"");
      System.out.println(""2. Update Expense"");
      System.out.println(""3. Track Expenses"");
      System.out.println(""4. Search Expenses"");
      System.out.println(""5. Delete Expenses"");
      System.out.println(""0. Back to Main Menu"");
      System.out.print(""Enter your choice: "");

      int choice = scanner.nextInt();
      scanner.nextLine(); // Consume the newline character

      switch (choice) {
        case 1:
          System.out.print(""Enter date: "");
          String date = scanner.nextLine();
          System.out.print(""Enter expense category: "");
          String category = scanner.nextLine();
          System.out.print(""Enter expense description: "");
          String description = scanner.nextLine();
          System.out.print(""Enter expense amount: "");
          double amount = scanner.nextDouble();
          expenseModule.logExpense(category, amount, user, date,description);

          break;
        case 2:
          System.out.print(""Enter category you want to update: "");
          String categ = scanner.nextLine();
          if (expenseModule.check(categ)) {
            System.out.print(""Enter date: "");
            String date1 = scanner.nextLine();
            System.out.print(""Enter new expense category: "");
            String updateCategory = scanner.nextLine();
            System.out.print(""Enter expense description: "");
            String description1 = scanner.nextLine();
            System.out.print(""Enter new expense amount: "");
            double newAmount = scanner.nextDouble();
            expenseModule.updateExpense(categ, updateCategory, newAmount, user, date1,description1);
          } else {
            System.out.println(""Category isn't exist"");
          }
          break;
        case 3:

          expenseModule.trackExpenses(user);
          break;
        case 4:
          System.out.print(""Search category: "");
          String category1 = scanner.nextLine();
          expenseModule.searchExpenses(user,category1);
          break;
        case 5:
          System.out.print(""Enter expenses to delete: "");
          String search = scanner.nextLine();
          expenseModule.deleteExpense(search);
        case 0:
          System.out.println(""Returning to Main Menu..."");
          backToMenu = true;
          break;
        default:
          System.out.println(""Invalid choice. Please try again."");
      }
    }
  }

  private static void handleIncomeModule(IncomeModule incomeModule, Scanner scanner, String user) {
    boolean backToMenu = false;

    while (!backToMenu) {
      System.out.println(""===== Income Module ====="");
      // System.out.println(""1. Add Income"");
      System.out.println(""1. Update Income"");
      System.out.println(""2. Track Income"");
      System.out.println(""0. Back to Main Menu"");
      System.out.print(""Enter your choice: "");

      int choice = scanner.nextInt();
      scanner.nextLine(); // Consume the newline character

      switch (choice) {
        /*
         * case 1:
         * System.out.print(""Enter income amount: "");
         * double incomeAmount = scanner.nextDouble();
         * incomeModule.addIncome(incomeAmount);
         * break;
         */
        case 1:
          System.out.print(""Enter new total income amount: "");
          double newIncomeAmount = scanner.nextDouble();
          incomeModule.updateIncome(newIncomeAmount, user);
          break;
        case 2:
          incomeModule.trackIncome(user);
          break;
        case 0:
          System.out.println(""Returning to Main Menu..."");
          backToMenu = true;
          break;
        default:
          System.out.println(""Invalid choice. Please try again."");
      }
    }
  }

  private static void handleBudgetPlanModule(BudgetPlanModule budgetPlanModule, Scanner scanner, String user) {
    boolean backToMenu = false;

    while (!backToMenu) {
      System.out.println(""===== Budget Plan Module ====="");
      System.out.println(""1. Add Budget Plan"");
      System.out.println(""2. Update Budget Plan"");
      System.out.println(""3. View all Budget Plan"");
      System.out.println(""4. Search Budget Plan"");
      System.out.println(""5. Delete Budget Plan"");
      System.out.println(""0. Back to Main Menu"");
      System.out.print(""Enter your choice: "");

      int choice = scanner.nextInt();
      scanner.nextLine(); // Consume the newline character

      switch (choice) {
        case 1:
          System.out.print(""Enter Date: "");
          String date1 = scanner.nextLine();
          System.out.print(""Enter budget category: "");
          String budgetCategory = scanner.nextLine();
          System.out.print(""Enter Description: "");
          String descript = scanner.nextLine();
          System.out.print(""Enter budget amount: "");
          double budgetAmount = scanner.nextDouble();

          budgetPlanModule.addBudgetPlan(budgetCategory, budgetAmount, date1, user, descript);

          break;
        case 2:
          System.out.print(""Enter category you want to update: "");
          String categ = scanner.nextLine();
          if (budgetPlanModule.check(categ)) {
            System.out.print(""Enter Date: "");
            String date = scanner.nextLine();
            System.out.print(""Enter budget category to update: "");
            String updateCategory = scanner.nextLine();
            System.out.print(""Enter Description: "");
            String descript1 = scanner.nextLine();
            System.out.print(""Enter new budget amount: "");
            double newBudgetAmount = scanner.nextDouble();
            budgetPlanModule.updateBudgetPlan(categ, updateCategory, newBudgetAmount, date, user, descript1);
          } else {
            System.out.println(""Category isn't exist"");
          }
          break;
        case 3:
          budgetPlanModule.showBudgetPlans(user);
          break;
        case 4:
          System.out.print(""Search category: "");
          String category = scanner.nextLine();
          budgetPlanModule.findBudgetPlans(user, category);
          break;
        case 5:
          System.out.print(""Enter budget plan category to delete: "");
          String category1 = scanner.nextLine();
          budgetPlanModule.deleteBudgetPlan(category1);
          break;
        case 0:
          System.out.println(""Returning to Main Menu..."");
          backToMenu = true;
          break;
        default:
          System.out.println(""Invalid choice. Please try again."");
      }
    }
  }
}"
JMcZtDW2,2023-12-20_stats.json,rdp_snitch,JSON,Wednesday 20th of December 2023 06:18:12 PM CDT,"{
  ""ip"": {
    ""147.78.47.31"": 9,
    ""161.49.95.180"": 6,
    ""194.165.16.37"": 6,
    ""62.122.184.188"": 9,
    ""62.204.41.208"": 18,
    ""80.66.76.92"": 6,
    ""198.235.24.165"": 9,
    ""64.227.155.120"": 3,
    ""87.251.75.145"": 9,
    ""167.94.145.56"": 3,
    ""185.170.144.113"": 9,
    ""46.219.77.107"": 3,
    ""58.218.204.183"": 15,
    ""209.222.98.33"": 12,
    ""87.251.75.120"": 6,
    ""80.66.76.80"": 12,
    ""198.235.24.43"": 9,
    ""3.16.147.134"": 3,
    ""113.160.91.206"": 3,
    ""165.154.11.139"": 3,
    ""110.86.3.66"": 3,
    ""165.154.120.30"": 3,
    ""45.227.254.54"": 6,
    ""198.235.24.181"": 9,
    ""185.170.144.3"": 3,
    ""37.34.179.6"": 3,
    ""193.37.69.79"": 9,
    ""103.77.214.248"": 378,
    ""51.75.160.42"": 6,
    ""198.235.24.82"": 9
  },
  ""asn"": {
    ""AS209588"": 9,
    ""AS17639"": 6,
    ""AS48721"": 6,
    ""AS57523"": 9,
    ""AS59425"": 18,
    ""AS208091"": 42,
    ""AS396982"": 36,
    ""AS14061"": 3,
    ""AS398705"": 3,
    ""AS197414"": 12,
    ""AS31148"": 3,
    ""AS4134"": 18,
    ""AS23470"": 12,
    ""AS16509"": 3,
    ""AS45899"": 3,
    ""AS135377"": 6,
    ""AS267784"": 6,
    ""AS42961"": 3,
    ""AS140810"": 378,
    ""AS16276"": 6
  },
  ""isp"": {
    ""Flyservers S.A."": 21,
    ""Converge ICT Solution Inc"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Horizon LLC"": 18,
    ""Xhost Internet Solutions LP"": 45,
    ""Google LLC"": 36,
    ""DigitalOcean, LLC"": 3,
    ""Censys, Inc."": 3,
    ""o3 core"": 3,
    ""Chinanet"": 18,
    ""ReliableSite.Net LLC"": 12,
    ""Amazon.com, Inc."": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Mobile Telecommunications Company"": 3,
    ""Xhost Internet Solutions"": 9,
    ""Megacore Technology Company Limited"": 378,
    ""OVH SAS"": 6
  },
  ""org"": {
    ""Flyservers S.A"": 15,
    ""Converge ICT Solution Inc"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Horizon LLC"": 18,
    ""Xhost Internet Solutions"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""DigitalOcean, LLC"": 3,
    ""Censys, Inc."": 3,
    ""Xhostis"": 12,
    ""Unknown"": 3,
    ""Chinanet JS"": 15,
    ""ReliableSite.Net LLC"": 12,
    ""AWS EC2 (us-east-2)"": 3,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Chinanet FJ"": 3,
    ""UAB Host Baltic"": 6,
    ""Zain"": 3,
    ""XHOSTIS"": 9,
    ""Vinasite Viet NAM Company Limited"": 378,
    ""OVH Ltd"": 6
  },
  ""regionName"": {
    ""North Holland"": 45,
    ""Metro Manila"": 6,
    ""Kaunas"": 6,
    ""Moscow"": 27,
    ""England"": 24,
    ""California"": 36,
    ""Karnataka"": 3,
    ""Hesse"": 3,
    ""Zhytomyr"": 3,
    ""Jiangsu"": 15,
    ""New Jersey"": 12,
    ""Ohio"": 3,
    ""Hanoi"": 381,
    ""Lagos"": 3,
    ""Fujian"": 3,
    ""Bangkok"": 3,
    ""Vilnius"": 6,
    ""Hawalli"": 3
  },
  ""country"": {
    ""The Netherlands"": 45,
    ""Philippines"": 6,
    ""Lithuania"": 12,
    ""Russia"": 27,
    ""United Kingdom"": 24,
    ""United States"": 51,
    ""India"": 3,
    ""Germany"": 3,
    ""Ukraine"": 3,
    ""China"": 18,
    ""Vietnam"": 381,
    ""Nigeria"": 3,
    ""Thailand"": 3,
    ""Kuwait"": 3
  },
  ""account"": {
    ""Administr"": 54,
    ""hello"": 420,
    ""Test"": 30,
    ""QKMsgPoEl"": 3,
    ""bZjtiq"": 3,
    ""rJomAB"": 3,
    ""(empty)"": 6,
    ""Domain"": 30,
    ""xPAigoGNF"": 3,
    ""bKMctZ"": 3,
    ""Vbcepu"": 3,
    ""nmap"": 3,
    ""Administrator"": 3,
    ""JyvCwrwXO"": 3,
    ""aCjmwT"": 3,
    ""uDmjCZ"": 3,
    ""BQOQsfdiB"": 3,
    ""FHrzrK"": 3,
    ""pFnjcb"": 3
  },
  ""keyboard"": {
    ""Unknown"": 582
  },
  ""client_build"": {
    ""Unknown"": 582
  },
  ""client_name"": {
    ""Unknown"": 582
  },
  ""ip_type"": {
    ""Unknown"": 483,
    ""hosting & proxy"": 9,
    ""hosting"": 57,
    ""proxy"": 27,
    ""mobile"": 6
  }
}"
wS75GNUw,2023-12-20_stats.json,rdp_snitch,JSON,Wednesday 20th of December 2023 06:16:05 PM CDT,"{
  ""ip"": {
    ""147.78.47.31"": 6,
    ""161.49.95.180"": 4,
    ""194.165.16.37"": 4,
    ""62.122.184.188"": 6,
    ""62.204.41.208"": 12,
    ""80.66.76.92"": 4,
    ""198.235.24.165"": 6,
    ""64.227.155.120"": 2,
    ""87.251.75.145"": 6,
    ""167.94.145.56"": 2,
    ""185.170.144.113"": 6,
    ""46.219.77.107"": 2,
    ""58.218.204.183"": 10,
    ""209.222.98.33"": 8,
    ""87.251.75.120"": 4,
    ""80.66.76.80"": 8,
    ""198.235.24.43"": 6,
    ""3.16.147.134"": 2,
    ""113.160.91.206"": 2,
    ""165.154.11.139"": 2,
    ""110.86.3.66"": 2,
    ""165.154.120.30"": 2,
    ""45.227.254.54"": 4,
    ""198.235.24.181"": 6,
    ""185.170.144.3"": 2,
    ""37.34.179.6"": 2,
    ""193.37.69.79"": 6,
    ""103.77.214.248"": 252,
    ""51.75.160.42"": 4,
    ""198.235.24.82"": 6
  },
  ""asn"": {
    ""AS209588"": 6,
    ""AS17639"": 4,
    ""AS48721"": 4,
    ""AS57523"": 6,
    ""AS59425"": 12,
    ""AS208091"": 28,
    ""AS396982"": 24,
    ""AS14061"": 2,
    ""AS398705"": 2,
    ""AS197414"": 8,
    ""AS31148"": 2,
    ""AS4134"": 12,
    ""AS23470"": 8,
    ""AS16509"": 2,
    ""AS45899"": 2,
    ""AS135377"": 4,
    ""AS267784"": 4,
    ""AS42961"": 2,
    ""AS140810"": 252,
    ""AS16276"": 4
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""Converge ICT Solution Inc"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions LP"": 30,
    ""Google LLC"": 24,
    ""DigitalOcean, LLC"": 2,
    ""Censys, Inc."": 2,
    ""o3 core"": 2,
    ""Chinanet"": 12,
    ""ReliableSite.Net LLC"": 8,
    ""Amazon.com, Inc."": 2,
    ""VietNam Post and Telecom Corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Mobile Telecommunications Company"": 2,
    ""Xhost Internet Solutions"": 6,
    ""Megacore Technology Company Limited"": 252,
    ""OVH SAS"": 4
  },
  ""org"": {
    ""Flyservers S.A"": 10,
    ""Converge ICT Solution Inc"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 22,
    ""Palo Alto Networks, Inc"": 24,
    ""DigitalOcean, LLC"": 2,
    ""Censys, Inc."": 2,
    ""Xhostis"": 8,
    ""Unknown"": 2,
    ""Chinanet JS"": 10,
    ""ReliableSite.Net LLC"": 8,
    ""AWS EC2 (us-east-2)"": 2,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Chinanet FJ"": 2,
    ""UAB Host Baltic"": 4,
    ""Zain"": 2,
    ""XHOSTIS"": 6,
    ""Vinasite Viet NAM Company Limited"": 252,
    ""OVH Ltd"": 4
  },
  ""regionName"": {
    ""North Holland"": 30,
    ""Metro Manila"": 4,
    ""Kaunas"": 4,
    ""Moscow"": 18,
    ""England"": 16,
    ""California"": 24,
    ""Karnataka"": 2,
    ""Hesse"": 2,
    ""Zhytomyr"": 2,
    ""Jiangsu"": 10,
    ""New Jersey"": 8,
    ""Ohio"": 2,
    ""Hanoi"": 254,
    ""Lagos"": 2,
    ""Fujian"": 2,
    ""Bangkok"": 2,
    ""Vilnius"": 4,
    ""Hawalli"": 2
  },
  ""country"": {
    ""The Netherlands"": 30,
    ""Philippines"": 4,
    ""Lithuania"": 8,
    ""Russia"": 18,
    ""United Kingdom"": 16,
    ""United States"": 34,
    ""India"": 2,
    ""Germany"": 2,
    ""Ukraine"": 2,
    ""China"": 12,
    ""Vietnam"": 254,
    ""Nigeria"": 2,
    ""Thailand"": 2,
    ""Kuwait"": 2
  },
  ""account"": {
    ""Administr"": 36,
    ""hello"": 280,
    ""Test"": 20,
    ""QKMsgPoEl"": 2,
    ""bZjtiq"": 2,
    ""rJomAB"": 2,
    ""(empty)"": 4,
    ""Domain"": 20,
    ""xPAigoGNF"": 2,
    ""bKMctZ"": 2,
    ""Vbcepu"": 2,
    ""nmap"": 2,
    ""Administrator"": 2,
    ""JyvCwrwXO"": 2,
    ""aCjmwT"": 2,
    ""uDmjCZ"": 2,
    ""BQOQsfdiB"": 2,
    ""FHrzrK"": 2,
    ""pFnjcb"": 2
  },
  ""keyboard"": {
    ""Unknown"": 388
  },
  ""client_build"": {
    ""Unknown"": 388
  },
  ""client_name"": {
    ""Unknown"": 388
  },
  ""ip_type"": {
    ""Unknown"": 322,
    ""hosting & proxy"": 6,
    ""hosting"": 38,
    ""proxy"": 18,
    ""mobile"": 4
  }
}"
JVTephnB,Inverse Kinematics,Mangus875,JavaScript,Wednesday 20th of December 2023 06:15:22 PM CDT,"/*
<html><head>
<style>
	::root, body {
		background-color: #333;
		
		--segment-length: 50px;
		--segment-width:  10px;
	}

	div {
		position: absolute;
		width: 50px;
		height: 50px;
		
		background-color: #1fc0cf;
	}

	.arm {
		width: var(--segment-length);
		height: var(--segment-width);
		
		left: 100%;
		top: 50%;
		transform-origin: left center;
		transform: translateY(-50%);
	}

	:not(.arm) > .arm {
		left: 50%;
	}
</style>
</head>
	
<body>
</body></html>
*/

/****  HACK: shorthand for loop
  *	
  * Syntax:
  *	from(min).to(max).run(callbackFn)
  *	
  * Parameters:
  *		min
  *			index to start the loop at
  *	
  *		max
  *			index to end the loop at
  *	
  *		callbackFn
  *			function to execute in the loop
  *	
  *	Equivalent to:
  *		for (let i = min; i < max; i++) {
	*			callbackFn(i);
	*		}
  *	
***/

function from(min) {
	let fromObj = [];
	fromObj.to = (max) => {
		let toObj = {};
		toObj.run = (callbackFn) => {
			if (min > max) throw new RangeError(`loop start must be below loop max`);
			let results = [];
			for (let i = min; i < max; i++) {
				results.push(callbackFn(i));
			}
		}
		return toObj;
	}
	return fromObj;
}

function getType(obj) {
    if (obj === null) return 'null';
    if (obj === undefined) return 'undefined';
    return obj.__proto__.constructor.name;
}

function from(min) {
	let fromObj = [];
	fromObj.to = (max) => {
		let toObj = {};
		toObj.run = (statement) => {
			if (min > max) throw new RangeError(`loop start must be below loop max`)
			for (let i = min; i <= max; i++) {
				statement(i);
			}
		}
		return toObj;
	}
	return fromObj;
}

function desmosLerp(a,b) {
	if (getType(a) != getType(b)) throw new TypeError(`cannot lerp between a point and a number`);
	if (getType(a) == ""Vector2"") {
		a = a.toString(10000);
		// a.replace(""("", ""\\left("");
		// a.replace("")"", ""\\right)"");
		// a.replace("" "", """");
		b = b.toString(10000);
		// b.replace(""("", ""\\left("");
		// b.replace("")"", ""\\right)"");
		// b.replace("" "", """");
	}
	return `l_{erp}(t,${a},${b})`
}

function desmosify(points, lerp, name) {
	let result = name[0]+""_{""+name.substring(1)+""}=\\left["";
	
	for (let i = 0; i < points.length; i++) {
		let pt = points[i];
		if (i == points.length-1 && lerp) continue;
		if (lerp) {
			result += desmosLerp(points[i], points[i+1]);
			result += (i != points.length-2 ? ',' : '');
			continue;
		}
		result += pt.toString(10000);
		result += (i != points.length-1 ? ',' : '');
	}
	/*
	points.forEach((pt,i) => {
		if (lerp) {
			result += desmosLerp(pt
		}
		result += pt.toString(10000);
		result += (i != points.length-1 ? ',' : '');
	});
	*/
	result += ""\\right]"";
	// result.replaceAll(""("", ""\\left("");
	// result.replaceAll("")"", ""\\right)"");
	result.replaceAll("" "", """");
	return result;
}

function roundTo(n,p=1) {
	return Math.round(n*p)/p;
}

class Vector2 {
	constructor(x=0, y=0) {
		this.x = x;
		this.y = y;
	}
	
	static copy(v) {
		return new Vector2(v.x, v.y);
	}
	
	static add(v1, v2) {
		return new Vector2(v1.x+v2.x, v1.y+v2.y);
	}
	
	static sub(v1, v2) {
		return new Vector2(v1.x-v2.x, v1.y-v2.y);
	}
	
	add(v) {
		this.x += v.x;
		this.y += v.y;
		return this;
	}
	
	sub(v) {
		this.x -= v.x;
		this.y -= v.y;
		return this;
	}
	
	mult(s) {
		this.x *= s;
		this.y *= s;
		return this;
	}
	
	normalize() {
		this.mult(1/this.magnitude);
		return this;
	}
	
	get magnitude() {
		return Math.sqrt(this.x**2 + this.y**2);
	}
	
	set magnitude(mag) {
		this.normalize();
		this.mult(mag);
	}
	
	moveTo(v) {
		this.x = v.x;
		this.y = v.y;
	}
	
	toString(d=100) {
		return `(${roundTo(this.x, d)}, ${roundTo(this.y, d)})`;
	}
}

const rad = deg => deg*Math.PI / 180;
const deg = rad => 180*rad / Math.PI;

function polar(...pt) {
	let x,y;
	if (pt.length == 1) {
		x = pt[0].x;
		y = pt[0].y;
	} else {
		x = pt[0];
		y = pt[1];
	}
	let coord = [];
	coord.r = Math.sqrt(x*x + y*y);
	coord.theta = Math.atan(y,x);
	return coord;
}

function car(r,theta) {
	let x,y;
	x = r*Math.cos(theta);
	y = r*Math.sin(theta);
	return [x,y];
}

function getAngles(points, degrees=false) {
	let angs = [];
	for (let i = 0; i < points.length; i++) {
		let pt1 = points[i];
		let pt2 = points[i-1] || new Vector2();
		
		let angle = polar(Vector2.sub(pt1, pt2)).theta;
		if (degrees) angle = deg(angle.radians);
		
		angs.push(angle);
	}
	return angs;
}

function getLengths(points) {
	let lengths = [];
	for (let i = 0; i < points.length; i++) {
		let pt1 = points[i];
		let pt2 = points[i-1] || new Vector2();
		
		let dist = polar(Vector2.sub(pt1, pt2)).r;
		lengths.push(dist);
	}
	return lengths;
}

class arm {
	constructor(...points) {
		this.points = points;
		this.lengths = getLengths(this.points);
		this.angles = getAngles(this.points);
	}
	
	reach(target, iterations=1) {
		let origin = Vector2.copy(this.points[0]);
		for (let n = 0; n < iterations; n++) {
			this.points[this.points.length-1].moveTo(target);
			for (let i = this.points.length-2; i >= 0; i--) {
				this.points[i].moveTo(Vector2.sub(this.points[i],this.points[i+1]).normalize().mult(this.lengths[i+1]).add(this.points[i+1]));
			}
			this.points[0].moveTo(origin);
			for (let i = 1; i < this.points.length; i++) {
				this.points[i].moveTo(Vector2.sub(this.points[i],this.points[i-1]).normalize().mult(this.lengths[i]).add(this.points[i-1]));
			}
		}
		
		this.updateAngles();
	}
	
	updateAngles() {
		this.angles = getAngles(this.points);
	}
}

function createArm(segs) {
	
}
window.onload = () => {
	
}
let segs = []
for (let i = 0; i < 5; i++) {
	segs.push(new Vector2(i, 0));
}
let ikArm = new arm(...segs);

ikArm.reach(new Vector2(0, 100), 100);
console.log(ikArm.angles);

ikArm.angles.forEach((a,i) => {
	let targSel = ""> .arm"";
	let baseTransform = ""translateY(-50%)"";
	let sel = ':not(.arm) ';
	from(0).to(i).run(_=>sel += targSel+' ');
	sel = sel.trim();
	
	document.querySelector(sel).style.transform = `${baseTransform} rotate(${a}rad)`;
});

// <div class='arm'></div>"
vEkHDjqV,2023-12-20_stats.json,rdp_snitch,JSON,Wednesday 20th of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""147.78.47.31"": 3,
    ""161.49.95.180"": 2,
    ""194.165.16.37"": 2,
    ""62.122.184.188"": 3,
    ""62.204.41.208"": 6,
    ""80.66.76.92"": 2,
    ""198.235.24.165"": 3,
    ""64.227.155.120"": 1,
    ""87.251.75.145"": 3,
    ""167.94.145.56"": 1,
    ""185.170.144.113"": 3,
    ""46.219.77.107"": 1,
    ""58.218.204.183"": 5,
    ""209.222.98.33"": 4,
    ""87.251.75.120"": 2,
    ""80.66.76.80"": 4,
    ""198.235.24.43"": 3,
    ""3.16.147.134"": 1,
    ""113.160.91.206"": 1,
    ""165.154.11.139"": 1,
    ""110.86.3.66"": 1,
    ""165.154.120.30"": 1,
    ""45.227.254.54"": 2,
    ""198.235.24.181"": 3,
    ""185.170.144.3"": 1,
    ""37.34.179.6"": 1,
    ""193.37.69.79"": 3,
    ""103.77.214.248"": 126,
    ""51.75.160.42"": 2,
    ""198.235.24.82"": 3
  },
  ""asn"": {
    ""AS209588"": 3,
    ""AS17639"": 2,
    ""AS48721"": 2,
    ""AS57523"": 3,
    ""AS59425"": 6,
    ""AS208091"": 14,
    ""AS396982"": 12,
    ""AS14061"": 1,
    ""AS398705"": 1,
    ""AS197414"": 4,
    ""AS31148"": 1,
    ""AS4134"": 6,
    ""AS23470"": 4,
    ""AS16509"": 1,
    ""AS45899"": 1,
    ""AS135377"": 2,
    ""AS267784"": 2,
    ""AS42961"": 1,
    ""AS140810"": 126,
    ""AS16276"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 7,
    ""Converge ICT Solution Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Horizon LLC"": 6,
    ""Xhost Internet Solutions LP"": 15,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 1,
    ""Censys, Inc."": 1,
    ""o3 core"": 1,
    ""Chinanet"": 6,
    ""ReliableSite.Net LLC"": 4,
    ""Amazon.com, Inc."": 1,
    ""VietNam Post and Telecom Corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Mobile Telecommunications Company"": 1,
    ""Xhost Internet Solutions"": 3,
    ""Megacore Technology Company Limited"": 126,
    ""OVH SAS"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 5,
    ""Converge ICT Solution Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Horizon LLC"": 6,
    ""Xhost Internet Solutions"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 1,
    ""Censys, Inc."": 1,
    ""Xhostis"": 4,
    ""Unknown"": 1,
    ""Chinanet JS"": 5,
    ""ReliableSite.Net LLC"": 4,
    ""AWS EC2 (us-east-2)"": 1,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet FJ"": 1,
    ""UAB Host Baltic"": 2,
    ""Zain"": 1,
    ""XHOSTIS"": 3,
    ""Vinasite Viet NAM Company Limited"": 126,
    ""OVH Ltd"": 2
  },
  ""regionName"": {
    ""North Holland"": 15,
    ""Metro Manila"": 2,
    ""Kaunas"": 2,
    ""Moscow"": 9,
    ""England"": 8,
    ""California"": 12,
    ""Karnataka"": 1,
    ""Hesse"": 1,
    ""Zhytomyr"": 1,
    ""Jiangsu"": 5,
    ""New Jersey"": 4,
    ""Ohio"": 1,
    ""Hanoi"": 127,
    ""Lagos"": 1,
    ""Fujian"": 1,
    ""Bangkok"": 1,
    ""Vilnius"": 2,
    ""Hawalli"": 1
  },
  ""country"": {
    ""The Netherlands"": 15,
    ""Philippines"": 2,
    ""Lithuania"": 4,
    ""Russia"": 9,
    ""United Kingdom"": 8,
    ""United States"": 17,
    ""India"": 1,
    ""Germany"": 1,
    ""Ukraine"": 1,
    ""China"": 6,
    ""Vietnam"": 127,
    ""Nigeria"": 1,
    ""Thailand"": 1,
    ""Kuwait"": 1
  },
  ""account"": {
    ""Administr"": 18,
    ""hello"": 140,
    ""Test"": 10,
    ""QKMsgPoEl"": 1,
    ""bZjtiq"": 1,
    ""rJomAB"": 1,
    ""(empty)"": 2,
    ""Domain"": 10,
    ""xPAigoGNF"": 1,
    ""bKMctZ"": 1,
    ""Vbcepu"": 1,
    ""nmap"": 1,
    ""Administrator"": 1,
    ""JyvCwrwXO"": 1,
    ""aCjmwT"": 1,
    ""uDmjCZ"": 1,
    ""BQOQsfdiB"": 1,
    ""FHrzrK"": 1,
    ""pFnjcb"": 1
  },
  ""keyboard"": {
    ""Unknown"": 194
  },
  ""client_build"": {
    ""Unknown"": 194
  },
  ""client_name"": {
    ""Unknown"": 194
  },
  ""ip_type"": {
    ""Unknown"": 161,
    ""hosting & proxy"": 3,
    ""hosting"": 19,
    ""proxy"": 9,
    ""mobile"": 2
  }
}"
4JErvMKa,snowybot,coinwalk,JavaScript,Wednesday 20th of December 2023 05:26:56 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = ((kozster/24).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.ceil(kozster/tens))*tens);
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 0;
var toot = ((zeggar*1).toFixed(8));

function get(){
burgzie = document.getElementById('pct_balance').value;
if (burgzie>(james+(zeggar*uprd))){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart-1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (fart<0){
fart = 0;
}
if (burgzie<(james-(zeggar*dnwrd)))&&(fart<=1)){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart+1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
    }
if ((zeggar>=kozster)&&(burgzie>fran)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_lo').click();
setTimeout(() => get(), 1);
}
get();
"
bzU0Kb3K,fbtc,coinwalk,JavaScript,Wednesday 20th of December 2023 05:21:15 PM CDT,"var kozster = parseFloat(document.getElementById('balance').innerHTML);
var junky = kozster;
var bear = true;
var beast = ((kozster/240).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var taget = 0.0005;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.ceil(kozster/tens))*tens);
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 0;
var toot = ((zeggar*1).toFixed(8));
 
 
function get(){
burgzie = document.getElementById('pct_balance').value;
if (burgzie>(james+(zeggar*uprd))){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart-1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (fart<0){
fart = 0;
}
if (burgzie<(james-(zeggar*dnwrd)))&&(fart<=1)){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart+1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
    }
if (zeggar>=(kozster/10)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
toot = ((zeggar*1).toFixed(8));
if ((burgzie==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = toot);
parseFloat(document.getElementById('win_amount').innerHTML = toot);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((burgzie!=junky)&&(!bear)){
junky = parseFloat(burgzie);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
5S4Pqke1,fbtc,coinwalk,JavaScript,Wednesday 20th of December 2023 05:18:45 PM CDT,"var kozster = parseFloat(document.getElementById('balance').innerHTML);
var junky = kozster;
var bear = true;
var beast = ((kozster/240).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var james = ((Math.floor(kozster/tens))*tens);
var fran = ((Math.ceil(kozster/tens))*tens);
var uprd =  6.9;
var dnwrd = 2.9;
var fart = 0;
var toot = ((zeggar*1).toFixed(8));
 
 
function get(){
burgzie = document.getElementById('pct_balance').value;
if (burgzie>(james+(zeggar*uprd))){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart-1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (fart<0){
fart = 0;
}
if (burgzie<(james-(zeggar*dnwrd)))&&(fart<=1)){
    zeggar = zeggar*2;
    uprd =  4.9;
    dnwrd = 4.9;
    fart = fart+1;
    james = parseFloat(burgzie);
    fran = ((Math.ceil(burgzie/tens))*tens);
    }
if (zeggar>=(kozster/10)){
    zeggar = beast;
    uprd =  6.9;
    dnwrd = 2.9;
    fart = 0;
    james = ((Math.floor(burgzie/tens))*tens);
    fran = ((Math.ceil(burgzie/tens))*tens);
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
toot = ((zeggar*1).toFixed(8));
if ((burgzie==junky)&&(bear)){
document.getElementById('double_your_btc_win_chance').value = 47.50;
document.getElementById('double_your_btc_payout_multiplier').value = 2.00;
parseFloat(document.getElementById('double_your_btc_stake').value = toot);
parseFloat(document.getElementById('win_amount').innerHTML = toot);
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((burgzie!=junky)&&(!bear)){
junky = parseFloat(burgzie);
bear = true;
}
setTimeout(() => get(), 1);
}
get();"
CQR1VmHW,WooCommerce: Save minimum amount within the order data when a free shipping method is selected,YordanSoares,PHP,Wednesday 20th of December 2023 04:09:32 PM CDT,"<?php
/**
 * WooCommerce:
 * Save the free shipping methodminimum amount (if set) within the order data when a free shipping method is selected  
 */
add_action( 'woocommerce_checkout_create_order', 'wpo_safe_free_shipping_amount_within_order_data' );
function wpo_safe_free_shipping_amount_within_order_data( $order ) {
    $chosen_shipping_methods = WC()->session->get( 'chosen_shipping_methods' );
	
    // If a free shipping method is selected...
    if ( strpos( $chosen_shipping_methods[0], 'free_shipping' ) !== false ) {
		list( $shipping_name, $shipping_id ) = explode( ':', $chosen_shipping_methods[0] );
		
        // ...get the minimum amount from its settings
        $free_shipping_settings = get_option( ""woocommerce_{$shipping_name}_{$shipping_id}_settings"" );
		$min_amount = $free_shipping_settings['min_amount'];

        // If there is a minimum amount set, save it within the order data
        if ( ! empty( $min_amount ) ) {
            $order->update_meta_data( '_free_shipping_min_amount', $min_amount );
            $order->save();
        }
    }
}"
SXbgsz13,Tree,Xocnx,Lua,Wednesday 20th of December 2023 04:04:12 PM CDT,"-- Get references to relevant objects
local scriptParent = script.Parent
local Health = scriptParent.Health
local Trunk = scriptParent.Trunk
local Leaves = scriptParent.Leaves
local Gui = scriptParent.Gui.BillboardGui
local TextLabel = Gui.TextLabel

-- Function to set transparency and collision state of an entity
local function setEntityState(entity, transparency, canCollide)
	entity.Transparency = transparency
	entity.CanCollide = canCollide
end

-- Function called when health changes
local function onHealthChanged()
	-- Play hit sound for the trunk
	Trunk.Hit:Play()

	-- Update health display text
	TextLabel.Text = string.format(""%d/10"", Health.Value)

	-- Check if health is zero or below
	if Health.Value <= 0 then
		-- Disable the GUI
		Gui.Enabled = false

		-- Set trunk and leaves to be invisible and non-collidable
		setEntityState(Trunk, 1, false)
		setEntityState(Leaves, 1, false)

		-- Wait for 5 seconds
		wait(5)

		-- Reset health to 10
		Health.Value = 10

		-- Set trunk and leaves to be visible and collidable again
		setEntityState(Trunk, 0, true)
		setEntityState(Leaves, 0, true)
	end
end

-- Function to toggle GUI visibility
local function toggleGuiVisibility()
	-- Enable GUI
	Gui.Enabled = true

	-- Wait for 4 seconds
	wait(4)

	-- Disable GUI
	Gui.Enabled = false
end

-- Connect functions to events
Health.Changed:Connect(onHealthChanged)
Health.Changed:Connect(toggleGuiVisibility)
"
2b48LQ6a,Untitled,Xocnx,Lua,Wednesday 20th of December 2023 03:59:10 PM CDT,"-- Get references to relevant objects
local scriptParent = script.Parent
local Health = scriptParent.Health
local Trunk = scriptParent.Trunk
local Leaves = scriptParent.Leaves
local Gui = scriptParent.Gui.BillboardGui
local TextLabel = Gui.TextLabel

-- Function to set transparency and collision state of an entity
local function setEntityState(entity, transparency, canCollide)
	entity.Transparency = transparency
	entity.CanCollide = canCollide
end

-- Function called when health changes
local function onHealthChanged()
	-- Play hit sound for the trunk
	Trunk.Hit:Play()

	-- Update health display text
	TextLabel.Text = string.format(""%d/10"", Health.Value)

	-- Check if health is zero or below
	if Health.Value <= 0 then
		-- Disable the GUI
		Gui.Enabled = false

		-- Set trunk and leaves to be invisible and non-collidable
		setEntityState(Trunk, 1, false)
		setEntityState(Leaves, 1, false)

		-- Wait for 5 seconds
		wait(5)

		-- Reset health to 10
		Health.Value = 10

		-- Set trunk and leaves to be visible and collidable again
		setEntityState(Trunk, 0, true)
		setEntityState(Leaves, 0, true)
	end
end

-- Function to toggle GUI visibility
local function toggleGuiVisibility()
	-- Enable GUI
	Gui.Enabled = true

	-- Wait for 4 seconds
	wait(4)

	-- Disable GUI
	Gui.Enabled = false
end

-- Connect functions to events
Health.Changed:Connect(onHealthChanged)
Health.Changed:Connect(toggleGuiVisibility)"
pfTdRUzj,Сортиране по различни методи,Maina55,C#,Wednesday 20th of December 2023 03:58:12 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        Random rnd = new Random();
        int[] nums = new int[20];
        for (int i = 0; i < nums.Length; i++)
          {
            int num = rnd.Next(1,101);
             nums[i] = num;
        }
        Console.WriteLine(String.Join("" "", nums));
        string input = Console.ReadLine();
        switch (input)
        {
            case ""Bubble"":
                BubbleSort(nums); 
                break;

            case ""Insertion"":
                InsertionSort(nums); 
                break;
            case ""Selection"":
                SelectionSort(nums);
                break;
            default:
                break;
        }
        //BubbleSort(nums);
        //InsertionSort(nums);
        //SelectionSort(nums);
        //QuickSort(nums);
    }


    public static void BubbleSort(int[] nums)
    {
        int n = nums.Length;

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n-1; j++)
            {
                if (nums[j] > nums[j+1])
                {
                    int tempnum = nums[j];
                    nums[j] = nums[j+1];
                    nums[j+1] = tempnum;
                }
            }
        }

        Console.WriteLine(String.Join("" "", nums));
    }

    public static void InsertionSort(int[] nums)
    {
        int n = nums.Length;
        for (int i = 1; i < n-1; i++)
        {
            int currnum = nums[i];
            
            for (int j = i-1; j >= 0;)
            {
                if (currnum < nums[j])
                {
                    nums[j + 1] = nums[j];
                    j--;
                    nums[j+1] = currnum;
                }
                else
                {
                    break;
                }
            }
        }
        Console.WriteLine(String.Join("" "", nums));
    }

    public static void SelectionSort(int[] nums)
    {
        int n = nums.Length;
        for (int i = 0; i < n-1; i++)
        {
            int smallestnum = i;
            for (int j = i+1; j < n; j++)
            {
                if (nums[j] < nums[smallestnum])
                {
                    smallestnum = j;
                }
            }

            int curnum = nums[smallestnum];
            nums[smallestnum] = nums[i];
            nums[i] = curnum;
        }

        Console.WriteLine(String.Join("" "", nums));

    }

    public static void QuickSort(int[] nums)
    {
        int leftindx = 0;
        int rightindx = nums.Length-1;
        int pivot = nums[leftindx];

        while (leftindx < rightindx)
        {
            while (nums[leftindx] < pivot)
            {
                leftindx++;
            }

            while (nums[rightindx] > pivot)
            {
                rightindx--;
            }

            if (leftindx <= rightindx)
            {
                int tempnum = nums[leftindx];
                nums[leftindx] = nums[rightindx];
                nums[rightindx] = tempnum;
                leftindx++;
                rightindx--;
            }
        }

        if (0< rightindx)
        {
            QuickSort(nums);
        }
        if (leftindx< nums.Length-1)
        {
            QuickSort(nums);
        }

        Console.WriteLine(String.Join("" "", nums));

    }


    public static void MergeSort(int[] nums)
    {

    }

}"
f76LbkvJ,Enqueue petite-vue script in WordPress,rikhen,PHP,Wednesday 20th of December 2023 03:37:34 PM CDT,"<?php 

/*
 * Enqueue petite-vue script in the footer of the front end + Gutenberg editor
 *
 * @link https://github.com/vuejs/petite-vue Documentation of petite-vue
 */
add_action( 'init', 'enqueue_petite_vue' );
function enqueue_petite_vue() {
    // Register the script
    wp_register_script(
        'petite-vue', // Handle
        'https://unpkg.com/petite-vue@0.4.1/dist/petite-vue.iife.js', // Source
        array(), // Dependencies
        '0.4.1', // Version
        array(
            'in_footer' => true, // Place in footer
            'strategy' => 'defer' // Defer loading
        )
    );

    // Enqueue the script on the front end
    wp_enqueue_script( 'petite-vue' );

    // Enqueue the script on the Gutenberg editor
    if ( is_admin() ) {
        wp_enqueue_script( 'petite-vue' );
    }
}

/*
 * Optional: Add the init attribute to automatically query and initialize all elements that have v-scope on the page.
 *
 * @link https://developer.wordpress.org/reference/hooks/script_loader_tag/ Documentation of WP core hook
 */
add_action( 'init', 'enqueue_petite_vue_es' );
function enqueue_petite_vue_es() {
    // Register the script
    wp_register_script(
        'petite-vue-es', // Handle
        'https://unpkg.com/petite-vue@0.4.1/dist/petite-vue.es.js', // Source
        array(), // Dependencies
        '0.4.1', // Version
        array(
            'in_footer' => true, // Place in footer
            'strategy' => 'defer' // Defer loading
        )
    );

    // Enqueue the script on the front end
    wp_enqueue_script( 'petite-vue-es' );

    // Enqueue the script on the Gutenberg editor
    if ( is_admin() ) {
        wp_enqueue_script( 'petite-vue-es' );
    }
}

/*
 * Optional: use the ES module build
 *
 */
add_filter('script_loader_tag', 'add_petite_vue_type_attribute' , 10, 3);
function add_petite_vue_type_attribute($tag, $handle, $src) {
    // if not your script, do nothing and return original $tag
    if ( 'petite-vue' !== $handle ) {
        return $tag;
    }
    // change the script tag by adding init attribute and return it.
    $tag = '<script id=""'.$handle.'"" src=""' . esc_url( $src ) . '"" data-wp-strategy=""defer"" init></script>';
    return $tag;
}

/*
 * Optional: when using ESM, add the required type=""module""
 */
add_filter('script_loader_tag', 'add_petite_vue_es_type_attribute' , 10, 3);
function add_petite_vue_es_type_attribute($tag, $handle, $src) {
    // if not your script, do nothing and return original $tag
    if ( 'petite-vue-es' !== $handle ) {
        return $tag;
    }
    // change the script tag by adding type=""module"" + init attribute and return it.
    $tag = '<script id=""'.$handle.'"" type=""module"" src=""' . esc_url( $src ) . '"" data-wp-strategy=""defer"" init></script>';
    return $tag;
}"
gDNjh7dM,zentao,huezohuezo1990,Bash,Wednesday 20th of December 2023 03:29:47 PM CDT,docker run -d -p  80: 80 -v /www/zentaopms:/www/zentaopms -v /var/lib/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=zentao -e MYSQL_INTERNAL=true  easysoft/zentao:16.4
rSnSVYuk,LuaGame - System - Quests,CaiusNelson,Lua,Wednesday 20th of December 2023 03:28:14 PM CDT,"SaveData.quests={}

function Quests.Quest_Begin(quest)
    if Quests.CanActivateQuest()==false then
        SaveData.quests[quest]={active=true}

        Quests[quest].Set_QuestState(quest,1)
    end
end

function Quests.Quest_Cancel(quest)
    SaveData[quest].cancel=true
    Quests.Set_QuestEnd(quest)
end

function Quests.Quest_Complete(quest)
    SaveData[quest].complete=true
    Quests.Set_QuestEnd(quest)
end

function Quests.Quest_Fail(quest)
    Quests.Set_QuestEnd(quest)
end

--Util
function Quests.Set_QuestEnd(quest)
    SaveData[quest].active=false
    SaveData[quest].ended=true
end

function Quests.CanActivateQuest(quest)
    return not SaveData[quest].active and not SaveData[quest].ended
end

function Quests.Set_QuestState(quest,state)
    SaveData.quests[quest].state=state
    SaveData.quests[quest].nodes[state].OnStateBegin()
end

function ALUA.Quests.Next_QuestState(quest)
    local new_state = SaveData.quests[quest].state+1
    if Quests[quest].nodes[new_state] then
        Quests.Set_QuestState(quest,new_state)
    else
        Quests.Quest_Complete(quest)
    end
    
end

-- gets
function Quests.Get_ActiveQuests()
    return {}
end

function Quests.Get_CompleteQuests()
    return {}
end

function Quests.Get_FailedQuests()
    return {}
end

------------------------------
Quests[""example""]={

    nodes={}
}"
vatkJFxa,charapp,Lancere,Lua,Wednesday 20th of December 2023 03:05:22 PM CDT,http://www.roblox.com/asset?id=14083380;http://www.roblox.com/asset?id=6856488235;http://www.roblox.com/asset?id=6479829829;http://www.roblox.com/asset?id=13334984&version=1;
znfnUhhQ,Untitled,sissou123,Python,Wednesday 20th of December 2023 02:56:00 PM CDT,"Learn Python Programming Masterclass
Learn Python like a Professional - Start from the basics and go all the way to creating your own applications & games!
for more:https://dz-linkk.com/h7KmBp"
H7Zh3CWQ,Plot Indicatore Test Equity Control Drawdown,Maurizio-Ciullo,JavaScript,Wednesday 20th of December 2023 02:45:45 PM CDT,"// **************************************************************************************************************************
//                                                                Plot Indicatore Test Equity Control Drawdown
	                                         // Su questo study bisogna caricare i dati Equity Compresi di Capitale Iniziale Su Data 2 //
// **************************************************************************************************************************	

// **************************************************************************************************************************
// 															2 Metodi EQC:
// 1) Start sopra equityControlPercent ""relative rawdown percent"", stop sotto equityControlPercent ""relative rawdown percent""
// 2) Start sopra equityControlPercent ""relative rawdown percent"" ma con una nuova rottura dell'equity , stop sotto equityControlPercent ""relative rawdown percent""
// **************************************************************************************************************************

// **************************************************************************************************************************
//     Il plotshape Indica se la soglia di drawdown di input è stata superata o meno con x verde e rossa.
//     Per il metodo di ingresso 1) il plotshape coincide con gli ingressi.
//     Per il metodo di ingresso 2) L' EquityBroken deve risultare a 0 e il plotshape non ha niente a che vedere con gli ingressi.
// **************************************************************************************************************************	

 
 Input:
 equityControlPercent(7);
 
 Vars: 
 	FirstBar(0), // Variabile per salvare l'indice della prima barra // da cancelare
 	balance(0),
 	highestRelativeEquity(0),
 	relativeDrawdownMonetary(0),
 	lowestRelativeEquity(0),
 	relativeDrawdownPercent(0),
 	tradingAllowed(false),
 	tradingNotAllowed(false);
 	 
// **************************************************************************************************************************
// Inizio a utilizzare una percentuale del massimo drawdown relativo per stoppare l'operatività e ritorna ad operare quando è al di sopra della stessa percentuale BUONO FUNZIONA !!!
// **************************************************************************************************************************			  
// Balance
balance = (close Of Data2);

// Highest Relative Equity
highestRelativeEquity = MaxList(balance, highestRelativeEquity);

// LowestRelativeEquity E RelativeDrawdownMonetary E RelativeDrawdownPercent
if balance <= highestRelativeEquity then
	lowestRelativeEquity = minlist(highestRelativeEquity, balance);
	relativeDrawdownMonetary = (highestRelativeEquity - balance);
	relativeDrawdownPercent = (relativeDrawdownMonetary / highestRelativeEquity) * 100;
   
// **************************************************************************************************************************
// Clear the print log when the strategy first applyed or refreshed and print values on the log window
// **************************************************************************************************************************
Once Clearprintlog;
print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ), "", "", "" HighestRelativeEQ= "" ,highestRelativeEquity, "", "", "" LowestRelativeEQ= "" ,lowestRelativeEquity, "", "", "" RelativeDrawdownMonetary= "", relativeDrawdownMonetary, "", "", "" RelativeDrawdownPercent= "", relativeDrawdownPercent , "" %"", "", "", "" BarNum= "", BarNumber);

// **************************************************************************************************************************
// Inizio Provo Start Stop Equity Trading Con una percentuale del massimo drawdown relativo Solo Per Prova
// **************************************************************************************************************************
// Condizioni Segnale Start/Stop
If relativeDrawdownPercent >= 0 and relativeDrawdownPercent <= equityControlPercent Then
	tradingAllowed = true
Else Begin
	tradingAllowed = false;
End;
	
if tradingAllowed = true Then
	plot1(tradingAllowed, ""Trading Allowed Relative DD %"", Green)
Else
	plot1(tradingAllowed, ""Trading Allowed Relative DD %"", Red);

	
// ************************************************************************************************************************** 
// Plot su strategy 1mo plot Start
// **************************************************************************************************************************
If relativeDrawdownPercent >= 0 and relativeDrawdownPercent <= equityControlPercent then//and mp[0] <> mp[1] and mp[0] <> 0 Then
Begin
	Value1 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value1, Green);
	Text_setstyle(Value1, 2, 0);
End;

// ************************************************************************************************************************** 
// Plot su strategy 2ndo plot End
// **************************************************************************************************************************
If relativeDrawdownPercent > equityControlPercent then //and mp[0] <> mp[1] and mp[0] <> 0 Then // and relativeDrawdownPercent <= 7
Begin
	Value2 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value2, Red);
	Text_setstyle(Value2, 2, 0);
End;

plot2(BarNumber, ""BarNumber"");	
//plot4(Currentbar, ""CurrentBar"");

plot3(relativeDrawdownPercent, ""Relative Drawdown Percent"", Yellow);

{var: MP(0);
MP = I_Marketposition;
plot4(MP);}

// **************************************************************************************************************************
// Equity Control. Stoppa l'operatività ad una percentuale input derivanta dal massimo drawdown relativo della strategia originale caricata in data2 ""Balance Con Initial Capital di tutte le candele"" EQC_Method = 2
// La strategia Riparte quando rompiamo un nuovo massimo dell'equity e non abbiamo raggiunto l'input del massimo drawdown ammesso ES: Stop >= 7% Max DD; Restart New Highest Equity High and < 7% Max DD;
// **************************************************************************************************************************	
vars:
EquityBroken(0);  // When we have a new Equity High and Relative Drawdown is Less then equityControlPercent the value is set to 0 else 1. ""Start Straidng Broke Equity Allowed""

If relativeDrawdownPercent > equityControlPercent then 
	EquityBroken = EquityBroken +1
else if
	relativeDrawdownPercent = 0 then
	EquityBroken = 0;
	
plot5(EquityBroken, ""Equity Broken"")
"
3V6ENWxF,Indicatore Test Equity Control Drawdown,Maurizio-Ciullo,JavaScript,Wednesday 20th of December 2023 02:45:11 PM CDT,"
																		// Indicatore Test Equity Control Drawdown //
														// Su questo indicatore bisogna caricare i dati Equity Compresi di Capitale Iniziale Su Data 1 //

// Mettere input % di Drawdown !!!!

 Vars: 
 	FirstBar(0), // Variabile per salvare l'indice della prima barra // da cancelare
 	balance(0),
 	highestRelativeEquity(0),
 	relativeDrawdownMonetary(0),
 	lowestRelativeEquity(0),
 	relativeDrawdownPercent(0);

                                                                                                                                                                                                                                        
 			  //////////////////////////////////// Inizio a utilizzare una percentuale del massimo drawdown relativo per stoppare l'operatività  BUONO FUNZIONA !!! ////////////////////////////////////
 			  
 // Balance
balance = (close);

// Highest Relative Equity
highestRelativeEquity = MaxList(balance, highestRelativeEquity);


// LowestRelativeEquity E RelativeDrawdownMonetary E RelativeDrawdownPercent
if balance <= highestRelativeEquity then
	lowestRelativeEquity = minlist(highestRelativeEquity, balance);
	relativeDrawdownMonetary = (highestRelativeEquity - balance);
	relativeDrawdownPercent = (relativeDrawdownMonetary / highestRelativeEquity) * 100;


// Clear the print log when the strategy first applyed or refreshed
Once Clearprintlog;
print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ), "", "", "" HighestRelativeEQ= "" ,highestRelativeEquity, "", "", "" LowestRelativeEQ= "" ,lowestRelativeEquity, "", "", "" RelativeDrawdownMonetary= "", relativeDrawdownMonetary, "", "", "" RelativeDrawdownPercent= "", relativeDrawdownPercent , "" %"", "", "", "" BarNum= "", BarNumber);
 
			///////////////////////////////////// Fine Provo a utilizzare una percentuale del massimo drawdown relativo per stoppare l'operatività  BUONO FUNZIONA !!! ////////////////////////////////////


            //////////////////////////////////// Inizio Provo Start Stop Equity Trading Con una percentuale del massimo drawdown relativo Solo Per Prova ////////////////////////////////////

// Condizioni Entrata/Uscita
If relativeDrawdownPercent >= 0 and relativeDrawdownPercent <= 7 Then
	buy(""Start"") 1 Contract next bar at Market;

If relativeDrawdownPercent > 7 Then 
	Sell(""Stop"") 1 Contract next bar at Market;

                 //////////////////////////////////// Fine Provo Start Stop Equity Trading Con una percentuale del massimo drawdown relativo Solo Per Prova ////////////////////////////////////
 

				//////////////////////////////////// Inizio Equity Filtered ""Non ha il pezzo di equity escluso dal equity control ////////////////////////////////////	
// Sul file .csv carico: Date/Time/Open/High/Low /Equity/Volume Per una questione di caricamento su tradestatio... . Apro il grafico, clicco su una candela 2 volte e nelle impostazioni style clicco su line on close.			

{Vars:
    mp(0),
    formattedDate(""""),
    formattedTime(""""),
    dateTimeString("""");

mp = marketposition;

If relativeDrawdownPercent >= 0 and relativeDrawdownPercent <= 7 Then Begin 
    // Formatta la data nel formato ""MM-dd-yyyy"" 
    formattedDate = FormatDate(""dd-MM-yyyy"", ElDateToDateTime(Date));
    
    // Formatta l'ora nel formato ""00:00:00""
    formattedTime = BarDateTime.Format(""%H:%M:%S"");
    
    // Combina data e ora nel formato richiesto
    dateTimeString = formattedDate + "","" + formattedTime;
    
    // Stampa nel file CSV
    Print(File(""C:\Users\Utente\Desktop\Equity Control\Tradestation\Swing Trend Trailing\Exports\Export_Equity_Filtered.csv""), dateTimeString, "","", open, "","", high, "","", low, "","", NumToStr(Close, 2) , Volume, "","");
end;}

//////////////////////////////////// Fine Equity Filtered ""Non ha il pezzo di equity escluso dal equity control ////////////////////////////////////"
K0SpLRBx,Untitled,sissou123,Java,Wednesday 20th of December 2023 02:44:46 PM CDT,"Learning Java is one of the fastest ways to improve your career prospects as it is one of the most in demand tech skills! This course will help you in better understanding every detail of Data Structures and how algorithms are implemented in high level programming language.
for more:https://cuty.io/7BjgIJf14"
hn6qPu4m,Indicatore Carica Dati Mancanti Equity Control,Maurizio-Ciullo,JavaScript,Wednesday 20th of December 2023 02:44:30 PM CDT,"
                                                        // Indicatore Carica Dati Mancanti Equity Control //
                              // Quando Estrapolo l'equity usando il bars back della strategia mancano i dati del barsback, in questo modo riempio il csv dei dati mancanti.
                                                        // Sul print del file: NumToStr(100000, 2) inserire il capitale iniziale della strategia

 
 Vars:
    mp(0),
    formattedDate(""""),
    formattedTime(""""),
    dateTimeString("""");
    
 Vars: 
 	balance(0),
 	highestRelativeEquity(0),
 	relativeDrawdownMonetary(0),
 	lowestRelativeEquity(0),
 	relativeDrawdownPercent(0);

Begin
    // Formatta la data nel formato ""MM-dd-yyyy""
    formattedDate = FormatDate(""yyyy-MM-dd"", ElDateToDateTime(Date));
    
    // Formatta l'ora nel formato ""00:00:00""
    formattedTime = BarDateTime.Format(""%H:%M:%S"");
     
    // Combina data e ora nel formato richiesto
    dateTimeString = formattedDate + "","" + formattedTime;

// Stampa nel file CSV  {ATTENZIONE: INSERIRE IL CAPITALE INIZIALE DELLA STRATEGIA SU CUI USARE L'EQUITY CONTROL: NumToStr(100000, 2) QUI USATI 100.000 $}
	Print(File(""C:\Users\Utente\Desktop\Equity Control\Tradestation\Swing Trend Trailing\Exports\Export_Equity_Candel_Iniz.csv""), dateTimeString, "","", open, "","", high, "","", low, "","", NumToStr(100000, 2) , Volume, "",""); 
End;"
CKexJtQF,Untitled,Robear9992,C#,Wednesday 20th of December 2023 02:43:10 PM CDT,"using System;

namespace JasonsGame.Items;

public class Item
{
  private Rarity _rarity;
  public string _name;

  public Rarity Rarity
  {
    get
    {
      return _rarity;
    }
  }
  public Item(Rarity rarity, string name)
  {
    #region Validation
    if (String.IsNullOrWhiteSpace(name))
      throw new ArgumentNullException(nameof(name));
    #endregion

    _rarity = rarity;
    _name = name;
  }
}

public class Backpack : Item
{
  public int _space;

  public Backpack(Rarity rarity, string name, int space) : base(rarity, name) => _space = space;
}

public class Weapon : Item
{
  private int _damage;

  public Weapon(Rarity rarity, string name, int damage) : base(rarity, name) => _damage = damage;
}

public enum Rartity
{
  Common,
  Uncommon,
  Epic,
  Rare,
  Legendary,
  Mythic,
}

public class LootTable
{
  //1st roll for chest luck
  public int CommonThreshold = 80;
  public int UncommonThreshold = 55;
  public int RareThreshold = 35;
  public int EpicThreshold = 20;
  public int LegendaryThreshold = 10;
  public int MythicThreshold = 15;

  public Rarity GetItemRarity()
  {
    //Instance of Random Class
    Random randomGen = new Random();

    //generate a random number between 1-100
    int randomRoll = randomGen.Next(1, 100);

    //2nd roll for specific item
    if (randomRoll < CommonThreshold)
    {
      return Rarity.Common;
    }
    else if (randomRoll < UncommonThreshold)
    {
      return Rarity.Uncommon;
    }
    else if (randomRoll < RareThreshold)
    {
      return Rarity.Rare;
    }
    else if (randomRoll < EpicThreshold)
    {
      return Rarity.Epic;
    }
    else if (randomRoll < LegendaryThreshold)
    {
      return Rarity.Legendary;
    }
    else if (randomRoll < MythicThreshold)
    {
      return Rarity.Mythic;
    }
    else
    {
      throw new Exception(""No loot found"");
    }
  }

  public LootTable() { }
}

public enum Rarity
{
  Common,
  Uncommon,
  Rare,
  Epic,
  Legendary,
  Mythic
}

class Program
{
  public static void Main(string[] args)
  {
    var commonBackpack = new Backpack(Rarity.Legendary, ""Valuable Satchel"", 25);

    var lootTable = new LootTable();
    //lootTable.EpicThreshold = 1000;

    var newItemsRarity = lootTable.GetItemRarity();

    var rarity = (Rarity)new Random().Next(0, 5);
  }
}
"
MQjazyyJ,Bot Swing Trend Trailing Equity Control Drawdown,Maurizio-Ciullo,JavaScript,Wednesday 20th of December 2023 02:43:07 PM CDT,"
														         // Bot Swing Trend Trailing Equity Control Drawdown //
														         
// **************************************************************************************************************************
// 															2 Metodi EQC:
// 1) Start sopra equityControlPercent ""relative rawdown percent"", stop sotto equityControlPercent ""relative rawdown percent""
// 2) Start sopra equityControlPercent ""relative rawdown percent"" ma con una nuova rottura dell'equity , stop sotto equityControlPercent ""relative rawdown percent""
// **************************************************************************************************************************														         													         
														         
// **************************************************************************************************************************
// 																		Inizio Equity Control
// **************************************************************************************************************************														         
	  
Input: Start_EQC_Inputs(""--------------""),  
	   EQC_Method_Inp(0),
	   equityControlPercent(7),    
	   Start_Strategy_Inputs(""--------------""); 

Var:   EQC_Method(false),
	   EquityBroken(0), 
	   balance2(0),
 	   highestRelativeEquity2(0),
 	   relativeDrawdownMonetary2(0),
 	   lowestRelativeEquity2(0),
 	   relativeDrawdownPercent2(0);
 	 
balance2 = (close Of Data2);

// Highest Relative Equity
highestRelativeEquity2 = MaxList(balance2, highestRelativeEquity2);

// LowestRelativeEquity E RelativeDrawdownMonetary E RelativeDrawdownPercent
if balance2 <= highestRelativeEquity2 then
	lowestRelativeEquity2 = minlist(highestRelativeEquity2, balance2);
	relativeDrawdownMonetary2 = (highestRelativeEquity2 - balance2);
	relativeDrawdownPercent2 = (relativeDrawdownMonetary2 / highestRelativeEquity2) * 100;


// When we have a new Equity High and Relative Drawdown is Less then equityControlPercent the value is set to 0 else 1. ""Start Straidng Broke Equity Allowed""	
If relativeDrawdownPercent2 > equityControlPercent then 
	EquityBroken = EquityBroken +1
else if
	relativeDrawdownPercent2 = 0 then
	EquityBroken = 0;
	
// **************************************************************************************************************************
// Entrata Senza Equity Control EQC_Method = 0
// **************************************************************************************************************************	
if EQC_Method_Inp = 0 then begin
	EQC_Method = true;
end
// **************************************************************************************************************************
// Equity Control. Stoppa l'operatività ad una percentuale input derivanta dal massimo drawdown relativo della strategia originale caricata in data2 ""Balance Con Initial Capital di tutte le candele""  EQC_Method = 1
// **************************************************************************************************************************		
else if EQC_Method_Inp = 1 then begin
	EQC_Method = relativeDrawdownPercent2 >= 0 and relativeDrawdownPercent2 <= equityControlPercent;
end
// **************************************************************************************************************************
// Equity Control. Stoppa l'operatività ad una percentuale input derivanta dal massimo drawdown relativo della strategia originale caricata in data2 ""Balance Con Initial Capital di tutte le candele"" EQC_Method = 2
// La strategia Riparte quando rompiamo un nuovo massimo dell'equity e non abbiamo raggiunto l'input del massimo drawdown ammesso ES: Stop >= 7% Max DD; Restart New Highest Equity High and < 7% Max DD;
// **************************************************************************************************************************	
else if
	EQC_Method_Inp = 2 then Begin
	EQC_Method =  EquityBroken = 0;
end;
	
	
	
// **************************************************************************************************************************
//																			 Inizio Strategia
// **************************************************************************************************************************	
	
//Il trading system completo - Swing-Trend-Trailing (Strategia Trend Following Con Swing Di Posizione) - parte 1
// (Exchange= FTX) (Sottostante ETH-PERP) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO') (Esclusione Mesi=NO) 
// (Take Profit Long/Short Market = Trailing) (Take Profit Limit Long/Short= NO) (Stop Loss Limit Long/Short= -10%) (Stop Loss Market Long/Short= SI) (Trailing Stop=SI) (Stop Emergenza= NO)
// (Rischio Operazione 2% Perdita Media)
// (In Sample Dal=17/08/2017 Al 17/10/2020) (Out Of Sample Dal=18/10/2020 Al 15/03/2021)

// GLI IMPUT POTREBBERO ESSERE DIVERSI E VANNO PRESI DAL CODICE DI PINESCRIPT, INSERIRE ANCHE LE VARIABILI SHORT CHE POTREBBERO AVERE INPUT DIVERSI

// Auentare il Max Bars Back Su Tradestation Altrimenti Non Funziona Il Conteggio Barssinceentry 500 E Cliccare Su Enable Strategy Altrimenti Non Parte

input:
  InitialCapital(100000),
  percent_risk(25),
  lunghezza_ema(90),
  perc_apertura_minima(2),
  perc_apertura_massima(4),
  perc_chiusura_minima(0),
  input_trailing_stop_trigger(12),
  input_trailing_stop_close(6),
  input_stop_loss_percent(10),  // Unico Long E Short
  //skipday(saturday),
  //skipmonth1(10), 
  //skipmonth2(9),
  solo_long(false),
  solo_short(false);
   
  
Vars:
   media_ema(0),
   apertura_minima(0),
   apertura_massima(0),
   chiusura_minima(0),
   stop_loss(0),
   media_ema_1(0),
   trailing_stop_trigger(0),
   trailing_stop_close(0),
   trailing_stop_trigger_long(0),
   trailing_stop_close_long(0),
   trailing_stop_trigger_short(0),
   trailing_stop_close_short(0),
   trailing_long(false),
   trailing_short(false),
   highesthigh(0),
   lowestlow(0),
   ATR(0),
   risk(0),
   nr_share(0);
   

// Calcololo degli indicatori 
      media_ema = XAverage(Close, lunghezza_ema);
      media_ema_1 = XAverage(Close[1], lunghezza_ema);
  
// calcolo dei filtri in percentuale
  apertura_minima   = (media_ema / 100) * perc_apertura_minima;
  apertura_massima  = (media_ema / 100) * perc_apertura_massima;
  chiusura_minima   = (media_ema / 100) * perc_chiusura_minima;
  
  // Calcolo Trailing Stop Long E Short
  trailing_stop_trigger_long = Entryprice + (entryprice * input_trailing_stop_trigger)/100;
  trailing_stop_close_long = entryprice + (entryprice * input_trailing_stop_close)/100;
  trailing_stop_trigger_short = Entryprice - (entryprice * input_trailing_stop_trigger)/100;
  trailing_stop_close_short = entryprice - (entryprice * input_trailing_stop_close)/100;
  
  // Originale
  {trailing_long = high >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[1] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long)  or (MarketPosition =1 and high[2] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[3] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long)
     or (MarketPosition =1 and high[4] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[5] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[6] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[7] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long)
     or (MarketPosition =1 and high[8] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[9] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[10] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[11] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long)
     or (MarketPosition =1 and high[12] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[13] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[14] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long) or (MarketPosition =1 and high[15] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long)
     or (MarketPosition =1 and high[16] >= trailing_stop_trigger_long and Close < trailing_stop_close_long and close[1] > trailing_stop_close_long);
  
  // Originale
  trailing_short = low <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[1] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short)  or (MarketPosition =-1 and low[2] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[3] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short)
     or (MarketPosition =-1 and low[4] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[5] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[6] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[7] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short)
     or (MarketPosition =-1 and low[8] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[9] <=trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[10] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[11] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short)
     or (MarketPosition =-1 and low[12] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[13] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[14] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short) or (MarketPosition =-1 and low[15] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short)
     or (MarketPosition =-1 and low[16] <= trailing_stop_trigger_short and  Close > trailing_stop_close_short and close[1] < trailing_stop_close_short);}
  
 {trailing_long = high >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[1] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long)  or (MarketPosition =1 and high[2] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[3] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long)
     or (MarketPosition =1 and high[4] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[5] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[6] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[7] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long)
     or (MarketPosition =1 and high[8] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[9] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[10] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[11] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long)
     or (MarketPosition =1 and high[12] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[13] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[14] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long) or (MarketPosition =1 and high[15] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long)
     or (MarketPosition =1 and high[16] >= trailing_stop_trigger_long and Close cross under trailing_stop_close_long);
  
  trailing_short = low <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[1] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)  or (MarketPosition =-1 and low[2] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[3] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)
     or (MarketPosition =-1 and low[4] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[5] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[6] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[7] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)
     or (MarketPosition =-1 and low[8] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[9] <=trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[10] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[11] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)
     or (MarketPosition =-1 and low[12] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[13] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[14] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short) or (MarketPosition =-1 and low[15] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)
     or (MarketPosition =-1 and low[16] <= trailing_stop_trigger_short and  Close cross over trailing_stop_close_short)} 
 
  highesthigh = highest(high, Barssinceentry);
  trailing_long = (highesthigh >= trailing_stop_trigger_long and close <= trailing_stop_close_long);

  lowestlow = lowest(low, Barssinceentry);	
  trailing_short = (lowestlow <= trailing_stop_trigger_short and close >= trailing_stop_close_short);
  
  
// Money menagment
  risk = percent_risk/100;
  nr_share = floor((InitialCapital + NetProfit) * risk) / close ;
  stop_loss=((((InitialCapital + NetProfit) * risk)/100) * input_stop_loss_percent);
  
// **************************************************************************************************************************
// // Entrata/Uscita Long
// **************************************************************************************************************************	
// Entrata Long
                                                                                         { and (close[1] < ema1 + apertura_minima or low[1] < ema1 + apertura_minima Tradingview}
    //if close > (media_ema+apertura_minima) and close < (media_ema + apertura_massima) and close[2] < (media_ema+apertura_minima) and open > close  and not solo_short {and Dayofweek(date) <> skipday and month(date) <> skipmonth1 and Dayofmonth(date) > 5} then
      if close > (media_ema + apertura_minima)  and close < (media_ema + apertura_massima) and ((close[1] < (media_ema_1 + apertura_minima)) or (low[1] < (media_ema_1 + apertura_minima))) and close > open  and not solo_short {and Dayofweek(date) <> skipday and month(date) <> skipmonth1 and Dayofmonth(date) > 5} and EQC_Method then//and relativeDrawdownPercent2 >= 0 and relativeDrawdownPercent2 <= equityControlPercent then
      Buy(""Long"") nr_share contracts Next Bar at market;
              
// Uscita Long    
    if close < media_ema - chiusura_minima then
       Sell(""Chiusura Long"") from entry(""Long"") Next Bar at market; 
      
 // Uscita Trailing Long  
    If (MarketPosition =1 and trailing_long) then
     Sell(""Trailing Long"") from entry(""Long"") Next Bar at market;
  
// **************************************************************************************************************************
// Entrata/Uscita Short
// **************************************************************************************************************************      
// Entrata Short
                                                                                           {and (close[1] > ema1 - apertura_minima or low[1] > ema1 - apertura_minima)}
      if  close < (media_ema - apertura_minima) and close > (media_ema - apertura_massima) and ((close[1] > (media_ema_1 - apertura_minima)) or (high[1] > (media_ema_1 - apertura_minima))) and close < open and not solo_long {and Dayofweek(date) <> skipday and month(date) <> skipmonth1 and Dayofmonth > 5}  and EQC_Method then //and relativeDrawdownPercent2 >= 0 and relativeDrawdownPercent2 <= equityControlPercent then
      Sellshort(""Short"") nr_share Contracts Next Bar at market;
                  
// Uscita Short  
    if close > (media_ema + chiusura_minima) then
        Buytocover(""Chiusura Short"") from entry(""Short"") Next Bar at market;
   
  // Uscita Trailing Short        
     If (MarketPosition =-1 and trailing_short) then    
        Buytocover(""Trailing Short"") from entry(""Short"") Next Bar at market;
     
Setstopposition;
SetStopLoss(stop_loss);
 
// **************************************************************************************************************************
											 					// Fine Strategia
// **************************************************************************************************************************


// **************************************************************************************************************************
// Calcolo dell relative drawdown della strategia attuale che stà girando Data1 ""Strategy""
// **************************************************************************************************************************	
inputs: Start_EQC_Input(""--------------"");
 
 Vars:
    mp(0),
    formattedDate(""""),
    formattedTime(""""),
    dateTimeString("""");
    
 Vars: 
 	balance(0),
 	highestRelativeEquity(0),
 	relativeDrawdownMonetary(0),
 	lowestRelativeEquity(0),
 	relativeDrawdownPercent(0);

// Balance 
balance = (InitialCapital + NetProfit);
mp = marketposition;

// Highest Relative Equity 
highestRelativeEquity = MaxList(balance, highestRelativeEquity);


// LowestRelativeEquity E RelativeDrawdownMonetary E RelativeDrawdownPercent
if balance <= highestRelativeEquity then
	lowestRelativeEquity = minlist(highestRelativeEquity, balance);
	relativeDrawdownMonetary = (highestRelativeEquity - balance);
	relativeDrawdownPercent = (relativeDrawdownMonetary / highestRelativeEquity) * 100;
 
// **************************************************************************************************************************
// Export Equity Con Initial Capital Incluso Di Tutte Le Candele Eccetto BarsBack Della Strategia On Csv //
// **************************************************************************************************************************													
// Sul file .csv carico: Date/Time/Open/High/Low /Equity/Volume Per una questione di caricamento su tradestation... . Apro il grafico, clicco su una candela 2 volte e nelle impostazioni style clicco su line on close
// per avere una linea con solo i valori dell'equity profitti/perdite cumulative con l'initial capital.

//if mp[0] <> mp[1] and mp[0] <> 0 then begin { Solo per scaricare i dati ad ogni inizio nuova operazione, se commentato scarico tutte le candele.}
// Quando carico Data2 il numero delle candele deve coincidere con il Data1, altrimenti tradestation non riesce a caricarli, per questo motivo scarico il balance di ongi candela.
Inputs: printFileEquityWithInitCapitAllCandles(false),
		printLogStrategy(false),
        printLogEquity(false);

If printFileEquityWithInitCapitAllCandles = True {and mp[0] <> mp[1] and mp[0] <> 0 then begin} Then Begin
    // Formatta la data nel formato ""MM-dd-yyyy""
    formattedDate = FormatDate(""yyyy-MM-dd"", ElDateToDateTime(Date));
    
    // Formatta l'ora nel formato ""00:00:00""
    formattedTime = BarDateTime.Format(""%H:%M:%S"");
     
    // Combina data e ora nel formato richiesto
    dateTimeString = formattedDate + "","" + formattedTime;

// Stampa nel file CSV il balance della strategia originale tutte le candele eccetto barbacks
	Print(File(""C:\Users\Utente\Desktop\Equity Control\Tradestation\Swing Trend Trailing\Exports\Export_Equity.csv""), dateTimeString, "","", open, "","", high, "","", low, "","", NumToStr(balance, 2) , Volume, "","");    
End;

// Print Log Strategy Data1 Tutte Le Candele
if printLogStrategy = true Then
Begin
	Once Clearprintlog; // Clear the print log when the strategy first applyed or refreshed
	print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ), "", "", "" HighestRelativeEQData1= "" ,highestRelativeEquity, "", "", "" LowestRelativeEQData1= "" ,lowestRelativeEquity, "", "", "" RelativeDrawdownMonetaryData1= "", relativeDrawdownMonetary, "", "", "" RelativeDrawdownPercentData1= "", relativeDrawdownPercent , "" %"", "", "", "" BarNumData1= "", BarNumber);
End;

// Print Log Equity Data2 Tutte Le Candele
if printLogEquity = true Then
Begin
	Once Clearprintlog; // Clear the print log when the strategy first applyed or refreshed
	print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ), "", "", "" HighestRelativeEQData2= "" ,highestRelativeEquity2, "", "", "" LowestRelativeEQData2= "" ,lowestRelativeEquity2, "", "", "" RelativeDrawdownMonetaryData2= "", relativeDrawdownMonetary2, "", "", "" RelativeDrawdownPercentData2= "", relativeDrawdownPercent2 , "" %"", "", "", "" BarNumData2= "", BarNumber);
End;

// **************************************************************************************************************************
// Plotshape E Print Della Strategia Che Stà Girando Data1 ""Strategy"" //  Mostra solo se il DrawDown Supera o meno il valore di input. Non ha nulla a che fare con gli ingressi.                                             
// **************************************************************************************************************************
Input: plotshapeStrategy(false);
       
// Plot su strategy 1mo plot Start Della Strategia Che Stà Girando Data1 ""Strategy""
If plotshapeStrategy = true and relativeDrawdownPercent < equityControlPercent {and mp <> 0} Then             
Begin
	Value1 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value1, Green);
	Text_setstyle(Value1, 2, 0);
End;

// Plot su strategy 2ndo plot End Solo Dei Trade Conclusi Della Strategia Che Stà Girando Data1 ""Strategy""
If plotshapeStrategy = true and (relativeDrawdownPercent > equityControlPercent) {and (mp = 0) or (mp <> 0))} Then
Begin
	Value2 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value2, Red);
	Text_setstyle(Value2, 2, 0);
End;

// **************************************************************************************************************************
// Plotshape E Print Start End Dell'Equity Di Data2 ""Equity"" // Questo ha a che fare con gli ingressi
// **************************************************************************************************************************
Input: plotshapeEquity(false),
       printStartEndEquity(false);
       
// Plot su strategy 1mo plot Start Solo Del'equity Data2 ""Equity""
If plotshapeEquity = true and EQC_Method {and mp <> 0} Then
Begin
	Value3 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value3, Green);
	Text_setstyle(Value3, 2, 0);
End;

// Plot su strategy 2ndo plot End Solo Del'equity Data2 ""Equity""
If plotshapeEquity = true and (relativeDrawdownPercent2 > equityControlPercent) {and (mp = 0) or (mp <> 0))} Then 
Begin
	Value4 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value4, Red);
	Text_setstyle(Value4, 2, 0);
End;


// Print delle date Start Dell'equity Data2 ""Equity""
If printStartEndEquity = true then
Begin 
	Once Clearprintlog; // Clear the print log when the strategy first applyed or refreshed
	if EQC_Method and close of data2 <> close[1] of data2 Then {and close of data2 <> close[1] of data2 ""Riduce I Log Non Necessari""}
	print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ),  "" Start Equity Data2"", "", "", "" DD="", relativeDrawdownPercent2, "" %"");
// Print delle date End Dell'equity Data2 ""Equity""
	if (relativeDrawdownPercent2 > equityControlPercent) and close of data2 <> close[1] of data2 Then {and close of data2 <> close[1] of data2 ""Riduce I Log Non Necessari""}
	print(Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ),  "" End Equity Data2"", "", "", "" DD="", relativeDrawdownPercent2, "" %"");
End;

// **************************************************************************************************************************
// Export Equity With No Initial Capital On Csv Solo Dei Trade Conclusi //
// **************************************************************************************************************************													
// Sul file .csv carico: Date/Time/Open/High/Low /Equity/Volume Per una questione di caricamento su tradestation... . Apro il grafico, clicco su una candela 2 volte e nelle impostazioni style clicco su line on close
// per avere una linea con solo i valori dell'equity profitti/perdite cumulative.
 																				
{Vars:
    mp(0),
    formattedDate(""""),
    formattedTime(""""),
    dateTimeString("""");

mp = marketposition;

if mp[0] <> mp[1] and mp[0] <> 0 then begin
    // Formatta la data nel formato ""MM-dd-yyyy""
    formattedDate = FormatDate(""dd-MM-yyyy"", ElDateToDateTime(Date));
    
    // Formatta l'ora nel formato ""00:00:00""
    formattedTime = BarDateTime.Format(""%H:%M:%S"");
    
    // Combina data e ora nel formato richiesto
    dateTimeString = formattedDate + "","" + formattedTime;
    
    // Stampa nel file CSV
    Print(File(""C:\Users\Utente\Desktop\Equity Control\Tradestation\Swing Trend Trailing\Exports\Export_Equity.csv""), dateTimeString, "","", open, "","", high, "","", low, "","", NumToStr(NetProfit, 2) , Volume, "","");
end;}"
LpYUKzYw,Indicatore Export Trade List On Csv,Maurizio-Ciullo,JavaScript,Wednesday 20th of December 2023 02:39:30 PM CDT,"							// Export Trade List On Csv //


// Sul file .csv carico: Date/Time/Open/High/Low /Equity/Volume Per una questione di caricamento su tradestatio... . Apro il grafico, clicco su una candela 2 volte e nelle impostazioni style clicco su line on close.
 																				

Vars:
    mp(0),
    formattedDate(""""),
    formattedTime(""""),
    dateTimeString("""");

mp = marketposition;

if mp[0] <> mp[1] and mp[0] <> 0 then begin
    // Formatta la data nel formato ""MM-dd-yyyy""
    formattedDate = FormatDate(""dd-MM-yyyy"", ElDateToDateTime(Date));
    
    // Formatta l'ora nel formato ""00:00:00""
    formattedTime = BarDateTime.Format(""%H:%M:%S"");
    
    // Combina data e ora nel formato richiesto
    dateTimeString = formattedDate + "","" + formattedTime;
    
    // Stampa nel file CSV
    Print(File(""C:\Users\Utente\Desktop\Equity Control\Tradestation\Swing Trend Trailing\Exports\Export_Equity.csv""), dateTimeString, "","", open, "","", high, "","", low, "","", NumToStr(NetProfit, 2) , Volume, "","");
end;

"
CJ9KE4cP,Untitled,sissou123,Python,Wednesday 20th of December 2023 02:29:13 PM CDT,"Description
Become a Python Programmer and learn one of employer's most requested skills of 2023!
This is the most comprehensive, yet straight-forward, course for the Python programming 
language on Udemy! Whether you have never programmed before, already know basic syntax, 
or want to learn about the advanced features of Python, this course is for you! In this course we 
will teach you Python 3
for more:https://cuty.io/vUaaCxZXUbs"
ncr4yPP7,"Модуль 4. Строки, списки. Часть 2. Задание 1, пункт 1",plarmi,Python,Wednesday 20th of December 2023 02:16:24 PM CDT,"# Дан текст. Мы делим предложения по (ВНИМАНИЕ) точке и пробелу!!!!
text = ""lorem ipsum dolor sit amet. sagittis nisl rhoncus mattis rhoncus urna neque."".split("". "")

# Получился список, где отдельный элемент это одно предложение, но последнее предложение осталось с точкой
# Заменяем точку на пустоту и приводим весь текст в порядок, первая буква всегда большая, остальные маленькие
for i in range(len(text)):
    text[i] = text[i].replace(""."", """").capitalize()

# Создаём единый текст: достаём предложения из списка и соединяем их точкой и пробелом
# К последнему предложению «искусственно» добавляем точку (конкатенация)
new_text = "". "".join(text) + "".""
print(new_text)"
fGDqwEqP,Untitled,sissou123,C#,Wednesday 20th of December 2023 02:00:02 PM CDT,"C# Advanced Topics - The Next Logical Step
Learn advanced topics of the C# language like LINQ, Lambda, Extension Methods, Generics, Delegates, Events and more!
for more:https://dz-linkk.com/aXo9br"
MVfNLnaU,Timm.Thaler.oder.das.verkaufte.Lachen.2017.Deu.720p.h264.aac.Subs-bp,bpmircea,BrainFuck,Wednesday 20th of December 2023 01:51:26 PM CDT,"Timm Thaler oder Das verkaufte Lachen (The Legend of Timm Thaler or The Boy Who Sold His Laughter) (Andreas Dresen, 2017)
aka
Timm.Thaler.oder.das.verkaufte.Lachen.2017.Deu.720p.h264.aac.Subs-bp
https://www.imdb.com/title/tt4578050/

https://filecrypt.cc/Container/D370CF71F8.html

Audio tracks: de | Subtitles: de en es ru"
J5YN2Sn2,Timm.Thaler.oder.das.verkaufte.Lachen.2017.Deu.720p.h264.dts.Subs-bp,bpmircea,BrainFuck,Wednesday 20th of December 2023 01:50:13 PM CDT,"Timm Thaler oder Das verkaufte Lachen (The Legend of Timm Thaler or The Boy Who Sold His Laughter) (Andreas Dresen, 2017)
aka
Timm.Thaler.oder.das.verkaufte.Lachen.2017.Deu.720p.h264.dts.Subs-bp
https://www.imdb.com/title/tt4578050/

https://filecrypt.cc/Container/9814C1DF8E.html

Audio tracks: de | Subtitles: de en es ru"
gAGWj4Le,Untitled,sissou123,C#,Wednesday 20th of December 2023 01:49:22 PM CDT,"What's New in C#7, C#8, C#9 and C#10
Learn about latest features of C#7, C#8, C#9 and C#10
This short course covers the latest and greatest features of C#, covering versions 7, 7.1, 7.2, 7.3, 8.0, 9.0 and 10.0 of the language that are being sim-shipped with corresponding Visual Studio updates.
for more:https://dz-linkk.com/k8lA80"
FCdy65Sp,Untitled,sissou123,C#,Wednesday 20th of December 2023 01:42:02 PM CDT,"High Performance Coding with .NET Core and C#
Learn how to write high performance and scalable .NET Core and ASP.NET Core applications in C#
for more:https://dz-linkk.com/eZvo8x"
rYVFu4MR,scanner2,Dragon_voyageur,Lua,Wednesday 20th of December 2023 01:40:02 PM CDT,"search={...}
x=peripheral.wrap(""back"")
y=nil
while true do
y=x.scan(tonumber(search[1]))
if y ~= nil then
    for i,b in pairs(y) do
        if search[2]==nil or string.find(b[""name""],search[2]) then
       term.write(string.sub(string.format(""%-10s"",string.match(b[""name""],""[^:]+$"")),1,10).."" "")
       print(tostring(b[""x""]).."" ""..tostring(b[""y""]).."" ""..tostring(b[""z""]))
        end
    end
end
empty={term.getCursorPos()}
for j=empty[2],20,1 do
    term.clearLine()
    print("""")
    
end
sleep(1)
term.setCursorPos(1,1)
end"
XeDhh9iP,чередование согл+гласн,nq1s788,Python,Wednesday 20th of December 2023 01:36:55 PM CDT,"f = open('24.txt').readline()
answ = 0
cur = 0
s = ['CDF', 'AO']
for i in range(len(f)):
    if f[i] in s[cur % 2]:
        cur += 1
        if cur > answ:
            answ = cur
    else:
        cur = 0
print(answ)
"
LPQnJ5sY,соседние различные,nq1s788,Python,Wednesday 20th of December 2023 01:29:30 PM CDT,"f = open('24.txt').readline()
answ = 0
cur = 0
for i in range(1, len(f)):
    if f[i] != f[i - 1]:
        cur += 1
        if cur > answ:
            answ = cur
    else:
        cur = 0
print(answ + 1)"
mZMz8R4F,соседние различные,nq1s788,Python,Wednesday 20th of December 2023 01:28:15 PM CDT,"f = '0' + open('24.txt').readline()
answ = 0
cur = 0
for i in range(1, len(f)):
    if f[i] != f[i - 1]:
        cur += 1
        if cur > answ:
            answ = cur
    else:
        cur = 0
print(answ)"
i7euiWBw,HA - YAML - Send notification if doors / windows are open when last person leaves home,dykandDK,YAML,Wednesday 20th of December 2023 01:09:38 PM CDT,"alias: >-
  Send notifikation hvis der er åbne døre eller vinuder, når sidste person
  forlader hjemmet
description: >-
  Send notifikation hvis der er åbne døre eller vinuder, når sidste person
  forlader hjemmet
trigger:
  - platform: state
    entity_id: group.alle_personer
    to: not_home
condition:
  - condition: template
    value_template: >-
      {{ states.binary_sensor | selectattr('state', 'eq', 'on') |
      selectattr('attributes.device_class', 'eq', 'opening') |
      map(attribute='entity_id') | list | count > 0}}
action:
  - service: notify.anders_devices
    data:
      data: {}
      message: >-
        Følgende døre eller vinduer er åbne: {{ states.binary_sensor |
        selectattr('state', 'eq', 'on') | selectattr('attributes.device_class',
        'eq', 'opening') | map(attribute='attributes.friendly_name') | list |
        join(', ') }}
      title: Døre eller vinduer er åbne!
"
