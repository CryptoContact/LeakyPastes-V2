id,title,username,language,date,content
U09Ddifq,2024-03-10_stats.json,rdp_snitch,JSON,Sunday 10th of March 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""194.165.16.11"": 2,
    ""167.94.146.53"": 1,
    ""45.33.87.154"": 1,
    ""80.66.76.92"": 3,
    ""80.66.88.211"": 1,
    ""205.210.31.216"": 3,
    ""87.251.75.145"": 4,
    ""45.227.254.9"": 4,
    ""185.170.144.113"": 6,
    ""185.170.144.3"": 2,
    ""167.94.145.57"": 1,
    ""187.191.116.227"": 1,
    ""171.244.142.194"": 3,
    ""205.210.31.175"": 3,
    ""46.19.143.42"": 1,
    ""36.91.222.100"": 2,
    ""27.71.25.157"": 2,
    ""135.181.246.108"": 1,
    ""181.30.39.44"": 1,
    ""71.6.199.23"": 1,
    ""171.244.39.188"": 1,
    ""222.186.13.132"": 2,
    ""152.32.245.44"": 1,
    ""45.227.254.49"": 2,
    ""205.210.31.232"": 3,
    ""45.227.254.55"": 2,
    ""103.240.6.155"": 4,
    ""87.251.75.64"": 1,
    ""218.148.169.168"": 1,
    ""205.210.31.202"": 3
  },
  ""asn"": {
    ""AS48721"": 4,
    ""AS398705"": 2,
    ""AS63949"": 1,
    ""AS208091"": 9,
    ""AS396982"": 12,
    ""AS267784"": 8,
    ""AS197414"": 8,
    ""AS262545"": 1,
    ""AS38731"": 6,
    ""AS51852"": 1,
    ""AS7713"": 2,
    ""AS24940"": 1,
    ""AS7303"": 1,
    ""AS10439"": 1,
    ""AS4134"": 2,
    ""AS135377"": 1,
    ""AS151853"": 4,
    ""AS4766"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""Censys, Inc."": 2,
    ""Akamai Technologies, Inc."": 1,
    ""Xhost Internet Solutions LP"": 16,
    ""Xhost Internet Solutions"": 1,
    ""Google LLC"": 12,
    ""Mandic S.A."": 1,
    ""VIETEL"": 4,
    ""Private Layer INC"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""VIETTEL"": 2,
    ""Hetzner Online GmbH"": 1,
    ""Telecom Argentina S.A"": 1,
    ""CariNet, Inc."": 1,
    ""Chinanet"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Giza Network Limited"": 4,
    ""Korea Telecom"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 4,
    ""Censys, Inc."": 2,
    ""Linode"": 1,
    ""Xhost Internet Solutions"": 8,
    ""XHOSTIS"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""UAB Host Baltic"": 8,
    ""Xhostis"": 8,
    ""Mandic S.A"": 1,
    ""Viettel Corporation"": 4,
    ""Client1096"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Viettel Group"": 2,
    ""Hetzner Online GmbH"": 1,
    ""Fibertel"": 1,
    ""CariNet, Inc."": 1,
    ""Chinanet JS"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Giza Network Limited"": 4,
    ""Korea Telecom"": 1
  },
  ""regionName"": {
    ""Kaunas"": 4,
    ""Hesse"": 2,
    ""New Jersey"": 1,
    ""North Holland"": 16,
    ""Drenthe"": 1,
    ""California"": 13,
    ""Vilnius"": 8,
    ""Sao Paulo"": 1,
    ""Hanoi"": 6,
    ""Zurich"": 1,
    ""Jakarta"": 2,
    ""Uusimaa"": 1,
    ""Buenos Aires F.D."": 1,
    ""Jiangsu"": 2,
    ""Bangkok"": 1,
    ""Ho Chi Minh"": 4,
    ""Gyeonggi-do"": 1
  },
  ""country"": {
    ""Lithuania"": 12,
    ""Germany"": 2,
    ""United States"": 14,
    ""The Netherlands"": 17,
    ""Brazil"": 1,
    ""Vietnam"": 10,
    ""Switzerland"": 1,
    ""Indonesia"": 2,
    ""Finland"": 1,
    ""Argentina"": 1,
    ""China"": 2,
    ""Thailand"": 1,
    ""South Korea"": 1
  },
  ""account"": {
    ""Test"": 10,
    ""(empty)"": 4,
    ""Administr"": 13,
    ""msdIEiXrR"": 1,
    ""llWZNp"": 1,
    ""ZkQrLF"": 1,
    ""Domain"": 9,
    ""hello"": 13,
    ""POTDznWpm"": 1,
    ""BXtdnc"": 1,
    ""sAiKYR"": 1,
    ""root"": 1,
    ""nmap"": 2,
    ""Administrator"": 1,
    ""zEQglHzNl"": 1,
    ""mIEquM"": 1,
    ""uknIhH"": 1,
    ""nMgimtNZL"": 1,
    ""QtYhiV"": 1,
    ""kwEXql"": 1
  },
  ""keyboard"": {
    ""Unknown"": 65
  },
  ""client_build"": {
    ""Unknown"": 65
  },
  ""client_name"": {
    ""Unknown"": 65
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 22,
    ""mobile & hosting"": 2,
    ""proxy"": 2
  }
}"
78bPCCFT,The Bro Codes v1,cilerba,Ruby,Sunday 10th of March 2024 07:11:56 PM CDT,"# ==========================================
# The Bro Codes v1
# ==========================================

# Outputs the highest variable index of arguments 1-X in argument 0

# Usage:
# pbHighestVar(var_out, vars...)

def pbHighestVar(*args)
  # Store first variable argument before removing from Array
  out_var = args[0]
  args.delete_at(0)
  
  val = 0
  i = 0
  matches = []
  
  args.each do |var|
    if $game_variables[var] > val
      matches = [i]
      val = $game_variables[var]
    elsif $game_variables[var] == val
      matches.push(i)
    end
    i += 1
  end
  
  $game_variables[out_var] = args[matches[rand(matches.length)]]
end

def pbMapLoop(x_offset)
  $game_player.moveto($game_player.x + x_offset, $game_player.y)
  $game_map.update
  Graphics.frame_reset
  Input.update
end"
VWRkzV8z,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Sunday 10th of March 2024 07:04:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_699506.pdf

Working as of:
11 March 2024





















"
Fdt8yhMz,G2A.com Free Gift Card Guide Mar 2024 Updated,HastyBasher0,GetText,Sunday 10th of March 2024 06:46:00 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.

This is not my pastebin account and im using a random inactive one to post this.
 
PDF guide here:
https://smallpdf.com/file#s=e45853d1-004b-4ae4-968e-c4f2afc13e32
 
Working as of:
10 March 2024























"
AjFvFxmT,Untitled,K7413d,JavaScript,Sunday 10th of March 2024 06:33:45 PM CDT,"let ASCII = {
    // for numbers between 0 and 9
    1: function () {
        return (Math.floor(Math.random() * 10)) + 48; //return numbers between 48 to 57
    },
    // for all capital characters
    2: function () {
        return (Math.floor(Math.random() * 26)) + 65; //return numbers between 64 to 90
    },
    // for all small characters
    3: function () {
        return (Math.floor(Math.random() * 26) + 97); //return numbers between 97 to 122
    },
    //for all special characters %,$,#,&,*,+,?,@
    4: function () {
        let arr = [35, 36, 37, 38, 42, 43, 63, 64]
        return arr[Math.floor(Math.random() * arr.length)]; //return special characters #, &, %, $
    }
}



//get values of checkboxes
let upper = document.getElementById(""upper"");
let lower = document.getElementById(""lower"");
let sym = document.getElementById(""sym"");
let num = document.getElementById(""num"");
let chgLock = true; //change the lock to green if the password generated




function randPass() {
    let valid = [];
    let res = """";

    let checks = {
        1: num.checked,
        2: upper.checked,
        3: lower.checked,
        4: sym.checked,
    };

    for (let i = 1; i < 5; i++) {
        if (checks[i] === true) {
            valid.push(i);
        }
    }

    if (valid.length == 0) {
        res = ""Choose setting first"";
        chgLock = false
    } else {
        chgLock = true;
        let option_number = valid.length;
        let i = 0;
        while (i < rng.value) {
            res += String.fromCharCode(ASCII[valid[Math.floor(Math.random() * option_number)]]());
            i++;
        }

        i = 0;
    }
    return res;

}




// generate pass button and change color of lock
let generate = document.getElementById(""generate_click""); // button for generate password
let lock = document.querySelector("".container .pass i::before"");
let generate_section = document.getElementById(""generated_pass""); //generated pass section



generate.addEventListener('click', function () {

    //set res to the input
    generate_section.value = randPass();


    //change color of lock to green

    // Get the root element
    const rootElement = document.documentElement;

    if (generate_section.value != '' && chgLock) {
        // Set the value of the --primary-color variable to 'green'
        rootElement.style.setProperty('--primary-color', 'green');
    } else {
        // Set the value of the --primary-color variable to 'blue'
        rootElement.style.setProperty('--primary-color', '#0c54fc');
    }


});



// change the number in box
let rng = document.getElementById(""rng"");
var rng_box = document.getElementById(""rng_box"");


rng_box.innerHTML = rng.value;

rng.oninput = function () {
    rng_box.innerHTML = this.value;
}




// change copy icon

let icn = document.getElementById(""cp_icon""); // current icon
let gnPass = document.getElementById(""generated_pass""); // generated password field

icn.onclick = function () {
    const originalIcon = this.innerHTML; // Store original icon

    if (originalIcon != '<i class=""fa-solid fa-check fa-xl""></i>') {
        //copy text to clipboard
        navigator.clipboard.writeText(gnPass.value)

        // Change icon and set a timer to revert after 2 seconds
        this.innerHTML = '<i class=""fa-solid fa-check fa-xl""></i>'

        setTimeout(() => {
            this.innerHTML = originalIcon; // Revert to original icon
        }, 1000);
    }
}



"
6dUFnrGs,Untitled,AdamMathieson,Lua,Sunday 10th of March 2024 06:21:23 PM CDT,"-- Function to calculate hash of a string
local function calculateHash(str)
  local hash = 0
  for i = 1, #str do
    hash = hash + string.byte(str, i)
  end
  return hash
end

-- Function to get color based on hash value
local function getColor(hash)
  local colorsList = {
    colors.white,
    colors.orange,
    colors.magenta,
    colors.lightBlue,
    colors.yellow,
    colors.lime,
    colors.pink,
    colors.gray,
    colors.lightGray,
    colors.cyan,
    colors.purple,
    colors.blue,
    colors.brown,
    colors.green,
    colors.red
  }
  return colorsList[hash % #colorsList + 1]
end

-- Function to list all network devices
local function listNetworkDevices()
  local devices = peripheral.getNames()

  -- Table to store device types and their counts
  local deviceTypes = {}

  -- Function to get the type of a peripheral
  local function getType(peripheralName)
    if peripheral.isPresent(peripheralName) then
      return peripheral.getType(peripheralName)
    else
      return ""Unknown""
    end
  end

  -- Iterate through all connected peripherals
  for _, deviceName in ipairs(devices) do
    local deviceType = getType(deviceName)

    -- Update the count of this device type
    if deviceTypes[deviceType] == nil then
      deviceTypes[deviceType] = 1
    else
      deviceTypes[deviceType] = deviceTypes[deviceType] + 1
    end
  end

  -- Create a list of device types sorted by the number of items
  local sortedTypes = {}
  for deviceType, count in pairs(deviceTypes) do
    table.insert(sortedTypes, {type = deviceType, count = count})
  end
  table.sort(sortedTypes, function(a, b) return a.count > b.count end)

  -- Print the summary with color coding
  print(""Summary of network devices:"")
  for _, device in ipairs(sortedTypes) do
    local deviceType = device.type
    local count = device.count
    local hash = calculateHash(deviceType)
    local color = getColor(hash)
    term.setTextColor(color)
    print(deviceType .. "": "" .. count)
  end
  term.setTextColor(colors.white) -- Reset text color
end

-- Call the function to list network devices
listNetworkDevices()
"
wqshDftL,nVidia with XWayland on EndeavourOS,edmundlaugasson,Bash,Sunday 10th of March 2024 05:37:02 PM CDT,"cat /usr/lib/endeavouros-release
VERSION=2024.01.25

lsb_release -a
Distributor ID: EndeavourOS
Description:    EndeavourOS Linux

# clean online install on March 10, 2024 with KDE desktop

# https://discovery.endeavouros.com/nvidia/new-nvidia-driver-installer-nvidia-inst/2022/03/ 

nvidia-inst --drivers 
NVIDIA card id: 13b0
Fetching driver data from nvidia.com ...
Series 550: supported (nvidia.com: 550.54.14)

nvidia-inst --series 550 -t
2024-03-11 00:11:38: Info: Running: nvidia-inst v23.1-1
2024-03-11 00:11:38: Info: Command line: nvidia-inst --series 550 -t
2024-03-11 00:11:38: Info: Selected mode: nvidia
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
COMMANDS TO RUN:
    ==> Looks like all requested packages and settings are already OK!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

inxi -xxxGz
Graphics:
  Device-1: NVIDIA GM107GLM [Quadro M2000M] vendor: Lenovo driver: nvidia
    v: 550.54.14 arch: Maxwell pcie: speed: 5 GT/s lanes: 16 ports: active: none
    off: eDP-1 empty: DP-1,DP-2,DP-3 bus-ID: 01:00.0 chip-ID: 10de:13b0
    class-ID: 0300
  Device-2: Lite-On Integrated Camera driver: uvcvideo type: USB rev: 2.0
    speed: 480 Mb/s lanes: 1 bus-ID: 1-8:2 chip-ID: 04ca:7058 class-ID: 0e02
  Display: wayland server: X.org v: 1.21.1.11 with: Xwayland v: 23.2.4
    compositor: kwin_wayland driver: X: loaded: nvidia unloaded: modesetting
    alternate: fbdev,nouveau,nv,vesa gpu: nvidia display-ID: 0
  Monitor-1: eDP-1 res: 1536x864 size: N/A modes: N/A
  API: EGL v: 1.5 hw: drv: nvidia platforms: device: 0 drv: nvidia device: 2
    drv: swrast gbm: drv: nvidia surfaceless: drv: nvidia wayland: drv: nvidia
    x11: drv: zink inactive: device-1
  API: OpenGL v: 4.6.0 compat-v: 4.5 vendor: nvidia mesa v: 550.54.14
    glx-v: 1.4 direct-render: yes renderer: Quadro M2000M/PCIe/SSE2
    display-ID: :1.0
  API: Vulkan v: 1.3.279 layers: 1 surfaces: xcb,xlib,wayland device: 0
    type: discrete-gpu driver: nvidia device-ID: 10de:13b0

journalctl -xb -p3
March 10 23:50:43 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
March 10 23:50:48 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
March 10 23:50:53 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
March 10 23:50:57 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
March 10 23:51:02 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
March 10 23:51:07 host kwin_wayland[1443]: kwin_wayland_drm: Pageflip timed out! This is a kernel bug
# sounds like this caused that 5-6 second delay during loading KDE desktop

uname -r
6.7.9-arch1-1
# Intel i7 x86_64 CPU

# issue:
# after login system will freeze for 5-6 seconds, then all works

# after suspend desktop is garbage and needs relogin to fix
# applied as suggested during nvidia driver installation but didn't help:
sudo systemctl enable --now nvidia-resume.service

# available services:
systemctl status nvidia-
nvidia-hibernate.service     nvidia-powerd.service        nvidia-suspend.service
nvidia-persistenced.service  nvidia-resume.service

# when enabled nvidia-suspend.service in addition to nvidia-resume.service, system freezed and later could disable that service on recovery console.
# after enabling service and rebooted, status is so:
systemctl status nvidia-resume.service 
○ nvidia-resume.service - NVIDIA system resume actions
     Loaded: loaded (/usr/lib/systemd/system/nvidia-resume.service; enabled; preset: disabled)
     Active: inactive (dead)

# all services are inactive

echo $XDG_SESSION_TYPE
wayland

grep 'ExecStart=' /etc/systemd/system/display-manager.service
ExecStart=/usr/bin/sddm

systemctl status display-manager
● sddm.service - Simple Desktop Display Manager

systemctl --property=Id,Description show display-manager.service
Id=sddm.service
Description=Simple Desktop Display Manager

file /etc/systemd/system/display-manager.service
/etc/systemd/system/display-manager.service: symbolic link to /usr/lib/systemd/system/sddm.service"
6ew7Mh1c,Tvott,TGMJUNIOR,HTML,Sunday 10th of March 2024 05:34:38 PM CDT,"#EXTM3U

http://703905389557374489.0222ofd.xyz/get.php?username=ja44179&password=K75JRwFwtUR&type=m3u_plus"
sgH6GR28,Untitled,saimpot,PHP,Sunday 10th of March 2024 05:29:17 PM CDT,"```Subject: Appeal for Account Unban - Misunderstanding Regarding Gameplay Activities

Dear World of Warcraft Support Team,

I hope this message finds you well. I am writing to appeal the recent ban on my account, which was attributed to allegations of using hacks and cheating programs. As a dedicated member of the World of Warcraft community, particularly within the Wrath of the Lich King realm, I am deeply troubled by this accusation and believe there has been a misunderstanding.

I have been an active and committed player, known for organizing weekly Onyxia mount runs for both 10 and 25-man groups. Furthermore, I manage a Discord server dedicated to coordinating players for challenging achievements, such as the Trial of the Grand Crusader (TOGC) 25 with 50/50 attempts, where we have achieved notable success. My commitment to the community and the game is evident through my extensive achievement points, which I have accumulated with diligence and hard work.

I want to clarify the situation that I believe led to my account's suspension. I was engaged in legitimately farming Bloodsail Buccaneers reputation up to Exalted status. Post reaching Honored, the only viable method to continue this progression involves defeating a specific Goblin NPC in the Badlands, associated with Booty Bay. Unfortunately, this activity seemed to have been misconstrued by some players, particularly lower-level ones, who perceived it as griefing due to their belief that I was eliminating a quest-related NPC.

This misunderstanding escalated when a displeased player threatened to report me based on incorrect assumptions about my actions. I want to emphasize that my gameplay strategy was entirely within the game's rules and was not intended to disrupt or negatively impact other players' experiences.

Given my long-standing and active participation in the World of Warcraft community, it is disheartening to face such accusations. I have invested considerable time and effort into my account, and the notion of jeopardizing it with prohibited activities is contrary to everything I have worked towards in this game.

I kindly request a re-evaluation of the circumstances leading to my account's suspension. I am more than willing to provide any additional information or clarification needed to resolve this matter. I am hopeful for an opportunity to continue contributing positively to the World of Warcraft community.

Sincerely,

Dionysis [Your Battle.net ID or Character Name]```"
6yid0kFR,Untitled,smj007,Python,Sunday 10th of March 2024 05:28:11 PM CDT,"class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
    
        totalSum = sum(nums)
        running_sum = 0

        for i in range(len(nums)):
            running_sum = running_sum + nums[i]

            left_sum = running_sum - nums[i]
            right_sum = totalSum - running_sum

            if left_sum == right_sum:
                return i
            
        return -1"
MPCJ2seh,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Sunday 10th of March 2024 05:24:28 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_827462.pdf

Working as of:
10 March 2024





















"
UUy8Hpvi,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Sunday 10th of March 2024 05:10:02 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
Mfhbqfi1,focused,bluebyt,INI file,Sunday 10th of March 2024 05:08:56 PM CDT,"[2m2024-03-10T20:36:49.999473Z[0m [34mDEBUG[0m [2muniversal_config[0m[2m:[0m [2m161:[0m Using config dir: /home/bluebyt/.config/ironbar
[2m2024-03-10T20:36:49.999542Z[0m [34mDEBUG[0m [2muniversal_config[0m[2m:[0m [2m140:[0m Found file at: '/home/bluebyt/.config/ironbar/config.corn
[2m2024-03-10T20:36:50.000011Z[0m [34mDEBUG[0m [2mironbar[0m[2m:[0m [2m288:[0m Loaded config file
[2m2024-03-10T20:36:50.000025Z[0m [32m INFO[0m [2mironbar[0m[2m:[0m [2m111:[0m Ironbar version 0.15.0-pre
[2m2024-03-10T20:36:50.000031Z[0m [32m INFO[0m [2mironbar[0m[2m:[0m [2m112:[0m Starting application
[2m2024-03-10T20:36:50.001123Z[0m [34mDEBUG[0m [2msctk[0m[2m:[0m [2m456:[0m Bound new global [40] wl_output v4    
[2m2024-03-10T20:36:50.001142Z[0m [34mDEBUG[0m [2msctk[0m[2m:[0m [2m496:[0m Bound new global [19] zxdg_output_manager_v1 v3    
[2m2024-03-10T20:36:50.001152Z[0m [34mDEBUG[0m [2msctk[0m[2m:[0m [2m456:[0m Bound new global [15] wl_seat v7    
[2m2024-03-10T20:36:50.001159Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel::manager[0m[2m:[0m [2m25:[0m Bound to ZwlForeignToplevelManagerV1 global
[2m2024-03-10T20:36:50.001165Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_data_control::manager[0m[2m:[0m [2m29:[0m Bound to ZwlDataControlManagerV1 global
[2m2024-03-10T20:36:50.001187Z[0m [34mDEBUG[0m [2mironbar::clients::wayland[0m[2m:[0m [2m318:[0m received roundtrip request
[2m2024-03-10T20:36:50.001419Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wl_output[0m[2m:[0m [2m64:[0m Handler received new output
[2m2024-03-10T20:36:50.001438Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wl_seat[0m[2m:[0m [2m30:[0m Handler received new capability
[2m2024-03-10T20:36:50.001443Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wl_seat[0m[2m:[0m [2m38:[0m Adding new data control device
[2m2024-03-10T20:36:50.001450Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wl_seat[0m[2m:[0m [2m30:[0m Handler received new capability
[2m2024-03-10T20:36:50.001456Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel[0m[2m:[0m [2m47:[0m Manager received new handle
[2m2024-03-10T20:36:50.001460Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel[0m[2m:[0m [2m47:[0m Manager received new handle
[2m2024-03-10T20:36:50.001464Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel[0m[2m:[0m [2m47:[0m Manager received new handle
[2m2024-03-10T20:36:50.001468Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel[0m[2m:[0m [2m47:[0m Manager received new handle
[2m2024-03-10T20:36:50.001472Z[0m [34mDEBUG[0m [2mironbar::clients::wayland::wlr_foreign_toplevel[0m[2m:[0m [2m47:[0m Manager received new handle"
NrJjVi2m,Rust,dimkiriaoks,Rust,Sunday 10th of March 2024 04:57:59 PM CDT,"fn main(){
    let mut x_string: String = String::new();
    let mut y_string: String = String::new();

    println!(""X?"");
    let _ = std::io::stdin().read_line(&mut x_string);
    
    println!(""Y?"");
    let _ = std::io::stdin().read_line(&mut y_string);

    let x: Result<i32, _> = x_string.parse();
    let y: Result<i32, _> = y_string.parse();
    
    let mut z = x+y;
    println!(""Z: {z}"");
}"
CrQBTRby,Battle,Rattlecat,JavaScript,Sunday 10th of March 2024 03:36:15 PM CDT,"$(eval var i=parseInt,d=[],e='$(provider)'=='twitch'?'melziiD20':'🎲20',j=0,l,m='$(query)'.match(/^(([0-9]+)\s+)?(([0-9]+)?d([0-9]+)|([0-9]+))$/)??{},c=i(m[2]??1),n=i(m[4]??1),s=i(m[5]??m[6]??20);c=c>20?20:(c<1||!c?1:c);n=(n<1?1:n);s=(s<1?1:s);for(;j<c;j+=1){d.push(Math.round(n*(s-1)*Math.random())+n)}r=`$(u) deals $(t) ${d.join(', ')} damage with ${n<2?'a ':n+'×'}🎲`+s;l=r.lastIndexOf(',');(l<0?r:r.substr(0,l)+' and'+r.substr(l+1)).replace(/( |🎲)20(,| |$)/g,` ${ e } $2`)). $(eval a=$(urlfetch json https://pastebin.com/raw/CrQBTRby);a[Math.floor(Math.random()*a.length)])"
0w8NPXFb,asdasdasd,Sashaiolh,Lua,Sunday 10th of March 2024 03:33:42 PM CDT,"local component = require(""component"")
local computer = require(""computer"")
local debug = computer.addUser
local gpu = component.gpu
xresolution=153
gpu.setResolution(xresolution,52)
gpu.setBackground(0x202020)
gpu.setForeground(0xFFDD00)
gpu.fill(1,1,xresolution,75,"" "")
gpu.set((30-(string.len(""DeviceCraft Managment""))/2),2,""DeviceCraft Managment"")
gpu.set((30-(string.len(""By Durex77""))/2),3,""By Durex77"")
status1="" [Online] ""
status2="" [Offline]""
owner={'XRASER','BeTePb'}
admin={'SergeyZez','SplittingReality'}
builder={'AnshaABDUL372','MaxonZ',}
tehadmin={'lLuffy'}
trumod={'REAKTOR','iIiIiIiMuSiC_oF'}
modn={'Sierr67','PIXOH','HolltiSS','BuTaMuH4iK','Bazoor','NightmareMoon'}
donmod={'dark321','GangaMstar','Gra4_',}
helper={'Night_Raven','TheRedMan','Duno'}

while true do
d=5
d=d+1
gpu.setForeground(0x8B1A1A)
gpu.set((xresolution/2-(string.len(""[Owner]""))/2),d,""[Owner]"")
d=d+1

for j = 1, #owner do

d=d+1
name=owner[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0xCC0000)
gpu.set((xresolution/2-(string.len(""[Admin]""))/2),d,""[Admin]"")
d=d+1

for j = 1, #admin do

d=d+1
name=admin[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0x473C8B)
gpu.set((xresolution/2-(string.len(""[builder]""))/2),d,""[builder]"")
d=d+1

for j = 1, #builder do

d=d+1
name=builder[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0xCC0000)
gpu.set((xresolution/2-(string.len(""[Teh-Admin]""))/2),d,""[Teh-Admin]"")
d=d+1

for j = 1, #tehadmin do
d=d+1
name=tehadmin[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end


d=d+2
gpu.setForeground(0x0066FF)
gpu.set((xresolution/2-(string.len(""[TrueMod]""))/2),d,""[True-Mod]"")
d=d+1

for j = 1, #trumod do
d=d+1
name=trumod[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0xCD2990)
gpu.set((xresolution/2-(string.len(""[Modn]""))/2),d,""[Modn]"")
d=d+1

for j = 1, #modn do
d=d+1
name=modn[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0xCC0000)
gpu.set((xresolution/2-(string.len(""[Don-Mod]""))/2),d,""[Don-Mod]"")
d=d+1

for j = 1, #donmod do
d=d+1
name=donmod[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end

d=d+2
gpu.setForeground(0x00FF00)
gpu.set((xresolution/2-(string.len(""[Helper]""))/2),d,""[Helper]"")
d=d+1

for j = 1, #helper do
d=d+1
name=helper[j]
prov=debug(name)
if prov ~= nil then gpu.setForeground(0x00FF00) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status1) else gpu.setForeground(0xFF0000) gpu.set(((xresolution/2)-4-(string.len(name))/2),d,name..status2) end
computer.removeUser(name)
end


os.sleep(1.5)

end"
N51k8zrz,Untitled,smj007,Python,Sunday 10th of March 2024 03:17:33 PM CDT,"class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:

        # build a heap 
        hashmap = defaultdict(int)
        maxheap = []
        for num in nums:
            hashmap[num] += 1

        for num, count in hashmap.items():
            heapq.heappush(maxheap, (-count, num))

        result = []
        for _ in range(k):
            if maxheap:
                top, val = heapq.heappop(maxheap)
                result.append(val)

        return result

        "
xiUFz0A3,Functional programming,AlexG2230954,F#,Sunday 10th of March 2024 02:50:59 PM CDT,"type Seq<'a> = Getter of (unit -> ('a * Seq<'a>) option)

let PrintSeq (seq: Seq<'a>) =
    let rec _step getter =
        match getter() with
        | None -> ()
        | Some(el, Getter(nextGetter)) ->
            printf ""%A, "" el
            _step nextGetter
    
    match seq with
    | Getter(f) -> _step f

let Map seq f =
    let rec _step getter () =
        match getter() with
        | None -> None
        | Some(el, Getter(nextGetter)) ->
            Some(f el, Getter(_step nextGetter))
    
    match seq with
    | Getter(g) -> Getter(_step g)

let Reduce seq f =
    let rec _step value getter =
        match getter() with
        | None -> value
        | Some(el, Getter(nextGetter)) ->
            _step (f value el) nextGetter

    match seq with
    | Getter(g) ->
        match g() with
        | None -> None
        | Some(el, Getter(getter)) -> Some(_step el getter)

// Sequences

let Range a b c : Seq<int> =
    let rec _getter x () =
        if x >= b then None
        else Some(x, Getter(_getter (x + c)))
    Getter(_getter a)

let rng = Range 1 5 1
let x = Reduce rng (+)

match x with
| Some(y) -> printfn ""%d"" y
| None -> printfn ""neon""
"
iNprNhKu,Untitled,smj007,Python,Sunday 10th of March 2024 02:48:36 PM CDT,"class Solution:

    def __init__(self, w: List[int]):
        self.w = w
        self.prefix_sum = 0
        self.prefix = []
        for num in self.w:
            self.prefix_sum += num
            self.prefix.append(self.prefix_sum)

    def pickIndex(self) -> int:

        target = self.prefix_sum * random.random()
        low = 0; high = len(self.w) - 1

        while (low <= high):
            mid = (low + high)//2
            if target < self.prefix[mid]:
                high = mid - 1
                result = mid
            else:
                low = mid + 1

        return result "
hgfTZY0d,Print DNA,bAngelov,JavaScript,Sunday 10th of March 2024 02:36:55 PM CDT,"function solve(size) {
    let sequence = ""ATCGTTAGGG"";
    for (
        let i = 0, dash = 0, star = 2, char = 0;
        i < size;
        i++, star = star !== -1 ?(star - 1):2, char = (char + 2) % sequence.length, dash = 6 - (Math.abs(star) * 2 + 2)
    ) {
        let currentStar = Math.abs(star)
        let [a,b] = [sequence[char], sequence[char+1]]
        console.log(`${'*'.repeat(currentStar)}${a}${'-'.repeat(dash)}${b}${'*'.repeat(currentStar)}`)
    }
}"
LTqD2Cxn,Refactor Game 80Casual (IA helper),martin_santome,C++,Sunday 10th of March 2024 02:06:30 PM CDT,"/*********************************************
** MAIN
**********************************************/

#include <iostream>
#include ""Game.hpp""

int main() {
    try {
        Game game; // Create the game instance
        game.run(); // Enter the main loop of the game
        return 0; // Exit with success status
    }
    catch (const std::exception& e) {
        std::cerr << ""An exception has occurred: "" << e.what() << std::endl;
        return 1; // Exit with error status
    }
    catch (...) {
        std::cerr << ""An unknown exception has occurred."" << std::endl;
        return 2; // Exit with error status indicating an unknown exception
    }
}

/*********************************************
** GAME.HPP
**********************************************/


// Game.hpp
#ifndef GAME_HPP
#define GAME_HPP

#include <SFML/Graphics.hpp>
#include ""HUD.hpp""
#include ""Player.hpp""
#include ""AssetManager.hpp""
#include ""Utilities.hpp""

class Game {
public:
    Game();
    void run();

private:
    sf::RenderWindow window;
    Player player;
    HUD hud;
    sf::View uiView, dyView, miniMap;
    sf::Sprite bg;
    sf::RectangleShape rectPl; // Placeholder for the player in the minimap
    sf::Clock clock;

    void initialize();
    void processEvents();
    void update(sf::Time deltaTime);
    void render();
    void setupViews(const sf::Vector2u& windowSize);
    void setupBackground();
    void setupMiniMap();
};

#endif // GAME_HPP

/*********************************************
** GAME.CPP
**********************************************/

// Game.cpp
#include ""Game.hpp""

Game::Game() : window(sf::VideoMode(640, 480), ""Testing"") {
    initialize();
}

void Game::initialize() {
    setupBackground();
    setupViews(window.getSize());
    setupMiniMap();
    // Initialize player and hud if needed here
}

void Game::setupViews(const sf::Vector2u& windowSize) {
    uiView.setSize(sf::Vector2f(windowSize));
    uiView.setViewport(sf::FloatRect(0.f, 0.f, 1.f, 1.f));

    dyView.setSize(sf::Vector2f(windowSize));
    dyView.setViewport(sf::FloatRect(0.f, 0.f, 1.f, 1.f));
}

void Game::setupBackground() {
    bg.setTexture(AssetManager::GetTexture(Utils::GetWorkingDirectory() + ""Media/Backgrounds/bg3-1.png""));
    bg.setPosition(0, 0);
    bg.setOrigin(0, 0);
}

void Game::setupMiniMap() {
    miniMap.setViewport(sf::FloatRect(0.75F, 0.f, 0.25F, 0.25F));
    // Setup miniMap size based on the background size
    miniMap.setSize(sf::Vector2f(bg.getLocalBounds().width, bg.getLocalBounds().height));
}

void Game::run() {
    sf::Clock clock;
    while (window.isOpen()) {
        sf::Time deltaTime = clock.restart();
        processEvents();
        update(deltaTime);
        render();
    }
}

void Game::processEvents() {
    sf::Event event;
    while (window.pollEvent(event)) {
        if (event.type == sf::Event::Closed) {
            window.close();
        }
        // Add more event handling here as needed
    }
    // Additional real-time input handling could go here or inside Player::handleInput
}

void Game::update(sf::Time deltaTime) {
    // Update game state, player, HUD, etc.
    hud.update(deltaTime); // Assuming hud.update needs deltaTime
    player.update(deltaTime, window); // This is indicative; actual Player::update might differ
}

void Game::render() {
    window.clear();
    
    // Set view to default for drawing background and reset for UI components
    window.setView(window.getDefaultView());
    window.draw(bg);

    // Example of how to switch views
    // if (player.getPosition().x < 320) { window.setView(window.getDefaultView()); }
    // else { window.setView(dyView); }
    // Update dyView center if necessary based on player position

    player.draw(window); // Delegate drawing the player
    // Drawing minimap, UI elements, etc. could follow here

    window.setView(uiView);
    hud.draw(window); // Delegate drawing HUD

    window.display();
}


/*********************************************
** HUD.HPP
**********************************************/

// HUD.hpp
#ifndef HUD_HPP
#define HUD_HPP

#include <SFML/Graphics.hpp>
#include ""AssetManager.hpp""
#include ""Utilities.hpp""

class HUD {
public:
    HUD();

    void update(const sf::Time& deltaTime);
    void draw(sf::RenderWindow& window);

private:
    sf::Font font;
    sf::Text oneUp, score, tDelta, tElapsed, tElapsed2;
    sf::RectangleShape lifeBar;

    void setupText();
    void setupLifeBar();
};

#endif // HUD_HPP


/*********************************************
** HUD.CPP
**********************************************/

// HUD.cpp
#include ""HUD.hpp""

HUD::HUD() {
    setupText();
    setupLifeBar();
}

void HUD::setupText() {
    font = AssetManager::GetFont(Utils::GetWorkingDirectory() + ""Media/Fonts/KOMIKAP_.ttf"");

    oneUp.setFont(font);                   
    oneUp.setString(""1 UP"");               
    oneUp.setCharacterSize(30U);           
    oneUp.setFillColor(sf::Color::White);  
    oneUp.setPosition(sf::Vector2f(50,10));

    score.setFont(font);                   
    score.setString(""12345"");              
    score.setCharacterSize(20U);           
    score.setFillColor(sf::Color::White);  
    score.setPosition(sf::Vector2f(50,50));

    tDelta.setFont(font);                   
    tDelta.setCharacterSize(10U);           
    tDelta.setFillColor(sf::Color::Red);    
    tDelta.setPosition(sf::Vector2f(50.f, 300.f));

    tElapsed.setFont(font);                 
    tElapsed.setCharacterSize(10U);         
    tElapsed.setFillColor(sf::Color::Red);  
    tElapsed.setPosition(sf::Vector2f(50.f,325.f));

    tElapsed2.setFont(font);                
    tElapsed2.setCharacterSize(10U);        
    tElapsed2.setFillColor(sf::Color::Red); 
    tElapsed2.setPosition(sf::Vector2f(50.f,350.f));
}

void HUD::setupLifeBar() {
    lifeBar.setSize(sf::Vector2f(96.f, 10.f));
    lifeBar.setFillColor(sf::Color::Green);
    lifeBar.setOrigin(lifeBar.getSize()*0.5F);
}

void HUD::update(const sf::Time& deltaTime) {
    // Update dynamic text (e.g., timers, scores) based on game state
    // Example: Update deltaTime text
    tDelta.setString(""Delta: "" + std::to_string(deltaTime.asSeconds()) + ""s"");
}

void HUD::draw(sf::RenderWindow& window) {
    // Draw all HUD elements
    window.draw(oneUp);
    window.draw(score);
    window.draw(tDelta);
    window.draw(tElapsed); // Note: You'll need to update tElapsed and tElapsed2 as needed
    window.draw(tElapsed2);
    window.draw(lifeBar); // Note: Position needs to be updated based on the game state
}


/*********************************************
** PLAYER.HPP
**********************************************/

// Player.hpp
#ifndef PLAYER_HPP
#define PLAYER_HPP

#include <SFML/Graphics.hpp>
#include ""Animator.hpp""

class Player {
public:
    Player(const sf::Texture& texture);

    void handleInput();
    void update(sf::Time deltaTime);
    void draw(sf::RenderWindow& window);

private:
    sf::Sprite sprite;
    Animator animator;
    sf::Vector2f velocity;

    void setupAnimations();
};

#endif // PLAYER_HPP


/*********************************************
** PLAYER.CPP
**********************************************/
// Player.cpp
#include ""Player.hpp""

Player::Player(const sf::Texture& texture) : sprite(texture), velocity(0.f, 0.f) {
    setupAnimations();
}

void Player::setupAnimations() {
    // Assuming animations have been loaded into `animator`
    // Example:
    // Animation walkAnimation;
    // walkAnimation.texture = &someTexture;
    // walkAnimation.frames.push_back(sf::IntRect(...));
    // animator.AddAnimation(""Walk"", walkAnimation);
}

void Player::handleInput() {
    // Handle player input and adjust velocity or switch animations accordingly
    // Example:
    // if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left)) { ... }
}

void Player::update(sf::Time deltaTime) {
    // Update the player's position and animation
    sprite.move(velocity * deltaTime.asSeconds());
    animator.Update(deltaTime);
    animator.ApplyToSprite(sprite);
}

void Player::draw(sf::RenderWindow& window) {
    window.draw(sprite);
}

/*********************************************
** ANIMATOR.hPP
**********************************************/

// Animator.hpp
#ifndef ANIMATOR_HPP
#define ANIMATOR_HPP

#include <SFML/Graphics.hpp>
#include <map>
#include <string>
#include <vector>

class Animation {
public:
    std::vector<sf::IntRect> frames;
    const sf::Texture* texture;
    sf::Time duration;
    bool loop;

    Animation() : texture(nullptr), duration(sf::seconds(1)), loop(true) {}
};

class Animator {
public:
    Animator() : currentAnimation(nullptr) {}

    void AddAnimation(const std::string& name, const Animation& animation);
    void SwitchAnimation(const std::string& name);
    void Update(sf::Time deltaTime);
    void ApplyToSprite(sf::Sprite& sprite) const;

private:
    std::map<std::string, Animation> animations;
    const Animation* currentAnimation;
    sf::Time currentTime;
    size_t currentFrame;

    void reset();
};

#endif // ANIMATOR_HPP



/*********************************************
** ANIMATOR.cPP
**********************************************/


// Animator.cpp
#include ""Animator.hpp""

void Animator::AddAnimation(const std::string& name, const Animation& animation) {
    animations[name] = animation;
}

void Animator::SwitchAnimation(const std::string& name) {
    auto it = animations.find(name);
    if (it != animations.end()) {
        currentAnimation = &it->second;
        reset();
    }
}

void Animator::Update(sf::Time deltaTime) {
    if (!currentAnimation) return;

    currentTime += deltaTime;

    float scaledTime = currentTime.asSeconds() / currentAnimation->duration.asSeconds();
    size_t numFrames = currentAnimation->frames.size();
    currentFrame = static_cast<size_t>(scaledTime * numFrames);

    if (currentAnimation->loop)
        currentFrame %= numFrames;
    else if (currentFrame >= numFrames)
        currentFrame = numFrames - 1;
}

void Animator::ApplyToSprite(sf::Sprite& sprite) const {
    if (!currentAnimation) return;
    sprite.setTexture(*currentAnimation->texture);
    sprite.setTextureRect(currentAnimation->frames[currentFrame]);
}

void Animator::reset() {
    currentTime = sf::Time::Zero;
    currentFrame = 0;
}

"
QrGCv45r,Untitled,ShRooK_MoHameD,C++,Sunday 10th of March 2024 01:47:16 PM CDT,"
void solve(){

   ll n; cin >> n;
   vector < ll > v;
   for (int i = 1; i <= n; i++)  v.push_back(i);
   

   set < ll > st (all(v));

   for (int i = 1; i < sz(v) ; i += 2)
   {
     
  
        cout << v[i] << "" "";
        st.erase(v[i]);

       
        if(i == sz(v) - 2 and st.find(v[i]) == st.end()) v.assign(all(st)) , i = -2;
        
        if(i == sz(v) - 1  and st.find(v[i]) == st.end()) v.assign(all(st)) , i = -1;
        

      }

      cout(st);
   

   
} "
rtecSkG6,Untitled,joe1970,C++,Sunday 10th of March 2024 01:40:13 PM CDT,"#include ""Animator.hpp""
#include ""AssetManager.hpp""
#include ""Utilities.hpp""
#include <iostream>
#include <stdexcept>
#include <string>

int main()
{
    try
    {
        sf::RenderWindow window(sf::VideoMode(640,480), ""Testing"");
        auto wSize=window.getSize();
        
        // Background
        sf::Sprite bg(AssetManager::GetTexture(Utils::GetWorkingDirectory() + ""Media/Backgrounds/bg3-1.png""));
        // Default Position and Origin
        bg.setPosition(sf::Vector2f(0,0));
        bg.setOrigin(sf::Vector2f(0,0));


        // Default View (0,0,640, 480) Center (320, 240) y viewPort (0,0,1,1)
        // UI View
        sf::View uiView(sf::FloatRect(0.f,0.f,wSize.x,wSize.y ));
        uiView.setViewport(sf::FloatRect(0.f,0.f,1.f,1.f));
        // Con esta definición el Center es (320, 240)
        
        // Dynamic View
        sf::View dyView(sf::FloatRect(0.f,0.f,wSize.x,wSize.y));
        dyView.setViewport(sf::FloatRect(0.f,0.f,1.f,1.f));
        
        // MiniMap
        sf::View miniMap (sf::FloatRect(0.f,0.f,bg.getLocalBounds().width, bg.getGlobalBounds().height));
        miniMap.setViewport(sf::FloatRect(0.75F,0.f,0.25F,0.25F));
                
        // HUD - Text
        sf::Text oneUp;
        sf::Text score;
        sf::Text tDelta;
        sf::Text tElapsed;
        sf::Text tElapsed2;

        sf::Font font(AssetManager::GetFont(Utils::GetWorkingDirectory() + ""Media/Fonts/KOMIKAP_.ttf""));
        
        oneUp.setFont(font);                   score.setFont(font);
        oneUp.setString(""1 UP"");               score.setString(""12345"");
        oneUp.setCharacterSize(30U);           score.setCharacterSize(20U);
        oneUp.setFillColor(sf::Color::White);  score.setFillColor(sf::Color::White);

        oneUp.setPosition(sf::Vector2f(50,10));
        score.setPosition(sf::Vector2f(50,50));    

        tDelta.setFont(font);                   tElapsed.setFont(font);
        tDelta.setCharacterSize(10U);           tElapsed.setCharacterSize(10U);
        tDelta.setFillColor(sf::Color::Red);    tElapsed.setFillColor(sf::Color::Red);

        tElapsed2.setFont(font);
        tElapsed2.setCharacterSize(10U);
        tElapsed2.setFillColor(sf::Color::Red);

        tDelta.setPosition(sf::Vector2f(50.f, 300.f));
        tElapsed.setPosition(sf::Vector2f(50.f,325.f));
        tElapsed2.setPosition(sf::Vector2f(50.f,350.f));


        
        // Rect Shape replacement Minimap
        sf::RectangleShape rectPl(sf::Vector2f(15.f,30.f));
        rectPl.setFillColor(sf::Color::Red);
        rectPl.setOrigin(rectPl.getSize()*0.5F);
        
        
        // Life bar
        sf::RectangleShape lifeBar(sf::Vector2f(96.f, 10.f));
        lifeBar.setFillColor(sf::Color::Green);
        lifeBar.setOrigin(lifeBar.getSize()*0.5F);


        // Animations
        sf::Sprite player;
        sf::Vector2i playerSize(32,32);
        
        Animator animPlayer(player);
        auto& idleRAnim = animPlayer.CreateAnimation(""IdleR"", Utils::GetWorkingDirectory() + ""Media/S_Sheets/PlayerSheet.png"", sf::seconds(0.8f), true); 
        idleRAnim.AddFrames(sf::Vector2i(0,0), playerSize, 8U);
        
        auto& idleLAnim = animPlayer.CreateAnimation(""IdleL"", Utils::GetWorkingDirectory() + ""Media/S_Sheets/PlayerSheet.png"", sf::seconds(0.8f), true); 
        idleLAnim.AddFrames(sf::Vector2i(0,32), playerSize, 8U);

        auto& rightAnim = animPlayer.CreateAnimation(""Right"", Utils::GetWorkingDirectory() + ""Media/S_Sheets/PlayerSheet.png"", sf::seconds(0.5f), true);
        rightAnim.AddFrames(sf::Vector2i(0,64), playerSize,6U);

        auto& leftAnim = animPlayer.CreateAnimation(""Left"", Utils::GetWorkingDirectory() + ""Media/S_Sheets/PlayerSheet.png"", sf::seconds(0.5f), true);
        leftAnim.AddFrames(sf::Vector2i(0,96), playerSize,6U);

        // Default Position and Origin
        player.setOrigin(sf::Vector2f(playerSize)*0.5F);
        player.setPosition(sf::Vector2f(32.f, window.getSize().y/2.f));

        // Move Control and Animation State
        enum class States {IdleR, IdleL, Right, Left};
        States currentState = States::IdleR;
        States beforeState = States::Right;

        // Time Control
        sf::Clock clock;
        float frameTime = 1.f/60.f; // frame rate, frame or tick
        sf::Time elapsed;   // cumulative
        sf::Time deltaTime; // delta time o time step 
        // collect pixel scene map
        sf::Vector2i pixel;
        //
        const float PlayerSpeed = 100.f;

        // Game Loop
        while (window.isOpen())
        {
            // Amount of time previous frame
            sf::Time deltaTime = clock.restart();
            
            // Accumulate time with each frame
            elapsed += deltaTime; //
            
            tDelta.setString(""delta: "" + std::to_string(deltaTime.asSeconds()) + "".s \n"");
            // H a n d l e   I n p u t
            // Handle Events
            sf::Event event;
            while (window.pollEvent(event))
            {
                switch (event.type)
                {
                    case sf::Event::EventType::Closed:
                        window.close();
                        break;
                        
                    case sf::Event::EventType::KeyReleased:
                        if (event.key.code == sf::Keyboard::Escape)
                            window.close();
                        break;
                    default:
                        break;
                    }
            }
            // I n p u t   R e a l  T i m e
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::P)) 
                currentState=States::Right;
            else if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::O)) 
                currentState=States::Left;
            else
            {
                switch (beforeState)
                {
                case States::Left:
                case States:: IdleL:
                    currentState=States::IdleL;
                    break;

                case States::Right:
                case States::IdleR:
                    currentState=States::IdleR;
                    break;
                default:
                    break;
                }
            }
            
            // U p d a t e   S c e n e
            if (elapsed.asSeconds() >= frameTime) 
            {
                // Do Something 60 times a second
                tElapsed.setString(""tElapsed: "" + std::to_string(elapsed.asSeconds()) + "".s \n"");
                sf::Vector2f movement(0.f, 0.f);

                switch (currentState)
                {
                case States::Right:
                    movement.x +=PlayerSpeed;
                    break;
                
                case States::Left:
                    movement.x -= PlayerSpeed;
                    break;
                case States::IdleR:
                case States::IdleL:
                    break;
                default:
                    throw std::runtime_error (""Wrong Selection __FILE__"");
                    break;
                }
                
                float fElapsed = elapsed.asSeconds();
                player.move(movement*fElapsed);

                rectPl.setPosition(player.getPosition());

                elapsed -= sf::seconds(frameTime);

                tElapsed2.setString(""tElapsed2: "" + std::to_string(elapsed.asSeconds()) + ""\n"");
            }

            // Animation Logic
            if (currentState != beforeState)
            {
                switch (currentState)
                {
                case States::Right:
                    animPlayer.SwitchAnimation(""Right"");
                    break;
                case States::Left:
                    animPlayer.SwitchAnimation(""Left"");
                    break;
                case States::IdleR:
                    animPlayer.SwitchAnimation(""IdleR"");
                    break;
                case States::IdleL:
                    animPlayer.SwitchAnimation(""IdleL"");
                    break;    
                default:
                    throw std::runtime_error (""Wrong Selection __FILE__"");
                    break;
                }
            }
            // run current animation
            animPlayer.Update(deltaTime);
            // collect before state
            beforeState=currentState;

            // R e n d e r   C y c l e
            window.clear(sf::Color::Black);
            // Game Camera
            if (player.getPosition().x < 320)
            {
                window.setView(window.getDefaultView());
            }
            else
            {
                dyView.setCenter(player.getPosition());
                window.setView(dyView);
            }          
            window.draw(bg);
            window.draw(player);
            // Collect pos pixel scene for life var y UI Position
            pixel=window.mapCoordsToPixel(player.getPosition());
            

            // miniMap Camera: Necesitamos dibujar
            window.setView(miniMap);
            window.draw(bg);
            window.draw(rectPl);

            // UI Camera
            window.setView(uiView);
            window.draw(oneUp);
            window.draw(score);
            window.draw(tDelta);
            window.draw(tElapsed);
            window.draw(tElapsed2);
            // set position life bar pixel to float coordinates + offset
            lifeBar.setPosition(window.mapPixelToCoords(pixel)+sf::Vector2f(0,-20));
            window.draw(lifeBar);

            window.display();
        }
        
        return 0;
    }
    catch(const std::exception& e)
    {
        std::cerr << e.what() << '\n';
        return 1;
    }
    
    catch(...) 
    {
        std::cerr << ""Oops: unknown exception!\n"";
        return 2;    // 2 indicates failure
    }
}
"
Z71CWXEi,Untitled,Hackder,Java,Sunday 10th of March 2024 01:39:13 PM CDT,"import java.util.ArrayList;
import java.util.OptionalInt;

enum SMER {
  DOLAVA,
  DOPRAVA
}

enum Rotation {
  VERTICAL,
  HORIZONTAL;

  public Rotation opposite() {
    return this == VERTICAL ? HORIZONTAL : VERTICAL;
  }
}

public record Rotuj90(SMER smer) implements Transformacia {
  @Override
  public String[] aplikuj(String[] arg) {
    var currentRotation = guessRotation(arg);

    var grid = createGrid(arg);

    var result = createEmptyGrid(grid[0].length, grid.length);

    if (smer == SMER.DOLAVA) {
      for (int i = 0; i < result.length; i++) {
        for (int j = 0; j < result[i].length; j++) {
          result[i][j] = grid[j][grid[i].length - i - 1];
        }
      }
    } else {
      for (int i = 0; i < result.length; i++) {
        for (int j = 0; j < result[i].length; j++) {
          result[i][j] = grid[grid.length - j - 1][i];
        }
      }
    }

    var newRotation = currentRotation.opposite();

    // Stick columns to the top.
    // Nobody know why this is necessary, but it is in the spec...
    if (newRotation == Rotation.VERTICAL) {
      for (int col = 0; col < result[0].length; col++) {
        for (int row = 0; row < result.length; row++) {
          if (result[row][col] == ' ') continue;

          for (int i = 0; i < result.length; i++) {
            char c = ' ';
            if (row + i < result.length) {
              c = result[row + i][col];
            }

            result[i][col] = c;
          }
          break;
        }
      }
    }

    // System.out.println(""-----------------------"" + smer.toString());
    // for (var row : grid) {
    //   System.out.println(Arrays.toString(row));
    // }
    // System.out.println(""-----------------------"");
    //
    // for (var row : result) {
    //   System.out.println(Arrays.toString(row));
    // }
    //
    // System.out.println(""-----------------------"");

    return toStringFormatted(result, newRotation == Rotation.HORIZONTAL);
  }

  public Rotation guessRotation(String[] arg) {
    for (String s : arg) {
      if (s.contains("" "")) {
        return Rotation.VERTICAL;
      }
    }

    return Rotation.HORIZONTAL;
  }

  public char[][] createEmptyGrid(int rows, int cols) {
    char[][] result = new char[rows][cols];

    for (int i = 0; i < rows; i++) {
      for (int j = 0; j < cols; j++) {
        result[i][j] = ' ';
      }
    }

    return result;
  }

  public char[][] createGrid(String[] arg) {
    int maxLength = 0;

    for (String s : arg) {
      if (s.length() > maxLength) {
        maxLength = s.length();
      }
    }

    int size = Math.max(arg.length, maxLength);
    char[][] result = createEmptyGrid(size, size);

    for (int row = 0; row < arg.length; row++) {
      for (int col = 0; col < arg[row].length(); col++) {
        char c = arg[row].charAt(col);

        result[row][col] = c;
      }
    }

    return result;
  }

  /**
   * Converts the char array to a string removing trailing spaces in the prcoess First finds the
   * minimum spanning rectangle that contains all the non-space characters and then creates a String
   * array containing the rectangle with no trailing spaces on each row
   *
   * @param chars
   * @param removeSpaces If true, removes spaces in between characters. Trailing spaces are always
   *     removed
   * @return
   */
  public String[] toStringFormatted(char[][] chars, boolean removeSpaces) {
    OptionalInt maybeColStart = OptionalInt.empty();
    OptionalInt maybeColEnd = OptionalInt.empty();

    for (int row = 0; row < chars.length; row++) {
      for (int col = 0; col < chars[row].length; col++) {
        if (chars[row][col] != ' ') {
          maybeColStart = OptionalInt.of(Math.min(col, maybeColStart.orElse(col)));
          break;
        }
      }

      for (int col = chars[row].length - 1; col >= 0; col--) {
        if (chars[row][col] != ' ') {
          maybeColEnd = OptionalInt.of(Math.max(col, maybeColEnd.orElse(col)));
          break;
        }
      }
    }

    assert maybeColStart.isPresent();
    assert maybeColEnd.isPresent();
    int colStart = maybeColStart.getAsInt();
    int colEnd = maybeColEnd.getAsInt();

    ArrayList<String> result = new ArrayList<>();

    for (int row = 0; row < chars.length; row++) {
      StringBuilder sb = new StringBuilder();

      for (int col = colStart; col <= colEnd; col++) {
        char c = chars[row][col];

        if (c == ' ' && removeSpaces) {
          continue;
        }

        sb.append(c);
      }

      // Remove trailing spaces
      for (int i = sb.length() - 1; i >= 0; i--) {
        if (sb.charAt(i) != ' ') {
          sb.setLength(i + 1);
          break;
        }
      }

      if (sb.length() > 0) {
        result.add(sb.toString());
      }
    }

    // System.out.println(result);

    return result.toArray(String[]::new);
  }
}
"
8CGJNt2E,Untitled,Abdula_2314124,C#,Sunday 10th of March 2024 01:35:43 PM CDT,"using System;

namespace TheBestPlayer
{
    class Program
    {
        static void Main(string[] args)
        {
            //string[] names = { ""OLeg"", ""Matviy"", ""Glib"", ""Mihaylo"", ""Petrys""};
            //int[] scores = { 30, 1000, 50000, 60, 70 };

            //int maxScore = 0;
            //int maxIndex = 0;

            //for (int i = 0; i < scores.Length; i++)
            //{
            //    if (maxScore < scores[i])
            //    {
            //        maxIndex = i;
            //        maxScore = scores[i];
            //    }
            //}

            //Console.WriteLine(names[maxIndex] + "" "" + maxScore);




            int[] marks = { 1, 25, 6, 7, 4, 8 };
            int sumMarks = 0;

            for (int i = 0; i < marks.Length; i++)
            {
                sumMarks += marks[i];
            }

            Console.WriteLine(sumMarks);
        }
    }
}
"
4aEYzeKN,sql to orm,ruchej,SQL,Sunday 10th of March 2024 01:35:12 PM CDT,"SELECT 
  PA.ID, 
  PA.AREA, 
  PA.CITY, 
  PA.STREET, 
  PA.HOUSE, 
  PA.APARTAMENT, 
  PA.CODE_ACCOUNT, 
  --   OBF.ADRESS_FIAS,
  --   OBF.KADASTR_NUMBER,
  --   OBF.FIAS,
  PA.FIO, 
  PA.CONTRACT_NAME, 
  PA.HOUSE_TYPE, 
  PA.DATE_FROM, 
  PA.DATE_BY, 
  PA.DATE_CREATE, 
  PA.DATE_UPDATE, 
  PA.USER_ID, 
  PA.CONTRACT_ID, 
  PA.RKC, 
  B1.SALDO_K, 
  B1.KOL_MONTH, 
  B1.PAYMENT, 
  B1.RECALC, 
  B1.ACCRUAL,
  TO_CHAR(B1.BALANCE_DATE, 'yyyy-mm-dd') AS BALANCE_DATE 
FROM 
  PERSONAL_ACCOUNT PA 
  LEFT JOIN (
    SELECT 
      B.ACCOUNT_ID, 
      B.BALANCE_DATE, 
      B.SALDO_N, 
      B.ACCRUAL, 
      B.RECALC, 
      B.PAYMENT, 
      CASE WHEN B.ACCRUAL <> 0 THEN ROUND(B.SALDO_N / B.ACCRUAL, 0) ELSE 0 END KOL_MONTH, 
      B.SALDO_K 
    FROM 
      BALANCE B 
      JOIN (
        SELECT 
          ACCOUNT_ID, 
          MAX(BALANCE_DATE) AS MAX_BALANCE_DATE 
        FROM 
          BALANCE 
        GROUP BY 
          ACCOUNT_ID
      ) MAX_BALANCE_DATE ON B.ACCOUNT_ID = MAX_BALANCE_DATE.ACCOUNT_ID 
      AND B.BALANCE_DATE = MAX_BALANCE_DATE.MAX_BALANCE_DATE
  ) B1 ON PA.ID = B1.ACCOUNT_ID
limit 5"
hsirQSHe,turrtlev2.3,Ruja404,Lua,Sunday 10th of March 2024 01:22:22 PM CDT,"local file = fs.open(""output.csv"", ""r"")
local lines = {}
local coordinates = {}
local ci = 0
local logger = fs.open(""turtle_instructions"", ""w"")

local function has_value (tab, val)
    for index, value in ipairs(tab) do
        if value == val then
            return true
        end
    end

    return false
end

while true do
    local line = file.readLine()
 
    if not line then break end
    local coordinate = {x = 0, y = 0}
    
    for coord, value in string.gmatch(line, ""(%w+)=(%w+)"") do
        coordinate[coord] = tonumber(value)
    end
    coordinates[ci] = coordinate
    ci = ci + 1
    
    lines[#lines + 1] = line
end
 
file.close()

-- Function to split a string into parts based on a delimiter
function split(inputstr, sep)
    if sep == nil then
        sep = ""%s""
    end
    local t = {}
    for str in string.gmatch(inputstr, ""([^"" .. sep .. ""]+)"") do
        table.insert(t, str)
    end
    return t
end

function createEmptyMatrix(width, height)
    local matrix = {}
    for i = 0, height do
        matrix[i] = {}
        for j = 0, width do
            matrix[i][j] = """"
        end
    end
    return matrix
end
 
-- Read the CSV file and construct the adjacency matrix
function createVertexMap(filename)
    local vertex_map = {}
    local file = fs.open(filename, ""r"")
    local line = file.readLine()
    local width, height = string.match(line , ""(%d+)%,(%d+)"")
    vertex_map = createEmptyMatrix(tonumber(width) - 1, tonumber(height) - 1)
 
    -- Iterate through each line in the file
    line = file.readLine()
    while true do
        if not line then break end
        
        local vertices= split(line, "";"")
        local vertex1, vertex2 = string.match(line, ""(%a%d%a%d);(%a%d%a%d)"")
        if not vertex1 or not vertex2 then break end
 
        -- Initialize an empty list if the vertex doesn't exist in the map
        vertex_map[vertex1] = vertex_map[vertex1] or {}
        vertex_map[vertex2] = vertex_map[vertex2] or {}
 
        table.insert(vertex_map[vertex1], vertex2)
        table.insert(vertex_map[vertex2], vertex1)
 
        line = file.readLine()
    end
 
    file.close()
    return vertex_map
end
 
-- Function to check if two vertices are connected
function areVerticesConnected(vertex_map, given_vertex, check_vertex)
    local connected_vertices = getConnectedVertices(vertex_map, given_vertex)
    for _, vertex in ipairs(connected_vertices) do
        if vertex == check_vertex then
            return true
        end
    end
    return false
end
 
-- Function to get connected vertices of a given vertex
function getConnectedVertices(vertex_map, vertex)
    return vertex_map[vertex] or {}
end


function moveToCoordinates(position, x, y)
	local first = true
	local moveAfterTransission = """"
	local vector = {}
    local waitForRebuild = 0
	vector.x = x - position.x
	vector.y = y - position.y
		
	logger.writeLine(""current position: "" .. position.x .. "", "" .. position.y)
    logger.writeLine(""transitioning to coordinates: "" .. x .. "", "" .. y)
    logger.writeLine(""vector to that position: "" .. vector.x .. "", "" .. vector.y)
    logger.writeLine(""/////////////////////////"")
	--move until on the same x coord
	while position.x ~= x do
		if x > position.x then
			position.x = position.x + 1


				logger.writeLine(""2times moving forward: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""forward"", 2, (waitForRebuild >= 2))
				

		else
			position.x = position.x - 1

				logger.writeLine(""2times moving backward: "" .. position.x .. "", "" .. position.y)

				moveTurtle(""backward"", 2, (waitForRebuild >= 1))
		end
        waitForRebuild = waitForRebuild + 1
	end


	--move until on the same y coord
	while position.y ~= y do
		if y > position.y then
			position.y = position.y + 1

				logger.writeLine(""2times moving right: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""right"", 2, true)

		else
			position.y = position.y - 1
				
				logger.writeLine(""2times moving left: "" .. position.x .. "", "" .. position.y)
				moveTurtle(""left"", 2, true)
				

		end

	end
		
    logger.writeLine(""========Transitioning ended========"")
    logger.writeLine(""current position: "" .. position.x .. "", "" .. position.y)
    logger.writeLine(""vector: "" .. vector.x .. "", "" .. vector.y)
    logger.writeLine(""current vertex should be: "" .. x .. "", "" .. y)
    logger.writeLine(""==================================="")
end

function rebuildBack()
    turtle.turnRight()
    turtle.turnRight()
    turtle.place()
    turtle.turnRight()
    turtle.turnRight()
end

function moveTurtle(direction, steps, rebuild)
	if direction == ""forward"" then
		moveForward(steps, rebuild)
	elseif direction == ""left"" then
		moveLeft(steps, rebuild)
	elseif direction == ""right"" then
		moveRight(steps, rebuild)
	elseif direction == ""backward"" then
		moveBack(steps, rebuild)
	end
end

function getDirection(position, x, y)
	if x > position.x then
        return ""forward""
    elseif x < position.x then
        return ""backward""
    end
    
    if y > position.y then
        return ""right""
    elseif y < position.y then
        return ""left""
    end
end

function createHole()
	--turtle.digDown()
	--turtle.down()
	--turtle.digDown()

	turtle.dig()
    turtle.digDown()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.dig()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.dig()	
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.forward()

    turtle.turnRight()
    --/////////////
    turtle.digDown()
	turtle.down()
	turtle.digDown()

    turtle.digDown()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.forward()

	turtle.turnRight()
	turtle.digDown()
	turtle.forward()
    --/////////////
	turtle.turnRight()
	turtle.up()
	
end

function moveLeft(steps, rebuild)
	turtle.turnLeft()
    local isBlock = false
    for i=1, steps do


        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end

        if turtle.detect() then
            isBlock = true
        else
            isBlock = false
        end
        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end
    end
	turtle.turnRight()
end

function moveRight(steps, rebuild)
	turtle.turnRight()
    local isBlock = false
    for i=1, steps, 1 do

        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end

        if turtle.detect() then
            isBlock = true
        else
            isBlock = false
        end
        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end
    end
	turtle.turnLeft()
end

function moveForward(steps, rebuild)
    local isBlock = false
    for i=1, steps, 1 do

        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end

        if turtle.detect() then
            isBlock = true
        else
            isBlock = false
        end
        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end
    end
end

function moveBack(steps, rebuild)

    turtle.turnRight()
    turtle.turnRight()
    local isBlock = false
    for i=1, steps, 1 do

        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end

        if turtle.detect() then
            isBlock = true
        else
            isBlock = false
        end
        turtle.dig()
        turtle.forward()
        if rebuild and isBlock then rebuildBack() end
    end

	turtle.turnRight()
    turtle.turnRight()
end

--============================================================

local vertex_map = createVertexMap(""adjaceny.csv"")
local position = {x=0,y=0}
 
local debug = fs.open(""debug"", ""w"")

local visited = {""x0y0""}

turtle.refuel()
turtle.dig()
turtle.forward()

logger.writeLine(""first forward"")

for i=0, #coordinates, 1 do

    
    position.x = coordinates[i].x
    position.y = coordinates[i].y 

	if not coordinates[i+1] then 
		createHole()
		break 
	end
    local x = coordinates[i+1].x
    local y = coordinates[i+1].y

	--initialize
	logger.writeLine(""digging down"")
	logger.writeLine(""coming back up"")
    logger.writeLine("""")
	createHole()

	local vertex1 = ""x"" .. tostring(position.x) .. ""y"" .. tostring(position.y)
	local vertex2 = ""x"" .. tostring(x) .. ""y"" .. tostring(y)

	if (position.x + 1 == x or position.x - 1 == x) and areVerticesConnected(vertex_map, vertex1 , vertex2 ) then
		logger.writeLine(""2times position: "" .. position.x .. "", "" .. position.y .. "" >>> "" .. getDirection(position, x, y))

		moveTurtle(getDirection(position, x, y), 1, false)
		createHole()
		moveTurtle(getDirection(position, x, y), 1, false)

	elseif (position.y + 1 == y or position.y - 1 == y) and areVerticesConnected(vertex_map, vertex1 , vertex2 ) then
		logger.writeLine(""2times position: "" .. position.x .. "", "" .. position.y .. "" >>> "" .. getDirection(position, x, y))

		moveTurtle(getDirection(position, x, y), 1, false)
		createHole()
		moveTurtle(getDirection(position, x, y), 1, false)

	else
        moveToCoordinates(position, x, y)
        logger.writeLine(""////////////////////////"")
        logger.writeLine(""Searching for connected vertices to create a tunnel"")
 
        local connected_vertices = getConnectedVertices(vertex_map, vertex2)
        local break_flag = false
        for _, vertex in ipairs(connected_vertices) do
            for _, visited in ipairs(visited) do
                if break_flag then break end
                logger.writeLine(""Comparing "" .. vertex .. "" || "" .. visited)
                if visited == vertex then
                    local tunnel_x = tonumber(string.sub(visited, 2, 2))
                    local tunnel_y = tonumber(string.sub(visited, 4, 4))
                    local tunnel_direction = getDirection(position, tunnel_x , tunnel_y )
                    logger.writeLine(""tunnel in the direction: "" .. tunnel_direction )
                    moveTurtle(tunnel_direction, 1, false)
                    logger.writeLine(""DIGGING HOLE FOR TUNNEL"")
                    createHole()
                    
                    local back_direction = getDirection({x=tunnel_x,y=tunnel_y}, position.x, position.y)
                    logger.writeLine(""moving back in the direction: "" .. back_direction )
                    moveTurtle(back_direction, 1, false)
                    break_flag = true
                    break
                end
            end
        end
	end

    table.insert(visited, vertex1)
end
 
moveToCoordinates(position, 0, 0)
"
KuX8eH38,Fluxus Download 2024,Artani,Lua,Sunday 10th of March 2024 01:21:59 PM CDT,"FLUXUS DOWNLOAD FREE KEYLESS UPDATED 2024 V612
https://www.youtube.com/watch?v=MxWFi8uzP1o&t"
qEbUJya5,Untitled,cosenza987,C++,Sunday 10th of March 2024 01:18:07 PM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

const int L = 17;

struct seg_tree {
    int n;
    vector<int> lz, st;
    seg_tree(int n_ = 1) {
        n = n_;
        lz.resize(4 * n);
        st.resize(4 * n);
    }
    void push(int p, int l, int r) {
        if(lz[p]) {
            st[p] += lz[p] * (r - l + 1);
            if(l != r) {
                lz[2 * p] += lz[p];
                lz[2 * p + 1] += lz[p];
            }
            lz[p] = 0;
        }
    }
    int query(int i, int j) {
        return query(i, j, 1, 1, n);
    }
    int query(int i, int j, int p, int l, int r) {
        push(p, l, r);
        if(l > j or r < i) return 0;
        if(l >= i and j >= r) return st[p];
        return query(i, j, 2 * p, l, (l + r) >> 1) + query(i, j, 2 * p + 1, ((l + r) >> 1) + 1, r);
    }
    void update(int i, int j, int v) {
        return update(i, j, v, 1, 1, n);
    }
    void update(int i, int j, int v, int p, int l, int r) {
        push(p, l, r);
        if(l > j or r < i) return;
        if(l >= i and j >= r) {
            lz[p] += v;
            push(p, l, r);
            return;
        }
        update(i, j, v, 2 * p, l, (l + r) >> 1);
        update(i, j, v, 2 * p + 1, ((l + r) >> 1) + 1, r);
        st[p] = st[2 * p] + st[2 * p + 1];
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, qq;
    cin >> n >> qq;
    vector<vector<int>> adj(n + 1), up(L, vector<int>(n + 1));
    vector<vector<pair<int, int>>> fq(n + 1);
    map<int, map<int, vector<pair<int, int>>>> sq;
    vector<long long> q(qq), ans(qq);
    vector<int> sz(n + 1), h(n + 1);
    int root = -1;
    for(int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        if(!x) {
            root = i;
            continue;
        }
        up[0][i] = x;
        adj[x].push_back(i);
    }
    for(int i = 1; i < L; i++) {
        for(int j = 1; j <= n; j++) {
            up[i][j] = up[i - 1][up[i - 1][j]];
        }
    }
    for(int i = 0; i < qq; i++) {
        cin >> q[i];
        q[i]--;
        ans[i] += 1ll * (q[i] / n) * n * n;
        fq[(q[i] / n) + 1].emplace_back(q[i] % n, i);
    }
    seg_tree seg(n);
    function<void(int)> dfs_sz = [&](int u) {
        sz[u] = 1;
        for(auto e : adj[u]) {
            h[e] = h[u] + 1;
            dfs_sz(e);
            sz[u] += sz[e];
        }
    };
    dfs_sz(root);
    seg.update(root, root, sz[root]);
    function<int(int, int)> prv = [&](int a, int b) {
        if(a == b) return a;
        if(h[a] > h[b]) swap(a, b);
        int dff = h[b] - h[a] - 1, cnt = 0;
        while(dff) {
            if(dff & 1) {
                b = up[cnt][b];
            }
            cnt++;
            dff >>= 1;
        }
        if(up[0][b] == a) return b;
        b = up[0][b];
        for(int i = L - 1; i >= 0; i--) {
            if(up[i][a] != up[i][b]) {
                a = up[i][a];
                b = up[i][b];
            }
        }
        return a;
    };
    function<void(int)> dfsfq = [&](int u) {
        for(auto [qqq, i] : fq[u]) {
            int l = 1, r = n, res = -1;
            while(l <= r) {
                int mid = (l + r) >> 1;
                if(seg.query(1, mid) > qqq) {
                    res = mid;
                    r = mid - 1;
                } else {
                    l = mid + 1;
                }
            }
            ans[i] += 1ll * (res - 1) * n;
            sq[res][prv(res, u)].emplace_back(qqq - seg.query(1, res - 1), i);
        }
        for(auto e : adj[u]) {
            seg.update(e, e, sz[e]);
            seg.update(u, u, -sz[e]);
            dfsfq(e);
            seg.update(e, e, -sz[e]);
            seg.update(u, u, sz[e]);
        }
    };
    dfsfq(root);
    vector<vector<int>> v(n + 1);
    indexed_set cur;
    function<void(int, bool)> dfssq = [&](int u, bool keep) {
        int mx = -1, bc = -1;
        for(auto e : adj[u]) {
            if(mx < sz[e]) {
                mx = sz[e];
                bc = e;
            }
        }
        for(auto e : adj[u]) {
            if(e != bc) {
                dfssq(e, false);
            }
        }
        if(bc != -1) {
            dfssq(bc, true);
            swap(v[u], v[bc]);            
        }
        indexed_set tmp;
        v[u].push_back(u);
        cur.insert(u);
        tmp.insert(u);
        for(auto e : adj[u]) {
            if(e != bc) {
                for(auto i : v[e]) {
                    cur.insert(i);
                    tmp.insert(i);
                    v[u].push_back(i);
                }
            }
        }
        for(auto [pos, id] : sq[u][u]) {
            ans[id] += *(cur.find_by_order(pos)) - 1;
        }
        for(auto [pos, id] : sq[u][bc]) {
            ans[id] += *(tmp.find_by_order(pos)) - 1;
        }
        for(auto e : adj[u]) {
            if(e != bc) {
                for(auto i : v[e]) {
                    cur.erase(i);
                }
                for(auto [pos, id] : sq[u][e]) {
                    ans[id] += *(cur.find_by_order(pos)) - 1;
                }
                for(auto i : v[e]) {
                    cur.insert(i);
                }
            }
        }
        if(keep == false) {
            for(auto e : v[u]) {
                cur.erase(e);
            }
        }
    };
    dfssq(root, false);
    for(int i = 0; i < qq; i++) {
        cout << ans[i] << ""\n"";
    }
    return 0;
}"
SNAPmnPA,reenable-right-click.js,emtee40,JavaScript,Sunday 10th of March 2024 01:04:52 PM CDT,"javascript:(function(w){
  <!-- paste into URL field (marklet) -->
    var arr = ['contextmenu','copy','cut','paste','mousedown','mouseup','beforeunload','beforeprint'];
    for(var i = 0, x; x = arr[i]; i++){
        if(w['on' + x])w['on' + x] = null;
        w.addEventListener(x, function(e){e.stopPropagation()}, true);
    };
    for(var j = 0, f; f = w.frames[j]; j++){try{arguments.callee(f)}catch(e){}}})(window);"
gNxn54e0,Encoding_messages,Anonymous0069,Python,Sunday 10th of March 2024 01:02:32 PM CDT,"
''' Basically this program, reverses a word of less than 3 letters and for more than 3 letters,
	it places the first letter of the world at the last and starts and ends the word with 3 random letters''''

''' Have fun chatting with ur friends in groups where there is someone, that must not catch what u r talking about! :)'''

c =1 

while c == 1:


    choice = input(""\nWhat you want to do?(C/D/E):"")
    #Coding:
    if choice.upper() == ""C"":
        s = input(""\nEnter your message:"")
        MsgList = s.split(' ')
        print(""\nYour encrypted message is here:"")
        for i in MsgList:
            
            if len(i) <= 2:
                print(i[-1::-1], end = "" "")

            else:
                print(""hjk"",end="""")
                print(i[1:], end = """")
                print(i[0],end = ""hfg "")


    #Decoding
    elif choice.upper() == ""D"":
        s = input(""\nEnter the message you received:"")
        MsgRcv = s.split("" "") 
        print(""\nYour decrypted message is here:"")
        for i in MsgRcv:
            
            
            if len(i) <= 2:
                print(i[-1::-1], end = "" "")

            else:
                print(i[-4], end = """")
                print(i[3:-4], end = "" "")

    elif choice.upper() == ""E"":
        print(""\n-Signing off!"")
        print(""\n- Made for dirty stuff( By Anonymous0069 :) )"")
        break
            
"
1LanAx2G,Algoritmi lezione 16 - Shell Sort,fcamuso,C#,Sunday 10th of March 2024 12:08:37 PM CDT,"#include <iostream>
#include <chrono>
#include <ctime>
#include <random>

using namespace std;
#include ""../../min_max/utility_vettori.h""


using namespace std;

//i due array contengono gli stessi elementi?
//ATTENZIONE: modifica il secondo!
bool stessi_elementi(unsigned long v1[], unsigned long v2[], int QUANTI_ELEMENTI)
{

  int rimasti = QUANTI_ELEMENTI;
  for (int i=0; i<QUANTI_ELEMENTI; i++)
  {
      bool trovato = false;

      for (int j=0; j<rimasti; j++)

      //trovato una corripondenza la sposto
      //a fine array per non riconsiderarla
      //al passo successivo gestendo
      //le occorrenze multiple di un certo valore
      if (v1[i] == v2[j]) {
        trovato=true;
        swap(v2[j], v2[rimasti-1]);
        rimasti --;
        break;
      }

      if (!trovato) return false;
  }
  return true;
}

void insertion_sort_interi(unsigned long v[], int numero_elementi)
{
  //porta il minimo in prima posizione a fare da sentinella
  int pos_min = 0;
  for (int i=1; i<numero_elementi; i++)
    if (v[i] < v[pos_min]) pos_min = i;

  swap(v[0], v[pos_min]);

  for (int i = 1; i < numero_elementi; i++) {

    int elemento_corrente = v[i];

    int j = i - 1;
    while( v[j] > elemento_corrente)
    {
      v[j + 1] = v[j];
      j--;
    }
    v[j + 1] = elemento_corrente;
  }
}

void shell_sort_interi(unsigned long v[], int numero_elementi)
{
  int distanza = numero_elementi/2; //'gap'

  while (distanza>0)
  {
    for (int i = distanza; i < numero_elementi; i++) {

      int elemento_corrente = v[i];

      int j = i;
      while( j>=distanza && v[j - distanza] > elemento_corrente)
      {
        v[j] = v[j - distanza];
        j -= distanza;
      }
      v[j] = elemento_corrente;
    }

    distanza = distanza / 2;
  }
}




const int QUANTI_ELEMENTI = 100000;
const int LUNGHEZZA = 1000;
unsigned long v[QUANTI_ELEMENTI];
unsigned long vcopia[QUANTI_ELEMENTI];


int main()
{
  carica_vettore_interi(v, QUANTI_ELEMENTI);

  //stampa_vettore_interi(v, QUANTI_ELEMENTI);
  //cout << string(40, '*') << endl;

  //duplico vettore per controlli finali
  for (int i=0; i<QUANTI_ELEMENTI; i++) vcopia[i] = v[i];

  Cronometro(Stato::START);

  //lo ordino crescente
  shell_sort_interi(v, QUANTI_ELEMENTI);

  cout << ""Tempo impiegato: "" << Cronometro(Stato::STOP) << endl;
  if (verifica_ordine_crescente(v, QUANTI_ELEMENTI)) cout <<""IN ORDINE!\n"";

  //sono gli stessi elementi?
  if (!stessi_elementi(v, vcopia, QUANTI_ELEMENTI))
    cout << ""Array difformi!!\n"";
  else
    cout << ""L'array ordinato contiene gli stessi elementi di quello iniziale\n"";

  //stampa_vettore_interi(v, QUANTI_ELEMENTI);


    return 0;
}
"
AStjYiYc,MedkitScript (Break In Style),Sungmingamerpro13,CSS,Sunday 10th of March 2024 12:07:44 PM CDT,"local Tool = script.Parent
-- Create the Heal function
local function Heal(player)
	-- Check if the player is alive
	if player.Character and player.Character:FindFirstChild(""Humanoid"") and player.Character.Humanoid.Health > 0 then
		-- Create a selection box on the player
		local selectionBox = Instance.new(""SelectionBox"")
		selectionBox.Adornee = player.Character
		selectionBox.LineThickness = 0.1
		selectionBox.Parent = player.Character

		-- Wait for a short duration to show the selection box
		wait(3)

		-- Heal the player
		player.Character.Humanoid.Health = player.Character.Humanoid.MaxHealth

		-- Remove the selection box
		selectionBox:Destroy()
	end
end

-- Handle equipped event
Tool.Equipped:Connect(function(mouse)
	-- Create a selection box for the local player
	local selectionBox = Instance.new(""SelectionBox"")
	selectionBox.Adornee = game.Players.LocalPlayer.Character
	selectionBox.LineThickness = 0.1
	selectionBox.Parent = game.Players.LocalPlayer.Character

	-- Wait for a short duration to show the selection box
	wait(1)

	-- Remove the selection box
	selectionBox:Destroy()
end)

-- Handle mouse button click
Tool.Activated:Connect(function()
	-- Check if the player is healing themselves
	local humanoid = game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"")
	if humanoid and humanoid.Health > 0 then
		Heal(game.Players.LocalPlayer)
		script.Parent.healed:Play()
	elseif humanoid and humanoid.Health < humanoid.MaxHealth then
		Tool:Destroy()
	end
end)"
vpcZG0Ea,Controller,JackHack2,Lua,Sunday 10th of March 2024 12:04:19 PM CDT,"channel = {[""rx""]=1,[""tx""]=2}
settings = {[""modemFound""]=false}
material = {[""1""]=0,[""2""]=0,[""3""]=0,[""4""]=0,[""5""]=0,[""6""]=0,[""7""]=0,[""8""]=0,[""9""]=0,[""0""]=""X""}
position = {[""horizonal""]=1,[""vertical""]=1,[""direction""]=0}
item = {[""1""]=""......................"",[""2""]=""......................"",[""3""]=""......................"",[""4""]=""......................"",[""5""]=""......................"",[""6""]=""......................"",[""7""]=""......................"",[""8""]=""......................"",[""9""]=""......................"",[""10""]=""......................"",[""11""]=""......................"",[""12""]=""......................"",[""13""]=""......................"",[""14""]=""......................"",[""15""]=""......................"",[""16""]=""......................""}
block = {[""0101""]="""",[""0201""]="""",[""0301""]="""",[""0401""]="""",[""0501""]="""",[""0601""]="""",[""0701""]="""",[""0801""]="""",[""0901""]="""",[""1001""]="""",[""1101""]="""",[""1201""]="""",[""1301""]="""",[""1401""]="""",[""1501""]="""",[""1601""]="""",[""1701""]="""",[""1801""]="""",[""1901""]="""",[""2001""]="""",[""2101""]="""",[""2201""]="""",[""2301""]="""",[""2401""]="""",[""2501""]="""",[""2601""]="""",
		 [""0102""]="""",[""0202""]="""",[""0302""]="""",[""0402""]="""",[""0502""]="""",[""0602""]="""",[""0702""]="""",[""0802""]="""",[""0902""]="""",[""1002""]="""",[""1102""]="""",[""1202""]="""",[""1302""]="""",[""1402""]="""",[""1502""]="""",[""1602""]="""",[""1702""]="""",[""1802""]="""",[""1902""]="""",[""2002""]="""",[""2102""]="""",[""2202""]="""",[""2302""]="""",[""2402""]="""",[""2502""]="""",[""2602""]="""",
		 [""0103""]="""",[""0203""]="""",[""0303""]="""",[""0403""]="""",[""0503""]="""",[""0603""]="""",[""0703""]="""",[""0803""]="""",[""0903""]="""",[""1003""]="""",[""1103""]="""",[""1203""]="""",[""1303""]="""",[""1403""]="""",[""1503""]="""",[""1603""]="""",[""1703""]="""",[""1803""]="""",[""1903""]="""",[""2003""]="""",[""2103""]="""",[""2203""]="""",[""2303""]="""",[""2403""]="""",[""2503""]="""",[""2603""]="""",
		 [""0104""]="""",[""0204""]="""",[""0304""]="""",[""0404""]="""",[""0504""]="""",[""0604""]="""",[""0704""]="""",[""0804""]="""",[""0904""]="""",[""1004""]="""",[""1104""]="""",[""1204""]="""",[""1304""]="""",[""1404""]="""",[""1504""]="""",[""1604""]="""",[""1704""]="""",[""1804""]="""",[""1904""]="""",[""2004""]="""",[""2104""]="""",[""2204""]="""",[""2304""]="""",[""2404""]="""",[""2504""]="""",[""2604""]="""",
		 [""0105""]="""",[""0205""]="""",[""0305""]="""",[""0405""]="""",[""0505""]="""",[""0605""]="""",[""0705""]="""",[""0805""]="""",[""0905""]="""",[""1005""]="""",[""1105""]="""",[""1205""]="""",[""1305""]="""",[""1405""]="""",[""1505""]="""",[""1605""]="""",[""1705""]="""",[""1805""]="""",[""1905""]="""",[""2005""]="""",[""2105""]="""",[""2205""]="""",[""2305""]="""",[""2405""]="""",[""2505""]="""",[""2605""]="""",
		 [""0106""]="""",[""0206""]="""",[""0306""]="""",[""0406""]="""",[""0506""]="""",[""0606""]="""",[""0706""]="""",[""0806""]="""",[""0906""]="""",[""1006""]="""",[""1106""]="""",[""1206""]="""",[""1306""]="""",[""1406""]="""",[""1506""]="""",[""1606""]="""",[""1706""]="""",[""1806""]="""",[""1906""]="""",[""2006""]="""",[""2106""]="""",[""2206""]="""",[""2306""]="""",[""2406""]="""",[""2506""]="""",[""2606""]="""",
		 [""0107""]="""",[""0207""]="""",[""0307""]="""",[""0407""]="""",[""0507""]="""",[""0607""]="""",[""0707""]="""",[""0807""]="""",[""0907""]="""",[""1007""]="""",[""1107""]="""",[""1207""]="""",[""1307""]="""",[""1407""]="""",[""1507""]="""",[""1607""]="""",[""1707""]="""",[""1807""]="""",[""1907""]="""",[""2007""]="""",[""2107""]="""",[""2207""]="""",[""2307""]="""",[""2407""]="""",[""2507""]="""",[""2607""]="""",
		 [""0108""]="""",[""0208""]="""",[""0308""]="""",[""0408""]="""",[""0508""]="""",[""0608""]="""",[""0708""]="""",[""0808""]="""",[""0908""]="""",[""1008""]="""",[""1108""]="""",[""1208""]="""",[""1308""]="""",[""1408""]="""",[""1508""]="""",[""1608""]="""",[""1708""]="""",[""1808""]="""",[""1908""]="""",[""2008""]="""",[""2108""]="""",[""2208""]="""",[""2308""]="""",[""2408""]="""",[""2508""]="""",[""2608""]="""",
		 [""0109""]="""",[""0209""]="""",[""0309""]="""",[""0409""]="""",[""0509""]="""",[""0609""]="""",[""0709""]="""",[""0809""]="""",[""0909""]="""",[""1009""]="""",[""1109""]="""",[""1209""]="""",[""1309""]="""",[""1409""]="""",[""1509""]="""",[""1609""]="""",[""1709""]="""",[""1809""]="""",[""1909""]="""",[""2009""]="""",[""2109""]="""",[""2209""]="""",[""2309""]="""",[""2409""]="""",[""2509""]="""",[""2609""]="""",
		 [""0110""]="""",[""0210""]="""",[""0310""]="""",[""0410""]="""",[""0510""]="""",[""0610""]="""",[""0710""]="""",[""0810""]="""",[""0910""]="""",[""1010""]="""",[""1110""]="""",[""1210""]="""",[""1310""]="""",[""1410""]="""",[""1510""]="""",[""1610""]="""",[""1710""]="""",[""1810""]="""",[""1910""]="""",[""2010""]="""",[""2110""]="""",[""2210""]="""",[""2310""]="""",[""2410""]="""",[""2510""]="""",[""2610""]="""",
		 [""0111""]="""",[""0211""]="""",[""0311""]="""",[""0411""]="""",[""0511""]="""",[""0611""]="""",[""0711""]="""",[""0811""]="""",[""0911""]="""",[""1011""]="""",[""1111""]="""",[""1211""]="""",[""1311""]="""",[""1411""]="""",[""1511""]="""",[""1611""]="""",[""1711""]="""",[""1811""]="""",[""1911""]="""",[""2011""]="""",[""2111""]="""",[""2211""]="""",[""2311""]="""",[""2411""]="""",[""2511""]="""",[""2611""]="""",
		 [""0112""]="""",[""0212""]="""",[""0312""]="""",[""0412""]="""",[""0512""]="""",[""0612""]="""",[""0712""]="""",[""0812""]="""",[""0912""]="""",[""1012""]="""",[""1112""]="""",[""1212""]="""",[""1312""]="""",[""1412""]="""",[""1512""]="""",[""1612""]="""",[""1712""]="""",[""1812""]="""",[""1912""]="""",[""2012""]="""",[""2112""]="""",[""2212""]="""",[""2312""]="""",[""2412""]="""",[""2512""]="""",[""2612""]="""",
		 [""0113""]="""",[""0213""]="""",[""0313""]="""",[""0413""]="""",[""0513""]="""",[""0613""]="""",[""0713""]="""",[""0813""]="""",[""0913""]="""",[""1013""]="""",[""1113""]="""",[""1213""]="""",[""1313""]="""",[""1413""]="""",[""1513""]="""",[""1613""]="""",[""1713""]="""",[""1813""]="""",[""1913""]="""",[""2013""]="""",[""2113""]="""",[""2213""]="""",[""2313""]="""",[""2413""]="""",[""2513""]="""",[""2613""]="""",
		 [""0114""]="""",[""0214""]="""",[""0314""]="""",[""0414""]="""",[""0514""]="""",[""0614""]="""",[""0714""]="""",[""0814""]="""",[""0914""]="""",[""1014""]="""",[""1114""]="""",[""1214""]="""",[""1314""]="""",[""1414""]="""",[""1514""]="""",[""1614""]="""",[""1714""]="""",[""1814""]="""",[""1914""]="""",[""2014""]="""",[""2114""]="""",[""2214""]="""",[""2314""]="""",[""2414""]="""",[""2514""]="""",[""2614""]="""",
		 [""0115""]="""",[""0215""]="""",[""0315""]="""",[""0415""]="""",[""0515""]="""",[""0615""]="""",[""0715""]="""",[""0815""]="""",[""0915""]="""",[""1015""]="""",[""1115""]="""",[""1215""]="""",[""1315""]="""",[""1415""]="""",[""1515""]="""",[""1615""]="""",[""1715""]="""",[""1815""]="""",[""1915""]="""",[""2015""]="""",[""2115""]="""",[""2215""]="""",[""2315""]="""",[""2415""]="""",[""2515""]="""",[""2615""]="""",
		 [""0116""]="""",[""0216""]="""",[""0316""]="""",[""0416""]="""",[""0516""]="""",[""0616""]="""",[""0716""]="""",[""0816""]="""",[""0916""]="""",[""1016""]="""",[""1116""]="""",[""1216""]="""",[""1316""]="""",[""1416""]="""",[""1516""]="""",[""1616""]="""",[""1716""]="""",[""1816""]="""",[""1916""]="""",[""2016""]="""",[""2116""]="""",[""2216""]="""",[""2316""]="""",[""2416""]="""",[""2516""]="""",[""2616""]="""",
		 [""0117""]="""",[""0217""]="""",[""0317""]="""",[""0417""]="""",[""0517""]="""",[""0617""]="""",[""0717""]="""",[""0817""]="""",[""0917""]="""",[""1017""]="""",[""1117""]="""",[""1217""]="""",[""1317""]="""",[""1417""]="""",[""1517""]="""",[""1617""]="""",[""1717""]="""",[""1817""]="""",[""1917""]="""",[""2017""]="""",[""2117""]="""",[""2217""]="""",[""2317""]="""",[""2417""]="""",[""2517""]="""",[""2617""]="""",
		 [""0118""]="""",[""0218""]="""",[""0318""]="""",[""0418""]="""",[""0518""]="""",[""0618""]="""",[""0718""]="""",[""0818""]="""",[""0918""]="""",[""1018""]="""",[""1118""]="""",[""1218""]="""",[""1318""]="""",[""1418""]="""",[""1518""]="""",[""1618""]="""",[""1718""]="""",[""1818""]="""",[""1918""]="""",[""2018""]="""",[""2118""]="""",[""2218""]="""",[""2318""]="""",[""2418""]="""",[""2518""]="""",[""2618""]="""",
		 [""0119""]="""",[""0219""]="""",[""0319""]="""",[""0419""]="""",[""0519""]="""",[""0619""]="""",[""0719""]="""",[""0819""]="""",[""0919""]="""",[""1019""]="""",[""1119""]="""",[""1219""]="""",[""1319""]="""",[""1419""]="""",[""1519""]="""",[""1619""]="""",[""1719""]="""",[""1819""]="""",[""1919""]="""",[""2019""]="""",[""2119""]="""",[""2219""]="""",[""2319""]="""",[""2419""]="""",[""2519""]="""",[""2619""]="""",
		 [""0120""]="""",[""0220""]="""",[""0320""]="""",[""0420""]="""",[""0520""]="""",[""0620""]="""",[""0720""]="""",[""0820""]="""",[""0920""]="""",[""1020""]="""",[""1120""]="""",[""1220""]="""",[""1320""]="""",[""1420""]="""",[""1520""]="""",[""1620""]="""",[""1720""]="""",[""1820""]="""",[""1920""]="""",[""2020""]="""",[""2120""]="""",[""2220""]="""",[""2320""]="""",[""2420""]="""",[""2520""]="""",[""2620""]=""""}
menu = 1
cursor = {[""a1""]=9,[""b1""]=12}

function checkModem()
	for a, b in pairs(rs.getSides()) do
		if peripheral.getType(b) == ""modem"" then
			modem = peripheral.wrap(b)
			settings[""modemFound""]=true
			modem.closeAll()
			modem.open(channel[""rx""])
			modem.open(channel[""tx""])
			rednet.open(b)
			if modem then
				if modem.isOpen(channel[""tx""])==true then
					print(""tx channel ""..channel[""tx""].."" online"")
				else print(""tx channel ""..channel[""tx""].."" offline"")
				end
				if modem.isOpen(channel[""rx""]) == true then
					print(""rx channel ""..channel[""rx""].."" online"")
				else print(""rx channel ""..channel[""rx""].."" offline"")
				end
			end
		end
	end	
end
function backround1()
	
								 test2= 00000000011111111112222222
								 test1= 12345678901234567890123456
	term.setCursorPos(1,1)  term.write(""+------------------------+"")--01
	term.setCursorPos(1,2)  term.write(""|                        |"")--02
	term.setCursorPos(1,3)  term.write(""|                        |"")--03
	term.setCursorPos(1,4)  term.write(""|                        |"")--04
	term.setCursorPos(1,5)  term.write(""|                        |"")--05
	term.setCursorPos(1,6)  term.write(""|                        |"")--06
	term.setCursorPos(1,7)  term.write(""|                        |"")--07
	term.setCursorPos(1,8)  term.write(""|                        |"")--08
	term.setCursorPos(1,9)  term.write(""|                        |"")--09
	term.setCursorPos(1,10) term.write(""|                        |"")--10
	term.setCursorPos(1,11) term.write(""|                        |"")--11
	term.setCursorPos(1,12) term.write(""|                        |"")--12
	term.setCursorPos(1,13) term.write(""|                        |"")--13
	term.setCursorPos(1,14) term.write(""|                        |"")--14
	term.setCursorPos(1,15) term.write(""|                        |"")--15
	term.setCursorPos(1,16) term.write(""|                        |"")--16
	term.setCursorPos(1,17) term.write(""|                        |"")--17
	term.setCursorPos(1,18) term.write(""|                        |"")--18
	term.setCursorPos(1,19) term.write(""|                        |"")--19
	term.setCursorPos(1,20) term.write(""+------------------------+"")--20
end
function screen()
	term.clear()
	term.setTextColour(1)
	term.setCursorPos(1,1)
	if menu == 1 then
		local vertical
		local horizonal
		for b = 1,20 do
			if b < 10 then
				vertical = ""0""..tostring(b)
			else
				vertical = tostring(b)
			end
			for a = 1,26 do
				if a < 10 then
					horizonal = ""0""..tostring(a)
				else
					horizonal = tostring(a)
				end
				if block[horizonal..vertical] then
					if block[horizonal..vertical] == ""X"" then term.setTextColour(16384) end
					if block[horizonal..vertical] == ""1"" then term.setTextColour(2) end
					if block[horizonal..vertical] == ""2"" then term.setTextColour(4) end
					if block[horizonal..vertical] == ""3"" then term.setTextColour(8) end
					if block[horizonal..vertical] == ""4"" then term.setTextColour(16) end
					if block[horizonal..vertical] == ""5"" then term.setTextColour(32) end
					if block[horizonal..vertical] == ""6"" then term.setTextColour(64) end
					if block[horizonal..vertical] == ""7"" then term.setTextColour(256) end
					if block[horizonal..vertical] == ""8"" then term.setTextColour(2048) end
					if block[horizonal..vertical] == ""9"" then term.setTextColour(4096) end	
				end
				term.setCursorPos(a,b)
				if block[horizonal..vertical] then
					term.write(block[horizonal..vertical])
				end
			end
		end
		term.setTextColour(2048)
		term.setCursorPos(position[""horizonal""],position[""vertical""])
		term.write(""O"")
		term.setTextColour(1)
		term.setCursorPos(cursor[""a1""],cursor[""b1""])
		term.write(""O"")
	end
	if menu == 2 then
		backround1()
		term.setTextColour(2048)
		term.setCursorPos(8,2) term.write(""INVENTORY"")
		term.setCursorPos(3,4) term.write(item[""1""])
		term.setCursorPos(3,5) term.write(item[""2""])
		term.setCursorPos(3,6) term.write(item[""3""])
		term.setCursorPos(3,7) term.write(item[""4""])
		term.setCursorPos(3,8) term.write(item[""5""])
		term.setCursorPos(3,9) term.write(item[""6""])
		term.setCursorPos(3,10) term.write(item[""7""])
		term.setCursorPos(3,11) term.write(item[""8""])
		term.setCursorPos(3,12) term.write(item[""9""])
		term.setCursorPos(3,13) term.write(item[""10""])
		term.setCursorPos(3,14) term.write(item[""11""])
		term.setCursorPos(3,15) term.write(item[""12""])
		term.setCursorPos(3,16) term.write(item[""13""])
		term.setCursorPos(3,17) term.write(item[""14""])
		term.setCursorPos(3,18) term.write(item[""15""])
		term.setCursorPos(3,18) term.write(item[""16""])
	end
end
function eventReader()
	while true do
		event, a,b,c,d,e = os.pullEvent()
		if event == ""modem_message"" then
			messageHandler(a,b,c,d,e)
		end
		if event == ""key"" then
			commandHandler(a)
		end
	end
end
function commandHandler(key)
	local a
	local b
	if key == 44 then if menu == 1 then menu = 2 else menu = menu - 1 end end
	if key == 46 then if menu == 2 then menu = 1 else menu = menu + 1 end end
	screen()
	if menu == 1 then
		if cursor[""a1""]<10 then a = ""0""..tostring(cursor[""a1""]) else a = cursor[""a1""] end
		if cursor[""b1""]<10 then b = ""0""..tostring(cursor[""b1""]) else b = cursor[""b1""] end
		if key == 265 then cursor[""b1""]=cursor[""b1""]-1 end
		if key == 264 then cursor[""b1""]=cursor[""b1""]+1 end
		if key == 263 then cursor[""a1""]=cursor[""a1""]-1 end
		if key == 262 then cursor[""a1""]=cursor[""a1""]+1 end
		if key == 49 then block[a..b]=""1""end
		if key == 50 then block[a..b]=""2""end
		if key == 51 then block[a..b]=""3""end
		if key == 52 then block[a..b]=""4""end
		if key == 53 then block[a..b]=""5""end
		if key == 54 then block[a..b]=""6""end
		if key == 55 then block[a..b]=""7""end
		if key == 56 then block[a..b]=""8""end
		if key == 57 then block[a..b]=""9""end
		if key == 48 then block[a..b]=""X""end
		if key == 84 then position[""horizonal""] = cursor[""a1""] position[""vertical""] = cursor[""b1""] position[""direction""] = 0 end
		screen()
	end
end
screen()
eventReader()"
4pB3F6Nh,Heltec OLED functional sketch,JudMeherg,Arduino,Sunday 10th of March 2024 12:00:49 PM CDT,"/*

  OLED examples

*/

#include <Arduino.h>
#include <SPI.h>
#include <U8g2lib.h>

#define oled_scl 18
#define oled_sda 17
#define oled_rst 21

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/oled_scl, /* data=*/oled_sda, /* reset=*/oled_rst);
// U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display
// U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ 16, /* data=*/ 17, /* reset=*/ U8X8_PIN_NONE);   // ESP32 Thing, pure SW emulated I2C

void setup()
{
  Serial.begin(9600);
  while (!Serial)
    ;
  Serial.println(""OLED Test"");
  u8g2.begin();
}

void loop()
{
  u8g2.firstPage();
  do
  {
    u8g2.setFont(u8g2_font_ncenB10_tr);
    u8g2.drawStr(0, 24, ""Hello World (::"");
  } while (u8g2.nextPage());
}"
cC2bzyeW,140.213.40.10-/sdcard/Premium/useragent.py.py,OBF-XIn,Python,Sunday 10th of March 2024 11:56:37 AM CDT,"# useragent
import random

class Useragent:
    def __init__(self) -> None:
        pass
        
    def useragent_api(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.dix = random.choice(['114.0.0.20.2','114.0.0.38.120','114.0.0.20.70','114.0.0.28.120','114.0.0.0.24','114.0.0.0.41'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540'])
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Instagram {self.dix} Android ({self.dvc}; 235dpi; 1080x2280; NEXUS MOBILITY LIMITED/Nexus; {str(random.choice(self.nexus))}; mt6761; in_ID; 164094530)',
            f'Instagram {self.dix} Android ({self.dvc}; 235dpi; 1080x2280; MICROMAX MOBILITY LIMITED/Micromax; {str(random.choice(self.micromax))}; qcom; mt6761; 164094530)',
        ]))
        
    def useragent_ajax(self):
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        return(f'UCWEB/2.0 (Java; U; MIDP-2.0; en_US; {str(random.choice(self.micromax))}) U2/{random.randint(1,9)}.0.0 UCBrowser/{random.randint(1,9)}.{random.randint(1,9)}.0.{random.randint(30,999)} U2/1.0.0 Mobile UNTRUSTED/{random.randint(1,9)}.0')
        


"
v7pSddug,New-Mapcycle.ps1,Combreal,PowerShell,Sunday 10th of March 2024 11:46:36 AM CDT,"<#
.DESCRIPTION
Generates a random mapcycle.txt for Halo PC SAPP server from the mapList.txt and gametypeList.txt. 
Creates mapList.txt and gametypeList.txt with originals maps and gametypes if they don't exist.
#>

$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
$mapListPath = ""$scriptPath\mapList.txt""
$gametypeListPath = ""$scriptPath\gametypeList.txt""
$mapcyclePath = ""$scriptPath\mapcycle.txt""

$mapcycleSize = 7

$mapList = @(
    ""bloodgulch"",
    ""beavercreek"",
    ""boardingaction"",
    ""carousel"",
    ""chillout"",
    ""dangercanyon"",
    ""deathisland"",
    ""direlict"",
    ""gephyrophobia"",
    ""hangemhigh"",
    ""icefield"",
    ""infinity"",
    ""longest"",
    ""prisoner"",
    ""putput"",
    ""ratrace"",
    ""sidewinder"",
    ""timberland"",
    ""wizard""
)

$gametypeList = @(
    ""oddball"",
    ""slayer"",
    ""juggernaut"",
    ""king"",
    ""crazy king"",
    ""race"",
    ""ctf"",
    ""assault"",
    ""team slayer"",
    ""team oddball"",
    ""team race""
)

If (-Not (Test-Path -Path $mapListPath)) {
    Out-File -FilePath $mapListPath -InputObject $mapList
}

If (-Not (Test-Path -Path $gametypeListPath)) {
    Out-File -FilePath $gametypeListPath -InputObject $gametypeList
}

$finalMapList = Get-Content $mapListPath
$finalGametypeList = Get-Content $gametypeListPath

$mapcycle = """"
For ($i=0; $i -lt $mapcycleSize;$i++) {
    $mapcycle = $mapcycle + ""$($finalMapList[$(Get-Random -Minimum 0 -Maximum $finalMapList.Length)]):$($finalGametypeList[$(Get-Random -Minimum 0 -Maximum $finalGametypeList.Length)]):0:16`n"" 
}

$mapcycle = $mapcycle.Trim()
[System.IO.File]::WriteAllText($mapcyclePath, $mapcycle)"
54C7nwt4,СПРИНТ № 5 | Распределение кода по файлам | Урок 4: Заголовочные файлы и файлы с реализацией 2/2,chevengur,C++,Sunday 10th of March 2024 11:44:02 AM CDT,"carpenter.h

#include ""wall.h""

class Carpenter {
public:
    int CalcShelves(const Wall& wall) const;
};
***************************************************************************************************************************************

#include ""carpenter.h""
#include ""square_calculation.h""
#include <iostream>

int Carpenter::CalcShelves(const Wall& wall) const
{
	int x = CalcSquare(wall.GetHeight(), wall.GetWidth());
	return x / 2;
}
***************************************************************************************************************************************

square_calculation.cpp

#include ""square_calculation.h""

double CalcSquare(double width, double height) {
    return width * height;
}
***************************************************************************************************************************************

square_calculation.h

double CalcSquare(double width, double height);
***************************************************************************************************************************************

wall.cpp

#include ""wall.h""

Wall::Wall(double width, double height)
        : width_(width), height_(height), color_(Color::WHITE)
{
}

double Wall::GetHeight() const {
    return height_;
}
double Wall::GetWidth() const {
    return width_;
}
void Wall::SetColor(Color color) {
    color_ = color;
}
Wall::Color Wall::GetColor() const {
    return color_;
}
***************************************************************************************************************************************

wall.h

class Wall {
public:
    enum class Color {
        BLUE,
        GREEN,
        RED,
        WHITE,
        YELLOW
    };

    Wall(double width, double height);

    double GetHeight() const;
    double GetWidth() const;
    void SetColor(Color color);
    Color GetColor() const;

private:
    double width_;
    double height_;
    Color color_;
};
"
7zTyhK6u,mp1-part1,maruma,C,Sunday 10th of March 2024 11:36:28 AM CDT,"#include ""kernel/types.h""
#include ""user/setjmp.h""
#include ""user/threads.h""
#include ""user/user.h""
#define NULL 0

static struct thread* current_thread = NULL;
static int id = 1;
static jmp_buf env_st;
static int main_jmped = 0; 
// static jmp_buf env_tmp;
//static int count = 0;
struct thread *thread_create(void (*f)(void *), void *arg){
    struct thread *t = (struct thread*) malloc(sizeof(struct thread));
    unsigned long new_stack_p;
    unsigned long new_stack;
    new_stack = (unsigned long) malloc(sizeof(unsigned long)*0x100);
    new_stack_p = new_stack +0x100*8-0x2*8;
    t->fp = f;
    t->arg = arg;
    t->ID  = id;
    id++;
    t->buf_set = 0;
    t->stack = (void*) new_stack;
    t->stack_p = (void*) new_stack_p;
    return t;
}
void thread_add_runqueue(struct thread *t){
    if(current_thread == NULL){
        current_thread = t;
        current_thread -> next = current_thread;
        current_thread -> previous = current_thread;
    }
    else{
        current_thread -> previous -> next = t;
        t -> previous = current_thread -> previous;
        t -> next = current_thread;
        current_thread -> previous = t; 
    }
}
void thread_yield(void){
    //printf(""yeild!"");
    printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
    //current_thread -> env -> sp = (unsigned long) current_thread -> stack_p;
    printf(""middle: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
    current_thread -> buf_set = !setjmp(current_thread -> env);                           
    if(current_thread -> buf_set){ 
        printf(""after: thread %d: %lu\n======================================\n"", current_thread -> ID, current_thread -> env -> sp);
        //current_thread -> stack_p = (void *)current_thread -> env -> sp;
        schedule();/*
        count++;
        if(count == 6)
            exit(0);*/
        dispatch();                                                         
    }   
}
void dispatch(void){
    // TODO
    if(current_thread -> buf_set){/*
        printf(""======================================\nset!\n"");
        printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        printf(""dispatching Buf_set %d!\n"", current_thread -> ID);
        current_thread -> env -> sp = (unsigned long)current_thread -> stack_p;
        printf(""after: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);*/
        longjmp(current_thread -> env, 1); 
    }
    else{
        printf(""======================================\n"");
        printf(""before: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        current_thread -> env -> sp = (unsigned long) current_thread -> stack_p;
        printf(""after: thread %d: %lu\n"", current_thread -> ID, current_thread -> env -> sp);
        current_thread -> buf_set = !setjmp(current_thread -> env); 
        if(current_thread -> buf_set){
            (current_thread -> fp)(current_thread -> arg);
        }
    }
    thread_exit();
}
void schedule(void){
    current_thread = current_thread -> next;
    //printf(""schedule to %d!\n"", current_thread -> ID);
}
void thread_exit(void){
    //printf(""exiting?!\n"");
    if(current_thread->next != current_thread){
        struct thread* tmp = current_thread;
        current_thread = current_thread -> next;
        free(current_thread -> stack);
        free(tmp);
        dispatch();
    }
    else{
        // TODO
        // Hint: No more thread to execute
        longjmp(env_st, 1);
    }
}
void thread_start_threading(void){
    // TODO
    main_jmped = ! setjmp(env_st);
    if(main_jmped){
        //longjmp(env_st, 1);
        dispatch();
    }
}

// part 2
void thread_assign_task(struct thread *t, void (*f)(void *), void *arg){
    // TODO
}
"
fCu3Ji6n,Claude 3 Issue,xbsd,Python,Sunday 10th of March 2024 11:29:34 AM CDT,"import anthropic

client = anthropic.Anthropic(
    # defaults to os.environ.get(""ANTHROPIC_API_KEY"")
    api_key=os.environ[""ANTHROPIC_API_KEY""],
)


def create_anthropic_message(system_prompt, user_prompt, anthropic_model = ""claude-3-opus-20240229"", 
                             max_tokens = 200, temperature = 1, **kwargs):
    message = client.messages.create(
        model=anthropic_model,
        max_tokens=max_tokens,
        temperature=temperature,
        system=system_prompt,
        # Also include any other arguments in the def function kwargs
        **kwargs,
        messages=[{""role"": ""user"",""content"": [{""type"": ""text"",""text"": user_prompt}]}])
    return (message)

for i in range(20):
  try:
    r = create_anthropic_message(""You are an oncology expert"",""Compose a brief 1-sentence presentation of a US-based patient presenting with Skin Cancer."")
    print(r.content[0])
  except Exception as error:
    # handle the exception
    print(""An exception occurred:"", error)
    
# Results with Temperature 0
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of excessive sun exposure presents with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black pigmented lesion on his left upper back.', type='text')


# Results with Temperature 1
ContentBlock(text='A 62-year-old Caucasian male from Florida presented with a rapidly growing, asymmetric, irregularly bordered, 8mm diameter, dark brown to black lesion on his left upper back that had changed in size and color over the past 3 months.', type='text')
ContentBlock(text='A 45-year-old fair-skinned female from Florida presents with a slowly growing, asymmetric, irregularly bordered, multicolored, 8mm diameter mole on her left forearm that has recently started to itch and bleed.', type='text')
ContentBlock(text='A 45-year-old Caucasian male construction worker from Florida presented with a rapidly growing, irregularly bordered, darkly pigmented lesion on his left shoulder that had changed in size and color over the past 3 months.', type='text')
ContentBlock(text='A 62-year-old Caucasian male with a history of extensive sun exposure presents with a rapidly growing, irregularly bordered, and multicolored lesion on his left forearm, suspicious for melanoma.', type='text')
"
CxT4dhMH,Arduino Analog Read,enrico1998,C++,Sunday 10th of March 2024 11:23:07 AM CDT,"int nilai_ldr;    // Mendefinisikan variabel untuk menyimpan nilai bacaan LDR

void setup() {
  Serial.begin(9600); // Memulai komunikasi serial untuk melihat nilai LDR di Serial Monitor
}

void loop() {
  nilai_ldr = analogRead(A0); // Membaca nilai dari LDR
  Serial.println(nilai_ldr);  // Menampilkan nilai di Serial Monitor
  delay(500);                 // Menunda selama 0,5 detik
}
"
n5nw2aA0,5. Print DNA,alexandaryordanov,JavaScript,Sunday 10th of March 2024 11:22:15 AM CDT,"function solve(number) {
    let sequence = [""A"", ""T"", ""C"", ""G"", ""T"", ""T"", ""A"", ""G"", ""G"", ""G""]
    let asterixSequence = [2, 1, 0, 1]
    let minusSequence = [0, 2, 4, 2]
    for (let i = 1; i <= number; i++) {
        let row = ""*"".repeat(asterixSequence[0]) + sequence[0] + ""-"".repeat(minusSequence[0]) + sequence[1] + ""*"".repeat(asterixSequence[0])
        console.log(row);
        sequence.push(sequence.shift());
        sequence.push(sequence.shift());
        asterixSequence.push(asterixSequence.shift())
        minusSequence.push(minusSequence.shift())
    }
}
"
rnkt5yme,СПРИНТ № 5 | Распределение кода по файлам | Урок 4: Заголовочные файлы и файлы с реализацией 1/2,chevengur,C++,Sunday 10th of March 2024 11:16:12 AM CDT,"wall.cpp

#include ""wall.h""

Wall::Wall(double width, double height)
    : width_(width)
    , height_(height)
    , color_(Color::WHITE) {
}
double Wall::GetHeight() const
{
    return height_;
}

double Wall::GetWidth() const
{
    return width_;
}

void Wall::SetColor(Color color)
{
    color_ = color;
}

Wall::Color Wall::GetColor() const
{
    return color_;
}

***************************************************************************************************************************************

wall.h

class Wall {
public:
    enum class Color { BLUE, GREEN, RED, WHITE, YELLOW };

    Wall(double width, double height);

    double GetHeight() const;
    double GetWidth() const;
    void SetColor(Color color);
    Color GetColor() const;

private:
    double width_;
    double height_;
    Color color_;
};
"
5DEnkrDz,arduino basic,enrico1998,C++,Sunday 10th of March 2024 11:10:47 AM CDT,"void setup() {
  // coding di sini akan dijalankan sekali saat Arduino pertama kali dinyalakan
}

void loop() {
  // coding di sini akan dijalankan berulang-ulang selama Arduino tetap dinyalakan
}
"
GXVXmD4v,Delta X Keyless UI SOURCE,Artani,Lua,Sunday 10th of March 2024 10:44:42 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/NathTheDev/Project/main/Delta_X""))()
DELTA X KEYLESS UI SOURCE"
e2fMRJ4e,CODEX EXECUTOR UI SOURCE KEYLESS,Artani,Lua,Sunday 10th of March 2024 10:44:10 AM CDT,"Codex Executor UI Source Keyless
loadstring(game:HttpGet(""https://raw.githubusercontent.com/NathTheDev/Project/main/Codex""))()"
dkEZhwuG,Nigerian scammers [10-3-1/2024],bombaires,AIMMS,Sunday 10th of March 2024 10:27:43 AM CDT,"<a href=""mailto:anpc@africamail.com"">anpc@africamail.com</a>
<a href=""mailto:oftc@collector.org"">oftc@collector.org</a>
<a href=""mailto:UFCU@dr.com"">UFCU@dr.com</a>
<a href=""mailto:mrjamesknight32@gmail.com"">mrjamesknight32@gmail.com</a>
<a href=""mailto:m.rjame.s.kn.ight.32@gmail.com"">m.rjame.s.kn.ight.32@gmail.com</a>
<a href=""mailto:m.r.jame.skni.g.h.t32@gmail.com"">m.r.jame.skni.g.h.t32@gmail.com</a>
<a href=""mailto:mr.ja.meskn.i.gh.t.32@gmail.com"">mr.ja.meskn.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.meskni.gh.t32@gmail.com"">m.r.j.a.meskni.gh.t32@gmail.com</a>
<a href=""mailto:m.rjam.eskn.i.ght.3.2@gmail.com"">m.rjam.eskn.i.ght.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.eskn.i.gh.t3.2@gmail.com"">mr.ja.m.eskn.i.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.s.k.ni.g.h.t3.2@gmail.com"">m.rj.ame.s.k.ni.g.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.ja.me.s.k.night3.2@gmail.com"">m.r.ja.me.s.k.night3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.kni.g.ht32@gmail.com"">m.r.ja.mes.kni.g.ht32@gmail.com</a>
<a href=""mailto:mr.jam.es.k.n.i.g.h.t.32@gmail.com"">mr.jam.es.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrj.a.mes.k.n.ight.32@gmail.com"">mrj.a.mes.k.n.ight.32@gmail.com</a>
<a href=""mailto:m.rj.a.mes.k.n.i.g.h.t.32@gmail.com"">m.rj.a.mes.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.jame.s.k.nigh.t32@gmail.com"">m.r.jame.s.k.nigh.t32@gmail.com</a>
<a href=""mailto:m.rj.a.me.s.kn.i.gh.t32@gmail.com"">m.rj.a.me.s.kn.i.gh.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.kn.i.ght.3.2@gmail.com"">mrj.ame.s.kn.i.ght.3.2@gmail.com</a>
<a href=""mailto:mrjame.s.kn.i.ght3.2@gmail.com"">mrjame.s.kn.i.ght3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.esk.nig.ht3.2@gmail.com"">mrj.a.m.esk.nig.ht3.2@gmail.com</a>
<a href=""mailto:mr.ja.meskn.ig.h.t3.2@gmail.com"">mr.ja.meskn.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.eskn.i.ght32@gmail.com"">mr.j.am.eskn.i.ght32@gmail.com</a>
<a href=""mailto:mrjame.skni.gh.t.32@gmail.com"">mrjame.skni.gh.t.32@gmail.com</a>
<a href=""mailto:mrj.ame.sk.n.i.g.ht.3.2@gmail.com"">mrj.ame.sk.n.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:mr.j.ame.s.kn.i.g.ht.32@gmail.com"">mr.j.ame.s.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:mrj.amesk.night3.2@gmail.com"">mrj.amesk.night3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.sk.n.ight3.2@gmail.com"">mrj.am.e.sk.n.ight3.2@gmail.com</a>
<a href=""mailto:m.rja.meskni.ght32@gmail.com"">m.rja.meskni.ght32@gmail.com</a>
<a href=""mailto:m.rjam.e.s.knig.h.t3.2@gmail.com"">m.rjam.e.s.knig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.jam.esk.n.ig.ht.3.2@gmail.com"">m.r.jam.esk.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:mrja.m.es.k.night.32@gmail.com"">mrja.m.es.k.night.32@gmail.com</a>
<a href=""mailto:mrjam.esknig.h.t3.2@gmail.com"">mrjam.esknig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.j.ames.kn.i.g.h.t32@gmail.com"">m.r.j.ames.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.k.nig.h.t3.2@gmail.com"">mrj.ame.s.k.nig.h.t3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.k.night.3.2@gmail.com"">mrj.a.m.es.k.night.3.2@gmail.com</a>
<a href=""mailto:mrj.a.me.sk.n.igh.t.32@gmail.com"">mrj.a.me.sk.n.igh.t.32@gmail.com</a>
<a href=""mailto:mr.jam.e.skn.i.gh.t.3.2@gmail.com"">mr.jam.e.skn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.rjam.e.sknight.32@gmail.com"">m.rjam.e.sknight.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.es.kni.g.h.t.3.2@gmail.com"">m.r.j.a.m.es.kni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.mesk.ni.gh.t.32@gmail.com"">mr.ja.mesk.ni.gh.t.32@gmail.com</a>
<a href=""mailto:mrjame.sk.n.i.gh.t.32@gmail.com"">mrjame.sk.n.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjame.skni.ght32@gmail.com"">m.rjame.skni.ght32@gmail.com</a>
<a href=""mailto:mr.ja.mesk.n.i.gh.t.32@gmail.com"">mr.ja.mesk.n.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.sk.nig.h.t3.2@gmail.com"">m.r.j.a.me.sk.nig.h.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mesknig.h.t3.2@gmail.com"">m.rja.mesknig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.a.mes.knig.h.t.3.2@gmail.com"">mr.j.a.mes.knig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.i.ght32@gmail.com"">m.r.j.ame.skn.i.ght32@gmail.com</a>
<a href=""mailto:mrj.am.es.kn.i.gh.t.3.2@gmail.com"">mrj.am.es.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.mesk.n.ig.h.t.32@gmail.com"">mr.ja.mesk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.skni.gh.t32@gmail.com"">m.r.j.am.e.skni.gh.t32@gmail.com</a>
<a href=""mailto:mr.jame.s.k.ni.ght3.2@gmail.com"">mr.jame.s.k.ni.ght3.2@gmail.com</a>
<a href=""mailto:mr.j.a.me.skn.i.g.h.t.3.2@gmail.com"">mr.j.a.me.skn.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.a.m.es.k.ni.g.h.t32@gmail.com"">m.r.j.a.m.es.k.ni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.esk.ni.g.h.t.32@gmail.com"">m.rj.a.m.esk.ni.g.h.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.m.eskn.i.ght3.2@gmail.com"">mr.j.a.m.eskn.i.ght3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.sknig.ht32@gmail.com"">mrj.am.e.sknig.ht32@gmail.com</a>
<a href=""mailto:mr.j.amesk.n.igh.t.3.2@gmail.com"">mr.j.amesk.n.igh.t.3.2@gmail.com</a>
<a href=""mailto:mrja.m.e.sknigh.t.3.2@gmail.com"">mrja.m.e.sknigh.t.3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.ig.h.t.32@gmail.com"">mrj.a.m.es.kn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mrjames.kni.gh.t.3.2@gmail.com"">mrjames.kni.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrjame.sk.ni.ght32@gmail.com"">mrjame.sk.ni.ght32@gmail.com</a>
<a href=""mailto:m.r.j.a.mes.k.nig.h.t.3.2@gmail.com"">m.r.j.a.mes.k.nig.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.esknig.ht32@gmail.com"">mr.ja.m.esknig.ht32@gmail.com</a>
<a href=""mailto:mr.ja.m.es.knig.h.t.32@gmail.com"">mr.ja.m.es.knig.h.t.32@gmail.com</a>
<a href=""mailto:mrj.a.m.e.s.k.ni.g.ht3.2@gmail.com"">mrj.a.m.e.s.k.ni.g.ht3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.nig.h.t.32@gmail.com"">m.r.ja.mes.k.nig.h.t.32@gmail.com</a>
<a href=""mailto:mr.ja.m.es.kn.i.g.h.t32@gmail.com"">mr.ja.m.es.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.kn.i.g.ht.32@gmail.com"">mrja.m.e.s.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:mr.jame.s.k.ni.g.h.t3.2@gmail.com"">mr.jame.s.k.ni.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrja.m.e.skn.i.ght32@gmail.com"">mrja.m.e.skn.i.ght32@gmail.com</a>
<a href=""mailto:m.rja.m.e.skni.gh.t.32@gmail.com"">m.rja.m.e.skni.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjam.es.kni.g.ht.32@gmail.com"">m.rjam.es.kni.g.ht.32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.kn.i.g.h.t.32@gmail.com"">mrja.m.e.s.kn.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.rj.a.m.e.s.kni.g.ht3.2@gmail.com"">m.rj.a.m.e.s.kni.g.ht3.2@gmail.com</a>
<a href=""mailto:mr.j.ames.kn.i.g.h.t3.2@gmail.com"">mr.j.ames.kn.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:m.rj.ames.kni.gh.t3.2@gmail.com"">m.rj.ames.kni.gh.t3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.n.ig.h.t3.2@gmail.com"">m.r.ja.mes.k.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.jam.esk.n.i.gh.t3.2@gmail.com"">mr.jam.esk.n.i.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mes.kn.i.ght.3.2@gmail.com"">m.rja.mes.kn.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.r.ja.me.s.k.nig.ht.32@gmail.com"">m.r.ja.me.s.k.nig.ht.32@gmail.com</a>
<a href=""mailto:m.r.jam.esk.ni.gh.t32@gmail.com"">m.r.jam.esk.ni.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.mes.k.n.ig.h.t3.2@gmail.com"">mr.ja.mes.k.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.e.s.kni.gh.t.32@gmail.com"">mr.j.am.e.s.kni.gh.t.32@gmail.com</a>
<a href=""mailto:mr.ja.meskn.igh.t3.2@gmail.com"">mr.ja.meskn.igh.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.e.sk.n.i.gh.t.3.2@gmail.com"">mr.j.am.e.sk.n.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.k.n.i.g.h.t3.2@gmail.com"">mrj.am.e.s.k.n.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.i.gh.t.3.2@gmail.com"">mrj.a.m.es.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.esk.n.i.g.h.t.32@gmail.com"">mr.ja.m.esk.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.esk.n.i.ght32@gmail.com"">m.r.j.a.m.esk.n.i.ght32@gmail.com</a>
<a href=""mailto:m.rj.a.me.s.k.n.i.g.h.t.32@gmail.com"">m.rj.a.me.s.k.n.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrjam.e.s.kn.ig.h.t.32@gmail.com"">mrjam.e.s.kn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mrjames.kn.ig.ht3.2@gmail.com"">mrjames.kn.ig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.j.am.esk.n.ig.h.t.32@gmail.com"">m.r.j.am.esk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.esk.n.ig.ht.3.2@gmail.com"">m.r.j.a.m.esk.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:mrj.a.mes.knig.ht3.2@gmail.com"">mrj.a.mes.knig.ht3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.s.k.n.ig.h.t.3.2@gmail.com"">m.rj.ame.s.k.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.amesk.n.igh.t.32@gmail.com"">m.rj.amesk.n.igh.t.32@gmail.com</a>
<a href=""mailto:m.r.jamesk.ni.g.h.t.3.2@gmail.com"">m.r.jamesk.ni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mrja.mes.k.n.ight.32@gmail.com"">mrja.mes.k.n.ight.32@gmail.com</a>
<a href=""mailto:m.rja.mesk.n.igh.t32@gmail.com"">m.rja.mesk.n.igh.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.k.n.i.gh.t32@gmail.com"">m.r.ja.m.e.s.k.n.i.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.m.e.skn.igh.t3.2@gmail.com"">mr.ja.m.e.skn.igh.t3.2@gmail.com</a>
<a href=""mailto:m.r.jame.sk.ni.gh.t32@gmail.com"">m.r.jame.sk.ni.gh.t32@gmail.com</a>
<a href=""mailto:mrj.a.m.es.kn.i.g.h.t32@gmail.com"">mrj.a.m.es.kn.i.g.h.t32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.eskn.i.gh.t.3.2@gmail.com"">m.r.j.a.m.eskn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrjam.es.k.n.i.g.ht32@gmail.com"">mrjam.es.k.n.i.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.s.k.n.igh.t32@gmail.com"">m.r.j.am.e.s.k.n.igh.t32@gmail.com</a>
<a href=""mailto:mr.jam.es.kn.i.g.ht.32@gmail.com"">mr.jam.es.kn.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.am.eskni.g.ht32@gmail.com"">m.r.j.am.eskni.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.amesk.nig.h.t.32@gmail.com"">m.r.j.amesk.nig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.n.igh.t32@gmail.com"">m.r.j.a.me.s.k.n.igh.t32@gmail.com</a>
<a href=""mailto:m.r.j.am.es.kni.gh.t3.2@gmail.com"">m.r.j.am.es.kni.gh.t3.2@gmail.com</a>
<a href=""mailto:mrja.mes.k.n.ig.ht.32@gmail.com"">mrja.mes.k.n.ig.ht.32@gmail.com</a>
<a href=""mailto:m.rja.m.e.s.kni.g.ht32@gmail.com"">m.rja.m.e.s.kni.g.ht32@gmail.com</a>
<a href=""mailto:m.r.j.a.mes.k.n.i.ght.3.2@gmail.com"">m.r.j.a.mes.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.rj.ame.sk.n.ig.h.t.32@gmail.com"">m.rj.ame.sk.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.james.kni.gh.t.3.2@gmail.com"">m.r.james.kni.gh.t.3.2@gmail.com</a>
<a href=""mailto:mrja.m.eskni.ght3.2@gmail.com"">mrja.m.eskni.ght3.2@gmail.com</a>
<a href=""mailto:m.rj.a.me.skn.i.gh.t32@gmail.com"">m.rj.a.me.skn.i.gh.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.es.k.ni.g.ht.32@gmail.com"">m.r.ja.m.es.k.ni.g.ht.32@gmail.com</a>
<a href=""mailto:mrjam.e.s.k.n.i.ght.3.2@gmail.com"">mrjam.e.s.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:mrj.a.mes.k.ni.gh.t.32@gmail.com"">mrj.a.mes.k.ni.gh.t.32@gmail.com</a>
<a href=""mailto:m.rjam.eskni.gh.t.3.2@gmail.com"">m.rjam.eskni.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.amesk.n.i.g.h.t.3.2@gmail.com"">m.rj.amesk.n.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ames.kn.i.g.h.t.3.2@gmail.com"">m.r.j.ames.kn.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mr.j.am.es.knig.ht.32@gmail.com"">mr.j.am.es.knig.ht.32@gmail.com</a>
<a href=""mailto:m.rjam.eskn.i.g.h.t3.2@gmail.com"">m.rjam.eskn.i.g.h.t3.2@gmail.com</a>
<a href=""mailto:mrja.m.esk.ni.ght.3.2@gmail.com"">mrja.m.esk.ni.ght.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.s.k.n.ig.h.t32@gmail.com"">m.r.j.ame.s.k.n.ig.h.t32@gmail.com</a>
<a href=""mailto:mrja.m.e.sk.n.i.ght.3.2@gmail.com"">mrja.m.e.sk.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:m.rj.ames.k.n.ig.ht.32@gmail.com"">m.rj.ames.k.n.ig.ht.32@gmail.com</a>
<a href=""mailto:mr.j.am.es.knigh.t.32@gmail.com"">mr.j.am.es.knigh.t.32@gmail.com</a>
<a href=""mailto:mr.ja.mesk.ni.ght3.2@gmail.com"">mr.ja.mesk.ni.ght3.2@gmail.com</a>
<a href=""mailto:mrj.a.me.s.k.night.3.2@gmail.com"">mrj.a.me.s.k.night.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.kn.ight.3.2@gmail.com"">mrj.am.e.s.kn.ight.3.2@gmail.com</a>
<a href=""mailto:mr.j.amesk.n.ig.h.t.3.2@gmail.com"">mr.j.amesk.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.am.esk.ni.gh.t3.2@gmail.com"">m.r.j.am.esk.ni.gh.t3.2@gmail.com</a>
<a href=""mailto:m.rj.am.e.s.kn.i.g.ht.3.2@gmail.com"">m.rj.am.e.s.kn.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.ni.ght3.2@gmail.com"">m.r.j.a.me.s.k.ni.ght3.2@gmail.com</a>
<a href=""mailto:mr.jam.e.skn.i.g.h.t32@gmail.com"">mr.jam.e.skn.i.g.h.t32@gmail.com</a>
<a href=""mailto:mrj.ame.s.knigh.t32@gmail.com"">mrj.ame.s.knigh.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.k.n.i.gh.t.3.2@gmail.com"">m.rj.a.m.es.k.n.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:mr.ja.m.e.skni.g.h.t32@gmail.com"">mr.ja.m.e.skni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rjame.skn.ig.h.t.32@gmail.com"">m.rjame.skn.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.rja.m.es.knig.h.t.32@gmail.com"">m.rja.m.es.knig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.knight32@gmail.com"">m.r.j.a.me.s.knight32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.kn.i.gh.t.3.2@gmail.com"">m.r.ja.m.e.s.kn.i.gh.t.3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.s.kn.i.ght.32@gmail.com"">m.r.j.ame.s.kn.i.ght.32@gmail.com</a>
<a href=""mailto:m.rjameskn.i.ght32@gmail.com"">m.rjameskn.i.ght32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.kn.i.ght3.2@gmail.com"">m.rj.a.m.es.kn.i.ght3.2@gmail.com</a>
<a href=""mailto:m.r.jam.e.s.k.n.i.g.ht.32@gmail.com"">m.r.jam.e.s.k.n.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.nig.ht.3.2@gmail.com"">m.r.j.ames.k.nig.ht.3.2@gmail.com</a>
<a href=""mailto:mr.j.am.esk.ni.ght.3.2@gmail.com"">mr.j.am.esk.ni.ght.3.2@gmail.com</a>
<a href=""mailto:mrj.a.m.e.s.kn.i.g.h.t.32@gmail.com"">mrj.a.m.e.s.kn.i.g.h.t.32@gmail.com</a>
<a href=""mailto:mrja.m.e.s.k.n.ig.h.t.32@gmail.com"">mrja.m.e.s.k.n.ig.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.es.knig.ht.32@gmail.com"">m.r.j.am.es.knig.ht.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.ni.g.h.t32@gmail.com"">m.r.j.ames.k.ni.g.h.t32@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.ig.ht.3.2@gmail.com"">m.r.j.ame.skn.ig.ht.3.2@gmail.com</a>
<a href=""mailto:m.rja.m.es.knigh.t32@gmail.com"">m.rja.m.es.knigh.t32@gmail.com</a>
<a href=""mailto:m.rj.am.e.sk.night.3.2@gmail.com"">m.rj.am.e.sk.night.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.s.k.nigh.t32@gmail.com"">mrj.am.e.s.k.nigh.t32@gmail.com</a>
<a href=""mailto:m.r.james.k.nig.h.t3.2@gmail.com"">m.r.james.k.nig.h.t3.2@gmail.com</a>
<a href=""mailto:m.rja.mes.k.n.ig.h.t.3.2@gmail.com"">m.rja.mes.k.n.ig.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.a.mes.kn.i.g.ht.3.2@gmail.com"">m.rj.a.mes.kn.i.g.ht.3.2@gmail.com</a>
<a href=""mailto:mr.jame.s.k.n.i.ght.3.2@gmail.com"">mr.jame.s.k.n.i.ght.3.2@gmail.com</a>
<a href=""mailto:mr.j.a.me.s.k.nig.ht3.2@gmail.com"">mr.j.a.me.s.k.nig.ht3.2@gmail.com</a>
<a href=""mailto:mrja.m.esk.n.i.ght.32@gmail.com"">mrja.m.esk.n.i.ght.32@gmail.com</a>
<a href=""mailto:m.rjam.esk.n.i.g.h.t32@gmail.com"">m.rjam.esk.n.i.g.h.t32@gmail.com</a>
<a href=""mailto:m.rjamesk.ni.g.h.t.3.2@gmail.com"">m.rjamesk.ni.g.h.t.3.2@gmail.com</a>
<a href=""mailto:m.rj.a.me.skn.i.g.ht.32@gmail.com"">m.rj.a.me.skn.i.g.ht.32@gmail.com</a>
<a href=""mailto:m.rj.am.es.kn.i.gh.t.32@gmail.com"">m.rj.am.es.kn.i.gh.t.32@gmail.com</a>
<a href=""mailto:m.r.j.a.me.s.k.nig.h.t.32@gmail.com"">m.r.j.a.me.s.k.nig.h.t.32@gmail.com</a>
<a href=""mailto:m.rja.m.e.sk.ni.g.ht.3.2@gmail.com"">m.rja.m.e.sk.ni.g.ht.3.2@gmail.com</a>
<a href=""mailto:mrj.am.e.skni.g.ht32@gmail.com"">mrj.am.e.skni.g.ht32@gmail.com</a>
<a href=""mailto:mr.jam.e.s.k.n.ight32@gmail.com"">mr.jam.e.s.k.n.ight32@gmail.com</a>
<a href=""mailto:m.r.j.a.m.e.s.k.n.i.g.h.t.3.2@gmail.com"">m.r.j.a.m.e.s.k.n.i.g.h.t.3.2@gmail.com</a>
<a href=""mailto:mrjame.s.knig.ht3.2@gmail.com"">mrjame.s.knig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skn.ig.ht32@gmail.com"">m.r.j.ame.skn.ig.ht32@gmail.com</a>
<a href=""mailto:m.rjam.esk.n.i.g.ht.32@gmail.com"">m.rjam.esk.n.i.g.ht.32@gmail.com</a>
<a href=""mailto:mr.jamesknig.ht3.2@gmail.com"">mr.jamesknig.ht3.2@gmail.com</a>
<a href=""mailto:m.r.ja.mes.k.n.i.ght3.2@gmail.com"">m.r.ja.mes.k.n.i.ght3.2@gmail.com</a>
<a href=""mailto:m.rj.a.meskn.ig.ht32@gmail.com"">m.rj.a.meskn.ig.ht32@gmail.com</a>
<a href=""mailto:m.r.ja.mesk.ni.ght3.2@gmail.com"">m.r.ja.mesk.ni.ght3.2@gmail.com</a>
<a href=""mailto:mrjame.s.k.n.ig.ht.3.2@gmail.com"">mrjame.s.k.n.ig.ht.3.2@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.skn.ig.h.t.32@gmail.com"">m.r.ja.m.e.skn.ig.h.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.mesk.n.ig.h.t3.2@gmail.com"">mr.j.a.mesk.n.ig.h.t3.2@gmail.com</a>
<a href=""mailto:m.r.j.ame.skni.g.h.t32@gmail.com"">m.r.j.ame.skni.g.h.t32@gmail.com</a>
<a href=""mailto:m.rj.a.m.es.kn.ig.ht.32@gmail.com"">m.rj.a.m.es.kn.ig.ht.32@gmail.com</a>
<a href=""mailto:m.r.ja.mes.kn.igh.t.32@gmail.com"">m.r.ja.mes.kn.igh.t.32@gmail.com</a>
<a href=""mailto:mr.j.a.me.s.k.n.ig.h.t32@gmail.com"">mr.j.a.me.s.k.n.ig.h.t32@gmail.com</a>
<a href=""mailto:mrj.ameskn.ight.3.2@gmail.com"">mrj.ameskn.ight.3.2@gmail.com</a>
<a href=""mailto:mr.jam.es.knight32@gmail.com"">mr.jam.es.knight32@gmail.com</a>
<a href=""mailto:m.r.jame.skn.i.ght32@gmail.com"">m.r.jame.skn.i.ght32@gmail.com</a>
<a href=""mailto:m.rjam.e.s.k.ni.g.ht.32@gmail.com"">m.rjam.e.s.k.ni.g.ht.32@gmail.com</a>
<a href=""mailto:mrj.ame.s.knig.h.t32@gmail.com"">mrj.ame.s.knig.h.t32@gmail.com</a>
<a href=""mailto:m.r.ja.m.e.s.k.n.ight32@gmail.com"">m.r.ja.m.e.s.k.n.ight32@gmail.com</a>
<a href=""mailto:mrj.a.m.e.sknigh.t.32@gmail.com"">mrj.a.m.e.sknigh.t.32@gmail.com</a>
<a href=""mailto:mrja.me.s.knight.3.2@gmail.com"">mrja.me.s.knight.3.2@gmail.com</a>
<a href=""mailto:m.r.jame.s.kn.igh.t3.2@gmail.com"">m.r.jame.s.kn.igh.t3.2@gmail.com</a>
<a href=""mailto:mr.j.am.es.k.ni.g.h.t.32@gmail.com"">mr.j.am.es.k.ni.g.h.t.32@gmail.com</a>
<a href=""mailto:m.r.j.am.e.s.kni.ght.32@gmail.com"">m.r.j.am.e.s.kni.ght.32@gmail.com</a>
<a href=""mailto:m.r.j.ames.k.n.i.gh.t32@gmail.com"">m.r.j.ames.k.n.i.gh.t32@gmail.com</a>
<a href=""mailto:mr.ja.me.s.kni.g.ht.32@gmail.com"">mr.ja.me.s.kni.g.ht.32@gmail.com</a>
<a href=""mailto:bkjp32252@gmail.com"">bkjp32252@gmail.com</a>
<a href=""mailto:bk.jp.32.252@gmail.com"">bk.jp.32.252@gmail.com</a>
<a href=""mailto:bk.jp.3.2.25.2@gmail.com"">bk.jp.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp.32252@gmail.com"">b.k.jp.32252@gmail.com</a>
<a href=""mailto:bkj.p.32.2.52@gmail.com"">bkj.p.32.2.52@gmail.com</a>
<a href=""mailto:bk.jp32.2.52@gmail.com"">bk.jp32.2.52@gmail.com</a>
<a href=""mailto:bk.j.p3.2.2.52@gmail.com"">bk.j.p3.2.2.52@gmail.com</a>
<a href=""mailto:b.kjp32.2.5.2@gmail.com"">b.kjp32.2.5.2@gmail.com</a>
<a href=""mailto:bkjp3.22.5.2@gmail.com"">bkjp3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.32252@gmail.com"">bk.j.p.32252@gmail.com</a>
<a href=""mailto:bk.j.p32.252@gmail.com"">bk.j.p32.252@gmail.com</a>
<a href=""mailto:bk.j.p32252@gmail.com"">bk.j.p32252@gmail.com</a>
<a href=""mailto:b.kjp.3225.2@gmail.com"">b.kjp.3225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.2.2.52@gmail.com"">bk.jp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32.2.5.2@gmail.com"">b.kj.p32.2.5.2@gmail.com</a>
<a href=""mailto:b.kjp32252@gmail.com"">b.kjp32252@gmail.com</a>
<a href=""mailto:bk.j.p3.2.25.2@gmail.com"">bk.j.p3.2.25.2@gmail.com</a>
<a href=""mailto:bk.jp.32.2.52@gmail.com"">bk.jp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2252@gmail.com"">b.k.j.p.3.2252@gmail.com</a>
<a href=""mailto:b.kj.p3.22.5.2@gmail.com"">b.kj.p3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p32.25.2@gmail.com"">bk.j.p32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.225.2@gmail.com"">b.kj.p.3.225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.2.252@gmail.com"">bk.jp.3.2.252@gmail.com</a>
<a href=""mailto:b.kjp3.2.252@gmail.com"">b.kjp3.2.252@gmail.com</a>
<a href=""mailto:bk.j.p3.225.2@gmail.com"">bk.j.p3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p3.22.5.2@gmail.com"">bk.j.p3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.22.52@gmail.com"">b.kjp3.22.52@gmail.com</a>
<a href=""mailto:bkjp32.252@gmail.com"">bkjp32.252@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.25.2@gmail.com"">bk.j.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.j.p.322.5.2@gmail.com"">b.k.j.p.322.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p322.52@gmail.com"">b.k.j.p322.52@gmail.com</a>
<a href=""mailto:b.k.j.p.32.2.5.2@gmail.com"">b.k.j.p.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp3.2252@gmail.com"">b.k.jp3.2252@gmail.com</a>
<a href=""mailto:b.k.j.p.32252@gmail.com"">b.k.j.p.32252@gmail.com</a>
<a href=""mailto:b.k.j.p.32.25.2@gmail.com"">b.k.j.p.32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.32.2.52@gmail.com"">b.kj.p.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p32252@gmail.com"">b.k.j.p32252@gmail.com</a>
<a href=""mailto:bkj.p3.225.2@gmail.com"">bkj.p3.225.2@gmail.com</a>
<a href=""mailto:bkjp.32.25.2@gmail.com"">bkjp.32.25.2@gmail.com</a>
<a href=""mailto:b.kjp.32252@gmail.com"">b.kjp.32252@gmail.com</a>
<a href=""mailto:b.kjp32.252@gmail.com"">b.kjp32.252@gmail.com</a>
<a href=""mailto:b.k.jp.3.2.2.52@gmail.com"">b.k.jp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.322.5.2@gmail.com"">b.k.jp.322.5.2@gmail.com</a>
<a href=""mailto:bkjp3.2.252@gmail.com"">bkjp3.2.252@gmail.com</a>
<a href=""mailto:bk.j.p3.2.2.5.2@gmail.com"">bk.j.p3.2.2.5.2@gmail.com</a>
<a href=""mailto:bkjp3.22.52@gmail.com"">bkjp3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p3225.2@gmail.com"">b.kj.p3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.2.52@gmail.com"">b.k.j.p32.2.52@gmail.com</a>
<a href=""mailto:b.kjp.322.5.2@gmail.com"">b.kjp.322.5.2@gmail.com</a>
<a href=""mailto:b.kjp.32.2.5.2@gmail.com"">b.kjp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p3.225.2@gmail.com"">b.kj.p3.225.2@gmail.com</a>
<a href=""mailto:bkj.p3.22.5.2@gmail.com"">bkj.p3.22.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.32.252@gmail.com"">b.k.j.p.32.252@gmail.com</a>
<a href=""mailto:b.kj.p.322.5.2@gmail.com"">b.kj.p.322.5.2@gmail.com</a>
<a href=""mailto:b.kj.p32.25.2@gmail.com"">b.kj.p32.25.2@gmail.com</a>
<a href=""mailto:bkj.p3.2252@gmail.com"">bkj.p3.2252@gmail.com</a>
<a href=""mailto:bk.jp.3.22.5.2@gmail.com"">bk.jp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.2.2.52@gmail.com"">b.kjp3.2.2.52@gmail.com</a>
<a href=""mailto:bkjp322.5.2@gmail.com"">bkjp322.5.2@gmail.com</a>
<a href=""mailto:bk.jp32252@gmail.com"">bk.jp32252@gmail.com</a>
<a href=""mailto:b.kjp.3.225.2@gmail.com"">b.kjp.3.225.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.252@gmail.com"">b.kjp.3.2.252@gmail.com</a>
<a href=""mailto:b.k.jp32.2.5.2@gmail.com"">b.k.jp32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p3.2252@gmail.com"">b.k.j.p3.2252@gmail.com</a>
<a href=""mailto:bk.j.p.3.22.5.2@gmail.com"">bk.j.p.3.22.5.2@gmail.com</a>
<a href=""mailto:bkjp.32252@gmail.com"">bkjp.32252@gmail.com</a>
<a href=""mailto:b.kj.p3.2252@gmail.com"">b.kj.p3.2252@gmail.com</a>
<a href=""mailto:b.k.jp.3.2252@gmail.com"">b.k.jp.3.2252@gmail.com</a>
<a href=""mailto:bkj.p.322.5.2@gmail.com"">bkj.p.322.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.3225.2@gmail.com"">b.k.j.p.3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p.3.22.52@gmail.com"">b.k.j.p.3.22.52@gmail.com</a>
<a href=""mailto:bkjp3.225.2@gmail.com"">bkjp3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p.32.2.52@gmail.com"">bk.j.p.32.2.52@gmail.com</a>
<a href=""mailto:bk.jp3.22.5.2@gmail.com"">bk.jp3.22.5.2@gmail.com</a>
<a href=""mailto:bkj.p32252@gmail.com"">bkj.p32252@gmail.com</a>
<a href=""mailto:bk.j.p3.22.52@gmail.com"">bk.j.p3.22.52@gmail.com</a>
<a href=""mailto:bkjp32.25.2@gmail.com"">bkjp32.25.2@gmail.com</a>
<a href=""mailto:b.k.jp322.52@gmail.com"">b.k.jp322.52@gmail.com</a>
<a href=""mailto:b.kjp.3.2.25.2@gmail.com"">b.kjp.3.2.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2252@gmail.com"">b.kj.p.3.2252@gmail.com</a>
<a href=""mailto:bk.j.p322.5.2@gmail.com"">bk.j.p322.5.2@gmail.com</a>
<a href=""mailto:bkjp.3.2.252@gmail.com"">bkjp.3.2.252@gmail.com</a>
<a href=""mailto:bkj.p3.22.52@gmail.com"">bkj.p3.22.52@gmail.com</a>
<a href=""mailto:bk.jp3.225.2@gmail.com"">bk.jp3.225.2@gmail.com</a>
<a href=""mailto:bk.jp.3.22.52@gmail.com"">bk.jp.3.22.52@gmail.com</a>
<a href=""mailto:b.kjp.32.25.2@gmail.com"">b.kjp.32.25.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.25.2@gmail.com"">b.kj.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.kjp.3.22.5.2@gmail.com"">b.kjp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kj.p3.2.2.52@gmail.com"">b.kj.p3.2.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.32.252@gmail.com"">bk.j.p.32.252@gmail.com</a>
<a href=""mailto:bk.jp322.5.2@gmail.com"">bk.jp322.5.2@gmail.com</a>
<a href=""mailto:bkj.p32.252@gmail.com"">bkj.p32.252@gmail.com</a>
<a href=""mailto:bk.jp3.2.252@gmail.com"">bk.jp3.2.252@gmail.com</a>
<a href=""mailto:b.kjp3.2.2.5.2@gmail.com"">b.kjp3.2.2.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.2.52@gmail.com"">bk.j.p.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p.3225.2@gmail.com"">b.kj.p.3225.2@gmail.com</a>
<a href=""mailto:b.k.jp.32.2.52@gmail.com"">b.k.jp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.25.2@gmail.com"">b.k.j.p.3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.225.2@gmail.com"">b.k.jp.3.225.2@gmail.com</a>
<a href=""mailto:b.kjp3.2.25.2@gmail.com"">b.kjp3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp3.22.52@gmail.com"">b.k.jp3.22.52@gmail.com</a>
<a href=""mailto:bkjp.32.252@gmail.com"">bkjp.32.252@gmail.com</a>
<a href=""mailto:bk.jp3.2.2.52@gmail.com"">bk.jp3.2.2.52@gmail.com</a>
<a href=""mailto:b.kjp322.52@gmail.com"">b.kjp322.52@gmail.com</a>
<a href=""mailto:bkjp.32.2.5.2@gmail.com"">bkjp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.252@gmail.com"">b.k.j.p32.252@gmail.com</a>
<a href=""mailto:b.kjp322.5.2@gmail.com"">b.kjp322.5.2@gmail.com</a>
<a href=""mailto:b.kjp3.225.2@gmail.com"">b.kjp3.225.2@gmail.com</a>
<a href=""mailto:b.kj.p3.22.52@gmail.com"">b.kj.p3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p.3.22.52@gmail.com"">b.kj.p.3.22.52@gmail.com</a>
<a href=""mailto:bk.j.p322.52@gmail.com"">bk.j.p322.52@gmail.com</a>
<a href=""mailto:bk.j.p.3.2252@gmail.com"">bk.j.p.3.2252@gmail.com</a>
<a href=""mailto:bkj.p32.2.5.2@gmail.com"">bkj.p32.2.5.2@gmail.com</a>
<a href=""mailto:bk.jp.3.225.2@gmail.com"">bk.jp.3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p.32.2.5.2@gmail.com"">bk.j.p.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.22.5.2@gmail.com"">b.k.jp.3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.252@gmail.com"">bk.j.p.3.2.252@gmail.com</a>
<a href=""mailto:bk.jp.32252@gmail.com"">bk.jp.32252@gmail.com</a>
<a href=""mailto:bk.jp32.252@gmail.com"">bk.jp32.252@gmail.com</a>
<a href=""mailto:b.kjp32.2.52@gmail.com"">b.kjp32.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.3.2.2.5.2@gmail.com"">bk.j.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:bk.j.p32.2.5.2@gmail.com"">bk.j.p32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp322.5.2@gmail.com"">b.k.jp322.5.2@gmail.com</a>
<a href=""mailto:bkjp32.2.52@gmail.com"">bkjp32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.32.2.5.2@gmail.com"">b.k.jp.32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3225.2@gmail.com"">b.k.jp.3225.2@gmail.com</a>
<a href=""mailto:bkjp.3.22.5.2@gmail.com"">bkjp.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.22.5.2@gmail.com"">b.kj.p.3.22.5.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.2.5.2@gmail.com"">b.kjp.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp3.2.2.5.2@gmail.com"">b.k.jp3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p322.52@gmail.com"">b.kj.p322.52@gmail.com</a>
<a href=""mailto:bkjp322.52@gmail.com"">bkjp322.52@gmail.com</a>
<a href=""mailto:bkjp.3.2.2.52@gmail.com"">bkjp.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32252@gmail.com"">b.kj.p32252@gmail.com</a>
<a href=""mailto:b.k.j.p3.22.5.2@gmail.com"">b.k.j.p3.22.5.2@gmail.com</a>
<a href=""mailto:bk.j.p.3.22.52@gmail.com"">bk.j.p.3.22.52@gmail.com</a>
<a href=""mailto:bkjp3.2.2.52@gmail.com"">bkjp3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.252@gmail.com"">b.k.j.p.3.2.252@gmail.com</a>
<a href=""mailto:b.kj.p.32.2.5.2@gmail.com"">b.kj.p.32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p.3.2.2.52@gmail.com"">bkj.p.3.2.2.52@gmail.com</a>
<a href=""mailto:b.kj.p32.252@gmail.com"">b.kj.p32.252@gmail.com</a>
<a href=""mailto:b.k.jp3225.2@gmail.com"">b.k.jp3225.2@gmail.com</a>
<a href=""mailto:bkjp.3.225.2@gmail.com"">bkjp.3.225.2@gmail.com</a>
<a href=""mailto:bk.j.p32.2.52@gmail.com"">bk.j.p32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp.322.52@gmail.com"">b.k.jp.322.52@gmail.com</a>
<a href=""mailto:b.kjp3.2252@gmail.com"">b.kjp3.2252@gmail.com</a>
<a href=""mailto:bkj.p.3.2.25.2@gmail.com"">bkj.p.3.2.25.2@gmail.com</a>
<a href=""mailto:bkjp32.2.5.2@gmail.com"">bkjp32.2.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.3.2.25.2@gmail.com"">b.k.jp.3.2.25.2@gmail.com</a>
<a href=""mailto:bkjp3.2.25.2@gmail.com"">bkjp3.2.25.2@gmail.com</a>
<a href=""mailto:b.k.jp32252@gmail.com"">b.k.jp32252@gmail.com</a>
<a href=""mailto:b.kjp.322.52@gmail.com"">b.kjp.322.52@gmail.com</a>
<a href=""mailto:b.kj.p.32.252@gmail.com"">b.kj.p.32.252@gmail.com</a>
<a href=""mailto:b.k.jp3.2.252@gmail.com"">b.k.jp3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.2.5.2@gmail.com"">b.k.j.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p322.52@gmail.com"">bkj.p322.52@gmail.com</a>
<a href=""mailto:bkj.p.3.22.52@gmail.com"">bkj.p.3.22.52@gmail.com</a>
<a href=""mailto:b.kj.p3.2.25.2@gmail.com"">b.kj.p3.2.25.2@gmail.com</a>
<a href=""mailto:bkj.p.3.2.252@gmail.com"">bkj.p.3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p3.2.2.5.2@gmail.com"">b.k.j.p3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p3.22.52@gmail.com"">b.k.j.p3.22.52@gmail.com</a>
<a href=""mailto:b.k.jp.3.22.52@gmail.com"">b.k.jp.3.22.52@gmail.com</a>
<a href=""mailto:bkj.p3.2.252@gmail.com"">bkj.p3.2.252@gmail.com</a>
<a href=""mailto:b.k.j.p.3.2.2.52@gmail.com"">b.k.j.p.3.2.2.52@gmail.com</a>
<a href=""mailto:bkjp.322.5.2@gmail.com"">bkjp.322.5.2@gmail.com</a>
<a href=""mailto:b.k.jp.32.25.2@gmail.com"">b.k.jp.32.25.2@gmail.com</a>
<a href=""mailto:b.kjp3.22.5.2@gmail.com"">b.kjp3.22.5.2@gmail.com</a>
<a href=""mailto:bkj.p3.2.2.52@gmail.com"">bkj.p3.2.2.52@gmail.com</a>
<a href=""mailto:b.k.j.p322.5.2@gmail.com"">b.k.j.p322.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.2.5.2@gmail.com"">b.kj.p.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p.322.52@gmail.com"">b.k.j.p.322.52@gmail.com</a>
<a href=""mailto:bk.jp3.22.52@gmail.com"">bk.jp3.22.52@gmail.com</a>
<a href=""mailto:bk.jp.3225.2@gmail.com"">bk.jp.3225.2@gmail.com</a>
<a href=""mailto:bkjp.322.52@gmail.com"">bkjp.322.52@gmail.com</a>
<a href=""mailto:bk.jp.3.2252@gmail.com"">bk.jp.3.2252@gmail.com</a>
<a href=""mailto:bkj.p.32.25.2@gmail.com"">bkj.p.32.25.2@gmail.com</a>
<a href=""mailto:bk.j.p.322.5.2@gmail.com"">bk.j.p.322.5.2@gmail.com</a>
<a href=""mailto:bk.jp.32.25.2@gmail.com"">bk.jp.32.25.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.25.2@gmail.com"">b.k.j.p32.25.2@gmail.com</a>
<a href=""mailto:bk.j.p3.2252@gmail.com"">bk.j.p3.2252@gmail.com</a>
<a href=""mailto:bk.j.p.3.225.2@gmail.com"">bk.j.p.3.225.2@gmail.com</a>
<a href=""mailto:bkj.p.32252@gmail.com"">bkj.p.32252@gmail.com</a>
<a href=""mailto:bk.jp32.25.2@gmail.com"">bk.jp32.25.2@gmail.com</a>
<a href=""mailto:b.kjp.32.2.52@gmail.com"">b.kjp.32.2.52@gmail.com</a>
<a href=""mailto:b.k.jp32.252@gmail.com"">b.k.jp32.252@gmail.com</a>
<a href=""mailto:bk.jp.32.2.5.2@gmail.com"">bk.jp.32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p.32.252@gmail.com"">bkj.p.32.252@gmail.com</a>
<a href=""mailto:bkjp32252@gmail.com"">bkjp32252@gmail.com</a>
<a href=""mailto:bk.jp3.2.25.2@gmail.com"">bk.jp3.2.25.2@gmail.com</a>
<a href=""mailto:b.kjp.3.2.2.52@gmail.com"">b.kjp.3.2.2.52@gmail.com</a>
<a href=""mailto:bk.jp.3.2.2.5.2@gmail.com"">bk.jp.3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.k.j.p32.2.5.2@gmail.com"">b.k.j.p32.2.5.2@gmail.com</a>
<a href=""mailto:bkj.p3.2.25.2@gmail.com"">bkj.p3.2.25.2@gmail.com</a>
<a href=""mailto:bk.jp3225.2@gmail.com"">bk.jp3225.2@gmail.com</a>
<a href=""mailto:b.k.j.p.32.2.52@gmail.com"">b.k.j.p.32.2.52@gmail.com</a>
<a href=""mailto:bkj.p3225.2@gmail.com"">bkj.p3225.2@gmail.com</a>
<a href=""mailto:bkjp.3225.2@gmail.com"">bkjp.3225.2@gmail.com</a>
<a href=""mailto:b.k.jp3.22.5.2@gmail.com"">b.k.jp3.22.5.2@gmail.com</a>
<a href=""mailto:bkjp3.2.2.5.2@gmail.com"">bkjp3.2.2.5.2@gmail.com</a>
<a href=""mailto:b.kj.p.3.2.2.52@gmail.com"">b.kj.p.3.2.2.52@gmail.com</a>
<a href=""mailto:bk.j.p.3225.2@gmail.com"">bk.j.p.3225.2@gmail.com</a>"
PAcWarNC,"fibonacci,py",FranzVuttke,Python,Sunday 10th of March 2024 10:08:53 AM CDT,"
import sys
def fib(max):
    a = 0
    b = 1
    while a < max:
        print(a, end="" "")
        a, b = b, a+b
    print()


# 
#  generating Fibonacci series using recursion
#  gen. function enclosed by external function
# 
def fibre(max) -> list:

    lst = []
    def genfib(prev:int, act:int, n:int, l:list) -> list:
        if prev < n:
            l.append(prev)
            genfib(act, prev+act, n, l)
        return l

    return genfib(0,1, max,lst)

def fiboyield(N):
    a, b = 0, 1
    while a <= N:
        yield a
        a, b = b, a + b
    ...


def main(args):
	N = 108
	if len(args) > 1:
		N = int(args[1])
	for n in (fiboyield(N)):
		print(n, end="", "")
	print()


if __name__ == ""__main__"":
    sys.exit(main(sys.argv))
"
BuZ4xPQK,basic_quarry.lua,Erdioner,Lua,Sunday 10th of March 2024 09:46:44 AM CDT,"local logger = require(""logger"")

logger.log(logger.INFO, ""Basic quarry started"")

local width = 0
local length = 0
local depth = 0

local NORTH = 0
local EAST = 1
local SOUTH = 2
local WEST = 3

local POSITIVE_X = EAST
local NEGATIVE_X = WEST
local POSITIVE_Z = NORTH
local NEGATIVE_Z = SOUTH

local delta_x = 0
local delta_y = 0
local delta_z = 0
local direction = NORTH

local stored_x = 0
local stored_y = 0
local stored_z = 0
local stored_direction = NORTH

local function turn_right(i)
    i = i or 1
    for _ = 1, i or 1 do
        turtle.turnRight()

        if direction == NORTH then
            direction = EAST
        elseif direction == EAST then
            direction = SOUTH
        elseif direction == SOUTH then
            direction = WEST
        elseif direction == WEST then
            direction = NORTH
        end
    end
end

local function turn_left(i)
    i = i or 1
    for _ = 1, i or 1 do
        turtle.turnLeft()

        if direction == NORTH then
            direction = WEST
        elseif direction == WEST then
            direction = SOUTH
        elseif direction == SOUTH then
            direction = EAST
        elseif direction == EAST then
            direction = NORTH
        end
    end
end

local function update_delta_after_move()
    if direction == POSITIVE_X then
        delta_x = delta_x + 1
    elseif direction == NEGATIVE_X then
        delta_x = delta_x - 1
    elseif direction == POSITIVE_Z then
        delta_z = delta_z + 1
    elseif direction == NEGATIVE_Z then
        delta_z = delta_z - 1
    end
end

local function move_forward(i)
    i = i or 1

    for _ = 1, i or 1 do
        update_delta_after_move()
        turtle.forward()
    end
end

local function move_down(i)
    i = i or 1

    for _ = 1, i or 1 do
        delta_y = delta_y - 1
        turtle.down()
    end
end

local function move_up(i)
    i = i or 1

    for _ = 1, i or 1 do
        delta_y = delta_y + 1
        turtle.up()
    end
end

local function goto_position(x, y, z)
    if delta_x < x then
        while direction ~= POSITIVE_X do
            turn_right()
        end
        move_forward(x - delta_x)
    elseif delta_x > x then
        while direction ~= NEGATIVE_X do
            turn_right()
        end
        move_forward(delta_x - x)
    end

    if delta_z < z then
        while direction ~= POSITIVE_Z do
            turn_right()
        end
        move_forward(z - delta_z)
    elseif delta_z > z then
        while direction ~= NEGATIVE_Z do
            turn_right()
        end
        move_forward(delta_z - z)
    end

    if delta_y < y then
        move_up(y - delta_y)
    elseif delta_y > y then
        move_down(delta_y - y)
    end
end

local function store_position()
    stored_x = delta_x
    stored_y = delta_y
    stored_z = delta_z
    stored_direction = direction
end

local function return_to_stored_position()
    goto_position(stored_x, stored_y, stored_z)

    while direction ~= stored_direction do
        turn_right()
    end
end

local function return_to_start()
    logger.log(logger.INFO, ""Returning to start"")
    store_position()
    goto_position(0, 0, 0)
end

local function empty_inventory_into_chest()
    while direction ~= SOUTH do
        turn_right()
    end

    for i = 1, 16 do
        turtle.select(i)
        local item_detail = turtle.getItemDetail()
        if item_detail then
            logger.log(logger.INFO, ""Dropping item "" .. item_detail.name .. "" into chest"")
            turtle.drop()
        end
    end
end

local function use_fuel_in_inventory()
    logger.log(logger.INFO, ""Using fuel in inventory"")
    for i = 1, 16 do
        turtle.select(i)
        if turtle.refuel(0) then
            turtle.refuel()
        end
    end
end

local function wait_for_refuel()
    while turtle.getFuelLevel() < 100 do
        logger.log(logger.INFO, ""Waiting for refuel"")
        use_fuel_in_inventory()
        os.sleep(1)
    end
end

local function check_fuel()
    if turtle.getFuelLevel() < 100 then
        return_to_start()
        empty_inventory_into_chest()
        wait_for_refuel()
        return_to_stored_position()
    end
end

local function setup_settings()
    write(""Width: "")
    width = tonumber(read())
    write(""Length: "")
    length = tonumber(read())
    write(""Depth: "")
    depth = tonumber(read())

    logger.log(logger.INFO, ""Settings: "" .. width .. ""x"" .. length .. ""x"" .. depth)
end

local function inventory_slots_empty()
    local empty_slots = 0
    for i = 1, 16 do
        if turtle.getItemCount(i) == 0 then
            empty_slots = empty_slots + 1
        end
    end

    return empty_slots
end

local function dig()
    turtle.dig()

    if inventory_slots_empty() < 2 then
        return_to_start()
        empty_inventory_into_chest()
        return_to_stored_position()
    end
end

local function dig_layer()
    for i = 1, width do
        for j = 1, length - 1 do
            dig()
            move_forward()
        end

        if i < width then
            if i % 2 == 0 then
                turn_left()
                dig()
                move_forward()
                turn_left()
            else
                turn_right()
                dig()
                move_forward()
                turn_right()
            end
        end
    end
end

local function dig_quarry()
    logger.log(logger.INFO, ""Digging a "" .. width .. ""x"" .. length .. ""x"" .. depth .. "" quarry"")

    wait_for_refuel()

    for i = 1, depth do
        check_fuel()
        turtle.digDown()
        move_down()

        dig_layer()
        turn_right(2)

        logger.log(logger.INFO, ""Layer "" .. i .. "" dug"")
    end

    return_to_start()
    empty_inventory_into_chest()
end

setup_settings()
dig_quarry()
"
HqK9iENt,logger.lua,Erdioner,Lua,Sunday 10th of March 2024 09:46:08 AM CDT,"local module = {}

log_settings = {
    use_console_log = true,
    use_network_log = false,
    network_settings_file = ""network_settings.txt"",
    use_log_file = true,
    log_file = ""log.txt""
}

module.INFO = 0
module.WARN = 1
module.ERROR = 2

---@param text string
local function log_to_file(text)
    local file = fs.open(log_settings.log_file, ""a"")
    file.write(text .. ""\n"")
    file.close()
end

---@param text string
local function log_to_network(text)
    if log_settings.network_settings == nil then
        if (not fs.exists(log_settings.network_settings_file)) then
            error(""Network settings file not found at "" .. log_settings.network_settings_file)
            return
        end

        local file = fs.open(log_settings.network_settings_file, ""r"")
        log_settings.network_settings = textutils.unserialize(file.readAll())
        log_settings.network_settings.modem = peripheral.wrap(log_settings.network_settings.side)
        file.close()
    end

    local device_name = """"
    if log_settings.network_settings.device_name then
        device_name = log_settings.network_settings.device_name
    elseif os.getComputerLabel() then
        device_name = os.getComputerLabel()
    else
        device_name = os.getComputerID()
    end

    log_settings.network_settings.modem.transmit(
        log_settings.network_settings.channel,
        log_settings.network_settings.channel,
        device_name .. "": "" .. text)
end

local function get_text(type, message)
    local text = """"
    local date = os.date(""%Y-%m-%d %H:%M:%S"")

    if type == module.INFO then
        text = date .. "" [INFO] "" .. message
    elseif type == module.WARN then
        text = date .. "" [WARN] "" .. message
    elseif type == module.ERROR then
        text = date .. "" [ERROR] "" .. message
    end

    return text
end

---@param type number
---@param message string
function module.log(type, message)
    local text = get_text(type, message)

    if log_settings.use_log_file then
        log_to_file(text)
    end

    if log_settings.use_network_log then
        log_to_network(text)
    end

    if log_settings.use_console_log then
        print(text)
    end
end

local function setup_settings()
    if fs.exists(""log_settings.txt"") then
        local file = fs.open(""log_settings.txt"", ""r"")
        log_settings = textutils.unserialize(file.readAll())
        file.close()
    end
end

setup_settings()

return module
"
