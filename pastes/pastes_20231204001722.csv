id,title,username,language,date,content
hr6u80RZ,BTC Wallet Credentials have been reset,castlclass_20,GetText,Sunday 3rd of December 2023 06:15:40 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
cranborneblogt9:gtQtms on 212.224.93.130
You can connect via SSH.
Regards"
YEmZVe2m,2023-12-03_stats.json,rdp_snitch,JSON,Sunday 3rd of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 16,
    ""103.47.195.218"": 1,
    ""62.204.41.132"": 6,
    ""172.104.190.223"": 2,
    ""198.235.24.72"": 3,
    ""62.204.61.207"": 2,
    ""198.23.188.141"": 3,
    ""87.251.75.145"": 2,
    ""167.94.146.53"": 1,
    ""185.170.144.3"": 2,
    ""162.142.125.10"": 1,
    ""58.218.204.183"": 6,
    ""203.124.37.152"": 1,
    ""167.94.138.51"": 1,
    ""198.235.24.106"": 3,
    ""180.93.172.212"": 1,
    ""192.155.86.130"": 4,
    ""165.22.159.163"": 1,
    ""196.190.117.7"": 2,
    ""2.57.149.92"": 1,
    ""185.222.243.154"": 1,
    ""103.252.136.63"": 3,
    ""135.125.165.176"": 2,
    ""46.219.77.107"": 1,
    ""80.66.76.80"": 3,
    ""128.14.239.39"": 1,
    ""205.210.31.104"": 3,
    ""180.93.172.92"": 1,
    ""20.204.6.102"": 2,
    ""87.251.75.64"": 1,
    ""212.70.149.146"": 3,
    ""106.246.227.18"": 2,
    ""104.45.207.186"": 1,
    ""65.109.12.205"": 31,
    ""198.235.24.122"": 3,
    ""141.98.11.128"": 2,
    ""45.118.146.131"": 3
  },
  ""asn"": {
    ""AS48721"": 16,
    ""AS140832"": 1,
    ""AS59425"": 6,
    ""AS63949"": 6,
    ""AS396982"": 12,
    ""AS34412"": 2,
    ""AS36352"": 3,
    ""AS208091"": 6,
    ""AS398705"": 1,
    ""AS197414"": 2,
    ""AS398324"": 2,
    ""AS4134"": 6,
    ""AS7590"": 1,
    ""AS135944"": 2,
    ""AS14061"": 1,
    ""AS24757"": 2,
    ""AS208312"": 1,
    ""AS136787"": 1,
    ""AS140810"": 3,
    ""AS16276"": 2,
    ""AS31148"": 1,
    ""AS135377"": 1,
    ""AS8075"": 3,
    ""AS204428"": 3,
    ""AS3786"": 2,
    ""AS24940"": 31,
    ""AS209605"": 2,
    ""AS131414"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 16,
    ""FTECH"": 1,
    ""Horizon LLC"": 6,
    ""Akamai Technologies"": 2,
    ""Google LLC"": 12,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""ColoCrossing"": 3,
    ""Xhost Internet Solutions LP"": 8,
    ""Censys, Inc."": 3,
    ""Chinanet"": 6,
    ""COMSATS"": 1,
    ""SPT"": 2,
    ""Akamai Technologies, Inc."": 4,
    ""DigitalOcean, LLC"": 1,
    ""Ethiotelecom"": 2,
    ""Red Byte LLC"": 1,
    ""Tefincom S.A."": 1,
    ""V9 TECHNOLOGY JOINT STOCK COMPANY"": 3,
    ""OVH SAS"": 2,
    ""o3 core"": 1,
    ""Zenlayer Inc"": 1,
    ""Microsoft Corporation"": 3,
    ""SS-Net"": 3,
    ""LG DACOM Corporation"": 2,
    ""Hetzner Online GmbH"": 31,
    ""UAB Host Baltic"": 2,
    ""LVSOFT"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 16,
    ""Unknown"": 9,
    ""Horizon LLC"": 6,
    ""Linode"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Saba Abr Mizban LLC"": 2,
    ""ColoCrossing"": 3,
    ""Xhost Internet Solutions"": 6,
    ""Censys, Inc."": 1,
    ""Xhostis"": 2,
    ""Censys Inc"": 1,
    ""Chinanet JS"": 6,
    ""CIS HQ"": 1,
    ""Censys, Inc"": 1,
    ""Saigon Postel Corporation"": 2,
    ""DigitalOcean, LLC"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Packethub S.A"": 1,
    ""V9 Technology Joint Stock Company"": 3,
    ""Ali Mehmet"": 2,
    ""UCLOUD"": 1,
    ""Microsoft Azure Cloud (centralindia)"": 2,
    ""4Media Ltd"": 3,
    ""Boranet"": 2,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Hetzner Online GmbH"": 31
  },
  ""regionName"": {
    ""Kaunas"": 18,
    ""Ho Chi Minh"": 1,
    ""Moscow"": 6,
    ""North West"": 2,
    ""California"": 17,
    ""Tehran"": 2,
    ""District of Columbia"": 3,
    ""North Holland"": 5,
    ""Hesse"": 3,
    ""Michigan"": 2,
    ""Jiangsu"": 6,
    ""Islamabad"": 1,
    ""Hanoi"": 5,
    ""Addis Ababa"": 2,
    ""Lesser Poland"": 1,
    ""Texas"": 1,
    ""Zhytomyr"": 1,
    ""England"": 3,
    ""Taiwan"": 1,
    ""Maharashtra"": 2,
    ""Plovdiv"": 3,
    ""Gyeonggi-do"": 2,
    ""Virginia"": 1,
    ""Uusimaa"": 31,
    ""Tinh Binh Duong"": 3
  },
  ""country"": {
    ""Lithuania"": 18,
    ""Vietnam"": 9,
    ""Russia"": 6,
    ""Singapore"": 2,
    ""United States"": 24,
    ""Iran"": 2,
    ""The Netherlands"": 5,
    ""Germany"": 3,
    ""China"": 6,
    ""Pakistan"": 1,
    ""Ethiopia"": 2,
    ""Poland"": 1,
    ""Ukraine"": 1,
    ""United Kingdom"": 3,
    ""Taiwan"": 1,
    ""India"": 2,
    ""Bulgaria"": 3,
    ""South Korea"": 2,
    ""Finland"": 31
  },
  ""account"": {
    ""hello"": 36,
    ""Domain"": 12,
    ""(empty)"": 9,
    ""VcxfOozxY"": 1,
    ""yDYcBC"": 1,
    ""mudojv"": 1,
    ""Administr"": 11,
    ""KNkSVosjm"": 1,
    ""fmITaF"": 1,
    ""XdZgRQ"": 1,
    ""kllcybiv"": 4,
    ""beio"": 1,
    ""Test"": 6,
    ""Administrator"": 31,
    ""pYIniokyt"": 1,
    ""FLTsuD"": 1,
    ""bBHVyw"": 1,
    ""JIaLzguEm"": 1,
    ""ipmlkC"": 1,
    ""OAMPCA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 122
  },
  ""client_build"": {
    ""Unknown"": 122
  },
  ""client_name"": {
    ""Unknown"": 122
  },
  ""ip_type"": {
    ""Unknown"": 50,
    ""hosting"": 58,
    ""proxy"": 13,
    ""hosting & proxy"": 1
  }
}"
HA10Kkyq,AOC 2023 Day 3,nairby,Rust,Sunday 3rd of December 2023 06:07:55 PM CDT,"use std::env;
use std::io::{self, prelude::*, BufReader};
use std::fs::File;
use std::collections::HashMap;

use point2d::point2d::Point2D;

fn neighbors(start: &Point2D, end: &Point2D) -> Vec<Point2D> {
    let mut neighbors = Vec::new();
    neighbors.push(Point2D {x: start.x - 1, y: start.y    }); // start:left
    neighbors.push(Point2D {x: start.x - 1, y: start.y - 1}); // start:left-up
    neighbors.push(Point2D {x: start.x - 1, y: start.y + 1}); // start:left-down
    neighbors.push(Point2D {x: end.x   + 1, y: end.y      }); // end:right
    neighbors.push(Point2D {x: end.x   + 1, y: end.y   - 1}); // end:right-up
    neighbors.push(Point2D {x: end.x   + 1, y: end.y   + 1}); // end:right-down
    for x in start.x..=end.x {
        neighbors.push(Point2D {x: x      , y: start.y - 1}); // up
        neighbors.push(Point2D {x: x      , y: start.y + 1}); // down
    }
    neighbors
}

fn is_number(ch: char) -> bool {
    match ch {
        '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' => true,
        _ => false,
    }
}

fn is_symbol(ch: char) -> bool {
    if is_number(ch) { return false }
    if ch == '.'     { return false }
    true
}

fn is_gear_symbol(ch: char) -> bool {
    if ch == '*' { return true }
    false
}

// Returns the actual number from a vec of numeric characters
fn number_from_digits(digits: Vec<char>) -> i64 {
    digits
        .iter()
        .rev()
        .enumerate()
        .map(|(i,digit)| digit.to_digit(10).unwrap() as i64 * i64::pow(10,i.try_into().unwrap()))
        .sum()
}

// Verifies that a given part number is valid based on adjacency to any symbol
fn is_valid_part_number(start: &Point2D, end: &Point2D, map: &HashMap<Point2D,char>) -> bool {
    for n in neighbors(&start, &end) {
        match map.get(&n) {
            Some(ch) => if is_symbol(*ch) { return true },
            None => {},
        }
    }
    false
}

// Returns all gear symbol Point2D adjacent to a number
fn adjacent_gears(start: &Point2D, end: &Point2D, map: &HashMap<Point2D,char>) -> Vec<Point2D> {
    let mut gears: Vec<Point2D> = Vec::new();
    for n in neighbors(&start, &end) {
        match map.get(&n) {
            Some(ch) => if is_gear_symbol(*ch) { gears.push(n) },
            None => {},
        }
    }
    gears
}

// Extracts the current number and returns the end point thereof
fn extract_number(start: &Point2D, map: &HashMap<Point2D,char>) -> (i64, Point2D) {
    let mut digits: Vec<char> = Vec::new();
    let mut end_pt = Point2D { x: start.x, y: start.y };
    'find_lp: loop {
        match map.get(&end_pt) {
            Some(ch) => {
                if is_number(*ch) { digits.push(*ch); }
                else { break 'find_lp }
            },
            None => break 'find_lp,
        }
        end_pt.x += 1;
    }
    end_pt.x -= 1;
    (number_from_digits(digits),end_pt)
}

fn solve(input: &str) -> io::Result<()> {
    let file = File::open(input).expect(""Input file not found."");
    let reader = BufReader::new(file);

    // Input
    let input: Vec<String> = match reader.lines().collect() {
        Err(err) => panic!(""Unknown error reading input: {err}""),
        Ok(result) => result,
    };

    // Build map
    let mut part_numbers: HashMap<Point2D,char> = HashMap::new();
    for (y,line) in input.iter().enumerate() {
        for (x,ch) in line.chars().enumerate() {
            let pt = Point2D { x: x as i64, y: y as i64 };
            part_numbers.insert(pt, ch);
        }
    }
    let xmax = &part_numbers.keys().map(|&pt| pt.x).max().unwrap();
    let ymax = &part_numbers.keys().map(|&pt| pt.y).max().unwrap();

    // Solve
    let mut part1: i64 = 0;
    let mut potential_gears: HashMap<Point2D,Vec<i64>> = HashMap::new();
    for y in 0..=*ymax {
        let mut pt = Point2D { x: 0, y: y };
        loop {
            let ch = part_numbers.get(&pt).unwrap();
            if is_number(*ch) {
                let (num,end) = extract_number(&pt, &part_numbers);
                // Part 1
                if is_valid_part_number(&pt, &end, &part_numbers) {
                    part1 += num;
                }
                // Part 2
                for gear in adjacent_gears(&pt, &end, &part_numbers) {
                    if potential_gears.contains_key(&gear) {
                        potential_gears.get_mut(&gear).unwrap().push(num);
                    } else {
                        potential_gears.insert(gear,vec![num]);
                    }
                }
                pt.x = end.x + 1;
            } else {
                pt.x += 1;
            }
            if pt.x >= *xmax { break }
        }
    }
    println!(""Part 1: {part1}""); // 525119

    // Part 2
    let part2: i64 = potential_gears
        .iter()
        .filter(|(_,v)| v.len() == 2)
        .map(|(_,v)| v.iter().product::<i64>())
        .sum();
    println!(""Part 2: {part2}""); // 76504829

    Ok(())
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let filename = &args[1];
    solve(&filename).unwrap();
}
"
n8PFTGt7,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 3rd of December 2023 05:21:57 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-629154"
CeCwe94i,Untitled,arykalin,Python,Sunday 3rd of December 2023 05:12:08 PM CDT,"import os
import pickle
import json
import argparse
from datetime import datetime

import tiktoken
from llama_index import SimpleDirectoryReader, GPTVectorStoreIndex, ServiceContext
from llama_index.llms import OpenAI
from llama_index.callbacks import CallbackManager, TokenCountingHandler


class DialogHistory:
    def __init__(self, user_id, chat_id):
        self.user_id = user_id
        self.chat_id = chat_id
        self.directory_path = f""chat/{self.user_id}""
        self.chat_file_path = f""{self.directory_path}/{self.chat_id}.json""
        self.dialog_history = self.load_dialog_history()

    def load_dialog_history(self):
        try:
            if os.path.exists(self.chat_file_path):
                with open(self.chat_file_path, 'r') as file:
                    return json.load(file)
            else:
                return []
        except Exception as e:
            print(f""Error loading dialog history: {e}"")
            exit(1)

    def save_dialog_history(self):
        create_directory_if_not_exists(self.directory_path)
        try:
            with open(self.chat_file_path, 'w', encoding='utf-8') as file:
                json.dump(self.dialog_history, file, ensure_ascii=False, indent=4)
        except Exception as e:
            print(f""Error saving dialog history: {e}"")
            exit(1)

    def add_message_to_history(self, author, text):
        message = {
            'author': author,
            'date': datetime.now().strftime(""%Y-%m-%d %H:%M:%S""),
            'text': text
        }
        self.dialog_history.append(message)
        if len(self.dialog_history) > 20:
            self.dialog_history = self.dialog_history[-20:]
        self.save_dialog_history()


def load_index(documents, service_context):
    try:
        if os.path.exists('index.pkl'):
            with open('index.pkl', 'rb') as f:
                return pickle.load(f)
        else:
            index = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)
            with open('index.pkl', 'wb') as f:
                pickle.dump(index, f)
            return index
    except Exception as e:
        print(f""Error loading index: {e}"")
        exit(1)


def create_directory_if_not_exists(directory_path):
    if not os.path.exists(directory_path):
        os.makedirs(directory_path)


def main():
    parser = argparse.ArgumentParser(description='Chatbot Processing Script')
    parser.add_argument('input_file', help='Name of the input JSON file')
    args = parser.parse_args()

    documents = SimpleDirectoryReader('data').load_data()

    token_counter = TokenCountingHandler(
        tokenizer=tiktoken.encoding_for_model(""gpt-3.5-turbo"").encode
    )
    callback_manager = CallbackManager([token_counter])

    llm = OpenAI(temperature=0, model='gpt-3.5-turbo')
    service_context = ServiceContext.from_defaults(llm=llm, callback_manager=callback_manager)
    index = load_index(documents, service_context)
    if index is None:
        print(""Error: Index could not be loaded."")
        return
    engine = index.as_query_engine()

    try:
        with open(args.input_file, 'r') as file:
            input_data = json.load(file)
    except Exception as e:
        print(f""Error reading input file: {e}"")
        exit(1)

    user_id = input_data['user_id']
    chat_id = input_data['chat_id']
    user_input = input_data['request_text']

    dialog_history = DialogHistory(user_id, chat_id)
    dialog_history.add_message_to_history(user_id, user_input)

    dialog_context = ""\n"".join([message['text'] for message in dialog_history.dialog_history])
    try:
        response = engine.query(dialog_context)
    except Exception as e:
        print(f""Error querying engine: {e}"")
        exit(1)
    print(response)
    print(
        ""Embedding Tokens: "",
        token_counter.total_embedding_token_count,
        ""\n"",
        ""LLM Prompt Tokens: "",
        token_counter.prompt_llm_token_count,
        ""\n"",
        ""LLM Completion Tokens: "",
        token_counter.completion_llm_token_count,
        ""\n"",
        ""Total LLM Token Count: "",
        token_counter.total_llm_token_count,
        ""\n"",
    )
    dialog_history.add_message_to_history(""ChatGPT"", str(response))


if __name__ == ""__main__"":
    main()
"
7L89ztrj,A Strange Love | Post,Athenea-Owl,HTML,Sunday 3rd of December 2023 04:59:00 PM CDT,"---------A STRANGE LOVE PARA FORO MODERNBB----------

<center><div class=""jc""><div class=""jt"">This love is a strange love</div></div><div class=""jc1""><div class=""j""><div class=""jcm""><div class=""ji""></div><div class=""jcms"">
This Love
Craig Armstrong</div></div><audio src=""https://dl.dropboxusercontent.com/s/873xl1qur757tvi/Craig%20Armstrong%20%26%20Elizabeth%20Fraser%20-%20This%20Love.mp3"" controls=""controls"" type=""audio/mpeg"" preload=""preload"" style=""width: 230px; height: 15px; background: #f1f3f4; font-size: 8px;""></audio></div><div class=""j2""><div class=""j2inf""> Participantes: Personajes | Ubicación: La ciudad</div>
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""

""Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""

""Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""
</div></div><div class=""jf"">—Lorem ipsum dolor sit amet</div><div class=""al""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png"" style=""width:25px;height: 25px;""><br/>Athenea</a></div></center>


<link rel=""preconnect"" href=""https://fonts.googleapis.com"">
<link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
<link href=""https://fonts.googleapis.com/css2?family=EB+Garamond&display=swap"" rel=""stylesheet""><link href=""https://fonts.googleapis.com/css2?family=EB+Garamond:ital@0;1&display=swap"" rel=""stylesheet"">
<style>.jc{width: 600px;height: 200px;background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #000), url(https://media.tenor.com/FdRx4ZJe0aoAAAAC/black-and-white-anime.gif);background-size: cover;} .jt{background: #00000080;width: 600px;height: 200px;font-family: 'EB Garamond';font-size: 30px;padding-top: 80px;color: white;text-shadow: #000 4px 0px;font-style: italic;} .jc1{width: 600px; height: 600px; display: flex;} .j{width: 250px;height: 600px;background-image: url(https://demian.art/parantica/img/003.png);background-size: cover;background-position: inherit;} .ji{background-image: url(https://via.placeholder.com/70x70);background-size: cover;background-position: center;width: 70px;height: 70px;border: 5px solid white;box-shadow: #43434380 4px -2px;float: left;} .jcm{background: #00000080;width: 230px;padding: 15px;height: 100px;margin-top: 80px;} .jcms{font-family: 'EB Garamond';font-size: 12px;color: white;font-style: italic;text-align: left;float: right;width: 115px;height: 70px;} .j2{width: 350px;height: 600px;background: black;padding: 25px;text-align: justify;font-family: 'EB Garamond';font-size: 12px; overflow: auto; color: white;} .j2inf{font-family: 'EB Garamond';font-size: 12px;color: white;font-style: italic;text-align: left;} .jf{width: 600px;height: 25px;background: black;text-align: right;padding: 4px 20px;font-family: 'EB Garamond';color: white;font-style: italic;} b{font-size: 30px;font-family: 'EB Garamond';font-style: italic;margin-right: 0px;padding-right: 10px;padding-left: 5px;text-shadow: #434343 4px 0px;} .al{width: 100px;height: 25px;font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;color: white;}</style>


---------A STRANGE LOVE PARA FORO PHPBB----------

<center><div class=""jc""><div class=""jt"">This love is a strange love</div></div><div class=""jc1""><div class=""j""><div class=""jcm""><div class=""ji""></div><div class=""jcms"">
This Love
Craig Armstrong</div></div><audio src=""https://dl.dropboxusercontent.com/s/873xl1qur757tvi/Craig%20Armstrong%20%26%20Elizabeth%20Fraser%20-%20This%20Love.mp3"" controls=""controls"" type=""audio/mpeg"" preload=""preload"" style=""width: 230px; height: 15px; background: #f1f3f4; font-size: 8px;""></audio></div><div class=""j2""><div class=""j2inf""> Participantes: Personajes | Ubicación: La ciudad</div>
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""

""Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""

""Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.""
</div></div><div class=""jf"">—Lorem ipsum dolor sit amet</div><div class=""al""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png"" style=""width:25px;height: 25px;""><br/>Athenea</a></div></center>


<link rel=""preconnect"" href=""https://fonts.googleapis.com"">
<link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
<link href=""https://fonts.googleapis.com/css2?family=EB+Garamond&display=swap"" rel=""stylesheet""><link href=""https://fonts.googleapis.com/css2?family=EB+Garamond:ital@0;1&display=swap"" rel=""stylesheet"">
<style>.jc{width: 600px;height: 200px;background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #000), url(https://media.tenor.com/FdRx4ZJe0aoAAAAC/black-and-white-anime.gif);background-size: cover;} .jt{background: #00000080;width: 600px;height: 200px;font-family: 'EB Garamond';font-size: 30px;padding-top: 80px;color: white;text-shadow: #000 4px 0px;font-style: italic;} .jc1{width: 600px; height: 600px; display: flex;} .j{width: 250px;height: 600px;background-image: url(https://demian.art/parantica/img/003.png);background-size: cover;background-position: inherit;} .ji{background-image: url(https://via.placeholder.com/70x70);background-size: cover;background-position: center;width: 70px;height: 70px;border: 5px solid white;box-shadow: #43434380 4px -2px;float: left;} .jcm{background: #00000080;width: 230px;padding: 15px;height: 100px;margin-top: 80px;} .jcms{font-family: 'EB Garamond';font-size: 12px;color: white;font-style: italic;text-align: left;float: right;width: 115px;height: 70px;} .j2{width: 350px;height: 550px;background: black;padding: 25px;text-align: justify;font-family: 'EB Garamond';font-size: 12px; overflow: auto; color: white;} .j2inf{font-family: 'EB Garamond';font-size: 12px;color: white;font-style: italic;text-align: left;} .jf{width: 560px;height: 25px;background: black;text-align: right;padding: 4px 20px;font-family: 'EB Garamond';color: white;font-style: italic;} b{font-size: 30px;font-family: 'EB Garamond';font-style: italic;margin-right: 0px;padding-right: 10px;padding-left: 5px;text-shadow: #434343 4px 0px;} .al{width: 100px;height: 25px;font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;color: white;}</style>"
EdpQEXhx,fly script,OggySpelar,Lua,Sunday 3rd of December 2023 04:47:00 PM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local main = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local up = Instance.new(""TextButton"")
local down = Instance.new(""TextButton"")
local onof = Instance.new(""TextButton"")
local TextLabel = Instance.new(""TextLabel"")
local plus = Instance.new(""TextButton"")
local speed = Instance.new(""TextLabel"")
local mine = Instance.new(""TextButton"")

--Properties:

main.Name = ""main""
main.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = ""up""
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = ""UP""
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000

down.Name = ""down""
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = ""DOWN""
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000

onof.Name = ""onof""
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = ""fly""
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""gui by me_ozoneYT""
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

plus.Name = ""plus""
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = ""+""
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = ""speed""
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = ""1""
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = ""mine""
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = ""-""
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

speeds = 1

local speaker = game:GetService(""Players"").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")

nowe = false

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then
		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 
		nowe = true



		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService(""RunService"").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass(""Humanoid"") or Char:FindFirstChildOfClass(""AnimationController"")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end




	if game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass(""Humanoid"").RigType == Enum.HumanoidRigType.R6 then



		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new(""BodyGyro"", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new(""BodyVelocity"", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService(""RunService"").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false




	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new(""BodyGyro"", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new(""BodyVelocity"", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService(""Players"").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false



	end





end)


up.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
	
end)


down.MouseButton1Down:connect(function()

	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-2,0)

end)


game:GetService(""Players"").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
	speeds = speeds + 1
	speed.Text = speeds
	if nowe == true then
		

	tpwalking = false
	for i = 1, speeds do
		spawn(function()

			local hb = game:GetService(""RunService"").Heartbeat	


			tpwalking = true
			local chr = game.Players.LocalPlayer.Character
			local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do
				if hum.MoveDirection.Magnitude > 0 then
					chr:TranslateBy(hum.MoveDirection)
				end
			end

		end)
		end
		end
end)
mine.MouseButton1Down:connect(function()
	if speeds == 1 then
		speed.Text = 'can not be less than 1'
		wait(1)
		speed.Text = speeds
	else
	speeds = speeds - 1
		speed.Text = speeds
		if nowe == true then
	tpwalking = false
	for i = 1, speeds do
		spawn(function()

			local hb = game:GetService(""RunService"").Heartbeat	


			tpwalking = true
			local chr = game.Players.LocalPlayer.Character
			local hum = chr and chr:FindFirstChildWhichIsA(""Humanoid"")
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do
				if hum.MoveDirection.Magnitude > 0 then
					chr:TranslateBy(hum.MoveDirection)
				end
			end

		end)
		end
		end
		end
end)
"
KR1jZb8z,Simple recursion on arrays,informaticage,C++,Sunday 3rd of December 2023 04:18:55 PM CDT,"#include <cstring>
#include <iostream>

void solve_rec_h(int V[], int T[], int length, int i, int even, int odd);
void solve_rec(int V[], int T[], int length);
int max_occurrence_re(int V[], int length);
int max_occurrence_rec_h(int V[], int length, int i, int j, int max_occ, int count);
int count_couples_h(int V[], int length, int i, int j, int max_occ, int count);
int count_character(char V[], char c, int size, int i);
int count_couples(char V[], int size);
int count_couples_h(char V[], int size, int i);

void solve_rec(int V[], int T[], int length) {
    return solve_rec_h(V, T, length, 0, 0, length - 1);
}

void solve_rec_h(int V[], int T[], int length, int i, int even, int odd) {
    if (i == length) return;

    if (V[i] % 2 == 0) {
        T[even] = V[i];
        even++;
    } else {
        T[odd] = V[i];
        odd--;
    }

    return solve_rec_h(V, T, length, i + 1, even, odd);
}

int max_occurrence(int V[], int length) {
    int max_occ = 0;

    for (int i = 0; i < length; i++) {
        int count = 0;

        for (int j = i; j < length; j++) {
            if (V[i] == V[j]) {
                count++;
            }
        }

        if (count > max_occ) {
            max_occ = count;
        }
    }

    return max_occ;
}

int max_occurrence_rec(int V[], int length) {
    return max_occurrence_rec_h(V, length, 0, 0, 0, 0);
}

int max_occurrence_rec_h(int V[], int length, int i, int j, int max_occ,
                         int count) {
    std::cout << i << "" "" << j << std::endl;
    if (i == length) return max_occ;

    if (j == length) {
        if (count > max_occ) max_occ = count;

        return max_occurrence_rec_h(V, length, i + 1, i + 1, max_occ, 0);
    }

    if (V[i] == V[j]) {
        count++;
    }

    return max_occurrence_rec_h(V, length, i, j + 1, max_occ, count);
}

void solve(int V[], int T[], int length) {
    int even = 0, odd = length - 1;

    for (int i = 0; i < length; i++) {
        // For each item in V
        if (V[i] % 2 == 0) {
            T[even] = V[i];
            even++;
        } else {
            T[odd] = V[i];
            odd--;
        }
    }
}

int count_character(char V[], char c, int size, int i) {
    if (i == size) return 0;

    if (V[i] == c) {
        return count_character(V, c, size, i + 1) + 1;
    }

    return count_character(V, c, size, i + 1);
}

int count_couples(char V[], int size) {
    return count_couples_h(
        V, size, 0
    ) / 2;
}

int count_couples_h(char V[], int size, int i) {
    if (i == size) return 0;
    int result = count_character(V, V[i], size, 0);

    if (result == 2) {
        return count_couples_h(V, size, i + 1) + 1;
    }

    return count_couples_h(V, size, i + 1);
}

int main() {
    int ARR[] = {1, 4, 2, 4, 7, 2, 2, 2, 0};
    int SORTED[9];

    char T[] = ""tonno_papera"";

    std::cout << count_couples(T, strlen(T));

    // solve_rec(ARR, SORTED, 9);

    // std::cout << ""Max occ: "" << max_occurrence_rec(ARR, 9);

    // for (int i = 0; i < 9; i++) {
    //     std::cout << SORTED[i] << "" "";
    // }

    return 0;
}"
x91m2qU0,Nik,skimono,C++,Sunday 3rd of December 2023 03:39:15 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

//#pragma GCC optimize(""Ofast"")
//#pragma GCC optimize(""no-stack-protector"")
//#pragma GCC optimize(""unroll-loops"")
//#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
//#pragma GCC optimize(""fast-math"")

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef short sh;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
#define int long long
#define degug(x) cerr (#x) << "" "" << (x) << endl;

const ll INF = 1e18 + 3;
const ll inf = 2e10 + 3;
const ll ONE = 1, ZERO = 0;
const ll mod = 1e9 + 7;
const ll m1 = 1e9 + 575179;
const ll m2 = 1e9 + 87;
const ll LG = 31;
const ll k = 347;
//const ll k_sqrt = 400;
//const ll p = 106033;
ld EPS = 1e-7;
ld PI = 3.1415926535897932384;
ld phi = (sqrt(5) + 1.0) / 2.0;
mt19937 rnd(40906);

const int N = 1e5;
vector <int> keys[N + 1];
vector <int> pw_ful[N + 1];
vector <pair <int, int> > sq[N + 1];
int refr[N + 1][300];
int a[N + 1], p[N + 1];
pair <int, pair <int, int> > Q[N];

int gcd(int a, int b) {
    if (a == 0 || b == 0) {
        return a + b;
    }
    if (a > b) {
        return gcd(a % b, b);
    }
    else {
        return gcd(a, b % a);
    }
}

bool mozh(int x, int v, int n) {
    int res = 1;
    for (int i = 0; i < v; i++) {
        res *= x;
        if (res > N) {
            return false;
        }
    }
    if (binary_search(all(pw_ful[n]), res)) {
        return true;
    }
    else {
        return false;
    }
}

int go(int x, int v, int n) {
    int res = 1;
    for (int i = 0; i < v; i++) {
        res *= x;
    }
    for (auto it : sq[res]) {
        if (it.second == n) {
            return it.first;
        }
    }
}

vector <int> solve_smart(int n, int q) {
    int l, r, act, k, i, j, x, mx = -1, vv, nn, vv2, nn2, ans;
    for (i = 1; i <= N; i++) {
        keys[i].clear();
    }
    vector <pair <int, int> > drobi;
    set <pair <int, int> > mzh, sup, sup2;
    vector <int> result, usless;
    for (vv = 1; vv < 18; vv++) {
        for (nn = 1; nn < 18; nn++) {
            x = gcd(vv, nn);
            mzh.insert({ vv / x, nn / x });
        }
    }
    for (i = 1; i <= n; i++) {
        mx = max(mx, a[i]);
        p[i] = p[i - 1] + a[i];
        keys[a[i]].push_back(i);
        usless.push_back(a[i]);
        sup.clear();
        sup2.clear();
        for (vv = 1; vv < 18; vv++) {
            for (nn = 1; nn < 18; nn++) {
                x = gcd(vv, nn);
                if (mozh(a[i], vv / x, nn / x)) {
                    sup.insert({ vv / x, nn / x });
                }
            }
        }
        for (auto it : sup) {
            if (mzh.find(it) != mzh.end()) {
                sup2.insert(it);
            }
        }
        mzh.swap(sup2);
    }
    for (auto it : mzh) {
        drobi.push_back(it);
    }
    sort(all(usless));
    usless.resize(unique(all(usless)) - usless.begin());
    bool poh = (mx == 1) || (drobi.size() == 1);
    for (auto it : usless) {
        for (i = 0; i < drobi.size(); i++) {
            refr[it][i] = go(it, drobi[i].first, drobi[i].second);
        }
    }
    vv = 1, nn = 1;
    for (i = 1; i <= q; i++) {
        act = Q[i].first;
        k = Q[i].second.first;
        l = Q[i].second.first;
        r = Q[i].second.second;
        if (act == 1) {
            vv2 = vv * k;
            nn2 = nn;
            x = gcd(vv2, nn2);
            if (mzh.find({ vv2 / x, nn2 / x }) != mzh.end()) {
                vv = vv2 / x;
                nn = nn2 / x;
            }
        }
        else if (act == 2) {
            vv2 = vv;
            nn2 = nn * k;
            x = gcd(vv2, nn2);
            if (mzh.find({ vv2 / x, nn2 / x }) != mzh.end()) {
                vv = vv2 / x;
                nn = nn2 / x;
            }
        }
        else {
            if (poh) {
                result.push_back(p[r] - p[l - 1]);
                //cout << p[r] - p[l - 1] << endl;
            }
            else {
                ans = 0;
                int num = lower_bound(all(drobi), make_pair(vv, nn)) - drobi.begin();
                for (auto it : usless) {
                    int i1 = lower_bound(all(keys[it]), l) - keys[it].begin();
                    int i2 = upper_bound(all(keys[it]), r) - keys[it].begin();
                    ans += (i2 - i1) * refr[it][num];
                }
                result.push_back(ans);
                //cout << ans << endl;
            }
        }
    }
    return result;
}

vector <int> stupid(int n, int q) {
    vector <int> result;
    int act, k, i, l, r, ans = 0, j, pw;
    vector <int> b(n + 1);
    vector <int> bb(n + 1);
    for (i = 1; i <= n; i++) {
        b[i] = a[i];
    }
    for (int i = 1; i <= q; i++) {
        act = Q[i].first;
        k = Q[i].second.first;
        l = Q[i].second.first;
        r = Q[i].second.second;
        if (act == 1) {
            bb = b;
            bool pzdc = false;
            for (j = 1; j <= n; j++) {
                for (pw = 1; pw < k; pw++) {
                    bb[j] *= b[j];
                    if (bb[j] > N) {
                        pzdc = true;
                        break;
                    }
                }
            }
            if (!pzdc) {
                b = bb;
            }
        }
        else if (act == 2) {
            bb = b;
            bool pzdc = false;
            int idx;
            for (j = 1; j <= n; j++) {
                idx = -1;
                for (auto it : sq[bb[j]]) {
                    if (it.second == k) {
                        idx = it.first;
                    }
                }
                if (idx == -1) {
                    pzdc = true;
                    break;
                }
                bb[j] = idx;
            }
            if (!pzdc) {
                b = bb;
            }
        }
        else {
            ans = 0;
            for (j = l; j <= r; j++) {
                ans += b[j];
            }
            result.push_back(ans);
        }
    }
    return result;
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    //freopen(""input.txt"", ""r "", stdin);
    //freopen(""output.txt"", ""w"", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int n = 3, q = 10;
    for (int i = 1; i <= N; i++) {
        int x = 1;
        for (int j = 1; j <= N; j++) {
            x *= i;
            if (x > N) break;
            pw_ful[j].push_back(x);
            sq[x].push_back({ i, j });
        }
    }
    while (true) {
        for (int i = 1; i <= n; i++) {
            a[i] = abs((int)rnd()) % N + 1;
            cout << a[i] << "" "";
        }
        cout << endl;
        for (int i = 1; i <= q; i++) {
            Q[i].first = abs((int)rnd()) % 3 + 1;
            cout << Q[i].first << "" "";
            if (Q[i].first == 1 || Q[i].first == 2) {
                Q[i].second.first = abs((int)rnd()) % N + 1;
                cout << Q[i].second.first << endl;
            }
            else {
                Q[i].second.first = abs((int)rnd()) % n + 1;
                Q[i].second.second = abs((int)rnd()) % n + 1;
                if (Q[i].second.first > Q[i].second.second) swap(Q[i].second.first, Q[i].second.second);
                cout << Q[i].second.first << "" "" << Q[i].second.second << endl;
            }
        }
        vector <int> r1 = solve_smart(n, q), r2 = stupid(n, q);
        if (r1 != r2) {
            cout << ""Yebat"" << endl;
            for (auto it : r1) {
                cout << it << "" "";
            }
            cout << endl;
            for (auto it : r2) {
                cout << it << "" "";
            }
            cout << endl;
            return 0;
        }
    }
}
//Deisgned by skimono
//Клуб ""Кольца(Серьги)"""
yAmH19DH,PCI,Andrei_Khanenko,C,Sunday 3rd of December 2023 03:37:41 PM CDT,"#include ""stdio.h""
#include ""pci.h""
#include ""sys/io.h""
#include ""stdbool.h""

/*
2.	Если устройство не мост(0-бит поля Header Type =0) вывести  и расшифровать значение полей базовых регистров памяти.
6.	Если устройство не мост(0-бит поля Header Type =0) вывести  и расшифровать значение поля Interrupt Pin.
7.	Если устройство не мост(0-бит поля Header Type =0) вывести  и расшифровать значение поля Interrupt Line.
*/

bool isBridge(unsigned mainAddress) {
    outl(mainAddress + 0x0C, 0xCF8);
    return (inl(0xCFC) >> 16) != 0;
}

void deviceInfo(unsigned registerOutput)
{
    unsigned short vendorName = registerOutput;
    unsigned short deviceName = registerOutput >> 16;
    bool VendorIsFound = false;
    bool DeviceIsFound = false;
    for (int i = 0; i < PCI_VENTABLE_LEN; i++)
        if (VendorIsFound = vendorName == PciVenTable[i].VendorId)
        {
            printf(""Vendor's 16-bit code: %04X\n"", vendorName);
            printf(""Vendor: %s\n"", PciVenTable[i].VendorName);
            break;
        }
    if (VendorIsFound)
    {
        for (int i = 0; i < PCI_DEVTABLE_LEN; i++)
            if (DeviceIsFound = deviceName == PciDevTable[i].DeviceId)
            {
                printf(""Device's 16-bit code: %04X\n"", deviceName);
                printf(""Device: %s\n"", PciDevTable[i].DeviceName);
                break;
            }
        if (!DeviceIsFound)
            printf(""Device not found \n"");
    }
    else
        printf(""Vendor not found \n"");
}

void decodeBAR(unsigned mainAddress) {
    if (!isBridge(mainAddress))
        printf(""Base Address Registers (BARs):\n"");
        for (int i = 0; i < 6; i++)
        {
            outl(mainAddress + 0x10 + i * 4, 0xCF8);
            unsigned barValue = inl(0xCFC);
            bool isMemory = (barValue & 1) == 0;
            bool isPrefetchable = (barValue & 8);
            printf(""BAR %d: %s,"", i + 1, isMemory ? ""Memory"" : ""I/O"");
            switch (barValue & 6) {
                case 0:
                    printf("" Any 32-bit address space\n"");
                    break;
                case 2:
                    printf("" Below 1MB\n"");
                    break;
                case 4:
                    printf("" Any 64-bit address space\n"");
                    break;
                default:
                    printf("" Reserved\n"");
                    break;
            }
            printf(""IsPrefetchable: %s\n"", isPrefetchable ? ""TRUE"" : ""FALSE"");
            printf(""Base address: %08X\n"", barValue >> 4);
        }
}

void decodeInterrupt(unsigned mainAddress)
{
    if(!isBridge(mainAddress))
    {
        outl(mainAddress + 0x3C, 0xCF8);
        unsigned short inter = inl(0xCFC);
        printf(""Interrupt Line: %02X \n"", (unsigned char) inter);
        printf(""Interrupt Pin: %02X \n"", (inter >> 8));
    }
}

void printInfo(int bus, int device, int func) {
    unsigned mainAddress = (1 << 31) + (bus << 16) + (device << 11) + (func << 8);
    unsigned registerAddress = mainAddress;
    outl(registerAddress,0xCF8);
    unsigned registerOutput = inl(0xCFC);
    if ((registerOutput >> 16) != 0xFFFF) {
        printf(""Address: %08X\nBus Number: %02X\nDevice Number: %02X\nFunction Number: %01X\n"", mainAddress, bus, device, func);
        deviceInfo(registerOutput);
        printf(""IsBridge: %s\n"", (isBridge(mainAddress) ? ""True"" : ""False""));
        decodeInterrupt(mainAddress);
        decodeBAR(mainAddress);
        printf(""--------------------------------------------------------------\n"");
    }
}

int main()
{
    if(iopl(3))
    {
        printf(""No access"");
        return -1;
    }
    for (int busNumber = 0; busNumber < 256; busNumber++)
        for (int deviceNum = 0; deviceNum < 32; deviceNum++)
            for (int funcNum = 0; funcNum < 8; funcNum++)
                printInfo(busNumber, deviceNum, funcNum);
    return 0;
}
"
pF0RDm7k,const in backed enum,wisnoskij,PHP,Sunday 3rd of December 2023 03:22:54 PM CDT,"enum Size
{
    case Small;
    case Medium;
    case Large;

    public const Scale = 297/210; // A float
}

enum Page: string{
    case signup = 'index.php';
    case account = 'account.php';
	
	private const $html_page = [Page::signup => 'signup.html', Page::account => 'account.html'];
	public function get_html(): string{
		return($html_page[$this]);
	}
}"
4RF6gusS,advent_code_day2_part1-2,Nasfirith,PHP,Sunday 3rd of December 2023 03:20:05 PM CDT,"<?php

function compare_sets_with_cubes($cube_count_old_set,$set) {

  //removing any space we dont need
  $set = preg_replace('/(^\s)|(\s+$)/', '', $set);
  $ar_set = explode(' ',$set);

  $cube_count = $ar_set[0];
  $cube_color = $ar_set[1];

  if ( $cube_color == 'red' && $cube_count_old_set_red <= $cube_count) {
    echo 'Cube Count old <= Cube Count';
  } else {
    echo 'Cube Count old > Cube Count';
    $cube_count_old_set_red = $cube_count;
  }
  

  // $max_cubes_red = 12;
  // $max_cubes_green = 13;
  // $max_cubes_blue = 14;


  // if ( $cube_color == 'red' && $cube_count <= $max_cubes_red ) {
  //   echo 'Red Cubes possible<br/>';
  //   $check = true;
  // } elseif ( $cube_color == 'red' && $cube_count > $max_cubes_red ) {
  //   echo 'Red Cubes not possible<br/>';
  //   $check = false;
  // }

  // if ( $cube_color == 'blue' && $cube_count <= $max_cubes_blue ) {
  //   echo 'Blue Cubes possible<br/>';
  //   $check = true;
  // } elseif ( $cube_color == 'blue' && $cube_count > $max_cubes_blue ) {
  //   echo 'Blue Cubes not possible<br/>';
  //   $check = false;
  // }

  // if ( $cube_color == 'green' && $cube_count <= $max_cubes_green ) {
  //   echo 'Green Cubes possible<br/>';
  //   $check = true;
  // } elseif ( $cube_color == 'green' && $cube_count > $max_cubes_green ) {
  //   echo 'Green Cubes not possible<br/>';
  //   $check = false;
  // }

  return $cube_count_old_set_red;
}

function main() {


  $fh = fopen('input.txt','r');
  $sum = 0;


  while ($line = fgets($fh)) {
    echo '<br/>-----------------------------------<br/>';
    $line = preg_replace('/\n+/','',$line);

    echo $line .'<br/>';
    $line_array = explode(':',$line);
    $current_game = preg_replace('/\D/', '', $line_array[0]);
    
    echo 'Current Game: ' . $current_game .'<br/>';

    $gamesets = explode('; ',$line_array[1]);

    $number_of_gamesets = count($gamesets);
    echo 'Number of Sets: ' .$number_of_gamesets . '<br/>';

    $cube_count_old_set = 0;
    $cubes = array(
      ""red"" => 0,
      ""blue"" => 0,
      ""green"" => 0
    );

    foreach ($gamesets as $gameset) {
      echo $gameset . '<br/>';
      $single_set = explode(', ',$gameset);

      foreach ($single_set as $set) {
        //echo $set .'<br/>';
        //$cube_count_old_set = compare_sets_with_cubes($cube_count_old_set,$set);
        
        $set = preg_replace('/(^\s)|(\s+$)/', '', $set);
        $ar_set = explode(' ',$set);

        if ($ar_set[0] >= $cubes[$ar_set[1]]) {
          $cubes[$ar_set[1]] = $ar_set[0];
        } else {
          //nischt
        }
      }
    }
    var_dump($cubes);
    //calculate power
    $power = $cubes['red'] * $cubes['blue'] * $cubes['green'];
    $sum += $power;
    echo '<br/>Aktuelle Summe: ' .$sum;

  }

    echo '<br/>'.$sum.'<br/>';

  fclose($fh);
}

main();
?>
"
ZTe0nWQM,First Mining,MigasRocha,Lua,Sunday 3rd of December 2023 03:19:01 PM CDT,"while true do 

if turtle.detect() == true then
    x = x+1
    turtle.digUp()
    turtle.dig()
    turtle.digDown()
    turtle.forward()
else
    turtle.forward()
 
end  
if x == 10 then

turtle.turnRight()
turtle.dig()
turtle.select(16)
if turtle.getItemCount(16) == 0 then
    sleep()
end
turtle.place()
turtle.turnLeft()
turtle.select(1)
x= 1
end
end
"
wBwSpcUQ,Check Tickets 1.2,182days,Python,Sunday 3rd of December 2023 03:16:35 PM CDT,"import pyautogui
import time
import keyboard
import random

responses = [""Reminder to create a ticket for any support you provide to users, either in person or remotely."",""Please ensure you create a ticket for users you support face to face or from direct contacts."",""Remember to make tickets for any support provided during the day."",""Please check the unassigned tickets today and either assign them to yourself or someone else within the wider team best suited to resolve."",""Take a look at the unassigned tickets in SNOW, grab the GB_EUT_L2 ones and distribute the tickets for other assignmemnt groups also."",""Can we empty the unassigned tickets please? If we all check and allocate them out it will distribute the labour."",""Please check your current active tickets and update them with the current progress to keep the team and user updated."",""Update your tickets today please, take 5 mins to ensure the users know we are working on their incidents and requests."",""Take a look at your active tickets and update them, even if they are on hold. Providing updates helps the users know we haven't forgotten about them."",""Close any non-responsive incidents. Multiple attempts to contact a user via multiple methods with no response after 2 days = non-responsive."",""Resolve tickets where you have provided a solution that you are confident will work and the user has not responded in 2 days."",""If a user has not responded to a ticket after 2 days and multiple contact attempts, close the ticket as its likley the issue has resolved itself.""]
time.sleep(5)

TE = random.randint(0, 2)
TicketEverything = responses[(TE)]
UT = random.randint(3, 5)
UnassignedTickets = responses[(UT)]
UPT = random.randint(6, 8)
UpdateTickets = responses[(UPT)]
NR = random.randint(9, 11)
NonResponsive = responses[(NR)]

pyautogui.typewrite(TicketEverything)
pyautogui.hotkey('enter')
time.sleep(10)
pyautogui.typewrite(UnassignedTickets)
pyautogui.hotkey('enter')
time.sleep(10)
pyautogui.typewrite(UpdateTickets)
pyautogui.hotkey('enter')
time.sleep(10)
pyautogui.typewrite(NonResponsive)
pyautogui.hotkey('enter')
"
W6d0RbWA,Untitled,HariBG,C++,Sunday 3rd of December 2023 02:53:28 PM CDT,"#include <iostream>

// 01.Pyramid

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//    int star = 1;
//
//    for (int i = 0; i <= number / 2; ++i) {
//
//        for (int j = number / 2; j > i; --j) {
//            std::cout << "" "";
//        }
//
//        for (int k = 0; k < star; ++k) {
//            std::cout << ""*"";
//        }
//        star += 2;
//        std::cout << std::endl;
//    }
//
//    return 0;
//}


// 02.Hourglass

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//    int star = number;
//
//    for (int i = 0; i <= number / 2; ++i) {
//        for (int j = 0; j < i; ++j) {
//            std::cout << "" "";
//        }
//
//        for (int k = 0; k < star; ++k) {
//            std::cout << ""*"";
//        }
//
//        std::cout << std::endl;
//        star -= 2;
//    }
//
//    return 0;
//}


// 03.Diamond

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//    int star = 1;
//
//    for (int i = 0; i <= number / 2; ++i) {
//
//        for (int j = number / 2; j > i; --j) {
//            std::cout << "" "";
//        }
//
//        for (int k = 0; k < star; ++k) {
//            std::cout << ""*"";
//        }
//        star += 2;
//        std::cout << std::endl;
//    }
//
//    star -= 4;
//
//    for (int i = 1; i <= number / 2; ++i) {
//        for (int k = 0; k < i; ++k) {
//            std::cout << "" "";
//        }
//
//        for (int j = 0; j < star; ++j) {
//            std::cout << ""*"";
//        }
//
//        std::cout << std::endl;
//        star -= 2;
//    }
//
//    return 0;
//}


// 04.Cross Pattern

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//
//    for (int i = 0; i < number / 2; ++i) {
//        for (int j = 0; j < number / 2; ++j) {
//            std::cout << "" "";
//        }
//
//        std::cout << ""*"" << std::endl;
//    }
//
//    for (int k = 0; k < number; ++k) {
//        std::cout << ""*"";
//    }
//
//    std::cout << std::endl;
//
//    for (int i = 0; i < number / 2; ++i) {
//        for (int j = 0; j < number / 2; ++j) {
//            std::cout << "" "";
//        }
//
//        std::cout << ""*"" << std::endl;
//    }
//
//    return 0;
//}


// 05.X Pattern

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//    int freeSpaces = number - 2;
//
//    for (int i = 0; i < number / 2; ++i) {
//        for (int k = 0; k < i; ++k) {
//            std::cout << "" "";
//        }
//                
//        std::cout << ""*"";
//
//        for (int j = 0; j < freeSpaces; ++j) {
//            std::cout << "" "";
//        }
//
//        std::cout << ""*"";
//
//        std::cout << std::endl;
//        freeSpaces -= 2;
//    }
//
//    for (int i = 0; i < number / 2; ++i) {
//        std::cout << "" "";
//    }
//
//    std::cout << ""*"" << std::endl;
//
//    freeSpaces = 1;
//
//    for (int i = 1; i <= number / 2; ++i) {
//        for (int k = number / 2; k > i; --k) {
//            std::cout << "" "";
//        }
//
//        std::cout << ""*"";
//
//        for (int j = 0; j < freeSpaces; ++j) {
//            std::cout << "" "";
//        }
//
//        std::cout << ""*"";
//    
//        std::cout << std::endl;
//        freeSpaces += 2;
//    }    
//
//    return 0;
//}


// 06.Checkerboard

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//
//    for (int row = 1; row <= number; ++row) {
//
//        if (row & 1 == 1) {
//            for (int j = 0; j < number; ++j) {
//                std::cout << ""* "";
//            }
//        }
//        else {
//            for (int k = 0; k < number; ++k) {
//                std::cout << "" *"";
//            }
//        }
//
//        std::cout << std::endl;        
//    }
//
//    return 0;
//}


// 07.Number Pattern

//int main() {
//    int number;
//    std::cout << ""Enter number: "";
//    std::cin >> number;
//
//    for (int i = 1; i <= number; ++i) {
//        for (int j = 0; j < i; ++j) {
//            std::cout << i;
//        }
//        std::cout  << std::endl;
//    }
//
//    return 0;
//}


// 08.Spiral Pattern

int main() {
    int number;
    std::cout << ""Enter number: "";
    std::cin >> number;
    int firstCol = number * 2 - 1;

    int secondRowLength = 0;
    int currNum = firstCol + 1;

    for (int x = 0; x < number; ++x) {

        if (currNum > 9) {
            secondRowLength += 2;
        }
        else {
            secondRowLength += 1;
        }

        if (secondRowLength >= number) {
            break;
        }

        currNum++;
    }

    int secondColNums = currNum + (number - 1);
    int freeSpaces;
    int lastNum = secondColNums;

    // Printing first row
    for (int i = 1; i <= number; ++i) {
        std::cout << i;
    }
  
    std::cout << std::endl;

    // Printing cols
    for (int j = number + 1; j <= firstCol; ++j) {
        std::cout << lastNum;

        if (lastNum > 9) {
            freeSpaces = number - 2;
        }
        else {
            freeSpaces = number - 1;
        }

        if (j > 9) {
            freeSpaces -= 2;
        }
        else {
            freeSpaces -= 1;
        }


        for (int k = 0; k < freeSpaces; ++k) {
            std::cout << "" "";
        }

        std::cout << j << std::endl;
        lastNum--;
    }
   
    // Printng second row
    for (int y = currNum; y > firstCol; --y) {
        std::cout << y;
    }

    return 0;
}
"
eG8RSHdJ,ACE Busses YAML config demo 1,thehunmonkgroup,YAML,Sunday 3rd of December 2023 02:41:15 PM CDT,"resources:
  layer_1:
    subscribes_to:
      - layer_1
    # restricted_publish_exchanges: []
    default_pathways:
      southbound:
        - layer_2
  layer_2:
    subscribes_to:
      - layer_2
    # restricted_publish_exchanges: []
    default_pathways:
      northbound:
        - layer_1
      southbound:
        - layer_3
  layer_3:
    subscribes_to:
      - layer_3
    # restricted_publish_exchanges: []
    default_pathways:
      northbound:
        - layer_2
      southbound:
        - layer_4
  layer_4:
    subscribes_to:
      - layer_4
    # restricted_publish_exchanges: []
    default_pathways:
      northbound:
        - layer_3
      southbound:
        - layer_5
  layer_5:
    subscribes_to:
      - layer_5
    # restricted_publish_exchanges: []
    default_pathways:
      northbound:
        - layer_4
      southbound:
        - layer_6
  layer_6:
    subscribes_to:
      - layer_6
    # restricted_publish_exchanges: []
    default_pathways:
      northbound:
        - layer_5

exchanges:
  layer_1: {}
  layer_2: {}
  layer_3: {}
  layer_4: {}
  layer_5: {}
  layer_6: {}

queues:
  layer_1: {}
  layer_2: {}
  layer_3: {}
  layer_4: {}
  layer_5: {}
  layer_6: {}

bindings:
  - exchange: layer_1
    queue: layer_1
  - exchange: layer_2
    queue: layer_2
  - exchange: layer_3
    queue: layer_3
  - exchange: layer_4
    queue: layer_4
  - exchange: layer_5
    queue: layer_5
  - exchange: layer_6
    queue: layer_6"
3R2rSTUc,Untitled,Enderlook,C#,Sunday 3rd of December 2023 02:41:13 PM CDT,"using System.Diagnostics;
using System.Runtime.CompilerServices;
using System;

public unsafe class C {
    private int StateArrayIndex;
    private int StateIndex;
    
    private static void Main()
    {
        C c = new();
        int a = 54641;
        c.Write(a);
        int b = c.Read<int>();
        Console.WriteLine($""{a} {b} {a == b}"");
    }
    
    public void Write<T>(T value)
    {
        Debug.Assert(sizeof(int) * 2 - sizeof(byte) == 7);
        Debug.Assert(Unsafe.SizeOf<T>() <= 7);
        byte* bytes = stackalloc byte[8];
        Unsafe.WriteUnaligned(&bytes[1], value);
        Unsafe.CopyBlockUnaligned(bytes, &bytes[1], 3);
        bytes[3] = byte.MaxValue - 1;
        StateArrayIndex = Unsafe.ReadUnaligned<int>(bytes);
        StateIndex = Unsafe.ReadUnaligned<int>(&bytes[4]);
        Debug.Assert(StateArrayIndex < -1);
    }
    
    public T Read<T>()
    {        
        Debug.Assert(sizeof(int) * 2 - sizeof(byte) == 7);
        Debug.Assert(Unsafe.SizeOf<T>() <= 7);
        byte* bytes = stackalloc byte[8];
        Unsafe.WriteUnaligned(bytes, StateArrayIndex);
        Unsafe.WriteUnaligned(&bytes[4], StateIndex);
        Unsafe.CopyBlockUnaligned(&bytes[1], bytes, 3);
        return Unsafe.ReadUnaligned<T>(&bytes[1]);
    }
}"
Ds7GGmux,autoupdater,Voxel3042,Lua,Sunday 3rd of December 2023 02:20:42 PM CDT,"------------------------------------------------------------
-- fetch (Computer Craft)
-- This program fetches pastebins based on an internal table
-- To use run: fetch programname
------------------------------------------------------------
 
-- Table of <program name, pastebin string> pairs
local progTable = {
    {""core"", ""rLwNuCyc"", true},
}
 
function update(target)
    local name = target[1] .. "".lua""
    local res1 = shell.run(""rm"", name)
    local res2 = shell.run(""pastebin"", ""get"", target[2], name)
    
    if (res1 and res2) then
    	print(""Script "" .. name .. "" updated!"")
        if target[3] == true then
            shell.run(name)
            print(""Script runned!"")
        end
    else
        print(""Update error!"")
    end
end

for k, v in pairs(progTable) do
	update(v)
end"
2UbXdeHs,CODE11 include baserou2.s,glokyfull,Motorola 68000 HiSoft Dev,Sunday 3rd of December 2023 02:13:27 PM CDT,"DEBUG2	equ 0

;
; routine de bases
;

; utilisation
;	lea rammovem,a0			; un buffer de 2294 octet
;	jsr prepclear32000		; a appeller un fois genere le code d'effacement de 32000 octet
;	

;  ***********************************************
prepclear32000		; a appeler qu'une fois
; a0 = ram de 571*4 movem repveté +4 dernier movem +4 lea +2 rts   2294 octet
; 14*4=56 32000/56 = 571  reste 24 octet


	move.l a0,d0
	move.l d0,clrauto1+2

	move.w #571-1,d0
	lea instruction,a1
	move.l (a1)+,d1
	move.l d1,(a0)+			; lea 32000(a0),a0
	move.l (a1)+,d1
.loop	move.l d1,(a0)+
	dbf d0,.loop
	move.l (a1)+,d1
	move.l d1,(a0)+
	move.w #$4e75,(a0)+
	rts
	


instruction
	lea 32000(a0),a0
	movem.l d0-d7/a1-a6,-(a0)
	movem.l d0-d5,-(a0)

clear32000:			; ne jamais appeler sans avoir au moins une fois appeler prepclear32000
; a0 = screen			; avec a0 = buffer de 2294 octets libre
	moveq #0,d0
	move.l d0,d1
	move.l d0,d2
	move.l d0,d3
	move.l d0,d4
	move.l d0,d5
	move.l d0,d6
	move.l d0,d7
	move.l d0,a1
	move.l d0,a2
	move.l d0,a3
	move.l d0,a4
	move.l d0,a5
	move.l d0,a6
clrauto1	jmp $00000000
instruction_movem

	movem.l d0,-(a0)

	dc.w %1100000000000000
	dc.w %1110000000000000
	dc.w %1111000000000000
	dc.w %1111100000000000
	dc.w %1111110000000000
	dc.w %1111111000000000
	dc.w %1111111100000000
	dc.w %1111111101000000
	dc.w %1111111101100000
	dc.w %1111111101110000

	dc.w %1111111101111000
	dc.w %1111111101111100
	dc.w %1111111101111110


;prepclear_arbitrary  ; efface un nombre x paire dans d0 element dans a0
;; a0 = ram ou le code sera genere
;
;	lea instruction,a1
;	move.w (a1),d2
;	move.w d2,(a0)+
;	move.w d0,(a0)+	   lea x(a0),a0
;
;	divu #14*4,d0
;	move.l d0,d1
;	swap d1			; d1 = reste de 14*4
;	lea instruction_movem,a2
;
;	tst.w d1
;	beq.s .zero
;	lsr #2,d1 		; d1/4 = nombre de registre
;	beq.s .word
;	move.w (a2)+,(a0)+
;  	subq #1,d1
 ; 	add.w d1,d1
 ; 	add.w d1,d1
 ;   move.w (a2,d1),(a0)+
;
;
;	
;   14*4 octet
;	movem.l d0-d7/a1-a6,-(a0)
;
;
;
;	move.l a0,d0
;	move.l d0,clrauto2+2
;
;	move.w #571-1,d0
;	lea instruction,a1
;	move.l (a1)+,d1
;	move.l d1,(a0)+			; lea 32000(a0),a0
;	move.l (a1)+,d1
;.loop	move.l d1,(a0)+
;	dbf d0,.loop
;	move.l (a1)+,d1
;	move.l d1,(a0)+
;	move.w #$4e75,(a0)+
;	rts


clear1024a0
	movem.l d0-d7/a1-a6,-(sp)
	moveq #0,d0
	move.l d0,d1
	move.l d0,d2
	move.L d0,d3
	move.l d0,d4
	move.l d0,d5
	move.l d0,d6
	move.l d0,d7
	move.l d0,a1
	move.l d0,a2
	move.l d0,a3
	move.l d0,a4
	move.l d0,a5
	move.l d0,a6
	lea 1024(a0),a0
	rept 18
	movem.l d0-d7/a1-a6,-(a0)
	endr
	movem.l d0-d3,-(a0)
	movem.l (sp)+,d0-d7/a1-a6
	rts


prepclearoneplan
; a0 = ram 2 moveq d0 + 2 rts +4000*4 move.w d0,dep(a0) = 16004 octet

	move.l a0,d0
	move.l d0,clearoneplan+2
	lea .instruction,a1
	move.w (a1)+,d1
	move.w d1,(a0)+
	move.w #3999,d0
.loop	move.l d1,(a0)+
	addq.w #8,d1
	dbf d0,.loop
	move.w #$4e75,(a0)+
	

.instruction
	moveq #0,d0
	move.w d0,$0000(a0)

clearoneplan:
; a0 = screen + 2*numero de plan de 0 a 3
	jmp $000000
mjj_sys_init:
	movem.l		d0-d7/a0-a6,-(sp)

	clr.l		-(sp)				; super mode
	move.w		#$20,-(sp)
	trap		#1
	addq.l		#6,sp
	move.l		d0,_mjj_stack

	move.w		#$2700,sr			; disable ints

	lea			_mjj_res,a1

	move.b		$FFFF8260.W,(a1)+	; store resolution
	move.b		$FFFF820A.W,(a1)+	; store frequency
	move.w		$FFFF820E.W,(a1)+	; store line width
	move.b		$FFFF8265.W,(a1)+	; store screen shift
	move.b		$44F.W,(a1)+		; store screen
	move.b		$450.W,(a1)+
	move.b		$451.W,(a1)+

	move.b		$FFFFFA07.W,(a1)+	; store mfp
	move.b		$FFFFFA13.W,(a1)+
	move.b		$FFFFFA09.W,(a1)+
	move.b		$FFFFFA15.W,(a1)+
	move.b		$FFFFFA17.W,(a1)+
	move.b		$FFFFFA19.W,(a1)+
	move.b		$FFFFFA1B.W,(a1)+
	move.b		$FFFFFA1D.W,(a1)+

	lea			$100.W,a0
	REPT 16
		move.l	(a0)+,(a1)+			; store mfp vectors
	ENDR

	move.l		$68.W,(a1)+			; store hbl
	move.l		$70.W,(a1)+			; store vbl
	move.w		$484.W,(a1)+		; store keyboard

	lea			$FFFF8240.W,a0		; store & clear palette
	move.w		(a0),d0
	REPT 16
		move.w	(a0),(a1)+
		IFEQ	DEBUG2
		move.w	d0,(a0)+
		ENDC
	ENDR

;	IFNE		FOR_MEGASTE
;	bsr			_megaste_init
;	ENDIF

;	IFNE		FOR_FALCON
;	bsr			_falcon_init
;	ENDIF

	IFEQ		DEBUG2
	clr.b		$FFFFFA07.W			; disable timers
	clr.b		$FFFFFA13.W
	clr.b		$FFFFFA09.W
	clr.b		$FFFFFA15.W
	ENDC

	IFEQ		DEBUG2
	move.b		#2,$FFFF820A.W		; 50hz
	clr.b		$FFFF8260.W			; low res
	ENDC

	move.l		#mjj_vbl,$70.W		; setup vbl

	move.w		#$2300,sr			; enable ints

	bsr			_disable_mouse		; bybye mouse
	bsr			_ikbd_flush			; flush keyboard

	movem.l		(sp)+,d0-d7/a0-a6
	rts

;-----------------------------------------------------------------------------
; mjj_sys_fini : restore sys
;-----------------------------------------------------------------------------

mjj_sys_fini:
	movem.l		d0-d7/a0-a6,-(sp)

	bsr			_ikbd_flush			; flush keyboard

	move.w		#$2700,sr			; disable ints

	lea			_mjj_res,a0

	move.b		(a0)+,$FFFF8260.W	; restore resolution
	move.b		(a0)+,$FFFF820A.W	; restore frequency
	move.w		(a0)+,$FFFF820E.W	; restore line width
	move.b		(a0)+,$FFFF8265.W	; restore screen shift
	move.b		(a0)+,$FFFF8201.W	;
	move.b		(a0)+,$FFFF8203.W	; restore screen
	move.b		(a0)+,$FFFF820D.W	;

	move.b		(a0)+,$FFFFFA07.W	; restore mfp
	move.b		(a0)+,$FFFFFA13.W
	move.b		(a0)+,$FFFFFA09.W
	move.b		(a0)+,$FFFFFA15.W
	move.b		(a0)+,$FFFFFA17.W
	move.b		(a0)+,$FFFFFA19.W
	move.b		(a0)+,$FFFFFA1B.W
	move.b		(a0)+,$FFFFFA1D.W

	lea			$100.W,a1
	REPT 16
		move.l	(a0)+,(a1)+			; restore mfp vectors
	ENDR

	move.l		(a0)+,$68.W			; restore hbl
	move.l		(a0)+,$70.W			; restore vbl
	move.w		(a0)+,$484.W		; restore keyboard

	lea			$FFFF8240.W,a1		; restore palette
	REPT 8
		move.l	(a0)+,(a1)+
	ENDR

	;IFNE		FOR_MEGASTE
	;bsr			_megaste_fini
	;ENDIF

	;IFNE		FOR_FALCON
	;bsr			_falcon_fini
	;ENDIF

	move.w		#$2300,sr			; enable ints

	bsr			_enable_mouse		; might be usefull

	move.l		_mjj_stack,-(sp)	; user mode
	move.w		#$20,-(sp)
	trap		#1
	addq.l		#6,sp

	movem.l		(sp)+,d0-d7/a0-a6
	rts

;-----------------------------------------------------------------------------
_disable_mouse:
;-----------------------------------------------------------------------------
	btst		#1,$FFFFFC00.W
	beq.s		_disable_mouse
	move.b		#$12,$FFFFFC02.W
	rts

;-----------------------------------------------------------------------------
_enable_mouse:
;-----------------------------------------------------------------------------
	btst		#1,$FFFFFC00.W
	beq.s		_enable_mouse
	move.b		#$8,$FFFFFC02.W
	rts

;-----------------------------------------------------------------------------
_ikbd_flush:
;-----------------------------------------------------------------------------
	bsr			waitvbl
	btst.b		#0,$FFFFFC00.W
	beq.s		.exit
	tst.b		$FFFFFC02.W
	bra.s		_ikbd_flush
.exit:
	rts

;	IFNE		FOR_MEGASTE
;-----------------------------------------------------------------------------
;
;_megaste_init:
;	cmpi.w		#MCH_MEGASTE,mjj_sysmch
;	bne.s		.no
;	move.b		$FFFF8E21.W,_mjj_mste
;	clr.b		$FFFF8E21.W
;.no:
;	rts
;
;_megaste_fini:
;	cmpi.w		#MCH_MEGASTE,mjj_sysmch
;	bne.s		.no
;	move.b		_mjj_mste,$FFFF8E21.W
;.no:
;	rts
;
;-----------------------------------------------------------------------------
;	ENDC

;	IFNE		FOR_FALCON
;-----------------------------------------------------------------------------
;
;_falcon_init:
;	cmpi.w		#MCH_FALCON30,mjj_sysmch
;	blt.s		.no
;	nop									; TODO
;.no:
;	rts
;
;_falcon_fini:
;	cmpi.w		#MCH_FALCON30,mjj_sysmch
;	blt.s		.no
;	nop									; TODO
;.no:
;	rts
;
;;-----------------------------------------------------------------------------
;	ENDIF

mjj_vbl:
;	jsr		_mjj_vbl_voidfn		; fn proc;
;	jsr		_mjj_vbl_voidfn		; zik proc
;	st		_mjj_vblflag

	addq.l #1,$466.w
	rte

;=============================================================================
				SECTION BSS
;=============================================================================


mjj_sysmch:		ds.w	1
_mjj_stack:		ds.l	1

_mjj_res:		ds.b	1			; screen resolution
_mjj_freq:		ds.b	1			; screen frequency
_mjj_linew:		ds.w	1			; screen line width
_mjj_shift:		ds.b	1			; screen shift
_mjj_scr:		ds.b	3			; screen ptr
_mjj_mfp:		ds.b	8			; mfp setup
_mjj_vec:		ds.l	16			; mfp vectors
_mjj_hbl:		ds.l	1			; system hbl
_mjj_vbl:		ds.l	1			; system vbl
_mjj_conterm:	ds.w	1			; keyboard conf
_mjj_pal:		ds.w	16			; system palette

_mjj_mste:		ds.w	1			; megaste cache & bus


;=============================================================================
;				END
;=============================================================================

rammovem	ds.b 2294
"
EbE29K63,Untitled,Tkap1,C++,Sunday 3rd of December 2023 01:38:35 PM CDT,"template <typename value_type, typename curve_type>
func value_type get_value_from_curve(float percent, value_type default_value, s_sarray<curve_type, 8> curve)
{
	m_timed_function();
	curve_type left = zero;
	curve_type right = zero;
	if(curve.count == 0) {
		left = zero;
		left.value = default_value;
		right = left;
	}
	else if(curve.count == 1) {
		left = curve[0];
		right = left;
	}
	else {
		for(int point_i = 0; point_i < curve.count - 1; point_i++) {
			auto a = curve[point_i];
			auto b = curve[point_i + 1];
			if(percent >= a.percent && percent <= b.percent) {
				left = a;
				right = b;
			}
		}
	}
	value_type left_value = left.value;
	value_type right_value = right.value;

	float bar = ilerp(left.percent, right.percent, percent);
	switch(left.curve_type) {
		case e_curve_type_linear: {

		} break;
		case e_curve_type_ease_in: {
			bar = powf(bar, 4);
		} break;
		case e_curve_type_ease_out: {
			bar = powf(bar, 0.25f);
		} break;
		case e_curve_type_instant: {
			bar = 0;
		} break;

		invalid_default_case;
	}

	return lerp(left_value, right_value, bar);
}"
gGYAq08v,NuevaAPIdeHanner2,LeanCoder0852,C#,Sunday 3rd of December 2023 01:30:17 PM CDT,NewApiHanner3
Xeuwf75R,Untitled,EvEnSGRIANch,Rust,Sunday 3rd of December 2023 12:49:30 PM CDT,"use regex::Regex;
use std::collections::HashSet;
use std::io::{self, BufRead};

fn main() {
    let re_tokens = Regex::new(r""([0-9]+)|([^0-9.]+)"").unwrap();
    let stdin = io::stdin();
    let mut res: i32 = 0;
    let mut number_positions: Vec<(i32, (i32, i32))> = Vec::new();
    let mut position_parts: HashSet<(i32, i32)> = HashSet::new();

    for (line_no, line) in stdin.lock().lines().enumerate() {
        let haystack = &line.unwrap();
        let tokens = re_tokens.find_iter(haystack);
        for token in tokens {
            // println!(""{}"", token.as_str());
            match token.as_str().parse::<i32>() {
                Ok(ok) => {
                    number_positions.push((
                        ok,
                        (
                            line_no.try_into().unwrap(),
                            token.start().try_into().unwrap(),
                        ),
                    ));
                }
                Err(_e) => {
                    let _ = position_parts.insert((
                        line_no.try_into().unwrap(),
                        token.start().try_into().unwrap(),
                    ));
                }
            }
        }
    }
    for (value, (row, col)) in number_positions {
        let len: i32 = value.to_string().len().try_into().unwrap();
        for i in col - 1..col + len + 1 {
            if position_parts.contains(&(row - 1, i))
                || position_parts.contains(&(row, i))
                || position_parts.contains(&(row + 1, i))
            {
                res += value;
                break;
            }
        }
    }
    print!(""{}"", res);
}
"
Hu1j0iKr,Advent of code 2023 day 3,hhoppe,Python,Sunday 3rd of December 2023 12:18:57 PM CDT,"def day3(s, *, part2=False):
  grid = np.array([list(line) for line in s.splitlines()])

  def is_symbol(ch):
    return not (ch.isdigit() or ch == '.')

  def neighbors(yx):
    dyxs = tuple(set(itertools.product((-1, 0, 1), repeat=2)) - {(0, 0)})
    for dyx in dyxs:
      y, x = yx[0] + dyx[0], yx[1] + dyx[1]
      if 0 <= y < grid.shape[0] and 0 <= x < grid.shape[1]:
        yield y, x

  def number_span(y, x):
    while x > 0 and grid[y, x - 1].isdigit():  # Move to first digit.
      x -= 1
    start_x = x
    while x < grid.shape[1] and grid[y, x].isdigit():
      x += 1
    return y, start_x, x

  def adjacent_number_spans(yx):
    return {number_span(*yx2) for yx2 in neighbors(yx) if grid[yx2].isdigit()}

  def get_value(y, x_start, x_stop):
    return int(''.join(grid[y, x_start:x_stop]))

  if part2:
    yxs = (yx for yx, ch in np.ndenumerate(grid) if ch == '*')
    gears = (spans for yx in yxs if len(spans := adjacent_number_spans(yx)) == 2)
    return sum(math.prod(get_value(*span) for span in gear) for gear in gears)

  else:
    yxs = (yx for yx, ch in np.ndenumerate(grid) if is_symbol(ch))
    spans = set.union(*(adjacent_number_spans(yx) for yx in yxs))
    return sum(get_value(*span) for span in spans)"
jVYwdHb4,Untitled,MNNM2021,Python,Sunday 3rd of December 2023 12:16:18 PM CDT,"pattern = r""(@|#)+([a-z]{3,})(@|#)+(.?[^a-zA-Z0-9])*(\d+)\/+""

# (@|#)+ - едно от двете, без ограничение на бройката, но поне едно има

# ([a-z]{3,}) - само малки букви, от 3 нагоре. 


# (.?[^a-zA-Z0-9])*   - това отговаря на условието, може да има, може и да няма всякакви знаци, но без букви и цифри
. - хваща всички знаци
? след нея - може да има, може да няма
^ - без малки и големи букви, без цифри. Ако се ползва като вариант \W - тук се включват освен букви и долна черта. Трябва да се премахне
* към групата - пак може да има едно или повече, може да няма


# (\d+)\/+ - само цифри, поне една на брой и завършва на / също поне една на брой

В регекса се посочват групите:
цветовете - група 2
количеството - група 5"
UNttQ4bR,Untitled,Shiny_,C++,Sunday 3rd of December 2023 12:04:42 PM CDT,"// Fill out your copyright notice in the Description page of Project Settings.

#include ""LD_Character.h""
#include ""GameFramework/CharacterMovementComponent.h""

// Sets default values
ALD_Character::ALD_Character(): SelfReference(this) // Initialize SelfReference in the constructor initializer list
{
    PrimaryActorTick.bCanEverTick = true;

    // Initialize other variables
    bIsSprinting = false;
    CurrentSprintDuration = 0.0f;
    SprintStartTime = 0.0f;
    MaxSprintDuration = 10.0f;
    WalkSpeed = 600.0f;
    SprintSpeed = 10000.0f;
}

// Called when the game starts or when spawned
void ALD_Character::BeginPlay()
{
	Super::BeginPlay();
	
}

// Called every frame
void ALD_Character::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

// Called to bind functionality to input
void ALD_Character::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
	Super::SetupPlayerInputComponent(PlayerInputComponent);

}

void ALD_Character::UpdateSprintSpeed()
{
    if (!bIsSprinting)
    {
        return;
    }

    // Calculate how long we have been sprinting
    CurrentSprintDuration = GetWorld()->GetTimeSeconds() - SprintStartTime;

    // Ensure we do not exceed the max sprint duration
    CurrentSprintDuration = FMath::Clamp(CurrentSprintDuration, 0.0f, MaxSprintDuration);

    // Interpolate between walk speed and sprint speed based on the current sprint duration
    float SprintAlpha = CurrentSprintDuration / MaxSprintDuration;
    float NewSpeed = FMath::Lerp(WalkSpeed, SprintSpeed, SprintAlpha);

    // Update the character's movement component with the new speed
    GetCharacterMovement()->MaxWalkSpeed = NewSpeed;
}"
jNRJxDC9,Untitled,Shiny_,C++,Sunday 3rd of December 2023 12:04:20 PM CDT,"// LD_Character.h

#pragma once

#include ""CoreMinimal.h""
#include ""GameFramework/Character.h""
#include ""LD_Character.generated.h""

UCLASS()
class LD_API ALD_Character : public ACharacter // TY KURWO JEBANA
{
    GENERATED_BODY()

public:
    // Sets default values for this character's properties
    ALD_Character();

protected:
    // Called when the game starts or when spawned
    virtual void BeginPlay() override;

    // Variables
    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    bool bIsSprinting;

    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    float CurrentSprintDuration;

    UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = ""Character Movement"")
    float SprintStartTime;

    UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = ""Character Movement"")
    float MaxSprintDuration;

    UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = ""Character Movement"")
    float WalkSpeed;

    UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = ""Character Movement"")
    float SprintSpeed;

    // Functions
    UFUNCTION(BlueprintCallable, Category = ""Character Movement"")
    void UpdateSprintSpeed(); // No need for parameters if we're calling on `self`

    ALD_Character* SelfReference;
public:
    // Called every frame
    virtual void Tick(float DeltaTime) override;

    // Called to bind functionality to input
    virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;
};
"
nGULQMWN,111,MagmaLP,Lua,Sunday 3rd of December 2023 11:44:36 AM CDT,"-- Funktion, um die Datei mit dem Standard-Editor zu öffnen
function openFileInEditor(filename)
    -- Der Befehl kann je nach Betriebssystem variieren
    local os_type = io.popen(""uname""):read(""*l"") -- Lies das Betriebssystem (für Unix-basierte Systeme)
    local command = """"

    -- Befehl zur Dateiöffnung je nach Betriebssystem
    if os_type == ""Windows"" then
        command = ""start "" .. filename -- Der Befehl für Windows
    else
        command = ""open "" .. filename -- Der Befehl für Unix-basierte Systeme (z.B. macOS, Linux)
    end

    -- Ausführen des Befehls in der Konsole
    os.execute(command)
end

-- Benutzereingabe für den Dateinamen
io.write(""Gib den Dateinamen ein, den du öffnen möchtest: "")
local filename = io.read()

-- Aufruf der Funktion, um die Datei zu öffnen
openFileInEditor(1)
"
sjXUPhyD,Untitled,Nanoic,C++,Sunday 3rd of December 2023 11:07:43 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    std::cout << ""Hello World!\n"";
    int n = 0;

    cout << n << endl;

    while (n < 100){       
        
        n++;

        if (n / 2 == 0) {
            n = 3 * n + 1;
            cout << n  << endl;
        }
        else if (n / 2 == 1) {
            
            cout << n  << endl;
            n++;
            
        }
    }

}
"
QjWxz1pL,jquery_dinamic_page,dhiforester,PHP,Sunday 3rd of December 2023 11:06:05 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
    <head>
        <meta charset=""UTF-8"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
        <title>My Aplication</title>
        <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"" crossorigin=""anonymous"">
        <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"" crossorigin=""anonymous""></script>
        <link rel=""canonical"" href=""https://getbootstrap.com/docs/5.3/examples/navbar-fixed/"">
        <link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/@docsearch/css@3"">
        <link href=""css/style.css"" rel=""stylesheet"">
    </head>
    <body class=""bg-info"">
        <nav class=""navbar navbar-expand-md navbar-dark fixed-top bg-dark"">
            <div class=""container-fluid"">
                <a class=""navbar-brand"" href="""">My Aplication</a>
                <button class=""navbar-toggler"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#navbarCollapse"" aria-controls=""navbarCollapse"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                    <span class=""navbar-toggler-icon""></span>
                </button>
                <div class=""collapse navbar-collapse"" id=""navbarCollapse"">
                    <ul class=""navbar-nav me-auto mb-2 mb-md-0"">
                        <li class=""nav-item"">
                            <a class=""nav-link active"" aria-current=""page"" href="""">Home</a>
                        </li>
                        <li class=""nav-item"">
                            <a class=""nav-link"" href=""javascript:void(0);"" id=""KeHalaman1"">Halaman-1</a>
                        </li>
                        <li class=""nav-item"">
                            <a class=""nav-link"" href=""javascript:void(0);"" id=""KeHalaman2"">Halaman-2</a>
                        </li>
                        <li class=""nav-item"">
                            <a class=""nav-link"" href=""javascript:void(0);"" id=""KeHalaman3"">Halaman-3</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <main class=""container"">
            <div class=""bg-body-tertiary p-5 rounded"" id=""MenampilkanHalaman"">
                
            </div>
        </main>
    </body>
</html>"
TG7zg7SG,Count number of hops,jayati,C++,Sunday 3rd of December 2023 11:02:24 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

class Solution
{
    public:
    //Function to count the number of ways in which frog can reach the top.
    long long countWays(int n)
    {
          int mod = 1000000007;
        long long dp[n+1];
        dp[0] = 1;
        
        for(int i=1;i<n+1;i++) 
            dp[i] = 0;
            
        for(int i=1;i<n+1;i++){
            dp[i] += dp[i-1]%mod;
            
            if(i>1)
                dp[i] += dp[i-2]%mod;
            if(i>2)
                dp[i] += dp[i-3]%mod;
        }
        return dp[n]%mod;
        
    }
};


//{ Driver Code Starts.
int main()
{
    //taking testcases
	int t;
	cin >> t;
	
	while(t--)
	{
	    //taking number of steps in stair
		int n;
		cin>>n;
		Solution ob;
		//calling function countWays()
		cout << ob.countWays(n) << endl;
	}
    
    return 0;
    
}

// } Driver Code Ends"
g3UC2uma,Finding least time for curves,NUCLEARESOL,C#,Sunday 3rd of December 2023 11:00:57 AM CDT,"using System;
using System.Diagnostics;
using System.Threading;
using System.Globalization;

class Program
{

    static void Main()
    {
        int version = 1;
        string type = ""circle"";
        double gravitationalA = 9.81d;
        double[] startPoint = { 5,10};
        double[] endpoint = { 0, 0 };
        const Boolean calculateDistance = false;

        Console.WriteLine(""Following Variables are used:"");
        Console.WriteLine(""Gravitational Accel: "" + gravitationalA + "" m/s"");
        Console.WriteLine(""Goal: "" + endpoint[0] + "","" + endpoint[1]);
        Console.WriteLine(""Start: "" + startPoint[0] + "","" + startPoint[1]);
        Console.WriteLine(""Calculate Distance"" + calculateDistance);
        Console.WriteLine(""y/n"");
        string confirmation = Console.ReadLine();

        if (confirmation != ""y"")
        {
            Console.WriteLine("""");
            Console.WriteLine(""Abort, Please change the variable"");
            Console.WriteLine(""graph type"");
            type = Console.ReadLine();
            Console.WriteLine(""Gravitational Acceleration"");
            gravitationalA = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            Console.WriteLine(""Start Point X"");
            startPoint[0] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            Console.WriteLine(""Start Point Y"");
            startPoint[1] = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture.NumberFormat);
            Console.WriteLine("""");
            Console.WriteLine(""Following Variables are used:"");
            Console.WriteLine(""Gravitational Accel: "" + gravitationalA + "" m/s"");
            Console.WriteLine(""Goal: "" + endpoint[0] + "","" + endpoint[1]);
            Console.WriteLine(""Start: "" + startPoint[0] + "","" + startPoint[1]);
            //Thread.Sleep(3000);
        }

        // Console.WriteLine("""");
        // Console.WriteLine(""Starting calculation"");
        double x = startPoint[0];
        double velX = 0f;
        const double timestep = 0.0001f;
        double time = 0f;
        double initialCollvar = 1;
        double initialCollvarStep = 0.1f;
        double zeroInAccuracy = 0.0001f;
        double maxTime = double.PositiveInfinity;
        double limit = 400;
        string strg = """";
        Console.WriteLine(limit);
        var start = Process.GetCurrentProcess().TotalProcessorTime;
        int i = 0;
        static double NewtonsMethod(double target, double initialGuess, double tolerance, int maxIterations)
        {
            double x = initialGuess;

            for (int i = 0; i < maxIterations; i++)
            {
                double fx = (2 * x - Math.Sin(2 * x)) / (1 - Math.Cos(2 * x));
                double derivative = -2 * ((x / Math.Tan(x)) - 1) * Math.Pow(1 / Math.Sin(x), 2);
                Console.WriteLine(x + "" "" + fx + "" "" + derivative);
                //Thread.Sleep(1000);
                if (Math.Abs(fx - target) < tolerance)
                {
                    Console.WriteLine($""Converged after {i} iterations."");
                    return x;
                }

                x = x - (fx - target) / derivative;
            }

            Console.WriteLine(""Did not converge within the specified number of iterations."");
            return x;
        }

        Tuple<double, double> calculateAcceleration(double X, double collVar, double depvar1, double depvar2)
        {
            double localSlope = 2.0f * collVar * (X - depvar1);

            //Console.WriteLine(-(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA));
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }
        Tuple<double, double> calculateAccelerationCircle(double X, double Y, double collVar, double h, double k)
        {
            double localSlope = (h - X) / (Y - k);

            //return -(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA);
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }
        Tuple<double, double> calculateAccelerationCubic(double X, double collVar, double h, double k)
        {
            double localSlope = collVar*3.0d*Math.Pow(X-h,2.0);

            //return -(float)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA);
            return Tuple.Create(-(double)(Math.Cos(Math.Atan(1f / localSlope)) * Math.Sin(Math.Atan(1f / localSlope)) * gravitationalA), localSlope);
        }

        Console.WriteLine(strg);
        Console.WriteLine("""");
        strg = """";
        Tuple<double, double, double, double> CalculateTimeParabola(double initialCollvar)
        {
            double h = 0;
            double k = 0;
            double distance = 0;
            double deltaX = 0;
            i = i + 1;
            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            h = 0.5f * (startPoint[0] - (startPoint[1] / (startPoint[0] * initialCollvar)));
            k = -initialCollvar * (double)Math.Pow(h, 2);
            while (x >= 0 && time < limit)
            {
                Tuple<double, double> calculatedVales = calculateAcceleration(x, initialCollvar, h, k);
                deltaX = (double)(velX * timestep + 0.5f * calculatedVales.Item1 * Math.Pow(timestep, 2));
                x = (double)(x + deltaX);
                velX = velX + (0 + calculateAcceleration(x, initialCollvar, h, k).Item1) * timestep / 1f;
                if (calculateDistance)
                {
                    distance = distance + (double)Math.Sqrt(deltaX * deltaX * (calculatedVales.Item2 * calculatedVales.Item2 + 1.0f));
                }
                time = time + timestep;
            }
            Console.WriteLine(Math.Abs(Math.Abs(initialCollvarStep) * 100 - 100) + "" % complete"");

            return Tuple.Create(time, initialCollvar, h, k);
        }

        Tuple<double, double, double, double> CalculateTimeCircle(double initialCollvar)
        {
            if (initialCollvar < (double)Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow((Math.Pow(startPoint[1], 2) - Math.Pow(startPoint[0], 2)) / (-2 * startPoint[0]), 2)))
            {
                return Tuple.Create(limit, initialCollvar, 0.0d, 0.0d);
            }
            double q = Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow(startPoint[0], 2));
            double x3 = startPoint[0] / 2;
            double y3 = startPoint[1] / 2;


            double h = x3 + (Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(q / 2, 2)) * (-startPoint[1])) / q;
            double k = y3 + (Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(q / 2, 2)) * (startPoint[0])) / q;

            double distance = 0;
            double deltaX = 0;

            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            double y = k - Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(x - h, 2));
            while (x >= 0 && time < limit)
            {
                y = k - Math.Sqrt(Math.Pow(initialCollvar, 2) - Math.Pow(x - h, 2));
                Tuple<double, double> calculatedVales = calculateAccelerationCircle(x, y, initialCollvar, h, k);
                deltaX = (double)(velX * timestep + 0.5f * calculatedVales.Item1 * Math.Pow(timestep, 2));
                x = (double)(x + deltaX);
                velX = velX + (0 + calculateAccelerationCircle(x, y, initialCollvar, h, k).Item1) * timestep / 1f;
                if (calculateDistance)
                {
                    distance = distance + (double)Math.Sqrt(deltaX * deltaX * (calculatedVales.Item2 * calculatedVales.Item2 + 1.0f));
                }
                time = time + timestep;
            }

            return Tuple.Create(time, initialCollvar, h, k);
        }
        Tuple<double, double, double, double> CalculateTimeCubic(double initialCollvar)
        {
            double h = 0;
            double k = 0;
            double distance = 0;
            double deltaX = 0;
            i = i + 1;
            x = startPoint[0];
            velX = 0f;
            time = 0f;
            distance = 0f;
            if (initialCollvar <= 0.00001 |initialCollvar >= 12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3)))
            {
                return Tuple.Create(limit+100, initialCollvar, h, k);
            }

            h = (3.0d * Math.Pow(startPoint[0], 2) - Math.Sqrt(9.0d * Math.Pow(startPoint[0], 4) - 4.0 * 3.0 * startPoint[0] * (Math.Pow(startPoint[0], 3) - startPoint[1] / initialCollvar)))/2;
            k = initialCollvar * (double)Math.Pow(h, 3);
            while (x >= 0 && time < limit)
            {
                Tuple<double, double> calculatedVales = calculateAccelerationCubic(x, initialCollvar, h, k);
                deltaX = (double)(velX * timestep + 0.5f * calculatedVales.Item1 * Math.Pow(timestep, 2));
                x = (double)(x + deltaX);
                velX = velX + (0 + calculateAccelerationCubic(x, initialCollvar, h, k).Item1) * timestep / 1f;
                if (calculateDistance)
                {
                    distance = distance + (double)Math.Sqrt(deltaX * deltaX * (calculatedVales.Item2 * calculatedVales.Item2 + 1.0f));
                }
                time = time + timestep;
            }
            Console.WriteLine(Math.Abs(Math.Abs(initialCollvarStep) * 100 - 100) + "" % complete"");

            return Tuple.Create(time, initialCollvar, h, k);
        }

        Tuple<double, double, double, double, double, double> jumpingDecend()
        {
            //   Console.WriteLine(Math.Abs(initialCollvarStep)+"",""+zeroInAccuracy);
            double var1 = 0;
            double var2 = 0;
            double var3 = 0;
            double var4 = 0;
            if (type == ""parabola"")
            {
                var1 = 0;
                var2 = 0;
            }
            if (type == ""circle"")
            {
                initialCollvar = (double)Math.Sqrt(Math.Pow(startPoint[1], 2) + Math.Pow((Math.Pow(startPoint[1], 2) - Math.Pow(startPoint[0], 2)) / (-2 * startPoint[0]), 2));
                //  Console.WriteLine(initialCollvar+""RADIUS"");
            }
            if (type == ""cubic"")
            {
                initialCollvar = (12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3)))/2;
                initialCollvarStep = (12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3))) / 10;
                zeroInAccuracy = (12.0 * startPoint[1] / (3.0 * Math.Pow(startPoint[0], 3))) / 100000;
                Console.WriteLine(initialCollvar+""RADIUS"");
            }

            while (Math.Abs(initialCollvarStep) >= zeroInAccuracy)
            {
                // --  Console.Write(""BOB"");
                initialCollvar = initialCollvar + initialCollvarStep;
                if (type == ""parabola"")
                {
                    time = CalculateTimeParabola(initialCollvar).Item1;
                }
                else if (type == ""circle"")
                {
                    time = CalculateTimeCircle(initialCollvar).Item1;
                }
                else if (type == ""cubic"")
                {
                    time = CalculateTimeCubic(initialCollvar).Item1;
                }
                // Console.WriteLine(distance);
                //  Console.WriteLine(initialCollvar + ""(x-"" + h + "")^2+"" + k);
                strg = strg + ""("" + initialCollvar + "","" + time + "")"" + "","";
                if (maxTime > time)
                {
                    maxTime = time;
                    initialCollvarStep = initialCollvarStep * 2;
                }

                else if (time > maxTime)
                {
                    if (time >= limit)
                    {
                        initialCollvar = initialCollvar - initialCollvarStep;
                        initialCollvarStep = -initialCollvarStep / 4;
                    }
                    else
                    {
                        initialCollvarStep = -initialCollvarStep;
                    }
                }
                else
                {
                    initialCollvarStep = initialCollvarStep / 2;
                }
            }
            if (type == ""circle"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeCircle(initialCollvar);
                time = CalculateTimeCircle(initialCollvar).Item1;
                var1 = resultcal.Item1;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            else if (type == ""parabola"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeParabola(initialCollvar);
                time = CalculateTimeParabola(initialCollvar).Item1;
                var1 = resultcal.Item2;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            else if (type == ""cubic"")
            {
                Tuple<double, double, double, double> resultcal = CalculateTimeCubic(initialCollvar);
                time = CalculateTimeCubic(initialCollvar).Item1;
                var1 = resultcal.Item2;
                var2 = resultcal.Item3;
                var3 = resultcal.Item4;
            }
            if (time > limit)
            {

                if (type == ""circle"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeCircle(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
                else if (type == ""parabola"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeParabola(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
                else if (type == ""cubic"")
                {
                    initialCollvar = initialCollvar - initialCollvarStep / 2;
                    Tuple<double, double, double, double> resultcal = CalculateTimeCubic(initialCollvar);
                    time = resultcal.Item1;
                    var1 = resultcal.Item2;
                    var2 = resultcal.Item3;
                    var3 = resultcal.Item4;
                }
            }
            Console.WriteLine(""Finished"");
            return Tuple.Create(initialCollvar, time, var1, var2, var3, var4);
        }
        Tuple<double, double, double, double, double, double> resultTuple = jumpingDecend();
        var stop = Process.GetCurrentProcess().TotalProcessorTime;

        Console.WriteLine("""");
        Console.WriteLine(""time taken "" + resultTuple.Item2 + "" seconds"");
        Console.WriteLine(""At variable = "" + resultTuple.Item1);
        Console.WriteLine(""h = "" + resultTuple.Item4);
        Console.WriteLine(""k = "" + resultTuple.Item5);
        Console.WriteLine();
        // stopwatch.Stop();
        Console.WriteLine("""");
        Console.WriteLine(""Calculation Time is "" + (stop - start).TotalMilliseconds);
        Console.WriteLine(""Cal amt"" + i);
      //  Console.WriteLine(""Starting control group in 5 seconds"");
        Console.WriteLine(strg);
        Thread.Sleep(20000);
        start = Process.GetCurrentProcess().TotalProcessorTime;
        double theta = NewtonsMethod(startPoint[0] / startPoint[1],1,1e-20,2000);
        double D = 2 * startPoint[1] / (1 - Math.Cos(theta * 2));
        Console.WriteLine(D);
        double t = Math.Sqrt(2*D/gravitationalA)*theta;
        Console.WriteLine(t);
        stop = Process.GetCurrentProcess().TotalProcessorTime;
        Console.WriteLine(""Calculation Time is "" + (stop - start).TotalMilliseconds);
        strg = """";
    }
}"
cGENuuMx,L8 - Source,alaniarati,JavaScript,Sunday 3rd of December 2023 10:54:56 AM CDT,"import axios from ""axios"";
import { useState, useEffect } from ""react"";

const MyComponent = () => {
  // State to store the fetched data
  const [data, setData] = useState([]);

  useEffect(() => {
    // Function to fetch data
    const fetchData = async () => {
      try {
        // Fetching data from JSONPlaceholder using Axios
        const response = await axios.get(
          ""https://jsonplaceholder.typicode.com/posts""
        );
        // Update the state with the fetched data
        setData(response.data);
      } catch (error) {
        console.error(""Error fetching data:"", error);
      }
    };

    // Call the fetchData function
    fetchData();
  }, []); // Empty dependency array ensures this effect runs only once on mount

  return (
    <div>
      <h1>Data from JSONPlaceholder</h1>
      <ul>
        {/* Mapping over the data and rendering each item */}
        {data.map((item) => (
          <li key={item.id}>{item.title}</li>
        ))}
      </ul>
    </div>
  );
};

export default MyComponent;
"
Wb8aN9zQ,Untitled,VolinNilov,C++,Sunday 3rd of December 2023 10:41:55 AM CDT,"#include <iostream>
using namespace std;

class Matrix
{
private:
	int rows, cols;
	int** data;
public:
	Matrix(int r, int c)
	{
		rows = r;
		cols = c;
		data = new int* [rows];
		for (int i = 0; i < rows; i++)
		{
			data[i] = new int[cols];
		}
	}
	void set(int i, int j, int val)
	{
		data[i][j] = val;
	}
	int get(int i, int j)
	{
		return data[i][j];
	}
	Matrix add(Matrix m)
	{
		Matrix result(rows, cols);
		for (int i = 0; i < rows; i++)
		{
			for (int j = 0; j < cols; j++)
			{
				result.set(i, j, data[i][j] + m.get(i, j));
			}
		}
		return result;
	}
	Matrix subtract(Matrix m)
	{
		Matrix result(rows, cols);
		for (int i = 0; i < rows; i++)
		{
			for (int j = 0; j < cols; j++)
			{
				result.set(i, j, data[i][j] - m.get(i, j));
			}
		}
		return result;
	}
	Matrix multiply(Matrix m)
	{
		Matrix result(rows, cols);
		for (int i = 0; i < rows; i++)
		{
			for (int j = 0; j < cols; j++)
			{
				int sum = 0; 
				for (int t = 0; t < cols; t++)
				{
					sum = sum + data[i][t] * m.get(t, j);
				}
				result.set(i, j, sum);
			}
		}
		return result;
	}
};

int main()
{
	Matrix m1(2, 2);
	m1.set(0, 0, 1);
	m1.set(0, 1, 2);
	m1.set(1, 0, 3);
	m1.set(1, 1, 4);

	Matrix m2(2, 2);
	m2.set(0, 0, 5);
	m2.set(0, 1, 6);
	m2.set(1, 0, 7);
	m2.set(1, 1, 8);

	Matrix m3 = m1.add(m2);
	Matrix m4 = m1.subtract(m2);
	Matrix m5 = m1.multiply(m2);

	cout << ""Started matrix: "" << endl;
	cout << ""m1: "" << endl;
	cout << m1.get(0, 0) << "" "" << m1.get(0, 1) << endl;
	cout << m1.get(1, 0) << "" "" << m1.get(1, 1) << endl;
	cout << endl;

	cout << ""m2: "" << endl;
	cout << m2.get(0, 0) << "" "" << m2.get(0, 1) << endl;
	cout << m2.get(1, 0) << "" "" << m2.get(1, 1) << endl;
	cout << endl;

	cout << ""ADD: "" << endl;
	cout << m3.get(0, 0) << "" "" << m3.get(0, 1) << endl;
	cout << m3.get(1, 0) << "" "" << m3.get(1, 1) << endl;
	cout << endl;

	cout << ""SUBTRACT: "" << endl;
	cout << m4.get(0, 0) << "" "" << m4.get(0, 1) << endl;
	cout << m4.get(1, 0) << "" "" << m4.get(1, 1) << endl;
	cout << endl;
	
	cout << ""MULTIPLY: "" << endl;
	cout << m5.get(0, 0) << "" "" << m5.get(0, 1) << endl;
	cout << m5.get(1, 0) << "" "" << m5.get(1, 1) << endl;
	cout << endl;

	return 0;
}"
0962EEQC,segseh,gadungw71,PHP,Sunday 3rd of December 2023 10:30:21 AM CDT,"<a href=""https://bio.link/teeyodfullhdthai4k"">https://bio.link/teeyodfullhdthai4k</a>

<a href=""https://bio.link/filmteeyodhdfullthai"">https://bio.link/filmteeyodhdfullthai</a>

<a href=""https://bio.link/teeyodfullhd1080p"">https://bio.link/teeyodfullhd1080p</a>

<a href=""https://bio.link/edezx"">https://bio.link/edezx</a>

<a href=""https://bio.link/awertyty"">https://bio.link/awertyty</a>

<a href=""https://bio.link/wonkafullhdthai4k"">https://bio.link/wonkafullhdthai4k</a>

<a href=""https://bio.link/wonkathai"">https://bio.link/wonkathai</a>

<a href=""https://bio.link/wonkathaisubhd4k"">https://bio.link/wonkathaisubhd4k</a>

<a href=""https://bio.link/wonkahdthai1080"">https://bio.link/wonkahdthai1080</a>

<a href=""https://groups.google.com/g/comp.arch.fpga/c/b_cqYrxYltU"">https://groups.google.com/g/comp.arch.fpga/c/b_cqYrxYltU</a>

<a href=""https://groups.google.com/g/comp.text.tex/c/S-lOaxWdrdk"">https://groups.google.com/g/comp.text.tex/c/S-lOaxWdrdk</a>

<a href=""https://groups.google.com/g/comp.text.tex/c/Fl_9Pq3VfoY"">https://groups.google.com/g/comp.text.tex/c/Fl_9Pq3VfoY</a>

<a href=""https://groups.google.com/g/comp.arch.fpga/c/X4CoyiyIj3M"">https://groups.google.com/g/comp.arch.fpga/c/X4CoyiyIj3M</a>

<a href=""https://groups.google.com/g/mozilla.dev.platform/c/WXO0D5RjcEc"">https://groups.google.com/g/mozilla.dev.platform/c/WXO0D5RjcEc</a>

<a href=""https://baskadia.com/post/1aupf"">https://baskadia.com/post/1aupf</a>

<a href=""https://baskadia.com/post/1av2x"">https://baskadia.com/post/1av2x</a>

<a href=""https://hackmd.io/@rerewilli6/ByG8YQcBp"">https://hackmd.io/@rerewilli6/ByG8YQcBp</a>

<a href=""https://rentry.co/79mghw"">https://rentry.co/79mghw</a>

<a href=""https://pastelink.net/waf923co"">https://pastelink.net/waf923co</a>

<a href=""https://snippet.host/kgroib"">https://snippet.host/kgroib</a>

<a href=""https://glot.io/snippets/gr69igc3m4"">https://glot.io/snippets/gr69igc3m4</a>

<a href=""https://etextpad.com/uogi7tahg1"">https://etextpad.com/uogi7tahg1</a>

<a href=""https://homment.com/yy4nyofKDo03pTQkRyS4"">https://homment.com/yy4nyofKDo03pTQkRyS4</a>

<a href=""https://jsbin.com/honoqedute/edit?html,output"">https://jsbin.com/honoqedute/edit?html,output</a>
"
L4M8bt4W,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 10:22:26 AM CDT,"file = open('17_11887.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A) + 3):
    B = []
    B += [A[i]]
    B += [A[i-1]]
    B += [A[i-2]]
    B += [A[i-3]]
    B = B.sort()
    if (B[0] // 10 < 10 and B[1] // 10 >= 10) or (B[0] // 10 < 10 and B[3] // 10 < 10):
        count += 1
print(count)  "
z0bYrREM,pygame-law-of-universal-gravitation,Xnork,Python,Sunday 3rd of December 2023 10:21:58 AM CDT,"import pygame, math
from pygame.locals import *

SCALE = 10 ** -6.58
REAL_RADIUS_OF_EARTH = 6_371 * 10 ** 3
REAL_RADIUS_OF_SUN = 696_340 * 10 ** 3
G =  9.807

pygame.init()

display = pygame.display.set_mode((600, 600))
game_is_running = True
clock = pygame.time.Clock()

class Body:
  def __init__(self, position, radius = 50.0, density = 0.89) -> None:
    self.position = position
    self.radius = radius
    self.density = density
    self.mass = self.radius ** 2 * math.pi * self.density

    self.acceleration = [0, 0]
    self.velocity = [0, 0]

  def draw(self) -> None:
    pygame.draw.circle(display, (255, 255, 255), self.position, self.radius)

class LawOfUniversalGravitatoin:
  def __init__(self, body_a: Body, body_b: Body) -> None:
    self.body_a = body_a
    self.body_b = body_b

  def step(self) -> None:
    angle = math.atan2(self.body_b.position[1] - self.body_a.position[1], self.body_b.position[0] - self.body_a.position[0])
    magnitude = math.sqrt((self.body_b.position[0] - self.body_a.position[0]) ** 2 + (self.body_b.position[1] - self.body_a.position[1]) ** 2)

    F = G * (self.body_a.mass * self.body_b.mass) / magnitude

    self.body_a.acceleration[0] += math.cos(angle) * F / self.body_a.mass * SCALE
    self.body_a.velocity[0] = self.body_a.acceleration[0]
    self.body_a.acceleration[1] += math.sin(angle) * F / self.body_a.mass * SCALE
    self.body_a.velocity[1] = self.body_a.acceleration[1]
    self.body_a.position[1] += self.body_a.velocity[1]
    self.body_a.position[0] += self.body_a.velocity[0]

    self.body_b.acceleration[0] += math.cos(angle) * F / self.body_b.mass * SCALE
    self.body_b.velocity[0] = self.body_b.acceleration[1]
    self.body_b.acceleration[1] += math.sin(angle) * F / self.body_b.mass * SCALE
    self.body_b.velocity[1] = self.body_b.acceleration[1]
    self.body_b.position[1] += self.body_b.velocity[1]
    self.body_b.position[0] += self.body_b.velocity[0]

earth_body = Body([400, 100], REAL_RADIUS_OF_EARTH * SCALE)
earth_body.acceleration[0] = -0.5

sun_body = Body([400, 400], REAL_RADIUS_OF_SUN * SCALE)

law_of_universal_gravitation = LawOfUniversalGravitatoin(earth_body, sun_body)

while game_is_running:
  law_of_universal_gravitation.step()

  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      game_is_running = False

  display.fill([20, 20, 20])  

  earth_body.draw()
  sun_body.draw()

  pygame.display.flip()
  clock.tick(120)

pygame.quit()"
innARbQy,Day 3 part 1,icarussiano,Python,Sunday 3rd of December 2023 09:54:48 AM CDT,"import re
with open(""input"") as file:
    data = file.read().splitlines()
num = []
sym = []
part1 = 0

for line in data:
    num.append([(int(m.group()),m.start(), m.end() - 1) for m in re.finditer(r'(\d+)', line)])
    sym.append([m.start() for m in re.finditer(r'[^\d.]', line)])

for i, x in enumerate(num):
    for n, s, e in x:
        if ((s - 1 in sym[i]) or (e + 1 in sym[i]) or
                (i != len(num) - 1 and any(x in sym[i + 1] for x in range(s - 1, e + 2))) or
                (i != 0 and any(x in sym[i - 1] for x in range(s - 1, e + 2)))):
            part1 += n

print(part1)"
JgS7KYyE,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 09:52:16 AM CDT,"from random import randint
A = [randint(1, 10000) for i in range(1000)]
Max = 0
for i in range(len(A)):
    for j in range(i + 11, len(A)):
        if (A[i] + A[j]) % 2 * 567 == 0:
            Max = max(Max, A[i] + A[j])
print(Max)"
V4atWuqi,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 09:42:36 AM CDT,"from random import randint
A = [randint(1, 10000) for i in range(1000)]
count = 0
for i in range(len(A)):
    for j in range(i + 8, len(A)):
        if abs(A[i] - A[j]) % 999 == 0:
            count += 1
print(count)"
XZyVv1cU,zadaca3labs5,cekozz,Java,Sunday 3rd of December 2023 09:41:02 AM CDT,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Node {
    int element;
    Node pred, succ;

    Node(int element) {
        this.element = element;
        this.pred = this.succ = null;
    }
}

public class BubbleSortDLL {

    Node begin;

    BubbleSortDLL() {
        this.begin = null;
    }


    void insert(int elem) {
        Node newNode = new Node(elem);
        if (begin == null) {
            begin = newNode;
        } else {
            Node temp = begin;
            while (temp.succ != null) {
                temp = temp.succ;
            }
            temp.succ = newNode;
            newNode.pred = temp;
        }
    }

    void bubbleSort() {
        if (begin == null || begin.succ == null) {

            return;
        }

        boolean swapped;
        Node last = null;

        do {
            swapped = false;
            Node current = begin;

            while (current.succ != last) {
                if (current.element > current.succ.element) {
                    swap(current, current.succ);
                    swapped = true;
                }
                current = current.succ;
            }

            last = current;
        } while (swapped);
    }


    void swap(Node node1, Node node2) {
        int temp = node1.element;
        node1.element = node2.element;
        node2.element = temp;
    }

    
    void printDLL() {
        Node temp = begin;
        while (temp != null) {
            System.out.print(temp.element + "" "");
            temp = temp.succ;
        }
        System.out.println();
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine());
        String[] nodes = br.readLine().split("" "");

        BubbleSortDLL list = new BubbleSortDLL();
        for (String node : nodes) {
            list.insert(Integer.parseInt(node));
        }

        list.bubbleSort();
        list.printDLL();
    }
}
"
QMM7fUp6,drawbot_Задание2,annstasi,Python,Sunday 3rd of December 2023 09:36:28 AM CDT,"from drawbot_skia.drawbot import *

# зададим правила для выбора
# фигуры, которые будем позже
# использовать:
rules = [1, 0, 1, 0, 2, 0, 1, ""гусь"", 3, 3] * 20
# список * 20
w, h = 742.5, 1050
newPage(w, h)

# определим поля и начальные
# координаты
margin = 80
x = margin
y = h - margin

# шаг = (ширина страницы - 2  поля (правое и левое)) / на 6 (6 фигур в строке)
step = (w - margin * 2) / 6

# создадим переменную size,
# равную выбранному шагу
size = step

for rule in rules:
    fill(0)
    stroke(None)
    # круг
    if rule == 0:
        oval(x, y - step, size, size)
    # квадрат
    elif rule == 1:
        rect(x, y - step, size, size)
    # окружность
    elif rule == 2:
        fill(None)
        stroke(0, 0, 0)
        strokeWidth(3)
        oval(x, y - step, size, size)
    # квадрат с красной рамкой
    elif rule == 3:
        fill(None)
        stroke(1, 0, 0)
        strokeWidth(3)
        rect(x, y - step, size, size)
    else:
        print(rule, ""<— неизвестное правило"")

    # сдвинем x на шаг
    x += step

    # если строка кончилась,
    # вернём x в начало, а
    # y сдвинем вниз на шаг
    if x >= w - margin:
        x = margin
        y -= step

    # если y дошёл до низа
    # страницы, создадим новую и
    # обнулим координаты
    if y - step < margin:
        newPage(w, h)
        x = margin
        y = h - margin

# сохраним pdf
saveImage(""summary_2_example.pdf"")


#############
# задание 1 #
#############

# перепишите последний пример
# так, чтобы в нём появилась
# обработка правила ""2"",
# рисующая контурный круг


##########################
# задание 2              #
# творческое, свободное  #
##########################

# можете использовать результат
# задания 1 как основу, или
# попробовать написать что-то
# новое
"
6WqXAAVE,vers,davidramos1,XML,Sunday 3rd of December 2023 09:30:33 AM CDT,"<?xml version=""1.0"" ?>
<launcher>
    <clientversion>1</clientversion>
	<clientsize>1000</clientsize>
    <clientname>Opostron</clientname>
</launcher>"
TDeLqf84,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 09:25:21 AM CDT,"from random import randint
A = [randint(1, 10000) for i in range(1000)]
Max  = -10**9
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 350 == 0 and A[i] > A[j]:
            Max = max(Max, A[i] * A[j])
print(Max)"
1Z3q70z0,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 09:19:58 AM CDT,"from random import randint
A = [randint(1, 10000) for i in range(1000)]
Min  = 10**10
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if A[i] % 17 == 0 or A[j] % 17 == 0:
            Min = min(Min, A[i] + A[j])
print(Min)

a17 = []
a = []
for i in range(len(A)):
    if A[i] % 17 == 0:
        a17 += [A[i]]
    else:
        a += [A[i]]
a.sort()
a17.sort()
print(min(a17[0] + a[0], a17[0] + a17[1]))"
KRPSTRFE,wm_char,Delfigamer,C++,Sunday 3rd of December 2023 09:15:41 AM CDT,"#define WIN32_LEAN_AND_MEAN
#define _CRT_SECURE_NO_WARNINGS
#define _SCL_SECURE_NO_WARNINGS

#include <Windows.h>
#include <cstdio>
#include <utility>
#include <string>
#include <vector>

struct TextEdit {
    std::wstring buffer;
    int caret = 0;

    wchar_t const* Buffer() {
        return buffer.data();
    }

    int Length() {
        return buffer.size();
    }

    void NormalizeCaret() {
        if (caret < 0) {
            caret = 0;
        } else if (caret > Length()) {
            caret = buffer.size();
        }
    }

    void Insert(wchar_t ch) {
        NormalizeCaret();
        buffer.insert(caret, 1, ch);
        caret += 1;
    }

    void Insert(std::wstring const& str) {
        NormalizeCaret();
        if (!str.empty()) {
            buffer.insert(caret, str);
            caret += str.size();
        }
    }

    void EraseLeft() {
        NormalizeCaret();
        if (caret > 0) {
            buffer.erase(caret - 1, 1);
            caret -= 1;
        }
    }

    void EraseRight() {
        NormalizeCaret();
        if (caret < Length()) {
            buffer.erase(caret, 1);
        }
    }

    void MoveLeft() {
        if (caret > 0) {
            caret -= 1;
        }
    }

    void MoveRight() {
        if (caret < Length()) {
            caret += 1;
        }
    }

    void MoveHome() {
        caret = 0;
    }

    void MoveEnd() {
        caret = buffer.size();
    }
};

TextEdit Current;
HPEN CaretPen;

void WindowPaint(HWND hwnd) {
    RECT clientrect;
    GetClientRect(hwnd, &clientrect);
    SIZE wndsize = {clientrect.right - clientrect.left, clientrect.bottom - clientrect.top};

    PAINTSTRUCT ps;
    HDC wnddc = BeginPaint(hwnd, &ps);
    HBITMAP bitmap = CreateCompatibleBitmap(wnddc, wndsize.cx, wndsize.cy);
    HDC dc = CreateCompatibleDC(wnddc);
    SelectObject(dc, bitmap);

    RECT wndrect = {0, 0, wndsize.cx, wndsize.cy};
    HBRUSH brush = CreateSolidBrush(RGB(255, 255, 255));
    FillRect(dc, &wndrect, brush);

    TEXTMETRICW textmetric;
    GetTextMetricsW(dc, &textmetric);

    int currentx = textmetric.tmHeight;
    int currenty = textmetric.tmHeight;
    SIZE textsize;

    TextOutW(dc, currentx, currenty, Current.Buffer(), Current.Length());

    GetTextExtentPointW(dc, Current.Buffer(), Current.caret, &textsize);
    SelectObject(dc, CaretPen);
    MoveToEx(dc, currentx + textsize.cx, currenty, nullptr);
    LineTo(dc, currentx + textsize.cx, currenty + textmetric.tmHeight);

    BitBlt(wnddc, 0, 0, wndsize.cx, wndsize.cy, dc, 0, 0, SRCCOPY);
    DeleteObject(brush);
    DeleteDC(dc);
    DeleteObject(bitmap);
    EndPaint(hwnd, &ps);
}

LRESULT CALLBACK WindowProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam
) {
    switch (uMsg) {
    case WM_CREATE:
        CaretPen = CreatePen(PS_SOLID, 0, RGB(0, 0, 0));
        return 0;
    case WM_DESTROY:
        DeleteObject(CaretPen);
        PostQuitMessage(0);
        return 0;
    case WM_CHAR:
        wprintf(L""WM_CHAR %#4llx'%lc' %3lli\n"", wParam, (wchar_t)wParam, (lParam >> 16) & 0xff);
        if (wParam == 8) {
            Current.EraseLeft();
        } else if (wParam >= 32) {
            Current.Insert(wParam);
        }
        InvalidateRect(hwnd, nullptr, false);
        return 0;
    case WM_KEYDOWN:
        wprintf(L""WM_KEYDOWN    %4lli %3lli\n"", wParam, (lParam >> 16) & 0xff);
        if (wParam == VK_LEFT) {
            Current.MoveLeft();
            InvalidateRect(hwnd, nullptr, false);
        } else if (wParam == VK_RIGHT) {
            Current.MoveRight();
            InvalidateRect(hwnd, nullptr, false);
        } else if (wParam == VK_HOME || wParam == VK_PRIOR || wParam == VK_UP) {
            Current.MoveHome();
            InvalidateRect(hwnd, nullptr, false);
        } else if (wParam == VK_END || wParam == VK_NEXT || wParam == VK_DOWN) {
            Current.MoveEnd();
            InvalidateRect(hwnd, nullptr, false);
        } else if (wParam == VK_DELETE) {
            Current.EraseRight();
            InvalidateRect(hwnd, nullptr, false);
        }
        return 0;
    case WM_KEYUP:
        return 0;
    case WM_PAINT:
        WindowPaint(hwnd);
        return 0;
    default:
        return DefWindowProcW(hwnd, uMsg, wParam, lParam);
    }
}

int CALLBACK WinMain(
    HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
    AllocConsole();
    freopen(""CONOUT$"", ""w"", stdout);
    const DWORD WindowStyle = WS_OVERLAPPEDWINDOW;
    WNDCLASSW wndclass;
    wndclass.style = CS_VREDRAW | CS_HREDRAW;
    wndclass.lpfnWndProc = &WindowProc;
    wndclass.cbClsExtra = 8;
    wndclass.cbWndExtra = 0;
    wndclass.hInstance = hInstance;
    wndclass.hIcon = LoadIcon(0, IDI_APPLICATION);
    wndclass.hCursor = LoadCursor(0, IDC_ARROW);
    wndclass.hbrBackground = 0;
    wndclass.lpszMenuName = 0;
    wndclass.lpszClassName = L""MyWindowClass"";
    ATOM wndclassatom = RegisterClassW(&wndclass);
    RECT WindowRect = {0, 0, 800, 600};
    AdjustWindowRect(
        &WindowRect, WindowStyle, false);
    HWND hwnd = CreateWindowW(
        (LPCWSTR)wndclassatom,
        L""window"",
        WindowStyle,
        20,
        20,
        WindowRect.right - WindowRect.left,
        WindowRect.bottom - WindowRect.top,
        0,
        0,
        hInstance,
        0);
    ShowWindow(hwnd, SW_SHOW);
    UpdateWindow(hwnd);
    MSG message = {0, 0, 0, 0};
    while (GetMessageW(&message, nullptr, 0, 0)) {
        TranslateMessage(&message);
        DispatchMessageW(&message);
    }
    return 0;
};
"
jTXqd4FW,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 09:10:24 AM CDT,"from random import randint
A = [randint(1, 1000) for i in range(1000)]
Max = -10**9
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 107 == 0:
            Max = max(Max, A[i] + A[j])
print(Max)

a = [[] for i in range(107)]
n = len(A)
for i in range(n):
    x = A[i]
    ost = x % 107
    a[ost] += [x]
b = []
for i in range(107):
    a[i].sort()
    b += a[i][-2:]
ans = []
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        if (b[i] + b[j]) % 107 == 0:
            ans += [b[i] + b[j]]
print(max(ans))"
VcVCNGEV,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 08:58:31 AM CDT,"from random import randint
A = [randint(1, 1000) for i in range(1000)]
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 127 == 0:
            count += 1
print(count)

k = [0] * 127
n = len(A)
for i in range(n):
    ost = A[i] % 127
    k[ost] += 1
count = k[0] * (k[0] - 1) // 2
for i in range(1, 64):
    count += k[i] * k[127 - i]
print(count)"
aXrt8JGr,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 08:46:48 AM CDT,"from random import randint
A = [randint(1, 1000) for i in range(1000)]
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 15 == 0:
            count += 1
print(count)

k15 = 0
k5 = 0
k3 = 0
for i in range(len(A)):
    if A[i] % 15 == 0:
        k15 += 1
    elif A[i] % 5 == 0:
        k5 += 1
    elif A[i] % 3 == 0:
        k3 += 1
k = len(A) - k15
print(k * k15 + k3 * k5 + k15 * (k15 - 1) // 2)"
U6jgcWfs,Untitled,Farz0l1x,Python,Sunday 3rd of December 2023 08:38:41 AM CDT,"from random import randint
A = [randint(1, 100) for i in range(100)]
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 7 == 0:
            count += 1
print(count)

k7 = 0
for i in range(len(A)):
    if A[i] % 7 == 0:
        k7 += 1
k = len(A) - 7
print(k * k7 + k7 * (k7 - 1) // 2)"
iyzregsG,News Dec3 23,Newscaster_Ned,Email,Sunday 3rd of December 2023 08:32:12 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎j‎u‎s‎t‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎y‎o‎u‎ ‎I‎ ‎h‎a‎t‎e‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎!‎ ‎I‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎c‎h‎o‎p‎ ‎o‎f‎f‎ ‎h‎i‎s‎ ‎n‎i‎g‎g‎e‎r‎ ‎p‎e‎n‎i‎s‎!‎

W‎o‎k‎e‎ ‎P‎o‎p‎e‎ ‎B‎l‎a‎m‎e‎s‎ ‎G‎r‎e‎e‎d‎y‎ ‎C‎a‎p‎i‎t‎a‎l‎i‎s‎t‎s‎ ‎f‎o‎r‎ ‎G‎l‎o‎b‎a‎l‎ ‎W‎a‎r‎m‎i‎n‎g‎ ‎a‎t‎ ‎C‎O‎P‎2‎8‎

C‎l‎i‎m‎a‎t‎e‎ ‎H‎a‎s‎ ‎‘‎R‎u‎n‎ ‎A‎m‎o‎k‎,‎’‎ ‎P‎l‎a‎n‎e‎t‎ ‎‘‎O‎v‎e‎r‎h‎e‎a‎t‎i‎n‎g‎’‎
P‎o‎p‎e‎ ‎F‎r‎a‎n‎c‎i‎s‎
P‎o‎p‎e‎ ‎F‎r‎a‎n‎c‎i‎s‎ ‎s‎e‎n‎t‎ ‎a‎ ‎m‎e‎s‎s‎a‎g‎e‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎C‎O‎P‎2‎8‎ ‎U‎.‎N‎.‎ ‎c‎l‎i‎m‎a‎t‎e‎ ‎s‎u‎m‎m‎i‎t‎ ‎d‎e‎c‎r‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎“‎u‎n‎b‎r‎i‎d‎l‎e‎d‎ ‎e‎x‎p‎l‎o‎i‎t‎a‎t‎i‎o‎n‎”‎ ‎o‎f‎ ‎t‎h‎e‎ ‎e‎n‎v‎i‎r‎o‎n‎m‎e‎n‎t‎ ‎b‎y‎ ‎f‎i‎r‎s‎t‎ ‎w‎o‎r‎l‎d‎ ‎n‎a‎t‎i‎o‎n‎s‎.‎

L‎e‎f‎t‎i‎s‎t‎ ‎G‎e‎o‎r‎g‎e‎ ‎S‎o‎r‎o‎s‎ ‎a‎n‎d‎ ‎S‎o‎n‎ ‎M‎a‎x‎i‎m‎i‎z‎e‎ ‎D‎o‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎
L‎e‎f‎t‎i‎s‎t‎ ‎G‎e‎o‎r‎g‎e‎ ‎S‎o‎r‎o‎s‎ ‎a‎n‎d‎ ‎S‎o‎n‎ ‎M‎a‎x‎i‎m‎i‎z‎e‎ ‎D‎o‎n‎a‎t‎i‎o‎n‎s‎ ‎t‎o‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎
1‎,‎7‎8‎1‎
P‎o‎p‎e‎ ‎F‎r‎a‎n‎c‎i‎s‎:‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎H‎a‎s‎ ‎‘‎R‎u‎n‎ ‎A‎m‎o‎k‎,‎’‎ ‎P‎l‎a‎n‎e‎t‎ ‎‘‎O‎v‎e‎r‎h‎e‎a‎t‎i‎n‎g‎’‎
P‎o‎p‎e‎ ‎F‎r‎a‎n‎c‎i‎s‎:‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎H‎a‎s‎ ‎‘‎R‎u‎n‎ ‎A‎m‎o‎k‎,‎’‎ ‎P‎l‎a‎n‎e‎t‎ ‎‘‎O‎v‎e‎r‎h‎e‎a‎t‎i‎n‎g‎’‎
5‎,‎7‎1‎8‎
P‎a‎r‎i‎s‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎:‎ ‎O‎n‎e‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎T‎w‎o‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎b‎y‎ ‎'‎A‎l‎l‎a‎h‎u‎ ‎A‎k‎b‎a‎r‎'‎ ‎K‎n‎i‎f‎e‎m‎a‎n‎
P‎a‎r‎i‎s‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎:‎ ‎O‎n‎e‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎T‎w‎o‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎b‎y‎ ‎'‎A‎l‎l‎a‎h‎u‎ ‎A‎k‎b‎a‎r‎'‎ ‎K‎n‎i‎f‎e‎m‎a‎n‎
7‎8‎8‎
B‎u‎d‎ ‎L‎i‎g‎h‎t‎ ‎T‎r‎i‎e‎s‎ ‎t‎o‎ ‎D‎i‎s‎t‎a‎n‎c‎e‎ ‎I‎t‎s‎e‎l‎f‎ ‎f‎r‎o‎m‎ ‎D‎y‎l‎a‎n‎ ‎M‎u‎l‎v‎a‎n‎e‎y‎ ‎D‎i‎s‎a‎s‎t‎e‎r‎ ‎w‎i‎t‎h‎ ‎N‎e‎w‎ ‎A‎d‎
B‎u‎d‎ ‎L‎i‎g‎h‎t‎ ‎T‎r‎i‎e‎s‎ ‎t‎o‎ ‎D‎i‎s‎t‎a‎n‎c‎e‎ ‎I‎t‎s‎e‎l‎f‎ ‎f‎r‎o‎m‎ ‎D‎y‎l‎a‎n‎ ‎M‎u‎l‎v‎a‎n‎e‎y‎ ‎D‎i‎s‎a‎s‎t‎e‎r‎ ‎w‎i‎t‎h‎ ‎N‎e‎w‎ ‎A‎d‎
5‎6‎8‎
M‎a‎h‎e‎r‎:‎ ‎D‎e‎m‎ ‎S‎t‎a‎f‎f‎e‎r‎s‎ ‎P‎r‎o‎t‎e‎s‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎H‎a‎m‎a‎s‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎S‎c‎h‎o‎o‎l‎s‎ ‎A‎r‎e‎ ‎A‎n‎t‎i‎-‎A‎m‎e‎r‎i‎c‎a‎
M‎a‎h‎e‎r‎:‎ ‎D‎e‎m‎ ‎S‎t‎a‎f‎f‎e‎r‎s‎ ‎P‎r‎o‎t‎e‎s‎t‎i‎n‎g‎ ‎f‎o‎r‎ ‎H‎a‎m‎a‎s‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎S‎c‎h‎o‎o‎l‎s‎ ‎A‎r‎e‎ ‎A‎n‎t‎i‎-‎A‎m‎e‎r‎i‎c‎a‎
6‎0‎2‎
I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎I‎n‎v‎a‎d‎e‎ ‎E‎l‎i‎t‎e‎ ‎P‎l‎a‎y‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎M‎a‎l‎i‎b‎u‎
I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎I‎n‎v‎a‎d‎e‎ ‎E‎l‎i‎t‎e‎ ‎P‎l‎a‎y‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎M‎a‎l‎i‎b‎u‎
4‎,‎2‎3‎2‎
W‎i‎d‎o‎w‎e‎r‎ ‎o‎f‎ ‎N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎W‎o‎m‎a‎n‎,‎ ‎7‎3‎,‎ ‎K‎i‎l‎l‎e‎d‎ ‎i‎n‎ ‎C‎a‎r‎j‎a‎c‎k‎i‎n‎g‎ ‎S‎u‎e‎s‎ ‎T‎e‎e‎n‎s‎'‎ ‎P‎a‎r‎e‎n‎t‎s‎
W‎i‎d‎o‎w‎e‎r‎ ‎o‎f‎ ‎N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎W‎o‎m‎a‎n‎,‎ ‎7‎3‎,‎ ‎K‎i‎l‎l‎e‎d‎ ‎i‎n‎ ‎C‎a‎r‎j‎a‎c‎k‎i‎n‎g‎ ‎S‎u‎e‎s‎ ‎T‎e‎e‎n‎s‎'‎ ‎P‎a‎r‎e‎n‎t‎s‎
6‎3‎1‎

W‎A‎T‎C‎H‎:‎ ‎F‎a‎i‎t‎h‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎P‎r‎a‎y‎ ‎o‎v‎e‎r‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎I‎o‎w‎a‎
3‎,‎0‎0‎8‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎a‎n‎'‎t‎ ‎O‎p‎e‎r‎a‎t‎e‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎U‎n‎t‎i‎l‎ ‎t‎h‎e‎y‎ ‎C‎o‎n‎s‎i‎d‎e‎r‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎s‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎a‎n‎'‎t‎ ‎O‎p‎e‎r‎a‎t‎e‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎U‎n‎t‎i‎l‎ ‎t‎h‎e‎y‎ ‎C‎o‎n‎s‎i‎d‎e‎r‎ ‎C‎i‎v‎i‎l‎i‎a‎n‎s‎
4‎,‎4‎4‎2‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎P‎l‎e‎a‎d‎s‎ ‎'‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎R‎e‎v‎i‎t‎a‎l‎i‎z‎e‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎A‎u‎t‎h‎o‎r‎i‎t‎y‎'‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎P‎l‎e‎a‎d‎s‎ ‎'‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎R‎e‎v‎i‎t‎a‎l‎i‎z‎e‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎A‎u‎t‎h‎o‎r‎i‎t‎y‎'‎

M‎a‎n‎d‎i‎n‎g‎o‎ ‎G‎e‎t‎s‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎W‎h‎i‎t‎e‎ ‎S‎o‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

J‎u‎s‎t‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎d‎i‎s‎g‎u‎s‎t‎i‎n‎g‎.‎ ‎I‎ ‎h‎a‎t‎e‎ ‎r‎a‎c‎e‎ ‎m‎i‎x‎i‎n‎g‎.‎


M‎u‎d‎s‎h‎a‎r‎k‎ ‎S‎e‎n‎t‎ ‎t‎o‎ ‎P‎r‎i‎s‎o‎n‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎H‎e‎r‎ ‎H‎a‎l‎f‎-‎C‎a‎s‎t‎e‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎S‎h‎i‎a‎w‎a‎s‎s‎e‎e‎ ‎C‎o‎u‎n‎t‎y‎.‎


C‎o‎o‎n‎ ‎R‎a‎p‎e‎s‎ ‎3‎ ‎T‎e‎e‎n‎a‎g‎e‎ ‎G‎i‎r‎l‎s‎ ‎a‎t‎ ‎R‎T‎A‎ ‎B‎u‎s‎ ‎S‎t‎o‎p‎ ‎i‎n‎ ‎ ‎C‎l‎e‎v‎e‎l‎a‎n‎d‎.‎


L‎i‎t‎t‎l‎e‎ ‎R‎o‎c‎k‎ ‎S‎p‎o‎o‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎I‎m‎p‎r‎e‎g‎n‎a‎t‎i‎n‎g‎ ‎1‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎


F‎a‎i‎r‎f‎i‎e‎l‎d‎ ‎G‎h‎e‎t‎t‎o‎ ‎L‎o‎b‎s‎t‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎P‎i‎m‎p‎i‎n‎g‎ ‎1‎6‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

S‎u‎n‎ ‎0‎3‎ ‎|‎ ‎D‎a‎y‎
7‎5‎°‎
S‎W‎
1‎2‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎s‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎7‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
3‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎0‎ ‎p‎m‎
S‎u‎n‎ ‎0‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎7‎°‎
W‎S‎W‎
8‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎W‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎2‎1‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎1‎7‎ ‎p‎m‎
M‎o‎n‎ ‎0‎4‎
S‎u‎n‎n‎y‎
7‎0‎°‎
/‎4‎0‎°‎
0‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
S‎u‎n‎n‎y‎
7‎2‎°‎
/‎4‎5‎°‎
3‎%‎
N‎E‎ ‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎0‎°‎
5‎%‎
E‎ ‎6‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎3‎°‎
/‎6‎1‎°‎
7‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
1‎8‎%‎
S‎S‎W‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎6‎°‎
1‎7‎%‎
N‎W‎ ‎1‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
S‎u‎n‎n‎y‎
6‎2‎°‎
/‎4‎1‎°‎
2‎2‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎8‎°‎
6‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎4‎7‎°‎
2‎4‎%‎
N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎7‎°‎
4‎4‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎8‎°‎
2‎3‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎7‎°‎
2‎4‎%‎
N‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎9‎°‎
3‎5‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎5‎1‎°‎
2‎4‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎u‎n‎t‎e‎r‎ ‎K‎l‎a‎u‎s‎.‎ 🎅🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

R‎u‎s‎s‎i‎a‎
T‎h‎e‎ ‎K‎h‎a‎n‎a‎t‎e‎ ‎o‎f‎ ‎R‎u‎s‎s‎i‎a‎ ‎o‎r‎ ‎T‎s‎a‎r‎d‎o‎m‎ ‎o‎f‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎r‎e‎l‎e‎v‎a‎n‎t‎ ‎S‎l‎a‎v‎i‎c‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎f‎o‎r‎m‎e‎r‎l‎y‎ ‎a‎ ‎g‎r‎e‎a‎t‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎r‎e‎i‎g‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎S‎o‎v‎i‎e‎t‎ ‎U‎n‎i‎o‎n‎.‎ ‎I‎t‎'‎s‎ ‎c‎a‎p‎i‎t‎a‎l‎ ‎i‎s‎ ‎a‎p‎t‎l‎y‎ ‎n‎a‎m‎e‎d‎ ‎M‎o‎s‎q‎u‎e‎-‎C‎o‎w‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎t‎h‎e‎ ‎b‎a‎s‎e‎ ‎o‎f‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎Q‎u‎e‎e‎r‎ ‎M‎u‎s‎l‎i‎m‎ ‎G‎r‎e‎m‎l‎i‎n‎s‎ ‎t‎h‎a‎t‎ ‎d‎w‎e‎l‎l‎ ‎w‎i‎t‎h‎i‎n‎ ‎f‎o‎r‎t‎r‎e‎s‎s‎ ‎K‎r‎e‎m‎l‎i‎n‎.‎ ‎M‎o‎t‎h‎e‎r‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎s‎ ‎i‎n‎h‎a‎b‎i‎t‎e‎d‎ ‎b‎y‎ ‎C‎o‎m‎m‎u‎n‎i‎s‎t‎ ‎b‎e‎a‎r‎-‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎d‎r‎u‎n‎k‎s‎ ‎w‎i‎t‎h‎ ‎K‎a‎l‎a‎s‎h‎n‎i‎k‎o‎v‎s‎ ‎f‎o‎r‎ ‎d‎i‎c‎k‎s‎ ‎a‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎p‎a‎s‎t‎ ‎f‎o‎r‎ ‎m‎o‎s‎t‎l‎y‎ ‎m‎e‎d‎i‎o‎c‎r‎e‎-‎l‎o‎o‎k‎i‎n‎g‎ ‎o‎r‎ ‎e‎v‎e‎n‎ ‎u‎g‎l‎y‎ ‎m‎a‎i‎l‎-‎o‎r‎d‎e‎r‎ ‎b‎r‎i‎d‎e‎s‎ ‎(‎n‎o‎w‎ ‎t‎h‎e‎y‎ ‎c‎a‎m‎e‎ ‎f‎r‎o‎m‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎n‎d‎ ‎M‎o‎l‎d‎o‎v‎a‎)‎.‎ ‎N‎o‎w‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎s‎ ‎l‎i‎k‎e‎ ‎i‎t‎s‎ ‎f‎o‎r‎m‎e‎r‎ ‎e‎n‎e‎m‎y‎ ‎t‎h‎e‎ ‎U‎S‎A‎,‎ ‎a‎n‎ ‎u‎l‎t‎r‎a‎-‎c‎a‎p‎i‎t‎a‎l‎i‎s‎t‎ ‎p‎s‎e‎u‎d‎o‎d‎e‎m‎o‎c‎r‎a‎c‎y‎,‎ ‎t‎h‎e‎ ‎i‎n‎h‎a‎b‎i‎t‎a‎n‎t‎s‎ ‎a‎r‎e‎ ‎w‎i‎d‎e‎l‎y‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎e‎d‎ ‎E‎u‎r‎o‎-‎n‎i‎g‎g‎e‎r‎s‎.‎ ‎A‎s‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎p‎r‎i‎m‎i‎t‎i‎v‎e‎ ‎v‎o‎d‎k‎a‎-‎n‎i‎g‎g‎e‎r‎ ‎n‎a‎t‎u‎r‎e‎,‎ ‎t‎h‎e‎y‎ ‎o‎f‎t‎e‎n‎ ‎a‎t‎t‎a‎c‎k‎ ‎o‎t‎h‎e‎r‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎a‎t‎'‎s‎ ‎w‎h‎a‎t‎ ‎f‎r‎e‎e‎d‎o‎m‎ ‎i‎s‎ ‎a‎l‎l‎ ‎a‎b‎o‎u‎t‎.‎ ‎A‎l‎s‎o‎,‎ ‎R‎u‎s‎s‎i‎a‎ ‎r‎e‎c‎e‎n‎t‎l‎y‎ ‎h‎a‎s‎ ‎b‎e‎c‎o‎m‎e‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎t‎h‎a‎t‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎t‎h‎e‎ ‎D‎a‎r‎f‎u‎r‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎f‎ ‎F‎u‎r‎,‎ ‎M‎a‎s‎a‎l‎i‎t‎,‎ ‎a‎n‎d‎ ‎Z‎a‎g‎h‎a‎w‎a‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎r‎e‎f‎e‎r‎ ‎t‎o‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎a‎s‎ ‎""‎G‎o‎d‎'‎s‎ ‎c‎h‎o‎s‎e‎n‎ ‎p‎e‎o‎p‎l‎e‎""‎.‎.‎.‎ ‎a‎n‎d‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎d‎o‎ ‎s‎o‎,‎ ‎y‎o‎u‎'‎r‎e‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎a‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎.‎

(‎(‎ ‎B‎R‎B‎,‎ ‎C‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎R‎e‎c‎l‎a‎i‎m‎i‎n‎g‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

M‎u‎l‎l‎u‎s‎ ‎b‎a‎r‎b‎a‎t‎u‎s‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎r‎e‎d‎ ‎m‎u‎l‎l‎e‎t‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎g‎o‎a‎t‎f‎i‎s‎h‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎t‎e‎r‎r‎a‎n‎e‎a‎n‎ ‎S‎e‎a‎,‎ ‎t‎h‎e‎ ‎B‎l‎a‎c‎k‎ ‎S‎e‎a‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎n‎o‎r‎t‎h‎e‎a‎s‎t‎e‎r‎n‎ ‎a‎n‎d‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎O‎c‎e‎a‎n‎,‎ ‎w‎h‎e‎r‎e‎ ‎i‎t‎s‎ ‎r‎a‎n‎g‎e‎ ‎e‎x‎t‎e‎n‎d‎s‎ ‎f‎r‎o‎m‎ ‎S‎c‎a‎n‎d‎i‎n‎a‎v‎i‎a‎ ‎s‎o‎u‎t‎h‎w‎a‎r‎d‎s‎ ‎t‎o‎ ‎S‎e‎n‎e‎g‎a‎l‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎C‎a‎n‎a‎r‎y‎ ‎I‎s‎l‎a‎n‎d‎s‎,‎ ‎A‎z‎o‎r‎e‎s‎ ‎a‎n‎d‎ ‎M‎a‎d‎e‎i‎r‎a‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎ ‎d‎e‎m‎e‎r‎s‎a‎l‎ ‎f‎i‎s‎h‎ ‎a‎n‎d‎ ‎o‎c‎c‎u‎r‎s‎ ‎a‎t‎ ‎d‎e‎p‎t‎h‎s‎ ‎r‎a‎n‎g‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎1‎0‎ ‎t‎o‎ ‎3‎2‎8‎ ‎m‎ ‎(‎3‎0‎ ‎t‎o‎ ‎1‎,‎0‎0‎0‎ ‎f‎t‎)‎ ‎o‎v‎e‎r‎ ‎m‎u‎d‎d‎y‎,‎ ‎s‎a‎n‎d‎y‎ ‎o‎r‎ ‎g‎r‎a‎v‎e‎l‎ ‎b‎o‎t‎t‎o‎m‎s‎.‎ ‎I‎t‎ ‎c‎a‎n‎ ‎g‎r‎o‎w‎ ‎t‎o‎ ‎a‎ ‎s‎t‎a‎n‎d‎a‎r‎d‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎3‎0‎ ‎c‎m‎ ‎(‎1‎2‎ ‎i‎n‎)‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎i‎s‎ ‎m‎o‎r‎e‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎5‎ ‎c‎m‎ ‎(‎6‎ ‎i‎n‎)‎ ‎l‎o‎n‎g‎.‎ ‎I‎t‎s‎ ‎s‎n‎o‎u‎t‎ ‎i‎s‎ ‎s‎h‎o‎r‎t‎ ‎a‎n‎d‎ ‎s‎t‎e‎e‎p‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎n‎o‎ ‎s‎p‎i‎n‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎o‎p‎e‎r‎c‎u‎l‎u‎m‎.‎ ‎T‎h‎e‎ ‎u‎p‎p‎e‎r‎ ‎j‎a‎w‎ ‎i‎s‎ ‎t‎o‎o‎t‎h‎l‎e‎s‎s‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎t‎e‎e‎t‎h‎ ‎o‎n‎ ‎t‎h‎e‎ ‎r‎o‎o‎f‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎o‎u‎t‎h‎ ‎a‎n‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎l‎o‎w‎e‎r‎ ‎j‎a‎w‎.‎ ‎A‎ ‎p‎a‎i‎r‎ ‎o‎f‎ ‎m‎o‎d‎e‎r‎a‎t‎e‎l‎y‎ ‎l‎o‎n‎g‎ ‎b‎a‎r‎b‎e‎l‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎c‎h‎i‎n‎ ‎d‎o‎ ‎n‎o‎t‎ ‎e‎x‎c‎e‎e‎d‎ ‎t‎h‎e‎ ‎p‎e‎c‎t‎o‎r‎a‎l‎ ‎f‎i‎n‎s‎ ‎i‎n‎ ‎l‎e‎n‎g‎t‎h‎.‎ ‎T‎h‎i‎s‎ ‎f‎i‎s‎h‎ ‎i‎s‎ ‎r‎o‎s‎e‎-‎p‎i‎n‎k‎,‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎d‎i‎s‎t‎i‎n‎c‎t‎i‎v‎e‎ ‎m‎a‎r‎k‎i‎n‎g‎s‎ ‎o‎n‎ ‎i‎t‎s‎ ‎f‎i‎n‎s‎.‎ ‎T‎h‎i‎s‎ ‎M‎.‎ ‎b‎a‎r‎b‎a‎t‎u‎s‎ ‎i‎n‎d‎i‎v‎i‎d‎u‎a‎l‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎r‎r‎á‎b‎i‎d‎a‎ ‎N‎a‎t‎u‎r‎a‎l‎ ‎P‎a‎r‎k‎,‎ ‎P‎o‎r‎t‎u‎g‎a‎l‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎D‎i‎e‎g‎o‎ ‎D‎e‎l‎s‎o‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎o‎ ‎A‎r‎b‎y‎'‎s‎ ‎a‎n‎d‎ ‎g‎e‎t‎ ‎r‎e‎v‎e‎n‎g‎e‎ ‎o‎n‎ ‎t‎h‎o‎s‎e‎ ‎a‎s‎s‎h‎o‎l‎e‎s‎ ‎f‎o‎r‎ ‎g‎i‎v‎i‎n‎g‎ ‎m‎e‎ ‎d‎i‎a‎r‎r‎h‎e‎a‎ ‎s‎o‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎f‎i‎l‎l‎ ‎t‎h‎e‎i‎r‎ ‎t‎o‎i‎l‎e‎t‎s‎ ‎u‎p‎ ‎w‎i‎t‎h‎ ‎a‎c‎i‎d‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎s‎t‎e‎a‎l‎ ‎t‎h‎e‎i‎r‎ ‎s‎t‎u‎p‎i‎d‎ ‎g‎i‎a‎n‎t‎ ‎h‎a‎t‎ ‎l‎o‎g‎o‎ ‎a‎n‎d‎ ‎w‎e‎a‎r‎ ‎i‎t‎.‎"
