id,title,username,language,date,content
XGEsrNgp,BTC Wallet Credentials have been reset,castlclass_20,GetText,Wednesday 15th of November 2023 11:44:58 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
rhydyllaqx:cYbxTP on 212.224.93.130
You can connect via SSH.
Regards"
BnYXjYnD,1-49,DerioFT,Java,Wednesday 15th of November 2023 11:28:43 PM CDT,"import java.io.*;
public class Tugas3 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int soal = 0;
		
		System.out.print(""Soal = "");
		soal = Integer.parseInt(br.readLine());
		
		switch(soal) {
			case 1 : 
				soal1();
				break;
				
			case 2 : 
				soal2();
				break;
				
			case 3 : 
				soal3();
				break;
				
			case 4 : 
				soal4();
				break;
				
			case 5 : 
				soal5();
				break;
				
			case 6 : 
				soal6();
				break;
				
			case 7 : 
				soal7();
				break;
				
			case 8 : 
				soal8();
				break;
				
			case 9 : 
				soal9();
				break;
				
			case 10 : 
				soal10();
				break;
				
			case 11 : 
				soal11();
				break;
				
			case 12 : 
				soal12();
				break;
				
			case 13 : 
				soal13();
				break;
				
			case 14 : 
				soal14();
				break;
				
			case 15 : 
				soal15();
				break;
				
			case 16 : 
				soal16();
				break;
				
			case 17 : 
				soal17();
				break;
				
			case 18 : 
				soal18();
				break;
				
			case 19 : 
				soal19();
				break;
				
			case 20 : 
				soal20();
				break;
				
			case 21 : 
				soal21();
				break;
				
			case 22 : 
				soal22();
				break;

			case 23 : 
				soal23();
				break;
				
			case 24 : 
				soal24();
				break;
				
			case 25 : 
				soal25();
				break;
				
			case 26 : 
				soal26();
				break;
				
			case 27 : 
				soal27();
				break;
			
			case 28 :
				soal28();
				break;
			
			case 29 :
				soal29();
				break;
				
			case 30 :
				soal30();
				break;
				
			case 31 :
				soal31();
				break;
				
			case 32 :
				soal32();
				break;
			
			case 33 :
				soal33();
				break;
				
			case 34 :
				soal34();
				break;
				
			case 35 :
				soal35();
				break;
				
			case 36 :
				soal36();
				break;
				
			case 37 :
				soal37();
				break;
				
			case 38 :
				soal38();
				break;
				
			case 39 :
				soal39();
				break;
						
			case 40 :
				soal40();
				break;		
			
			case 41 :
				soal41();
				break;
			
			case 42 :
				soal42();
				break;
			
			case 43 :
				soal43();
				break;
			
			case 44 :
				soal44();
				break;
			
			case 45 :
				soal45();
				break;
			
			case 46 :
				soal46();
				break;
			
			case 47 :
				soal47();
				break;
			
			case 48 :
				soal48();
				break;
				
			case 49:
				soal49();
				break;
		}

	}
	public static void soal1() {
		
		int i = 1;
		
		do {
			System.out.println(""Hello World"");
			i++;
		} while (i <= 100);
	}
	
	public static void soal2() {
		
		int i = 1;
		
		while (i <= 100) {
			System.out.println(i);
			i++;
		}
	}
	
	public static void soal3() {
		
		int i = 100;
		
		do {
			System.out.println(i);
			i--;
		} while (i > 0);
	}
	
	public static void soal4() {
		int i = 30;
		
		do {
			if (i % 2 != 0) {
				System.out.println(i);
			}
			i++;
		} while(i <= 120);
	}
	
	public static void soal5() {
		
		int i = 30;
		
		do {
			if (i % 2 == 0) {
				System.out.println(i);
			}
			i++;
		} while (i <= 120);
	}
	
	public static void soal6() {
		
		int i = 1;
		
		while (i <= 100) {
			
			if (i % 7 == 0) {
				System.out.println(i);
			}
			i++;
		}
	}
	
	public static void soal7() {
		
		for(int i = 1; i <= 500; i++) {
			if (i % 15 == 0) {
				System.out.println(i);
			}
		}
	}
	
	public static void soal8() throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int batas_bawah = 0, batas_atas = 0;
		
		System.out.print(""Batas bawah = "");
		batas_bawah = Integer.parseInt(br.readLine());
		System.out.print(""Batas atas = "");
		batas_atas = Integer.parseInt(br.readLine());
		
		while (batas_bawah <= batas_atas) {
			if (batas_bawah % 25 == 0) {
				System.out.println(batas_bawah);
			}
			batas_bawah++;
		}
	}
	
	public static void soal9() {
		
		char i = 'A';
		
		while (i <= 'Z') {
			System.out.println(i);
			i++;
		}
	}
	
	public static void soal10() {
		
		char i = 'Z';
		
		while (i >= 'A') {
			System.out.println(i);
			i--;
		}
	}
	
	public static void soal11() {
		
		for (int i = 1; i <= 5; i++) {
			System.out.print(i);
			
			if (i >= 1 && i < 5) {
				System.out.print("" dan "");
			}
		}
	}
	
	public static void soal12() {
		
		int jumlah = 0;
		
		for (int i = 1; i <= 10; i++) {
			
			jumlah += i;
			
			if (i == 10) {
				System.out.print(i + "" = "" + jumlah);
			}
			else {
				System.out.print(i + "" + "");
			}
		}
	}
	
	public static void soal13() {
		
		int i = 1;
		int j = 1;
		
		while (j <= 8) {
			i *= 2;
			j++;
			System.out.print(i + "" "");
		}
	}
	
	public static void soal14() {
		
		for (int i = 1; i <= 7; i++) {
			
			for (int j = 1; j <= i; j++) {
				System.out.print(i + "" "");
			}
		}
	}	
	
	public static void soal15() {
		
		for (int i = 7; i > 0; i--) {
			
			for (int j = 1; j <= i; j++) {
				System.out.print(i + "" "");
			}
		}
	}
	
	public static void soal16() {
		
		for (int i = 1; i <= 6; i++) {
			
			for (int j = 1; j <= i; j++) {
				
				System.out.print(j + "" "");
			}
		}
	}
	
	public static void soal17() {
		
		for (int i = 6; i > 0; i--) {
			
			for (int j = i ; j > 0 ; j--) {
				System.out.print(j + "" "");
			}
		}
	}
	
	public static void soal18() {

		for (int i = 1; i <=6; i++) {
			
			for (int j = 1; j<=i; j++) {
				
				if (i % 2 == 0) {
					System.out.print(j + "" "");
				}
				else {	
					System.out.print(i + "" "");
				}
			}
		}
	}
	
	public static void soal19() {
		
		for (int i = 1; i <= 6; i++) {
			
			for (int j = 1 ; j<=i; j++) {
				
				if (i % 2 == 0) {
					System.out.print(i + "" "");
				}
				else {
					System.out.print(j + "" "");
				}
			}
		}
	}
	
	public static void soal20() {
		
		for (int i = 6; i > 0; i--) {
			
			for (int j = i; j > 0; j--) {
				
				if (i % 2 == 0) {
					System.out.print(j+ "" "");
				}
				else {
					System.out.print(i+ "" "");
				}

			}
		}
	}
	
	public static void soal21() {
		
		for (int i = 6; i > 0; i--) {
			
			for (int j = 1 ; j <= i; j++) {
				
				if (i % 2 == 0) {
					System.out.print(i + "" "");
				}
				else {
					System.out.print(j + "" "");
				}
			}
		}
	}
	
	public static void soal22() {
		
		for (int i = 1 ; i <= 9; i++) {
			
			for (int j = 1 ; j <= i; j++) {
				
				if (i % 4 == 1 || i % 4 == 2) {
					System.out.print(i);
				}
				else {
					System.out.print(j);
				}
			}
		}
	}
	
	public static void soal23() {
		for (int i = 1; i <= 9 ; i++) {
			
			for(int j = 1; j <= i; j++) {
				
				if (i % 4 == 0 || i % 4 == 3) {
					System.out.print(i);
				}
				else {
					System.out.print(j);
				}
			}
		}
	}
	
	public static void soal24() {
		for (int i = 8 ; i > 0 ; i--) {
			
			for (int j = i ; j > 0 ; j--) {
				
				if (i % 4 == 3 || i % 4 == 0) {
					System.out.print(i);
				}		
				else {
					System.out.print(j);
				}
			}			
		}
	}
	
	public static void soal25() {
		for (int i = 8 ; i > 0 ; i--) {
			
			for (int j = i ; j > 0 ; j--) {
				
				if (i % 4 == 2 || i % 4 == 1) {
					System.out.print(i);
				}
				else{
					System.out.print(j);
				}
			}
		}
	}
	
	public static void soal26() {
		
		int awal = 1;
		
		for (int i = 0; i < 12; i++) {
			System.out.print(awal + "" "");
			
			if (i % 2 == 0) {
				awal += 4;
			}
			else {
				awal -= 2;
			}
		}
	}
	
	public static void soal27() {
		
		int awal = 2;	
		
		for (int i = 0; i < 10; i++) {
			System.out.print(awal + "" "");
			
			if (i % 2 == 0) {
				awal += 10;
			}
			else {
				awal -= 5;
			}
		}
	}
	
	public static void soal28() {
		
		int awal = 5;
		
		for (int i = 0; i < 12; i++) {
			System.out.print(awal + "" "");
			
			if (i % 2 == 0) {
				awal -= 3;
			}
			else {
				awal += 5;
			}
			
		}
		
	}
	
	public static void soal29() {
		
		int awal = 3, ratio = 1;
		
		for (int i = 0; i < 5; i++) {
			System.out.print(awal + "" "");
			System.out.print(awal * 3 + "" "");
			awal += ratio;
			ratio *= 3;
			
		}
	}
	
	public static void soal30() {
		
		int awal = 1;
		
		for (int i = 1; i < 14; i++) {
			System.out.print(awal + "" "");
			if (i % 3 == 0) {
				awal += 3;
			}
			else if (i % 3 == 1) {
				awal += 1;
			}
			else {
				awal += 2;
			}
		}
	}
	
	public static void soal31() {
		
		int awal = 1;
		
		while (awal <= 512) {
			System.out.print(awal + "" "");
			awal *= 2;
		}
	}
	
	public static void soal32() {
		
		int angka1 = 0, angka2 = 1, angka3 = 0;
		
		while (angka1 <= 34) {
			
			System.out.print(angka1 + "" "");
			
			angka3 = angka1 + angka2;
			angka1 = angka2;
			angka2 = angka3;

		}
	}
	
	public static void soal33() {
		
		int angka1 = 0, angka2 = 1, angka3 = 0, i = 0;
		
		do {
			System.out.print(angka1 + "" "");
			
			angka3 = angka1 + angka2;
			angka1 = angka2;
			angka2 = angka3;
			i++;
			
		} while(i < 10);
	}
	
	public static void soal34() {
		
		for (int i = 1; i <= 3; i++) {
			
			for (int j = 1; j <= 10; j++ ) {
				System.out.print(""1"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal35() {
		
		for (int i = 1; i <= 3; i++) {
			
			for (int j = 1; j <= (i * 3); j++) {
				
				System.out.print(""1"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal36() {
		int angka1 = 2;
		int angka2 = -3;
		
		int awal = 2;
		
		for (int i = 1; i <= 16; i++) {
			
			System.out.print(awal + "" "");
			
			if (i % 2 == 0) {
				awal += 7;
			}
			else {
				awal -= 5;
			}
		}
	}
	
	public static void soal37() {
		
		for (int i = 1; i <= 18; i++) {
			
			if (i % 3 == 0) {
				System.out.print(""1"" + "" "");
			}
			else if (i % 3 == 1) {
				System.out.print(""0"" + "" "");
			}
			else {
				System.out.print(""*"" + "" "");
			}
		}
	}
	
	public static void soal38() {
		
		for (int i = 1; i <= 1000000; i *= 10) {
			
			System.out.print(i + "" "");
		}
	}
	
	public static void soal39() {
		
		for (int i = 1; i <= 3; i++) {
			
			for (int j = 1; j <= 7; j++) {
				System.out.print(""*"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal40() {
		
		for (int i = 1; i <= 3; i++) {
			
			for (int j = 1; j <= 5; j++) {
				System.out.print(""1"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal41() {
		
		for (int i = 1; i <= 4; i++) {
			
			for (int j = 1; j <= 7; j++) {
				
				System.out.print(i + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal42() {
		
		for (int i = 1; i <= 5; i++) {
			
			for (int j = 1; j <= 7; j++) {
				
				System.out.print(j + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal43() {
		
		for (int i = 1; i <= 7; i++) {
			
			for (int j = 1; j <= i; j++) {
				
				System.out.print(i + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal44() {
		
		for (int i = 1; i <= 7; i++) {
			
			for (int j = 1; j <= i; j++) {
				
				System.out.print(j + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal45() {
		
		for (int i = 1; i <= 3; i++) {
			
			for (int j = 1; j <= 7; j++) {
				
				System.out.print(i + ""."" + j + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal46() {
		
		for (int i = 1; i <= 5; i++) {
			
			for (int j = 1; j <= i; j++) {
				
				System.out.print(""*"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal47() {
		
		for (int i = 5; i >= 1; i--) {
			
			for (int j = 1; j <= i; j++) {
				
				System.out.print(""*"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal48(){
		
		for (int i = 1; i <= 4; i++) {
			
			for (int j = 4; j > i; j--) {
				System.out.print(""  "");
			}
			
			for (int k = 1; k < i*2; k++) {
				System.out.print(""*"" + "" "");
			}
			System.out.println();
		}
	}
	
	public static void soal49() {
		
		for (int i = 1; i <= 4; i++) {
			
			for (int j = 1; j <= i+2; j++) {
				System.out.print(""*"" + "" "");
			}
			System.out.println();
		}
	}
}
"
eZSURP1y,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Wednesday 15th of November 2023 11:22:15 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT538019"
v2DvJHwQ,password_generator,UF6,Python,Wednesday 15th of November 2023 11:15:38 PM CDT,"import random
import string

def generate_password(length=12):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def main():
    print(""Welcome to the Password Generator!"")
    while True:
        try:
            password_length = int(input(""Enter the desired password length (at least 4 characters): ""))
            if password_length < 4:
                print(""Password length should be at least 4 characters."")
                continue
            password = generate_password(password_length)
            print(""Generated password:"", password)
            break
        except ValueError:
            print(""Please enter a valid number for the password length."")

if __name__ == ""__main__"":
    main()
"
7ettMEC8,СПРИНТ № 3 | Фреймворк для юнит-тестов | Урок 6: Работаем с cerr,chevengur,C++,Wednesday 15th of November 2023 11:02:36 PM CDT,"https://t.me/hitmyfeet канал с музыкой от начинающего программиста.

#include <iostream>
#include <string>

using namespace std;

template <typename T>
void RunTestImpl(const T&inf, const string& str) {
    inf();
    cerr << str << "" OK"" << endl;
}

#define RUN_TEST(func)  RunTestImpl(func, #func)

void Test1() {
}

int main() {
    RUN_TEST(Test1);
}"
sZ3BLV1a,Untitled,Falexom,Python,Wednesday 15th of November 2023 10:34:06 PM CDT,"class Solution:
    def countNegatives(self, grid):
        result = 0
        #   temp = []

        for row in grid:
            if len(row) > 1:
                row = sorted(row)
                left = 0
                right = len(row)-1
            else:
                if row[0] < 0:
                    result += 1
                continue
            iterations = 0
            #   print(result)
            while left < right:
                if row[left] == row[right] and iterations == 0:
                    if row[right] < 0:
                        result += len(row)
                    break
                if row[left] < 0 and row[right] < 0 and iterations == 0:
                    result += len(row)
                    break
                iterations = 1
                #   print(left, right)
                if row[right] >= 0 and row[left] >= 0:
                    temp_row_left = left
                    temp_row_right = right
                    left += 1
                    right -= 1
                    if left == temp_row_right and right == temp_row_left:
                        break
                if row[left] < 0:
                    #   temp.append((row, row[left]))
                    result += 1
                    left += 1
                if row[right] < 0:
                    #   temp.append((row, row[right]))
                    right -= 1
                    result += 1

        return result


s = Solution()
print(s.countNegatives([[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]))
"
CG0Z4cS1,C++ Cheat Sheet,byt3z,C++,Wednesday 15th of November 2023 10:01:54 PM CDT,"** C++ Cheat Sheet **

* Template starter code for C++ *

// Includes the entire std library for C++
#include <bits/stdc++.h>
using namespace std;

int main() {
    // Fast IO
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t = 1;
    cin >> t;
    while (t--) {
    
    }
}

------------------------------------------------------------------------------------------

* Basic I/O *

int n;
cin >> n;

int a, b, c;
cin >> a >> b >> c;

int n;
cout << n << endl;

string s;
cout << s << endl;

------------------------------------------------------------------------------------------

* Reading Strings *

string s;
cin >> s;
string s;
getline(cin, s);

------------------------------------------------------------------------------------------

* Set Output Precision *

cout << fixed << setprecision(2); // Does a round up

int res = 5.45666;
cout << res << endl; // 5.46

int truncated_res = floor(100 * res) / 100;
cout << truncated_res << endl; // 5.45

------------------------------------------------------------------------------------------

* Vector *

vector<int> v_size_ten(10);
vector<int> v_without_size;

for (auto &x:v_size_ten) {
    cin >> x;
}

for (int i = 0; i < v_size_ten.size(); i++) {
    cin >> v_size_ten[i];
}

vector<int> v_demo;
v_demo.push_back(10); // O(1)
v_demo.push_back(4);


v_demo.pop_back(); // O(1)

sort(begin(v_demo), end(v_demo)); // Ascending
sort(v_demo.begin(), v_demo.end());

sort(rbegin(v_demo), rend(v_demo)); // Descending
sort(v_demo.rbegin(), v_demo.rend());

sort(begin(v_demo), end(v_demo), greater<int>()); // Descending
sort(v_demo.begin(), v_demo.end(), greater<int>());
// Output the contents of a vector


for (auto x:v_demo) {
    cout << x << "" "";
}

for (int i = 0; i < v_demo.size(); i++) {
    cout << v_demo[i] << "" "";
}

------------------------------------------------------------------------------------------
    
* Map *

map<int, int> int_to_int;
map<string, int> string_to_int;
map<pair<int, int>, int> pair_of_ints_to_int;
map<vector<int>, int> vector_of_ints_to_int;
map<int, int> map2(map1.begin(), map2.end());

map<int, int> mp_demo;

int key, val;
cin >> key >> val;
mp_demo[key] = val;

mp_demo[2] = 9; // O(log n)
mp_demo[1] = 10;
mp_demo[10] = 1;

cout << mp_demo[key] << endl;

mp_demo.size() // O(1)
mp_demo.empty() // O(1)
mp_demo.clear() // O(n)
mp_demo.insert(pair<int, int>(1, 40)); // O(log n)
mp_demo.erase(key); // O(log n)
mp_demo.count(key); // O(log n)

mp_demo.lower_bound(5)->second; // O(n log n) 
                                // equivalent or immediate  greater
                                //mp_demo.lower_bound(5)->second == 0 if not present


mp_demo.upper_bound(5)->second; // O(n log n)
                                // immediate greater
                                //mp_demo.upper_bound(5)->second == 0 if not present


for (auto [k, v]: mp_demo) {
    cout << k << "" "" << v << endl;
}

for (auto itr = mp_demo.begin(); itr != mp_demo.end(); ++itr) {
    cout << '\t' << itr->first << '\t' << itr->second << '\n';
}

------------------------------------------------------------------------------------------

* Unordered Map *

unordered_map<int, int> int_to_int;
unordered_map<string, int> string_to_int;
unordered_map<int, int> map2(map1.begin(), map2.end());

unordered_map<int, int> mp_demo;

int key, val;
cin >> key >> val;
mp_demo[key] = val;

mp_demo[2] = 9; // O(1)
mp_demo[1] = 10;
mp_demo[10] = 1;

cout << mp_demo[key] << endl;

mp_demo.size() // O(1)
mp_demo.empty() // O(1)
mp_demo.clear() // O(n)
mp_demo.insert(pair<int, int>(1, 40)); // O(1)
mp_demo.erase(key); // O(1)
mp_demo.count(key); // O(1)


for (auto [k, v]: mp_demo) {
    cout << k << "" "" << v << endl;
}

for (auto itr = map.begin(); itr != map.end(); ++itr) {
    cout << '\t' << itr->first << '\t' << itr->second << '\n';
}

------------------------------------------------------------------------------------------

* Set / Unordered_Set (The operations are the same) *

// Instantiating sets
set<int> set_of_ints;
set<char> set_of_chars;

set<int> set_demo;

// Inserting into sets
int x;
cin >> x;
set_demo.insert(x);

set_demo.insert(10);
set_demo.insert(8);
set_demo.insert(100);

// Outputting from sets
// Sets are ordered in ascending order, so below will output 8, 10, 100
for (auto x:set_demo) {
    cout << x << "" "";
}

------------------------------------------------------------------------------------------

* Stack *
// Instantiating stacks
stack<int> st;

st.push(10);
st.push(11);
st.push(9); // The stack is now { 10, 11, 9 }

// C++'s stack does not return an element with pop
st.pop(); // The stack is now { 10, 11, 9 }

// Use the .top() function to get the top element
int top = st.top(); // top = 11, stack is still { 10, 11 }

------------------------------------------------------------------------------------------

* Queue *
// Instantiation queues
queue<int> q;

q.push(10);
q.push(11);
q.push(9); // The queue is now { 10, 11, 9 }
// C++'s queue does not return an element with pop
q.pop() // The queue is now { 11, 9 }

// Use the .front() function to get the front element
int front = q.front() // front = 11, queue is still { 11, 9 }

------------------------------------------------------------------------------------------

* Deque *
// Instantiating deque
deque<int> dq;

// You can push onto the front
dq.push_front(10); 
dq.push_front(11); // dq is now { 11, 10 }

// And you can push onto the back
dq.push_back(1);
dq.push_back(2); // dq is now { 11, 10, 1, 2 }

// Like the stack and the queue, popping does not return elements
// You can pop from the front
dq.pop_front(); // dq is now { 10, 1, 2 }

// And you can pop from the back
dq.pop_back(); // dq is now { 10, 1 }

// You can get the front element and the back element
int front = dq.front() // front = 10, dq is still { 10, 1 }
int back = dq.back() // back = 1, dq is still { 10, 1 }

// Sorting deques, all of the sorting methods discussed in the vector
// section will work
sort(begin(dq), end(dq)) // dq is now { 1, 10 }

// You can also index into deques
int first = dq[0] // first = 1

------------------------------------------------------------------------------------------
    
* Priority Queue *
// Instantiating priority queue
priority_queue<int> pq_max; // This will create a max heap
priority_queue<int, vector<int>, greater<int>> pq_min; // This will create a min heap

pq_max.push(10); // Popping order is { 10 }
pq_max.push(1); // Popping order is { 10, 1 }
pq_max.push(4); // Popping order is { 10, 4, 1 }

// Popping elements, will not return the element popped
pq_max.pop(); // Popping order is { 4, 1 }

// Getting the first element in the popping order
pq_max.top() // Will return 4, the popping order is still { 4, 1 }

------------------------------------------------------------------------------------------

* Dijkstra *

priority_queue<
    tuple<ll, ll, ll>, 
    vector<tuple<ll, ll, ll>>, 
    greater<tuple<ll, ll, ll>>
> mh;

mh.push({0, 1, -1});
unordered_map<ll, pair<ll, ll>> dm;

while(!mh.empty()) {
    auto p = mh.top();
    mh.pop();

    ll dist = get<0>(p);
    ll curr = get<1>(p);
    ll prev = get<2>(p);

    if(dm.count(curr) == 0 || dm[curr].first > dist) {
        dm[curr] = {dist, prev}; // {dist, came_from}
    }

    for(auto [next, w]: adj[curr]) {
        if(next == prev)
            continue;

        if(dm.count(next) != 0)
            continue;

        mh.push({ w+dist, next, curr });
    }
}


"
7Pt4T1V6,521BrowserCate,FreedTV,JSON,Wednesday 15th of November 2023 08:07:16 PM CDT,"{
  ""cateList"": [
    {
      ""title"": ""夸克热搜"",
      ""pic"": ""https://img.alicdn.com/imgextra/i1/913168420/O1CN014XTzh12C4PlUrCXJu_!!913168420.png"",
      ""url"": ""https://vt.quark.cn/blm/hot-board-599/tab?app=news"",
      ""app"": true
    }
  ]
}"
DW1HJsHV,Day 7 recap 2,HarrJ,Java,Wednesday 15th of November 2023 07:42:39 PM CDT,"public class Day07D {
    public static void main(String[] args) {
        String monthName = ""January"";
        int dateNum = 32;
        String zodiacSign = """";
        
        switch (monthName) {
            case ""January"":
                if (dateNum <= 19) {
                    zodiacSign = ""Capricorn"";
                } else {
                    zodiacSign = ""Aquarius"";
                }
                break;
            case ""February"":
                if (dateNum <= 18) {
                    zodiacSign = ""Aquarius"";
                } else {
                    zodiacSign = ""Pisces"";
                }
                break;
            case ""March"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""April"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""May"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""June"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""July"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""August"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""September"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""October"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""November"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            case ""December"":
                if (dateNum <= 0) {
                    zodiacSign = ""_"";
                } else {
                    zodiacSign = ""_"";
                }
                break;
            default:
                zodiacSign = ""Not Applicable. Please Try Again"";
        }
        
        System.out.println(""Birthday: "" + monthName + "" "" + dateNum);
        System.out.println(""Sign: "" + zodiacSign);
    }
}
"
U1zRfcC4,Woo LS POS - Update parent SKU w/ ls matrix id,ampdev,MySQL,Wednesday 15th of November 2023 07:38:36 PM CDT,"UPDATE `wp_zz_postmeta` AS pm
JOIN `wp_zz_posts` AS p ON pm.post_id = p.ID
JOIN `wp_zz_wclsi_items` AS ls ON pm.meta_value = ls.system_sku
SET pm.meta_value = ls.item_matrix_id
WHERE pm.meta_value REGEXP '^[0-9]+$' 
AND pm.meta_key = '_sku'
AND p.post_type = 'product'
AND p.post_status = 'publish'
AND EXISTS (
    SELECT `post_id` FROM `wp_zz_postmeta`
    WHERE `post_id` = p.ID);"
7UCrhgrL,RenderPassTrace,Zgragselus,C,Wednesday 15th of November 2023 07:20:03 PM CDT,"#include ""Raytracer.hlsli""

cbuffer Params : register(b0)
{
	float4 ResolutionParams;
	float4 BoundsMin;
	float4 BoundsMax;
}

RWStructuredBuffer<Ray> Rays : register(u0);
RWTexture2D<float4> Output: register(u1);
RWStructuredBuffer<float4> VertexData: register(u2);
RWStructuredBuffer<MemoryNode> VertexNodes: register(u3);
RWStructuredBuffer<uint> IndexData: register(u4);
RWStructuredBuffer<MemoryNode> IndexNodes: register(u5);
RWStructuredBuffer<GeometryNode> Geometries: register(u6);
RWStructuredBuffer<InstanceNode> Instances: register(u7);
RWStructuredBuffer<BVHNode> ASTreeData: register(u8);
RWStructuredBuffer<MemoryNode> ASTreeNodes: register(u9);
RWStructuredBuffer<uint> ASIndexData: register(u10);
RWStructuredBuffer<MemoryNode> ASIndexNodes: register(u11);
RWStructuredBuffer<float4> WoopData: register(u12);
RWStructuredBuffer<MemoryNode> WoopNodes: register(u13);

bool IntersectRayTriangle(float4 origin, float4 direction, float4 v0, float4 v1, float4 v2, out float distance, out float u, out float v)
{
	float4 e1 = v1 - v0;
	float4 e2 = v2 - v0;
	float4 pvec = float4(cross(direction.xyz, e2.xyz), 0.0f);
	float det = dot(e1, pvec);
	if (det > -1e-6 && det < 1e-6)
	{
		return false;
	}
	float inv_det = 1.0f / det;

	float4 tvec = origin - v0;
	u = dot(tvec, pvec) * inv_det;
	if (u < 0.0f || u > 1.0f)
	{
		return false;
	}

	float4 qvec = float4(cross(tvec.xyz, e1.xyz), 0.0f);
	v = dot(direction, qvec) * inv_det;
	if (v < 0.0f || u + v > 1.0f)
	{
		return false;
	}

	distance = dot(e2, qvec) * inv_det;
	return (distance > 0.0f);
}

#define BVH_STACK_SIZE 64

[numthreads(32, 32, 1)]
void RenderPass(uint3 GI : SV_GroupID, uint3 DTid : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID)
{
	uint width = asuint(ResolutionParams.x);
	uint height = asuint(ResolutionParams.y);

	int id = DTid.y * width + DTid.x;
	
	Ray r = Rays[id];

	float4 o = r.Origin;
	float4 d = r.Direction;
	float4 inv = r.Inverse;
	float4 oinv = o * inv;

	uint node_id = 0;
	uint stack[BVH_STACK_SIZE];
	uint stack_ptr = 0;
	stack[stack_ptr] = 0xFFFFFFFF;
	int meshbvh_stack_ptr = -1;

	float tmin = 0.0f;
	float tmax = 10000.0f;
	float bU = 0.0f;
	float bV = 0.0f;
	float dist = tmax;
	bool hit = false;

	float4 temp = float4(0.0f, 0.0f, 0.0f, 1.0f);

	InstanceNode instance = Instances[0];

	int i;

	// Traversal (use for for testing)
	[loop] for (i = 0; i < 1000; i++)
	//while (node_id != 0xFFFFFFFF) // This is significantly slower on RDNA 2, not sure about others
	{
		temp.x += 0.001f;

		[branch] if (ASTreeData[node_id].PrimitiveCount == 0)
		{
			// Fetch children bounding boxes
			float4 n0xy = ASTreeData[node_id].LXY;
			float4 n1xy = ASTreeData[node_id].RXY;
			float4 nz = ASTreeData[node_id].LRZ;

			// Test against child AABBs
			float c0lox = n0xy.x * inv.x - oinv.x;
			float c0hix = n0xy.y * inv.x - oinv.x;
			float c0loy = n0xy.z * inv.y - oinv.y;
			float c0hiy = n0xy.w * inv.y - oinv.y;
			float c0loz = nz.x * inv.z - oinv.z;
			float c0hiz = nz.y * inv.z - oinv.z;
			float c1loz = nz.z * inv.z - oinv.z;
			float c1hiz = nz.w * inv.z - oinv.z;
			float c0min = max(max(min(c0lox, c0hix), min(c0loy, c0hiy)), max(min(c0loz, c0hiz), tmin));
			float c0max = min(min(max(c0lox, c0hix), max(c0loy, c0hiy)), min(max(c0loz, c0hiz), tmax));
			float c1lox = n1xy.x * inv.x - oinv.x;
			float c1hix = n1xy.y * inv.x - oinv.x;
			float c1loy = n1xy.z * inv.y - oinv.y;
			float c1hiy = n1xy.w * inv.y - oinv.y;
			float c1min = max(max(min(c1lox, c1hix), min(c1loy, c1hiy)), max(min(c1loz, c1hiz), tmin));
			float c1max = min(min(max(c1lox, c1hix), max(c1loy, c1hiy)), min(max(c1loz, c1hiz), tmax));

			bool traverseChild0 = (c0max >= c0min);
			bool traverseChild1 = (c1max >= c1min);

			// If no children was hit, get node from stack
			if (!traverseChild0 && !traverseChild1)
			{
				if (stack_ptr == meshbvh_stack_ptr)
				{
					meshbvh_stack_ptr = -1;
					o = r.Origin;
					d = r.Direction;
					inv = r.Inverse;
					oinv = o * inv;
				}

				node_id = stack[stack_ptr];
				stack_ptr--;
			}
			else if (traverseChild0 || traverseChild1)
			{
				uint first_child = node_id + 1;
				uint second_child = ASTreeData[node_id].PrimitiveOffset;
				node_id = (traverseChild0) ? first_child : second_child;

				if (traverseChild0 && traverseChild1)
				{
					if (c1min < c0min)
					{
						node_id = second_child;
						stack_ptr++;
						stack[stack_ptr] = first_child;
					}
					else
					{
						stack_ptr++;
						stack[stack_ptr] = second_child;
					}
				}
			}
		}
		else if (ASTreeData[node_id].PrimitiveCount == -1)
		{
			meshbvh_stack_ptr = stack_ptr;

			uint blas_offset = ASTreeData[node_id].PrimitiveOffset;
			uint instance_index = ASIndexData[blas_offset];
			instance = Instances[instance_index];

			node_id = ASTreeNodes[Geometries[instance.GeometryNode].BVHNode + 1].Offset / 64;

			o = mul(r.Origin, instance.TransformInverse);
			d = mul(r.Direction, instance.TransformInverse);
			inv = rcp(d);
			oinv = o * inv;
		}
		else
		{
			if (ASTreeData[node_id].PrimitiveCount > 0)
			{
				GeometryNode geom = Geometries[instance.GeometryNode];
				//MemoryNode vbo = VertexNodes[geom.VertexBufferNode];
				//MemoryNode ibo = IndexNodes[geom.IndexBufferNode];
				MemoryNode wbo = WoopNodes[geom.WoopBufferNode];

				uint index_offset = ASIndexNodes[ASTreeData[node_id].PrimitiveOffset].Offset / 4;

				for (uint j = 0; j < ASTreeData[node_id].PrimitiveCount; j++)
				{
					// Don't trash cache by reading index through it
					uint tri_idx = ASIndexData[ASTreeData[node_id].PrimitiveOffset + j] * 3;
					float4 r = WoopData[wbo.Offset / 16 + tri_idx + 0];
					float4 p = WoopData[wbo.Offset / 16 + tri_idx + 1];
					float4 q = WoopData[wbo.Offset / 16 + tri_idx + 2];

					float o_z = r.w - o.x * r.x - o.y * r.y - o.z * r.z;
					float i_z = 1.0f / (d.x * r.x + d.y * r.y + d.z * r.z);
					float t = o_z * i_z;

					if (t > tmin && t < tmax)
					{
						float o_x = p.w + o.x * p.x + o.y * p.y + o.z * p.z;
						float d_x = d.x * p.x + d.y * p.y + d.z * p.z;
						float u = o_x + t * d_x;

						if (u >= 0.0f && u <= 1.0f)
						{
							float o_y = q.w + o.x * q.x + o.y * q.y + o.z * q.z;
							float d_y = d.x * q.x + d.y * q.y + d.z * q.z;
							float v = o_y + t * d_y;

							if (v >= 0.0f && u + v <= 1.0f)
							{
								tmax = t;
								bU = u;
								bV = v;
								hit = true;

								//id = prims_ids[n];
							}
						}
					}
				}
			}

			if (stack_ptr == meshbvh_stack_ptr)
			{
				meshbvh_stack_ptr = -1;
				o = r.Origin;
				d = r.Direction;
				inv = r.Inverse;
				oinv = o * inv;
			}

			node_id = stack[stack_ptr];
			stack_ptr--;
		}

		if (node_id == 0xFFFFFFFF)
		{
			break;
		}
	}

	//Output[DTid.xy] = float4(temp.x, temp.x * 0.1f, temp.x * 0.01f, 1.0f);
	
	Output[DTid.xy] = float4(bU, bV, temp.x, temp.w);
}"
6A7kHxMe,InstanceNode.h,Zgragselus,C++,Wednesday 15th of November 2023 07:15:09 PM CDT,"///////////////////////////////////////////////////////////////////////////////////////////////////
//
// InstanceNode.h
//
// Implementation of instance node - a single node in scene representing an object instance
// 
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __RAYTRACER__INSTANCE_NODE__H__
#define __RAYTRACER__INSTANCE_NODE__H__

///////////////////////////////////////////////////////////////////////////////////////////////////
// Header section

#include ""Core/Memory/Memory.h""
#include ""Core/Math/Numeric/Mat4.h""

///////////////////////////////////////////////////////////////////////////////////////////////////
// Class & Structures definition

namespace Raytracer
{
	/// <summary>
	/// Single instance node in scene
	/// 
	/// This instance node structure holds instance information for either software/compute ray 
	/// tracing implementations or hardware ray tracing implementations. Theoretically it can hold
	/// both to allow for ray tracing on either device.
	/// </summary>
	class ALIGN(16) InstanceNode
	{
	public:
		/// <summary>
		/// Transformation matrix for this instance
		/// </summary>
		Engine::mat4 mTransform;

		/// <summary>
		/// Inverse of transformation matrix for this instance
		/// </summary>
		Engine::mat4 mTransformInverse;

		/// <summary>
		/// Index to geometry node in scene for Software and Compute ray tracing implementation
		/// </summary>
		unsigned int mGeometryNode;

		/// <summary>
		/// Padding to ensure 16-byte alignment
		/// </summary>
		unsigned int mPad0;

		/// <summary>
		/// Pointer to acceleration structure for Hardware ray tracing implementation
		/// </summary>
		void* mAccelerationStructure;

		ALIGNED_NEW_DELETE(""Raytracer::InstanceNode"")
	};
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// EOH

#endif"
AU5BJaJ3,TE induction furnace auto clear,bobmarley12345,Lua,Wednesday 15th of November 2023 06:57:51 PM CDT,"local INTERFACES_NAMES = {}
local INTERFACES = {}

-- config loadable info
local REDSTONE_TRIGGER_SIDES = {}
local INTERFACE_PULL_DIRECTION = nil

function CanonicaliseSide(side)
    if (side == nil or #side < 3 or #side > 6) then
        return nil
    end

    local s = string.lower(side)
    if (s == ""left"" or s == ""top"" or s == ""right"" or s == ""bottom"" or s == ""front"" or s == ""back"") then
        return s
    end

    return nil
end

function CanonicaliseNSWE(dir)
    if (dir == nil or #dir < 3 or #dir > 6) then
        return nil
    end

    local s = string.lower(dir)
    if (s == ""north"" or s == ""east"" or s == ""south"" or s == ""west"" or s == ""up"" or s == ""down"") then
        return s
    end

    return nil
end

function SplitStringByComma(input_str)
    return string.gmatch(input_str, ""([^,]+)"")
end

function LoadConnectedInterfaces()
    INTERFACES_NAMES = {}
    INTERFACES = {}
    local modem_connections = peripheral.getNames(""back"")
    if (modem_connections == nil) then
        return
    end

    for k, peripheralName in pairs(modem_connections) do
        if (tostring(peripheralName):find(""me_interface"") ~= nil) then
            local methodTable = peripheral.wrap(peripheralName)
            if (methodTable ~= nil) then
                table.insert(INTERFACES, methodTable)
                table.insert(INTERFACES_NAMES, peripheralName)
            end
        end
    end
end

function LoadConfigInfo()
    if (not fs.exists(""config"")) then
        return false
    end

    local hFile = fs.open(""config"", ""r"")
    if (hFile == nil) then
        print(""Failed to open config file"")
        return false
    end

    local isFail = false
    REDSTONE_TRIGGER_SIDES = {}
    local rs_trig = hFile.readLine()
    if (rs_trig ~= nil and #rs_trig > 0) then
        for side in SplitStringByComma(rs_trig) do
            local realSide = CanonicaliseSide(side)
            if (realSide ~= nil) then
                table.insert(REDSTONE_TRIGGER_SIDES, realSide)
            else
                print(""Invalid side in config: "" .. realSide)
                isFail = true
            end
        end
    end

    INTERFACE_PULL_DIRECTION = nil
    local itf_pull_dir_raw = hFile.readLine()
    local itf_pull_dir = CanonicaliseNSWE(itf_pull_dir_raw)
    if (itf_pull_dir ~= nil) then
        INTERFACE_PULL_DIRECTION = itf_pull_dir
    else
        print(""Invalid interface pull direction: "" .. itf_pull_dir_raw)
        isFail = true
    end

    hFile.close()
    return not isFail and #REDSTONE_TRIGGER_SIDES > 0 and INTERFACE_PULL_DIRECTION ~= nil
end

function SaveConfigInfo()
    local hFile = fs.open(""config"", ""w"")
    if (hFile == nil) then
        print(""Failed to open config file for writing"")
        return
    end

    if (REDSTONE_TRIGGER_SIDES ~= nil) then
        local str = table.concat(REDSTONE_TRIGGER_SIDES, "","")
        hFile.writeLine(str)
        print(""Writing to config: "" .. str)
    else
        hFile.writeLine("""")
    end

    if (INTERFACE_PULL_DIRECTION ~= nil) then
        hFile.writeLine(INTERFACE_PULL_DIRECTION)
        print(""Writing to config: "" .. INTERFACE_PULL_DIRECTION)
    else
        hFile.writeLine("""")
    end
end

function SetupConfig()
    print(""Input the sides on the computer that, when a redstone signal is received, will clear all induction furnaces"")
    print(""(comma separated list of: top, bottom, left, right, front or back)"")
    term.write("">"")

    local inputSides = {}
    local sides = read()
    for side in SplitStringByComma(sides) do
        local realSide = CanonicaliseSide(side)
        if (realSide == nil) then
            print(""Invalid side: "" .. side)
            return false
        end
        
        table.insert(inputSides, realSide)
    end

    print(""Input the world direction of the induction furnaces, relative to the ME Interfaces"")
    print(""(top, bottom, north, east, south, west)"")
    term.write("">"")
    local pull_dir_raw = read()
    local pull_dir = CanonicaliseNSWE(pull_dir_raw)
    if (pull_dir == nil) then
        print(""Invalid direction: "" .. pull_dir_raw)
        return false
    end

    REDSTONE_TRIGGER_SIDES = inputSides
    INTERFACE_PULL_DIRECTION = pull_dir
    return true
end

function OnRedstoneInput()
    -- clear interfaces

    print(""Clearing "" .. #INTERFACES .. "" induction furnaces at "" .. INTERFACE_PULL_DIRECTION)
    for i, itf in pairs(INTERFACES) do
        itf.pullItem(INTERFACE_PULL_DIRECTION, 1)
        itf.pullItem(INTERFACE_PULL_DIRECTION, 2)
    end
end

function Main()
    if (not LoadConfigInfo()) then
        while (not SetupConfig()) do end
        SaveConfigInfo()
    end
    
    LoadConnectedInterfaces()
    print(""Loaded "" .. #INTERFACES .. "" interfaces via modem connections"")
    print(""TIP1: To reset the config file, terminate the program and run 'rm config'"")
    print("""")
    print(""TIP2: The ME interface must also be placed on the output of the induction furnaces (red, yellow or orange sides)"")

    while true do
        os.pullEvent(""redstone"")

        local hasInput = false
        for i, side in pairs(REDSTONE_TRIGGER_SIDES) do
            if (rs.getInput(side)) then
                hasInput = true
                break
            end
        end

        if (hasInput) then
            OnRedstoneInput()
            print(""["" .. os.clock() .. ""] Redstone received!"")
        end
    end
end

Main()"
ZJtSFcQP,Day 07 recap 1,HarrJ,Java,Wednesday 15th of November 2023 06:47:13 PM CDT,"import java.util.Scanner;

public class Day07A {
    public static void main(String[] args) {
        // theme farm animals
        Scanner sc = new Scanner(System.in);
        String animalName;
        
        System.out.print(""Enter an animal name: "");
        animalName = sc.nextLine();
        
        //scenario, depending of what user enter an info about the animal will be shown
        if (animalName.equals(""cow"")) {
            System.out.println(""Cows gives milk"");
        } else if (animalName.equals(""carabao"")) {
            System.out.println(""Carabao helps with the fields"");
        } else if (animalName.equals(""_"")) {
            System.out.println(""__"");
        } else {
            System.out.println(""You typed: "" + animalName);
            System.out.println(""animal is not on list. Please try again"");
        }
    }
}"
kVeBMWK9,Laboratorio8,andreerival,Python,Wednesday 15th of November 2023 06:39:42 PM CDT,"import random
import math
import matplotlib.pyplot as plt
import numpy as np
from tqdm import tqdm
import os

def easom_function(x):
    if len(x) != 2:
        raise(ValueError, ""Easom takes exactly two values"")
    return -math.cos(x[0]) * math.cos(x[1]) * math.exp(-(x[0] - math.pi)*2 - (x[1] - math.pi)*2)

def shubert_function(x):
    if len(x) != 2:
        raise(ValueError, ""Shubert takes exactly two values"")
    term1 = 0
    term2 = 0
    for i in range(1, 6):
        term1 += i * math.cos((i + 1) * x[0] + i)
        term2 += i * math.cos((i + 1) * x[1] + i)
    result = term1 * term2
    return result

def rosenbrock_function(x):
    term1 = 100 * (x[i + 1] - x[i]*2)**2
    term2 = (1 - x[i])**2
    add += term1 + term2
    return add

def firefly(function, num_fireflies, max_iterations, lower_bound, upper_bound, objective_minimum, dimensions, tolerancy, alpha, beta):
    # Inicializar luciérnagas
    fireflies = np.random.uniform(low=lower_bound, high=upper_bound, size=(num_fireflies, dimensions))
    intensities = np.apply_along_axis(function, 1, fireflies)
    
    # Inicializar el mejor valor y la mejor posición
    best_intensity = np.min(intensities)
    best_position = fireflies[np.argmin(intensities)]
    
    for iteration in range(max_iterations):
        for i in range(num_fireflies):
            for j in range(i+1, num_fireflies):
                if intensities[i] > intensities[j]:
                    r = np.linalg.norm(fireflies[i] - fireflies[j])
                    fireflies[i] += beta * np.exp(-r) * (fireflies[j] - fireflies[i]) + alpha * (np.random.rand(dimensions) - 0.5) * 10
                    fireflies[i] = np.clip(fireflies[i], lower_bound, upper_bound)
                    intensities[i] = function(fireflies[i])
                    
                    # Actualizar el mejor valor y la mejor posición
                    if intensities[i] < best_intensity:
                        best_intensity = intensities[i]
                        best_position = fireflies[i]
        
        # Comprobar si se alcanzó el mínimo objetivo
        if abs(best_intensity - objective_minimum) <= tolerancy:
            return True, iteration + 1, best_position, best_intensity
    
    return False, max_iterations, best_position, best_intensity
    

def mean(list):
    add = 0
    for elem in list:
        add += elem
    return add / len(list)

def std(lista):
    n = len(lista)
    if n < 2:
        return 0  # La desviación estándar no se puede calcular con menos de dos elementos

    media = sum(lista) / n
    suma_de_cuadrados = sum((x - media) ** 2 for x in lista)
    desviacion_estandar = (suma_de_cuadrados / (n - 1)) ** 0.5
    return desviacion_estandar

def printTable(database):
    print(""-"" * 38)
    print(f""| {'Función':^12} | {'PSO':^19} |"")
    print(""-"" * 38)

    for funcion, datos in database:
        print(f""| {funcion:^12} | {datos:^19} |"")
    print(""-"" * 38)

functions = []

number_of_fireflies = 100
max_iterations = 500
epsilon = 1e-2
executions = 50
alpha = 0.5
beta = 1

easom = {
    'name': 'easom',
    'function': easom_function,
    'objective_minimum': -1,
    'lower_bound': -math.pi,
    'upper_bound': math.pi,
    'dimensions': 2,
    'presition': epsilon
}

shubert = {
    'name': 'shubert',
    'function': shubert_function,
    'objective_minimum': -186.7309,
    'lower_bound': -10,
    'upper_bound': 10,
    'dimensions': 2,
    'presition': 1
}

rosenbrock = {
    'name': 'rosenbrock',
    'function': rosenbrock_function,
    'objective_minimum': 0,
    'lower_bound': 0.5,
    'upper_bound': 1.5,
    'dimensions': 2,
    'presition': epsilon
}

functions.append(easom)
functions.append(shubert)
functions.append(rosenbrock)

print(""="" * 40)
print(""\t    Using..."")
print(f""\t{number_of_fireflies} particulas"")
print(f""\t{max_iterations} iteraciones maximas"")
print(f""\t{executions} ejecuciones"")
print(f""\t{epsilon} de precision"")
print(""="" * 40)
results = []

# Crea un directorio para guardar las gráficas si no existe
output_directory = 'graphs'
os.makedirs(output_directory, exist_ok=True)

# To save the minimums
best_values = {
    'easom': float('inf'),
    'shubert': float('inf'),
    'rosenbrock': float('inf'),
}

for funct in functions:
    # Inicializa una lista para guardar las mejores posiciones de cada iteración
    best_positions_history = []

    # Crea una barra de progreso
    progress_bar = tqdm(total=executions, desc=funct['name'])

    # Contador de ejecuciones correctas
    correct_executions = 0
    iterations = []

    for execution in range(executions):
        achieved, iteration, best_position, best_value = firefly(funct['function'], number_of_fireflies, max_iterations, funct['lower_bound'], funct['upper_bound'], funct['objective_minimum'], funct['dimensions'], funct['presition'], alpha, beta)
        if achieved:
            correct_executions += 1
        if best_value < best_values[funct['name']]:
            best_values[funct['name']] = best_value
        iterations.append(iteration)
        progress_bar.update(1)

        # Guarda las mejores posiciones en cada iteración
        best_positions_history.append(best_position)

    # Cierra la barra de progreso
    progress_bar.close()

    # Anexamos resultados
    success_rate = (correct_executions * 100) / executions
    prom = mean(iterations)
    deviation = std(iterations)
    results.append((funct['name'], f""{int(prom)} ± {int(deviation)} ({success_rate}%)""))


    # Crea una gráfica para mostrar la evolución de la mejor posición para la función actual
    plt.figure()
    plt.xlabel('X')
    plt.ylabel('Y')
    plt.title(f'Evolución de la mejor posición para {funct[""name""]}')

    for i, best_position in enumerate(best_positions_history):
        x = best_position[0]  # Accede al valor x de la iteración actual
        y = best_position[1]  # Accede al valor y de la iteración actual
        plt.plot(x, y, '-o', label=f'Iteración {i + 1}', color='black', alpha=0.2)

    # Guarda la gráfica compuesta en un archivo PNG de alta calidad
    output_file = os.path.join(output_directory, f'{funct[""name""]}_evolution.png')
    plt.savefig(output_file, dpi=300, bbox_inches='tight')
    plt.close()

print("""")
printTable(results)
print(f""Best Easom Value: {best_values['easom']}"")
print(f""Best Shubert Value: {best_values['shubert']}"")
print(f""Best Rosenbrock Value: {best_values['rosenbrock']}"")
print(""\n\n"")"
nx6AKh3S,Secret Underground Mining Turtle Fight Club,Eleos5,Lua,Wednesday 15th of November 2023 06:28:30 PM CDT,"local won = false
local random = 0
local foundBlock = false
local frontBlock  = {}
local breakBlocks = {""dirt""} 


repeat os.sleep(0.1) until redstone.getInput(""bottom"") 


--coal is 80 fuel
local function refill()
    if turtle.getFuelLevel() < 80 then
        turtle.refuel()
    end
end
 
function checkBreak()
    foundBlock, frontBlock = turtle.inspect()
    if foundBlock then
        for i, v in pairs(breakBlocks) do 
            if string.find(frontBlock.name, v) then
                turtle.dig()
            end
            if string.find(frontBlock.name, ""turtle"") then
                turtle.dig()
                won = true
            end
        end
    end
    return false
end

while not won do 
	refill()
	checkBreak()
	os.sleep(math.random(0,20)/10)
    random = math.random(1,4) 
    if random >= 4 or not turtle.forward() then
        random = math.random(1,2)
        if random == 1 then
            turtle.turnRight()    
        elseif random == 2 then
            turtle.turnLeft()
        end
    end
end "
Bd3QLKsp,2023-11-15_stats.json,rdp_snitch,JSON,Wednesday 15th of November 2023 06:18:18 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 6,
    ""118.194.236.118"": 3,
    ""194.187.176.139"": 3,
    ""205.210.31.183"": 9,
    ""45.79.168.134"": 291,
    ""87.251.75.145"": 9,
    ""62.122.184.166"": 12,
    ""103.212.136.25"": 72,
    ""45.143.201.62"": 15,
    ""23.251.102.74"": 12,
    ""46.219.77.107"": 9,
    ""185.170.144.3"": 6,
    ""141.98.81.34"": 3,
    ""194.165.16.37"": 6,
    ""62.122.184.168"": 12,
    ""205.210.31.178"": 9,
    ""103.231.59.163"": 234,
    ""45.129.14.208"": 9,
    ""87.251.75.120"": 3,
    ""106.116.169.71"": 3,
    ""120.89.46.241"": 3,
    ""40.68.89.187"": 6,
    ""165.154.12.38"": 3,
    ""45.140.17.16"": 18,
    ""45.227.254.26"": 12,
    ""198.235.24.156"": 9,
    ""87.251.75.64"": 3,
    ""41.158.2.12"": 3,
    ""152.89.198.133"": 6,
    ""62.122.184.165"": 6,
    ""104.128.67.122"": 3,
    ""198.235.24.213"": 9,
    ""62.204.41.132"": 6
  },
  ""asn"": {
    ""AS48721"": 12,
    ""AS135377"": 6,
    ""AS208843"": 3,
    ""AS396982"": 36,
    ""AS63949"": 291,
    ""AS208091"": 15,
    ""AS57523"": 36,
    ""AS133676"": 72,
    ""AS210950"": 15,
    ""AS21859"": 12,
    ""AS31148"": 9,
    ""AS197414"": 6,
    ""AS209588"": 3,
    ""AS132335"": 234,
    ""AS198465"": 9,
    ""AS4134"": 3,
    ""AS9658"": 3,
    ""AS8075"": 6,
    ""AS198953"": 18,
    ""AS267784"": 12,
    ""AS16058"": 3,
    ""AS396948"": 3,
    ""AS59425"": 6
  },
  ""isp"": {
    ""Flyservers S.A."": 27,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""Google LLC"": 36,
    ""Akamai Technologies, Inc."": 291,
    ""Xhost Internet Solutions LP"": 21,
    ""Chang Way Technologies Co. Limited"": 36,
    ""Gstech Software Systems Pvt Ltd"": 72,
    ""TOV E-RISHENNYA"": 15,
    ""Zenlayer Inc"": 12,
    ""o3 core"": 9,
    ""LeapSwitch Networks Pvt Ltd"": 234,
    ""BtHoster LTD"": 9,
    ""Chinanet"": 3,
    ""Eastern Telecommunications Philippines, Inc."": 3,
    ""Microsoft Corporation"": 6,
    ""Proton66 OOO"": 18,
    ""Gabon Telecom Internet Network Autonomous System"": 3,
    ""Kamatera"": 3,
    ""Horizon LLC"": 6
  },
  ""org"": {
    ""Flyservers S.A"": 15,
    ""Ucloud Information Technology"": 6,
    ""Alpha Strike Labs GmbH"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 291,
    ""Xhost Internet Solutions"": 15,
    ""Chang Way Technologies Co. Limited"": 30,
    ""Gstech Software Systems Pvt Ltd"": 72,
    ""TOV VAIZ PARTNER"": 15,
    ""ZENLA"": 12,
    ""Unknown"": 9,
    ""Xhostis"": 6,
    ""IPXO"": 234,
    ""BtHoster LTD"": 9,
    ""Chinanet HE"": 3,
    ""Eastern Telecommunications Philippines, Inc"": 3,
    ""Microsoft Azure Cloud (westeurope)"": 6,
    ""Proton66 LLC"": 18,
    ""UAB Host Baltic"": 12,
    ""Gtlib Ipmpls01"": 3,
    ""Starcrecium Limited"": 6,
    ""Cloud Web Manage"": 3,
    ""Horizon LLC"": 6
  },
  ""regionName"": {
    ""Kaunas"": 12,
    ""Tokyo"": 3,
    ""Land Berlin"": 3,
    ""California"": 39,
    ""New Jersey"": 291,
    ""North Holland"": 27,
    ""Moscow"": 60,
    ""Uttar Pradesh"": 72,
    ""Kyiv City"": 15,
    ""Texas"": 12,
    ""Zhytomyr"": 9,
    ""Drenthe"": 3,
    ""Maharashtra"": 234,
    ""England"": 9,
    ""Hebei"": 3,
    ""Metro Manila"": 3,
    ""Dubai"": 3,
    ""Vilnius"": 12,
    ""Estuaire"": 3
  },
  ""country"": {
    ""Lithuania"": 24,
    ""Japan"": 3,
    ""Germany"": 3,
    ""United States"": 342,
    ""Netherlands"": 30,
    ""Russia"": 60,
    ""India"": 306,
    ""Ukraine"": 24,
    ""United Kingdom"": 9,
    ""China"": 3,
    ""Philippines"": 3,
    ""United Arab Emirates"": 3,
    ""Gabon"": 3
  },
  ""account"": {
    ""Test"": 33,
    ""Administrator"": 6,
    ""user"": 3,
    ""aplixqwIx"": 3,
    ""iSCfuh"": 3,
    ""hwuxrE"": 3,
    ""hello"": 609,
    ""Administr"": 39,
    ""Domain"": 69,
    ""0d5lgjwg"": 12,
    ""oynjhznzw"": 3,
    ""rntHdO"": 3,
    ""hiBWUi"": 3,
    ""(empty)"": 6,
    ""fwexgxgtr"": 3,
    ""eqaBkO"": 3,
    ""HzBdhB"": 3,
    ""bTOgkUwIF"": 3,
    ""lMQjoV"": 3,
    ""WmcioF"": 3
  },
  ""keyboard"": {
    ""Unknown"": 813
  },
  ""client_build"": {
    ""Unknown"": 813
  },
  ""client_name"": {
    ""Unknown"": 813
  },
  ""ip_type"": {
    ""Unknown"": 216,
    ""hosting"": 585,
    ""mobile"": 6,
    ""proxy"": 6
  }
}"
2R96LSWi,2023-11-15_stats.json,rdp_snitch,JSON,Wednesday 15th of November 2023 06:16:09 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 4,
    ""118.194.236.118"": 2,
    ""194.187.176.139"": 2,
    ""205.210.31.183"": 6,
    ""45.79.168.134"": 194,
    ""87.251.75.145"": 6,
    ""62.122.184.166"": 8,
    ""103.212.136.25"": 48,
    ""45.143.201.62"": 10,
    ""23.251.102.74"": 8,
    ""46.219.77.107"": 6,
    ""185.170.144.3"": 4,
    ""141.98.81.34"": 2,
    ""194.165.16.37"": 4,
    ""62.122.184.168"": 8,
    ""205.210.31.178"": 6,
    ""103.231.59.163"": 156,
    ""45.129.14.208"": 6,
    ""87.251.75.120"": 2,
    ""106.116.169.71"": 2,
    ""120.89.46.241"": 2,
    ""40.68.89.187"": 4,
    ""165.154.12.38"": 2,
    ""45.140.17.16"": 12,
    ""45.227.254.26"": 8,
    ""198.235.24.156"": 6,
    ""87.251.75.64"": 2,
    ""41.158.2.12"": 2,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""104.128.67.122"": 2,
    ""198.235.24.213"": 6,
    ""62.204.41.132"": 4
  },
  ""asn"": {
    ""AS48721"": 8,
    ""AS135377"": 4,
    ""AS208843"": 2,
    ""AS396982"": 24,
    ""AS63949"": 194,
    ""AS208091"": 10,
    ""AS57523"": 24,
    ""AS133676"": 48,
    ""AS210950"": 10,
    ""AS21859"": 8,
    ""AS31148"": 6,
    ""AS197414"": 4,
    ""AS209588"": 2,
    ""AS132335"": 156,
    ""AS198465"": 6,
    ""AS4134"": 2,
    ""AS9658"": 2,
    ""AS8075"": 4,
    ""AS198953"": 12,
    ""AS267784"": 8,
    ""AS16058"": 2,
    ""AS396948"": 2,
    ""AS59425"": 4
  },
  ""isp"": {
    ""Flyservers S.A."": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 194,
    ""Xhost Internet Solutions LP"": 14,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Gstech Software Systems Pvt Ltd"": 48,
    ""TOV E-RISHENNYA"": 10,
    ""Zenlayer Inc"": 8,
    ""o3 core"": 6,
    ""LeapSwitch Networks Pvt Ltd"": 156,
    ""BtHoster LTD"": 6,
    ""Chinanet"": 2,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""Microsoft Corporation"": 4,
    ""Proton66 OOO"": 12,
    ""Gabon Telecom Internet Network Autonomous System"": 2,
    ""Kamatera"": 2,
    ""Horizon LLC"": 4
  },
  ""org"": {
    ""Flyservers S.A"": 10,
    ""Ucloud Information Technology"": 4,
    ""Alpha Strike Labs GmbH"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 194,
    ""Xhost Internet Solutions"": 10,
    ""Chang Way Technologies Co. Limited"": 20,
    ""Gstech Software Systems Pvt Ltd"": 48,
    ""TOV VAIZ PARTNER"": 10,
    ""ZENLA"": 8,
    ""Unknown"": 6,
    ""Xhostis"": 4,
    ""IPXO"": 156,
    ""BtHoster LTD"": 6,
    ""Chinanet HE"": 2,
    ""Eastern Telecommunications Philippines, Inc"": 2,
    ""Microsoft Azure Cloud (westeurope)"": 4,
    ""Proton66 LLC"": 12,
    ""UAB Host Baltic"": 8,
    ""Gtlib Ipmpls01"": 2,
    ""Starcrecium Limited"": 4,
    ""Cloud Web Manage"": 2,
    ""Horizon LLC"": 4
  },
  ""regionName"": {
    ""Kaunas"": 8,
    ""Tokyo"": 2,
    ""Land Berlin"": 2,
    ""California"": 26,
    ""New Jersey"": 194,
    ""North Holland"": 18,
    ""Moscow"": 40,
    ""Uttar Pradesh"": 48,
    ""Kyiv City"": 10,
    ""Texas"": 8,
    ""Zhytomyr"": 6,
    ""Drenthe"": 2,
    ""Maharashtra"": 156,
    ""England"": 6,
    ""Hebei"": 2,
    ""Metro Manila"": 2,
    ""Dubai"": 2,
    ""Vilnius"": 8,
    ""Estuaire"": 2
  },
  ""country"": {
    ""Lithuania"": 16,
    ""Japan"": 2,
    ""Germany"": 2,
    ""United States"": 228,
    ""Netherlands"": 20,
    ""Russia"": 40,
    ""India"": 204,
    ""Ukraine"": 16,
    ""United Kingdom"": 6,
    ""China"": 2,
    ""Philippines"": 2,
    ""United Arab Emirates"": 2,
    ""Gabon"": 2
  },
  ""account"": {
    ""Test"": 22,
    ""Administrator"": 4,
    ""user"": 2,
    ""aplixqwIx"": 2,
    ""iSCfuh"": 2,
    ""hwuxrE"": 2,
    ""hello"": 406,
    ""Administr"": 26,
    ""Domain"": 46,
    ""0d5lgjwg"": 8,
    ""oynjhznzw"": 2,
    ""rntHdO"": 2,
    ""hiBWUi"": 2,
    ""(empty)"": 4,
    ""fwexgxgtr"": 2,
    ""eqaBkO"": 2,
    ""HzBdhB"": 2,
    ""bTOgkUwIF"": 2,
    ""lMQjoV"": 2,
    ""WmcioF"": 2
  },
  ""keyboard"": {
    ""Unknown"": 542
  },
  ""client_build"": {
    ""Unknown"": 542
  },
  ""client_name"": {
    ""Unknown"": 542
  },
  ""ip_type"": {
    ""Unknown"": 144,
    ""hosting"": 390,
    ""mobile"": 4,
    ""proxy"": 4
  }
}"
3nZZd7JZ,2023-11-15_stats.json,rdp_snitch,JSON,Wednesday 15th of November 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""118.194.236.118"": 1,
    ""194.187.176.139"": 1,
    ""205.210.31.183"": 3,
    ""45.79.168.134"": 97,
    ""87.251.75.145"": 3,
    ""62.122.184.166"": 4,
    ""103.212.136.25"": 24,
    ""45.143.201.62"": 5,
    ""23.251.102.74"": 4,
    ""46.219.77.107"": 3,
    ""185.170.144.3"": 2,
    ""141.98.81.34"": 1,
    ""194.165.16.37"": 2,
    ""62.122.184.168"": 4,
    ""205.210.31.178"": 3,
    ""103.231.59.163"": 78,
    ""45.129.14.208"": 3,
    ""87.251.75.120"": 1,
    ""106.116.169.71"": 1,
    ""120.89.46.241"": 1,
    ""40.68.89.187"": 2,
    ""165.154.12.38"": 1,
    ""45.140.17.16"": 6,
    ""45.227.254.26"": 4,
    ""198.235.24.156"": 3,
    ""87.251.75.64"": 1,
    ""41.158.2.12"": 1,
    ""152.89.198.133"": 2,
    ""62.122.184.165"": 2,
    ""104.128.67.122"": 1,
    ""198.235.24.213"": 3,
    ""62.204.41.132"": 2
  },
  ""asn"": {
    ""AS48721"": 4,
    ""AS135377"": 2,
    ""AS208843"": 1,
    ""AS396982"": 12,
    ""AS63949"": 97,
    ""AS208091"": 5,
    ""AS57523"": 12,
    ""AS133676"": 24,
    ""AS210950"": 5,
    ""AS21859"": 4,
    ""AS31148"": 3,
    ""AS197414"": 2,
    ""AS209588"": 1,
    ""AS132335"": 78,
    ""AS198465"": 3,
    ""AS4134"": 1,
    ""AS9658"": 1,
    ""AS8075"": 2,
    ""AS198953"": 6,
    ""AS267784"": 4,
    ""AS16058"": 1,
    ""AS396948"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 97,
    ""Xhost Internet Solutions LP"": 7,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Gstech Software Systems Pvt Ltd"": 24,
    ""TOV E-RISHENNYA"": 5,
    ""Zenlayer Inc"": 4,
    ""o3 core"": 3,
    ""LeapSwitch Networks Pvt Ltd"": 78,
    ""BtHoster LTD"": 3,
    ""Chinanet"": 1,
    ""Eastern Telecommunications Philippines, Inc."": 1,
    ""Microsoft Corporation"": 2,
    ""Proton66 OOO"": 6,
    ""Gabon Telecom Internet Network Autonomous System"": 1,
    ""Kamatera"": 1,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 5,
    ""Ucloud Information Technology"": 2,
    ""Alpha Strike Labs GmbH"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 97,
    ""Xhost Internet Solutions"": 5,
    ""Chang Way Technologies Co. Limited"": 10,
    ""Gstech Software Systems Pvt Ltd"": 24,
    ""TOV VAIZ PARTNER"": 5,
    ""ZENLA"": 4,
    ""Unknown"": 3,
    ""Xhostis"": 2,
    ""IPXO"": 78,
    ""BtHoster LTD"": 3,
    ""Chinanet HE"": 1,
    ""Eastern Telecommunications Philippines, Inc"": 1,
    ""Microsoft Azure Cloud (westeurope)"": 2,
    ""Proton66 LLC"": 6,
    ""UAB Host Baltic"": 4,
    ""Gtlib Ipmpls01"": 1,
    ""Starcrecium Limited"": 2,
    ""Cloud Web Manage"": 1,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Kaunas"": 4,
    ""Tokyo"": 1,
    ""Land Berlin"": 1,
    ""California"": 13,
    ""New Jersey"": 97,
    ""North Holland"": 9,
    ""Moscow"": 20,
    ""Uttar Pradesh"": 24,
    ""Kyiv City"": 5,
    ""Texas"": 4,
    ""Zhytomyr"": 3,
    ""Drenthe"": 1,
    ""Maharashtra"": 78,
    ""England"": 3,
    ""Hebei"": 1,
    ""Metro Manila"": 1,
    ""Dubai"": 1,
    ""Vilnius"": 4,
    ""Estuaire"": 1
  },
  ""country"": {
    ""Lithuania"": 8,
    ""Japan"": 1,
    ""Germany"": 1,
    ""United States"": 114,
    ""Netherlands"": 10,
    ""Russia"": 20,
    ""India"": 102,
    ""Ukraine"": 8,
    ""United Kingdom"": 3,
    ""China"": 1,
    ""Philippines"": 1,
    ""United Arab Emirates"": 1,
    ""Gabon"": 1
  },
  ""account"": {
    ""Test"": 11,
    ""Administrator"": 2,
    ""user"": 1,
    ""aplixqwIx"": 1,
    ""iSCfuh"": 1,
    ""hwuxrE"": 1,
    ""hello"": 203,
    ""Administr"": 13,
    ""Domain"": 23,
    ""0d5lgjwg"": 4,
    ""oynjhznzw"": 1,
    ""rntHdO"": 1,
    ""hiBWUi"": 1,
    ""(empty)"": 2,
    ""fwexgxgtr"": 1,
    ""eqaBkO"": 1,
    ""HzBdhB"": 1,
    ""bTOgkUwIF"": 1,
    ""lMQjoV"": 1,
    ""WmcioF"": 1
  },
  ""keyboard"": {
    ""Unknown"": 271
  },
  ""client_build"": {
    ""Unknown"": 271
  },
  ""client_name"": {
    ""Unknown"": 271
  },
  ""ip_type"": {
    ""Unknown"": 72,
    ""hosting"": 195,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
F0HQRDnX,Turtle Platform Maker,Jameelo,Lua,Wednesday 15th of November 2023 05:38:28 PM CDT,"--[[
    This will make a rectangular platform. Simple as.
]]

term.clear()
os.loadAPI(""commonUtils"")

LENGTH = 0
WIDTH = 0
BLOCK_ID = """"

-- This table holds a block's name as the key, and its actual block ID as the value.
BLOCKS_AVAILABLE = {
    [""cobblestone""] = ""minecraft:cobblestone"",
    [""granite""] = ""minecraft:granite"",
    [""diorite""] = ""minecraft:diorite"",
    [""andesite""] = ""minecraft:andesite"",
    [""dirt""] = ""minecraft:dirt"",
    [""oak planks""] = ""minecraft:oak_planks"",
    [""spruce planks""] = ""minecraft:spruce_planks"",
    [""netherrack""] = ""minecraft:netherrack"",
    [""netherack""] = ""minecraft:netherrack"" -- in case they can't spell
}

print(""Welcome to platform maker!"")

local function setParams() -- Sets width and length of platform
    print(""Platform length (forwards): "")
    LENGTH = tonumber(read())

    print(""Platform width (to the right): "")
    WIDTH = tonumber(read())

    BLOCK_COUNT = LENGTH * WIDTH

    print(""What type of block should I use to build this platform?"")
    local chosenBlock = string.lower(tostring(read()))

    BLOCK_ID = commonUtils.dictLookup(BLOCKS_AVAILABLE,chosenBlock) -- Get the block ID from the blocks available dictionary using the user input
    if BLOCK_ID then -- If the user entered a valid block
        return true
    end
    return false
end

local function verifyPossible() -- Check if the turt has enough blocks to make the platform & enough fuel.
    -- Returns:
    -- false if the platform cannot be made
    -- true if it can

    -- Fuel expenditure is equal to block count
    if turtle.getFuelLevel() < BLOCK_COUNT then -- if there isn't enough fuel
        return false
    end
    -- First, get a count of all blocks in the inventory that match the specified type.
    local totalCount = 0

    for n = 1,16,1 do
        local detail = turtle.getItemDetail(n)
        if detail ~= nil and detail.name == BLOCK_ID then
            totalCount = totalCount + detail.count -- add the number of the correct block to the counting variable
        end
    end

    if totalCount < BLOCK_COUNT then -- if there aren't enough blocks
        return false
    end

    return true
end

function main()
    print(""Beginning platforming."")

    turtle.select(commonUtils.findItemBF(BLOCK_ID)) -- select item
    turtle.forward()

    for row = 1,WIDTH,1 do
        if commonUtils.placeMoveForward(LENGTH-1, BLOCK_ID) == false then -- if the function returns false
            return false
        end
        if row%2 == 1 and row ~= WIDTH then            
            turtle.turnRight()
            if commonUtils.placeMoveForward(1, BLOCK_ID) == false then -- if the function returns false
                return false
            end
            turtle.turnRight()
        else            
            turtle.turnLeft()
            if commonUtils.placeMoveForward(1, BLOCK_ID) == false then -- if the function returns false
                return false
            end
            turtle.turnLeft()
        end
    end
    return true
end

if setParams() then
    if verifyPossible() then
        if main() then
            print(""Excecution ended successfully."")
        else
            print(""Critical error, exiting program..."")
        end
    else
        print(""Not enough fuel or blocks"")
    end
else
    print(""There was an error entering the block ID."")
end"
ccFYqQnr,Untitled,NikitaM,C++,Wednesday 15th of November 2023 05:25:23 PM CDT,"#include <iostream>
#include <vector>
#include <utility>
#include <set>
#include <functional>
#include <algorithm>

using namespace std;

const int INF=1000*1000*1000;

int calc(int depth, const int k, set<int> &used, vector<vector<pair<int,int>>> &ratings_top_k){
    if(depth>=k)
        return 0;
        
    int res = 0;
    
    for(int i=0; i<k; ++i){
         auto curr = ratings_top_k[depth][i];
         int candidate = curr.second;
         if(used.find(candidate)!=used.end())
             continue;
             
         set<int> new_used = used;
         new_used.insert(candidate);
         
         int rating = -curr.first;
      //   cout<<rating<<endl;
         
         int curr_res = calc(depth+1, k, new_used, ratings_top_k);
         res = max(res, curr_res+rating);
    }
    
    return res;
}

int main(int argc, char *argv[])
{
	const int k=5;
	
	vector<vector<pair<int,int>>> ratings(k);
	
	int n;
	cin>>n;
	
	for(int i=0; i<k; ++i)
	    ratings[i].resize(n);
	
	for(int i=0; i<n; ++i){
	    for(int j=0; j<k; ++j) {
	        int r; 
	        cin>>r;
	        ratings[j][i]={-r,i};
	    }
	}
	
	for(int i=0; i<k; ++i)
	    sort(ratings[i].begin(), ratings[i].end());
	    
	vector<vector<pair<int,int>>> ratings_top_k(k);
	
	for(int i=0; i<k; ++i)
	    for(int j=0; j<k; ++j)
	        ratings_top_k[i].push_back(ratings[i][j]);
	        
/*	 for(int i=0; i<k; ++i)
	     for(int j=0; j<k; ++j)
	         cout<<i<<"" ""<<ratings_top_k[i][j].first<<"" ""<<ratings_top_k[i][j].second<<endl;
*/
	        
	 set<int> used;
	        
	 int res = calc(0, k, used, ratings_top_k);
	 
	 cout<<res<<endl;
	        
	 
	return 0;
}"
A53wS5m4,ledmk2,zero96x,Lua,Wednesday 15th of November 2023 05:12:46 PM CDT,"modem = ""front""
rednet.open(""front"")
prot = ""AW1""
w,h = term.getSize()
ID = read()
mon = peripheral.wrap(""back"")
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    if protocol == prot then
    		arr = message
			arrEntry = arr[tonumber(ID)]
			ledColor = arr[tonumber(ID)][2]
    		paintutils.drawFilledBox(1,1,70,5,ledColor)
      		term.clear()
            sleep(.05)
    end
end"
eFjGVEyv,juka,PaulCastellano,C,Wednesday 15th of November 2023 05:04:41 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

void prikazi_rijec(char *rijec, char *pogodena_slova) {
    while (*rijec != '\0') {
        if (strchr(pogodena_slova, *rijec)) {
            printf(""%c"", *rijec);
        } else {
            printf(""_"");
        }
        rijec++;
    }
    printf(""\n"");
}

int main() {
	char lake_rijeci[][15] = {""riba"", ""cvijece"", ""sunce"", ""kuca"", ""plavo""};
    char srednje_rijeci[][15] = {""stolica"", ""vozilo"", ""planeta"", ""republika"", ""kisa""};
    char teske_rijeci[][15] = {""elektronski"", ""astronomija"", ""ekosistem"", ""fotografija"", ""tehnologija""};

    char pogodi[1], rijec[15], pogodena_slova[50];
    int i = 0, pokusaj = 0, pogodak = 0, level,len;
    
    srand(time(NULL)); 
    int index = rand() % 5; 
    
    printf(""Dobrodosli u igru vjesalo!\n"");
    printf(""Izaberite nivo tezine:\n1. Lako\n2. Srednje\n3. Tesko\n"");
    printf(""Unesite broj koji odgovara zeljenom nivou tezine: "");
    scanf(""%d"", &level);
    
    switch(level) {
        case 1:
            strcpy(rijec, lake_rijeci[index]);
            break;
        case 2:
            strcpy(rijec, srednje_rijeci[index]);
            break;
        case 3:
            strcpy(rijec, teske_rijeci[index]);
            break;
        default:
            strcpy(rijec, """");
            break;
    }
    len = strlen(rijec);
	printf(""Odlican izbor! Hajde da pocmemo\n"");
    printf(""Rijec: "");
    for(i = 0; i < len; i++) {
        printf(""_ "");
    }
    printf(""\n"");

    while (pokusaj < 6 && pogodak < len) {
        printf(""Pogodjena slova: %s\n"", pogodena_slova);
        printf(""Preostali pokusaji: %i\n"", 6 - pokusaj);
        printf(""\n\nUnesite slovo: "");
        scanf("" %c"", &pogodi); 
        
        if (strchr(pogodena_slova, pogodi[0]) || strchr(rijec, pogodi[0]) == NULL) {
            printf(""Pogresan odgovor ili vec pokusano slovo.\n"");
            if (strchr(pogodena_slova, pogodi[0]) == NULL) {
                pokusaj++;
            }
        } else {
            pogodak++;
            printf(""Dobar pogodak!\n"");
        }
        strncat(pogodena_slova, &pogodi[0], 1); 
        strncat(pogodena_slova, "", "", 2);
        prikazi_rijec(rijec, pogodena_slova);
    }
    
    if (pogodak == len) {
        printf(""Cestitamo! Pogodili ste rijec: %s!\n"", rijec);
    } else {
        printf(""Nazalost, niste pogodili rijec.Trazena rijec je bila: %s.\n"", rijec);	
	}
	return 0;	
}"
JJKhKKg7,chunker,dogeon0,Lua,Wednesday 15th of November 2023 04:37:10 PM CDT,"function moveDown()
    turtle.digDown()
    turtle.down()
end
function digSeven()
    for a=1, 7 do
        turtle.dig()
        turtle.forward()
    end
end
function turnL()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    turtle.turnLeft()
end
function turnR()
    turtle.turnRight()
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
end
function checkFull(target)
    turtle.select(16)
    if turtle.getItemCount() > 0 then
        for k=1,target do
            turtle.up()
        end
        for k=1,16 do
            turtle.select(k)
            turtle.dropUp()
        end
    end
    
end

--set to amount of layers to chunk off!
layers = 50
moveDown()

--50 layers of 8x8 blocks
for k=1,layers do
    for b=1, 4 do
    digSeven()
    turnR()
    digSeven()
    if b < 4 then
        turnL()
    end
    end
    turtle.turnRight()
    for c=1,8 do
    turtle.forward()
    end
    turtle.turnRight()
    --same position as start
    checkFull(k)
    moveDown()
end"
exXftLyK,Spawn text monitor,karelvysinka,Lua,Wednesday 15th of November 2023 04:28:12 PM CDT,"-- Nastavení
local monitor = peripheral.wrap(""back"") -- Změňte ""right"" na stranu, na které je připojen monitor

-- Funkce pro vytvoření rámečku
function ramcek(vyska)
    monitor.setCursorPos(1, vyska)
    monitor.write(""+------------------------------------+"")
    for i = 1, 3 do
        monitor.setCursorPos(1, vyska + i)
        monitor.write(""|                                    |"")
    end
    monitor.setCursorPos(1, vyska + 4)
    monitor.write(""+------------------------------------+"")
end

-- Hlavní program
monitor.clear()
monitor.setTextScale(0.5)  -- Nastavte měřítko textu podle velikosti monitoru

-- Výpis hlavičky
ramcek(1)
monitor.setCursorPos(3, 3)
monitor.write(""Tekkit 2 GPT System 1.12"")

-- Výpis informací o serveru
ramcek(6)
monitor.setCursorPos(3, 8)
monitor.write(""Server Info:"")
monitor.setCursorPos(3, 9)
monitor.write(""New server focused on"")
monitor.setCursorPos(3, 10)
monitor.write(""computer science."")

-- Výpis kontaktních údajů
ramcek(11)
monitor.setCursorPos(3, 13)
monitor.write(""Contact:"")
monitor.setCursorPos(3, 14)
monitor.write(""admcgpt@gmail.com"")

-- Výpis pravidel
ramcek(16)
monitor.setCursorPos(3, 18)
monitor.write(""Rules:"")
monitor.setCursorPos(3, 19)
monitor.write(""No griefing, be respectful,"")
monitor.setCursorPos(3, 20)
monitor.write(""no cheating."")

-- Výpis dalších informací
ramcek(21)
monitor.setCursorPos(3, 23)
monitor.write(""More Info:"")
monitor.setCursorPos(3, 24)
monitor.write(""New features and program"")
monitor.setCursorPos(3, 25)
monitor.write(""library coming soon!"")
"
J8Rvb6aK,Door password computercraft EN,karelvysinka,Lua,Wednesday 15th of November 2023 04:10:49 PM CDT,"-- Configuration
local password = ""secretPassword""  -- Set your secret password here
local doorSide = ""left""  -- Set the side where the door is located (left, right, front, back, top, bottom)

-- Decoration function
function decorate()
    print(""****************************************"")
    print(""*                                      *"")
    print(""*     Welcome to the Security System   *"")
    print(""*                                      *"")
    print(""****************************************"")
end

-- Main program
while true do
    decorate()
    print(""Enter password to open the door:"")
    local enteredPassword = read(""*"") -- Password will not be shown when typing

    if enteredPassword == password then
        print(""Password correct. Opening door..."")
        redstone.setOutput(doorSide, true)  -- Opens the door
        sleep(5)  -- Wait for 5 seconds
        redstone.setOutput(doorSide, false) -- Closes the door
        print(""Door closed."")
    else
        print(""Incorrect password."")
    end

    print(""Waiting for the next attempt..."")
    sleep(3) -- Wait for 3 seconds before the next attempt
end
"
idxNjFRe,ledC,zero96x,Lua,Wednesday 15th of November 2023 04:08:02 PM CDT,"modem = ""back""
rednet.open(modem)
prot = ""AW1""
arr = {}
colorsArr = {colors.red,colors.yellow,colors.purple,colors.cyan,colors.blue,colors.green,colors.orange,colors.pink}
numLights = 4

function initArr(array,limit)
	for i=1,limit do
        array[i] = {}
    end
end

function blinkRND(offColor,delay,limit) 
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = randomColor()
	end
	rednet.broadcast(arr,prot)
	sleep(delay)
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = offColor
	end
	rednet.broadcast(arr,prot)
	sleep(delay)
end

function blink(offColor,onColor,delay,limit) 
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = onColor
	end
	rednet.broadcast(arr,prot)
	sleep(delay)
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = offColor
	end
	rednet.broadcast(arr,prot)
	sleep(delay)
end

function ledOn(id,delta,colorOff,colorOn,limit)
	for i=1,limit do
    	arr[i][1] = 0
		arr[i][2] = colorOff
	end
	arr[id][1] = 1
	arr[id][2] = colorOn
	rednet.broadcast(arr,prot)
	sleep(delta)
end

function randomColor()
    n = math.random(1,9)
    return colorsArr[n]
end

function ezSeq(colorOff,colorOn,limit)
	ledOn(1,0.1,colorOff,randomColor(),limit)
	ledOn(2,0.1,colorOff,randomColor(),limit)
    ledOn(3,0.1,colorOff,randomColor(),limit)
    ledOn(4,0.1,colorOff,randomColor(),limit)
    ledOn(5,0.1,colorOff,randomColor(),limit)
    ledOn(4,0.1,colorOff,randomColor(),limit)
    ledOn(3,0.1,colorOff,randomColor(),limit)
    ledOn(2,0.1,colorOff,randomColor(),limit)
end

function upFastRandom(colorOff,limit)
    ledOn(1,0.1,colorOff,randomColor(),limit)
	ledOn(2,0.1,colorOff,randomColor(),limit)
    ledOn(3,0.1,colorOff,randomColor(),limit)
    ledOn(4,0.1,colorOff,randomColor(),limit)
    ledOn(5,0.1,colorOff,randomColor(),limit)
    ledOn(6,0.1,colorOff,randomColor(),limit)
end

function up(colorOff,colorOn,delay,limit)
    ledOn(1,delay,colorOff,colorOn,limit)
	ledOn(2,delay,colorOff,colorOn,limit)
    ledOn(3,delay,colorOff,colorOn,limit)
    ledOn(4,delay,colorOff,colorOn,limit)
    ledOn(5,delay,colorOff,colorOn,limit)
    ledOn(6,delay,colorOff,colorOn,limit)
end

function airWolve()
	for i=1,3 do
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
	end
	for i=1,3 do
		blinkRND(colors.blue,.4,4) 
		blinkRND(colors.blue,.15,4) 
		blinkRND(colors.blue,.15,4) 
		blinkRND(colors.blue,.4,4) 
	end
	for i=1,3 do
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
		blinkRND(colors.blue,.2,4) 
	end
end


initArr(arr,numLights)
while true do
	airWolve()
    --ezSeq(colors.red, colors.yellow, 5)
	sleep(.1)
end"
kQrbXRsH,singleled,zero96x,Lua,Wednesday 15th of November 2023 04:03:34 PM CDT,"modem = ""front""
rednet.open(modem)
prot = ""LEDC1""
monSide = ""back""
w,h = term.getSize()
print(""ID"")
ID = read()
mon = peripheral.wrap(monSide)
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    arr = message
    
    if protocol == prot then
        if arr[ID] == 1 then
            paintutils.drawFilledBox(1,1,7,5,colors.red)
            term.clear()
            sleep(.05)
        elseif arr[ID] == 0 then
            paintutils.drawFilledBox(1,1,7,5,colors.blue)
            term.clear()
            sleep(.05)
        end
    end
end"
XxY48YNE,Door password computercraft,karelvysinka,Lua,Wednesday 15th of November 2023 04:00:28 PM CDT,"-- Konfigurace
local heslo = ""tajneHeslo""  -- Zde nastavte své tajné heslo
local stranaDveri = ""left""  -- Zde nastavte stranu, na které jsou dveře (left, right, front, back, top, bottom)

-- Funkce pro výzdobu
function vyzdoba()
    print(""****************************************"")
    print(""*                                      *"")
    print(""*     Vítejte v bezpečnostním systému  *"")
    print(""*                                      *"")
    print(""****************************************"")
end

-- Hlavní program
while true do
    vyzdoba()
    print(""Zadejte heslo pro otevření dveří:"")
    local zadaneHeslo = read(""*"") -- Heslo nebude vidět při zadávání

    if zadaneHeslo == heslo then
        print(""Heslo správné. Otevírám dveře..."")
        redstone.setOutput(stranaDveri, true)  -- Otevře dveře
        sleep(5)  -- Počkej 5 sekund
        redstone.setOutput(stranaDveri, false) -- Zavře dveře
        print(""Dveře zavřeny."")
    else
        print(""Nesprávné heslo."")
    end

    print(""Čekám na další pokus..."")
    sleep(3) -- Počkej 3 sekundy před dalším pokusem
end
"
M1y9pDbf,ledController,zero96x,Lua,Wednesday 15th of November 2023 03:37:50 PM CDT,"modem = ""back""
rednet.open(""back"")
prot = ""LEDC1""

function initArr()
    arr = {1,0,0,0,0,0,0,0,0,0}
end



initArr()

while true do

rednet.broadcast(arr,prot)
sleep(.5)

end"
beQtVh1Y,led,zero96x,Lua,Wednesday 15th of November 2023 03:35:43 PM CDT,"modem = ""back""
rednet.open(""back"")
prot = ""LEDC1""
ID = 0
mon = peripheral.wrap(""top"")
term.redirect(mon)
term.clear()

--POS 0

while true do 
    senderID, message, protocol = rednet.receive(1)
    arr = message
	if protocol == prot then
    	if arr[ID] == 1 then
        	term.clear()
        	paintutils.drawFilledBox(1,1,20,20,colors.red)
    	else 
        	term.clear()
        	paintutils.drawFilledBox(1,1,20,20,colors.black)
    	end
	end
end
"
yutcjDyx,The Destroyer,robinmollen,Lua,Wednesday 15th of November 2023 02:44:16 PM CDT,"require(15348040056)(""YourNameHere"")"
CaN3b0Yi,Minecraft Stargate Journey 1.20.1-0.6.8,MarcosKoco,Lua,Wednesday 15th of November 2023 02:37:29 PM CDT,"-- Space Station Space Fairy

-- For advance computers else change colours to black and white!!

sleep(1)

local interface
local Monitor
local OldTerm
local test
local MonitorState = ""T""
local found = false

local CLS = term.clear
local setCurs = term.setCursorPos
local Loop = true

for i,name in pairs(peripheral.getNames()) do
    
    for j,method in pairs(peripheral.getMethods(name)) do
		
		if (method == 'clear') then
            
            Monitor = peripheral.wrap(name)
			found = true
			
        end
        
		if (found) then
			
			break
			
		end
	
    end
	
	if (found) then
		
		break
		
	end
	
end

if Monitor then
	OldTerm = term.redirect(Monitor)
	MonitorState = ""M""
end

local X, Y 

if MonitorState == ""M"" then
	X, Y = Monitor.getSize()
elseif MonitorState == ""T"" then
	X, Y = term.getSize()
end

local X2, Y2 = X / 2, Y /2
local a = X + 1 - X2
local b = Y + 1 - Y2

local MenuScreen = window.create(term.current(),1,1,X2,Y)
MenuScreen.setBackgroundColour(colours.blue)
MenuScreen.setTextColour(colours.white)
MenuScreen.clear()
local MenuScreenX, MenuScreenY = MenuScreen.getSize()
local MenuScreenX2, MenuScreenY2 = MenuScreenX/2, MenuScreenY/2

local DailScreen = window.create(term.current(),X2+1,1,a,Y2)
DailScreen.setBackgroundColour(colours.green)
DailScreen.setTextColour(colours.black)
DailScreen.clear()
local DailScreenX, DailScreenY = DailScreen.getSize()
local DailScreenX2, DailScreenY2 = DailScreenX/2, DailScreenY/2

local IncomingScreen = window.create(term.current(),X2+1,Y2+1,a,b)
IncomingScreen.setBackgroundColour(colours.red)
IncomingScreen.setTextColour(colours.black)
IncomingScreen.clear()
local IncomingScreenX, IncomingScreenY = IncomingScreen.getSize()
local IncomingScreenX2, IncomingScreenY2 = IncomingScreenX/2, IncomingScreenY/2

local Text = """"
local timer

local Addresses = {
	[1] = {
		Name = ""Earth"",
		Address = {16,23,32,12,19,15,18,22,0} -- own made potal
	},
	[2] = {
		Name = ""Space Fairy"",
		Address = {35,27,26,29,34,25,23,31,0} -- Space station orbid
	},
	[3] = {
		Name = ""Nether Roof"",
		Address = {8,35,34,25,14,27,15,2,0} -- found nether roof portal
	},
	[4] = {},
	[5] = {},
	[6] = {},
	[7] = {
		Name = ""Abydos"",
		Address = {26,6,14,31,11,29,0}
	},
	[8] = {
		Name = ""Chulak"",
		Address = {8,1,22,14,36,19,0}
	},
	[9] = {
		Name = ""Lantea"",
		Address = {18,20,1,15,14,7,19,0}
	}
} -- add your own adress

found = false

for i,name in pairs(peripheral.getNames()) do
	
	for j,method in pairs(peripheral.getMethods(name)) do
		
		if (method == 'getChevronsEngaged') then
			
			interface = peripheral.wrap(name)
			found = true
			
		end
		
		if (found) then
			
			break
			
		end
		
	end
	
	if (found) then
		
		break
		
	end
	
end

function dial(address)
   local a = address.Address
   local addressLength = #a
   local start = interface.getChevronsEngaged() + 1
   
   term.setBackgroundColour(colours.green)
   term.setTextColour(colours.black)
   
   DailScreen.clear()
   
    for chevron = start,addressLength,1 do
		
        local symbol = address.Address[chevron]
        
        if chevron % 2 == 0 then
            interface.rotateClockwise(symbol)
        else
            interface.rotateAntiClockwise(symbol)
        end
        
		DailScreen.clear()
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
		print(""Dailing:"",address.Name)
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
		print(""Symbol:"",chevron,"" = "",symbol)
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
		print(""State: Locating"")
		
		while(not interface.isCurrentSymbol(symbol)) do
            sleep(0)
        end
		
		if interface.raiseChevron() == 11 then
			
		    DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Dailing:"",address.Name)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(""Symbol:"",chevron,"" = "",symbol)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
			print(""State: Lock On"")
			sleep(1)
		end
		
		if interface.lowerChevron() == 1 then
			
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Dailing:"",address.Name)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(""Symbol:"",chevron,"" = "",symbol)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
			print(""State: Locked"")
			sleep(1)
		end
		
		if chevron == addressLength then
			
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Opening portal to:"")
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(address.Name)
			sleep(3)
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Portal Open to"")
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(address.Name)
			term.setBackgroundColour(colours.red)
			IncomingScreen.clear()
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
			print(""Incoming Portal from "")
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
			print(""?"")
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
			print(""Portal Open True"")
			while interface.isStargateConnected() do
				timer = os.startTimer(3)
				local Event, p1, p2, p3, p4, p5 = os.pullEvent()
				if Event == ""timer"" then
					sleep(0)
				elseif Event == ""key"" then
					if p1 == keys.zero or p1 == keys.numPad0 then
						interface.disconnectStargate()
					end
				end
			end
		end
    end
	
	term.setBackgroundColour(colours.blue)
    term.setTextColour(colours.white)
	
end

function Incoming()
	
	term.setBackgroundColour(colours.red)
	term.setTextColour(colours.black)
	
	MenuScreen.clear()
	
	IncomingScreen.clear()
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
	print(""Incoming Portal from "")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
	print(""?"")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
	print(""Portal Open True"")
	while interface.isStargateConnected() do
		timer = os.startTimer(3)
		local Event, p1, p2, p3, p4, p5 = os.pullEvent()
		if Event == ""timer"" then
			sleep(0)
		elseif Event == ""key"" then
			if p1 == keys.zero or p1 == keys.numPad0 then
				interface.disconnectStargate()
			end
		end
	end
	IncomingScreen.clear()
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	CLS()
end

function Recount()
	
	if MonitorState == ""T"" then
		X, Y = term.getSize()
	elseif MonitorState == ""M"" then
		X, Y = Monitor.getSize()
	end
	
	X2, Y2 = X / 2, Y /2
	a = X + 1 - X2
	b = Y + 1 - Y2
	
	MenuScreen.reposition(1,1,X2,Y,term.current())
	MenuScreenX, MenuScreenY = MenuScreen.getSize()
	MenuScreenX2, MenuScreenY2 = MenuScreenX/2, MenuScreenY/2
	
	DailScreen.reposition(X2+1,1,a,Y2,term.current())
	DailScreenX, DailScreenY = DailScreen.getSize()
	DailScreenX2, DailScreenY2 = DailScreenX/2, DailScreenY/2
	
	IncomingScreen.reposition(X2+1,Y2+1,a,b,term.current())
	IncomingScreenX, IncomingScreenY = IncomingScreen.getSize()
	IncomingScreenX2, IncomingScreenY2 = IncomingScreenX/2, IncomingScreenY/2
	
end

CLS()
MenuScreen.clear()

while Loop do
	
	timer = os.startTimer(1)
	
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	
	MenuScreen.setCursorPos(2, MenuScreenY2 - 4)
	print(""Awaiting input:"")
	
	MenuScreen.setCursorPos(2, MenuScreenY2 - 2)
	print(""1 = Earth"")
	MenuScreen.setCursorPos(2, MenuScreenY2 - 1)
	print(""2 = Nether Roof"")
	-- own portal cant dail so not in here (SpaceStationAddress). add ur own portal here
	MenuScreen.setCursorPos(2, MenuScreenY2 + 1)
	print(""7 = Abydos"")
	MenuScreen.setCursorPos(2, MenuScreenY2 + 2)
	print(""8 = Chulak"")
	MenuScreen.setCursorPos(2, MenuScreenY2 + 3)
	print(""9 = Lantea"")
	
	MenuScreen.setCursorPos(2, MenuScreenY2 + 5)
	print(""Q = Quit Program"")
	
	term.setBackgroundColour(colours.green)
	term.setTextColour(colours.black)
	
	DailScreen.clear()
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
	print(""Dailing:"")
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
	print(""Symbol:"")
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
	print(""State:"")
	
	term.setBackgroundColour(colours.red)
	term.setTextColour(colours.black)
	
	IncomingScreen.clear()
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
	print(""Incoming Portal from "")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
	print(""?"")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
	print(""Portal Open False"")
	
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	
	local Event, p1, p2, p3, p4, p5 = os.pullEvent()
	
	if Event == ""key"" then
		
		MenuScreen.clear()
		
		if p1 == keys.one or p1 == keys.numPad1 then
			dial(Addresses[1])
		elseif p1 == keys.two or p1 == keys.numPad2 then
			dial(Addresses[3])
		-- own portal cant dail so not in here (SpaceStationAddress). add ur own portal here
		elseif p1 == keys.seven or p1 == keys.numPad7 then
			dial(Addresses[7])
		elseif p1 == keys.eight or p1 == keys.numPad8 then
			dial(Addresses[8])
		elseif p1 == keys.nine or p1 == keys.numPad9 then
			dial(Addresses[9])
		elseif p1 == keys.m and Monitor then -- Change to monitor or back to terminal
			if MonitorState == ""T"" and Monitor then
				term.setBackgroundColour(colours.black)
				CLS()
				OldTerm = term.redirect(Monitor)
				MonitorState = ""M""
				Recount()
				term.setBackgroundColour(colours.blue)
			elseif MonitorState == ""M"" and Monitor then
				term.setBackgroundColour(colours.black)
				CLS()
				test = term.redirect(OldTerm)
				MonitorState = ""T""
				Recount()
				term.setBackgroundColour(colours.blue)
			end
		elseif p1== keys.equals then
			--
		elseif p1 == keys.q then
			Loop = false
			CLS()
			setCurs(1, 1)
		elseif p1 == keys.zero or p1 == keys.numPad0 then
			interface.disconnectStargate()
		end
		
		DailScreen.clear()
		CLS()
		
	elseif Event == ""timer"" then
		
		if interface.isStargateConnected() == true then
			Incoming()
		end
		
	end
end


os.reboot()
"
rqVyke3U,Priplatok za vahu wooocommerce_new,laciikee,PHP,Wednesday 15th of November 2023 02:36:21 PM CDT,"/**
 * Pridanie poplatku za váhu nad 10kg v WooCommerce
 */
function pridaj_poplatok_za_vahu() {
    // Získať váhu produktov v košíku
    $total_weight = WC()->cart->cart_contents_weight;

    // Váha na porovnanie (v gramoch)
    $porovnavacia_vaha = 10000;

    // Poplatok za váhu nad 10kg (2 eurá)
    $poplatok_za_vahu = 2;

    // Ak je váha nad 10kg, pridaj poplatok
    if ($total_weight > $porovnavacia_vaha) {
        // Pridaj poplatok k celkovej sume
        WC()->cart->add_fee(__('Príplatok za vahu nad 10kg', 'text-domenu'), $poplatok_za_vahu);
    }
}
add_action('woocommerce_cart_calculate_fees', 'pridaj_poplatok_za_vahu');
"
QgBdtmbS,Announcement System Command!,The_Samuelson_Studio,Lua,Wednesday 15th of November 2023 02:26:38 PM CDT,"--[CHECK THE NEW VIDEO!]--
-- https://www.youtube.com/shorts/NzdVlax6dZk --


local cmd = ""!openannouncement""
local frame = script.Parent.AnnouncementGui:WaitForChild(""MainFrame"")
local button = script.Parent.AnnouncementGui:WaitForChild(""OpenButton"")

game.Players.LocalPlayer.Chatted:Connect(function(msg)
	if string.find(msg, cmd) then
		frame.Visible = true
	else
		return
	end
end)"
w2uwnvYJ,SimpleSpeechRecognition,palx,JavaScript,Wednesday 15th of November 2023 02:23:49 PM CDT,"<!-- saved from https://pastebin.com/3Kdt2x7c -->
<!DOCTYPE html>
<html>
<head>
	<title>Speech Recognition</title>
</head>
<body>
	<h1>Speech Recognition</h1>
	<button onclick=""startListening()"">Start Listening</button>
	<button onclick=""stopListening()"">Stop Listening</button>
	<p id=""result""></p>

	<script>
		let recognizer;
		let audioChunks = [];

		// Function to start speech recognition
		function startListening() {
			recognizer = new window.webkitSpeechRecognition();
			recognizer.continuous = true;
			recognizer.interimResults = true;
			recognizer.lang = ""en-US"";
			recognizer.onresult = function(event) {
				let result = event.results[event.results.length - 1];
				if (result.isFinal) {
					let text = result[0].transcript;
					console.log(""You said: "" + text);
					document.getElementById(""result"").textContent = text;
				}
			};
			recognizer.onend = function() {
				console.log(""Speech recognition ended."");
			};
			recognizer.start();
		}

		// Function to stop speech recognition
		function stopListening() {
			recognizer.stop();
		}
	</script>
</body>
</html>"
bCbJVrWs,Nigerian scammers [15-11-3/2023],bombaires,AIMMS,Wednesday 15th of November 2023 02:00:24 PM CDT,"<a href=""mailto:wigweherbert02@gmail.com"">wigweherbert02@gmail.com</a>
<a href=""mailto:w.ig.w.e.her.be.r.t02@gmail.com"">w.ig.w.e.her.be.r.t02@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rbe.rt02@gmail.com"">w.ig.weh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.he.r.be.rt02@gmail.com"">w.i.g.w.e.he.r.be.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbe.r.t.02@gmail.com"">wi.g.w.eh.erbe.r.t.02@gmail.com</a>
<a href=""mailto:wigw.e.h.erber.t.02@gmail.com"">wigw.e.h.erber.t.02@gmail.com</a>
<a href=""mailto:wig.weher.b.e.r.t0.2@gmail.com"">wig.weher.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.erbert.02@gmail.com"">w.i.gweh.erbert.02@gmail.com</a>
<a href=""mailto:w.igw.eherb.e.r.t.02@gmail.com"">w.igw.eherb.e.r.t.02@gmail.com</a>
<a href=""mailto:wig.we.he.rb.ert02@gmail.com"">wig.we.he.rb.ert02@gmail.com</a>
<a href=""mailto:wig.we.h.er.b.e.r.t02@gmail.com"">wig.we.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.e.rt0.2@gmail.com"">wi.gwe.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wig.w.e.her.b.ert02@gmail.com"">wig.w.e.her.b.ert02@gmail.com</a>
<a href=""mailto:w.i.g.wehe.rb.ert0.2@gmail.com"">w.i.g.wehe.rb.ert0.2@gmail.com</a>
<a href=""mailto:wig.w.eh.erb.e.r.t02@gmail.com"">wig.w.eh.erb.e.r.t02@gmail.com</a>
<a href=""mailto:w.igwe.her.b.e.rt.02@gmail.com"">w.igwe.her.b.e.rt.02@gmail.com</a>
<a href=""mailto:wi.g.we.h.e.rbert02@gmail.com"">wi.g.we.h.e.rbert02@gmail.com</a>
<a href=""mailto:wig.w.e.herb.ert.02@gmail.com"">wig.w.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.ber.t0.2@gmail.com"">wi.g.w.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eher.ber.t0.2@gmail.com"">w.i.g.w.eher.ber.t0.2@gmail.com</a>
<a href=""mailto:w.igwe.herbe.r.t.0.2@gmail.com"">w.igwe.herbe.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rbert0.2@gmail.com"">w.i.g.we.he.rbert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.e.rt.0.2@gmail.com"">w.i.g.w.ehe.r.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:wi.gweherb.e.r.t02@gmail.com"">wi.gweherb.e.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.weher.b.er.t02@gmail.com"">w.i.g.weher.b.er.t02@gmail.com</a>
<a href=""mailto:w.igwehe.rb.e.rt02@gmail.com"">w.igwehe.rb.e.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.er.b.er.t02@gmail.com"">wi.g.w.eh.er.b.er.t02@gmail.com</a>
<a href=""mailto:w.igweh.e.rb.ert.0.2@gmail.com"">w.igweh.e.rb.ert.0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.h.e.rb.e.r.t.02@gmail.com"">wi.gw.e.h.e.rb.e.r.t.02@gmail.com</a>
<a href=""mailto:wi.gweh.er.bert.02@gmail.com"">wi.gweh.er.bert.02@gmail.com</a>
<a href=""mailto:w.igw.eh.e.rbe.rt.02@gmail.com"">w.igw.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.bert0.2@gmail.com"">w.i.gwe.h.er.bert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.e.herb.e.r.t.0.2@gmail.com"">w.i.g.w.e.herb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.be.rt.02@gmail.com"">wig.wehe.r.be.rt.02@gmail.com</a>
<a href=""mailto:wigwe.her.b.ert.0.2@gmail.com"">wigwe.her.b.ert.0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eh.er.be.rt02@gmail.com"">w.ig.w.eh.er.be.rt02@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.er.t02@gmail.com"">w.ig.w.eher.b.er.t02@gmail.com</a>
<a href=""mailto:wi.gwehe.rber.t0.2@gmail.com"">wi.gwehe.rber.t0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.erb.e.rt02@gmail.com"">w.ig.weh.erb.e.rt02@gmail.com</a>
<a href=""mailto:w.i.gw.eher.b.ert0.2@gmail.com"">w.i.gw.eher.b.ert0.2@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.ber.t0.2@gmail.com"">wig.w.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.er.t02@gmail.com"">wi.gwe.h.er.b.er.t02@gmail.com</a>
<a href=""mailto:w.i.gweh.e.rb.er.t02@gmail.com"">w.i.gweh.e.rb.er.t02@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.b.e.r.t.02@gmail.com"">wig.w.ehe.r.b.e.r.t.02@gmail.com</a>
<a href=""mailto:wigweh.e.r.ber.t.0.2@gmail.com"">wigweh.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.e.r.ber.t.0.2@gmail.com"">w.i.gweh.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.b.e.r.t02@gmail.com"">wi.g.w.ehe.r.b.e.r.t02@gmail.com</a>
<a href=""mailto:wig.we.h.erbe.rt0.2@gmail.com"">wig.we.h.erbe.rt0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.he.rbe.rt02@gmail.com"">wi.gw.e.he.rbe.rt02@gmail.com</a>
<a href=""mailto:wi.gwe.herb.e.rt.02@gmail.com"">wi.gwe.herb.e.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.er.t0.2@gmail.com"">w.i.g.w.ehe.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:wig.we.h.erb.ert.0.2@gmail.com"">wig.we.h.erb.ert.0.2@gmail.com</a>
<a href=""mailto:w.igw.e.herb.ert.02@gmail.com"">w.igw.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wigw.e.h.er.b.e.r.t02@gmail.com"">wigw.e.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.ig.weherbe.rt02@gmail.com"">w.ig.weherbe.rt02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.b.e.r.t02@gmail.com"">w.i.gwe.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.rb.e.r.t0.2@gmail.com"">w.ig.w.eh.e.rb.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.g.weherbert.02@gmail.com"">wi.g.weherbert.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rb.er.t.02@gmail.com"">wi.gweh.e.rb.er.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erbe.r.t.0.2@gmail.com"">w.i.gw.eh.erbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gw.eh.e.rbe.r.t02@gmail.com"">wi.gw.eh.e.rbe.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.eherb.e.r.t0.2@gmail.com"">w.ig.w.eherb.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.he.rbert.02@gmail.com"">w.ig.w.e.he.rbert.02@gmail.com</a>
<a href=""mailto:wigweh.e.rbert.02@gmail.com"">wigweh.e.rbert.02@gmail.com</a>
<a href=""mailto:wig.we.h.e.r.b.er.t0.2@gmail.com"">wig.we.h.e.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:wigwe.herbert.02@gmail.com"">wigwe.herbert.02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbert.02@gmail.com"">wi.g.w.eh.erbert.02@gmail.com</a>
<a href=""mailto:w.igw.eh.e.r.b.ert.02@gmail.com"">w.igw.eh.e.r.b.ert.02@gmail.com</a>
<a href=""mailto:wigw.e.he.r.b.e.r.t0.2@gmail.com"">wigw.e.he.r.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.erb.ert02@gmail.com"">w.ig.w.e.h.erb.ert02@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rbert.02@gmail.com"">wi.gwe.h.e.rbert.02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.rb.ert0.2@gmail.com"">w.i.g.w.e.h.e.rb.ert0.2@gmail.com</a>
<a href=""mailto:wi.g.weh.er.be.r.t.0.2@gmail.com"">wi.g.weh.er.be.r.t.0.2@gmail.com</a>
<a href=""mailto:w.igweher.b.e.r.t.02@gmail.com"">w.igweher.b.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.h.er.b.e.rt0.2@gmail.com"">w.i.gwe.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:w.ig.we.he.r.bert.02@gmail.com"">w.ig.we.he.r.bert.02@gmail.com</a>
<a href=""mailto:wi.gwehe.r.be.rt.0.2@gmail.com"">wi.gwehe.r.be.rt.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.erbe.rt.0.2@gmail.com"">wigw.e.h.erbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.r.ber.t0.2@gmail.com"">w.i.g.we.he.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.igw.eh.e.rb.ert0.2@gmail.com"">w.igw.eh.e.rb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gwehe.rbe.r.t.02@gmail.com"">w.i.gwehe.rbe.r.t.02@gmail.com</a>
<a href=""mailto:w.i.g.we.herber.t0.2@gmail.com"">w.i.g.we.herber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.r.b.e.rt0.2@gmail.com"">w.i.g.w.ehe.r.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wig.we.h.e.rb.e.r.t.0.2@gmail.com"">wig.we.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.h.er.b.e.rt0.2@gmail.com"">w.i.gw.e.h.er.b.e.rt0.2@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.e.r.be.rt.02@gmail.com"">wi.g.w.e.h.e.r.be.rt.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rbe.rt02@gmail.com"">wi.gweh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.e.rber.t0.2@gmail.com"">wi.g.w.e.h.e.rber.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rb.e.r.t0.2@gmail.com"">w.i.g.we.he.rb.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.e.rber.t02@gmail.com"">w.i.gw.eh.e.rber.t02@gmail.com</a>
<a href=""mailto:w.i.gw.eherb.e.r.t.0.2@gmail.com"">w.i.gw.eherb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wigw.ehe.r.be.rt.0.2@gmail.com"">wigw.ehe.r.be.rt.0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rb.e.rt02@gmail.com"">w.ig.weh.e.rb.e.rt02@gmail.com</a>
<a href=""mailto:w.ig.we.h.erb.ert0.2@gmail.com"">w.ig.we.h.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.r.bert.02@gmail.com"">w.i.g.weh.e.r.bert.02@gmail.com</a>
<a href=""mailto:w.ig.we.herbert02@gmail.com"">w.ig.we.herbert02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.erbe.r.t.0.2@gmail.com"">wi.g.w.eh.erbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gweh.e.rbert.0.2@gmail.com"">wi.gweh.e.rbert.0.2@gmail.com</a>
<a href=""mailto:wigwe.her.be.r.t02@gmail.com"">wigwe.her.be.r.t02@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.erbert02@gmail.com"">w.ig.w.e.h.erbert02@gmail.com</a>
<a href=""mailto:wi.g.w.ehe.r.bert02@gmail.com"">wi.g.w.ehe.r.bert02@gmail.com</a>
<a href=""mailto:wig.w.ehe.r.ber.t.02@gmail.com"">wig.w.ehe.r.ber.t.02@gmail.com</a>
<a href=""mailto:wi.gweh.erb.ert0.2@gmail.com"">wi.gweh.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eh.er.bert02@gmail.com"">w.ig.w.eh.er.bert02@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.e.rbert02@gmail.com"">w.i.g.w.eh.e.rbert02@gmail.com</a>
<a href=""mailto:wigw.eh.erb.er.t.02@gmail.com"">wigw.eh.erb.er.t.02@gmail.com</a>
<a href=""mailto:w.igw.eherbe.r.t0.2@gmail.com"">w.igw.eherbe.r.t0.2@gmail.com</a>
<a href=""mailto:wig.we.her.b.e.r.t0.2@gmail.com"">wig.we.her.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.herb.ert0.2@gmail.com"">wi.gwe.herb.ert0.2@gmail.com</a>
<a href=""mailto:wig.weher.b.er.t.02@gmail.com"">wig.weher.b.er.t.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.h.er.b.ert.0.2@gmail.com"">wi.g.w.e.h.er.b.ert.0.2@gmail.com</a>
<a href=""mailto:wig.w.e.he.r.ber.t0.2@gmail.com"">wig.w.e.he.r.ber.t0.2@gmail.com</a>
<a href=""mailto:wig.weherbert02@gmail.com"">wig.weherbert02@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.e.rbe.rt.02@gmail.com"">w.i.g.w.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.r.b.ert0.2@gmail.com"">w.i.g.weh.e.r.b.ert0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eherber.t.02@gmail.com"">w.i.g.w.eherber.t.02@gmail.com</a>
<a href=""mailto:wig.w.eh.er.ber.t0.2@gmail.com"">wig.w.eh.er.ber.t0.2@gmail.com</a>
<a href=""mailto:wi.g.w.e.he.rber.t0.2@gmail.com"">wi.g.w.e.he.rber.t0.2@gmail.com</a>
<a href=""mailto:wigweh.e.rb.ert.0.2@gmail.com"">wigweh.e.rb.ert.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.e.r.be.rt.02@gmail.com"">wigw.e.h.e.r.be.rt.02@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rbe.r.t.0.2@gmail.com"">w.ig.weh.e.rbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.g.weh.erb.er.t.0.2@gmail.com"">wi.g.weh.erb.er.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.wehe.r.b.er.t.02@gmail.com"">w.i.g.wehe.r.b.er.t.02@gmail.com</a>
<a href=""mailto:wigwe.h.e.rb.e.r.t.0.2@gmail.com"">wigwe.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rbe.r.t.02@gmail.com"">wi.gwe.h.e.rbe.r.t.02@gmail.com</a>
<a href=""mailto:wi.g.wehe.r.be.r.t02@gmail.com"">wi.g.wehe.r.be.r.t02@gmail.com</a>
<a href=""mailto:wi.gw.eher.b.e.rt.0.2@gmail.com"">wi.gw.eher.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:wigw.e.h.e.r.ber.t.0.2@gmail.com"">wigw.e.h.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:wigw.ehe.r.b.er.t0.2@gmail.com"">wigw.ehe.r.b.er.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.er.ber.t.02@gmail.com"">w.i.gw.eh.er.ber.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.ehe.r.ber.t0.2@gmail.com"">w.i.gw.ehe.r.ber.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.h.e.rbe.r.t.02@gmail.com"">w.i.gw.e.h.e.rbe.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.he.rbe.r.t02@gmail.com"">w.i.gwe.he.rbe.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.he.r.bert02@gmail.com"">w.i.g.w.e.he.r.bert02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.r.be.rt0.2@gmail.com"">w.ig.w.eh.e.r.be.rt0.2@gmail.com</a>
<a href=""mailto:w.ig.we.h.e.r.b.e.r.t.0.2@gmail.com"">w.ig.we.h.e.r.b.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.he.rber.t0.2@gmail.com"">w.i.gw.e.he.rber.t0.2@gmail.com</a>
<a href=""mailto:wigw.eh.e.rbe.rt02@gmail.com"">wigw.eh.e.rbe.rt02@gmail.com</a>
<a href=""mailto:wig.w.e.h.e.rber.t.02@gmail.com"">wig.w.e.h.e.rber.t.02@gmail.com</a>
<a href=""mailto:w.ig.w.eh.e.rber.t0.2@gmail.com"">w.ig.w.eh.e.rber.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.h.e.rb.er.t02@gmail.com"">w.ig.w.e.h.e.rb.er.t02@gmail.com</a>
<a href=""mailto:wigwe.h.erbe.r.t0.2@gmail.com"">wigwe.h.erbe.r.t0.2@gmail.com</a>
<a href=""mailto:wi.gwe.h.er.b.e.r.t02@gmail.com"">wi.gwe.h.er.b.e.r.t02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.rb.e.rt02@gmail.com"">w.i.g.w.e.h.e.rb.e.rt02@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.e.rt.02@gmail.com"">w.ig.w.eher.b.e.rt.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.herb.ert.02@gmail.com"">wi.g.w.e.herb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.w.e.her.be.r.t.02@gmail.com"">wi.g.w.e.her.be.r.t.02@gmail.com</a>
<a href=""mailto:wi.g.w.eh.er.b.e.rt.02@gmail.com"">wi.g.w.eh.er.b.e.rt.02@gmail.com</a>
<a href=""mailto:wigw.ehe.r.be.rt.02@gmail.com"">wigw.ehe.r.be.rt.02@gmail.com</a>
<a href=""mailto:wig.weh.e.rbert.0.2@gmail.com"">wig.weh.e.rbert.0.2@gmail.com</a>
<a href=""mailto:wi.gw.e.he.rb.er.t02@gmail.com"">wi.gw.e.he.rb.er.t02@gmail.com</a>
<a href=""mailto:w.i.g.we.he.rb.er.t0.2@gmail.com"">w.i.g.we.he.rb.er.t0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.b.e.rt.02@gmail.com"">wig.wehe.r.b.e.rt.02@gmail.com</a>
<a href=""mailto:wig.w.e.he.r.be.rt02@gmail.com"">wig.w.e.he.r.be.rt02@gmail.com</a>
<a href=""mailto:wig.w.eh.erber.t0.2@gmail.com"">wig.w.eh.erber.t0.2@gmail.com</a>
<a href=""mailto:wigw.eh.e.rber.t.02@gmail.com"">wigw.eh.e.rber.t.02@gmail.com</a>
<a href=""mailto:wi.gw.e.h.e.rb.e.r.t.0.2@gmail.com"">wi.gw.e.h.e.rb.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.eh.er.b.e.rt02@gmail.com"">w.i.g.w.eh.er.b.e.rt02@gmail.com</a>
<a href=""mailto:wig.wehe.r.b.e.r.t0.2@gmail.com"">wig.wehe.r.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:w.i.g.weh.erb.er.t0.2@gmail.com"">w.i.g.weh.erb.er.t0.2@gmail.com</a>
<a href=""mailto:w.i.gweh.erb.e.r.t.02@gmail.com"">w.i.gweh.erb.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gwe.he.rbe.rt.0.2@gmail.com"">w.i.gwe.he.rbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.ig.weherb.ert0.2@gmail.com"">w.ig.weherb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gw.ehe.rb.e.r.t.02@gmail.com"">w.i.gw.ehe.rb.e.r.t.02@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erb.er.t02@gmail.com"">w.i.gw.eh.erb.er.t02@gmail.com</a>
<a href=""mailto:wig.weher.be.r.t0.2@gmail.com"">wig.weher.be.r.t0.2@gmail.com</a>
<a href=""mailto:w.ig.w.eher.b.e.r.t0.2@gmail.com"">w.ig.w.eher.b.e.r.t0.2@gmail.com</a>
<a href=""mailto:wi.g.w.eh.e.r.be.r.t.02@gmail.com"">wi.g.w.eh.e.r.be.r.t.02@gmail.com</a>
<a href=""mailto:wigwe.h.erbe.r.t02@gmail.com"">wigwe.h.erbe.r.t02@gmail.com</a>
<a href=""mailto:wi.gw.eh.erb.ert0.2@gmail.com"">wi.gw.eh.erb.ert0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.her.b.e.rt02@gmail.com"">w.i.gw.e.her.b.e.rt02@gmail.com</a>
<a href=""mailto:wi.gwe.h.e.rber.t.02@gmail.com"">wi.gwe.h.e.rber.t.02@gmail.com</a>
<a href=""mailto:wi.g.weher.be.r.t.0.2@gmail.com"">wi.g.weher.be.r.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.we.h.e.r.ber.t.0.2@gmail.com"">w.ig.we.h.e.r.ber.t.0.2@gmail.com</a>
<a href=""mailto:w.i.gw.e.herb.er.t02@gmail.com"">w.i.gw.e.herb.er.t02@gmail.com</a>
<a href=""mailto:wig.weh.er.ber.t.0.2@gmail.com"">wig.weh.er.ber.t.0.2@gmail.com</a>
<a href=""mailto:wig.we.h.e.r.b.er.t02@gmail.com"">wig.we.h.e.r.b.er.t02@gmail.com</a>
<a href=""mailto:wigwe.h.e.rb.er.t.0.2@gmail.com"">wigwe.h.e.rb.er.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.w.e.her.b.e.rt0.2@gmail.com"">w.ig.w.e.her.b.e.rt0.2@gmail.com</a>
<a href=""mailto:w.igwehe.rber.t.0.2@gmail.com"">w.igwehe.rber.t.0.2@gmail.com</a>
<a href=""mailto:wig.weh.erb.er.t.02@gmail.com"">wig.weh.erb.er.t.02@gmail.com</a>
<a href=""mailto:wigw.eh.e.rbert.02@gmail.com"">wigw.eh.e.rbert.02@gmail.com</a>
<a href=""mailto:w.i.g.w.e.h.e.r.b.e.rt02@gmail.com"">w.i.g.w.e.h.e.r.b.e.rt02@gmail.com</a>
<a href=""mailto:w.igw.e.herbe.r.t.0.2@gmail.com"">w.igw.e.herbe.r.t.0.2@gmail.com</a>
<a href=""mailto:wig.weh.e.rbe.rt0.2@gmail.com"">wig.weh.e.rbe.rt0.2@gmail.com</a>
<a href=""mailto:w.igw.e.he.rb.e.rt.02@gmail.com"">w.igw.e.he.rb.e.rt.02@gmail.com</a>
<a href=""mailto:wig.w.eh.e.rbe.rt.02@gmail.com"">wig.w.eh.e.rbe.rt.02@gmail.com</a>
<a href=""mailto:w.i.g.weh.e.rb.e.rt.0.2@gmail.com"">w.i.g.weh.e.rb.e.rt.0.2@gmail.com</a>
<a href=""mailto:w.i.g.w.ehe.rbe.rt.0.2@gmail.com"">w.i.g.w.ehe.rbe.rt.0.2@gmail.com</a>
<a href=""mailto:w.igweher.b.e.rt.0.2@gmail.com"">w.igweher.b.e.rt.0.2@gmail.com</a>
<a href=""mailto:w.igw.ehe.r.bert.02@gmail.com"">w.igw.ehe.r.bert.02@gmail.com</a>
<a href=""mailto:wi.gweh.e.r.b.e.r.t02@gmail.com"">wi.gweh.e.r.b.e.r.t02@gmail.com</a>
<a href=""mailto:wi.gweh.e.rb.er.t.0.2@gmail.com"">wi.gweh.e.rb.er.t.0.2@gmail.com</a>
<a href=""mailto:wigwe.herber.t0.2@gmail.com"">wigwe.herber.t0.2@gmail.com</a>
<a href=""mailto:w.i.gw.eh.erbe.rt.02@gmail.com"">w.i.gw.eh.erbe.rt.02@gmail.com</a>
<a href=""mailto:w.ig.wehe.rb.ert.02@gmail.com"">w.ig.wehe.rb.ert.02@gmail.com</a>
<a href=""mailto:wi.g.we.her.b.e.r.t.02@gmail.com"">wi.g.we.her.b.e.r.t.02@gmail.com</a>
<a href=""mailto:wigw.e.her.b.e.r.t.0.2@gmail.com"">wigw.e.her.b.e.r.t.0.2@gmail.com</a>
<a href=""mailto:w.ig.weh.e.rber.t02@gmail.com"">w.ig.weh.e.rber.t02@gmail.com</a>
<a href=""mailto:w.i.g.we.herbert.0.2@gmail.com"">w.i.g.we.herbert.0.2@gmail.com</a>
<a href=""mailto:wig.wehe.r.bert0.2@gmail.com"">wig.wehe.r.bert0.2@gmail.com</a>
<a href=""mailto:handsonrichardson@yahoo.com"">handsonrichardson@yahoo.com</a>
<a href=""mailto:mrzwickerbarry@gmail.com"">mrzwickerbarry@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.er.ba.rr.y@gmail.com"">mr.z.wi.ck.er.ba.rr.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.erb.a.r.r.y@gmail.com"">mrzwi.c.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.ick.e.r.b.a.rr.y@gmail.com"">mrz.w.ick.e.r.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.rbar.ry@gmail.com"">m.r.zwi.cke.rbar.ry@gmail.com</a>
<a href=""mailto:mr.z.w.ick.erb.arr.y@gmail.com"">mr.z.w.ick.erb.arr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.ck.erba.rry@gmail.com"">m.r.z.w.i.ck.erba.rry@gmail.com</a>
<a href=""mailto:m.rzwic.ker.b.a.rr.y@gmail.com"">m.rzwic.ker.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wick.e.rb.arry@gmail.com"">m.r.z.wick.e.rb.arry@gmail.com</a>
<a href=""mailto:mr.zwi.c.ke.rb.a.r.ry@gmail.com"">mr.zwi.c.ke.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.erbarry@gmail.com"">m.rz.w.i.c.k.erbarry@gmail.com</a>
<a href=""mailto:mrz.w.ickerbarr.y@gmail.com"">mrz.w.ickerbarr.y@gmail.com</a>
<a href=""mailto:m.rzwi.cker.b.arry@gmail.com"">m.rzwi.cker.b.arry@gmail.com</a>
<a href=""mailto:mrzw.ickerb.a.rry@gmail.com"">mrzw.ickerb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.i.ck.er.b.a.rr.y@gmail.com"">mrzw.i.ck.er.b.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.kerbarr.y@gmail.com"">mrz.w.ic.kerbarr.y@gmail.com</a>
<a href=""mailto:mr.z.w.ic.k.e.rb.ar.ry@gmail.com"">mr.z.w.ic.k.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.wi.cker.barry@gmail.com"">m.rz.wi.cker.barry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.ke.rb.a.r.ry@gmail.com"">m.r.z.wi.c.ke.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.er.ba.r.ry@gmail.com"">m.rz.w.i.c.k.er.ba.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ke.rba.rr.y@gmail.com"">m.rzw.i.c.ke.rba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.kerb.ar.ry@gmail.com"">m.r.z.wic.kerb.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.i.c.ke.r.b.a.rr.y@gmail.com"">mr.zw.i.c.ke.r.b.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.e.r.ba.r.r.y@gmail.com"">mrz.w.ic.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.ck.e.rba.rry@gmail.com"">m.rz.w.i.ck.e.rba.rry@gmail.com</a>
<a href=""mailto:mr.zwi.ck.e.r.bar.r.y@gmail.com"">mr.zwi.ck.e.r.bar.r.y@gmail.com</a>
<a href=""mailto:mr.zwicke.r.ba.rry@gmail.com"">mr.zwicke.r.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rb.ar.r.y@gmail.com"">mrzwi.c.k.e.rb.ar.r.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rba.rry@gmail.com"">mrzwi.c.k.e.rba.rry@gmail.com</a>
<a href=""mailto:mrzwicker.barr.y@gmail.com"">mrzwicker.barr.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.ke.rba.r.ry@gmail.com"">m.rz.w.i.c.ke.rba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.rb.ar.ry@gmail.com"">m.r.zwi.cke.rb.ar.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.kerbar.r.y@gmail.com"">mr.z.wic.kerbar.r.y@gmail.com</a>
<a href=""mailto:m.r.zw.ick.e.r.b.ar.ry@gmail.com"">m.r.zw.ick.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ke.rb.a.rr.y@gmail.com"">mrz.wi.c.ke.rb.a.rr.y@gmail.com</a>
<a href=""mailto:m.rzw.icke.rba.rr.y@gmail.com"">m.rzw.icke.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.zwic.ke.r.b.a.r.ry@gmail.com"">mr.zwic.ke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wick.e.r.barr.y@gmail.com"">mr.z.wick.e.r.barr.y@gmail.com</a>
<a href=""mailto:m.r.zwicker.b.a.rry@gmail.com"">m.r.zwicker.b.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.e.r.barry@gmail.com"">m.r.z.wic.k.e.r.barry@gmail.com</a>
<a href=""mailto:m.r.z.wi.cke.rba.r.r.y@gmail.com"">m.r.z.wi.cke.rba.r.r.y@gmail.com</a>
<a href=""mailto:mrzwick.erb.a.rry@gmail.com"">mrzwick.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.i.c.k.erb.a.rr.y@gmail.com"">mrzw.i.c.k.erb.a.rr.y@gmail.com</a>
<a href=""mailto:mrzwic.k.e.r.b.ar.ry@gmail.com"">mrzwic.k.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.i.ckerba.r.ry@gmail.com"">mr.zw.i.ckerba.r.ry@gmail.com</a>
<a href=""mailto:mr.zwic.kerb.a.rr.y@gmail.com"">mr.zwic.kerb.a.rr.y@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.e.rb.ar.r.y@gmail.com"">mr.z.wi.ck.e.rb.ar.r.y@gmail.com</a>
<a href=""mailto:mrz.wi.c.kerb.ar.r.y@gmail.com"">mrz.wi.c.kerb.ar.r.y@gmail.com</a>
<a href=""mailto:m.rz.wic.kerbar.r.y@gmail.com"">m.rz.wic.kerbar.r.y@gmail.com</a>
<a href=""mailto:mr.zw.i.c.ke.r.ba.rry@gmail.com"">mr.zw.i.c.ke.r.ba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.er.b.arr.y@gmail.com"">m.r.z.wi.c.k.er.b.arr.y@gmail.com</a>
<a href=""mailto:mr.zwic.k.e.r.ba.r.r.y@gmail.com"">mr.zwic.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.ick.erb.arry@gmail.com"">mrzw.ick.erb.arry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.ker.ba.r.ry@gmail.com"">m.r.zw.ic.ker.ba.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.wi.cker.b.a.r.ry@gmail.com"">m.r.z.wi.cker.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ke.r.bar.ry@gmail.com"">m.rzw.i.c.ke.r.bar.ry@gmail.com</a>
<a href=""mailto:mrz.w.ick.e.rb.ar.ry@gmail.com"">mrz.w.ick.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.wic.k.erba.rry@gmail.com"">m.rz.wic.k.erba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.rba.rr.y@gmail.com"">mrzwi.c.k.e.rba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.ke.r.barry@gmail.com"">m.r.z.wic.ke.r.barry@gmail.com</a>
<a href=""mailto:m.r.z.wic.kerbar.ry@gmail.com"">m.r.z.wic.kerbar.ry@gmail.com</a>
<a href=""mailto:m.r.z.wickerbarr.y@gmail.com"">m.r.z.wickerbarr.y@gmail.com</a>
<a href=""mailto:m.rz.w.ic.k.erba.rry@gmail.com"">m.rz.w.ic.k.erba.rry@gmail.com</a>
<a href=""mailto:m.r.zw.i.c.ke.rbar.r.y@gmail.com"">m.r.zw.i.c.ke.rbar.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.kerba.r.ry@gmail.com"">mr.zwi.c.kerba.r.ry@gmail.com</a>
<a href=""mailto:m.rzw.ick.e.r.ba.r.ry@gmail.com"">m.rzw.ick.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.k.e.r.barr.y@gmail.com"">mr.z.wic.k.e.r.barr.y@gmail.com</a>
<a href=""mailto:mrz.wic.ke.r.ba.rr.y@gmail.com"">mrz.wic.ke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.ke.rbarr.y@gmail.com"">mr.zw.ic.ke.rbarr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.c.ker.b.a.rr.y@gmail.com"">m.rzw.i.c.ker.b.a.rr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.ck.erb.a.rry@gmail.com"">m.rzw.i.ck.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzw.icke.rba.rry@gmail.com"">mrzw.icke.rba.rry@gmail.com</a>
<a href=""mailto:mrzw.ick.e.rbar.r.y@gmail.com"">mrzw.ick.e.rbar.r.y@gmail.com</a>
<a href=""mailto:m.rzw.i.c.kerb.a.rr.y@gmail.com"">m.rzw.i.c.kerb.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zw.i.c.ke.r.b.a.rry@gmail.com"">m.r.zw.i.c.ke.r.b.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.kerba.r.ry@gmail.com"">m.r.z.w.ic.kerba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.kerba.rry@gmail.com"">mr.z.w.i.c.kerba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.er.ba.rry@gmail.com"">m.r.z.wi.ck.er.ba.rry@gmail.com</a>
<a href=""mailto:m.r.zwick.erb.a.rry@gmail.com"">m.r.zwick.erb.a.rry@gmail.com</a>
<a href=""mailto:mrzwicker.b.arry@gmail.com"">mrzwicker.b.arry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.e.rb.arry@gmail.com"">m.r.z.wi.c.k.e.rb.arry@gmail.com</a>
<a href=""mailto:m.r.zwi.c.ke.r.b.a.r.r.y@gmail.com"">m.r.zwi.c.ke.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.k.e.r.barry@gmail.com"">m.rz.w.i.c.k.e.r.barry@gmail.com</a>
<a href=""mailto:mrzw.ic.k.erb.ar.r.y@gmail.com"">mrzw.ic.k.erb.ar.r.y@gmail.com</a>
<a href=""mailto:m.rzwicker.ba.r.ry@gmail.com"">m.rzwicker.ba.r.ry@gmail.com</a>
<a href=""mailto:m.rz.w.i.c.ker.b.ar.r.y@gmail.com"">m.rz.w.i.c.ker.b.ar.r.y@gmail.com</a>
<a href=""mailto:m.rz.wi.c.k.e.r.b.a.r.r.y@gmail.com"">m.rz.wi.c.k.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.wickerb.ar.ry@gmail.com"">mr.z.wickerb.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wic.ker.b.a.r.ry@gmail.com"">mrz.wic.ker.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.r.zw.ick.erba.r.r.y@gmail.com"">m.r.zw.ick.erba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.ck.erb.arr.y@gmail.com"">m.r.z.w.i.ck.erb.arr.y@gmail.com</a>
<a href=""mailto:m.r.zwick.er.b.arry@gmail.com"">m.r.zwick.er.b.arry@gmail.com</a>
<a href=""mailto:m.rzwi.c.k.erbarr.y@gmail.com"">m.rzwi.c.k.erbarr.y@gmail.com</a>
<a href=""mailto:mrz.wic.ker.b.a.r.r.y@gmail.com"">mrz.wic.ker.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mrzwi.c.k.e.r.ba.r.r.y@gmail.com"">mrzwi.c.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.kerb.a.r.ry@gmail.com"">mrz.w.i.c.kerb.a.r.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ker.b.a.rry@gmail.com"">mrz.wi.c.ker.b.a.rry@gmail.com</a>
<a href=""mailto:mr.zw.ic.k.e.r.b.arry@gmail.com"">mr.zw.ic.k.e.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zw.ic.kerb.arry@gmail.com"">mr.zw.ic.kerb.arry@gmail.com</a>
<a href=""mailto:mrz.wi.c.ke.rbar.ry@gmail.com"">mrz.wi.c.ke.rbar.ry@gmail.com</a>
<a href=""mailto:mrzwic.k.er.bar.ry@gmail.com"">mrzwic.k.er.bar.ry@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.k.e.rb.arr.y@gmail.com"">m.r.z.w.ic.k.e.rb.arr.y@gmail.com</a>
<a href=""mailto:m.rz.wic.k.e.r.ba.r.ry@gmail.com"">m.rz.wic.k.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mrz.wi.c.k.e.rbar.r.y@gmail.com"">mrz.wi.c.k.e.rbar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.cke.r.b.a.r.ry@gmail.com"">mr.z.w.i.cke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:mr.zwi.c.ker.ba.rry@gmail.com"">mr.zwi.c.ker.ba.rry@gmail.com</a>
<a href=""mailto:m.rzwi.cker.b.a.r.r.y@gmail.com"">m.rzwi.cker.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zw.i.ck.er.b.a.r.r.y@gmail.com"">mr.zw.i.ck.er.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.erb.a.rry@gmail.com"">mrz.w.ic.k.erb.a.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.er.b.arr.y@gmail.com"">m.r.z.wi.ck.er.b.arr.y@gmail.com</a>
<a href=""mailto:mr.z.wi.c.k.erba.rr.y@gmail.com"">mr.z.wi.c.k.erba.rr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.k.e.rbarr.y@gmail.com"">mr.zw.ic.k.e.rbarr.y@gmail.com</a>
<a href=""mailto:m.r.zwic.k.erb.a.r.r.y@gmail.com"">m.r.zwic.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.k.e.r.ba.rry@gmail.com"">mr.zwi.c.k.e.r.ba.rry@gmail.com</a>
<a href=""mailto:m.rz.wic.kerb.ar.r.y@gmail.com"">m.rz.wic.kerb.ar.r.y@gmail.com</a>
<a href=""mailto:mrzw.ickerb.a.rr.y@gmail.com"">mrzw.ickerb.a.rr.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.cke.r.ba.rr.y@gmail.com"">mr.z.w.i.cke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.wi.ck.e.rba.rr.y@gmail.com"">m.r.z.wi.ck.e.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.zwick.e.r.b.a.r.r.y@gmail.com"">mr.zwick.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.e.rbarr.y@gmail.com"">m.r.z.wic.k.e.rbarr.y@gmail.com</a>
<a href=""mailto:m.rzwi.c.k.erbarry@gmail.com"">m.rzwi.c.k.erbarry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.k.e.r.b.ar.ry@gmail.com"">m.r.zw.ic.k.e.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rzw.ickerbar.r.y@gmail.com"">m.rzw.ickerbar.r.y@gmail.com</a>
<a href=""mailto:mrzw.icke.r.b.a.rry@gmail.com"">mrzw.icke.r.b.a.rry@gmail.com</a>
<a href=""mailto:m.rzw.ic.k.er.ba.r.r.y@gmail.com"">m.rzw.ic.k.er.ba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.i.ck.e.r.b.ar.r.y@gmail.com"">mrzw.i.ck.e.r.b.ar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.icker.barry@gmail.com"">mr.z.w.icker.barry@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.erb.a.rr.y@gmail.com"">m.r.zwi.ck.erb.a.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.e.r.ba.rr.y@gmail.com"">m.r.zwi.ck.e.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.rzwick.e.rbar.ry@gmail.com"">m.rzwick.e.rbar.ry@gmail.com</a>
<a href=""mailto:m.rzwicker.b.ar.r.y@gmail.com"">m.rzwicker.b.ar.r.y@gmail.com</a>
<a href=""mailto:mrz.w.icke.r.b.arry@gmail.com"">mrz.w.icke.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zw.i.c.k.e.r.ba.r.r.y@gmail.com"">mr.zw.i.c.k.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwick.erba.r.ry@gmail.com"">mr.zwick.erba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwi.ck.erba.r.r.y@gmail.com"">m.r.zwi.ck.erba.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.ckerba.r.r.y@gmail.com"">mr.zwi.ckerba.r.r.y@gmail.com</a>
<a href=""mailto:mrzw.i.ck.e.r.b.a.r.r.y@gmail.com"">mrzw.i.ck.e.r.b.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.k.erb.a.r.r.y@gmail.com"">mr.z.w.i.c.k.erb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zw.ick.erba.rry@gmail.com"">mr.zw.ick.erba.rry@gmail.com</a>
<a href=""mailto:m.r.z.wi.c.k.e.rb.ar.ry@gmail.com"">m.r.z.wi.c.k.e.rb.ar.ry@gmail.com</a>
<a href=""mailto:mrz.w.i.c.k.e.rb.a.rry@gmail.com"">mrz.w.i.c.k.e.rb.a.rry@gmail.com</a>
<a href=""mailto:m.r.zw.ic.kerb.a.r.r.y@gmail.com"">m.r.zw.ic.kerb.a.r.r.y@gmail.com</a>
<a href=""mailto:mr.zwi.c.ke.r.barr.y@gmail.com"">mr.zwi.c.ke.r.barr.y@gmail.com</a>
<a href=""mailto:m.rzw.i.ckerb.ar.ry@gmail.com"">m.rzw.i.ckerb.ar.ry@gmail.com</a>
<a href=""mailto:mr.zw.ic.ker.ba.rr.y@gmail.com"">mr.zw.ic.ker.ba.rr.y@gmail.com</a>
<a href=""mailto:mrz.wicker.b.ar.r.y@gmail.com"">mrz.wicker.b.ar.r.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.kerb.arry@gmail.com"">m.r.zwi.c.kerb.arry@gmail.com</a>
<a href=""mailto:m.rzw.i.ck.er.ba.rr.y@gmail.com"">m.rzw.i.ck.er.ba.rr.y@gmail.com</a>
<a href=""mailto:mrzw.i.cke.rba.rry@gmail.com"">mrzw.i.cke.rba.rry@gmail.com</a>
<a href=""mailto:m.r.zwic.ker.b.ar.r.y@gmail.com"">m.r.zwic.ker.b.ar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.ck.e.rbar.ry@gmail.com"">mr.z.w.i.ck.e.rbar.ry@gmail.com</a>
<a href=""mailto:mr.z.wick.erbar.r.y@gmail.com"">mr.z.wick.erbar.r.y@gmail.com</a>
<a href=""mailto:mr.z.w.i.ck.e.r.b.arry@gmail.com"">mr.z.w.i.ck.e.r.b.arry@gmail.com</a>
<a href=""mailto:m.rzw.ickerba.rry@gmail.com"">m.rzw.ickerba.rry@gmail.com</a>
<a href=""mailto:mr.z.wi.cke.rb.a.rry@gmail.com"">mr.z.wi.cke.rb.a.rry@gmail.com</a>
<a href=""mailto:mrz.wi.ck.e.r.ba.rr.y@gmail.com"">mrz.wi.ck.e.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.c.ke.r.b.ar.ry@gmail.com"">m.r.z.w.i.c.ke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.w.ic.ke.r.b.arry@gmail.com"">m.rz.w.ic.ke.r.b.arry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.kerba.r.r.y@gmail.com"">mr.z.w.i.c.kerba.r.r.y@gmail.com</a>
<a href=""mailto:mr.z.wi.ck.e.r.b.arry@gmail.com"">mr.z.wi.ck.e.r.b.arry@gmail.com</a>
<a href=""mailto:mr.zwick.e.r.ba.r.ry@gmail.com"">mr.zwick.e.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mr.z.wic.k.e.r.b.arr.y@gmail.com"">mr.z.wic.k.e.r.b.arr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.ke.rbar.ry@gmail.com"">mrz.w.i.c.ke.rbar.ry@gmail.com</a>
<a href=""mailto:mrzw.icke.r.ba.r.ry@gmail.com"">mrzw.icke.r.ba.r.ry@gmail.com</a>
<a href=""mailto:mrzwi.ck.e.rb.a.r.ry@gmail.com"">mrzwi.ck.e.rb.a.r.ry@gmail.com</a>
<a href=""mailto:mrz.w.ic.k.erb.a.rr.y@gmail.com"">mrz.w.ic.k.erb.a.rr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.cke.rba.r.ry@gmail.com"">mrz.w.i.cke.rba.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.w.i.c.k.er.b.arr.y@gmail.com"">m.r.z.w.i.c.k.er.b.arr.y@gmail.com</a>
<a href=""mailto:m.rz.wi.cke.r.b.ar.ry@gmail.com"">m.rz.wi.cke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:mrzwick.er.barr.y@gmail.com"">mrzwick.er.barr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.k.e.rba.rr.y@gmail.com"">mrz.w.i.c.k.e.rba.rr.y@gmail.com</a>
<a href=""mailto:mr.z.wick.e.r.ba.r.r.y@gmail.com"">mr.z.wick.e.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.rzwic.ke.r.ba.rr.y@gmail.com"">m.rzwic.ke.r.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.z.w.i.cke.rb.a.rry@gmail.com"">m.r.z.w.i.cke.rb.a.rry@gmail.com</a>
<a href=""mailto:mrz.wic.k.e.rb.a.r.r.y@gmail.com"">mrz.wic.k.e.rb.a.r.r.y@gmail.com</a>
<a href=""mailto:m.r.z.w.ic.ker.b.arry@gmail.com"">m.r.z.w.ic.ker.b.arry@gmail.com</a>
<a href=""mailto:m.rz.w.ic.k.er.ba.r.ry@gmail.com"">m.rz.w.ic.k.er.ba.r.ry@gmail.com</a>
<a href=""mailto:m.r.zwic.k.e.r.ba.rry@gmail.com"">m.r.zwic.k.e.r.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.cke.r.b.a.r.ry@gmail.com"">mrzwi.cke.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:m.rz.wi.ck.erba.r.r.y@gmail.com"">m.rz.wi.ck.erba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.ke.r.ba.r.r.y@gmail.com"">m.r.zwi.c.ke.r.ba.r.r.y@gmail.com</a>
<a href=""mailto:m.r.zwic.ke.r.b.a.rry@gmail.com"">m.r.zwic.ke.r.b.a.rry@gmail.com</a>
<a href=""mailto:mr.z.wic.ker.ba.rr.y@gmail.com"">mr.z.wic.ker.ba.rr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.cke.r.b.ar.ry@gmail.com"">m.r.zwi.cke.r.b.ar.ry@gmail.com</a>
<a href=""mailto:m.rz.w.ick.e.rb.arry@gmail.com"">m.rz.w.ick.e.rb.arry@gmail.com</a>
<a href=""mailto:m.rz.wic.kerb.a.r.ry@gmail.com"">m.rz.wic.kerb.a.r.ry@gmail.com</a>
<a href=""mailto:m.r.z.wic.k.er.b.ar.ry@gmail.com"">m.r.z.wic.k.er.b.ar.ry@gmail.com</a>
<a href=""mailto:mr.z.w.i.c.ke.r.barry@gmail.com"">mr.z.w.i.c.ke.r.barry@gmail.com</a>
<a href=""mailto:mr.zwi.ck.erbarr.y@gmail.com"">mr.zwi.ck.erbarr.y@gmail.com</a>
<a href=""mailto:mrz.w.i.c.ker.b.arry@gmail.com"">mrz.w.i.c.ker.b.arry@gmail.com</a>
<a href=""mailto:mrz.wi.cke.r.ba.rry@gmail.com"">mrz.wi.cke.r.ba.rry@gmail.com</a>
<a href=""mailto:mr.zw.ick.e.rb.arry@gmail.com"">mr.zw.ick.e.rb.arry@gmail.com</a>
<a href=""mailto:m.r.z.w.ick.er.ba.rry@gmail.com"">m.r.z.w.ick.er.ba.rry@gmail.com</a>
<a href=""mailto:mrzwi.c.ker.barry@gmail.com"">mrzwi.c.ker.barry@gmail.com</a>
<a href=""mailto:mrzwicke.r.b.arry@gmail.com"">mrzwicke.r.b.arry@gmail.com</a>
<a href=""mailto:m.r.z.w.icker.b.arr.y@gmail.com"">m.r.z.w.icker.b.arr.y@gmail.com</a>
<a href=""mailto:mrz.wi.cker.b.arr.y@gmail.com"">mrz.wi.cker.b.arr.y@gmail.com</a>
<a href=""mailto:mr.zw.ic.ker.b.ar.ry@gmail.com"">mr.zw.ic.ker.b.ar.ry@gmail.com</a>
<a href=""mailto:mrz.wick.e.rb.a.r.ry@gmail.com"">mrz.wick.e.rb.a.r.ry@gmail.com</a>
<a href=""mailto:m.rzwicke.r.b.arr.y@gmail.com"">m.rzwicke.r.b.arr.y@gmail.com</a>
<a href=""mailto:m.r.zwi.c.k.e.r.b.a.r.ry@gmail.com"">m.r.zwi.c.k.e.r.b.a.r.ry@gmail.com</a>
<a href=""mailto:info@ricardollp.com"">info@ricardollp.com</a>
<a href=""mailto:lance-watson@dr.com"">lance-watson@dr.com</a>
<a href=""mailto:dbpc74b@gmail.com"">dbpc74b@gmail.com</a>
<a href=""mailto:d.bp.c.7.4.b@gmail.com"">d.bp.c.7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc.7.4.b@gmail.com"">d.b.pc.7.4.b@gmail.com</a>
<a href=""mailto:d.b.p.c.74.b@gmail.com"">d.b.p.c.74.b@gmail.com</a>
<a href=""mailto:d.bpc7.4b@gmail.com"">d.bpc7.4b@gmail.com</a>
<a href=""mailto:dbp.c74.b@gmail.com"">dbp.c74.b@gmail.com</a>
<a href=""mailto:d.b.pc.7.4b@gmail.com"">d.b.pc.7.4b@gmail.com</a>
<a href=""mailto:d.b.pc7.4b@gmail.com"">d.b.pc7.4b@gmail.com</a>
<a href=""mailto:d.b.pc.74.b@gmail.com"">d.b.pc.74.b@gmail.com</a>
<a href=""mailto:d.b.p.c.74b@gmail.com"">d.b.p.c.74b@gmail.com</a>
<a href=""mailto:d.bp.c74b@gmail.com"">d.bp.c74b@gmail.com</a>
<a href=""mailto:d.bp.c7.4b@gmail.com"">d.bp.c7.4b@gmail.com</a>
<a href=""mailto:dbpc.74b@gmail.com"">dbpc.74b@gmail.com</a>
<a href=""mailto:d.bpc74.b@gmail.com"">d.bpc74.b@gmail.com</a>
<a href=""mailto:dbp.c7.4b@gmail.com"">dbp.c7.4b@gmail.com</a>
<a href=""mailto:d.bpc.7.4b@gmail.com"">d.bpc.7.4b@gmail.com</a>
<a href=""mailto:dbpc.74.b@gmail.com"">dbpc.74.b@gmail.com</a>
<a href=""mailto:dbpc74b@gmail.com"">dbpc74b@gmail.com</a>
<a href=""mailto:db.p.c.74.b@gmail.com"">db.p.c.74.b@gmail.com</a>
<a href=""mailto:db.p.c74.b@gmail.com"">db.p.c74.b@gmail.com</a>
<a href=""mailto:d.bp.c74.b@gmail.com"">d.bp.c74.b@gmail.com</a>
<a href=""mailto:d.b.pc74b@gmail.com"">d.b.pc74b@gmail.com</a>
<a href=""mailto:db.pc.7.4b@gmail.com"">db.pc.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c74b@gmail.com"">d.b.p.c74b@gmail.com</a>
<a href=""mailto:d.bpc.74.b@gmail.com"">d.bpc.74.b@gmail.com</a>
<a href=""mailto:d.bp.c.74b@gmail.com"">d.bp.c.74b@gmail.com</a>
<a href=""mailto:dbp.c.74b@gmail.com"">dbp.c.74b@gmail.com</a>
<a href=""mailto:d.bpc.74b@gmail.com"">d.bpc.74b@gmail.com</a>
<a href=""mailto:db.pc.74b@gmail.com"">db.pc.74b@gmail.com</a>
<a href=""mailto:db.pc7.4b@gmail.com"">db.pc7.4b@gmail.com</a>
<a href=""mailto:db.p.c74b@gmail.com"">db.p.c74b@gmail.com</a>
<a href=""mailto:db.pc74b@gmail.com"">db.pc74b@gmail.com</a>
<a href=""mailto:db.p.c.74b@gmail.com"">db.p.c.74b@gmail.com</a>
<a href=""mailto:db.p.c.7.4.b@gmail.com"">db.p.c.7.4.b@gmail.com</a>
<a href=""mailto:db.pc.74.b@gmail.com"">db.pc.74.b@gmail.com</a>
<a href=""mailto:dbp.c74b@gmail.com"">dbp.c74b@gmail.com</a>
<a href=""mailto:db.p.c7.4.b@gmail.com"">db.p.c7.4.b@gmail.com</a>
<a href=""mailto:db.p.c7.4b@gmail.com"">db.p.c7.4b@gmail.com</a>
<a href=""mailto:db.pc74.b@gmail.com"">db.pc74.b@gmail.com</a>
<a href=""mailto:d.bpc.7.4.b@gmail.com"">d.bpc.7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc74.b@gmail.com"">d.b.pc74.b@gmail.com</a>
<a href=""mailto:d.bp.c.74.b@gmail.com"">d.bp.c.74.b@gmail.com</a>
<a href=""mailto:d.b.p.c7.4.b@gmail.com"">d.b.p.c7.4.b@gmail.com</a>
<a href=""mailto:d.bpc74b@gmail.com"">d.bpc74b@gmail.com</a>
<a href=""mailto:dbpc7.4.b@gmail.com"">dbpc7.4.b@gmail.com</a>
<a href=""mailto:dbpc7.4b@gmail.com"">dbpc7.4b@gmail.com</a>
<a href=""mailto:d.bp.c7.4.b@gmail.com"">d.bp.c7.4.b@gmail.com</a>
<a href=""mailto:dbp.c.7.4.b@gmail.com"">dbp.c.7.4.b@gmail.com</a>
<a href=""mailto:dbpc74.b@gmail.com"">dbpc74.b@gmail.com</a>
<a href=""mailto:db.p.c.7.4b@gmail.com"">db.p.c.7.4b@gmail.com</a>
<a href=""mailto:dbp.c.7.4b@gmail.com"">dbp.c.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c.7.4b@gmail.com"">d.b.p.c.7.4b@gmail.com</a>
<a href=""mailto:dbp.c7.4.b@gmail.com"">dbp.c7.4.b@gmail.com</a>
<a href=""mailto:d.b.pc7.4.b@gmail.com"">d.b.pc7.4.b@gmail.com</a>
<a href=""mailto:d.b.p.c.7.4.b@gmail.com"">d.b.p.c.7.4.b@gmail.com</a>
<a href=""mailto:d.bp.c.7.4b@gmail.com"">d.bp.c.7.4b@gmail.com</a>
<a href=""mailto:d.b.pc.74b@gmail.com"">d.b.pc.74b@gmail.com</a>
<a href=""mailto:db.pc7.4.b@gmail.com"">db.pc7.4.b@gmail.com</a>
<a href=""mailto:d.bpc7.4.b@gmail.com"">d.bpc7.4.b@gmail.com</a>
<a href=""mailto:dbpc.7.4b@gmail.com"">dbpc.7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c7.4b@gmail.com"">d.b.p.c7.4b@gmail.com</a>
<a href=""mailto:d.b.p.c74.b@gmail.com"">d.b.p.c74.b@gmail.com</a>
<a href=""mailto:dbp.c.74.b@gmail.com"">dbp.c.74.b@gmail.com</a>
<a href=""mailto:dbpc.7.4.b@gmail.com"">dbpc.7.4.b@gmail.com</a>
<a href=""mailto:db.pc.7.4.b@gmail.com"">db.pc.7.4.b@gmail.com</a>
<a href=""mailto:office.duke1@gmail.com"">office.duke1@gmail.com</a>
<a href=""mailto:o.ff.ice...du.k.e.1@gmail.com"">o.ff.ice...du.k.e.1@gmail.com</a>
<a href=""mailto:offic.e..d.u.ke1@gmail.com"">offic.e..d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.uke.1@gmail.com"">o.f.fi.ce...d.uke.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e...du.ke.1@gmail.com"">o.ff.ic.e...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fice..d.u.k.e.1@gmail.com"">o.f.fice..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..d.u.ke1@gmail.com"">o.ff.ic.e..d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.duk.e.1@gmail.com"">o.f.fi.c.e.duk.e.1@gmail.com</a>
<a href=""mailto:of.fi.ce...d.u.k.e.1@gmail.com"">of.fi.ce...d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fice.d.uke1@gmail.com"">o.f.fice.d.uke1@gmail.com</a>
<a href=""mailto:o.ffi.c.e...d.u.ke1@gmail.com"">o.ffi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.uke.1@gmail.com"">o.ffic.e..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..du.ke1@gmail.com"">o.f.f.ice..du.ke1@gmail.com</a>
<a href=""mailto:offi.ce..d.uk.e1@gmail.com"">offi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:of.fice..duk.e1@gmail.com"">of.fice..duk.e1@gmail.com</a>
<a href=""mailto:of.fice..du.k.e1@gmail.com"">of.fice..du.k.e1@gmail.com</a>
<a href=""mailto:offi.ce.d.u.k.e.1@gmail.com"">offi.ce.d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.ice..du.ke1@gmail.com"">off.ice..du.ke1@gmail.com</a>
<a href=""mailto:of.f.ice..du.ke.1@gmail.com"">of.f.ice..du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fic.e.d.u.ke.1@gmail.com"">o.f.fic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:off.ic.e...duke.1@gmail.com"">off.ic.e...duke.1@gmail.com</a>
<a href=""mailto:off.ice...du.k.e1@gmail.com"">off.ice...du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..du.k.e.1@gmail.com"">o.f.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.d.uk.e1@gmail.com"">o.f.f.ic.e.d.uk.e1@gmail.com</a>
<a href=""mailto:of.f.ice...d.uk.e1@gmail.com"">of.f.ice...d.uk.e1@gmail.com</a>
<a href=""mailto:of.f.i.ce...du.ke.1@gmail.com"">of.f.i.ce...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e.duk.e1@gmail.com"">o.f.f.i.c.e.duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice...duke.1@gmail.com"">o.f.f.ice...duke.1@gmail.com</a>
<a href=""mailto:o.ffic.e..duk.e.1@gmail.com"">o.ffic.e..duk.e.1@gmail.com</a>
<a href=""mailto:of.fice..duk.e1@gmail.com"">of.fice..duk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..d.u.k.e.1@gmail.com"">o.ff.i.ce..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.d.u.ke1@gmail.com"">o.f.f.ic.e.d.u.ke1@gmail.com</a>
<a href=""mailto:o.ffi.ce..duk.e.1@gmail.com"">o.ffi.ce..duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.ice...du.k.e1@gmail.com"">o.ff.ice...du.k.e1@gmail.com</a>
<a href=""mailto:off.ic.e..duke.1@gmail.com"">off.ic.e..duke.1@gmail.com</a>
<a href=""mailto:of.fic.e..duk.e.1@gmail.com"">of.fic.e..duk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.duk.e1@gmail.com"">o.f.f.i.ce.duk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...duk.e.1@gmail.com"">o.f.fi.ce...duk.e.1@gmail.com</a>
<a href=""mailto:off.ice..d.uke1@gmail.com"">off.ice..d.uke1@gmail.com</a>
<a href=""mailto:o.f.fice.d.u.k.e.1@gmail.com"">o.f.fice.d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e.duk.e.1@gmail.com"">of.f.ic.e.duk.e.1@gmail.com</a>
<a href=""mailto:of.f.i.c.e..d.u.k.e1@gmail.com"">of.f.i.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:of.f.ice..d.uk.e1@gmail.com"">of.f.ice..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.ce..d.u.ke1@gmail.com"">offi.ce..d.u.ke1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..d.uke1@gmail.com"">o.ff.i.c.e..d.uke1@gmail.com</a>
<a href=""mailto:of.f.i.c.e...d.u.ke.1@gmail.com"">of.f.i.c.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:o.ff.ice..duke1@gmail.com"">o.ff.ice..duke1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uk.e.1@gmail.com"">o.ffi.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:off.ic.e..d.uk.e1@gmail.com"">off.ic.e..d.uk.e1@gmail.com</a>
<a href=""mailto:off.i.c.e...d.uke1@gmail.com"">off.i.c.e...d.uke1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.u.ke.1@gmail.com"">o.ffic.e..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.ice.d.uke.1@gmail.com"">of.f.ice.d.uke.1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.uke1@gmail.com"">o.f.fi.ce..d.uke1@gmail.com</a>
<a href=""mailto:o.ffi.c.e.du.ke1@gmail.com"">o.ffi.c.e.du.ke1@gmail.com</a>
<a href=""mailto:offi.c.e...duke.1@gmail.com"">offi.c.e...duke.1@gmail.com</a>
<a href=""mailto:o.ffice..d.uk.e.1@gmail.com"">o.ffice..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffic.e..du.ke.1@gmail.com"">o.ffic.e..du.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.k.e.1@gmail.com"">of.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e.du.k.e1@gmail.com"">o.f.fi.c.e.du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.uk.e1@gmail.com"">o.f.fi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:office..d.uk.e1@gmail.com"">office..d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice...d.uke1@gmail.com"">o.f.f.ice...d.uke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.du.k.e1@gmail.com"">o.ff.ic.e.du.k.e1@gmail.com</a>
<a href=""mailto:o.f.fice...d.uke1@gmail.com"">o.f.fice...d.uke1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...duk.e.1@gmail.com"">o.f.fi.c.e...duk.e.1@gmail.com</a>
<a href=""mailto:offi.ce...du.ke.1@gmail.com"">offi.ce...du.ke.1@gmail.com</a>
<a href=""mailto:off.ic.e.d.u.k.e1@gmail.com"">off.ic.e.d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..d.uk.e1@gmail.com"">o.f.f.i.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..duk.e1@gmail.com"">o.ff.i.ce..duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.u.k.e1@gmail.com"">o.ffi.ce..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce..d.u.ke.1@gmail.com"">o.f.fi.ce..d.u.ke.1@gmail.com</a>
<a href=""mailto:off.i.c.e...du.ke1@gmail.com"">off.i.c.e...du.ke1@gmail.com</a>
<a href=""mailto:off.i.c.e.duke.1@gmail.com"">off.i.c.e.duke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e..d.uk.e1@gmail.com"">o.ffi.c.e..d.uk.e1@gmail.com</a>
<a href=""mailto:off.i.c.e..du.k.e1@gmail.com"">off.i.c.e..du.k.e1@gmail.com</a>
<a href=""mailto:of.f.ice...du.ke.1@gmail.com"">of.f.ice...du.ke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e..d.u.k.e1@gmail.com"">o.ffi.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.f.f.ice..d.u.k.e.1@gmail.com"">o.f.f.ice..d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e...d.uk.e.1@gmail.com"">of.f.ic.e...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffice...du.ke1@gmail.com"">o.ffice...du.ke1@gmail.com</a>
<a href=""mailto:of.f.i.ce..du.k.e.1@gmail.com"">of.f.i.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:offic.e.d.u.ke.1@gmail.com"">offic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..d.uke.1@gmail.com"">of.fi.ce..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice...du.ke1@gmail.com"">o.f.f.ice...du.ke1@gmail.com</a>
<a href=""mailto:offic.e..du.ke1@gmail.com"">offic.e..du.ke1@gmail.com</a>
<a href=""mailto:of.fic.e.d.u.ke.1@gmail.com"">of.fic.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce..d.uke1@gmail.com"">of.fi.ce..d.uke1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..duke1@gmail.com"">o.f.f.i.c.e..duke1@gmail.com</a>
<a href=""mailto:off.ice...d.u.ke.1@gmail.com"">off.ice...d.u.ke.1@gmail.com</a>
<a href=""mailto:off.i.ce..duke.1@gmail.com"">off.i.ce..duke.1@gmail.com</a>
<a href=""mailto:of.fice.d.u.ke.1@gmail.com"">of.fice.d.u.ke.1@gmail.com</a>
<a href=""mailto:o.ffic.e...duke1@gmail.com"">o.ffic.e...duke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..du.k.e.1@gmail.com"">o.ff.ic.e..du.k.e.1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.ke.1@gmail.com"">of.fi.ce..du.ke.1@gmail.com</a>
<a href=""mailto:of.fice..d.uke.1@gmail.com"">of.fice..d.uke.1@gmail.com</a>
<a href=""mailto:of.fic.e.duke1@gmail.com"">of.fic.e.duke1@gmail.com</a>
<a href=""mailto:offi.ce...du.k.e1@gmail.com"">offi.ce...du.k.e1@gmail.com</a>
<a href=""mailto:of.fi.ce..du.k.e.1@gmail.com"">of.fi.ce..du.k.e.1@gmail.com</a>
<a href=""mailto:off.ic.e..duk.e1@gmail.com"">off.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:off.ic.e...d.u.ke.1@gmail.com"">off.ic.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:off.ice..duk.e.1@gmail.com"">off.ice..duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..duk.e1@gmail.com"">o.ff.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.du.ke.1@gmail.com"">o.ff.ic.e.du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..du.ke.1@gmail.com"">o.f.f.i.c.e..du.ke.1@gmail.com</a>
<a href=""mailto:off.i.ce..d.u.k.e1@gmail.com"">off.i.ce..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce.d.u.ke.1@gmail.com"">o.ff.i.ce.d.u.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.uke1@gmail.com"">o.f.f.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uke.1@gmail.com"">offi.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce.duk.e.1@gmail.com"">of.f.i.ce.duk.e.1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..duke.1@gmail.com"">o.ff.i.c.e..duke.1@gmail.com</a>
<a href=""mailto:o.f.fice..du.ke1@gmail.com"">o.f.fice..du.ke1@gmail.com</a>
<a href=""mailto:office.duke1@gmail.com"">office.duke1@gmail.com</a>
<a href=""mailto:of.fice.d.uk.e.1@gmail.com"">of.fice.d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ice.d.u.ke1@gmail.com"">o.f.f.ice.d.u.ke1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.uk.e.1@gmail.com"">o.f.f.ic.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uk.e1@gmail.com"">o.ffi.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.ce..d.uk.e.1@gmail.com"">offi.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e.du.ke1@gmail.com"">o.f.f.ic.e.du.ke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e.d.uke.1@gmail.com"">o.ff.ic.e.d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ice..d.uke1@gmail.com"">of.f.ice..d.uke1@gmail.com</a>
<a href=""mailto:office.d.uke1@gmail.com"">office.d.uke1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uk.e.1@gmail.com"">offi.c.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.ffice.d.u.k.e.1@gmail.com"">o.ffice.d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..d.uke.1@gmail.com"">of.f.ic.e..d.uke.1@gmail.com</a>
<a href=""mailto:o.ffic.e.d.uke.1@gmail.com"">o.ffic.e.d.uke.1@gmail.com</a>
<a href=""mailto:of.fice..d.uke.1@gmail.com"">of.fice..d.uke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.d.uke1@gmail.com"">o.f.f.i.ce.d.uke1@gmail.com</a>
<a href=""mailto:of.f.i.ce..d.u.k.e.1@gmail.com"">of.f.i.ce..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..d.uk.e.1@gmail.com"">o.f.f.ice..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fic.e.d.uke1@gmail.com"">o.f.fic.e.d.uke1@gmail.com</a>
<a href=""mailto:of.fi.c.e...du.ke.1@gmail.com"">of.fi.c.e...du.ke.1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..duke.1@gmail.com"">o.ff.i.ce..duke.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..d.u.ke.1@gmail.com"">o.f.f.i.ce..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce..d.uk.e1@gmail.com"">of.f.i.ce..d.uk.e1@gmail.com</a>
<a href=""mailto:offi.c.e...d.u.ke1@gmail.com"">offi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:offic.e..d.u.k.e.1@gmail.com"">offic.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:of.f.ice...d.uk.e.1@gmail.com"">of.f.ice...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e...du.k.e.1@gmail.com"">o.f.f.ic.e...du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...du.ke.1@gmail.com"">o.f.fi.c.e...du.ke.1@gmail.com</a>
<a href=""mailto:of.fi.ce...duk.e1@gmail.com"">of.fi.ce...duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce...d.u.ke.1@gmail.com"">o.ffi.ce...d.u.ke.1@gmail.com</a>
<a href=""mailto:office.du.ke.1@gmail.com"">office.du.ke.1@gmail.com</a>
<a href=""mailto:o.f.fic.e..duke1@gmail.com"">o.f.fic.e..duke1@gmail.com</a>
<a href=""mailto:off.i.c.e..d.uke1@gmail.com"">off.i.c.e..d.uke1@gmail.com</a>
<a href=""mailto:of.f.ic.e..duk.e1@gmail.com"">of.f.ic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.ffi.ce..duk.e.1@gmail.com"">o.ffi.ce..duk.e.1@gmail.com</a>
<a href=""mailto:of.f.i.c.e.d.uk.e1@gmail.com"">of.f.i.c.e.d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.fice...du.ke.1@gmail.com"">o.f.fice...du.ke.1@gmail.com</a>
<a href=""mailto:offi.c.e..d.uke.1@gmail.com"">offi.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..duke1@gmail.com"">of.f.ic.e..duke1@gmail.com</a>
<a href=""mailto:of.fi.ce.d.u.k.e1@gmail.com"">of.fi.ce.d.u.k.e1@gmail.com</a>
<a href=""mailto:of.fice...duke1@gmail.com"">of.fice...duke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.u.k.e.1@gmail.com"">o.f.fi.ce...d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e...duk.e.1@gmail.com"">off.i.c.e...duk.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e..duk.e1@gmail.com"">off.i.c.e..duk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.ce.d.uk.e1@gmail.com"">o.f.fi.ce.d.uk.e1@gmail.com</a>
<a href=""mailto:of.fi.c.e..d.u.ke.1@gmail.com"">of.fi.c.e..d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.i.ce..du.ke1@gmail.com"">of.f.i.ce..du.ke1@gmail.com</a>
<a href=""mailto:o.f.f.i.c.e..d.u.k.e.1@gmail.com"">o.f.f.i.c.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce.d.uke.1@gmail.com"">o.f.f.i.ce.d.uke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e..d.uk.e.1@gmail.com"">of.f.ic.e..d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fic.e..duk.e1@gmail.com"">o.f.fic.e..duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..duke1@gmail.com"">o.f.f.ic.e..duke1@gmail.com</a>
<a href=""mailto:off.ice.duk.e1@gmail.com"">off.ice.duk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e...d.u.k.e.1@gmail.com"">o.ffic.e...d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.ffi.ce..d.uke.1@gmail.com"">o.ffi.ce..d.uke.1@gmail.com</a>
<a href=""mailto:o.ffi.ce.duk.e1@gmail.com"">o.ffi.ce.duk.e1@gmail.com</a>
<a href=""mailto:o.f.f.i.ce..duk.e.1@gmail.com"">o.f.f.i.ce..duk.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e..duk.e.1@gmail.com"">o.f.fi.c.e..duk.e.1@gmail.com</a>
<a href=""mailto:of.fi.c.e...d.u.ke1@gmail.com"">of.fi.c.e...d.u.ke1@gmail.com</a>
<a href=""mailto:offic.e...duke1@gmail.com"">offic.e...duke1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...du.ke.1@gmail.com"">o.f.fi.ce...du.ke.1@gmail.com</a>
<a href=""mailto:o.f.f.ice..duk.e1@gmail.com"">o.f.f.ice..duk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e..d.uk.e1@gmail.com"">o.ffic.e..d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce...du.ke1@gmail.com"">o.ff.i.ce...du.ke1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..d.u.k.e1@gmail.com"">o.ff.i.c.e..d.u.k.e1@gmail.com</a>
<a href=""mailto:o.ff.i.c.e..du.ke1@gmail.com"">o.ff.i.c.e..du.ke1@gmail.com</a>
<a href=""mailto:offic.e...d.u.ke.1@gmail.com"">offic.e...d.u.ke.1@gmail.com</a>
<a href=""mailto:of.fi.c.e..du.ke1@gmail.com"">of.fi.c.e..du.ke1@gmail.com</a>
<a href=""mailto:off.i.ce...du.ke1@gmail.com"">off.i.ce...du.ke1@gmail.com</a>
<a href=""mailto:office.d.u.k.e.1@gmail.com"">office.d.u.k.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.ce...d.uke1@gmail.com"">o.f.fi.ce...d.uke1@gmail.com</a>
<a href=""mailto:off.ic.e..d.uke1@gmail.com"">off.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:o.ff.ic.e..d.uke1@gmail.com"">o.ff.ic.e..d.uke1@gmail.com</a>
<a href=""mailto:o.f.f.ice...d.u.k.e1@gmail.com"">o.f.f.ice...d.u.k.e1@gmail.com</a>
<a href=""mailto:of.fi.c.e...d.uk.e1@gmail.com"">of.fi.c.e...d.uk.e1@gmail.com</a>
<a href=""mailto:o.ff.i.ce..d.uk.e.1@gmail.com"">o.ff.i.ce..d.uk.e.1@gmail.com</a>
<a href=""mailto:of.f.ic.e.d.uke.1@gmail.com"">of.f.ic.e.d.uke.1@gmail.com</a>
<a href=""mailto:o.ffi.c.e.d.u.ke.1@gmail.com"">o.ffi.c.e.d.u.ke.1@gmail.com</a>
<a href=""mailto:of.f.ic.e...d.uk.e1@gmail.com"">of.f.ic.e...d.uk.e1@gmail.com</a>
<a href=""mailto:o.ffic.e..duke1@gmail.com"">o.ffic.e..duke1@gmail.com</a>
<a href=""mailto:o.ffice...d.u.ke1@gmail.com"">o.ffice...d.u.ke1@gmail.com</a>
<a href=""mailto:of.fic.e..duk.e1@gmail.com"">of.fic.e..duk.e1@gmail.com</a>
<a href=""mailto:off.i.ce...d.uk.e1@gmail.com"">off.i.ce...d.uk.e1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...d.uk.e.1@gmail.com"">o.f.fi.c.e...d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fi.c.e...du.k.e.1@gmail.com"">o.f.fi.c.e...du.k.e.1@gmail.com</a>
<a href=""mailto:o.f.f.ic.e..d.u.k.e.1@gmail.com"">o.f.f.ic.e..d.u.k.e.1@gmail.com</a>
<a href=""mailto:off.i.c.e..d.uke.1@gmail.com"">off.i.c.e..d.uke.1@gmail.com</a>
<a href=""mailto:offi.ce.d.uk.e.1@gmail.com"">offi.ce.d.uk.e.1@gmail.com</a>
<a href=""mailto:o.f.fice.duke1@gmail.com"">o.f.fice.duke1@gmail.com</a>
<a href=""mailto:o.ffic.e..duke1@gmail.com"">o.ffic.e..duke1@gmail.com</a>"
PkNccdTp,Untitled,yarin0600,C++,Wednesday 15th of November 2023 01:51:32 PM CDT,"// Find the index of first 1 in a sorted array of 0’s and 1’s

/**
 * Given a sorted array consisting 0’s and 1’s. The problem is to find the index of first ‘1’ in the sorted array.
 * It could be possible that the array consists of only 0’s or only 1’s. If 1’s are not present in the array then print “-1”.
 *
 * Examples:
 *    Input : arr[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1}
 *    Output : 6
 *    Explanation: The index of first 1 in the array is 6.

 *    Input : arr[] = {0, 0, 0, 0}
 *    Output : -1
 *    Explanation: 1’s are not present in the array.
 *
 * Source: Asked in Amazon Interview
 */

#include <iostream>
#include <chrono>

int firstIdxOfFirstOne(int *arr, int n);
int firstIdxOfFirstOne2(int *arr, int n);

int main()
{
   int arr[1000000]{};
   arr[999999] = 1;

   int n = sizeof(arr) / sizeof(*arr);
   auto start = std::chrono::steady_clock::now();
   printf(""%d\n"", firstIdxOfFirstOne(arr, n));
   // printf(""%d\n"", firstIdxOfFirstOne2(arr, n));
   auto end = std::chrono::steady_clock::now();
   auto totalDuration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
   std::cout << ""Operation took: "" << totalDuration << "" miliseconds\n"";
}

int firstIdxOfFirstOne(int *arr, int n)
{
   if (arr[0] == 1)
      return 0;

   int i = 1;
   for (; i < n && arr[i] == 0; i *= 2)
   {
   }

   int left = (i / 2) + 1;
   int right = i >= n ? n - 1 : i;
   int middle = -1;
   while (left <= right)
   {
      middle = (right - left) / 2 + left;
      if (arr[middle] == 1 && arr[middle - 1] == 0)
         return middle;
      else if (arr[middle] == 0)
         left = middle + 1;
      else
         right = middle - 1;
   }
   return -1;
}

int firstIdxOfFirstOne2(int *arr, int n)
{
   if (arr[0] == 1)
      return 0;

   int left = 0;
   int right = n - 1;
   int middle = -1;

   while (left <= right)
   {
      middle = (right - left) / 2 + left;
      if (arr[middle] == 1 && arr[middle - 1] == 0)
         return middle;
      else if (arr[middle] == 0)
         left = middle + 1;
      else
         right = middle - 1;
   }
   return -1;
}

/*
if (arr[0] == 1)
      return 0;

   int left, right, mid;
   left = 0, right = n - 1;
   while (left <= right)
   {
      mid = (right - left) / 2 + left;

      if (arr[mid] == 1 && arr[mid - 1] == 0)
         return mid;
      else if (arr[mid] == 0)
         left = mid + 1;
      else
         right = mid - 1;
   }
   return -1;

*/
"
jBy5n37w,Untitled,yarin0600,MySQL,Wednesday 15th of November 2023 12:44:44 PM CDT,"User(UserCode int, first_name varchar(256), last_name varchar(256), last_login_date (date), password varchar(256));
UserHistLogin (UserCode int, 


CREATE TABLE Users(
		UserCode int PRIMARY KEY,
		first_name varchar(255),
		last_name varchar(255),
		last_login_date DATETIME,
		password varchar(255)
	);

CREATE TABLE UserHistLogin(
    UserCode int,
    LoginDate DATETIME,
    LoginStatus int,
    PRIMARY KEY (UserCode, LoginDate),
    FOREIGN KEY (UserCode) REFERENCES Users(UserCode)
);

-- Insert dummy data into Users table
INSERT INTO Users (UserCode, first_name, last_name, last_login_date, password)
VALUES
(1, 'John', 'Doe', '2023-11-15 10:00:00', 'password123'),
(2, 'Jane', 'Smith', '2023-11-14 15:30:00', 'securepass'),
(3, 'Alice', 'Johnson', '2023-11-13 08:45:00', 'letmein');

-- Insert dummy data into UserHistLogin table
INSERT INTO UserHistLogin (UserCode, LoginDate, LoginStatus)
VALUES
(1, '2023-11-15 10:00:00', 1), -- Successful login
(1, '2023-11-14 09:30:00', 0), -- Failed login
(2, '2023-11-14 15:30:00', 1), -- Successful login
(3, '2023-11-13 08:45:00', 1); -- Successful login


Assumption: UserCode is int and not string:


SELECT *
FROM Users
JOIN UserHistLogin
ON Users.UserCode
WHERE LoginStatus = 1 AND Users.UserCode = ""SHAIJA""
ORDER BY LoginDate DESC
LIMIT 1;


SELECT first_name, last_name
FROM Users
WHERE UserCode IN (
    SELECT UserCode
    FROM UserHistLogin
    WHERE login_status = 0
		AND DATE(login_date) = CURRENT_DATE
    GROUP BY UserCode
    HAVING COUNT(*) >= 3
);
"
ABuCpvib,my_lib.h,valenki13,C++,Wednesday 15th of November 2023 12:43:48 PM CDT,"// my_lib.h
#pragma once

#include <iostream>

template<class Type>
int dsize(Type* a) {
	if (a)
		return _msize(a) / sizeof(Type);
	else
		return 0;
}

template<class Type>
void show_arr(int sz, Type* arr, char ch = ' ') {
	for (int k = 0; k < sz; ++k)
		std::cout << arr[k] << ch;
	std::cout << std::endl;
}

template <class Type>
bool append(Type*& arr, Type val) {
	if (arr) {
		auto buff = new Type[dsize(arr) + 1];
		for (int k = 0; k < dsize(arr); ++k)
			buff[k] = arr[k];
		buff[dsize(arr)] = val;
		delete[] arr;
		arr = buff;
		return true;
	}
	else {
		return false;
	}
}

template<class Type>
bool insert(Type*& arr, int id, Type val) {
	if (arr && dsize(arr) > id) {
		auto buff = new Type[dsize(arr) + 1];
		for (int k = 0; k < id; ++k)
			buff[k] = arr[k];
		buff[id] = val;
		for (int k = id; k < dsize(arr); k++)
			buff[k + 1] = arr[k];
		//show_arr(dsize(buff), buff);
		delete[] arr;
		arr = buff;
		return true;
	}
	else {
		return false;
	}
}

template<class Type>
void myswap(Type& a, Type& b) {
	Type t = a;
	a = b;
	b = t;
}

template<class Type>
void shuffle(Type* arr) {
	int sz = dsize(arr);
	for (int k = 0; k < 100; k++)
		myswap(arr[rand() % sz],
			arr[rand() % sz]
		);
}

template <class Type>
int get_min(int size, Type* arr) {
	Type min_val = arr[0];
	int min_id = 0;
	for (int k = 1; k < size; k++) {
		if (min_val > arr[k]) {
			min_val = arr[k];
			min_id = k;
		}
	}
	return min_id;
}

template <class Type>
void select_sort(int size, Type* arr) {
	for (int k = 0; k < size; k++) {
		myswap(arr[k],
			arr[get_min(size - k, arr + k) + k]);
	}
}

template <class Type>
void bubble_sort(int size, Type* arr) {
	int iter = 0;
	for (int w = 0; w < size; w++) {
		//cout << ""---- Walk "" << w + 1 
		//	<< "" ----"" << endl;
		bool is_sort = true;
		for (int k = 0; k < size - 1 - w; k++) {
			if (arr[k] < arr[k + 1]) {
				myswap(arr[k], arr[k + 1]);
				is_sort = false;
			}
			/*cout << iter++ << "" : ""
				 << is_sort << "" : "";
			show_arr(size, arr);*/
		}
		if (is_sort)
			return;
	}
}

template<class Type>
void spec_show(int begin, int end, Type* arr) {
	for (int k = begin; k < end; k++) {
		std::cout << arr[k] << "" "";
	}
}

template<class Type>
void isert_sort(int size, Type* arr) {
	int iter = 0;
	for (int w = 1; w < size; w++) {
		int k, t = arr[w];
		for (k = w - 1; k >= 0 && arr[k] < t; k--) {
			arr[k + 1] = arr[k];
			//std::cout << iter++ << "" "" << t << "" : "";
			//spec_show(0, k, arr);
			//std::cout << ""("" << t << "") "";
			//spec_show(k+1, size, arr);
			//cout << std::endl;
		}
		arr[k + 1] = t;
	}
}


void discrete_sort(int size, int* arr) {
	// array values are from 0 to 10
	int baskets[10]{};
	for (int k = 0; k < size; k++) {
		baskets[arr[k]]++;
	}
	int n = 0;
	for (int k = 0; k < std::size(baskets); k++) {
		while (baskets[k] > 0) {
			arr[n] = k;
			baskets[k]--;
			n++;
		}
	}
}"
20cbVTYB,lesson_151123,valenki13,C++,Wednesday 15th of November 2023 12:43:18 PM CDT,"#include <iostream>
#include ""my_lib.h""

#include <chrono>

// pastebin.com/WCDKQ7Fd
using namespace std;



void test_sort() {
	srand(time(NULL));
	
	int a[100000];
	for (int k = 0; k < size(a); k++) {
		a[k] = rand() % 10000;
	}
	int sz = (int)size(a);
	cout << ""Before: "";
	//show_arr(sz, a);
	
	auto start_time = std::chrono::high_resolution_clock::now();

	isert_sort(sz, a);

	auto end_time = std::chrono::high_resolution_clock::now();
	std::chrono::duration<double> time = end_time - start_time;
	cout << time.count() << "" s to run.\n"";


	cout << ""After : "";
	//show_arr(sz, a);
}

int main() {
	test_sort();
	return 0;
}"
mJvKiWcj,Untitled,Nenogzar,Python,Wednesday 15th of November 2023 12:37:18 PM CDT,"lines = [input().split() for _ in range(3)]
first_player_win = None

for player in ['1', '2']:
    if (any(all(cell == player for cell in line) for line in lines)
            or any(all(line[i] == player for line in lines) for i in range(3))):
        first_player_win = (player == '1')
        break

# Check diagonals for both players
for player in ['1', '2']:
    if (all(lines[i][i] == player for i in range(3))
            or all(lines[i][2 - i] == player for i in range(3))):
        first_player_win = (player == '1')
        break

if first_player_win is None:
    print(""Draw!"")
elif first_player_win:
    print(""First player won"")
else:
    print(""Second player won"")"
F1xZhq5t,Untitled,dllbridge,C,Wednesday 15th of November 2023 12:35:10 PM CDT,"






#include <stdio.h>

///////////////////////////////////////////////////
struct TT
{
	
	int nYear;
	
	float  fH;

}Dima, s[44];



///////////////////////////////////////////////////
int main()
{
	
	

	
	Dima.nYear = 1973 ;
	Dima.fH    = 184.7;
	    
//	printf(""size of Dima = %d\n"", sizeof(Dima));
	
	printf(""nYear = %d, fH = %.2f\n"", Dima.nYear, Dima.fH);  
}





























/*
#include <stdio.h>



///////////////////////////////////////////////////
int main()
{
	
	double h = 1.00,
	       s = 0.01,
	       t       ;
	
	for (int i = 0; i < 365; i++)
	{

		printf(""day %d  - "", i);
		t = h * s;
		h = t + h;
		printf(""%.2f\n"", h);
	
	}

}


*/




















/*

#include <stdio.h>


	
void foo(int*);	
   



////////////////////////////////////////////////////////
int main()
{
    
	int n = 77;
       
    printf(""        n = %d\n  "",   n );       
	printf(""address n = %d\n\n"",  &n ); 	
	
	foo(&n);  
	
    printf(""        n = %d\n"",     n );       
	printf(""address n = %d\n"",    &n );	
}






/////////////////////////////////////////////////////	
void foo(int *p)
{
	
	int &n = *p;
	
	n = n - 20;
    printf(""        n2 = %d\n  "",   n );       
	printf(""address n2 = %d\n\n"",   p );			
			
}


*/



*/"
7aKs1H0r,"Lab_5(linux bash, recursive search)",anticlown,Bash,Wednesday 15th of November 2023 12:33:52 PM CDT,"#!/bin/bash
 
 # Проверка правильности ввода из командной строки
 checkIsCorrectInput() {
	if [ $1 -ne 3 ]; then
		echo ""Введено неверное количество аргументов!""
		echo ""Формат ввода: $0 <каталог> <глубина вложенности> <файл вывода>""
		echo ""Глубина вложенности: 1 - файлы начального каталога, 2 - файлы подкаталогов и т.д.""
		echo ""Повторите запуск программы!""
		exit 1
	fi
 }
 
# Процедура для вывода текста условия
printProblemStatement() {
	echo -e ""\nДанная программа обходит заданный каталог и его подкаталоги до заданной глубины,\n\t затем выводит общее число каталогов на консоль, а подробный отчет в указанный файл""
} 

# Процедура вывода результатов поиска
printSearchResults() {
	echo -e ""\nОбщее количество папок: $countAllDirs""
} 
 
# Функция для рекурсивного поиска каталогов в каталоге
searchInDirectory() {
	local dirFiles=""$1""
	local depth=""$2""
	local innerDirCount=0
	local innerFileCount=0
	
    for file in $dirFiles/*
	do
		if [ -d ""$file"" ]; then
			echo ""$file"" >> $outputFile
			
			local nextDepth=$(($depth - 1))
			if [ $depth -ge 1 ]; then
				searchInDirectory $file $nextDepth	
			fi
			
			let ""countAllDirs=countAllDirs + 1""
			let ""innerDirCount=innerDirCount + 1""
		fi
		if [ -f ""$file"" ]; then
			let ""innerFileCount=innerFileCount + 1""
		fi
	done
	echo -e ""Количество вложенных каталогов в каталог $dirFiles: $innerDirCount"" >> $outputFile
	echo -e ""Количество вложенных файлов в каталог $dirFiles: $innerFileCount\n\n"" >> $outputFile
}
 
											######################################### 
											# 		Начало выполнения программы 	#
											#########################################
checkIsCorrectInput $# # проверяем, верное ли количество аргументов
> $3 #очищаем файл перед записью

countAllDirs=0
outputFile=$3 

printProblemStatement
searchInDirectory $1 $2
printSearchResults
"
w0zDAe6J,Untitled,yarin0600,Bash,Wednesday 15th of November 2023 12:31:41 PM CDT,"{
   ""version"": ""2.0.0"",
   ""tasks"": [
     {
       ""label"": ""Compile Selected CPP File"",
       ""type"": ""shell"",
       ""command"": ""g++"",
       ""args"": [],
       ""presentation"": {
         ""echo"": true,
         ""reveal"": ""always"",
         ""focus"": true,
         ""panel"": ""shared""
       },
       ""group"": {
         ""kind"": ""build"",
         ""isDefault"": true
       },
       ""dependsOn"": ""listCppFiles""
     },
     {
       ""label"": ""List CPP Files"",
       ""type"": ""shell"",
       ""command"": ""bash"",
       ""args"": [
         ""-c"",
         ""ls -1 ${workspaceFolder}/**/*.cpp""
       ],
       ""problemMatcher"": [],
       ""group"": {
         ""kind"": ""build"",
         ""isDefault"": true
       },
       ""identifier"": ""listCppFiles""
     }
   ]
 }
 "
E18t45L8,Untitled,Nenogzar,Python,Wednesday 15th of November 2023 12:28:47 PM CDT,"matrix = []

for run in range(3):
    list_app = list(map(int, input().split()))
    matrix.append(list_app)

first_player = False
second_player = False

# Check for rows and columns
for i in range(3):
    # Rows
    if matrix[i][0] == matrix[i][1] == matrix[i][2] != 0:
        if matrix[i][0] == 1:
            first_player = True
        elif matrix[i][0] == 2:
            second_player = True

    # Columns
    if matrix[0][i] == matrix[1][i] == matrix[2][i] != 0:
        if matrix[0][i] == 1:
            first_player = True
        elif matrix[0][i] == 2:
            second_player = True

# Check diagonals
if matrix[0][0] == matrix[1][1] == matrix[2][2] != 0:
    if matrix[0][0] == 1:
        first_player = True
    elif matrix[0][0] == 2:
        second_player = True

if matrix[0][2] == matrix[1][1] == matrix[2][0] != 0:
    if matrix[0][2] == 1:
        first_player = True
    elif matrix[0][2] == 2:
        second_player = True

# Determine the winner or draw
if first_player:
    print(""First player won"")
elif second_player:
    print(""Second player won"")
else:
    print(""Draw!"")
    
###########################################*-*FROM*CEO*-*###########################################

# field = []
#
# first_player_win = False
# second_player_win = False
# draw = False
# #  drawing the game field in separate lists
# for field_row in range(3):
#     current_row = input().split()
#     field.append(current_row)
# #  checking each row to see if there is a winner in the row
# for row in range(3):
#     if field[row][0] == field[row][1] == field[row][2] != ""0"":
#         if field[row][0] == field[row][1] == field[row][2] == ""1"":
#             first_player_win = True
#         elif field[row][0] == field[row][1] == field[row][2] == ""2"":
#             second_player_win = True
# #  checking each column to see if there is a winner in the column
# for col in range(3):
#     if field[0][col] == field[1][col] == field[2][col] != ""0"":
#         if field[0][col] == field[1][col] == field[2][col] == ""1"":
#             first_player_win = True
#         elif field[0][col] == field[1][col] == field[2][col] == ""2"":
#             second_player_win = True
# #  checking left diagonal if there is a winner
# if field[0][0] == field[1][1] == field[2][2] != ""0"":
#     if field[0][0] == field[1][1] == field[2][2] == ""1"":
#         first_player_win = True
#     elif field[0][0] == field[0][1] == field[2][2] == ""2"":
#         second_player_win = True
# #  checking right diagonal if there is a winner
# elif field[0][2] == field[1][1] == field[2][0] != ""0"":
#     if field[0][2] == field[1][1] == field[2][0] == ""1"":
#         first_player_win = True
#     elif field[0][2] == field[1][1] == field[2][0] == ""2"":
#         second_player_win = True
# # if there is no winner found the game is a draw
# if not first_player_win and not second_player_win:
#     draw = True
#
# if first_player_win:
#     print(""First player won"")
# elif second_player_win:
#     print(""Second player won"")
# elif draw:
#     print(""Draw!"")"
JwjaMVN2,Untitled,Josif_tepe,C++,Wednesday 15th of November 2023 12:00:38 PM CDT,"#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    
    int sum = n * (n + 1) / 2;
    
    cout << sum << endl;
    return 0;
}


"
pzg6f7Fc,Connection String Tester,BrainSlugs83,C#,Wednesday 15th of November 2023 11:42:39 AM CDT,"// <PackageReference Include=""Microsoft.CrmSdk.CoreAssemblies"" Version=""9.0.2.42"" />
// <PackageReference Include=""Microsoft.CrmSdk.CoreTools"" Version=""9.1.0.92"" />
// <PackageReference Include=""Microsoft.CrmSdk.XrmTooling.CoreAssembly"" Version=""9.1.0.92"" />
// <PackageReference Include=""Microsoft.PowerPlatform.Dataverse.Client"" Version=""1.0.9"" />

public static void Main()
{
    while (true)
    {
        Console.Write(""Please enter your URL.\r\n> "");
        var url = Console.ReadLine();

        Console.Write(""Please enter your App Id.\r\n> "");
        var appId = Console.ReadLine();

        Console.Write(""Please enter your client secret.\r\n> "");
        var clientSecret = Console.ReadLine();

        string cxnStr =
            $""Url={url};"" +
            ""AuthType=ClientSecret;"" +
            $""AppId={appId};"" +
            $""ClientSecret={clientSecret};"" +
            ""LoginPrompt=Never;"";

        Console.WriteLine();
        Console.WriteLine();

        try
        {
            var client = new CrmServiceClient(cxnStr);
            if (!client.IsReady) { throw new InvalidOperationException(""Connection failed.""); }

            Console.ForegroundColor = ConsoleColor.White;
            Console.BackgroundColor = ConsoleColor.DarkGreen;
            Console.WriteLine(""Connection Succeeded!"");
            Console.ResetColor();
            Console.WriteLine();
            Console.WriteLine(""Org (Friendly) Name: "" + client.ConnectedOrgFriendlyName);
            Console.WriteLine(""Org (Unique) Name: "" + client.ConnectedOrgUniqueName);
            Console.WriteLine(""Tenant Id: "" + client.TenantId);
            Console.WriteLine(""CRM URI: "" + client.CrmConnectOrgUriActual);
            Console.WriteLine(""Environment Id: "" + client.EnvironmentId);
        }
        catch(Exception ex)
        {
            Console.ForegroundColor = ConsoleColor.White;
            Console.BackgroundColor = ConsoleColor.DarkRed;
            Console.WriteLine(ex.Message);
            Console.ResetColor();
        }
        Console.WriteLine();
        Console.WriteLine(string.Empty.PadRight(40, '='));
        Console.WriteLine();
        Console.WriteLine();
    }
}"
ANtfxNhG,Untitled,Josif_tepe,C++,Wednesday 15th of November 2023 11:41:04 AM CDT,"#include <iostream>
using namespace std;

int main(){
    int c, b;
    cin >> c >> b;
    
    char znak;
    cin >> znak;
    
    if(znak == '+') {
        cout << c + b << endl;
    }
    else if(znak == '-') {
        cout << c - b << endl;
    }
    else if(znak == '*') {
        cout << c * b << endl;
    }
    else if(znak == '/') {
        cout << c / b << endl;
    }
    return 0;
}


"
107cghuX,waaaaaa zadacha,trafffer,JavaScript,Wednesday 15th of November 2023 11:40:35 AM CDT,"function specNum(input){
    let inputNum = Number(input[0]);
    
    let printLine = """";
    
    for(let currNum = 1111; currNum <= 9999; currNum++){
        
        let numAsString = String(currNum);
        let evenSum = 0;

        for(let index = 0; index < numAsString.length; index++){
            let currDigit = Number(numAsString[index]);

            if(inputNum % currDigit === 0){
                evenSum ++;
                
            }
        }

        if (evenSum == numAsString.length){
            printLine += `${currNum} `;
        }
    }
    console.log(printLine);
}"
