id,title,username,language,date,content
cW2dTxZ7,Untitled,Maliuga,Python,Saturday 2nd of December 2023 12:01:58 PM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    return process


def start_pref(pid):
    #pref_proc = subprocess.Popen(shlex.split('sudo perf record -g -p ' + pid + ' -o perf.data'))
    #pref_proc = subprocess.Popen(shlex.split('sudo perf record -p ' + pid + ' -o perf.data'))
    pref_proc = subprocess.Popen(shlex.split('sudo perf record -o perf.data -p ' + pid))
    return pref_proc


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


server =  run(start_server())
#time.sleep(1)
pref_proc = start_pref(str(server.pid))
make_shots()
stop(server)
stop(pref_proc)
make_svg()
time.sleep(1)
print('Job done')
"
dCfYPFJi,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 2nd of December 2023 11:42:01 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
embriagoit:r6Cs7G on 212.224.93.130
You can connect via SSH.
Regards"
Mhrrcda5,main.cf fragment: relay to smart host,DragonHawk,SSH Config,Saturday 2nd of December 2023 11:34:58 AM CDT,"######################################################################
# identification of this mail system

myorigin = server42.corp.contoso.com 
mydomain = corp.contoso.com

######################################################################
# relay control

# Controls are relaxed for members of $mynetworks (can relay mail, no rate
# limits, can use some exploitable SMTP features, etc.).
mynetworks =
	127.0.0.0/8
	[::1]/128
	10.0.0.0/8
	192.168.0.0/16

# Clients/remotes/scenarios to relay mail *for*.
smtpd_relay_restrictions =
	permit_mynetworks
	reject_unauth_destination

######################################################################
# smart host - outgoing mail

# Send all outbound mail to this mail server (smart host)
# Use ""mail submission"" protocol (TCP port 587)
relayhost = [smtp.office365.com]:submission

# When talking to our smart host, use this name to identify ourselves.
# Some mail hosts want a valid DNS name.
#smtp_helo_name = outgoing.contoso.com

# We have to authenticate ourselves to our smart host using SASL
smtp_sasl_auth_enable = yes
smtp_sasl_type = cyrus

# Don't allow plaintext passwords if connection lacks SSL/TLS/encryption
# If connection is encrypted, allow plain text passwords.
# ""noanonymous"" is equiv to Sendmail ""y"" mailer flag.
smtp_sasl_security_options     = noanonymous noplaintext
smtp_sasl_tls_security_options = noanonymous

# Credentials to use for outgoing SMTP connections (when Postfix is
# acting as an SMTP client).
smtp_sasl_password_maps = cdb:/etc/postfix/outgoing_passwd

# Force SSL/TLS outbound, since we should only be talking to our smart host.
# Further, require that the server's certificate verify against the CA root.
smtp_tls_security_level  = verify

# END
"
kCxn8Rzc,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 2nd of December 2023 11:20:44 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-687157"
bvcXGvR2,Untitled,Maliuga,Python,Saturday 2nd of December 2023 11:16:39 AM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    
    # cmd = 'sudo perf record -g ' + command + ' -o perf.data'
    # #process = subprocess.Popen([shlex.split('sudo perf record -g -p '), shlex.split(command), shlex.split(' -o perf.data')], stdout=output, stderr=subprocess.DEVNULL)
    # process = subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    #cmd = 'sudo perf record -g -p' + process.pid + ' -o perf.data'
    #cmd = 'sudo perf record -g -p' + str(process.pid) + ' sleep 1 -o perf.data'
    
    time.sleep(1)

    #cmd = 'sudo perf record -ag -o perf.data -p ' + str(process.pid) + ' sleep 3' 
    cmd = 'sudo perf record -p ' + str(process.pid) + ' sleep 3 -o perf.data ' 

    #cmd = 'sudo perf record -g -o perf.data -p ' + str(subprocess.check_output([""pidof"",'game_server']))
    #cmd = 'sudo perf record -p ' + str(subprocess.check_output([""pidof"",'game_server'])) + ' -g -o perf.data'
    #subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    
    #subprocess.run(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    #perf_worker = subprocess.run(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)
    subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    #process = subprocess.Popen(shlex.split('sudo perf record -g -o perf.data -p -- ' + command), stdout=output, stderr=subprocess.DEVNULL)
    return process


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


#server = run(start_server())
#server = run(start_server())
server =  run(start_server())

#pref = start_pref(server.pid)
#start_pref(server.pid)

make_shots()
stop(server)

#perf_worker.wait()

#stop(pref)

make_svg()

time.sleep(1)
#subprocess.Popen('sudo perf script | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg')
print('Job done')
"
QEa6weQ7,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:50:44 AM CDT,"def F(x, A):
    return (x & A != 0) or ((x & 52 == 0) and (x & 14 == 0))
Min = 10**10
for A in range(1, 1000):
    if all(F(x, A) == 1 for x in range(0, 1000)):
        Min = min(Min, A)
print(Min)"
pJMuezwZ,BWR - Changelog 02/12/23,SSilver,Diff,Saturday 2nd of December 2023 10:48:01 AM CDT,"The Amputator
+ Increased healing radius on hit duration to 3s (was 1s)
The healing effect was barely enough reward for the risk of going for a weak melee strike. It was increased in duration to give the medic more tangible support with it.

Buffalo Steak Sandvich
~ Speed cap reworked: speed bonuses from item attributes and conditions are halved while under steak effects
The previous version simply increasing the speed cap with specific effects was unsatisfactory. This version instead properly stacks alterations to speed but reducing them to half as they would be too strong at full strength.

Phlogistinator
- Removed faster taunt speed
With the increased frequency of charges, this aspect was seen as overtuned and gave enemies less of a window to anticipate the pyro with the effect.

Warrior's Spirit
+ Reduced deploy penalty to 35% slower (was 50% slower)
- Removed +50% increased melee range
Weapon seemed especially overtuned especially with the steak, particularly with the extra range and speed granted making it difficult to actually escape. It's range was reverted while reducing it's deploy penalty slightly to make it require less commitment.

Third Degree
+ On hit: links attack to all enemies nearby (256 HU)
+ Added +35% damage bonus to burning targets
+ Reduced damage penalty to -25% (was -33%)
- Removed link with healing beams
- Removed healing on hit
- Added 20% slower firing speed
Its usage was reworked, changed from being based on healing specifically but instead to work based on proximity. The weapon instead provides a form of crowd control vs groups in close range, dealing max damage by chaining hits and using afterburn."
41Q5B9gQ,snowybot,coinwalk,JavaScript,Saturday 2nd of December 2023 10:45:08 AM CDT,"var sturn = parseFloat(document.getElementById('pct_balance').value);
var kill = (sturn/140).toFixed(8);
var freakish = kill;
var taget = (sturn*24);
var dozer = (kill*10);
var soven = (kill*6.9);
var ovenbake = (kill*7.9);
var superior = (kill*14);;
var tobetnext = ((freakish*1).toFixed(8));
var goodly = sturn;
var james = 0;
var mate = 0;
var nobby = parseFloat(document.getElementById('pct_balance').value);
var fran = ((Math.ceil(sturn/dozer))*dozer);
var klock = document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText;
var chime = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var baboon = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get() {
console.clear(); 
goodly = parseFloat(document.getElementById('pct_balance').value);klock = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[7].innerText);
baboon = parseFloat(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if ((klock<49.5000)&&(baboon>chime)){
nobby = nobby+freakish;
chime = parseFloat(baboon);
}
if ((klock>=49.5000)&&(baboon>chime)){
nobby = nobby-freakish;
chime = parseFloat(baboon);
}
if (baboon<chime){
console.log(""betting old bets stopping"");
return;
}
if ((nobby-kill)>goodly){
console.log(""greens not pay stopping"");
return;
}
if (goodly<(nobby-(kill*3))){
console.log(""hacked"");
return;
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+soven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate<=0)){
    freakish = Number((freakish*2).toFixed(8));
    james = parseFloat(goodly);
	mate = mate+1
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if ((goodly>(((Math.floor(goodly/dozer))*dozer)+soven))&&(goodly<(((Math.floor(goodly/dozer))*dozer)+ovenbake))&&(goodly!=james)&&(mate>0)){
    freakish = Number((freakish*2).toFixed(8));
	mate = mate+1;
    james = parseFloat(goodly);
}
if ((goodly>=fran)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+soven))){
    freakish = kill;
    james = 0;
	mate = 0;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (((Math.floor(goodly/dozer))*dozer)<=(fran*0.7)){
    fran = ((Math.ceil(goodly/dozer))*dozer);
	}
if ((((Math.floor(goodly/dozer))*dozer)<=(fran*0.7))&&((((Math.floor(goodly/dozer))*dozer)+(freakish*2))>=goodly)&&(goodly<(((Math.floor(goodly/dozer))*dozer)+soven))){
    freakish = kill;
    james = 0;;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (goodly<=freakish){
    freakish = kill;
    james = 0;;
    fran = ((Math.ceil(goodly/dozer))*dozer);
}
if (goodly >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
tobetnext = (freakish*1).toFixed(8);
$('#pct_chance').val(49.5);
$('#pct_bet').val(tobetnext);
$('#a_lo').click();
var good = ((goodly-sturn).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 1000);
}
get();


"
8BtqQpFK,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:44:29 AM CDT,"def f(n):
    s = """"
    while n > 0:
        s += str(n % 17)
        n //= 17
    s = s[::-1]
    return s
x = 5 * 3**1917 + 6 * 2**1878 + 7 * 3**1870 - 1991
x = f(x)
A = [0] * 10
for i in range(len(x)):
    A[int(x[i])] += 1
print(A)"
gYAmzi3q,alltheforge10_client_iron,CodeSalat,Lua,Saturday 2nd of December 2023 10:38:46 AM CDT,"rednet.open(""top"")
rednet.host(""energy"", ""iron"")
local cube = peripheral.wrap(""right"")

while true do
    local sender, message, distance = rednet.receive(""energy"")
    if message == ""energyUpdate"" then
        rednet.send(sender, cube.getEnergyFilledPercentage()*10, ""energy"")
    end
end"
xuSP1dAD,Untitled,Maliuga,Python,Saturday 2nd of December 2023 10:32:35 AM CDT,"import argparse
import subprocess
import time
import random
import shlex

RANDOM_LIMIT = 1000
SEED = 123456789
random.seed(SEED)

AMMUNITION = [
    'localhost:8080/api/v1/maps/map1',
    'localhost:8080/api/v1/maps'
]

SHOOT_COUNT = 100
COOLDOWN = 0.1


def start_server():
    parser = argparse.ArgumentParser()
    parser.add_argument('server', type=str)
    return parser.parse_args().server


def run(command, output=None):
    process = subprocess.Popen(shlex.split(command), stdout=output, stderr=subprocess.DEVNULL)
    
    cmd = 'sudo perf record -g -o perf.data -p' + str(process.pid) 
    subprocess.Popen(shlex.split(cmd), stdout=output, stderr=subprocess.DEVNULL)

    return process


def make_svg():
    subprocess.Popen('sudo perf script -i perf.data | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl > graph.svg', shell=True)


def stop(process, wait=False):
    if process.poll() is None and wait:
        process.wait()
    process.terminate()


def shoot(ammo):
    hit = run('curl ' + ammo, output=subprocess.DEVNULL)
    time.sleep(COOLDOWN)
    stop(hit, wait=True)


def make_shots():
    for _ in range(SHOOT_COUNT):
        ammo_number = random.randrange(RANDOM_LIMIT) % len(AMMUNITION)
        shoot(AMMUNITION[ammo_number])
    print('Shooting complete')


server = run(start_server())
make_shots()
stop(server)
make_svg()
time.sleep(1)
print('Job done')
"
CZ977Jf2,sehgsehseh,gadungw71,PHP,Saturday 2nd of December 2023 10:22:00 AM CDT,"https://bio.link/1212thedayhdkorea
https://bio.link/film1212theday2023
https://bio.link/fertygya
https://bio.link/theundertakerfullhd
https://bio.link/rettuugd
https://bio.link/aedrlead
https://bio.link/4kings2fullhdthai4k
https://groups.google.com/g/comp.arch.fpga/c/jCghFUPje6w
https://groups.google.com/g/comp.arch.fpga/c/laEmsktk-XU
https://groups.google.com/g/comp.text.tex/c/2kJYTMQZZJw
https://groups.google.com/g/comp.text.tex/c/wIfzxVlTtjs
https://groups.google.com/g/comp.arch.fpga/c/Xa4JSTk1UEc
https://groups.google.com/g/comp.arch.fpga/c/kMV5HxVeLEE
https://groups.google.com/g/comp.os.vms/c/x-bwjsS75TA
https://groups.google.com/g/comp.text.tex/c/b7is7Xu_K1o
https://hackmd.io/@rerewilli6/ByyPI0_Hp
https://rentry.co/xgccf
https://pastelink.net/u1lwhqgk
https://snippet.host/owdtgo
https://glot.io/snippets/gr55orvnxq
https://etextpad.com/fpjpoyhzpt
https://homment.com/rWlaPY0SyxTRuZnBovDX
https://justpaste.me/9Se9
https://jsbin.com/ruqebogiho/edit?html,output
https://ide.geeksforgeeks.org/online-php-compiler/89b6fa3c-6217-4878-bd42-2f2f7a270bf8
https://jsfiddle.net/putradani/3r4j82um/
https://pasteio.com/x41T0gWP6Vw4
"
3c5MRKqK,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:18:58 AM CDT,"def f(n):
    s = """"
    while n > 0:
        s += str(n % 17)
        n //= 17
    s = s[::-1]
    return s
count = 0
for n in range(17**6, 17**7):
    n = f(n)
    if '2' not in n and '3' not in n and '5' not in n and '7' not in n and len(n) == len(set(n)) and int(n[:1]) % 2 == 1:
        count += 1
print(count)"
Y4naRCEz,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 10:05:14 AM CDT,"def f(n):
    s = ''
    while n > 0:
        s += str(n % 3)
        n //= 3
    s = s[::-1]
    return s
for n in range(1, 100000):
    n = f(n)
    if int(n) % 4 == 0:
        n = n + n[-3:]
    else:
        n = n + f((int(n) % 4) * 4)
    R = int(n, 3)
    if R < 127:
        print(R)"
FL0kWmFg,bash execute latest version,plirof2,JavaScript,Saturday 2nd of December 2023 10:03:52 AM CDT,"#!/bin/bash

folder_path=""/tmp/Internet/""
prefix=""ungoogled-chromium_""
extension="".AppImage""

# Navigate to the specified folder
cd ""$folder_path"" || exit

# Find files with the specified prefix and extension
files=($(find . -type f -name ""$prefix*$extension""))

# If no matching files are found, exit
if [ ${#files[@]} -eq 0 ]; then
  echo ""No matching files found.""
  exit
fi

# Extract version numbers and find the file with the highest version
latest_version=""""
latest_file=""""
for file in ""${files[@]}""; do
  version=$(echo ""$file"" | grep -oP ""(?<=${prefix})[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"" | head -n 1)
  if [ -n ""$version"" ]; then
    echo ""Detected version number: $version""
    IFS='.' read -ra version_parts <<< ""$version""
    if [ -z ""$latest_version"" ] || [ ""${version_parts[0]}"" -gt ""${latest_version_parts[0]}"" ] || [ ""${version_parts[1]}"" -gt ""${latest_version_parts[1]}"" ] || [ ""${version_parts[2]}"" -gt ""${latest_version_parts[2]}"" ] || [ ""${version_parts[3]}"" -gt ""${latest_version_parts[3]}"" ]; then
      latest_version=""$version""
      latest_version_parts=(""${version_parts[@]}"")
      latest_file=""$file""
    fi
  fi
done


# Execute the file with the latest version
#echo ""Executing the latest version: $latest_file""
echo $latest_file
echo $latest_version


# Execute the file with the latest version
if [ -n ""$latest_file"" ]; then
  echo ""Executing the latest version: $latest_file""
  chmod +x ""$latest_file""
  ./""$latest_file""
else
  echo ""No valid version number detected in any file.""
fi
"
rbP61LKT,fetch latest version,plirof2,Bash,Saturday 2nd of December 2023 10:03:11 AM CDT,"===========bash ============================
#!/bin/bash

# GitHub repository owner and name
OWNER=""ivan-hc""
REPO=""Chromium-Web-Browser-appimage""

# Fetch the latest release information using the GitHub API
API_URL=""https://api.github.com/repos/$OWNER/$REPO/releases/latest""
RELEASE_INFO=$(curl -s ""$API_URL"")

# Check if the request was successful
if [[ $RELEASE_INFO == *""Not Found""* ]]; then
    echo ""Error: Repository or release not found. Please check the repository owner and name.""
    exit 1
fi

# Extract the latest release version and asset download URL without jq
LATEST_VERSION=$(grep -oP '""tag_name"": ""\K[^""]+' <<< ""$RELEASE_INFO"")
DOWNLOAD_URL=$(grep -oP '""browser_download_url"": ""\K[^""]+' <<< ""$RELEASE_INFO"")

# Download the latest version
wget ""$DOWNLOAD_URL"" -O ""Chromium_Web_Browser-$LATEST_VERSION.AppImage""

echo ""Downloaded Chromium Web Browser version $LATEST_VERSION to Chromium_Web_Browser-$LATEST_VERSION.AppImage""


=================PHP=======================
#!/bin/bash

# GitHub repository owner and name
OWNER=""ivan-hc""
REPO=""Chromium-Web-Browser-appimage""

# Fetch the latest release information using the GitHub API
API_URL=""https://api.github.com/repos/$OWNER/$REPO/releases/latest""
RELEASE_INFO=$(curl -s ""$API_URL"")

# Check if the request was successful
if [[ $RELEASE_INFO == *""Not Found""* ]]; then
    echo ""Error: Repository or release not found. Please check the repository owner and name.""
    exit 1
fi

# Extract the latest release version and asset download URL using php
LATEST_VERSION=$(php -r 'echo json_decode(file_get_contents(""php://stdin""))->tag_name;' <<< ""$RELEASE_INFO"")
DOWNLOAD_URL=$(php -r 'echo json_decode(file_get_contents(""php://stdin""))->assets[0]->browser_download_url;' <<< ""$RELEASE_INFO"")

# Download the latest version
wget ""$DOWNLOAD_URL"" -O ""Chromium_Web_Browser-$LATEST_VERSION.AppImage""

echo ""Downloaded Chromium Web Browser version $LATEST_VERSION to Chromium_Web_Browser-$LATEST_VERSION.AppImage""
"
sbTY4uyd,Railroader-backup.ps1,kerbo_,PowerShell,Saturday 2nd of December 2023 09:54:56 AM CDT,"# A simple PowerShell script to backup Railroader saves
# Twitter: @Kerbo_
#
$ErrorActionPreference = 'SilentlyContinue'
$railroaderDir = $env:APPDATA + ""\..\LocalLow\Giraffe Lab LLC\Railroader\Saves""
$dateString = $(get-date -f yyy-MM-dd_HH-mm)
Push-Location $railroaderDir

If(!(test-path -PathType container ""backups""))
{
      New-Item -ItemType Directory -Path ""backups"" | Out-Null
}

$saves = Get-ChildItem -Filter *.shortsave

foreach($save in $saves) {
    $savename = $save.Name
    $basename = $save.BaseName
    
    if($savename -Like ""*_auto*"") { continue }
    
    $save_hash = Get-FileHash $save
    $backup = gci ""backups\$basename-*"" | select -last 1
    $backup_hash = Get-FileHash $backup -EV Err -EA SilentlyContinue
    if ( $backup_hash.Hash -eq $save_hash.Hash ) {
        Write-Host ""$savename matches latest backup, no backup needed"" -ForegroundColor green
    } else {
        cp $savename ""backups\$basename-$dateString.shortsave""
        $RET=$?
        if ($RET) {
            Write-Host ""Copied $basename.shortsave to backups\$basename-$dateString.shortsave"" -ForegroundColor yellow
        } else {
            Write-Host ""Error! cp returned $RET for $basename.shortsave"" -ForegroundColor red
        }
    }
}
Pop-Location
# Sleep to show screen output before exiting
Start-Sleep -Seconds 5"
TbvzJck1,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 09:05:52 AM CDT,"file = open('15A.txt')
A = list(map(int, file.readlines()))
Max = -10**9
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if abs(A[i] - A[j]) % 80 == 0:
            Max = max(Max, A[i] - A[j])
print(Max)

file = open('15B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(80)]
for i in range(len(A)):
    ost = A[i] % 80
    a[ost] += [A[i]]
b = []
for i in range(80):
    a[i].sort()
    b += a[i][-1:]
    b += a[i][:1]
ans = []
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        if abs(b[i] - b[j]) % 80 == 0:
            ans  += [b[i] - b[j]]
print(max(ans))"
aLbcQV4E,ShapeMiner,LexieSama,Lua,Saturday 2nd of December 2023 09:01:28 AM CDT,"local Height, Size
local currWidth = 0
local currLength = 0
local currHeight = 0
local currSize = 0
local middleReached = false
local goingFront = true

local function permaDig()
    while turtle.detect() do
        turtle.dig()
    end
end

local function permaDigUp()
    while turtle.detectUp() do
        turtle.digUp()
    end
end

local function turnAround()
    turtle.turnLeft()
    turtle.turnLeft()
end

print(""Type in the Size:"")
Size = tonumber(io.read())
print(""Type in the Height:"")
Height = tonumber(io.read())

print(""starting procedure"")

while currHeight <= Height do
    while currLength <= Size do
        if currSize == 0 then
            permaDig()
            turtle.forward()
            currSize = currSize + 1
        else
            turtle.turnRight()
            while currWidth <= currSize do
                permaDig()
                turtle.forward()
                currWidth = currWidth + 1
            end
            turnAround()
            while currWidth >= -currSize do
                permaDig()
                turtle.forward()
                currWidth = currWidth - 1
            end
            turnAround()
            while currWidth < 0 do
                turtle.forward()
                currWidth = currWidth + 1
            end
            turtle.turnLeft()
            currSize = currSize + 1
        end
        if (middleReached) then
            if (currSize > 0) then
                permaDig()
                turtle.forward()
            end
        else
            if currSize > 0 then
                permaDig()
                turtle.forward()
            end
        end

        if (currSize == Size / 2) then
            middleReached = true
        end
        currLength = currLength + 1
    end

    if not (currHeight == Height) then
        currLength = 0
        permaDigUp()
        turtle.up()
        turnAround()
        currHeight = currHeight + 1
        goingFront = not goingFront
    end
end

while currHeight > 0 do
    turtle.down()
    currHeight = currHeight - 1
end

if not goingFront then
    while currLength < Size do
        turtle.forward()
        currLength = currLength + 1
    end
end"
MPmJVKgr,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 08:56:11 AM CDT,"#include <iostream>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
const ll INF = 1e18;
int n, k;
vector<pair<int, int> > graph[maxn];
bool pay_toll[maxn];

pair<ll, ll> dfs(int node, int parent) {
    ll res = 0, sum = 0, max_edge = 0;
    for(int i = 0; i < (int) graph[node].size(); i++) {
        int neighbour = graph[node][i].first;
        if(neighbour != parent) {
            ll weight = graph[node][i].second;
            pair<ll, ll> p = dfs(neighbour, node);
            res += p.first;
            sum += min(weight, p.second);
            max_edge = max(max_edge, min(weight, p.second));
        }
    }
    if(pay_toll[node]) {
        res += sum;
        max_edge = INF;
    }
    else {
        res += sum - max_edge;
    }
    return make_pair(res, max_edge);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    
    for(int i = 1; i < n; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        graph[a].push_back(make_pair(b, c));
        graph[b].push_back(make_pair(a, c));
    }
    for(int i = 0; i < maxn; i++) {
        pay_toll[i] = false;
    }
    
    for(int i = 0; i < k; i++) {
        int x;
        cin >> x;
        pay_toll[x] = true;
    }
    cout << dfs(0, -1).first << endl;
    return 0;
}
"
GFXsv6du,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:53:51 AM CDT,"file = open('14A.txt')
A = list(map(int, file.readlines()))
Max = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            for p in range(k + 1, len(A)):
                if (A[i] + A[j] + A[k] + A[p]) % 12 == 0:
                    Max = max(Max, A[i] + A[j] + A[k] + A[p])
print(Max)

file = open('14B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(12)]
for i in range(len(A)):
    ost = A[i] % 12
    a[ost] += [A[i]]
b = []
for i in range(12):
    a[i].sort()
    b += a[i][-4:]
ans = []
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        for k in range(j + 1, len(b)):
            for p in range(k + 1, len(b)):
                if (b[i] + b[j] + b[k] + b[p]) % 12 == 0:
                    ans += [b[i] + b[j] + b[k] + b[p]]
print(max(ans))"
jMdUXBFE,BDOT LR5,MARSHAL327,Scala,Saturday 2nd of December 2023 08:46:02 AM CDT,"package sevsu.spark

import java.nio.file.Paths
import org.apache.spark.{RangePartitioner, SparkConf, SparkContext}
import org.apache.spark.rdd.RDD
import sevsu.spark.Application.time

object Application {
    private val conf: SparkConf = new SparkConf()
        .setMaster(""local[*]"")
        .setAppName(""spark_example"")
        .set(""spark.ui.showConsoleProgress"", ""false"")

    private val sc: SparkContext = getSparkContext(conf)

    private val resourcesRoot: String = this.getClass.getResource(""/"").toString
    private val personPath: String = resourcesRoot + ""person.csv""
    private val apartmentPath: String = resourcesRoot + ""apartment.csv""

    case class Person(id: Int, name: String)

    case class Apartment(id_apartment: Int, id_human: Int, num_rooms: Int, address: String)

    def time[R](block: => R): R = {
        val t0 = System.nanoTime()
        val result = block // call-by-name
        val t1 = System.nanoTime()
        val resultTime = BigDecimal((t1 - t0) / Math.pow(10, 9))
            .setScale(4, BigDecimal.RoundingMode.HALF_UP)
        println(""Время: "" + resultTime + "" сек."")
        result
    }

    def lab4(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""========== lab4 =========="")
        // ====== Task 1 ======
        val personCounter: RDD[(Int, Int)] = apartments.map(item => (item.id_human, 1))
        val numPersonApartments =
            personCounter
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments.map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))
        val joined = personPairRDD join numPersonApartments
        val numPersonNameApartments = joined.map(item => item._2)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )
        val personNameAddressWithId = personApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.map(item => item._2)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def lab5(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""\n========== lab5 =========="")

        // ====== Task 1 ======
        val pairApartments = apartments.map(apartment => (apartment.id_human, 1))

        val partitioner = new RangePartitioner(4, pairApartments)
        val partitionedPairApartments = pairApartments.partitionBy(partitioner).persist()

        val numPersonApartments =
            partitionedPairApartments
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments.map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))

        val partitionerPersonPairRDD = new RangePartitioner(4, personPairRDD)
        val partitionedPersonPairRDD = personPairRDD.partitionBy(partitionerPersonPairRDD).persist()

        val joined: RDD[(Int, (String, Int))] = partitionedPersonPairRDD join numPersonApartments
        val numPersonNameApartments = joined.mapValues(item => item._1)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )

        val partitionerPersonApartmentsAddress = new RangePartitioner(4, personApartmentsAddress)
        val partitionedPersonApartmentsAddress = personApartmentsAddress.partitionBy(partitionerPersonApartmentsAddress).persist()

        val personNameAddressWithId = partitionedPersonApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.mapValues(item => item._1)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def main(args: Array[String]): Unit = {
        val rawPersonRdd: RDD[String] = sc.textFile(personPath)
        val rawApartmentRdd: RDD[String] = sc.textFile(apartmentPath)
        val persons: RDD[Person] = rawPersonRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id, name) => Person(id.toInt, name)
            }
        })
        val apartments: RDD[Apartment] = rawApartmentRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id_apartment, id_human, num_rooms, address) => Apartment(id_apartment.toInt, id_human.toInt, num_rooms.toInt, address)
            }
        })
        
        time(lab4(apartments, persons, printResults = false))
        time(lab5(apartments, persons, printResults = false))

        sc.stop()
    }

    private def getSparkContext(conf: SparkConf): SparkContext = {
        if (System.getProperty(""os.name"").toLowerCase.contains(""windows"")) {
            System.setProperty(
                ""hadoop.home.dir"",
                Paths.get(this.getClass.getResource(""/winutils/hadoop-2.7.1/"").toURI).toString
            )
        }

        new SparkContext(conf)
    }
}
"
iiesFhhz,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:40:16 AM CDT,"file = open('13A.txt')
A = list(map(int, file.readlines()))
Min = 10**10
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        for k in range(j + 1, len(A)):
            if (A[i] + A[j] + A[k]) % 11 == 0:
                Min = min(Min, A[i] + A[j] + A[k])
print(Min)

ans = []
file = open('13B.txt')
A = list(map(int, file.readlines()))
a = [[] for i in range(11)]
for i in range(len(A)):
    ost = A[i] % 11
    a[ost] += [A[i]]
b = []
for i in range(11):
    a[i].sort()
    b += a[i][:3]
for i in range(len(b)):
    for j in range(i + 1, len(b)):
        for k in range(j + 1, len(b)):
            if (b[i] + b[j] + b[k]) % 11 == 0:
                ans += [b[i] + b[j] + b[k]]
print(min(ans))"
YvduvsGT,get_date.cpp,ripred,C++,Saturday 2nd of December 2023 08:34:56 AM CDT,"#include <iostream>
#include <stdint.h>
using namespace std;

char compileDate[16] = __DATE__;

uint16_t const monPattern[12] = {
//ascii added together
    281,    // J+a+n = 74+97+110
    269,    // F+e+b = 70+101+98
    288,    // M+a+r = 77+97+114
    291,    // A+p+r = 65+112+114
    295,    // M+a+y = 77+97+121
    301,    // J+u+n = 74+117+110
    299,    // J+u+l = 74+117+108
    285,    // A+u+g = 65+117+103
    296,    // S+e+p = 83+101+112
    294,    // O+c+t = 79+99+116
    307,    // N+o+v = 78+111+118
    268,    // D+e+c = 68+101+99
};

//name of months
const char* months[12] {
    ""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""
};

//get compile month in integers
int decideMonth(){
    //get monPattern by adding ascii
    int add = 0;
    for(int i=0; i<3;i++){
        add += compileDate[i];
    }

    //what month?
    int mon = 0;
    for(int j=0; j<12; j++){
        if(add==monPattern[j]){
            mon = j+1;
        }
    }
    return mon;
}
int month = decideMonth();

//get compile date in integers
int decideDate(){
    //get date, converting from ascii to decimal
    int dt=0;
    for (int i=4; i<6; i++){
        if (compileDate[i] != ' '){
            dt = dt*10 + (compileDate[i]-48);
        }
    }
    return dt;
}
int date = decideDate();

//get compile year in integers
int decideYear(){
    //get year, converting from ascii to decimal
    int yr = 0;
    for (int i=7; i<11; i++){
        yr = yr*10 + (compileDate[i]-48);
    }
    return yr;
}
int year = decideYear();

// number of days in a month
int get_maxDays(int mon){
    //30 day months
    if (mon==4 || mon==6 || mon==9 || mon==11){
        return 30;
    }

    //special case on Feb
    else if (mon==2){
        if (year%4==0){
            return 29;
        }
        else {
            return 28;
        }
    }

    //31 day months
    else {
        return 31;
    }
}
int maxDays = get_maxDays(month);
const int maxMonth = 12;

//next month
void checkMonth(){
    if (date > maxDays){
        date -= maxDays;                //1st new month
        month++;                        //new month
        maxDays = get_maxDays(month);   //new month's maxDays
    }
}

//next year
void checkYear(){
    if (month > maxMonth){
        month -= maxMonth;  //Jan new year
        year++;             //new year
    }
}

//when hit 00:00 next day, date++
//checkMonth() and checkYear() every date++

//today (idk how to do this)
string today(){
    return string(months[month-1]) + "" "" + to_string(date) + "" "" + to_string(year);
}

int main(){
    cout << compileDate << endl;
    cout << months[month-1] << ' ' << date << ' ' << year << endl; //i want the today function to output this thing
    cout << today() << endl;
    return 0;
}"
bKgxvb9G,we are all like fireworks,rosswolf,HTML,Saturday 2nd of December 2023 08:26:26 AM CDT,"<center><link href=""https://dl.dropbox.com/s/7copxqqy99sjpnk/we%20are%20all%20like%20fireworks.css?dl=0"" rel=""stylesheet""><div id=""rr_we-are-fireworks""><a href=""https://is.gd/rossr"" title=""「by ross」""></a><div class=""rcontainer""><div class=""rheader""><div class=""rtitle"">mitologia</div></div><div class=""rnotes-l"">Três, três e... três?</div><div class=""rdivider""><div class=""rdec""></div><div class=""rimg""><img src=""https://c.tenor.com/1lEKFLJPNGwAAAAd/chaewon-kim-chaewon.gif""></div></div><div class=""rnotes-r"">1ª aula de Mitologia</div><div class=""rtxt"">
 
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sed dolor non lorem fermentum feugiat sed quis leo. Curabitur quam felis, lacinia auctor turpis at, blandit viverra lectus. Vestibulum a lectus interdum, luctus mauris at, gravida dui. Nam vulputate quam est, eu eleifend ligula semper eget. Cras eleifend aliquet lorem id mattis. Donec ultricies blandit urna et aliquet. Quisque convallis pharetra porta. Aliquam ullamcorper sed arcu sit amet ornare. Curabitur maximus risus sed euismod sollicitudin. Nulla facilisi. Aenean sed augue orci. Donec ut libero nulla.

Quisque rhoncus vehicula sapien, nec pulvinar nulla gravida non. Cras efficitur ullamcorper lorem, porttitor hendrerit lacus lobortis rutrum. Ut semper varius facilisis. Sed bibendum pulvinar leo vel mattis. Nunc porttitor velit sit amet ligula tincidunt, ut aliquam lacus accumsan. Sed interdum sem vitae mauris egestas, eu accumsan eros tempor. Suspendisse eget libero turpis. Suspendisse vitae aliquam turpis. Nulla feugiat ut nulla in porttitor. Curabitur pulvinar quis urna mollis aliquam.

</div><div class=""rfooter""><span>Interação com <b>NPC</b></span></div><table class=""rquote""><td>""We are all like <b>fireworks</b>: we climb, we shine and always go our separate ways and become further apart. But even when that time comes, let's not disappear like a firework and continue to shine.. forever.""</td><td></td></table></div></div></center>"
r8iyrK40,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:23:36 AM CDT,"file = open('12A.txt')
A = list(map(int, file.readlines()))
Max = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 2 == 0 and (A[i] % 23 == 0 or A[j] % 23 == 0):
            Max = max(Max, A[i] + A[j])
print(Max)

file = open('12B.txt')
A = list(map(int, file.readlines()))
a0_23 = []
a1_23 = []
a0 = []
a1= []
for i in range(len(A)):
    if A[i] % 2 == 0 and A[i] % 23 == 0:
        a0_23 += [A[i]]
    elif A[i] % 2 != 0 and A[i] % 23 == 0:
        a1_23 += [A[i]]
    elif A[i] % 2 == 0 and A[i] % 23 != 0:
        a0 += [A[i]]
    elif A[i] % 2 != 0 and A[i] % 23 != 0:
        a1 += [A[i]]
a0_23.sort()
a1_23.sort()
a0.sort()
a1.sort()
print(max(a0[-1] + a0_23[-1], a1[-1] + a1_23[-1], a0_23[-1] + a0_23[-2], a1_23[-1] + a1_23[-2]))"
igLHP3z9,Codechef Input,Radiant-Games,C#,Saturday 2nd of December 2023 08:22:24 AM CDT,"int T = int.Parse(Console.ReadLine());
while (T-- > 0)
{
	int[] inputs = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
}"
0fjUBjh1,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 08:20:07 AM CDT,"#include <iostream>
using namespace std;
typedef long long ll;
const int maxn = 5e4 + 10;
const int maxk = 155;
const ll INF = 1e18;
int n, k;
vector<int> graph[maxn];
ll v[maxn];
vector<int> top_sort;
int subtree_size[maxn];
ll dp[maxn][maxk];
void dfs(int node, int parent) {
    subtree_size[node] = 1;
    for(int neighbour : graph[node]) {
        if(neighbour != parent) {
            dfs(neighbour, node);
            subtree_size[node] += subtree_size[neighbour];
        }
    }
    top_sort.push_back(node);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    for(int i = 1; i < n; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    dfs(0, -1);
    reverse(top_sort.begin(), top_sort.end());
    for(int i = 0; i < maxn; i++) {
        for(int j = 0; j < maxk; j++) {
            dp[i][j] = -INF;
        }
    }
    dp[0][k] = 0;
    
    for(int i = 0; i < n; i++) {
        int node = top_sort[i];
        for(int j = 0; j <= k; j++) {
            if(dp[i][j] == -INF) continue;
            dp[i + 1][j] = max(dp[i + 1][j], dp[i][j] + v[node]);
            if(j >= 1) {
                dp[i + subtree_size[node]][j - 1] = max(dp[i + subtree_size[node]][j - 1], dp[i][j]);
            }
        }
    }
    ll res = -INF;
    for(int j = 0; j <= k; j++) {
        res = max(res, dp[n][j]);
    }
    cout << res << endl;
    return 0;
}
"
WAknsPJj,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:14:28 AM CDT,"file = open('11A.txt')
A = list(map(int, file.readlines()))
Min = 10**9
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] * A[j]) % 31 == 0:
            Min = min(Min, A[i] * A[j])
print(Min)

file = open('11B.txt')
A = list(map(int, file.readlines()))
a = []
a31 = []
for i in range(len(A)):
    if A[i] % 31 == 0:
        a31 += [A[i]]
    else:
        a += [A[i]]
a.sort()
a31.sort()
print(min(a[0] * a31[0], a31[0] * a[1]))"
83f25b2x,Untitled,Tkap1,C++,Saturday 2nd of December 2023 08:09:36 AM CDT,"func s_v3 slerp(s_v3 start, s_v3 end, float t)
{
	float dot = v3_dot(start, end);
	dot = clamp(dot, -1.0f, 1.0f);
	float theta = acosf(dot) * t;

	// nocheckin parenthesis?
	s_v3 relative_vec = v3_normalized(end - start * dot);
	return ((start * cosf(theta)) + (relative_vec * sinf(theta)));
}"
gdui2Wza,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:08:44 AM CDT,"file = open('10A.txt')
A = list(map(int, file.readlines()))
Max = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) % 2 == 1:
            Max = max(Max, A[i] + A[j])
print(Max)

file = open('10B.txt')
A = list(map(int, file.readlines()))
a0 = []
a1 = []
for i in range(len(A)):
    if A[i] % 2 == 0:
        a0 += [A[i]]
    else:
        a1 += [A[i]]
a0.sort()
a1.sort()
print(a0[-1] + a1[-1])"
Cayijywc,no man's land,rosswolf,HTML,Saturday 2nd of December 2023 08:05:09 AM CDT,"<center><link href=""https://dl.dropbox.com/s/0bofta0k4k4nxii/no%20man%27s%20land.css"" rel=""stylesheet""><div id=""rr_no-mans-land""><a href=""https://is.gd/rossr"" title=""「by ross」""></a><div class=""rwrap""><div class=""rdec rtop""></div><div class=""rcontainer""><div class=""rtitle"">no man's land</div><div class=""rtxt"">LOREM IPSUM

</div><div class=""rdecor""><img src=""https://i.imgur.com/vTJV0ja.gif""><div>Interação com <span class=""rhl"">Cassandra Kim</span> - No castelo - Vestindo <a>isso</a></div></div><div class=""rimg-container""><span></span><div class=""rimg""><div></div><img src=""IMAGE""></div></div></div><div class=""rdec rbot""></div></div></div></center>"
uTVxDyBs,Untitled,Farz0l1x,Python,Saturday 2nd of December 2023 08:01:41 AM CDT,"file = open('9A.txt')
A = list(map(int, file.readlines()))
count = 0
for i in range(len(A)):
    for j in range(i + 1, len(A)):
        if (A[i] + A[j]) == 2000:
            count += 1
print(count)

file = open('9B.txt')
A = list(map(int, file.readlines()))
k = [0] * 2000
for i in range(len(A)):
    ost = A[i] % 2000
    if A[i] < 2000:
        k[ost] += 1
count = k[0] * (k[0] - 1) // 2 + k[1000] * (k[1000] - 1) // 2
for i in range(1, 1000):
    count += k[i] * k[2000 - i]
print(count)"
QSenWWYT,Untitled,HyperczarevYT,Lua,Saturday 2nd of December 2023 08:00:30 AM CDT,"loadstring(game:HttpGet(""https://pastebin.com/raw/uPVBDY87""))()"
GPzZ9jKm,Untitled,um1up,JSON,Saturday 2nd of December 2023 07:58:22 AM CDT,"[
        {
            ""code"": ""henryscheinbrazil_money"",
            ""title"": ""Dinheiro"",
            ""total_installments"": 0,
            ""options"": [],
            ""brands_card"": [],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""henryscheinbrazil_debitcard_maquineta"",
            ""title"": ""Cartão de Débito Maquineta"",
            ""total_installments"": 0,
            ""options"": [],
            ""brands_card"": [],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""henryscheinbrazil_creditcard_maquineta"",
            ""title"": ""Cartão de Crédito Maquineta"",
            ""total_installments"": 1,
            ""options"": [
                {
                    ""installment"": 1,
                    ""value"": 46.63,
                    ""discount"": 0,
                    ""total"": 46.63,
                    ""interest_rate"": 0,
                    ""percent_discount"": 0,
                    ""label"": ""1x de R$46,63""
                }
            ],
            ""brands_card"": [],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""henryscheinbrazil_prepayment_jpmorgan"",
            ""title"": ""Boleto à vista"",
            ""total_installments"": 1,
            ""options"": [
                {
                    ""installment"": 1,
                    ""value"": 46.63,
                    ""discount"": 1.4,
                    ""total"": 45.23,
                    ""interest_rate"": 0,
                    ""percent_discount"": 3,
                    ""label"": ""1x de R$45,23""
                }
            ],
            ""brands_card"": [],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""henryscheinbrazil_billet"",
            ""title"": ""Boleto Parcelado"",
            ""total_installments"": 1,
            ""options"": [
                {
                    ""installment"": 1,
                    ""value"": 46.63,
                    ""discount"": 0,
                    ""total"": 46.63,
                    ""interest_rate"": 0,
                    ""percent_discount"": 0,
                    ""label"": ""1x de R$46,63""
                }
            ],
            ""brands_card"": [],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""henryscheinbrazil_creditcard"",
            ""title"": ""Cartão de Crédito"",
            ""total_installments"": 1,
            ""options"": [
                {
                    ""installment"": 1,
                    ""value"": 46.63,
                    ""discount"": 0,
                    ""total"": 46.63,
                    ""interest_rate"": 0,
                    ""percent_discount"": 0,
                    ""label"": ""1x de R$46,63""
                }
            ],
            ""brands_card"": [
                ""AE"",
                ""VI"",
                ""MC"",
                ""ELO"",
                ""HC""
            ],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        },
        {
            ""code"": ""braspag_pagador_creditcard"",
            ""title"": ""Cartão de Crédito"",
            ""total_installments"": 1,
            ""options"": [
                {
                    ""installment"": 1,
                    ""value"": 46.632,
                    ""discount"": 0,
                    ""total"": 46.632,
                    ""interest_rate"": 0,
                    ""percent_discount"": 0,
                    ""label"": ""1x de R$46,63""
                }
            ],
            ""brands_card"": [
                ""Simulado"",
                ""VI"",
                ""MC"",
                ""AE"",
                ""ELO"",
                ""HC""
            ],
            ""description"": """",
            ""message"": """",
            ""message_title"": {
                ""text"": """",
                ""color"": """"
            },
            ""highlight"": """",
            ""subtitle"": """"
        }
    ]"
PYkaZ0G3,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 07:48:02 AM CDT,"#include <iostream>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
int n;
int experience[maxn];
vector<int> graph[maxn];
ll dp[maxn][3];

void dfs(int node, int parent) {
    ll sum = 0;
    for(int neighbour : graph[node]) {
        if(neighbour != parent) {
            dfs(neighbour, node);
            sum += dp[neighbour][0];
        }
    }
    dp[node][1] = sum + experience[node];
    dp[node][2] = sum - experience[node];
    
    for(int neighbour : graph[node]) {
        if(neighbour != parent) {
            dp[node][1] = max(dp[node][1], sum - dp[neighbour][0] + dp[neighbour][1]);
            dp[node][2] = max(dp[node][2], sum - dp[neighbour][0] + dp[neighbour][2]);
        }
    }
    dp[node][0] = max(dp[node][1] - experience[node], dp[node][2] + experience[node]);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n;
    
    for(int i = 0; i < n; i++) {
        cin >> experience[i];
    }
    for(int i = 1; i < n; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
    
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    dfs(0, -1);
    
    cout << dp[0][0] << endl;
    return 0;
}
"
QWQ8Wx3b,youtube delay on percentage-jumps,Gewerd_Strauss,Autohotkey,Saturday 2nd of December 2023 07:45:28 AM CDT,"#Requires AutoHotkey v1.1+
#NoEnv ; Recommended for performance and compatibility with future AutoHotkey releases.
#SingleInstance Force
#MaxHotkeysPerInterval 99999999
;#Persistent
;#Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir% ; Ensures a consistent starting directory.
DetectHiddenWindows On
SetKeyDelay -1,-1
SetBatchLines -1
SetTitleMatchMode 2
#if WinActive(""YouTube"") && Winactive(""/watch"")
Numpad1::
Numpad2::
Numpad3::
Numpad4::
Numpad5::
Numpad6::
Numpad7::
Numpad8::
Numpad9::
Numpad0::
1::
2::
3::
4::
5::
6::
7::
8::
9::
0::
loop, 3
{
	ttip(""Jumping in "" 4-A_Index st_pad("""",""."",,A_Index))
	sleep 1000
}
if CheckKeyHold(A_ThisHotkey) {
	ttip(""Jumping to "" A_ThisHotkey)
	SendInput % A_ThisHotkey
} else {
	ttip(""remain here"")
}
return

ttip(text:=""TTIP: Test"",mode:=1,to:=4000,xp:=""NaN"",yp:=""NaN"",CoordMode:=-1,to2:=1750,Times:=20,currTip:=20)
{

    cCoordModeTT:=A_CoordModeToolTip
    if (mode=-1)
        return
    if (text="""") || (text=-1)
        gosub, RemoveTTIP
    if IsObject(text)
        text:=ScriptObj_Obj2Str(text)
    static ttip_text
    static lastcall_tip
    static currTip2
    global ttOnOff
    currTip2:=currTip
    cMode:=(CoordMode=1?""Screen"":(CoordMode=2?""Window"":cCoordModeTT))
    CoordMode % cMode
    tooltip


    ttip_text:=text
    lUnevenTimers:=false 
    MouseGetPos xp1,yp1
    if (mode=4) ; set text offset from cursor
    {
        yp:=yp1+15
        xp:=xp1
    }	
    else
    {
        if (xp=""NaN"")
            xp:=xp1 + 50
        if (yp=""NaN"")
            yp:=yp1 + 50
    }
    tooltip % ttip_text,xp,yp,% currTip
    if (mode=1) ; remove after given time
    {
        SetTimer RemoveTTIP, % ""-"" to
    }
    else if (mode=2) ; remove, but repeatedly show every ""to""
    {
        ; gosub,  A
        global to_1:=to
        global to2_1:=to2
        global tTimes:=Times
        Settimer lTTIP_SwitchOnOff,-100
    }
    else if (mode=3)
    {
        lUnevenTimers:=true
        SetTimer RepeatedShow, %  to
    }
    else if (mode=5) ; keep until function called again
    {

    }
    CoordMode % cCoordModeTT
    return text
    lTTIP_SwitchOnOff:
    ttOnOff++
    if mod(ttOnOff,2)	
    {
        gosub, RemoveTTIP
        sleep % to_1
    }
    else
    {
        tooltip % ttip_text,xp,yp,% currTip
        sleep % to2_1
    }
    if (ttOnOff>=ttimes)
    {
        Settimer lTTIP_SwitchOnOff, off
        gosub, RemoveTTIP
        return
    }
    Settimer lTTIP_SwitchOnOff, -100
    return

    RepeatedShow:
    ToolTip % ttip_text,,, % currTip2
    if lUnevenTimers
        sleep % to2
    Else
        sleep % to
    return
    RemoveTTIP:
    ToolTip,,,,currTip2
    return
}
CheckKeyHold(Button,ThreshholdTimeInSeconds:=0.7)
{
	Keywait % RegExReplace((Instr(Button, "" & "")?strsplit(Button, "" & "").2:Button), ""(\W*)""), % ""t"" ThreshholdTimeInSeconds
	return ErrorLevel
}
"
z5kYuh46,xml,dragonbs,C#,Saturday 2nd of December 2023 07:33:10 AM CDT,"using Medicines.Data;
using System;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Xml.Linq;

public class Deserializer
{
    private readonly MedicinesContext _context;

    public Deserializer(MedicinesContext context)
    {
        _context = context;
    }

    public void ImportPharmaciesFromXml(string xmlFilePath)
    {
        try
        {
            XElement root = XElement.Load(xmlFilePath);
            var pharmacies = root.Elements(""Pharmacy"")
                .Select(pharmacyElement => new Pharmacy
                {
                    Id = Convert.ToInt32(pharmacyElement.Element(""Id"").Value),
                    Name = pharmacyElement.Element(""Name"").Value,
                    PhoneNumber = pharmacyElement.Element(""PhoneNumber"").Value,
                    IsNonStop = Convert.ToBoolean(pharmacyElement.Element(""IsNonStop"").Value),
                    Medicines = pharmacyElement.Elements(""Medicine"")
                        .Select(medicineElement => new Medicine
                        {
                            
                        })
                        .ToList()
                })
                .ToList();

            foreach (var pharmacy in pharmacies)
            {
                if (IsValidPharmacy(pharmacy))
                {
                    _context.Pharmacies.Add(pharmacy);

                    foreach (var medicine in pharmacy.Medicines)
                    {
                        if (IsValidMedicine(medicine, pharmacy.Id))
                        {
                            _context.Medicines.Add(medicine);
                        }
                        else
                        {
                            PrintErrorMessage($""Medicine {medicine.Name} with producer {medicine.Producer} has validation errors and was not imported."");
                        }
                    }
                }
                else
                {
                    PrintErrorMessage($""Pharmacy {pharmacy.Name} has validation errors and was not imported."");
                }
            }

            _context.SaveChanges();
        }
        catch (Exception ex)
        {
            Console.WriteLine($""An error occurred while importing data from XML: {ex.Message}"");
        }
    }

    private bool IsValidPharmacy(Pharmacy pharmacy)
    {
  
    }

    private bool IsValidMedicine(Medicine medicine, int currentPharmacyId)
    {
       
    }

    private void PrintErrorMessage(string message)
    {
        Console.WriteLine($""Invalid Data! {message}"");
    }
}
"
BZJLj2iQ,kernel keyboard driver,fatalryuu,C++,Saturday 2nd of December 2023 07:28:30 AM CDT,"#include <ntddk.h>
#pragma warning( disable : 4189 )

typedef struct {
    PDEVICE_OBJECT LowerKbdDevice;
} DEVICE_EXTENSION, *PDEVICE_EXTENSION;

typedef struct _KEYBOARD_INPUT_DATA {
    USHORT UnitId;
    USHORT MakeCode;
    USHORT Flags;
    USHORT Reserved;
    ULONG  ExtraInformation;
} KEYBOARD_INPUT_DATA, *PKEYBOARD_INPUT_DATA;

PDEVICE_OBJECT myKbdDevice = NULL;

ULONG pendingKey = 0;

NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath);

VOID DriverUnload(PDRIVER_OBJECT DriverObject);

NTSTATUS DispatchPass(PDEVICE_OBJECT DeviceObject, PIRP Irp) {
    // копирование текущей структуры IRP в следующий элемент стека
    IoCopyCurrentIrpStackLocationToNext(Irp);

    // вызов следующего в стеке драйвера для обработки IRP
    return IoCallDriver(((PDEVICE_EXTENSION)DeviceObject->DeviceExtension)->LowerKbdDevice, Irp);
}

NTSTATUS ReadComplete(PDEVICE_OBJECT DeviceObject, PIRP Irp, PVOID Context) {
    UNREFERENCED_PARAMETER(DeviceObject);
    UNREFERENCED_PARAMETER(Context);
    // массив строк для интерпретации флагов в структуре KEYBOARD_INPUT_DATA
    CHAR* keyflag[4] = { ""KeyDown"", ""KeyUp"", ""E0"", ""E1"" };
    // получение указателя на массив структур KEYBOARD_INPUT_DATA из буфера системного IRP
    PKEYBOARD_INPUT_DATA Keys = (PKEYBOARD_INPUT_DATA)Irp->AssociatedIrp.SystemBuffer;
    // расчет количества структур KEYBOARD_INPUT_DATA в буфере
    int structnum = (int) (Irp->IoStatus.Information / sizeof(KEYBOARD_INPUT_DATA));
    int i;
    if (Irp->IoStatus.Status == STATUS_SUCCESS) {
        // вывод информации о скан-коде и флагах в отладочную консоль
        for (i = 0; i < structnum; i++) {
            DbgPrintEx(0, 0, ""the scan code is %x (%s)\n"", Keys[i].MakeCode, keyflag[Keys[i].Flags]);
        }
    }

    // пометка IRP как ожидающего завершения, если это необходимо
    if (Irp->PendingReturned) {
        IoMarkIrpPending(Irp);
    }

    // уменьшение счетчика ожидающих обработки запросов чтения
    pendingKey--;

    return Irp->IoStatus.Status;
}

NTSTATUS DispatchRead(PDEVICE_OBJECT DeviceObject, PIRP Irp) {
    // копирование текущей структуры IRP в следующий элемент стека
    IoCopyCurrentIrpStackLocationToNext(Irp);

    // устанавка обработчика завершения для IRP
    IoSetCompletionRoutine(Irp, ReadComplete, NULL, TRUE, TRUE, TRUE);

    // увеличение счетчика ожидающих обработки запросов чтения
    pendingKey++;

    // вызов следующего в стеке драйвера для обработки IRP
    return IoCallDriver(((PDEVICE_EXTENSION)DeviceObject->DeviceExtension)->LowerKbdDevice, Irp);
}

NTSTATUS MyAttachDevice(PDRIVER_OBJECT DriverObject) {
    NTSTATUS status;
    UNICODE_STRING TargetDevice = RTL_CONSTANT_STRING(L""\\Device\\KeyboardClass0"");

    // создание устройства
    status = IoCreateDevice(DriverObject, sizeof(DEVICE_EXTENSION), NULL, FILE_DEVICE_KEYBOARD, 0, FALSE, &myKbdDevice);
    if (!NT_SUCCESS(status)) {
        return status;
    }

    // установка флагов для устройства с буферизованным вводом/выводом
    myKbdDevice->Flags |= DO_BUFFERED_IO;
    // сброс флага инициализации устройства
    myKbdDevice->Flags &= ~DO_DEVICE_INITIALIZING;

    // заполнение нулями расширенной структуры устройства
    RtlZeroMemory(myKbdDevice->DeviceExtension, sizeof(DEVICE_EXTENSION));

    // присоединение устройства к клавиатуре
    status = IoAttachDevice(myKbdDevice, &TargetDevice, &((PDEVICE_EXTENSION)myKbdDevice->DeviceExtension)->LowerKbdDevice);
    if (!NT_SUCCESS(status)) {
        // удаление устройства в случае неудачи
        IoDeleteDevice(myKbdDevice);
        return status;
    }

    return STATUS_SUCCESS;
}

VOID DriverUnload(PDRIVER_OBJECT DriverObject) {
    LARGE_INTEGER interval = { 0 };
    PDEVICE_OBJECT DeviceObject = DriverObject->DeviceObject;
    interval.QuadPart = -10 * 1000 * 1000;

    // отсоединение устройства клавиатуры
    IoDetachDevice(((PDEVICE_EXTENSION)DeviceObject->DeviceExtension)->LowerKbdDevice);

    // ожидание завершения обработки всех оставшихся запросов чтения
    while (pendingKey) {
        KeDelayExecutionThread(KernelMode, FALSE, &interval);
    }

    // удаление устройства клавиатуры
    IoDeleteDevice(myKbdDevice);

    DbgPrintEx(0, 0, ""DriverUnload\n"");
}

NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath) {
    UNREFERENCED_PARAMETER(RegistryPath);
    NTSTATUS status;
    int i;

    // установка функции, которая выполнится при выгрузке драйвера
    DriverObject->DriverUnload = DriverUnload;

    // устанавка функций обработки по умолчанию для всех типов IRP
    for (i = 0; i <= IRP_MJ_MAXIMUM_FUNCTION; i++) {
        DriverObject->MajorFunction[i] = DispatchPass;
    }

    // устанвока функции для перехвата операций чтения
    DriverObject->MajorFunction[IRP_MJ_READ] = DispatchRead;

    // создание и присоединение устройства к драйверу
    status = MyAttachDevice(DriverObject);
    if (!NT_SUCCESS(status)) {
        DbgPrintEx(0, 0, ""Attaching is failed\n"");
    } else {
        DbgPrintEx(0, 0, ""Attaching is successful\n"");
    }
    return status;
}"
QqSCzJvN,Untitled,dragonbs,C#,Saturday 2nd of December 2023 07:19:23 AM CDT,"public void ImportDataFromJson(string jsonFilePath)
{
    try
    {
        string jsonContent = File.ReadAllText(jsonFilePath);
        List<Pharmacy> pharmacies = JsonConvert.DeserializeObject<List<Pharmacy>>(jsonContent);

        foreach (var pharmacy in pharmacies)
        {
            if (IsValidPharmacy(pharmacy))
            {
                _context.Pharmacies.Add(pharmacy);

                foreach (var medicine in pharmacy.Medicines)
                {
                    if (IsValidMedicine(medicine, pharmacy.Id))
                    {
                        _context.Medicines.Add(medicine);
                    }
                    else
                    {
                        PrintErrorMessage($""Medicine {medicine.Name} with producer {medicine.Producer} already exists in the current pharmacy."");
                    }
                }
            }
            else
            {
                PrintErrorMessage();
            }
        }

        _context.SaveChanges();
    }
    catch (Exception ex)
    {
        Console.WriteLine($""An error occurred while importing data from JSON: {ex.Message}"");
    }
}

public void ImportDataFromXml(string xmlFilePath)
{
    try
    {
        XElement root = XElement.Load(xmlFilePath);
        List<Pharmacy> pharmacies = root.Elements(""Pharmacy"")
            .Select(pharmacyElement => new Pharmacy
            {
                Id = Convert.ToInt32(pharmacyElement.Element(""Id"").Value),
                Name = pharmacyElement.Element(""Name"").Value,
                PhoneNumber = pharmacyElement.Element(""PhoneNumber"").Value,
                IsNonStop = Convert.ToBoolean(pharmacyElement.Element(""IsNonStop"").Value),
                Medicines = pharmacyElement.Elements(""Medicine"")
                    .Select(medicineElement => new Medicine
                    {
                        // Map properties accordingly
                    })
                    .ToList()
            })
            .ToList();

        foreach (var pharmacy in pharmacies)
        {
            if (IsValidPharmacy(pharmacy))
            {
                _context.Pharmacies.Add(pharmacy);

                foreach (var medicine in pharmacy.Medicines)
                {
                    if (IsValidMedicine(medicine, pharmacy.Id))
                    {
                        _context.Medicines.Add(medicine);
                    }
                    else
                    {
                        PrintErrorMessage($""Medicine {medicine.Name} with producer {medicine.Producer} already exists in the current pharmacy."");
                    }
                }
            }
            else
            {
                PrintErrorMessage();
            }
        }

        _context.SaveChanges();
    }
    catch (Exception ex)
    {
        Console.WriteLine($""An error occurred while importing data from XML: {ex.Message}"");
    }
}

private bool IsValidMedicine(Medicine medicine, int currentPharmacyId)
{
    // Check if the medicine already exists in the current pharmacy
    var existingMedicine = _context.Medicines
        .FirstOrDefault(m => m.Name == medicine.Name && m.Producer == medicine.Producer && m.PharmacyId == currentPharmacyId);

    // Check if the medicine exists in another pharmacy with the same name and producer
    var sameMedicineInOtherPharmacy = _context.Medicines
        .Any(m => m.Name == medicine.Name && m.Producer == medicine.Producer && m.PharmacyId != currentPharmacyId);

    return existingMedicine == null || sameMedicineInOtherPharmacy;
}

private void PrintErrorMessage(string message)
{
    Console.WriteLine($""Invalid Data! {message}"");
}
"
uCfh1Jwd,Untitled,dragonbs,C#,Saturday 2nd of December 2023 07:11:23 AM CDT,"﻿using System.Text;
using System.Xml.Serialization;
using System.Xml;

namespace Artillery.Utilities;

public class XmlHelper
{
    public T Deserialize<T>(string inputXml, string rootName)
    {
        XmlRootAttribute xmlRoot = new XmlRootAttribute(rootName);
        XmlSerializer xmlSerializer =
            new XmlSerializer(typeof(T), xmlRoot);

        using StringReader reader = new StringReader(inputXml);
        T deserializedDtos =
            (T)xmlSerializer.Deserialize(reader);

        return deserializedDtos;
    }

    public string Serialize<T>(T obj, string rootName)
    {
        StringBuilder sb = new StringBuilder();

        XmlRootAttribute xmlRoot =
            new XmlRootAttribute(rootName);
        XmlSerializer xmlSerializer =
            new XmlSerializer(typeof(T), xmlRoot);

        XmlSerializerNamespaces namespaces = new XmlSerializerNamespaces();
        namespaces.Add(string.Empty, string.Empty);

        XmlWriterSettings settings = new XmlWriterSettings
        {
            Indent = true
        };

        using (StringWriter writer = new StringWriter(sb))
        using (XmlWriter xmlWriter = XmlWriter.Create(writer, settings))
        {
            xmlSerializer.Serialize(xmlWriter, obj, namespaces);
        }

        return sb.ToString().TrimEnd();
    }
}"
NJ8ztSU7,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:58:44 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    
    int sum = 0;
    for(int i = n; i > 0; i /= 10) {
        int cifra = i % 10;
        sum += cifra;
    }
    cout << sum << endl;
    return 0;
}
"
vwHFL09U,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:52:50 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    
    int broj_na_cifri = 0;
    if(n == 0) {
        broj_na_cifri = 1;
    }
    for(int i = n; i > 0; i /= 10) {
        broj_na_cifri++;
    }
    
    cout << broj_na_cifri << endl;
    return 0;
}
"
3Z0xYVpf,kubectl describe pods/kubearmor-controller,Utkar5hM,Bash,Saturday 2nd of December 2023 06:46:40 AM CDT,"kubectl describe pods/kubearmor-controller-manager-5cc55d748d-5bvnm -n kubearmor
Name:             kubearmor-controller-manager-5cc55d748d-5bvnm
Namespace:        kubearmor
Priority:         0
Service Account:  kubearmor-controller-manager
Node:             g14arch/10.53.109.6
Start Time:       Sat, 02 Dec 2023 17:40:57 +0530
Labels:           kubearmor-app=kubearmor-controller
                  pod-template-hash=5cc55d748d
Annotations:      container.apparmor.security.beta.kubernetes.io/kube-rbac-proxy: unconfined
                  container.apparmor.security.beta.kubernetes.io/manager: unconfined
                  kubectl.kubernetes.io/default-container: manager
Status:           Pending
IP:               10.0.0.132
IPs:
  IP:           10.0.0.132
Controlled By:  ReplicaSet/kubearmor-controller-manager-5cc55d748d
Containers:
  manager:
    Container ID:  
    Image:         kubearmor/kubearmor-controller:latest
    Image ID:      
    Port:          9443/TCP
    Host Port:     0/TCP
    Command:
      /manager
    Args:
      --health-probe-bind-address=:8081
      --metrics-bind-address=127.0.0.1:8080
      --leader-elect
    State:          Waiting
      Reason:       ImageInspectError
    Ready:          False
    Restart Count:  0
    Limits:
      cpu:     500m
      memory:  128Mi
    Requests:
      cpu:        10m
      memory:     64Mi
    Liveness:     http-get http://:8081/healthz delay=15s timeout=1s period=20s #success=1 #failure=3
    Readiness:    http-get http://:8081/readyz delay=5s timeout=1s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /sys/kernel/security from sys-path (rw)
      /tmp/k8s-webhook-server/serving-certs from cert (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qkpw5 (ro)
  kube-rbac-proxy:
    Container ID:  cri-o://51f9a396601e8d11e91853eea47ff5a6c2fafa32c887f8f33536313b6a280723
    Image:         gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
    Image ID:      3b63df468a30f3f0443fbc6b36045812b7455f78f395e7764b8b55e0a0cf92b2
    Port:          8443/TCP
    Host Port:     0/TCP
    Args:
      --secure-listen-address=0.0.0.0:8443
      --upstream=http://127.0.0.1:8080/
      --logtostderr=true
      --v=0
    State:          Running
      Started:      Sat, 02 Dec 2023 17:42:06 +0530
    Ready:          True
    Restart Count:  0
    Limits:
      cpu:     500m
      memory:  128Mi
    Requests:
      cpu:        5m
      memory:     64Mi
    Environment:  <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qkpw5 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  cert:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  webhook-server-cert
    Optional:    false
  sys-path:
    Type:          HostPath (bare host directory volume)
    Path:          /sys/kernel/security
    HostPathType:  Directory
  kube-api-access-qkpw5:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason         Age                 From               Message
  ----     ------         ----                ----               -------
  Normal   Scheduled      15m                 default-scheduler  Successfully assigned kubearmor/kubearmor-controller-manager-5cc55d748d-5bvnm to g14arch
  Normal   Pulling        15m                 kubelet            Pulling image ""gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0""
  Normal   Pulled         14m                 kubelet            Successfully pulled image ""gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0"" in 1m7.957s (1m7.957s including waiting)
  Normal   Created        14m                 kubelet            Created container kube-rbac-proxy
  Normal   Started        14m                 kubelet            Started container kube-rbac-proxy
  Warning  Failed         12m (x10 over 15m)  kubelet            Error: ImageInspectError
  Warning  InspectFailed  20s (x68 over 15m)  kubelet            Failed to inspect image ""kubearmor/kubearmor-controller:latest"": rpc error: code = Unknown desc = short-name ""kubearmor/kubearmor-controller:latest"" did not resolve to an alias and no unqualified-search registries are defined in ""/etc/containers/registries.conf"""
bMCL4Nm7,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:45:06 AM CDT,"#include <iostream>


using namespace std;


int main()
{
int n;
cin>>n;
int proizvod=1;
for(int i=1;i<=n;i++){
    proizvod*=i;
}
    cout<<proizvod<<endl;
    return 0;
}"
1EVMJNpu,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:39:18 AM CDT,"#include <iostream>


using namespace std;


int main()
{
    int n;
    cin>>n;
    int sum=0;
    int x=1;
    for(int i=1;i<=n;i+=1){
        sum+=x;
        x+=3;
    }
        cout<<sum<<endl;
    return 0;
}"
E4th500Z,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:30:34 AM CDT,"#include <iostream>


using namespace std;


int main()
{
int n;
cin>>n;
int sum=0;
for(int i=1;i<=n;i++){
        int x;
cin>>x;
sum+=x;}
cout<<sum<<endl;
    return 0;
}"
yYzDZUMN,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:21:48 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    int sum = 0;
    for (int i = 1; i <= n; i += 1) {
        sum += i;
    }
    cout << sum << endl;
  
    return 0;
}
"
97VaLRzN,Untitled,Josif_tepe,C++,Saturday 2nd of December 2023 06:18:20 AM CDT,"#include <iostream>
using namespace std;

int main()
{
    for (int i = 100; i >= 1; i -= 1) {
        if(i % 2 == 1) {
            cout << i << "" "";
        }
    }
  
    return 0;
}
"
DAaVzDTn,.bashrc,taw420,Bash,Saturday 2nd of December 2023 06:18:07 AM CDT,"#/data/data/com.termux/files/home/.bashrc

### BUILTINS

## options
shopt -s histappend
shopt -s histverify
shopt -s histreedit
shopt -s cmdhist
shopt -s lithist
shopt -s checkwinsize
shopt -s checkjobs
shopt -s no_empty_cmd_completion
shopt -s autocd
shopt -s cdable_vars
shopt -s cdspell
shopt -s dirspell
shopt -s dotglob
shopt -s globstar
shopt -s extglob
shopt -s expand_aliases
shopt -s interactive_comments
shopt -s nocaseglob
shopt -s nocasematch
shopt -s progcomp_alias
set -o noclobber
set -o ignoreeof


### ENVIRONMENT VARIABLES

## user
export USER=""`id -un`""
export USERNAME=""`id -un`""
export LOGNAME=""`id -un`""

## directories
export SDCARD='/mnt/sdcard'

## tzdata
export TZ='America/Kentucky/Louisville'

## rust
export CARGO_BUILD_TARGET='aarch64-linux-android'

## history
export HISTCONTROL='ignoreboth;erasedups;'
export HISTTIMEFORMAT='%m/%d/%Y - %T  '
export HISTSIZE='-1'
export HISTFILESIZE='-1'
export HISTFILE='/data/data/com.termux/files/home/.bash_history'
export PROMPT_COMMAND=""${PROMPT_COMMAND:+$PROMPT_COMMAND$""\n""}history -a; history -c; history -r;""

## editor
export EDITOR='nano'

## less
export LESS='XIFMNRs --wordwrap'
export PAGER='less'
export VISUAL='less'
export MANPAGER='less'
export LESSCHARSET='utf-8'
export LESSOPEN='|/data/data/com.termux/files/usr/bin/lesspipe %s >&2'

## color manpages
export LESS_TERMCAP_mb=$(tput bold; tput setaf 2)
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 0; tput setab 3)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 5)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export GROFF_NO_SGR=1


### ALIASES

## ls lsd exa
alias ls='ls -AFX --color=auto --group-directories-first'
alias ll='ls -clhst --header'
alias lsd='lsd -AFX --color=auto --group-directories-first'
alias ldl='lsd -lht --header'
alias exa='exa --all --classify --sort=type --color=always --icons --group-directories-first'
alias exl='exa --long --header --git --group'

## Generic linux/bash
alias q='exit'
alias clr='clear'
alias now='date +""%D @ %T""'
alias dud='du -d 1 -h'
alias dus='du -sh * | sort -h'
alias path='echo -e ${PATH//:/\\n}'
alias findir='find . -type d -name'
alias findf='find . -type f -name'
alias hrep='history |grep'
alias jobs='jobs -l'
alias type='type -t'
alias ping='ping -c 10'
alias ports='netstat -alntp'
alias wget='wget -c'
alias ipv6='curl -Ss https://ipv6.ident.me'
alias ipv4='curl -Ss https://ipv4.ident.me'
alias bkgrnd='disown -a && exit'
alias mount='mount |column -t'
alias mv='mv -v'
alias cp='cp -Rfv'
alias rm='rm -Rfv'
alias du='du -h'
alias mkdir='mkdir -pv'

# apt & dpkg
alias auu='apt update -y  &&  apt upgrade -y'
alias ain='apt install -y'
alias arp='apt autoremove -y --purge'
alias par='apt purge -y --autoremove'
alias fix='apt install -fy'
alias deb='dpkg --install'
alias dcon='dpkg -a --configure'

## termux android storage
alias setup-storage='termux-setup-storage'
alias view='am start -a android.intent.action.VIEW -d ""content://com.android.externalstorage.documents/root/primary""'
alias pick='am start -a android.intent.action.OPEN_DOCUMENT -d /storage/emulated/0 -t '*/*''

## termux apt-wrapper pkg
alias change-repo='termux-change-repo'
alias install='pkg install -y'
alias in='pkg install -y'
alias uninstall='pkg uninstall -y'
alias un='pkg uninstall -y'
alias reinstall='pkg reinstall -y'
alias re='pkg reinstall -y'
alias update='pkg update -y'
alias upgrade='pkg upgrade -y'
alias uu='pkg update -y  &&  pkg upgrade -y'
alias show='pkg show'
alias list-all='pkg list-all'
alias list-in='pkg list-installed'
alias autoclean='pkg autoclean -y'
alias ac='pkg autoclean -y'
alias search='pkg search'
alias s='pkg search'

## openssh
alias permissh=""chown -Rfv $USER:$USER /data/data/com.termux/files/home/.ssh && chmod -Rfv 600 /data/data/com.termux/files/home/.ssh && chmod -v 644 /data/data/com.termux/files/home/.ssh/id_ed25519.pub && chmod -v 644 /data/data/com.termux/files/home/.ssh/id_rsa.pub && chmod 700 /data/data/com.termux/files/home/.ssh""
alias genssh='ssh-keygen -t ed25519 -C ""id_ed25519"" -f /data/data/com.termux/files/home/.ssh/id_ed25519  &&  ssh-keygen -t rsa -b 4096 -C ""id_rsa"" -f /data/data/com.termux/files/home/.ssh/id_rsa'
alias keyssh='cat /data/data/com.termux/files/home/.ssh/id_all'

## git
alias clone='git clone'
alias branch='git clone --single-branch -b'

## dit
alias dit-init='git init --bare /data/data/com.termux/files/home/dit.git'
alias dit='git --git-dir=/data/data/com.termux/files/home/dit.git --work-tree=/data/data/com.termux/files/home'
alias dit-config='dit config --local status.showUntrackedFiles no'
alias dit-status='dit status'
alias dit-add='dit add'
alias dit-commit='dit commit -m ""Termux Dotfiles""'
alias dit-branch='dit branch -M master'
alias dit-origin='dit remote add origin git@github.com:taw420/dit.git'
alias dit-push='dit push -u origin master'
alias dit-sync='dit-status  &&  dit-add  &&  dit-commit  &&  dit-push'

## proot
alias p='proot'
alias pu='proot -0 -w ~ /data/data/com.termux/files/usr/bin/bash'
alias pudo='proot -0'
alias shellcheck=""proot -0 shellcheck""
alias pd='proot-distro'
alias list-dist='proot-distro list'
alias pdin='proot-distro install'
alias pdun='proot-distro uninstall'
alias arch='proot-distro login archlinux'
alias ubuntu='proot-distro login ubuntu'
alias opensuse='proot-distro login opensuse'
alias alpine='proot-distro login alpine'
alias void='proot-distro login void'
alias debian='proot-distro login debian'
alias manjaro='proot-distro login manjaro-aarch64'
alias fedora='proot-distro login fedora'

## platform-tools
alias adbdev='adb devices'
alias adbsh='adb shell'
alias getprop='adb shell getprop'
alias list-packages='adb shell pm list packages -a'
alias list-files='adb shell pm list packages -f'
alias list-system='adb shell pm list packages -s'
alias list-disabled='adb shell pm list packages -d'
alias list-enabled='adb shell pm list packages -e'
alias list-3rd='adb shell pm list packages -3'

## chmod
alias u:u='chown $USER:$USER'
alias +x='chmod +x'
alias +w='chmod +w'
alias +r='chmod +r'
alias a+x='chmod a+x'
alias u+x='chmod u+x'
alias 000='chmod 000'
alias 600='chmod 600'
alias 644='chmod 644'
alias 655='chmod 655'
alias 666='chmod 666'
alias 677='chmod 677'
alias 700='chmod 700'
alias 744='chmod 744'
alias 755='chmod 755'
alias 766='chmod 766'
alias 777='chmod 777'

## cd
alias cd-='cd -'
alias cd..='cd ..'
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'
alias .......='cd ../../../../../../'
alias com.termux='cd /data/data/com.termux/'
alias files='cd /data/data/com.termux/files/'
alias usr='cd /data/data/com.termux/files/usr'
alias etc='cd /data/data/com.termux/files/usr/etc/'
alias bin='cd /data/data/com.termux/files/usr/bin/'
alias share='cd /data/data/com.termux/files/usr/share/'
alias opt='cd /data/data/com.termux/files/usr/opt/'
alias var='cd /data/data/com.termux/files/usr/var/'
alias tmp='cd /data/data/com.termux/files/usr/tmp'

## .config
alias .bashrc='nano /data/data/com.termux/files/home/.bashrc'
alias .bash_profile='nano /data/data/com.termux/files/home/.bash_profile'
alias .profile='nano /data/data/com.termux/files/home/.profile'
alias .bash_history='nano /data/data/com.termux/files/home/.bash_history'
alias .bash_login='nano /data/data/com.termux/files/home/.bash_login'
alias .bash_logout='nano /data/data/com.termux/files/home/.bash_logout'
alias .termux_banner='nano /data/data/com.termux/files/home/.termux_banner'
alias .gitconfig='nano /data/data/com.termux/files/home/.gitconfig'
alias .tmate.conf='nano /data/data/com.termux/files/home/.tmate.conf'
alias termux.properties='nano /data/data/com.termux/files/home/.termux/termux.properties'
alias config='nano /data/data/com.termux/files/home/.ssh/config'
alias authorized_keys='nano /data/data/com.termux/files/home/.ssh/authorized_keys'
alias config.conf='nano /data/data/com.termux/files/home/.config/neofetch/config.conf'
alias rclone.conf='nano /data/data/com.termux/files/home/.config/rclone/rclone.conf'
alias hosts.yml='nano /data/data/com.termux/files/home/.config/gh/hosts.yml'
alias config.json='nano /data/data/com.termux/files/home/.docker/config.json'
alias starship.toml='nano /data/data/com.termux/files/home/.config/starship.toml'
alias ngrok.yml='nano /data/data/com.termux/files/home/.config/ngrok/ngrok.yml'
alias bash.bashrc='nano /data/data/com.termux/files/usr/etc/bash.bashrc'
alias profile='nano /data/data/com.termux/files/usr/etc/profile'
alias motd='nano /data/data/com.termux/files/usr/etc/motd'
alias motd.sh='nano /data/data/com.termux/files/usr/etc/motd.sh'
alias pacman.conf='nano /data/data/com.termux/files/usr/etc/pacman.conf'
alias issue='nano /data/data/com.termux/files/usr/etc/issue'
alias issue.net='nano /data/data/com.termux/files/usr/etc/issue.net'
alias inputrc='nano /data/data/com.termux/files/usr/etc/inputrc'
alias sshd_config='nano /data/data/com.termux/files/usr/etc/ssh/sshd_config'
alias ssh_config='nano /data/data/com.termux/files/usr/etc/ssh/ssh_config'
alias nanorc='nano /data/data/com.termux/files/usr/etc/nanorc'
alias sources.list='nano /data/data/com.termux/files/usr/etc/apt/sources.list'


### FUNCTIONS

source_bashrc ()
{
  BASHRC=/data/data/com.termux/files/home/.bashrc
  MODIFIED_BASHRC=${MODIFIED_BASHRC:-$(stat -c %Y ""$BASHRC"")}
    if [[ $(stat -c %Y ""$BASHRC"") -gt $MODIFIED_BASHRC ]]; then
      if $BASH -n ""$BASHRC"" >&2 /dev/null; then
        source ""$BASHRC""
      else
        printf "".bashrc contains errors, not sourced"" >&2
      fi
      MODIFIED_BASHRC=$(stat -c %Y ""$BASHRC"")
    fi
}
export PROMPT_COMMAND=""${PROMPT_COMMAND:+$PROMPT_COMMAND$""\n""}source_bashrc""


## cp & cd & ls with mkdir if needed
## usage: cpg <file> <dir>
cpg ()
{
  if [[ -f ""$1"" && ! -d ""$2"" ]]; then
    mkdir ""$2""
      if [[ -f ""$1"" && -d ""$2"" ]]; then
        cp ""$1"" ""$2""
        builtin cd ""$2"" && ldl
      fi
  fi
}

## mv & cd & ls with mkdir if needed
## usage: mvg <file> <dir>
mvg ()
{
  if [[ -f ""$1"" && ! -d ""$2"" ]]; then
    mkdir ""$2""
      if [[ -f ""$1"" && -d ""$2"" ]]; then
        mv ""$1"" ""$2""
        builtin cd ""$2"" && ldl
    fi
  fi
}

## mkdir & cd & ls
## use: mkg <dir>
mkg ()
{
  if [ ! -d ""$2"" ]; then
    mkdir ""$2""
      if [ -d ""$2"" ]; then
        builtin cd ""$2"" && ldl
      fi
  fi
}

## cd & exa -l
## use: cd <dir>
cd ()
{
  if [ -n ""$1"" ]; then
    builtin cd ""$1"" && ldl
  else
    builtin cd ""$HOME"" && ldl
  fi
}

## Extract various archives
extract ()
{
  if [ -f ""$1"" ]; then
    case ""$1"" in
      *.tar.bz2)   tar xvjf ""$1""     ;;
      *.tar.gz)    tar xvzf ""$1""     ;;
      *.bz2)       bunzip2 ""$1""      ;;
      *.rar)       unrar x ""$1""      ;;
      *.gz)        gunzip ""$1""       ;;
      *.tar)       tar xvf ""$1""      ;;
      *.tbz2)      tar xvjf ""$1""     ;;
      *.tgz)       tar xvzf ""$1""     ;;
      *.zip)       unzip ""$1""        ;;
      *.Z)         uncompress ""$1""   ;;
      *.7z)        7z x ""$1""         ;;
      *)           echo ""'$1' is not a valid file!"";;
    esac
  else
    echo ""'$1' is not a valid file!""
  fi
}

## find and replace all occurences of string with other string in file
## usage: fnr <string> <string> <file>
fnr ()
{
  if [ -f ""$3"" ]; then
    sed -i ""s/$1/$2/g"" ""$3""
  fi
}

## create python3 virtual environment and activate it
## use: venv <dir>
venv ()
{
  if [ ! -d ""$1"" ] ; then
    python -m venv ""$1""
      if [ -e ""$1/bin/activate"" ]; then
        source ""$1/bin/activate""
      fi
  fi
}

pm-uninstall ()
{
    # Check if the file exists
    if [ -f ""$1"" ]; then
        # Loop through each line in the file
        while IFS= read -r package || [ -n ""$package"" ]; do
            # Check if the package name starts with ""com""
            if [[ ""$package"" == com* ]]; then
                # Uninstall the app using ADB
                adb shell pm uninstall --user 0 ""$package""
            else
                echo ""Skipping invalid package name: $package""
            fi
        done < ""$1""
    else
        echo ""File not found: $1""
    fi
}

## cheat.sh linux commands manpages practical examples
## usage: cht <cmd>
cht ()
{
  curl -Ss https://cht.sh/""$1""?style=manni
}

## 0x0.st file uploader
## usage: upload <file>
0x0.st-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F file=@""$1"" https://0x0.st
  fi
}

## 0x0.st file downloader
## usage: download <.txt> <save>
0x0.st-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://0x0.st/""$1"" -o ""$2""
  fi
}

## oshi.at file uploader
## usage: ul <file>
oshi.at-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F file=@""$1"" https://oshi.at
  fi
}

## oshi.at file downloader
## usage: dl <id> <file>
oshi.at-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://oshi.at/""$1"" -o ""$2""
  fi
}

## transfer.sh file uploader
## usage: ul <file>
transfer.sh-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F file=@""$1"" https://transfer.sh
  fi
}

## transfer.sh file downloader
## usage: dl <id> <file>
transfer.sh-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://transfer.sh/""$1"" -o ""$2""
  fi
}

## ttm.sh file uploader
## usage: ul <file>
ttm.sh-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F file=@""$1"" https://ttm.sh
  fi
}

## ttm.sh file downloader
## usage: dl <id> <file>
ttm.sh-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://ttm.sh/""$1"" -o ""$2""
  fi
}

## sprunge.us file uploader
## usage: ul <file>
sprunge.us-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F file=@""$1"" sprunge.us
  fi
}

## sprunge.us file downloader
## usage: dl <id> <file>
sprunge.us-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss sprunge.us/""$1"" -o ""$2""
  fi
}

## ix.io file uploader
## usage: ul <file>
ix.io-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F f:1=@""$1"" ix.io
  fi
}

## ix.io file downloader
## usage: dl <id> <file>
ix.io-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss ix.io/""$1"" -o ""$2""
  fi
}

## paste.rs file uploader
## usage: ul <file>
paste.rs-ul ()
{
  if [ -f $1 ]; then
    curl -Ss --data-binary @""$1"" https://paste.rs/
  fi
}

## paste.rs file downloader
## usage: dl <id> <file>
paste.rs-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://paste.rs/""$1"" -o ""$2""
  fi
}

## p.hashbang.ca file uploader
## usage: ul <file>
p.hashbang.ca-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F p=@""$1"" https://p.hashbang.ca
  fi
}

## p.hashbang.ca file downloader
## usage: dl <id> <file>
p.hashbang.ca-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://p.hashbang.ca/""$1"" -o ""$2""
  fi
}

## paste.c-net.org file uploader
## usage: ul <file>
paste.c-net.org-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F p=@""$1"" https://paste.c-net.org
  fi
}

## paste.c-net.org file downloader
## usage: dl <id> <file>
paste.c-net.org-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://paste.c-net.org/""$1"" -o ""$2""
  fi
}

## paste.sensio.no file uploader
## usage: ul <file>
paste.sensio.no-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F p=@""$1"" http://paste.sensio.no
  fi
}

## paste.sensio.no file downloader
## usage: dl <id> <file>
paste.sensio.no-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss http://paste.sensio.no/""$1"" -o ""$2""
  fi
}

## upaste.de file uploader
## usage: ul <file>
upaste.de-ul ()
{
  if [ -f $1 ]; then
    curl -Ss -F text=@""$1"" https://upaste.de/
  fi
}

## upaste.de file downloader
## usage: dl <id> <file>
upaste.de-dl ()
{
  if [ ! -f $2 ]; then
    curl -Ss https://upaste.de/""$1"" -o ""$2""
  fi
}

## adb wifi pair
## usage: pair <ip>:<port> <pair>
pair ()
{
  adb pair ""$1"":""$2"" ""$3"";
}

## adb wifi connect
## usage: connect <ip>:<port>
connect ()
{
  adb connect ""$1"":""$2"";
}

## share single file over http
## usage: netcattp <port> <file>
netcattp ()
{
  if [ -e ""$2"" ]; then
    nc -v -l ""$1"" < ""$2""
  fi
}

## share current directory over http
## usage: http.server <ip> <port> <dir>
http.server ()
{
  if [ -d ""$2"" ]; then
    python -m http.server --bind=""$1"" ""$2"" --directory=""$3""
  fi
}

## combine tldr cheat.sh eg
## combine_manpages <cmd>
combine_manpages ()
{
    command=$1
    tldr_manpage=$(tldr $command 2>/dev/null)
    eg_manpage=$(eg --pager cat $command 2>/dev/null)
    cheatsh_manpage=$(curl -sS ""https://cheat.sh/${command}?format=markdown"")

    if [ -n ""$tldr_manpage"" ] || [ -n ""$cheatsh_manpage"" ] || [ -n ""$eg_manpage"" ]; then
        echo ""# ${command} - Combined Manpage""
        if [ -n ""$tldr_manpage"" ]; then
            echo -e ""\n## TLDR\n""
            echo ""$tldr_manpage""
        fi
        if [ -n ""$cheatsh_manpage"" ]; then
            echo -e ""\n## Cheat.sh\n""
            echo ""$cheatsh_manpage""
        fi
        if [ -n ""$eg_manpage"" ]; then
            echo -e ""\n## EG\n""
            echo ""$eg_manpage""
        fi
    else
        echo ""No manpage found for ${command}""
    fi
}
alias ex='combine_manpages '

## Prompts

## starship
eval ""$(starship init bash)""

## gbt
#export PS1=""$(gbt)""

## [user@host:wdir](exit) $ ->
#export PS1=""\n\[\e[1;93m\][\[\e[m\]\[\e[1;94m\]\u\[\e[m\]\[\e[1;93m\]@\[\e[m\]\[\e[1;96m\]\h\[\e[m\]\[\e[1;93m\]:\[\e[m\]\[\e[1;95m\]\W\[\e[m\]\[\e[1;93m\]]\[\e[m\]\[\e[1;93m\](\[\e[m\]\[\e[1;91m\]\$?\[\e[m\]\[\e[1;93m\])\[\e[m\] \[\e[1;92m\]\$\[\e[m\] \[\e[1;92m\]->\[\e[m\] ""

## pwd
## ❯
#export PS1=""\n\[\e[1;95m\]\w\[\e[m\]\n\[\e[1;92m\]❯\[\e[m\] """
