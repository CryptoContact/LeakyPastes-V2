id,title,username,language,date,content
HunFbKsE,programMenuInstaller,jig487,Lua,Friday 15th of March 2024 06:59:24 PM CDT,"--pastebin get HunFbKsE installer

local files = {
    quarryMiner = ""XiXBZTJB"",
    stripMiner = ""umgqnKXR"",
    startup = ""CftYYagg""
}
 
term.clear()
term.setCursorPos(1,1)

for k, v in pairs(files) do
    if fs.exists(k.."".lua"") then fs.delete(k.."".lua"") end
    print(k.."": ""..v)
    shell.run(""pastebin get "", v, k.."".lua"")
end

print(""Code download complete! Opening menu..."")
sleep(3)

local startupFunc = require(""startup"")
startup()"
s3vHRkDr,Untitled,dereksir,C#,Friday 15th of March 2024 06:56:39 PM CDT,"// import the required libraries
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using TwoCaptcha.Captcha;

namespace TwoCaptcha
{
    public class Example
    {
        static void Main(string[] args)
        {
            // set up ChromeDriver
            IWebDriver driver = new ChromeDriver();

            // navigate to the target url
            string target_url = ""https://www.google.com/recaptcha/api2/demo"";
            driver.Navigate().GoToUrl(target_url);

            // create a new TwoCaptcha instance
			TwoCaptcha solver = new TwoCaptcha(""YOUR_API_KEY"");
			
			// create a new instance of the ReCaptcha class
            ReCaptcha captcha = new ReCaptcha();
            // set the site key for the ReCaptcha
            captcha.SetSiteKey(""6Le-wvkSAAAAAPBMRTvw0Q4Muexq9bi0DJwx_mJ-"");
            // set the URL of the target webpage where the ReCaptcha is located
            captcha.SetUrl(target_url);

			// declare solution variable
            string solution = null;
 
            try
            {
                // call the Solve method to solve the ReCaptcha
                solver.Solve(captcha).Wait();
                solution = captcha.Code;
                // print the captcha solution
                Console.WriteLine(""Captcha solved: "" + solution);
            }
            catch (AggregateException e)
            {
                // if an error occurs during captcha solving, catch the AggregateException and print the error message
                Console.WriteLine(""Error occurred: "" + e.InnerExceptions.First().Message); 
			}
 
            // select g-recaptcha-response element
            IWebElement recaptchaResponseElement = driver.FindElement(By.Id(""g-recaptcha-response""));
            // set the value of selected element to the CAPTCHA solution
            ((IJavaScriptExecutor)driver).ExecuteScript($""arguments[0].value = '{solution}';"", recaptchaResponseElement);
 
            // Click the submit button
            IWebElement submitButton = driver.FindElement(By.CssSelector(""#recaptcha-demo-submit""));
            submitButton.Click();
            
            // Take a screenshot
            ((ITakesScreenshot)driver).GetScreenshot().SaveAsFile(""screenshot.png"");
 
            // Close the browser
            driver.Quit();
        }
    }
}"
umgqnKXR,stripMiner,jig487,Lua,Friday 15th of March 2024 06:56:19 PM CDT,"local tArgs = {...}

local whitelist = {
    ""minecraft:diamond"",
    ""minecraft:emerald"",
    ""minecraft:raw_gold"",
    ""minecraft:raw_iron"",
    ""minecraft:raw_copper"",
    ""minecraft:coal"",
    ""minecraft:lapis_lazuli"",
    ""minecraft:quartz"",
    ""minecraft:ancient_debris""
}

--goes through the turtles inventory and drops anything not included in the list.
local function purgeInventory( list )
    local goodItem = false
    for i = 1, 16 do
        goodItem = false
        local itemTbl = turtle.getItemDetail(i)
        for j = 1, #list do
            if itemTbl then
                if itemTbl.name then
                    if itemTbl.name == list[j] then
                        goodItem = true
                        break
                    end
                end
            end
        end
        if goodItem == false then
            turtle.select(i)
            turtle.drop()
        end
    end
    turtle.select(1)
end

--attempts to move forward. If fails, mines the block/s in front of and above the turtle until it can
local function mineForward(blocks)
    blocks = blocks or 1
    for i = 1, blocks do
        while not turtle.forward() do
            turtle.dig()
        end
        turtle.digUp()
    end
end

local function drawDisplay(rowNumber,length,depth)
    term.clear()
    term.setCursorPos(1,1)
    term.setTextColor(colors.yellow)
    term.write(""Running: "")
    term.setTextColor(colors.lime)
    term.write(""simpleStripMiner"")
    term.setTextColor(colors.yellow)
    term.write("" !"")

    term.setCursorPos(1,3)
    term.setTextColor(colors.orange)
    term.write(""Current row: "")
    term.setTextColor(colors.cyan)
    term.write(rowNumber)
    term.setTextColor(colors.orange)
    term.write(""/"")
    term.setTextColor(colors.blue)
    term.write(length)

    local estimatedMined = (rowNumber)*depth*2 + (rowNumber)*6
    local maxBlocks = length*depth*2 + length*6

    term.setCursorPos(1,4)
    term.setTextColor(colors.orange)
    term.write(""Estimated mined blocks:"")
    term.setTextColor(colors.pink)
    term.write(estimatedMined)
    term.setTextColor(colors.orange)
    term.write(""/"")
    term.setTextColor(colors.magenta)
    term.write(maxBlocks)
    term.setTextColor(colors.orange)
    term.write(""!"")

    term.setCursorPos(1,5)
    term.setTextColor(colors.red)
    term.write(""Fuel "")
    term.setTextColor(colors.orange)
    term.write(""remaining: "")
    term.setTextColor(colors.gray)
    print(turtle.getFuelLevel())
    term.setTextColor(colors.brown)
    term.write(""Blocks "")
    term.setTextColor(colors.orange)
    term.write(""remaining: "")
    term.setTextColor(colors.gray)
    term.write(maxBlocks-estimatedMined)

    term.setCursorPos(1,8)
    term.setTextColor(colors.orange)
    term.write(""* Hold 'ctr + t' to stop!"")
    term.setTextColor(colors.red)
    term.setCursorPos(9,8)
    term.write(""ctr + t"")
    term.setTextColor(colors.orange)
    term.setCursorPos(13,8)
    term.write(""+"")

    term.setCursorPos(1,9)
    print(""* Use the 'refuel' command after stopping the program to refuel the turtle!"")
    term.setTextColor(colors.red)
    term.setCursorPos(12,9)
    term.write(""refuel"")
    term.setTextColor(colors.yellow)
    term.setCursorPos(28,9)
    term.write(""after"")

    term.setTextColor(colors.white)
end

--main program
--[[
term.clear()
term.setCursorPos(1,1)
print(""How many rows should I strip mine?"")
local length = read()

term.clear()
term.setCursorPos(1,1)
print(""How deep should each row be?"")
local depth = read()

term.clear()
term.setCursorPos(1,1)
print(""Should I strip mine to the right or left? (respond with either: 'right' or 'left')"")
local dir = read()

term.clear()
term.setCursorPos(1,1)
print(""I am currently set to automatically dispose of anything that is not:"")
for i = 1, #whitelist do 
    print(i.."": ""..whitelist[i])
end
print(""Do you want to disable this feature? (respond with 'y' or 'n')"")
local enablePurge = read()
]]

local length = tonumber(tArgs[1])
local depth  = tonumber(tArgs[2])
local dir    = tonumber(tArgs[3])

local turn1 = turtle.turnLeft
local turn2 = turtle.turnRight
if dir == ""right"" then
    turn1 = turtle.turnRight
    turn2 = turtle.turnLeft
end

local blocksSinceLastPurge = 0
drawDisplay(0,length,depth)

for x = 1, length do

    mineForward(depth)

    if x%2 ~= 0 then
        turn1()
        mineForward(3)
        turn1()
    else
        turn2()
        mineForward(3)
        turn2()
    end

    drawDisplay(x,length,depth)
    blocksSinceLastPurge = blocksSinceLastPurge + depth*2

    if blocksSinceLastPurge > 500 then
        purgeInventory(whitelist)
        blocksSinceLastPurge = 0
    end
end"
ffE4FRRv,Untitled,sissou123,HTML,Friday 15th of March 2024 06:53:38 PM CDT,"The Complete Guide to HTML
Go From Beginner To HTML Master In A Single Day! 
What you'll learn
Create well-structured web pages with HTML
Create complex HTML forms
Understand web accessibility and create accessible webpages 
for more:https://cuty.io/sRBX
"
nJFyVhwY,🤑 G2A.com Free Gift Card Guide Mar 2024 🤑,luckysw,GetText,Friday 15th of March 2024 06:52:24 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://drive.google.com/file/d/1aOBwxx73UL1B5zML5LsDdQ4k3YafTnrc/view
 
Working as of:
16 March 2024"
FZrfBNGn,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Friday 15th of March 2024 06:51:42 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_516900.pdf

Working as of:
15 March 2024"
CYB5pNfc,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Friday 15th of March 2024 06:49:23 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
15 March 2024















































"
GYwJVWYs,Untitled,dereksir,C#,Friday 15th of March 2024 06:48:31 PM CDT,"namespace TwoCaptcha
{
    public class Example
    {
        static void Main(string[] args)
        {
            // select g-recaptcha-response element
			IWebElement recaptchaResponseElement = driver.FindElement(By.Id(""g-recaptcha-response""));

            // set the value of selected element to the CAPTCHA solution
            ((IJavaScriptExecutor)driver).ExecuteScript($""arguments[0].value = '{solution}';"", recaptchaResponseElement);

            // Click the submit button
            IWebElement submitButton = driver.FindElement(By.CssSelector(""#recaptcha-demo-submit""));
            submitButton.Click();
			
			// Take a screenshot
            ((ITakesScreenshot)driver).GetScreenshot().SaveAsFile(""screenshot.png"");

            // Close the browser
            driver.Quit();
        }
    }
}"
ttPU2sHV,Untitled,Alexplazz,Python,Friday 15th of March 2024 06:43:06 PM CDT,"# PR(X) = (1-0.85) * 0.85(ETC)

class page:
    def __init__(self, name, links=None):
        if links is None:
            links = []

        self.name = name
        self.__links = links
        self.parent = False
        self.__latestPointsTo = []

    def __contains__(self, item):
        return item.name in self.__links

    def getInbounds(self):
        inboundPages = []
        for applicantPage in self.parent.getPages():
            if applicantPage == self:
                continue

            if self in applicantPage:
                inboundPages.append(applicantPage)
        self.__latestPointsTo = inboundPages
        return inboundPages

    def __len__(self):
        return len(self.__links)

    def __repr__(self):
        return f""Name:{self.name}\nPoints To:{','.join(self.__links)}\nPointed To By:{','.join([v.name for v in self.__latestPointsTo])}""
class index:
    def __init__(self, data = []):
        self.__data = data
        self.__pageRank = {}

    def index(self, page):
        self.__data.append(page)
        self.__pageRank[page] = 1
        page.parent = self

    def getPage(self, pageName):
        for v in self.__data:
            if v.name == pageName:
                return v
        return False

    def optimise(self):
        for indexedPage in self.__data:
            finalParameter = 0
            inboundPages = indexedPage.getInbounds()

            for v in inboundPages:
                finalParameter += (self.__pageRank[v] / len(v))

            self.__pageRank[indexedPage] = (1-0.85) * 0.85 * (finalParameter)

    def getPages(self):
        for v in self.__data:
            yield v

    @property
    def searchResults(self):
        record = False
        recordPage = False
        for v in self.getPages():
            if (not record) or self.__pageRank[v] > record:
                record = self.__pageRank[v]
                recordPage = v
        return recordPage

searchEngine = index()
searchEngine.index(page(""google"", [""youtube"", ""wiki""]))
searchEngine.index(page(""youtube"", [""wiki"", ""youtube"", ""google""]))
searchEngine.index(page(""wiki"", [""google"", ""youtube""]))

for i in range(500):
    searchEngine.optimise()

print(searchEngine.searchResults)
"
XiXBZTJB,quarryMiner,jig487,Lua,Friday 15th of March 2024 06:41:31 PM CDT,"local tArgs = {...}

--#########################################################
--declare and instantiate variables

local mineForward

local turn1
local turn2

local function mineLayer(length,width)
    for x = 1, length do
        mineForward(width)
        if x < length then
            if x%2 == 0 then
                turn2()
                mineForward(1)
                turn2()
            else
                turn1()
                mineForward(1)
                turn1()
            end
        end
    end
end

--##########################################################
--setup variables
local length = tonumber(tArgs[1])
local width  = tonumber(tArgs[2])
local depth  = tonumber(tArgs[3])

local dir = ""right""

local threeDeepLayers = math.floor(depth/3)
local remainder = depth%3
local twoDeepLayers = math.floor(remainder/2)
local oneDeepLayers = remainder%2
remainder = nil

--##########################################################
--main program

turn1 = turtle.turnRight
turn2 = turtle.turnLeft

term.clear()
term.setCursorPos(1,1)
print(""depth:"",depth)
print(""oneDeepLayers:"",oneDeepLayers)
print(""twoDeepLayers:"",twoDeepLayers)
print(""threeDeepLayers:"",threeDeepLayers)
print()

--do 1 deep layers:
mineForward =  function(blocks)
    blocks = blocks or 1
    for i = 1, blocks do
        while not turtle.forward() do
            turtle.dig()
        end
    end
end

print(""Starting 1 deep layers:"")
for i = 1, oneDeepLayers do
	print(""digLayer(forward)"")
    mineLayer(length,width-1)

	if i == oneDeepLayers then
		if twoDeepLayers > 0 then
			--prep location for 2 deep layer mining
            print(""goDown(1)"")
            turn1()
            turn1()
            turtle.digDown()
            turtle.down()
		elseif threeDeepLayers > 0 then
			--prep location for 3 deep layer mining
			print(""goDown(2)"")
            turn1()
            turn1()
            turtle.digDown()
            turtle.down()
            turtle.digDown()
            turtle.down()
		end
	else
		print(""goDown(1)"")
        turn1()
        turn1()
        turtle.digDown()
        turtle.down()

	end
    if length%2 == 0 then
        if dir == ""right"" then
            dir = ""left""
            turn1 = turtle.turnLeft
            turn2 = turtle.turnRight
        else
            dir = ""right""
            turn1 = turtle.turnRight
            turn2 = turtle.turnLeft
        end
    end
end
print(""Done with 1 deep layers"")

--do 2 deep layers:
mineForward =  function(blocks)
    blocks = blocks or 1
    for i = 1, blocks do
        turtle.digDown()
        while not turtle.forward() do
            turtle.dig()
        end
    end
    turtle.digDown()
end

print(""Starting 2 deep layers"")
for i = 1, twoDeepLayers do
	print(""digLayer(forward,down)"")
    mineLayer(length,width-1)

	if i == twoDeepLayers then
		if threeDeepLayers > 0 then
			--prep location for 3 deep layer mining
			print(""goDown(3)"")
            turn1()
            turn1()
            turtle.digDown()
            turtle.down()
            turtle.digDown()
            turtle.down()
            turtle.digDown()
            turtle.down()
		end
	else
		print(""goDown(2)"")
        turn1()
        turn1()
        turtle.digDown()
        turtle.down()
        turtle.digDown()
        turtle.down()
	end

    if length%2 == 0 then
        if dir == ""right"" then
            dir = ""left""
            turn1 = turtle.turnLeft
            turn2 = turtle.turnRight
        else
            dir = ""right""
            turn1 = turtle.turnRight
            turn2 = turtle.turnLeft
        end
    end
end
print(""Done with 2 deep layers"")

--do 3 deep layers:
mineForward =  function(blocks)
    blocks = blocks or 1
    for i = 1, blocks do
        turtle.digUp()
        turtle.digDown()
        while not turtle.forward() do
            turtle.dig()
        end
    end
    turtle.digUp()
    turtle.digDown()
end

for i = 1, threeDeepLayers do
    --prep location in case prep hasn't happened yet
    if i == 1 and oneDeepLayers == 0 and twoDeepLayers == 0 then
        turtle.digDown()
        turtle.down()
    end
	print(""digLayer(up,forward,down)"")
    mineLayer(length,width-1)

    if i < threeDeepLayers then
	    print(""goDown(3)"")
        turn1()
        turn1()
        turtle.digDown()
        turtle.down()
        turtle.digDown()
        turtle.down()
        turtle.digDown()
        turtle.down()
    end

    if length%2 == 0 then
        if dir == ""right"" then
            dir = ""left""
            turn1 = turtle.turnLeft
            turn2 = turtle.turnRight
        else
            dir = ""right""
            turn1 = turtle.turnRight
            turn2 = turtle.turnLeft
        end
    end
end

print(""Finished quarrying!"")
print(""Press 'enter' to return to menu"")
read()"
CftYYagg,programMenuGUI,jig487,Lua,Friday 15th of March 2024 06:37:09 PM CDT,"local quarryMiner = require(""quarryMiner"")
local stripMiner = require(""stripMiner"")

--##Key grabber##
--local evt, key = os.pullEvent(""key"")

local titleColor = colors.lightBlue
local menuColor = colors.purple
local textColor = colors.white
local highlightColor = colors.pink

local menuColors = {
    title = titleColor,
    menu = menuColor,
    text = textColor,
    highlight = highlightColor
}

--(menu = array of strings, colorList = array of named colors)
--returns: cursor as int, item name as string, bool as true if user chose option/ false if user wants to exit
local function openMenu(menu,colorList)
    local col = term.getTextColor()
    local cursor = 1
    term.clear()
    while true do
        term.setCursorPos(1,1)
        term.setTextColor(colorList.menu)
        print(""Use the arrow keys to navigate"")
        print(""Press 'enter' to select, 'backspace' to exit"")
        if menu.name then
            term.setTextColor(colorList.title)
            print(""<<< ""..menu.name.."" >>>"")
        end
        term.setCursorPos(1,5)
        for i = 1, #menu do
            if cursor == i then
                term.setTextColor(colorList.highlight)
                print(""{""..i..""} ""..menu[i])
            else
                term.setTextColor(colorList.text)
                print(""[""..i..""] ""..menu[i])
            end
        end

        local evt, key = os.pullEvent(""key"")
        key = keys.getName(key)
        if key == ""up"" and cursor > 1 then
            cursor = cursor - 1
        elseif key == ""down"" and cursor < #menu then
            cursor = cursor + 1
        --elseif key == ""left"" then
        --elseif key == ""right"" then
        elseif key == ""enter"" then
            term.setTextColor(col)
            return cursor, menu[cursor], true
        elseif key == ""backspace"" then
            term.setTextColor(col)
            return cursor, menu[cursor], false
        end 
    end
end

local function openNumberMenu(menu,colorList,numberList)
    --numberList = numberList or {}
    if numberList == nil then
        numberList = {}
        for i = 1, #menu do
            numberList[i] = 0
        end
    end

    local col = term.getTextColor()
    local cursor = 1
    --term.clear()
    while true do
        term.clear()
        term.setCursorPos(1,1)
        term.setTextColor(colorList.menu)
        print(""Use the arrow keys to navigate"")
        print(""Press 'enter' to select, 'backspace' to exit"")
        if menu.name then
            term.setTextColor(colorList.title)
            print(""<<< ""..menu.name.."" >>>"")
        end
        term.setCursorPos(1,5)
        for i = 1, #menu do
            if cursor == i then
                term.setTextColor(colorList.highlight)
                print(""{""..i..""} ""..menu[i].."": ""..numberList[i])
            else
                term.setTextColor(colorList.text)
                print(""[""..i..""] ""..menu[i].."": ""..numberList[i])
            end
        end

        local len = #menu+2
        if cursor == len-1 then
            term.setTextColor(colorList.highlight)
            print(""{""..(len-1)..""} Confirm"")
            term.setTextColor(colorList.text)
            print(""[""..(len)..""] Exit"")
        elseif cursor == len then
            term.setTextColor(colorList.text)
            print(""[""..(len-1)..""] Confirm"")
            term.setTextColor(colorList.highlight)
            print(""{""..(len)..""} Exit"")
        else
            term.setTextColor(colorList.text)
            print(""[""..(len-1)..""] Confirm"")
            print(""[""..(len)..""] Exit"")
        end

        local evt, key = os.pullEvent(""key"")
        key = keys.getName(key)
        if key == ""up"" and cursor > 1 then
            cursor = cursor - 1
        elseif key == ""down"" and cursor < len then
            cursor = cursor + 1
        --elseif key == ""left"" then
        --elseif key == ""right"" then
        elseif key == ""enter"" then
            if cursor == len-1 then
                term.setTextColor(col)
                return cursor, numberList, true
            elseif cursor == len then
                term.setTextColor(col)
                return cursor, numberList, false
            else
                local lineLen = #(""{""..cursor..""} ""..menu[cursor].."": "")
                term.setCursorPos(lineLen+1,cursor+4)
                term.setTextColor(colorList.menu)
                numberList[cursor] = tonumber(read(nil,nil,nil,tostring(numberList[cursor])))
                term.setTextColor(colorList.text)
            end
        elseif key == ""backspace"" then
            term.setTextColor(col)
            return cursor, numberList, false
        end
    end
end

--######### Main Program Start ##############

local menu = {name = ""Main Menu"", ""Quarry Miner"", ""Strip Miner""}

local quarryMenu = {name = ""Quarry Miner"", ""X (right)"", ""Y (forward)"", ""Z (depth)""}
local quarryNums = {0,0,0}

local stripMineMenu = {name = ""Strip Miner"", ""X (columns)"", ""Y (depth)"", ""direction (0=right, 1=left)""}
local stripMineNums = {0,0,0}

while true do
    local cursor,_,_ = openMenu(menu,menuColors)
    term.clear()

    if cursor == 1 then
        _,quarryNums,val = openNumberMenu(quarryMenu,menuColors,quarryNums)
        if val == true then
            quarryMiner(quarryNums)
        end
    elseif cursor == 2 then
        _,stripMineNums,val = openNumberMenu(stripMineMenu,menuColors,stripMineNums)
        if val == true then
            stripMiner(stripMineNums)
        end
    end
    term.clear()
end"
AQPrWiGL,sketchYetch.ino,j0h,Arduino,Friday 15th of March 2024 06:36:15 PM CDT,"#include <Encoder.h>
#include <Keyboard.h>

// Deine IO
#define ENCODER1_PINA 1
#define ENCODER1_PINB 3
#define ENCODER2_PINA 5
#define ENCODER2_PINB 7
#define color_Btn     11  // g key
#define clear_Btn     27  // c key
#define lift_Btn      9   // l key
#define save_Btn      29  // s key
#define demo_Btn      31  // d
// Create encoder objects
// Apparently encoder.h inits my pins
Encoder encoder1(ENCODER1_PINA, ENCODER1_PINB);
Encoder encoder2(ENCODER2_PINA, ENCODER2_PINB);

// Variables to track encoder movement direction
int prevEncoder1Position = 0;
int prevEncoder2Position = 0;

void setup() {
  //pinMode(ENCODER1_PINA, INPUT_PULLUP);
  //pinMode(ENCODER1_PINB, INPUT_PULLUP);
  //pinMode(ENCODER2_PINA, INPUT_PULLUP);
  //pinMode(ENCODER2_PINB, INPUT_PULLUP);
  pinMode(color_Btn, INPUT_PULLUP);
  pinMode(clear_Btn, INPUT_PULLUP);
  pinMode(lift_Btn,  INPUT_PULLUP);
  pinMode(save_Btn,  INPUT_PULLUP);
  pinMode(demo_Btn,  INPUT_PULLUP);  
  
  Serial.begin(9600);
  delay(3000);
  while (!Serial) {
    ; // Wait for serial port to connect
  }

  Keyboard.begin();
}

void loop() {
  // Read encoder positions
  int encoder1Position = encoder1.read();
  int encoder2Position = encoder2.read();

  // Detect encoder 1 movement direction
  int encoder1Direction = 0;
  if (encoder1Position > prevEncoder1Position) {
    encoder1Direction = 1; // Positive direction
  } else if (encoder1Position < prevEncoder1Position) {
    encoder1Direction = -1; // Negative direction
  }

  // Detect encoder 2 movement direction
  int encoder2Direction = 0;
  if (encoder2Position > prevEncoder2Position) {
    encoder2Direction = 1; // Positive direction
  } else if (encoder2Position < prevEncoder2Position) {
    encoder2Direction = -1; // Negative direction
  }

  // Update previous positions for next iteration
  prevEncoder1Position = encoder1Position;
  prevEncoder2Position = encoder2Position;

  // Use encoder direction variables to perform actions
  if (encoder1Direction == 1) {
    Keyboard.press(KEY_LEFT_ARROW);
    Keyboard.release(KEY_LEFT_ARROW);
  } else if (encoder1Direction == -1) {
    Keyboard.press(KEY_RIGHT_ARROW);
    Keyboard.release(KEY_RIGHT_ARROW);
  } else {
    Keyboard.release(KEY_RIGHT_ARROW);
    Keyboard.release(KEY_LEFT_ARROW);
  }

  if (encoder2Direction == 1) {
    Keyboard.press(KEY_UP_ARROW);
    Keyboard.release(KEY_UP_ARROW);
  } else if (encoder2Direction == -1) {
    //Serial.println(""Encoder 2: Negative"");
    Keyboard.press(KEY_DOWN_ARROW);
    Keyboard.release(KEY_DOWN_ARROW);
  } else {
    Keyboard.release(KEY_DOWN_ARROW);
    Keyboard.release(KEY_UP_ARROW);
  }

 
  if(digitalRead(color_Btn) == LOW){
   // Serial.println(""G"");
    Keyboard.press(KEY_G);
    Keyboard.release(KEY_G);
    }
  if(digitalRead(clear_Btn) == LOW){
    //Serial.println(""C"");
    Keyboard.press(KEY_C);
    Keyboard.release(KEY_C);
    }
    
  if(digitalRead(lift_Btn) == LOW){
    //Serial.println(""L"");
    Keyboard.press(KEY_L);
    Keyboard.release(KEY_L);
    }
/* 
  if(digitalRead(save_Btn) == LOW){
    Serial.println(""S"");
    //Keyboard.press(KEY_S);
    //Keyboard.release(KEY_S);
    delay(3000); //can we save a file in 3s?
    } 

  if(digitalRead(demo_Btn) == LOW){
    Serial.println(""D"");
    //Keyboard.press(KEY_D);
    //Keyboard.release(KEY_D);
    }   
*/
  // Delay to prevent spamming
  delay(100);
}
"
PrwvbT5N,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Friday 15th of March 2024 06:35:23 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Self destroy pastes
Share pastes on social network
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
iqnqnAqm,MOVEIS-SEARCH.py,Najeebsk,Python,Friday 15th of March 2024 06:17:03 PM CDT,"import tkinter as tk
from tkinter import scrolledtext
import subprocess
import webbrowser
from imdb import IMDb

def search_movies():
    keyword = entry_search.get()
    ia = IMDb()
    movies = ia.search_movie(keyword)
    result_text.delete('1.0', tk.END)
    if not movies:
        result_text.insert(tk.END, ""No results found."")
    else:
        for movie in movies[:10]:  # Displaying the first 10 results
            title = movie['title']
            year = movie.get('year', 'N/A')  # Get the year if available, otherwise use 'N/A'
            result_text.insert(tk.END, f""{title} ({year})\n"")
            if 'imdb_id' in movie:
                link = f""https://www.imdb.com/title/{movie['imdb_id']}/""
                result_text.insert(tk.END, f""Link: {link}\n\n"")
            else:
                result_text.insert(tk.END, ""\n"")

def open_browser():
    selected_text = result_text.tag_ranges(tk.SEL)
    if selected_text:
        selected_movie_link = result_text.get(*selected_text).strip()
        if selected_movie_link.startswith(""http://"") or selected_movie_link.startswith(""https://""):
            webbrowser.open(selected_movie_link)
        else:
            # Assuming selected_movie_link is the movie title and we construct the m4ufree link
            m4ufree_link = f""https://m4ufree.vip/search/{selected_movie_link}.html""
            webbrowser.open(m4ufree_link)

# GUI
root = tk.Tk()
root.title(""Movie Search"")

# Define colors
background_color = '#333333'
text_color = '#FFFFFF'
button_color = '#4CAF50'
button_text_color = '#FFFFFF'

root.config(bg=background_color)

frame_search = tk.Frame(root, bg=background_color)
frame_search.pack(pady=10)

label_search = tk.Label(frame_search, text=""Enter Movie Name:"", bg=background_color, fg=text_color)
label_search.pack(side=tk.LEFT)

entry_search = tk.Entry(frame_search, width=30)
entry_search.pack(side=tk.LEFT)

button_search = tk.Button(frame_search, text=""Search"", command=search_movies, bg=button_color, fg=button_text_color)
button_search.pack(side=tk.LEFT, padx=10)

frame_result = tk.Frame(root, bg=background_color)
frame_result.pack(pady=10)

result_text = scrolledtext.ScrolledText(frame_result, width=50, height=20, bg=background_color, fg=text_color)
result_text.pack(side=tk.LEFT)

button_open_browser = tk.Button(frame_search, text=""Open in Browser"", command=open_browser, bg=button_color, fg=button_text_color)
button_open_browser.pack(side=tk.LEFT)

root.mainloop()
"
xHc5eadz,interfaces_firewall,tferreira,Bash,Friday 15th of March 2024 06:12:50 PM CDT,"# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

auto enp0s3
iface enp0s3 inet static
        address 172.17.0.1
        netmask 255.255.255.0
        network 172.17.0.0
        broadcast 172.17.0.255

auto enp0s8
iface enp0s8 inet static
        address 192.168.200.1
        netmask 255.255.255.0
        network 192.168.200.0
        broadcast 192.168.200.255


# The primary network interface
auto enp0s9
iface enp0s9 inet dhcp

auto enp0s10
iface enp0s10 inet static
        address 192.168.56.200/24
"
4M2maYyC,Install PIP manually,Justman10000,Bash,Friday 15th of March 2024 04:45:39 PM CDT,"# You need Python
## Buily manually with https://www.build-python-from-source.com
## Or with APT (apt install python3 -y)

wget https://files.pythonhosted.org/packages/4d/5b/dc575711b6b8f2f866131a40d053e30e962e633b332acf7cd2c24843d83d/setuptools-69.2.0.tar.gz
gunzip setuptools-69.2.0.tar.gz
tar xvf setuptools-69.2.0.tar.gz
cd setuptools-69.2.0
pythom setup.py install

wget https://files.pythonhosted.org/packages/94/59/6638090c25e9bc4ce0c42817b5a234e183872a1129735a9330c472cc2056/pip-24.0.tar.gz
gunzip pip-24.0.tar.gz
tar xvf pip-24.0.tar.gz
cd pip-24.0
pythom setup.py install

rm -r setuptools-69.2.0 pip-24.0

python -m pip install pip --break-system-packages --force-reinstall
python -m pip install setuptools --break-system-packages --force-reinstall"
v58LuVs4,Untitled,swte,JavaScript,Friday 15th of March 2024 04:32:16 PM CDT,"document.addEventListener('DOMContentLoaded', function(){window.location.search.includes('blabla') && (document.getElementById('testcheckbox').checked = true);});"
8Vg1SAR4,MovieProjection Offline,misiekii123,Python,Friday 15th of March 2024 04:19:23 PM CDT,"import vlc
import time
import schedule
import threading
import os

def playMovie():
    instance = vlc.Instance()
    player = instance.media_player_new()
    media = instance.media_new(sciezka)
    player.set_media(media)
    player.set_fullscreen(True)

    # Rozpoczęcie odtwarzania
    player.play()

    # Oczekiwanie na zakończenie odtwarzania
    while not player.get_state() == vlc.State.Ended:
        time.sleep(1)

    # Zatrzymaj odtwarzacz po zakończeniu filmu
    player.stop()

    # os.system(""cls"")
    print(""Film zakończony."")

def schedule_play():
    print(f""Odtwarzanie filmu o godzinie: {time_to_start}"")
    schedule.every().day.at(time_to_start).do(playMovie)

print('''Wybierz opcję:
      1. 9.30
      2. 11.00
      3. Inne\n''')
x = int(input())

if x == 1:
    time_to_start = ""09:15""
    sciezka = input(""Podaj ścieżkę filmu: "")
    while not os.path.exists(sciezka):
        print(""Podana ścieżka nie istnieje. Spróbuj ponownie."")
        sciezka = input(""Podaj ścieżkę filmu: "")
    os.system(""cls"")
elif x == 2:
    time_to_start = ""10:45""
    sciezka = input(""Podaj ścieżkę filmu: "")
    while not os.path.exists(sciezka):
        print(""Podana ścieżka nie istnieje. Spróbuj ponownie."")
        sciezka = input(""Podaj ścieżkę filmu: "")
    os.system(""cls"")
else:
    time_to_start = input(""Podaj godzinę rozpoczęcia: "")
    sciezka = input(""Podaj ścieżkę filmu: "")
    while not os.path.exists(sciezka):
        print(""Podana ścieżka nie istnieje. Spróbuj ponownie."")
        sciezka = input(""Podaj ścieżkę filmu: "")
    os.system(""cls"")



# Zarejestruj zadanie w harmonogramie
schedule_play()

def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)

# Uruchom harmonogram w osobnym wątku
schedule_thread = threading.Thread(target=run_schedule)
schedule_thread.start()

# Czekaj na zakończenie wątku harmonogramu
schedule_thread.join()
"
X5dmVFnN,reciprocal_sms_error,dasarijit95,JSON,Friday 15th of March 2024 04:17:54 PM CDT,"{
    ""@timestamp"": ""2024-03-15T19:00:00.567668725Z"",
    ""logger_name"": ""reactor.core.publisher.Operators"",
    ""level"": ""ERROR"",
    ""message"": ""Operator called default onErrorDropped"",
    ""thread_name"": ""default-nioEventLoopGroup-1-4"",
    ""@version"": ""0664c243fe14a651df30287ba895878dfdf7ef49"",
    ""stack_trace"": ""com.gopuff.commerce.common.exception.ServerException: Failed to build advocate SMS\n\tat com.gopuff.consumer.referral.util.SmsBuilderUtil.buildAdvocateReciprocalMessage(SmsBuilderUtil.java:45)\n\tat com.gopuff.consumer.referral.service.manager.ReciprocalManager.lambda$awardReciprocalCoupon$8(ReciprocalManager.java:113)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:158)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:210)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.FluxSwitchMapNoPrefetch$SwitchMapInner.onNext(FluxSwitchMapNoPrefetch.java:407)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:180)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:158)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat io.micronaut.configuration.metrics.binder.web.WebMetricsPublisher$1.onNext(WebMetricsPublisher.java:166)\n\tat io.micronaut.configuration.metrics.binder.web.WebMetricsPublisher$1.onNext(WebMetricsPublisher.java:151)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)\n\tat reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:158)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)\n\tat reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:878)\n\tat reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:803)\n\tat reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161)\n\tat io.micronaut.http.client.netty.ForwardingSubscriber.onNext(ForwardingSubscriber.java:45)\n\tat io.micronaut.http.client.netty.NettyFuturePublisher$1.lambda$request$0(NettyFuturePublisher.java:54)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.forwardResponseToPromise(DefaultHttpClient.java:2198)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.channelReadInstrumented(DefaultHttpClient.java:2171)\n\tat io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler.channelReadInstrumented(DefaultHttpClient.java:2139)\n\tat io.micronaut.http.client.netty.SimpleChannelInboundHandlerInstrumented.channelRead0(SimpleChannelInboundHandlerInstrumented.java:46)\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)\n\tat io.micronaut.http.client.netty.ResettableReadTimeoutHandler$NextInterceptor.channelRead(ResettableReadTimeoutHandler.java:92)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.micronaut.http.client.netty.ResettableReadTimeoutHandler.channelRead(ResettableReadTimeoutHandler.java:64)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n""
}"
H23shX7g,strfloatint,gruntfutuk,Python,Friday 15th of March 2024 04:15:09 PM CDT,"txt = input('Submission: ')  # give user a prompt
lista = txt.replace(',', ' ').split()
strt = """"
flt = 0.0
intt = 0
seen_int = False
kind = None
for entry in lista:
    if kind is None:
        if entry in ('str', 'float', 'int'):
            kind = entry  # what we expect next time
        else:  # in case user mistyped
            print(f'Unexpected word: {entry}')
    else:  # kind should reference one of str, float or int from previous loop
        if kind == ""str"":
            strt += entry.strip()  # remove leading/trailing spaces
        elif kind == ""float"":
            flt += float(entry)  # place in try/except to catch errors
        elif kind == ""int"":
            if seen_int:
                intt *= int(entry)  # place in try/except to catch errors
            else:  # don't want to multiple by 0 for first int
                intt = int(entry)  # place in try/except to catch errors
                seen_int = True
        kind = None  # ready for next word

print(intt)
print(flt)
print(strt)
"
JRf76Xgd,Untitled,internata,Python,Friday 15th of March 2024 03:35:00 PM CDT,"# Definisco la funzione che si occupera di contare le parole contenute nel parametro stringa di tipo str
def conta_parole_stringa(stringa:str):
    # Dichiaro un contatore(numerico) delle parole ,partendo da zero
    conta_parole = 0
    # mi imposto un contatore a meno uno per contare gli elementi 
    i = -1
    # Controllo se l'inzio della stringa e la fine contengano un carattere diverso da spazio
    # se lo sono incremento il numero di parole a +1
    if stringa[0] != "" "" and stringa[-1] != "" "":
        conta_parole += 1
    # Itero la stringa per carattere
    for carattere in stringa:
        #incremento di uno il contatore degli elementi
        i += 1
        # Controllo se il carattere è uguale a una spazio 
        # e controllo che quello che lo precede non lo sia 
        # incremento il conta_parole a ogni occorrenza
        if carattere == "" "" and stringa[i-1] != "" "":
            conta_parole += 1
    #riporto il valore del numero parole
    return conta_parole

stringa = ""Il pythoniano non smette mai di studiare""
risultato = conta_parole_stringa(stringa)
print(""Le parole sono : n°"",risultato)  "
2vaLD5NK,Untitled,internata,Python,Friday 15th of March 2024 03:32:55 PM CDT,"# Definisco la funzione che si occupera di contare le parole contenute nel parametro stringa di tipo str
def conta_parole_stringa(stringa:str):
    # Dichiaro un contatore(numerico) delle parole ,partendo da zero
    conta_parole =0
    # mi imposto un contatore a meno uno per contare gli elementi 
    i=-1
    # Controllo se l'inzio della stringa e la fine contengano un carattere diverso da spazio
    # se lo sono incremento il numero di parole a +1
    if stringa[0] != "" "" and stringa[-1] != "" "":
        conta_parole+=1
    # Itero la stringa per carattere
    for carattere in stringa:
        #incremento di uno il contatore degli elementi
        i+=1
        # Controllo se il carattere è uguale a una spazio 
        # e controllo che quello che lo precede non lo sia 
        # incremento il conta_parole a ogni occorrenza
        if carattere == "" "" and stringa[i-1] != "" "":
            conta_parole+=1
    #riporto il valore del numero parole
    return conta_parole

stringa=""Il pythoniano non smette mai di studiare""
print(""Le parole sono : n"" ,conta_parole_stringa(stringa))   "
vy5zuw4f,Identity Fraud-like Roblox Mirror.,mrmrcoder,Lua,Friday 15th of March 2024 03:32:54 PM CDT,"--[[
    Thank you using my script, and watching my videos! Consider subscribing for more!
    This Mirror works for any body type and should be able to handle layered clothing.
    This was made by @mrmrcoderkid on Youtube, consider susbcribing! :3
    You can get the model here or copy and paste the code below.

    Model: https://create.roblox.com/store/asset/16609232282/Identity-Fraud-Mirror
--]]

-- Module Script --

--[[
This is the ModuleScript for the mirror
All that this is is just a ""Library"" of functions and variables that
can be used by any other script that uses require(ModuleScript)


Note: 
Don't feel bad if you don't know how ""ReflectPart"" works. 
Even I don't fully comprehend it.
ReflectCFrame() was stolen from some guy on the devforum, 
although all the rest was made by me.

ya boy: @mrmrcoderkid on yt
--]]

local mirror_module = {}

mirror_module.range = 90 -- how many studs away for mirror to reflect localplayer

mirror_module.FindNonPlayerCharacters = function(mirrorPart)
	local range = mirror_module.range
	local npc_list = {}
	
	for i,v in pairs(workspace:GetChildren()) do
		if v:IsA(""Model"") and v:FindFirstChildOfClass(""Humanoid"") and not game.Players:GetPlayerFromCharacter(v) then
			table.insert(npc_list, v)
		end 
	end
	
	return npc_list
end

function mirror_module:ClearCharacter(MIRROR, FAKE_CHAR : Model)
	FAKE_CHAR:Destroy()
end

function mirror_module:ReflectPart(FAKE_PART : BasePart, REAL_PART : BasePart, MIRROR)
	local function reflectCFrame(cframe, mirror) -- THX BADGRAPHIX ON DEVFORUM.
		--Get the CFrame relative to the mirror
		local relCF = mirror.CFrame:toObjectSpace(cframe)

		--Get the original CFrame values
		local x, y, z,
		a, b, c,
		d, e, f,
		g, h, i = relCF:components()

		--Reflecting along Z direction - negate Z axis on 
		--all vectors
		local newCF = CFrame.new(
			x, y, -z,
			a, b, c,
			d, e, f,
			-g, -h, -i
		)

		--Convert back to world space
		local finalCFrame = mirror.CFrame:toWorldSpace(newCF)
		local x, y, z, r00, r01, r02, r10, r11, r12, r20, r21, r22 = finalCFrame:components()
		finalCFrame = CFrame.new(x, y, z, -r00, r01, r02, -r10, r11, r12, -r20, r21, r22)
		return finalCFrame
	end
	
	if FAKE_PART ~= nil then
		FAKE_PART.CFrame = reflectCFrame(REAL_PART.CFrame, MIRROR)
	end
end

function mirror_module:ReflectCharacter(FAKE_CHAR, REAL_CHAR, MIRROR)
	for i = 1, #FAKE_CHAR:GetChildren() do
		local _clone_item = FAKE_CHAR:GetChildren()[i]
		local _real_item = REAL_CHAR:FindFirstChild(_clone_item.Name)
		
		if _clone_item:IsA(""BasePart"") then
			mirror_module:ReflectPart(_clone_item, _real_item, MIRROR)
		end
	end
end

return mirror_module

-- Server Script --

local MIRROR_MODULE = require(game.ReplicatedStorage.mirrorFunctionality)
local mirrors = workspace.Special.Mirrors:GetChildren()

--[[
This Script is for the player to reflect characters that are in the server.
Since the server, under normal circumstances owns NPCs, then
there is no reason for the Client to handle all of the calculations every frame(.RenderStepped())

It is better to do the calculations at PhysicsProcess(.HeartBeat()) to save peformance.
--]]

game[""Run Service""].Heartbeat:Connect(function()
	for i,mirror in mirrors do
		local _npcs = MIRROR_MODULE.FindNonPlayerCharacters(mirror)
		if _npcs ~= nil then
			for i, npc in _npcs do -- npc reflect loop
				
				local fake_npc

				if not mirror.fakes:FindFirstChild(npc.Name) then
					npc.Archivable = true
					
					fake_npc = npc:Clone()
					fake_npc.Name = npc.Name
					
					for i, d in fake_npc:GetChildren() do
						if d:IsA(""BaseScript"") then
							d:Destroy()
						end
						
						if d:IsA(""BasePart"") then
							d.Anchored = true
							d.CanCollide = false
						end
					end
					
					fake_npc.Parent = mirror.fakes
					local owner_tag = Instance.new(""ObjectValue"", fake_npc)
					owner_tag.Name = ""owner""
					owner_tag.Value = npc
				else
					fake_npc = mirror.fakes:FindFirstChild(npc.Name)
				end


				if npc.Humanoid.Health <= 0 or npc == nil then
					local target = fake_npc or nil
					if target ~= nil then
						target:Destroy()
					end
				else
					MIRROR_MODULE:ReflectCharacter(fake_npc, npc, mirror)
				end
			end
		end

		if #mirror.fakes:GetChildren() > 0 then
			for i, fake in mirror.fakes:GetChildren() do -- remove character clones whose owners no longer belong on workspace.
				if not game.Players:GetPlayerFromCharacter(fake.owner.Value) then
					if not workspace:FindFirstChild(fake.Name) then
						fake:Destroy()
					end
				end
			end
		end
	end
end)

-- Client Script --

--[[
This script is for reflecting player characters.
Since each player has network ownership of their own characters, they can clone themselves.
This relieves the server from some burdens, saving peformance.
--]]

local RunService = game:GetService(""RunService"")
local camera = workspace.CurrentCamera
local mirrors = workspace.Special.Mirrors:GetChildren()
local MIRROR_MODULE = require(game.ReplicatedStorage.mirrorFunctionality)

function get_all_player_characters()
	local list_characters = {}
	for i,plr in game:GetService(""Players""):GetPlayers() do
		local char = plr.Character or nil
		if char ~= nil then
			table.insert(list_characters, char)
		end
	end
	return list_characters
end

RunService.RenderStepped:Connect(function(dt)
	for i, mirror in mirrors do
		local my_char = game.Players.LocalPlayer.Character
		if (my_char.PrimaryPart.Position - mirror.Position).magnitude < MIRROR_MODULE.range then
			if my_char ~= nil then
				local plr_characters = get_all_player_characters()
				if #plr_characters > 0 then
					for i, plrchar in plr_characters do -- npc reflect loop
						local fake_plr_name = tostring(plrchar.Name..""_""..game.Players:GetPlayerFromCharacter(my_char).UserId)
						local fake_npc

						if not mirror.fakes:FindFirstChild(fake_plr_name) then
							plrchar.Archivable = true

							fake_npc = plrchar:Clone()
							fake_npc.Name = fake_plr_name

							for i, d in fake_npc:GetChildren() do
								if d:IsA(""BaseScript"") then
									d:Destroy()
								end

								if d:IsA(""BasePart"") then
									d.Anchored = true
									d.CanCollide = false
								end
							end

							fake_npc.Parent = mirror.fakes
							local owner_tag = Instance.new(""ObjectValue"", fake_npc)
							owner_tag.Name = ""owner""
							owner_tag.Value = plrchar
						else
							fake_npc = mirror.fakes:FindFirstChild(fake_plr_name)
						end


						if plrchar.Humanoid.Health <= 0 or plrchar == nil then
							local target = fake_npc or nil
							if target ~= nil then
								target:Destroy()
							end
						else
							MIRROR_MODULE:ReflectCharacter(fake_npc, plrchar, mirror)
						end
					end
				end
			end
		end
	end
end)

local player = game.Players.LocalPlayer
local char = player.Character or script.Parent
local clone_name = char.Name..""_""..player.UserId

char.ChildAdded:Connect(function()
	for i,mirror in mirrors do
		if mirror.fakes:FindFirstChild(clone_name) then
			MIRROR_MODULE:ClearCharacter(mirror, mirror.fakes:FindFirstChild(clone_name))
		end
	end
end)

char.ChildRemoved:Connect(function()
	for i,mirror in mirrors do
		if mirror.fakes:FindFirstChild(clone_name) then
			MIRROR_MODULE:ClearCharacter(mirror, mirror.fakes:FindFirstChild(clone_name))
		end
	end
end)"
2VpSq3h4,Lua s2 l3,Erwollo,Lua,Friday 15th of March 2024 03:31:26 PM CDT,"local function positionPets(character, playerFolder, deltaTime, sin, cos)
	local petCount =  -- pobierzmy ilosc zwierzat z folderu gracza
		local rows = petCount / petsPerRow -- uzyjmy funkcji zaokraglajacej w gore z biblioteki math

	for i, pet in pairs(playerFolder:GetChildren()) do
		local row = (i - 1) / petsPerRow -- uzyjmy funkcji zaokraglajacej w dol z biblioteki math
		local col = (i - 1) % petsPerRow

		local characterSize =  -- pobierzmy rozmiar postaci
		local petSize =  -- pobierzmy rozmiar zwierzaka
		local petsInRow = petCount - row * petsPerRow, petsPerRow -- z odpowiedniej biblioteki znajdzmy najnizsza wartosc

		local x = (col - petsInRow / 2 + 0.5) * offsetX
		local y = petSize.Y / 2 - characterSize.Y / 2
		local z = (row * offsetZ) + offsetPlayer

		if character.Humanoid.MoveDirection.Magnitude > 0 then -- właściwość sprawdzająca czy gracz się rusza
			if pet:FindFirstChild(""Walks"") then
				local playerCFrame = character.PrimaryPart.CFrame
				local petCFrame = pet.PrimaryPart.CFrame
				local petDistance = CFrame.new(x, y + sin, z)
				local petRotation = CFrame.fromEulerAnglesXYZ(0,0,cos)
				pet:SetPrimaryPartCFrame(
					petCFrame:Lerp(playerCFrame * petDistance * petRotation, 0.1)
				)
				
			elseif pet:FindFirstChild(""Flying"") then
				pet:SetPrimaryPartCFrame(
					pet.PrimaryPart.CFrame:Lerp(
						character.PrimaryPart.CFrame * CFrame.new(x, y / 2 + math.sin(time() * 3) + 1, z),
						0.1
					)
				)
			end
			
		else
			if pet:FindFirstChild(""Walks"") then
				pet:SetPrimaryPartCFrame(
					pet.PrimaryPart.CFrame:Lerp(character.PrimaryPart.CFrame * CFrame.new(x, y, z), 0.1)
				)
				
			elseif pet:FindFirstChild(""Flying"") then
				pet:SetPrimaryPartCFrame(
					pet.PrimaryPart.CFrame:Lerp(
						character.PrimaryPart.CFrame * CFrame.new(x, y / 2 + math.sin(time() * 3) + 1, z),
						0.1
					)
				)
			end
		end
		
	end
end"
PJhyv1c5,Turtle Lava,DerMarten,Lua,Friday 15th of March 2024 03:17:16 PM CDT,"-- Lava Quelle vorne 
-- Tank unter der Turtle
while true do
	local success, data = turtle.inspect()
	if success then
	if(data.name == ""minecraft:lava_cauldron"") then
		turtle.select(1)
		turtle.place()
		turtle.dropDown()
		os.sleep(1)
		turtle.suckDown()
	end
	end
	turtle.turnRight()
	os.sleep(1)
end"
T3BRCabE,DecimalToBinary,Denis_Hristov,C,Friday 15th of March 2024 02:57:50 PM CDT,"#include <stdio.h>
#include <stdlib.h>

void toBinary(int* a){
    int binaryNum[16];

    int i = 0;

    while (*a > 0) {
        binaryNum[i] = *a % 2;

        *a = *a / 2;

        i++;
    }

    for (int j = i - 1; j >= 0; j--) {
        printf(""%d"", binaryNum[j]);
    }
}


int main()
{
    int a = 358;

    toBinary(&a);

    return 0;
}
"
xEtmQCzh,OddOrEven,Denis_Hristov,C,Friday 15th of March 2024 02:50:26 PM CDT,"#include <stdio.h>
#include <stdlib.h>

void oddOrEven(int* a){
    if(*a % 2 == 0){
        printf(""The number %d is even"", *a);
    }else{
        printf(""The number %d is odd"", *a);
    }

}


int main()
{
    int a = 6;

    oddOrEven(&a);

    return 0;
}
"
tjvTx8VT,ChangeValues,Denis_Hristov,C,Friday 15th of March 2024 02:48:06 PM CDT,"#include <stdio.h>
#include <stdlib.h>

void changeValues(int* a, int* b, int* temp){
    *temp = *a;
    *a = *b;
    *b = *temp;

    printf(""Value of a: %d\n"", *a);
    printf(""Value of b: %d"", *b);
}


int main()
{
    int a = 5;
    int b = 10;
    int temp;

    changeValues(&a, &b, &temp);

    return 0;
}
"
VsPmpLqK,snowybot completed,coinwalk,JavaScript,Friday 15th of March 2024 02:40:56 PM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = 0.0001;
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var newbe = olsenest;
var newer = ((Math.floor(olsenest/tens))*tens);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var fart = 0;
var shiet = olsenest;
var sweet = 2;
var belance = olsenest;
 
 
 
function soiled(){
newbe = document.getElementById('pct_balance').value;
if (newbe>shiet){
belance = belance+bolux;
shiet = parseFloat(newbe);
}
if (newbe<shiet){
belance = belance-bolux;
shiet = parseFloat(newbe);
}
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance<awesome)){
    bolux = bolux*2;
    fart = fart+1;
    olsen = parseFloat(belance);
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance>awesome)){
    bolux = bolux*2;
    fart = 1;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*2)))&&(fart>=2)){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 2;
    awesome = ((Math.ceil(belance/tens))*tens);
}
if (belance<(bolux*2)){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 0;
    awesome = ((Math.ceil(belance/tens))*tens);
}
if ((belance>(awesome+(tens*sweet)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 2;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (belance>=(olsenest*144000)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1);
}
soiled();"
hHjAaKBT,Untitled,Zeinab_Hamdy,C++,Friday 15th of March 2024 02:37:28 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define fixed(n) fixed << setprecision(n)
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
 
void  Zainab(){
            // #ifndef ONLINE_JUDGE
              freopen(""longpath.in"", ""r"", stdin);
              freopen(""longpath.out"", ""w"", stdout);
            // #endif
}



int n , m;
string s,t;

vector < vector < int > > dp;

int rec(int i , int j ){
    if(i >=n or j >= m) return 0;
    
    int & ret = dp[i][j];
    if(~ret)
        return ret ;

    ret =0;
    if(s[i] == t[j])
        ret = max(ret , 1 + rec(i +1 , j+1));
    
    ret = max(ret , rec(i+1 , j));
    ret = max(ret , rec(i , j +1));
    
    
    
    return ret;
}



void build(int i , int j ){
    
    if(i >=n or j >= m) return ;
    
    int ret = dp[i][j];
    
    if(s[i] == t[j] and ret == dp[i+1][j+1] +1 ) {
        cout << s[i] ;
        build(i+1 , j+1);
        return ;
    }
    
    if(ret == dp[i][j+1]){
        build(i , j+1);

    }
    else if(ret == dp[i+1][j]){
  
        build(i+1 , j);
    }
    
}
void myCode(){

cin >> s >> t;
n=sz(s) , m = sz(t);

dp.assign(n+1 , vector < int > (m+1 , -1));

int len= rec(0,0);
cout << len << nl;

build(0,0);


}
 
 
int main(){
                                   FastCode ;
                                    //  Zainab() ;
 
    int testCase=1;
        //   cin >> testCase ;
    
      for(int i=1 ; i<= testCase ; i++)
        myCode();
 
    return 0;
}"
QucWnTUZ,txt2xml,Python253,Python,Friday 15th of March 2024 02:23:26 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: txt2xml.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to an XML file (.xml).
Each line in the text file is a separate element in the XML.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'txt2xml.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Run the script.
4. The converted XML file ('txt2xml.xml') will be generated in the same directory.

Note: Adjust the 'txt_filename' and 'xml_filename' variables in the script as needed.
""""""

import xml.etree.ElementTree as ET

def txt_to_xml(txt_filename, xml_filename):
    root = ET.Element(""root"")
    with open(txt_filename, 'r') as txtfile:
        for line in txtfile:
            # Assuming each line in the text file is a separate element
            ET.SubElement(root, ""element"").text = line.strip()

    tree = ET.ElementTree(root)
    tree.write(xml_filename)

if __name__ == ""__main__"":
    # Set the filenames for the text and XML files
    txt_filename = 'example.txt'
    xml_filename = 'txt2xml.xml'

    # Convert the text to an XML file
    txt_to_xml(txt_filename, xml_filename)

    print(f""Converted '{txt_filename}' to '{xml_filename}'."")

"
BiLabJd4,txt2json,Python253,Python,Friday 15th of March 2024 02:23:05 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: txt2json.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to a JSON file (.json).
Assumes the entire content of the text file is a single JSON string.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'txt2json.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Run the script.
4. The converted JSON file ('txt2json.json') will be generated in the same directory.

Note: Adjust the 'txt_filename' and 'json_filename' variables in the script as needed.
""""""

import json

def txt_to_json(txt_filename, json_filename):
    with open(txt_filename, 'r') as txtfile, open(json_filename, 'w') as jsonfile:
        # Assuming the entire content of the text file is a single JSON string
        data = {""text_content"": """".join(txtfile)}
        json.dump(data, jsonfile, indent=2)

if __name__ == ""__main__"":
    # Set the filenames for the text and JSON files
    txt_filename = 'example.txt'
    json_filename = 'txt2json.json'

    # Convert the text to a JSON file
    txt_to_json(txt_filename, json_filename)

    print(f""Converted '{txt_filename}' to '{json_filename}'."")

"
huynEx0Z,txt2pdf,Python253,Python,Friday 15th of March 2024 02:22:45 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: txt2pdf.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to a PDF file (.pdf).
It handles word wrapping to ensure that each line in the text file is properly displayed within the PDF.

Requirements:
- Python 3.x
- ReportLab library (install using: pip install reportlab)

Usage:
1. Save this script as 'txt2pdf.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Install the ReportLab library using the command: 'pip install reportlab'
4. Run the script.
5. The converted PDF file ('txt2pdf.pdf') will be generated in the same directory.

Note: Adjust the 'txt_filename' and 'pdf_filename' variables in the script as needed.
""""""

from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter

def txt_to_pdf(txt_filename, pdf_filename):
    with open(txt_filename, 'r', encoding='utf-8') as txtfile:
        lines = txtfile.readlines()

    pdf = canvas.Canvas(pdf_filename, pagesize=letter)

    # Set the font and size
    pdf.setFont(""Helvetica"", 12)

    # Set the initial y-position and line spacing
    y_position = 750
    line_spacing = 12

    # Get the PDF width
    pdf_width, pdf_height = letter

    # Iterate through lines and add to PDF with word wrapping
    for line in lines:
        if y_position < 50:
            pdf.showPage()
            y_position = pdf_height - 50  # Reset y-position for the new page

        words = line.strip().split()

        if not words:
            continue  # Skip empty lines

        current_line = words[0]

        for word in words[1:]:
            if pdf.stringWidth(current_line + "" "" + word) < pdf_width - 20:
                current_line += "" "" + word
            else:
                pdf.drawString(10, y_position, current_line)
                y_position -= line_spacing
                current_line = word

        pdf.drawString(10, y_position, current_line)
        y_position -= line_spacing

    pdf.save()

if __name__ == ""__main__"":
    # Set the filenames for the text and PDF files
    txt_filename = 'example.txt'
    pdf_filename = 'txt2pdf.pdf'

    # Convert the text to a multi-page PDF file using reportlab with improved word wrapping
    txt_to_pdf(txt_filename, pdf_filename)

    print(f""Converted '{txt_filename}' to '{pdf_filename}'."")

"
sXJmxUVE,text2html,Python253,Python,Friday 15th of March 2024 02:22:20 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: text2html.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to an HTML file (.html).
It wraps the text content in an HTML body with a paragraph tag.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'text2html.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Run the script using the command: 'python text2html.py'
4. The converted HTML file ('text2html.html') will be generated in the same directory.

Note: Adjust the 'text_file' and 'html_file' variables in the script as needed.
""""""

def text_to_html(text_file, html_file):
    with open(text_file, 'r') as textfile:
        text_data = textfile.read()
        html_data = f'<html><body><p>{text_data}</p></body></html>'

    with open(html_file, 'w') as htmlfile:
        htmlfile.write(html_data)

if __name__ == ""__main__"":
    # Set the filenames for the text and HTML files
    text_file = 'example.txt'
    html_file = 'text2html.html'

    # Convert the text to an HTML file
    text_to_html(text_file, html_file)

    print(f""Converted '{text_file}' to '{html_file}'."")

"
eKE1pp2x,txt2csv,Python253,Python,Friday 15th of March 2024 02:21:56 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: txt2csv.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to a CSV file (.csv).
Assumes each line in the text file is a separate record in the CSV file.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'txt2csv.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Run the script.
4. The converted CSV file ('txt2csv.csv') will be generated in the same directory.

Note: Adjust the 'txt_filename' and 'csv_filename' variables in the script as needed.
""""""

import csv

def txt_to_csv(txt_filename, csv_filename):
    with open(txt_filename, 'r') as txtfile, open(csv_filename, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        for line in txtfile:
            # Assuming each line in the text file is a separate record
            csvwriter.writerow([line.strip()])

if __name__ == ""__main__"":
    # Set the filenames for the text and CSV files
    txt_filename = 'example.txt'
    csv_filename = 'txt2csv.csv'

    # Convert the text to a CSV file
    txt_to_csv(txt_filename, csv_filename)

    print(f""Converted '{txt_filename}' to '{csv_filename}'."")

"
D8FAPXg9,txt2bin,Python253,Python,Friday 15th of March 2024 02:21:29 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: txt2bin.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
This script converts a text file (.txt) to a binary file (.bin).
Each line from the text file is converted to binary and written to the binary file.

Requirements:
- Python 3.x

Usage:
1. Save this script as 'txt2bin.py'.
2. Ensure your text file ('example.txt') is in the same directory as the script.
3. Run the script using the command: 'python txt2bin.py'
4. The converted binary file ('txt2bin.bin') will be generated in the same directory.

Note: Adjust the 'txt_filename' and 'bin_filename' variables in the script as needed.
""""""

def txt_to_bin(txt_filename, bin_filename):
    with open(txt_filename, 'r') as txtfile, open(bin_filename, 'wb') as binfile:
        # Convert each line to binary and write to the binary file
        for line in txtfile:
            binfile.write(line.encode('utf-8'))

if __name__ == ""__main__"":
    # Set the filenames for the text and binary files
    txt_filename = 'example.txt'
    bin_filename = 'txt2bin.bin'

    # Convert the text to a binary file
    txt_to_bin(txt_filename, bin_filename)

    print(f""Converted '{txt_filename}' to '{bin_filename}'."")

"
ba3b9bpb,lw7_1 for MKT 1,J3st3rs_j0k3,C,Friday 15th of March 2024 02:16:48 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#define n 80

int main()
{
    setlocale(LC_ALL,""Rus"");
    FILE *f1,*f2;
    int count;
    char s[n],sx[n],*p,scount[n];
    if (!(f1=fopen(""text.txt"",""r"")))  //проверяем открылся ли файл
    {
        printf(""Не удалось открыть файл\n"");
        return 1;
    }
    if (!(f2=fopen(""temp.txt"",""w"")))  //проверяем создался ли временный файл
    {
        printf(""Не удалось создать файл\n"");
        fclose(f1);
        return 2;
    }
    while((p=fgets(s,n,f1))!= NULL)  //построчно читаем данные из файла
    {
        count=0;
        strcpy(sx,s);  //создаём копию строки, т.к. команда strtok добавляет \0 в строку, с которой взаимодействует. затем будем в файл будем записывать уже копию
        p=strtok(s,"" "");
        while(p!=NULL)  //считаем кол-во слов в строке
        {
            count++;
            p=strtok(NULL,"" "");
        }
        sprintf(scount,""(%d) "",count);  //переводим число в строку
        p=strchr(sx,'\n');  //убираем \n, который приписался к sx в strcpy(sx,s)
        if (p)
            *p=' ';
        strcat(sx,scount);  //приписываем получившуюся строку к sx
        sx[strlen(sx)-1]='\n';
        fprintf(f2,""%s"",sx);  //записываем строку в файл
    }
    if (count==0)
        printf(""Файл пуст\n"");
    fclose(f1);  //завершаем работу с потоками и файлами
    fclose(f2);
    remove(""text.txt"");
    rename(""temp.txt"",""text.txt"");
    return 0;
}

"
Mw4LFfAa,snowybot completed,coinwalk,JavaScript,Friday 15th of March 2024 01:45:02 PM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/100).toFixed(8));
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var newbe = olsenest;
var newer = ((Math.floor(olsenest/tens))*tens);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var fart = 0;
var shiet = olsenest;
var sweet = 2;
var belance = olsenest;
 
 
 
function soiled(){
newbe = document.getElementById('pct_balance').value;
if (newbe>shiet){
belance = belance+bolux;
shiet = parseFloat(newbe);
}
if (newbe<shiet){
belance = belance-bolux;
shiet = parseFloat(newbe);
}
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance<awesome)){
    bolux = bolux*2;
    fart = fart+1;
    sweet = 0;
    olsen = parseFloat(belance);
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance>awesome)){
    bolux = bolux*2;
    fart = 1;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*2)))&&(fart>=2)){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 2;
    awesome = ((Math.ceil(belance/tens))*tens);
}
if (belance<(bolux*2)){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 0;
    awesome = ((Math.ceil(belance/tens))*tens);
}
if ((belance>(awesome+(tens*sweet)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    sweet = 2;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (belance>=(olsenest*144000)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 800);
}
soiled();"
efaTtWMK,Drag and Drop,thiago_db,PHP,Friday 15th of March 2024 12:50:06 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title>Arrastar e Soltar com Bootstrap e TinyMCE</title>
<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"">
<script src=""https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js"" referrerpolicy=""origin""></script>
<style>
  .sidebar {
    width: 200px;
    height: 100%;
    background-color: #f0f0f0;
    float: right;
    padding: 20px;
  }
  .draggable {
    cursor: move;
    margin-bottom: 10px;
    display: block;
  }
  .content {
    padding: 20px;
    min-height: 300px;
    position: relative;
  }
  .dropzone {
    min-height: 50px;
    border: 2px dashed #aaa;
    margin-bottom: 20px;
    position: relative;
  }
  .highlight {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.1);
    border: 2px dashed #007bff;
    z-index: 1;
    display: none;
  }
  .dropzone:hover .highlight {
    display: block;
  }
  .delete-button {
    position: absolute;
    top: 5px;
    right: 5px;
    cursor: pointer;
    display: none;
  }
  .alert:hover .delete-button {
    display: block;
  }
  .red-button {
    position: absolute;
    top: 5px;
    right: 35px;
    cursor: pointer;
    background-color: red;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    display: none;
  }
  .alert:hover .red-button {
    display: block;
  }
  .duplicate-button {
    position: absolute;
    top: -30px;
    right: 5px;
    cursor: pointer;
    background-color: green;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    display: none;
    z-index: 1;
  }
  .alert:hover .duplicate-button {
    display: block;
  }
</style>
</head>
<body>

<div class=""container-fluid"">
  <div class=""row"">
    <div class=""col-md-3 sidebar"">
      <button class=""btn btn-secondary draggable mt-2"" draggable=""true"" ondragstart=""drag(event, 'menu')"">
        <img src=""https://via.placeholder.com/20"" alt=""Menu Icon""> Menu
      </button>
      <button class=""btn btn-secondary draggable mt-2"" draggable=""true"" ondragstart=""drag(event, 'header')"">
        <img src=""https://via.placeholder.com/20"" alt=""Header Icon""> Header
      </button>
      <button class=""btn btn-secondary draggable mt-2"" draggable=""true"" ondragstart=""drag(event, 'content')"">
        <img src=""https://via.placeholder.com/20"" alt=""Content Icon""> Content
      </button>
      <button class=""btn btn-secondary draggable mt-2"" draggable=""true"" ondragstart=""drag(event, 'footer')"">
        <img src=""https://via.placeholder.com/20"" alt=""Footer Icon""> Footer
      </button>
    </div>
    <div class=""col-md-9"">
      <div class=""content"" ondrop=""drop(event)"" ondragover=""allowDrop(event)"">
        <div class=""dropzone"">
          <div class=""highlight""></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function allowDrop(event) {
  event.preventDefault();
}

function drag(event, type) {
  event.dataTransfer.setData(""text"", type);
}

function drop(event) {
  event.preventDefault();
  var type = event.dataTransfer.getData(""text"");
  var content = """";

  if (type === ""menu"") {
    content = ""<nav class='navbar navbar-expand-lg navbar-light bg-light'>"" +
                ""<a class='navbar-brand' href='#'>Navbar</a>"" +
                ""<button class='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>"" +
                  ""<span class='navbar-toggler-icon'></span>"" +
                ""</button>"" +
                ""<div class='collapse navbar-collapse' id='navbarSupportedContent'>"" +
                  ""<ul class='navbar-nav mr-auto'>"" +
                    ""<li class='nav-item active'>"" +
                      ""<a class='nav-link' href='#'>Home <span class='sr-only'>(current)</span></a>"" +
                    ""</li>"" +
                    ""<li class='nav-item'>"" +
                      ""<a class='nav-link' href='#'>Link</a>"" +
                    ""</li>"" +
                    ""<li class='nav-item dropdown'>"" +
                      ""<a class='nav-link dropdown-toggle' href='#' id='navbarDropdown' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>"" +
                        ""Dropdown"" +
                      ""</a>"" +
                      ""<div class='dropdown-menu' aria-labelledby='navbarDropdown'>"" +
                        ""<a class='dropdown-item' href='#'>Action</a>"" +
                        ""<a class='dropdown-item' href='#'>Another action</a>"" +
                        ""<div class='dropdown-divider'></div>"" +
                        ""<a class='dropdown-item' href='#'>Something else here</a>"" +
                      ""</div>"" +
                    ""</li>"" +
                    ""<li class='nav-item'>"" +
                      ""<a class='nav-link disabled' href='#'>Disabled</a>"" +
                    ""</li>"" +
                  ""</ul>"" +
                  ""<form class='form-inline my-2 my-lg-0'>"" +
                    ""<input class='form-control mr-sm-2' type='search' placeholder='Search' aria-label='Search'>"" +
                    ""<button class='btn btn-outline-success my-2 my-sm-0' type='submit'>Search</button>"" +
                  ""</form>"" +
                ""</div>"" +
              ""</nav>"";
  } else if (type === ""header"") {
    content = ""<header class='jumbotron'>"" +
                ""<h1 class='display-4'>Hello, world!</h1>"" +
                ""<p class='lead'>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>"" +
                ""<hr class='my-4'>"" +
                ""<p>It uses utility classes for typography and spacing to space content out within the larger container.</p>"" +
                ""<a class='btn btn-primary btn-lg' href='#' role='button'>Learn more</a>"" +
              ""</header>"";
  } else if (type === ""content"") {
    content = ""<div class='container'>"" +
                ""<h2>Content</h2>"" +
                ""<textarea class='editable'>This is the content section of the page. You can edit this text using TinyMCE.</textarea>"" +
              ""</div>"";
  } else if (type === ""footer"") {
    content = ""<footer class='container-fluid bg-dark text-white py-3'>"" +
                ""<div class='container text-center'>"" +
                  ""<span>&copy; 2023 My Website</span>"" +
                ""</div>"" +
              ""</footer>"";
  }

  var dropzone = event.target.closest('.content');
  if (dropzone) {
    var block = document.createElement(""div"");
    block.className = ""alert alert-primary position-relative"";
    block.innerHTML = content;
    
    var deleteButton = document.createElement(""i"");
    deleteButton.className = ""fa fa-trash delete-button"";
    deleteButton.onclick = function() {
      if (confirm(""Tem certeza que deseja deletar este bloco?"")) {
        block.remove();
      }
    };
    
    var redButton = document.createElement(""button"");
    redButton.className = ""red-button"";
    redButton.innerHTML = ""Deletar"";
    redButton.onclick = function() {
      if (confirm(""Tem certeza que deseja deletar este bloco?"")) {
        block.remove();
      }
    };
    
    var duplicateButton = document.createElement(""button"");
    duplicateButton.className = ""duplicate-button"";
    duplicateButton.innerHTML = ""Duplicar"";
    duplicateButton.onclick = function() {
      duplicateBlock(block);
    };

    block.appendChild(deleteButton);
    block.appendChild(redButton);
    block.appendChild(duplicateButton);
    
    dropzone.appendChild(block);
    
    tinymce.init({
      selector: '.editable',
      height: 200,
      menubar: false,
      plugins: [
        'advlist autolink lists link image charmap print preview anchor',
        'searchreplace visualblocks code fullscreen',
        'insertdatetime media table paste code help wordcount'
      ],
      toolbar: 'undo redo | formatselect | bold italic backcolor | \
                alignleft aligncenter alignright alignjustify | \
                bullist numlist outdent indent | removeformat | help'
    });
  }
}

function duplicateBlock(originalBlock) {
  var newBlock = originalBlock.cloneNode(true);
  var deleteButton = newBlock.querySelector('.delete-button');
  deleteButton.onclick = function() {
    if (confirm(""Tem certeza que deseja deletar este bloco?"")) {
      newBlock.remove();
    }
  };
  var redButton = newBlock.querySelector('.red-button');
  redButton.onclick = function() {
    if (confirm(""Tem certeza que deseja deletar este bloco?"")) {
      newBlock.remove();
    }
  };
  document.querySelector('.content').appendChild(newBlock);
}
</script>

</body>
</html>
"
2cqB7iMH,Review Zenfinex,fxvnpro,PHP,Friday 15th of March 2024 12:27:59 PM CDT,https://www.fxvnpro.com/review-zenfinex/
m9KZ4CFs,Exchange remote no UI,PureGremlin,PowerShell,Friday 15th of March 2024 12:27:56 PM CDT,"function Connect-LocalExchange { ;
$exchangeserver = read-host -prompt ""fqdn of server"" ; while (!($test)) {if (test-connection -computername $exchangeserver -count 1 -ErrorAction SilentlyContinue) {$test = $true}  else {$exchangeserver = read-host -prompt ""Connection test to $($exchangeserver) failed. Enter fqdn of server again""} } ;
$user = read-host -prompt ""enter your domain qualified user; i.e. domain\user"" ;
#$pass = write-host ""Enter your password for $($user)"" ; read-host -AsSecureString ; 
$tmp = read-host -prompt ""Enter your password for $($user)"" ; $pass = $tmp | ConvertTo-SecureString -AsPlainText -Force ; rv tmp ;
$cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user,$pass ;
$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://$exchangeserver/PowerShell/ -Credential $cred ; 
Import-PSSession $Session ;
};Connect-LocalExchange"
Mi4r8tvL,Review Zenfinex,reviewbrokers,PHP,Friday 15th of March 2024 12:25:05 PM CDT,https://www.reviewbrokers.net/review-zenfinex/
7ZGCE6eQ,D,Ankit_132,C++,Friday 15th of March 2024 12:08:47 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

int main()
{
    _test
    {
        string s;
        cin>>s;
 
        int n = s.size();
        int ans = 0;
 
        vector<int> val(n);
 
        for(int len=1; len*2<=n; len++)
        {
            fill(val.begin(), val.end(), 0);
 
            for(int i=0; i+len<n; i++)
                val[i] = (s[i]==s[i+len] || s[i]=='?' || s[i+len]=='?');
 
            for(int i=1;i<n;i++)
                val[i] += val[i-1];
 
            if(val[len-1]==len)     ans = max(ans, 2*len);
 
            for(int i=len; i<n; i++)
            {
                if(val[i]-val[i-len]==len)
                    ans = max(ans, 2*len);
            }
        }
 
        cout<<ans<<""\n"";
    }
}"
e0hgiYVN,C,Ankit_132,C++,Friday 15th of March 2024 12:07:21 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back


int main()
{
    _test
    {
        int n;
        cin>>n;
 
        vector<string> s(2);
        cin>>s[0]>>s[1];
 
        vector<vector<int>> pos(2, vector<int> (n));
 
        pos[0][0] = 1;
 
        queue<pair<int, int>> qp;
 
        qp.push({0, 0});
 
        while(qp.size())
        {
            auto e = qp.front();
            int x = e.ff;
            int y = e.ss;
            qp.pop();
 
            if(x-1>=0)
            {
                if(s[x-1][y]=='>' && !pos[x-1][y+1])
                {
                    pos[x-1][y+1] = 1;
                    qp.push({x-1, y+1});
                }
            }
 
            if(x-1>=0)
            {
                if(s[x-1][y]=='<' && !pos[x-1][y-1])
                {
                    pos[x-1][y-1] = 1;
                    qp.push({x-1, y-1});
                }
            }
 
            if(x+1<=1)
            {
                if(s[x+1][y]=='>' && !pos[x+1][y+1])
                {
                    pos[x+1][y+1] = 1;
                    qp.push({x+1, y+1});
                }
            }
 
            if(x+1<=1)
            {
                if(s[x+1][y]=='<' && !pos[x+1][y-1])
                {
                    pos[x+1][y-1] = 1;
                    qp.push({x+1, y-1});
                }
            }
 
            if(y-1>=0)
            {
                if(s[x][y-1]=='<' && !pos[x][y-2])
                {
                    pos[x][y-2] = 1;
                    qp.push({x, y-2});
                }
            }
 
            if(y+1<n)
            {
                if(s[x][y+1]=='>' && !pos[x][y+2])
                {
                    pos[x][y+2] = 1;
                    qp.push({x, y+2});
                }
            }
        }
 
        if(pos[1][n-1])       cout<<""YES\n"";
        else                  cout<<""NO\n"";
    }
}"
yYvH5nrC,B,Ankit_132,C++,Friday 15th of March 2024 12:07:01 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define ff     first
#define ss     second
#define pb     push_back

int main()
{
    _test
    {
        int n;
        cin>>n;

        vector<int> a(n), digits;
        for(auto &e: a)
            cin>>e;

        int prev = 0;
        int f = 1;

        for(auto e: a)
        {
            if(e < prev)
            {
                f = 0;
                break;
            }

            digits.clear();
            int tmp = e;

            while(e > 0)
            {
                digits.pb(e%10);
                e /= 10;
            }

            if(!digits.size())      digits.pb(0);

            reverse(digits.begin(), digits.end());

            if(digits.front() < prev)
            {
                prev = tmp;
                continue;
            }

            int chk = 1;

            for(int i=1; i<digits.size(); i++)
            {
                if(digits[i] < digits[i-1])
                {
                    chk = 0;
                    break;
                }
            }

            if(!chk)        prev = tmp;
            else            prev = digits.back();
        }

        if(f)       cout<<""YES\n"";
        else        cout<<""NO\n"";
    }
}"
j0yyV6XK,A,Ankit_132,C++,Friday 15th of March 2024 12:06:30 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define _test   int _TEST; cin>>_TEST; while(_TEST--)

int main()
{
    _test
    {
        int n;
        cin>>n;

        if(n%2)
        {
            cout<<""NO\n"";
            continue;
        }

        char ch = 'A';
        string ans = """";

        while(n)
        {
            ans += ch;
            ans += ch;
            ch++;
            n -= 2;
        }

        cout<<""YES\n""<<ans<<""\n"";
    }
}"
T1pr1vp9,Untitled,GregLeblanc,Perl,Friday 15th of March 2024 12:05:37 PM CDT,"#!/usr/bin/perl -w
use strict;
use warnings;
use HTML::TokeParser;

my $script = ""/var/www/cgi-bin/findenergy"";

my $scriptoutput = `$script -debug particle=ALPHAS frequency=17.88 charge=""+2""`;

my $p = HTML::TokeParser->new(\$scriptoutput);
my @energy = ();

while (my $token = $p->get_tag(""th"")) {
    if($token->[1]{id}) {
       if($token->[1]{id} =~ /energy/){
            my $text = $p->get_trimmed_text(""/a"");
            @energy = split ' ', $text;
            print ""$energy[2]\n"";
       }
    }
}
"
jGskSBWu,Untitled,Josif_tepe,C++,Friday 15th of March 2024 11:59:18 AM CDT,"#include <iostream>
#include <cmath>
#include <vector>
using namespace std;
int main() {
    
    vector<int> v;

    v.push_back(1);
    v.push_back(2);
    cout << v.size() << endl;

    v.push_back(3);
    cout << v.size() << endl;
    
    return 0;
}
"
brHK4Ft8,Untitled,Josif_tepe,C++,Friday 15th of March 2024 11:57:19 AM CDT,"#include <iostream>
#include <cmath>
#include <vector>
using namespace std;
int main() {
    
    vector<int> v;

    v.push_back(1);
    v.push_back(2);

    for(int i = 0; i < v.size(); i++) {
        cout << v[i] << "" "";
    }
    
    return 0;
}
"
rBUYZ7DK,Untitled,GregLeblanc,Perl,Friday 15th of March 2024 11:56:57 AM CDT,"#!/usr/bin/perl -w
use strict;
use warnings;
use HTML::TokeParser;

my $script = ""/var/www/cgi-bin/findenergy"";

my $scriptoutput = `$script -debug particle=ALPHAS frequency=17.88 charge=""+2""`;

my $p = HTML::TokeParser->new(\$scriptoutput);
my @energy = ();

while (my $token = $p->get_tag(""th"")) {
    if($token->[1]{id} =~ /energy/){
        my $text = $p->get_trimmed_text(""/a"");
        @energy = split ' ', $text;
        print ""@energy[2]\n"";
    }
}"
