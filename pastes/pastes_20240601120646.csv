id,title,username,language,date,content
m6t7j8pM,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 06:59:01 AM CDT,"#include <iostream>
#include <set>
#include <algorithm>
using namespace std;

int main()
{
    int n, m;
    cin >> n >> m;

    multiset<int> ms;
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;

        ms.insert(x);
    }
    int niza[m];
    for(int i = 0; i < m; i++) {
        cin >> niza[i];
    }
    for(int i = 0; i < m; i++) {
        auto it = ms.lower_bound(niza[i] + 1);
        
        if(it == ms.begin()) {
            cout << -1 << endl;
        }
        else {
            it--;
            cout << *it << endl;
            ms.erase(it);
        }
    }
    return 0;
}
"
fEHTwXie,psycho snowybot,coinwalk,JavaScript,Saturday 1st of June 2024 06:58:41 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var prefit = Number((elderly/24).toFixed(8));
var beast = prefit;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var throttle = (prefit*24);
var winnerdinner = 144000;
var snowy = (elderly/3);
var james = ((Math.floor(elderly/tens))*tens)
var snowie = 0;
var great = 0;
 
function go(){
great = document.getElementById('pct_balance').value;
var dog = (((great-elderly)*1).toFixed(8));
console.log(""profit"");
console.log(dog);
snowy = (great/3);
if ((great!=snowie)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = beast*2;
    snowie = parseFloat(great);
}
if ((snowy<=(beast*2))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowie = 0;
    james = ((Math.floor(great/tens))*tens);
}
if ((great>=(james+(tens*4)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    snowie = 0;
    james = ((Math.floor(great/tens))*tens);
}
if (great>=winnerdinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 35);
}
 
go();"
rkbDETkK,Untitled,Nil000,Email,Saturday 1st of June 2024 06:39:34 AM CDT,"I'm hiring, and all you need to do is find companies/sites that will accept my business partnership ideas.

You will get a share of 50% of whatever I make.

More info at email: geralddemail@gmail.com"
BN30rxBC,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 06:39:02 AM CDT,"#include <iostream>
#include <set>
#include <algorithm>
using namespace std;

int main()
{
    set<int> st;
    int n;
    cin >> n;

    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;
        st.insert(x);
    }
    cout << st.size() << endl;
    return 0;
}
"
kgXaPLNK,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX üéÅ,ssss50w,GetText,Saturday 1st of June 2024 06:37:57 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
01 June 2024"
rtV8e1kN,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 06:26:30 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    sort(niza, niza + n);

    int S = 0, E = n - 1;
    int res = 0;
    while(S < E) {
        while(niza[S] > 0 and S < E) {
            E--;
            niza[S]--;
            res++;
        }
        S++;
    }
    cout << res << endl;
    return 0;
}
"
mUkmG6kP,Untitled,dllbridge,C,Saturday 1st of June 2024 06:17:22 AM CDT,"

#include  <stdio.h>
#include <string.h>


////////////////////////////////////////
struct Dog
{
    char color[19];
    int age;
    int weiht;
    int Year;
};
     
     
////////////////////////////////////////     
int main()
{

    Dog h;

     strcpy(h.color,""brown"");
     printf(""h.age= %d\n"",h.age);
     printf(""h.weiht=%d\n"",h.weiht);
     printf(""h.Year= %d\n"",h.Year);
}


























/*
#include    <stdio.h>



int n = -81;


////////////////////////////////////////////////////
int main()
{
	
	
//	if(n > 0) printf(""True \n"");
//	else      printf(""False\n""); 
	
	(n > 0) ? printf(""True \n"") : printf(""False\n""); 
	
}


*/





















	/* char sz[7][17] = { ""     "" ,
	                    ""–í–∞–ª–µ—Ç"" ,
	                    ""–î–∞–º–∞""  ,
	                    ""–ö–æ—Ä–æ–ª—å"",
	                    ""–¢—É–∑""  };
	*/




/*


#include    <stdio.h>
#include   <string.h>
#include   <locale.h>       //  –∑–¥–µ—Å—å ""–∂–∏–≤—ë—Ç"" setlocale(LC_ALL, ""rus"");



void mult(int n);



////////////////////////////////////////////////////
int main()
{
	
	
	setlocale(LC_ALL, ""rus"");
	
    for(int i = 2; i <= 14; i++)
    {
		mult(i);
		
	}
   
}



//////////////////////////////////////////////////////
void mult(int n)
{
	

	
	 char sz[17];
	
	
	 if(n == 11) strcpy(sz, ""–í–∞–ª–µ—Ç "");
	 if(n == 12) strcpy(sz, ""–î–∞–º–∞  "");
	 if(n == 13) strcpy(sz, ""–ö–æ—Ä–æ–ª—å"");
	 if(n == 14) strcpy(sz, ""–¢—É–∑   "");	 
	
	 for(int i = 1; i <= 4; i++)
	 {
		 if(n < 11)	
	     switch(i)                                   //  –º–∞—Å—Ç–∏
		 {
				
		     case  1:  printf(""%d –ü–∏–∫–∏   \n"", n);
					   break;		
					   
		     case  2:  printf(""%d –ë—É–±–∏   \n"", n);
					   break;	
					   
		     case  3:  printf(""%d –ß–µ—Ä–≤–∏  \n"", n);
					   break;	
					   
		     case  4:  printf(""%d –ö—Ä–µ—Å—Ç–∏ \n"", n);
					   break;						   					   					   
				
		 }	
		 else
	     switch(i)                                   //  –º–∞—Å—Ç–∏
		 {
				
		     case  1:  printf(""%s –ü–∏–∫–∏   \n"", sz);
					   break;		
					   
		     case  2:  printf(""%s –ë—É–±–∏   \n"", sz);
					   break;	
					   
		     case  3:  printf(""%s –ß–µ—Ä–≤–∏  \n"", sz);
					   break;	
					   
		     case  4:  printf(""%s –ö—Ä–µ—Å—Ç–∏ \n"", sz);
					   break;						   					   					   
				
		 }			 	
			
	 } 
	
	 printf("" - - - - - - -  \n""); 
}





*/









/*

#include   <stdio.h>
#include  <locale.h>       //  –∑–¥–µ—Å—å ""–∂–∏–≤—ë—Ç"" setlocale(LC_ALL, ""rus"");



void mult(int a); 



////////////////////////////////////////////////////
int main()
{
	
   


   for(int a = 1; a < 10; a++) { mult(a); }
   
}


////////////////////////////////////////////////////
void mult(int a)
{
	
	
    for(int i=0 ;i<=10;i++)
    {
        printf(""%2d *%2d = %2d\n"", i, a, i * a);
    }
	
	printf("" - - - - - - - \n""); 	
}




*/

























/*



#include <iostream>
using namespace std;



//////////////////////////////////////////////////////////////////
int main()
{
	
	setlocale(LC_ALL, ""rus"");
	
	int a, b, c;
	
	cout << ""1)+ "" << "" "" << "" 2) -"" << "" "" << "" 3) *"" << "" "" << ""4)/"" << endl;
	cin  >> c;
	cout << ""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ"" << endl;
	cin  >> a;
	cout << ""–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ"" << endl;
	cin  >> b;
	
	switch (c )
	{
			
		case  1:	c = a + b;
		            cout   << c << endl;
		            break;
	
		case  2:	c = a - b;
			        cout << c << endl;
			        break;		

		case  3:	c = a * b;
			        cout << c << endl;
			        break;
		
		case  4:    c = a / b;
			        cout << c << endl;
			        break;
			
      default:      cout << ""–¢–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ —Å–æ—â–µ—Å—Ç–≤—É–µ—Ç"" << endl;
			        break;
    }
}




*/





"
RjLqkSjh,"""Display Sensor"" rev_02",pleasedontcode,Arduino,Saturday 1st of June 2024 06:07:23 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Display Sensor""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-06-01 11:06:59

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Build a project with a humidity sensor and LCD */
	/* screen. Get the data from the humidity sensor and */
	/* display it on the LCD monitor as follows:    If */
	/* the humidity is 25%, a symbol of 1 drop should */
	/* appear on the screen, if 50% - a symbol of two */
	/* drops,if 75 */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>  //https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <DHT.h>  //https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void displayHumidityOnLCD(float humidity);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t teni_DHT11_DOUT_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t lcd_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t lcd_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t lcd_LCD1602I2C_I2C_SLAVE_ADDRESS = 0x27;  // Corrected to 0x27 based on the example

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(lcd_LCD1602I2C_I2C_SLAVE_ADDRESS, 20, 4);  // Initialize the LCD with address and dimensions

#define DHTPIN 2     // Pin where the DHT sensor is connected
#define DHTTYPE DHT22   // DHT 22 (AM2302)

DHT dht(DHTPIN, DHTTYPE);  // Initialize DHT sensor

void setup(void)
{
  // put your setup code here, to run once:

  pinMode(teni_DHT11_DOUT_PIN_D2, INPUT_PULLUP);

  lcd.init();  // Initialize the LCD
  lcd.backlight();  // Turn on the backlight

  // Create custom characters for humidity levels
  uint8_t drop1[8] = {0x04, 0x0A, 0x0A, 0x11, 0x11, 0x11, 0x0E, 0x00}; // 1 drop
  uint8_t drop2[8] = {0x04, 0x0A, 0x0A, 0x11, 0x11, 0x1F, 0x0E, 0x00}; // 2 drops
  uint8_t drop3[8] = {0x04, 0x0A, 0x0A, 0x11, 0x1F, 0x1F, 0x0E, 0x00}; // 3 drops

  lcd.createChar(0, drop1);
  lcd.createChar(1, drop2);
  lcd.createChar(2, drop3);

  lcd.home();

  Serial.begin(9600);
  Serial.println(F(""DHTxx test!""));

  dht.begin();  // Initialize the DHT sensor
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  delay(2000);

  float h = dht.readHumidity();
  float t = dht.readTemperature();
  float f = dht.readTemperature(true);

  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F(""Failed to read from DHT sensor!""));
    return;
  }

  float hif = dht.computeHeatIndex(f, h);
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F(""Humidity: ""));
  Serial.print(h);
  Serial.print(F(""%  Temperature: ""));
  Serial.print(t);
  Serial.print(F(""¬∞C ""));
  Serial.print(f);
  Serial.print(F(""¬∞F  Heat index: ""));
  Serial.print(hic);
  Serial.print(F(""¬∞C ""));
  Serial.print(hif);
  Serial.println(F(""¬∞F""));

  displayHumidityOnLCD(h);
}

void displayHumidityOnLCD(float humidity)
{
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Humidity: "");
  lcd.print(humidity);
  lcd.print(""%"");

  lcd.setCursor(0, 1);
  if (humidity >= 75) {
    lcd.write(byte(2)); // 3 drops
  } else if (humidity >= 50) {
    lcd.write(byte(1)); // 2 drops
  } else if (humidity >= 25) {
    lcd.write(byte(0)); // 1 drop
  } else {
    lcd.print(""Low"");
  }
}
"
d7Kgv0dC,"""Humidity Display"" rev_01",pleasedontcode,Arduino,Saturday 1st of June 2024 06:06:40 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Humidity Display""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-06-01 11:04:48

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Build a project with a humidity sensor and LCD */
	/* screen. Get the data from the humidity sensor and */
	/* display it on the LCD monitor as follows:    If */
	/* the humidity is 25%, a symbol of 1 drop should */
	/* appear on the screen, if 50% - a symbol of two */
	/* drops,if 75 */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>  //https://github.com/marcoschwartz/LiquidCrystal_I2C
#include <DHT.h>  //https://github.com/adafruit/DHT-sensor-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void displayHumidityOnLCD(float humidity);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t teni_DHT11_DOUT_PIN_D2 = 2;

/***** DEFINITION OF I2C PINS *****/
const uint8_t lcd_LCD1602I2C_I2C_PIN_SDA_A4 = A4;
const uint8_t lcd_LCD1602I2C_I2C_PIN_SCL_A5 = A5;
const uint8_t lcd_LCD1602I2C_I2C_SLAVE_ADDRESS = 0x27;  // Corrected to 0x27 based on the example

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(lcd_LCD1602I2C_I2C_SLAVE_ADDRESS, 20, 4);  // Initialize the LCD with address and dimensions

#define DHTPIN 2     // Pin where the DHT sensor is connected
#define DHTTYPE DHT22   // DHT 22 (AM2302)

DHT dht(DHTPIN, DHTTYPE);  // Initialize DHT sensor

void setup(void)
{
  // put your setup code here, to run once:

  pinMode(teni_DHT11_DOUT_PIN_D2, INPUT_PULLUP);

  lcd.init();  // Initialize the LCD
  lcd.backlight();  // Turn on the backlight

  // Create custom characters for humidity levels
  uint8_t drop1[8] = {0x04, 0x0A, 0x0A, 0x11, 0x11, 0x11, 0x0E, 0x00}; // 1 drop
  uint8_t drop2[8] = {0x04, 0x0A, 0x0A, 0x11, 0x11, 0x1F, 0x0E, 0x00}; // 2 drops
  uint8_t drop3[8] = {0x04, 0x0A, 0x0A, 0x11, 0x1F, 0x1F, 0x0E, 0x00}; // 3 drops

  lcd.createChar(0, drop1);
  lcd.createChar(1, drop2);
  lcd.createChar(2, drop3);

  lcd.home();

  Serial.begin(9600);
  Serial.println(F(""DHTxx test!""));

  dht.begin();  // Initialize the DHT sensor
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  delay(2000);

  float h = dht.readHumidity();
  float t = dht.readTemperature();
  float f = dht.readTemperature(true);

  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F(""Failed to read from DHT sensor!""));
    return;
  }

  float hif = dht.computeHeatIndex(f, h);
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F(""Humidity: ""));
  Serial.print(h);
  Serial.print(F(""%  Temperature: ""));
  Serial.print(t);
  Serial.print(F(""¬∞C ""));
  Serial.print(f);
  Serial.print(F(""¬∞F  Heat index: ""));
  Serial.print(hic);
  Serial.print(F(""¬∞C ""));
  Serial.print(hif);
  Serial.println(F(""¬∞F""));

  displayHumidityOnLCD(h);
}

void displayHumidityOnLCD(float humidity)
{
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Humidity: "");
  lcd.print(humidity);
  lcd.print(""%"");

  lcd.setCursor(0, 1);
  if (humidity >= 75) {
    lcd.write(byte(2)); // 3 drops
  } else if (humidity >= 50) {
    lcd.write(byte(1)); // 2 drops
  } else if (humidity >= 25) {
    lcd.write(byte(0)); // 1 drop
  } else {
    lcd.print(""Low"");
  }
}
"
pgDKiDPX,ü§ë G2A.com Free Gift Card Guide Jun 2024 FIX ü§ë,jusst2k4,GetText,Saturday 1st of June 2024 06:06:29 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_563824.pdf

Working as of:
01 June 2024"
EQCH4YJa,data944,TestGuy1,JSON,Saturday 1st of June 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'f329875267d871072695f27ea325ce21de6fca783763d05df7ce464f91cd9e549aa980b79aab94f92150a5f835a854ecd93d909651629588794844106e110c425cc229cc42e6388790a6e67a469f72974e0794e59d64c5d17e784373579d8dd377f5e3e0664197138756a2d47889aa1f99ab97c8fd4dea73b10eccf60049c280',
  otherdata: [
    'f2bc30455ca7393970b0012755f73aa3',
    '9e125786c528404f6c4fd1e9538ad4c7',
    '7fdc6a8f2da0a617f6b53efb7ec30dca',
    '30233d3c328de2899c37f82598004fd7',
    'dcd2f014c53f3ab72eec41275fc04098',
    'b45da550d768117f99a243574cb73be0',
    '94fdaac46dd30d3007e76660f498d1f6',
    '00c46b720847cc61ecf5cc43424e3603'
  ]
}"
py87gc43,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 05:53:59 AM CDT,"#include <iostream>
#include <queue>
#include <algorithm>
using namespace std;

int main()
{
    int n, m;
    cin >> n >> m;
    int mat[n][m];
    vector<pair<int, pair<int, int>>> v;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            v.push_back(make_pair(mat[i][j], make_pair(i, j)));
        }
    }
    sort(v.begin(), v.end());
    bool visited[n][m];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};
    int robotcinja = 0;

    for(int i = 0; i < v.size(); i++) {
        int x = v[i].second.first;
        int y = v[i].second.second;
        if(!visited[x][y]) {
            queue<int> q;
            q.push(x);
            q.push(y);

            visited[x][y] = true;
            robotcinja++;
            while(!q.empty()) {
                int ci = q.front();
                q.pop();
                int cj = q.front();
                q.pop();

                for(int k = 0; k < 4; k++) {
                    int ti = ci + di[k];
                    int tj = cj + dj[k];
                    if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                        if(mat[ci][cj] <= mat[ti][tj]) {
                            q.push(ti);
                            q.push(tj);
                            visited[ti][tj] = true;
                        }
                    }
                }


            }
        }
    }
cout << robotcinja << endl;
    return 0;
}
"
6BRhn7uq,12. Trade Commissions,myrdok123,Java,Saturday 1st of June 2024 05:43:08 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class TradeCommissions_12 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String town = scanner.nextLine();
        double amount = Double.parseDouble(scanner.nextLine());

        boolean isValid = true;
       /* –ì—Ä–∞–¥	0 ‚â§ s ‚â§ 500	  500 < s ‚â§ 1 000	1 000 < s ‚â§ 10 000	 s > 10 000
        Sofia	    5%	        7%	                8%	                12%
        Varna	    4.5%	    7.5%	            10%	                13%
        Plovdiv	    5.5%	      8%	            12%	                14.5% */


        double commission = 0;

        if (amount >= 0 && amount <= 500){
            switch (town){
                case ""Sofia"" -> commission = amount * 0.05;
                case ""Varna"" -> commission = amount * 0.045;
                case ""Plovdiv"" -> commission = amount * 0.055;
                default -> isValid = false; // –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Ä–∞–∑–ª–∏—á–µ–Ω –≥—Ä–∞–¥ –æ—Ç –°–æ—Ñ–∏—è, –í–∞—Ä–Ω–∞, –ü–ª–æ–≤–¥–∏–≤
            }
        } else if (amount > 500 && amount <= 1000) {
            switch (town){
                case ""Sofia"" -> commission = amount * 0.07;
                case ""Varna"" -> commission = amount * 0.075;
                case ""Plovdiv"" -> commission = amount * 0.08;
                default -> isValid = false;
            }
        }else if(amount > 1000 && amount <= 10000){
            switch (town){
                case ""Sofia"" -> commission = amount * 0.08;
                case ""Varna"" -> commission = amount * 0.1;
                case ""Plovdiv"" -> commission = amount * 0.12;
                default -> isValid = false;
            }
        } else if (amount > 10000) {
            switch (town){
                case ""Sofia"" -> commission = amount * 0.12;
                case ""Varna"" -> commission = amount * 0.13;
                case ""Plovdiv"" -> commission = amount * 0.145;
                default -> isValid = false;
            }
        }else if(amount < 0){
            isValid = false;
        }

        if(isValid){
            System.out.printf(""%.2f"", commission);
        }else {
            System.out.println(""error"");
        }
    }
}
"
68vrVBEu,10. Invalid Number,myrdok123,Java,Saturday 1st of June 2024 05:42:29 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class InvalidNumber_10 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());

        //–∞–∫–æ –µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [100‚Ä¶200] –∏–ª–∏ –µ 0
        boolean isValid = number >= 100 && number <= 200 || number == 0;

        // –∞–∫–æ –±—É–ª–µ–≤–∞—Ç–∞ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞ –µ —Ä–∞–∑–ª–∏—á–Ω–∞ –æ—Ç true -> —á–∏—Å–ª–æ—Ç–æ –Ω–µ –µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç 100 –¥–æ 200 –∏–ª–∏ –µ —Ä–∞–∑–ª–∏—á–Ω–æ –æ—Ç –Ω—É–ª–∞
        if(!isValid){
            System.out.println(""invalid"");
        }
    }
}
"
PmgcsC2Z,08. Cinema Ticket,myrdok123,Java,Saturday 1st of June 2024 05:41:48 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class CinemaTicket_08 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String  day = scanner.nextLine();

        /*Monday	Tuesday	  Wednesday	    Thursday	Friday	Saturday	Sunday
             12	        12	    14	           14	        12	  16	      16*/


        switch (day) {
            case ""Monday"", ""Tuesday"", ""Friday"" -> System.out.println(12);
            case ""Wednesday"", ""Thursday"" -> System.out.println(14);
            case ""Saturday"", ""Sunday"" -> System.out.println(16);
        }
    }
}
"
pQe3fRD8,07. Working Hours (using boolean),myrdok123,Java,Saturday 1st of June 2024 05:41:09 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class WorkingHours_07 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int hour = Integer.parseInt(scanner.nextLine());
        String day = scanner.nextLine();

        // –û—Ç –ü–æ–Ω–µ–¥–µ–ª–Ω–∏–∫ –¥–æ –°—ä–±–æ—Ç–∞ –æ—Ñ–∏—Å—ä—Ç –µ –æ—Ç–≤–æ—Ä–µ–Ω –≤ —á–∞—Å–æ–≤–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 10 - 18

        boolean isWorkingHours = hour >= 10 && hour <= 18;
        boolean isWorkingDays = day.equals(""Monday"") || day.equals(""Tuesday"") || day.equals(""Wednesday"") || day.equals(""Thursday"") || day.equals(""Friday"") || day.equals(""Saturday"");

        if( isWorkingHours && isWorkingDays){

            System.out.println(""open"");
        }else {
            System.out.println(""closed"");
        }
    }
}
"
q885mn7i,07. Working Hours,myrdok123,Java,Saturday 1st of June 2024 05:40:33 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class WorkingHours_07 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int hour = Integer.parseInt(scanner.nextLine());
        String day = scanner.nextLine();

        // –û—Ç –ü–æ–Ω–µ–¥–µ–ª–Ω–∏–∫ –¥–æ –°—ä–±–æ—Ç–∞ –æ—Ñ–∏—Å—ä—Ç –µ –æ—Ç–≤–æ—Ä–µ–Ω –≤ —á–∞—Å–æ–≤–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 10 - 18
        if( (hour >= 10 && hour <= 18) &&
                (day.equals(""Monday"") || day.equals(""Tuesday"") || day.equals(""Wednesday"") || day.equals(""Thursday"") || day.equals(""Friday"") || day.equals(""Saturday"")) ){

            System.out.println(""open"");
        }else {
            System.out.println(""closed"");
        }
    }
}"
uVJHGJ9q,06. Number in Range,myrdok123,Java,Saturday 1st of June 2024 05:39:45 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class NumberInRange_06 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());

        if (number >= -100 && number <= 100 && number != 0){
            System.out.println(""Yes"");
        }else {
            System.out.println(""No"");
        }
    }
}
"
Wu4eYmex,05. Small Shop,myrdok123,Java,Saturday 1st of June 2024 05:39:11 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class SmallShop_05 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String product = scanner.nextLine();
        String town = scanner.nextLine();
        double quantity = Double.parseDouble(scanner.nextLine());

        //coffee	water	beer	sweets	peanuts
/* Sofia  0.50	    0.80	1.20	1.45	1.60
Plovdiv	  0.40	    0.70	1.15	1.30	1.50
Varna	   0.45	    0.70	1.10	1.35	1.55*/


        double totalPrice = 0;
        switch (product){
            case ""coffee"":
                if (town.equals(""Sofia"")) {
                    totalPrice = quantity * 0.50;
                } else if (town.equals(""Plovdiv"")) {
                    totalPrice = quantity * 0.40;
                } else if (town.equals(""Varna"")) {
                    totalPrice = quantity * 0.45;
                }
                break;

            case ""water"":
                if(town.equals(""Sofia"")){
                    totalPrice = quantity * 0.80;
                } else if (town.equals(""Plovdiv"")) {
                    totalPrice = quantity * 0.70;
                } else if (town.equals(""Varna"")) {
                    totalPrice = quantity * 0.70;
                }
                break;

            case ""beer"":
                if (town.equals(""Sofia"")){
                    totalPrice = quantity * 1.20;
                } else if (town.equals(""Plovdiv"")) {
                    totalPrice = quantity * 1.15;
                } else if (town.equals(""Varna"")) {
                    totalPrice = quantity * 1.10;
                }
                break;

            case ""sweets"":
                if (town.equals(""Sofia"")){
                    totalPrice = quantity * 1.45;
                } else if (town.equals(""Plovdiv"")) {
                    totalPrice = quantity * 1.30;
                } else if (town.equals(""Varna"")) {
                    totalPrice = quantity * 1.35;
                }
                break;

            case ""peanuts"":
                if (town.equals(""Sofia"")){
                    totalPrice = quantity * 1.60;
                } else if (town.equals(""Plovdiv"")) {
                    totalPrice = quantity * 1.50;
                } else if (town.equals(""Varna"")) {
                    totalPrice = quantity * 1.55;
                }
                break;
        }


        System.out.println(totalPrice);



    }
}
"
5NKnNZZg,02. Weekend or Working Day,myrdok123,Java,Saturday 1st of June 2024 05:38:15 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class WeekendOrWorkingDay_02 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String dayOfWeek = scanner.nextLine();


        switch (dayOfWeek) {
            case ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"" -> System.out.println(""Working day"");
            case ""Saturday"", ""Sunday"" -> System.out.println(""Weekend"");
            default -> System.out.println(""Error"");
        }
    }
}
"
fBnxT0jQ,01. Day of Week,myrdok123,Java,Saturday 1st of June 2024 05:37:22 AM CDT,"package ConditionalStatementsAdvance;

import java.util.Scanner;

public class DayOfWeek_01 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int day = Integer.parseInt(scanner.nextLine());

        switch (day){
            case 1:
                System.out.println(""Monday"");
                break;
            case 2:
                System.out.println(""Tuesday"");
                break;
            case 3:
                System.out.println(""Wednesday"");
                break;
            case 4:
                System.out.println(""Thursday"");
                break;
            case 5:
                System.out.println(""Friday"");
                break;
            case 6:
                System.out.println(""Saturday"");
                break;
            case 7:
                System.out.println(""Sunday"");
                break;
            default:
                System.out.println(""Error"");
                break;

        }
    }
}
"
cEab7pMk,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 05:30:26 AM CDT,"#include <iostream>
#include <queue>
using namespace std;

int main()
{
    int n, m;
    cin >> n >> m;
    int r, k;
    cin >> r >> k;
    r--; 
    k--;

    queue<int> q;
    q.push(r);
    q.push(k);
    q.push(0);
    bool visited[n][m];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    visited[r][k] = true;
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};

    int mat[n][m];
    int maksimalna_brojka = 0;
    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int brojka = q.front();
        q.pop();
        mat[ci][cj] = brojka;
        if(brojka > maksimalna_brojka) {
            maksimalna_brojka = brojka;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci  + di[i];
            int tj = cj + dj[i];
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                visited[ti][tj] = true;
                q.push(ti);
                q.push(tj);
                q.push(brojka + 1);
            }
        }
    }
    int rez =0 ;
    for(int i =0 ; i < n; i++) {
        for(int j= 0; j < m; j++) {
            if(mat[i][j] == maksimalna_brojka) {
                rez++;
            }
        }
    }
    cout << maksimalna_brojka << endl;
    cout << rez << endl;

    return 0;
}
"
dqRBuC7A,if statement with initializer,RicardasSim,C++,Saturday 1st of June 2024 05:27:04 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

bool TestFnc()
{
    printf(""TestFnc\n"");
    return true;
}

int main()
{

    bool a = false;

    if( a = TestFnc(); a )
    {
        printf(""1\n"");
    }
    else
    {
        printf(""2\n"");
    }

    return 0;
}
"
AnqPvRt0,Untitled,greedydev,Swift,Saturday 1st of June 2024 05:17:06 AM CDT,"import Foundation

func drawSquare(_ n: Int) {
    let size = 2 * n + 1
    
    for i in 0..<size {
        for j in 0..<size {
            let distance = max(abs(n - i), abs(n - j))
            let number = 9 - distance
            print(number, terminator: """")
        }
        print()
    }
}


let input = 3
drawSquare(input)
"
9DvzN4Ga,programma ascensore piano 2,tommy2805,Lua,Saturday 1st of June 2024 05:11:46 AM CDT,"-- Inizializza Rednet sul lato inferiore del computer
rednet.open(""bottom"")

-- Funzione per gestire i messaggi ricevuti
function handleMessages()
    while true do
        local senderId, message = rednet.receive()

        if message == ""lasciando piano 1"" then
            print(""muovo giu"")
            redstone.setBundledOutput(""back"", colors.yellow)
        elseif message == ""lasciando piano 2"" then
            print(""muovo su"")
            redstone.setBundledOutput(""back"", colors.lime)
        elseif message == ""stop"" then
            print(""stop"")
            local currentOutput = redstone.getBundledOutput(""back"")
            if currentOutput ~= 0 then
                redstone.setBundledOutput(""back"", 0)
                sleep(0.3)
                redstone.setBundledOutput(""back"", currentOutput)
                sleep(0.3)
                redstone.setBundledOutput(""back"", 0)
            end
        end
    end
end

-- Avvia la gestione dei messaggi
handleMessages()
"
PBuBDJrK,programma ascensore piano 1,tommy2805,Lua,Saturday 1st of June 2024 05:10:38 AM CDT,"-- Inizializza Rednet sul lato inferiore del computer
rednet.open(""bottom"")

-- ID del computer a cui inviare i messaggi
local targetID = 21

-- Funzione per controllare il segnale redstone e inviare messaggi
function checkRedstoneSignals()
    local topSignal = redstone.getInput(""top"")
    local leftSignal = redstone.getInput(""left"")

    while true do
        local newTopSignal = redstone.getInput(""top"")
        local newLeftSignal = redstone.getInput(""left"")

        -- Controlla se il segnale sopra √® cambiato da acceso a spento
        if topSignal and not newTopSignal then
            redstone.setOutput(""right"", false)
            rednet.send(targetID, ""lasciando piano 1"")
			print(""lasciando piano 1"")
        end

        -- Controlla se il segnale sopra √® cambiato da spento ad acceso
        if not topSignal and newTopSignal then
            redstone.setOutput(""right"", true)
            rednet.send(targetID, ""stop"")
			print(""stop"")
        end

        -- Controlla se il segnale a sinistra √® cambiato da acceso a spento
        if leftSignal and not newLeftSignal then
            rednet.send(targetID, ""lasciando piano 2"")
			print(""lasciando piano 2"")
        end

        -- Controlla se il segnale a sinistra √® cambiato da spento ad acceso
        if not leftSignal and newLeftSignal then
            rednet.send(targetID, ""stop"")
			print(""stop"")
        end

        -- Aggiorna gli stati dei segnali
        topSignal = newTopSignal
        leftSignal = newLeftSignal

        -- Attende prima di controllare di nuovo
        sleep(0.3)
    end
end

-- Avvia il controllo dei segnali redstone
checkRedstoneSignals()
"
QTx08eZN,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 04:52:12 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;
   pair<int, int> p[n];
    
    for(int i = 0; i < n; i++) {
        int a, b; 
        cin >> a >> b;
        p[i] = make_pair(b, a);
    }
    sort(p, p + n);
    int vreme_na_zavrsuvanje = p[0].first;
    int kolku_filmovi = 1;
    for(int i = 1; i < n; i++) {
        if(vreme_na_zavrsuvanje <= p[i].second) {
            kolku_filmovi++;
            vreme_na_zavrsuvanje = p[i].first;
        }
    }
    cout << kolku_filmovi << endl;
    return 0;
}
"
fvkZdV44,27 (–º–∞–∫—Å —Å—É–º–º–∞ –Ω–µ –∫—Ä–∞—Ç–Ω–∞—è k),nq1s788,Python,Saturday 1st of June 2024 04:36:03 AM CDT,"#–ø–æ–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ
#https://inf-ege.sdamgia.ru/problem?id=27424
data = open('27-B_demo.txt').readlines()
n = int(data[0])
k = 3 #!!!!!!!!!!!!!!
a = data[1:]
for i in range(n):
    a[i] = list(map(int, a[i].split()))
dp = [[-1 for i in range(k)] for j in range(n)]
dp[0][a[0][0] % k] = a[0][0]
dp[0][a[0][1] % k] = a[0][1]
for i in range(1, n):
    for lst in range(k):
        if dp[i - 1][lst] == -1:
            continue
        cur = a[i][0]
        dp[i][(lst + cur) % k] = max(dp[i][(lst + cur) % k], dp[i - 1][lst] + cur)
        cur = a[i][1]
        dp[i][(lst + cur) % k] = max(dp[i][(lst + cur) % k], dp[i - 1][lst] + cur)
print(max(dp[n - 1][1:]))"
4gU3uiAv,Untitled,ifugn,GetText,Saturday 1st of June 2024 04:28:26 AM CDT,"A new version of the notorious Wallet Crypto Finder program has leaked online!

Changes:
Added configuration
Added threads
Added check for number of addresses in depth

The program is here
https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=drive_link + ifugn"
VF4dXGZ9,Untitled,Diana30,GetText,Saturday 1st of June 2024 04:28:11 AM CDT,"A new version of the notorious Wallet Crypto Finder program has leaked online!

Changes:
Added configuration
Added threads
Added check for number of addresses in depth

The program is here
https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=drive_link + Diana30"
zgc7eUxX,Untitled,jad2407,GetText,Saturday 1st of June 2024 04:27:05 AM CDT,"A new version of the notorious Wallet Crypto Finder program has leaked online!

Changes:
Added configuration
Added threads
Added check for number of addresses in depth

The program is here
https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=drive_link + jad2407"
48Bb9i49,Untitled,Josif_tepe,C++,Saturday 1st of June 2024 04:20:41 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;
    long long niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    sort(niza, niza + n);
    long long medijana = niza[n / 2];
    long long rez = 0;
    for(int i = 0; i < n; i++) {
        rez += abs(medijana - niza[i]);
    }
    cout << rez << endl;
     return 0;
}
"
31LmKde8,Untitled,Alep_Anuar,GetText,Saturday 1st of June 2024 04:16:40 AM CDT,"https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=sharing

"
ZvJrZa05,üíé WALLET CRYPTO FINDER üíé,Nitchawan,GetText,Saturday 1st of June 2024 04:10:23 AM CDT,"A new version of the notorious Wallet Crypto Finder program has leaked online!

Changes:
Added configuration
Added threads
Added check for number of addresses in depth

The program is here
https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=drive_link"
BTkYMf9G,Untitled,Alep_Anuar,GetText,Saturday 1st of June 2024 04:05:23 AM CDT,https://drive.google.com/file/d/1Sf1H1xVfnRVOiA4uL4eIguwgMLiV1Tiq/view?usp=sharing
bCzJUGDX,Fabrica,ShadyLiar,C++,Saturday 1st of June 2024 03:59:30 AM CDT,"/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <unordered_map>
#include <cassert>

class IProduct 
{
    public:
        virtual void Release() = 0;
};

class IWorkShop 
{
    public:
        virtual IProduct* Generate() = 0;
};

class Vehicle{};

class Car final : public Vehicle, public IProduct{ public: virtual void Release() override { std::cout << ""–°–æ–∑–¥–∞–Ω–∞ –ú–∞—à–∏–Ω–∞ \n""; } };
class Tank final : public Vehicle, public IProduct{ public: virtual void Release() override {std::cout << ""–°–æ–∑–¥–∞–Ω –¢–∞–Ω–∫ \n"";} };
class Scooter final : public Vehicle, public IProduct{ public: virtual void Release() override {std::cout << ""–°–æ–∑–¥–∞–Ω –°–∫—É—Ç–µ—Ä \n"";} };
class Bike final : public Vehicle, public IProduct{ public: virtual void Release() override {std::cout << ""–°–æ–∑–¥–∞–Ω–∞ –ë–∞–π–∫ \n"";} };
class Boat final : public Vehicle, public IProduct{ public: virtual void Release() override {std::cout << ""–°–æ–∑–¥–∞–Ω–∞ –õ–æ–¥–∫–∞ \n"";} };

class CarWorkShop : public IWorkShop
{
     virtual IProduct* Generate() override { return new Car(); }
};
class TankWorkShop : public IWorkShop
{
    virtual IProduct* Generate() override { return new Tank(); }
};
class ScooterWorkShop : public IWorkShop
{
    virtual IProduct* Generate() override { return new Scooter(); }
};
class BikeWorkShop : public IWorkShop
{
    virtual IProduct* Generate() override { return new Bike(); }
};
class BoatWorkShop : public IWorkShop
{
    virtual IProduct* Generate() override { return new Boat(); }
};

class BaseWorkShop // –ú–æ–∂–Ω–æ –±—ã–ª–æ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞—Ç–∏—á–Ω—ã–º –∫–ª–∞—Å—Å–æ–º —Å–æ —Å—Ç–∞—Ç–∏—á–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏, –Ω–æ —Ç–µ–º –Ω–µ –º–µ–Ω–µ–µ —è —Å–¥–µ–ª–∞–ª —Ç–∞–∫. 
{
    private:
        std::unordered_map<int, IWorkShop*> WorkShops;
     
    public:
    
    BaseWorkShop()
    {
        WorkShops[0] = new CarWorkShop();
        WorkShops[1] = new TankWorkShop();
        WorkShops[2] = new ScooterWorkShop();
        WorkShops[3] = new BikeWorkShop();
        WorkShops[4] = new BoatWorkShop();
    }
    
    ~BaseWorkShop()
    {
        for (auto& pair : WorkShops) {
            delete pair.second;
            pair.second = nullptr;
        }
        WorkShops.clear();
    }
    
    IProduct* GenerateProductById(int id) 
    {

        assert(id >= 0 && id <= WorkShops.size() && WorkShops.at(id) != nullptr); // –ï—Å–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —ç—Ç–∏ —É—Å–ª–æ–≤–∏—è, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–∞–ª—å—à–µ –Ω–µ –∏–¥–µ—Ç. 
        return WorkShops[id]->Generate();
    }
    
    
    
};




int main()
{
    BaseWorkShop* BigShop = new BaseWorkShop();
    
    Car* car = dynamic_cast<Car*>( BigShop->GenerateProductById(0) );
    car->Release();
    
    delete BigShop;

    return 0;
}
"
AwS9uRuc,—É–≥–∞–¥–∞–π —á–∏—Å–ª–æ,plarmi,Python,Saturday 1st of June 2024 03:53:57 AM CDT,"from tkinter import *
from random import randint
from tkinter.messagebox import showinfo, showerror
import sys
import os

computer_choice = randint(1, 10)

def resource_path(relative_path):
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(""."")

    return os.path.join(base_path, relative_path)

def compare_nums():
    if int(entry1.get()) == computer_choice:
        showinfo(""–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"", f""–í–µ—Ä–Ω–æ! –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {computer_choice}"")
    else:
        showerror(""–û—à–∏–±–∫–∞"", ""–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!"")


window = Tk()

window.geometry(""200x200"")
window.title(""–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"")
window.resizable(False, False)
window.iconbitmap(resource_path(""icon.ico""))

entry1 = Entry(window)
entry1.pack()

button1 = Button(window, text=""–°—Ä–∞–≤–Ω–∏—Ç—å —á–∏—Å–ª–æ"", command=compare_nums)
button1.pack()

window.mainloop()"
rJi6TgbG,Colorpicker2,plarmi,Python,Saturday 1st of June 2024 03:35:53 AM CDT,"import tkinter
from tkinter import *
from tkinter import ttk
from tkinter.messagebox import showerror
import os
import sys

# –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∫–æ–Ω–∫–∞ –æ–∫–Ω–∞)
def resource_path(relative_path):
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(""."")

    return os.path.join(base_path, relative_path)

def ccolor(event):
    try:
        color = cc.get()
        if not color:
            showerror(""–û—à–∏–±–∫–∞"", ""–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"")
        else:
            root.configure(background=color)
    except tkinter.TclError:
        showerror(""–û—à–∏–±–∫–∞"", ""–¢–∞–∫–æ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"")

root = Tk()
root.title(""–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞"")
root.geometry(""400x300"")
root.iconbitmap(resource_path(""icon.ico""))
color_label = ttk.Label(root, text=""–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç"")
color_label.place(x=10, y=10)
cc = ttk.Entry(root, width=20)
cc.place(x=95, y=10)
color_button = ttk.Button(root, text=""–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç"")
color_button.place(x=10, y=40)
color_button.bind(""<Button-1>"", ccolor)
root.resizable(False, False)
root.mainloop()"
P9qLpM82,Untitled,skimono,C++,Saturday 1st of June 2024 03:34:04 AM CDT,"#pragma optimize (""O3"");
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <map>
#include <string>
#include <unordered_map>
#include <cassert>
#include <bitset>
#include <unordered_set>
#include <queue>
#include <random>

using namespace std;
#define int long long

vector <string> cort;
vector <vector <bool> > used;
string s;

int go(int x, int y) {
    used[x][y] = true;
    if (y - 1 >= 0 && !used[x][y - 1]) {
        if (cort[x][y - 1] == '-' || cort[x][y - 1] == '+') {
            return go(x, y - 1);
        }
        if (cort[x][y - 1] == 'o') {
            return (go(x, y - 1) ^ 1);
        }
        if (cort[x][y - 1] >= 'A' && cort[x][y - 1] <= 'Z') {
            return s[cort[x][y - 1] - 'A'] == '1';
        }
        if (cort[x][y - 1] == ')') {
            return (go(x - 1, y - 3) & go(x + 1, y - 3));
        }
        if (cort[x][y - 1] == '>') {
            return (go(x - 1, y - 3) | go(x + 1, y - 3));
        }
    }
    if (x + 1 < cort.size() && !used[x + 1][y]) {
        if (cort[x + 1][y] != ' ') {
            if (cort[x + 1][y] >= 'A' && cort[x + 1][y] <= 'Z') {
                return s[cort[x + 1][y] - 'A'] == '1';
            }
            return go(x + 1, y);
        }
    }
    if (x - 1 >= 0 && !used[x - 1][y]) {
        if (cort[x - 1][y] != ' ') {
            if (cort[x - 1][y] >= 'A' && cort[x - 1][y] <= 'Z') {
                return s[cort[x - 1][y] - 'A'] == '1';
            }
            return go(x - 1, y);
        }
    }
    if (y + 1 < cort[x].size() && !used[x][y + 1]) {
        if (cort[x][y + 1] == '-' || cort[x][y + 1] == '+') {
            return go(x, y + 1);
        }
        if (cort[x][y + 1] == 'o') {
            return (go(x, y + 1) ^ 1);
        }
    }
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    while (getline(cin, s)) {
        cort.push_back(s);
        used.push_back(vector <bool>(s.size(), false));
        while (getline(cin, s)) {
            if (s == ""*"") break;
            cort.push_back(s);
            used.push_back(vector <bool>(s.size(), false));
        }
        while (getline(cin, s)) {
            if (s == ""*"") break;
            for (int x = 0; x < cort.size(); x++) {
                for (int y = 0; y < cort[x].size(); y++) {
                    if (cort[x][y] == '?') {
                        cout << go(x, y) << endl;
                    }
                }
            }
            for (int x = 0; x < cort.size(); x++) {
                for (int y = 0; y < cort[x].size(); y++) {
                    used[x][y] = false;
                }
            }
        }
        cort.clear();
        used.clear();
        cout << endl;
    }
}
//Deisgned by skimono
"
X6eVgbAp,saper,ignacy123,Python,Saturday 1st of June 2024 03:25:43 AM CDT,"import tkinter as tk
import random


def create_board(size, num_mines):
    board = [['0' for _ in range(size)] for _ in range(size)]
    mines = 0
    while mines < num_mines:
        x = random.randint(0, size - 1)
        y = random.randint(0, size - 1)
        if board[x][y] != 'M':
            board[x][y] = 'M'
            mines += 1
    return board


def print_board(board):
    for row in board:
        print(' '.join(str(cell) for cell in row))


def create_gui_board(root, board):
    buttons = []
    for i in range(len(board)):
        row = []
        for j in range(len(board[i])):
            btn = tk.Button(root, text=' ', width=2, height=1)
            btn.grid(row=i, column=j)
            btn.bind('<Button-1>', lambda event, x=i, y=j: on_left_click(x, y))
            btn.bind('<Button-3>', lambda event, x=i, y=j: on_right_click(x, y))
            row.append(btn)
        buttons.append(row)
    return buttons


def on_left_click(x, y):
    if not buttons[x][y].flagged:  # Sprawd≈∫, czy przycisk nie jest oznaczony flagƒÖ
        if board[x][y] == 'M':
            buttons[x][y].config(text='M', bg='red')
        else:
            buttons[x][y].config(text=board[x][y], state='disabled')
        buttons[x][y].bind('<Button-3>', lambda event: None)  # Dezaktywuj klikniƒôcie prawym przyciskiem


def on_right_click(x, y):
    if buttons[x][y].flagged:
        buttons[x][y].config(bg='SystemButtonFace')  # Przywr√≥ƒá domy≈õlny kolor
        buttons[x][y].flagged = False
    else:
        buttons[x][y].config(bg='orange')  # Oznacz jako flaga
        buttons[x][y].flagged = True


size = 10
num_mines = 10
board = create_board(size, num_mines)
print_board(board)

root = tk.Tk()
root.title(""Saper"")

buttons = create_gui_board(root, board)

# Dodanie atrybutu flagged do ka≈ºdego przycisku
for i in range(size):
    for j in range(size):
        buttons[i][j].flagged = False

root.mainloop()
"
RKbwcF5s,ESP32 Keypad + relay lock (webserver),jgoy,C++,Saturday 1st of June 2024 03:17:45 AM CDT,"/* 
==============================================================================================
Arduino IDE - Boards manager ESP32 (espressif) terugzetten naar versie 2.0.17 voor deze schets
==============================================================================================

Materiaal:
=============
Smallere versie van ESP32 met display:
https://www.lilygo.cc/products/lilygo%C2%AE-ttgo-t-display-1-14-inch-lcd-esp32-control-board?variant=42720264650933
https://www.amazon.nl/dp/B0CTG459MW     (uitbreidingsbord)
https://www.amazon.nl/dp/B07RCGWGD2     (numeriek keypad)
https://www.amazon.nl/dp/B06W564ZSD     (PCF8574: 8 bit parallel naar I2C)
https://www.amazon.nl/dp/B07PZC9ZMM     (relais met octocoupler - triggerstroom 5 mA)
 
Aansluitingen: 
==============
Numeriek keypad -> PCF8574, vanaf P0 .. P6 (P0 .. P7 indien keypad met 4 kolommen)
PCF8574 -> ESP32: GND -> GND, VCC -> 3V3, SDA -> 21, SCL -> 22 (normale I2C-aansluitingen)
Relais -> ESP32: IN -> 26, DC+ -> V5, DC- -> GND  */
 
#include <WebServer.h>    // arduino IDE - keuze bord: DOIT ESP32 DEVKIT V1
#include <Preferences.h>  // https://github.com/vshymanskyy/Preferences
#include <I2CKeyPad.h>    // https://github.com/RobTillaart/I2CKeyPad
#include <TFT_eSPI.h>     // https://github.com/Bodmer/TFT_eSPI
#include <Wire.h>
#include <esp_task_wdt.h>  // voor de watchdog timer (onnodig om deze bibliotheek te installeren = core)
 
Preferences flash;                       // om gegevens weg te schrijven en op te halen uit FLASH-geheugen
WebServer mijnServer(80);                // instantie van Webserver
I2CKeyPad keyPad(0x20);                  // 0x20 = de 3 brugjes staan het verst van de parallelcontacten
TFT_eSPI tft = TFT_eSPI();               // User_Setup: Setup25_TTGO_T_Display.h
TFT_eSprite sprite = TFT_eSprite(&tft);  // sprites voor vloeiende bewegingen op het display: hoofdsprite
TFT_eSprite leftSp = TFT_eSprite(&tft);  // sprite linkerkant scherm
TFT_eSprite rightS = TFT_eSprite(&tft);  // sprite rechterkant scherm
 
const uint8_t relaisPin = 26;    // relais stuurt het slot
uint32_t WDT_TIMEOUT = 4000000;  // waarde in sec voor watchdogtimer = 3 dagen voor de millis() rollover 2^32
bool slot_open = false, code_veranderd = false, toetsen_actief = true, isCodeJuist = false;
uint32_t slotMillis, codeMillis, keypadMillis;                      // voor de timers
String codes[20];                                                   // lege array van 20 strings om de codes in te laden
String paswoord;                                                    // ""paswoord"" dat vergeleken wordt met de codes
const char *netwerkNaam = ""MynGeheim"", *hetPaswoord = ""TopSecret"";  // voor access point
const char *volgNr[] = { ""code00"", ""code01"", ""code02"", ""code03"", ""code04"", ""code05"", ""code06"", ""code07"", ""code08"", ""code09"",
                         ""code10"", ""code11"", ""code12"", ""code13"", ""code14"", ""code15"", ""code16"", ""code17"", ""code18"", ""code19"" };
 
void setup() {
  Serial.begin(115200);
  esp_task_wdt_init(WDT_TIMEOUT, true);  // watchdogtimer. true = ""panic mode"", dus de ESP32 herstart als de timer afloopt
  esp_task_wdt_add(NULL);                // esp_task_wdt_add(handle). NULL = huidige thread aan de watchdog toevoegen
  tft.init(), tft.setRotation(3);        // initialiseren display + landscape
  sprite.createSprite(240, 135);         // sprite voor snellere weergave op scherm
  digitalWrite(TFT_BL, LOW);             // display uitzetten: backlight off
  pinMode(relaisPin, OUTPUT), digitalWrite(relaisPin, LOW);
  pinMode(35, INPUT_PULLUP);            //  knop naast usb = om rotatie scherm te wijzigen
  Wire.begin(), Wire.setClock(800000);  //  bepaalt de snelheid dat het keypad gelezen wordt. Was 400000 voor een ESP8266
  keyPad.begin();
  startWiFiHotSpot();
  startWebServer();
}
 
void loop() {
  keyPadAfhandelen();         // toetsaanslagen verwerken
  mijnServer.handleClient();  // webserver behandelt aanvragen van verbonden apparaten
}
 
void startWiFiHotSpot() {  // start hotspot
  IPAddress local_IP(1, 2, 3, 4), gateway(1, 2, 3, 4), subnet(255, 255, 255, 0);
  WiFi.softAPConfig(local_IP, gateway, subnet);           // stelt ""1.2.3.4"" in als adres in browser voor webserver
  WiFi.softAP(netwerkNaam, hetPaswoord, 1, 0, 8, false);  // netw, pasw, kanaal, verborgen, ...
}
 
void startWebServer() {                      // webserver & navigatie pagina's
  codesOphalen();                            // slotcodes uit flash-geheugen naar variabelen kopi√´ren
  mijnServer.on(""/"", paginaCodesInstellen);  // functies voorzien voor elke pagina-link
  mijnServer.on(""/codesOpgeslagen/"", paginaCodesOpslaan);
  mijnServer.onNotFound(paginaNietGevonden);
  mijnServer.begin();
}
 
void keyPadAfhandelen() {                               // behandelt ingetikte cijfers en kijkt na of de code correct is
  const char keys[] = ""123A456B789C*0#DNF"";             // toetsen van klavier. N = NoKey, F = Fail
  uint8_t index = keyPad.getKey();                      // input van toetsenbord opvragen
  if (index != 16) {                                    // indien er een toets ingedrukt werd (geen ""N"" en dus geen index 16)
    if (toetsen_actief) {                               // toetsaanslagen worden alleen aanvaard na loslaten eerdere toets
      if (millis() - keypadMillis > 200) {              // 200 milliSec UI debouncing
        toetsen_actief = false;                         // toetsenbord blokkeren als een toets ingetikt werd
        codeMillis = millis();                          // gebruiker heeft max. 10 seconden per cijfer
        if (index == 12 || index == 14) paswoord = """";  // resetten code bij intikken ""*"" of ""#""
        else paswoord += keys[index];                   // ingetikt cijfer bijvoegen
        Serial.print(keys[index]);                      // debug info
        digitalWrite(TFT_BL, HIGH);                     // display aanzetten (backlight aan)
        sprite.fillSprite(TFT_BLACK);                   // vorige gegevens op display wissen
        for (uint8_t i = 0; i < paswoord.length(); i++) sprite.fillCircle(30 + i * 33, 68, 15, TFT_YELLOW);
        sprite.pushSprite(0, 0);  // sprite naar display wegschrijven op coordinaten 0, 0
        checkCode(paswoord);      // kijk of code correct is
        keypadMillis = millis();  // ""10 seconden-vlag"" zetten dat er een toets ingedrukt werd
      }
    }
  } else if (index == 16) toetsen_actief = true;                  // bij loslaten van toets (index 16), toetsenbord vrijgeven.
  if (paswoord.length() >= 6) paswoord = """", Serial.println();    // paswoord reset als er te veel werd ingetikt
  if (!timer_Intikken(10000, codeMillis)) paswoord = """";          // na 10 seconden niets intikken: paswoord reset
  if (millis() - keypadMillis > 5000) digitalWrite(TFT_BL, LOW);  // 5 seconden na intikken: display uitzetten
  if (slot_open) digitalWrite(relaisPin, (timer_Slot_Open(5000, slotMillis)) ? HIGH : LOW);
  if (isCodeJuist) animatieDisplay(""Slot Open"");
}
 
void paginaCodesInstellen() {  // startpagina van webserver
  mijnServer.send(200, ""text/html"", basisHtml() + instelHtml());
}
 
void paginaCodesOpslaan() {                                      // knop ""Opslaan"" van webpagina stuurt naar deze functie
  flash.begin(""codes"", true);                                    // true = alleen lezen
  for (byte i = 0; i < 20; i++) {                                // we lezen 20 waarden uit
    String idx = ""a"";                                            // nakijken of er iets gewijzigd werd
    idx = idx + i;                                               // ""a0""..""a19""
    if (codes[i] != mijnServer.arg(idx)) code_veranderd = true;  // vlag zetten als er wijzigingen waren
    codes[i] = mijnServer.arg(idx);
  }
  flash.end();
  mijnServer.send(200, ""text/html"", basisHtml() + ((code_veranderd) ? opgeslagenHtml() : geenWijzigingHtml()));
  if (code_veranderd) opslaan(), code_veranderd = false;  // indien wijzigingen: opslaan en reset de vlag
}
 
void opslaan() {                 // enkel aangeroepen als er wijzigingen zijn aan een veld op de pagina
  flash.begin(""codes"", false);   // false = ook schrijven
  for (byte i = 0; i < 20; i++)  // alle 20 velden van webpagina opvragen en controleren op lengte
    if (codes[i].length() < 7 && codes[i].length() > 3) flash.putString(volgNr[i], codes[i]);
  flash.end();     // codes tussen 6 en 4 cijfers worden opgeslagen
  codesOphalen();  // nodig om de volgende keer bij startpagina de gewijzigde waarden weer te geven
}
 
void paginaNietGevonden() {  // error 404
  mijnServer.send(404, ""text/html"", basisHtml() + nietGevondenHtml());
}
 
void checkCode(String mijnCode) {  // slot openen moet via deze functie
  isCodeJuist = false;
  for (uint8_t i = 0; i < 20; i++)                 // alle 20 codes aflopen
    if (codes[i] == mijnCode) isCodeJuist = true;  // kijken of er 1 overeenkomt
  if (isCodeJuist) {                               // indien juiste code: openen en teller van 5 seconden starten
    slot_open = true, slotMillis = millis();
    Serial.println(""\nSlot open met code "" + mijnCode);
  }
}
 
bool timer_Slot_Open(uint16_t mijnTijd, uint32_t beginTijd) {  // timer om slot te sluiten
  if (millis() - beginTijd >= mijnTijd) slot_open = false, paswoord = """";
  return (millis() - beginTijd >= mijnTijd) ? false : true;
}
 
bool timer_Intikken(uint16_t mijnTijd, uint32_t beginTijd) {  // timer max tijd tussen ingetikte cijfers
  return (millis() - beginTijd >= mijnTijd) ? false : true;
}
 
void codesOphalen() {          // slotcodes uit flash-geheugen lezen en naar variabelen kopi√´ren
  flash.begin(""codes"", true);  // true : FLASH alleen lezen
  for (byte i = 0; i < 20; i++) codes[i] = flash.getString(volgNr[i], ""873491"");
  flash.end();
}
 
void splitSprite(bool split) {  // horizontaal splitsen [bool split = true] of samenvoegen [false]
  leftSp.createSprite(120, 135);
  rightS.createSprite(120, 135);
  for (byte ver = 0; ver < 135; ver++) {  // sprite in 2 delen opdelen en gegevens naar de helften schrijven
    for (byte hor = 0; hor < 120; hor++) leftSp.drawPixel(hor, ver, sprite.readPixel(hor, ver));
    for (byte hor = 120; hor < 240; hor++) rightS.drawPixel(hor - 120, ver, sprite.readPixel(hor, ver));
  }
  if (split) leftSp.drawFastVLine(119, 0, 135, TFT_BLACK), rightS.drawFastVLine(0, 0, 135, TFT_BLACK);
  for (byte hor = 0; hor < 120; hor++) {
    if (split) leftSp.pushSprite(0 - hor, 0), rightS.pushSprite(hor + 120, 0);
    else leftSp.pushSprite(hor - 120, 0), rightS.pushSprite(240 - hor, 0);
  }
  leftSp.deleteSprite(), rightS.deleteSprite();
}
 
void animatieDisplay(String tekst) {                                       // wordt aangeroepen bij openen slot
  digitalWrite(TFT_BL, HIGH);                                              // display aanzetten
  sprite.fillSprite(sprite.color565(100, 100, 100));                       // vul display met grijs
  for (int i = 0; i < 8192; i++) {                                         // oppervlak met fijne textuur aanmaken
    byte j = random(100) + 50;                                             // maak random grijswaarden
    sprite.drawPixel(random(240), random(135), sprite.color565(j, j, j));  // en zet op willekeurige plaatsen
  }
  sprite.setFreeFont(&FreeSansBold18pt7b);  // keuze font
  sprite.setTextColor(TFT_YELLOW);
  sprite.drawCentreString(tekst, 120, 60, 1);
  splitSprite(false);                            // scherm vanuit buitenkanten (L + R) samenvoegen
  sprite.drawFastHLine(0, 134, 240, TFT_BLACK);  // om te vermijden dat er lijnen achterblijven
  for (byte i = 0; i < 136; i++) {               // schuif alles vloeiend naar boven
    sprite.pushSprite(0, 0 - i);
  }
  digitalWrite(TFT_BL, LOW);  // display terug uitzetten
  isCodeJuist = false;
}
 
String basisHtml() {  // basispagina html + css
  String html0 = ""<!DOCTYPE html>\r\n<html lang='nl'>\r\n<head>\r\n"";
  html0 += ""<meta name=\""viewport\"" content = \""width=device-width\"">\r\n"";
  html0 += ""<title>Slot Boomgaard</title>\r\n<style>\r\n* {\r\n  text-align: center;\r\n"";
  html0 += ""  font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n"";
  html0 += ""body{\r\n  background: linear-gradient(to right, Lavender, LightCyan);\r\n"";
  html0 += ""}\r\n\r\n.knop {\r\n  width: 110px;\r\n  color: #333333;\r\n"";
  html0 += ""  border-radius: 5px;\r\n  padding: 6px 6px;\r\n  margin: 2px; \r\n  font-family: Arial, Helvetica, "";
  html0 += ""sans-serif;\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n"";
  html0 += ""  text-decoration: none; \r\n  text-align: center;\r\n"";
  html0 += ""  text-shadow: -1px -1px rgba(0,0,0,1), 1px 1px rgba(255,255,255,1); \r\n"";
  html0 += ""  background: transparent;\r\n  display: inline-block;\r\n"";
  html0 += ""  box-shadow: inset    0 1px 1px rgba(255,255,255,1), \r\n  inset  1px 0px 1px rgba(255,255,255,1),\r\n"";
  html0 += ""    inset -2px 0px 2px rgba(0,0,0,0.4),  \r\n   inset 0px -1px 1px rgba(0,0,0,0.7),   \r\n"";
  html0 += ""    0px 2px 2px rgba(0,0,0,0.7),  \r\n  1px 0px 1px rgba(0,0,0,0.7);  \r\n"";
  html0 += ""  border: 1px solid black;\r\n  background: -webkit-linear-gradient( \r\n"";
  html0 += ""    #e0e0e0 1% , #f2f2f2 3% , #fafafa 5% , #dfdfdf 10%, #ffffff 16%, \r\n"";
  html0 += ""    #cfcfcf 30%, #b9b9b9 50%, #8c8c8c 87%, #6e6e6e 96%, #4b4b4b 98%, #222222 100%); \r\n"";
  html0 += ""}\r\n\r\n.knop:active{\r\n  transform: scale(0.98);\r\n}\r\n\r\n#draai {\r\n"";
  html0 += ""  margin: auto;\r\n  padding: 20px;\r\n  background-color: LightYellow;\r\n"";
  html0 += ""  border: 1px solid black;\r\n  border-radius: 10px;\r\n  width: 280px;\r\n"";
  html0 += ""  text-align: center;\r\n  box-shadow: 0px 6px 6px rgba(0,0,0,0.7);\r\n"";
  html0 += ""  font-size: 58px;\r\n  font-weight: 900;\r\n  position: relative;\r\n}\r\n"";
  html0 += "".inputveld {\r\n  font-size: 30px;\r\n  width: 160px;\r\n}\r\n"";
  html0 += ""</style>\r\n</head>\r\n<body>\r\n<h1>Slot Boomgaard</h1>\r\n<div id='draai'>\r\n"";
  return html0;
}
 
String instelHtml() {  // startpagina = codes instellen
  String html1 = ""<span style='color: red'>Wijzig Codes</span>\r\n</div><br>\r\n"";
  html1 += ""<p>Code moet een getal tussen 4 en 6 cijfers zijn</p>\r\n<br>\r\n"";
  for (byte i = 0; i < 20; i++) {  // waarden uit het flashgeheugen invullen in  html-inputvelden
    html1 += (i + 1);
    html1 += "". "";
    html1 += ""<input type='number' class='inputveld' id='a"";
    html1 += i;
    html1 += ""' value='"";
    html1 += codes[i];
    html1 += ""'><br><br>\r\n"";
  }
  html1 += ""<span class='knop' onClick='stuurDoor()'>Opslaan</span></a>\r\n"";
  html1 += ""</span><hr>"";
  html1 += ""</body>\r\n<script>\r\nfunction stuurDoor() {\r\n var url = 'codesOpgeslagen/?';\r\n"";
  for (byte i = 0; i < 20; i++) {  // alle (gewijzigde) waarden doorgeven in URL-parameters
    html1 += "" url = url + 'a"";    // http://1.2.3.4/codesOpgeslagen/?a0=123456&a1=987654 enz.
    html1 += i;
    html1 += ""=' + document.getElementById('a"";
    html1 += i;
    html1 += ""').value + '&';\r\n"";
  }
  html1 += ""window.location.href=url;\r\n}\r\n</script>\r\n</html>\r\n"";
  return html1;
}
 
String opgeslagenHtml() {  // pagina ""waarden zijn opgeslagen""
  String html2 = ""<span style='color: green'>Bewaard</span>\r\n</div><br><br><br><br>\r\n<h1><span style='color: "";
  html2 += ""green'>De waarden zijn opgeslagen.</span>\r\n</h1></body>\r\n</html>\r\n"";
  return html2;
}
 
String geenWijzigingHtml() {  // pagina ""geen wijzigingen""
  String html2 = ""<span style='color: green'>OK</span>\r\n</div><br><br><br><br>\r\n<h1><span style='color: "";
  html2 += ""green'>Geen wijzigingen aangebracht.</span>\r\n</h1></body>\r\n</html>\r\n"";
  return html2;
}
 
String nietGevondenHtml() {  // pagina ""error 404""
  String html3 = ""404 Bestaat niet\r\n</div><br><br><br><br>\r\n"";
  html3 += ""<h1><span style='color: red'>Pagina ontbreekt</rd></h1>\r\n</body>\r\n</html>\r\n"";
  return html3;
}"
0pY7PvnR,Untitled,35657,C++,Saturday 1st of June 2024 02:47:46 AM CDT,"#include <iostream>


using namespace std;

class Vector {

public:
	Vector() {
		arr_ = new int[4];
		size_ = 0;
		capacity_ = 4;
	}

	Vector(const int capacity) {
		arr_ = new int[capacity];
		size_ = 0;
		capacity_ = capacity;
	}

	void push_back(const int value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
	}

	int size() {
		return size_;
	}

	int capacity() {
		return capacity_;
	}

	void print() {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int size_; // —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	int capacity_; // –µ–º–∫–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
	int* arr_; // —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
};

int main() {
	setlocale(LC_ALL, ""ru"");

	Vector vec1;

	vec1.push_back(10);
	vec1.push_back(15);
	vec1.push_back(20);
	vec1.push_back(25);
	vec1.push_back(22);

	vec1.print();

	vec1.pop_back();
	vec1.print();

	cout << vec1.size() << endl;
	cout << vec1.capacity() << endl;
}
"
JJim3JYk,qr code analyzer,sphinx2001,Kotlin,Saturday 1st of June 2024 02:24:46 AM CDT,"package com.comsoft.code_app

import android.content.pm.PackageManager
import android.graphics.Bitmap
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.camera.core.CameraSelector
import androidx.camera.core.ImageAnalysis
import androidx.camera.core.ImageCapture
import androidx.camera.core.ImageProxy
import androidx.camera.core.Preview
import androidx.camera.lifecycle.ProcessCameraProvider
import androidx.camera.view.PreviewView
import androidx.core.content.ContextCompat
import androidx.lifecycle.LifecycleOwner
import com.comsoft.code_app.databinding.ActivityScanBinding
import com.google.common.util.concurrent.ListenableFuture
import com.google.zxing.BinaryBitmap
import com.google.zxing.LuminanceSource
import com.google.zxing.RGBLuminanceSource
import com.google.zxing.common.HybridBinarizer
import com.google.zxing.qrcode.QRCodeReader
import java.nio.ByteBuffer
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors


typealias QRListener = (code: String) -> Unit

class ScanActivity : AppCompatActivity() {
    private lateinit var viewBinding: ActivityScanBinding
    private var imageCapture: ImageCapture? = null
    private lateinit var cameraExecutor: ExecutorService

    private val activityResultLauncher =
        registerForActivityResult(
            ActivityResultContracts.RequestMultiplePermissions())
        { permissions ->
            // Handle Permission granted/rejected
            var permissionGranted = true
            permissions.entries.forEach {
                if (it.key in REQUIRED_PERMISSIONS && it.value == false)
                    permissionGranted = false
            }
            if (!permissionGranted) {
                Toast.makeText(baseContext,
                    ""Permission request denied"",
                    Toast.LENGTH_SHORT).show()
            } else {
                startCamera()
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        viewBinding = ActivityScanBinding.inflate(layoutInflater)
        setContentView(viewBinding.root)

        // Request camera permissions
        if (allPermissionsGranted()) {
            startCamera()
        } else {
            requestPermissions()
        }
        cameraExecutor = Executors.newSingleThreadExecutor()

    }

    private fun allPermissionsGranted() = REQUIRED_PERMISSIONS.all {
        ContextCompat.checkSelfPermission(
            baseContext, it) == PackageManager.PERMISSION_GRANTED
    }
    private fun requestPermissions() {
        activityResultLauncher.launch(REQUIRED_PERMISSIONS)
    }

    private fun startCamera() {
        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)

        cameraProviderFuture.addListener({
            // Used to bind the lifecycle of cameras to the lifecycle owner
            val cameraProvider: ProcessCameraProvider = cameraProviderFuture.get()

            // Preview
            val preview = Preview.Builder()
                .build()
                .also {
                    it.setSurfaceProvider(viewBinding.viewFinder.surfaceProvider)
                }

            val imageAnalyzer = ImageAnalysis.Builder()
                .build()
                .also {
                    it.setAnalyzer(cameraExecutor, QrAnalyzer { decoded_str ->
                        runOnUiThread{
                            viewBinding.decodedText.setText(decoded_str)
                        }
                    })
                }

            // Select back camera as a default
            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA

            try {
                // Unbind use cases before rebinding
                cameraProvider.unbindAll()

                // Bind use cases to camera
                cameraProvider.bindToLifecycle(
                    this, cameraSelector, preview, imageAnalyzer)

            } catch(exc: Exception) {
                Log.e(TAG, ""Use case binding failed"", exc)
            }

        }, ContextCompat.getMainExecutor(this))
    }

    override fun onDestroy() {
        super.onDestroy()
        cameraExecutor.shutdown()
    }


    companion object {
        private const val TAG = ""CameraXApp""
        private const val FILENAME_FORMAT = ""yyyy-MM-dd-HH-mm-ss-SSS""
        private val REQUIRED_PERMISSIONS =
            mutableListOf (
                android.Manifest.permission.CAMERA,
                android.Manifest.permission.RECORD_AUDIO
            ).apply {
                if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.P) {
                    add(android.Manifest.permission.WRITE_EXTERNAL_STORAGE)
                }
            }.toTypedArray()
    }
    private class QrAnalyzer(private val listener: QRListener) : ImageAnalysis.Analyzer {
        fun BitmapToBinaryBitmap(src: Bitmap): BinaryBitmap {
            val intArray = IntArray(src.width * src.height)
            src.getPixels(intArray, 0, src.width, 0, 0, src.width, src.height)

            val source: LuminanceSource = RGBLuminanceSource(src.width, src.height, intArray)
            return BinaryBitmap(HybridBinarizer(source))
        }

        private fun ByteBuffer.toByteArray(): ByteArray {
            rewind()    // Rewind the buffer to zero
            val data = ByteArray(remaining())
            get(data)   // Copy the buffer into a byte array
            return data // Return the byte array
        }

        override fun analyze(image: ImageProxy) {

            //val buffer = image.planes[0].buffer
            val bitmap = image.toBitmap()
            //val data = buffer.toByteArray()
            var decoded_str = ""Test string""
            val reader = QRCodeReader()
            try {
                decoded_str = reader.decode(BitmapToBinaryBitmap(bitmap)).text
            } catch(e: Exception) {

            }
            finally {
                listener(decoded_str)
            }
            image.close()
        }
    }
}"
eQPmfxHY,Untitled,35657,C++,Saturday 1st of June 2024 02:11:58 AM CDT,"#include <iostream>

using namespace std;

struct client {
    char name[30]; // –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
    char phone_number[20]; // –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    int client_id; // id –∫–ª–∏–µ–Ω—Ç–∞
    int personal_discount; // —Ä–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏
    bool regular_customer; // –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å (–¥–∞ / –Ω–µ—Ç)
};

class client_base {

public:

    client_base() {
        clients = new client[5];
        clients_number = 0;
        clients_base_size = 5;
    }

    client_base(const int size) {
        clients = new client[size];
        clients_number = 0;
        clients_base_size = size;
    }

    void new_client(const char* name, const char* phone_number, const int client_id, const int personal_discount, const bool regular_customer) {
        if (clients_number == clients_base_size) {
            client* temp = new client[clients_base_size * 2];
            for (int i = 0; i < clients_number; i++) {
                temp[i] = clients[i];
            }
            delete[] clients;
            clients = temp;
            clients_base_size *= 2;
        }
        strcpy(clients[clients_number].name, name);
        strcpy(clients[clients_number].phone_number, phone_number);
        clients[clients_number].client_id = client_id;
        clients[clients_number].personal_discount = personal_discount;
        clients[clients_number].regular_customer = regular_customer;
        clients_number++;
    }

    void del_client(const char* name) {
        for (int i = 0; i < clients_number; i++) {
            if (!strcmp(clients[i].name, name)) {
                for (int j = i; j < clients_number - 1; j++) {
                    clients[j] = clients[j + 1];
                }
                clients_number--;
            }
        }
    }


    void find_client(const char* name) {
        for (int i = 0; i < clients_number; i++) {
            if (!strcmp(clients[i].name, name)) {
                print_client(clients[i]);
            }
        }
        cout << endl;
    }

    void show_all_clients() {
        for (int i = 0; i < clients_number; i++) {
            print_client(clients[i]);
        }
        cout << endl;
    }

    void show_regular_clients() {
        for (int i = 0; i < clients_number; i++) {
            if (clients[i].regular_customer) {
                print_client(clients[i]);
            }
        }
        cout << endl;
    }

    ~client_base() {
        delete[] clients;
    }

private:

    void print_client(const client& cl) {
        cout << cl.name << "" "" << cl.phone_number << "" "" << cl.client_id << "" "" << cl.personal_discount;
        if (cl.regular_customer) {
            cout << "" –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å"";
        }
        cout << endl;
    }

    client* clients; // –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    int clients_number; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
    int clients_base_size; // —Ç–µ–∫—É—â–∏–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –±–∞–∑—ã
};

int main() {

    setlocale(LC_ALL, ""ru"");

    client_base my_base(200);

    my_base.new_client(""–ò–≤–∞–Ω"", ""+79111111111"", 1129, 10, true);
    my_base.new_client(""–í–∞—Å—è"", ""+79111111222"", 1130, 5, false);
    my_base.new_client(""–û–ª–µ–≥"", ""+79111111333"", 1131, 15, true);
    my_base.new_client(""–ú–∞—Ä–∏—è"", ""+79111111444"", 1132, 10, false);
    my_base.new_client(""–ì–∞–ª—è"", ""+79111111555"", 1133, 20, true);
    my_base.show_all_clients();

    my_base.del_client(""–ò–≤–∞–Ω"");
    my_base.show_regular_clients();

    my_base.find_client(""–ì–∞–ª—è"");
}

"
3vdXrkrR,Modified package.lua to error handle my low IQ,sgt_jupiter,Lua,Saturday 1st of June 2024 01:34:44 AM CDT,"local package = {}
 
package.config = ""/\n;\n?\n!\n-\n""
 
package.path = ""/lib/?.lua;/usr/lib/?.lua;/home/lib/?.lua;./?.lua;/lib/?/init.lua;/usr/lib/?/init.lua;/home/lib/?/init.lua;./?/init.lua""
 
local loading = {}
local preload = {}
local searchers = {}
 
local loaded = {
  [""_G""] = _G,
  [""bit32""] = bit32,
  [""coroutine""] = coroutine,
  [""math""] = math,
  [""os""] = os,
  [""package""] = package,
  [""string""] = string,
  [""table""] = table
}
package.loaded = loaded
package.preload = preload
package.searchers = searchers
 
function package.searchpath(name, path, sep, rep)
  checkArg(1, name, ""string"")
  checkArg(2, path, ""string"")
  sep = sep or '.'
  rep = rep or '/'
  sep, rep = '%' .. sep, rep
  name = string.gsub(name, sep, rep)
  local fs = require(""filesystem"")
  local errorFiles = {}
  for subPath in string.gmatch(path, ""([^;]+)"") do
    subPath = string.gsub(subPath, ""?"", name)
    if subPath:sub(1, 1) ~= ""/"" and os.getenv then
      subPath = fs.concat(os.getenv(""PWD"") or ""/"", subPath)
    end
    if fs.exists(subPath) then
      local file = fs.open(subPath, ""r"")
      if file then
        file:close()
        return subPath
      end
    end
    table.insert(errorFiles, ""no file '"" .. subPath .. ""'"")
  end
  return nil, table.concat(errorFiles, ""\n\t"")
end
 
table.insert(searchers, function(module)
  if package.preload[module] then
    return package.preload[module]
  end
 
  return ""no field package.preload['"" .. module .. ""']""
end)
table.insert(searchers, function(module)
  local library, path, status
 
  path, status = package.searchpath(module, package.path)
  if not path then
    return status
  end
 
  library, status = loadfile(path)
  if not library then
    error(string.format(""error loading module '%s' from file '%s':\n\t%s"", module, path, status))
  end
 
  return library, module
end)
 
function require(module)
  checkArg(1, module, ""string"")
  if loaded[module] ~= nil then
    return loaded[module]
  elseif loading[module] then
    error(""already loading: "" .. module .. ""\n"" .. debug.traceback(), 2)
  else
    local library, status, arg
    local errors = """"
 
    if type(searchers) ~= ""table"" then error(""'package.searchers' must be a table"") end
    for _, searcher in pairs(searchers) do
      library, arg = searcher(module)
      if type(library) == ""function"" then break end
      if type(library) ~= nil then
        errors = errors .. ""\n\t"" .. tostring(library)
        library = nil
      end
    end
    if not library then error(string.format(""module '%s' not found:%s"", module, errors)) end
 
    loading[module] = true
    library, status = pcall(library, arg or module)
    loading[module] = false
    assert(library, string.format(""module '%s' load failed:\n%s"", module, status))
    loaded[module] = status
    return status
  end
end
 
function package.delay(lib, file)
  local mt = {}
  function mt.__index(tbl, key)
    mt.__index = nil
    dofile(file)
    return tbl[key]
  end
  if lib.internal then
    setmetatable(lib.internal, mt)
  end
  setmetatable(lib, mt)
end
 
-------------------------------------------------------------------------------
 
return package
"
CpGfEj13,free coins ü§ëü§ë,404Coder,Lua,Saturday 1st of June 2024 01:25:41 AM CDT,"local Coins = game.Player.('LocalPlayer').Value
if coins == value + value then 
    coins.Value = Value + > 999999999999999999999999999999999999999999999999999
    end
"
fqKQHBeu,Overlay L,_Pandora,CSS,Saturday 1st of June 2024 12:33:58 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/11ha4lh5p48acdag2h4kb/lesbianoverlay.css?rlkey=lo2ywjjvmqgwp1xcuc2iniz79&st=evggyxw1&dl=0"" />"
PSfzkc2n,Lesbian Border,_Pandora,CSS,Saturday 1st of June 2024 12:32:27 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/sh734nhsp49pg05jl8c6b/lesbianborder.css?rlkey=v7gx7yc09k0ccexmenxv7oogx&st=r339zga6&dl=0"" />"
icyCtFLs,Lesbian BG,_Pandora,CSS,Saturday 1st of June 2024 12:31:39 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/x7st1l1msmiblaj75sziz/lesbianbackground.css?rlkey=qha9e4p4046lnp9a1221954qz&st=p3dt36lt&dl=0"" />"
dU0B2Y7s,Genderfluid Overlay,_Pandora,CSS,Saturday 1st of June 2024 12:28:47 AM CDT,"<link rel=""stylesheet"" type=""text/css"" href=""https://dl.dropbox.com/s/r3t9lifia8vv19eym4d0j/genoverlay.css?rlkey=4n5tbq42k8yqu7c0bx2rr7f24&st=gnwc9250&dl=0"" />"
