id,title,username,language,date,content
txA6szQq,Untitled,Gineticus,C++,Wednesday 28th of February 2024 06:05:07 AM CDT,"    FloatPoint operator+(const FloatPoint& other) {
        uint64_t sign_lhs = sign(value_);
        uint64_t exp_lhs = exp(value_);
        uint64_t mant_lhs = mant(value_);

        uint64_t sign_rhs = sign(other.value_);
        uint64_t exp_rhs = exp(other.value_);
        uint64_t mant_rhs = mant(other.value_);

        if (exp_lhs == exp_mask_ || exp_rhs == exp_mask_) {
            if (mant_lhs != 0 || mant_rhs != 0) {
                return FloatPoint((1ull << bits_) - 1, round_);
            }
            if (exp_lhs == exp_mask_ && exp_rhs == exp_mask_) {
                if (sign_lhs == sign_rhs) {
                    return FloatPoint(value_, round_);
                }
                return FloatPoint((1ull << bits_) - 1, round_);
            }
            if (exp_lhs == exp_mask_) {
                return FloatPoint(value_, round_);
            }
            return FloatPoint(other.value_, round_);
        }
        if (exp_lhs == 0 && mant_lhs == 0) {
            return FloatPoint(other.value_, round_);
        }
        if (exp_rhs == 0 && mant_rhs == 0) {
            return FloatPoint(value_, round_);
        }
        if (exp_lhs != 0) {
            mant_lhs |= (1 << mant_bits_);
        }
        if (exp_rhs != 0) {
            mant_rhs |= (1 << mant_bits_);
        }

        int16_t exp_diff = exp_lhs - exp_rhs;
        if (exp_diff < 0) {
            std::swap(mant_lhs, mant_rhs);
            std::swap(exp_lhs, exp_rhs);
            std::swap(sign_lhs, sign_rhs);
            exp_diff = -exp_diff;
        }

        if (exp_diff > mant_bits_ + 1) {
            mant_lhs &= mant_mask_;
            uint32_t res = mant_lhs | (exp_lhs << 23) | (sign_lhs << 31);
            return FloatPoint(res, round_);
        }

        uint64_t sign_res = 0;
        uint64_t exp_res = 0;
        uint64_t mant_res = 0;

        mant_lhs <<= exp_diff;
        exp_lhs = exp_rhs;
        if (sign_lhs) mant_lhs = -mant_lhs;
        if (sign_rhs) mant_rhs = -mant_rhs;
        mant_res = mant_lhs + mant_rhs;
        if (mant_res & (1ull << 63)) {
            sign_res = 1;
            mant_res = -mant_res;
        }
        exp_res = exp_lhs;

        uint64_t lost = mant_res;
        int16_t lost_size = 0;
        while ((mant_res >> mant_bits_) != 1 &&
               exp_res != exp_mask_) {
            if ((mant_res >> mant_bits_) > 1) {
                lost_size++;
                mant_res >>= 1;
                exp_res++;
            } else {
                mant_res <<= 1;
                exp_res--;
                if (exp_res == 0) {
                    break;
                }
            }
        }
        lost &= (1 << lost_size) - 1;
        if (exp_res == 0 && mant_res >> mant_bits_ == 1) {
            exp_res++;
        }

        switch (round_) {
            case RoundingMode::TOWAR_ZERO:
                break;
            case RoundingMode::TOWARD_NEAREST_EVEN: {
                if (lost > (1 << (lost_size - 1)) ||
                    (lost == (1 << (lost_size - 1)) && (mant_res & 1))) {
                    mant_res++;
                }
                if ((mant_res >> mant_bits_) > 1) {
                    exp_res++;
                    mant_res >>= 1;
                }
                break;
            }
            case RoundingMode::TOWARD_INF: {
                if (lost != 0 && !sign_res) {
                    mant_res++;
                }
                if ((mant_res >> mant_bits_) > 1) {
                    exp_res++;
                    mant_res >>= 1;
                }
                break;
            }
            case RoundingMode::TOWARD_NEG_INF: {
                if (lost != 0 && sign_res) {
                    mant_res++;
                }
                if ((mant_res >> mant_bits_) > 1) {
                    exp_res++;
                    mant_res >>= 1;
                }
                break;
            }
        }

        mant_res &= mant_mask_;
        if (exp_res == exp_mask_) {
            if (sign_res) {
                uint32_t neg_inf =
                    (1 << (bits_ - 1)) | (exp_mask_ << mant_bits_);
                return FloatPoint(neg_inf, round_);
            }
            uint32_t inf = exp_mask_ << mant_bits_;
            return FloatPoint(inf, round_);
        }

        uint32_t res =
            mant_res | (exp_res << mant_bits_) | (sign_res << (bits_ - 1));
        return FloatPoint(res, round_);
    }"
isXA3P0w,snmp1234,G0nz0uk,YAML,Wednesday 28th of February 2024 06:02:19 AM CDT,"# Define the SNMP version and authentication details.
auths:
  idrac_v2:
    version: 2
    community: public
  cisco_v2:
    version: 2
    community: B3ard
  aruba_v2:
    version: 2
    community: extro
  extreme_v2:
    version: 2
    community: Mcd0nalds

# Define the module for collecting specific metrics.
modules:
  # Default IF-MIB interfaces table with ifIndex.
  if_mib:
    walk: [sysUpTime, interfaces, ifXTable]
    lookups:
      - source_indexes: [ifIndex]
        lookup: ifAlias
      - source_indexes: [ifIndex]
        # Uis OID to avoid conflict with PaloAlto PAN-COMMON-MIB.
        lookup: 1.3.6.1.2.1.2.2.1.2 # ifDescr
      - source_indexes: [ifIndex]
        # Use OID to avoid conflict with Netscaler NS-ROOT-MIB.
        lookup: 1.3.6.1.2.1.31.1.1.1.1 # ifName
    overrides:
      ifAlias:
        ignore: true # Lookup metric
      ifDescr:
        ignore: true # Lookup metric
      ifName:
        ignore: true # Lookup metric
      ifType:
        type: EnumAsInfo
  dell_idrac:  # Rename ""my_device_metrics"" to something more descriptive to reference in prometheus
    walk:
      - .1.3.6.1.4.1.674.10892.5.1.3.6.0  # system-osname
      - .1.3.6.1.4.1.674.10892.5.4.300.50.1.8.1.1  # bios-version-new
      - .1.3.6.1.4.1.674.10892.5.4.300.50.1.7.1.1  # bios-version-date
      - .1.3.6.1.4.1.674.10892.5.1.1.8.0  # idrac-version
      - .1.3.6.1.4.1.674.10892.5.1.3.14.0  # system-osversion
      - .1.3.6.1.4.1.674.10892.5.1.3.12.0  # system-model
      - .1.3.6.1.4.1.674.10892.5.1.1.6.0  # idrac-url
      - .1.3.6.1.4.1.674.10892.5.2.4.0  # power-state
      - .1.3.6.1.4.1.674.10892.5.2.5.0  # system-uptime
      - .1.3.6.1.4.1.674.10892.5.1.3.2.0  # system-servicetag
      - .1.3.6.1.4.1.674.10892.5.2.1.0  # system-globalstatus
      - .1.3.6.1.4.1.674.10892.5.4.300.50.1.8  # bios-version
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.15.1.4  # raid-batterystate
      - .1.3.6.1.4.1.674.10892.5.4.300.70.1.6  # intrusion-sensor
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.35  # disks-mediatype
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.4  # disks-state
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.31  # disks-predictivefail
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.11  # disks-capacity
      - .1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.2  # disks-name
      - .1.3.6.1.4.1.674.10892.5.4.200.10.1.27  # memory-status
      - .1.3.6.1.4.1.674.10892.5.2.3  # storage-status
      - .1.3.6.1.4.1.674.10892.5.4.200.10.1.63  # temp-status
      - .1.3.6.1.4.1.674.10892.5.4.200.10.1.9  # psu-status
      - .1.3.6.1.4.1.674.10892.5.4.300.40.1.8  # log-dates
      - .1.3.6.1.4.1.674.10892.5.4.300.40.1.5  # log-entry
      - .1.3.6.1.4.1.674.10892.5.4.300.40.1.7  # log-severity
      - .1.3.6.1.4.1.674.10892.5.4.300.40.1.2  # log-number
      - .1.3.6.1.4.1.674.10892.5.4.1100.90.1.30  # nic-name
      - .1.3.6.1.4.1.674.10892.5.4.1100.90.1.7  # nic-vendor
      - .1.3.6.1.4.1.674.10892.5.4.1100.90.1.4  # nic-status
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.1  # fan1-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.2  # fan2-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.3  # fan3-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.4  # fan4-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.5  # fan5-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.6  # fan6-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.7  # fan7-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.8  # fan8-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.9  # fan9-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.10  # fan10-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.11  # fan11-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.12  # fan12-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.13  # fan13-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.14  # fan14-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.15  # fan15-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.16  # fan16-speed
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.1  # inlet-temp
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.2  # exhaust-temp
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.3  # cpu1-temp
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.4  # cpu2-temp
      - .1.3.6.1.4.1.674.10892.5.4.600.50.1.6.1.1  # cmos-batterystate
      - .1.3.6.1.4.1.674.10892.5.4.600.30.1.6.1.3  # system-watts
      - .1.3.6.1.4.1.674.10892.5.4.600.30.1.6.1.1  # system-watts-2
    max_repetitions: 25
    retries: 3
    timeout: 5s
    lookups:
      # Example lookup configuration - customize as needed based on your OIDs
      # This section is more relevant if you're referencing a table and want to correlate indices with meaningful labels.
    overrides:
      # Here you can override specific MIBs or metrics behaviors
      cpu1_temp:
        ignore: false
        type: gauge
      cpu2_temp:
        ignore: false
        type: gauge
      fan1_speed:
        ignore: false
        type: gauge
      fan2_speed:
        ignore: false
        type: gauge
      fan3_speed:
        ignore: false
        type: gauge
      fan4_speed:
        ignore: false
        type: gauge
"
DsbkPhtB,data854,TestGuy1,JSON,Wednesday 28th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '07fccf40fa98000c47d1eca902bd973403a61ef0d02189984a0aae21b1a481d8dea4e39ecea4ae21cd3f5fb6f8f2937d32fa5f4727d0e2d5ef064705a826068d638d4795db25ce969c3c5ef858654f6b1ef733000aa8bb27a4ec7b8e1ef1a36aaa3b6411290b05a45b4546ddf747f3cb7587326d6dcd26bd64ee96734c550eda',
  otherdata: [
    'd740bae59093487bbb1ddd75ed613f67',
    '7747049f7ee5df3ee6518371a7329afa',
    '4fc1fef6bff6ba8b4c72afa00ecaa087',
    '04348c1216986a4bfd5a516a1ffe03f8',
    '53a25096330eaea05faf8cfb04d976f2',
    'b3870b96fc5601776442e345f1eccd42',
    '0e3ca9d924f9ee32bd23385ab01bcc12',
    'bfa5f63361a0451080ef130270c9e472'
  ]
}"
J9qAUBXg,Untitled,h1n0t0r1,Python,Wednesday 28th of February 2024 05:51:04 AM CDT,"# Read user input
user_input = float(input())
coins = 0
# Logic
user_input = int(user_input * 100)  # Convert to stotinki
if user_input // 200 > 0:
    coins += user_input // 200
    user_input -= (user_input // 200) * 200
if user_input // 100 > 0:
    coins += user_input // 100
    user_input -= (user_input // 100) * 100
if user_input // 50 > 0:
    coins += user_input // 50
    user_input -= (user_input // 50) * 50
if user_input // 20 > 0:
    coins += user_input // 20
    user_input -= (user_input // 20) * 20
if user_input // 10 > 0:
    coins += user_input // 10
    user_input -= (user_input // 10) * 10
if user_input // 5 > 0:
    coins += user_input // 5
    user_input -= (user_input // 5) * 5
if user_input // 2 > 0:
    coins += user_input // 2
    user_input -= (user_input // 2) * 2
coins += user_input

# Print Output
print(coins)


"
brPGLZbG,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Wednesday 28th of February 2024 05:43:46 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_309385.pdf

Working as of:
28 February 2024"
NDMGJvk1,Untitled,h1n0t0r1,Python,Wednesday 28th of February 2024 05:42:14 AM CDT,"# Read user input
user_input = float(input())
coins = 0
# Logic
user_input = int(user_input * 100)  # Convert to stotinki

while user_input > 0:
    if user_input // 200 >= 1:  # change can be 1 lev
        coins += 1
        user_input -= 200
    elif user_input // 100 >= 1:  # change can be 1 lev
        coins += 1
        user_input -= 100
    elif user_input // 50 >= 1: # Change can be 50 stotinki
        coins += 1
        user_input -= 50
    elif user_input // 20 >= 1:
        coins += 1
        user_input -= 20
    elif user_input // 10 >= 1:
        coins += 1
        user_input -= 10
    elif user_input // 5 >= 1:
        coins += 1
        user_input -= 5
    elif user_input // 2 >= 1:
        coins += 1
        user_input -= 2
    elif user_input == 1:
        coins += 1
        user_input -= 1

print(coins)


"
Z6fnPvyL,Untitled,sissou123,C,Wednesday 28th of February 2024 05:32:37 AM CDT,"C Programming Masterclass: Pointers & Advanced C Language
C Programming Advanced Topics: Pointers, Memory, Low-Level C Language and Embedded C Preparation  
What you'll learn
Introduction To Pointers For Beginners
Pointers Declaration, Initialization, and Usage 
for more:https://cuty.io/zBaeF
"
rsYFUKNL,Convert html tags from website to txt and than merge txt,nicuf,Python,Wednesday 28th of February 2024 05:29:42 AM CDT,"import os
import re
import html

def extrage_text_html(director_sursa, director_destinatie, fisier_final):
    if not os.path.exists(director_destinatie):
        os.makedirs(director_destinatie)

    for fisier in os.listdir(director_sursa):
        if fisier.endswith("".html""):
            cale_fisier = os.path.join(director_sursa, fisier)
            print(f""Procesez fisierul: {fisier}"")
            with open(cale_fisier, 'r', encoding='utf-8') as f:
                continut = f.read()

            # Decodifică entitățile HTML
            continut = html.unescape(continut)

            # Extrage textul din h1 folosind expresii regulate
            h1_match = re.search(r'<h1 class=""custom-h1"" itemprop=""name"">(.*?)</h1>', continut)
            h1_text = h1_match.group(1) if h1_match else 'Titlu lipsă'

            # Extrage textul din secțiunea articol
            articol_match = re.search(r'<!-- ARTICOL START -->([\s\S]*?)<!-- ARTICOL FINAL -->', continut)
            articol_text = articol_match.group(1) if articol_match else 'Conținut articol lipsă'
            articol_text = re.sub(r'<[^>]+>', '', articol_text)  # Elimină toate tagurile HTML

            continut_final = f""{h1_text}\n\n{articol_text}""

            nume_fisier_destinatie = os.path.splitext(fisier)[0] + '.txt'
            with open(os.path.join(director_destinatie, nume_fisier_destinatie), 'w', encoding='utf-8') as f_dest:
                f_dest.write(continut_final)
            print(f""Fisierul {fisier} a fost procesat si salvat ca {nume_fisier_destinatie}."")

    # Unește toate fișierele txt
    print(""Unesc toate fișierele txt într-un singur fișier..."")
    with open(os.path.join(director_destinatie, fisier_final), 'w', encoding='utf-8') as f_final:
        for fisier in sorted(os.listdir(director_destinatie)):
            if fisier.endswith("".txt""):
                with open(os.path.join(director_destinatie, fisier), 'r', encoding='utf-8') as f:
                    f_final.write(f.read() + '\n\n')
    print(f""Conversia tuturor fișierelor în {fisier_final} a fost finalizată cu succes."")

# Apelează funcția cu calea către directorul sursă și destinatie
extrage_text_html('e:\\Carte\\BB\\17 - Site Leadership\\Principal 2022\\ro\\', 'D:\\Test-Fisier', 'fisier_final.txt')
"
a5CcemZR,Untitled,chemelli74,Python,Wednesday 28th of February 2024 05:16:48 AM CDT,"""""""Support for humidifiers.""""""
from __future__ import annotations

from enum import StrEnum
from typing import Any

from aiocomelit import ComelitSerialBridgeObject
from aiocomelit.const import CLIMATE

from homeassistant.components.humidifier import (
    MODE_AUTO,
    MODE_NORMAL,
    HumidifierAction,
    HumidifierDeviceClass,
    HumidifierEntity,
    HumidifierEntityFeature,
)
from homeassistant.config_entries import ConfigEntry
from homeassistant.core import HomeAssistant
from homeassistant.exceptions import ServiceValidationError
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity

from .const import DOMAIN
from .coordinator import ComelitSerialBridge


class HumidifierComelitMode(StrEnum):
    """"""Serial Bridge humidifier modes.""""""

    AUTO = ""A""
    OFF = ""O""
    LOWER = ""L""
    UPPER = ""U""


class HumidifierComelitAction(StrEnum):
    """"""Serial Bridge humidifier actions.""""""

    OFF = ""off""
    ON = ""on""
    MANUAL = ""man""
    SET = ""set""
    AUTO = ""auto""
    LOWER = ""lower""
    UPPER = ""upper""


MODE_TO_ACTION: dict[str, HumidifierComelitAction] = {
    MODE_AUTO: HumidifierComelitAction.AUTO,
    MODE_NORMAL: HumidifierComelitAction.MANUAL,
}


async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """"""Set up Comelit humidifiers.""""""

    coordinator: ComelitSerialBridge = hass.data[DOMAIN][config_entry.entry_id]

    entities: list[ComelitHumidifierEntity] = [
        *[
            ComelitHumidifierEntity(
                coordinator,
                device,
                config_entry.entry_id,
                active_mode=HumidifierComelitMode.LOWER,
                active_action=HumidifierAction.DRYING,
                set_action=HumidifierComelitAction.LOWER,
                device_class=HumidifierDeviceClass.DEHUMIDIFIER,
            ),
            ComelitHumidifierEntity(
                coordinator,
                device,
                config_entry.entry_id,
                active_mode=HumidifierComelitMode.UPPER,
                active_action=HumidifierAction.HUMIDIFYING,
                set_action=HumidifierComelitAction.UPPER,
                device_class=HumidifierDeviceClass.HUMIDIFIER,
            ),
        ]
        for device in coordinator.data[CLIMATE].values()
    ]

    async_add_entities(entities)


class ComelitHumidifierEntity(CoordinatorEntity[ComelitSerialBridge], HumidifierEntity):
    """"""Humidifier device.""""""

    _attr_supported_features = HumidifierEntityFeature.MODES
    _attr_available_modes = [MODE_NORMAL, MODE_AUTO]
    _attr_min_humidity = 10
    _attr_max_humidity = 90
    _attr_has_entity_name = True

    def __init__(
        self,
        coordinator: ComelitSerialBridge,
        device: ComelitSerialBridgeObject,
        config_entry_entry_id: str,
        active_mode: HumidifierComelitMode,
        active_action: HumidifierAction,
        set_action: HumidifierComelitAction,
        device_class: HumidifierDeviceClass,
    ) -> None:
        """"""Init light entity.""""""
        self._api = coordinator.api
        self._device = device
        super().__init__(coordinator)
        # Use config_entry.entry_id as base for unique_id
        # because no serial number or mac is available
        self._attr_unique_id = f""{config_entry_entry_id}-{device.index}-{device_class}""
        self._attr_device_info = coordinator.platform_device_info(device, device_class)
        self._attr_device_class = device_class
        self._attr_translation_key = device_class.value
        self._active_mode = active_mode
        self._active_action = active_action
        self._set_action = set_action

    @property
    def _humidifier(self) -> list[Any]:
        """"""Return humidifier device data.""""""
        # CLIMATE has a 2 item tuple:
        # - first  for Clima
        # - second for Humidifier
        return self.coordinator.data[CLIMATE][self._device.index].val[1]

    @property
    def _api_mode(self) -> str:
        """"""Return device mode.""""""
        # Values from API: ""O"", ""L"", ""U""
        return self._humidifier[2]

    @property
    def _api_active(self) -> bool:
        ""Return device active/idle.""
        return self._humidifier[1]

    @property
    def _api_automatic(self) -> bool:
        """"""Return device in automatic/manual mode.""""""
        return self._humidifier[3] == HumidifierComelitMode.AUTO

    @property
    def target_humidity(self) -> int:
        """"""Set target humidity.""""""
        return self._humidifier[4] / 10

    @property
    def current_humidity(self) -> int:
        """"""Return current humidity.""""""
        return self._humidifier[0] / 10

    @property
    def is_on(self) -> bool | None:
        """"""Return true is humidifier is on.""""""
        return self._api_mode == self._active_mode

    @property
    def mode(self) -> str | None:
        """"""Return current mode.""""""
        return MODE_AUTO if self._api_automatic else MODE_NORMAL

    @property
    def action(self) -> HumidifierAction | None:
        """"""Return current action.""""""

        if self._api_mode == HumidifierComelitMode.OFF:
            return HumidifierAction.OFF

        if self._api_active and self._api_mode == self._active_mode:
            return self._active_action

        return HumidifierAction.IDLE

    async def async_set_humidity(self, humidity: int) -> None:
        """"""Set new target humidity.""""""
        if self.mode == HumidifierComelitMode.OFF:
            raise ServiceValidationError(
                translation_domain=DOMAIN,
                translation_key=""humidity_while_off"",
            )

        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.MANUAL
        )
        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.SET, humidity
        )

    async def async_set_mode(self, mode: str) -> None:
        """"""Set humidifier mode.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, MODE_TO_ACTION[mode]
        )

    async def async_turn_on(self, **kwargs: Any) -> None:
        """"""Turn on.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, self._set_action
        )

    async def async_turn_off(self, **kwargs: Any) -> None:
        """"""Turn off.""""""
        await self.coordinator.api.set_humidity_status(
            self._device.index, HumidifierComelitAction.OFF
        )
"
30rsMU1f,Untitled,psi_mmobile,PL/SQL,Wednesday 28th of February 2024 05:11:51 AM CDT,"SELECT
    *
FROM
    vehicle_owner
WHERE
    company_name LIKE '%FAYAT%';--111549

SELECT
    *
FROM
    working_schedule
WHERE
    vehicle_owner_id = 111549;

SELECT
    *
FROM
    working_schedule_day
WHERE
    working_schedule_id = 120387;

INSERT INTO working_schedule (
    working_schedule_id,
    vehicle_owner_id,
    name,
    pause_min,
    pause_morning_min,
    pause_night_min,
    min_hr_meal_allowance,
    working_schedule_code,
    working_schedule_type_code,
    is_active,
    order_num,
    lm_name,
    lm_date,
    creation_date,
    working_schedule_type_id,
    erp_nbr_day_per_week
) VALUES (
    seq_working_schedule_id.NEXTVAL,
    111549,
    'HPR_35',
    0,
    0,
    0,
    4,
    'HPR_35',
    'HPR_35',
    'Y',
    1034,
    'PSI',
    sysdate,
    sysdate,
    2,
    5
);

commit;

insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,1,8);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,2,8);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,3,8);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,4,8);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,5,7);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,6,0);
insert into working_schedule_day (working_schedule_day_id,working_schedule_id,day_id,nbr_hr)
values (seq_working_schedule_day_id.nextval,120387,7,0);

update working_schedule set contractual_week_hr=3,contractual_month_hr=13,erp_nbr_day_per_week=2,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule set contractual_week_hr=12,contractual_month_hr=52,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule set contractual_week_hr=17.5,contractual_month_hr=75.83,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule set contractual_week_hr=17.5,contractual_month_hr=75.83,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule set contractual_week_hr=20,contractual_month_hr=86.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule set contractual_week_hr=21,contractual_month_hr=91,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule set contractual_week_hr=21,contractual_month_hr=91,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule set contractual_week_hr=21,contractual_month_hr=91,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule set contractual_week_hr=21,contractual_month_hr=91,erp_nbr_day_per_week=3,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule set contractual_week_hr=25,contractual_month_hr=108.33,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule set contractual_week_hr=28,contractual_month_hr=121.33,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule set contractual_week_hr=28,contractual_month_hr=121.33,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule set contractual_week_hr=28,contractual_month_hr=121.33,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule set contractual_week_hr=29,contractual_month_hr=125.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule set contractual_week_hr=30,contractual_month_hr=130,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule set contractual_week_hr=31,contractual_month_hr=134.33,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule set contractual_week_hr=31,contractual_month_hr=134.33,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule set contractual_week_hr=31,contractual_month_hr=134.33,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule set contractual_week_hr=31.5,contractual_month_hr=136.5,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule set contractual_week_hr=32,contractual_month_hr=138.67,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule set contractual_week_hr=32,contractual_month_hr=138.67,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule set contractual_week_hr=33,contractual_month_hr=142.92,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule set contractual_week_hr=35,contractual_month_hr=151.67,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule set contractual_week_hr=39,contractual_month_hr=169,erp_nbr_day_per_week=4,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule set contractual_week_hr=37,contractual_month_hr=160.33,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule set contractual_week_hr=36,contractual_month_hr=156,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule set contractual_week_hr=36,contractual_month_hr=156,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule set contractual_week_hr=39,contractual_month_hr=169,erp_nbr_day_per_week=5,lm_name='PSI',lm_date=sysdate where working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');
// update mondays
update working_schedule_day set nbr_hr=0 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=2 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=4 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=0 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=0 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=0 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=5 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=4 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=5.8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=6.25 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=6.5 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=7 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=4 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=9 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=8.75 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=8.75 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=10 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=7.4 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=8 where day_id=1 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update tuesdays
update working_schedule_day set nbr_hr=1.5 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=2 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=4 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=0 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=5 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=5.8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=6.25 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=0 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=6.5 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=7 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=9 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=9 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=8.75 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=8.75 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=10 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=7.4 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=8 where day_id=2 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update wednesdays
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=2 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=3.5 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=4 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=7 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=7 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=7 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=5 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=7 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=5.8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=6.25 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=6.5 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=5 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=7 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=9 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=3 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=4 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=9 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=8.75 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=0 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=10 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=7.4 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=4 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=8 where day_id=3 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update thursdays
update working_schedule_day set nbr_hr=0 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=4 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=0 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=0 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=4 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=0 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=5 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=5.8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=6.25 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=6.5 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=7 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=9 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=8.75 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=8.75 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=9 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=7.4 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=8 where day_id=4 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update fridays
update working_schedule_day set nbr_hr=1.5 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=2 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=3.5 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=4 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=5 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=5.8 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=6 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=6 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=5.5 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=8 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=4 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=8 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=3 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=8.75 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=0 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=7.4 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=4 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=8 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=7 where day_id=5 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update saturdays

update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=0 where day_id=6 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

// update sundays
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_01');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_02');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_03');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_04');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_05');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_06');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_07');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_08');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_09');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_10');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_11');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_12');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_13');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_14');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_15');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_16');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_17');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_18');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_19');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_20');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_21');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_22');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_23');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_24');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_25');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_26');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_27');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_28');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_29');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_30');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_31');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_32');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_33');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_34');
update working_schedule_day set nbr_hr=0 where day_id=7 and working_schedule_id=(select working_schedule_id from working_schedule where vehicle_owner_id=111549 and is_active='Y' and working_schedule_type_code='HPR_35');

"
xx7p1JHi,Untitled,bebo231312312321,JavaScript,Wednesday 28th of February 2024 05:00:22 AM CDT,"// Global variables
const buttonCalculate = document.getElementById(""calculate"");
const buttonClean = document.getElementById(""clean"");
const buttonFilter = document.getElementById(""applyFilter"");
const filterNumberInput = document.getElementById(""filterNumber"");
const modal = document.getElementById(""modal"");
const result = document.getElementById(""result"");
const inputName = document.getElementById(""name"");
const errorDiv = document.getElementById(""error"");

const bgFilterContainer = document.getElementById(""bgFilterContainer"");
const bgFilterNumberInput = document.getElementById(""bgFilterNumber"");
const applyBgFilterButton = document.getElementById(""applyBgFilter"");

applyBgFilterButton.addEventListener(""click"", function() {
    const bgNumber = parseInt(bgFilterNumberInput.value, 10);
    displayBgFilteredResults(bgNumber);
});



let allResults = [];

// Convert letters to numbers
const lettersToNumbers = {
    а: 1, й: 1,  т: 1,  ь: 1,  a: 1, á: 1, ã: 1, â: 1, j: 1, s: 1,
    б: 2, к: 11, у: 2,  ю: 11,  b: 2,  k: 11, t: 2,
    в: 3, л: 3,  ф: 3,  я: 3,  c: 3,  l: 3, u: 3, ú: 3,
    г: 4, м: 4,  х: 22, d: 4,  m: 4, v: 22,
    д: 5, н: 5,  ц: 5,  e: 5,  é: 5, ê: 5, n: 5, ñ: 5, w: 5,
    е: 6, о: 6,  ч: 6,  f: 6,  o: 6, ó: 6, ô: 6, x: 6,
    ж: 7, п: 7,  ш: 7,  g: 7,  p: 7, y: 7,
    з: 8, р: 8,  щ: 8,  h: 8,  q: 8, z: 8,
    и: 9, с: 9,  ъ: 9,  i: 9,  í: 9, r: 9

};

// Function for transliteration
function transliterate(text) {
    const transliterationMap = {
         // lower case
         'a' : 'а',
         'b' : 'б',
         'c' : 'к',
         'd' : 'д',
         'e' : 'е',
         'f' : 'ф',
         'g' : 'г',
         'h' : 'х',
         'i' : 'и',
         'j' : 'дж',
         'k' : 'к',
         'l' : 'л',
         'm' : 'м',
         'n' : 'н',
         'o' : 'о',
         'p' : 'п',
         'q' : 'к',
         'r' : 'р',
         's' : 'с',
         't' : 'т',
         'u': ['у', 'ю'],
         'v' : 'в',
         'w' : 'в',
         'x' : 'екс',
         'y' : 'и',
         'z' : 'з',
 
         // upper case
         'A' : 'А',
         'B' : 'Б',
         'C' : 'К',
         'D' : 'Д',
         'E' : 'Е',
         'F' : 'Ф',
         'G' : 'Г',
         'H' : 'Х',
         'I' : 'И',
         'J' : 'ДЖ',
         'K' : 'К',
         'L' : 'Л',
         'M' : 'М',
         'N' : 'Н',
         'O' : 'О',
         'P' : 'П',
         'Q' : 'К',
         'R' : 'Р',
         'S' : 'С',
         'T' : 'Т',
         'U': ['У', 'Ю'],
         'V' : 'В',
         'W' : 'В',
         'X' : 'ЕКС',
         'Y' : 'И',
         'Z' : 'З',
    };

    text = text.replace(/ия\b/g, ""ia"")
    .replace(/Ия\b/g, ""Ia"")
    .replace(/иЯ\b/g, ""iA"")
    .replace(/ИЯ\b/g, ""IA"");
    const transliteratedText = text.split('').map(letter => {
        if (transliterationMap[letter]) {
            if (Array.isArray(transliterationMap[letter])) {
                return transliterationMap[letter].join('/');
            } else {
                return transliterationMap[letter];
            }
        } else {
            return letter;
        }
    }).join('');

 
    return transliteratedText.replace(/\//g, ' / ');
}

// Event listeners
buttonCalculate.onclick = (e) => {
    e.preventDefault();
    separateWords();
    modal.style.display = ""block"";
    modal.style.opacity = ""1"";
};

buttonClean.onclick = (e) => {
    e.preventDefault();
    cleanAll();
};

buttonFilter.onclick = (e) => {
    e.preventDefault();
    displayResults();
    
};

const cleanAll = () => {
    result.innerHTML = """";
    inputName.value = """";
    errorDiv.innerText = """";
    modal.style.display = ""none"";
    filterNumberInput.value = """";
    allResults = [];
};

const separateWords = () => {
    const words = inputName.value.toLowerCase().split(' ');
    if (words.length === 0 || inputName.value === """") {
        errorDiv.innerText = ""Please, write your name."";
        return;
    }
    allResults = [];
    words.forEach(word => {
        if (word !== """") {
            calculateWordNumerology(word);
        }
    });
    displayResults();
};

const calculateWordNumerology = (word) => {
    let sum = word.split('').map(letter => lettersToNumbers[letter] || 0).reduce((acc, curr) => acc + curr, 0);
    let destinyNumber = reduceNumber(sum);
    allResults.push({ word, destinyNumber });
};
const calculateNumerology = (word) => {
    let sum = word.split('').map(letter => lettersToNumbers[letter.toLowerCase()] || 0).reduce((acc, curr) => acc + curr, 0);
    return reduceNumber(sum);
};
const reduceNumber = (number) => {
    while (number > 9) {
        number = number.toString().split('').reduce((acc, digit) => acc + parseInt(digit, 10), 0);
    }
    return number;
};

const displayResults = () => {
    result.innerHTML = """";
    bgFilterContainer.style.display = ""block"";
    allResults.forEach(({ word, destinyNumber }) => {
    
        if (/^[a-zA-Z]+$/.test(word)) {
            const transliteratedWord = transliterate(word);
            const transliteratedNumber = calculateNumerology(transliteratedWord);

            const row = document.createElement(""div"");
            row.classList.add('resultRow');

            const originalElement = document.createElement(""div"");
            originalElement.classList.add('numerologyResult');
            originalElement.innerText = `${word} - ${destinyNumber}`;
            row.appendChild(originalElement);

            const transliteratedElement = document.createElement(""div"");
            transliteratedElement.classList.add('numerologyResult');
            transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
            row.appendChild(transliteratedElement);

            result.appendChild(row);
        }
    });
};

// 
function displayBgFilteredResults(bgNumber) {
    const filteredResults = allResults.filter(({ word }) => {
        const transliteratedWord = transliterate(word);
        const transliteratedNumber = calculateNumerology(transliteratedWord);
        return transliteratedNumber === bgNumber;
    });
    result.innerHTML = """"; 
    bgFilterContainer.style.display = ""none""; 

 
    filteredResults.forEach(({ word, destinyNumber }) => {
        const transliteratedWord = transliterate(word);
        const transliteratedNumber = calculateNumerology(transliteratedWord);
        const row = document.createElement(""div"");
        row.classList.add(""resultRow"");
        const originalElement = document.createElement(""div"");
        originalElement.classList.add(""numerologyResult"");
        originalElement.innerText = `${word} - ${destinyNumber}`;
        const transliteratedElement = document.createElement(""div"");
        transliteratedElement.classList.add(""numerologyResult"");
        transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
        row.appendChild(originalElement);
        row.appendChild(transliteratedElement);
        result.appendChild(row);
    });
}

const displayEnglishResults = () => {
    const filterVal = filterNumberInput.value ? parseInt(filterNumberInput.value, 10) : null;
    result.innerHTML = """";
    bgFilterContainer.style.display = ""block"";
    allResults.forEach(({ word, destinyNumber }) => {
     
        if (/^[a-zA-Z]+$/.test(word)) {
            const transliteratedWord = transliterate(word);
            const transliteratedNumber = calculateNumerology(transliteratedWord);

            if (!filterVal || destinyNumber === filterVal) {
                const row = document.createElement(""div"");
                row.classList.add('resultRow');

                const originalElement = document.createElement(""div"");
                originalElement.classList.add('numerologyResult');
                originalElement.innerText = `${word} - ${destinyNumber}`;
                row.appendChild(originalElement);

              
                if (transliteratedNumber === filterVal) {
                    const transliteratedElement = document.createElement(""div"");
                    transliteratedElement.classList.add('numerologyResult');
                    transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
                    // row.appendChild(transliteratedElement);
                }

                result.appendChild(row);
            }
        }
    });
};


// Event listener за филтър за английски думи
buttonFilter.onclick = (e) => {
    e.preventDefault();
    displayEnglishResults();
};
"
8uJgew2c,Untitled,Daozaaaa,Lua,Wednesday 28th of February 2024 04:48:17 AM CDT,"--[[

Rayfield Interface Suite
by Sirius

shlex | Designing + Programming
iRay  | Programming

]]



local Release = ""Beta 8""
local NotificationDuration = 6.5
local RayfieldFolder = ""Rayfield""
local ConfigurationFolder = RayfieldFolder..""/Configurations""
local ConfigurationExtension = "".rfld""

local InputDragList = {
	Enum.UserInputType.MouseButton1,
	Enum.UserInputType.Touch,
}

local RayfieldLibrary = {
	Flags = {},
	Theme = {
		Default = {
			TextFont = ""Default"", -- Default will use the various font faces used across Rayfield
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(25, 25, 25),
			Topbar = Color3.fromRGB(34, 34, 34),
			Shadow = Color3.fromRGB(20, 20, 20),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(80, 80, 80),
			TabStroke = Color3.fromRGB(85, 85, 85),
			TabBackgroundSelected = Color3.fromRGB(210, 210, 210),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

			ElementBackground = Color3.fromRGB(35, 35, 35),
			ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
			SecondaryElementBackground = Color3.fromRGB(25, 25, 25), -- For labels and paragraphs
			ElementStroke = Color3.fromRGB(50, 50, 50),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

			SliderBackground = Color3.fromRGB(43, 105, 159),
			SliderProgress = Color3.fromRGB(43, 105, 159),
			SliderStroke = Color3.fromRGB(48, 119, 177),

			ToggleBackground = Color3.fromRGB(30, 30, 30),
			ToggleEnabled = Color3.fromRGB(0, 146, 214),
			ToggleDisabled = Color3.fromRGB(100, 100, 100),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),

			InputBackground = Color3.fromRGB(30, 30, 30),
			InputStroke = Color3.fromRGB(65, 65, 65),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		},
		Light = {
			TextFont = ""Gotham"", -- Default will use the various font faces used across Rayfield
			TextColor = Color3.fromRGB(50, 50, 50), -- i need to make all text 240, 240, 240 and base gray on transparency not color to do this

			Background = Color3.fromRGB(255, 255, 255),
			Topbar = Color3.fromRGB(217, 217, 217),
			Shadow = Color3.fromRGB(223, 223, 223),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(220, 220, 220),
			TabStroke = Color3.fromRGB(112, 112, 112),
			TabBackgroundSelected = Color3.fromRGB(0, 142, 208),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

			ElementBackground = Color3.fromRGB(198, 198, 198),
			ElementBackgroundHover = Color3.fromRGB(230, 230, 230),
			SecondaryElementBackground = Color3.fromRGB(136, 136, 136), -- For labels and paragraphs
			ElementStroke = Color3.fromRGB(180, 199, 97),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40), -- For labels and paragraphs

			SliderBackground = Color3.fromRGB(31, 159, 71),
			SliderProgress = Color3.fromRGB(31, 159, 71),
			SliderStroke = Color3.fromRGB(42, 216, 94),

			ToggleBackground = Color3.fromRGB(170, 203, 60),
			ToggleEnabled = Color3.fromRGB(32, 214, 29),
			ToggleDisabled = Color3.fromRGB(100, 22, 23),
			ToggleEnabledStroke = Color3.fromRGB(17, 255, 0),
			ToggleDisabledStroke = Color3.fromRGB(65, 8, 8),
			ToggleEnabledOuterStroke = Color3.fromRGB(0, 170, 0),
			ToggleDisabledOuterStroke = Color3.fromRGB(170, 0, 0),

			InputBackground = Color3.fromRGB(31, 159, 71),
			InputStroke = Color3.fromRGB(19, 65, 31),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		}
	}
}



-- Services

local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local HttpService = game:GetService(""HttpService"")
local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")

--
local LocalPlayer = Players.LocalPlayer

-- Interface Management
local Rayfield = game:GetObjects(""rbxassetid://10804731440"")[1]

Rayfield.Enabled = false


if gethui then
	Rayfield.Parent = gethui()
elseif syn.protect_gui then 
	syn.protect_gui(Rayfield)
	Rayfield.Parent = CoreGui
elseif CoreGui:FindFirstChild(""RobloxGui"") then
	Rayfield.Parent = CoreGui:FindFirstChild(""RobloxGui"")
else
	Rayfield.Parent = CoreGui
end

if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
			Interface.Enabled = false
			Interface.Name = ""Rayfield-Old""
		end
	end
else
	for _, Interface in ipairs(CoreGui:GetChildren()) do
		if Interface.Name == Rayfield.Name and Interface ~= Rayfield then
			Interface.Enabled = false
			Interface.Name = ""Rayfield-Old""
		end
	end
end

-- Object Variables

local Camera = workspace.CurrentCamera
local Main = Rayfield.Main
local Topbar = Main.Topbar
local Elements = Main.Elements
local LoadingFrame = Main.LoadingFrame
local TabList = Main.TabList

Rayfield.DisplayOrder = 100
LoadingFrame.Version.Text = Release


-- Variables

local request = (syn and syn.request) or (http and http.request) or http_request
local CFileName = nil
local CEnabled = false
local Minimised = false
local Hidden = false
local Debounce = false
local Notifications = Rayfield.Notifications

local SelectedTheme = RayfieldLibrary.Theme.Default

function ChangeTheme(ThemeName)
	SelectedTheme = RayfieldLibrary.Theme[ThemeName]
	for _, obj in ipairs(Rayfield:GetDescendants()) do
		if obj.ClassName == ""TextLabel"" or obj.ClassName == ""TextBox"" or obj.ClassName == ""TextButton"" then
			if SelectedTheme.TextFont ~= ""Default"" then 
				obj.TextColor3 = SelectedTheme.TextColor
				obj.Font = SelectedTheme.TextFont
			end
		end
	end

	Rayfield.Main.BackgroundColor3 = SelectedTheme.Background
	Rayfield.Main.Topbar.BackgroundColor3 = SelectedTheme.Topbar
	Rayfield.Main.Topbar.CornerRepair.BackgroundColor3 = SelectedTheme.Topbar
	Rayfield.Main.Shadow.Image.ImageColor3 = SelectedTheme.Shadow

	Rayfield.Main.Topbar.ChangeSize.ImageColor3 = SelectedTheme.TextColor
	Rayfield.Main.Topbar.Hide.ImageColor3 = SelectedTheme.TextColor
	Rayfield.Main.Topbar.Theme.ImageColor3 = SelectedTheme.TextColor

	for _, TabPage in ipairs(Elements:GetChildren()) do
		for _, Element in ipairs(TabPage:GetChildren()) do
			if Element.ClassName == ""Frame"" and Element.Name ~= ""Placeholder"" and Element.Name ~= ""SectionSpacing"" and Element.Name ~= ""SectionTitle""  then
				Element.BackgroundColor3 = SelectedTheme.ElementBackground
				Element.UIStroke.Color = SelectedTheme.ElementStroke
			end
		end
	end

end

local function AddDraggingFunctionality(DragPoint, Main)
	pcall(function()
		local PreparingToDrag = false
		local Dragging = false
		local DragStart
		local DragInput
		local StartPos
		
		local function update(input)
			local delta 		= input.Position - DragStart
			local newPosition	= UDim2.new(StartPos.X.Scale, StartPos.X.Offset + delta.X, StartPos.Y.Scale, StartPos.Y.Offset + delta.Y)
			Main.Position 	= newPosition

			return newPosition
		end
		
		DragPoint.InputBegan:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
				PreparingToDrag = true
				local Connections
				Connections = Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End and (Dragging or PreparingToDrag) then
						Dragging = false
						PreparingToDrag = false
						Connections:Disconnect()
					end
				end)
			end
		end)
		
		DragPoint.InputChanged:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
				DragInput = Input
			end
		end)
		
		UserInputService.InputChanged:Connect(function(input)
			if PreparingToDrag then
				PreparingToDrag = false
				Dragging = true
				DragStart = input.Position
				StartPos = Main.Position
			end

			if input == DragInput and Dragging then
				Main.Position = update(input)
			end
		end)
		

	end)
end   

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadConfiguration(Configuration)
	local Data = HttpService:JSONDecode(Configuration)
	for FlagName, FlagValue in next, Data do
		if RayfieldLibrary.Flags[FlagName] then
			spawn(function() 
				if RayfieldLibrary.Flags[FlagName].Type == ""ColorPicker"" then
					RayfieldLibrary.Flags[FlagName]:Set(UnpackColor(FlagValue))
				else
					if RayfieldLibrary.Flags[FlagName].CurrentValue or RayfieldLibrary.Flags[FlagName].CurrentKeybind or RayfieldLibrary.Flags[FlagName].CurrentOption or RayfieldLibrary.Flags[FlagName].Color ~= FlagValue then RayfieldLibrary.Flags[FlagName]:Set(FlagValue) end
				end    
			end)
		else
			RayfieldLibrary:Notify({Title = ""Flag Error"", Content = ""Rayfield was unable to find '""..FlagName.. ""'' in the current script""})
		end
	end
end

local function SaveConfiguration()
	if not CEnabled then return end
	local Data = {}
	for i,v in pairs(RayfieldLibrary.Flags) do
		if v.Type == ""ColorPicker"" then
			Data[i] = PackColor(v.Color)
		else
			Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
		end
	end	
	writefile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension, tostring(HttpService:JSONEncode(Data)))
end

local neon = (function() -- Open sourced neon module
	local module = {}

	do
		local function IsNotNaN(x)
			return x == x
		end
		local continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
		while not continued do
			RunService.RenderStepped:wait()
			continued = IsNotNaN(Camera:ScreenPointToRay(0,0).Origin.x)
		end
	end
	local RootParent = Camera
	if getgenv().SecureMode == nil then
		RootParent = Camera
	else
		if not getgenv().SecureMode then
			RootParent = Camera
		else 
			RootParent = nil
		end
	end


	local binds = {}
	local root = Instance.new('Folder', RootParent)
	root.Name = 'neon'


	local GenUid; do
		local id = 0
		function GenUid()
			id = id + 1
			return 'neon::'..tostring(id)
		end
	end

	local DrawQuad; do
		local acos, max, pi, sqrt = math.acos, math.max, math.pi, math.sqrt
		local sz = 0.2

		function DrawTriangle(v1, v2, v3, p0, p1)
			local s1 = (v1 - v2).magnitude
			local s2 = (v2 - v3).magnitude
			local s3 = (v3 - v1).magnitude
			local smax = max(s1, s2, s3)
			local A, B, C
			if s1 == smax then
				A, B, C = v1, v2, v3
			elseif s2 == smax then
				A, B, C = v2, v3, v1
			elseif s3 == smax then
				A, B, C = v3, v1, v2
			end

			local para = ( (B-A).x*(C-A).x + (B-A).y*(C-A).y + (B-A).z*(C-A).z ) / (A-B).magnitude
			local perp = sqrt((C-A).magnitude^2 - para*para)
			local dif_para = (A - B).magnitude - para

			local st = CFrame.new(B, A)
			local za = CFrame.Angles(pi/2,0,0)

			local cf0 = st

			local Top_Look = (cf0 * za).lookVector
			local Mid_Point = A + CFrame.new(A, B).LookVector * para
			local Needed_Look = CFrame.new(Mid_Point, C).LookVector
			local dot = Top_Look.x*Needed_Look.x + Top_Look.y*Needed_Look.y + Top_Look.z*Needed_Look.z

			local ac = CFrame.Angles(0, 0, acos(dot))

			cf0 = cf0 * ac
			if ((cf0 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf0 = cf0 * CFrame.Angles(0, 0, -2*acos(dot))
			end
			cf0 = cf0 * CFrame.new(0, perp/2, -(dif_para + para/2))

			local cf1 = st * ac * CFrame.Angles(0, pi, 0)
			if ((cf1 * za).lookVector - Needed_Look).magnitude > 0.01 then
				cf1 = cf1 * CFrame.Angles(0, 0, 2*acos(dot))
			end
			cf1 = cf1 * CFrame.new(0, perp/2, dif_para/2)

			if not p0 then
				p0 = Instance.new('Part')
				p0.FormFactor = 'Custom'
				p0.TopSurface = 0
				p0.BottomSurface = 0
				p0.Anchored = true
				p0.CanCollide = false
				p0.Material = 'Glass'
				p0.Size = Vector3.new(sz, sz, sz)
				local mesh = Instance.new('SpecialMesh', p0)
				mesh.MeshType = 2
				mesh.Name = 'WedgeMesh'
			end
			p0.WedgeMesh.Scale = Vector3.new(0, perp/sz, para/sz)
			p0.CFrame = cf0

			if not p1 then
				p1 = p0:clone()
			end
			p1.WedgeMesh.Scale = Vector3.new(0, perp/sz, dif_para/sz)
			p1.CFrame = cf1

			return p0, p1
		end

		function DrawQuad(v1, v2, v3, v4, parts)
			parts[1], parts[2] = DrawTriangle(v1, v2, v3, parts[1], parts[2])
			parts[3], parts[4] = DrawTriangle(v3, v2, v4, parts[3], parts[4])
		end
	end

	function module:BindFrame(frame, properties)
		if RootParent == nil then return end
		if binds[frame] then
			return binds[frame].parts
		end

		local uid = GenUid()
		local parts = {}
		local f = Instance.new('Folder', root)
		f.Name = frame.Name

		local parents = {}
		do
			local function add(child)
				if child:IsA'GuiObject' then
					parents[#parents + 1] = child
					add(child.Parent)
				end
			end
			add(frame)
		end

		local function UpdateOrientation(fetchProps)
			local zIndex = 1 - 0.05*frame.ZIndex
			local tl, br = frame.AbsolutePosition, frame.AbsolutePosition + frame.AbsoluteSize
			local tr, bl = Vector2.new(br.x, tl.y), Vector2.new(tl.x, br.y)
			do
				local rot = 0;
				for _, v in ipairs(parents) do
					rot = rot + v.Rotation
				end
				if rot ~= 0 and rot%180 ~= 0 then
					local mid = tl:lerp(br, 0.5)
					local s, c = math.sin(math.rad(rot)), math.cos(math.rad(rot))
					local vec = tl
					tl = Vector2.new(c*(tl.x - mid.x) - s*(tl.y - mid.y), s*(tl.x - mid.x) + c*(tl.y - mid.y)) + mid
					tr = Vector2.new(c*(tr.x - mid.x) - s*(tr.y - mid.y), s*(tr.x - mid.x) + c*(tr.y - mid.y)) + mid
					bl = Vector2.new(c*(bl.x - mid.x) - s*(bl.y - mid.y), s*(bl.x - mid.x) + c*(bl.y - mid.y)) + mid
					br = Vector2.new(c*(br.x - mid.x) - s*(br.y - mid.y), s*(br.x - mid.x) + c*(br.y - mid.y)) + mid
				end
			end
			DrawQuad(
				Camera:ScreenPointToRay(tl.x, tl.y, zIndex).Origin, 
				Camera:ScreenPointToRay(tr.x, tr.y, zIndex).Origin, 
				Camera:ScreenPointToRay(bl.x, bl.y, zIndex).Origin, 
				Camera:ScreenPointToRay(br.x, br.y, zIndex).Origin, 
				parts
			)
			if fetchProps then
				for _, pt in pairs(parts) do
					pt.Parent = f
				end
				for propName, propValue in pairs(properties) do
					for _, pt in pairs(parts) do
						pt[propName] = propValue
					end
				end
			end
		end

		UpdateOrientation(true)
		RunService:BindToRenderStep(uid, 2000, UpdateOrientation)

		binds[frame] = {
			uid = uid;
			parts = parts;
		}
		return binds[frame].parts
	end

	function module:Modify(frame, properties)
		local parts = module:GetBoundParts(frame)
		if parts then
			for propName, propValue in pairs(properties) do
				for _, pt in pairs(parts) do
					pt[propName] = propValue
				end
			end
		end
	end

	function module:UnbindFrame(frame)
		if RootParent == nil then return end
		local cb = binds[frame]
		if cb then
			RunService:UnbindFromRenderStep(cb.uid)
			for _, v in pairs(cb.parts) do
				v:Destroy()
			end
			binds[frame] = nil
		end
	end

	function module:HasBinding(frame)
		return binds[frame] ~= nil
	end

	function module:GetBoundParts(frame)
		return binds[frame] and binds[frame].parts
	end


	return module

end)()

function RayfieldLibrary:Notify(NotificationSettings)
	spawn(function()
		local ActionCompleted = true
		local Notification = Notifications.Template:Clone()
		Notification.Parent = Notifications
		Notification.Name = NotificationSettings.Title or ""Unknown Title""
		Notification.Visible = true

		local blurlight = nil
		if not getgenv().SecureMode then
			blurlight = Instance.new(""DepthOfFieldEffect"",game:GetService(""Lighting""))
			blurlight.Enabled = true
			blurlight.FarIntensity = 0
			blurlight.FocusDistance = 51.6
			blurlight.InFocusRadius = 50
			blurlight.NearIntensity = 1
			game:GetService(""Debris""):AddItem(script,0)
		end

		Notification.Actions.Template.Visible = false

		if NotificationSettings.Actions then
			for _, Action in pairs(NotificationSettings.Actions) do
				ActionCompleted = false
				local NewAction = Notification.Actions.Template:Clone()
				NewAction.BackgroundColor3 = SelectedTheme.NotificationActionsBackground
				if SelectedTheme ~= RayfieldLibrary.Theme.Default then
					NewAction.TextColor3 = SelectedTheme.TextColor
				end
				NewAction.Name = Action.Name
				NewAction.Visible = true
				NewAction.Parent = Notification.Actions
				NewAction.Text = Action.Name
				NewAction.BackgroundTransparency = 1
				NewAction.TextTransparency = 1
				NewAction.Size = UDim2.new(0, NewAction.TextBounds.X + 27, 0, 36)

				NewAction.MouseButton1Click:Connect(function()
					local Success, Response = pcall(Action.Callback)
					if not Success then
						print(""Rayfield | Action: ""..Action.Name.."" Callback Error "" ..tostring(Response))
					end
					ActionCompleted = true
				end)
			end
		end
		Notification.BackgroundColor3 = SelectedTheme.Background
		Notification.Title.Text = NotificationSettings.Title or ""Unknown""
		Notification.Title.TextTransparency = 1
		Notification.Title.TextColor3 = SelectedTheme.TextColor
		Notification.Description.Text = NotificationSettings.Content or ""Unknown""
		Notification.Description.TextTransparency = 1
		Notification.Description.TextColor3 = SelectedTheme.TextColor
		Notification.Icon.ImageColor3 = SelectedTheme.TextColor
		if NotificationSettings.Image then
			Notification.Icon.Image = ""rbxassetid://""..tostring(NotificationSettings.Image) 
		else
			Notification.Icon.Image = ""rbxassetid://3944680095""
		end

		Notification.Icon.ImageTransparency = 1

		Notification.Parent = Notifications
		Notification.Size = UDim2.new(0, 260, 0, 80)
		Notification.BackgroundTransparency = 1

		TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 91)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.1}):Play()
		Notification:TweenPosition(UDim2.new(0.5,0,0.915,0),'Out','Quint',0.8,true)

		wait(0.3)
		TweenService:Create(Notification.Icon, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
		TweenService:Create(Notification.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
		wait(0.2)



		-- Requires Graphics Level 8-10
		if getgenv().SecureMode == nil then
			TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
		else
			if not getgenv().SecureMode then
				TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.4}):Play()
			else 
				TweenService:Create(Notification, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			end
		end

		if Rayfield.Name == ""Rayfield"" then
			neon:BindFrame(Notification.BlurModule, {
				Transparency = 0.98;
				BrickColor = BrickColor.new(""Institutional white"");
			})
		end

		if not NotificationSettings.Actions then
			wait(NotificationSettings.Duration or NotificationDuration - 0.5)
		else
			wait(0.8)
			TweenService:Create(Notification, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 295, 0, 132)}):Play()
			wait(0.3)
			for _, Action in ipairs(Notification.Actions:GetChildren()) do
				if Action.ClassName == ""TextButton"" and Action.Name ~= ""Template"" then
					TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.2}):Play()
					TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
					wait(0.05)
				end
			end
		end

		repeat wait(0.001) until ActionCompleted

		for _, Action in ipairs(Notification.Actions:GetChildren()) do
			if Action.ClassName == ""TextButton"" and Action.Name ~= ""Template"" then
				TweenService:Create(Action, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(Action, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			end
		end

		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.47, 0,0.234, 0)}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0.528, 0,0.637, 0)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 280, 0, 83)}):Play()
		TweenService:Create(Notification.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()

		wait(0.3)
		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.4)
		TweenService:Create(Notification, TweenInfo.new(0.9, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 260, 0, 0)}):Play()
		TweenService:Create(Notification, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
		TweenService:Create(Notification.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		TweenService:Create(Notification.Description, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
		wait(0.2)
		if not getgenv().SecureMode then
			neon:UnbindFrame(Notification.BlurModule)
			blurlight:Destroy()
		end
		wait(0.9)
		Notification:Destroy()
	end)
end

function Hide()
	Debounce = true
	RayfieldLibrary:Notify({Title = ""Interface Hidden"", Content = ""The interface has been hidden, you can unhide the interface by tapping K"", Duration = 7})
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 400)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 470, 0, 45)}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		end
	end
	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		end
	end
	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end
	wait(0.5)
	Main.Visible = false
	Debounce = false
end

function Unhide()
	Debounce = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Visible = true
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	if Minimised then
		spawn(Maximise)
	end
	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end
	end
	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			end

		end
	end
	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end
	wait(0.5)
	Minimised = false
	Debounce = false
end

function Maximise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..10137941941


	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TabList.Visible = true
	wait(0.2)

	Elements.Visible = true

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end


	wait(0.1)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			end

		end
	end


	wait(0.5)
	Debounce = false
end

function Minimise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..11036884234

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 495, 0, 45)}):Play()

	wait(0.3)

	Elements.Visible = false
	TabList.Visible = false

	wait(0.2)
	Debounce = false
end

function RayfieldLibrary:CreateWindow(Settings)
	local Passthrough = false
	Topbar.Title.Text = Settings.Name
	Main.Size = UDim2.new(0, 450, 0, 260)
	Main.Visible = true
	Main.BackgroundTransparency = 1
	LoadingFrame.Title.TextTransparency = 1
	LoadingFrame.Subtitle.TextTransparency = 1
	Main.Shadow.Image.ImageTransparency = 1
	LoadingFrame.Version.TextTransparency = 1
	LoadingFrame.Title.Text = Settings.LoadingTitle or ""Rayfield Interface Suite""
	LoadingFrame.Subtitle.Text = Settings.LoadingSubtitle or ""by Sirius""
	if Settings.LoadingTitle ~= ""Rayfield Interface Suite"" then
		LoadingFrame.Version.Text = ""Rayfield UI""
	end
	Topbar.Visible = false
	Elements.Visible = false
	LoadingFrame.Visible = true


	pcall(function()
		if not Settings.ConfigurationSaving.FileName then
			Settings.ConfigurationSaving.FileName = tostring(game.PlaceId)
		end
		if not isfolder(RayfieldFolder..""/""..""Configuration Folders"") then

		end
		if Settings.ConfigurationSaving.Enabled == nil then
			Settings.ConfigurationSaving.Enabled = false
		end
		CFileName = Settings.ConfigurationSaving.FileName
		ConfigurationFolder = Settings.ConfigurationSaving.FolderName or ConfigurationFolder
		CEnabled = Settings.ConfigurationSaving.Enabled

		if Settings.ConfigurationSaving.Enabled then
			if not isfolder(ConfigurationFolder) then
				makefolder(ConfigurationFolder)
			end	
		end
	end)

	AddDraggingFunctionality(Topbar,Main)

	for _, TabButton in ipairs(TabList:GetChildren()) do
		if TabButton.ClassName == ""Frame"" and TabButton.Name ~= ""Placeholder"" then
			TabButton.BackgroundTransparency = 1
			TabButton.Title.TextTransparency = 1
			TabButton.Shadow.ImageTransparency = 1
			TabButton.Image.ImageTransparency = 1
			TabButton.UIStroke.Transparency = 1
		end
	end

	if Settings.Discord then
		if not isfolder(RayfieldFolder..""/Discord Invites"") then
			makefolder(RayfieldFolder..""/Discord Invites"")
		end
		if not isfile(RayfieldFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension) then
			if request then
				request({
					Url = 'http://127.0.0.1:6463/rpc?v=1',
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json',
						Origin = 'https://discord.com'
					},
					Body = HttpService:JSONEncode({
						cmd = 'INVITE_BROWSER',
						nonce = HttpService:GenerateGUID(false),
						args = {code = Settings.Discord.Invite}
					})
				})
			end

			if Settings.Discord.RememberJoins then -- We do logic this way so if the developer changes this setting, the user still won't be prompted, only new users
				writefile(RayfieldFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension,""Rayfield RememberJoins is true for this invite, this invite will not ask you to join again"")
			end
		else

		end
	end

	if Settings.KeySystem then
		if not Settings.KeySettings then
			Passthrough = true
			return
		end

		if not isfolder(RayfieldFolder..""/Key System"") then
			makefolder(RayfieldFolder..""/Key System"")
		end

		if typeof(Settings.KeySettings.Key) == ""string"" then Settings.KeySettings.Key = {Settings.KeySettings.Key} end

		if Settings.KeySettings.GrabKeyFromSite then
			for i, Key in ipairs(Settings.KeySettings.Key) do
				local Success, Response = pcall(function()
					Settings.KeySettings.Key[i] = tostring(game:HttpGet(Key):gsub(""[\n\r]"", "" ""))
					Settings.KeySettings.Key[i] = string.gsub(Settings.KeySettings.Key[i], "" "", """")
				end)
				if not Success then
					print(""Rayfield | ""..Key.."" Error "" ..tostring(Response))
				end
			end
		end

		if not Settings.KeySettings.FileName then
			Settings.KeySettings.FileName = ""No file name specified""
		end

		if isfile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension) then
			for _, MKey in ipairs(Settings.KeySettings.Key) do
				if string.find(readfile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension), MKey) then
					Passthrough = true
				end
			end
		end

		if not Passthrough then
			local AttemptsRemaining = math.random(2,6)
			Rayfield.Enabled = false
			local KeyUI = game:GetObjects(""rbxassetid://11380036235"")[1]

			if gethui then
				KeyUI.Parent = gethui()
			elseif syn.protect_gui then
				syn.protect_gui(Rayfield)
				KeyUI.Parent = CoreGui
			else
				KeyUI.Parent = CoreGui
			end

			if gethui then
				for _, Interface in ipairs(gethui():GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			else
				for _, Interface in ipairs(CoreGui:GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			end

			local KeyMain = KeyUI.Main
			KeyMain.Title.Text = Settings.KeySettings.Title or Settings.Name
			KeyMain.Subtitle.Text = Settings.KeySettings.Subtitle or ""Key System""
			KeyMain.NoteMessage.Text = Settings.KeySettings.Note or ""No instructions""

			KeyMain.Size = UDim2.new(0, 467, 0, 175)
			KeyMain.BackgroundTransparency = 1
			KeyMain.Shadow.Image.ImageTransparency = 1
			KeyMain.Title.TextTransparency = 1
			KeyMain.Subtitle.TextTransparency = 1
			KeyMain.KeyNote.TextTransparency = 1
			KeyMain.Input.BackgroundTransparency = 1
			KeyMain.Input.UIStroke.Transparency = 1
			KeyMain.Input.InputBox.TextTransparency = 1
			KeyMain.NoteTitle.TextTransparency = 1
			KeyMain.NoteMessage.TextTransparency = 1
			KeyMain.Hide.ImageTransparency = 1

			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
			TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 0.5}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.05)
			TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			wait(0.15)
			TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 0.3}):Play()


			KeyUI.Main.Input.InputBox.FocusLost:Connect(function()
				if #KeyUI.Main.Input.InputBox.Text == 0 then return end
				local KeyFound = false
				local FoundKey = ''
				for _, MKey in ipairs(Settings.KeySettings.Key) do
					if string.find(KeyMain.Input.InputBox.Text, MKey) then
						KeyFound = true
						FoundKey = MKey
					end
				end
				if KeyFound then 
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					wait(0.51)
					Passthrough = true
					if Settings.KeySettings.SaveKey then
						if writefile then
							writefile(RayfieldFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension, FoundKey)
						end
						RayfieldLibrary:Notify({Title = ""Key System"", Content = ""The key for this script has been saved successfully""})
					end
				else
					if AttemptsRemaining == 0 then
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
						wait(0.45)
						game.Players.LocalPlayer:Kick(""No Attempts Remaining"")
						game:Shutdown()
					end
					KeyMain.Input.InputBox.Text = """"
					AttemptsRemaining = AttemptsRemaining - 1
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.495,0,0.5,0)}):Play()
					wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.505,0,0.5,0)}):Play()
					wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 187)}):Play()
				end
			end)

			KeyMain.Hide.MouseButton1Click:Connect(function()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 467, 0, 175)}):Play()
				TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
				wait(0.51)
				RayfieldLibrary:Destroy()
				KeyUI:Destroy()
			end)
		else
			Passthrough = true
		end
	end
	if Settings.KeySystem then
		repeat wait() until Passthrough
	end

	Notifications.Template.Visible = false
	Notifications.Visible = true
	Rayfield.Enabled = true
	wait(0.5)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.55}):Play()
	wait(0.1)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.05)
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.05)
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

	Elements.Template.LayoutOrder = 100000
	Elements.Template.Visible = false

	Elements.UIPageLayout.FillDirection = Enum.FillDirection.Horizontal
	TabList.Template.Visible = false

	-- Tab
	local FirstTab = false
	local Window = {}
	function Window:CreateTab(Name,Image)
		local SDone = false
		local TabButton = TabList.Template:Clone()
		TabButton.Name = Name
		TabButton.Title.Text = Name
		TabButton.Parent = TabList
		TabButton.Title.TextWrapped = false
		TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 30, 0, 30)

		if Image then
			TabButton.Title.AnchorPoint = Vector2.new(0, 0.5)
			TabButton.Title.Position = UDim2.new(0, 37, 0.5, 0)
			TabButton.Image.Image = ""rbxassetid://""..Image
			TabButton.Image.Visible = true
			TabButton.Title.TextXAlignment = Enum.TextXAlignment.Left
			TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 46, 0, 30)
		end

		TabButton.BackgroundTransparency = 1
		TabButton.Title.TextTransparency = 1
		TabButton.Shadow.ImageTransparency = 1
		TabButton.Image.ImageTransparency = 1
		TabButton.UIStroke.Transparency = 1

		TabButton.Visible = true

		-- Create Elements Page
		local TabPage = Elements.Template:Clone()
		TabPage.Name = Name
		TabPage.Visible = true

		TabPage.LayoutOrder = #Elements:GetChildren()

		for _, TemplateElement in ipairs(TabPage:GetChildren()) do
			if TemplateElement.ClassName == ""Frame"" and TemplateElement.Name ~= ""Placeholder"" then
				TemplateElement:Destroy()
			end
		end

		TabPage.Parent = Elements
		if not FirstTab then
			Elements.UIPageLayout.Animated = false
			Elements.UIPageLayout:JumpTo(TabPage)
			Elements.UIPageLayout.Animated = true
		end

		if SelectedTheme ~= RayfieldLibrary.Theme.Default then
			TabButton.Shadow.Visible = false
		end
		TabButton.UIStroke.Color = SelectedTheme.TabStroke
		-- Animate
		wait(0.1)
		if FirstTab then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()

			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
		else
			FirstTab = Name
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
		end


		TabButton.Interact.MouseButton1Click:Connect(function()
			if Minimised then return end
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackgroundSelected}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.9}):Play()

			for _, OtherTabButton in ipairs(TabList:GetChildren()) do
				if OtherTabButton.Name ~= ""Template"" and OtherTabButton.ClassName == ""Frame"" and OtherTabButton ~= TabButton and OtherTabButton.Name ~= ""Placeholder"" then
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.TabBackground}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ImageTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
			end
			if Elements.UIPageLayout.CurrentPage ~= TabPage then
				TweenService:Create(Elements, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 460,0, 330)}):Play()
				Elements.UIPageLayout:JumpTo(TabPage)
				wait(0.2)
				TweenService:Create(Elements, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 475,0, 366)}):Play()
			end

		end)

		local Tab = {}

		-- Button
		function Tab:CreateButton(ButtonSettings)
			local ButtonValue = {}

			local Button = Elements.Template.Button:Clone()
			Button.Name = ButtonSettings.Name
			Button.Title.Text = ButtonSettings.Name
			Button.Visible = true
			Button.Parent = TabPage

			Button.BackgroundTransparency = 1
			Button.UIStroke.Transparency = 1
			Button.Title.TextTransparency = 1

			TweenService:Create(Button, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Button.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Button.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	


			Button.Interact.MouseButton1Click:Connect(function()
				local Success, Response = pcall(ButtonSettings.Callback)
				if not Success then
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Button.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ButtonSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Button.Title.Text = ButtonSettings.Name
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				else
					SaveConfiguration()
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					wait(0.2)
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
			end)

			Button.MouseEnter:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.7}):Play()
			end)

			Button.MouseLeave:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.9}):Play()
			end)

			function ButtonValue:Set(NewButton)
				Button.Title.Text = NewButton
				Button.Name = NewButton
			end

			return ButtonValue
		end

		-- ColorPicker
		function Tab:CreateColorPicker(ColorPickerSettings) -- by Throit
			ColorPickerSettings.Type = ""ColorPicker""
			local ColorPicker = Elements.Template.ColorPicker:Clone()
			local Background = ColorPicker.CPBackground
			local Display = Background.Display
			local Main = Background.MainCP
			local Slider = ColorPicker.ColorSlider
			ColorPicker.ClipsDescendants = true
			ColorPicker.Name = ColorPickerSettings.Name
			ColorPicker.Title.Text = ColorPickerSettings.Name
			ColorPicker.Visible = true
			ColorPicker.Parent = TabPage
			ColorPicker.Size = UDim2.new(1, -10, 0.028, 35)
			Background.Size = UDim2.new(0, 39, 0, 22)
			Display.BackgroundTransparency = 0
			Main.MainPoint.ImageTransparency = 1
			ColorPicker.Interact.Size = UDim2.new(1, 0, 1, 0)
			ColorPicker.Interact.Position = UDim2.new(0.5, 0, 0.5, 0)
			ColorPicker.RGB.Position = UDim2.new(0, 17, 0, 70)
			ColorPicker.HexInput.Position = UDim2.new(0, 17, 0, 90)
			Main.ImageTransparency = 1
			Background.BackgroundTransparency = 1



			local opened = false 
			local mouse = game.Players.LocalPlayer:GetMouse()
			Main.Image = ""http://www.roblox.com/asset/?id=11415645739""
			local mainDragging = false 
			local sliderDragging = false 
			ColorPicker.Interact.MouseButton1Down:Connect(function()
				if not opened then
					opened = true 
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.224, 40)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 173, 0, 86)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.289, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 40)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 73)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0.574, 0, 1, 0)}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 0.1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
				else
					opened = false
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0.028, 35)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 39, 0, 22)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 1, 0)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 70)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 17, 0, 90)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
				end
			end)
			
			


			local h,s,v = ColorPickerSettings.Color:ToHSV()
			local color = Color3.fromHSV(h,s,v) 
			local hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
			ColorPicker.HexInput.InputBox.Text = hex
			local function setDisplay()
				--Main
				Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
				Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
				Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
				Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
				--Slider 
				local x = h * Slider.AbsoluteSize.X
				Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
				Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
				local color = Color3.fromHSV(h,s,v) 
				local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
				ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
				ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
				hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
				ColorPicker.HexInput.InputBox.Text = hex
			end
			setDisplay()
			ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
				if not pcall(function()
						local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, ""^#?(%w%w)(%w%w)(%w%w)$"")
						local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
						h,s,v = rgbColor:ToHSV()
						hex = ColorPicker.HexInput.InputBox.Text
						setDisplay()
						ColorPickerSettings.Color = rgbColor
					end) 
				then 
					ColorPicker.HexInput.InputBox.Text = hex 
				end
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end)
			--RGB
			local function rgbBoxes(box,toChange)
				local value = tonumber(box.Text) 
				local color = Color3.fromHSV(h,s,v) 
				local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				local save 
				if toChange == ""R"" then save = oldR;oldR = value elseif toChange == ""G"" then save = oldG;oldG = value else save = oldB;oldB = value end
				if value then 
					value = math.clamp(value,0,255)
					h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

					setDisplay()
				else 
					box.Text = tostring(save)
				end
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end
			ColorPicker.RGB.RInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.RInput.InputBox,""R"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.GInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.GInput.InputBox,""G"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.BInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.BInput.InputBox,""B"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)

			game:GetService(""RunService"").RenderStepped:connect(function()
				if mainDragging then 
					local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
					local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
					Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
					s = localX / Main.AbsoluteSize.X
					v = 1 - (localY / Main.AbsoluteSize.Y)
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
				if sliderDragging then 
					local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
					h = localX / Slider.AbsoluteSize.X
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
					Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
			end)

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ColorPickerSettings.Flag then
					RayfieldLibrary.Flags[ColorPickerSettings.Flag] = ColorPickerSettings
				end
			end

			function ColorPickerSettings:Set(RGBColor)
				ColorPickerSettings.Color = RGBColor
				h,s,v = ColorPickerSettings.Color:ToHSV()
				color = Color3.fromHSV(h,s,v)
				setDisplay()
			end

			return ColorPickerSettings
		end

		-- Section
		function Tab:CreateSection(SectionName)

			local SectionValue = {}

			if SDone then
				local SectionSpace = Elements.Template.SectionSpacing:Clone()
				SectionSpace.Visible = true
				SectionSpace.Parent = TabPage
			end

			local Section = Elements.Template.SectionTitle:Clone()
			Section.Title.Text = SectionName
			Section.Visible = true
			Section.Parent = TabPage

			Section.Title.TextTransparency = 1
			TweenService:Create(Section.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()

			function SectionValue:Set(NewSection)
				Section.Title.Text = NewSection
			end

			SDone = true

			return SectionValue
		end

		-- Label
		function Tab:CreateLabel(LabelText)
			local LabelValue = {}

			local Label = Elements.Template.Label:Clone()
			Label.Title.Text = LabelText
			Label.Visible = true
			Label.Parent = TabPage

			Label.BackgroundTransparency = 1
			Label.UIStroke.Transparency = 1
			Label.Title.TextTransparency = 1

			Label.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Label.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Label, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Label.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Label.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			function LabelValue:Set(NewLabel)
				Label.Title.Text = NewLabel
			end

			return LabelValue
		end

		-- Paragraph
		function Tab:CreateParagraph(ParagraphSettings)
			local ParagraphValue = {}

			local Paragraph = Elements.Template.Paragraph:Clone()
			Paragraph.Title.Text = ParagraphSettings.Title
			Paragraph.Content.Text = ParagraphSettings.Content
			Paragraph.Visible = true
			Paragraph.Parent = TabPage

			Paragraph.Content.Size = UDim2.new(0, 438, 0, Paragraph.Content.TextBounds.Y)
			Paragraph.Content.Position = UDim2.new(1, -10, 0.575,0 )
			Paragraph.Size = UDim2.new(1, -10, 0, Paragraph.Content.TextBounds.Y + 40)

			Paragraph.BackgroundTransparency = 1
			Paragraph.UIStroke.Transparency = 1
			Paragraph.Title.TextTransparency = 1
			Paragraph.Content.TextTransparency = 1

			Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Paragraph, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Paragraph.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Paragraph.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	
			TweenService:Create(Paragraph.Content, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			function ParagraphValue:Set(NewParagraphSettings)
				Paragraph.Title.Text = NewParagraphSettings.Title
				Paragraph.Content.Text = NewParagraphSettings.Content
			end

			return ParagraphValue
		end

		-- Input
		function Tab:CreateInput(InputSettings)
			local Input = Elements.Template.Input:Clone()
			Input.Name = InputSettings.Name
			Input.Title.Text = InputSettings.Name
			Input.Visible = true
			Input.Parent = TabPage

			Input.BackgroundTransparency = 1
			Input.UIStroke.Transparency = 1
			Input.Title.TextTransparency = 1

			Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Input, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Input.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Input.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Input.InputFrame.InputBox.PlaceholderText = InputSettings.PlaceholderText
			Input.InputFrame.Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)

			Input.InputFrame.InputBox.FocusLost:Connect(function()


				local Success, Response = pcall(function()
					InputSettings.Callback(Input.InputFrame.InputBox.Text)
				end)
				if not Success then
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Input.Title.Text = ""Callback Error""
					print(""Rayfield | ""..InputSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Input.Title.Text = InputSettings.Name
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

				if InputSettings.RemoveTextAfterFocusLost then
					Input.InputFrame.InputBox.Text = """"
				end
				SaveConfiguration()
			end)

			Input.MouseEnter:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Input.MouseLeave:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Input.InputFrame.InputBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Input.InputFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			local InputSettings = {}
			function InputSettings:Set(text) --Doesnt fire the event
				Input.InputFrame.InputBox.Text = text
			end
			return InputSettings
		end

		-- Dropdown
		function Tab:CreateDropdown(DropdownSettings)
			local Dropdown = Elements.Template.Dropdown:Clone()
			if string.find(DropdownSettings.Name,""closed"") then
				Dropdown.Name = ""Dropdown""
			else
				Dropdown.Name = DropdownSettings.Name
			end
			Dropdown.Title.Text = DropdownSettings.Name
			Dropdown.Visible = true
			Dropdown.Parent = TabPage

			Dropdown.List.Visible = false

			if typeof(DropdownSettings.CurrentOption) == ""string"" then
				DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
			end

			if not DropdownSettings.MultipleOptions then
				DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
			end

			if DropdownSettings.MultipleOptions then
				if #DropdownSettings.CurrentOption == 1 then
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				elseif #DropdownSettings.CurrentOption == 0 then
					Dropdown.Selected.Text = ""None""
				else
					Dropdown.Selected.Text = ""Various""
				end
			else
				Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
			end


			Dropdown.BackgroundTransparency = 1
			Dropdown.UIStroke.Transparency = 1
			Dropdown.Title.TextTransparency = 1

			Dropdown.Size = UDim2.new(1, -10, 0, 45)

			TweenService:Create(Dropdown, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Dropdown.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			for _, ununusedoption in ipairs(Dropdown.List:GetChildren()) do
				if ununusedoption.ClassName == ""Frame"" and ununusedoption.Name ~= ""Placeholder"" then
					ununusedoption:Destroy()
				end
			end

			Dropdown.Toggle.Rotation = 180

			Dropdown.Interact.MouseButton1Click:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
				wait(0.1)
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				if Debounce then return end
				if Dropdown.List.Visible then
					Debounce = true
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
						end
					end
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
					wait(0.35)
					Dropdown.List.Visible = false
					Debounce = false
				else
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 180)}):Play()
					Dropdown.List.Visible = true
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 0.7}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 0}):Play()	
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
						end
					end
				end
			end)

			Dropdown.MouseEnter:Connect(function()
				if not Dropdown.List.Visible then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end
			end)

			Dropdown.MouseLeave:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			for _, Option in ipairs(DropdownSettings.Options) do
				local DropdownOption = Elements.Template.Dropdown.List.Template:Clone()
				DropdownOption.Name = Option
				DropdownOption.Title.Text = Option
				DropdownOption.Parent = Dropdown.List
				DropdownOption.Visible = true

				if DropdownSettings.CurrentOption == Option then
					DropdownOption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				end

				DropdownOption.BackgroundTransparency = 1
				DropdownOption.UIStroke.Transparency = 1
				DropdownOption.Title.TextTransparency = 1

				--local Dropdown = Tab:CreateDropdown({
				--	Name = ""Dropdown Example"",
				--	Options = {""Option 1"",""Option 2""},
				--	CurrentOption = {""Option 1""},
				--  MultipleOptions = true,
				--	Flag = ""Dropdown1"",
				--	Callback = function(TableOfOptions)

				--	end,
				--})


				DropdownOption.Interact.ZIndex = 50
				DropdownOption.Interact.MouseButton1Click:Connect(function()
					if not DropdownSettings.MultipleOptions and table.find(DropdownSettings.CurrentOption, Option) then 
						return
					end

					if table.find(DropdownSettings.CurrentOption, Option) then
						table.remove(DropdownSettings.CurrentOption, table.find(DropdownSettings.CurrentOption, Option))
						if DropdownSettings.MultipleOptions then
							if #DropdownSettings.CurrentOption == 1 then
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							elseif #DropdownSettings.CurrentOption == 0 then
								Dropdown.Selected.Text = ""None""
							else
								Dropdown.Selected.Text = ""Various""
							end
						else
							Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
						end
					else
						if not DropdownSettings.MultipleOptions then
							table.clear(DropdownSettings.CurrentOption)
						end
						table.insert(DropdownSettings.CurrentOption, Option)
						if DropdownSettings.MultipleOptions then
							if #DropdownSettings.CurrentOption == 1 then
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							elseif #DropdownSettings.CurrentOption == 0 then
								Dropdown.Selected.Text = ""None""
							else
								Dropdown.Selected.Text = ""Various""
							end
						else
							Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
						end
						TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						TweenService:Create(DropdownOption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
						Debounce = true
						wait(0.2)
						TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end


					local Success, Response = pcall(function()
						DropdownSettings.Callback(DropdownSettings.CurrentOption)
					end)

					if not Success then
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
						Dropdown.Title.Text = ""Callback Error""
						print(""Rayfield | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
						wait(0.5)
						Dropdown.Title.Text = DropdownSettings.Name
						TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
					end

					for _, droption in ipairs(Dropdown.List:GetChildren()) do
						if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" and not table.find(DropdownSettings.CurrentOption, droption.Name) then
							TweenService:Create(droption, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}):Play()
						end
					end
					if not DropdownSettings.MultipleOptions then
						wait(0.1)
						TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Size = UDim2.new(1, -10, 0, 45)}):Play()
						for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
							if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
								TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
							end
						end
						TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {ScrollBarImageTransparency = 1}):Play()
						TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Rotation = 180}):Play()	
						wait(0.35)
						Dropdown.List.Visible = false
					end
					Debounce = false	
					SaveConfiguration()
				end)
			end

			for _, droption in ipairs(Dropdown.List:GetChildren()) do
				if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
					if not table.find(DropdownSettings.CurrentOption, droption.Name) then
						droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					else
						droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					end
				end
			end

			function DropdownSettings:Set(NewOption)
				DropdownSettings.CurrentOption = NewOption

				if typeof(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end

				if not DropdownSettings.MultipleOptions then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end

				if DropdownSettings.MultipleOptions then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				end


				local Success, Response = pcall(function()
					DropdownSettings.Callback(NewOption)
				end)
				if not Success then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Dropdown.Title.Text = ""Callback Error""
					print(""Rayfield | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Dropdown.Title.Text = DropdownSettings.Name
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end

				for _, droption in ipairs(Dropdown.List:GetChildren()) do
					if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
						else
							droption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						end
					end
				end
				--SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and DropdownSettings.Flag then
					RayfieldLibrary.Flags[DropdownSettings.Flag] = DropdownSettings
				end
			end

			return DropdownSettings
		end

		-- Keybind
		function Tab:CreateKeybind(KeybindSettings)
			local CheckingForKey = false
			local Keybind = Elements.Template.Keybind:Clone()
			Keybind.Name = KeybindSettings.Name
			Keybind.Title.Text = KeybindSettings.Name
			Keybind.Visible = true
			Keybind.Parent = TabPage

			Keybind.BackgroundTransparency = 1
			Keybind.UIStroke.Transparency = 1
			Keybind.Title.TextTransparency = 1

			Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Keybind, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Keybind.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
			Keybind.KeybindFrame.Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)

			Keybind.KeybindFrame.KeybindBox.Focused:Connect(function()
				CheckingForKey = true
				Keybind.KeybindFrame.KeybindBox.Text = """"
			end)
			Keybind.KeybindFrame.KeybindBox.FocusLost:Connect(function()
				CheckingForKey = false
				if Keybind.KeybindFrame.KeybindBox.Text == nil or """" then
					Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
					SaveConfiguration()
				end
			end)

			Keybind.MouseEnter:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Keybind.MouseLeave:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			UserInputService.InputBegan:Connect(function(input, processed)

				if CheckingForKey then
					if input.KeyCode ~= Enum.KeyCode.Unknown and input.KeyCode ~= Enum.KeyCode.K then
						local SplitMessage = string.split(tostring(input.KeyCode), ""."")
						local NewKeyNoEnum = SplitMessage[3]
						Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeyNoEnum)
						KeybindSettings.CurrentKeybind = tostring(NewKeyNoEnum)
						Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
						SaveConfiguration()
					end
				elseif KeybindSettings.CurrentKeybind ~= nil and (input.KeyCode == Enum.KeyCode[KeybindSettings.CurrentKeybind] and not processed) then -- Test
					local Held = true
					local Connection
					Connection = input.Changed:Connect(function(prop)
						if prop == ""UserInputState"" then
							Connection:Disconnect()
							Held = false
						end
					end)

					if not KeybindSettings.HoldToInteract then
						local Success, Response = pcall(KeybindSettings.Callback)
						if not Success then
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
							Keybind.Title.Text = ""Callback Error""
							print(""Rayfield | ""..KeybindSettings.Name.."" Callback Error "" ..tostring(Response))
							wait(0.5)
							Keybind.Title.Text = KeybindSettings.Name
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
						end
					else
						wait(0.25)
						if Held then
							local Loop; Loop = RunService.Stepped:Connect(function()
								if not Held then
									KeybindSettings.Callback(false) -- maybe pcall this
									Loop:Disconnect()
								else
									KeybindSettings.Callback(true) -- maybe pcall this
								end
							end)	
						end
					end
				end
			end)

			Keybind.KeybindFrame.KeybindBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Keybind.KeybindFrame, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function KeybindSettings:Set(NewKeybind)
				Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeybind)
				KeybindSettings.CurrentKeybind = tostring(NewKeybind)
				Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
				SaveConfiguration()
			end
			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and KeybindSettings.Flag then
					RayfieldLibrary.Flags[KeybindSettings.Flag] = KeybindSettings
				end
			end
			return KeybindSettings
		end

		-- Toggle
		function Tab:CreateToggle(ToggleSettings)
			local ToggleValue = {}

			local Toggle = Elements.Template.Toggle:Clone()
			Toggle.Name = ToggleSettings.Name
			Toggle.Title.Text = ToggleSettings.Name
			Toggle.Visible = true
			Toggle.Parent = TabPage

			Toggle.BackgroundTransparency = 1
			Toggle.UIStroke.Transparency = 1
			Toggle.Title.TextTransparency = 1
			Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

			if SelectedTheme ~= RayfieldLibrary.Theme.Default then
				Toggle.Switch.Shadow.Visible = false
			end

			TweenService:Create(Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Toggle.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			if not ToggleSettings.CurrentValue then
				Toggle.Switch.Indicator.Position = UDim2.new(1, -40, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
			else
				Toggle.Switch.Indicator.Position = UDim2.new(1, -20, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
			end

			Toggle.MouseEnter:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Toggle.MouseLeave:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Toggle.Interact.MouseButton1Click:Connect(function()
				if ToggleSettings.CurrentValue then
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()		
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)
				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end


				SaveConfiguration()
			end)

			function ToggleSettings:Set(NewToggleValue)
				if NewToggleValue then
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(100,100,100)}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(65,65,65)}):Play()
					wait(0.05)
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					wait(0.15)
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()	
				end
				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)
				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Rayfield | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
					RayfieldLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
				end
			end

			return ToggleSettings
		end

		-- Slider
		function Tab:CreateSlider(SliderSettings)
			local Dragging = false
			local Slider = Elements.Template.Slider:Clone()
			Slider.Name = SliderSettings.Name
			Slider.Title.Text = SliderSettings.Name
			Slider.Visible = true
			Slider.Parent = TabPage

			Slider.BackgroundTransparency = 1
			Slider.UIStroke.Transparency = 1
			Slider.Title.TextTransparency = 1

			if SelectedTheme ~= RayfieldLibrary.Theme.Default then
				Slider.Main.Shadow.Visible = false
			end

			Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
			Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress

			TweenService:Create(Slider, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Slider.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
			TweenService:Create(Slider.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()	

			Slider.Main.Progress.Size =	UDim2.new(0, Slider.Main.AbsoluteSize.X * ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

			if not SliderSettings.Suffix then
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue)
			else
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue) .. "" "" .. SliderSettings.Suffix
			end

			Slider.MouseEnter:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Slider.MouseLeave:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Slider.Main.Interact.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					Dragging = true 
				end 
			end)
			Slider.Main.Interact.InputEnded:Connect(function(Input) 
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					Dragging = false 
				end 
			end)

			Slider.Main.Interact.MouseButton1Down:Connect(function(X)
				local Current = Slider.Main.Progress.AbsolutePosition.X + Slider.Main.Progress.AbsoluteSize.X
				local Start = Current
				local Location = X
				local Loop; Loop = RunService.Stepped:Connect(function()
					if Dragging then
						Location = UserInputService:GetMouseLocation().X
						Current = Current + 0.025 * (Location - Start)

						if Location < Slider.Main.AbsolutePosition.X then
							Location = Slider.Main.AbsolutePosition.X
						elseif Location > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Location = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current < Slider.Main.AbsolutePosition.X + 5 then
							Current = Slider.Main.AbsolutePosition.X + 5
						elseif Current > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Current = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current <= Location and (Location - Start) < 0 then
							Start = Location
						elseif Current >= Location and (Location - Start) > 0 then
							Start = Location
						end
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Current - Slider.Main.AbsolutePosition.X, 1, 0)}):Play()
						local NewValue = SliderSettings.Range[1] + (Location - Slider.Main.AbsolutePosition.X) / Slider.Main.AbsoluteSize.X * (SliderSettings.Range[2] - SliderSettings.Range[1])

						NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) * (SliderSettings.Increment * 10000000) / 10000000
						if not SliderSettings.Suffix then
							Slider.Main.Information.Text = tostring(NewValue)
						else
							Slider.Main.Information.Text = tostring(NewValue) .. "" "" .. SliderSettings.Suffix
						end

						if SliderSettings.CurrentValue ~= NewValue then
							local Success, Response = pcall(function()
								SliderSettings.Callback(NewValue)
							end)
							if not Success then
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
								Slider.Title.Text = ""Callback Error""
								print(""Rayfield | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
								wait(0.5)
								Slider.Title.Text = SliderSettings.Name
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
							end

							SliderSettings.CurrentValue = NewValue
							SaveConfiguration()
						end
					else
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Location - Slider.Main.AbsolutePosition.X > 5 and Location - Slider.Main.AbsolutePosition.X or 5, 1, 0)}):Play()
						Loop:Disconnect()
					end
				end)
			end)

			function SliderSettings:Set(NewVal)
				TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, Slider.Main.AbsoluteSize.X * ((NewVal + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (NewVal / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)}):Play()
				Slider.Main.Information.Text = tostring(NewVal) .. "" "" .. SliderSettings.Suffix
				local Success, Response = pcall(function()
					SliderSettings.Callback(NewVal)
				end)
				if not Success then
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
					Slider.Title.Text = ""Callback Error""
					print(""Rayfield | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
					wait(0.5)
					Slider.Title.Text = SliderSettings.Name
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
				end
				SliderSettings.CurrentValue = NewVal
				SaveConfiguration()
			end
			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and SliderSettings.Flag then
					RayfieldLibrary.Flags[SliderSettings.Flag] = SliderSettings
				end
			end
			return SliderSettings
		end


		return Tab
	end

	Elements.Visible = true

	wait(0.7)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
	wait(0.2)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {Size = UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.4}):Play()

	Topbar.BackgroundTransparency = 1
	Topbar.Divider.Size = UDim2.new(0, 0, 0, 1)
	Topbar.CornerRepair.BackgroundTransparency = 1
	Topbar.Title.TextTransparency = 1
	Topbar.Theme.ImageTransparency = 1
	Topbar.ChangeSize.ImageTransparency = 1
	Topbar.Hide.ImageTransparency = 1

	wait(0.5)
	Topbar.Visible = true
	TweenService:Create(Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Divider, TweenInfo.new(1, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 1)}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 0}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Theme, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.1)
	TweenService:Create(Topbar.ChangeSize, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.1)
	TweenService:Create(Topbar.Hide, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
	wait(0.3)

	return Window
end


function RayfieldLibrary:Destroy()
	Rayfield:Destroy()
end

Topbar.ChangeSize.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Minimised then
		Minimised = false
		Maximise()
	else
		Minimised = true
		Minimise()
	end
end)

Topbar.Hide.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Hidden then
		Hidden = false
		Minimised = false
		Unhide()
	else
		Hidden = true
		Hide()
	end
end)

UserInputService.InputBegan:Connect(function(input, processed)
	if (input.KeyCode == Enum.KeyCode.K and not processed) then
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		else
			Hidden = true
			Hide()
		end
	end
end)

for _, TopbarButton in ipairs(Topbar:GetChildren()) do
	if TopbarButton.ClassName == ""ImageButton"" then
		TopbarButton.MouseEnter:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0}):Play()
		end)

		TopbarButton.MouseLeave:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end)

		TopbarButton.MouseButton1Click:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
		end)
	end
end


function RayfieldLibrary:LoadConfiguration()
	if CEnabled then
		pcall(function()
			if isfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension) then
				LoadConfiguration(readfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension))
				RayfieldLibrary:Notify({Title = ""Configuration Loaded"", Content = ""The configuration file for this script has been loaded from a previous session""})
			end
		end)
	end
end

task.delay(3.5, RayfieldLibrary.LoadConfiguration, RayfieldLibrary)

return RayfieldLibrary"
NKuJ4awJ,Tugas Praktek,neche,Python,Wednesday 28th of February 2024 04:47:24 AM CDT,"class Karyawan:
    def __init__(self, nama, usia, pendapatan, insentif_lembur): 
        self.nama = nama
        self.usia = usia 
        self.pendapatan = pendapatan 
        self.pendapatan_tambahan = 0
        self.insentif_lembur = insentif_lembur 
    def lembur(self):
        self.pendapatan_tambahan += self.insentif_lembur 
    def tambahan_proyek(self, jumlah_tambahan):
        self.pendapatan_tambahan += jumlah_tambahan 
    def total_pendapatan(self):
        return self.pendapatan + self.pendapatan_tambahan 

class Perusahaan:
    def __init__(self, nama, alamat, nomor_telepon): 
        self.nama = nama
        self.alamat = alamat 
        self.nomor_telepon = nomor_telepon
        self.list_karyawan = []
    def aktifkan_karyawan(self, karyawan): 
        self.list_karyawan.append(karyawan)
    def nonaktifkan_karyawan(self, nama_karyawan): 
        karyawan_nonaktif = None
        for karyawan in self.list_karyawan:
            if karyawan.nama == nama_karyawan: 
                karyawan_nonaktif = karyawan 
                break
        if karyawan_nonaktif is not None: 
            self.list_karyawan.remove(karyawan_nonaktif)

# Definisikan perusahaan
perusahaan = Perusahaan('ABC', 'Jl. Jendral Sudirman, Blok 11', '(021) 95205XX')
# Definisikan nama-nama karyawan
karyawan_1 = Karyawan('Ani',25, 8500000, 100000)
karyawan_2 = Karyawan('Budi', 28, 12000000, 150000)
karyawan_3 = Karyawan('Cici', 30, 15000000, 200000)
# Aktifkan karyawan di perusahaan ABC
perusahaan.aktifkan_karyawan(karyawan_1)
perusahaan.aktifkan_karyawan(karyawan_2)
perusahaan.aktifkan_karyawan(karyawan_3) 
print(karyawan_1.total_pendapatan()) 
print(karyawan_2.total_pendapatan()) 
print(karyawan_3.total_pendapatan()) "
rBpZ8x3k,Soccer Prediction Betting Tips 28022024,livebetpro,PHP,Wednesday 28th of February 2024 04:21:00 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-28022024/
v5trvAYA,Untitled,bebo231312312321,JavaScript,Wednesday 28th of February 2024 04:16:10 AM CDT,"// Global variables
const buttonCalculate = document.getElementById(""calculate"");
const buttonClean = document.getElementById(""clean"");
const buttonFilter = document.getElementById(""applyFilter"");
const filterNumberInput = document.getElementById(""filterNumber"");
const modal = document.getElementById(""modal"");
const result = document.getElementById(""result"");
const inputName = document.getElementById(""name"");
const errorDiv = document.getElementById(""error"");

const bgFilterContainer = document.getElementById(""bgFilterContainer"");
const bgFilterNumberInput = document.getElementById(""bgFilterNumber"");
const applyBgFilterButton = document.getElementById(""applyBgFilter"");

applyBgFilterButton.addEventListener(""click"", function() {
    const bgNumber = parseInt(bgFilterNumberInput.value, 10);
    displayBgFilteredResults(bgNumber);
});



let allResults = [];

// Convert letters to numbers
const lettersToNumbers = {
    а: 1, й: 1,  т: 1,  ь: 1,  a: 1, á: 1, ã: 1, â: 1, j: 1, s: 1,
    б: 2, к: 11, у: 2,  ю: 11,  b: 2,  k: 11, t: 2,
    в: 3, л: 3,  ф: 3,  я: 3,  c: 3,  l: 3, u: 3, ú: 3,
    г: 4, м: 4,  х: 22, d: 4,  m: 4, v: 22,
    д: 5, н: 5,  ц: 5,  e: 5,  é: 5, ê: 5, n: 5, ñ: 5, w: 5,
    е: 6, о: 6,  ч: 6,  f: 6,  o: 6, ó: 6, ô: 6, x: 6,
    ж: 7, п: 7,  ш: 7,  g: 7,  p: 7, y: 7,
    з: 8, р: 8,  щ: 8,  h: 8,  q: 8, z: 8,
    и: 9, с: 9,  ъ: 9,  i: 9,  í: 9, r: 9

};

// Function for transliteration
function transliterate(text) {
    const transliterationMap = {
         // lower case
         'a' : 'а',
         'b' : 'б',
         'c' : 'к',
         'd' : 'д',
         'e' : 'е',
         'f' : 'ф',
         'g' : 'г',
         'h' : 'х',
         'i' : 'и',
         'j' : 'дж',
         'k' : 'к',
         'l' : 'л',
         'm' : 'м',
         'n' : 'н',
         'o' : 'о',
         'p' : 'п',
         'q' : 'к',
         'r' : 'р',
         's' : 'с',
         't' : 'т',
         'u': ['у', 'ю'],
         'v' : 'в',
         'w' : 'в',
         'x' : 'екс',
         'y' : 'и',
         'z' : 'з',
 
         // upper case
         'A' : 'А',
         'B' : 'Б',
         'C' : 'К',
         'D' : 'Д',
         'E' : 'Е',
         'F' : 'Ф',
         'G' : 'Г',
         'H' : 'Х',
         'I' : 'И',
         'J' : 'ДЖ',
         'K' : 'К',
         'L' : 'Л',
         'M' : 'М',
         'N' : 'Н',
         'O' : 'О',
         'P' : 'П',
         'Q' : 'К',
         'R' : 'Р',
         'S' : 'С',
         'T' : 'Т',
         'U': ['У', 'Ю'],
         'V' : 'В',
         'W' : 'В',
         'X' : 'ЕКС',
         'Y' : 'И',
         'Z' : 'З',
    };

    text = text.replace(/ия\b/g, ""ia"")
    .replace(/Ия\b/g, ""Ia"")
    .replace(/иЯ\b/g, ""iA"")
    .replace(/ИЯ\b/g, ""IA"");
    const transliteratedText = text.split('').map(letter => {
        if (transliterationMap[letter]) {
            if (Array.isArray(transliterationMap[letter])) {
                return transliterationMap[letter].join('/');
            } else {
                return transliterationMap[letter];
            }
        } else {
            return letter;
        }
    }).join('');

 
    return transliteratedText.replace(/\//g, ' / ');
}

// Event listeners
buttonCalculate.onclick = (e) => {
    e.preventDefault();
    separateWords();
    modal.style.display = ""block"";
    modal.style.opacity = ""1"";
};

buttonClean.onclick = (e) => {
    e.preventDefault();
    cleanAll();
};

buttonFilter.onclick = (e) => {
    e.preventDefault();
    displayResults();
    
};

const cleanAll = () => {
    result.innerHTML = """";
    inputName.value = """";
    errorDiv.innerText = """";
    modal.style.display = ""none"";
    filterNumberInput.value = """";
    allResults = [];
};

const separateWords = () => {
    const words = inputName.value.toLowerCase().split(' ');
    if (words.length === 0 || inputName.value === """") {
        errorDiv.innerText = ""Please, write your name."";
        return;
    }
    allResults = [];
    words.forEach(word => {
        if (word !== """") {
            calculateWordNumerology(word);
        }
    });
    displayResults();
};

const calculateWordNumerology = (word) => {
    let sum = word.split('').map(letter => lettersToNumbers[letter] || 0).reduce((acc, curr) => acc + curr, 0);
    let destinyNumber = reduceNumber(sum);
    allResults.push({ word, destinyNumber });
};
const calculateNumerology = (word) => {
    let sum = word.split('').map(letter => lettersToNumbers[letter.toLowerCase()] || 0).reduce((acc, curr) => acc + curr, 0);
    return reduceNumber(sum);
};
const reduceNumber = (number) => {
    while (number > 9) {
        number = number.toString().split('').reduce((acc, digit) => acc + parseInt(digit, 10), 0);
    }
    return number;
};

const displayResults = () => {
    result.innerHTML = """";
    bgFilterContainer.style.display = ""block"";
    allResults.forEach(({ word, destinyNumber }) => {
    
        if (/^[a-zA-Z]+$/.test(word)) {
            const transliteratedWord = transliterate(word);
            const transliteratedNumber = calculateNumerology(transliteratedWord);

            const row = document.createElement(""div"");
            row.classList.add('resultRow');

            const originalElement = document.createElement(""div"");
            originalElement.classList.add('numerologyResult');
            originalElement.innerText = `${word} - ${destinyNumber}`;
            row.appendChild(originalElement);

            const transliteratedElement = document.createElement(""div"");
            transliteratedElement.classList.add('numerologyResult');
            transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
            row.appendChild(transliteratedElement);

            result.appendChild(row);
        }
    });
};

// 
function displayBgFilteredResults(bgNumber) {
    const filteredResults = allResults.filter(({ word }) => {
        const transliteratedWord = transliterate(word);
        const transliteratedNumber = calculateNumerology(transliteratedWord);
        return transliteratedNumber === bgNumber;
    });
    result.innerHTML = """"; 
    bgFilterContainer.style.display = ""none""; 

 
    filteredResults.forEach(({ word, destinyNumber }) => {
        const transliteratedWord = transliterate(word);
        const transliteratedNumber = calculateNumerology(transliteratedWord);
        const row = document.createElement(""div"");
        row.classList.add(""resultRow"");
        const originalElement = document.createElement(""div"");
        originalElement.classList.add(""numerologyResult"");
        originalElement.innerText = `${word} - ${destinyNumber}`;
        const transliteratedElement = document.createElement(""div"");
        transliteratedElement.classList.add(""numerologyResult"");
        transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
        row.appendChild(originalElement);
        row.appendChild(transliteratedElement);
        result.appendChild(row);
    });
}

const displayEnglishResults = () => {
    const filterVal = filterNumberInput.value ? parseInt(filterNumberInput.value, 10) : null;
    result.innerHTML = """";
    bgFilterContainer.style.display = ""block"";
    allResults.forEach(({ word, destinyNumber }) => {
     
        if (/^[a-zA-Z]+$/.test(word)) {
            const transliteratedWord = transliterate(word);
            const transliteratedNumber = calculateNumerology(transliteratedWord);

            if (!filterVal || destinyNumber === filterVal || transliteratedNumber === filterVal) {
                const row = document.createElement(""div"");
                row.classList.add('resultRow');

                const originalElement = document.createElement(""div"");
                originalElement.classList.add('numerologyResult');
                originalElement.innerText = `${word} - ${destinyNumber}`;
                row.appendChild(originalElement);

                const transliteratedElement = document.createElement(""div"");
                transliteratedElement.classList.add('numerologyResult');
                transliteratedElement.innerText = `${transliteratedWord} - ${transliteratedNumber}`;
                // row.appendChild(transliteratedElement);

                result.appendChild(row);
            }
        }
    });
};

// Event listener за филтър за английски думи
buttonFilter.onclick = (e) => {
    e.preventDefault();
    displayEnglishResults();
};
"
rrTuFmWv,DOOR-OS-repair.lua,Chomudit,Lua,Wednesday 28th of February 2024 04:04:25 AM CDT,"local git_urls = {""https://raw.githubusercontent.com/Minater247/CCVim/main/vim.lua"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/.vimrc"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/.version"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/lib/args.lua"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/lib/fil.lua"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/lib/str.lua"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/lib/tab.lua"", ""https://raw.githubusercontent.com/Minater247/CCVim/main/syntax/lua.lua""}
local git_files = {""/vim/vim.lua"", ""/vim/.vimrc"", ""/vim/.version"", ""/vim/lib/args.lua"", ""/vim/lib/fil.lua"", ""/vim/lib/str.lua"", ""/vim/lib/tab.lua"", ""/vim/syntax/lua.lua""}
local paste_urls = {""https://pastebin.com/raw/188w8sAR"", ""https://pastebin.com/raw/kZLWzTmq"", ""https://pastebin.com/raw/sHN9zgZv"", ""https://pastebin.com/raw/7Jthrp8J"", ""https://pastebin.com/raw/SYsYAvuD"", ""https://pastebin.com/raw/vkiYhy9G"", ""https://pastebin.com/raw/YqhAEyQh"", ""https://pastebin.com/raw/wFKC5Y5T"", ""https://pastebin.com/raw/dxKtQSgA""}
local paste_files = {""startup.lua"", ""verify.lua"", ""/os/programmanger.lua"", ""/os/filemgr.lua"", ""/os/doorcli.lua"", ""/os/data/brokendoor.nfp"", ""/os/data/logo.nfp"", ""viminstaller.lua"", ""cash.lua""}
local torepair_paste_url = {}
local torepair_git_url = {}
local torepair_git_file = {}
local torepair_paste_file = {}
shell.run(""mkdir /os"")
shell.run(""mkdir /os/data"")
shell.run(""mkdir /os/programs"")
function error()
    term.setBackgroundColor(colors.red)
    print(""Repair failed"")
end
function download(url, file, noerr)
    local content = http.get(url)
    if not content then
        if not noerr then
            error(""Failed to access resource "" .. url)
        else
            return false
        end
    end
    print(""Got data ""..url)
    content = content.readAll()
    local fi = fs.open(file, ""w"")
    fi.write(content)
    fi.close()
    print(""Dowloaded ""..url)
    return true
end
for i = 1, #git_urls, 1 do
    if not(fs.exists(git_files[i])) then
        torepair_git_file[#torepair_git_file + 1] = git_files[i]
        torepair_git_url[#torepair_git_url + 1] = git_urls[i]
    end
end
for i = 1, #paste_urls, 1 do
    if not(fs.exists(paste_files[i])) then
        torepair_paste_file[#torepair_paste_file + 1] = paste_files[i]
        torepair_paste_url[#torepair_paste_url + 1] = paste_urls[i]
    end
end
for i = 1, #torepair_paste_file, 1 do
    if not(shell.run(""pastebin get ""..torepair_paste_url[i].."" ""..torepair_paste_file[i])) then
        error()
        break
    end
end
for i = 1, #torepair_git_file, 1 do
    if not(download(torepair_git_url[i], torepair_git_file[i], true)) then
        error()
        break
    end
end
print(""Repair ended"")
"
i5dBHfFf,int & string length,rahat62,C++,Wednesday 28th of February 2024 04:01:22 AM CDT,"#include<bits/stdc++.h>
using namespace std;
int main(){
   int n;
   cin>>n;
   int len = log10(n) + 1;
   cout<<len<<endl;

   string s;
   cin>>s;
   int l =s.length();
   cout<<l<<endl;

}
"
zj8QcyeX,Input Interger and check palindome << int to string <<  String Reverse,rahat62,C++,Wednesday 28th of February 2024 03:56:32 AM CDT,"#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    string strNum = to_string(n);
    string s= strNum;
    reverse(strNum.begin(),strNum.end());
    if(strNum == s){
        cout<<""P""<<endl;
    }
    else
        cout<<""NP""<<endl;


}
"
fCwRi7FB,Untitled,soden,JavaScript,Wednesday 28th of February 2024 03:55:00 AM CDT,"// Pewarisan kelas menggunakan ES6
class MahasiswaGraduan extends Mahasiswa {
    constructor(nama, nim, jurusan, tesis) {
        super(nama, nim, jurusan);
        this.tesis = tesis;
    }

    getInfo() {
        return super.getInfo() + "", Tesis: "" + this.tesis;
    }
}

let mahasiswa2 = new MahasiswaGraduan(""Soden"", ""54321"", ""Teknik Elektro"", ""Pengembangan Robot"");
console.log(mahasiswa2.getInfo());
"
BYZYWG8X,Untitled,soden,JavaScript,Wednesday 28th of February 2024 03:53:53 AM CDT,"// Definisi kelas menggunakan ES6
class Mahasiswa {
    constructor(nama, nim, jurusan) {
        this.nama = nama;
        this.nim = nim;
        this.jurusan = jurusan;
    }

    getInfo() {
        return this.nama + "" ("" + this.nim + "") - "" + this.jurusan;
    }
}

let mahasiswa1 = new Mahasiswa(""Syarif"", ""12345"", ""Informatika"");
console.log(mahasiswa1.getInfo());
"
XBRK3Kiu,Untitled,soden,JavaScript,Wednesday 28th of February 2024 03:52:39 AM CDT,"// Objek menggunakan literal
let mahasiswa = {
    nama: ""Syarif"",
    nim: ""12345"",
    jurusan: ""Informatika"",
    getInfo: function() {
        return this.nama + "" ("" + this.nim + "") - "" + this.jurusan;
    }
};

console.log(mahasiswa.getInfo());
"
GPdh8eiQ,Untitled,Pijomir,JavaScript,Wednesday 28th of February 2024 03:27:08 AM CDT,"const stopIdElement = document.getElementById('stopId');
const stopNameElement = document.getElementById('stopName');
const bussesInfoELement = document.getElementById('buses');

async function getInfo() {
    const stopId = stopIdElement.value;
    const url = `http://localhost:3030/jsonstore/bus/businfo/${stopId}`;

    try {
        const response = await fetch(url);
        if (!response.ok) {
            const errorMessage = await response.json();
            throw errorMessage;
        }

        const data = await response.json();
        stopNameElement.textContent = data.name;
        bussesInfoELement.replaceChildren(...Object.entries(data.buses).map(line => createListItem(line[0], line[1])));
        stopIdElement.value = '';
    } catch {
        stopNameElement.textContent = 'Error';
        stopIdElement.value = '';
        bussesInfoELement.innerHTML = '';
    }

    function createListItem(busId, time) {
        const item = document.createElement('li');
        item.textContent = `Bus ${busId} arrives in ${time} minutes`;
        return item;
    }
}



// then-catch:
// function getInfo() {
//     const stopIdElement = document.getElementById('stopId');
//     const stopNameElement = document.getElementById('stopName');
//     const bussesInfoELement = document.getElementById('buses');
//     const stopId = stopIdElement.value;
//     const url = `http://localhost:3030/jsonstore/bus/businfo/${stopId}`;

//     fetch(url)
//         .then(onHeaders)
//         .then(onSuccess)
//         .catch(onError);

//     function onHeaders(response) {
//         if (!response.ok) {
//             throw 'Error';
//         }

//         return response.json();
//     }

//     function onSuccess(data) {
//         stopNameElement.textContent = data.name;
//         bussesInfoELement.replaceChildren(...Object.entries(data.buses).map(line => createListItem(line[0], line[1])));
//         stopIdElement.value = '';
//     }

//     function onError(error) {
//         stopNameElement.textContent = 'Error';
//     }

//     function createListItem(busId, time) {
//         const item = document.createElement('li');
//         item.textContent = `Bus ${busId} arrives in ${time} minutes`;
//         return item;
//     }
// }"
22Unqs4Z,Copyfile fails,AliAbdulKareem,C++,Wednesday 28th of February 2024 03:20:53 AM CDT,"/* build.bat that is used to generate the game code and the engine code
@echo off

pushd ..\exe
del *.pdb
cl /W4 /Zi /nologo /wd4100 /diagnostics:column /EHsc /LD ..\src\game.cpp /link /PDB:%TIME::=%.pdb /INCREMENTAL:NO /EXPORT:FillBitMap
cl /W4 /Zi /nologo /wd4100 /diagnostics:column /EHsc ..\src\main.cpp Kernel32.lib User32.lib Gdi32.lib Winmm.lib /link /INCREMENTAL:NO  
IF %ERRORLEVEL% NEQ 0 ( 
   popd
   EXIT /B 2
) 
popd
*/


void UnloadWin32Code(win32_code* Win32Code)
{
	if(Win32Code->Valid)
	{
		FreeLibrary(Win32Code->GameLib);
		Win32Code->Valid 	= 0;
		Win32Code->GameLib  = 0;
	}
	else
	{
		Assert(!Win32Code->GameLib);
	}

}


win32_code LoadWin32Code(char* DLLTempName)
{
	win32_code Win32Code = {};
	HMODULE GameLib = LoadLibrary(DLLTempName);
	if(!GameLib)
	{
		DWORD Error = GetLastError();
		char Buffer[1024];
		wsprintf(Buffer,  ""Could LoadLibrary DLL %s with error = %d\n"", DLLTempName, Error);
		OutputDebugString(Buffer);
		MessageBox(0, Buffer, ""Error in DLL Loading"", MB_OK);
		Assert(0);
	}

	Win32Code.GameLib = GameLib;
	Win32Code.Valid = 1;
	return (Win32Code);
}

int WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{

	s32 DLLCounter = 0;
	char DLLTempName[11] = {'g', 'a', 'm', 'e','_','0', '.','d','l','l','\0'};
	char* DLLSourceName = ""game.dll"";
	DLLCounter++;


	if(!CopyFile(DLLSourceName, DLLTempName, FALSE))
	{
		DWORD Error = GetLastError();
		char Buffer[1024];
		wsprintf(Buffer, ""Error = %d\n"", Error);
		OutputDebugString(Buffer);
		Assert(0);
	}

	win32_code Win32Code = LoadWin32Code(DLLTempName);
	// creates and initalizes a window and device context
	if(Win32Code.Valid)
	{
		
		FillBitMapFunc* FillBitMap = (FillBitMapFunc*)GetProcAddress(Win32Code.GameLib, ""FillBitMap"");
		if (!FillBitMap)
		{
			MessageBox(0, ""Could not function FillBitMap "", ""error"", MB_OK);
			return(0);
		}

		GameState.FillBitMap = FillBitMap;
	}
	
	FILETIME GameDllWriteTime;
	WIN32_FILE_ATTRIBUTE_DATA GameDllData;

	if (!GetFileAttributesExA(""game.dll"", GetFileExInfoStandard, &GameDllData))
	{
		MessageBox(0, ""fialed to open game.dll"", ""Error"", MB_OK);
		return (-5);
	}
	GameDllWriteTime = GameDllData.ftLastWriteTime;


	while (Run)	
	{
		if (!GetFileAttributesExA(""game.dll"", GetFileExInfoStandard, &GameDllData))
		{
			MessageBox(0, ""Could not open game.dll in loop"", ""Error"", MB_OK);
			return(-7);
		}
		FILETIME GameDllLastWrite = GameDllData.ftLastWriteTime;
		if (CompareFileTime(&GameDllWriteTime, &GameDllLastWrite))
		{

			UnloadWin32Code(&Win32Code);

			DLLTempName[5] = (char) ((DLLCounter++) + '0'); // changes the version from 0 to 9
			if (DLLCounter >= 10) DLLCounter = 0;
			if(!CopyFile(DLLSourceName, DLLTempName, FALSE)) // this fails !
			{
				DWORD Error = GetLastError();
				char Buffer[1024];
				wsprintf(Buffer, ""Error = %d\n"", Error);
				OutputDebugString(Buffer);
				MessageBox(0, Buffer, ""Error in DLL copying"", MB_OK);
				Assert(0);
			}
			Win32Code = LoadWin32Code(DLLTempName);



			FillBitMapFunc* FillBitMap = (FillBitMapFunc*)GetProcAddress(Win32Code.GameLib, ""FillBitMap"");
			if (!FillBitMap)
			{
				MessageBox(0, ""Could not function FillBitMap "", ""error"", MB_OK);
				return(0);
			}

			GameState.FillBitMap = FillBitMap;
			GameDllWriteTime = GameDllLastWrite;
		}

		MSG Message;
		while (PeekMessageA(&Message, WindowHandle, 0, 0, PM_REMOVE))
		{
			DispatchMessage(&Message);
			TranslateMessage(&Message);
		}

		//input and render and other stuff
		Win32FillBitMap(WindowHandle, DeviceContext, &BitMapInfo, BitMapMemory);
	}

	EndProcess(&Win32Code);
	return(0);
}"
f1WF72xr,install_node_exporter,s4ros,Bash,Wednesday 28th of February 2024 02:49:33 AM CDT,"#!/bin/bash

sudo wget \
    https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz \
    -O /opt/node_exporter-1.7.0.linux-amd64.tar.gz
cd /opt
sudo tar -zxvf node_exporter-1.7.0.linux-amd64.tar.gz
sudo mv node_exporter-1.7.0.linux-amd64/node_exporter node_exporter
cat << DUPA | sudo tee /etc/systemd/system/node_exporter.service
[Unit]
Description=Node Exporter for Prometheus
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=nobody
ExecStart=/opt/node_exporter

[Install]
WantedBy=multi-user.target
DUPA
sudo systemctl start node_exporter.service
sudo rm -rf node_exporter-1.7.0.linux-amd64*"
L3vq66tz,YOUTUBE-ALL-LINKS.py,Najeebsk,Python,Wednesday 28th of February 2024 02:08:50 AM CDT,"import tkinter as tk
from tkinter import messagebox, filedialog
import youtube_dl

def scrape_channel():
    output_text.delete('1.0', tk.END)  # Clear previous results
    channel_url = channel_entry.get()
    ydl_opts = {
        'quiet': True,
        'extract_flat': True,
    }
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        result = ydl.extract_info(channel_url, download=False)
        videos = result.get('entries')
        if videos:
            for video in videos:
                title = video.get('title')
                url = video.get('url')
                full_link = f""https://www.youtube.com/watch?v={url}""
                output_text.insert(tk.END, f""{title}\n{full_link}\n\n"")

def save_results():
    file_path = filedialog.asksaveasfilename(defaultextension="".txt"", filetypes=[(""Text files"", ""*.txt"")])
    if file_path:
        try:
            with open(file_path, 'w') as file:
                file.write(output_text.get(""1.0"", tk.END))
            messagebox.showinfo(""Success"", ""Results saved successfully!"")
        except Exception as e:
            messagebox.showerror(""Error"", f""An error occurred: {str(e)}"")

root = tk.Tk()
root.title(""Najeeb YouTube Channel Scraper"")
root.config(bg='green')

label = tk.Label(root, text=""Enter YouTube Channel URL:"")
label.grid(row=0, column=0, pady=10)

channel_entry = tk.Entry(root, width=50)
channel_entry.grid(row=0, column=1)

scrape_button = tk.Button(root, text=""Scrape Channel"", command=scrape_channel)
scrape_button.grid(row=0, column=2, pady=5)

output_text = tk.Text(root, height=20, width=100)
output_text.grid(row=1, column=0, columnspan=3, padx=10, pady=10)

scrollbar = tk.Scrollbar(root, orient=tk.VERTICAL, command=output_text.yview)
scrollbar.grid(row=1, column=3, sticky=""ns"")
output_text.config(yscrollcommand=scrollbar.set)

save_button = tk.Button(root, text=""Save"", command=save_results)
save_button.grid(row=2, column=1, pady=5)

root.mainloop()

"
Wy53eeLC,Snap Audio Emitter To Spline (Unity),Staggart,C#,Wednesday 28th of February 2024 01:56:58 AM CDT,"using UnityEngine;
using UnityEngine.Splines;

public class SnapAudioEmitterToSpline : MonoBehaviour
{
    public SplineContainer splineContainer;
    public AudioSource audioSource;
    
    private AudioListener audioListener;
    private float m_audioDistanceNormalized;
    
    private void Reset()
    {
        audioSource = GetComponentInParent<AudioSource>();
    }
    
    private void Update()
    {
        if (audioSource)
        {
            UpdateAudio();
        }
    }
    
    private void UpdateAudio()
    {
        if (!audioListener) audioListener = FindObjectOfType<AudioListener>();
        if (!audioListener) return;

        if (!splineContainer) return;

        Vector3 earPosition = audioListener.transform.position;
        
        #if UNITY_EDITOR
        if (!Application.isPlaying)
        {
            if (UnityEditor.SceneView.lastActiveSceneView) earPosition = UnityEditor.SceneView.lastActiveSceneView.camera.transform.position;
        }
        #endif

        //Ear position in the spline's local-space
        earPosition = splineContainer.transform.InverseTransformPoint(earPosition);
        
        SplineUtility.GetNearestPoint(splineContainer.Spline, earPosition, out var nearestPoint, out _, SplineUtility.PickResolutionMin, 1);
 
        audioSource.dopplerLevel = 0;
        audioSource.transform.position = splineContainer.transform.TransformPoint(nearestPoint);
    }
    
    private void OnDrawGizmosSelected()
    {
        if (audioSource)
        {
            Gizmos.DrawSphere(audioSource.transform.position, 1f);
            Gizmos.DrawWireSphere(audioSource.transform.position, audioSource.maxDistance);
        }
    }
}"
N1CVw4kT,Patch SF-Mono & Menlo with Nerd Fonts,ucomesdag,Bash,Wednesday 28th of February 2024 01:56:11 AM CDT,"#!/usr/bin/env bash

basedir=""$( cd ""$(dirname ""$0"")"" >/dev/null 2>&1 ; pwd -P )""

brew install fontforge
brew link fontforge

git clone --depth 1 https://github.com/ryanoasis/nerd-fonts.git ""$basedir/nerd-fonts""

for font in /System/Applications/Utilities/Terminal.app/Contents/Resources/Fonts/SF-Mono-*; do
  fontforge -script ""$basedir/nerd-fonts/font-patcher"" --complete -out ""$basedir/nerd-fonts/patched-fonts/SF-Mono"" $font
done

fontforge -script ""$basedir/nerd-fonts/font-patcher"" --complete -out ""$basedir/nerd-fonts/patched-fonts/Menlo"" /System/Library/Fonts/Menlo.ttc

\cp -R ""$basedir/nerd-fonts/patched-fonts/SF-Mono"" ~/Library/Fonts
\cp -R ""$basedir/nerd-fonts/patched-fonts/Menlo"" ~/Library/Fonts

rm -rf ""$basedir/nerd-fonts""

brew unlink fontforge
brew uninstall fontforge"
6UjYbQBt,Untitled,a_chn,C++,Wednesday 28th of February 2024 01:55:44 AM CDT,"#include <bits/stdc++.h>
using namespace std;
 
using Square = struct Square;
 
struct Square {
    int x, y;
 
    bool operator==(const Square &other) const {
        return (x == other.x) && (y == other.y);
    }
 
    bool operator<(const Square &other) const {
        return (x < other.x) || ((x == other.x) && (y < other.y));
    }
};

const int N1 = 1752;
const int N2 = 875;
 
bool walls[N1][N1];
 
bool adjacent(const Square &first, const Square &second) {
    return !walls[(first.x + second.x) / 2 + N2][(first.y + second.y) / 2 + N2];
}
 
vector<int> x_change = {0, 0, -1, 1};
vector<int> y_change = {-1, 1, 0, 0};
 
bool visited[N1][N1];

int its;
 
void flood_fill(const Square square) {
    ++its;
    assert(square.x + N2 >= 0 && square.y + N2 >= 0);
    visited[square.x + N2][square.y + N2] = true;
 
    for (int index = 0; index < 4; ++index) {
        Square new_square; 
        assert(index >= 0 && index < 4);
        new_square.x = square.x + x_change[index]; new_square.y = square.y + y_change[index];
        
        if ((min(new_square.x, new_square.y) >= -N2) && (max(new_square.x, new_square.y) <= N2) && adjacent(square, new_square) && (visited[new_square.x + N2][new_square.y + N2] == false)) {
            flood_fill(new_square);
        }
    }    
}
 
int main() {
    freopen(""gates.in"", ""r"", stdin);
    freopen(""gates.out"", ""w"", stdout);
 
    int length;
    cin >> length;
 
    for (int x = 0; x < N1; ++x) {
        for (int y = 0; y < N1; ++y) {
            visited[x][y] = false;
            walls[x][y] = false;
        }
    }
    
    int x = N2, y = N2;
    walls[x][y] = true;
 
    for (int _ = 0; _ < length; ++_) {
        char direction;
        cin >> direction;
 
        int start_x = x, start_y = y;
 
        switch (direction) {
            case 'N':
                y += 2;
                break;
 
            case 'E':
                x += 2;
                break;
 
            case 'S':
                y -= 2;
                break;
 
            default:
                x -= 2;
                break;
        }
 
        walls[x][y] = true;
        walls[(x + start_x) / 2][(y + start_y) / 2] = true;
    }
 
    int gates = -1;
    for (float x = -N2; x <= N2; x += 1) {
        for (float y = -N2; y <= N2; y += 1) {
            Square square;
            square.x = x;
            square.y = y;
 
            if (!walls[square.x + N2][square.y + N2] && !visited[square.x + N2][square.y + N2]) {
                gates++;
                flood_fill(square);
            }
        }
    }
    cout << gates << ""\n"";
    return 0;
}"
Eq8sHGjC,How to disable reset and leaderboard/playerlist in roblox studio.,LOLTIKE,Lua,Wednesday 28th of February 2024 01:50:15 AM CDT,"--Guys if you have problem with horror game, like you can reset, then insert the localscript in startergui, open up it, and then type:

repeat
	local success, errormsg = pcall(function()
		local StarterGui = game:GetService(""StarterGui"")
		StarterGui:SetCore(""ResetButtonCallback"", false)
	end)
	task.wait()
until success

--but if you need to disable leaderboard, then insert the localscript in startergui, open up it, and then type:

	repeat
		local success, errormsg = pcall(function()
			local StarterGui = game:GetService(""StarterGui"")
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
		end)
		task.wait()
	until success


--PASTE WILL UPD!!!"
3RvdedJQ,Mad,Unknown_No_1,PHP,Wednesday 28th of February 2024 01:39:20 AM CDT,JoinTGStarModz
SR44GVMs,terorett,gadungw71,PHP,Wednesday 28th of February 2024 01:26:05 AM CDT,"https://skrwbh9828.expandcart.com/index.php?route=product/product&product_id=373
https://kezwst4807.expandcart.com/index.php?route=product/product&product_id=373
https://skrwbh9828.expandcart.com/index.php?route=product/product&product_id=374
https://ocprwp5014.expandcart.com/index.php?route=product/product&product_id=373
https://github.com/lixazoxepez12
https://github.com/phim-mai-2024-vietsub
https://www.taskade.com/p/xem-phim-mai-2024-vietsub-thuyet-minh-01HQQ4BGE1GDK1VCSS6G5D2CPX
https://www.taskade.com/p/phim-mai-2024-full-hd-vietsub-ultra-hd-4-k-01HQQ6N5BA4ER30B2QFNHEKV06
https://open.firstory.me/user/clt5fcqus10h501zfg9p090gj
https://open.firstory.me/story/clt5fi0xg10hf01zf1mgy26us
https://forum.webnovel.com/d/167333-xem-mai-2024-phim-full-hd-vietsub-online
https://mpobcw4327.expandcart.com/index.php?route=product/product&product_id=373
https://forum.webnovel.com/d/167334-phim-online-mai-2024-vietsub-bo-phim-day-du-mien-phi
https://demo.hedgedoc.org/s/hSJ5JE1E3
https://paiza.io/projects/PLtU-Sk7_2nLB1W6oV0Mxg
https://pastelink.net/mwci64mz
https://hackmd.io/@rerewilli6/r13y1Dh3T
https://snippet.host/camsxd
https://tempaste.com/zmDTPO8G7ET
https://rentry.co/yef3abi2
https://binshare.net/N22T1IopMHkCG8oCiPL6
https://rift.curseforge.com/paste/2c2c92e5
https://telegra.ph/Xem-phim-Mai-2024-online-thuy%E1%BA%BFt-minh-mi%E1%BB%85n-ch%E1%BA%A5t-l%C6%B0%E1%BB%A3ng-t%E1%BB%91t-Full-HD-02-28
"
RGrg8gmt,RequestException: error with request,basedcount_bot,Python,Wednesday 28th of February 2024 12:51:34 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 64, in request
    return await self._http.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/client.py"", line 467, in _request
    with timer:
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/aiohttp/helpers.py"", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 270, in _request_with_retries
    response, saved_exception = await self._make_request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 187, in _make_request
    response = await self._rate_limiter.call(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/rate_limit.py"", line 35, in call
    response = await request_function(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/requestor.py"", line 68, in request
    raise RequestException(exc, args, kwargs)
asyncprawcore.exceptions.RequestException: error with request 
"
1wC0UWTf,FormattedJson,cepxuozab,C++,Wednesday 28th of February 2024 12:17:16 AM CDT,"std::string s = ""[\n""
                        ""   {\n""
                        ""      \""array\"":[\n""
                        ""         1,\n""
                        ""         2,\n""
                        ""         3\n""
                        ""      ],\n""
                        ""      \""bool\"":true,\n""
                        ""      \""double\"":42.1,\n""
                        ""      \""int\"":42,\n""
                        ""      \""map\"":{\n""
                        ""         \""key\"":\""value\""\n""
                        ""      },\n""
                        ""      \""null\"":null,\n""
                        ""      \""string\"":\""hello\""\n""
                        ""   }\n""
                        ""]"";
        Array arr;
arr.emplace_back(Dict{
            {""int""s, 42},
            {""double""s, 42.1},
            {""null""s, nullptr},
            {""string""s, ""hello""s},
            {""array""s, Array{1, 2, 3}},
            {""bool""s, true},
            {""map""s, Dict{{""key""s, ""value""s}}},
            });
        std::stringstream strm;
        strm << s;
        const auto doc = Load(strm);
        assert(doc.GetRoot() == arr);
        Print(doc, cout);"
mSuMQp09,Untitled,IgorLytkin,Bash,Wednesday 28th of February 2024 12:00:45 AM CDT,"C:\Program Files\Docker\Docker\resources\bin\docker.exe compose -f C:\Users\igorl\PycharmProjects\LariskaBot\docker-compose.yml -p lariskabot up -d
Preparing Docker SSH environment...

[+] Running 1/1[+] Running 0/1
 ! lariska_bot Warning                                                                                                                                                     2.6s 
[+] Building 0.0s (0/0)  docker:default
[+] Building 22.7s (11/11) FINISHED                                                                                                                              docker:default
 => [lariska_bot internal] load build definition from Dockerfile                                                                                                           1.9s
 => => transferring dockerfile: 1.19kB                                                                                                                                     0.4s
 => [lariska_bot internal] load .dockerignore                                                                                                                              1.9s
 => => transferring context: 337B                                                                                                                                          0.4s
 => [lariska_bot internal] load metadata for docker.io/library/python:3.11.2-slim                                                                                          2.8s
 => [lariska_bot auth] library/python:pull token for registry-1.docker.io                                                                                                  0.0s
 => [lariska_bot 1/5] FROM docker.io/library/python:3.11.2-slim@sha256:2f749ef90f54fd4b3c77cde78eec23ab5b8199d9ac84e4ced6ae523ef223ef7b                                    4.2s
 => => resolve docker.io/library/python:3.11.2-slim@sha256:2f749ef90f54fd4b3c77cde78eec23ab5b8199d9ac84e4ced6ae523ef223ef7b                                                0.0s
 => => sha256:f1f26f5702560b7e591bef5c4d840f76a232bf13fd5aefc4e22077a1ae4440c7 31.41MB / 31.41MB                                                                           1.4s
 => => sha256:2d2b016608857911079186690549bb03798585a3f2310e34bc878db7fa0fcd80 1.08MB / 1.08MB                                                                             0.5s
 => => sha256:e4e8e4c0b0e1ede5d95ec0e486ee183a1982365fa95a2fe2f54e37abce15c874 11.95MB / 11.95MB                                                                           0.8s
 => => sha256:2f749ef90f54fd4b3c77cde78eec23ab5b8199d9ac84e4ced6ae523ef223ef7b 1.65kB / 1.65kB                                                                             0.0s 
 => => sha256:9ad4ffc502779e5508f7ac1eccab4a22786b80bd53d721d735f6de0840b245a1 1.37kB / 1.37kB                                                                             0.0s 
 => => sha256:4d2191666712ee49cabf8e353ecb866d05568778d810cdd908a4eed2e024a58c 6.89kB / 6.89kB                                                                             0.0s
 => => sha256:1ba60f086308c4cd4d46287364ec6abfaff8f3b5e480f2ce082ef61a30bbe68d 243B / 243B                                                                                 0.8s 
 => => sha256:3c2fccf90be107c0275e15c5f035c8132a9666f60d443e3a5b83afeab3883b2d 3.37MB / 3.37MB                                                                             1.2s 
 => => extracting sha256:f1f26f5702560b7e591bef5c4d840f76a232bf13fd5aefc4e22077a1ae4440c7                                                                                  1.6s 
 => => extracting sha256:2d2b016608857911079186690549bb03798585a3f2310e34bc878db7fa0fcd80                                                                                  0.1s 
 => => extracting sha256:e4e8e4c0b0e1ede5d95ec0e486ee183a1982365fa95a2fe2f54e37abce15c874                                                                                  0.5s 
 => => extracting sha256:1ba60f086308c4cd4d46287364ec6abfaff8f3b5e480f2ce082ef61a30bbe68d                                                                                  0.0s 
 => => extracting sha256:3c2fccf90be107c0275e15c5f035c8132a9666f60d443e3a5b83afeab3883b2d                                                                                  0.3s 
 => [lariska_bot internal] load build context                                                                                                                              0.7s 
 => => transferring context: 160.97kB                                                                                                                                      0.7s 
 => [lariska_bot 2/5] WORKDIR ~/LariskaBot                                                                                                                                 0.1s 
 => [lariska_bot 3/5] COPY requirements.txt .                                                                                                                              0.0s 
 => [lariska_bot 4/5] RUN pip install --no-cache-dir -r ./requirements.txt                                                                                                12.5s 
 => [lariska_bot 5/5] COPY lariska_bot ./lariska_bot                                                                                                                       0.1s 
 => [lariska_bot] exporting to image                                                                                                                                       0.7s 
 => => exporting layers                                                                                                                                                    0.6s 
 => => writing image sha256:4a1f947bf919506b3d11f75a6f027099b2a21644873f5abe051bc18d5c20732c                                                                               0.0s 
 => => naming to docker.io/library/lariska_bot                                                                                                                             0.0s 
[+] Running 0/2
 - Network lariskabot_default  Created                                                                                                                                     0.7s 
 - Container LariskaBot        Creating                                                                                                                                    0.3s 
Error response from daemon: invalid volume specification: 'C:\Users\igorl\PycharmProjects\LariskaBot\logs:/~/LariskaBot/logs:rw'
`docker-compose` process finished with exit code 1

"
8D8PJXX1,Journal of Zhejiang University-SCIENCE B,doctorzeeshan94,XML,Tuesday 27th of February 2024 11:45:04 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<style xmlns=""http://purl.org/net/xbiblio/csl"" class=""in-text"" version=""1.0"" demote-non-dropping-particle=""never"" default-locale=""en-GB"">
  <!-- This style was edited with the Visual CSL Editor (https://editor.citationstyles.org/visualEditor/) -->
  <info>
    <title>Journal of Zhejiang University-SCIENCE B</title>
    <id>http://www.zotero.org/styles/journal-of-zhejiang-university-science-b</id>
    <link href=""http://www.zotero.org/styles/journal-of-zhejiang-university-science-b"" rel=""self""/>
    <link href=""http://www.zotero.org/styles/business-ethics-a-european-review"" rel=""template""/>
    <link href=""https://onlinelibrary.wiley.com/page/journal/20554877/homepage/forauthors.html"" rel=""documentation""/>
    <author>
      <name>Patrick O'Brien</name>
    </author>
    <category citation-format=""author-date""/>
    <category field=""humanities""/>
    <eissn>2055-4877</eissn>
    <updated>2024-02-28T05:39:43+00:00</updated>
    <rights license=""http://creativecommons.org/licenses/by-sa/3.0/"">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights>
  </info>
  <locale xml:lang=""en"">
    <terms>
      <term name=""editortranslator"" form=""short"">
        <single>ed. &amp; trans.</single>
        <multiple>eds. &amp; trans.</multiple>
      </term>
      <term name=""translator"" form=""short"">trans.</term>
    </terms>
  </locale>
  <macro name=""container-contributors"">
    <choose>
      <if type=""chapter paper-conference entry-dictionary entry-encyclopedia"" match=""any"">
        <names variable=""editor translator container-author"" delimiter="", "" suffix="" "">
          <name and=""symbol"" delimiter-precedes-last=""never"" initialize-with=""."" name-as-sort-order=""all""/>
          <label form=""short"" prefix="" ("" text-case=""title"" suffix="")""/>
        </names>
      </if>
    </choose>
  </macro>
  <macro name=""secondary-contributors"">
    <choose>
      <if type=""article-journal chapter paper-conference entry-dictionary entry-encyclopedia"" match=""none"">
        <names variable=""translator editor container-author"" delimiter="", "" prefix="" ("" suffix="")"">
          <name and=""symbol"" initialize-with=""."" delimiter="", ""/>
          <label form=""short"" prefix="", "" text-case=""title""/>
        </names>
      </if>
    </choose>
  </macro>
  <macro name=""author"">
    <names variable=""author"" suffix="","">
      <name delimiter-precedes-last=""never"" initialize-with=""."" name-as-sort-order=""all""/>
      <label form=""short"" prefix="" ("" suffix="")"" text-case=""capitalize-first""/>
      <substitute>
        <names variable=""editor""/>
        <names variable=""translator""/>
        <choose>
          <if type=""report"">
            <text variable=""publisher""/>
            <text macro=""title""/>
          </if>
          <else>
            <text macro=""title""/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name=""author-short"">
    <names variable=""author"">
      <name form=""short"" and=""text"" initialize-with="".""/>
      <substitute>
        <names variable=""editor""/>
        <names variable=""translator""/>
        <choose>
          <if type=""report"">
            <text variable=""publisher""/>
            <text variable=""title"" form=""short"" font-style=""italic""/>
          </if>
          <else-if type=""legal_case"">
            <text variable=""title"" font-style=""italic""/>
          </else-if>
          <else-if type=""bill book graphic legislation motion_picture song"" match=""any"">
            <text variable=""title"" form=""short"" font-style=""italic""/>
          </else-if>
          <else>
            <text variable=""title"" form=""short"" quotes=""true""/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name=""access"">
    <choose>
      <if type=""report"" match=""any"">
        <choose>
          <if variable=""archive"" match=""any"">
            <group>
              <text term=""retrieved"" text-case=""capitalize-first"" suffix="" ""/>
              <text term=""from"" suffix="" ""/>
              <text variable=""archive"" suffix="".""/>
              <text variable=""archive_location"" prefix="" ("" suffix="")""/>
            </group>
          </if>
        </choose>
      </if>
      <else>
        <choose>
          <if variable=""DOI"">
            <text variable=""DOI"" prefix=""https://doi.org/""/>
          </if>
          <else-if type=""webpage post post-weblog"" match=""any"">
            <group delimiter="": "">
              <text term=""available at"" text-case=""capitalize-first"" suffix="" ""/>
              <text variable=""URL""/>
            </group>
          </else-if>
        </choose>
      </else>
    </choose>
  </macro>
  <macro name=""title"">
    <choose>
      <if type=""report thesis book graphic motion_picture report song manuscript speech"" match=""any"">
        <choose>
          <if variable=""version"" type=""book"" match=""all"">
            <text variable=""title""/>
          </if>
          <else>
            <text variable=""title"" font-style=""italic""/>
          </else>
        </choose>
      </if>
      <else>
        <text variable=""title""/>
      </else>
    </choose>
  </macro>
  <macro name=""title-plus-extra"">
    <text macro=""title""/>
    <choose>
      <if type=""report thesis"" match=""any"">
        <group prefix="" ("" suffix="")"" delimiter="" "">
          <text variable=""genre""/>
          <text variable=""number"" prefix=""No. ""/>
        </group>
      </if>
      <else-if type=""post-weblog webpage"" match=""any"">
        <text variable=""genre"" prefix="" ["" suffix=""]""/>
      </else-if>
      <else-if variable=""version"">
        <group delimiter="" "" prefix="" ("" suffix="")"">
          <text term=""version"" text-case=""capitalize-first""/>
          <text variable=""version""/>
        </group>
      </else-if>
    </choose>
    <text macro=""format""/>
  </macro>
  <macro name=""format"">
    <text variable=""medium"" text-case=""capitalize-first"" prefix="" ["" suffix=""]""/>
  </macro>
  <macro name=""publisher"">
    <choose>
      <if type=""report"" match=""any"">
        <group delimiter="": "">
          <text variable=""publisher-place""/>
          <text variable=""publisher""/>
        </group>
      </if>
      <else-if type=""thesis"" match=""any"">
        <group delimiter="", "">
          <text variable=""publisher""/>
          <text variable=""publisher-place""/>
        </group>
      </else-if>
      <else-if type=""post-weblog webpage post"" match=""none"">
        <group delimiter="", "">
          <choose>
            <if variable=""event version"" type=""speech"" match=""none"">
              <text variable=""genre""/>
            </if>
          </choose>
          <choose>
            <if type=""article-journal article-magazine article-newspaper"" match=""none"">
              <group delimiter="", "">
                <choose>
                  <if variable=""event-place"">
                    <text variable=""event-place""/>
                  </if>
                </choose>
                <text variable=""publisher""/>
                <group delimiter="" "">
                  <label variable=""page"" form=""short""/>
                  <text variable=""page""/>
                </group>
              </group>
            </if>
          </choose>
        </group>
      </else-if>
    </choose>
  </macro>
  <macro name=""event"">
    <choose>
      <if variable=""container-title"" match=""none"">
        <choose>
          <if variable=""event"">
            <choose>
              <if variable=""genre"" match=""none"">
                <text term=""presented at"" text-case=""capitalize-first"" suffix="" ""/>
                <text variable=""event""/>
              </if>
              <else>
                <group delimiter="" "">
                  <text variable=""genre"" text-case=""capitalize-first""/>
                  <text term=""presented at""/>
                  <text variable=""event""/>
                </group>
              </else>
            </choose>
          </if>
          <else-if type=""speech"">
            <text variable=""genre"" text-case=""capitalize-first""/>
          </else-if>
        </choose>
      </if>
    </choose>
  </macro>
  <macro name=""issued"">
    <choose>
      <if type=""bill legal_case legislation"" match=""none"">
        <choose>
          <if variable=""issued"">
            <group suffix=""."">
              <date variable=""issued"">
                <date-part name=""year""/>
              </date>
              <text variable=""year-suffix""/>
            </group>
          </if>
          <else-if variable=""status"">
            <group prefix=""("" suffix="")"">
              <text variable=""status""/>
              <text variable=""year-suffix"" prefix=""-""/>
            </group>
          </else-if>
          <else>
            <group prefix=""("" suffix="")"">
              <text term=""no date"" form=""short""/>
              <text variable=""year-suffix"" prefix=""-""/>
            </group>
          </else>
        </choose>
      </if>
    </choose>
  </macro>
  <macro name=""issued-sort"">
    <choose>
      <if type=""article-journal bill book chapter graphic legal_case legislation motion_picture paper-conference report song"" match=""none"">
        <date variable=""issued"">
          <date-part name=""year""/>
          <date-part name=""month""/>
          <date-part name=""day""/>
        </date>
      </if>
      <else>
        <date variable=""issued"">
          <date-part name=""year""/>
        </date>
      </else>
    </choose>
  </macro>
  <macro name=""issued-year"">
    <choose>
      <if variable=""issued"">
        <group delimiter=""/"">
          <group>
            <date variable=""issued"">
              <date-part name=""year""/>
            </date>
            <text variable=""year-suffix""/>
          </group>
          <date variable=""original-date"" form=""text""/>
        </group>
      </if>
      <else-if variable=""status"">
        <text variable=""status""/>
        <text variable=""year-suffix"" prefix=""-""/>
      </else-if>
      <else>
        <text term=""no date"" form=""short""/>
        <text variable=""year-suffix"" prefix=""-""/>
      </else>
    </choose>
  </macro>
  <macro name=""edition"">
    <choose>
      <if is-numeric=""edition"">
        <group delimiter="" "">
          <number variable=""edition"" form=""ordinal""/>
          <text term=""edition"" form=""short""/>
        </group>
      </if>
      <else>
        <text variable=""edition""/>
      </else>
    </choose>
  </macro>
  <macro name=""locators"">
    <choose>
      <if type=""article-journal article-magazine"" match=""any"">
        <group delimiter="":"" prefix="", "">
          <group>
            <text variable=""volume"" font-style=""normal"" font-weight=""bold""/>
            <text variable=""issue"" prefix=""("" suffix="")""/>
          </group>
          <text variable=""page""/>
        </group>
        <choose>
          <if variable=""issued"">
            <choose>
              <if variable=""page issue"" match=""none"">
                <text variable=""status"" prefix="". ""/>
              </if>
            </choose>
          </if>
        </choose>
      </if>
      <else-if type=""article-newspaper"">
        <group delimiter="" "" prefix="", "">
          <label variable=""page"" form=""short""/>
          <text variable=""page""/>
        </group>
      </else-if>
      <else-if type=""book graphic motion_picture report song chapter paper-conference entry-encyclopedia entry-dictionary"" match=""any"">
        <group delimiter="", "" prefix="", "">
          <text macro=""edition""/>
          <choose>
            <if variable=""volume"" match=""any"">
              <group>
                <text term=""volume"" form=""short"" text-case=""capitalize-first"" suffix="" ""/>
                <number variable=""volume"" form=""numeric""/>
              </group>
            </if>
            <else>
              <group>
                <text term=""volume"" form=""short"" plural=""true"" text-case=""capitalize-first"" suffix="" ""/>
                <number variable=""number-of-volumes"" form=""numeric"" prefix=""1–""/>
              </group>
            </else>
          </choose>
        </group>
      </else-if>
      <else-if type=""legal_case"">
        <group prefix="" ("" suffix="")"" delimiter="" "">
          <text variable=""authority""/>
          <date variable=""issued"" form=""text""/>
        </group>
      </else-if>
      <else-if type=""bill legislation"" match=""any"">
        <date variable=""issued"" prefix="" ("" suffix="")"">
          <date-part name=""year""/>
        </date>
      </else-if>
    </choose>
  </macro>
  <macro name=""citation-locator"">
    <group>
      <choose>
        <if locator=""chapter"">
          <label variable=""locator"" form=""long"" text-case=""capitalize-first""/>
        </if>
        <else>
          <label variable=""locator"" form=""short""/>
        </else>
      </choose>
      <text variable=""locator"" prefix="" ""/>
    </group>
  </macro>
  <macro name=""container"">
    <choose>
      <if type=""post-weblog webpage"" match=""none"">
        <group>
          <choose>
            <if type=""chapter paper-conference entry-encyclopedia"" match=""any"">
              <text term=""in"" text-case=""capitalize-first"" suffix="": ""/>
            </if>
          </choose>
          <text macro=""container-contributors""/>
          <text macro=""secondary-contributors""/>
          <text macro=""container-title""/>
        </group>
      </if>
    </choose>
  </macro>
  <macro name=""container-title"">
    <choose>
      <if type=""article article-journal article-magazine article-newspaper"" match=""any"">
        <text variable=""container-title"" font-style=""italic"" text-case=""title""/>
      </if>
      <else-if type=""bill legal_case legislation"" match=""none"">
        <text variable=""container-title"" font-style=""italic""/>
      </else-if>
    </choose>
  </macro>
  <macro name=""legal-cites"">
    <choose>
      <if type=""bill legal_case legislation"" match=""any"">
        <group delimiter="" "" prefix="", "">
          <choose>
            <if variable=""container-title"">
              <text variable=""volume""/>
              <text variable=""container-title""/>
              <group delimiter="" "">
                <text term=""section"" form=""symbol""/>
                <text variable=""section""/>
              </group>
              <text variable=""page""/>
            </if>
            <else>
              <choose>
                <if type=""legal_case"">
                  <text variable=""number"" prefix=""No. ""/>
                </if>
                <else>
                  <text variable=""number"" prefix=""Pub. L. No. ""/>
                  <group delimiter="" "">
                    <text term=""section"" form=""symbol""/>
                    <text variable=""section""/>
                  </group>
                </else>
              </choose>
            </else>
          </choose>
        </group>
      </if>
    </choose>
  </macro>
  <citation et-al-min=""3"" et-al-use-first=""1"" disambiguate-add-year-suffix=""true"" disambiguate-add-names=""true"" disambiguate-add-givenname=""true"" collapse=""year"">
    <sort>
      <key macro=""author""/>
      <key macro=""issued-sort""/>
    </sort>
    <layout prefix=""("" suffix="")"" delimiter=""; "">
      <group delimiter="", "">
        <text macro=""author-short""/>
        <text macro=""issued-year""/>
        <text macro=""citation-locator""/>
      </group>
    </layout>
  </citation>
  <bibliography entry-spacing=""0"" line-spacing=""2"" hanging-indent=""true"">
    <sort>
      <key macro=""author""/>
      <key macro=""issued-sort"" sort=""ascending""/>
      <key macro=""title""/>
    </sort>
    <layout suffix=""."">
      <group delimiter="". "">
        <group>
          <text macro=""author""/>
          <text macro=""issued"" prefix="" ""/>
          <text macro=""title-plus-extra"" prefix="" ""/>
          <text macro=""container"" prefix="". ""/>
          <text macro=""legal-cites""/>
          <text macro=""locators""/>
        </group>
        <group delimiter="", "">
          <text macro=""event""/>
          <text macro=""publisher""/>
        </group>
      </group>
      <text macro=""access"" prefix="". ""/>
    </layout>
  </bibliography>
</style>
"
ntcHTMEw,YT-DOWNLOAD.py,Najeebsk,Python,Tuesday 27th of February 2024 11:22:06 PM CDT,"'''
Requirements- python 3.8 or above
pip install pyautogui
pip install pytube
pip install colorama
'''
from time import sleep
import pyautogui as pg
from pytube import YouTube
from colorama import Fore

ask='YES'
while ask=='YES':
    ytUrl=pg.prompt('Enter Youtube video URL which you want to download',title='YT URL')
    ytDownLoc=pg.prompt('Where do you want to download this video:',title='FILE LOCATION',default=(r"".\Najeeb_Yt_downloaded_videos"")) ##FILE LOCATION
    setRes=pg.confirm('Set resolution of the video pixels',title='VIDEO RESOLUTION',buttons=['Lowest','Max','Get Audio'])

##main code- 
    yt = YouTube(str(ytUrl))
    print(Fore.RED+""Title: "", Fore.YELLOW+yt.title)
    sleep(2)
    print(Fore.GREEN+""Views: "",Fore.RED+str(yt.views)+Fore.RESET)

    if setRes=='Max':
         yd = yt.streams.get_highest_resolution()
    if setRes=='Lowest':
         yd = yt.streams.get_lowest_resolution()
    if setRes=='Get Audio':
         yd = yt.streams.get_audio_only()

    yd.download(str(ytDownLoc))

    tell=pg.alert('DOWNLOAD DONE',title='DOWNLOAD COMPLETE')
    print('DONE')
    ask=pg.confirm('Want to do again?',title='TRY AGAIN',buttons=[""YES"",""NO""])


"
uK0qgJhq,Untitled,OSCAR30,CSS,Tuesday 27th of February 2024 11:16:57 PM CDT,"body{text-align:center;font-size: 15px;font-weight: bold;font-size: 15px;background-color:#edf4ec}a:link{text-decoration:none}a:link{color:#5a855f}
.textbox{width:95%;height:25px;margin:5px;font-size:medium}
.select{height:25px;margin:5px;font-size:medium}

button{background:url();
border-top:#97c091 solid 2px;
border-bottom:#748f71 solid 2px;
border-left:#97c091 solid 2px;
border-right:#748f71 solid 2px;
background-color:#91B38E;
color:#fff;
margin:4px 3px 4px 3px;
padding:8px 4px 8px 4px;
font-weight:bold;
font-size: 15px;
text-align: right;
text-shadow: 1px 0px 1px #000}



input{ color: #fff; font-weight: bold; background: #91B38E;
border-top:#748f71 solid 2px;
border-bottom:#748f71 solid 2px;
border-left:#748f71 solid 2px;
border-right:#748f71 solid 2px;
padding: 3px; text-align: center; 
font-family: bbc;
margin:2px 1px 2px 1px;
padding:9px 3px 9px 3px;
text-shadow: 1px 0px 1px #000}



.blok{text-align:none;border:1px solid #C5DCC2;background-color:#fff;margin:2px 2px;padding:3px}
.footer{text-align:center;font-size:12px;margin-top:10px;line-height:150%}
.bg1{background-color:#ccc}
.bg2{background-color:#fff}
.bg3{background-color:red;text-align:left}
.bar1{text-align:none;border:1px solid #C5DCC2;background-color:#fff;padding-bottom:0;margin-bottom:5px}
.bar1top{background-color:#C5DCC2;text-align:none;color:#fff;padding-top:3px;padding-bottom:3px}
.bar11{text-align:left;padding:4px;font-weight:700}
.bar12{text-align:left;padding:4px;font-weight:700;background-color:#eee}.bar13{text-align:left;padding:10px}
.bar14{text-align:left;padding:10px;background-color:#eee}
.label{padding-left:3px;font-size:small}
.info{border:1px solid #97c091;padding:2px;background-color:#d4e5d2}
.error{background-color:red;font-weight:700}
.faq_list_block{margin:2px 2px 5px 2px;border:1px solid #00f;padding:2px}
.faq_list_name{border-bottom:1px solid #9cf;padding:1px;text-align:left;background-color:#cdf;font-weight:700}
.faq_list_details{text-align:left;font-size:small;color:#667;padding:4px}
.textarea{background:#fff;width:80%;border:1px solid #0af;margin:2px;height:100px}

.smile{background:#FFF; border:1px solid #91B38E; margin-left:200px; padding:4px 6px 4px 1px; font-weight:bold;font-size: 15px; color:#000;text-align: right;text-shadow: 1px 0px 1px #c5dcc2}"
yVn4RHtz,Untitled,wym1111,C++,Tuesday 27th of February 2024 11:13:40 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
#define endl '\n'
using ll = long long;

const int N = 1e3 + 5;

int n, m;
int a[N][N];
int dis[N][N];
bool vis[N][N];

int dx[2] = {2, 1};
int dy[2] = {0, 1};

struct str {
	int x, y;
	int d;
	bool operator < (const str & tmp) const {
		return d > tmp.d;
	}
};

void bfs () {
	for (int i = 0; i < n; i ++) {
		for (int j = 0; j < m; j ++) {
			dis[i][j] = 1e8;
			vis[i][j] = 0;
		}
	}
	priority_queue<str> q;
	q.push({0, 0, 0});
	dis[0][0] = 0;
	while (!q.empty()) {
		int x = q.top().x, y = q.top().y;
		q.pop();
		if (vis[x][y]) continue;
		vis[x][y] = 1;
//		cout << x << ',' << y << ""	"" << dis[x][y] << endl;
		for (int i = 0; i < 2; i ++) {
			int nx = (x + dx[i]) % n;
			int ny = y + dy[i];
//			cout << nx << ' ' << ny << endl;
			if (vis[nx][ny] || ny >= m || a[nx][ny]) continue;
			if (i == 0 && a[(x + 1) % n][ny]) continue;
			if (dis[x][y] + 1 < dis[nx][ny]) {
				dis[nx][ny] = dis[x][y] + 1;
				q.push({nx, ny, dis[nx][ny]});
			}
		}
	}
}

void solve() {
	cin >> n >> m;
	for (int i = 0; i < n; i ++) {
		for (int j = 0; j < m; j ++) {
			cin >> a[i][j];
		}
	}
	bfs();
	int ans = 1e8;
	for (int i = 0; i < n; i ++) {
		if (dis[i][m - 1] >= ans) continue;
		int tmp = (i + n - dis[i][m - 1] % n) % n;
		ans = min(ans, dis[i][m - 1] + min(n - 1 - tmp, tmp + 1));
//		cout << i << ' ' << dis[i][m - 1] << ""	"" << tmp << endl;
	}
	if (ans == 1e8) cout << -1 << endl;
	else cout << ans << endl;
}

signed main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int _ = 1;
	cin >> _;
	while (_--) {
		solve();
	}
	return 0;
}"
bZiRA9Yd,Words Uppercase,bAngelov,JavaScript,Tuesday 27th of February 2024 11:10:52 PM CDT,"function solve(text){
    let exp = /\w+/gm
    let words = text.match(exp);
    words.forEach(function(element,index){words[index] = words[index].toUpperCase();})
    console.log(words.join(', '))
}"
ynDHDJ6c,atcmd.sh,snowgum,Bash,Tuesday 27th of February 2024 11:05:28 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter
ATCMDD=$1

CURRMODEM=$(uci get modem.general.miscnum)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)

M2=$(echo ""$ATCMDD"" | sed -e ""s#~#\""#g"")
COPS=""+cops=?""
QOPS=""+qops?""
QSCAN=""+qscan=2""
GTACT=""+gtact=?""
M3=$(echo ""$M2"" | awk '{print tolower($0)}')
if `echo ${M3} | grep ""${COPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QOPS}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${QSCAN}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""120""
elif `echo ${M3} | grep ""${GTACT}"" 1>/dev/null 2>&1`; then
	export TIMEOUT=""60""
else
	export TIMEOUT=""5""
fi
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$M2"")
echo ""$OX"" > /tmp/result$CURRMODEM.at
"
suEydbXm,Untitled,soden,JavaScript,Tuesday 27th of February 2024 11:03:56 PM CDT,"function process(callback) {
    console.log('Proses dimulai.');
    callback();
    console.log('Proses selesai.');
}

function callbackFunction() {
    console.log('Callback dieksekusi.');
}

process(callbackFunction);"
KjBaNp9J,Untitled,soden,JavaScript,Tuesday 27th of February 2024 11:02:51 PM CDT,"function getData() {
    return new Promise(function(resolve, reject) {
        setTimeout(function() {
            resolve('Data berhasil diambil');
        }, 2000);
    });
}

async function fetchData() {
    try {
        const message = await getData();
        console.log(message);
    } catch (error) {
        console.error(error);
    }
}

fetchData();"
bBMvPsrn,Untitled,soden,JavaScript,Tuesday 27th of February 2024 11:01:15 PM CDT,"function getData() {
    return new Promise(function(resolve, reject) {
        setTimeout(function() {
            resolve('Data berhasil diambil');
        }, 2000);
    });
}

getData().then(function(message) {
    console.log(message);
}).catch(function(error) {
    console.error(error);
});"
dVLvvLZk,Nigerian scammers [28-2-1/2024],bombaires,AIMMS,Tuesday 27th of February 2024 11:01:13 PM CDT,"<a href=""mailto:jonathanroland327@gmail.com"">jonathanroland327@gmail.com</a>
<a href=""mailto:jo.n.a.t.ha.nro.l.a.n.d.3.2.7@gmail.com"">jo.n.a.t.ha.nro.l.a.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jo.n.a.t.h.a.nr.olan.d327@gmail.com"">jo.n.a.t.h.a.nr.olan.d327@gmail.com</a>
<a href=""mailto:j.o.natha.nro.la.n.d327@gmail.com"">j.o.natha.nro.la.n.d327@gmail.com</a>
<a href=""mailto:j.ona.tha.nr.o.l.a.n.d.3.2.7@gmail.com"">j.ona.tha.nr.o.l.a.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jo.n.atha.n.rolan.d32.7@gmail.com"">jo.n.atha.n.rolan.d32.7@gmail.com</a>
<a href=""mailto:j.ona.t.ha.n.rola.nd.3.2.7@gmail.com"">j.ona.t.ha.n.rola.nd.3.2.7@gmail.com</a>
<a href=""mailto:j.o.nath.a.n.r.o.lan.d.3.2.7@gmail.com"">j.o.nath.a.n.r.o.lan.d.3.2.7@gmail.com</a>
<a href=""mailto:jo.n.at.hanro.la.n.d.32.7@gmail.com"">jo.n.at.hanro.la.n.d.32.7@gmail.com</a>
<a href=""mailto:jonath.an.r.o.l.and.3.27@gmail.com"">jonath.an.r.o.l.and.3.27@gmail.com</a>
<a href=""mailto:j.onat.h.an.r.ol.an.d.3.2.7@gmail.com"">j.onat.h.an.r.ol.an.d.3.2.7@gmail.com</a>
<a href=""mailto:j.o.na.thanrola.n.d.3.2.7@gmail.com"">j.o.na.thanrola.n.d.3.2.7@gmail.com</a>
<a href=""mailto:j.ona.t.h.an.r.ol.a.nd327@gmail.com"">j.ona.t.h.an.r.ol.a.nd327@gmail.com</a>
<a href=""mailto:jo.n.a.th.anrol.a.nd3.27@gmail.com"">jo.n.a.th.anrol.a.nd3.27@gmail.com</a>
<a href=""mailto:jon.at.ha.n.r.ol.a.n.d32.7@gmail.com"">jon.at.ha.n.r.ol.a.n.d32.7@gmail.com</a>
<a href=""mailto:jo.na.t.ha.nro.land.32.7@gmail.com"">jo.na.t.ha.nro.land.32.7@gmail.com</a>
<a href=""mailto:j.o.n.a.t.ha.nr.o.la.nd.32.7@gmail.com"">j.o.n.a.t.ha.nr.o.la.nd.32.7@gmail.com</a>
<a href=""mailto:jo.n.a.tha.nro.la.n.d3.2.7@gmail.com"">jo.n.a.tha.nro.la.n.d3.2.7@gmail.com</a>
<a href=""mailto:jonathan.ro.la.n.d.32.7@gmail.com"">jonathan.ro.la.n.d.32.7@gmail.com</a>
<a href=""mailto:jo.n.atha.n.r.oland.327@gmail.com"">jo.n.atha.n.r.oland.327@gmail.com</a>
<a href=""mailto:jon.at.hanr.ol.a.nd32.7@gmail.com"">jon.at.hanr.ol.a.nd32.7@gmail.com</a>
<a href=""mailto:j.o.n.a.th.an.r.oland.3.27@gmail.com"">j.o.n.a.th.an.r.oland.3.27@gmail.com</a>
<a href=""mailto:j.on.a.tha.nr.o.l.a.nd.32.7@gmail.com"">j.on.a.tha.nr.o.l.a.nd.32.7@gmail.com</a>
<a href=""mailto:j.ona.t.h.an.ro.la.n.d327@gmail.com"">j.ona.t.h.an.ro.la.n.d327@gmail.com</a>
<a href=""mailto:j.o.n.at.h.a.n.ro.la.n.d.327@gmail.com"">j.o.n.at.h.a.n.ro.la.n.d.327@gmail.com</a>
<a href=""mailto:j.o.n.a.t.h.a.n.r.ol.a.nd.3.27@gmail.com"">j.o.n.a.t.h.a.n.r.ol.a.nd.3.27@gmail.com</a>
<a href=""mailto:j.on.a.th.an.r.o.l.an.d.327@gmail.com"">j.on.a.th.an.r.o.l.an.d.327@gmail.com</a>
<a href=""mailto:j.on.a.t.h.anrol.an.d327@gmail.com"">j.on.a.t.h.anrol.an.d327@gmail.com</a>
<a href=""mailto:jona.tha.n.r.o.land.32.7@gmail.com"">jona.tha.n.r.o.land.32.7@gmail.com</a>
<a href=""mailto:jon.athanrolan.d32.7@gmail.com"">jon.athanrolan.d32.7@gmail.com</a>
<a href=""mailto:jo.nath.a.n.rol.and32.7@gmail.com"">jo.nath.a.n.rol.and32.7@gmail.com</a>
<a href=""mailto:j.o.n.ath.anro.l.and32.7@gmail.com"">j.o.n.ath.anro.l.and32.7@gmail.com</a>
<a href=""mailto:jo.nat.hanr.o.la.n.d3.27@gmail.com"">jo.nat.hanr.o.la.n.d3.27@gmail.com</a>
<a href=""mailto:j.on.a.th.anro.la.n.d.3.2.7@gmail.com"">j.on.a.th.anro.la.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jo.n.a.t.h.a.n.rol.an.d.327@gmail.com"">jo.n.a.t.h.a.n.rol.an.d.327@gmail.com</a>
<a href=""mailto:j.on.ath.an.r.o.l.a.n.d3.2.7@gmail.com"">j.on.ath.an.r.o.l.a.n.d3.2.7@gmail.com</a>
<a href=""mailto:jo.na.t.ha.n.r.ola.nd.32.7@gmail.com"">jo.na.t.ha.n.r.ola.nd.32.7@gmail.com</a>
<a href=""mailto:jona.t.han.r.o.l.a.nd32.7@gmail.com"">jona.t.han.r.o.l.a.nd32.7@gmail.com</a>
<a href=""mailto:jo.na.th.a.nr.ola.n.d.3.27@gmail.com"">jo.na.th.a.nr.ola.n.d.3.27@gmail.com</a>
<a href=""mailto:j.on.a.t.h.an.r.o.l.a.n.d.3.2.7@gmail.com"">j.on.a.t.h.an.r.o.l.a.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jona.tha.nrolan.d.3.27@gmail.com"">jona.tha.nrolan.d.3.27@gmail.com</a>
<a href=""mailto:jo.n.a.th.an.ro.l.a.nd3.2.7@gmail.com"">jo.n.a.th.an.ro.l.a.nd3.2.7@gmail.com</a>
<a href=""mailto:jo.nat.ha.nr.olan.d3.27@gmail.com"">jo.nat.ha.nr.olan.d3.27@gmail.com</a>
<a href=""mailto:jon.at.ha.nro.l.a.n.d.327@gmail.com"">jon.at.ha.nro.l.a.n.d.327@gmail.com</a>
<a href=""mailto:jo.na.t.h.a.n.r.o.la.nd.3.2.7@gmail.com"">jo.na.t.h.a.n.r.o.la.nd.3.2.7@gmail.com</a>
<a href=""mailto:j.o.n.a.t.ha.n.r.olan.d.327@gmail.com"">j.o.n.a.t.ha.n.r.olan.d.327@gmail.com</a>
<a href=""mailto:j.on.a.tha.n.r.o.l.a.nd.32.7@gmail.com"">j.on.a.tha.n.r.o.l.a.nd.32.7@gmail.com</a>
<a href=""mailto:jo.n.athanr.ol.and327@gmail.com"">jo.n.athanr.ol.and327@gmail.com</a>
<a href=""mailto:j.onat.h.a.n.r.ol.an.d.3.27@gmail.com"">j.onat.h.a.n.r.ol.an.d.3.27@gmail.com</a>
<a href=""mailto:jo.n.a.tha.n.ro.l.a.nd.32.7@gmail.com"">jo.n.a.tha.n.ro.l.a.nd.32.7@gmail.com</a>
<a href=""mailto:jo.n.ath.a.n.r.o.l.a.n.d.3.27@gmail.com"">jo.n.ath.a.n.r.o.l.a.n.d.3.27@gmail.com</a>
<a href=""mailto:jonathanr.o.lan.d32.7@gmail.com"">jonathanr.o.lan.d32.7@gmail.com</a>
<a href=""mailto:jo.nath.anro.land.32.7@gmail.com"">jo.nath.anro.land.32.7@gmail.com</a>
<a href=""mailto:jona.t.h.a.nrolan.d327@gmail.com"">jona.t.h.a.nrolan.d327@gmail.com</a>
<a href=""mailto:j.onat.hanro.l.and327@gmail.com"">j.onat.hanro.l.and327@gmail.com</a>
<a href=""mailto:jo.n.a.th.a.n.r.o.l.an.d327@gmail.com"">jo.n.a.th.a.n.r.o.l.an.d327@gmail.com</a>
<a href=""mailto:jo.n.at.h.a.nr.o.land32.7@gmail.com"">jo.n.at.h.a.nr.o.land32.7@gmail.com</a>
<a href=""mailto:j.o.n.at.h.a.nr.o.l.and.32.7@gmail.com"">j.o.n.at.h.a.nr.o.l.and.32.7@gmail.com</a>
<a href=""mailto:j.onath.a.n.ro.l.and3.2.7@gmail.com"">j.onath.a.n.ro.l.and3.2.7@gmail.com</a>
<a href=""mailto:j.o.nat.han.r.ol.a.nd.32.7@gmail.com"">j.o.nat.han.r.ol.a.nd.32.7@gmail.com</a>
<a href=""mailto:j.o.nat.h.a.nrola.n.d.32.7@gmail.com"">j.o.nat.h.a.nrola.n.d.32.7@gmail.com</a>
<a href=""mailto:jona.t.h.an.r.ol.a.n.d3.27@gmail.com"">jona.t.h.an.r.ol.a.n.d3.27@gmail.com</a>
<a href=""mailto:jon.ath.an.ro.l.a.n.d3.27@gmail.com"">jon.ath.an.ro.l.a.n.d3.27@gmail.com</a>
<a href=""mailto:jona.tha.nro.l.and.3.2.7@gmail.com"">jona.tha.nro.l.and.3.2.7@gmail.com</a>
<a href=""mailto:jo.n.a.t.han.rola.nd.3.27@gmail.com"">jo.n.a.t.han.rola.nd.3.27@gmail.com</a>
<a href=""mailto:jo.na.th.an.ro.land3.27@gmail.com"">jo.na.th.an.ro.land3.27@gmail.com</a>
<a href=""mailto:jo.nathan.rola.n.d.3.2.7@gmail.com"">jo.nathan.rola.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jon.at.hanrol.a.nd.32.7@gmail.com"">jon.at.hanrol.a.nd.32.7@gmail.com</a>
<a href=""mailto:j.onat.han.r.o.l.and.32.7@gmail.com"">j.onat.han.r.o.l.and.32.7@gmail.com</a>
<a href=""mailto:j.ona.t.ha.n.r.ol.and327@gmail.com"">j.ona.t.ha.n.r.ol.and327@gmail.com</a>
<a href=""mailto:jonat.h.an.r.ol.and32.7@gmail.com"">jonat.h.an.r.ol.and32.7@gmail.com</a>
<a href=""mailto:jo.n.at.ha.n.r.o.la.nd3.2.7@gmail.com"">jo.n.at.ha.n.r.o.la.nd3.2.7@gmail.com</a>
<a href=""mailto:j.o.nath.a.nrolan.d327@gmail.com"">j.o.nath.a.nrolan.d327@gmail.com</a>
<a href=""mailto:jo.n.at.ha.n.r.oland32.7@gmail.com"">jo.n.at.ha.n.r.oland32.7@gmail.com</a>
<a href=""mailto:j.o.n.at.ha.nro.la.nd32.7@gmail.com"">j.o.n.at.ha.nro.la.nd32.7@gmail.com</a>
<a href=""mailto:j.on.at.han.r.o.lan.d327@gmail.com"">j.on.at.han.r.o.lan.d327@gmail.com</a>
<a href=""mailto:j.onathan.r.o.la.nd.327@gmail.com"">j.onathan.r.o.la.nd.327@gmail.com</a>
<a href=""mailto:jo.nat.h.a.nr.o.lan.d.32.7@gmail.com"">jo.nat.h.a.nr.o.lan.d.32.7@gmail.com</a>
<a href=""mailto:jon.a.th.a.n.r.o.l.and32.7@gmail.com"">jon.a.th.a.n.r.o.l.and32.7@gmail.com</a>
<a href=""mailto:jon.at.h.a.nro.la.n.d327@gmail.com"">jon.at.h.a.nro.la.n.d327@gmail.com</a>
<a href=""mailto:j.o.nat.h.an.r.o.land3.2.7@gmail.com"">j.o.nat.h.an.r.o.land3.2.7@gmail.com</a>
<a href=""mailto:jo.na.t.h.an.roland32.7@gmail.com"">jo.na.t.h.an.roland32.7@gmail.com</a>
<a href=""mailto:j.o.n.a.t.ha.nr.o.l.and32.7@gmail.com"">j.o.n.a.t.ha.nr.o.l.and32.7@gmail.com</a>
<a href=""mailto:j.o.na.t.h.an.r.ola.n.d.3.27@gmail.com"">j.o.na.t.h.an.r.ola.n.d.3.27@gmail.com</a>
<a href=""mailto:j.on.at.hanr.ol.a.nd32.7@gmail.com"">j.on.at.hanr.ol.a.nd32.7@gmail.com</a>
<a href=""mailto:jonath.an.rolan.d32.7@gmail.com"">jonath.an.rolan.d32.7@gmail.com</a>
<a href=""mailto:j.on.athanr.ola.n.d327@gmail.com"">j.on.athanr.ola.n.d327@gmail.com</a>
<a href=""mailto:jo.n.athan.r.ol.a.n.d327@gmail.com"">jo.n.athan.r.ol.a.n.d327@gmail.com</a>
<a href=""mailto:j.on.athanr.o.land.327@gmail.com"">j.on.athanr.o.land.327@gmail.com</a>
<a href=""mailto:jonatha.nrol.a.nd3.2.7@gmail.com"">jonatha.nrol.a.nd3.2.7@gmail.com</a>
<a href=""mailto:jon.a.tha.n.r.o.l.an.d3.27@gmail.com"">jon.a.tha.n.r.o.l.an.d3.27@gmail.com</a>
<a href=""mailto:j.o.na.t.ha.n.r.o.la.nd.3.27@gmail.com"">j.o.na.t.ha.n.r.o.la.nd.3.27@gmail.com</a>
<a href=""mailto:jon.a.t.h.an.r.o.land.3.27@gmail.com"">jon.a.t.h.an.r.o.land.3.27@gmail.com</a>
<a href=""mailto:jo.n.a.t.h.a.n.r.olan.d327@gmail.com"">jo.n.a.t.h.a.n.r.olan.d327@gmail.com</a>
<a href=""mailto:j.on.a.thanro.lan.d.3.27@gmail.com"">j.on.a.thanro.lan.d.3.27@gmail.com</a>
<a href=""mailto:j.o.nat.ha.nr.o.l.a.nd32.7@gmail.com"">j.o.nat.ha.nr.o.l.a.nd32.7@gmail.com</a>
<a href=""mailto:j.o.n.atha.nro.l.a.n.d.3.2.7@gmail.com"">j.o.n.atha.nro.l.a.n.d.3.2.7@gmail.com</a>
<a href=""mailto:j.ona.t.h.anr.o.l.and.327@gmail.com"">j.ona.t.h.anr.o.l.and.327@gmail.com</a>
<a href=""mailto:j.o.n.a.t.h.anr.oland.3.2.7@gmail.com"">j.o.n.a.t.h.anr.oland.3.2.7@gmail.com</a>
<a href=""mailto:j.o.na.th.a.nro.l.and327@gmail.com"">j.o.na.th.a.nro.l.and327@gmail.com</a>
<a href=""mailto:j.o.n.a.tha.n.r.ol.and.32.7@gmail.com"">j.o.n.a.tha.n.r.ol.and.32.7@gmail.com</a>
<a href=""mailto:jon.athanrol.a.nd32.7@gmail.com"">jon.athanrol.a.nd32.7@gmail.com</a>
<a href=""mailto:j.on.a.thanrol.a.n.d.3.2.7@gmail.com"">j.on.a.thanrol.a.n.d.3.2.7@gmail.com</a>
<a href=""mailto:jon.a.th.anr.o.l.and327@gmail.com"">jon.a.th.anr.o.l.and327@gmail.com</a>
<a href=""mailto:jo.n.at.hanr.o.la.n.d327@gmail.com"">jo.n.at.hanr.o.la.n.d327@gmail.com</a>
<a href=""mailto:jon.a.thanrola.n.d32.7@gmail.com"">jon.a.thanrola.n.d32.7@gmail.com</a>
<a href=""mailto:jon.a.than.r.ol.a.n.d.327@gmail.com"">jon.a.than.r.ol.a.n.d.327@gmail.com</a>
<a href=""mailto:j.o.na.th.an.rola.nd3.2.7@gmail.com"">j.o.na.th.an.rola.nd3.2.7@gmail.com</a>
<a href=""mailto:jo.n.a.t.han.r.o.la.nd.32.7@gmail.com"">jo.n.a.t.han.r.o.la.nd.32.7@gmail.com</a>
<a href=""mailto:jo.n.ath.anro.la.n.d.32.7@gmail.com"">jo.n.ath.anro.la.n.d.32.7@gmail.com</a>
<a href=""mailto:j.ona.t.hanro.la.n.d3.2.7@gmail.com"">j.ona.t.hanro.la.n.d3.2.7@gmail.com</a>
<a href=""mailto:j.on.a.t.han.ro.land.3.27@gmail.com"">j.on.a.t.han.ro.land.3.27@gmail.com</a>
<a href=""mailto:j.o.nathan.rol.and32.7@gmail.com"">j.o.nathan.rol.and32.7@gmail.com</a>
<a href=""mailto:jonat.h.an.ro.l.and327@gmail.com"">jonat.h.an.ro.l.and327@gmail.com</a>
<a href=""mailto:jo.n.a.t.h.a.n.r.o.l.a.nd.327@gmail.com"">jo.n.a.t.h.a.n.r.o.l.a.nd.327@gmail.com</a>
<a href=""mailto:jon.a.t.h.a.nroland.327@gmail.com"">jon.a.t.h.a.nroland.327@gmail.com</a>
<a href=""mailto:j.on.a.tha.n.rola.n.d3.27@gmail.com"">j.on.a.tha.n.rola.n.d3.27@gmail.com</a>
<a href=""mailto:jo.n.at.h.an.r.oland.32.7@gmail.com"">jo.n.at.h.an.r.oland.32.7@gmail.com</a>
<a href=""mailto:j.o.na.thanrol.a.nd3.27@gmail.com"">j.o.na.thanrol.a.nd3.27@gmail.com</a>
<a href=""mailto:jo.na.th.a.n.roland32.7@gmail.com"">jo.na.th.a.n.roland32.7@gmail.com</a>
<a href=""mailto:j.on.a.t.ha.nr.o.la.nd.32.7@gmail.com"">j.on.a.t.ha.nr.o.la.nd.32.7@gmail.com</a>
<a href=""mailto:jo.n.a.th.an.ro.lan.d3.27@gmail.com"">jo.n.a.th.an.ro.lan.d3.27@gmail.com</a>
<a href=""mailto:jonath.anro.la.n.d327@gmail.com"">jonath.anro.la.n.d327@gmail.com</a>
<a href=""mailto:jona.t.ha.n.r.o.la.nd.32.7@gmail.com"">jona.t.ha.n.r.o.la.nd.32.7@gmail.com</a>
<a href=""mailto:j.ona.th.a.n.rol.a.nd.3.2.7@gmail.com"">j.ona.th.a.n.rol.a.nd.3.2.7@gmail.com</a>
<a href=""mailto:j.o.na.t.ha.nro.l.and3.2.7@gmail.com"">j.o.na.t.ha.nro.l.and3.2.7@gmail.com</a>
<a href=""mailto:jonat.h.a.nrol.a.nd3.27@gmail.com"">jonat.h.a.nrol.a.nd3.27@gmail.com</a>
<a href=""mailto:jo.n.ath.an.rol.a.nd3.2.7@gmail.com"">jo.n.ath.an.rol.a.nd3.2.7@gmail.com</a>
<a href=""mailto:jo.n.ath.an.ro.land3.27@gmail.com"">jo.n.ath.an.ro.land3.27@gmail.com</a>
<a href=""mailto:jo.na.th.a.n.ro.l.and3.2.7@gmail.com"">jo.na.th.a.n.ro.l.and3.2.7@gmail.com</a>
<a href=""mailto:j.ona.th.a.nrola.n.d327@gmail.com"">j.ona.th.a.nrola.n.d327@gmail.com</a>
<a href=""mailto:jon.a.th.anr.olan.d32.7@gmail.com"">jon.a.th.anr.olan.d32.7@gmail.com</a>
<a href=""mailto:j.onat.h.an.r.ola.n.d.327@gmail.com"">j.onat.h.an.r.ola.n.d.327@gmail.com</a>
<a href=""mailto:j.ona.t.h.a.n.ro.la.n.d327@gmail.com"">j.ona.t.h.a.n.ro.la.n.d327@gmail.com</a>
<a href=""mailto:jona.t.h.an.r.ol.a.nd3.2.7@gmail.com"">jona.t.h.an.r.ol.a.nd3.2.7@gmail.com</a>
<a href=""mailto:jo.natha.nro.l.and.3.27@gmail.com"">jo.natha.nro.l.and.3.27@gmail.com</a>
<a href=""mailto:jo.nat.h.anr.o.l.and.32.7@gmail.com"">jo.nat.h.anr.o.l.and.32.7@gmail.com</a>
<a href=""mailto:j.o.n.a.tha.n.ro.la.n.d3.27@gmail.com"">j.o.n.a.tha.n.ro.la.n.d3.27@gmail.com</a>
<a href=""mailto:j.o.na.t.ha.nrolan.d.327@gmail.com"">j.o.na.t.ha.nrolan.d.327@gmail.com</a>
<a href=""mailto:jonat.hanro.lan.d.327@gmail.com"">jonat.hanro.lan.d.327@gmail.com</a>
<a href=""mailto:j.on.at.ha.n.r.ol.a.n.d3.27@gmail.com"">j.on.at.ha.n.r.ol.a.n.d3.27@gmail.com</a>
<a href=""mailto:jo.n.atha.nro.la.n.d3.2.7@gmail.com"">jo.n.atha.nro.la.n.d3.2.7@gmail.com</a>
<a href=""mailto:j.o.n.a.th.a.nro.land3.27@gmail.com"">j.o.n.a.th.a.nro.land3.27@gmail.com</a>
<a href=""mailto:j.ona.th.a.nro.l.a.n.d327@gmail.com"">j.ona.th.a.nro.l.a.n.d327@gmail.com</a>
<a href=""mailto:j.o.nat.h.a.n.rol.an.d3.2.7@gmail.com"">j.o.nat.h.a.n.rol.an.d3.2.7@gmail.com</a>
<a href=""mailto:j.ona.t.hanrol.an.d.3.2.7@gmail.com"">j.ona.t.hanrol.an.d.3.2.7@gmail.com</a>
<a href=""mailto:j.on.athan.rol.a.nd3.27@gmail.com"">j.on.athan.rol.a.nd3.27@gmail.com</a>
<a href=""mailto:j.o.n.a.th.an.r.oland3.27@gmail.com"">j.o.n.a.th.an.r.oland3.27@gmail.com</a>
<a href=""mailto:jo.nathan.rolan.d3.2.7@gmail.com"">jo.nathan.rolan.d3.2.7@gmail.com</a>
<a href=""mailto:jon.a.th.anr.ola.nd.32.7@gmail.com"">jon.a.th.anr.ola.nd.32.7@gmail.com</a>
<a href=""mailto:jon.a.thanr.o.la.n.d.3.2.7@gmail.com"">jon.a.thanr.o.la.n.d.3.2.7@gmail.com</a>
<a href=""mailto:j.on.ath.a.n.ro.lan.d327@gmail.com"">j.on.ath.a.n.ro.lan.d327@gmail.com</a>
<a href=""mailto:jo.na.t.h.an.r.o.l.a.nd3.2.7@gmail.com"">jo.na.t.h.an.r.o.l.a.nd3.2.7@gmail.com</a>
<a href=""mailto:j.o.n.atha.nrola.n.d3.27@gmail.com"">j.o.n.atha.nrola.n.d3.27@gmail.com</a>
<a href=""mailto:j.o.n.at.ha.n.rol.a.nd.3.2.7@gmail.com"">j.o.n.at.ha.n.rol.a.nd.3.2.7@gmail.com</a>
<a href=""mailto:j.onatha.n.rolan.d.32.7@gmail.com"">j.onatha.n.rolan.d.32.7@gmail.com</a>
<a href=""mailto:j.ona.th.a.nrolan.d.32.7@gmail.com"">j.ona.th.a.nrolan.d.32.7@gmail.com</a>
<a href=""mailto:jo.nat.h.a.n.ro.lan.d.3.27@gmail.com"">jo.nat.h.a.n.ro.lan.d.3.27@gmail.com</a>
<a href=""mailto:jo.n.at.han.ro.lan.d.32.7@gmail.com"">jo.n.at.han.ro.lan.d.32.7@gmail.com</a>
<a href=""mailto:jonat.h.anr.ol.an.d327@gmail.com"">jonat.h.anr.ol.an.d327@gmail.com</a>
<a href=""mailto:j.on.a.t.h.a.n.ro.land.3.27@gmail.com"">j.on.a.t.h.a.n.ro.land.3.27@gmail.com</a>
<a href=""mailto:jon.atha.nr.o.land.327@gmail.com"">jon.atha.nr.o.land.327@gmail.com</a>
<a href=""mailto:j.ona.tha.nro.l.and.3.27@gmail.com"">j.ona.tha.nro.l.and.3.27@gmail.com</a>
<a href=""mailto:j.o.nat.han.ro.la.n.d3.2.7@gmail.com"">j.o.nat.han.ro.la.n.d3.2.7@gmail.com</a>
<a href=""mailto:j.o.nathanr.o.land3.2.7@gmail.com"">j.o.nathanr.o.land3.2.7@gmail.com</a>
<a href=""mailto:jo.na.th.a.nro.land.3.27@gmail.com"">jo.na.th.a.nro.land.3.27@gmail.com</a>
<a href=""mailto:j.ona.th.a.n.ro.l.a.n.d.3.27@gmail.com"">j.ona.th.a.n.ro.l.a.n.d.3.27@gmail.com</a>
<a href=""mailto:j.o.n.a.t.h.anr.ola.nd3.2.7@gmail.com"">j.o.n.a.t.h.anr.ola.nd3.2.7@gmail.com</a>
<a href=""mailto:j.on.a.thanrol.a.nd.3.2.7@gmail.com"">j.on.a.thanrol.a.nd.3.2.7@gmail.com</a>
<a href=""mailto:j.on.athanr.o.l.and.3.27@gmail.com"">j.on.athanr.o.l.and.3.27@gmail.com</a>
<a href=""mailto:j.onat.ha.n.r.oland.3.27@gmail.com"">j.onat.ha.n.r.oland.3.27@gmail.com</a>
<a href=""mailto:jona.t.han.r.o.la.nd32.7@gmail.com"">jona.t.han.r.o.la.nd32.7@gmail.com</a>
<a href=""mailto:jona.t.ha.n.rolan.d.3.27@gmail.com"">jona.t.ha.n.rolan.d.3.27@gmail.com</a>
<a href=""mailto:j.on.a.t.h.a.n.rolan.d.32.7@gmail.com"">j.on.a.t.h.a.n.rolan.d.32.7@gmail.com</a>
<a href=""mailto:j.ona.than.rola.n.d32.7@gmail.com"">j.ona.than.rola.n.d32.7@gmail.com</a>
<a href=""mailto:jo.na.t.h.a.n.r.o.land.327@gmail.com"">jo.na.t.h.a.n.r.o.land.327@gmail.com</a>
<a href=""mailto:j.o.nat.h.a.nrol.a.nd.3.27@gmail.com"">j.o.nat.h.a.nrol.a.nd.3.27@gmail.com</a>
<a href=""mailto:j.onath.a.nrola.nd.32.7@gmail.com"">j.onath.a.nrola.nd.32.7@gmail.com</a>
<a href=""mailto:j.o.n.a.thanr.ola.n.d3.27@gmail.com"">j.o.n.a.thanr.ola.n.d3.27@gmail.com</a>
<a href=""mailto:jo.n.a.t.hanrola.nd3.27@gmail.com"">jo.n.a.t.hanrola.nd3.27@gmail.com</a>
<a href=""mailto:j.onathanro.la.n.d32.7@gmail.com"">j.onathanro.la.n.d32.7@gmail.com</a>
<a href=""mailto:jona.than.ro.l.an.d.3.2.7@gmail.com"">jona.than.ro.l.an.d.3.2.7@gmail.com</a>
<a href=""mailto:jon.a.th.anr.o.la.n.d3.27@gmail.com"">jon.a.th.anr.o.la.n.d3.27@gmail.com</a>
<a href=""mailto:j.on.a.t.h.a.nr.o.lan.d32.7@gmail.com"">j.on.a.t.h.a.nr.o.lan.d32.7@gmail.com</a>
<a href=""mailto:jona.t.ha.n.rol.a.n.d.32.7@gmail.com"">jona.t.ha.n.rol.a.n.d.32.7@gmail.com</a>
<a href=""mailto:j.ona.tha.nr.o.lan.d.3.2.7@gmail.com"">j.ona.tha.nr.o.lan.d.3.2.7@gmail.com</a>
<a href=""mailto:jon.a.t.h.an.r.oland3.2.7@gmail.com"">jon.a.t.h.an.r.oland3.2.7@gmail.com</a>
<a href=""mailto:jon.a.thanr.ol.a.n.d327@gmail.com"">jon.a.thanr.ol.a.n.d327@gmail.com</a>
<a href=""mailto:jon.at.han.ro.lan.d327@gmail.com"">jon.at.han.ro.lan.d327@gmail.com</a>
<a href=""mailto:j.o.n.athan.rol.a.n.d.327@gmail.com"">j.o.n.athan.rol.a.n.d.327@gmail.com</a>
<a href=""mailto:jo.n.ath.an.ro.l.and3.2.7@gmail.com"">jo.n.ath.an.ro.l.and3.2.7@gmail.com</a>
<a href=""mailto:j.on.at.h.anrolan.d.3.2.7@gmail.com"">j.on.at.h.anrolan.d.3.2.7@gmail.com</a>
<a href=""mailto:jon.atha.n.r.o.land32.7@gmail.com"">jon.atha.n.r.o.land32.7@gmail.com</a>
<a href=""mailto:jona.th.a.n.r.ol.and.3.27@gmail.com"">jona.th.a.n.r.ol.and.3.27@gmail.com</a>
<a href=""mailto:j.o.na.th.anro.l.and3.27@gmail.com"">j.o.na.th.anro.l.and3.27@gmail.com</a>
<a href=""mailto:j.on.at.h.an.ro.lan.d.3.2.7@gmail.com"">j.on.at.h.an.ro.lan.d.3.2.7@gmail.com</a>
<a href=""mailto:j.o.n.a.t.hanrol.and3.27@gmail.com"">j.o.n.a.t.hanrol.and3.27@gmail.com</a>
<a href=""mailto:jonath.a.n.r.ola.nd32.7@gmail.com"">jonath.a.n.r.ola.nd32.7@gmail.com</a>
<a href=""mailto:jo.n.at.han.r.ola.nd.32.7@gmail.com"">jo.n.at.han.r.ola.nd.32.7@gmail.com</a>
<a href=""mailto:j.on.at.hanr.ol.an.d.327@gmail.com"">j.on.at.hanr.ol.an.d.327@gmail.com</a>
<a href=""mailto:j.o.n.a.th.a.n.r.ol.and.3.2.7@gmail.com"">j.o.n.a.th.a.n.r.ol.and.3.2.7@gmail.com</a>
<a href=""mailto:infocbny1234@gmail.com"">infocbny1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bn.y.1234@gmail.com"">i.n.f.oc.bn.y.1234@gmail.com</a>
<a href=""mailto:info.c.bny.1.2.34@gmail.com"">info.c.bny.1.2.34@gmail.com</a>
<a href=""mailto:i.n.fo.c.bny.1234@gmail.com"">i.n.fo.c.bny.1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bny123.4@gmail.com"">i.n.f.oc.bny123.4@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y12.34@gmail.com"">i.nf.o.cb.n.y12.34@gmail.com</a>
<a href=""mailto:inf.o.c.bn.y.123.4@gmail.com"">inf.o.c.bn.y.123.4@gmail.com</a>
<a href=""mailto:in.focbny123.4@gmail.com"">in.focbny123.4@gmail.com</a>
<a href=""mailto:info.c.b.ny.1234@gmail.com"">info.c.b.ny.1234@gmail.com</a>
<a href=""mailto:in.foc.b.n.y.1.2.34@gmail.com"">in.foc.b.n.y.1.2.34@gmail.com</a>
<a href=""mailto:in.foc.bn.y12.3.4@gmail.com"">in.foc.bn.y12.3.4@gmail.com</a>
<a href=""mailto:infocb.ny12.34@gmail.com"">infocb.ny12.34@gmail.com</a>
<a href=""mailto:info.cb.n.y.1234@gmail.com"">info.cb.n.y.1234@gmail.com</a>
<a href=""mailto:i.nf.o.cbn.y123.4@gmail.com"">i.nf.o.cbn.y123.4@gmail.com</a>
<a href=""mailto:in.fo.cb.ny.1234@gmail.com"">in.fo.cb.ny.1234@gmail.com</a>
<a href=""mailto:in.foc.bny1.2.3.4@gmail.com"">in.foc.bny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfocb.n.y.12.3.4@gmail.com"">i.nfocb.n.y.12.3.4@gmail.com</a>
<a href=""mailto:inf.oc.b.n.y.1.2.3.4@gmail.com"">inf.oc.b.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.f.oc.b.n.y12.34@gmail.com"">i.n.f.oc.b.n.y12.34@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y12.3.4@gmail.com"">i.nf.o.cb.n.y12.3.4@gmail.com</a>
<a href=""mailto:i.nfo.c.bny1.2.3.4@gmail.com"">i.nfo.c.bny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfo.c.b.n.y.1.23.4@gmail.com"">i.nfo.c.b.n.y.1.23.4@gmail.com</a>
<a href=""mailto:i.n.fo.c.b.ny1.234@gmail.com"">i.n.fo.c.b.ny1.234@gmail.com</a>
<a href=""mailto:i.n.focbny12.3.4@gmail.com"">i.n.focbny12.3.4@gmail.com</a>
<a href=""mailto:inf.oc.b.n.y.12.34@gmail.com"">inf.oc.b.n.y.12.34@gmail.com</a>
<a href=""mailto:i.nf.oc.b.ny1234@gmail.com"">i.nf.oc.b.ny1234@gmail.com</a>
<a href=""mailto:inf.o.c.bn.y1.2.3.4@gmail.com"">inf.o.c.bn.y1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfo.cbny.12.34@gmail.com"">i.nfo.cbny.12.34@gmail.com</a>
<a href=""mailto:inf.ocbn.y.12.3.4@gmail.com"">inf.ocbn.y.12.3.4@gmail.com</a>
<a href=""mailto:i.n.fo.c.bny1.2.34@gmail.com"">i.n.fo.c.bny1.2.34@gmail.com</a>
<a href=""mailto:inf.o.c.b.ny.1.234@gmail.com"">inf.o.c.b.ny.1.234@gmail.com</a>
<a href=""mailto:inf.o.c.b.n.y.123.4@gmail.com"">inf.o.c.b.n.y.123.4@gmail.com</a>
<a href=""mailto:i.n.fo.c.bn.y1234@gmail.com"">i.n.fo.c.bn.y1234@gmail.com</a>
<a href=""mailto:in.f.oc.bny.1.2.3.4@gmail.com"">in.f.oc.bny.1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.focbny123.4@gmail.com"">i.n.focbny123.4@gmail.com</a>
<a href=""mailto:i.nf.o.cbny123.4@gmail.com"">i.nf.o.cbny123.4@gmail.com</a>
<a href=""mailto:info.c.bny12.3.4@gmail.com"">info.c.bny12.3.4@gmail.com</a>
<a href=""mailto:infocb.n.y12.34@gmail.com"">infocb.n.y12.34@gmail.com</a>
<a href=""mailto:i.n.fo.c.b.n.y123.4@gmail.com"">i.n.fo.c.b.n.y123.4@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y1.2.34@gmail.com"">i.nf.o.cb.n.y1.2.34@gmail.com</a>
<a href=""mailto:i.n.foc.bn.y1.234@gmail.com"">i.n.foc.bn.y1.234@gmail.com</a>
<a href=""mailto:in.fo.c.bn.y.1234@gmail.com"">in.fo.c.bn.y.1234@gmail.com</a>
<a href=""mailto:i.n.f.ocbny.12.3.4@gmail.com"">i.n.f.ocbny.12.3.4@gmail.com</a>
<a href=""mailto:i.nfocb.ny1.2.3.4@gmail.com"">i.nfocb.ny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nf.oc.bn.y1.234@gmail.com"">i.nf.oc.bn.y1.234@gmail.com</a>
<a href=""mailto:i.nf.ocb.n.y1.2.34@gmail.com"">i.nf.ocb.n.y1.2.34@gmail.com</a>
<a href=""mailto:in.f.o.cb.ny1.2.3.4@gmail.com"">in.f.o.cb.ny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfo.c.bn.y12.34@gmail.com"">i.nfo.c.bn.y12.34@gmail.com</a>
<a href=""mailto:i.n.f.o.cbny.12.34@gmail.com"">i.n.f.o.cbny.12.34@gmail.com</a>
<a href=""mailto:inf.o.cbn.y1234@gmail.com"">inf.o.cbn.y1234@gmail.com</a>
<a href=""mailto:i.n.f.o.c.b.ny1.2.3.4@gmail.com"">i.n.f.o.c.b.ny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nf.ocbn.y.1234@gmail.com"">i.nf.ocbn.y.1234@gmail.com</a>
<a href=""mailto:inf.ocbny1.23.4@gmail.com"">inf.ocbny1.23.4@gmail.com</a>
<a href=""mailto:i.n.fo.cb.n.y.1234@gmail.com"">i.n.fo.cb.n.y.1234@gmail.com</a>
<a href=""mailto:i.n.f.o.c.b.ny.1.23.4@gmail.com"">i.n.f.o.c.b.ny.1.23.4@gmail.com</a>
<a href=""mailto:i.n.focb.n.y123.4@gmail.com"">i.n.focb.n.y123.4@gmail.com</a>
<a href=""mailto:i.n.fo.cbny.1.234@gmail.com"">i.n.fo.cbny.1.234@gmail.com</a>
<a href=""mailto:infoc.bn.y.1.2.3.4@gmail.com"">infoc.bn.y.1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.f.o.c.bny12.34@gmail.com"">i.n.f.o.c.bny12.34@gmail.com</a>
<a href=""mailto:in.focbny.1.2.34@gmail.com"">in.focbny.1.2.34@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y123.4@gmail.com"">i.nf.o.cb.n.y123.4@gmail.com</a>
<a href=""mailto:i.n.fo.c.bny.1.2.34@gmail.com"">i.n.fo.c.bny.1.2.34@gmail.com</a>
<a href=""mailto:i.n.focb.ny12.3.4@gmail.com"">i.n.focb.ny12.3.4@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y1234@gmail.com"">i.nf.o.cb.n.y1234@gmail.com</a>
<a href=""mailto:i.nfocb.ny12.3.4@gmail.com"">i.nfocb.ny12.3.4@gmail.com</a>
<a href=""mailto:infocbn.y12.3.4@gmail.com"">infocbn.y12.3.4@gmail.com</a>
<a href=""mailto:i.n.focbn.y1.2.3.4@gmail.com"">i.n.focbn.y1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfo.cb.ny1.234@gmail.com"">i.nfo.cb.ny1.234@gmail.com</a>
<a href=""mailto:i.n.f.ocbn.y1.2.3.4@gmail.com"">i.n.f.ocbn.y1.2.3.4@gmail.com</a>
<a href=""mailto:in.f.o.cb.n.y.1.2.3.4@gmail.com"">in.f.o.cb.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:infocb.ny1.23.4@gmail.com"">infocb.ny1.23.4@gmail.com</a>
<a href=""mailto:i.n.f.o.cb.ny1.2.3.4@gmail.com"">i.n.f.o.cb.ny1.2.3.4@gmail.com</a>
<a href=""mailto:in.f.o.cb.n.y1.2.34@gmail.com"">in.f.o.cb.n.y1.2.34@gmail.com</a>
<a href=""mailto:i.n.f.oc.bn.y1.2.34@gmail.com"">i.n.f.oc.bn.y1.2.34@gmail.com</a>
<a href=""mailto:i.nf.o.c.b.n.y.1.23.4@gmail.com"">i.nf.o.c.b.n.y.1.23.4@gmail.com</a>
<a href=""mailto:i.nf.oc.bny1.23.4@gmail.com"">i.nf.oc.bny1.23.4@gmail.com</a>
<a href=""mailto:i.n.fo.cbn.y1.23.4@gmail.com"">i.n.fo.cbn.y1.23.4@gmail.com</a>
<a href=""mailto:in.fo.c.b.ny1.234@gmail.com"">in.fo.c.b.ny1.234@gmail.com</a>
<a href=""mailto:i.n.f.ocbn.y1.234@gmail.com"">i.n.f.ocbn.y1.234@gmail.com</a>
<a href=""mailto:inf.o.c.b.n.y1.2.34@gmail.com"">inf.o.c.b.n.y1.2.34@gmail.com</a>
<a href=""mailto:in.f.ocb.ny.123.4@gmail.com"">in.f.ocb.ny.123.4@gmail.com</a>
<a href=""mailto:i.nfoc.b.n.y.12.3.4@gmail.com"">i.nfoc.b.n.y.12.3.4@gmail.com</a>
<a href=""mailto:i.nf.oc.bny1.2.34@gmail.com"">i.nf.oc.bny1.2.34@gmail.com</a>
<a href=""mailto:i.nf.o.cbny.123.4@gmail.com"">i.nf.o.cbny.123.4@gmail.com</a>
<a href=""mailto:i.n.f.o.cbn.y.1234@gmail.com"">i.n.f.o.cbn.y.1234@gmail.com</a>
<a href=""mailto:i.nfocbny.123.4@gmail.com"">i.nfocbny.123.4@gmail.com</a>
<a href=""mailto:info.c.bn.y12.34@gmail.com"">info.c.bn.y12.34@gmail.com</a>
<a href=""mailto:in.focbny.1234@gmail.com"">in.focbny.1234@gmail.com</a>
<a href=""mailto:i.n.f.o.cbn.y1234@gmail.com"">i.n.f.o.cbn.y1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bny.1.2.3.4@gmail.com"">i.n.f.oc.bny.1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfo.c.bn.y12.3.4@gmail.com"">i.nfo.c.bn.y12.3.4@gmail.com</a>
<a href=""mailto:i.n.focb.ny.1.2.34@gmail.com"">i.n.focb.ny.1.2.34@gmail.com</a>
<a href=""mailto:inf.o.cb.ny12.3.4@gmail.com"">inf.o.cb.ny12.3.4@gmail.com</a>
<a href=""mailto:i.n.fo.cb.ny.1.234@gmail.com"">i.n.fo.cb.ny.1.234@gmail.com</a>
<a href=""mailto:i.nf.o.c.b.ny.1.2.3.4@gmail.com"">i.nf.o.c.b.ny.1.2.3.4@gmail.com</a>
<a href=""mailto:in.focbny.12.3.4@gmail.com"">in.focbny.12.3.4@gmail.com</a>
<a href=""mailto:i.nfo.cb.ny.1.234@gmail.com"">i.nfo.cb.ny.1.234@gmail.com</a>
<a href=""mailto:inf.o.cb.ny.12.3.4@gmail.com"">inf.o.cb.ny.12.3.4@gmail.com</a>
<a href=""mailto:in.f.o.c.b.n.y.12.34@gmail.com"">in.f.o.c.b.n.y.12.34@gmail.com</a>
<a href=""mailto:i.n.fo.cbny1.23.4@gmail.com"">i.n.fo.cbny1.23.4@gmail.com</a>
<a href=""mailto:in.f.o.cbny.1.2.34@gmail.com"">in.f.o.cbny.1.2.34@gmail.com</a>
<a href=""mailto:i.nf.oc.b.n.y.123.4@gmail.com"">i.nf.oc.b.n.y.123.4@gmail.com</a>
<a href=""mailto:in.foc.b.ny1.234@gmail.com"">in.foc.b.ny1.234@gmail.com</a>
<a href=""mailto:info.cb.ny1.2.3.4@gmail.com"">info.cb.ny1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfoc.bny1.2.34@gmail.com"">i.nfoc.bny1.2.34@gmail.com</a>
<a href=""mailto:in.fo.cbn.y.1.234@gmail.com"">in.fo.cbn.y.1.234@gmail.com</a>
<a href=""mailto:i.n.fo.c.bny1234@gmail.com"">i.n.fo.c.bny1234@gmail.com</a>
<a href=""mailto:inf.o.cb.n.y.12.3.4@gmail.com"">inf.o.cb.n.y.12.3.4@gmail.com</a>
<a href=""mailto:inf.o.cbn.y.12.3.4@gmail.com"">inf.o.cbn.y.12.3.4@gmail.com</a>
<a href=""mailto:i.n.f.ocbn.y.12.34@gmail.com"">i.n.f.ocbn.y.12.34@gmail.com</a>
<a href=""mailto:i.n.f.ocb.n.y.123.4@gmail.com"">i.n.f.ocb.n.y.123.4@gmail.com</a>
<a href=""mailto:i.nf.oc.bny12.3.4@gmail.com"">i.nf.oc.bny12.3.4@gmail.com</a>
<a href=""mailto:i.n.fo.cb.ny.12.3.4@gmail.com"">i.n.fo.cb.ny.12.3.4@gmail.com</a>
<a href=""mailto:i.nf.o.cb.n.y1.23.4@gmail.com"">i.nf.o.cb.n.y1.23.4@gmail.com</a>
<a href=""mailto:i.n.foc.bn.y.1.234@gmail.com"">i.n.foc.bn.y.1.234@gmail.com</a>
<a href=""mailto:infoc.b.ny1234@gmail.com"">infoc.b.ny1234@gmail.com</a>
<a href=""mailto:in.f.ocbny.1.2.34@gmail.com"">in.f.ocbny.1.2.34@gmail.com</a>
<a href=""mailto:in.fo.c.bny1.234@gmail.com"">in.fo.c.bny1.234@gmail.com</a>
<a href=""mailto:i.nf.ocbn.y1234@gmail.com"">i.nf.ocbn.y1234@gmail.com</a>
<a href=""mailto:infoc.b.ny12.3.4@gmail.com"">infoc.b.ny12.3.4@gmail.com</a>
<a href=""mailto:i.nfo.cbny.123.4@gmail.com"">i.nfo.cbny.123.4@gmail.com</a>
<a href=""mailto:in.f.o.cb.n.y123.4@gmail.com"">in.f.o.cb.n.y123.4@gmail.com</a>
<a href=""mailto:in.fo.cbn.y1.2.3.4@gmail.com"">in.fo.cbn.y1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.focbn.y12.3.4@gmail.com"">i.n.focbn.y12.3.4@gmail.com</a>
<a href=""mailto:i.n.f.oc.b.ny1.2.34@gmail.com"">i.n.f.oc.b.ny1.2.34@gmail.com</a>
<a href=""mailto:i.n.f.o.c.b.n.y.12.34@gmail.com"">i.n.f.o.c.b.n.y.12.34@gmail.com</a>
<a href=""mailto:in.focbny1.23.4@gmail.com"">in.focbny1.23.4@gmail.com</a>
<a href=""mailto:i.nf.ocb.ny.1234@gmail.com"">i.nf.ocb.ny.1234@gmail.com</a>
<a href=""mailto:i.nfoc.bn.y1.2.3.4@gmail.com"">i.nfoc.bn.y1.2.3.4@gmail.com</a>
<a href=""mailto:infocb.ny.1.234@gmail.com"">infocb.ny.1.234@gmail.com</a>
<a href=""mailto:inf.o.cb.ny1.234@gmail.com"">inf.o.cb.ny1.234@gmail.com</a>
<a href=""mailto:in.f.o.cb.n.y1.23.4@gmail.com"">in.f.o.cb.n.y1.23.4@gmail.com</a>
<a href=""mailto:i.n.focbn.y.12.3.4@gmail.com"">i.n.focbn.y.12.3.4@gmail.com</a>
<a href=""mailto:i.nf.o.c.b.n.y1.23.4@gmail.com"">i.nf.o.c.b.n.y1.23.4@gmail.com</a>
<a href=""mailto:in.focb.ny1234@gmail.com"">in.focb.ny1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bny12.34@gmail.com"">i.n.f.oc.bny12.34@gmail.com</a>
<a href=""mailto:info.c.bny.1.23.4@gmail.com"">info.c.bny.1.23.4@gmail.com</a>
<a href=""mailto:i.nf.oc.bn.y.1.2.34@gmail.com"">i.nf.oc.bn.y.1.2.34@gmail.com</a>
<a href=""mailto:i.n.foc.b.n.y1.23.4@gmail.com"">i.n.foc.b.n.y1.23.4@gmail.com</a>
<a href=""mailto:i.n.foc.bn.y12.3.4@gmail.com"">i.n.foc.bn.y12.3.4@gmail.com</a>
<a href=""mailto:info.c.bny.1.234@gmail.com"">info.c.bny.1.234@gmail.com</a>
<a href=""mailto:in.f.o.c.bn.y1.23.4@gmail.com"">in.f.o.c.bn.y1.23.4@gmail.com</a>
<a href=""mailto:i.nf.oc.b.n.y.1.234@gmail.com"">i.nf.oc.b.n.y.1.234@gmail.com</a>
<a href=""mailto:inf.o.cb.n.y.1.2.34@gmail.com"">inf.o.cb.n.y.1.2.34@gmail.com</a>
<a href=""mailto:i.n.fo.c.bn.y12.34@gmail.com"">i.n.fo.c.bn.y12.34@gmail.com</a>
<a href=""mailto:i.nfo.c.b.ny1.2.3.4@gmail.com"">i.nfo.c.b.ny1.2.3.4@gmail.com</a>
<a href=""mailto:infoc.bny.1234@gmail.com"">infoc.bny.1234@gmail.com</a>
<a href=""mailto:i.nf.o.cb.ny.1.234@gmail.com"">i.nf.o.cb.ny.1.234@gmail.com</a>
<a href=""mailto:i.nf.o.c.b.n.y.1.2.3.4@gmail.com"">i.nf.o.c.b.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.f.oc.b.ny.12.3.4@gmail.com"">i.n.f.oc.b.ny.12.3.4@gmail.com</a>
<a href=""mailto:inf.o.c.bny.1234@gmail.com"">inf.o.c.bny.1234@gmail.com</a>
<a href=""mailto:i.n.foc.bny.123.4@gmail.com"">i.n.foc.bny.123.4@gmail.com</a>
<a href=""mailto:i.n.foc.b.n.y.1.2.3.4@gmail.com"">i.n.foc.b.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:in.fo.cbn.y.1.2.3.4@gmail.com"">in.fo.cbn.y.1.2.3.4@gmail.com</a>
<a href=""mailto:in.f.o.cbny.1.234@gmail.com"">in.f.o.cbny.1.234@gmail.com</a>
<a href=""mailto:i.n.f.ocb.n.y.12.34@gmail.com"">i.n.f.ocb.n.y.12.34@gmail.com</a>
<a href=""mailto:in.fo.c.bny1.23.4@gmail.com"">in.fo.c.bny1.23.4@gmail.com</a>
<a href=""mailto:in.foc.b.n.y.1.23.4@gmail.com"">in.foc.b.n.y.1.23.4@gmail.com</a>
<a href=""mailto:infoc.bn.y.1234@gmail.com"">infoc.bn.y.1234@gmail.com</a>
<a href=""mailto:infocb.ny1.2.34@gmail.com"">infocb.ny1.2.34@gmail.com</a>
<a href=""mailto:inf.o.cb.n.y.1.2.3.4@gmail.com"">inf.o.cb.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:i.n.f.ocb.ny123.4@gmail.com"">i.n.f.ocb.ny123.4@gmail.com</a>
<a href=""mailto:in.fo.c.bn.y.1.234@gmail.com"">in.fo.c.bn.y.1.234@gmail.com</a>
<a href=""mailto:in.f.ocbn.y1.23.4@gmail.com"">in.f.ocbn.y1.23.4@gmail.com</a>
<a href=""mailto:info.c.bn.y.12.3.4@gmail.com"">info.c.bn.y.12.3.4@gmail.com</a>
<a href=""mailto:i.n.f.o.cbn.y.123.4@gmail.com"">i.n.f.o.cbn.y.123.4@gmail.com</a>
<a href=""mailto:in.focbn.y.1234@gmail.com"">in.focbn.y.1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bny.12.3.4@gmail.com"">i.n.f.oc.bny.12.3.4@gmail.com</a>
<a href=""mailto:i.nfo.c.b.ny1.23.4@gmail.com"">i.nfo.c.b.ny1.23.4@gmail.com</a>
<a href=""mailto:i.n.f.ocbn.y1.2.34@gmail.com"">i.n.f.ocbn.y1.2.34@gmail.com</a>
<a href=""mailto:inf.o.c.bn.y12.34@gmail.com"">inf.o.c.bn.y12.34@gmail.com</a>
<a href=""mailto:i.nfo.cb.n.y.12.34@gmail.com"">i.nfo.cb.n.y.12.34@gmail.com</a>
<a href=""mailto:infocbn.y.123.4@gmail.com"">infocbn.y.123.4@gmail.com</a>
<a href=""mailto:inf.o.cbn.y.1.2.3.4@gmail.com"">inf.o.cbn.y.1.2.3.4@gmail.com</a>
<a href=""mailto:i.nfoc.b.ny1234@gmail.com"">i.nfoc.b.ny1234@gmail.com</a>
<a href=""mailto:i.n.fo.c.bn.y123.4@gmail.com"">i.n.fo.c.bn.y123.4@gmail.com</a>
<a href=""mailto:i.nfo.cb.ny1.23.4@gmail.com"">i.nfo.cb.ny1.23.4@gmail.com</a>
<a href=""mailto:i.n.f.oc.bn.y1234@gmail.com"">i.n.f.oc.bn.y1234@gmail.com</a>
<a href=""mailto:i.n.foc.bny1.2.34@gmail.com"">i.n.foc.bny1.2.34@gmail.com</a>
<a href=""mailto:i.nfoc.b.n.y.1.2.3.4@gmail.com"">i.nfoc.b.n.y.1.2.3.4@gmail.com</a>
<a href=""mailto:in.f.o.cb.ny1234@gmail.com"">in.f.o.cb.ny1234@gmail.com</a>
<a href=""mailto:i.n.f.oc.bn.y1.234@gmail.com"">i.n.f.oc.bn.y1.234@gmail.com</a>
<a href=""mailto:i.nfocb.ny.1234@gmail.com"">i.nfocb.ny.1234@gmail.com</a>
<a href=""mailto:i.n.f.o.cb.ny.1.2.34@gmail.com"">i.n.f.o.cb.ny.1.2.34@gmail.com</a>
<a href=""mailto:in.fo.cb.n.y1.23.4@gmail.com"">in.fo.cb.n.y1.23.4@gmail.com</a>
<a href=""mailto:in.fo.cb.n.y.123.4@gmail.com"">in.fo.cb.n.y.123.4@gmail.com</a>
<a href=""mailto:in.fo.cbny.1234@gmail.com"">in.fo.cbny.1234@gmail.com</a>
<a href=""mailto:i.n.focbn.y.1.234@gmail.com"">i.n.focbn.y.1.234@gmail.com</a>
<a href=""mailto:in.f.o.c.b.ny.1.234@gmail.com"">in.f.o.c.b.ny.1.234@gmail.com</a>
<a href=""mailto:in.f.o.c.b.ny.1.2.34@gmail.com"">in.f.o.c.b.ny.1.2.34@gmail.com</a>
<a href=""mailto:info.cbny1234@gmail.com"">info.cbny1234@gmail.com</a>
<a href=""mailto:in.f.oc.bny123.4@gmail.com"">in.f.oc.bny123.4@gmail.com</a>
<a href=""mailto:info.cbn.y1234@gmail.com"">info.cbn.y1234@gmail.com</a>
<a href=""mailto:i.n.foc.b.n.y.12.3.4@gmail.com"">i.n.foc.b.n.y.12.3.4@gmail.com</a>
<a href=""mailto:i.n.foc.bny.12.34@gmail.com"">i.n.foc.bny.12.34@gmail.com</a>
<a href=""mailto:i.n.f.o.c.bny.123.4@gmail.com"">i.n.f.o.c.bny.123.4@gmail.com</a>
<a href=""mailto:in.f.o.cb.ny.12.34@gmail.com"">in.f.o.cb.ny.12.34@gmail.com</a>
<a href=""mailto:i.nfocbn.y123.4@gmail.com"">i.nfocbn.y123.4@gmail.com</a>
<a href=""mailto:i.n.f.o.c.bny1.234@gmail.com"">i.n.f.o.c.bny1.234@gmail.com</a>
<a href=""mailto:i.nf.oc.b.ny.1.2.3.4@gmail.com"">i.nf.oc.b.ny.1.2.3.4@gmail.com</a>
<a href=""mailto:i.nf.ocb.n.y123.4@gmail.com"">i.nf.ocb.n.y123.4@gmail.com</a>"
hiF0Rbu9,Untitled,soden,JavaScript,Tuesday 27th of February 2024 11:00:26 PM CDT,"function getData(callback) {
    setTimeout(function() {
        callback('Data berhasil diambil');
    }, 2000);
}

function processData(message) {
    console.log(message);
}

getData(processData);"
nRCt8B4c,Review Pastes.io,xxsa,PHP,Tuesday 27th of February 2024 10:54:36 PM CDT,https://pastes.io/?red=pastebin
g6W1c4Sv,gui,Richyrich457,Lua,Tuesday 27th of February 2024 08:50:37 PM CDT,"local library = {
	flags = {}, 
	items = {}
}

local runservice = game:GetService(""RunService"")
local uis = game:GetService(""UserInputService"")
local tweenservice = game:GetService(""TweenService"")
local textservice = game:GetService(""TextService"")
local coregui = game:GetService(""CoreGui"")
local httpservice = game:GetService(""HttpService"")

local mouse = game:GetService(""Players"").LocalPlayer:GetMouse()

library.theme = {
	fontsize = 17, 
	titlesize = 18, 
	font = Enum.Font.Code, 
	background = ""rbxassetid://0"", 
	tilesize = 90, 
	cursor = false, 
	cursorimg = ""https://t0.rbxcdn.com/42f66da98c40252ee151326a82aab51f"", 
	backgroundcolor = Color3.fromRGB(20, 20, 20), 
	tabstextcolor = Color3.fromRGB(168, 122, 207), 
	bordercolor = Color3.fromRGB(75, 207, 255), 
	accentcolor = Color3.fromRGB(168, 122, 207), 
	accentcolor2 = Color3.fromRGB(88, 65, 108), 
	outlinecolor = Color3.fromRGB(20, 20, 20), 
	outlinecolor2 = Color3.fromRGB(30, 30, 30), 
	sectorcolor = Color3.fromRGB(30, 30, 30), 
	toptextcolor = Color3.fromRGB(255, 255, 255), 
	topheight = 48, 
	topcolor = Color3.fromRGB(30, 30, 30), 
	topcolor2 = Color3.fromRGB(12, 12, 12), 
	buttoncolor = Color3.fromRGB(49, 49, 49), 
	buttoncolor2 = Color3.fromRGB(29, 29, 29), 
	itemscolor = Color3.fromRGB(170, 170, 170), 
	itemscolor2 = Color3.fromRGB(255, 255, 255)
}

getgenv().Actyrn7104 = ""Discord: awawglocko, Server: .gg/V82nqY9CUP""

if library.theme.cursor then
	local success = pcall(function()
		library.cursor = Drawing.new(""Image"")
		library.cursor.Data = game:HttpGet(library.theme.cursorimg)
		library.cursor.Size = Vector2.new(64, 64)
		library.cursor.Visible = uis.MouseEnabled
		library.cursor.Rounding = 0
		library.cursor.Position = Vector2.new(mouse.X - 32, mouse.Y + 6)
	end)

	if success and library.cursor then
		uis.InputChanged:Connect(function(input)
			if uis.MouseEnabled and input.UserInputType == Enum.UserInputType.MouseMovement then
				library.cursor.Position = Vector2.new(input.Position.X - 32, input.Position.Y + 7)
			end
		end)

		runservice.RenderStepped:Connect(function()
			uis.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.ForceHide
			library.cursor.Visible = uis.MouseEnabled and (uis.MouseIconEnabled or game:GetService(""GuiService"").MenuIsOpen)
		end)

	elseif not success and library.cursor then
		library.cursor:Remove()
	end
end

function library:CreateWindow(name, size, hidebutton)
	local window = {}
	window.name = name or """"
	window.size = UDim2.fromOffset(size.X, size.Y) or UDim2.fromOffset(500, 600)
	window.hidebutton = hidebutton or Enum.KeyCode.RightShift
	window.theme = library.theme

	local updateevent = Instance.new(""BindableEvent"")
	function window:UpdateTheme(theme)
		updateevent:Fire(theme or library.theme)
		window.theme = (theme or library.theme)
	end

	window.Main = Instance.new(""ScreenGui"", coregui)
	window.Main.Name = name
	window.Main.DisplayOrder = 15

	if syn then
		syn.protect_gui(window.Main)
	end

	local dragging, draginput2, dragstart2, startpos
	uis.InputChanged:Connect(function(input)
		if input == draginput2 and dragging then
			local delta = input.Position - dragstart2
			window.Frame.Position = UDim2.new(startpos.X.Scale, startpos.X.Offset + delta.X, startpos.Y.Scale, startpos.Y.Offset + delta.Y)
		end
	end)

	local dragstart = function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragstart2 = input.Position
			startpos = window.Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end

	local dragend = function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			draginput2 = input
		end
	end

	window.Frame = Instance.new(""TextButton"", window.Main)
	window.Frame.Name = ""main""
	window.Frame.Position = UDim2.fromScale(0.5, 0.5)
	window.Frame.BorderSizePixel = 0
	window.Frame.Size = window.size
	window.Frame.AutoButtonColor = false
	window.Frame.Text = """"
	window.Frame.BackgroundColor3 = window.theme.backgroundcolor
	window.Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	updateevent.Event:Connect(function(theme)
		window.Frame.BackgroundColor3 = theme.backgroundcolor
	end)

	uis.InputBegan:Connect(function(key)
		if key.KeyCode == window.hidebutton then
			window.Frame.Visible = not window.Frame.Visible
		end
	end)

	local function checkIfGuiInFront(Pos)
		local objects = coregui:GetGuiObjectsAtPosition(Pos.X, Pos.Y)
		for i, v in pairs(objects) do
			if not string.find(v:GetFullName(), window.name) then
				table.remove(objects, i)
			end
		end

		return (#objects ~= 0 and objects[1].AbsolutePosition ~= Pos)
	end

	window.BlackOutline = Instance.new(""Frame"", window.Frame)
	window.BlackOutline.Name = ""outline""
	window.BlackOutline.ZIndex = 1
	window.BlackOutline.Size = window.size + UDim2.fromOffset(2, 2)
	window.BlackOutline.BorderSizePixel = 0
	window.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
	updateevent.Event:Connect(function(theme)
		window.BlackOutline.BackgroundColor3 = theme.outlinecolor2
	end)

	window.Outline = Instance.new(""Frame"", window.Frame)
	window.Outline.Name = ""outline""
	window.Outline.ZIndex = 0
	window.Outline.Size = window.size + UDim2.fromOffset(4, 4)
	window.Outline.BorderSizePixel = 0
	window.Outline.BackgroundColor3 = window.theme.outlinecolor
	window.Outline.Position = UDim2.fromOffset(- 2, - 2)
	updateevent.Event:Connect(function(theme)
		window.Outline.BackgroundColor3 = theme.outlinecolor
	end)

	window.BlackOutline2 = Instance.new(""Frame"", window.Frame)
	window.BlackOutline2.Name = ""outline""
	window.BlackOutline2.ZIndex = - 1
	window.BlackOutline2.Size = window.size + UDim2.fromOffset(6, 6)
	window.BlackOutline2.BorderSizePixel = 0
	window.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
	updateevent.Event:Connect(function(theme)
		window.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
	end)

	window.TopBar = Instance.new(""Frame"", window.Frame)
	window.TopBar.Name = ""top""
	window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, window.theme.topheight)
	window.TopBar.BorderSizePixel = 0
	window.TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.TopBar.InputBegan:Connect(dragstart)
	window.TopBar.InputChanged:Connect(dragend)
	updateevent.Event:Connect(function(theme)
		window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, theme.topheight)
	end)

	window.TopGradient = Instance.new(""UIGradient"", window.TopBar)
	window.TopGradient.Rotation = 90
	window.TopGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.topcolor), ColorSequenceKeypoint.new(1, window.theme.topcolor2)})
	updateevent.Event:Connect(function(theme)
		window.TopGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.topcolor), ColorSequenceKeypoint.new(1, theme.topcolor2)})
	end)

	window.NameLabel = Instance.new(""TextLabel"", window.TopBar)
	window.NameLabel.TextColor3 = window.theme.toptextcolor
	window.NameLabel.Text = window.name
	window.NameLabel.TextXAlignment = Enum.TextXAlignment.Left
	window.NameLabel.Font = window.theme.font
	window.NameLabel.Name = ""title""
	window.NameLabel.Position = UDim2.fromOffset(4, - 2)
	window.NameLabel.BackgroundTransparency = 1
	window.NameLabel.Size = UDim2.fromOffset(190, window.TopBar.AbsoluteSize.Y / 2 - 2)
	window.NameLabel.TextSize = window.theme.titlesize
	updateevent.Event:Connect(function(theme)
		window.NameLabel.TextColor3 = theme.toptextcolor
		window.NameLabel.Font = theme.font
		window.NameLabel.TextSize = theme.titlesize
	end)

	window.Line2 = Instance.new(""Frame"", window.TopBar)
	window.Line2.Name = ""line""
	window.Line2.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2.1)
	window.Line2.Size = UDim2.fromOffset(window.size.X.Offset, 1)
	window.Line2.BorderSizePixel = 0
	window.Line2.BackgroundColor3 = window.theme.accentcolor
	updateevent.Event:Connect(function(theme)
		window.Line2.BackgroundColor3 = theme.accentcolor
	end)

	window.TabList = Instance.new(""Frame"", window.TopBar)
	window.TabList.Name = ""tablist""
	window.TabList.BackgroundTransparency = 1
	window.TabList.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2 + 1)
	window.TabList.Size = UDim2.fromOffset(window.size.X.Offset, window.TopBar.AbsoluteSize.Y / 2)
	window.TabList.BorderSizePixel = 0
	window.TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

	window.TabList.InputBegan:Connect(dragstart)
	window.TabList.InputChanged:Connect(dragend)

	window.BlackLine = Instance.new(""Frame"", window.Frame)
	window.BlackLine.Name = ""blackline""
	window.BlackLine.Size = UDim2.fromOffset(window.size.X.Offset, 1)
	window.BlackLine.BorderSizePixel = 0
	window.BlackLine.ZIndex = 9
	window.BlackLine.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackLine.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y)
	updateevent.Event:Connect(function(theme)
		window.BlackLine.BackgroundColor3 = theme.outlinecolor2
	end)

	window.BackgroundImage = Instance.new(""ImageLabel"", window.Frame)
	window.BackgroundImage.Name = ""background""
	window.BackgroundImage.BorderSizePixel = 0
	window.BackgroundImage.ScaleType = Enum.ScaleType.Tile
	window.BackgroundImage.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)
	window.BackgroundImage.Size = UDim2.fromOffset(window.size.X.Offset, window.size.Y.Offset - window.TopBar.AbsoluteSize.Y - 1)
	window.BackgroundImage.Image = window.theme.background or """"
	window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= """" and 0 or 1
	window.BackgroundImage.ImageColor3 = Color3.new()
	window.BackgroundImage.BackgroundColor3 = window.theme.backgroundcolor
	window.BackgroundImage.TileSize = UDim2.new(0, window.theme.tilesize, 0, window.theme.tilesize)
	updateevent.Event:Connect(function(theme)
		window.BackgroundImage.Image = theme.background or """"
		window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= """" and 0 or 1
		window.BackgroundImage.BackgroundColor3 = theme.backgroundcolor
		window.BackgroundImage.TileSize = UDim2.new(0, theme.tilesize, 0, theme.tilesize)
	end)

	window.Line = Instance.new(""Frame"", window.Frame)
	window.Line.Name = ""line""
	window.Line.Position = UDim2.fromOffset(0, 0)
	window.Line.Size = UDim2.fromOffset(60, 1)
	window.Line.BorderSizePixel = 0
	window.Line.BackgroundColor3 = window.theme.accentcolor
	updateevent.Event:Connect(function(theme)
		window.Line.BackgroundColor3 = theme.accentcolor
	end)

	window.ListLayout = Instance.new(""UIListLayout"", window.TabList)
	window.ListLayout.FillDirection = Enum.FillDirection.Horizontal
	window.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	window.OpenedColorPickers = {}
	window.Tabs = {}

	function window:CreateTab(name)
		local tab = {}
		tab.name = name or """"

		local size = textservice:GetTextSize(tab.name, window.theme.fontsize, window.theme.font, Vector2.new(200, 300))

		tab.TabButton = Instance.new(""TextButton"", window.TabList)
		tab.TabButton.TextColor3 = window.theme.tabstextcolor
		tab.TabButton.Text = tab.name
		tab.TabButton.AutoButtonColor = false
		tab.TabButton.Font = window.theme.font
		tab.TabButton.TextYAlignment = Enum.TextYAlignment.Center
		tab.TabButton.BackgroundTransparency = 1
		tab.TabButton.BorderSizePixel = 0
		tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
		tab.TabButton.Name = tab.name
		tab.TabButton.TextSize = window.theme.fontsize
		updateevent.Event:Connect(function(theme)
			local size = textservice:GetTextSize(tab.name, theme.fontsize, theme.font, Vector2.new(200, 300))
			tab.TabButton.TextColor3 = tab.TabButton.Name == ""SelectedTab"" and theme.accentcolor or theme.tabstextcolor
			tab.TabButton.Font = theme.font
			tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
			tab.TabButton.TextSize = theme.fontsize
		end)

		tab.Left = Instance.new(""ScrollingFrame"", window.Frame)
		tab.Left.Name = ""leftside""
		tab.Left.BorderSizePixel = 0
		tab.Left.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
		tab.Left.BackgroundTransparency = 1
		tab.Left.Visible = false
		tab.Left.ScrollBarThickness = 0
		tab.Left.ScrollingDirection = ""Y""
		tab.Left.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)

		tab.LeftListLayout = Instance.new(""UIListLayout"", tab.Left)
		tab.LeftListLayout.FillDirection = Enum.FillDirection.Vertical
		tab.LeftListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		tab.LeftListLayout.Padding = UDim.new(0, 12)

		tab.LeftListPadding = Instance.new(""UIPadding"", tab.Left)
		tab.LeftListPadding.PaddingTop = UDim.new(0, 12)
		tab.LeftListPadding.PaddingLeft = UDim.new(0, 12)
		tab.LeftListPadding.PaddingRight = UDim.new(0, 12)

		tab.Right = Instance.new(""ScrollingFrame"", window.Frame)
		tab.Right.Name = ""rightside""
		tab.Right.ScrollBarThickness = 0
		tab.Right.ScrollingDirection = ""Y""
		tab.Right.Visible = false
		tab.Right.BorderSizePixel = 0
		tab.Right.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
		tab.Right.BackgroundTransparency = 1
		tab.Right.Position = tab.Left.Position + UDim2.fromOffset(tab.Left.AbsoluteSize.X, 0)

		tab.RightListLayout = Instance.new(""UIListLayout"", tab.Right)
		tab.RightListLayout.FillDirection = Enum.FillDirection.Vertical
		tab.RightListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		tab.RightListLayout.Padding = UDim.new(0, 12)

		tab.RightListPadding = Instance.new(""UIPadding"", tab.Right)
		tab.RightListPadding.PaddingTop = UDim.new(0, 12)
		tab.RightListPadding.PaddingLeft = UDim.new(0, 6)
		tab.RightListPadding.PaddingRight = UDim.new(0, 12)

		local block = false
		function tab:SelectTab()
			repeat wait() until not block

			block = true
			for i, v in pairs(window.Tabs) do
				if v ~= tab then
					v.TabButton.TextColor3 = Color3.fromRGB(230, 230, 230)
					v.TabButton.Name = ""Tab""
					v.Left.Visible = false
					v.Right.Visible = false
				end
			end

			tab.TabButton.TextColor3 = window.theme.accentcolor
			tab.TabButton.Name = ""SelectedTab""
			tab.Right.Visible = true
			tab.Left.Visible = true
			window.Line:TweenSizeAndPosition(UDim2.fromOffset(size.X + 15, 1), UDim2.new(0, (tab.TabButton.AbsolutePosition.X - window.Frame.AbsolutePosition.X), 0, 0) + (window.BlackLine.Position - UDim2.fromOffset(0, 1)), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15)
			wait(0.2)
			block = false
		end

		if #window.Tabs == 0 then
			tab:SelectTab()
		end

		tab.TabButton.MouseButton1Down:Connect(function()
			tab:SelectTab()
		end)

		tab.SectorsLeft = {}
		tab.SectorsRight = {}

		function tab:CreateSector(name, side)
			local sector = {}
			sector.name = name or """"
			sector.side = side:lower() or ""left""

			sector.Main = Instance.new(""Frame"", sector.side == ""left"" and tab.Left or tab.Right)
			sector.Main.Name = sector.name:gsub("" "", """") .. ""Sector""
			sector.Main.BorderSizePixel = 0
			sector.Main.ZIndex = 4
			sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, 20)
			sector.Main.BackgroundColor3 = window.theme.sectorcolor
			updateevent.Event:Connect(function(theme)
				sector.Main.BackgroundColor3 = theme.sectorcolor
			end)

			sector.Line = Instance.new(""Frame"", sector.Main)
			sector.Line.Name = ""line""
			sector.Line.ZIndex = 4
			sector.Line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset + 4, 1)
			sector.Line.BorderSizePixel = 0
			sector.Line.Position = UDim2.fromOffset(- 2, - 2)
			sector.Line.BackgroundColor3 = window.theme.accentcolor
			updateevent.Event:Connect(function(theme)
				sector.Line.BackgroundColor3 = theme.accentcolor
			end)

			sector.BlackOutline = Instance.new(""Frame"", sector.Main)
			sector.BlackOutline.Name = ""outline""
			sector.BlackOutline.ZIndex = 3
			sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
			sector.BlackOutline.BorderSizePixel = 0
			sector.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
			sector.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
			end)
			updateevent.Event:Connect(function(theme)
				sector.BlackOutline.BackgroundColor3 = theme.outlinecolor2
			end)


			sector.Outline = Instance.new(""Frame"", sector.Main)
			sector.Outline.Name = ""outline""
			sector.Outline.ZIndex = 2
			sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
			sector.Outline.BorderSizePixel = 0
			sector.Outline.BackgroundColor3 = window.theme.outlinecolor
			sector.Outline.Position = UDim2.fromOffset(- 2, - 2)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
			end)
			updateevent.Event:Connect(function(theme)
				sector.Outline.BackgroundColor3 = theme.outlinecolor
			end)

			sector.BlackOutline2 = Instance.new(""Frame"", sector.Main)
			sector.BlackOutline2.Name = ""outline""
			sector.BlackOutline2.ZIndex = 1
			sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
			sector.BlackOutline2.BorderSizePixel = 0
			sector.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
			sector.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
			end)
			updateevent.Event:Connect(function(theme)
				sector.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
			end)

			local size = textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(2000, 2000))
			sector.Label = Instance.new(""TextLabel"", sector.Main)
			sector.Label.AnchorPoint = Vector2.new(0, 0.5)
			sector.Label.Position = UDim2.fromOffset(12, - 1)
			sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(200, 300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
			sector.Label.BackgroundTransparency = 1
			sector.Label.BorderSizePixel = 0
			sector.Label.ZIndex = 6
			sector.Label.Text = sector.name
			sector.Label.TextColor3 = Color3.new(1, 1, 2552 / 255)
			sector.Label.TextStrokeTransparency = 1
			sector.Label.Font = window.theme.font
			sector.Label.TextSize = 15
			updateevent.Event:Connect(function(theme)
				local size = textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(2000, 2000))
				sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(200, 300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
				sector.Label.Font = theme.font
			end)

			sector.LabelBackFrame = Instance.new(""Frame"", sector.Main)
			sector.LabelBackFrame.Name = ""labelframe""
			sector.LabelBackFrame.ZIndex = 5
			sector.LabelBackFrame.Size = UDim2.fromOffset(sector.Label.Size.X.Offset, 10)
			sector.LabelBackFrame.BorderSizePixel = 0
			sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			sector.LabelBackFrame.Position = UDim2.fromOffset(sector.Label.Position.X.Offset, sector.BlackOutline2.Position.Y.Offset)

			sector.Items = Instance.new(""Frame"", sector.Main)
			sector.Items.Name = ""items""
			sector.Items.ZIndex = 2
			sector.Items.BackgroundTransparency = 1
			sector.Items.Size = UDim2.fromOffset(170, 140)
			sector.Items.AutomaticSize = Enum.AutomaticSize.Y
			sector.Items.BorderSizePixel = 0

			sector.ListLayout = Instance.new(""UIListLayout"", sector.Items)
			sector.ListLayout.FillDirection = Enum.FillDirection.Vertical
			sector.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			sector.ListLayout.Padding = UDim.new(0, 12)

			sector.ListPadding = Instance.new(""UIPadding"", sector.Items)
			sector.ListPadding.PaddingTop = UDim.new(0, 15)
			sector.ListPadding.PaddingLeft = UDim.new(0, 6)
			sector.ListPadding.PaddingRight = UDim.new(0, 6)

			table.insert(sector.side:lower() == ""left"" and tab.SectorsLeft or tab.SectorsRight, sector)

			function sector:FixSize()
				sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, sector.ListLayout.AbsoluteContentSize.Y + 22)
				local sizeleft, sizeright = 0, 0
				for i, v in pairs(tab.SectorsLeft) do
					sizeleft = sizeleft + v.Main.AbsoluteSize.Y
				end
				for i, v in pairs(tab.SectorsRight) do
					sizeright = sizeright + v.Main.AbsoluteSize.Y
				end

				tab.Left.CanvasSize = UDim2.fromOffset(tab.Left.AbsoluteSize.X, sizeleft + ((#tab.SectorsLeft - 1) * tab.LeftListPadding.PaddingTop.Offset) + 20)
				tab.Right.CanvasSize = UDim2.fromOffset(tab.Right.AbsoluteSize.X, sizeright + ((#tab.SectorsRight - 1) * tab.RightListPadding.PaddingTop.Offset) + 20)
			end

			function sector:AddButton(text, callback)
				local button = {}
				button.text = text or """"
				button.callback = callback or function() end

				button.Main = Instance.new(""TextButton"", sector.Items)
				button.Main.BorderSizePixel = 0
				button.Main.Text = """"
				button.Main.AutoButtonColor = false
				button.Main.Name = ""button""
				button.Main.ZIndex = 5
				button.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
				button.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

				button.Gradient = Instance.new(""UIGradient"", button.Main)
				button.Gradient.Rotation = 90
				button.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.buttoncolor), ColorSequenceKeypoint.new(1, window.theme.buttoncolor2)})
				updateevent.Event:Connect(function(theme)
					button.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.buttoncolor), ColorSequenceKeypoint.new(1, theme.buttoncolor2)})
				end)

				button.BlackOutline2 = Instance.new(""Frame"", button.Main)
				button.BlackOutline2.Name = ""blackline""
				button.BlackOutline2.ZIndex = 4
				button.BlackOutline2.Size = button.Main.Size + UDim2.fromOffset(6, 6)
				button.BlackOutline2.BorderSizePixel = 0
				button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				button.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					button.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				button.Outline = Instance.new(""Frame"", button.Main)
				button.Outline.Name = ""blackline""
				button.Outline.ZIndex = 4
				button.Outline.Size = button.Main.Size + UDim2.fromOffset(4, 4)
				button.Outline.BorderSizePixel = 0
				button.Outline.BackgroundColor3 = window.theme.outlinecolor
				button.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					button.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				button.BlackOutline = Instance.new(""Frame"", button.Main)
				button.BlackOutline.Name = ""blackline""
				button.BlackOutline.ZIndex = 4
				button.BlackOutline.Size = button.Main.Size + UDim2.fromOffset(2, 2)
				button.BlackOutline.BorderSizePixel = 0
				button.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				button.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					button.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				button.Label = Instance.new(""TextLabel"", button.Main)
				button.Label.Name = ""Label""
				button.Label.BackgroundTransparency = 1
				button.Label.Position = UDim2.new(0, - 1, 0, 0)
				button.Label.ZIndex = 5
				button.Label.Size = button.Main.Size
				button.Label.Font = window.theme.font
				button.Label.Text = button.text
				button.Label.TextColor3 = window.theme.itemscolor2
				button.Label.TextSize = 15
				button.Label.TextStrokeTransparency = 1
				button.Label.TextXAlignment = Enum.TextXAlignment.Center
				button.Main.MouseButton1Down:Connect(button.callback)
				updateevent.Event:Connect(function(theme)
					button.Label.Font = theme.font
					button.Label.TextColor3 = theme.itemscolor
				end)

				button.BlackOutline2.MouseEnter:Connect(function()
					button.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)

				button.BlackOutline2.MouseLeave:Connect(function()
					button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()

				return button
			end

			function sector:AddLabel(text)
				local label = {}

				label.Main = Instance.new(""TextLabel"", sector.Items)
				label.Main.Name = ""Label""
				label.Main.BackgroundTransparency = 1
				label.Main.Position = UDim2.new(0, - 1, 0, 0)
				label.Main.ZIndex = 4
				label.Main.AutomaticSize = Enum.AutomaticSize.XY
				label.Main.Font = window.theme.font
				label.Main.Text = text
				label.Main.TextColor3 = window.theme.itemscolor
				label.Main.TextSize = 15
				label.Main.TextStrokeTransparency = 1
				label.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					label.Main.Font = theme.font
					label.Main.TextColor3 = theme.itemscolor
				end)

				function label:Set(value)
					label.Main.Text = value
				end

				sector:FixSize()

				return label
			end

			function sector:AddToggle(text, default, callback, flag)
				local toggle = {}
				toggle.text = text or """"
				toggle.default = default or false
				toggle.callback = callback or function(value) end
				toggle.flag = flag or text or """"

				toggle.value = toggle.default

				toggle.Main = Instance.new(""TextButton"", sector.Items)
				toggle.Main.Name = ""toggle""
				toggle.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.Main.BorderColor3 = window.theme.outlinecolor
				toggle.Main.BorderSizePixel = 0
				toggle.Main.Size = UDim2.fromOffset(8, 8)
				toggle.Main.AutoButtonColor = false
				toggle.Main.ZIndex = 5
				toggle.Main.Font = Enum.Font.SourceSans
				toggle.Main.Text = """"
				toggle.Main.TextColor3 = Color3.fromRGB(0, 0, 0)
				toggle.Main.TextSize = 15
				updateevent.Event:Connect(function(theme)
					toggle.Main.BorderColor3 = theme.outlinecolor
				end)

				toggle.BlackOutline2 = Instance.new(""Frame"", toggle.Main)
				toggle.BlackOutline2.Name = ""blackline""
				toggle.BlackOutline2.ZIndex = 4
				toggle.BlackOutline2.Size = toggle.Main.Size + UDim2.fromOffset(6, 6)
				toggle.BlackOutline2.BorderSizePixel = 0
				toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				toggle.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					toggle.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				toggle.Outline = Instance.new(""Frame"", toggle.Main)
				toggle.Outline.Name = ""blackline""
				toggle.Outline.ZIndex = 4
				toggle.Outline.Size = toggle.Main.Size + UDim2.fromOffset(4, 4)
				toggle.Outline.BorderSizePixel = 0
				toggle.Outline.BackgroundColor3 = window.theme.outlinecolor
				toggle.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					toggle.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				toggle.BlackOutline = Instance.new(""Frame"", toggle.Main)
				toggle.BlackOutline.Name = ""blackline""
				toggle.BlackOutline.ZIndex = 4
				toggle.BlackOutline.Size = toggle.Main.Size + UDim2.fromOffset(2, 2)
				toggle.BlackOutline.BorderSizePixel = 0
				toggle.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				toggle.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					toggle.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				toggle.Gradient = Instance.new(""UIGradient"", toggle.Main)
				toggle.Gradient.Rotation = (22.5 * 13)
				toggle.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)), ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 45))})

				toggle.Label = Instance.new(""TextButton"", toggle.Main)
				toggle.Label.Name = ""Label""
				toggle.Label.AutoButtonColor = false
				toggle.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.Label.BackgroundTransparency = 1
				toggle.Label.Position = UDim2.fromOffset(toggle.Main.AbsoluteSize.X + 10, - 2)
				toggle.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, toggle.BlackOutline.Size.Y.Offset)
				toggle.Label.Font = window.theme.font
				toggle.Label.ZIndex = 5
				toggle.Label.Text = toggle.text
				toggle.Label.TextColor3 = window.theme.itemscolor
				toggle.Label.TextSize = 15
				toggle.Label.TextStrokeTransparency = 1
				toggle.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					toggle.Label.Font = theme.font
					toggle.Label.TextColor3 = toggle.value and window.theme.itemscolor2 or theme.itemscolor
				end)

				toggle.CheckedFrame = Instance.new(""Frame"", toggle.Main)
				toggle.CheckedFrame.ZIndex = 5
				toggle.CheckedFrame.BorderSizePixel = 0
				toggle.CheckedFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.CheckedFrame.Size = toggle.Main.Size

				toggle.Gradient2 = Instance.new(""UIGradient"", toggle.CheckedFrame)
				toggle.Gradient2.Rotation = (22.5 * 13)
				toggle.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor2), ColorSequenceKeypoint.new(1, window.theme.accentcolor)})
				updateevent.Event:Connect(function(theme)
					toggle.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor2), ColorSequenceKeypoint.new(1, theme.accentcolor)})
				end)

				toggle.Items = Instance.new(""Frame"", toggle.Main)
				toggle.Items.Name = ""\n""
				toggle.Items.ZIndex = 4
				toggle.Items.Size = UDim2.fromOffset(60, toggle.BlackOutline.AbsoluteSize.Y)
				toggle.Items.BorderSizePixel = 0
				toggle.Items.BackgroundTransparency = 1
				toggle.Items.BackgroundColor3 = Color3.new(0, 0, 0)
				toggle.Items.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, 0)

				toggle.ListLayout = Instance.new(""UIListLayout"", toggle.Items)
				toggle.ListLayout.FillDirection = Enum.FillDirection.Horizontal
				toggle.ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
				toggle.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				toggle.ListLayout.Padding = UDim.new(0.04, 6)

				if toggle.flag and toggle.flag ~= """" then
					library.flags[toggle.flag] = toggle.default or false
				end

				function toggle:Set(value)
					if value then
						toggle.Label.TextColor3 = window.theme.itemscolor2
					else
						toggle.Label.TextColor3 = window.theme.itemscolor
					end

					toggle.value = value
					toggle.CheckedFrame.Visible = value
					if toggle.flag and toggle.flag ~= """" then
						library.flags[toggle.flag] = toggle.value
					end
					pcall(toggle.callback, value)
				end

				function toggle:Get()
					return toggle.value
				end

				toggle:Set(toggle.default)

				function toggle:AddKeybind(default, flag)
					local keybind = {}

					keybind.default = default or ""None""
					keybind.value = keybind.default
					keybind.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					local shorter_keycodes = {
						[""LeftShift""] = ""LSHIFT"", 
						[""RightShift""] = ""RSHIFT"", 
						[""LeftControl""] = ""LCTRL"", 
						[""RightControl""] = ""RCTRL"", 
						[""LeftAlt""] = ""LALT"", 
						[""RightAlt""] = ""RALT""
					}

					local text = keybind.default == ""None"" and ""[None]"" or ""["" .. (shorter_keycodes[keybind.default.Name] or keybind.default.Name) .. ""]""
					local size = textservice:GetTextSize(text, 15, window.theme.font, Vector2.new(2000, 2000))

					keybind.Main = Instance.new(""TextButton"", toggle.Items)
					keybind.Main.Name = ""keybind""
					keybind.Main.BackgroundTransparency = 1
					keybind.Main.BorderSizePixel = 0
					keybind.Main.ZIndex = 5
					keybind.Main.Size = UDim2.fromOffset(size.X + 2, size.Y - 7)
					keybind.Main.Text = text
					keybind.Main.Font = window.theme.font
					keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
					keybind.Main.TextSize = 15
					keybind.Main.TextXAlignment = Enum.TextXAlignment.Right
					keybind.Main.MouseButton1Down:Connect(function()
						keybind.Main.Text = ""[...]""
						keybind.Main.TextColor3 = window.theme.accentcolor
					end)
					updateevent.Event:Connect(function(theme)
						keybind.Main.Font = theme.font
						if keybind.Main.Text == ""[...]"" then
							keybind.Main.TextColor3 = theme.accentcolor
						else
							keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
						end
					end)

					if keybind.flag and keybind.flag ~= """" then
						library.flags[keybind.flag] = keybind.default
					end
					function keybind:Set(key)
						if key == ""None"" then
							keybind.Main.Text = ""["" .. key .. ""]""
							keybind.value = key
							if keybind.flag and keybind.flag ~= """" then
								library.flags[keybind.flag] = key
							end
						end
						keybind.Main.Text = ""["" .. (shorter_keycodes[key.Name] or key.Name) .. ""]""
						keybind.value = key
						if keybind.flag and keybind.flag ~= """" then
							library.flags[keybind.flag] = keybind.value
						end
					end

					function keybind:Get()
						return keybind.value
					end

					uis.InputBegan:Connect(function(input, gameProcessed)
						if not gameProcessed then
							if keybind.Main.Text == ""[...]"" then
								keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
								if input.UserInputType == Enum.UserInputType.Keyboard then
									keybind:Set(input.KeyCode)
								else
									keybind:Set(""None"")
								end
							else
								if keybind.value ~= ""None"" and input.KeyCode == keybind.value then
									toggle:Set(not toggle.CheckedFrame.Visible)
								end
							end
						end
					end)

					table.insert(library.items, keybind)

					return keybind
				end

				function toggle:AddDropdown(items, default, multichoice, callback, flag)
					local dropdown = {}

					dropdown.defaultitems = items or {}
					dropdown.default = default
					dropdown.callback = callback or function() end
					dropdown.multichoice = multichoice or false
					dropdown.values = {}
					dropdown.flag = flag or ((toggle.text or """") .. #sector.Items:GetChildren() .. ""a"")

					dropdown.Main = Instance.new(""TextButton"", sector.Items)
					dropdown.Main.Name = ""dropdown""
					dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.BorderSizePixel = 0
					dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
					dropdown.Main.Position = UDim2.fromOffset(0, 0)
					dropdown.Main.ZIndex = 5
					dropdown.Main.AutoButtonColor = false
					dropdown.Main.Font = window.theme.font
					dropdown.Main.Text = """"
					dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.TextSize = 15
					dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.Main.Font = theme.font
					end)

					dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
					dropdown.Gradient.Rotation = 90
					dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

					dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
					dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.BackgroundTransparency = 1
					dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
					dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
					dropdown.SelectedLabel.Font = window.theme.font
					dropdown.SelectedLabel.Text = toggle.text
					dropdown.SelectedLabel.ZIndex = 5
					dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.TextSize = 15
					dropdown.SelectedLabel.TextStrokeTransparency = 1
					dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.SelectedLabel.Font = theme.font
					end)

					dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
					dropdown.Nav.Name = ""navigation""
					dropdown.Nav.BackgroundTransparency = 1
					dropdown.Nav.LayoutOrder = 10
					dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
					dropdown.Nav.Rotation = 90
					dropdown.Nav.ZIndex = 5
					dropdown.Nav.Size = UDim2.fromOffset(8, 8)
					dropdown.Nav.Image = ""rbxassetid://4918373417""
					dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

					dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2.Name = ""blackline""
					dropdown.BlackOutline2.ZIndex = 4
					dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2.BorderSizePixel = 0
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
					dropdown.Outline.Name = ""blackline""
					dropdown.Outline.ZIndex = 4
					dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
					dropdown.Outline.BorderSizePixel = 0
					dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
					dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						dropdown.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline.Name = ""blackline444""
					dropdown.BlackOutline.ZIndex = 4
					dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline.BorderSizePixel = 0
					dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
					dropdown.ItemsFrame.Name = ""itemsframe""
					dropdown.ItemsFrame.BorderSizePixel = 0
					dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.ItemsFrame.ScrollBarThickness = 2
					dropdown.ItemsFrame.ZIndex = 8
					dropdown.ItemsFrame.ScrollingDirection = ""Y""
					dropdown.ItemsFrame.Visible = false
					dropdown.ItemsFrame.Size = UDim2.new(0, 0, 0, 0)
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

					dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
					dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
					dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

					dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
					dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
					dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
					dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
					dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

					dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2Items.Name = ""blackline3""
					dropdown.BlackOutline2Items.ZIndex = 7
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2Items.BorderSizePixel = 0
					dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
					dropdown.BlackOutline2Items.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.OutlineItems.Name = ""blackline8""
					dropdown.OutlineItems.ZIndex = 7
					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.OutlineItems.BorderSizePixel = 0
					dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
					dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
					dropdown.OutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutlineItems.Name = ""blackline3""
					dropdown.BlackOutlineItems.ZIndex = 7
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
					dropdown.BlackOutlineItems.BorderSizePixel = 0
					dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
					dropdown.BlackOutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
					dropdown.IgnoreBackButtons.BackgroundTransparency = 1
					dropdown.IgnoreBackButtons.BorderSizePixel = 0
					dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
					dropdown.IgnoreBackButtons.ZIndex = 7
					dropdown.IgnoreBackButtons.Text = """"
					dropdown.IgnoreBackButtons.Visible = false
					dropdown.IgnoreBackButtons.AutoButtonColor = false

					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
					end

					function dropdown:isSelected(item)
						for i, v in pairs(dropdown.values) do
							if v == item then
								return true
							end
						end

						return false
					end

					function dropdown:updateText(text)
						if #text >= 27 then
							text = text:sub(1, 25) .. ""..""
						end
						dropdown.SelectedLabel.Text = text
					end

					dropdown.Changed = Instance.new(""BindableEvent"")
					function dropdown:Set(value)
						if type(value) == ""table"" then
							dropdown.values = value
							dropdown:updateText(table.concat(value, "", ""))
							pcall(dropdown.callback, value)
						else
							dropdown:updateText(value)
							dropdown.values = {value}
							pcall(dropdown.callback, value)
						end

						dropdown.Changed:Fire(value)
						if dropdown.flag and dropdown.flag ~= """" then
							library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
						end
					end

					function dropdown:Get()
						return dropdown.multichoice and dropdown.values or dropdown.values[1]
					end

					dropdown.items = {}
					function dropdown:Add(v)
						local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
						Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						Item.TextColor3 = Color3.fromRGB(255, 255, 255)
						Item.BorderSizePixel = 0
						Item.Position = UDim2.fromOffset(0, 0)
						Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
						Item.ZIndex = 9
						Item.Text = v
						Item.Name = v
						Item.AutoButtonColor = false
						Item.Font = window.theme.font
						Item.TextSize = 15
						Item.TextXAlignment = Enum.TextXAlignment.Left
						Item.TextStrokeTransparency = 1
						dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

						Item.MouseButton1Down:Connect(function()
							if dropdown.multichoice then
								if dropdown:isSelected(v) then
									for i2, v2 in pairs(dropdown.values) do
										if v2 == v then
											table.remove(dropdown.values, i2)
										end
									end
									dropdown:Set(dropdown.values)
								else
									table.insert(dropdown.values, v)
									dropdown:Set(dropdown.values)
								end

								return
							else
								dropdown.Nav.Rotation = 90
								dropdown.ItemsFrame.Visible = false
								dropdown.ItemsFrame.Active = false
								dropdown.OutlineItems.Visible = false
								dropdown.BlackOutlineItems.Visible = false
								dropdown.BlackOutline2Items.Visible = false
								dropdown.IgnoreBackButtons.Visible = false
								dropdown.IgnoreBackButtons.Active = false
							end

							dropdown:Set(v)

							return
						end)

						runservice.RenderStepped:Connect(function()
							if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
								Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
								Item.TextColor3 = window.theme.accentcolor
								Item.Text = "" "" .. v
							else
								Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
								Item.TextColor3 = Color3.fromRGB(255, 255, 255)
								Item.Text = v
							end
						end)

						table.insert(dropdown.items, v)
						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
					end

					function dropdown:Remove(value)
						local item = dropdown.ItemsFrame:FindFirstChild(value)
						if item then
							for i, v in pairs(dropdown.items) do
								if v == value then
									table.remove(dropdown.items, i)
								end
							end

							dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
							dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

							dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
							dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
							dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
							dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

							item:Remove()
						end
					end

					for i, v in pairs(dropdown.defaultitems) do
						dropdown:Add(v)
					end

					if dropdown.default then
						dropdown:Set(dropdown.default)
					end

					local MouseButton1Down = function()
						if dropdown.Nav.Rotation == 90 then
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
							if dropdown.items and #dropdown.items ~= 0 then
								dropdown.ItemsFrame.ScrollingEnabled = true
								sector.Main.Parent.ScrollingEnabled = false
								dropdown.ItemsFrame.Visible = true
								dropdown.ItemsFrame.Active = true
								dropdown.IgnoreBackButtons.Visible = true
								dropdown.IgnoreBackButtons.Active = true
								dropdown.OutlineItems.Visible = true
								dropdown.BlackOutlineItems.Visible = true
								dropdown.BlackOutline2Items.Visible = true
							end
						else
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
							dropdown.ItemsFrame.ScrollingEnabled = false
							sector.Main.Parent.ScrollingEnabled = true
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
						end
					end

					dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
					dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

					dropdown.BlackOutline2.MouseEnter:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					dropdown.BlackOutline2.MouseLeave:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, dropdown)

					return dropdown
				end

				function toggle:AddTextbox(default, callback, flag)
					local textbox = {}
					textbox.callback = callback or function() end
					textbox.default = default
					textbox.value = """"
					textbox.flag = flag or ((toggle.text or """") .. #sector.Items:GetChildren() .. ""a"")

					textbox.Holder = Instance.new(""Frame"", sector.Items)
					textbox.Holder.Name = ""holder""
					textbox.Holder.ZIndex = 5
					textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
					textbox.Holder.BorderSizePixel = 0
					textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

					textbox.Gradient = Instance.new(""UIGradient"", textbox.Holder)
					textbox.Gradient.Rotation = 90
					textbox.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))})

					textbox.Main = Instance.new(""TextBox"", textbox.Holder)
					textbox.Main.PlaceholderText = """"
					textbox.Main.Text = """"
					textbox.Main.BackgroundTransparency = 1
					textbox.Main.Font = window.theme.font
					textbox.Main.Name = ""textbox""
					textbox.Main.MultiLine = false
					textbox.Main.ClearTextOnFocus = false
					textbox.Main.ZIndex = 5
					textbox.Main.TextScaled = true
					textbox.Main.Size = textbox.Holder.Size
					textbox.Main.TextSize = 15
					textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					textbox.Main.BorderSizePixel = 0
					textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					textbox.Main.TextXAlignment = Enum.TextXAlignment.Left

					if textbox.flag and textbox.flag ~= """" then
						library.flags[textbox.flag] = textbox.default or """"
					end

					function textbox:Set(text)
						textbox.value = text
						textbox.Main.Text = text
						if textbox.flag and textbox.flag ~= """" then
							library.flags[textbox.flag] = text
						end
						pcall(textbox.callback, text)
					end
					updateevent.Event:Connect(function(theme)
						textbox.Main.Font = theme.font
					end)

					function textbox:Get()
						return textbox.value
					end

					if textbox.default then
						textbox:Set(textbox.default)
					end

					textbox.Main.FocusLost:Connect(function()
						textbox:Set(textbox.Main.Text)
					end)

					textbox.BlackOutline2 = Instance.new(""Frame"", textbox.Main)
					textbox.BlackOutline2.Name = ""blackline""
					textbox.BlackOutline2.ZIndex = 4
					textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
					textbox.BlackOutline2.BorderSizePixel = 0
					textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					textbox.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					textbox.Outline = Instance.new(""Frame"", textbox.Main)
					textbox.Outline.Name = ""blackline""
					textbox.Outline.ZIndex = 4
					textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
					textbox.Outline.BorderSizePixel = 0
					textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
					textbox.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						textbox.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					textbox.BlackOutline = Instance.new(""Frame"", textbox.Main)
					textbox.BlackOutline.Name = ""blackline""
					textbox.BlackOutline.ZIndex = 4
					textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
					textbox.BlackOutline.BorderSizePixel = 0
					textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					textbox.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					textbox.BlackOutline2.MouseEnter:Connect(function()
						textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					textbox.BlackOutline2.MouseLeave:Connect(function()
						textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, textbox)

					return textbox
				end

				function toggle:AddColorpicker(default, callback, flag)
					local colorpicker = {}

					colorpicker.callback = callback or function() end
					colorpicker.default = default or Color3.fromRGB(255, 255, 255)
					colorpicker.value = colorpicker.default
					colorpicker.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					colorpicker.Main = Instance.new(""Frame"", toggle.Items)
					colorpicker.Main.ZIndex = 6
					colorpicker.Main.BorderSizePixel = 0
					colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					colorpicker.Main.Size = UDim2.fromOffset(16, 10)

					colorpicker.Gradient = Instance.new(""UIGradient"", colorpicker.Main)
					colorpicker.Gradient.Rotation = 90

					local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
					colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, colorpicker.value), ColorSequenceKeypoint.new(1, clr)})

					colorpicker.BlackOutline2 = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.BlackOutline2.Name = ""blackline""
					colorpicker.BlackOutline2.ZIndex = 4
					colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
					colorpicker.BlackOutline2.BorderSizePixel = 0
					colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						if window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = theme.accentcolor
						else
							colorpicker.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
						end
					end)

					colorpicker.Outline = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.Outline.Name = ""blackline""
					colorpicker.Outline.ZIndex = 4
					colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
					colorpicker.Outline.BorderSizePixel = 0
					colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
					colorpicker.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					colorpicker.BlackOutline = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.BlackOutline.Name = ""blackline""
					colorpicker.BlackOutline.ZIndex = 4
					colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
					colorpicker.BlackOutline.BorderSizePixel = 0
					colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.BlackOutline2.MouseEnter:Connect(function()
						colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)

					colorpicker.BlackOutline2.MouseLeave:Connect(function()
						if not window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
						end
					end)

					colorpicker.MainPicker = Instance.new(""TextButton"", colorpicker.Main)
					colorpicker.MainPicker.Name = ""picker""
					colorpicker.MainPicker.ZIndex = 100
					colorpicker.MainPicker.Visible = false
					colorpicker.MainPicker.AutoButtonColor = false
					colorpicker.MainPicker.Text = """"
					window.OpenedColorPickers[colorpicker.MainPicker] = false
					colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
					colorpicker.MainPicker.BorderSizePixel = 0
					colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					colorpicker.MainPicker.Rotation = 0
					colorpicker.MainPicker.Position = UDim2.fromOffset(- colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 17)

					colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.BlackOutline3.Name = ""blackline""
					colorpicker.BlackOutline3.ZIndex = 98
					colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
					colorpicker.BlackOutline3.BorderSizePixel = 0
					colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.Outline2 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.Outline2.Name = ""blackline""
					colorpicker.Outline2.ZIndex = 98
					colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
					colorpicker.Outline2.BorderSizePixel = 0
					colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
					colorpicker.Outline2.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
					end)

					colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.BlackOutline3.Name = ""blackline""
					colorpicker.BlackOutline3.ZIndex = 98
					colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
					colorpicker.BlackOutline3.BorderSizePixel = 0
					colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.hue = Instance.new(""ImageLabel"", colorpicker.MainPicker)
					colorpicker.hue.ZIndex = 101
					colorpicker.hue.Position = UDim2.new(0, 3, 0, 3)
					colorpicker.hue.Size = UDim2.new(0, 172, 0, 172)
					colorpicker.hue.Image = ""rbxassetid://4155801252""
					colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
					colorpicker.hue.BackgroundColor3 = Color3.new(1, 0, 0)
					colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
					updateevent.Event:Connect(function(theme)
						colorpicker.hue.BorderColor3 = theme.outlinecolor2
					end)

					colorpicker.hueselectorpointer = Instance.new(""ImageLabel"", colorpicker.MainPicker)
					colorpicker.hueselectorpointer.ZIndex = 101
					colorpicker.hueselectorpointer.BackgroundTransparency = 1
					colorpicker.hueselectorpointer.BorderSizePixel = 0
					colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
					colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
					colorpicker.hueselectorpointer.Image = ""rbxassetid://6885856475""

					colorpicker.selector = Instance.new(""TextLabel"", colorpicker.MainPicker)
					colorpicker.selector.ZIndex = 100
					colorpicker.selector.Position = UDim2.new(0, 3, 0, 181)
					colorpicker.selector.Size = UDim2.new(0, 173, 0, 10)
					colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
					colorpicker.selector.Text = """"
					updateevent.Event:Connect(function(theme)
						colorpicker.selector.BorderColor3 = theme.outlinecolor2
					end)

					colorpicker.gradient = Instance.new(""UIGradient"", colorpicker.selector)
					colorpicker.gradient.Color = ColorSequence.new({
						ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)), 
						ColorSequenceKeypoint.new(0.17, Color3.new(1, 0, 1)), 
						ColorSequenceKeypoint.new(0.33, Color3.new(0, 0, 1)), 
						ColorSequenceKeypoint.new(0.5, Color3.new(0, 1, 1)), 
						ColorSequenceKeypoint.new(0.67, Color3.new(0, 1, 0)), 
						ColorSequenceKeypoint.new(0.83, Color3.new(1, 1, 0)), 
						ColorSequenceKeypoint.new(1, Color3.new(1, 0, 0))
					})

					colorpicker.pointer = Instance.new(""Frame"", colorpicker.selector)
					colorpicker.pointer.ZIndex = 101
					colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					colorpicker.pointer.Position = UDim2.new(0, 0, 0, 0)
					colorpicker.pointer.Size = UDim2.new(0, 2, 0, 10)
					colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

					if colorpicker.flag and colorpicker.flag ~= """" then
						library.flags[colorpicker.flag] = colorpicker.default
					end

					function colorpicker:RefreshHue()
						local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
						local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
						colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
					end

					function colorpicker:RefreshSelector()
						local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
						colorpicker.color = 1 - pos
						colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)

						local x = (colorpicker.hueselectorpointer.AbsolutePosition.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
						local y = (colorpicker.hueselectorpointer.AbsolutePosition.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
						colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
					end

					function colorpicker:Set(value)
						local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
						colorpicker.value = color
						if colorpicker.flag and colorpicker.flag ~= """" then
							library.flags[colorpicker.flag] = color
						end
						local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
						colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, color), ColorSequenceKeypoint.new(1, clr)})
						pcall(colorpicker.callback, color)
					end

					function colorpicker:Get(value)
						return colorpicker.value
					end

					colorpicker:Set(colorpicker.default)

					local dragging_selector = false
					local dragging_hue = false

					colorpicker.selector.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_selector = true
							colorpicker:RefreshSelector()
						end
					end)

					colorpicker.selector.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_selector = false
							colorpicker:RefreshSelector()
						end
					end)

					colorpicker.hue.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_hue = true
							colorpicker:RefreshHue()
						end
					end)

					colorpicker.hue.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_hue = false
							colorpicker:RefreshHue()
						end
					end)

					uis.InputChanged:Connect(function(input)
						if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
							colorpicker:RefreshSelector()
						end
						if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
							colorpicker:RefreshHue()
						end
					end)

					local inputBegan = function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							for i, v in pairs(window.OpenedColorPickers) do
								if v and i ~= colorpicker.MainPicker then
									i.Visible = false
									window.OpenedColorPickers[i] = false
								end
							end

							colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
							window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
							if window.OpenedColorPickers[colorpicker.MainPicker] then
								colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
							else
								colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
							end
						end
					end

					colorpicker.Main.InputBegan:Connect(inputBegan)
					colorpicker.Outline.InputBegan:Connect(inputBegan)
					colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)
					table.insert(library.items, colorpicker)

					return colorpicker
				end

				function toggle:AddSlider(min, default, max, decimals, callback, flag)
					local slider = {}
					slider.text = text or """"
					slider.callback = callback or function(value) end
					slider.min = min or 0
					slider.max = max or 100
					slider.decimals = decimals or 1
					slider.default = default or slider.min
					slider.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					slider.value = slider.default
					local dragging = false

					slider.Main = Instance.new(""TextButton"", sector.Items)
					slider.Main.Name = ""slider""
					slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					slider.Main.Position = UDim2.fromOffset(0, 0)
					slider.Main.BorderSizePixel = 0
					slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
					slider.Main.AutoButtonColor = false
					slider.Main.Text = """"
					slider.Main.ZIndex = 7

					slider.InputLabel = Instance.new(""TextLabel"", slider.Main)
					slider.InputLabel.BackgroundTransparency = 1
					slider.InputLabel.Size = slider.Main.Size
					slider.InputLabel.Font = window.theme.font
					slider.InputLabel.Text = ""0""
					slider.InputLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
					slider.InputLabel.Position = slider.Main.Position
					slider.InputLabel.Selectable = false
					slider.InputLabel.TextSize = 15
					slider.InputLabel.ZIndex = 9
					slider.InputLabel.TextStrokeTransparency = 1
					slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Center
					updateevent.Event:Connect(function(theme)
						slider.InputLabel.Font = theme.font
						slider.InputLabel.TextColor3 = theme.itemscolor
					end)

					slider.BlackOutline2 = Instance.new(""Frame"", slider.Main)
					slider.BlackOutline2.Name = ""blackline""
					slider.BlackOutline2.ZIndex = 4
					slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
					slider.BlackOutline2.BorderSizePixel = 0
					slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					slider.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					slider.Outline = Instance.new(""Frame"", slider.Main)
					slider.Outline.Name = ""blackline""
					slider.Outline.ZIndex = 4
					slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
					slider.Outline.BorderSizePixel = 0
					slider.Outline.BackgroundColor3 = window.theme.outlinecolor
					slider.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						slider.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					slider.BlackOutline = Instance.new(""Frame"", slider.Main)
					slider.BlackOutline.Name = ""blackline""
					slider.BlackOutline.ZIndex = 4
					slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
					slider.BlackOutline.BorderSizePixel = 0
					slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					slider.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					slider.Gradient = Instance.new(""UIGradient"", slider.Main)
					slider.Gradient.Rotation = 90
					slider.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 41, 41))})

					slider.SlideBar = Instance.new(""Frame"", slider.Main)
					slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					slider.SlideBar.ZIndex = 8
					slider.SlideBar.BorderSizePixel = 0
					slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)

					slider.Gradient2 = Instance.new(""UIGradient"", slider.SlideBar)
					slider.Gradient2.Rotation = 90
					slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor), ColorSequenceKeypoint.new(1, window.theme.accentcolor2)})
					updateevent.Event:Connect(function(theme)
						slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor), ColorSequenceKeypoint.new(1, theme.accentcolor2)})
					end)

					slider.BlackOutline2.MouseEnter:Connect(function()
						slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					slider.BlackOutline2.MouseLeave:Connect(function()
						slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					if slider.flag and slider.flag ~= """" then
						library.flags[slider.flag] = slider.default or slider.min or 0
					end

					function slider:Get()
						return slider.value
					end

					function slider:Set(value)
						slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
						local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
						if slider.flag and slider.flag ~= """" then
							library.flags[slider.flag] = slider.value
						end
						slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						slider.InputLabel.Text = slider.value
						pcall(slider.callback, slider.value)
					end
					slider:Set(slider.default)

					function slider:Refresh()
						local mousepos = game:GetService(""Workspace"").CurrentCamera:WorldToViewportPoint(mouse.Hit.p)
						local percent = math.clamp(mousepos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
						local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
						value = math.clamp(value, slider.min, slider.max)
						slider:Set(value)
					end

					slider.SlideBar.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
							slider:Refresh()
						end
					end)

					slider.SlideBar.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end)

					slider.Main.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
							slider:Refresh()
						end
					end)

					slider.Main.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end)

					uis.InputChanged:Connect(function(input)
						if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
							slider:Refresh()
						end
					end)

					sector:FixSize()
					table.insert(library.items, slider)

					return slider
				end

				toggle.Main.MouseButton1Down:Connect(function()
					toggle:Set(not toggle.CheckedFrame.Visible)
				end)

				toggle.Label.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						toggle:Set(not toggle.CheckedFrame.Visible)
					end
				end)

				local MouseEnter = function()
					toggle.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end

				local MouseLeave = function()
					toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end

				toggle.Label.MouseEnter:Connect(MouseEnter)
				toggle.Label.MouseLeave:Connect(MouseLeave)
				toggle.BlackOutline2.MouseEnter:Connect(MouseEnter)
				toggle.BlackOutline2.MouseLeave:Connect(MouseLeave)

				sector:FixSize()
				table.insert(library.items, toggle)

				return toggle
			end

			function sector:AddTextbox(text, default, callback, flag)
				local textbox = {}
				textbox.text = text or """"
				textbox.callback = callback or function() end
				textbox.default = default
				textbox.value = """"
				textbox.flag = flag or text or """"

				textbox.Label = Instance.new(""TextButton"", sector.Items)
				textbox.Label.Name = ""Label""
				textbox.Label.AutoButtonColor = false
				textbox.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				textbox.Label.BackgroundTransparency = 1
				textbox.Label.Position = UDim2.fromOffset(sector.Main.Size.X.Offset, 0)
				textbox.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 0)
				textbox.Label.Font = window.theme.font
				textbox.Label.ZIndex = 5
				textbox.Label.Text = textbox.text
				textbox.Label.TextColor3 = window.theme.itemscolor
				textbox.Label.TextSize = 15
				textbox.Label.TextStrokeTransparency = 1
				textbox.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					textbox.Label.Font = theme.font
				end)

				textbox.Holder = Instance.new(""Frame"", sector.Items)
				textbox.Holder.Name = ""holder""
				textbox.Holder.ZIndex = 5
				textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
				textbox.Holder.BorderSizePixel = 0
				textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

				textbox.Gradient = Instance.new(""UIGradient"", textbox.Holder)
				textbox.Gradient.Rotation = 90
				textbox.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))})

				textbox.Main = Instance.new(""TextBox"", textbox.Holder)
				textbox.Main.PlaceholderText = textbox.text
				textbox.Main.PlaceholderColor3 = Color3.fromRGB(190, 190, 190)
				textbox.Main.Text = """"
				textbox.Main.BackgroundTransparency = 1
				textbox.Main.Font = window.theme.font
				textbox.Main.Name = ""textbox""
				textbox.Main.MultiLine = false
				textbox.Main.ClearTextOnFocus = false
				textbox.Main.ZIndex = 5
				textbox.Main.TextScaled = true
				textbox.Main.Size = textbox.Holder.Size
				textbox.Main.TextSize = 15
				textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
				textbox.Main.BorderSizePixel = 0
				textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				textbox.Main.TextXAlignment = Enum.TextXAlignment.Left

				if textbox.flag and textbox.flag ~= """" then
					library.flags[textbox.flag] = textbox.default or """"
				end

				function textbox:Set(text)
					textbox.value = text
					textbox.Main.Text = text
					if textbox.flag and textbox.flag ~= """" then
						library.flags[textbox.flag] = text
					end
					pcall(textbox.callback, text)
				end
				updateevent.Event:Connect(function(theme)
					textbox.Main.Font = theme.font
				end)

				function textbox:Get()
					return textbox.value
				end

				if textbox.default then
					textbox:Set(textbox.default)
				end

				textbox.Main.FocusLost:Connect(function()
					textbox:Set(textbox.Main.Text)
				end)

				textbox.BlackOutline2 = Instance.new(""Frame"", textbox.Main)
				textbox.BlackOutline2.Name = ""blackline""
				textbox.BlackOutline2.ZIndex = 4
				textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
				textbox.BlackOutline2.BorderSizePixel = 0
				textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				textbox.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				textbox.Outline = Instance.new(""Frame"", textbox.Main)
				textbox.Outline.Name = ""blackline""
				textbox.Outline.ZIndex = 4
				textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
				textbox.Outline.BorderSizePixel = 0
				textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
				textbox.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					textbox.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				textbox.BlackOutline = Instance.new(""Frame"", textbox.Main)
				textbox.BlackOutline.Name = ""blackline""
				textbox.BlackOutline.ZIndex = 4
				textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
				textbox.BlackOutline.BorderSizePixel = 0
				textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				textbox.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				textbox.BlackOutline2.MouseEnter:Connect(function()
					textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				textbox.BlackOutline2.MouseLeave:Connect(function()
					textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()
				table.insert(library.items, textbox)

				return textbox
			end

			function sector:AddSlider(text, min, default, max, decimals, callback, flag)
				local slider = {}
				slider.text = text or """"
				slider.callback = callback or function(value) end
				slider.min = min or 0
				slider.max = max or 100
				slider.decimals = decimals or 1
				slider.default = default or slider.min
				slider.flag = flag or text or """"

				slider.value = slider.default
				local dragging = false

				slider.MainBack = Instance.new(""Frame"", sector.Items)
				slider.MainBack.Name = ""MainBack""
				slider.MainBack.ZIndex = 7
				slider.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 25)
				slider.MainBack.BorderSizePixel = 0
				slider.MainBack.BackgroundTransparency = 1

				slider.Label = Instance.new(""TextLabel"", slider.MainBack)
				slider.Label.BackgroundTransparency = 1
				slider.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 6)
				slider.Label.Font = window.theme.font
				slider.Label.Text = slider.text .. "":""
				slider.Label.TextColor3 = window.theme.itemscolor
				slider.Label.Position = UDim2.fromOffset(0, 0)
				slider.Label.TextSize = 15
				slider.Label.ZIndex = 4
				slider.Label.TextStrokeTransparency = 1
				slider.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					slider.Label.Font = theme.font
					slider.Label.TextColor3 = theme.itemscolor
				end)

				local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200, 300))
				slider.InputLabel = Instance.new(""TextBox"", slider.MainBack)
				slider.InputLabel.BackgroundTransparency = 1
				slider.InputLabel.ClearTextOnFocus = false
				slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
				slider.InputLabel.Font = window.theme.font
				slider.InputLabel.Text = ""0""
				slider.InputLabel.TextColor3 = window.theme.itemscolor
				slider.InputLabel.Position = UDim2.fromOffset(size.X + 3, - 3)
				slider.InputLabel.TextSize = 15
				slider.InputLabel.ZIndex = 4
				slider.InputLabel.TextStrokeTransparency = 1
				slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					slider.InputLabel.Font = theme.font
					slider.InputLabel.TextColor3 = theme.itemscolor

					local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200, 300))
					slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
				end)

				slider.Main = Instance.new(""TextButton"", slider.MainBack)
				slider.Main.Name = ""slider""
				slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				slider.Main.Position = UDim2.fromOffset(0, 15)
				slider.Main.BorderSizePixel = 0
				slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
				slider.Main.AutoButtonColor = false
				slider.Main.Text = """"
				slider.Main.ZIndex = 5

				slider.BlackOutline2 = Instance.new(""Frame"", slider.Main)
				slider.BlackOutline2.Name = ""blackline""
				slider.BlackOutline2.ZIndex = 4
				slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
				slider.BlackOutline2.BorderSizePixel = 0
				slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				slider.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				slider.Outline = Instance.new(""Frame"", slider.Main)
				slider.Outline.Name = ""blackline""
				slider.Outline.ZIndex = 4
				slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
				slider.Outline.BorderSizePixel = 0
				slider.Outline.BackgroundColor3 = window.theme.outlinecolor
				slider.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					slider.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				slider.BlackOutline = Instance.new(""Frame"", slider.Main)
				slider.BlackOutline.Name = ""blackline""
				slider.BlackOutline.ZIndex = 4
				slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
				slider.BlackOutline.BorderSizePixel = 0
				slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				slider.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				slider.Gradient = Instance.new(""UIGradient"", slider.Main)
				slider.Gradient.Rotation = 90
				slider.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 41, 41))})

				slider.SlideBar = Instance.new(""Frame"", slider.Main)
				slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				slider.SlideBar.ZIndex = 5
				slider.SlideBar.BorderSizePixel = 0
				slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)

				slider.Gradient2 = Instance.new(""UIGradient"", slider.SlideBar)
				slider.Gradient2.Rotation = 90
				slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor), ColorSequenceKeypoint.new(1, window.theme.accentcolor2)})
				updateevent.Event:Connect(function(theme)
					slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor), ColorSequenceKeypoint.new(1, theme.accentcolor2)})
				end)

				slider.BlackOutline2.MouseEnter:Connect(function()
					slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				slider.BlackOutline2.MouseLeave:Connect(function()
					slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				if slider.flag and slider.flag ~= """" then
					library.flags[slider.flag] = slider.default or slider.min or 0
				end

				function slider:Get()
					return slider.value
				end

				function slider:Set(value)
					slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
					local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
					if slider.flag and slider.flag ~= """" then
						library.flags[slider.flag] = slider.value
					end
					slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					slider.InputLabel.Text = slider.value
					pcall(slider.callback, slider.value)
				end
				slider:Set(slider.default)

				slider.InputLabel.FocusLost:Connect(function(Return)
					if not Return then
						return 
					end

					if (slider.InputLabel.Text:match(""^%d + $"")) then
						slider:Set(slider.InputLabel.Text)
					else
						slider.InputLabel.Text = slider.value
					end
				end)

				function slider:Refresh()
					local mousepos = game:GetService(""Workspace"").CurrentCamera:WorldToViewportPoint(mouse.Hit.p)
					local percent = math.clamp(mousepos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
					local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
					value = math.clamp(value, slider.min, slider.max)
					slider:Set(value)
				end

				slider.SlideBar.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
						slider:Refresh()
					end
				end)

				slider.SlideBar.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end)

				slider.Main.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
						slider:Refresh()
					end
				end)

				slider.Main.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end)

				uis.InputChanged:Connect(function(input)
					if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						slider:Refresh()
					end
				end)

				sector:FixSize()
				table.insert(library.items, slider)
				return slider
			end

			function sector:AddColorpicker(text, default, callback, flag)
				local colorpicker = {}

				colorpicker.text = text or """"
				colorpicker.callback = callback or function() end
				colorpicker.default = default or Color3.fromRGB(255, 255, 255)
				colorpicker.value = colorpicker.default
				colorpicker.flag = flag or text or """"

				colorpicker.Label = Instance.new(""TextLabel"", sector.Items)
				colorpicker.Label.BackgroundTransparency = 1
				colorpicker.Label.Size = UDim2.fromOffset(156, 10)
				colorpicker.Label.ZIndex = 4
				colorpicker.Label.Font = window.theme.font
				colorpicker.Label.Text = colorpicker.text
				colorpicker.Label.TextColor3 = window.theme.itemscolor
				colorpicker.Label.TextSize = 15
				colorpicker.Label.TextStrokeTransparency = 1
				colorpicker.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					colorpicker.Label.Font = theme.font
					colorpicker.Label.TextColor3 = theme.itemscolor
				end)

				colorpicker.Main = Instance.new(""Frame"", colorpicker.Label)
				colorpicker.Main.ZIndex = 6
				colorpicker.Main.BorderSizePixel = 0
				colorpicker.Main.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 29, 0)
				colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				colorpicker.Main.Size = UDim2.fromOffset(16, 10)

				colorpicker.Gradient = Instance.new(""UIGradient"", colorpicker.Main)
				colorpicker.Gradient.Rotation = 90

				local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
				colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, colorpicker.value), ColorSequenceKeypoint.new(1, clr)})

				colorpicker.BlackOutline2 = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.BlackOutline2.Name = ""blackline""
				colorpicker.BlackOutline2.ZIndex = 4
				colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
				colorpicker.BlackOutline2.BorderSizePixel = 0
				colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline2.BackgroundColor3 = window.OpenedColorPickers[colorpicker.MainPicker] and theme.accentcolor or theme.outlinecolor2
				end)

				colorpicker.Outline = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.Outline.Name = ""blackline""
				colorpicker.Outline.ZIndex = 4
				colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
				colorpicker.Outline.BorderSizePixel = 0
				colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
				colorpicker.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				colorpicker.BlackOutline = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.BlackOutline.Name = ""blackline""
				colorpicker.BlackOutline.ZIndex = 4
				colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
				colorpicker.BlackOutline.BorderSizePixel = 0
				colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.BlackOutline2.MouseEnter:Connect(function()
					colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				colorpicker.BlackOutline2.MouseLeave:Connect(function()
					if not window.OpenedColorPickers[colorpicker.MainPicker] then
						colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end
				end)

				colorpicker.MainPicker = Instance.new(""TextButton"", colorpicker.Main)
				colorpicker.MainPicker.Name = ""picker""
				colorpicker.MainPicker.ZIndex = 100
				colorpicker.MainPicker.Visible = false
				colorpicker.MainPicker.AutoButtonColor = false
				colorpicker.MainPicker.Text = """"
				window.OpenedColorPickers[colorpicker.MainPicker] = false
				colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
				colorpicker.MainPicker.BorderSizePixel = 0
				colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				colorpicker.MainPicker.Rotation = 0
				colorpicker.MainPicker.Position = UDim2.fromOffset(- colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 15)

				colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.BlackOutline3.Name = ""blackline""
				colorpicker.BlackOutline3.ZIndex = 98
				colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
				colorpicker.BlackOutline3.BorderSizePixel = 0
				colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.Outline2 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.Outline2.Name = ""blackline""
				colorpicker.Outline2.ZIndex = 98
				colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
				colorpicker.Outline2.BorderSizePixel = 0
				colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
				colorpicker.Outline2.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
				end)

				colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.BlackOutline3.Name = ""blackline""
				colorpicker.BlackOutline3.ZIndex = 98
				colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
				colorpicker.BlackOutline3.BorderSizePixel = 0
				colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.hue = Instance.new(""ImageLabel"", colorpicker.MainPicker)
				colorpicker.hue.ZIndex = 101
				colorpicker.hue.Position = UDim2.new(0, 3, 0, 3)
				colorpicker.hue.Size = UDim2.new(0, 172, 0, 172)
				colorpicker.hue.Image = ""rbxassetid://4155801252""
				colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
				colorpicker.hue.BackgroundColor3 = Color3.new(1, 0, 0)
				colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
				updateevent.Event:Connect(function(theme)
					colorpicker.hue.BorderColor3 = theme.outlinecolor2
				end)

				colorpicker.hueselectorpointer = Instance.new(""ImageLabel"", colorpicker.MainPicker)
				colorpicker.hueselectorpointer.ZIndex = 101
				colorpicker.hueselectorpointer.BackgroundTransparency = 1
				colorpicker.hueselectorpointer.BorderSizePixel = 0
				colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
				colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
				colorpicker.hueselectorpointer.Image = ""rbxassetid://6885856475""

				colorpicker.selector = Instance.new(""TextLabel"", colorpicker.MainPicker)
				colorpicker.selector.ZIndex = 100
				colorpicker.selector.Position = UDim2.new(0, 3, 0, 181)
				colorpicker.selector.Size = UDim2.new(0, 173, 0, 10)
				colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
				colorpicker.selector.Text = """"
				updateevent.Event:Connect(function(theme)
					colorpicker.selector.BorderColor3 = theme.outlinecolor2
				end)

				colorpicker.gradient = Instance.new(""UIGradient"", colorpicker.selector)
				colorpicker.gradient.Color = ColorSequence.new({
					ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)), 
					ColorSequenceKeypoint.new(0.17, Color3.new(1, 0, 1)), 
					ColorSequenceKeypoint.new(0.33, Color3.new(0, 0, 1)), 
					ColorSequenceKeypoint.new(0.5, Color3.new(0, 1, 1)), 
					ColorSequenceKeypoint.new(0.67, Color3.new(0, 1, 0)), 
					ColorSequenceKeypoint.new(0.83, Color3.new(1, 1, 0)), 
					ColorSequenceKeypoint.new(1, Color3.new(1, 0, 0))
				})

				colorpicker.pointer = Instance.new(""Frame"", colorpicker.selector)
				colorpicker.pointer.ZIndex = 101
				colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				colorpicker.pointer.Position = UDim2.new(0, 0, 0, 0)
				colorpicker.pointer.Size = UDim2.new(0, 2, 0, 10)
				colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

				if colorpicker.flag and colorpicker.flag ~= """" then
					library.flags[colorpicker.flag] = colorpicker.default
				end

				function colorpicker:RefreshSelector()
					local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
					colorpicker.color = 1 - pos
					colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)
				end

				function colorpicker:RefreshHue()
					local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
					local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
					colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
				end

				function colorpicker:Set(value)
					local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
					colorpicker.value = color

					if colorpicker.flag and colorpicker.flag ~= """" then
						library.flags[colorpicker.flag] = color
					end

					local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
					colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, color), ColorSequenceKeypoint.new(1, clr)})
					pcall(colorpicker.callback, color)
				end

				function colorpicker:Get()
					return colorpicker.value
				end

				colorpicker:Set(colorpicker.default)

				function colorpicker:AddDropdown(items, default, multichoice, callback, flag)
					local dropdown = {}

					dropdown.defaultitems = items or {}
					dropdown.default = default
					dropdown.callback = callback or function() end
					dropdown.multichoice = multichoice or false
					dropdown.values = {}
					dropdown.flag = flag or ((colorpicker.text or """") .. #sector.Items:GetChildren())

					dropdown.Main = Instance.new(""TextButton"", sector.Items)
					dropdown.Main.Name = ""dropdown""
					dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.BorderSizePixel = 0
					dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
					dropdown.Main.Position = UDim2.fromOffset(0, 0)
					dropdown.Main.ZIndex = 5
					dropdown.Main.AutoButtonColor = false
					dropdown.Main.Font = window.theme.font
					dropdown.Main.Text = """"
					dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.TextSize = 15
					dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.Main.Font = theme.font
					end)

					dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
					dropdown.Gradient.Rotation = 90
					dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

					dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
					dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.BackgroundTransparency = 1
					dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
					dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
					dropdown.SelectedLabel.Font = window.theme.font
					dropdown.SelectedLabel.Text = colorpicker.text
					dropdown.SelectedLabel.ZIndex = 5
					dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.TextSize = 15
					dropdown.SelectedLabel.TextStrokeTransparency = 1
					dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.SelectedLabel.Font = theme.font
					end)

					dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
					dropdown.Nav.Name = ""navigation""
					dropdown.Nav.BackgroundTransparency = 1
					dropdown.Nav.LayoutOrder = 10
					dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
					dropdown.Nav.Rotation = 90
					dropdown.Nav.ZIndex = 5
					dropdown.Nav.Size = UDim2.fromOffset(8, 8)
					dropdown.Nav.Image = ""rbxassetid://4918373417""
					dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

					dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2.Name = ""blackline""
					dropdown.BlackOutline2.ZIndex = 4
					dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2.BorderSizePixel = 0
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
					dropdown.Outline.Name = ""blackline""
					dropdown.Outline.ZIndex = 4
					dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
					dropdown.Outline.BorderSizePixel = 0
					dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
					dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						dropdown.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline.Name = ""blackline""
					dropdown.BlackOutline.ZIndex = 4
					dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline.BorderSizePixel = 0
					dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
					dropdown.ItemsFrame.Name = ""itemsframe""
					dropdown.ItemsFrame.BorderSizePixel = 0
					dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.ItemsFrame.ScrollBarThickness = 2
					dropdown.ItemsFrame.ZIndex = 8
					dropdown.ItemsFrame.ScrollingDirection = ""Y""
					dropdown.ItemsFrame.Visible = false
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

					dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
					dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
					dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

					dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
					dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
					dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
					dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
					dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

					dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2Items.Name = ""blackline""
					dropdown.BlackOutline2Items.ZIndex = 7
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2Items.BorderSizePixel = 0
					dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
					dropdown.BlackOutline2Items.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.OutlineItems.Name = ""blackline""
					dropdown.OutlineItems.ZIndex = 7
					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.OutlineItems.BorderSizePixel = 0
					dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
					dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
					dropdown.OutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutlineItems.Name = ""blackline""
					dropdown.BlackOutlineItems.ZIndex = 7
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
					dropdown.BlackOutlineItems.BorderSizePixel = 0
					dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
					dropdown.BlackOutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
					dropdown.IgnoreBackButtons.BackgroundTransparency = 1
					dropdown.IgnoreBackButtons.BorderSizePixel = 0
					dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
					dropdown.IgnoreBackButtons.ZIndex = 7
					dropdown.IgnoreBackButtons.Text = """"
					dropdown.IgnoreBackButtons.Visible = false
					dropdown.IgnoreBackButtons.AutoButtonColor = false

					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
					end

					function dropdown:isSelected(item)
						for i, v in pairs(dropdown.values) do
							if v == item then
								return true
							end
						end

						return false
					end

					function dropdown:updateText(text)
						if #text >= 27 then
							text = text:sub(1, 25) .. ""..""
						end
						dropdown.SelectedLabel.Text = text
					end

					dropdown.Changed = Instance.new(""BindableEvent"")
					function dropdown:Set(value)
						if type(value) == ""table"" then
							dropdown.values = value
							dropdown:updateText(table.concat(value, "", ""))
							pcall(dropdown.callback, value)
						else
							dropdown:updateText(value)
							dropdown.values = {value}
							pcall(dropdown.callback, value)
						end

						dropdown.Changed:Fire(value)
						if dropdown.flag and dropdown.flag ~= """" then
							library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
						end
					end

					function dropdown:Get()
						return dropdown.multichoice and dropdown.values or dropdown.values[1]
					end

					dropdown.items = {}
					function dropdown:Add(v)
						local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
						Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						Item.TextColor3 = Color3.fromRGB(255, 255, 255)
						Item.BorderSizePixel = 0
						Item.Position = UDim2.fromOffset(0, 0)
						Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
						Item.ZIndex = 9
						Item.Text = v
						Item.Name = v
						Item.AutoButtonColor = false
						Item.Font = window.theme.font
						Item.TextSize = 15
						Item.TextXAlignment = Enum.TextXAlignment.Left
						Item.TextStrokeTransparency = 1
						dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

						Item.MouseButton1Down:Connect(function()
							if dropdown.multichoice then
								if dropdown:isSelected(v) then
									for i2, v2 in pairs(dropdown.values) do
										if v2 == v then
											table.remove(dropdown.values, i2)
										end
									end
									dropdown:Set(dropdown.values)
								else
									table.insert(dropdown.values, v)
									dropdown:Set(dropdown.values)
								end

								return
							else
								dropdown.Nav.Rotation = 90
								dropdown.ItemsFrame.Visible = false
								dropdown.ItemsFrame.Active = false
								dropdown.OutlineItems.Visible = false
								dropdown.BlackOutlineItems.Visible = false
								dropdown.BlackOutline2Items.Visible = false
								dropdown.IgnoreBackButtons.Visible = false
								dropdown.IgnoreBackButtons.Active = false
							end

							dropdown:Set(v)

							return
						end)

						runservice.RenderStepped:Connect(function()
							if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
								Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
								Item.TextColor3 = window.theme.accentcolor
								Item.Text = "" "" .. v
							else
								Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
								Item.TextColor3 = Color3.fromRGB(255, 255, 255)
								Item.Text = v
							end
						end)

						table.insert(dropdown.items, v)
						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
					end

					function dropdown:Remove(value)
						local item = dropdown.ItemsFrame:FindFirstChild(value)
						if item then
							for i, v in pairs(dropdown.items) do
								if v == value then
									table.remove(dropdown.items, i)
								end
							end

							dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
							dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

							dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
							dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
							dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
							dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

							item:Remove()
						end
					end

					for i, v in pairs(dropdown.defaultitems) do
						dropdown:Add(v)
					end

					if dropdown.default then
						dropdown:Set(dropdown.default)
					end

					local MouseButton1Down = function()
						if dropdown.Nav.Rotation == 90 then
							dropdown.ItemsFrame.ScrollingEnabled = true
							sector.Main.Parent.ScrollingEnabled = false
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
							dropdown.ItemsFrame.Visible = true
							dropdown.ItemsFrame.Active = true
							dropdown.IgnoreBackButtons.Visible = true
							dropdown.IgnoreBackButtons.Active = true
							dropdown.OutlineItems.Visible = true
							dropdown.BlackOutlineItems.Visible = true
							dropdown.BlackOutline2Items.Visible = true
						else
							dropdown.ItemsFrame.ScrollingEnabled = false
							sector.Main.Parent.ScrollingEnabled = true
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
						end
					end

					dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
					dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

					dropdown.BlackOutline2.MouseEnter:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					dropdown.BlackOutline2.MouseLeave:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, dropdown)

					return dropdown
				end

				local dragging_selector = false
				local dragging_hue = false

				colorpicker.selector.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_selector = true
						colorpicker:RefreshSelector()
					end
				end)

				colorpicker.selector.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_selector = false
						colorpicker:RefreshSelector()
					end
				end)

				colorpicker.hue.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_hue = true
						colorpicker:RefreshHue()
					end
				end)

				colorpicker.hue.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_hue = false
						colorpicker:RefreshHue()
					end
				end)

				uis.InputChanged:Connect(function(input)
					if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
						colorpicker:RefreshSelector()
					end
					if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
						colorpicker:RefreshHue()
					end
				end)

				local inputBegan = function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						for i, v in pairs(window.OpenedColorPickers) do
							if v and i ~= colorpicker.MainPicker then
								i.Visible = false
								window.OpenedColorPickers[i] = false
							end
						end

						colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
						window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
						if window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
						else
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
						end
					end
				end

				colorpicker.Main.InputBegan:Connect(inputBegan)
				colorpicker.Outline.InputBegan:Connect(inputBegan)
				colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)

				sector:FixSize()
				table.insert(library.items, colorpicker)

				return colorpicker
			end

			function sector:AddKeybind(text, default, newkeycallback, callback, flag)
				local keybind = {}

				keybind.text = text or """"
				keybind.default = default or ""None""
				keybind.callback = callback or function() end
				keybind.newkeycallback = newkeycallback or function(key) end
				keybind.flag = flag or text or """"

				keybind.value = keybind.default

				keybind.Main = Instance.new(""TextLabel"", sector.Items)
				keybind.Main.BackgroundTransparency = 1
				keybind.Main.Size = UDim2.fromOffset(156, 10)
				keybind.Main.ZIndex = 4
				keybind.Main.Font = window.theme.font
				keybind.Main.Text = keybind.text
				keybind.Main.TextColor3 = window.theme.itemscolor
				keybind.Main.TextSize = 15
				keybind.Main.TextStrokeTransparency = 1
				keybind.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					keybind.Main.Font = theme.font
					keybind.Main.TextColor3 = theme.itemscolor
				end)

				keybind.Bind = Instance.new(""TextButton"", keybind.Main)
				keybind.Bind.Name = ""keybind""
				keybind.Bind.BackgroundTransparency = 1
				keybind.Bind.BorderColor3 = window.theme.outlinecolor
				keybind.Bind.ZIndex = 5
				keybind.Bind.BorderSizePixel = 0
				keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10, 0)
				keybind.Bind.Font = window.theme.font
				keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
				keybind.Bind.TextSize = 15
				keybind.Bind.TextXAlignment = Enum.TextXAlignment.Right
				keybind.Bind.MouseButton1Down:Connect(function()
					keybind.Bind.Text = ""[...]""
					keybind.Bind.TextColor3 = window.theme.accentcolor
				end)
				updateevent.Event:Connect(function(theme)
					keybind.Bind.BorderColor3 = theme.outlinecolor
					keybind.Bind.Font = theme.font
				end)

				if keybind.flag and keybind.flag ~= """" then
					library.flags[keybind.flag] = keybind.default
				end

				local shorter_keycodes = {
					[""LeftShift""] = ""LSHIFT"", 
					[""RightShift""] = ""RSHIFT"", 
					[""LeftControl""] = ""LCTRL"", 
					[""RightControl""] = ""RCTRL"", 
					[""LeftAlt""] = ""LALT"", 
					[""RightAlt""] = ""RALT""
				}

				function keybind:Set(value)
					if value == ""None"" then
						keybind.value = value
						keybind.Bind.Text = ""["" .. value .. ""]""

						local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
						keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
						keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
						if keybind.flag and keybind.flag ~= """" then
							library.flags[keybind.flag] = value
						end
						pcall(keybind.newkeycallback, value)
					end

					keybind.value = value
					keybind.Bind.Text = ""["" .. (shorter_keycodes[value.Name or value] or (value.Name or value)) .. ""]""

					local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
					keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
					keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
					if keybind.flag and keybind.flag ~= """" then
						library.flags[keybind.flag] = value
					end
					pcall(keybind.newkeycallback, value)
				end
				keybind:Set(keybind.default and keybind.default or ""None"")

				function keybind:Get()
					return keybind.value
				end

				uis.InputBegan:Connect(function(input, gameProcessed)
					if not gameProcessed then
						if keybind.Bind.Text == ""[...]"" then
							keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
							if input.UserInputType == Enum.UserInputType.Keyboard then
								keybind:Set(input.KeyCode)
							else
								keybind:Set(""None"")
							end
						else
							if keybind.value ~= ""None"" and input.KeyCode == keybind.value then
								pcall(keybind.callback)
							end
						end
					end
				end)

				sector:FixSize()
				table.insert(library.items, keybind)

				return keybind
			end

			function sector:AddDropdown(text, items, default, multichoice, callback, flag)
				local dropdown = {}

				dropdown.text = text or """"
				dropdown.defaultitems = items or {}
				dropdown.default = default
				dropdown.callback = callback or function() end
				dropdown.multichoice = multichoice or false
				dropdown.values = {}
				dropdown.flag = flag or text or """"

				dropdown.MainBack = Instance.new(""Frame"", sector.Items)
				dropdown.MainBack.Name = ""backlabel""
				dropdown.MainBack.ZIndex = 7
				dropdown.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 34)
				dropdown.MainBack.BorderSizePixel = 0
				dropdown.MainBack.BackgroundTransparency = 1

				dropdown.Label = Instance.new(""TextLabel"", dropdown.MainBack)
				dropdown.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Label.BackgroundTransparency = 1
				dropdown.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
				dropdown.Label.Position = UDim2.fromOffset(0, 0)
				dropdown.Label.Font = window.theme.font
				dropdown.Label.Text = dropdown.text
				dropdown.Label.ZIndex = 4
				dropdown.Label.TextColor3 = window.theme.itemscolor
				dropdown.Label.TextSize = 15
				dropdown.Label.TextStrokeTransparency = 1
				dropdown.Label.TextXAlignment = Enum.TextXAlignment.Left

				updateevent.Event:Connect(function(theme)
					dropdown.Label.Font = theme.font
					dropdown.Label.TextColor3 = theme.itemscolor
				end)

				dropdown.Main = Instance.new(""TextButton"", dropdown.MainBack)
				dropdown.Main.Name = ""dropdown""
				dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Main.BorderSizePixel = 0
				dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
				dropdown.Main.Position = UDim2.fromOffset(0, 17)
				dropdown.Main.ZIndex = 5
				dropdown.Main.AutoButtonColor = false
				dropdown.Main.Font = window.theme.font
				dropdown.Main.Text = """"
				dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Main.TextSize = 15
				dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					dropdown.Main.Font = theme.font
				end)

				dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
				dropdown.Gradient.Rotation = 90
				dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

				dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
				dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.SelectedLabel.BackgroundTransparency = 1
				dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
				dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
				dropdown.SelectedLabel.Font = window.theme.font
				dropdown.SelectedLabel.Text = dropdown.text
				dropdown.SelectedLabel.ZIndex = 5
				dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.SelectedLabel.TextSize = 15
				dropdown.SelectedLabel.TextStrokeTransparency = 1
				dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					dropdown.SelectedLabel.Font = theme.font
				end)

				dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
				dropdown.Nav.Name = ""navigation""
				dropdown.Nav.BackgroundTransparency = 1
				dropdown.Nav.LayoutOrder = 10
				dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
				dropdown.Nav.Rotation = 90
				dropdown.Nav.ZIndex = 5
				dropdown.Nav.Size = UDim2.fromOffset(8, 8)
				dropdown.Nav.Image = ""rbxassetid://4918373417""
				dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

				dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline2.Name = ""blackline""
				dropdown.BlackOutline2.ZIndex = 4
				dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
				dropdown.BlackOutline2.BorderSizePixel = 0
				dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
				dropdown.Outline.Name = ""blackline""
				dropdown.Outline.ZIndex = 4
				dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
				dropdown.Outline.BorderSizePixel = 0
				dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
				dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					dropdown.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline.Name = ""blackline""
				dropdown.BlackOutline.ZIndex = 4
				dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
				dropdown.BlackOutline.BorderSizePixel = 0
				dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
				dropdown.ItemsFrame.Name = ""itemsframe""
				dropdown.ItemsFrame.BorderSizePixel = 0
				dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
				dropdown.ItemsFrame.ScrollBarThickness = 2
				dropdown.ItemsFrame.ZIndex = 8
				dropdown.ItemsFrame.ScrollingDirection = ""Y""
				dropdown.ItemsFrame.Visible = false
				dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

				dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
				dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
				dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

				dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
				dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
				dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
				dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
				dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

				dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline2Items.Name = ""blackline""
				dropdown.BlackOutline2Items.ZIndex = 7
				dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
				dropdown.BlackOutline2Items.BorderSizePixel = 0
				dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
				dropdown.BlackOutline2Items.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
				dropdown.OutlineItems.Name = ""blackline""
				dropdown.OutlineItems.ZIndex = 7
				dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
				dropdown.OutlineItems.BorderSizePixel = 0
				dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
				dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
				dropdown.OutlineItems.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
				end)

				dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutlineItems.Name = ""blackline""
				dropdown.BlackOutlineItems.ZIndex = 7
				dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
				dropdown.BlackOutlineItems.BorderSizePixel = 0
				dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
				dropdown.BlackOutlineItems.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
				dropdown.IgnoreBackButtons.BackgroundTransparency = 1
				dropdown.IgnoreBackButtons.BorderSizePixel = 0
				dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
				dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
				dropdown.IgnoreBackButtons.ZIndex = 7
				dropdown.IgnoreBackButtons.Text = """"
				dropdown.IgnoreBackButtons.Visible = false
				dropdown.IgnoreBackButtons.AutoButtonColor = false

				if dropdown.flag and dropdown.flag ~= """" then
					library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
				end

				function dropdown:isSelected(item)
					for i, v in pairs(dropdown.values) do
						if v == item then
							return true
						end
					end

					return false
				end

				function dropdown:GetOptions()
					return dropdown.values
				end

				function dropdown:updateText(text)
					if #text >= 27 then
						text = text:sub(1, 25) .. ""..""
					end
					dropdown.SelectedLabel.Text = text
				end

				dropdown.Changed = Instance.new(""BindableEvent"")
				function dropdown:Set(value)
					if type(value) == ""table"" then
						dropdown.values = value
						dropdown:updateText(table.concat(value, "", ""))
						pcall(dropdown.callback, value)
					else
						dropdown:updateText(value)
						dropdown.values = {value}
						pcall(dropdown.callback, value)
					end

					dropdown.Changed:Fire(value)
					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
					end
				end

				function dropdown:Get()
					return dropdown.multichoice and dropdown.values or dropdown.values[1]
				end

				dropdown.items = {}
				function dropdown:Add(v)
					local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
					Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					Item.TextColor3 = Color3.fromRGB(255, 255, 255)
					Item.BorderSizePixel = 0
					Item.Position = UDim2.fromOffset(0, 0)
					Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
					Item.ZIndex = 9
					Item.Text = v
					Item.Name = v
					Item.AutoButtonColor = false
					Item.Font = window.theme.font
					Item.TextSize = 15
					Item.TextXAlignment = Enum.TextXAlignment.Left
					Item.TextStrokeTransparency = 1
					dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

					Item.MouseButton1Down:Connect(function()
						if dropdown.multichoice then
							if dropdown:isSelected(v) then
								for i2, v2 in pairs(dropdown.values) do
									if v2 == v then
										table.remove(dropdown.values, i2)
									end
								end
								dropdown:Set(dropdown.values)
							else
								table.insert(dropdown.values, v)
								dropdown:Set(dropdown.values)
							end

							return
						else
							dropdown.Nav.Rotation = 90
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
						end

						dropdown:Set(v)

						return
					end)

					runservice.RenderStepped:Connect(function()
						if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
							Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
							Item.TextColor3 = window.theme.accentcolor
							Item.Text = "" "" .. v
						else
							Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
							Item.TextColor3 = Color3.fromRGB(255, 255, 255)
							Item.Text = v
						end
					end)

					table.insert(dropdown.items, v)
					dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
				end

				function dropdown:Remove(value)
					local item = dropdown.ItemsFrame:FindFirstChild(value)
					if item then
						for i, v in pairs(dropdown.items) do
							if v == value then
								table.remove(dropdown.items, i)
							end
						end

						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

						item:Remove()
					end
				end

				for i, v in pairs(dropdown.defaultitems) do
					dropdown:Add(v)
				end

				if dropdown.default then
					dropdown:Set(dropdown.default)
				end

				local MouseButton1Down = function()
					if dropdown.Nav.Rotation == 90 then
						tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
						if dropdown.items and #dropdown.items ~= 0 then
							dropdown.ItemsFrame.ScrollingEnabled = true
							sector.Main.Parent.ScrollingEnabled = false
							dropdown.ItemsFrame.Visible = true
							dropdown.ItemsFrame.Active = true
							dropdown.IgnoreBackButtons.Visible = true
							dropdown.IgnoreBackButtons.Active = true
							dropdown.OutlineItems.Visible = true
							dropdown.BlackOutlineItems.Visible = true
							dropdown.BlackOutline2Items.Visible = true
						end
					else
						tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
						dropdown.ItemsFrame.ScrollingEnabled = false
						sector.Main.Parent.ScrollingEnabled = true
						dropdown.ItemsFrame.Visible = false
						dropdown.ItemsFrame.Active = false
						dropdown.IgnoreBackButtons.Visible = false
						dropdown.IgnoreBackButtons.Active = false
						dropdown.OutlineItems.Visible = false
						dropdown.BlackOutlineItems.Visible = false
						dropdown.BlackOutline2Items.Visible = false
					end
				end

				dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
				dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

				dropdown.BlackOutline2.MouseEnter:Connect(function()
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				dropdown.BlackOutline2.MouseLeave:Connect(function()
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()
				table.insert(library.items, dropdown)

				return dropdown
			end

			function sector:AddSeperator(text)
				local seperator = {}
				seperator.text = text or """"

				seperator.main = Instance.new(""Frame"", sector.Items)
				seperator.main.Name = ""Main""
				seperator.main.ZIndex = 5
				seperator.main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
				seperator.main.BorderSizePixel = 0
				seperator.main.BackgroundTransparency = 1

				seperator.line = Instance.new(""Frame"", seperator.main)
				seperator.line.Name = ""Line""
				seperator.line.ZIndex = 7
				seperator.line.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
				seperator.line.BorderSizePixel = 0
				seperator.line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 1)
				seperator.line.Position = UDim2.fromOffset(7, 5)

				seperator.outline = Instance.new(""Frame"", seperator.line)
				seperator.outline.Name = ""Outline""
				seperator.outline.ZIndex = 6
				seperator.outline.BorderSizePixel = 0
				seperator.outline.BackgroundColor3 = window.theme.outlinecolor2
				seperator.outline.Position = UDim2.fromOffset(- 1, - 1)
				seperator.outline.Size = seperator.line.Size - UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					seperator.outline.BackgroundColor3 = theme.outlinecolor2
				end)

				seperator.label = Instance.new(""TextLabel"", seperator.main)
				seperator.label.Name = ""Label""
				seperator.label.BackgroundTransparency = 1
				seperator.label.Size = seperator.main.Size
				seperator.label.Font = window.theme.font
				seperator.label.ZIndex = 8
				seperator.label.Text = seperator.text
				seperator.label.TextColor3 = Color3.fromRGB(255, 255, 255)
				seperator.label.TextSize = window.theme.fontsize
				seperator.label.TextStrokeTransparency = 1
				seperator.label.TextXAlignment = Enum.TextXAlignment.Center
				updateevent.Event:Connect(function(theme)
					seperator.label.Font = theme.font
					seperator.label.TextSize = theme.fontsize
				end)

				local textSize = textservice:GetTextSize(seperator.text, window.theme.fontsize, window.theme.font, Vector2.new(2000, 2000))
				local textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

				sector.LabelBackFrame = Instance.new(""Frame"", seperator.main)
				sector.LabelBackFrame.Name = ""LabelBack""
				sector.LabelBackFrame.ZIndex = 7
				sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
				sector.LabelBackFrame.BorderSizePixel = 0
				sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
				updateevent.Event:Connect(function(theme)
					textSize = textservice:GetTextSize(seperator.text, theme.fontsize, theme.font, Vector2.new(2000, 2000))
					textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

					sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
					sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
				end)

				sector:FixSize()

				return seperator
			end

			return sector
		end

		function tab:CreateConfigSystem(name, side)
			local configsystem = {}

			configsystem.configFolder = window.name .. "" / "" .. game[""PlaceId""]
			if (not isfolder(configsystem.configFolder)) then
				makefolder(configsystem.configFolder)
			end

			configsystem.sector = tab:CreateSector(name or ""Config System"", side or ""left"")

			local configname = configsystem.sector:AddTextbox(""Config Name"", """", configname, function() end, """")
			local default = (listfiles(configsystem.configFolder)[1] or """"):gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """")
			local config = configsystem.sector:AddDropdown(""Configs"", {}, default, false, function() end, """")
			for i, v in pairs(listfiles(configsystem.configFolder)) do
				if v:find("".txt"") then
					config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end
			end

			configsystem.Create = configsystem.sector:AddButton(""Create"", function()
				for i, v in pairs(listfiles(configsystem.configFolder)) do
					config:Remove(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end

				if configname:Get() and configname:Get() ~= """" then
					local config2 = {}

					for i, v in pairs(library.flags) do
						if (v and v ~= """") then
							if (typeof(v) == ""Color3"") then
								config2[i] = {v.R, v.G, v.B}
							elseif (v:find(""Enum.KeyCode"")) then
								config2[i] = v.Name
							elseif (typeof(v) == ""table"") then
								config2[i] = {v}
							else
								config2[i] = v
							end
						end
					end

					writefile(configsystem.configFolder .. "" / "" .. configname:Get() .. "".txt"", httpservice:JSONEncode(config2))

					for i, v in pairs(listfiles(configsystem.configFolder)) do
						if v:find("".txt"") then
							config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
						end
					end
				end
			end)

			configsystem.Save = configsystem.sector:AddButton(""Save"", function()
				local config = {}
				if config:Get() and config:Get() ~= """" then
					for i, v in pairs(library.flags) do
						if (v ~= nil and v ~= """") then
							if (typeof(v) == ""Color3"") then
								config[i] = {v.R, v.G, v.B}
							elseif (v:find(""Enum.KeyCode"")) then
								config[i] = ""Enum.KeyCode."" .. v.Name
							elseif (typeof(v) == ""table"") then
								config[i] = {v}
							else
								config[i] = v
							end
						end
					end

					writefile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"", httpservice:JSONEncode(config))
				end
			end)

			configsystem.Load = configsystem.sector:AddButton(""Load"", function()
				local success = pcall(readfile, configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")
				if (success) then
					pcall(function()
						local readconfig = httpservice:JSONDecode(readfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt""))
						local newconfig = {}

						for i, v in pairs(readconfig) do
							if (typeof(v) == ""table"") then
								if (typeof(v[1]) == ""number"") then
									newconfig[i] = Color3.new(v[1], v[2], v[3])
								elseif (typeof(v[1]) == ""table"") then
									newconfig[i] = v[1]
								end
							elseif (v:find(""Enum.KeyCode."")) then
								newconfig[i] = Enum.KeyCode[v:gsub(""Enum.KeyCode."", """")]
							else
								newconfig[i] = v
							end
						end

						library.flags = newconfig

						for i, v in pairs(library.flags) do
							for i2, v2 in pairs(library.items) do
								if (i ~= nil and i ~= """" and i ~= ""Configs_Name"" and i ~= ""Configs"" and v2.flag) then
									if (v2.flag == i) then
										pcall(function()
											v2:Set(v)
										end)
									end
								end
							end
						end
					end)
				end
			end)

			configsystem.Delete = configsystem.sector:AddButton(""Delete"", function()
				for i, v in pairs(listfiles(configsystem.configFolder)) do
					config:Remove(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end

				if (not config:Get() or config:Get() == """") then return end
				if (not isfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")) then return end
				delfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")

				for i, v in pairs(listfiles(configsystem.configFolder)) do
					if v:find("".txt"") then
						config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
					end
				end
			end)

			return configsystem
		end

		table.insert(window.Tabs, tab)

		return tab
	end

	return window
end

function library:CreateWatermark(name, position)
	local gamename = game:GetService(""MarketplaceService""):GetProductInfo(game[""PlaceId""]).Name
	local watermark = {}
	watermark.Visible = true
	watermark.text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", ""0 FPS"") .. "" ""

	watermark.main = Instance.new(""ScreenGui"", coregui)
	watermark.main.Name = ""Watermark""

	if syn then
		syn.protect_gui(watermark.main)
	end

	watermark.mainbar = Instance.new(""Frame"", watermark.main)
	watermark.mainbar.Name = ""Main""
	watermark.mainbar.BorderColor3 = Color3.fromRGB(80, 80, 80)
	watermark.mainbar.Visible = watermark.Visible
	watermark.mainbar.BorderSizePixel = 0
	watermark.mainbar.ZIndex = 5
	watermark.mainbar.Position = UDim2.new(0, position and position.X or 10, 0, position and position.Y or 10)
	watermark.mainbar.Size = UDim2.new(0, 0, 0, 25)

	watermark.Gradient = Instance.new(""UIGradient"", watermark.mainbar)
	watermark.Gradient.Rotation = 90
	watermark.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10))})

	watermark.Outline = Instance.new(""Frame"", watermark.mainbar)
	watermark.Outline.Name = ""outline""
	watermark.Outline.ZIndex = 4
	watermark.Outline.BorderSizePixel = 0
	watermark.Outline.Visible = watermark.Visible
	watermark.Outline.BackgroundColor3 = library.theme.outlinecolor
	watermark.Outline.Position = UDim2.fromOffset(- 1, - 1)

	watermark.BlackOutline = Instance.new(""Frame"", watermark.mainbar)
	watermark.BlackOutline.Name = ""blackline""
	watermark.BlackOutline.ZIndex = 3
	watermark.BlackOutline.BorderSizePixel = 0
	watermark.BlackOutline.BackgroundColor3 = library.theme.outlinecolor2
	watermark.BlackOutline.Visible = watermark.Visible
	watermark.BlackOutline.Position = UDim2.fromOffset(- 2, - 2)

	watermark.label = Instance.new(""TextLabel"", watermark.mainbar)
	watermark.label.Name = ""FPSLabel""
	watermark.label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	watermark.label.BackgroundTransparency = 10
	watermark.label.Position = UDim2.new(0, 0, 0, 0)
	watermark.label.Size = UDim2.new(0, 238, 0, 25)
	watermark.label.Font = library.theme.font
	watermark.label.ZIndex = 6
	watermark.label.Visible = watermark.Visible
	watermark.label.Text = watermark.text
	watermark.label.TextColor3 = Color3.fromRGB(255, 255, 255)
	watermark.label.TextSize = 15
	watermark.label.TextStrokeTransparency = 0
	watermark.label.TextXAlignment = Enum.TextXAlignment.Left
	watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 10, 0, 25)

	watermark.topbar = Instance.new(""Frame"", watermark.mainbar)
	watermark.topbar.Name = ""TopBar""
	watermark.topbar.ZIndex = 6
	watermark.topbar.BackgroundColor3 = library.theme.accentcolor
	watermark.topbar.BorderSizePixel = 0
	watermark.topbar.Visible = watermark.Visible
	watermark.topbar.Size = UDim2.new(0, 0, 0, 1)

	watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
	watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 6, 0, 1)
	watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
	watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

	watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 4, 0, 25)
	watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 4, 0, 25)
	watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 6, 0, 1)
	watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
	watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

	local starttime, counter, oldfps = os.clock(), 0, nil
	runservice.Heartbeat:Connect(function()
		watermark.label.Visible = watermark.Visible
		watermark.mainbar.Visible = watermark.Visible
		watermark.topbar.Visible = watermark.Visible
		watermark.Outline.Visible = watermark.Visible
		watermark.BlackOutline.Visible = watermark.Visible

		if not name:find(""{fps}"") then
			watermark.label.Text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", ""0 FPS"") .. "" ""
		end

		if name:find(""{fps}"") then
			local currenttime = os.clock()
			counter = counter + 1
			if currenttime - starttime >= 1 then
				local fps = math.round(counter / (currenttime - starttime))
				counter = 0
				starttime = currenttime

				if fps ~= oldfps then
					watermark.label.Text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", fps .. "" FPS"") .. "" ""

					watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 10, 0, 25)
					watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
					watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 1)

					watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
					watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)
				end
				oldfps = fps
			end
		end
	end)

	watermark.mainbar.MouseEnter:Connect(function()
		tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
	end)

	watermark.mainbar.MouseLeave:Connect(function()
		tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
	end)

	function watermark:UpdateTheme(theme)
		theme = theme or library.theme
		watermark.Outline.BackgroundColor3 = theme.outlinecolor
		watermark.BlackOutline.BackgroundColor3 = theme.outlinecolor2
		watermark.label.Font = theme.font
		watermark.topbar.BackgroundColor3 = theme.accentcolor
	end

	return watermark
end

function library:CheckErrors(error1, error2, eplayer, v1, v2)
	local message = ""Unexpected client behavior.""
	local echeck1, client = function(err1)
		if err1 then
			local errorcheck1 = {
				error57 = err1
			}

			if not errorcheck1.error57 then
				local printval = function(val)
					print(val)
				end

				printval(message)
			end

			return err1
		end

		return """"
	end, eplayer

	if error1 and error2 then
		local errtable, pcheck1 = {
			err_1 = error1, 
			err_2 = error2
		}, function(detected, reason)
			detected:Kick(reason)
		end

		if not (errtable.err_1 and errtable.err_2) then
			if client then
				pcheck1(client, message)
			end
		end

		if (errtable.err_1 == error1) and (errtable.err_2 == error2) then
			if v1 ~= v2 then
				pcheck1(client, message)
			end
		end
	end
end

return library"
xm8enJqa,Untitled,soden,JavaScript,Tuesday 27th of February 2024 08:47:57 PM CDT,"var tombol = document.getElementById('tombol');

function tindakanKlik() {
    alert('Tombol diklik!');
}

tombol.addEventListener('click', tindakanKlik);

// Kemudian, untuk menghapus event listener
tombol.removeEventListener('click', tindakanKlik);"
Q0UskfXV,Untitled,soden,JavaScript,Tuesday 27th of February 2024 08:47:07 PM CDT,"<button onclick=""alert('Tombol diklik!')"">Klik Saya</button>"
8nS7Xpv3,Untitled,soden,JavaScript,Tuesday 27th of February 2024 08:46:12 PM CDT,"document.getElementById('tombol').addEventListener('click', function() {
    alert('Tombol telah diklik!');
});"
