id,title,username,language,date,content
6aL8htb5,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Thursday 7th of March 2024 12:04:18 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_204529.pdf

Working as of:
07 March 2024"
q4vmPRDM,G2A.com Free Gift Card Guide Mar 2024 v2,HastyBasher0,GetText,Thursday 7th of March 2024 12:02:59 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/12GnAFd-rtwTrxGBGzNGTllmzjvi-RceC/view?usp=sharing
or
https://smallpdf.com/file#s=ae85d335-593e-43a5-bf43-1620c245bb82

Working as of:
07 March 2024"
496aQ4iT,ExamplePrintVariant,cepxuozab,C++,Wednesday 6th of March 2024 11:57:48 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <variant>
struct Node;
using Array = std::vector<Node>;
using Dict = std::map<std::string,Node>;
struct Node {
	using Value = std::variant<double,int,std::string,Array,Dict>;
    Value value_;
    const Value &GetValue() const { return value_; }
    Node() = default;
    Node(double d) : value_(d) {}
    Node(int a) : value_(a) {}
    Node(std::string str) : value_(std::move(str)) {}
    Node(Array arr) : value_(std::move(arr)) {}
    Node(Dict dict) : value_(std::move(dict)) {}
};

void PrintNode(const Node &node, std::ostream &out);

template<typename Value>
void PrintValue(const Value& val, std::ostream& out) {
    out << val;
}

template<>
void PrintValue<std::string>(const std::string& str, std::ostream& out) {
    out << ""Print String\n"";
    out << str << '\n';
}

template<>
void PrintValue<Array>(const Array &arr, std::ostream &out) {
    out << ""Print Array\n"";
    for (auto const &elem: arr) {
        PrintNode(elem, out);
    }
    out << '\n';
}

template<>
void PrintValue<Dict>(const Dict& dict, std::ostream& out) {
    out << ""Print Dict\n"";
    for (auto const &[key, value]: dict) {
        out<<key;
        out << '\n';
        PrintNode(value, out);
        out << '\n';
    }
}

void PrintNode(const Node& node, std::ostream& out) {
    std::visit([&out](const auto &value) { PrintValue(value, out); }, node.GetValue());
}

int main() {

}
"
gWkYgyG0,56. Merge Intervals,bennyfromtheblock,Python,Wednesday 6th of March 2024 11:50:09 PM CDT,"# 1. Sort by start time
# 2. if overlap, update current end time. If no overlap, replace current interval
# 3. Don't forget about current after looping

# TC: O(nlogn)
# Space: O(1)

class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        res = []
        intervals = sorted(intervals)
        cur = intervals[0]
        
        for nxt in intervals[1:]:
            if nxt[0] <= cur[1]:
                cur[1] = max(cur[1], nxt[1])
            else:
                res.append(cur)
                cur = nxt

        res.append(cur)

        return res"
U8dyMRFb,Untitled,smj007,Python,Wednesday 6th of March 2024 11:47:40 PM CDT,"class SeatManager:

    def __init__(self, n: int):
        self.minheap = [i for i in range(1, n+1)]
        heapq.heapify(self.minheap)        

    def reserve(self) -> int:
        top = heapq.heappop(self.minheap)
        return top

    def unreserve(self, seatNumber: int) -> None:
        heapq.heappush(self.minheap, seatNumber)        


# Your SeatManager object will be instantiated and called as such:
# obj = SeatManager(n)
# param_1 = obj.reserve()
# obj.unreserve(seatNumber)


class SeatManager:

    def __init__(self, n: int):
        self.marker = 1
        self.minheap = []

    def reserve(self) -> int:
        if self.minheap:
            seat_number = heapq.heappop(self.minheap)
            return seat_number

        seat_number = self.marker
        self.marker += 1
        return seat_number

    def unreserve(self, seatNumber: int) -> None:
        heapq.heappush(self.minheap, seatNumber)
        "
3VScyhMP,Looping Audio Files,SoundEngraver,SuperCollider,Wednesday 6th of March 2024 11:45:36 PM CDT,"//////////////////////////  LOOP AUDIO FILES //////////////////////////

s.boot;

s.meter;
s.scope;
s.plotTree;


// Only use when necessary. It isn't always needed.

s.reboot;
s.quit;


///////////////////// Things To Know Before Running Code /////////////////////
 
/*
 
All my original SC documents are in the ""dracula"" color.
To find or change this, go To SuperCollider ––> Preferences ––> Editor ––> Font & Colors.
––> Select under Color, dracula.
 
Arguments in Synths are represented with a backslash, ""\"", in green under the ""dracula"" color font. Values presented with these arguments can be changed. Only remember to NEVER cross 0, when using an exponential method like ""exprand.""
 
Arguments also precede a colon "":"", as seen in a list of a UGen following a variable, ""var.""
Example: sig = PlayBuf.ar(2, buf, rate, startPos: spos);
 
Argument and variable names can be changed to your liking.
 
Please be careful with volume output. Always have SuperCollider run through headphones. If you're unsure what the output will be, keep headphones away, with your main volume all the way down. Check your level meter and Stethoscope for visual cues. If everything looks safe (e.g. level meter is NOT in the red), proceed.
 
You can always execute a hard stop with Command Period.
 
*/

// Audio File

~audio = Buffer.read(s, ""insertaudiofilehere"");

~audio.play;
~audio.free; //free the synth

~audio.duration; // audio file's duration
~audio.numChannels; // audio file's channel number

~audio.sampleRate; // audio file's sample rate


(
~tortoDrums = SynthDef(\playDrums, {
	arg buf=0, rate=1, spos=0, loop=1, pan=0, amp=0.5, out=0;
	var sig;
	sig = PlayBuf.ar(
		numChannels: 2,
		bufnum: buf,
		rate: BufRateScale.kr(buf) * rate,
		startPos: spos,
		loop: loop, 
		// Note: My loop argument is set to 1, which means true, or that it will loop.
		// If the loop argument is set to 0, it means false, or that it won't loop.
	);
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\playDrums, [\buf, ~drums]);
~tortoDrums.set(\loop, 0); // Evaluating this will stop the loop.

~tortoDrums.free; // Free the synth, since there is no doneAction value.

// If you want a doneAction value, the loop argument must be set to 0, or the doneAction value will not be evaluated."
Wk41gSHa,1143. Longest Common Subsequence,bennyfromtheblock,Python,Wednesday 6th of March 2024 11:19:23 PM CDT,"# Basic solution: Top-down dynamic programming (recursions + memoization)
# Intuition:
# abcde
# ace
# The goal is to make the maximum number of non-crossing character matches from text1 to text2. Problem is, given any match between index i of t1 and j of t2, whether (i, j) is part of the optimal solution.

# Suppose the first character of text1 matches the first char of text 2: In this case, we should definitely add this match. Why? it's the first character. there is no cost to do so, because it won't get in the way of any future potential matches.

# If the first characters don't match, then we have two choices:
# 1. Discard the first character from text1, shrink the problem to text1[1:] and text2
# 2. Discard the first char from text2, problem shrinks to text1 and text2[1:]
# We don't know which of these choices results in the best solution, so we have to try both and use the max

# Why memoization?
# Different paths can lead to the same problem state: eg.
#				(bcde, defgh)
# 				/			\
# (abcde, defgh)			(bcde, efgh)
#				\			/
#				(abcde, efgh)

# memoize the solutions so we don't do repeated calls

# TC: O(M*N), M suffixes of t1, N suffixes of T2
# SC: O(M*N), from memoizing

class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        @lru_cache(maxsize=None)
        def memo_solve(p1, p2) -> int:
            # Base case: either pointer reached end of their string, no more matches possible
            if p1 == len(text1) or p2 == len(text2):
                return 0

            # if first characters are the same, reduce both strings
            if text1[p1] == text2[p2]:
                return 1 + memo_solve(p1+1, p2+1)

            # Otherwise, try removing the head char from either string
            return max(memo_solve(p1+1, p2), memo_solve(p1, p2+1))


        return memo_solve(0, 0)
    
    
# Approach 2: Tabulation Dynamic Programming (Bottom-up)

# The recursion method uses a top-down approach, it begins by examining the full problem and then finds and solves
# the sub-problems. What if we can go directly from the smallest problems?

class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        
        # Make a grid of 0's with len(text2) + 1 columns 
        # and len(text1) + 1 rows. +1 on each dimension for padding, so we don't
        # need complex boundary-checking logic for the solution below
        dp_grid = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]
        
        # Iterate up each column, starting from the last one.
        for col in reversed(range(len(text2))):
            for row in reversed(range(len(text1))):
                # If the corresponding characters for this cell are the same...
                if text2[col] == text1[row]:
                    dp_grid[row][col] = 1 + dp_grid[row + 1][col + 1]
                # Otherwise they must be different...
                else:
                    dp_grid[row][col] = max(dp_grid[row + 1][col], dp_grid[row][col + 1])
        
        # The original problem's answer is in dp_grid[0][0]. Return it.
        return dp_grid[0][0]"
pvELs0Dj,Turtle GPS Initialization Code,Randomaytion13,Lua,Wednesday 6th of March 2024 10:39:04 PM CDT,"repeat
textutils.slowPrint(""Cardinal direction of unit"")
local direction = read()
textutils.slowPrint(""X coordinate"")
local x = read()
textutils.slowPrint(""Y coordinate"")
local y = read()
textutils.slowPrint(""Z coordinate"")
local z = read()
textutils.slowPrint(""Coordinates Correct?\n[Y/N]"")
local gps = read()
until(gps == ""Y"" or ""y"")
textutils.slowPrint(""Coordinates are"" .. x .. y .. z .. ""facing"" .. direction)"
TDRp5KM7,Untitled,smj007,Python,Wednesday 6th of March 2024 09:21:03 PM CDT,"class Node:
    def __init__(self, value):
        self.val = value
        self.next = None
        self.prev = None

class MyCircularQueue:

    def __init__(self, k: int):
        self.k = k
        # front of the queue
        self.left = Node(None)
        # back of the queue
        self.right = Node(None)

        self.left.next = self.right
        self.right.prev = self.left

        self.size = 0
        
    def enQueue(self, value: int) -> bool:
        if self.size < self.k:
            new_node = Node(value)
            prv, nxt = self.right.prev, self.right
            prv.next, new_node.next = new_node, nxt
            nxt.prev, new_node.prev = new_node, prv
            self.size += 1
            return True

        return False
        
    def deQueue(self) -> bool:
        if self.size:
            prv, nxt = self.left, self.left.next.next
            prv.next = nxt
            nxt.prev = prv
            self.size -= 1
            return True

        return False

    def Front(self) -> int:
        if self.size:
            return self.left.next.val
        return -1
        
    def Rear(self) -> int:
        if self.size:
            return self.right.prev.val
        return -1
        
    def isEmpty(self) -> bool:
        return self.size == 0
        

    def isFull(self) -> bool:
        return self.size == self.k
        
# Your MyCircularQueue object will be instantiated and called as such:
# obj = MyCircularQueue(k)
# param_1 = obj.enQueue(value)
# param_2 = obj.deQueue()
# param_3 = obj.Front()
# param_4 = obj.Rear()
# param_5 = obj.isEmpty()
# param_6 = obj.isFull()"
M9QPzKpR,Untitled,Ricky265,Lua,Wednesday 6th of March 2024 09:18:17 PM CDT,"--αυтσ.ѕєттιиg gg яαиgє
gg.setRanges(gg.REGION_C_ALLOC|gg.REGION_CODE_APP|gg.REGION_ANONYMOUS|gg.REGION_VIDEO)
 
Menu = gg.alert(os.date([[ Cнαииєℓ_Fαιяℓу
Date : %A, %B %Y

📌 fιтυяєѕ :
 - мємσяу αитιвαи
 - ѕαfє ναℓυє

♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selection
∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα
(тєℓєgяαм :@Cнαииєℓ_Fαιяℓу)]]), ""START ↗️"", ""↙️ EXIT"")
if Menu == nil then end
if Menu == 1 then end
if Menu == 2 then print([[
Cнαииєℓ_Fαιяℓу
]]) return os.exit() end

--¢нαииєℓ fαιяℓу вαѕє ℓσα∂єя νєяѕισи 1
function edit(orig,ret)_om=orig[1].memory or orig[1][1]_ov=orig[3].value or orig[3][1]_on=orig[2].name or orig[2][1]gg.clearResults()gg.setRanges(_om)gg.searchNumber(_ov,orig[3].type or orig[3][2])sz=gg.getResultCount()if sz<1 then gg.toast(_on..""Failed to Open"")else sl=gg.getResults(11082001)for i=1,sz do ist=true for v=4,#orig do if ist==true and sl[i].value==_ov then cd={{}}cd[1].address=sl[i].address+(orig[v].offset or orig[v][2])cd[1].flags=orig[v].type or orig[v][3]szpy=gg.getValues(cd)cdlv=orig[v].lv or orig[v][1]cdv=szpy[1].value if cdlv==cdv then pdjg=true ist=true else pdjg=false ist=false end end end if pdjg==true then szpy=sl[i].address for x=1,#(ret)do xgpy=szpy+(ret[x].offset or ret[x][2])xglx=ret[x].type or ret[x][3]xgsz=ret[x].value or ret[x][1]xgdj=ret[x].freeze or ret[x][4]xgsj={{address=xgpy,flags=xglx,value=xgsz}}if xgdj==true then xgsj[1].freeze=xgdj gg.addListItems(xgsj)else gg.setValues(xgsj)end end xgjg=true end end if xgjg==true then gg.toast(_on..""Successfully Opened"")else gg.toast(_on..""Failed to Open"")end end end

--¢нαииєℓ fαιяℓу вαѕє ℓσα∂єя νєяѕισи 2
function setvalue(address,flags,value)  local refinevalues={}  refinevalues[1]={}  refinevalues[1].address=address  refinevalues[1].flags=flags  refinevalues[1].value=value  gg.setValues(refinevalues)  end

--¢нαииєℓ fαιяℓу вαѕє ℓσα∂єя νєяѕισи 3
function libBase(offset, type, value, name) a = os.clock() gg.setValues({ [1] = { address = gg.getRangesList('libUE4.so' or 'libtersafe.so')[1].start + offset, flags = type, value = value}}) b = os.clock() - a gg.toast(name .. ' мσ∂ιfιє∂ nιи '..b) end

--¢нαииєℓ fαιяℓу вαѕє ℓσα∂єя νєяѕισи 4
function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false  end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then gg.toast(""""..#data.."""") local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) else gg.toast(""Not Found !"", false) return false end else return false end end

--Arm 64 Android 10+
--¢σммαи∂ σи/σff ωαℓℓнα¢к αи∂ ¢σℓσя
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64Wallhack = off
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64Yellow = off
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64Green = off

--¢σммαи∂ σи/σff ωєαρσи-αвιℓιтιєѕ
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64Less = off
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64Cross = off
on = "" иσи-α¢тινє""
off = "" α¢тινє""
Arm64RFog = off

--¢нαииєℓ fαιяℓу мαιи.мєиυ
function main()
MenuArm64 = gg.choice({
 ""❲ Ρяσтє¢тισи Мαиαgєя ❳"",
 ""❲ Wαℓℓѕ & Cσℓσя ❳"",
 ""❲ Lσвву ❳"",
 ""❲ Gαмєρℓαу ❳"",
 "" Qυιт [мεηυ]n🔄 [εxιт тнε scяιρт cнιρsεтs] "",
}, nil, (os.date(""♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selectionn ∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα (тєℓєgяαм : @Cнαииєℓ_Fαιяℓу) Now @ %H`%M[%h%d] "")))
if MenuArm64 == nil then
else
if MenuArm64 == 1 then
Arm64MenuProtection()
end
if MenuArm64 == 2 then
Arm64Menu1()
end
if MenuArm64 == 3 then
Arm64Menu2()
end
if MenuArm64 == 4 then
Arm64Menu3()
end
if MenuArm64 == 5 then
exit()
end
end
ChannelFairly = -1
end

--¢нαииєℓ fαιяℓу ρяσтє¢тισи.мєиυ
function Arm64MenuProtection()
Protection = gg.multiChoice({
""❲ Anti Bind Guest ❳"",
""❲ Anti Observation ❳"",
""❲ Antiban 10 Years ❳"",
""❲ Anti Detection ❳"",
""❲ Anti Termination 1 Day Ban ❳"",
""❲ Antiban - LOGO ❳"",
""↩Back"",
}, nil, (os.date(""♀️Script PUBG Mobile @ %H`%M [ %A, %B %Y ] "")))
if Protection == nil then
else
if Protection[1] == true then
AntiBindGuest()
end
if Protection[2] == true then
Arm64Observation()
end
if Protection[3] == true then
Arm64ProtectionOne()
end
if Protection[4] == true then
Arm64ProtectionTwo()
end
if Protection[5] == true then
Arm64ProtectionThree()
end
if Protection[6] == true then
Arm64ProtectionFour()
end
if Protection[7] == true then
main()
end
end
ChannelFairly = -1
end

function AntiBindGuest()
local choice = gg.alert(""[ Anti Bind Guest Account ! ]\n\nActivate it only once, on the lobby menu, and back to login page to take effect"", ""Next"", ""Cancel"")
if choice == 1 then
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("":GuestBindHandler"", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
local revert = gg.getResults(99999, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll("":"", gg.TYPE_BYTE)
gg.clearResults()
gg.toast(""\nAnti Bind Guest Account"")
elseif choice == 2 then
main()
else
gg.alert(""Invalid choice. Try again."")
Arm64ProtectionOne()
end
end

function Arm64Observation()
local choice = gg.alert(""[ Anti Observation ! ]"", ""Next"", ""Cancel"")
if choice == 1 then
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("";Remaining"", gg.TYPE_WORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(5000, nil, nil, nil, nil, nil)
gg.editAll("";O_CFairly"", gg.TYPE_WORD)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("";Eliminations"", gg.TYPE_WORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(5000, nil, nil, nil, nil, nil)
gg.editAll("";OffialFairly"", gg.TYPE_WORD)
gg.clearResults()
gg.toast(""\nAnti Observation !"")
elseif choice == 2 then
main()
else
gg.alert(""Invalid choice. Try again."")
Arm64ProtectionOne()
end
end

function Arm64ProtectionOne()
local choice = gg.alert(""[ Antiban 10 Years ! ]\n\nActivate on lobby menu."", ""Next"", ""Cancel"")
if choice == 1 then
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Antiban 10 Years""
local Searching = {
{134914, 0x0},
{144387, 0x120},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Antiban 10 Years""
local Searching = {
{144387, 0x0},
{134914, 0x120},
}
local Edit = {
{67174401, 288},
{-1, -287, true},
{-1, -286, true},
{0, -285, true},
{67174401, -284, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Antiban 10 Years""
local Searching = {
{134914, 0x0},
{144387, 0x1E0},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Antiban 10 Years""
local Searching = {
{144387, 0x0},
{134914, 0x1E0},
}
local Edit = {
{67174401, 480},
{-1, -479, true},
{-1, -478, true},
{0, -477, true},
{67174401, -476, true},
}
SearchWrite(Searching, Edit, dataType)
gg.toast(""\nAntiban 10 Years"")
elseif choice == 2 then
main()
else
gg.alert(""Invalid choice. Try again."")
Arm64ProtectionOne()
end
end

function Arm64ProtectionTwo()
local choice = gg.alert(""[ Anti Detection ! ]\n\nActivate on lobby menu."", ""Next"", ""Cancel"")
if choice == 1 then
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{135682, 0x0},
{131842, 0x180},
}
local Edit = {
{67174401, 384},
{-1, -383, true},
{-1, -382, true},
{0, -381, true},
{67174401, -380, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{135682, 0x0},
{131842, 0x1E0},
}
local Edit = {
{67174401, 480},
{-1, -479, true},
{-1, -478, true},
{0, -477, true},
{67174401, -476, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{135682, 0x0},
{131842, 0x120},
}
local Edit = {
{67174401, 288},
{-1, -287, true},
{-1, -286, true},
{0, -285, true},
{67174401, -284, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{131842, 0x0},
{135682, 0x1E0},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{131842, 0x0},
{135682, 0x120},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{131842, 0x0},
{135682, 0x180},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Detection""
local Searching = {
{131842, 0x0},
{135682, 0x60},
}
local Edit = {
{67174401, 0},
{-1, -1, true},
{-1, -2, true},
{0, -3, true},
{67174401, -4, true},
}
SearchWrite(Searching, Edit, dataType)
gg.toast(""\nAnti Detection"")
elseif choice == 2 then
main()
else
gg.alert(""Invalid choice. Try again."")
Arm64ProtectionOne()
end
end

function Arm64ProtectionThree()
local choice = gg.alert(""[ Anti Termination 1 Day Ban ! ]\n\nActivate it only once, on the lobby menu before entering the first match or activate after just arriving at the lobby menu."", ""Next"", ""Cancel"")
if choice == 1 then
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0xC},
}
local Edit = {
{25231568, 0x0},
{25231568, 0xC},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x188},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x188},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x50},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x50},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x60},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x60},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0xF0},
}
local Edit = {
{25231568, 0x0},
{25231568, 0xF0},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x38},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x38},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x164},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x164},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x30},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x30},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x78},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x78},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x2C},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x2C},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x7C},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x7C},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x40},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x40},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x70},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x70},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x10C},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x10C},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{82130, 0x0},
{32937, 0x58},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x58},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x1D8},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x1D8},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x24},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x24},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x30},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x30},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x144},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x144},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x1C0},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x1C0},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x1BC},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x1BC},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x14},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x14},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x18},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x18},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x124},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x124},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0xBC},
}
local Edit = {
{25231568, 0x0},
{25231568, 0xBC},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x88},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x88},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{82130, 0x40},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x40},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{32937, 0x24},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x24},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_C_ALLOC)
local dataType = gg.TYPE_DWORD
local Name =""Anti Termination 1 Day Ban""
local Searching = {
{32937, 0x0},
{32937, 0x44},
}
local Edit = {
{25231568, 0x0},
{25231568, 0x44},
}
SearchWrite(Searching, Edit, dataType)
gg.toast(""\nAnti Termination 1 Day Ban"")
elseif choice == 2 then
main()
else
gg.alert(""Invalid choice. Try again."")
Arm64ProtectionOne()
end
end

function Arm64ProtectionFour()
so=gg.getRangesList(""libUE4.so"")[1].start
py=0xC8
setvalue(so+py , gg.TYPE_DWORD , 960496488)
gg.toast(""\nActivated"")
end

--¢нαииєℓ fαιяℓу ωαℓℓ.¢σℓσя.мєиυ
function Arm64Menu1()
MenuWallColor = gg.multiChoice({
""❲ Wallhack Snapdragon 7 Gen 2 ❳""..Arm64Wallhack,
""❲ Color Yellow Snapdragon 7 Gen 2 ❳""..Arm64Yellow,
""↩Rεтυяηn🔄 [ᴘυвɢм scяιᴘт sєℓєcтιση mεηυ]"",
}, nil, (os.date(""♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selectionn ∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα (тєℓєgяαм : @Cнαииєℓ_Fαιяℓу) Now @ %H`%M[%h%d] "")))
if MenuWallColor == nil then
else
if MenuWallColor[1] == true then
Arm64Wallhack1()
end
if MenuWallColor[2] == true then
Arm64Color1()
end
if MenuWallColor[3] == true then
main()
end
end
ChannelFairly = -1
end

function Arm64Wallhack1()
if Arm64Wallhack == off then
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2"" -- Minimize Blink
local Searching = {
{1087373317, 0x0},
{-2147020736, 0x4},
{1669431302, 0x8},
{50331648, 0x10},
}
local Edit = {
{1123024896, 0x14},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{659475, 0x0},
{1669332992, 0x4},
{270221324, 0x8},
{1074790410, 0xC},
}
local Edit = {
{1123024896, 0x10},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{539246628, 0x0},
{21, 0x4},
{537149456, 0x8},
{50331648, 0x10},
}
local Edit = {
{1123024896, 0x4C},
}
SearchWrite(Searching, Edit, dataType)
Arm64Wallhack = on
else
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2"" -- Minimize Blink
local Searching = {
{1087373317, 0x0},
{-2147020736, 0x4},
{1669431302, 0x8},
{50331648, 0x10},
}
local Edit = {
{1073741824, 0x14},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{659475, 0x0},
{1669332992, 0x4},
{270221324, 0x8},
{1074790410, 0xC},
}
local Edit = {
{1073741824, 0x10},
}
SearchWrite(Searching, Edit, dataType)
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""ωαℓℓнα¢к ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{539246628, 0x0},
{21, 0x4},
{537149456, 0x8},
{50331648, 0x10},
}
local Edit = {
{1073741824, 0x4C},
}
SearchWrite(Searching, Edit, dataType)
Arm64Wallhack = off
end end

function Arm64Color1()
if Arm64Yellow == off then
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""уєℓℓσω ¢σℓσя ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{1194347034, 0x0},
{8208, -0x4},
}
local Edit = {
{6, 0x24},
}
SearchWrite(Searching, Edit, dataType)
Arm64Yellow = on
else
gg.setRanges(gg.REGION_VIDEO)
local dataType = gg.TYPE_DWORD
local Name =""уєℓℓσω ¢σℓσя ѕиαρ∂яαgσи 7 Gen 2""
local Searching = {
{1194347034, 0x0},
{8208, -0x4},
}
local Edit = {
{8200, 0x24},
}
SearchWrite(Searching, Edit, dataType)
Arm64Yellow = off
end end

--¢нαииєℓ fαιяℓу ωєαρσи.мєиυ
function Arm64Menu2()
MenuWeapon = gg.multiChoice({
""❲ Lєѕѕ Rє¢σιℓ ❳""..Arm64Less,
""❲ Cяσѕѕнαιя ❳""..Arm64Cross,
""❲ Cяσѕѕнαιя ❳""..Arm64RFog,
""❲ Ωι∂є Vιєω ❳"",
""↩Rεтυяηn🔄 [ᴘυвɢм scяιᴘт sєℓєcтιση mεηυ]"",
}, nil, (os.date(""♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selectionn ∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα (тєℓєgяαм : @Cнαииєℓ_Fαιяℓу) Now @ %H`%M[%h%d] "")))
if MenuWeapon == nil then
else
if MenuWeapon[1] == true then
Arm64LessRecoil()
end
if MenuWeapon[2] == true then
Arm64Crosshair()
end
if MenuWeapon[3] == true then
Arm64RemoveFog()
end
if MenuWeapon[4] == true then
Arm64WideView()
end
if MenuWeapon[5] == true then
main()
end
end
ChannelFairly = -1
end

function Arm64LessRecoil()
-- Search > -1275067224;960545033;840894442;-1693834968:13
--Refine > -1275067224
-- Edit > 335544357
-- ( CODE_APP > Type DWORD )
if Arm64Less == off then
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x54E9E00
setvalue(so+py , gg.TYPE_DWORD , 335544357)
gg.toast(""\nActivated"")
Arm64Less = on
else
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x54E9E00
setvalue(so+py , gg.TYPE_DWORD , -1275067224)
gg.toast(""\nDeactive"")
Arm64Less = off
end end

function Arm64Crosshair()
-- Search > 505481216;505424128;1824728041;-698416192:13
-- Refine > 505481216
-- Edit > 505425152
-- ( CODE_APP > Type DWORD )
if Arm64Cross == off then
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x54E7870
setvalue(so+py , gg.TYPE_DWORD , 505425152)
gg.toast(""\nActivated"")
Arm64Cross = on
else
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x54E7870
setvalue(so+py , gg.TYPE_DWORD , 505481216)
gg.toast(""\nDeactive"")
Arm64Cross = off
end end

function Arm64RemoveFog()
-- Search > -1862264158;-1191173144;505428000:13
--Refine > 505428000
-- Edit > 706675684
-- ( CODE_APP > Type DWORD )
if Arm64RFog == off then
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x7BC8528
setvalue(so+py , gg.TYPE_DWORD , 706675684)
gg.toast(""\nActivated"")
Arm64RFog = on
else
so=gg.getRangesList(""libUE4.so"")[1].start
py=0x7BC8528
setvalue(so+py , gg.TYPE_DWORD , 505428000)
gg.toast(""\nDeactive"")
Arm64RFog = off
end end

function Arm64WideView()
-- Search > 3.000,0;1,0;7,0714327e-39;9,27550282e-39:25
-- Refine > 1,0
-- Edit > 1,3
-- ( CDATA > Type FLOAT )

-- Original code
CostWideView = gg.prompt({""Customize Wide View [ 1.0;2.0 ]""}, {1}, {""number""})

-- Check if user made a selection or canceled
if CostWideView == nil then
    gg.alert(""Canceled. Returning to Menu Lobby."")
    -- Assuming you have a function Arm64Menu2() to go back to the menu
    Arm64Menu2()
    return
end

-- Ensure the selected value is within the desired range [1.0;2.0]
local floatValue = tonumber(CostWideView[1]) -- Convert input to a number

if floatValue ~= nil and floatValue >= 1.0 and floatValue <= 2.0 then
    -- Update the CostWideView value with the final floatValue
    CostWideView = {floatValue}

    -- Call libBase with the updated value
    libBase(0x334BE48, 16, CostWideView[1], 'Ωι∂є νιєω')

    -- Show toast message for successful activation
    gg.toast(""\nActivated"")
else
    gg.alert(""Invalid input. Value must be a valid number between 1.0 and 2.0. Returning to Menu Lobby."")
    -- Assuming you have a function Arm64Menu2() to go back to the menu
    Arm64Menu2()
end
end

--¢αнииєℓ fαυяℓу gαмєρℓαу.мєиυ
function Arm64Menu3()
MenuGame = gg.multiChoice({
""❲ Αυтσ нєα∂ѕнσт ❳"",
""❲ Мαgι¢ Вυℓℓєт ❳"",
""↩Rεтυяηn🔄 [ᴘυвɢм scяιᴘт sєℓєcтιση mεηυ]"",
}, nil, (os.date(""♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selectionn ∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα (тєℓєgяαм : @Cнαииєℓ_Fαιяℓу) Now @ %H`%M[%h%d] "")))
if MenuGame == nil then
else
if MenuGame[1] == true then
Arm64AutoHeadshot()
end
if MenuGame[2] == true then
Arm64MagicBullet()
end
if MenuGame[3] == true then
main()
end
end
ChannelFairly = -1
end

function Arm64AutoHeadshot()
gg.setRanges(gg.REGION_ANONYMOUS)
local dataType = gg.TYPE_FLOAT
local Name =""Αυтσ Нєα∂ѕнσт""
local Searching = {
{23.0, 0x0},
{25.0, 0x4},
{30.5, 0x8},
}
local Edit = {
{-123.0, 0x0},
{125.0, 0x4},
{130.5, 0x8},
}
SearchWrite(Searching, Edit, dataType)
end

function Arm64MagicBullet()
gg.setRanges(gg.REGION_ANONYMOUS)
local dataType = gg.TYPE_FLOAT
local Name =""Мαgι¢ Вυℓℓєт""
local Searching = {
{35.0, 0x0},
{33.0, 0x4},
{69.5, 0x8},
}
local Edit = {
{135.0, 0x0},
{-133.0, 0x4},
{169.5, 0x8},
}
SearchWrite(Searching, Edit, dataType)
end

--¢нαииєℓ fαιяℓу σf.єχιт
function exit()
ChannelFairly = gg.alert(os.date([[ Cнαииєℓ_Fαιяℓу 
Date : %A, %B %Y

📌 fιтυяєѕ :
 - мємσяу αитιвαи
 - ѕαfє ναℓυє

♀️Pυвgм S¢яιρт Cнιρѕєтѕ Selection
∂єνєℓσνєя:- Яι¢ку_Αиggα_Ѕαρυтяα
(тєℓєgяαм : @Cнαииєℓ_Fαιяℓу)]]), ""↙️ EXIT"")
gg.toast(""Cнαииєℓ_Fαιяℓу"")
if ChannelFairly == nil then end
if ChannelFairly == 1 then print([[
Cнαииєℓ_Fαιяℓу
]]) return os.exit() end
os.exit()
end
while true do
if gg.isVisible(true) then
 ChannelFairly = 1
 gg.setVisible(false)
end
if ChannelFairly == 1 then
 main()
end
end"
KgjgrY1V,Serial Read,Nusa_Techno,C++,Wednesday 6th of March 2024 08:58:04 PM CDT,"#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>
WiFiClient client;

const char *ssid = ""........"";
const char *password = ""........"";
const char *host = ""........"";

#include <SoftwareSerial.h>
SoftwareSerial DataSerial(D3, D4); //RX, TX

unsigned long previousMillis = 0;
const long Delay = 1000;

String arrData[12];

/*=========================================================*/
void setup() {
  
  Serial.begin(115200);
  DataSerial.begin(9600);
  WifiConnection();
}

/*=========================================================*/
void loop() {

  unsigned long currentMillis = millis();
  if(currentMillis - previousMillis >= Delay){
  previousMillis = currentMillis;
    
    String Transmited = """";
    
    while(DataSerial.available()>0){
      Transmited += char(DataSerial.read());
      yield();
    }

    Transmited.trim();
    if(Transmited != """"){
      int index = 0;
      
      for(int i=0; i<= Transmited.length(); i++){
        char Delimiter = '|';
        
        if(Transmited[i] != Delimiter)
          arrData[index] += Transmited[i];
        else
          index++;

        yield();
      }

      if(index == 12){
        Serial.println(arrData[0]); Serial.println(arrData[1]); Serial.println(arrData[2]);
        Serial.println(arrData[3]); Serial.println(arrData[4]); Serial.println(arrData[5]);
        Serial.println(arrData[6]); Serial.println(arrData[7]); Serial.println(arrData[8]);
        Serial.println(arrData[9]); Serial.println(arrData[10]);Serial.println(arrData[11]);
        //Serial.println(arrData[12]);Serial.println(arrData[13]);

        SendtoDatabase();
      }

      arrData[0]=""""; arrData[1]="""";  arrData[2]="""";
      arrData[3]=""""; arrData[4]="""";  arrData[5]="""";
      arrData[6]=""""; arrData[7]="""";  arrData[8]="""";
      arrData[9]=""""; arrData[10]=""""; arrData[11]="""";
      //arrData[12]=""""; arrData[13]="""";
    }
  }
}

/*=========================================================*/
void WifiConnection(){
  
  delay(1000);
  WiFi.mode(WIFI_OFF);
  delay(1000);
  WiFi.mode(WIFI_STA);
  
  WiFi.begin(ssid, password);
  Serial.println("""");

  Serial.print(""Connecting"");
  while (WiFi.status() != WL_CONNECTED) {
  delay(500);
  Serial.print(""."");
  }

  //If connection successful show IP address in serial monitor
  Serial.println("""");
  Serial.print(""Connected to "");
  Serial.println(ssid);
  Serial.print(""IP address: "");
  Serial.println(WiFi.localIP());
}

/*=========================================================*/
void SendtoDatabase(){

  HTTPClient http;

  String postData, link,
          data1, data2, data3,
            data4, data5, data6,
              data7, data8, data9,
                data10, data11, data12;
                  //data13, data14;
          
  data1 = String(arrData[0]);  data2 = String(arrData[1]);   data3 = String(arrData[2]);
  data4 = String(arrData[3]);  data5 = String(arrData[4]);   data6 = String(arrData[5]);
  data7 = String(arrData[6]);  data8 = String(arrData[7]);   data9 = String(arrData[8]);
  data10 = String(arrData[9]); data11 = String(arrData[10]); data12 = String(arrData[11]);
  //data13 = String(arrData[12]);data14 = String(arrData[13]);
  
  
  postData = ""&nilai1="" + data1 + ""&nilai2="" + data2 + ""&nilai3="" + data3
           + ""&nilai4="" + data4 + ""&nilai5="" + data5 + ""&nilai6="" + data6
           + ""&nilai7="" + data7 + ""&nilai8="" + data8 + ""&nilai9="" + data9
           + ""&nilai10=""+ data10+ ""&nilai11=""+ data11+ ""&nilai12=""+ data12;
           //+ ""&nilai13=""+ data13+ ""&nilai14=""+ data14;
           
  link = ""http://192.168.100.82/SmartMining/postdemo.php"";
  
  http.begin(client,link);
  http.addHeader(""Content-Type"", ""application/x-www-form-urlencoded"");

  int httpCode = http.POST(postData);
  String payload = http.getString();

  Serial.println(httpCode);
  Serial.println(payload);
  Serial.println();

  http.end();
}"
Y9uGbSKv,Pastes.io [Pastebin Alternative],xxsa,PHP,Wednesday 6th of March 2024 08:57:39 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
Trending pastes page (day, week, month, year)
Simple & responsive interface
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
0aNumds1,utf-8 symbol generation shell script,heinrich23,Bash,Wednesday 6th of March 2024 08:15:27 PM CDT,"#!/bin/sh
# generates uft-8 symbol html reference 

outhtml=utf8_html_sym2000.html
outtmp=$(date +%s)"".tmp""
outtext=utf8_pre_2000_3000.html

modHex=256
modFF=255
modZero=0
shx=8192; 

printf ""<!DOCTYPE html>\n<html xmlns=\""http://www.w3.org/1999/xhtml\"">\n<head><meta content=\""text/html; charset=utf-8\"" http-equiv=\""Content-Type\""/><title>utf-8 symbols</title></head>\n<body>\n\t<h1>UTF-8 Symbols</h1>\n\t<div><span>\n"" >> $outhtml
cat $outhtml > $outtext

while [ $shx -lt 12288 ] ; do

	modZero=$(echo ""$shx % $modHex"" | bc)
	if [ $modZero -eq 0 ] ; then
		printf ""\n<h2>Hex x%x ~ Decimal %d</h2>\n"" $shx $shx >> $outhtml
		printf ""\n\t<table>\n\t\t<tr>\n\t\t\t<td>Symbol</td>\n\t\t\t<td>Hex %x</td>\n\t\t\t<td>Dec %d</td>\n\t\t\t<td>name</td>\n\t\t</tr>\n"" $shx $shx >> $outhtml
		printf ""\n<h2>hex x%x ~ dec %d</h2>\n"" $shx $shx >> $outtext
		printf ""\n<pre>symbol\thex x%x \tdecimal %d \t.\n"" $shx $shx >> $outtext
	fi

	printf ""\t\t<tr>\n\t\t\t<td>&#x%x;</td>\n"" $shx >> $outhtml
	printf ""\t\t\t<td>&amp;&#35;x%x;</td>\n"" $shx >> $outhtml
	printf ""\t\t\t<td>&amp;&#35;%d;</td>\n"" $shx >> $outhtml
	printf ""\t\t\t<td>&nbsp;</td>\n\t\t</tr>\n"" >>  $outhtml
	
	printf ""&#x%x;\t&amp;&#35;x%x;\t&amp;&#35;%d;\t.\n"" $shx $shx $shx  >> $outtext

	modFF=$(echo ""$shx % $modHex"" | bc)
	if [ $modFF -eq 255 ] ; then
		printf ""\n\t</table>\n"" >> $outhtml
		printf ""</pre>\n"" >> $outtext
	fi

    shx=$(echo ""$shx + 1"" | bc);
done
	
printf ""\n\t<hr />\n\t</body></html>\n"" >> $outtmp
cat $outtmp >> $outhtml
cat $outtmp >> $outtext

rm -f $outtmp
# end of shell script
"
7e8RzKRs,Untitled,smj007,Python,Wednesday 6th of March 2024 08:10:02 PM CDT,"class SnapshotArray:

    def __init__(self, length: int):
        self.history_record = defaultdict(list)
        self.count = 0

    def set(self, index: int, val: int) -> None:
        self.history_record[index].append([self.count, val])
        
    def snap(self) -> int:
        self.count += 1
        return self.count - 1

    def get(self, index: int, snap_id: int) -> int:
        history = self.history_record[index]
        low = 0; high = len(history) - 1
        result = 0
        while (low <= high):
            mid = (low + high)//2

            if history[mid][0] <= snap_id:
                result = history[mid][1]
                low = mid + 1
            else:
                high = mid - 1

        return result

# Your SnapshotArray object will be instantiated and called as such:
# obj = SnapshotArray(length)
# obj.set(index,val)
# param_2 = obj.snap()
# param_3 = obj.get(index,snap_id)"
E34ZG250,Untitled,MasterAli2,C#,Wednesday 6th of March 2024 08:06:37 PM CDT,"[HarmonyPatch(typeof(ShipTeleporter), ""beamUpPlayer"")]
[HarmonyPrefix]
static void beamUpPlayerPrefix(ShipTeleporter __instance)
{
    if (StartOfRound.Instance.mapScreen.targetedPlayer == StartOfRound.Instance.localPlayerController)
    {
        HUDManager.Instance.DisplayTip(""Teleporting!"", ""Press H to stop teleport"");
        TeleportDeclineBase.instance.isTeleporting = true;



    }
}

[HarmonyPatch(typeof(PlayerControllerB), ""TeleportPlayer"")]
[HarmonyPrefix]
static bool beamUpPlayerPrefix(PlayerControllerB __instance)
{
    TeleportDeclineBase Base = TeleportDeclineBase.instance;
    if (__instance == StartOfRound.Instance.localPlayerController && 
        Base.declineTeleport && 
        Base.isTeleporting && 
        !StartOfRound.Instance.localPlayerController.isPlayerDead)
    {

        Base.isTeleporting = false;
        Base.declineTeleport = false;

        if (StartOfRound.Instance.SpawnedShipUnlockables.ContainsKey(5))
        {
            ShipTeleporter teleporter = StartOfRound.Instance.SpawnedShipUnlockables[5].GetComponent<ShipTeleporter>();
            if (teleporter != null && teleporter.beamUpPlayerCoroutine != null)
            {
                teleporter?.StopCoroutine(teleporter?.beamUpPlayerCoroutine);
            }
            else
            {
                Base.mls.LogError(""Failed to access teleporter"");
            }
        }

        __instance.isInElevator = Base.wasInElevator;
        __instance.isInHangarShipRoom = Base.wasInHangarShipRoom;
        __instance.isInsideFactory = Base.wasInsideFactory;
        __instance.averageVelocity = Base.oldAverageVelocity;
        __instance.velocityLastFrame = Base.oldVelocityLastFrame;



        HUDManager.Instance.tipsPanelBody.text = ""Denying Teleport..."";
        __instance.beamUpParticle.Stop();

        return false;
    }
    Base.isTeleporting = false;
    Base.declineTeleport = false;
    return true;
}


[HarmonyPatch(typeof(PlayerControllerB), ""DropAllHeldItems"")]
[HarmonyPrefix]
static bool DropAllHeldItemsPrefix(PlayerControllerB __instance)
{
    if (__instance == StartOfRound.Instance.localPlayerController &&
        TeleportDeclineBase.instance.declineTeleport &&
        TeleportDeclineBase.instance.isTeleporting &&
        !StartOfRound.Instance.localPlayerController.isPlayerDead)
    {
        TeleportDeclineBase Base = TeleportDeclineBase.instance;

        Base.wasInElevator = __instance.isInElevator;
        Base.wasInHangarShipRoom = __instance.isInHangarShipRoom;
        Base.wasInsideFactory = __instance.isInsideFactory;
        Base.oldAverageVelocity = __instance.averageVelocity;
        Base.oldVelocityLastFrame = __instance.velocityLastFrame;
        Base.mls.LogError("" the items"");
        return false;
    }
    return true;
}"
vYtDQvbU,Untitled,smj007,Python,Wednesday 6th of March 2024 07:49:14 PM CDT,"def find_last_one(arr):
    low, high = 0, len(arr) - 1
    result = -1  # Initialize result to -1, in case there are no 1s in the array

    while low <= high:
        mid = (low + high) // 2

        if arr[mid] == 1:
            result = mid  # Update the result and continue searching on the right side
            low = mid + 1
        else:
            high = mid - 1  # Search on the left side

    return result

# Example usage
arr = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
index_of_last_one = find_last_one(arr)

print(""Index of the last occurrence of 1:"", index_of_last_one)

def find_first_one(arr):
    low, high = 0, len(arr) - 1
    result = -1  # Initialize result to -1, in case there are no 1s in the array

    while low <= high:
        mid = (low + high) // 2

        if arr[mid] == 1:
            result = mid  # Update the result and continue searching on the left side
            high = mid - 1
        else:
            low = mid + 1  # Search on the right side

    return result

# Example usage
arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
index_of_first_one = find_first_one(arr)

print(""Index of the first occurrence of 1:"", index_of_first_one)
"
TnB5BJVA,connection to remote MySQL database,Joni_Deev,Python,Wednesday 6th of March 2024 07:47:22 PM CDT,"import mysql.connector
# pip install mysql-connector-python

# I have deleted the database :)

try:
    # Connect to the MySQL database
    cnx = mysql.connector.connect(
    host= '161.97.78.70',
    port= 3306,
    user= 'u57973_RCF8UCAkkA',
    password= 'lu+B8iCtuuFDysLsvcj!6rFy',
    database= 's57973_users'
    )
    if(cnx.is_connected()):
        #1. Print the connection object
        print('Connected to MySQL database')

        # 2. Print the server information
        info_server = cnx.get_server_info()
        print('Server version: ', info_server)

        # 3. Print the client information
        cursor = cnx.cursor()
        cursor.execute(""select database()"")
        row = cursor.fetchone()
        print(""Connected to database: {}"".format(row))

        # 4. Create a new table
        cursor.execute(""CREATE TABLE users (id INT PRIMARY KEY AUTO_INCREMENT,name VARCHAR(50),money DECIMAL(10, 2))"")
        cnx.commit()

        # 4. Insert new data
        cursor.execute(""INSERT INTO users (name, money) VALUES ('Juan', 1000.00), ('María', 2500.50), ('Pedro', 500.75)"")
        cnx.commit()

        # 5. Select data
        cursor.execute(""SELECT * FROM users"")
        rowa = cursor.fetchall()
        for row in rowa:
            print(row)
except mysql.connector.Error as err:
    print(err)
finally:
    if cnx.is_connected():
        cursor.close()
        cnx.close()
        print('MySQL connection is closed')
"
tfws28cc,room_script.gd,jamesonBradfield,GDScript,Wednesday 6th of March 2024 07:36:06 PM CDT,"extends Node

@export var room_purpose : String
@export var tiles : Array[Node]
@export var bounds_cast : RayCast3D
@export var width : float
@export var length : float

func clear_room_purpose():
	room_purpose = """"	

func set_bounds_cast():
	var room_center = self.position
	var half_width = round(room_center.distance_to(bounds_cast.get_collision_point()))
	print(""half_width : "" + str(half_width))


func create_trigger():
	var raycast = RayCast3D.new()
	var col = CollisionShape3D.new()	
	add_child(col)
	col.set_owner(owner)
	add_child(raycast)
	raycast.set_owner(owner)
	raycast.name = ""bounds_cast""
	raycast.position = Vector3.ZERO
	var box : Shape3D = BoxShape3D.new()
	col.shape = box
	col.name = ""room_trigger""
	col.position = Vector3.ZERO
	bounds_cast = raycast

func set_children_as_tiles():
	tiles = get_children()

func grab_room_data_and_setup_for_room_bounds():
	clear_room_purpose()
	set_children_as_tiles()
	create_trigger()
	set_bounds_cast()

func _ready():
	var parent = get_parent()
	print(""room parent is : "" + str(parent))
	parent.connect(""ready_room_for_bounds"",grab_room_data_and_setup_for_room_bounds)
"
tbrPBpLm,Pastes.io [Pastebin Alternative],xxsa,PHP,Wednesday 6th of March 2024 06:59:12 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Pastes.io VS Pastebin :
More features example share pages QR CODEs - Embed options .. etc
Simple Ads by Google Adsense ( Few rather than Pastebin )
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Load files feature
Trending pastes page (day, week, month, year)
Simple & responsive interface
150+ different syntax languages
25+ Syntax Highlighting Skins for Ace Syntax Highlighter
Ace Editor / Code Mirror
Paste Folders
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes
Paste expiration system
Self destroy pastes
Share pastes on social network
Embed, download, print pastes
Clone pastes
Report explicit pastes
Socialite (Facebook/Twitter/Google Social login)
Facebook/Disqus/Custom comment system
Invisible/Custom captcha protection
Load files feature
Auto generated sitemaps
User management
Admin panel to manage pastes, syntax, users, comments, pages, languages, translations & other settings
User profile page
Trending pastes page (day, week, month, year)
QR Code for share
No Captcha for logged in users feature
.. etc"
yqUNBvzd,2024-03-06_stats.json,rdp_snitch,JSON,Wednesday 6th of March 2024 06:18:28 PM CDT,"{
  ""ip"": {
    ""185.198.69.2"": 24,
    ""185.198.69.18"": 21,
    ""185.198.69.31"": 21,
    ""185.198.69.6"": 9,
    ""185.198.69.21"": 18,
    ""185.198.69.8"": 33,
    ""185.198.69.20"": 27,
    ""80.66.88.215"": 3,
    ""185.198.69.30"": 27,
    ""185.198.69.17"": 27,
    ""185.198.69.28"": 27,
    ""185.198.69.25"": 27,
    ""171.212.98.155"": 3,
    ""185.198.69.16"": 30,
    ""185.198.69.26"": 24,
    ""185.198.69.19"": 33,
    ""185.198.69.11"": 24,
    ""185.198.69.27"": 33,
    ""185.198.69.3"": 21,
    ""185.198.69.24"": 30,
    ""185.198.69.10"": 9,
    ""185.198.69.22"": 21,
    ""185.198.69.13"": 27,
    ""185.198.69.5"": 33,
    ""185.198.69.4"": 21,
    ""185.198.69.15"": 36,
    ""87.251.75.145"": 9,
    ""185.198.69.9"": 15,
    ""185.198.69.29"": 24,
    ""194.165.16.11"": 6,
    ""185.170.144.113"": 12,
    ""194.165.16.76"": 12,
    ""185.198.69.23"": 18,
    ""205.210.31.34"": 9,
    ""45.83.66.137"": 3,
    ""185.198.69.14"": 18,
    ""185.198.69.7"": 18,
    ""212.70.149.142"": 15,
    ""98.230.28.129"": 3,
    ""45.88.97.229"": 21,
    ""185.170.144.3"": 6,
    ""128.199.21.120"": 3,
    ""38.68.52.32"": 3,
    ""179.60.147.134"": 6,
    ""212.70.149.146"": 3,
    ""31.43.185.65"": 9,
    ""198.235.24.182"": 9,
    ""194.165.16.10"": 6,
    ""147.78.47.51"": 3,
    ""178.205.143.106"": 3,
    ""118.193.40.191"": 3,
    ""62.204.41.107"": 6,
    ""198.235.24.239"": 9,
    ""179.60.147.118"": 3,
    ""51.81.17.181"": 6,
    ""87.251.75.64"": 3,
    ""101.200.185.101"": 9,
    ""187.190.60.112"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""103.240.6.155"": 18,
    ""36.91.222.100"": 3,
    ""167.94.146.55"": 3,
    ""205.210.31.48"": 9,
    ""45.227.254.54"": 6
  },
  ""asn"": {
    ""AS57523"": 696,
    ""AS208091"": 15,
    ""AS4134"": 3,
    ""AS48721"": 24,
    ""AS197414"": 18,
    ""AS396982"": 36,
    ""AS208843"": 3,
    ""AS204428"": 18,
    ""AS33666"": 3,
    ""AS174"": 21,
    ""AS14061"": 3,
    ""AS396073"": 3,
    ""AS209588"": 12,
    ""AS211736"": 9,
    ""AS28840"": 3,
    ""AS135377"": 3,
    ""AS59425"": 6,
    ""AS16276"": 6,
    ""AS37963"": 9,
    ""AS22884"": 3,
    ""AS208046"": 18,
    ""AS151853"": 18,
    ""AS7713"": 3,
    ""AS398705"": 3,
    ""AS267784"": 6
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 696,
    ""Xhost Internet Solutions"": 3,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 30,
    ""Flyservers S.A."": 42,
    ""Google LLC"": 36,
    ""INTERNET-RESEARCH"": 3,
    ""SS-Net"": 18,
    ""Comcast Cable Communications, LLC"": 3,
    ""Cogent Communications"": 21,
    ""DigitalOcean, LLC"": 3,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""FOP Dmytro Nedilskyi"": 9,
    ""TATTELECOM"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Horizon LLC"": 6,
    ""OVH SAS"": 6,
    ""Hangzhou Alibaba Advertising Co"": 9,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""ColocationX Ltd."": 18,
    ""Giza Network Limited"": 18,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 696,
    ""XHOSTIS"": 3,
    ""Chinanet SC"": 3,
    ""Xhost Internet Solutions"": 12,
    ""Flyservers S.A"": 27,
    ""Xhostis"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Unknown"": 27,
    ""4Media Ltd"": 18,
    ""Comcast Cable Communications, Inc."": 3,
    ""DigitalOcean, LLC"": 3,
    ""Majestic Hosting Solutions, LLC DBA Spin Servers"": 3,
    ""Cloud Solutions S.A"": 9,
    ""FOP Dmytro Nedilskyi"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Horizon LLC"": 6,
    ""OVH US LLC"": 6,
    ""Aliyun Computing Co., LTD"": 9,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Giza Network Limited"": 18,
    ""Telekomunikasi Indonesia"": 3,
    ""Censys, Inc."": 3,
    ""UAB Host Baltic"": 6
  },
  ""regionName"": {
    ""Moscow"": 702,
    ""Drenthe"": 3,
    ""Sichuan"": 3,
    ""North Holland"": 42,
    ""Kaunas"": 24,
    ""California"": 36,
    ""Land Berlin"": 3,
    ""Plovdiv"": 18,
    ""Florida"": 3,
    ""Hesse"": 24,
    ""Karnataka"": 3,
    ""Texas"": 3,
    ""Distrito Federal"": 9,
    ""Dnipropetrovsk Oblast"": 9,
    ""Tatarstan Republic"": 3,
    ""Kowloon"": 3,
    ""Virginia"": 15,
    ""Beijing"": 9,
    ""Hidalgo"": 3,
    ""Ho Chi Minh"": 18,
    ""Jakarta"": 3,
    ""Vilnius"": 6
  },
  ""country"": {
    ""Russia"": 705,
    ""The Netherlands"": 45,
    ""China"": 12,
    ""Lithuania"": 30,
    ""United States"": 57,
    ""Germany"": 27,
    ""Bulgaria"": 18,
    ""India"": 3,
    ""Venezuela"": 9,
    ""Ukraine"": 9,
    ""Hong Kong"": 3,
    ""Mexico"": 3,
    ""Vietnam"": 18,
    ""Indonesia"": 3
  },
  ""account"": {
    ""Administr"": 744,
    ""a"": 3,
    ""Test"": 33,
    ""(empty)"": 9,
    ""IOKBGwtRj"": 3,
    ""eHZOch"": 3,
    ""Piudwr"": 3,
    ""user"": 3,
    ""hello"": 66,
    ""Domain"": 42,
    ""rOFmjekEf"": 3,
    ""mKKcnJ"": 3,
    ""XXtFzP"": 3,
    ""Administrator"": 3,
    ""WTNTYbeMt"": 3,
    ""zpSWIn"": 3,
    ""vKyRHp"": 3,
    ""SBMinhP"": 3,
    ""ILCEiMjuo"": 3,
    ""HUevUI"": 3,
    ""ESnvID"": 3
  },
  ""keyboard"": {
    ""Unknown"": 942
  },
  ""client_build"": {
    ""Unknown"": 942
  },
  ""client_name"": {
    ""Unknown"": 942
  },
  ""ip_type"": {
    ""proxy"": 699,
    ""Unknown"": 153,
    ""hosting"": 60,
    ""mobile & proxy"": 21,
    ""mobile"": 9
  }
}"
PQAg721x,2024-03-06_stats.json,rdp_snitch,JSON,Wednesday 6th of March 2024 06:16:14 PM CDT,"{
  ""ip"": {
    ""185.198.69.2"": 16,
    ""185.198.69.18"": 14,
    ""185.198.69.31"": 14,
    ""185.198.69.6"": 6,
    ""185.198.69.21"": 12,
    ""185.198.69.8"": 22,
    ""185.198.69.20"": 18,
    ""80.66.88.215"": 2,
    ""185.198.69.30"": 18,
    ""185.198.69.17"": 18,
    ""185.198.69.28"": 18,
    ""185.198.69.25"": 18,
    ""171.212.98.155"": 2,
    ""185.198.69.16"": 20,
    ""185.198.69.26"": 16,
    ""185.198.69.19"": 22,
    ""185.198.69.11"": 16,
    ""185.198.69.27"": 22,
    ""185.198.69.3"": 14,
    ""185.198.69.24"": 20,
    ""185.198.69.10"": 6,
    ""185.198.69.22"": 14,
    ""185.198.69.13"": 18,
    ""185.198.69.5"": 22,
    ""185.198.69.4"": 14,
    ""185.198.69.15"": 24,
    ""87.251.75.145"": 6,
    ""185.198.69.9"": 10,
    ""185.198.69.29"": 16,
    ""194.165.16.11"": 4,
    ""185.170.144.113"": 8,
    ""194.165.16.76"": 8,
    ""185.198.69.23"": 12,
    ""205.210.31.34"": 6,
    ""45.83.66.137"": 2,
    ""185.198.69.14"": 12,
    ""185.198.69.7"": 12,
    ""212.70.149.142"": 10,
    ""98.230.28.129"": 2,
    ""45.88.97.229"": 14,
    ""185.170.144.3"": 4,
    ""128.199.21.120"": 2,
    ""38.68.52.32"": 2,
    ""179.60.147.134"": 4,
    ""212.70.149.146"": 2,
    ""31.43.185.65"": 6,
    ""198.235.24.182"": 6,
    ""194.165.16.10"": 4,
    ""147.78.47.51"": 2,
    ""178.205.143.106"": 2,
    ""118.193.40.191"": 2,
    ""62.204.41.107"": 4,
    ""198.235.24.239"": 6,
    ""179.60.147.118"": 2,
    ""51.81.17.181"": 4,
    ""87.251.75.64"": 2,
    ""101.200.185.101"": 6,
    ""187.190.60.112"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""103.240.6.155"": 12,
    ""36.91.222.100"": 2,
    ""167.94.146.55"": 2,
    ""205.210.31.48"": 6,
    ""45.227.254.54"": 4
  },
  ""asn"": {
    ""AS57523"": 464,
    ""AS208091"": 10,
    ""AS4134"": 2,
    ""AS48721"": 16,
    ""AS197414"": 12,
    ""AS396982"": 24,
    ""AS208843"": 2,
    ""AS204428"": 12,
    ""AS33666"": 2,
    ""AS174"": 14,
    ""AS14061"": 2,
    ""AS396073"": 2,
    ""AS209588"": 8,
    ""AS211736"": 6,
    ""AS28840"": 2,
    ""AS135377"": 2,
    ""AS59425"": 4,
    ""AS16276"": 4,
    ""AS37963"": 6,
    ""AS22884"": 2,
    ""AS208046"": 12,
    ""AS151853"": 12,
    ""AS7713"": 2,
    ""AS398705"": 2,
    ""AS267784"": 4
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 464,
    ""Xhost Internet Solutions"": 2,
    ""Chinanet"": 2,
    ""Xhost Internet Solutions LP"": 20,
    ""Flyservers S.A."": 28,
    ""Google LLC"": 24,
    ""INTERNET-RESEARCH"": 2,
    ""SS-Net"": 12,
    ""Comcast Cable Communications, LLC"": 2,
    ""Cogent Communications"": 14,
    ""DigitalOcean, LLC"": 2,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""FOP Dmytro Nedilskyi"": 6,
    ""TATTELECOM"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Horizon LLC"": 4,
    ""OVH SAS"": 4,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""ColocationX Ltd."": 12,
    ""Giza Network Limited"": 12,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 464,
    ""XHOSTIS"": 2,
    ""Chinanet SC"": 2,
    ""Xhost Internet Solutions"": 8,
    ""Flyservers S.A"": 18,
    ""Xhostis"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Unknown"": 18,
    ""4Media Ltd"": 12,
    ""Comcast Cable Communications, Inc."": 2,
    ""DigitalOcean, LLC"": 2,
    ""Majestic Hosting Solutions, LLC DBA Spin Servers"": 2,
    ""Cloud Solutions S.A"": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Horizon LLC"": 4,
    ""OVH US LLC"": 4,
    ""Aliyun Computing Co., LTD"": 6,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Giza Network Limited"": 12,
    ""Telekomunikasi Indonesia"": 2,
    ""Censys, Inc."": 2,
    ""UAB Host Baltic"": 4
  },
  ""regionName"": {
    ""Moscow"": 468,
    ""Drenthe"": 2,
    ""Sichuan"": 2,
    ""North Holland"": 28,
    ""Kaunas"": 16,
    ""California"": 24,
    ""Land Berlin"": 2,
    ""Plovdiv"": 12,
    ""Florida"": 2,
    ""Hesse"": 16,
    ""Karnataka"": 2,
    ""Texas"": 2,
    ""Distrito Federal"": 6,
    ""Dnipropetrovsk Oblast"": 6,
    ""Tatarstan Republic"": 2,
    ""Kowloon"": 2,
    ""Virginia"": 10,
    ""Beijing"": 6,
    ""Hidalgo"": 2,
    ""Ho Chi Minh"": 12,
    ""Jakarta"": 2,
    ""Vilnius"": 4
  },
  ""country"": {
    ""Russia"": 470,
    ""The Netherlands"": 30,
    ""China"": 8,
    ""Lithuania"": 20,
    ""United States"": 38,
    ""Germany"": 18,
    ""Bulgaria"": 12,
    ""India"": 2,
    ""Venezuela"": 6,
    ""Ukraine"": 6,
    ""Hong Kong"": 2,
    ""Mexico"": 2,
    ""Vietnam"": 12,
    ""Indonesia"": 2
  },
  ""account"": {
    ""Administr"": 496,
    ""a"": 2,
    ""Test"": 22,
    ""(empty)"": 6,
    ""IOKBGwtRj"": 2,
    ""eHZOch"": 2,
    ""Piudwr"": 2,
    ""user"": 2,
    ""hello"": 44,
    ""Domain"": 28,
    ""rOFmjekEf"": 2,
    ""mKKcnJ"": 2,
    ""XXtFzP"": 2,
    ""Administrator"": 2,
    ""WTNTYbeMt"": 2,
    ""zpSWIn"": 2,
    ""vKyRHp"": 2,
    ""SBMinhP"": 2,
    ""ILCEiMjuo"": 2,
    ""HUevUI"": 2,
    ""ESnvID"": 2
  },
  ""keyboard"": {
    ""Unknown"": 628
  },
  ""client_build"": {
    ""Unknown"": 628
  },
  ""client_name"": {
    ""Unknown"": 628
  },
  ""ip_type"": {
    ""proxy"": 466,
    ""Unknown"": 102,
    ""hosting"": 40,
    ""mobile & proxy"": 14,
    ""mobile"": 6
  }
}"
cEcrgnX3,2024-03-06_stats.json,rdp_snitch,JSON,Wednesday 6th of March 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""185.198.69.2"": 8,
    ""185.198.69.18"": 7,
    ""185.198.69.31"": 7,
    ""185.198.69.6"": 3,
    ""185.198.69.21"": 6,
    ""185.198.69.8"": 11,
    ""185.198.69.20"": 9,
    ""80.66.88.215"": 1,
    ""185.198.69.30"": 9,
    ""185.198.69.17"": 9,
    ""185.198.69.28"": 9,
    ""185.198.69.25"": 9,
    ""171.212.98.155"": 1,
    ""185.198.69.16"": 10,
    ""185.198.69.26"": 8,
    ""185.198.69.19"": 11,
    ""185.198.69.11"": 8,
    ""185.198.69.27"": 11,
    ""185.198.69.3"": 7,
    ""185.198.69.24"": 10,
    ""185.198.69.10"": 3,
    ""185.198.69.22"": 7,
    ""185.198.69.13"": 9,
    ""185.198.69.5"": 11,
    ""185.198.69.4"": 7,
    ""185.198.69.15"": 12,
    ""87.251.75.145"": 3,
    ""185.198.69.9"": 5,
    ""185.198.69.29"": 8,
    ""194.165.16.11"": 2,
    ""185.170.144.113"": 4,
    ""194.165.16.76"": 4,
    ""185.198.69.23"": 6,
    ""205.210.31.34"": 3,
    ""45.83.66.137"": 1,
    ""185.198.69.14"": 6,
    ""185.198.69.7"": 6,
    ""212.70.149.142"": 5,
    ""98.230.28.129"": 1,
    ""45.88.97.229"": 7,
    ""185.170.144.3"": 2,
    ""128.199.21.120"": 1,
    ""38.68.52.32"": 1,
    ""179.60.147.134"": 2,
    ""212.70.149.146"": 1,
    ""31.43.185.65"": 3,
    ""198.235.24.182"": 3,
    ""194.165.16.10"": 2,
    ""147.78.47.51"": 1,
    ""178.205.143.106"": 1,
    ""118.193.40.191"": 1,
    ""62.204.41.107"": 2,
    ""198.235.24.239"": 3,
    ""179.60.147.118"": 1,
    ""51.81.17.181"": 2,
    ""87.251.75.64"": 1,
    ""101.200.185.101"": 3,
    ""187.190.60.112"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""103.240.6.155"": 6,
    ""36.91.222.100"": 1,
    ""167.94.146.55"": 1,
    ""205.210.31.48"": 3,
    ""45.227.254.54"": 2
  },
  ""asn"": {
    ""AS57523"": 232,
    ""AS208091"": 5,
    ""AS4134"": 1,
    ""AS48721"": 8,
    ""AS197414"": 6,
    ""AS396982"": 12,
    ""AS208843"": 1,
    ""AS204428"": 6,
    ""AS33666"": 1,
    ""AS174"": 7,
    ""AS14061"": 1,
    ""AS396073"": 1,
    ""AS209588"": 4,
    ""AS211736"": 3,
    ""AS28840"": 1,
    ""AS135377"": 1,
    ""AS59425"": 2,
    ""AS16276"": 2,
    ""AS37963"": 3,
    ""AS22884"": 1,
    ""AS208046"": 6,
    ""AS151853"": 6,
    ""AS7713"": 1,
    ""AS398705"": 1,
    ""AS267784"": 2
  },
  ""isp"": {
    ""Chang Way Technologies Co. Limited"": 232,
    ""Xhost Internet Solutions"": 1,
    ""Chinanet"": 1,
    ""Xhost Internet Solutions LP"": 10,
    ""Flyservers S.A."": 14,
    ""Google LLC"": 12,
    ""INTERNET-RESEARCH"": 1,
    ""SS-Net"": 6,
    ""Comcast Cable Communications, LLC"": 1,
    ""Cogent Communications"": 7,
    ""DigitalOcean, LLC"": 1,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""FOP Dmytro Nedilskyi"": 3,
    ""TATTELECOM"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Horizon LLC"": 2,
    ""OVH SAS"": 2,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""ColocationX Ltd."": 6,
    ""Giza Network Limited"": 6,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 232,
    ""XHOSTIS"": 1,
    ""Chinanet SC"": 1,
    ""Xhost Internet Solutions"": 4,
    ""Flyservers S.A"": 9,
    ""Xhostis"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Unknown"": 9,
    ""4Media Ltd"": 6,
    ""Comcast Cable Communications, Inc."": 1,
    ""DigitalOcean, LLC"": 1,
    ""Majestic Hosting Solutions, LLC DBA Spin Servers"": 1,
    ""Cloud Solutions S.A"": 3,
    ""FOP Dmytro Nedilskyi"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Horizon LLC"": 2,
    ""OVH US LLC"": 2,
    ""Aliyun Computing Co., LTD"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Giza Network Limited"": 6,
    ""Telekomunikasi Indonesia"": 1,
    ""Censys, Inc."": 1,
    ""UAB Host Baltic"": 2
  },
  ""regionName"": {
    ""Moscow"": 234,
    ""Drenthe"": 1,
    ""Sichuan"": 1,
    ""North Holland"": 14,
    ""Kaunas"": 8,
    ""California"": 12,
    ""Land Berlin"": 1,
    ""Plovdiv"": 6,
    ""Florida"": 1,
    ""Hesse"": 8,
    ""Karnataka"": 1,
    ""Texas"": 1,
    ""Distrito Federal"": 3,
    ""Dnipropetrovsk Oblast"": 3,
    ""Tatarstan Republic"": 1,
    ""Kowloon"": 1,
    ""Virginia"": 5,
    ""Beijing"": 3,
    ""Hidalgo"": 1,
    ""Ho Chi Minh"": 6,
    ""Jakarta"": 1,
    ""Vilnius"": 2
  },
  ""country"": {
    ""Russia"": 235,
    ""The Netherlands"": 15,
    ""China"": 4,
    ""Lithuania"": 10,
    ""United States"": 19,
    ""Germany"": 9,
    ""Bulgaria"": 6,
    ""India"": 1,
    ""Venezuela"": 3,
    ""Ukraine"": 3,
    ""Hong Kong"": 1,
    ""Mexico"": 1,
    ""Vietnam"": 6,
    ""Indonesia"": 1
  },
  ""account"": {
    ""Administr"": 248,
    ""a"": 1,
    ""Test"": 11,
    ""(empty)"": 3,
    ""IOKBGwtRj"": 1,
    ""eHZOch"": 1,
    ""Piudwr"": 1,
    ""user"": 1,
    ""hello"": 22,
    ""Domain"": 14,
    ""rOFmjekEf"": 1,
    ""mKKcnJ"": 1,
    ""XXtFzP"": 1,
    ""Administrator"": 1,
    ""WTNTYbeMt"": 1,
    ""zpSWIn"": 1,
    ""vKyRHp"": 1,
    ""SBMinhP"": 1,
    ""ILCEiMjuo"": 1,
    ""HUevUI"": 1,
    ""ESnvID"": 1
  },
  ""keyboard"": {
    ""Unknown"": 314
  },
  ""client_build"": {
    ""Unknown"": 314
  },
  ""client_name"": {
    ""Unknown"": 314
  },
  ""ip_type"": {
    ""proxy"": 233,
    ""Unknown"": 51,
    ""hosting"": 20,
    ""mobile & proxy"": 7,
    ""mobile"": 3
  }
}"
W0qt1NLQ,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 05:58:14 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 163, in load_comment
    process_command_non_mod_user(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 149, in process_command_non_mod_user
    conversation_checks.checks_for_close_command(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/conversation_checks.py"", line 25, in checks_for_close_command
    if comment.author == comment.submission.author:
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/base.py"", line 35, in __getattr__
    self._fetch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/submission.py"", line 712, in _fetch
    data = self._fetch_data()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/submission.py"", line 731, in _fetch_data
    return self._reddit.request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
vMVD1gVq,Untitled,iconoclasthero,Bash,Wednesday 6th of March 2024 05:23:15 PM CDT,"prompt(){
read -p ""$1 "" choice
case ""$choice"" in
  y|Y ) return 0;;
  * ) return 1;;
#  n|N ) return 1;;
#  * ) echo ""invalid"";;
esac
}

if prompt ""Add guake PPA and install?""
  then
    sudo add-apt-repository ppa:linuxuprising/guake
     sudo apt install guake
elif [[ $(command -v guake) ]]
  then
    printf ""\n\n\n""
    [[ $(prompt ""Guake is installed.  Do you want to bail out now and start again from guake?"") ]] && exit
elif prompt ""apt install curl git gh python3-gi python3-pip ncdu exa screen reptyr htop lm-sensors fanco...""
  then
     sudo apt install curl git gh python3-gi python3-pip exa ncdu screen reptyr htop lm-sensors fancontol
fi

"
gHZr7fv5,Untitled,MCorange,Lua,Wednesday 6th of March 2024 04:57:12 PM CDT,"local MSG_PING     = '1';
local MSG_PONG     = '2';
local MSG_PULLFILE = '3';
local MSG_NOCHANGE = '4';
local MSG_SENDING  = '5';
 
local ws_url = ""ws://nya-1.mcorangehq.xyz:3000"";
 
local ws = assert(http.websocket(ws_url));
print(""connected"")
 
ws.send(MSG_PULLFILE)
repeat
	sleep(1)
    local msg = ws.receive()
    if string.sub(msg, 1, 1) == MSG_PING then
        ws.send(MSG_PONG)
    elseif string.sub(msg, 1, 1) == MSG_PONG then 
		-- ping
    elseif string.sub(msg, 1, 1) == MSG_NOCHANGE then 
        ws.send(MSG_PULLFILE)
    elseif string.sub(msg, 1, 1) == MSG_SENDING then
        local cmd = loadstring string.sub(msg, 2)
        print(""------ got program"")
        cmd()
        ws.send(MSG_PULLFILE)
    end
 
until false;"
fTXiuSSR,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 04:52:09 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 85, in comment_listener
    for comment in fallout76marketplace.stream.comments(skip_existing=True):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
EwB5jrca,ServerError: received 500 HTTP response,basedcount_bot,Python,Wednesday 6th of March 2024 04:51:55 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 45, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 262, in read_comments
    async for comment in pcm_subreddit.stream.comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in stream_generator
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/util.py"", line 160, in <listcomp>
    [result async for result in function(limit=limit, **function_kwargs)]
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 34, in __anext__
    await self._next_batch()
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = await self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 785, in get
    return await self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 567, in _objectify_request
    await self.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/util/deprecate_args.py"", line 51, in wrapped
    return await _wrapper(*args, **kwargs)
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncpraw/reddit.py"", line 1032, in request
    return await self._core.request(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 370, in request
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 289, in _request_with_retries
    return await self._do_retry(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 166, in _do_retry
    return await self._request_with_retries(
  File ""/root/Bots/basedcount_bot/venv/lib/python3.10/site-packages/asyncprawcore/sessions.py"", line 307, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status](response)
asyncprawcore.exceptions.ServerError: received 500 HTTP response
"
JeV0M6HR,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Wednesday 6th of March 2024 04:51:32 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 251, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 161, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
4AwxfEUL,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:51:12 PM CDT,"//Petta Zadaca
// mojot kod za 40/120
#include <bits/stdc++.h>
 
using namespace std;
 
bool bonboni_Ddenovi(long long N, long long arr[], long long P, long long D, long long K) {
    long long reset[N];
    memset(reset, 0, sizeof(reset));
 
    long long bonboni = 0, temp = -1;
    for (int i=0; i < D; i++) {
        for (int j=0; j < N; j++) {
            if (reset[j] == 0) {
                bonboni += arr[j];
                reset[j] = K;
                temp = j;
                break;
            }
        }
 
        if (bonboni >= P)
            return true;
 
        for (int j=0; j < N && j != temp; j++) {
            reset[j]--;
        }
    }
 
    return false;
}
 
int main()
{
    long long N, P, D;
    cin >> N >> P >> D;
 
    long long arr[N];
    for (int i=0; i < N; i++)
        cin >> arr[i];
    sort(arr, arr+N);
    reverse(arr, arr+N);
 
    long long l=1, r=100000;
    while (l+1 < r) {
        long long k = (l+r)/2;
        if (bonboni_Ddenovi(N, arr, P, D, k)) {
            l = k;
        }
        else {
            r = k-1;
        }
        if (l == r-1) {
            if (bonboni_Ddenovi(N, arr, P, D, l+1))
                l++;
        }
    }
 
    if (bonboni_Ddenovi(N, arr, P, D, l) && bonboni_Ddenovi(N, arr, P, D, l+1))
        cout << ""seedno"";
    else if (!bonboni_Ddenovi(N, arr, P, D, l))
        cout << -1;
    else
        cout << l;
 
    return 0;
}







// na marko 
#include <bits/stdc++.h>
 
using namespace std;
 
int main()
{
    long long n, p, d, x;
    cin>>n>>p>>d;
    vector<long long> v;
    for(long long i=0; i<n; i++)
    {
        cin>>x;
        v.push_back(x);
    }
    while(v.size()<d)
    {
        n=d;
        v.push_back(0);
    }
 
    sort(v.begin(), v.end());
 
    if(d*v[n-1]<p)
        cout<<-1;
    else
    {
        long long sum=0, j=0;
        for(long long i=n-1; j<d; i--)
        {
            sum+=v[i];
            j++;
        }
        //cout<<sum<<endl<<endl;
        if(sum>=p)
            cout<<""seedno"";
        else
        {
            long long z;
            for(long long k=d-1; k>0; k--)
            {
                sum-=v[n-k-1];
                z=sum*(d/k);
                j=0;
                for(long long i=n-1; j<d%k; i--)
                {
                    z+=v[i];
                    j++;
                }
                //cout<<z<<endl;
                if(z>=p)
                {
                    cout<<k-1;
                    return 0;
                }
            }
        }
    }
 
    return 0;
}"
q40HwtYK,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:48:58 PM CDT,"//Cetvrta Zadaca
#include <bits/stdc++.h>
  
using namespace std;
  
int main()
{
    int N, Q, a;
    cin >> N >> Q;
  
    int highest[51];
    memset(highest, -1, sizeof(highest));
  
    for (int i=0; i < N; i++) {
        cin >> a;
        if (highest[a] == -1) highest[a] = i+1;
    }
  
//    for (int i=0; i < N; i++) {
//        cout << highest[i] << "" "";
//    }
//    cout << endl;
  
    for (int i=0; i < Q; i++) {
        cin >> a;
        cout << highest[a] << "" "";
  
        for (int i=1; i <= 50; i++) {
            if (highest[i] < highest[a])
                highest[i]++;
        }
  
        highest[a] = 1;
  
//        for (int i=0; i < N; i++) {
//            cout << highest[i] << "" "";
//        }
//        cout << endl;
    }
  
    return 0;
}"
CNSYS3U3,Untitled,Martin_Toseski,C++,Wednesday 6th of March 2024 04:47:58 PM CDT,"//Treta Zadaca
#include <bits/stdc++.h>
 
using namespace std;
 
int ciklus[8] = {37, 58, 89, 145, 42, 20, 4, 16};
 
int sumSq(int n)
{
    int cN = n, res = 0;
    while (cN > 0)
    {
        res += pow(cN % 10, 2);
        cN /= 10;
    }
    return res;
}
 
int main()
{
    int n, k;
    cin >> n >> k;
 
    int lN = n;
    for (int i = 0; i <= k; i++)
    {
        if (lN == 0)
        {
            cout << 0;
            break;
        }
        else if (lN == 1)
        {
            cout << 1;
            break;
        }
        else if (lN == 37)
        {
            int dist = k - i;
            cout << ciklus[dist % 8];
            break;
        }
 
        if (i + 1 > k)
        {
            cout << lN;
            break;
        }
 
        lN = sumSq(lN);
    }
 
    return 0;
}"
dK74xqSX,Lua-UUID-Library,DaddyTigerOf3,Lua,Wednesday 6th of March 2024 04:13:59 PM CDT,"---------------------------------------------------------------------------------------
-- Copyright 2012 Rackspace (original), 2013-2021 Thijs Schreijer (modifications)
--
-- Licensed under the Apache License, Version 2.0 (the ""License"");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an ""AS-IS"" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--
-- see http://www.ietf.org/rfc/rfc4122.txt
--
-- Note that this is not a true version 4 (random) UUID.  Since `os.time()` precision is only 1 second, it would be hard
-- to guarantee spacial uniqueness when two hosts generate a uuid after being seeded during the same second.  This
-- is solved by using the node field from a version 1 UUID.  It represents the mac address.
--
-- 28-apr-2013 modified by Thijs Schreijer from the original [Rackspace code](https://github.com/kans/zirgo/blob/807250b1af6725bad4776c931c89a784c1e34db2/util/uuid.lua) as a generic Lua module.
-- Regarding the above mention on `os.time()`; the modifications use the `socket.gettime()` function from LuaSocket
-- if available and hence reduce that problem (provided LuaSocket has been loaded before uuid).
--
-- **Important:** the random seed is a global piece of data. Hence setting it is
-- an application level responsibility, libraries should never set it!
--
-- See this issue; [https://github.com/Kong/kong/issues/478](https://github.com/Kong/kong/issues/478)
-- It demonstrates the problem of using time as a random seed. Specifically when used from multiple processes.
-- So make sure to seed only once, application wide. And to not have multiple processes do that
-- simultaneously.


local M = {}
local math = require('math')
local os = require('os')
local string = require('string')

local bitsize = 32  -- bitsize assumed for Lua VM. See randomseed function below.
local lua_version = tonumber(_VERSION:match(""%d%.*%d*""))  -- grab Lua version used

local MATRIX_AND = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

local math_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = string.sub
local to_number = tonumber
local assert = assert
local type = type

-- performs the bitwise operation specified by truth matrix on two numbers.
local function BITWISE(x, y, matrix)
  local z = 0
  local pow = 1
  while x > 0 or y > 0 do
    z = z + (matrix[x%2+1][y%2+1] * pow)
    pow = pow * 2
    x = math_floor(x/2)
    y = math_floor(y/2)
  end
  return z
end

local function INT2HEX(x)
  local s,base = '',16
  local d
  while x > 0 do
    d = x % base + 1
    x = math_floor(x/base)
    s = string_sub(HEXES, d, d)..s
  end
  while #s < 2 do s = ""0"" .. s end
  return s
end

----------------------------------------------------------------------------
-- Creates a new uuid. Either provide a unique hex string, or make sure the
-- random seed is properly set. The module table itself is a shortcut to this
-- function, so `my_uuid = uuid.new()` equals `my_uuid = uuid()`.
--
-- For proper use there are 3 options;
--
-- 1. first require `luasocket`, then call `uuid.seed()`, and request a uuid using no
-- parameter, eg. `my_uuid = uuid()`
-- 2. use `uuid` without `luasocket`, set a random seed using `uuid.randomseed(some_good_seed)`,
-- and request a uuid using no parameter, eg. `my_uuid = uuid()`
-- 3. use `uuid` without `luasocket`, and request a uuid using an unique hex string,
-- eg. `my_uuid = uuid(my_networkcard_macaddress)`
--
-- @return a properly formatted uuid string
-- @param hwaddr (optional) string containing a unique hex value (e.g.: `00:0c:29:69:41:c6`), to be used to compensate for the lesser `math_random()` function. Use a mac address for solid results. If omitted, a fully randomized uuid will be generated, but then you must ensure that the random seed is set properly!
-- @usage
-- local uuid = require(""uuid"")
-- print(""here's a new uuid: "",uuid())
function M.new(hwaddr)
  -- bytes are treated as 8bit unsigned bytes.
  local bytes = {
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255),
      math_random(0, 255)
    }

  if hwaddr then
    assert(type(hwaddr)==""string"", ""Expected hex string, got ""..type(hwaddr))
    -- Cleanup provided string, assume mac address, so start from back and cleanup until we've got 12 characters
    local i,str = #hwaddr, hwaddr
    hwaddr = """"
    while i>0 and #hwaddr<12 do
      local c = str:sub(i,i):lower()
      if HEXES:find(c, 1, true) then
        -- valid HEX character, so append it
        hwaddr = c..hwaddr
      end
      i = i - 1
    end
    assert(#hwaddr == 12, ""Provided string did not contain at least 12 hex characters, retrieved '""..hwaddr..""' from '""..str..""'"")

    -- no split() in lua. :(
    bytes[11] = to_number(hwaddr:sub(1, 2), 16)
    bytes[12] = to_number(hwaddr:sub(3, 4), 16)
    bytes[13] = to_number(hwaddr:sub(5, 6), 16)
    bytes[14] = to_number(hwaddr:sub(7, 8), 16)
    bytes[15] = to_number(hwaddr:sub(9, 10), 16)
    bytes[16] = to_number(hwaddr:sub(11, 12), 16)
  end

  -- set the version
  bytes[7] = BITWISE(bytes[7], 0x0f, MATRIX_AND)
  bytes[7] = BITWISE(bytes[7], 0x40, MATRIX_OR)
  -- set the variant
  bytes[9] = BITWISE(bytes[9], 0x3f, MATRIX_AND)
  bytes[9] = BITWISE(bytes[9], 0x80, MATRIX_OR)
  return INT2HEX(bytes[1])..INT2HEX(bytes[2])..INT2HEX(bytes[3])..INT2HEX(bytes[4])..""-""..
         INT2HEX(bytes[5])..INT2HEX(bytes[6])..""-""..
         INT2HEX(bytes[7])..INT2HEX(bytes[8])..""-""..
         INT2HEX(bytes[9])..INT2HEX(bytes[10])..""-""..
         INT2HEX(bytes[11])..INT2HEX(bytes[12])..INT2HEX(bytes[13])..INT2HEX(bytes[14])..INT2HEX(bytes[15])..INT2HEX(bytes[16])
end

----------------------------------------------------------------------------
-- Improved randomseed function.
-- Lua 5.1 and 5.2 both truncate the seed given if it exceeds the integer
-- range. If this happens, the seed will be 0 or 1 and all randomness will
-- be gone (each application run will generate the same sequence of random
-- numbers in that case). This improved version drops the most significant
-- bits in those cases to get the seed within the proper range again.
-- @param seed the random seed to set (integer from 0 - 2^32, negative values will be made positive)
-- @return the (potentially modified) seed used
-- @usage
-- local socket = require(""socket"")  -- gettime() has higher precision than os.time()
-- local uuid = require(""uuid"")
-- -- see also example at uuid.seed()
-- uuid.randomseed(socket.gettime()*10000)
-- print(""here's a new uuid: "",uuid())
function M.randomseed(seed)
  seed = math_floor(math_abs(seed))
  if seed >= (2^bitsize) then
    -- integer overflow, so reduce to prevent a bad seed
    seed = seed - math_floor(seed / 2^bitsize) * (2^bitsize)
  end
  if lua_version < 5.2 then
    -- 5.1 uses (incorrect) signed int
    math.randomseed(seed - 2^(bitsize-1))
  else
    -- 5.2 uses (correct) unsigned int
    math.randomseed(seed)
  end
  return seed
end

----------------------------------------------------------------------------
-- Seeds the random generator.
-- It does so in 3 possible ways;
--
-- 1. if in ngx_lua, use `ngx.time() + ngx.worker.pid()` to ensure a unique seed
-- for each worker. It should ideally be called from the `init_worker` context.
-- 2. use luasocket `gettime()` function, but it only does so when LuaSocket
-- has been required already.
-- 3. use `os.time()`: this only offers resolution to one second (used when
-- LuaSocket hasn't been loaded)
--
-- **Important:** the random seed is a global piece of data. Hence setting it is
-- an application level responsibility, libraries should never set it!
-- @usage
-- local socket = require(""socket"")  -- gettime() has higher precision than os.time()
-- -- LuaSocket loaded, so below line does the same as the example from randomseed()
-- uuid.seed()
-- print(""here's a new uuid: "",uuid())
function M.seed()
  if _G.ngx ~= nil then
    return M.randomseed(ngx.time() + ngx.worker.pid())
  elseif package.loaded[""socket""] and package.loaded[""socket""].gettime then
    return M.randomseed(package.loaded[""socket""].gettime()*10000)
  else
    return M.randomseed(os.time())
  end
end

return setmetatable( M, { __call = function(self, hwaddr) return self.new(hwaddr) end} )"
6GMas0EK,Untitled,kajs54,C,Wednesday 6th of March 2024 03:58:32 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

// Structure pour représenter un objet
struct Objet {
    int poids;
    int valeur;
    double ratio; // Rapport valeur/poids
};

// Fonction pour comparer deux objets en fonction de leur ratio valeur/poids
int comparer(const void *a, const void *b) {
    const struct Objet *objetA = (const struct Objet *)a;
    const struct Objet *objetB = (const struct Objet *)b;

    // Si le ratio de l'objet B est supérieur à celui de l'objet A, retourner 1, sinon retourner -1
    if (objetB->ratio > objetA->ratio) {
        return 1;
    } else {
        return -1;
    }
}

int maximum(int a, int b) {
    return (a >= b) ? a : b;
}

// Fonction récursive pour explorer toutes les combinaisons d'objets possibles
void explorerSolutions(int poids_sac, struct Objet objets[], int K[], int n, int poids_actuel, int solution[], int *solution_count, int index, bool *solutions_seen) {
    if (poids_actuel == poids_sac) {
        // Nous avons atteint le poids maximal du sac à dos, ajouter cette solution à la liste des solutions
        bool doublon = false;
        for (int i = 0; i < *solution_count; i++) {
            bool identique = true;
            for (int j = 0; j < n; j++) {
                if (solution[i * n + j] != solution[j]) {
                    identique = false;
                    break;
                }
            }
            if (identique) {
                doublon = true;
                break;
            }
        }
        if (!doublon) {
            for (int i = 0; i < n; i++) {
                solutions_seen[*solution_count * n + i] = solution[i]; // Copier la solution actuelle
            }
            (*solution_count)++;
        }
        return;
    }

    if (index == n) {
        return; // Si nous avons examiné tous les objets, retourner
    }

    // Inclure l'objet actuel dans la solution et passer à l'objet suivant
    for (int i = 0; i <= poids_sac / objets[index].poids; i++) {
        int poids_total = poids_actuel + objets[index].poids * i;
        if (poids_total <= poids_sac && K[poids_total] == K[poids_actuel] + objets[index].valeur * i) {
            solution[index] = i;
            // Créer une nouvelle solution pour l'appel récursif suivant
            int *new_solution = (int *)malloc(sizeof(int) * n);
            for (int j = 0; j < n; j++) {
                new_solution[j] = solution[j];
            }
            explorerSolutions(poids_sac, objets, K, n, poids_total, new_solution, solution_count, index + 1, solutions_seen);
            free(new_solution);
        }
    }
}
// Fonction pour afficher toutes les solutions optimales possibles
void afficherSolutions(int poids_sac, struct Objet objets[], int K[], int n) {
    int solution_count = 0;
    int *solution = (int *)malloc(sizeof(int) * n);
    bool *solutions_seen = (bool *)calloc(n * n * n, sizeof(bool));

    explorerSolutions(poids_sac, objets, K, n, 0, solution, &solution_count, 0, solutions_seen);

    printf(""Solutions optimales:\n"");
    for (int i = 0; i < solution_count; i++) {
        printf(""{"");
        for (int j = 0; j < n; j++) {
            printf(""%d"", solution[j]);
            if (j != n - 1) {
                printf("","");
            }
        }
        printf(""}\n"");
    }

    free(solution);
    free(solutions_seen);
}

void sacADos(int poids_sac, struct Objet objets[], int n) {
    // Tri des objets en fonction du rapport valeur/poids
    qsort(objets, n, sizeof(struct Objet), comparer);

    // Tableau pour stocker les valeurs maximales
    int K[poids_sac + 1];
    K[0] = 0;

    // Initialisation du tableau K
    for (int i = 1; i <= poids_sac; i++) {
        K[i] = 0;
    }

    // Recherche dynamique
    for (int i = 0; i < n; i++) {
        for (int j = poids_sac; j >= objets[i].poids; j--) {
            K[j] = maximum(K[j], objets[i].valeur + K[j - objets[i].poids]);
        }
    }

    // Affichage de la valeur maximale
    printf(""La valeur maximale de ce probleme de sac a dos: %d\n"", K[poids_sac]);

    // Affichage de toutes les solutions optimales
    afficherSolutions(poids_sac, objets, K, n);
}

int main() {
    int n, poids_sac;
    printf(""Entrez le nombre d'objet(s): "");
    scanf(""%d"", &n);
    printf(""Entrez la capacite du sac a dos: "");
    scanf(""%d"", &poids_sac);

    // Allocation dynamique d'un tableau d'objets
    struct Objet *objets = (struct Objet *)malloc(n * sizeof(struct Objet));

    printf(""Entrez le poids et la valeur de chaque objet:\n"");
    for (int i = 0; i < n; i++) {
        printf(""Objet %d:\n"", i + 1);
        printf(""Poids: "");
        scanf(""%d"", &objets[i].poids);
        printf(""Valeur: "");
        scanf(""%d"", &objets[i].valeur);
        objets[i].ratio = (double)objets[i].valeur / objets[i].poids; // Calcul du rapport valeur/poids
    }

    // Appel de la fonction sacADos
    sacADos(poids_sac, objets, n);

    // Libération de la mémoire allouée pour le tableau d'objets
    free(objets);

    return 0;
}
"
9nkAEGpN,i think snowy did his manual idk yet,coinwalk,JavaScript,Wednesday 6th of March 2024 03:35:01 PM CDT,"var organic = parseFloat(document.getElementById('pct_balance').value);
var divide = 240;
var beverse = Number((organic/divide).toFixed(8));
var tens = (beverse*10);
var sevens = (beverse*4.9);
var eights = (beverse*5.9);
var james = beverse;
var frances = 0;
var whatever = organic;
 
 
 
function soiled(){
whatever = document.getElementById('pct_balance').value;
var dog = ((whatever-organic).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))&&(whatever!=frances)){
    james = james*2;
    frances = parseFloat(whatever);
}
if ((whatever<=(james*25))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    james = beverse;
    frances = 0;
}
if ((whatever<=(james*25))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse;
    frances = 0;
}
if ((whatever<=(james*25))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse*2;
    frances = parseFloat(whatever);
}
if ((organic<=(james*10))&&(whatever<(((Math.floor(whatever/tens))*tens)+sevens))){
    james = beverse;
    frances = 0;
}
if ((organic<=(james*10))&&(whatever>(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse;
    frances = 0;
}
if ((organic<=(james*10))&&(whatever>(((Math.floor(whatever/tens))*tens)+sevens))&&(whatever<(((Math.floor(whatever/tens))*tens)+eights))){
    james = beverse*2;
    frances = parseFloat(whatever);
}
if (whatever>=(organic*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((james*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1000);
}
soiled();"
v0W9xCSr,sudo pacman -Rd plasma5-applets-system-monitor,bluebyt,INI file,Wednesday 6th of March 2024 03:12:28 PM CDT,sudo pacman -Rd plasma5-applets-system-monitor
2trdyXZj,Untitled,GregLeblanc,Perl,Wednesday 6th of March 2024 03:07:49 PM CDT,"#!/usr/bin/perl -w
use strict;
use warnings;

use CGI qw(:standard);

my $particle = param(""particle"");
my $charge = param(""charge"");
my $frequency = param(""frequency"");
my $nmrtable_data = ""/usr/local/lib/nmrtable_data"";
my $line;

# Constants
my $M_zero 		= 	1876.5592;

sub calculate_frequency {
	print p(""In the sub"");
	open (file_handle, ""<$nmrtable_data"") or die qq(Unable to open ""$nmrtable_data"");
	foreach (<file_handle>) {
		if (($_ =~ /$particle/) and ($_ =~ /$charge/)) {
			print p($_);
		}
	}
}

print header, start_html(-title=>""EAL Energy Calculator"",
		author=>""leblanc\@ohio.edu"");
print '<STYLE type=""text/css"">';
print ' H1.myclass {border-with: 1; border: solid; test-align: right;}';
print '</STYLE>';
print '<H1>EAL Energy Calculator</H1>';

if ($frequency eq """") {
	print hr, start_form;
	print p(""Please select particle: "", popup_menu(""particle"",
			['PROTONS','DEUTERONS','HELIUM-3','ALPHAS',
			'LITHIUM-6','LITHIUM-7','BORON-10','BORON-11',
			'CARBON-12','CARBON-13','NITROGEN-14',
			'NITROGEN-15','OXYGEN-16','ALUMINUM-27']));
	print p(""Please select charge state: "", popup_menu(""charge"",
			['+1','+2','+3','+4','+5','+6','+7','+8']));
	print p(""Please enter NMR Value (in MHz): "",textfield(""frequency"",""""));
	print p(submit(""Calculate""), reset(""Clear""));
	print end_form, hr;
} else {
	print hr, start_form,p;
    print ""<TABLE>"";
	print ""<TR><TH>Particle:<TD><big><b><font size=+1 color=#0000ff>$particle</font></b></big></TR>"";
	print ""<TR><TH>Charge State:<TD><big><b><font size +1 color=#0000ff>$charge</font></b></big></TR>"";
	print ""<TR><TH>Energy (MeV):<TD><b><font size=+1 color=#0000ff>$frequency</font> </b></TR></TABLE>"";
	calculate_frequency();
	# print p(""$nmrshow""),hr;
	print p(defaults(""Continue""));
	print end_form;
	$frequency = undef();
}
"
uy8nBNwB,Untitled,alexromanelli,Python,Wednesday 6th of March 2024 03:06:58 PM CDT,"# Desenvolver um programa que seja capaz de:
# 1) Ler uma string da entrada padrão, no formato dd/mm/aaaa.
# 2) Exibir a data na saída padrão, no formato dd/mm/aaaa.
# 3) Exibir a data na saída padrão por extenso. Ex.: ""1º de fevereiro de 2024"".
# 4) Verificar se a data é válida.
# 5) Adicionar dias a uma data.
# 6) Calcular a diferença entre duas datas em anos.

# pastebin.com/PyRXzHUZ

from typing import TypedDict

DIA, MES, ANO = 'dia', 'mês', 'ano'

TipoData = TypedDict('TipoData', {DIA: int, 
                                  MES: int, 
                                  ANO: int})


class Data:
    dia: int
    mes: int
    ano: int
    

def ler_data(texto_data: str) -> TipoData:
    texto_separado = texto_data.split('/')
    dia = int(texto_separado[0])
    mes = int(texto_separado[1])
    ano = int(texto_separado[2])
    data = {DIA: dia, MES: mes, ANO: ano}
    return data


def eh_ano_bissexto(a: int) -> bool:
    """"""O ano é bissexto quando:
       1) É múltiplo de 4;
       2) Não é múltiplo de 100, exceto se for múltiplo de 400.""""""
    if a % 4 == 0:
        if a % 100 == 0:
            if a % 400 == 0:
                return True
            return False
        return True
    return False


dias_no_mes = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def data_eh_valida(data: TipoData) -> bool:
    if 1 <= data['mês'] <= 12:
        dias = dias_no_mes[data['mês'] - 1]
        if data['mês'] == 2 and eh_ano_bissexto(data['ano']):
            dias = 29
        if 1 <= data['dia'] <= dias:
            return True
    return False


def exibir_data(data: TipoData) -> None:
    print(f""{data['dia']:02d}/{data['mês']:02d}/{data['ano']:04d}"")


mes_por_extenso = ['janeiro', 'fevereiro', 'março',
                   'abril', 'maio', 'junho', 'julho',
                   'agosto', 'setembro', 'outubro',
                   'novembro', 'dezembro']


def exibir_data_por_extenso(data: TipoData) -> None:
    # 01/03/2024 ~> ""1º de março de 2024""
    # 28/02/2024 ~> ""28 de fevereiro de 2024""
    mes = mes_por_extenso[data['mês'] - 1]
    primeiro = 'º' if data['dia'] == 1 else ''
    print(f""{data['dia']}{primeiro} de {mes} de {data['ano']}"")


def adicionar_dias_a_data(dias: int,
                          data: TipoData) -> TipoData:
    pass


def compara_datas(data1: TipoData,
                  data2: TipoData) -> int:
    """"""Compara duas datas. Retorna 0 se as datas forem iguais.
       Retorna 1 se a data 1 for maior que a data 2.
       Retorna -1 se a data 2 for maior que a data 1.""""""
    if data1['ano'] > data2['ano']:
        return 1
    if data1['ano'] == data2['ano']:
        if data1['mês'] > data2['mês']:
            return 1
        if data1['mês'] == data2['mês']:
            if data1['dia'] > data2['dia']:
                return 1
            if data1['dia'] == data2['dia']:
                return 0
            return -1
        return -1
    return -1


def diferenca_entre_datas_em_anos(data1: TipoData,
                                  data2: TipoData) -> int:
    """"""Calcula a diferença em anos entre duas datas.
       O cálculo deve iniciar com a diferença entre os valores dos anos, a1 - a2 (se a1 >= a2),
       ou a2 - a1 (caso contrário). Se o mês da data mais antiga for maior que o mês da data mais
       nova, subtraia 1 da diferença entre anos. Se os meses forem iguais, e o dia da data
       mais antiga for maior que o dia da data mais nova, subtraia 1 da diferença entre anos.""""""
    if compara_datas(data1, data2) == -1:
        data1, data2 = data2, data1
    dif = data1['ano'] - data2['ano']
    if data1['mês'] < data2['mês']:
        return dif - 1
    if data1['mês'] == data2['mês'] and data1['dia'] < data2['dia']:
        return dif - 1
    return dif


data1 = ler_data(input(""Informe a data 1: ""))
if data_eh_valida(data1):
    print(""Data é válida."")
else:
    print(""Data é inválida."")
data2 = ler_data(input(""Informe a data 2: ""))
c = compara_datas(data1, data2)
if c == 0:
    print(""As datas são iguais."")
elif c == 1:
    print(""Data 1 é maior que data 2."")
else:
    print(""Data 1 é menor que data 2."")
diferenca = diferenca_entre_datas_em_anos(data1, data2)
print(f'Há uma diferença de {diferenca} ano(s).')

# str_data = input(""Informe a data: "")
# dia, mes, ano = ler_data(str_data)
# exibir_data(dia, mes, ano)
# if data_eh_valida(dia, mes, ano):
#     print(""Data válida."")
#     exibir_data_por_extenso(dia, mes, ano)
#     d2, m2, a2 = adicionar_dias_a_data(1400, dia, mes, ano)
#     exibir_data(d2, m2, a2)
#     diferenca = diferenca_entre_datas_em_anos(dia, mes, ano,
#                                               d2, m2, a2)
#     print(f""Diferença em anos: {diferenca}."")
# else:
#     print(""Data inválida."")
"
2smx23AY,Untitled,kajs54,C,Wednesday 6th of March 2024 02:55:26 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#define N 100
int maximum(int a, int b) {
    if (a >= b) {
        return a;
    } else {
        return b;
    }
}
int existence_solution(int solutionSet[][N], int n, int* setIndex, int count[], int taille_solution) {
    int i,j;
    for (i = 0; i < *setIndex; i++) {
        int trouve = 1;
        for (j = 0; j < taille_solution; j++) {
            if (solutionSet[i][j] != count[j]) {
                trouve = 0;
                break;
            }
        }
        if (trouve) {
            return 1;
        }
    }
    return 0;
}
void afficherSolutions(int W, int poids[], int valeur[], int K[], int n, int count[], int solutionSet[][N], int* setIndex) {
    if (W == 0) {
        if (existence_solution(solutionSet, n, setIndex, count, n)) {
            return;
        }
        for (int i = 0; i < n; i++) {
            solutionSet[*setIndex][i] = count[i];
        }
        (*setIndex)++;


        printf(""{"");
        for (int i = 0; i < n; i++) {
            printf(""%d"", count[i]);
            if (i != n - 1) {
                printf("","");
            }
        }
        printf(""}\n"");
    } else {
        for (int i = 0; i < n; i++) {
            if (poids[i] <= W && K[W] == valeur[i] + K[W - poids[i]]) {
                count[i]++;
                afficherSolutions(W - poids[i], poids, valeur, K, n, count, solutionSet, setIndex);
                count[i]--;
            }
        }
    }
}

int sacADos(int poids_sac, int poids[], int valeur[], int n, int count[]) {
    int i, weight;
    int K[poids_sac + 1];

    K[0] = 0;

    for (weight = 1; weight <= poids_sac; weight++) {
        K[weight] = 0;
        for (i = 0; i < n; i++) {
            if (poids[i] <= weight) {
                K[weight] = maximum(K[weight], valeur[i] + K[weight - poids[i]]);
            }
        }
    }

    int solutionSet[N][N];
    int setIndex = 0;

    printf(""Solutions optimales:\n"");
    afficherSolutions(poids_sac, poids, valeur, K, n, count, solutionSet, &setIndex);
    printf("" La valeur maximale de ce probleme de sac a dos: %d\n"", K[poids_sac]);

    return K[poids_sac];
}


int main() {
    int n, poids_sac;
    printf(""Entrez le nombre d'objet(s): "");
    scanf(""%d"", &n);
    printf(""Entrez la capacite du sac a dos:"");
    scanf(""%d"", &poids_sac);
    int poids[n], valeur[n], count[n];
    printf(""-----------------------------------***** S A C     A     D O S *****---------------------------------------\n"");
    printf(""Entrez le poids et la valeur de chaque objet:\n"");
    for (int i = 0; i < n; i++) {
        printf(""Objet %d:\n"", i + 1);
        printf("" poids: "");
        scanf(""%d"", &poids[i]);
        printf("" la valeur de l'objet '%d': "",i+1);
        scanf(""%d"", &valeur[i]);
        count[i] = 0;
    }
    int res = sacADos(poids_sac, poids, valeur, n, count);

    return 0;
}
"
2LyLHSrd,javasc,Bahaeddin,JavaScript,Wednesday 6th of March 2024 02:48:25 PM CDT,"'''
<!DOCTYPE html>
<html lang=""en"">
<head>
<title>Moamalat</title>
</head>
<body>

<input type=""button"" onclick=""Do()"" value=""open"">
<script src=""	https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.bundle.min.js.map""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"" integrity=""sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>
<script src=""https://npg.moamalat.net:6006/js/lightbox.js""> </script>
 <script>

// use https://npg.moamalat.net:6006/js/lightbox.js in production environment
function Do(){
    callLightbox();
  //   Lightbox.Checkout.showLightbox();
}
function callLightbox() {

    debugger
var mID='$mID';// use your merchant id here;
var tID='$tID';// use your terminal id here;
var amount=$amount;
var merchantKey='$key';
var merchRef='1234';// this will be user as your reference to the transaction you can manage this string by any format


  //debugger;
  //var dt = new Date().YYYYMMDDHHMMSS();
  var dt = new Date().toGMTString();
  var hmacSHA256 = '';
  
  
  merchantKey = hex_to_ascii(merchantKey);
  var strHashData = 'Amount='+amount+'000&DateTimeLocalTrxn='+dt+'&MerchantId='+mID+'&MerchantReference='+merchRef+'&TerminalId='+tID;
  console.log(strHashData);
  hmacSHA256 = CryptoJS.HmacSHA256(strHashData,merchantKey).toString().toUpperCase();
       
  console.log(hmacSHA256);

 
  
  Lightbox.Checkout.configure = {
    MID: mID,
    TID: tID,
    AmountTrxn: amount+'000',
    MerchantReference: merchRef,
    TrxDateTime: dt,
    SecureHash:  hmacSHA256 ,
    completeCallback: function (data) {
      console.log('completed');
      console.log(data);
    },
    errorCallback: function (data) {
      console.log('error');
      console.log(data);
    },
    cancelCallback:function () {
      console.log('cancel');
    }
  };

  Lightbox.Checkout.showLightbox();
}

function hex_to_ascii(str1)
	 {
		var hex  = str1.toString();
		var str = '';
		for (var n = 0; n < hex.length; n += 2) {
			str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));
		}
		return str;
	 }
Object.defineProperty(Date.prototype, 'YYYYMMDDHHMMSS', {
    value: function() {
        function pad2(n) {  // always returns a string
            return (n < 10 ? '0' : '') + n;
        }

        return this.getFullYear() +
               pad2(this.getMonth() + 1) + 
               pad2(this.getDate()) +
               pad2(this.getHours()) +
               pad2(this.getMinutes()) +
               pad2(this.getSeconds());
    }
});


 </script>

</body>
</html>
''';"
xKfMknhc,PJ01_Python_pyFrameCutter.py,creativesamurai1982,Python,Wednesday 6th of March 2024 02:33:45 PM CDT,"import cv2
import numpy as np
import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# Define the folder to monitor
folder_to_monitor = 'C:\\Users\\david\\Desktop\\TESTING\\scans'

# Define the output folder
output_folder = 'C:\\Users\\david\\Desktop\\TESTING\\output'

# Configure Settings


# ThreshHold Settings
thresholdValue = 205
maxValue = 225

# Canny Edge Detection
upper = 50
lower = 150

# Create a class to handle file system events
class ImageHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory:
            return

        if event.src_path.endswith(('.jpg', '.png', '.jpeg')):
            print(f""New image detected: {event.src_path}"")
            process_image(event.src_path)
            
# Initialize a counter for frame filenames
frame_counter = 1

# Function to process an image
def process_image(image_path):
    # Declare frame_counter as global    
    global frame_counter
    
    # Load the original image
    original_image = cv2.imread(image_path)

    # Rotate the original image 180 degrees
    rotated_image = cv2.rotate(original_image, cv2.ROTATE_180)

    # Convert to grayscale
    grey = cv2.cvtColor(rotated_image, cv2.COLOR_BGR2GRAY)

    # Use threshold to convert image to binary
    ret, thresh1 = cv2.threshold(grey, thresholdValue, maxValue, cv2.THRESH_BINARY) # 213

    # Apply morphological operations to remove specs or dirt/noise from the sprocket holes
    kernel = np.ones((8, 8), np.uint8)
    closing = cv2.morphologyEx(thresh1, cv2.MORPH_CLOSE, kernel, iterations=2)

    # Edge Detection for detecting contours
    edge = cv2.Canny(closing, upper, lower, apertureSize=7, L2gradient=True)

    # Finding Contours
    cnts, _ = cv2.findContours(edge, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    cnts = sorted(cnts, key=lambda x: cv2.boundingRect(x)[0])

    # Create a list to store the cropped ROIs
    cropped_rotated_rois = []

    for c in cnts:
        x, y, w, h = cv2.boundingRect(c)

        if h > 200 and w > 20:
            # Adjust the coordinates to create a larger bounding box
            x -= -50  # Move the left edge 10 pixels to the left
            y -= 10  # Move the top edge 10 pixels up
            w += 600  # Increase the width by 20 pixels
            h += 1050  # Increase the height by 20 pixels

            # Crop the ROI from the original image
            roi = rotated_image[y:y+h, x:x+w]

            # Rotate the cropped ROI (90 degrees clockwise)
            rotated_roi = cv2.rotate(roi, cv2.ROTATE_90_CLOCKWISE)

            # Flip the rotated ROI vertically
            flipped_roi = cv2.flip(rotated_roi, 1)

            # Append the rotated and flipped ROI to the list
            cropped_rotated_rois.append(flipped_roi)

    # Discard the last ROI if there are more than one
    if len(cropped_rotated_rois) > 1:
        cropped_rotated_rois.pop()

    # Save each cropped ROI to the output folder
    for idx, roi in enumerate(cropped_rotated_rois):
        output_filename = f""frame{frame_counter:06}.jpg""
        output_path = os.path.join(output_folder, output_filename)
        cv2.imwrite(output_path, roi)
        print(f""Processed image saved: {output_path}"")
        
        # Increment the frame counter
        frame_counter += 1

# Set up the watchdog observer
event_handler = ImageHandler()
observer = Observer()
observer.schedule(event_handler, folder_to_monitor, recursive=False)
observer.start()

print(f""Monitoring folder: {folder_to_monitor}"")
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    observer.stop()

observer.join()

# Call the process_image function for each image
for image_filename in image_filenames:
    image_path = os.path.join(input_folder, image_filename)
    process_image(image_path)"
C0tjpx4e,PJ01_Python_pyCineScan.py,creativesamurai1982,Python,Wednesday 6th of March 2024 02:32:42 PM CDT,"# pyCineScan.py
# by David Holt
# RUN THIS SCRIPT AS ADMINISTRATOR

import datetime
import logging
import os
import sys
import time

import serial.tools.list_ports
import win32ui
from pywinauto.application import Application

# from py_cinescan_timer import time_functions


# Set up logging configuration
logging.basicConfig(filename='pyCineScan.log', level=logging.INFO, format='%(asctime)s - %(levelname)s: %(message)s')


def time_functions(scan, moveFilm):
    # Initialize total time
    total_time = 0
    count = 0

    # Start the loop
    while True:
        # Timing scan()
        start_time_scan = time.perf_counter()
        scan()
        end_time_scan = time.perf_counter()

        # Calculating time taken for scan()
        time_taken_scan = end_time_scan - start_time_scan

        # Timing moveFilm()
        start_time_moveFilm = time.perf_counter()
        moveFilm()
        end_time_moveFilm = time.perf_counter()

        # Calculating time taken for moveFilm()
        time_taken_moveFilm = end_time_moveFilm - start_time_moveFilm

        # Calculating total time for this iteration
        iteration_total_time = time_taken_scan + time_taken_moveFilm

        # Adding the iteration time to the total time
        total_time += iteration_total_time

        # Increment the count
        count += 1

        # Convert total_time to days, hours, minutes, and seconds
        total_time_td = datetime.timedelta(seconds=int(total_time))

        # Extract the number of days from total_time
        total_days = total_time_td.days

        # Format the remaining time (hours, minutes, seconds) as HH:MM:SS
        remaining_time_str = str(total_time_td - datetime.timedelta(days=total_days))

        # Print the individual times and current cumulative time in the desired format
        print(f""Scan: {count}"")
        print()
        print(f""Time taken for scan: {datetime.timedelta(seconds=int(time_taken_scan))}"")
        print(f""Time taken for moveFilm: {datetime.timedelta(seconds=int(time_taken_moveFilm))}"")
        print()
        print(f""Total time elapsed: Day(s) {total_days}, {remaining_time_str}"")
        print()


def get_ports():
    os.system('cls')
    ports = serial.tools.list_ports.comports()
    return ports


def findArduino(portsFound):
    commPort = 'None'
    numConnection = len(portsFound)

    for i in range(0, numConnection):
        port = foundPorts[i]
        strPort = str(port)

        if 'Arduino' in strPort:
            splitPort = strPort.split(' ')
            commPort = (splitPort[0])

    return commPort


foundPorts = get_ports()
connectPort = findArduino(foundPorts)

if connectPort != 'None':
    ser = serial.Serial(connectPort, baudrate=9600, timeout=None)
    print('Searching for Arduino UNO')
    time.sleep(0.5)
    print('Arduino UNO Connected to ' + connectPort)
    print()
    print('Waiting for the Arduino UNO to reset....')
    time.sleep(3)


else:
    print('Serial connection FAILED!')
    time.sleep(1.5)
    sys.exit()

print('Arduino Is Ready')
print()


def clear_receive_buffer():
    ser.reset_input_buffer()

# Main Menu Start
def mainMenu():
    os.system('cls')
    print()
    print(""		  Cine Scan"")
    print(""		  =-=-=-=-="")
    print(""		Version 1.0.0"")
    print(""		By David Holt"")
    print()
    print(""Main Menu"")
    print(""---------"")
    print()

    print(""1 - Enable Takeup Reel."")
    print(""2 - Align Film With Scanner."")
    print(""3 - Start Scanning."")
    print(""4 - Advance by 10 frames."") # not used yet!
    print(""5 - Advance by 20 frames."") # not used yet!
    print()
    print(""0. Quit "")
    print()
    while True:
        try:
            selection = int(input(""Enter choice: ""))
            if selection == 1:
                one()  # 1 - Enable Takeup Reel
                break
            elif selection == 2:
                global main_window
                two()  # 2 - Align Film With Scanner
                break
            elif selection == 3:
                global main_window
                three()  # 3 - Start Scanning
                break
            elif selection == 0:
                sys.exit(1)
                break
            else:
                print(""Invalid choice. Enter 1-3"")
                mainMenu()
        except ValueError:
            print(""Invalid choice. Enter 1-3"")
    exit


def one():
    ser.write(b'T')
    mainMenu()


def two():
    ser.write(b'X')
    mainMenu()


def three():
    global main_window
    if main_window:
        main_window.set_focus()
    repeatFunc()
    mainMenu()


# Main Menu Finish


def loadProg():
    global main_window
    # Start VueScan
    print(""Checking If VueScan Is Installed..."")
    time.sleep(0.5)
    if os.path.exists(r""D:\Apps_Portable\VueScan""):
        vuescan_file = r""D:\Apps_Portable\VueScan\vuescan.exe""
        print(""VueScan Found at "" + vuescan_file)
        print()
        time.sleep(0.5)
        print(""Checking if VueScan is currently running..."")
        time.sleep(0.5)

        def vuescanExists(classname):
            try:
                win32ui.FindWindow(classname, None)
            except win32ui.error:
                return False
            else:
                return True
    else:
        print(""Can't find VueScan on your computer"")
        print(""Terminating Script!"")
        print()
        time.sleep(0.5)
        sys.exit(1)

    if vuescanExists(""wxWindowNR""):
        print(""VueScan already running"")
        print()
        time.sleep(0.5)
        print(""Attempting to connect...."")
        time.sleep(0.5)
        app = Application(backend=""win32"").connect(title_re=""VueScan 9 x64*."", class_name=""wxWindowNR"")
        time.sleep(6)
        print('Connected')
        print()
        time.sleep(0.5)
    else:
        print(""Loading VueScan..."")
        print()
        app = Application(backend=""win32"").start(vuescan_file)
        time.sleep(7.5)
        app = Application(backend=""win32"").connect(title_re=""VueScan 9 x64*."", class_name=""wxWindowNR"")

    # Select the main GUI window
    print(""Selecting main window..."")
    time.sleep(0.5)
    main_window = app.wxWindowNR
    print(""Done"")
    print()

    time.sleep(2)
    print(""Loading scanner config..."")
    time.sleep(0.5)
    menu_item = main_window.menu_item(u'&File->Load film_scan\tF1')
    menu_item.select()
    print(""Done"")
    time.sleep(0.5)


def scan():  # Main Scan Function, Use This When Not Testing.
    try:
        while True:
            main_window.set_focus()
            print()
            print(""-------------------------------------------------------------"")
            print()
            button = main_window.Preview
            button.wait('enabled', timeout=30)
            print(""Scanning Film Strip..."", end='')
            button.click()
            button.wait_not('enabled', timeout=600)
            print("" OK!"")
            print()
            break
    except KeyboardInterrupt:
        print()
        mainMenu()


def moveFilm():  # Main moveFilm Function, Use This When Not Testing.
    startMove = time.perf_counter()
    ser.write(b'M')
    clear_receive_buffer()  # Clear the receive buffer after sending the command
    print()
    print(""Moving Film..."", end='')
    ser.read_until(b'S\r\n')
    print("" OK!"")
    print()


def repeatFunc():
    time_functions(scan, moveFilm)


if __name__ == '__main__':
    get_ports()
    print()
    loadProg()
    mainMenu()
    repeatFunc()

    print(""If your seeing this, Something has gone wrong!!!!"")

"
fnrxUT06,PJ01_Arduino_pyCineScan.ino,creativesamurai1982,C++,Wednesday 6th of March 2024 02:30:46 PM CDT,"/*
Pins for the CNC Shield v3

 X_STP_PIN           2
 Y_STP_PIN           3
 Z_STP_PIN           4

 X_DIR_PIN           5
 Y_DIR_PIN           6
 Z_DIR_PIN           7

 SHIELD_EN_PIN       8 pos useage for turning steppers off for realligment
*/


// INCLUDES
#include <AccelStepper.h>
#include <ezButton.h>

// Define the stepper motor connections
const int Z_DIR_PIN = 7;   //  Z Takeup Reels Direction Pin
const int Z_STP_PIN = 4;  //  Z Takeup Reels Step Pin
const int X_DIR_PIN = 5;   //  X Capstans Direction Pin
const int X_STP_PIN = 2;  //  X Capstans Step Pin

const int stepsPerRev = 200;   // Number of steps for a full rotation(360) // SPROCKET(CAPSTAN)
const int stepsPerRev2 = 200;  // Number of steps for a full rotation(360) // Takeup Reel
const int microSteps = 16;     // 16th microstepping
//const int takeupMaxSpeed = 250;     // Takeup Reel Max Speed
//const int takeupSpeed = 250;        // Takeup Reel Speed
//const int capstanMaxSpeed = 600;    // Capstan Reel Max Speed
//const int capstanSpeed = 600;       // Capstan Reel Speed 120
//const int capstanAccel = 99999999;  // * Sets the steppers acceleration to a high number so that the stepper
//const int takeupAccel = 99999999;   // * number so that the stepper Doesn't acceralate. 99999999

const int takeupMaxSpeed = 450;   // Takeup Reel Max Speed
const int takeupSpeed = 450;      // Takeup Reel Speed
const int capstanMaxSpeed = 900;  // Capstan Reel Max Speed
const int capstanSpeed = 900;     // Capstan Reel Speed 120

const int capstanAccel = 800;      // * Sets the steppers acceleration to a high number so that the stepper
const int takeupAccel = 99999999;  // * number so that the stepper Doesn't acceralate. 99999999

int steps = 800;  //  Number of steps to move x amount of 8mm cine film frames.
/*
__________________
| STEPS | FRAMES |
|-------|--------|
|  100  |   6    |
|  200  |   12   | 1
|  300  |   18   |
|  400  |   24   | 2
|  500  |   30   |
|  600  |   36   | 3
|  700  |   42   |
|  800  |   48   | 4
|  900  |   54   |
| 1000  |   60   | 5
*/

// Create two new instances of the AccelStepper class
AccelStepper takeup(AccelStepper::DRIVER, Z_STP_PIN, Z_DIR_PIN);   // Runs all the time unless switch is pressed!
AccelStepper capstan(AccelStepper::DRIVER, X_STP_PIN, X_DIR_PIN);  // Runs only when told to via serial coms

// SWITCH SETUP
ezButton tensionSW(9);   // Create ezButton object that attach to pin 7;
ezButton stopButton(11);  // Create ezButton object that attach to pin 3;

bool isTakeupActive = false;       // Flag to track the status of the takeup stepper
bool isCapstanContinuous = false;  // Flag to indicate capstan continuous movement

void setup() {
  Serial.begin(9600);  // Initialize serial communication at 9600 baud

  Serial.println("""");
  Serial.println(""M = Move"");  //
  Serial.println(""T = Activate Takeup Stepper"");  //
  Serial.println(""X = enable capstan continuous movement"");  //
  Serial.println("""");

  tensionSW.setDebounceTime(50);  // set debounce time to 50 milliseconds

  takeup.setMaxSpeed(takeupMaxSpeed);   // Set the maximum speed of the stepper motor
  takeup.setSpeed(takeupSpeed);         // Set the speed of the stepper motor
  takeup.setAcceleration(takeupAccel);  // Set the acceleration of the stepper motor

  capstan.setMaxSpeed(capstanMaxSpeed);   // Set the maximum speed of the stepper motor
  capstan.setSpeed(capstanSpeed);         // Set the speed of the stepper motor
  capstan.setAcceleration(capstanAccel);  // Set the acceleration of the stepper motor

  takeup.move(999999999);  // * Tells the Takeup stepper to to move x steps
                           // * when takeup.run() is called in the loop.
}

void loop() {
  serialCheck();
  tensionSW.loop();  // Checks that status of the switch
  stopButton.loop();
  switchReleased();  // code for when the switch is released
  switchPressed();   // code for when the switch is pressed

  if (isTakeupActive) {
    takeup.run();
  }

  if (isCapstanContinuous) {
    capstan.move(steps * microSteps);
    capstan.run();
    if (stopButton.isPressed()) {
      isCapstanContinuous = false;  // Stop the capstan continuous movement
      capstan.stop();
      Serial.println(""Capstan movement stopped."");
    }
  } else {
    capstan.run();
  }
}

void serialCheck() {
  // Note: we shall process one command at a time! This means: reset the
  // following variable to zero as soon as the command is done processing.
  static char current_command;

  // Do not proceed with another command until we're done with the current one!
  if (current_command == 0) {
    if (Serial.available() > 0) {
      current_command = Serial.read();
      // Perform a single action upon receiving a command. Makes code easier to read.
      switch (current_command) {
        default:
          current_command = 0;
          break;  // Ignore unknown commands
        case 'M':
          capstan.move(steps * 16);
          break;   // Move the motor 100 steps
        case 'T':  // Activate the takeup stepper
          isTakeupActive = true;
          break;
        case 'A':  // Activate the takeup stepper
          isTakeupActive = false; //not sure this is working!
          break;
        case 'X':  // enable capstan continuous movement
          isCapstanContinuous = true;
          break;
      }
    }
  } else {
    // Send a message when the motor is done moving:
    if (capstan.isRunning() == false) {
      current_command = 0;  // Reset the current_command
      Serial.println(""S"");  // Send message ""We're done!""
    }
  }
}

void switchReleased() {

  if (tensionSW.isReleased()) {
    Serial.println(""MOVING - Trigger Released"");
    takeup.move(999999999);
  }
}

void switchPressed() {
  if (tensionSW.isPressed()) {
    Serial.println(""STOPPED - Trigger Pressed"");
    takeup.stop();
  }
}"
0tNZRPbT,zad7_php,ppiso,PHP,Wednesday 6th of March 2024 02:23:23 PM CDT,"<?php
if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $file = $_FILES[""file""];
    $fileName = $file[""name""];
    $fileSize = $file[""size""];
    $fileType = $file[""type""];

    // Sprawdzenie, czy plik jest graficznym (jpg, png, gif)
    $allowedExtensions = [""jpg"", ""jpeg"", ""png"", ""gif""];
    $fileExtension = strtolower(pathinfo($fileName, PATHINFO_EXTENSION));
    if (!in_array($fileExtension, $allowedExtensions)) {
        echo ""Błąd: Wybrany plik nie jest plikiem graficznym."";
        exit;
    }

    // Zamiana znaków polskich na ""bezogonkowe"" w nazwie pliku
    $fileNameWithoutDiacritics = strtr($fileName, [
        'ą' => 'a', 'ć' => 'c', 'ę' => 'e', 'ł' => 'l', 'ń' => 'n',
        'ó' => 'o', 'ś' => 's', 'ź' => 'z', 'ż' => 'z',
        'Ą' => 'A', 'Ć' => 'C', 'Ę' => 'E', 'Ł' => 'L', 'Ń' => 'N',
        'Ó' => 'O', 'Ś' => 'S', 'Ź' => 'Z', 'Ż' => 'Z'
    ]);

    // Przesłanie pliku do katalogu ""upload""
    $uploadDirectory = ""upload/"";
    if (!is_dir($uploadDirectory)) {
        mkdir($uploadDirectory);
    }
    $targetPath = $uploadDirectory . $fileNameWithoutDiacritics;
    move_uploaded_file($file[""tmp_name""], $targetPath);

    echo ""Plik \""$fileNameWithoutDiacritics\"" o rozmiarze $fileSize bajtów został przesłany i zapisany w katalogu \""upload\""."";
}
?>
"
cK5zPBY6,zad7_html,ppiso,HTML,Wednesday 6th of March 2024 02:23:01 PM CDT,"<!DOCTYPE html>
<html lang=""pl"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Formularz przesyłania pliku</title>
</head>
<body>
    <h1>Formularz przesyłania pliku</h1>
    <form method=""post"" action=""operacja.php"" enctype=""multipart/form-data"">
        <label for=""file"">Wybierz plik:</label>
        <input type=""file"" name=""file"" id=""file"">
        <input type=""submit"" value=""Prześlij"">
    </form>
</body>
</html>
"
SkjrVK4G,Untitled,smj007,Python,Wednesday 6th of March 2024 02:19:51 PM CDT,"# easier and simpler

HASH_NUM = 524287

class MyHashSet:
    def __init__(self):

        self.tables = [0]*HASH_NUM
        
    def add(self, key: int) -> None:

        key = key%HASH_NUM
        self.tables[key] = 1
        
    def remove(self, key: int) -> None:
        key = key%HASH_NUM
        if self.tables[key]:
            self.tables[key] = 0
            return 

        return 

    def contains(self, key: int) -> bool:
        key = key%HASH_NUM
        return self.tables[key]   



HASH_NUM = 2069

class Node:
    def __init__(self, val):
        self.val = val
        self.next = None

class MyHashSet:

    def __init__(self):

        self.tables = [None]*HASH_NUM
        
    def add(self, key: int) -> None:
  
        # address collision
        if self.tables[key%HASH_NUM]:
            current = self.tables[key%HASH_NUM]
            prev = current

            while current:
                if current.val == key:
                    return 
                prev = current
                current = current.next
            prev.next = Node(key)

        self.tables[key%HASH_NUM] = Node(key)

    
    def remove(self, key: int) -> None:
        if self.tables[key%HASH_NUM]:
            current = self.tables[key%HASH_NUM]
            prev = current

            # if key matches at the head of the node
            if key == current.val:
                self.tables[key%HASH_NUM] = current.next
                return

            while current:
                if key == current.val:
                    prev.next = current.next
                    return
                prev = current
                current = current.next


    def contains(self, key: int) -> bool:
        
        current = self.tables[key%HASH_NUM]
        while current:
            if current.val == key:
                return True
            current = current.next
        
        return False


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)"
0U6NkmVU,REDUwriteMap,Taupe,JavaScript,Wednesday 6th of March 2024 02:19:09 PM CDT,"function writeMap(){
    let map = GM_getValue(""map"");
    if(map === undefined || !Array.isArray(map) || map.length !== 2 || map[0].length !== MAP_HEIGHT || map[0][0].length !== MAP_WIDTH){
        map = blankMap();
        GM_setValue(""map"", map);
    }

    ruineExplorerFloorTxt.textContent = `Étage ${visibleFloor}`;

    for(let i = 0; i < MAP_HEIGHT; i++){
        for(let j = 0; j < MAP_WIDTH; j++){
            let currentDivIndex = i * MAP_WIDTH + j;
            if(currentDivIndex < mapGrid.children.length) {
                let currentDiv = mapGrid.children[currentDivIndex];
                let currentTile = map[visibleFloor][i][j];
                currentDiv.textContent = """";
                currentDiv.className = ""z"" + currentTile.zombies;
                if(currentTile.door !== NOTHING){
                    let doorImage = DOORS_IMG[currentTile.door].cloneNode(true);
                    currentDiv.appendChild(doorImage);
                }
                if(currentTile.directions !== EMPTY && DIRECTIONS_IMG[currentTile.directions]){
                    let directions = DIRECTIONS_IMG[currentTile.directions].cloneNode(true);
                    currentDiv.appendChild(directions);
                }
            }
        }
    }

    let position = GM_getValue(""position"");
    if(position !== undefined && position[2] === visibleFloor){
        if(position[1] * MAP_WIDTH + position[0] < mapGrid.children.length) {
            let positionTemp = mapGrid.children[position[1] * MAP_WIDTH + position[0]];
            if(positionTemp && positionTemp.children.length > 0) {
                positionTemp.children[0].before(PLAYER_POSITION_IMG.cloneNode(true));
            } else if(positionTemp) {
                positionTemp.appendChild(PLAYER_POSITION_IMG.cloneNode(true));
            }
        }
    }
}"
PyRXzHUZ,Untitled,alexromanelli,Python,Wednesday 6th of March 2024 02:17:00 PM CDT,"# Desenvolver um programa que seja capaz de:
# 1) Ler uma string da entrada padrão, no formato dd/mm/aaaa.
# 2) Exibir a data na saída padrão, no formato dd/mm/aaaa.
# 3) Exibir a data na saída padrão por extenso. Ex.: ""1º de fevereiro de 2024"".
# 4) Verificar se a data é válida.
# 5) Adicionar dias a uma data.
# 6) Calcular a diferença entre duas datas em anos.

# pastebin.com/qZb1WPEP


def ler_data(texto_data: str) -> tuple[int, int, int]:
    texto_separado = texto_data.split('/')
    dia = int(texto_separado[0])
    mes = int(texto_separado[1])
    ano = int(texto_separado[2])
    data = (dia, mes, ano)
    return data


def eh_ano_bissexto(a: int) -> bool:
    """"""O ano é bissexto quando:
       1) É múltiplo de 4;
       2) Não é múltiplo de 100, exceto se for múltiplo de 400.""""""
    if a % 4 == 0:
        if a % 100 == 0:
            if a % 400 == 0:
                return True
            return False
        return True
    return False


dias_no_mes = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def data_eh_valida(data: tuple[int, int, int]) -> bool:
    if 1 <= data[1] <= 12:
        dias = dias_no_mes[data[1] - 1]
        if data[1] == 2 and eh_ano_bissexto(data[2]):
            dias = 29
        if 1 <= data[0] <= dias:
            return True
    return False


def exibir_data(d: int, m: int, a: int) -> None:
    print(f""{d:02d}/{m:02d}/{a:04d}"")


mes_por_extenso = ['janeiro', 'fevereiro', 'março',
                   'abril', 'maio', 'junho', 'julho',
                   'agosto', 'setembro', 'outubro',
                   'novembro', 'dezembro']


def exibir_data_por_extenso(d: int, m: int, a: int) -> None:
    # 01/03/2024 ~> ""1º de março de 2024""
    # 28/02/2024 ~> ""28 de fevereiro de 2024""
    mes = mes_por_extenso[m - 1]
    primeiro = 'º' if d == 1 else ''
    print(f""{d}{primeiro} de {mes} de {a}"")


def adicionar_dias_a_data(dias: int,
                          data_dia: int,
                          data_mes: int,
                          data_ano: int) -> tuple[int, int, int]:
    pass


def compara_datas(d1: int, m1: int, a1: int,
                  d2: int, m2: int, a2: int) -> int:
    """"""Compara duas datas. Retorna 0 se as datas forem iguais.
       Retorna 1 se a data 1 for maior que a data 2.
       Retorna -1 se a data 2 for maior que a data 1.""""""
    if a1 > a2:
        return 1
    if a1 == a2:
        if m1 > m2:
            return 1
        if m1 == m2:
            if d1 > d2:
                return 1
            if d1 == d2:
                return 0
            return -1
        return -1
    return -1


def diferenca_entre_datas_em_anos(d1: int, m1: int, a1: int,
                                  d2: int, m2: int, a2: int) -> int:
    """"""Calcula a diferença em anos entre duas datas.
       O cálculo deve iniciar com a diferença entre os valores dos anos, a1 - a2 (se a1 >= a2),
       ou a2 - a1 (caso contrário). Se o mês da data mais antiga for maior que o mês da data mais
       nova, subtraia 1 da diferença entre anos. Se os meses forem iguais, e o dia da data
       mais antiga for maior que o dia da data mais nova, subtraia 1 da diferença entre anos.""""""
    if compara_datas(d1, m1, a1, d2, m2, a2) == -1:
        d1, m1, a1, d2, m2, a2 = d2, m2, a2, d1, m1, a1
    dif = a1 - a2
    if m1 < m2:
        return dif - 1
    if m1 == m2 and d1 < d2:
        return dif - 1
    return dif


data1 = ler_data(input(""Informe a data 1: ""))
if data_eh_valida(data1):
    print(""Data é válida."")
else:
    print(""Data é inválida."")
data2 = ler_data(input(""Informe a data 2: ""))
c = compara_datas(d1, m1, a1, d2, m2, a2)
if c == 0:
    print(""As datas são iguais."")
elif c == 1:
    print(""Data 1 é maior que data 2."")
else:
    print(""Data 1 é menor que data 2."")
diferenca = diferenca_entre_datas_em_anos(d1, m1, a1, d2, m2, a2)
print(f'Há uma diferença de {diferenca} ano(s).')

# str_data = input(""Informe a data: "")
# dia, mes, ano = ler_data(str_data)
# exibir_data(dia, mes, ano)
# if data_eh_valida(dia, mes, ano):
#     print(""Data válida."")
#     exibir_data_por_extenso(dia, mes, ano)
#     d2, m2, a2 = adicionar_dias_a_data(1400, dia, mes, ano)
#     exibir_data(d2, m2, a2)
#     diferenca = diferenca_entre_datas_em_anos(dia, mes, ano,
#                                               d2, m2, a2)
#     print(f""Diferença em anos: {diferenca}."")
# else:
#     print(""Data inválida."")
"
LetUYXeb,zad6_php,ppiso,PHP,Wednesday 6th of March 2024 02:13:12 PM CDT,"<?php
if (isset($_POST['calculateWords'])) {
    $inputText = $_POST['inputText'];

    // Podziel tekst na słowa
    $words = str_word_count($inputText, 1);

    // Wyświetl długość każdego słowa
    echo ""<h2>Długość słów w tekście:</h2>"";
    foreach ($words as $word) {
        echo ""<p>Słowo \""$word\"" ma długość "" . strlen($word) . "" znaków.</p>"";
    }
}
?>
"
sSgcea8e,zad6_html,ppiso,HTML,Wednesday 6th of March 2024 02:12:52 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Kalkulator długości słów</title>
</head>
<body>
    <form action=""operacja.php"" method=""post"">
        <label for=""inputText"">Wprowadź zdanie lub tekst:</label>
        <textarea id=""inputText"" name=""inputText"" rows=""4"" cols=""50"" required></textarea>
        <br>
        <input type=""submit"" name=""calculateWords"" value=""Policz długość słów"">
    </form>
</body>
</html>
"
Te8py4LQ,zad5_php,ppiso,PHP,Wednesday 6th of March 2024 02:09:48 PM CDT,"<?php
if (isset($_POST['convertDate'])) {
    $inputDate = $_POST['inputDate'];
    $outputFormat = $_POST['outputFormat'];

    // Sprawdź, czy wprowadzona data jest poprawna
    if (strtotime($inputDate) === false) {
        echo ""Nieprawidłowa data. Wprowadź datę w formacie YYYY-MM-DD."";
    } else {
        // Konwertuj datę na wybrany format
        $convertedDate = date($outputFormat, strtotime($inputDate));
        echo ""Wprowadzona data w formacie $outputFormat: $convertedDate"";
    }
}
?>
"
