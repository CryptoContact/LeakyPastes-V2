id,title,username,language,date,content
uHUWks9e,🤑G2A.com Free Gift Card FIX June 2024🤑,buch,JavaScript,Monday 17th of June 2024 07:04:50 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
v0xrnLLc,Untitled,Jakowlew,C++,Monday 17th of June 2024 07:04:44 AM CDT,"jakowlew@jakowlew-VirtualBox:~/lp2$ ./client_run.sh 
[2024-06-17 15:02:41.858] [info] # RTSP[config]: found codec libx264 (libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10)
[2024-06-17 15:02:41.858] [info] # RTSP[config]: found codec libopus (libopus Opus)
[2024-06-17 15:02:41.859] [info] configure: waiting configurator response
[2024-06-17 15:02:41.860] [info] file launcher: sending config
[2024-06-17 15:02:41.860] [info] file launcher: sent config to client
[2024-06-17 15:02:41.860] [info] configure: received config
[2024-06-17 15:02:41.860] [info] configure: from JSON config:
{
	""audio_bitrate"" : 128000,
	""audio_channels"" : 2,
	""audio_codec_channel_layout"" : ""stereo"",
	""audio_codec_format"" : ""s16"",
	""audio_decoder"" : ""mp2"",
	""audio_encoder"" : ""libopus"",
	""audio_samplerate"" : 48000,
	""auto_bitrate"" : 5000,
	""auto_fps"" : 30,
	""bbr_bitrate_initial"" : 1000,
	""bbr_bitrate_max"" : 12000,
	""bbr_bitrate_min"" : 50,
	""bbr_cycle_delay"" : 8000,
	""bbr_gain_drain"" : 0.5,
	""bbr_gain_increase"" : 2,
	""bbr_gain_maintain"" : 1,
	""bbr_gain_probe"" : 1.1499999999999999,
	""bbr_gain_standby"" : 0.75,
	""bbr_ping_delay"" : 50,
	""bbr_port"" : 8556,
	""bitrate_adaptation"" : false,
	""capture"" : ""dda"",
	""control_enabled"" : true,
	""control_force_absolute_cursor"" : true,
	""control_port"" : 8555,
	""control_proto"" : ""udp"",
	""fec_adaptation"" : true,
	""fec_redundancy"" : 20,
	""hw_decoder"" : false,
	""local_monitor"" : 0,
	""log_level"" : ""debug"",
	""log_path"" : ""logs/client.log"",
	""monitor"" : 0,
	""periphery_log_level"" : ""info"",
	""periphery_port"" : 8558,
	""proto"" : ""tcp"",
	""rtp_audio_port"" : 6972,
	""rtp_retransmission"" : true,
	""rtp_video_port"" : 6970,
	""server_url"" : ""rtsp://46.243.235.138:8554/desktop"",
	""show_bad_connect"" : false,
	""show_res_notif"" : false,
	""type"" : 13,
	""vm_height"" : 1080,
	""vm_width"" : 1920,
	""working_dir"" : ""/usr/share/loudplay-client"",
	""x1"" : 0,
	""x2"" : 0
}
[2024-06-17 15:02:41.861] [info] # RTSP[config]: found codec mp2 (MP2 (MPEG audio layer 2))
[2024-06-17 15:02:41.861] [info] # RTSP[config]: found codec libopus (libopus Opus)
[2024-06-17 12:02:41.972] [8093] [core] [info] Client version: 1.16.1
[2024-06-17 12:02:41.972] [8093] [core] [info] BaseExtFileReader: successfully read '/usr/share/loudplay-client/translations/en'
[2024-06-17 12:02:41.972] [8093] [core] [info] Translator: loaded language 2
[2024-06-17 12:02:42.074] [8093] [core] [info] authorization is required
[2024-06-17 12:02:47.322] [8093] [core] [info] startup request: restart
[2024-06-17 12:02:47.997] [8093] [core] [info] stop on exit: true
[2024-06-17 12:02:48.506] [8093] [core] [info] updated ports:
auth_port: 1244
bbr_port: 8566
ctrl_port: 8565
rtp_server_audio_port: 6982
rtp_server_video_port: 6980
rtsp.serverport: 8564
periphery_port: 8568
[2024-06-17 12:02:48.506] [8097] [core] [info] RequestHandlerInterface: periphery-usb-flash
[2024-06-17 12:02:48.510] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/loading.png' dim=1560x52
[2024-06-17 12:02:48.511] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/mic.png' dim=128x128
[2024-06-17 12:02:48.512] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/inactivity_img.png' dim=362x282
[2024-06-17 12:02:48.512] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/inactivity_img1.png' dim=47x60
[2024-06-17 12:02:48.512] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/inactivity_img5.png' dim=46x60
[2024-06-17 12:02:48.512] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/inactivity_img10.png' dim=46x60
[2024-06-17 12:02:48.513] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_button.png' dim=150x50
[2024-06-17 12:02:48.513] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header.png' dim=480x32
[2024-06-17 12:02:48.513] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.513] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/hide_ico.png' dim=16x16
[2024-06-17 12:02:48.515] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.515] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/hide_ico.png' dim=16x16
[2024-06-17 12:02:48.515] [8093] [core] [error] font '/usr/share/loudplay-client/fonts/ubuntu.ttf': render: enable output surface blending: That operation is not supported
[2024-06-17 12:02:48.515] [8093] [core] [error] ui: v1: image button: set text: couldn't render text
[2024-06-17 12:02:48.515] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.515] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/window_ico.png' dim=16x16
[2024-06-17 12:02:48.516] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.516] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/bitrate_ico.png' dim=16x16
[2024-06-17 12:02:48.517] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:48.517] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.518] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.519] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/lag_resiliance_ico.png' dim=16x16
[2024-06-17 12:02:48.520] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.521] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/reso_ico.png' dim=16x16
[2024-06-17 12:02:48.522] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:48.522] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.522] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 15:02:48.522] [lp-periphery-client] [8124] [request_handler_i.hpp:40] [info] RequestHandlerInterface: periphery-usb-flash
[2024-06-17 12:02:48.522] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.523] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/fps_ico.png' dim=16x16
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.524] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/lag_resiliance_ico.png' dim=16x16
[2024-06-17 12:02:48.525] [8093] [core] [error] font '/usr/share/loudplay-client/fonts/ubuntu.ttf': render: enable output surface blending: That operation is not supported
[2024-06-17 12:02:48.525] [8093] [core] [error] ui: v1: image button: set mutable text: couldn't render text
[2024-06-17 12:02:48.525] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/cursor_mode_ico.png' dim=16x16
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.526] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/help_ico.png' dim=16x16
[2024-06-17 12:02:48.527] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:48.527] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/stop_ico.png' dim=16x16
[2024-06-17 12:02:48.527] [8093] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer.png' dim=240x56
[2024-06-17 12:02:48.528] [8093] [core] [info] rpc: connecting to 46.243.235.138
[2024-06-17 12:02:48.574] [8095] [rpc] [info] rpc: connect: reconnecting, got error 111 (Connection refused)
[2024-06-17 12:02:48.574] [8095] [core] [warning] notification bar: trying to show unregistered notification kind 1
[2024-06-17 12:02:48.574] [8095] [core] [info] ping service
[2024-06-17 15:02:48.674] [lp-periphery-client] [8124] [lppc_main.cpp:70] [info] starting
[2024-06-17 15:02:48.675] [lp-periphery-client] [8131] [request_listener.hpp:60] [info] periphery-usb-flash:streaming-request started
[2024-06-17 12:02:48.754] [8095] [core] [info] Internet access confirmed
[2024-06-17 12:02:48.846] [8095] [core] [info] service is ok
[2024-06-17 12:02:48.846] [8095] [core] [warning] rpc: disconnect: shutdown socket: os: 107 (Transport endpoint is not connected)
[2024-06-17 12:02:49.348] [8095] [core] [info] rpc: connecting to 46.243.235.138
[2024-06-17 12:02:49.391] [8099] [rpc] [info] rpc: connect: reconnecting, got error 111 (Connection refused)
[2024-06-17 12:02:49.391] [8099] [core] [warning] notification bar: trying to show unregistered notification kind 1
[2024-06-17 12:02:49.391] [8099] [core] [info] ping service
[2024-06-17 12:02:49.518] [8133] [core] [info] periphery-usb-flash:client-periphery-request started
[2024-06-17 15:02:49.518] [lp-periphery-client] [8131] [request_listener.hpp:67] [info] periphery-usb-flash:streaming-request received new message
[2024-06-17 15:02:49.518] [lp-periphery-client] [8130] [lppc_request_handler.cpp:22] [info] processing new request: 1
[2024-06-17 15:02:49.518] [lp-periphery-client] [8130] [lppc_request_handler.cpp:72] [info] processing 'DEVICE_LIST' request
[2024-06-17 15:02:49.522] [lp-periphery-client] [8130] [lppc_request_handler.cpp:80] [info] found 1 devices
[2024-06-17 15:02:49.522] [lp-periphery-client] [8130] [lppc_request_handler.cpp:66] [info] response: SUCCESS
[2024-06-17 12:02:49.522] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_button.png' dim=150x50
[2024-06-17 12:02:49.522] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header.png' dim=480x32
[2024-06-17 12:02:49.523] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.523] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/hide_ico.png' dim=16x16
[2024-06-17 12:02:49.523] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.523] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/hide_ico.png' dim=16x16
[2024-06-17 12:02:49.523] [8097] [core] [error] font '/usr/share/loudplay-client/fonts/ubuntu.ttf': render: enable output surface blending: 
[2024-06-17 12:02:49.523] [8097] [core] [error] ui: v1: image button: set text: couldn't render text
[2024-06-17 12:02:49.524] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.524] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/window_ico.png' dim=16x16
[2024-06-17 12:02:49.524] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.524] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/bitrate_ico.png' dim=16x16
[2024-06-17 12:02:49.524] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.525] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.526] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.526] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.526] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.526] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.526] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.527] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:49.528] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.528] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/lag_resiliance_ico.png' dim=16x16
[2024-06-17 12:02:49.528] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:49.528] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.528] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.529] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.529] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:49.529] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.529] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/reso_ico.png' dim=16x16
[2024-06-17 12:02:49.530] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:49.530] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.530] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.530] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.531] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.531] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.531] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.531] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:49.532] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.532] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/fps_ico.png' dim=16x16
[2024-06-17 12:02:49.532] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:49.532] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.532] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item_s.png' dim=192x39
[2024-06-17 12:02:49.533] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:49.534] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.534] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/lag_resiliance_ico.png' dim=16x16
[2024-06-17 12:02:49.534] [8097] [core] [error] font '/usr/share/loudplay-client/fonts/ubuntu.ttf': render: enable output surface blending: 
[2024-06-17 12:02:49.534] [8097] [core] [error] ui: v1: image button: set mutable text: couldn't render text
[2024-06-17 12:02:49.534] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.535] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.535] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.535] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/cursor_mode_ico.png' dim=16x16
[2024-06-17 12:02:49.535] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_header_s.png' dim=192x39
[2024-06-17 12:02:49.535] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer_s.png' dim=192x38
[2024-06-17 12:02:49.536] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.536] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/help_ico.png' dim=16x16
[2024-06-17 12:02:49.536] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_item.png' dim=480x40
[2024-06-17 12:02:49.536] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/stop_ico.png' dim=16x16
[2024-06-17 12:02:49.537] [8097] [core] [info] Image: v1: load: success filename='/usr/share/loudplay-client/img/menu_footer.png' dim=240x56
[2024-06-17 12:02:49.583] [8099] [core] [info] Internet access confirmed
[2024-06-17 12:02:49.668] [8099] [core] [info] service is ok
[2024-06-17 12:02:49.668] [8099] [core] [warning] rpc: disconnect: shutdown socket: os: 107 (Transport endpoint is not connected)
[2024-06-17 12:02:50.169] [8099] [core] [info] rpc: connecting to 46.243.235.138
[2024-06-17 12:02:50.211] [8103] [rpc] [info] rpc: connect: reconnecting, got error 111 (Connection refused)
[2024-06-17 15:02:50.211] [lp-periphery-client] [8131] [request_listener.hpp:67] [info] periphery-usb-flash:streaming-request received new message
[2024-06-17 15:02:50.212] [lp-periphery-client] [8130] [lppc_request_handler.cpp:22] [info] processing new request: 8
[2024-06-17 15:02:50.212] [lp-periphery-client] [8130] [lppc_request_handler.cpp:136] [info] processing 'STOP_LISTENING' request
[2024-06-17 12:03:15.257] [8133] [core] [warning] bip exception: Interprocess mutex timeout when locking. Possible deadlock: owner died without unlocking?
[2024-06-17 12:03:15.257] [8133] [core] [info] periphery-usb-flash:client-periphery-request stopped
"
WEaaSv7y,🎁 G2A.COM FREE GIFT CARD GUIDE JUN 2024 V2 🎁,jusst2k4,GetText,Monday 17th of June 2024 07:03:06 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_157360.pdf
 
Working as of:
17 June 2024"
SjKgSQzN,Css Earth Rotation (animation),1xptolevitico69,HTML,Monday 17th of June 2024 07:01:59 AM CDT,<a href='https://l.facebook.com/l.php?u=https%3A%2F%2F1xpto.netlify.app%2Fredirects%2Fearth%2Findex.html%3Ffbclid%3DIwZXh0bgNhZW0CMTEAAR2rOqXQjQfgK5tk5FSgGeaH24bJ2fP0ibluJ0AlfWixSRtCiV0xdgsqblk_aem_ZmFrZWR1bW15MTZieXRlcw&h=AT3kDqgxaE7tcKVUnflUoBs6IF_wNq3sbeEoZWVOIe2CPTu7bry-5GR3h5iLB01pdR6ReLjohPRQxFxMzBG94J4GuFS8LHlfJlOqswGA3HH8k1gxa7vNx8MNVqR60CgSJVkS&__tn__=H-R&c[0]=AT3HJMmacvZ4UGF6u675iPpUBgvz0XJl8HgE820qjWYpRztOheN77MiNe4UEwpyu5vElA-PyOaDq27UbxLjgntNWprCwaMsrlf9Sxs5EoCL4SG2uxc9Z-ftwiKL8n5v06TfOaGD1GyGvpbT0U4x9g6ApQg'>Css Earth Rotation (animation)</a>
JNxdrt5B,function.fncs,dapperstache,SQF,Monday 17th of June 2024 06:59:02 AM CDT,"	
	class NUP_flagCapture {
		tag = ""NUP"";
		class flagCapture {
			file = ""NUP\NUP_flagCapture\functions"";
			
			class missionIntro {};
			class initSafezone {};
			class initFlag {};
			class playerMarkers {};
			class captureFlag {};
			class addFlagHoldAction {};
			class getFlagSupplies {};
			class updateFlagSupplyActions {};
			class addMedicalHoldAction {};
			class addEquipmentHoldAction {};
			class addRespawnPosition {};
			class addVehicleServices {};
			class cinematicBorder {};
			class updateScores {};
			class endMission {};
			class deadLock {};
			};
	};
"
vyL2Gj15,🤑G2A.com Free Gift Card FIX June 2024🎁,Alfonso1119,JavaScript,Monday 17th of June 2024 06:58:53 AM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
xegK46mm,NUP_fnc_playerMarkers,dapperstache,SQF,Monday 17th of June 2024 06:57:42 AM CDT,"
	//Title: NUP_fnc_playerMarkers
	//File: NUP\NUP_flagCapture\functions\fn_playerMarkers.sqf
	//Author: Dapperstache
	//Purpose: Handles all marker and vehicle icons
	//Usage: (in initplayerlocal:) [] call NUP_fnc_playerMarkers;

	// Determine the mildot color based on the player's faction
	if !( isServer ) exitWith {};
	waitUntil { !isNull findDisplay 12 };
	((findDisplay 12) displayCtrl 51) ctrlAddEventHandler [""Draw"", 
	{
		_playerFaction = player getVariable ""playerFaction"";
		private [""_color"", ""_playerFaction""];
		
		if (alive player) then 
		{
			switch (_playerFaction) do 
			{
				case ""BLU_F"": 
				{
					_color = [0, 0.3, 0.6, 1]; // Blue color for BLUFOR
				};
				case ""OPF_F"": 
				{
					_color = [0.5, 0, 0, 1]; // Red color for OPFOR
				};
				case ""IND_F"": 
				{
					_color = [0, 0.5, 0, 1]; // Green color for Independent
				};
				default
				{
					_color = [0.4, 0, 0.5, 1]; // Purple color for Civilian
				};
			};
				
			// Draw icon for alive player
			_this select 0 drawIcon [
			""\A3\ui_f\data\igui\cfg\islandmap\iconplayer_ca.paa"", // Icon path
			[1, 0, 0, 1], // Red color
			getPosASLVisual player,
			25, // Icon width
			25, // Icon height
			getDirVisual player,
			"""", // Empty text
			1, // Scale
			0.04, // Text size
			""PuristaMedium"", // Text font
			""right"" // Text align
			];

			// Draw colored dot icon for player on the map
			_this select 0 drawIcon [
			""\A3\ui_f\data\map\markers\military\dot_CA.paa"", // Icon path
			_color, // Color based on player's side
			getPosASLVisual player,
			32, // Icon width
			32, // Icon height
			getDirVisual player,
			"""", // Empty text
			1, // Scale
			0.04, // Text size
			""PuristaMedium"", // Text font
			""right"" // Text align
			];

			// Draw iconManVirtual in green on player
			_this select 0 drawIcon [
			""\A3\ui_f\data\map\vehicleicons\iconManVirtual_ca.paa"", // Icon path
			[0, 1, 0, 1], // Green color
			getPosASLVisual player,
			25, // Icon width
			25, // Icon height
			getDirVisual player,
			"""",
			1, // Scale
			0.04, // Text size
			""PuristaMedium"", // Text font
			""right"" // Text align
			];
			
			// Draw player name in green on player with different opacity
			_this select 0 drawIcon [
			""\A3\ui_f\data\map\vehicleicons\iconManVirtual_ca.paa"", // Icon path
			[0, 1, 0, 0.65], // Green color
			getPosASLVisual player,
			25, // Icon width
			25, // Icon height
			getDirVisual player,
			name player,
			1, // Scale
			0.04, // Text size
			""PuristaMedium"", // Text font
			""right"" // Text align
			];
			
			_playerHealth = 1 - (damage player);
			if (_playerHealth < 1) then 
			{
				// Draw incapacitated icon for player
				_this select 0 drawIcon [
				""\a3\ui_f\data\igui\cfg\simpletasks\types\Heal_ca.paa"", // Icon path
				[1, 0, 0, 1], // Red color
				getPosASLVisual player,
				15, // Icon width
				15, // Icon height
				getDirVisual player,
				"""", // Empty text
				1, // Scale
				0.04, // Text size
				""PuristaMedium"", // Text font
				""right"" // Text align
				];
			};
		} 
		else 
		{
			_this select 0 drawIcon [
			""\a3\ui_f\data\igui\cfg\simpletasks\types\Heal_ca.paa"", // Icon path
			[1, 0, 0, 1], // Red color
			getPosASLVisual player,
			25, // Icon width
			25, // Icon height
			getDirVisual player,
			name player, // Empty text
			1, // Scale
			0.04, // Text size
			""PuristaMedium"", // Text font
			""right"" // Text align
			];
		};
		
		// Loop through all playable units to draw icons for each player on the same side
		{
			if (_x != player && faction _x == _playerFaction) then 
			{	
				switch (_playerFaction) do 
				{
					case ""BLU_F"": 
					{
						_color = [0, 0.3, 0.6, 1]; // Blue color for BLUFOR
					};
					case ""OPF_F"": 
					{
						_color = [0.5, 0, 0, 1]; // Red color for OPFOR
					};
					case ""IND_F"": 
					{
						_color = [0, 0.5, 0, 1]; // Green color for Independent
					};
					default
					{
						_color = [0.4, 0, 0.5, 1]; // Purple color for Civilian
					};
				};

				// Draw colored dot icons for team players on the map
				_this select 0 drawIcon [
				""\A3\ui_f\data\map\markers\military\dot_CA.paa"", // Icon path
				_color, // Color based on player's side
				getPosASLVisual _x,
				32, // Icon width
				32, // Icon height
				getDirVisual _x,
				"""", // Empty text
                1, // Scale
                0.04, // Text size
                ""PuristaMedium"", // Text font
                ""right"" // Text align
                ];
					
				_this select 0 drawIcon [
                ""\A3\ui_f\data\map\vehicleicons\iconManVirtual_ca.paa"", // Icon path
                [1, 1, 1, 0.65], // White color with 65% opacity
                getPosASLVisual _x,
                25, // Icon width
                25, // Icon height
                getDirVisual _x,
                name _x, // Name
                1, // Scale
                0.04, // Text size
                ""PuristaMedium"", // Text font
                ""right"" // Text align
                ];
            };
		}forEach allUnits;
	}];

	// Add event handler for GPS display
	private _displays = uiNamespace getVariable [""igui_displays"", []]; {
	
		private _ctrl = _x displayCtrl 101;
		
		if (!isNull _ctrl && ctrlType _ctrl == 101) then {
		
			_ctrl ctrlAddEventHandler [""Draw"", {
			
				private [""_color"", ""_playerFaction""];
				_playerFaction = player getVariable [""playerFaction"", ""sideUnknown""];

				switch (_playerFaction) do {
					
					case ""BLU_F"": {
					
						_color = [0, 0.3, 0.6, 1]; // Blue color for BLUFOR
					
					};
					case ""OPF_F"": {
				
						_color = [0.5, 0, 0, 1]; // Red color for OPFOR
					
					};
                
					case ""IND_F"": {
					
						_color = [0, 0.5, 0, 1]; // Green color for Independent
                
					};
                 
					case ""CIV_F"": {
                    
						_color = [0.4, 0, 0.5, 1]; // Purple color for Civilian
					
					};
				};

				// Draw icon for player on the GPS
				_this select 0 drawIcon [
				
					""\A3\ui_f\data\map\markers\military\dot_CA.paa"", // Icon path
					_color, // Color based on player's side
					getPosASLVisual player,
					32, // Icon width
					32, // Icon height
					getDirVisual player,
					"""", // Empty text
					1, // Scale
					0.04, // Text size
					""PuristaMedium"", // Text font
					""right"" // Text align
				];

				// Draw iconManVirtual in green with player's name
				_this select 0 drawIcon [
			
					""\A3\ui_f\data\map\vehicleicons\iconManVirtual_ca.paa"", // Icon path
					[0, 1, 0, 0.75], // Green color
					getPosASLVisual player,
					25, // Icon width
					25, // Icon height
					getDirVisual player,
					name player, // Player's name as text
					1, // Scale
					0.04, // Text size
					""PuristaMedium"", // Text font
					""right"" // Text align
				];

				{
					if (_x != player && faction _x == _playerFaction) then {
					
						// Draw icons for side player units on the GPS
						_this select 0 drawIcon [
						
							""\A3\ui_f\data\map\markers\military\dot_CA.paa"", // Icon path
							_color, // Color based on player's side
							getPosASLVisual _x,
							32, // Icon width
							32, // Icon height
							getDirVisual _x,
							"""", // Empty text
							1, // Scale
							0.04, // Text size
							""PuristaMedium"", // Text font
							""right"" // Text align
						];

						// Draw icons for side player on the GPS
						_this select 0 drawIcon [
						
							""\A3\ui_f\data\map\vehicleicons\iconManVirtual_ca.paa"", // Icon path
							[1, 1, 1, 0.65], // White color with 65% opacity
							getPosASLVisual _x,
							25, // Icon width
							25, // Icon height
							getDirVisual _x,
							name _x, // Name
							1, // Scale
							0.04, // Text size
							""PuristaMedium"", // Text font
							""right"" // Text align
						];
					
					};
				} forEach allUnits;
			}];
		};
	} forEach _displays;

	// Initialize variable for toggling player names 
	_nameToggled = true; // Initial state is untoggled

	// Event handler for toggling player names on the map
	(findDisplay 46) displayAddEventHandler [""KeyDown"", {
	
		params [""_displayorcontrol"", ""_key"", ""_shift"", ""_ctrl"", ""_alt""];
		
		if (_key == 219) then {
		
			// Check if left Windows key (LWin) is pressed
			_nameToggled = !_nameToggled; // Toggle the state

		};
		
		false; // Prevent default action

	}];

	// Event handler for drawing 3D markers
	_objIcons = addMissionEventHandler [""Draw3D"", {
	
		private[""_pos"",""_iconColor"", ""_iconPath"", ""_playerFaction""];
		_playerFaction = player getVariable ""playerFaction"";
		switch (_playerFaction) do {
		
			case ""BLU_F"": {
			
				_iconColor = [0, 0.3, 0.6, 0.65]; // Blue color for BLUFOR
				_iconPath = ""\A3\ui_f\data\map\markers\nato\b_unknown.paa"";
			
			};
			case ""OPF_F"": {

				_iconColor = [0.5, 0, 0, 0.65]; // Red color for OPFOR
				_iconPath = ""\A3\ui_f\data\map\markers\nato\o_unknown.paa"";

			};  
			case ""IND_F"": {
			
				_iconColor = [0, 0.5, 0, 0.65]; // Green color for Independent
				_iconPath = ""\A3\ui_f\data\map\markers\nato\n_unknown.paa"";
				
			};
			case ""CIV_F"": {

				_iconColor = [0.4,0,0.5,1]; // Purple color for Civilian
				_iconPath = ""\A3\ui_f\data\map\markers\nato\u_installation.paa"";

			};
		};

		// Iterate over all units and draw markers for each unit
		{
			if (player distance _x < 500 && !isPlayer _x && faction _x == faction player) then {
			
				_pos = ASLToAGL (eyePos _x vectorAdd [0,0,0.35]);
				private _distance = player distance _x;
				
				// Adjust the Z position based on the distance
				_pos set [2, ((_pos select 2) + (_distance / 25))]; // Adjust the values as needed
				
				// Calculate the size factor based on the distance
				private _sizeFactor = 2 - (_distance - 1) / 20; // Adjust the values as needed
				if (_sizeFactor < 0.5) then {_sizeFactor = 0.5;}; // Ensure the size factor does not go below 0.5
				
				// Calculate the text size factor based on the distance
				private _textSizeFactor = 1 - (_distance - 1) / 40; // Adjust the values as needed
				if (_textSizeFactor < 0.5) then {_textSizeFactor = 0.5;}; // Ensure the text size factor does not go below 0.5
				
				// Calculate the adjusted text size
				private _textSize = 0.04 * _textSizeFactor;
				private _alphaFactor = 1 - (_distance - 1) / 200; // Adjust the values as needed
				if (_alphaFactor < 0.25) then {_alphaFactor = 0.25;}; // Ensure the alpha factor does not go below 0.25
				
				// Modify the alpha component of the icon color based on the alpha factor
				private _modifiedIconColor = [_iconColor select 0, _iconColor select 1, _iconColor select 2, _alphaFactor];
				
				// Draw the icon with adjusted size, text size, and opacity
				drawIcon3D [_iconPath, _modifiedIconColor, [_pos select 0 , _pos select 1, (_pos select 2)], _sizeFactor, _sizeFactor, 0, """", 0, 0.04];
				
				// Draw the text with adjusted position and opacity
				if (_nameToggled) then {
				
					drawIcon3D ["""", [1,1,1,_alphaFactor * 0.75],[_pos select 0 , _pos select 1, (_pos select 2)], _sizeFactor, _sizeFactor, 0, name _x, 0, _textSize *1.1, ""PuristaBold"", ""center""];
				
				};
			};
		}forEach allUnits;
	}];

	// Function to collect all empty vehicles of specific types within 100m of the player and assign an icon
	[] spawn {
		
		while {true} do {
			
			private _playerPos = getPos player;
			private _emptyVehicles = vehicles select {
				
				({alive _x} count crew _x < 1) &&
				(_x isKindOf ""Car"" || _x isKindOf ""Tank"" || _x isKindOf ""Helicopter"" || _x isKindOf ""Plane"") &&
				(_x distance _playerPos < 200)
       
			};

			uiNamespace setVariable [""emptyVehicles"", _emptyVehicles];
			sleep 1; // Adjust the sleep time as needed to control update frequency
		};
	};

	// Event handler for drawing icons on the map
	(findDisplay 12) displayCtrl 51 ctrlAddEventHandler [""Draw"", {
	
		private _emptyVehicles = uiNamespace getVariable [""emptyVehicles"", []]; {
	
			private _vehiclePos = getPosASLVisual _x;
		
			_this select 0 drawIcon [
        
				""\A3\ui_f\data\map\markers\military\start_CA.paa"", // Icon path
				[0.5, 0.6, 0.4, 0.65], // Color with alpha
				_vehiclePos,
				32, // Icon width
				32, // Icon height
				0, // Direction
				"""", // Empty text
				1, // Scale
				0.04, // Text size
				""PuristaMedium"", // Text font
				""right"" // Text align
			];
		} forEach _emptyVehicles;
	}];

	// Add event handler for GPS display
	private _displays = uiNamespace getVariable [""igui_displays"", []]; {
	
		private _ctrl = _x displayCtrl 101;
		
		if (!isNull _ctrl && ctrlType _ctrl == 101) then {
			
			_ctrl ctrlAddEventHandler [""Draw"", {
				private _emptyVehicles = uiNamespace getVariable [""emptyVehicles"", []]; {
			
					private _vehiclePos = getPosASLVisual _x;
					_this select 0 drawIcon [
						""\A3\ui_f\data\map\markers\military\start_CA.paa"", // Icon path
						[0.5, 0.6, 0.4, 0.65], // Color with alpha
						_vehiclePos,
						32, // Icon width
						32, // Icon height
						0, // Direction
						"""", // Empty text
						1, // Scale
						0.04, // Text size
						""PuristaMedium"", // Text font
						""right"" // Text align
					];
				} forEach _emptyVehicles;
			}];
		};
	} forEach _displays;"
ThxiUKE6,🤑G2A.com Free Gift Card FIX June 2024🤑,Garoam,JavaScript,Monday 17th of June 2024 06:52:52 AM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
HzLnXsez,🤑G2A.com Free Gift Card FIX June 2024🤑,atakan1983,JavaScript,Monday 17th of June 2024 06:46:53 AM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
biCDGmP3,NUP_fnc_missionIntro,dapperstache,SQF,Monday 17th of June 2024 06:41:10 AM CDT,"	
	//Title: NUP_fnc_missionIntro
	//File:  NUP\NUP_flagCapture\functions\fn_missionIntro.sqf
	//Author: Dapperstache
	//Purpose: Creates a short Mission Intro Sequence, spawns a custom virtual arsenal and move's player to starting position. 
	//Usage: initPlayerLocal: [] call NUP_fnc_missionIntro; 
	
	// Define loadouts for each side	
	private _bluforLoadout = [
	
		[""arifle_MX_Black_F"","""",""acc_pointer_IR"",""optic_Hamr"",[""30Rnd_65x39_caseless_mag"",30],[],""""],
		[],
		[""hgun_P07_F"","""","""","""",[""16Rnd_9x21_Mag"",16],[],""""],
		[""U_B_CombatUniform_mcam_tshirt"",[[""FirstAidKit"",1],[""30Rnd_65x39_caseless_mag"",2,30]]],
		[""V_PlateCarrier1_rgr"",[[""30Rnd_65x39_caseless_mag"",5,30],[""HandGrenade"",2,1],[""SmokeShell"",2,1]]],
		[""B_AssaultPack_rgr_Medic"",[[""Medikit"",1],[""FirstAidKit"",10]]],
		""H_HelmetB_light_desert"",
		"""",
		[""NVGoggles_INDEP_blk_F"", """", """", """"],
		[""ItemMap"",""ItemCompass"",""ItemRadio"",""ItemGPS"",""ItemWatch"",""""]
		
	];

	private _opforLoadout = [
	
		[""arifle_Katiba_F"","""",""acc_pointer_IR"",""optic_ACO_grn"",[""30Rnd_65x39_caseless_green"",30],[],""""],
		[],
		[""hgun_Rook40_F"","""","""","""",[""16Rnd_9x21_Mag"",16],[],""""],
		[""U_O_CombatUniform_ocamo"",[[""FirstAidKit"",1],[""30Rnd_65x39_caseless_green"",2,30]]],
		[""V_HarnessO_brn"",[[""30Rnd_65x39_caseless_green"",5,30],[""HandGrenade"",2,1],[""SmokeShell"",2,1]]],
		[""B_FieldPack_ocamo"",[[""Medikit"",1],[""FirstAidKit"",10]]],
		""H_HelmetO_ocamo"",
		"""",
		[""NVGoggles_OPFOR"", """", """", """"],
		[""ItemMap"",""ItemCompass"",""ItemRadio"",""ItemGPS"",""ItemWatch"",""""]
		
	];

	private _indforLoadout = [
	
		[""arifle_Mk20_F"","""",""acc_pointer_IR"",""optic_Holosight"",[""30Rnd_556x45_Stanag"",30],[],""""],
		[],
		[""hgun_ACPC2_F"","""","""","""",[""9Rnd_45ACP_Mag"",9],[],""""],
		[""U_I_CombatUniform"",[[""FirstAidKit"",1],[""30Rnd_556x45_Stanag"",2,30]]],
		[""V_PlateCarrierIA1_dgtl"",[[""30Rnd_556x45_Stanag"",5,30],[""HandGrenade"",2,1],[""SmokeShell"",2,1]]],
		[""B_AssaultPack_dgtl_Medic"",[[""Medikit"",1],[""FirstAidKit"",10]]],
		""H_HelmetIA"",
		"""",
		[""NVGoggles_INDEP"", """", """", """"],
		[""ItemMap"",""ItemCompass"",""ItemRadio"",""ItemGPS"",""ItemWatch"",""""]
		
	];
	
	private _civLoadout = [
	
		[""arifle_MX_Black_F"","""",""acc_pointer_IR"",""optic_Holosight"",[""30Rnd_65x39_caseless_black_mag"",30],[],""""],
		[],
		[""hgun_Rook40_F"","""","""","""",[""16Rnd_9x21_Mag"",16],[],""""],
		[""U_BG_Guerrilla_6_1"",[[""FirstAidKit"",1],[""30Rnd_65x39_caseless_black_mag"",2,30]]],
		[""V_PlateCarrier2_rgr_noflag_F"",[[""30Rnd_65x39_caseless_black_mag"",5,30],[""HandGrenade"",2,1],[""SmokeShell"",2,1]]],
		[""B_Carryall_oli"",[[""Medikit"",1],[""FirstAidKit"",10]]],
		""H_HelmetSpecB"",
		""G_Balaclava_Skull1"",
		[""NVGoggles_INDEP"", """", """", """"],
		[""ItemMap"",""ItemCompass"",""ItemRadio"",""ItemGPS"",""ItemWatch"",""""]
		
	];
	
	// Define _BIS_printText function
	_BIS_printText =	{
	
		private[""_blocks"",""_block"",""_blockCount"",""_blockNr"",""_blockArray"",""_blockText"",""_blockTextF"",""_blockTextF_"",""_blockFormat"",""_formats"",""_inputData"",""_processedTextF"",""_char"",""_cursorBlinks"",""_cursorInvis"", ""_screenCenter""];
		_blockCount = count _this;
		_invisCursor = ""<t color ='#00000000' shadow = '0'>_</t>"";
		// Get screen center position
		_screenCenter = [0, 0];
		// Process the input data
		_blocks = [];
		_formats = [];
		
		{
			_inputData = _x;
			_block     = [_inputData, 0, """", [""""]] call BIS_fnc_param;
			_format = [_inputData, 1, ""<t font='PuristaSemibold' align = 'center' shadow='0' size='2.0'>%1</t><br/>"", [""""]] call BIS_fnc_param;

			// Convert strings into array of chars
			_blockArray = toArray _block;
			{
				_blockArray set [_forEachIndex, toString [_x]]
				
			} forEach _blockArray;

			_blocks  = _blocks + [_blockArray];
			_formats = _formats + [_format];
			
		} forEach _this;

		// Do the printing
		_processedTextF  = """";

		{
			_blockArray  = _x;
			_blockNr = _forEachIndex;
			_blockFormat = _formats select _blockNr;
			_blockText   = """";
			_blockTextF  = """";
			_blockTextF_ = """";

			{
				_char = _x;
				_blockText = _blockText + _char;
				_blockTextF  = format[_blockFormat, _blockText + _invisCursor];
				_blockTextF_ = format[_blockFormat, _blockText + ""_""];

				// Print the output
				[(_processedTextF + _blockTextF_), 0, 0.3, 5, 0, 0, 90] spawn BIS_fnc_dynamicText;
				playSoundUI [""a3\missions_f\data\sounds\click.wss"", 0.25];
				sleep 0.08;
				[(_processedTextF + _blockTextF), 0, 0.3, 5, 0, 0, 90] spawn BIS_fnc_dynamicText;
				sleep 0.02;
				
			} forEach _blockArray;

			if (_blockNr + 1 < _blockCount) then {
			
				_cursorBlinks = 5;
			
			} else {
			
				_cursorBlinks = 15;
			};

			for ""_i"" from 1 to _cursorBlinks do {
			
				[_processedTextF + _blockTextF_, 0, 0.3, 5, 0, 0, 90] spawn BIS_fnc_dynamicText;
				sleep 0.08;
				[_processedTextF + _blockTextF, 0, 0.3, 5, 0, 0, 90] spawn BIS_fnc_dynamicText;
				sleep 0.02;
			};

			// Store finished block
			_processedTextF  = _processedTextF + _blockTextF;
			//clean the screen
			["""", 0, 0.15, 5, 0, 0, 90] spawn BIS_fnc_dynamicText;
			
		}forEach _blocks;
		
	};
	
	//Start intro
	[""NUP_blackout"", false] call BIS_fnc_blackOut;
	
	// Define the music code block
	_spawnedMusic = [] spawn {
	
	 	while {true} do {
		
			// Play the music
			playMusic [""Music_Tension_Loop_01"",0];
			0 fadeMusic 2;
			sleep 608;
		
		};
	};

	//Display Mission Title Sequence
	[
		[""OPERATION:"",""<t font='PuristaSemibold' shadow='0' size='2.0-'>%1</t><br/>""],
		[""BASERUNNER"",""<t font='PuristaSemibold' shadow='0' size='2.0'>%1</t><br/>""]
		
	] spawn _BIS_printText;
	
	// Store player's initial face, voice, and insignia
	_NUP_playerFace = face player;
	_NUP_playerVoice = speaker player;
	_NUP_playerInsignia = [player] call BIS_fnc_getUnitInsignia;

	// Create an Arsenal unit at the location of NUP_arsenalHelper
	
	_NUP_arsenalUnit = createAgent [typeOf player, (getPosATL NUP_arsenalHelper), [], 0, ""CAN_COLLIDE""];
	[_NUP_arsenalUnit,true] remoteExecCall [""hideObject"",[-2,-clientOwner],_NUP_arsenalUnit];
	_NUP_arsenalUnit disableAI ""ANIM"";
	_NUP_arsenalUnit disableAI ""MOVE"";

	// Store the Arsenal unit reference in player's variable
	player setVariable [""NUP_arsenalUnit"", _NUP_arsenalUnit];

	// Function to apply loadout based on player's side
	private _side = side player;

	switch (_side) do {
		
		case west: {
			
			_NUP_arsenalUnit setUnitLoadout _bluforLoadout;
		
		};
		case east: {
			
			_NUP_arsenalUnit setUnitLoadout _opforLoadout;
		
		};
		case resistance: {
		
			_NUP_arsenalUnit setUnitLoadout _indforLoadout;
	
		};
		case civilian: {
		
			_NUP_arsenalUnit setUnitLoadout _civLoadout;
		
		};
		
	};

	_NUP_arsenalUnit setFace _NUP_playerFace;
	_NUP_arsenalUnit setSpeaker _NUP_playerVoice;
	[_NUP_arsenalUnit, _NUP_playerInsignia] call BIS_fnc_setUnitInsignia;
	_NUP_arsenalUnit setDir (getdir NUP_arsenalHelper);

	sleep 4.5;
	[""NUP_blackout"", false] call BIS_fnc_blackIn;
	[""Open"", [true, NUP_arsenalHelper, _NUP_arsenalUnit]] spawn BIS_fnc_arsenal;

	// Add a scripted event handler for when the arsenal is closed
	[missionNamespace, ""arsenalClosed"", {
	
		// Initial setup for moving player to a random building at the start
		_pside = side player;
		_respawnMarker = format [""respawn_%1"", _pside];
		_markerPos = getMarkerPos _respawnMarker;
		_nearestLogic = nearestObjects [_markerPos, [""Logic""], 5, true] select 0;
		_nearestLogicPos = getPosATL _nearestLogic;
		
		_buildingClasses = [
		
			""Land_Cargo_HQ_V1_F"",
			""Land_Cargo_HQ_V3_F"",
			""Land_Medevac_HQ_V1_F"",
			""Land_Cargo_House_V1_F"",
			""Land_Cargo_Tower_V1_No1_F"",
			""Land_Cargo_Tower_V1_No2_F"",
			""Land_Cargo_Tower_V1_No3_F"",
			""Land_Cargo_Tower_V1_F"",
			""Land_i_Shed_Ind_old_F"",
			""Land_i_Shed_Ind_F""
			
		];

		// Find nearby buildings
		_nearestBuildings = nearestObjects [_markerPos, _buildingClasses, 50];
		diag_log format [""Nearest buildings: %1"", _nearestBuildings];

		// Collect all positions from all nearby buildings
		_allBuildingPositions = [];
		
		{
			_buildingPositions = [_x] call BIS_fnc_buildingPositions;
			_allBuildingPositions = _allBuildingPositions + _buildingPositions;
			
		} forEach _nearestBuildings;

		diag_log format [""All building positions: %1"", _allBuildingPositions];
	
		// Ensure there are positions available
		if (count _allBuildingPositions > 0) then {
		
			// Select a random position from all positions
			_randomBuildingPos = selectRandom _allBuildingPositions;
			diag_log format [""Randomly selected position: %1"", _randomBuildingPos];
		
			// Move player to the randomly selected position
			player setPos _randomBuildingPos;
			
		} else {
		
			player setPos _nearestLogicPos;
		
		};
		
		[] spawn {
		
			sleep 10;
			player setVariable [""NUP_disableCommandChat"", false];
		};

		//Fade the music out
		[] spawn {
		
			20 fadeMusic 0;
			sleep 21;
			playMusic """";
			0 fadeMusic 1;
	
		};
		
		// Retrieve the Arsenal unit reference
		_NUP_arsenalUnit = player getVariable ""NUP_arsenalUnit"";
		
		// Set player's loadout, face, voice, and insignia to match the Arsenal unit
		player setUnitLoadout (getUnitLoadout _NUP_arsenalUnit);
		[player, face _NUP_arsenalUnit] remoteExec [""setFace"", 0, player];
		[player, speaker _NUP_arsenalUnit] remoteExec [""setSpeaker"", 0, player];
		[player, [_NUP_arsenalUnit] call BIS_fnc_getUnitInsignia] call BIS_fnc_setUnitInsignia;
		
		// Delete the Arsenal unit
		deleteVehicle _NUP_arsenalUnit;
		
		player setVariable[ ""NUP_savedLoadout"", getUnitLoadout player ];
		//Clear inArsenal variable
		player setVariable [""NUP_inArsenal"", false];
		
		// Remove all scripted event handlers related to arsenalClosed
		[missionNamespace, ""arsenalClosed""] call BIS_fnc_removeAllScriptedEventHandlers;

	}] call BIS_fnc_addScriptedEventHandler;
	
	// Make the Arsenal unit visible
	_NUP_arsenalUnit hideObject false;

"
6qjQKezK,🤑G2A.com Free Gift Card FIX June 2024🤑,tajdiqul,JavaScript,Monday 17th of June 2024 06:40:40 AM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
cVTgBEfT,🤑G2A.com Free Gift Card FIX June 2024🤑,notgoodatscripting,JavaScript,Monday 17th of June 2024 06:34:41 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
BsJKzjab,🤑G2A.com Free Gift Card FIX June 2024🎁,bgill55,JavaScript,Monday 17th of June 2024 06:28:42 AM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
PZbdrsV8,🤑G2A.com Free Gift Card FIX June 2024🤑,FreeRobux12345,JavaScript,Monday 17th of June 2024 06:22:44 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
d4JzEwSM,🤑G2A.com Free Gift Card FIX June 2024🎁,coderpradip,JavaScript,Monday 17th of June 2024 06:16:45 AM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
4kdtXpnQ,🤑G2A.com Free Gift Card FIX June 2024🎁,mikyser,JavaScript,Monday 17th of June 2024 06:10:47 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
hf7vKFBC,Sv-functions,Lindholmbrahe,Lua,Monday 17th of June 2024 06:05:29 AM CDT,"--
-- Core Functions
--
function Framework.Server.CreateCallback(cbRef, cb)
  if Config.Framework == ""QBCore"" then
    return QBCore.Functions.CreateCallback(cbRef, function(...)
      cb(...)
    end)
  elseif Config.Framework == ""ESX"" then
    ESX.RegisterServerCallback(cbRef, function(...)
      cb(...)
    end)
  end
end

function Framework.Server.Notify(src, msg, type)
  TriggerClientEvent('jg-dealerships:client:notify', src, msg, type, 5000)
end

function Framework.Server.RegisterCommand(name, help, arguments, argsrequired, callback)
  if Config.Framework == ""QBCore"" then
    QBCore.Commands.Add(name, help, arguments, argsrequired, callback)
  elseif Config.Framework == ""ESX"" then
    RegisterCommand(name, callback)
  end
end

function Framework.Server.IsAdmin(src)
  if Config.Framework == ""QBCore"" then
    return QBCore.Functions.HasPermission(src, ""command"")
  elseif Config.Framework == ""ESX"" then
    return ESX.GetPlayerFromId(src).getGroup() == ""admin""
  end
end

-- 
-- Society
--
local usingNewQBBanking = GetResourceState(""qb-banking"") == ""started"" and tonumber(string.sub(GetResourceMetadata(""qb-banking"", ""version""), 1, 3)) >= 2
local usingokokBanking = GetResourceState(""okokBanking"") == ""started"" -- added support for okokBanking

function Framework.Server.RemoveFromSocietyFund(societyName, type, amount)
  if Config.Framework == ""QBCore"" then
    if usingokokBanking then  -- added support for okokBanking
      exports['okokBanking']:RemoveMoney(societyName, amount)  -- added support for okokBanking
    elseif usingNewQBBanking then -- changed
      exports['qb-banking']:RemoveMoney(societyName, amount)
    else
      if type == ""job"" then
        exports['qb-management']:RemoveMoney(societyName, amount)
      elseif type == ""gang"" then
        exports['qb-management']:RemoveGangMoney(societyName, amount)
      end
    end
  elseif Config.Framework == ""ESX"" then
    if type == ""cash"" then type = ""money"" end

    TriggerEvent('esx_society:getSociety', societyName, function(society)
      TriggerEvent('esx_addonaccount:getSharedAccount', society.account, function(account)
        account.removeMoney(amount)
      end)
    end)
  end
end

Framework.Server.CreateCallback(""jg-dealerships:server:get-society-balance"", function(src, cb, society, type)
  if Config.Framework == ""QBCore"" then
    if usingokokBanking then -- added support for okokBanking
      cb(exports['okokBanking']:GetAccount(society)) -- added support for okokBanking
    elseif usingNewQBBanking then -- changed
      cb(exports['qb-banking']:GetAccountBalance(society))
    else
      if type == ""job"" then
        cb(exports['qb-management']:GetAccount(society))
      elseif type == ""gang"" then
        cb(exports['qb-management']:GetGangAccount(society))
      end
    end
  elseif Config.Framework == ""ESX"" then
    if type == ""cash"" then type = ""money"" end

    TriggerEvent('esx_society:getSociety', society, function(data)
      if not data then return cb(0) end
      TriggerEvent('esx_addonaccount:getSharedAccount', data.account, function(account)
        cb(account.money)
      end)
    end)
  end
end)

function Framework.Server.SaveVehicleToGarage(src, purchaseType, society, societyType, model, plate, financed, financeData)
  if Config.Framework == ""QBCore"" then
    local playerData = Framework.Server.GetPlayer(src).PlayerData
    local license = playerData.license
    local citizenid = playerData.citizenid

    if purchaseType == ""society"" then
      if societyType == ""job"" then
        MySQL.insert.await(""INSERT INTO player_vehicles (license,citizenid,vehicle,hash,plate,financed,finance_data,job_vehicle,job_vehicle_rank) VALUES(?,?,?,?,?,?,?,?,?)"", {license, society, model, joaat(model), plate, financed, json.encode(financeData), 1, 0})
      elseif societyType == ""gang"" then
        MySQL.insert.await(""INSERT INTO player_vehicles (license,citizenid,vehicle,hash,plate,financed,finance_data,gang_vehicle,gang_vehicle_rank) VALUES(?,?,?,?,?,?,?,?,?)"", {license, society, model, joaat(model), plate, financed, json.encode(financeData), 1, 0})
      end
    else
      MySQL.insert.await(""INSERT INTO player_vehicles (license,citizenid,vehicle,hash,plate,financed,finance_data) VALUES(?,?,?,?,?,?,?)"", {license, citizenid, model, joaat(model), plate, financed, json.encode(financeData)})
    end
  elseif Config.Framework == ""ESX"" then
    local identifier = Framework.Server.GetPlayerIdentifier(src)

    if purchaseType == ""society"" then
      if societyType == ""job"" then
        MySQL.insert.await(""INSERT INTO owned_vehicles (owner,plate,financed,finance_data,job_vehicle,job_vehicle_rank) VALUES(?,?,?,?,?,?)"", {society, plate, financed, json.encode(financeData), 1, 0})
      elseif societyType == ""gang"" then
        MySQL.insert.await(""INSERT INTO owned_vehicles (owner,plate,financed,finance_data,gang_vehicle,gang_vehicle_rank) VALUES(?,?,?,?,?,?)"", {society, plate, financed, json.encode(financeData), 1, 0})
      end
    else
      MySQL.insert.await(""INSERT INTO owned_vehicles (owner,plate,financed,finance_data) VALUES(?,?,?,?)"", {identifier, plate, financed, json.encode(financeData)})
    end
  end
end

function Framework.Server.VehicleGeneratePlate()
  local plateFormat = Config.PlateFormat or ""1AA111AA""
  local attempts = 0

  while attempts < 20 do
    local charsetNumbers = ""0123456789""
    local charsetLetters = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
    local plate = """"
    local i = 0

    while i <= 8 do
      local c = plateFormat:sub(i, i)
      if c == ""A"" then
        local randLetterPos = math.random(1, #charsetLetters)
        local randLetter = charsetLetters:sub(randLetterPos, randLetterPos)
        plate = plate .. randLetter -- Ensure only one character is added
      elseif c == ""1"" then
        local randNumberPos = math.random(1, #charsetNumbers)
        local randNumber = charsetNumbers:sub(randNumberPos, randNumberPos)
        plate = plate .. randNumber -- Ensure only one character is added
      elseif c == ""^"" then
        i = i + 1 -- Skip the caret and use the next character
        if i <= #plateFormat then
          plate = plate .. plateFormat:sub(i, i)
        end
      else
        plate = plate .. c
      end
      i = i + 1
    end

    local result = MySQL.scalar.await(""SELECT plate FROM "" .. Framework.VehiclesTable .. "" WHERE plate = ?"", {plate})
    if not result then
      return plate:upper()
    end

    attempts = attempts + 1
  end

  return false
end

--
-- Player Functions
--
function Framework.Server.GetPlayer(src)
  if Config.Framework == ""QBCore"" then
    return QBCore.Functions.GetPlayer(src)
  elseif Config.Framework == ""ESX"" then
    return ESX.GetPlayerFromId(src)
  end
end

function Framework.Server.GetPlayerInfo(src)
  local player = Framework.Server.GetPlayer(src)
  if not player then return false end

  if Config.Framework == ""QBCore"" then
    return {
      name = player.PlayerData.charinfo.firstname .. "" "" .. player.PlayerData.charinfo.lastname
    }
  elseif Config.Framework == ""ESX"" then
    return {
      name = player.getName()
    }
  end
end

function Framework.Server.GetPlayerInfoFromIdentifier(identifier)
  local player = MySQL.single.await(""SELECT * FROM "" .. Framework.PlayersTable .. "" WHERE "" .. Framework.PlayersTableId .. "" = ?"", {identifier})
  if not player then return false end

  if Config.Framework == ""QBCore"" then
    local charinfo = json.decode(player.charinfo)
    return {
      name = charinfo.firstname .. "" "" .. charinfo.lastname
    }
  elseif Config.Framework == ""ESX"" then
    return {
      name = player.firstname .. "" "" .. player.lastname
    }
  end
end

function Framework.Server.GetPlayerIdentifier(src)
  local player = Framework.Server.GetPlayer(src)
  if not player then return false end

  if Config.Framework == ""QBCore"" then
    return player.PlayerData.citizenid
  elseif Config.Framework == ""ESX"" then
    return player.getIdentifier()
  end
end

function Framework.Server.GetPlayerFromIdentifier(identifier)
  if Config.Framework == ""QBCore"" then
    local player = QBCore.Functions.GetPlayerByCitizenId(identifier)
    if not player then return false end
    return player.PlayerData.source
  elseif Config.Framework == ""ESX"" then
    local xPlayer = ESX.GetPlayerFromIdentifier(identifier)
    if not xPlayer then return false end
    return xPlayer.source
  end
end

function Framework.Server.GetPlayerBalance(src, type)
  local player = Framework.Server.GetPlayer(src)
  if not player then return 0 end

  if Config.Framework == ""QBCore"" then
    if type == ""cash"" then 
      return ox_inventory:GetItem(src, 'money').count
    else
      return player.PlayerData.money[type]
    end
  elseif Config.Framework == ""ESX"" then
    if type == ""cash"" then type = ""money"" end

    for i, acc in pairs(player.getAccounts()) do
      if acc.name == type then
        return acc.money
      end
    end

    return 0
  end
end

function Framework.Server.PlayerAddMoney(src, amount, account)
  local player = Framework.Server.GetPlayer(src)
  account = account or 'bank'

  if Config.Framework == ""QBCore"" then
    if account == ""cash"" then exports.ox_inventory:AddItem(src, ""money"", amount) end
    player.Functions.AddMoney(account, roundVal(amount))
  elseif Config.Framework == ""ESX"" then
    if account == ""cash"" then account = ""money"" end
    player.addAccountMoney(account, roundVal(amount))
  end
end

function Framework.Server.PlayerRemoveMoney(src, amount, account)
  local player = Framework.Server.GetPlayer(src)
  account = account or 'bank'

  if Config.Framework == ""QBCore"" then
    if account == ""cash"" then exports.ox_inventory:RemoveItem(src, ""money"", amount) end
    player.Functions.RemoveMoney(account, roundVal(amount))
  elseif Config.Framework == ""ESX"" then
    if account == ""cash"" then account = ""money"" end
    player.removeAccountMoney(account, roundVal(amount))
  end
end

function Framework.Server.PlayerSetJob(src, job, role)
  local player = Framework.Server.GetPlayer(src)

  -- Adjust this as necessary for your job setup
  local rank = 1 -- sales
  if role == ""supervisor"" then rank = 2 end
  if role == ""manager"" then rank = 3 end

  if Config.Framework == ""QBCore"" then
    player.Functions.SetJob(job, rank)
  elseif Config.Framework == ""ESX"" then
    player.setJob(job, rank)
  end
end

function Framework.Server.PlayerSetJobOffline(identifier, job, role)
  -- Adjust this as necessary for your job setup
  local rank = 1 -- sales
  if role == ""supervisor"" then rank = 2 end
  if role == ""manager"" then rank = 3 end

  if Config.Framework == ""QBCore"" then
    if not QBCore.Shared.Jobs[job] then return false end

    local jobData = {
      name = job,
      label = QBCore.Shared.Jobs[job].label,
      onduty = QBCore.Shared.Jobs[job].defaultDuty,
      type = QBCore.Shared.Jobs[job].type or 'none',
      grade = {
        name = 'No Grades',
        level = 0,
      },
      payment = 30,
      isboss = false
    }

    if QBCore.Shared.Jobs[job].grades[tostring(rank)] then
      local jobgrade = QBCore.Shared.Jobs[job].grades[tostring(rank)]
      jobData.grade = {}
      jobData.grade.name = jobgrade.name
      jobData.grade.level = rank
      jobData.payment = jobgrade.payment or 30
      jobData.isboss = jobgrade.isboss or false
    end

    MySQL.update.await(""UPDATE players SET job = ? WHERE citizenid = ?"", {json.encode(jobData), identifier})
  elseif Config.Framework == ""ESX"" then
    MySQL.update.await(""UPDATE users SET job = ?, job_grade = ? WHERE identifier = ?"", {job, rank, identifier})
  end
end

function Framework.Server.GetPlayers()
  local players = {}
  if Config.Framework == ""QBCore"" then
    players = QBCore.Functions.GetQBPlayers()
  elseif Config.Framework == ""ESX"" then
    players = ESX.GetExtendedPlayers()
  end

  for id, player in pairs(players) do
    if Config.Framework == ""QBCore"" then
      players[id].player_id = player.PlayerData.source
    elseif Config.Framework == ""ESX"" then
      players[id].player_id = player.source
    end
  end

  return players
end

function Framework.Server.GetJobs()
  if Config.Framework == ""QBCore"" then
    return QBCore.Shared.Jobs
  elseif Config.Framework == ""ESX"" then
    return ESX.GetJobs()
  end
end

--
-- ti_fuel
--

RegisterNetEvent(""jg-dealerships:server:save-ti-fuel-type"", function(plate, type)
  MySQL.query.await(""ALTER TABLE "" .. Framework.VehiclesTable .. "" ADD COLUMN IF NOT EXISTS `ti_fuel_type` VARCHAR(100) DEFAULT '';"")
  MySQL.update.await(""UPDATE "" .. Framework.VehiclesTable .. "" SET ti_fuel_type = ? WHERE plate = ?"", {type, plate});
end)

Framework.Server.CreateCallback('jg-dealerships:server:get-ti-fuel-type', function(src, cb, plate)
  MySQL.query.await(""ALTER TABLE "" .. Framework.VehiclesTable .. "" ADD COLUMN IF NOT EXISTS `ti_fuel_type` VARCHAR(100) DEFAULT '';"")
  local data = MySQL.single.await(""SELECT ti_fuel_type FROM  "" .. Framework.VehiclesTable .. "" WHERE plate = ?"", {plate});
  cb(data.ti_fuel_type)
end)"
gqSm7VWi,data960,TestGuy1,JSON,Monday 17th of June 2024 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'be51838d64b76db11ad4feb1d6a94ace7e3f5296e47428aa06c8ab3007d486a840577a08f80d7aa5d51ad174d63912d49f04c01af17eb8b8eaadb222f436217f9fd1804a36c693cf4adcaa0071f63edd3a597d8875cc8a85292886e7c630e6308fa5de1dceeb0fa6ab3b81d308921feb72ce80610104e40c0ccbc9ea84445c45',
  otherdata: [
    '8bdc5942ccb422a5eac7705d2a605740',
    '41786b5349e85bc017bb553f9c3742d5',
    '199a31d6fca521400feadb18171108dd',
    'fa084805b1ffd374cfb46532f63b944b',
    '4d56a6a163224b5c452758ef785ff744',
    '412b54e225439ddb6b2f54c60943effa',
    'e2ac3908c25e335e50f26c69d67ed1ea',
    '5c34793cf0c1c48f706ee63621f91e38'
  ]
}"
wp5uFMBX,🎁 G2A.COM FREE GIFT CARD GUIDE JUN 2024 V2 🎁,jusst2k4,GetText,Monday 17th of June 2024 05:47:48 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_604084.pdf
 
Working as of:
17 June 2024"
f1S4J5Lj,"""Sensor-Driven Actions"" rev_01",pleasedontcode,Arduino,Monday 17th of June 2024 05:35:11 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Sensor-Driven Actions""
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-06-17 10:33:34

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Rotate servo1 to 4 from 0 to 180 degree, when */
	/* pushbutto light led for 200ms, if ir1 to ir4 > 50% */
	/* rotate servo 1 to servo 4 to 0 degree */
/****** SYSTEM REQUIREMENT 2 *****/
	/* Rotate Servo1 from 0 to 180 degrees when */
	/* LaserButton (D4) is pressed. Light up Laser1 LED */
	/* (D16) for 200ms if IR1 (D14) and IR2 (D26) */
	/* readings are above 50%. Then, reset Servo1 to 0 */
	/* degrees. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>    //https://github.com/evert-arias/EasyButton
#include <Deneyap_Servo.h> //https://github.com/deneyapkart/deneyap-servo-arduino-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void onLaserButtonPressed(); // Function prototype for button press callback
void updateOutputs(); // Function prototype for updating outputs
void rotateServo(int start, int end); // Function prototype for rotating servo

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t LaserButton_PushButton_PIN_D4 = 4;

/***** DEFINITION OF ANALOG INPUT PINS *****/
const uint8_t IR1_Potentiometer_Vout_PIN_D14 = 14;
const uint8_t IR2_Potentiometer_Vout_PIN_D26 = 26;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t Laser1_LED_PIN_D16 = 16;

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t Servo1_Servomotor_PWMSignal_PIN_D13 = 13;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool Laser1_LED_PIN_D16_rawData = 0;
uint8_t Servo1_Servomotor_PWMSignal_PIN_D13_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float Laser1_LED_PIN_D16_phyData = 0.0;
float Servo1_Servomotor_PWMSignal_PIN_D13_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton laserButton(LaserButton_PushButton_PIN_D4); // Initialize EasyButton instance
Servo myservo; // Initialize Servo instance

void setup(void)
{
    // put your setup code here, to run once:
    Serial.begin(115200);

    pinMode(LaserButton_PushButton_PIN_D4, INPUT_PULLUP);
    pinMode(IR1_Potentiometer_Vout_PIN_D14, INPUT);
    pinMode(IR2_Potentiometer_Vout_PIN_D26, INPUT);

    pinMode(Laser1_LED_PIN_D16, OUTPUT);
    pinMode(Servo1_Servomotor_PWMSignal_PIN_D13, OUTPUT);

    laserButton.begin(); // Initialize the button
    laserButton.onPressed(onLaserButtonPressed); // Set the callback for button press

    myservo.attach(Servo1_Servomotor_PWMSignal_PIN_D13); // Attach the servo to pin D13
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    laserButton.read(); // Read the button state
    updateOutputs(); // Refresh output data
}

void onLaserButtonPressed() {
    Serial.println(""Laser button pressed"");

    // Read IR sensor values
    int ir1Value = analogRead(IR1_Potentiometer_Vout_PIN_D14);
    int ir2Value = analogRead(IR2_Potentiometer_Vout_PIN_D26);

    // Check if IR sensor values are above 50%
    if (ir1Value > 2048 && ir2Value > 2048) {
        // Light up Laser1 LED for 200ms
        digitalWrite(Laser1_LED_PIN_D16, HIGH);
        delay(200);
        digitalWrite(Laser1_LED_PIN_D16, LOW);

        // Rotate Servo1 from 0 to 180 degrees
        rotateServo(0, 180);
        delay(200); // Wait for 200ms

        // Reset Servo1 to 0 degrees
        rotateServo(180, 0);
    }
}

void updateOutputs()
{
    digitalWrite(Laser1_LED_PIN_D16, Laser1_LED_PIN_D16_rawData);
    myservo.write(Servo1_Servomotor_PWMSignal_PIN_D13_rawData); // Update servo position
}

void rotateServo(int start, int end) {
    if (start < end) {
        for (int pos = start; pos <= end; pos += 15) {
            myservo.write(pos);
            delay(100);
        }
    } else {
        for (int pos = start; pos >= end; pos -= 15) {
            myservo.write(pos);
            delay(100);
        }
    }
}

/* END CODE */"
i6eY56c8,json,tglenn,JSON,Monday 17th of June 2024 04:57:49 AM CDT,"{
""PJ_CODE"": ""1998"",
""PD_CODE"": ""B19B04"",
""PD_RUNNO"": ""1998-B19B04"",
""Book_No"": ""R199800298"",
""Contract_No"": ""CO-1998-240092"",
""Request_Date"": ""2024-06-17"",
""Filename"": ""CO-1998-240092-20240617164848.pdf"",
""Old_Send_Receipt_Method"": 1,
""Old_Ereceipt_Email"": ""pattra.chu@gmail.com,neechay99@gmail.com,BBB@gmail.com,Register@Noblehome.com,casteber@stebergroup.com,tester@noblehome.com"",
""New_Send_Receipt_Method"": null,
""New_Ereceipt_Email"": null,
""Flag_Send_Receipt_Method"": false,
""Flag_Ereceipt_Email"": false,
""REMResponse_Status"": null,
""REMResponse_DateTime"": null,
""Sales_Order_ID"": ""SO-1998-24030107"",
""ElasticDocID"": ""aaa"",
""Mailing_Address"": {
""Old_Recipient_Name"": ""นายภัทร ชื่นบาน และ นายเพนกวิน ฐานิตา และ บริษัท ฮันโจ คอรป และ บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์) และ นายRobert George Steber"",
""Old_MailingAddr_Number"": ""89/308 หมู่ - ซอย ช่างอากาศอุทิศ 5 ศุภาลัย ลิลลี่ หลักสี่-ดอนเมือง ถนนช่างอากาศอุทิศ แขวงดอนเมือง เขตดอนเมือง กรุงเทพมหานคร 10210"",
""Old_MailingAddr_Building"": null,
""Old_MailingAddr_Moo"": null,
""Old_MailingAddr_Soi"": null,
""Old_MailingAddr_Road"": null,
""Old_MailingAddr_SDT_CODE"": null,
""Old_MailingAddr_DT_CODE"": null,
""Old_MailingAddr_PV_CODE"": null,
""Old_MailingAddr_CY_CODE"": null,
""Old_MailingAddr_Zip"": null,
""Old_MailingAddr_Foriegn"": null,
""Old_MailingAddr_TumbonName"": null,
""Old_MailingAddr_AmperName"": null,
""Old_MailingAddr_ProvinceName"": null,
""Old_MailingAddr_CountryName"": null,
""Old_Recipient_Name_EN"": ""Mr. ภัทร ชื่นบาน and Mr. Pankawin Tanita and บริษัท ฮันโจ คอรป and บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์) and Mr. Robert George Steber"",
""Old_MailingAddr_Number_EN"": null,
""Old_MailingAddr_Building_EN"": null,
""Old_MailingAddr_Moo_EN"": null,
""Old_MailingAddr_Soi_EN"": null,
""Old_MailingAddr_Road_EN"": null,
""Old_MailingAddr_SDT_CODE_EN"": null,
""Old_MailingAddr_DT_CODE_EN"": null,
""Old_MailingAddr_PV_CODE_EN"": null,
""Old_MailingAddr_CY_CODE_EN"": null,
""Old_MailingAddr_Zip_EN"": null,
""Old_MailingAddr_Foriegn_EN"": null,
""Old_MailingAddr_TumbonName_EN"": null,
""Old_MailingAddr_AmperName_EN"": null,
""Old_MailingAddr_ProvinceName_EN"": null,
""Old_MailingAddr_CountryName_EN"": null,
""New_Recipient_Name"": null,
""New_MailingAddr_Number"": null,
""New_MailingAddr_Building"": null,
""New_MailingAddr_Moo"": null,
""New_MailingAddr_Soi"": null,
""New_MailingAddr_Road"": null,
""New_MailingAddr_SDT_CODE"": null,
""New_MailingAddr_DT_CODE"": null,
""New_MailingAddr_PV_CODE"": null,
""New_MailingAddr_CY_CODE"": null,
""New_MailingAddr_Zip"": null,
""New_MailingAddr_Foriegn"": null,
""New_MailingAddr_TumbonName"": null,
""New_MailingAddr_AmperName"": null,
""New_MailingAddr_ProvinceName"": null,
""New_MailingAddr_CountryName"": null,
""New_Recipient_Name_EN"": null,
""New_MailingAddr_Number_EN"": null,
""New_MailingAddr_Building_EN"": null,
""New_MailingAddr_Moo_EN"": null,
""New_MailingAddr_Soi_EN"": null,
""New_MailingAddr_Road_EN"": null,
""New_MailingAddr_SDT_CODE_EN"": null,
""New_MailingAddr_DT_CODE_EN"": null,
""New_MailingAddr_PV_CODE_EN"": null,
""New_MailingAddr_CY_CODE_EN"": null,
""New_MailingAddr_Zip_EN"": null,
""New_MailingAddr_Foriegn_EN"": null,
""New_MailingAddr_TumbonName_EN"": null,
""New_MailingAddr_AmperName_EN"": null,
""New_MailingAddr_ProvinceName_EN"": null,
""New_MailingAddr_CountryName_EN"": null
},
""Customers"": [
{
""Customer_SeqNo"": 0,
""Customer_ID"": ""434734"",
""Old_Flag_Juristic"": ""0"",
""Old_CS_Prefix"": ""1"",
""Old_CS_FName"": ""ภัทร"",
""Old_CS_LName"": ""ชื่นบาน"",
""Old_CS_PrefixName"": ""นาย"",
""Old_CS_Prefix_EN"": ""31"",
""Old_CS_FName_EN"": ""ภัทร"",
""Old_CS_LName_EN"": ""ชื่นบาน"",
""Old_CS_PrefixName_EN"": ""Mr."",
""Old_CS_BirthDate"": ""1986-03-15 00:00:00.000"",
""Old_CS_Nation"": ""94"",
""Old_CS_NationName"": ""ไทย"",
""Old_CS_NationName_EN"": ""Thai"",
""Old_CS_Race"": ""208"",
""Old_CS_RaceName"": ""ไทย"",
""Old_CS_RaceName_EN"": ""Thai"",
""Old_CS_CardID"": ""1100500141298"",
""Old_CS_Passport_No"": null,
""Old_CContactPhone_int_dial_code"": ""66"",
""Old_CContactPhone"": ""0853506999"",
""Old_Branch_ID"": null,
""Old_Branch_Name"": null,
""Old_CS_Authorized_Person"": ""พัชรี เอี่ยมเจริญ"",
""Old_CS_Authorized_Person_EN"": null,
""Old_MarriageStatus"": ""S"",
""Old_IDCardAddr_Number"": null,
""Old_IDCardAddr_Building"": null,
""Old_IDCardAddr_Moo"": null,
""Old_IDCardAddr_Soi"": null,
""Old_IDCardAddr_Road"": null,
""Old_IDCardAddr_SDT_CODE"": null,
""Old_IDCardAddr_DT_CODE"": null,
""Old_IDCardAddr_PV_CODE"": null,
""Old_IDCardAddr_CY_CODE"": null,
""Old_IDCardAddr_Zip"": null,
""Old_IDCardAddr_Foriegn"": null,
""Old_IDCardAddr_TumbonName"": null,
""Old_IDCardAddr_AmperName"": null,
""Old_IDCardAddr_ProvinceName"": null,
""Old_IDCardAddr_CountryName"": null,
""Old_IDCardAddr_Number_EN"": null,
""Old_IDCardAddr_Building_EN"": null,
""Old_IDCardAddr_Moo_EN"": null,
""Old_IDCardAddr_Soi_EN"": null,
""Old_IDCardAddr_Road_EN"": null,
""Old_IDCardAddr_SDT_CODE_EN"": null,
""Old_IDCardAddr_DT_CODE_EN"": null,
""Old_IDCardAddr_PV_CODE_EN"": null,
""Old_IDCardAddr_CY_CODE_EN"": null,
""Old_IDCardAddr_Zip_EN"": null,
""Old_IDCardAddr_Foriegn_EN"": null,
""Old_IDCardAddr_TumbonName_EN"": null,
""Old_IDCardAddr_AmperName_EN"": null,
""Old_IDCardAddr_ProvinceName_EN"": null,
""Old_IDCardAddr_CountryName_EN"": null,
""New_Flag_Juristic"": ""0"",
""New_CS_Prefix"": null,
""New_CS_FName"": null,
""New_CS_LName"": null,
""New_CS_PrefixName"": null,
""New_CS_Prefix_EN"": null,
""New_CS_FName_EN"": null,
""New_CS_LName_EN"": null,
""New_CS_PrefixName_EN"": null,
""New_Branch_Code"": null,
""New_CS_BirthDate"": null,
""New_CS_Nation"": null,
""New_CS_NationName"": null,
""New_CS_NationName_EN"": null,
""New_CS_Race"": null,
""New_CS_RaceName"": null,
""New_CS_RaceName_EN"": null,
""New_CS_CardID"": null,
""New_CS_Passport_No"": null,
""New_CContactPhone_int_dial_code"": null,
""New_CContactPhone"": null,
""New_Branch_ID"": null,
""New_Branch_Name"": null,
""New_CS_Authorized_Person"": null,
""New_CS_Authorized_Person_EN"": null,
""New_MarriageStatus"": null,
""New_IDCardAddr_Number"": null,
""New_IDCardAddr_Building"": null,
""New_IDCardAddr_Moo"": null,
""New_IDCardAddr_Soi"": null,
""New_IDCardAddr_Road"": null,
""New_IDCardAddr_SDT_CODE"": null,
""New_IDCardAddr_DT_CODE"": null,
""New_IDCardAddr_PV_CODE"": null,
""New_IDCardAddr_CY_CODE"": null,
""New_IDCardAddr_Zip"": null,
""New_IDCardAddr_Foriegn"": null,
""New_IDCardAddr_TumbonName"": null,
""New_IDCardAddr_AmperName"": null,
""New_IDCardAddr_ProvinceName"": null,
""New_IDCardAddr_CountryName"": null,
""New_IDCardAddr_Number_EN"": null,
""New_IDCardAddr_Building_EN"": null,
""New_IDCardAddr_Moo_EN"": null,
""New_IDCardAddr_Soi_EN"": null,
""New_IDCardAddr_Road_EN"": null,
""New_IDCardAddr_SDT_CODE_EN"": null,
""New_IDCardAddr_DT_CODE_EN"": null,
""New_IDCardAddr_PV_CODE_EN"": null,
""New_IDCardAddr_CY_CODE_EN"": null,
""New_IDCardAddr_Zip_EN"": null,
""New_IDCardAddr_Foriegn_EN"": null,
""New_IDCardAddr_TumbonName_EN"": null,
""New_IDCardAddr_AmperName_EN"": null,
""New_IDCardAddr_ProvinceName_EN"": null,
""New_IDCardAddr_CountryName_EN"": null,
""Flag_Name"": false,
""Flag_DateofBirth"": false,
""Flag_Nationality"": false,
""Flag_Race"": false,
""Flag_IDCard"": false,
""Flag_Passport_No"": false,
""Flag_Passport_Country"": false,
""Flag_Phone"": false,
""Flag_MarriageStatus"": false,
""Flag_IDCardAddr"": false,
""Flag_Branch_Code"": false,
""Flag_Branch_Name"": false,
""Flag_Authorized_Person"": false,
""Create_By"": 20000622,
""Create_Date"": ""2024-06-17 16:48:49""
},
{
""Customer_SeqNo"": 1,
""Customer_ID"": ""432850"",
""Old_Flag_Juristic"": ""0"",
""Old_CS_Prefix"": ""1"",
""Old_CS_FName"": ""เพนกวิน"",
""Old_CS_LName"": ""ฐานิตา"",
""Old_CS_PrefixName"": ""นาย"",
""Old_CS_Prefix_EN"": ""31"",
""Old_CS_FName_EN"": ""Pankawin"",
""Old_CS_LName_EN"": ""Tanita"",
""Old_CS_PrefixName_EN"": ""Mr."",
""Old_CS_BirthDate"": ""1963-02-12 00:00:00.000"",
""Old_CS_Nation"": ""94"",
""Old_CS_NationName"": ""ไทย"",
""Old_CS_NationName_EN"": null,
""Old_CS_Race"": ""208"",
""Old_CS_RaceName"": ""ไทย"",
""Old_CS_RaceName_EN"": ""Thai"",
""Old_CS_CardID"": ""6724936878017"",
""Old_CS_Passport_No"": null,
""Old_CContactPhone_int_dial_code"": ""66"",
""Old_CContactPhone"": ""0839195428"",
""Old_Branch_ID"": null,
""Old_Branch_Name"": null,
""Old_CS_Authorized_Person"": null,
""Old_CS_Authorized_Person_EN"": null,
""Old_MarriageStatus"": ""S"",
""Old_IDCardAddr_Number"": null,
""Old_IDCardAddr_Building"": null,
""Old_IDCardAddr_Moo"": null,
""Old_IDCardAddr_Soi"": null,
""Old_IDCardAddr_Road"": null,
""Old_IDCardAddr_SDT_CODE"": null,
""Old_IDCardAddr_DT_CODE"": null,
""Old_IDCardAddr_PV_CODE"": null,
""Old_IDCardAddr_CY_CODE"": null,
""Old_IDCardAddr_Zip"": null,
""Old_IDCardAddr_Foriegn"": null,
""Old_IDCardAddr_TumbonName"": null,
""Old_IDCardAddr_AmperName"": null,
""Old_IDCardAddr_ProvinceName"": null,
""Old_IDCardAddr_CountryName"": null,
""Old_IDCardAddr_Number_EN"": null,
""Old_IDCardAddr_Building_EN"": null,
""Old_IDCardAddr_Moo_EN"": null,
""Old_IDCardAddr_Soi_EN"": null,
""Old_IDCardAddr_Road_EN"": null,
""Old_IDCardAddr_SDT_CODE_EN"": null,
""Old_IDCardAddr_DT_CODE_EN"": null,
""Old_IDCardAddr_PV_CODE_EN"": null,
""Old_IDCardAddr_CY_CODE_EN"": null,
""Old_IDCardAddr_Zip_EN"": null,
""Old_IDCardAddr_Foriegn_EN"": null,
""Old_IDCardAddr_TumbonName_EN"": null,
""Old_IDCardAddr_AmperName_EN"": null,
""Old_IDCardAddr_ProvinceName_EN"": null,
""Old_IDCardAddr_CountryName_EN"": null,
""New_Flag_Juristic"": ""0"",
""New_CS_Prefix"": null,
""New_CS_FName"": null,
""New_CS_LName"": null,
""New_CS_PrefixName"": null,
""New_CS_Prefix_EN"": null,
""New_CS_FName_EN"": null,
""New_CS_LName_EN"": null,
""New_CS_PrefixName_EN"": null,
""New_Branch_Code"": null,
""New_CS_BirthDate"": null,
""New_CS_Nation"": null,
""New_CS_NationName"": null,
""New_CS_NationName_EN"": null,
""New_CS_Race"": null,
""New_CS_RaceName"": null,
""New_CS_RaceName_EN"": null,
""New_CS_CardID"": null,
""New_CS_Passport_No"": null,
""New_CContactPhone_int_dial_code"": null,
""New_CContactPhone"": null,
""New_Branch_ID"": null,
""New_Branch_Name"": null,
""New_CS_Authorized_Person"": null,
""New_CS_Authorized_Person_EN"": null,
""New_MarriageStatus"": null,
""New_IDCardAddr_Number"": null,
""New_IDCardAddr_Building"": null,
""New_IDCardAddr_Moo"": null,
""New_IDCardAddr_Soi"": null,
""New_IDCardAddr_Road"": null,
""New_IDCardAddr_SDT_CODE"": null,
""New_IDCardAddr_DT_CODE"": null,
""New_IDCardAddr_PV_CODE"": null,
""New_IDCardAddr_CY_CODE"": null,
""New_IDCardAddr_Zip"": null,
""New_IDCardAddr_Foriegn"": null,
""New_IDCardAddr_TumbonName"": null,
""New_IDCardAddr_AmperName"": null,
""New_IDCardAddr_ProvinceName"": null,
""New_IDCardAddr_CountryName"": null,
""New_IDCardAddr_Number_EN"": null,
""New_IDCardAddr_Building_EN"": null,
""New_IDCardAddr_Moo_EN"": null,
""New_IDCardAddr_Soi_EN"": null,
""New_IDCardAddr_Road_EN"": null,
""New_IDCardAddr_SDT_CODE_EN"": null,
""New_IDCardAddr_DT_CODE_EN"": null,
""New_IDCardAddr_PV_CODE_EN"": null,
""New_IDCardAddr_CY_CODE_EN"": null,
""New_IDCardAddr_Zip_EN"": null,
""New_IDCardAddr_Foriegn_EN"": null,
""New_IDCardAddr_TumbonName_EN"": null,
""New_IDCardAddr_AmperName_EN"": null,
""New_IDCardAddr_ProvinceName_EN"": null,
""New_IDCardAddr_CountryName_EN"": null,
""Flag_Name"": false,
""Flag_DateofBirth"": false,
""Flag_Nationality"": false,
""Flag_Race"": false,
""Flag_IDCard"": false,
""Flag_Passport_No"": false,
""Flag_Passport_Country"": false,
""Flag_Phone"": false,
""Flag_MarriageStatus"": false,
""Flag_IDCardAddr"": false,
""Flag_Branch_Code"": false,
""Flag_Branch_Name"": false,
""Flag_Authorized_Person"": false,
""Create_By"": 20000622,
""Create_Date"": ""2024-06-17 16:48:49""
},
{
""Customer_SeqNo"": 2,
""Customer_ID"": ""423751"",
""Old_Flag_Juristic"": ""1"",
""Old_CS_Prefix"": null,
""Old_CS_FName"": ""บริษัท ฮันโจ คอรป"",
""Old_CS_LName"": ""ฮันโจ"",
""Old_CS_PrefixName"": null,
""Old_CS_Prefix_EN"": null,
""Old_CS_FName_EN"": ""บริษัท ฮันโจ คอรป"",
""Old_CS_LName_EN"": ""Hanjo"",
""Old_CS_PrefixName_EN"": null,
""Old_CS_BirthDate"": ""1970-01-01 00:00:00.000"",
""Old_CS_Nation"": ""105"",
""Old_CS_NationName"": ""เบลเยียม"",
""Old_CS_NationName_EN"": null,
""Old_CS_Race"": ""216"",
""Old_CS_RaceName"": ""เบลเยียม"",
""Old_CS_RaceName_EN"": ""Belgian"",
""Old_CS_CardID"": null,
""Old_CS_Passport_No"": ""A123451"",
""Old_CContactPhone_int_dial_code"": null,
""Old_CContactPhone"": ""0999999999"",
""Old_Branch_ID"": ""AV004"",
""Old_Branch_Name"": ""Main"",
""Old_CS_Authorized_Person"": ""ฮันโจ"",
""Old_CS_Authorized_Person_EN"": ""Hanjo"",
""Old_MarriageStatus"": ""S"",
""Old_IDCardAddr_Number"": null,
""Old_IDCardAddr_Building"": null,
""Old_IDCardAddr_Moo"": null,
""Old_IDCardAddr_Soi"": null,
""Old_IDCardAddr_Road"": null,
""Old_IDCardAddr_SDT_CODE"": null,
""Old_IDCardAddr_DT_CODE"": null,
""Old_IDCardAddr_PV_CODE"": null,
""Old_IDCardAddr_CY_CODE"": null,
""Old_IDCardAddr_Zip"": null,
""Old_IDCardAddr_Foriegn"": null,
""Old_IDCardAddr_TumbonName"": null,
""Old_IDCardAddr_AmperName"": null,
""Old_IDCardAddr_ProvinceName"": null,
""Old_IDCardAddr_CountryName"": null,
""Old_IDCardAddr_Number_EN"": null,
""Old_IDCardAddr_Building_EN"": null,
""Old_IDCardAddr_Moo_EN"": null,
""Old_IDCardAddr_Soi_EN"": null,
""Old_IDCardAddr_Road_EN"": null,
""Old_IDCardAddr_SDT_CODE_EN"": null,
""Old_IDCardAddr_DT_CODE_EN"": null,
""Old_IDCardAddr_PV_CODE_EN"": null,
""Old_IDCardAddr_CY_CODE_EN"": null,
""Old_IDCardAddr_Zip_EN"": null,
""Old_IDCardAddr_Foriegn_EN"": null,
""Old_IDCardAddr_TumbonName_EN"": null,
""Old_IDCardAddr_AmperName_EN"": null,
""Old_IDCardAddr_ProvinceName_EN"": null,
""Old_IDCardAddr_CountryName_EN"": null,
""New_Flag_Juristic"": ""1"",
""New_CS_Prefix"": null,
""New_CS_FName"": null,
""New_CS_LName"": null,
""New_CS_PrefixName"": null,
""New_CS_Prefix_EN"": null,
""New_CS_FName_EN"": null,
""New_CS_LName_EN"": null,
""New_CS_PrefixName_EN"": null,
""New_Branch_Code"": null,
""New_CS_BirthDate"": null,
""New_CS_Nation"": null,
""New_CS_NationName"": null,
""New_CS_NationName_EN"": null,
""New_CS_Race"": null,
""New_CS_RaceName"": null,
""New_CS_RaceName_EN"": null,
""New_CS_CardID"": null,
""New_CS_Passport_No"": null,
""New_CContactPhone_int_dial_code"": null,
""New_CContactPhone"": null,
""New_Branch_ID"": null,
""New_Branch_Name"": null,
""New_CS_Authorized_Person"": null,
""New_CS_Authorized_Person_EN"": null,
""New_MarriageStatus"": null,
""New_IDCardAddr_Number"": null,
""New_IDCardAddr_Building"": null,
""New_IDCardAddr_Moo"": null,
""New_IDCardAddr_Soi"": null,
""New_IDCardAddr_Road"": null,
""New_IDCardAddr_SDT_CODE"": null,
""New_IDCardAddr_DT_CODE"": null,
""New_IDCardAddr_PV_CODE"": null,
""New_IDCardAddr_CY_CODE"": null,
""New_IDCardAddr_Zip"": null,
""New_IDCardAddr_Foriegn"": null,
""New_IDCardAddr_TumbonName"": null,
""New_IDCardAddr_AmperName"": null,
""New_IDCardAddr_ProvinceName"": null,
""New_IDCardAddr_CountryName"": null,
""New_IDCardAddr_Number_EN"": null,
""New_IDCardAddr_Building_EN"": null,
""New_IDCardAddr_Moo_EN"": null,
""New_IDCardAddr_Soi_EN"": null,
""New_IDCardAddr_Road_EN"": null,
""New_IDCardAddr_SDT_CODE_EN"": null,
""New_IDCardAddr_DT_CODE_EN"": null,
""New_IDCardAddr_PV_CODE_EN"": null,
""New_IDCardAddr_CY_CODE_EN"": null,
""New_IDCardAddr_Zip_EN"": null,
""New_IDCardAddr_Foriegn_EN"": null,
""New_IDCardAddr_TumbonName_EN"": null,
""New_IDCardAddr_AmperName_EN"": null,
""New_IDCardAddr_ProvinceName_EN"": null,
""New_IDCardAddr_CountryName_EN"": null,
""Flag_Name"": false,
""Flag_DateofBirth"": false,
""Flag_Nationality"": false,
""Flag_Race"": false,
""Flag_IDCard"": false,
""Flag_Passport_No"": false,
""Flag_Passport_Country"": false,
""Flag_Phone"": false,
""Flag_MarriageStatus"": false,
""Flag_IDCardAddr"": false,
""Flag_Branch_Code"": false,
""Flag_Branch_Name"": false,
""Flag_Authorized_Person"": false,
""Create_By"": 20000622,
""Create_Date"": ""2024-06-17 16:48:49""
},
{
""Customer_SeqNo"": 3,
""Customer_ID"": ""423783"",
""Old_Flag_Juristic"": ""1"",
""Old_CS_Prefix"": null,
""Old_CS_FName"": ""บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์)"",
""Old_CS_LName"": ""กะรัต"",
""Old_CS_PrefixName"": null,
""Old_CS_Prefix_EN"": null,
""Old_CS_FName_EN"": ""บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์)"",
""Old_CS_LName_EN"": ""กะรัต"",
""Old_CS_PrefixName_EN"": null,
""Old_CS_BirthDate"": ""1970-01-01 00:00:00.000"",
""Old_CS_Nation"": ""94"",
""Old_CS_NationName"": ""ไทย"",
""Old_CS_NationName_EN"": null,
""Old_CS_Race"": ""208"",
""Old_CS_RaceName"": ""ไทย"",
""Old_CS_RaceName_EN"": ""Thai"",
""Old_CS_CardID"": ""2994795937310"",
""Old_CS_Passport_No"": null,
""Old_CContactPhone_int_dial_code"": ""66"",
""Old_CContactPhone"": ""0823110167"",
""Old_Branch_ID"": ""AC110"",
""Old_Branch_Name"": ""Main"",
""Old_CS_Authorized_Person"": ""กะรัต"",
""Old_CS_Authorized_Person_EN"": ""กะรัต"",
""Old_MarriageStatus"": ""S"",
""Old_IDCardAddr_Number"": null,
""Old_IDCardAddr_Building"": null,
""Old_IDCardAddr_Moo"": null,
""Old_IDCardAddr_Soi"": null,
""Old_IDCardAddr_Road"": null,
""Old_IDCardAddr_SDT_CODE"": null,
""Old_IDCardAddr_DT_CODE"": null,
""Old_IDCardAddr_PV_CODE"": null,
""Old_IDCardAddr_CY_CODE"": null,
""Old_IDCardAddr_Zip"": null,
""Old_IDCardAddr_Foriegn"": null,
""Old_IDCardAddr_TumbonName"": null,
""Old_IDCardAddr_AmperName"": null,
""Old_IDCardAddr_ProvinceName"": null,
""Old_IDCardAddr_CountryName"": null,
""Old_IDCardAddr_Number_EN"": null,
""Old_IDCardAddr_Building_EN"": null,
""Old_IDCardAddr_Moo_EN"": null,
""Old_IDCardAddr_Soi_EN"": null,
""Old_IDCardAddr_Road_EN"": null,
""Old_IDCardAddr_SDT_CODE_EN"": null,
""Old_IDCardAddr_DT_CODE_EN"": null,
""Old_IDCardAddr_PV_CODE_EN"": null,
""Old_IDCardAddr_CY_CODE_EN"": null,
""Old_IDCardAddr_Zip_EN"": null,
""Old_IDCardAddr_Foriegn_EN"": null,
""Old_IDCardAddr_TumbonName_EN"": null,
""Old_IDCardAddr_AmperName_EN"": null,
""Old_IDCardAddr_ProvinceName_EN"": null,
""Old_IDCardAddr_CountryName_EN"": null,
""New_Flag_Juristic"": ""1"",
""New_CS_Prefix"": null,
""New_CS_FName"": ""บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์)"",
""New_CS_LName"": null,
""New_CS_PrefixName"": null,
""New_CS_Prefix_EN"": null,
""New_CS_FName_EN"": ""บริษัท เดอะ กะรัต ครีเอชั่น (ไทยแลนด์)"",
""New_CS_LName_EN"": null,
""New_CS_PrefixName_EN"": null,
""New_Branch_Code"": ""AC110"",
""New_CS_BirthDate"": null,
""New_CS_Nation"": ""94"",
""New_CS_NationName"": null,
""New_CS_NationName_EN"": null,
""New_CS_Race"": null,
""New_CS_RaceName"": null,
""New_CS_RaceName_EN"": null,
""New_CS_CardID"": null,
""New_CS_Passport_No"": null,
""New_CContactPhone_int_dial_code"": ""66"",
""New_CContactPhone"": ""0823110167"",
""New_Branch_ID"": ""AC110"",
""New_Branch_Name"": ""Main"",
""New_CS_Authorized_Person"": null,
""New_CS_Authorized_Person_EN"": null,
""New_MarriageStatus"": null,
""New_IDCardAddr_Number"": ""47/23 หมู่ 4"",
""New_IDCardAddr_Building"": null,
""New_IDCardAddr_Moo"": null,
""New_IDCardAddr_Soi"": null,
""New_IDCardAddr_Road"": ""สุขาภาล 2"",
""New_IDCardAddr_SDT_CODE"": ""810405"",
""New_IDCardAddr_DT_CODE"": ""8104"",
""New_IDCardAddr_PV_CODE"": ""81"",
""New_IDCardAddr_CY_CODE"": ""182"",
""New_IDCardAddr_Zip"": ""81120"",
""New_IDCardAddr_Foriegn"": null,
""New_IDCardAddr_TumbonName"": ""ห้วยน้ำขาว"",
""New_IDCardAddr_AmperName"": ""คลองท่อม"",
""New_IDCardAddr_ProvinceName"": ""กระบี่"",
""New_IDCardAddr_CountryName"": null,
""New_IDCardAddr_Number_EN"": null,
""New_IDCardAddr_Building_EN"": null,
""New_IDCardAddr_Moo_EN"": null,
""New_IDCardAddr_Soi_EN"": null,
""New_IDCardAddr_Road_EN"": null,
""New_IDCardAddr_SDT_CODE_EN"": ""810405"",
""New_IDCardAddr_DT_CODE_EN"": ""8104"",
""New_IDCardAddr_PV_CODE_EN"": ""81"",
""New_IDCardAddr_CY_CODE_EN"": ""182"",
""New_IDCardAddr_Zip_EN"": ""81120"",
""New_IDCardAddr_Foriegn_EN"": null,
""New_IDCardAddr_TumbonName_EN"": ""Huai Nam Khao"",
""New_IDCardAddr_AmperName_EN"": ""Khlong Thom"",
""New_IDCardAddr_ProvinceName_EN"": ""กระบี่"",
""New_IDCardAddr_CountryName_EN"": null,
""Flag_Name"": true,
""Flag_DateofBirth"": false,
""Flag_Nationality"": true,
""Flag_Race"": false,
""Flag_IDCard"": false,
""Flag_Passport_No"": false,
""Flag_Passport_Country"": false,
""Flag_Phone"": true,
""Flag_MarriageStatus"": false,
""Flag_IDCardAddr"": true,
""Flag_Branch_Code"": true,
""Flag_Branch_Name"": true,
""Flag_Authorized_Person"": false,
""Create_By"": 20000622,
""Create_Date"": ""2024-06-17 16:48:49""
},
{
""Customer_SeqNo"": 4,
""Customer_ID"": ""432176"",
""Old_Flag_Juristic"": ""0"",
""Old_CS_Prefix"": ""1"",
""Old_CS_FName"": ""Robert George"",
""Old_CS_LName"": ""Steber"",
""Old_CS_PrefixName"": ""นาย"",
""Old_CS_Prefix_EN"": ""31"",
""Old_CS_FName_EN"": ""Robert George"",
""Old_CS_LName_EN"": ""Steber"",
""Old_CS_PrefixName_EN"": ""Mr."",
""Old_CS_BirthDate"": ""1959-01-01 00:00:00.000"",
""Old_CS_Nation"": ""98"",
""Old_CS_NationName"": ""สหรัฐอเมริกา"",
""Old_CS_NationName_EN"": null,
""Old_CS_Race"": ""305"",
""Old_CS_RaceName"": ""สหรัฐอเมริกา"",
""Old_CS_RaceName_EN"": ""American"",
""Old_CS_CardID"": null,
""Old_CS_Passport_No"": ""A35099582"",
""Old_CContactPhone_int_dial_code"": ""66"",
""Old_CContactPhone"": ""0812652303"",
""Old_Branch_ID"": null,
""Old_Branch_Name"": null,
""Old_CS_Authorized_Person"": null,
""Old_CS_Authorized_Person_EN"": null,
""Old_MarriageStatus"": ""S"",
""Old_IDCardAddr_Number"": null,
""Old_IDCardAddr_Building"": null,
""Old_IDCardAddr_Moo"": null,
""Old_IDCardAddr_Soi"": null,
""Old_IDCardAddr_Road"": null,
""Old_IDCardAddr_SDT_CODE"": null,
""Old_IDCardAddr_DT_CODE"": null,
""Old_IDCardAddr_PV_CODE"": null,
""Old_IDCardAddr_CY_CODE"": null,
""Old_IDCardAddr_Zip"": null,
""Old_IDCardAddr_Foriegn"": null,
""Old_IDCardAddr_TumbonName"": null,
""Old_IDCardAddr_AmperName"": null,
""Old_IDCardAddr_ProvinceName"": null,
""Old_IDCardAddr_CountryName"": null,
""Old_IDCardAddr_Number_EN"": null,
""Old_IDCardAddr_Building_EN"": null,
""Old_IDCardAddr_Moo_EN"": null,
""Old_IDCardAddr_Soi_EN"": null,
""Old_IDCardAddr_Road_EN"": null,
""Old_IDCardAddr_SDT_CODE_EN"": null,
""Old_IDCardAddr_DT_CODE_EN"": null,
""Old_IDCardAddr_PV_CODE_EN"": null,
""Old_IDCardAddr_CY_CODE_EN"": null,
""Old_IDCardAddr_Zip_EN"": null,
""Old_IDCardAddr_Foriegn_EN"": null,
""Old_IDCardAddr_TumbonName_EN"": null,
""Old_IDCardAddr_AmperName_EN"": null,
""Old_IDCardAddr_ProvinceName_EN"": null,
""Old_IDCardAddr_CountryName_EN"": null,
""New_Flag_Juristic"": ""0"",
""New_CS_Prefix"": null,
""New_CS_FName"": null,
""New_CS_LName"": null,
""New_CS_PrefixName"": null,
""New_CS_Prefix_EN"": null,
""New_CS_FName_EN"": null,
""New_CS_LName_EN"": null,
""New_CS_PrefixName_EN"": null,
""New_Branch_Code"": null,
""New_CS_BirthDate"": null,
""New_CS_Nation"": null,
""New_CS_NationName"": null,
""New_CS_NationName_EN"": null,
""New_CS_Race"": null,
""New_CS_RaceName"": null,
""New_CS_RaceName_EN"": null,
""New_CS_CardID"": null,
""New_CS_Passport_No"": null,
""New_CContactPhone_int_dial_code"": null,
""New_CContactPhone"": null,
""New_Branch_ID"": null,
""New_Branch_Name"": null,
""New_CS_Authorized_Person"": null,
""New_CS_Authorized_Person_EN"": null,
""New_MarriageStatus"": null,
""New_IDCardAddr_Number"": null,
""New_IDCardAddr_Building"": null,
""New_IDCardAddr_Moo"": null,
""New_IDCardAddr_Soi"": null,
""New_IDCardAddr_Road"": null,
""New_IDCardAddr_SDT_CODE"": null,
""New_IDCardAddr_DT_CODE"": null,
""New_IDCardAddr_PV_CODE"": null,
""New_IDCardAddr_CY_CODE"": null,
""New_IDCardAddr_Zip"": null,
""New_IDCardAddr_Foriegn"": null,
""New_IDCardAddr_TumbonName"": null,
""New_IDCardAddr_AmperName"": null,
""New_IDCardAddr_ProvinceName"": null,
""New_IDCardAddr_CountryName"": null,
""New_IDCardAddr_Number_EN"": null,
""New_IDCardAddr_Building_EN"": null,
""New_IDCardAddr_Moo_EN"": null,
""New_IDCardAddr_Soi_EN"": null,
""New_IDCardAddr_Road_EN"": null,
""New_IDCardAddr_SDT_CODE_EN"": null,
""New_IDCardAddr_DT_CODE_EN"": null,
""New_IDCardAddr_PV_CODE_EN"": null,
""New_IDCardAddr_CY_CODE_EN"": null,
""New_IDCardAddr_Zip_EN"": null,
""New_IDCardAddr_Foriegn_EN"": null,
""New_IDCardAddr_TumbonName_EN"": null,
""New_IDCardAddr_AmperName_EN"": null,
""New_IDCardAddr_ProvinceName_EN"": null,
""New_IDCardAddr_CountryName_EN"": null,
""Flag_Name"": false,
""Flag_DateofBirth"": false,
""Flag_Nationality"": false,
""Flag_Race"": false,
""Flag_IDCard"": false,
""Flag_Passport_No"": false,
""Flag_Passport_Country"": false,
""Flag_Phone"": false,
""Flag_MarriageStatus"": false,
""Flag_IDCardAddr"": false,
""Flag_Branch_Code"": false,
""Flag_Branch_Name"": false,
""Flag_Authorized_Person"": false,
""Create_By"": 20000622,
""Create_Date"": ""2024-06-17 16:48:49""
}
],
""Create_By"": 20000622
}"
zCXk0B15,🎁G2A.com Free Gift Card Guide June 2024 NEW🎁,ssss50w,GetText,Monday 17th of June 2024 04:41:44 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
17 June 2024"
Tj7TggdB,turbine snowybot,coinwalk,JavaScript,Monday 17th of June 2024 04:30:32 AM CDT,"var elderly = parseFloat(document.getElementById('pct_balance').value);
var belance = elderly;
var prefit = Number((elderly/4096).toFixed(8));
var beast = prefit;
var winnerdinner = elderly;
var tens = (prefit*10);
var sevens = (prefit*6.9);
var eights = (prefit*7.9);
var winnerdinner = elderly;
var great = elderly;
var joey = ((Math.floor(elderly/tens))*tens);
var greedy = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
var elven = 0;
var upper = 6.9;
var downer = 2.9;
 
 
function go(){
if (greedy!=elven){
great = document.getElementById('pct_balance').value;
elven = Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
if (great>(joey+(beast*upper))){
    beast = beast*2;
    upper = 4.9
    downer = 4.9
    joey = parseFloat(great);
    }
if (great<(joey-(beast*downer))){
    beast = beast*2;
    upper = 4.9
    downer = 4.9
    joey = parseFloat(great);
    }
if (((beast)>=(great/400))&&(great>(prefit*1000))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(great/400))&&(great>(prefit*1000))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(great/400))&&(great>(prefit*1000))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    upper = 4.9
    downer = 4.9
    joey = parseFloat(great);
    }
if (((beast)>=(great/200))&&(great<(prefit*1000))&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(great/200)&&(great<(prefit*1000)))&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(great/200))&&(great<(prefit*1000))&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    upper = 4.9;
    downer = 4.9;
    joey = parseFloat(great);
    }
if (((beast)>=(elderly/100))&&(great>elderly)&&(great>(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(elderly/100))&&(great>elderly)&&(great<(((Math.floor(great/tens))*tens)+sevens))){
    beast = prefit;
    upper = 6.9;
    downer = 2.9;
    joey = ((Math.floor(great/tens))*tens);
    }
if (((beast)>=(elderly/100))&&(great>elderly)&&(great>(((Math.floor(great/tens))*tens)+sevens))&&(great<(((Math.floor(great/tens))*tens)+eights))){
    beast = prefit*2;
    upper = 4.9;
    downer = 4.9;
    joey = parseFloat(great);
    }
var cat = ((great-elderly).toFixed(8));
console.log(""profit"");
console.log(cat);
if (great>=(winnerdinner*24)){
    console.log(""winner winner chicken dinner"");
    return;
} 
$('#pct_chance').val(49.5);
$('#pct_bet').val(((beast*1).toFixed(8)));
$('#a_lo').click();
}
greedy =  Number(document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText);
setTimeout(() => go(), 1);
}
 
go();"
tCCtqZm0,yeh,Yobanzda,Lua,Monday 17th of June 2024 04:17:29 AM CDT,"GTAG2D = PATCHED
Toast = PATCHED"
YhVDwxsg,# eval_dict.py,here2share,Python,Monday 17th of June 2024 04:17:05 AM CDT,"# eval_dict.py

original_dict = {'a': 1, 'b': [2, 3], 'c': {'x': 4, 'y': 5}}
copied_dict = eval(str(original_dict))

# Modify a nested object in the original dictionary
original_dict['b'].append('***b***')
original_dict['c']['x'] = '***4>>>c/x***'"
VM4SnuKb,Untitled,matchy233,Python,Monday 17th of June 2024 04:10:52 AM CDT,"from itertools import combinations

def reduce_alphabet(
    pij: np.ndarray,
    marginals: np.ndarray,
    alphabet: np.ndarray[str],
    target_size: int,
    num_best_saved: int = 2,
):
    if len(alphabet) < target_size:
        raise ValueError(""Target size must be smaller than the alphabet size"")
    if len(alphabet) == target_size:
        return alphabet

    N = len(alphabet)

    old_best_alphabets = [alphabet] * num_best_saved
    old_best_results = [(np.array(pij), np.array(marginals))] * num_best_saved
    best_alphabets = [alphabet] * num_best_saved
    best_entropy = [-np.inf] * num_best_saved
    best_results = [(np.array(pij), np.array(marginals))] * num_best_saved

    while(N > target_size):
        print(f""Reducing alphabet size to {N-1}"")
        for curr_idx in range(num_best_saved):
            old_alphabet = old_best_alphabets[curr_idx]
            _pij, _marginals = old_best_results[curr_idx]

            combis = list(combinations(range(len(old_alphabet)), 2))
            for c in combis:
                M = old_alphabet[c[0]] + old_alphabet[c[1]]
                # new alphabet is old alphabet without c[0] and c[1] and with M
                new_alphabet = [x for x in old_alphabet if x not in [old_alphabet[c[0]], old_alphabet[c[1]]]]
                new_alphabet.append(M)
                assert len(new_alphabet) == N - 1
                new_pij = np.zeros((len(new_alphabet), len(new_alphabet)))
                new_marginals = np.zeros(len(new_alphabet))
                for i in range(len(new_alphabet) - 1):
                    new_marginals[i] = _marginals[old_alphabet.index(new_alphabet[i])]
                    for j in range(len(new_alphabet) - 1):
                        old_i = old_alphabet.index(new_alphabet[i])
                        old_j = old_alphabet.index(new_alphabet[j])
                        new_pij[i, j] = _pij[old_i, old_j]
                new_marginals[-1] = _marginals[c[0]] + _marginals[c[1]]
                for idx, a in enumerate(new_alphabet[:-1]):
                    i, j = c
                    m = new_alphabet.index(M)
                    old_k = old_alphabet.index(a)
                    new_pij[m, idx] = _pij[i, old_k] + _pij[j, old_k]
                    new_pij[idx, m] = _pij[old_k, i] + _pij[old_k, j]

                entropy = calculate_entropy(new_pij, new_marginals)

                for i in range(num_best_saved):
                    if entropy > best_entropy[i]:
                        # insert at i
                        best_entropy.insert(i, entropy)
                        best_alphabets.insert(i, new_alphabet)
                        best_results.insert(i, (new_pij, new_marginals))
                        # remove last element
                        best_entropy.pop()
                        best_alphabets.pop()
                        best_results.pop()
                        break

        old_best_alphabets = [x for x in best_alphabets]
        old_best_results = [x for x in best_results]
        best_entropy = [-np.inf] * num_best_saved

        N -= 1

    return best_alphabets[0]
"
zGmwHaeD,521TVDialog,FreedTV,JSON,Monday 17th of June 2024 04:09:53 AM CDT,"{
  ""desc"": ""test"",
  ""cancel"": """",
  ""confirm"": ""确定"",
  ""showOneTime"": false,
  ""isQrCode"": true,
  ""url"": ""https://www.baidu.com/"",
  ""show"": true
}"
grMrKX5Y,[WP] [SQL] exporter CPT avec metas,rAthus,MySQL,Monday 17th of June 2024 03:51:39 AM CDT,"-- sélectionne les CPT type ""commune"" pour en exporter l'ID, le titre, et les métas ""cp"", ""lat"", lng"" et ""shapes""
SELECT p.ID,
       p.post_title,
       MAX(CASE WHEN pm.meta_key='cp' THEN pm.meta_value ELSE NULL END) AS 'cp',
       MAX(CASE WHEN pm.meta_key='lat' THEN pm.meta_value ELSE NULL END) AS 'lat',
       MAX(CASE WHEN pm.meta_key='lng' THEN pm.meta_value ELSE NULL END) AS 'lng',
       MAX(CASE WHEN pm.meta_key='shapes' THEN pm.meta_value ELSE NULL END) AS 'shapes'
FROM vtx_posts p LEFT JOIN vtx_postmeta pm ON (pm.post_id=p.ID)
WHERE p.post_type='commune' AND p.post_title!='Brouillon auto'
GROUP BY p.ID
ORDER BY p.ID ASC;"
ZW8ZRTyi,"Квадратный стики справа, кнопка закрытия сверху справа",Luxup,CSS,Monday 17th of June 2024 03:17:41 AM CDT,"<div id=""lx_noclick"" style=""width: 60px !important; left: -40px !important;bottom: 220px !important;height: 90px !important; position: absolute;""></div> <style> #%DIV_ID% {width: 380px !important; left: auto; right: -105px !important; padding-left: 0 !important;} 
#%DIV_ID% div[id^=luxup_slot] {
z-index: 999999 !important;
}

#%DIV_ID% .lx_close_button:before, #%DIV_ID% .lx_close_button span, #%DIV_ID% .lx_no_click{ display: none !important; } 
#%DIV_ID% .lx_close_button { 
    top: -11% !important;
    height: 26px !important;
    visibility: visible !important;
    pointer-events: auto !important;
    background: transparent !important;
    z-index: 1;
    left: 280px;

} .lx_close_button svg {
    left: 290px !important;
    transform: rotate(0deg) !important;
}
};


 </style> <script> document.querySelectorAll('button.lx_close_button').forEach(button => { button.innerHTML = '<svg width=""60"" height=""24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M10.485 6.06A8 8 0 0118.246 0h23.508a8 8 0 017.76 6.06l3.728 14.91A4 4 0 0057.123 24H60 0h2.877a4 4 0 003.88-3.03l3.728-14.91z"" fill=""#D1D6E0""></path><path d=""M24.793 6.793a1 1 0 000 1.414L28.586 12l-3.793 3.793a1 1 0 001.414 1.414L30 13.414l3.793 3.793a1 1 0 001.414-1.414L31.414 12l3.793-3.793a1 1 0 00-1.414-1.414L30 10.586l-3.793-3.793a1 1 0 00-1.414 0z"" fill=""#575C66""></path></svg>' + button.innerHTML; document.styleSheets[0].insertRule('button.lx_close_button::before { content: none !important; }', 0); }); </script>
"
DxEHFvpt,BREAKING NEWS!!!,Nil000,Email,Monday 17th of June 2024 02:57:51 AM CDT,The Bitcoin address 1HQ3Go3ggs8pFnXuHVHRytPCq5fGG8Hbhx (one of the richest and popular addresses ever) is on sale on @myipms Twitter account for $600 dollars (WITH PROOF!!!!!!!!!)
npwgq6eP,treding,Ramani5527,Python,Monday 17th of June 2024 01:19:59 AM CDT,"//@version=4
study(""Harmonic Pitchfork Indicators"",shorttitle=""HPF Ind"", overlay=true)
len1 = input(62, minval=9, title=""EMA 1"")
len2 = input(930, minval=50, title=""EMA 2"")
WL=(input(title=""Level (in pips)"", type=input.integer,defval=50))

src = input(close, title=""Source"")
FirstBar = barstate.isrealtime
pip=syminfo.mintick*100000
start=(((round(open*(100/pip)/(WL/100))-5)/((100/pip)/(WL/100))))
gap=(0.01*pip)*(WL/100)
quarter=gap

shortema = ema(src, len1)
longema = ema(src, len2)

plot(shortema, color=#ff0000, title=""EMA 1"")
plot(longema, color=#ff0000, title=""EMA 2"")
//red line 
plot(start,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)

level=start+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)

level:=level+quarter
plot(level,""Quarter"", color=#ffff00, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)


level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
level:=level+quarter
plot(level,""Quarter"", color=#ff0000, linewidth=2, transp=0,trackprice=true,show_last=1)
"
66K9Wtwv,Untitled,LessVegetables,C,Monday 17th of June 2024 12:54:44 AM CDT,"#include <stdio.h>

// Функция F19 подсчитывает количество симметричных подстрок длиной 4 и более символов в строке p.
int F19(char* p) {
    char* c; 
    int ns;  // Счетчик для количества симметричных подстрок

    // Внешний цикл проходит по каждому символу строки p
    for (c = p, ns = 0; *c != '\0'; c++) {
        // Внутренний цикл проверяет симметрию для подстрок вокруг текущего символа
        for (int k = 0; c - k >= p && c[k] != '\0'; k++) {
            // Прерываем, если символы по обе стороны от текущего не равны
            if (c[-k] != c[k]) break;
            // Увеличиваем счетчик, если длина симметричной подстроки >= 4 символов (k >= 3)
            if (k >= 3) ns++;
        }
    }
    return ns; // Возвращаем количество симметричных подстрок
}

int main() {
    // Примеры тестов
    char str1[] = ""abccbaabccba"";
    char str2[] = ""abcd"";
    char str3[] = ""aaaabaaa"";
    char str4[] = ""abccba"";
    char str5[] = ""12344321"";

    // Вывод результатов для различных тестовых строк
    printf(""%s: %d\n"", str1, F19(str1)); // Ожидается: 9
    printf(""%s: %d\n"", str2, F19(str2)); // Ожидается: 0
    printf(""%s: %d\n"", str3, F19(str3)); // Ожидается: 3
    printf(""%s: %d\n"", str4, F19(str4)); // Ожидается: 2
    printf(""%s: %d\n"", str5, F19(str5)); // Ожидается: 3

    return 0;
}"
2tYZmmjw,Python Hangman,3th1ca14aX0r,Python,Monday 17th of June 2024 12:36:34 AM CDT,"import random
import string

def get_valid_word(words):
    """"""
    Returns a valid word from the provided list of words.
    Ensures the word has no spaces or hyphens and converts it to uppercase.
    """"""
    word = random.choice(words)
    while '-' in word or ' ' in word:
        word = random.choice(words)
    return word.upper()

def hangman():
    """"""
    The main function for the Hangman game.
    """"""
    words = [""python"", ""javascript"", ""computer"", ""programming"", ""algorithm"", 
             ""hangman"", ""challenge"", ""development"", ""random"", ""function""]
    word = get_valid_word(words)
    word_letters = set(word)  # Letters in the word to be guessed
    alphabet = set(string.ascii_uppercase)  # Set of uppercase English letters
    used_letters = set()  # Set of letters guessed by the user

    lives = 6

    # Main game loop
    while len(word_letters) > 0 and lives > 0:
        print(f""\nYou have {lives} lives left and you have used these letters: "", ' '.join(sorted(used_letters)))

        # Display the current state of the word
        word_list = [letter if letter in used_letters else '-' for letter in word]
        print(""Current word: "", ' '.join(word_list))

        # Get user input
        user_letter = input(""Guess a letter: "").upper()
        if len(user_letter) != 1 or user_letter not in alphabet:
            print(""Invalid input. Please enter a single alphabet character."")
            continue

        if user_letter in used_letters:
            print(""You have already used that character. Please try again."")
            continue

        # Process valid guess
        used_letters.add(user_letter)
        if user_letter in word_letters:
            word_letters.remove(user_letter)
            print(""Good guess!"")
        else:
            lives -= 1
            print(""Letter is not in the word."")

    # End of the game
    if lives == 0:
        print(f""\nYou died. The word was {word}."")
    else:
        print(f""\nCongratulations! You guessed the word {word}!"")

if __name__ == ""__main__"":
    hangman()"
srhBLVnj,fellScript,MicycleBichael,Lua,Sunday 16th of June 2024 11:17:00 PM CDT,"turtle.dig()
turtle.forward()
while(info.detectUp())
do
    turtle.digUp()
    turtle.up()
end
while(not info.detectDown())
do
    turtle.down()
end"
DUEiXMVL,Untitled,LessVegetables,C,Sunday 16th of June 2024 10:35:53 PM CDT,"#include <stdio.h>
#include <stdlib.h>

// Определяем размер массива в каждом узле
#define ARRAY_SIZE 4

// Структура для элемента двусвязного списка
typedef struct Node {
    int array[ARRAY_SIZE];  // Массив фиксированной размерности для хранения элементов
    int filled;             // Количество заполненных элементов в массиве
    struct Node *prev;      // Указатель на предыдущий элемент списка
    struct Node *next;      // Указатель на следующий элемент списка
} Node;

// Функция для создания нового узла
Node* createNode() {
    Node *newNode = (Node*)malloc(sizeof(Node)); // Выделяем память для нового узла
    newNode->filled = 0;
    newNode->prev = NULL;
    newNode->next = NULL;
    return newNode; // Возвращаем указатель на новый узел
}

// Функция для создания списка из входного массива
Node* createList(int *inputArray, int size) {
    Node *head = NULL, *tail = NULL; // Указатели на начало и конец списка
    int i = 0; // Индекс для входного массива

    // Пока не пройден весь входной массив
    while (i < size) {
        Node *newNode = createNode(); // Создаём новый узел
        
        // Заполняем новый узел элементами из входного массива
        while (i < size && newNode->filled < ARRAY_SIZE) {
            newNode->array[newNode->filled++] = inputArray[i++];
        }
        
        // Если список пустой, устанавливаем голову и хвост
        if (!head) {
            head = newNode;
            tail = newNode;
        }
        else { // Иначе добавляем узел в конец списка
            newNode->filled += tail->filled; // Суммируем заполненные элементы
            tail->next = newNode; // Соединяем хвост с новым элементом
            newNode->prev = tail;
            tail = newNode; // Обновляем хвост
        }
    }

    return head; // Возвращаем указатель на начало списка
}

// Функция для вывода списка
void displayList(Node *head) {
    Node *current = head; // Указатель на текущий узел
    int nodeIndex = 0, filledCount;

    // Пока не дошли до конца списка
    while (current) {
        printf(""Node %d: "", nodeIndex++); // Выводим индекс узла

        // Определяем количество заполненных элементов текущего узла
        if (current != head) filledCount = current->filled - (current->prev->filled);
        else filledCount = current->filled;

        // Выводим все элементы массива текущего узла
        for (int i = 0; i < filledCount; i++) {
            printf(""%d "", current->array[i]);
        }
        printf(""(filled: %d)\n"", current->filled); // Выводим количество заполненных элементов (до текущего узла)
        current = current->next; // Переходим к следующему узлу
    }
}

// Функция для освобождения памяти списка
void freeList(Node *head) {
    Node *current = head; // Указатель на текущий узел
    Node *nextNode;

    // Пока не дошли до конца списка
    while (current) {
        nextNode = current->next;   // Сохраняем указатель на следующий узел
        free(current);              // Освобождаем память текущего узла
        current = nextNode;          // Переходим к следующему узлу
    }
}

int main() {
    // Создаём два входных массива
    int array1[] = {1, 2, 3, 4, 5, 6, 7, 8};
    int array2[] = {10, 20, 30, 40, 50, 60};

    // Создаём два списка на основе входных массивов
    Node *list1 = createList(array1, sizeof(array1) / sizeof(array1[0]));
    Node *list2 = createList(array2, sizeof(array2) / sizeof(array2[0]));

    // Выводим оба списка
    printf(""List 1:\n"");
    displayList(list1);
    printf(""\nList 2:\n"");
    displayList(list2);

    // Освобождаем память обоих списков
    freeList(list1);
    freeList(list2);

    return 0;
}"
xMsJ99Pm,Untitled,LessVegetables,C,Sunday 16th of June 2024 10:09:06 PM CDT,"/*
Элемент двусвязного списка содержит массив целых фиксированной размерности. 
Функция создает структуру данных, читает из входного массива значения, пока 
массив не кончится. В каждом элементе списка запоминается текущее количество 
заполненных элементов массива.


Требования ко всем задачам:
1. Задачу реализовать в виде функции, получающей все данные через параметры.
2. В main создать две статические структуры данных, вызвать функцию 2 раза и вывести 2 результата. Никакие входные данные не вводятся, программа запускается «от одного клика». Структуру данных можно создавать динамически с помощью функции добавления элемента и ее многократного вызова.
3. Если функция создает структуру данных, то необходима функция трассировки - вывод значений, хранимых в структуре данных, и необходимых данных о текущей конфигурации (уровень вершины дерева, номер элемента списка и т.п.)
Замечания по выполняемым операциям.
Объединение - результат содержит элементы из двух исходных структур данных (СД), элемент, присутствующий в обеих СД, включается в одном экземпляре.
Пересечение - результат содержит элементы, одновременно присутствующие в обеих структурах данных.
Разность - результат содержит элементы из первой СД, которые отсутствуют во второй.
*/

#include <stdio.h>
#include <stdlib.h>

#define ARRAY_SIZE 4

typedef struct Node {
    int array[ARRAY_SIZE];
    int filled;
    struct Node *prev;
    struct Node *next;
} Node;


Node* createNode() {
    Node *newNode = (Node*)malloc(sizeof(Node));
    newNode->filled = 0;
    newNode->prev = NULL;
    newNode->next = NULL;
    return newNode;
}


Node* createList(int *inputArray, int size) {
    Node *head = NULL, *tail = NULL;
    int i = 0;

    while (i < size) {
        Node *newNode = createNode();
        
        while (i < size && newNode->filled < ARRAY_SIZE) {
            newNode->array[newNode->filled++] = inputArray[i++];
        }
        
        if (!head) {
            head = newNode;
            tail = newNode;
        } else {
            newNode->filled += tail->filled;
            tail->next = newNode;
            newNode->prev = tail;
            tail = newNode;
        }
    }

    return head;
}


void displayList(Node *head) {
    Node *current = head;
    int nodeIndex = 0, filledCount;

    while (current) {
        printf(""Node %d: "", nodeIndex++);

        if (current != head) filledCount = current->filled - (current->prev->filled);
        else filledCount = current->filled;

        for (int i = 0; i < filledCount; i++) {
            printf(""%d "", current->array[i]);
        }
        printf(""(filled: %d)\n"", current->filled);
        current = current->next;
    }
}


void freeList(Node *head) {
    Node *current = head;
    Node *nextNode;

    while (current) {
        nextNode = current->next;
        free(current);
        current = nextNode;
    }
}

int main() {
    int array1[] = {1, 2, 3, 4, 5, 6, 7, 8};
    int array2[] = {10, 20, 30, 40, 50, 60};

    Node *list1 = createList(array1, sizeof(array1) / sizeof(array1[0]));
    Node *list2 = createList(array2, sizeof(array2) / sizeof(array2[0]));

    printf(""List 1:\n"");
    displayList(list1);
    printf(""\nList 2:\n"");
    displayList(list2);

    freeList(list1);
    freeList(list2);

    // if (argc < 2) {
    //     printf(""Usage: %s <list of integers>\n"", argv[0]);
    //     return 1;
    // }

    // int *inputArray = (int*)malloc((argc - 1) * sizeof(int));

    // for (int i = 1; i < argc; i++) {
    //     inputArray[i - 1] = atoi(argv[i]);
    // }

    // // Create the list
    // Node *list = createList(inputArray, argc - 1);

    // // Display the list
    // displayList(list);

    // // Free the list
    // freeList(list);
    // free(inputArray);

    return 0;
}"
jG93Hdx3,request.lua,ZathegamE,Lua,Sunday 16th of June 2024 09:36:34 PM CDT,"local integrator = peripheral.find(""redstoneIntegrator"")
local envd = peripheral.find(""environmentDetector"")
integrator.setOutput(""bottom"",true)
list_ = fs.open(""allow_list.txt"",""r"")
list = textutils.unserialize(list_.readAll())
list_.close()
function has(table,compare)
    for _,b in pairs(table) do
        if b == compare then
            return true
        end
    end
    return false
end  
open = false
while true do
    open = false
   term.clear()
   term.setCursorPos(1,1)
   term.write(""solliciter soins : [o]/[n]"")
   term.setCursorPos(1,2)
   input = read()
   if input == ""o"" then
     entities = envd.scanEntities(5) or {} 
    for _,tab in pairs(entities) do
        for type,data in pairs(tab) do
            if type == ""name"" then
                if has(list,data) then
                  --  print(data)
                    integrator.setOutput(""bottom"",false)
                    open = true
                    term.clear()
                    term.setCursorPos(1,1)
                    term.write(""accès accordé"")
                    sleep(2)
                    integrator.setOutput(""bottom"",true)
                end
                end
            end
            end
            else
            if input == ""n"" then
            term.clear()
            term.setCursorPos(1,1)
            term.write(""ok"")
            sleep(2)
            end
            end
            end
    if not open then
        integrator.setOutput(""bottom"",true)
end"
1Wb69RLn,monitor.lua,ZathegamE,Lua,Sunday 16th of June 2024 09:36:07 PM CDT,"mon = peripheral.wrap(""top"")
mon.setTextScale(5)
mon.setBackgroundColour(colors.black)
mon.setTextColour(colors.white)
pos = 3
while true do
mon.clear()
mon.setCursorPos(pos,1)
mon.write(""+ Premiers Soins "")
pos = pos - 1
if pos == -16 then
pos = 3
end
sleep(0.5)
end"
x1sSp62g,CC:NumberWorks-Installer,super_koder,Lua,Sunday 16th of June 2024 09:27:37 PM CDT,"local prefix = ""https://raw.githubusercontent.com/bigsticc/CC-NumberWorks/main/""

local function install(name)
   	local conn = http.get(prefix .. name)
    local text = conn.readAll()
    local file = fs.open(name, ""w"")
    file.write(text)
    file.close()
end

install(""install.txt"")

local manifest = io.open(""install.txt"")
for line in manifest:lines() do
   install(line) 
end"
mY9yEkTy,Settings.xml,JWLLEWELYN,XML,Sunday 16th of June 2024 08:54:19 PM CDT,"<Configuration ID=""7e1887ba-50f3-4df7-91b9-d9df0a892574"">
  <Add OfficeClientEdition=""64"" Channel=""PerpetualVL2021"">
    <Product ID=""ProPlus2021Volume"" PIDKEY=""FXYTK-NJJ8C-GB6DW-3DYQT-6F7TH"">
      <Language ID=""es-es"" />
      <ExcludeApp ID=""Access"" />
      <ExcludeApp ID=""Lync"" />
      <ExcludeApp ID=""OneDrive"" />
      <ExcludeApp ID=""OneNote"" />
      <ExcludeApp ID=""Outlook"" />
    </Product>
    <Product ID=""VisioPro2021Volume"" PIDKEY=""KNH8D-FGHT4-T8RK3-CTDYJ-K2HT4"">
      <Language ID=""es-es"" />
      <ExcludeApp ID=""Access"" />
      <ExcludeApp ID=""Lync"" />
      <ExcludeApp ID=""OneDrive"" />
      <ExcludeApp ID=""OneNote"" />
      <ExcludeApp ID=""Outlook"" />
    </Product>
    <Product ID=""ProjectPro2019Volume"" PIDKEY=""B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B"">
      <Language ID=""es-es"" />
      <ExcludeApp ID=""Access"" />
      <ExcludeApp ID=""Lync"" />
      <ExcludeApp ID=""OneDrive"" />
      <ExcludeApp ID=""OneNote"" />
      <ExcludeApp ID=""Outlook"" />
    </Product>
    <Product ID=""LanguagePack"">
      <Language ID=""es-es"" />
    </Product>
    <Product ID=""ProofingTools"">
      <Language ID=""es-mx"" />
      <Language ID=""es-es"" />
    </Product>
  </Add>
  <Property Name=""SharedComputerLicensing"" Value=""0"" />
  <Property Name=""FORCEAPPSHUTDOWN"" Value=""TRUE"" />
  <Property Name=""DeviceBasedLicensing"" Value=""0"" />
  <Property Name=""SCLCacheOverride"" Value=""0"" />
  <Property Name=""AUTOACTIVATE"" Value=""1"" />
  <Updates Enabled=""TRUE"" />
  <RemoveMSI />
  <AppSettings>
    <User Key=""software\microsoft\office\16.0\common\general"" Name=""disablehyperlinkstowebtemplates"" Value=""1"" Type=""REG_DWORD"" App=""office16"" Id=""L_DisablehyperlinkstowebtemplatesinFileNewandtaskpanes"" />
    <User Key=""software\microsoft\office\16.0\common\general"" Name=""disableofficetemplates"" Value=""1"" Type=""REG_DWORD"" App=""office16"" Id=""L_DisableOfficeTemplates"" />
    <User Key=""software\microsoft\office\16.0\common"" Name=""default ui theme"" Value=""0"" Type=""REG_DWORD"" App=""office16"" Id=""L_DefaultUIThemeUser"" />
    <User Key=""software\microsoft\office\16.0\excel\options"" Name=""defaultformat"" Value=""51"" Type=""REG_DWORD"" App=""excel16"" Id=""L_SaveExcelfilesas"" />
    <User Key=""software\microsoft\office\16.0\powerpoint\options"" Name=""defaultformat"" Value=""27"" Type=""REG_DWORD"" App=""ppt16"" Id=""L_SavePowerPointfilesas"" />
    <User Key=""software\microsoft\office\16.0\word\options"" Name=""defaultformat"" Value="""" Type=""REG_SZ"" App=""word16"" Id=""L_SaveWordfilesas"" />
  </AppSettings>
  <Display Level=""None"" AcceptEULA=""TRUE"" />
</Configuration>"
UJhzeGb7,PlacablePreset-DevinsEvent 01:11:55 AM,1fruitydevin,Lua,Sunday 16th of June 2024 08:11:55 PM CDT,"1,8604,7356|{!  A P l a c a b l e s!# : [!# 1 | 1 0 3 7 . 9 6 8 , 1 2 3 . 3 9 5 , - 6 5 2 . 5 6!< , 0!M!O 1!O!N!N!2 -!T 5 7!M!3!# ,!# 2!3 0 5 9!< 3!?!G!C - 7 9 3!L!S!P!R!P |!V , 6!S!3 | [!0!!!$ o w e r! !| , 2!B ] ,!{!# R o t a t e Y#$!] 0#)#+ A#-#/#1 X#4 A , 4 5 ] ]!]!# 3!a 4 8!I!<!> . 4!b!D 6 7!7!C!Q!o!T!q!T |![#?#F!a!G . 2#U#M#O!K!E#S#K#V!q#k!o!2#]!^ A#G!4 4 4 . 7#d!?!A!m#h#T!n#l#Y!<#[ 1#E A 4#H 0#b#y!@#x#Q#i#U$##m!r#p#_!4 3#J!F!Q!=#z$/#h#v$9!Y$4#X#W$$!N 9!w$&#^#r#`#J 3#I#L!?#O 2$0#v 4$U$D$ #n!s!N - 9#V$6 A 5$*$,$R$.#g 6#R#j$3$3$^!< 8$J$' 6!a$k!@$Q 1$X .$r$j 5#v 2 4!K$+ 8#'!D$+!J%) . 0 0!Q!V%-%/%,%.#V!8 9!d%1%+%1 8#|$+%5$%$t!a 2 6!@%#!<#u#N 1%0!F 9$|$a!M!I!F%Q%' 4%Q%/#g%? 3#m%7!d%&%G%:$k%W#c%A$L$e!4!J#w$-#f$0#~$Z%p%f#q#s 0%I$/$=!@!l#Q$l$2$F%q!t 1$r!Z$K%s#H#J%l 0$j%|$[!p%~$p&#$s$L%t#a#c$h%m!E&-%p$o&!&$ 0$c 7#`#v 8!G&8&+#Q 5#J%D!K&<&0!t - 1 6$b&&$7!b$O 4$C#e&H#h$+ 6!A&.$E#l$p$`&T$'$)%i%E 7$X&G&,#T$<$n&O!T&?$c$u#t#J%/$< 4!? 6 2!Y!E#a&Y!Y$+%z$+ 3%S%?' %4%[!R%^%Q'*%V%1!l%6&z%r!1!a 7!H&Y!m%x#O!i!F&)&m&N&d&P 1&a&@&U A!2%i$A!B#L!H!l!;'#!H#S$Y&r'G$_&R'&$c 8#H 5#w 3$Y&[$~'W 3!C#n!p'H!R&e 1 5!m'K$''N&+!7#I'?'g&I'c!k&b( !U']&`&%'u&(!8 8!;%x 2!=&I 1 . 6'Q'F$]'H 7&g$L'v&|#b 8$<&[#|$;%y(!&=!T#S(&$L!`$8!H!J&Z#z 6'4!F$W&|(C&s!< 1%_!x!z#> P!~#!#>#@'j#7#>#:#0#2(`#6#*(d#.(f#=#% 5#6#D(9%C&)&S$h'j'U'C .&#!d(4!r&!#O(G#q'v%#%R'z!? 2$U&:'=(S(~#Z&!&7't(s!4)+#b 0(}#M 0(=%{!7'*&M'Z(5!T 0'_'L)&(0%[(+#M 2)9$0'W$z(T'[ ,%P)4)%%C(0 7$P$h%D%L 7(+)B) !N)`)$':)6!H(=%V(,&E#Q%=({%()0$$!t 7%%$c'v)u%-)+&n%{'W!5)R)C!D!=$U)V!# 9#`!7%u&M' $|%=&I#v$a&q%~(D)T(X)G'K&+%N% 'f$S#P'#$A#A*!)c%H)f'M*:%$%J(M!@*@(O%N#x'?)b)1!T$Q*'*H%C%E(W*>$g'#!7(**D#Z$_%+*W&w 0(-(1!c%H#z%(!E 8&k 8'&!I)Z%T(W%4%3%1%5'0%8%_$|*w%:&l!Z)w*:)7&7(,'*)n&k%}$!(U)m*W)x&K 9*]&9$k#T 8(}*S)s'])<*G%K#H%E+5))#N&]!F!? 9$/'l#X'n!w'H'r+@(I%u#J*p*L+7'r#N&Y+/!L+N!Z$_(%+2&5)?+?%x)<(y+Y)=+L+^']'o+a's)w'v$l 8%$)|*_({&R+]%0+n+O(E*G'a!4$w)Z)k'{'#'c*p*&&/+m*$'o&!)F'u)&!7)+$-%[%9$k(0(-%_,-+|,/+~#L'k)w+S*.(2*L!f,9!c#w,=&c,?&Q,0']%D+@)&+I#u(w'q)n!7&R$4#k,O#m |$_)u,!%C*2&a%x!f%L&E#w&#+{%),@+`!D,d*W%h*h#z&F(,&~$0$+ 2*0+l,`,Q$q&3#q&i,w!@%+(,%8$V'd%%,>,p,P,A&2*G*))h$|*k!=!7(2'B'<(1 9%V-!-2,a&P)U)w%t*i+J*]!>'!#R'=+$-C+_&@-F(8#q&B)6%E#I*-#z(P(7%-'s-1-S,b!D*&&A*Y#w%S,i$Q$@({*e-c+}!Z!t)v'L-(% $|-k#e*r'|%- 4,^'m-r&@$_+k)w-w*2(-)](O-}!5,,,N-D+o!D.''L,v,K)++6-m!F'}+b-q,q.%.4-V)g)E*P'j+w-O!8%3)r(#*$%u+@!a(=-*,'$S#Q-A(1++.L-e -- )w.Q(0&J+E#O,k%N)M)A*5(U$`-g)G.`$,+6+G)o)Z'Y.i)S$`,2&4!a$9(1(v,i$?#R%*+[.Z$H-&!1.7'x(>%E!G(@-?&`'&(C-E$_+5+@,v!6%k'z-Z. )O!@+:,-'l,a/&+@*g#M$z&Z!7)u->(K,n.Z'H*V)w-X!b/I-+*.!B(@-x.b*b$$)w,#!b+C---;!8+Q*A+Z)a.u$]$_)M+@/R)7 4 9)K/I%S#h)i% /[!2/k/''M/_/o*h#L/s/K-o*R/i*E&Q/P)G*g!X#b!>0!/d/X'c 1(F/%-f/{/R&J%-)e'@+G0:/?/N'],t._!4)`)8*-$W(.!j!b+Z-b.1-d+P!;+2.Q,}&H!=0I(P%8!8/p/x.[*u0S!4$r*j+W+G0F' +.+l*#$`0R0D&+!H'q.c0>$W+Q0A*$(2/6$v%N%[&*$~,5,d0v&Q 3/{'I';#J 7.O0=$j-`(3+<.M1$/{,v0F&+)K*?1-$A-|0v)e*W-(#i0W.H1*0;.h+]*#1=$c-7)E#J0b00$r),.I!5+;0'*T!<#R*G/R&l,L):18-.04.t1F0()61X';%!!91B,;-A0^-F,C)G'v0c'*0e(P(*#w1+10$p.l,3';*Z&Z%! 5%01*%E$r$C1x!t0*'u+S#x(1,'#v.<,s)<!I.G0v$z1n$'/_0c&l.p%L$I({0<2(*U28(91Y&)+$/c*r1P-?!X*41b1U27+@/_0g):*`'<$0(0(O0i/@*E'-+2*g#i%=(>2V2K!H!>/h2O+=#&.x)%*:%'!I*a'@)n#J+J2'1T2k!=*8'u,v&$0=1P2?#A2i0j*E2z+@1J0F(3#e(v!E+J#b1h26+?*W)M#`%E,I1N0 #}!I)k2B!<34$c(-**-@*-*`3;#R/I3>2x.M--35*I$+'</r#w2W&:,5,y3?.k*G3C$8%N$X#d/I3U+8#N'-1#1d+2&@/q%E/`3@'c1R-.%$3K2j.M&R1z(9!2/q/T$C0L(S#h030&3t'p&H+23y$P%-0x+5!I'-*o2%)E1l!W+q*9 |!l!H%.!K$a*t,9*p)81a3&1U&Q,S3i46$z#w$Q#i(7'B!A%J4@2]*c.B,T4F3o!X ,0F2!(y#O%J3s4A2k&Q044S*r*Z.O2-&`(y&R242N4_11&R-B+& |*r20%K4W3l/ &#-a4O&c*#.^1o4r,K!:!C0F)u#g!X',4#4m$p1*+@&@&E-<0/!k0;%9!J3_/q0^']2D2n461Z*h!;/8*@&J48)[262!!Z 21{+J'c% !Q'*({%P -.b/d4l4P$G-f5I5K.85%%-,9#'1D5:-f(X5J3x46%D'd$U+Y&~!i!c&}'/3g%.5Z(93j#M%=!d-x#S'!!c'S(%06 -,W&@5f5=!B%E!v!m&y++!E*.!X4^5W/y!D6$ |6&!13y*r)z(y,m%L+Y4942#&-g67*X/q,*-m&D)N'#%*2H3?-56%5K1C1%),#v&l0Y0{3X3L.['e5t6'-`!A!i,g'B!B$|.Y1x$_)#6P(H!`$I#v4b.].&4)!X2[4|3'/w&@ 3$')+4r/q-9#|&$.]#c2@6A6x |6z6l6}48,Y6q.B*+,{3g++6y6{!`(*!?&E'U7#(=,}'E3?)[757+4s1v'47<0L)93%62&1'I!Z7*#q6|*p6U&a7/6q2Y,S3g%c7B7P77-x#''!7#!k*P5H3g+K7)764r(;$k7F,c0Z)u616v2P-Q7h(H#G*r(0-;.4.&'I!@1E5,&!)Q7[!_7w!:!I5R7<4y!k7J7r4`'q,C7O8&4r$w!b!i7<)'!>8 7K+P826{8'!g+!89%N#R7q(!'p 58?7v85''+u7{.4'j+y4{8H8>7N6{$)+u&}.-!j#~!j7o.-1#'Q8% A%#5!#v% '!$1,s7o*u6!*p8W(H8Y!F0.),8l7V%k8<8/63!j8K7P8Y1Z1*'48x$r3o59268$7u9!4r)o7:,s8_7=#b7?6Z/O)v838f8Y4,*[92#K.]04#b,h3?659:8g+:2u1h8^9@%''c!68G& ,R998X46%u4*9&934)$P8.8U!N'+9-!_$e*p%N&E%99'4j.E5c&:8r7P9d(O%O#|9'5i3R9l7Z9b8f9d,K+58k9Z)?056h%{9n!_$u$I389s'x8Q)*/5$+$X.0.J-0#k'541!S3e!`9y%D6}+I*k9L7F'q#N(7%Q1*/13Q:7$ %11*0R:E)E#[9G$u*r.=9?.d7{)i6]%1$X-B%Q$I'k:J''4&%,:[&e-G:Q8h#w.+:@8m/I0R%--|&P''+J.#:^1h:8)<&B/C8e' 7)+Y1k -(-*Z3.#c)o#O%>%k%4,S%1$k;*%/'k'1*z.+&_,{*z+?:K$e!t.^ 47i$z4[#c'!/c!9!Q51!I4b0v(X 5;?. 8i414C!7;E ,2J;H2w4$!t'J |;L7+$z#e5H;Q!8(v*p'c#c.0$ -#!w*d-g;]7P,#;N!I;P!='c%$;F2L4b3Q(F:8&~,=:5&_0N3T:z)T!w;n!_;p;`%0;t#N;d8u;g:E;{%Q;},-;.<#5{-e$I!Z<(9;!3#u,}4V4C;u;d0-2!*s/q:]$+04-b< 2@<J()$):{;[;M2!(1.O;b;S&E5M;h,_.2,A3N<T8s<?<V8J!i<-;v;T8J;r0N;i<`-s$H;K6{-7%$'',n<Y</0p/?-R.$$p+1;[!y#8 S i g n T e x t(`#>=* a m   S a k u r a !#>#C2|<?8u)9%9;D<E'x;5.?-3<q<k<<==$z(2+ *$/V<E'S:w=F/3=I&@<='q=>5M#g=B;F6?8J,o0P!N=!=X%h;)<$=O;R;d2?/q.!+M<~;<,C=f<?*h<.=j;c;F,l6(=b=q=d=s=K#O;R4.=^;T4>.O<}.@= >!(H=g%K%J'U*%-y;F8(!c<J<o=c#L0m<=%e;_')(%4C)i</)I8q>+=G-T!T,~=J&4'K$X')*@<-'*>6)I%c<7'05{<6;z:M<7<:!w 6$'1%<?>16->S</$:'/>X:8>Z&c:K1=%,&`>`!Z>b>N<?4M$9=A7%>T<k(K%z%104<P<I>[():`?#&l>t&@>v%s>O(p(1:q>h=_6L%98N?)<K-Q$[2@-b'5&E&1&u?.)g:[.X;C)7)u=_>%!i>]!O>l?<<5$_>]:f$b<=%[>x0{/?>C>5>~8)'s<Q'0<L?'?$*|+u?A<'>c'N#A&_?3)7*p?54<%,6F?N?::]%]?c?R?(?h>M)W27,[*C<C7~=_5M!f?s+1%,?e4|?=?u?{<S=X<?,~5Q>3>|<z$.'4<!>Y<3<N#S>^<!?|=W('$z!4.|?G9O;d)y$a),@;>m@=@/@?@/>s<c?~#f0[>{'W@J2g7M>p@@.X/@(1%(?z@??T?}#F(I. (08q@$'*$U7D;1>r<8@P@e>q>_8#?i&4#s@k#N=a?[?I;T8(%#;*@R?z.>%]?Q%,@f@U#F@|(W@c),>4A#?p.|@:3T@`A*'0A,@_#[?V&i;q<,@7;w388O?O;z/1@>@w@AA/#rAB9B!c@H@%;T)Z!I/e@N<2AK@QAM.XA@>cAB)M.JAT>}*r%&?L@a@OA]@vA;#GAO$P@38i--@n</*`3.AZAJ?'A(@sAa&4Ac&y9K?4A$3o*nAz=i>o?MA)Ap=X@j7}#I>{@I;w48/wAIB+:aA:@S#G'H9x>><u:B(p?G=k=z3Q1W3g4D=#(Z!|=&=(=*=,=.!|=0=2 L#. u s=:!|=<)5&|+I3UA5<E!g+[???9<O@b?y@)$e@1@D&|3o)QAv=_3_%;?v?f?w@/?t?z?$@BAO?k%j.GA!;d/p2q:^8O:8Bk<N@,C)$)-U@h*X27$W/t>h@p5z6-?8@/C.?x0`Bl&15.?->c@|4[. ?G@Z=_!H$kAjB{@+?;C>?>?8B %s@|?1#I'4Bc?q*p:o?&C+C?C-?;8NC0&t@z#q;p%j)MCYAE<k'c/WBlC<CP?bC?BgB~AA>x*`B%Cm9g;cA9C.Cd?'CN?*Ce-%C2Ar27CK/<Bs<k)?&mBgCrByC`CR?{&>Cg#FAB. 2qB4AUC}%[;*D!?aB,?(D3CwAb<?#A(<A4C|0:$k@MBi:8C_B;D%?vDHB!DJ2u-mB&;G%8;*DVDR?<BkCvD8C2!>Cy$,?G+C;d,l)u;W8!*U>a;M*J#x=]5i;S6n#bBI7@4p?C8f@j(;;B=ODm!Q$I*PD}97(EDt;^#u2 Dl=y)T4jDp9w$bE!Di;_)Y<B!=E(;T4,E7266j |E:@|*i9P=OC5;F4,#uAjE7;|&mDE(OD6Dp&1EEEG@3(0Cp4CE]=l/v%6?c:rDF=pC/CtB>Ds>u8@As%kE3<Z2?%DDq8=EkCC8L;_.fE>DyDn.fE,;XEvEFEm;_3{E'E4(*@ZEt8|EXE/7P@|1%3=DMEL>(/IC$BH:G2.,,<NEU@Q#RF.ElExB`%J=O@]=z&k;5@.D#;8+|%2<_FLBw>J%HF/!_@j+Y#x<hE|E)=vEs6A?yAO6|27EzEp(v:_D|F,9_ ,7AF$<d0)2u&F -%[<.5n,K+:*&24'!?z+uBy!t%&(S:8'r&BFbC0'q+U*uFs(0%$Fv!g:D%*!6-2G!F~:88Z'0G%CT!#$u1$)*7T?o7.8J'S+$%<,W%:$9!qFM,@Fz%,F}=H6OAOG='q(K* ;#!?+!% Ai%T3~G2:M'lGH'UG5+%>>G(AW(W%0FtG.!D8J8i>LG2F{GN6$,.G!<#G:G'!s&R$:%aGk/t8j-**~G%G4$|Gt,?GvG9!6G;APGz2-+J#|Ft'*Fv'x59GqH&GOEgH*G$H,AqG(.R. %9H3H ,K16%QH%EeH:GuH'GwH>Cx&Q54'I#gHDFv;uC*GMHJH(,pH<HHHO>c;;$z79;aHUGm0:!AH$G3HZG6G]HNG&?VHbC'-AHC>VFv$:.-H8Hl:uH^GqH-'jGz#I4*'UHf5S<l(7FyHIF|H[G HMH+HpHaGz<l6n!DI'8J8E7MHzI-HmH}FzI HbFXA I8Cj'JHYI=H|I0H=I2&4IB@lGEIE)*-|I<GsI>IKH_IM%sIB8EAuIE,[8dIHIVIJG8ILIAI4#T!iIR$|FJI,IdH;IXH~AqIB'c$kHu7~Fv%&*sIoGFIWIfIYIh&Q8uB`I7HvHg&K+1IcI~IeG#J#ItGz&`(<H2J)I(*24uIUJ.IqJ!IsHqJ37y)[G,IyHg.aGIJ;GdJ=J0J?I3&Q5]'4I8I$&J%%J-JJHLJ>I@J2J%.f)=JDH4Hg,*7AJVH'J JLJZJ@J%,[>kIE'=JUI}JWH)IrJiJN4o()),JR%N:yIYH9I.G7JhGxJj&RGX3;JR*Z.GJIJfJ/HoJ$<L5bJ`HE$S+zK,HKJsJYK$Jv1C9}J(JEI(%?ESJeK8H]JtK;INJ31)(FK35n*JIwJ}H{JKK/J[&R2%:tKMGm(;(7I|HkIIKSI1K0)y#uIxJaI(,;1WK7K HnKbKU1ZJ6K@H!+:?`JqK-KaIgKo0pHeJ7% GoKQK`JXK#H`KIHQ,}'!JR.a!:L!IpL$KT?VGSAWBfG~5n/8+KKDKlI?KH%s&BHQ0IGjG-H 4M)+JpK_L/K9L%IZ#F'a&Q1u&7JD&|5|A2&`;2KvKEI/K:H,Dg@C&4LN(W8i>BGkHk!G*<*CKkJgK/L^AqLN)MI{HTG-Lf4M#A-BL:LkKbLm?VLo)E%-IDLs5|C'0qL.J<L0LzCfD)Lo7}!>JQM#J*-9I+LHM(LJLlM+L_#qG=!>;u@^)'(|644;60J}H}*x*4I0GbMGI *);#+:%-0J!f%O!i(7&)?!:s:23(DS3N@+D6%8!`C1&@ 7&h-T#'7yIDGD4=#v*h*s@^%?%3:s%]*}Bz:/%Q1'!t(p<<=$#>BO=)=+=-#%#> C O O K I N G   C R A Z EB[!#B^%s!U#'#J;NI779KX(22%J_MX?b@d:v,=?#M_+5?, |Md&4N730%KJQN<#g2$,L%Y%7MYNC:sNE<KNG!`<SNK&'G,IvJyN<8wL~!9DQM`NB,M'1B|N]EXC2. !s,~8BNPMS,sAd;_?sMv<KNXNmM^Mu::N`!#$XNs1u+uHC');!(79f:YN[,,'5/5GKNY*|)UM^N^<&!ZO%$(B>'e03/eMR(*9h9j+!NAC+N~MtNnO#$p65O=!A!s1%E]K(NeNx,}*0O3NWNlOKO!?zM`NIO=O'Fs%/1vHTO,9s*i#SEcOJO8O6GKOZNkOb>cORA2%$I&OV0K'x&JN{O[O7NZ({No)!NqC01%2u:qFt&~3!*+&]N[<NNjO5O MrC<?WMbC MaP)ImL*GD-NMO&~LwMoFO:vMsM]OrC+Ej*$MzM:O&;;#'039KFt#'OjG-:kOHMwOnP#I;O~#[O=+AOe-<;9'e!8,d3/,;@dP$MGPFP!O#?bPK;tNqG=DA!8MQN<0Y;R<XPYN}O]PHN[OMP9<=&YOR)96f),5a/p8k0L-A%6%8C-;0Mq;3MpOmQ #o=tMNCoK(7W$j.W!>FyP^P6M[?7PEPIMw#G6i!wOcM<1u'IH2N<,9.W!hO~NkPoOLO`NHBn$L#IQ(+C4uMN%k8w/oFrP})pQ P]NoNJ&hMM%[8iQcOC9h)7&#GcNVQXDEP^OZ1y,CO=(pO(!?A#;#+-NRNyG+QiMZNDP7OMQn%gNM7yMQ1j9&A2*rF{QyOIQkR/Q[Ma/4-gR!Ma,~$OI&7W6d8i4VQ#M[PGQG*{QIN[DX)%RD2?OYPf2v+,;rJUPD*{QER.R?Pq&1)3AqO(,;L*N<'UNSCXQWR<QYO_P_/k'_Q&C0Nt2@IkQ?.V79L9QD%7RNPmRQP$NI=XP(23)@-f1)Fr'<)i'QS$R-O6QZP_&!(XR!O?Pf(2Gj79?Z(7:0QhR;PZR=S4Q}QLO<&hL?,~*q5d;r2#=v$a*~Q2R/P4MtP4S2S H-Q`MN!?%/I&3Q%;'<%?PhR,P[R>Rr64QM$'% NsPSPy,s4GCc>:=~;T$bPaR3%RGjGD$j1u&S*~R^Q5SSQFPpPJ$pPMFbB>N8#NJmN<9sR8>LS1SgSEMXB~O=Di;#EN%'N;%OR7J{-mSfSDRqQ}LmOPMM#'3l%;QtR7%E;'=}>,-FS7&h!U1%,[4.Qt2#?H@(T4TDNFR0QNQ(FqIkN<6d3WCMN|QjRpTaR?@gPN#rTI4;OST>+:MT:B&S<n<_>;$`TT&4Qp%.#N;!QtNR4j$I:GStTR/4U N6Sn;uG})I?!O.?2JUT%O!SUAuQ7SCO73u&uOPQ(=kOyT?22&kP0SBP~TmRLP_RfOeMlOUNw0K*Z:qTCULPlToUO1%%ZHTTg22Iv1WT_UXQ|T7UOTJ0;Tv9K1*03BfUWT&T6NVH-=YG,LsKq&~2>#T'~NFP2O4U=S3PnNn8}EEUBT;0p<XQtQ.204.UpRaTEUg?VO(1LHkV,226o;PV0V#TnUN<=2!Sn+U6JPTU54y9eRnU>UqV2UsTGSlP;4G+zJDUy.V;RK_P$U~DQR_P5S P7Q:SlNM9OGIJD#'R7N9BrV<O V>TFM9R1#qVAT;LhK?#'Qf8NNiTkSXO^VlT7N_VaSn!H'3VtO-4y*hA9NjRoVKV|VMVnTcS]3eQR!8R{AeVIUKW,UMSFO;Tq6|0)MhJyLs'U5T&|M4GrM6KFL[L?Vn>>Ma'I&D@#LeWCL4L->H=U!=?U9UW?)pQ+2uVd5T'*,MU,>IRdWYFoWO@XS+!8W`AW(xTQWe)2Wg?/Gz5PO@Wk%=WC>):DGFP#+Q@-Lg@/O*TpAq-T'IN}!i@4WyGm)yWXWp=U'/TqP8HS$,'U5i!fWz3l'(=T-$X3Aq!UX)-a-f:*WS*Z(.WVX?Ws!#8JWu48W|5i2hGm2p)+;*X G]:M<NO*@/'rA@M|BN='N BRN$BT R I V I A=;(r5=1$(KG+WRGm8u>nLxK.KbQ^%sWN*JV7WBXT.f:tLjXxIgXz#FMMHc3eX8+UW`2p(=;*X]?zXX%]X#I-MM/4XL$dGS%I#IX8*+*a5S2p7.G2GsROMqPmFNY34-(X@1Xa!#M~BQN##EBT e=1  BW tBYXm>cY*WvY-6fWSIPA9Y3%,Y5G9NCW}X&V@GS/8GG*.+hX.,;0JYFW}Pm?z*{YK0]%*@dS&YP AYRN!BS!#BU=3=5=7 aY^%gL?@E5_#gX,Y/%!R:YgGH@bY7YGYmSlZ04)+TWxWm#z>kG!W~<MYjP#X%-F;mWZ'qO/KqGl5S@KK^WGJrWILKH-8gJO8BIxZR(L4*M'ZWLZZYGyJ]/9K?Z`1C'+XwKxJ1GfJ3$SM0FuXt3QLwLXL;KGL&%sG(HFKqKg5D0.ZxM5ZdK!L1DIJON?LBKr0F&E%6ZyLyKyHP'q7SWA[/;u;{ZnM)[5SlLaAW#RX+)i+vYCBqZ76$GMYz*yU=[2G3H<I GgLcL*K}//0/Y%ZoJM%gLa+YS*;#[E5(302&Ip[KS#[NMEIKH-&JZrAX'4?o[F!cLCAjH:[gOq[iH8[QH?JA5_RG[/;%[&ZVKw[>Zp[+K&/>[.[#54&lHj]%LY[)Kn[6HFRW[VS^Q5[3Y&](Wh54(pRyZu5S9q&|:o];[ZJuDYHQ'=<xI8=M%#]0J~[4]=Z}Gz,l&JZt[#8u!v]$]R]<[[]UJk2@[U[/)?X3[=M7]4])9qKtK?]-R%+v[Y]']aD:J3)i?ZI81C!XZU]_]HL=]vHQVh]A]-?:[O]1ZzWJ[RH/:0GV]N3l>G]iZX[*]J&#$SJC]N2g]h]G]t]I]b04Vw]oH 1Z:)Zc]&]j[?^78(%=[!^EJGKu['^I^5]k^L2%]MK}8([P^4Ze^6^A)y&L^D5n,%H7^^]3^K^a2 ],H J4LV^H]2Km^jG<Gz4j-M-fGX)e]C79^]G8MJ[xQHV!Q624QxGOFM^-JOEb^dX.(K)3^h^s]T^#'q71] ]ZO/]QKR^?^!H.J%I{]Y^n/*]^_<^J_4_?JwKPKY]C*2:w_2L<Z|_5A%OB^Z)P^R^*]S]u_I-?!4^m^e,}(v]s_G_[ArLO'=:k]N-<*w_d^U^t_I0c' [9]Z%!]r_PZ{LL_]&K<B]N(0)<_X]~_=_R#rIB%Z_.]CB$]}_F_o_HI!0)*`J_]N6U%G_n^_^VI[I#,*>W_~Sz^q^+ZfK%7_L5^ZM>^)`$_e^@#FIB4859_L!J5E`-L#`K_>`1G)M ^O^e'S^3^>`V`&`X&SH'_8^n%*WU_x^,AqGSEr3.L6XtV:LG_Y]``L#rZ0MO'e[.Z`&~Ak`j`C1{1$*2L-LRW`J4!B_E`U`/H~&!7(<=La8R$X]eLSXt@l- a M8!<a0a#'q%?]yY YC,5`7a:M*PLD9 A[^)YVdLe5|6:!B`I`.`9Ig+PaIOdLF({&]4)&|566`,taFaU!T<s@{Ns^MUca]7T!X*Z*Vab_HX_R'.aRi.JNfS/DaVyT5VLOaSGMcSlY*7kG@VcWz3oIGX#HZ;~ZXG`YMRS!1a2RJ%0>|Wm>AKuB)YGJ/b-Lg7LaeNa' ;RHCQSV9D|:`0OSua=Q_TI)y$rS<%O8k9BQ-W7TlW9UYS5!W4pOcT,$l)ZbN9hQ)#xVxP bUUfUsa}VoG<Mf0:ID$W7T&S487Zaoa.!N1%C2(WNs+Y-[I7bn,923Ol`A_ZI@B?Y;$zNs)y!XO+24U(_l<,'0%uZHYzGt&Q8ISk(9TIFt2!Gjb}Xt&KGpbsc%$H4p<=&SNs8R!:HCc>_M:pLW^S^r_QWK%H>.)%Rvc*]ySaRk9B@o_3GHR:V[SV_%'r-0Gvc7SHafR'B7IkcL!J2%&F`8^iJ#MyC2[m&Y%OWC*POY[s<.?`*pNUbF.#9@%&Kj#[ 8%B0:;!,K)`#|ASYc%T>W%*$n%:GNd(4r$t(I9BJ|'#NT#QOkIT-9d#K6YyR.%:VRAi'_46d;46J{W|Xu)m!E@F!9:o&EdE-0O5dH%*dJ-9dL 9$t#s!=$|4x,L'B23#OLwdXYhdFd[Opd^NU51,r<;3jdc.Q)8-N-ZVR!vIv0 AidY@/R_d];HdsRKB~db$L>s%K/I3H-Z%a&S)IQ5dmdIdZV!e'2!e)'_Lme,?~U$K],sS^U|!v&y_m;HBhdtU;NldmG$=YdM)57H*yAW;9d~8)d$T|Su&f!Ze@G<-('i2#eEb~*<){d^eK<B_%O^e#G9Uubu!we` A!F!3d=dS1CTJdA)Y<|dDdne9PET&e8GNe*!t<b*)BMYQXcYSZ' A ~ < = > ~#4 { n Z A M A   E S T A T Ef6 nf1f3f5B]XnG<*g!g@meV^{e4U%LW,YF|ekf#V]eOHH=Y+a$bes/R8iKLeV(yL~$XKufTf&caT$M]enePBm07e_$tf`*tQ.0.-Nfeeh5QP2T=eM?f?x$a.[/ldwe-,#7%&l8k8i6-TzPgf '0dtDE91Y4&R'pbvg%?~Ad*,eD:p%L4jNzeiX$fVcbfle~fn#[es(2evJ{3.fc1P4G$9fgejfjQ1gEfYeie+$'1*ev,5Aufcg>J+Zxfh%<gCfkeN-pgX&!WUeR-W'NA2!X(y$:f|g-QVgAfUgTV1fmfZ;;)D,Cf_d<.fT^8(!:gO3o`i2!gSYyfXgieJ&1#Pg8G<)x-99hS^fd^X?`RmG7Cs_#:S'0CXh1h $t%h5P#x-NIvdS&SAGdlBve(e%YIdqhPgee>g~e_Z#Z%XeYU!# P L EZ$ E   N OYY O IfBXhN+   O N   T Hhc S Ah` S   F LN' RN3 AN5!#)Zg];cRk9)'B)'>$%TRKg|?'e<g0!XgY$Li#!9)zMTi'#QdUd i,gwB;i/G7i1e?gZ&iF2/S,s9)$j)'-Oi+cfeJi.dFe#gHgZ2}eYg<,wGm0Z%8fSh,f}i@iMh+iRi3&w@FOxiV>k!cd|JpgddKh-emgFg|FAh3Trev_vRkS^JC&J8E_wh+gBgyV#g{gXgmi!-X4j/teVC$iz-~]Fild`ingVh/iaj% A#Sev03GVj*'4c}T i-gxj1ghi`eQf_,#A2E?ig),!c9JI|j/eLelj2jC$ej5!kj8+FQT245n6:(7e$i_Poh?i,e8ibCh'K4G!l-N*<j+1u%Xg/j_f$U=hUX^g5j5(=ev<K?Z`diW5S6~`zjniLj`jqimg4$ujud<0U,9TOG+d1%[e=j?hQgUH$fTgFjd!#%=!3*iMA!jS^0/dT` 0xi=jri^k!gGju&i#M/qiw-a562p+8k1kDjPjBeog}D(isD**i&~8kixb&@cgRi~jAi0jRi2]U<-$?eVD-gq-jjMi]kSkdkUkf]v%K9fGEj*kN;zikkofWiogWh0iB%gdd*qed-a5(={,nkCimkEj#h0ju%h#M#S9&BHl)(KVWi?k!f}jagyjcju&wk;+i?2%06t.|Fye7drk2k#hTk%X&es*pk:7yeFW_lE4g+be~f%[LS!f%jrFSe^is04ev)*<x=M'rd0TtO}lZkFe'RPk%f lO29-X#MiKdT4*lERVN@j0i=l[RaiNfmksetjf%N-Ak])z1Pbab(jNgfk3kqgG-ter29,#4M!99sk^iX.faai}j@l.ipgjRAfq$L+:!3Pf3rig56.W5'kQl-kpjoiqP9es$ImG/,C$j*cz,58$m!fikcmQgX<SlP&wD<;-ey5Rj,_)k%m^l~S3m!k6mc$tCi*/8wS^kki51*k4k|gDkTm22CmD#qg!Wi'emv-~d0.R6@l,j0m@l iamrQ_m6+91P$:D1jKWlJU4shAdSkp_#b{h=<RW<j5NH'I.aGVh&mx%!]hn<:8#IAjm}[h#N>G%T?+a/4pmT#sS:0x*o2.ly'}74df<PnPkcn@nU_A&17(esVA;_/dgrF;#QOf)<n;'+HHngk$SNg0eu,1m4e-=gTO3.]mKL!vUKl^lp#W_&g1m!$p1kis-A>xH#iVn8Er@(n-jOk}jQkr!tRemT=gB(n(<X!c%NJ:m^kRo<m~iqn2M;j'&yUcj*l)6))UoImOoKm1oMnDes=YY+7l%{2.(@Of$PFy!lNlofny_$$x<#ohNIf_oBF3o6jJ!ldfm{kbn/j3f[o]iS@33=m9-~lyXPk{oymPlmmbo}mEme` Bf$wMgY!,mYfRKmmm`mpeOo0nY$'!9<e95m)c2p3!5gcm|ggoZmB#&hDmE;pIS9&m:!EOf'q=o,.Wq!T_mj5?W'I&)MTixmKNcpT;jGPpXmdmG&yAHeVAu&JG-X=bGU-(V(XpfnGPwiVpk4JN|WdWWpe29lA;RexS^pw9OehX>-4p|p-p /qh7({XT;Opb<pFSkun#i!l2m'W|oSiX+-X1.3dTq5j6=g&}^{j*fwAtG`pzq>_cj5euY+!b(@5E$j0L`id!Yhd6d5%<d(mchYf-Z&XfZ( o r i u=2 F i!+!-fIhEk:0{p05E5n[d6]d'd#qWd&-y'_q[f+Z$q^h[#^!| L u n a rhxqh!,Z.%s-74MQwigfw7-oxm?p)l/n1p,r,mGVcoDLf7omNn.r5mAh0oN*(-XMR'A.Vc-iX&)7Tlpllj!oWd`opp=-X;Ao%jjr1lGm_k&Rpo:i1rD A/qmVnTpAg,=v2Qr_j h.kenEBB%k(P*qqR,gd3qu*5d7qYdap=r-:0*n,%dSn9#A*sqUd7rwqXd'rz5u'K5B[FlgVdo('dr[k Y6m.G&o^%/=u*^nJm+8|*63Zlb*hk:,50]k=-a%LL~%w3Y:/j5$8k:<DrfsI/,-+3Y81q@#tk:+UD1j*sI_:6AJOpKr9a?4-NRix(P9B)`5VF-8#prY_!3&6Phq:dT6U6uFkq4o2AB*+Qcj*qP')Fj9Rpqq@nF<V:V3/24sio$swt$sysN&i6?AHs0$jgPt.$o/zsXt2#zjyjjt6)** 6!EEo^t<%F0Y(<-N7}1/E-*$7gf_<?2uVRj*'BBC2W8cf^b sq+ajjsi1SF!!D-Gs9=g/To6ns%*0@:$q?is;p+C<BmYnsC58T%qf]q@,#CWtpmwlyN9E8q@O'3v$xpO-~qqN9/<rjm`p*l0esu!I53;kxnsoGX rQo;nRmau-'u&+sq9h6U@^fQt8&0tvsB&wtp20@m&S2 9lg$sNu<_68)8kCKuIde!9SRrM%,ojIq$PMsOQt:is(OsqtfsG!ksit#s@8dqL'Kd,D--?(7(@@F!v%6/p?7d8A]LZ7Z%Quu'p9xf_'N%j8]ZluTR%2Wl6H&F>Iq(O:25'u})vespZ0-[`kjm+*mpEp(oYu9ial#2nrFE]f|0?GE]X4-r?u7pGv<epkWuNltW#%avCth?_vGm/gzrBv=Vns9g'J^jJG*l)J{aEm>m_ozkev>!1)<sPXDYCdfouX<v9r4v;u,vXvLo^$u!J?m)k/TA40o)89^t$$`5<!1vw^o5qc@<h*;(14u8cw$et;[`}&|!KkZ/e,$Com]EJ'5T3nzloPEFN+5Qx!6nQs:&vw1E]!Yw5#|,$4eDQwC:^V/f#&/!82_@9MK+&'a!JBe!u%J#g!938k?''Gp'2Cs?zwOO`,~k7'M*)wZ*j!Q*`GG0E1)Yv%ODQLvGJ[i:Z6x%O$b/O.C*Hwm!v8va<%y=]%unbNUwAuY+KdGFNwhwTgTo0*GOQlFD`w]HB.NQ)9N?swdt!D4x.BhwA4%o 2nwYRV4bd|=A%/79PDx-:8EJDEwhx?LN>Kw/bx!veg&M5_<,1K?2Fyw:wcQxw>xg.KxVxCMK5;1X!2]|({/$G2x)ieKXZFYh<nGKFNu5+u0m'H5slb*)x[!@&a&Xx`0gl+wVw;xf[MolY{xj%1wO_*6ixY:Ovx31!Cijtb$l&`W)x@wVxTx/y-'9'M!4;[-?!B#dbE.N7}?py2t!d$xzxkwchVFlxG!1y$Q)399OD-ws#by+xdwTy.FNxh&qy-xk_*8V+2y[VV)kx_.N9$u)y,xenSyh+myeykQ7.[.5'uyo$.$Uwqy),x%6ydx-_#yyw@w<$.wD4n=a*fxo90:DTO:Y#tL,;2ydcbwQy1wiyfwenC5StY5u&Bco$.x:VR!9CoYBywxRwfyUxV'pu)&v$e!vk,!YTOy`)EcpR]lkywy3Lw^GnO){y3V z0G]EX1nq]BPq_h] A Dhfhe Tf= Nhjr+yZw1l8JU$Pw*54,~YKzjwx!oyTw{dl-G+a3)w1Say;H'w*0cr/%<{'6xlKFN{(w}pd2{5uwY8uU*Flg^w_15R+Im`sCOOmLw%$*~*rKuY}#w:d!JB~*9{AQ=!Y/8ez.w&y0`ImAj'rQx04FNPs:Zs%{HA :H{;{ULm{WyI;u--5iFxx<7yHXgv{a%Q)MAj&#{}_1+JdlXW;2:y{Vu;wY2-uu#&KWv|pRAHY~ds4D)8;2&#PCaE|#GN^={R|'{o|){q@~!mxL{vxqx,yAxSB;xUyEa/{?)%wm4,%M4W(1;C%/_l:oz*z/yy{*zcyRMKaV{/5og.4y6p)6d'Lw|YzBz,xiyjy3$?y}a/2mz|5}Zi:BO4__*`z<GE|^y0y/y1|n|_yl($x!bx>8$,&{3e.N*iI9zCyQ|~yg|m|}y4|q}&|b4,!JyLUc|y/>*s|jyx} }4y{|oz1X&'Leu!cSa(}9)yND[*~'jNicA!=wBG^k}rMvmy|!@&#$pg7(Y=%q}YTr !# C A U T Ihnz{yGxo.W&S5^<1&Q%/0tDQ(2QG#c;2_K')KCoh@SB)0.QG6Vo0|NY);[QU+$|D}t7}$8xjzQxB}FBzwj'HBK'Lx7i5KVzKxMd=GGzP}0yCxDwj+a-u'uvwi5ZAm'+!__g+Lw!bO2hSz@:vb-~Q.[9x1o!`d1E&,[x`AdJT<2FN)MR:!vFyTP''nwti{f*e,L'auD+&zXeB7Me2}-PWNU7c>re!{:~{Fy8-GP4p1o}o/I>L~v}t7%zby{~2?'|KxeRdy7$evE(F$:|UtK9Kmo!b<Nxhog3NM gU:o%@~7~Gi3=WLP*ad|>3%.Ijy@b-|I<N! 0 ye $p gl }I |P :0 T= ~- __ ^C yj! . ~C ~5 xW )T! $ z! EF sJ '/ c; VR 0E uH |i || }E w= }C yi }5 |p FO .[ !4 {/ y% CG pJ D| x) [0 p6 }A |l }3! s! p zk }% a< |s wl! g )? %+ #M i/ }t AW hH }0 }# }2 YJ }1 }6! v gk xY y[ D[ !; *i jm!!2 -< ^g!!#! q!!% yz z+ }$ }7 *$ }` )G z# b^ 2l -j! ~! m!!5 |} |[ wz! t }G y ! F |O! g *< 5O Ki! ~ J{ *a xA }1!!X w?!!9! u! D $H *G eu zY xq !m i) zh 0E *q }@ Uo!!' @E!!V k} wQ @m |_ }} cS Ps 'K zo Xd }d !^ !|  W #9  N N*  G }m !f ;[ 6: $k w4 79 T3 ,$ &K K6 x3 ~B ~}!!g!!6!!m .N!!^ 68 z5 `r !<!!a |U -`! ! ~4 zA!!8 DS 2_ xC 0_ xY 1' lF Tz!!R 'e! L fc U8 wU |I l~ z)! o!!J! v u` $c >d Za ?t dU KL dV H' [2 Qc 3Q ;* #A ;2 (= H$ {H V[ ;- t! lH g! n~ ,T $) 57 4k |S (- '4 H1 |F uY n^ %? /t |} @, DD :^ I; ({ Ay z0 y~ }' =Y zI 3v zK {F )i xP |H zR!#L zT <S 0+ ;[ 0- VT 4y !> xM C9 w  ui w/ [m 8J G* !d wJ .N 0: #A ;* x2 K> dp !n!#<!#? y} $c!$L ,K $P w4 2Y w6 &W yM!$Z!!'!!i }!!!Z wW .6 wY %I *a!$P!!2 ]9 R:!$U z? hR!$X K>!$f %@!$]!$m y_!$a *j wK )E!$: |X!#a |Z! r!!8!!6!!:!$z }I ;[ D< )`!$O!$b!%! 8u Wo!#L!#<!$W Q1!#]! o!%, d+ ${ #c!$~ +H!#B 03 kB yv!$g!%( |]!!'!%+ wE!$A GZ os!$E *n ,$ 2Y -k 1x )w vw 7k tB /T x` =M!%# 0^!%U!%. /, *C!%O! ~ /, 0/ .Z!%_ 'r S@ #U _| CY `! )z 5+ 7K wF Lg!$0 %V!$p 0E!!e }@!%& |k!!G!!I z/!%J #o!%- !G $: 59!%v .E #b! u!$t j  wS!$x!%E!%< [] ;[ g( 1k!&' -? 6J!#!!%7 e: $E!$Y!&/!%K [@!&2 o$ !Q!&5 OT!#`! O }B!!H z. wB!!l!&> (9 vw *. %$ '? F'!!2 5M )=!%g!%L i) BI c@!%m A%!%^!%L 9W {C!%O w* 4; (- uB &d .& 3w )% vw >1 &# $Y &K z^ Kd 6Y 4$!&h *G!$L &+ Og #& G- GV 0b Ij wB 5R wc! = YI z. z) YH!&! d+ y] )Q *i Y? .N 0c !5 z< SR ;h yT wc uY!' ! v!${ ;[!&w (W!!s G- YB!&| +F!'& wP wy!!j!'5 zi!!% yF vw x= (.!',!'? )< 7> NU !A!'% lK =p wT!'B _*!%h 23 %. (+!%Y!'. R% %P 8p!&i w%!': ') O} sj >B ,$ &D 2r!%T!$A /p 'S .+!$E Qc ,$ wq 8{ 8H!'Y /I 32!#: v| `d tj 6Z wF /p UH $U!&' 86 -Q!&<!#^!#N!%E!#b!&0 M;  |!(# {=!(&!%a!!k z1 ~}!%6!$x yF!&v &}!!/!%2!#B )* Zm!&.!(*!'4!(,!%'!'(!&1 (p 79 *C!(& R% ZE!%I!&K!'#!!&!&+ +%!'n ov 2! vz -j!%m cx Nj!&V ~H!(0 W{ (+!&o!%m ?1 a*!&^!(_ (p '' 0]!$E Bf #t *2 7e!'m %B Q- $,!'=!%  .N Dv sF!$j d[!%H!(S &@!'9 B3 wT!(u )Z! L C'!%z }[ e&!(| L9!(9!(! 30 &+ !C!&' *J Nt wP!%y >9!(D!!F!'8!$l!(` *P 0  Ok Vd #t oG o1!() Ss!)8!)(!'X {p!%i +  $U! ) /q a@ CM!$< ~3!#! zT sN wm ${ }U %W KX!'@ GC GN OY :0 U+!%H +[ %& T= .A !j {/ /p S@ w] 2$!'. ;f wb @~!#r O8!!$!$X +: ut 7( bh 'L rc {c @c &M 0I 'U !B (K yu!#^!$Y DU!)Q m$ }( D< $I ;F 5_ |U!#4 zO /d R: PU!'D!$i 31 ?` =| q3 7t!!O ;[ /8 >z ;T Im!%! :B j] yU!*&!)s!%9!)6 =H }` o^ wm .{ x* !e %F!*B ]g!&J ;2!$x!&G!$w!%: 4p c& sX!*M ,5 0  4j 'e!*B ;f ;a!&8!*V!*G!)5 ~B ir uN!*M 6U 72 @! ),!*! nT!*U!*Y!*5 e! Nm!(E y. O: }t!*]!(0 EN %z &K &] 0b h$!#p z3 {= l~!(D!)u u{ 7( ;Y ~( *H!$m $S /5 9B bp x< )?!$( `~ I, %R wN Pk {N *v *~ 1* ?` R: != 6[ x!!#2 (p 2Y SR Fr %K Of h@!%* yD e: x1!),!$u 3M!+0 %e!){!$F $q 9r tb <V 34!)D!)7 [y!*y |` mC ua wY !5 *j JQ :j! L 0Z !b QG! S!(- xi!#O /1 }F 'p J: +& zH @4 #S {2 D1 =n ,m R: xQ!#=! R!+Q! T!)x! f!'o 6f '? @~ x) MO!*, {T!)q!(Q!(+!+, S@!*Z >K!+0 0b!$B %? !d s| w*!&w >Z %< 3; `h %6 ~e Yh!((!#s Cr {f Ni jU $_ K+ ._ !G `  w| c! }t 4, fy W* @+ zh!!Y fW X0 M[ R@ *F 3i wY 4M $r !; ~- +J /a ~1!,% @/!+q ~6 Y: .P !h AU 20 S0 !4 4; &Y QG f| ,} DQ u5 TP '5 d4 ol 2! DQ p[ XY &1 9a!*< 'y yb !m m' A  wL *j!+p oV Mv!*h!'5 O, GP 0` 1I! 4 4M )9 )k Qr!*  FX!#= yV D$!*( gk !w 6D!+M!$B ]g!&Q -@!%! Ad %a!$j {)!,]!(} wk bx!-+ (- 5k /d w* $w |R!'G!'C!+*!+c :/ (B l` 04!#C 'M!%` 3=!&B W# %; 0b @l B8 0U |& K+ Pg {d!#a n> k} >B ?: {{ :O )!!,: wm Ok 7M TX!%m 6e 3U!)d!#p!&, l<!)` %T!)e EX!-~!%.!(j !C &X!*/ q  ?s fV!*4!-R!!j %1!.9 /d )v!!]!)h )o ~g #& 1v!%3 +9!'6!%9 hQ VZ vI wT '2 *~ %@!,) c9!*= Vh !d *< G+ __ &K!$* zk!-C!-a!'E!+a! # yY!!,!+Y @( 4y !X!*R $| y/!(}!*W!*H!*j f(!*} 5N .J !Q *B!.5 ?2 Qx !B!*3 pn!%) ,} '(!.> =H y7!,d .f +v!,h 2- oF!,k!!g! a zA }H p= xo %I )9 #U!)~!+^!$)!&E *|!#P P2!*( ,c!.b xo!-< /< Ok!%m +u ,m fg Ec C: H' *~!,~ ~j!+u %` %,!,[ b. S6!!o!-; 0{ :t de ^c ~. 20 SA ,~ <H wU aE v- h- mM 3Q!/6 %: p>!-F hX q{ hZ!#) ([ h` hb     K  E  E  P N- hz  S  E  D }m!,v!%.!'>!-> oc tb!)'!%D!(B!)E!+c!)9!#A so!.R!%M %$ x^ )9!*/ 1L wQ!.x!/M!.z!%H!.=!*9!$3 /D!*~ 1L )Q OT v| 30!0+ :d [F <K 6p!)d xf dC P3 a@ dW oV !5 Qx!$S :f y7 zH 4) *Q ~= tb 0F /p Da!)Q! /!,' xE wX!$B ,* %3 d| '! +J Y~!.w!0X!/+ zT P9!)I <l =L zK!0b 8( :_!/) yB |J!0Z!,o tb!$4 xo `d %  {2 <G!0T GX xP!.8!03!,]!05 *e &1!,:! 4 DO ,d +C k? -K 3e %6 9I uY wQ!.= u] :^ }Y!#v! o Q1 {n ad x6 vw 0? GI ,[ U|!0c!-j %T `P ')!13!.}!15 ''!17 Q5 '  D  :^!1; !e!#S!%V #T (S e2 v| de M&! _!,l wg!0t ~p nD ~9 wm ?1 $9!.3 wT!1X %*!'7 ~z ;. ~|!#_ ~~ :E H7 7L /{ &|!*= @Z !d +C ;s ;1 7& :0 yu d_ 78 uY G# Wl!'' %T Pk 6S u{ gJ ~q! %!.S *j!,g!1/ }- d'!)P! P!$=!)S |L bu! e (s!){ &R!.U %J %9!)N 8)!.w U< `Z!'T yz qO ~U!+e *$ fT 4q!+Y *0!/& .f!-P! -!1] zS!27 1V /{ !` #R %9 ); $? )6!$I .j != $J Z# (] #  ## #% %[ (i #8 (e #1 #3!2g #A (c !|!2k  e (n !] 8J i  E# NJ `} )Z Q.!2J 4y n' F` !v :&!2x #x >j 9s '] 0E -~!'v t/!3# :| !` )u m' 6J 5. 4a SP /< 26!3. :;!30 5? @^!34 %K 4G (-!2_ )S &R !w 9G!30 .R {~ 22 .N 6~ %= uh (U!3D!3$ 6| )` ;f b`!2}!0B!%p sm !T!39!3F NJ EN ;7!3>!-= 'd!3X sx!3[ 7i !k /, >W!3> ,$ %2 t` Dr!2V!3Q 77 U$ oR!3) 9B ,~!&f *#!3P!3/ NJ cx 'j Q@ Pg =]!3? -o uL!3E!3g E% Fr =M!,i!3K kv 9Q *6!3z 9y e/!3| (K a& $l &Y x) 30 %8!4/ uC fp!3{ /J!.i MT +> 4; CL!3!!4' 7+ 5{ g=!3J }t 6: !J sl!3e!4G 7] NJ 1u 'j!2|!4L $S 4V!38!4Q |t `d 2Z >r!-/!&( )Z [u {8!+b!.;!,7!1E w~ )d!29 ;o!3| _l /. :C!4# >1 <[!4&!3Q 'a &l 9O <X!47 Ph!+M 5M (. 6! uM!3] #x Go (y m' AH!,v .=!3n Eu!3p :|!4w 7_ ;!!47!5)!/1 -9!3x 3'!3f (H!50 $O 0J &-!35 KW!3,!40!59!4m )u W# >k!5>!3? VV!3B!3y!5C <)!2y 03 $0 9@!,v E] ){!4Z!4v!2y J{ h% 8_!+M 'W >L!5V!5/ NJ eV!4*!5[ %K R% 0x!5` :;!4w 4g 3c!5[ +h 0;!4<!3C!5M 8f!5k I^!5Q!&c oG ,Y!5i 9G!4w .r 6J!5H!+M -o!3N!5r!4[!5t!4S!(< ,9!5n ,l '^!4F!5W )` -< fP!5n i5 )M!5K!58!6' wj !k 2Y Qc!6! L~ }u!6/!5a !k ;u :?!6! AR 8q!5{ ,3 &B 1O .X ->!5R %K 2% G3 0v kB!42 lc 8- w, 1-!6O 0L!6C 6A!6T 9:!43 uf ?2!4p!&c *2!'~ ta!6_!6J!3^ ,} Hk!5H )< 'W 8o 3?!6i 3x &B !k Jo!5w!'. +U!&U!6r (X!5$ .{ i} 7U!3? 20 5F tk!5#!3g a] Qc 7#!+M ,x!67 4Q ;#!69!30 F2!48 7{ -~!0= (K!&r!3o!41!5$!%/ B8 54 SS!4L u(!6%!5L!6' xZ L~ hO #O xM AW )j!!|!+r!!H!%H!#b!& ! w w/!3R 6? 9s q8 xM!/B $P!3d!3-!72!2y $A &]!7@ >W 0b!6l!5,!3Y!5.!3:!5b!&T 8w m'!%d P$!5q!7E!3q!4S 6) %a!7d ys 0p!5z 6N!5s 8g )`!7v 9Y =w!!2!7z!57 2P!7} $)!+| +  9~!8$!!v -~!7h!4P!3Q!8* <0 [F #i!0?!!2 9f 32!7|!69!8* 7_ <X!87 U| 0b +I!7{ tM!7< 9U &l 5p :+ U% x` j[ 6 !8<!83 NJ!74 fb!1U!78 AX!4O!7_!8Q!2{ M  MT H6 x` 2? _6!6A :;!8*!7* 9? <h $8 -*!7/ 2y!8)!8R N9 *n 8x!7$ %y!81!8Y!3{ $r gL 7!!3u!*n!7^!5B!7` $r!(o %9!7,!8i #I!7D!68!7t $r Ai MT m' xM!,W!8X!8}!7t!3h %k 2# q8!/A!1K!7r!9( :| 8Y Q) M/!8g!2} ;f!.e!8P!9; 4r 0L ;$!9?!35 6o!'a!9C!8d!9E 7y KX!87!9. GX!8'!8l!8=!3^ 2u kw H6!'. *+ 96 ta!8G <d!93 #x 2# 'x GE!7f Wl!99!8(!9V !k 6L!8- 88 %I (O!8k 3u h2!6U EF!3H <B )'!6o .N Pf c+ 6A zV!-H ?- 2p 1r ^y!/C }- 8E 6] 0v 7( 6D!3R 6~ BD 8P .] 6e J' BJ 9T 7C 0L 2M!:1 $I 79!5A (U 9F 7i Y1 $|!:: @F!!Q 3g ]r!7k %' 'S T^ 7# $a *Z tt t9 :%!8v Pf eL!:L LU +v ED!92 2?!-$!:1 F} */!8t!40!9t!5$ 1u (7 %0 7< <l %#!:= )S o1!7k )` wt!:f .& 8u!9  6A =!!5$ 3# U| 7< ^b F !3o 7t!:v xO!:] 4> <j!5!!69 7w E|!8y tb!'Z!5h sV z3 :;!;' 58!9# /4 =v &`!:O!2`!;. 9G 7w Pf!'0!:] NN 1k 3g!;8 Em %= fa!;= E=!:j 0k sW :|!;: ,[ &] 7< 4> )J sa!;I!;/ 4r 4M!/_ 7U (*!)d!;Q!;A >w %' TO f|!:g t!!;G 1c!;[ Wt!3M!6$!:] <l #u!9' 4B!;R 9: >d (= ;u!;M .& DK 1%!9T z2 9  #F 50 9W /e 7< ;A!9B tM sb!3Q 9d @4 !>!9d 9@ Fh 25 tk 9x 9G 9d MR (W!9n .4 mL!+s!&s!:Q :;!<0 1L >B 9'!/B ~Q 9w!:6 9.!:I Wl!8K !i!:M )p!<@!8Q %= /v!<3 &f i{!;c 2P 4p 9G 8Y 4G N: 9L!<F!&l .} D~!<J!'; eU 8_ D{ 9D!<# HS!8Z!+n Rk 93!65!7:!5- 7(!<S!3^ Ml!3j 93 6: ~< 3g XI!9M!9l 3=!8# 88 c* )N!38!;y <>!:n ,m!9H ;e!4A 9w!8Z!:d s} 93!:h!:W 3?!:l!</!9E sv!<M +u ')!<b ta Re!=0!;q +F NR 93!;u #P 0v!=8 6{!<& TK!8^ 9M ?1 3f 3?!=A >/!;T oQ!<E .4 <l 1;!=I!<~ %e 2c 0[!=<!=F S^ ;I!=R!3Q :R )7 5N :U *y $a 1L [J :1 H& {C Iq zf u{ W>!,p :| $u!=!!$7 :l .]!/0 y/ #c O] nw P2 uz!.< !c B~ :h!8  0. :U .4 86 [X %7 %Y %4!!f HL J| M[ G=!=m :;!=o MC /e!87 .4!4M! : o5 O` 7A ?< !l D6 'j Y9 )T!=]!9E +I!<g #N!;*!0_ A9 :L @Q 34 ?< :F!>J 'a!42!(` &) P+ :j xM ^[ q& po pV {D!,q jg Ph!(M!#B $O {9!>X WW 44 ('!-$ E4 ;8 {# 5p Aj #R Ec Qx '< ~d :? ~j NU %. }w _O!3I &_ !l v0 .P!0V )p {f!.F 2@ w@!.Z!=v %W cq X7 ?s!-! V[ h2 MP!*8 rc!!< 4S!9& <W ;C Im!>`!>T '2 JC ti A- ~@ qx qV!1^ Fy F> ;. cS 4C /{ 'a Y? Pl Fs!?8 }t %| h2 q' ,r!71 ,T wY ?o G@ 6f!8M q  ;* )^ x. DQ!+, %< I+ C? d^ :E ~#!#q .[!;. .m 4Y Wl uY 7.!+% T.!0L w| X0 %<!)_ $, QG w` gB ?` )+ :o {N!>{ 0S !G -Z *y!>_!4L ;f!-w!,n zB Ms!#P!+v 7|!>[ FI HC!?K!,v Ml!0A!.[!!h!<6!.]!#Q ~7 1&!*= as nQ!(m nu T. [u!#w!$& /# PC {H CN xs!)Y |$! c ^B 4S !G J9 Jy s3!4L %!!+9!@'!#N!*i!1^ kV J% }'!'e :3 |;!49 XF %W KL!0D!+- ax ca!>* %Z QG!$S GN NH ,1!4l !1 ~[ Z@ He!@0!5o 'e!#[!/K!!(!,] V[!*% 9}!0N!,q @4 !: I&!@Q 0b D[ Aj!@U!'4!@W!@8 !N 7(!?h!3} SA!;P!?L *< ~% y+ 9>!?C!/M!>r ;c!>t y/ (O Mn v( 4H PK J%!-g!-V!&d!?= K~!'. *q!+'!,3 lK!++ oV {( T) 1& *) #I _0 Qx {] w7!80!.H!-`!.l!-`!-d ON x!!3R Q) 88 ,x =] TW $m 6Z {.!4? :B !6 7! ,x <h 1% 2% sK!Ai #Q!92 EI!Ad -*!Ap!&w }R!='!4? *. 'e 7a ZD CY!;v Im!:`!4= !E!92 MR!;v 8Q y&!B% 0L!Aq!A}!:m LE!;` ZD wK 1% 6U *0 6!!<A FV!3|!*d!9#!B7!!M 9W 7X!<-!92 <V 8;!B. !f!B8!+i!2{!B3!5$ <V #x!BA y&!BL *P!0;!BF!4?!,e *@ )o!BK!!M!:D!<P 5X!B*!A~ |z!BJ JC nG @l 0V!BX!:m :B +: #g!B]!-/ %[ /v!;6!&g!Au!4? Q) SQ!BJ!Bq 7} wO!B<!BG 2g!B6 %F =A 0| -@!90!B)!B=!3% 4[!#X!Bf!B8 E6!6R!Bk!5$ @4!Am!C.!B_ :n!8|!C)!92 U) 6p!Bp <, )J #w!6H!C2!3g ie D1!Bp!Ap A2!A|!B~!4? #a d/!BJ!%P `z },!CK!:m 4[ %'!BS!B^ Xp Jo!;w ~X!Av G* 7F!BB Xp 8B!C(!Bu!Bc!Bl /* 7; z(!!M )'!(W!BO!CD!(j!An!Ay!Ck 3o!9r!C]!CL #z!;M *m!C%!B !/T!CC!4H D<!A| .] :.!Ck u(!C9!Ce!C*!3R 5a !A!B#!BT!Ck 3_!6g 5,!Aj!Cg 0[!:f -^!Af!74!9K!At!Cf!5$ >1!88!CG!!M Ft iF!CS!BP!#7!CW!CP!B, 6M!D<!D*!30 D<!+O )o!DI $W!Bt /j!Bv!:m 5a O4!B]!DI <D!Ba 8}!DM NJ 4y mI!D$ $x!D9 -Z L-!DE!CD vA!CW!Bq 5B!7&!DL!BG $A Fr!DZ!C% >y!(p!Dp!4? ${ !f ),!DQ!Du 8E!C[!D4!6~ t!!Ci!C$!!M 4[ N>!Cn!4H 4y +5!D|!D8!E(!+J!Cu!E#!CD ).!Bo!Ao!E( 2g 8b!C~!4R b^ D| i&!Cs M !B(!3C!:}!4( ;R A !2]!*b 8)!EC!3y!EE!E, $A T^!EI 5i /w 26!EN!E= I$ &| %0 @# 'I #M TW F`!-9!6~ Ki fd!EA!+o!E`!<R!CD!EP #|!E[!@v 3=!Eg!92!([ A !3#!Cb!EK!E` +q!Eb!E? 64!Ap 7%!Ef!EU!Eh!EO!D/ pQ!Ck!%a!DT 3'!EV !_!8>!'> 88 %& T^ X) R%!8E!<7!D=!8H ;A ^{ 0c ^N!BC!,t!D^!Cv!<v X, zh!F8!F/!B& (2!E3!DV!<m K] w, 7m!56!BC 6) '~!Di!9a Q) .  7;!9+!BC -< /$!E<!F*!Da!1|!D|!FT 1$!CI!<j F-!E4!9a LU C$!F8 ;a nG +4!;l!Bb!D*!8e!1i!8y!,,!C7 y&!FE!F4!9a 4[ iF 6q!Fq!F_ /,!Cd!DU!Fu 9. g)!&)!;2!B'!B_ ,* 2A!Dx 9y $9 NJ /Y 3;!F8!CP :B!:i sa uj!FG >1 )9!Bo!F^!E] 2%!%f sL!=S!8* )7 1%!Fp +u!Af 7% G8 w.!8Z MR!?Z!Fy!F9 Xp!'k!9i 4`!G5!F5 u? 7a 3Q!C{ S=!F' 4B!GR!9a +Y!3I!GL!CP /F!37!G>!8Z de &z!76!4t G> ,5!B;!Gd!9D '< le!FS H'!Df *M!D( 0k!G[ %s!4w S:!;` %`!Du [;!C[ 1m!8Z!)W [F 2;!Du 20!FW!<#!Gw!FY &l $O 3U!G0!H' aZ!GY!GQ!<~!G, Dw 5_!F]!G& G> $S!=H!H*!H5!4w de VT!GL!Bq %I E&!E~!3$!H6!!0!:x G!!Af E% 9* 6N!F) #r!Gy!B:!G9!H: WO W# /M!HP!F !Gx!3| R%!Ds!GV!E1 24!Gu!F(!H[ LM!G- [8!Gh!CP!CU!G=!8F!HQ!6P!H^ ()!G% )Z wK T- 9]!G4!<~!Hp &l Mp!FJ!Ht =O 6~ ,G!Hx!:Y!+3 Rk!3) n]!F<!/f!Dy CK 8C!3) 7%!D;!F3!7(!4H K= @#!3k!CU!As!9_!7}!30 5# n^!I7 *2!FN!7'!7` 5'!#l!4K %K 5a jK!8c!BP =[ 6d %7!2J MR 1*!H3 3u!I;!=1 3T l5!2J @4 `R!IJ!3g 0F %K!I'!IX {r!GP!IS!IC XU zh!3k hG!Fk!Id!92 `y O-!I/ U4!I[!4H t( rW V^ 4a /o!BE!D<!I3!5D!I=!6+!6O %I +J!EL!9:!5j!G- Iv!6N sF!5f +I!C1!Iy!69!50 2Y :Y!47 5R!IG S/!F<!#d!5|!2y 38!6N!8h @4!J!!Iq!5D 8(!9&!6x 4a 4) &E!IR!-(!7F!6V 6` S0!6! ${ 5x!J?!5N #S +C hK!5e!Cl 1!!9L!J8 #S .f eW!5e F2 !:!Ic!JH!3$!6a XU *y!6! .{ ^G!6I!5:!4S! ' (y!JU!9O!Cu!I+!J%!<w!,G #h!6O @4!Gg!Jj )%!6V EB G+!Jg 4U!Jq!3Z!J.!3^ |z!6d!IX 6o!E;!8F!5s!43!9* -j!JC!5f K{!JG!Jr!6` lc $}!(v!Jv!J< 2V!K# !u!6} >c Mc 7% DP ob!*! =O PA 72 tk '_!;o Mc ^w d{ 0[ FZ 2? uJ 9l!KJ ?j!Da z8 ,9 (R!KP &_!Bj!D<!KT NL NJ!KB ;7 ]D!+L ,~ 8E ;7 :s bF aZ!)R aZ xD !B!=} ('!>p 0. 'B *B!KP ?  U8 ;! B|!?N Js #t O7 D' GQ!6`!Ka 6) n^ 9q!D# 2z XP :v @: @+!K{ KF!K} M[!L  &u!L# 4K %k!Kt $x!KP ^z gU!L, ?#!L. I/!L0!L+!Kp (s )Z N[ -N!Dr DM MO 9> :s!L< <K!L> C+ >*!LA @y!Jc!Da )Y 8]!L'!E[ Mg 0; <H!Ky!L- :`!K|!LP!LK! U!K?!Ir ,g!7n Pg wK ZO 'd!J# 1U!6s!E= p1 ;9!9$ <l ^p!6S!Ld!E=!87 AH!Lr JG!F} *E!Ln!B>!=! Ph!9$ cx a4!6^!Lv!B>!K/ !5!GU!2J (;!3 !Lu!9) >f @^!9$ LE!HY tM!L~!3% ?1 %'!Gq %.!Li!EX!8O!J-!Ep FI!;)!JD ,[!=Q!MA!4?!:r 9K kO!Fh |7 4H!Ij!Jb!Gn ${ #u!>D!J< ;u!Gc!K,!9k X} J_!8q X6 %#!MP!K5!8H!=G!8p #T 3; NO ^X!Ll!9U!8Z -x 47 :U!.W!Lj )Z!Mj!Ik!Gn #a HI $1!Mg 0q!$0!K4!K$!8Z {B G+!M^ I)!'q!JX!8H #i!6@!<W!2J!BQ!*`!N&!9a jl Sb!5e cx !:!Hd!9j!<e J{!9P!N2 8[!Ja!Mb <d!9  g.!N* 4a D< !G!Ma!M}!9D (= )I!3=!J^ .f!M6!I:!8~ ~/ Uc!9$ 5i 3p!Jz!FY!:A!6.!NA!IG 3l!=6!7;!IT 5) 9M m' 7T -;!N< > !Jc }(!Es 4>!0z E' 5M F` ?B 6{ |* qX 6: ]E =j ~P IT :v :4 Mu F: |' <S!;o ~[ 1Z!<d .]!*S E'!Kg!,# Y$ %W!Nw! =!>* O3!?D {e!Jc 36 2M 4]!>5 re!KF XP *s d> :s U+!'U %8!@g 0m ,c!Hy!O2 -` /0!<4 %y!Hu ,l #A '7!/N!O>!>)!*U!.Z!#v! ,!/I :p C^ &~ :P 2+ =W!/' [F!,w!'? !f!,?!O*!O(!O<!!I xv!OT =H la!42!OC!K* w_!'> >3!C@ /p! C UV %7!Oc w@!Oe Ys l` :g!OX yI!-o!<F!.| >{ O) LQ 5* N{!O9 |1!A; nS!?& <A!O?!?* Pr!L3!Oz 60 /d!2?!Om!D0 ;H!Oq!Ob qv!OM *z!!f X&!6`!OC 0p!0v )z >{ }: *@!P$!O.!O* W)!?+!=u *k!P+!>)!.w >s!@n!O1!OY W# -m!,w!Bg Ui!9> *z d_!OM!)O Cq _#!$, 1`!PN @)!,a @,!Oi!PS ?2!0b!P4 12 %? eI!O:!Os!P9!Ov!P< P9!P>!OY )* GE!O]!On!7H!#;!Po!P] $!!PG!P; x~!>/!Pu yI &}!=b!Pk!Bh }*!Oa!P%!Pq!P,!Ox $b!Q&!.g H'!PA!'-!F_!8{!Q-!PG s(!Pp!Q#!Og!Oy (9!Oj 5j!Q6!O^!I0 _O!P}!O) Ga!O;!Pc!Ox -g!Q3 1Z rH &f nT!On +( JU!QH!Ot!Q.!Q>!QM!PR!Q' MP!$$!Q*!GB!L6!Q:!QK!Q<!P:!0H!Q?!Q2!P0 2- SK!QD!On!GJ w|!QW!Q/!QL!P=!Qk!G( #|!Py!E( Sa!Qd!Pp!Qf!Pr!Q$!0v!Q]!O3 w: 1u!JB 4C 2p!+` )< ze!>7 j{ <A!2%!-  x, lX!>, Dk!Qu (H 66!$o!&T Z3!%S!DL!2b q{!2d (_ #%!#q!2p #, (l!2l (h!RE #9!RG!2s (`!2o fJ yG 4r Ad *r!,> ;O ^e ;u 5q!6r 5/ 4r A2!+Z!O! KX }; df!L| 1U 1H 5  7c .X %V Zl ;P zI 6V q= ,A!P<!-H !2!ID Dw Sv -j d0 $l (W!H  !N uM!:!!K& 0. wp %* 3; Za i/!38 +q!R~!4@ up ;T H* ]C *< 8O 9+ 6C 2+!Rs `d >Z .R +5 5n Q) 'I!Ms 5- 0m )G 3C ?I Wl @p!5T 56!9=!BW!8F Re!*< 'X /> %V f| /p!9A!I* bu!!+ bx!4I (.!S8 :?!+I vF!6S!S?! f!4I )= .R!PY (p ?Y!K= ~0 yn!5b *B!S-!-, Gm 4j!Dw!9_ qs 4q &l!:N z% kv 5| Of >n!?O!-e 74!Sr I$ +u!.3 h8 d0!-O!S1!=I!S^!QA!DN!+8 !; .R ,8!Sm 8N!NE!+^ &%!#' f. q` fA YW =2 =4 =6 =8 h}!2w +A!H- ;T [E j< /8!R{!BC 6^ 68!G- .a +v 2p!,U!-+!H~ XJ ,A!?E!TG!RQ!;^ -j!,g 5M G+ &Y ^<!K=!:  u;!B?!K0 2p %  56!-<!<,!H*!S3 5g!3S!=;!TA +  #g ;v wT!S= o?!Th 5=!> !GD!Tl ;9 3$ AX!SR !u!TS yH!M; ,L z[ ;f 3. &Y r}!JG y6!T} Mc!EX )[ 2p -A!Ek!U. $y 6N!S|!:- 77!M. ;!!:L }.!SH ta!=S 7^!<o!;2 tb }.!MP!Fc!4R 7R 1v!F-!0v jj!Rd!Bb!2K!3] 7D!AH 7U $a Co :D!5!!D` 78 + !:p!0v!)`!Ja!,O!G? 4r 1Z!UP 8x!UR Pg!UK 8} BK!<m D{ ~0!NA (* AG!Tq!R|!U= 9V %! 6J!;N ;%!U(!<8!3] U* Wl!M,!O$ vo!KS!Uq E* 3T!UY .] 8u ~b 8p!D`!V# '<!G9!=O a%!T{ w#!7t!Uz l4!:] %I!9} 5r!D* 7w!)W KL!:y!MW!M| PL!=S!V: u?!MD Ah %2!Ne!V@!3Q 7w!$R -m!;~ %*!TE!<$!;J 5! w8!F] .4 DK 3z!;Z!VA 5! $>!U| [1 3e!VO!;n!:@ I$ ~ !;W x% Q0!VX!VI 7j ^2!V] $l!E}!;-!VY!V^!11!;W /Y!C}!<c!;e 84 +u )i!F@ .& 0: )<!Uo!VH 8e!;p XU!H% .& Kd!6q!Vv!H5 50 a`!:] -` :V!;@!W+ 8M fR!:] $w!<! ta!VP!;S &E &D!VD ^o!'l!W*!HH 50 ov *%!;!!TJ!VG!W9!=9!WC!Ig!<q!WF!Vh :| 9d 2p '>!=$ c*!G)!W8!Va!=K 7x Im!<y .4!OD 7M!W1!<% 5! 9f 7. 9' 86!W_!Vo!Wa!=%!,x!=$ h&!ET!Wh!WO 7j!:<!MU!W] @l!=Z!DL!D* 9d D<!?q 9' 4J +f!<-!Fm!Wq %y!W[ .k .a!U;!3o!=/ 9U!W; Uj!NA +5 as!:t!U_!UF!Dc!Uc gp tL ta!Ea 9U!Uz!,f!WS /, :#!K^!X2 90!=*!<* ie!DK!WV!Uh!X: sJ!9Y 9M!V6!Ft!UM!XI *P mg!=+!V/!I$!9D!V+ sF!We Jc!E!!>$!9) 4;!O#!:L 9W wx 26!,P!<m!)u P$!=W!O} 0t!VG 'I!V! oe!B[ .& 4; +:!Xl pX!UN 30 /J 8m () 7! i5!I1!3o ;Z!Ui nt Bf 9'!Xr!RY!<c!:G!Xf i5!Wk :@!;` 6~ #u!V? W?!<J!Vc 7T!We!(j!Uf ~X!Wx :i!Gg!Ul ?1 &+!J6!Ux!=B 5! *+ ki!==!+3!X[ 9m 8e )` 7j W_ 9h :,!V&!Y7 6A!=J 7P :R (;!-f!># .k UQ A9!Ow!Nx D$!O)!Q# NI :h!=%!1Z!>4!X& %7 :o 0h *| _c DU ,{ :8 0h!Yb 6{ :R!/B %=!=W!Q` )i!&7 *t :]!?_ @b!,J Y4 nW!Q%!Yr 9V jq #i $9!D| 6~ QQ A- Kj >r J0 A+ ES!Z,!?D!Q@!YT 4F!,{!<) t) R9 [% {{ zb!?*!Ny I/ zM '0 ;'!LB!Z5 @L yb!8- 7F 5z TB!Of Q[ Am!Y^ Yz (*!ZD /( 5! )I lk!Yf +V 2q JU!=f Ee!=h HL!=j!U'!OW (9!Wy 2g S0!ZW J4 nc!Z[ O` :I Js!Z` :9!Zb )% 9{!&T!8#!ZI &)!>&!Zj ?s!Zl KF!Zn :1!Zp!ZS!GD 4-!Z8!V. 31 *s!Zx :6 ux DS :c!Za!:H!<1!VD Of !:!T1 &R!Uq %' le!V% 9( 31!T{ [7!M1 Ba!FS .B Zw!V? ri!:H Q/ %a 8+ #T %z!Xd!Uq!Rh G{!:] g(!Wg!SI![K .W )9!VT!D$ &D!X(!5-!5f!<e!9J!Ws![V 2q!K=!WH!8H 0Z!Br!=$! +!W~!D<!Vw <>!K8 ' ![^ (= ,5!N]!5-!:?!N> 4G 5o!=$ @F![e!:5!<J 5w!YN 9M!&`!IA!M7!X2 Z@!Zf 93 Of $X!S= xm!=n!;T 5~!=E 9& 0Z Hc :^!$*!A9 b+ I/ ~i!]3 jS!Yc de ]/!YX!,f!8W!,H!Y{!/L @-!Y~!]A!Yq (H!>1 ,5 v$!YO %U!5p HH R+ GN F< WI _m!]O Ap!K6 7j }}!1w /, vB VG!Y'!6h 0m!R~!Vy %J !Q 86 n^ e< n` F`!9t!U5 @3 tf!3v!(K!IP!TE 65 d* <d F& ;+ A2!4x #&!]q :N F:!>M DE!>I >m!-|!>/!]t!4R =L (K !<!Ch!&y!W  sA d:!]u %$!^) A2!=c!^, '. ?) FP V1 *z I! <S!^& vh =>!62!&B!Pm!!@ VQ [< cc!^6 IJ pD P! B~!^= #r @j!!A!:* 9f!]p ]q!+A V; A-!>K Js!]~!]| NI!^L [m @E!C! !d F2 (-!&B!0Q!/F v+!!S *x nQ }3! ?!+A Zm!/_ Mp G&!^] <* 'x T= F2 *3!&y KK }w!2# mM!>i %4!^k m !Xx &_ KC! M d)!&?!^_ FE!B, .-!M`!&) ~f!^{!PJ!^j *x!^l :E!^n!_% :O!^/ F0 DJ <A 6B #&!7> k  ge XZ i0!@x e<!^[ |@ $z!:Z!#G yM %D!*d 5c dv!_9 ^u 27!>R 5O!7%!)1!9= z/!Qg!Of!^}!_[ Mp SR!2C!Ow!>' %W!_8!^L me HA #P 4)!G3 )M!/S!2B!P,!_] %2 wD!__ RO!!f!_b!^p!_' (H ?k x%!#5!]z Pw!$a 6o a9!^F!^:!L_ KF!^I QF b= !Z!^L E; Ke #K Qv (F )+!Y8 Lm!_e tQ Dm Fl bn wI Ad!Dc!QK!Q>!_o %.!_q ln!_t %8!QV!_d <U #U!XQ!)1 <f!2! on 'J DU!]B om!_w!_: ;@ /,!^* aZ!$a!`T 26 &u!`+ CV 7d 6B %R!#6 uK <A b-!ZA DE!?v!Yo [m!^<!`F!`_ ,6 pJ .a!`K *|!`M P2!`O!7]!`Q 84!`S $g LU &H ;$ ;+ >I 5W c6!`3 F% EO ;+ Qv!`{!Sn!Nn !w!^L +A @E!Q{ bQ L-!+Z!%g!a, ?k!a) AR!/?!5U!<- $b!a4 >x $< 'x!a1 E6!TE![4!`* 1{ $z!/B %w 38 *u!$#!;Q uM!a< /G!3Z yb!$O!<| 9E 4p!aN!$S!]w *+ 0/ {|!]w!KI ,C!a,!`, 7% #A $Y!^Q!)1!D,!+C!^U :K!^W KF!^Y :H <%!_O!a` Ac!F|!(% ]q!(%!<'!%D!am 1v!ZN!aj b- :F!`) 50 6{ ?k!KB >L l3 &m )+ u4!ah!]}!Zz @e!>K!an!b !_P 'M!`, `d ~< g: ,n!$# #b d]!^G Iq!`' ND!`v!b3 o# E] +z kJ!bD!3@ |4!`# %Z!`% I/!b> NY!b1!`[ <e!`^ AR %S M/!`y tk!2K!bP Fd!a&!$)!)1!_i!OO ?L!]5 IJ!]8 ~j fo!ap!a$ ;A #U wI!_? ED 0m!bY <@!`y *<!_> E= f& b; fh <N l:!_A!_F E0 =a!3v %G #c!`o 9+!a+!`k )' '<!`I!`o zd!`L b+ O`!`t!1t!b2 Fc!#q!!R!`m!c! qw!7]!`q!c- ?s!c/ Ap!a` me!bi!_>!`.!_? mO s5 KF vc dK!b@ E?!bQ!a& h)!`a *^!>s!ZB O} DE!P*!Z>!b@ 8g 27!)1!`H!`n!c7 Jh ~ !`f!c<!cV @|!UT )?!&B d.!YH X@!bo!UT!Wc pJ!`^ qt H&!+I IJ!Kj d!!b{!`R &Y!-k }]!cm ;+ d5 G7!=x X$ uz %*!cu!`w!cw!cA )=!=v!`} s* G9 i. YI ry!d$ 8f!cc!&B!ce!cz! u!cq F| uz %] ;e X^ s:!`j FC :D 5a!d(!cg ru!cp!'$!cF n| $u!d>!cv :D Pf '/!d) L9!cs!c~!d8 i`!d0!cJ /G!_T =N!dO [u!d! #K DE!d7 d8!dI nD!a, vi /G &)!_J!0V |-!dg 06!bg FC DK!bj %2!!s *i +) 6N!`Z!bh sv!_J!(I 6B!Q{!`~ 8/!a! Vn!bo!do!`_!M= 6B!`2!e!!bh Ez!`U 04!`9!a/!du!c% FC!=G!`G |T!e.!5R +<!e  vL!dd ;p!(V!+[!'R pJ q<!`Y!e1 xH <?!;? ph!!@ cx!dt!8F!dv {@!eE ,;!dp!;P!a2!e0!aD!eM!_H '}!dp!S9!]z![B!eL!eD a? 'W!%k nr!?y!a]!eK!eC!`w 2! )*!af D| 6B!W  GQ!bY!eh $g!c' w4!%P!e8 U@!ef!d1 sq M.!)1!]J!el!a*!eT!`R!ep &7 5a ,d!b) .@!a !ev!f !eg!ez Fl!E:!e}!eB!f+!ex pS!ei!`7!K0!f'!d} ( !e9!en F%!f# !C {[!es!em!e]!@p uF!f- 4M!f&!et 2x!f;!fC #r >O %v #U +C!f&!/U!VO sM!^L >d ;@!a/!]J!^C!f5 8c -g!`+ ~[ D<!Lq!-. =j &k!XU!7k!%M (O 7F!fd ;Q )Y *w!GH 8e yH ce!4q!W] @~ =j :X!UC J( 8r #) h^ !&  y #!  N =1 r*  A !/ !#  j =5  e  o  u  l !- (9 !(  l  v  i  i  n $'  B  e  c !(  y !& 'u !(  I!g3!g5 $'  A qc  s  e  n  u $'  e  v #!  l  u  h $'  S  m  o  k  e  y  N qb  i $'  h  i =8  m  i  f  y!gC  y =5  z =1 Z- h~ #q!g#  m!g%!g'  A  O  u  t  d  o qb hx!gG  c  e $'  C  a  n  n  o!g6 $L  B!gN  e N-!g,  n #1 r'  G qc  l  l!g7!h&!h( r$!h+     R ='  h =-!h$!gN r'  C!h)!h5  L  e  f!h: #q!h%  u!h'  K!g*  j  i =6 $'  T  a!h/ =3  t!gu!h0!h$ =1  b!gu    !%!g}!hD YQ  w!g}!h6 r$  n (_!h;!hG     B!g}!hd r'  R !'  k $'!gq!gs!gu r'  L!h] #!  n    6D  L qh  y!hZ !&!h* $'  W!g] #1!hZ r&  a  s  o  l!hR!g}  d  e!gz $L  C  l  o!gF  d!hh!gu!ho $L =&  m  p !+ =3  m!hP!i,!hu!h*!hw $'  G!i+!i/!hx!g|  n  d !+ $'  F!g}  c!h}  I  n!gy  n!gF!hZ #.!gQ  i!i=!i? (]  t #1!i7!h%!i5!i*  m!g7!gx  h!hy!iP!iR!h}  B !~!i,!hm  c!i: #q!hO !*!h'!iD!h+!h#!hE ='     M  o  d!g- r&!i-  g!i1 #q!j!!j$ !& r'  S #/!j(!g7!i~!j+!j%!j.!j0!h'  R  u  g $'  R  e!i7!j4!j-!j'!j8!j:!g{!g^  c!i?  F!i4!gv  C BY!g]!h!!g{  r  y  s #/!i,!hi!h/!j<!j>!hh!j3!j#!j5!jB!hb!j;!h;!hn!hX r&!i7 M~!i-!iM!i#  i!i/!j !j]!jA!j/  a!j1 $L  W!jk!h'!j@!j&!jp!j(!j`!jX!id!hj #!!h6!hn!ii!iV!gP $L!jI!hs N-!jM  i!jO!i;  q  u r&!h'!k(!jK!k+!h!!il $L!hO!hQ!iz!hw!k7 #q!k;  r!hx 6D!j9  g!k= YQ  h qb  t N- !)!g5  e!h^ q| =(!jh  d!hN!iB     W!gu!iJ!hh!k1 =3  h  e  l  f!kS!k:!hv!k@!g7  y  o  b  u    9:  S!gU!2e!hR  i!it!k!!it!h1!jc  o!je!kQ!i0!gQ!iA!hQ!iw!iO!h$!iq!kr!iu #,!kp!h'!h>!gT!he #q!kV!j#!gG!kY  r!h'  S!k]!k_!g7!hW!hY  S  w qb!i7  D  i  s!i>  a!gc!i;!hS =8!jz!ip  x!i#!kW!l.!h[!i&!is!l$ hu!kc!i|!RF r$!i7!kC!kE  A  B!g- !+  t!g5!i8!je!kt!it!jd  r!i7  W!kT M~!gQ!hS!i+!j|!/n!hJ!hL!gI!i;!i^!i>!h'!ia!ic!h6!i5!j) YQ!k{!i,  P!kG!h   g =8  p!k&!l+!g5  d  c!g]!gm!g/ #q  D  o!gL!hb!g~!l* !# BW  n!kD  C =8!hd!m0!hk $' BW r$!j(!h=  h  a!g^!i#!lf Xc!iP !&!kI!h%!hn hp (^!hU #q!lt!jY!h{  l!lA!hE  u qh  d!g5!kD!hu  d!i/ ##!i2!h?!m2  A!h>!h4!k !hA!hC!gQ  k!g5  n!h}!ia!kS!ix  s!ju N-!i4!ks!k8 qb  o YY =1  p!lV  M #!!m(!h]!kQ!ka!i,!g|  b!kL!kN!l2!kH!hR!hT!mG!k)  M #0!kj!lk  C!jF!j^!kC!hp  r!m(!jk     V!i)!lx q|!i_!ls #.!lu!hi  m!hX  o!gQ!k/!kZ!mP!jf Z+ =8!jP!g}!h'!hi!m1 r' 9:!iH  l!kX!iL!iN!l1 #/!iM!ky $L #-!lS hp !)!k~!iv YW  p #.     H!iI!mb!iU!gt!gv  F!gx!n?!iQ!iV!io!l6!mx!l8!l:   !l<!l>!f~ $'  K  i  t!m(!l.!md!iE!m_ #q!o#!o%!k]!iK!ma!ht!hB!kN!o,!o&!o/!me!h,!h.!mN !#!h-!i.  f #0!k]!h=!mt!lN  O  p!l.!ip!gT $'!iU!iW!iY!mn!i;!nN  a!h6!jY!oM #q!T: Z,!hh!m8!m(!iZ!kI 6D!oU =8!hh !&!kq!oS!m3!mz!lk!nb!iM!j{ $L!m4!kD!k(!kn!j9!nT!oI!iV!gG!iY  G  i!gL!o* h^!hP!kM!i&  &!oW!jM   !ou!ow $'!m}!mX qe f=!n>!i,!o}!iL  v!i)!gQ =5  i!n|!ov!ju!ox!n@!lr!oZ!lu!mR!mT }f!kK!hd!kN  H!l@  b!oz $'  P!hP !'!h'!le!jW $L!pF!oa!ls qh!j- $'!m-  u!ix!kU!lf!l3!k` $L!hI!gU!hK!hM!k8!kT!oG  k  s!pX!pE!pG!gy!kJ!n'!p?!lV!pM!pH  -!k9!l{!mB!h*!mY    es!pm!ph!k}!n?!n4!n9!n6!jD!p`!iX!ki!n&!n(!of!j:!pl!pg!k2!h?!pr!pE =7!p8!om!mb!m7!nQ!kY!op!k'!in!i8  n  f!g^!nt!q7!lX!h/!kM!l]!ip!l_!i; r$!gE!l'!p>!kM!pE!nC!jY #-!gF!qJ!ib!jY!ie  s!ig!p%!jn!jx!j7!oi  ]  }"
WpLCZpPH,VS Mod simple .csproj,BillyGalbreath,XML,Sunday 16th of June 2024 07:57:45 PM CDT,"﻿<Project Sdk=""Microsoft.NET.Sdk"">
    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include=""Vintagestory"" HintPath=""$(VINTAGE_STORY)/Vintagestory.dll"" Private=""false"" />
        <Reference Include=""VintagestoryAPI"" HintPath=""$(VINTAGE_STORY)/VintagestoryAPI.dll"" Private=""false"" />
        <Reference Include=""VintagestoryLib"" HintPath=""$(VINTAGE_STORY)/VintagestoryLib.dll"" Private=""false"" />
        <Reference Include=""VintagestoryServer"" HintPath=""$(VINTAGE_STORY)/VintagestoryServer.dll"" Private=""false"" />
        <Reference Include=""VSCreative"" HintPath=""$(VINTAGE_STORY)/Mods/VSCreativeMod.dll"" Private=""false"" />
        <Reference Include=""VSEssentials"" HintPath=""$(VINTAGE_STORY)/Mods/VSEssentials.dll"" Private=""false"" />
        <Reference Include=""VSSurvivalMod"" HintPath=""$(VINTAGE_STORY)/Mods/VSSurvivalMod.dll"" Private=""false"" />
        <Reference Include=""Harmony"" HintPath=""$(VINTAGE_STORY)/Lib/0Harmony.dll"" Private=""false"" />
        <Reference Include=""Microsoft.Data.Sqlite"" HintPath=""$(VINTAGE_STORY)/Lib/Microsoft.Data.Sqlite.dll"" Private=""false"" />
        <Reference Include=""Newtonsoft.Json"" HintPath=""$(VINTAGE_STORY)/Lib/Newtonsoft.Json.dll"" Private=""false"" />
        <Reference Include=""protobuf-net"" HintPath=""$(VINTAGE_STORY)/Lib/protobuf-net.dll"" Private=""false"" />
        <None Include=""LICENSE;README.md;resources/**"" CopyToOutputDirectory=""PreserveNewest"" Pack=""true"" PackagePath="""" Link=""%(RecursiveDir)%(Filename)%(Extension)"" />
    </ItemGroup>
    <Target Name=""Package"" AfterTargets=""PostBuildEvent"">
        <ZipDirectory DestinationFile=""bin/$(TargetName).zip"" SourceDirectory=""$(TargetDir)"" Overwrite=""true"" />
    </Target>
</Project>"
dyL6EDkB,3dRenderClass.js,jargon,JavaScript,Sunday 16th of June 2024 07:43:43 PM CDT,"class Construct {
	constructor() {
		// Define constants for key codes
		this.Ci_Esc = 'Escape'; // Key code for Escape key
		this.Ci_Up_ArrowPad = 'ArrowUp'; // Key code for Up Arrow key
		this.Ci_Down_ArrowPad = 'ArrowDown'; // Key code for Down Arrow key

		// Define constants for success and failure states
		this.Ct_Success = 1; // Success constant
		this.Ct_Failure = 0; // Failure constant

		// Set screen size
		this.p3d_screensizex = 640; // Screen width
		this.p3d_screensizey = 480; // Screen height

		// Calculate screen center coordinates
		this.p3d_screencenterx = this.p3d_screensizex / 2.0; // Screen center x-coordinate
		this.p3d_screencentery = this.p3d_screensizey / 2.0; // Screen center y-coordinate

		// Create a canvas element and append it to the document body
		this.canvas = document.createElement('canvas'); // Create a canvas element
		document.body.appendChild(this.canvas); // Append the canvas to the document body
		this.ctx = this.canvas.getContext('2d'); // Get the 2D rendering context for the canvas
		this.canvas.width = this.p3d_screensizex; // Set canvas width
		this.canvas.height = this.p3d_screensizey; // Set canvas height

		// Initialize 3D projection variables
		this.p3d_ex = 0.0; // Eye x-coordinate
		this.p3d_ey = 0.0; // Eye y-coordinate
		this.p3d_ez = 0.0; // Eye z-coordinate

		this.p3d_wx = 0.0; // World x-coordinate
		this.p3d_wy = 0.0; // World y-coordinate
		this.p3d_wz = 0.0; // World z-coordinate

		this.p3d_sx = 0.0; // Screen x-coordinate
		this.p3d_sy = 0.0; // Screen y-coordinate

		// Define eye positions for 3D projection
		this.eye = [
			[0, 0, 0],    // Origin
			[0, 0, 100],  // Forward direction
			[0, 70, 0]    // Up direction
		];

		// Initialize pt array for storing point data
		this.pt = [
			[], // pt[0] is an empty array
			[], // pt[1] is an empty array
			[]  // pt[2] is an empty array
		];

		// Initialize pt[2] with empty arrays
		for (let i = 0; i <= 8; i++) {
			this.pt[2][i] = [0, 0, 0]; // Initialize each element in pt[2] with [0, 0, 0]
		}

		// Set screen size variables
		this.screensizex = this.p3d_screensizex; // Screen width
		this.screensizey = this.p3d_screensizey; // Screen height

		// Calculate screen center coordinates
		this.screencenterx = this.screensizex / 2; // Screen center x-coordinate
		this.screencentery = this.screensizey / 2; // Screen center y-coordinate

		// Initialize input handling variables
		this.keys = {}; // Object to store key states
		this.mouseX = 0; // Mouse x-coordinate
		this.mouseY = 0; // Mouse y-coordinate
		this.running = true; // Running state of the application

		// Add event listeners for key and mouse events
		document.addEventListener('keydown', (event) => this.keys[event.code] = true); // Set key state to true on keydown
		document.addEventListener('keyup', (event) => this.keys[event.code] = false); // Set key state to false on keyup
		document.addEventListener('mousemove', (event) => {
			this.mouseX = event.clientX; // Update mouseX on mouse move
			this.mouseY = event.clientY; // Update mouseY on mouse move
		});

		// Start the update loop
		requestAnimationFrame(() => this.update()); // Call the update method on the next animation frame
	}

	// Method to clear the screen
	clearScreen() {
		this.ctx.fillStyle = 'blue'; // Set fill color to blue
		this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height); // Fill the entire canvas with blue color
	}

	// Method to draw a line on the canvas
	// x1, y1: Starting coordinates of the line
	// x2, y2: Ending coordinates of the line
	// color: Color of the line (default is 'yellow')
	drawLine(x1, y1, x2, y2, color = 'yellow') {
		this.ctx.strokeStyle = color; // Set stroke color
		this.ctx.beginPath(); // Begin a new path
		this.ctx.moveTo(x1, y1); // Move to the starting point
		this.ctx.lineTo(x2, y2); // Draw a line to the ending point
		this.ctx.stroke(); // Stroke the path
	}

	// Method to calculate a segment index
	// X, Y, Z: Coordinates used to calculate the index
	segindex(X, Y, Z) {
		return X + Y * 2 + Z * 4 + 1; // Calculate and return the segment index
	}

	// Method to render a segment between two points
	// P1, P2: Indices of the points to render the segment between
	renderseg(P1, P2) {
		// Render a line between the 2D projections of points P1 and P2
		return this.renderline(this.pt[2][P1][0], this.pt[2][P1][1], this.pt[2][P2][0], this.pt[2][P2][1], this.pt[2][P1][2], this.pt[2][P2][2]);
	}

	// Method to render a line between two points
	// x1, y1: Starting coordinates of the line
	// x2, y2: Ending coordinates of the line
	// z1, z2: Z-coordinates used to determine if the line should be rendered
	renderline(x1, y1, x2, y2, z1, z2) {
		if (z1 === this.Ct_Failure || z2 === this.Ct_Failure) return this.Ct_Failure; // If either z-coordinate is failure, return failure
		this.drawLine(x1 + this.screencenterx, this.screencentery - y1, x2 + this.screencenterx, this.screencentery - y2); // Draw the line adjusted for screen center
		return this.Ct_Success; // Return success
	}

	// Method to synchronize 3D points
	// P: Index of the point to synchronize
	sync3ds(P) {
		this.pt[2][P][0] = this.p3d_sx; // Sync screen x-coordinate
		this.pt[2][P][1] = this.p3d_sy; // Sync screen y-coordinate
		return this.Ct_Success; // Return success
	}

	// Method for 3D projection calculations
	// ex, ey, ez: Eye coordinates
	// wx, wy, wz: World coordinates
	// sx, sy: Screen coordinates
	// fwx, fwy, fwz: Flags for world coordinates
	// fsx, fsy: Flags for screen coordinates
	Projection3d(ex, ey, ez, wx, wy, wz, sx, sy, fwx, fwy, fwz, fsx, fsy) {
		this.p3d_ex = ex; // Set eye x-coordinate
		this.p3d_ey = ey; // Set eye y-coordinate
		this.p3d_ez = ez; // Set eye z-coordinate

		this.p3d_wx = wx; // Set world x-coordinate
		this.p3d_wy = wy; // Set world y-coordinate
		this.p3d_wz = wz; // Set world z-coordinate

		this.p3d_sx = sx; // Set screen x-coordinate
		this.p3d_sy = sy; // Set screen y-coordinate

		let tmp_PZ = 0; // Temporary projection factor
		let tmp_PF = 0; // Temporary projection flag
		let tmp_Flags = 0; // Temporary flags

		// Calculate flags based on non-zero values
		if (fwx !== 0) tmp_Flags |= 1; // If fwx is non-zero, set flag bit 1
		if (fwy !== 0) tmp_Flags |= 2; // If fwy is non-zero, set flag bit 2
		if (fwz !== 0) tmp_Flags |= 4; // If fwz is non-zero, set flag bit 4
		if (fsx !== 0) tmp_Flags |= 8; // If fsx is non-zero, set flag bit 8
		if (fsy !== 0) tmp_Flags |= 16; // If fsy is non-zero, set flag bit 16

		if (tmp_Flags > 0) { // If any flag is set
			// Determine the primary projection factor
			if ((wx !== 0) && (!((fsx !== 0) || (fwx !== 0)))) {
				tmp_PF = 1; // Set primary factor to 1 if wx is non-zero and neither fsx nor fwx are non-zero
			} else if ((wy !== 0) && (!((fwy !== 0) || (fsx !== 0)))) {
				tmp_PF = 2; // Set primary factor to 2 if wy is non-zero and neither fwy nor fsx are non-zero
			} else if ((wz + ez > 0) && (!(fwz !== 0))) {
				tmp_PF = 4; // Set primary factor to 4 if wz + ez is positive and fwz is zero
			} else {
				tmp_PF = 0; // Set primary factor to 0 otherwise
			}

			if (tmp_PF === 0) return this.Ct_Failure; // Return failure if primary factor is 0

			// Calculate projection based on the primary factor
			if (tmp_PF & 1) {
				tmp_PZ = wx; // Set temporary projection factor to wx if primary factor bit 1 is set
			} else if (tmp_PF & 2) {
				tmp_PZ = wy; // Set temporary projection factor to wy if primary factor bit 2 is set
			} else if (tmp_PF & 4) {
				tmp_PZ = wz + ez; // Set temporary projection factor to wz + ez if primary factor bit 4 is set
			} else {
				tmp_PZ = 0; // Set temporary projection factor to 0 otherwise
			}

			if (tmp_PZ === 0) return this.Ct_Failure; // Return failure if temporary projection factor is 0

			if (tmp_PF & 1) {
				tmp_PZ = (sx - ex) / tmp_PZ; // Calculate projection factor for sx
			} else if (tmp_PF & 2) {
				tmp_PZ = (sy - ey) / tmp_PZ; // Calculate projection factor for sy
			} else if (tmp_PF & 4) {
				tmp_PZ = ez / tmp_PZ; // Calculate projection factor for ez
			} else {
				tmp_PZ = 0; // Set temporary projection factor to 0 otherwise
			}

			if ((tmp_Flags & 7) > 0 && tmp_PZ === 0) return this.Ct_Failure; // Return failure if any of the lower 3 bits of tmp_Flags are set and tmp_PZ is 0

			// Adjust wx, wy, and wz based on projection
			if (fwx !== 0 && fsx === 0) {
				wx = (sx - ex) / tmp_PZ; // Calculate wx if fwx is non-zero and fsx is zero
				tmp_Flags &= 30; // Clear the lowest bit of tmp_Flags
			}
			if (fwy !== 0 && fsy === 0) {
				wy = (sy - ey) / tmp_PZ; // Calculate wy if fwy is non-zero and fsy is zero
				tmp_Flags &= 29; // Clear the second bit of tmp_Flags
			}
			if (fwz !== 0) {
				wz = (ez / tmp_PZ) - ez; // Calculate wz if fwz is non-zero
				tmp_Flags &= 27; // Clear the third bit of tmp_Flags
			}
			if (fsx !== 0 && fwx === 0) {
				sx = ex + wx * tmp_PZ; // Calculate sx if fsx is non-zero and fwx is zero
				tmp_Flags &= 23; // Clear the fourth bit of tmp_Flags
			}
			if (fsy !== 0 && fwy === 0) {
				sy = ey - wy * tmp_PZ; // Calculate sy if fsy is non-zero and fwy is zero
				tmp_Flags &= 15; // Clear the fifth bit of tmp_Flags
			}

			if (tmp_Flags > 0) return this.Ct_Failure; // Return failure if any flag is still set
		}

		return this.Ct_Success; // Return success
	}

	// Method for scaling 3D projections
	// arg_EX, arg_EY, arg_EZ: Eye coordinates
	// arg_UnitX, arg_UnitY: Unit coordinates for scaling
	// arg_WZ: World Z coordinate
	Projection3d_Scale(arg_EX, arg_EY, arg_EZ, arg_UnitX, arg_UnitY, arg_WZ) {
		const tmp_Success = this.Projection3d(arg_EX, arg_EY, arg_EZ, arg_UnitX, arg_UnitY, arg_WZ, 0.0, 0.0, 0, 0, 0, 1, 1); // Call Projection3d method with scaling arguments
		if (tmp_Success === this.Ct_Failure) return this.Ct_Failure; // Return failure if Projection3d failed
		this.p3d_sx = Math.abs(this.p3d_sx); // Take absolute value of screen x-coordinate
		this.p3d_sy = Math.abs(this.p3d_sy); // Take absolute value of screen y-coordinate
		return this.Ct_Success; // Return success
	}

	// Method to update the canvas
	update() {
		// Stop running if Escape key is pressed
		if (this.keys[this.Ci_Esc]) {
			this.running = false; // Set running to false
			return; // Exit the method
		}

		// Adjust eye position based on key input
		if (this.keys[this.Ci_Up_ArrowPad]) this.eye[2][2] += 1.0; // Move eye forward if Up Arrow is pressed
		if (this.keys[this.Ci_Down_ArrowPad]) this.eye[2][2] -= 1.0; // Move eye backward if Down Arrow is pressed

		// Update eye position based on mouse position
		this.eye[2][0] = this.mouseX - this.screencenterx; // Set eye x-coordinate based on mouse x
		this.eye[2][1] = this.mouseY - this.screencentery; // Set eye y-coordinate based on mouse y

		// Clear the screen
		this.clearScreen(); // Clear the canvas

		// Loop through grid points and project them
		for (let Z1 = 0; Z1 <= 0; Z1++) { // Loop for Z1
			for (let Y1 = -3; Y1 <= 3; Y1++) { // Loop for Y1
				for (let X1 = -3; X1 <= 3; X1++) { // Loop for X1
					for (let Z = 0; Z <= 1; Z++) { // Loop for Z
						for (let Y = 0; Y <= 1; Y++) { // Loop for Y
							for (let X = 0; X <= 1; X++) { // Loop for X
								this.pt[1][this.segindex(X, Y, Z)] = [
									(X + X1 - 0.5) * 50.0, // Set point x-coordinate
									(Y + Y1 - 0.5) * 50.0, // Set point y-coordinate
									(Z + Z1 - 0.5) * 50.0  // Set point z-coordinate
								];
							}
						}
					}

					// Project points and synchronize them
					for (let T = 1; T <= 8; T++) { // Loop for T (point indices)
						this.pt[2][T] = [0, 0, this.Projection3d(this.eye[1][0], this.eye[1][1], this.eye[1][2], this.pt[1][T][0] - this.eye[2][0], this.pt[1][T][1] - this.eye[2][1], this.pt[1][T][2] - this.eye[2][2], this.pt[2][T][0], this.pt[2][T][1], 0, 0, 0, 1, 1)]; // Project the point
						this.sync3ds(T); // Synchronize the projected point
					}

					// Render segments between points
					this.renderseg(this.segindex(0, 0, 0), this.segindex(1, 0, 0)); // Render segment between (0, 0, 0) and (1, 0, 0)
					this.renderseg(this.segindex(0, 0, 0), this.segindex(0, 1, 0)); // Render segment between (0, 0, 0) and (0, 1, 0)
					this.renderseg(this.segindex(0, 0, 0), this.segindex(0, 0, 1)); // Render segment between (0, 0, 0) and (0, 0, 1)

					this.renderseg(this.segindex(1, 1, 1), this.segindex(1, 1, 0)); // Render segment between (1, 1, 1) and (1, 1, 0)
					this.renderseg(this.segindex(1, 1, 1), this.segindex(1, 0, 1)); // Render segment between (1, 1, 1) and (1, 0, 1)
					this.renderseg(this.segindex(1, 1, 1), this.segindex(0, 1, 1)); // Render segment between (1, 1, 1) and (0, 1, 1)

					this.renderseg(this.segindex(1, 0, 0), this.segindex(1, 1, 0)); // Render segment between (1, 0, 0) and (1, 1, 0)
					this.renderseg(this.segindex(1, 0, 0), this.segindex(1, 0, 1)); // Render segment between (1, 0, 0) and (1, 0, 1)

					this.renderseg(this.segindex(0, 1, 0), this.segindex(1, 1, 0)); // Render segment between (0, 1, 0) and (1, 1, 0)
					this.renderseg(this.segindex(0, 1, 0), this.segindex(0, 1, 1)); // Render segment between (0, 1, 0) and (0, 1, 1)

					this.renderseg(this.segindex(0, 0, 1), this.segindex(1, 0, 1)); // Render segment between (0, 0, 1) and (1, 0, 1)
					this.renderseg(this.segindex(0, 0, 1), this.segindex(0, 1, 1)); // Render segment between (0, 0, 1) and (0, 1, 1)
				}
			}
		}

		// Continue the update loop if running
		if (this.running) {
			requestAnimationFrame(() => this.update()); // Call the update method on the next animation frame
		}
	}
}

// Create an instance of the Construct class
const app = new Construct(); // Instantiate the Construct class
"
DbEHJYwV,Sample Code from class,thecatfix,JavaScript,Sunday 16th of June 2024 07:42:10 PM CDT,"<script>
 
 
  // const letters = ['a', 'b', 'c']
  // // const first = letters[0]
  // // const second = letters[1]
 
  // var [churchill, roosevelt, stalin] = letters
 
  // console.log('churchill', churchill)
  // console.log('roosevelt', roosevelt)
  // console.log('stalin', stalin)
 
  // const computers = {
  //   special: 5000,
  //   fancy: 2000,
  //   small: 500,
  // }
 
  // // const small = computers.small
  // // const fancy = computers.fancy
 
  // const { small, fancy } = computers
  // computers.small = 800
 
  // console.log('small', small)
  // console.log('fancy', fancy)
  // console.log('computers', computers)
 
 
  // const letters = ['a', 'b', 'c']
  // const letterD = 'd'
  // const fourLetters = ['start', ...letters, letterD, 'end']
  // console.log('fourLetters', fourLetters)
  // const copy = [...letters]
  // letters[0] = 'A'
  // console.log('copy', copy)
  // console.log('letters', letters)
 
  // const computers = {
  //   special: 5000,
  //   fancy: 2000,
  //   small: 500,
  // }
  // const electronics = {
  //   phone: 400,
  //   special: 4000,
  //   ...computers,
  // }
  // console.log('computers', computers)
  // console.log('electronics', electronics)
 
  // const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
 
  // // Array of the second and third letters
  // const [first, second, ...array] = letters
  // console.log('array', array)
 
  // const computers = {
  //   special: 5000,
  //   fancy: 2000,
  //   small: 500,
  // }
  // const { special, fancy, ...discount } = computers
  // console.log('discount', discount)
  // var x = 1
  // let y = 2
  // const z = 3
 
  // // let y = 1
  // y = 5
 
  // console.log('x', x)
  // console.log('y (which we know will be 2):', y)
  // console.log('z', z)
 
  function getCostVar (taxed) {
    var price = 100
 
    if (taxed) {
      var price = price + 10
      console.log('Price with tax:', price) // 110
    }
 
    console.log('Price without tax:', price)
  }
  getCostVar(true)
 
  function getCostConst (taxed) {
    let price = 100
 
    if (taxed) {
      let price = price + 10
      console.log('Price with tax:', price)
    }
 
    console.log('Price without tax:', price)
  }
  getCostConst(true)
</script>"
m6EHxPGp,"""Button Callbacks"" rev_02",pleasedontcode,Arduino,Sunday 16th of June 2024 07:19:13 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Button Callbacks""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-06-17 00:18:50

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Implement a system using the EasyButton library to */
	/* detect single and long presses on a push button */
	/* connected to pin D2, triggering specific actions */
	/* for each event. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>  //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void onPressed(void);
void onPressedForDuration(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t mybutton_PushButton_PIN_D2 = 2;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(mybutton_PushButton_PIN_D2);  // Initialize the EasyButton instance with the pin number

void setup(void)
{
  // Initialize serial communication
  Serial.begin(9600);

  // Initialize the button
  button.begin();
  
  // Add the callback function to be called when the button is pressed
  button.onPressed(onPressed);

  // Add the callback function to be called when the button is pressed for at least the given time
  button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
  // Continuously read the status of the button
  button.read();
}

// Callback function to be called when the button is pressed
void onPressed()
{
  // Code to be executed when the button is pressed
  Serial.println(""Button pressed"");
}

// Callback function to be called when the button is pressed for the given duration
void onPressedForDuration()
{
  // Code to be executed when the button is pressed for the given duration
  Serial.println(""Button pressed for 2 seconds"");
}

/* END CODE */"
W35qSWhD,2024-06-16_stats.json,rdp_snitch,JSON,Sunday 16th of June 2024 07:18:32 PM CDT,"{
  ""ip"": {
    ""60.255.174.158"": 6,
    ""116.140.196.215"": 6,
    ""96.51.53.164"": 9,
    ""104.248.154.46"": 48,
    ""120.89.61.252"": 6,
    ""187.137.198.132"": 3,
    ""144.126.223.85"": 3,
    ""2.57.149.92"": 9,
    ""147.185.132.228"": 9,
    ""24.199.97.114"": 9,
    ""87.251.75.64"": 3,
    ""180.93.172.29"": 3,
    ""172.232.224.143"": 12,
    ""94.26.249.208"": 3,
    ""212.70.149.142"": 3,
    ""103.166.182.180"": 3,
    ""194.165.16.37"": 12,
    ""167.179.37.82"": 3,
    ""172.233.176.219"": 3,
    ""45.227.254.49"": 9,
    ""185.170.144.3"": 6,
    ""64.124.50.139"": 6,
    ""118.122.144.137"": 3,
    ""103.121.74.4"": 3,
    ""206.189.28.240"": 12,
    ""205.210.31.177"": 9,
    ""159.203.164.232"": 3,
    ""139.162.41.168"": 3,
    ""80.94.95.190"": 6,
    ""199.45.154.60"": 3,
    ""165.154.174.206"": 3,
    ""137.184.228.142"": 3,
    ""45.79.239.134"": 12,
    ""205.210.31.170"": 9,
    ""167.94.145.107"": 3,
    ""185.196.220.41"": 9,
    ""45.136.254.145"": 3,
    ""165.154.134.152"": 3,
    ""194.165.16.76"": 6,
    ""194.165.16.73"": 6,
    ""154.221.19.52"": 3,
    ""190.85.232.116"": 3,
    ""45.227.254.26"": 6,
    ""205.210.31.74"": 9
  },
  ""asn"": {
    ""AS4837"": 12,
    ""AS6327"": 9,
    ""AS14061"": 78,
    ""AS9658"": 6,
    ""AS8151"": 3,
    ""AS208312"": 9,
    ""AS396982"": 36,
    ""AS208091"": 3,
    ""AS135944"": 3,
    ""AS63949"": 30,
    ""AS49505"": 3,
    ""AS204428"": 9,
    ""AS135905"": 3,
    ""AS48721"": 24,
    ""AS9902"": 3,
    ""AS267784"": 15,
    ""AS197414"": 6,
    ""AS6461"": 6,
    ""AS4134"": 3,
    ""AS134886"": 3,
    ""AS398722"": 3,
    ""AS135377"": 6,
    ""AS398705"": 3,
    ""AS208046"": 9,
    ""AS56309"": 3,
    ""AS142403"": 3,
    ""AS14080"": 3
  },
  ""isp"": {
    ""China Unicom China169 Network"": 6,
    ""China Unicom CHINA169 Network"": 6,
    ""Shaw Communications Inc."": 9,
    ""DigitalOcean, LLC"": 78,
    ""Eastern Telecommunications Philippines, Inc."": 6,
    ""Uninet S.A. de C.V."": 3,
    ""Red Byte LLC"": 9,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 9,
    ""SPT"": 3,
    ""Akamai Technologies, Inc."": 30,
    ""OOO \""Network of data-centers \""Selectel\"""": 3,
    ""SS-Net"": 9,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""Flyservers S.A."": 39,
    ""NeocomISP Limited"": 3,
    ""Zayo Bandwidth"": 6,
    ""Chinanet"": 3,
    ""Super Sonic Broadband Pvt. Ltd"": 3,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""ColocationX Ltd."": 9,
    ""Siamdata Communication Co., ltd."": 3,
    ""Guangzhou Yisu Cloud Limited"": 3,
    ""Telmex Colombia S.A."": 3
  },
  ""org"": {
    ""SiChuan Cable TV Network CO., LTD"": 6,
    ""China United Network Communications Corporation Limited"": 6,
    ""Shaw Communications Inc"": 9,
    ""DigitalOcean, LLC"": 75,
    ""Eastern Telecommunications Philippines, Inc"": 6,
    ""UNINET"": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 3,
    ""Saigon Postel Corporation"": 3,
    ""Akamai Technologies, Inc."": 15,
    ""Unknown"": 3,
    ""Global Communication Net Plc"": 3,
    ""Zozo Software Company Limited"": 3,
    ""Flyservers S.A"": 24,
    ""NeocomISP Limited"": 3,
    ""UAB Host Baltic"": 15,
    ""Xhostis"": 6,
    ""Microsoft Corporation"": 6,
    ""Chinanet SC"": 3,
    ""Super Sonic Broadband Pvt Ltd"": 3,
    ""Digital Ocean"": 3,
    ""Linode, LLC"": 3,
    ""Unmanaged LTD"": 6,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Linode"": 12,
    ""Makut Investments"": 9,
    ""ReadyIDC Co., Ltd"": 3,
    ""Ucloud Information Technology"": 3,
    ""Ancent Group Limited"": 3,
    ""Telmex Colombia S.A"": 3
  },
  ""regionName"": {
    ""Sichuan"": 9,
    ""Beijing"": 6,
    ""Alberta"": 9,
    ""Central Singapore"": 48,
    ""Metro Manila"": 6,
    ""Sonora"": 3,
    ""California"": 54,
    ""Lesser Poland"": 9,
    ""North Holland"": 9,
    ""Ho Chi Minh"": 3,
    ""Jakarta"": 12,
    ""Moscow"": 3,
    ""Sofia-Capital"": 9,
    ""Hanoi"": 3,
    ""Kaunas"": 24,
    ""Phnom Penh"": 3,
    ""Florida"": 3,
    ""Vilnius"": 15,
    ""Washington"": 6,
    ""Maharashtra"": 3,
    ""England"": 15,
    ""New Jersey"": 3,
    ""North West"": 3,
    ""New York"": 3,
    ""New South Wales"": 12,
    ""Michigan"": 3,
    ""Virginia"": 9,
    ""Nonthaburi"": 3,
    ""Eastern"": 3,
    ""Bogota D.C."": 3
  },
  ""country"": {
    ""China"": 15,
    ""Canada"": 9,
    ""Singapore"": 51,
    ""Philippines"": 6,
    ""Mexico"": 3,
    ""United States"": 81,
    ""Poland"": 9,
    ""The Netherlands"": 9,
    ""Vietnam"": 6,
    ""Indonesia"": 12,
    ""Russia"": 3,
    ""Bulgaria"": 9,
    ""Lithuania"": 39,
    ""Cambodia"": 3,
    ""India"": 3,
    ""United Kingdom"": 15,
    ""Australia"": 12,
    ""Thailand"": 3,
    ""Hong Kong"": 3,
    ""Colombia"": 3
  },
  ""account"": {
    ""(empty)"": 24,
    ""hello"": 141,
    ""Domain"": 18,
    ""CNEOvlhQf"": 3,
    ""zSPswu"": 3,
    ""YNnWXF"": 3,
    ""Administr"": 15,
    ""Test"": 54,
    ""fOsjPseeq"": 3,
    ""ckdiEq"": 3,
    ""QXgXyu"": 3,
    ""Administrator"": 6,
    ""CZyQXaEve"": 3,
    ""YulYJy"": 3,
    ""WIBeLK"": 3,
    ""hcjapAfpL"": 3,
    ""wOUTqc"": 3,
    ""VTlZle"": 3
  },
  ""keyboard"": {
    ""Unknown"": 294
  },
  ""client_build"": {
    ""Unknown"": 294
  },
  ""client_name"": {
    ""Unknown"": 294
  },
  ""ip_type"": {
    ""Unknown"": 129,
    ""hosting"": 156,
    ""mobile"": 3,
    ""proxy"": 6
  }
}"
cv534Kzg,"""Button Actions"" rev_01",pleasedontcode,Arduino,Sunday 16th of June 2024 07:17:52 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Button Actions""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-06-17 00:16:49

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Implement a system using the EasyButton library to */
	/* detect single and long presses on a push button */
	/* connected to pin D2, triggering specific actions */
	/* for each event. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>  //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void onPressed(void);
void onPressedForDuration(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t mybutton_PushButton_PIN_D2 = 2;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(mybutton_PushButton_PIN_D2);  // Initialize the EasyButton instance with the pin number

void setup(void)
{
  // Initialize serial communication
  Serial.begin(9600);

  // Initialize the button
  button.begin();
  
  // Add the callback function to be called when the button is pressed
  button.onPressed(onPressed);

  // Add the callback function to be called when the button is pressed for at least the given time
  button.onPressedFor(2000, onPressedForDuration);
}

void loop(void)
{
  // Continuously read the status of the button
  button.read();
}

// Callback function to be called when the button is pressed
void onPressed()
{
  // Code to be executed when the button is pressed
  Serial.println(""Button pressed"");
}

// Callback function to be called when the button is pressed for the given duration
void onPressedForDuration()
{
  // Code to be executed when the button is pressed for the given duration
  Serial.println(""Button pressed for 2 seconds"");
}

/* END CODE */"
AtsZNFqf,2024-06-16_stats.json,rdp_snitch,JSON,Sunday 16th of June 2024 07:16:18 PM CDT,"{
  ""ip"": {
    ""60.255.174.158"": 4,
    ""116.140.196.215"": 4,
    ""96.51.53.164"": 6,
    ""104.248.154.46"": 32,
    ""120.89.61.252"": 4,
    ""187.137.198.132"": 2,
    ""144.126.223.85"": 2,
    ""2.57.149.92"": 6,
    ""147.185.132.228"": 6,
    ""24.199.97.114"": 6,
    ""87.251.75.64"": 2,
    ""180.93.172.29"": 2,
    ""172.232.224.143"": 8,
    ""94.26.249.208"": 2,
    ""212.70.149.142"": 2,
    ""103.166.182.180"": 2,
    ""194.165.16.37"": 8,
    ""167.179.37.82"": 2,
    ""172.233.176.219"": 2,
    ""45.227.254.49"": 6,
    ""185.170.144.3"": 4,
    ""64.124.50.139"": 4,
    ""118.122.144.137"": 2,
    ""103.121.74.4"": 2,
    ""206.189.28.240"": 8,
    ""205.210.31.177"": 6,
    ""159.203.164.232"": 2,
    ""139.162.41.168"": 2,
    ""80.94.95.190"": 4,
    ""199.45.154.60"": 2,
    ""165.154.174.206"": 2,
    ""137.184.228.142"": 2,
    ""45.79.239.134"": 8,
    ""205.210.31.170"": 6,
    ""167.94.145.107"": 2,
    ""185.196.220.41"": 6,
    ""45.136.254.145"": 2,
    ""165.154.134.152"": 2,
    ""194.165.16.76"": 4,
    ""194.165.16.73"": 4,
    ""154.221.19.52"": 2,
    ""190.85.232.116"": 2,
    ""45.227.254.26"": 4,
    ""205.210.31.74"": 6
  },
  ""asn"": {
    ""AS4837"": 8,
    ""AS6327"": 6,
    ""AS14061"": 52,
    ""AS9658"": 4,
    ""AS8151"": 2,
    ""AS208312"": 6,
    ""AS396982"": 24,
    ""AS208091"": 2,
    ""AS135944"": 2,
    ""AS63949"": 20,
    ""AS49505"": 2,
    ""AS204428"": 6,
    ""AS135905"": 2,
    ""AS48721"": 16,
    ""AS9902"": 2,
    ""AS267784"": 10,
    ""AS197414"": 4,
    ""AS6461"": 4,
    ""AS4134"": 2,
    ""AS134886"": 2,
    ""AS398722"": 2,
    ""AS135377"": 4,
    ""AS398705"": 2,
    ""AS208046"": 6,
    ""AS56309"": 2,
    ""AS142403"": 2,
    ""AS14080"": 2
  },
  ""isp"": {
    ""China Unicom China169 Network"": 4,
    ""China Unicom CHINA169 Network"": 4,
    ""Shaw Communications Inc."": 6,
    ""DigitalOcean, LLC"": 52,
    ""Eastern Telecommunications Philippines, Inc."": 4,
    ""Uninet S.A. de C.V."": 2,
    ""Red Byte LLC"": 6,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 6,
    ""SPT"": 2,
    ""Akamai Technologies, Inc."": 20,
    ""OOO \""Network of data-centers \""Selectel\"""": 2,
    ""SS-Net"": 6,
    ""Vietnam Posts and Telecommunications Group"": 2,
    ""Flyservers S.A."": 26,
    ""NeocomISP Limited"": 2,
    ""Zayo Bandwidth"": 4,
    ""Chinanet"": 2,
    ""Super Sonic Broadband Pvt. Ltd"": 2,
    ""Censys, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""ColocationX Ltd."": 6,
    ""Siamdata Communication Co., ltd."": 2,
    ""Guangzhou Yisu Cloud Limited"": 2,
    ""Telmex Colombia S.A."": 2
  },
  ""org"": {
    ""SiChuan Cable TV Network CO., LTD"": 4,
    ""China United Network Communications Corporation Limited"": 4,
    ""Shaw Communications Inc"": 6,
    ""DigitalOcean, LLC"": 50,
    ""Eastern Telecommunications Philippines, Inc"": 4,
    ""UNINET"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 2,
    ""Saigon Postel Corporation"": 2,
    ""Akamai Technologies, Inc."": 10,
    ""Unknown"": 2,
    ""Global Communication Net Plc"": 2,
    ""Zozo Software Company Limited"": 2,
    ""Flyservers S.A"": 16,
    ""NeocomISP Limited"": 2,
    ""UAB Host Baltic"": 10,
    ""Xhostis"": 4,
    ""Microsoft Corporation"": 4,
    ""Chinanet SC"": 2,
    ""Super Sonic Broadband Pvt Ltd"": 2,
    ""Digital Ocean"": 2,
    ""Linode, LLC"": 2,
    ""Unmanaged LTD"": 4,
    ""Censys, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Linode"": 8,
    ""Makut Investments"": 6,
    ""ReadyIDC Co., Ltd"": 2,
    ""Ucloud Information Technology"": 2,
    ""Ancent Group Limited"": 2,
    ""Telmex Colombia S.A"": 2
  },
  ""regionName"": {
    ""Sichuan"": 6,
    ""Beijing"": 4,
    ""Alberta"": 6,
    ""Central Singapore"": 32,
    ""Metro Manila"": 4,
    ""Sonora"": 2,
    ""California"": 36,
    ""Lesser Poland"": 6,
    ""North Holland"": 6,
    ""Ho Chi Minh"": 2,
    ""Jakarta"": 8,
    ""Moscow"": 2,
    ""Sofia-Capital"": 6,
    ""Hanoi"": 2,
    ""Kaunas"": 16,
    ""Phnom Penh"": 2,
    ""Florida"": 2,
    ""Vilnius"": 10,
    ""Washington"": 4,
    ""Maharashtra"": 2,
    ""England"": 10,
    ""New Jersey"": 2,
    ""North West"": 2,
    ""New York"": 2,
    ""New South Wales"": 8,
    ""Michigan"": 2,
    ""Virginia"": 6,
    ""Nonthaburi"": 2,
    ""Eastern"": 2,
    ""Bogota D.C."": 2
  },
  ""country"": {
    ""China"": 10,
    ""Canada"": 6,
    ""Singapore"": 34,
    ""Philippines"": 4,
    ""Mexico"": 2,
    ""United States"": 54,
    ""Poland"": 6,
    ""The Netherlands"": 6,
    ""Vietnam"": 4,
    ""Indonesia"": 8,
    ""Russia"": 2,
    ""Bulgaria"": 6,
    ""Lithuania"": 26,
    ""Cambodia"": 2,
    ""India"": 2,
    ""United Kingdom"": 10,
    ""Australia"": 8,
    ""Thailand"": 2,
    ""Hong Kong"": 2,
    ""Colombia"": 2
  },
  ""account"": {
    ""(empty)"": 16,
    ""hello"": 94,
    ""Domain"": 12,
    ""CNEOvlhQf"": 2,
    ""zSPswu"": 2,
    ""YNnWXF"": 2,
    ""Administr"": 10,
    ""Test"": 36,
    ""fOsjPseeq"": 2,
    ""ckdiEq"": 2,
    ""QXgXyu"": 2,
    ""Administrator"": 4,
    ""CZyQXaEve"": 2,
    ""YulYJy"": 2,
    ""WIBeLK"": 2,
    ""hcjapAfpL"": 2,
    ""wOUTqc"": 2,
    ""VTlZle"": 2
  },
  ""keyboard"": {
    ""Unknown"": 196
  },
  ""client_build"": {
    ""Unknown"": 196
  },
  ""client_name"": {
    ""Unknown"": 196
  },
  ""ip_type"": {
    ""Unknown"": 86,
    ""hosting"": 104,
    ""mobile"": 2,
    ""proxy"": 4
  }
}"
hP8aZsKp,2024-06-16_stats.json,rdp_snitch,JSON,Sunday 16th of June 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""60.255.174.158"": 2,
    ""116.140.196.215"": 2,
    ""96.51.53.164"": 3,
    ""104.248.154.46"": 16,
    ""120.89.61.252"": 2,
    ""187.137.198.132"": 1,
    ""144.126.223.85"": 1,
    ""2.57.149.92"": 3,
    ""147.185.132.228"": 3,
    ""24.199.97.114"": 3,
    ""87.251.75.64"": 1,
    ""180.93.172.29"": 1,
    ""172.232.224.143"": 4,
    ""94.26.249.208"": 1,
    ""212.70.149.142"": 1,
    ""103.166.182.180"": 1,
    ""194.165.16.37"": 4,
    ""167.179.37.82"": 1,
    ""172.233.176.219"": 1,
    ""45.227.254.49"": 3,
    ""185.170.144.3"": 2,
    ""64.124.50.139"": 2,
    ""118.122.144.137"": 1,
    ""103.121.74.4"": 1,
    ""206.189.28.240"": 4,
    ""205.210.31.177"": 3,
    ""159.203.164.232"": 1,
    ""139.162.41.168"": 1,
    ""80.94.95.190"": 2,
    ""199.45.154.60"": 1,
    ""165.154.174.206"": 1,
    ""137.184.228.142"": 1,
    ""45.79.239.134"": 4,
    ""205.210.31.170"": 3,
    ""167.94.145.107"": 1,
    ""185.196.220.41"": 3,
    ""45.136.254.145"": 1,
    ""165.154.134.152"": 1,
    ""194.165.16.76"": 2,
    ""194.165.16.73"": 2,
    ""154.221.19.52"": 1,
    ""190.85.232.116"": 1,
    ""45.227.254.26"": 2,
    ""205.210.31.74"": 3
  },
  ""asn"": {
    ""AS4837"": 4,
    ""AS6327"": 3,
    ""AS14061"": 26,
    ""AS9658"": 2,
    ""AS8151"": 1,
    ""AS208312"": 3,
    ""AS396982"": 12,
    ""AS208091"": 1,
    ""AS135944"": 1,
    ""AS63949"": 10,
    ""AS49505"": 1,
    ""AS204428"": 3,
    ""AS135905"": 1,
    ""AS48721"": 8,
    ""AS9902"": 1,
    ""AS267784"": 5,
    ""AS197414"": 2,
    ""AS6461"": 2,
    ""AS4134"": 1,
    ""AS134886"": 1,
    ""AS398722"": 1,
    ""AS135377"": 2,
    ""AS398705"": 1,
    ""AS208046"": 3,
    ""AS56309"": 1,
    ""AS142403"": 1,
    ""AS14080"": 1
  },
  ""isp"": {
    ""China Unicom China169 Network"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Shaw Communications Inc."": 3,
    ""DigitalOcean, LLC"": 26,
    ""Eastern Telecommunications Philippines, Inc."": 2,
    ""Uninet S.A. de C.V."": 1,
    ""Red Byte LLC"": 3,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 3,
    ""SPT"": 1,
    ""Akamai Technologies, Inc."": 10,
    ""OOO \""Network of data-centers \""Selectel\"""": 1,
    ""SS-Net"": 3,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""Flyservers S.A."": 13,
    ""NeocomISP Limited"": 1,
    ""Zayo Bandwidth"": 2,
    ""Chinanet"": 1,
    ""Super Sonic Broadband Pvt. Ltd"": 1,
    ""Censys, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ColocationX Ltd."": 3,
    ""Siamdata Communication Co., ltd."": 1,
    ""Guangzhou Yisu Cloud Limited"": 1,
    ""Telmex Colombia S.A."": 1
  },
  ""org"": {
    ""SiChuan Cable TV Network CO., LTD"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Shaw Communications Inc"": 3,
    ""DigitalOcean, LLC"": 25,
    ""Eastern Telecommunications Philippines, Inc"": 2,
    ""UNINET"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 1,
    ""Saigon Postel Corporation"": 1,
    ""Akamai Technologies, Inc."": 5,
    ""Unknown"": 1,
    ""Global Communication Net Plc"": 1,
    ""Zozo Software Company Limited"": 1,
    ""Flyservers S.A"": 8,
    ""NeocomISP Limited"": 1,
    ""UAB Host Baltic"": 5,
    ""Xhostis"": 2,
    ""Microsoft Corporation"": 2,
    ""Chinanet SC"": 1,
    ""Super Sonic Broadband Pvt Ltd"": 1,
    ""Digital Ocean"": 1,
    ""Linode, LLC"": 1,
    ""Unmanaged LTD"": 2,
    ""Censys, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Linode"": 4,
    ""Makut Investments"": 3,
    ""ReadyIDC Co., Ltd"": 1,
    ""Ucloud Information Technology"": 1,
    ""Ancent Group Limited"": 1,
    ""Telmex Colombia S.A"": 1
  },
  ""regionName"": {
    ""Sichuan"": 3,
    ""Beijing"": 2,
    ""Alberta"": 3,
    ""Central Singapore"": 16,
    ""Metro Manila"": 2,
    ""Sonora"": 1,
    ""California"": 18,
    ""Lesser Poland"": 3,
    ""North Holland"": 3,
    ""Ho Chi Minh"": 1,
    ""Jakarta"": 4,
    ""Moscow"": 1,
    ""Sofia-Capital"": 3,
    ""Hanoi"": 1,
    ""Kaunas"": 8,
    ""Phnom Penh"": 1,
    ""Florida"": 1,
    ""Vilnius"": 5,
    ""Washington"": 2,
    ""Maharashtra"": 1,
    ""England"": 5,
    ""New Jersey"": 1,
    ""North West"": 1,
    ""New York"": 1,
    ""New South Wales"": 4,
    ""Michigan"": 1,
    ""Virginia"": 3,
    ""Nonthaburi"": 1,
    ""Eastern"": 1,
    ""Bogota D.C."": 1
  },
  ""country"": {
    ""China"": 5,
    ""Canada"": 3,
    ""Singapore"": 17,
    ""Philippines"": 2,
    ""Mexico"": 1,
    ""United States"": 27,
    ""Poland"": 3,
    ""The Netherlands"": 3,
    ""Vietnam"": 2,
    ""Indonesia"": 4,
    ""Russia"": 1,
    ""Bulgaria"": 3,
    ""Lithuania"": 13,
    ""Cambodia"": 1,
    ""India"": 1,
    ""United Kingdom"": 5,
    ""Australia"": 4,
    ""Thailand"": 1,
    ""Hong Kong"": 1,
    ""Colombia"": 1
  },
  ""account"": {
    ""(empty)"": 8,
    ""hello"": 47,
    ""Domain"": 6,
    ""CNEOvlhQf"": 1,
    ""zSPswu"": 1,
    ""YNnWXF"": 1,
    ""Administr"": 5,
    ""Test"": 18,
    ""fOsjPseeq"": 1,
    ""ckdiEq"": 1,
    ""QXgXyu"": 1,
    ""Administrator"": 2,
    ""CZyQXaEve"": 1,
    ""YulYJy"": 1,
    ""WIBeLK"": 1,
    ""hcjapAfpL"": 1,
    ""wOUTqc"": 1,
    ""VTlZle"": 1
  },
  ""keyboard"": {
    ""Unknown"": 98
  },
  ""client_build"": {
    ""Unknown"": 98
  },
  ""client_name"": {
    ""Unknown"": 98
  },
  ""ip_type"": {
    ""Unknown"": 43,
    ""hosting"": 52,
    ""mobile"": 1,
    ""proxy"": 2
  }
}"
kf8DrpGf,ass crap,bobmarley12345,Lua,Sunday 16th of June 2024 05:33:12 PM CDT,"-- PX/Y/Z MUST BE STRINGS DUE TO DOUBLE TOSTRING CONVERSION
function setLamp(pX, pY, pZ, isOn)
    local r, g, b = ""0"", ""0"", ""0""

    if (isOn) then
        r, g, b = ""90"", ""140"", ""240""
    else
        r, g, b = ""0"", ""0"", ""0""
    end

    adminapi.setLuxColour(""world"", pX, pY, pZ, r, g, b)
    -- adminapi.setLuxColour(""world"", pX,  pY,  pZ,  r,   g,   b)
end

local list = {
    {x = ""\\-21"", y = ""84"", z = ""\\-254""},
    {x = ""\\-7"",  y = ""84"", z = ""\\-254""},
    {x = ""\\-6"",  y = ""84"", z = ""\\-261""},
    {x = ""\\-5"",  y = ""84"", z = ""\\-261""},
    {x = ""6"",     y = ""84"", z = ""\\-258""},
    {x = ""9"",     y = ""84"", z = ""\\-247""},
    {x = ""9"",     y = ""84"", z = ""\\-246""},
    {x = ""9"",     y = ""84"", z = ""\\-245""},
    {x = ""9"",     y = ""84"", z = ""\\-239""},
    {x = ""9"",     y = ""84"", z = ""\\-237""},
    {x = ""9"",     y = ""84"", z = ""\\-231""},
    {x = ""9"",     y = ""84"", z = ""\\-230""},
    {x = ""9"",     y = ""84"", z = ""\\-229""},
    {x = ""6"",     y = ""84"", z = ""\\-218""},
    {x = ""\\-5"",  y = ""84"", z = ""\\-215""},
    {x = ""\\-6"",  y = ""84"", z = ""\\-215""},
    {x = ""\\-7"",  y = ""84"", z = ""\\-222""},
    {x = ""\\-21"", y = ""84"", z = ""\\-222""},
    {x = ""\\-22"", y = ""84"", z = ""\\-215""},
    {x = ""\\-23"", y = ""84"", z = ""\\-215""},
    {x = ""\\-34"", y = ""84"", z = ""\\-218""},
    {x = ""\\-37"", y = ""84"", z = ""\\-229""},
    {x = ""\\-37"", y = ""84"", z = ""\\-230""},
    {x = ""\\-37"", y = ""84"", z = ""\\-231""},
    {x = ""\\-37"", y = ""84"", z = ""\\-237""},
    {x = ""\\-37"", y = ""84"", z = ""\\-239""},
    {x = ""\\-37"", y = ""84"", z = ""\\-245""},
    {x = ""\\-37"", y = ""84"", z = ""\\-246""},
    {x = ""\\-37"", y = ""84"", z = ""\\-247""},
    {x = ""\\-34"", y = ""84"", z = ""\\-258""},
    {x = ""\\-23"", y = ""84"", z = ""\\-261""},
    {x = ""\\-22"", y = ""84"", z = ""\\-261""}
}

for index, value in ipairs(list) do
    setLamp(value.x, value.y, value.z, false)
end

local function PushNextLamp(theLamp, lastLamp)
    if (theLamp ~= nil) then
        setLamp(theLamp.x, theLamp.y, theLamp.z, true)
    end
    if (lastLamp ~= nil) then
        setLamp(lastLamp.x, lastLamp.y, lastLamp.z, false)
    end
end

while true do
    local delay = 0.08

    local last = nil
    for index, value in ipairs(list) do
        PushNextLamp(value, last)
        last = value
        sleep(delay)
    end

    PushNextLamp(nil, last)
    sleep(delay)
end
"
