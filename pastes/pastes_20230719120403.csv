id,title,username,language,date,content
gt68jeJ5,Steinkjer,rabbnix,C++,Wednesday 19th of July 2023 06:43:19 AM CDT,"Fikk i meg 10 gram med amfetamin som ikke bare ikke var amfetamin.. i løpet av de 3 ukene vi var der 
I Steinkjer..for 2 år siden...

Den filmen fra Steinkjer er redigert på et eller annet vis..
Så allesom har sett den filmen vit at den er redigert mot meg# kåre

Ja linda var med opp dit hu og..
"
pkAc5KNM,Rekker,rabbnix,C++,Wednesday 19th of July 2023 06:38:32 AM CDT,Ryktene sier at alle de 6 øverste rekkene i simondarres vei må gå/tas?
qixtTsks,Misbrukt,rabbnix,C++,Wednesday 19th of July 2023 06:33:54 AM CDT,"Hvorfor sitter folk i darpa utstyr?
Dere ser på et hologram laget av?

Anne og jon sitt navn blir brukt hele tiden.

Og det går rykter om at det er soner på Lørenskog og.
Fått høre ar utstyret blir misbrukt. 

Ikke glem at pappa ble henrettet. 


Sett meg i avhør mvh han I simondarres vei 56.
"
kwPgwAAb,XAMPP automatically start Apache and MySQL on MacOS startup.md,Virajsinh,Bash,Wednesday 19th of July 2023 06:07:49 AM CDT,"## XAMPP automatically start Apache and MySQL on MacOS startup

1. Change directory.

```bash
cd /Library/LaunchDaemons
```

2. Create Apache file for startup.

```bash
sudo vim apachefriends.xampp.apache.start.plist
```

3. Put these into Apache file.

```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
  <dict>
    <key>EnableTransactions</key>
    <true/>

    <key>Label</key>
    <string>apachefriends.xampp.apache.start</string>

    <key>ProgramArguments</key>
    <array>
      <string>/Applications/XAMPP/xamppfiles/xampp</string>
      <string>startapache</string>
    </array>

    <key>RunAtLoad</key>
    <true/>

    <key>WorkingDirectory</key>
    <string>/Applications/XAMPP/xamppfiles</string>

    <key>KeepAlive</key>
    <false/>

    <key>AbandonProcessGroup</key>
    <true/>
  </dict>
</plist>
```

4. Create MySQL file for startup.

```bash
sudo vim apachefriends.xampp.mysql.start.plist
```

5. Put these into MySQL file.

```xml
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
  <dict>
    <key>EnableTransactions</key>
    <true/>

    <key>Label</key>
    <string>apachefriends.xampp.mysql.start</string>

    <key>ProgramArguments</key>
    <array>
      <string>/Applications/XAMPP/xamppfiles/xampp</string>
      <string>startmysql</string>
    </array>

    <key>RunAtLoad</key>
    <true/>

    <key>WorkingDirectory</key>
    <string>/Applications/XAMPP/xamppfiles</string>

    <key>KeepAlive</key>
    <false/>

    <key>AbandonProcessGroup</key>
    <true/>
  </dict>
</plist>
```

6. Restart your computer to test it out.

```bash
sudo shutdown -r now
```

---

Works on: MacOS Mojave 10.14.2, XAMPP 7.2.9-0"
SzkYSQgN,Laundry Simulator script,A_GUES,Lua,Wednesday 19th of July 2023 06:06:18 AM CDT,"local MainDir = 'Bloxain'
_G.BloxainSettings = {Version = '0.7', Path = MainDir, Games = MainDir..'/Games', Modules = MainDir..'/Modules', WebAddress = 'https://raw.githubusercontent.com/bloxain/Roblox/main/', OldUpdate = MainDir..'/Update.JSON'}
local Modules = _G.BloxainSettings.Modules
local WebAddress = _G.BloxainSettings.WebAddress
pcall(function() loadstring(syn.request({Url = WebAddress..Modules..'/Updater.lua', Method = ""GET""}).Body)() end)
loadstring(readfile(Modules..'/Game_Finder.lua'))()
"
kHGrbWBd,data638,TestGuy1,JSON,Wednesday 19th of July 2023 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a314ea62a1ac00f3792a67174681d9bb5cee88330c6bd3ebef6e1b4da207956bf5ec64c7a45575dd113be42a682957ea9298cee8cda02747e97f72ff9a8918dffb6edbc83c80bb910cc822e5c2d794c4d0a6f2b73ac3d6074e0658c5ec6d74fcf354789ed8497ede4b57de8f4fc72791ce4125532dc7faf1248331fd48ad265d',
  otherdata: [
    '8797685425644a925128a22e75a06b33',
    'fcc6a7019bc0951e2bf49f149dd1e0e4',
    'e8af8c169db6354af646ecaa01cede04',
    '6759a87c3f10f09d0874ed17550051f6',
    'fab2d601b4b8056c4adf17b6a6592590',
    '16b4d10becb408b4f3df1dfed9a9ca9a',
    'a8522a1d99b3e66e3145da86dc95a4bc',
    '7fd6c4ab144f3c071fd5bc9619db7da6'
  ]
}"
Mc1Q7sBh,Untitled,Driics,Kotlin,Wednesday 19th of July 2023 05:59:01 AM CDT,"class PfpChartSegmentAnimator(
    animatorFactory: AnimatorFactory,
    observableWrapper: ObservableWrapper<List<AnimationFilter>, Payload>
) {
    private val animationWrapper: ObservableWrapper<List<AnimationFilter>, Payload> = observableWrapper
    private val animator: Animation = animatorFactory.createAnimator(0.5f, 0.0f, AccelerateDecelerateInterpolator())

    private val currentFilters: MutableList<AnimationFilter> = mutableListOf()
    private val targetFilters: MutableList<AnimationFilter> = mutableListOf()
    private val customFilters: MutableList<CustomAnimationFilter> = mutableListOf()

    private val animationData: ObservableData<List<AnimationFilter>, Unit> = ObservableData(emptyList())

    init {
        observableWrapper.registerObserver { filters, payload ->
            onDataSetChanged(filters, payload)
        }
    }

    private fun onDataSetChanged(filters: List<AnimationFilter>, payload: Payload) {
        if (!payload.animate) {
            animator.stop()
            updateAnimationData()
            return
        }

        currentFilters.clear()
        currentFilters.addAll(animationWrapper.getData())

        filters.sortedBy { it.startTime }

        targetFilters.clear()
        targetFilters.addAll(filters)

        if (currentFilters.size < targetFilters.size) {
            val firstFilter = targetFilters.first()
            val newFilter = createAnimationFilter(firstFilter.endTime, firstFilter.startValue)
            targetFilters.add(0, newFilter)
        } else {
            val lastFilter = currentFilters.last()
            val newFilter = createAnimationFilter(lastFilter.startTime, lastFilter.endValue)
            currentFilters.add(newFilter)
        }

        customFilters.clear()
        for (i in targetFilters.indices) {
            val currentFilter = currentFilters[i]
            val targetFilter = targetFilters[i]
            customFilters.add(CustomAnimationFilter(currentFilter, targetFilter))
        }

        animator.start(0.0f, 1.0f, payload.animate)
    }

    private fun createAnimationFilter(time: Long, value: Double): AnimationFilter {
        return AnimationFilter(time, value)
    }

    private fun updateAnimationData() {
        val data = if (animator.isRunning()) customFilters else animationWrapper.getData()
        animationData.updateData(data)
    }

    fun getAnimationData(): ObservableData<List<AnimationFilter>, Unit> {
        return animationData
    }

    fun isAnimating(): Boolean {
        return animator.isRunning()
    }

    fun onAnimationUpdate() {
        if (animator.isRunning()) {
            val progress = animator.getProgress()
            for (filter in customFilters) {
                filter.setProgress(progress)
            }
            updateAnimationData()
        }
    }
}"
dqgAMhv3,[Roblox] Axtra's Running Script,JannickP8,Lua,Wednesday 19th of July 2023 05:55:12 AM CDT,"--Axtra's Running Script
--When you hold ""C"" your WalkSpeed will be the runSpeed you can set 
--When you stop holding ""C"" your WalkSpeed will be the normalSpeed you can set
--reseting will stop the script so you can change the speeds

local runSpeed = 64 --change this to how fast you wanna run (16 = normal)
local normalSpeed = 16 --change this if you want your normal speed to be higher
local hum = game:GetService(""Players"").LocalPlayer.Character:WaitForChild(""Humanoid"")
local UserInputService = game:GetService(""UserInputService"")
local isRunning = false


local function onKeyPress(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end

    if input.KeyCode == Enum.KeyCode.C then
        print(""Running script!"")
		hum.WalkSpeed = runSpeed
        isRunning = true
    end
end


local function onKeyRelease(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end

    if input.KeyCode == Enum.KeyCode.C then
        print(""Stopped script."")
		hum.WalkSpeed = normalSpeed
        isRunning = false
    end
end


UserInputService.InputBegan:Connect(onKeyPress)
UserInputService.InputEnded:Connect(onKeyRelease)


while true do
    if isRunning then
        print(""Running..."")
    end
    wait() 
end
"
emHVUCKA,2. Cars regressor,makispaiktis,Python,Wednesday 19th of July 2023 05:37:16 AM CDT,"import numpy as np
import pandas as pd



# 1a. Read the dataset
cars_path = './autos.csv'
cars = pd.read_csv(cars_path)
print(cars.head(), '\n\n')

# 1b. Explore the dataset
shape = cars.shape
print(""---- Dataset contains {} rows-records with {} columns-features ----"".format(shape[0], shape[1]))
all_columns = list(cars.columns)
print(""Columns names:"", all_columns)
print('\n\n')

# 1c. Separate the target ('price') from the other features
target = 'price'
cars.dropna(axis=0, subset=[target], inplace=True)
y = cars[target]
cars.drop([target], axis=1, inplace=True)
shape = cars.shape
print(""Now, there are"", len(list(cars.columns)), ""columns (target = 'price') in the dataset"")



# 2a. Check for columns with missing data
print(""...Check for any columns with missing values...."")
cols_with_missing = [col for col in cars.columns if cars[col].isnull().any()]
print(""There are {}/{} columns with missing values:"".format(len(cols_with_missing), shape[1]), cols_with_missing, '\n\n')

# 2b. Find all the numerical cols AND categorical cols with low cardinality
numerical_cols = [cname for cname in cars.columns if cars[cname].dtype in ['int64', 'float64']]
categorical_cols = [cname for cname in cars.columns if cars[cname].dtype == ""object"" and cars[cname].nunique() < 10]
my_cols = numerical_cols + categorical_cols

print(""  Numerical cols ="", numerical_cols)
print(""Categorical cols ="", categorical_cols)
print("" All the columns ="", my_cols)
print(""Selected columns = {} = {} numerical + {} categorical"".format(len(my_cols), len(numerical_cols), len(categorical_cols)), '\n\n')

# 2c. Find out if there are cols with missing data in my selected columns (my_cols)
selected_with_missing = [col for col in my_cols if col in cols_with_missing]
print(""There are {}/{} selected columns with missing data: {}"".format(len(selected_with_missing), len(my_cols), selected_with_missing))
print(""...Need imputation..."")



# 3a. Work with the selected columns of the dataset (my_cols)
X = cars[my_cols].copy()

SELECTED = 1000
X = X.head(SELECTED)
y = y.head(SELECTED)
print(X.head(), '\n\n')

# 3b. Train, test, split
from sklearn.model_selection import train_test_split
X_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2, random_state=0)
print(""X_train = {}, X_valid = {}\ny_train = {}, y_valid = {}"".format(X_train.shape, X_valid.shape, y_train.shape, y_valid.shape))



# 4a. Imputer + OH encoder, since there are missing values and categorical columns
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder

numerical_transformer = SimpleImputer(strategy='constant')

categorical_transformer = Pipeline(steps=[('imputer', SimpleImputer(strategy='most_frequent')),
    ('onehot', OneHotEncoder(handle_unknown='ignore'))])

preprocessor = ColumnTransformer(transformers=[
        ('num', numerical_transformer, numerical_cols),
        ('cat', categorical_transformer, categorical_cols)])



# 5. Model = Regressor (regr) ---> Pipeline

from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import StandardScaler

regr = RandomForestRegressor(n_estimators=100, random_state=0)
pipeline = Pipeline([ ('preprocessor', preprocessor), ('model', regr), ('normalizer', StandardScaler()) ])
pipeline = Pipeline([ ('preprocessor', preprocessor), ('model', regr) ])
pipeline.steps



# 6. Evaluate the RandomForestRegressor

from sklearn.model_selection import cross_validate
from sklearn.metrics import mean_absolute_error

pipeline.fit(X_train, y_train)
preds = pipeline.predict(X_valid)
mae = mean_absolute_error(preds, y_valid)
mae_per_row = mae / X_train.shape[0]
price_per_row = y_train.mean()

print(""MAE with RFR ="", mae, '\n\n')
print(""MAE per row ="", mae_per_row)
print(""Price per row ="", price_per_row)
print(""This means that the model outputs an error of {:.3} $ in prices with average value of"".format(mae_per_row))
print(""{} $, so the error percentage is {:%}"".format(price_per_row, mae_per_row / price_per_row))



# 7. Evaluate with cross validation

from sklearn.model_selection import cross_val_score

scores = -1 * cross_val_score(pipeline, X, y, cv=5, scoring='neg_mean_absolute_error')
score = scores.mean()
mae_per_row = score / X_train.shape[0]
price_per_row = y_train.mean()

print(""Average MAE with RFR ="", score, '\n\n')
print(""MAE per row ="", mae_per_row)
print(""Price per row ="", price_per_row)
print(""This means that the model outputs an error of {:.3} $ in prices with average value of"".format(mae_per_row))
print(""{} $, so the error percentage is {:%}"".format(price_per_row, mae_per_row / price_per_row))



# 8. Some more regressors

from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor

""""""
# 8a. Polynomial Regressor
# Create polynomial features (degree=3)
poly_features = PolynomialFeatures(degree=3)
X_poly = poly_features.fit_transform(X_train)
# Create and fit the polynomial regression model
regr1 = LinearRegression()
regr1.fit(X_poly, y_train)
""""""
# 8a. Support Vector Machine Regressors
regr1 = SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.01)
# 8b. Support Vector Machine Regressors
regr2 = SVR(kernel='rbf', C=1e3, gamma='auto', epsilon=0.1)
# 8c. Decision Tree Regressor
regr3 = DecisionTreeRegressor()
# 8d. Random Forest Regressor
regr4 = RandomForestRegressor()
regrs = [regr1, regr2, regr3, regr4]
scores_list = []

for regr in regrs:
    pipeline = Pipeline([ ('preprocessor', preprocessor), ('model', regr) ])
    scores = -1 * cross_val_score(pipeline, X, y, cv=5, scoring='neg_mean_absolute_error')
    score = scores.mean()
    scores_list.append(score)

    print('-----------------------------------------')
    print(""{}. "".format(str(regr)))
    print(""Score ="", score)
    print('-------------------------------------------', '\n\n')



# 9. Summary of regressors - pipelines that I tried
best_regr = None
best_score = 10**20
print(""After cross-validation with 5-folds:"")

for i in range(len(regrs)):
    regr = regrs[i]
    score = scores_list[i]
    print(""{} ---> {}"".format(regr, score))
    if score < best_score:
        best_score = score
        best_regr = regr

print(""\n\n"", ""Best regressor = {} with average MAE  = {}"".format(best_regr, best_score))



# 10. Select the best regressor and evaluate it
# Since RFR is the best one, I can change the default values to find a better model

n_estimators_list = list(range(50, 301, 50))
random_state_list = [0, 1]
best_score = 10**20
best_rs = -1
best_ne = -1

for random_state in random_state_list:
    for n_estimators in n_estimators_list:
        regr = RandomForestRegressor(n_estimators=n_estimators, random_state=random_state)
        pipeline = Pipeline([ ('preprocessor', preprocessor), ('model', regr) ])
        scores = -1 * cross_val_score(pipeline, X, y, cv=5, scoring='neg_mean_absolute_error')
        score = scores.mean()

        print('-------------------------------------------------------------')
        print(""{}. "".format(str(regr)))
        print(""Score ="", score)
        print('-------------------------------------------------------------', '\n\n')

        if score < best_score:
            best_score = score
            best_rs = random_state
            best_ne = n_estimators



# 11. One last evaluation
best_regr = RandomForestRegressor(n_estimators=best_ne, random_state=best_rs)
pipeline = Pipeline([ ('preprocessor', preprocessor), ('model', best_regr) ])
best_scores = -1 * cross_val_score(pipeline, X, y, cv=5, scoring='neg_mean_absolute_error')
best_score = best_scores.mean()

print('-------------------------------------------------------------')
print(""Best regressor = {} with:"".format(str(best_regr)))
print(""Best score MAE ="", best_score)
print('-------------------------------------------------------------', '\n\n')
print(best_ne, best_rs)



# 12. Check the predicted values with the real ones
pipeline.fit(X_train, y_train)
preds = pipeline.predict(X_valid)
comparison = pd.DataFrame({ 'Real values': y_valid, 'Predictions' : preds })
print(comparison)"
d1wDwWmS,GA4 - app - flutter - click_submit_ad_listing,filipr27,Dart,Wednesday 19th of July 2023 05:36:58 AM CDT,"// click_submit_ad_listing
await FirebaseAnalytics.instance.logEvent(name: ""click_submit_ad_listing"");"
Hdu8auiG,GA4 - app - flutter - login,filipr27,Dart,Wednesday 19th of July 2023 05:35:52 AM CDT,"// login
await FirebaseAnalytics.instance.logEvent(
  name: ""login"",
  parameters: {
    ""method"": google,  // E.g. google, facebook, email
    ""business_type"": b2c,  // b2b or b2c
  },
);"
rYrPY2sB,CORYNA,QODRI123,HTML,Wednesday 19th of July 2023 05:26:26 AM CDT,"<!-- 1 jam lebih bersama CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/s5153qf89bbr1bgoww86ng00c11jnyoi"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Alamak CORYNA cakep amat pakai kacamata -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/otij2jmizkb2c5jq3emhrjcy0qydddfj"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Bagus amat BH CORYNA tanpa pakai tali gitu -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/675g01c7szuzx1nb1oj6vyjgu14b9aw5"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Baju hitam & celana kotak-kotak CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/epawxxuo1jrkyo7r464dv47f285wjn0k"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Baju merah CORYNA dilepas -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/z4pyveer1m6mnnm7wd6qm3zu5v5bhgu9"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Beginilah penampakan kamar mandi CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/es0emd327f5en2v8d31z2n3ipw4d8f3u"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- BH coklat CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/d6i9dsc2siwuvh5adhb9sgxk3v7qygq2"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Clmk CORYNA pakai satu jari dulu awalnya guis -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/yqww0274nictw4499xzjmeoepfl0tuaf"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Durasi singkat aja bareng CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/64g92yyau3map9mmo9r2em6xgp3uphwq"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Filter kucing ala CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/rx23hbk9r42btlurh3qnhcvz28p3ot7g"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Full buka-bukaan dulu CORYNA baru kemudian diakhir sopan -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/b8ju0zuptewk0u7r0mixj7bifbga8e7p"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Lah itu sempak tahun kapan sih milik CORYNA kok sudah kendor gitu -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/1wjo3k06681f748v2vbegf5wykerrc9y"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Lah lawak CORYNA bisa jilat susunya sendiri -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/afkoek9ygan5ycw0y2k5sxmfdun35a8l"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Macam-macam perlengkapan tempur CORYNA bergantung di pintu -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/c5uycxy7bhknbhrsurlrtmzki0osgu1c"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Masker hitam CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/2a9326yewx6pcsfzr1mws87oa3lppgqn"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Masker hitam CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/bmfctupd4l7hhqld86hi08ycr5xpblry"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Nah kelihatan jelas kan m3k1 CORYNA kek gimana -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/49y2y5o42da1a63zu1ctbspxaa97m09k"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Ngapain pakai masker segala sih CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/lir1wibu5zep0r63nlfdjm8i28pcuxax"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Pengen jadi kursi kalau lihat video CORYNA yang satu jni -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/mg0hvwnq3lo3cwb1vp8ghohnhp4n4tq2"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Sambil pipis gitu ya clmk CORYNA -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/d8for7et8gg9f6e162b12h1gqyiwlsmi"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Step awal colek m3k1 dulu baru kemudian CORYNA gesek-gesek -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/2d7402sben0ebszpes0w2562j7lfts9n"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Susu CORYNA Bisa-bisanya gak dikasih penahan BH -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/cegjk39pev172woftqgvcaapl8qhps6d"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

<!-- Watermark janj0k ganggu aja -->
<iframe width=""600"" height=""480"" src=""https://dooood.com/e/jpia8ifrpxrpwpem9h0bd3wp3fulr9p7"" scrolling=""no"" frameborder=""0"" allowfullscreen=""true""></iframe>

"
ZhX8JW8s,Collect List JS Advanced,TZinovieva,JavaScript,Wednesday 19th of July 2023 04:47:26 AM CDT,"function extractText() {
    let idEl = document.getElementById('items')
    let textArea = document.getElementById('result');
    textArea.textContent = idEl.textContent;
}

OR

function extractText() {
    let liElements = document.querySelectorAll('ul li');
    
    for (let li of liElements) {
        let textArea = document.getElementById('result');
        textArea.textContent += li.textContent + '\n'; 
    }  
}"
5cuvMk0r,Edit Element JS Advanced,TZinovieva,JavaScript,Wednesday 19th of July 2023 04:45:43 AM CDT,"function editElement(ref, match, replacer) {
    while (ref.textContent.includes(match)) {
        ref.textContent = ref.textContent.replace(match, replacer);
    }
}"
ZiPZ5XCt,Corsa Contro Il tempo bottom up unoptimized,informaticage,C++,Wednesday 19th of July 2023 04:34:57 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdint>
#include <cstdio>
#include <climits>

using namespace std;

int main() {
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    int N, K;
    cin >> N >> K;
    vector<int> V(N), C(N);
    for(int& v : V) cin >> v;
    for(int& c : C) cin >> c;

    vector<vector<int>> dp(N+1, vector<int>(K+1, INT_MAX));
    dp[0][0] = 0; 

    for(int i = 0; i < N; ++i) {
        for(int k = 0; k <= K; ++k) {
            if(dp[i][k] == INT_MAX) continue;
            // Situazione in cui il giocatore non salta il livello
            int next_charge = min(K, k + C[i]);
            dp[i+1][next_charge] = min(dp[i+1][next_charge], dp[i][k] + V[i]);
            // Situazione in cui il giocatore salta il livello (se possibile)
            if(k == K) dp[i+1][0] = min(dp[i+1][0], dp[i][k]);
        }
    }

    int min_time = *min_element(dp[N].begin(), dp[N].end());
    cout << min_time << endl;

    return 0;
}
"
uNWTuD2R,Untitled,35657,C++,Wednesday 19th of July 2023 04:25:41 AM CDT,"
#include <iostream>

using namespace std;

class Vector {

public:

	Vector() : size(0), capacity(4), arr(new int[4]) {}

	Vector(const int vector_capacity) : size(0), capacity(vector_capacity), arr(new int[vector_capacity]) {}

	Vector(const Vector& other) : size(other.size), capacity(other.capacity), arr(new int[capacity]) {
		for (int i = 0; i < size; i++) {
			arr[i] = other.arr[i];
		}
		total_number_elements += size;
	}

	Vector& operator=(const Vector& other) {
		if (&other != this) {
			total_number_elements -= size;
			size = other.size;
			capacity = other.capacity;
			delete[] arr;
			arr = new int[capacity];
			for (int i = 0; i < size; i++) {
				arr[i] = other.arr[i];
			}
			total_number_elements += size;
		}
		return *this;
	} // копирующий оператор присваивания =

	Vector(Vector&& other) : size(other.size), capacity(other.capacity), arr(other.arr) {
		other.arr = nullptr;
		other.size = 0;
		other.capacity = 0;
	} // конструктор перемещения

	Vector& operator=(Vector&& other) {
		if (&other != this) {
			total_number_elements -= size;
			size = other.size;
			capacity = other.capacity;
			delete[] arr;
			arr = other.arr;
			other.arr = nullptr;
			other.size = 0;
			other.capacity = 0;
			total_number_elements += size;
		}
		return *this;
	} // перемещающий оператор присваивания =

	int& operator[] (const int index) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			abort;
		}
		return arr[index];
	} // перегрузка оператора индексирования (сеттер)

	int operator[] (const int index) const {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			abort;
		}
		return arr[index];
	} // перегрузка оператора индексирования для константных объектов

	bool operator==(const Vector& right) const {
		if (right.size != size) {
			return false;
		}
		for (int i = 0; i < size; i++) {
			if (arr[i] != right.arr[i])
				return false;
		}
		return true;
	}

	bool operator!=(const Vector& right) const {
		return !(*this == right);
	}

	void Push_back(const int value) {
		if (size == capacity) {
			int* temp = new int[capacity * 2];
			for (int i = 0; i < size; i++) {
				temp[i] = arr[i];
			}
			delete[] arr;
			arr = temp;
			capacity *= 2;
		}
		arr[size] = value;
		size++;
		total_number_elements++;
	}

	void Pop_back() {
		if (size > 0) {
			arr[size - 1] = 0;
			size--;
			total_number_elements--;
		}
	}

	int Size() {
		return size;
	}


	int Capacity() {
		return capacity;
	}

	void Insert(const int index, const int value) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			return;
		}
		if (size == capacity) {
			int* temp = new int[capacity * 2];
			for (int i = 0; i < size; i++) {
				temp[i] = arr[i];
			}
			delete[] arr;
			arr = temp;
			capacity *= 2;
		}
		for (int i = size; i > index; i--) {
			arr[i] = arr[i - 1];
		}
		arr[index] = value;
		size++;
		total_number_elements++;
	}

	void Erase(const int index) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			return;
		}
		for (int i = index; i < size - 1; i++) {
			arr[i] = arr[i + 1];
		}
		arr[size - 1] = 0;
		size--;
		total_number_elements--;
	}

	int GetValue(const int index) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			abort;
		}
		return arr[index];
	}

	void SetValue(const int index, const int value) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			return;
		}
		arr[index] = value;
	}

	static int GetTotalNumberElements() {
		return total_number_elements;
	}


	~Vector() {
		delete[] arr;
		total_number_elements -= size;
	}

private:
	int size;
	int capacity;
	int* arr;
	static int total_number_elements;
};

int Vector::total_number_elements = 0;

int main() {

	Vector my_vector;

	my_vector.Push_back(10);

	cout << ""Size: "" << my_vector.Size() << "" Capacity: "" << my_vector.Capacity() << endl;

	my_vector.Erase(0);

	cout << ""Size: "" << my_vector.Size() << "" Capacity: "" << my_vector.Capacity() << endl;

	for (int i = 0; i < 10; i++) {
		my_vector.Push_back(i + 1);
	}

	for (int i = 0; i < my_vector.Size(); i++) {
		cout << my_vector[i] << "" "";
	}
	cout << endl;

	cout << ""Size: "" << my_vector.Size() << "" Capacity: "" << my_vector.Capacity() << endl;

	my_vector[2] = 13;

	my_vector.Insert(4, 12);

	for (int i = 0; i < my_vector.Size(); i++) {
		cout << my_vector[i] << "" "";
	}
	cout << endl;

	cout << ""Size: "" << my_vector.Size() << "" Capacity: "" << my_vector.Capacity() << endl;

	Vector my_vector2;

	for (int i = 0; i < 15; i++) {
		my_vector2.Push_back(i + 1);
	}


	Vector my_vector3(my_vector2);

	Vector my_vector4 = my_vector;

	cout << boolalpha;

	cout << (my_vector == my_vector3) << endl;

	cout << (my_vector != my_vector3) << endl;

	cout << my_vector3[3] << endl;


	cout << Vector::GetTotalNumberElements() << endl;

	Vector my_vector5(move(my_vector3));
	cout << ""Size: "" << my_vector5.Size() << "" Capacity: "" << my_vector5.Capacity() << endl;
	cout << ""Size: "" << my_vector3.Size() << "" Capacity: "" << my_vector3.Capacity() << endl;

	my_vector5 = move(my_vector4);
	cout << ""Size: "" << my_vector5.Size() << "" Capacity: "" << my_vector5.Capacity() << endl;
	cout << ""Size: "" << my_vector3.Size() << "" Capacity: "" << my_vector3.Capacity() << endl;


}"
uKnEhAw9,Untitled,35657,C++,Wednesday 19th of July 2023 04:17:38 AM CDT,"#include <iostream>

using namespace std;

template<typename T>
class List {
public:

    List() : size(0), head(nullptr), last(nullptr) {}

    List(const initializer_list<T>& list) : size(0), head(nullptr), last(nullptr) {
        for (const auto& element : list) {
            Push_back(element);
        }
    }

    List(const List& other) : size(other.size), head(nullptr), last(nullptr) {
        if (other.head != nullptr) {
            head = new Node{ other.head->value, nullptr, nullptr };
            Node* temp = head;
            Node* other_temp = other.head;
            while (other_temp->next != nullptr) {
                other_temp = other_temp->next;
                temp->next = new Node{ other_temp->value, nullptr, temp };
                temp = temp->next;
            }
            last = temp;
        }
    }

    List(List&& other) : size(other.size), head(other.head), last(other.last) {
        other.size = 0;
        other.head = nullptr;
        other.last = nullptr;
    }

    List& operator=(const List& other) {
        if (this != &other) {
            Clear();
            if (other.head != nullptr) {
                head = new Node{ other.head->value, nullptr, nullptr };
                Node* temp = head;
                Node* other_temp = other.head;
                while (other_temp->next != nullptr) {
                    other_temp = other_temp->next;
                    temp->next = new Node{ other_temp->value, nullptr, temp };
                    temp = temp->next;
                }
                last = temp;
                size = other.size;
            }
        }
        return *this;
    }

    List& operator=(List&& other) {
        if (this != &other) {
            Clear();
            size = other.size;
            head = other.head;
            last = other.last;
            other.size = 0;
            other.head = nullptr;
            other.last = nullptr;
        }
        return *this;
    }

    void Push_front(const T& value) {
        if (size == 0) {
            last = head = new Node{ value, nullptr, nullptr };
            size++;
            return;
        }
        Node* temp = new Node{ value, head, nullptr };
        head->prev = temp;
        head = temp;
        size++;
    }

    void Push_back(const T& value) {
        if (size == 0) {
            last = head = new Node{ value, nullptr, nullptr };
            size++;
            return;
        }
        Node* temp = new Node{ value, nullptr, last };
        last->next = temp;
        last = temp;
        size++;
    }

    void Pop_front() {
        if (size == 0) {
            throw runtime_error(""Попытка удаления из пустого контейнера"");
        }
        if (size == 1) {
            delete head;
            last = head = nullptr;
            size--;
            return;
        }
        head = head->next;
        delete head->prev;
        head->prev = nullptr;
        size--;
    }

    void Pop_back() {
        if (size == 0) {
            throw runtime_error(""Попытка удаления из пустого контейнера"");
        }
        if (size == 1) {
            delete head;
            last = head = nullptr;
            size--;
            return;
        }
        last = last->prev;
        delete last->next;
        last->next = nullptr;
        size--;
    }

    void Print() const {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->value << "" "";
            temp = temp->next;
        }
        cout << endl;
    }

    T& Front() {
        if (size == 0) {
            throw runtime_error(""Обращение к пустому контейнеру"");
        }
        return head->value;
    }
                                                                         
    const T& Front() const {
        if (size == 0) {
            throw runtime_error(""Обращение к пустому контейнеру"");
        }
        return head->value;
    }

    T& Back() {
        if (size == 0) {
            throw runtime_error(""Обращение к пустому контейнеру"");
        }
        return last->value;
    }

    const T& Back() const {
        if (size == 0) {
            throw runtime_error(""Обращение к пустому контейнеру"");
        }
        return last->value;
    }

    int Size() const {
        return size;
    }

    void Clear() {
        while (head != nullptr) {
            Pop_front();
        }
    }

    void Insert(const int index, const int& value) {
        if (index < 0 || index > size) {
            throw logic_error(""Невалидный индекс"");
        }
        if (index == 0) {
            Push_front(value);
            return;
        }
        if (index == size) {
            Push_back(value);
            return;
        }
       
        Node* temp = head;
        for (int i = 0; i < index - 1; i++) {
            temp = temp->next;
        }
        Node* node = new Node{ value, temp->next, temp };
        temp->next->prev = node;
        temp->next = node;
        size++;
    }

    void Erase(const int index) {
        if (index < 0 || index >= size) {
            throw logic_error(""Невалидный индекс"");
        }
        if (index == 0) {
            Pop_front();
            return;
        }
        if (index == size - 1) {
            Pop_back();
            return;
        }
        Node* temp = head;
        for (int i = 0; i < index - 1; i++) {
            temp = temp->next;
        }
        Node* buf = temp->next->next;
        delete temp->next;
        temp->next = buf;
        temp->next->prev = temp;
        size--;
    }

    bool operator==(const List& other) {
        if (this->size != other.size) {
            return false;
        }
        Node* temp = head;
        Node* other_temp = other.head;
        while (temp != nullptr) {
            if (temp->value != other_temp->value) {
                return false;
            }
            temp = temp->next;
            other_temp = other_temp->next;
        }
        return true;
    }

    bool operator!=(const List& other) {
        return !(*this == other);
    }

    T& operator[] (const int index) {
        if (index < 0 || index >= size) {
            throw logic_error(""Невалидный индекс"");
        }
        Node* temp = head;
        for (int i = 0; i < index; i++) {
            temp = temp->next;
        }
        return temp->value;
    }

    const T& operator[] (const int index) const {
        if (index < 0 || index >= size) {
            throw logic_error(""Невалидный индекс"");
        }
        Node* temp = head;
        for (int i = 0; i < index; i++) {
            temp = temp->next;
        }
        return temp->value;
    }

    int Find(const T& value) {
        if (size == 0) {
            throw runtime_error(""Попытка удаления в пустом контейнере"");
        }
        int i = 0;
        Node* temp = head;
        while (temp != nullptr && temp->value != value) {
            temp = temp->next;
            i++;
        }
        if (temp != nullptr) {
            return i;
        }
        return -1;
    }

    ~List() {
        Clear();
    }

private:
    struct Node { // двусвязный список состоит из узлов
        T value; // узел хранит информативную часть
        Node* next; // указатель на следующий узел в списке
        Node* prev; // указатель на предыдущий узел
    };

    int size = 0;
    Node* head = nullptr;
    Node* last = nullptr;
};

int main() {

    setlocale(LC_ALL, ""ru"");

    try {

        List<int> list1;

        list1.Insert(12, 10);

        for (int i = 0; i < 10; i++) {
            list1.Push_front(i + 1);
            list1.Print();
        }
        cout << list1.Size() << endl;

        for (int i = 0; i < 3; i++) {
            list1.Pop_front();
            list1.Print();
        }
        cout << list1.Size() << endl;

        cout << ""Front: "" << list1.Front() << "" Back: "" << list1.Back() << endl;

        list1.Push_back(10);
        list1.Print();
        list1.Pop_back();
        list1.Print();

        cout << ""list2: "" << endl;
        List<int> list2(move(list1));
        list2.Print();

        cout << ""list1: "" << endl;
        list1.Print();

        list2.Insert(3, 12);
        cout << ""list2: "" << endl;
        list2.Print();

        list2.Erase(2);
        list2.Print();
        cout << list2.Find(12) << endl;
        cout << boolalpha << (list1 == list2) << endl;
        cout << (list1 != list2) << endl;

        cout << list2[3] << endl;
        list2[3] = 10;
        list2.Print();

    }
    catch (const logic_error& ex) {
        cout << ex.what() << endl;
    }
    catch (const runtime_error& ex) {
        cout << ex.what() << endl;
    }
    catch (const bad_alloc &ex) {
        cout << ""Ошибка выделения динамической памяти"" << endl;
    }
    catch (...) {
        cout << ""Другая ошибка"" << endl;
    }
}"
2hC714T5,Fossil Restoration tutorial example,IdainTV,ASM (NASM),Wednesday 19th of July 2023 04:17:04 AM CDT,"FossilScientist:
	faceplayer
	opentext
	checkevent EVENT_TEMPORARY_UNTIL_MAP_RELOAD_1 ; remove the next two lines to immediately receive the fossil
	iftrue .GaveScientistFossil
	checkevent EVENT_GAVE_SCIENTIST_OLD_AMBER
	iftrue .GiveAerodactyl
	checkevent EVENT_GAVE_SCIENTIST_DOME_FOSSIL
	iftrue .GiveKabuto
	checkevent EVENT_GAVE_SCIENTIST_HELIX_FOSSIL
	iftrue .GiveOmanyte
	writetext FossilScientistIntroText
	waitbutton
	loadmenu .MoveMenuHeader
	verticalmenu
	closewindow
	ifequal REVIVE_OLD_AMBER, .OldAmber
	ifequal REVIVE_DOME_FOSSIL, .DomeFossil
	ifequal REVIVE_HELIX_FOSSIL, .HelixFossil
	sjump .No

.OldAmber
	checkitem OLD_AMBER
	iffalse .No
	getmonname STRING_BUFFER_3, AERODACTYL
	writetext FossilScientistPKMNText
	promptbutton
    setevent EVENT_TEMPORARY_UNTIL_MAP_RELOAD_1 ; remove this to immediately receive the fossil
	setevent EVENT_GAVE_SCIENTIST_OLD_AMBER
	takeitem OLD_AMBER
	writetext FossilScientistGiveText
	waitbutton
	sjump .GaveScientistFossil

.DomeFossil:
	checkitem DOME_FOSSIL
	iffalse .No
	getmonname STRING_BUFFER_3, KABUTO
	writetext FossilScientistPKMNText
	promptbutton
    setevent EVENT_TEMPORARY_UNTIL_MAP_RELOAD_1 ; remove this to immediately receive the fossil
	setevent EVENT_GAVE_SCIENTIST_DOME_FOSSIL
	takeitem DOME_FOSSIL
	writetext FossilScientistGiveText
	waitbutton
	sjump .GaveScientistFossil

.HelixFossil:
	checkitem HELIX_FOSSIL
	iffalse .No
	getmonname STRING_BUFFER_3, OMANYTE
	writetext FossilScientistPKMNText
	promptbutton
    setevent EVENT_TEMPORARY_UNTIL_MAP_RELOAD_1 ; remove this to immediately receive the fossil
	setevent EVENT_GAVE_SCIENTIST_HELIX_FOSSIL
	takeitem HELIX_FOSSIL
	writetext FossilScientistGiveText
	waitbutton
	sjump .GaveScientistFossil

.No
	writetext FossilScientistNoText
	waitbutton
	closetext
	end
    
.GaveScientistFossil:
	writetext FossilScientistTimeText
	waitbutton
	closetext
;	special FadeBlackQuickly ; uncomment the next five lines to immediately receive the fossil
;	special ReloadSpritesNoPalettes
;	playsound SFX_WARP_TO
;	waitsfx
;	pause 35
	end ; replace this with ""sjump FossilScientist"" to immediately receive the fossil

.GiveAerodactyl:
	readvar VAR_PARTYCOUNT
	ifequal PARTY_LENGTH, .NoRoom
	clearevent EVENT_GAVE_SCIENTIST_OLD_AMBER
	writetext FossilScientistDoneText
	promptbutton
	getmonname STRING_BUFFER_3, AERODACTYL
	writetext ReceivedFossilPKMNText
	playsound SFX_CAUGHT_MON
	waitsfx
	waitbutton
	givepoke AERODACTYL, 30
	closetext
	end

.GiveKabuto:
	readvar VAR_PARTYCOUNT
	ifequal PARTY_LENGTH, .NoRoom
	clearevent EVENT_GAVE_SCIENTIST_DOME_FOSSIL
	writetext FossilScientistDoneText
	promptbutton
	getmonname STRING_BUFFER_3, KABUTO
	writetext ReceivedFossilPKMNText
	playsound SFX_CAUGHT_MON
	waitsfx
	waitbutton
	givepoke KABUTO, 30
	closetext
	end

.GiveOmanyte:
	readvar VAR_PARTYCOUNT
	ifequal PARTY_LENGTH, .NoRoom
	clearevent EVENT_GAVE_SCIENTIST_HELIX_FOSSIL
	writetext FossilScientistDoneText
	promptbutton
	getmonname STRING_BUFFER_3, OMANYTE
	writetext ReceivedFossilPKMNText
	playsound SFX_CAUGHT_MON
	waitsfx
	waitbutton
	givepoke OMANYTE, 30
	closetext
	end

.NoRoom:
	writetext FossilScientistPartyFullText
	waitbutton
	closetext
	end

.MoveMenuHeader:
	db MENU_BACKUP_TILES ; flags
	menu_coords 0, 2, 15, TEXTBOX_Y - 1
	dw .MenuData
	db 1 ; default option

.MenuData:
	db STATICMENU_CURSOR ; flags
	db 4 ; items
	db ""OLD AMBER@""
	db ""DOME FOSSIL@""
	db ""HELIX FOSSIL@""
	db ""CANCEL@""

FossilScientistIntroText:
	text ""Hiya!""

	para ""I am important""
	line ""doctor!""

	para ""I study here rare""
	line ""#MON fossils!""

	para ""You! Have you a""
	line ""fossil for me?""
	done

FossilScientistNoText:
	text ""No! Is too bad!""
	line ""You come again!""
	done

FossilScientistPartyFullText:
	text ""No! Is too bad!""
	line ""Your party is""
	cont ""already full!""
	done

FossilScientistTimeText:
	text ""I take a little""
	line ""time!""

	para ""You go for walk a""
	line ""little while!""
	done

FossilScientistDoneText:
	text ""Where were you?""
	line ""Your fossil is""
	cont ""back to life!""
	done

FossilScientistPKMNText:
	text ""Oh! That is""
	line ""a fossil!""

	para ""It is fossil of""
	line ""@""
	text_ram wStringBuffer3
	text "", a""

	para ""#MON that is""
	line ""already extinct!""

	para ""My Resurrection""
	line ""Machine will make""

	para ""that #MON live""
	line ""again!""
	done

FossilScientistGiveText:
	text ""So! You hurry and""
	line ""give me that!""

	para ""<PLAYER> handed""
	line ""over the fossil.""
	done

ReceivedFossilPKMNText:
	text ""<PLAYER> received""
	line ""@""
	text_ram wStringBuffer3
	text ""!""
	done
"
sgcwmn08,Check about Multicollinearity in Python,elena1234,Python,Wednesday 19th of July 2023 03:41:16 AM CDT,"# Relationships between features
# Be careful about Multicollinearity
sns.pairplot(df,diag_kind='kde')
plt.show()
"
H3eB7Hj5,Урок 9 реализация методов..,kutuzzzov,C++,Wednesday 19th of July 2023 03:40:22 AM CDT,"#pragma once
#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <memory>

template <typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity)
        : buffer_(Allocate(capacity))
        , capacity_(capacity) {
    }
    
    RawMemory(const RawMemory&) = delete;
    RawMemory& operator=(const RawMemory& rhs) = delete;

    RawMemory(RawMemory&& other) noexcept {
        buffer_ = std::move(other.GetAddress());
        capacity_ = std::move(other.Capacity());
    }

    RawMemory& operator=(RawMemory&& rhs) noexcept {
        buffer_ = std::move(rhs.GetAddress());
        capacity_ = std::move(rhs.Capacity());
        //rhs.~RawMemory();
        return *this;
    }

    ~RawMemory() {
        Deallocate(buffer_);
    }

    T* operator+(size_t offset) noexcept {
        // Разрешается получать адрес ячейки памяти, следующей за последним элементом массива
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T* operator+(size_t offset) const noexcept {
        return const_cast<RawMemory&>(*this) + offset;
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<RawMemory&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < capacity_);
        return buffer_[index];
    }

    void Swap(RawMemory& other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T* GetAddress() const noexcept {
        return buffer_;
    }

    T* GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    // Выделяет сырую память под n элементов и возвращает указатель на неё
    static T* Allocate(size_t n) {
        return n != 0 ? static_cast<T*>(operator new(n * sizeof(T))) : nullptr;
    }

    // Освобождает сырую память, выделенную ранее по адресу buf при помощи Allocate
    static void Deallocate(T* buf) noexcept {
        operator delete(buf);
    }

    T* buffer_ = nullptr;
    size_t capacity_ = 0;
};

template <typename T>
class Vector {
public:
    Vector() = default;

    explicit Vector(size_t size)
        : data_(size)
        , size_(size)
    {
        std::uninitialized_value_construct_n(data_.GetAddress(), size);
    }

    Vector(const Vector& other)
        : data_(other.size_)
        , size_(other.size_)
    {
        std::uninitialized_copy_n(other.data_.GetAddress(), size_, data_.GetAddress());
    }
    
    Vector(Vector&& other) noexcept {
        Swap(other);
    }

    Vector& operator=(const Vector& rhs) {
        if (this != &rhs) {
            if (data_.Capacity() < rhs.size_) {
                Vector rhs_copy(rhs);
                Swap(rhs_copy);
            }
            else {
                if (rhs.size_ < size_) {
                    std::copy(rhs.data_.GetAddress(), rhs.data_.GetAddress() + rhs.size_, data_.GetAddress());
                    std::destroy_n(data_.GetAddress() + rhs.size_, size_ - rhs.size_);
                }
                else {
                    std::copy(rhs.data_.GetAddress(), rhs.data_.GetAddress() + size_, data_.GetAddress());
                    std::uninitialized_copy_n(rhs.data_.GetAddress() + size_, rhs.size_ - size_, data_.GetAddress() + size_);
                }
                size_ = rhs.size_;

            }
        }
        return *this;
    }

    Vector& operator=(Vector&& rhs) noexcept {
        if (this != &rhs) {
            Swap(rhs);
        }
        return *this;
    }

    void Swap(Vector& other) noexcept {
        data_.Swap(other.data_);
        std::swap(size_, other.size_);
    }

    ~Vector() {
        std::destroy_n(data_.GetAddress(), size_);
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    void Reserve(size_t new_capacity) {
        if (new_capacity <= data_.Capacity()) {
            return;
        }
        RawMemory<T> new_data(new_capacity);
        // constexpr оператор if будет вычислен во время компиляции
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        else {
            std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        std::destroy_n(data_.GetAddress(), size_);
        data_.Swap(new_data);
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<Vector&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }
    
    void Resize(size_t new_size) {
        if (new_size < size_) {
            std::destroy_n(data_.GetAddress() + new_size, size_ - new_size);
            size_ = new_size;
        }
        else {
            Reserve(new_size);
            std::uninitialized_value_construct_n(data_.GetAddress() + size_, new_size - size_);
            size_ = new_size;
        }
    }

    void PushBack(const T& value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            std::uninitialized_copy_n(&value, 1, new_data.GetAddress() + size_);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        }
        else {
            new (data_ + size_) T(value);
        }
        ++size_;
    }

    void PushBack(T&& value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            std::uninitialized_move_n(&value, 1, new_data.GetAddress() + size_);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        }
        else {
            new (data_ + size_) T(std::move(value));
        }
        ++size_;
    }

    void PopBack() noexcept {
        if (size_ > 0) {
            std::destroy_at(data_.GetAddress() + size_ - 1);
            --size_;
        }
    }

private:
    RawMemory<T> data_;
    size_t size_ = 0;
};"
2BkkKCx7,Untitled,35657,C++,Wednesday 19th of July 2023 03:37:36 AM CDT,"#include <iostream>

using namespace std;

template<typename T>
class List {
public:

    List() : size(0), head(nullptr), last(nullptr) {}
	
	List(const initializer_list<T>& list) : size(0), head(nullptr), last(nullptr) {
		for (const auto& element : list) {
			Push_back(element);
		}
	}

    List(const List& other) : size(other.size), head(nullptr), last(nullptr) {
        if (other.head != nullptr) {
            head = new Node{ other.head->value, nullptr, nullptr };
            Node* temp = head;
            Node* other_temp = other.head;
            while (other_temp->next != nullptr) {
                other_temp = other_temp->next;
                temp->next = new Node{ other_temp->value, nullptr, temp };
                temp = temp->next;
            }
            last = temp;
        }
    }

    List(List&& other) : size(other.size), head(other.head), last(other.last) {
        other.size = 0;
        other.head = nullptr;
        other.last = nullptr;
    }

    List& operator=(const List& other) {
        if (this != &other) {
            Clear();
            if (other.head != nullptr) {
                head = new Node{ other.head->value, nullptr, nullptr };
                Node* temp = head;
                Node* other_temp = other.head;
                while (other_temp->next != nullptr) {
                    other_temp = other_temp->next;
                    temp->next = new Node{ other_temp->value, nullptr, temp };
                    temp = temp->next;
                }
                last = temp;
                size = other.size;
            }
        }
        return *this;
    }

    List& operator=(List&& other) {
        if (this != &other) {
            Clear();
            size = other.size;
            head = other.head;
            last = other.last;
            other.size = 0;
            other.head = nullptr;
            other.last = nullptr;
        }
        return *this;
    }

    void Push_front(const T& value) {
        if (size == 0) {
            last = head = new Node{ value, nullptr, nullptr };
            size++;
            return;
        }
        Node* temp = new Node{ value, head, nullptr };
        head->prev = temp;
        head = temp;
        size++;
    }

    void Push_back(const T& value) {
        if (size == 0) {
            last = head = new Node{ value, nullptr, nullptr };
            size++;
            return;
        }
        Node* temp = new Node{ value, nullptr, last };
        last->next = temp;
        last = temp;
        size++;
    }

    void Pop_front() {
        if (size > 0) {
            if (size == 1) {
                delete head;
                last = head = nullptr;
                size--;
                return;
            }
            head = head->next;
            delete head->prev;
            head->prev = nullptr;
            size--;
        }
    }

    void Pop_back() {
        if (size > 0) {
            if (size == 1) {
                delete head;
                last = head = nullptr;
                size--;
                return;
            }
            last = last->prev;
            delete last->next;
            last->next = nullptr;
            size--;
        }
    }

    void Print() const {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->value << "" "";
            temp = temp->next;
        }
        cout << endl;
    }

    T& Front() {
        if (head != nullptr) {
            return head->value;
        }
    }

    const T& Front() const {
        if (head != nullptr) {
            return head->value;
        }
    }

    T& Back() {
        if (last != nullptr) {
            return last->value;
        }
    }

    const T& Back() const {
        if (last != nullptr) {
            return last->value;
        }
    }

    int Size() const {
        return size;
    }

    void Clear() {
        while (head != nullptr) {
            Pop_front();
        }
    }

    void Insert(const int index, const int& value) {
        if (index == 0) {
            Push_front(value);
            return;
        }
        if (index == size) {
            Push_back(value);
            return;
        }
        if (index > 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* node = new Node{ value, temp->next, temp };
            temp->next->prev = node;
            temp->next = node;
            size++;
        }
    }

    void Erase(const int index) {
        if (index == 0) {
            Pop_front();
            return;
        }
        if (index == size) {
            Pop_back();
            return;
        }
        if (index > 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* buf = temp->next->next;
            delete temp->next;
            temp->next = buf;
            temp->next->prev = temp;
            size--;
        }
    }

    bool operator==(const List& other) {
        if (this->size != other.size) {
            return false;
        }
        Node* temp = head;
        Node* other_temp = other.head;
        while (temp != nullptr) {
            if (temp->value != other_temp->value) {
                return false;
            }
            temp = temp->next;
            other_temp = other_temp->next;
        }
        return true;
    }

    bool operator!=(const List& other) {
        return !(*this == other);
    }

    T& operator[] (const int index) {
        if (index >= 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index; i++) {
                temp = temp->next;
            }
            return temp->value;
        }
    }

    const T& operator[] (const int index) const {
        if (index >= 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index; i++) {
                temp = temp->next;
            }
            return temp->value;
        }
    }

    int Find(const T& value) {
        if (size == 0) {
            return -1;
        }
        int i = 0;
        Node* temp = head;
        while (temp != nullptr && temp->value != value) {
            temp = temp->next;
            i++;
        }
        if (temp != nullptr) {
            return i;
        }
        return -1;
    }

    ~List() {
        Clear();
    }

private:
    struct Node { // двусвязный список состоит из узлов
        T value; // узел хранит информативную часть
        Node* next; // указатель на следующий узел в списке
        Node* prev; // указатель на предыдущий узел
    };

    int size = 0;
    Node* head = nullptr;
    Node* last = nullptr;
};

int main() {
    List<int> list1;
    for (int i = 0; i < 10; i++) {
        list1.Push_front(i + 1);
        list1.Print();
    }
    cout << list1.Size() << endl;

    for (int i = 0; i < 3; i++) {
        list1.Pop_front();
        list1.Print();
    }
    cout << list1.Size() << endl;

    cout << ""Front: "" << list1.Front() << "" Back: "" << list1.Back() << endl;

    list1.Push_back(10);
    list1.Print();
    list1.Pop_back();
    list1.Print();

    cout << ""list2: "" << endl;
    List<int> list2(move(list1));
    list2.Print();

    cout << ""list1: "" << endl;
    list1.Print();

    list2.Insert(3, 12);
    cout << ""list2: "" << endl;
    list2.Print();

    list2.Erase(2);
    list2.Print();
    cout << list2.Find(12) << endl;
    cout << boolalpha << (list1 == list2) << endl;
    cout << (list1 != list2) << endl;

    cout << list2[3] << endl;
    list2[3] = 10;
    list2.Print();
}"
b8PW9ZwF,realcatmanagement,studioart,PHP,Wednesday 19th of July 2023 03:09:45 AM CDT,"<?php
add_filter('register_taxonomy_args', function($args, $taxonomy) {
    if ($taxonomy === ""page_cat"") {
        $args['public'] = false;
    }
    return $args;
}, 10, 2);"
PGWnFzWK,2023 FIFA Women's World Cup Predictions,fuzzybluerain,R,Wednesday 19th of July 2023 02:52:49 AM CDT,"wosodataset <- read.csv(""~/wosodataset.csv"")

fullteams <- sort(unique(c(sort(unique(wosodataset$Home)), sort(unique(wosodataset$Away)))))
datasetmatrix <- data.frame(matrix(nrow = 177, ncol = 177))
rownames(datasetmatrix) <- fullteams
colnames(datasetmatrix) <- fullteams
datasetmatrix[is.na(datasetmatrix)] <- 0

rawmatrix <- data.frame(matrix(nrow = 177, ncol = 12))
rownames(rawmatrix) <- fullteams
colnames(rawmatrix) <- c(""Games"", ""GF"", ""GFPG"", ""xGF"", ""xGFPG"", ""FDiff"", ""GA"", ""GAPG"", ""xGA"", ""xGAPG"", ""ADiff"", ""TDiff"")
rawmatrix[is.na(rawmatrix)] <- 0

for(i in 1:nrow(wosodataset)) { # figure out how to add to the matchup based on what data you have
  hometeam <- wosodataset[i, ""Home""]; awayteam <- wosodataset[i, ""Away""]
  datasetmatrix[match(hometeam,rownames(datasetmatrix)),match(awayteam,colnames(datasetmatrix))] <- datasetmatrix[match(hometeam,rownames(datasetmatrix)),match(awayteam,colnames(datasetmatrix))] + 1
  datasetmatrix[match(awayteam,rownames(datasetmatrix)),match(hometeam,colnames(datasetmatrix))] <- datasetmatrix[match(awayteam,rownames(datasetmatrix)),match(hometeam,colnames(datasetmatrix))] + 1
  rawmatrix[match(hometeam,rownames(rawmatrix)),""GF""] <- rawmatrix[match(hometeam,rownames(rawmatrix)),""GF""] + wosodataset[i, ""HomeGoals""]
  rawmatrix[match(hometeam,rownames(rawmatrix)),""GA""] <- rawmatrix[match(hometeam,rownames(rawmatrix)),""GA""] + wosodataset[i, ""AwayGoals""]
  rawmatrix[match(awayteam,rownames(rawmatrix)),""GF""] <- rawmatrix[match(awayteam,rownames(rawmatrix)),""GF""] + wosodataset[i, ""AwayGoals""]
  rawmatrix[match(awayteam,rownames(rawmatrix)),""GA""] <- rawmatrix[match(awayteam,rownames(rawmatrix)),""GA""] + wosodataset[i, ""HomeGoals""]
}

for(i in fullteams) {
  rawmatrix[i, ""Games""] <- sum(mapply(sum, datasetmatrix[i,c(1:177)]))
  rawmatrix[i, ""GFPG""] <- rawmatrix[i, ""GF""] / rawmatrix[i, ""Games""]
  rawmatrix[i, ""GAPG""] <- rawmatrix[i, ""GA""] / rawmatrix[i, ""Games""]
}
for(i in fullteams) {
  for(j in fullteams) {
    rawmatrix[i, ""xGF""] <- rawmatrix[i, ""xGF""] + (((rawmatrix[i, ""GFPG""] + rawmatrix[j, ""GAPG""]) / 2) * datasetmatrix[i, j])
    rawmatrix[i, ""xGA""] <- rawmatrix[i, ""xGA""] + (((rawmatrix[i, ""GAPG""] + rawmatrix[j, ""GFPG""]) / 2) * datasetmatrix[i, j])
  }
  rawmatrix[i, ""xGFPG""] <- rawmatrix[i, ""xGF""] / rawmatrix[i, ""Games""]
  rawmatrix[i, ""xGAPG""] <- rawmatrix[i, ""xGA""] / rawmatrix[i, ""Games""]
  rawmatrix[i, ""FDiff""] <- rawmatrix[i, ""GFPG""] - rawmatrix[i, ""xGFPG""]
  rawmatrix[i, ""ADiff""] <- rawmatrix[i, ""GAPG""] - rawmatrix[i, ""xGAPG""]
  rawmatrix[i, ""TDiff""] <- rawmatrix[i, ""FDiff""] - rawmatrix[i, ""ADiff""]
}

teams <- c(""Argentina"", ""Australia"", ""Brazil"", ""Canada"", ""China PR"", ""Colombia"", ""Costa Rica"", ""Denmark"", ""England"", ""France"", ""Germany"", ""Haiti"", ""Italy"", ""Jamaica"", ""Japan"", ""Korea Republic"", ""Morocco"", ""Netherlands"", ""New Zealand"", ""Nigeria"", ""Norway"", ""Panama"", ""Philippines"", ""Portugal"", ""Rep. of Ireland"", ""South Africa"", ""Spain"", ""Sweden"", ""Switzerland"", ""USA"", ""Vietnam"", ""Zambia"")

WCmultiplier <- 0 # adjust this as tournament goes on
WCform <- read.csv(""~/WCform.csv"") # having to manually update the form, very sorry
rownames(WCform) <- teams # can't fix this for myself easily, sadly

adjmatrix <- data.frame(matrix(nrow = 32, ncol = 8))
rownames(adjmatrix) <- teams
colnames(adjmatrix) <- c(""RawF"", ""RawA"", ""WCF"", ""WCA"", ""HGF"", ""HGA"", ""AdjF"", ""AdjA"")
adjmatrix[is.na(adjmatrix)] <- 0

# home ground advantage for Australia and New Zealand, will be inaccurate if NZ makes the final
adjmatrix[""Australia"", ""HGF""] <- 0.2
adjmatrix[""Australia"", ""HGA""] <- -0.2
adjmatrix[""New Zealand"", ""HGF""] <- 0.2
adjmatrix[""New Zealand"", ""HGA""] <- -0.2

for(i in teams) {
  adjmatrix[i, ""RawF""] <- rawmatrix[i, ""FDiff""]
  adjmatrix[i, ""RawA""] <- rawmatrix[i, ""ADiff""]
  adjmatrix[i, ""WCF""] <- WCform[i, ""WCF""]
  adjmatrix[i, ""WCA""] <- WCform[i, ""WCA""]
  adjmatrix[i, ""AdjF""] <- ((adjmatrix[i, ""RawF""]*(1-WCmultiplier))+(adjmatrix[i, ""WCF""]*WCmultiplier)+adjmatrix[i,""HGF""])
  adjmatrix[i, ""AdjA""] <- ((adjmatrix[i, ""RawA""]*(1-WCmultiplier))+(adjmatrix[i, ""WCA""]*WCmultiplier)+adjmatrix[i,""HGA""])
}

xG_matrix <- data.frame(matrix(nrow = 32, ncol = 32))
rownames(xG_matrix) <- teams
colnames(xG_matrix) <- teams
for(i in teams){
  for(j in teams){
    xG_matrix[j, i] <- (sum(rawmatrix$GF) / sum(rawmatrix$Games)) + adjmatrix[i, ""AdjF""] + adjmatrix[j, ""AdjA""]
  }
}

finish_matrix <- data.frame(matrix(nrow = 32, ncol = 9))
finish_matrix[is.na(finish_matrix)] <- 0
rownames(finish_matrix) <- teams
colnames(finish_matrix) <- c(""Group 1st"", ""Group 2nd"", ""Group 3rd"", ""Group 4th"", ""Round of 16"", ""Quarter Finals"", ""Semi Finals"", ""Final"", ""Champion"")

match_schedule <- read.csv(""~/2023wcfixture.csv"")

grouptotal <- c(1:48)
r16total <- c(49:56)
qftotal <- c(57:60)
sftotal <- c(61,62)
medaltotal <- c(63,64)

simcount <- c(1:10000)

for(count in simcount){
  
  ## FIXTURE PREDICTING (GROUP STAGE)
  # note to future Claire: *away* teams first
  for (val in grouptotal){
    gamenumber <- val
    match_schedule[gamenumber, ""HomexG""] <- xG_matrix[match(match_schedule[gamenumber, ""Away""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Home""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""AwayxG""] <- xG_matrix[match(match_schedule[gamenumber, ""Home""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Away""],colnames(xG_matrix))]
    }
  
  ## FIXTURE SIMULATING (GROUP STAGE)
  for (val in grouptotal){
    gamenumber <- val
    match_schedule[gamenumber, ""HomeG""] <- rpois(1,match_schedule[gamenumber, ""HomexG""])
    match_schedule[gamenumber, ""AwayG""] <- rpois(1,match_schedule[gamenumber, ""AwayxG""])
    }
  
  match_schedule$HomeDiff <- match_schedule$HomeG - match_schedule$AwayG; match_schedule$AwayDiff <- match_schedule$AwayG - match_schedule$HomeG
  # this comes in handy when we sort the group stages later
  
  ## POINT ALLOCATING (GROUP STAGE)
  for (val in grouptotal){
    gamenumber <- val
    if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""HomePts""] <- 3
      match_schedule[gamenumber, ""AwayPts""] <- 0
      match_schedule[gamenumber, ""HomeW""] <- match_schedule[gamenumber, ""HomeW""] + 1
      } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""HomePts""] <- 0
        match_schedule[gamenumber, ""AwayPts""] <- 3
        match_schedule[gamenumber, ""AwayW""] <- match_schedule[gamenumber, ""AwayW""] + 1
        } else {
          match_schedule[gamenumber, ""HomePts""] <- 1
          match_schedule[gamenumber, ""AwayPts""] <- 1
          match_schedule[gamenumber, ""Draw""] <- match_schedule[gamenumber, ""Draw""] + 1
        }
    }
  
  ## GROUP TABLE GENERATION
  groupresults <- array()
  
  for (var in c(""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"")) {
    groupnumber <- var
    table <- match_schedule[match_schedule$Group == var, ]
    table <- subset(table, select = -c(Match, Stage, Group, Date, Venue, HomexG, AwayxG))
    table <- cbind(stack(table[1:2]),stack(table[3:4]),stack(table[5:6]),stack(table[10:11]))
    colnames(table) <- c(""Team"", NA, ""GF"", NA, ""Pts"", NA, ""GD"", NA)
    table <- subset(table, select = c(Team, GF, Pts, GD))
    table <- table[, c(1, 2, 4, 3)]
    table <- data.frame(c(aggregate(table$GF, list(table$Team), FUN=sum),
                          aggregate(table$GD, list(table$Team), FUN=sum),
                          aggregate(table$Pts, list(table$Team), FUN=sum)))
    colnames(table) <- c(""Team"", ""GF"", NA, ""GD"", NA, ""Pts"")
    table <- subset(table, select = c(Team, GF, GD, Pts))
    table <- table[with(table, order(-Pts, -GD, -GF)), ]
    groupresults <- append(groupresults, table)
  }
  
  ## ROUND OF 16 SCHEDULING
  match_schedule[49,""Home""] <- groupresults[[ 2]][[1]]; match_schedule[49,""Away""] <- groupresults[[10]][[2]]
  match_schedule[50,""Home""] <- groupresults[[10]][[1]]; match_schedule[50,""Away""] <- groupresults[[ 2]][[2]]
  match_schedule[51,""Home""] <- groupresults[[ 6]][[1]]; match_schedule[51,""Away""] <- groupresults[[14]][[2]]
  match_schedule[52,""Home""] <- groupresults[[14]][[1]]; match_schedule[52,""Away""] <- groupresults[[ 6]][[2]]
  match_schedule[53,""Home""] <- groupresults[[18]][[1]]; match_schedule[53,""Away""] <- groupresults[[26]][[2]]
  match_schedule[54,""Home""] <- groupresults[[26]][[1]]; match_schedule[54,""Away""] <- groupresults[[18]][[2]]
  match_schedule[55,""Home""] <- groupresults[[22]][[1]]; match_schedule[55,""Away""] <- groupresults[[30]][[2]]
  match_schedule[56,""Home""] <- groupresults[[30]][[1]]; match_schedule[56,""Away""] <- groupresults[[22]][[2]]
  
  ## FIXTURE PREDICTING (KNOCKOUT STAGE)
  for (val in r16total){
    gamenumber <- val
    match_schedule[gamenumber, ""HomexG""] <- xG_matrix[match(match_schedule[gamenumber, ""Away""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Home""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""AwayxG""] <- xG_matrix[match(match_schedule[gamenumber, ""Home""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Away""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""HomeG""] <- rpois(1,match_schedule[gamenumber, ""HomexG""])
    match_schedule[gamenumber, ""AwayG""] <- rpois(1,match_schedule[gamenumber, ""AwayxG""])
    if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""HomePts""] <- 3
      match_schedule[gamenumber, ""AwayPts""] <- 0
      } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""AwayPts""] <- 3
        match_schedule[gamenumber, ""HomePts""] <- 0
        } else {
          match_schedule[gamenumber, ""HomeG""] <- match_schedule[gamenumber, ""HomeG""] + rpois(1,(match_schedule[gamenumber, ""HomexG""])/2)
          match_schedule[gamenumber, ""AwayG""] <- match_schedule[gamenumber, ""AwayG""] + rpois(1,(match_schedule[gamenumber, ""AwayxG""])/2)
          if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
            match_schedule[gamenumber, ""HomePts""] <- 3
            match_schedule[gamenumber, ""AwayPts""] <- 0
            } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
              match_schedule[gamenumber, ""AwayPts""] <- 3
              match_schedule[gamenumber, ""HomePts""] <- 0
              } else {
                penalties <- runif(1)
                if (penalties > 0.5){
                  match_schedule[gamenumber, ""HomePts""] <- 3
                  match_schedule[gamenumber, ""AwayPts""] <- 0
                  } else {
                    match_schedule[gamenumber, ""AwayPts""] <- 3
                    match_schedule[gamenumber, ""HomePts""] <- 0
                  }
              }
        }
    }
  
  ## QUARTER FINAL SCHEDULE
  if (match_schedule[49, ""HomePts""] == 3){
    match_schedule[57,""Home""] <- match_schedule[49,""Home""]
    } else {
      match_schedule[57,""Home""] <- match_schedule[49,""Away""]
      }
  if (match_schedule[51, ""HomePts""] == 3){
    match_schedule[57,""Away""] <- match_schedule[51,""Home""]
    } else {
      match_schedule[57,""Away""] <- match_schedule[51,""Away""]
      }
  if (match_schedule[53, ""HomePts""] == 3){
    match_schedule[59,""Home""] <- match_schedule[53,""Home""]
    } else {
      match_schedule[59,""Home""] <- match_schedule[53,""Away""]
      }
  if (match_schedule[55, ""HomePts""] == 3){
    match_schedule[59,""Away""] <- match_schedule[55,""Home""]
    } else {
      match_schedule[59,""Away""] <- match_schedule[55,""Away""]
      }
  if (match_schedule[50, ""HomePts""] == 3){
    match_schedule[58,""Home""] <- match_schedule[50,""Home""]
    } else {
      match_schedule[58,""Home""] <- match_schedule[50,""Away""]
      }
   if (match_schedule[52, ""HomePts""] == 3){
     match_schedule[58,""Away""] <- match_schedule[52,""Home""]
   } else {
     match_schedule[58,""Away""] <- match_schedule[52,""Away""]
   }
   if (match_schedule[54, ""HomePts""] == 3){
     match_schedule[60,""Home""] <- match_schedule[54,""Home""]
   } else {
     match_schedule[60,""Home""] <- match_schedule[54,""Away""]
   }
   if (match_schedule[56, ""HomePts""] == 3){
     match_schedule[60,""Away""] <- match_schedule[56,""Home""]
   } else {
     match_schedule[60,""Away""] <- match_schedule[56,""Away""]
   }
  
  ## FIXTURE SIMULATING (KNOCKOUT STAGE)
   for (val in qftotal){
  gamenumber <- val
  match_schedule[gamenumber, ""HomexG""] <- xG_matrix[match(match_schedule[gamenumber, ""Away""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Home""],colnames(xG_matrix))]
  match_schedule[gamenumber, ""AwayxG""] <- xG_matrix[match(match_schedule[gamenumber, ""Home""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Away""],colnames(xG_matrix))]
  match_schedule[gamenumber, ""HomeG""] <- rpois(1,match_schedule[gamenumber, ""HomexG""])
  match_schedule[gamenumber, ""AwayG""] <- rpois(1,match_schedule[gamenumber, ""AwayxG""])
  if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
    match_schedule[gamenumber, ""HomePts""] <- 3
    match_schedule[gamenumber, ""AwayPts""] <- 0
  } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
    match_schedule[gamenumber, ""AwayPts""] <- 3
    match_schedule[gamenumber, ""HomePts""] <- 0
  } else {
    match_schedule[gamenumber, ""HomeG""] <- match_schedule[gamenumber, ""HomeG""] + rpois(1,(match_schedule[gamenumber, ""HomexG""])/2)
    match_schedule[gamenumber, ""AwayG""] <- match_schedule[gamenumber, ""AwayG""] + rpois(1,(match_schedule[gamenumber, ""AwayxG""])/2)
    if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""HomePts""] <- 3
      match_schedule[gamenumber, ""AwayPts""] <- 0
    } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""AwayPts""] <- 3
      match_schedule[gamenumber, ""HomePts""] <- 0
    } else {
      penalties <- runif(1)
      if (penalties > 0.5){
        match_schedule[gamenumber, ""HomePts""] <- 3
        match_schedule[gamenumber, ""AwayPts""] <- 0
      } else {
        match_schedule[gamenumber, ""AwayPts""] <- 3
        match_schedule[gamenumber, ""HomePts""] <- 0
      }
    }
  }
}

## SEMI FINAL SCHEDULE
   if (match_schedule[57, ""HomePts""] == 3){
     match_schedule[61,""Home""] <- match_schedule[57,""Home""]
   } else {
     match_schedule[61,""Home""] <- match_schedule[57,""Away""]
   }
   if (match_schedule[58, ""HomePts""] == 3){
     match_schedule[61,""Away""] <- match_schedule[58,""Home""]
   } else {
     match_schedule[61,""Away""] <- match_schedule[58,""Away""]
   }
   if (match_schedule[59, ""HomePts""] == 3){
     match_schedule[62,""Home""] <- match_schedule[59,""Home""]
   } else {
     match_schedule[62,""Home""] <- match_schedule[59,""Away""]
   }
   if (match_schedule[60, ""HomePts""] == 3){
     match_schedule[62,""Away""] <- match_schedule[60,""Home""]
   } else {
     match_schedule[62,""Away""] <- match_schedule[60,""Away""]
   }
  
  ## FIXTURE SIMULATING (KNOCKOUT STAGE)
  for (val in sftotal){
    gamenumber <- val
    match_schedule[gamenumber, ""HomexG""] <- xG_matrix[match(match_schedule[gamenumber, ""Away""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Home""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""AwayxG""] <- xG_matrix[match(match_schedule[gamenumber, ""Home""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Away""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""HomeG""] <- rpois(1,match_schedule[gamenumber, ""HomexG""])
    match_schedule[gamenumber, ""AwayG""] <- rpois(1,match_schedule[gamenumber, ""AwayxG""])
    if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""HomePts""] <- 3
      match_schedule[gamenumber, ""AwayPts""] <- 0
    } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""AwayPts""] <- 3
      match_schedule[gamenumber, ""HomePts""] <- 0
    } else {
      match_schedule[gamenumber, ""HomeG""] <- match_schedule[gamenumber, ""HomeG""] + rpois(1,(match_schedule[gamenumber, ""HomexG""])/2)
      match_schedule[gamenumber, ""AwayG""] <- match_schedule[gamenumber, ""AwayG""] + rpois(1,(match_schedule[gamenumber, ""AwayxG""])/2)
      if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""HomePts""] <- 3
        match_schedule[gamenumber, ""AwayPts""] <- 0
      } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""AwayPts""] <- 3
        match_schedule[gamenumber, ""HomePts""] <- 0
      } else {
        penalties <- runif(1)
        if (penalties > 0.5){
          match_schedule[gamenumber, ""HomePts""] <- 3
          match_schedule[gamenumber, ""AwayPts""] <- 0
        } else {
          match_schedule[gamenumber, ""AwayPts""] <- 3
          match_schedule[gamenumber, ""HomePts""] <- 0
        }
      }
    }
  }
  
  ## MEDAL GAME SCHEDULES
   if (match_schedule[61, ""HomePts""] == 3){
     match_schedule[64,""Home""] <- match_schedule[61,""Home""]
     match_schedule[63,""Home""] <- match_schedule[61,""Away""]
   } else {
     match_schedule[64,""Home""] <- match_schedule[61,""Away""]
     match_schedule[63,""Home""] <- match_schedule[61,""Home""]
   }
  if (match_schedule[62, ""HomePts""] == 3){
    match_schedule[64,""Away""] <- match_schedule[62,""Home""]
    match_schedule[63,""Away""] <- match_schedule[62,""Away""]
  } else {
    match_schedule[64,""Away""] <- match_schedule[62,""Away""]
    match_schedule[63,""Away""] <- match_schedule[62,""Home""]
  }
  
  ## FIXTURE SIMULATING (MEDAL GAMES)
  for (val in medaltotal){
    gamenumber <- val
    match_schedule[gamenumber, ""HomexG""] <- xG_matrix[match(match_schedule[gamenumber, ""Away""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Home""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""AwayxG""] <- xG_matrix[match(match_schedule[gamenumber, ""Home""],rownames(xG_matrix)),match(match_schedule[gamenumber, ""Away""],colnames(xG_matrix))]
    match_schedule[gamenumber, ""HomeG""] <- rpois(1,match_schedule[gamenumber, ""HomexG""])
    match_schedule[gamenumber, ""AwayG""] <- rpois(1,match_schedule[gamenumber, ""AwayxG""])
    if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""HomePts""] <- 3
      match_schedule[gamenumber, ""AwayPts""] <- 0
    } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
      match_schedule[gamenumber, ""AwayPts""] <- 3
      match_schedule[gamenumber, ""HomePts""] <- 0
    } else {
      match_schedule[gamenumber, ""HomeG""] <- match_schedule[gamenumber, ""HomeG""] + rpois(1,(match_schedule[gamenumber, ""HomexG""])/2)
      match_schedule[gamenumber, ""AwayG""] <- match_schedule[gamenumber, ""AwayG""] + rpois(1,(match_schedule[gamenumber, ""AwayxG""])/2)
      if (match_schedule[gamenumber, ""HomeG""] > match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""HomePts""] <- 3
        match_schedule[gamenumber, ""AwayPts""] <- 0
      } else if (match_schedule[gamenumber, ""HomeG""] < match_schedule[gamenumber, ""AwayG""]){
        match_schedule[gamenumber, ""AwayPts""] <- 3
        match_schedule[gamenumber, ""HomePts""] <- 0
      } else {
        penalties <- runif(1)
        if (penalties > 0.5){
          match_schedule[gamenumber, ""HomePts""] <- 3
          match_schedule[gamenumber, ""AwayPts""] <- 0
        } else {
          match_schedule[gamenumber, ""AwayPts""] <- 3
          match_schedule[gamenumber, ""HomePts""] <- 0
        }
      }
    }
  }
  
  # CALCULATION OF TOTAL RESULTS
  for (var in teams){
    trigramme <- var
    poscheck <- c(groupresults[[ 2]][[1]],groupresults[[ 6]][[1]],groupresults[[10]][[1]],groupresults[[14]][[1]],
                  groupresults[[18]][[1]],groupresults[[22]][[1]],groupresults[[26]][[1]],groupresults[[30]][[1]])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Group 1st""] <- finish_matrix[trigramme, ""Group 1st""] + 1
    }
    poscheck <- c(groupresults[[ 2]][[2]],groupresults[[ 6]][[2]],groupresults[[10]][[2]],groupresults[[14]][[2]],
                  groupresults[[18]][[2]],groupresults[[22]][[2]],groupresults[[26]][[2]],groupresults[[30]][[2]])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Group 2nd""] <- finish_matrix[trigramme, ""Group 2nd""] + 1
    }
    poscheck <- c(groupresults[[ 2]][[3]],groupresults[[ 6]][[3]],groupresults[[10]][[3]],groupresults[[14]][[3]],
                  groupresults[[18]][[3]],groupresults[[22]][[3]],groupresults[[26]][[3]],groupresults[[30]][[3]])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Group 3rd""] <- finish_matrix[trigramme, ""Group 3rd""] + 1
    }
    poscheck <- c(groupresults[[ 2]][[4]],groupresults[[ 6]][[4]],groupresults[[10]][[4]],groupresults[[14]][[4]],
                  groupresults[[18]][[4]],groupresults[[22]][[4]],groupresults[[26]][[4]],groupresults[[30]][[4]])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Group 4th""] <- finish_matrix[trigramme, ""Group 4th""] + 1
    }
    poscheck <- c(match_schedule[49, ""Home""], match_schedule[49, ""Away""], match_schedule[50, ""Home""], match_schedule[50, ""Away""],
                  match_schedule[51, ""Home""], match_schedule[51, ""Away""], match_schedule[52, ""Home""], match_schedule[52, ""Away""],
                  match_schedule[53, ""Home""], match_schedule[53, ""Away""], match_schedule[54, ""Home""], match_schedule[54, ""Away""],
                  match_schedule[55, ""Home""], match_schedule[55, ""Away""], match_schedule[56, ""Home""], match_schedule[56, ""Away""])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Round of 16""] <- finish_matrix[trigramme, ""Round of 16""] + 1
    }
    poscheck <- c(match_schedule[57, ""Home""], match_schedule[57, ""Away""], match_schedule[58, ""Home""], match_schedule[58, ""Away""],
                  match_schedule[59, ""Home""], match_schedule[59, ""Away""], match_schedule[60, ""Home""], match_schedule[60, ""Away""])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Quarter Finals""] <- finish_matrix[trigramme, ""Quarter Finals""] + 1
    }
    poscheck <- c(match_schedule[61, ""Home""], match_schedule[61, ""Away""], match_schedule[62, ""Home""], match_schedule[62, ""Away""])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Semi Finals""] <- finish_matrix[trigramme, ""Semi Finals""] + 1
    }
    poscheck <- c(match_schedule[64, ""Home""], match_schedule[64, ""Away""])
    if (trigramme %in% poscheck == TRUE){
      finish_matrix[trigramme, ""Final""] <- finish_matrix[trigramme, ""Final""] + 1
    }
    if (match_schedule[64, ""Home""] == trigramme & match_schedule[64, ""HomePts""] == 3 | match_schedule[64, ""Away""] == trigramme & match_schedule[64, ""AwayPts""] == 3){
      finish_matrix[trigramme, ""Champion""] <- finish_matrix[trigramme, ""Champion""] + 1
    }
  }
}"
2W2cBspV,prionic recursion,shivamisone,Java,Wednesday 19th of July 2023 02:47:53 AM CDT,"import java.util.*;
public class pronic{
    static int s,p,q,r;
    pronic(){
        p = 1;
    }
    public static void main(){
        acceptnum();
        pronic ob = new pronic();
        ob.check();
    }
    static void acceptnum(){
        System.out.println(""enter a number"");
        Scanner sc = new Scanner(System.in);
        s = sc.nextInt();
    }
    boolean ispronic(int v){
        if(s%v ==0 && s%(v+1) ==0 && v*(v+1) == s){
            System.out.println(v+"" ""+s+"" ""+p);
            return true;
        }
        else {
            p = p+1;
            boolean k = ispronic(p);
            if(k == true){
                return true;
            }
            else return false;
        }
    }
    
    void check(){
        boolean f = ispronic(p);
        if(f == true){
            System.out.println(""pronic"");
        } else {
            System.out.println(""not pronic"");
        }
    }
}"
2ysYtpLT,Cycle Sort,ctupid09,C++,Wednesday 19th of July 2023 02:43:18 AM CDT,"#include<bits/stdc++.h> 
using namespace std; 

void cycleSortDistinct(int arr[], int n) 
{ 
    for(int cs=0;cs<n-1;cs++){
        int item=arr[cs];
        int pos=cs;
        for(int i=cs+1;i<n;i++)
            if(arr[i]<item)
                pos++;
        swap(item,arr[pos]);
        while(pos!=cs){
            pos=cs;
            for(int i=cs+1;i<n;i++)
                if(arr[i]<item)
                    pos++;
            swap(item,arr[pos]);
        }
    }
} 
  
int main() 
{ 
    int arr[] = { 20,40,50,10,30 }; 
    int n = sizeof(arr) / sizeof(arr[0]); 
    cycleSortDistinct(arr, n); 
   
    for (int i = 0; i < n; i++) 
        cout << arr[i] << "" "";
        
    return 0; 
} "
ysZVMtkv,Untitled,AyAks69,JavaScript,Wednesday 19th of July 2023 02:19:23 AM CDT,"const MongoClient = require(""mongodb"").MongoClient;
const assert = require(""assert"");

const url = ""mongodb://127.0.0.1:27017"";

const dbName = ""carsDB"";

const client = new MongoClient(url);

client.connect((err) => {
  assert.equal(null, err);
  console.log(""Connnect to server"");

  const db = client.db(dbName);

  client.close();
});
"
yxs7Z2gQ,target_exception,antru,Python,Wednesday 19th of July 2023 01:44:49 AM CDT,"---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
File ~/miniconda3/envs/vtb_scorekit_1_2_2/lib/python3.9/site-packages/pandas/core/indexes/base.py:3802, in Index.get_loc(self, key, method, tolerance)
   3801 try:
-> 3802     return self._engine.get_loc(casted_key)
   3803 except KeyError as err:

File ~/miniconda3/envs/vtb_scorekit_1_2_2/lib/python3.9/site-packages/pandas/_libs/index.pyx:138, in pandas._libs.index.IndexEngine.get_loc()

File ~/miniconda3/envs/vtb_scorekit_1_2_2/lib/python3.9/site-packages/pandas/_libs/index.pyx:165, in pandas._libs.index.IndexEngine.get_loc()

File pandas/_libs/hashtable_class_helper.pxi:5745, in pandas._libs.hashtable.PyObjectHashTable.get_item()

File pandas/_libs/hashtable_class_helper.pxi:5753, in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: None

The above exception was the direct cause of the following exception:

KeyError                                  Traceback (most recent call last)
Cell In[21], line 1
----> 1 compressed_df = DataSamples(
      2     samples={
      3         ""train"": original_df.copy()
      4     },  # здесь copy из-за перезаписи подаваемого датафрейма
      5     compress=True,
      6     cat_columns=[""to_category""],
      7 ).samples[""train""]

File /mnt/d/repo/packages/vtb_mlkit/scorekit/data.py:175, in DataSamples.__init__(self, samples, target, features, cat_columns, min_nunique, time_column, id_column, feature_descriptions, train_name, special_bins, result_folder, n_jobs, random_state, samples_split, bootstrap_split, ci_analytic, ci_alpha, compress, verbose, logger)
    173 if compress:
    174     for name, sample in self.samples.items():
--> 175         self.reduce_mem_usage(sample)
    176 if bootstrap_split is not None and isinstance(bootstrap_split, dict):
    177     self.bootstrap_split(**bootstrap_split)

File /mnt/d/repo/packages/vtb_mlkit/scorekit/data.py:1365, in DataSamples.reduce_mem_usage(self, df)
   1364 def reduce_mem_usage(self, df):
-> 1365     df[self.target] = df[self.target].astype('int8')
   1366     for f in self.features:
   1367         if pd.api.types.is_numeric_dtype(df[f]):

File ~/miniconda3/envs/vtb_scorekit_1_2_2/lib/python3.9/site-packages/pandas/core/frame.py:3807, in DataFrame.__getitem__(self, key)
   3805 if self.columns.nlevels > 1:
   3806     return self._getitem_multilevel(key)
-> 3807 indexer = self.columns.get_loc(key)
   3808 if is_integer(indexer):
   3809     indexer = [indexer]

File ~/miniconda3/envs/vtb_scorekit_1_2_2/lib/python3.9/site-packages/pandas/core/indexes/base.py:3804, in Index.get_loc(self, key, method, tolerance)
   3802     return self._engine.get_loc(casted_key)
   3803 except KeyError as err:
-> 3804     raise KeyError(key) from err
   3805 except TypeError:
   3806     # If we have a listlike key, _check_indexing_error will raise
   3807     #  InvalidIndexError. Otherwise we fall through and re-raise
   3808     #  the TypeError.
   3809     self._check_indexing_error(key)

KeyError: None"
908PZs9n,List View Quiz Detail,AhmadXploit,Dart,Wednesday 19th of July 2023 01:35:33 AM CDT,"{
  ""quiz"": [
    {
      ""question"": ""Who was the first President of the United States?"",
      ""options"": [""George Washington"", ""Thomas Jefferson"", ""Abraham Lincoln"", ""John F. Kennedy""],
      ""keyAnswer"": 0
    },
    {
      ""question"": ""When did World War II end?"",
      ""options"": [""1939"", ""1945"", ""1948"", ""1953""],
      ""keyAnswer"": 1
    },
    {
      ""question"": ""Which civilization built the Great Pyramid of Giza?"",
      ""options"": [""Mayans"", ""Egyptians"", ""Greeks"", ""Romans""],
      ""keyAnswer"": 1
    }
  ]
}"
Z5gGgA0U,Nigerian scammers [19-7-1/2023],bombaires,HTML,Wednesday 19th of July 2023 01:20:39 AM CDT,"<a href=""mailto:americaloanscompany@financier.com"">americaloanscompany@financier.com</a>
<a href=""mailto:fbi_govt2@usa.com"">fbi_govt2@usa.com</a>
<a href=""mailto:deanmarugor5@yahoo.com"">deanmarugor5@yahoo.com</a>
<a href=""mailto:infi5059@gmail.com"">infi5059@gmail.com</a>
<a href=""mailto:i.nfi5.05.9@gmail.com"">i.nfi5.05.9@gmail.com</a>
<a href=""mailto:inf.i.50.59@gmail.com"">inf.i.50.59@gmail.com</a>
<a href=""mailto:in.f.i.5.0.5.9@gmail.com"">in.f.i.5.0.5.9@gmail.com</a>
<a href=""mailto:inf.i.50.5.9@gmail.com"">inf.i.50.5.9@gmail.com</a>
<a href=""mailto:i.n.fi5.0.59@gmail.com"">i.n.fi5.0.59@gmail.com</a>
<a href=""mailto:infi.5.0.5.9@gmail.com"">infi.5.0.5.9@gmail.com</a>
<a href=""mailto:inf.i.5059@gmail.com"">inf.i.5059@gmail.com</a>
<a href=""mailto:i.n.f.i505.9@gmail.com"">i.n.f.i505.9@gmail.com</a>
<a href=""mailto:infi5.0.59@gmail.com"">infi5.0.59@gmail.com</a>
<a href=""mailto:i.nfi.505.9@gmail.com"">i.nfi.505.9@gmail.com</a>
<a href=""mailto:in.fi5.0.5.9@gmail.com"">in.fi5.0.5.9@gmail.com</a>
<a href=""mailto:i.n.fi.5.059@gmail.com"">i.n.fi.5.059@gmail.com</a>
<a href=""mailto:i.n.fi.5059@gmail.com"">i.n.fi.5059@gmail.com</a>
<a href=""mailto:i.nfi5059@gmail.com"">i.nfi5059@gmail.com</a>
<a href=""mailto:i.n.f.i50.59@gmail.com"">i.n.f.i50.59@gmail.com</a>
<a href=""mailto:infi.50.5.9@gmail.com"">infi.50.5.9@gmail.com</a>
<a href=""mailto:i.nf.i50.5.9@gmail.com"">i.nf.i50.5.9@gmail.com</a>
<a href=""mailto:in.fi5.05.9@gmail.com"">in.fi5.05.9@gmail.com</a>
<a href=""mailto:i.nf.i.5059@gmail.com"">i.nf.i.5059@gmail.com</a>
<a href=""mailto:in.f.i.5059@gmail.com"">in.f.i.5059@gmail.com</a>
<a href=""mailto:i.nf.i50.59@gmail.com"">i.nf.i50.59@gmail.com</a>
<a href=""mailto:inf.i.5.0.59@gmail.com"">inf.i.5.0.59@gmail.com</a>
<a href=""mailto:in.fi.505.9@gmail.com"">in.fi.505.9@gmail.com</a>
<a href=""mailto:i.n.fi.50.59@gmail.com"">i.n.fi.50.59@gmail.com</a>
<a href=""mailto:infi50.59@gmail.com"">infi50.59@gmail.com</a>
<a href=""mailto:i.nfi.5.059@gmail.com"">i.nfi.5.059@gmail.com</a>
<a href=""mailto:i.nfi5.0.5.9@gmail.com"">i.nfi5.0.5.9@gmail.com</a>
<a href=""mailto:i.n.fi5.0.5.9@gmail.com"">i.n.fi5.0.5.9@gmail.com</a>
<a href=""mailto:infi.5059@gmail.com"">infi.5059@gmail.com</a>
<a href=""mailto:i.nf.i5.0.5.9@gmail.com"">i.nf.i5.0.5.9@gmail.com</a>
<a href=""mailto:i.nf.i5.05.9@gmail.com"">i.nf.i5.05.9@gmail.com</a>
<a href=""mailto:in.fi.5059@gmail.com"">in.fi.5059@gmail.com</a>
<a href=""mailto:i.n.f.i.5059@gmail.com"">i.n.f.i.5059@gmail.com</a>
<a href=""mailto:inf.i.5.05.9@gmail.com"">inf.i.5.05.9@gmail.com</a>
<a href=""mailto:i.nfi5.0.59@gmail.com"">i.nfi5.0.59@gmail.com</a>
<a href=""mailto:i.n.f.i.50.59@gmail.com"">i.n.f.i.50.59@gmail.com</a>
<a href=""mailto:in.f.i5.0.59@gmail.com"">in.f.i5.0.59@gmail.com</a>
<a href=""mailto:infi.50.59@gmail.com"">infi.50.59@gmail.com</a>
<a href=""mailto:in.fi.5.059@gmail.com"">in.fi.5.059@gmail.com</a>
<a href=""mailto:in.fi.50.5.9@gmail.com"">in.fi.50.5.9@gmail.com</a>
<a href=""mailto:in.fi5.059@gmail.com"">in.fi5.059@gmail.com</a>
<a href=""mailto:i.n.f.i5059@gmail.com"">i.n.f.i5059@gmail.com</a>
<a href=""mailto:i.nfi.5.0.59@gmail.com"">i.nfi.5.0.59@gmail.com</a>
<a href=""mailto:i.n.f.i.5.0.59@gmail.com"">i.n.f.i.5.0.59@gmail.com</a>
<a href=""mailto:inf.i.5.059@gmail.com"">inf.i.5.059@gmail.com</a>
<a href=""mailto:in.fi.5.05.9@gmail.com"">in.fi.5.05.9@gmail.com</a>
<a href=""mailto:in.fi5059@gmail.com"">in.fi5059@gmail.com</a>
<a href=""mailto:i.n.fi50.5.9@gmail.com"">i.n.fi50.5.9@gmail.com</a>
<a href=""mailto:i.n.fi50.59@gmail.com"">i.n.fi50.59@gmail.com</a>
<a href=""mailto:i.nfi5.059@gmail.com"">i.nfi5.059@gmail.com</a>
<a href=""mailto:i.nfi50.5.9@gmail.com"">i.nfi50.5.9@gmail.com</a>
<a href=""mailto:i.n.fi.5.0.59@gmail.com"">i.n.fi.5.0.59@gmail.com</a>
<a href=""mailto:i.n.f.i.50.5.9@gmail.com"">i.n.f.i.50.5.9@gmail.com</a>
<a href=""mailto:i.nf.i.5.0.59@gmail.com"">i.nf.i.5.0.59@gmail.com</a>
<a href=""mailto:inf.i.5.0.5.9@gmail.com"">inf.i.5.0.5.9@gmail.com</a>
<a href=""mailto:infi5059@gmail.com"">infi5059@gmail.com</a>
<a href=""mailto:in.f.i.5.0.59@gmail.com"">in.f.i.5.0.59@gmail.com</a>
<a href=""mailto:i.n.f.i5.0.5.9@gmail.com"">i.n.f.i5.0.5.9@gmail.com</a>
<a href=""mailto:infi5.05.9@gmail.com"">infi5.05.9@gmail.com</a>
<a href=""mailto:i.nf.i.5.059@gmail.com"">i.nf.i.5.059@gmail.com</a>
<a href=""mailto:i.nf.i.50.59@gmail.com"">i.nf.i.50.59@gmail.com</a>
<a href=""mailto:i.nfi.50.59@gmail.com"">i.nfi.50.59@gmail.com</a>
<a href=""mailto:i.nf.i.50.5.9@gmail.com"">i.nf.i.50.5.9@gmail.com</a>
<a href=""mailto:i.nf.i.5.05.9@gmail.com"">i.nf.i.5.05.9@gmail.com</a>
<a href=""mailto:inf.i5059@gmail.com"">inf.i5059@gmail.com</a>
<a href=""mailto:i.nfi50.59@gmail.com"">i.nfi50.59@gmail.com</a>
<a href=""mailto:inf.i50.59@gmail.com"">inf.i50.59@gmail.com</a>
<a href=""mailto:i.nf.i505.9@gmail.com"">i.nf.i505.9@gmail.com</a>
<a href=""mailto:i.n.fi.50.5.9@gmail.com"">i.n.fi.50.5.9@gmail.com</a>
<a href=""mailto:i.n.fi5.059@gmail.com"">i.n.fi5.059@gmail.com</a>
<a href=""mailto:i.n.fi.5.0.5.9@gmail.com"">i.n.fi.5.0.5.9@gmail.com</a>
<a href=""mailto:inf.i5.05.9@gmail.com"">inf.i5.05.9@gmail.com</a>
<a href=""mailto:inf.i.505.9@gmail.com"">inf.i.505.9@gmail.com</a>
<a href=""mailto:infi5.059@gmail.com"">infi5.059@gmail.com</a>
<a href=""mailto:infi50.5.9@gmail.com"">infi50.5.9@gmail.com</a>
<a href=""mailto:infi.505.9@gmail.com"">infi.505.9@gmail.com</a>
<a href=""mailto:infi.5.059@gmail.com"">infi.5.059@gmail.com</a>
<a href=""mailto:i.n.f.i5.059@gmail.com"">i.n.f.i5.059@gmail.com</a>
<a href=""mailto:in.fi505.9@gmail.com"">in.fi505.9@gmail.com</a>
<a href=""mailto:i.nf.i.505.9@gmail.com"">i.nf.i.505.9@gmail.com</a>
<a href=""mailto:inf.i50.5.9@gmail.com"">inf.i50.5.9@gmail.com</a>
<a href=""mailto:in.fi50.59@gmail.com"">in.fi50.59@gmail.com</a>
<a href=""mailto:i.n.f.i.5.05.9@gmail.com"">i.n.f.i.5.05.9@gmail.com</a>
<a href=""mailto:i.n.f.i.505.9@gmail.com"">i.n.f.i.505.9@gmail.com</a>
<a href=""mailto:i.n.fi5059@gmail.com"">i.n.fi5059@gmail.com</a>
<a href=""mailto:in.f.i5.0.5.9@gmail.com"">in.f.i5.0.5.9@gmail.com</a>
<a href=""mailto:i.nfi.5059@gmail.com"">i.nfi.5059@gmail.com</a>
<a href=""mailto:inf.i5.0.5.9@gmail.com"">inf.i5.0.5.9@gmail.com</a>
<a href=""mailto:i.nfi.5.05.9@gmail.com"">i.nfi.5.05.9@gmail.com</a>
<a href=""mailto:i.nf.i5059@gmail.com"">i.nf.i5059@gmail.com</a>
<a href=""mailto:i.nf.i5.0.59@gmail.com"">i.nf.i5.0.59@gmail.com</a>
<a href=""mailto:inf.i5.059@gmail.com"">inf.i5.059@gmail.com</a>
<a href=""mailto:i.n.fi.5.05.9@gmail.com"">i.n.fi.5.05.9@gmail.com</a>
<a href=""mailto:i.n.f.i.5.0.5.9@gmail.com"">i.n.f.i.5.0.5.9@gmail.com</a>
<a href=""mailto:i.nfi.50.5.9@gmail.com"">i.nfi.50.5.9@gmail.com</a>
<a href=""mailto:i.n.fi.505.9@gmail.com"">i.n.fi.505.9@gmail.com</a>
<a href=""mailto:i.n.f.i.5.059@gmail.com"">i.n.f.i.5.059@gmail.com</a>
<a href=""mailto:infi.5.05.9@gmail.com"">infi.5.05.9@gmail.com</a>
<a href=""mailto:in.f.i5.059@gmail.com"">in.f.i5.059@gmail.com</a>
<a href=""mailto:in.fi.50.59@gmail.com"">in.fi.50.59@gmail.com</a>
<a href=""mailto:i.nfi.5.0.5.9@gmail.com"">i.nfi.5.0.5.9@gmail.com</a>
<a href=""mailto:i.n.f.i50.5.9@gmail.com"">i.n.f.i50.5.9@gmail.com</a>
<a href=""mailto:inf.i5.0.59@gmail.com"">inf.i5.0.59@gmail.com</a>
<a href=""mailto:i.nf.i5.059@gmail.com"">i.nf.i5.059@gmail.com</a>
<a href=""mailto:inf.i505.9@gmail.com"">inf.i505.9@gmail.com</a>
<a href=""mailto:in.f.i50.5.9@gmail.com"">in.f.i50.5.9@gmail.com</a>
<a href=""mailto:in.fi.5.0.59@gmail.com"">in.fi.5.0.59@gmail.com</a>
<a href=""mailto:in.f.i505.9@gmail.com"">in.f.i505.9@gmail.com</a>
<a href=""mailto:i.n.f.i5.0.59@gmail.com"">i.n.f.i5.0.59@gmail.com</a>
<a href=""mailto:in.f.i5.05.9@gmail.com"">in.f.i5.05.9@gmail.com</a>
<a href=""mailto:i.nf.i.5.0.5.9@gmail.com"">i.nf.i.5.0.5.9@gmail.com</a>
<a href=""mailto:infi505.9@gmail.com"">infi505.9@gmail.com</a>
<a href=""mailto:in.fi.5.0.5.9@gmail.com"">in.fi.5.0.5.9@gmail.com</a>
<a href=""mailto:in.f.i.505.9@gmail.com"">in.f.i.505.9@gmail.com</a>
<a href=""mailto:in.f.i.50.59@gmail.com"">in.f.i.50.59@gmail.com</a>
<a href=""mailto:i.n.fi505.9@gmail.com"">i.n.fi505.9@gmail.com</a>
<a href=""mailto:in.f.i.50.5.9@gmail.com"">in.f.i.50.5.9@gmail.com</a>
<a href=""mailto:infi5.0.5.9@gmail.com"">infi5.0.5.9@gmail.com</a>
<a href=""mailto:i.nfi505.9@gmail.com"">i.nfi505.9@gmail.com</a>
<a href=""mailto:infi.5.0.59@gmail.com"">infi.5.0.59@gmail.com</a>
<a href=""mailto:in.f.i50.59@gmail.com"">in.f.i50.59@gmail.com</a>
<a href=""mailto:i.n.f.i5.05.9@gmail.com"">i.n.f.i5.05.9@gmail.com</a>
<a href=""mailto:in.f.i5059@gmail.com"">in.f.i5059@gmail.com</a>
<a href=""mailto:i.n.fi5.05.9@gmail.com"">i.n.fi5.05.9@gmail.com</a>
<a href=""mailto:in.fi50.5.9@gmail.com"">in.fi50.5.9@gmail.com</a>
<a href=""mailto:in.f.i.5.05.9@gmail.com"">in.f.i.5.05.9@gmail.com</a>
<a href=""mailto:in.fi5.0.59@gmail.com"">in.fi5.0.59@gmail.com</a>
<a href=""mailto:in.f.i.5.059@gmail.com"">in.f.i.5.059@gmail.com</a>
<a href=""mailto:zx8276@gmail.com"">zx8276@gmail.com</a>
<a href=""mailto:zx.8276@gmail.com"">zx.8276@gmail.com</a>
<a href=""mailto:zx82.7.6@gmail.com"">zx82.7.6@gmail.com</a>
<a href=""mailto:z.x82.7.6@gmail.com"">z.x82.7.6@gmail.com</a>
<a href=""mailto:z.x8.2.76@gmail.com"">z.x8.2.76@gmail.com</a>
<a href=""mailto:zx.8.276@gmail.com"">zx.8.276@gmail.com</a>
<a href=""mailto:z.x.82.76@gmail.com"">z.x.82.76@gmail.com</a>
<a href=""mailto:z.x.82.7.6@gmail.com"">z.x.82.7.6@gmail.com</a>
<a href=""mailto:zx.8.27.6@gmail.com"">zx.8.27.6@gmail.com</a>
<a href=""mailto:z.x8.27.6@gmail.com"">z.x8.27.6@gmail.com</a>
<a href=""mailto:zx.82.76@gmail.com"">zx.82.76@gmail.com</a>
<a href=""mailto:zx8.2.7.6@gmail.com"">zx8.2.7.6@gmail.com</a>
<a href=""mailto:zx8.276@gmail.com"">zx8.276@gmail.com</a>
<a href=""mailto:z.x.8.2.76@gmail.com"">z.x.8.2.76@gmail.com</a>
<a href=""mailto:z.x.8276@gmail.com"">z.x.8276@gmail.com</a>
<a href=""mailto:z.x.827.6@gmail.com"">z.x.827.6@gmail.com</a>
<a href=""mailto:zx.8.2.76@gmail.com"">zx.8.2.76@gmail.com</a>
<a href=""mailto:zx8.2.76@gmail.com"">zx8.2.76@gmail.com</a>
<a href=""mailto:zx.8.2.7.6@gmail.com"">zx.8.2.7.6@gmail.com</a>
<a href=""mailto:zx8.27.6@gmail.com"">zx8.27.6@gmail.com</a>
<a href=""mailto:zx.82.7.6@gmail.com"">zx.82.7.6@gmail.com</a>
<a href=""mailto:z.x8.276@gmail.com"">z.x8.276@gmail.com</a>
<a href=""mailto:zx.827.6@gmail.com"">zx.827.6@gmail.com</a>
<a href=""mailto:z.x827.6@gmail.com"">z.x827.6@gmail.com</a>
<a href=""mailto:zx827.6@gmail.com"">zx827.6@gmail.com</a>
<a href=""mailto:zx8276@gmail.com"">zx8276@gmail.com</a>
<a href=""mailto:z.x8276@gmail.com"">z.x8276@gmail.com</a>
<a href=""mailto:z.x.8.27.6@gmail.com"">z.x.8.27.6@gmail.com</a>
<a href=""mailto:zx82.76@gmail.com"">zx82.76@gmail.com</a>
<a href=""mailto:z.x82.76@gmail.com"">z.x82.76@gmail.com</a>
<a href=""mailto:z.x8.2.7.6@gmail.com"">z.x8.2.7.6@gmail.com</a>
<a href=""mailto:z.x.8.2.7.6@gmail.com"">z.x.8.2.7.6@gmail.com</a>
<a href=""mailto:z.x.8.276@gmail.com"">z.x.8.276@gmail.com</a>

<a href=""mailto:fbi_govt.officefile8@yahoo.com"">fbi_govt.officefile8@yahoo.com</a>
<a href=""mailto:marugordean30@yahoo.com""marugordean30@yahoo.com</a>
<a href=""mailto:andrewhuberman468@gmail.com"">andrewhuberman468@gmail.com</a>
<a href=""mailto:a.ndrewh.ub.er.m.an4.6.8@gmail.com"">a.ndrewh.ub.er.m.an4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.e.whu.b.e.rm.an.46.8@gmail.com"">a.ndr.e.whu.b.e.rm.an.46.8@gmail.com</a>
<a href=""mailto:a.n.d.rewh.uber.m.an4.6.8@gmail.com"">a.n.d.rewh.uber.m.an4.6.8@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.h.ub.er.m.a.n.4.6.8@gmail.com"">a.n.dr.e.w.h.ub.er.m.a.n.4.6.8@gmail.com</a>
<a href=""mailto:an.dr.ew.h.u.be.rm.a.n468@gmail.com"">an.dr.ew.h.u.be.rm.a.n468@gmail.com</a>
<a href=""mailto:andr.e.w.hube.r.ma.n468@gmail.com"">andr.e.w.hube.r.ma.n468@gmail.com</a>
<a href=""mailto:a.ndr.e.wh.ube.r.m.an.4.6.8@gmail.com"">a.ndr.e.wh.ube.r.m.an.4.6.8@gmail.com</a>
<a href=""mailto:an.d.rewh.ub.er.ma.n.468@gmail.com"">an.d.rewh.ub.er.ma.n.468@gmail.com</a>
<a href=""mailto:a.ndr.ew.h.u.be.r.man4.68@gmail.com"">a.ndr.ew.h.u.be.r.man4.68@gmail.com</a>
<a href=""mailto:a.ndr.ew.hub.e.rman.4.68@gmail.com"">a.ndr.ew.hub.e.rman.4.68@gmail.com</a>
<a href=""mailto:a.n.drewhub.e.rm.an.46.8@gmail.com"">a.n.drewhub.e.rm.an.46.8@gmail.com</a>
<a href=""mailto:and.r.e.wh.u.ber.man46.8@gmail.com"">and.r.e.wh.u.ber.man46.8@gmail.com</a>
<a href=""mailto:an.dr.ewhub.e.rma.n468@gmail.com"">an.dr.ewhub.e.rma.n468@gmail.com</a>
<a href=""mailto:a.ndr.e.w.h.u.b.e.rma.n46.8@gmail.com"">a.ndr.e.w.h.u.b.e.rma.n46.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.whu.b.erman.46.8@gmail.com"">a.nd.r.e.whu.b.erman.46.8@gmail.com</a>
<a href=""mailto:an.dr.e.whub.erm.an46.8@gmail.com"">an.dr.e.whub.erm.an46.8@gmail.com</a>
<a href=""mailto:a.n.dr.ew.hub.e.rman4.68@gmail.com"">a.n.dr.ew.hub.e.rman4.68@gmail.com</a>
<a href=""mailto:a.n.dr.e.whub.e.rm.a.n46.8@gmail.com"">a.n.dr.e.whub.e.rm.a.n46.8@gmail.com</a>
<a href=""mailto:an.d.rew.h.ub.e.r.ma.n.46.8@gmail.com"">an.d.rew.h.ub.e.r.ma.n.46.8@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.h.ube.rm.an.46.8@gmail.com"">a.n.dr.e.w.h.ube.rm.an.46.8@gmail.com</a>
<a href=""mailto:andr.e.w.h.ub.er.m.an.46.8@gmail.com"">andr.e.w.h.ub.er.m.an.46.8@gmail.com</a>
<a href=""mailto:a.n.drewh.u.ber.m.an.468@gmail.com"">a.n.drewh.u.ber.m.an.468@gmail.com</a>
<a href=""mailto:a.n.d.r.e.wh.uber.m.an.46.8@gmail.com"">a.n.d.r.e.wh.uber.m.an.46.8@gmail.com</a>
<a href=""mailto:an.d.rewhu.b.erm.an.468@gmail.com"">an.d.rewhu.b.erm.an.468@gmail.com</a>
<a href=""mailto:a.n.drew.hube.rm.an4.68@gmail.com"">a.n.drew.hube.rm.an4.68@gmail.com</a>
<a href=""mailto:a.n.d.re.w.huberma.n.468@gmail.com"">a.n.d.re.w.huberma.n.468@gmail.com</a>
<a href=""mailto:an.dr.ew.hube.rma.n468@gmail.com"">an.dr.ew.hube.rma.n468@gmail.com</a>
<a href=""mailto:andr.ewh.u.be.r.man.46.8@gmail.com"">andr.ewh.u.be.r.man.46.8@gmail.com</a>
<a href=""mailto:andr.e.whu.be.rman.468@gmail.com"">andr.e.whu.be.rman.468@gmail.com</a>
<a href=""mailto:andr.ew.h.u.b.e.r.m.an4.6.8@gmail.com"">andr.ew.h.u.b.e.r.m.an4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.e.wh.ub.er.ma.n.4.6.8@gmail.com"">a.ndr.e.wh.ub.er.ma.n.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.hu.b.erman468@gmail.com"">a.n.d.r.ew.hu.b.erman468@gmail.com</a>
<a href=""mailto:a.n.d.r.e.w.hu.berma.n46.8@gmail.com"">a.n.d.r.e.w.hu.berma.n46.8@gmail.com</a>
<a href=""mailto:andr.ewhu.b.er.ma.n4.6.8@gmail.com"">andr.ewhu.b.er.ma.n4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.whu.be.rman4.6.8@gmail.com"">a.nd.r.e.whu.be.rman4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.re.wh.u.berma.n.4.6.8@gmail.com"">a.n.d.re.wh.u.berma.n.4.6.8@gmail.com</a>
<a href=""mailto:andre.wh.u.b.e.rma.n.4.68@gmail.com"">andre.wh.u.b.e.rma.n.4.68@gmail.com</a>
<a href=""mailto:and.rewhube.rm.a.n.468@gmail.com"">and.rewhube.rm.a.n.468@gmail.com</a>
<a href=""mailto:a.n.dre.whuber.man.468@gmail.com"">a.n.dre.whuber.man.468@gmail.com</a>
<a href=""mailto:a.ndre.wh.u.be.rman468@gmail.com"">a.ndre.wh.u.be.rman468@gmail.com</a>
<a href=""mailto:a.nd.re.w.hu.be.r.ma.n.468@gmail.com"">a.nd.re.w.hu.be.r.ma.n.468@gmail.com</a>
<a href=""mailto:andr.ewh.u.b.e.rman4.6.8@gmail.com"">andr.ewh.u.b.e.rman4.6.8@gmail.com</a>
<a href=""mailto:a.ndre.wh.u.b.er.m.an.46.8@gmail.com"">a.ndre.wh.u.b.er.m.an.46.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ewhu.berma.n4.6.8@gmail.com"">a.n.d.r.ewhu.berma.n4.6.8@gmail.com</a>
<a href=""mailto:an.d.r.ew.hu.be.r.man.46.8@gmail.com"">an.d.r.ew.hu.be.r.man.46.8@gmail.com</a>
<a href=""mailto:an.d.r.ew.hu.b.erma.n.46.8@gmail.com"">an.d.r.ew.hu.b.erma.n.46.8@gmail.com</a>
<a href=""mailto:a.ndr.e.w.h.u.be.r.m.an.4.68@gmail.com"">a.ndr.e.w.h.u.be.r.m.an.4.68@gmail.com</a>
<a href=""mailto:an.d.rew.hu.be.r.ma.n4.68@gmail.com"">an.d.rew.hu.be.r.ma.n4.68@gmail.com</a>
<a href=""mailto:an.d.re.w.h.ube.rm.an.4.68@gmail.com"">an.d.re.w.h.ube.rm.an.4.68@gmail.com</a>
<a href=""mailto:a.ndr.e.whu.b.e.r.ma.n.468@gmail.com"">a.ndr.e.whu.b.e.r.ma.n.468@gmail.com</a>
<a href=""mailto:and.rew.h.u.b.erman.468@gmail.com"">and.rew.h.u.b.erman.468@gmail.com</a>
<a href=""mailto:an.d.re.w.h.ube.r.m.a.n.46.8@gmail.com"">an.d.re.w.h.ube.r.m.a.n.46.8@gmail.com</a>
<a href=""mailto:an.d.r.ew.huber.m.an.468@gmail.com"">an.d.r.ew.huber.m.an.468@gmail.com</a>
<a href=""mailto:and.rewhu.b.erm.an.4.6.8@gmail.com"">and.rewhu.b.erm.an.4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.wh.u.berm.a.n4.6.8@gmail.com"">a.nd.r.e.wh.u.berm.a.n4.6.8@gmail.com</a>
<a href=""mailto:and.r.e.whub.er.ma.n.468@gmail.com"">and.r.e.whub.er.ma.n.468@gmail.com</a>
<a href=""mailto:a.n.drewhuber.m.an.4.6.8@gmail.com"">a.n.drewhuber.m.an.4.6.8@gmail.com</a>
<a href=""mailto:andr.e.w.h.u.b.e.r.ma.n.4.68@gmail.com"">andr.e.w.h.u.b.e.r.ma.n.4.68@gmail.com</a>
<a href=""mailto:a.n.d.r.e.w.hu.b.er.man.4.68@gmail.com"">a.n.d.r.e.w.hu.b.er.man.4.68@gmail.com</a>
<a href=""mailto:an.dr.e.w.h.ube.rman46.8@gmail.com"">an.dr.e.w.h.ube.rman46.8@gmail.com</a>
<a href=""mailto:a.ndr.ewhuberman468@gmail.com"">a.ndr.ewhuberman468@gmail.com</a>
<a href=""mailto:an.dr.ewh.uberm.a.n4.68@gmail.com"">an.dr.ewh.uberm.a.n4.68@gmail.com</a>
<a href=""mailto:a.ndr.ew.h.u.be.r.man46.8@gmail.com"">a.ndr.ew.h.u.be.r.man46.8@gmail.com</a>
<a href=""mailto:a.ndr.ewhuber.man4.68@gmail.com"">a.ndr.ewhuber.man4.68@gmail.com</a>
<a href=""mailto:a.n.dr.e.wh.uberma.n.4.68@gmail.com"">a.n.dr.e.wh.uberma.n.4.68@gmail.com</a>
<a href=""mailto:an.drewh.u.ber.ma.n.4.68@gmail.com"">an.drewh.u.ber.ma.n.4.68@gmail.com</a>
<a href=""mailto:an.d.rewh.u.be.r.m.an.4.6.8@gmail.com"">an.d.rewh.u.be.r.m.an.4.6.8@gmail.com</a>
<a href=""mailto:an.dre.wh.u.be.r.m.an468@gmail.com"">an.dre.wh.u.be.r.m.an468@gmail.com</a>
<a href=""mailto:and.re.wh.ub.er.m.an4.6.8@gmail.com"">and.re.wh.ub.er.m.an4.6.8@gmail.com</a>
<a href=""mailto:a.ndrew.hube.r.ma.n4.68@gmail.com"">a.ndrew.hube.r.ma.n4.68@gmail.com</a>
<a href=""mailto:andre.w.hube.r.m.a.n468@gmail.com"">andre.w.hube.r.m.a.n468@gmail.com</a>
<a href=""mailto:a.ndre.wh.u.ber.ma.n.4.68@gmail.com"">a.ndre.wh.u.ber.ma.n.4.68@gmail.com</a>
<a href=""mailto:an.dr.ewh.ub.e.r.man4.6.8@gmail.com"">an.dr.ewh.ub.e.r.man4.6.8@gmail.com</a>
<a href=""mailto:and.r.e.wh.uber.m.a.n.4.6.8@gmail.com"">and.r.e.wh.uber.m.a.n.4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.ew.h.ube.rm.an4.6.8@gmail.com"">a.nd.r.ew.h.ube.rm.an4.6.8@gmail.com</a>
<a href=""mailto:an.dr.ew.hub.erm.an.4.6.8@gmail.com"">an.dr.ew.hub.erm.an.4.6.8@gmail.com</a>
<a href=""mailto:and.r.e.w.h.u.b.e.r.ma.n.4.6.8@gmail.com"">and.r.e.w.h.u.b.e.r.ma.n.4.6.8@gmail.com</a>
<a href=""mailto:an.d.r.e.whube.r.man.4.6.8@gmail.com"">an.d.r.e.whube.r.man.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.re.w.h.u.ber.m.an.4.6.8@gmail.com"">a.n.d.re.w.h.u.ber.m.an.4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.ew.huber.m.an468@gmail.com"">a.ndr.ew.huber.m.an468@gmail.com</a>
<a href=""mailto:an.dre.whu.ber.m.a.n.46.8@gmail.com"">an.dre.whu.ber.m.a.n.46.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.hube.r.ma.n.4.6.8@gmail.com"">a.n.d.r.ew.hube.r.ma.n.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.re.whub.e.r.m.an.4.6.8@gmail.com"">a.n.d.re.whub.e.r.m.an.4.6.8@gmail.com</a>
<a href=""mailto:an.d.r.ew.hu.b.e.r.ma.n4.68@gmail.com"">an.d.r.ew.hu.b.e.r.ma.n4.68@gmail.com</a>
<a href=""mailto:a.n.drew.h.ube.r.man.46.8@gmail.com"">a.n.drew.h.ube.r.man.46.8@gmail.com</a>
<a href=""mailto:and.rew.h.u.b.e.r.m.an46.8@gmail.com"">and.rew.h.u.b.e.r.m.an46.8@gmail.com</a>
<a href=""mailto:andrewhub.er.ma.n4.68@gmail.com"">andrewhub.er.ma.n4.68@gmail.com</a>
<a href=""mailto:and.r.ewh.uberma.n4.68@gmail.com"">and.r.ewh.uberma.n4.68@gmail.com</a>
<a href=""mailto:a.nd.rewh.u.b.e.r.m.a.n46.8@gmail.com"">a.nd.rewh.u.b.e.r.m.a.n46.8@gmail.com</a>
<a href=""mailto:a.n.dr.e.whube.rm.an.4.68@gmail.com"">a.n.dr.e.whube.rm.an.4.68@gmail.com</a>
<a href=""mailto:a.ndre.wh.u.ber.man.468@gmail.com"">a.ndre.wh.u.ber.man.468@gmail.com</a>
<a href=""mailto:and.r.ewh.u.b.er.ma.n.46.8@gmail.com"">and.r.ewh.u.b.er.ma.n.46.8@gmail.com</a>
<a href=""mailto:a.ndrew.hu.b.e.rma.n.46.8@gmail.com"">a.ndrew.hu.b.e.rma.n.46.8@gmail.com</a>
<a href=""mailto:a.nd.r.ew.h.ub.e.rman.46.8@gmail.com"">a.nd.r.ew.h.ub.e.rman.46.8@gmail.com</a>
<a href=""mailto:a.n.dre.whu.be.rman4.68@gmail.com"">a.n.dre.whu.be.rman4.68@gmail.com</a>
<a href=""mailto:and.re.w.hube.r.ma.n.468@gmail.com"">and.re.w.hube.r.ma.n.468@gmail.com</a>
<a href=""mailto:a.nd.r.ew.hu.be.r.m.an468@gmail.com"">a.nd.r.ew.hu.be.r.m.an468@gmail.com</a>
<a href=""mailto:a.n.drewhube.rm.an.4.68@gmail.com"">a.n.drewhube.rm.an.4.68@gmail.com</a>
<a href=""mailto:a.ndre.w.h.ub.er.man.4.6.8@gmail.com"">a.ndre.w.h.ub.er.man.4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.e.whu.b.erm.an46.8@gmail.com"">a.ndr.e.whu.b.erm.an46.8@gmail.com</a>
<a href=""mailto:a.ndre.w.h.u.ber.ma.n.46.8@gmail.com"">a.ndre.w.h.u.ber.ma.n.46.8@gmail.com</a>
<a href=""mailto:a.n.d.re.whube.rma.n468@gmail.com"">a.n.d.re.whube.rma.n468@gmail.com</a>
<a href=""mailto:an.d.rewh.ub.er.man46.8@gmail.com"">an.d.rewh.ub.er.man46.8@gmail.com</a>
<a href=""mailto:an.dr.e.whuber.m.an.4.6.8@gmail.com"">an.dr.e.whuber.m.an.4.6.8@gmail.com</a>
<a href=""mailto:a.nd.rew.h.u.b.e.r.ma.n4.68@gmail.com"">a.nd.rew.h.u.b.e.r.ma.n4.68@gmail.com</a>
<a href=""mailto:a.n.d.re.whuber.m.a.n.468@gmail.com"">a.n.d.re.whuber.m.a.n.468@gmail.com</a>
<a href=""mailto:and.r.e.w.hu.b.e.r.m.a.n.4.68@gmail.com"">and.r.e.w.hu.b.e.r.m.a.n.4.68@gmail.com</a>
<a href=""mailto:andr.e.w.h.ub.e.r.m.a.n.46.8@gmail.com"">andr.e.w.h.ub.e.r.m.a.n.46.8@gmail.com</a>
<a href=""mailto:andr.e.w.hube.r.m.an468@gmail.com"">andr.e.w.hube.r.m.an468@gmail.com</a>
<a href=""mailto:a.n.d.rew.huber.ma.n.46.8@gmail.com"">a.n.d.rew.huber.ma.n.46.8@gmail.com</a>
<a href=""mailto:a.n.dr.e.whu.b.erm.a.n468@gmail.com"">a.n.dr.e.whu.b.erm.a.n468@gmail.com</a>
<a href=""mailto:andrew.h.ub.er.man4.68@gmail.com"">andrew.h.ub.er.man4.68@gmail.com</a>
<a href=""mailto:an.dr.e.w.hub.e.r.m.an4.6.8@gmail.com"">an.dr.e.w.hub.e.r.m.an4.6.8@gmail.com</a>
<a href=""mailto:and.r.e.w.hub.e.rm.an.46.8@gmail.com"">and.r.e.w.hub.e.rm.an.46.8@gmail.com</a>
<a href=""mailto:a.nd.r.ew.h.ub.erman.4.68@gmail.com"">a.nd.r.ew.h.ub.erman.4.68@gmail.com</a>
<a href=""mailto:a.n.d.rewh.u.be.rman4.6.8@gmail.com"">a.n.d.rewh.u.be.rman4.6.8@gmail.com</a>
<a href=""mailto:an.dr.ewhu.b.er.m.an.46.8@gmail.com"">an.dr.ewhu.b.er.m.an.46.8@gmail.com</a>
<a href=""mailto:a.n.d.rewh.u.b.e.r.m.a.n.468@gmail.com"">a.n.d.rewh.u.b.e.r.m.a.n.468@gmail.com</a>
<a href=""mailto:an.d.r.ew.h.u.b.e.rm.an4.68@gmail.com"">an.d.r.ew.h.u.b.e.rm.an4.68@gmail.com</a>
<a href=""mailto:a.n.drew.hub.e.r.m.an.46.8@gmail.com"">a.n.drew.hub.e.r.m.an.46.8@gmail.com</a>
<a href=""mailto:an.d.r.ewh.uberma.n4.6.8@gmail.com"">an.d.r.ewh.uberma.n4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.rew.h.u.ber.man.4.6.8@gmail.com"">a.n.d.rew.h.u.ber.man.4.6.8@gmail.com</a>
<a href=""mailto:andr.e.wh.u.b.er.m.an.4.6.8@gmail.com"">andr.e.wh.u.b.er.m.an.4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.hub.erma.n.4.68@gmail.com"">a.nd.r.e.w.hub.erma.n.4.68@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.hu.b.erman46.8@gmail.com"">a.n.d.r.ew.hu.b.erman46.8@gmail.com</a>
<a href=""mailto:andre.w.hu.be.rman.4.6.8@gmail.com"">andre.w.hu.be.rman.4.6.8@gmail.com</a>
<a href=""mailto:a.ndre.whu.be.r.man.46.8@gmail.com"">a.ndre.whu.be.r.man.46.8@gmail.com</a>
<a href=""mailto:a.n.dre.w.hu.be.r.man.4.6.8@gmail.com"">a.n.dre.w.hu.be.r.man.4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.ewh.ub.e.rm.an.4.68@gmail.com"">a.nd.r.ewh.ub.e.rm.an.4.68@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.hub.erm.an4.6.8@gmail.com"">a.nd.r.e.w.hub.erm.an4.6.8@gmail.com</a>
<a href=""mailto:a.n.drew.hu.ber.man4.68@gmail.com"">a.n.drew.hu.ber.man4.68@gmail.com</a>
<a href=""mailto:a.ndr.ewhu.ber.m.a.n4.68@gmail.com"">a.ndr.ewhu.ber.m.a.n4.68@gmail.com</a>
<a href=""mailto:a.n.dre.w.hu.b.er.m.an46.8@gmail.com"">a.n.dre.w.hu.b.er.m.an46.8@gmail.com</a>
<a href=""mailto:and.rewh.uber.man4.68@gmail.com"">and.rewh.uber.man4.68@gmail.com</a>
<a href=""mailto:a.ndr.ew.h.u.b.e.r.m.an.46.8@gmail.com"">a.ndr.ew.h.u.b.e.r.m.an.46.8@gmail.com</a>
<a href=""mailto:a.ndrewh.u.ber.m.a.n4.68@gmail.com"">a.ndrewh.u.ber.m.a.n4.68@gmail.com</a>
<a href=""mailto:an.d.r.ewh.u.b.erma.n46.8@gmail.com"">an.d.r.ewh.u.b.erma.n46.8@gmail.com</a>
<a href=""mailto:a.nd.rewh.u.ber.ma.n.468@gmail.com"">a.nd.rewh.u.ber.ma.n.468@gmail.com</a>
<a href=""mailto:a.n.dr.e.whube.rma.n46.8@gmail.com"">a.n.dr.e.whube.rma.n46.8@gmail.com</a>
<a href=""mailto:an.dr.e.wh.u.berm.an468@gmail.com"">an.dr.e.wh.u.berm.an468@gmail.com</a>
<a href=""mailto:a.n.d.r.e.w.hu.b.er.m.a.n4.6.8@gmail.com"">a.n.d.r.e.w.hu.b.er.m.a.n4.6.8@gmail.com</a>
<a href=""mailto:an.drewh.ub.er.man4.6.8@gmail.com"">an.drewh.ub.er.man4.6.8@gmail.com</a>
<a href=""mailto:a.nd.re.wh.u.ber.ma.n.4.68@gmail.com"">a.nd.re.wh.u.ber.ma.n.4.68@gmail.com</a>
<a href=""mailto:an.drewh.uberman46.8@gmail.com"">an.drewh.uberman46.8@gmail.com</a>
<a href=""mailto:andre.w.h.uberm.a.n468@gmail.com"">andre.w.h.uberm.a.n468@gmail.com</a>
<a href=""mailto:an.drewhu.b.e.r.man4.68@gmail.com"">an.drewhu.b.e.r.man4.68@gmail.com</a>
<a href=""mailto:and.r.ewh.uberma.n.4.6.8@gmail.com"">and.r.ewh.uberma.n.4.6.8@gmail.com</a>
<a href=""mailto:an.dr.e.w.h.u.be.r.man46.8@gmail.com"">an.dr.e.w.h.u.be.r.man46.8@gmail.com</a>
<a href=""mailto:a.ndre.w.h.ub.erm.a.n.468@gmail.com"">a.ndre.w.h.ub.erm.a.n.468@gmail.com</a>
<a href=""mailto:an.d.re.w.hube.rm.a.n.4.68@gmail.com"">an.d.re.w.hube.rm.a.n.4.68@gmail.com</a>
<a href=""mailto:a.ndrewhub.e.r.ma.n46.8@gmail.com"">a.ndrewhub.e.r.ma.n46.8@gmail.com</a>
<a href=""mailto:andr.ewhub.e.r.ma.n.4.6.8@gmail.com"">andr.ewhub.e.r.ma.n.4.6.8@gmail.com</a>
<a href=""mailto:an.d.rew.h.uberman.468@gmail.com"">an.d.rew.h.uberman.468@gmail.com</a>
<a href=""mailto:an.dr.e.whu.berm.a.n4.68@gmail.com"">an.dr.e.whu.berm.a.n4.68@gmail.com</a>
<a href=""mailto:andr.e.w.hube.rm.an.4.6.8@gmail.com"">andr.e.w.hube.rm.an.4.6.8@gmail.com</a>
<a href=""mailto:andrewh.u.b.er.ma.n.468@gmail.com"">andrewh.u.b.er.ma.n.468@gmail.com</a>
<a href=""mailto:a.n.d.re.w.h.u.be.r.m.a.n4.68@gmail.com"">a.n.d.re.w.h.u.be.r.m.a.n4.68@gmail.com</a>
<a href=""mailto:a.n.d.r.e.w.h.ub.e.rman.4.68@gmail.com"">a.n.d.r.e.w.h.ub.e.rman.4.68@gmail.com</a>
<a href=""mailto:a.n.drew.hu.b.er.m.a.n.468@gmail.com"">a.n.drew.hu.b.er.m.a.n.468@gmail.com</a>
<a href=""mailto:andrewh.u.ber.ma.n4.6.8@gmail.com"">andrewh.u.ber.ma.n4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.wh.ube.rm.a.n4.6.8@gmail.com"">a.nd.r.e.wh.ube.rm.a.n4.6.8@gmail.com</a>
<a href=""mailto:an.dre.w.h.u.be.r.m.an46.8@gmail.com"">an.dre.w.h.u.be.r.m.an46.8@gmail.com</a>
<a href=""mailto:a.n.d.re.whu.b.erm.a.n.468@gmail.com"">a.n.d.re.whu.b.erm.a.n.468@gmail.com</a>
<a href=""mailto:and.rewhu.berman.468@gmail.com"">and.rewhu.berman.468@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.h.u.be.rma.n.4.68@gmail.com"">a.n.dr.e.w.h.u.be.rma.n.4.68@gmail.com</a>
<a href=""mailto:a.n.d.r.e.wh.ube.r.ma.n4.6.8@gmail.com"">a.n.d.r.e.wh.ube.r.ma.n4.6.8@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.h.u.b.e.r.m.an4.6.8@gmail.com"">a.nd.r.e.w.h.u.b.e.r.m.an4.6.8@gmail.com</a>
<a href=""mailto:a.n.dre.w.hu.b.e.rman4.6.8@gmail.com"">a.n.dre.w.hu.b.e.rman4.6.8@gmail.com</a>
<a href=""mailto:and.r.e.whu.ber.m.an.4.6.8@gmail.com"">and.r.e.whu.ber.m.an.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.re.whub.er.man.468@gmail.com"">a.n.d.re.whub.er.man.468@gmail.com</a>
<a href=""mailto:a.n.d.re.wh.ube.rman4.6.8@gmail.com"">a.n.d.re.wh.ube.rman4.6.8@gmail.com</a>
<a href=""mailto:an.dr.ew.hub.er.man.4.6.8@gmail.com"">an.dr.ew.hub.er.man.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.h.u.b.erm.an.46.8@gmail.com"">a.n.d.r.ew.h.u.b.erm.an.46.8@gmail.com</a>
<a href=""mailto:a.ndrewh.ub.e.rma.n4.6.8@gmail.com"">a.ndrewh.ub.e.rma.n4.6.8@gmail.com</a>
<a href=""mailto:a.n.dre.whu.b.e.rman468@gmail.com"">a.n.dre.whu.b.e.rman468@gmail.com</a>
<a href=""mailto:and.re.whub.e.rm.a.n4.68@gmail.com"">and.re.whub.e.rm.a.n4.68@gmail.com</a>
<a href=""mailto:a.ndre.w.huberm.a.n.4.68@gmail.com"">a.ndre.w.huberm.a.n.4.68@gmail.com</a>
<a href=""mailto:an.d.r.ewh.ube.rm.a.n468@gmail.com"">an.d.r.ewh.ube.rm.a.n468@gmail.com</a>
<a href=""mailto:a.n.d.rewh.u.ber.m.an4.68@gmail.com"">a.n.d.rewh.u.ber.m.an4.68@gmail.com</a>
<a href=""mailto:and.rewhub.e.rm.an.4.6.8@gmail.com"">and.rewhub.e.rm.an.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.re.w.huberm.a.n4.68@gmail.com"">a.n.d.re.w.huberm.a.n4.68@gmail.com</a>
<a href=""mailto:and.rewh.u.be.r.man468@gmail.com"">and.rewh.u.be.r.man468@gmail.com</a>
<a href=""mailto:a.nd.rew.hu.b.er.man.4.68@gmail.com"">a.nd.rew.hu.b.er.man.4.68@gmail.com</a>
<a href=""mailto:a.n.dre.w.h.u.berm.an468@gmail.com"">a.n.dre.w.h.u.berm.an468@gmail.com</a>
<a href=""mailto:a.ndrewhu.ber.man.4.6.8@gmail.com"">a.ndrewhu.ber.man.4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.e.w.hu.b.e.rm.a.n.4.6.8@gmail.com"">a.ndr.e.w.hu.b.e.rm.a.n.4.6.8@gmail.com</a>
<a href=""mailto:a.n.dr.e.whube.r.man.4.6.8@gmail.com"">a.n.dr.e.whube.r.man.4.6.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.hub.e.rman468@gmail.com"">a.n.d.r.ew.hub.e.rman468@gmail.com</a>
<a href=""mailto:an.dr.ew.h.u.be.r.m.an.4.6.8@gmail.com"">an.dr.ew.h.u.be.r.m.an.4.6.8@gmail.com</a>
<a href=""mailto:and.rewh.u.b.e.r.m.a.n.468@gmail.com"">and.rewh.u.b.e.r.m.a.n.468@gmail.com</a>
<a href=""mailto:a.nd.rewhu.b.erm.an468@gmail.com"">a.nd.rewhu.b.erm.an468@gmail.com</a>
<a href=""mailto:a.nd.r.e.whub.erm.a.n.46.8@gmail.com"">a.nd.r.e.whub.erm.a.n.46.8@gmail.com</a>
<a href=""mailto:a.n.dre.whu.berma.n4.6.8@gmail.com"">a.n.dre.whu.berma.n4.6.8@gmail.com</a>
<a href=""mailto:a.ndr.e.w.hu.berman.4.68@gmail.com"">a.ndr.e.w.hu.berman.4.68@gmail.com</a>
<a href=""mailto:a.n.drew.hube.rman.468@gmail.com"">a.n.drew.hube.rman.468@gmail.com</a>
<a href=""mailto:a.n.drew.hub.er.ma.n.4.68@gmail.com"">a.n.drew.hub.er.ma.n.4.68@gmail.com</a>
<a href=""mailto:a.ndre.whu.b.e.rman4.6.8@gmail.com"">a.ndre.whu.b.e.rman4.6.8@gmail.com</a>
<a href=""mailto:andr.e.whu.be.r.man.46.8@gmail.com"">andr.e.whu.be.r.man.46.8@gmail.com</a>
<a href=""mailto:a.n.d.r.ew.hub.er.m.an.46.8@gmail.com"">a.n.d.r.ew.hub.er.m.an.46.8@gmail.com</a>
<a href=""mailto:a.n.d.re.wh.u.berma.n4.6.8@gmail.com"">a.n.d.re.wh.u.berma.n4.6.8@gmail.com</a>
<a href=""mailto:andrewhuberman960@gmail.com"">andrewhuberman960@gmail.com</a>
<a href=""mailto:an.d.r.ew.h.uberman.960@gmail.com"">an.d.r.ew.h.uberman.960@gmail.com</a>
<a href=""mailto:a.ndr.e.w.hu.be.r.man960@gmail.com"">a.ndr.e.w.hu.be.r.man960@gmail.com</a>
<a href=""mailto:a.n.drewhu.be.r.m.a.n9.60@gmail.com"">a.n.drewhu.be.r.m.a.n9.60@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.hu.b.erm.an960@gmail.com"">a.n.dr.e.w.hu.b.erm.an960@gmail.com</a>
<a href=""mailto:an.dre.wh.u.b.e.rman.960@gmail.com"">an.dre.wh.u.b.e.rman.960@gmail.com</a>
<a href=""mailto:an.d.r.ewhu.b.erman.96.0@gmail.com"">an.d.r.ewhu.b.erman.96.0@gmail.com</a>
<a href=""mailto:and.rewh.ube.rma.n.960@gmail.com"">and.rewh.ube.rma.n.960@gmail.com</a>
<a href=""mailto:a.n.drew.h.u.b.er.man.96.0@gmail.com"">a.n.drew.h.u.b.er.man.96.0@gmail.com</a>
<a href=""mailto:an.d.r.e.w.h.u.berman.9.60@gmail.com"">an.d.r.e.w.h.u.berman.9.60@gmail.com</a>
<a href=""mailto:a.nd.rewhuber.ma.n9.60@gmail.com"">a.nd.rewhuber.ma.n9.60@gmail.com</a>
<a href=""mailto:a.ndrewhu.ber.m.an96.0@gmail.com"">a.ndrewhu.ber.m.an96.0@gmail.com</a>
<a href=""mailto:andre.whu.b.er.man.960@gmail.com"">andre.whu.b.er.man.960@gmail.com</a>
<a href=""mailto:a.n.d.re.w.hu.b.er.ma.n.96.0@gmail.com"">a.n.d.re.w.hu.b.er.ma.n.96.0@gmail.com</a>
<a href=""mailto:a.ndrewh.ub.er.man.9.60@gmail.com"">a.ndrewh.ub.er.man.9.60@gmail.com</a>
<a href=""mailto:a.ndre.w.hu.berma.n.9.60@gmail.com"">a.ndre.w.hu.berma.n.9.60@gmail.com</a>
<a href=""mailto:andr.e.whub.erm.a.n9.6.0@gmail.com"">andr.e.whub.erm.a.n9.6.0@gmail.com</a>
<a href=""mailto:andre.w.h.u.b.erm.an.9.6.0@gmail.com"">andre.w.h.u.b.erm.an.9.6.0@gmail.com</a>
<a href=""mailto:an.dre.w.h.u.be.r.man960@gmail.com"">an.dre.w.h.u.be.r.man960@gmail.com</a>
<a href=""mailto:a.n.d.re.whub.er.man9.6.0@gmail.com"">a.n.d.re.whub.er.man9.6.0@gmail.com</a>
<a href=""mailto:an.d.rewhube.r.ma.n96.0@gmail.com"">an.d.rewhube.r.ma.n96.0@gmail.com</a>
<a href=""mailto:a.nd.r.ewh.ub.er.m.a.n9.6.0@gmail.com"">a.nd.r.ewh.ub.er.m.a.n9.6.0@gmail.com</a>
<a href=""mailto:and.r.e.w.hu.berm.a.n.96.0@gmail.com"">and.r.e.w.hu.berm.a.n.96.0@gmail.com</a>
<a href=""mailto:a.n.drew.h.u.be.rm.an.960@gmail.com"">a.n.drew.h.u.be.rm.an.960@gmail.com</a>
<a href=""mailto:a.ndr.ew.h.u.b.er.ma.n.960@gmail.com"">a.ndr.ew.h.u.b.er.ma.n.960@gmail.com</a>
<a href=""mailto:andr.ewhu.b.erm.an96.0@gmail.com"">andr.ewhu.b.erm.an96.0@gmail.com</a>
<a href=""mailto:an.dr.e.wh.u.be.rman9.60@gmail.com"">an.dr.e.wh.u.be.rman9.60@gmail.com</a>
<a href=""mailto:a.ndr.ew.huber.ma.n9.6.0@gmail.com"">a.ndr.ew.huber.ma.n9.6.0@gmail.com</a>
<a href=""mailto:an.dr.e.wh.ube.rman960@gmail.com"">an.dr.e.wh.ube.rman960@gmail.com</a>
<a href=""mailto:andr.e.whub.e.r.m.a.n9.6.0@gmail.com"">andr.e.whub.e.r.m.a.n9.6.0@gmail.com</a>
<a href=""mailto:an.dr.ewh.ub.erman9.60@gmail.com"">an.dr.ewh.ub.erman9.60@gmail.com</a>
<a href=""mailto:and.re.whu.b.er.m.an960@gmail.com"">and.re.whu.b.er.m.an960@gmail.com</a>
<a href=""mailto:an.d.re.w.h.u.ber.m.an.9.6.0@gmail.com"">an.d.re.w.h.u.ber.m.an.9.6.0@gmail.com</a>
<a href=""mailto:andr.e.w.h.ube.r.ma.n.9.6.0@gmail.com"">andr.e.w.h.ube.r.ma.n.9.6.0@gmail.com</a>
<a href=""mailto:an.d.r.e.w.hub.e.rm.an.9.6.0@gmail.com"">an.d.r.e.w.hub.e.rm.an.9.6.0@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.hu.b.e.r.m.an.9.60@gmail.com"">a.n.dr.e.w.hu.b.e.r.m.an.9.60@gmail.com</a>
<a href=""mailto:a.ndr.ewhu.be.r.ma.n.96.0@gmail.com"">a.ndr.ewhu.be.r.ma.n.96.0@gmail.com</a>
<a href=""mailto:and.r.ew.h.u.b.er.m.a.n.960@gmail.com"">and.r.ew.h.u.b.er.m.a.n.960@gmail.com</a>
<a href=""mailto:a.n.d.r.e.whub.erma.n.9.60@gmail.com"">a.n.d.r.e.whub.erma.n.9.60@gmail.com</a>
<a href=""mailto:an.dr.e.whu.be.r.m.an96.0@gmail.com"">an.dr.e.whu.be.r.m.an96.0@gmail.com</a>
<a href=""mailto:and.r.ew.huberma.n9.60@gmail.com"">and.r.ew.huberma.n9.60@gmail.com</a>
<a href=""mailto:an.dr.ew.h.ub.er.m.a.n.9.6.0@gmail.com"">an.dr.ew.h.ub.er.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:a.ndre.wh.ub.e.r.m.a.n960@gmail.com"">a.ndre.wh.ub.e.r.m.a.n960@gmail.com</a>
<a href=""mailto:andre.w.h.ub.e.rma.n.960@gmail.com"">andre.w.h.ub.e.rma.n.960@gmail.com</a>
<a href=""mailto:a.n.d.re.whu.b.e.rman.9.60@gmail.com"">a.n.d.re.whu.b.e.rman.9.60@gmail.com</a>
<a href=""mailto:a.n.d.r.ewhu.be.r.m.an960@gmail.com"">a.n.d.r.ewhu.be.r.m.an960@gmail.com</a>
<a href=""mailto:an.dr.ewh.ub.e.rm.an.9.6.0@gmail.com"">an.dr.ewh.ub.e.rm.an.9.6.0@gmail.com</a>
<a href=""mailto:and.rewh.uber.m.an9.6.0@gmail.com"">and.rewh.uber.m.an9.6.0@gmail.com</a>
<a href=""mailto:an.drew.hu.b.erman96.0@gmail.com"">an.drew.hu.b.erman96.0@gmail.com</a>
<a href=""mailto:an.dre.whub.erm.a.n960@gmail.com"">an.dre.whub.erm.a.n960@gmail.com</a>
<a href=""mailto:a.n.d.r.ewh.ub.er.m.a.n.9.6.0@gmail.com"">a.n.d.r.ewh.ub.er.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:andr.ewhu.b.e.r.m.an.9.60@gmail.com"">andr.ewhu.b.e.r.m.an.9.60@gmail.com</a>
<a href=""mailto:a.n.d.r.ewhu.b.erm.a.n.96.0@gmail.com"">a.n.d.r.ewhu.b.erm.a.n.96.0@gmail.com</a>
<a href=""mailto:a.n.dre.w.h.u.berma.n.96.0@gmail.com"">a.n.dre.w.h.u.berma.n.96.0@gmail.com</a>
<a href=""mailto:a.ndre.w.huber.ma.n.96.0@gmail.com"">a.ndre.w.huber.ma.n.96.0@gmail.com</a>
<a href=""mailto:a.n.d.re.w.h.u.be.rm.an.9.6.0@gmail.com"">a.n.d.re.w.h.u.be.rm.an.9.6.0@gmail.com</a>
<a href=""mailto:a.n.dr.ewh.u.b.e.rm.an.960@gmail.com"">a.n.dr.ewh.u.b.e.rm.an.960@gmail.com</a>
<a href=""mailto:a.n.d.r.e.wh.uber.m.a.n.9.6.0@gmail.com"">a.n.d.r.e.wh.uber.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:an.d.r.e.whu.ber.ma.n9.6.0@gmail.com"">an.d.r.e.whu.ber.ma.n9.6.0@gmail.com</a>
<a href=""mailto:a.n.dr.e.w.hub.er.man.96.0@gmail.com"">a.n.dr.e.w.hub.er.man.96.0@gmail.com</a>
<a href=""mailto:a.n.dre.whu.b.e.r.m.an9.6.0@gmail.com"">a.n.dre.whu.b.e.r.m.an9.6.0@gmail.com</a>
<a href=""mailto:a.nd.r.ew.h.uberman.9.60@gmail.com"">a.nd.r.ew.h.uberman.9.60@gmail.com</a>
<a href=""mailto:a.ndre.w.hube.rma.n.960@gmail.com"">a.ndre.w.hube.rma.n.960@gmail.com</a>
<a href=""mailto:a.nd.re.w.hu.be.rm.an.9.60@gmail.com"">a.nd.re.w.hu.be.rm.an.9.60@gmail.com</a>
<a href=""mailto:and.rew.hu.be.rma.n.96.0@gmail.com"">and.rew.hu.be.rma.n.96.0@gmail.com</a>
<a href=""mailto:a.ndre.w.hub.e.rman960@gmail.com"">a.ndre.w.hub.e.rman960@gmail.com</a>
<a href=""mailto:and.re.w.hub.er.m.an9.6.0@gmail.com"">and.re.w.hub.er.m.an9.6.0@gmail.com</a>
<a href=""mailto:a.n.d.r.ewh.ub.e.r.man9.6.0@gmail.com"">a.n.d.r.ewh.ub.e.r.man9.6.0@gmail.com</a>
<a href=""mailto:andrew.hu.b.er.m.a.n.96.0@gmail.com"">andrew.hu.b.er.m.a.n.96.0@gmail.com</a>
<a href=""mailto:andr.e.w.hu.ber.man96.0@gmail.com"">andr.e.w.hu.ber.man96.0@gmail.com</a>
<a href=""mailto:a.n.d.rewhu.be.r.man.9.60@gmail.com"">a.n.d.rewhu.be.r.man.9.60@gmail.com</a>
<a href=""mailto:a.n.dr.ew.h.u.berman96.0@gmail.com"">a.n.dr.ew.h.u.berman96.0@gmail.com</a>
<a href=""mailto:an.d.re.w.huber.ma.n9.60@gmail.com"">an.d.re.w.huber.ma.n9.60@gmail.com</a>
<a href=""mailto:an.d.rewh.u.ber.ma.n.9.60@gmail.com"">an.d.rewh.u.ber.ma.n.9.60@gmail.com</a>
<a href=""mailto:a.n.drewh.uberma.n.960@gmail.com"">a.n.drewh.uberma.n.960@gmail.com</a>
<a href=""mailto:a.n.d.rewhube.r.m.an.960@gmail.com"">a.n.d.rewhube.r.m.an.960@gmail.com</a>
<a href=""mailto:an.dre.w.hu.berma.n96.0@gmail.com"">an.dre.w.hu.berma.n96.0@gmail.com</a>
<a href=""mailto:a.ndr.e.wh.uber.ma.n.960@gmail.com"">a.ndr.e.wh.uber.ma.n.960@gmail.com</a>
<a href=""mailto:an.dr.ew.huber.man.9.6.0@gmail.com"">an.dr.ew.huber.man.9.6.0@gmail.com</a>
<a href=""mailto:a.nd.rew.huberm.an.9.60@gmail.com"">a.nd.rew.huberm.an.9.60@gmail.com</a>
<a href=""mailto:a.n.drew.h.u.berma.n96.0@gmail.com"">a.n.drew.h.u.berma.n96.0@gmail.com</a>
<a href=""mailto:a.n.d.rew.hu.be.rm.a.n.9.6.0@gmail.com"">a.n.d.rew.hu.be.rm.a.n.9.6.0@gmail.com</a>
<a href=""mailto:a.n.dr.e.wh.u.be.r.ma.n.960@gmail.com"">a.n.dr.e.wh.u.be.r.ma.n.960@gmail.com</a>
<a href=""mailto:a.n.drew.h.u.b.erma.n9.6.0@gmail.com"">a.n.drew.h.u.b.erma.n9.6.0@gmail.com</a>
<a href=""mailto:a.n.drew.hu.b.e.rma.n.9.6.0@gmail.com"">a.n.drew.hu.b.e.rma.n.9.6.0@gmail.com</a>
<a href=""mailto:an.dre.wh.uber.m.an960@gmail.com"">an.dre.wh.uber.m.an960@gmail.com</a>
<a href=""mailto:a.n.d.rewhube.r.m.an.9.6.0@gmail.com"">a.n.d.rewhube.r.m.an.9.6.0@gmail.com</a>
<a href=""mailto:a.n.dre.whu.be.r.ma.n.9.6.0@gmail.com"">a.n.dre.whu.be.r.ma.n.9.6.0@gmail.com</a>
<a href=""mailto:andrewhube.rm.an9.6.0@gmail.com"">andrewhube.rm.an9.6.0@gmail.com</a>
<a href=""mailto:andrewh.ube.rm.an9.6.0@gmail.com"">andrewh.ube.rm.an9.6.0@gmail.com</a>
<a href=""mailto:a.n.d.r.ewhu.ber.ma.n.96.0@gmail.com"">a.n.d.r.ewhu.ber.ma.n.96.0@gmail.com</a>
<a href=""mailto:an.dre.wh.u.berman960@gmail.com"">an.dre.wh.u.berman960@gmail.com</a>
<a href=""mailto:a.n.d.rew.h.u.ber.m.a.n96.0@gmail.com"">a.n.d.rew.h.u.ber.m.a.n96.0@gmail.com</a>
<a href=""mailto:an.d.r.ew.hu.be.r.man9.6.0@gmail.com"">an.d.r.ew.hu.be.r.man9.6.0@gmail.com</a>
<a href=""mailto:and.rew.h.ub.er.ma.n96.0@gmail.com"">and.rew.h.ub.er.ma.n96.0@gmail.com</a>
<a href=""mailto:a.n.dr.e.whu.b.erman.9.6.0@gmail.com"">a.n.dr.e.whu.b.erman.9.6.0@gmail.com</a>
<a href=""mailto:a.ndr.ewh.uber.ma.n96.0@gmail.com"">a.ndr.ewh.uber.ma.n96.0@gmail.com</a>
<a href=""mailto:a.n.dr.ewhuberma.n9.60@gmail.com"">a.n.dr.ewhuberma.n9.60@gmail.com</a>
<a href=""mailto:a.nd.r.ewh.u.b.e.rm.a.n.96.0@gmail.com"">a.nd.r.ewh.u.b.e.rm.a.n.96.0@gmail.com</a>
<a href=""mailto:a.n.dre.whu.b.e.r.m.a.n960@gmail.com"">a.n.dre.whu.b.e.r.m.a.n960@gmail.com</a>
<a href=""mailto:a.ndrew.hub.e.rma.n.960@gmail.com"">a.ndrew.hub.e.rma.n.960@gmail.com</a>
<a href=""mailto:an.d.re.w.hub.er.man.9.6.0@gmail.com"">an.d.re.w.hub.er.man.9.6.0@gmail.com</a>
<a href=""mailto:andr.ew.hu.b.er.m.an9.6.0@gmail.com"">andr.ew.hu.b.er.m.an9.6.0@gmail.com</a>
<a href=""mailto:a.n.d.r.e.whub.er.ma.n.960@gmail.com"">a.n.d.r.e.whub.er.ma.n.960@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.h.ub.erm.an960@gmail.com"">a.nd.r.e.w.h.ub.erm.an960@gmail.com</a>
<a href=""mailto:an.dr.ew.hube.rman.960@gmail.com"">an.dr.ew.hube.rman.960@gmail.com</a>
<a href=""mailto:a.n.drew.hub.e.r.m.an.9.6.0@gmail.com"">a.n.drew.hub.e.r.m.an.9.6.0@gmail.com</a>
<a href=""mailto:a.ndre.wh.u.ber.m.an96.0@gmail.com"">a.ndre.wh.u.ber.m.an96.0@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.h.u.berm.an.96.0@gmail.com"">a.nd.r.e.w.h.u.berm.an.96.0@gmail.com</a>
<a href=""mailto:an.d.r.ewh.u.b.e.rm.a.n.96.0@gmail.com"">an.d.r.ewh.u.b.e.rm.a.n.96.0@gmail.com</a>
<a href=""mailto:an.d.rew.hube.r.m.an96.0@gmail.com"">an.d.rew.hube.r.m.an96.0@gmail.com</a>
<a href=""mailto:a.nd.re.wh.uber.man.9.6.0@gmail.com"">a.nd.re.wh.uber.man.9.6.0@gmail.com</a>
<a href=""mailto:an.drewh.ub.e.rma.n.9.6.0@gmail.com"">an.drewh.ub.e.rma.n.9.6.0@gmail.com</a>
<a href=""mailto:an.drewhu.ber.ma.n.96.0@gmail.com"">an.drewhu.ber.ma.n.96.0@gmail.com</a>
<a href=""mailto:a.ndre.w.huberman9.6.0@gmail.com"">a.ndre.w.huberman9.6.0@gmail.com</a>
<a href=""mailto:a.n.dr.ewhub.erma.n.960@gmail.com"">a.n.dr.ewhub.erma.n.960@gmail.com</a>
<a href=""mailto:an.d.r.ewh.u.be.r.m.a.n.9.60@gmail.com"">an.d.r.ewh.u.be.r.m.a.n.9.60@gmail.com</a>
<a href=""mailto:a.n.d.re.wh.uber.man9.6.0@gmail.com"">a.n.d.re.wh.uber.man9.6.0@gmail.com</a>
<a href=""mailto:and.r.e.wh.uber.m.an.9.60@gmail.com"">and.r.e.wh.uber.m.an.9.60@gmail.com</a>
<a href=""mailto:and.r.ew.hu.ber.m.an.9.60@gmail.com"">and.r.ew.hu.ber.m.an.9.60@gmail.com</a>
<a href=""mailto:an.d.rewhu.be.rm.a.n.9.60@gmail.com"">an.d.rewhu.be.rm.a.n.9.60@gmail.com</a>
<a href=""mailto:a.n.dr.ew.h.u.be.rm.a.n.9.6.0@gmail.com"">a.n.dr.ew.h.u.be.rm.a.n.9.6.0@gmail.com</a>
<a href=""mailto:an.dr.ewhuberm.an.960@gmail.com"">an.dr.ewhuberm.an.960@gmail.com</a>
<a href=""mailto:and.r.ew.hu.b.er.m.a.n.9.60@gmail.com"">and.r.ew.hu.b.er.m.a.n.9.60@gmail.com</a>
<a href=""mailto:a.nd.r.ewh.u.b.e.rm.an96.0@gmail.com"">a.nd.r.ewh.u.b.e.rm.an96.0@gmail.com</a>
<a href=""mailto:a.nd.r.ew.hub.e.rm.a.n.960@gmail.com"">a.nd.r.ew.hub.e.rm.a.n.960@gmail.com</a>
<a href=""mailto:and.r.e.w.huber.ma.n.9.60@gmail.com"">and.r.e.w.huber.ma.n.9.60@gmail.com</a>
<a href=""mailto:andrewh.u.be.rma.n960@gmail.com"">andrewh.u.be.rma.n960@gmail.com</a>
<a href=""mailto:a.n.d.r.e.w.hu.b.er.man960@gmail.com"">a.n.d.r.e.w.hu.b.er.man960@gmail.com</a>
<a href=""mailto:an.d.re.w.h.uber.ma.n9.6.0@gmail.com"">an.d.re.w.h.uber.ma.n9.6.0@gmail.com</a>
<a href=""mailto:a.nd.r.e.wh.u.b.er.m.an96.0@gmail.com"">a.nd.r.e.wh.u.b.er.m.an96.0@gmail.com</a>
<a href=""mailto:and.r.e.wh.ube.rman96.0@gmail.com"">and.r.e.wh.ube.rman96.0@gmail.com</a>
<a href=""mailto:andrewh.u.be.r.man.9.60@gmail.com"">andrewh.u.be.r.man.9.60@gmail.com</a>
<a href=""mailto:an.d.rewh.u.b.e.r.man.9.60@gmail.com"">an.d.rewh.u.b.e.r.man.9.60@gmail.com</a>
<a href=""mailto:an.d.r.e.w.huberm.an.9.60@gmail.com"">an.d.r.e.w.huberm.an.9.60@gmail.com</a>
<a href=""mailto:a.ndr.ewhub.e.rm.an.96.0@gmail.com"">a.ndr.ewhub.e.rm.an.96.0@gmail.com</a>
<a href=""mailto:a.nd.re.w.hube.r.m.an.9.6.0@gmail.com"">a.nd.re.w.hube.r.m.an.9.6.0@gmail.com</a>
<a href=""mailto:andr.ew.huberm.an.9.60@gmail.com"">andr.ew.huberm.an.9.60@gmail.com</a>
<a href=""mailto:a.n.d.rewh.uberm.a.n96.0@gmail.com"">a.n.d.rewh.uberm.a.n96.0@gmail.com</a>
<a href=""mailto:a.ndre.w.h.ube.rman.96.0@gmail.com"">a.ndre.w.h.ube.rman.96.0@gmail.com</a>
<a href=""mailto:an.d.r.e.wh.ub.e.rm.a.n.9.60@gmail.com"">an.d.r.e.wh.ub.e.rm.a.n.9.60@gmail.com</a>
<a href=""mailto:a.n.d.rew.hub.e.rma.n9.60@gmail.com"">a.n.d.rew.hub.e.rma.n9.60@gmail.com</a>
<a href=""mailto:an.d.rew.h.u.be.r.m.a.n.9.6.0@gmail.com"">an.d.rew.h.u.be.r.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:andre.w.h.ub.er.man9.60@gmail.com"">andre.w.h.ub.er.man9.60@gmail.com</a>
<a href=""mailto:a.nd.r.ew.h.u.berm.an.96.0@gmail.com"">a.nd.r.ew.h.u.berm.an.96.0@gmail.com</a>
<a href=""mailto:a.ndr.e.w.h.ub.er.m.a.n960@gmail.com"">a.ndr.e.w.h.ub.er.m.a.n960@gmail.com</a>
<a href=""mailto:a.nd.re.wh.uberma.n.960@gmail.com"">a.nd.re.wh.uberma.n.960@gmail.com</a>
<a href=""mailto:an.d.r.e.w.hu.ber.m.an.9.6.0@gmail.com"">an.d.r.e.w.hu.ber.m.an.9.6.0@gmail.com</a>
<a href=""mailto:a.n.d.re.w.h.ube.rm.an9.60@gmail.com"">a.n.d.re.w.h.ube.rm.an9.60@gmail.com</a>
<a href=""mailto:and.rewh.ube.rma.n.9.60@gmail.com"">and.rewh.ube.rma.n.9.60@gmail.com</a>
<a href=""mailto:a.n.dr.e.whube.r.ma.n.96.0@gmail.com"">a.n.dr.e.whube.r.ma.n.96.0@gmail.com</a>
<a href=""mailto:and.r.ewhube.rm.a.n.9.60@gmail.com"">and.r.ewhube.rm.a.n.9.60@gmail.com</a>
<a href=""mailto:and.r.ew.hub.e.r.man.96.0@gmail.com"">and.r.ew.hub.e.r.man.96.0@gmail.com</a>
<a href=""mailto:an.d.r.ewh.u.ber.man.9.60@gmail.com"">an.d.r.ewh.u.ber.man.9.60@gmail.com</a>
<a href=""mailto:andre.w.hu.b.er.man960@gmail.com"">andre.w.hu.b.er.man960@gmail.com</a>
<a href=""mailto:and.r.e.wh.u.be.r.m.a.n.9.6.0@gmail.com"">and.r.e.wh.u.be.r.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:an.d.rewhu.b.e.r.m.a.n.96.0@gmail.com"">an.d.rewhu.b.e.r.m.a.n.96.0@gmail.com</a>
<a href=""mailto:a.ndre.whu.ber.man.96.0@gmail.com"">a.ndre.whu.ber.man.96.0@gmail.com</a>
<a href=""mailto:and.rew.hu.ber.m.a.n9.6.0@gmail.com"">and.rew.hu.ber.m.a.n9.6.0@gmail.com</a>
<a href=""mailto:and.r.e.wh.ube.rman.9.60@gmail.com"">and.r.e.wh.ube.rman.9.60@gmail.com</a>
<a href=""mailto:andr.ew.hu.be.r.ma.n.9.6.0@gmail.com"">andr.ew.hu.be.r.ma.n.9.6.0@gmail.com</a>
<a href=""mailto:andre.w.hu.b.er.m.an.9.60@gmail.com"">andre.w.hu.b.er.m.an.9.60@gmail.com</a>
<a href=""mailto:and.rewh.u.ber.ma.n960@gmail.com"">and.rewh.u.ber.ma.n960@gmail.com</a>
<a href=""mailto:andr.e.whu.be.r.m.an960@gmail.com"">andr.e.whu.be.r.m.an960@gmail.com</a>
<a href=""mailto:a.n.dre.w.hu.be.r.m.a.n.9.60@gmail.com"">a.n.dre.w.hu.be.r.m.a.n.9.60@gmail.com</a>
<a href=""mailto:a.n.drew.hube.r.m.a.n96.0@gmail.com"">a.n.drew.hube.r.m.a.n96.0@gmail.com</a>
<a href=""mailto:a.ndre.w.h.ub.er.m.an960@gmail.com"">a.ndre.w.h.ub.er.m.an960@gmail.com</a>
<a href=""mailto:a.ndr.e.w.h.uberm.a.n.9.6.0@gmail.com"">a.ndr.e.w.h.uberm.a.n.9.6.0@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.hub.erma.n96.0@gmail.com"">a.nd.r.e.w.hub.erma.n96.0@gmail.com</a>
<a href=""mailto:an.d.r.ewhu.b.er.ma.n.9.6.0@gmail.com"">an.d.r.ewhu.b.er.ma.n.9.6.0@gmail.com</a>
<a href=""mailto:a.nd.re.w.h.uber.m.a.n.9.6.0@gmail.com"">a.nd.re.w.h.uber.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:an.dr.e.w.h.ube.rman.9.60@gmail.com"">an.dr.e.w.h.ube.rman.9.60@gmail.com</a>
<a href=""mailto:a.ndr.ewhub.e.r.m.a.n96.0@gmail.com"">a.ndr.ewhub.e.r.m.a.n96.0@gmail.com</a>
<a href=""mailto:an.d.rew.hub.erma.n9.60@gmail.com"">an.d.rew.hub.erma.n9.60@gmail.com</a>
<a href=""mailto:and.rew.h.ub.e.rm.a.n96.0@gmail.com"">and.rew.h.ub.e.rm.a.n96.0@gmail.com</a>
<a href=""mailto:andr.e.whub.erman96.0@gmail.com"">andr.e.whub.erman96.0@gmail.com</a>
<a href=""mailto:an.d.re.wh.u.b.er.man.960@gmail.com"">an.d.re.wh.u.b.er.man.960@gmail.com</a>
<a href=""mailto:an.d.rew.h.u.ber.m.an.9.60@gmail.com"">an.d.rew.h.u.ber.m.an.9.60@gmail.com</a>
<a href=""mailto:a.nd.re.wh.u.b.er.m.a.n.9.6.0@gmail.com"">a.nd.re.wh.u.b.er.m.a.n.9.6.0@gmail.com</a>
<a href=""mailto:a.nd.r.e.whub.e.r.ma.n.9.60@gmail.com"">a.nd.r.e.whub.e.r.ma.n.9.60@gmail.com</a>
<a href=""mailto:andr.ew.h.u.b.e.r.m.an96.0@gmail.com"">andr.ew.h.u.b.e.r.m.an96.0@gmail.com</a>
<a href=""mailto:and.r.e.w.hu.b.er.ma.n.960@gmail.com"">and.r.e.w.hu.b.er.ma.n.960@gmail.com</a>
<a href=""mailto:a.nd.rewhube.rm.an9.6.0@gmail.com"">a.nd.rewhube.rm.an9.6.0@gmail.com</a>
<a href=""mailto:an.d.r.e.wh.u.b.e.rma.n.96.0@gmail.com"">an.d.r.e.wh.u.b.e.rma.n.96.0@gmail.com</a>
<a href=""mailto:and.r.ew.h.ub.e.rm.a.n.96.0@gmail.com"">and.r.ew.h.ub.e.rm.a.n.96.0@gmail.com</a>
<a href=""mailto:andr.ew.hu.b.erm.an.96.0@gmail.com"">andr.ew.hu.b.erm.an.96.0@gmail.com</a>
<a href=""mailto:a.nd.r.e.w.h.u.b.erm.an9.6.0@gmail.com"">a.nd.r.e.w.h.u.b.erm.an9.6.0@gmail.com</a>
<a href=""mailto:and.r.ew.hube.r.m.an.96.0@gmail.com"">and.r.ew.hube.r.m.an.96.0@gmail.com</a>
<a href=""mailto:an.d.r.ewhub.e.r.m.an9.6.0@gmail.com"">an.d.r.ewhub.e.r.m.an9.6.0@gmail.com</a>
<a href=""mailto:andrew.hu.berman9.6.0@gmail.com"">andrew.hu.berman9.6.0@gmail.com</a>
<a href=""mailto:and.r.e.w.h.ube.r.man96.0@gmail.com"">and.r.e.w.h.ube.r.man96.0@gmail.com</a>
<a href=""mailto:a.ndr.e.whube.rm.an.9.6.0@gmail.com"">a.ndr.e.whube.rm.an.9.6.0@gmail.com</a>
<a href=""mailto:a.n.d.rewhub.erm.a.n9.60@gmail.com"">a.n.d.rewhub.erm.a.n9.60@gmail.com</a>
<a href=""mailto:andrewh.u.ber.m.an.9.60@gmail.com"">andrewh.u.ber.m.an.9.60@gmail.com</a>
<a href=""mailto:a.ndr.e.whu.ber.m.a.n.9.60@gmail.com"">a.ndr.e.whu.ber.m.a.n.9.60@gmail.com</a>
<a href=""mailto:a.nd.re.whu.b.erm.an960@gmail.com"">a.nd.re.whu.b.erm.an960@gmail.com</a>
<a href=""mailto:a.ndre.w.h.u.berma.n9.6.0@gmail.com"">a.ndre.w.h.u.berma.n9.6.0@gmail.com</a>
<a href=""mailto:a.n.drewhu.b.erman9.60@gmail.com"">a.n.drewhu.b.erman9.60@gmail.com</a>
<a href=""mailto:and.rew.hu.b.e.rman.9.60@gmail.com"">and.rew.hu.b.e.rman.9.60@gmail.com</a>
<a href=""mailto:andrew.huber.ma.n.9.60@gmail.com"">andrew.huber.ma.n.9.60@gmail.com</a>
<a href=""mailto:a.n.d.rew.h.u.berm.an.960@gmail.com"">a.n.d.rew.h.u.berm.an.960@gmail.com</a>"
JN0pbkHz,Untitled,contactaccount177,Bash,Wednesday 19th of July 2023 01:13:10 AM CDT,"#!/bin/bash

cores_per_socket=""$(lscpu | grep -F -- 'Core(s) per socket:' | cut -d':' -f2 | awk '{ print $1 }')""
threads_per_core=""$(lscpu | grep -F -- 'Thread(s) per core:' | cut -d':' -f2 | awk '{ print $1 }')""
sockets=""$(lscpu | grep -F -- 'Socket(s):' | cut -d':' -f2 | awk '{ print $1 }')""
cores=""$(( cores_per_socket * sockets ))""
logical_cores=""$(( threads_per_core * cores ))""

ram_absolute_free=""$(free -h | grep '^Mem:' | awk '{ print $4 }')""
ram_absolute_total=""$(free -h | grep '^Mem:' | awk '{ print $2 }')""
ram_percent_free=""$(free -b | grep '^Mem:' | awk '{ printf(""%.2f%%""), $3/$2*100}')""
memory_absolute_free=""$(free -ht | grep '^Total:' | awk '{ print $4 }')""
memory_absolute_total=""$(free -ht | grep '^Total:' | awk '{ print $2 }')""
memory_percent_free=""$(free -bt | grep '^Total:' | awk '{ printf(""%.2f%%""), $3/$2*100}')""
cpu_percent_used=""$(top -bn1 | grep '^%Cpu(s)' | cut -d':' -f2 | awk '{ printf(""%.1f%%""), $1 + $3 }')""

last_reboot=""$(who -b | grep system | awk '{ print $3 "" "" $4 }')""

lvm_status=""$([ $(grep '/dev/mapper/' /etc/fstab | wc -l) = ""0"" ] && echo inactive || echo active)""

no_active_tcps=""$(ss -s | grep 'TCP:' | awk '{ print $4 }' | sed 's/,//')""

no_active_users=""$(users | wc -w)""

sudo_invocs=""$(2>/dev/null journalctl _COMM=sudo | grep COMMAND | wc -l)""

# Get the pretty name from os-release to variable
source <(grep PRETTY /etc/os-release)

if command -v curl 2>/dev/null 1>&2; then
        wan_ipv4=""$(curl -sL -4 http://ident.me)""
        wan_ipv6=""$(curl -sL -6 http://v6.ident.me)""
elif command -v wget 2>/dev/null 1>&2; then
        wan_ipv4=""$(wget -qO- --inet4-only http://ident.me)""
        wan_ipv6=""$(wget -qO- --inet6-only http://v6.ident.me)""
else
        wan_ipv4=""Neither curl nor wget installed!""
fi
if [ -z ""${wan_ipv4}"" ]; then
	wan_ipv4=""<None>""
fi
if [ -z ""${wan_ipv6}"" ]; then
	wan_ipv6=""<None>""
fi

if_ipv4s=""$(
        find /sys/class/net -mindepth 1 -not -name 'lo' -exec basename {} \; | xargs -I{} sh -c '
                ipv4s=""$(ip addr show {} | grep ""inet[^6]"")""
                if [ -n ""${ipv4s}"" ]; then
						printf ""${ipv4s}"" | awk ""{ printf \""                              %-43s \0\"", \$2 }"" |
							xargs -0 -ILINE printf ""LINE(%-18s %s)\n"" ""$(ip addr show {} | { grep link/ether || printf ""dummy <N/A>""; } | awk ""{ print \$2 \"",\"" }"")"" ""{}""
                fi
        '
)""

if_ipv6s=""$(
        find /sys/class/net -mindepth 1 -not -name 'lo' -exec basename {} \; | xargs -I{} sh -c '
                ipv6s=""$(ip addr show {} | grep ""inet6"")""
                if [ -n ""${ipv6s}"" ]; then
						printf ""${ipv6s}"" | awk ""{ printf \""                              %-43s \0\"", \$2 }"" |
							xargs -0 -ILINE printf ""LINE(%-18s %s)\n"" ""$(ip addr show {} | { grep link/ether || printf ""dummy <N/A>""; } | awk ""{ print \$2 \"",\"" }"")"" ""{}""
                fi
        '
)""

for pts in $(w | sed -e '1,2d;' | awk '{print $2}'); do

>""/dev/${pts}"" sed -e 's/$/\r/g' << MSG
VM State:
- Last Reboot:                ${last_reboot}
- Operating System:           $(uname -o), ${PRETTY_NAME}
- Architecture:               $(uname -m)
- Kernel:                     $(uname -s)
- Kernel Release:             $(uname -r)
- Physical Processors:        ${cores}
- Logical Processors:         ${logical_cores}
- RAM Usage:                  ${ram_percent_free} of ${ram_absolute_total} (free ${ram_absolute_free})
- Memory Usage (RAM + Swap):  ${memory_percent_free} of ${memory_absolute_total} (free ${memory_absolute_free})
- CPU Usage:                  ${cpu_percent_used}
- LVM Status:                 ${lvm_status}
- Active TCP Connections:     ${no_active_tcps}
- Currently logged in Users:  ${no_active_users} ($(users))
- Number of sudo invocations: ${sudo_invocs}
- WAN IPv4 Address:           ${wan_ipv4}
- WAN IPv6 Address:           ${wan_ipv6}
- Interface IPv4 Addresses:
${if_ipv4s}
- Interface IPv6 Addresses:
${if_ipv6s}
MSG

done
"
zRVUgTt2,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Wednesday 19th of July 2023 01:00:01 AM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
ysbX894x,Урок 8 оператор присваивания и..,kutuzzzov,C++,Wednesday 19th of July 2023 12:48:24 AM CDT,"#pragma once
#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <memory>

template <typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity)
        : buffer_(Allocate(capacity))
        , capacity_(capacity) {
    }
    
    RawMemory(const RawMemory&) = delete;
    RawMemory& operator=(const RawMemory& rhs) = delete;

    RawMemory(RawMemory&& other) noexcept {
        buffer_ = std::move(other.GetAddress());
        capacity_ = std::move(other.Capacity());
    }

    RawMemory& operator=(RawMemory&& rhs) noexcept {
        buffer_ = std::move(rhs.GetAddress());
        capacity_ = std::move(rhs.Capacity());
        //rhs.~RawMemory();
        return *this;
    }

    ~RawMemory() {
        Deallocate(buffer_);
    }

    T* operator+(size_t offset) noexcept {
        // Разрешается получать адрес ячейки памяти, следующей за последним элементом массива
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T* operator+(size_t offset) const noexcept {
        return const_cast<RawMemory&>(*this) + offset;
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<RawMemory&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < capacity_);
        return buffer_[index];
    }

    void Swap(RawMemory& other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T* GetAddress() const noexcept {
        return buffer_;
    }

    T* GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    // Выделяет сырую память под n элементов и возвращает указатель на неё
    static T* Allocate(size_t n) {
        return n != 0 ? static_cast<T*>(operator new(n * sizeof(T))) : nullptr;
    }

    // Освобождает сырую память, выделенную ранее по адресу buf при помощи Allocate
    static void Deallocate(T* buf) noexcept {
        operator delete(buf);
    }

    T* buffer_ = nullptr;
    size_t capacity_ = 0;
};

template <typename T>
class Vector {
public:
    Vector() = default;

    explicit Vector(size_t size)
        : data_(size)
        , size_(size)
    {
        std::uninitialized_value_construct_n(data_.GetAddress(), size);
    }

    Vector(const Vector& other)
        : data_(other.size_)
        , size_(other.size_)
    {
        std::uninitialized_copy_n(other.data_.GetAddress(), size_, data_.GetAddress());
    }
    
    Vector(Vector&& other) noexcept {
        Swap(other);
    }

    Vector& operator=(const Vector& rhs) {
        if (this != &rhs) {
            if (data_.Capacity() < rhs.size_) {
                Vector rhs_copy(rhs);
                Swap(rhs_copy);
            }
            else {
                if (rhs.size_ < size_) {
                    std::copy(rhs.data_.GetAddress(), rhs.data_.GetAddress() + rhs.size_, data_.GetAddress());
                    std::destroy_n(data_.GetAddress() + rhs.size_, size_ - rhs.size_);
                }
                else {
                    std::copy(rhs.data_.GetAddress(), rhs.data_.GetAddress() + size_, data_.GetAddress());
                    std::uninitialized_copy_n(rhs.data_.GetAddress() + size_, rhs.size_ - size_, data_.GetAddress() + size_);
                }
                size_ = rhs.size_;

            }
        }
        return *this;
    }

    Vector& operator=(Vector&& rhs) noexcept {
        if (this != &rhs) {
            Swap(rhs);
        }
        return *this;
    }

    void Swap(Vector& other) noexcept {
        data_.Swap(other.data_);
        std::swap(size_, other.size_);
    }

    ~Vector() {
        std::destroy_n(data_.GetAddress(), size_);
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    void Reserve(size_t new_capacity) {
        if (new_capacity <= data_.Capacity()) {
            return;
        }
        RawMemory<T> new_data(new_capacity);
        // constexpr оператор if будет вычислен во время компиляции
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        else {
            std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        std::destroy_n(data_.GetAddress(), size_);
        data_.Swap(new_data);
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<Vector&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }

private:
    // Вызывает деструкторы n объектов массива по адресу buf
    static void DestroyN(T* buf, size_t n) noexcept {
        for (size_t i = 0; i != n; ++i) {
            Destroy(buf + i);
        }
    }

    // Создаёт копию объекта elem в сырой памяти по адресу buf
    static void CopyConstruct(T* buf, const T& elem) {
        new (buf) T(elem);
    }

    RawMemory<T> data_;
    size_t size_ = 0;
};"
inj0xd4Q,plantDiscovery,MartinSaviev,JavaScript,Wednesday 19th of July 2023 12:36:20 AM CDT,"function plantDiscovery(input) {

    let plants = {};

    let plantCount = Number(input.shift());
    let plantName = '';

    for (let i = 0; i < plantCount; i++) {

        let plantLine = input.shift().split('<->');
         plantName = plantLine[0];
        let plantRarity = Number(plantLine[1]);

        plants[plantName] = {

            Rarity: plantRarity,
            Rating: 0,
            counter: 0,

        }
    }

    for (const line of input) {

        if (line === 'Exhibition') {
            break;

        }

        let [commands, plantLine] = line.split(': ')
        let [plant, plantCount] = plantLine.split(' - ')
        plantCount = Number(plantCount)

        switch (commands) {

            case 'Rate':

                if (plants[plant]) {

                    plants[plant].Rating += plantCount;
                    plants[plant].counter++;
                } else {
                   
                    console.log('error');

                }

                break;
            case 'Update':

                if (plants[plant]) {

                    plants[plant].Rarity = plantCount;

                } else {
                   
                    console.log('error');

                }

                break;
            case 'Reset':

                if (plants[plant]) {

                    plants[plant].Rating = 0;

                } else {
                    
                    console.log('error');

                }

                break;
        }


    }

    console.log('Plants for the exhibition:');
    
    for (const plantName in plants) {
        
        let averageRating = plants[plantName].Rating / plants[plantName].counter || 0;
        console.log(`- ${plantName}; Rarity: ${plants[plantName].Rarity}; Rating: ${averageRating.toFixed(2)}`);

    }

}

plantDiscovery([""3"",
    ""Arnoldii<->4"",
    ""Woodii<->7"",
    ""Welwitschia<->2"",
    ""Rate: Woodii - 10"",
    ""Rate: Woodii - 5"",
    ""Update: Woodii - 5"",
    ""Rate: Welwitschia - 7"",
    ""Rate: Arnoldii - 3"",
    ""Reset: Arnoldii"",
    ""Exhibition""])
"
MxE9rGxP,Урок 7 функция *,kutuzzzov,C++,Wednesday 19th of July 2023 12:30:16 AM CDT,"#pragma once
#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <memory>

template <typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity)
        : buffer_(Allocate(capacity))
        , capacity_(capacity) {
    }

    ~RawMemory() {
        Deallocate(buffer_);
    }

    T* operator+(size_t offset) noexcept {
        // Разрешается получать адрес ячейки памяти, следующей за последним элементом массива
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T* operator+(size_t offset) const noexcept {
        return const_cast<RawMemory&>(*this) + offset;
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<RawMemory&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < capacity_);
        return buffer_[index];
    }

    void Swap(RawMemory& other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T* GetAddress() const noexcept {
        return buffer_;
    }

    T* GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    // Выделяет сырую память под n элементов и возвращает указатель на неё
    static T* Allocate(size_t n) {
        return n != 0 ? static_cast<T*>(operator new(n * sizeof(T))) : nullptr;
    }

    // Освобождает сырую память, выделенную ранее по адресу buf при помощи Allocate
    static void Deallocate(T* buf) noexcept {
        operator delete(buf);
    }

    T* buffer_ = nullptr;
    size_t capacity_ = 0;
};

template <typename T>
class Vector {
public:
    Vector() = default;

    explicit Vector(size_t size)
        : data_(size)
        , size_(size)
    {
        std::uninitialized_value_construct_n(data_.GetAddress(), size);
    }

    Vector(const Vector& other)
        : data_(other.size_)
        , size_(other.size_)
    {
        std::uninitialized_copy_n(other.data_.GetAddress(), size_, data_.GetAddress());
    }

    ~Vector() {
        std::destroy_n(data_.GetAddress(), size_);
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    void Reserve(size_t new_capacity) {
        if (new_capacity <= data_.Capacity()) {
            return;
        }
        RawMemory<T> new_data(new_capacity);
        // constexpr оператор if будет вычислен во время компиляции
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        else {
            std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
        }
        std::destroy_n(data_.GetAddress(), size_);
        data_.Swap(new_data);
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<Vector&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }

private:
    // Вызывает деструкторы n объектов массива по адресу buf
    static void DestroyN(T* buf, size_t n) noexcept {
        for (size_t i = 0; i != n; ++i) {
            Destroy(buf + i);
        }
    }

    // Создаёт копию объекта elem в сырой памяти по адресу buf
    static void CopyConstruct(T* buf, const T& elem) {
        new (buf) T(elem);
    }

    RawMemory<T> data_;
    size_t size_ = 0;
};"
HVr2ya8g,9uybdsgadhadwsuiohjn,N0Y,Lua,Wednesday 19th of July 2023 12:24:33 AM CDT,"--Join The Discord https://discord.gg/S44e9DpnXM

loadstring(game:HttpGet(('https://raw.githubusercontent.com/Saaakai/Random-Roblox-Script/main/Race%20Clicker')))()"
HuKwt4NC,Untitled,ElliotDG,Python,Tuesday 18th of July 2023 10:16:09 PM CDT,"from pprint import pprint
import json
from pathlib import Path

data = {
    ""1"": {
        ""name"": ""Shoe"",
        ""price"": ""ugx:100,000"",
        ""image"": ""https://firebasestorage.googleapis.com/v0/b/lexconnectionsapp.appspot.com/o/shoe-removebg-preview.png?alt=media&token=a136a244-1970-4c20-bc54-2d919e571104"",
        ""description"": ""A shoe from England easy for everything "",
        ""contact"": ""Contact: [ref=tel:+256754045576][u]Call me![/u][/ref]"",
        ""location"": ""kampala""
    },
    ""2"": {
        ""name"": ""Samsung 32 inches tv"",
        ""price"": ""ugx:600,000"",
        ""image"": ""https://firebasestorage.googleapis.com/v0/b/lexconnectionsapp.appspot.com/o/tv1-removebg-preview.png?alt=media&token=bf8c08e5-6064-4e65-bc13-375e20233955"",
        ""description"": ""Brand new samsung tv from dubai 32 inches"",
        ""contact"": ""Contact: [ref=tel:+256744338956][u]Call me![/u][/ref]"",
        ""location"": ""kigo-lunnya""
    }
}

new_item = {""3"":
                {
                ""name"": ""Microsoft Xbox"",
                ""price"": ""ugx:500,000"",
                ""image"": ""https://firebasestorage.googleapis.com/v0/b/lexconnectionsapp.appspot.com/o/tv1-removebg-preview.png?alt=media&token=bf8c08e5-6064-4e65-bc13-375e20233955"",
                ""description"": ""Microsoft Xbox Game Console"",
                ""contact"": ""Contact: [ref=tel:+256744338956][u]Call me![/u][/ref]"",
                ""location"": ""kigo-lunnya""
                }
            }

def get_faves():
    # read the faves data file
    faves = Path('faves.json')
    if not faves.exists():
        raise FileNotFoundError
    else:
        with open(faves) as f:
            d = json.load(f)
    return d

def save_faves(new_entry):
    faves = Path('faves.json')
    try:
        d = get_faves()
    except FileNotFoundError:
        d = {}
    d.update(new_entry)
    with open(faves, 'w') as f:
        json.dump(d, f)

save_faves(data)
save_faves(new_item)
favorites = get_faves()
pprint(favorites)
"
kMkjv3LK,Create Wither,jBlume,Lua,Tuesday 18th of July 2023 08:59:34 PM CDT,"--place turtle of bottom right side of 3x1x3 area to make Wither
--Soul Sand Slot 1
--Wither Skelly Head Slot 2
--creates a flat Wither and waits for thee word ""go"" to make another.

while true do
-- term.write(""Give the word"") --asks question and awaits a response
-- read() --reads response. x = read() will set x to the response
-- x==read()
-- if x=""go"" then
  turtle.forward()
  turtle.forward()
  turtle.turnLeft()
  turtle.forward()
  turtle.turnRight()
  turtle.select(1)
  turtle.place(1)
  turtle.turnLeft()
  turtle.place(1)
  turtle.turnRight()
  turtle.turnRight()
  turtle.place(1)
  turtle.turnLeft()
  turtle.back()
  turtle.place(1)
  turtle.select(2)
  turtle.back()
  turtle.place(1)
  turtle.turnLeft()
  turtle.forward()
  turtle.turnRight()
  turtle.place(1)
  turtle.turnRight()
  turtle.forward()
  turtle.forward()
  turtle.turnLeft()
  turtle.place(1)
  sleep(20)
 end
--end"
JMAdYYPS,Untitled,Kurausukun,Bash,Tuesday 18th of July 2023 08:52:51 PM CDT,"FAILED: src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx.gch
/usr/bin/x86_64-w64-mingw32-g++ -DMINGW_HAS_SECURE_API=1 -DQT_CORE_LIB -DQT_DEPRECATED_WARNINGS -DQT_DISABLE_DEPRECATED_UP_TO=0x040800 -DQT_EXPLICIT_QFILE_CONSTRUCTION_FROM_PATH -DQT_LEAN_HEADERS=1 -DQT_NO_AS_CONST=1 -DQT_NO_CAST_FROM_ASCII -DQT_NO_CAST_TO_ASCII -DQT_NO_DEBUG -DQT_NO_EXCEPTIONS -DQT_NO_JAVA_STYLE_ITERATORS -DQT_NO_NARROWING_CONVERSIONS_IN_CONNECT -DQT_PLUGIN -DQT_SQL_LIB -DQT_STATICPLUGIN -DQT_WARN_DEPRECATED_UP_TO=0x070000 -DUNICODE -DWIN32 -DWIN64 -D_ENABLE_EXTENDED_ALIGNED_STORAGE -D_UNICODE -D_WIN64 -I/home/kurausukun/qtbase-everywhere-src-6.5.1/src/plugins/sqldrivers/odbc/QODBCDriverPlugin_autogen/include -I/home/kurausukun/qtbase-everywhere-src-6.5.1/src/plugins/sqldrivers/odbc -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore -I/home/kurausukun/qtbase-everywhere-src-6.5.1/mkspecs/win32-g++ -I/home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/6.5.1 -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/6.5.1/QtCore -I/home/kurausukun/qtbase-everywhere-src-6.5.1/src/sql -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtSql/6.5.1 -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtSql/6.5.1/QtSql -I/home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtSql -isystem /usr/include -DNDEBUG -O2 -std=c++17 -fvisibility=hidden -fno-keep-inline-dllexport -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -Wa,-mbig-obj -Wsuggest-override -Winvalid-pch -x c++-header -include /home/kurausukun/qtbase-everywhere-src-6.5.1/src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx -MD -MT src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx.gch -MF src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx.gch.d -o src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx.gch -c /home/kurausukun/qtbase-everywhere-src-6.5.1/src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx.cxx
In file included from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cstdint:41,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/qglobal.h:16,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qglobal.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/QtCore:4,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/plugins/sqldrivers/odbc/CMakeFiles/QODBCDriverPlugin.dir/cmake_pch.hxx:5,
                 from <command-line>:
/usr/include/stdint.h:90:33: error: conflicting declaration ‘typedef long unsigned int uintptr_t’
   90 | typedef unsigned long int       uintptr_t;
      |                                 ^~~~~~~~~
In file included from /usr/share/mingw-w64/include/crtdefs.h:10,
                 from /usr/share/mingw-w64/include/stddef.h:7,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/stddef.h:1,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cstddef:50,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/qglobal.h:14:
/usr/share/mingw-w64/include/corecrt.h:75:44: note: previous declaration as ‘typedef long long unsigned int uintptr_t’
   75 | __MINGW_EXTENSION typedef unsigned __int64 uintptr_t;
      |                                            ^~~~~~~~~
In file included from /usr/share/mingw-w64/include/sec_api/stdlib_s.h:9,
                 from /usr/share/mingw-w64/include/stdlib.h:769,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/std_abs.h:38,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cmath:47,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/qnumeric.h:13,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qnumeric.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/qglobal.h:61:
/usr/include/stdlib.h:63:5: error: conflicting declaration ‘typedef struct div_t div_t’
   63 |   } div_t;
      |     ^~~~~
/usr/share/mingw-w64/include/stdlib.h:63:5: note: previous declaration as ‘typedef struct _div_t div_t’
   63 |   } div_t;
      |     ^~~~~
/usr/include/stdlib.h:71:5: error: conflicting declaration ‘typedef struct ldiv_t ldiv_t’
   71 |   } ldiv_t;
      |     ^~~~~~
/usr/share/mingw-w64/include/stdlib.h:68:5: note: previous declaration as ‘typedef struct _ldiv_t ldiv_t’
   68 |   } ldiv_t;
      |     ^~~~~~
/usr/include/stdlib.h:81:5: error: conflicting declaration ‘typedef struct lldiv_t lldiv_t’
   81 |   } lldiv_t;
      |     ^~~~~~~
/usr/share/mingw-w64/include/stdlib.h:729:61: note: previous declaration as ‘typedef struct lldiv_t lldiv_t’
  729 |   typedef struct { __MINGW_EXTENSION long long quot, rem; } lldiv_t;
      |                                                             ^~~~~~~
In file included from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/postypes.h:40,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/iosfwd:40,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/iterator:64,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/q20iterator.h:8,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/q20iterator.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/QtCore:7:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:148:11: error: ‘fwide’ has not been declared in ‘::’
  148 |   using ::fwide;
      |           ^~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:149:11: error: ‘fwprintf’ has not been declared in ‘::’
  149 |   using ::fwprintf;
      |           ^~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:150:11: error: ‘fwscanf’ has not been declared in ‘::’
  150 |   using ::fwscanf;
      |           ^~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:160:11: error: ‘swprintf’ has not been declared in ‘::’
  160 |   using ::swprintf;
      |           ^~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:162:11: error: ‘swscanf’ has not been declared in ‘::’
  162 |   using ::swscanf;
      |           ^~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:164:11: error: ‘vfwprintf’ has not been declared in ‘::’
  164 |   using ::vfwprintf;
      |           ^~~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:169:11: error: ‘vswprintf’ has not been declared in ‘::’
  169 |   using ::vswprintf;
      |           ^~~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:174:11: error: ‘vwprintf’ has not been declared in ‘::’
  174 |   using ::vwprintf;
      |           ^~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:204:11: error: ‘wprintf’ has not been declared in ‘::’
  204 |   using ::wprintf;
      |           ^~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwchar:205:11: error: ‘wscanf’ has not been declared in ‘::’
  205 |   using ::wscanf;
      |           ^~~~~~
In file included from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/string:53,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/locale_classes.h:40,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/ios_base.h:41,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/streambuf:41,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/streambuf_iterator.h:35,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/iterator:66:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4155:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4155 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(unsigned int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4160:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4160 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(long int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4166:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4166 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(long unsigned int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4171:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4171 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(long long int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4177:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4177 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(long long unsigned int)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4183:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4183 |   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(float)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4192:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4192 |     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(double)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4201:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4201 |     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h: In function ‘std::wstring std::__cxx11::to_wstring(long double)’:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/basic_string.h:4210:51: error: ‘vswprintf’ is not a member of ‘std’; did you mean ‘vsprintf’?
 4210 |     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
      |                                                   ^~~~~~~~~
      |                                                   vsprintf
In file included from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/chrono.h:37,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/chrono:39,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/kernel/qobject.h:23,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qobject.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/animation/qabstractanimation.h:7,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qabstractanimation.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/QtCore:11:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio: At global scope:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:215:40: error: static assertion failed: This library calls __builtin_clzll on uintmax_t, which is unsafe on your platform. Please complain to http://gcc.gnu.org/bugzilla/
  215 |       static_assert(sizeof (uintmax_t) == sizeof (unsigned long long),
      |                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:215:40: note: the comparison reduces to ‘(4 == 8)’
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:563:45: error: narrowing conversion of ‘1000000000000000000 ’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  563 |   typedef ratio<1,       1000000000000000000> atto;
      |                                             ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:564:45: error: narrowing conversion of ‘1000000000000000’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  564 |   typedef ratio<1,          1000000000000000> femto;
      |                                             ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:565:45: error: narrowing conversion of ‘1000000000000’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  565 |   typedef ratio<1,             1000000000000> pico;
      |                                             ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:576:45: error: narrowing conversion of ‘1000000000000’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  576 |   typedef ratio<            1000000000000, 1> tera;
      |                                             ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:577:45: error: narrowing conversion of ‘1000000000000000’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  577 |   typedef ratio<         1000000000000000, 1> peta;
      |                                             ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ratio:578:45: error: narrowing conversion of ‘1000000000000000000 ’ from ‘long long int’ to ‘long int’ [-Wnarrowing]
  578 |   typedef ratio<      1000000000000000000, 1> exa;
      |                                             ^
In file included from /usr/include/time.h:38,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/ctime:42,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/chrono.h:40:
/usr/include/bits/types/time_t.h:10:18: error: conflicting declaration ‘typedef __time_t time_t’
   10 | typedef __time_t time_t;
      |                  ^~~~~~
/usr/share/mingw-w64/include/corecrt.h:138:20: note: previous declaration as ‘typedef __time64_t time_t’
  138 | typedef __time64_t time_t;
      |                    ^~~~~~
In file included from /usr/include/wctype.h:38,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/cwctype:50,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/locale_facets.h:39,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/locale:40,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/fs_path.h:36,
                 from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/filesystem:45,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/io/qfile.h:13,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qfile.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/io/qdir.h:8,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qdir.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/QtCore:80:
/usr/include/bits/wctype-wchar.h:38:27: error: conflicting declaration ‘typedef long unsigned int wctype_t’
   38 | typedef unsigned long int wctype_t;
      |                           ^~~~~~~~
/usr/share/mingw-w64/include/corecrt.h:107:24: note: previous declaration as ‘typedef short unsigned int wctype_t’
  107 | typedef unsigned short wctype_t;
      |                        ^~~~~~~~
In file included from /usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/random:49,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/src/corelib/global/qrandom.h:9,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/qrandom.h:1,
                 from /home/kurausukun/qtbase-everywhere-src-6.5.1/include/QtCore/QtCore:192:
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/random.h:1593:27: error: narrowing conversion of ‘13043109905998158313’ from ‘long long unsigned int’ to ‘long unsigned int’ [-Wnarrowing]
 1593 |     6364136223846793005ULL> mt19937_64;
      |                           ^
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/random.h:1593:27: error: narrowing conversion of ‘6148914691236517205’ from ‘long long unsigned int’ to ‘long unsigned int’ [-Wnarrowing]
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/random.h:1593:27: error: narrowing conversion of ‘8202884508482404352’ from ‘long long unsigned int’ to ‘long unsigned int’ [-Wnarrowing]
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/random.h:1593:27: error: narrowing conversion of ‘18444473444759240704’ from ‘long long unsigned int’ to ‘long unsigned int’ [-Wnarrowing]
/usr/lib/gcc/x86_64-w64-mingw32/12-win32/include/c++/bits/random.h:1593:27: error: narrowing conversion of ‘6364136223846793005’ from ‘long long unsigned int’ to ‘long unsigned int’ [-Wnarrowing]
ninja: build stopped: subcommand failed."
KGuEjH8Y,Next Cloud File Lock Error Fix,metalx1000,MySQL,Tuesday 18th of July 2023 07:56:53 PM CDT,"sudo mysql -u root
use nextclouddb;
DELETE FROM oc_file_locks WHERE 1;"
5PkbpJup,mas widgets,teslariu,Python,Tuesday 18th of July 2023 07:45:45 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Como hacer este script portable
#
#
# formulario
# posicionamiento place

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox

def guardar_datos():
    pass

ventana = tk.Tk()
ventana.title(""Formulario de inscripción"")
ventana.config(width=400, height=370)
ventana.resizable(False,False)

###### cuadros de dialogo
# retornan True or False
messagebox.askokcancel(title=""INFO"", message='Decida')
messagebox.askyesno(title=""INFO"", message='Decida')
messagebox.askretrycancel(title=""INFO"", message='Decida')

# barra de progreso
barra = ttk.Progressbar(maximum=100)
barra.place(x=10, y=40, width=200)
barra.step(0)
barra.start(20)

barra = ttk.Progressbar(orient=tk.VERTICAL, maximum=100)
barra.place(x=250, y=80, height=200)
barra.step(0)
barra.start(20)


ventana.mainloop()


"
Yw2SgJZc,2023-07-18_stats.json,rdp_snitch,JSON,Tuesday 18th of July 2023 07:18:13 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 12744,
    ""60.250.29.35"": 423,
    ""162.142.125.224"": 3,
    ""58.218.204.51"": 27,
    ""194.26.29.78"": 9,
    ""141.98.11.128"": 6,
    ""87.251.75.145"": 9,
    ""45.79.65.243"": 15,
    ""192.99.110.148"": 18,
    ""152.89.198.135"": 15,
    ""159.65.219.36"": 15,
    ""39.108.174.140"": 39,
    ""143.42.78.210"": 3,
    ""36.20.126.147"": 18,
    ""87.251.75.64"": 3,
    ""50.116.0.183"": 3,
    ""185.170.144.3"": 9,
    ""58.19.173.169"": 9,
    ""31.43.185.32"": 15,
    ""152.32.150.152"": 3,
    ""95.214.26.153"": 9,
    ""87.251.75.120"": 9,
    ""45.140.17.16"": 9,
    ""141.98.82.22"": 3,
    ""112.5.87.34"": 3,
    ""172.105.52.154"": 3,
    ""164.92.158.134"": 3,
    ""45.119.81.119"": 18,
    ""62.204.41.134"": 12,
    ""194.165.16.111"": 3,
    ""106.116.169.71"": 3,
    ""20.226.36.46"": 3,
    ""87.251.64.110"": 6,
    ""62.122.184.168"": 12,
    ""62.122.184.166"": 12,
    ""198.235.24.53"": 9,
    ""45.79.108.4"": 6,
    ""157.230.243.35"": 3,
    ""51.75.160.42"": 6,
    ""62.122.184.165"": 6,
    ""35.232.11.110"": 48,
    ""191.101.174.23"": 3,
    ""117.50.193.71"": 3,
    ""205.210.31.91"": 9
  },
  ""asn"": {
    ""AS34376"": 12744,
    ""AS3462"": 423,
    ""AS398324"": 3,
    ""AS4134"": 30,
    ""AS206728"": 9,
    ""AS209605"": 6,
    ""AS208091"": 21,
    ""AS63949"": 30,
    ""AS16276"": 24,
    ""AS57523"": 45,
    ""AS14061"": 21,
    ""AS37963"": 39,
    ""AS58461"": 18,
    ""AS48080"": 15,
    ""AS4837"": 9,
    ""AS211736"": 15,
    ""AS135377"": 3,
    ""AS211760"": 9,
    ""AS198953"": 9,
    ""AS209588"": 3,
    ""AS9808"": 3,
    ""AS131386"": 18,
    ""AS59425"": 12,
    ""AS48721"": 3,
    ""AS8075"": 3,
    ""AS396982"": 66,
    ""AS32780"": 3,
    ""AS23724"": 3
  },
  ""isp"": {
    ""Telecom Group"": 12744,
    ""Chunghwa Telecom Co., Ltd."": 423,
    ""Censys, Inc."": 3,
    ""Chinanet"": 48,
    ""Media Land LLC"": 9,
    ""UAB Host Baltic"": 6,
    ""XHOST-INTERNET-SOLUTIONS"": 21,
    ""Akamai Technologies, Inc."": 27,
    ""OVH SAS"": 24,
    ""Chang Way Technologies Co. Limited"": 45,
    ""DigitalOcean, LLC"": 21,
    ""Hangzhou Alibaba Advertising Co"": 39,
    ""Dmitriy Panchenko"": 15,
    ""CNC Group CHINA169 Hubei Province Network"": 9,
    ""FOP Dmytro Nedilskyi"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Suisse Limited"": 9,
    ""Proton66 OOO"": 9,
    ""Flyservers S.A."": 6,
    ""China Mobile"": 3,
    ""Akamai Technologies"": 3,
    ""Long Van System Solution"": 18,
    ""Horizon LLC"": 12,
    ""Microsoft Corporation"": 3,
    ""Google LLC"": 66,
    ""Hosting Services"": 3,
    ""UCLOUD"": 3
  },
  ""org"": {
    ""TelecomGroup"": 12744,
    ""Chunghwa Telecom Co. Ltd."": 423,
    ""Censys Inc"": 3,
    ""Chinanet JS"": 27,
    ""Media Land LLC"": 9,
    ""Unknown"": 51,
    ""Xhost Internet Solutions"": 27,
    ""Linode"": 30,
    ""AVAST Software"": 18,
    ""Starcrecium Limited"": 15,
    ""Digital Ocean"": 15,
    ""Aliyun Computing Co., LTD"": 39,
    ""Xhostis"": 9,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Ucloud Information Technology"": 3,
    ""NETSHIELD FZE Ltd"": 9,
    ""Proton66 LLC"": 9,
    ""Vdsline"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""DigitalOcean, LLC"": 6,
    ""Horizon LLC"": 12,
    ""Flyservers S.A"": 3,
    ""Chinanet HE"": 3,
    ""Microsoft Azure Cloud (brazilsouth)"": 3,
    ""Chang Way Technologies Co. Limited"": 30,
    ""Palo Alto Networks, Inc"": 18,
    ""OVH Ltd"": 6,
    ""Google Cloud (us-central1)"": 48,
    ""Ipxo"": 3,
    ""Shanghai UCloud Information Technology Company Limited"": 3
  },
  ""regionName"": {
    ""Blagoevgrad"": 12744,
    ""Taipei City"": 423,
    ""Michigan"": 3,
    ""Jiangsu"": 27,
    ""St.-Petersburg"": 9,
    ""Kaunas"": 9,
    ""North Holland"": 24,
    ""California"": 42,
    ""Quebec"": 18,
    ""Moscow"": 81,
    ""New Jersey"": 18,
    ""Guangdong"": 42,
    ""North West"": 3,
    ""Zhejiang"": 18,
    ""Hubei"": 9,
    ""Kyiv City"": 15,
    ""Virginia"": 3,
    ""Valletta"": 9,
    ""Provincia de Panama"": 3,
    ""Maharashtra"": 3,
    ""Ho Chi Minh"": 18,
    ""Hebei"": 3,
    ""Sao Paulo"": 3,
    ""South West"": 3,
    ""England"": 6,
    ""Iowa"": 48,
    ""Beijing"": 3
  },
  ""country"": {
    ""Bulgaria"": 12744,
    ""Taiwan"": 423,
    ""United States"": 114,
    ""China"": 102,
    ""Russia"": 90,
    ""Lithuania"": 9,
    ""Netherlands"": 24,
    ""Canada"": 18,
    ""Singapore"": 6,
    ""Ukraine"": 15,
    ""Malta"": 9,
    ""Panama"": 3,
    ""India"": 3,
    ""Vietnam"": 18,
    ""Brazil"": 3,
    ""United Kingdom"": 6
  },
  ""account"": {
    ""hello"": 13401,
    ""(empty)"": 12,
    ""Administr"": 66,
    ""Domain"": 81,
    ""Administrator"": 3,
    ""iAIbNtePG"": 3,
    ""tvWvvG"": 3,
    ""WfUssg"": 3,
    ""Test"": 6,
    ""cNCJSQwQh"": 3,
    ""QshhfR"": 3,
    ""KnxpxG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 13587
  },
  ""client_build"": {
    ""Unknown"": 13587
  },
  ""client_name"": {
    ""Unknown"": 13587
  },
  ""ip_type"": {
    ""Unknown"": 13335,
    ""proxy"": 42,
    ""hosting"": 180,
    ""hosting & proxy"": 27,
    ""mobile"": 3
  }
}"
hAeJyvy7,2023-07-18_stats.json,rdp_snitch,JSON,Tuesday 18th of July 2023 07:16:13 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 8496,
    ""60.250.29.35"": 282,
    ""162.142.125.224"": 2,
    ""58.218.204.51"": 18,
    ""194.26.29.78"": 6,
    ""141.98.11.128"": 4,
    ""87.251.75.145"": 6,
    ""45.79.65.243"": 10,
    ""192.99.110.148"": 12,
    ""152.89.198.135"": 10,
    ""159.65.219.36"": 10,
    ""39.108.174.140"": 26,
    ""143.42.78.210"": 2,
    ""36.20.126.147"": 12,
    ""87.251.75.64"": 2,
    ""50.116.0.183"": 2,
    ""185.170.144.3"": 6,
    ""58.19.173.169"": 6,
    ""31.43.185.32"": 10,
    ""152.32.150.152"": 2,
    ""95.214.26.153"": 6,
    ""87.251.75.120"": 6,
    ""45.140.17.16"": 6,
    ""141.98.82.22"": 2,
    ""112.5.87.34"": 2,
    ""172.105.52.154"": 2,
    ""164.92.158.134"": 2,
    ""45.119.81.119"": 12,
    ""62.204.41.134"": 8,
    ""194.165.16.111"": 2,
    ""106.116.169.71"": 2,
    ""20.226.36.46"": 2,
    ""87.251.64.110"": 4,
    ""62.122.184.168"": 8,
    ""62.122.184.166"": 8,
    ""198.235.24.53"": 6,
    ""45.79.108.4"": 4,
    ""157.230.243.35"": 2,
    ""51.75.160.42"": 4,
    ""62.122.184.165"": 4,
    ""35.232.11.110"": 32,
    ""191.101.174.23"": 2,
    ""117.50.193.71"": 2,
    ""205.210.31.91"": 6
  },
  ""asn"": {
    ""AS34376"": 8496,
    ""AS3462"": 282,
    ""AS398324"": 2,
    ""AS4134"": 20,
    ""AS206728"": 6,
    ""AS209605"": 4,
    ""AS208091"": 14,
    ""AS63949"": 20,
    ""AS16276"": 16,
    ""AS57523"": 30,
    ""AS14061"": 14,
    ""AS37963"": 26,
    ""AS58461"": 12,
    ""AS48080"": 10,
    ""AS4837"": 6,
    ""AS211736"": 10,
    ""AS135377"": 2,
    ""AS211760"": 6,
    ""AS198953"": 6,
    ""AS209588"": 2,
    ""AS9808"": 2,
    ""AS131386"": 12,
    ""AS59425"": 8,
    ""AS48721"": 2,
    ""AS8075"": 2,
    ""AS396982"": 44,
    ""AS32780"": 2,
    ""AS23724"": 2
  },
  ""isp"": {
    ""Telecom Group"": 8496,
    ""Chunghwa Telecom Co., Ltd."": 282,
    ""Censys, Inc."": 2,
    ""Chinanet"": 32,
    ""Media Land LLC"": 6,
    ""UAB Host Baltic"": 4,
    ""XHOST-INTERNET-SOLUTIONS"": 14,
    ""Akamai Technologies, Inc."": 18,
    ""OVH SAS"": 16,
    ""Chang Way Technologies Co. Limited"": 30,
    ""DigitalOcean, LLC"": 14,
    ""Hangzhou Alibaba Advertising Co"": 26,
    ""Dmitriy Panchenko"": 10,
    ""CNC Group CHINA169 Hubei Province Network"": 6,
    ""FOP Dmytro Nedilskyi"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Suisse Limited"": 6,
    ""Proton66 OOO"": 6,
    ""Flyservers S.A."": 4,
    ""China Mobile"": 2,
    ""Akamai Technologies"": 2,
    ""Long Van System Solution"": 12,
    ""Horizon LLC"": 8,
    ""Microsoft Corporation"": 2,
    ""Google LLC"": 44,
    ""Hosting Services"": 2,
    ""UCLOUD"": 2
  },
  ""org"": {
    ""TelecomGroup"": 8496,
    ""Chunghwa Telecom Co. Ltd."": 282,
    ""Censys Inc"": 2,
    ""Chinanet JS"": 18,
    ""Media Land LLC"": 6,
    ""Unknown"": 34,
    ""Xhost Internet Solutions"": 18,
    ""Linode"": 20,
    ""AVAST Software"": 12,
    ""Starcrecium Limited"": 10,
    ""Digital Ocean"": 10,
    ""Aliyun Computing Co., LTD"": 26,
    ""Xhostis"": 6,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Ucloud Information Technology"": 2,
    ""NETSHIELD FZE Ltd"": 6,
    ""Proton66 LLC"": 6,
    ""Vdsline"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""DigitalOcean, LLC"": 4,
    ""Horizon LLC"": 8,
    ""Flyservers S.A"": 2,
    ""Chinanet HE"": 2,
    ""Microsoft Azure Cloud (brazilsouth)"": 2,
    ""Chang Way Technologies Co. Limited"": 20,
    ""Palo Alto Networks, Inc"": 12,
    ""OVH Ltd"": 4,
    ""Google Cloud (us-central1)"": 32,
    ""Ipxo"": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 2
  },
  ""regionName"": {
    ""Blagoevgrad"": 8496,
    ""Taipei City"": 282,
    ""Michigan"": 2,
    ""Jiangsu"": 18,
    ""St.-Petersburg"": 6,
    ""Kaunas"": 6,
    ""North Holland"": 16,
    ""California"": 28,
    ""Quebec"": 12,
    ""Moscow"": 54,
    ""New Jersey"": 12,
    ""Guangdong"": 28,
    ""North West"": 2,
    ""Zhejiang"": 12,
    ""Hubei"": 6,
    ""Kyiv City"": 10,
    ""Virginia"": 2,
    ""Valletta"": 6,
    ""Provincia de Panama"": 2,
    ""Maharashtra"": 2,
    ""Ho Chi Minh"": 12,
    ""Hebei"": 2,
    ""Sao Paulo"": 2,
    ""South West"": 2,
    ""England"": 4,
    ""Iowa"": 32,
    ""Beijing"": 2
  },
  ""country"": {
    ""Bulgaria"": 8496,
    ""Taiwan"": 282,
    ""United States"": 76,
    ""China"": 68,
    ""Russia"": 60,
    ""Lithuania"": 6,
    ""Netherlands"": 16,
    ""Canada"": 12,
    ""Singapore"": 4,
    ""Ukraine"": 10,
    ""Malta"": 6,
    ""Panama"": 2,
    ""India"": 2,
    ""Vietnam"": 12,
    ""Brazil"": 2,
    ""United Kingdom"": 4
  },
  ""account"": {
    ""hello"": 8934,
    ""(empty)"": 8,
    ""Administr"": 44,
    ""Domain"": 54,
    ""Administrator"": 2,
    ""iAIbNtePG"": 2,
    ""tvWvvG"": 2,
    ""WfUssg"": 2,
    ""Test"": 4,
    ""cNCJSQwQh"": 2,
    ""QshhfR"": 2,
    ""KnxpxG"": 2
  },
  ""keyboard"": {
    ""Unknown"": 9058
  },
  ""client_build"": {
    ""Unknown"": 9058
  },
  ""client_name"": {
    ""Unknown"": 9058
  },
  ""ip_type"": {
    ""Unknown"": 8890,
    ""proxy"": 28,
    ""hosting"": 120,
    ""hosting & proxy"": 18,
    ""mobile"": 2
  }
}"
AXq8nWgR,formulario tkinter,teslariu,Python,Tuesday 18th of July 2023 07:16:12 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# formulario
# posicionamiento place

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox

'''estructura de datos
alumnos = [ 
        {""nombre"": ""Juan"", ""email"":""juan@gmail.com"", ""tel"":""456454"", ""curso"":""Python""},
        {""nombre"": ""JuanJose"", ""email"":""juaao@gmail.com"", ""tel"":""45677454"", ""curso"":""C""}
    ]
'''
def leer_datos():
    global alumnos
    # verifico que acepte las condiciones
    valor = estado_casilla.get()
    if not valor:
        messagebox.showinfo(title=""Términos y condiciones"", message=""Debe aceptar"")
        return
         
    
    
    nombre = caja_nombre.get()
    if nombre.isspace() or not nombre:
        messagebox.showerror(title=""Error en nombre"", message=""Nombre inválido"")
        return
        
    email = caja_email.get()
    if ""@"" not in email:
        messagebox.showerror(title=""Error en email"", message=""Dirección inválida"")
        return
        
    
    tel = caja_tel.get()
    curso = lista_cursos.get()
    
    alumno = {""nombre"": nombre, ""email"":email, ""tel"":tel, ""curso"":curso}
    alumnos.append(alumno)
    
def borrar_formulario():
    caja_nombre.delete(0, tk.END)
    caja_tel.delete(0, tk.END)
    caja_email.delete(0, tk.END)
    


def guardar_datos():
    from pprint import pprint
    global alumnos
    leer_datos()
    pprint(alumnos)
    borrar_formulario()


alumnos = []

ventana = tk.Tk()
ventana.title(""Formulario de inscripción"")
ventana.config(width=400, height=370)
ventana.resizable(False,False)

# campo nombre
etiqueta = ttk.Label(text=""Nombre"")
etiqueta.place(x=10, y=10)
caja_nombre = ttk.Entry()
caja_nombre.place(x=130, y=10, width=180, height=25)

# campo email
etiqueta = ttk.Label(text=""Email"")
etiqueta.place(x=10, y=60)
caja_email = ttk.Entry()
caja_email.place(x=130, y=60, width=180, height=25)

# campo telefono
etiqueta = ttk.Label(text=""Teléfono"")
etiqueta.place(x=10, y=110)
caja_tel = ttk.Entry()
caja_tel.place(x=130, y=110, width=180, height=25)

# campo cursos
etiqueta = ttk.Label(text=""Cursos"")
etiqueta.place(x=10, y=160)
lista_cursos = ttk.Combobox(
            state='readonly',
            values=['Python', 'JavaScript','Python & Django', 'C']
        )
lista_cursos.place(x=130, y=160, width=180, height=25)


# Casilla de verificación para aceptar términos y condiciones
estado_casilla = tk.BooleanVar()
estado_casilla.set(""False"")
casilla = ttk.Checkbutton(text=""Acepto términos y condiciones"", variable=estado_casilla)
casilla.place(x=100, y=230)

boton = ttk.Button(text=""Enviar datos"", command=guardar_datos)
boton.place(x=130, y=290, width=120, height=35)

ventana.mainloop()


"
Sd0QtLch,2023-07-18_stats.json,rdp_snitch,JSON,Tuesday 18th of July 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""85.14.32.53"": 4248,
    ""60.250.29.35"": 141,
    ""162.142.125.224"": 1,
    ""58.218.204.51"": 9,
    ""194.26.29.78"": 3,
    ""141.98.11.128"": 2,
    ""87.251.75.145"": 3,
    ""45.79.65.243"": 5,
    ""192.99.110.148"": 6,
    ""152.89.198.135"": 5,
    ""159.65.219.36"": 5,
    ""39.108.174.140"": 13,
    ""143.42.78.210"": 1,
    ""36.20.126.147"": 6,
    ""87.251.75.64"": 1,
    ""50.116.0.183"": 1,
    ""185.170.144.3"": 3,
    ""58.19.173.169"": 3,
    ""31.43.185.32"": 5,
    ""152.32.150.152"": 1,
    ""95.214.26.153"": 3,
    ""87.251.75.120"": 3,
    ""45.140.17.16"": 3,
    ""141.98.82.22"": 1,
    ""112.5.87.34"": 1,
    ""172.105.52.154"": 1,
    ""164.92.158.134"": 1,
    ""45.119.81.119"": 6,
    ""62.204.41.134"": 4,
    ""194.165.16.111"": 1,
    ""106.116.169.71"": 1,
    ""20.226.36.46"": 1,
    ""87.251.64.110"": 2,
    ""62.122.184.168"": 4,
    ""62.122.184.166"": 4,
    ""198.235.24.53"": 3,
    ""45.79.108.4"": 2,
    ""157.230.243.35"": 1,
    ""51.75.160.42"": 2,
    ""62.122.184.165"": 2,
    ""35.232.11.110"": 16,
    ""191.101.174.23"": 1,
    ""117.50.193.71"": 1,
    ""205.210.31.91"": 3
  },
  ""asn"": {
    ""AS34376"": 4248,
    ""AS3462"": 141,
    ""AS398324"": 1,
    ""AS4134"": 10,
    ""AS206728"": 3,
    ""AS209605"": 2,
    ""AS208091"": 7,
    ""AS63949"": 10,
    ""AS16276"": 8,
    ""AS57523"": 15,
    ""AS14061"": 7,
    ""AS37963"": 13,
    ""AS58461"": 6,
    ""AS48080"": 5,
    ""AS4837"": 3,
    ""AS211736"": 5,
    ""AS135377"": 1,
    ""AS211760"": 3,
    ""AS198953"": 3,
    ""AS209588"": 1,
    ""AS9808"": 1,
    ""AS131386"": 6,
    ""AS59425"": 4,
    ""AS48721"": 1,
    ""AS8075"": 1,
    ""AS396982"": 22,
    ""AS32780"": 1,
    ""AS23724"": 1
  },
  ""isp"": {
    ""Telecom Group"": 4248,
    ""Chunghwa Telecom Co., Ltd."": 141,
    ""Censys, Inc."": 1,
    ""Chinanet"": 16,
    ""Media Land LLC"": 3,
    ""UAB Host Baltic"": 2,
    ""XHOST-INTERNET-SOLUTIONS"": 7,
    ""Akamai Technologies, Inc."": 9,
    ""OVH SAS"": 8,
    ""Chang Way Technologies Co. Limited"": 15,
    ""DigitalOcean, LLC"": 7,
    ""Hangzhou Alibaba Advertising Co"": 13,
    ""Dmitriy Panchenko"": 5,
    ""CNC Group CHINA169 Hubei Province Network"": 3,
    ""FOP Dmytro Nedilskyi"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Suisse Limited"": 3,
    ""Proton66 OOO"": 3,
    ""Flyservers S.A."": 2,
    ""China Mobile"": 1,
    ""Akamai Technologies"": 1,
    ""Long Van System Solution"": 6,
    ""Horizon LLC"": 4,
    ""Microsoft Corporation"": 1,
    ""Google LLC"": 22,
    ""Hosting Services"": 1,
    ""UCLOUD"": 1
  },
  ""org"": {
    ""TelecomGroup"": 4248,
    ""Chunghwa Telecom Co. Ltd."": 141,
    ""Censys Inc"": 1,
    ""Chinanet JS"": 9,
    ""Media Land LLC"": 3,
    ""Unknown"": 17,
    ""Xhost Internet Solutions"": 9,
    ""Linode"": 10,
    ""AVAST Software"": 6,
    ""Starcrecium Limited"": 5,
    ""Digital Ocean"": 5,
    ""Aliyun Computing Co., LTD"": 13,
    ""Xhostis"": 3,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Ucloud Information Technology"": 1,
    ""NETSHIELD FZE Ltd"": 3,
    ""Proton66 LLC"": 3,
    ""Vdsline"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""DigitalOcean, LLC"": 2,
    ""Horizon LLC"": 4,
    ""Flyservers S.A"": 1,
    ""Chinanet HE"": 1,
    ""Microsoft Azure Cloud (brazilsouth)"": 1,
    ""Chang Way Technologies Co. Limited"": 10,
    ""Palo Alto Networks, Inc"": 6,
    ""OVH Ltd"": 2,
    ""Google Cloud (us-central1)"": 16,
    ""Ipxo"": 1,
    ""Shanghai UCloud Information Technology Company Limited"": 1
  },
  ""regionName"": {
    ""Blagoevgrad"": 4248,
    ""Taipei City"": 141,
    ""Michigan"": 1,
    ""Jiangsu"": 9,
    ""St.-Petersburg"": 3,
    ""Kaunas"": 3,
    ""North Holland"": 8,
    ""California"": 14,
    ""Quebec"": 6,
    ""Moscow"": 27,
    ""New Jersey"": 6,
    ""Guangdong"": 14,
    ""North West"": 1,
    ""Zhejiang"": 6,
    ""Hubei"": 3,
    ""Kyiv City"": 5,
    ""Virginia"": 1,
    ""Valletta"": 3,
    ""Provincia de Panama"": 1,
    ""Maharashtra"": 1,
    ""Ho Chi Minh"": 6,
    ""Hebei"": 1,
    ""Sao Paulo"": 1,
    ""South West"": 1,
    ""England"": 2,
    ""Iowa"": 16,
    ""Beijing"": 1
  },
  ""country"": {
    ""Bulgaria"": 4248,
    ""Taiwan"": 141,
    ""United States"": 38,
    ""China"": 34,
    ""Russia"": 30,
    ""Lithuania"": 3,
    ""Netherlands"": 8,
    ""Canada"": 6,
    ""Singapore"": 2,
    ""Ukraine"": 5,
    ""Malta"": 3,
    ""Panama"": 1,
    ""India"": 1,
    ""Vietnam"": 6,
    ""Brazil"": 1,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""hello"": 4467,
    ""(empty)"": 4,
    ""Administr"": 22,
    ""Domain"": 27,
    ""Administrator"": 1,
    ""iAIbNtePG"": 1,
    ""tvWvvG"": 1,
    ""WfUssg"": 1,
    ""Test"": 2,
    ""cNCJSQwQh"": 1,
    ""QshhfR"": 1,
    ""KnxpxG"": 1
  },
  ""keyboard"": {
    ""Unknown"": 4529
  },
  ""client_build"": {
    ""Unknown"": 4529
  },
  ""client_name"": {
    ""Unknown"": 4529
  },
  ""ip_type"": {
    ""Unknown"": 4445,
    ""proxy"": 14,
    ""hosting"": 60,
    ""hosting & proxy"": 9,
    ""mobile"": 1
  }
}"
B8HpmcnE,Spammers and Scammers [7-3/2023],bombaires,HTML,Tuesday 18th of July 2023 06:59:36 PM CDT,"<a href=""mailto:switchere.com@namebrightprivacy.com"">switchere.com@namebrightprivacy.com</a>
<a href=""mailto:customercare@switchere.com"">customercare@switchere.com</a>
<a href=""mailto:bohdan.diatlenko@atri.tech"">bohdan.diatlenko@atri.tech</a>
<a href=""mailto:info@CareConnectPSS.com"">info@CareConnectPSS.com</a>
<a href=""mailto:amy@gaucherdisease.org"">amy@gaucherdisease.org</a>
<a href=""mailto:info@torahblast.com"">info@torahblast.com</a>
<a href=""mailto:info@toraheblast.com"">info@toraheblast.com</a>
<a href=""mailto:info@gaucherdisease.org"">info@gaucherdisease.org</a>"
Pa4wFuqJ,depth2SVG,j0h,C,Tuesday 18th of July 2023 06:45:13 PM CDT,"//This program intends to get all the point depths from a frame then dump them to std out and close.
#include <fcntl.h>
#include <libfreenect.h>
#include <libfreenect_sync.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <termios.h>
#include <unistd.h>
#include ""svg.h""
//gcc -Wall -g -o ""%e"" ""%f""  -lfreenect -lfreenect_sync   
 int dtime=5;
 int arduino;
 
//int current_tilt=&current_tilt);
freenect_context *f_ctx;
freenect_device *f_dev;
	

    
#define WIDTH 640
#define HEIGHT 400

     int die = 0;

int kInit();                 //initiallize / test kinect library and device connection
void kClose();         //close the kinect device
void depth_cb(freenect_device *dev, void *depth, uint32_t timestamp);
void no_kinect_quit(void);            

int main(){

	kInit();  //init kinect lib, and device

    // Set the depth callback function
    freenect_set_depth_callback(f_dev, depth_cb);

    // Start the depth stream
    freenect_start_depth(f_dev);
    
     while (!die)    {
        // Update the Kinect device
        if (freenect_process_events(f_ctx) < 0){
            break;
		}
	    }

kClose();

    return 0;
}


//Kinect Stuff
int kInit(){
	    // Initialize libfreenect
    if (freenect_init(&f_ctx, NULL) < 0)    {
        printf(""Failed to initialize libfreenect!\n"");
        exit(1);
    }

    // Set the log level (optional)
  //  freenect_set_log_level(f_ctx, FREENECT_LOG_DEBUG);
  
    // Open the Kinect device
    if (freenect_open_device(f_ctx, &f_dev, 0) < 0)    {
        printf(""Failed to open Kinect device!\n"");
       exit(1);
    }
    return 0;
	}
	
void kClose(){
		//shutdown functions
    freenect_stop_depth(f_dev);
    freenect_close_device(f_dev);
    freenect_shutdown(f_ctx);
		}
		
void depth_cb(freenect_device *dev, void *depth, uint32_t timestamp){
   svg* psvg;
    psvg = svg_create(WIDTH, HEIGHT);
    // Cast the depth data to unsigned short (16-bit) xbox uses 11 bits of depth
    uint16_t *depth_data = (uint16_t *)depth;
   // uint16_t depth_value = depth_data[index];
    uint16_t depth_value = 0;
if(depth_value>=2046){
	//nearing buffer overflow. this happens as object approaches camera
	depth_value=2046;
	}
    // Print the depth value at a specific pixel (e.g., pixel at (320, 240) (Center of frame))
    int x = 0;
    int y = 0;
    int index = 0; //index 0 to 307840 

for (x=0; x<=WIDTH; x+=4){  //I expect 640 numbers by 480
	index = y*WIDTH+x;  
	depth_value = depth_data[index];  
	//printf(""%d "",depth_value);
  //printf("" %d %d "", x, y);
    svg_pixelDepth(psvg, x, y, depth_value);
	if(x>=WIDTH-1){
		if(y>=HEIGHT-1){
		svg_finalize(psvg);
        svg_save(psvg, ""haaaah.svg"");
        svg_free(psvg);
	    exit(1);
		}
		y+=4;  //goto next line
		x=0;
		printf(""%d\n"", y);
		}
	}
}
void no_kinect_quit(void){
	printf(""Error: Kinect not connected?\n"");
	exit(1);
}

"
sJjmm6XV,PlayerController.cs,GoodNoodle,C#,Tuesday 18th of July 2023 06:44:03 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.TextCore.Text;
using UnityEngine.UI;
using static Creature;



public class PlayerController : MonoBehaviour, ISavable,ISwitchable
{
    private Vector2 input;

    private Charecter charecter;

    public static PlayerController i;

    public Sprite openedChestSprite;

    private BuddyController buddyController;

    public Party creatureparty { get; private set; }


    public bool playerActive = true;

    public Text swapText;

    public GameObject torch;

    public CharecterAnimator theanim;

    private void Awake()
    {
        i = this;

        creatureparty = GetComponent<Party>();

        charecter = GetComponent<Charecter>();        
    }

    private void Start()
    {
     
       // controllerScript.enabled = true;
    }

    public void HandleUpdate()
    {
        if (!playerActive) return;
        if (!charecter.IsMoving)
        {
            input.x = Input.GetAxisRaw(""Horizontal"");
            input.y = Input.GetAxisRaw(""Vertical"");

            // remove diagonal movement
           // if (input.x != 0) input.y = 0;

          //  if (input != Vector2.zero)
           // {
           //     StartCoroutine(charecter.Move(input, OnMoveOver));
           // }

            if (buddyController != null )
            {
                if (CharecterSwap.istogether == true) {buddyController.Follow(transform.position);}
                
               
            }

           if(Math.Abs(input.x) == 1 || Math.Abs(input.y) == 1) 
           StartCoroutine(charecter.Move(input, OnMoveOver));
            
        }

        charecter.HandleUpdate();

        if (Input.GetKeyDown(KeyCode.Z))
            StartCoroutine(Interact());
    }

    IEnumerator Interact()
    {
        var facingDir = new Vector3(charecter.Animator.MoveX, charecter.Animator.MoveY);
        var interactPos = transform.position + facingDir;

        //Debug.Log($""{charecter.Animator.MoveX} {charecter.Animator.MoveY}"");

        var collider = Physics2D.OverlapCircle(interactPos, 0.3f, GameLayers.I.InteractableLayer | GameLayers.I.WaterLayer);
        Debug.DrawLine(transform.position, interactPos, Color.green, 0.5f);
        if (collider != null)
        {
             if(collider.gameObject.GetComponent<Torch>() != null)
             {
                collider.gameObject.SetActive(false);
                torch = collider.gameObject;
                torch.transform.parent = this.transform;
                theanim.IsSHoldingTorch= true;
             }

            yield return collider.GetComponent<Interactable>()?.Interact(transform);
        }

      
        
         collider = Physics2D.OverlapCircle(interactPos, 0.3f, GameLayers.I.MoveableObjects);
        if(collider != null)
        {
            yield return collider.GetComponent<MovableObject>().Move(facingDir);
        }

    }

    IPlayerTriggerable currentlyInTrigger;

    private void OnMoveOver()
    {
      var colliders =  Physics2D.OverlapCircleAll(transform.position - new Vector3(0, charecter.OffsetY), 0.2f, GameLayers.I.TriggerableLayers);

        IPlayerTriggerable triggerable = null;
        foreach (var collider in colliders)
        {
             triggerable = collider.GetComponent<IPlayerTriggerable>();
            if (triggerable != null)
            {

                if (triggerable == currentlyInTrigger && !triggerable.triggerRepeatedly)
                    break;


                triggerable.OnPlayerTriggered(this);
                currentlyInTrigger = triggerable;
                break;
            }
        }

        if (colliders.Count() == 0 || triggerable != currentlyInTrigger)
            currentlyInTrigger = null;
    }

    public object CaptureState()
    {
        var saveData = new PlayerSaveData()
        {
            pos = new float[] { transform.position.x, transform.position.y },
            creatures = creatureparty.Creatures.Select(p => p.GetSaveData()).ToList()
        };

        float[] pos = new float[] {transform.position.x, transform.position.y};
        return saveData;
    }

    public void RestoreState(object state)
    {
        var savedata = (PlayerSaveData)state;

        var pos = savedata.pos;
        transform.position = new Vector3(pos[0], pos[1]);

      creatureparty.Creatures = savedata.creatures.Select(s => new Creature(s)).ToList();
    }

    public void SetBuddy(BuddyController buddy)
    {
        buddyController = buddy;
     
    }

    public void OnSwitch(bool isSwitched)
    {
        playerActive = isSwitched;

       // controllerScript.enabled = false;
       // inventoryScript.enabled = false;
       // buddyScript.enabled= true;
    }

    public void IsSeperated()
    {
        // turn off buddy script
       buddyController.GetComponent<BuddyController>().enabled = false;

        swapText.text = ""Stay"";
    }

    public void IsTogether()
    {
        // turn on buddy script
        swapText.text = ""Follow"";
        buddyController.GetComponent<BuddyController>().enabled = true;
    }

    public Charecter Charecter => charecter;

    public string Name { get;  set; }

    public Transform thecurrentChar => this.transform;
}


[Serializable]
public class PlayerSaveData
{
    public float[] pos;
    public List<CreatureSaveData> creatures;
}
"
9ib07yUz,Party.cs,GoodNoodle,C#,Tuesday 18th of July 2023 06:42:30 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;
using System;

public class Party : MonoBehaviour
{
    [SerializeField] public List<Creature> creatures;

    public event Action OnUpdated;

    public List<Creature> Creatures
    {
        get { return creatures; 
        }
        set { 
            creatures = value;
            OnUpdated?.Invoke();
        }
        
    }

    private void Awake()
    {
        foreach (var creature in creatures)
        {
            creature.Init();
        }
    }

    private void Start()
    {
       
    }

    public Creature GetUninjuredCreature()
    {
      return creatures.Where(x => x.HP > 0).FirstOrDefault();
    }

    public void AddCreature(Creature newCteature)
    {
        if(creatures.Count < 6)
        {
            creatures.Add(newCteature);
            OnUpdated?.Invoke();
        }
        else
        {
            /// transfer to storage box
        }
    }

    public IEnumerator CheckForEvolutions()
    {
        foreach (var creature in creatures)
        {
          var evolution =  creature.CheckForEvolution();
            if(evolution != null)
            {
                yield return GameController.Instance.EvoMan.Evolove(creature, evolution);
            }
        }
    }

    public void PartyUpdated()
    {
        OnUpdated?.Invoke();
    }

    public static Party GetPlayerParty()
    {
       return FindObjectOfType<PlayerController>().GetComponent<Party>();
    }
}
"
mHKbJQcD,LUA - Simple Collections,DrCrafty,Lua,Tuesday 18th of July 2023 06:20:37 PM CDT,"-- Collections class
Collections = {}

function Collections:new(elements)
    elements = elements or {}
    setmetatable(elements, self)
    self.__index = self
    self.elements = elements
    
    return self
end

function Collections:add(element)
    table.insert(self.elements, element)
    return true
end

function Collections:addAll(collection)
    for _, element in ipairs(collection) do
        table.insert(self.elements, element)
    end
    return true
end

function Collections:clear()
    self.elements = {}
end

function Collections:contains(element)
    for _, value in pairs(self.elements) do
        if value == element then
            return true
        end
    end
    return false
end

function Collections:containsAll(collection)
    for _, element in ipairs(collection) do
        if not self:contains(element) then
            return false
        end
    end
    return true
end

function Collections:equals(other)
    if #self.elements ~= #other.elements then
        return false
    end
    for i, value in ipairs(self.elements) do
        if value ~= other.elements[i] then
            return false
        end
    end
    return true
end

function Collections:isEmpty()
    return next(self.elements) == nil
end

function Collections:remove(element)
    for i, value in ipairs(self.elements) do
        if value == element then
            table.remove(self.elements, i)
            return true
        end
    end
    return false
end

function Collections:removeAll(collection)
    local modified = false
    for _, element in ipairs(collection) do
        while self:remove(element) do
            modified = true
        end
    end
    return modified
end

function Collections:removeIf(predicate)
    local modified = false
    for i = #self.elements, 1, -1 do
        if predicate(self.elements[i]) then
            table.remove(self.elements, i)
            modified = true
        end
    end
    return modified
end

function Collections:retainAll(collection)
    local modified = false
    local toRemove = {}
    for _, value in ipairs(self.elements) do
        if not collection:contains(value) then
            table.insert(toRemove, value)
            modified = true
        end
    end
    for _, value in ipairs(toRemove) do
        self:remove(value)
    end
    return modified
end

function Collections:size()
    return #self.elements
end

function Collections:allMatch(predicate)
    for _, value in ipairs(self.elements) do
        if not predicate(value) then
            return false
        end
    end
    return true
end

function Collections:anyMatch(predicate)
    for _, value in ipairs(self.elements) do
        if predicate(value) then
            return true
        end
    end
    return false
end

function Collections:concat(a, b)
    local mergedElements = {}
    for _, value in ipairs(a.elements) do
        table.insert(mergedElements, value)
    end
    for _, value in ipairs(b.elements) do
        table.insert(mergedElements, value)
    end
    self.elements = mergedElements
end

function Collections:count()
    return #self.elements
end

function Collections:distinct()
    local distinctElements = {}
    local visited = {}
    for _, value in ipairs(self.elements) do
        if not visited[value] then
            table.insert(distinctElements, value)
            visited[value] = true
        end
    end
    self.elements = distinctElements
end

function Collections:empty()
    return {}
end

function Collections:filter(predicate)
    local filteredElements = {}
    for _, value in ipairs(self.elements) do
        if predicate(value) then
            table.insert(filteredElements, value)
        end
    end
    self.elements = filteredElements
end

function Collections:findAny()
    if #self.elements > 0 then
        local randomIndex = math.random(1, #self.elements)
        return self.elements[randomIndex]
    else
        return nil
    end
end

function Collections:findFirst()
    if #self.elements > 0 then
        return self.elements[1]
    else
        return nil
    end
end

function Collections:flatMap(mapper)
    local flatMappedElements = {}
    for _, value in ipairs(self.elements) do
        local mappedValues = mapper(value)
        for _, mappedValue in ipairs(mappedValues) do
            table.insert(flatMappedElements, mappedValue)
        end
    end
    self.elements = flatMappedElements
end

function Collections:forEach(action)
    for _, value in ipairs(self.elements) do
        action(value)
    end
end

function Collections:map(mapper)
    local mappedElements = {}
    for _, value in ipairs(self.elements) do
        local mappedValue = mapper(value)
        table.insert(mappedElements, mappedValue)
    end
    self.elements = mappedElements
end

function Collections:max(comparator)
    if #self.elements == 0 then
        return nil
    end
    local maxElement = self.elements[1]
    for i = 2, #self.elements do
        if comparator(self.elements[i], maxElement) then
            maxElement = self.elements[i]
        end
    end
    return maxElement
end

function Collections:min(comparator)
    if #self.elements == 0 then
        return nil
    end
    local minElement = self.elements[1]
    for i = 2, #self.elements do
        if comparator(self.elements[i], minElement) then
            minElement = self.elements[i]
        end
    end
    return minElement
end

function Collections:noneMatch(predicate)
    for _, value in ipairs(self.elements) do
        if predicate(value) then
            return false
        end
    end
    return true
end

function Collections:print()
    for _, value in ipairs(self.elements) do
      print(value)
    end
end

function Collections:reduce(identity, accumulator, combiner)
    local result = identity
    for _, value in ipairs(self.elements) do
        result = accumulator(result, value)
    end
    return result
end

function Collections:skip(n)
    local skippedElements = {}
    for i = n + 1, #self.elements do
        table.insert(skippedElements, self.elements[i])
    end
    self.elements = skippedElements
end

function Collections:limit(maxSize)
    local limitedElements = {}
    for i = 1, math.min(maxSize, #self.elements) do
        table.insert(limitedElements, self.elements[i])
    end
    self.elements = limitedElements
end

function Collections:sorted(comparator)
    local sortedElements = {}
    for _, value in ipairs(self.elements) do
        table.insert(sortedElements, value)
    end
    table.sort(sortedElements, comparator)
    self.elements = sortedElements
end


-- metatable for the collections
local metatable = function()
    return {
        __call = function(class, table)
            return setmetatable(class, { 
                __index = Collections:new(table) 
            })
        end  
    }
end


-- List class
local List = {}
setmetatable(List, metatable())


-- Set class
local Set = {}
setmetatable(Set, metatable())

-- Override specific Set methods if needed

function Set:add(element)
    if not self:contains(element) then
        table.insert(self.elements, element)
        return true
    end
    return false
end

function Set:remove(element)
    for i, value in ipairs(self.elements) do
        if value == element then
            table.remove(self.elements, i)
            return true
        end
    end
    return false
end

-- Map class
local Map = {}
setmetatable(Map, metatable())

-- Override specific Map methods if needed

function Map:put(key, value)
    self.elements[key] = value
end

function Map:get(key)
    return self.elements[key]
end

function Map:remove(key)
    local value = self.elements[key]
    self.elements[key] = nil
    return value
end

function Map:containsKey(key)
    return self.elements[key] ~= nil
end

function Map:containsValue(value)
    for _, v in pairs(self.elements) do
        if v == value then
            return true
        end
    end
    return false
end

function Map:keySet()
    local keys = {}
    for key, _ in pairs(self.elements) do
        table.insert(keys, key)
    end
    return keys
end

function Map:valueSet()
    local values = {}
    for _, value in pairs(self.elements) do
        table.insert(values, value)
    end
    return values
end

function Map:isEmpty()
    return next(self.elements) == nil
end

function Map:size()
    local count = 0
    for _ in pairs(self.elements) do
        count = count + 1
    end
    return count
end

function Map:clear()
    for key, _ in pairs(self.elements) do
        self.elements[key] = nil
    end
end

function Map:putAll(otherMap)
    for key, value in pairs(otherMap) do
        self.elements[key] = value
    end
end

function Map:entrySet()
    local entries = {}
    for key, value in pairs(self.elements) do
        table.insert(entries, { key = key, value = value })
    end
    return entries
end

function Map:print()
    for key, value in pairs(self.elements) do
        print(key, value)
    end
end

-- Queue class
local Queue = {}
setmetatable(Queue, metatable())

-- Override specific Queue methods if needed

function Queue:add(element)
    table.insert(self.elements, element)
    return true
end

function Queue:remove()
    if self:isEmpty() then
        error(""Queue is empty"")
    end
    return table.remove(self.elements, 1)
end

function Queue:element()
    if self:isEmpty() then
        error(""Queue is empty"")
    end
    return self.elements[1]
end

-- convert tables to Collections


return {
    List = List,
    Set = Set,
    Map = Map,
    Queue = Queue
}
"
xWmje9CJ,PurifyingWaterBlock,CreativeMasterBonin,JavaScript,Tuesday 18th of July 2023 06:01:27 PM CDT,"package net.rk.thingamajigs.fluid.fluidblocks;

import net.minecraft.core.BlockPos;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.LiquidBlock;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.material.MapColor;
import net.rk.thingamajigs.fluid.ThingamajigsFluids;

public class PurifyingWaterBlock extends LiquidBlock {
    public PurifyingWaterBlock() {
        super(ThingamajigsFluids.PURIFYING_WATER, BlockBehaviour.Properties.of()
                .liquid()
                .mapColor(MapColor.COLOR_CYAN)
                .strength(100f)
                .replaceable()
                .noCollission()
                .noLootTable()
                .sound(SoundType.EMPTY));
    }

    @Override
    public void entityInside(BlockState state, Level lvl, BlockPos bp, Entity ent1) {
        if(ent1 instanceof LivingEntity){
            ((LivingEntity) ent1).addEffect(new MobEffectInstance(
                    MobEffects.REGENERATION,
                    10,
                    4,
                    true,
                    false,
                    false));
            ((LivingEntity) ent1).addEffect(new MobEffectInstance(
                    MobEffects.SATURATION,
                    10,
                    1,
                    true,
                    false,
                    false));
        }
        super.entityInside(state,lvl,bp,ent1);
    }
}
"
