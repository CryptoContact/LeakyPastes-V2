id,title,username,language,date,content
0yv6NJFx,Nginx configuration,ZaMaZaN4iK,C++,Wednesday 20th of September 2023 05:55:43 PM CDT,"
#user  nobody;
worker_processes  1;
daemon off;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       8080;
        server_name  localhost;

	location / {
            proxy_pass http://127.0.0.1:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
    }
}"
mpUi2BUN,Untitled,skimono,C++,Wednesday 20th of September 2023 05:24:18 PM CDT,"#pragma GCC optimize(""Ofast"") // ������������ ���������, �� ��� ������
#pragma GCC optimize(""no-stack-protector"") //�����
#pragma GCC optimize(""unroll-loops"") // � ���� ���� ��� �� 100 �� ������ ����� � ��������� �� ��� � 100 ��� �� ������ ��������
#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"") // ��� ����� ����� �� ��� 03 02 ��������� � ������ ������� �������� ��� ���� ������������
#pragma GCC optimize(""fast-math"")
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef short sh;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
//#define int long long
#define degug(x) cerr (#x) << "" "" << (x) << endl;

const ll INF = 2e18;
const ll inf = 2e9 + 3;
const ll ONE = 1, ZERO = 0;
const ll mod = 998244353;
const ll m1 = 1e9 + 575179;
const ll m2 = 1e9 + 87;
const ll LG = 19;
const ll k_mo = 400;
const ll k_sqrt = 400;
const ll p = 79;
ld EPS = 1e-9;
ld PI = 3.1415926535897932384;
ld phi = (sqrt(5) + 1.0) / 2.0;
mt19937_64 rnd(4906);

const int N = 1e5 + 3;
pair <ll, ll> pw[N];
pair <ll, ll> h[N];

pair <int, int> get_h(int l, int r) {
    return { (h[r + 1].first - (h[l].first * pw[r - l + 1].first) % m1 + m1) % m1, (h[r + 1].second - (h[l].second * pw[r - l + 1].second) % m2 + m2) % m2 };
}

void solve() {
    string t, s;
    cin >> t;
    ll ans;
    ll i, j, len_t = t.size(), l, r;
    vector <vector <int> > cort(N, vector <int>(0));
    vector <vector <pair <int, int> > > keys(N, vector <pair <int, int> >(0));
    vector <ll> rzl;
    rzl.reserve(sqrt(N));
    ll n, len_s, len, m;
    pair <ll, ll> hesh;
    pw[0] = { 1, 1 };
    h[0] = { 0, 0 };
    for (i = 1; i <= len_t; i++) {
        pw[i].first = (pw[i - 1].first * p) % m1;
        pw[i].second = (pw[i - 1].second * p) % m2;
        h[i].first = (h[i - 1].first * p + (t[i - 1] - 'a' + ONE)) % m1;
        h[i].second = (h[i - 1].second * p + (t[i - 1] - 'a' + ONE)) % m2;
    }
    cin >> n;
    for (i = 0; i < n; i++) {
        cin >> s;
        len_s = s.size();
        rzl.push_back(len_s);
        hesh = { 0, 0 };
        for (j = 0; j < len_s; j++) {
            hesh.first = (hesh.first * p + (s[j] - 'a' + ONE)) % m1;
            hesh.second = (hesh.second * p + (s[j] - 'a' + ONE)) % m2;
        }
        keys[len_s].push_back(hesh);
    }
    sort(all(rzl));
    rzl.resize(unique(all(rzl)) - rzl.begin());
    m = rzl.size();
    for (i = 0; i < m; i++) {
        sort(all(keys[rzl[i]]));
        cort[rzl[i]].assign(len_t + 1, 0);
    }
    for (i = 0; i < len_t; i++) {
        for (j = 0; j < m; j++) {
            len = rzl[j];
            if (i + len - 1 < len_t) {
                if (binary_search(all(keys[len]), get_h(i, i + len - 1))) {
                    cort[len][i + len]++;
                }
            }
            else {
                break;
            }
        }
    }
    for (i = 0; i < m; i++) {
        for (j = 1; j <= len_t; j++) {
            cort[rzl[i]][j] += cort[rzl[i]][j - 1];
        }
    }
    cin >> n;
    while (n--) {
        ans = 0;
        cin >> l >> r;
        for (i = 0; i < m; i++) {
            len = rzl[i];
            if (len > (r - l + 1)) break;
            ans += (cort[len][r] - cort[len][l + len - 2]);
        }
        cout << ans << "" "";
    }
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
//Клуб ""Кольца(Серьги)"""
QTWk9WDp,Nginx optimized,ZaMaZaN4iK,C++,Wednesday 20th of September 2023 04:42:46 PM CDT,"[23:34:37.983248][2256278][I] Detected 1 (v)CPUs with affinity..
[23:34:37.983295][2256278][I] Starting 1 threads / event loops. Time limit: 300 seconds.
[23:34:37.983300][2256278][I] Global targets: 4 connections and 15000 calls per second.
[23:39:38.535839][2256284][I] Stopping after 300000 ms. Initiated: 2812445 / Completed: 2812442. (Completion rate was 9374.806541669246 per second.)
Nighthawk - A layer 7 protocol benchmarking tool.

benchmark_http_client.latency_2xx (2812442 samples)
  min: 0s 000ms 175us | mean: 0s 000ms 417us | max: 0s 013ms 054us | pstdev: 0s 000ms 074us

  Percentile  Count       Value
  0.5         1407329     0s 000ms 415us
  0.75        2109396     0s 000ms 424us
  0.8         2250576     0s 000ms 426us
  0.9         2531212     0s 000ms 440us
  0.95        2671848     0s 000ms 465us
  0.990625    2786084     0s 000ms 500us
  0.99902344  2809696     0s 000ms 570us

Queueing and connection setup latency (2812445 samples)
  min: 0s 000ms 001us | mean: 0s 000ms 004us | max: 0s 000ms 364us | pstdev: 0s 000ms 002us

  Percentile  Count       Value
  0.5         1425316     0s 000ms 003us
  0.75        2127995     0s 000ms 003us
  0.8         2253917     0s 000ms 003us
  0.9         2531460     0s 000ms 004us
  0.95        2671958     0s 000ms 004us
  0.990625    2786199     0s 000ms 007us
  0.99902344  2809699     0s 000ms 071us

Request start to response end (2812442 samples)
  min: 0s 000ms 174us | mean: 0s 000ms 417us | max: 0s 013ms 053us | pstdev: 0s 000ms 074us

  Percentile  Count       Value
  0.5         1407454     0s 000ms 414us
  0.75        2109565     0s 000ms 423us
  0.8         2250683     0s 000ms 426us
  0.9         2531308     0s 000ms 440us
  0.95        2671879     0s 000ms 465us
  0.990625    2786103     0s 000ms 500us
  0.99902344  2809697     0s 000ms 569us

Response body size in bytes (2812442 samples)
  min: 8474 | mean: 8474 | max: 8474 | pstdev: 0

Response header size in bytes (2812442 samples)
  min: 194 | mean: 198.99500078579342 | max: 199 | pstdev: 0.15802239995459413

Blocking. Results are skewed when significant numbers are reported here. (2811660 samples)
  min: 0s 000ms 029us | mean: 0s 000ms 106us | max: 0s 012ms 717us | pstdev: 0s 000ms 048us

  Percentile  Count       Value
  0.5         1406293     0s 000ms 105us
  0.75        2109093     0s 000ms 108us
  0.8         2249401     0s 000ms 109us
  0.9         2530612     0s 000ms 116us
  0.95        2671078     0s 000ms 194us
  0.990625    2785314     0s 000ms 226us
  0.99902344  2808915     0s 000ms 274us

Initiation to completion (2812442 samples)
  min: 0s 000ms 180us | mean: 0s 000ms 422us | max: 0s 013ms 060us | pstdev: 0s 000ms 074us

  Percentile  Count       Value
  0.5         1406674     0s 000ms 420us
  0.75        2109462     0s 000ms 429us
  0.8         2250466     0s 000ms 431us
  0.9         2531253     0s 000ms 445us
  0.95        2671877     0s 000ms 471us
  0.990625    2786088     0s 000ms 507us
  0.99902344  2809696     0s 000ms 576us

Counter                                 Value       Per second
benchmark.http_2xx                      2812442     9374.81
cluster_manager.cluster_added           1           0.00
default.total_match_count               1           0.00
membership_change                       1           0.00
runtime.load_success                    1           0.00
runtime.override_dir_not_exists         1           0.00
upstream_cx_close_notify                2812        9.37
upstream_cx_destroy                     2812        9.37
upstream_cx_destroy_local               2812        9.37
upstream_cx_http1_total                 2816        9.39
upstream_cx_rx_bytes_total              24507605528 81692017.31
upstream_cx_total                       2816        9.39
upstream_cx_tx_bytes_total              112497800   374992.66
upstream_rq_pending_total               2813        9.38
upstream_rq_total                       2812445     9374.82

[23:39:43.647345][2256284][I] Wait for the connection pool drain timed out, proceeding to hard shutdown.
[23:39:43.650940][2256278][I] Done."
SfpWPwVd,setcolor,sheredega,Lua,Wednesday 20th of September 2023 04:28:47 PM CDT,"local sa = require ""lib.samp.events""
local state = true

local friends = {}


function main()
    if not isSampfuncsLoaded() or not isSampLoaded() then return end
    while not isSampAvailable() do wait(100) end
	sampRegisterChatCommand(""setcolor"", setid)
	sampRegisterChatCommand(""set"", function()
	state = not state
	sampAddChatMessage(state and ""ON"" or ""off"", -1)
	end)
end

function setcolor(id)
    local bs = raknetNewBitStream()
    raknetBitStreamWriteInt16(bs, id) -- ID - РёРґ РёРіСЂРѕРєР°
    raknetBitStreamWriteInt32(bs, -16738047) -- color - С†РІРµС‚
    raknetEmulRpcReceiveBitStream(72,bs)
    raknetDeleteBitStream(bs)

	sampAddChatMessage(""Цвет игрока с ID ""..id.."" изменён!"", -1)
end

function setid(arg)
	if state then
		if #arg > 0 then -- Если указан аргумент у команды
			if arg:find(""[^%d]+"") then -- Если указаны не только цифры
				_, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
				if sampGetPlayerNickname(myid) == arg then
					sampAddChatMessage(""Ты указал свой Nick_Name!"", -1)
				else
					maxId = sampGetMaxPlayerId()
					for i = 0, maxId do
						if sampIsPlayerConnected(i) and sampGetPlayerNickname(i) == arg then
							friends[sampGetPlayerNickname(i)] = true
							setcolor(i)
							return true
						end
					end
					sampAddChatMessage(""Игрока с таким ником нет в игре!"", -1)
				end
			else
				id = tonumber(arg)
				_, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
				if myid == id then
					sampAddChatMessage(""Ты указал свой ID!"", -1)
				elseif sampIsPlayerConnected(id) then
					friends[sampGetPlayerNickname(id)] = true
					setcolor(id)
				else
					sampAddChatMessage(""Игрока с ID "" .. arg .. "" нет в игре"", -1)
				end
			end
		else
			sampAddChatMessage(""Не указан ник/id. Пример: /setcolor [id/Nick_Name]"", -1)
		end
	end
end

function sa.onSetPlayerColor(id, color)
	if friends[sampGetPlayerNickname(id)] then
		return false
	end
end
"
n3fsr1Ne,Untitled,kvadim,Bash,Wednesday 20th of September 2023 04:11:43 PM CDT,"server {
        listen 80;
        server_name example.com;
        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl;
        server_name ms.ssd.uz;

        ssl_certificate         /etc/ssl/private/example.com;
        ssl_certificate_key     /etc/ssl/private/example.com;

        location  ~ ^/streaming/(.*)$ {
        proxy_pass http://example.com/streaming/$1$is_args$args;
        include websocket_proxy_params;
        }

        location  ~ ^/camera-manage/(.*)$ {
        proxy_pass http://example.com/camera-manage/$1$is_args$args;
        include websocket_proxy_params;
        }

        location / {
        try_files /nonexistent @$http_upgrade;
        }

        location @websocket {
        proxy_pass https://ms.ssd.uz;
        include websocket_proxy_params;
        }

        location @ {
        proxy_pass https://example.com;
        include proxy_params;
        }
}


# websocket_proxy_params
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection ""Upgrade"";
proxy_set_header Host $host;
proxy_read_timeout 1d;"
9WNWQxBZ,سكربت الاصدار 1.8,HunnyYT,Lua,Wednesday 20th of September 2023 04:04:12 PM CDT,"local Table_QQ={
1289216415,
946465971
}
for k,v in pairs(Table_QQ) do    
local panduan = os.rename(""/storage/emulated/0/Android/data/com.tencent.mobileqq/Tencent/MobileQQ/""..v,""/storage/emulated/0/Android/data/com.tencent.mobileqq/Tencent/MobileQQ/""..v)
while not not panduan and panduan do
print(""𝐤𝐚𝐧𝐤"")
os.exit()
print(""𝐤𝐚𝐧𝐤\n𝐒𝐁"")
YT()
end
end

d = gg.TYPE_DWORD
dou = gg.TYPE_DOUBLE
f = gg.TYPE_FLOAT
w = gg.TYPE_WORD
b = gg.TYPE_BYTE
xor = gg.TYPE_XOR
q = gg.TYPE_QWORD
zv = gg.REGION_VIDEO
za = gg.REGION_ANONYMOUS
zca = gg.REGION_C_ALLOC
zcd = gg.REGION_C_DATA
zcap = gg.REGION_CODE_APP

function SearchWrite(Search, Write, Type, Name)
    gg.clearResults()
    gg.setVisible(false)
    gg.searchNumber(Search[1][1], Type)
    local count = gg.getResultCount()
    local result = gg.getResults(count)
    gg.clearResults()
    local data = {} --用于保存有效结果
    local base = Search[1][2] --(0 或主特征码后三位)(用于计算相对主特征码的偏移)
 
   if (count > 0) then
        for i, v in ipairs(result) do
            v.isUseful = true --保存搜索到的地址信息(全部设定为true)
        end
 
        for k=2, #Search do
            local tmp = {}
            local offset = Search[k][2] - base --特征码偏移(副特征码后三位 - 主特征码后三位)
            local num = Search[k][1] --特征码
 
            for i, v in ipairs(result) do
                tmp[#tmp+1] = {} --添加项目
                tmp[#tmp].address = v.address + offset  --项目地址为主特征码地址+偏移量
                tmp[#tmp].flags = v.flags  --项目数据类型
            end
 
            tmp = gg.getValues(tmp) --刷新项目值
 
            for i, v in ipairs(tmp) do
                if ( tostring(v.value) ~= tostring(num) ) then --判断项目值与其他特征码是否一致
                    result[i].isUseful = false --不符合过滤条件设定为false
                end
            end
        end
 
        for i, v in ipairs(result) do
            if (v.isUseful) then --筛选出符合条件的主特征码地址
                data[#data+1] = v.address
            end
        end
        --------------内存写入
        if (#data > 0) then
           gg.toast(""搜索到""..#data..""条数据"")
           local t = {}
           local base = Search[1][2]
           for i=1, #data do
               for k, w in ipairs(Write) do
                   offset = w[2] - base
                   t[#t+1] = {}
                   t[#t].address = data[i] + offset
                   t[#t].flags = Type
                   t[#t].value = w[1]
                   --- 冻结项目添加到列表
                   if (w[3] == true) then
                       local item = {}
                       item[#item+1] = t[#t]
                       item[#item].freeze = true
                       gg.addListItems(item)
                   end
                   --- 不需要可以注释掉
               end
           end
           gg.setValues(t)
          gg.toast(Name..""开启成功！已修改""..#t..""条数据"")
          gg.addListItems(t)
        else
            gg.toast(Name..""开启失败"", false)
            return false
        end
    else
        gg.toast(Name..""开启失败"")
        return false
    end
end
 
function WriteBaseAddress_DWORD(Lib, Offset, Edit)
    local Ranges = gg.getRangesList(Lib)
    if Ranges and #Ranges > 0 then
        local v = {}
        v[1] = {}
        v[1].address = Ranges[1].start + Offset
        v[1].value = Edit
        v[1].flags = 4
        v[1].freeze = true
        gg.setValues(v)
    end
end

if gg.PACKAGE == ""com.Moscow8A"" then
else
gg.setVisible(true)
print(""⚠️ Use gg @MR7RB_A8 ⚠️"")
print(""⚠️ استخدام كيم كاردن الخاص بالسكربت ⚠️"")
print(""JOIN TELEGRAM ▶️⟬@MR7RB_A8⟭"")
os.exit()
end

gg.alert("" ❤️‍🩹هلا بك ايها العضو المميز❤️‍🩹"")
 
gg.setVisible(false)
gg.alert(' ⚡مستر حرب MR.7RB⚡\
\
           ❦ ════ •⊰❂ - ❂⊱• ════ ❦\
\
           Dead By Daylight Mobile ⟬Asia⟭\
\
           Dead By Daylight Mobile ⟬NetEase⟭\
\
مستمر تحديثات للسكربت انضم الى القناة لكي يصلك التحديثات🔁️: /@/MR7RB_A8\
\
           ❦ ════ •⊰❂ - ❂⊱• ════ ❦')


function HOME()
MENU = gg.choice ({
""Telegram🔗️قناة تلكرام"",
""Youtube🔔️️قناة يوتيوب"",
""Pro Code🔑كود برو"",
""Start Script🎮ادخل للسكربت"",
""Exit🔻\nخروج"",
}, nil, ""سكربتات هاك ديد باي ديلايت نسخة الآسيا والتايلندية"")
if MENU == nil then else
if MENU==1 then MN1() end
if MENU==2 then MN2() end
if MENU==3 then MN3() end
if MENU==4 then MN4() end
if MENU==5 then EXIT() end
end
    PUBGMH = -1
end

function MN1()
gg.alert(""Subscribe to the telegram channel ▶⟬https://t.me/MR7RB_A8⟭"")
end

function MN2()
gg.alert(""Subscribe to the YouTube channel ▶⟬https://youtube.com/@MR7RB1?si=ZDzfe6wEBvLEOUte⟭"")
end

function MN3()
gg.alert(""An Ebro version will be made soon كود ابرو راح يتوفر قريبا!🔑"")
end

function MN4()
SRT = gg.choice ({
""Dead By Daylight👼⟬Asia V1.8⟭"",
""Dead By Daylight👼⟬NetEase V1.2⟭"",
""🔙BACK️️\nرجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
if SRT == nil then else
if SRT==1 then SRT1() end
if SRT==2 then SRT2() end
if SRT==3 then HOME() end
end
    PUBGMH = -1
end


function SRT1()
SN = gg.choice({
""⚡ᴀᴜᴛᴏ ᴡɪɴ⚡تلقائي خروج⚡"",
""🏃Speed Survivor/سبيد هاك"",
""🧟Speed Killer/سبيد هاك"",
""🧟 🔪Killer😈قاتل💪"",
""👼Survivor🌪️ناجي🔥"",
""wallhack Survivor👁️ولهاك👼+🧟🖇️‍⬜🧐️"",
""⚪Hack skill check⚡هاك ◻️فحص المهارة🕑"",
""🟩wallhack✅ولهاك🧐الالون👁️"",
""🆖Name change🔤تبديل الاسم"",
""📸FOV🧿/كاميرا ايباد📷"",
""🔙Back\n🔙رجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
if SN == nil then else
if SN==1 then RGDV1()
 end
if SN==2 then RGDV2()
 end
if SN==3 then RGDV3()
 end
if SN==4 then RGDV4()
 end
if SN==5 then RGDV5()
 end
if SN==6 then RGDV6()
 end
if SN==7 then RGDV7()
 end
if SN==8 then RGDV8()
 end
if SN==9 then RGDV9()
 end
if SN==10 then RGDV10()
 end
if SN==11 then MN4() end
end
  PUBGMH = -1
end

function RGDV1()
flashopp = gg.alert(""تريد تخرج من القيم️"",""موافق✅"", ""لا✖️"")
if flashopp == 1 then 
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""33,625,154"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 16,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
gg.setValues({
[1] = {
address = jz[i].address - 20,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
gg.setValues({
[1] = {
address = jz[i].address - 24,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
end
end
end

function RGDV2()
NC1 = gg.prompt({
  ""دخل رقم السرعه🏃‍""}, {[1]=progress_exaple}, {""number""})
   if not NC1 then return
end
gg.clearResults()
data={}
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('4,884,153,796,999,774,208',32)
tmp= gg.getResults(gg.getResultCount())
n = gg.getResultsCount()
result = {}
for i=1, n do
result[1] = tmp[i]
data[1]= {address = result[1].address-504, flags = 16,value=NC1[1]}
gg.setValues(data)
end
end

function RGDV3()
NC1 = gg.prompt({
   ""دخل رقم السرعه🧟‍""}, {[1]=progress_exaple}, {""number""})
   if not NC1 then return
end
gg.clearResults()
data={}
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('4,575,657,222,468,240,671',32)
tmp= gg.getResults(gg.getResultCount())
n = gg.getResultsCount()
result = {}
for i=1, n do
result[1] = tmp[i]
data[1]= {address = result[1].address+0x758, flags = 16,value=NC1[1]}
gg.setValues(data)
end
end


function RGDV4()
SN = gg.multiChoice({
""(v1)🛡ʜɪᴛ ᴄᴏᴏʟᴅᴏᴡɴ🦾 🛡️الضرب السريع🩸"",
""🔫Magic Head🧟‍♂️🔪ماجيك هيد✅🏃🏻‍♂️"",
""⭐ɪɴsᴛᴀɴᴛ ʙʀᴇᴀᴋ ᴘᴀʟʟᴇᴛ🔥تكسير الخشب وميزات اخرى"",
""🔙BACK️️رجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
   if SN == nil then else
if SN[1] == true then PQ1_125()
 end
if SN[2] == true then PQ2_125()
 end
if SN[3] == true then PQ3_125()
 end
if SN[4] == true then SRT1() end end PUBGMH = -1 end

function PQ1_125()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber(""-1186986008;-1191181336;-1119878176"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.refineNumber(""-1119878176"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""505942016"", gg.TYPE_DWORD)
gg.clearResults()
end

function PQ2_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""4,383,704,591"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 0xBC,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC0,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC4,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
gg.clearResults()
end
end

function PQ3_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('16,777,472D;0.5F~5.5;0.0F:9', gg.TYPE_FLOAT)
gg.refineNumber(""0.5~5"", gg.TYPE_FLOAT)
gg.refineNumber(""1"", gg.TYPE_FLOAT, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('1.7', gg.TYPE_FLOAT)
gg.searchNumber('1.7', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.7', gg.TYPE_FLOAT)
gg.searchNumber('2.7', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.5999999', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.23329997063', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,799"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""1.5"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
end
end
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,786"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""1.5"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
end
end
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,792"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""3.0"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x2c,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
gg.toast(""👾Interactive speed✅"")
end
end
end

function RGDV5()
SN = gg.multiChoice({
""✅Activate the distance✅ 👣🏃🏼‍♂المسافة"",
""🏃‍♂️windows speed🕺عبور من النوافذ بسرعه والخشب🦶"",
""🧛‍♂️Exit outside the map🤡خروج من الماب بعد دخول البوابه🚪"",
"" 🔙BACK️️رجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
   if SN == nil then else
if SN[1] == true then PP1_125()
 end
if SN[2] == true then PP2_125()
 end
if SN[3] == true then PP3_125()
 end
if SN[4] == true then SRT1() 
end 
end 
PUBGMH = -1 
end

function PP1_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""4,383,704,591"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 0xBC,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 20
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC0,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 20
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC4,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 20
}
})
gg.clearResults()
end
end

function PP2_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('16,777,472D;0.5F~5.5;0.0F::9', gg.TYPE_FLOAT)
gg.refineNumber(""0.5~5"", gg.TYPE_FLOAT)
gg.refineNumber(""1"", gg.TYPE_FLOAT, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
end

function PP3_125()
function main()
local Table = gg.choice({""✅تشغيل"",""❌ايقاف"",""خروج""})
 if Table ~= nil then
  if Table == 1 then
   D8(-700)
  end
  if Table == 2 then
   D8(70)
  end
  if Table == 3 then
   os.exit()
  end
 end
Visible = 0
end
function D8(values)
 local data = {}
 gg.clearResults()
 gg.setRanges(gg.REGION_ANONYMOUS)
 gg.searchNumber(""4554552039924826112"", gg.TYPE_QWORD)
 local result = gg.getResults(gg.getResultCount())
 gg.clearResults()
 for i, v in ipairs(result) do
  data[#data + 1] = {}
  data[#data].address = v.address + 0x30
  data[#data].flags = gg.TYPE_FLOAT
  data[#data].value = values
 end
 gg.setValues(data)
end

while true do
 if gg.isVisible(true) then
  Visible = 1
  gg.setVisible(false)
 end
 if Visible == 1 then
  main()
 end
end
end


function RGDV6()
SN = gg.multiChoice({
""️Survivor👼👁️⬜ الناجي🧐️ابيض✅"",
""Killer🧟‍👁️🟥 القاتل🧐احمر✅"",
""🧐Window👁️النوافذ🟨اصفر✅"",
""✅hook🧐الهوك⬜ابيض👁️🔬"",
""✅totem🧐التوتم👁️لون البنفسجي🟪"",
""🥸✅Generatorالمولد⚙️لون🟩اخضر"",
""wood👁️✅الخشب اصفر🟨"",
""📦Box🧐الصندوق⬜ابيض"",
""♨️trap hunting🧟‍👁️🟥 الافخاخ احمر✅"",
""🔙BACK️️رجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
   if SN == nil then else
if SN[1] == true then E1_125()
 end
if SN[2] == true then E2_125()
 end
if SN[3] == true then E3_125()
 end
if SN[4] == true then E4_125()
 end
if SN[5] == true then E5_125()
 end
if SN[6] == true then E6_125()
 end
if SN[7] == true then E7_125()
 end
if SN[8] == true then E8_125()
 end
if SN[9] == true then E9_125()
 end
if SN[10] == true then SRT1()
 end
 end
 PUBGMH = -1
 end

function E1_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E1_125()
	AM = gg.multiChoice({""Survivor👼👁️⬜ الناجي🧐️ابيض✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[3], ""0"", {0, 0, 255, 0.1})
			AuraTool(base[3], ""5"", {0, 0, 255, 0.1})
			AuraTool(base[3], ""9"", {0, 0, 255, 1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E2_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E2_125()
	AM = gg.multiChoice({""Killer🧟‍👁️🟥 القاتل🧐احمر✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
			if AM[1] then
			AuraTool(base[2], ""7"", {255, 0, 0, 1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E3_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E3_125()
	AM = gg.multiChoice({""🧐Window👁️النوافذ🟨✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""0"", {255, 255, 0, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E4_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E4_125()
	AM = gg.multiChoice({""✅hook🧐الهوك⬜ابيض👁️🔬"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""5"", {255, 255, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E5_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E5_125()
	AM = gg.multiChoice({""✅totem🧐التوتم👁️لون البنفسجي🟪"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""6"", {255, 0, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E6_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E6_125()
	AM = gg.multiChoice({""🥸✅Generatorالمولد⚙️لون اخضر🟩"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""10"", {0, 255, 0, 0.5})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E7_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E7_125()
	AM = gg.multiChoice({""🟨wood👁️✅الخشب لون اصفر🟨"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""7"", {255, 255, 0, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E8_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E8_125()
	AM = gg.multiChoice({""Box📦👁️الصندوق⬜لون ابيض✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[2], ""6"", {255, 255, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E9_125()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""72,340,169,600,008,192"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz[i].address + 92,flags = 4,freeze = true,value = 1067030938}})
gg.addListItems({[1] = {address = jz[i].address + 104,flags = 4,freeze = true,value = 1067030938}})
end
end

function RGDV7()
SN = gg.multiChoice({
""🌈Full Skillcheck⚡⬜"",
""️⚪Hack skill check⚡هاك ◻️فحص المهارة🕑(v2)"",
""🟨Yellow skill💊مهاره الصفراء🕗"",
""⚡Skill speed🏃‍♂️سرعة المهارة 🌈"",
"" 🔙BACK️️رجوع"",
}, nil, ""▶ Script : ⟬ 🔗 @MR7RB_A8 🔗 ⟭ ▶ صنع بواسطة مستر حرب MR.7RB "")
   if SN == nil then else
if SN[1] == true then M1_125()
 end
if SN[2] == true then M2_125()
 end
if SN[3] == true then M3_125()
 end
if SN[4] == true then M4_125()
 end
if SN[5] == true then SRT1() 
end 
end 
PUBGMH = -1 
end


function M1_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""1,124,532,224"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 0xA50,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 0
}
})
gg.toast(""🌈Full Skillcheck⚡⬜"")
end
end

function M2_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""70,838Q;70,844Q;70,850Q;70,859Q:73"", gg.TYPE_QWORD)
gg.refineNumber(""70,844"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 0x10,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0x8,
flags = gg.TYPE_FLOAT,
freeze = false,
value = -5
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0x20,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
gg.setValues({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
gg.clearResults()
end
end

function M3_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,225,377,833"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 88,
flags = gg.TYPE_FLOAT,
freeze = false,
value = -999
}
})
gg.toast(""🟨Yellow skill💊مهاره الصفراء🕗"")
end
end

function M4_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""4,575,657,222,459,684,291"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 152,
flags = gg.TYPE_FLOAT,
freeze = false,
value = -999
}
})
gg.toast(""👨‍🔧🌈Skill speed and treatment👨‍🔧✅️👼"")
end
end


function RGDV8()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""5,008,002,785,636,057,344"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz[i].address + 100,flags = 4,freeze = true,value = 1067030938}})
gg.addListItems({[1] = {address = jz[i].address + 92,flags = 4,freeze = true,value = 1067030938}})
end
end

function RGDV9()
NC1 = gg.prompt({
""ادخل اسمك   input your name in-game"",
""اسمك الجديد  New Name With Same Length or less""},
{[1] = "";"",[2] = "";""},
{""text"",""text""})
if not NC1 then return
end
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(NC1[1], gg.TYPE_WORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(1000)
gg.editAll(NC1[2], gg.TYPE_WORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.toast("" Name Changed "")
gg.clearResults()
gg.setVisible(false)
end

function RGDV10()
local c10zz = gg.prompt({
""👓📸FOV🧿[20;99]""}, {[1]=progress_exaple}, {""number""})
if c10zz == nil then
gg.clearResults()
print(""Cancled🚫"")
else
end
progress_exaple = tostring(c10zz[1])
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber(""6,442,516,488"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz1 = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz1[i].address - 220 ,flags = gg.TYPE_FLOAT,freeze = true,value = ""1.""..c10zz[1],gg.TYPE_FLOAT}})
gg.clearList()
gg.clearResults()
gg.sleep(100)
gg.clearResults()
end
gg.toast(""👓📸FOV🧿"")
end


function SRT2()
SN = gg.choice({
""⚡Auto Exit⚡ تلقائي خروج ⚡"",
""‍👼Speed ​​Hack Survivor هاك السرعة"",
""‍🧟‍♂️Speed ​​Hack Killer هاك السرعة"",
""🧟 🔪Killer😈قاتل💪 + Survivor👼"",
""🧐Wallhack🧐️ ويلهاك 🤓"",
""🤓Wallhack🟩️ ويلهاك لون الاخظر اخضر✅🟩"",
""⚙️Skill check🔧(All) فحص المهارة كامل 🔬️"",
""📸iPad📸 منظور ايباد"",
""🔙Back خروج"",
}, nil, ""🔸[مستر حرب]:- [Dead by Delight NetEase script]🔸\n🔻scriptv1.1 - ⏱️: Date/time:@MR7RB_A8 [2023]\n\n"")
if SN==nil then else
if SN==1 then A1() end
if SN==2 then A2() end
if SN==3 then A3() end
if SN==4 then A4() end
if SN==5 then A5() end
if SN==6 then A6() end
if SN==7 then A7() end
if SN==8 then A8() end
if SN==9 then MN4() end
end
    PUBGMH = -1
end

function A1()
flashopp = gg.alert(""تريد تخرج من القيم️"",""موافق✅"", ""لا✖️"")
if flashopp == 1 then 
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""33,625,154"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 24,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
gg.setValues({
[1] = {
address = jz[i].address - 16,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
gg.setValues({
[1] = {
address = jz[i].address - 20,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 5000
}
})
end
end
end

function A2()
NC1 = gg.prompt({
   ""‍👼Survivor👼[1;100]""}, {[1]=progress_exaple}, {""number""})
   if not NC1 then return
end
gg.clearResults()
data={}
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('4,934,256,342,874,980,352',32)
tmp= gg.getResults(gg.getResultCount())
n = gg.getResultsCount()
result = {}
for i=1, n do
result[1] = tmp[i]
data[1]= {address = result[1].address-508, flags = 16,value=NC1[1]}
gg.setValues(data)
end
end

function A3()
NC1 = gg.prompt({
   ""‍🧟‍♂️Killer🧟‍♂️[1;100]""}, {[1]=progress_exaple}, {""number""})
   if not NC1 then return
end
gg.clearResults()
data={}
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('4,575,657,222,468,240,671',32)
tmp= gg.getResults(gg.getResultCount())
n = gg.getResultsCount()
result = {}
for i=1, n do
result[1] = tmp[i]
data[1]= {address = result[1].address+0x758, flags = 16,value=NC1[1]}
gg.setValues(data)
end
end

function A4()
SN = gg.multiChoice({
""✅Activate the distance✅ 👣🏃🏼‍♂المسافة"",
""🏃‍♂️windows speed🕺عبور من النوافذ بسرعه والخشب🦶"",
""🧛‍♂️Exit outside the map🤡خروج من الماب بعد دخول البوابه🚪"",
""(v1)🛡ʜɪᴛ ᴄᴏᴏʟᴅᴏᴡɴ🦾 🛡️الضرب السريع🩸"",
""🔫Magic Head🧟‍♂️🔪ماجيك هيد✅🏃🏻‍♂️"",
""⭐ɪɴsᴛᴀɴᴛ ʙʀᴇᴀᴋ ᴘᴀʟʟᴇᴛ🔥تكسير الخشب"",
""🔙Back رجوع "",
}, nil, ""🔸[مستر حرب]:- [Dead by Delight NetEase script]🔸\n🔻scriptv1.1 - ⏱️: Date/time:@MR7RB_A8 [2023]\n\n"")
      if SN == nil then else
if SN[1] == true then B1_125() end
if SN[2] == true then B2_125() end
if SN[3] == true then B3_125() end
if SN[4] == true then B4_125() end
if SN[5] == true then B5_125() end
if SN[6] == true then B6_125() end
if SN[7] == true then SRT2() end end PUBGMH = -1 end

function B1_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""4,383,704,591"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 0xC0,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 30
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC4,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 30
}
})
gg.clearResults()
end
end

function B2_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('16,777,472D;0.5F~5.5;0.0F::9', gg.TYPE_FLOAT)
gg.refineNumber(""0.5~5"", gg.TYPE_FLOAT)
gg.refineNumber(""1"", gg.TYPE_FLOAT, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
end

function B3_125()
function main()
local Table = gg.choice({""✅تشغيل"",""❌ايقاف"",""خروج""})
 if Table ~= nil then
  if Table == 1 then
   D8(-700)
  end
  if Table == 2 then
   D8(70)
  end
  if Table == 3 then
   os.exit()
  end
 end
Visible = 0
end
function D8(values)
 local data = {}
 gg.clearResults()
 gg.setRanges(gg.REGION_ANONYMOUS)
 gg.searchNumber(""4554552039924826112"", gg.TYPE_QWORD)
 local result = gg.getResults(gg.getResultCount())
 gg.clearResults()
 for i, v in ipairs(result) do
  data[#data + 1] = {}
  data[#data].address = v.address + 0x30
  data[#data].flags = gg.TYPE_FLOAT
  data[#data].value = values
 end
 gg.setValues(data)
end

while true do
 if gg.isVisible(true) then
  Visible = 1
  gg.setVisible(false)
 end
 if Visible == 1 then
  main()
 end
end
end

function B4_125()
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber(""-1186986008;-1191181336;-1119878176"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.refineNumber(""-1119878176"", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
revert = gg.getResults(100, nil, nil, nil, nil, nil, nil, nil, nil)
gg.editAll(""505942016"", gg.TYPE_DWORD)
gg.clearResults()
end

function B5_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""4,383,704,591"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 0xBC,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC0,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0xC4,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 99999
}
})
gg.clearResults()
end
end

function B6_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('16,777,472D;0.5F~5.5;0.0F:9', gg.TYPE_FLOAT)
gg.refineNumber(""0.5~5"", gg.TYPE_FLOAT)
gg.refineNumber(""1"", gg.TYPE_FLOAT, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('1.7', gg.TYPE_FLOAT)
gg.searchNumber('1.7', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.7', gg.TYPE_FLOAT)
gg.searchNumber('2.7', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.5999999', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('2.23329997063', gg.TYPE_FLOAT)
gg.getResults(9000)
gg.editAll(""0.001"", gg.TYPE_FLOAT)
gg.clearResults()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,799"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""1.5"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
end
end
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,786"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""1.5"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
end
end
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,792"", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
if gg.getValues({
[1] = {
address = jz[i].address - 0x54,
flags = gg.TYPE_FLOAT
}
})[1].value == ""3.0"" then
gg.addListItems({
[1] = {
address = jz[i].address + 0x2c,
flags = gg.TYPE_FLOAT,
freeze = true,
value = 0.01
}
})
gg.clearResults()
gg.toast(""⭐ɪɴsᴛᴀɴᴛ ʙʀᴇᴀᴋ ᴘᴀʟʟᴇᴛ🔥تكسير الخشب"")
end
end
end

function A5()
SN = gg.multiChoice({
""👼Survivor🧐ناجي لون ابيض⬜"",
""🧟‍♂️Killer🧐قاتل لون احمر🟥"",
""🪟Window👁️نوافذ لون اصفر🟨"",
""🔬hook✅🔗الهوك لون ابيض⬜"",
""🎃totem🧐توتم لون بنفسجي🟪"",
""⚙️skill🤓المحرك لون اخضر🟩"",
""🪜wood✅🧐الخشب لون اصفر🟨"",
""📦Box🤓الصناديق لون ابيض⬜"",
""♨️trap hunting🧟‍👁️🟥 الافخاخ احمر✅"",
""🔙Back رجوع "",
}, nil, ""🔸[مستر حرب]:- [Dead by Delight NetEase script]🔸\n🔻scriptv1.1 - ⏱️: Date/time:@MR7RB_A8 [2023]\n\n"")
      if SN == nil then else
if SN[1] == true then E1_125() end
if SN[2] == true then E2_125() end
if SN[3] == true then E3_125() end
if SN[4] == true then E4_125() end
if SN[5] == true then E5_125() end
if SN[6] == true then E6_125() end
if SN[7] == true then E7_125() end
if SN[8] == true then E8_125() end
if SN[9] == true then E9_125() end
if SN[10] == true then SRT2() end end PUBGMH = -1 end

function E1_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E1_125()
	AM = gg.multiChoice({""Survivor👼👁️⬜ الناجي🧐️ابيض✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[3], ""0"", {0, 0, 255, 0.1})
			AuraTool(base[3], ""5"", {0, 0, 255, 0.1})
			AuraTool(base[3], ""9"", {0, 0, 255, 1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E2_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E2_125()
	AM = gg.multiChoice({""Killer🧟‍👁️🟥 القاتل🧐احمر✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
			if AM[1] then
			AuraTool(base[2], ""7"", {255, 0, 0, 1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E3_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E3_125()
	AM = gg.multiChoice({""🧐Window👁️النوافذ🟨✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""0"", {255, 255, 0, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E4_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E4_125()
	AM = gg.multiChoice({""✅hook🧐الهوك⬜ابيض👁️🔬"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""5"", {255, 255, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E5_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E5_125()
	AM = gg.multiChoice({""✅totem🧐التوتم👁️لون البنفسجي🟪"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""6"", {255, 0, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E6_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E6_125()
	AM = gg.multiChoice({""🥸✅Generatorالمولد⚙️لون اخضر🟩"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""10"", {0, 255, 0, 0.5})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E7_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E7_125()
	AM = gg.multiChoice({""🟨wood👁️✅الخشب لون اصفر🟨"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[1], ""7"", {255, 255, 0, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E8_125()
SN = gg.choice({""wallhack(v7)"", ""Delete text symbols🗑️""})
	if SN == 1 then
		Aura()
	end
	if SN == 2 then
		Thaw()
	end
	Visible = 0
end

function newAutotable(dim)
	local MT = {};
	for i=1, dim do
		MT[i] = {__index = function(t, k)
		if i < dim then
			t[k] = setmetatable({}, MT[i+1])
			return t[k];
		end
		end}
	end
	return setmetatable({}, MT[1]);
end

function AuraTool(tables, num, color)
	local aura = {}
	local offest = {0x44, 0x48, 0x4C, 0x50}
	local aura = newAutotable(3)
	for i, v in ipairs(tables) do
		for n = 1, #color do
			if ( tostring(v.value) == num ) then
				aura[n][#aura[n] + 1] = {}
				aura[n][#aura[n]].address = v.address + offest[n]
				aura[n][#aura[n]].flags = gg.TYPE_FLOAT
				aura[n][#aura[n]].value = color[n]
				aura[n][#aura[n]].freeze = true
			end
		end
	end
	for i = 1, #color do
		gg.addListItems(aura[i])
		gg.setValues(aura[i])
	end
end

function E8_125()
	AM = gg.multiChoice({""Box📦👁️الصندوق⬜لون ابيض✅"",})
	if AM ~= nil then
		local tmp = {}
		local data = {}
		local base = {}
		gg.clearResults()
		gg.setRanges(gg.REGION_ANONYMOUS)
		gg.searchNumber(""1166016512"", gg.TYPE_DWORD)
		result = gg.getResults(gg.getResultCount())
		for i, v in ipairs(result) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address + 0x3C
			tmp[#tmp].flags = v.flags
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if ( tostring(v.value) == ""1065353216"" ) then
				data[#data + 1] = {}
				data[#data].address = v.address - 0x40
				data[#data].flags = v.flags
			end
		end
		data = gg.getValues(data)
		local num = {65792, 65536, 0}
		local base = newAutotable(3)
		for i, v in ipairs(data) do
			for n = 1, #num do
				if ( tostring(v.value) == tostring(num[n]) ) then
					base[n][#base[n] + 1] = {}
					base[n][#base[n]].address = v.address + 0x14
					base[n][#base[n]].flags = v.flags
				end
			end
		end
		for i = 1, #num do
			base[i] = gg.getValues(base[i])
		end
		if AM[1] then
			AuraTool(base[2], ""6"", {255, 255, 255, 0.1})
		end
		gg.toast(""Aura has been triggered, please unfreeze it before the game ends⚠️⚠️"")
	end
end

function E9_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""72,340,169,600,008,192"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz[i].address + 92,flags = 4,freeze = true,value = 1067030938}})
gg.addListItems({[1] = {address = jz[i].address + 104,flags = 4,freeze = true,value = 1067030938}})
end
end

function A6()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""5,008,002,785,636,057,344"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz[i].address + 100,flags = 4,freeze = true,value = 1067030938}})
gg.addListItems({[1] = {address = jz[i].address + 92,flags = 4,freeze = true,value = 1067030938}})
end
end


function A7()
SN = gg.multiChoice({
""👷Full Skillcheck⚡⬜"",
""⚪Hack skill check⚡هاك ◻️فحص المهارة🕑"",
""👨‍🔧Yellow skill All✅🌈🟨"",
""👨‍‍⚡Skill speed and treatment🕒🧰🔬"",
""🔙Back رجوع "",
}, nil, ""🔸[مستر حرب]:- [Dead by Delight NetEase script]🔸\n🔻scriptv1.1 - ⏱️: Date/time:@MR7RB_A8 [2023]\n\n"")
if SN == nil then else
if SN[1] == true then L1_125() end
if SN[2] == true then L2_125() end
if SN[3] == true then L3_125() end
if SN[4] == true then L4_125() end
if SN[5] == true then SRT2() end end PUBGMH = -1 end

function L1_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""1,124,532,224"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 0xA50,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 0
}
})
gg.toast(""🌈Full Skillcheck⚡⬜"")
end
end

function L2_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""71,694Q;71,700Q;71,706Q;71,715Q:73"", gg.TYPE_QWORD)
gg.refineNumber(""71,706"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address - 0x10,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0x8,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 0.5
}
})
 gg.setValues({
[1] = {
address = jz[i].address + 0x20,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
gg.setValues({
[1] = {
address = jz[i].address + 0x38,
flags = gg.TYPE_FLOAT,
freeze = false,
value = 9
}
})
gg.clearResults()
end
end

function L3_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""3,225,377,833"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 56,
flags = gg.TYPE_FLOAT,
freeze = false,
value = -9999
}
})
gg.toast(""👨‍🔧Yellow skill All✅🌈🟨"")
end
end

function L4_125()
gg.clearResults()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(""97,748,481"", gg.TYPE_QWORD)
gg.getResults(9999)
n = gg.getResultsCount()
jz = gg.getResults(n)
for i = 1, n do
gg.setValues({
[1] = {
address = jz[i].address + 400,
flags = gg.TYPE_FLOAT,
freeze = false,
value = -9999
}
})
gg.toast(""👨‍🔧🌈Skill speed and treatment👨‍🔧✅️👼"")
end
end

function A8()
local c10zz = gg.prompt({""👓📸FOV🧿[20; 99]""}, {[1]=progress_exaple}, {""number""})
if c10zz == nil then
gg.clearList() noselect()
else
end
if c10zz[1] == nil then
c10zz[1] = ""46""
else
end
progress_exaple = tostring(c10zz[1])
gg.setRanges(gg.REGION_C_DATA)
gg.searchNumber(""33,554,432"", gg.TYPE_QWORD)
n = gg.getResultCount()
jz1 = gg.getResults(n)
for i = 1, n do
gg.addListItems({[1] = {address = jz1[i].address - 216 ,flags = gg.TYPE_FLOAT,freeze = true,value = ""1.""..c10zz[1],gg.TYPE_FLOAT}})
gg.clearList()
gg.clearResults()
gg.sleep(100)
gg.clearResults()
end
gg.toast(""👓📸FOV🧿"")
end

function EXIT()
print(""ᴛᴇʟᴇɢʀᴀᴍ ᴍᴇ :🫣▶️⟬@MR7RB_A8⟭"")
print(""⟬شكرأ لاستخدام ااسكربت💗⟭"")
print(""تم صنع السكربت بواسطه ⟬@me_MoscowA7⟭"")
print(""⚡اذا وجدت خطأ فرجو يتواصل📞"")
print(""📞قد يكون في تحديث فتواصل معي⚡"")
print(""Goodbye مع السلامة ❤️🤓"")
gg.setVisible(true)
gg.skipRestoreState()
gg.setVisible(true)
gg.skipRestoreState()
gg.setVisible(true)
os.exit()
end
while true do
if gg.isVisible(true) then
PUBGMH = 1
gg.setVisible(false)
end
gg.clearResults()
if PUBGMH == 1 then
HOME()
end
end"
xH4LjW5C,Untitled,Madi_Perth,Linden Scripting,Wednesday 20th of September 2023 03:42:34 PM CDT,"//start_unprocessed_text
/*#include ""getTime.lsl""
#include ""color.lsl""

integer i;
list touched;

set_text(vector color, string loop)
{
            llSetText(getInlineTime((integer) llGetTime()) + ""\n"" 
                + (string) i +"" : ""
                + (string) llGetListLength(touched) +"" : "" 
                + (string) llGetFreeMemory()  +""\n"" 
                + llList2String(touched, -1) + ""\n""
                + loop,
                    color, 1);
}

default
{
    state_entry()
    {


        llResetTime();
        integer x;
        integer end = 10;
        while(++i)
        {
            end = (integer) llFrand(5);
            for(x=0;x<end;++x)
            {
                set_text(GREEN, ""f"");
                touched += llGenerateKey();  
            }
 
            if(llGetListLength(touched) > 500)
            {
                set_text(GREEN, ""w"");
                touched = llDeleteSubList(touched, 0,
                            (llGetListLength(touched) - (500 + 1)));
            } 

        }
    }
}
*/
//end_unprocessed_text
//nfo_preprocessor_version 0
//program_version Firestorm-Releasex64 6.6.14.69596 - Madi Melodious
//last_compiled 09/20/2023 12:58:39
//mono





   

//#line 4 ""C:\\Program Files\\Firestorm-Releasex64\\New Script""
integer i;
list touched;


string getInlineTime(integer secs)
{
    string timeStr;
    integer days;
    integer hours;
    integer minutes;
 
    if (secs>=86400)
    {
        days=llFloor(secs/86400);
        secs=secs%86400;
        timeStr+=(string)days+"" day"";
        if (days>1) 
        {
            timeStr+=""s"";
        }
        if(secs>0) 
        {
            timeStr+="" "";
        }
    }
    if(secs>=3600)
    {
        hours=llFloor(secs/3600);
        secs=secs%3600;
        timeStr+=(string)hours+"" hour"";
        if(hours!=1)
        {
            timeStr+=""s"";
        }
        if(secs>0)
        {
            timeStr+="" "";
        }
    }
    if(secs>=60)
    {
        minutes=llFloor(secs/60);
        secs=secs%60;
        timeStr+=(string)minutes+"" minute"";
        if(minutes!=1)
        {
            timeStr+=""s"";
        }
        if(secs>0)
        {
            timeStr+="" "";
        }
    }
    if (secs>0)
    {
        timeStr+=(string)secs+"" second"";
        if(secs!=1)
        {
            timeStr+=""s"";
        }
    }
    return timeStr;
}

set_text(vector color, string loop)
{
            llSetText(getInlineTime((integer) llGetTime()) + ""\n"" 
                + (string) i +"" : ""
                + (string) llGetListLength(touched) +"" : "" 
                + (string) llGetFreeMemory()  +""\n"" 
                + llList2String(touched, -1) + ""\n""
                + loop,
                    color, 1);
}

default
{
    state_entry()
    {


        llResetTime();
        integer x;
        integer end = 10;
        while(++i)
        {
            end = (integer) llFrand(5);
            for(x=0;x<end;++x)
            {
                set_text(<0.180, 0.800, 0.251>, ""f"");
                touched += llGenerateKey();  
            }
 
            if(llGetListLength(touched) > 500)
            {
                set_text(<0.180, 0.800, 0.251>, ""w"");
                touched = llDeleteSubList(touched, 0,
                            (llGetListLength(touched) - (500 + 1)));
            } 

        }
    }
}

"
fBwx3wrX,Movie Profit,Spocoman,C++,Wednesday 20th of September 2023 03:26:11 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string movie;
    getline(cin, movie);

    int days, tickets;
    cin >> days >> tickets;

    double ticketPrice;
    cin >> ticketPrice;

    int percent;
    cin >> percent;

    double price = (days * tickets * ticketPrice) * (100 - percent) / 100;

    printf(""The profit from the movie %s is %.2f lv."", movie.c_str(), price);

    return 0;
}"
1pA7yZAt,Untitled,Madi_Perth,Linden Scripting,Wednesday 20th of September 2023 03:21:23 PM CDT,"//start_unprocessed_text
/*#include ""getTime.lsl""
#include ""color.lsl""

integer i;
list touched;

set_text(vector color, string loop)
{
            llSetText(getInlineTime((integer) llGetTime()) + ""\n"" 
                + (string) i +"" : ""
                + (string) llGetListLength(touched) +"" : "" 
                + (string) llGetFreeMemory()  +""\n"" 
                + llList2String(touched, -1) + ""\n""
                + loop,
                    color, 1);
}

default
{
    state_entry()
    {


        llResetTime();
        integer x;
        integer end = 10;
        while(++i)
        {
            end = (integer) llFrand(5);
            for(x=0;x<end;++x)
            {
                set_text(RED, ""f"");
                touched += llGenerateKey();  
            }
 
            if(llGetListLength(touched) > 500)
            {
                /|/ set_text(RED, ""w"");
                touched = llDeleteSubList(touched, 0,
                            (llGetListLength(touched) - (500 + 1)));
            } 

        }
    }
}
*/
//end_unprocessed_text
//nfo_preprocessor_version 0
//program_version Firestorm-Releasex64 6.6.14.69596 - Madi Melodious
//last_compiled 09/20/2023 12:32:49
//mono





   

//#line 4 ""C:\\Program Files\\Firestorm-Releasex64\\New Script""
integer i;
list touched;


string getInlineTime(integer secs)
{
    string timeStr;
    integer days;
    integer hours;
    integer minutes;
 
    if (secs>=86400)
    {
        days=llFloor(secs/86400);
        secs=secs%86400;
        timeStr+=(string)days+"" day"";
        if (days>1) 
        {
            timeStr+=""s"";
        }
        if(secs>0) 
        {
            timeStr+="" "";
        }
    }
    if(secs>=3600)
    {
        hours=llFloor(secs/3600);
        secs=secs%3600;
        timeStr+=(string)hours+"" hour"";
        if(hours!=1)
        {
            timeStr+=""s"";
        }
        if(secs>0)
        {
            timeStr+="" "";
        }
    }
    if(secs>=60)
    {
        minutes=llFloor(secs/60);
        secs=secs%60;
        timeStr+=(string)minutes+"" minute"";
        if(minutes!=1)
        {
            timeStr+=""s"";
        }
        if(secs>0)
        {
            timeStr+="" "";
        }
    }
    if (secs>0)
    {
        timeStr+=(string)secs+"" second"";
        if(secs!=1)
        {
            timeStr+=""s"";
        }
    }
    return timeStr;
}

set_text(vector color, string loop)
{
            llSetText(getInlineTime((integer) llGetTime()) + ""\n"" 
                + (string) i +"" : ""
                + (string) llGetListLength(touched) +"" : "" 
                + (string) llGetFreeMemory()  +""\n"" 
                + llList2String(touched, -1) + ""\n""
                + loop,
                    color, 1);
}

default
{
    state_entry()
    {


        llResetTime();
        integer x;
        integer end = 10;
        while(++i)
        {
            end = (integer) llFrand(5);
            for(x=0;x<end;++x)
            {
                set_text(<1.000, 0.255, 0.212>, ""f"");
                touched += llGenerateKey();  
            }
 
            if(llGetListLength(touched) > 500)
            {
                
                touched = llDeleteSubList(touched, 0,
                            (llGetListLength(touched) - (500 + 1)));
            } 

        }
    }
}

"
kPd092y0,deadite-signblink.ino,Hadlock,C++,Wednesday 20th of September 2023 03:20:41 PM CDT,"#include <ezOutput.h> // ezOutput library

int pinOut0 = 0;
ezOutput output1(1);  // create ezOutput object that attach to pin 1;
ezOutput output2(2);  // create ezOutput object that attach to pin 2;
ezOutput output3(3);  // create ezOutput object that attach to pin 3;
ezOutput output4(4);  // create ezOutput object that attach to pin 4;
ezOutput output5(5);  // create ezOutput object that attach to pin 5;
ezOutput output6(6);  // create ezOutput object that attach to pin 6;
ezOutput output7(7);  // create ezOutput object that attach to pin 7;
ezOutput output8(8);  // create ezOutput object that attach to pin 8;
ezOutput output9(9);  // create ezOutput object that attach to pin 9;
ezOutput output10(10);  // create ezOutput object that attach to pin 10;
ezOutput output11(11);  // create ezOutput object that attach to pin 11;
ezOutput output12(12);  // create ezOutput object that attach to pin 12;
ezOutput output13(13);  // create ezOutput object that attach to pin 13;

void setup() {
  output1.blink(1000, 1000); // 1 seconds ON, 1 seconds OFF
  output2.blink(2000, 2000); // 2 seconds ON, 2 seconds OFF
  output3.blink(3000, 3000); // 3 seconds ON, 3 seconds OFF
  output4.blink(4000, 4000); // etc
  output5.blink(5000, 5000);
  output6.blink(6000, 6000);
  output7.blink(7000, 7000);
  output8.blink(8000, 8000);
  output9.blink(9000, 9000);
  output10.blink(10000, 10000); // 10 seconds ON, 10 seconds OFF
  // fractional seconds blink
  output11.blink(250, 250); // 1/4 seconds ON, 1/4 seconds OFF
  output12.blink(500, 500); // 1/2 seconds ON, 1/2 seconds OFF
  output13.blink(7500, 750); // 3/4 seconds ON, 3/4 seconds OFF
}

void loop() {
  digitalWrite(pinOut0, HIGH); // pin 0 always ON
  output1.loop(); // blink 1 second
  output2.loop(); // blink 2 second
  output3.loop(); // blink 3 second
  output4.loop(); // etc
  output5.loop();
  output6.loop();
  output7.loop();
  output8.loop();
  output9.loop();
  output10.loop(); // blink 10 second
  // fractional seconds blink
  output11.loop(); // blink 1/4 second
  output12.loop(); // blink 1/2 second
  output13.loop(); // blink 3/4 second
}"
HDNQq23n,Untitled,mendesgeo,Python,Wednesday 20th of September 2023 03:16:32 PM CDT,"python3 demo.py  \
    --config-file detectron2/configs/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x.yaml \
    --input input.jpg --output demo_output.jpg \
    --opts MODEL.WEIGHTS detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl"
7AU32dtU,Untitled,ryzhvrn,C#,Wednesday 20th of September 2023 03:12:55 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Spawner2 : MonoBehaviour
{
    public static event Action CapySpawned;

    [SerializeField] private GameObject _capyChildPrefab;

    private void OnEnable()
    {
        PlayerDetector2.PlayerDetected += SpawnCapy;
    }

    private void OnDisable()
    {
        PlayerDetector2.PlayerDetected -= SpawnCapy;
    }

    private void SpawnCapy()
    {
        GameObject spawnedCapy = Instantiate(_capyChildPrefab, transform.position, transform.rotation);
        CapySpawned?.Invoke();
    }
}
"
UXfxtY57,Untitled,ryzhvrn,C#,Wednesday 20th of September 2023 03:12:04 PM CDT,//C# заебись
6Q0Qpha7,ngrok start + docker compose up,SeloTapeTM,Bash,Wednesday 20th of September 2023 03:06:53 PM CDT,"#!/bin/bash

echo ""Starting ngrok and writing link to .secret file""
ngstart
echo
echo ""Docker compose up...""
docker compose up"
tDt9uQ9G,ngrokkill,SeloTapeTM,Bash,Wednesday 20th of September 2023 03:06:14 PM CDT,"#!/bin/sh
 
echo ""Stopping background ngrok process""
kill -9 $(ps -ef | grep 'ngrok' | grep -v 'grep' | awk '{print $2}')
echo ""ngrok stopped"""
1Lnaw7E3,Movie Destination,Spocoman,C++,Wednesday 20th of September 2023 02:55:21 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double budget;
    cin >> budget;

    string destination, season;
    cin >> destination >> season;

    int days;
    cin >> days;

    double daySum = 0;

    if (destination == ""Dubai"") {
        if (season == ""Winter"") {
            daySum = 45000;
        }
        else {
            daySum = 40000;
        }
        daySum *= 0.70;
    }

    else  if (destination == ""Sofia"") {
        if (season == ""Winter"") {
            daySum = 17000;
        }
        else {
            daySum = 12500;
        }
        daySum *= 1.25;
    }
    else {
        if (season == ""Winter"") {
            daySum = 24000;
        }
        else {
            daySum = 20250;
        }
    }

    double totalSum = daySum * days;

    if (totalSum <= budget) {
        printf(""The budget for the movie is enough! We have %.2f leva left!\n"", budget - totalSum);
    }
    else {
        printf(""The director needs %.2f leva more!\n"", totalSum - budget);
    }
    return 0;
}


Решение с тернарен оператор:

#include <iostream>
#include <string>

using namespace std;

int main() {
    double budget;
    cin >> budget;

    string destination, season;
    cin >> destination >> season;

    int days;
    cin >> days;

    budget -=
        (destination == ""Dubai"" ? (season == ""Winter"" ? 45000 : 40000) * 0.70 :
        destination == ""Sofia"" ? (season == ""Winter"" ? 17000 : 12500) * 1.25 :
        (season == ""Winter"" ? 24000 : 20250)) * days;
        
    budget >= 0 ?
        printf(""The budget for the movie is enough! We have %.2f leva left!\n"", budget) :
        printf(""The director needs %.2f leva more!\n"", abs(budget));
   
    return 0;
}"
wHZTWWSn,AnimatableModel.java,TurtyWurty,Java,Wednesday 20th of September 2023 02:31:21 PM CDT,"package dev.turtywurty.turtyissinking.client.animation;

import net.minecraft.client.animation.AnimationChannel;
import net.minecraft.client.animation.AnimationDefinition;
import net.minecraft.client.animation.Keyframe;
import net.minecraft.client.model.HierarchicalModel;
import net.minecraft.client.model.Model;
import net.minecraft.client.model.geom.ModelPart;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.util.Mth;
import org.joml.Vector3f;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.function.Function;

/**
 * A model that can be animated (usable with anything, not just limited to entities like {@link HierarchicalModel})
 */
public abstract class AnimatableModel extends Model {
    private final ModelPart root;

    /**
     * Creates a new animatable model
     *
     * @param pRenderType The render type of the model
     * @param root        The root part of the model
     */
    public AnimatableModel(Function<ResourceLocation, RenderType> pRenderType, ModelPart root) {
        super(pRenderType);
        this.root = root;
    }

    /**
     * Gets the root part of the model
     *
     * @return The root part
     */
    public ModelPart getRoot() {
        return this.root;
    }

    /**
     * Gets a descendant part of the model with the given name
     *
     * @param name The name of the descendant
     * @return The descendant part
     */
    public Optional<ModelPart> getAnyDescendantWithName(String name) {
        return name.equals(""root"") ? Optional.of(getRoot()) : getRoot()
                .getAllParts()
                .filter(part -> part.hasChild(name))
                .findFirst()
                .map(part -> part.getChild(name));
    }

    /**
     * Animates the model with the given animation definition (sequence of keyframes)
     *
     * @param pModel               The model to animate
     * @param pAnimationDefinition The animation definition
     * @param pAccumulatedTime     The accumulated time in milliseconds
     * @param pScale               The scale of the animation
     * @param pAnimationVecCache   The animation vector cache
     */
    public static void animate(AnimatableModel pModel, AnimationDefinition pAnimationDefinition, long pAccumulatedTime, float pScale, Vector3f pAnimationVecCache) {
        float elapsedSeconds = getElapsedSeconds(pAnimationDefinition, pAccumulatedTime);

        for(Map.Entry<String, List<AnimationChannel>> entry : pAnimationDefinition.boneAnimations().entrySet()) {
            // Find a part with the name of the entry
            Optional<ModelPart> optPart = pModel.getAnyDescendantWithName(entry.getKey());
            if(optPart.isEmpty())
                continue;

            ModelPart part = optPart.get();
            List<AnimationChannel> animations = entry.getValue();
            for (AnimationChannel animation : animations) {
                if (animation == null)
                    continue;

                // Get the keyframes of the animation
                Keyframe[] keyframes = animation.keyframes();

                // Find the current and next keyframes by comparing if the elapsed time is less than the timestamp
                int foundIndex = Mth.binarySearch(
                        0,
                        keyframes.length,
                        threshold -> elapsedSeconds <= keyframes[threshold].timestamp());
                int currentFrameIdx = Math.max(0, foundIndex - 1);
                int nextFrameIdx = Math.min(keyframes.length - 1, currentFrameIdx + 1);

                // Get the current and next keyframes
                Keyframe currentFrame = keyframes[currentFrameIdx];
                Keyframe nextFrame = keyframes[nextFrameIdx];

                // Calculate the progress between the current and next keyframes
                float timeLeft = elapsedSeconds - currentFrame.timestamp();
                float progress = Mth.clamp(
                        timeLeft / (nextFrame.timestamp() - currentFrame.timestamp()),
                        0.0F,
                        1.0F);

                // Interpolate the keyframes
                nextFrame.interpolation().apply(
                        pAnimationVecCache,
                        progress,
                        keyframes,
                        currentFrameIdx,
                        nextFrameIdx,
                        pScale);

                // Apply the interpolated keyframes to the part
                animation.target().apply(part, pAnimationVecCache);
            }
        }
    }

    /**
     * Gets the elapsed seconds of the animation
     *
     * @param pAnimationDefinition The animation definition
     * @param pAccumulatedTime     The accumulated time in milliseconds
     * @return The elapsed seconds
     */
    public static float getElapsedSeconds(AnimationDefinition pAnimationDefinition, long pAccumulatedTime) {
        float secondsAccumulated = (float)pAccumulatedTime / 1000.0F;

        return pAnimationDefinition.looping()
                ? secondsAccumulated % pAnimationDefinition.lengthInSeconds()
                : secondsAccumulated;
    }
}
"
6Eh7A0ei,Untitled,Rofyda_Elghadban1,C++,Wednesday 20th of September 2023 02:23:08 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 int t;
 cin>>t;
 while(t--){
  string s,t1=""010"",t2=""101"";
  cin>>s;
  int counter1=0,counter2=0,ones=0,zeros=0;
  for(int i=0;i<s.size();i++){
    if(s[i]=='1'){
      ones++;
    }else if(s[i]=='0'){
      zeros++;
    }
    if(s[i]==t1[counter1]){
      counter1++;
    }if(s[i]==t2[counter2]){
      counter2++;
    }
  }
  if(counter1==3||counter2==3){
    cout<<min(zeros,ones)<<""\n"";
  }else{
    cout<<""0""<<""\n"";
  }
 }
 }

 int main(){
  Rofyda_Elghadban();
  solve();

  return 0;
 }"
Gqb8C1Xh,Untitled,Megasa,C#,Wednesday 20th of September 2023 02:19:16 PM CDT,"string name;
int age;
int programCount;
int money;
int time;
bool truth;

name = ""Александр"";
age = 43;
programCount = 1;
money = 100000;
time = 1;
truth = true;

Console.WriteLine(""Здравствуйте, меня зовут "" + name + ""."");
Console.WriteLine(""Мне "" + age + "" лет."");
Console.WriteLine(""Я хочу научиться делать игры, это моя "" + programCount + "" программа на языке C#."");
Console.WriteLine(""Когда я закончу обучение я хочу зарабатывать "" + money + "" денег в "" + time + "" наносекунд."");
Console.WriteLine(""Достигну ли я желаемого? "" + truth + ""!"");"
J21mEzGE,2nd AI Detection,Akshay_Subramanian,Java,Wednesday 20th of September 2023 02:03:52 PM CDT,"import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.WebcamName;
import org.opencv.core.*;
import org.opencv.imgproc.Imgproc;
import org.openftc.easyopencv.*;

import java.util.ArrayList;
import java.util.List;

@TeleOp(name=""Stacked Rectangle Detection"")
public class StackedRectangleDetection extends LinearOpMode {
    OpenCvCamera webcam;
    Mat inputImage = new Mat();

    @Override
    public void runOpMode() {
        int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier(""cameraMonitorViewId"", ""id"", hardwareMap.appContext.getPackageName());
        webcam = OpenCvCameraFactory.getInstance().createWebcam(hardwareMap.get(WebcamName.class, ""Webcam""), cameraMonitorViewId);
        
        webcam.openCameraDeviceAsync(new OpenCvCamera.AsyncCameraOpenListener() {
            @Override
            public void onOpened() {
                webcam.setPipeline(new RectanglePipeline());
                webcam.startStreaming(640, 480, OpenCvCameraRotation.UPRIGHT);
            }

            @Override
            public void onError(int errorCode) {
                // Handle error here
            }
        });

        waitForStart();

        while (opModeIsActive()) {
            telemetry.addData(""Frame Count"", webcam.getFrameCount());
            telemetry.update();
        }
    }

    class RectanglePipeline extends OpenCvPipeline {
        @Override
        public Mat processFrame(Mat input) {
            Imgproc.cvtColor(input, inputImage, Imgproc.COLOR_RGB2HSV);

            Mat redMask = new Mat(), blueMask = new Mat(), greenMask = new Mat();
            Core.inRange(inputImage, new Scalar(0, 100, 100), new Scalar(10, 255, 255), redMask);
            Core.inRange(inputImage, new Scalar(35, 100, 100), new Scalar(85, 255, 255), greenMask);
            Core.inRange(inputImage, new Scalar(100, 100, 100), new Scalar(140, 255, 255), blueMask);

            List<Rect> redRects = detectRectangles(redMask);
            List<Rect> greenRects = detectRectangles(greenMask);
            List<Rect> blueRects = detectRectangles(blueMask);

            for (Rect red : redRects) {
                for (Rect green : greenRects) {
                    for (Rect blue : blueRects) {
                        if (isStacked(red, green, blue)) {
                            Imgproc.rectangle(input, red.tl(), red.br(), new Scalar(255, 0, 0), 2);
                            Imgproc.rectangle(input, green.tl(), green.br(), new Scalar(0, 255, 0), 2);
                            Imgproc.rectangle(input, blue.tl(), blue.br(), new Scalar(0, 0, 255), 2);
                        }
                    }
                }
            }

            return input;
        }

        private List<Rect> detectRectangles(Mat mask) {
            List<MatOfPoint> contours = new ArrayList<>();
            Mat hierarchy = new Mat();
            Imgproc.findContours(mask, contours, hierarchy, Imgproc.RETR_TREE, Imgproc.CHAIN_APPROX_SIMPLE);

            List<Rect> rectangles = new ArrayList<>();
            for (MatOfPoint cnt : contours) {
                Rect rect = Imgproc.boundingRect(cnt);
                rectangles.add(rect);
            }
            return rectangles;
        }

        private boolean isStacked(Rect red, Rect green, Rect blue) {
            return isAbove(red, green) && isAbove(green, blue);
        }

        private boolean isAbove(Rect upper, Rect lower) {
            return Math.abs(upper.x - lower.x) < 10 && upper.y < lower.y;
        }
    }
}
"
JzQAQa4z,barotrauma.sh,HomelessMage,Bash,Wednesday 20th of September 2023 01:50:24 PM CDT,"#!/bin/bash
# Конфигурация
STEAMCMD=/home/steam/steamcmd
UPDATEMOD=true
UPDATEGAME=false
BAROTRAUMADIR=/home/steam/games/barotraumaserver
APPID=1026340
GAMEID=602960
MODID=2826890267

# Обновляю игру
if [ ""$UPDATEGAME"" = true ]
then
        echo 'ОБНОВЛЕНИЕ ИГРЫ'
        # UPDATE GAME
        bash $STEAMCMD +force_install_dir $BAROTRAUMADIR +login anonymous +app_update $APPID -validate +quit
        echo 'ОБНОВЛЕНИЕ ИГРЫ ЗАВЕРШЕНО'
        # LUACS FOR BAROTRAUMA
        echo 'УСТАНОВКА LUA FOR BAROTRAUMA'
        mkdir $BAROTRAUMADIR/staging
        LUASERVER=""luacsforbarotrauma_build_linux_server.tar.gz""
        LUAPATCH=""luacsforbarotrauma_patch_linux_server.tar.gz""
        wget -P $BAROTRAUMADIR/staging https://github.com/evilfactory/LuaCsForBarotrauma/releases/download/latest/$LUASERVER
        tar -xvzf $BAROTRAUMADIR/staging/$LUASERVER -C $BAROTRAUMADIR/staging
        rm $BAROTRAUMADIR/staging/$LUASERVER
        wget -P $BAROTRAUMADIR/staging https://github.com/evilfactory/LuaCsForBarotrauma/releases/download/latest/$LUAPATCH
        tar -xvzf $BAROTRAUMADIR/staging/$LUAPATCH -C $BAROTRAUMADIR/staging
        rm $BAROTRAUMADIR/staging/$LUAPATCH
        rm -rf $BAROTRAUMADIR/staging/Data $BAROTRAUMADIR/staging/LocalMods
        cp -R $BAROTRAUMADIR/staging/* $BAROTRAUMADIR
        rm -rf $BAROTRAUMADIR/staging
        # PERFOMANCE FIX
        bash $STEAMCMD +force_install_dir $BAROTRAUMADIR +login anonymous +workshop_download_item $GAMEID 2701251094 -validate +quit
        cp -R $BAROTRAUMADIR/steamapps/workshop/content/$GAMEID/2701251094/Lua/* $BAROTRAUMADIR/Lua
        rm -rf $BAROTRAUMADIR/steamapps/workshop/content/$GAMEID/2701251094
        echo 'УСТАНОВКА LUA FOR BAROTRAUMA ЗАВЕРШЕНА'
fi

# Обновляю мод
if [ ""$UPDATEMOD"" = true ]
then
        echo 'ОБНОВЛЕНИЕ МОДА'
        bash $STEAMCMD +force_install_dir $BAROTRAUMADIR +login anonymous +workshop_download_item $GAMEID $MODID -validate +quit
        rm -rf $BAROTRAUMADIR/LocalMods/$MODID
        mv $BAROTRAUMADIR/steamapps/workshop/content/$GAMEID/$MODID $BAROTRAUMADIR/LocalMods/
        echo 'ОБНОВЛЕНИЕ МОДА ЗАВЕРШЕНО'
fi
# Запускаю игру
cd $BAROTRAUMADIR
./DedicatedServer"
Axgm0crP,Movie Day,Spocoman,C++,Wednesday 20th of September 2023 01:45:22 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int movieTime, scene, sceneTime;
    cin >> movieTime >> scene >> sceneTime;

    double total = 0.15 * movieTime + scene * sceneTime;

    if (total >= movieTime) {
        cout << ""Time is up! To complete the movie you need "" << round(total - movieTime) << "" minutes.\n"";
    }
    else {
        cout << ""You managed to finish the movie on time! You have "" << round(movieTime - total) << "" minutes left!\n"";
    }
    return 0;
}"
vEgfrJRU,Mountain Run,Spocoman,C++,Wednesday 20th of September 2023 01:44:27 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double record, meters, secondPerMeter;
    cin >> record >> meters >> secondPerMeter;

    double score = meters * secondPerMeter + (int)(meters / 50) * 30;

    if (score < record) {
        printf(""Yes! The new record is %.2f seconds.\n"", score);
    }
    else {
        printf(""No! He was %.2f seconds slower.\n"", score - record);
    }

    return 0;
}"
xF29y2nh,codigo tela,Ultizin,C++,Wednesday 20th of September 2023 01:36:36 PM CDT,"// Bibliotecas //

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeMonoOblique18pt7b.h>

//Tamanho da Tela

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  Serial.begin(115200);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F(""SSD1306 allocation failed""));
    for (;;);
  }
  delay(2000);
  display.setFont(&FreeMonoOblique18pt7b);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(1, 20);
  // Display static text
  display.println(""amogus"");
  display.display();
}

void loop() {
  // Scroll in various directions, pausing in-between:
  display.startscrollright(0x00, 0x0F);
  delay(2000);
  display.invertDisplay(true);
  delay(2000);
  display.invertDisplay(false);
  delay(2000);
}"
TwLdujP0,Mobile Operator,Spocoman,C++,Wednesday 20th of September 2023 01:25:01 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string year, type, net;
    cin >> year >> type >> net;

    int months;
    cin >> months;

    double sum = 0;

    if (type == ""Small"") {
        if (year == ""one"") {
            sum += 9.98;
        }
        else {
            sum += 8.58;
        }
    }
    else if (type == ""Middle"") {
        if (year == ""one"") {
            sum += 18.99;
        }
        else {
            sum += 17.09;
        }
    }
    else if (type == ""Large"") {
        if (year == ""one"") {
            sum += 25.98;
        }
        else {
            sum += 23.59;
        }
    }
    else if (type == ""ExtraLarge"") {
        if (year == ""one"") {
            sum += 35.99;
        }
        else{
            sum += 31.79;
        }
    }
   
    if (net == ""yes"") {
        if (sum <= 10) {
            sum += 5.50;
        }
        else if (sum > 10 && sum <= 30) {
            sum += 4.35;
        }
        else {
            sum += 3.85;
        }
    }

    double total = sum * months;

    if (year == ""two"") {
        total -= 3.75 * total / 100;
    }

    printf(""%.2f lv.\v"", total);

    return 0;
}


Решение с тернарен оператор:

#include <iostream>
#include <string>

using namespace std;

int main() {
    string year, type, net;
    cin >> year >> type >> net;

    int months;
    cin >> months;

    double sum =
        type == ""Small"" ? (year == ""one"" ? 9.98 : 8.58) :
        type == ""Middle"" ? (year == ""one"" ? 18.99 : 17.09) :
        type == ""Large"" ? (year == ""one"" ? 25.98 : 23.59) :
        type == ""ExtraLarge"" ? (year == ""one"" ? 35.99 : 31.79) : 0;
        
    sum += net == ""yes"" ? (sum > 30 ? 3.85 : sum > 10 ? 4.35 : 5.50) : 0;
    
    double total = sum * months;

    if (year == ""two"") {
        total -= 3.75 * total / 100;
    }

    printf(""%.2f lv.\v"", total);

    return 0;
}"
tPCuHx46,lesson17_321,Petro_zzz,C++,Wednesday 20th of September 2023 01:23:38 PM CDT,"#include <iostream>

using namespace std;

int get_max(int size, int arr[]);

void get_max_arr(int size,
	int arr1[],
	int arr2[],
	int arr_res[]);

int get_idmax(int size, int arr[]);

int get_idval(int size, int arr[], int val);

int get_rand(int a, int b) {
	return rand() % (b - a + 1) + a;
}

void show_arr(int size, int arr[]) {
	for (int k = 0; k < size; k++)
		cout << arr[k] << "" "";
	cout << endl;
}

void gen_arr(int size, int arr[]) {
	for (int k = 0; k < size; k++)
		arr[k] = get_rand(-10, 10);	
}

void task0() {
	const int size = 10;
	int vects[size];
	gen_arr(size, vects);
	show_arr(size, vects);
	int id = 3;
	cout << vects[id] << "" ""	// значение
		<< id << "" ""			// индекс
		<< &(vects[id])			// адрес VRAM
		<< endl;

	cout << ""max: "" << get_max(size, vects) << endl;

	int vects2[size], max_vects[size];
	gen_arr(size, vects2);
	vects2[3] = 100;

	get_max_arr(size, vects, vects2, max_vects);

	show_arr(size, vects2);
	show_arr(size, max_vects);

	int id_max = get_idmax(size, vects);
	cout << id_max << "" ""
		<< vects[id_max] << endl;

	cout << ""find -4 in :"" << get_idval(size, vects, -4) << endl;
}

int get_idmax(int size, int arr[]) {	
	int max = arr[0];
	int id_max = 0;

	for (int k = 1; k < size; k++) {
		if (arr[k] > max) {
			max = arr[k];
			id_max = k;
		}
	}
	//cout << max << endl;
	return id_max;
}

int get_idval(int size, int arr[], int val) {
	for (int k = 0; k < size; k++) {
		if (val == arr[k]) {
			return k;
		}
	}
	return -1;
}

void test_swap_cpu() {
	int a = 3, b = 7;
	a = a + b;
	b = a - b;
	a = a - b;
	cout << a << "" "" << b << endl;
}

void test_swap_ram() {
	int a = 3, b = 7;
	int temp = b;
	b = a;
	a = temp;
	cout << a << "" "" << b << endl;
}

int get_max(int size, int arr[]) {
	int max = arr[0];

	for (int k = 1; k < size; k++) {
		if (arr[k] > max) {
			max = arr[k];
		}
	}
	//cout << max << endl;
	return max;
}

void get_max_arr(int size,
				 int arr1[],
				 int arr2[],
				 int arr_res[])
{
	for (int k = 0; k < size; k++) {
		arr_res[k] = (arr1[k] > arr2[k]) ? arr1[k] : arr2[k];
		/*
		if (arr1[k] > arr2[k])
			arr_res[k] = arr1[k];
		else
			arr_res[k] = arr2[k];
		*/
	}
}

int main() {
	srand(int(time(NULL)));
	task0();
	test_swap_ram();
	test_swap_cpu();

	return 0;
}"
rzuyqaQV,Enhanced Dialogue Interface - Preset Post-war,FOG5490,INI file,Wednesday 20th of September 2023 01:20:22 PM CDT,"# Custom user edits for Enhanced Dialogue Interface

# =============================================================================
# This section contains general settings.
# -----------------------------------------------------------------------------
[General]
# Input delay in milliseconds before being able to choose a response or exit the dialogue.
iInputDelay = 100

# The sound identifier that will be played when transitioning from one input to another.

# Note: An empty value will make the scrolling silent.

# =============================================================================
# This section contains settings for the dialogue box.
# -----------------------------------------------------------------------------
[Container]
# Width of the dialogue box as a percentage of the available space.

# Height of the dialogue box as a percentage of the original box height.

# Controls automatic height adjustment of the dialogue box. 

# 0 = Disabled (dialogue box height remains fixed),
# Any other value represents a percentage of the available space for which AutoFit can be applied relative to fHeight.

# Text box alignment (just the box).
sAlign = center
# Options: left, center, right

# Horizontal offset for placement of the dialogue box. Use ""0.0"" for no horizontal offset.

# Vertical offset for placement of the dialogue box. Use ""0.0"" for no vertical offset.

# Sets the vertical padding around the dialogue box background.

# Sets the horizontal padding around the dialogue box background.

# Thickness of the dialogue box border.

# Radius of the dialogue box corners.

# Options: -1 = fully rounded, 0 = no rounding, any other value sets the corner radius.

# Color of the dialogue box border.

# Opacity of the dialogue box border (0 = fully transparent, 100 = fully opaque).

# Background color for the dialogue box.

# Adjusts the opacity of the background behind the dialogue box (0 = fully transparent, 100 = fully opaque).

# Horizontal blur for the background behind the dialogue box, specified in units.

# Vertical blur for the background behind the dialogue box, specified in units.

# =============================================================================
# This section contains settings for the scrollers.
# -----------------------------------------------------------------------------
[Scroller]
# Margin between the dialogue and the scroller.

# Color of the scroller.

# Opacity of the scroller (0 = fully transparent, 100 = fully opaque).

# =============================================================================
# This section contains base settings for dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntryBase]
# Controls the size of the text in dialogue entries.

# Determines the text alignment for entries.
sTextAlign = left
# Options: left, center, right

# Indicates whether the entry's background should span the full width.
bFullWidth = 1
# Options: 0 = No, 1 = Yes

# Sets the vertical padding around the content of the entry's background.
fVerticalPadding = 8.0

# Sets the horizontal padding around the content of the entry's background.
fHorizontalPadding = 12.0

# Adjusts the vertical spacing between dialogue entries.
fVerticalSpacing = 0.0

# Determines whether to show item numbers in dialogue entries.
bShowItemNumber = 1
# Options: 0 = No, 1 = Yes

# Sets the font family for dialogue entries.
sFontFamily = 
# Options: $NB_Grotesk_Semibold, $NB_Grotesk_Semibold, $MAIN_Font, $MAIN_Font_Bold, $HandwrittenFont, $ConsoleFont, $DebugTextFont

# =============================================================================
# This section contains settings for dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntry]
# Sets the text color for dialogue entries.
sTextColor = #00ff84

# Adjusts the opacity of the text in dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 85.0

# Determines whether the text in dialogue entries is italic.

# Options: 0 = No, 1 = Yes

# Controls the strength of the shadow for dialogue entries.

# Distance of the shadow from the text in dialogue entries, specified in units.

# Angle of the shadow in degrees for dialogue entries. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format for dialogue entries, such as ""#000000"" for black.

# Horizontal blur for the shadow in dialogue entries, specified in units.

# Vertical blur for the shadow in dialogue entries, specified in units.

# Shadow quality for dialogue entries, with higher values providing smoother shadows.

# Opacity of the shadow in dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for dialogue entries.

# Adjusts the opacity of the background behind dialogue text in dialogue entries.
fBackgroundOpacity = 55.0

# Horizontal blur for the background behind dialogue text in dialogue entries, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind dialogue text in dialogue entries, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries.

# Color of the border for dialogue entries.

# Opacity of the border for dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).

# =============================================================================
# This section contains settings for dialogue entries when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryHover]
# Sets the text color for dialogue entries when hovering.
sTextColor = #00ff84

# Adjusts the opacity of the text in dialogue entries when hovering.

# Determines whether the text in dialogue entries is italic when hovering.

# Options: 0 = No, 1 = Yes

# Controls the strength of the shadow.

# Distance of the shadow from the text, specified in units.

# Angle of the shadow in degrees. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format, such as ""#000000"" for black.

# Horizontal blur for the shadow, specified in units.

# Vertical blur for the shadow, specified in units.

# Shadow quality, with higher values providing smoother shadows.

# Opacity of the shadow, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for dialogue entries when hovering.
sBackgroundColor = #09301d

# Adjusts the opacity of the background behind dialogue text when hovering.
fBackgroundOpacity = 75.0

# Horizontal blur for the background behind dialogue text when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind dialogue text when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries when hovering.

# Color of the border for dialogue entries when hovering.

# Opacity of the border for dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).

# =============================================================================
# This section contains settings for invalid dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntryInvalid]
# Sets the text color for invalid dialogue entries.
sTextColor = #ff3333

# Adjusts the opacity of the text in invalid dialogue entries, with values ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 85.0

# Determines whether the text in invalid dialogue entries is italic (0 for no, 1 for yes).

# Controls the strength of the shadow for invalid dialogue entries.

# Distance of the shadow from the text in invalid dialogue entries, specified in units.

# Angle of the shadow in degrees for invalid dialogue entries. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format for invalid dialogue entries, such as ""#000000"" for black.

# Horizontal blur for the shadow in invalid dialogue entries, specified in units.

# Vertical blur for the shadow in invalid dialogue entries, specified in units.

# Shadow quality for invalid dialogue entries, with higher values providing smoother shadows.

# Opacity of the shadow in invalid dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for invalid dialogue entries.
sBackgroundColor = #000000

# Adjusts the opacity of the background behind text in invalid dialogue entries, with values ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 55.0

# Horizontal blur for the background behind text in invalid dialogue entries, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in invalid dialogue entries, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in invalid dialogue entries.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for invalid dialogue entries.

# Color of the border for invalid dialogue entries.

# Opacity of the border for invalid dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).

# =============================================================================
# This section contains settings for invalid dialogue entries when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryInvalidHover]
# Sets the text color for invalid dialogue entries when hovering.
sTextColor = #ff3333

# Adjusts the opacity of the text in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).

# Determines whether the text in invalid dialogue entries is italic when hovering (0 for no, 1 for yes).

# Controls the strength of the shadow for invalid dialogue entries when hovering.

# Distance of the shadow from the text in invalid dialogue entries when hovering, specified in units.

# Angle of the shadow in degrees for invalid dialogue entries when hovering. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format for invalid dialogue entries when hovering, such as ""#000000"" for black.

# Horizontal blur for the shadow in invalid dialogue entries when hovering, specified in units.

# Vertical blur for the shadow in invalid dialogue entries when hovering, specified in units.

# Shadow quality for invalid dialogue entries when hovering, with higher values providing smoother shadows.

# Opacity of the shadow in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for invalid dialogue entries when hovering.
sBackgroundColor = #300909

# Adjusts the opacity of the background behind text in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 75.0

# Horizontal blur for the background behind text in invalid dialogue entries when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in invalid dialogue entries when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in invalid dialogue entries when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for invalid dialogue entries when hovering.

# Color of the border for invalid dialogue entries when hovering.

# Opacity of the border for invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).

# =============================================================================
# This section contains settings for dialogue entries that have already been said.
# -----------------------------------------------------------------------------
[DialogueEntryAlreadySaid]
# Sets the text color for dialogue entries that have already been said.
sTextColor = #00ff84

# Adjusts the opacity of the text in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 75.0

# Determines whether the text in dialogue entries that have already been said is italic (0 for no, 1 for yes).

# Controls the strength of the shadow for dialogue entries that have already been said.

# Distance of the shadow from the text in dialogue entries that have already been said, specified in units.

# Angle of the shadow in degrees for dialogue entries that have already been said. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format for dialogue entries that have already been said, such as ""#000000"" for black.

# Horizontal blur for the shadow in dialogue entries that have already been said, specified in units.

# Vertical blur for the shadow in dialogue entries that have already been said, specified in units.

# Shadow quality for dialogue entries that have already been said, with higher values providing smoother shadows.

# Opacity of the shadow in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for dialogue entries that have already been said.
sBackgroundColor = #000000

# Adjusts the opacity of the background behind text in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 40.0

# Horizontal blur for the background behind text in dialogue entries that have already been said, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in dialogue entries that have already been said, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries that have already been said.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries that have already been said.

# Color of the border for dialogue entries that have already been said.

# Opacity of the border for dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).

# =============================================================================
# This section contains settings for dialogue entries that have already been said when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryAlreadySaidHover]
# Sets the text color for dialogue entries that have already been said when hovering.
sTextColor = #00ff84

# Adjusts the opacity of the text in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).

# Determines whether the text in dialogue entries that have already been said is italic when hovering (0 for no, 1 for yes).

# Controls the strength of the shadow for dialogue entries that have already been said when hovering.

# Distance of the shadow from the text in dialogue entries that have already been said when hovering, specified in units.

# Angle of the shadow in degrees for dialogue entries that have already been said when hovering. For example, ""45.0"" degrees.

# Shadow color in hexadecimal format for dialogue entries that have already been said when hovering, such as ""#000000"" for black.

# Horizontal blur for the shadow in dialogue entries that have already been said when hovering, specified in units.

# Vertical blur for the shadow in dialogue entries that have already been said when hovering, specified in units.

# Shadow quality for dialogue entries that have already been said when hovering, with higher values providing smoother shadows.

# Opacity of the shadow in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 100.0

# Sets the background color for dialogue entries that have already been said when hovering.
sBackgroundColor = #09301d

# Adjusts the opacity of the background behind text in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 75.0

# Horizontal blur for the background behind text in dialogue entries that have already been said when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in dialogue entries that have already been said when hovering, specified in units.

# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries that have already been said when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries that have already been said when hovering.

# Color of the border for dialogue entries that have already been said when hovering.

# Opacity of the border for dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).

"
wxqiUff1,Enhanced Dialogue Interface - Preset Vanilla-like,FOG5490,INI file,Wednesday 20th of September 2023 01:19:38 PM CDT,"# Custom user edits for Enhanced Dialogue Interface

# =============================================================================
# This section contains general settings.
# -----------------------------------------------------------------------------
[General]
# Input delay in milliseconds before being able to choose a response or exit the dialogue.
iInputDelay = 100

# The sound identifier that will be played when transitioning from one input to another.
;sRolloverSound = UIMenuGeneralFocus
# Note: An empty value will make the scrolling silent.

# =============================================================================
# This section contains settings for the dialogue box.
# -----------------------------------------------------------------------------
[Container]
# Width of the dialogue box as a percentage of the available space.
;fWidth = 70.0

# Height of the dialogue box as a percentage of the original box height.
;fHeight = 100.0

# Controls automatic height adjustment of the dialogue box. 
;fAutoFitHeight = 100
# 0 = Disabled (dialogue box height remains fixed),
# Any other value represents a percentage of the available space for which AutoFit can be applied relative to fHeight.

# Text box alignment (just the box).
sAlign = center
# Options: left, center, right

# Horizontal offset for placement of the dialogue box. Use ""0.0"" for no horizontal offset.
;fXOffset = 0.0

# Vertical offset for placement of the dialogue box. Use ""0.0"" for no vertical offset.
;fYOffset = 0.0

# Sets the vertical padding around the dialogue box background.
;fVerticalPadding = 0.0

# Sets the horizontal padding around the dialogue box background.
;fHorizontalPadding = 0.0

# Thickness of the dialogue box border.
;fBorderThickness = 0.0

# Radius of the dialogue box corners.
;fBorderRadius = 0.0
# Options: -1 = fully rounded, 0 = no rounding, any other value sets the corner radius.

# Color of the dialogue box border.
;sBorderColor = #000000

# Opacity of the dialogue box border (0 = fully transparent, 100 = fully opaque).
;fBorderOpacity = 0.0

# Background color for the dialogue box.
;sBackgroundColor = #000000

# Adjusts the opacity of the background behind the dialogue box (0 = fully transparent, 100 = fully opaque).
;fBackgroundOpacity = 0.0

# Horizontal blur for the background behind the dialogue box, specified in units.
;fBackgroundBlurX = 0.0

# Vertical blur for the background behind the dialogue box, specified in units.
;fBackgroundBlurY = 0.0

# =============================================================================
# This section contains settings for the scrollers.
# -----------------------------------------------------------------------------
[Scroller]
# Margin between the dialogue and the scroller.
;fMargin = 8.0

# Color of the scroller.
;sColor = #FFFFFF

# Opacity of the scroller (0 = fully transparent, 100 = fully opaque).
;fOpacity = 60.0

# =============================================================================
# This section contains base settings for dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntryBase]
# Controls the size of the text in dialogue entries.
fEntryTextSize = 100.0

# Determines the text alignment for entries.
sTextAlign = left
# Options: left, center, right

# Indicates whether the entry's background should span the full width.
bFullWidth = 1
# Options: 0 = No, 1 = Yes

# Sets the vertical padding around the content of the entry's background.
fVerticalPadding = 8.0

# Sets the horizontal padding around the content of the entry's background.
fHorizontalPadding = 8.0

# Adjusts the vertical spacing between dialogue entries.
fVerticalSpacing = 4.0

# Determines whether to show item numbers in dialogue entries.
bShowItemNumber = 0
# Options: 0 = No, 1 = Yes

# Sets the font family for dialogue entries.
;sFontFamily = $NB_Grotesk_Semibold
# Options: $NB_Grotesk_Semibold, $NB_Grotesk_Semibold, $MAIN_Font, $MAIN_Font_Bold, $HandwrittenFont, $ConsoleFont, $DebugTextFont

# =============================================================================
# This section contains settings for dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntry]
# Sets the text color for dialogue entries.
sTextColor = #FFFFFF

# Adjusts the opacity of the text in dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 100.0

# Determines whether the text in dialogue entries is italic.
bTextItalic = 0
# Options: 0 = No, 1 = Yes

# Controls the strength of the shadow for dialogue entries.
;fShadowStrength = 2.0

# Distance of the shadow from the text in dialogue entries, specified in units.
;fShadowDistance = 2.0

# Angle of the shadow in degrees for dialogue entries. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format for dialogue entries, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow in dialogue entries, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow in dialogue entries, specified in units.
;fShadowBlurY = 0.0

# Shadow quality for dialogue entries, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow in dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for dialogue entries.
sBackgroundColor = #000000

# Adjusts the opacity of the background behind dialogue text in dialogue entries.
fBackgroundOpacity = 55.0

# Horizontal blur for the background behind dialogue text in dialogue entries, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind dialogue text in dialogue entries, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries.
;fBorderThickness = 0.0

# Color of the border for dialogue entries.
;sBorderColor = #000000

# Opacity of the border for dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0

# =============================================================================
# This section contains settings for dialogue entries when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryHover]
# Sets the text color for dialogue entries when hovering.
sTextColor = #000000

# Adjusts the opacity of the text in dialogue entries when hovering.
fTextOpacity = 75.0

# Determines whether the text in dialogue entries is italic when hovering.
bTextItalic = 0
# Options: 0 = No, 1 = Yes

# Controls the strength of the shadow.
;fShadowStrength = 2.0

# Distance of the shadow from the text, specified in units.
;fShadowDistance = 3.0

# Angle of the shadow in degrees. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow, specified in units.
;fShadowBlurY = 0.0

# Shadow quality, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for dialogue entries when hovering.
sBackgroundColor = #B7B7B7

# Adjusts the opacity of the background behind dialogue text when hovering.
fBackgroundOpacity = 100.0

# Horizontal blur for the background behind dialogue text when hovering, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind dialogue text when hovering, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries when hovering.
;fBorderThickness = 0.0

# Color of the border for dialogue entries when hovering.
;sBorderColor = #000000

# Opacity of the border for dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0

# =============================================================================
# This section contains settings for invalid dialogue entries.
# -----------------------------------------------------------------------------
[DialogueEntryInvalid]
# Sets the text color for invalid dialogue entries.
sTextColor = #FE3333

# Adjusts the opacity of the text in invalid dialogue entries, with values ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 100.0

# Determines whether the text in invalid dialogue entries is italic (0 for no, 1 for yes).
bTextItalic = 0

# Controls the strength of the shadow for invalid dialogue entries.
;fShadowStrength = 2.0

# Distance of the shadow from the text in invalid dialogue entries, specified in units.
;fShadowDistance = 3.0

# Angle of the shadow in degrees for invalid dialogue entries. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format for invalid dialogue entries, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow in invalid dialogue entries, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow in invalid dialogue entries, specified in units.
;fShadowBlurY = 0.0

# Shadow quality for invalid dialogue entries, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow in invalid dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for invalid dialogue entries.
sBackgroundColor = #000000

# Adjusts the opacity of the background behind text in invalid dialogue entries, with values ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 55.0

# Horizontal blur for the background behind text in invalid dialogue entries, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in invalid dialogue entries, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in invalid dialogue entries.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for invalid dialogue entries.
;fBorderThickness = 0.0

# Color of the border for invalid dialogue entries.
;sBorderColor = #000000

# Opacity of the border for invalid dialogue entries, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0

# =============================================================================
# This section contains settings for invalid dialogue entries when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryInvalidHover]
# Sets the text color for invalid dialogue entries when hovering.
sTextColor = #CE0000

# Adjusts the opacity of the text in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 100.0

# Determines whether the text in invalid dialogue entries is italic when hovering (0 for no, 1 for yes).
bTextItalic = 0

# Controls the strength of the shadow for invalid dialogue entries when hovering.
;fShadowStrength = 2.0

# Distance of the shadow from the text in invalid dialogue entries when hovering, specified in units.
;fShadowDistance = 3.0

# Angle of the shadow in degrees for invalid dialogue entries when hovering. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format for invalid dialogue entries when hovering, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow in invalid dialogue entries when hovering, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow in invalid dialogue entries when hovering, specified in units.
;fShadowBlurY = 0.0

# Shadow quality for invalid dialogue entries when hovering, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for invalid dialogue entries when hovering.
sBackgroundColor = #B7B7B7

# Adjusts the opacity of the background behind text in invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 100.0

# Horizontal blur for the background behind text in invalid dialogue entries when hovering, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in invalid dialogue entries when hovering, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in invalid dialogue entries when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for invalid dialogue entries when hovering.
;fBorderThickness = 0.0

# Color of the border for invalid dialogue entries when hovering.
;sBorderColor = #000000

# Opacity of the border for invalid dialogue entries when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0

# =============================================================================
# This section contains settings for dialogue entries that have already been said.
# -----------------------------------------------------------------------------
[DialogueEntryAlreadySaid]
# Sets the text color for dialogue entries that have already been said.
sTextColor = #FFFFFF

# Adjusts the opacity of the text in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 50.0

# Determines whether the text in dialogue entries that have already been said is italic (0 for no, 1 for yes).
bTextItalic = 1

# Controls the strength of the shadow for dialogue entries that have already been said.
;fShadowStrength = 2.0

# Distance of the shadow from the text in dialogue entries that have already been said, specified in units.
;fShadowDistance = 3.0

# Angle of the shadow in degrees for dialogue entries that have already been said. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format for dialogue entries that have already been said, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow in dialogue entries that have already been said, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow in dialogue entries that have already been said, specified in units.
;fShadowBlurY = 0.0

# Shadow quality for dialogue entries that have already been said, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for dialogue entries that have already been said.
sBackgroundColor = #000000

# Adjusts the opacity of the background behind text in dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 35.0

# Horizontal blur for the background behind text in dialogue entries that have already been said, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in dialogue entries that have already been said, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries that have already been said.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries that have already been said.
;fBorderThickness = 0.0

# Color of the border for dialogue entries that have already been said.
;sBorderColor = #000000

# Opacity of the border for dialogue entries that have already been said, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0

# =============================================================================
# This section contains settings for dialogue entries that have already been said when hovering.
# -----------------------------------------------------------------------------
[DialogueEntryAlreadySaidHover]
# Sets the text color for dialogue entries that have already been said when hovering.
sTextColor = #000000

# Adjusts the opacity of the text in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fTextOpacity = 75.0

# Determines whether the text in dialogue entries that have already been said is italic when hovering (0 for no, 1 for yes).
bTextItalic = 1

# Controls the strength of the shadow for dialogue entries that have already been said when hovering.
;fShadowStrength = 2.0

# Distance of the shadow from the text in dialogue entries that have already been said when hovering, specified in units.
;fShadowDistance = 3.0

# Angle of the shadow in degrees for dialogue entries that have already been said when hovering. For example, ""45.0"" degrees.
;fShadowAngle = 45.0

# Shadow color in hexadecimal format for dialogue entries that have already been said when hovering, such as ""#000000"" for black.
;sShadowColor = #000000

# Horizontal blur for the shadow in dialogue entries that have already been said when hovering, specified in units.
;fShadowBlurX = 0.0

# Vertical blur for the shadow in dialogue entries that have already been said when hovering, specified in units.
;fShadowBlurY = 0.0

# Shadow quality for dialogue entries that have already been said when hovering, with higher values providing smoother shadows.
;iShadowQuality = 3

# Opacity of the shadow in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fShadowOpacity = 0.0

# Sets the background color for dialogue entries that have already been said when hovering.
sBackgroundColor = #B7B7B7

# Adjusts the opacity of the background behind text in dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
fBackgroundOpacity = 100.0

# Horizontal blur for the background behind text in dialogue entries that have already been said when hovering, specified in units.
;fBackgroundBlurX = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Vertical blur for the background behind text in dialogue entries that have already been said when hovering, specified in units.
;fBackgroundBlurY = 0.0
# WARNING: You may encounter crashes with certain values. If that happens, leave this at 0.

# Controls the radius of the corners of the entry's background in dialogue entries that have already been said when hovering.
fBorderRadius = 0
# Options: -1 = Fully rounded corners, 0 = No rounding, Any other value sets the corner radius.

# Thickness of the border for dialogue entries that have already been said when hovering.
;fBorderThickness = 0.0

# Color of the border for dialogue entries that have already been said when hovering.
;sBorderColor = #000000

# Opacity of the border for dialogue entries that have already been said when hovering, ranging from 0% (fully transparent) to 100% (fully opaque).
;fBorderOpacity = 0.0"
yEpnZEEh,Mining Rig,Spocoman,C++,Wednesday 20th of September 2023 01:10:29 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double videosPrice, cablesPrice, powerPerDay, profitPerDay;
    cin >> videosPrice >> cablesPrice >> powerPerDay >> profitPerDay;

    double computerPrice = (videosPrice + cablesPrice) * 13 + 1000;

    cout << computerPrice << endl
        << ceil(computerPrice / ((profitPerDay - powerPerDay) * 13)) << endl;

    return 0;
}"
piAQ6aXd,dependency inversion principle,STANAANDREY,Java,Wednesday 20th of September 2023 12:59:28 PM CDT,"import java.io.FileWriter;
import java.io.IOException;

interface ILoger {
    void log(final String message);
}

class FileLogger implements ILoger {
    private FileWriter fileWriter;
    public FileLogger(final String fName) throws IOException {
        fileWriter = new FileWriter(fName);
    }

    @Override
    public void log(final String message) {
        try {
            fileWriter.write(System.currentTimeMillis() + "": "" + message);
            fileWriter.close();
        } catch (Exception e) {
            System.err.println(""ERROR: "");
            e.printStackTrace();
        }
    }
}

class DataAccessLayer {
    private ILoger loger;
    public DataAccessLayer(final ILoger loger) {
        this.loger = loger;
    }
    public void addClient(final String name) {
        loger.log(""added "" + name);
    }
}

public class Main {

    public static void main(String[] args) throws IOException {
        var fl = new FileLogger(""data.txt"");
        var dal = new DataAccessLayer(fl);
        dal.addClient(""Andrew"");
    }
}
"
maEYYTud,Синдром самозванца. Психология,Pearlfromsu,C#,Wednesday 20th of September 2023 12:52:28 PM CDT,"
Прежде, чем говорить про синдром самозванца, расскажу одну интересную историю из прошлого.
В один неспокойный осенний денёк 1952 года на борт канадского эсминца, патрулировавшего воды жёлтого моря, были доставлены 16 тяжело раненных солдат. К счастью, на борту был военный хирург Джозеф Сир.
Он сразу же сказал подготовить раненых к операции, а сам заперся в своей каюте.
Угадайте, что он начал делать.
Нет, инструменты он не готовил.
Он открыл учебник про хирургию и устроил себе экспресс курс по лечению раненых.
Более того, Джозеф был совсем не Джозефом, и отношения к медицине он никогда не имел.
Это был Фердинанд Демара, который через полчаса войдёт в операционную и спасёт жизни 16 солдат.
У него был простой принцип, чем меньше надрезов я сделаю, тем меньше потом зашивать.
Потом Демара настигнет необычайная слава. Про него напишут в газетах, снимут фильм и
и даже правительство его оценило и не стало заводить никаких дел.
Произошло бы так, оказавшись бы на месте настоящий врач? Вряд ли.
Этот талант быть уверенным и дерзким, выдавая себя за других, покорил людей.
Если так подумать, то каждый из нас на экзамене  отчасти Демара,  доказывая теорему, о которой услышал только вчера.
Вообще, тема самозванцев достаточно давно привлекает людей.
Ведь психологически, объясняется это очень просто.
Вокруг нас существует множество рамок, которые сложились со временем и...
и пока не съешь суп, конфет не получишь,
А чтобы сделать задание, нужно детально в нём разбираться,
Ну и чтобы хорошо зарабатывать, нужно закончить вуз.
Или, например, у любого из нас вызывает удивление момент, когда вы потратили три вечера на лабораторную работу, а её так и не приняли.
Когда одногруппник просто взял её из интернета и сдал сразу.
Как же так, он же срезал путь, обошёл рамки, и вообще... этого же... Делать нельзя?
Ощущение меняется, когда самозванцем становимся мы сами.
Знакомо ли вам чувство, когда вы ощущаете себя совсем не тем, за кого вас принимают.
И что вас вот-вот выведут на чистую воду, что вам просто очень повезло и все ваши достижения - это незаслуженно, это фейк.
Если до сих пор вы такого не испытывали, то точно испытаете в будущем. Это чувство называется ""Синдром самозванца"".
Коротко говоря, это сверлящее ощущение, что ты не заслуживаешь своего счастья.
Когда почти любой успех вызывает не радость и удовлетворение, а сомнение и тревогу.
Это явление частое. Один известный физик даже заявлял, что ""раздутое почитание его трудов"" заставляет чувствовать его мошенником.
Этим физиком был Альберт Эйнштейн, (как в анекдоте).
На самом деле, в синдроме самозванца есть и плюсы.
Хотя он и убивает уверенность в себе, всё равно появляется стимул стараться, чтобы тебя не разоблачили.
Ну и всегда стоит помнить, что даже самые известные личности тоже стесняются своего успеха.
Спасибо за внимание.

Ки?
Вообще, он плотно впечатан в жизнь человека и формируется с детства.
Однако, есть одна вещь, понимание которой должно облегчить жизнь.
Это понимание ""эффекта прожектора"". Ты не на сцене, а все думают не о том, что ты вот-вот накосячишь, а только о себе.
"
HXgQRmhC,Untitled,jhillBHT,CSS,Wednesday 20th of September 2023 12:47:06 PM CDT,"<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
 'event': 'phone_call', // phone call as a GA4 event
    'call_duration': '[[dlv - call_duration]]', // How long did the call last
	'visitor_location':'VISITOR_LOCATION'
 });
</script>"
WQ5FwisA,RightPlace,Grossos,JavaScript,Wednesday 20th of September 2023 12:03:35 PM CDT,"function rightPlace(string, char, string2) {

    let x = char.charAt(0);

    let result = string.replace('_', x);

    if (result === string2) {
        console.log('Matched');
    } else {
        console.log('Not Matched');
    }

}"
QRgyieV2,MOK layout kawi beta,dksetiavan,YAML,Wednesday 20th of September 2023 11:59:45 AM CDT,"{
""title"":""kawi beta"",
""onScreen"":{
""main"":[
""[CO:2][MC:𑴅][XK:[MC:𑴆][MC:𑴄]][MC:𑴇][MC:𑴈][MC:𑴉][MC:𑴊][MC:𑴋][MC:𑴌][MC:𑴍]"",
""[XK:[MC:𑴒][MC:𑵅]][XK:[MC:𑴪][MC:𑵜]][CO:2][XK:[MC:𑴶][MC:𑴹]][CO:1][MC:𑴨][XK:[MC:𑴝][MC:𑵌]][MC:𑴧][CO:2][XK:[MC:𑴲][MC:𑵌]][MC:𑴱][MC:𑴰][CO:1][XK:[MC:𑴢][MC:𑵖]]"",
""[CO:2][MC:𑴯][CO:1][XK:[MC:𑴭][MC:𑵞]][XK:[MC:𑴟][MC:𑵍]][XK:[MC:𑵤][MC:𑵷]][XK:[MC:𑴐][MC:𑵃]][XK:[MC:𑴮][MC:𑵠]][XK:[MC:𑴕][MC:𑵈]][XK:[MC:𑴎][MC:𑵀]][XK:[MC:𑴩][MC:𑵛]]"",
""[SHIFT][XK:[MC:𑴚][MC:𑵏]][XK:[MC:𑴘][MC:𑵎]][XK:[MC:𑴓][MC:𑵆]][XK:[MC:𑴗][MC:𑵋]][XK:[MC:𑴤][MC:𑵘]][XK:[MC:𑴡][MC:𑵕]][XK:[MC:𑴦][MC:𑵚]][CO:2][MC:𑴿][DEL]"",
""[TOOL][ALTGR:[MC:𑵫]][SPACE][][][SYM:[MC:𑵬]][ENTER]""
],

""shifted"":[
""[CO:2][MC:𑵩][XK:[MC:𑴺][MC:𑴺]][MC:𑵰][CO:1][MC:𑴁][CO:2][MC:𑵿][MC:𑵻][MC:𑵼][MC:𑵽][MC:𑵪]꧇"",
""[CO:2][MC:𑴽][XK:[MC:𑴳][MC:𑴵]][CO:1][MC:𑴄][CO:2][XK:[MC:𑴸][MC:𑵷][MC:𑵾]][CO:1][XK:[MC:𑴞][MC:𑵒]][XK:[MC:𑵧][MC:𑵴][MC:𑵵]][MC:𑵳][MC:𑴂][MC:𑴁][XK:[MC:𑴣][MC:𑵗]]"",
""[MC:𑴀][XK:[MC:𑴬][MC:𑵟]][XK:[MC:𑴠][MC:𑵔]][CO:2][XK:[MC:𑵥][MC:𑵥][MC:𑵦]][CO:1][XK:[MC:𑴑][MC:𑵄]][CO:2][MC:𑴾][CO:1][XK:[MC:𑴖][MC:𑵊][MC:𑵉]][XK:[MC:𑴏][MC:𑵂][MC:𑵁]][CO:2][XK:[MC:𑵡][MC:𑵢][MC:𑵣]]"",
""[SHIFT][XK:[MC:𑴛][MC:𑵏]][XK:[MC:𑴙][MC:𑵎]][XK:[MC:𑴔][MC:𑵇]][MC:𑵶][XK:[MC:𑴥][MC:𑵙]][XK:[MC:𑴜][MC:𑵐]][XK:[MC:𑴫][MC:𑵝]][CO:2][XK:[MC:𑵭][MC:𑵮]][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]zxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}} "
UTDbxZsv,MOK layout aksara kawi u/ font AksaraNusantara,dksetiavan,YAML,Wednesday 20th of September 2023 11:58:33 AM CDT,"{
""title"":""aksara kawi ufA"",
""onScreen"":{
""main"":[
""᪑᪒᪓᪔᪕᪖᪗᪘᪙᪐"",
""ᩧᩱᩤᩦᩪᨷᩉᨣᨰᨩᨯᨬ"",
""ᩣᩮ᩠ᩥᩩᨸᩁᨠᨴᨧᨲᨦ"",
""[SHIFT]ᩡᩳᨾᨶᩅᩃᩈᨿ[MC:᩠ᩁ][DEL]"",
""[TOOL][ALTGR:᪨][SPACE][][][SYM:᪩][ENTER]""
],
""shifted"":[
""᪣᪥᪥᪠᪠᪡᪡᪢᪢ᪧ"",
""[MC:ᩋᩧ]ᩐᩋᩀᩏᨽᨤᨥᨱᨫᨭᨢ"",
""ᩒᩑ᩠ᩍᩏᨹᩂᨡᨵᨨᨳᩄ"",
""[SHIFT]᩺ᩳ᪭ᨮᩎᩊᩇᩆᩛ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]ˉzxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}"
Ju8WLnFe,MOK layout aksara kawi unicode,dksetiavan,YAML,Wednesday 20th of September 2023 11:57:16 AM CDT,"{
""title"":""aksara kawi"",
""onScreen"":{
""main"":[
""[MC:𑽑][MC:𑽒][MC:𑽓][MC:𑽔][MC:𑽕][MC:𑽖][MC:𑽗][MC:𑽘][MC:𑽙][MC:𑽐]"",
""[MC:𑽀][MC:𑼿][MC:𑼴][MC:𑼷][MC:𑼹][MC:𑼨][MC:𑼲][MC:𑼔][MC:𑼣][MC:𑼙][MC:𑼞][MC:𑼛]"",
""[MC:𑼵][MC:𑼾][MC:𑽁][MC:𑼶][MC:𑼸][MC:𑼦][MC:𑼬][MC:𑼒][MC:𑼡][MC:𑼗][MC:𑼜][MC:𑼖]"",
""[SHIFT][MC:𑼃][MC:𑼁][MC:𑼪][MC:𑼥][MC:𑼮][MC:𑼭][MC:𑼱][MC:𑼫][DEL]"",
""[TOOL][ALTGR:[MC:𑽃]][SPACE][][][SYM:[MC:𑽄]][ENTER]""
],
""shifted"":[
""[MC:𑽅][MC:𑽆][MC:𑽈][MC:𑽉][MC:𑽊][MC:𑽋][MC:𑽌][MC:𑽍][MC:𑽎][MC:𑽏]"",
""[MC:𑼄][MC:𑼏][MC:𑼅][MC:𑼇][MC:𑼉][MC:𑼩][MC:𑽇][MC:𑼕][MC:𑼤][MC:𑼚][MC:𑼟][MC:𑼳]"",
""[MC:𑼐][MC:𑼎][MC:𑽂][MC:𑼆][MC:𑼈][MC:𑼧][MC:𑼂][MC:𑼓][MC:𑼢][MC:𑼘][MC:𑼝][MC:𑼺]"",
""[SHIFT][MC:𑼊][MC:𑼋][MC:𑼀][MC:𑼠][MC:𑼌][MC:𑼍][MC:𑼯][MC:𑼰][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]ˉzxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}"
fJgBf5e9,ultimate snowybot,coinwalk,JavaScript,Wednesday 20th of September 2023 11:52:45 AM CDT,"
 
var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/3000).toFixed(8));
var moon = baby;
var taget = (measly*2000);
var tens = (baby*10);
var sevens = (baby*6.5);
var eights = (baby*7.5);
var threes = (baby*3.5);
var nobbolance = 0;
var couunt = 0;
var baboon = false;
var high = measly;  
var foilhat = 0;
var olzerer = measly;
var upper = 6.9;
var downer = 2.9;
var beatle = false;
var zoom = (((Math.floor(measly/tens))*tens)-tens);
var olly = measly;
var muel = parseFloat(document.getElementById('pct_balance').value);
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(((Math.floor(zuel/tens))*tens)+sevens))&&(zuel<(((Math.floor(zuel/tens))*tens)+eights))&&(zuel>nobbolance)&&(zuel>zoom)) {
    moon = Number((moon*2).toFixed(8));
    couunt = couunt+1;    
    foilhat = foilhat+1;
    nobbolance = parseFloat(zuel);  
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = parseFloat(zuel); 
}
if ((zuel>(((Math.floor(zuel/tens))*tens)+sevens))&&(zuel<(((Math.floor(zuel/tens))*tens)+eights))&&(zuel<nobbolance)&&(zuel>zoom)) {
    moon = Number((moon*2).toFixed(8));
    couunt = couunt+1;    
    foilhat = foilhat+1;
    nobbolance = parseFloat(zuel); 
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = parseFloat(zuel); 
}
if ((couunt>0)&&(zuel<olly)&&(zuel<(((Math.floor(zuel/tens))*tens)+threes))){
    zoom = parseFloat(zuel); 
    couunt = 0;  
    nobbolance = 0;
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if (zuel>olly){
    olly =  ((Math.floor((parseFloat(zuel))/tens))*tens)
}
if ((foilhat>1)&&(zuel>olzerer)){
    olzerer = parseFloat(zuel); 
    beatle = true;
    foilhat = 0;
}
if ((beatle)&&(zuel>olzerer)&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    couunt = 0;
    foilhat = 0;
    nobbolance = 0;
    upper = 6.9;
    downer = 2.9;
    beatle = false; 
    olzerer = parseFloat(zuel);     
    zoom =  (((Math.floor((parseFloat(zuel))/tens))*tens)-tens);
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
wUxU6CJ1,danger money snowybot,coinwalk,JavaScript,Wednesday 20th of September 2023 11:46:03 AM CDT,"
 
var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/3000).toFixed(8));
var moon = baby;
var taget = (measly*2000);
var tens = (baby*10);
var sevens = (baby*6.5);
var eights = (baby*7.5);
var threes = (baby*3.5);
var nobbolance = 0;
var couunt = 0;
var baboon = false;
var high = measly;  
var foilhat = 0;
var olzerer = measly;
var upper = 6.9;
var downer = 2.9;
var beatle = false;
var zoom = (((Math.floor(measly/tens))*tens)-tens);
var olly = measly;
var muel = parseFloat(document.getElementById('pct_balance').value);
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if ((zuel>(((Math.floor(zuel/tens))*tens)+sevens))&&(zuel<(((Math.floor(zuel/tens))*tens)+eights))&&(zuel>nobbolance)&&(zuel>zoom)) {
    moon = Number((moon*2).toFixed(8));
    couunt = couunt+1;    
    foilhat = foilhat+1;
    nobbolance = parseFloat(zuel);  
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = parseFloat(zuel); 
}
if ((zuel>(((Math.floor(zuel/tens))*tens)+sevens))&&(zuel<(((Math.floor(zuel/tens))*tens)+eights))&&(zuel<nobbolance)&&(zuel>zoom)) {
    moon = Number((moon*2).toFixed(8));
    couunt = couunt+1;    
    foilhat = foilhat+1;
    nobbolance = parseFloat(zuel); 
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
    zoom = parseFloat(zuel); 
}
if ((couunt>0)&&(zuel<olly)&&(zuel<(((Math.floor(zuel/tens))*tens)+threes))){
    zoom = parseFloat(zuel); 
    couunt = 0;  
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
if (zuel>olly){
    olly =  ((Math.floor((parseFloat(zuel))/tens))*tens)
}
if ((foilhat>1)&&(zuel>olzerer)){
    olzerer = parseFloat(zuel); 
    beatle = true;
    foilhat = 0;
}
if ((beatle)&&(zuel>olzerer)&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    couunt = 0;
    foilhat = 0;
    nobbolance = 0;
    upper = 6.9;
    downer = 2.9;
    beatle = false; 
    olzerer = parseFloat(zuel);     
    zoom =  (((Math.floor((parseFloat(zuel))/tens))*tens)-tens);
    olly = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(49.5);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
g2BRSgVt,MOK layout KBJ-2 u/ bukan font AksaraNusantara,dksetiavan,YAML,Wednesday 20th of September 2023 11:44:12 AM CDT,"{
""title"":""KBJ-2 ubfA"",
""onScreen"":{
""main"":[
""ꦲꦤꦕꦫꦏꦢꦠꦱꦮꦭ"",
""ꦥꦝꦗꦪꦚꦩꦒꦧꦛꦔ"",
""ꦼꦺꦶ[CO:2][MC:ꦺꦴ]ꦸꦂꦁꦃ꧀ꦉ"",
""[SHIFT]ꦟꦑꦡꦯꦦꦘꦓꦨ꧇[DEL]"",
""[TOOL][ALTGR:꧈][SPACE][][][SYM:꧉][ENTER]""
],

""shifted"":[
""[MC:꧀ꦲ][MC:꧀ꦤ][MC:꧀ꦕ][MC:꧀ꦫ][MC:꧀ꦏ][MC:꧀ꦢ][MC:꧀ꦠ][MC:꧀ꦱ][MC:꧀ꦮ][MC:꧀ꦭ]"",
""[MC:꧀ꦥ][MC:꧀ꦝ][MC:꧀ꦗ][MC:꧀ꦪ][MC:꧀ꦚ][MC:꧀ꦩ][MC:꧀ꦒ][MC:꧀ꦧ][MC:꧀ꦛ][MC:꧀ꦔ]"",
""ꦄꦌꦆꦎꦈꦿꦽ꦳ꦾꦊ"",
""[SHIFT][MC:꧀ꦟ][MC:꧀ꦑ][MC:꧀ꦡ][MC:꧀ꦯ][MC:꧀ꦦ][MC:꧀ꦘ][MC:꧀ꦓ][MC:꧀ꦨ][123][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""num"":[
""꧁꧑꧒꧓꧂꧃[Del]"",
""꧌꧔꧕꧖꧍꧄꧞"",
""꧊꧗꧘꧙꧋꧅꧟"",
""[Lock][ALTGR:꧈]꧐[MC:꧇꧇[LEFT]:꧇… ꧇][][SYM:꧉][Enter]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]ˉzxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
EVBTBhc5,MOK layout KBJ-1 u/ font AksaraNusantara,dksetiavan,YAML,Wednesday 20th of September 2023 11:42:18 AM CDT,"{
""title"":""KBJ-1 ufA"",
""onScreen"":{
""main"":[
""ꦲꦤꦕꦫꦏꦢꦠꦱꦮꦭ"",
""ꦥꦝꦗꦪꦚꦩꦒꦧꦛꦔ"",
""ꦼꦺꦶ[CO:2][MC:ꦺꦴ]ꦸꦂꦁꦃ꧀[CO:1]ꦉ"",
""[SHIFT]ꦟꦑꦡꦯꦦꦘꦓꦨ꧇[DEL]"",
""[TOOL][ALTGR:꧈][SPACE][][][SYM:꧉][ENTER]""
],

""shifted"":[
""[MC:꧀ꦲ][MC:꧀ꦤ][MC:꧀ꦕ][MC:꧀ꦫ][MC:꧀ꦏ][MC:꧀ꦢ][MC:꧀ꦠ][MC:꧀ꦰ][MC:꧀ꦮ][MC:꧀ꦭ]"",
""[MC:꧀ꦥ][MC:꧀ꦝ][MC:꧀ꦗ][MC:꧀ꦪ][MC:꧀ꦤꦾ][MC:꧀ꦩ][MC:꧀ꦒ][MC:꧀ꦨ][MC:꧀ꦛ][MC:꧀ꦔ]"",
""ꦄꦌꦆꦎꦈꦿꦽ꦳ꦾꦊ"",
""[SHIFT][MC:꧀ꦟ][MC:꧀ꦑ][MC:꧀ꦡ][MC:꧀ꦯ][MC:꧀ꦦ][MC:꧀ꦘ][MC:꧀ꦓ][MC:꧀‍ꦨ][123][DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""num"":[
""꧁꧑꧒꧓꧂꧃[Del]"",
""꧌꧔꧕꧖꧍꧄꧞"",
""꧊꧗꧘꧙꧋꧅꧟"",
""[Lock][ALTGR:꧈]꧐[MC:꧇꧇[LEFT]:꧇… ꧇][][SYM:꧉][Enter]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]ˉzxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    
    "
HzYfgKbg,One-time pad,psychotrip,C++,Wednesday 20th of September 2023 11:35:36 AM CDT,"/*
 * Вариант 9
 * Напишите программу, позволяющую зашифровать и расшифровать сообщения с использованием одноразового блокнота.
 * Входные и выходные данные запишите в файл типа .txt.
 */

#include <iostream>
#include <fstream>
#include <windows.h>

using namespace std;

// Генерация ключа
string generateKey(int length)
{
    string key;
    for (int i = 0; i < length; i++)
    {
        char randomChar = 'A' + (rand() % 26); // 'A' - чтобы были заглавные буквы ('a' - строчные)
                                               // 26 - столько букв в английском алфавите (если значение больше, то в ключе будут присутствовать служебные символы)
        key += randomChar;
    }

    return key;
}

// Шифровка сообщения
void encryptMessage(string message, string key, string& encryptedMessage)
{
    for (int i = 0; i < message.length(); i++)
        encryptedMessage += message[i] ^ key[i];
}

// Расшифровка сообщения
void decryptMessage(string encryptedMessage, string key, string& decryptedMessage)
{
    for (int i = 0; i < encryptedMessage.length(); i++)
        decryptedMessage += encryptedMessage[i] ^ key[i];
}

int main()
{
    SetConsoleOutputCP(CP_UTF8);
    srand(time(NULL));

    string message, encryptedMessage, decryptedMessage;

    ifstream FileIn(""input.txt"");
    if (FileIn.is_open())
    {
        getline(FileIn, message);
        FileIn.close();
    }
    else
    {
        cerr << ""Невозможно открыть input.txt"" << endl;
        return 1;
    }

    cout << ""Исходное сообщение (файл input.txt): "" << message << endl;

    string key = generateKey(message.length());
    cout << ""Сгенерированный ключ (файл key.txt): "" << key << endl;

    encryptMessage(message, key, encryptedMessage);
    cout << ""Зашифрованное сообщение (файл encrypted.txt): "" << encryptedMessage << endl;

    decryptMessage(encryptedMessage, key, decryptedMessage);
    cout << ""Расшифрованное сообщение (файл output.txt): "" << decryptedMessage << endl;

    ofstream FileKey(""key.txt"");
    if (FileKey.is_open())
    {
        FileKey << key;
        FileKey.close();
    }
    else
    {
        cerr << ""Невозможно открыть key.txt"" << endl;
        return 1;
    }

    ofstream FileEn(""encrypted.txt"");
    if (FileEn.is_open())
    {
        FileEn << encryptedMessage;
        FileEn.close();
    }
    else
    {
        cerr << ""Невозможно открыть encrypted.txt"" << endl;
        return 1;
    }

    ofstream FileOut(""output.txt"");
    if (FileOut.is_open())
    {
        FileOut << decryptedMessage;
        FileOut.close();
    }
    else
    {
        cerr << ""Невозможно открыть output.txt"" << endl;
        return 1;
    }

    system(""PAUSE"");
    return 0;
}"
pDtrNF6v,MOK layout jawa AOSP,dksetiavan,YAML,Wednesday 20th of September 2023 11:33:43 AM CDT,"{
""title"":""Jawa AOSP"",
""onScreen"":{
""main"":[
""[XK:[MC:ꦻꦴ][MC:ꦍꦴ][MC:ꦄꦻꦴ]꧑1][XK:ꦻꦍ[MC:ꦄꦻ]꧒2][XK:ꦴ3[MC:ꦄꦴ]꧓][XK:ꦷ4ꦇ[MC:ꦄꦷ]꧔][XK:ꦹ5[MC:ꦈꦴ][MC:ꦄꦹ]꧕][XK:ꦧ6ꦨ꧖][XK:ꦲ꧗7][XK:ꦒꦓ8꧘][XK:ꦢ9ꦣ꧙][XK:ꦗ0꧐ꦘꦙ][XK:ꦝꦞ]"",
""[XK:[MC:ꦺꦴ]ꦵꦎ[MC:ꦄꦺꦴ][MC:ꦄꦵ]][XK:ꦺꦌ[MC:ꦄꦺ]][XK:ꦼꦄ[MC:ꦄꦼ]][XK:ꦶꦅꦆ[MC:ꦄꦶ]][XK:ꦸꦈ[MC:ꦄꦸ]][XK:ꦥꦦ][XK:ꦫꦉꦬꦿꦽ][XK:ꦏꦑꦐ][XK:ꦠꦡ][XK:ꦕꦖ][XK:ꦛꦜ]"",
""[XK:꧀ꦂꦁꦃꦀ][XK:ꦔꦁ]ꦩ[XK:ꦤꦟ][XK:ꦚ[MC:ꦤꦾ]][XK:ꦭꦊꦋ]ꦰ[XK:ꦱꦯ][XK:ꦪꦾ][XK:꧈꧉][DEL]"",
""[123],[LANGS][SPACE][][][][][XK:.,&%+\""-:'@;/()#!,?][ENTER]""
],

""sym"":[
""[MC:꧅꧉ꦧ꧀ꦖ꧉꧅][MC:꧅꧉ꦟ꧀ꦢꦿ꧉꧅][MC:꧅꧉ꦆ꧉꧅]"",
""@#[XK:₹₱£¥€$¢][XK:%‰]&[XK:-—_–·][XK:+±][XK:(<{[][XK:)>}]"",
""[SHIFT][XK:*†‡★][XK:\"" „“”«»][XK:'‚‘’‹›]:;[XK:!¡][XK:?¿][DEL]"",
""[LOCK],_[SPACE][][][XK:.…][ENTER]""
],

""symShifted"":[
""~`|[XK:•♣♠♪♥♦]√[XK:πΠ]÷×[XK:¶§]∆"",
""£€$¢[XK:^←↑↓→][XK:°′″][XK:=∞≠≈]{}"",
""[123]\\©®™℅[LB][RB][DEL]"",
""[EDIT]‍[XK:<‹≤«][SPACE][][][XK:>›≥»]‌[ENTER]""
],

""num"":[
""[XK:1½⅓¼⅛][XK:2ꧏ²⅔][XK:3⅜³¾][XK:4⁴][XK:5⅝]6[XK:7⅞]89[XK:0∅ⁿ]"",
""꧇꧊꧞꧟͜꧆꧈꧉꧋꦳"",
""[SYM]꧁꧌꧃꧃꧄꧄꧅꧅꧍꧂[DEL]"",
""[TOOL][SPACE][][][][XK:‍‌]""
]
}
}
    "
xH5kFrHi,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Wednesday 20th of September 2023 11:33:39 AM CDT,"Pasted at: 20/09/2023 17:33
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
sGcyDjKj,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 20th of September 2023 11:33:38 AM CDT,"Pasted at: 20/09/2023 17:33
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
b3QTkmLm,MOK layout kaganga jawa,dksetiavan,YAML,Wednesday 20th of September 2023 11:30:06 AM CDT,"{
  ""title"":""ka_ga_nga"",
   ""onScreen"":{
    ""main"":[
""[3+2:ꦏ ꦑꦶ][3+2:ꦒ ꦓꦷ][3+2:ꦔ ꦐꦼ][3+2:ꦕ ꦖꦸ][3+2:ꦗ ꦙꦹ][3+2:ꦚ ꦘꦴ]"",
""[3+2:ꦛ ꦜꦺ][3+2:ꦝ ꦞꦻ][3+2:ꦟ ꦬꦵ][3+2:ꦠ ꦡꦁ][3+2:ꦢ ꦣꦂ][3+2:ꦤ ꦲꦃ]"",
""[3+2:ꦥ ꦦꦿ][3+2:ꦧ ꦨꦽ][3+2:ꦩ ꦪꦾ][3+2:ꦫ ꦭ꦳][3+2:ꦮ ꦯ꧇][3+2:ꦰ ꦱꦀ]"",
""[CO:2][123:ꧏ][CO:1][3+2:ꦉ ꦊꦋ ][3+2:ꦄ ꦎꦈ][3+2:ꦅ ꦆꦇ][3+2:ꦌ ꦍ꧀][CO:2][DEL]"",
""[TOOL][ALTGR:꧈][SPACE][][][][SYM:꧉][ENTER]""
],

""num"":[
""꧁꧑꧒꧓꧂꧃[DEL]"",
""꧌꧔꧕꧖꧍꧄꧞"",
""꧊꧗꧘꧙꧋꧅꧟"",
""[LOCK][ALTGR:꧇]꧐[SPACE][][][SYM:꧇][ENTER]""
],
""sym"":[
""꧁꧃꧌꧄꧍꧅꧂"",
""[MC:꧅꧉ꦧ꧀ꦖ꧉꧅][MC:꧅꧉ꦟ꧀ꦢꦿ꧉꧅][MC:꧅꧉ꦆ꧉꧅]"",
""[MC:꧌꧍[LEFT]:꧌…꧍]꧊ꦀ꧞꧟͜꧆꧈꧉꧋[MC:꧁꧂[LEFT]:꧁… ꧂]"",
""[SHIFT]([,![MC:ꦎꦴꦀ][]?.])[DEL]"",
""[LOCK][ALTGR:[MC:꧉꧆꧉]][SPACE][][][SYM:[MC:꧋꧆꧋]][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]zxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]
}
}
    
    "
hJv6Fraq,MOK layout jawa1baris,dksetiavan,YAML,Wednesday 20th of September 2023 11:27:39 AM CDT,"{
""title"":""jawa1baris"",
""onScreen"":{
""main"":[
""[4D:ꦏꦑꦒꦓꦔ][4D:ꦕꦖꦗꦙꦚ][4D:ꦛꦜꦝꦞꦟ][4D:ꦠꦡꦢꦣꦤ][4D:ꦥꦦꦧꦨꦘ][4D:ꦩꦪꦫꦬꦭ][4D:ꦮꦯꦰꦱꦲ][4D:ꦼꦶꦸꦺꦴ][4D:꦳ꦷꦹꦻꦵ][4D:ꦄꦆꦈꦌꦎ][4D:ꦉꦊꦅꦇꦍ][4D:ꦿꦽꦾꦋꦐ][4D:꧀ꦁꦂꦃꦀ]"",
""[TOOL][SHIFT][ALTGR:꧈][SPACE][][][SYM:꧉][DEL][ENTER]""
],

""shifted"":[
""꧇꧑꧒꧓꧔꧕꧖꧗꧘꧙꧐ꧏ꧇"",
""[LOCK][SHIFT][ALTGR:‍][SPACE][][][SYM:‌][DEL][ENTER]""
],
""sym"":[
""꧁꧃꧌꧄꧍꧅꧂꧊꧞꧟͜꧆꧋"",
""[LOCK][123][ALTGR:[MC:꧉꧆꧉]][SPACE][][][SYM:[MC:꧋꧆꧋]][DEL][ENTER]""
],
""altGr"":[
""[4D:abcde][4D:ABCDE][4D:fghij][4D:FGHIJ][4D:klmno][4D:KLMNO][4D:pqrst][4D:PQRST][4D:uvwxy][4D:UVWXY][4D:zŋñḍṭ][4D:ZŊÑḌṬ][4D:˚ˆ·ˋ´]"",
""[LOCK][123][ALTGR:,][SPACE][][][SYM:.][DEL][ENTER]""
],
""num"":[
""[XK:+-*/#%‰‱()]1234567890[XK:$£¥€₹]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][DEL][ENTER]""
]}}
    "
7jgGX8X2,MOK layout jawasimpel,dksetiavan,YAML,Wednesday 20th of September 2023 11:26:31 AM CDT,"{
""title"":""jawasimpel"",
""onScreen"":{
""main"":[
""ꦺꦴꦲꦭꦥꦮꦪ꧑꧒꧓"",
""ꦸꦶꦤꦏꦕꦱꦢ꧔꧕꧖"",
""ꦿꦼꦔꦧꦚꦫꦒ꧗꧘꧙"",
""[SHIFT]꧀ꦛꦝꦠꦩꦗꦉ꧐[DEL]"",
""[TOOL][ALTGR:꧈][SPACE][][][SYM:꧉][ENTER]""
],

""shifted"":[
""ꦻꦵꦃꦂꦁ꧇ꦬꦄꦌꦍ"",
""ꦹꦷꦨꦯꦰꦓꦖꦅꦆꦇ"",
""ꦽ꦳ꦣꦞꦦꦜꦙꦈꦎꦋ"",
""[SHIFT]ꦾꦐꦘꦡꦟꦑꦊꧏ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],
""sym"":[
""꧁꧃꧌꧄꧍꧅꧂"",
""[MC:꧅꧉ꦧ꧀ꦖ꧉꧅][MC:꧅꧉ꦟ꧀ꦢꦿ꧉꧅][MC:꧅꧉ꦆ꧉꧅]"",
""[MC:꧌꧍[LEFT]:꧌…꧍]꧊ꦀ꧞꧟͜꧆꧈꧉꧋[MC:꧁꧂[LEFT]:꧁…꧂]"",
""[SHIFT]([,![MC:ꦎꦴꦀ][]?.])[DEL]"",
""[LOCK][ALTGR:[MC:꧉꧆꧉]][SPACE][][][SYM:[MC:꧋꧆꧋]][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]zxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
UCQSdkYZ,Untitled,Skos_Martren,C++,Wednesday 20th of September 2023 11:23:41 AM CDT,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        
        ListNode * Slow = head;
        ListNode * Fast = head;

        while(true){

            if(Fast == nullptr){return false;}
            Slow = Slow->next;
            Fast = Fast->next;
            if(Fast == nullptr){return false;}
            Fast = Fast->next;
            if(Fast->val == Slow->val){return true;}

        }

        return true;
    }
};"
b6xLKRyf,React + Mobx: Changing object inside array,moskalenco_a,JavaScript,Wednesday 20th of September 2023 11:23:36 AM CDT,"// TodosStore.js
import { observable, makeAutoObservable } from 'mobx';

class TodosStore {
  todos = [
    { text: 'Learn CSS', done: false },
    { text: 'Learn JS', done: true },
    { text: 'Learn React', done: false },
    { text: 'Learn Mobx', done: false },
  ]

  constructor() {
    makeAutoObservable(this);
  }

  remove = (itemIndex) => {
    this.todos.splice(itemIndex, 1);
  }

  // how to mutate object in array ?
  makeDone = (itemIndex) => {
    const { done } = this.todos[itemIndex];
    this.todos[itemIndex].done = !done;
    // ^ that code doesn't works
    // let item = this.todos[itemIndex];
    // item.done = !done;
    // this.todos.splice(itemIndex, 1, item);
  }

  edit = (itemIndex, itemText) => {
    let item = this.todos[itemIndex];
    item.text = itemText;
    this.todos.splice(itemIndex, 1, item);
  }

  get items() {
    return this.todos;
  }
}

export const todosStore = new TodosStore();

// App.js
import { observer } from 'mobx-react-lite';
import { todosStore } from './TodosStore';
import TodoItem from './TodoItem';

const App = observer(() => {
  const items = todosStore.items;
  return items.map((todo, index) => {
    const edit = (text) => todosStore.edit(index, text);
    const remove = () => todosStore.remove(index);
    const done = () => todosStore.makeDone(index);
    const actionProps = { edit, remove, done };
    return (
      <TodoItem item={todo} {...actionProps} />
    );
  })
});

export default App;

// TodoItem.js
import { useState } from 'react';
import styles from './TodoItem.module.css';

const TodoItem = (props) => {
  const { item } = props;
  const { edit, remove, done } = props;
  const textClassName = item.done ? styles.done : '';

  const [isEditable, setIsEditable] = useState(false);
  // const [text, setText] = useState(item.text);

  const onEdit = (e) => {
    if (isEditable)
      edit(e.target.value);
    setIsEditable(prev => !prev);
  }

  return (
    <div className={styles.todoItem}>
      <button>Edit</button>
      <button onClick={remove}>Remove</button>
      <button onClick={done}>Done</button>
      {
        isEditable ?
          <input type=""text"" value={item.text} onChange={onEdit} /> :
          <p className={textClassName}>{item.text}</p>
      }
    </div>
  );
};

export default TodoItem;"
Z6bt70rb,MOK layout cacarakan sunda,dksetiavan,YAML,Wednesday 20th of September 2023 11:19:21 AM CDT,"{
""title"":""cacarakan sunda"",
""onScreen"":{
""main"":[
""꧑꧒꧓꧔꧕꧖꧗꧘꧙꧐"",
""ꦔꦮꦺꦫꦠꦪꦸꦶꦴꦥ"",
""ꦼꦱꦝꦉꦒꦲꦗꦏꦭꦿ"",
""[CO:2][MC:ꦼꦴ][CO:1]ꦢꦛꦕ[MC: ꦤꦾ]ꦧꦤꦩ[CO:2]꧀[MC:꧀ꦲ꦳]"",
""[TOOL][SHIFT][ALTGR:꧈][SPACE][][][SYM:꧉][DEL][ENTER]""
],

""shifted"":[
""ꦷꦻꦍꦬꦐꦇꦅꦵ꧇꦳"",
""ꦁꦹꦌꦂꦡꦾꦈꦆꦎꦦ"",
""ꦄꦰꦞꦊꦓꦃꦙꦑꦋꦽ"",
""[CO:2][MC:ꦼꦵ][CO:1]ꦣꦜꦖꦚꦨꦟꦯꦘ"",
""[LOCK][SHIFT][ALTGR:‍][SPACE][][][SYM:‌][DEL][ENTER]""
],
""sym"":[
""꧁꧃꧌꧄꧍꧅꧂"",
""[MC:꧅꧉ꦧ꧀ꦖ꧉꧅][MC:꧅꧉ꦟ꧀ꦢꦿ꧉꧅][MC:꧅꧉ꦆ꧉꧅]"",
""[MC:꧌꧍[LEFT]:꧌…꧍]꧊ꦀ꧞꧟͜꧆꧈꧉꧋[MC:꧁꧂[LEFT]:꧁… ꧂]"",
""[SHIFT]([,![MC:ꦎꦴꦀ][]?.])[DEL]"",
""[LOCK][ALTGR:[MC:꧉꧆꧉]][SPACE][][][SYM:[MC:꧋꧆꧋]][ENTER]""
],
""altGr"":[
""˚1234567890ˆ"",
""qwertyuiop·"",
""asdfghjklŋˋ"",
""[SHIFT]ˉzxcvbnm´[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    
    "
