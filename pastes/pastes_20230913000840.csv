id,title,username,language,date,content
r8bwecxB,Blacklist,G90JMX195,JSON,Tuesday 12th of September 2023 05:37:57 PM CDT,4733917247
yFTn3nsY,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 05:36:35 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }

 ll prefix[10000001]{},mini=LLONG_MAX;

 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n,k;
 cin>>n>>k;
 vector<int>v(n+1);
 for(int i=1;i<n+1;i++){
  cin>>v[i];
 }
 ll l=1,r=l+k-1,idx=0;
 for(int i=1;i<=n;i++){
  prefix[i]=prefix[i-1]+v[i];
 }
 for(int i=l;i<=r;i++){
  if(mini>=prefix[r]-prefix[l-1]){
    mini=prefix[r]-prefix[l-1];
    idx=l;
  }
  l++;
  r++;
 }cout<<idx<<""\n"";









 return 0;
}

"
rtbua2W3,Eval 2,amitdutta121,C++,Tuesday 12th of September 2023 05:36:10 PM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>
#include<bitset>

using namespace std;

double eval(int *pj);

int* RandomSolutionGenerator(){
	int* solution = new int[100];
	
	for(int i=0; i<100; i++){
		solution[i] = rand() %2;
	}
	
	return solution;
}

double Evaluate(int* solution){
	return eval(solution);
}

void Modify(int* solution){
	int index = rand()%100;
	solution[index] = 1 - solution[index];
}



void Modify(int* solution, double mutationRate){
	for(int i=0; i<100; i++){
		double randomVal = static_cast<double>(rand())/ RAND_MAX;
		
		if(randomVal < mutationRate){
			solution[i] = 1- solution[i];
		}
	}
}

void PrintSolution(int* solution){
	for(int i=0; i<100; i++){
		cout << solution[i];
	}
	
	cout << endl;
}




int main()
{
	srand(time(0));
	
	int* solutionBase = RandomSolutionGenerator();
	double fitnessBase =  Evaluate(solutionBase);
	
	
	bool done = false;
	int* solutionNew;
	
	while(!done){
		solutionNew = new int[100];
		
		for(int i=0; i<100; i++){
			solutionNew[i] = solutionBase[i];
		}
		
		Modify(solutionNew, 0.01);
		
		
		double fitnessNew = Evaluate(solutionNew);
		
		cout << fitnessNew << endl;
		
		if(fitnessNew  >= fitnessBase){
			delete[] solutionBase;
			solutionBase = solutionNew;
			fitnessBase = fitnessNew;
		}
		
		
		if(fitnessNew >=70){
			done = true;
			PrintSolution(solutionNew);
		}
	}
	
	for(int i=0; i<1073741823; i++){
	 	    int number = i; // Replace with your integer value
		    int numBits = 30; // Number of bits for a 30-bit binary representation

		    std::bitset<30> binaryRepresentation(number);


		    for (int i = 0; i < numBits; ++i) {
			solutionNew[i] = binaryRepresentation[numBits - 1 - i];
		    }
		    double fitnessNew = Evaluate(solutionNew);
		    
		    cout << ""Iteration: ""<< i << "" Fitness: "" << fitnessNew <<endl;
		    if(fitnessNew >=100){
		    	break;
		    }
		    
	}
	
	delete[] solutionBase;
	
	return 0;
}"
gttzpS57,14. Password Generator,Spocoman,C++,Tuesday 12th of September 2023 05:22:49 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int n, l;
    cin >> n >> l;

    for (int a = 1; a <= n; a++){
        for (int b = 1; b <= n; b++) {
            for (int c = 97; c < 97 + l; c++) {
                for (int d = 97; d < 97 + l; d++) {
                    for (int e = 1; e <= n; e++) {
                        if (a < e && e > b) {
                            cout << a << b << (char)c << (char)d << e << "" "";
                        }
                    }
                }
            }
        }
    }
    return 0;
}"
AgpwwcdR,13. Prime Pairs,Spocoman,C++,Tuesday 12th of September 2023 05:18:18 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int firstStartNum, secondStartNum, firstEndNum, secondEndNum;
    cin >> firstStartNum >> secondStartNum >> firstEndNum >> secondEndNum;

    for (int i = firstStartNum; i <= firstStartNum + firstEndNum; i++) {
        for (int j = secondStartNum; j <= secondStartNum + secondEndNum; j++) {
            bool isFirstPrime = true;
            bool isSecondPrime = true;

            for (int k = 2; k <= sqrt(i); k++) {
                if (i % k == 0) {
                    isFirstPrime = false;
                    break;
                }
            }

            for (int k = 2; k <= sqrt(j); k++) {
                if (j % k == 0) {
                    isSecondPrime = false;
                    break;
                }
            }

            if (isFirstPrime && isSecondPrime) {
                cout << i << j << endl;
            }
        }
    }
    return 0;
}"
9tJdPWzA,12. The song of the wheels,Spocoman,C++,Tuesday 12th of September 2023 05:07:58 PM CDT,"#include <iostream>
#include<string>

using namespace std;

int main() {
    int number, counter = 0;
    cin >> number;

    string print = ""No!"";
    
    for (int a = 1; a <= 9; a++) {
        for (int b = 1; b <= 9; b++) {
            for (int c = 1; c <= 9; c++) {
                for (int d = 1; d <= 9; d++) {
                    if (a * b + c * d == number && a < b && c > d) {
                        cout << a << b << c << d << "" "";
                        counter++;
                        if (counter == 4) {
                            print = ""Password: "" + to_string(a) + to_string(b) + to_string(c) + to_string(d);
                        }
                    }
                }
            }
        }
    }
    cout << ""\n"" << print << endl;
    return 0;
}"
z1wxW9GE,Untitled,ProgMe,C++,Tuesday 12th of September 2023 05:06:20 PM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define l first
#define r second

#define int int64_t
#define double long double

using namespace std;
using namespace __gnu_pbds;

std::mt19937_64 rnd(std::chrono::steady_clock::now().time_since_epoch().count());
std::uniform_real_distribution<double> rnd_double(0, 1);

int nextInt(int r) {  // [0; R)
    return rnd() % r;
}

int nextInt(int l, int r) {  // [L; R)
    return l + rnd() % (r - l);
}

double nextDouble() {  // [0; 1]
    return rnd_double(rnd);
}

double nextDouble(double r) {  // [0; R]
    return r * nextDouble();
}

double nextDouble(double l, double r) {  // [L; R]
    return l + (r - l) * nextDouble();
}

template <typename T>
using Orset = __gnu_pbds::tree<T, __gnu_pbds::null_type, std::less<T>, __gnu_pbds::rb_tree_tag,
        __gnu_pbds::tree_order_statistics_node_update>;

template <typename T>
using Ormultiset =
        __gnu_pbds::tree<T, __gnu_pbds::null_type, std::less_equal<T>, __gnu_pbds::rb_tree_tag,
                __gnu_pbds::tree_order_statistics_node_update>;

constexpr int N = 1e6 + 1;

array<char, N> L;
array<int, N> tin, tout, answers;
array<vector<int>, N> graph;

inline void addEdge(int v, int u) {
    graph[v].push_back(u);
    graph[u].push_back(v);
}

void getTree(vector<int> &euler, int l, int r) {
    int v = euler[l];
    int cur_idx = l + 1;

    while (cur_idx < r) {
        int u = euler[cur_idx];
        addEdge(v, u);
        getTree(euler, tin[u], tout[u]);
        cur_idx = tout[u] + 1;
    }
}

void dfs(int v = 0, int p = -1, int len = 1) {
    for (auto u : graph[v]) {
        if (u != p) {
            if (L[v] == L[u] && v != 0) {
                dfs(u, v, len + 1);
            } else {
                if (v != 0) {
                    answers[u] = len;
                }
                dfs(u, v);
            }
        }
    }
}

void runSolve() {
    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> L[i];
    }

    vector<int> euler(2 * (n + 1));
    for (auto &i : euler) {
        cin >> i;
    }

    for (int i = 1; i <= 2 * n; ++i) {
        int v = euler[i];
        if (!tin[v]) {
            tin[v] = i;
        } else {
            tout[v] = i;
        }
    }

    getTree(euler, 0, 2 * n + 1);
    dfs();

    for (int i = 1; i <= n; i++) {
        cout << answers[i] << ' ';
    }
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
//    cin >> t;
    while (t--) {
        runSolve();
    }
}
"
CFn0vW7p,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 04:57:37 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }

 ll prefix[10000001]{};

 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n,k;
 cin>>n>>k;
 vector<int>v(n+1);
 for(int i=1;i<n+1;i++){
  cin>>v[i];
 }
 int l=1,r=l+k-1,mini=INT_MAX,idx=0;
 for(int i=1;i<=n;i++){
  prefix[i]=prefix[i-1]+v[i];
 }
 while(r<=n){
  if(mini>=prefix[r]-prefix[l-1]){
    mini=prefix[r]-prefix[l-1];
    idx=l;
  }
  l++;
  r++;
 }cout<<idx<<""\n"";









 return 0;
}

"
K6tZPa4A,11. HappyCat Parking,Spocoman,C++,Tuesday 12th of September 2023 04:41:56 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int days, hours;
    cin >> days >> hours;

    double totalPrice = 0;

    for (int i = 1; i <= days; i++) {
        double dayPrice = 0;

        for (int j = 1; j <= hours; j++) {

            if (i % 2 == 0 && j % 2 == 1) {
                dayPrice += 2.50;
            }
            else if (i % 2 == 1 && j % 2 == 0) {
                dayPrice += 1.25;
            }
            else {
                dayPrice++;
            }
        }
        totalPrice += dayPrice;
        printf(""Day: %i - %.2f leva\n"", i, dayPrice);
    }
    printf(""Total: %.2f leva\n"", totalPrice);
    return 0;
}"
4FwfCbB9,10. Profit,Spocoman,C++,Tuesday 12th of September 2023 04:33:29 PM CDT,"#include <iostream>

using namespace std;

int main() {
   
    int oneBGNCoinCount, twoBGNCoinCount, fiveBGNCoinCount, sum;
    cin >> oneBGNCoinCount >> twoBGNCoinCount >> fiveBGNCoinCount >> sum;

    for (int i = 0; i <= oneBGNCoinCount; i++) {
        for (int j = 0; j <= twoBGNCoinCount; j++) {
            for (int k = 0; k <= fiveBGNCoinCount; k++) {
                if (i * 1 + j * 2 + k * 5 == sum) {
                    cout << i << "" * 1 lv. + "" << j << "" * 2 lv. + "" << k << "" * 5 lv. = "" << sum << "" lv.\n"";
                }
            }
        }
    }
    return 0;
}"
QG0NG8Z8,Pro for BloodHoneySin,althindor,CSS,Tuesday 12th of September 2023 04:24:43 PM CDT,"/* Profile by AlthIndor */

:root {
    --level1: #000000;
    --level2: #161616;
    --level3: #2B2B2B;
    --level4: #D9D9D9;
    --level5: #FFFFFF;
    --accent: #0080FF;
}

html, body {
    background: url('https://i.imgur.com/dxS5Cwd.png') fixed center / contain no-repeat #000000;
    height: unset;
    min-height: 100vh;
}

::selection {
    background: var(--level5);
    color: var(--accent);
}

/* Fonts */

@font-face {
    font-family: 'Amarante';
    font-style: normal;
    font-weight: 400;
    src: url('https://fonts.gstatic.com/s/amarante/v28/xMQXuF1KTa6EvGx9bp-wAXs.woff2') format('woff2');
}

@font-face {
    font-family: 'PT Serif';
    font-style: normal;
    font-weight: 400;
    src: url('https://fonts.gstatic.com/s/ptserif/v18/EJRVQgYoZZY2vCFuvAFWzr8.woff2') format('woff2');
}

@font-face {
    font-family: 'PT Serif';
    font-style: normal;
    font-weight: 700;
    src: url('https://fonts.gstatic.com/s/ptserif/v18/EJRSQgYoZZY2vCFuvAnt66qSVys.woff2') format('woff2');
}

/* Header */

#viewer #gaia_header, #viewer #gaia_header ul {background: none !important;}
#viewer #gaia_header {position: absolute !important;}
#gaia_header li {margin: 0 5px;}
#gaia_header li.spacer {display: none !important;}

#viewer #gaia_header ul {
    width: auto !important;
    font: 0/40px 'Amarante', cursive !important;
    padding: 0 10px !important;
}

#gaia_header #header_right {
    float: right;
    display: grid !important;
    grid-auto-flow: column;
}
#header_right li:nth-of-type(4) {grid-column: 2;}

#gaia_header a, #gaia_header a::before {font-size: 14px !important;}
#gaia_header a[href*='edit'], #gaia_header a[href*='report'], #gaia_header a[href*='logout'] {font-size: 0 !important;}
#gaia_header a[href*='edit']::before {content: 'Edit Mine';}
#gaia_header a[href*='report']::before {content: 'Report This';}
#gaia_header a[href*='logout']::before {content: 'Logout';}

#gaia_header a {
    color: var(--level5) !important;
    font-weight: 400;
    text-decoration: none;
    text-transform: uppercase;
}

#gaia_header a:hover {color: var(--accent) !important;}

#header_left img {
    -webkit-mask: url('https://i.imgur.com/5FTB40o.png') no-repeat;
    mask: url('https://i.imgur.com/5FTB40o.png') no-repeat;
    background: var(--level5);
    width: 0;
    height: 17px;
    padding: 0 37px 0 0;
}
#header_left li:nth-of-type(2) a:hover img {background: var(--accent);}

/* Columns */

#columns {
    float: none;
    width: max-content;
    font-size: 0;
    margin: 200px auto 50px auto;
    position: unset;
}
#column_1, #column_3 {width: 240px;}
#column_1 {margin: 0;}

#column_2 {
    width: 540px;
    margin: 0 20px;
}

/* Scrollbars */

#columns ::-webkit-scrollbar {width: 0;}
.panel {scrollbar-width: none;}

/* Panels */

.panel {
    background: #161616C0;
    backdrop-filter: blur(10px);
    color: var(--level4);
    font: 11px/1.7 'PT Serif', serif;
    margin: 0 0 20px 0;
    padding: 0 20px 20px 20px;
    border: 5px solid transparent;
    box-shadow: 0 0 0 1px var(--level1) inset, 0 2px 5px #000000;
    overflow: visible;
}
.panel:last-child {margin: 0;}

.panel h2 {
    background: var(--level1);
    height: 25px;
    color: var(--level5);
    font: 16px/25px 'Amarante', cursive;
    margin: 0 -20px 19px -20px;
    padding: 5px 5px 5px 10px;
}

.panel img:not(.avatarImage), .panel iframe {max-width: 100% !important;}
.panel h3 {border-bottom: 1px dotted currentColor;}
.panel p {margin: 0;}

.panel a {
    color: var(--accent);
    text-decoration: dotted underline;
}
.panel a:hover {color: inherit;}

/* Misc Panel Stuff */

#id_details .forum_userstatus {margin: 15px auto;}
#id_journal p {margin: 0 0 15px 0;}
#id_interests h3, #id_store p {margin: 15px 0 0 0;}
#id_store h3, #id_store p:first-of-type {display: none;}

#id_interests a {text-transform: capitalize;}
#id_interests li::after {content: ',';}
#id_interests li:nth-of-type(n+2):last-child::before {content: 'and ';}
#id_interests li:last-child::after {content: '.';}

/* Avatar Menu */

.forum_userstatus, #avatar_menu {
    background: var(--level4);
    width: 120px;
    border: none;
    box-sizing: border-box;
    overflow: hidden;
}

.forum_userstatus {
    height: 25px;
    padding: 5px;
    border-radius: 3px;
    contain: layout;
}
.forum_userstatus .statuslinks {background: none;}

.forum_userstatus .statuslinks span {
    color: var(--level1) !important;
    font: 400 12px/15px 'Amarante', cursive !important;
    text-transform: uppercase;
}

.pushBox {
    background: url('https://i.imgur.com/UzAXOFf.png') 93px -101px no-repeat;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
}

#avatar_menu  {
    margin-top: -3px;
    padding-top: 3px;
    border-radius: 0 0 3px 3px;
}

#avatar_menu a {
    color: var(--level1);
    font: 10px 'PT Serif', serif;
    text-transform: capitalize;
    padding: 4px;
}

#avatar_menu a:hover {
    background: var(--level2);
    color: var(--level5);
}

#avatar_menu .menu_seperator {
    background: var(--level3) !important;
    width: 118px !important;
    margin: 1px !important;
}

/* Comments */

#alerts_banner, .deletecomment {display: none;}
#alert_container {display: contents;}
#id_comments dd:last-of-type {margin: 0;}

#id_comments dt {
    height: unset;
    line-height: normal;
    margin: 0 0 5px 0;
    padding: 0 0 5px 0;
    border-bottom: 1px dotted currentColor;
}
#id_comments dt a {text-decoration: none;}

#id_comments dd {
    display: grid;
    grid-template: max-content / 60px calc(100% - 60px);
    margin: 0 0 20px 0;
}

#id_comments .dropBox {
    background: var(--level4);
    width: 48px;
    height: 48px;
    margin: 3px 0 0 0;
    border: 1px solid transparent;
    border-radius: 3px;
    overflow: hidden;
}

#id_comments .avatarImage {
    width: 120px;
    height: 150px;
    margin: -30px 0 0 -47px;
}

/* Comments Links */

#id_comments h2 + div, #id_comments h2 ~ p {
    background: var(--level3);
    width: 40px;
    height: 25px;
    text-align: center;
    position: absolute;
    top: 5px;
    border-radius: 3px;
}
#id_comments h2 + div {right: 50px;}
#id_comments h2 ~ p {right: 5px;}

#id_comments h2 + div a, #id_comments h2 ~ p a {
    color: var(--level5);
    font-size: 0;
    text-decoration: none;
}

#id_comments h2 + div a::before, #id_comments h2 ~ p a::before {font: 12px/25px 'Amarante', cursive;}
#id_comments h2 + div a::before {content: 'POST';}
#id_comments h2 ~ p a::before {content: 'VIEW';}

/* Equip and Wish Lists */

#id_equipment, #id_wishlist {
    display: flex;
    flex-flow: row wrap;
    gap: 10px;
    max-height: 205px;
    overflow: hidden auto;
    scroll-padding-top: 54px;
    scroll-snap-type: y mandatory;
}
#id_equipment .clear, #id_wishlist .clear, .premium_sparkle {display: none;}

#id_equipment .item, #id_wishlist .item {
    position: relative;
    scroll-snap-align: start;
}

#id_equipment h2, #id_wishlist h2 {
    flex: 1 0 100%;
    margin-bottom: 9px;
    position: sticky;
    top: 0;
    left: -20px;
    z-index: 1;
}

#id_equipment .item a, #id_wishlist .item a {
    background: var(--level3);
    display: block;
    padding: 5px;
    border-radius: 3px;
}
#id_equipment a:hover, #id_wishlist a:hover {background: var(--accent);}

.owner_checkmark {
    background: var(--level5);
    margin: 0;
    padding: 2px;
    bottom: -2px;
    left: -2px;
    border: 1px solid var(--level0);
    z-index: unset;
}

/* Friends */

#id_friends h2 + div, #id_friends h2 ~ p {display: none;}
#id_friends li, #id_friends .dropBox {border-radius: 3px;}

#id_friends ul {
    display: flex;
    flex-flow: row wrap;
    gap: 10px;
}

#id_friends li {
    background: var(--level3);
    height: 90px;
    position: relative;
    overflow: hidden;
}
#id_friends li:hover {background: var(--accent);}

#id_friends p a {
    width: 100%;
    height: 100%;
    color: inherit;
    text-decoration: none;
    position: absolute;
    line-height: 150px;
    top: 0;
    left: 0;
}

#id_friends .dropBox {
    background: var(--level4);
    width: 48px;
    margin: 10px auto;
    border: 1px solid transparent;
}

/* Visitors */

#id_footprints .item {
    display: flex;
    flex-flow: row nowrap;
}

#id_footprints .item a {
    max-width: 360px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    order: -1;
}

#id_footprints .item::before {
    content: ' visited ';
    white-space: pre;
}
#id_footprints .item::after {content: '.';}

:is(#column_1, #column_3) #id_footprints .item a {max-width: 110px;}
:is(#column_1, #column_3) #id_footprints .item::before {content: ' ';}

/* Misc */

#pictures_container, #texts_container {
    position: absolute;
    top: 200px;
    left: 50%;
}

.spoiler-revealed, .spoiler-control {border-radius: 3px;}
.spoiler-wrapper {padding: 0;}
.spoiler-control-hide {margin: 0 0 10px 0;}

.spoiler-revealed {
    padding: 10px;
    border: 1px dotted currentColor;
}

.spoiler-control {
    background: var(--level3);
    width: 100px;
    height: 25px;
    color: inherit;
    font: inherit;
    border: none;
}
.spoiler-control:hover {background: var(--accent);}"
NwnfLw84,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 04:23:39 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }

 ll prefix[10000001]{};

 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n,k;
 cin>>n>>k;
 vector<int>v(n+1);
 for(int i=1;i<n+1;i++){
  cin>>v[i];
 }
 int l=1,r=l+k-1,mini=INT_MAX,idx=0;
 for(int i=1;i<=n;i++){
  prefix[i]=prefix[i-1]+v[i];
 }
 for(int i=l;i<=r;i++){
  if(mini>=prefix[r]-prefix[l-1]){
    mini=prefix[r]-prefix[l-1];
    idx=l;
  }
  l++;
  r++;
 }cout<<idx<<""\n"";









 return 0;
}

"
dzWdBvhA,09. Sum of Two Numbers,Spocoman,C++,Tuesday 12th of September 2023 04:22:44 PM CDT,"#include <iostream>

using namespace std;

int main() {
   
    int firstNum, secondNum, magicNum, combinations = 0;
    cin >> firstNum >> secondNum >> magicNum;

    bool isFound = false;

    for (int i = firstNum; i <= secondNum; i++) {
        for (int j = firstNum; j <= secondNum; j++) {
            combinations++;
            if (i + j == magicNum) {
                cout << ""Combination N:"" << combinations << "" ("" << i << "" + "" << j << "" = "" << magicNum << "")"" << endl;
                isFound = true;
                break;
            }
        }
        if (isFound) {
            break;
        }
    }
    if (isFound == false) {
        cout << combinations << "" combinations - neither equals "" << magicNum << endl;
    }

    return 0;
}"
yhYuX1fw,pinestore-cc,Xelostar,Lua,Tuesday 12th of September 2023 04:20:07 PM CDT,"
local apiPath = ""https://pinestore.cc/api/""

if not fs.exists(""installed"") then
	fs.makeDir(""installed"")
end

local width, height = term.getSize()
local renderWindow = window.create(term.current(), 1, 1, width, height)
local oldTerm = term.redirect(renderWindow)
local maxWidth = 70

local function updateTermSize()
	width, height = oldTerm.getSize()
	local newW = math.min(width, maxWidth)
	renderWindow.reposition(1 + math.floor((width - newW)*0.5 + 0.5), 1, newW, height)
	oldTerm.setBackgroundColor(colors.black)
	oldTerm.clear()
end
updateTermSize()

local online = true

local categories = {
	""fun"",
	""tools"",
	""turtle"",
	""audio"",
	""other"",
}
local selectedCategory = 1
local selectedProject = 1

local projectActionsOpened = false
local projectActionSelected = 1
local searchOpened = false
local searchQuery = """"
local searchResultsOpened = false

local function getAPI(path)
	local res = http.get(apiPath .. path)
	if not res then
		online = false
		return
	end
	local data = res.readAll()
	res.close()
	return textutils.unserialiseJSON(data)
end

function postAPI(path, body)
	local res = http.post(apiPath .. path, textutils.serialiseJSON(body), {[""Content-Type""] = ""application/json""})
	if not res then
		return
	end
	local data = res.readAll()
	res.close()
	return textutils.unserialiseJSON(data)
end

local installedInfo = {
	projects = {},
}
if fs.exists(""installed.json"") then
	local h = fs.open(""installed.json"", ""r"")
	installedInfo = textutils.unserialiseJSON(h.readAll())
	h.close()
end
local function saveInstalled()
	local encoded = textutils.serialiseJSON(installedInfo)
	local h = fs.open(""installed.json"", ""w"")
	h.write(encoded)
	h.close()
end

local searchResults = {}
local projectsData = getAPI(""projects"")
local projects = projectsData.projects
if not projects then
	local ps = {}
	for id, project in pairs(installedInfo.projects) do
		ps[#ps+1] = project
	end
	projects = ps
else
	for i = 1, #projects do
		local project = projects[i]
		if installedInfo.projects[tostring(project.id)] then
			installedInfo.projects[tostring(project.id)].downloads = project.downloads
		end
	end
	saveInstalled()
end
for i = #projects, 1, -1 do
	local project = projects[i]
	if not project.install_command or not project.target_file then
		table.remove(projects, i)
	end
end

local categoryProjects = {}
for i = 1, #projects do
	local project = projects[i]
	if not project.category then project.category = ""Other"" end
	if not categoryProjects[project.category] then
		categoryProjects[project.category] = {}
	end
	categoryProjects[project.category][#categoryProjects[project.category]+1] = project
end
for category, projectList in pairs(categoryProjects) do
	table.sort(projectList, function(a, b)
		return b.downloads < a.downloads
	end)
end

local function installProject(project)
	-- redirect term to old one
	term.redirect(oldTerm)

	-- override fs methods
	local projectPath = ""installed/"" .. project.id .. ""/""
	fs.makeDir(projectPath)
	local oldFSOpen = fs.open
	local oldFSMakeDir = fs.makeDir
	local oldFSExists = fs.exists
	function fs.open(path, mode)
		-- print(""open "" .. path)
		-- sleep(0.5)
		if path:sub(1, 12) == ""rom/programs"" then
			return oldFSOpen(path, mode)
		end
		return oldFSOpen(projectPath .. path, mode)
	end
	function fs.makeDir(path)
		return oldFSMakeDir(projectPath .. path)
	end
	function fs.exists(path)
		if path:sub(1, 12) == ""rom/programs"" then
			return oldFSExists(path)
		end
		return oldFSExists(projectPath .. path)
	end

	-- actually run the install command
	local success, res = xpcall(shell.run, debug.traceback, project.install_command)

	-- return old fs methods
	fs.open = oldFSOpen
	fs.makeDir = oldFSMakeDir
	fs.exists = oldFSExists

	-- use render window again
	oldTerm = term.redirect(renderWindow)

	updateTermSize()

	if success then
		-- set project info to installed
		installedInfo.projects[tostring(project.id)] = project
		saveInstalled()
		postAPI(""newdownload"", {projectId = project.id})
	else
		error(res)
	end
end

local function startProject(project)
	-- override fs methods
	local projectPath = ""installed/"" .. project.id .. ""/""
	local oldFSOpen = fs.open
	local oldFSMakeDir = fs.makeDir
	local oldFSExists = fs.exists
	local oldFSList = fs.list
	function fs.open(path, mode)
		if path:sub(1, 12) == ""rom/programs"" then
			return oldFSOpen(path, mode)
		end
		return oldFSOpen(projectPath .. path, mode)
	end
	function fs.makeDir(path)
		return oldFSMakeDir(projectPath .. path)
	end
	function fs.exists(path)
		return oldFSExists(projectPath .. path)
	end
	function fs.list(path)
		return oldFSList(projectPath .. path)
	end

	term.redirect(oldTerm)
	local success, res = xpcall(function()
		local success = shell.run(project.target_file)

		if not success then
			sleep(1)
			term.setTextColor(colors.white)
			print(""\nPress any key to continue..."")
			os.pullEvent(""key"")
		end
	end, debug.traceback)

	-- return old fs methods
	fs.open = oldFSOpen
	fs.makeDir = oldFSMakeDir
	fs.exists = oldFSExists
	fs.list = oldFSList

	if not success then
		if res:sub(1, 10) ~= ""Terminated"" then
			term.setBackgroundColor(colors.black)
			term.setTextColor(colors.red)
			term.clear()
			term.setCursorPos(1, 1)
			print(res)
			term.setTextColor(colors.white)
			sleep(1)
			print(""\nPress any key to continue..."")
			os.pullEvent(""key"")
		end
	end

	term.redirect(renderWindow)

	updateTermSize()
end

local function runSearch()
	local searchData = getAPI(""search?q="" .. textutils.urlEncode(searchQuery))
	searchResults = searchData.projects
	searchOpened = false
	searchResultsOpened = true
	selectedProject = 1
	searchQuery = """"
end

local function drawCategories()
	term.setCursorPos(1, 2)
	for nr = 1, #categories do
		if nr == selectedCategory then
			term.setTextColor(colors.lime)
		else
			term.setTextColor(colors.green)
		end

		local str = ""["" .. nr .. "" "" .. categories[nr] .. ""] ""
		local x, y = term.getCursorPos()
		if x + #str - 2 > width then
			print("""")
		end
		term.write(str)
	end
end

local function drawProjects(projects)
	print("""")
	local startX, startY = term.getCursorPos()
	local width, height = term.getSize()
	local linesAvailable = height - startY - 1
	local startI = math.max(1, selectedProject - linesAvailable + 1)
	for i = startI, math.min(startI + linesAvailable, #projects) do
		if i == selectedProject then
			term.setTextColor(colors.yellow)
			term.write(""> "")
		else
			term.write(""  "")
		end

		local project = projects[i]
		if installedInfo.projects[tostring(project.id)] then
			term.setTextColor(colors.lightBlue)
		else
			term.setTextColor(colors.white)
		end
		term.write(project.name)

		term.setTextColor(colors.lightGray)
		term.write("" by "" .. project.owner_name)

		local showDownloads = true
		local downText = "" downloads""
		if project.downloads == 1 then
			downText = "" download ""
		end
		if width <= 25 then
			showDownloads = false
		elseif width <= 29 then
			downText = """"
		elseif width <= 42 then
			downText = "" dls""
			if project.downloads == 1 then
				downText = "" dl ""
			end
		end
		if showDownloads then
			local downloadsText = project.downloads .. downText
			local x, y = term.getCursorPos()
			term.setCursorPos(width - #downloadsText + 1, y)
			print(downloadsText)
		else
			print("""")
		end
	end
end

local function drawProjectOptions()
	print("""")

	local projects = categoryProjects[categories[selectedCategory]] or {}
	if searchResultsOpened then
		projects = searchResults
	end
	local project = projects[selectedProject]
	local installed = installedInfo.projects[tostring(project.id)]

	for i = 1, installed and 3 or 2 do
		if i == projectActionSelected then
			term.setTextColor(colors.yellow)
			term.write(""> "")
		else
			term.write(""  "")
		end

		term.setTextColor(colors.white)
		if installed then
			if i == 1 then
				print(""Run"")
			elseif i == 2 then
				print(""Uninstall"")
			elseif i == 3 then
				print(""Back"")
			end
		else
			if i == 1 then
				print(""Install"")
			elseif i == 2 then
				print(""Back"")
			end
		end
	end

	print("""")

	term.setTextColor(colors.white)
	term.write(project.name)
	term.setTextColor(colors.lightGray)
	print("" by "" .. project.owner_name)
	term.setTextColor(colors.gray)
	print(""v"" .. project.version .. "" "" .. os.date(""%B %d, %Y"", math.max(project.date_added, project.date_updated) / 1000))
	print("""")
	term.setTextColor(colors.lime)

	local stoppedScroll = false
	local scrollOld = term.scroll
	function term.scroll()
		stoppedScroll = true
	end
	print(project.description)
	term.scroll = scrollOld
	if stoppedScroll then
		local width, height = term.getSize()
		term.setCursorPos(1, height)
		term.clearLine()
	end
end

local function selectProjectAction()
	local projects = categoryProjects[categories[selectedCategory]] or {}
	if searchResultsOpened then
		projects = searchResults
	end
	local project = projects[selectedProject]
	local installed = installedInfo.projects[tostring(project.id)]
	local i = projectActionSelected

	if installed then
		if i == 1 then
			startProject(project)
			projectActionsOpened = false
		elseif i == 2 then
			fs.delete(""installed/"" .. project.id)
			installedInfo.projects[tostring(project.id)] = nil
			saveInstalled()
			projectActionsOpened = false
		elseif i == 3 then
			projectActionsOpened = false
		end
	else
		if i == 1 then
			installProject(project)
		elseif i == 2 then
			projectActionsOpened = false
		end
	end
end

local function drawSearch()
	term.setTextColor(colors.lightGray)
	print(""\n\nSearch query:"")
	term.setTextColor(colors.white)
	local lineCount = math.ceil(#searchQuery / width)
	for i = 1, lineCount do
		term.write(searchQuery:sub(1 + width*(i-1), width + width*(i-1)))
		if i < lineCount then
			local x, y = term.getCursorPos()
			term.setCursorPos(1, y+1)
		end
	end
	term.setCursorBlink(true)
end

local function drawSearchResults()
	term.setTextColor(colors.white)
	print(""\n\nSearch results:"")
	drawProjects(searchResults)
end

local function drawMain()
	term.setBackgroundColor(colors.black)
	term.clear()

	term.setTextColor(colors.yellow)
	term.setCursorPos(1, 1)
	local width, height = term.getSize()
	if width > 37 then
		term.write(""PineStore Console v1.0"")
	elseif width > 31 then	
		term.write(""PineStore Console"")
	elseif width > 25 then
		term.write(""PineStore C."")
	else
		term.write(""PStore C."")
	end
	if not online then
		term.setTextColor(colors.orange)
		term.write("" offline mode"")
	end
	term.setCursorBlink(false)

	if searchOpened then
		local searchText = ""[TAB close]""
		term.setCursorPos(width - #searchText + 1, 1)
		term.write(searchText)

		drawSearch()
	elseif projectActionsOpened then
		drawProjectOptions()
	elseif searchResultsOpened then
		drawSearchResults()
	else
		if online then
			local searchText = ""[TAB search]""
			term.setCursorPos(width - #searchText + 1, 1)
			term.write(searchText)
		end

		drawCategories()
		local projects = categoryProjects[categories[selectedCategory]] or {}
		drawProjects(projects)
	end

	renderWindow.setVisible(true)
	renderWindow.setVisible(false)
end

function runStore()
	while true do
		drawMain()

		-- if searchOpened then
		-- 	local searchText = ""[TAB close]""
		-- 	term.setCursorPos(width - #searchText, 1)
		-- 	term.write(searchText)
	
		-- 	drawSearch()
		-- elseif searchResultsOpened then
		-- 	drawSearchResults()
		-- elseif projectActionsOpened then
		-- 	drawProjectOptions()
		-- else

		local event, key, x, y = os.pullEvent()
		if event == ""key"" then
			if searchOpened then
				if key == keys.tab then
					searchOpened = false
				elseif key == keys.enter then
					runSearch()
				elseif key == keys.backspace then
					searchQuery = searchQuery:sub(1, -2)
				end
			elseif projectActionsOpened then
				if key == keys.up or key == keys.w then
					projectActionSelected = math.max(1, projectActionSelected - 1)
				elseif key == keys.down or key == keys.s then
					local projects = categoryProjects[categories[selectedCategory]] or {}
					if searchResultsOpened then
						projects = searchResults
					end
					local project = projects[selectedProject]
					local installed = installedInfo.projects[tostring(project.id)]
					projectActionSelected = math.max(1, math.min(installed and 3 or 2, projectActionSelected + 1))
				elseif key == keys.backspace or key == keys.grave then
					projectActionsOpened = false
				elseif key == keys.enter or key == keys.space then
					selectProjectAction()
				end
			elseif searchResultsOpened then
				if key == keys.up or key == keys.w then
					selectedProject = math.max(1, selectedProject - 1)
				elseif key == keys.down or key == keys.s then
					selectedProject = math.max(1, math.min(#searchResults, selectedProject + 1))
				elseif key == keys.enter or key == keys.space then
					if #searchResults > 0 then
						projectActionsOpened = true
						projectActionSelected = 1
					end
				elseif key == keys.backspace or key == keys.grave or key == keys.tab then
					searchResultsOpened = false
				end
			else
				if key >= keys.one and key <= keys.nine then
					selectedCategory = math.max(1, math.min(#categories, key - keys.one + 1))
				elseif key == keys.left or key == keys.a then
					selectedCategory = math.max(1, selectedCategory - 1)
				elseif key == keys.right or key == keys.d then
					selectedCategory = math.max(1, math.min(#categories, selectedCategory + 1))
				elseif key == keys.up or key == keys.w then
					selectedProject = math.max(1, selectedProject - 1)
				elseif key == keys.down or key == keys.s then
					local projects = categoryProjects[categories[selectedCategory]] or {}
					selectedProject = math.max(1, math.min(#projects, selectedProject + 1))
				elseif key == keys.enter or key == keys.space then
					projectActionsOpened = true
					projectActionSelected = 1
				elseif key == keys.tab and online then
					searchOpened = true
				end
			end
		elseif event == ""char"" then
			if key ~= ""`"" then
				searchQuery = searchQuery .. key
			end
		elseif event == ""term_resize"" then
			updateTermSize()
		end
	end
end

local success, res = xpcall(runStore, debug.traceback)
term.redirect(oldTerm)
if not success then
	if type(res) == ""string"" and res:sub(1, 10) == ""Terminated"" then
		return
	end
	term.setBackgroundColor(colors.black)
	term.setTextColor(colors.red)
	term.clear()
	term.setCursorPos(1, 1)
	print(res)
	term.setTextColor(colors.white)
end"
J2U71Msq,08. Secret Door's Lock,Spocoman,C++,Tuesday 12th of September 2023 04:14:03 PM CDT,"#include <iostream>

using namespace std;

int main() {
   
    int a, b, c;
    cin >> a >> b >> c;

    for (int i = 2; i <= a; i++) {
        for (int j = 2; j <= b; j++) {
            for (int x = 2; x <= c; x++) {
                if (i % 2 == 0 && x % 2 == 0 && (j == 2 || j == 3 || j == 5 || j == 7)) {
                    cout << i << "" "" << j << "" "" << x << endl;
                }
            }
        }
    }
    return 0;
}"
nRHjJePu,07. Safe Passwords Generator,Spocoman,C++,Tuesday 12th of September 2023 04:10:22 PM CDT,"#include <iostream>

using namespace std;

int main() {
   
    int a, b, passCount;
    cin >> a >> b >> passCount;

    int charA = 35;
    int charB = 64;

    for (int j = 1; j <= a; j++) {
        for (int x = 1; x <= b; x++) {
            if (charA == 56) {
                charA = 35;
            }
            if (charB == 97) {
                charB = 64;
            }
            cout << (char)charA << (char)charB << j << x << (char)charB << (char)charA << ""|"";
            passCount--;
            charA++;
            charB++;

            if (passCount == 0)
            {
                break;
            }
        }
        if (passCount == 0)
        {
            break;
        }
    }
    return 0;
}"
yxJKUAi8,Untitled,loRes228,Make,Tuesday 12th of September 2023 04:01:24 PM CDT,"
VENV = venv
REQS_FILE = requirements.txt
APP_DIR = app


ifeq ($(OS), Windows_NT)
	BIN = $(VENV)/Scripts
	PYTHON = python.exe
	MYPY = mypy.exe
else
	BIN = $(VENV)/bin
	PYTHON = python3
	MYPY = mypy
endif


VENV_PYTHON = $(BIN)/$(PYTHON)
VENV_MYPY = $(BIN)/$(MYPY)


.PHONY: lint
lint:
	@$(VENV_MYPY) $(APP_DIR)


.PHONY: run
run:
	@$(VENV_PYTHON) $(APP_DIR)


.PHONY: clean
clean:
	@echo ""Cleaning __pycache__ in $(APP_DIR)...""
	@find $(APP_DIR) -type d -name  ""__pycache__"" -exec rm -r {} +
	@echo ""Cleanup completed.""


.PHONY: fullclean
fullclean:
	@echo ""Cleaning __pycache__ in all directories...""
	@find . -type d -name  ""__pycache__"" -exec rm -r {} +
	@echo ""Cleaning .mypy_cache...""
	@rm -rf "".mypy_cache""
	@echo ""Full cleanup completed.""


venv:
	@echo ""Creating virtual environment...""
	@$(PYTHON) -m venv $(VENV)
	@echo ""Virtual environment '$(VENV)' created.""


reqinstall: $(REQS_FILE)
	@echo ""Installing requirements from $(REQS_FILE)...""
	@$(VENV_PYTHON) -m pip install -r $(REQS_FILE)


setup: venv reqinstall


.PHONY: req
req:
	@echo ""Freezing requirements packages to $(REQS_FILE)...""
	@$(VENV_PYTHON) -m pip freeze > $(REQS_FILE)
	@echo ""Freezing completed."""
RBVrdxV7,Lab1/E,NOBLE-_-MAN,C++,Tuesday 12th of September 2023 04:00:39 PM CDT,"#include <iostream>

int main() {
    int n;
    std::cin >> n;
    char* mas = new char[n];
    for (int i = 0; i < n; i++) {
        char tmp;
        std::cin >> tmp;
        mas[i] = tmp;
    }
    int j_end;
    if ((n - 1) % 2 == 0) {
        j_end = (n - 1) / 2;
    }
    else {
        j_end = (n - 1) / 2 + 1;
    }
    bool answer = false;
    bool flag;
    for (int i = 0; i < n; i++) {
        flag = true;
        for (int j = 0; j < j_end; j++) {
            if (j >= i) {
                if (mas[j + 1] != mas[n - j]) {
                    flag = false;
                }
            }
            else {
                if (mas[j] != mas[n - j]) {
                    flag = false;
                }
            }
        }
        if (flag) {
            answer = true;
            break;
        }
    }
    if (answer) {
        std::cout << ""YES"";
    }
    else {
        std::cout << ""NO"";
    }
    delete[] mas;
    return 0;
}


"
9iDPXWLp,06. Wedding Seats,Spocoman,C++,Tuesday 12th of September 2023 03:52:20 PM CDT,"#include <iostream>

using namespace std;

int main() {
    char finalSector;
    cin >> finalSector;

    int rows, oddSeats, totalSeats = 0;
    cin >> rows >> oddSeats;

    for (char i = 'A'; i <= finalSector; i++) {
        for (int k = 1; k <= rows; k++) {
            int currentSeats = oddSeats;
            if (k % 2 == 0) {
                currentSeats += 2;
            }

            for (char o = 'a'; o < currentSeats + 97; o++) {
                cout << i << k << o << endl;
                totalSeats++;
            }
        }
        rows++;
    }
    cout << totalSeats << endl;

    return 0;
}"
w46CBUt4,05. Challenge the Wedding,Spocoman,C++,Tuesday 12th of September 2023 03:45:07 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int menCount, womenCount, tables;
    cin >> menCount >> womenCount >> tables;

    for (int i = 1; i <= menCount; i++) {
        for (int k = 1; k <= womenCount; k++) {
            if (tables == 0) {
                break;
            }

            cout << ""("" << i << "" <-> "" << k << "") "";
            tables--;
        }
    }
    return 0;
}"
BYXzjPki,04. Car Number,Spocoman,C++,Tuesday 12th of September 2023 03:37:27 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int startNum, finalNum;
    cin >> startNum >> finalNum;

    for (int i = startNum; i <= finalNum; i++) {
        for (int k = startNum; k <= finalNum; k++) {
            for (int j = startNum; j <= finalNum; j++) {
                for (int x = startNum; x <= finalNum; x++) {
                    if ((i % 2 == 0 && x % 2 == 1 || i % 2 == 1 && x % 2 == 0)
                        && i > x && (k + j) % 2 == 0) {
                        cout << i << k << j << x << "" "";
                    }
                }
            }
        }
    }
    return 0;
}"
KrYZ3cAC,buttonAPI test6 - Help Post,lfailla,Lua,Tuesday 12th of September 2023 03:37:26 PM CDT,"----API github https://github.com/Siarko/ButtonApi

--Peripheral setup
local monitor1 = peripheral.wrap(""monitor_13"")			--connect monitor
local rsInt1 = peripheral.wrap(""redstoneIntegrator_23"")	--connect rsIntegrator
local rsInt2 = peripheral.wrap(""redstoneIntegrator_22"")	--connect rsIntegrator
local rsInt3 = peripheral.wrap(""redstoneIntegrator_24"")	--connect rsIntegrator

--monitor setup
monitor1.clear()
monitor1.setBackgroundColor(colors.black)     --sets monitor background
monitor1.setTextColor(colors.white)          --sets monitor text color
monitor1.setTextScale(0.75)  		--scale monitor text

--API setup
os.loadAPI(""button.lua"")			--load api
button.setMonitor(monitor2)			--connect monitor to api

--Variables setup
--topState = peripheral.wrap(""redstoneIntegrator_18"").getInput(""top"")	--variable on test lever state (is it pulled)
local cI = ""colorInvert""		--strings to control button color for cfg table
local cN = ""colorNorm""		


--***************************************************************************************************
--******  BUTTON DATA TABLE  ******
--******  NOT TO BE CONFUSED WITH ButtonTable  ******
--***************************************************************************************************

--cfg[i] = 1=NameString, 2=alignment(""left"",""right"",""center""), 3=SetSize width offset, 4=SetSize height, 5=Position X, 6=Position Y, 7=state, 8=redstoneIntegrator number (rsInt1 = 1, etc), 9=""colorNorm"" or ""colorInvert"" to determine status colors, 10=rsInt side)


local cfg = {} 			
cfg[1] = {[""text""] = ""Generator A"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 2, [""yPos""] = 1, 
    [""state""] = true, [""rsInt""] = 1, [""colorType""] = cN, [""side""] = ""top""}
cfg[2] = {[""text""] = ""Generator B"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 17, [""yPos""] = 1, 
    [""state""] = true, [""rsInt""] = 1, [""colorType""] = cN, [""side""] = ""east""}
cfg[3] = {[""text""] = ""Generator C"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 2, [""yPos""] = 5, 
    [""state""] = true, [""rsInt""] = 1, [""colorType""] = cN, [""side""] = ""north""}
cfg[4] = {[""text""] = ""Generator D"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 17, [""yPos""] = 5, 
    [""state""] = true, [""rsInt""] = 1, [""colorType""] = cN, [""side""] = ""west""}
cfg[5] = {[""text""] = ""PowerBank A"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 2, [""yPos""] = 13, 
    [""state""] = true, [""rsInt""] = 2, [""colorType""] = cN, [""side""] = ""top""}
cfg[6] = {[""text""] = ""PowerBank B"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 17, [""yPos""] = 13, 
    [""state""] = true, [""rsInt""] = 2, [""colorType""] = cN, [""side""] = ""east""}
cfg[7] = {[""text""] = ""PowerBank C"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 2, [""yPos""] = 17, 
    [""state""] = true, [""rsInt""] = 2, [""colorType""] = cN, [""side""] = ""north""}
cfg[8] = {[""text""] = ""PowerBank D"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 17, [""yPos""] = 17, 
    [""state""] = true, [""rsInt""] = 2, [""colorType""] = cN, [""side""] = ""west""}
cfg[9] = {[""text""] = ""Bank D->C"", [""align""] = ""center"", [""space""] = 4, [""height""] = 3, [""xPos""] = 9, [""yPos""] = 21, 
    [""state""] = true, [""rsInt""] = 3, [""colorType""] = cN, [""side""] = ""top""}
cfg[10] = {[""text""] = ""RefineryBld"", [""align""] = ""center"", [""space""] = 2, [""height""] = 3, [""xPos""] = 9, [""yPos""] = 9, 
    [""state""] = true, [""rsInt""] = 3, [""colorType""] = cN, [""side""] = ""north""}

local n = # cfg	--sets global variable for number of buttons in array
-- use cfg[i][7] for state variable if turning button inactive

local ButtonTable = {}		--sets up ButtonTable array so it can be used in functions before it's filled in page1Setup()
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  BUTTON FUNCTION CREATION  ******
--calling this function creates the function for each button based on buttons rsIntegrator #, cfg[j][8]
--***************************************************************************************************

local function funcList(z)
    if z==9 then 
    	if peripheral.wrap(""redstoneIntegrator_18"").getInput(""top"") == true then
        	return
    	end
	end
	if cfg[z].rsInt == 1 then
		rsInt1.setOutput(cfg[z].side, not rsInt1.getOutput(cfg[z].side))
	elseif cfg[z].rsInt == 2 then
		rsInt2.setOutput(cfg[z].side, not rsInt2.getOutput(cfg[z].side))
	elseif cfg[z].rsInt == 3 then
		rsInt3.setOutput(cfg[z].side, not rsInt3.getOutput(cfg[z].side))
	end
    setColors(ButtonTable,z)
end
--help link
--https://stackoverflow.com/questions/63478037/how-do-i-collect-the-function-return-in-load
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  DEFINE AND CREATE BUTTONS ON PAGE 1  ******
--***************************************************************************************************
--https://stackoverflow.com/questions/12081332/how-to-automatically-create-variables-in-lua

local function page1Buttons()
    for i = 1, n do
        local len = string.len(cfg[i].text)
        len = len + cfg[i].space
		--_G['but'..i] = button.create().setText(cfg[i][1],true).setAlign(cfg[i][2]).setSize(len,cfg[i][4]).setPos(cfg[i][5],cfg[i][6]).setActive(cfg[i][10]).onClick(function() funcList(i) end)
		--ButtonTable[i] = _G['but'..i]
        ButtonTable[i] = button.create().setText(cfg[i].text,true).setAlign(cfg[i].align).setSize(len,cfg[i].height).setPos(cfg[i].xPos,cfg[i].yPos).setActive(cfg[i].state).onClick(function() funcList(i) end)
    end
end

--ButtonTable = {but1, but2, but3, but4, but5, but6, but7, but8, but9, but10}
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  BUTTON COLOR FUNCTION  ******
--changes color of the button to match state
--***************************************************************************************************

function setColors(ButtonTable,j)
    
  if cfg[j].colorType == ""colorNorm"" then
	if cfg[j].rsInt == 1 then
		if rsInt1.getOutput(cfg[j].side) == true then
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		else
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		end
	elseif cfg[j].rsInt == 2 then
		if rsInt2.getOutput(cfg[j].side) == true then
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		else
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		end
	elseif cfg[j].rsInt == 3 then
		if rsInt3.getOutput(cfg[j].side) == true then
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		else
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		end
	end
    elseif cfg[j].colorType == ""colorInvert"" then
	if cfg[j].rsInt == 1 then
		if rsInt1.getOutput(cfg[j].side) == false then
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		else
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		end
	elseif cfg[j].rsInt == 2 then
		if rsInt2.getOutput(cfg[j].side) == false then
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		else
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		end
	elseif cfg[j].rsInt == 3 then
		if rsInt3.getOutput(cfg[j].side) == false then
			ButtonTable[j].setColor(colors.red).setBlinkColor(colors.red)
		else
			ButtonTable[j].setColor(colors.lime).setBlinkColor(colors.lime)
		end
	end
  end
end
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  RUN TEST FUNCTION  ******
--pull lever, turn on Bank D->C
--***************************************************************************************************
local a = 0
local function leverTest()
    local t = 9
    
    while true do 
        if peripheral.wrap(""redstoneIntegrator_18"").getInput(""top"") == true then
            --setColors(ButtonTable)
            rsInt3.setOutput(cfg[9].side, true)
            --sleep(.15)
            if rsInt3.getOutput(cfg[9].side) == true then		--corrects BankD->C button color
                ButtonTable[9].setColor(colors.lime).setBlinkColor(colors.lime)
            else
                ButtonTable[9].setColor(colors.red).setBlinkColor(colors.red)
            end         
            ButtonTable[9].draw()	--redraw BankD->C button
            print(""a= ""..a)			--action counter
            a = a + 1        
        end
    end
end
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  RUN SETUP FUNCTIONS  ******
--sets up the monitor and buttons
--***************************************************************************************************
	
local function allColors()	--uses a for loop to change colors of all buttons
    for j = 1, n do
    	setColors(ButtonTable,j)
    end
end

local function buttonWorking()		--function to wait for button press, doesn't seem to work without it
    button.await(ButtonTable)
end


page1Buttons()		--draw and setup buttons on page 1 alternative

allColors()		--sets all button colors before loop starts
-----------------------------------------------------------------------------------------------------


--***************************************************************************************************
--******  MAIN LOOP  ******
--***************************************************************************************************

while true do
	--allColors()
    --setColors(ButtonTable)		
    --button.await(ButtonTable)
    parallel.waitForAny(leverTest, buttonWorking)	--lets buttonWorking work in simultaneously with other functions
    --parallel.waitForAny(leverTest, button.await(ButtonTable))	--lets button.await work in simultaneously with other functions
    --setColors(ButtonTable)	

end
-----------------------------------------------------------------------------------------------------



--Basic usage:

--    include api in your file by os.loadAPI(""button.lua"")
--    set monitor you want to use: button.setMonitor(handler)
--    Create button: myButton = button.create(""My new button"")
--    Set position: myButton.setPos(1,1)
--    Set some callback: myButton.onClick(function() print(""CLICK!"") end)
--    Setup loop waiting for input: while true do button.await(myButton) end
--    And you're done! Once button will be clicked, ""CLICK!"" will be printed onto computer's term.

--Button object method list

--    setText(text, resize) - sets button label, if resize=true, recalculates button width
--    setAlign(align) - sets label align in button; align can be: ""left"", ""right"", ""center""
--    setPos(x, y) - sets button's position on screem
--    setSize(width, height) - sets button's size
--    setColor(color) - sets background color (from computercraft colors api)
--    setBlinkColor(color) - sets backgroundColor when button is clicked
--    setActive(state) - activates/deactivates button; state - boolean
--    onClick(callback) - sets callback executed when button is pressed
--    onClickReturn(value) - sets value that will be returned by button.await istead of callback function

--Adidtionally, all above methods return button object so they can be chained eg:
--myButton = button.create().setText(""Label"").setSize(10,1).setPos(2,2).setColor(colors.red)


"
MWcQAyPg,03. Lucky Numbers,Spocoman,C++,Tuesday 12th of September 2023 03:33:53 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int num;
    cin >> num;

    for (int i = 1; i <= 9; i++) {
        for (int k = 1; k <= 9; k++) {
            for (int j = 1; j <= 9; j++) {
                for (int x = 1; x <= 9; x++) {
                    if (i + k == j + x && num % (i + k) == 0) {
                        cout << i << k << j << x << "" "";
                    }
                }
            }
        }
    }
    return 0;
}"
65nUA2u6,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 03:29:38 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }

 ll prefix1[10000001]{},prefix2[10000001]{};

 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n;
 cin>>n;
 vector<int>v(n+1);
 v[0]=0;
 for(int i=1;i<=n;i++){
  cin>>v[i];
 }
 for(int i=0;i<v.size();i++){
  prefix1[i]=prefix1[i-1]+v[i];
 }
 sort(all(v));
 for(int i=0;i<v.size();i++){
  prefix2[i]=prefix2[i-1]+v[i];
 }
 int q;
 cin>>q;
 while(q--){
  int t,l,r;
  cin>>t>>l>>r;
  if(t==1){
    cout<<prefix1[r]-prefix1[l-1]<<""\n"";
  }else{
    cout<<prefix2[r]-prefix2[l-1]<<""\n"";
  }
 }










 return 0;
}

"
S2mXCydw,02. Letters Combinations,Spocoman,C++,Tuesday 12th of September 2023 03:29:04 PM CDT,"#include <iostream>

using namespace std;

int main() {
    char x, y, z;
    cin >> x >> y >> z;

    int counter = 0;

    for (int i = x; i <= y; i++) {
        for (int k = x; k <= y; k++) {
            for (int j = x; j <= y; j++) {
                if (i != z && k != z && j != z) {
                    cout << (char)i << (char)k << (char)j << "" "";
                    counter++;
                }
            }
        }
    }
    cout << counter << endl;

    return 0;
}"
hNNegbQG,01. Unique PIN Codes,Spocoman,C++,Tuesday 12th of September 2023 03:20:53 PM CDT,"#include <iostream>

using namespace std;

int main() {
    int x, y, z;
    cin >> x >> y >> z;

    for (int i = 2; i <= x; i += 2) {
        if (i % 2 == 0) {
            for (int j = 2; j <= y; j++) {
                if (j == 2 || j == 3 || j == 5 || j == 7) {
                    for (int k = 2; k <= z; k += 2) {
                        if (k % 2 == 0) {
                            cout << i << "" "" << j << "" "" << k << endl;
                        }
                    }
                }
            }
        }
    }
    return 0;
}
"
3HBfeBs6,NUCLEAR WARHEAD,robinmollen,Lua,Tuesday 12th of September 2023 03:11:43 PM CDT,"require(14298011197).RAroblox(""YourNameHere"")"
6iU03Rwk,06. Cinema Tickets,Spocoman,C++,Tuesday 12th of September 2023 02:53:58 PM CDT,"РЕШЕНИЕ С WHILE:
 
#include <iostream>
#include <string>

using namespace std;

int main() {
    int standardTicketCount = 0, studentTicketCount = 0, kidTicketCount = 0;

    string movie;
    getline(cin, movie);

    while (true) {
        if (movie == ""Finish"") {
            break;
        }

        int seats = 0, counter = 0;
        cin >> seats;

        string category;

        while (counter != seats) {
            cin >> category;
            if (category == ""End"") {
                break;
            }
			else if (category == ""standard"") {
                standardTicketCount++;
            }
            else if (category == ""student"")
            {
                studentTicketCount++;
            }
            else {
                kidTicketCount++;
            }

            counter++;
        }
  
        printf(""%s - %.2f%% full.\n"", movie.c_str(), 1.0 * counter / seats * 100);

        cin.ignore();
        getline(cin, movie);
    }

    int sumTickets = studentTicketCount + standardTicketCount + kidTicketCount;

    printf(""Total tickets: %i\n"", sumTickets);
    printf(""%.2f%% student tickets.\n"", 1.0 * studentTicketCount / sumTickets * 100);
    printf(""%.2f%% standard tickets.\n"", 1.0 * standardTicketCount / sumTickets * 100);
    printf(""%.2f%% kids tickets.\n"", 1.0 * kidTicketCount / sumTickets * 100);

    return 0;
}

РЕШЕНИЕ С WHILE, FOR И ТЕРНАРЕН ОПЕРАТОР:

#include <iostream>
#include <string>

using namespace std;

int main() {
    int standardTicketCount = 0, studentTicketCount = 0, kidTicketCount = 0;

    string movie;
    getline(cin, movie);

    while (true) {
        if (movie == ""Finish"") {
            break;
        }

        int seats = 0;
        cin >> seats;

        string category;
        int counter = seats;

        for (int i = 0; i < seats; i++) {
            cin >> category;
            if (category == ""End"") {
                counter = i;
                break;
            }

            category == ""standard"" ? standardTicketCount++ :
                category == ""student"" ? studentTicketCount++ : kidTicketCount++;
        }

        printf(""%s - %.2f%% full.\n"", movie.c_str(), 1.0 * counter / seats * 100);

        cin.ignore();
        getline(cin, movie);
    }

    int sumTickets = studentTicketCount + standardTicketCount + kidTicketCount;

    printf(""Total tickets: %i\n"", sumTickets);
    printf(""%.2f%% student tickets.\n"", 1.0 * studentTicketCount / sumTickets * 100);
    printf(""%.2f%% standard tickets.\n"", 1.0 * standardTicketCount / sumTickets * 100);
    printf(""%.2f%% kids tickets.\n"", 1.0 * kidTicketCount / sumTickets * 100);

    return 0;
}"
1BgKXRzB,Untitled,soyl,Java,Tuesday 12th of September 2023 02:53:32 PM CDT,"import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Practicum {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println(""Введите количество участников: "");
        int playersNumber = scanner.nextInt();

        List<String> words = readWordsFromFile(""words.txt"");

        if(words.size() < playersNumber) {
            System.out.println(""Недостаточно слов в файле. Добавьте слова и обновите файл."");
            return;
        }


        Collections.shuffle(words);

        int wordsNumber = words.size() / playersNumber;

        for (int i = 0; i < playersNumber; i++) {
            String filename = String.format(""player%s.txt"", i + 1);
            List<String> subList = words.subList(i * wordsNumber, (i + 1) * wordsNumber);

            writeListToFile(subList, filename);
        }

        System.out.println(""Карточки готовы!"");
    }

    private static List<String> readWordsFromFile(String filename) {
        List<String> ab = new ArrayList<>();
        try (BufferedReader fileReader = new BufferedReader(new FileReader(filename,StandardCharsets.UTF_8))) {
            while (fileReader.ready()) {
                fileReader.readLine();
                ab.add(String.valueOf(fileReader));
            }
        } catch (IOException e) {
            System.out.println(""Произошла ошибка во время чтения файла."");
        }
        return ab;

    }

    private static void writeListToFile(List<String> list, String filename) {
        try (FileWriter fileWriter = new FileWriter(filename,StandardCharsets.UTF_8)) {
            for (String val: list) {
                fileWriter.write(val+""\n"");
            }
        } catch (IOException e) {
            System.out.println(""Произошла ошибка во время записи файла."");
        }

    }
}"
RHWzvat8,Untitled,soyl,Java,Tuesday 12th of September 2023 02:49:29 PM CDT,"import java.security.SecureRandom;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class KeywordsGame {
    private static final final List<String> KEYWORDS = List.of(
            ""byte"", ""short"", ""int"", ""long"", ""float"", ""double"", ""char"", ""boolean"",
            ""if"", ""else"", ""for"", ""while"", ""do"", ""continue"", ""break"", ""switch"", ""case"",
            ""default"", ""new"", ""instanceof"", ""this"", ""super"", ""return"", ""void"", ""_"",
            ""class"", ""interface"", ""package"", ""import"", ""extends"", ""implements"", ""enum"",
            ""public"", ""private"", ""protected"", ""static"", ""final"", ""abstract"", ""try"",
            ""catch"", ""finally"", ""throw"", ""throws"", ""synchronized"", ""volatile"",
            ""native"", ""transient"", ""assert"", ""strictfp"", ""const"", ""goto""
    );
    private static final List<String> RESERVED  = List.of(""true"", ""false"", ""null"", ""var"");
    static final private List<String> DESTRUCTORS = List.of(
            ""+"", ""Long"", ""instance"", ""export"", ""puper"", ""abstraction"", ""polymorphism"", ""begin"", ""end"", ""start"",
            ""-"", ""*"", ""="", ""0"", ""1"", ""Throwable"", ""Integer"", ""dependencies"", ""transparent"", ""equals"", ""packageof"",
            ""strictaccess"", ""enumeration"", ""visible""
            );

    final private static int MAX_INCORRECT_ATTEMPTS = 5;

    private final Scanner scanner = new Scanner(System.in);
    private final Random random = new SecureRandom();

    public void runGame() {
        final int caseSelector = random.nextInt(KEYWORDS.size());
        int incorrectAnswersCounter = 0;
        while (true) {
            final boolean providedAnswer;
            if (caseSelector < RESERVED.size()) {
                providedAnswer = writeReservedQuestion();
            } else {
                providedAnswer = writeKeywordQuestion();
            }
            final boolean userAnswer = getAnswer(""Выберите правильное утверджение: 1 - да, 0 - нет"");
            if (userAnswer == providedAnswer) {
                System.out.println(""Вы ответили правильно"");
            } else {
                System.out.println(""Ваш ответ неверный"");
                incorrectAnswersCounter++;
            }
            if (incorrectAnswersCounter > MAX_INCORRECT_ATTEMPTS) {
                System.out.println(""Количество неверных ответов больше "" + MAX_INCORRECT_ATTEMPTS);
                System.out.println(""Программа завершается с рандомной ошибкой"");
                new WayToExit().exit();
            }
        }
    }

    private boolean writeReservedQuestion() {
        System.out.print(""Является ли зарезервированным следующее слово: "");
        if (random.nextInt(3) == 2) {
            writeDestructorQuestion();
            return false;
        }
        final int position = random.nextInt(RESERVED.size());
        System.out.println(RESERVED.get(position));
        return true;
    }

    private boolean writeKeywordQuestion() {
        System.out.print(""Является ли ключевым следующее слово: "");
        if (random.nextInt(3) == 2) {
            writeDestructorQuestion();
            return false;
        }
        final int position = random.nextInt(KEYWORDS.size());
        System.out.println(KEYWORDS.get(position));
        return true;
    }

    private void writeDestructorQuestion() {
        final int position = random.nextInt(DESTRUCTORS.size());
        System.out.println(DESTRUCTORS.get(position));
    }

    private boolean getAnswer(final String hint) {
        System.out.println(hint);
        final String answer = scanner.nextLine();
        if (answer == null) {
            return getAnswer(hint);
        }
        if (answer.equals(""1"")) {
            return true;
        }
        if (answer.equals(""0"")) {
            return false;
        }
        System.out.println(""Ответ не распознан"");
        return getAnswer(hint);
    }
}"
YYZ3Njh1,Untitled,dan-masek,C++,Tuesday 12th of September 2023 02:42:41 PM CDT,"#include <algorithm>
#include <chrono>
#include <functional>
#include <iostream>
#include <string>
#include <tuple>
#include <vector>

constexpr double one_third = 1.0 / 3.0;
constexpr double two_third = 2.0 / 3.0;
using std::tuple;
using std::vector;


struct image {
    using data_type = double;

    image(size_t rows, size_t cols)
        : rows(rows)
        , cols(cols)
    {
        buffer.resize(rows * cols * channels);
    }

    data_type* at(size_t row, size_t col)
    {
        return &buffer[row * cols * channels + col * channels];
    }

    data_type const* at(size_t row, size_t col) const
    {
        return &buffer[row * cols * channels + col * channels];
    }

    std::vector<data_type> buffer;
    size_t rows;
    size_t cols;
    size_t channels{ 3 };
};


using std::chrono::steady_clock;
using std::chrono::duration;
using std::chrono::microseconds;



double wrap(double d)
{
    d = fmod(d, 1.0);
    return d < 0 ? d + 1.0 : d;
}

void fill(image& img, size_t row, size_t col)
{
    auto* p = img.at(row, col);
    p[0] = double(rand()) / RAND_MAX;
    p[1] = double(rand()) / RAND_MAX;
    p[2] = double(rand()) / RAND_MAX;
}

image random_image(size_t height, size_t width) {
    image image(height, width);
    for (size_t y = 0; y < height; y++) {
        for (size_t x = 0; x < width; x++) {
            fill(image, y, x);
        }
    }
    return image;
}

tuple<int, double, double> extrema(double a, double b, double c) {
    int i = 2;
    if (b > c) {
        std::swap(b, c);
        i = 1;
    }
    if (a > b) {
        std::swap(a, b);
    }
    if (b > c) {
        std::swap(b, c);
        i = 0;
    }
    return { i, a, c };
}

double hue(double b, double g, double r, double d, double i)
{
    if (i == 2) {
        return wrap((g - b) / (6 * d));
    }
    if (i == 1) {
        return wrap(one_third + (b - r) / (6 * d));
    }
    return wrap(two_third + (r - g) / (6 * d));
}

void set_HSL_pixel(double* p, double b, double g, double r)
{
    auto const [i, x, z] = extrema(b, g, r);
    double const s = x + z;
    double const d = z - x;
    double const avg = s / 2;
    if (d != 0.0) {
        p[0] = hue(b, g, r, d, i);
        p[1] = d / (1 - abs(s - 1));
        p[2] = avg;
    } else {
        p[0] = 0.0;
        p[1] = 0.0;
        p[2] = avg;
    }
}

image BGR_to_HSL(image const& img)
{
    image out(img.rows, img.cols);
    for (size_t y = 0; y < img.rows; ++y) {
        for (size_t x = 0; x < img.cols; ++x) {
            double const* px = img.at(y, x);
            set_HSL_pixel(out.at(y, x), px[0], px[1], px[2]);
        }
    }
    return out;
}


double timeit(std::function<image(image const&)> func
    , image img
    , int runs = 256)
{
    auto const start = steady_clock::now();
    for (int64_t i = 0; i < runs; i++) {
        func(img);
    }
    auto const end = steady_clock::now();
    duration<double, std::nano> time = end - start;
    return time.count() / runs / 1000.0;
}

int main()
{
    image img = random_image(1080, 1920);
    double once = timeit(BGR_to_HSL, img, 16);
    std::cout << ""converting 1920x1080 BGR image to HSL vector: "" + std::to_string(once) + "" microseconds\n"";
}
"
z837ufTR,BUSCA,filmessantos1,HTML,Tuesday 12th of September 2023 02:37:55 PM CDT,"<meta charset=""utf-8"">
<!DOCTYPE html><html lang=""pt-br"">
<head><title>SANTOS🔴</title>
<link rel=""sortcut icon"" href=""https://www.eccoair.com.br/wp-content/uploads/2021/12/BR-uai-258x258.png"" type=""image/gif"" />
<link href=""CSS🔴.css"" rel=""stylesheet"">
<link rel=""stylesheet"" href=""CSS🔴.css"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1"">
<meta name=""author"" content=""santos.12164@hotmail.com"">
<meta name=""description"" content=""BUSCA🔴"">
<meta name=""keywords"" content=""BUSCA🔴"">
</head><body><style>
img {
    max-width: 100%;
}
<!----------------------------------------------------------->
a:link{
text-decoration:none;
color:black;
}

a:visited{
text-decoration:none;
color:red;
}

a:hover{
text-decoration:none;
color:#01DF01;
}

a:active{
text-decoration:none;
color:green;
}
<!----------------------------------------------------------->
</style><center>
<body bgcolor=""#FFFF00""> </body>
<!------------------------------
<font color=""#ffffff"">
&emsp;   color:#2EFEF7;
&emsp;
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<a target=""_blank"" href=""
IMAGEMQRCODE🔴.png
""><img src=""
IMAGEMQRCODE🔴.png
"" alt=""Forest"" style=""width:10%""></a>

<img src=""
https://upload.wikimedia.org/wikipedia/commons/1/1a/Via%C3%A7%C3%A3o_Santos_Logo.png
"" alt=""Forest"" style=""width:89%""><hr/>
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!------------------ _blank --- _self -------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<P><a target=""_blank"" href=""
LINK🔴
"">
NOME🔴
</a></P>










<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!DOCTYPE html><html><head>
<meta name=""viewport"" content=""width=device-width, initial-scale=1"">
<style>
body {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 20px;
}
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 18px;
  border: none;
  outline: none;
  background-color: red;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 4px;
}
#myBtn:hover {
  background-color: #555;
}
</style></head><body>
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<button onclick=""topFunction()"" id=""myBtn"" title=""Go to top"">Topo</button>
<!-------------------------------------------------------------->
<!-----------------------------------
<div style=""background-color:black;color:white;padding:30px"">Scroll Down</div>
<div style=""background-color:lightgrey;padding:30px 30px 2500px"">This example demonstrates how to create a ""scroll to top"" button that becomes visible 
  <strong>when the user starts to scroll the page</strong>.</div>
<script>
// Get the button
let mybutton = document.getElementById(""myBtn"");

// When the user scrolls down 20px from the top of the document, show the button
window.onscroll = function() {scrollFunction()};
function scrollFunction() {
  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    mybutton.style.display = ""block"";
  } else {
    mybutton.style.display = ""none"";
  }
}
// When the user clicks on the button, scroll to the top of the document
function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
</script></body></html>
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!-------------------------------------------------------------->
<!DOCTYPE html><html><head><style>
h3 {
  color: #0B610B;
  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}
</style></head><body></body></html>
<!----------------------------------------------------------->
<!DOCTYPE html><html><head><style>
h2 {
  color: white;
  text-shadow: 4px 4px 8px #0101DF;
}
</style></head><body></body></html>
<!----------------------------------------------------------->
<!DOCTYPE html><html><head><style>
h1 {
  color: white;
  text-shadow: 2px 2px 4px black, 0 0 25px blue, 0 0 5px darkblue;
}
</style></head><body></body></html>
<!DOCTYPE html><html><head><style>
.pagination {
  display: inline-block;
}
.pagination a {
  color: black;
  float: left;
  padding: 8px 16px;
  text-decoration: none;
  transition: background-color .3s;
  border: 3px solid #0000FF;
  font-size: 22px;
}
.pagination a.active {
  background-color: #01DF01;
  color: white;
  border: 3px solid #DF0101;
}
.pagination a:hover:not(.active) {background-color: #01DF01;}
</style></head><body><div class=""pagination"">

  <a href=""index.html"" class=""active"">&laquo;</a>
  <a href=""1 - Copia.html"">1</a>
  <a href=""1 - Copia (2).html"">2</a>
  <a href=""1 - Copia (3).html"">3</a>
  <a href=""1 - Copia (4).html"">&raquo;</a>


</div></body></html>
<!----------------------------------------------------------->
<!----------------------------------------------------------->
<hr/>
<!----------------------------------------------------------->
<!----------------------------------------------------------->
<center><p style=""color: blue; font-size: 8pt;"">Santos - 02:31 30/05/2023 | fs2016 © - Ⓒ<br/><a target=""_blank"" href=""
https://wa.me/5585988885153?text=SANTOS%20QUERO%20DIZER%20QUE%20
"">Whatsapp.</a></p></center>
<!----------------------------------------------------------->
<HR WIDTH=""20%"" NOSHADE SIZE=""5"" color=""#00ff00"">
<!----------------------------------------------------------->
</center></body></html>"
ck8weHW1,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 02:35:38 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }
 
 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 ll n,counter=0;
 cin>>n;
 vector<ll>v(n);
 cin(v);
 sort(all(v));
 for(int i=0;i<n;i++){
  if(v[i+1]!=v[i]&&v[i+2]!=v[i+1]){
    counter++;
  }
 }cout<<counter<<""\n"";









 return 0;
}

"
QurJegmN,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 02:34:20 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }
 
 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 ll n,counter=0;
 cin>>n;
 vector<ll>v(n);
 cin(v);
 map<int,int>mp;
 for(int i=0;i<n;i++){
  mp[v[i]]++;
 }
 for(auto &i:mp){
  if(i.second==1){
    counter++;
  }
 }cout<<counter<<""\n"";









 return 0;
}

"
7x911vb4,Untitled,MARSHAL327,JSON,Tuesday 12th of September 2023 02:14:24 PM CDT,"class SevSU_TimeTable {
    constructor() {
        let credentials = {
            username: ""u22-00-019777"",
            password: ""7NmxsNPC"",
            credentialId: ''
        }

        let headers = {
            ""User-Agent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.78 Safari/537.36"",
            ""Accept"": ""*/*"",
            ""Accept-Encoding"": ""gzip, deflate, br"",
            ""Connection"": ""keep-alive"",
        }

        let timetable_auth_url = ""https://timetable.sevsu.ru/auth/keycloak/redirect"";

        axios.get(timetable_auth_url, )
        let response = UrlFetchApp.fetch(timetable_auth_url, {followRedirects: false});
        let auth_page_url = response.getAllHeaders()['Location'];

        response = UrlFetchApp.fetch(auth_page_url);
        let auth_cookie = response.getAllHeaders()['Set-Cookie'].join('; ');

        const authPage = Cheerio.load(response.getContentText());
        let auth_url = authPage('form').attr('action');

        let options = {
            method: 'post',
            headers: {
                'Cookie': auth_cookie,
            },
            payload: credentials,
            followRedirects: false,
        };
        response = UrlFetchApp.fetch(auth_url, options);
        let timetable_auth_page_url = response.getAllHeaders()['Location'];

        options = {
            method: ""get"",
            headers: headers,
            followRedirects: false,
        }

        response = UrlFetchApp.fetch(timetable_auth_page_url, options);

        this.cookie = response.getAllHeaders()['Set-Cookie'].join('; ');
        let timetable_url = response.getAllHeaders()['Location'];

        options = {
            method: ""get"",
            headers: {
                ...headers,
                ""Cookie"": this.cookie,
            },
            followRedirects: false,
        }

        response = UrlFetchApp.fetch(timetable_url, options);
        const ttPage = Cheerio.load(response.getContentText());
        this.data = JSON.parse(ttPage('div.main').attr('wire:initial-data'));
        this.serverMemo = this.data.serverMemo;
        this.csrf = ttPage('meta[name=""csrf-token""]').attr('content');
    }

    load_week(week_num){
        let admiss_url = ""https://timetable.sevsu.ru/livewire/message/student-rasp""
        let options = {
            method: ""post"",
            headers: {
                'Cookie': this.cookie,
                'X-CSRF-TOKEN': this.csrf,
                'X-Livewire': true,
                'Accept': 'text/html, application/xhtml+xml',
                'Content-Type': 'application/json',
                'Referer': 'https://timetable.sevsu.ru/timetablestudent#close',
            },
            payload: JSON.stringify({
                ...this.data,
                updates: [{
                    ""type"": ""fireEvent"",
                    ""payload"": {
                        ""id"": (Math.random() + 1).toString(36).substring(8),
                        ""event"": ""selectWeek"",
                        ""params"": [
                            ""2023-W"" + ('00'+week_num).slice(-2)
                        ]
                    }
                }]
            }),
        }
        let response = UrlFetchApp.fetch(admiss_url, options);
        this.serverMemo = JSON.parse(response).serverMemo;
        return this.currently_seeking_week_data();
    }

    get_current_week(){
        return parseInt(this.serverMemo.data.numbr_week);
    }

    currently_seeking_week_data() {
        return this.serverMemo.data.usr_tt;
    }
}"
UK5xv6m0,EARL CRACK,MrD347H,Python,Tuesday 12th of September 2023 02:05:52 PM CDT,"[EARL-LIVE] 100045860192317  $  rajeshdabla                                       [EARL-COOKIE]  sb=pGsNVnXcr6bUy9KUJ7WwBmN1;c_user=100045860192317;xs=2:2qEkvVYMANKtLA:2:1694540154:-1:4962;fr=0pfAhFtOcCRkKPmBf.AWXVPn3U3kw6BJksEb5hFUFDjOQ.BlAKF6..AAA.0.0.BlAKF6.AWWtpEm_THc;datr=eqEAZWbyTPt40OqeeeVLvBEs  

[EARL-LIVE] 100073580246771  $  jace123                                           [EARL-COOKIE]  sb=irkwbE9rhgc5OhPYPmV0U9NX;c_user=100073580246771;xs=36:l1-BqpOgWLTH4g:2:1694540899:-1:7829;fr=0sdQvhziZEBIatoMg.AWURw6qFUSmJWQdYZsTrR_p5qUY.BlAKRj..AAA.0.0.BlAKRj.AWXNZ982UhI;datr=Y6QAZRuZYbjSrYgMiIETrVHo

[EARL-LIVE] 100068816839149  $  raia123
 [EARL-COOKIE]  sb=oPic5QR6QZYsAvDaHSqkQFAT;c_user=100068816839149;xs=3:-u1mYy_ngllEuQ:2:1694540909:-1:7824;fr=0HQbzyFccGEjESdig.AWWal9DceItGldbwEn5fxGnayKE.BlAKRs..AAA.0.0.BlAKRs.AWU9l4u1Cl0;datr=bKQAZXpQ0G52Xjgj-fXTx4ZN

[EARL-LIVE] 100064100443935  $  kenisha luna
 [EARL-COOKIE]  sb=zA7Dyyz_kdYcFda0MAnhIhiv;c_user=100064100443935;xs=34:xFNMz9L6HzOvtw:2:1694540914:-1:7824;fr=0ISl4bOcV14nisJnF.AWWkAqpoFGOTyxF1LxTwPLqTZFw.BlAKRx..AAA.0.0.BlAKRx.AWX9YNcSt50;datr=caQAZUWBOyZrHAkCMHRuRQsp

[EARL-LIVE] 100035603709205  $  apriljoy
 [EARL-COOKIE]  sb=R5ZFMufSQuzLp1fPkrlO2bYU;c_user=100035603709205;xs=2:xUWKfTP4agmVFw:2:1694541260:-1:7958;fr=0I7rr5uAdscBe4rbg.AWVH0sGSe5iheUNZaeV7Wn6Usfs.BlAKXL..AAA.0.0.BlAKXL.AWXq62FyCWw;datr=y6UAZVh-vfjnsAt4BHYH7wS4

[EARL-LIVE] 100060121638963  $  johnmark
 [EARL-COOKIE]  sb=84Fv2QZP0IfrdzJUo59v55b1;c_user=100060121638963;xs=28:E2pxUsnyx13Hyg:2:1694541573:-1:8008;fr=0keiEfRaexkOdlnuK.AWWZMAMkAVmGiWC6Tb2CscocfJo.BlAKcF..AAA.0.0.BlAKcF.AWW0ebGc3G4;datr=BacAZcVmiuRyBwHPygYxVYj7

[EARL-LIVE] 100088343738696  $  bea gerlad
 [EARL-COOKIE]  sb=A7ovsViBtr7MYTjC222Uy0P_;c_user=100088343738696;xs=10:Bx-sXMZqDgkFeQ:2:1694542303:-1:8134;fr=0qs4evkYVzhrlp6Xd.AWXmt71K_CnsH1qBAOXZU6WRtro.BlAKnf..AAA.0.0.BlAKnf.AWWqpBRB9Xs;datr=36kAZdA5opg07s71LUI-2Xwg

[EARL-LIVE] 100087681575755  $  zyrenejade
 [EARL-COOKIE]  sb=HV77gVt9E7MASZT5iPUqblBB;c_user=100087681575755;xs=7:4M8KkQi862VAQw:2:1694542316:-1:8132;fr=0kiQFSRnGmnbZTxBK.AWVJ5grG96rrd7xyHKZRIfbr2pM.BlAKns..AAA.0.0.BlAKns.AWXLXhB0r4M;datr=7KkAZXw-pvfTg2cZXJb8TjQg

[EARL-LIVE] 100086924419273  $  jerald123
 [EARL-COOKIE]  sb=VUrBS8g9Qbf9ABfkpR5N9lAE;c_user=100086924419273;xs=4:LWcS7rXpXHWz6A:2:1694542333:-1:8134;fr=0NFRHAxK6CU8POnxe.AWWVN0zK2qEFWWFOu6acMATPs4s.BlAKn9..AAA.0.0.BlAKn9.AWVNnujE-HY;datr=_akAZeF_QZxLnMzNoUCs5rHh

[EARL-LIVE] 100080040321796  $  gelyn1232
 [EARL-COOKIE]  sb=s08SjDiZUsHkfNNuJOUN9cAb;c_user=100080040321796;xs=5:srnMtEw4227w-A:2:1694542409:-1:8071;fr=0AjpBBsXEXkjhe5Xd.AWUjv0byrTL5btJIRrmVNog9HRI.BlAKpI..AAA.0.0.BlAKpI.AWUgI9t4ZDI;datr=SKoAZYRKdgGMUVDwsvpN9DTJ

[EARL-LIVE] 100066817345539  $  sherwinlaxamana
 [EARL-COOKIE]  sb=upvYmfvbPunoO_35fOuWpbHR;c_user=100066817345539;xs=29:Bt7fqpaPkNCCig:2:1694542475:-1:8129;fr=0bqhQHzZbfTuaZGyE.AWVCmNYBbBqlGvWhn8Wa1aZOoJ4.BlAKqL..AAA.0.0.BlAKqL.AWXKM4dFb1E;datr=i6oAZQTvG3ogkSFhh0Eg056P

[EARL-LIVE] 100086776073593  $  jimmy1234
 [EARL-COOKIE]  sb=lQwURsskUaSyXtkGE79An9AF;c_user=100086776073593;xs=9:e8B7OvjvXEXyWA:2:1694543301:-1:7946;fr=0mg6YzJroOZMyLFuL.AWX5fiagy6qFnXDPGOSWa3TIuZE.BlAK3F..AAA.0.0.BlAK3F.AWWuizgG4g8;datr=xa0AZVz07EzmciuLD50DFw1Z

[EARL-LIVE] 100087874117948  $  analyn nebriaga
 [EARL-COOKIE]  sb=TG5ptfBDcKLq46_ugKAQ7a39;c_user=100087874117948;xs=45:7OMm3bBoCGDwHg:2:1694543926:-1:7979;fr=0zFkBkrsaMACKj1AI.AWW_qDMnQWMOz7HfYHJcrZKodro.BlALA2..AAA.0.0.BlALA2.AWXFtyAhy8c;datr=NrAAZV_8NB8oy-NEJzTeMKJF

[EARL-LIVE] 100081603648860  $  april jane
 [EARL-COOKIE]  sb=9Pj5BaPkNOBqaucnbGg_b3Qe;c_user=100081603648860;xs=31:osflqhFqKVuBTQ:2:1694544162:-1:7945;fr=0YytZs2xOG1itongI.AWWQO1V7dba7NkMyreYmWZSJNGI.BlALEh..AAA.0.0.BlALEh.AWWQ9tjm0cA;datr=IbEAZZHQhwDrnzdxQo4uOvkr

[EARL-LIVE] 100088198031608  $  kathmae17
 [EARL-COOKIE]  sb=5k63V5ieE4NGP8C7Pac5aaXR;c_user=100088198031608;xs=49:31PAtPi3i-dWSg:2:1694544659:-1:7936;fr=076Ii9JYDmaeYrRD4.AWVUQAFjevVTYBQU5KNAmMHV4iw.BlALMT..AAA.0.0.BlALMT.AWUgJd205fU;datr=E7MAZdq64vL1Yezevh64_eNM

[EARL-LIVE] 100094406980462  $  yousefkyle
 [EARL-COOKIE]  sb=CQ8VCAeRVeDk3wDXkHcJ3qrY;c_user=100094406980462;xs=36:ghHRKAQTbcEUag:2:1694544942:-1:5881;fr=05Tq3ohSa09gGcx72.AWXpr9DcE4OvS2bP9AwC3VO618o.BlALQu..AAA.0.0.BlALQu.AWVMUkUZlxE;datr=LrQAZYtjFb2ZQOsJg-H23jwk
[EARL-LIVE] 100091985605293  $  john marren
 [EARL-COOKIE]  sb=41CGeGYit7f6YcCcrwg3lku2;c_user=100091985605293;xs=30:B7ChB1-li_59Qw:2:1694545070:-1:7331;fr=0Gml7RJcG8fvHXTys.AWXL_citOy7WrDZD8XWhNJmOBWc.BlALSu..AAA.0.0.BlALSu.AWWSo5YORWw;datr=rrQAZZQDZaGx9L8wFeYdsc_e

[EARL-LIVE] 100091725457747  $  thycelkian
 [EARL-COOKIE]  sb=bNiYIO1tAakofkUjQeMMu4Ge;c_user=100091725457747;xs=36:wynIJeQxd0BW7A:2:1694545081:-1:8031;fr=0xMaLRNnHOczbJLd6.AWUjKbF3YzeI6tYYy46XG_bVIfw.BlALS4..AAA.0.0.BlALS4.AWXqoGqcm5Y;datr=uLQAZakBDowWfE8OUQZKUBqf

[EARL-LIVE] 100068816839149  $  raia12312
 [EARL-COOKIE]  sb=CeLqlKavAy0OtggmEusnDzBs;c_user=100068816839149;xs=42:skdneSSsC0MXfw:2:1694539923:-1:7824;fr=0wGRf36vS1zbn4jct.AWV5kunmHH3oQP3lmAegNLwHuYA.BlAKCT..AAA.0.0.BlAKCT.AWWmh3KRbNY;datr=k6AAZQE6eA9Egw-PeX14if8p

[EARL-LIVE] 100088210226841  $  ianjake13
 [EARL-COOKIE]  sb=RDkwBHGzTnY105d5_liJC4Ri;c_user=100088210226841;xs=3:4FuVvt2q_yLzDg:2:1694540171:-1:7824;fr=041IqZN9vjRBWUvfP.AWVDVOfSre2Yy-DuIHB_ZkjPySQ.BlAKGL..AAA.0.0.BlAKGL.AWUjPJSgMPY;datr=i6EAZQhjfuuIXT8h6OIhkq6K

[EARL-LIVE] 100085383094767  $  karlangelo
 [EARL-COOKIE]  sb=f0aXRvYxoCG4ZtxxfM7bdqxc;c_user=100085383094767;xs=15:2WjsRJNrW4ZG5w:2:1694540205:-1:7824;fr=0AZI3mCHpUEqc1JCa.AWUgivN0iNOAtlM703PVWj-KInk.BlAKGt..AAA.0.0.BlAKGt.AWWQlTd7tc4;datr=raEAZYHbY9zszery1JTMXCk9

[EARL-LIVE] 100088643293586  $  james1235
 [EARL-COOKIE]  sb=ux4Q6BHuOtbYumUVDFxS7uBK;c_user=100088643293586;xs=30:uXaxL00AJes0Ww:2:1694540895:-1:7770;fr=08LD2hi5uLvOPLIX4.AWUx7IwqOdzFqEbNYVs2c-X4XFE.BlAKRe..AAA.0.0.BlAKRe.AWW8qSWczPw;datr=XqQAZZmMntY5xb0gi7q1WSwD

[EARL-LIVE] 100088349082344  $  aira12316
 [EARL-COOKIE]  sb=XzSyoLnrC7CSWYmHYNjOj0WT;c_user=100088349082344;xs=42:3EqanUFMKVHjvA:2:1694540920:-1:7824;fr=0HwMwJl7LBsHga1Iq.AWXokK1Nfe9trlKlkezg4sTW2xc.BlAKR4..AAA.0.0.BlAKR4.AWXg38_zwe0;datr=eKQAZWcaWibdGSyMlnIEX87O

[EARL-LIVE] 100080302458579  $  vienfvourji
 [EARL-COOKIE]  sb=I6tEA8FR7QMTLAPPle9ne7uO;c_user=100080302458579;xs=13:mwGdtArrK9YJ3w:2:1694541173:-1:7824;fr=05MMkOF1Rf95fjJuY.AWXwvPoi_fh2KrhWn4Hv4jJsjCk.BlAKV0..AAA.0.0.BlAKV0.AWVGoKWH-9E;datr=dKUAZbdMsYv0KYZLLTRKsqnL

[EARL-LIVE] 100091107753865  $  analiza123
 [EARL-COOKIE]  sb=CvSO4sot0YLMEWIExW9lZRLJ;c_user=100091107753865;xs=43:Xc6-oBH0Hl2nDw:2:1694542047:-1:7947;fr=0RERqpHJb6QNgk3A7.AWXKj-9_t5n8LX_L5rnOTml0NjM.BlAKjf..AAA.0.0.BlAKjf.AWUnQ3LeTAQ;datr=36gAZaOk730wYrV4LidibSV6

[EARL-LIVE] 100090921852714  $  princekirvey
 [EARL-COOKIE]  sb=0NAwXOFTKOtmRIG2ibK_68yY;c_user=100090921852714;xs=15:0AXPBCeQfAIjJA:2:1694542089:-1:7698;fr=0MAPbORpXdap0BPFr.AWUNYl2GMcna9VyJc_0SyIHllUA.BlAKkJ..AAA.0.0.BlAKkJ.AWV171VWmxg;datr=CakAZYfEJFbx9TQ6VQ9B9PRX

[EARL-LIVE] 100090089449775  $  kaikai 20
 [EARL-COOKIE]  sb=iv4u_mx8sAoNP_lBU7k23o2V;c_user=100090089449775;xs=34:H6TZdBIQVuB6Kw:2:1694542317:-1:7824;fr=0RBu2SJi6Kl5cfMH9.AWU0rofFV-ye2OnHWp5uLUHuilc.BlAKnt..AAA.0.0.BlAKnt.AWXNHc6MArQ;datr=7akAZdmv6mYYrQDSwlqMUiBN

[EARL-LIVE] 100088167188402  $  locsin123
 [EARL-COOKIE]  sb=Uk0ag3iCa2cxD01iuFX3uPZE;c_user=100088167188402;xs=29:RS0bpM-aq1yukA:2:1694542576:-1:7944;fr=0eGisMltkXSi2egIB.AWVNCtMlUxk522IHF7oExZu19ZQ.BlAKrw..AAA.0.0.BlAKrw.AWXQ11KR6vM;datr=8KoAZZH2UrKHDAJGI5iQjupA

[EARL-LIVE] 100082276382852  $  john poul
 [EARL-COOKIE]  sb=ozOU_MhscOsjEjQN1LZ7DYdf;c_user=100082276382852;xs=44:nBCyQzP75lEwWw:2:1694542804:-1:8155;fr=0AJfjvEFRH2t8eEkj.AWXabAlhiI85qhASHnfTtagPF8s.BlAKvU..AAA.0.0.BlAKvU.AWUQnnjk2Yk;datr=1KsAZQR2uNfBZ1-OmB4d5P-_

[EARL-LIVE] 100088188459072  $  reyes1233
 [EARL-COOKIE]  sb=fYd4ulgSmux_9GrqKnJ6i8U4;c_user=100088188459072;xs=33:grmEKSb2u6D28w:2:1694543409:-1:7947;fr=0S88fTLrYdKEQNSWB.AWV8zWViLKnoMZt2PkWUMEpskzk.BlAK"
XQjxVchB,calculadora,teslariu,Python,Tuesday 12th of September 2023 02:01:01 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

""""""
como hacer un portable
1) Instalar una libreria externa (pyinstaller) (en cmd)
python -m pip install pyinstaller

2) Desde la carpeta donde tienen el script, ejecutar (en cmd)
pyinstaller --onefile --noconsole <nombre del script>

Script que implementa una calculadora científica

""""""

import tkinter as tk
from math import sqrt, factorial, pi


#############  funciones #########################
def clic(tecla):
	global calculo_consola
	calculo_consola = calculo_consola + tecla
	calculo.set(calculo_consola)
	
	
	
	
def limpiar():
	global calculo_consola
	calculo_consola = """"
	calculo.set(""0"")
	
	
def hacer_calculo():
	global calculo_consola
	try:
		cuenta = str(eval(calculo_consola))
	except Exception:
		limpiar()
		cuenta = ""ERROR""
	
	calculo.set(cuenta)
	
	
def borrar_caracter():
	global calculo_consola
	calculo_consola = calculo_consola[:-1]
	calculo.set(calculo_consola)
	
                                     
                                     	
################# lado consola

# variable para HACER el cálculo
calculo_consola = """"



############### lado gráfico

# diseño de la calculadora

calc = tk.Tk()
calc.config(width=390, height=600, bg=""Light Steel Blue"")
calc.title(""Calculadora ACME"")
calc.resizable(False, False)



# creo la variable para MOSTRAR el cálculo EN LA PANTALLA
calculo = tk.StringVar()

# limpio la pantalla
limpiar()


# creo la pantalla
pantalla = tk.Entry(
		font=('arial',21,'bold'),
		width=20,
		bd=16,
		justify='right',
		state=tk.DISABLED,
		textvariable=calculo 
)
pantalla.place(x=20,y=50)

# genero las dimensiones de las teclas
ancho = 9
alto = 2


boton = tk.Button(text=""DEL"",width=ancho, height=alto, bg='SeaGreen3', command=borrar_caracter)
boton.place(x=290, y=140)

# primera fila: 1 2 3 +
boton = tk.Button(text=""1"",width=ancho, height=alto, bg='Beige', command=lambda:clic(""1""))
boton.place(x=20, y=200)
boton = tk.Button(text=""2"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""2""))
boton.place(x=110, y=200)
boton = tk.Button(text=""3"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""3""))
boton.place(x=200, y=200)
boton = tk.Button(text=""+"",width=ancho, height=alto, bg='Steel Blue', command=lambda:clic(""+""))
boton.place(x=290, y=200)

# segunda fila: 4 5 6 -
boton = tk.Button(text=""4"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""4""))
boton.place(x=20, y=260)
boton = tk.Button(text=""5"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""5""))
boton.place(x=110, y=260)
boton = tk.Button(text=""6"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""6""))
boton.place(x=200, y=260)
boton = tk.Button(text=""-"",width=ancho, height=alto, bg='Steel Blue', command=lambda:clic(""-""))
boton.place(x=290, y=260)

# tercera fila: 7 8 9 x
boton = tk.Button(text=""7"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""7""))
boton.place(x=20, y=320)
boton = tk.Button(text=""8"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""8""))
boton.place(x=110, y=320)
boton = tk.Button(text=""9"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""9""))
boton.place(x=200, y=320)
boton = tk.Button(text=""*"",width=ancho, height=alto, bg='Steel Blue', command=lambda:clic(""*""))
boton.place(x=290, y=320)

# cuarta fila: ( 0 ) /
boton = tk.Button(text=""("",width=ancho, height=alto, bg='Sky Blue', command=lambda:clic(""(""))
boton.place(x=20, y=380)
boton = tk.Button(text=""0"",width=ancho, height=alto, bg='Beige',command=lambda:clic(""0""))
boton.place(x=110, y=380)
boton = tk.Button(text="")"",width=ancho, height=alto, bg='Sky Blue', command=lambda:clic("")""))
boton.place(x=200, y=380)
boton = tk.Button(text=""/"",width=ancho, height=alto, bg='Steel Blue', command=lambda:clic(""/""))
boton.place(x=290, y=380)

# quinta fila: Raiz, coma decimal,potencia, modulo
boton = tk.Button(text=""\u221A"",width=ancho, height=alto, bg='Steel Blue3', command=lambda:clic(""sqrt(""))
boton.place(x=20, y=440)
boton = tk.Button(text=""."",width=ancho, height=alto, bg='Beige',command=lambda:clic("".""))
boton.place(x=110, y=440)
boton = tk.Button(text=""POW"",width=ancho, height=alto, bg='Steel Blue3', command=lambda:clic(""**""))
boton.place(x=200, y=440)
boton = tk.Button(text=""%"",width=ancho, height=alto, bg='Steel Blue3',command=lambda:clic(""%""))
boton.place(x=290, y=440)

# sexta fila: Clear, factorial, pi ,=
boton = tk.Button(text=""CL"",width=ancho, height=alto, bg='medium aquamarine', command=limpiar)
boton.place(x=20, y=500)
boton = tk.Button(text=""!"",width=ancho, height=alto, bg='Steel Blue3',command=lambda:clic(""factorial(""))
boton.place(x=110, y=500)
boton = tk.Button(text=""\u03c0"",width=ancho, height=alto, bg='Steel Blue2', command=lambda:clic(str(pi)))
boton.place(x=200, y=500)
boton = tk.Button(text=""="",width=ancho, height=alto, bg='medium aquamarine',command=hacer_calculo)
boton.place(x=290, y=500)






calc.mainloop()









"
Xxvutx92,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 01:17:24 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }
 
 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n,freq[102]{},maxi=INT_MIN;
 cin>>n;
 vector<int>v(n);
 cin(v);
 for(int i=0;i<n;i++){
  freq[v[i]]++;
 }
 for(int i=0;i<n;i++){
  maxi=max(freq[v[i]],maxi);
 }
 cout<<maxi<<""\n"";












 return 0;
}

"
3j5fWJxu,Boxing Clicker Simulator,LuaXe,Lua,Tuesday 12th of September 2023 01:16:54 PM CDT,"function C() spawn(function () while getgenv().C do
local args = {[1] = 1}game:GetService(""ReplicatedStorage"").Remote.Train.AddArm:FireServer(unpack(args))
game:GetService(""ReplicatedStorage"").Remote.Battle.ClickFight:FireServer() task.wait()
        end
    end)
end
function W() spawn(function () while getgenv().W do
    local args = {[1] = tonumber(N)}game:GetService(""ReplicatedStorage"").Remote.Battle.JoinFightTrigger:FireServer(unpack(args)) task.wait()
        end
    end)
end

function R() spawn(function () while getgenv().R do
game:GetService(""ReplicatedStorage"").Remote.Glove.RebirthRequest:InvokeServer() task.wait()
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Boxing Clicker Sim"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Strength"",function(val) getgenv().C = val C() end)
b:Toggle(""Instant Finish"",function(val) getgenv().W = val W() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)

b:Box(""Mob Number"",""z"",function(val) N = val end)
b:Label(""Made by LuaXie"",{TextSize = 23; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end"
AydjLnJj,Untitled,kingbode,Python,Tuesday 12th of September 2023 12:57:08 PM CDT,"""""""

A little mathematical challenge. Consider right-angle triangles with side lengths a, b and c ,
where a is the shortest side and c the longest. Write a Python script to find all possible side lengths,
where all three side lengths are integers. Don't include multiples of already found solutions.,
for example, your result should show 3, 4, 5 but not 6, 8, 10. Compute for all integer lengths of a from 1 to 1000.

For clarification, let's say that none of the sides can be longer than 1000.
Rather than print all the combinations, tell us how many triangles you find.
I would like to see solutions that don't import any libraries.

""""""

def searchForMultiples(_a,_b,_c,_triangles):
    if len(_triangles) == 0:
        return [[_a,_b,_c]] , False
    for t in _triangles:
        if _a % t[0] == 0:
            divisor = _a / t[0]
            if _b % t[1] == 0 and _b / t[1] == divisor:
                if _c % t[2] == 0 and _c / t[2] == divisor:
                    return _triangles, True

    _triangles.append([_a,_b,_c])
    print(_a, _b, _c)
    return _triangles , False

def mainV1():
    triangles = []
    for a in range(1, 1001):
        for b in range(a, 1001):
            c = (a**2 + b**2)**0.5
            if c.is_integer() and c <= 1000:
                c = int(c)
                triangles , checkForMultiples = searchForMultiples(a, b, c, triangles)

    print(f""Number of right-angle triangles found: {len(triangles)}"")
    return triangles

mainV1()






"
XcebpPdM,Untitled,ThiiagoBR25,C++,Tuesday 12th of September 2023 12:54:46 PM CDT,"ListNode* swapPairs(ListNode* head) {
        if(!head) return head;
        
        // 2 -> 1 -> 4 -> 3 -> NULL
        ListNode* previous = NULL; // 3
        ListNode* current = head; // NULL
        ListNode* next = current->next; // 4 -> 3
        ListNode* newHead = next; // 2
        
        while(next){
            if(previous) previous->next = next;
            current->next = next->next;
            next->next = current;
            
            previous = current;
            current = current->next;
            next = current ? current->next:NULL;
        }
        
        if(!newHead) newHead = head;
        
        return newHead;
    }"
Vw13GsCQ,Nigerian scammers [12-9-2/2023],bombaires,HTML,Tuesday 12th of September 2023 12:41:39 PM CDT,"<a href=""mailto:mclark868@aol.com""mclark868@aol.com</a>
<a href=""mailto:infooffice543@daum.net"">infooffice543@daum.net</a>
<a href=""mailto:mclark868@aol.com"">mclark868@aol.com</a>
<a href=""mailto:enforcementnetworkf45@gmail.com"">enforcementnetworkf45@gmail.com</a>
<a href=""mailto:e.nforc.eme.n.t.ne.tw.o.r.k.f45@gmail.com"">e.nforc.eme.n.t.ne.tw.o.r.k.f45@gmail.com</a>
<a href=""mailto:e.n.forc.e.men.tnetw.ork.f.4.5@gmail.com"">e.n.forc.e.men.tnetw.ork.f.4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.c.e.m.ent.ne.t.w.o.rkf.4.5@gmail.com"">e.nfo.r.c.e.m.ent.ne.t.w.o.rkf.4.5@gmail.com</a>
<a href=""mailto:e.nf.o.r.c.e.m.e.nt.n.e.t.w.or.kf.45@gmail.com"">e.nf.o.r.c.e.m.e.nt.n.e.t.w.or.kf.45@gmail.com</a>
<a href=""mailto:enforcem.en.tne.t.wor.k.f.45@gmail.com"">enforcem.en.tne.t.wor.k.f.45@gmail.com</a>
<a href=""mailto:enf.orc.e.men.tnet.wor.k.f.45@gmail.com"">enf.orc.e.men.tnet.wor.k.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.rc.e.me.n.t.ne.t.w.o.r.k.f.45@gmail.com"">e.n.fo.rc.e.me.n.t.ne.t.w.o.r.k.f.45@gmail.com</a>
<a href=""mailto:e.nfo.r.c.em.e.n.tn.etwo.r.kf45@gmail.com"">e.nfo.r.c.em.e.n.tn.etwo.r.kf45@gmail.com</a>
<a href=""mailto:enforc.em.entnetw.o.r.k.f45@gmail.com"">enforc.em.entnetw.o.r.k.f45@gmail.com</a>
<a href=""mailto:enf.o.rce.me.nt.networ.k.f4.5@gmail.com"">enf.o.rce.me.nt.networ.k.f4.5@gmail.com</a>
<a href=""mailto:en.f.o.rc.em.e.ntn.e.two.rk.f4.5@gmail.com"">en.f.o.rc.em.e.ntn.e.two.rk.f4.5@gmail.com</a>
<a href=""mailto:enfo.rc.e.ment.net.wor.kf.4.5@gmail.com"">enfo.rc.e.ment.net.wor.kf.4.5@gmail.com</a>
<a href=""mailto:en.for.c.em.entnetw.ork.f.4.5@gmail.com"">en.for.c.em.entnetw.ork.f.4.5@gmail.com</a>
<a href=""mailto:e.n.f.orcem.e.ntne.t.w.o.rk.f.4.5@gmail.com"">e.n.f.orcem.e.ntne.t.w.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:e.nf.o.r.c.em.en.tn.etwo.r.kf45@gmail.com"">e.nf.o.r.c.em.en.tn.etwo.r.kf45@gmail.com</a>
<a href=""mailto:en.forceme.n.t.netw.o.rk.f4.5@gmail.com"">en.forceme.n.t.netw.o.rk.f4.5@gmail.com</a>
<a href=""mailto:enf.orce.men.t.ne.t.w.o.rkf.4.5@gmail.com"">enf.orce.men.t.ne.t.w.o.rkf.4.5@gmail.com</a>
<a href=""mailto:en.forc.emen.tn.etwork.f45@gmail.com"">en.forc.emen.tn.etwork.f45@gmail.com</a>
<a href=""mailto:enfo.r.c.ementne.tw.or.k.f45@gmail.com"">enfo.r.c.ementne.tw.or.k.f45@gmail.com</a>
<a href=""mailto:e.n.f.o.r.c.e.m.ent.n.e.two.rk.f45@gmail.com"">e.n.f.o.r.c.e.m.ent.n.e.two.rk.f45@gmail.com</a>
<a href=""mailto:e.nf.o.rc.eme.nt.n.e.t.wo.r.k.f.4.5@gmail.com"">e.nf.o.rc.eme.nt.n.e.t.wo.r.k.f.4.5@gmail.com</a>
<a href=""mailto:en.f.orc.em.e.n.tnetwo.rk.f45@gmail.com"">en.f.orc.em.e.n.tnetwo.rk.f45@gmail.com</a>
<a href=""mailto:enf.or.c.em.e.n.tn.e.two.r.k.f4.5@gmail.com"">enf.or.c.em.e.n.tn.e.two.r.k.f4.5@gmail.com</a>
<a href=""mailto:e.n.fo.rc.emen.t.n.etwo.r.k.f45@gmail.com"">e.n.fo.rc.emen.t.n.etwo.r.k.f45@gmail.com</a>
<a href=""mailto:e.nf.o.rcemen.tnet.workf4.5@gmail.com"">e.nf.o.rcemen.tnet.workf4.5@gmail.com</a>
<a href=""mailto:en.fo.rc.em.entn.e.tw.o.r.kf.4.5@gmail.com"">en.fo.rc.em.entn.e.tw.o.r.kf.4.5@gmail.com</a>
<a href=""mailto:e.n.f.or.c.e.m.e.nt.n.e.tw.o.rk.f45@gmail.com"">e.n.f.or.c.e.m.e.nt.n.e.tw.o.rk.f45@gmail.com</a>
<a href=""mailto:enforce.m.e.ntn.etw.or.k.f.4.5@gmail.com"">enforce.m.e.ntn.etw.or.k.f.4.5@gmail.com</a>
<a href=""mailto:e.n.f.orc.e.me.ntne.tw.or.k.f.4.5@gmail.com"">e.n.f.orc.e.me.ntne.tw.or.k.f.4.5@gmail.com</a>
<a href=""mailto:e.nforceme.nt.netw.or.kf.4.5@gmail.com"">e.nforceme.nt.netw.or.kf.4.5@gmail.com</a>
<a href=""mailto:e.n.f.or.c.em.ent.n.e.t.work.f4.5@gmail.com"">e.n.f.or.c.em.ent.n.e.t.work.f4.5@gmail.com</a>
<a href=""mailto:e.nfor.ce.me.n.t.n.etw.or.k.f45@gmail.com"">e.nfor.ce.me.n.t.n.etw.or.k.f45@gmail.com</a>
<a href=""mailto:enfor.c.eme.ntne.twor.k.f4.5@gmail.com"">enfor.c.eme.ntne.twor.k.f4.5@gmail.com</a>
<a href=""mailto:e.n.for.c.e.m.e.ntn.etw.o.r.kf.4.5@gmail.com"">e.n.for.c.e.m.e.ntn.etw.o.r.kf.4.5@gmail.com</a>
<a href=""mailto:enforc.e.me.nt.netwo.r.kf4.5@gmail.com"">enforc.e.me.nt.netwo.r.kf4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.c.e.mentne.tw.or.kf.45@gmail.com"">e.nfo.r.c.e.mentne.tw.or.kf.45@gmail.com</a>
<a href=""mailto:enf.o.r.ce.me.nt.n.et.w.o.r.kf.45@gmail.com"">enf.o.r.ce.me.nt.n.et.w.o.r.kf.45@gmail.com</a>
<a href=""mailto:en.f.o.r.c.e.men.tn.etw.o.r.kf45@gmail.com"">en.f.o.r.c.e.men.tn.etw.o.r.kf45@gmail.com</a>
<a href=""mailto:e.n.f.o.rc.em.e.ntn.e.t.w.o.r.kf.4.5@gmail.com"">e.n.f.o.rc.em.e.ntn.e.t.w.o.r.kf.4.5@gmail.com</a>
<a href=""mailto:e.nf.o.rce.men.tne.t.wo.rkf45@gmail.com"">e.nf.o.rce.men.tne.t.wo.rkf45@gmail.com</a>
<a href=""mailto:e.n.for.ce.me.ntn.et.w.o.rkf4.5@gmail.com"">e.n.for.ce.me.ntn.et.w.o.rkf4.5@gmail.com</a>
<a href=""mailto:en.for.c.emen.t.ne.t.w.o.rkf.4.5@gmail.com"">en.for.c.emen.t.ne.t.w.o.rkf.4.5@gmail.com</a>
<a href=""mailto:en.f.or.c.e.me.n.tn.e.t.w.orkf.45@gmail.com"">en.f.or.c.e.me.n.tn.e.t.w.orkf.45@gmail.com</a>
<a href=""mailto:enf.or.c.e.m.en.tn.etw.o.rkf.45@gmail.com"">enf.or.c.e.m.en.tn.etw.o.rkf.45@gmail.com</a>
<a href=""mailto:e.nfor.ce.me.n.t.netw.o.rkf4.5@gmail.com"">e.nfor.ce.me.n.t.netw.o.rkf4.5@gmail.com</a>
<a href=""mailto:en.fo.rc.e.men.t.n.e.t.w.orkf.45@gmail.com"">en.fo.rc.e.men.t.n.e.t.w.orkf.45@gmail.com</a>
<a href=""mailto:en.f.o.rc.em.e.n.t.net.w.ork.f.45@gmail.com"">en.f.o.rc.em.e.n.t.net.w.ork.f.45@gmail.com</a>
<a href=""mailto:e.n.for.ce.me.ntne.two.rk.f.45@gmail.com"">e.n.for.ce.me.ntne.two.rk.f.45@gmail.com</a>
<a href=""mailto:en.f.o.r.cem.e.nt.net.w.or.k.f4.5@gmail.com"">en.f.o.r.cem.e.nt.net.w.or.k.f4.5@gmail.com</a>
<a href=""mailto:en.f.or.c.em.e.n.tn.etw.or.kf45@gmail.com"">en.f.or.c.em.e.n.tn.etw.or.kf45@gmail.com</a>
<a href=""mailto:e.n.fo.rcement.n.et.w.o.rk.f45@gmail.com"">e.n.fo.rcement.n.et.w.o.rk.f45@gmail.com</a>
<a href=""mailto:en.f.or.ce.m.e.n.tn.e.tw.orkf4.5@gmail.com"">en.f.or.ce.m.e.n.tn.e.tw.orkf4.5@gmail.com</a>
<a href=""mailto:enfo.rc.e.m.e.ntnetw.or.kf4.5@gmail.com"">enfo.rc.e.m.e.ntnetw.or.kf4.5@gmail.com</a>
<a href=""mailto:e.nf.o.r.ce.me.nt.net.work.f4.5@gmail.com"">e.nf.o.r.ce.me.nt.net.work.f4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.ce.me.ntn.etw.or.kf4.5@gmail.com"">e.nfo.r.ce.me.ntn.etw.or.kf4.5@gmail.com</a>
<a href=""mailto:enf.or.c.em.en.tn.etw.orkf.4.5@gmail.com"">enf.or.c.em.en.tn.etw.orkf.4.5@gmail.com</a>
<a href=""mailto:e.nfor.c.em.entnetwo.rkf.45@gmail.com"">e.nfor.c.em.entnetwo.rkf.45@gmail.com</a>
<a href=""mailto:en.f.o.r.c.em.e.n.tn.etwo.rk.f.4.5@gmail.com"">en.f.o.r.c.em.e.n.tn.etwo.rk.f.4.5@gmail.com</a>
<a href=""mailto:e.nforcem.ent.n.e.tw.o.r.kf.4.5@gmail.com"">e.nforcem.ent.n.e.tw.o.r.kf.4.5@gmail.com</a>
<a href=""mailto:en.forc.e.m.en.tne.two.r.kf45@gmail.com"">en.forc.e.m.en.tne.two.r.kf45@gmail.com</a>
<a href=""mailto:en.f.o.rc.e.me.nt.net.wo.rkf4.5@gmail.com"">en.f.o.rc.e.me.nt.net.wo.rkf4.5@gmail.com</a>
<a href=""mailto:en.fo.r.cem.en.t.n.etw.ork.f4.5@gmail.com"">en.fo.r.cem.en.t.n.etw.ork.f4.5@gmail.com</a>
<a href=""mailto:e.n.forc.em.e.n.t.n.e.two.r.k.f.4.5@gmail.com"">e.n.forc.em.e.n.t.n.e.two.r.k.f.4.5@gmail.com</a>
<a href=""mailto:en.for.c.em.e.n.t.n.e.tw.or.k.f.4.5@gmail.com"">en.for.c.em.e.n.t.n.e.tw.or.k.f.4.5@gmail.com</a>
<a href=""mailto:en.fo.r.ce.men.t.n.e.t.w.ork.f4.5@gmail.com"">en.fo.r.ce.men.t.n.e.t.w.ork.f4.5@gmail.com</a>
<a href=""mailto:e.nfo.rc.eme.n.tn.e.t.work.f.4.5@gmail.com"">e.nfo.rc.eme.n.tn.e.t.work.f.4.5@gmail.com</a>
<a href=""mailto:e.n.f.o.rc.e.m.ent.n.e.tw.ork.f.45@gmail.com"">e.n.f.o.rc.e.m.ent.n.e.tw.ork.f.45@gmail.com</a>
<a href=""mailto:e.nfo.r.ce.me.n.tnetw.o.rk.f45@gmail.com"">e.nfo.r.ce.me.n.tnetw.o.rk.f45@gmail.com</a>
<a href=""mailto:enfo.r.c.em.e.nt.net.wo.rkf4.5@gmail.com"">enfo.r.c.em.e.nt.net.wo.rkf4.5@gmail.com</a>
<a href=""mailto:enf.o.r.ceme.ntne.t.work.f4.5@gmail.com"">enf.o.r.ceme.ntne.t.work.f4.5@gmail.com</a>
<a href=""mailto:en.forcem.e.n.tn.e.tw.o.rkf4.5@gmail.com"">en.forcem.e.n.tn.e.tw.o.rkf4.5@gmail.com</a>
<a href=""mailto:enf.o.r.ce.m.e.nt.n.e.two.rkf4.5@gmail.com"">enf.o.r.ce.m.e.nt.n.e.two.rkf4.5@gmail.com</a>
<a href=""mailto:enfo.rc.em.e.n.t.ne.twor.kf.4.5@gmail.com"">enfo.rc.em.e.n.t.ne.twor.kf.4.5@gmail.com</a>
<a href=""mailto:e.nf.orc.em.ent.n.e.t.w.o.rk.f.4.5@gmail.com"">e.nf.orc.em.ent.n.e.t.w.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.c.e.m.e.n.t.n.etwo.rkf.45@gmail.com"">e.nfo.r.c.e.m.e.n.t.n.etwo.rkf.45@gmail.com</a>
<a href=""mailto:enfo.r.cemen.t.net.w.o.rk.f.4.5@gmail.com"">enfo.r.cemen.t.net.w.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:en.forc.e.m.entnetwor.k.f.4.5@gmail.com"">en.forc.e.m.entnetwor.k.f.4.5@gmail.com</a>
<a href=""mailto:en.f.orce.m.e.ntn.etwor.kf.4.5@gmail.com"">en.f.orce.m.e.ntn.etwor.kf.4.5@gmail.com</a>
<a href=""mailto:e.n.forc.eme.ntn.e.t.wo.rkf.45@gmail.com"">e.n.forc.eme.ntn.e.t.wo.rkf.45@gmail.com</a>
<a href=""mailto:enforce.m.en.tnet.w.ork.f4.5@gmail.com"">enforce.m.en.tnet.w.ork.f4.5@gmail.com</a>
<a href=""mailto:enf.or.c.e.m.ent.ne.t.wo.rkf4.5@gmail.com"">enf.or.c.e.m.ent.ne.t.wo.rkf4.5@gmail.com</a>
<a href=""mailto:e.n.fo.rc.ement.ne.t.workf.4.5@gmail.com"">e.n.fo.rc.ement.ne.t.workf.4.5@gmail.com</a>
<a href=""mailto:e.n.f.o.r.cem.e.n.tn.e.tw.o.rkf45@gmail.com"">e.n.f.o.r.cem.e.n.tn.e.tw.o.rkf45@gmail.com</a>
<a href=""mailto:e.n.f.orc.em.e.n.tnetwor.kf45@gmail.com"">e.n.f.orc.em.e.n.tnetwor.kf45@gmail.com</a>
<a href=""mailto:e.n.forc.e.me.nt.n.etwo.rkf45@gmail.com"">e.n.forc.e.me.nt.n.etwo.rkf45@gmail.com</a>
<a href=""mailto:e.nf.o.rce.m.e.ntn.e.two.r.k.f.4.5@gmail.com"">e.nf.o.rce.m.e.ntn.e.two.r.k.f.4.5@gmail.com</a>
<a href=""mailto:enfo.rc.e.m.e.n.t.ne.t.work.f.45@gmail.com"">enfo.rc.e.m.e.n.t.ne.t.work.f.45@gmail.com</a>
<a href=""mailto:enf.or.c.emen.t.n.e.t.w.o.r.k.f.4.5@gmail.com"">enf.or.c.emen.t.n.e.t.w.o.r.k.f.4.5@gmail.com</a>
<a href=""mailto:enf.or.ce.m.e.nt.netwo.r.kf4.5@gmail.com"">enf.or.ce.m.e.nt.netwo.r.kf4.5@gmail.com</a>
<a href=""mailto:en.forc.emen.t.ne.t.w.or.kf4.5@gmail.com"">en.forc.emen.t.ne.t.w.or.kf4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.ce.m.e.nt.net.w.or.kf.4.5@gmail.com"">e.nfo.r.ce.m.e.nt.net.w.or.kf.4.5@gmail.com</a>
<a href=""mailto:e.n.f.o.r.ce.mentne.twork.f.45@gmail.com"">e.n.f.o.r.ce.mentne.twork.f.45@gmail.com</a>
<a href=""mailto:e.nf.o.rc.e.me.n.tnet.wor.k.f45@gmail.com"">e.nf.o.rc.e.me.n.tnet.wor.k.f45@gmail.com</a>
<a href=""mailto:en.f.or.ce.m.e.n.tn.e.tworkf4.5@gmail.com"">en.f.or.ce.m.e.n.tn.e.tworkf4.5@gmail.com</a>
<a href=""mailto:en.f.or.c.e.ment.n.e.t.wo.r.k.f.4.5@gmail.com"">en.f.or.c.e.ment.n.e.t.wo.r.k.f.4.5@gmail.com</a>
<a href=""mailto:e.nfo.rc.emen.tn.e.t.wor.kf45@gmail.com"">e.nfo.rc.emen.tn.e.t.wor.kf45@gmail.com</a>
<a href=""mailto:e.n.f.orceme.n.t.ne.t.w.ork.f45@gmail.com"">e.n.f.orceme.n.t.ne.t.w.ork.f45@gmail.com</a>
<a href=""mailto:e.n.fo.rc.ementnet.w.or.k.f45@gmail.com"">e.n.fo.rc.ementnet.w.or.k.f45@gmail.com</a>
<a href=""mailto:e.n.f.o.r.c.e.m.e.n.tn.e.tw.or.k.f.45@gmail.com"">e.n.f.o.r.c.e.m.e.n.tn.e.tw.or.k.f.45@gmail.com</a>
<a href=""mailto:e.nfo.rc.emen.t.n.e.t.w.ork.f.45@gmail.com"">e.nfo.rc.emen.t.n.e.t.w.ork.f.45@gmail.com</a>
<a href=""mailto:enforc.eme.n.tn.et.workf4.5@gmail.com"">enforc.eme.n.tn.et.workf4.5@gmail.com</a>
<a href=""mailto:enf.orc.e.m.e.nt.n.etwo.r.kf45@gmail.com"">enf.orc.e.m.e.nt.n.etwo.r.kf45@gmail.com</a>
<a href=""mailto:e.nfor.cement.ne.two.rk.f4.5@gmail.com"">e.nfor.cement.ne.two.rk.f4.5@gmail.com</a>
<a href=""mailto:e.nfo.rc.em.ent.net.w.ork.f4.5@gmail.com"">e.nfo.rc.em.ent.net.w.ork.f4.5@gmail.com</a>
<a href=""mailto:e.nf.orce.me.ntn.e.t.workf.4.5@gmail.com"">e.nf.orce.me.ntn.e.t.workf.4.5@gmail.com</a>
<a href=""mailto:enforc.em.entne.tw.o.r.kf45@gmail.com"">enforc.em.entne.tw.o.r.kf45@gmail.com</a>
<a href=""mailto:e.n.fo.rc.e.me.ntne.tw.o.r.k.f45@gmail.com"">e.n.fo.rc.e.me.ntne.tw.o.r.k.f45@gmail.com</a>
<a href=""mailto:e.nf.o.r.ce.me.n.t.net.workf4.5@gmail.com"">e.nf.o.r.ce.me.n.t.net.workf4.5@gmail.com</a>
<a href=""mailto:enfo.r.ce.m.en.tnetwo.r.k.f.4.5@gmail.com"">enfo.r.ce.m.en.tnetwo.r.k.f.4.5@gmail.com</a>
<a href=""mailto:enfo.r.c.e.m.ent.ne.tworkf.4.5@gmail.com"">enfo.r.c.e.m.ent.ne.tworkf.4.5@gmail.com</a>
<a href=""mailto:e.nf.o.r.c.em.entnet.w.or.k.f.4.5@gmail.com"">e.nf.o.r.c.em.entnet.w.or.k.f.4.5@gmail.com</a>
<a href=""mailto:en.for.cem.ent.n.e.twor.kf.4.5@gmail.com"">en.for.cem.ent.n.e.twor.kf.4.5@gmail.com</a>
<a href=""mailto:e.n.force.m.entn.et.wo.rk.f45@gmail.com"">e.n.force.m.entn.et.wo.rk.f45@gmail.com</a>
<a href=""mailto:e.n.f.or.c.ementnet.workf.45@gmail.com"">e.n.f.or.c.ementnet.workf.45@gmail.com</a>
<a href=""mailto:enf.or.cem.en.tn.e.t.w.o.rk.f45@gmail.com"">enf.or.cem.en.tn.e.t.w.o.rk.f45@gmail.com</a>
<a href=""mailto:e.n.forc.eme.ntn.et.w.o.r.k.f45@gmail.com"">e.n.forc.eme.ntn.et.w.o.r.k.f45@gmail.com</a>
<a href=""mailto:en.f.o.r.ce.men.t.ne.tw.o.r.kf4.5@gmail.com"">en.f.o.r.ce.men.t.ne.tw.o.r.kf4.5@gmail.com</a>
<a href=""mailto:e.n.for.ceme.ntne.twor.k.f.4.5@gmail.com"">e.n.for.ceme.ntne.twor.k.f.4.5@gmail.com</a>
<a href=""mailto:e.nf.orc.e.ment.ne.twor.k.f.45@gmail.com"">e.nf.orc.e.ment.ne.twor.k.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.rc.e.me.ntnet.w.or.kf.45@gmail.com"">e.n.fo.rc.e.me.ntnet.w.or.kf.45@gmail.com</a>
<a href=""mailto:enf.o.rc.em.en.t.ne.t.wo.r.k.f.45@gmail.com"">enf.o.rc.em.en.t.ne.t.wo.r.k.f.45@gmail.com</a>
<a href=""mailto:en.f.o.rce.men.tne.tw.orkf.4.5@gmail.com"">en.f.o.rce.men.tne.tw.orkf.4.5@gmail.com</a>
<a href=""mailto:e.nfo.rcem.e.ntn.et.w.o.r.k.f45@gmail.com"">e.nfo.rcem.e.ntn.et.w.o.r.k.f45@gmail.com</a>
<a href=""mailto:en.force.m.ent.ne.t.wo.r.kf4.5@gmail.com"">en.force.m.ent.ne.t.wo.r.kf4.5@gmail.com</a>
<a href=""mailto:en.fo.rce.men.tn.e.t.w.orkf.4.5@gmail.com"">en.fo.rce.men.tn.e.t.w.orkf.4.5@gmail.com</a>
<a href=""mailto:e.n.fo.r.cem.entnet.wor.k.f4.5@gmail.com"">e.n.fo.r.cem.entnet.wor.k.f4.5@gmail.com</a>
<a href=""mailto:e.nf.or.c.e.me.n.tnetwor.k.f.4.5@gmail.com"">e.nf.or.c.e.me.n.tnetwor.k.f.4.5@gmail.com</a>
<a href=""mailto:en.f.o.r.c.emen.t.netw.o.rk.f.4.5@gmail.com"">en.f.o.r.c.emen.t.netw.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:enfo.rce.men.t.n.e.tw.orkf4.5@gmail.com"">enfo.rce.men.t.n.e.tw.orkf4.5@gmail.com</a>
<a href=""mailto:enfor.c.e.m.entnetwor.kf4.5@gmail.com"">enfor.c.e.m.entnetwor.kf4.5@gmail.com</a>
<a href=""mailto:e.nfo.r.c.e.m.e.ntnetwor.kf4.5@gmail.com"">e.nfo.r.c.e.m.e.ntnetwor.kf4.5@gmail.com</a>
<a href=""mailto:en.f.or.ce.m.ent.n.e.t.wo.r.k.f45@gmail.com"">en.f.or.ce.m.ent.n.e.t.wo.r.k.f45@gmail.com</a>
<a href=""mailto:enf.o.rceme.ntnet.w.ork.f4.5@gmail.com"">enf.o.rceme.ntnet.w.ork.f4.5@gmail.com</a>
<a href=""mailto:e.n.for.c.e.mentnetwor.kf.4.5@gmail.com"">e.n.for.c.e.mentnetwor.kf.4.5@gmail.com</a>
<a href=""mailto:en.f.or.cement.ne.two.r.k.f4.5@gmail.com"">en.f.or.cement.ne.two.r.k.f4.5@gmail.com</a>
<a href=""mailto:enforc.em.e.n.tn.e.t.w.or.k.f.45@gmail.com"">enforc.em.e.n.tn.e.t.w.or.k.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.r.c.e.m.ent.networ.k.f.4.5@gmail.com"">e.n.fo.r.c.e.m.ent.networ.k.f.4.5@gmail.com</a>
<a href=""mailto:enf.o.r.cem.ent.net.w.o.r.k.f4.5@gmail.com"">enf.o.r.cem.ent.net.w.o.r.k.f4.5@gmail.com</a>
<a href=""mailto:en.f.orce.m.e.nt.n.e.tw.o.rk.f.4.5@gmail.com"">en.f.orce.m.e.nt.n.e.tw.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:enf.o.r.c.eme.n.t.n.et.work.f.4.5@gmail.com"">enf.o.r.c.eme.n.t.n.et.work.f.4.5@gmail.com</a>
<a href=""mailto:en.f.o.rc.e.men.tn.e.t.wo.r.k.f45@gmail.com"">en.f.o.rc.e.men.tn.e.t.wo.r.k.f45@gmail.com</a>
<a href=""mailto:enfo.rcem.entnet.w.o.r.kf45@gmail.com"">enfo.rcem.entnet.w.o.r.kf45@gmail.com</a>
<a href=""mailto:en.f.o.r.c.em.e.nt.n.et.workf45@gmail.com"">en.f.o.r.c.em.e.nt.n.et.workf45@gmail.com</a>
<a href=""mailto:e.n.f.orce.m.ent.n.et.work.f.45@gmail.com"">e.n.f.orce.m.ent.n.et.work.f.45@gmail.com</a>
<a href=""mailto:en.for.c.eme.nt.ne.t.work.f.4.5@gmail.com"">en.for.c.eme.nt.ne.t.work.f.4.5@gmail.com</a>
<a href=""mailto:en.for.cement.n.et.w.o.rk.f4.5@gmail.com"">en.for.cement.n.et.w.o.rk.f4.5@gmail.com</a>
<a href=""mailto:e.nfo.rce.me.nt.ne.two.rkf4.5@gmail.com"">e.nfo.rce.me.nt.ne.two.rkf4.5@gmail.com</a>
<a href=""mailto:e.nf.o.rce.m.e.n.t.ne.two.r.kf45@gmail.com"">e.nf.o.rce.m.e.n.t.ne.two.r.kf45@gmail.com</a>
<a href=""mailto:e.nfor.c.ement.ne.tw.o.rk.f.4.5@gmail.com"">e.nfor.c.ement.ne.tw.o.rk.f.4.5@gmail.com</a>
<a href=""mailto:e.nf.or.ceme.ntnet.wo.rk.f.45@gmail.com"">e.nf.or.ceme.ntnet.wo.rk.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.r.c.em.en.t.n.e.two.rk.f4.5@gmail.com"">e.n.fo.r.c.em.en.t.n.e.two.rk.f4.5@gmail.com</a>
<a href=""mailto:e.nfo.rce.me.nt.ne.t.w.o.r.k.f4.5@gmail.com"">e.nfo.rce.me.nt.ne.t.w.o.r.k.f4.5@gmail.com</a>
<a href=""mailto:e.nfor.ce.m.en.tn.etw.o.r.k.f.45@gmail.com"">e.nfor.ce.m.en.tn.etw.o.r.k.f.45@gmail.com</a>
<a href=""mailto:enf.or.c.emen.t.ne.t.w.ork.f45@gmail.com"">enf.or.c.emen.t.ne.t.w.ork.f45@gmail.com</a>
<a href=""mailto:e.n.f.o.rcem.en.tn.e.twor.kf45@gmail.com"">e.n.f.o.rcem.en.tn.e.twor.kf45@gmail.com</a>
<a href=""mailto:en.f.o.r.ce.me.ntne.two.rk.f45@gmail.com"">en.f.o.r.ce.me.ntne.two.rk.f45@gmail.com</a>
<a href=""mailto:e.nf.or.c.em.entne.t.w.orkf.4.5@gmail.com"">e.nf.or.c.em.entne.t.w.orkf.4.5@gmail.com</a>
<a href=""mailto:en.f.or.cem.e.nt.ne.t.w.o.r.k.f.45@gmail.com"">en.f.or.cem.e.nt.ne.t.w.o.r.k.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.r.c.e.m.ent.net.wo.r.k.f45@gmail.com"">e.n.fo.r.c.e.m.ent.net.wo.r.k.f45@gmail.com</a>
<a href=""mailto:en.f.orcem.entne.t.w.o.r.kf.45@gmail.com"">en.f.orcem.entne.t.w.o.r.kf.45@gmail.com</a>
<a href=""mailto:e.n.for.ce.mentne.two.rk.f.45@gmail.com"">e.n.for.ce.mentne.two.rk.f.45@gmail.com</a>
<a href=""mailto:enfor.ceme.n.tnetwo.rk.f.45@gmail.com"">enfor.ceme.n.tnetwo.rk.f.45@gmail.com</a>
<a href=""mailto:enfo.rc.eme.nt.n.e.two.rkf45@gmail.com"">enfo.rc.eme.nt.n.e.two.rkf45@gmail.com</a>
<a href=""mailto:en.for.ce.m.entnetw.orkf.4.5@gmail.com"">en.for.ce.m.entnetw.orkf.4.5@gmail.com</a>
<a href=""mailto:en.f.o.r.c.em.e.nt.ne.t.wo.r.k.f.45@gmail.com"">en.f.o.r.c.em.e.nt.ne.t.wo.r.k.f.45@gmail.com</a>
<a href=""mailto:e.n.f.or.cem.ent.netw.o.r.kf.45@gmail.com"">e.n.f.or.cem.ent.netw.o.r.kf.45@gmail.com</a>
<a href=""mailto:enfo.rc.e.m.e.n.t.ne.t.wo.rkf.45@gmail.com"">enfo.rc.e.m.e.n.t.ne.t.wo.rkf.45@gmail.com</a>
<a href=""mailto:e.nf.or.c.e.men.tn.e.tw.orkf.4.5@gmail.com"">e.nf.or.c.e.men.tn.e.tw.orkf.4.5@gmail.com</a>
<a href=""mailto:e.nforceme.n.tn.etw.o.r.k.f4.5@gmail.com"">e.nforceme.n.tn.etw.o.r.k.f4.5@gmail.com</a>
<a href=""mailto:enf.o.rcem.en.tnet.wo.r.k.f.4.5@gmail.com"">enf.o.rcem.en.tnet.wo.r.k.f.4.5@gmail.com</a>
<a href=""mailto:e.nf.or.c.emen.t.ne.twork.f45@gmail.com"">e.nf.or.c.emen.t.ne.twork.f45@gmail.com</a>
<a href=""mailto:e.n.fo.rc.ement.n.et.w.o.r.k.f4.5@gmail.com"">e.n.fo.rc.ement.n.et.w.o.r.k.f4.5@gmail.com</a>
<a href=""mailto:en.f.o.r.ceme.n.tne.tw.o.rkf.45@gmail.com"">en.f.o.r.ceme.n.tne.tw.o.rkf.45@gmail.com</a>
<a href=""mailto:enf.o.rce.m.entn.e.tw.o.r.kf45@gmail.com"">enf.o.rce.m.entn.e.tw.o.r.kf45@gmail.com</a>
<a href=""mailto:e.n.fo.r.c.em.en.tn.e.t.w.or.k.f.45@gmail.com"">e.n.fo.r.c.em.en.tn.e.t.w.or.k.f.45@gmail.com</a>
<a href=""mailto:en.f.or.cem.en.t.ne.t.wor.k.f.45@gmail.com"">en.f.or.cem.en.t.ne.t.wor.k.f.45@gmail.com</a>
<a href=""mailto:e.n.fo.r.c.e.m.entn.e.t.w.orkf.45@gmail.com"">e.n.fo.r.c.e.m.entn.e.t.w.orkf.45@gmail.com</a>
<a href=""mailto:e.nforceme.ntne.t.wor.kf4.5@gmail.com"">e.nforceme.ntne.t.wor.kf4.5@gmail.com</a>
<a href=""mailto:e.n.for.c.e.men.tn.etw.orkf4.5@gmail.com"">e.n.for.c.e.men.tn.etw.orkf4.5@gmail.com</a>
<a href=""mailto:e.nfo.rc.e.m.e.nt.ne.t.w.o.rkf45@gmail.com"">e.nfo.rc.e.m.e.nt.ne.t.w.o.rkf45@gmail.com</a>
<a href=""mailto:enf.o.r.ce.mentn.e.t.w.o.rkf.4.5@gmail.com"">enf.o.r.ce.mentn.e.t.w.o.rkf.4.5@gmail.com</a>
<a href=""mailto:en.f.orc.e.mentne.t.work.f.45@gmail.com"">en.f.orc.e.mentne.t.work.f.45@gmail.com</a>
<a href=""mailto:en.f.o.r.ce.ment.netw.orkf.4.5@gmail.com"">en.f.o.r.ce.ment.netw.orkf.4.5@gmail.com</a>
<a href=""mailto:enf.or.c.e.m.e.n.tne.two.rk.f45@gmail.com"">enf.or.c.e.m.e.n.tne.two.rk.f45@gmail.com</a>
<a href=""mailto:enfo.r.c.emen.tne.twor.k.f45@gmail.com"">enfo.r.c.emen.tne.twor.k.f45@gmail.com</a>
<a href=""mailto:enfo.r.c.e.me.ntnetw.ork.f45@gmail.com"">enfo.r.c.e.me.ntnetw.ork.f45@gmail.com</a>
<a href=""mailto:e.n.f.or.c.ementn.e.two.rkf45@gmail.com"">e.n.f.or.c.ementn.e.two.rkf45@gmail.com</a>
<a href=""mailto:enfo.r.cem.en.t.n.e.tw.o.r.kf.45@gmail.com"">enfo.r.cem.en.t.n.e.tw.o.r.kf.45@gmail.com</a>
<a href=""mailto:e.n.fo.r.ce.me.n.t.ne.t.w.o.r.k.f45@gmail.com"">e.n.fo.r.ce.me.n.t.ne.t.w.o.r.k.f45@gmail.com</a>
<a href=""mailto:en.forc.eme.ntn.et.work.f.4.5@gmail.com"">en.forc.eme.ntn.et.work.f.4.5@gmail.com</a>
<a href=""mailto:en.for.c.em.entn.et.wo.r.kf4.5@gmail.com"">en.for.c.em.entn.et.wo.r.kf4.5@gmail.com</a>
<a href=""mailto:enf.or.c.em.e.n.t.netw.or.k.f.45@gmail.com"">enf.or.c.em.e.n.t.netw.or.k.f.45@gmail.com</a>
<a href=""mailto:e.n.f.or.c.em.ent.n.etwo.rk.f45@gmail.com"">e.n.f.or.c.em.ent.n.etwo.rk.f45@gmail.com</a>
<a href=""mailto:e.nforcem.en.t.net.wo.r.k.f4.5@gmail.com"">e.nforcem.en.t.net.wo.r.k.f4.5@gmail.com</a>
<a href=""mailto:e.n.f.or.ce.m.e.n.t.ne.tw.o.rk.f45@gmail.com"">e.n.f.or.ce.m.e.n.t.ne.tw.o.rk.f45@gmail.com</a>
<a href=""mailto:enfo.rcement.netw.ork.f4.5@gmail.com"">enfo.rcement.netw.ork.f4.5@gmail.com</a>
<a href=""mailto:en.f.o.rce.me.ntn.e.tw.o.r.kf4.5@gmail.com"">en.f.o.rce.me.ntn.e.tw.o.r.kf4.5@gmail.com</a>
<a href=""mailto:en.f.orc.e.m.ent.net.wo.rk.f4.5@gmail.com"">en.f.orc.e.m.ent.net.wo.rk.f4.5@gmail.com</a>
<a href=""mailto:e.nf.o.r.c.eme.n.t.n.et.wor.k.f4.5@gmail.com"">e.nf.o.r.c.eme.n.t.n.et.wor.k.f4.5@gmail.com</a>
<a href=""mailto:en.f.o.rc.eme.n.t.n.e.t.workf4.5@gmail.com"">en.f.o.rc.eme.n.t.n.e.t.workf4.5@gmail.com</a>
<a href=""mailto:officeoffice741@daum.net"">officeoffice741@daum.net</a>
<a href=""mailto:pastorfrankeze@aol.com"">pastorfrankeze@aol.com</a>
<a href=""mailto:patrickrevokoh@gmail.com"">patrickrevokoh@gmail.com</a>
<a href=""mailto:pa.tr.ickrev.o.k.o.h@gmail.com"">pa.tr.ickrev.o.k.o.h@gmail.com</a>
<a href=""mailto:p.atr.ic.k.rev.o.koh@gmail.com"">p.atr.ic.k.rev.o.koh@gmail.com</a>
<a href=""mailto:pat.r.ick.revokoh@gmail.com"">pat.r.ick.revokoh@gmail.com</a>
<a href=""mailto:pa.t.ri.ck.re.v.ok.oh@gmail.com"">pa.t.ri.ck.re.v.ok.oh@gmail.com</a>
<a href=""mailto:pa.t.r.ic.k.r.e.vo.koh@gmail.com"">pa.t.r.ic.k.r.e.vo.koh@gmail.com</a>
<a href=""mailto:p.at.ri.c.kre.v.o.koh@gmail.com"">p.at.ri.c.kre.v.o.koh@gmail.com</a>
<a href=""mailto:pa.trickr.evo.k.o.h@gmail.com"">pa.trickr.evo.k.o.h@gmail.com</a>
<a href=""mailto:p.a.t.r.ic.kre.v.o.k.oh@gmail.com"">p.a.t.r.ic.kre.v.o.k.oh@gmail.com</a>
<a href=""mailto:p.atr.i.ck.r.e.voko.h@gmail.com"">p.atr.i.ck.r.e.voko.h@gmail.com</a>
<a href=""mailto:p.at.r.ic.k.revo.koh@gmail.com"">p.at.r.ic.k.revo.koh@gmail.com</a>
<a href=""mailto:p.a.tri.c.k.r.ev.o.koh@gmail.com"">p.a.tri.c.k.r.ev.o.koh@gmail.com</a>
<a href=""mailto:p.at.r.i.ckrev.ok.oh@gmail.com"">p.at.r.i.ckrev.ok.oh@gmail.com</a>
<a href=""mailto:patrick.re.v.o.ko.h@gmail.com"">patrick.re.v.o.ko.h@gmail.com</a>
<a href=""mailto:pat.ri.c.k.r.evok.o.h@gmail.com"">pat.ri.c.k.r.evok.o.h@gmail.com</a>
<a href=""mailto:p.at.r.ic.k.r.e.vo.k.oh@gmail.com"">p.at.r.ic.k.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:p.at.ri.ck.r.evok.oh@gmail.com"">p.at.ri.ck.r.evok.oh@gmail.com</a>
<a href=""mailto:p.a.trick.re.voko.h@gmail.com"">p.a.trick.re.voko.h@gmail.com</a>
<a href=""mailto:p.atric.kre.vo.k.oh@gmail.com"">p.atric.kre.vo.k.oh@gmail.com</a>
<a href=""mailto:p.a.tr.i.c.k.r.ev.okoh@gmail.com"">p.a.tr.i.c.k.r.ev.okoh@gmail.com</a>
<a href=""mailto:p.atr.ick.r.e.vo.k.oh@gmail.com"">p.atr.ick.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:patrick.r.evok.oh@gmail.com"">patrick.r.evok.oh@gmail.com</a>
<a href=""mailto:p.a.t.ri.ck.rev.ok.oh@gmail.com"">p.a.t.ri.ck.rev.ok.oh@gmail.com</a>
<a href=""mailto:p.a.tri.c.k.re.voko.h@gmail.com"">p.a.tri.c.k.re.voko.h@gmail.com</a>
<a href=""mailto:pa.t.r.ic.k.revok.o.h@gmail.com"">pa.t.r.ic.k.revok.o.h@gmail.com</a>
<a href=""mailto:p.atr.i.ckrev.o.koh@gmail.com"">p.atr.i.ckrev.o.koh@gmail.com</a>
<a href=""mailto:pat.ric.kre.vok.oh@gmail.com"">pat.ric.kre.vok.oh@gmail.com</a>
<a href=""mailto:p.a.t.r.ick.rev.ok.oh@gmail.com"">p.a.t.r.ick.rev.ok.oh@gmail.com</a>
<a href=""mailto:pa.t.rick.re.v.o.k.oh@gmail.com"">pa.t.rick.re.v.o.k.oh@gmail.com</a>
<a href=""mailto:pat.ric.kr.ev.okoh@gmail.com"">pat.ric.kr.ev.okoh@gmail.com</a>
<a href=""mailto:p.a.t.rickr.evoko.h@gmail.com"">p.a.t.rickr.evoko.h@gmail.com</a>
<a href=""mailto:pa.t.ric.k.re.v.ok.o.h@gmail.com"">pa.t.ric.k.re.v.ok.o.h@gmail.com</a>
<a href=""mailto:pa.tr.i.ck.revok.oh@gmail.com"">pa.tr.i.ck.revok.oh@gmail.com</a>
<a href=""mailto:p.a.t.ri.ck.r.e.v.o.k.oh@gmail.com"">p.a.t.ri.ck.r.e.v.o.k.oh@gmail.com</a>
<a href=""mailto:pat.r.i.ck.r.evok.o.h@gmail.com"">pat.r.i.ck.r.evok.o.h@gmail.com</a>
<a href=""mailto:p.a.tric.k.r.e.v.o.koh@gmail.com"">p.a.tric.k.r.e.v.o.koh@gmail.com</a>
<a href=""mailto:pa.t.r.i.ck.r.e.v.oko.h@gmail.com"">pa.t.r.i.ck.r.e.v.oko.h@gmail.com</a>
<a href=""mailto:p.a.t.ri.c.k.r.e.v.ok.o.h@gmail.com"">p.a.t.ri.c.k.r.e.v.ok.o.h@gmail.com</a>
<a href=""mailto:pa.tri.ck.r.ev.o.k.oh@gmail.com"">pa.tri.ck.r.ev.o.k.oh@gmail.com</a>
<a href=""mailto:patri.c.k.r.e.vo.k.oh@gmail.com"">patri.c.k.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:patri.ckr.evo.k.oh@gmail.com"">patri.ckr.evo.k.oh@gmail.com</a>
<a href=""mailto:pa.t.r.ic.k.rev.okoh@gmail.com"">pa.t.r.ic.k.rev.okoh@gmail.com</a>
<a href=""mailto:pat.rickre.v.okoh@gmail.com"">pat.rickre.v.okoh@gmail.com</a>
<a href=""mailto:p.a.t.r.i.c.kr.ev.ok.o.h@gmail.com"">p.a.t.r.i.c.kr.ev.ok.o.h@gmail.com</a>
<a href=""mailto:pa.t.rick.r.ev.ok.oh@gmail.com"">pa.t.rick.r.ev.ok.oh@gmail.com</a>
<a href=""mailto:pa.t.rickr.ev.o.koh@gmail.com"">pa.t.rickr.ev.o.koh@gmail.com</a>
<a href=""mailto:p.at.r.ic.k.revo.ko.h@gmail.com"">p.at.r.ic.k.revo.ko.h@gmail.com</a>
<a href=""mailto:pat.ri.ckr.e.vo.koh@gmail.com"">pat.ri.ckr.e.vo.koh@gmail.com</a>
<a href=""mailto:pa.tr.i.c.k.re.v.ok.oh@gmail.com"">pa.tr.i.c.k.re.v.ok.oh@gmail.com</a>
<a href=""mailto:p.atrick.rev.ok.oh@gmail.com"">p.atrick.rev.ok.oh@gmail.com</a>
<a href=""mailto:patri.ck.rev.ok.o.h@gmail.com"">patri.ck.rev.ok.o.h@gmail.com</a>
<a href=""mailto:p.at.r.i.c.k.r.e.v.o.k.oh@gmail.com"">p.at.r.i.c.k.r.e.v.o.k.oh@gmail.com</a>
<a href=""mailto:pa.tri.ck.revok.o.h@gmail.com"">pa.tri.ck.revok.o.h@gmail.com</a>
<a href=""mailto:pa.tr.ic.kr.e.v.o.ko.h@gmail.com"">pa.tr.ic.kr.e.v.o.ko.h@gmail.com</a>
<a href=""mailto:p.at.r.ickrevoko.h@gmail.com"">p.at.r.ickrevoko.h@gmail.com</a>
<a href=""mailto:pat.ri.ckr.evokoh@gmail.com"">pat.ri.ckr.evokoh@gmail.com</a>
<a href=""mailto:p.a.t.ric.k.r.evokoh@gmail.com"">p.a.t.ric.k.r.evokoh@gmail.com</a>
<a href=""mailto:pa.tr.ic.kr.ev.okoh@gmail.com"">pa.tr.ic.kr.ev.okoh@gmail.com</a>
<a href=""mailto:p.a.tr.i.c.kr.ev.o.ko.h@gmail.com"">p.a.tr.i.c.kr.ev.o.ko.h@gmail.com</a>
<a href=""mailto:pa.t.r.ick.r.e.vok.o.h@gmail.com"">pa.t.r.ick.r.e.vok.o.h@gmail.com</a>
<a href=""mailto:p.a.tr.ic.k.r.evo.ko.h@gmail.com"">p.a.tr.ic.k.r.evo.ko.h@gmail.com</a>
<a href=""mailto:pat.ric.k.re.vo.k.o.h@gmail.com"">pat.ric.k.re.vo.k.o.h@gmail.com</a>
<a href=""mailto:pa.tri.ckr.e.vo.koh@gmail.com"">pa.tri.ckr.e.vo.koh@gmail.com</a>
<a href=""mailto:p.a.tr.ick.r.e.vok.o.h@gmail.com"">p.a.tr.ick.r.e.vok.o.h@gmail.com</a>
<a href=""mailto:p.atrickr.ev.ok.o.h@gmail.com"">p.atrickr.ev.ok.o.h@gmail.com</a>
<a href=""mailto:p.a.t.ric.k.r.ev.ok.oh@gmail.com"">p.a.t.ric.k.r.ev.ok.oh@gmail.com</a>
<a href=""mailto:p.a.t.ri.ck.r.e.vo.k.o.h@gmail.com"">p.a.t.ri.ck.r.e.vo.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.ri.c.k.r.ev.oko.h@gmail.com"">pa.t.ri.c.k.r.ev.oko.h@gmail.com</a>
<a href=""mailto:pa.t.ric.k.re.vo.k.o.h@gmail.com"">pa.t.ric.k.re.vo.k.o.h@gmail.com</a>
<a href=""mailto:p.atri.c.k.r.e.vo.koh@gmail.com"">p.atri.c.k.r.e.vo.koh@gmail.com</a>
<a href=""mailto:pat.ric.k.r.e.v.ok.oh@gmail.com"">pat.ric.k.r.e.v.ok.oh@gmail.com</a>
<a href=""mailto:pa.tr.ic.krev.okoh@gmail.com"">pa.tr.ic.krev.okoh@gmail.com</a>
<a href=""mailto:p.atri.c.krevo.k.oh@gmail.com"">p.atri.c.krevo.k.oh@gmail.com</a>
<a href=""mailto:pat.r.i.ckr.e.vo.ko.h@gmail.com"">pat.r.i.ckr.e.vo.ko.h@gmail.com</a>
<a href=""mailto:p.a.t.r.ic.k.r.ev.oko.h@gmail.com"">p.a.t.r.ic.k.r.ev.oko.h@gmail.com</a>
<a href=""mailto:p.at.r.ic.kre.vo.ko.h@gmail.com"">p.at.r.ic.kre.vo.ko.h@gmail.com</a>
<a href=""mailto:pa.tr.ickr.evo.k.o.h@gmail.com"">pa.tr.ickr.evo.k.o.h@gmail.com</a>
<a href=""mailto:patr.ic.k.r.ev.ok.o.h@gmail.com"">patr.ic.k.r.ev.ok.o.h@gmail.com</a>
<a href=""mailto:p.a.t.ri.ck.revok.oh@gmail.com"">p.a.t.ri.ck.revok.oh@gmail.com</a>
<a href=""mailto:pa.t.r.ickr.e.v.ok.o.h@gmail.com"">pa.t.r.ickr.e.v.ok.o.h@gmail.com</a>
<a href=""mailto:p.atri.ckr.e.vo.ko.h@gmail.com"">p.atri.ckr.e.vo.ko.h@gmail.com</a>
<a href=""mailto:p.a.tr.i.c.k.revokoh@gmail.com"">p.a.tr.i.c.k.revokoh@gmail.com</a>
<a href=""mailto:p.at.ri.ckr.ev.oko.h@gmail.com"">p.at.ri.ckr.ev.oko.h@gmail.com</a>
<a href=""mailto:patric.kr.e.vok.oh@gmail.com"">patric.kr.e.vok.oh@gmail.com</a>
<a href=""mailto:patr.i.c.krevo.koh@gmail.com"">patr.i.c.krevo.koh@gmail.com</a>
<a href=""mailto:p.atr.i.c.k.r.e.v.okoh@gmail.com"">p.atr.i.c.k.r.e.v.okoh@gmail.com</a>
<a href=""mailto:pa.t.rickr.e.voko.h@gmail.com"">pa.t.rickr.e.voko.h@gmail.com</a>
<a href=""mailto:patr.ickrev.ok.oh@gmail.com"">patr.ickrev.ok.oh@gmail.com</a>
<a href=""mailto:p.atr.i.ck.r.ev.ok.oh@gmail.com"">p.atr.i.ck.r.ev.ok.oh@gmail.com</a>
<a href=""mailto:p.atri.ckrevo.k.oh@gmail.com"">p.atri.ckrevo.k.oh@gmail.com</a>
<a href=""mailto:pa.t.rickre.v.okoh@gmail.com"">pa.t.rickre.v.okoh@gmail.com</a>
<a href=""mailto:patric.k.rev.oko.h@gmail.com"">patric.k.rev.oko.h@gmail.com</a>
<a href=""mailto:p.at.ri.ck.revo.k.o.h@gmail.com"">p.at.ri.ck.revo.k.o.h@gmail.com</a>
<a href=""mailto:p.a.tr.ic.kre.v.o.k.oh@gmail.com"">p.a.tr.ic.kre.v.o.k.oh@gmail.com</a>
<a href=""mailto:pa.tric.kre.v.oko.h@gmail.com"">pa.tric.kre.v.oko.h@gmail.com</a>
<a href=""mailto:patr.ick.revo.koh@gmail.com"">patr.ick.revo.koh@gmail.com</a>
<a href=""mailto:p.atr.i.ck.r.e.v.o.k.o.h@gmail.com"">p.atr.i.ck.r.e.v.o.k.o.h@gmail.com</a>
<a href=""mailto:p.atr.i.c.k.r.ev.o.koh@gmail.com"">p.atr.i.c.k.r.ev.o.koh@gmail.com</a>
<a href=""mailto:pat.ri.ck.revok.o.h@gmail.com"">pat.ri.ck.revok.o.h@gmail.com</a>
<a href=""mailto:p.a.t.r.ic.k.r.evoko.h@gmail.com"">p.a.t.r.ic.k.r.evoko.h@gmail.com</a>
<a href=""mailto:p.a.t.ri.c.krev.o.k.o.h@gmail.com"">p.a.t.ri.c.krev.o.k.o.h@gmail.com</a>
<a href=""mailto:pat.rick.re.v.okoh@gmail.com"">pat.rick.re.v.okoh@gmail.com</a>
<a href=""mailto:p.atr.ic.k.revok.o.h@gmail.com"">p.atr.ic.k.revok.o.h@gmail.com</a>
<a href=""mailto:p.a.tr.i.ck.r.e.vo.k.oh@gmail.com"">p.a.tr.i.ck.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:pat.ric.kr.e.vo.k.oh@gmail.com"">pat.ric.kr.e.vo.k.oh@gmail.com</a>
<a href=""mailto:pa.t.rick.r.evok.oh@gmail.com"">pa.t.rick.r.evok.oh@gmail.com</a>
<a href=""mailto:p.atric.k.rev.o.k.o.h@gmail.com"">p.atric.k.rev.o.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.rickrev.o.ko.h@gmail.com"">pa.t.rickrev.o.ko.h@gmail.com</a>
<a href=""mailto:pa.tr.ic.k.re.v.o.koh@gmail.com"">pa.tr.ic.k.re.v.o.koh@gmail.com</a>
<a href=""mailto:p.at.r.ic.kr.e.v.o.k.o.h@gmail.com"">p.at.r.ic.kr.e.v.o.k.o.h@gmail.com</a>
<a href=""mailto:p.a.t.r.i.c.kr.ev.ok.oh@gmail.com"">p.a.t.r.i.c.kr.ev.ok.oh@gmail.com</a>
<a href=""mailto:p.at.r.i.ck.re.v.okoh@gmail.com"">p.at.r.i.ck.re.v.okoh@gmail.com</a>
<a href=""mailto:p.atr.ic.k.re.v.o.ko.h@gmail.com"">p.atr.ic.k.re.v.o.ko.h@gmail.com</a>
<a href=""mailto:patr.ickrevokoh@gmail.com"">patr.ickrevokoh@gmail.com</a>
<a href=""mailto:p.at.ri.c.krevokoh@gmail.com"">p.at.ri.c.krevokoh@gmail.com</a>
<a href=""mailto:pa.t.ri.c.kr.e.v.ok.oh@gmail.com"">pa.t.ri.c.kr.e.v.ok.oh@gmail.com</a>
<a href=""mailto:patric.k.re.vok.o.h@gmail.com"">patric.k.re.vok.o.h@gmail.com</a>
<a href=""mailto:p.a.trick.re.v.ok.oh@gmail.com"">p.a.trick.re.v.ok.oh@gmail.com</a>
<a href=""mailto:p.a.trick.re.vo.k.o.h@gmail.com"">p.a.trick.re.vo.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.i.ck.r.ev.oko.h@gmail.com"">pa.t.r.i.ck.r.ev.oko.h@gmail.com</a>
<a href=""mailto:p.at.ri.c.kre.v.ok.o.h@gmail.com"">p.at.ri.c.kre.v.ok.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.i.ck.r.e.vo.k.o.h@gmail.com"">pa.t.r.i.ck.r.e.vo.k.o.h@gmail.com</a>
<a href=""mailto:p.a.t.r.ick.rev.oko.h@gmail.com"">p.a.t.r.ick.rev.oko.h@gmail.com</a>
<a href=""mailto:pa.tr.i.c.k.r.e.vo.k.oh@gmail.com"">pa.tr.i.c.k.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:pa.t.r.i.c.kre.vo.k.o.h@gmail.com"">pa.t.r.i.c.kre.vo.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.ri.c.k.r.e.vo.ko.h@gmail.com"">pa.t.ri.c.k.r.e.vo.ko.h@gmail.com</a>
<a href=""mailto:patric.k.re.v.ok.oh@gmail.com"">patric.k.re.v.ok.oh@gmail.com</a>
<a href=""mailto:pa.t.ri.ck.re.v.o.ko.h@gmail.com"">pa.t.ri.ck.re.v.o.ko.h@gmail.com</a>
<a href=""mailto:patr.i.ck.r.evok.oh@gmail.com"">patr.i.ck.r.evok.oh@gmail.com</a>
<a href=""mailto:p.a.t.rick.r.e.v.o.ko.h@gmail.com"">p.a.t.rick.r.e.v.o.ko.h@gmail.com</a>
<a href=""mailto:pa.t.rick.re.v.o.ko.h@gmail.com"">pa.t.rick.re.v.o.ko.h@gmail.com</a>
<a href=""mailto:pa.t.r.ickre.vokoh@gmail.com"">pa.t.r.ickre.vokoh@gmail.com</a>
<a href=""mailto:patric.kr.e.v.oko.h@gmail.com"">patric.kr.e.v.oko.h@gmail.com</a>
<a href=""mailto:patri.c.k.r.e.vo.ko.h@gmail.com"">patri.c.k.r.e.vo.ko.h@gmail.com</a>
<a href=""mailto:pa.tr.ick.r.e.v.o.k.oh@gmail.com"">pa.tr.ick.r.e.v.o.k.oh@gmail.com</a>
<a href=""mailto:pa.trick.r.ev.ok.o.h@gmail.com"">pa.trick.r.ev.ok.o.h@gmail.com</a>
<a href=""mailto:pat.ri.c.kr.e.v.o.k.oh@gmail.com"">pat.ri.c.kr.e.v.o.k.oh@gmail.com</a>
<a href=""mailto:p.a.t.r.ick.revokoh@gmail.com"">p.a.t.r.ick.revokoh@gmail.com</a>
<a href=""mailto:pat.r.i.ck.rev.okoh@gmail.com"">pat.r.i.ck.rev.okoh@gmail.com</a>
<a href=""mailto:patr.i.c.krevo.ko.h@gmail.com"">patr.i.c.krevo.ko.h@gmail.com</a>
<a href=""mailto:p.a.t.r.ic.kr.e.v.ok.oh@gmail.com"">p.a.t.r.ic.kr.e.v.ok.oh@gmail.com</a>
<a href=""mailto:patri.ckre.vok.o.h@gmail.com"">patri.ckre.vok.o.h@gmail.com</a>
<a href=""mailto:patr.i.c.k.revo.ko.h@gmail.com"">patr.i.c.k.revo.ko.h@gmail.com</a>
<a href=""mailto:patri.ckre.v.ok.o.h@gmail.com"">patri.ckre.v.ok.o.h@gmail.com</a>
<a href=""mailto:pat.ric.kr.ev.o.k.o.h@gmail.com"">pat.ric.kr.ev.o.k.o.h@gmail.com</a>
<a href=""mailto:p.at.r.ickr.e.vokoh@gmail.com"">p.at.r.ickr.e.vokoh@gmail.com</a>
<a href=""mailto:p.a.tr.ic.k.r.e.vok.o.h@gmail.com"">p.a.tr.ic.k.r.e.vok.o.h@gmail.com</a>
<a href=""mailto:p.atr.i.c.krev.ok.oh@gmail.com"">p.atr.i.c.krev.ok.oh@gmail.com</a>
<a href=""mailto:pa.t.r.i.ckr.evok.o.h@gmail.com"">pa.t.r.i.ckr.evok.o.h@gmail.com</a>
<a href=""mailto:patri.ck.re.vokoh@gmail.com"">patri.ck.re.vokoh@gmail.com</a>
<a href=""mailto:p.a.t.r.i.ckre.v.o.k.o.h@gmail.com"">p.a.t.r.i.ckre.v.o.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.ick.re.vo.k.oh@gmail.com"">pa.t.r.ick.re.vo.k.oh@gmail.com</a>
<a href=""mailto:p.a.tric.k.r.e.vokoh@gmail.com"">p.a.tric.k.r.e.vokoh@gmail.com</a>
<a href=""mailto:p.a.t.ric.k.r.evok.oh@gmail.com"">p.a.t.ric.k.r.evok.oh@gmail.com</a>
<a href=""mailto:pa.t.r.ickr.e.v.o.ko.h@gmail.com"">pa.t.r.ickr.e.v.o.ko.h@gmail.com</a>
<a href=""mailto:patri.ckrev.o.k.o.h@gmail.com"">patri.ckrev.o.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.ric.k.r.e.v.oko.h@gmail.com"">pa.t.ric.k.r.e.v.oko.h@gmail.com</a>
<a href=""mailto:p.at.r.ic.k.re.v.oko.h@gmail.com"">p.at.r.ic.k.re.v.oko.h@gmail.com</a>
<a href=""mailto:pat.ric.k.r.ev.ok.oh@gmail.com"">pat.ric.k.r.ev.ok.oh@gmail.com</a>
<a href=""mailto:pat.r.i.c.k.r.e.v.o.koh@gmail.com"">pat.r.i.c.k.r.e.v.o.koh@gmail.com</a>
<a href=""mailto:p.at.ric.kr.evokoh@gmail.com"">p.at.ric.kr.evokoh@gmail.com</a>
<a href=""mailto:patrick.re.vo.koh@gmail.com"">patrick.re.vo.koh@gmail.com</a>
<a href=""mailto:pa.t.r.i.ck.r.e.vo.k.oh@gmail.com"">pa.t.r.i.ck.r.e.vo.k.oh@gmail.com</a>
<a href=""mailto:pa.tri.c.k.rev.ok.o.h@gmail.com"">pa.tri.c.k.rev.ok.o.h@gmail.com</a>
<a href=""mailto:p.at.r.i.ckre.vo.k.oh@gmail.com"">p.at.r.i.ckre.vo.k.oh@gmail.com</a>
<a href=""mailto:p.a.t.r.i.ckrev.oko.h@gmail.com"">p.a.t.r.i.ckrev.oko.h@gmail.com</a>
<a href=""mailto:pa.t.rick.r.e.vok.oh@gmail.com"">pa.t.rick.r.e.vok.oh@gmail.com</a>
<a href=""mailto:pat.rick.r.evok.o.h@gmail.com"">pat.rick.r.evok.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.ic.krev.o.k.o.h@gmail.com"">pa.t.r.ic.krev.o.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.ickrev.o.ko.h@gmail.com"">pa.t.r.ickrev.o.ko.h@gmail.com</a>
<a href=""mailto:p.atrickr.evok.o.h@gmail.com"">p.atrickr.evok.o.h@gmail.com</a>
<a href=""mailto:patrick.r.e.voko.h@gmail.com"">patrick.r.e.voko.h@gmail.com</a>
<a href=""mailto:p.at.r.ic.krev.o.ko.h@gmail.com"">p.at.r.ic.krev.o.ko.h@gmail.com</a>
<a href=""mailto:pat.r.ic.kr.e.vok.o.h@gmail.com"">pat.r.ic.kr.e.vok.o.h@gmail.com</a>
<a href=""mailto:pa.trickre.voko.h@gmail.com"">pa.trickre.voko.h@gmail.com</a>
<a href=""mailto:p.a.t.ri.ckr.e.vo.k.o.h@gmail.com"">p.a.t.ri.ckr.e.vo.k.o.h@gmail.com</a>
<a href=""mailto:pa.t.ric.kr.e.vo.koh@gmail.com"">pa.t.ric.kr.e.vo.koh@gmail.com</a>
<a href=""mailto:pa.tr.ic.k.revok.o.h@gmail.com"">pa.tr.ic.k.revok.o.h@gmail.com</a>
<a href=""mailto:p.at.ri.ckrevo.k.o.h@gmail.com"">p.at.ri.ckrevo.k.o.h@gmail.com</a>
<a href=""mailto:pa.tri.ckr.evo.koh@gmail.com"">pa.tri.ckr.evo.koh@gmail.com</a>
<a href=""mailto:p.a.t.ri.c.kr.evo.ko.h@gmail.com"">p.a.t.ri.c.kr.evo.ko.h@gmail.com</a>
<a href=""mailto:patric.kre.vok.o.h@gmail.com"">patric.kre.vok.o.h@gmail.com</a>
<a href=""mailto:pa.t.r.ic.k.r.e.voko.h@gmail.com"">pa.t.r.ic.k.r.e.voko.h@gmail.com</a>
<a href=""mailto:patric.k.rev.o.koh@gmail.com"">patric.k.rev.o.koh@gmail.com</a>
<a href=""mailto:pa.t.ri.c.krevo.k.oh@gmail.com"">pa.t.ri.c.krevo.k.oh@gmail.com</a>
<a href=""mailto:p.at.r.ickrevokoh@gmail.com"">p.at.r.ickrevokoh@gmail.com</a>
<a href=""mailto:p.atr.ick.re.v.o.k.o.h@gmail.com"">p.atr.ick.re.v.o.k.o.h@gmail.com</a>
<a href=""mailto:p.atr.ickr.evo.koh@gmail.com"">p.atr.ickr.evo.koh@gmail.com</a>
<a href=""mailto:pa.tr.i.ckr.evo.k.oh@gmail.com"">pa.tr.i.ckr.evo.k.oh@gmail.com</a>
<a href=""mailto:p.a.tr.i.ckrev.okoh@gmail.com"">p.a.tr.i.ckrev.okoh@gmail.com</a>
<a href=""mailto:p.a.t.ri.c.k.r.e.v.o.k.oh@gmail.com"">p.a.t.ri.c.k.r.e.v.o.k.oh@gmail.com</a>
<a href=""mailto:p.atrickre.v.okoh@gmail.com"">p.atrickre.v.okoh@gmail.com</a>
<a href=""mailto:pa.tri.ckr.ev.o.koh@gmail.com"">pa.tri.ckr.ev.o.koh@gmail.com</a>
<a href=""mailto:p.at.ri.ckr.e.v.okoh@gmail.com"">p.at.ri.ckr.e.v.okoh@gmail.com</a>
<a href=""mailto:p.a.t.ri.c.k.re.v.ok.o.h@gmail.com"">p.a.t.ri.c.k.re.v.ok.o.h@gmail.com</a>
<a href=""mailto:p.a.t.r.i.c.kre.v.o.koh@gmail.com"">p.a.t.r.i.c.kre.v.o.koh@gmail.com</a>
<a href=""mailto:p.a.tr.ic.k.r.e.vo.koh@gmail.com"">p.a.tr.ic.k.r.e.vo.koh@gmail.com</a>
<a href=""mailto:p.a.tric.kr.e.vokoh@gmail.com"">p.a.tric.kr.e.vokoh@gmail.com</a>
<a href=""mailto:p.at.r.ick.re.vo.ko.h@gmail.com"">p.at.r.ick.re.vo.ko.h@gmail.com</a>
<a href=""mailto:patr.ic.kr.evo.koh@gmail.com"">patr.ic.kr.evo.koh@gmail.com</a>
<a href=""mailto:p.a.t.ri.ck.r.e.v.okoh@gmail.com"">p.a.t.ri.ck.r.e.v.okoh@gmail.com</a>"
x3HW15Vh,邀您一起看：2. 火绒应用商店 v1.0内测版,xiaomianao666,JavaScript,Tuesday 12th of September 2023 12:19:15 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥2. 火绒应用商店 v1.0内测版@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5ZC+54ix56C06Kej8J2UpVwiLFwidmVyc2lvblwiOjAsXCJ1cmxcIjpcImhpa2VyOi8vZW1wdHlcIixcImNvbF90eXBlXCI6XCJ4NV93ZWJ2aWV3X3NpbmdsZVwiLFwiZmluZF9ydWxlXCI6XCJqczpzZXRSZXN1bHQoW3tcXG4gICAgdXJsOlxcXCJodHRwczovL3d3dy41MnBvamllLmNuL3RocmVhZC0xODMyNTUwLTEtMS5odG1sXFxcIixcXG5kZXNjOlxcXCIxMDAlJiZmbG9hdFxcXCIsXFxuZXh0cmE6e2NhbkJhY2s6IHRydWV9XFxufV0pO1wiLFwiZ3JvdXBcIjpcIuKRoOaOqOiNkFwiLFwicGFnZXNcIjpcIltdXCJ9IiwidGl0bGUiOiIyLiDngavnu5LlupTnlKjllYblupcgdjEuMOWGhea1i+eJiCJ9
AcTDwpkY,Find All Four Sum Numbers,jayati,C++,Tuesday 12th of September 2023 12:13:19 PM CDT,"vector<vector<int> > fourSum(vector<int> &arr, int k) {
        // Your code goes here
        sort(arr.begin(),arr.end());
        
        vector<vector<int>>ans;
        for(int i=0 ; i<arr.size() ; i++)
        {
            if(i>0 && arr[i]==arr[i-1])
            {
                continue;
            }
            for(int j=arr.size()-1 ; j>=i+3 ; j--)
            {
                if(j<arr.size()-1 && arr[j]==arr[j+1])
                {
                    continue;
                }
                int low =i+1;
                int high=j-1;
                while(low<high)
                {
                    
                    int sum=arr[i]+arr[j]+arr[low]+arr[high];
                    if(sum==k)
                    {
                        ans.push_back({arr[i],arr[low],arr[high],arr[j]});
                        while(arr[low]==arr[low+1])
                        {
                            low++;
                        }
                        low++;
                        while(arr[high]==arr[high-1])
                        {
                            high--;
                        }
                        high--;
                    }
                    else if(sum<k)
                    {
                        while(arr[low]==arr[low+1])
                        {
                            low++;
                        }
                        low++;
                    }
                    else{
                        while(arr[high]==arr[high-1])
                        {
                            high--;
                        }
                        high--;
                    }
                }
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
   }
// https://practice.geeksforgeeks.org/problems/find-all-four-sum-numbers1732/"
9v6jx9qX,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 12:10:38 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }
 
 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 int n,c=0,b=0,a=0;
 cin>>n;
 vector<int>v(n);
 cin(v);
 for(int i=0;i<n;i++){
  if(i%3==0){
    c+=v[i];
  }else if(i%3==1){
    b+=v[i];
  }else if(i%3==2){
    a+=v[i];
  }
 }
 if(c>=b&&c>=a){
  cout<<""chest""<<""\n"";
 }else if(b>=c&&b>=a){
  cout<<""biceps""<<""\n"";
 }else{
  cout<<""back""<<""\n"";
 }

 














 return 0;
}
 "
rHaVpbkh,Untitled,Rofyda_Elghadban1,C++,Tuesday 12th of September 2023 12:09:41 PM CDT," /*Rofyda Mohamed Hamed Hamed Elghadban*/
 //#include <bits/stdc++.h> 
 #include <iostream>
 #include <iomanip>
 #include <cmath>
 #include <algorithm>
 #include <cstdlib>
 #include <limits.h>
 #include <string>
 #include <vector>
 #include <map>
 #include <stack>
 #include <set>
 #include <deque>
 #include <fstream>
 #include <bitset>
 #include <cmath>
 #include <numeric>
 #include <cstring>
 #include <utility>
 #include <queue>

 /***********************************************************************************/

 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/

 using namespace std;

 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
 }
 
 int main(){
  Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 //solve();
 
 string s,t;
 getline(cin,s);
 getline(cin,t);
 int freq1[201]{},counter=0,size=0;
 for(int i=0;i<s.size();i++){
  freq1[s[i]]++;
 }
 for(int i=0;i<t.size();i++){
  if(t[i]!=' '){
    size++;
    if(freq1[t[i]]>0){
      freq1[t[i]]--;
      counter++;
    }
  }
 }
 if(counter==size){
  cout<<""YES""<<""\n"";
 }else{
  cout<<""NO""<<""\n"";
 }














 return 0;
}
 "
B9QzqDUW,Untitled,1_rinkana,Kotlin,Tuesday 12th of September 2023 11:55:45 AM CDT,"//Циганій Максим КН-2-1
//Лабораторна робота No1
package com.uni.lab_1_square.screen

import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material3.Button
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.unit.dp
import kotlin.math.sqrt

//Головний екран
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun SquareCalculatorScreen() {
    var isButtonClicked by remember { mutableStateOf(false) }
    var a by remember { mutableStateOf("""") }
    var b by remember { mutableStateOf("""") }
    var c by remember { mutableStateOf("""") }
    var square by remember { mutableStateOf("""") }

    Scaffold { paddingValues ->
        //Створюємо потрібні відступи та вказуємо, що всі айтеми повинні бути по середині
        Column(
            modifier = Modifier.fillMaxSize()
                .padding(paddingValues)
                .padding(16.dp),
            verticalArrangement = Arrangement.Top,
            horizontalAlignment = Alignment.CenterHorizontally,
        ) {
            //Відступ
            Spacer(modifier = Modifier.padding(32.dp))
            //поле для вводу данних
            OutlinedTextField(
                value = a,
                onValueChange = { new ->
                    a = new
                    isButtonClicked = false
                },
                modifier = Modifier.align(Alignment.CenterHorizontally),
                label = { Text(text = ""a ="") },
                keyboardOptions = KeyboardOptions.Default.copy(
                    keyboardType = KeyboardType.Number
                ),
                singleLine = true,
            )

            Spacer(modifier = Modifier.padding(16.dp))

            OutlinedTextField(
                value = b,
                onValueChange = { new ->
                    b = new
                    isButtonClicked = false
                },
                modifier = Modifier.align(Alignment.CenterHorizontally),
                label = { Text(text = ""b ="") },
                keyboardOptions = KeyboardOptions.Default.copy(
                    keyboardType = KeyboardType.Number
                ),
                singleLine = true,
            )

            Spacer(modifier = Modifier.padding(16.dp))

            OutlinedTextField(
                value = c,
                onValueChange = { new ->
                    c = new
                    isButtonClicked = false
                },
                modifier = Modifier.align(Alignment.CenterHorizontally),
                label = { Text(text = ""c ="") },
                keyboardOptions = KeyboardOptions.Default.copy(
                    keyboardType = KeyboardType.Number
                ),
                singleLine = true,
            )

            Spacer(modifier = Modifier.padding(32.dp))
            //Кнопка для обчислення та виведення на екран результату
            Button(
                onClick = {
                    if (a.isNotEmpty() && b.isNotEmpty() && c.isNotEmpty()) {
                        square = calculate(a.toFloat(), b.toFloat(), c.toFloat()).toString()
                        isButtonClicked = true
                    }
                },
                modifier = Modifier,
            ) {
                Text(""Обчислити"")
            }
            //При натисканні на кнопку з'являється текст з результатом
            if (isButtonClicked) {
                Row(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp),
                    verticalAlignment = Alignment.CenterVertically,
                    horizontalArrangement = Arrangement.Center,
                ) {
                    Box(modifier = Modifier) {
                        Text(""Результат дорівнює: $square"")
                    }
                }
            }
        }
    }
}

//Функція калькулятору площі
fun calculate(a: Float, b: Float, c: Float): Float {
    val p = (a + b + c) / 2
    return sqrt(p * (p - a) * (p - b) * (p - c))
}"
tYsusa1m,k8s cheat sheet,AxeOfMen,Bash,Tuesday 12th of September 2023 11:46:16 AM CDT,"# Watch pods sorted by cteation timestamp
watch kubectl get pods --sort-by=.metadata.creationTimestamp

# Force a new deployment after pushing deployment project changes
flux reconcile source helm artifactory"
cFDVQ0jR,Untitled,Josif_tepe,C++,Tuesday 12th of September 2023 11:40:56 AM CDT,"#include <queue>
#include <iostream>
#include <vector>
#include <cstring>
#include <iostream>
//#include <bits/stdc++.h>
using namespace std;






int main()
{
    int n;
    cin>>n;
    vector < pair<int,int> > v;
    int x,y;
    for(int i=0;i<n;i++)
    {
        cin>>x>>y;
        v.push_back(make_pair(x,y));
    }
    vector < pair<int, double> > g[n];




   vector<bool> visited(n,false);
    vector<double> dis(n,-2e9);
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            double d=sqrt(((v[j].first-v[i].first) * (v[j].first-v[i].first))+((v[j].second-v[i].second)*(v[j].second-v[i].second)));
            if(d<=10)
                g[i].push_back(make_pair(j,-d));
        }
    }
    dis[0]=0;
    priority_queue<pair<double, int> > pq;
    pq.push(make_pair(0,0));




   while(!pq.empty())
    {
        pair<double, int> c=pq.top();

        pq.pop();


       if(visited[c.second])
        {
            continue;
        }
        visited[c.second]=true;
        for(int i=0;i<g[c.second].size();i++)
        {
            int s=g[c.second][i].first;
            double t=g[c.second][i].second;




           if(!visited[s] && c.first+t>dis[s])
            {
                pq.push(make_pair(c.first+t, s));
                dis[s]=c.first+t;
            }
        }
    }
    cout<<-dis[n-1]<<endl;
    return 0;
}
"
DdwdHrZY,CodeForces 699C,Junaid_Hossain,C++,Tuesday 12th of September 2023 11:35:02 AM CDT,"#include<bits/stdc++.h>

using namespace std;

int main(){
    int n;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++){
        cin >> arr[i];
    }

    int j=0;
    int gym=0;
    int contest=0;
    int rest=0;

    while(j<n){
        switch(arr[j]){
        case 0:
            rest++;
            gym=0;
            contest=0;
            break;
        case 1:
            if(contest!=0){
                rest++;
                gym=0;
                contest=0;
            }else{
                contest++;
                gym=0;
            }
            break;
        case 2:
            if(gym!=0){
                rest++;
                gym=0;
                contest=0;
            }else{
                gym++;
                contest=0;
            }
            break;
        case 3:
            int three=0;
            for(int k=j; arr[k]==3; k++){
                if(arr[k]==3) three++;
            }
            if(contest!=0 && gym==0){
                gym++;
                contest=0;
            }else if(gym!=0 && contest==0){
                contest++;
                gym=0;
            }else if(gym==0 && contest==0){
                if(arr[j+1]==1){
                    gym++;
                    contest=0;
                }else if(arr[j+1]==2){
                    contest++;
                    gym=0;
                }else if(arr[j+1]==0){
                    contest++;
                    gym=0;
                }else if(arr[j+1]==3){
                    if(arr[j+three]==1){
                        gym++;
                        contest=0;
                    }else if(arr[j+three]==2){
                        contest++;
                        gym=0;
                    }else{
                        contest++;
                        gym=0;
                    }
                }
                j=j+three;
                continue;
            }else{
                rest++;
                contest=0;
                gym=0;
            }

        }
        /*cout << contest << ""\n"";
        cout << gym << ""\n"";
        cout << rest << ""\n"";*/
        j++;
    }

    cout << rest << ""\n"";

}
"
