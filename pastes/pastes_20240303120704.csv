id,title,username,language,date,content
H3YbAvi6,data858,TestGuy1,JSON,Sunday 3rd of March 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '908dff27a23c382ef910894b7126f4167c9ef322719e75be4203ed43d67a209c975b6b4c54fdc46c105dc53271c3633b11a020144414a104374c54856f0e954b2de6e62e880055feecb903c401d55d28950bb41629da18c6e7bcd78937d933dd78d2920c84ca5c4a17c8aed4967265f48fce83d7b5e7974242cfa1028276c38b',
  otherdata: [
    '8af7bee27ec57d849a99d56896b5c448',
    '6112f37facad82fb6c5291079b1577a4',
    'd70a0844a006ce57dd237902d0738735',
    'b267811afd8db184a5c85faf6b7452a7',
    'efa08dc3be4de3380b2637023c8a8004',
    '46cced91d4b59ec9f47db8a74159ca1b',
    '99d0d7555b7ac95b5bd781740555f051',
    'cb5b3964d5fa106a74d34512cc1ee900'
  ]
}"
rtp3eKDm,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 05:53:10 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <cstring>
#include <queue>
#include <set>
#include <cmath>
#define ll long long
using namespace std;


int main() {
    int t;
        cin >> t;
        while(t--) {
            int n;
            cin >> n;
            vector<int> v(n);
            for(int i = 0; i < n; i++) {
                cin >> v[i];
            }
            sort(v.begin(), v.end());
            v.resize(unique(v.begin(), v.end()) - v.begin());
            int j  = 0, res = 0;
            for(int i = 0; i < v.size(); i++) {
                while(j < v.size() and v[i] - v[j] >= n) {
                    j++;
                }
                res = max(res, i - j + 1);
            }
            cout << res << endl;
        }
}"
f6EjYY61,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Sunday 3rd of March 2024 05:48:28 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_172131.pdf

Working as of:
03 March 2024"
2xEdpzeb,Untitled,Shiko5303,Lua,Sunday 3rd of March 2024 05:48:15 AM CDT,"gg.alert(os.date(""%H:%M"")..""\n\n\n\n Active = 13:30 GMT+1"")
gg.alert(os.date(""%H:%M"")..""\n\n\n\n Active = 13:30 GMT+1"")
gg.alert(os.date(""%H:%M"")..""\n\n\n\n Active = 13:30 GMT+1"")
gg.alert(os.date(""%H:%M"")..""\n\n\n\n Active = 13:30 GMT+1"")"
WE4dzM2h,SEND EMAIL IF THE FOLDER CHANGES,MarkMeszaros,PowerShell,Sunday 3rd of March 2024 05:41:48 AM CDT,"##########################################################################################################
#																										##
# Created by Mark Meszaros on March 1st, 2024.  														##
# 																										##
##########################################################################################################
# 																										##
# MODIFY THESE ROWS: 29, 38, 43*, 49*, 61*, 70*, 78*, 79*, 115, 116, 117								##
#																										##
# YOU DON'T HAVE TO MODIFY THE * MARKED ROWS IF NOT NECESSARY											##
# 																										##
##########################################################################################################
# 																										##
# RUN THE SCRIPT WITH THIS COMMAND AS AN ADMINISTRATOR IN CMD 											##
# powershell -noexit -executionpolicy bypass -File C:\...\folderMonitor.ps1 							##
# 																										## 
# YOU CAN NAME THIS SCRIPT WHATEVER YOU WANT... [folderMonitor.ps1]										##
# 																										##
##########################################################################################################
# 																										##
# NO ACCENTED CHARACTERS ALLOWED IN THIS CODE [PATH, FILENAME, SUBJECT, BODY, ETC...]					##
#																										##
##########################################################################################################
#																										##
# ONLY OUTLOOK ACCOUNT WORKS WITH THE SCRIPT, FROM 2024 IT IS NOT POSSIBLE TO USE IT WITH GMAIL			##																							##
#																										##
##########################################################################################################
##########################################################################################################
																										##
$Username = ""something@outlook.com"";																	##
$Credential = Get-Credential -UserName $Username -Message ""Enter your password""							##
																										##
$Password = $Credential.GetNetworkCredential().Password													##
																										##
##########################################################################################################
# CHANGE THIS PART OF THE CODE																			##
##########################################################################################################
																										##
$Path = ""C:\...\MonitoredFolder"";                                           							##
																										##
##########################################################################################################
																										##
# FILTER EXAMPLES '*' '*.pdf.' '*.txt' 																	##
$FileFilter = '*' 																						##
																										##
##########################################################################################################

$IncludeSubfolders = $true

$AttributeFilter = [IO.NotifyFilters]::FileName, [IO.NotifyFilters]::LastWrite 

# NotifyFilters.Attributes
# NotifyFilters.CreationTime
# NotifyFilters.DirectoryName
# NotifyFilters.FileName
# NotifyFilters.LastAccess
# NotifyFilters.LastWrite
# NotifyFilters.Security
# NotifyFilters.Size;


$ChangeTypes = [System.IO.WatcherChangeTypes]::Created #, [System.IO.WatcherChangeTypes]::Deleted, ...

# YOU CAN ALSO USE THESE FILTERS
# $ChangeTypes = [System.IO.WatcherChangeTypes]::All
# $ChangeTypes = [System.IO.WatcherChangeTypes]::Created
# $ChangeTypes = [System.IO.WatcherChangeTypes]::Changed
# $ChangeTypes = [System.IO.WatcherChangeTypes]::Renamed
# $ChangeTypes = [System.IO.WatcherChangeTypes]::Deleted

$Timeout = 1000 # MILLISECONDS [1 SEC]


function SendToEmail([string]$email, [string]$attachmentpath){

	$message = new-object Net.Mail.MailMessage;
	$message.From = $Username
	$message.To.Add($email);
	$message.Subject = ""Folder Changes"";
	$message.Body = ""There has been a change in the monitorized folder."";
	$attachment = New-Object Net.Mail.Attachment($attachmentpath);
	$message.Attachments.Add($attachment);

	$smtp = new-object Net.Mail.SmtpClient(""smtp.office365.com"", ""25"");
	$smtp.EnableSSL = $true;
	$smtp.Credentials = New-Object System.Net.NetworkCredential($Username, $Password);
	$smtp.send($message);
	write-host ""Mail Sent to $email"" ;
	$attachment.Dispose();
}

function FileMonitoring
{
  param
  (
    [Parameter(Mandatory)]
    [System.IO.WaitForChangedResult]
    $ChangeInformation
  )
  
  Write-Host 'Change detected:'
  $ChangeInformation | Out-String | Write-Host -ForegroundColor DarkYellow
    
  $FullFilePath = $Path
  
  $FullFilePath += '\'
  
  $FullFilePath += $ChangeInformation.Name
  
  Write-Host $FullFilePath

##########################################################################################################
# CHANGE THIS PART OF THE CODE TO THE DESTINATION EMAILS												##
##########################################################################################################
                                                                                                        ##
  SendToEmail -email ""something@.gmail.com"" -attachmentpath $FullFilePath;								##
  #SendToEmail -email ""something@outlook.com"" -attachmentpath $FullFilePath;							##
  #SendToEmail -email ""something@yahoo.com"" -attachmentpath $FullFilePath;								##
                                                                                                        ##
##########################################################################################################
  
}

try
{
  Write-Host ""FileSystemWatcher is monitoring $Path""
  

  $watcher = New-Object -TypeName IO.FileSystemWatcher -ArgumentList $Path, $FileFilter -Property @{
    IncludeSubdirectories = $IncludeSubfolders
    NotifyFilter = $AttributeFilter
  }


  do
  {

    $result = $watcher.WaitForChanged($ChangeTypes, $Timeout)

    if ($result.TimedOut) { continue }
    
    FileMonitoring -Change $result
   
  } while ($true)
}
finally
{
  $watcher.Dispose()
  Write-Host 'FileSystemWatcher removed.'
}

# YOU CAN CLOSE THE SCRIPT WITH CTRL-C:
# ENJOY!"
3hHLsNL7,Untitled,sissou123,Java,Sunday 3rd of March 2024 05:33:33 AM CDT,"The Complete Java Programmer: From Scratch to Advanced
Learn all the fundamental and advanced concepts(OOPS, Files, Data Structures) of Java using real-world examples. 
What you'll learn
Core concepts of Java from the Beginning  coding Java for Android
Learn how to write a Java program 
for more:https://cuty.io/M1mBrYWNexb
"
NKNhP13W,41 Indicatore Stop Loss Legato,Maurizio-Ciullo,JavaScript,Sunday 3rd of March 2024 05:26:07 AM CDT,"//---------------------------------------------- Inizio 41 Lezione Personale Indicatore Stop Loss Legato All'Ingresso ----------------------------------------------//

//@version=5
strategy(""Indicatore Stop Loss Legato All'Ingresso"", overlay=true, margin_long=100, margin_short=100)

atr = ta.atr(14)
p4 = plot(atr, ""ATR"", color = color.yellow, style = plot.style_cross)

atrNeg1 = low - atr
atrPos1 = high + atr

plot(atrNeg1, title=""atrNeg1"")
plot(atrPos1, title=""atrPos1"")

var stopLong = 0.0
var stopShort = 0.0

mediaSemplice = ta.sma(close, 14)
plot(mediaSemplice, title=""mediaSemplice"")

 
isFlat() =>
    strategy.position_size == 0
 
isLong() =>
    strategy.position_size > 0
 
isShort() =>
    strategy.position_size < 0

 
if isFlat() and ta.crossover(close, mediaSemplice)
    strategy.entry(""Long IN"", strategy.long)

TotalTrades() =>
	strategy.closedtrades + strategy.opentrades

if  isLong() and strategy.opentrades[1] == 0
    atrNeg = low - atr
    atrPos = high + atr

    stopLong := atrNeg
    stopShort := atrPos


else if isFlat()
    stopLong := 0.0
    stopShort := 0.0

plotshape(stopLong, ""ATR neg"", color = color.red)
plotshape(stopShort, ""ATR pos"", color = color.green)


if isLong()
    strategy.exit('SL e TP', from_entry=""Long IN"", stop= stopLong,alert_message = ""Your Long SL-TP Has Been Triggered."")

//---------------------------------------------- Fine 41 Lezione Personale Indicatore Stop Loss Legato All'Ingresso ----------------------------------------------//"
cewCyC4i,🚀 Pet Simulator 99! [TECH] Auto Farm Script,Project-WD,Lua,Sunday 3rd of March 2024 05:20:48 AM CDT,"-- 🆕Update (2024-03-03)
-- AUTO FARM | AUTO GIFTS | AUTO HATCH | AUTO RANK & MORE
-- Script📝: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
qdGCP8Yu,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 05:20:42 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <cstring>
#include <queue>
#include <set>
#include <cmath>
#define ll long long
using namespace std;
int arr[100005];
int n,d;
ll p;


int f(int k){
    priority_queue<int>pq;
    priority_queue<int>iseceni;
    for(int i = 0;i<n;i++){
        pq.push(arr[i]);
    }
    ll sum =0;
    for(int i =1;i<=d;i++){
        int najgolemo = 0;
        if(!pq.empty()) {
            najgolemo = pq.top();
            pq.pop();
        }
            sum+= najgolemo;
            if(i>k and !iseceni.empty()){
                pq.push(iseceni.top());
                iseceni.pop();
            }
            iseceni.push(najgolemo);
        
    }
    
    if(sum >= p) return 1;
    else return  -1;
}
int main() {
   
    cin >> n >> p >>d;
    for(int i =0;i<n;i++){
        cin >> arr[i];
    }
    
    int left,right,mid;
    left = 0;
    right = d;
    int res = -1;
    while(left <= right){
        mid = (left+right)/2;
        if(f(mid) == 1){
            left= mid+1;
            res = max(res,mid);
        }
        else if(f(mid) == -1){
            right=mid-1;
        }
    }
    
    
    if(res == d){
        cout << ""seedno"";
    }
    else cout << res;
}
"
3uNwkQVX,Indicatore Stop Loss Legato All'Ingresso,Maurizio-Ciullo,JavaScript,Sunday 3rd of March 2024 05:14:58 AM CDT,"// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Maurizio-Ciullo

//@version=5
strategy(""Indicatore Stop Loss Legato All'Ingresso"", overlay=true, margin_long=100, margin_short=100)

atr = ta.atr(14)
p4 = plot(atr, ""ATR"", color = color.yellow, style = plot.style_cross)

atrNeg1 = low - atr
atrPos1 = high + atr

plot(atrNeg1, title=""atrNeg1"")
plot(atrPos1, title=""atrPos1"")

var stopLong = 0.0
var stopShort = 0.0

mediaSemplice = ta.sma(close, 14)
plot(mediaSemplice, title=""mediaSemplice"")

 
isFlat() =>
    strategy.position_size == 0
 
isLong() =>
    strategy.position_size > 0
 
isShort() =>
    strategy.position_size < 0

 
if isFlat() and ta.crossover(close, mediaSemplice)
    strategy.entry(""Long IN"", strategy.long)

TotalTrades() =>
	strategy.closedtrades + strategy.opentrades

if  isLong() and strategy.opentrades[1] == 0
    atrNeg = low - atr
    atrPos = high + atr

    stopLong := atrNeg
    stopShort := atrPos


else if isFlat()
    stopLong := 0.0
    stopShort := 0.0

plotshape(stopLong, ""ATR neg"", color = color.red)
plotshape(stopShort, ""ATR pos"", color = color.green)


if isLong()
    strategy.exit('SL e TP', from_entry=""Long IN"", stop= stopLong,alert_message = ""Your Long SL-TP Has Been Triggered."")"
Yu0gRitC,Make Refference,Dotterbart,VisualBasic,Sunday 3rd of March 2024 04:54:40 AM CDT,"Public Function MakeRef(dat_Date As Date) As String
Dim DB As DAO.Database
Set DB = CurrentDb
Dim RS As DAO.Recordset
Set RS = DB.OpenRecordset(""SELECT * FROM Tab_DateRefs ORDER BY Data_Ref;"")
Dim strRef As String
Dim intMon As Integer
Dim strMon As String
Dim strSQL As String
Dim strTemp As String

strRef = Right(Year(dat_Date), 2)

intMon = Month(dat_Date)
strMon = Chr(64 + intMon) 'ASCII 65 = A

strRef = strRef & strMon

strSQL = ""Data_Ref LIKE '"" & strRef & ""*'"" 'Data_Ref ist the name from my Table where the ref is stored
RS.MoveFirst
RS.FindLast strSQL

If RS.NoMatch Then
    MakeRef = strRef & ""01"" 'If nothin like 24A is in your Data then start new Reference
Else
    If CInt(Right(RS!Data_Ref, 2) + 1) < 10 Then
        MakeRef = Left(RS!Data_Ref, 4) & CStr(CInt(Right(RS!Data_Ref, 2) + 1)) ' 4 = with the leading zero
    Else
        MakeRef = Left(RS!Data_Ref, 3) & CStr(CInt(Right(RS!Data_Ref, 2) + 1)) ' 3 = without the leading zero
    End If
End If

RS.Close
DB.Close
Set DB = Nothing
Set RS = Nothing
End Function"
vjdjjX66,Soccer Prediction Betting Tips 03032024,livebetpro,PHP,Sunday 3rd of March 2024 04:32:33 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-03032024/
SxNE2kKv,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 03:58:47 AM CDT,"#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    int niza[n], b[q];
    
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    for(int i = 0; i < q; i++) {
        cin >> b[i];
    }
    
    int idx[55];
    for(int i = 1; i <= 50; i++) {
        idx[i] = 0;
    }
    for(int i = 0; i < n; i++) {
        if(idx[niza[i]] == 0) {
            idx[niza[i]] = i + 1;
        }
    }
    
    for(int i = 0; i < q; i++) {
        int x = b[i];
        cout << idx[x] << "" "";
        for(int j = 1; j <= 50; j++) {
            if(idx[j] != 0 and idx[j] < idx[x]) {
                idx[j]++;
            }
        }
        idx[x] = 1;
        
    }
    return 0;
}
"
RwY97KTq,Bookaa DJ,BookaaGaming,Lua,Sunday 3rd of March 2024 03:31:19 AM CDT,"local speaker = peripheral.find(""speaker"")
local diskDrive = peripheral.find(""drive"")

if not speaker then
    print(""No speaker connected."")
    return
end

if not diskDrive then
    print(""No disk drive connected."")
    return
end

-- Mapping of disc titles to NBS files.
local discToAudioMap = {
    [""C418 - 13""] = ""audio/13.nbs"",
    [""C418 - cat""] = ""audio/cat.nbs"",
    [""C418 - blocks""] = ""audio/blocks.nbs"",
    [""C418 - chirp""] = ""audio/chirp.nbs"",
    [""C418 - far""] = ""audio/far.nbs"",
    [""C418 - mall""] = ""audio/mall.nbs"",
    [""C418 - mellohi""] = ""audio/mellohi.nbs"",
    [""C418 - stal""] = ""audio/stal.nbs"",
    [""C418 - strad""] = ""audio/strad.nbs"",
    [""C418 - ward""] = ""audio/ward.nbs"",
    [""C418 - 11""] = ""audio/11.nbs"",
    [""C418 - wait""] = ""audio/wait.nbs"",
    [""Lena Raine - pigstep""] = ""audio/pigstep.nbs"",
    [""Lena Raine - otherside""] = ""audio/otherside.nbs"",
    -- Add other mappings here.
}

-- Basic function to play a note from an NBS file.
local function playNBS(audioFile)
    if not fs.exists(audioFile) then
        print(""File does not exist: "" .. audioFile)
        return
    end

    local handle = fs.open(audioFile, ""rb"")
    if not handle then
        print(""Failed to open file: "" .. audioFile)
        return
    end

    -- This is a placeholder. Real NBS file reading logic is required here.
    -- For demonstration, just play a single note.
    speaker.playNote(""harp"", 1, 24)  -- Play a C note in the highest octave.

    handle.close()
end

-- Function to play an NBS file associated with a disc.
local function playAudioFile(audioFile)
    print(""Attempting to play NBS file: "" .. audioFile)
    playNBS(audioFile)
end

-- Function to get the audio file path based on the disc inserted.
local function getDiscAudioFile()
    if diskDrive.hasAudio() then
        local discTitle = diskDrive.getAudioTitle() -- Get the title of the inserted disc.
        print(""Disc inserted: "" .. discTitle)
        local audioFile = discToAudioMap[discTitle]
        if audioFile then
            return audioFile
        else
            print(""No audio file mapped for this disc: "" .. discTitle)
        end
    else
        print(""No disc inserted."")
    end
    return nil
end

-- Function to check for a disc and play its audio.
local function playDiscAudio()
    local audioFile = getDiscAudioFile()
    if audioFile then
        playAudioFile(audioFile)
    end
end

-- Main loop to periodically check for a disc and play audio.
while true do
    playDiscAudio()
    sleep(10) -- Check every 10 seconds.
end"
VHugK53F,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 03:28:51 AM CDT,"#include <iostream>
#include <vector>
using namespace std;

int main() {
    int p, n;
    cin >> p >> n;
    
    int niza[105];
    int j = 0;
    for(int i = 1; i <= 100; i++) {
        int tmp = p;
        int sum = 0;
        while(tmp > 0) {
            int cifra = tmp % 10;
            sum += cifra * cifra;
            tmp /= 10;
        }
        
        
        
        niza[j] = p;
        j++;
        p = sum;
        if(i == n) {
            cout << p << endl;
            return 0;
        }
        
    }
    int reps[100], r = 0;
    for(int i = 0; i < j; i++) {
        int se_povtoruva = -1;
        for(int k = i + 1; k < j; k++) {
            if(niza[i] == niza[k]) {
                se_povtoruva = k;
                break;
            }
        }
        if(se_povtoruva != -1) {
            for(int k = i; k < se_povtoruva; k++) {
                reps[r] = niza[k];
                r++;
            }
            n -= i;
            break;
        }
    }
    int ostatok = n % r;
    if(ostatok == 0) {
        cout << reps[r - 1] << endl;
    }
    else {
        cout << reps[ostatok] << endl;
    }
    return 0;
}
"
hTrnCjS0,Control NEMA11 con A4988 gestion micropasos,AntonioVillanueva,Arduino,Sunday 3rd of March 2024 03:20:46 AM CDT,"/*        Control MOTOR NEMA 11 con A4988 y Arduino
 *                Antonio Villanueva Segura
 *                          A4988
 *                    /ENABLE    VMOT +8V
 *    (PIN 3 ARDUINO ) MS1       GND GND
 *    (PIN 4 ARDUINO ) MS2       2B   AZUL (NEMA 11)
 *    (PIN 5 ARDUINO ) MS3       2A   ROJO (NEMA 11)
 *     cable a SLEEP  RESET     1A   NEGRO (NEMA 11)
 *     cable a RESET  SLEEP     1B   VERDE (NEMA 11)
 *    (PIN 2 ARDUINO )STEP      VDD +5V_ARDUINO 
 *    (PIN 5 ARDUINO) DIR       GND GND GND_ARDUINO
 */
/**************************************************************************************************************/
//Definiciones de PINs en el ARDUINO uno

#define STEP 2 /* Pasos */
/*     RESOLUCION uPASO         FULL 1/2   1/4   1/8  1/16  */
#define MS1 3 /* control pasos  0    1      0     1     1   */
#define MS2 4 /* control pasos  0    0      1     1     1   */
#define MS3 5 /* control pasos  0    0      0     0     1   */

#define DIR 6 /* Sentido de giro */
#define EN 8 /* Habilita A4988 */
/**************************************************************************************************************/
//Variables globales
float angulo(-1); //Seleccion
int pasos(0);
bool _ms1 (false);//Variables control uPasos sirven para recalcular los grados
bool _ms2 (false);//Variables control uPasos sirven para recalcular los grados
bool _ms3 (false);//Variables control uPasos sirven para recalcular los grados
/**************************************************************************************************************/
void setup()//Configuracion 
{
  Serial.begin(9600);//Velocidad puerto serie

  pinMode(EN, OUTPUT);//PIN ENABLE como salida
  pinMode(DIR, OUTPUT);//DIR como salida
  pinMode(STEP, OUTPUT);//STEP como salida

  pinMode(MS1, OUTPUT);//control pasos
  pinMode(MS2, OUTPUT);//control pasos  
  pinMode(MS3, OUTPUT);//control pasos

  digitalWrite(MS1, LOW); //Configura control paso FULL
  digitalWrite(MS2, LOW); //Configura control paso FULL 
  digitalWrite(MS3, LOW); //Configura control paso FULL
    
  digitalWrite(EN, HIGH); //Ponemos a nivel bajo ENABLE , habilita A4988
}
/**************************************************************************************************************/
void sentidoGiro(boolean sentido){//Sentido de giro
    digitalWrite(DIR, sentido);
}
/**************************************************************************************************************/
void cambiaMicroPaso(bool ms1,bool ms2,bool ms3){
  _ms1=ms1;//Actualiza las variables de uPasos para recalcular angulo
  _ms2=ms2;//Actualiza las variables de uPasos para recalcular angulo
  _ms3=ms3;//Actualiza las variables de uPasos para recalcular angulo
  digitalWrite(MS1, ms1); //Configura control paso 
  digitalWrite(MS2, ms2); //Configura control paso  
  digitalWrite(MS3, ms3); //Configura control paso 
}
/**************************************************************************************************************/
void seleccionMicroPaso (int upaso){ //Seleccion del uPaso
 
  switch (upaso){
    case 0://FULL
      cambiaMicroPaso(LOW,LOW,LOW);
      Serial.println(""\nFULL (1.8°)"");
      break;

    case 1:// 1/2
      cambiaMicroPaso(HIGH,LOW,LOW);
      Serial.println(""\nuPaso 1/2 (0.9°)"");      
      break; 

    case 2:// 1/4
      cambiaMicroPaso(LOW,HIGH,LOW);
      Serial.println(""\nuPaso 1/4 (0.45°)"");       
      break; 

    case 3:// 1/8
      cambiaMicroPaso(HIGH,HIGH,LOW);
      Serial.println(""\nuPaso 1/8 (0.225°)"");       
      break;
         
    case 4:// 1/16
      cambiaMicroPaso(HIGH,HIGH,HIGH);
      Serial.println(""\nuPaso 1/16 (0.1125°)"");       
      break;                      
    
  }
  
}
/**************************************************************************************************************/
void unPaso(){//Un paso
  digitalWrite(EN, LOW); //LOW ENABLE a4988 
  
  digitalWrite(STEP, HIGH);//Crea el paso
  delay(1);
  digitalWrite(STEP, LOW);
  delay(1);  
}
/**************************************************************************************************************/
//Traduce el Angulo a una secuencia de pasos 
int AnguloPasos(float angulo_new){//Paso entero
  int mult= compensauPasos();//Compensa el numero de pasos segun la config. de upasos ms1,ms2,ms3
  return (abs (angulo_new) / 1.8)*mult;
}
/**************************************************************************************************************/
//Lee una cadena de texto del puerto serie
String leeCadena(){
  String cadena="""";
  if (Serial.available()) {cadena = Serial.readStringUntil('\n');}
  return cadena;
}
/**************************************************************************************************************/
bool opcionesuPaso (String lectura){//Seleccion entrada RS232 para cambiar los micropasos , adaptado al teclado Frances
  if ( lectura[0]== 'a' || lectura[0]== 'A' ){seleccionMicroPaso (0);return true;}//FULL
  if ( lectura[0]== 'z' || lectura[0]== 'Z' ){seleccionMicroPaso (1);return true;}// 1/2  
  if ( lectura[0]== 'e' || lectura[0]== 'E' ){seleccionMicroPaso (2);return true;}// 1/4
  if ( lectura[0]== 'r' || lectura[0]== 'R' ){seleccionMicroPaso (3);return true;}// 1/8
  if ( lectura[0]== 't' || lectura[0]== 'T' ){seleccionMicroPaso (4);return true;}// 1/16  
  return false;
}
/**************************************************************************************************************/
//Menu lectura Serie, devuelve un int valor de Angulo
float menu(){
  Serial.print (""Angulo :"");
  String lectura="""";
  while (lectura== """" ){lectura=leeCadena();}//Espera un valor numerico o opcion de uPaso
  if (opcionesuPaso (lectura)){lectura="""";}//Si es una seleccion de uPaso lectura a 0°
  Serial.println (lectura);//Muestra seleccion uPaso o el numero de pasos 

  return lectura.toFloat();
}
/**************************************************************************************************************/
/**************************************************************************************************************/
int compensauPasos(){//Dependiendo del tipo de paso FULL 1/2 1/4 1/8 1/19 debe aumentar para conseguir el grado
/*      FULL 1/2   1/4   1/8  1/16    */
/*       A    Z     E     R     T     */
/*  ms1  0    1     0     1     1     */
/*  ms2  0    0     1     1     1     */
/*  ms3  0    0     0     0     1     */ 
  if (  (_ms1) &  !(_ms2) &  !(_ms3)){return 2;}  //  1/2  compensacion multiplica x2 el angulo 
  if ( !(_ms1) &   (_ms2) &  !(_ms3)){return 4;}  // 1/4  compensacion multiplica x4 el angulo 
  if (  (_ms1) &   (_ms2) &  !(_ms3)){return 8;}  // 1/8  compensacion multiplica x8 el angulo  
  if (  (_ms1) &   (_ms2) &   (_ms3)){return 16;} // 1/16  compensacion multiplica x16 el angulo          
  return 1;//FULL por defecto es 1 FULL , si no es ninguna de las opciones anteriores
}
/**************************************************************************************************************/
void loop()//Bucle principal ARDUINO
{

  angulo = menu();//Muestra mensaje y espera un Angulo
  pasos=AnguloPasos(angulo);//Traduce el angulo a numero de pasos 
  sentidoGiro (angulo >0? true :false);//Selecciona sentido angulo + o -

  while ( pasos-- ){unPaso();}//Ejecuta el numero de pasos
  digitalWrite(EN, HIGH); //Ponemos a nivel ALTO  , deshabilita A4988 evita consumo en paro  

}"
5nAFBzYy,Leviathan Myth Dark Mode Lair CSS Template,Werewire,CSS,Sunday 3rd of March 2024 03:12:42 AM CDT,"<style>
html {
background: #000;
background-image: url('https://i.ibb.co/D9ygQN8/black-scales.png');
background-size: 160px;}
body {
font-family: 'Open Sans', sans-serif;
color: #fff;}
footer {
background: #0e0015;}
footer a {
color: #a28eaf;}
footer a:hover {
color: #f4e7fd;
text-decoration: underline;}
.sm-footer {
background: url(../images/banners/footer.png) no-repeat;
color: white;}
header {
background: #16001a;}
.sm-header {
background: url(../images/banners/header.png) no-repeat;}
.wrapper {
background: #000;}
.content-wrapper {
background: #101010 !important;}
.content {
border-left: 1px dotted #292929 !important;;
background: #161616 !important;}
.sidebar {
background: #101010;}
.icon {
background: #292929;
border: 12px solid #292929;
content: url(https://i.ibb.co/YycXVhv/prideplush-enby.png) !important;}
.welcome-banner {
background: #161616;
color: #fff;}
.info-banner {
background: #101010;
color: #fff;}
/* LINKS */
a {
color: #d56dff;}	
a:hover {
color:#e7b5ff;}
.a {
background-color: #333333;
border: 1px solid #855299;}
.b {
background-color: #855299;
border: 1px solid #574761;
border-radius: 5px;
color: #ffffff;}
.c {
background-color: #333333;
border: 1px solid #c4c4c4;
border-radius: 5px;}
.alt {
background-color: #e6e6e6;}
.sidebar-nav li {
background-color: #4d4d4d;
color: white;}
nav {
background-color: #292929;}
nav li {
color: white;}
nav li:hover, .sidebar-nav li:hover {
background-color: rgba(0, 0, 0, 0.15);
transition: .3s background-color;
color: white;}
nav li a, .sidebar-nav a {
color: #ffffff;
text-decoration: none;
display: block;}
nav li a:hover, .sidebar-nav a:hover {
color: #d56dff;
text-decoration: underline;}
div, td {
font-family: Verdana;
color: #fff;}
input[type=submit], input[type=button] {
background-color: #855299;
color: white;}
input[type=submit]:hover, input[type=button]:hover {
background-color: #553a53;}
/* Status Symbol Colors */
.for-private-sale {
color: gray;}
.for-public-sale {
color: green;}
.male {
color: #3399cc;}
.female {
color: pink;}
.bond-low {
color: #990000;}
.hungry {
color: #7b503e;}
.for-stud {
color: #cc3333;}
.battling {
color: #cc6633;}
.locked {
color: #336699;}
/* Custom Bits */
.success a {
color: #16001a;}
.success a:hover {
color: #574761}</style>"
PHVfqFiz,Untitled,IgorLytkin,Bash,Sunday 3rd of March 2024 03:04:18 AM CDT," 16329:20240303:155702.674 error reason for ""singularity:docker.volumes_size"" changed: Unsupported item key.                                                                                                    │ 16329:20240303:155702.674 error reason for ""singularity:docker.layers_size"" changed: Unsupported item key.                                                                                                     │ 16329:20240303:155702.674 error reason for ""singularity:docker.containers_size"" changed: Unsupported item key.                                                                                                 │ 16329:20240303:155702.674 error reason for ""singularity:docker.images_size"" changed: Unsupported item key.                                                                                                     │ 16329:20240303:155704.686 error reason for ""singularity:docker.logging_driver"" changed: Unsupported item key.                                                                                                  │ 16329:20240303:155704.686 error reason for ""singularity:docker.mem_limit.enabled"" changed: Unsupported item key.                                                                                               │ 16329:20240303:155704.686 error reason for ""singularity:docker.mem.total"" changed: Unsupported item key.                                                                                                       │ 16329:20240303:155704.686 error reason for ""singularity:docker.name"" changed: Unsupported item key.                                                                                                            │ 16329:20240303:155704.686 error reason for ""singularity:docker.ncpu"" changed: Unsupported item key.                                                                                                            │ 16329:20240303:155704.686 error reason for ""singularity:docker.nfd"" changed: Unsupported item key.                                                                                                             │ 16329:20240303:155704.686 error reason for ""singularity:docker.nevents_listener"" changed: Unsupported item key.                                                                                                │ 16329:20240303:155704.686 error reason for ""singularity:docker.kernel_version"" changed: Unsupported item key.                                                                                                  │ 16329:20240303:155704.686 error reason for ""singularity:docker.oomkill.disabled"" changed: Unsupported item key.                                                                                                │ 16329:20240303:155704.686 error reason for ""singularity:docker.operating_system"" changed: Unsupported item key.                                                                                                ┤ 16329:20240303:155704.686 error reason for ""singularity:docker.os_type"" changed: Unsupported item key.                                                                                                         │ 16329:20240303:155704.686 error reason for ""singularity:docker.images.total"" changed: Unsupported item key.                                                                                                    │ 16329:20240303:155704.686 error reason for ""singularity:docker.pids_limit.enabled"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.root_dir"" changed: Unsupported item key.                                                                                                        │ 16329:20240303:155704.686 error reason for ""singularity:docker.cgroup_driver"" changed: Unsupported item key.                                                                                                   │ 16329:20240303:155704.686 error reason for ""singularity:docker.server_version"" changed: Unsupported item key.                                                                                                  │ 16329:20240303:155704.686 error reason for ""singularity:docker.swap_limit.enabled"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.live_restore.enabled"" changed: Unsupported item key.                                                                                            │ 16329:20240303:155704.686 error reason for ""singularity:docker.architecture"" changed: Unsupported item key.                                                                                                    │ 16329:20240303:155704.686 error reason for ""singularity:docker.ipv4_forwarding.enabled"" changed: Unsupported item key.                                                                                         │ 16329:20240303:155704.686 error reason for ""singularity:docker.kernel_mem.enabled"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.cpu_set.enabled"" changed: Unsupported item key.                                                                                                 │ 16329:20240303:155704.686 error reason for ""singularity:docker.containers.paused"" changed: Unsupported item key.                                                                                               │ 16329:20240303:155704.686 error reason for ""singularity:docker.containers.running"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.containers.stopped"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.containers.total"" changed: Unsupported item key.                                                                                                │ 16329:20240303:155704.686 error reason for ""singularity:docker.cpu_cfs_period.enabled"" changed: Unsupported item key.                                                                                          │ 16329:20240303:155704.686 error reason for ""singularity:docker.cpu_cfs_quota.enabled"" changed: Unsupported item key.                                                                                           │ 16329:20240303:155704.686 error reason for ""singularity:docker.cpu_shares.enabled"" changed: Unsupported item key.                                                                                              │ 16329:20240303:155704.686 error reason for ""singularity:docker.kernel_mem_tcp.enabled"" changed: Unsupported item key.                                                                                          │ 16329:20240303:155704.686 error reason for ""singularity:docker.debug.enabled"" changed: Unsupported item key.                                                                                                   │ 16329:20240303:155704.686 error reason for ""singularity:docker.default_runtime"" changed: Unsupported item key.                                                                                                 │ 16329:20240303:155704.686 error reason for ""singularity:docker.driver"" changed: Unsupported item key.                                                                                                          │ 16329:20240303:155704.686 error reason for ""singularity:docker.goroutines"" changed: Unsupported item key.                                                                                                      │ 16330:20240303:155706.690 error reason for ""singularity:docker.images.top_level"" changed: Unsupported item key. "
Y5ExZV3b,Untitled,IgorLytkin,Bash,Sunday 3rd of March 2024 03:01:35 AM CDT,"sudo nano /etc/apt/sources.list.d/zabbix.list
# Zabbix main repository
deb https://repo.zabbix.com/zabbix/6.4/ubuntu jammy main
deb-src https://repo.zabbix.com/zabbix/6.4/ubuntu jammy main

# Zabbix unstable repository
#deb https://repo.zabbix.com/zabbix/6.3/ubuntu jammy main
#deb-src https://repo.zabbix.com/zabbix/6.3/ubuntu jammy main
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
zabbix-agent/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-apache-conf/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-frontend-php/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-server-pgsql/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-sql-scripts/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-web-service/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
zabbix-agent/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-apache-conf/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-frontend-php/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-server-pgsql/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-sql-scripts/jammy 1:6.4.12-1+ubuntu22.04 all [upgradable from: 1:6.4.0-1+ubuntu22.04]
zabbix-web-service/jammy 1:6.4.12-1+ubuntu22.04 amd64 [upgradable from: 1:6.4.0-1+ubuntu22.04]
liv@singularity:~$ sudo nano /etc/apt/sources.list.d/zabbix.list
liv@singularity:~$ sudo  apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  zabbix-agent zabbix-apache-conf zabbix-frontend-php zabbix-server-pgsql zabbix-sql-scripts zabbix-web-service
6 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.4 MB of archives.
After this operation, 714 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-server-pgsql amd64 1:6.4.12-1+ubuntu22.04 [1,486 kB]
Get:2 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-agent amd64 1:6.4.12-1+ubuntu22.04 [264 kB]
Get:3 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-frontend-php all 1:6.4.12-1+ubuntu22.04 [7,285 kB]
Get:4 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-apache-conf all 1:6.4.12-1+ubuntu22.04 [8,176 B]
Get:5 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-sql-scripts all 1:6.4.12-1+ubuntu22.04 [7,702 kB]
Get:6 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-web-service amd64 1:6.4.12-1+ubuntu22.04 [2,632 kB]
Fetched 19.4 MB in 3s (5,625 kB/s)
(Reading database ... 278575 files and directories currently installed.)
Preparing to unpack .../0-zabbix-server-pgsql_1%3a6.4.12-1+ubuntu22.04_amd64.deb ...
Unpacking zabbix-server-pgsql (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Preparing to unpack .../1-zabbix-agent_1%3a6.4.12-1+ubuntu22.04_amd64.deb ...
Unpacking zabbix-agent (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Preparing to unpack .../2-zabbix-frontend-php_1%3a6.4.12-1+ubuntu22.04_all.deb ...
Unpacking zabbix-frontend-php (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Preparing to unpack .../3-zabbix-apache-conf_1%3a6.4.12-1+ubuntu22.04_all.deb ...
Unpacking zabbix-apache-conf (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Preparing to unpack .../4-zabbix-sql-scripts_1%3a6.4.12-1+ubuntu22.04_all.deb ...
Unpacking zabbix-sql-scripts (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Preparing to unpack .../5-zabbix-web-service_1%3a6.4.12-1+ubuntu22.04_amd64.deb ...
Unpacking zabbix-web-service (1:6.4.12-1+ubuntu22.04) over (1:6.4.0-1+ubuntu22.04) ...
Setting up zabbix-sql-scripts (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-frontend-php (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-server-pgsql (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-web-service (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-agent (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-apache-conf (1:6.4.12-1+ubuntu22.04) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning candidates...
Scanning linux images...

Running kernel seems to be up-to-date.

Restarting services...
 systemctl restart zabbix-server.service

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
liv@singularity:~$
liv@singularity:~$ sudo apt install zabbix-agent2
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  zabbix-agent2
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 5,124 kB of archives.
After this operation, 17.1 MB of additional disk space will be used.
Get:1 https://repo.zabbix.com/zabbix/6.4/ubuntu jammy/main amd64 zabbix-agent2 amd64 1:6.4.12-1+ubuntu22.04 [5,124 kB]
Fetched 5,124 kB in 3s (2,048 kB/s)
Selecting previously unselected package zabbix-agent2.
(Reading database ... 278575 files and directories currently installed.)
Preparing to unpack .../zabbix-agent2_1%3a6.4.12-1+ubuntu22.04_amd64.deb ...
Unpacking zabbix-agent2 (1:6.4.12-1+ubuntu22.04) ...
Setting up zabbix-agent2 (1:6.4.12-1+ubuntu22.04) ...
Created symlink /etc/systemd/system/multi-user.target.wants/zabbix-agent2.service → /lib/systemd/system/zabbix-agent2.service.
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host."
6etMkZBq,Autoexec.bat,TehnoZet2,Bash,Sunday 3rd of March 2024 02:58:54 AM CDT,":: Старт файла прошивки BIOS
echo Start BIOS Flashing (bios.bat)!
call bios.bat"
5pyDTKtG,bios.bat,TehnoZet2,Bash,Sunday 3rd of March 2024 02:48:06 AM CDT,":: Прошивка BIOS
CLS
@echo off 
echo Hello!
echo Flashing BIOS?
echo ""backup.rom"" - old version BIOS
pause
CLS
cd\
afudos /obackup.rom
afudos /inewbios.rom
exit "
F7Ze1jNV,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 02:47:41 AM CDT,"#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    int niza[n + 5];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    int b[q];
    for(int i = 0; i < q; i++) {
        cin >> b[i];
    }
    int idx[55];
    for(int i = 1; i <= 50; i++) {
        idx[i] = 0;
    }
    for(int i = 0; i < n; i++) {
        if(idx[niza[i]] == 0) {
            idx[niza[i]] = i + 1;
        }
    }
    
    for(int i = 0; i < q; i++) {
        cout << idx[b[i]] << "" "";
        for(int j = 1; j <= 50; j++) {
            if(idx[j] < idx[b[i]] and idx[j] != 0) {
                idx[j]++;
            }
        }
        idx[b[i]] = 1;
    }
    
    
    return 0;
}
"
qz4Gn1bz,Untitled,IgorLytkin,Bash,Sunday 3rd of March 2024 02:41:18 AM CDT,"liv@singularity:~$ sudo wget https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb
--2024-03-03 15:38:42--  https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb
Resolving repo.zabbix.com (repo.zabbix.com)... 178.128.6.101, 2604:a880:2:d0::2062:d001
Connecting to repo.zabbix.com (repo.zabbix.com)|178.128.6.101|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3744 (3.7K) [application/octet-stream]
Saving to: ‘zabbix-release_6.4-1+ubuntu22.04_all.deb’

zabbix-release_6.4-1+ubuntu22.04_all.deb             100%[===================================================================================================================>]   3.66K  --.-KB/s    in 0s

2024-03-03 15:38:42 (1.64 GB/s) - ‘zabbix-release_6.4-1+ubuntu22.04_all.deb’ saved [3744/3744]

liv@singularity:~$ sudo dpkg -i zabbix-release_6.4-1+ubuntu22.04_all.deb
(Reading database ... 278575 files and directories currently installed.)
Preparing to unpack zabbix-release_6.4-1+ubuntu22.04_all.deb ...
Unpacking zabbix-release (1:6.4-1+ubuntu22.04) over (1:6.4-1+ubuntu22.04) ...
Setting up zabbix-release (1:6.4-1+ubuntu22.04) ...
liv@singularity:~$ sudo  apt update
Hit:1 http://apt.postgresql.org/pub/repos/apt jammy-pgdg InRelease
Hit:2 https://debian.neo4j.com stable InRelease
Hit:3 https://dl.google.com/linux/chrome/deb stable InRelease
Hit:4 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:5 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:7 https://esm.ubuntu.com/apps/ubuntu jammy-apps-security InRelease
Hit:8 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:9 https://esm.ubuntu.com/apps/ubuntu jammy-apps-updates InRelease
Hit:10 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:11 https://esm.ubuntu.com/infra/ubuntu jammy-infra-security InRelease
Hit:12 https://esm.ubuntu.com/infra/ubuntu jammy-infra-updates InRelease
Hit:13 https://repo.zabbix.com/zabbix-agent2-plugins/1/ubuntu jammy InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
All packages are up to date.
W: https://debian.neo4j.com/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
liv@singularity:~$ sudo apt install --only-upgrade zabbix-server-pgsql zabbix-frontend-php php8.1-pgsql zabbix-apache-conf zabbix-sql-scripts zabbix-agent
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
php8.1-pgsql is already the newest version (8.1.2-1ubuntu2.14).
zabbix-agent is already the newest version (1:6.4.0-1+ubuntu22.04).
zabbix-apache-conf is already the newest version (1:6.4.0-1+ubuntu22.04).
zabbix-frontend-php is already the newest version (1:6.4.0-1+ubuntu22.04).
zabbix-server-pgsql is already the newest version (1:6.4.0-1+ubuntu22.04).
zabbix-sql-scripts is already the newest version (1:6.4.0-1+ubuntu22.04).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded."
23uPehc9,Age Trap!,w1zzard,C#,Sunday 3rd of March 2024 01:56:27 AM CDT,"I was taking nap this afternoon, Suddenly I heard the laughs of all the my friends and people whom I spent my time from being a child everything flashed in fraction of seconds.

I could no more sleep I felt like crying I miss those days.

Coming from unknown part of a country side and joining an unknown school and living with unknown vibes ,
Fighting,trolling and making unlimited memories.

From being called “worst batch of the school” to being “most successful batch of the school”
thats how school life was ended.

Everything was just messed up after 10th guess everyone has their own careers to pursue but yet there are people to visit home during holidays and share things at late night beds in hostels.

But today I miss the days cycling with homies,playing cricket till the there is no visibility around,planning for new year evening parties as reunions, sharing foods during recess, eating in classrooms during lectures, skipping study hours during school time, standing on knees just because the homework wasn’t done with friends.

At least I am happy that I had such life unlike the people in today’s gen-z generation.I feel my era was perfect example of how a adult to child life should be, where everyone grew up with fun and upmost upbringing.

I really miss the people who life countries to study in abroad, who left town for work purposes and the small talks which shall no more be the same. :("
nAihKBBt,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 01:55:55 AM CDT,"#include <iostream>
#include <vector>
using namespace std;

int kvadratiNaCifri(int broj) {
    int zbir = 0;
    while (broj > 0) {
        int cifra = broj % 10;
        zbir += cifra * cifra;
        broj /= 10;
    }
    return zbir;
}

int main() {
  int x,n;
  cin>>x>>n;
  
    vector<int> v;
    int first_number = x;
  for(int i=1;i<=100;i++){
      v.push_back(first_number);
    first_number=kvadratiNaCifri(first_number);
      if(i == n) {
          cout << first_number << endl;
          return 0;
      }
  }
    vector<int> repetion;
    for(int i = 0; i < v.size(); i++) {
        int se_povtoruva = -1;
        for(int j = i + 1; j < v.size(); j++) {
            if(v[i] == v[j]) {
                se_povtoruva = j;
                break;
            }
        }
        if(se_povtoruva != -1) {
            n -= i;
            for(int j = i; j < se_povtoruva; j++) {
                repetion.push_back(v[j]);
                
            }
            break;
        }
    }
    if(n % repetion.size() == 0) {
        cout << repetion[repetion.size() - 1] << endl;
    }
    else {
        cout << repetion[n % repetion.size()] << endl;
    }
}
"
q3Ks8qxK,turtlefarmer2,Rotatceps,Lua,Sunday 3rd of March 2024 01:53:58 AM CDT,"-- Running variables

-- The turtle will refuel on the next cycle if fuel falls below this level.
minFuel = 200
minGrowth = 6
maxGrowth = 7
checkInterval = 180
parked = false

-- Blocks that the turtle ""recognizes""
red = ""minecraft:redstone_block"" -- Causes the turtle to circle left.
white = ""minecraft:quartz_block"" -- Causes the turtle to circle right.
gold = ""minecraft:gold_block"" -- Causes the turtle to turn left in place.
black = ""minecraft:coal_block"" -- Causes the turtle to deposit all of its harvested crops and refuel if necessary.
blue = ""minecraft:lapis_block"" -- Indicates to the turtle that it is inside its depot.

-- Main Cycle Implementation

function main()
  while(true) do
    doActions = true
    if(parked) then
      refuelIfNecessary()
      -- check if the harvest should start
      goForward()
      status, data = turtle.inspectDown()

      -- There is no sample crop
      if(not status or data.state.age == nil) then
        goBack()
        error(""Did not find a crop next to the depot, please ensure there is a crop in the space next to the depot"")
      end
      
      -- The sample crop is not mature
      if(data.state.age < minGrowth) then
        print(""It's probably not time to harvest yet"")
        goBack()
        sleep(checkInterval)
        doActions = false -- continue or goto would be useful but those aren't in CC?
      end
    end -- end parked
    
    if (doActions) then
      parked = false
      -- Check the block in front of the turtle and act accordingly.
      status, data = turtle.inspect()
      -- If there was no block we should perform the default action.
      -- If there was one we should take the appropriate action
      if(not status) then
        action()
      else
        if(not handleActions(data)) then
          error(""There is no action specified for this block: "" .. data.name)
        end
      end
    end
  end -- end while loop
end -- end main

-- Turtle Logic, anything that classifies as ""thinking"".

function handleActions(data)
  harvestIfGrown()
  if(data.name == red) then 
      print(""saw red, circling left"")
      actionRed()
      parked = false
      return true
    elseif(data.name == white) then 
      print(""saw white, circling right"")
      actionWhite() 
      parked = false
      return true
    elseif(data.name == gold) then 
      print(""saw gold, turning left"")
      actionGold()
      parked = false
      return true
    elseif(data.name == black) then 
      print(""saw black, at the depot"")
      actionBlack() 
      return true
    elseif(data.name == blue) then
      print(""saw blue, home sweet home"")
      parked = true
      turtle.turnLeft()
      return true
    else
      print(""saw something I don't recognize, this is bad"")
      parked = false
      return false
    end
end

function recover()
  -- Try to determine where the turtle is on startup, if it can't figure it out: crash.
  -- first, see if there's anything above us, if there isn't it's probably safe to move forward.
  status, data = turtle.inspectUp()
  if(not status) then
    print(""I'm probably not doing anything important, back to work."")
    return
  end
  -- If we saw anything that means we're either a long a wall or in the depot.
  -- See what's in front of us. If we recognize it we can act accordingly.
  status, data = turtle.inspect()
  if(status) then
    -- We found something in front of us, lets see if we recognize it.
    if(not handleActions(data)) then
      error(""There is a block I don't recognize in front of me, I don't know what to do"")
    end
  else
    -- There is no block in front of us, we have to check.
    -- Turn around 4 times, and if we ever see lapis we know we're in the depot.
    for i=1,4 do
      turtle.turnRight()
      status, data = turtle.inspect()
      if(handleActions(data)) then
        -- A recognized block was found and recovery was handled successfully.
        return
      end
    end
    -- We couldn't determine were we are, but we know we're along a wall.
    -- If the farm is built correctly it should be safe to move foward until we find something.
    for i=1,20 do
      forwardErrorNoFuel()
      status, data = turtle.inspect()
      if(handleActions(data)) then
        -- A recognized block was found and recovery was handled successfully.
        return
      end
    end
    -- We still couldn't determine where we are, crash here.
    error(""I don't know where I am and I couldn't figure it out."")
  end
end

-- Turtle Actions, anything that the turtle does.

function harvestIfGrown()
  status, data = turtle.inspectDown()
  if(not status) then
    return false
  end
  if(data.state.age ~= nil and data.state.age >= maxGrowth) then
    harvest()
    sleep(1) -- wait for crops to fall on the ground.
    scoop()
    plant()
  end
end

function action()
  -- General action, happens every move if we don't hit a block we recognize.
  harvestIfGrown()
  forwardErrorNoFuel()
end

function dumpResources()
  for i=1,16 do
    turtle.select(i)
    status = turtle.dropUp()
    if(not status) then
      -- If it didn't fit in storage just spit it on the ground.
      -- This is modded minecraft, hopefully they have a vacuum of some kind.
      turtle.drop()
    end
  end
  turtle.select(1)
end

function refuelIfNecessary()
  fuelLevel = turtle.getFuelLevel()
  didFueling = false
  while(fuelLevel < minFuel) do  
    status = turtle.suckDown(1)
    if(not status) then
      error(""No fuel is available"")
    end
    turtle.refuel()
    fuelLevel = turtle.getFuelLevel()
    didFueling = true
  end
  if (didFueling) then
    print(""Topped up!"")
  end
end

function actionBlack()
  -- Recede into the depot, dump resources, then refuel if necessary.
  parkIntoDepot()
  dumpResources()
  refuelIfNecessary()
end

function actionRed()
  circleLeft()
end

function actionWhite()
  circleRight()
end

function actionGold()
  turnLeft()
end

-- Turtle Movement Abstraction, group distinct movements into functions.

function parkIntoDepot()
  turtle.turnRight()
  forwardErrorNoFuel()
  turtle.turnRight()
  turtle.turnRight()
  parked = true
end

function scoop()
  turtle.suckDown()
end

function harvest ()
  turtle.digDown()
end

function plant ()
  turtle.placeDown()
end

function forwardErrorNoFuel()
  if(not turtle.forward()) then
    if(turtle.getFuelLevel() == 0) then
      error(""Out of fuel, cannot move forward"")
    end
    return false
  end
  return true
end

function turnAround()
  turtle.turnRight()
  turtle.turnRight()
end

function circleLeft()
  turtle.turnLeft()
  turtle.forward()
  turtle.turnLeft()
end

function turnLeft()
  turtle.turnLeft()
end

function circleRight()
  turtle.turnRight()
  turtle.forward()
  turtle.turnRight()
end

function turnRight()
  turtle.turnRight()
end

function goBack(steps)
  if(steps == nil) then
    steps = 1
  end
  turtle.turnRight()
  turtle.turnRight()
  for i=1,steps do
    forwardErrorNoFuel()
  end
  turtle.turnLeft()
  turtle.turnLeft()
end

function goForward(steps)
  if(steps == nil) then
    steps = 1
  end
  for i=1,steps do
    forwardErrorNoFuel()
  end
end

-- Calling main

recover()
main()

"
98U21KnU,IMAGES-SEARCH.py,Najeebsk,Python,Sunday 3rd of March 2024 01:45:23 AM CDT,"import os
from tkinter import Tk, Listbox, Scrollbar, Button, Label
from PIL import Image, ImageTk

def search_images(folder):
    image_files = []
    for root, dirs, files in os.walk(folder):
        for file in files:
            if file.endswith(("".jpg"", "".png"", "".bmp"")):
                image_files.append(os.path.join(root, file))
    return image_files

def show_image():
    selected_index = listbox.curselection()
    if selected_index:
        selected_image_path = listbox.get(selected_index)
        image = Image.open(selected_image_path)
        image.thumbnail((400, 400))  # Resize the image to fit the window
        photo = ImageTk.PhotoImage(image)
        
        # Update the label with the new image
        image_label.config(image=photo)
        image_label.image = photo  # Keep a reference to the image to prevent garbage collection

# Create GUI window
root = Tk()
root.title(""Image Viewer"")

# Create listbox and scrollbar
listbox = Listbox(root, width=50, height=20)
scrollbar = Scrollbar(root, orient=""vertical"", command=listbox.yview)
scrollbar.pack(side=""right"", fill=""y"")
listbox.config(yscrollcommand=scrollbar.set)

# Search for images in all drives and subfolders
drives = [chr(i) for i in range(65, 91) if os.path.exists(chr(i) + "":\\"")]
for drive in drives:
    images = search_images(drive + "":\\"")
    for image in images:
        listbox.insert(""end"", image)

listbox.pack(side=""left"", fill=""both"", expand=True)

# Create button to view selected image
view_button = Button(root, text=""View Image"", command=show_image)
view_button.pack()

# Create label to display image
image_label = Label(root)
image_label.pack()

root.mainloop()
"
CyKDBYiy,VIDEOS-SEARCH-PLAY.py,Najeebsk,Python,Sunday 3rd of March 2024 01:44:14 AM CDT,"import tkinter as tk
from tkinter import ttk
import os
import vlc

class VideoPlayer:
    def __init__(self, root):
        self.root = root
        self.instance = None
        self.player = None

        # Color Palette
        self.bg_color = ""#336699""
        self.button_color = ""#4CAF50""
        self.text_color = ""white""

        self.main_frame = tk.Frame(root, bg=self.bg_color)
        self.main_frame.pack(fill=""both"", expand=True)

        self.title_label = tk.Label(self.main_frame, text=""NAJEEB VIDEO PLAYER"", font=(""Arial"", 24, ""bold""), fg=self.text_color, bg=self.bg_color)
        self.title_label.pack(pady=10)

        self.search_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.search_frame.pack(fill=""x"")

        self.extension_label = tk.Label(self.search_frame, text=""File Extension:"", bg=self.bg_color, fg=self.text_color)
        self.extension_label.pack(side=""left"", padx=5, pady=5)

        self.extension_entry = tk.Entry(self.search_frame)
        self.extension_entry.pack(side=""left"", fill=""x"", expand=True, padx=5, pady=5)

        self.search_button = tk.Button(self.search_frame, text=""Search"", command=self.search_and_save_videos, bg=self.button_color, fg=self.text_color)
        self.search_button.pack(side=""left"", padx=5, pady=5)

        self.list_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.list_frame.pack(side=""left"", fill=""both"", expand=False)

        self.button_frame = tk.Frame(self.main_frame, bg=self.bg_color)
        self.button_frame.pack(side=""bottom"", fill=""x"")

        self.lst = tk.Listbox(self.list_frame, width=30, height=20, bg=self.bg_color, fg=self.text_color)
        self.lst.pack(side=""left"", fill=""both"", expand=True)

        self.scrollbar = tk.Scrollbar(self.list_frame, orient=""vertical"", command=self.lst.yview)
        self.scrollbar.pack(side=""right"", fill=""y"")
        self.lst.config(yscrollcommand=self.scrollbar.set)

        self.play_button = tk.Button(self.button_frame, text=""Play"", command=self.play_video, bg=self.button_color, fg=self.text_color)
        self.play_button.pack(side=""left"", padx=5, pady=5)

        self.stop_button = tk.Button(self.button_frame, text=""Stop"", command=self.stop_video, bg=self.button_color, fg=self.text_color)
        self.stop_button.pack(side=""left"", padx=5, pady=5)

        self.prev_button = tk.Button(self.button_frame, text=""Prev"", command=self.prev_video, bg=self.button_color, fg=self.text_color)
        self.prev_button.pack(side=""left"", padx=5, pady=5)

        self.next_button = tk.Button(self.button_frame, text=""Next"", command=self.next_video, bg=self.button_color, fg=self.text_color)
        self.next_button.pack(side=""left"", padx=5, pady=5)

        self.player_position = tk.Scale(self.button_frame, from_=0, to=100, orient=""horizontal"", command=self.set_position, length=400)
        self.player_position.pack(side=""left"", fill=""x"", padx=5, pady=5)

        self.current_video_label = tk.Label(root, text=""No video selected"", bg=self.bg_color, fg=self.text_color)
        self.current_video_label.pack(pady=5)

        self.player_frame = tk.Frame(self.main_frame)
        self.player_frame.pack(side=""right"", fill=""both"", expand=True)

        self.lst.bind(""<<ListboxSelect>>"", self.show_video)

        self.load_video_list()

    def load_video_list(self):
        try:
            with open('VIDEOS.txt', 'r', encoding='utf-8') as file:
                title = None  # Initialize title variable
                for line in file:
                    line = line.strip()
                    if line.startswith(""Title:""):
                        title = line.split("": "")[1]
                        self.lst.insert(tk.END, title)
                        setattr(self, title, None)
                    elif line and title:  # Check if title is defined
                        setattr(self, title, line)
        except FileNotFoundError:
            print(""VIDEOS.txt not found."")
            self.search_and_save_videos()

    def search_and_save_videos(self):
        video_list = []
        extension = self.extension_entry.get().strip()
        if not extension:
            extension = '.mp4'
        for drive in ['A:', 'B:', 'C:', 'D:', 'E:', 'F:', 'G:', 'H:', 'I:', 'J:', 'K:', 'L:', 'M:', 'N:', 'O:', 'P:', 'Q:', 'R:', 'S:', 'T:', 'U:', 'V:', 'W:', 'X:', 'Y:', 'Z:']:
            if os.path.exists(drive):
                for root, _, files in os.walk(drive):
                    for file in files:
                        if file.lower().endswith(extension.lower()):
                            filepath = os.path.join(root, file)
                            title = os.path.splitext(file)[0]  # Extract title from file name
                            # Correct drive letter format with backslash
                            filepath = filepath.replace(""/"", ""\\"")
                            video_list.append((title, filepath))

        # Append the new video list to the existing VIDEOS.txt file
        with open('VIDEOS.txt', 'a', encoding='utf-8') as file:
            for title, filepath in video_list:
                # Add backslash after the drive letter
                filepath_with_drive = filepath[:2] + ""\\"" + filepath[2:]
                file.write(f""Title: {title}\n{filepath_with_drive}\n\n"")

        print(f""New videos appended to VIDEOS.txt for files with extension {extension}"")
        self.load_video_list()  # Reload the updated list

    def play_video(self):
        if self.player:
            if self.player.get_state() == vlc.State.Ended:
                self.player.stop()
            self.player.play()
            self.current_video_label.config(text=""Video playing"")
        else:
            print(""No video selected."")

    def show_video(self, event):
        n = self.lst.curselection()
        if n:
            title = self.lst.get(n[0])
            filepath = getattr(self, title, None)
            if filepath:
                try:
                    file_extension = os.path.splitext(filepath)[1].lower()
                    if file_extension == "".mp3"":
                        self.display_gif(""Mp3.gif"")
                        self.play_mp3(filepath, title)
                    else:
                        self.play_video_file(filepath, title)
                except Exception as e:
                    print(""Error showing video:"", str(e))
                    self.current_video_label.config(text=""Error showing video"")

    def play_mp3(self, filepath, title):
        self.current_video_label.config(text=""Current audio: "" + title)
        if self.player:
            self.player.stop()
        self.instance = vlc.Instance('--no-xlib')
        media = self.instance.media_new(filepath)
        if self.player is None:
            self.player = self.instance.media_player_new()
            self.player.set_fullscreen(True)
        self.player.set_media(media)
        self.player.play()

    def play_video_file(self, filepath, title):
        self.current_video_label.config(text=""Current video: "" + title)
        if self.player:
            self.player.stop()
        self.instance = vlc.Instance('--no-xlib')
        media = self.instance.media_new(filepath)
        if self.player is None:
            self.player = self.instance.media_player_new()
            self.player.set_fullscreen(True)
        self.player.set_media(media)

        if self.player_frame.winfo_children():
            self.player_frame.winfo_children()[0].destroy()

        self.player_frame.update()
        self.player.set_hwnd(self.player_frame.winfo_id())
        self.play_video()

    def stop_video(self):
        if self.player:
            self.player.stop()
            self.current_video_label.config(text=""Video stopped"")
        else:
            print(""No video selected."")

    def prev_video(self):
        if self.lst.curselection():
            current_index = self.lst.curselection()[0]
            prev_index = current_index - 1 if current_index > 0 else self.lst.size() - 1
            self.lst.selection_clear(0, tk.END)
            self.lst.selection_set(prev_index)
            self.lst.activate(prev_index)
            self.show_video(None)
        else:
            print(""No video selected."")

    def next_video(self):
        if self.lst.curselection():
            current_index = self.lst.curselection()[0]
            next_index = (current_index + 1) % self.lst.size()
            self.lst.selection_clear(0, tk.END)
            self.lst.selection_set(next_index)
            self.lst.activate(next_index)
            self.show_video(None)
        else:
            print(""No video selected."")

    def set_position(self, value):
        if self.player:
            self.player.set_position(float(value) / 100)
        else:
            print(""No video selected."")

    def display_gif(self, gif_path):
        # Load the gif image
        gif_image = tk.PhotoImage(file=gif_path)

        # Create a label to display the gif
        gif_label = tk.Label(self.main_frame, image=gif_image)
        gif_label.image = gif_image  # Keep a reference to prevent garbage collection
        gif_label.pack()

        # You may need to adjust the positioning or size of the label based on your UI layout

root = tk.Tk()
root.geometry(""800x600+300+50"")
root.title(""Najeeb VLC Player"")
root.configure(bg=""#336699"")
video_player = VideoPlayer(root)
root.mainloop()
"
ZejEsDFh,Untitled,Josif_tepe,C++,Sunday 3rd of March 2024 01:02:08 AM CDT,"#include <iostream>
using namespace std;

long long kvadratiNaCifri(long long broj) {
    long long zbir = 0;
    while (broj > 0) {
        long long cifra = broj % 10;
        zbir += cifra * cifra;
        broj /= 10;
    }
    return zbir;
}

int main() {
  long long x,n;
  cin>>x>>n;
  
    long long first_number = x;
  for(long long i=1;i<=n;i++){
    first_number=kvadratiNaCifri(first_number);
  }
  cout<<first_number<<endl;
}
"
WkbLL3gi,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:07:43 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>     
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 1e6 + 5;
const int MOD = 1e9 + 7;


#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif


template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while(b)
    {
        if(b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;
        
        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

vi dp(N);
int add(int a, int b)
{
    a %= MOD;
    b %= MOD;
    return (a + b) % MOD;
}
int mul(int a, int b)
{
    a %= MOD;
    b %= MOD;
    return (a * b) % MOD;
}
void precmp()
{
    dp[1] = 1;
    dp[2] = 2;
    dp[3] = 5;
    for(int i = 4; i < N; i++)
    {
        dp[i] = mul(2, dp[i - 1]);
        dp[i] = add(dp[i], dp[i - 3]);
        // dp[i] = 2 * dp[i - 1] + dp[i - 3];
    }
}

void solve()
{
    int n;
    cin >> n;

    println(dp[n]);
}

signed main()
{
    // init_code();
    fast();
    int t = 1;
    cin >> t;
    precmp();
    while (t--)
    {
        solve();
    }
    return 0;
}
"
5rWQC9TV,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:06:52 AM CDT,"//Author: D. Nisritha Reddy
#include<bits/stdc++.h>
#define int long long 
#define pb push_back
#define ndl ""\n""
#define yes cout<<""YES\n""
#define no cout<<""NO\n""
#define mod (int)(1e9 + 7)
#define F first
#define S second
#define vi vector<int>
#define vc vector<char>
#define vpi vector<pair<int,int>>
#define pi pair<int,int>
#define mi map<int, int>
#define miv map<int,vector<int>>
using namespace std;

template<class T>
void inp(vector<T>&a){ for(auto &x : a)cin>>x; }

template<class T>
void print(vector<T>&a){
    for(auto &x: a)cout<<x<<"" "";
    cout<<ndl;
}

template<class T>
void print(T x){cout<<x<<"" "";}

template<class T>
void println(T x){ cout<<x<<""\n"";}

template<class T>
T maxEle(vector<T>&a){
    T maxi = LLONG_MIN;
    for(auto x : a)
        if(x>maxi)maxi = x;
    return maxi;
}

template<class T>
T minEle(vector<T>&a){
    T mini = LLONG_MAX;
    for(auto x: a)
        if(x<mini) mini = x;
    return mini;
}

template<class T>
void sortAll(vector<T>&a){ sort(a.begin(), a.end());}

template<class T>
T sumAll(vector<T>&a){
    T sum = 0;
    for(auto x : a) sum +=x;
    return sum;
}

template<class T>
void revAll(vector<T>&a){reverse(a.begin(),a.end());}



///////////////////////////////////////////////////////////////////////////////////////////////////


int n, k; 
vi a; 

bool isPos(int mid){
    
    int sum = 0, grps = 1;
    
    for(int i = 0; i<n; i++){
        
        if(sum + a[i] > mid){
            sum = 0; grps++;
        }
        sum += a[i];
    }
    
    return grps <= k; 
    
}

void solve(){
    
    cin>>n>>k;
    
    a.resize(n); inp(a);
    
    int l = maxEle(a), h = sumAll(a);
    int ans = 0;
    
    while(l<=h){
        
        int mid = ( l + h ) >> 1;
        
        if(isPos(mid)){
            ans = mid; 
            h = mid - 1;
        }
        else{
            
            l = mid + 1;
        }
        
        
    }
    
    cout<<ans<<""\n"";
    
}



///////////////////////////////////////////////////////////////////////////////////////////////////



signed main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1; //cin>>t;
    while(t--){
        solve();
    }
}"
Nax8q24S,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:06:16 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>     
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 2e5;
const int MOD = 1e9 + 7;


#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif


template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while(b)
    {
        if(b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;
        
        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

int lcm(int a, int b)
{
    return (a * b) / (__gcd(a, b));
}

int fun(int n, int a, int b, int c)
{
    int ans = (n / a) + (n / b) + (n / c);
    ans -= (n / lcm(a , b));
    ans -= (n / lcm(b , c));
    ans -= (n / lcm(c , a));
    ans += (n / lcm(a , lcm(b , c)));

    return ans;
}

void solve()
{
    int n, a, b, c;
    cin >> n >> a >> b >> c;

    int l = 1, h = LLONG_MAX;
    int ans = -1;
    while(l <= h)
    {
        int m = (l + h) >> 1;
        int x = fun(m, a, b, c);
        if(x >= n)
        {
            ans = m;
            h = m - 1;
        }
        else 
        {
            l = m + 1;
        }
    }
    println(ans);
}

signed main()
{
    // init_code();
    fast();
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
"
9dhvyMFu,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:05:03 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>     
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 2e5;
const int MOD = 1e9 + 7;


#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif


template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while(b)
    {
        if(b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;
        
        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

void solve()
{
    string s;
    cin >> s;

    int n = s.length();
    int ans = 0;
    f(i, 0, n - 1)
    {
        if(s[i] != s[i + 1])
        {
            ans += min(i + 1, n - i - 1);
        }
    }

    println(ans);
}

signed main()
{
    // init_code();
    fast();
    int t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
"
9vjpBFg8,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:04:18 AM CDT,"//Author: D. Nisritha Reddy
#include<bits/stdc++.h>
#define int long long 
#define pb push_back
#define ndl ""\n""
#define yes cout<<""YES\n""
#define no cout<<""NO\n""
#define mod (int)(1e9 + 7)
#define F first
#define S second
#define vi vector<int>
#define vc vector<char>
#define vpi vector<pair<int,int>>
#define pi pair<int,int>
#define mi map<int, int>
#define miv map<int,vector<int>>
using namespace std;

template<class T>
void inp(vector<T>&a){ for(auto &x : a)cin>>x; }

template<class T>
void print(vector<T>&a){
    for(auto &x: a)cout<<x<<"" "";
    cout<<ndl;
}

template<class T>
void print(T x){cout<<x<<"" "";}

template<class T>
void println(T x){ cout<<x<<""\n"";}

template<class T>
T maxEle(vector<T>&a){
    T maxi = LLONG_MIN;
    for(auto x : a)
        if(x>maxi)maxi = x;
    return maxi;
}

template<class T>
T minEle(vector<T>&a){
    T mini = LLONG_MAX;
    for(auto x: a)
        if(x<mini) mini = x;
    return mini;
}

template<class T>
void sortAll(vector<T>&a){ sort(a.begin(), a.end());}

template<class T>
T sumAll(vector<T>&a){
    T sum = 0;
    for(auto x : a) sum +=x;
    return sum;
}

template<class T>
void revAll(vector<T>&a){reverse(a.begin(),a.end());}



///////////////////////////////////////////////////////////////////////////////////////////////////




void solve(){
    
    vi a(3); inp(a);
    
    sortAll(a);
    
    if(a[0] + a[1] < a[2]){
        
        a[2] = a[2] - (a[0] + a[1]);
        
        cout<<(a[0] + a[1]) + a[2]<<""\n"";
    
    }
    
    else{
        
        cout<<(a[0] + a[1] + a[2] + 1)/2<<""\n"";
    }
    
    
}



///////////////////////////////////////////////////////////////////////////////////////////////////



signed main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1; //cin>>t;
    while(t--){
        solve();
    }
}"
4ttjzrVS,Untitled,Sreekar_0125,C++,Sunday 3rd of March 2024 12:03:27 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>     
using namespace std;
using namespace __gnu_pbds;
template <class T>
using pbds =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define endl '\n'

const int N = 2e5;
const int MOD = 1e9 + 7;


#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif


template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}
template <class T>
istream &operator>>(istream &is, vector<T> &a)
{
    for (auto &x : a)
        is >> x;
    return is;
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a)
{
    for (const auto &x : a)
        os << x << ' ';
    return os;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b)
{
    int ans = 1;
    a %= MOD;
    while(b)
    {
        if(b & 1)
            ans = ((ans % MOD) * (a % MOD)) % MOD;
        
        a = ((a % MOD) * (a % MOD)) % MOD;
        b >>= 1;
    }
    return ans;
}

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

bool cmp(pii &p1, pii &p2)
{
    if(p1.F == p2.F)
    {
        return p1.S > p2.S;
    }
    return p1.F > p2.F;
}

void solve()
{
    int n, k;
    cin >> n >> k;

    vpi points;
    f(i, 0, n)
    {
        int a, b;
        cin >> a >> b;
        points.pb({b, a});
    }
    sort(all(points), cmp);
    int ans = 0;
    int i = 0;
    debug(points);
    while(k > 0)
    {
        if(points[i].S <= k)
        {
            ans += points[i].F * points[i].S;
            k -= points[i].S; 
            i++;
        }
        else 
        {
            ans += k * points[i].F;
            break;
        }
    }

    println(ans);
}

signed main()
{
    // init_code();
    fast();
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
    }
    return 0;
}
"
s9rrfszQ,ExileClient_object_player_event_onHandleDamage,Irkutsk86,C,Saturday 2nd of March 2024 11:27:02 PM CDT,"/**
 * Exile Mod
 * www.exilemod.com
 * © 2015 Exile Mod Team
 *
 * This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/.
 */
 
private[""_unit"",""_selectionName"",""_amountOfDamage"",""_sourceOfDamage"",""_typeOfProjectile""];
_unit             = _this select 0;
_selectionName    = _this select 1;
_amountOfDamage   = _this select 2;
_sourceOfDamage   = _this select 3;
_typeOfProjectile = _this select 4;


	if (isPlayer _sourceOfDamage && !(_sourceOfDamage isEqualTo player)) exitWith
	{
		_amountOfDamage = damage _unit;
		_amountOfDamage
	};"
5yA8fdSS,588. Design In-Memory File System,bennyfromtheblock,Python,Saturday 2nd of March 2024 11:05:20 PM CDT,"# Annoying ass questions. Just use a Trie
# TC: O(N) where N is number of nodes in trie, that's the worst case scenario
# SC: O(N)

class TrieNode:
    def __init__(self):
        self.content = """"
        self.children = defaultdict(TrieNode)
        self.isfile = False

class FileSystem:

    def __init__(self):
        self.head = TrieNode()

    def ls(self, path: str) -> List[str]:
        path_list = [p for p in path.split('/') if p]
        node = self.head
        for p in path_list:
            if p not in node.children:
                return f'{path} does not exist!'
            node = node.children.get(p)

        results = [p] if node.isfile else sorted([k for k, v in node.children.items()])
        return results


    def mkdir(self, path: str) -> None:
        path_list = [p for p in path.split('/') if p]
        node = self.head
        for p in path_list:
            node = node.children[p]


    def addContentToFile(self, filePath: str, content: str) -> None:
        path_list = [p for p in filePath.split('/') if p]
        node = self.head
        for p in path_list:
            node = node.children[p]

        node.content += content
        node.isfile = True


    def readContentFromFile(self, filePath: str) -> str:
        path_list = [p for p in filePath.split('/') if p]
        node = self.head
        for p in path_list:
            if p not in node.children:
                return f'File {filePath} not found!'
            node = node.children[p]

        if not node.isfile:
            raise Error(f'{filePath} is not a file and cannot be read')

        return node.content"
BkAfX3De,Pet Catchers,IWannaDieAsWell,Lua,Saturday 2nd of March 2024 10:48:53 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/IdiotHub/Scripts/main/Pet%20Catcher/Pet%20Catchers%20Main""))()"
ifCGYKWy,Untitled,reallistic,Python,Saturday 2nd of March 2024 10:25:13 PM CDT,"import sqlite3
import time
from uuid import uuid4


def dbConn() -> sqlite3.Connection:
    # Connect to the database
    conn = sqlite3.connect('fileBlockData_mike_test.db')
    return conn


def recreate_tables(conn, truncate_prod_hash=False, truncate_prod_hash_auto=False):
    cursor = conn.cursor()
    print(""Creating prodHash table"")
    cursor.execute(""""""
    CREATE TABLE IF NOT EXISTS prodHash (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        fullData TEXT
    );
    """""")
    if truncate_prod_hash:
        print(""truncating prodhash table"")
        cursor.execute(""""""
        DELETE FROM prodHash;
        """""")
        cursor.execute(""""""
        DELETE FROM SQLITE_SEQUENCE WHERE name='prodHash';
        """""")

    print(""creating prodHashAuto table"")
    cursor.execute(""""""
    CREATE TABLE IF NOT EXISTS prodHashAuto (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        md5hash TEXT,
        fileInfo TEXT,
        offsetLocation TEXT,
        decay INTEGER
    );
    """""")
    if truncate_prod_hash_auto:
        print(""truncating prodhashAuto table"")
        cursor.execute(""""""
        DELETE FROM prodHashAuto;
        """""")
        cursor.execute(""""""
        DELETE FROM SQLITE_SEQUENCE WHERE name='prodHashAuto';
        """""")
    conn.commit()


def record_sqlite_latency(title, frequency=1_000_000):
    time_func = time.perf_counter_ns
    called = 0
    start_time = time_func()
    total_time = 0
    last_check = 0

    def start():
        nonlocal start_time
        start_time = time_func()

    def stop(final=False, count=1):
        nonlocal called, start_time, total_time, last_check
        if start_time is not None:
            called += count
            total_time += (time_func() - start_time)
            start_time = None
            if called - last_check >= frequency:
                last_check = called
                avg = (total_time / called)
                units = ""nanosecs""
                if avg > 10_000:
                    units = ""ms""
                    avg = avg / 1_000_000
                print(f""sqlite {title} taking {avg:.3f} {units} on avg. ({called:,} total {title})"")

        if final:
            total_time_secs = total_time / 1_000_000_000
            avg = (total_time / called)
            print(
                f""sqlite {title} took {total_time_secs:.3f} secs total and {avg:.3f} nanosecs on avg. ({title} {called:,} total)"")
            return

    return start, stop


def create_prod_hash(conn: sqlite3.Connection):
    cur: sqlite3.Cursor = conn.cursor()
    operation_start, operation_end = record_sqlite_latency(""operation"")
    count = 513_057_999
    print(f""Starting process to insert {count:,} rows into prodHash"")
    for i in range(count):
        operation_start()
        md5 = uuid4().hex
        cur.execute(""INSERT INTO prodHash (fullData) VALUES(?)"", (f""{md5} filename_{i}.txt 0 0"",))
        operation_end()
    conn.commit()
    operation_end(final=True)


def scan_all_rows(conn: sqlite3.Connection):
    og_cur: sqlite3.Cursor = conn.cursor()
    # get functions for logging metrics/progress
    operation_start, operation_end = record_sqlite_latency(""processchunk"")

    print(""starting to iterate everything in prodHash"")
    cur = og_cur.execute(""select * from prodHash"")
    chunk_size = 2000
    while True:
        # log metrics/progress
        operation_start()
        rows = cur.fetchmany(chunk_size)
        if not rows:
            break
        converted = []
        for data in rows:
            parts = data[1].split()
            md5hash = parts[0]
            fileInfo = parts[1]
            offsetLocation = parts[2] + "" "" + parts[3]
            decay = 0
            converted.append((md5hash, fileInfo, offsetLocation, decay))
        if converted:
            conn.executemany(""INSERT INTO prodHashAuto (md5hash, fileInfo, offsetLocation, decay) VALUES(?, ?, ?, ?)"",
                             converted)
        # log metrics/progress
        operation_end(count=len(rows))
    conn.commit()
    conn.close()

    # log final metrics/progress
    operation_end(final=True)


if __name__ == ""__main__"":
    # Call the functions
    conn = dbConn()
    recreate_tables(conn, truncate_prod_hash_auto=True)
    # create_prod_hash(conn)
    scan_all_rows(conn)
"
tjdAmazg,Main,nmh07000,Java,Saturday 2nd of March 2024 10:16:32 PM CDT,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.next();
        int[] arr = new int[4];
        arr[0] = s.indexOf('N');
        arr[1] = s.indexOf('S');  
        arr[2] = s.indexOf('E');
        arr[3] = s.indexOf('W');
        
        if((arr[0] >= 0 && arr[1] >= 0 && arr[2] >= 0 && arr[3] >= 0) ||
            (arr[0] >= 0 && arr[1] >= 0 && arr[2] == -1 && arr[3] == -1) ||
            (arr[0] == -1 && arr[1] == -1 && arr[2] >= 0 && arr[3] >= 0)) {
            System.out.println(""Yes"");
        }
        else {
            System.out.println(""No"");
        }
    }
}"
Fq7VRcMa,666. Path Sum IV,bennyfromtheblock,Python,Saturday 2nd of March 2024 10:04:08 PM CDT,"# given a node position, its parent's position is (pos + 1) // 2.
#   1 2 3 4
# 1 a
# 2 b c
# 3 d e f g
#
# for example: node f has pos 3, its parent is in (3 + 1) // 2 = 2
# So we can iterate thru the list, keeping track of current path sums in a dictionary
# The result should be the path sums of the leaf nodes, so whenever we find a node's child, we mark its path sum as negative to indicate that it is not a leaf anymore. 
# at the end, just sum the non-negative path sums
# TC: O(N)
# SC: O(N)

class Solution:
    def pathSum(self, nums: List[int]) -> int:
        pathsums = {}

        for n in nums:
            level = n // 100
            pos = (n % 100) // 10
            val = n % 10

            if level == 1:
                pathsums[1, 1] = val
                continue

            parent_pos = (pos + 1) // 2
            if (level-1, parent_pos) not in pathsums:
                raise Error('This is not supposed to happen')

            # turn it negative to mark as non-leaf node
            if pathsums[level-1, parent_pos] > 0:
                pathsums[level-1, parent_pos] *= -1

            pathsums[level, pos] = abs(pathsums[level-1, parent_pos]) + val

        result = sum(v for k, v in pathsums.items() if v > 0)
        return result"
gYsN1CWN,Untitled,wym1111,C++,Saturday 2nd of March 2024 09:54:02 PM CDT,"#include <bits/stdc++.h>
using namespace std;

const int N = 110;

int n, m;
int a[N][N];

/*
  A B C
  D o E
  F G H
  o (x, y)
  F (x + 1, y - 1)
 */

int dx[8] = {1, 1, 1, -1, -1, -1, 0, 0}; // F G H A B C D E
int dy[8] = {-1, 0, 1, -1, 0, 1, -1, 1};

signed main() {
	cin >> n >> m;
	for (int i = 1; i <= n; i ++) {
		for (int j = 1; j <= m; j ++) {
			cin >> a[i][j];
		}
	}
	int ans = 0;
	for (int x = 1; x <= n; x ++) {
		for (int y = 1; y <= m; y ++) {
			bool flag = 1;
			// (x, y)
			for (int i = 0; i < 8; i ++) {
				int nx = dx[i] + x;
				int ny = dy[i] + y;
				// (nx, ny)
				if (nx < 1 || nx > n || ny < 1 || ny > m) continue;
				if (a[x][y] < a[nx][ny]) {
					flag = 0;
				}
			}
			if (flag) ans ++;
		}
	}
	cout << ans << endl;
	return 0;
}

/*
    0   0   0   0   0   0
  
	0  150 190 170 180  0
  
	0  145 150 165 175  0
  
	0  140 178 149 190
  
 */"
dpMXhndx,WhatsApp: +86 19911539281 Buy fake Bowling Green State University degree.,jf123123,Bash,Saturday 2nd of March 2024 09:38:17 PM CDT,"We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. 

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

Buy fake Bowling Green State University degree, Get a fake Bowling Green State University diploma, How to buy fake Bowling Green State University degree certificate? Supply high quality BGSU degree, Fake BGSU diploma for sale. buy fake diploma, fake degree. How to order fake diploma?
"
8SGRschH,Mad,Unknown_No_1,PHP,Saturday 2nd of March 2024 09:25:13 PM CDT,FreeHacksJoinTelegramMadGamerTG
hx9Ztc0V,1293. Shortest Path in a Grid with Obstacles Elimination,bennyfromtheblock,Python,Saturday 2nd of March 2024 09:06:15 PM CDT,"# Approach 1: BFS with optimization: Don't visit a cell if we've already been there with more bombs remaining
# TC: O(M*N*k)
# SC: O(M*N)

from collections import deque, defaultdict

DIRS = [
    (1, 0), (-1, 0), (0, 1), (0, -1)
]

class Solution:
    def shortestPath(self, grid: List[List[int]], k: int) -> int:
        M, N = len(grid), len(grid[0])
        queue = deque([(0, 0, k, 0)])
        visited = defaultdict(lambda: -1) # coordinates : most bombs remaining

        while queue:
            x , y, bombs, moves = queue.popleft()
            if x == M-1 and y == N-1:
                return moves
            for new_x, new_y in self.get_valid_neighbours(x, y, M, N):
                if grid[new_x][new_y] == 1 and bombs > 0 and bombs - 1 > visited[(new_x, new_y)]:
                    visited[(new_x, new_y)] = bombs - 1
                    queue.append((new_x, new_y, bombs-1, moves+1))
                elif grid[new_x][new_y] == 0 and bombs > visited[(new_x, new_y)]:
                    visited[(new_x, new_y)] = bombs
                    queue.append((new_x, new_y, bombs, moves+1))

        return -1


    def get_valid_neighbours(self, x, y, M, N):
        for dx, dy in DIRS:
            new_x, new_y = x + dx, y + dy
            if new_x >= 0 and new_x < M and new_y >= 0 and new_y < N:
                yield new_x, new_y
                
                
"
FU2izub3,News March2 24,Newscaster_Ned,Email,Saturday 2nd of March 2024 09:06:11 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

I‎ ‎h‎a‎v‎e‎ ‎s‎e‎x‎ ‎w‎i‎t‎h‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎.‎ ‎S‎o‎ ‎w‎h‎a‎t‎?‎ ‎I‎ ‎s‎t‎i‎l‎l‎ ‎c‎a‎n‎ ‎b‎e‎ ‎a‎ ‎g‎o‎o‎d‎ ‎p‎e‎r‎s‎o‎n‎.‎ ‎Y‎o‎u‎ ‎g‎u‎y‎s‎ ‎k‎n‎o‎w‎ ‎m‎e‎.‎ ‎I‎'‎m‎ ‎a‎ ‎g‎o‎o‎d‎ ‎p‎e‎r‎s‎o‎n‎.‎

S‎a‎t‎u‎r‎d‎a‎y‎ ‎T‎r‎i‎f‎e‎c‎t‎a‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎

A‎f‎t‎e‎r‎ ‎b‎i‎g‎ ‎W‎i‎n‎s‎ ‎i‎n‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎,‎ ‎M‎i‎s‎s‎o‎u‎r‎i‎ ‎D‎o‎n‎a‎l‎d‎ ‎R‎o‎m‎p‎s‎ ‎i‎n‎ ‎I‎d‎a‎h‎o‎ ‎C‎a‎u‎c‎u‎s‎

‘‎T‎h‎i‎s‎ ‎I‎s‎ ‎Y‎o‎u‎r‎ ‎C‎o‎u‎n‎t‎r‎y‎,‎ ‎a‎n‎d‎ ‎I‎t‎’‎s‎ ‎A‎l‎s‎o‎ ‎T‎r‎u‎m‎p‎ ‎C‎o‎u‎n‎t‎r‎y‎’‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎a‎n‎d‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎g‎e‎s‎t‎u‎r‎e‎s‎ ‎t‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎r‎s‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎d‎o‎m‎i‎n‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎I‎d‎a‎h‎o‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎C‎a‎u‎c‎u‎s‎e‎s‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎s‎e‎c‎u‎r‎i‎n‎g‎ ‎a‎l‎l‎ ‎3‎2‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎ ‎d‎e‎l‎e‎g‎a‎t‎e‎s‎ ‎i‎n‎ ‎h‎i‎s‎ ‎m‎a‎r‎c‎h‎ ‎t‎o‎ ‎t‎h‎e‎ ‎n‎o‎m‎i‎n‎a‎t‎i‎o‎n‎.‎

N‎Y‎T‎’‎s‎ ‎K‎r‎i‎s‎t‎o‎f‎:‎ ‎F‎o‎o‎d‎ ‎A‎i‎d‎ ‎D‎r‎o‎p‎p‎e‎d‎ ‎i‎n‎t‎o‎ ‎G‎a‎z‎a‎ ‎I‎s‎ ‎G‎o‎i‎n‎g‎ ‎t‎o‎ ‎B‎e‎ ‎S‎t‎o‎l‎e‎n‎ ‎b‎y‎ ‎H‎a‎m‎a‎s‎
N‎Y‎T‎'‎s‎ ‎K‎r‎i‎s‎t‎o‎f‎:‎ ‎F‎o‎o‎d‎ ‎A‎i‎d‎ ‎D‎r‎o‎p‎p‎e‎d‎ ‎i‎n‎t‎o‎ ‎G‎a‎z‎a‎ ‎I‎s‎ ‎G‎o‎i‎n‎g‎ ‎t‎o‎ ‎B‎e‎ ‎S‎t‎o‎l‎e‎n‎ ‎b‎y‎ ‎H‎a‎m‎a‎s‎
2‎1‎8‎
G‎e‎r‎m‎a‎n‎y‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎H‎a‎v‎e‎ ‎I‎n‎a‎d‎v‎e‎r‎t‎e‎n‎t‎l‎y‎ ‎R‎e‎v‎e‎a‎l‎e‎d‎ ‎t‎h‎e‎ ‎U‎K‎ ‎a‎n‎d‎ ‎F‎r‎a‎n‎c‎e‎ ‎h‎a‎v‎e‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
G‎e‎r‎m‎a‎n‎y‎ ‎I‎n‎a‎d‎v‎e‎r‎t‎e‎n‎t‎l‎y‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎t‎h‎e‎ ‎U‎K‎ ‎h‎a‎s‎ ‎S‎o‎l‎d‎i‎e‎r‎s‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎
3‎,‎5‎2‎7‎
T‎u‎l‎s‎i‎ ‎G‎a‎b‎b‎a‎r‎d‎ ‎‘‎O‎p‎e‎n‎’‎ ‎t‎o‎ ‎V‎P‎ ‎S‎l‎o‎t‎
G‎a‎b‎b‎a‎r‎d‎ ‎'‎O‎p‎e‎n‎'‎ ‎t‎o‎ ‎V‎P‎ ‎S‎l‎o‎t‎
1‎,‎4‎7‎2‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎S‎p‎e‎a‎k‎s‎ ‎i‎n‎ ‎R‎i‎c‎h‎m‎o‎n‎d‎,‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎S‎p‎e‎a‎k‎s‎ ‎i‎n‎ ‎R‎i‎c‎h‎m‎o‎n‎d‎,‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎
1‎8‎4‎
M‎a‎i‎n‎e‎ ‎R‎e‎s‎i‎d‎e‎n‎t‎s‎ ‎F‎u‎r‎i‎o‎u‎s‎ ‎o‎v‎e‎r‎ ‎$‎1‎3‎M‎ ‎T‎a‎x‎ ‎B‎i‎l‎l‎ ‎f‎o‎r‎ ‎‘‎T‎a‎j‎ ‎M‎a‎h‎a‎l‎’‎ ‎W‎h‎e‎r‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎G‎e‎t‎ ‎T‎w‎o‎ ‎Y‎e‎a‎r‎s‎
M‎a‎i‎n‎e‎ ‎R‎e‎s‎i‎d‎e‎n‎t‎s‎ ‎F‎u‎r‎i‎o‎u‎s‎ ‎o‎v‎e‎r‎ ‎$‎1‎3‎M‎ ‎T‎a‎x‎ ‎B‎i‎l‎l‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎F‎r‎e‎e‎ ‎R‎e‎n‎t‎
7‎1‎6‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎M‎e‎e‎t‎ ‎A‎d‎a‎m‎ ‎S‎c‎h‎i‎f‎f‎,‎ ‎W‎h‎o‎ ‎L‎o‎o‎k‎s‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎D‎e‎a‎d‎l‎y‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎C‎r‎i‎s‎i‎s‎ ‎i‎n‎ ‎H‎i‎s‎ ‎B‎a‎c‎k‎y‎a‎r‎d‎
‘‎B‎l‎o‎o‎d‎ ‎M‎o‎n‎e‎y‎’‎:‎ ‎S‎c‎h‎i‎f‎f‎ ‎L‎o‎o‎k‎s‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎D‎e‎a‎d‎l‎y‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎C‎r‎i‎s‎i‎s‎
4‎,‎0‎4‎3‎
1‎2‎ ‎Y‎e‎a‎r‎s‎:‎ ‎T‎h‎e‎ ‎L‎e‎g‎a‎c‎y‎ ‎o‎f‎ ‎A‎n‎d‎r‎e‎w‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎s‎
1‎2‎ ‎Y‎e‎a‎r‎s‎:‎ ‎T‎h‎e‎ ‎L‎e‎g‎a‎c‎y‎ ‎o‎f‎ ‎A‎n‎d‎r‎e‎w‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎s‎
4‎,‎3‎5‎3‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎P‎e‎t‎e‎r‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎:‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎a‎ ‎‘‎C‎h‎i‎n‎e‎s‎e‎ ‎O‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎M‎u‎c‎h‎ ‎M‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎I‎t‎ ‎I‎s‎ ‎a‎ ‎M‎e‎x‎i‎c‎a‎n‎ ‎D‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎P‎e‎t‎e‎r‎ ‎S‎c‎h‎w‎e‎i‎z‎e‎r‎:‎ ‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎a‎ ‎'‎C‎h‎i‎n‎e‎s‎e‎ ‎O‎p‎e‎r‎a‎t‎i‎o‎n‎'‎
1‎,‎5‎6‎3‎
‘‎A‎m‎e‎r‎i‎c‎a‎ ‎I‎s‎ ‎B‎u‎i‎l‎t‎ ‎o‎n‎ ‎S‎t‎o‎l‎e‎n‎ ‎L‎a‎n‎d‎’‎:‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎P‎o‎s‎t‎ ‎B‎l‎a‎m‎e‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎s‎ ‎f‎o‎r‎ ‎C‎r‎i‎m‎e‎ ‎S‎u‎r‎g‎e‎
W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎P‎o‎s‎t‎ ‎B‎l‎a‎m‎e‎s‎ ‎C‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎s‎ ‎f‎o‎r‎ ‎C‎r‎i‎m‎e‎ ‎S‎u‎r‎g‎e‎ ‎'‎M‎o‎r‎a‎l‎ ‎P‎a‎n‎i‎c‎'‎
2‎5‎8‎
K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎C‎a‎s‎h‎-‎S‎t‎r‎a‎p‎p‎e‎d‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎S‎u‎f‎f‎e‎r‎i‎n‎g‎ ‎U‎n‎d‎e‎r‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎E‎a‎t‎ ‎‘‎C‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎D‎i‎n‎
K‎e‎l‎l‎o‎g‎g‎’‎s‎ ‎C‎E‎O‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎C‎a‎s‎h‎-‎S‎t‎r‎a‎p‎p‎e‎d‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎E‎a‎t‎ ‎'‎C‎e‎r‎e‎a‎l‎ ‎f‎o‎r‎ ‎D‎i‎n‎n‎e‎r‎'‎

G‎u‎h‎-‎R‎i‎l‎l‎a‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎a‎t‎ ‎G‎e‎o‎r‎g‎i‎a‎ ‎D‎o‎m‎e‎.‎

L‎e‎t‎'‎s‎ ‎h‎o‎p‎e‎ ‎h‎e‎ ‎g‎e‎t‎s‎ ‎s‎h‎o‎t‎ ‎i‎n‎ ‎h‎i‎s‎ ‎d‎o‎m‎e‎.‎


O‎p‎a‎-‎L‎o‎c‎k‎a‎ ‎M‎u‎n‎k‎a‎ ‎B‎e‎l‎u‎n‎k‎a‎ ‎B‎u‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎G‎r‎o‎i‎d‎ ‎R‎a‎g‎e‎ ‎I‎n‎c‎i‎d‎e‎n‎t‎ ‎W‎h‎e‎r‎e‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎w‎a‎s‎ ‎S‎h‎o‎t‎.‎


1‎ ‎J‎i‎g‎ ‎a‎n‎d‎ ‎3‎ ‎T‎e‎e‎n‎a‎p‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎T‎u‎l‎s‎a‎ ‎H‎o‎m‎e‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎e‎r‎.‎


I‎o‎w‎a‎:‎ ‎S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎G‎e‎t‎s‎ ‎5‎0‎ ‎Y‎e‎a‎r‎s‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎H‎i‎s‎ ‎S‎m‎o‎k‎e‎ ‎J‎u‎m‎p‎e‎r‎ ‎G‎f‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎C‎o‎r‎k‎s‎c‎r‎e‎w‎.‎


H‎o‎u‎s‎t‎o‎n‎:‎ ‎H‎o‎m‎o‎ ‎(‎E‎r‎e‎c‎t‎u‎s‎)‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎A‎s‎s‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎5‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎A‎f‎t‎e‎r‎ ‎A‎s‎k‎i‎n‎g‎ ‎H‎i‎m‎ ‎t‎o‎ ‎M‎o‎v‎e‎ ‎F‎u‎r‎n‎i‎t‎u‎r‎e‎.‎


S‎t‎a‎n‎f‎o‎r‎d‎ ‎P‎o‎l‎i‎c‎e‎ ‎A‎r‎r‎e‎s‎t‎ ‎M‎o‎n‎k‎e‎y‎ ‎W‎h‎o‎ ‎R‎a‎p‎e‎d‎ ‎1‎2‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎


N‎e‎g‎r‎o‎ ‎w‎i‎t‎h‎ ‎G‎u‎i‎d‎o‎ ‎L‎i‎p‎s‎ ‎H‎e‎l‎d‎ ‎B‎a‎c‎k‎ ‎b‎y‎ ‎G‎o‎o‎d‎ ‎S‎a‎m‎a‎r‎i‎t‎a‎n‎ ‎A‎f‎t‎e‎r‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎R‎a‎p‎e‎ ‎W‎o‎m‎a‎n‎.‎


S‎a‎m‎b‎o‎ ‎T‎u‎r‎n‎s‎ ‎H‎i‎m‎s‎e‎l‎f‎ ‎i‎n‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎A‎c‎c‎i‎d‎e‎n‎t‎a‎l‎l‎y‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎f‎r‎o‎m‎ ‎W‎i‎l‎m‎i‎n‎g‎t‎o‎n‎ ‎C‎o‎u‎r‎t‎h‎o‎u‎s‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎ ‎M‎a‎y‎b‎e‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎w‎o‎n‎'‎t‎ ‎c‎h‎e‎e‎r‎ ‎y‎o‎u‎ ‎u‎p‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎w‎i‎l‎l‎ ‎c‎h‎e‎e‎r‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎u‎p‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎0‎°‎
3‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎ ‎|‎ ‎D‎a‎y‎
8‎0‎°‎
3‎%‎
S‎S‎W‎
1‎0‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎ ‎e‎a‎r‎l‎y‎.‎ ‎S‎u‎n‎s‎h‎i‎n‎e‎ ‎a‎n‎d‎ ‎c‎l‎o‎u‎d‎s‎ ‎m‎i‎x‎e‎d‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎8‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
7‎0‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
7‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎4‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎3‎0‎ ‎p‎m‎
S‎a‎t‎ ‎0‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎0‎°‎
2‎4‎%‎
S‎
1‎0‎
m‎p‎h‎
M‎a‎i‎n‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎6‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎1‎4‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎0‎:‎3‎9‎ ‎a‎m‎
S‎u‎n‎ ‎0‎3‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎0‎°‎
/‎6‎5‎°‎
2‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎3‎°‎
2‎4‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎5‎9‎°‎
1‎3‎%‎
N‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎6‎3‎°‎
1‎2‎%‎
E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎6‎1‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎4‎9‎°‎
5‎8‎%‎
N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎5‎°‎
/‎4‎3‎°‎
1‎2‎%‎
N‎ ‎1‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎8‎°‎
/‎4‎4‎°‎
5‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎5‎0‎°‎
1‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎2‎
S‎h‎o‎w‎e‎r‎s‎
7‎3‎°‎
/‎5‎7‎°‎
4‎1‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎6‎0‎°‎
5‎8‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎8‎°‎
/‎5‎9‎°‎
4‎2‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎
S‎h‎o‎w‎e‎r‎s‎
7‎5‎°‎
/‎5‎3‎°‎
5‎5‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎2‎°‎
2‎4‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎D‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎ ‎d‎o‎n‎'‎t‎!‎ ‎T‎h‎i‎s‎ ‎w‎i‎l‎l‎ ‎h‎u‎r‎t‎ ‎s‎o‎m‎e‎o‎n‎e‎!‎ ‎👴🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎I‎U‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎'‎s‎ ‎D‎a‎y‎ ‎M‎a‎s‎s‎a‎c‎r‎e‎
T‎h‎e‎ ‎N‎o‎r‎t‎h‎e‎r‎n‎ ‎I‎l‎l‎i‎n‎o‎i‎s‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎'‎s‎ ‎D‎a‎y‎ ‎M‎a‎s‎s‎a‎c‎r‎e‎ ‎s‎e‎e‎m‎e‎d‎ ‎t‎o‎ ‎c‎o‎m‎e‎ ‎f‎r‎o‎m‎ ‎a‎ ‎p‎a‎r‎a‎l‎l‎e‎l‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎.‎ ‎S‎t‎e‎v‎e‎n‎ ‎P‎h‎i‎l‎l‎i‎p‎ ‎K‎a‎z‎m‎i‎e‎r‎c‎z‎a‎k‎ ‎e‎n‎t‎e‎r‎e‎d‎ ‎a‎ ‎s‎i‎d‎e‎ ‎d‎o‎o‎r‎ ‎a‎t‎ ‎a‎p‎p‎r‎o‎x‎i‎m‎a‎t‎e‎l‎y‎ ‎3‎:‎0‎0‎ ‎p‎m‎ ‎C‎S‎T‎ ‎n‎e‎a‎r‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎a‎n‎ ‎i‎n‎t‎r‎o‎d‎u‎c‎t‎o‎r‎y‎ ‎o‎c‎e‎a‎n‎o‎g‎r‎a‎p‎h‎y‎ ‎c‎l‎a‎s‎s‎ ‎i‎n‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎l‎e‎c‎t‎u‎r‎e‎ ‎h‎a‎l‎l‎ ‎w‎i‎t‎h‎ ‎1‎5‎0‎ ‎t‎o‎ ‎2‎0‎0‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎a‎n‎d‎ ‎b‎e‎g‎a‎n‎ ‎t‎o‎ ‎f‎i‎r‎e‎ ‎g‎u‎n‎s‎h‎o‎t‎s‎.‎ ‎T‎h‎e‎ ‎g‎u‎n‎m‎a‎n‎ ‎w‎a‎s‎ ‎r‎e‎p‎o‎r‎t‎e‎d‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎t‎h‎i‎n‎,‎ ‎w‎h‎i‎t‎e‎ ‎m‎a‎l‎e‎ ‎w‎e‎a‎r‎i‎n‎g‎ ‎a‎ ‎l‎o‎n‎g‎,‎ ‎b‎l‎a‎c‎k‎ ‎t‎r‎e‎n‎c‎h‎ ‎c‎o‎a‎t‎ ‎a‎n‎d‎ ‎a‎ ‎b‎l‎a‎c‎k‎ ‎b‎e‎a‎n‎i‎e‎.‎ ‎W‎o‎r‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎r‎e‎e‎t‎ ‎i‎s‎ ‎h‎e‎ ‎w‎a‎s‎ ‎a‎ ‎s‎o‎c‎i‎o‎l‎o‎g‎y‎ ‎m‎a‎j‎o‎r‎,‎ ‎t‎h‎a‎t‎ ‎h‎a‎d‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎ ‎o‎c‎e‎a‎n‎.‎ ‎T‎h‎e‎ ‎g‎u‎n‎m‎a‎n‎ ‎w‎a‎l‎k‎e‎d‎ ‎o‎n‎t‎o‎ ‎s‎t‎a‎g‎e‎ ‎a‎n‎d‎ ‎o‎p‎e‎n‎e‎d‎ ‎f‎i‎r‎e‎.‎ ‎1‎8‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎e‎r‎e‎ ‎s‎h‎o‎t‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎e‎ ‎g‎u‎n‎m‎a‎n‎ ‎s‎h‎o‎t‎ ‎h‎i‎m‎s‎e‎l‎f‎.‎ ‎M‎a‎n‎y‎ ‎v‎i‎c‎t‎i‎m‎s‎ ‎w‎e‎r‎e‎ ‎s‎h‎o‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎e‎a‎d‎,‎ ‎w‎i‎t‎h‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎t‎h‎r‎e‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎v‎i‎c‎t‎i‎m‎s‎ ‎i‎n‎ ‎c‎r‎i‎t‎i‎c‎a‎l‎ ‎c‎o‎n‎d‎i‎t‎i‎o‎n‎,‎ ‎e‎i‎g‎h‎t‎ ‎i‎n‎ ‎s‎t‎a‎b‎l‎e‎ ‎c‎o‎n‎d‎i‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎f‎i‎v‎e‎ ‎i‎n‎ ‎g‎o‎o‎d‎ ‎d‎e‎a‎d‎ ‎c‎o‎n‎d‎i‎t‎i‎o‎n‎.‎

T‎h‎e‎ ‎g‎u‎y‎ ‎m‎i‎g‎h‎t‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎i‎t‎'‎s‎ ‎V‎-‎D‎a‎y‎ ‎a‎n‎d‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎m‎a‎s‎t‎u‎r‎b‎a‎t‎i‎n‎g‎ ‎u‎s‎i‎n‎g‎ ‎h‎i‎s‎ ‎t‎e‎a‎r‎s‎ ‎a‎s‎ ‎l‎u‎b‎e‎ ‎h‎e‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎p‎w‎n‎ ‎s‎o‎m‎e‎ ‎s‎t‎u‎d‎e‎n‎t‎s‎ ‎i‎n‎s‎t‎e‎a‎d‎.‎ ‎T‎h‎i‎s‎ ‎w‎a‎s‎ ‎a‎r‎g‎u‎e‎d‎ ‎b‎y‎ ‎s‎o‎m‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎b‎e‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎ ‎C‎h‎o‎'‎s‎ ‎s‎c‎o‎r‎e‎ ‎a‎t‎ ‎V‎-‎T‎e‎c‎h‎.‎ ‎B‎u‎t‎,‎ ‎h‎e‎ ‎f‎a‎i‎l‎e‎d‎ ‎m‎i‎s‎e‎r‎a‎b‎l‎y‎!‎

I‎t‎ ‎m‎u‎s‎t‎ ‎b‎e‎ ‎n‎o‎t‎e‎d‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎d‎i‎d‎n‎'‎t‎ ‎q‎u‎i‎t‎e‎ ‎d‎o‎ ‎i‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎u‎l‎z‎.‎ ‎H‎e‎ ‎d‎i‎d‎ ‎i‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎l‎u‎v‎z‎ ‎<‎3‎.‎


(‎(‎ ‎(‎U‎N‎)‎H‎A‎P‎P‎Y‎ ‎V‎A‎L‎E‎N‎T‎I‎N‎E‎'‎S‎ ‎D‎A‎Y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎s‎t‎o‎n‎e‎c‎h‎a‎t‎ ‎(‎S‎a‎x‎i‎c‎o‎l‎a‎ ‎r‎u‎b‎i‎c‎o‎l‎a‎)‎ ‎i‎s‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎p‎a‎s‎s‎e‎r‎i‎n‎e‎ ‎b‎i‎r‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎O‎l‎d‎ ‎W‎o‎r‎l‎d‎ ‎f‎l‎y‎c‎a‎t‎c‎h‎e‎r‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎M‎u‎s‎c‎i‎c‎a‎p‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎E‎u‎r‎o‎p‎e‎,‎ ‎a‎s‎ ‎f‎a‎r‎ ‎e‎a‎s‎t‎ ‎a‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎u‎c‎a‎s‎u‎s‎,‎ ‎a‎n‎d‎ ‎i‎n‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎N‎o‎r‎t‎h‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎I‎t‎ ‎b‎r‎e‎e‎d‎s‎ ‎i‎n‎ ‎h‎e‎a‎t‎h‎l‎a‎n‎d‎,‎ ‎c‎o‎a‎s‎t‎a‎l‎ ‎d‎u‎n‎e‎s‎ ‎a‎n‎d‎ ‎r‎o‎u‎g‎h‎ ‎g‎r‎a‎s‎s‎l‎a‎n‎d‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎e‎i‎t‎h‎e‎r‎ ‎s‎h‎o‎r‎t‎-‎d‎i‎s‎t‎a‎n‎c‎e‎ ‎m‎i‎g‎r‎a‎t‎o‎r‎y‎ ‎o‎r‎ ‎n‎o‎n‎-‎m‎i‎g‎r‎a‎t‎o‎r‎y‎,‎ ‎w‎i‎t‎h‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎m‎o‎v‎i‎n‎g‎ ‎s‎o‎u‎t‎h‎ ‎t‎o‎ ‎w‎i‎n‎t‎e‎r‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎s‎o‎u‎t‎h‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎n‎d‎ ‎m‎o‎r‎e‎ ‎w‎i‎d‎e‎l‎y‎ ‎i‎n‎ ‎n‎o‎r‎t‎h‎e‎r‎n‎ ‎A‎f‎r‎i‎c‎a‎.‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎s‎t‎o‎n‎e‎c‎h‎a‎t‎s‎ ‎a‎r‎e‎ ‎1‎1‎.‎5‎ ‎t‎o‎ ‎1‎3‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎4‎.‎5‎ ‎t‎o‎ ‎5‎.‎1‎ ‎i‎n‎)‎ ‎l‎o‎n‎g‎ ‎a‎n‎d‎ ‎w‎e‎i‎g‎h‎ ‎1‎3‎ ‎t‎o‎ ‎1‎7‎ ‎g‎r‎a‎m‎s‎ ‎(‎0‎.‎4‎6‎ ‎t‎o‎ ‎0‎.‎6‎0‎ ‎o‎z‎)‎,‎ ‎w‎i‎t‎h‎ ‎b‎o‎t‎h‎ ‎s‎e‎x‎e‎s‎ ‎h‎a‎v‎i‎n‎g‎ ‎s‎h‎o‎r‎t‎ ‎w‎i‎n‎g‎s‎.‎ ‎T‎h‎e‎ ‎s‎u‎m‎m‎e‎r‎ ‎m‎a‎l‎e‎ ‎h‎a‎s‎ ‎b‎l‎a‎c‎k‎ ‎u‎p‎p‎e‎r‎p‎a‎r‎t‎s‎,‎ ‎a‎ ‎b‎l‎a‎c‎k‎ ‎h‎e‎a‎d‎,‎ ‎a‎n‎ ‎o‎r‎a‎n‎g‎e‎ ‎t‎h‎r‎o‎a‎t‎ ‎a‎n‎d‎ ‎b‎r‎e‎a‎s‎t‎,‎ ‎a‎n‎d‎ ‎a‎ ‎w‎h‎i‎t‎e‎ ‎b‎e‎l‎l‎y‎ ‎a‎n‎d‎ ‎v‎e‎n‎t‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎f‎e‎m‎a‎l‎e‎ ‎h‎a‎s‎ ‎b‎r‎o‎w‎n‎ ‎u‎p‎p‎e‎r‎p‎a‎r‎t‎s‎ ‎a‎n‎d‎ ‎h‎e‎a‎d‎,‎ ‎a‎n‎d‎ ‎n‎o‎ ‎w‎h‎i‎t‎e‎ ‎n‎e‎c‎k‎ ‎p‎a‎t‎c‎h‎e‎s‎,‎ ‎r‎u‎m‎p‎ ‎o‎r‎ ‎b‎e‎l‎l‎y‎.‎ ‎T‎h‎i‎s‎ ‎m‎a‎l‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎s‎t‎o‎n‎e‎c‎h‎a‎t‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎B‎e‎a‎u‎l‎i‎e‎u‎ ‎i‎n‎ ‎H‎a‎m‎p‎s‎h‎i‎r‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎C‎h‎a‎r‎l‎e‎s‎ ‎J‎.‎ ‎S‎h‎a‎r‎p‎

.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎I‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎ ‎i‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎n‎e‎w‎s‎.‎ ‎T‎h‎e‎ ‎b‎r‎a‎n‎d‎ ‎C‎h‎e‎f‎ ‎B‎o‎y‎a‎r‎d‎e‎e‎ ‎h‎a‎s‎ ‎b‎o‎u‎g‎h‎t‎ ‎t‎h‎e‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎L‎i‎c‎e‎n‎s‎e‎.‎ ‎D‎o‎n‎'‎t‎ ‎w‎o‎r‎r‎y‎ ‎t‎h‎o‎u‎g‎h‎.‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎m‎a‎j‎o‎r‎ ‎w‎i‎l‎l‎ ‎c‎h‎a‎n‎g‎e‎.‎ ‎I‎ ‎c‎a‎n‎'‎t‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎j‎o‎k‎e‎s‎ ‎a‎b‎o‎u‎t‎ ‎g‎u‎i‎d‎o‎s‎ ‎a‎n‎y‎m‎o‎r‎e‎ ‎t‎h‎o‎u‎g‎h‎.‎ ‎B‎u‎t‎ ‎i‎t‎'‎s‎ ‎n‎o‎t‎ ‎a‎ ‎b‎i‎g‎ ‎d‎e‎a‎l‎.‎ ‎I‎ ‎c‎a‎n‎ ‎s‎t‎i‎l‎l‎ ‎m‎a‎k‎e‎ ‎c‎o‎m‎m‎e‎n‎t‎s‎ ‎a‎b‎o‎u‎t‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎o‎t‎h‎e‎r‎ ‎g‎r‎o‎u‎p‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎o‎n‎g‎u‎e‎f‎u‎c‎k‎ ‎a‎ ‎1‎2‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎'‎s‎ ‎p‎u‎s‎s‎y‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎s‎p‎i‎c‎ ‎k‎i‎k‎e‎!‎"
tCzp7u0v,WhatsApp: +86 19911539281 Is it possible to order a fake University of Akron degree?,jf123123,Bash,Saturday 2nd of March 2024 09:01:21 PM CDT,"We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. https://www.degreemaker.com/university-of-akron-degree/

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

Is it possible to order a fake University of Akron degree? Where to make University of Akron diploma? Buy fake University of Akron degree certificate, How long to order fake University of Akron certificate online? buy fake diploma, fake degree. How to order fake diploma?
"
aD75QQxc,WhatsApp: +86 19911539281 How safety to order Antelope Valley College diploma?,jf123123,Bash,Saturday 2nd of March 2024 08:53:04 PM CDT,"We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. 

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

Would like to buy a fake Antelope Valley College degree certificate, How safety to order Antelope Valley College diploma? Buy fake Antelope Valley College certificate, Get a fake AVC degree online. buy fake diploma, fake degree.
"
s8sRkWca,IFX networks corp - Spam - Estafa [3-1/2024],bombaires,HTML,Saturday 2nd of March 2024 08:47:20 PM CDT,"IFX networks corp s.r.l. - E-mktplus

   ifxcorp.com - ifxnetworks.com - ifxnw.com.ar - ifxnw.cl - hostmailing.com - operador.net.ar - e-mktplus.com.ar - elpalomo.net (?)
   Real names - Los nombres reales: Samuel Mezrahi Mussan - Ezequiel
   Carson - Michael Abramowitz - Jaime Perez Gonzalez - Gonzalo Noceda -
   Natalia Turnes - Mahesh Neelakanta - Jesus Alfonso Zagarra Rosado
   Physical address - Dirección real: Av. Del Libertador No. 498 Piso 26,
   Torre Prourban - C1001ABR Retiro
   Av. Belgrano 1586 Piso 11 - 1480 Buenos Aires Pay the spammer a visit!
   520 South Dixie Highway - Hallandale - Florida 33009 (USA)
   1930 Harrison - Hollywood, Florida 33020 (USA)
   Carrera 69 # 43B-44 of. 501 - 57111 Bogota (Colombia)
   Autopista Norte # 114 - 78 Oficina 201 - 57111 Bogota (Colombia)
   Phone - Teléfono: +54 (0)800 345-1400
   54 (0)11-5252-2000
   +54 (0)11 5031-2400
   +54 (0)351 231-4372 (mobile e-mktplus)
   +57 1 3693000 (Colombia)
   +1 305 512 1137 (USA)
   +1 305 512 1146 (USA)
   +1 786 318 3939 (USA)
   011 3220-5506 is often used in scam distributed by IFX Networks. Might
   be a fake though. Does anyone know?
   Samuel Mezrahi Mussan sammy@ifxcorp.com
   Michael F. Shalom mshalom@ifxcorp.com
   Ezequiel Carson ezequiel@ifxcorp.com
   Julio Cesar Pinto jc@ifxcorp.com
   Michael Abramowitz mabramowitz@ifxcorp.com
   Rodolfo Alvarez ralvarez@ifxcorp.com
   Juan Carlos Valderrama Prada jcprada@ifxcorp.com
   Mahesh Neelakanta mahesh@ifxcorp.com
   Luis Gabriel Castellanos lg@ifxcorp.com
   Andres Diaz adiaz@ifxcorp.com
   Jack Haime jhaime@ifxcorp.com
   Juan José Solano Fábregas jjsolano@ifxcorp.com
   Merly Carreño Ortiz mcarreno@ifxcorp.com
   Jesus Alfonso Zagarra Rosado jzagarra@ifxcorp.com
   Felipe Ramirez aframirez@ifxcorp.com
   lmurcianoc@ifxcorp.com
   info@ifxcorp.com
   contacto@ifxcorp.com
   rrhh@ifxcorp.com
   rts@ifxcorp.com
   rts@ifxnetworks.com
   carriers@ifxcorp.com
   soc@ifxcorp.com
   noc@ifxnetworks.com
   noc@ifxcorp.com
   contactenos@ifxcorp.com
   info@ifxnetworks.com
   comunicaciones@ifxcorp.com
   info@e-mktplus.com.ar
   rebotados@dedicado.hostmailing.com
   sales@ifxcorp.com
   netadmin@ifxnw.cl
   info@ifxnw.com.ar
   hostmaster@ifxcorp.com
   ipadmin@ifxcorp.com
   info.uy@ifxcorp.com
   info.elsalvador@ifxcorp.com
   info.gt@ifxcorp.com
   info.mx@ifxcorp.com
   info.pe@ifxcorp.com
   info.pr@ifxcorp.com
   info.ve@ifxcorp.com
   redsocial@ifxcorp.com
   postmaster@ifxnw.com.ar
   postmaster@mm-bgtb.maxmailing.com.ar
   postmaster@ifxnw.cl
   abuse@ifxcorp.com"
GMx8MBjJ,recipes - from server,Shaka01,Lua,Saturday 2nd of March 2024 08:43:33 PM CDT,"{
  [ ""create:brass_hand"" ] = {
    keyCount = 1,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 6,
      },
    },
    [ ""create:golden_sheet"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""create:gearbox"" ] = {
    keyCount = 1,
    [ ""create:cogwheel"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""create:andesite_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""create:fluid_pipe"" ] = {
    keyCount = 8,
    [ ""create:copper_sheet"" ] = {
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""create:copper_ingot"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""create:redstone_link"" ] = {
    keyCount = 2,
    [ ""minecraft:redstone_torch"" ] = {
      {
        count = 1,
        slot = 7,
      },
    },
    [ ""create:brass_sheet"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:birch_planks"" ] = {
    keyCount = 4,
    [ ""minecraft:birch_log"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""create:vertical_gearbox"" ] = {
    keyCount = 1,
    [ ""create:gearbox"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""xkdeco:maya_stone"" ] = {
    keyCount = 4,
    [ ""minecraft:granite"" ] = {
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:andesite"" ] = {
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""minecraft:chest"" ] = {
    keyCount = 1,
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""thermal:side_config_augment"" ] = {
    keyCount = 1,
    [ ""thermal:invar_ingot"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""thermal:gold_gear"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""thermal:redstone_servo"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""thermal:machine_frame"" ] = {
    keyCount = 1,
    [ ""kubejs:invar_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""kubejs:inductive_mechanism"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:ender_eye"" ] = {
    keyCount = 1,
    [ ""minecraft:ender_pearl"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:blaze_powder"" ] = {
      {
        count = 1,
        slot = 6,
      },
    },
  },
  [ ""create:mechanical_pump"" ] = {
    keyCount = 1,
    [ ""create:fluid_pipe"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""create:cogwheel"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""thermal:gold_gear"" ] = {
    [ ""minecraft:gold_ingot"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:iron_nugget"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    keyCount = 1,
  },
  [ ""kubejs:andesite_machine"" ] = {
    [ ""kubejs:kinetic_mechanism"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    keyCount = 1,
    [ ""create:andesite_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:coal_block"" ] = {
    keyCount = 1,
    [ ""minecraft:coal"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:bricks"" ] = {
    keyCount = 1,
    [ ""minecraft:brick"" ] = {
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""computercraft:computer_advanced"" ] = {
    [ ""minecraft:gold_ingot"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:glass_pane"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    keyCount = 1,
  },
  [ ""create:brass_casing"" ] = {
    keyCount = 2,
    [ ""create:brass_sheet"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:spruce_log"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""computercraft:wired_modem"" ] = {
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    keyCount = 1,
    [ ""projectred-core:red_ingot"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:dark_oak_planks"" ] = {
    keyCount = 4,
    [ ""minecraft:dark_oak_log"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:redstone_lamp"" ] = {
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:glowstone"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    keyCount = 1,
  },
  [ ""minecraft:hopper"" ] = {
    keyCount = 1,
    [ ""minecraft:iron_ingot"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:chest"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""kubejs:brass_machine"" ] = {
    keyCount = 1,
    [ ""create:brass_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""create:precision_mechanism"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""create:copper_casing"" ] = {
    keyCount = 2,
    [ ""create:copper_sheet"" ] = {
      {
        count = 1,
        slot = 13,
      },
    },
    [ ""minecraft:spruce_log"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""create:cogwheel"" ] = {
    keyCount = 8,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:spruce_button"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""computercraft:wired_modem_full"" ] = {
    keyCount = 1,
    [ ""computercraft:wired_modem"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""create:chute"" ] = {
    keyCount = 4,
    [ ""create:iron_sheet"" ] = {
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:oak_planks"" ] = {
    keyCount = 4,
    [ ""minecraft:oak_log"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:spruce_button"" ] = {
    keyCount = 1,
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""kubejs:invar_casing"" ] = {
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 13,
      },
    },
    [ ""thermal:invar_ingot"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    keyCount = 2,
  },
  [ ""occultism:book_of_binding_djinni"" ] = {
    keyCount = 1,
    [ ""occultism:purified_ink"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:writable_book"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:green_dye"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""minecraft:barrel"" ] = {
    keyCount = 1,
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:spruce_slab"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""thermal:phytogro"" ] = {
    keyCount = 4,
    [ ""minecraft:sand"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:bone_meal"" ] = {
      {
        count = 1,
        slot = 6,
      },
    },
    [ ""thermal:apatite"" ] = {
      {
        count = 1,
        slot = 9,
      },
    },
    [ ""thermal:niter"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:paper"" ] = {
    keyCount = 3,
    [ ""minecraft:sugar_cane"" ] = {
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""occultism:book_of_binding_afrit"" ] = {
    keyCount = 1,
    [ ""occultism:purified_ink"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:writable_book"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:purple_dye"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""occultism:book_of_binding_bound_djinni"" ] = {
    keyCount = 1,
    [ ""occultism:book_of_binding_djinni"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""occultism:dictionary_of_spirits"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""occultism:book_of_binding_bound_afrit"" ] = {
    keyCount = 1,
    [ ""occultism:book_of_binding_afrit"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""occultism:dictionary_of_spirits"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""kubejs:sealed_mechanism"" ] = {
    keyCount = 1,
    [ ""thermal:cured_rubber"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""kubejs:kinetic_mechanism"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:black_dye"" ] = {
    keyCount = 1,
    [ ""minecraft:ink_sac"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""create:belt_connector"" ] = {
    keyCount = 3,
    [ ""thermal:cured_rubber"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:writable_book"" ] = {
    keyCount = 1,
    [ ""minecraft:ink_sac"" ] = {
      {
        count = 1,
        slot = 6,
      },
    },
    [ ""minecraft:book"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:feather"" ] = {
      {
        count = 1,
        slot = 9,
      },
    },
  },
  [ ""minecraft:repeater"" ] = {
    keyCount = 1,
    [ ""minecraft:redstone_torch"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:stick"" ] = {
    keyCount = 4,
    [ ""minecraft:birch_planks"" ] = {
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:stone_bricks"" ] = {
    keyCount = 4,
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:observer"" ] = {
    keyCount = 1,
    [ ""minecraft:cobblestone"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:quartz"" ] = {
      {
        count = 1,
        slot = 11,
      },
    },
  },
  [ ""create:shaft"" ] = {
    keyCount = 8,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""minecraft:lever"" ] = {
    [ ""minecraft:stick"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    keyCount = 1,
    [ ""minecraft:cobblestone"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""computercraft:cable"" ] = {
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    keyCount = 6,
    [ ""projectred-core:red_ingot"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""create:andesite_casing"" ] = {
    keyCount = 2,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 13,
      },
    },
    [ ""minecraft:spruce_log"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""minecraft:glass_pane"" ] = {
    keyCount = 16,
    [ ""minecraft:glass"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""occultism:book_of_binding_bound_foliot"" ] = {
    [ ""occultism:book_of_binding_foliot"" ] = {
      {
        count = 1,
        slot = 13,
      },
    },
    keyCount = 1,
    [ ""occultism:dictionary_of_spirits"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""kubejs:zinc_machine"" ] = {
    [ ""kubejs:infernal_mechanism"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""kubejs:zinc_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    keyCount = 1,
  },
  [ ""portality:module_interdimensional"" ] = {
    keyCount = 1,
    [ ""minecraft:ender_eye"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""portality:frame"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:quartz_block"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""minecraft:white_dye"" ] = {
    keyCount = 1,
    [ ""minecraft:bone_meal"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
  },
  [ ""occultism:book_of_binding_foliot"" ] = {
    keyCount = 1,
    [ ""occultism:purified_ink"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""minecraft:white_dye"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:writable_book"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""portality:frame"" ] = {
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    keyCount = 1,
    [ ""minecraft:quartz"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""minecraft:comparator"" ] = {
    keyCount = 1,
    [ ""minecraft:redstone_torch"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:quartz"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""storagedrawers:spruce_trim"" ] = {
    keyCount = 4,
    [ ""create:zinc_ingot"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
    },
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:chest"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""create:large_cogwheel"" ] = {
    keyCount = 2,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:spruce_planks"" ] = {
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:spruce_button"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""kubejs:copper_machine"" ] = {
    keyCount = 1,
    [ ""create:copper_casing"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""kubejs:sealed_mechanism"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""thermal:redstone_servo"" ] = {
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 15,
      },
    },
    [ ""minecraft:iron_ingot"" ] = {
      {
        count = 1,
        slot = 11,
      },
    },
    keyCount = 1,
  },
  [ ""create:depot"" ] = {
    keyCount = 1,
    [ ""create:andesite_alloy"" ] = {
      {
        count = 1,
        slot = 5,
      },
    },
    [ ""create:andesite_casing"" ] = {
      {
        count = 1,
        slot = 6,
      },
    },
  },
  [ ""minecraft:iron_nugget"" ] = {
    keyCount = 9,
    [ ""minecraft:iron_ingot"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
  },
  [ ""kubejs:zinc_casing"" ] = {
    keyCount = 2,
    [ ""kubejs:zinc_sheet"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:stone"" ] = {
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:book"" ] = {
    keyCount = 1,
    [ ""minecraft:leather"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
    [ ""minecraft:paper"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 13,
      },
    },
  },
  [ ""create:water_wheel"" ] = {
    keyCount = 1,
    [ ""create:large_cogwheel"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    [ ""minecraft:spruce_slab"" ] = {
      {
        count = 1,
        slot = 5,
      },
      {
        count = 1,
        slot = 6,
      },
      {
        count = 1,
        slot = 7,
      },
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:redstone_torch"" ] = {
    [ ""minecraft:redstone"" ] = {
      {
        count = 1,
        slot = 10,
      },
    },
    keyCount = 1,
    [ ""minecraft:stick"" ] = {
      {
        count = 1,
        slot = 14,
      },
    },
  },
  [ ""tconstruct:clear_glass_pane"" ] = {
    keyCount = 16,
    [ ""tconstruct:clear_glass"" ] = {
      {
        count = 1,
        slot = 9,
      },
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 13,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
  [ ""minecraft:quartz_block"" ] = {
    keyCount = 1,
    [ ""minecraft:quartz"" ] = {
      {
        count = 1,
        slot = 10,
      },
      {
        count = 1,
        slot = 11,
      },
      {
        count = 1,
        slot = 14,
      },
      {
        count = 1,
        slot = 15,
      },
    },
  },
}"
