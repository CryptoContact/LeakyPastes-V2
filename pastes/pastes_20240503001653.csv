id,title,username,language,date,content
tbVVbwiE,2024-05-02_stats.json,rdp_snitch,JSON,Thursday 2nd of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""58.218.204.183"": 3,
    ""157.119.251.94"": 1,
    ""152.32.183.213"": 94,
    ""137.184.3.0"": 10,
    ""205.210.31.234"": 3,
    ""81.19.135.2"": 3,
    ""194.165.16.11"": 2,
    ""194.165.16.76"": 2,
    ""128.199.193.14"": 1,
    ""87.251.75.145"": 3,
    ""87.251.75.120"": 2,
    ""185.170.144.3"": 2,
    ""103.119.3.25"": 1,
    ""197.242.158.64"": 2,
    ""198.235.24.208"": 3,
    ""165.154.128.17"": 1,
    ""36.91.222.100"": 2,
    ""123.56.20.194"": 7,
    ""172.233.84.194"": 686,
    ""159.65.82.237"": 15,
    ""2.57.149.186"": 4,
    ""172.104.169.86"": 51,
    ""167.94.145.101"": 1,
    ""62.234.185.85"": 51,
    ""198.235.24.118"": 3,
    ""185.161.248.121"": 4,
    ""27.8.44.19"": 1,
    ""87.251.75.64"": 1,
    ""159.223.172.50"": 4,
    ""138.68.31.5"": 1,
    ""45.227.254.54"": 2,
    ""138.199.40.231"": 55,
    ""87.251.75.179"": 2,
    ""64.124.50.139"": 1,
    ""194.165.16.10"": 2,
    ""112.4.139.162"": 1,
    ""43.239.251.85"": 1,
    ""14.241.97.160"": 1,
    ""202.123.26.146"": 6,
    ""116.140.196.215"": 1,
    ""198.235.24.105"": 3,
    ""80.66.76.134"": 1,
    ""139.162.54.214"": 686
  },
  ""asn"": {
    ""AS4134"": 3,
    ""AS135944"": 1,
    ""AS135377"": 95,
    ""AS14061"": 31,
    ""AS396982"": 12,
    ""AS209588"": 3,
    ""AS48721"": 6,
    ""AS208091"": 9,
    ""AS197414"": 2,
    ""AS138968"": 1,
    ""AS37611"": 2,
    ""AS7713"": 2,
    ""AS37963"": 7,
    ""AS63949"": 1423,
    ""AS208312"": 4,
    ""AS398705"": 1,
    ""AS45090"": 51,
    ""AS49202"": 4,
    ""AS4837"": 2,
    ""AS267784"": 2,
    ""AS60068"": 55,
    ""AS6461"": 1,
    ""AS56046"": 1,
    ""AS58955"": 1,
    ""AS45899"": 1,
    ""AS23889"": 6
  },
  ""isp"": {
    ""Chinanet"": 3,
    ""VinhNam Commercial informatics service corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 95,
    ""DigitalOcean, LLC"": 31,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 11,
    ""Xhost Internet Solutions LP"": 11,
    ""China Internet Network Information Center"": 1,
    ""Afrihost (Pty) Ltd"": 2,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Hangzhou Alibaba Advertising Co"": 7,
    ""Akamai Technologies, Inc."": 1372,
    ""Red Byte LLC"": 4,
    ""Akamai Technologies"": 51,
    ""Censys, Inc."": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 51,
    ""Kisara LLC"": 4,
    ""China Unicom Chongqing Province Network"": 1,
    ""Datacamp Limited"": 55,
    ""Zayo Bandwidth"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Bangmod Enterprise Co., Ltd."": 1,
    ""VNPT"": 1,
    ""MauritiusTelecom"": 6,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""Chinanet JS"": 3,
    ""VINACIS"": 1,
    ""Ucloud Information Technology"": 94,
    ""DigitalOcean, LLC"": 31,
    ""Palo Alto Networks, Inc"": 12,
    ""Alviva Holding Limited"": 3,
    ""Flyservers S.A"": 6,
    ""Xhost Internet Solutions"": 9,
    ""Xhostis"": 2,
    ""Sakura Network Limited"": 1,
    ""Unknown"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Aliyun Computing Co., LTD"": 7,
    ""Akamai Technologies, Inc."": 686,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Linode"": 51,
    ""Censys, Inc."": 1,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 51,
    ""Kisara LLC"": 4,
    ""UAB Host Baltic"": 2,
    ""Cdn77 NYC"": 55,
    ""Microsoft Corporation"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Bangmod Enterprise Co., Ltd."": 1,
    ""Vietnam Posts and Telecommunications Group"": 1,
    ""State Informatics LTD"": 6,
    ""China United Network Communications Corporation Limited"": 1,
    ""Linode, LLC"": 686
  },
  ""regionName"": {
    ""Jiangsu"": 4,
    ""Ho Chi Minh"": 1,
    ""Virginia"": 95,
    ""California"": 23,
    ""Hesse"": 4,
    ""Kaunas"": 6,
    ""South West"": 1,
    ""North Holland"": 11,
    ""Tokyo"": 1,
    ""Gauteng"": 2,
    ""England"": 16,
    ""Jakarta"": 2,
    ""Beijing"": 59,
    ""\u014csaka"": 686,
    ""Lesser Poland"": 4,
    ""North West"": 51,
    ""Moscow"": 4,
    ""Chongqing"": 1,
    ""New Jersey"": 4,
    ""Vilnius"": 2,
    ""New York"": 55,
    ""Bangkok"": 1,
    ""Hanoi"": 1,
    ""Port Louis District"": 6,
    ""Central Singapore"": 686
  },
  ""country"": {
    ""China"": 64,
    ""Vietnam"": 2,
    ""United States"": 177,
    ""Germany"": 4,
    ""Lithuania"": 8,
    ""Singapore"": 738,
    ""The Netherlands"": 11,
    ""Japan"": 687,
    ""South Africa"": 2,
    ""United Kingdom"": 16,
    ""Indonesia"": 2,
    ""Poland"": 4,
    ""Russia"": 4,
    ""Thailand"": 1,
    ""Mauritius"": 6
  },
  ""account"": {
    ""hello"": 153,
    ""Administrator"": 211,
    ""Admin"": 210,
    ""Whatuptime.com"": 209,
    ""Jakartakini123#"": 210,
    ""Hello World"": 210,
    ""TinHocThucHanh"": 208,
    ""Hey"": 209,
    ""QXIovyKhm"": 1,
    ""joUXtI"": 1,
    ""jBPcgH"": 1,
    ""Domain"": 5,
    ""Test"": 14,
    ""Administr"": 16,
    ""exuVGhUtD"": 1,
    ""KVrwdf"": 1,
    ""YJdBFE"": 1,
    ""administrator"": 17,
    ""admin"": 17,
    ""whatuptile.com"": 14,
    ""(empty)"": 3,
    ""whatuptime.com"": 3,
    ""MEWDTnjEo"": 1,
    ""XcBZuV"": 1,
    ""XLyiOX"": 1,
    ""uws7pdsq"": 4,
    ""beio"": 1,
    ""ZKtxvjlwa"": 1,
    ""YObuBg"": 1,
    ""TFZpqT"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1726
  },
  ""client_build"": {
    ""Unknown"": 1726
  },
  ""client_name"": {
    ""Unknown"": 1726
  },
  ""ip_type"": {
    ""proxy"": 4,
    ""hosting"": 1607,
    ""Unknown"": 96,
    ""hosting & proxy"": 17,
    ""mobile"": 2
  }
}"
2f24PP1a,Projectile manager,AlewAlow,Lua,Thursday 2nd of May 2024 06:21:51 PM CDT,"local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local ServerScriptService = game:GetService(""ServerScriptService"")

local Container = require(ReplicatedStorage.Classes.Containers.Container)
local ContainerReceiver = require(ReplicatedStorage.Classes.ContainerReceiver)
local ContainerHolder = require(ReplicatedStorage.Classes.ContainerHolders.ContainerHolder)
local ReplicatedContainerHolder = require(ReplicatedStorage.Classes.ContainerHolders.ReplicatedContainerHolder)
local AllPlayerFilterer = require(ReplicatedStorage.Classes.PlayerFilterers.AllPlayerFilterer)

local DamageManager = require(ReplicatedStorage.Modules.DamageManager)

local Signal = require(ReplicatedStorage.Libs.Signal)

local ProjectileManager = {}

local IS_CLIENT = RunService:IsClient()

-- TODO: add curve function
ProjectileManager.ProjectileHit = Signal.new()
ProjectileManager.ProjectileDestroyed = Signal.new()

ProjectileManager.LastCFrames = {}
ProjectileManager.MoveFunctions = {}
ProjectileManager.DefaultProperties = {
	MoveType = ""Linear"",
	Lifetime = 0.7,
	HitRadius = 5,
	Damage = 5,
	
	Owner = nil,
	Object = nil,
	
	StartTime = nil,
	StartCFrame = nil,
	TargetCFrame = nil,
}

function ProjectileManager.MoveFunctions.Linear(startCFrame, targetCFrame, time)
	return startCFrame:Lerp(targetCFrame, time)
end

function ProjectileManager.MoveFunctions.Quadratic(startCFrame, targetCFrame, time)
	return startCFrame:Lerp(targetCFrame, 1 - math.pow(1 - time, 2))
end

function ProjectileManager.CreateProjectile(container)
	if not getmetatable(container) then
		container = Container.new(container)
	end
	
	for k, v in ProjectileManager.DefaultProperties do
		if container:GetValue(k) == nil then
			container:SetValue(k, v)
		end
	end
	
	if not container:GetValue(""StartTime"") then
		container:SetValue(""StartTime"", workspace:GetServerTimeNow())
	end
	
	if not container:GetValue(""RaycastParams"") then
		local params = RaycastParams.new()
		
		params.FilterDescendantsInstances = {
			container:GetValue(""Object""),
			container:GetValue(""Shooter"")
		}
		
		container:SetValue(""RaycastParams"", params)
	end
end

function ProjectileManager.AddProjectile(container)
	ProjectileManager.ProjectileContainerHolder:AddContainer(container.Object, container)
end

function ProjectileManager.DestroyProjectile(container)
	ProjectileManager.ProjectileDestroyed:Fire(container)
	ProjectileManager.ProjectileContainerHolder:RemoveContainer(container.Object)
end

if RunService:IsClient() then
	local CONTAINER_CONSTRUCTOR = function(key, data)
		return Container.new(data)
	end
	
	ProjectileManager.ProjectileContainerHolder = ContainerHolder.new()
	ProjectileManager.ProjectileContainerReceiver = ContainerReceiver.new(""Projectiles"", ProjectileManager.ProjectileContainerHolder, CONTAINER_CONSTRUCTOR)
else
	ProjectileManager.ProjectileContainerHolder = ReplicatedContainerHolder.new(""Projectiles"", ContainerHolder.new(), function(player)
		return AllPlayerFilterer.new()
	end)
end

RunService.Stepped:Connect(function()
	for _, container in ProjectileManager.ProjectileContainerHolder:GetAllContainers() do
		local timePassed = workspace:GetServerTimeNow() - container:GetValue(""StartTime"")
		local timePercentage = timePassed / container:GetValue(""Lifetime"")
		if timePercentage > 1 then
			ProjectileManager.DestroyProjectile(container)
			continue
		end
		
		local currentCFrame = ProjectileManager.MoveFunctions[container:GetValue(""MoveType"")](
			container:GetValue(""StartCFrame""),
			container:GetValue(""TargetCFrame""),
			timePercentage
		)
		
		local lastCFrame = ProjectileManager.LastCFrames[container] or currentCFrame
		local lastPosition = lastCFrame.Position
		local currentPosition = currentCFrame.Position
		local direction = currentPosition - lastPosition
		
		local result = workspace:Spherecast(
			lastPosition,
			container:GetValue(""HitRadius""),
			direction,
			container:GetValue(""RaycastParams"")
		)
		
		if result then
			ProjectileManager.DestroyProjectile(container)
			ProjectileManager.ProjectileHit:Fire(container, result)
			continue
		end
		
		if IS_CLIENT then
			container:GetValue(""Object"").CFrame = currentCFrame
		end
	end
end)

ProjectileManager.ProjectileHit:Connect(function(container, result)
	DamageManager.ApplyDamage(
		result.Instance,
		container:GetValue(""Damage""),
		container:GetValue(""Shooter"")
	)
end)


return ProjectileManager"
7i9k9pib,🤑 G2A.com Free Gift Card Guide May 2024 FIX 💰,ssss50w,GetText,Thursday 2nd of May 2024 06:11:01 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
03 May 2024"
MMbWiF1d,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Thursday 2nd of May 2024 06:09:42 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_485524.pdf

Working as of:
02 May 2024"
xrkY7bs7,hack rsa,WHO_IS_THIS_PSH_PSH,C++,Thursday 2nd of May 2024 05:54:44 PM CDT,"#include <iostream>
#include <cmath>
#include <vector>
using namespace std;


// Функция для проверки, является ли число простым
bool isPrime(int n) {
    if (n <= 1) return false;
    if (n <= 3) return true;
    if (n % 2 == 0 || n % 3 == 0) return false;
    for (int i = 5; i * i <= n; i += 6) {
        if (n % i == 0 || n % (i + 2) == 0) return false;
    }
    return true;
}


// Функция для вычисления наибольшего общего делителя двух чисел с использованием алгоритма Евклида
int calculateNOD(int a, int b, int& x, int& y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int x1, y1;
    int d = calculateNOD(b, a % b, x1, y1);
    x = y1;
    y = x1 - (a / b) * y1;
    return d;
}

// Функция для вычисления модул обратного 'a' по модулю 'm'
int calculateModInverse(int a, int m) {
    int x, y;
    int gcd = calculateNOD(a, m, x, y);
    if (gcd != 1) {
        throw runtime_error(""Обратное значение не существует"");
    }
    else {
        return (x % m + m) % m;
    }
}

// Функция для генерации открытого и закрытого ключей для шифрования RSA
void generateRSAKeys(int prime1, int prime2, int& publicKeyExponent, int& privateKeyExponent, int& modulus) {
    modulus = prime1 * prime2;
    int phi = (prime1 - 1) * (prime2 - 1);
    // Выбор открытого экспонента 'e'
    publicKeyExponent = 2; // Начинаем с общего выбора для e
    int x, y; // переменные для расширенного алгоритма Евклида
    while (calculateNOD(publicKeyExponent, phi, x, y) != 1) {
        publicKeyExponent++;
    }
    // Вычисление закрытого экспонента 'd' как модул обратного 'e'
    privateKeyExponent = calculateModInverse(publicKeyExponent, phi);
}

// Функция для шифрования сообщения с использованием открытого ключа (e, n)
int encrypt(int message, int publicKeyExponent, int modulus) {
    int result = 1;
    for (int i = 0; i < publicKeyExponent; i++) {
        result = (result * message) % modulus;
    }
    return result;
}

// Функция для дешифрования с использованием закрытого ключа (d, n)
int decrypt(int ciphertext, int privateKeyExponent, int modulus) {
    int result = 1;
    for (int i = 0; i < privateKeyExponent; i++) {
        result = (result * ciphertext) % modulus;
    }
    return result;
}


// Функция для факторизации числа
void factorize(int n, int ciphertext, int publicKeyExponent) {
    for (int i = 2; i <= n / 2; i++) {
        if (n % i == 0 && isPrime(i) && isPrime(n / i)) {
            //с помощью них можем попробовать узнать приватный ключ
            cout << ""Множители модуля, которые мы узнали с помощью факторизации: "" << i << "" и "" << n / i << endl<<endl;
            // Здесь вычисляем закрытый ключ
            int prime1 = i;
            int prime2 = n / i;
            int modulus = prime1 * prime2;
            int phi = (prime1 - 1) * (prime2 - 1);
            int x, y;
            int privateKeyExponent = calculateModInverse(publicKeyExponent, phi);

            //
            cout << ""Предполагаемый закрытый ключ (исходя из метода факторизации): {"" << privateKeyExponent << "", "" << modulus << ""}"" << std::endl;
            //
            cout << ""Предполагаемое дешифрованное сообщение: "" << decrypt(ciphertext, privateKeyExponent, modulus) << endl;
            return;
        }
    }
    cout << ""Не удалось выполнить факторизацию."" << std::endl;
}

int main() {
    setlocale(LC_ALL, ""Russian"");
    // два простых числа
    int prime1 = 11;
    int prime2 = 13;
    int modulus, publicKeyExponent, privateKeyExponent;

    // Генерируем открытый и закрытый ключи для шифрования RSA
    generateRSAKeys(prime1, prime2, publicKeyExponent, privateKeyExponent, modulus);

    cout << ""Открытый ключ: {"" << publicKeyExponent << "", "" << modulus << ""}"" << endl;

    cout << ""Закрытый ключ: {"" << privateKeyExponent << "", "" << modulus << ""}"" << endl;

    // сообщение для шифрования, оно должно быть меньше 143(тк есть зависимость от модуля)для других чисел-другие ограничения
    int message = 141;
    // Шифруем сообщение
    int ciphertext = encrypt(message, publicKeyExponent, modulus);
    // Дешифруем
    int decryptedMessage = decrypt(ciphertext, privateKeyExponent, modulus);

    // Выводим исходное сообщение
    cout << ""Исходное сообщение: "" << message << endl<<endl;
    factorize(modulus, ciphertext, publicKeyExponent);

    // Выводим зашифрованное сообщение
    cout <<endl<< ""Зашифрованное сообщение: "" << ciphertext << endl;
    // Выводим дешифрованное сообщение
    cout << ""Дешифрованное сообщение: "" << decryptedMessage << endl;

    return 0;
}
"
Msy6ZQ5f,Untitled,opless,Bash,Thursday 2nd of May 2024 05:50:40 PM CDT,"cpu% cd ../jl
cpu% mk
6c -FTVw -. -I. asm.c
6c -FTVw -. -I. compress.c
6c -FTVw -. -I. list.c
6c -FTVw -. -I. noop.c
6c -FTVw -. -I. obj.c
asm.c:138 name not declared: B_MAGIC
asm.c:138 name not declared: Y_MAGIC
6c -FTVw -. -I. optab.c
mk: 6c -FTVw -. ...  : exit status=rc 237750: 6c 237752: error"
VYJ4iEKE,TurtleGoldCoinSorter,nauseant,Lua,Thursday 2nd of May 2024 05:46:25 PM CDT,"function startingFace()
    local success, data = turtle.inspect()
    if success  == true and data.name ~= ""thermal:machine_press"" then
        turtle.turnLeft()
        startingFace()
    end
end

function swapStorage()
    local coin = turtle.getItemCount()
    if coin >= 1 then
        turtle.drop()
        turtle.turnLeft()
    else
        turtle.suckDown()
        swapStorage()
    end
end

function main()
    turtle.turnLeft()
    swapStorage()
end

startingFace()
while true do
    main()
end"
jXUzukxZ,Untitled,emveepee,JSON,Thursday 2nd of May 2024 05:35:27 PM CDT,"{
       ""contentRating"": [
            {
                ""body"": ""USA Parental Rating"",
                ""code"": ""TVPG"",
                ""country"": ""USA""
            },
            {
                ""body"": ""Freiwillige Selbstkontrolle Fernsehen"",
                ""code"": ""6"",
                ""country"": ""DEU""
            },
            {
                ""body"": ""Australian Classification Board"",
                ""code"": ""PG"",
                ""country"": ""AUS""
            },
            {
                ""body"": ""Canadian Parental Rating"",
                ""code"": ""PG"",
                ""country"": ""CAN""
            },
            {
                ""body"": ""Régie du cinéma"",
                ""code"": ""8+"",
                ""country"": ""CAN""
            },
            {
                ""body"": ""Mediakasvatus- ja kuvaohjelmayksikkö"",
                ""code"": ""S"",
                ""country"": ""FIN""
            },
            {
                ""body"": ""Krajowa Rada Radiofonii i Telewizji"",
                ""code"": ""12"",
                ""country"": ""POL""
            },
            {
                ""body"": ""Freiwillige Selbstkontrolle der Filmwirtschaft"",
                ""code"": ""0"",
                ""country"": ""DEU""
            },
            {
                ""body"": ""Departamento de Justiça, Classificação, Títulos e Qualificação"",
                ""code"": ""12"",
                ""country"": ""BRA"",
                ""contentWarning"": [
                    ""Linguagem Imprópria"",
                    ""Drogas Lícitas""
                ]
            },
            {
                ""body"": ""Medierådet"",
                ""code"": ""A"",
                ""country"": ""DNK""
            }
        ]
}"
BazEucTS,Untitled,emveepee,JSON,Thursday 2nd of May 2024 05:13:29 PM CDT,"{
       ""contentAdvisory"": [
            ""Adult Language"",
            ""Adult Situations"",
            ""Violence""
        ],
        ""contentRating"": [
            {
                ""body"": ""Motion Picture Association"",
                ""code"": ""PG-13"",
                ""country"": ""USA"",
                ""contentWarning"": [
                    ""Language"",
                    ""A Scene of Sensuality"",
                    ""Sports Action Violence""
                ]
            },
            {
                ""body"": ""B.C. Film Classification Office"",
                ""code"": ""PG"",
                ""country"": ""CAN"",
                ""contentWarning"": [
                    ""Violence"",
                    ""Coarse Language""
                ]
            },
            {
                ""body"": ""Saskatchewan Film and Video Classification Board"",
                ""code"": ""PG"",
                ""country"": ""CAN"",
                ""contentWarning"": [
                    ""Coarse Language"",
                    ""Violence""
                ]
            },
            {
                ""body"": ""Manitoba Film Classification Board"",
                ""code"": ""PG"",
                ""country"": ""CAN"",
                ""contentWarning"": [
                    ""Coarse Language"",
                    ""Violence""
                ]
            },
            {
                ""body"": ""Alberta's Film Classification Board"",
                ""code"": ""PG"",
                ""country"": ""CAN"",
                ""contentWarning"": [
                    ""Violence""
                ]
            },
            {
                ""body"": ""Régie du cinéma"",
                ""code"": ""G"",
                ""country"": ""CAN"",
                ""contentWarning"": [
                    ""Not Rec. for Young Children""
                ]
            },
            {
                ""body"": ""Dirección General de Radio, Televisión y Cinematografía"",
                ""code"": ""B"",
                ""country"": ""MEX""
            },
            {
                ""body"": ""Departamento de Justiça, Classificação, Títulos e Qualificação"",
                ""code"": ""12"",
                ""country"": ""BRA"",
                ""contentWarning"": [
                    ""Violência""
                ]
            },
            {
                ""body"": ""Freiwillige Selbstkontrolle der Filmwirtschaft"",
                ""code"": ""12"",
                ""country"": ""DEU""
            },
            {
                ""body"": ""Statens medieråd"",
                ""code"": ""Från 11 år"",
                ""country"": ""SWE""
            },
            {
                ""body"": ""Mediakasvatus- ja kuvaohjelmayksikkö"",
                ""code"": ""K16"",
                ""country"": ""FIN""
            },
            {
                ""body"": ""Medietilsynet"",
                ""code"": ""12 år"",
                ""country"": ""NOR""
            },
            {
                ""body"": ""Consejo de Calificación Cinematográfica"",
                ""code"": ""14"",
                ""country"": ""CHL""
            },
            {
                ""body"": ""Arcom"",
                ""code"": ""-10"",
                ""country"": ""FRA""
            },
            {
                ""body"": ""Australian Classification Board"",
                ""code"": ""M"",
                ""country"": ""AUS""
            },
            {
                ""body"": ""映倫"",
                ""code"": ""G"",
                ""country"": ""JPN""
            },
            {
                ""body"": ""Medierådet"",
                ""code"": ""11"",
                ""country"": ""DNK""
            },
            {
                ""body"": ""British Board of Film Classification"",
                ""code"": ""12"",
                ""country"": ""GBR""
            },
            {
                ""body"": ""Kijkwijzer"",
                ""code"": ""12"",
                ""country"": ""NLD"",
                ""contentWarning"": [
                    ""Violence"",
                    ""Coarse Language"",
                    ""Fear""
                ]
            },
            {
                ""body"": ""Krajowa Rada Radiofonii i Telewizji"",
                ""code"": ""12"",
                ""country"": ""POL""
            },
            {
                ""body"": ""영상물등급위원회"",
                ""code"": ""12+"",
                ""country"": ""KOR""
            }
        ]
}"
eSC78a4L,Untitled,sissou123,C,Thursday 2nd of May 2024 05:06:45 PM CDT,"C Programming Bootcamp - The Complete C Language Course
C Programming 2024: Master the Fundamentals of C Programming Language. Join the Comprehensive C Bootcamp Masterclass! 
What you'll learn
Fundamentals of Programming
Summarised & Concise Material [Saving TONS of Time!]
OVER 100 Practical Exercises! 
for more:https://cuty.io/hJda75Y13zR
"
0Xy0AkKx,inventory,AlewAlow,Lua,Thursday 2nd of May 2024 03:53:00 PM CDT,"local Players = game:GetService(""Players"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local ServerScriptService = game:GetService(""ServerScriptService"")

local ContainerUtil = require(ReplicatedStorage.Shared.Utils.ContainerUtil)
local DataManagerShared = require(ReplicatedStorage.Shared.Modules.DataManagerShared)
local InventoryManagerShared = require(ReplicatedStorage.Shared.Modules.InventoryManagerShared)
local InventoryManager = {}

function InventoryManager.InsertItem(playerContainer, itemData, amountToGive)
	if type(itemData) == ""string"" then
		itemData = InventoryManagerShared.Items[itemData]
	end
	
	local amountLeft = amountToGive
	while amountLeft > 0 do
		local itemSizeCount = 0
		
		for _, otherItemSlot in playerContainer:GetValue(""Items"") do
			local otherItemData = InventoryManagerShared.Items[otherItemSlot.Key]
			if not otherItemData then
				continue
			end
			
			if otherItemData.Size == itemData.Size then
				itemSizeCount += otherItemSlot.Amount
			end
		end
		
		if itemSizeCount >= InventoryManagerShared.Sizes[itemData.Size] then
			break
		end
		
		local itemSlot
		local itemSlotIndex

		for i, otherItemSlot in playerContainer:GetValue(""Items"") do
			local otherItemData = InventoryManagerShared.Items[otherItemSlot.Key]
			if not otherItemData then
				continue
			end

			if otherItemData.Size ~= itemData.Size or
				otherItemSlot.Key ~= itemData.Key
			then
				continue
			end
			
			if itemData.Stack and otherItemSlot.Amount >= itemData.Stack then
				continue
			end

			itemSlot = otherItemSlot
			itemSlotIndex = i
		end
		
		if not itemSlot then
			itemSlotIndex = #playerContainer:GetValue(""Items"") + 1
			itemSlot = {
				Key = itemData.Key,
				Amount = 0,
			}

			ContainerUtil.InsertToTable(playerContainer, {""Items""}, itemSlot)
		end
		
		local stackSize = itemData.Stack or InventoryManagerShared.Sizes[itemData.Size]
		local amountToAdd = math.min(stackSize - itemSlot.Amount, amountLeft)
		amountLeft -= amountToAdd
		playerContainer:SetValue({""Items"", itemSlotIndex, ""Amount""}, itemSlot.Amount + amountToAdd)
	end
	
	return amountToGive - amountLeft
end

DataManagerShared.PlayerContainerHolder.ContainerAdded:Connect(function(player, playerContainer)
	while true do
		task.wait(3)
		
		local index = math.random(1, #InventoryManagerShared.Items)
		local key = InventoryManagerShared.Items:GetKeyByIndex(index)
		local data = InventoryManagerShared.Items[key]
		
		InventoryManager.InsertItem(playerContainer, data, 5)
		print(playerContainer)
	end
end)

return InventoryManager"
KicC8SkE,Minecraft Turtle stairDown,hornedcommando,Lua,Thursday 2nd of May 2024 02:46:57 PM CDT,"--Desc: A turtle program which attempts to stair down through blocks, number of stairs defined by the user
-- Useful for making mineshafts or traversing the nether
--By: hornedcommando and BadPunBananas
 
--TODO: currently it is hardcoded to only place dirtblocks, should be updated to a dict with at least cobble and netherack
 

local function input()
    while true do
        write(""How Many Stairs?\n"")
        size = tonumber(read())
        break
    end
end

local function isForbiddenBlock(blockName)
    local forbiddenBlocks = {
        ""forbidden_arcanus:stella_arcanum"",
        ""minecraft:bedrock""
    }
    for _, forbiddenBlock in ipairs(forbiddenBlocks) do
        if blockName == forbiddenBlock then
            return true
        end
    end
    return false
end

function searchInventory(name)
    for slot = 1, 16 do
        turtle.select(slot)
        local slotDetail = turtle.getItemDetail()
        if slotDetail and slotDetail.name:find(name) then
            return slot -- Return the slot number if item found
        end
    end
    return nil -- Return nil if item not found
end

function fill(name)
    local found, slot = searchInventory(name)
    if found then
        turtle.placeDown()  -- Place the block
        print(""Placed block:"", name)
    else
        print(""Block not found:"", name)
    end
end

--Function to refuel the turtle, attempts to maintain a specified fuel level, this could be adjusted based on abundance of fuel or time between fuel calls
local function smartRefuel()
    print(""Checking Fuel"")
    -- Check if fuel level is below 1000
    while turtle.getFuelLevel() < 1000 do
        print(""Refueling"")
        for slot = 1, 16 do
            turtle.select(slot) -- Select the slot
            if turtle.refuel(0) then
                -- Check if the selected item is a fuel
                turtle.refuel(1) -- Refuel with the selected item
                break -- Stop searching for fuel after refueling
            end
        end
    end
end

function gd()
    print(""Going down"")
    local success, block = turtle.inspectDown()
    if isForbiddenBlock(block.name) then
        print(""Detected block is forbidden"")
        return false
    else
        local success, block = turtle.inspectUp()
        if isForbiddenBlock(block.name) then
            print(""Detected block is forbidden"")
            return false
        else
            turtle.digUp()
            while not turtle.down() do
                print(""Digging down"")
                turtle.digDown()
            end
            if not turtle.inspectDown() then
                fill(""minecraft:dirt"")
            end
            return true
        end
    end

end

function gf()
    print(""Going forward"")
    local success, block = turtle.inspect()
    if isForbiddenBlock(block.name) then
        print(""Detected block is forbidden"")
        return false
    else
        while not turtle.forward() do
            print(""Digging forward"")
            turtle.dig()
        end
    end
end

function stairDown()
    for i = 1, size do
        gd()
        gf()
    end
end

input()
smartRefuel()
stairDown()"
zJwBiQM3,Minecraft Turtle stairUp,hornedcommando,Lua,Thursday 2nd of May 2024 02:43:08 PM CDT,"--Desc: A turtle program which attempts to stair up through blocks, number of stairs defined by the user
-- Useful for making exits to mineshafts or traversing the nether
--By: hornedcommando and BadPunBananas

--TODO: currently it is hardcoded to only place dirtblocks, should be updated to a dict with at least cobble and netherack

local function input()
    while true do
        write(""How Many Stairs?\n"")
        size = tonumber(read())
        break
    end
end

local function isForbiddenBlock(blockName)
    local forbiddenBlocks = {
        ""forbidden_arcanus:stella_arcanum"",
        ""minecraft:bedrock""
    }
    for _, forbiddenBlock in ipairs(forbiddenBlocks) do
        if blockName == forbiddenBlock then
            return true
        end
    end
    return false
end

function searchInventory(name)
    for slot = 1, 16 do
        turtle.select(slot)
        local slotDetail = turtle.getItemDetail()
        if slotDetail and slotDetail.name:find(name) then
            return slot -- Return the slot number if item found
        end
    end
    return nil -- Return nil if item not found
end

function fill(name)
    local found, slot = searchInventory(name)
    if found then
        turtle.placeDown()  -- Place the block
        print(""Placed block:"", name)
    else
        print(""Block not found:"", name)
    end
end

--Function to refuel the turtle, attempts to maintain a specified fuel level, this could be adjusted based on abundance of fuel or time between fuel calls
local function smartRefuel()
    print(""Checking Fuel"")
    -- Check if fuel level is below 1000
    while turtle.getFuelLevel() < 1000 do
        print(""Refueling"")
        for slot = 1, 16 do
            turtle.select(slot) -- Select the slot
            if turtle.refuel(0) then
                -- Check if the selected item is a fuel
                turtle.refuel(1) -- Refuel with the selected item
                break -- Stop searching for fuel after refueling
            end
        end
    end
end

function gu()
    print(""Going up"")
    local success, block = turtle.inspectDown()
    if isForbiddenBlock(block.name) then
        print(""Detected block is forbidden"")
        return false
    else
        local success, block = turtle.inspectUp()
        if isForbiddenBlock(block.name) then
            print(""Detected block is forbidden"")
            return false
        else
            turtle.digUp()
            while not turtle.up() do
                print(""Digging up"")
                turtle.digUp()
            end
            turtle.digUp()
            return true
        end
    end

end

function gf()
    print(""Going forward"")
    local success, block = turtle.inspect()
    if isForbiddenBlock(block.name) then
        print(""Detected block is forbidden"")
        return false
    else
        while not turtle.forward() do
            print(""Digging forward"")
            turtle.dig()
        end
        if not turtle.inspectDown() then
            fill(""minecraft:dirt"")
        end
    end
end

function stair()
    for i = 1, size do
        gu()
        gf()
    end
end

input()
smartRefuel()
stair()"
XeFu5v1n,Algoritmi lezione 22 - ricerca binaria,fcamuso,C#,Thursday 2nd of May 2024 02:41:14 PM CDT,"#include <iostream>
#include <fstream>

#include <chrono>

using namespace std;

const int MAX_PAROLE = 500000;
const int MAX_CERCATE = 10000;

string vocabolario[MAX_PAROLE];
string da_cercare[MAX_CERCATE];

enum Stato {START, STOP};
auto Cronometro(Stato stato = Stato::START)
{
  static std::chrono::time_point<std::chrono::system_clock> inizio;
  static std::chrono::time_point<std::chrono::system_clock> fine;

  if (stato == Stato::START)
  {
    inizio = chrono::high_resolution_clock::now();
    fine = inizio;
  }
  else
    fine = chrono::high_resolution_clock::now();


  return chrono::duration_cast<std::chrono::milliseconds>(fine - inizio).count();
}

int leggi_file(string path_file, string v[], int capienza_vettore)
{
 //per leggere useremo un I-nput F-ile STREAM = IFSTREAM
  ifstream leggi(path_file); //il cosiddetto file handle (riferimento al file su disco)

  //test per successo apertura
  if (!leggi)
    throw runtime_error(""File non trovato\n"");

  //lettura una intera riga alla volta
  string riga="""";

  //getline restituisce false quando le righe sono finite
  int conta_righe = 0;
  while ( getline(leggi, riga) )
  {
    if (conta_righe>=capienza_vettore)
      throw runtime_error(""Capienza vettore insufficiente\n"");

    v[conta_righe] = riga;
    conta_righe++;
  }

  leggi.close(); leggi.clear();

  return conta_righe;

}

int partiziona(string v[], int inizio, int fine)
{
	string pivot = v[inizio];

	int cont = 0;
	for (int i = inizio + 1; i <= fine; i++) {
		if (v[i] <= pivot)
			cont++;
	}

	//mettiamo il pivot nella posizione che gli spetta
	int indice_pivot = inizio + cont;
	swap(v[indice_pivot], v[inizio]);


	// spostiamo gli elementi più piccoli del pivot alla sua sinistra
	// e quelli più grandi alla sua destra
	int i = inizio, j = fine;

	while (i < indice_pivot && j > indice_pivot) {

		while (v[i] <= pivot) {
			i++;
		}

		while (v[j] > pivot) {
			j--;
		}

		if (i < indice_pivot && j > indice_pivot) {
			swap(v[i], v[j]);
			i++; j--;
		}
	}
	//cout << string(40, '-') << ""\n\n"";

	return indice_pivot;
}

void quickSort(string v[], int inizio, int fine)
{

	if (inizio >= fine)
		return;


	int p = partiziona(v, inizio, fine);

  //tail recursion
  // ordina la parte a sinistra
	quickSort(v, inizio, p - 1);

	// ordina la parte a destra
	quickSort(v, p + 1, fine);

}

int ricerca_sequenziale(string cercata, string v[], int num_ele)
{
  for (int i=0; i<num_ele; i++)
    if (cercata==v[i]) return i;

  return -1;
}

int ricerca_binaria(string cercata, string v[], int num_stringhe)
{
   int inizio = 0;
   int fine = num_stringhe - 1;
   int pos_trovata = -1;

   while (inizio<=fine && pos_trovata==-1)
   {
     int mediano = (inizio+fine)/2;

     if (v[mediano] == cercata)
      pos_trovata=mediano;
     else
       if (v[mediano]<cercata)
         inizio = mediano+1;
       else
        fine = mediano - 1;
   }

   return pos_trovata;
}

int main()
{
  //quante parole contiene il dizionario? 481.816
  int numero_parole_vocabolario = leggi_file(""vocabolario3.txt"", vocabolario, MAX_PAROLE);


  //scegliamo tra queste 100000 parole da far poi cercare
  //(ammesse ripetizioni della stessa ricerca)
  for (int i=0; i<MAX_CERCATE; i++)
    da_cercare[i] = vocabolario[(rand()*rand()) % numero_parole_vocabolario];

  //sequenziale
  Cronometro(Stato::START);

  for (int i=0; i<MAX_CERCATE; i++)
    ricerca_sequenziale(da_cercare[i], vocabolario, numero_parole_vocabolario);

  cout << ""Tempo ricerca sequenziale: "" << Cronometro(Stato::STOP) <<""ms\n"";

   //binaria
  Cronometro(Stato::START);

  for (int i=0; i<MAX_CERCATE; i++)
    ricerca_binaria(da_cercare[i], vocabolario, numero_parole_vocabolario);

  cout << ""Tempo ricerca binaria: "" << Cronometro(Stato::STOP) <<""ms\n"";


    return 0;
}


"
C3cjNXa5,We are direct provider for BG/SBLC specifically for lease/sales,rsileaseconsult,C,Thursday 2nd of May 2024 02:29:36 PM CDT,"We are project funder as well as financial lender. We have BG/SBLC specifically for BUY/LEASE at a leasing price of 3+(0.5%+X) of face value Issuance by HSBC London and many other 25 top AA rated Bank in Europe, Middle East or USA. We also secure funding. Also We are into the provision of short term and long term business/personal loans for both small and large scale business funds.

* FOR LEASING OF BG/SBLC
MINIMUM FACE VALUE OF BG/SBLC = EUR/USD 1M
LEASING FEE = 3+(0.5%+X)

* FOR PURCHASE OF FRESH CUT BG/SBLC
PRICE = 32%+2%
MINIMUM FACE VALUE OF BG/SBLC = EUR/USD 1M

Kindly contact us for our procedures and be sure that we shall respond within 24hrs maximum.

Intermediaries/Consultants/Brokers are welcome to bring their clients and are 100% protected. In complete confidence, we will work together for the benefits of all parties involved.

Awaiting your response.
Best regards,
RAMESH SUBRAMANIAM IYER  
Contact: rsi.leaseconsult@gmail.com
Skype ID: rsi.leaseconsult"
Jr7Vb4dx,Roblox Aimbot script/ESP PANDORA.CC #1 CHEAT,MrScripter2,Bash,Thursday 2nd of May 2024 01:42:47 PM CDT,"local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = ""Pandora.cc"",
    LoadingTitle = ""Loading . . . PANDORA INJECTED"",
    LoadingSubtitle = ""By OnYx/Chunk"",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil,
       FileName = ""Pandora.cc""
    },
    Discord = {
       Enabled = false,
       Invite = ""noinvitelink"",
       RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
       Title = ""Untitled"",
       Subtitle = ""Key System"",
       Note = ""No method of obtaining the key is provided"",
       FileName = ""Key"",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = {""Hello""}
    }
 })

 local MainTab = Window:CreateTab(""🔫 Aimbot 🔫"", nill)
 local MainSection = MainTab:CreateSection(""Main"")

 Rayfield:Notify({
    Title = ""Executed Pandora.cc"",
    Content = ""Have Fun with Pandora.cc"",
    Duration = 2.5,
    Image = nill,
    Actions = {
       Ignore = {
          Name = ""I will sub"",
          Callback = function()
          print(""The user tapped I will sub"")
       end
    },
 },
 })

 local Button = MainTab:CreateButton({
    Name = ""Aimbot"",
    Callback = function()
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/Exunys/Aimbot-Script/main/Aimbot%20Script%20(Without%20FOV).lua""))()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = ""ESP"",
    Callback = function()
        local Holder = Instance.new(""Folder"", game.CoreGui)
Holder.Name = ""ESP""

local Box = Instance.new(""BoxHandleAdornment"")
Box.Name = ""nilBox""
Box.Size = Vector3.new(4, 7, 4)
Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
Box.Transparency = 0.7
Box.ZIndex = 0
Box.AlwaysOnTop = true
Box.Visible = true

local NameTag = Instance.new(""BillboardGui"")
NameTag.Name = ""nilNameTag""
NameTag.Enabled = false
NameTag.Size = UDim2.new(0, 200, 0, 50)
NameTag.AlwaysOnTop = true
NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
local Tag = Instance.new(""TextLabel"", NameTag)
Tag.Name = ""Tag""
Tag.BackgroundTransparency = 1
Tag.Position = UDim2.new(0, -50, 0, 0)
Tag.Size = UDim2.new(0, 300, 0, 20)
Tag.TextSize = 20
Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
Tag.TextStrokeTransparency = 0.4
Tag.Text = ""nil""
Tag.Font = Enum.Font.SourceSansBold
Tag.TextScaled = false

local LoadCharacter = function(v)
	repeat wait() until v.Character ~= nil
	v.Character:WaitForChild(""Humanoid"")
	local vHolder = Holder:FindFirstChild(v.Name)
	vHolder:ClearAllChildren()
	local b = Box:Clone()
	b.Name = v.Name .. ""Box""
	b.Adornee = v.Character
	b.Parent = vHolder
	local t = NameTag:Clone()
	t.Name = v.Name .. ""NameTag""
	t.Enabled = true
	t.Parent = vHolder
	t.Adornee = v.Character:WaitForChild(""Head"", 5)
	if not t.Adornee then
		return UnloadCharacter(v)
	end
	t.Tag.Text = v.Name
	b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
	t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
	local Update
	local UpdateNameTag = function()
		if not pcall(function()
			v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			local maxh = math.floor(v.Character.Humanoid.MaxHealth)
			local h = math.floor(v.Character.Humanoid.Health)
			t.Tag.Text = v.Name .. ""\n"" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or ""0"") .. ""%  "" .. tostring(h) .. ""/"" .. tostring(maxh)
		end) then
			Update:Disconnect()
		end
	end
	UpdateNameTag()
	Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
end

local UnloadCharacter = function(v)
	local vHolder = Holder:FindFirstChild(v.Name)
	if vHolder and (vHolder:FindFirstChild(v.Name .. ""Box"") ~= nil or vHolder:FindFirstChild(v.Name .. ""NameTag"") ~= nil) then
		vHolder:ClearAllChildren()
	end
end

local LoadPlayer = function(v)
	local vHolder = Instance.new(""Folder"", Holder)
	vHolder.Name = v.Name
	v.CharacterAdded:Connect(function()
		pcall(LoadCharacter, v)
	end)
	v.CharacterRemoving:Connect(function()
		pcall(UnloadCharacter, v)
	end)
	v.Changed:Connect(function(prop)
		if prop == ""TeamColor"" then
			UnloadCharacter(v)
			wait()
			LoadCharacter(v)
		end
	end)
	LoadCharacter(v)
end

local UnloadPlayer = function(v)
	UnloadCharacter(v)
	local vHolder = Holder:FindFirstChild(v.Name)
	if vHolder then
		vHolder:Destroy()
	end
end

for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
	spawn(function() pcall(LoadPlayer, v) end)
end

game:GetService(""Players"").PlayerAdded:Connect(function(v)
	pcall(LoadPlayer, v)
end)

game:GetService(""Players"").PlayerRemoving:Connect(function(v)
	pcall(UnloadPlayer, v)
end)

game:GetService(""Players"").LocalPlayer.NameDisplayDistance = 0
    end,
 })

 local Button = MainTab:CreateButton({
    Name = ""Box ESP"",
    Callback = function()
        local plr = game.Players.LocalPlayer
        local camera = game.Workspace.CurrentCamera
        
        for i, v in pairs(game.Players:GetChildren()) do
            local Top = Drawing.new(""Line"")
            Top.Visible = false
            Top.From = Vector2.new(0, 0)
            Top.To = Vector2.new(200, 200)
            Top.Color = Color3.fromRGB(255, 0, 0)
            Top.Thickness = 2
            Top.Transparency = 1
        
            local Bottom = Drawing.new(""Line"")
            Bottom.Visible = false
            Bottom.From = Vector2.new(0, 0)
            Bottom.To = Vector2.new(200, 200)
            Bottom.Color = Color3.fromRGB(255, 0, 0)
            Bottom.Thickness = 2
            Bottom.Transparency = 1
        
            local Left = Drawing.new(""Line"")
            Left.Visible = false
            Left.From = Vector2.new(0, 0)
            Left.To = Vector2.new(200, 200)
            Left.Color = Color3.fromRGB(255, 0, 0)
            Left.Thickness = 2
            Left.Transparency = 1
        
            local Right = Drawing.new(""Line"")
            Right.Visible = false
            Right.From = Vector2.new(0, 0)
            Right.To = Vector2.new(200, 200)
            Right.Color = Color3.fromRGB(255, 0, 0)
            Right.Thickness = 2
            Right.Transparency = 1
        
            function ESP()
                local connection
                connection = game:GetService(""RunService"").RenderStepped:Connect(function()
                    if v.Character ~= nil and v.Character:FindFirstChild(""HumanoidRootPart"") ~= nil and v.Name ~= plr.Name  and v.Character.Humanoid.Health > 0 then 
                        local ScreenPos, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                        if OnScreen then
                            local Scale = v.Character.Head.Size.Y/2
                            local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                            local humpos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                            local TL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                            local TR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                            local BL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                            local BR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)
        
                            Top.From = Vector2.new(TL.X, TL.Y)
                            Top.To = Vector2.new(TR.X, TR.Y)
        
                            Left.From = Vector2.new(TL.X, TL.Y)
                            Left.To = Vector2.new(BL.X, BL.Y)
        
                            Right.From = Vector2.new(TR.X, TR.Y)
                            Right.To = Vector2.new(BR.X, BR.Y)
        
                            Bottom.From = Vector2.new(BL.X, BL.Y)
                            Bottom.To = Vector2.new(BR.X, BR.Y)
        
                            if v.TeamColor == plr.TeamColor then
                                Top.Color = Color3.fromRGB(0, 255, 0)
                                Left.Color = Color3.fromRGB(0, 255, 0)
                                Bottom.Color = Color3.fromRGB(0, 255, 0)
                                Right.Color = Color3.fromRGB(0, 255, 0)
                            else 
                                Top.Color = Color3.fromRGB(255, 0, 0)
                                Left.Color = Color3.fromRGB(255, 0, 0)
                                Bottom.Color = Color3.fromRGB(255, 0, 0)
                                Right.Color = Color3.fromRGB(255, 0, 0)
                            end
        
                            Top.Visible = true
                            Left.Visible = true
                            Bottom.Visible = true
                            Right.Visible = true
                        else 
                            Top.Visible = false
                            Left.Visible = false
                            Bottom.Visible = false
                            Right.Visible = false
                        end
                    else 
                        Top.Visible = false
                        Left.Visible = false
                        Bottom.Visible = false
                        Right.Visible = false
                        if game.Players:FindFirstChild(v.Name) == nil then
                            connection:Disconnect()
                        end
                    end
                end)
            end
            coroutine.wrap(ESP)()
        end
        
        game.Players.PlayerAdded:Connect(function(newplr) --Parameter gets the new player that has been added
            local Top = Drawing.new(""Line"")
            Top.Visible = false
            Top.From = Vector2.new(0, 0)
            Top.To = Vector2.new(200, 200)
            Top.Color = Color3.fromRGB(255, 0, 0)
            Top.Thickness = 2
            Top.Transparency = 1
        
            local Bottom = Drawing.new(""Line"")
            Bottom.Visible = false
            Bottom.From = Vector2.new(0, 0)
            Bottom.To = Vector2.new(200, 200)
            Bottom.Color = Color3.fromRGB(255, 0, 0)
            Bottom.Thickness = 2
            Bottom.Transparency = 1
        
            local Left = Drawing.new(""Line"")
            Left.Visible = false
            Left.From = Vector2.new(0, 0)
            Left.To = Vector2.new(200, 200)
            Left.Color = Color3.fromRGB(255, 0, 0)
            Left.Thickness = 2
            Left.Transparency = 1
        
            local Right = Drawing.new(""Line"")
            Right.Visible = false
            Right.From = Vector2.new(0, 0)
            Right.To = Vector2.new(200, 200)
            Right.Color = Color3.fromRGB(255, 0, 0)
            Right.Thickness = 2
            Right.Transparency = 1
        
            function ESP()
                local connection
                connection = game:GetService(""RunService"").RenderStepped:Connect(function()
                    if newplr.Character ~= nil and newplr.Character:FindFirstChild(""HumanoidRootPart"") ~= nil and newplr.Name ~= plr.Name  and newplr.Character.Humanoid.Health > 0 then
                        local ScreenPos, OnScreen = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                        if OnScreen then
                            local Scale = newplr.Character.Head.Size.Y/2
                            local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                            local humpos = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                            local TL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                            local TR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                            local BL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                            local BR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)
        
                            Top.From = Vector2.new(TL.X, TL.Y)
                            Top.To = Vector2.new(TR.X, TR.Y)
        
                            Left.From = Vector2.new(TL.X, TL.Y)
                            Left.To = Vector2.new(BL.X, BL.Y)
        
                            Right.From = Vector2.new(TR.X, TR.Y)
                            Right.To = Vector2.new(BR.X, BR.Y)
        
                            Bottom.From = Vector2.new(BL.X, BL.Y)
                            Bottom.To = Vector2.new(BR.X, BR.Y)
        
                            if newplr.TeamColor == plr.TeamColor then
                                Top.Color = Color3.fromRGB(0, 255, 0)
                                Left.Color = Color3.fromRGB(0, 255, 0)
                                Bottom.Color = Color3.fromRGB(0, 255, 0)
                                Right.Color = Color3.fromRGB(0, 255, 0)
                            else 
                                Top.Color = Color3.fromRGB(255, 0, 0)
                                Left.Color = Color3.fromRGB(255, 0, 0)
                                Bottom.Color = Color3.fromRGB(255, 0, 0)
                                Right.Color = Color3.fromRGB(255, 0, 0)
                            end
        
                            Top.Visible = true
                            Left.Visible = true
                            Bottom.Visible = true
                            Right.Visible = true
                        else 
                            Top.Visible = false
                            Left.Visible = false
                            Bottom.Visible = false
                            Right.Visible = false
                        end
                    else 
                        Top.Visible = false
                        Left.Visible = false
                        Bottom.Visible = false
                        Right.Visible = false
                        if game.Players:FindFirstChild(newplr.Name) == nil then
                            connection:Disconnect()
                        end
                    end
                end)
            end
            coroutine.wrap(ESP)()
        end)
    end,
 })"
4ZhXAaJs,Servo Control rev_02,pleasedontcode,Arduino,Thursday 2nd of May 2024 01:30:45 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Servo Control
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-02 18:26:24

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* stream video over webserver, save videos and pic */
	/* to sd card, pan camera using the servo to follow */
	/* objects also do face recognition, set video */
	/* resolutio to 480p */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Deneyap_Servo.h> // https://github.com/deneyapkart/deneyap-servo-arduino-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t sg90_Servomotor_PWMSignal_PIN_D4 = 4;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t sg90_Servomotor_PWMSignal_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float sg90_Servomotor_PWMSignal_PIN_D4_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo myservo; // Servo object instance from Deneyap Servo library

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sg90_Servomotor_PWMSignal_PIN_D4, OUTPUT);

    myservo.attach(9); // Attaching servo motor to pin 9

    // Additional setup for system requirements
    // Initialize SD card for saving videos and pictures
    // Set video resolution to 480p
    // Perform face recognition setup
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data

    // Additional code for system requirements
    // Stream video over webserver
    // Pan camera using the servo to follow objects
}

void updateOutputs(void)
{
    analogWrite(sg90_Servomotor_PWMSignal_PIN_D4, sg90_Servomotor_PWMSignal_PIN_D4_rawData);
}
"
d6n8rPrN,A*,maxim_shlyahtin,C++,Thursday 2nd of May 2024 01:28:29 PM CDT,"#include <iostream>
#include <vector>
#include <map>
#include <queue>
#include <cmath>
#include <climits>

using namespace std;

// Структура для хранения информации о вершине
struct Vertex {
    double g = numeric_limits<double>::max(); // Стоимость пути от начальной вершины до данной
    double h; // Эвристическая оценка стоимости пути от данной вершины до конечной
    double f; // Общая стоимость пути (g + h)
    char parent; // Родительская вершина в пути
};

// Структура для сравнения вершин в очереди
struct Compare {
    bool operator()(const pair<char, Vertex>& a, const pair<char, Vertex>& b) {
        return a.second.f > b.second.f;
    }
};

// Функция для вычисления эвристической оценки
double heuristic(char a, char b) {
    return abs(a - b);
}

string aStar(map<char, vector<pair<char, double>>>& graph, char start, char goal) {
    map<char, Vertex> vertices;
    priority_queue<pair<char, Vertex>, vector<pair<char, Vertex>>, Compare> pq;

    // Инициализация начальной вершины
    vertices[start].g = 0;
    vertices[start].h = heuristic(start, goal);
    vertices[start].f = vertices[start].g + vertices[start].h;
    vertices[start].parent = ' ';
    pq.push({ start, vertices[start] });

    while (!pq.empty()) {
        char current = pq.top().first;
        pq.pop();

        if (current == goal) {
            string path;
            while (current != ' ') {
                path = current + path;
                current = vertices[current].parent;
            }
            return path;
        }

        for (auto& neighbor : graph[current]) {
            char next = neighbor.first;
            double tentative_g = vertices[current].g + neighbor.second;

            //cout << next << ' ' << tentative_g << ' ' << vertices[next].g << '\n';

            if (tentative_g < vertices[next].g) {
                vertices[next].g = tentative_g;
                vertices[next].h = heuristic(next, goal);
                vertices[next].f = vertices[next].g + vertices[next].h;
                vertices[next].parent = current;
                pq.push({ next, vertices[next] });
            }
        }

        //cout << current << '\n';
    }

    return ""No path found"";
}

int main() {
    map<char, vector<pair<char, double>>> graph;
    char start, goal;
    cin >> start >> goal;

    char from, to;
    double weight;
    while (cin >> from >> to >> weight) {
        graph[from].insert(graph[from].end(), {make_pair(to, weight)});
    }

    /*for (const auto& vert : graph) {
        std::cout << ""vert = "" << vert.first << '\n';
        for (const auto& pair : vert.second) {
            std::cout << "" end vert = "" << pair.first << "" weight = "" << pair.second;
        }
        std::cout << ""\n"";
    }*/

    string path = aStar(graph, start, goal);
    cout << path << endl;

    return 0;
}
"
KjK66J99,Servo Control rev_01,pleasedontcode,Arduino,Thursday 2nd of May 2024 01:23:12 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Servo Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-02 18:21:58

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* stream video over webserver, save videos and pic */
	/* to sd card, pan camera using the servo to follow */
	/* objects also do face recognition, set video */
	/* resolutio to 480p */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Deneyap_Servo.h> // https://github.com/deneyapkart/deneyap-servo-arduino-library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t sg90_Servomotor_PWMSignal_PIN_D4 = 4;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t sg90_Servomotor_PWMSignal_PIN_D4_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float sg90_Servomotor_PWMSignal_PIN_D4_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo myservo; // Servo object instance from Deneyap Servo library

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sg90_Servomotor_PWMSignal_PIN_D4, OUTPUT);

    myservo.attach(D9); // Attaching servo motor to pin D9

    // Additional setup for system requirements
    // Initialize SD card for saving videos and pictures
    // Set video resolution to 480p
    // Perform face recognition setup
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data

    // Additional code for system requirements
    // Stream video over webserver
    // Pan camera using the servo to follow objects
}

void updateOutputs(void)
{
    analogWrite(sg90_Servomotor_PWMSignal_PIN_D4, sg90_Servomotor_PWMSignal_PIN_D4_rawData);
}
"
Rt9gPM3w,The Ascension Tree Auto,spotky,JavaScript,Thursday 2nd of May 2024 01:20:17 PM CDT,"// ==UserScript==
// @name         Auto Game
// @namespace    http://tampermonkey.net/
// @version      2024-05-02
// @description  try to take over the world!
// @author       You
// @match        https://ascensiontree.semenar.am/
// @icon         https://www.google.com/s2/favicons?sz=64&domain=semenar.am
// @grant        none
// ==/UserScript==

(function() {
'use strict';
function autoTick() {
  for (const layer of player.layers) autoLayer(layer);
}

function isAllUpgradeBought(layer) {
    return Object.values(layer.upgrades).every(upgrade => upgrade.bought)
}

function autoLayer(layer) {
  if (
      layer.left_branch &&
      layer.right_branch &&
      isAllUpgradeBought(layer)
  ) return;

  if (!layer.left_branch) layer.buyLeft();
  if (!layer.right_branch) layer.buyRight();
  const production = layer.calculateProduction(0);
  if (
    layer.canPrestige() &&
    isAllUpgradeBought(layer.parent_layer) &&
    (
        layer.points.eq(0) ||
        layer.prestigeGain().div(production.max(1)).gte(3) && Math.random() > 0.5 ||
        production.eq(0)
    )
  ) {
    layer.prestige();
  }
  for (const upgradeKey in layer.upgrades) {
    const upgrade = layer.upgrades[upgradeKey];
    if (!upgrade.canBuy() || upgrade.bought) continue;
    upgrade.buy();
  }
}

setInterval(autoTick, 50);
})();"
LTRduM2R,RSP tkinter + OOP,plarmi,Python,Thursday 2nd of May 2024 01:20:01 PM CDT,"from tkinter import *
from random import randint

class Main(Frame):
    def __init__(self, root):
        super().__init__(root)
        self.startUI(root)

    def startUI(self, root):
        btn = Button(root, text=""Камень"", font=(""Times New Roman"", 15), command=lambda x=1: self.btn_click(x))
        btn2 = Button(root, text=""Ножницы"", font=(""Times New Roman"", 15), command=lambda x=2: self.btn_click(x))
        btn3 = Button(root, text=""Бумага"", font=(""Times New Roman"", 15), command=lambda x=3: self.btn_click(x))

        btn.place(x=10, y=100, width=120, height=50)
        btn2.place(x=155, y=100, width=120, height=50)
        btn3.place(x=300, y=100, width=120, height=50)

        self.lbl = Label(root, text=""Начало игры!"", bg=""white"", font=(""Times New Roman"", 21, ""bold""))
        self.lbl.place(x=150, y=25)

        self.win = self.drow = self.lose = 0

        self.lbl2 = Label(root, justify=""left"", font=(""Times New Roman"", 13), bg=""white"", text=f""Побед: {self.win}\n""
                                                                                f""Проигрышей: {self.lose}\n""
                                                                                f""Ничей: {self.drow}"")
        self.lbl2.place(x=5, y=5)

    def btn_click(self, choice):
        # 1 - камень, 2 - ножницы, 3 - бумага
        comp_choice = randint(1, 3)
        print(comp_choice)

        if choice == comp_choice:
            self.drow += 1
            self.lbl.config(text=""Ничья"")
        elif comp_choice == 1 and choice == 3 or comp_choice == 2 and choice == 1 or comp_choice == 3 and choice == 2:
            self.win += 1
            self.lbl.config(text=""Победа"")
        else:
            self.lose += 1
            self.lbl.config(text=""Проигрыш"")

        self.lbl2.config(text=f""Побед: {self.win}\n""
                              f""Проигрышей: {self.lose}\n""
                              f""Ничей: {self.drow}"")

        del comp_choice



window = Tk()
window.geometry(""430x160+200+200"")
window.title(""Камень, ножницы, бумага"")
window.resizable(False, False)
window.config(bg=""white"")

window2 = Tk()
window2.geometry(""430x160+200+200"")
window2.title(""Камень, ножницы, бумага2"")
window2.resizable(False, False)
window2.config(bg=""white"")

app = Main(window)
app.pack()

app2 = Main(window2)
app2.pack()

window.mainloop()"
59qwkiNG,Roblox Script Loader/Auth,quikzyYTbtw,Lua,Thursday 2nd of May 2024 01:18:14 PM CDT,"--[[
This script loads and executes different scripts based on the game's place ID, with the option to turn off game check for loading universal scripts

The script loads and executes scripts based on the place ID of the Roblox game you're playing.
It verifies the place ID to ensure the correct game is being played. If the place ID doesn't match, authentication fails.
If there's an error in the script or authentication fails, the main script doesn't load.
]]


-- Config
getgenv().gamesConfig = {
    {
        gameName = ""A literal baseplate"",
        placeId = 4483381587,
        ConfigScript = [[ --script in here]]
    },
    {
        gameName = ""Game Placeholder"",
        placeId = 0000000000, 
        ConfigScript = [[ --script in here  ]]
    },
    -- Add more games if needed!
}

getgenv().logo = [[
    Welcome to
        ____   ____                             _________            .__        __          
        \   \ /   /____   ____   _______  ___  /   _____/ ___________|__|______/  |_  ______
         \   Y   // __ \ /    \ /  _ \  \/  /  \_____  \_/ ___\_  __ \  \____ \   __\/  ___/
          \     /\  ___/|   |  (  <_> >    <   /        \  \___|  | \/  |  |_> >  |  \___ \ 
           \___/  \___  >___|  /\____/__/\_ \ /_______  /\___  >__|  |__|   __/|__| /____  >
                      \/     \/            \/         \/     \/         |__|             \/ 
                                        discord.gg/
         [*] made by venox.w#0

    ]]

getgenv().ScriptName = ""Script Name Here""                         --name of your script
getgenv().gamechecker = true                                      --game placeid checker on/off (true/false)
getgenv().UniversalScript = [[ -- script in here ]]               --script to execute when gamechecker off

-- Loader
loadstring(game:HttpGet((""https://raw.githubusercontent.com/venoxhh/LoaderV1/main/Loader.lua"")))()
"
Nf2NHSnw,Yahtzee Game,makispaiktis,Python,Thursday 2nd of May 2024 01:14:42 PM CDT,"# 1. Global variables
valid_combs = [""1. Ones"", ""2. Twos"", ""3. Threes"", ""4. Fours"", ""5. Fives"", ""6. Sixes"", ""7. Three of a kind"", ""8. Four of a kind"", ""9. Full House"", ""10.Small Straight"", ""11. Large Straight"", ""12. Yahtzee"", ""13. Chance""]
valid_rules = [""Sum of aces"", ""Sum of twos"", ""Sum of threes"", ""Sum of fours"", ""Sum of fives"", ""Sum of sixes"", ""Sum of all dice"", ""Sum of all dice"", ""25"", ""30"", ""40"", ""50"", ""Sum of all dice""]
LEN = len(valid_combs)


# 2. Auxiliary Functions
def count(pentada):
    # Count how many 1s, 2s, ...., 6s there are
    counters = list()
    for i in range(1, 7):
        counters.append(pentada.count(i))
    return counters

def score(pentada, rule):

    if rule in list(range(1, 7)):
        return rule * pentada.count(rule)

    elif rule == 7:
      # Three of a kind
      counters = count(pentada)
      return sum(pentada) if ((3 in counters) or (4 in counters) or (5 in counters)) else 0

    elif rule == 8:
        # Four of a kind
        counters = count(pentada)
        return sum(pentada) if ((4 in counters) or (5 in counters)) else 0

    elif rule == 9:
        # Full House
        counters = count(pentada)
        counters = sorted(counters, reverse=True)
        return 25 if counters == [3, 2, 0, 0, 0, 0] else 0

    elif rule == 10:
        # Small Straight = 1-2-3-4 or 2-3-4-5 or 3-4-5-6
        pentada = set(pentada)
        valids = [{1,2,3,4}, {2,3,4,5}, {3,4,5,6}]
        for valid in valids:
            if valid.issubset(pentada):
                return 30
        return 0

    elif rule == 11:
        # Large Straight = 1-2-3-4-5 or 2-3-4-5-6
        counters = count(pentada)
        counters = sorted(counters, reverse=True)
        return 40 if counters == [1, 1, 1, 1, 1, 0] else 0

    elif rule == 12:
        # Yahtzee
        counters = count(pentada)
        counters = sorted(counters, reverse=True)
        return 50 if counters == [5, 0, 0, 0, 0, 0] else 0

    elif rule == 13:
        # Chance
        return sum(pentada)

num_combs = list(range(1, LEN + 1))
def decide(num_combs_used, dices, player, points):
    declaration = """"
    for num_comb in num_combs:
        if num_comb not in num_combs_used:
            declaration = declaration + valid_combs[num_comb - 1] + "", ""
    if declaration:
        declaration = declaration[:-2]
    print(""!!!! Available combinations !!!!\n"", declaration)

    rule = int(input(""Select combination: ""))
    while rule in num_combs_used:
        rule = int(input(""Select combination: ""))

    num_combs_used.append(rule)
    new_points = score(dices, rule)
    COMB = valid_combs[rule - 1]
    STR = COMB[3:]
    points = points + new_points
    print(f""{player} scored {new_points} points with {STR} ----> Total points = {points}"")
    return points, num_combs_used


# 3. Playing Functions
from random import randrange
import copy
def roll(N):
    return [randrange(1, 7) for i in range(N)]

rerolls_permitted = 2

def show(dices, round, rerolls_used, player):
    # print(40 * ""*"")
    print(f""{rerolls_permitted - rerolls_used} rerolls left for {player} in round {round}:"")
    dices_str = [str(elem) for elem in dices]
    dice_show = "" - "".join(dices_str)
    print(f""{player} threw:\t {dice_show}\n"")

def rerolls0(player, rerolls_used, N, round, points, num_combs_used):
    print(f""\n\n----> {player}'s turn ({points} points)    -    Combinations used = {num_combs_used}"")
    dices = roll(N)
    show(dices, round, rerolls_used, player)
    return dices

def rerolls1(player, rerolls_used, N, round, dices, positions):
    positions = positions.split("", "")
    positions = [int(position) for position in positions]
    new_rolls = roll(len(positions))
    # Checking if positions are between 1 and N - Invalid input, then dices are not changed
    for position in positions:
        if position not in list(range(1, N+1)):
            return dices
    # Changing the dices
    for i in range(len(positions)):
        index = positions[i] - 1
        value = new_rolls[i]
        dices[index] = value
    show(dices, round, rerolls_used, player)
    return dices


# MAIN FUNCTION
players = [""Thomas"", ""PC""]
num_combs_used_list = [[], []]
points_list = [0, 0]
N = 5
bold_start = ""\033[1m""
bold_end = ""\033[0;0m""

for round in list(range(1, LEN + 1)):
    print(20 * ""*"", 20 * ""*"", sep=f"" Round {round} "", end=""\n"")
    for i, player in enumerate(players):

          num_combs_used = num_combs_used_list[i]
          points = points_list[i]

          rerolls_used = 0
          dices = rerolls0(player, rerolls_used, N, round, points, num_combs_used)
          positions = input(""Positions to reroll: "")
          if positions == """":
              # print(""Time to decide (0 rerolls used)\n"")
              points, num_combs_used = decide(num_combs_used, dices, player, points)
              continue
          else:
              rerolls_used = 1

          dices = rerolls1(player, rerolls_used, N, round, dices, positions)
          positions = input(""Positions to reroll:\n"")
          if positions == """":
              # print(""Time to decide (1 reroll used)\n"")
              points, num_combs_used = decide(num_combs_used, dices, player, points)
              continue
          else:
              rerolls_used = 2

          dices = rerolls1(player, rerolls_used, N, round, dices, positions)
          points, num_combs_used = decide(num_combs_used, dices, player, points)

          # UPDATE THE VALUES OF LISTS
          num_combs_used_list[i] = num_combs_used
          points_list[i] = points
    print(""\n\n\n\n"")"
i90APD1u,line follower 2,NaroxEG,C++,Thursday 2nd of May 2024 01:00:22 PM CDT,"// Define motor pins
#define leftMotorForward 3
#define leftMotorBackward 4
#define leftMotorSpeed 5
#define rightMotorForward 6
#define rightMotorBackward 7
#define rightMotorSpeed 8

#define leftSensorPin 10
#define middleSensorPin 11
#define rightSensorPin 12

float kp = 1;
int setpoint = 100;
int initialSpeed = 75;

void setup() {
  pinMode(leftMotorForward, OUTPUT);
  pinMode(leftMotorBackward, OUTPUT);
  pinMode(leftMotorSpeed, OUTPUT);
  pinMode(rightMotorForward, OUTPUT);
  pinMode(rightMotorBackward, OUTPUT);
  pinMode(rightMotorSpeed, OUTPUT);

  pinMode(leftSensorPin, INPUT);
  pinMode(middleSensorPin, INPUT);
  pinMode(rightSensorPin, INPUT);
}

void loop() {
  int leftSensorValue = digitalRead(leftSensorPin);
  int middleSensorValue = digitalRead(middleSensorPin);
  int rightSensorValue = digitalRead(rightSensorPin);

  float position = (leftSensorValue * 0 + middleSensorValue * 100 + rightSensorValue * 200) / (leftSensorValue + middleSensorValue + rightSensorValue);

  float error = position - setpoint;
  float output = kp * error;

  // After drawing my chart, I found that having negative error means left is triggered so car needs to go left a bit, and positive error is opposite
  // So here motor speeds depends on if there is an error or not, if so we need to move slower until we handle the error

  // لو الخطأ كان سالب يبقى عايز اروح شمال بالشكل ده الموتور الشمال هيكون أبطأ و اليمين أسرع 
  // لو الخطأ موجب يبقى عايز اروح يمين ف بالشكل ده الشمال هيكون اسرع و اليمين ابطأ
  int leftMotorSpeedValue = initialSpeed + output;
  int RightMotorSpeedValue = initialSpeed - output;
  
  // If I've added value to left motor so It should be moving forward, so it's greater than 0 for sure, and vice versa
  if (leftMotorSpeedValue >= 0) {
    digitalWrite(leftMotorForward, HIGH);
    digitalWrite(leftMotorBackward, LOW);
  } else {
    digitalWrite(leftMotorForward, LOW);
    digitalWrite(leftMotorBackward, HIGH);
  }

  if (RightMotorSpeedValue >= 0) {
    digitalWrite(rightMotorForward, HIGH);
    digitalWrite(rightMotorBackward, LOW);
  } else {
    digitalWrite(rightMotorForward, LOW);
    digitalWrite(rightMotorBackward, HIGH);
  }

  // Making sure to take the less value (If motor speed greater than 255 it should take 255 which is highest PWM value)
  analogWrite(leftMotorSpeed, min(abs(leftMotorSpeedValue), 255));
  analogWrite(RightMotorSpeed, min(abs(RightMotorSpeedValue), 255));
}
"
TNeZk0pA,"Script for Upgrade GCC to Version 7.3, Install Composer, and Upgrade PHP to Version 8.2",enieto87,Bash,Thursday 2nd of May 2024 12:51:18 PM CDT,"#!/bin/sh
# Script for Upgrade GCC to Version 7.3, Install Composer, and Upgrade PHP to Version 8.2
# For CentOS 7.9
# ENL and ESJ for ever and ever... 
yum install -y wget bzip2 gcc gcc-c++
cd /tmp
wget http://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-7.3.0/gcc-7.3.0.tar.gz
tar zxf gcc-7.3.0.tar.gz
cd gcc-7.3.0
./contrib/download_prerequisites
./configure --disable-multilib --enable-languages=c,c++
make -j 4
make install
gcc --version
cd /tmp
rm -rf gcc-7.3.0.tar.gz
cd ~
sudo yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum install yum-utils
sudo yum-config-manager --enable remi-php82
sudo yum -y install httpd mod_ssl postfix dovecot dovecot-mysql php php-fpm php-mysql php-opcache php-xml php-xmlrpc php-imap php-mbstring php-common php-gd php-json php-cli php-pdo php-zip wget unzip 7zip -y
php -r ""copy('https://getcomposer.org/installer', 'composer-setup.php');""
HASH=""$(wget -q -O - https://composer.github.io/installer.sig)""
php -r ""if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;""
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
Q4KPZv4a,Autonomie v0.2,Thoughtcoder411,Python,Thursday 2nd of May 2024 12:42:05 PM CDT,"import tkinter as tk
from pynput import mouse, keyboard
import time
import threading
import shelve
import os
from tkinter import messagebox, simpledialog, Listbox

class MouseRecorderGUI:
    def __init__(self, root):
        self.root = root
        self.recorded_events = []
        self.recording = False
        self.playback_thread = None
        self.playback_stop_requested = False
        self.loop_counter = 0
        self.start_time = None
        self.recordings_dir = self.get_recordings_dir()
        self.create_gui()
        self.create_hotkey_listener()

    def get_recordings_dir(self):
        dir_name = ""recordings""
        os.makedirs(dir_name, exist_ok=True)
        return dir_name

    def create_hotkey_listener(self):
        # Define the hotkeys
        self.hotkeys = {
            'start': '<ctrl>+<alt>+s',
            'stop': '<ctrl>+<alt>+t',
            'save': '<ctrl>+<alt>+e',
            'load': '<ctrl>+<alt>+l',
            'playback': '<ctrl>+<alt>+p',
            'record_mouse': '<ctrl>+<alt>+m',
            'record_keyboard': '<ctrl>+<alt>+k',
            'record_both': '<ctrl>+<alt>+b'
        }
        self.keyboard_listener = keyboard.GlobalHotKeys(self.create_hotkey_callbacks())
        self.keyboard_listener.start()

    def create_gui(self):
        # Create the GUI elements here
        self.event_listbox = tk.Listbox(self.root, width=50, height=15)
        self.start_button = tk.Button(self.root, text=""Start Recording"", command=self.start_recording)
        self.stop_button = tk.Button(self.root, text=""Stop Recording"", state=tk.DISABLED, command=self.stop_recording)
        self.playback_button = tk.Button(self.root, text=""Playback"", state=tk.DISABLED, command=self.start_playback)
        self.save_button = tk.Button(self.root, text=""Save"", state=tk.DISABLED, command=self.save_events)
        self.load_button = tk.Button(self.root, text=""Load"", command=self.load_events)
        self.loop_counter_label = tk.Label(self.root, text=""Loop Count: 0"")
        self.repeat_count_spinbox = tk.Spinbox(self.root, from_=1, to=100, width=5)
        self.playback_speed_scale = tk.Scale(self.root, from_=0.1, to=2.0, resolution=0.1, orient=tk.HORIZONTAL)
        self.configure_playback_button = tk.Button(self.root, text=""Configure Playback"", command=self.configure_playback)

        # Pack GUI elements here
        self.event_listbox.pack()
        self.start_button.pack()
        self.stop_button.pack()
        self.playback_button.pack()
        self.save_button.pack()
        self.load_button.pack()
        self.loop_counter_label.pack()
        self.repeat_count_spinbox.pack()
        self.playback_speed_scale.pack()
        self.configure_playback_button.pack()

    def create_hotkey_callbacks(self):
        # Hotkey callbacks
        return {
            self.hotkeys['start']: self.start_recording,
            self.hotkeys['stop']: self.stop_recording,
            self.hotkeys['save']: self.save_events,
            self.hotkeys['load']: self.load_events,
            self.hotkeys['playback']: self.start_playback_from_hotkey,
            self.hotkeys['record_mouse']: lambda: self.start_recording(record_mouse=True),
            self.hotkeys['record_keyboard']: lambda: self.start_recording(record_keyboard=True),
            self.hotkeys['record_both']: lambda: self.start_recording(record_mouse=True, record_keyboard=True)
        }

    def start_recording(self, record_mouse=False, record_keyboard=False):
        if not self.recording:
            self.recording = True
            self.recorded_events = []
            self.start_time = time.time()
            if record_mouse:
                self.mouse_listener = mouse.Listener(on_click=self.on_click, on_move=self.on_move)
                self.mouse_listener.start()
            if record_keyboard:
                self.keyboard_listener = keyboard.Listener(on_press=self.on_press)
                self.keyboard_listener.start()
            self.toggle_buttons_during_recording(True)

    def stop_recording(self):
        if self.recording:
            self.recording = False
            if hasattr(self, 'mouse_listener'):
                self.mouse_listener.stop()
            if hasattr(self, 'keyboard_listener'):
                self.keyboard_listener.stop()
            self.toggle_buttons_during_recording(False)
            self.update_event_listbox()

    def toggle_buttons_during_recording(self, recording):
        # Enable/Disable buttons based on whether we are recording
        state = tk.DISABLED if recording else tk.NORMAL
        self.start_button.config(state=tk.DISABLED if recording else tk.NORMAL)
        self.stop_button.config(state=tk.NORMAL if recording else tk.DISABLED)
        self.playback_button.config(state=state)
        self.save_button.config(state=state)
        self.load_button.config(state=state)

    def on_click(self, x, y, button, pressed):
        if self.recording:
            event_time = time.time() - self.start_time
            self.recorded_events.append(('click', x, y, button.name, pressed, event_time))

    def on_move(self, x, y):
        if self.recording:
            event_time = time.time() - self.start_time
            self.recorded_events.append(('move', x, y, event_time))

    def on_press(self, key):
        if self.recording:
            try:
                char = key.char
            except AttributeError:
                char = key.name
            event_time = time.time() - self.start_time
            self.recorded_events.append(('press', char, event_time))

    def start_playback_from_hotkey(self):
        if self.playback_button['state'] == tk.NORMAL:
            self.start_playback()

    def start_playback(self):
        if not self.playback_thread or not self.playback_thread.is_alive():
            repeat_count = int(self.repeat_count_spinbox.get())
            playback_speed = self.playback_speed_scale.get()
            self.playback_thread = threading.Thread(target=self.playback_events, args=(repeat_count, playback_speed))
            self.playback_thread.start()

    def playback_events(self, repeat_count, playback_speed):
        # Logic for playing back the events
        try:
            for i in range(repeat_count):
                if self.playback_stop_requested:
                    break
                self.loop_counter = i + 1
                self.root.after(0, self.update_loop_counter_label)
                last_event_time = 0
                for event in self.recorded_events:
                    if self.playback_stop_requested:
                        break
                    event_type = event[0]
                    event_time = event[-1]  # Event time is always the last element
                    time.sleep(max(0, (event_time - last_event_time) / playback_speed))
                    last_event_time = event_time
                    if event_type == 'click':
                        _, x, y, button_name, pressed, _ = event
                        button = getattr(mouse.Button, button_name) if button_name else None
                        mouse_controller = mouse.Controller()
                        mouse_controller.position = (x, y)
                        if pressed:
                            mouse_controller.press(button)
                        else:
                            mouse_controller.release(button)
                    elif event_type == 'move':
                        _, x, y, _ = event
                        mouse_controller = mouse.Controller()
                        mouse_controller.position = (x, y)
                    elif event_type == 'press':
                        _, char, _ = event
                        keyboard_controller = keyboard.Controller()
                        keyboard_controller.press(char)
            self.playback_stop_requested = False
        except Exception as e:
            messagebox.showerror(""Playback Error"", str(e))

    def save_events(self):
        recording_name = simpledialog.askstring(""Save Recording"", ""Enter a name for the recording:"")
        if recording_name:
            recording_dir = os.path.join(self.recordings_dir, recording_name.replace(' ', '_'))
            os.makedirs(recording_dir, exist_ok=True)
            filepath = os.path.join(recording_dir, 'events')
            with shelve.open(filepath) as shelf:
                shelf['events'] = self.recorded_events
            messagebox.showinfo(""Success"", ""Events saved successfully."")

    def load_events(self):
        recording_name = self.choose_recording()
        if recording_name:
            filepath = os.path.join(self.recordings_dir, recording_name, 'events')
            with shelve.open(filepath) as shelf:
                self.recorded_events = shelf['events']
            self.update_event_listbox()
            # Enable playback button if events were loaded
            self.playback_button.config(state=tk.NORMAL)
            messagebox.showinfo(""Success"", ""Events loaded successfully."")

    def choose_recording(self):
        recordings = [d for d in os.listdir(self.recordings_dir) if os.path.isdir(os.path.join(self.recordings_dir, d))]
        if not recordings:
            messagebox.showinfo(""Load Recording"", ""No recordings found."")
            return None
        recording_name = simpledialog.askstring(""Load Recording"", ""Enter the recording name:"")
        if recording_name in recordings:
            return recording_name
        else:
            messagebox.showerror(""Error"", ""Recording not found."")
            return None

    def update_event_listbox(self):
        self.event_listbox.delete(0, tk.END)
        for event in self.recorded_events:
            event_type, *data, event_time = event
            if event_type == 'press':
                key = data[0]
                event_str = f""{event_type}: {key}""
            else:
                x, y = data
                event_str = f""{event_type} at ({x}, {y})""
            self.event_listbox.insert(tk.END, event_str)

    def update_loop_counter_label(self):
        self.loop_counter_label.config(text=f""Loop Count: {self.loop_counter}"")

    def configure_playback(self):
        config_window = tk.Toplevel(self.root)
        config_window.title(""Playback Configuration"")

        # Create a listbox to list all recordings
        recordings_listbox = Listbox(config_window, selectmode=tk.EXTENDED)
        recordings_listbox.pack()

        # Populate the listbox with available recordings
        for recording in os.listdir(self.recordings_dir):
            recordings_listbox.insert(tk.END, recording)

        # Add buttons to add recordings to the playback queue
        tk.Button(config_window, text=""Add to Playback Queue"",
                  command=lambda: self.add_to_playback_queue(recordings_listbox)).pack()

        # Add buttons to remove recordings from the playback queue
        tk.Button(config_window, text=""Remove from Playback Queue"",
                  command=lambda: self.remove_from_playback_queue(recordings_listbox)).pack()

        # Add listbox to show current playback queue
        self.playback_queue_listbox = Listbox(config_window)
        self.playback_queue_listbox.pack()

        # Add playback controls for the queue
        tk.Button(config_window, text=""Play Queue"",
                  command=self.playback_queue).pack()

    def add_to_playback_queue(self, recordings_listbox):
        selections = recordings_listbox.curselection()
        for i in selections:
            self.playback_queue_listbox.insert(tk.END, recordings_listbox.get(i))

    def remove_from_playback_queue(self, recordings_listbox):
        selections = self.playback_queue_listbox.curselection()
        # Must delete from the end to avoid index shifting issues
        for i in reversed(selections):
            self.playback_queue_listbox.delete(i)

    def playback_queue(self):
        # Logic to playback the queue
        queue = list(self.playback_queue_listbox.get(0, tk.END))
        for recording_name in queue:
            filepath = os.path.join(self.recordings_dir, recording_name, 'events')
            with shelve.open(filepath) as shelf:
                self.recorded_events = shelf['events']
            # Playback each recording
            self.start_playback()

if __name__ == ""__main__"":
    root = tk.Tk()
    app = MouseRecorderGUI(root)
    root.mainloop()
"
ST1eVyjF,pagination-in-progress,Grossos,JavaScript,Thursday 2nd of May 2024 12:27:27 PM CDT,"const response = await axios('http://localhost:5000/data');
const count = await axios('http://localhost:5000/sitecount');

const pageNumbers = (total, max, current) => {
    const half = Math.round(max / 2);
    let to = max;

    if (current + half >= total) {
        to = total;
    } else if (current > half) {
        to = current + half
    }

    let from = to - max;

    return Array.from({ length: max }, (_, i) => (i + 1) + from);
};

function PaginationButtons(totalPages, maxPageVisible = 10, currentPage = 1) {

    let pages = pageNumbers(totalPages, maxPageVisible = totalPages < 10 ? totalPages : 10, currentPage);
    let currentPageBtn = null;
    const buttons = new Map();
    const fragment = document.createDocumentFragment();
    const paginationButtonsContainer = document.querySelector('.container-page');

    const disabled = {
        start: () => pages[0] === 1,
        prev: () => currentPage === 1,
        end: () => pages.slice(-1)[0] === totalPages,
        next: () => currentPage === totalPages,
    }

    const createAndSetupButton = (label = '', cls = '', disabled = false, handleClick = () => { }) => {
        const button = document.createElement('a');
        button.textContent = label;
        button.className = `page-btn ${cls}`;
        button.role = 'button';
        button.disabled = disabled;
        button.addEventListener('click', event => {
            handleClick(event);
            this.update();
            paginationButtonsContainer.value = currentPage;
            paginationButtonsContainer.dispatchEvent(new Event('change'));
        })

        return button;
    }

    const onPageButtonClick = e => currentPage = Number(e.currentTarget.textContent);

    const onPageButtonUpdate = index => btn => {
        btn.textContent = pages[index];

        if (pages[index] === currentPage) {
            currentPageBtn.classList.remove('active');
            btn.classList.add('active');
            currentPageBtn = btn;
            currentPageBtn.focus();
        }
    }

    buttons.set(
        createAndSetupButton('start', 'start-page', disabled.start(), () => currentPage = 1),
        (btn) => btn.disabled = disabled.start()
    )

    buttons.set(
        createAndSetupButton('prev', 'prev-page', disabled.prev(), () => currentPage -= 1),
        (btn) => btn.disabled = disabled.prev()
    )

    pages.forEach((pageNumber, index) => {
        const isCurrentPage = pageNumber === currentPage;
        const button = createAndSetupButton(pageNumber, isCurrentPage ? 'active' : '', false, onPageButtonClick);

        if (isCurrentPage) {
            currentPageBtn = button;
        }

        buttons.set(button, onPageButtonUpdate(index))
    })

    buttons.set(
        createAndSetupButton('next', 'next-page', disabled.next(), () => currentPage += 1),
        (btn) => btn.disabled = disabled.next()
    )

    buttons.set(
        createAndSetupButton('end', 'end-page', disabled.end(), () => currentPage = totalPages),
        (btn) => btn.disabled = disabled.end()
    )

    buttons.forEach((_, btn) => fragment.appendChild(btn));

    this.render = (container = document.body) => {
        paginationButtonsContainer.appendChild(fragment);
        container.appendChild(paginationButtonsContainer);
    }

    this.update = (newPageNumber = currentPage) => {
        currentPage = newPageNumber;
        console.log('currentPage', currentPage);
        pages = pageNumbers(totalPages, maxPageVisible, currentPage);
        buttons.forEach((updateButton, button) => updateButton(button));
    }

    this.onChange = (handler) => {
        paginationButtonsContainer.addEventListener('change', handler)
    }
};

const paginationButtons = new PaginationButtons(Math.ceil(count.data / 50));

paginationButtons.render();

paginationButtons.onChange(e => {
    console.log('onChange', e.target.value);
    let page = e.target.value;
    let currentUrl = new URL(window.location.href);

    e.target.add('dada')
    currentUrl.searchParams.set(`page`, page);
    currentUrl.searchParams.set(`from`, (page - 1) * 50);
    currentUrl.searchParams.set(`to`, (page) * 50);
    window.location.href = currentUrl.href;

})


"
TnHMZ6JZ,build.sh,lerakaneva,Bash,Thursday 2nd of May 2024 12:18:32 PM CDT,"#!/bin/bash
[ -d build ] || mkdir build
cd build

source ~/OF-5.0_bashrc
export CC=/opt/software/OpenFoam-5.0/ThirdParty-5.0/platforms/linux64/gcc-4.9.4/bin/gcc
export CXX=/opt/software/OpenFoam-5.0/ThirdParty-5.0/platforms/linux64/gcc-4.9.4/bin/g++
# using newer compiler requires rebuilding boost, gmsh (not sure about OpenFOAM) due to ABI changes
#export CC=/opt/software/gcc-5.5/bin/gcc
#export CXX=/opt/software/gcc-5.5/bin/g++
export GMSH_PREFIX=/home/petertrifanov_1907/gmsh
export BLAS_LIB=/home/petertrifanov_1907/lib/libblas.so.3
export LAPACK_LIB=/home/petertrifanov_1907/lib/liblapack.so.3
cmake -DCMAKE_BUILD_TYPE=Debug -DBOOST_ROOT:PATHNAME=/home/petertrifanov_1907/boost_1_62_0 \
    -DBoost_LIBRARIES:FILEPATH=/home/petertrifanov_1907/boost_1_62_0/stage/lib \
    -DGMSH_PREFIX=$GMSH_PREFIX -DBLAS_LIB=$BLAS_LIB -DLAPACK_LIB=$LAPACK_LIB ..

cd build
make -j3
mv trombo ../.."
bT7Q5KmF,Free 20240502,RizkiKhaizir,CSS,Thursday 2nd of May 2024 12:07:38 PM CDT,"<== filmbluray.iD ==>
Kode Aktif Per 02 Mei 2024

✨ Selalu lakukan Clear Disk Cache aplikasinya sebelum menonton
✨ Gunakan Aplikasi filmbluray v1.0.5 download di http://slpre.com/HsQN8 (support HP/STB)
✨ Gunakan Aplikasi filmbluray v1.0.5 Clone download di http://slpre.com/wS1d7 (support HP/STB)
✨ Gunakan Aplikasi filmbluray v1.0.5-Original download di http://slpre.com/l9D3q (support STB/SmartTV)

🔈 Dilarang untuk Membongkar kode, nikmati saja apa adanya channel yang ada.
🔈 Kode Ini GRATIS !!! Dilarang memperjual-belikan Kode dan Aplikasi.
🔈 Gunakan dengan bijak aplikasi dan kode ini

KODE VOD Film+Anime : 72456920
WAJIB menggunakan aplikasi filmbluray v1.0.5 yang bisa didownload pada link di atas. Kode tidak bisa digunakan di aplikasi ZalTV.

⚠️ Kode jangan disebarkan keluar grup, ke facebook atau konten youtube, hargai pembuat kode dan channel.
⚠️ Jika kode kedapatan dishare keluar grup, dijual atau di jadikan konten youtube, maka akan di RESET.

- Terimakasih -"
BmYxgpCV,qtnote pkgbuild git,KukuRuzo,Diff,Thursday 2nd of May 2024 12:05:38 PM CDT,"diff --git a/PKGBUILD b/PKGBUILD
index 5bd4896..9ee7ed4 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -1,30 +1,39 @@
 pkgname=qtnote
-pkgver=3.0.5
+pkgver=3.2.0.3.g3a48989
 pkgrel=1
 pkgdesc=""Note-taking application written with Qt in mind""
 arch=('i686' 'x86_64')
 url=""http://ri0n.github.io/QtNote""
 license=('GPL3')
 depends=( 'qt5-base' 'qt5-tools' 'hunspell'
-          'kglobalaccel' 'kwindowsystem'
-          'knotifications')
-makedepends=('tar')
+          'kglobalaccel5' 'kwindowsystem5'
+          'knotifications5')
+makedepends=('git' 'cmake')
 conflicts=(qtnote-git)
-source=(https://github.com/Ri0n/QtNote/archive/$pkgver.tar.gz)
-md5sums=('4e119a4ee9bf9b4520f3a5b6a64ed1b9')
+source=(""$pkgname""::""git+https://github.com/Ri0n/QtNote.git"")
+sha256sums=('SKIP')
 
-_srcdirname=QtNote
+pkgver() {
+  cd ""$srcdir/$pkgname""
+  # Use the tag of the last commit
+  git describe --long --tags | sed 's/^v//;s/-/./g'
+}
+
+prepare() {
+    cd ""$srcdir/$pkgname""
+    git submodule init
+    git submodule update
+}
 
 build() {
-  cd ""$srcdir""
   # BUILD HERE
-  cd ""$srcdir/$_srcdirname-$pkgver""
-  qmake CONFIG+=noubuntu PREFIX=""/usr"" \
-        LIBDIR=""/usr/lib"" $pkgname.pro
-  make
+  cmake_flags=""-DCMAKE_INSTALL_PREFIX=/usr""
+  mkdir -p $srcdir/$pkgname/build && cd $srcdir/$pkgname/build
+  cmake ${cmake_flags} ..
+  cmake --build . --target all
 }
 
 package() {
-  cd ""$srcdir/$_srcdirname-$pkgver""
-  make INSTALL_ROOT=""$pkgdir/""  install
+  cd ""$srcdir/$pkgname/build""
+  make DESTDIR=""$pkgdir""  install
 }
"
p7BaeCyJ,00 Create db gudang - tbl barang,dirham_yord,MySQL,Thursday 2nd of May 2024 11:46:49 AM CDT,"create database gudang_NPM;

use gudang_NPM;

create table barang(
kd_barang varchar(10) primary key,
nama_brg varchar(30),
harga_brg int(10),
stok_brg int(10)
);
"
GDn49HZD,Prision life breaker,13ooeo,Lua,Thursday 2nd of May 2024 11:23:27 AM CDT,"script.Parent.MouseButton1Up:Connect(function()

-- Farewell Infortality.
-- Version: 2.82
-- Instances:
local PrisonBreakerv15 = Instance.new(""ScreenGui"")
local openmain = Instance.new(""Frame"")
local open = Instance.new(""TextButton"")
local main = Instance.new(""Frame"")
local title = Instance.new(""TextLabel"")
local close = Instance.new(""TextButton"")
local police = Instance.new(""TextButton"")
local inmate = Instance.new(""TextButton"")
local neutral = Instance.new(""TextButton"")
local arrestcrims = Instance.new(""TextButton"")
local invis = Instance.new(""TextButton"")
local superpunch = Instance.new(""TextButton"")
local guns = Instance.new(""TextButton"")
local taserbypass = Instance.new(""TextButton"")
local fling = Instance.new(""TextButton"")
local reviz = Instance.new(""TextButton"")
local arrest = Instance.new(""TextButton"")
local attach = Instance.new(""TextButton"")
local fastrem = Instance.new(""TextButton"")
local fastm9 = Instance.new(""TextButton"")
local fasttaze = Instance.new(""TextButton"")
local fastak = Instance.new(""TextButton"")
local killall = Instance.new(""TextButton"")
local btools = Instance.new(""TextButton"")
local speed = Instance.new(""TextButton"")
local respawn = Instance.new(""TextButton"")
local Credits = Instance.new(""TextButton"")
local prison = Instance.new(""TextButton"")
local yard = Instance.new(""TextButton"")
local crimbase = Instance.new(""TextButton"")
local title_2 = Instance.new(""TextLabel"")
local bringall = Instance.new(""TextButton"")
local drill = Instance.new(""TextButton"")
local killplrmain = Instance.new(""Frame"")
local killtext = Instance.new(""TextBox"")
local kill = Instance.new(""TextButton"")
local waves = Instance.new(""TextButton"")
local bigbowl = Instance.new(""TextButton"")
local tazeplrmain = Instance.new(""Frame"")
local tazetext = Instance.new(""TextBox"")
local taze = Instance.new(""TextButton"")
local teamcrim = Instance.new(""TextButton"")
local tazeall = Instance.new(""TextButton"")
local removewalls = Instance.new(""TextButton"")
local removeall = Instance.new(""TextButton"")
local lagserver = Instance.new(""TextButton"")
--Properties:
PrisonBreakerv15.Name = ""PrisonBreaker v1.5""
PrisonBreakerv15.Parent = game.CoreGui

openmain.Name = ""openmain""
openmain.Parent = PrisonBreakerv15
openmain.BackgroundColor3 = Color3.new(0, 0, 0)
openmain.Position = UDim2.new(0.00434467755, 0, 0.397959173, 0)
openmain.Size = UDim2.new(0, 100, 0, 27)
openmain.Visible = false

open.Name = ""open""
open.Parent = openmain
open.BackgroundColor3 = Color3.new(1, 1, 0)
open.Position = UDim2.new(1.49011612e-08, 0, 0, 0)
open.Size = UDim2.new(0, 100, 0, 27)
open.Style = Enum.ButtonStyle.RobloxRoundButton
open.Font = Enum.Font.GothamBold
open.Text = ""OPEN""
open.TextColor3 = Color3.new(0, 0, 0)
open.TextSize = 14
open.MouseButton1Down:connect(function()
	openmain.Visible = false
	main.Visible = true
end)

main.Name = ""main""
main.Parent = PrisonBreakerv15
main.BackgroundColor3 = Color3.new(0, 1, 0)
main.Position = UDim2.new(0.00441803597, 0, 0.249908596, 0)
main.Size = UDim2.new(0, 383, 0, 586)
main.Style = Enum.FrameStyle.RobloxRound
main.Active = true
main.Draggable = true

title.Name = ""title""
title.Parent = main
title.BackgroundColor3 = Color3.new(0, 0, 1)
title.Position = UDim2.new(-0.0125168273, 0, -0.00528348284, 0)
title.Size = UDim2.new(0, 376, 0, 50)
title.Font = Enum.Font.GothamBold
title.Text = ""PrisonBreaker V1.5""
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 14

close.Name = ""close""
close.Parent = main
close.BackgroundColor3 = Color3.new(0.333333, 0, 1)
close.Position = UDim2.new(0.848563969, 0, -0.00557620823, 0)
close.Size = UDim2.new(0, 59, 0, 50)
close.Font = Enum.Font.GothamBold
close.Text = ""X""
close.TextColor3 = Color3.new(0, 0, 0)
close.TextSize = 14
close.MouseButton1Down:connect(function()
	main.Visible = false
	openmain.Visible = true
end)

police.Name = ""police""
police.Parent = main
police.BackgroundColor3 = Color3.new(0, 0, 1)
police.Position = UDim2.new(0.0143180238, 0, 0.108731732, 0)
police.Size = UDim2.new(0, 84, 0, 22)
police.Font = Enum.Font.GothamBold
police.Text = ""Team Police""
police.TextColor3 = Color3.new(0, 0, 0)
police.TextSize = 14
police.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")
end)

inmate.Name = ""inmate""
inmate.Parent = main
inmate.BackgroundColor3 = Color3.new(1, 0.666667, 0)
inmate.BorderColor3 = Color3.new(1, 0.666667, 0.0901961)
inmate.Position = UDim2.new(0.270111769, 0, 0.107363492, 0)
inmate.Size = UDim2.new(0, 84, 0, 22)
inmate.Font = Enum.Font.GothamBold
inmate.Text = ""Team Inmate""
inmate.TextColor3 = Color3.new(0, 0, 0)
inmate.TextSize = 14
inmate.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright orange"")
end)

neutral.Name = ""neutral""
neutral.Parent = main
neutral.BackgroundColor3 = Color3.new(0.772549, 0.74902, 0.784314)
neutral.Position = UDim2.new(0.525683641, 0, 0.106356524, 0)
neutral.Size = UDim2.new(0, 83, 0, 22)
neutral.Font = Enum.Font.GothamBold
neutral.Text = ""Team Neutral""
neutral.TextColor3 = Color3.new(0, 0, 0)
neutral.TextSize = 14
neutral.TextStrokeColor3 = Color3.new(0.333333, 1, 0)
neutral.MouseButton1Down:connect(function()
	Workspace.Remote.TeamEvent:FireServer(""Medium stone grey"")
end)

arrestcrims.Name = ""arrestcrims""
arrestcrims.Parent = main
arrestcrims.BackgroundColor3 = Color3.new(0.333333, 1, 1)
arrestcrims.Position = UDim2.new(0.0124716684, 0, 0.160733104, 0)
arrestcrims.Size = UDim2.new(0, 111, 0, 31)
arrestcrims.Font = Enum.Font.GothamBold
arrestcrims.Text = ""Arrest Crims""
arrestcrims.TextColor3 = Color3.new(1, 0, 0)
arrestcrims.TextSize = 14
arrestcrims.MouseButton1Down:connect(function()
	local Player = game.Players.LocalPlayer
	local cpos = Player.Character.HumanoidRootPart.CFrame
	for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
		if v.Name ~= Player.Name then
			local i = 10
			repeat
				wait()
				i = i-1
				game.Workspace.Remote.arrest:InvokeServer(v.Character.HumanoidRootPart)
				Player.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
			until i == 0
		end
	end
	Player.Character.HumanoidRootPart.CFrame = cpos
	Notify(""Success"", ""Arrested all of the n00bs"", ""Cool!"")
end)

invis.Name = ""invis""
invis.Parent = main
invis.BackgroundColor3 = Color3.new(0, 1, 1)
invis.Position = UDim2.new(0.348153055, 0, 0.160733074, 0)
invis.Size = UDim2.new(0, 111, 0, 31)
invis.Font = Enum.Font.GothamBold
invis.Text = ""Invisible""
invis.TextColor3 = Color3.new(1, 0, 0)
invis.TextSize = 14
invis.MouseButton1Down:connect(function()
	local player = game.Players.LocalPlayer
	position     = player.Character.HumanoidRootPart.Position
	wait(0.1)
	player.Character:MoveTo(position + Vector3.new(0, 1000000, 0))
	wait(0.1)
	humanoidrootpart = player.Character.HumanoidRootPart:clone()
	wait(0.1)
	player.Character.HumanoidRootPart:Destroy()
	humanoidrootpart.Parent = player.Character
	player.Character:MoveTo(position)
	wait()
	-- Remove this if you want to see yourself (others still won't see you)
	game.Players.LocalPlayer.Character.Torso.Transparency = 1
	game.Players.LocalPlayer.Character.Head.Transparency  = 1
	game.Players.LocalPlayer.Character[""Left Arm""].Transparency = 1
	game.Players.LocalPlayer.Character[""Right Arm""].Transparency = 1
	game.Players.LocalPlayer.Character[""Left Leg""].Transparency = 1
	game.Players.LocalPlayer.Character[""Right Leg""].Transparency = 1
	game.Players.LocalPlayer.Character.Humanoid:RemoveAccessories()
	game.Players.LocalPlayer.Character.Head.face:Remove()
end)

superpunch.Name = ""superpunch""
superpunch.Parent = main
superpunch.BackgroundColor3 = Color3.new(0, 1, 1)
superpunch.Position = UDim2.new(0.678248107, 0, 0.160733074, 0)
superpunch.Size = UDim2.new(0, 111, 0, 31)
superpunch.Font = Enum.Font.GothamBold
superpunch.Text = ""SuperPunch""
superpunch.TextColor3 = Color3.new(1, 0, 0)
superpunch.TextSize = 14
superpunch.MouseButton1Down:connect(function()
	mainRemotes = game.ReplicatedStorage meleeRemote = mainRemotes['meleeEvent'] mouse = game.Players.LocalPlayer:GetMouse() punching = false cooldown = false function punch() cooldown = true local part = Instance.new(""Part"", game.Players.LocalPlayer.Character) part.Transparency = 1 part.Size = Vector3.new(5, 2, 3) part.CanCollide = false local w1 = Instance.new(""Weld"", part) w1.Part0 = game.Players.LocalPlayer.Character.Torso w1.Part1 = part w1.C1 = CFrame.new(0,0,2) part.Touched:connect(function(hit) if game.Players:FindFirstChild(hit.Parent.Name) then local plr = game.Players:FindFirstChild(hit.Parent.Name) if plr.Name ~= game.Players.LocalPlayer.Name then part:Destroy() for i = 1,100 do meleeRemote:FireServer(plr) end end end end) wait(1) cooldown = false part:Destroy() end mouse.KeyDown:connect(function(key) if cooldown == false then if key:lower() == ""f"" then punch() end end end)
end)

guns.Name = ""guns""
guns.Parent = main
guns.BackgroundColor3 = Color3.new(0, 1, 1)
guns.Position = UDim2.new(0.0124716703, 0, 0.2304198, 0)
guns.Size = UDim2.new(0, 111, 0, 32)
guns.Font = Enum.Font.GothamBlack
guns.Text = ""Guns""
guns.TextColor3 = Color3.new(1, 0, 0)
guns.TextSize = 14
guns.MouseButton1Down:connect(function()
	for i,v in pairs(Workspace.Prison_ITEMS.giver:GetChildren()) do

		lol = Workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
		print(lol)
	end
end)

taserbypass.Name = ""taserbypass""
taserbypass.Parent = main
taserbypass.BackgroundColor3 = Color3.new(0, 1, 1)
taserbypass.Position = UDim2.new(0.348080158, 0, 0.2304198, 0)
taserbypass.Size = UDim2.new(0, 111, 0, 32)
taserbypass.Font = Enum.Font.GothamBold
taserbypass.Text = ""Taser Bypass""
taserbypass.TextColor3 = Color3.new(1, 0, 0)
taserbypass.TextSize = 14
taserbypass.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
	game.Players.LocalPlayer.CharacterAdded:connect(function()
		game.Workspace:WaitForChild(game.Players.LocalPlayer.Name)
		game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
	end)
	local message = Instance.new(""Message"",game.Workspace)
	message.Text = 'Made By Jake11price'
	wait(2)
	message:Destroy()
end)

fling.Name = ""fling""
fling.Parent = main
fling.BackgroundColor3 = Color3.new(0.333333, 1, 1)
fling.Position = UDim2.new(0.00984076969, 0, 0.379423141, 0)
fling.Size = UDim2.new(0, 111, 0, 32)
fling.Font = Enum.Font.GothamBold
fling.Text = ""Fling""
fling.TextColor3 = Color3.new(1, 0, 0)
fling.TextSize = 14
fling.MouseButton1Down:connect(function()
	power = 300 -- change this to make it more or less powerful

	game:GetService('RunService').Stepped:connect(function()
		game.Players.LocalPlayer.Character.Head.CanCollide = false
		game.Players.LocalPlayer.Character.Torso.CanCollide = false
		game.Players.LocalPlayer.Character[""Left Leg""].CanCollide = false
		game.Players.LocalPlayer.Character[""Right Leg""].CanCollide = false
	end)

	wait(.1)
	local bambam = Instance.new(""BodyThrust"")
	bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
	bambam.Force = Vector3.new(power,0,power)
	bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
end)

reviz.Name = ""reviz""
reviz.Parent = main
reviz.BackgroundColor3 = Color3.new(0, 1, 1)
reviz.Position = UDim2.new(0.0121497028, 0, 0.303878158, 0)
reviz.Size = UDim2.new(0, 111, 0, 32)
reviz.Font = Enum.Font.GothamBold
reviz.Text = ""Reviz Admin""
reviz.TextColor3 = Color3.new(1, 0, 0)
reviz.TextSize = 14
reviz.MouseButton1Down:connect(function()
	-- Creator: illremember#3799

	-- Credits to infinite yield, harkinian, dex creators

	prefix = "";""
	wait(0.3)
	Commands = {
		'[-] cmdbar is shown when ; is pressed.',
		'[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player',
		'[2] bring [plr] -- You need a tool! Will bring player to you',
		'[3] spin [plr] -- You need a tool! Makes you and the player spin crazy',
		'[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting',
		'[5] attach [plr] -- You need a tool! Attaches you to player',
		'[6] unattach [plr] -- Attempts to unattach you from a player',
		'[7] follow [plr] -- Makes you follow behind the player',
		'[8] unfollow',
		'[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air',
		'[10] trail [plr] -- The opposite of follow, you stay infront of player',
		'[11] untrail',
		'[12] orbit [plr] -- Makes you orbit the player',
		'[13] unorbit',
		'[14] fling [plr] -- Makes you fling the player',
		'[15] unfling',
		'[16] fecheck -- Checks if the game is FE or not',
		'[17] void [plr] -- Teleports player to the void',
		'[18] noclip -- Gives you noclip to walk through walls',
		'[19] clip -- Removes noclip',
		'[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default',
		'[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default',
		'[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default',
		'[23] default -- Changes your speed, jumppower and hipheight to default values',
		'[24] annoy [plr] -- Loop teleports you to the player',
		'[25] unannoy',
		'[26] headwalk [plr] -- Loop teleports you to the player head',
		'[27] unheadwalk',
		'[28] nolimbs -- Removes your arms and legs',
		'[29] god -- Gives you FE Godmode',
		'[30] drophats -- Drops your accessories',
		'[31] droptool -- Drops any tool you have equipped',
		'[32] loopdhats -- Loop drops your accessories',
		'[33] unloopdhats',
		'[34] loopdtool -- Loop drops any tools you have equipped',
		'[35] unloopdtool',
		'[36] invisible -- Gives you invisibility CREDIT TO TIMELESS',
		'[37] view [plr] -- Changes your camera to the player character',
		'[38] unview',
		'[39] goto [plr] -- Teleports you to player',
		'[40] fly -- Allows you to fly, credit to Infinite Yield',
		'[41] unfly',
		'[42] chat [msg] -- Makes you chat a message',
		'[43] spam [msg] -- Spams a message',
		'[44] unspam',
		'[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second',
		'[46] pmspam [plr] -- Spams a player in private message',
		'[47] unpmspam',
		'[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you',
		'[49] uncfreeze [plr]',
		'[50] unlockws -- Unlocks the workspace',
		'[51] lockws -- Locks the workspace',
		'[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you',
		'[53] pstand -- Enables platform stand',
		'[54] unpstand -- Disables platform stand',
		'[55] blockhead -- Removes your head mesh',
		'[56] sit',
		'[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name',
		'[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided',
		'[59] hypertotal -- Loads in my FE GUI Hypertotal',
		'[60] cmds -- Prints all commands',
		'[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats',
		'[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool',
		'[63] spinner -- Makes you spin',
		'[64] nospinner',
		'[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom',
		'[66] noreach -- Removes reach, must have tool equipped',
		'[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying',
		'[68] tp me [plr] -- Alternative to goto',
		'[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player',
		'[70] uncbring',
		'[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players',
		'[72] givetool [plr] -- Gives the tool you have equipped to the player',
		'[73] glitch [plr] -- Glitches you and the player, looks very cool',
		'[74] unglitch -- Unglitches you',
		'[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode',
		'[76] explorer -- Loads up DEX',
		'[77] reset -- Resets your character.',
		'[78] anim [id] -- Applies an animation on you, must be created by ROBLOX',
		'[79] animgui -- Loads up Energize animations GUI',
		'[80] savepos -- Saves your current position',
		'[81] loadpos -- Teleports you to your saved position',
		'[82] bang [plr] -- 18+ will not work if you have FE Godmode on',
		'[83] unbang',
		'[84] delcmdbar -- Removes the command bar completely',
		'[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model',
		'[86] shutdown -- Uses harkinians script to shutdown server',
		'[87] respawn -- If grespawn doesnt work you can use respawn',
		'[88] delobj [obj] -- Deletes a certain brick in workspace, client sided',
		'[89] getplrs -- Prints all players in game',
		'[90] deldecal -- Deletes all decals client sided',
		'[91] opfinality -- Loads in my FE GUI Opfinality',
		'[92] remotes -- Prints all remotes in the game in the console when added',
		'[93] noremotes -- Stops printing remotes',
		'[94] tpdefault -- Stops all loop teleports to a player',
		'[95] stopsit -- Will not allow you to sit',
		'[96] gosit -- Allows you to sit',
		'[97] clicktp -- Enables click tp',
		'[98] noclicktp -- Disables click tp',
		'[99] toolson -- If any tools are dropped in the workspace you will automatically get them',
		'[100] toolsoff -- Stops ;toolson',
		'[101] version -- Gets the admin version',
		'[102] state [num] -- Changes your humanoid state, ;unstate to stop.',
		'[103] gravity [num] -- Changes workspace gravity default is 196.2',
		'[104] pgs -- Checks if the game has PGSPhysicsSolverEnabled enabled',
		'[105] clickdel -- Delete any block you press q on, client sided',
		'[106] noclickdel -- Stops clickdel',
		'[107] looprhats -- Loop removes mesh of your hats/loop block hats',
		'[108] unlooprhats -- Stops loop removing mesh',
		'[109] looprtool -- Loop removes mesh of your tool/loop block tools',
		'[110] unlooprtool -- Stops loop removing mesh',
		'[111] givealltools [plr] -- Gives all the tools you have in your backpack to the player',
		'[112] age [plr] -- Makes you chat the account age of the player',
		'[113] id [plr] -- Makes you chat the account ID of the player',
		'[114] .age [plr] -- Privately shows you the account age of the player',
		'[115] .id [plr] -- Privately shows you the account ID of the player',
		'[116] gameid -- Shows the game ID',
		'[117] removeinvis -- Removes all invisible walls/parts, client sided',
		'[118] removefog -- Removes fog, client sided',
		'[119] disable -- Disables your character by removing humanoid',
		'[120] enable -- Enables your character by adding humanoid',
		'[121] prefix [key] -- Changes the prefix used, default is ;',
		'[122] ;resetprefix -- Resets the prefix to ; incase you change it to an unusable prefix. Say exactly "";resetprefix"" to do this command, no matter what your prefix is set to.',
		'[123] flyspeed [num] -- Change your fly speed, default is 1',
		'[124] carpet [plr] -- Makes you a carpet for a player, will not work if FE Godmode is on',
		'[125] uncarpet -- Stops carpet player',
		'[126] stare [plr] -- Turns your character to stare at another player',
		'[127] unstare -- Stops stare player',
		'[128] logchat -- Logs all chat (including /e and whispers) of all players',
		'[129] unlogchat -- Disables logchat',
		'[130] fixcam -- Fixes/resets your camera',
		'[131] unstate -- Stops changing state',
	}
	speedget = 1

	lplayer = game:GetService(""Players"").LocalPlayer

	lplayer.CharacterAdded:Connect(function(character)
		spin = false
		flying = false
		staring = false
		banpl = false
	end)

	function change()
		prefix = prefix
		speedfly = speedfly
	end

	function GetPlayer(String) -- Credit to Timeless/xFunnieuss
		local Found = {}
		local strl = String:lower()
		if strl == ""all"" then
			for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
				table.insert(Found,v)
			end
		elseif strl == ""others"" then
			for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
				if v.Name ~= lplayer.Name then
					table.insert(Found,v)
				end
			end  
		elseif strl == ""me"" then
			for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
				if v.Name == lplayer.Name then
					table.insert(Found,v)
				end
			end  
		else
			for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
				if v.Name:lower():sub(1, #String) == String:lower() then
					table.insert(Found,v)
				end
			end    
		end
		return Found    
	end

	local Mouse = lplayer:GetMouse()

	spin = false
	followed = false
	traill = false
	noclip = false
	annoying = false
	hwalk = false
	droppinghats = false
	droppingtools = false
	flying = false
	spamdelay = 1
	spamming = false
	spammingpm = false
	cbringing = false
	remotes = true
	added = true
	binds = false
	stopsitting = false
	clickgoto = false
	gettingtools = false
	removingmeshhats = false
	removingmeshtool = false
	clickdel = false
	staring = false
	chatlogs = false
	banpl = false
	changingstate = false
	statechosen = 0

	adminversion = ""Reviz Admin by illremember, Version 2.0""

	flying = false
	speedfly = 1

	function plrchat(plr, chat)
		print(plr.Name.."": ""..tick()..""\n""..chat)
	end

	for i,v in pairs(game:GetService(""Players""):GetPlayers()) do
		v.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(v, chat)
			end
		end)
	end
	game:GetService(""Players"").PlayerAdded:connect(function(plr)
		plr.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(plr, chat)
			end
		end)
	end)


	local ScreenGui = Instance.new(""ScreenGui"")
	local Frame = Instance.new(""Frame"")
	local CMDBAR = Instance.new(""TextBox"")
	ScreenGui.Parent = game:GetService(""CoreGui"")
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.new(0.3, 0.1, 0.1)
	Frame.BackgroundTransparency = 0.3
	Frame.Position = UDim2.new(0.5, 0, 0, 10)
	Frame.Size = UDim2.new(0, 200, 0, 40)
	Frame.Active = true
	Frame.Draggable = true
	CMDBAR.Name = ""CMDBAR""
	CMDBAR.Parent = Frame
	CMDBAR.BackgroundColor3 = Color3.new(0.105882, 0.164706, 0.207843)
	CMDBAR.BackgroundTransparency = 0.20000000298023
	CMDBAR.Size = UDim2.new(0, 180, 0, 20)
	CMDBAR.Position = UDim2.new(0.05, 0, 0.25, 0)
	CMDBAR.Font = Enum.Font.SourceSansLight
	CMDBAR.FontSize = Enum.FontSize.Size14
	CMDBAR.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
	CMDBAR.TextScaled = true
	CMDBAR.TextSize = 14
	CMDBAR.TextWrapped = true
	CMDBAR.Text = ""Press ; to type, Enter to execute""

	local CMDS = Instance.new(""ScreenGui"")
	local CMDSFRAME = Instance.new(""Frame"")
	local ScrollingFrame = Instance.new(""ScrollingFrame"")
	local TextLabel = Instance.new(""TextLabel"")
	local closegui = Instance.new(""TextButton"")
	CMDS.Name = ""CMDS""
	CMDS.Parent = game:GetService(""CoreGui"")
	CMDSFRAME.Name = ""CMDSFRAME""
	CMDSFRAME.Parent = CMDS
	CMDSFRAME.Active = true
	CMDSFRAME.BackgroundColor3 = Color3.new(0.223529, 0.231373, 0.309804)
	CMDSFRAME.BorderSizePixel = 0
	CMDSFRAME.Draggable = true
	CMDSFRAME.Position = UDim2.new(0, 315, 0, 100)
	CMDSFRAME.Size = UDim2.new(0, 275, 0, 275)
	CMDSFRAME.Visible = false
	ScrollingFrame.Parent = CMDSFRAME
	ScrollingFrame.BackgroundColor3 = Color3.new(0.160784, 0.160784, 0.203922)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0, 0, 0.0729999989, 0)
	ScrollingFrame.Size = UDim2.new(1.04999995, 0, 0.92900002, 0)
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
	TextLabel.Parent = ScrollingFrame
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(0.930000007, 0, 1, 0)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.FontSize = Enum.FontSize.Size18
	TextLabel.Text = ""[-] cmdbar is shown when ; is pressed.,\n[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player,\n[2] bring [plr] -- You need a tool! Will bring player to you,\n[3] spin [plr] -- You need a tool! Makes you and the player spin crazy,\n[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting,\n[5] attach [plr] -- You need a tool! Attaches you to player,\n[6] unattach [plr] -- Attempts to unattach you from a player,\n[7] follow [plr] -- Makes you follow behind the player,\n[8] unfollow,\n[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air,\n[10] trail [plr] -- The opposite of follow, you stay infront of player,\n[11] untrail,\n[12] orbit [plr] -- Makes you orbit the player,\n[13] unorbit,\n[14] fling [plr] -- Makes you fling the player,\n[15] unfling,\n[16] fecheck -- Checks if the game is FE or not,\n[17] void [plr] -- Teleports player to the void,\n[18] noclip -- Gives you noclip to walk through walls,\n[19] clip -- Removes noclip,\n[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default,\n[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default,\n[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default,\n[23] default -- Changes your speed, jumppower and hipheight to default values,\n[24] annoy [plr] -- Loop teleports you to the player,\n[25] unannoy,\n[26] headwalk [plr] -- Loop teleports you to the player head,\n[27] unheadwalk,\n[28] nolimbs -- Removes your arms and legs,\n[29] god -- Gives you FE Godmode,\n[30] drophats -- Drops your accessories,\n[31] droptool -- Drops any tool you have equipped,\n[32] loopdhats -- Loop drops your accessories,\n[33] unloopdhats,\n[34] loopdtool -- Loop drops any tools you have equipped,\n[35] unloopdtool,\n[36] invisible -- Gives you invisibility CREDIT TO TIMELESS,\n[37] view [plr] -- Changes your camera to the player character,\n[38] unview,\n[39] goto [plr] -- Teleports you to player,\n[40] fly -- Allows you to fly,\n[41] unfly,\n[42] chat [msg] -- Makes you chat a message,\n[43] spam [msg] -- Spams a message,\n[44] unspam,\n[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second,\n[46] pmspam [plr] -- Spams a player in private message,\n[47] unpmspam,\n[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you,\n[49] uncfreeze [plr],\n[50] unlockws -- Unlocks the workspace,\n[51] lockws -- Locks the workspace,\n[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you,\n[53] pstand -- Enables platform stand,\n[54] unpstand -- Disables platform stand,\n[55] blockhead -- Removes your head mesh,\n[56] sit,\n[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name,\n[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided,\n[59] hypertotal -- Loads in my FE GUI Hypertotal,\n[60] cmds -- Prints all commands,\n[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats,\n[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool,\n[63] spinner -- Makes you spin,\n[64] nospinner,\n[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom,\n[66] noreach -- Removes reach, must have tool equipped,\n[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying,\n[68] tp me [plr] -- Alternative to goto,\n[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player,\n[70] uncbring,\n[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players,\n[72] givetool [plr] -- Gives the tool you have equipped to the player,\n[73] glitch [plr] -- Glitches you and the player, looks very cool,\n[74] unglitch -- Unglitches you,\n[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode,\n[76] explorer -- Loads up DEX,\n[77] reset -- Resets your character.,\n[78] anim [id] -- Applies an animation on you, must be created by ROBLOX,\n[79] animgui -- Loads up Energize animations GUI,\n[80] savepos -- Saves your current position,\n[81] loadpos -- Teleports you to your saved position,\n[82] bang [plr] -- 18+,\n[83] unbang,\n[84] delcmdbar -- Removes the command bar completely,\n[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model,\n[86] shutdown -- Uses harkinians script to shutdown server,\n[87] respawn -- If grespawn doesnt work you can use respawn,\n[88] delobj [obj] -- Deletes a certain brick in workspace, client sided,\n[89] getplrs -- Prints all players in game,\n[90] deldecal -- Deletes all decals client sided,\n[91] opfinality -- Loads in my FE GUI Opfinality,\n[92] remotes -- Prints all remotes in the game in the console when added,\n[93] noremotes -- Stops printing remotes,\n[94] tpdefault -- Stops all loop teleports to a player,\n[95] stopsit -- Will not allow you to sit,\n[96] gosit -- Allows you to sit,\n[97] clicktp -- Enables click tp,\n[98] noclicktp -- Disables click tp,\n[99] toolson -- If any tools are dropped in the workspace you will automatically get them,\n[100] toolsoff -- Stops ;toolson,\n[101] version -- Gets the admin version, \n This list of commands is NOT showing everything, go to my thread in the pastebin link to see ALL commands.""
	TextLabel.TextColor3 = Color3.new(1, 1, 1)
	TextLabel.TextSize = 15
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top
	closegui.Name = ""closegui""
	closegui.Parent = CMDSFRAME
	closegui.BackgroundColor3 = Color3.new(0.890196, 0.223529, 0.0588235)
	closegui.BorderSizePixel = 0
	closegui.Position = UDim2.new(0.995000005, 0, 0, 0)
	closegui.Size = UDim2.new(0.0545952693, 0, 0.0728644878, 0)
	closegui.Font = Enum.Font.SourceSansBold
	closegui.FontSize = Enum.FontSize.Size24
	closegui.Text = ""X""
	closegui.TextColor3 = Color3.new(1, 1, 1)
	closegui.TextSize = 20

	closegui.MouseButton1Click:connect(function()
		CMDSFRAME.Visible = false
	end)

	game:GetService('RunService').Stepped:connect(function()
		if spin then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[spinplr.Name].Character.HumanoidRootPart.CFrame
		end
		if followed then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[flwplr.Name].Character.HumanoidRootPart.CFrame + game:GetService(""Players"")[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * -5
		end
		if traill then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[trlplr.Name].Character.HumanoidRootPart.CFrame + game:GetService(""Players"")[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * 5
		end
		if annoying then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[annplr.Name].Character.HumanoidRootPart.CFrame
		end
		if hwalk then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[hdwplr.Name].Character.HumanoidRootPart.CFrame + Vector3.new(0, 4, 0)
		end
		if staring then
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(lplayer.Character.Torso.Position, game:GetService(""Players"")[stareplr.Name].Character.Torso.Position)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if noclip then
			if lplayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				lplayer.Character.Head.CanCollide = false
				lplayer.Character.Torso.CanCollide = false
				lplayer.Character[""Left Leg""].CanCollide = false
				lplayer.Character[""Right Leg""].CanCollide = false
			else
				lplayer.Character.Humanoid:ChangeState(11)
			end
		end
		if changingstate then
			lplayer.Character.Humanoid:ChangeState(statechosen)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if droppinghats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
					v.Parent = workspace
				end
			end
		end
		if droppingtools then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Tool"")) then
					v.Parent = workspace
				end
			end
		end
		if removingmeshhats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if removingmeshtool then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Tool"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if banpl then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[bplrr].Character.HumanoidRootPart.CFrame
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if stopsitting then
			lplayer.Character.Humanoid.Sit = false
		end
	end)

	plr = lplayer
	hum = plr.Character.HumanoidRootPart
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)
		if key == ""e"" then
			if mouse.Target then
				if clickgoto then
					hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
				elseif clickdel then
					mouse.Target:Destroy()
				end
			end
		end
	end)

	game:GetService(""Workspace"").ChildAdded:connect(function(part)
		if gettingtools then
			if part:IsA(""Tool"") then
				part.Handle.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)

	lplayer.Chatted:Connect(function(msg)
		if string.sub(msg, 1, 6) == (prefix..""kill "") then
			if string.sub(msg, 7) == ""me"" then
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					wait(0.7)
					tp(lplayer,game:GetService(""Players"")[v.Name])
					wait(0.7)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""bring "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
					end
				end
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				tp(game:GetService(""Players"")[v.Name], lplayer)
				wait(0.2)
				tp(game:GetService(""Players"")[v.Name], lplayer)
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.5)
				getout(lplayer, game:GetService(""Players"")[v.Name])
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix..""spin "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				lplayer.Character.Animate.Disabled = false
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
				spinplr = v
				wait(0.5)
				spin = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""unspin"") then
			spin = false
		end
		if string.sub(msg, 1, 8) == (prefix..""attach "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
				attplr = v
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""unattach "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				getout(lplayer, game:GetService(""Players"")[v.Name])
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""follow "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				followed = true
				flwplr = v
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""unfollow"") then
			followed = false
		end
		if string.sub(msg, 1, 10) == (prefix..""freefall "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""trail "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				traill = true
				trlplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""untrail"") then
			traill = false
		end
		if string.sub(msg, 1, 7) == (prefix..""orbit "") then
			if string.sub(msg, 8) == ""all"" or string.sub(msg, 8) == ""others"" or string.sub(msg, 8) == ""me"" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local o = Instance.new(""RocketPropulsion"")
					o.Parent = lplayer.Character.HumanoidRootPart
					o.Name = ""Orbit""
					o.Target = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart
					o:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""unorbit"") then
			lplayer.Character.HumanoidRootPart.Orbit:Destroy()
			noclip = false
		end
		if string.sub(msg, 1, 7) == (prefix..""fling "") then
			if string.sub(msg, 8) == ""all"" or string.sub(msg, 8) == ""others"" or string.sub(msg, 8) == ""me"" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local y = Instance.new(""RocketPropulsion"")
					y.Parent = lplayer.Character.HumanoidRootPart
					y.CartoonFactor = 1
					y.MaxThrust = 800000
					y.MaxSpeed = 1000
					y.ThrustP = 200000
					y.Name = ""Fling""
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Head
					y.Target = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart
					y:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""unfling"") then
			noclip = false
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
			game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Head
			wait(0.4)
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
		end
		if string.sub(msg, 1, 8) == (prefix..""fecheck"") then
			if game:GetService(""Workspace"").FilteringEnabled == true then
				warn(""FE is Enabled (Filtering Enabled)"")
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""FE is Enabled"";
					Text = ""Filtering Enabled. Enjoy using Reviz Admin!"";
				})
			else
				warn(""FE is Disabled (Filtering Disabled) Consider using a different admin script."")
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""FE is Disabled"";
					Text = ""Filtering Disabled. Consider using a different admin script."";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix..""void "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""noclip"") then
			noclip = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Noclip enabled"";
				Text = ""Type ;clip to disable"";
			})
		end
		if string.sub(msg, 1, 5) == (prefix..""clip"") then
			noclip = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Noclip disabled"";
				Text = ""Type ;noclip to enable"";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""speed "") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 8))
		end
		if string.sub(msg, 1, 4) == (prefix..""ws "") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix..""hipheight "") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix..""hh "") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix..""jumppower "") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix..""jp "") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 8) == (prefix..""default"") then
			lplayer.Character.Humanoid.JumpPower = 50
			lplayer.Character.Humanoid.WalkSpeed = 16
			lplayer.Character.Humanoid.HipHeight = 0
		end
		if string.sub(msg, 1, 7) == (prefix..""annoy "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				annoying = true
				annplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""unannoy"") then
			annoying = false
		end
		if string.sub(msg, 1, 10) == (prefix..""headwalk "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				hwalk = true
				hdwplr = v
			end
		end
		if string.sub(msg, 1, 11) == (prefix..""unheadwalk"") then
			hwalk = false
		end
		if string.sub(msg, 1, 8) == (prefix..""nolimbs"") then
			lplayer.Character[""Left Leg""]:Destroy()
			lplayer.Character[""Left Arm""]:Destroy()
			lplayer.Character[""Right Leg""]:Destroy()
			lplayer.Character[""Right Arm""]:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix..""god"") then
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character[""1""]:Clone()
			l.Parent = lplayer.Character
			l.Name = ""Humanoid""
			wait(0.1)
			lplayer.Character[""1""]:Destroy()
			game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = ""None""
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""FE Godmode enabled"";
				Text = ""Use ;grespawn or ;respawn to remove"";
			})
		end
		if string.sub(msg, 1, 9) == (prefix..""drophats"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""droptool"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Tool"")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""loopdhats"") then
			droppinghats = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Loop Drop Enabled"";
				Text = ""Type ;unloopdhats to disable"";
			})
		end
		if string.sub(msg, 1, 12) == (prefix..""unloopdhats"") then
			droppinghats = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Loop Drop Disabled"";
				Text = ""Type ;loopdhats to enable."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""loopdtool"") then
			droppingtools = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Loop Drop Enabled"";
				Text = ""Type ;unloopdtool to disable"";
			})
		end
		if string.sub(msg, 1, 12) == (prefix..""unloopdtool"") then
			droppingtools = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Loop Drop Disabled"";
				Text = ""Type ;loopdtool to enable."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""invisible"") then -- Credit to Timeless
			Local = game:GetService('Players').LocalPlayer
			Char  = Local.Character
			touched,tpdback = false, false
			box = Instance.new('Part',workspace)
			box.Anchored = true
			box.CanCollide = true
			box.Size = Vector3.new(10,1,10)
			box.Position = Vector3.new(0,10000,0)
			box.Touched:connect(function(part)
				if (part.Parent.Name == Local.Name) then
					if touched == false then
						touched = true
						function apply()
							if script.Disabled ~= true then
								no = Char.HumanoidRootPart:Clone()
								wait(.25)
								Char.HumanoidRootPart:Destroy()
								no.Parent = Char
								Char:MoveTo(loc)
								touched = false
							end end
						if Char then
							apply()
						end
					end
				end
			end)
			repeat wait() until Char
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Invisibility enabled!"";
				Text = ""Reset or use ;respawn to remove."";
			})
		end
		if string.sub(msg, 1, 6) == (prefix..""view "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				if game:GetService(""Players"")[v.Name].Character.Humanoid then
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Humanoid
				else
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Head
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""unview"") then
			if lplayer.Character.Humanoid then
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			else
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Head
			end
		end
		if string.sub(msg, 1, 6) == (prefix..""goto "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 4) == (prefix..""fly"") then
			repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse

			local T = lplayer.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedget

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						lplayer.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly
				elseif KEY:lower() == 'd' then
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			fly()
		end
		if string.sub(msg, 1, 6) == (prefix..""unfly"") then
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 6) == (prefix..""chat "") then
			game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(msg, 7)), ""All"")
		end
		if string.sub(msg, 1, 6) == (prefix..""spam "") then
			spamtext = (string.sub(msg, 7))
			spamming = true
		end
		if string.sub(msg, 1, 7) == (prefix..""unspam"") then
			spamming = false
		end
		if string.sub(msg, 1, 10) == (prefix..""spamwait "") then
			spamdelay = (string.sub(msg, 11))
		end
		if string.sub(msg, 1, 8) == (prefix..""pmspam "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				pmspammed = v.Name
				spammingpm = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""unpmspam"") then
			spammingpm = false
		end
		if string.sub(msg, 1, 9) == (prefix..""cfreeze "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 10))) do
				v.Character[""Left Leg""].Anchored = true
				v.Character[""Left Arm""].Anchored = true
				v.Character[""Right Leg""].Anchored = true
				v.Character[""Right Arm""].Anchored = true
				v.Character.Torso.Anchored = true
				v.Character.Head.Anchored = true
			end
		end
		if string.sub(msg, 1, 11) == (prefix..""uncfreeze "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 12))) do
				v.Character[""Left Leg""].Anchored = false
				v.Character[""Left Arm""].Anchored = false
				v.Character[""Right Leg""].Anchored = false
				v.Character[""Right Arm""].Anchored = false
				v.Character.Torso.Anchored = false
				v.Character.Head.Anchored = false
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""unlockws"") then
			local a = game:GetService(""Workspace""):getChildren()
			for i = 1, #a do
				if a[i].className == ""Part"" then
					a[i].Locked = false
				elseif a[i].className == ""Model"" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == ""Part"" then
							r[i].Locked = false
						end
					end
				end
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Success!"";
				Text = ""Workspace unlocked. Use ;lockws to lock."";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""lockws"") then
			local a = game:GetService(""Workspace""):getChildren()
			for i = 1, #a do
				if a[i].className == ""Part"" then
					a[i].Locked = true
				elseif a[i].className == ""Model"" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == ""Part"" then
							r[i].Locked = true
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""btools"") then
			local Clone_T = Instance.new(""HopperBin"",lplayer.Backpack)
			Clone_T.BinType = ""Clone""
			local Destruct = Instance.new(""HopperBin"",lplayer.Backpack)
			Destruct.BinType = ""Hammer""
			local Hold_T = Instance.new(""HopperBin"",lplayer.Backpack)
			Hold_T.BinType = ""Grab""
		end
		if string.sub(msg, 1, 7) == (prefix..""pstand"") then
			lplayer.Character.Humanoid.PlatformStand = true
		end
		if string.sub(msg, 1, 9) == (prefix..""unpstand"") then
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 10) == (prefix..""blockhead"") then
			lplayer.Character.Head.Mesh:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix..""sit"") then
			lplayer.Character.Humanoid.Sit = true
		end
		if string.sub(msg, 1, 10) == (prefix..""bringobj "") then
			local function bringobjw()
				for i,obj in ipairs(game:GetService(""Workspace""):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
						obj.CanCollide = false
						obj.Transparency = 0.7
						wait()
						obj.CFrame = lplayer.Character[""Left Leg""].CFrame
						wait()
						obj.CFrame = lplayer.Character[""Right Leg""].CFrame
						wait()
						obj.CFrame = lplayer.Character[""Head""].CFrame
					end
				end
			end
			while wait() do
				bringobjw()
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""BringObj"";
				Text = ""BringObj enabled."";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""wsvis "") then
			vis = (string.sub(msg, 8))
			local a = game:GetService(""Workspace""):GetDescendants()
			for i = 1, #a do
				if a[i].className == ""Part"" then
					a[i].Transparency = vis
				elseif a[i].className == ""Model"" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == ""Part"" then
							r[i].Transparency = vis
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix..""hypertotal"") then
			loadstring(game:GetObjects(""rbxassetid://1255063809"")[1].Source)()
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Success!"";
				Text = ""HyperTotal GUI Loaded!"";
			})
		end
		if string.sub(msg, 1, 5) == (prefix..""cmds"") then
			CMDSFRAME.Visible = true
		end
		if string.sub(msg, 1, 10) == (prefix..""rmeshhats"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""blockhats"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""rmeshtool"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Tool"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""blocktool"") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA(""Tool"")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""spinner"") then
			local p = Instance.new(""RocketPropulsion"")
			p.Parent = lplayer.Character.HumanoidRootPart
			p.Name = ""Spinner""
			p.Target = lplayer.Character[""Left Arm""]
			p:Fire()
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Spinner enabled"";
				Text = ""Type ;nospinner to disable."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""nospinner"") then
			lplayer.Character.HumanoidRootPart.Spinner:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix..""reachd"") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA(""Tool"") then
					local a = Instance.new(""SelectionBox"",v.Handle)
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Reach applied!"";
				Text = ""Applied to equipped sword. Use ;noreach to disable."";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""reach "") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA(""Tool"") then
					handleSize = v.Handle.Size
					wait()
					local a = Instance.new(""SelectionBox"",v.Handle)
					a.Name = ""a""
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(msg, 8)))
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Reach applied!"";
				Text = ""Applied to equipped sword. Use ;noreach to disable."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""noreach"") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA(""Tool"") then
					v.Handle.a:Destroy()
					v.Handle.Size = handleSize
				end
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Reach removed!"";
				Text = ""Removed reach from equipped sword."";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""rkill "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""tp me "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""cbring "") then
			if (string.sub(msg, 9)) == ""all"" or (string.sub(msg, 9)) == ""All"" or (string.sub(msg, 9)) == ""ALL"" then
				cbringall = true
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
					brplr = v.Name
				end
			end
			cbring = true
		end
		if string.sub(msg, 1, 9) == (prefix..""uncbring"") then
			cbring = false
			cbringall = false
		end
		if string.sub(msg, 1, 6) == (prefix..""swap "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local NOWPLR = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				tp(lplayer, game:GetService(""Players"")[v.Name])
				wait(0.4)
				lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""glitch "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
				wait(0.4)
				b = Instance.new(""BodyForce"")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = ""Glitch""
				b.Force = Vector3.new(100000000,5000,0)
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools needed!"";
					Text = ""You need a tool in your backpack for this command!"";
				})
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""unglitch"") then
			lplayer.Character.HumanoidRootPart.Glitch:Destroy()
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
			b = Instance.new(""BodyForce"")
			b.Parent = lplayer.Character.HumanoidRootPart
			b.Name = ""unGlitch""
			b.Force = Vector3.new(0,-5000000,0)
			wait(2)
			lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
		end
		if string.sub(msg, 1, 9) == (prefix..""grespawn"") then
			lplayer.Character.Humanoid.Health = 0
			wait(1)
			lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
			lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
		end
		if string.sub(msg, 1, 9) == (prefix..""explorer"") then
			loadstring(game:GetObjects(""rbxassetid://492005721"")[1].Source)()
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Success!"";
				Text = ""DEX Explorer has loaded."";
			})
		end
		if string.sub(msg, 1, 6) == (prefix..""anim "") then
			local Anim = Instance.new(""Animation"")
			Anim.AnimationId = ""rbxassetid://""..(string.sub(msg, 7))
			local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
			track:Play(.1, 1, 1)
		end
		if string.sub(msg, 1, 8) == (prefix..""animgui"") then
			loadstring(game:GetObjects(""rbxassetid://1202558084"")[1].Source)()
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Success!"";
				Text = ""Energize Animations GUI has loaded."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""savepos"") then
			saved = lplayer.Character.HumanoidRootPart.CFrame
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Position Saved"";
				Text = ""Use ;loadpos to return to saved position."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""loadpos"") then
			lplayer.Character.HumanoidRootPart.CFrame = saved
		end
		if string.sub(msg, 1, 6) == (prefix..""bang "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local Anim2 = Instance.new(""Animation"")
				Anim2.AnimationId = ""rbxassetid://148840371""
				local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
				track2:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""unbang"") then
			banpl = false
		end
		if string.sub(msg, 1, 10) == (prefix..""bringmod "") then
			local function bringmodw()
				for i,obj in ipairs(game:GetService(""Workspace""):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						for i,ch in pairs(obj:GetDescendants()) do
							if (ch:IsA(""BasePart"")) then
								ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
								ch.CanCollide = false
								ch.Transparency = 0.7
								wait()
								ch.CFrame = lplayer.Character[""Left Leg""].CFrame
								wait()
								ch.CFrame = lplayer.Character[""Right Leg""].CFrame
								wait()
								ch.CFrame = lplayer.Character[""Head""].CFrame
							end
						end
					end
				end
			end
			while wait() do
				bringmodw()
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""BringMod"";
				Text = ""BringMod enabled."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""respawn"") then
			local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
			local hum = Instance.new('Humanoid', mod)
			local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
			lplayer.Character = mod
		end
		if string.sub(msg, 1, 9) == (prefix..""shutdown"") then
			game:GetService'RunService'.Stepped:Connect(function()
				pcall(function()
					for i,v in pairs(game:GetService'Players':GetPlayers()) do
						if v.Character ~= nil and v.Character:FindFirstChild'Head' then
							for _,x in pairs(v.Character.Head:GetChildren()) do
								if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
							end
						end
					end
				end)
			end)
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Attempting Shutdown"";
				Text = ""Shutdown Attempt has begun."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""delobj "") then
			objtodel = (string.sub(msg, 9))
			for i,v in pairs(game:GetService(""Workspace""):GetDescendants()) do
				if v.Name == objtodel then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""getplrs"") then
			for i,v in pairs(game:GetService(""Players""):GetPlayers())do
				print(v)
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Printed"";
				Text = ""Players have been printed to console. (F9)"";
			})
		end
		if string.sub(msg, 1, 9) == (prefix..""deldecal"") then
			for i,v in pairs(game:GetService(""Workspace""):GetDescendants())do
				if (v:IsA(""Decal"")) then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix..""opfinality"") then
			loadstring(game:GetObjects(""rbxassetid://1294358929"")[1].Source)()
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Success!"";
				Text = ""OpFinality GUI has loaded."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""remotes"") then
			remotes = true
			added = true
			game.DescendantAdded:connect(function(rmt)
				if added == true then
					if remotes == true then
						if rmt:IsA(""RemoteEvent"") then
							print(""A RemoteEvent was added!"")
							print("" game."" .. rmt:GetFullName() .. "" | RemoteEvent"")
							print("" game."" .. rmt:GetFullName() .. "" | RemoteEvent"", 247, 0, 0, true)
						end end end
			end)
			game.DescendantAdded:connect(function(rmtfnctn)
				if added == true then
					if remotes == true then
						if rmtfnctn:IsA(""RemoteFunction"") then
							warn(""A RemoteFunction was added!"")
							warn("" game."" .. rmtfnctn:GetFullName() .. "" | RemoteFunction"")
							print("" game."" .. rmtfnctn:GetFullName() .. "" | RemoteFunction"", 5, 102, 198, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bndfnctn)
				if added == true then
					if binds == true then
						if bndfnctn:IsA(""BindableFunction"") then
							print(""A BindableFunction was added!"")
							print("" game."" .. bndfnctn:GetFullName() .. "" | BindableFunction"")
							print("" game."" .. bndfnctn:GetFullName() .. "" | BindableFunction"", 239, 247, 4, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bnd)
				if added == true then
					if binds == true then
						if bnd:IsA(""BindableEvent"") then
							warn(""A BindableEvent was added!"")
							warn("" game."" .. bnd:GetFullName() .. "" | BindableEvent"")
							print("" game."" .. bnd:GetFullName() .. "" | BindableEvent"", 13, 193, 22, true)
						end end end
			end)


			if binds == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA(""BindableFunction"") then
						print("" game."" .. v:GetFullName() .. "" | BindableFunction"")
						print("" game."" .. v:GetFullName() .. "" | BindableFunction"", 239, 247, 4, true)
					end end
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA(""BindableEvent"") then
						warn("" game."" .. v:GetFullName() .. "" | BindableEvent"")
						print("" game."" .. v:GetFullName() .. "" | BindableEvent"", 13, 193, 22, true)
					end end
			else
				print(""Off"")
			end
			if remotes == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA(""RemoteFunction"") then
						warn("" game."" .. v:GetFullName() .. "" | RemoteFunction"")
						print("" game."" .. v:GetFullName() .. "" | RemoteFunction"", 5, 102, 198, true)
					end end
				wait()
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA(""RemoteEvent"") then
						print("" game."" .. v:GetFullName() .. "" | RemoteEvent"")
						print("" game."" .. v:GetFullName() .. "" | RemoteEvent"", 247, 0, 0, true)
					end end
			else
				print(""Off"")
			end
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Printing Remotes"";
				Text = ""Type ;noremotes to disable."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""noremotes"") then
			remotes = false
			added = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Printing Remotes Disabled"";
				Text = ""Type ;remotes to enable."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""tpdefault"") then
			spin = false
			followed = false
			traill = false
			noclip = false
			annoying = false
			hwalk = false
			cbringing = false
		end
		if string.sub(msg, 1, 8) == (prefix..""stopsit"") then
			stopsitting = true
		end
		if string.sub(msg, 1, 6) == (prefix..""gosit"") then
			stopsitting = false
		end
		if string.sub(msg, 1, 8) == (prefix..""version"") then
			print(adminversion)
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Version"";
				Text = adminversion;
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""clicktp"") then
			clickgoto = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Click TP"";
				Text = ""Press E to teleport to mouse position, ;noclicktp to stop"";
			})
		end
		if string.sub(msg, 1, 9) == (prefix..""clickdel"") then
			clickdel = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Click Delete"";
				Text = ""Press E to delete part at mouse, ;noclickdel to stop"";
			})
		end
		if string.sub(msg, 1, 11) == (prefix..""noclickdel"") then
			clickdel = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Click Delete"";
				Text = ""Click delete has been disabled."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""noclicktp"") then
			clickgoto = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Click TP"";
				Text = ""Click TP has been disabled."";
			})
		end
		if string.sub(msg, 1, 8) == (prefix..""toolson"") then
			gettingtools = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Tools Enabled"";
				Text = ""Automatically colleting tools dropped."";
			})
		end
		if string.sub(msg, 1, 9) == (prefix..""toolsoff"") then
			gettingtools = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Tools Disabled"";
				Text = ""Click TP has been disabled."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""delcmdbar"") then
			ScreenGui:Destroy()
		end
		if string.sub(msg, 1, 6) == (prefix..""reset"") then
			lplayer.Character.Head:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix..""state "") then
			statechosen = string.sub(msg, 8)
			changingstate = true
		end
		if string.sub(msg, 1, 9) == (prefix..""gravity "") then
			game:GetService(""Workspace"").Gravity = string.sub(msg, 10)
		end
		if string.sub(msg, 1, 10) == (prefix..""looprhats"") then
			removingmeshhats = true
		end
		if string.sub(msg, 1, 12) == (prefix..""unlooprhats"") then
			removingmeshhats = false
		end
		if string.sub(msg, 1, 10) == (prefix..""looprtool"") then
			removingmeshtool = true
		end
		if string.sub(msg, 1, 12) == (prefix..""unlooprtool"") then
			removingmeshtool = false
		end
		if string.sub(msg, 1, 10) == (prefix..""givetool "") then
			for i,v in pairs(game:GetService(""Players"").LocalPlayer.Character:GetDescendants()) do
				if v:IsA(""Tool"") then
					for i,player in pairs(GetPlayer(string.sub(msg, 11))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 14) == (prefix..""givealltools "") then
			for i,v in pairs(game:GetService(""Players"").LocalPlayer.Backpack:GetDescendants()) do
				if v:IsA(""Tool"") then
					v.Parent = lplayer.Character
					wait()
					for i,player in pairs(GetPlayer(string.sub(msg, 15))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 5) == (prefix..""age "") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.."" Account Age: ""..player.AccountAge.."" days!"", ""All"")
			end
		end
		if string.sub(msg, 1, 4) == (prefix..""id "") then
			for i,player in pairs(GetPlayer(string.sub(msg, 5))) do
				game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.."" Account ID: ""..player.UserId, ""All"")
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."".age "") then
			for i,player in pairs(GetPlayer(string.sub(msg, 7))) do
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = player.AccountAge.."" Days"";
					Text = ""Account age of ""..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 5) == (prefix.."".id "") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = player.UserId.."" ID"";
					Text = ""Account ID of ""..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix..""gameid"") then
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Game ID"";
				Text = ""Game ID: "".. game.GameId;
			})
		end
		if string.sub(msg, 1, 4) == (prefix..""pgs"") then
			local pgscheck = game:GetService(""Workspace""):PGSIsEnabled()
			if pgscheck == true then
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""PGSPhysicsSolverEnabled"";
					Text = ""PGS is Enabled!"";
				})
			else
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""PGSPhysicsSolverEnabled"";
					Text = ""PGS is Disabled!"";
				})
			end
		end
		if string.sub(msg, 1, 12) == (prefix..""removeinvis"") then
			for i,v in pairs(game:GetService(""Workspace""):GetDescendants()) do
				if v:IsA(""Part"") then
					if v.Transparency == 1 then
						if v.Name ~= ""HumanoidRootPart"" then
							v:Destroy()
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix..""removefog"") then
			game:GetService(""Lighting"").FogStart = 0
			game:GetService(""Lighting"").FogEnd = 9999999999999
		end
		if string.sub(msg, 1, 8) == (prefix..""disable"") then
			lplayer.Character.Humanoid.Parent = lplayer
		end
		if string.sub(msg, 1, 7) == (prefix..""enable"") then
			lplayer.Humanoid.Parent = lplayer.Character
		end
		if string.sub(msg, 1, 8) == (prefix..""prefix "") then
			prefix = (string.sub(msg, 9, 9))
			wait(0.1)
			change()
			wait(0.1)
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Prefix changed!"";
				Text = ""Prefix is now ""..prefix.."". Use ;resetprefix to reset to ;"";
			})
		end
		if string.sub(msg, 1, 12) == ("";resetprefix"") then
			prefix = "";""
			wait(0.1)
			change()
			wait(0.1)
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""Prefix changed!"";
				Text = ""Prefix is now ""..prefix.."". Make sure it's one key!"";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""flyspeed "") then
			speedfly = string.sub(msg, 11)
			wait()
			change()
		end
		if string.sub(msg, 1, 8) == (prefix..""carpet "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				local Anim3 = Instance.new(""Animation"")
				Anim3.AnimationId = ""rbxassetid://282574440""
				local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
				track3:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix..""uncarpet"") then
			banpl = false
		end
		if string.sub(msg, 1, 7) == (prefix..""stare "") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				staring = true
				stareplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix..""unstare"") then
			staring = false
		end
		if string.sub(msg, 1, 8) == (prefix..""logchat"") then
			chatlogs = true
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""LogChat enabled"";
				Text = ""Now logging all player chat."";
			})
		end
		if string.sub(msg, 1, 10) == (prefix..""unlogchat"") then
			chatlogs = false
			game:GetService(""StarterGui""):SetCore(""SendNotification"", {
				Title = ""LogChat disabled"";
				Text = ""Stopped logging all player chat."";
			})
		end
		if string.sub(msg, 1, 7) == (prefix..""fixcam"") then
			game:GetService(""Workspace"").CurrentCamera:Destroy()
			wait(0.1)
			game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			game:GetService(""Workspace"").CurrentCamera.CameraType = ""Custom""
			lplayer.CameraMinZoomDistance = 0.5
			lplayer.CameraMaxZoomDistance = 400
			lplayer.CameraMode = ""Classic""
		end
		if string.sub(msg, 1, 8) == (prefix..""unstate"") then
			changingstate = false
		end
	end)

	local function tp()
		for i, player in ipairs(game:GetService(""Players""):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild(""HumanoidRootPart"") then
				if player.Name == brplr then
					player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 2
				end
			end
		end
	end
	local function tpall()
		for i, player in ipairs(game:GetService(""Players""):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild(""HumanoidRootPart"") then
				player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 3
			end
		end
	end
	spawn(function()
		while wait(spamdelay) do
			if spamming == true then
				game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, ""All"")
			end
		end
	end)
	spawn(function()
		while wait(spamdelay) do
			if spammingpm == true then
				game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(""/w ""..pmspammed.."" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"", ""All"")
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbring == true then
				tp()
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbringall == true then
				tpall()
			end
		end
	end)

	Mouse.KeyDown:connect(function(Key)
		if Key == prefix then
			CMDBAR:CaptureFocus()
		end
	end)

	CMDBAR.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if string.sub(CMDBAR.Text, 1, 5) == (""kill "") then
				if string.sub(CMDBAR.Text, 6) == ""me"" then
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6)))do
						local NOW = lplayer.Character.HumanoidRootPart.CFrame
						lplayer.Character.Humanoid.Name = 1
						local l = lplayer.Character[""1""]:Clone()
						l.Parent = lplayer.Character
						l.Name = ""Humanoid""
						wait(0.1)
						lplayer.Character[""1""]:Destroy()
						game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
						lplayer.Character.Animate.Disabled = true
						wait(0.1)
						lplayer.Character.Animate.Disabled = false
						lplayer.Character.Humanoid.DisplayDistanceType = ""None""
						for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
							lplayer.Character.Humanoid:EquipTool(v)
						end
						local function tp(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1:MoveTo(char2.Head.Position)
							end
						end
						wait(0.1)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.2)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.5)
						lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
						wait(0.7)
						tp(lplayer,game:GetService(""Players"")[v.Name])
						wait(0.7)
						lplayer.Character.HumanoidRootPart.CFrame = NOW
						game:GetService(""StarterGui""):SetCore(""SendNotification"", {
							Title = ""Tools needed!"";
							Text = ""You need a tool in your backpack for this command!"";
						})
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""bring "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
						end
					end
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					tp(game:GetService(""Players"")[v.Name], lplayer)
					wait(0.2)
					tp(game:GetService(""Players"")[v.Name], lplayer)
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.5)
					getout(lplayer, game:GetService(""Players"")[v.Name])
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""spin "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
					spinplr = v
					wait(0.5)
					spin = true
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""unspin"") then
				spin = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""attach "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
					attplr = v
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""unattach "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					getout(lplayer, game:GetService(""Players"")[v.Name])
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""follow "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					followed = true
					flwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""unfollow"") then
				followed = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""freefall "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""trail "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					traill = true
					trlplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""untrail"") then
				traill = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""orbit "") then
				if string.sub(CMDBAR.Text, 7) == ""all"" or string.sub(CMDBAR.Text, 7) == ""others"" or string.sub(CMDBAR.Text, 7) == ""me"" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local o = Instance.new(""RocketPropulsion"")
						o.Parent = lplayer.Character.HumanoidRootPart
						o.Name = ""Orbit""
						o.Target = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart
						o:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""unorbit"") then
				lplayer.Character.HumanoidRootPart.Orbit:Destroy()
				noclip = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""fling "") then
				if string.sub(CMDBAR.Text, 7) == ""all"" or string.sub(CMDBAR.Text, 7) == ""others"" or string.sub(CMDBAR.Text, 7) == ""me"" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local y = Instance.new(""RocketPropulsion"")
						y.Parent = lplayer.Character.HumanoidRootPart
						y.CartoonFactor = 1
						y.MaxThrust = 800000
						y.MaxSpeed = 1000
						y.ThrustP = 200000
						y.Name = ""Fling""
						game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Head
						y.Target = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart
						y:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""unfling"") then
				noclip = false
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Head
				wait(0.4)
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""fecheck"") then
				if game:GetService(""Workspace"").FilteringEnabled == true then
					warn(""FE is Enabled (Filtering Enabled)"")
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""FE is Enabled"";
						Text = ""Filtering Enabled. Enjoy using Reviz Admin!"";
					})
				else
					warn(""FE is Disabled (Filtering Disabled) Consider using a different admin script."")
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""FE is Disabled"";
						Text = ""Filtering Disabled. Consider using a different admin script."";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""void "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""noclip"") then
				noclip = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Noclip enabled"";
					Text = ""Type ;clip to disable"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == (""clip"") then
				noclip = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Noclip disabled"";
					Text = ""Type ;noclip to enable"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""speed "") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 7))
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""ws "") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""hipheight "") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""hh "") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""jumppower "") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""jp "") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""default"") then
				lplayer.Character.Humanoid.JumpPower = 50
				lplayer.Character.Humanoid.WalkSpeed = 16
				lplayer.Character.Humanoid.HipHeight = 0
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""annoy "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					annoying = true
					annplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""unannoy"") then
				annoying = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""headwalk "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					hwalk = true
					hdwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""unheadwalk"") then
				hwalk = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""nolimbs"") then
				lplayer.Character[""Left Leg""]:Destroy()
				lplayer.Character[""Left Arm""]:Destroy()
				lplayer.Character[""Right Leg""]:Destroy()
				lplayer.Character[""Right Arm""]:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""god"") then
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character[""1""]:Clone()
				l.Parent = lplayer.Character
				l.Name = ""Humanoid""
				wait(0.1)
				lplayer.Character[""1""]:Destroy()
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = ""None""
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""FE Godmode enabled"";
					Text = ""Use ;grespawn or ;respawn to remove."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""drophats"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""droptool"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Tool"")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""loopdhats"") then
				droppinghats = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Loop Drop Enabled"";
					Text = ""Type ;unloopdhats to disable"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == (""unloopdhats"") then
				droppinghats = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Loop Drop Disabled"";
					Text = ""Type ;loopdhats to enable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""loopdtool"") then
				droppingtools = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Loop Drop Enabled"";
					Text = ""Type ;unloopdtool to disable"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == (""unloopdtool"") then
				droppingtools = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Loop Drop Disabled"";
					Text = ""Type ;loopdtool to enable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""invisible"") then -- Credit to Timeless
				Local = game:GetService('Players').LocalPlayer
				Char  = Local.Character
				touched,tpdback = false, false
				box = Instance.new('Part',workspace)
				box.Anchored = true
				box.CanCollide = true
				box.Size = Vector3.new(10,1,10)
				box.Position = Vector3.new(0,10000,0)
				box.Touched:connect(function(part)
					if (part.Parent.Name == Local.Name) then
						if touched == false then
							touched = true
							function apply()
								if script.Disabled ~= true then
									no = Char.HumanoidRootPart:Clone()
									wait(.25)
									Char.HumanoidRootPart:Destroy()
									no.Parent = Char
									Char:MoveTo(loc)
									touched = false
								end end
							if Char then
								apply()
							end
						end
					end
				end)
				repeat wait() until Char
				loc = Char.HumanoidRootPart.Position
				Char:MoveTo(box.Position + Vector3.new(0,.5,0))
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Invisibility enabled!"";
					Text = ""Reset or use ;respawn to remove."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""view "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					if game:GetService(""Players"")[v.Name].Character.Humanoid then
						game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Humanoid
					else
						game:GetService(""Workspace"").CurrentCamera.CameraSubject = game:GetService(""Players"")[v.Name].Character.Head
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""unview"") then
				if lplayer.Character.Humanoid then
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				else
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Head
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""goto "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""fly"") then
				repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
				repeat wait() until Mouse

				local T = lplayer.Character.HumanoidRootPart
				local CONTROL = {F = 0, B = 0, L = 0, R = 0}
				local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				local SPEED = speedget

				local function fly()
					flying = true
					local BG = Instance.new('BodyGyro', T)
					local BV = Instance.new('BodyVelocity', T)
					BG.P = 9e4
					BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					BG.cframe = T.CFrame
					BV.velocity = Vector3.new(0, 0.1, 0)
					BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
					spawn(function()
						repeat wait()
							lplayer.Character.Humanoid.PlatformStand = true
							if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
								SPEED = 50
							elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
								SPEED = 0
							end
							if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
								lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
							elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							else
								BV.velocity = Vector3.new(0, 0.1, 0)
							end
							BG.cframe = workspace.CurrentCamera.CoordinateFrame
						until not flying
						CONTROL = {F = 0, B = 0, L = 0, R = 0}
						lCONTROL = {F = 0, B = 0, L = 0, R = 0}
						SPEED = 0
						BG:destroy()
						BV:destroy()
						lplayer.Character.Humanoid.PlatformStand = false
					end)
				end
				Mouse.KeyDown:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = speedfly
					elseif KEY:lower() == 's' then
						CONTROL.B = -speedfly
					elseif KEY:lower() == 'a' then
						CONTROL.L = -speedfly
					elseif KEY:lower() == 'd' then
						CONTROL.R = speedfly
					end
				end)
				Mouse.KeyUp:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = 0
					elseif KEY:lower() == 's' then
						CONTROL.B = 0
					elseif KEY:lower() == 'a' then
						CONTROL.L = 0
					elseif KEY:lower() == 'd' then
						CONTROL.R = 0
					end
				end)
				fly()
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""unfly"") then
				flying = false
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""chat "") then
				game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(CMDBAR.Text, 6)), ""All"")
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""spam "") then
				spamtext = (string.sub(CMDBAR.Text, 6))
				spamming = true
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""unspam"") then
				spamming = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""spamwait "") then
				spamdelay = (string.sub(CMDBAR.Text, 10))
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""pmspam "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					pmspammed = v.Name
					spammingpm = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""unpmspam"") then
				spammingpm = false
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""cfreeze "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 9))) do
					v.Character[""Left Leg""].Anchored = true
					v.Character[""Left Arm""].Anchored = true
					v.Character[""Right Leg""].Anchored = true
					v.Character[""Right Arm""].Anchored = true
					v.Character.Torso.Anchored = true
					v.Character.Head.Anchored = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""uncfreeze "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 11))) do
					v.Character[""Left Leg""].Anchored = false
					v.Character[""Left Arm""].Anchored = false
					v.Character[""Right Leg""].Anchored = false
					v.Character[""Right Arm""].Anchored = false
					v.Character.Torso.Anchored = false
					v.Character.Head.Anchored = false
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""unlockws"") then
				local a = game:GetService(""Workspace""):getChildren()
				for i = 1, #a do
					if a[i].className == ""Part"" then
						a[i].Locked = false
					elseif a[i].className == ""Model"" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == ""Part"" then
								r[i].Locked = false
							end
						end
					end
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Success!"";
					Text = ""Workspace unlocked. Use ;lockws to lock."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""lockws"") then
				local a = game:GetService(""Workspace""):getChildren()
				for i = 1, #a do
					if a[i].className == ""Part"" then
						a[i].Locked = true
					elseif a[i].className == ""Model"" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == ""Part"" then
								r[i].Locked = true
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""btools"") then
				local Clone_T = Instance.new(""HopperBin"",lplayer.Backpack)
				Clone_T.BinType = ""Clone""
				local Destruct = Instance.new(""HopperBin"",lplayer.Backpack)
				Destruct.BinType = ""Hammer""
				local Hold_T = Instance.new(""HopperBin"",lplayer.Backpack)
				Hold_T.BinType = ""Grab""
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""pstand"") then
				lplayer.Character.Humanoid.PlatformStand = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""unpstand"") then
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""blockhead"") then
				lplayer.Character.Head.Mesh:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""sit"") then
				lplayer.Character.Humanoid.Sit = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""bringobj "") then
				local function bringobjw()
					for i,obj in ipairs(game:GetService(""Workspace""):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
							obj.CanCollide = false
							obj.Transparency = 0.7
							wait()
							obj.CFrame = lplayer.Character[""Left Leg""].CFrame
							wait()
							obj.CFrame = lplayer.Character[""Right Leg""].CFrame
							wait()
							obj.CFrame = lplayer.Character[""Head""].CFrame
						end
					end
				end
				while wait() do
					bringobjw()
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""BringObj"";
					Text = ""BringObj enabled."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""wsvis "") then
				vis = (string.sub(CMDBAR.Text, 7))
				local a = game:GetService(""Workspace""):GetDescendants()
				for i = 1, #a do
					if a[i].className == ""Part"" then
						a[i].Transparency = vis
					elseif a[i].className == ""Model"" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == ""Part"" then
								r[i].Transparency = vis
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""hypertotal"") then
				loadstring(game:GetObjects(""rbxassetid://1255063809"")[1].Source)()
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Success!"";
					Text = ""HyperTotal GUI Loaded!"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == (""cmds"") then
				CMDSFRAME.Visible = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""rmeshhats"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""blockhats"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Accessory"")) or (v:IsA(""Hat"")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""rmeshtool"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Tool"")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""blocktool"") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA(""Tool"")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""spinner"") then
				local p = Instance.new(""RocketPropulsion"")
				p.Parent = lplayer.Character.HumanoidRootPart
				p.Name = ""Spinner""
				p.Target = lplayer.Character[""Left Arm""]
				p:Fire()
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Spinner enabled"";
					Text = ""Type ;nospinner to disable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""nospinner"") then
				lplayer.Character.HumanoidRootPart.Spinner:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""reachd"") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA(""Tool"") then
						local a = Instance.new(""SelectionBox"",v.Handle)
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,60)
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Reach applied!"";
					Text = ""Applied to equipped sword. Use ;noreach to disable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""reach "") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA(""Tool"") then
						local a = Instance.new(""SelectionBox"",v.Handle)
						a.Name = ""Reach""
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(CMDBAR.Text, 7)))
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Reach applied!"";
					Text = ""Applied to equipped sword. Use ;noreach to disable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""noreach"") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA(""Tool"") then
						v.Handle.Reach:Destroy()
					end
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Reach removed!"";
					Text = ""Removed reach from equipped sword."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""rkill "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""tp me "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""cbring "") then
				if (string.sub(CMDBAR.Text, 8)) == ""all"" or (string.sub(CMDBAR.Text, 8)) == ""All"" or (string.sub(CMDBAR.Text, 8)) == ""ALL"" then
					cbringall = true
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
						brplr = v.Name
					end
				end
				cbring = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""uncbring"") then
				cbring = false
				cbringall = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""swap "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local NOWPLR = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					tp(lplayer, game:GetService(""Players"")[v.Name])
					wait(0.4)
					lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""glitch "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character[""1""]:Clone()
					l.Parent = lplayer.Character
					l.Name = ""Humanoid""
					wait(0.1)
					lplayer.Character[""1""]:Destroy()
					game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = ""None""
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService(""Players"")[v.Name].Character[""Left Arm""].CFrame
					wait(0.4)
					b = Instance.new(""BodyForce"")
					b.Parent = lplayer.Character.HumanoidRootPart
					b.Name = ""Glitch""
					b.Force = Vector3.new(100000000,5000,0)
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""Tools needed!"";
						Text = ""You need a tool in your backpack for this command!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""unglitch"") then
				lplayer.Character.HumanoidRootPart.Glitch:Destroy()
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
				b = Instance.new(""BodyForce"")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = ""unGlitch""
				b.Force = Vector3.new(0,-5000000,0)
				wait(2)
				lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""grespawn"") then
				lplayer.Character.Humanoid.Health = 0
				wait(1)
				lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
				lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""explorer"") then
				loadstring(game:GetObjects(""rbxassetid://492005721"")[1].Source)()
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Success!"";
					Text = ""DEX Explorer has loaded."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""anim "") then
				local Anim = Instance.new(""Animation"")
				Anim.AnimationId = ""rbxassetid://""..(string.sub(CMDBAR.Text, 6))
				local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
				track:Play(.1, 1, 1)
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""animgui"") then
				loadstring(game:GetObjects(""rbxassetid://1202558084"")[1].Source)()
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Success!"";
					Text = ""Energize Animations GUI has loaded."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""savepos"") then
				saved = lplayer.Character.HumanoidRootPart.CFrame
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Position Saved"";
					Text = ""Use ;loadpos to return to saved position."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""loadpos"") then
				lplayer.Character.HumanoidRootPart.CFrame = saved
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""bang "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local Anim2 = Instance.new(""Animation"")
					Anim2.AnimationId = ""rbxassetid://148840371""
					local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
					track2:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""unbang"") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""bringmod "") then
				local function bringmodw()
					for i,obj in ipairs(game:GetService(""Workspace""):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							for i,ch in pairs(obj:GetDescendants()) do
								if (ch:IsA(""BasePart"")) then
									ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
									ch.CanCollide = false
									ch.Transparency = 0.7
									wait()
									ch.CFrame = lplayer.Character[""Left Leg""].CFrame
									wait()
									ch.CFrame = lplayer.Character[""Right Leg""].CFrame
									wait()
									ch.CFrame = lplayer.Character[""Head""].CFrame
								end
							end
						end
					end
				end
				while wait() do
					bringmodw()
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""BringMod"";
					Text = ""BringMod enabled."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""respawn"") then
				local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
				local hum = Instance.new('Humanoid', mod)
				local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
				lplayer.Character = mod
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""shutdown"") then
				game:GetService'RunService'.Stepped:Connect(function()
					pcall(function()
						for i,v in pairs(game:GetService'Players':GetPlayers()) do
							if v.Character ~= nil and v.Character:FindFirstChild'Head' then
								for _,x in pairs(v.Character.Head:GetChildren()) do
									if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
								end
							end
						end
					end)
				end)
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Attempting Shutdown"";
					Text = ""Shutdown Attempt has begun."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""delobj "") then
				objtodel = (string.sub(CMDBAR.Text, 8))
				for i,v in pairs(game:GetService(""Workspace""):GetDescendants()) do
					if v.Name == objtodel then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""getplrs"") then
				for i,v in pairs(game:GetService(""Players""):GetPlayers())do
					print(v)
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Printed"";
					Text = ""Players have been printed to console. (F9)"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""deldecal"") then
				for i,v in pairs(game:GetService(""Workspace""):GetDescendants())do
					if (v:IsA(""Decal"")) then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == (""opfinality"") then
				loadstring(game:GetObjects(""rbxassetid://1294358929"")[1].Source)()
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Success!"";
					Text = ""OpFinality GUI has loaded."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""remotes"") then
				remotes = true
				added = true
				game.DescendantAdded:connect(function(rmt)
					if added == true then
						if remotes == true then
							if rmt:IsA(""RemoteEvent"") then
								print(""A RemoteEvent was added!"")
								print("" game."" .. rmt:GetFullName() .. "" | RemoteEvent"")
								print("" game."" .. rmt:GetFullName() .. "" | RemoteEvent"", 247, 0, 0, true)
							end end end
				end)
				game.DescendantAdded:connect(function(rmtfnctn)
					if added == true then
						if remotes == true then
							if rmtfnctn:IsA(""RemoteFunction"") then
								warn(""A RemoteFunction was added!"")
								warn("" game."" .. rmtfnctn:GetFullName() .. "" | RemoteFunction"")
								print("" game."" .. rmtfnctn:GetFullName() .. "" | RemoteFunction"", 5, 102, 198, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bndfnctn)
					if added == true then
						if binds == true then
							if bndfnctn:IsA(""BindableFunction"") then
								print(""A BindableFunction was added!"")
								print("" game."" .. bndfnctn:GetFullName() .. "" | BindableFunction"")
								print("" game."" .. bndfnctn:GetFullName() .. "" | BindableFunction"", 239, 247, 4, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bnd)
					if added == true then
						if binds == true then
							if bnd:IsA(""BindableEvent"") then
								warn(""A BindableEvent was added!"")
								warn("" game."" .. bnd:GetFullName() .. "" | BindableEvent"")
								print("" game."" .. bnd:GetFullName() .. "" | BindableEvent"", 13, 193, 22, true)
							end end end
				end)


				if binds == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA(""BindableFunction"") then
							print("" game."" .. v:GetFullName() .. "" | BindableFunction"")
							print("" game."" .. v:GetFullName() .. "" | BindableFunction"", 239, 247, 4, true)
						end end
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA(""BindableEvent"") then
							warn("" game."" .. v:GetFullName() .. "" | BindableEvent"")
							print("" game."" .. v:GetFullName() .. "" | BindableEvent"", 13, 193, 22, true)
						end end
				else
					print(""Off"")
				end
				if remotes == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA(""RemoteFunction"") then
							warn("" game."" .. v:GetFullName() .. "" | RemoteFunction"")
							print("" game."" .. v:GetFullName() .. "" | RemoteFunction"", 5, 102, 198, true)
						end end
					wait()
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA(""RemoteEvent"") then
							print("" game."" .. v:GetFullName() .. "" | RemoteEvent"")
							print("" game."" .. v:GetFullName() .. "" | RemoteEvent"", 247, 0, 0, true)
						end end
				else
					print(""Off"")
				end
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Printing Remotes"";
					Text = ""Type ;noremotes to disable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""noremotes"") then
				remotes = false
				added = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Printing Remotes Disabled"";
					Text = ""Type ;remotes to enable."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""tpdefault"") then
				spin = false
				followed = false
				traill = false
				noclip = false
				annoying = false
				hwalk = false
				cbringing = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""stopsit"") then
				stopsitting = true
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""gosit"") then
				stopsitting = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""version"") then
				print(adminversion)
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Version"";
					Text = adminversion;
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""clicktp"") then
				clickgoto = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Click TP"";
					Text = ""Press E to teleport to mouse position"";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""noclicktp"") then
				clickgoto = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Click TP"";
					Text = ""Click TP has been disabled."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""toolson"") then
				gettingtools = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools Enabled"";
					Text = ""Automatically colleting tools dropped."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""toolsoff"") then
				gettingtools = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Tools Disabled"";
					Text = ""Click TP has been disabled."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""delcmdbar"") then
				ScreenGui:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 5) == (""reset"") then
				lplayer.Character.Head:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""state "") then
				statechosen = string.sub(CMDBAR.Text, 7)
				changingstate = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""gravity "") then
				game:GetService(""Workspace"").Gravity = string.sub(CMDBAR.Text, 9)
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""looprhats"") then
				removingmeshhats = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == (""unlooprhats"") then
				removingmeshhats = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""looprtool"") then
				removingmeshtool = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == (""unlooprtool"") then
				removingmeshtool = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""givetool "") then
				for i,v in pairs(game:GetService(""Players"").LocalPlayer.Character:GetDescendants()) do
					if v:IsA(""Tool"") then
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == (""age "") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.."" Account Age: ""..player.AccountAge.."" days!"", ""All"")
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""id "") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 4))) do
					game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.."" Account ID: ""..player.UserId, ""All"")
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("".age "") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = player.AccountAge.."" Days"";
						Text = ""Account age of ""..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("".id "") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = player.UserId.."" ID"";
						Text = ""Account ID of ""..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""gameid"") then
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""Game ID"";
					Text = ""Game ID: "".. game.GameId;
				})
			end
			if string.sub(CMDBAR.Text, 1, 3) == (""pgs"") then
				local pgscheck = game:GetService(""Workspace""):PGSIsEnabled()
				if pgscheck == true then
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""PGSPhysicsSolverEnabled"";
						Text = ""PGS is Enabled!"";
					})
				else
					game:GetService(""StarterGui""):SetCore(""SendNotification"", {
						Title = ""PGSPhysicsSolverEnabled"";
						Text = ""PGS is Disabled!"";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 11) == (""removeinvis"") then
				for i,v in pairs(game:GetService(""Workspace""):GetDescendants()) do
					if v:IsA(""Part"") then
						if v.Transparency == 1 then
							if v.Name ~= ""HumanoidRootPart"" then
								v:Destroy()
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""removefog"") then
				game:GetService(""Lighting"").FogStart = 0
				game:GetService(""Lighting"").FogEnd = 9999999999999
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""disable"") then
				lplayer.Character.Humanoid.Parent = lplayer
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""enable"") then
				lplayer.Humanoid.Parent = lplayer.Character
			end
			if string.sub(CMDBAR.Text, 1, 13) == (""givealltools "") then
				for i,v in pairs(game:GetService(""Players"").LocalPlayer.Backpack:GetDescendants()) do
					if v:IsA(""Tool"") then
						v.Parent = lplayer.Character
						wait()
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 14))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""flyspeed "") then
				speedfly = string.sub(CMDBAR.Text, 10)
				wait()
				change()
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""carpet "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					local Anim3 = Instance.new(""Animation"")
					Anim3.AnimationId = ""rbxassetid://282574440""
					local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
					track3:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == (""uncarpet"") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""stare "") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					staring = true
					stareplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""unstare"") then
				staring = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""logchat"") then
				chatlogs = true
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""LogChat enabled"";
					Text = ""Now logging all player chat."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == (""unlogchat"") then
				chatlogs = false
				game:GetService(""StarterGui""):SetCore(""SendNotification"", {
					Title = ""LogChat disabled"";
					Text = ""Stopped logging all player chat."";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == (""fixcam"") then
				game:GetService(""Workspace"").CurrentCamera:Destroy()
				wait(0.1)
				game:GetService(""Workspace"").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				game:GetService(""Workspace"").CurrentCamera.CameraType = ""Custom""
				lplayer.CameraMinZoomDistance = 0.5
				lplayer.CameraMaxZoomDistance = 400
				lplayer.CameraMode = ""Classic""
			end
			if string.sub(CMDBAR.Text, 1, 7) == (""unstate"") then
				changingstate = false
			end
			CMDBAR.Text = """"
		end
	end)

	wait(0.3)
	game:GetService(""StarterGui""):SetCore(""SendNotification"", {
		Title = ""Loaded successfully!"";
		Text = ""Reviz Admin V2 by illremember"";
	})
	wait(0.1)
	print(""Reviz Admin V2 loaded!"")
	if game:GetService(""Workspace"").FilteringEnabled == true then
		warn(""FE is Enabled (Filtering Enabled)"")
		game:GetService(""StarterGui""):SetCore(""SendNotification"", {
			Title = ""FE is Enabled"";
			Text = ""Filtering Enabled. Enjoy using Reviz Admin!"";
		})
	else
		warn(""FE is Disabled (Filtering Disabled) Consider using a different admin script."")
		game:GetService(""StarterGui""):SetCore(""SendNotification"", {
			Title = ""FE is Disabled"";
			Text = ""Filtering Disabled. Consider using a different admin script."";
		})
	end

	local intro = Instance.new(""ScreenGui"")
	local Frame = Instance.new(""Frame"")
	local ImageLabel = Instance.new(""ImageLabel"")
	intro.Parent = game:GetService(""CoreGui"")
	Frame.Parent = intro
	Frame.BackgroundColor3 = Color3.new(1, 1, 1)
	Frame.BackgroundTransparency = 1
	Frame.Size = UDim2.new(1, 0, 0, 300)
	Frame.Position = UDim2.new(0, 0, -0.4, 0)
	ImageLabel.Parent = Frame
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 0, 0, 0)
	ImageLabel.Size = UDim2.new(1, 0, 1, 0)
	ImageLabel.Image = ""http://www.roblox.com/asset/?id=1542162618""
	Frame:TweenPosition(UDim2.new(0, 0, 0.2, 0), ""Out"", ""Elastic"", 3)
	wait(3.01)
	Frame:TweenPosition(UDim2.new(0, 0, 1.5, 0), ""Out"", ""Elastic"", 5)
	wait(5.01)
	intro:Destroy()
end)

arrest.Name = ""arrest""
arrest.Parent = main
arrest.BackgroundColor3 = Color3.new(0, 1, 1)
arrest.Position = UDim2.new(0.349623203, 0, 0.306112915, 0)
arrest.Size = UDim2.new(0, 110, 0, 32)
arrest.Font = Enum.Font.GothamBlack
arrest.Text = ""Arrest""
arrest.TextColor3 = Color3.new(1, 0, 0)
arrest.TextSize = 14
arrest.MouseButton1Down:connect(function()
	local mouse = game.Players.LocalPlayer:GetMouse()
	local arrestEvent = game.Workspace.Remote.arrest
	mouse.Button1Down:connect(function()
		local obj = mouse.Target
		local response = arrestEvent:InvokeServer(obj)
	end)
end)

attach.Name = ""attach""
attach.Parent = main
attach.BackgroundColor3 = Color3.new(0, 1, 1)
attach.Position = UDim2.new(0.679666638, 0, 0.304921538, 0)
attach.Size = UDim2.new(0, 111, 0, 32)
attach.Font = Enum.Font.GothamBlack
attach.Text = ""Aimbot""
attach.TextColor3 = Color3.new(1, 0, 0)
attach.TextSize = 14
attach.MouseButton1Down:connect(function()
	local plrs = game:GetService(""Players"")
	local TeamBased = true ; local teambasedswitch = ""o""
	local presskeytoaim = true; local aimkey = ""e""
	local raycast = false

	local espupdatetime = 5; autoesp = false



	local lockaim = true; local lockangle = 5



	--function findwat(folder, what)
	--	for i, smth in pairs(folder:GetChildren()) do
	--		if string.find(string.lower(tostring(smth)), string.lower(what)) then
	--			return smth
	--		end
	--	end
	--end
	--
	--local plrs = findwat(game, ""Players"")




	local Gui = Instance.new(""ScreenGui"")
	local Move = Instance.new(""Frame"")
	local Main = Instance.new(""Frame"")
	local EspStatus = Instance.new(""TextLabel"")
	local st1 = Instance.new(""TextLabel"")
	local st1_2 = Instance.new(""TextLabel"")
	local st1_3 = Instance.new(""TextLabel"")
	local Name = Instance.new(""TextLabel"")
	--Properties:
	Gui.Name = ""Gui""
	Gui.Parent = plrs.LocalPlayer:WaitForChild(""PlayerGui"")

	Move.Name = ""Move""
	Move.Parent = Gui
	Move.BackgroundColor3 = Color3.new(0.545098, 0, 0)
	Move.BackgroundTransparency = 1
	Move.BorderSizePixel = 0
	Move.Draggable = true
	Move.Position = UDim2.new(0.005, 0, -0.15, 0)
	Move.Size = UDim2.new(0.28141585, 0, 0.0320388414, 0)

	Main.Name = ""Main""
	Main.Parent = Move
	Main.BackgroundColor3 = Color3.new(1, 1, 1)
	Main.Position = UDim2.new(0, -7, 20.9960003, 0)
	Main.Size = UDim2.new(1, 0, 5.79699993, 0)
	Main.Style = Enum.FrameStyle.RobloxSquare

	EspStatus.Name = ""EspStatus""
	EspStatus.Parent = Main
	EspStatus.BackgroundColor3 = Color3.new(1, 1, 1)
	EspStatus.BackgroundTransparency = 1
	EspStatus.Position = UDim2.new(0, 0, 0.300000012, 0)
	EspStatus.Size = UDim2.new(1, 0, 0.162, 0)
	EspStatus.Font = Enum.Font.ArialBold
	EspStatus.Text = ""Press O to change team based mode""
	EspStatus.TextColor3 = Color3.new(0.6, 0.196078, 0.8)
	EspStatus.TextScaled = true
	EspStatus.TextWrapped = true

	st1.Name = ""st1""
	st1.Parent = Main
	st1.BackgroundColor3 = Color3.new(1, 1, 1)
	st1.BackgroundTransparency = 1
	st1.Position = UDim2.new(0.271787882, 0, 0, 0)
	st1.Size = UDim2.new(0.728211343, 0, 0.161862016, 0)
	st1.Font = Enum.Font.ArialBold
	st1.Text = """"
	st1.TextColor3 = Color3.new(0.0784314, 0.541176, 0)
	st1.TextScaled = true
	st1.TextSize = 14
	st1.TextWrapped = true

	st1_2.Name = ""st1""
	st1_2.Parent = Main
	st1_2.BackgroundColor3 = Color3.new(1, 1, 1)
	st1_2.BackgroundTransparency = 1
	st1_2.Position = UDim2.new(0, 0, 0.875999987, 0)
	st1_2.Size = UDim2.new(0.999999881, 0, 0.161862016, 0)
	st1_2.Font = Enum.Font.ArialBold
	st1_2.Text = ""Press E to lock on a person inside ur view""
	st1_2.TextColor3 = Color3.new(0.6, 0.196078, 0.8)
	st1_2.TextScaled = true
	st1_2.TextWrapped = true

	st1_3.Name = ""st1""
	st1_3.Parent = Main
	st1_3.BackgroundColor3 = Color3.new(1, 1, 1)
	st1_3.BackgroundTransparency = 1
	st1_3.Position = UDim2.new(0, 0, 0.54, 0)
	st1_3.Size = UDim2.new(1, 0, 0.261999995, 0)
	st1_3.Font = Enum.Font.ArialBold
	st1_3.Text = ""Press L to enable esp loop and press T to update esp""
	st1_3.TextColor3 = Color3.new(0.6, 0.196078, 0.8)
	st1_3.TextScaled = true
	st1_3.TextWrapped = true


	Name.Name = ""Name""
	Name.Parent = Move
	Name.BackgroundColor3 = Color3.new(0.545098, 0, 0)
	Name.BackgroundTransparency = 1
	Name.Position = UDim2.new(0, 25, 20.9860001, 0)
	Name.Size = UDim2.new(0.838, 0, 1.27999997, 0)
	Name.Font = Enum.Font.Arcade
	Name.Text = ""ARSENAL GUI""
	Name.TextColor3 = Color3.new(0.541176, 0.168627, 0.886275)
	Name.TextScaled = true
	Name.TextSize = 12
	Name.TextWrapped = true
	-- Scripts:


	local plrsforaim = {}

	local lplr = game:GetService(""Players"").LocalPlayer
	Move.Draggable = true
	Gui.ResetOnSpawn = false
	Gui.Name = ""Chat""
	Gui.DisplayOrder = 999

	Gui.Parent = plrs.LocalPlayer.PlayerGui


	f = {}
	local espforlder

	f.addesp = function()
		--print(""ESP ran"")
		if espforlder then
		else
			espforlder = Instance.new(""Folder"")
			espforlder.Parent = game.Workspace.CurrentCamera
		end
		for i, v in pairs(espforlder:GetChildren()) do
			v:Destroy()
		end
		for _, plr in pairs(plrs:GetChildren()) do
			if plr.Character and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name then
				if TeamBased == true then
					if plr.Team.Name ~= plrs.LocalPlayer.Team.Name  then
						local e = espforlder:FindFirstChild(plr.Name)
						if not e then
							--print(""Added esp for team based"")
							local bill = Instance.new(""BillboardGui"", espforlder)
							bill.Name = plr.Name
							bill.AlwaysOnTop = true
							bill.Size = UDim2.new(1,0,1,0)
							bill.Adornee = plr.Character.Head
							local Frame = Instance.new('Frame',bill)
							Frame.Active = true
							Frame.BackgroundColor3 = Color3.new(0.862745, 0.0784314, 0.235294)
							Frame.BackgroundTransparency = 0
							Frame.BorderSizePixel = 0
							Frame.AnchorPoint = Vector2.new(.5, .5)
							Frame.Position = UDim2.new (0.5,0,0.5,0)
							Frame.Size = UDim2.new (1,0,1,0)
							Frame.Rotation = 0
							plr.Character.Humanoid.Died:Connect(function()
								bill:Destroy()
							end)
						end
					end
				else
					local e = espforlder:FindFirstChild(plr.Name)
					if not e then
						--print(""Added esp"")
						local bill = Instance.new(""BillboardGui"", espforlder)
						bill.Name = plr.Name
						bill.AlwaysOnTop = true
						bill.Size = UDim2.new(1,0,1,0)
						bill.Adornee = plr.Character.Head
						local Frame = Instance.new('Frame',bill)
						Frame.Active = true
						Frame.BackgroundColor3 = Color3.new(0/255,255/255,0/255)
						Frame.BackgroundTransparency = 0
						Frame.BorderSizePixel = 0
						Frame.AnchorPoint = Vector2.new(.5, .5)
						Frame.Position = UDim2.new (0.5,0,0.5,0)
						Frame.Size = UDim2.new (1,0,1,0)
						Frame.Rotation = 0
						plr.Character.Humanoid.Died:Connect(function()
							bill:Destroy()
						end)
					end
				end


			end
		end
	end
	local cam = game.Workspace.CurrentCamera

	local mouse = lplr:GetMouse()
	local switch = false
	local key = ""k""
	local aimatpart = nil
	mouse.KeyDown:Connect(function(a)
		if a == ""t"" then
			print(""worked1"")
			f.addesp()
		elseif a == ""u"" then
			if raycast == true then
				raycast = false
			else
				raycast = true
			end
		elseif a == ""l"" then
			if autoesp == false then
				autoesp = true
			else
				autoesp = false
			end
		end
		if a == ""j"" then
			if mouse.Target then
				mouse.Target:Destroy()
			end
		end
		if a == key then
			if switch == false then
				switch = true
			else
				switch = false
				if aimatpart ~= nil then
					aimatpart = nil
				end
			end
		elseif a == teambasedswitch then
			if TeamBased == true then
				TeamBased = false
				teambasedstatus.Text = tostring(TeamBased)
			else
				TeamBased = true
				teambasedstatus.Text = tostring(TeamBased)
			end
		elseif a == aimkey then
			if not aimatpart then
				local maxangle = math.rad(20)
				for i, plr in pairs(plrs:GetChildren()) do
					if plr.Name ~= lplr.Name and plr.Character and plr.Character.Head and plr.Character.Humanoid and plr.Character.Humanoid.Health > 1 then
						if TeamBased == true then
							if plr.Team.Name ~= lplr.Team.Name then
								local an = checkfov(plr.Character.Head)
								if an < maxangle then
									maxangle = an
									aimatpart = plr.Character.Head
								end
							end
						else
							local an = checkfov(plr.Character.Head)
							if an < maxangle then
								maxangle = an
								aimatpart = plr.Character.Head
							end
							print(plr)
						end
						plr.Character.Humanoid.Died:Connect(function()
							if aimatpart.Parent == plr.Character or aimatpart == nil then
								aimatpart = nil
							end
						end)
					end
				end
			else
				aimatpart = nil
			end
		end
	end)

	function getfovxyz (p0, p1, deg)
		local x1, y1, z1 = p0:ToOrientation()
		local cf = CFrame.new(p0.p, p1.p)
		local x2, y2, z2 = cf:ToOrientation()
		--local d = math.deg
		if deg then
			--return Vector3.new(d(x1-x2), d(y1-y2), d(z1-z2))
		else
			return Vector3.new((x1-x2), (y1-y2), (z1-z2))
		end
	end

	function getaimbotplrs()
		plrsforaim = {}
		for i, plr in pairs(plrs:GetChildren()) do
			if plr.Character and plr.Character.Humanoid and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name and plr.Character.Head then

				if TeamBased == true then
					if plr.Team.Name ~= lplr.Team.Name then
						local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
						local r = Ray.new(cf, cf.LookVector * 10000)
						local ign = {}
						for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
							if v:IsA(""BasePart"") then
								table.insert(ign , v)
							end
						end
						local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
						if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
							table.insert(plrsforaim, obj)
						end
					end
				else
					local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
					local r = Ray.new(cf, cf.LookVector * 10000)
					local ign = {}
					for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
						if v:IsA(""BasePart"") then
							table.insert(ign , v)
						end
					end
					local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
					if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
						table.insert(plrsforaim, obj)
					end
				end


			end
		end
	end

	function aimat(part)
		cam.CFrame = CFrame.new(cam.CFrame.p, part.CFrame.p)
	end
	function checkfov (part)
		local fov = getfovxyz(game.Workspace.CurrentCamera.CFrame, part.CFrame)
		local angle = math.abs(fov.X) + math.abs(fov.Y)
		return angle
	end

	game:GetService(""RunService"").RenderStepped:Connect(function()
		if aimatpart then
			aimat(aimatpart)
			if aimatpart.Parent == plrs.LocalPlayer.Character then
				aimatpart = nil
			end
		end


		--	if switch == true then
		--		local maxangle = 99999
		--		
		--		--print(""Loop"")
		--		if true and raycast == false then
		--			for i, plr in pairs(plrs:GetChildren()) do
		--				if plr.Name ~= lplr.Name and plr.Character and plr.Character.Head and plr.Character.Humanoid and plr.Character.Humanoid.Health > 1 then
		--					if TeamBased then
		--						if plr.Team.Name ~= lplr.Team.Name or plr.Team.TeamColor ~= lplr.Team.TeamColor then
		--							local an = checkfov(plr.Character.Head)
		--							if an < maxangle then
		--								maxangle = an
		--								aimatpart = plr.Character.Head
		--								if an < lockangle then
		--									break
		--								end
		--							end
		--						end
		--					else
		--						local an = checkfov(plr.Character.Head)
		--							if an < maxangle then
		--								maxangle = an
		--								aimatpart = plr.Character.Head
		--								if an < lockangle then
		--									break
		--								end
		--							end
		--					end
		--					
		--					
		--					
		--					
		--				end
		--			end
		--		elseif raycast == true then
		--			
		--		end

		if raycast == true and switch == false and not aimatpart then
			getaimbotplrs()
			aimatpart = nil
			local maxangle = 999
			for i, v in ipairs(plrsforaim) do
				if v.Parent ~= lplr.Character then
					local an = checkfov(v)
					if an < maxangle and v ~= lplr.Character.Head then
						maxangle = an
						aimatpart = v
						print(v:GetFullName())
						v.Parent.Humanoid.Died:connect(function()
							aimatpart = nil
						end)
					end
				end
			end

		end
	end)
	delay(0, function()
		while wait(espupdatetime) do
			if autoesp == true then
				pcall(function()
					f.addesp()
				end)
			end
		end
	end)
	warn(""loaded"")
end)

fastrem.Name = ""fastrem""
fastrem.Parent = main
fastrem.BackgroundColor3 = Color3.new(1, 0.333333, 0)
fastrem.Position = UDim2.new(0.00783289783, 0, 0.518048227, 0)
fastrem.Size = UDim2.new(0, 84, 0, 32)
fastrem.Font = Enum.Font.Bodoni
fastrem.Text = ""Fast Remington""
fastrem.TextColor3 = Color3.new(0, 0, 0)
fastrem.TextSize = 14
fastrem.MouseButton1Down:connect(function()
	local Player = game.Players.LocalPlayer.Name
	local Gun = ""Remington 870"" -- < -- Gun Name
	local Run = game:GetService(""RunService"")

	Gun = game.Players[Player].Character[Gun]
	local Mouse = game.Players.LocalPlayer:GetMouse()
	local Down = false
	local Sound = Gun.Handle.FireSound

	function CreateRay(Point_A, Point_B)
		local Ray = Ray.new(Point_A, (Point_B - Point_A).Unit * (2 ^ 31 - 1))
		local Part, Pos = workspace:FindPartOnRay(Ray, game.Players.LocalPlayer.Character)
		local Dist = (Point_A - Pos).Magnitude
		local CFrame = CFrame.new(Point_A, Pos) * CFrame.new(0, 0, -Dist / 2)

		return CFrame, Dist, Ray
	end

	function FireLaser(target)
		coroutine.resume(coroutine.create(function()
			local C, D, R = CreateRay(Gun.Muzzle.CFrame.p, target.CFrame.p)
			local Bullet = Instance.new(""Part"", Gun)
			Bullet.BrickColor = BrickColor.Yellow()
			Bullet.Material = ""Neon""
			Bullet.Anchored = true
			Bullet.CanCollide = false
			Bullet.Size = Vector3.new(0.2, 0.2, D)
			Bullet.CFrame = C

			local bulletTable = {}
			table.insert(bulletTable, {
				Hit = target,
				Distance = D,
				Cframe = C,
				RayObject = R
			})

			game.ReplicatedStorage.ShootEvent:FireServer(bulletTable, Gun)
			local C = Sound:Clone()
			C.Parent = Gun
			C:Play()
			wait(0.05)
			Bullet:Remove()
		end))
	end

	Mouse.Button1Down:Connect(function()
		Down = true
	end)


	Mouse.Button1Up:Connect(function()
		Down = false
	end)

	while Run.Stepped:wait() do
		if Down == true then
			game.ReplicatedStorage.SoundEvent:FireServer(Sound, Gun)
			FireLaser(Mouse.Target)
		end
	end
end)

fastm9.Name = ""fastm9""
fastm9.Parent = main
fastm9.BackgroundColor3 = Color3.new(1, 0.333333, 0)
fastm9.Position = UDim2.new(0.267702788, 0, 0.518048167, 0)
fastm9.Size = UDim2.new(0, 84, 0, 32)
fastm9.Font = Enum.Font.Bodoni
fastm9.Text = ""Fast M9""
fastm9.TextColor3 = Color3.new(0, 0, 0)
fastm9.TextSize = 14
fastm9.MouseButton1Down:connect(function()
	local Player = game.Players.LocalPlayer.Name
	local Gun = ""M9"" -- < -- Gun Name
	local Run = game:GetService(""RunService"")

	Gun = game.Players[Player].Character[Gun]
	local Mouse = game.Players.LocalPlayer:GetMouse()
	local Down = false
	local Sound = Gun.Handle.FireSound

	function CreateRay(Point_A, Point_B)
		local Ray = Ray.new(Point_A, (Point_B - Point_A).Unit * (2 ^ 31 - 1))
		local Part, Pos = workspace:FindPartOnRay(Ray, game.Players.LocalPlayer.Character)
		local Dist = (Point_A - Pos).Magnitude
		local CFrame = CFrame.new(Point_A, Pos) * CFrame.new(0, 0, -Dist / 2)

		return CFrame, Dist, Ray
	end

	function FireLaser(target)
		coroutine.resume(coroutine.create(function()
			local C, D, R = CreateRay(Gun.Muzzle.CFrame.p, target.CFrame.p)
			local Bullet = Instance.new(""Part"", Gun)
			Bullet.BrickColor = BrickColor.Yellow()
			Bullet.Material = ""Neon""
			Bullet.Anchored = true
			Bullet.CanCollide = false
			Bullet.Size = Vector3.new(0.2, 0.2, D)
			Bullet.CFrame = C

			local bulletTable = {}
			table.insert(bulletTable, {
				Hit = target,
				Distance = D,
				Cframe = C,
				RayObject = R
			})

			game.ReplicatedStorage.ShootEvent:FireServer(bulletTable, Gun)
			local C = Sound:Clone()
			C.Parent = Gun
			C:Play()
			wait(0.05)
			Bullet:Remove()
		end))
	end

	Mouse.Button1Down:Connect(function()
		Down = true
	end)


	Mouse.Button1Up:Connect(function()
		Down = false
	end)

	while Run.Stepped:wait() do
		if Down == true then
			game.ReplicatedStorage.SoundEvent:FireServer(Sound, Gun)
			FireLaser(Mouse.Target)
		end
	end
end)

fasttaze.Name = ""fasttaze""
fasttaze.Parent = main
fasttaze.BackgroundColor3 = Color3.new(1, 0.333333, 0)
fasttaze.Position = UDim2.new(0.522364557, 0, 0.518048108, 0)
fasttaze.Size = UDim2.new(0, 84, 0, 32)
fasttaze.Font = Enum.Font.Bodoni
fasttaze.Text = ""Fast Taser""
fasttaze.TextColor3 = Color3.new(0, 0, 0)
fasttaze.TextSize = 14
fasttaze.MouseButton1Down:connect(function()
	local Player = game.Players.LocalPlayer.Name
	local Gun = ""Taser"" -- < -- Gun Name
	local Run = game:GetService(""RunService"")

	Gun = game.Players[Player].Character[Gun]
	local Mouse = game.Players.LocalPlayer:GetMouse()
	local Down = false
	local Sound = Gun.Handle.FireSound

	function CreateRay(Point_A, Point_B)
		local Ray = Ray.new(Point_A, (Point_B - Point_A).Unit * (2 ^ 31 - 1))
		local Part, Pos = workspace:FindPartOnRay(Ray, game.Players.LocalPlayer.Character)
		local Dist = (Point_A - Pos).Magnitude
		local CFrame = CFrame.new(Point_A, Pos) * CFrame.new(0, 0, -Dist / 2)

		return CFrame, Dist, Ray
	end

	function FireLaser(target)
		coroutine.resume(coroutine.create(function()
			local C, D, R = CreateRay(Gun.Muzzle.CFrame.p, target.CFrame.p)
			local Bullet = Instance.new(""Part"", Gun)
			Bullet.BrickColor = BrickColor.Yellow()
			Bullet.Material = ""Neon""
			Bullet.Anchored = true
			Bullet.CanCollide = false
			Bullet.Size = Vector3.new(0.2, 0.2, D)
			Bullet.CFrame = C

			local bulletTable = {}
			table.insert(bulletTable, {
				Hit = target,
				Distance = D,
				Cframe = C,
				RayObject = R
			})

			game.ReplicatedStorage.ShootEvent:FireServer(bulletTable, Gun)
			local C = Sound:Clone()
			C.Parent = Gun
			C:Play()
			wait(0.05)
			Bullet:Remove()
		end))
	end

	Mouse.Button1Down:Connect(function()
		Down = true
	end)


	Mouse.Button1Up:Connect(function()
		Down = false
	end)

	while Run.Stepped:wait() do
		if Down == true then
			game.ReplicatedStorage.SoundEvent:FireServer(Sound, Gun)
			FireLaser(Mouse.Target)
		end
	end
end)

fastak.Name = ""fastak""
fastak.Parent = main
fastak.BackgroundColor3 = Color3.new(1, 0.333333, 0)
fastak.Position = UDim2.new(0.77959609, 0, 0.518048167, 0)
fastak.Size = UDim2.new(0, 79, 0, 32)
fastak.Font = Enum.Font.Bodoni
fastak.Text = ""Fast AK47""
fastak.TextColor3 = Color3.new(0, 0, 0)
fastak.TextSize = 14
fastak.MouseButton1Down:connect(function()
	local Player = game.Players.LocalPlayer.Name
	local Gun = ""AK47"" -- < -- Gun Name
	local Run = game:GetService(""RunService"")

	Gun = game.Players[Player].Character[Gun]
	local Mouse = game.Players.LocalPlayer:GetMouse()
	local Down = false
	local Sound = Gun.Handle.FireSound

	function CreateRay(Point_A, Point_B)
		local Ray = Ray.new(Point_A, (Point_B - Point_A).Unit * (2 ^ 31 - 1))
		local Part, Pos = workspace:FindPartOnRay(Ray, game.Players.LocalPlayer.Character)
		local Dist = (Point_A - Pos).Magnitude
		local CFrame = CFrame.new(Point_A, Pos) * CFrame.new(0, 0, -Dist / 2)

		return CFrame, Dist, Ray
	end

	function FireLaser(target)
		coroutine.resume(coroutine.create(function()
			local C, D, R = CreateRay(Gun.Muzzle.CFrame.p, target.CFrame.p)
			local Bullet = Instance.new(""Part"", Gun)
			Bullet.BrickColor = BrickColor.Yellow()
			Bullet.Material = ""Neon""
			Bullet.Anchored = true
			Bullet.CanCollide = false
			Bullet.Size = Vector3.new(0.2, 0.2, D)
			Bullet.CFrame = C

			local bulletTable = {}
			table.insert(bulletTable, {
				Hit = target,
				Distance = D,
				Cframe = C,
				RayObject = R
			})

			game.ReplicatedStorage.ShootEvent:FireServer(bulletTable, Gun)
			local C = Sound:Clone()
			C.Parent = Gun
			C:Play()
			wait(0.05)
			Bullet:Remove()
		end))
	end

	Mouse.Button1Down:Connect(function()
		Down = true
	end)


	Mouse.Button1Up:Connect(function()
		Down = false
	end)

	while Run.Stepped:wait() do
		if Down == true then
			game.ReplicatedStorage.SoundEvent:FireServer(Sound, Gun)
			FireLaser(Mouse.Target)
		end
	end
end)

killall.Name = ""killall""
killall.Parent = main
killall.BackgroundColor3 = Color3.new(1, 0, 0)
killall.Position = UDim2.new(0.0102345012, 0, 0.760852396, 0)
killall.Size = UDim2.new(0, 110, 0, 34)
killall.Font = Enum.Font.GothamBold
killall.Text = ""Kill All""
killall.TextColor3 = Color3.new(0, 0, 0)
killall.TextSize = 14
killall.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Medium stone grey"")

	game.Workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[""Remington 870""].ITEMPICKUP) 

	wait(0.5)
	function kill(a)
		local A_1 =
			{
				[1] =
				{
					[""RayObject""] = Ray.new(Vector3.new(845.555908, 101.429337, 2269.43945), Vector3.new(-391.152252, 8.65560055, -83.2166901)),
					[""Distance""] = 3.2524313926697,
					[""Cframe""] = CFrame.new(840.310791, 101.334137, 2267.87988, 0.0636406094, 0.151434347, -0.986416459, 0, 0.988420188, 0.151741937, 0.997972965, -0.00965694897, 0.0629036576),
					[""Hit""] = a.Character.Head
				},
				[2] =
				{
					[""RayObject""] = Ray.new(Vector3.new(845.555908, 101.429337, 2269.43945), Vector3.new(-392.481476, -8.44939327, -76.7261353)),
					[""Distance""] = 3.2699294090271,
					[""Cframe""] = CFrame.new(840.290466, 101.184189, 2267.93506, 0.0964837447, 0.0589403138, -0.993587971, 4.65661287e-10, 0.998245299, 0.0592165813, 0.995334625, -0.00571343815, 0.0963144377),
					[""Hit""] = a.Character.Head
				},
				[3] =
				{
					[""RayObject""] = Ray.new(Vector3.new(845.555908, 101.429337, 2269.43945), Vector3.new(-389.21701, -2.50536323, -92.2163162)),
					[""Distance""] = 3.1665518283844,
					[""Cframe""] = CFrame.new(840.338867, 101.236496, 2267.80371, 0.0166504811, 0.0941716284, -0.995416701, 1.16415322e-10, 0.995554805, 0.0941846818, 0.999861419, -0.00156822044, 0.0165764652),
					[""Hit""] = a.Character.Head
				},
				[4] =
				{
					[""RayObject""] = Ray.new(Vector3.new(845.555908, 101.429337, 2269.43945), Vector3.new(-393.353973, 3.13988972, -72.5452042)),
					[""Distance""] = 3.3218522071838,
					[""Cframe""] = CFrame.new(840.277222, 101.285957, 2267.9707, 0.117109694, 0.118740402, -0.985994935, -1.86264515e-09, 0.992826641, 0.119563118, 0.993119001, -0.0140019981, 0.116269611),
					[""Hit""] = a.Character.Head
				},
				[5] =
				{
					[""RayObject""] = Ray.new(Vector3.new(845.555908, 101.429337, 2269.43945), Vector3.new(-390.73172, 3.2097764, -85.5477524)),
					[""Distance""] = 3.222757101059,
					[""Cframe""] = CFrame.new(840.317993, 101.286423, 2267.86035, 0.0517584644, 0.123365127, -0.991010666, 0, 0.992340803, 0.123530701, 0.99865967, -0.00639375951, 0.0513620302),
					[""Hit""] = a.Character.Head
				}
			}
		local A_2 = game.Players.LocalPlayer.Backpack[""Remington 870""]
		local Event = game:GetService(""ReplicatedStorage"").ShootEvent
		Event:FireServer(A_1, A_2)
		Event:FireServer(A_1, A_2)
	end

	for i,v in pairs(game.Players:GetChildren())do
		if v.Name ~= game.Players.LocalPlayer.Name then
			kill(v)
		end
	end
	wait(1)
	workspace.Remote.TeamEvent:FireServer(""Bright orange"")
end)

btools.Name = ""btools""
btools.Parent = main
btools.BackgroundColor3 = Color3.new(0, 1, 1)
btools.Position = UDim2.new(0.678933322, 0, 0.2304198, 0)
btools.Size = UDim2.new(0, 111, 0, 32)
btools.Font = Enum.Font.GothamBold
btools.Text = ""Btools""
btools.TextColor3 = Color3.new(1, 0, 0)
btools.TextSize = 14
btools.MouseButton1Down:connect(function()
	local tool1   = Instance.new(""HopperBin"",game.Players.LocalPlayer.Backpack)
	tool1.BinType = ""Hammer""
end)

speed.Name = ""speed""
speed.Parent = main
speed.BackgroundColor3 = Color3.new(0.333333, 1, 1)
speed.Position = UDim2.new(0.350194454, 0, 0.379678607, 0)
speed.Size = UDim2.new(0, 110, 0, 32)
speed.Font = Enum.Font.GothamBold
speed.Text = ""Speed""
speed.TextColor3 = Color3.new(1, 0, 0)
speed.TextSize = 14
speed.MouseButton1Down:connect(function()
	Speed = ""100"" -- Change to how fast you want to go

	player = game.Players.LocalPlayer.Character
	power = ""WalkSpeed""
	player.Humanoid[power] = Speed
	wait()
	player.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(9e99, 9e99, 9e99, 9e99, 9e99)
	wait()
	repeat
		game.Workspace.Gravity = 1000
		wait()
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = 287.5
		wait()
	until game.Players.LocalPlayer.Character.Humanoid.Health == 0
end)

respawn.Name = ""respawn""
respawn.Parent = main
respawn.BackgroundColor3 = Color3.new(0.333333, 1, 1)
respawn.Position = UDim2.new(0.68041873, 0, 0.379084349, 0)
respawn.Size = UDim2.new(0, 111, 0, 32)
respawn.Font = Enum.Font.GothamBold
respawn.Text = ""Fast Respawn""
respawn.TextColor3 = Color3.new(1, 0, 0)
respawn.TextSize = 14
respawn.MouseButton1Down:connect(function()
	local A_1 = ""\66\114\111\121\111\117\98\97\100\100""
	local Event = game:GetService(""Workspace"").Remote.loadchar
	Event:InvokeServer(A_1)
end)

Credits.Name = ""Credits""
Credits.Parent = main
Credits.BackgroundColor3 = Color3.new(0, 0, 0)
Credits.Position = UDim2.new(0.0242873691, 0, 0.934491813, 0)
Credits.Size = UDim2.new(0, 352, 0, 31)
Credits.Font = Enum.Font.GothamBold
Credits.Text = ""Made by JAKE11PRICE on YouTube""
Credits.TextColor3 = Color3.new(1, 1, 0)
Credits.TextSize = 14

prison.Name = ""prison""
prison.Parent = main
prison.BackgroundColor3 = Color3.new(0, 1, 1)
prison.Position = UDim2.new(0.681462109, 0, 0.450664163, 0)
prison.Size = UDim2.new(0, 110, 0, 32)
prison.Font = Enum.Font.GothamBlack
prison.Text = ""Prison""
prison.TextColor3 = Color3.new(1, 0, 0)
prison.TextSize = 14
prison.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(918.77,100,2379.07)
end)

yard.Name = ""yard""
yard.Parent = main
yard.BackgroundColor3 = Color3.new(0.333333, 1, 1)
yard.Position = UDim2.new(0.0127276238, 0, 0.45231539, 0)
yard.Size = UDim2.new(0, 110, 0, 32)
yard.Font = Enum.Font.GothamBlack
yard.Text = ""Yard""
yard.TextColor3 = Color3.new(1, 0, 0)
yard.TextSize = 14
yard.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(779.87,98,2458.93)
end)

crimbase.Name = ""crimbase""
crimbase.Parent = main
crimbase.BackgroundColor3 = Color3.new(0.333333, 1, 1)
crimbase.Position = UDim2.new(0.348744512, 0, 0.451209784, 0)
crimbase.Size = UDim2.new(0, 110, 0, 32)
crimbase.Font = Enum.Font.GothamBlack
crimbase.Text = ""Crim Base""
crimbase.TextColor3 = Color3.new(1, 0, 0)
crimbase.TextSize = 14
crimbase.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-943.46,94.13,2063.63)
end)

title_2.Name = ""title""
title_2.Parent = main
title_2.BackgroundColor3 = Color3.new(0.333333, 1, 0)
title_2.Position = UDim2.new(0.000689314213, 0, 0.592849016, 0)
title_2.Size = UDim2.new(0, 364, 0, 26)
title_2.Font = Enum.Font.GothamBold
title_2.Text = ""FUN FE COMMANDS!""
title_2.TextColor3 = Color3.new(0, 0, 0)
title_2.TextSize = 14

bringall.Name = ""bringall""
bringall.Parent = main
bringall.BackgroundColor3 = Color3.new(1, 1, 0)
bringall.Position = UDim2.new(0.0220828541, 0, 0.704794765, 0)
bringall.Size = UDim2.new(0, 111, 0, 25)
bringall.Font = Enum.Font.GothamBold
bringall.Text = ""Bring All""
bringall.TextColor3 = Color3.new(0, 0, 0)
bringall.TextSize = 14
bringall.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")

	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local runservice = game:GetService(""RunService"")
	local characters = {}
	LocalPlayer.Character:FindFirstChild(""Humanoid""):UnequipTools()
	local currentamount = #LocalPlayer.Backpack:GetChildren()
	LocalPlayer.Character.Archivable = true
	local tempchar = LocalPlayer.Character:Clone()
	tempchar.Parent = workspace
	local savepos = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	local renderstepped = runservice.RenderStepped:Connect(function()
		workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild(""Humanoid"")
		for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA(""Tool"") then
				tool.Parent = LocalPlayer
			end
		end
		LocalPlayer.Character:ClearAllChildren()
		local char = Instance.new(""Model"", workspace)
		table.insert(characters, char)
		Instance.new(""Humanoid"", char)
		LocalPlayer.Character = char
		repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
	end)
	repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 2 - currentamount >= #game.Players:GetPlayers() * 6
	renderstepped:Disconnect()
	repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") ~= nil
	for _, char in pairs(characters) do
		char:Destroy()
	end
	for _, tool in pairs(LocalPlayer:GetChildren()) do
		if tool:IsA(""Tool"") then
			tool.Parent = LocalPlayer.Backpack
		end
	end
	LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = savepos
	tempchar:Destroy()

	wait()

	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(.1)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
	for i, v in pairs(game.Players:GetPlayers()) do
		if v and v.Name ~= game.Players.LocalPlayer.Name then

			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Backpack:FindFirstChildOfClass(""Tool"").Parent = game.Players.LocalPlayer.Character

			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Tool"").Parent = game.Workspace.Terrain
			wait()
			v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

		end
		wait(0.01)

	end
end)

drill.Name = ""drill""
drill.Parent = main
drill.BackgroundColor3 = Color3.new(1, 1, 0)
drill.Position = UDim2.new(0.343317509, 0, 0.704794705, 0)
drill.Size = UDim2.new(0, 111, 0, 25)
drill.Font = Enum.Font.GothamBold
drill.Text = ""Fe Drill""
drill.TextColor3 = Color3.new(0, 0, 0)
drill.TextSize = 14
drill.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")

	local toolamount = 80 -- How long the tornado is
	local tornadosize = 1 -- The size of how big the opening of the tornado is

	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local runservice = game:GetService(""RunService"")
	local characters = {}
	LocalPlayer.Character:FindFirstChild(""Humanoid""):UnequipTools()
	local currentamount = #LocalPlayer.Backpack:GetChildren()
	LocalPlayer.Character.Archivable = true
	local tempchar = LocalPlayer.Character:Clone()
	tempchar.Parent = workspace
	local savepos = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	local renderstepped = runservice.RenderStepped:Connect(function()
		workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild(""Humanoid"")
		for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA(""Tool"") then
				tool.Parent = LocalPlayer
			end
		end
		LocalPlayer.Character:ClearAllChildren()
		local char = Instance.new(""Model"", workspace)
		table.insert(characters, char)
		Instance.new(""Humanoid"", char)
		LocalPlayer.Character = char
		repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
	end)
	repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
	renderstepped:Disconnect()
	repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") ~= nil
	for _, char in pairs(characters) do
		char:Destroy()
	end
	for index, tool in pairs(LocalPlayer:GetChildren()) do
		if tool:IsA(""Tool"") then
			tool.Parent = LocalPlayer.Backpack
			tool.Handle.Massless = false
			tool.Grip = CFrame.new(Vector3.new(0, -index * .1, 0)) * CFrame.Angles(math.rad(90), 0, math.tan(index * 0.5))
			tool.Parent = LocalPlayer.Character
			if tool.Handle:FindFirstChild(""Mesh"") ~= nil then
				tool.Handle.Mesh:Destroy()
			end
		end
	end
	LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = savepos
	tempchar:Destroy()
end)

killplrmain.Name = ""killplrmain""
killplrmain.Parent = main
killplrmain.BackgroundColor3 = Color3.new(1, 0, 1)
killplrmain.Position = UDim2.new(0.0321613066, 0, 0.836535037, 0)
killplrmain.Size = UDim2.new(0, 103, 0, 47)

killtext.Name = ""killtext""
killtext.Parent = killplrmain
killtext.BackgroundColor3 = Color3.new(1, 0.666667, 1)
killtext.Position = UDim2.new(0, 0, 0.0212752968, 0)
killtext.Size = UDim2.new(0, 99, 0, 19)
killtext.Font = Enum.Font.Gotham
killtext.Text = ""Player Name""
killtext.TextColor3 = Color3.new(0, 0, 0)
killtext.TextSize = 14

kill.Name = ""kill""
kill.Parent = killplrmain
kill.BackgroundColor3 = Color3.new(0, 0, 0)
kill.Position = UDim2.new(0.0999999046, 0, 0.531914949, 0)
kill.Size = UDim2.new(0, 80, 0, 22)
kill.Font = Enum.Font.GothamBold
kill.Text = ""KILL""
kill.TextColor3 = Color3.new(1, 1, 1)
kill.TextSize = 14
kill.MouseButton1Down:connect(function()
	game.Workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[""Remington 870""].ITEMPICKUP) 

	wait(0.1)
	Workspace.Remote.TeamEvent:FireServer(""Medium stone grey"")

	local A_1 = 
		{
			[1] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(827.412415, 101.489777, 2296.84326), Vector3.new(277.738678, 6.89340925, 287.773712)), 
				[""Distance""] = 4.7204174995422, 
				[""Cframe""] = CFrame.new(832.049377, 101.392006, 2300.97168, 0.843892097, -0.0554918349, 0.533635378, 0, 0.994636595, 0.103430569, -0.536512911, -0.0872842371, 0.839366019), 
				[""Hit""] = game.Workspace[killtext.Text].Head
			}, 
			[2] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(827.412415, 101.489777, 2296.84326), Vector3.new(303.047546, 21.3568707, 260.203888)), 
				[""Distance""] = 4.8114862442017, 
				[""Cframe""] = CFrame.new(832.390259, 101.550629, 2300.74097, 0.738044441, -0.112958886, 0.665229917, 7.45057971e-09, 0.985887885, 0.16740793, -0.674752235, -0.123554483, 0.727628946), 
				[""Hit""] = game.Workspace[killtext.Text].Head
			}, 
			[3] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(827.412415, 101.489777, 2296.84326), Vector3.new(296.800507, 7.00420141, 268.067932)), 
				[""Distance""] = 4.444625377655, 
				[""Cframe""] = CFrame.new(832.185486, 101.391617, 2300.70264, 0.775115669, -0.0692948848, 0.628007889, 7.45057971e-09, 0.993967533, 0.109675139, -0.631819367, -0.0850109085, 0.770439863), 
				[""Hit""] = game.Workspace[killtext.Text].Head
			}, 
			[4] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(827.412415, 101.489777, 2296.84326), Vector3.new(284.930573, 11.9850616, 280.483368)), 
				[""Distance""] = 4.6211166381836, 
				[""Cframe""] = CFrame.new(832.10083, 101.445007, 2300.86963, 0.820150614, -0.0735745132, 0.567397356, 0, 0.991697431, 0.128593579, -0.572147667, -0.105466105, 0.81334126), 
				[""Hit""] = game.Workspace[killtext.Text].Head
			}, 
			[5] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(827.412415, 101.489777, 2296.84326), Vector3.new(294.625824, 2.15741801, 270.538269)), 
				[""Distance""] = 4.4639973640442, 
				[""Cframe""] = CFrame.new(832.169434, 101.341301, 2300.73438, 0.784266233, -0.0537625961, 0.618090749, -3.7252903e-09, 0.99623847, 0.086654529, -0.620424569, -0.0679602176, 0.781316102), 
				[""Hit""] = game.Workspace[killtext.Text].Head
			}
		}
	local A_2 = game.Players.LocalPlayer.Backpack[""Remington 870""]
	local Event = game:GetService(""ReplicatedStorage"").ShootEvent
	Event:FireServer(A_1, A_2)

	wait(0.5)
	workspace.Remote.TeamEvent:FireServer(""Bright orange"")
end)

waves.Name = ""waves""
waves.Parent = main
waves.BackgroundColor3 = Color3.new(1, 1, 0)
waves.Position = UDim2.new(0.0201378968, 0, 0.646579564, 0)
waves.Size = UDim2.new(0, 111, 0, 26)
waves.Font = Enum.Font.GothamBold
waves.Text = ""Fe Waves""
waves.TextColor3 = Color3.new(0, 0, 0)
waves.TextSize = 14
waves.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")

	local toolamount = 40 -- How long the tornado is
	local tornadosize = 1 -- The size of how big the opening of the tornado is

	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local runservice = game:GetService(""RunService"")
	local characters = {}
	LocalPlayer.Character:FindFirstChild(""Humanoid""):UnequipTools()
	local currentamount = #LocalPlayer.Backpack:GetChildren()
	LocalPlayer.Character.Archivable = true
	local tempchar = LocalPlayer.Character:Clone()
	tempchar.Parent = workspace
	local savepos = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	local renderstepped = runservice.RenderStepped:Connect(function()
		workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild(""Humanoid"")
		for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA(""Tool"") then
				tool.Parent = LocalPlayer
			end
		end
		LocalPlayer.Character:ClearAllChildren()
		local char = Instance.new(""Model"", workspace)
		table.insert(characters, char)
		Instance.new(""Humanoid"", char)
		LocalPlayer.Character = char
		repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
	end)
	repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
	renderstepped:Disconnect()
	repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") ~= nil
	for _, char in pairs(characters) do
		char:Destroy()
	end
	for index, tool in pairs(LocalPlayer:GetChildren()) do
		if tool:IsA(""Tool"") then
			tool.Parent = LocalPlayer.Backpack
			tool.Handle.Massless = false
			tool.Grip = CFrame.new(Vector3.new(0, math.sin(index + 0.5), index)) * CFrame.Angles(math.rad(tornadosize), 0, -index)
			tool.Parent = LocalPlayer.Character
			if tool.Handle:FindFirstChild(""Mesh"") ~= nil then
				tool.Handle.Mesh:Destroy()
			end
		end
	end
	LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = savepos
	tempchar:Destroy()
end)

bigbowl.Name = ""bigbowl""
bigbowl.Parent = main
bigbowl.BackgroundColor3 = Color3.new(1, 1, 0)
bigbowl.Position = UDim2.new(0.341908664, 0, 0.647788644, 0)
bigbowl.Size = UDim2.new(0, 111, 0, 26)
bigbowl.Font = Enum.Font.GothamBold
bigbowl.Text = ""Fe Big Bowl""
bigbowl.TextColor3 = Color3.new(0, 0, 0)
bigbowl.TextSize = 14
bigbowl.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")

	local toolamount = 250 -- How much covered the bowl is
	local bowlsize = 20 -- How big the bowl is



	local LocalPlayer = game:GetService(""Players"").LocalPlayer
	local runservice = game:GetService(""RunService"")
	local characters = {}
	LocalPlayer.Character:FindFirstChild(""Humanoid""):UnequipTools()
	local currentamount = #LocalPlayer.Backpack:GetChildren()
	LocalPlayer.Character.Archivable = true
	local tempchar = LocalPlayer.Character:Clone()
	tempchar.Parent = workspace
	local savepos = LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	local renderstepped = runservice.RenderStepped:Connect(function()
		workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild(""Humanoid"")
		for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA(""Tool"") then
				tool.Parent = LocalPlayer
			end
		end
		LocalPlayer.Character:ClearAllChildren()
		local char = Instance.new(""Model"", workspace)
		table.insert(characters, char)
		Instance.new(""Humanoid"", char)
		LocalPlayer.Character = char
		repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
	end)
	repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
	renderstepped:Disconnect()
	repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") ~= nil
	for _, char in pairs(characters) do
		char:Destroy()
	end
	for index, tool in pairs(LocalPlayer:GetChildren()) do
		if tool:IsA(""Tool"") then
			tool.Parent = LocalPlayer.Backpack
			tool.Handle.Massless = true
			tool.Grip = CFrame.new(Vector3.new(math.sin(index * 0.1), bowlsize, 0)) * CFrame.Angles(math.sin(index * 0.1), index, 0)
			tool.Parent = LocalPlayer.Character
			if tool.Handle:FindFirstChild(""Mesh"") ~= nil then
				tool.Handle.Mesh:Destroy()
			end
		end
	end
	LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"").CFrame = savepos
	tempchar:Destroy()
	LocalPlayer.Character:FindFirstChild(""Humanoid"").HipHeight = bowlsize
end)

tazeplrmain.Name = ""tazeplrmain""
tazeplrmain.Parent = main
tazeplrmain.BackgroundColor3 = Color3.new(1, 0, 1)
tazeplrmain.Position = UDim2.new(0.358376801, 0, 0.83788842, 0)
tazeplrmain.Size = UDim2.new(0, 103, 0, 47)

tazetext.Name = ""tazetext""
tazetext.Parent = tazeplrmain
tazetext.BackgroundColor3 = Color3.new(1, 0.666667, 1)
tazetext.Size = UDim2.new(0, 99, 0, 19)
tazetext.Font = Enum.Font.Gotham
tazetext.Text = ""Player Name""
tazetext.TextColor3 = Color3.new(0, 0, 0)
tazetext.TextSize = 14

taze.Name = ""taze""
taze.Parent = tazeplrmain
taze.BackgroundColor3 = Color3.new(0, 0, 0)
taze.Position = UDim2.new(0.128543824, 0, 0.510639191, 0)
taze.Size = UDim2.new(0, 80, 0, 22)
taze.Font = Enum.Font.GothamBold
taze.Text = ""TAZE""
taze.TextColor3 = Color3.new(1, 1, 1)
taze.TextSize = 14
taze.MouseButton1Down:connect(function()
	local A_1 = 
		{
			[1] = 
			{
				[""RayObject""] = Ray.new(Vector3.new(829.838562, 101.489998, 2331.25635), Vector3.new(-30.6540909, -5.42795324, 95.0308533)), 
				[""Distance""] = 15.355997085571, 
				[""Cframe""] = CFrame.new(826.616699, 100.8508, 2340.11279, 0.964640439, -0.00993416365, -0.263382077, 9.31322575e-10, 0.999289393, -0.0376908854, 0.263569355, 0.0363581516, 0.963954985), 
				[""Hit""] = game.Workspace[tazetext.Text].Torso
			}
		}
	local A_2 = game.Players.LocalPlayer.Backpack[""Taser""]
	local Event = game:GetService(""ReplicatedStorage"").ShootEvent
	Event:FireServer(A_1, A_2)
end)

teamcrim.Name = ""teamcrim""
teamcrim.Parent = main
teamcrim.BackgroundColor3 = Color3.new(1, 0, 0)
teamcrim.Position = UDim2.new(0.775380731, 0, 0.108776733, 0)
teamcrim.Size = UDim2.new(0, 83, 0, 22)
teamcrim.Font = Enum.Font.GothamBlack
teamcrim.Text = ""Team Crim""
teamcrim.TextColor3 = Color3.new(0, 0, 0)
teamcrim.TextSize = 14
teamcrim.MouseButton1Down:connect(function()
	wait(0.3)
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-976.125183, 109.123924, 2059.99536)

	wait(0.3)
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(918.77,100,2379.07)
end)

tazeall.Name = ""tazeall""
tazeall.Parent = main
tazeall.BackgroundColor3 = Color3.new(1, 0, 0)
tazeall.Position = UDim2.new(0.342309177, 0, 0.759402633, 0)
tazeall.Size = UDim2.new(0, 109, 0, 34)
tazeall.Font = Enum.Font.GothamBold
tazeall.Text = ""Taze All""
tazeall.TextColor3 = Color3.new(0, 0, 0)
tazeall.TextSize = 14
tazeall.MouseButton1Down:connect(function()
	workspace.Remote.TeamEvent:FireServer(""Bright blue"")

	function kill(a)
		local A_1 = 
			{
				[1] = 
				{
					[""RayObject""] = Ray.new(Vector3.new(829.838562, 101.489998, 2331.25635), Vector3.new(-30.6540909, -5.42795324, 95.0308533)), 
					[""Distance""] = 15.355997085571, 
					[""Cframe""] = CFrame.new(826.616699, 100.8508, 2340.11279, 0.964640439, -0.00993416365, -0.263382077, 9.31322575e-10, 0.999289393, -0.0376908854, 0.263569355, 0.0363581516, 0.963954985), 
					[""Hit""] = a.Character.Torso
				}
			}
		local A_2 = game.Players.LocalPlayer.Backpack[""Taser""]
		local Event = game:GetService(""ReplicatedStorage"").ShootEvent
		Event:FireServer(A_1, A_2)
	end

	for i,v in pairs(game.Players:GetChildren())do
		if v.Name ~= game.Players.LocalPlayer.Name then
			kill(v)
		end
	end
end)

removewalls.Name = ""removewalls""
removewalls.Parent = main
removewalls.BackgroundColor3 = Color3.new(1, 0, 0)
removewalls.Position = UDim2.new(0.670628905, 0, 0.758472741, 0)
removewalls.Size = UDim2.new(0, 110, 0, 34)
removewalls.Font = Enum.Font.GothamBold
removewalls.Text = ""Remove Walls""
removewalls.TextColor3 = Color3.new(0, 0, 0)
removewalls.TextSize = 14
removewalls.MouseButton1Down:connect(function()
	wait(0.1)
	game.Workspace.Prison_Guard_Outpost:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.building:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.glass:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.oven:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.shelves:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.vents:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.accents:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.vendingmachine:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.Prison_table1:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.counter:Remove()

	wait(0.1)
	game.Workspace.Prison_Cafeteria.boxes:Remove()
end)

removeall.Name = ""removeall""
removeall.Parent = main
removeall.BackgroundColor3 = Color3.new(1, 0, 0)
removeall.Position = UDim2.new(0.673120499, 0, 0.838146329, 0)
removeall.Size = UDim2.new(0, 110, 0, 47)
removeall.Font = Enum.Font.GothamBold
removeall.Text = ""Remove All""
removeall.TextColor3 = Color3.new(0, 0, 0)
removeall.TextSize = 14
removeall.MouseButton1Down:connect(function()
	wait(0.1)
	game.Workspace.Prison_Halls.walls:Remove()

	wait(0.1)
	game.Workspace.Prison_Halls.roof:Remove()

	wait(0.1)
	game.Workspace.Prison_Halls.outlines:Remove()

	wait(0.1)
	game.Workspace.Prison_Halls.lights:Remove()

	wait(0.1)
	Workspace.Prison_Halls.accent:Remove()

	wait(0.1)
	game.Workspace.Prison_Halls.glass:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.b_front:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.doors:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.c_tables:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.a_front:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.b_outerwall:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.c_wall:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.b_wall:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.c_hallwall:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.a_outerwall:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.b_ramp:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.a_ramp:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.a_walls:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.Cells_B:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.Cells_A:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.c_corner:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.Wedge:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.a_ceiling:Remove()

	wait(0.1)
	game.Workspace.Prison_Cellblock.b_ceiling:Remove()

	wait(0.1)
	game.Workspace.City_buildings:Remove()

	wait(0.1)
	game.Workspace.Prison_OuterWall:Remove()

	wait(0.1)
	game.Workspace.Prison_Fences:Remove()
end)

lagserver.Name = ""lagserver""
lagserver.Parent = main
lagserver.BackgroundColor3 = Color3.new(0.333333, 0, 0.498039)
lagserver.Position = UDim2.new(0.66476965, 0, 0.659647882, 0)
lagserver.Size = UDim2.new(0, 120, 0, 42)
lagserver.Font = Enum.Font.GothamBold
lagserver.Text = ""Lag Server (Swat)""
lagserver.TextColor3 = Color3.new(0, 1, 1)
lagserver.TextSize = 14
lagserver.MouseButton1Down:connect(function()
	while true do
		workspace.Remote.TeamEvent:FireServer(""Bright blue"")

		for i = 10000,999999999999999,1 do
			for i,v in pairs(Workspace.Prison_ITEMS.clothes:GetChildren()) do

				lol = Workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
				print(lol)
			end
		end
	end

	end)
end)"
0vh9EWxe,WHYY PASTEBIN,13ooeo,Python,Thursday 2nd of May 2024 11:20:35 AM CDT,"def func(name):
    print(""Where did all my freaking pastes go?"")
    print(""WHYYY PASTEBIN WHYYY"")
    print(f""{name} is so mad rn!"")

func(""13ooeo"")
"
RahqJvp0,Custom Connection Request List,DataCCIW,JavaScript,Thursday 2nd of May 2024 11:17:40 AM CDT,"{%- assign person = Context.Person -%}
{% assign personId = person.Id %}

//- PastoralCare =  RSR - Pastoral Care Team
{% assign isInPastoralCareRole = CurrentPerson | IsInSecurityRole: 178443 %}
{% assign isInRockAdminRole = CurrentPerson | IsInSecurityRole: 2 %}
{% if isInPastoralCareRole == true or isInRockAdminRole == true %}

<div class=""card card-profile overflow-hidden"">
    <div class=""card-header dflex justify-content-between""><span>Pastoral Care Requests</span><span>State</span></div>
{% connectionrequest expression:'PersonAlias.PersonId  == ""{{personId}}"" and ConnectionOpportunityId = 11' securityenabled:'true' prefetchattributes:'Categories' %}
    {% assign connectionrequestItemsSize = connectionrequestItems | Size %}
    {% for connectionrequest in connectionrequestItems %}
        {% connectiontype id:'{{connectionrequest.ConnectionTypeId}}' securityenabled:'false' %}
        <dl class=""{% cycle 'm-0 px-3 py-3 d-flex justify-content-between text-sm font-medium', 'bg-gray-100 m-0 px-3 py-3 d-flex justify-content-between text-sm font-medium' %}"">
            <dt class=""text-gray-900"">
                <a href=""/page/{{connectiontype.ConnectionRequestDetailPageId}}?ConnectionRequestId={{ connectionrequest.Id }}&ConnectionOpportunityId={{ connectionrequest.ConnectionOpportunityId }}"">
                    {{ connectionrequest | Attribute:'Categories' }}
                </a>
                <dd class="""">{% case connectionrequest.ConnectionState %}
                    {% when 'Active' %}
                        Active
                    {% when 'Inactive' %}
                        Moved to History (Inactivated)
                    {% else %}
                        connectionrequest.ConnectionState
                    {% endcase %}
                </dd>
            </dt>
        </dl>
        {% endconnectiontype %}
    {% endfor %}
    {% if connectionrequestItemsSize == 0 %}
        <dt class=""text-gray-900"">
        <dd class="""">&nbsp;</dd>
        </dt>
    {% endif %}
{% endconnectionrequest %}
</div>
{% endif %}

<div class=""card card-profile overflow-hidden"">
    <div class=""card-header dflex justify-content-between""><span>Connection Requests</span><span>State / Status</span></div>
{% connectionrequest expression:'PersonAlias.PersonId  == ""{{personId}}"" and ConnectionOpportunityId <> 11' securityenabled:'true' disableattributeprefetch:'true' %}
    {% assign connectionrequestItemsSize = connectionrequestItems | Size %}
    {% for connectionrequest in connectionrequestItems %}
    
        {% connectiontype id:'{{connectionrequest.ConnectionTypeId}}' securityenabled:'false' %}

        <dl class=""{% cycle 'm-0 px-3 py-3 d-flex justify-content-between text-sm font-medium', 'bg-gray-100 m-0 px-3 py-3 d-flex justify-content-between text-sm font-medium' %}"">
            <dt class=""text-gray-900"">
                <a href=""/page/{{connectiontype.ConnectionRequestDetailPageId}}?ConnectionRequestId={{ connectionrequest.Id }}&ConnectionOpportunityId={{ connectionrequest.ConnectionOpportunityId }}"">
                    {{ connectionrequest.ConnectionOpportunity.Name }}
                </a>
                <dd class="""">{{ connectionrequest.ConnectionState }} / {{ connectionrequest.ConnectionStatus }}
                </dd>
            </dt>
            
        </dl>
        {% endconnectiontype %}
    {% endfor %}
    {% if connectionrequestItemsSize == 0 %}
        <dt class=""text-gray-900"">
        <dd class="""">&nbsp;</dd>
        </dt>
    {% endif %}
{% endconnectionrequest %}
</div>
"
rQaSHgFq,Python3 Leetcode 341. Flatten Nested List Iterator Chatgpt,LikeRampage,Python,Thursday 2nd of May 2024 11:09:05 AM CDT,"class NestedIterator:
    def __init__(self, nestedList: [NestedInteger]):
        self.stack = []
        for i in reversed(nestedList):
            self.stack.append(i)
        
    def next(self) -> int:
        return self.stack.pop().getInteger()
        
    def hasNext(self) -> bool:
        while self.stack:
            top = self.stack[-1]
            if top.isInteger():
                return True
            self.stack.pop()
            for i in reversed(top.getList()):
                self.stack.append(i)
        return False"
FP0HcryR,Untitled,_KAGATUN_,C#,Thursday 2nd of May 2024 11:01:11 AM CDT,"using System;
using System.Collections.Generic;

namespace CarService
{
    class Program
    {
        static void Main(string[] args)
        {
            CarCreator createCars = new CarCreator();
            CarService carService = new CarService(createCars.ReturnQueue());

            carService.Work();
        }
    }

    public class Utilities
    {
        private static Random s_random = new Random();

        public static int GetRandomNumber(int min, int max)
        {
            return s_random.Next(min, max + 1);
        }
    }

    class Car
    {
        private List<Detail> _details = new List<Detail>();

        public Car(List<Detail> details)
        {
            _details = details;
            MakeDefectiveDetails();
        }

        public bool GetBoolFalseDetail()
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsWork == false)
                {
                    return true;
                }
            }

            return false;
        }

        public void ShowDetails()
        {
            Console.WriteLine(""Все детали автомобиля:\n"");

            if (_details.Count > 0)
            {
                for (int i = 0; i < _details.Count; i++)
                {
                    _details[i].ShowInfo();
                }
            }
        }

        public void ShowBrokenDetails()
        {
            bool isProperly = true;

            Console.WriteLine(""Неисправные детали автомобиля:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].IsWork == false)
                {
                    _details[i].ShowInfo();

                    isProperly = false;
                }
            }

            if (isProperly == true)
            {
                Console.WriteLine(""Все детали отремонтированны"");
            }
        }

        public bool TryGetDetail(string detailType, out Detail detail)
        {
            detail = null;

            foreach (Detail selectedDetail in _details)
            {
                if (detailType == selectedDetail.Type && selectedDetail.IsWork == false)
                {
                    detail = selectedDetail;
                    return true;
                }
            }

            return false;
        }

        public List<Detail> ReturnDetails()
        {
            return new List<Detail>(_details);
        }

        public void ReplaceDetail(Detail newDetail)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == newDetail.Type)
                {
                    _details[i] = newDetail;

                    return;
                }
            }
        }

        private void MakeDefectiveDetails()
        {
            int maxNumberDetails = 5;
            int numberDefectiveParts = Utilities.GetRandomNumber(1, maxNumberDetails);

            for (int i = 0; i < numberDefectiveParts; i++)
            {
                int randomIndexDetail = Utilities.GetRandomNumber(1, _details.Count);
                _details[randomIndexDetail - 1].MakeDefective();
            }
        }
    }

    class CarCreator
    {
        private Queue<Car> _cars = new Queue<Car>();

        private DetailCreator _detailCreator = new DetailCreator();

        public CarCreator()
        {
            FillQueue();
        }

        public Queue<Car> ReturnQueue()
        {
            return new Queue<Car>(_cars);
        }

        private void FillQueue()
        {
            int maxNumberInQueue = 7;
            int randomNumberInQueue = Utilities.GetRandomNumber(1, maxNumberInQueue);

            for (int i = 0; i < randomNumberInQueue; i++)
            {
                List<Detail> details = new List<Detail>();

                for (int j = 0; j < _detailCreator.DetailsCount; j++)
                {
                    details.Add(_detailCreator.ReturnListAll()[j].Clone());
                }

                _cars.Enqueue(new Car(details));
            }
        }
    }

    class Detail
    {
        public Detail(int price, string type, bool isWorking)
        {
            Price = price;
            Type = type;
            IsWork = isWorking;
        }

        public int Price { get; private set; }
        public string Type { get; private set; }
        public bool IsWork { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""Деталь {Type}, стоимость {Price}, состояние {GetStatus()}"");
        }

        public void MakeDefective()
        {
            IsWork = false;
        }

        public string GetStatus()
        {
            return IsWork ? ""Исправно"" : ""Неисправно"";
        }

        public Detail Clone()
        {
            return new Detail(Price, Type, IsWork);
        }
    }

    class DetailCreator
    {
        private List<Detail> _details;

        public DetailCreator()
        {
            _details = new List<Detail>
            {
                new Detail (3000, ""Масляный насос"", true),
                new Detail (1500, ""Клапаны"", true),
                new Detail (1500, ""Ремень"", true),
                new Detail (1000, ""Маховик"", true),
                new Detail (2000, ""Водяной насос"", true),
                new Detail (2200, ""Блок цилиндров"", true),
                new Detail (4000, ""Масляный фильтр"", true),
                new Detail (2800, ""Воздушный фильтр"", true),
                new Detail (5000, ""Генератор"", true),
                new Detail (500, ""Стартер"", true),
            };
        }

        public int DetailsCount => _details.Count;

        public List<Detail> ReturnListAll()
        {
            return new List<Detail>(_details);
        }
    }

    class Warehouse
    {
        private DetailCreator _detailCreator = new DetailCreator();

        private List<Detail> _details = new List<Detail>();

        public Warehouse()
        {
            FillDetails();
        }

        public int DetailsCount => _details.Count;

        public void RemoveDetail(string detailType)
        {
            for (int i = 0; i < _details.Count; i++)
            {
                if (_details[i].Type == detailType)
                {
                    _details.RemoveAt(i);
                    break;
                }
            }
        }

        public Detail GetDetailByIndex(int index)
        {
            return _details[index];
        }

        public void ShowAssortment()
        {
            Console.WriteLine(""\nДетали на складе:\n"");

            for (int i = 0; i < _details.Count; i++)
            {
                Console.Write($""№ {i + 1} "");
                _details[i].ShowInfo();
            }
        }

        private void FillDetails()
        {
            int capacity = 15;
            int minNumber = 0;
            int maxNumber = _detailCreator.DetailsCount;

            for (int i = 0; i < capacity; i++)
            {
                int randomNumber = Utilities.GetRandomNumber(minNumber, maxNumber - 1);

                _details.Add(_detailCreator.ReturnListAll()[randomNumber]);
            }
        }
    }

    class CarService
    {
        private Warehouse _warehouse = new Warehouse();

        private Queue<Car> _cars;

        private int _fine = 1000;
        private int _fineSkipping = 300;
        private int _income = 0;

        public CarService(Queue<Car> cars)
        {
            _cars = cars;
        }

        public void Work()
        {
            while (_cars.Count > 0)
            {
                Car car = _cars.Dequeue();

                RepairCar(car);
            }

            Console.WriteLine(""В очереди больше нет машин на ремонт.\nПрограмма завершена"");
        }

        private void RepairCar(Car car)
        {
            const string CommandComplete = ""S"";

            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine($""\nКапитал автосервиса: {_income}\n"");

                car.ShowDetails();
                Console.WriteLine();

                _warehouse.ShowAssortment();
                Console.WriteLine();

                car.ShowBrokenDetails();

                Console.WriteLine($""\nВведите {CommandComplete} чтобы завершить обслуживание текущей машины"");
                Console.WriteLine(""Введите номер детали со склада для починки автомобиля:\n"");

                string userInput = Console.ReadLine();

                if (userInput == CommandComplete && car.GetBoolFalseDetail())
                {
                    PenaltyUnservedPart(car.ReturnDetails());

                    break;
                }
                else if (userInput == CommandComplete)
                {
                    Console.WriteLine(""Обслуживание текущего автомобиля завершено"");

                    break;
                }

                if (int.TryParse(userInput, out int number))
                {
                    if (number > 0 && number <= _warehouse.DetailsCount)
                    {
                        Detail warehouseDetail = _warehouse.GetDetailByIndex(number - 1);

                        if (car.TryGetDetail(warehouseDetail.Type, out Detail detail))
                        {
                            MakeProfit(detail.Price);

                            car.ReplaceDetail(warehouseDetail);

                            _warehouse.RemoveDetail(detail.Type);
                        }
                        else
                        {
                            _warehouse.RemoveDetail(warehouseDetail.Type);
                            PayForMistake();
                        }
                    }
                    else
                    {
                        Console.WriteLine(""\nНет детали под таким номером\n"");
                    }
                }
                else
                {
                    Console.WriteLine(""Неверный ввод команды"");
                }
            }
        }

        private void PayForMistake()
        {
            _income -= _fine;

            Console.WriteLine($""Получен штраф {_fine} за замену исправной детали, вы утратили исправную деталь со склада\n"");
        }

        private void PenaltyUnservedPart(List<Detail> details)
        {
            int sum = 0;
            int numberDetail = 0;

            for (int i = 0; i < details.Count; i++)
            {
                if (details[i].IsWork == false)
                {
                    _income -= _fineSkipping;
                    numberDetail++;
                    sum += _fineSkipping;
                }
            }

            Console.WriteLine($""Получен штраф {sum} за {numberDetail} непочиненные детали\n"");
        }

        private void MakeProfit(int price)
        {
            int difference = 100;
            int extraChargePercent = 30;
            int priceWork = (price * extraChargePercent) / difference;
            _income += price + priceWork;

            Console.WriteLine($""Получена прибыль {price}. Наценка за ремонт {extraChargePercent}% от детали {priceWork}"");
        }
    }
}

"
nTB7RdG1,Python3 Leetcode 338. Counting Bits Chatgpt,LikeRampage,Python,Thursday 2nd of May 2024 10:56:51 AM CDT,"class Solution:
    def countBits(self, n: int) -> List[int]:
        bits = [0] * (n + 1)
        offset = 1
        for i in range(1, n + 1):
            if offset * 2 == i:
                offset *= 2
            bits[i] = bits[i - offset] + 1
        return bits"
JiDbZu0F,Make Money Solana Meme Coin Trading Ebook,mihaifyi,Python,Thursday 2nd of May 2024 10:15:05 AM CDT,"🚀 Buy now the #1 Solana meme coin trading ebook with a HUGE 80% limited-time discount. 🤑 Use the code ""20SNIPE"" for an EXTRA 20% discount. 🔥 Don't miss this offer; act fast 👉 https://solsnipes.com/"
fFex4Uda,Python leetcode 337. House Robber III chatgpt,LikeRampage,Python,Thursday 2nd of May 2024 10:02:02 AM CDT,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def rob(self, root: Optional[TreeNode]) -> int:
        def dfs(node):
            if not node:
                return (0, 0)
            
            left = dfs(node.left)
            right = dfs(node.right)
            
            rob_this = node.val + left[1] + right[1]
            skip_this = max(left) + max(right)
            
            return (rob_this, skip_this)
        
        return max(dfs(root))"
KKCECV6R,Untitled,kompilainenn,Python,Thursday 2nd of May 2024 09:59:08 AM CDT,"def solve_runes(runes):
        
    if runes[0] not in ([str(x) for x in range(10)] + ['-'] + ['?'] or ['-+', '-*'] in runes) or runes.startswith('0') or runes.startswith('-0'):
        return -1
    
    if runes.find('+-') != -1:
        first = runes[:runes.find('+-')]
        operation = '+'
        second = runes[runes.find('+-') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    elif runes.find('*-') != -1:
        first = runes[:runes.find('*-')]
        operation = '*'
        second = runes[runes.find('*-') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    elif runes.find('--') != -1:
        first = runes[:runes.find('--')]
        operation = '-'
        second = runes[runes.find('--') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    elif runes.find('+') != -1:
        first = runes[:runes.find('+')]
        operation = '+'
        second = runes[runes.find('+') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    elif runes.find('*') != -1:
        first = runes[:runes.find('*')]
        operation = '*'
        second = runes[runes.find('*') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    elif runes.count('-') == 2:
        first = runes[:runes.rfind('-')]
        operation = '-'
        second = runes[runes.rfind('-') + 1:runes.find('=')]
        total = runes[runes.find('=') + 1:]
    
    for i in range(10):
        first_for = first.replace('?', str(i), first.count('?'))
        if first_for.startswith('00'):
            break
        second_for = second.replace('?', str(i), second.count('?'))
        if second_for.startswith('00'):
            break 
        total_for = total.replace('?', str(i), total.count('?'))
        if total_for.startswith('00'):
            break
        
        if operation == '+':
            if int(first_for) + int(second_for) == int(total_for):
                return i
        elif operation == '-':
            if int(first_for) - int(second_for) == int(total_for):
                return i
        elif operation== '*':
            if int(first_for) * int(second_for) == int(total_for):
                return i
    return -1"
WK60i8A0,A,maxim_shlyahtin,C++,Thursday 2nd of May 2024 09:52:58 AM CDT,"#include <iostream>
#include <vector>
#include <map>
#include <utility>
#include <string>
#include <limits>

//граф - ориентированный
using Graph = std::map<std::pair<char, char>, double>;
using Neighbors = std::map<char, std::vector<char>>;
Graph edges;
Neighbors vertices;

std::vector<char> greedy_alg(char start, char end) {
	std::vector<char> previous;
	std::vector<char> path;
	previous.push_back(start);
	char current = start;
	double inf = std::numeric_limits<double>::infinity();
	double minWeight = inf;
	while(current != end){
		if (vertices[current].empty()) {
			previous.pop_back();
			char tmp = current;
			current = previous[previous.size() - 1];
			vertices[current].erase(std::remove(vertices[current].begin(), vertices[current].end(), tmp), vertices[current].end());
			continue;
		}
		char tmp_v;
		for (const auto& vert : vertices[current]) {
			if (edges[std::make_pair(current, vert)] < minWeight) {
				minWeight = edges[std::make_pair(current, vert)];
				tmp_v = vert;
			}
		}
		previous.push_back(tmp_v);
		minWeight = inf;
		current = previous[previous.size() - 1];
		path.push_back(current);
	}
	return previous;
}

int  main() {
	char start, end;
	std::cin >> start >> end;
	char v_st, v_end;
	double weight;
	while (std::cin >> v_st >> v_end >> weight) {
		edges[std::make_pair(v_st, v_end)] = weight;
		
		vertices[v_st].insert(vertices[v_st].end(), { v_end });
	}
	std::vector<char> res = greedy_alg(start, end);
	for (const auto& it : res) {
		std::cout << it;
	}
	std::cout << '\n';
	return 0;
}"
u4b0T5Pb,noob in combat esp,HairBaconGamming,Lua,Thursday 2nd of May 2024 09:50:23 AM CDT,"local Player = game.Players.LocalPlayer
local Mouse = Player:GetMouse()

local UntityMaxHealth = {}

local Chosing

function FindFirstDescendantWhichIsA(Object:Instance,ClassName:string)
	for i,descendant:Instance in pairs(Object:GetDescendants()) do
		if descendant:IsA(ClassName) then
			return descendant
		end
	end
end

function createheadtag(entity:Model)
	local BillboardGui = Instance.new(""BillboardGui"")
	local Frame = Instance.new(""Frame"")
	local TextLabel = Instance.new(""TextLabel"")
	local Frame_1 = Instance.new(""Frame"")
	local Frame_2 = Instance.new(""Frame"")
	local TextLabel_1 = Instance.new(""TextLabel"")

	BillboardGui.Active = true
	BillboardGui.AlwaysOnTop = true
	BillboardGui.ClipsDescendants = true
	BillboardGui.LightInfluence = 1
	BillboardGui.Size = UDim2.new(7, 0, 1.5, 0)
	BillboardGui.StudsOffset = Vector3.new(0, 3, 0)
	BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Frame.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
	Frame.BackgroundTransparency = 1
	Frame.BorderColor3 = Color3.new(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Parent = BillboardGui
	Frame.Size = UDim2.new(1, 0, 1, 0)

	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.BorderColor3 = Color3.new(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Font = Enum.Font.Unknown
	TextLabel.Parent = Frame
	TextLabel.Position = UDim2.new(0.0459183678, 0, 0.162790701, 0)
	TextLabel.Size = UDim2.new(0.918367326, 0, 0.399709314, 0)
	TextLabel.Text = [[Entity]]
	TextLabel.TextColor3 = Color3.new(1, 1, 1)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextStrokeTransparency = 0
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	Frame_1.BackgroundColor3 = Color3.new(1, 1, 1)
	Frame_1.BorderColor3 = Color3.new(0, 0, 0)
	Frame_1.BorderSizePixel = 0
	Frame_1.Parent = Frame
	Frame_1.Position = UDim2.new(0.0410000011, 0, 0.662, 0)
	Frame_1.Size = UDim2.new(0.917999983, 0, 0.25, 0)

	Frame_2.BackgroundColor3 = Color3.new(0.333333, 1, 0.498039)
	Frame_2.BorderColor3 = Color3.new(0, 0, 0)
	Frame_2.BorderSizePixel = 0
	Frame_2.Parent = Frame_1
	Frame_2.Size = UDim2.new(0.5, 0, 1, 0)

	TextLabel_1.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel_1.BackgroundTransparency = 1
	TextLabel_1.BorderColor3 = Color3.new(0, 0, 0)
	TextLabel_1.BorderSizePixel = 0
	TextLabel_1.Font = Enum.Font.Unknown
	TextLabel_1.Parent = Frame_1
	TextLabel_1.Size = UDim2.new(1, 0, 1, 0)
	TextLabel_1.Text = [[0/100]]
	TextLabel_1.TextColor3 = Color3.new(1, 1, 1)
	TextLabel_1.TextScaled = true
	TextLabel_1.TextSize = 14
	TextLabel_1.TextStrokeTransparency = 0
	TextLabel_1.TextWrapped = true
	
	local Part = Instance.new(""Part"",entity)
	Part.Transparency = 1
	Part.CanCollide = false
	Part.Anchored = true
	Part.Size = Vector3.new(1,1,1)
	local abc = FindFirstDescendantWhichIsA(entity,""BasePart"")
	Part.CFrame = (abc and abc.CFrame) or entity.WorldPivot
	BillboardGui.Parent = Part
	return BillboardGui,TextLabel_1,Frame_2
end

for i,data in pairs(workspace.Collision:GetChildren()) do
	UntityMaxHealth[data.Name] = data.health.Value
end

local HiddenEntity = Instance.new(""Folder"",workspace)
HiddenEntity.Name = game:GetService(""HttpService""):GenerateGUID(false)

_G.End = true

function update(debristime)
	for i,hidden:Model in pairs(game.ReplicatedStorage.HIDDEN_UNITS:GetChildren()) do
		local clone = hidden:Clone()
		clone.Parent = HiddenEntity
		local highlight = Instance.new(""Highlight"",clone)
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.FillColor = Color3.new(1,0,0)
		highlight.OutlineTransparency = 1
		highlight.FillTransparency = 0.7
		if UntityMaxHealth[hidden.Name] and workspace.Collision[hidden.Name] then
			local bill,healthlabel,bar = createheadtag(clone)
			bill.Frame.TextLabel.Text = game:GetService(""HttpService""):GenerateGUID(false)
			healthlabel.Text = math.round(workspace.Collision[hidden.Name].health.Value/UntityMaxHealth[hidden.Name]*100)
			bar.Size = UDim2.fromScale(workspace.Collision[hidden.Name].health.Value/UntityMaxHealth[hidden.Name],1)
		end
		game.Debris:AddItem(clone,debristime)
	end
end

local secondperframe = 0.5

local tdt = 0
game:GetService(""RunService"").Heartbeat:Connect(function(deltaTime)
	tdt += deltaTime
	if tdt >= secondperframe then
		tdt = 0
		update(secondperframe)
	end
end)

HiddenEntity:Destroy()"
PX2BNB3W,Sys.walk.python,Thoughtcoder411,Python,Thursday 2nd of May 2024 09:47:26 AM CDT,"import os
import sys
import platform
import winreg

def get_system_information():
    system_info = {
        'Operating System': platform.platform(),
        'Python Version': sys.version,
        'Desktop Directory': os.path.join(os.path.expanduser('~'), 'Desktop'),
        'Desktop Icons': os.listdir(os.path.join(os.path.expanduser('~'), 'Desktop'))
    }

    known_folders = {
        'Documents': '{FDD39AD0-238F-46AF-ADB4-6C85480369C7}',
        'Downloads': '{374DE290-123F-4565-9164-39C4925E467B}',
        'Music': '{4BD8D571-6D19-48D3-BE97-422220080E43}',
        'Pictures': '{33E28130-4E1E-4676-835A-98395C3BC3BB}',
        'Videos': '{18989B1D-99B5-455B-841C-AB7C74E4DDFC}'
    }

    for folder_name, folder_guid in known_folders.items():
        try:
            with winreg.OpenKey(winreg.HKEY_CURRENT_USER, r""Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders"") as key:
                folder_path = winreg.QueryValueEx(key, folder_guid)[0]
                system_info[folder_name + ' Path'] = folder_path
        except FileNotFoundError:
            pass

    system_info['System Paths'] = {name: value for name, value in os.environ.items()}

    return system_info

def write_system_information_to_files(system_info):
    folder = os.path.join(os.path.expanduser('~'), 'Desktop', 'autonomie', 'sys.inf')
    os.makedirs(folder, exist_ok=True)

    info_filepath = os.path.join(folder, 'system_info.txt')
    with open(info_filepath, 'w') as f:
        for key, value in system_info.items():
            f.write(f""{key}: {value}\n"")

    paths_filepath = os.path.join(folder, 'system_paths.txt')
    with open(paths_filepath, 'w') as f:
        f.write(""System Paths:\n"")
        for path_name, path_value in system_info['System Paths'].items():
            f.write(f""{path_name}: {path_value}\n"")

    print(""System information has been written to:"", info_filepath)
    print(""System paths have been written to:"", paths_filepath)

if __name__ == ""__main__"":
    system_info = get_system_information()
    write_system_information_to_files(system_info)
"
aWLRUSKs,Ultrasonic Setup rev_01,pleasedontcode,Arduino,Thursday 2nd of May 2024 09:33:24 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Ultrasonic Setup
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-02 14:32:35

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Set pin 6 as output read 1 ultrasonic sensor */
	/* detect something set pin 6 to high and if it is */
	/* high then set it to low then read 2nd ultrasonic */
	/* sensor if someone detect set pin 6 high and if it */
	/* is high then set it to low   Digital pin 6 as */
	/* output */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Ultrasonic.h> // https://github.com/ErickSimoes/Ultrasonic

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t sensor_HC_SR04_Echo_PIN_D3 = 3;

/***** DEFINITION OF DIGITAL OUTPUT PINS *****/
const uint8_t sensor_HC_SR04_Trigger_PIN_D2 = 2;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
bool sensor_HC_SR04_Trigger_PIN_D2_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float sensor_HC_SR04_Trigger_PIN_D2_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Ultrasonic ultrasonic(sensor_HC_SR04_Trigger_PIN_D2, sensor_HC_SR04_Echo_PIN_D3);

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(sensor_HC_SR04_Echo_PIN_D3, INPUT);
    pinMode(sensor_HC_SR04_Trigger_PIN_D2, OUTPUT);
    pinMode(6, OUTPUT); // Set pin 6 as output for ultrasonic sensor 1
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    updateOutputs(); // Refresh output data
}

void updateOutputs()
{
    digitalWrite(sensor_HC_SR04_Trigger_PIN_D2, sensor_HC_SR04_Trigger_PIN_D2_rawData);
}

/* END CODE */"
j83pe7fX,snowybot,coinwalk,JavaScript,Thursday 2nd of May 2024 09:22:06 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/1000).toFixed(8));
var betnext = betbse;
var tens = (betbse*10);
var twohundreds = (betbse*200);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var setasseven = 0;
var chickendinner = (olderest*24);
var belance = olderest;
var stages = parseFloat(olderest);
var goodoldbal = ((Math.floor(stages/tens))*tens);
var stoogy = parseFloat(olderest);
var badoldbal = ((Math.floor(stoogy/tens))*tens);
var setsoftens = 4;
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=setasseven)){
    betnext = betnext*2;
    setasseven = parseFloat(belance);
}
if (((belance-(betnext*2))<=(badoldbal-twohundreds))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    betnext = betbse;
    setasseven = 0;
    setsoftens = 0;
    stoogy = parseFloat(belance);
    badoldbal = ((Math.floor(stoogy/tens))*tens);
}
if ((belance>=(goodoldbal+(tens*setsoftens)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    betnext = betbse;
    setasseven = 0;
    setsoftens = 4;
    stoogy = parseFloat(belance);
    badoldbal = ((Math.floor(stoogy/tens))*tens);
    stages = parseFloat(belance);
goodoldbal = ((Math.floor(stages/tens))*tens);
}
if ((belance>=(goodoldbal+(tens*setsoftens)))&&(belance>(((Math.floor(belance/tens))*tens)+eights))){
    betnext = betbse;
    setasseven = 0;
    setsoftens = 4;
    stoogy = parseFloat(belance);
    badoldbal = ((Math.floor(stoogy/tens))*tens);
    stages = parseFloat(belance);
goodoldbal = ((Math.floor(stages/tens))*tens);
}
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((betnext*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 20);
}
go();
"
GncLvs1r,UDP_datetime:,-fury,C,Thursday 2nd of May 2024 09:18:46 AM CDT,"//UDP_SERVER_datetime:
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <time.h>

#define PORT	 8080
#define MAXLINE 1024

int main() {
    int sockfd;
    char buffer[MAXLINE];
    char *hello = ""Hello from server"";
    struct sockaddr_in servaddr, cliaddr;

    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror(""socket creation failed"");
        exit(EXIT_FAILURE);
    }

    memset(&servaddr, 0, sizeof(servaddr));
    memset(&cliaddr, 0, sizeof(cliaddr));

    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = INADDR_ANY;
    servaddr.sin_port = htons(PORT);

    if (bind(sockfd, (const struct sockaddr *)&servaddr, sizeof(servaddr)) < 0) {
        perror(""bind failed"");
        exit(EXIT_FAILURE);
    }

    int len, n;

    len = sizeof(cliaddr);

    n = recvfrom(sockfd, (char *)buffer, MAXLINE, MSG_WAITALL, (struct sockaddr *)&cliaddr, &len);
    buffer[n] = '\0';
    printf(""Client : %s\n"", buffer);

    time_t rawtime;
    struct tm *timeinfo;
    time(&rawtime);
    timeinfo = localtime(&rawtime);
    char datetime[MAXLINE];
    strftime(datetime, MAXLINE, ""%Y-%m-%d %H:%M:%S"", timeinfo);

    size_t response_length = strlen(hello) + strlen(datetime) + 4;
    if (response_length >= MAXLINE) {
        fprintf(stderr, ""Response length exceeds buffer size\n"");
        exit(EXIT_FAILURE);
    }

    char response[MAXLINE];
    if (snprintf(response, MAXLINE, ""%s - %s"", hello, datetime) >= MAXLINE) {
        fprintf(stderr, ""Response truncated due to buffer size\n"");
        exit(EXIT_FAILURE);
    }

    sendto(sockfd, (const char *)response, strlen(response), MSG_CONFIRM, (const struct sockaddr *)&cliaddr, len);
    printf(""Hello message sent.\n"");

    return 0;
}


//UDP_CLIENT_datetime:



#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <time.h>

#define PORT	 8080
#define MAXLINE 1024

int main() {
    int sockfd;
    char buffer[MAXLINE];
    char *hello = ""Hello from client"";
    struct sockaddr_in servaddr;

    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror(""socket creation failed"");
        exit(EXIT_FAILURE);
    }

    memset(&servaddr, 0, sizeof(servaddr));

    servaddr.sin_family = AF_INET;
    servaddr.sin_port = htons(PORT);
    servaddr.sin_addr.s_addr = INADDR_ANY;

    int n, len;

    time_t rawtime;
    struct tm *timeinfo;
    time(&rawtime);
    timeinfo = localtime(&rawtime);
    char datetime[MAXLINE];
    strftime(datetime, MAXLINE, ""%Y-%m-%d %H:%M:%S"", timeinfo);

    size_t message_length = strlen(hello) + strlen(datetime) + 4;
    if (message_length > MAXLINE) {
        fprintf(stderr, ""Message length exceeds buffer size\n"");
        exit(EXIT_FAILURE);
    }

    char message[MAXLINE];
    if (snprintf(message, MAXLINE, ""%s - %s"", hello, datetime) >= MAXLINE) {
        fprintf(stderr, ""Message truncated due to buffer size\n"");
        exit(EXIT_FAILURE);
    }

    sendto(sockfd, (const char *)message, strlen(message),
        MSG_CONFIRM, (const struct sockaddr *)&servaddr,
            sizeof(servaddr));
    printf(""Hello message sent.\n"");

    n = recvfrom(sockfd, (char *)buffer, MAXLINE,
                MSG_WAITALL, (struct sockaddr *)&servaddr,
                &len);
    buffer[n] = '\0';
    printf(""Server : %s\n"", buffer);

    close(sockfd);
    return 0;
}
"
9RE1ahRh,TCP_datetime,-fury,C,Thursday 2nd of May 2024 09:05:47 AM CDT,"//TCP_SERVER_datetime:
#include <stdio.h>
#include <netdb.h>
#include <netinet/in.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>
#include <time.h>

#define MAX 80
#define PORT 8080
#define SA struct sockaddr

void func(int connectID) {
    char buffer[MAX];
    int n;
    char datetime[MAX];
    time_t rawtime;
    struct tm *timeinfo;

    for (;;) {
        bzero(buffer, MAX);
        read(connectID, buffer, sizeof(buffer));
        time(&rawtime);
        timeinfo = localtime(&rawtime);
        strftime(datetime, MAX, ""%Y-%m-%d %H:%M:%S"", timeinfo);
        printf(""[%s] From the client: %s\t To the client : "", datetime, buffer);
        bzero(buffer, MAX);
        n = 0;
        while ((buffer[n++] = getchar()) != '\n');
        write(connectID, buffer, sizeof(buffer));
        if (strncmp(""exit"", buffer, 4) == 0) {
            printf(""Closing Server\n"");
            break;
        }
    }
}

int main() {
    int sockfd, connectID, length;
    struct sockaddr_in serverAddress, client;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd == -1) {
        printf(""Socket not created!\n"");
        exit(0);
    } else {
        printf(""Socket successfully created!\n"");
    }
    bzero(&serverAddress, sizeof(serverAddress));
    serverAddress.sin_family = AF_INET;
    serverAddress.sin_addr.s_addr = htonl(INADDR_ANY);
    serverAddress.sin_port = htons(PORT);
    if ((bind(sockfd, (SA *)&serverAddress, sizeof(serverAddress))) != 0) {
        printf(""Socket binding failed!\n"");
        exit(0);
    } else {
        printf(""Socket binding done successfully!\n"");
    }
    if ((listen(sockfd, 5)) != 0) {
        printf(""Listen failed!\n"");
        exit(0);
    } else {
        printf(""Server listening!\n"");
    }
    length = sizeof(client);
    connectID = accept(sockfd, (SA *)&client, &length);
    if (connectID < 0) {
        printf(""Server accept failed!\n"");
        exit(0);
    } else {
        printf(""Server accepted the client!\n"");
    }
    func(connectID);
    close(sockfd);
}



//TCP_CLIENT_datetime:
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/socket.h>
#include <unistd.h>
#include <time.h>

#define MAX 80
#define PORT 8080
#define SA struct sockaddr

void func(int sockfd) {
    char buffer[MAX];
    int n;
    char datetime[MAX];
    time_t rawtime;
    struct tm *timeinfo;

    time(&rawtime);
    timeinfo = localtime(&rawtime);
    strftime(datetime, MAX, ""%Y-%m-%d %H:%M:%S"", timeinfo);

    for (;;) {
        bzero(buffer, sizeof(buffer));
        printf(""Enter the string: "");
        n = 0;
        while ((buffer[n++] = getchar()) != '\n');
        int message_length = strlen(buffer);
        write(sockfd, datetime, strlen(datetime));
        write(sockfd, buffer, message_length);
        read(sockfd, buffer, MAX);
        printf(""[%s] From the server : %s"", datetime, buffer);
        if ((strncmp(buffer, ""exit"", 4)) == 0) {
            printf(""Closing Client\n"");
            break;
        }
    }
}

int main() {
    int sockfd, connfd;
    struct sockaddr_in socketAddress, cli;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd == -1) {
        printf(""Socket not created!\n"");
        exit(0);
    } else {
        printf(""Socket successfully created!\n"");
    }
    bzero(&socketAddress, sizeof(socketAddress));
    socketAddress.sin_family = AF_INET;
    socketAddress.sin_addr.s_addr = inet_addr(""127.0.0.1"");
    socketAddress.sin_port = htons(PORT);
    if (connect(sockfd, (SA *)&socketAddress, sizeof(socketAddress)) != 0) {
        printf(""Connection with the server failed!\n"");
        exit(0);
    } else {
        printf(""Connected to the server!\n"");
    }
    func(sockfd);
    close(sockfd);
}
"
XraWnL02,vendor_sold_by_on_store_even_for_vendors_wo_products,palsushobhan,PHP,Thursday 2nd of May 2024 09:04:46 AM CDT,"add_shortcode('wcfm_vendor_info', function ($attr) {
    global $WCFMmp;
    if ( ! wcfm_is_store_page() || 
        ! $WCFMmp->wcfmmp_vendor->is_vendor_sold_by()
    ) return;
    ob_start();
    $wcfm_store_url = wcfm_get_option( 'wcfm_store_url', 'store' );
    $store_name = apply_filters( 'wcfmmp_store_query_var', get_query_var( $wcfm_store_url ) );
    if ( ! empty( $store_name ) ) {
        $store_user = get_user_by( 'slug', $store_name );
        $store_id = $store_user->ID;
        if( apply_filters( 'wcfmmp_is_allow_archive_sold_by_advanced', false ) ) { 
            $WCFMmp->template->get_template( 'sold-by/wcfmmp-view-sold-by-advanced.php', array( 'vendor_id' => $store_id ) );
        } else {
            $WCFMmp->template->get_template( 'sold-by/wcfmmp-view-sold-by-simple.php', array( 'vendor_id' => $store_id ) );
        }
    }
    return ob_get_clean();
}, 50 );"
EkyF7iFn,Untitled,coinwalk,JavaScript,Thursday 2nd of May 2024 08:59:49 AM CDT,"so sorry for everyone that my bots arent working as of yet i've basically being trying to create the ultimate bot around a manual strategy that has made me a ton
sorry guys will nail it very soon tho i'm so darn close"
0kitncu0,hi mum dad,coinwalk,JavaScript,Thursday 2nd of May 2024 08:42:40 AM CDT,"gday to ruth snow and jim snow in brisbane from snowy
they're such great parents"
