id,title,username,language,date,content
dSiWN7cN,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üéÅ,ssss50w,GetText,Thursday 9th of May 2024 06:51:48 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
09 May 2024"
2ueGthpK,final project,apl-mhd,C++,Thursday 9th of May 2024 06:29:31 AM CDT,"#include <stdio.h>
#include <stdlib.h>

struct Player
{
    char name[100];
    int age;
    char playerType[100];
    int match;
    int totalRun;
    int highestRun;
};

void addPlayer(FILE *file, struct Player *playerList, int n)
{
    char newline;

    for (int i = 0; i < n; i++)
    {

        fscanf(file, ""%c"", &newline);
        fscanf(file, ""%c"", &newline);

        fgets(playerList[i].name, 100, file);
        fscanf(file, ""%d"", &playerList[i].age);
        fscanf(file, ""%c"", &newline);
        fgets(playerList[i].playerType, 100, file);
        fscanf(file, ""%d"", &playerList[i].match);
        fscanf(file, ""%d"", &playerList[i].totalRun);
        fscanf(file, ""%d"", &playerList[i].highestRun);
    }
}

void printPlayer(struct Player player)
{
    printf(""name: %s"", player.name);
    printf(""age: %d \n"", player.age);
    printf(""type: %s"", player.playerType);

    printf(""Match: %d \n"", player.match);
    printf(""Total Runs: %d \n"", player.totalRun);
    printf(""Highest Run: %d \n\n"", player.highestRun);
}

void playerInfo(struct Player playerList[], char name[], int n)
{
    int index;
    for (int i = 0; i < n; i++)
    {
        index = i;
        int j = -1;
        while (playerList[i].name[j] != '\0')
        {
            if (playerList[i].name != name[j])
            {
                index = -1;
                break;
            }
            {
            }
            j++;
        }

        if (index != -1)
        {
            break;
        }
    }

    printPlayer(playerList[index]);
}

void showAllPlayer(struct Player playerList[], int n)
{
    for (int i = 0; i < n; i++)
    {
        printf(""\n--------Player %d--------\n"", i + 1);
        printPlayer(playerList[i]);
    };
}

void mep(struct Player playerList[], int n)
{

    int index = -1;
    int maxMatch = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].match > maxMatch)
        {
            maxMatch = playerList[i].match;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void ncp(struct Player playerList[], int n)
{
    int index = -1;
    int age = 999999;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].age < age)
        {
            age = playerList[i].age;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void tsp(struct Player playerList[], int n)
{
    int index = -1;
    int totalRun = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].totalRun > totalRun)
        {
            totalRun = playerList[i].totalRun;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void hhp(struct Player playerList[], int n)
{
    int index = -1;
    int avgRun = -1;
    for (int i = 0; i < n; i++)
    {
        int temp = playerList[i].totalRun / playerList[i].match;
        if (temp > avgRun)
        {
            avgRun = playerList[i].totalRun;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void hrtp(struct Player playerList[], int n)
{
    int index = -1;
    int highestRun = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].highestRun > highestRun)
        {
            highestRun = playerList[i].highestRun;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void mvp(struct Player playerList[], int n)
{
    int index = -1;
    int value = -1;
    for (int i = 0; i < n; i++)
    {
        int age = playerList[i].age;
        int match = playerList[i].match;
        int totalRuns = playerList[i].totalRun;
        int highestRun = playerList[i].highestRun;

        int j = 0;
        char playerRoll[100] = {'A', 'l', 'l', 'r', 'o', 'u', 'n', 'd', 'e', 'r'};
        int allRounderValue = 50;

        while (playerList[i].playerType[j] != '\n')
        {
            if (playerRoll[j] != playerList[i].playerType[j])
            {
                allRounderValue = 0;
                break;
            }

            j++;
        }

        int temp = age + match + totalRuns + highestRun + (totalRuns / match) + (highestRun / age) + allRounderValue;
        if (temp > value)
        {
            value = temp;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

int main()
{
    FILE *file;
    file = fopen(""input.txt"", ""r"");

    int n;
    char name[100];
    struct Player playerList[100];

    fscanf(file, ""%d"", &n);

    addPlayer(file, playerList, n);
    // showAllPlayer(playerList, n);

    // gets(name);
    // playerInfo(playerList, name, n);

    //  mep(playerList, n);
    // ncp(playerList, n);
    // tsp(playerList, n);
    // hrtp(playerList, n);
    // hhp(playerList, n);
    mvp(playerList, n);

    fclose(file);

    return 0;
}"
yTf70UmV,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Thursday 9th of May 2024 06:13:01 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_178707.pdf

Working as of:
09 May 2024"
Ug0T8Fps,RFID Scanner rev_03,pleasedontcode,Arduino,Thursday 9th of May 2024 06:05:09 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Scanner
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 11:03:51

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan card and store card number */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 0); // Change SS and RST pins as needed

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan a RFID card"");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    Serial.println(""A card is detected!"");
    // Print UID of the card
    Serial.print(""Card UID:"");
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" "");
      Serial.print(mfrc522.uid.uidByte[i], HEX);
    }
    Serial.println();
    mfrc522.PICC_HaltA(); // Halt PICC
  }
}

/* END CODE */"
bvPMfQak,"3 LEDs, different speed",jgoy,C++,Thursday 9th of May 2024 06:01:50 AM CDT,"#define LED_ROOD 25  // GPIO pin van LED
#define LED_GEEL 26
#define LED_GROEN 27

#define ROOD_TIJD 3131  // interval in milliseconden
#define GEEL_TIJD 1117
#define GROEN_TIJD 200

void setup() {
  pinMode(LED_ROOD, OUTPUT);
  pinMode(LED_GEEL, OUTPUT);
  pinMode(LED_GROEN, OUTPUT);
}

void loop() {
  digitalWrite(LED_ROOD, millis() % ROOD_TIJD * 2 < ROOD_TIJD ? HIGH : LOW);
  digitalWrite(LED_GEEL, millis() % GEEL_TIJD * 2 < GEEL_TIJD ? HIGH : LOW);
  digitalWrite(LED_GROEN, millis() % GROEN_TIJD * 2 < GROEN_TIJD ? HIGH : LOW);
}"
4CZ3TP21,data921,TestGuy1,JSON,Thursday 9th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '67a055dacd7a09e7e3afe6cd3926c1c534241a80a6ee57cc71811e38d09757acb7f5d31374abee9a61d348aa3cb491c2e321ea5e78edbcc5667c0402aa051d6c3d751b7453cc2420d56134ac1fe896b1b4a388b3101a3641bcdca24f059a685c43fddbd6730502a834f9fa4739d0ae913bce06aa129e1349560fe15e5e6a916b',
  otherdata: [
    '696b0ff83f992490d999d76a92ac06ea',
    'd16415bee0153eb7c7d698fa0ba7f7f8',
    '788a37d950c6c3ece276d080b6574475',
    '2b5ae8e92395f34574398e6ca593e7d4',
    'c5fa2fba956bd25f2dd2dd7de74f1413',
    'b2f4a57af7347f8519ff392375f58c19',
    '2ac3eda2ff13e5de5b9c4eab2f41b4b4',
    'f674bab4ce037f03cdff87fa70d01fce'
  ]
}"
2C4xNyVL,RFID Scanner rev_02,pleasedontcode,Arduino,Thursday 9th of May 2024 05:57:02 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Scanner
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 10:56:36

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan card and store card number */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 0); // Change SS and RST pins as needed

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan a RFID card"");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    Serial.println(""A card is detected!"");
    // Print UID of the card
    Serial.print(""Card UID:"");
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" "");
      Serial.print(mfrc522.uid.uidByte[i], HEX);
    }
    Serial.println();
    mfrc522.PICC_HaltA(); // Halt PICC
  }
}

/* END CODE */"
pqDMePst,RFID Reader rev_01,pleasedontcode,Arduino,Thursday 9th of May 2024 05:55:27 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Reader
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 10:54:01

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan cards */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>  // Include the MFRC522 library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 4);  // Change the SS and RST pins as per your wiring

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan RFID card to get the UID..."");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    // Show UID on serial monitor
    Serial.print(""UID tag :"");
    String content = """";
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" ""));
      content.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    content.toUpperCase();
    Serial.println(content);
  }
}

/* END CODE */"
zTwpM63Z,Untitled,Semount,C#,Thursday 9th of May 2024 05:44:54 AM CDT,"Metod:
private void LoginAction(object obj)
{
    string enteredLogin = Username;
    string enteredPassword = PasswordProvider.Password;

    using (NpgsqlConnection connection = DatabaseConnection.GetConnection())
    {
        connection.Open();

        string query = ""SELECT role_id, name, surname FROM employees WHERE login = @Login AND password = @Password"";
        using (NpgsqlCommand command = new NpgsqlCommand(query, connection))
        {
            command.Parameters.AddWithValue(""@Login"", enteredLogin);
            command.Parameters.AddWithValue(""@Password"", enteredPassword);

            using (var reader = command.ExecuteReader())
            {
                if (reader.Read())
                {
                    int roleId = reader.GetInt32(0);
                    string name = reader.GetString(1);
                    string surname = reader.GetString(2);

                    switch (roleId)
                    {
                        case 1: // –û—Ñ–∏—Ü–∏–∞–Ω—Ç
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                WaiterWindow waiterWindow = new WaiterWindow(name, surname);
                                waiterWindow.Show();
                            });
                            break;
                        case 2: // –ü–æ–≤–∞—Ä
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                ChefWindow chefWindow = new ChefWindow(name, surname);
                                chefWindow.Show();
                            });
                            break;
                        case 3: // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                AdminWindow adminWindow = new AdminWindow(name, surname);
                                adminWindow.Show();
                            });
                            break;
                        default:
                            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å
                            ShowErrorMessage = true;
                            ErrorMessage = ""–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å. –î–æ–ª–æ–∂–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."";
                            break;
                    }
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞
                    if (obj is Window window)
                    {
                        window.Close();
                    }
                }
                else
                {
                    // –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å
                    ShowErrorMessage = true;
                    ErrorMessage = ""–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å."";
                }
            }
        }
    }
}


DatabaseConnection.cs:
using Npgsql;

namespace ReManage.Core
{
    public static class DatabaseConnection
    {
        private static string connectionString = ""Server=localhost;Port=5432;Database=ReManage;User Id=postgres;Password=35x45x;"";

        public static NpgsqlConnection GetConnection()
        {
            return new NpgsqlConnection(connectionString);
        }
    }
}"
VhH947Sp,For Arduino,dllbridge,C,Thursday 9th of May 2024 05:35:33 AM CDT,"#include <SoftwareSerial.h>

SoftwareSerial mySerial(10, 11); // RX, TX
#define LED_PIN 13

void setup() {
  pinMode(LED_PIN, OUTPUT);
  mySerial.begin(9600);
}

void loop() {
  if (mySerial.available()) {
    String inputString = mySerial.readString();
    if (inputString.indexOf(""SONY"") >= 0) {
      digitalWrite(LED_PIN, HIGH);
      mySerial.println(""_Pictures"");
    } else {
      digitalWrite(LED_PIN, LOW);
    }
  }
}



#include <windows.h>
#include <stdio.h>

int main() {
    HANDLE hCom;
    BOOL fSuccess;
    char *pszPortName = ""COM3""; // COM-–ø–æ—Ä—Ç Arduino
    char *pszMessage = ""SONY"";
    DWORD dwNumBytesWritten = 0;
    DWORD dwNumBytesRead = 0;
    char inbuff[10];

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º COM-–ø–æ—Ä—Ç
    hCom = CreateFile(pszPortName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);

    if (hCom == INVALID_HANDLE_VALUE) {
        printf(""Failed to open COM: %dn"", GetLastError());
        return 1;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    fSuccess = WriteFile(hCom, pszMessage, strlen(pszMessage), &dwNumBytesWritten, NULL);

    if (!fSuccess) {
        printf(""WriteFile failed: %dn"", GetLastError());
        return 1;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    fSuccess = ReadFile(hCom, inbuff, 10, &dwNumBytesRead, NULL);
    
    if (!fSuccess) {
        printf(""ReadFile failed: %dn"", GetLastError());
        return 1;
    }
    printf(""Received: %sn"", inbuff);

    return 0;
}"
AtSRCUpQ,Twitter Giveaway Picker,MeckeOfficial,JavaScript,Thursday 9th of May 2024 05:10:29 AM CDT,"javascript: (function() {
    let hrefList = [];
    let scrollAttempts = 0;

    function processSections() {
        const sections = document.getElementsByTagName('section');
        for (let i = 0; i < sections.length; i++) {
            const section = sections[i];
            if (section.hasAttribute('aria-labelledby')) {
                const ariaLabelledById = section.getAttribute('aria-labelledby');
                if (ariaLabelledById.startsWith('accessible-list')) {
                    const h1Elements = section.getElementsByTagName('h1');
                    for (let j = 0; j < h1Elements.length; j++) {
                        const h1Element = h1Elements[j];
                        if (h1Element.getAttribute('role') === 'heading' && (h1Element.textContent.trim() === 'Reposts' || h1Element.textContent.trim() === 'Likes' || h1Element.textContent.trim() === 'Quotes')) {
                            const cellInnerDivs = section.querySelectorAll('[data-testid=""cellInnerDiv""]');
                            cellInnerDivs.forEach(cellInnerDiv => {
                                const hrefRegex = /href=""([^""]*)""/;
                                const match = cellInnerDiv.innerHTML.match(hrefRegex);
                                if (match && match[1]) {
                                    const href = match[1];
                                    if (!hrefList.includes(href)) {
                                        hrefList.push(href);
                                        updateHrefsCountDisplay();
                                        console.log(""New href added:"", href);
                                    }
                                }
                            });
                            break;
                        }
                    }
                }
            }
        }
    }

    function pickWinner() {
        if (hrefList.length > 0) {
            const randomIndex = Math.floor(Math.random() * hrefList.length);
            const selectedHref = hrefList[randomIndex];
            winnerButton.textContent = selectedHref;
            winnerButton.href = selectedHref;
            hrefList.splice(randomIndex, 1);
            updateHrefsCountDisplay();
        } else {
            winnerButton.textContent = ""No entries available"";
            winnerButton.removeAttribute('href');
        }
    }

    function handlePickWinner() {
        hrefList = [];
        processSections();
        const scrollInterval = setInterval(function() {
            window.scrollBy(0, window.innerHeight);
            scrollAttempts++;
            if (scrollAttempts >= 3) {
                scrollAttempts = 0;
                const prevLength = hrefList.length;
                processSections();
                if (hrefList.length === prevLength) {
                    clearInterval(scrollInterval);
                    console.log(""Reached end. List of hrefs:"", hrefList);
                    pickWinner();
                }
            }
        }, 1000);
    }

    function handleReroll() {
        pickWinner();
    }

    function updateHrefsCountDisplay() {
        hrefCountDisplay.textContent = `Total hrefs: ${hrefList.length}`;
    }
    const pickWinnerButton = document.createElement('button');
    pickWinnerButton.textContent = 'Pick a Winner';
    pickWinnerButton.addEventListener('click', handlePickWinner);
    document.body.appendChild(pickWinnerButton);
    pickWinnerButton.style.position = 'fixed';
    pickWinnerButton.style.top = '10px';
    pickWinnerButton.style.left = '10px';
    pickWinnerButton.style.backgroundColor = 'green';
    pickWinnerButton.style.color = 'white';
    pickWinnerButton.style.padding = '10px 20px';
    pickWinnerButton.style.border = 'none';
    pickWinnerButton.style.borderRadius = '5px';
    pickWinnerButton.style.cursor = 'pointer';
    const rerollButton = document.createElement('button');
    rerollButton.textContent = 'Reroll';
    rerollButton.addEventListener('click', handleReroll);
    document.body.appendChild(rerollButton);
    rerollButton.style.position = 'fixed';
    rerollButton.style.top = '10px';
    rerollButton.style.left = '150px';
    rerollButton.style.backgroundColor = 'blue';
    rerollButton.style.color = 'white';
    rerollButton.style.padding = '10px 20px';
    rerollButton.style.border = 'none';
    rerollButton.style.borderRadius = '5px';
    rerollButton.style.cursor = 'pointer';
    const winnerButton = document.createElement('a');
    winnerButton.textContent = '- None -';
    document.body.appendChild(winnerButton);
    winnerButton.style.position = 'fixed';
    winnerButton.style.top = '50px';
    winnerButton.style.left = '10px';
    winnerButton.style.backgroundColor = 'blue';
    winnerButton.style.color = 'white';
    winnerButton.style.padding = '10px 20px';
    winnerButton.style.border = 'none';
    winnerButton.style.borderRadius = '5px';
    winnerButton.style.cursor = 'pointer';
    const hrefCountDisplay = document.createElement('span');
    hrefCountDisplay.textContent = `Total hrefs: ${hrefList.length}`;
    document.body.appendChild(hrefCountDisplay);
    hrefCountDisplay.style.position = 'fixed';
    hrefCountDisplay.style.top = '90px';
    hrefCountDisplay.style.left = '10px';
    hrefCountDisplay.style.color = 'black';
})();"
9E07kswb,DES_PAO,cataleena,C++,Thursday 9th of May 2024 05:01:56 AM CDT,"#include <iostream>
#include <fstream>
#include <cstdint>
#include <chrono>
#include <omp.h> // Include OpenMP header
#include ""keys.h""
#include ""permutation.h""
#include ""sbox.h""

class TripleDES {
public:
    TripleDES(const uint64_t* key1, const uint64_t* key2, const uint64_t* key3) : key1(key1), key2(key2), key3(key3) {
        obtainRoundKeys(*key1, roundKeys1, 16);
        obtainRoundKeys(*key2, roundKeys2, 16);
        obtainRoundKeys(*key3, roundKeys3, 16);
    }

    void encryptFile(const char* inputFile, const char* outputFile);
    uint64_t generateNextCounterValue(uint64_t counter);
    uint64_t getMillisTimestamp();

private:
    const uint64_t* key1;
    const uint64_t* key2;
    const uint64_t* key3;
    unsigned long long roundKeys1[16], roundKeys2[16], roundKeys3[16];

    void encryptBlocks(const uint64_t* counter, uint64_t* ciphertextBlock);
};

void TripleDES::encryptFile(const char* inputFile, const char* outputFile) {
    std::ifstream inFile(inputFile, std::ios::binary);
    std::ofstream outFile(outputFile, std::ios::binary);

    if (!inFile.is_open() || !outFile.is_open()) {
        std::cerr << ""Error opening files."" << std::endl;
        return;
    }

    constexpr size_t blockSize = 8; // 64 bits
    uint64_t plaintextBlock[8], ciphertextBlock[8];
    uint64_t counter[8] = {0, 1, 2, 3, 4, 5, 6, 7}; // Initial counter values
    bool keepProcessing = true;

#pragma omp parallel // Start parallel region
    {
        while (keepProcessing) {
            // Read multiple blocks in a thread-safe manner
            bool readSuccessful = true;
#pragma omp critical
            {
                for (int i = 0; i < 8; ++i) {
                    readSuccessful &= inFile.read(reinterpret_cast<char*>(&plaintextBlock[i]), blockSize).good();
                }
            }

            if (!readSuccessful) {
                keepProcessing = false;
            }

            // Encrypt multiple blocks in parallel
            encryptBlocks(counter, ciphertextBlock);

            // Write the ciphertext blocks in a thread-safe manner
#pragma omp critical
            {
                if (keepProcessing) {
                    for (int i = 0; i < 8; ++i) {
                        outFile.write(reinterpret_cast<char*>(&ciphertextBlock[i]), blockSize);
                    }
                }
            }

            // Update the counter after processing the blocks
            for (int i = 0; i < 8; ++i) {
                counter[i] = generateNextCounterValue(counter[i]);
            }
        }
    } // End of parallel region

    inFile.close();
    outFile.close();
}

void TripleDES::encryptBlocks(const uint64_t* counter, uint64_t* ciphertextBlock) {
    // First encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(counter[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys1[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }

    // Second encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(ciphertextBlock[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys2[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }

    // Third encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(ciphertextBlock[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys3[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }
}

uint64_t TripleDES::generateNextCounterValue(uint64_t counter) {
    return counter + 8; // Increment by the number of blocks processed
}

uint64_t TripleDES::getMillisTimestamp() {
    auto now = std::chrono::system_clock::now();
    auto duration = now.time_since_epoch();
    auto millis = std::chrono::duration_cast<std::chrono::milliseconds>(duration).count();
    return millis;
}

int main() {
    const char* inputFile = ""../data/input1MB.txt"";
    const char* outputFile = ""../data/output1MB_encrypted.txt"";
    uint64_t key1[3] = {0xA4B92905A4B92905, 0x0000000000000000, 0xA4B92905A4B92905};
    uint64_t key2[3] = {0xC567A1F3C567A1F3, 0x0000000000000000, 0xC567A1F3C567A1F3};
    uint64_t key3[3] = {0xE3D17F253E3D17F2, 0x0000000000000000, 0xE3D17F253E3D17F2};

    TripleDES des(key1, key2, key3);

    auto begin = des.getMillisTimestamp();
    des.encryptFile(inputFile, outputFile);
    auto end = des.getMillisTimestamp();

    auto duration_ms = end - begin;
    std::cout << ""Encryption completed in "" << duration_ms << "" ms."" << std::endl;

    return 0;
}
"
Qq5j3RBv,member-career,mrnosuch,Python,Thursday 9th of May 2024 04:46:50 AM CDT,"# -*- coding: utf-8 -*-

# Python 3

import os
import sys
import sqlite3
import bbot.discord


SCRIPT_PATH : str      = os.path.dirname(os.path.realpath(sys.argv[0]))
local_db_path :str     = ""/home/pi/Scripts/blastardbot/bot.db""  ## Production
# local_db_path :str     = ""/home/pi/Scripts/blastardbot/bot-dev.db""  ## Development


# Define queries

MEMBER_SELECT = '''
SELECT 
	rosterID
	clan_id, 
	name, 
	psn_id, 
	status,
	join_date, 
	exit_date, 
	return_date, 
	rec_id  
FROM 
	member
WHERE
	status IN ('Member','Alumni')
ORDER BY
	name;
'''

MEMBER_CAREER_SELECT = '''
SELECT
	name,
	psn_id,
	start_date,
	event,
	end_date,
	status,
	rosterID
FROM
	member_career
WHERE
	rosterID = :rosterID;
'''

CAREER_INSERT = '''
INSERT INTO
	career (
		rosterID,
		start_date,
		end_date,
		event,
		status
	)
VALUES (
    :rosterID,
    :start_date,
    :end_date,
    :event,
    :status
)
'''

CAREER_UPDATE_EXIT = '''
UPDATE 
    career
SET 
    end_date = :end_date,
    status   = :status
WHERE
    rosterID = :rosterID
AND
    start_date = :start_date
'''

CAREER_UPDATE_START = '''
UPDATE 
    career
SET 
    start_date = :new_start_date
WHERE
    rosterID = :rosterID
AND
    start_date = :old_start_date
'''

CAREER_DELETE_RETURN = '''
DELETE FROM 
    career
WHERE
    rosterID = :rosterID
AND
    start_date = :return_date
AND
    event = ""Return""
'''

CAREER_UPDATE_RETURN = '''
UPDATE 
    career
SET
    start_date = :return_date,
    status     = ""Active"",
    event      = ""Return""
WHERE
    rosterID = :rosterID
AND
    start_date = :event_date
'''

CAREER_CREATE_RETURN = '''
INSERT INTO
    career (start_date, event, rosterID, status)
VALUES (
    :return_date,
    'Return',
    :rosterID,
    'Active'
)
'''

# define classes

class CareerSummary():

    rosterID        = None
    name            = None
    missing         = True
    prev_start      = None
    join_date       = None
    exit_date       = None
    return_date     = None
    status          = None
    last_event      = None
    event_count     = 0
    last_event_date = None
    career_data     = None
    db              = None

    def __init__(self, db, rosterID, name):

        self.rosterID    = rosterID
        self.name        = name
        self.db          = db

        self.career_load()
        

    def career_load(self):

        self.missing         = True
        self.prev_start      = None
        self.join_date       = None
        self.exit_date       = None
        self.return_date     = None
        self.status          = None
        self.last_event      = None
        self.event_count     = 0
        self.last_event_date = None

        self.career_data =  db_select(self.db, MEMBER_CAREER_SELECT, {'rosterID' : self.rosterID})

        if len(self.career_data) > 0:

            self.missing = False
            self.event_count = len(self.career_data)
            self.last_event = self.career_data[self.event_count-1]['event']
            self.last_event_date = self.career_data[self.event_count-1]['start_date']
            self.join_date = self.career_data[0]['start_date']
            self.exit_date = self.career_data[0]['end_date']
            self.status = self.career_data[self.event_count-1]['status']

            if self.event_count > 1:
                self.prev_start = self.career_data[self.event_count-2]['start_date']
            else:
                self.prev_start = self.career_data[0]['start_date']

        else:
            print(""No career events found."")

        for career_event in self.career_data:

            if not self.exit_date:
                self.exit_date = career_event['end_date']
            else:
                if career_event['end_date'] and self.exit_date < career_event['end_date']:
                    self.exit_date = career_event['end_date']

            if career_event['start_date']>self.join_date and career_event['start_date']>noneToEmpty(self.return_date):
                self.return_date = career_event['start_date']

        print(self)

    def career_create(self, join_date):

        options = {
            'rosterID' : self.rosterID,
            'start_date' : join_date,
            'end_date' : None,
            'event' : 'Join',
            'status' : 'Active'
        }

        db_execute(self.db, CAREER_INSERT, options)
        print(f""Join event on {join_date} created for {self.name} ({self.rosterID})."")

        self.career_load()


    def join_update(self, join_date):

        options = {
            'rosterID' : self.rosterID,
            'old_start_date' : self.join_date,
            'new_start_date' : join_date
        }
        db_execute(self.db, CAREER_UPDATE_START, options)
        print(f""Join event update from {self.join_date} to {join_date} for {self.name} ({self.rosterID})"")

        self.career_load()


    def exit_update(self, exit_date, return_date):
       
        print(f""Current exit date is: {self.exit_date}"")
        print(f""    New exit will be: {exit_date}, return date: {return_date}"")
        event_date = self.last_event_date
        event_status = ""Alumni""

        # It's NOT possible to have a return date and NO exit date
        if return_date and not exit_date:
            print(""Error! Return without exit!"")
            return

        # Possible that exit date was reverted to None
        if not exit_date:
            event_status = ""Active""
            print(""Updating exit with ACTIVE status."")

        
        if return_date and return_date > exit_date:
            # If the return date is AFTER the exit date, the end date should be on last career event
            event_date = self.prev_start
    
        options = {
            'rosterID'   : self.rosterID,
            'start_date' : event_date,
            'end_date'   : exit_date,
            'status'     : event_status
        }

        db_execute(self.db, CAREER_UPDATE_EXIT, options)
        print(f""Updating exit date to {exit_date} and status {event_status} for event starting on {event_date} for {self.name} ({self.rosterID})."")

        self.career_load()


    def return_update(self, return_date, exit_date):

        if not return_date:

            # This will be a deletion of the last event in the career
            options = {
                'rosterID' : self.rosterID,
                'return_date' : self.return_date
            }            

            print(f""Removing return event from {self.name} ({self.rosterID})"")
            db_execute(self.db, CAREER_DELETE_RETURN, options)

        else:

            # We need to figure out if we are UPDATING a return date
            # or creating a new returning event

            # If the return_date is BEFORE the exit_date, it's an update

            if (return_date < exit_date):

                # We are updating
                options = {
                    'rosterID' : self.rosterID,
                    'return_date' : self.return_date,
                    'event_date'  : self.last_event_date
                }  
                db_execute(self.db, CAREER_UPDATE_RETURN, options)
                print(f""Updating return date {self.return_date} for {self.name} ({self.rosterID})."")

            else:

                # If the return date is AFTER the exit date, it's a new return event

                # Just check status to be safe. Only an alumni can return

                if self.status == ""Alumni"":
                    # We are creating a new event
                    options = {
                        'rosterID' : self.rosterID,
                        'return_date' : return_date
                    }
                    db_execute(self.db, CAREER_CREATE_RETURN, options)
                    print(f""Creating return event on {return_date} for {self.name} ({self.rosterID})."")
                else:
                    print(f""Can't add an exit event as {self.name} (self.rosterID) isn't alumni."")
        
        self.career_load()

    def event_sync(self, join_date, exit_date, return_date):

        if self.missing:

            # Create career if missing

            print(""* No career data found. Creating..."")
            self.career_create(join_date)

        else:

            # Otherwise update join date if there's a difference
                       
            if join_date != self.join_date:
                print(""* Join date mismatch. Updating join date..."") 
                self.join_update(join_date)

        if exit_date != self.exit_date:
            print(""* Exit data mismatch. Updating exit date..."")
            self.exit_update(exit_date, return_date)

        if return_date != self.return_date:
            print(""* Return date mismatch. Updating return date..."")
            self.return_update(return_date, exit_date)


    def __str__(self):
        return f""Career for {self.name} ({self.rosterID}) status {self.status} - join: {self.join_date}, exit: {self.exit_date}, return: {self.return_date}, events: {self.event_count}""


# Define functions

def noneOrNull(v):

    if v is None:
        return True
    if len(v) is 0:
        return True
    return False

def noneToEmpty(v):
    if v is None:
        return """"
    else:
        return v

def emptyToNone(v):

    if v == """":
        return None
    return v


def db_open():

    print(""Opening database: "",local_db_path)    

    db = sqlite3.connect(local_db_path)
    db.row_factory = sqlite3.Row

    return db


def db_close(db):

    print(""Closing data base."")
    db.commit()
    db.close()


def db_select(db, query, options = None):

    cur = db.cursor()

    if options is not None:
        rows = cur.execute(query, options).fetchall()
    else:
        rows = cur.execute(query).fetchall()

    data=[{k: item[k] for k in item.keys()} for item in rows]

    return data     


def db_execute(db, query, options):

    cur = db.cursor()

    cur.execute(query, options)

    db.commit()


def members_fetch(db):

    print(""Loading all current and previous members."")

    members=db_select(db, MEMBER_SELECT)

    return members

def member_check(db, members):

    member_count = 0

    for m in members:

        member_count = member_count + 1

        # Career rows are
        #   rosterID
        #   start_date
        #   event (Join, Return)
        #   end_date
        #   status (Active, Alumni)

        # Rules for career updates
        #   Info in members must have:
                # join_date must be the earliest date
                # When return_date is defined:
                #   If return date is > exit_date, member is active
                #   If return date is < exit_date, member is alumni
                # exit_date must come after join_date (if it exists)
        #   If the member row doesn't follow this, 
        #   it won't be processed as it is considered invalid.

        member_name = m['name']
        rosterID    = m['clan_id']
        join_date   = emptyToNone(m['join_date'])
        exit_date   = emptyToNone(m['exit_date'])
        return_date = emptyToNone(m['return_date'])

        print(f""===== Roster data for #{member_count}, {member_name} ({rosterID}) join: {join_date} exit: {exit_date} return: {return_date} ====="")

        summary = CareerSummary(db, rosterID, member_name)
        summary.event_sync(join_date, exit_date, return_date)
        

#
# MAIN PROCEDURE
#

db = db_open()

members = members_fetch(db)

member_check(db, members)

print(""\n----\n"")
db_close(db)"
5jdavrjk,Untitled,Gaxil,C,Thursday 9th of May 2024 04:45:25 AM CDT,"#include <stdio.h>
#include <stdlib.h>

void print_lematrix(float **lematrix, int dim) {
    int i, j;

    for (j = 0; j < dim; j++) {
        for (i = 0; i < dim + 1; i++)
            printf(""%10.4f"", lematrix[j][i]);
        printf(""\n"");
    }
    printf(""\n\n"");
}

float **allocate_lematrix(int dim) {
    float **A = (float **)malloc(dim * sizeof(float *));
    for (int i = 0; i < dim; ++i) {
        A[i] = (float *)malloc((dim + 1) * sizeof(float));
    }
    return A;
}

void gem(float **A, int n, float *x) {
    int i, j, k;
    float c, sum = 0.0;

    print_lematrix(A, n);


    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            c = A[j][i] / A[i][i];
            for (k = i; k < n + 1; k++) {
                A[j][k] -= c * A[i][k];
            }
        }
    }

    print_lematrix(A, n);

    for (i = n - 1; i >= 0; i--) {
        sum = 0.0;
        for (j = i + 1; j < n; j++) {
            sum += A[i][j] * x[j];
        }
        x[i] = (A[i][n] - sum) / A[i][i];
    }
}

int main() {
    int i, n;

    n = 3;
    float **A = allocate_lematrix(n);

    float **B = allocate_lematrix(n);
    float *x = (float *)malloc(n * sizeof(float));

    A[0][0] = 1.0;
    A[0][1] = 1.0;
    A[0][2] = 1.0;
    A[0][3] = 9.0;
    A[1][0] = 2.0;
    A[1][1] = -3.0;
    A[1][2] = 4.0;
    A[1][3] = 13.0;
    A[2][0] = 3.0;
    A[2][1] = 4.0;
    A[2][2] = 5.0;
    A[2][3] = 40.0;

    B[0][0] = 10.0;
    B[0][1] = -7.0;
    B[0][2] = 3.0;
    B[0][3] = 5.0;
    B[1][0] = -6.0;
    B[1][1] = 8.0;
    B[1][2] = 4.0;
    B[1][3] = 7.0;
    B[2][0] = 2.0;
    B[2][1] = 6.0;
    B[2][2] = 9.0;
    B[2][3] = -1.0;

    gem(A, n, x);

    printf(""\nReseni: \n"");
    for (i = 0; i < n; i++) printf(""\nx%d=%f"", i, x[i]);

    printf(""\n\n\n\n\n\n"");



    gem(B, n, x);

    printf(""\nReseni: \n"");
    for (i = 0; i < n; i++) printf(""\nx%d=%f"", i, x[i]);

    return 0;
}
"
sUS5cFAA,Write script for All Union and Parts on Roblox Studio change All MaterialVariant to <None> |,LikeRampage,Lua,Thursday 9th of May 2024 04:33:59 AM CDT,"-Write script for All Union on Roblox Studio change All MaterialVariant to <None>

-- Script to change the MaterialVariant of all Unions to 'None'
for _, item in pairs(workspace:GetDescendants()) do
    if item:IsA(""UnionOperation"") then
        item.MaterialVariant = """" -- Setting to an empty string to represent 'None'
    end
end


-- Script to change the MaterialVariant of all Parts to 'None'
for _, item in pairs(workspace:GetDescendants()) do
    if item:IsA(""Part"") then
        item.MaterialVariant = """" -- Setting to an empty string to represent 'None'
    end
end

--[[
     Adding two ['s and ]'s makes it a
     multi-line comment.
	To change the MaterialVariant property of all Union objects in Roblox Studio to 'None', you can use the following Lua script. Please note that 'None' is not a standard option for MaterialVariant, so this script will set the MaterialVariant to an empty string, which is the equivalent of having no variant:

To execute this script, open the command bar in Roblox Studio (View -> Command Bar), paste the script into it, and press Enter. Always make sure to test scripts in a safe environment to avoid unintended changes to your game. If 'None' becomes a valid option for MaterialVariant in a future update of Roblox, you should replace the empty string """" with 'None'.
--]]

--[[
     Adding two ['s and ]'s makes it a
     multi-line comment.
	Certainly! Below is a Lua script for Roblox Studio that will change the MaterialVariant property of all Part objects to 'None'. Since 'None' is not a standard option for MaterialVariant, the script sets the MaterialVariant to an empty string, which effectively removes any variant:

To run this script in Roblox Studio, you can paste it into the command bar and press Enter. Make sure to test the script in a safe environment first to ensure it works as expected without affecting your main project. If you have any more requests or need further assistance, feel free to ask!
--]]

"
iRqZ2ycn,Create Lightmap UV,Staggart,C#,Thursday 9th of May 2024 04:01:31 AM CDT,"using System;
using UnityEngine;

namespace sc.modeling.splines.runtime.auxiliary
{
    [ExecuteAlways]
    public class SplineMesherLightmapUV : MonoBehaviour
    {
        [Tooltip(""Let Unity automatically create a new UV (slow but accurate)"")]
        public bool autoUnwrap = true;
        public SplineMesher splineMesher;
        
        private void Reset()
        {
            splineMesher = GetComponent<SplineMesher>();
        }
        
        private void OnEnable()
        {
            //Subscribe
            SplineMesher.onPostRebuildMesh += OnPostRebuild;
        }

        private void OnPostRebuild(SplineMesher instance)
        {
            //Is the instance being rebuild the one we want to work with
            if (instance == splineMesher)
            {
                MeshFilter mf = splineMesher.GetComponent<MeshFilter>();

                if (mf)
                {
                    #if UNITY_EDITOR
                    if (autoUnwrap)
                    {
                        UnityEditor.Unwrapping.GenerateSecondaryUVSet(mf.sharedMesh);
                    }
                    else
                    {
                        mf.sharedMesh.uv2 = mf.sharedMesh.uv;
                    }
                    #endif
                }
            }
        }

        private void OnDisable()
        {
            //Unsubscribe
            SplineMesher.onPostRebuildMesh -= OnPostRebuild;
        }
    }
}"
mW1G3FRi,amiberry wbx,feos,Make,Thursday 9th of May 2024 03:32:02 AM CDT,"CORE_DIR := amiberry

TARGET := amiberry.wbx

CXXFLAGS = -MT $@ -MF $(@:%.o=%.d) \
	-I$(CORE_DIR)/external/libguisan/include \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/osdep \
	-I$(CORE_DIR)/src/threaddep \
	-I$(CORE_DIR)/src/include \
	-I$(CORE_DIR)/src/archivers \
	-I$(CORE_DIR)/src/floppybridge \
	-I$(CORE_DIR)/external/mt32emu/src \
	-D_FILE_OFFSET_BITS=64

CCFLAGS=-pipe -Wno-shift-overflow -Wno-narrowing

LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -lpthread -lz -lrt -ldl

SRCS = \
	$(CORE_DIR)/src/archivers/7z/7zAlloc.c \
	$(CORE_DIR)/src/archivers/7z/7zArcIn.c \
	$(CORE_DIR)/src/archivers/7z/7zBuf.c \
	$(CORE_DIR)/src/archivers/7z/7zBuf2.c \
	$(CORE_DIR)/src/archivers/7z/7zCrc.c \
	$(CORE_DIR)/src/archivers/7z/7zCrcOpt.c \
	$(CORE_DIR)/src/archivers/7z/7zDec.c \
	$(CORE_DIR)/src/archivers/7z/7zFile.c \
	$(CORE_DIR)/src/archivers/7z/7zStream.c \
	$(CORE_DIR)/src/archivers/7z/Aes.c \
	$(CORE_DIR)/src/archivers/7z/AesOpt.c \
	$(CORE_DIR)/src/archivers/7z/Alloc.c \
	$(CORE_DIR)/src/archivers/7z/Bcj2.c \
	$(CORE_DIR)/src/archivers/7z/Bra.c \
	$(CORE_DIR)/src/archivers/7z/Bra86.c \
	$(CORE_DIR)/src/archivers/7z/BraIA64.c \
	$(CORE_DIR)/src/archivers/7z/CpuArch.c \
	$(CORE_DIR)/src/archivers/7z/Delta.c \
	$(CORE_DIR)/src/archivers/7z/LzFind.c \
	$(CORE_DIR)/src/archivers/7z/Lzma2Dec.c \
	$(CORE_DIR)/src/archivers/7z/Lzma2Enc.c \
	$(CORE_DIR)/src/archivers/7z/Lzma86Dec.c \
	$(CORE_DIR)/src/archivers/7z/Lzma86Enc.c \
	$(CORE_DIR)/src/archivers/7z/LzmaDec.c \
	$(CORE_DIR)/src/archivers/7z/LzmaEnc.c \
	$(CORE_DIR)/src/archivers/7z/LzmaLib.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7Dec.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7Enc.c \
	$(CORE_DIR)/src/archivers/7z/Sha256.c \
	$(CORE_DIR)/src/archivers/7z/Sort.c \
	$(CORE_DIR)/src/archivers/7z/Xz.c \
	$(CORE_DIR)/src/archivers/7z/XzCrc64.c \
	$(CORE_DIR)/src/archivers/7z/XzCrc64Opt.c \
	$(CORE_DIR)/src/archivers/7z/XzDec.c \
	$(CORE_DIR)/src/archivers/7z/XzEnc.c \
	$(CORE_DIR)/src/archivers/7z/XzIn.c \
	$(CORE_DIR)/src/archivers/chd/utf8proc.c \
	$(CORE_DIR)/src/a2065.cpp \
	$(CORE_DIR)/src/a2091.cpp \
	$(CORE_DIR)/src/akiko.cpp \
	$(CORE_DIR)/src/amax.cpp \
	$(CORE_DIR)/src/ar.cpp \
	$(CORE_DIR)/src/arcadia.cpp \
	$(CORE_DIR)/src/audio.cpp \
	$(CORE_DIR)/src/autoconf.cpp \
	$(CORE_DIR)/src/blitfunc.cpp \
	$(CORE_DIR)/src/blittable.cpp \
	$(CORE_DIR)/src/blitter.cpp \
	$(CORE_DIR)/src/blkdev.cpp \
	$(CORE_DIR)/src/blkdev_cdimage.cpp \
	$(CORE_DIR)/src/bsdsocket.cpp \
	$(CORE_DIR)/src/calc.cpp \
	$(CORE_DIR)/src/cd32_fmv.cpp \
	$(CORE_DIR)/src/cd32_fmv_genlock.cpp \
	$(CORE_DIR)/src/cdrom.cpp \
	$(CORE_DIR)/src/cdtv.cpp \
	$(CORE_DIR)/src/cdtvcr.cpp \
	$(CORE_DIR)/src/cfgfile.cpp \
	$(CORE_DIR)/src/cia.cpp \
	$(CORE_DIR)/src/consolehook.cpp \
	$(CORE_DIR)/src/cpuboard.cpp \
	$(CORE_DIR)/src/crc32.cpp \
	$(CORE_DIR)/src/custom.cpp \
	$(CORE_DIR)/src/debug.cpp \
	$(CORE_DIR)/src/def_icons.cpp \
	$(CORE_DIR)/src/devices.cpp \
	$(CORE_DIR)/src/disk.cpp \
	$(CORE_DIR)/src/diskutil.cpp \
	$(CORE_DIR)/src/dlopen.cpp \
	$(CORE_DIR)/src/dongle.cpp \
	$(CORE_DIR)/src/draco.cpp \
	$(CORE_DIR)/src/drawing.cpp \
	$(CORE_DIR)/src/driveclick.cpp \
	$(CORE_DIR)/src/ethernet.cpp \
	$(CORE_DIR)/src/events.cpp \
	$(CORE_DIR)/src/expansion.cpp \
	$(CORE_DIR)/src/fdi2raw.cpp \
	$(CORE_DIR)/src/filesys.cpp \
	$(CORE_DIR)/src/flashrom.cpp \
	$(CORE_DIR)/src/fpp.cpp \
	$(CORE_DIR)/src/fsdb.cpp \
	$(CORE_DIR)/src/fsusage.cpp \
	$(CORE_DIR)/src/gayle.cpp \
	$(CORE_DIR)/src/gfxboard.cpp \
	$(CORE_DIR)/src/gfxutil.cpp \
	$(CORE_DIR)/src/hardfile.cpp \
	$(CORE_DIR)/src/hrtmon.rom.cpp \
	$(CORE_DIR)/src/ide.cpp \
	$(CORE_DIR)/src/idecontrollers.cpp \
	$(CORE_DIR)/src/identify.cpp \
	$(CORE_DIR)/src/ini.cpp \
	$(CORE_DIR)/src/inputdevice.cpp \
	$(CORE_DIR)/src/inputrecord.cpp \
	$(CORE_DIR)/src/isofs.cpp \
	$(CORE_DIR)/src/keybuf.cpp \
	$(CORE_DIR)/src/main.cpp \
	$(CORE_DIR)/src/memory.cpp \
	$(CORE_DIR)/src/midiemu.cpp \
	$(CORE_DIR)/src/native2amiga.cpp \
	$(CORE_DIR)/src/ncr9x_scsi.cpp \
	$(CORE_DIR)/src/ncr_scsi.cpp \
	$(CORE_DIR)/src/parser.cpp \
	$(CORE_DIR)/src/rommgr.cpp \
	$(CORE_DIR)/src/rtc.cpp \
	$(CORE_DIR)/src/sampler.cpp \
	$(CORE_DIR)/src/savestate.cpp \
	$(CORE_DIR)/src/scp.cpp \
	$(CORE_DIR)/src/scsi.cpp \
	$(CORE_DIR)/src/scsiemul.cpp \
	$(CORE_DIR)/src/scsitape.cpp \
	$(CORE_DIR)/src/statusline.cpp \
	$(CORE_DIR)/src/tabletlibrary.cpp \
	$(CORE_DIR)/src/tinyxml2.cpp \
	$(CORE_DIR)/src/traps.cpp \
	$(CORE_DIR)/src/uaeexe.cpp \
	$(CORE_DIR)/src/uaelib.cpp \
	$(CORE_DIR)/src/uaenative.cpp \
	$(CORE_DIR)/src/uaeresource.cpp \
	$(CORE_DIR)/src/uaeserial.cpp \
	$(CORE_DIR)/src/zfile.cpp \
	$(CORE_DIR)/src/zfile_archive.cpp \
	$(CORE_DIR)/src/archivers/chd/avhuff.cpp \
	$(CORE_DIR)/src/archivers/chd/bitmap.cpp \
	$(CORE_DIR)/src/archivers/chd/cdrom.cpp \
	$(CORE_DIR)/src/archivers/chd/chd.cpp \
	$(CORE_DIR)/src/archivers/chd/chdcd.cpp \
	$(CORE_DIR)/src/archivers/chd/chdcodec.cpp \
	$(CORE_DIR)/src/archivers/chd/corealloc.cpp \
	$(CORE_DIR)/src/archivers/chd/corefile.cpp \
	$(CORE_DIR)/src/archivers/chd/corestr.cpp \
	$(CORE_DIR)/src/archivers/chd/flac.cpp \
	$(CORE_DIR)/src/archivers/chd/harddisk.cpp \
	$(CORE_DIR)/src/archivers/chd/hashing.cpp \
	$(CORE_DIR)/src/archivers/chd/huffman.cpp \
	$(CORE_DIR)/src/archivers/chd/md5.cpp \
	$(CORE_DIR)/src/archivers/chd/osdcore.cpp \
	$(CORE_DIR)/src/archivers/chd/osdlib_unix.cpp \
	$(CORE_DIR)/src/archivers/chd/osdsync.cpp \
	$(CORE_DIR)/src/archivers/chd/palette.cpp \
	$(CORE_DIR)/src/archivers/chd/posixdir.cpp \
	$(CORE_DIR)/src/archivers/chd/posixfile.cpp \
	$(CORE_DIR)/src/archivers/chd/posixptty.cpp \
	$(CORE_DIR)/src/archivers/chd/posixsocket.cpp \
	$(CORE_DIR)/src/archivers/chd/strconv.cpp \
	$(CORE_DIR)/src/archivers/chd/strformat.cpp \
	$(CORE_DIR)/src/archivers/chd/unicode.cpp \
	$(CORE_DIR)/src/archivers/chd/vecstream.cpp \
	$(CORE_DIR)/src/archivers/dms/crc_csum.cpp \
	$(CORE_DIR)/src/archivers/dms/getbits.cpp \
	$(CORE_DIR)/src/archivers/dms/maketbl.cpp \
	$(CORE_DIR)/src/archivers/dms/pfile.cpp \
	$(CORE_DIR)/src/archivers/dms/tables.cpp \
	$(CORE_DIR)/src/archivers/dms/u_deep.cpp \
	$(CORE_DIR)/src/archivers/dms/u_heavy.cpp \
	$(CORE_DIR)/src/archivers/dms/u_init.cpp \
	$(CORE_DIR)/src/archivers/dms/u_medium.cpp \
	$(CORE_DIR)/src/archivers/dms/u_quick.cpp \
	$(CORE_DIR)/src/archivers/dms/u_rle.cpp \
	$(CORE_DIR)/src/archivers/lha/crcio.cpp \
	$(CORE_DIR)/src/archivers/lha/dhuf.cpp \
	$(CORE_DIR)/src/archivers/lha/header.cpp \
	$(CORE_DIR)/src/archivers/lha/huf.cpp \
	$(CORE_DIR)/src/archivers/lha/larc.cpp \
	$(CORE_DIR)/src/archivers/lha/lhamaketbl.cpp \
	$(CORE_DIR)/src/archivers/lha/lharc.cpp \
	$(CORE_DIR)/src/archivers/lha/shuf.cpp \
	$(CORE_DIR)/src/archivers/lha/slide.cpp \
	$(CORE_DIR)/src/archivers/lha/uae_lha.cpp \
	$(CORE_DIR)/src/archivers/lha/util.cpp \
	$(CORE_DIR)/src/archivers/lzx/unlzx.cpp \
	$(CORE_DIR)/src/archivers/mp2/kjmp2.cpp \
	$(CORE_DIR)/src/archivers/wrp/warp.cpp \
	$(CORE_DIR)/src/archivers/zip/unzip.cpp \
	$(CORE_DIR)/src/caps/caps_amiberry.cpp \
	$(CORE_DIR)/src/machdep/support.cpp \
	$(CORE_DIR)/src/floppybridge/ArduinoFloppyBridge.cpp \
	$(CORE_DIR)/src/floppybridge/ArduinoInterface.cpp \
	$(CORE_DIR)/src/floppybridge/CommonBridgeTemplate.cpp \
	$(CORE_DIR)/src/floppybridge/floppybridge_lib.cpp \
	$(CORE_DIR)/src/floppybridge/ftdi.cpp \
	$(CORE_DIR)/src/floppybridge/GreaseWeazleBridge.cpp \
	$(CORE_DIR)/src/floppybridge/GreaseWeazleInterface.cpp \
	$(CORE_DIR)/src/floppybridge/pll.cpp \
	$(CORE_DIR)/src/floppybridge/RotationExtractor.cpp \
	$(CORE_DIR)/src/floppybridge/SerialIO.cpp \
	$(CORE_DIR)/src/floppybridge/SuperCardProBridge.cpp \
	$(CORE_DIR)/src/floppybridge/SuperCardProInterface.cpp \
	$(CORE_DIR)/src/floppybridge/FloppyBridge.cpp \
	$(CORE_DIR)/src/osdep/ahi_v1.cpp \
	$(CORE_DIR)/src/osdep/bsdsocket_host.cpp \
	$(CORE_DIR)/src/osdep/cda_play.cpp \
	$(CORE_DIR)/src/osdep/charset.cpp \
	$(CORE_DIR)/src/osdep/fsdb_host.cpp \
	$(CORE_DIR)/src/osdep/clipboard.cpp \
	$(CORE_DIR)/src/osdep/amiberry_hardfile.cpp \
	$(CORE_DIR)/src/osdep/keyboard.cpp \
	$(CORE_DIR)/src/osdep/midi.cpp \
	$(CORE_DIR)/src/osdep/mp3decoder.cpp \
	$(CORE_DIR)/src/osdep/picasso96.cpp \
	$(CORE_DIR)/src/osdep/writelog.cpp \
	$(CORE_DIR)/src/osdep/amiberry.cpp \
	$(CORE_DIR)/src/osdep/ahi_v2.cpp \
	$(CORE_DIR)/src/osdep/amiberry_dbus.cpp \
	$(CORE_DIR)/src/osdep/amiberry_filesys.cpp \
	$(CORE_DIR)/src/osdep/amiberry_input.cpp \
	$(CORE_DIR)/src/osdep/amiberry_gfx.cpp \
	$(CORE_DIR)/src/osdep/amiberry_gui.cpp \
	$(CORE_DIR)/src/osdep/amiberry_mem.cpp \
	$(CORE_DIR)/src/osdep/amiberry_serial.cpp \
	$(CORE_DIR)/src/osdep/amiberry_uaenet.cpp \
	$(CORE_DIR)/src/osdep/amiberry_whdbooter.cpp \
	$(CORE_DIR)/src/osdep/ioport.cpp \
	$(CORE_DIR)/src/osdep/sigsegv_handler.cpp \
	$(CORE_DIR)/src/osdep/socket.cpp \
	$(CORE_DIR)/src/osdep/retroarch.cpp \
	$(CORE_DIR)/src/osdep/vpar.cpp \
	$(CORE_DIR)/src/sounddep/sound.cpp \
	$(CORE_DIR)/src/threaddep/threading.cpp \
	$(CORE_DIR)/src/osdep/gui/ControllerMap.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectorEntry.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowCustomFields.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowHelp.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowMessage.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowDiskInfo.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectFolder.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectFile.cpp \
	$(CORE_DIR)/src/osdep/gui/CreateFilesysHardfile.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysVirtual.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysHardfile.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysHardDrive.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelAbout.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelPaths.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelQuickstart.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelConfig.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelCPU.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelChipset.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelCustom.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelROM.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelRAM.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelFloppy.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelExpansions.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelHD.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelRTG.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelHWInfo.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelInput.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelIOPorts.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelDisplay.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelSound.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelDiskSwapper.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelMisc.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelPrio.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelSavestate.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelVirtualKeyboard.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelWHDLoad.cpp \
	$(CORE_DIR)/src/osdep/gui/main_window.cpp \
	$(CORE_DIR)/src/osdep/gui/Navigation.cpp \
	$(CORE_DIR)/src/osdep/vkbd/vkbd.cpp \
	$(CORE_DIR)/src/newcpu.cpp \
	$(CORE_DIR)/src/newcpu_common.cpp \
	$(CORE_DIR)/src/readcpu.cpp \
	$(CORE_DIR)/src/cpudefs.cpp \
	$(CORE_DIR)/src/cpustbl.cpp \
	$(CORE_DIR)/src/cpuemu_0.cpp \
	$(CORE_DIR)/src/cpuemu_4.cpp \
	$(CORE_DIR)/src/cpuemu_11.cpp \
	$(CORE_DIR)/src/cpuemu_13.cpp \
	$(CORE_DIR)/src/cpuemu_40.cpp \
	$(CORE_DIR)/src/cpuemu_44.cpp

include ../common.mak"
vRChZmgm,Untitled,SenpaiZero,Java,Thursday 9th of May 2024 03:14:00 AM CDT,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		String user;
		Scanner scanner = new Scanner(System.in);
		do {
			System.out.print(""Student Number: "");
			user = scanner.nextLine();
			
			if(user.matches(""[0-9]{4}-[0-9]{2}-[0-9]{3}""))
				break;
			
			System.out.println(""Invalid student number."");
		} while(true);
		
		System.out.println(""Your student number is "" + user);
	}
}
"
NSMAQyVF,Untitled,bad_dev,CSS,Thursday 9th of May 2024 02:57:43 AM CDT,"/* 
 * Yes, this codebase is near unreadable. Why?
 * I designed this mainly as a test to see how viable avoidance of straight out class selectors would be.
 * The codebase was never designed to be pretty, it was designed to require as little maintenance as possible.
 */

@import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;500;600;700&display=swap');
@import url('https://mwittrien.github.io/BetterDiscordAddons/Themes/BlurpleRecolor/BlurpleRecolor.css');
@import url('https://discord-custom-covers.github.io/usrbg/dist/usrbg.css');

button {
	--accentcolor: var(--accent-alt);
}


/* Root Variables */

:root {
	--font-primary: 'Segoe UI', sans-serif;
	--font-display: var(--font-primary) !important;
	/* Dark Matter Variables */
	--avatar-size: 32px;
	--background-image: url('https://i.imgur.com/7SbtKvw.png');
	--home-image: url('https://i.imgur.com/233d55Y.gif');
	--background-solid: #161921;
	--background-solid-dark: #101218;
	--background-solid-darker: #0c0e12;
	--accent: 37, 172, 232;
	--accent-alt: 29, 101, 134;
	--md-black: 0, 0, 0;
	--dm-white: 255, 255, 255;
	/* BlurpleRecolor */
	--accentcolor: var(--accent);
	--vaccentcolor-hover: rgb(var(--accent));
	--vaccentcolor-active: rgb(var(--accent));
}

:not(div[class*=""userProfile""][class*=""unThemed""]).theme-dark,
:not(div[class*=""userProfile""]).theme-light,
div[class*=""userProfile""][class*=""unThemed""].theme-light {
	/* Discord vars */
	--background-primary: var(--background-solid);
	--background-mobile-primary: var(--background-primary);
	--background-secondary: var(--background-solid);
	--background-mobile-secondary: var(--background-secondary);
	--background-secondary-alt: var(--background-solid);
	--background-tertiary: var(--background-solid);
	--background-floating: var(--background-solid);
	--background-secondary: var(--background-solid);
	--background-accent: var(--background-solid);
	--background-message-hover: rgba(var(--md-black), 0.4);
	--channeltextarea-background: transparent;
	--activity-card-background: rgba(var(--dm-white), 0.05);
	--deprecated-store-bg: transparent;
	--background-modifier-hover: rgba(var(--md-black), 0.3);
	--background-modifier-active: rgba(var(--md-black), 0.3);
	--background-modifier-selected: rgba(var(--md-black), 0.6);
	--elevation-low: inset 0 -1px 0 0 rgba(var(--md-black), 0.3);
	--channels-default: rgba(var(--dm-white), 0.3);
	--deprecated-quickswitcher-input-background: var(--background-solid);
	--header-primary: rgba(var(--dm-white), 1);
	--header-secondary: rgba(var(--dm-white), 0.6);
	--text-normal: rgba(var(--dm-white), 0.6);
	--text-muted: #8a8e94;
	--interactive-muted: rgba(var(--dm-white), 0.15);
	--interactive-normal: rgba(var(--dm-white), 0.5);
	--interactive-hover: rgba(var(--dm-white), 0.75);
	--interactive-active: rgba(var(--dm-white), 1);
	--deprecated-card-bg: rgba(var(--dm-white), 0.05);
	--text-link: rgba(var(--accent), 1);
	--focus-primary: rgba(var(--accent), 1);
    --modal-background: var(--background-solid);
    --modal-footer-background: var(--background-solid-darker);
}

::selection {
	background-color: rgba(var(--accent-alt), 0.5);
}


/* Scrollbars */

::-webkit-scrollbar {
	width: 14px !important;
}

 ::-webkit-scrollbar-thumb {
	border-radius: 8px !important;
	border: 3px solid transparent !important;
	background-color: rgba(var(--accent-alt), 1) !important;
}

 ::-webkit-scrollbar-track {
	visibility: visible !important;
	border-radius: 8px !important;
	border: 3px solid transparent !important;
	background-color: rgba(0, 0, 0, 0.3) !important;
	background-clip: padding-box !important;
}

.none-2Eo-qx::-webkit-scrollbar {
	display: none !important;
}


/* Titlebar */

div[class*=""typeWindows-""] {
	--background-modifier-hover: rgba(var(--dm-white), 0.05);
	--background-modifier-active: rgba(var(--dm-white), 0.075);
	height: 26px;
}

div[class*=""typeWindows-""]>div:first-child {
	display: none;
}

div[class*=""typeWindows-""]>div[role=""button""] {
	height: 30px;
	width: 36px;
}

div[class*=""typeWindows-""]::after {
	content: 'Discord';
	font-weight: 7500;
	line-height: 31px;
	color: var(--text-muted);
	font-size: 14px;
	position: absolute;
	padding: 0 12px;
	top: 0;
	left: 0;
	width: 100%;
	height: 30px;
	background: rgba(var(--md-black), 0.85);
	z-index: -1;
}


/* Guilds */

nav[class*=""guilds-""] {
    background: transparent;
}
ul[data-list-id='guildsnav'] {
	--background-secondary: var(--background-solid);
    	--background-primary: rgba(var(--dm-white), 0.1);
	margin-bottom: 70px;
	background-color: rgba(var(--md-black), 0.6);
	border-right: 1px solid rgba(var(--md-black), 0.2);
	box-shadow: inset -10px 0px 20px -10px rgba(var(--md-black), 0.3);
}

ul[data-list-id='guildsnav'] ::-webkit-scrollbar {
	display: none;
}

ul[data-list-id='guildsnav']>div[dir] {
	padding-top: 18px;
}

ul[data-list-id='guildsnav'] [class^=""pill-""],
ul[data-list-id='guildsnav'] [class^=""pill-""]>div {
	height: 40px !important;
}

ul[data-list-id='guildsnav'] div[style*=""height: 56""],
ul[id^=""folder-items-""] {
	height: auto !important;
}

ul[data-list-id='guildsnav'] [class^=""pill-""] span {
	width: 10px;
	margin-left: -5px;
	border-radius: 20px;
}

[data-list-id='guildsnav'] [class^=""pill-""] span[style^=""opacity: 1; height: 40""] {
	--header-primary: rgba(var(--accent), 1);
}

span[class^=""expandedFolderBackground-""] {
	--background-secondary: rgba(var(--md-black), 0.25);
	border-radius: 14px;
	width: 40px;
	left: 16px;
}

.wrapper-28eC3z,
[data-list-id='guildsnav'] [data-dnd-name] > div,
[data-list-id='guildsnav'] svg[width=""48""] {
	width: 40px;
	height: 40px;
}

div[data-list-item-id=""guildsnav___home""] {
	background: var(--home-image) top center/110% no-repeat;
}

div[class^=""unreadMentionsIndicatorBottom-""] {
	bottom: 70px;
}

#app-mount [data-list-item-id=""guildsnav___home""]>div {
	color: transparent;
	background-color: transparent;
}

div[data-list-item-id=""guildsnav___create-join-button""],
div[data-list-item-id=""guildsnav___guild-discover-button""] {
	transition: 150ms ease;
	opacity: 0.5;
	background-color: var(--background-solid) !important;
	color: rgba(var(--dm-white), 0.3) !important;
	border: 1px dashed rgba(var(--dm-white), 0.3);
	border-radius: 50px;
}

div[data-list-item-id=""guildsnav___create-join-button""]:hover,
div[data-list-item-id=""guildsnav___guild-discover-button""]:hover {
	opacity: 1;
}


/* Sidebar */

.platform-win [class^=""sidebar-""] {
	border-radius: 0;
    background-color: transparent;
}

div[class^=""sidebar-""] nav,
#private-channels {
	background: var(--background-secondary) !important;
	--background-tertiary: rgba(var(--md-black), 0.35);
}

div[class^=""sidebar-""]>nav>div[class^=""searchBar""] {
	height: 54px;
}

/* members wrapper */
.container-2o3qEW {
	--background-secondary: rgba(var(--md-black), 0.4);
	--background-modifier-hover: rgba(var(--dm-white), 0.07);
	--background-modifier-active: var(--background-modifier-hover);
	--background-modifier-selected: rgba(var(--dm-white), 0.07);
    background: rgb(var(--md-black), 0.9);
}

div[data-list-id^=""members-""][class*=""scrollerBase-""] {
    background: transparent;
}

div[data-list-id^=""members-""] [class*=""placeholder""] {
	--backgorund-primary: var(--text-normal);
}

div[class^='nowPlayingColumn'] {
	--background-secondary: transparent;
	--background-primary: rgba(var(--md-black), 0.5);
	--background-modifier-hover: rgba(var(--dm-white), 0.075);
}
div[class^=""members-""] div[class^=""member-""] {
    background-color: transparent;
}

#channels div[class^=""unread-""] {
	--interactive-active: rgba(var(--accent), 1);
}


/* Sidebar Header */

nav[aria-label]>div>header {
	display: flex;
	flex-direction: column;
	justify-content: center;
	height: 54px;
	--background-accent: rgba(var(--accent), 1);
	--background-modifier-hover: rgba(var(--md-black), 0.25);
}


/* Outer containers */

body {
	background: var(--background-image) center/cover no-repeat;
}

#app-mount {
    background-color: transparent;
	--background-tertiary: transparent;
	--background-secondary: transparent;
}

#app-mount>div[class^=""appDevToolsWrapper-""] {
	--background-primary: transparent;
	--background-tertiary: transparent;
	--background-secondary: rgba(var(--md-black), 0.7);
	background-color: rgba(var(--md-black), 0.4);
}
div[class^=""notAppAsidePanel-""]>div[class^=""app-""]>div[class^=""app-""],
div[class^=""app-""]>div[class^=""bg-""] {
    background-color: transparent;
}
div[class*=""baseLayer-""]>div[class^=""container-""] {
    background-color: rgb(var(--md-black), 0.4);
}

nav+div [class^='sidebar-'],
nav+div[class^='base-'] {
	overflow: visible !important;
	position: relative;
	max-width: calc(100% - 72px);
}

nav+div[class^='base-'] > div[class^=""notice""] {
	border-radius: 0;
}

div[class^='base-']>div,
section[class*=""themed-""] {
	--background-secondary: rgba(var(--md-black), 0.7);
	--background-tertiary: rgba(var(--dm-white), 0.05);
	--background-primary: rgba(var(--md-black), 0.8);
}

#app-mount>div:not([class^=""appDevToolsWrapper-""]),
.autocomplete-1vrmpx {
	--background-primary: var(--background-solid);
	--background-secondary: var(--background-solid-dark);
	--background-secondary-alt: var(--background-solid-darker);
	--background-tertiary: var(--background-solid-darker);
}


/* Header */

section[class*=""themed-""] {
	height: 54px;
	box-shadow: var(--elevation-low);
    background-color: rgb(var(--md-black), 0.925) !important;
	--background-secondary: rgba(var(--dm-white), 0.1);
}

section>div>a[href*=""support.discord.com""] {
	display: none;
}

section[class*=""themed-""]::before,
section[class*=""themed-""] ::after {
	content: none;
}

section div[class^=""toolbar""]>div[role] {
	margin: 0 4px;
	transition: 150ms ease;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 3px;
	width: 28px;
	height: 28px;
}

section div[class^=""toolbar""]>div[role] svg {
	width: 22px;
}

section div[class^=""toolbar""]>div[role][class*=""selected-""] {
	background-color: rgba(var(--dm-white), 0.1);
}


/* Panels */

div[class^='sidebar-']>section {
	--background-primary: rgba(var(--dm-white), 0.07);
	--background-secondary: rgba(var(--dm-white), 0.1);
	--background-secondary-alt: rgba(var(--md-black), 0.95);
	margin-bottom: 70px;
}

div[class^='sidebar-']>section>div:last-child {
	background-color: var(--background-secondary-alt);
	box-sizing: border-box;
	height: 70px;
	padding: 0 18px;
	width: calc(100% + 72px);
	position: absolute;
	left: -72px;
	bottom: 0;
}
div[class^=""sidebar-""]>section>div:last-child [class^=""avatarWrapper-""] {
    flex: 1;
}


/* Content */

div[class^='chat'] {
	--background-floating: rgba(var(--md-black), 0.5);
    background: transparent;
}

div[class^=""container-""][id^=""chat-messages-""] {
	--background-modifier-hover: var(--background-solid-dark);
}

div[class^='chat'] main form {
	margin-top: 0;
}

div[class^='chat'] main form::before {
	content: none;
}

div[data-list-id=""chat-messages""] {
	--background-primary: transparent;
	--background-secondary: rgba(var(--dm-white), 0.05);
	--background-accent: rgba(var(--dm-white), 0.1);
}

div[class^=""channelTextArea-""] {
	--background-secondary: transparent;
	box-shadow: inset 0 0 0 2px rgba(var(--dm-white), 0.1);
	transition: 250ms ease;
	margin-bottom: 24px;
	margin-top: 12px;
	border-radius: 5px;
}

div[id^=""chat-messages-""]+div:not([id]):last-child {
	height: 8px;
}

div[id^=""chat-messages-""][class*=""cozy-""] {
	padding-left: calc(var(--avatar-size) * 2);
}

div[id^=""chat-messages-""] {
	margin-left: 8px;
	margin-right: 8px;
	border-radius: 4px;
}

div[id^=""chat-messages-""]>div[class^=""buttonContainer-""] {
	transform: scale(.85);
	top: 1px;
}

div[id^=""chat-messages-""] {
	--background-primary: rgba(var(--md-black), 0.5);
}

div[id^=""chat-messages-""]>div>[class^=""avatar-""] {
	margin-top: 6px;
	width: var(--avatar-size);
	height: var(--avatar-size);
}

div[id^=""chat-messages-""][class*=""cozy-""] div::before {
	--gutter: 13px;
}

.mention {
	transition: 150ms ease;
	color: rgba(var(--accent), 1) !important;
	background-color: rgba(var(--accent), 0.3);
	padding: 3px 5px;
	border-radius: 5px;
}

.mention:hover {
	background-color: rgba(var(--accent), 0.3) !important;
}

#app-mount .container-2cd8Mz {
	background: var(--background-primary);
}

div[class*=""barBase-""] {
	padding-bottom: 0;
	background-color: rgba(var(--accent-alt), 0.9);
}


/* Codeblocks */

html pre {
	border-radius: 0;
	background: transparent;
	border-color: rgba(255, 255, 255, 0.1);
}

pre code.hljs {
	border: none;
	background-color: rgba(var(--dm-white), 0.1);
	color: rgba(var(--dm-white), 0.7);
	padding: 1em;
}

html code.inline,
html code.inline {
	background: rgba(var(--dm-white), 0.1);
	color: rgba(var(--dm-white), 0.7);
	padding: 0.3em 0.6em;
	border-radius: 3px;
}


/* Settings */

div[aria-label*=""_SETTINGS""],
div[aria-label*=""_DEBUG""] {
	--background-primary: transparent;
	--background-secondary: rgba(var(--md-black), 0.7);
}

div[class^=""sidebarRegionScroller-""]>nav {
	--background-secondary: transparent;
}

div[class^=""contentRegion-""] {
	--background-primary: rgba(var(--md-black), 0.8);
}

div[class^=""contentRegion-""] div[style^=""overflow: hidden scroll""] {
	background-color: transparent;
	--background-primary: rgba(var(--md-black), 0.1);
	--background-secondary: rgba(var(--md-black), 0.2);
	--background-secondary-alt: rgba(var(--md-black), 0.25);
	--background-tertiary: rgba(var(--dm-white), 0.1);
}

div[aria-label*=""_SETTINGS""] aside>div {
	--background-primary: transparent;
}

div[aria-label*=""_SETTINGS""] aside>div::-webkit-scrollbar-track {
	visibility: hidden !important;
}

.bd-addon-list {
	--background-secondary: var(--background-solid);
	--background-secondary-alt: var(--background-solid-dark);
}


/* Tab Bar */

div[class*=""topPill""],
nav>div[role=""tablist""],
.bd-tab-bar {
	--background-accent: rgba(var(--accent));
	--background-modifier-hover: rgba(var(--dm-white), 0.05);
	--background-modifier-active: rgba(var(--dm-white), 0.075);
	--background-modifier-selected: rgba(var(--accent), 0.25);
}


/* Server Discovery */

div[class^=""sidebar""]+[class^=""pageWrapper""] {
	--background-secondary: rgba(var(--md-black), 0.8);
	background-color: var(--background-secondary);
}


/* Crash Page */

div[class*=""errorPage""] {
	--background-secondary: rgba(var(--md-black), 0.7) !important;
}


/* Tooltips */

div[class^=""tooltip-""] {
	--background-floating: rgba(var(--accent-alt), 1);
	--text-normal: #e0e0e0;
}


/* Buttons */

button[class*=""button-""][class*=""color""],
.bd-button {
	--vaccentcolor: var(--accent-alt);
}

.bd-button {
	--bd-blue: rgba(var(--accent-alt), 1);
}


/* Context Menu */

div[role=""menuitem""] {
	--vaccentcolor: var(--accent-alt);
}

div[role=""menuitem""]:active {
	--vaccentcolor: var(--accent);
}


/* Depreceated Components */


/* These use hardcoded colors, no need to bother with strange selectors */

#app-mount .footer-2gL1pp,
#app-mount .footer-3mqk7D {
	background-color: var(--background-secondary);
	box-shadow: none;
}

#app-mount .root-1gCeng,
#app-mount .addGamePopout-2RY8Ju,
#app-mount .keyboardShortcutsModal-3piNz7,
#app-mount .emojiAliasInput-1y-NBz .emojiInput-1aLNse,
.perksModal-fSYqOq .perk-2WeBWW,
#app-mount .uploadModal-2ifh8j,
#app-mount .contentWrapper-3WC1ID,
#app-mount .contentWarningPopout-n5JsIs {
	background-color: var(--background-primary);
}

#app-mount .codeRedemptionRedirect-1wVR4b,
#app-mount .userSettingsVoice-iwdUCU .previewOverlay-2O7_KC,
#app-mount .inset-3sAvek {
	background-color: var(--background-tertiary);
	border: none;
}

#app-mount .paymentPane-3bwJ6A,
#app-mount .tierBody-x9kBBp,
#app-mount .tierBody-16Chc9,
#app-mount .barBackground-2EEiLw,
#app-mount .body-3iLsc4,
#app-mount .footer-1fjuF6,
#app-mount .container-3ayLPN,
#app-mount .colorPickerCustom-2CWBn2,
#app-mount .tierMarkerBackground-3q29am,
.css-3vaxre-menu,
.css-dwar6a-menu,
#app-mount .autocomplete-1vrmpx,
.categoryHeader-O1zU94,
#app-mount .popoutList-T9CKZQ,
#app-mount .quickSelectPopout-X1hvgV,
.colorable-1bkp8v.primaryDark-3mSFDl,
.tile-2naSqK,
.videoWrapper-2v09vt,
#app-mount .spoilerText-3p6IlD.hidden-HHr2R9 {
	background-color: var(--background-solid);
}

#app-mount .expandedInfo-3kfShd,
#app-mount .tierHeaderLocked-1a2opw,
#app-mount .tierHeaderLocked-1s2JJz,
#app-mount .headerNormal-T_seeN,
#app-mount .focused-2bY0OD,
.colorable-1bkp8v.primaryDark-3mSFDl:hover {
	background-color: var(--background-solid-dark);
}

#app-mount .payment-xT17Mq {
	background-color: transparent;
	border-bottom-color: rgba(var(--dm-white), 0.025);
}

#app-mount .bottomDivider-1K9Gao,
#app-mount .focused-2bY0OD {
	border-bottom-color: var(--background-solid-dark);
}

#app-mount div[data-list-id=""billing-history""],
#app-mount div[data-list-id^=""private-channels-""],
#app-mount .media-engine-video,
.react-datepicker,
.react-datepicker__header,
.react-datepicker__day--outside-month,
.react-datepicker__day--disabled,
div[data-list-id^=""members-""],
div[data-list-id^=""members-""]>div {
	background-color: transparent !important;
}

.react-datepicker__day--disabled {
	opacity: .6;
}

#app-mount .react-datepicker__day {
	border-top-color: var(--background-secondary);
	border-left-color: var(--background-secondary);
}

#app-mount .background-3xPPFc,
#app-mount .tierInProgress-3mBoXq {
	color: var(--background-solid);
}

.option-96V44q:after {
	content: none;
}

#app-mount .option-96V44q.selected-rZcOL-,
#app-mount .selected-1Tbx07,
#app-mount .quickSelectPopoutOption-opKBx9:hover,
#app-mount .outer-1AjyKL.active-1xchHY,
#app-mount .outer-1AjyKL.interactive-3B9GmY:hover {
	background-color: var(--background-modifier-hover);
}

.css-3vaxre-menu,
.tierMarker-5HkGJ_[style] {
	border-color: rgba(var(--dm-white), 0.025) !important;
}

#app-mount .searchAnswer-3Dz2-q,
#app-mount .searchFilter-2ESiM3,
#app-mount .option-1B5ZV8,
#app-mount .pill-2pQByF {
	background-color: rgba(var(--accent-alt), 1);
	color: #fff;
}

#app-mount .keybindShortcut-1BD6Z1 span {
	background: var(--background-solid-dark);
	box-shadow: inset 0 -4px 0 var(--background-solid-darker);
}

#app-mount .perksModal-fSYqOq {
	background: rgba(var(--md-black), 0.7);
}

#app-mount .card-FDVird:before {
	background: var(--background-modifier-hover);
	border: none;
}


/* Login Page */

div[class^=""splashBackground""] canvas,
div[class^=""splashBackground""] img {
	display: none;
}

/* Modals */

div[class*=""footerSeparator""] {
	box-shadow: none !important;
}

/* Forums */
.container-3wLKDe {
    background: var(--background-primary);
}
li[class^=""card-""]>div[class^=""container-""] {
    background: var(--background-floating)
}"
cYhddNxz,boom.lua,joppeaa,Lua,Thursday 9th of May 2024 01:56:47 AM CDT,"local State = {INIT = ""1"", 
                WAIT = ""2"", 
                GET_TREE = ""3"", 
                REPLANT = ""4""}
                
local currentState = State.INIT
local treeCNT = 0


disp = peripheral.wrap(""bottom"")

function serialize(data, name)
  if not fs.exists('/data') then
      fs.makeDir('/data')
  end
  local f = fs.open('/data/'..name, 'w')
  f.write(textutils.serialize(data))
  f.close()
end

function unserialize(name)
  if fs.exists('/data/'..name) then
      local f = fs.open('/data/'..name, 'r')
      data = textutils.unserialize(f.readAll())
      f.close()
  end
  return data
end

function getTree()
    turtle.dig()
    turtle.forward()
    while not(turtle.up()) do
        turtle.digUp()
        turtle.up()
    end
    while not (turtle.detectDown()) do
        turtle.down()
    end
    
    turtle.back()
    treeCNT = treeCNT + 1
    disp.clear()
    disp.setCursorPos(1,1)
    disp.write(tostring(treeCNT).."" bomen"")
    serialize(treeCNT, ""memTreeCount"")
    currentState = State.REPLANT
end

function replant()
    turtle.select(3)
    if (turtle.getItemCount() < 10) then
        print(""Running low on Saplings"")
        turtle.suckDown(30)
    end
    turtle.place()   
    currentState = State.WAIT
end

function waitForGrow()
    local inspectedBlock, data = turtle.inspect()
    if data.name == ""minecraft:spruce_log"" then
        currentState = State.GET_TREE
    end
end

while (1) do
    if currentState == State.INIT then
      treeCNT = unserialize(""memTreeCount"")
    end
    
    if currentState == State.WAIT then
        waitForGrow()
    end
    
    if currentState == State.REPLANT then
        replant()        
    end
    
    if currentState == State.GET_TREE then
        getTree()
    end
end



"
ZW7k78wE,EasyButton Control rev_01,pleasedontcode,Arduino,Thursday 9th of May 2024 01:48:05 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 06:47:24

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* button1 push open the gate, button 2 push close */
	/* the gate, button 3 sensor close the gate, and */
	/* relay to automatic open when button 1 pressed */
	/* button 3 will check and close the gate, when relay */
	/* is trigger button 3 will check and close the gate. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h>
#include <EasyButton.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t button1_PIN = 1;  // Button 1 pin
const uint8_t button2_PIN = 2;  // Button 2 pin
const uint8_t button3_PIN = 3;  // Button 3 pin

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button1(button1_PIN);
EasyButton button2(button2_PIN);
EasyButton button3(button3_PIN);

void setup(void)
{
    // Initialize button pins
    pinMode(button1_PIN, INPUT_PULLUP);
    pinMode(button2_PIN, INPUT_PULLUP);
    pinMode(button3_PIN, INPUT_PULLUP);

    // Additional setup for gate control
    // Define gate control logic here
}

void loop(void)
{
    // Main code for gate control
    // Implement gate control logic based on button presses
    // Use button.read() to read the button state

    // Example logic:
    if (button1.read()) {
        // Open the gate
        // Implement gate opening logic
    }

    if (button2.read()) {
        // Close the gate
        // Implement gate closing logic
    }

    if (button3.read()) {
        // Sensor to close the gate
        // Implement gate closing logic based on sensor
    }

    // Additional logic for automatic gate opening with relay trigger
    // Check if button 1 is pressed and trigger relay
    // Implement automatic gate opening logic

    // Check and close the gate based on button 3 press
    // Implement gate closing logic based on button 3 press

    // Check and close the gate when relay is triggered
    // Implement gate closing logic when relay is triggered
}

/* END CODE */"
c8jpLVcw,Custom PDF Viewer Block in Articulate Rise JS lib,nrzmalik,JavaScript,Thursday 9th of May 2024 01:13:11 AM CDT,"<script src=""https://cdn.jsdelivr.net/gh/nrzmalik/risePDFviewer/nrzPDF.js"" defer></script>"
PyEMaAFB,Pastebin.ai - #1 pastebin alternative,xxsa,PHP,Thursday 9th of May 2024 01:01:47 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..............
...........................
"
u7zuz1sf,Receptor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:16:26 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC; MCP19110 Configuration Bit Settings
; Assembly source line config statements

 LIST	   P=16F84A
 INCLUDE  <P16F84A.INC>

   ERRORLEVEL -302
   
variables udata_shr 0x0C
cuenta	    res 1	    ; El contador a visualizar.
Count1	    res 1
contador    res 1
datoserie   res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1


; ZONA DE C√ìDIGOS ********************************************************************

    ORG	    0x00	    ; El programa comienza en la direcci√≥n 0.
    goto    Inicio
    org	    0x04
    goto    Timer0_interrupcion
Inicio
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las l√≠neas del Puerto B se configuran como salida.
    movlw   b'00000001'	    ; Las 4 l√≠neas del Puerto A se configuran como entrada.
    movwf   TRISA
    movlw   b'00000111'
    movwf   OPTION_REG	    ;prescaler a 256   
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB
Principal
    movlw   0x08
    movwf   cuenta
    movlw   0x04
    movwf   contador
    btfsc   PORTA,0
    goto    Principal
;hay un tiempo aleatorio que debo esperar para obtener el uno del dato star.
EsperoUno
    btfss   PORTA,0
    goto    EsperoUno

;tiempo para reconocer 1 de dato STAR  (5ms)
TiempoUno
    ;se testea en cada momento
    btfss   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    call    Retardo_500micros
    decfsz  cuenta,1
    goto    TiempoUno
    bsf	    PORTB,7	    ; PRUEBASSS
    movlw   0x08
    movwf   cuenta
;tiempo que es cero de dato STAR  (5ms)
    call    Retardo_1ms
TiempoCero
;se testea en cada momento
    call    Retardo_500micros
    btfsc   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    decfsz  cuenta,1
    goto    TiempoCero
    clrf    datoserie
; verifico dato enviado durante 20ms
    call    Retardo_1ms
    movlw   d'14'
    movwf   TMR0	    ; CARGO EL TIMER0
    movlw   b'10100000'    
    movwf   INTCON	    ; AUTORIZO INTERRUPCION DEL TIMER0

LOOPDATOS
    call    Retardo_1ms
    movf    PORTA,0 
    movwf   Count1
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    bsf     STATUS,0
    btfss   Count1,0 
    bcf     STATUS,0 
    rrf     datoserie,1  
    call    Retardo_2ms
    decfsz  contador,1
    goto    LOOPDATOS
;continua. El swapf es para obtener el verdadero dato     DATO ->  DATOSERIE
;se divide en 2 segmentos de 4 bits, el swapf cambia, luego    (DSERIE1)(DSERIE2)  ->  (DSERIE2)(DSERIE1)
    swapf   datoserie,1
    movf    datoserie,0 
    movwf   PORTB
;espero un tiempo menor a 40ms 
    call    Retardo_10ms
    goto    Principal
Fin
    clrf    PORTB
    goto    Principal
    
;Temporizacion por desbordamiento del Timer0
Timer0_interrupcion	    
    btfss   PORTA,0
    clrf    PORTB
    ;TEST/////////////////////////
    movlw   0x80
    xorwf   PORTB,F
    ;////////////////////////////////
    bcf     INTCON,T0IF
    retfie
;---------------------------------------------


;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. L√≥pez.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
;
Retardo_500micros			; La llamada ""call"" aporta 2 ciclos m√°quina.
	nop				; Aporta 1 ciclo m√°quina.
	movlw	d'164'			; Aporta 1 ciclo m√°quina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos m√°quina.
Retardo_200micros				; La llamada ""call"" aporta 2 ciclos m√°quina.
	nop				; Aporta 1 ciclo m√°quina.
	movlw	d'64'			; Aporta 1 ciclo m√°quina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos m√°quina.
Retardo_100micros				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'31'			; Aporta 1 ciclo m√°quina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos m√°quina.
Retardo_50micros				; La llamada ""call"" aporta 2 ciclos m√°quina.
	nop				; Aporta 1 ciclo m√°quina.
	movlw	d'14'			; Aporta 1 ciclo m√°quina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos m√°quina.
Retardo_20micros				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'5'			; Aporta 1 ciclo m√°quina. Este es el valor de ""K"".
;
; El pr√≥ximo bloque ""RetardoMicros"" tarda:
; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos m√°quina.
;
RetardoMicros
	movwf	R_ContA			; Aporta 1 ciclo m√°quina.
Rmicros_Bucle
	decfsz	R_ContA,F		; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	Rmicros_Bucle		; Aporta (K-1)x2 ciclos m√°quina.
	return				; El salto del retorno aporta 2 ciclos m√°quina.
;
;En total estas subrutinas tardan:
; - Retardo_500micros:	2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 ¬µs. (para K=164 y 4 MHz).
; - Retardo_200micros:	2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 ¬µs. (para K= 64 y 4 MHz).
; - Retardo_100micros:	2     + 1 + 2 + (2 + 3K) = 100 cm = 100 ¬µs. (para K= 31 y 4 MHz).
; - Retardo_50micros :	2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 ¬µs. (para K= 14 y 4 MHz).
; - Retardo_20micros :	2     + 1     + (2 + 3K) =  20 cm =  20 ¬µs. (para K=  5 y 4 MHz).
       
    
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'200'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'100'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'50'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'20'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'10'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'5'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'2'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'1'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
;
; El pr√≥ximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos m√°quina. Para K=249 y M=1 supone 1002 ciclos m√°quina
; que a 4 MHz son 1002 ¬µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo m√°quina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos m√°quina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos m√°quina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos m√°quina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos m√°quina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos m√°quina.
	return				; El salto del retorno aporta 2 ciclos m√°quina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'200'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'100'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'50'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'20'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'10'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'5'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
;
; El pr√≥ximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos m√°quina. Para K=249, M=100 y N=1 supone 100011
; ciclos m√°quina que a 4 MHz son 100011 ¬µs = 100 ms = 0,1 s = 1 d√©cima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo m√°quina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos m√°quina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos m√°quina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos m√°quina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos m√°quina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos m√°quina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos m√°quina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos m√°quina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos m√°quina.
	return				; El salto del retorno aporta 2 ciclos m√°quina.	
	
    END"
P5nfL0Cb,Transmisor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:13:51 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
 LIST P=16F84A
 INCLUDE  <P16F84A.INC>

  ERRORLEVEL -302
  
variables udata_shr 0x0C
Contador    res 1	    ; El contador a visualizar.
Count1	    res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1
	

; ZONA DE C√ìDIGOS ********************************************************************
    org	    0x00
    goto    INICIO
 
INICIO
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las l√≠neas del Puerto B se configuran como salida.
    movlw   b'00001111'	    ; Las 4 l√≠neas del Puerto A se configuran como entrada.
    movwf   TRISA
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB	    ; comenzamos con bit 0 en la salida
Principal
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    movwf   Contador        ; guardo dato enviado
    btfsc   STATUS,2
    goto    Fin
    call    Retardo_20ms    ; Espera que se estabilicen los niveles de tensi√≥n.
;compruebo que sea el mismo dato
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    subwf   Contador,0
    btfss   STATUS,2	    ; Comprueba si es un rebote.
    goto    Fin		    ; Era un rebote y sale fuera.
    clrf    Count1
;Pulsador correcto, procedo a enviar datos.   
    bsf	    PORTB,3
;envia los datos
    bsf	    PORTB,1	    ; activa el tx
;primero envia el dato STAR   (1 7ms y 0 5ms)
    call    DATOUNO
    bcf	    PORTB,0
    call    Retardo_5ms	
;envio dato
BITS
    btfss   Contador,0
    goto    PREDATO
    call    DATOUNO
CONTINUAR
    rrf	    Contador,1
    incf    Count1
    movf    Count1,W	    ; Lee el valor de las variables de entrada.
    sublw   d'4'
    btfss   STATUS,2
    goto    BITS
;espacio entre dato y dato enviado
    bcf	    PORTB,0
    bcf	    PORTB,1
    bcf	    PORTB,3
    call    Retardo_20ms
Fin	
    goto    Principal

PREDATO
   call	    DATOCERO
   goto	    CONTINUAR
DATOUNO
   bsf	    PORTB,0
   call	    Retardo_5ms
   return
DATOCERO
   bcf	    PORTB,0
   call	    Retardo_5ms
   return

;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. L√≥pez.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'200'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'100'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'50'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'20'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'10'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'5'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'2'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos m√°quina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'1'			; Aporta 1 ciclo m√°quina. Este es el valor de ""M"".
;
; El pr√≥ximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos m√°quina. Para K=249 y M=1 supone 1002 ciclos m√°quina
; que a 4 MHz son 1002 ¬µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo m√°quina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos m√°quina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos m√°quina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos m√°quina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos m√°quina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos m√°quina.
	return				; El salto del retorno aporta 2 ciclos m√°quina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'200'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'100'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'50'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'20'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'10'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos m√°quina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos m√°quina.
	movlw	d'5'			; Aporta 1 ciclo m√°quina. Este es el valor de ""N"".
;
; El pr√≥ximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos m√°quina. Para K=249, M=100 y N=1 supone 100011
; ciclos m√°quina que a 4 MHz son 100011 ¬µs = 100 ms = 0,1 s = 1 d√©cima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo m√°quina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos m√°quina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos m√°quina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos m√°quina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos m√°quina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos m√°quina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos m√°quina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos m√°quina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos m√°quina.
	return				; El salto del retorno aporta 2 ciclos m√°quina.

	
	
    END"
UcQJvsmg,[JS] YOUTUBE MP3 DOWNLOADER,WILDAN_IZZUDIN,JavaScript,Thursday 9th of May 2024 12:05:09 AM CDT,"const puppeteer = require('puppeteer');
const iPhone = puppeteer.devices['iPhone 12']

module.exports = async url => {
   const browser = await puppeteer.launch({
      headless: 'new',
      args: [
         ""--fast-start"",
         ""--disable-extensions"",
         ""--no-sandbox"",
         ""--disable-setuid-sandbox"",
         ""--no-gpu"",
         ""--disable-background-timer-throttling"",
         ""--disable-renderer-backgrounding"",
         ""--override-plugin-power-saver-for-testing=never"",
         ""--disable-extensions-http-throttling"",
         ""--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.3""
      ]
   })
   try {
      const page = await browser.newPage()
      await page.emulate(iPhone)
      await page.goto('https://ytmp3s.nu', {
         waitUntil: 'networkidle2',
         timeout: 0
      })
      await page.type('input#url', url)
      await page.click('input[value=""Convert""]')
      await page.waitForSelector('#progress', {
         hidden: true
      })
      const fileName = await page.evaluate(() => {
         const el = document.querySelector('form > div')
         return el ? el.innerText: ''
      })
      const fileUrl = await page.evaluate(() => {
         const el = document.querySelector('form > div > a[rel=""nofollow""]')
         return el ? el.href: ''
      })
      await browser.close()
      if (!fileUrl) return ({
         status: false,
         msg: `Can't contvert file!`
      })
      return ({
         status: true,
         data: {
            filename: fileName + '.mp3',
            url: fileUrl
         }
      })
   } catch (e) {
      await browser.close()
      return ({
         status: false,
         msg: e.message
      })
   }
}"
CNPQCqF9,fourth_task,artmexbet,C,Wednesday 8th of May 2024 11:39:40 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <pthread.h>
#include <string.h>
#include <semaphore.h>

#define ROWS 4
#define COLS 5

struct ThreadResult {
    int count;
    int indexes[6];
};

struct TaskQueue {
    struct TaskQueue *next;
    struct ThreadResult result;
    int threadNumber;
};

struct ThreadInfo {
    int matrix[ROWS][COLS];
    int deltaX;
    int deltaY;
    int threadNumber;
};

void fill_matrix(int array[ROWS][COLS]) {
    srand(time(NULL));
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            array[i][j] = 1 + rand() % 3;
        }
    }
}

void print_matrix(int array[ROWS][COLS]) {
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            printf(""%d "", array[i][j]);
        }
        printf(""\n"");
    }
}

pthread_mutex_t mutex;
struct TaskQueue *head = NULL;
struct TaskQueue *new = NULL;
struct TaskQueue *tail = NULL;

sem_t sem;

void *get_values(void *info_) {
    sem_wait(&sem);

    struct ThreadInfo *info = (struct ThreadInfo *) info_;
    struct ThreadResult *result = (struct ThreadResult *) malloc(sizeof(struct ThreadResult));
    result->count = 0;
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            int k = 0;
            int lengthOfHorizontal = 0; // –°—é–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª–∏–Ω—É –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
            while (0 < j + k && j + k < COLS && info->matrix[i][j + k] == info->matrix[i][j]) {
                lengthOfHorizontal++;
                int l = 0;
                int lengthOfVertical = 0; // –°—é–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª–∏–Ω—É –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç–æ–ª–±—Ü–µ
                while (0 < i + l && i + l < ROWS && info->matrix[i + l][j + k] == info->matrix[i][j + k]) {
                    lengthOfVertical++;
                    l += info->deltaX;
                }
                if (lengthOfHorizontal + lengthOfVertical > result->count) {
                    result->indexes[0] = i;
                    result->indexes[1] = j;
                    result->indexes[2] = i;
                    result->indexes[3] = j + k;
                    if (l != 0) {
                        result->indexes[4] = i + l - 1 * info->deltaX;
                        // –ï—Å–ª–∏ –≤ l –¥–æ–±–∞–≤–ª—è–ª–∏—Å—å —ç–ª–µ–º–µ–Ω—Ç—ã, –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω–µ–π –±—É–¥–µ—Ç –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É –±–æ–ª—å—à–µ (–∏–ª–∏ –º–µ–Ω—å—à–µ,
                        // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç deltaX) –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –º—ã —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∞ —É–∂–µ –∑–∞—Ç–µ–º —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º l
                        // –≤ —Ü–∏–∫–ª–µ while –≤—ã—à–µ
                    } else {
                        // –ï—Å–ª–∏ –∂–µ l = 0, –≤—ã—á–∏—Ç–∞—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –Ω—É–∂–Ω–æ –ª–∏—à—å –∑–∞–ø–∏—Å–∞—Ç—å —ç—Ç—É –∂–µ —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω—ã–π –∏–Ω–¥–µ–∫—Å
                        result->indexes[4] = i;
                    }
                    result->indexes[5] = j + k;
                    result->count = lengthOfHorizontal + lengthOfVertical;
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º—å—é—Ç–µ–∫—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –æ–±—â—É—é –æ—á–µ—Ä–µ–¥—å
                    // –õ–æ—á–∏–º –ø–æ—Ç–æ–∫
                    pthread_mutex_lock(&mutex);
                    tail->result = *result;
                    tail->threadNumber = info->threadNumber;
                    // –í—ã–¥–µ–ª—è–µ–º –º–µ—Å—Ç–æ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
                    new = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
                    tail->next = new;
                    // –ó–∞–º–µ–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π
                    tail = new;
                    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫
                    pthread_mutex_unlock(&mutex);
                }
                k += info->deltaY;
            }
        }
    }
    sem_post(&sem);
    return (void *) result;
}

void find_g(int matrix[ROWS][COLS], int k) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –º—å—é—Ç–µ–∫—Å–∞
    head = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
    tail = head;
    pthread_mutex_init(&mutex, NULL);

    sem_init(&sem, 1, k);

    int maxCount = 0;
    int coords[] = {0, 0, 0, 0, 0, 0};
    struct ThreadInfo rightUpper, leftUpper, leftLower, rightLower;
    struct ThreadResult *rightUpperResult, *leftUpperResult, *leftLowerResult, *rightLowerResult;
    memcpy(rightUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftLower.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(rightLower.matrix, matrix, ROWS * COLS * sizeof(int));
    rightUpper.deltaX = 1;
    rightUpper.deltaY = -1;
    rightUpper.threadNumber = 1;

    leftUpper.deltaX = -1;
    leftUpper.deltaY = -1;
    leftUpper.threadNumber = 2;

    leftLower.deltaX = -1;
    leftLower.deltaY = 1;
    leftLower.threadNumber = 3;

    rightLower.deltaX = 1;
    rightLower.deltaY = 1;
    rightLower.threadNumber = 4;

    pthread_t thread1, thread2, thread3, thread4;
    // –ü–æ —Å—É—Ç–∏, –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ —Å—á–∏—Ç–∞–µ—Ç –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Å–≤–æ–µ–≥–æ —É–≥–ª–∞.
    // –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ (—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è) —Å–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–æ–µ–¥–∏–Ω–æ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    pthread_create(&thread1, NULL, &get_values, &rightUpper);
    pthread_create(&thread2, NULL, &get_values, &leftUpper);
    pthread_create(&thread3, NULL, &get_values, &leftLower);
    pthread_create(&thread4, NULL, &get_values, &rightLower);
    pthread_join(thread1, (void **) &rightUpperResult);
    pthread_join(thread2, (void **) &leftUpperResult);
    pthread_join(thread3, (void **) &leftLowerResult);
    pthread_join(thread4, (void **) &rightLowerResult);
    if (rightUpperResult->count > maxCount) {
        maxCount = rightUpperResult->count;
        memcpy(coords, rightUpperResult->indexes, sizeof(rightUpperResult->indexes));
    }
    if (leftUpperResult->count > maxCount) {
        maxCount = leftUpperResult->count;
        memcpy(coords, leftUpperResult->indexes, sizeof(leftUpperResult->indexes));
    }
    if (leftLowerResult->count > maxCount) {
        maxCount = leftLowerResult->count;
        memcpy(coords, leftLowerResult->indexes, sizeof(leftLowerResult->indexes));
    }
    if (rightLowerResult->count > maxCount) {
        maxCount = rightLowerResult->count;
        memcpy(coords, rightLowerResult->indexes, sizeof(rightLowerResult->indexes));
    }
    for (int i = 0; i < 6; i++) {
        printf(""%d "", coords[i]);
    }
    printf(""\nTask queue:\n"");
    struct TaskQueue *current = head;
    while (current->next != NULL) {
        printf(""Thread %d: "", current->threadNumber);
        for (int i = 0; i < 6; i++) {
            printf(""%d "", current->result.indexes[i]);
        }
        printf(""\n"");
        current = current->next;
    }
}

int main() {
//    printf(""Hello, World!\n"");
    printf(""Insert a k number: "");
    int k;
    scanf_s(""%d"", &k);
    int arr[ROWS][COLS] = {{0, 2, 0, 2, 0},
                           {0, 1, 1, 1, 0},
                           {2, 0, 2, 1, 1},
                           {0, 2, 0, 1, 1}};
//    fill_matrix(arr);
    print_matrix(arr);
    find_g(arr, k);
    return 0;
}
"
UQA7La73,sharelatex_overleaf_docker_compose,shinemic,YAML,Wednesday 8th of May 2024 10:58:26 PM CDT,"version: '2.2'
services:
    sharelatex:
        restart: always
        # Server Pro users:
        # image: quay.io/sharelatex/sharelatex-pro
        image: sharelatex/sharelatex
        container_name: sharelatex
        depends_on:
            mongo:
                condition: service_healthy
            redis:
                condition: service_started
        ports:
            - 9088:80
        links:
            - mongo
            - redis
        stop_grace_period: 60s
        volumes:
            - /data/volumes/sharelatex/sharelatex:/var/lib/sharelatex
            ########################################################################
            ####  Server Pro: Uncomment the following line to mount the docker  ####
            ####             socket, required for Sibling Containers to work    ####
            ########################################################################
            # - /var/run/docker.sock:/var/run/docker.sock
        environment:

            SHARELATEX_APP_NAME: Datalab Overleaf CE

            SHARELATEX_MONGO_URL: mongodb://mongo/sharelatex

            # Same property, unfortunately with different names in
            # different locations
            SHARELATEX_REDIS_HOST: redis
            REDIS_HOST: redis

            ENABLED_LINKED_FILE_TYPES: 'project_file,project_output_file'

            # Enables Thumbnail generation using ImageMagick
            ENABLE_CONVERSIONS: 'true'

            # Disables email confirmation requirement
            EMAIL_CONFIRMATION_DISABLED: 'true'

            # temporary fix for LuaLaTex compiles
            # see https://github.com/overleaf/overleaf/issues/695
            TEXMFVAR: /var/lib/sharelatex/tmp/texmf-var

            ## Set for SSL via nginx-proxy
            #VIRTUAL_HOST: 103.112.212.22

            # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
            # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
            # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
            # SHARELATEX_ADMIN_EMAIL: support@it.com

            # SHARELATEX_LEFT_FOOTER: '[{""text"": ""Powered by <a href=\""https://www.sharelatex.com\"">ShareLaTeX</a> 2016""},{""text"": ""Another page I want to link to can be found <a href=\""here\"">here</a>""} ]'
            # SHARELATEX_RIGHT_FOOTER: '[{""text"": ""Hello I am on the Right""} ]'

            # SHARELATEX_EMAIL_FROM_ADDRESS: ""team@sharelatex.com""

            # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID:
            # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY:

            # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
            # SHARELATEX_EMAIL_SMTP_PORT: 587
            # SHARELATEX_EMAIL_SMTP_SECURE: false
            # SHARELATEX_EMAIL_SMTP_USER:
            # SHARELATEX_EMAIL_SMTP_PASS:
            # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
            # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
            # SHARELATEX_EMAIL_SMTP_NAME: '127.0.0.1'
            # SHARELATEX_EMAIL_SMTP_LOGGER: true
            # SHARELATEX_CUSTOM_EMAIL_FOOTER: ""This system is run by department x""

            # ENABLE_CRON_RESOURCE_DELETION: true

            ################
            ## Server Pro ##
            ################

            # SANDBOXED_COMPILES: 'true'

            # SANDBOXED_COMPILES_SIBLING_CONTAINERS: 'true'
            # SANDBOXED_COMPILES_HOST_DIR: '/var/sharelatex_data/data/compiles'

            # DOCKER_RUNNER: 'false'

            ## Works with test LDAP server shown at bottom of docker compose
            # SHARELATEX_LDAP_URL: 'ldap://ldap:389'
            # SHARELATEX_LDAP_SEARCH_BASE: 'ou=people,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_SEARCH_FILTER: '(uid={{username}})'
            # SHARELATEX_LDAP_BIND_DN: 'cn=admin,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_BIND_CREDENTIALS: 'GoodNewsEveryone'
            # SHARELATEX_LDAP_EMAIL_ATT: 'mail'
            # SHARELATEX_LDAP_NAME_ATT: 'cn'
            # SHARELATEX_LDAP_LAST_NAME_ATT: 'sn'
            # SHARELATEX_LDAP_UPDATE_USER_DETAILS_ON_LOGIN: 'true'

            # SHARELATEX_TEMPLATES_USER_ID: ""578773160210479700917ee5""
            # SHARELATEX_NEW_PROJECT_TEMPLATE_LINKS: '[ {""name"":""All Templates"",""url"":""/templates/all""}]'


            # SHARELATEX_PROXY_LEARN: ""true""

    mongo:
        restart: always
        image: mongo:4.4
        container_name: mongo
        command: ""--replSet overleaf""
        expose:
          - 27017
        volumes:
          - /data/volumes/sharelatex/mongo_data:/data/db
        healthcheck:
          test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
          interval: 10s
          timeout: 10s
          retries: 5

    mongoinit:
        image: mongo:4.4
        # this container will exit after executing the command
        restart: ""no""
        depends_on:
          mongo:
            condition: service_healthy
        entrypoint:
          [
            ""mongo"",
            ""--host"",
            ""mongo:27017"",
            ""--eval"",
            'rs.initiate({ _id: ""overleaf"", members: [ { _id: 0, host: ""mongo:27017"" } ] })',
          ]

    redis:
        restart: always
        image: redis:6.2
        container_name: redis
        expose:
            - 6379
        volumes:
            - /data/volumes/sharelatex/redis_data:/data

    # ldap:
    #    restart: always
    #    image: rroemhild/test-openldap
    #    container_name: ldap
    #    expose:
    #        - 389

    # See https://github.com/jwilder/nginx-proxy for documentation on how to configure the nginx-proxy container,
    # and https://github.com/overleaf/overleaf/wiki/HTTPS-reverse-proxy-using-Nginx for an example of some recommended
    # settings. We recommend using a properly managed nginx instance outside of the Overleaf Server Pro setup,
    # but the example here can be used if you'd prefer to run everything with docker-compose

    # nginx-proxy:
    #     image: jwilder/nginx-proxy
    #     container_name: nginx-proxy
    #     ports:
    #       #- ""80:80""
    #       - ""443:443""
    #     volumes:
    #       - /var/run/docker.sock:/tmp/docker.sock:ro
    #       - /home/sharelatex/tmp:/etc/nginx/certs
"
ffy9Z3wV,repeat the function,jevixlugya,Python,Wednesday 8th of May 2024 10:51:14 PM CDT,"class Content(Screen):
    def on_enter(self):
        self.set_animation()

    def set_animation(self,*args):
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)
        #self.anim.repeat = True
        anim.start(self.ids.bg)
        anim.bind(on_complete=self.comp)

    def comp(self,*args):
        self.ids.bg.source='images/1.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.bind(on_complete=self.compl)

    def compl(self,*args):
        self.ids.bg.source='images/2b.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.repeat = True"
wjrc8gsP,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Wednesday 8th of May 2024 10:47:59 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
                    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'name'
"
sw8wrjg5,verifica fisiere PDF corupte (care nu se pot deschide),nicuf,Python,Wednesday 8th of May 2024 10:13:55 PM CDT,"import os
from PyPDF2 import PdfReader
from PyPDF2.errors import PdfReadError

# Directorul unde se aflƒÉ fi»ôierele PDF
directory = ""g:/ARHIVA/BCU PDF""

# Lista fi»ôierelor PDF corupte sau care nu se deschid
corrupted_files = []
# VariabilƒÉ pentru a »õine eviden»õa ultimului fi»ôier parcurs
last_processed_file = None

try:
    # Parcurge fiecare director »ôi subfolder √Æn mod recursiv
    for root, _, files in os.walk(directory):
        for filename in files:
            if filename.endswith("".pdf""):
                # Calea completƒÉ a fi»ôierului PDF
                file_path = os.path.join(root, filename)
                # SalveazƒÉ ultimul fi»ôier parcurs
                last_processed_file = file_path

                # Afi»ôeazƒÉ √Æn timp real fi»ôierul care este parcurs
                print(f""Proces√¢nd fi»ôierul: {file_path}"")

                try:
                    # √éncearcƒÉ sƒÉ deschizi fi»ôierul PDF
                    reader = PdfReader(file_path)
                    # VerificƒÉ dacƒÉ documentul are pagini
                    if len(reader.pages) == 0:
                        corrupted_files.append(file_path)
                except (PdfReadError, ValueError, FileNotFoundError):
                    # DacƒÉ apare o eroare la deschiderea fi»ôierului PDF, adaugƒÉ-l √Æn lista fi»ôierelor corupte
                    corrupted_files.append(file_path)

except Exception as e:
    # √én cazul unei excep»õii, opre»ôte scriptul »ôi afi»ôeazƒÉ mesajul »ôi informa»õiile dorite
    print(f""\nScriptul a fost oprit din cauza unei excep»õii: {e}"")
    print(f""Ultimul fi»ôier parcurs: {last_processed_file}"")

    if corrupted_files:
        print(""Fi»ôierele PDF corupte sau care nu se pot deschide gƒÉsite p√¢nƒÉ acum:"")
        for file_path in corrupted_files:
            print(file_path)
    else:
        print(""Nu au fost gƒÉsite fi»ôiere corupte sau care nu se pot deschide p√¢nƒÉ acum."")

# DacƒÉ nu a fost opritƒÉ de o excep»õie, afi»ôeazƒÉ fi»ôierele corupte la final
if corrupted_files:
    print(""\nUrmƒÉtoarele fi»ôiere PDF sunt corupte sau nu se pot deschide:"")
    for file_path in corrupted_files:
        print(file_path)
else:
    print(""\nToate fi»ôierele PDF din directorul specificat s-au deschis fƒÉrƒÉ probleme."")
"
95F8tyht,ESP32 Influxdb,mudhita_triari,C++,Wednesday 8th of May 2024 08:01:39 PM CDT,"#include <WiFi.h>
#include <Wire.h>
#include <ModbusMaster.h>
#include <SoftwareSerial.h>
#include <InfluxDbClient.h>

#define MAX485_RE_NEG  5
#define MAX485_DE      4
#define SSERIAL_RX_PIN 16
#define SSERIAL_TX_PIN 17

#define NUM_SENSORS 2
#define TEMP_SENSOR 0
#define HUM_SENSOR 1

// WiFi Configuration
const char* ssid = ""vivo V29"";
const char* password = ""Nabila041185"";

#define INFLUXDB_URL ""http://127.0.0.1:8087""
// InfluxDB 2 server or cloud API authentication token (Use: InfluxDB UI -> Load Data -> Tokens -> <select token>)
#define INFLUXDB_TOKEN ""hh4g2GQn1cgSstvgUtTuYFT95Gn49Hf7qBou3OGWsJDW5lhwY-seBycBMqljiJ_aepMpNbMoiZqBiNyibynb3Q==""
// InfluxDB 2 organization id (Use: InfluxDB UI -> Settings -> Profile -> <name under tile> )
#define INFLUXDB_ORG ""Indobot""
// InfluxDB 2 bucket name (Use: InfluxDB UI -> Load Data -> Buckets)
#define INFLUXDB_BUCKET ""pengamatan suhu & kelembaban""

// InfluxDB client instance
InfluxDBClient client(INFLUXDB_URL, INFLUXDB_ORG, INFLUXDB_BUCKET, INFLUXDB_TOKEN);


// Data point
Point sensor(""sensor_data"");

SoftwareSerial RS485Serial(SSERIAL_RX_PIN, SSERIAL_TX_PIN);
ModbusMaster node;

float sensorData[NUM_SENSORS];
uint8_t sensorAddresses[NUM_SENSORS] = {0x0001, 0x0002};

void preTransmission() {
  digitalWrite(MAX485_RE_NEG, 1);
  digitalWrite(MAX485_DE, 1);
}

void postTransmission() {
  digitalWrite(MAX485_RE_NEG, 0);
  digitalWrite(MAX485_DE, 0);
}

void setup() {
  pinMode(MAX485_RE_NEG, OUTPUT);
  pinMode(MAX485_DE, OUTPUT);
  digitalWrite(MAX485_RE_NEG, 0);
  digitalWrite(MAX485_DE, 0);

  Serial.begin(115200);

  // Start WiFi connection
  Serial.println(""Connecting to WiFi..."");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }
  Serial.println(""Connected to WiFi"");

  RS485Serial.begin(9600);
  node.begin(1, RS485Serial);
  node.preTransmission(preTransmission);
  node.postTransmission(postTransmission);
}

void loop() {
  for (int i = 0; i < NUM_SENSORS; i++) {
    uint8_t result = node.readInputRegisters(sensorAddresses[i], 1);

    if (result == node.ku8MBSuccess) {
      sensorData[i] = float(node.getResponseBuffer(0) / 10.00F);
    } else {
      delay(1000);
      return;
    }
  }

  Serial.print(""Temperature: "");
  Serial.print(sensorData[TEMP_SENSOR]);
  Serial.println("" ¬∞C"");
  Serial.print(""Humidity: "");
  Serial.print(sensorData[HUM_SENSOR]);
  Serial.println("" %"");

  // Send data to InfluxDB
  sensor.clearFields();
  sensor.addField(""temperature"", sensorData[TEMP_SENSOR]);
  sensor.addField(""humidity"", sensorData[HUM_SENSOR]);

  if (client.validateConnection()) {
    Serial.println(""Sending data to InfluxDB..."");
    if (!client.writePoint(sensor)) {
      Serial.print(""InfluxDB write failed: "");
      Serial.println(client.getLastErrorMessage());
    } else {
      Serial.println(""Data sent to InfluxDB successfully"");
    }
  } else {
    Serial.print(""InfluxDB connection failed: "");
    Serial.println(client.getLastErrorMessage());
  }

  delay(5000); // Example of data sending interval every 5 seconds
}
"
8D5Kjjh4,Untitled,Hidend,C++,Wednesday 8th of May 2024 07:48:00 PM CDT,"//hidend
#include <Windows.h>
#include <d3d9.h>
#include <cstdio>
#include <iostream>
#include <Windows.h>
#include ""MinHook.h""
#if defined _M_X64
#pragma comment(lib, ""libMinHook.x64.lib"")
#elif defined _M_IX86
#pragma comment(lib, ""minhook.x32d.lib"")
#endif
uint32_t samp_base = 0;

const DWORD OFFSETS[6][2]{
    /*ChatInfo, AddMsg*/
    {0x21A0E4, 0x645A0}, // 037-r1 - 0
    {0x021A0EC, 0x64670}, // 037-r2 - 1
    {0x026E8C8, 0x679F0}, // 037-r3_1 - 2
    {0x026E9F8, 0x68130}, // 037-r4 - 3 
    {0x026E9F8, 0x68170}, // 037-r4_2 -4
    {0x026EB80, 0x68170}, // 037-r5_1 - 5
};

int get_samp_version_id()
{
    int version_current = -1;

    if (samp_base)
    {
        std::cout << ""Dentro!"" << std::endl;
        int version_id = *reinterpret_cast<int*>((char*)samp_base + 0x128);
        std::cout << ""Version ID: "" << version_id << std::endl;

        switch (version_id) {
        case 0x5542F47A: // R1
            version_current = 0;
            break;
        case 0x59C30C94: // R2
            version_current = 1;
            break;
        default:
            version_id = *reinterpret_cast<int*>((char*)samp_base + 0x120);
            std::cout << ""No es ni R1 ni R2, veamos las demas: "" << version_id << std::endl;

            switch (version_id) {
            case 0x5C0B4243: // R3
                version_current = 2;
                break;
            case 0x5DD606CD: // R4 - v1
                version_current = 3;
                break;
            case 0x6094ACAB: // R4 - v2
                version_current = 4;
                break;
            case 0x6372C39E: // R5, ni nos interesa pero meh
                version_current = 5;
                break;
            }
        }
    }
    return version_current;
}

void addMessageToChat(unsigned dwColor, const char* szMsg, ...)
{
    int version = get_samp_version_id();
    std::cout << ""Version2: "" << version << std::endl;
    if (version == -1)
        return;

    DWORD chatInfoOffset = OFFSETS[version][0];
    DWORD addMsgOffset = OFFSETS[version][1];

    std::cout << ""chatInfoOffset: "" << chatInfoOffset << std::endl;
    std::cout << ""addMsgOffset: "" << addMsgOffset << std::endl;
    unsigned char red = static_cast<unsigned char>(rand() % 256);
    unsigned char green = static_cast<unsigned char>(rand() % 256);
    unsigned char blue = static_cast<unsigned char>(rand() % 256);

    // Combine the color components into a single unsigned integer
    unsigned newColor = (red << 16) | (green << 8) | blue;
    auto addMessage = reinterpret_cast<void(__thiscall*)(void* pChat, unsigned color, const char* message)>(samp_base + addMsgOffset);
    addMessage(*reinterpret_cast<void**>(samp_base + chatInfoOffset), newColor, szMsg);
}


typedef HMODULE(WINAPI* TYPE_LoadLibraryA)(LPCSTR);
TYPE_LoadLibraryA g_loadLibraryA_original = NULL;
HMODULE WINAPI LoadLibraryA_replacement(_In_ LPCTSTR lpFileName)
{
    if (strcmp(""OPENGL32"", lpFileName) != 0)
    {
        addMessageToChat(-1, ""LoadLibraryA_replacement!"");
        return NULL; //devolvemos null y paramos la inyeccion
    }
    return g_loadLibraryA_original(lpFileName);
}

typedef HMODULE(WINAPI* TYPE_LoadLibraryExA)(LPCSTR, HANDLE, DWORD);
TYPE_LoadLibraryExA g_loadLibraryExA_original = NULL;
HMODULE WINAPI LoadLibraryExA_replacement(_In_ LPCSTR lpLibFileName, _In_ HANDLE hFile, _In_ DWORD  dwFlags)
{
    addMessageToChat(-1, ""LoadLibraryExA_replacement!"");
    return g_loadLibraryExA_original(lpLibFileName, hFile, dwFlags);

}

typedef HMODULE(WINAPI* TYPE_LoadLibraryW)(LPCWSTR);
TYPE_LoadLibraryW g_loadLibraryW_original = NULL;
HMODULE WINAPI LoadLibraryW_replacement(LPCWSTR lpLibFileName)
{
    addMessageToChat(-1, ""LoadLibraryW_replacement!"");
    return NULL; //devolvemos null y paramos la inyeccion
    return g_loadLibraryW_original(lpLibFileName);
}

typedef HMODULE(WINAPI* TYPE_LoadLibraryExW)(LPCWSTR, HANDLE, DWORD);
TYPE_LoadLibraryExW g_LoadLibraryExW_original = NULL;
HMODULE WINAPI LoadLibraryExW_replacement(_In_ LPCWSTR  lpLibFileName, _In_ HANDLE hFile, _In_ DWORD  dwFlags)
{
    addMessageToChat(-1, ""LoadLibraryExW_replacement!"");

    return g_LoadLibraryExW_original(lpLibFileName, hFile, dwFlags);
}

int init()
{
    std::cout << ""init"" << std::endl;
    samp_base = (DWORD)LoadLibraryA(""samp.dll"");
    if (MH_Initialize() != MH_OK)
    {
        OutputDebugString(""Initialize MinHook False!"");
        return false;
    }
    if (MH_CreateHook(
        &LoadLibraryA,
        &LoadLibraryA_replacement,
        (LPVOID*)(&g_loadLibraryA_original)
    ) != MH_OK)
    {
        return false;
    }
    if (MH_EnableHook(&LoadLibraryA) != MH_OK)
    {
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryExA,
        &LoadLibraryExA_replacement,
        (LPVOID*)(&g_loadLibraryExA_original)
    ) != MH_OK)
    {
        return false;
    }
    if (MH_EnableHook(&LoadLibraryExA) != MH_OK)
    {
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryW,
        &LoadLibraryW_replacement,
        (LPVOID*)(&g_loadLibraryW_original)
    ) != MH_OK)
    {
        OutputDebugString(""MH_CreateHook loadLibraryW False!"");
        return false;
    }
    if (MH_EnableHook(&LoadLibraryW) != MH_OK)
    {
        OutputDebugString(""MH_EnableHook loadLibraryW False!"");
        return false;
    }

    if (MH_CreateHook(
        &LoadLibraryExW,
        &LoadLibraryExW_replacement,
        (LPVOID*)(&g_LoadLibraryExW_original)
    ) != MH_OK)
    {
        OutputDebugString(""MH_CreateHook LoadLibraryExW False!"");
        return false;
    }
    if (MH_EnableHook(&LoadLibraryExW) != MH_OK)
    {
        OutputDebugString(""MH_EnableHook LoadLibraryExW False!"");
        return false;
    }

    while (true)
    {
        addMessageToChat(-1, ""Hidend // Shaarawy // <3"");
        Sleep(5000);
    }
    FreeLibraryAndExitThread(GetModuleHandle(NULL), 0);
    return 0;
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReasonForCall, LPVOID lpReserved)
{
    switch (dwReasonForCall)
    {
    case DLL_PROCESS_ATTACH:
        //AllocConsole();
        //freopen(""CONOUT$"", ""w"", stdout);
        //std::cout << ""injected"" << std::endl;
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)init, NULL, NULL, NULL);
        break;
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}"
YXETnT9v,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:18:34 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 3,
    ""152.32.183.213"": 72,
    ""93.174.95.106"": 9,
    ""185.161.248.121"": 6,
    ""205.210.31.206"": 9,
    ""179.60.150.59"": 3,
    ""103.27.237.123"": 36,
    ""212.70.149.142"": 21,
    ""159.223.34.114"": 3,
    ""68.183.181.29"": 3,
    ""64.124.50.139"": 6,
    ""194.165.16.10"": 6,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 6,
    ""123.31.20.85"": 54,
    ""45.227.254.49"": 6,
    ""87.251.75.120"": 6,
    ""23.158.24.189"": 3,
    ""194.165.16.11"": 6,
    ""118.194.236.118"": 3,
    ""116.140.196.215"": 3,
    ""154.91.82.169"": 169977,
    ""205.210.31.58"": 9,
    ""167.94.145.109"": 3,
    ""103.245.236.103"": 6,
    ""68.183.230.185"": 3,
    ""62.204.41.155"": 12,
    ""58.218.204.183"": 9,
    ""205.210.31.53"": 9,
    ""185.196.220.41"": 9,
    ""194.48.251.72"": 3,
    ""94.232.41.30"": 6,
    ""193.142.146.227"": 9,
    ""156.146.59.101"": 3,
    ""141.98.9.34"": 3,
    ""104.234.181.59"": 6,
    ""112.4.139.162"": 3,
    ""185.198.69.140"": 3,
    ""167.94.145.97"": 3,
    ""62.204.41.93"": 12,
    ""194.165.16.73"": 6,
    ""103.232.53.123"": 12,
    ""194.165.16.76"": 6,
    ""2.57.149.92"": 3,
    ""187.190.60.112"": 3,
    ""198.235.24.125"": 9,
    ""194.165.16.78"": 6
  },
  ""asn"": {
    ""AS48721"": 33,
    ""AS135377"": 75,
    ""AS202425"": 9,
    ""AS49202"": 6,
    ""AS396982"": 36,
    ""AS211179"": 3,
    ""AS131386"": 36,
    ""AS204428"": 21,
    ""AS14061"": 9,
    ""AS6461"": 6,
    ""AS208091"": 18,
    ""AS197414"": 6,
    ""AS45899"": 54,
    ""AS267784"": 6,
    ""AS197767"": 3,
    ""AS4837"": 3,
    ""AS399077"": 169977,
    ""AS398705"": 6,
    ""AS150867"": 6,
    ""AS59425"": 24,
    ""AS4134"": 9,
    ""AS208046"": 18,
    ""AS48314"": 3,
    ""AS60068"": 3,
    ""AS209588"": 3,
    ""AS136359"": 6,
    ""AS56046"": 3,
    ""AS57523"": 3,
    ""AS63737"": 12,
    ""AS208312"": 3,
    ""AS22884"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 42,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 75,
    ""IP Volume inc"": 9,
    ""Kisara LLC"": 6,
    ""Google LLC"": 36,
    ""Veraton Projects LTD"": 3,
    ""Long Van System Solution"": 36,
    ""SS-Net"": 21,
    ""DigitalOcean, LLC"": 9,
    ""Zayo Bandwidth"": 6,
    ""Xhost Internet Solutions LP"": 24,
    ""VietNam Post and Telecom Corporation"": 54,
    ""ZgoShop, Inc."": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""Tcloudnet Inc"": 169977,
    ""Censys, Inc."": 6,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 6,
    ""Horizon LLC"": 24,
    ""Chinanet"": 9,
    ""ColocationX Ltd."": 18,
    ""IP-Projects GmbH & Co. KG"": 3,
    ""DataCamp Limited"": 3,
    ""Hansin It Services Pvt. Ltd."": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""VIETSERVER"": 12,
    ""Red Byte LLC"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""org"": {
    ""Flyservers S.A"": 33,
    ""Ucloud Information Technology"": 75,
    ""IP Volume inc"": 9,
    ""Kisara LLC"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Maxwell Group LTD"": 3,
    ""Unknown"": 36,
    ""4Media Ltd"": 21,
    ""DigitalOcean, LLC"": 9,
    ""Microsoft Corporation"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Xhostis"": 6,
    ""Vietnam Posts and Telecommunications Group"": 54,
    ""UAB Host Baltic"": 6,
    ""ZgoShop, Inc"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Tcloudnet Inc"": 169977,
    ""Censys, Inc."": 6,
    ""LP Technology Electronic Commerce Company Limited"": 6,
    ""Horizon LLC"": 24,
    ""Chinanet JS"": 9,
    ""Makut Investments"": 9,
    ""Gwy It Pty Ltd"": 3,
    ""Dmitriy Panchenko"": 6,
    ""ColocationX Ltd"": 9,
    ""Cdn77 NYC"": 3,
    ""Alviva Holding Limited"": 3,
    ""IPXO"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""VietServer Services technology company limited"": 12,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""regionName"": {
    ""Kaunas"": 33,
    ""Virginia"": 87,
    ""North Holland"": 39,
    ""Moscow"": 33,
    ""California"": 36,
    ""Distrito Federal"": 3,
    ""Ho Chi Minh"": 42,
    ""Sliven"": 21,
    ""Central Singapore"": 3,
    ""South West"": 6,
    ""Hanoi"": 66,
    ""Vilnius"": 6,
    ""\u014csaka"": 3,
    ""Tokyo"": 3,
    ""Beijing"": 3,
    ""North West"": 169977,
    ""Hesse"": 9,
    ""Jiangsu"": 12,
    ""Perm Krai"": 6,
    ""New York"": 3,
    ""National Capital Territory of Delhi"": 6,
    ""Lesser Poland"": 3,
    ""Hidalgo"": 3
  },
  ""country"": {
    ""Lithuania"": 39,
    ""United States"": 126,
    ""The Netherlands"": 39,
    ""Russia"": 39,
    ""Venezuela"": 3,
    ""Vietnam"": 108,
    ""Bulgaria"": 21,
    ""Singapore"": 169986,
    ""Japan"": 6,
    ""China"": 15,
    ""Germany"": 9,
    ""India"": 6,
    ""Poland"": 3,
    ""Mexico"": 3
  },
  ""account"": {
    ""Administr"": 51,
    ""Administrator"": 27,
    ""Admin"": 24,
    ""Whatuptime.com"": 24,
    ""root"": 9,
    ""Test"": 60,
    ""CpoLcVExT"": 3,
    ""gteEYX"": 3,
    ""oCdYDK"": 3,
    ""hello"": 147,
    ""(empty)"": 15,
    ""2887428808"": 169977,
    ""ymQCCMhpH"": 3,
    ""pdUrfC"": 3,
    ""ICqEKW"": 3,
    ""Domain"": 30,
    ""WrEsCaXaV"": 3,
    ""FgRxTU"": 3,
    ""zRNKCk"": 3,
    ""GBTfsMW"": 3,
    ""EoTajcFAV"": 3,
    ""qApdlp"": 3,
    ""pEWfgK"": 3
  },
  ""keyboard"": {
    ""Unknown"": 170403
  },
  ""client_build"": {
    ""Unknown"": 170403
  },
  ""client_name"": {
    ""Unknown"": 170403
  },
  ""ip_type"": {
    ""Unknown"": 170211,
    ""hosting"": 120,
    ""mobile"": 21,
    ""mobile & hosting"": 36,
    ""hosting & proxy"": 3,
    ""proxy"": 12
  }
}"
NNva7WZU,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:16:29 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 2,
    ""152.32.183.213"": 48,
    ""93.174.95.106"": 6,
    ""185.161.248.121"": 4,
    ""205.210.31.206"": 6,
    ""179.60.150.59"": 2,
    ""103.27.237.123"": 24,
    ""212.70.149.142"": 14,
    ""159.223.34.114"": 2,
    ""68.183.181.29"": 2,
    ""64.124.50.139"": 4,
    ""194.165.16.10"": 4,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 4,
    ""123.31.20.85"": 36,
    ""45.227.254.49"": 4,
    ""87.251.75.120"": 4,
    ""23.158.24.189"": 2,
    ""194.165.16.11"": 4,
    ""118.194.236.118"": 2,
    ""116.140.196.215"": 2,
    ""154.91.82.169"": 113318,
    ""205.210.31.58"": 6,
    ""167.94.145.109"": 2,
    ""103.245.236.103"": 4,
    ""68.183.230.185"": 2,
    ""62.204.41.155"": 8,
    ""58.218.204.183"": 6,
    ""205.210.31.53"": 6,
    ""185.196.220.41"": 6,
    ""194.48.251.72"": 2,
    ""94.232.41.30"": 4,
    ""193.142.146.227"": 6,
    ""156.146.59.101"": 2,
    ""141.98.9.34"": 2,
    ""104.234.181.59"": 4,
    ""112.4.139.162"": 2,
    ""185.198.69.140"": 2,
    ""167.94.145.97"": 2,
    ""62.204.41.93"": 8,
    ""194.165.16.73"": 4,
    ""103.232.53.123"": 8,
    ""194.165.16.76"": 4,
    ""2.57.149.92"": 2,
    ""187.190.60.112"": 2,
    ""198.235.24.125"": 6,
    ""194.165.16.78"": 4
  },
  ""asn"": {
    ""AS48721"": 22,
    ""AS135377"": 50,
    ""AS202425"": 6,
    ""AS49202"": 4,
    ""AS396982"": 24,
    ""AS211179"": 2,
    ""AS131386"": 24,
    ""AS204428"": 14,
    ""AS14061"": 6,
    ""AS6461"": 4,
    ""AS208091"": 12,
    ""AS197414"": 4,
    ""AS45899"": 36,
    ""AS267784"": 4,
    ""AS197767"": 2,
    ""AS4837"": 2,
    ""AS399077"": 113318,
    ""AS398705"": 4,
    ""AS150867"": 4,
    ""AS59425"": 16,
    ""AS4134"": 6,
    ""AS208046"": 12,
    ""AS48314"": 2,
    ""AS60068"": 2,
    ""AS209588"": 2,
    ""AS136359"": 4,
    ""AS56046"": 2,
    ""AS57523"": 2,
    ""AS63737"": 8,
    ""AS208312"": 2,
    ""AS22884"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 28,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 50,
    ""IP Volume inc"": 6,
    ""Kisara LLC"": 4,
    ""Google LLC"": 24,
    ""Veraton Projects LTD"": 2,
    ""Long Van System Solution"": 24,
    ""SS-Net"": 14,
    ""DigitalOcean, LLC"": 6,
    ""Zayo Bandwidth"": 4,
    ""Xhost Internet Solutions LP"": 16,
    ""VietNam Post and Telecom Corporation"": 36,
    ""ZgoShop, Inc."": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Tcloudnet Inc"": 113318,
    ""Censys, Inc."": 4,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 4,
    ""Horizon LLC"": 16,
    ""Chinanet"": 6,
    ""ColocationX Ltd."": 12,
    ""IP-Projects GmbH & Co. KG"": 2,
    ""DataCamp Limited"": 2,
    ""Hansin It Services Pvt. Ltd."": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VIETSERVER"": 8,
    ""Red Byte LLC"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""Flyservers S.A"": 22,
    ""Ucloud Information Technology"": 50,
    ""IP Volume inc"": 6,
    ""Kisara LLC"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Maxwell Group LTD"": 2,
    ""Unknown"": 24,
    ""4Media Ltd"": 14,
    ""DigitalOcean, LLC"": 6,
    ""Microsoft Corporation"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Xhostis"": 4,
    ""Vietnam Posts and Telecommunications Group"": 36,
    ""UAB Host Baltic"": 4,
    ""ZgoShop, Inc"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Tcloudnet Inc"": 113318,
    ""Censys, Inc."": 4,
    ""LP Technology Electronic Commerce Company Limited"": 4,
    ""Horizon LLC"": 16,
    ""Chinanet JS"": 6,
    ""Makut Investments"": 6,
    ""Gwy It Pty Ltd"": 2,
    ""Dmitriy Panchenko"": 4,
    ""ColocationX Ltd"": 6,
    ""Cdn77 NYC"": 2,
    ""Alviva Holding Limited"": 2,
    ""IPXO"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""VietServer Services technology company limited"": 8,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""regionName"": {
    ""Kaunas"": 22,
    ""Virginia"": 58,
    ""North Holland"": 26,
    ""Moscow"": 22,
    ""California"": 24,
    ""Distrito Federal"": 2,
    ""Ho Chi Minh"": 28,
    ""Sliven"": 14,
    ""Central Singapore"": 2,
    ""South West"": 4,
    ""Hanoi"": 44,
    ""Vilnius"": 4,
    ""\u014csaka"": 2,
    ""Tokyo"": 2,
    ""Beijing"": 2,
    ""North West"": 113318,
    ""Hesse"": 6,
    ""Jiangsu"": 8,
    ""Perm Krai"": 4,
    ""New York"": 2,
    ""National Capital Territory of Delhi"": 4,
    ""Lesser Poland"": 2,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""Lithuania"": 26,
    ""United States"": 84,
    ""The Netherlands"": 26,
    ""Russia"": 26,
    ""Venezuela"": 2,
    ""Vietnam"": 72,
    ""Bulgaria"": 14,
    ""Singapore"": 113324,
    ""Japan"": 4,
    ""China"": 10,
    ""Germany"": 6,
    ""India"": 4,
    ""Poland"": 2,
    ""Mexico"": 2
  },
  ""account"": {
    ""Administr"": 34,
    ""Administrator"": 18,
    ""Admin"": 16,
    ""Whatuptime.com"": 16,
    ""root"": 6,
    ""Test"": 40,
    ""CpoLcVExT"": 2,
    ""gteEYX"": 2,
    ""oCdYDK"": 2,
    ""hello"": 98,
    ""(empty)"": 10,
    ""2887428808"": 113318,
    ""ymQCCMhpH"": 2,
    ""pdUrfC"": 2,
    ""ICqEKW"": 2,
    ""Domain"": 20,
    ""WrEsCaXaV"": 2,
    ""FgRxTU"": 2,
    ""zRNKCk"": 2,
    ""GBTfsMW"": 2,
    ""EoTajcFAV"": 2,
    ""qApdlp"": 2,
    ""pEWfgK"": 2
  },
  ""keyboard"": {
    ""Unknown"": 113602
  },
  ""client_build"": {
    ""Unknown"": 113602
  },
  ""client_name"": {
    ""Unknown"": 113602
  },
  ""ip_type"": {
    ""Unknown"": 113474,
    ""hosting"": 80,
    ""mobile"": 14,
    ""mobile & hosting"": 24,
    ""hosting & proxy"": 2,
    ""proxy"": 8
  }
}"
mMMRH8dD,2024-05-08_stats.json,rdp_snitch,JSON,Wednesday 8th of May 2024 07:15:17 PM CDT,"{
  ""ip"": {
    ""194.165.16.72"": 1,
    ""152.32.183.213"": 24,
    ""93.174.95.106"": 3,
    ""185.161.248.121"": 2,
    ""205.210.31.206"": 3,
    ""179.60.150.59"": 1,
    ""103.27.237.123"": 12,
    ""212.70.149.142"": 7,
    ""159.223.34.114"": 1,
    ""68.183.181.29"": 1,
    ""64.124.50.139"": 2,
    ""194.165.16.10"": 2,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 2,
    ""123.31.20.85"": 18,
    ""45.227.254.49"": 2,
    ""87.251.75.120"": 2,
    ""23.158.24.189"": 1,
    ""194.165.16.11"": 2,
    ""118.194.236.118"": 1,
    ""116.140.196.215"": 1,
    ""154.91.82.169"": 56659,
    ""205.210.31.58"": 3,
    ""167.94.145.109"": 1,
    ""103.245.236.103"": 2,
    ""68.183.230.185"": 1,
    ""62.204.41.155"": 4,
    ""58.218.204.183"": 3,
    ""205.210.31.53"": 3,
    ""185.196.220.41"": 3,
    ""194.48.251.72"": 1,
    ""94.232.41.30"": 2,
    ""193.142.146.227"": 3,
    ""156.146.59.101"": 1,
    ""141.98.9.34"": 1,
    ""104.234.181.59"": 2,
    ""112.4.139.162"": 1,
    ""185.198.69.140"": 1,
    ""167.94.145.97"": 1,
    ""62.204.41.93"": 4,
    ""194.165.16.73"": 2,
    ""103.232.53.123"": 4,
    ""194.165.16.76"": 2,
    ""2.57.149.92"": 1,
    ""187.190.60.112"": 1,
    ""198.235.24.125"": 3,
    ""194.165.16.78"": 2
  },
  ""asn"": {
    ""AS48721"": 11,
    ""AS135377"": 25,
    ""AS202425"": 3,
    ""AS49202"": 2,
    ""AS396982"": 12,
    ""AS211179"": 1,
    ""AS131386"": 12,
    ""AS204428"": 7,
    ""AS14061"": 3,
    ""AS6461"": 2,
    ""AS208091"": 6,
    ""AS197414"": 2,
    ""AS45899"": 18,
    ""AS267784"": 2,
    ""AS197767"": 1,
    ""AS4837"": 1,
    ""AS399077"": 56659,
    ""AS398705"": 2,
    ""AS150867"": 2,
    ""AS59425"": 8,
    ""AS4134"": 3,
    ""AS208046"": 6,
    ""AS48314"": 1,
    ""AS60068"": 1,
    ""AS209588"": 1,
    ""AS136359"": 2,
    ""AS56046"": 1,
    ""AS57523"": 1,
    ""AS63737"": 4,
    ""AS208312"": 1,
    ""AS22884"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Google LLC"": 12,
    ""Veraton Projects LTD"": 1,
    ""Long Van System Solution"": 12,
    ""SS-Net"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Zayo Bandwidth"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""VietNam Post and Telecom Corporation"": 18,
    ""ZgoShop, Inc."": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet"": 3,
    ""ColocationX Ltd."": 6,
    ""IP-Projects GmbH & Co. KG"": 1,
    ""DataCamp Limited"": 1,
    ""Hansin It Services Pvt. Ltd."": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 1,
    ""VIETSERVER"": 4,
    ""Red Byte LLC"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 11,
    ""Ucloud Information Technology"": 25,
    ""IP Volume inc"": 3,
    ""Kisara LLC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Maxwell Group LTD"": 1,
    ""Unknown"": 12,
    ""4Media Ltd"": 7,
    ""DigitalOcean, LLC"": 3,
    ""Microsoft Corporation"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Xhostis"": 2,
    ""Vietnam Posts and Telecommunications Group"": 18,
    ""UAB Host Baltic"": 2,
    ""ZgoShop, Inc"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Tcloudnet Inc"": 56659,
    ""Censys, Inc."": 2,
    ""LP Technology Electronic Commerce Company Limited"": 2,
    ""Horizon LLC"": 8,
    ""Chinanet JS"": 3,
    ""Makut Investments"": 3,
    ""Gwy It Pty Ltd"": 1,
    ""Dmitriy Panchenko"": 2,
    ""ColocationX Ltd"": 3,
    ""Cdn77 NYC"": 1,
    ""Alviva Holding Limited"": 1,
    ""IPXO"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""VietServer Services technology company limited"": 4,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""regionName"": {
    ""Kaunas"": 11,
    ""Virginia"": 29,
    ""North Holland"": 13,
    ""Moscow"": 11,
    ""California"": 12,
    ""Distrito Federal"": 1,
    ""Ho Chi Minh"": 14,
    ""Sliven"": 7,
    ""Central Singapore"": 1,
    ""South West"": 2,
    ""Hanoi"": 22,
    ""Vilnius"": 2,
    ""\u014csaka"": 1,
    ""Tokyo"": 1,
    ""Beijing"": 1,
    ""North West"": 56659,
    ""Hesse"": 3,
    ""Jiangsu"": 4,
    ""Perm Krai"": 2,
    ""New York"": 1,
    ""National Capital Territory of Delhi"": 2,
    ""Lesser Poland"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Lithuania"": 13,
    ""United States"": 42,
    ""The Netherlands"": 13,
    ""Russia"": 13,
    ""Venezuela"": 1,
    ""Vietnam"": 36,
    ""Bulgaria"": 7,
    ""Singapore"": 56662,
    ""Japan"": 2,
    ""China"": 5,
    ""Germany"": 3,
    ""India"": 2,
    ""Poland"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""Administr"": 17,
    ""Administrator"": 9,
    ""Admin"": 8,
    ""Whatuptime.com"": 8,
    ""root"": 3,
    ""Test"": 20,
    ""CpoLcVExT"": 1,
    ""gteEYX"": 1,
    ""oCdYDK"": 1,
    ""hello"": 49,
    ""(empty)"": 5,
    ""2887428808"": 56659,
    ""ymQCCMhpH"": 1,
    ""pdUrfC"": 1,
    ""ICqEKW"": 1,
    ""Domain"": 10,
    ""WrEsCaXaV"": 1,
    ""FgRxTU"": 1,
    ""zRNKCk"": 1,
    ""GBTfsMW"": 1,
    ""EoTajcFAV"": 1,
    ""qApdlp"": 1,
    ""pEWfgK"": 1
  },
  ""keyboard"": {
    ""Unknown"": 56801
  },
  ""client_build"": {
    ""Unknown"": 56801
  },
  ""client_name"": {
    ""Unknown"": 56801
  },
  ""ip_type"": {
    ""Unknown"": 56737,
    ""hosting"": 40,
    ""mobile"": 7,
    ""mobile & hosting"": 12,
    ""hosting & proxy"": 1,
    ""proxy"": 4
  }
}"
cg9KM5Lu,"""Servo Control"" rev_01",pleasedontcode,Arduino,Wednesday 8th of May 2024 06:31:04 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Servo Control""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-08 23:30:16

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Improve user description requirement by specifying */
	/* EasyButton library usage for debouncing a push */
	/* button on pin D2 with INPUT_PULLUP configuration. */
/****** SYSTEM REQUIREMENT 2 *****/
	/* move the servo motor of 50¬∞ if the button is */
	/* pressed. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h>	// Include the EasyButton library for debouncing a push button
#include <Servo.h>		// Include the Servo library for controlling servo motor

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void moveServo(int degrees);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t BUTTON_PIN = 2; // Define the pin for the push button (D2)

/***** DEFINITION OF SERVO MOTOR PIN *****/
const uint8_t SERVO_PIN = 9; // Define the pin for the servo motor

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button(BUTTON_PIN); // Create an EasyButton object for the push button
Servo servoMotor; // Create a Servo object to control the servo motor

void setup(void)
{
	// Initialize the EasyButton and Servo objects
	button.begin();
	servoMotor.attach(SERVO_PIN); // Attach the servo motor to the specified pin
}

void loop(void)
{
	// Read the button state
	button.read();

	// Move the servo motor 50 degrees if the button is pressed
	if (button.isPressed()) {
		moveServo(50);
	}
}

void moveServo(int degrees)
{
	servoMotor.write(degrees); // Move the servo motor to the specified angle
	delay(15); // Delay for stability
}

/* END CODE */"
VBhwVxSV,Bus MainScript (Bus TeleportScript),Sungmingamerpro13,CSS,Wednesday 8th of May 2024 06:10:14 PM CDT,"local TS = game:GetService(""TeleportService"")
local GuiPart = script.Parent.Parent.GuiPart
local Seats = script.Parent.Parent.BusModel.SeatsModel:GetChildren()

local List = {}
local MinPlayers = 1
local MaxPlayers = 12
local Timer

local PlaceId = (17424851138)

GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers

local function removeFromList(character)
	for i=1,#List do
		if List[i] == character.Name then
			table.remove(List,i)
			GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
		end
	end
end

local function TeleportPlayers()
	if #List >= MinPlayers then
		GuiPart.SurfaceGui.Status.Text = ""Teleporting...""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(1, 0, 0)
		local playersToTeleport = {}
		for i=1,#List do
			if game.Players:FindFirstChild(List[i]) then
				table.insert(playersToTeleport, game.Players:FindFirstChild(List[i]))
				game.ReplicatedStorage.TransitionEvent:FireClient(game.Players:FindFirstChild(List[i]))
			else
				table.remove(List,i)
			end
		end
		local Code = TS:ReserveServer(PlaceId)
		TS:TeleportToPrivateServer(PlaceId, Code, playersToTeleport)
		repeat wait() until #List <= 0
		GuiPart.SurfaceGui.Status.Text = ""READY""
		GuiPart.SurfaceGui.Status.TextColor3 = Color3.new(0.333333, 1, 0)
	else
		GuiPart.SurfaceGui.Players.Text = ""1 Players Neeeded""
		wait(2.5)
		GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
	end
end

script.Parent.Touched:Connect(function(Hit)
	if Hit.Parent:FindFirstChild(""Humanoid"") then
		
		local character = Hit.Parent
		local Player = game.Players:GetPlayerFromCharacter(character)
		local alreadyExists = false
		
		for i=1,#List do
			if List[i] == character.Name then
				alreadyExists = true
			end
		end
		
		if alreadyExists == false then
			if #List < MinPlayers then
				table.insert(List,character.Name)
				for i, v in pairs(Seats) do
					if Seats == nil then
						local Check = Instance.new(""Weld"")
						Check.Name = ""Check""
						Check.Parent = Player.Character
						Check.Parent.Humanoid.JumpPower = 0
						Check.Parent.Humanoid.WalkSpeed = 0
					end
				end
				Seats[math.random(1, #Seats)]:Sit(Player.Character.Humanoid)
				game.ServerStorage.LeaveGui:Clone().Parent = Player.PlayerGui
				GuiPart.SurfaceGui.Players.Text = ""Players: ""..#List.."" / ""..MaxPlayers
			end
		end
		Player.CharacterRemoving:connect(function(character)
			removeFromList(character)
		end)
	end
end)

game.ReplicatedStorage.LeaveGuiEvent.OnServerEvent:Connect(function(player)
	player:LoadCharacter()
end)

while wait() do
	Timer = 41
	for i=1,Timer do
		Timer = Timer - 1
		GuiPart.SurfaceGui.timeLabel.Text = ""Time: ""..Timer
		wait(1)
	end
	TeleportPlayers()
end
"
h2XHPmUB,Swimbot Error,swimmerhair,Python,Wednesday 8th of May 2024 05:32:27 PM CDT,"Traceback (most recent call last):
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/bot.py"", line 939, in invoke
    await ctx.command.invoke(ctx)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 863, in invoke
    await injected(*ctx.args, **ctx.kwargs)
  File ""/home/pi/.local/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/whois.py"", line 221, in whois
    info = await COC.swimbot(tag).get_info
  File ""/home/pi/Swimbot/COC.py"", line 145, in get_info
    account = await swimbot(account['_id']).update
  File ""/home/pi/Swimbot/COC.py"", line 167, in update
    resp = await Player(self.input).info
  File ""/home/pi/Swimbot/COC.py"", line 35, in info
    elif r.status == 403: raise swimbot_utils.CoCForbidden
swimbot_utils.CoCForbidden
"
mVVA0Jib,Ulica (Bakurski),niske,Java,Wednesday 8th of May 2024 05:14:55 PM CDT,"public class ListaListi{
	
	public static void main (String[] args) {
		
		Ulica Silerova = new Ulica();
		Silerova.dodajKucu(3);
		Silerova.dodajKucu(1);
		
		Silerova.dodajKucu(7);
		Silerova.dodajKucu(5);
		Silerova.dodajKucu(9);
		
		Silerova.dodajOsobu(1, ""Dusan"");
		Silerova.dodajOsobu(1, ""Olivera"");
		Silerova.dodajOsobu(1, ""Nebojsah"");
		
		Silerova.dodajOsobu(3, ""Jovicaa"");
		Silerova.dodajOsobu(3, ""Nemanjaaaaaa"");
		
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		Silerova.dodajOsobu(5, ""Srdjan"");
		
		Silerova.dodajOsobu(7, ""Niske"");
		Silerova.dodajOsobu(7, ""Bodji"");
		
		Silerova.najviseStanovnika(3);
		
		
		System.out.println(Silerova);
		
		Silerova.prebaci(1, 9);
		Silerova.prebaci(7, 123);
		
		System.out.println(Silerova);
	}
}

class Ulica{
	
	// Klasa Osoba
	class Osoba{
		String ime;
		Osoba veza;
	
		public Osoba(String ime){
			this.ime = ime;
			this.veza = null;
		}
		
		public String toString(){
			return ime;
		}
	}
	
	//Klasa Kuca
	class Kuca{
		int broj;
		Kuca veza;
		Osoba sadrzaj;
		
		public Kuca(int broj){
			this.broj = broj;
			this.veza = null;
			this.sadrzaj = null;
		}
		
		public String toString(){
			String s = ""Kuca broj "" + broj + "":"";
			Osoba tek = sadrzaj;
			
			if(tek == null){
				s += "" je prazna."";
			} else {
				s += "" "" + tek;
				tek = tek.veza;
				
				while(tek != null){
					s += "", "" + tek;
					tek = tek.veza;
				}
			}
			
			return s;
		}
	}
	
	Kuca prvaKuca;
	
	// Metode za ulicu
	public boolean postojiKuca(int broj){
		Kuca tek = prvaKuca;
		
		while(tek != null){
			if(tek.broj == broj){
				return true;
			}
			
			tek = tek.veza;
		}
		
		return false;
	}
	
	
	public void dodajKucu(int broj){
		if(!postojiKuca(broj)){
			Kuca tek = prvaKuca;
			
			if(prvaKuca == null || broj < prvaKuca.broj){
				
				prvaKuca = new Kuca(broj);
				prvaKuca.veza = tek;
				return;
			}
			
			while(tek.veza != null){
				
				if(broj < tek.veza.broj)
					break;
					
				tek = tek.veza;	
				
			}
			// 1 3 [5] (7) 9
			Kuca sledeca = tek.veza;
			Kuca nova = new Kuca(broj);
			tek.veza = nova;
			nova.veza = sledeca;
		}
	}

	public void dodajOsobu(int brojKuce, String ime){
		Kuca tek = prvaKuca;
		while(tek != null && postojiKuca(brojKuce)){
			if(tek.broj == brojKuce){
				Osoba tekOsoba = tek.sadrzaj;
				tek.sadrzaj = new Osoba(ime);
				tek.sadrzaj.veza = tekOsoba;
				
			}
			tek = tek.veza;
		}
	}
	
	public void najviseStanovnika(int N){
		int brKuceMax = prvaKuca.broj;
		int pomocna = 0;
		int brojac = 0;
		
		Kuca tek = prvaKuca;
		
		if(prvaKuca == null){
			return;
		}
		
		while(tek != null){
			Osoba tekOsoba= tek.sadrzaj;
			while(tekOsoba != null){
				if(tekOsoba.ime.length() > N)
					brojac++;
				
				tekOsoba = tekOsoba.veza;
			}
			
			if(brojac > pomocna){
				pomocna = brojac;
				brKuceMax = tek.broj;
			}
			tek = tek.veza;
			brojac = 0;
		}
		
		System.out.println(""Kuca sa imenima vecim od broja N: "" + N + "" je "" + brKuceMax);
	}
	
	public void prebaci(int A, int B){
		if(postojiKuca(A)){
			Kuca tek = prvaKuca;
			
			while(tek != null){
				if(tek.broj == A){
					break;
				}
				tek = tek.veza;
			}
			
			Osoba tekOsoba = tek.sadrzaj;
			Osoba prethodni = null;
			
			while(tekOsoba.veza != null){
				//System.out.println(tekOsoba.ime);
				prethodni = tekOsoba;
				tekOsoba = tekOsoba.veza;
			}
			
			
			Osoba pomocna = tekOsoba;
			prethodni.veza = null;
			
			if(postojiKuca(B)){
				dodajOsobu(B, pomocna.ime);
			}
			
			
		}
	}
	//-----------------------------------
	

	// Ispis cele ulice
	public String toString(){
		String s = ""Ulica: "";
		Kuca tek = prvaKuca;
		
		if(tek == null){
			s += "" je prazna."";
		} else {
			while(tek != null){
				s += ""\n"" + tek;
				tek = tek.veza;
			}
		}
			
		return s;
	}
}



"
tyLBSd4X,Pobieranie YT,314ma,PowerShell,Wednesday 8th of May 2024 04:25:30 PM CDT,"# 1. Wrzuciƒá to do pliku pobieranie_youtube.ps1
# 2. Zrobiƒá skr√≥t do tego pliku np. na pulpicie
# 3. Przeedytowaƒá target skr√≥tu na: powershell C:\≈õcie≈ºka\do\skryptu\pobieranie_youtube.ps1
# 4. Plik mp3 pobierze siƒô do lokalizacji ""Uruchom w""

echo Pobieranie...
$link = Get-Clipboard
$link -match ""[\?&]v=([a-zA-Z0-9\-_]+)"" | Out-Null
if ($Matches.Length -eq 1) {
    $videoId = $Matches[1]
    yt-dlp.exe -x --audio-format mp3 https://youtube.com/?v=$videoId  --no-warnings --quiet
}"
uBM0tEsz,Character Name Generator (ChatGPT),Krythic,C#,Wednesday 8th of May 2024 03:57:21 PM CDT,"using System;
using System.Collections.Generic;

public class NameGenerator
{
    private HashSet<string> maleFirstNames;
    private HashSet<string> femaleFirstNames;
    private HashSet<string> surnames;
    private Random rnd;

    public NameGenerator(Random random = null)
    {
        maleFirstNames = new HashSet<string>
        {
            ""Aldric"", ""Branthor"", ""Cedric"", ""Darian"", ""Elric"", ""Finnian"", ""Gareth"", ""Haldor"", ""Ithilien"", ""Jareth"",
            ""Kael"", ""Lorcan"", ""Marius"", ""Nathair"", ""Orin"", ""Perrin"", ""Quillen"", ""Roran"", ""Soren"", ""Talon"", ""Ulfar"",
            ""Valen"", ""Wulfric"", ""Xavier"", ""Yorick"", ""Zephyr"", ""Auron"", ""Benedict"", ""Corvus"", ""Dexter"", ""Eldric"",
            ""Faelan"", ""Gideon"", ""Hawthorne"", ""Ignatius"", ""Jasper"", ""Kieran"", ""Lysander"", ""Magnus"", ""Nikolai"",
            ""Oberon"", ""Percival"", ""Quentin"", ""Ryder"", ""Sebastian"", ""Thaddeus"", ""Ulric"", ""Vance"", ""Wesley"", ""Xander"",
            ""Yarrow"", ""Zander"", ""Asher"", ""Baelor"", ""Cassius"", ""Dorian"", ""Ezekiel"", ""Finnegan"", ""Garrick"", ""Hadrian"",
            ""Isidore"", ""Jace"", ""Kellan"", ""Lucian"", ""Malachi"", ""Nolan"", ""Osiris"", ""Peregrine"", ""Quincy"", ""Rhys"",
            ""Silas"", ""Theodore"", ""Ulysses"", ""Varian"", ""Wilder"", ""Xavian"", ""Yorath"", ""Zaire"", ""Atlas"", ""Bastian"",
            ""Caspian"", ""Dante"", ""Elias"", ""Fabian"", ""Gavin"", ""Hugo"", ""Isaac"", ""Jaxon"", ""Kai"", ""Lachlan"", ""Milo"",
            ""Nico"", ""Orion"", ""Paxton"", ""Ronan"", ""Sawyer"", ""Theo"", ""Uriah"", ""Vincent"", ""Wyatt"", ""Xander"", ""Yael"", ""Zayn""
        };
        femaleFirstNames = new HashSet<string>
        {
            ""Aria"", ""Briar"", ""Celestia"", ""Dahlia"", ""Elara"", ""Fiona"", ""Genevieve"", ""Hazel"", ""Isolde"", ""Jasmine"",
            ""Kiera"", ""Luna"", ""Maeve"", ""Nyx"", ""Ophelia"", ""Phaedra"", ""Quinn"", ""Rosalind"", ""Seraphina"", ""Thalia"",
            ""Ursula"", ""Violet"", ""Willow"", ""Xanthe"", ""Yara"", ""Zara"", ""Aurora"", ""Belle"", ""Cassandra"", ""Daphne"",
            ""Eleanor"", ""Felicity"", ""Guinevere"", ""Helena"", ""Ivy"", ""Juliet"", ""Kira"", ""Lyra"", ""Morgana"", ""Nova"",
            ""Odette"", ""Persephone"", ""Quintessa"", ""Rowan"", ""Serenity"", ""Talia"", ""Uma"", ""Vivienne"", ""Wren"", ""Xena"",
            ""Yasmine"", ""Zephyra"", ""Arabella"", ""Bryony"", ""Calista"", ""Delilah"", ""Elowen"", ""Fawn"", ""Gwendolyn"",
            ""Hermione"", ""Isadora"", ""Jessamine"", ""Kiara"", ""Lilith"", ""Minerva"", ""Niamh"", ""Oona"", ""Pandora"",
            ""Quiana"", ""Rhiannon"", ""Saoirse"", ""Tamsin"", ""Undine"", ""Vespera"", ""Winter"", ""Xiomara"", ""Yseult"",
            ""Zephyrine"", ""Athena"", ""Bronwyn"", ""Cordelia"", ""Drusilla"", ""Evangeline"", ""Fleur"", ""Giselle"", ""Hestia"",
            ""Ingrid"", ""Jocasta"", ""Kalliope"", ""Lavinia"", ""Mireille"", ""Nerissa"", ""Olympia"", ""Pallas"", ""Querida"",
            ""Rowena"", ""Sapphira"", ""Tanith"", ""Ursuline"", ""Valkyrie"", ""Winifred"", ""Xylia"", ""Ygritte"", ""Zelda""
        };
        surnames = new HashSet<string>
        {
            ""Aldaine"", ""Blackthorn"", ""Crestfall"", ""Dreadmoor"", ""Ebonwood"", ""Frostbane"", ""Goldenvale"", ""Hawkridge"",
            ""Ironheart"", ""Jadeborn"", ""Kingsley"", ""Lorekeeper"", ""Moonshadow"", ""Nightfall"", ""Oakenshield"", ""Proudfoot"",
            ""Quicksilver"", ""Ravenwood"", ""Stormcloak"", ""Thornblade"", ""Underhill"", ""Valeheart"", ""Whitewood"", ""Xanadu"",
            ""Yewshade"", ""Zephyrblade"", ""Ashenbrook"", ""Brightwood"", ""Copperfield"", ""Duskwood"", ""Emberstone"", ""Firesong"",
            ""Griffith"", ""Holloway"", ""Ivoryfang"", ""Juniper"", ""Kingsgrave"", ""Lionheart"", ""Mistwood"", ""Netherwood"",
            ""Oakenspear"", ""Pinehurst"", ""Quillson"", ""Redwood"", ""Silverthorn"", ""Stonewall"", ""Talltree"", ""Umberfall"",
            ""Valerian"", ""Wildewood"", ""Xandros"", ""Yarrowfield"", ""Zephyrcrest"", ""Avalanche"", ""Blackwater"", ""Crimsonwind"",
            ""Darkwood"", ""Eversong"", ""Frostwind"", ""Goldleaf"", ""Hawthorn"", ""Ironclad"", ""Jadewind"", ""Kingsmark"",
            ""Lunarfall"", ""Mistborn"", ""Nighthawk"", ""Oathbreaker"", ""Pinecrest"", ""Quicksand"", ""Ravenclaw"", ""Shadowbane"",
            ""Starfall"", ""Thunderheart"", ""Underwood"", ""Valkyrie"", ""Winterbourne"", ""Xanathar"", ""Yellowknife"",
            ""Zephyrwind"", ""Arcane"", ""Bloodmoon"", ""Crowfeather"", ""Dawnblade"", ""Elmwood"", ""Frostfang"", ""Goldenleaf"",
            ""Hollowgrave"", ""Ironwood"", ""Jadehorn"", ""Knightshade"", ""Lioncrest"", ""Morningsong"", ""Nightraven"", ""Oceansong"",
            ""Phoenix"", ""Quicksilver"", ""Ravensong"", ""Shadowbrook"", ""Stagheart"", ""Twilight"", ""Umbra"", ""Viper"", ""Wintersong"",
            ""Xavier"", ""Yew"", ""Zephyr"", ""Alder"", ""Briar"", ""Cypress"", ""Dusk"", ""Ember"", ""Frost"", ""Gale"", ""Holly"", ""Ivy"",
            ""Juniper"", ""Lark"", ""Moss"", ""Nightshade"", ""Orchid"", ""Pine"", ""Quill"", ""Rose"", ""Sage"", ""Thorn"", ""Violet"",
            ""Willow"", ""Yarrow"", ""Zinnia"", ""Ash"", ""Bramble"", ""Dawn"", ""Echo"", ""Fawn"", ""Glen"", ""Hazel"", ""Iris"", ""Jade"",
            ""Kestrel"", ""Luna"", ""Meadow"", ""Nova"", ""Opal"", ""Petal"", ""Rain"", ""Sky"", ""Tansy"", ""Vale"", ""Wren"", ""Yew"", ""Zephyr""
        };
        rnd = random ?? new Random();
    }

    public void AddMaleFirstName(string name)
    {
        maleFirstNames.Add(name);
    }

    public void AddFemaleFirstName(string name)
    {
        femaleFirstNames.Add(name);
    }

    public void AddSurname(string surname)
    {
        surnames.Add(surname);
    }

    public string GenerateMaleFirstName()
    {
        if (maleFirstNames.Count == 0)
            throw new InvalidOperationException(""No male first names available."");
        int index = rnd.Next(maleFirstNames.Count);
        return maleFirstNames.ElementAt(index);
    }

    public string GenerateFemaleFirstName()
    {
        if (femaleFirstNames.Count == 0)
            throw new InvalidOperationException(""No female first names available."");
        int index = rnd.Next(femaleFirstNames.Count);
        return femaleFirstNames.ElementAt(index);
    }

    public string GenerateSurname()
    {
        if (surnames.Count == 0)
            throw new InvalidOperationException(""No surnames available."");
        int index = rnd.Next(surnames.Count);
        return surnames.ElementAt(index);
    }

    public string GenerateFullName(bool isMale)
    {
        string firstName = isMale ? GenerateMaleFirstName() : GenerateFemaleFirstName();
        string surname = GenerateSurname();
        return $""{firstName} {surname}"";
    }
}"
wXKUuzNx,about,Z1maV1,Lua,Wednesday 8th of May 2024 03:57:12 PM CDT,"os.pullEvent = os.pullEventRaw

local w,h = term.getSize()

function printCentered( y,s )
   local x = math.floor((w - string.len(s)) / 2)
   term.setCursorPos(x,y)
   term.clearLine()
   term.write( s )
end

local nOption = 1

local function drawMenu()
   term.clear()
   term.setCursorPos(1,1)
   term.write(""Diamond OS // 1.2.0 // "")
term.setCursorPos(1,2)
shell.run(""id"")

   term.setCursorPos(w-11,1)
if nOption == 1 then
   term.write(""Back"")
else
end

end

--GUI
term.clear()
local function drawFrontend()
   printCentered( math.floor(h/2) - 3, """")
   printCentered( math.floor(h/2) - 2, ""About"" )
   printCentered( math.floor(h/2) - 1, """")
   printCentered( math.floor(h/2) + 0, ""Name  : DiamondOS"")
   printCentered( math.floor(h/2) + 1, ""Manu. : LINC     "")
   printCentered( math.floor(h/2) + 2, ""Vers. : 1.2.0    "")
   printCentered( math.floor(h/2) + 3, """")
   printCentered( math.floor(h/2) + 4, ((nOption == 1) and ""[   Back   ]"") or "" Back"" )
end

--Display
drawMenu()
drawFrontend()

while true do
	local e,p = os.pullEvent(""key"")
		if p == keys.up then
			if nOption > 1 then
				nOption = nOption - 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.down then
			if nOption < 1 then
				nOption = nOption + 1
				drawMenu()
				drawFrontend()
			end
		elseif p == keys.enter then
			break
		end
end
term.clear()

--Conditions
if nOption  == 1 then
shell.run(""/bin/main"")
end"
4BH1avUA,linq,Z1maV1,Lua,Wednesday 8th of May 2024 03:42:07 PM CDT,"brk = false
function forEach(tbl, func)
	for i, v in ipairs(tbl) do
		if brk then
			brk = false
			break
		end
		func(v)
	end
end

return { brk = function() brk = true end, forEach = forEach }"
RxkNetDQ,sha256,fmg75,Python,Wednesday 8th of May 2024 03:30:28 PM CDT,"# https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf


def _sigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 7) ^
           _rotate_right(num, 18) ^
           (num >> 3))
    return num


def _sigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 17) ^
           _rotate_right(num, 19) ^
           (num >> 10))
    return num


def _capsigma0(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 2) ^
           _rotate_right(num, 13) ^
           _rotate_right(num, 22))
    return num


def _capsigma1(num: int):
    """"""As defined in the specification.""""""
    num = (_rotate_right(num, 6) ^
           _rotate_right(num, 11) ^
           _rotate_right(num, 25))
    return num


def _ch(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (~x & z)


def _maj(x: int, y: int, z: int):
    """"""As defined in the specification.""""""
    return (x & y) ^ (x & z) ^ (y & z)


def _rotate_right(num: int, shift: int, size: int = 32):
    """"""Rotate an integer right.""""""
    return (num >> shift) | (num << size - shift)

# Funci√≥n para generar el mensaje binario seg√∫n la especificaci√≥n
def generate_binary_message(message: bytearray) -> bytes:
        """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""
        
        if isinstance(message, str):
            message = bytearray(message, 'ascii')
        elif isinstance(message, bytes):
            message = bytearray(message)
        elif not isinstance(message, bytearray):
            raise TypeError
        
        # Longitud original del mensaje en bits
        length = len(message) * 8
        # Agregar el bit ""1"" al final del mensaje
        message += b'\x80'
        # Calcular la cantidad de ceros necesarios para el relleno
        padding_zeros = (448 - (length + 1) % 512) % 512
        # Agregar los ceros de relleno
        message += b'\x00' * (padding_zeros // 8)
        # Agregar la longitud del mensaje original como una cadena binaria de 64 bits
        message += length.to_bytes(8, 'big')
        return message



# constantes ""K"" page 11

K = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]


def generate_hash(message: bytes) -> bytearray:
    """"""Return a SHA-256 hash from the message passed.
    The argument should be a bytes, bytearray, or
    string object.""""""

    # Aplicar el relleno al mensaje
    padded_message = generate_binary_message(message)

    # Parsing
    blocks = []  # contains 512-bit chunks of message
    for i in range(0, len(padded_message), 64):  # 64 bytes is 512 bits
        blocks.append(padded_message[i:i + 64])

    # SHA-256 Hash Computation
    hash_values = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
                   0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]

    for message_block in blocks:
        # Prepare message schedule
        message_schedule = []
        for t in range(0, 64):
            if t <= 15:
                # adds the t'th 32 bit word of the block,
                # starting from leftmost word
                # 4 bytes at a time
                message_schedule.append(bytes(message_block[t * 4:(t * 4) + 4]))
            else:
                term1 = _sigma1(int.from_bytes(message_schedule[t - 2], 'big'))
                term2 = int.from_bytes(message_schedule[t - 7], 'big')
                term3 = _sigma0(int.from_bytes(message_schedule[t - 15], 'big'))
                term4 = int.from_bytes(message_schedule[t - 16], 'big')

                # append a 4-byte byte object
                schedule = ((term1 + term2 + term3 + term4) % 2**32).to_bytes(4, 'big')
                message_schedule.append(schedule)

        assert len(message_schedule) == 64

        # Initialize working variables
        a, b, c, d, e, f, g, h = hash_values

        # Iterate for t=0 to 63
        for t in range(64):
            t1 = ((h + _capsigma1(e) + _ch(e, f, g) + K[t] +
                   int.from_bytes(message_schedule[t], 'big')) % 2**32)

            t2 = (_capsigma0(a) + _maj(a, b, c)) % 2**32

            h, g, f, e, d, c, b, a = g, f, e, (d + t1) % 2**32, c, b, a, (t1 + t2) % 2**32

        # Compute intermediate hash value
        hash_values = [(x + y) % 2**32 for x, y in zip(hash_values, [a, b, c, d, e, f, g, h])]

    # concatenation by fmg
    result_bytes = b"""".join(h.to_bytes(4, 'big') for h in hash_values)
    return result_bytes


import sys

if __name__ == ""__main__"":
    # Verificar si se proporcion√≥ un mensaje como argumento
    if len(sys.argv) != 2:
        print(""Uso: python3 sha256.py mensaje"")
        sys.exit(1)

    # Obtener el mensaje del primer argumento (ignorando el nombre del script)
    mensaje = sys.argv[1]

    # Calcular y mostrar el hash del mensaje
    print(generate_hash(mensaje.encode()).hex())"
KckR0faC,Buble 3,dllbridge,C,Wednesday 8th of May 2024 03:26:36 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        push ecx
        push edx
        mov ecx, -1
        .repeat
            inc ecx
            mov al, [edx + ecx]
            cmp al, 0
            jz .done
            invoke StdOut, al
            jmp .repeat
        .done:
        pop edx
        pop ecx
        ret
    endp

    proc print_number
        push eax
        push ebx
        mov ebx, 10
        mov edx, 0
        div ebx
        cmp eax, 0
        jz .done
        push edx
        call print_number
        pop edx
    .done:
        add dl, '0'
        invoke StdOut, dl
        pop ebx
        pop eax
        ret
    endp

    proc crlf
        invoke StdOut, 13
        invoke StdOut, 10
        ret
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
ysnVAQmT,Untitled,Rodunskiy,C#,Wednesday 8th of May 2024 03:17:34 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 1;
            int startNumber = 2;
            int power = 0;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            Console.WriteLine($""–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {numberRandom}"");

            while (number < numberRandom) 
            {
                power++;
                number *= startNumber;
            }

            Console.WriteLine($""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å –¥–≤–æ–π–∫–∏, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∞—è —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {power}"");
        }
    }
}

"
AJMFUeRV,BubleSorting FASM 2,dllbridge,ASM (NASM),Wednesday 8th of May 2024 03:17:08 PM CDT,"format PE console
entry start

include 'win32a.inc'

section '.data' data readable writeable
    array dd 5, 2, 9, 3, 1  ; –ø—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    array_size equ ($ - array) / 4
    buffer db 'Sorted array: ', 0

section '.code' code readable executable
    start:
        mov ecx, array_size

        outer_loop:
            mov edx, 0
            mov ebx, ecx
            dec ebx

            inner_loop:
                mov eax, [array + edx * 4]
                cmp eax, [array + edx * 4 + 4]
                jbe not_swap

                mov eax, [array + edx * 4]
                mov ebx, [array + edx * 4 + 4]
                mov [array + edx * 4], ebx
                mov [array + edx * 4 + 4], eax

                not_swap:
                    inc edx
                    loop inner_loop

            loop outer_loop

        mov ecx, array_size
        mov edx, buffer
        call print_string

        print_loop:
            mov eax, [array + ecx * 4 - 4]
            call print_number
            dec ecx
            jnz print_loop

        call crlf

        call [ExitProcess]

    proc print_string
        enter
            push ecx
            mov ecx, -1
            .repeat
                inc ecx
                mov al, [edx + ecx]
                cmp al, 0
                jz .done
                invoke StdOut, al
                jmp .repeat
            .done:
            pop ecx
        return
    endp

    proc print_number
        enter
            push eax
            push ebx
            mov ebx, 10
            mov edx, 0
            div ebx
            cmp eax, 0
            jz .done
            push edx
            call print_number
            pop edx
        .done:
            add dl, '0'
            invoke StdOut, dl
            pop ebx
            pop eax
        return
    endp

    proc crlf
        enter
            invoke StdOut, 13
            invoke StdOut, 10
        return
    endp

section '.idata' import data readable writeable
    library kernel32, 'kernel32.dll',\
            user32, 'user32.dll'

    import kernel32,\
            ExitProcess, 'ExitProcess'

    import user32,\
            wsprintf, 'wsprintfA'

section '.text' code readable executable"
0dfv0Zzm,Setup Docker Volume,About80Ninjas,PowerShell,Wednesday 8th of May 2024 03:10:40 PM CDT,"# This script will create docker volumes in the specified path and inspect them after creation

# Define an array of volume names
$Volumes = @(""jenkins"", ""webapps"", ""gitea"", ""giteasql"")

# Define the path where the volumes will be created
$PathToVolumes = ""C:\Dev\docker\volumes\""

# Define the docker command to create volumes
# The --opt type=none option specifies a non-docker managed volume
# The --opt o=bind option binds the volume to a directory on the host machine
# The --opt device=$PathToVolumes option specifies the directory on the host machine where the volume will be created
$dockercmd = ""docker volume create --opt type=none --opt o=bind --opt device=$PathToVolumes""

# Loop through each volume name in the array
$Volumes | ForEach-Object {  

    # Create a full command by concatenating the docker command with the volume name
    $fullcmd = $dockercmd + $_ + ' ' + $_

    # Execute the full command using Invoke-Expression
    # This will create the volume with the specified name and bind it to the specified directory on the host machine
    Invoke-Expression $fullcmd

    # Execute the docker command to inspect the volume with the specified name
    # This will display information about the volume, such as its driver, name, and mount point
    Invoke-Expression ""docker volume inspect $($_)""
}
"
AD3a7RQh,Com-port for arduino,dllbridge,C,Wednesday 8th of May 2024 02:47:10 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <termios.h>

int open_port(const char *port) {
    int fd = open(port, O_RDWR | O_NOCTTY | O_NDELAY);
    if (fd == -1) {
        perror(""open_port: Unable to open port"");
        return -1;
    }
    
    struct termios options;
    tcgetattr(fd, &options);
    cfsetispeed(&options, B9600);
    cfsetospeed(&options, B9600);
    options.c_cflag &= ~PARENB;
    options.c_cflag &= ~CSTOPB;
    options.c_cflag &= ~CSIZE;
    options.c_cflag |= CS8;
    options.c_cflag |= (CLOCAL | CREAD);
    tcsetattr(fd, TCSANOW, &options);
    
    return fd;
}

int main() {
    int fd = open_port(""/dev/ttyUSB0"");
    if (fd == -1) {
        return -1;
    }
    
    char write_buffer[] = ""Hello Arduino!"";
    int bytes_written = write(fd, write_buffer, strlen(write_buffer));
    if (bytes_written < 0) {
        perror(""write"");
        close(fd);
        return -1;
    }
    
    char read_buffer[256];
    int bytes_read = read(fd, &read_buffer, sizeof(read_buffer));
    if (bytes_read < 0) {
        perror(""read"");
        close(fd);
        return -1;
    }
    
    read_buffer[bytes_read] = '\0';
    printf(""Received: %s\n"", read_buffer);

    close(fd);
    
    return 0;
}"
