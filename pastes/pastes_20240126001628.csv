id,title,username,language,date,content
RnyAiPmp,2024-01-25_stats.json,rdp_snitch,JSON,Thursday 25th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""82.32.227.142"": 4,
    ""194.165.17.21"": 15,
    ""111.173.80.148"": 1,
    ""106.58.164.84"": 3,
    ""103.240.84.186"": 4,
    ""150.223.32.106"": 3,
    ""111.161.41.132"": 9,
    ""109.69.7.157"": 4,
    ""36.111.174.56"": 15,
    ""45.227.254.8"": 2,
    ""106.58.166.180"": 5,
    ""222.93.104.67"": 4,
    ""74.105.22.131"": 8,
    ""124.67.254.109"": 14,
    ""218.90.120.19"": 5,
    ""42.51.39.209"": 3,
    ""203.56.40.167"": 6,
    ""216.202.197.116"": 9,
    ""106.58.178.2"": 3,
    ""106.58.164.95"": 3,
    ""14.18.41.26"": 2,
    ""43.134.83.223"": 3,
    ""117.145.27.42"": 6,
    ""219.144.67.36"": 8,
    ""113.200.222.57"": 9,
    ""182.61.55.68"": 4,
    ""194.165.16.11"": 4,
    ""80.151.251.216"": 5,
    ""222.219.240.13"": 5,
    ""150.223.76.57"": 3,
    ""150.223.66.55"": 2,
    ""185.106.176.8"": 3,
    ""110.40.34.231"": 8,
    ""106.58.215.167"": 3,
    ""175.4.26.179"": 3,
    ""27.8.44.19"": 2,
    ""103.39.222.217"": 1,
    ""106.58.212.201"": 2,
    ""120.48.64.252"": 1,
    ""106.58.165.88"": 1,
    ""106.58.178.111"": 1,
    ""45.141.26.52"": 4,
    ""205.210.31.111"": 3,
    ""121.5.74.35"": 1,
    ""116.73.243.187"": 4,
    ""113.108.8.125"": 3,
    ""101.32.116.25"": 4,
    ""82.156.150.3"": 1,
    ""12.193.127.18"": 1,
    ""124.67.115.210"": 6,
    ""62.204.41.195"": 4,
    ""101.32.126.66"": 1,
    ""37.19.200.113"": 4,
    ""208.53.61.115"": 4,
    ""106.58.210.135"": 4,
    ""52.80.19.192"": 1,
    ""103.210.237.233"": 3,
    ""61.171.113.104"": 1,
    ""211.91.60.69"": 5,
    ""106.58.211.156"": 2,
    ""43.134.0.225"": 1,
    ""115.236.75.10"": 3,
    ""106.58.217.61"": 3,
    ""94.232.45.92"": 3,
    ""113.30.188.235"": 1,
    ""203.56.4.242"": 5,
    ""49.232.169.162"": 2,
    ""196.190.117.7"": 1,
    ""139.59.185.252"": 1,
    ""212.70.149.146"": 5,
    ""101.33.204.231"": 2,
    ""106.116.169.71"": 1,
    ""150.223.46.21"": 4,
    ""103.245.195.202"": 3,
    ""140.246.215.173"": 7,
    ""134.175.53.186"": 1,
    ""212.70.149.142"": 4,
    ""185.170.144.3"": 2,
    ""43.243.136.202"": 8,
    ""45.227.254.55"": 3,
    ""87.229.115.172"": 1,
    ""1.82.238.130"": 2,
    ""198.235.24.174"": 3,
    ""20.231.212.228"": 2,
    ""43.133.56.30"": 4,
    ""106.58.219.212"": 2,
    ""203.57.39.224"": 1,
    ""125.230.236.203"": 2,
    ""42.193.192.91"": 3,
    ""118.193.44.118"": 1,
    ""106.58.221.13"": 2,
    ""117.33.174.14"": 1,
    ""209.15.109.35"": 1,
    ""43.134.33.208"": 2,
    ""104.248.79.165"": 4,
    ""138.68.52.19"": 1,
    ""45.141.26.152"": 1,
    ""111.229.184.146"": 1,
    ""42.51.13.226"": 3,
    ""45.141.26.68"": 3,
    ""36.111.146.78"": 2,
    ""111.231.15.224"": 3,
    ""152.32.180.98"": 1,
    ""103.215.81.133"": 2,
    ""119.96.169.74"": 1,
    ""147.135.91.23"": 4,
    ""193.237.214.102"": 3,
    ""193.233.21.155"": 1,
    ""205.210.31.131"": 3,
    ""111.229.232.159"": 1,
    ""125.39.153.133"": 1,
    ""183.134.89.41"": 2,
    ""150.223.35.239"": 3,
    ""178.33.77.209"": 2,
    ""103.44.237.12"": 2,
    ""87.251.75.64"": 1,
    ""61.171.106.140"": 3,
    ""45.93.20.204"": 3,
    ""87.191.150.194"": 2,
    ""106.55.54.44"": 1,
    ""212.186.143.100"": 1,
    ""45.227.254.54"": 2,
    ""106.58.217.149"": 1,
    ""81.19.135.2"": 3,
    ""118.163.247.235"": 1,
    ""122.227.146.74"": 1,
    ""185.180.143.135"": 1,
    ""167.94.146.51"": 1,
    ""222.219.129.74"": 1,
    ""205.210.31.198"": 3,
    ""27.128.239.46"": 1
  },
  ""asn"": {
    ""AS5089"": 4,
    ""AS48721"": 19,
    ""AS148981"": 1,
    ""AS4134"": 61,
    ""AS4837"": 50,
    ""AS58519"": 51,
    ""AS21183"": 4,
    ""AS267784"": 7,
    ""AS701"": 8,
    ""AS56005"": 6,
    ""AS3356"": 9,
    ""AS132203"": 15,
    ""AS9808"": 6,
    ""AS134768"": 11,
    ""AS38365"": 5,
    ""AS3320"": 7,
    ""AS42960"": 3,
    ""AS38283"": 8,
    ""AS63838"": 3,
    ""AS4816"": 3,
    ""AS142299"": 8,
    ""AS396982"": 12,
    ""AS45090"": 16,
    ""AS17488"": 4,
    ""AS7018"": 1,
    ""AS59425"": 4,
    ""AS212238"": 4,
    ""AS17341"": 4,
    ""AS55960"": 1,
    ""AS142403"": 3,
    ""AS4812"": 4,
    ""AS212482"": 3,
    ""AS41436"": 1,
    ""AS24757"": 1,
    ""AS14061"": 6,
    ""AS204428"": 9,
    ""AS9541"": 3,
    ""AS197414"": 2,
    ""AS4808"": 8,
    ""AS29278"": 1,
    ""AS8075"": 2,
    ""AS3462"": 3,
    ""AS135377"": 2,
    ""AS135566"": 1,
    ""AS55933"": 2,
    ""AS58563"": 1,
    ""AS16276"": 6,
    ""AS5378"": 3,
    ""AS56380"": 1,
    ""AS58461"": 2,
    ""AS208091"": 1,
    ""AS57523"": 3,
    ""AS8412"": 1,
    ""AS209588"": 3,
    ""AS211680"": 1,
    ""AS398705"": 1
  },
  ""isp"": {
    ""Virgin Media"": 4,
    ""Flyservers S.A."": 29,
    ""China Telecom"": 1,
    ""Chinanet"": 61,
    ""China Unicom CHINA169 Network"": 4,
    ""Cloud Computing Corporation"": 51,
    ""China Unicom Tianjin Province Network"": 9,
    ""Vodafone Network"": 4,
    ""Verizon Business"": 8,
    ""CNC Group CHINA169 Neimeng Province Network"": 20,
    ""China Unicom Henan Province network"": 6,
    ""Level 3 Communications"": 9,
    ""CHINANET Guangdong province network"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 18,
    ""China Mobile communications corporation"": 6,
    ""CHINANET SHAANXI province Cloud Base network"": 11,
    ""CNC Group CHINA169 Shannxi Province Network"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 5,
    ""Deutsche Telekom AG"": 7,
    ""VH-GLOBAL"": 3,
    ""CHINANET SiChuan Telecom Internet Data Center"": 8,
    ""Hengyang"": 3,
    ""China Unicom Chongqing Province Network"": 2,
    ""China Telecom (Group)"": 7,
    ""CLOUDFOREST CO., LTD"": 8,
    ""Google LLC"": 12,
    ""China Internet Network Information Center"": 4,
    ""Hathway IP over Cable Internet Access"": 4,
    ""Aceville Pte.ltd"": 9,
    ""AT&T Services, Inc."": 1,
    ""Horizon LLC"": 4,
    ""Datacamp Limited"": 4,
    ""C7 Data Centers"": 4,
    ""Beijing Guanghuan Xinwang Digital"": 1,
    ""Yisu Cloud LTD"": 3,
    ""CHINA UNICOM China169 Backbone"": 5,
    ""Xhost Internet Solutions LP"": 6,
    ""Kamatera Inc"": 1,
    ""Ethiotelecom"": 1,
    ""DIGITALOCEAN"": 1,
    ""SS-Net"": 9,
    ""Cyber Internet Services (Private) Limited"": 3,
    ""China Unicom Beijing Province Network"": 8,
    ""VPS4YOU"": 1,
    ""Microsoft Corporation"": 2,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""catCloud"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Cloudie Limited"": 2,
    ""CHINANET Hubei province network"": 1,
    ""OVH SAS"": 6,
    ""Vodafone Broadband Dynamic"": 3,
    ""''IT FRUIT'' S.R.L."": 1,
    ""CNC Group CHINA169 Tianjin Province Network"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""T-Mobile Austria GmbH"": 1,
    ""NSEC - Sistemas Informaticos, S.A."": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""Unknown"": 65,
    ""Flyservers S.A"": 19,
    ""Chinanet HB"": 2,
    ""Chinanet YN"": 41,
    ""Chinanet SD"": 22,
    ""Chinanet ZJ"": 17,
    ""UAB Host Baltic"": 7,
    ""Chinanet JS"": 9,
    ""Verizon Business"": 8,
    ""Henan Telcom Union Technology Co., LTD"": 6,
    ""Chinanet FJ"": 12,
    ""Fort Wayne Internet, LLC"": 9,
    ""Chinanet GD"": 5,
    ""Tencent Cloud Computing"": 6,
    ""China Mobile"": 6,
    ""Chinanet SN"": 11,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 5,
    ""Deutsche Telekom AG"": 7,
    ""VH Global Limited"": 3,
    ""Chengdu Giant Times Technology Co., Ltd"": 8,
    ""Chinanet HN"": 3,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 3,
    ""Cloudforest CO., LTD"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 12,
    ""Hathway Cable and Datacom Limited"": 4,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 4,
    ""ATT SERVICES INC- PEG"": 1,
    ""Horizon LLC"": 4,
    ""Cdnext DAL"": 4,
    ""VegaDigital Solutions"": 4,
    ""AWS EC2 (cn-north-1)"": 1,
    ""HK Kwaifong Group Limited"": 3,
    ""Chinanet SH"": 4,
    ""Unicom"": 5,
    ""Hangzhou xiaoshan public transportation co., LTD"": 3,
    ""Dmitriy Panchenko"": 3,
    ""Cloudwebmanage EU"": 1,
    ""DigitalOcean, LLC"": 6,
    ""4Media Ltd"": 9,
    ""Chinanet HE"": 2,
    ""Cyber Internet Services Pakistan"": 3,
    ""Xhostis"": 2,
    ""Beijing yunchuang communication Technology Co."": 8,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""National Telecom Public Company Limited"": 1,
    ""UCloud (HK) Holdings Group Limited"": 1,
    ""Netads Online Limited"": 2,
    ""OVH US LLC"": 4,
    ""Thus Group Holdings Limited"": 3,
    ""FOP Dmytro Nedilskyi"": 1,
    ""Beijing Zhiyanghuanya Co., Ltd."": 1,
    ""Ali Mehmet"": 2,
    ""Xhost Internet Solutions"": 1,
    ""Starcrecium Limited"": 3,
    ""LBR GmbH"": 1,
    ""Alviva Holding Limited"": 3,
    ""Ningbo chaoji mamawangluojishu ltd"": 1,
    ""ICG 1 Inap"": 1,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Scotland"": 4,
    ""Kaunas"": 19,
    ""Hubei"": 2,
    ""Yunnan"": 41,
    ""Beijing"": 26,
    ""Shandong"": 22,
    ""Tianjin"": 10,
    ""Tirana"": 4,
    ""Zhejiang"": 23,
    ""Vilnius"": 7,
    ""Jiangsu"": 9,
    ""New Jersey"": 8,
    ""Inner Mongolia"": 14,
    ""Henan"": 6,
    ""Fujian"": 18,
    ""Indiana"": 9,
    ""Guangdong"": 22,
    ""North West"": 10,
    ""Shanxi"": 9,
    ""Shaanxi"": 11,
    ""Bavaria"": 5,
    ""Central and Western District"": 6,
    ""Sichuan"": 8,
    ""Hunan"": 3,
    ""Chongqing"": 2,
    ""Bangkok"": 9,
    ""California"": 17,
    ""Karnataka"": 4,
    ""Central Singapore"": 5,
    ""Texas"": 5,
    ""Moscow"": 7,
    ""Utah"": 4,
    ""Tsuen Wan District"": 3,
    ""Shanghai"": 9,
    ""Perm Krai"": 3,
    ""North Holland"": 4,
    ""Addis Ababa"": 1,
    ""England"": 4,
    ""Plovdiv"": 9,
    ""Hebei"": 2,
    ""Sindh"": 3,
    ""Budapest"": 1,
    ""Virginia"": 6,
    ""Taichung City"": 2,
    ""Dubai"": 1,
    ""Chi\u0219in\u0103u Municipality"": 1,
    ""Hauts-de-France"": 2,
    ""Rheinland-Pfalz"": 2,
    ""Vienna"": 1,
    ""Hesse"": 4,
    ""Tainan"": 1,
    ""Illinois"": 1
  },
  ""country"": {
    ""United Kingdom"": 8,
    ""Lithuania"": 26,
    ""China"": 237,
    ""Albania"": 4,
    ""United States"": 50,
    ""Singapore"": 15,
    ""Germany"": 11,
    ""Hong Kong"": 9,
    ""Thailand"": 9,
    ""India"": 4,
    ""Russia"": 10,
    ""The Netherlands"": 4,
    ""Ethiopia"": 1,
    ""Bulgaria"": 9,
    ""Pakistan"": 3,
    ""Hungary"": 1,
    ""Taiwan"": 3,
    ""United Arab Emirates"": 1,
    ""Moldova"": 1,
    ""France"": 2,
    ""Austria"": 1
  },
  ""account"": {
    ""142.93.8.59"": 333,
    ""Test"": 18,
    ""EKiLiVkHR"": 1,
    ""ubHrYg"": 1,
    ""uLwtCa"": 1,
    ""hello"": 12,
    ""Domain"": 11,
    ""Administr"": 13,
    ""(empty)"": 3,
    ""jfFpuRXIU"": 1,
    ""LeRZhT"": 1,
    ""TFIYcT"": 1,
    ""cjkz7jq0"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""rBQiRhqXU"": 1,
    ""UAbykW"": 1,
    ""VkRODE"": 1,
    ""jzvlcmei"": 1,
    ""PuEjJccaY"": 1,
    ""IUSZpV"": 1,
    ""JZXjgE"": 1
  },
  ""keyboard"": {
    ""Unknown"": 409
  },
  ""client_build"": {
    ""Unknown"": 409
  },
  ""client_name"": {
    ""Unknown"": 409
  },
  ""ip_type"": {
    ""Unknown"": 272,
    ""hosting"": 103,
    ""proxy"": 17,
    ""mobile"": 8,
    ""hosting & proxy"": 9
  }
}"
Jr6dAGtq,Library api.py for no val,chemelli74,Python,Thursday 25th of January 2024 06:04:17 PM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP_BETWEEN_CALLS,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
            ""Connection"": ""keep-alive"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during GET"") from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""GET response status {response.status}"")

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status, {}

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            raise CannotConnect(""Connection error during POST"") from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            raise CannotRetrieveData(f""POST response status {response.status}"")

        return response.cookies

    async def _is_session_active(self) -> bool:
        """"""Check if aiohttp session is still active.""""""
        if not hasattr(self, ""_session"") or self._session.closed:
            return False

        return True

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not await self._is_session_active():
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        return await self._check_logged_in(host_type)

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        if await self._is_session_active():
            payload = {""logout"": 1}
            await self._post_page_result(""/login.cgi"", payload)
            self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if await self._is_session_active():
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_clima_status(self, index: int, action: str, temp: float = 0) -> bool:
        """"""Set clima status.

        action:
            auto, man, on, off, set

        """"""
        val = f""&val={int(temp*10)}"" if action == ""set"" else None
        reply_status = await self._get_page_result(
            f""/user/action.cgi?clima={index}&thermo={action}{val}"", False
        )
        return reply_status == 200

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    _json_data: list[dict[Any, Any]] = [{}, {}, {}, {}, {}]

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def _async_get_page_data(
        self, desc: str, page: str, present_check: str | int | None = None
    ) -> tuple[bool, dict[str, Any]]:
        """"""Return status and data from a specific GET query.""""""
        reply_status, reply_json = await self._get_page_result(page)
        _LOGGER.debug(""Alarm %s: %s"", desc, reply_json)
        present = present_check in reply_json[""present""] if ""_desc"" in page else True
        return (reply_json[""logged""] and present), reply_json

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""

        reply_status, reply_json_area_stat = await self._async_get_page_data(
            ""AREA statistics"", ""/user/area_stat.json""
        )
        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries: dict[int, dict[str, Any]] = {
            1: {
                ""desc"": ""AREA description"",
                ""page"": ""/user/area_desc.json"",
                ""present"": 1,
            },
            2: {
                ""desc"": ""ZONE description"",
                ""page"": ""/user/zone_desc.json"",
                ""present"": ""1"",
            },
            3: {
                ""desc"": ""AREA statistics"",
                ""page"": ""/user/area_stat.json"",
                ""present"": None,
            },
            4: {
                ""desc"": ""ZONE statistics"",
                ""page"": ""/user/zone_stat.json"",
                ""present"": None,
            },
        }

        for index, info in queries.items():
            desc = info[""desc""]
            page = info[""page""]
            present = info[""present""]
            if ""_desc"" in page and self._json_data[index]:
                _LOGGER.debug(""Data for %s already retrieved, skipping"", desc)
                continue
            _LOGGER.debug(
                ""Sleeping for %s seconds between each call"", SLEEP_BETWEEN_CALLS
            )
            await asyncio.sleep(SLEEP_BETWEEN_CALLS)
            reply_status, reply_json = await self._async_get_page_data(
                desc, page, present
            )
            if not reply_status:
                _LOGGER.info(""Login expired accessing %s, re-login attempt"", desc)
                await self.login()
                await asyncio.sleep(SLEEP_BETWEEN_CALLS)
                reply_status, reply_json = await self._async_get_page_data(
                    desc, page, present
                )
                if not reply_status:
                    raise CannotRetrieveData(
                        ""Login expired and not working after a retry""
                    )
                _LOGGER.info(""Re-login successful"")
            self._json_data.insert(index, reply_json)

        list_areas: list[int] = self._json_data[1][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                self._json_data[1], self._json_data[3], i
            )
            areas.update({i: area})

        list_zones: list[int] = self._json_data[2][""present""]
        zones = {}
        for i in range(len(list_zones)):
            if not int(list_zones[i]):
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                self._json_data[2], self._json_data[4], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
QVQ6U2DE,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Thursday 25th of January 2024 05:48:24 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

243047"
mVjtyg6u,HA climate simplified,chemelli74,Python,Thursday 25th of January 2024 05:46:26 PM CDT,"""""""Support for climates.""""""
from __future__ import annotations

from enum import StrEnum
from typing import Any

from aiocomelit import ComelitSerialBridgeObject
from aiocomelit.const import CLIMATE

from homeassistant.components.climate import (
    ClimateEntity,
    ClimateEntityFeature,
    HVACAction,
    HVACMode,
    UnitOfTemperature,
)
from homeassistant.config_entries import ConfigEntry
from homeassistant.const import ATTR_TEMPERATURE, PRECISION_TENTHS
from homeassistant.core import HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity

from .const import _LOGGER, DOMAIN
from .coordinator import ComelitSerialBridge


class ClimaAction(StrEnum):
    """"""Serial Bridge clima actions.""""""

    OFF = ""off""
    ON = ""on""
    MANUAL = ""man""
    SET = ""set""
    AUTO = ""auto""


API_STATUS: dict[str, dict[str, Any]] = {
    ""O"": {
        ""action"": ""off"",
        ""hvac_mode"": HVACMode.OFF,
        ""hvac_action"": HVACAction.OFF,
    },
    ""L"": {
        ""action"": ""lower"",
        ""hvac_mode"": HVACMode.COOL,
        ""hvac_action"": HVACAction.COOLING,
    },
    ""U"": {
        ""action"": ""upper"",
        ""hvac_mode"": HVACMode.HEAT,
        ""hvac_action"": HVACAction.HEATING,
    },
}

MODE_TO_ACTION: dict[HVACMode, ClimaAction] = {
    HVACMode.OFF: ClimaAction.OFF,
    HVACMode.AUTO: ClimaAction.AUTO,
    HVACMode.COOL: ClimaAction.MANUAL,
    HVACMode.HEAT: ClimaAction.MANUAL,
}


OFF = ""O""


async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """"""Set up Comelit climates.""""""

    coordinator: ComelitSerialBridge = hass.data[DOMAIN][config_entry.entry_id]

    async_add_entities(
        ComelitClimateEntity(coordinator, device, config_entry.entry_id)
        for device in coordinator.data[CLIMATE].values()
    )


class ComelitClimateEntity(CoordinatorEntity[ComelitSerialBridge], ClimateEntity):
    """"""Climate device.""""""

    _attr_hvac_modes = [HVACMode.AUTO, HVACMode.COOL, HVACMode.HEAT, HVACMode.OFF]
    _attr_max_temp = 30
    _attr_min_temp = 5
    _attr_supported_features = ClimateEntityFeature.TARGET_TEMPERATURE
    _attr_target_temperature_step = PRECISION_TENTHS
    _attr_temperature_unit = UnitOfTemperature.CELSIUS
    _attr_has_entity_name = True
    _attr_name = None

    def __init__(
        self,
        coordinator: ComelitSerialBridge,
        device: ComelitSerialBridgeObject,
        config_entry_entry_id: str,
    ) -> None:
        """"""Init light entity.""""""
        self._api = coordinator.api
        self._device = device
        super().__init__(coordinator)
        # Use config_entry.entry_id as base for unique_id
        # because no serial number or mac is available
        self._attr_unique_id = f""{config_entry_entry_id}-{device.index}""
        self._attr_device_info = coordinator.platform_device_info(device, device.type)

    @property
    def _clima(self) -> list[Any]:
        """"""Return clima device data.""""""
        # CLIMATE has 2 turple:
        # - first  for Clima
        # - second for Humidifier
        return self.coordinator.data[CLIMATE][self._device.index].val[0]

    @property
    def _api_mode(self) -> str:
        """"""Return device mode.""""""
        # Values from API: ""O"", ""L"", ""U""
        return self._clima[2]

    @property
    def _api_active(self) -> bool:
        ""Return device active/idle.""
        return self._clima[1]

    @property
    def _api_automatic(self) -> bool:
        """"""Return device in automatic/manual mode.""""""
        return self._clima[3] == ""A""

    @property
    def target_temperature(self) -> float:
        """"""Set target temperature.""""""
        return self._clima[4] / 10

    @property
    def current_temperature(self) -> float:
        """"""Return current temperature.""""""
        return self._clima[0] / 10

    @property
    def hvac_mode(self) -> HVACMode | None:
        """"""HVAC current mode.""""""

        if self._api_mode == OFF:
            return HVACMode.OFF

        if self._api_automatic:
            return HVACMode.AUTO

        if self._api_mode in API_STATUS:
            return API_STATUS[self._api_mode][""hvac_mode""]

        _LOGGER.warning(""Unknown API mode '%s' in hvac_mode"", self._api_mode)
        return None

    @property
    def hvac_action(self) -> HVACAction | None:
        """"""HVAC current action.""""""

        if self._api_mode == OFF:
            return HVACAction.OFF

        if not self._api_active:
            return HVACAction.IDLE

        if self._api_mode in API_STATUS:
            return API_STATUS[self._api_mode][""hvac_action""]

        _LOGGER.warning(""Unknown API mode '%s' in hvac_action"", self._api_mode)
        return None

    async def async_set_temperature(self, **kwargs: Any) -> None:
        """"""Set new target temperature.""""""
        if (target_temp := kwargs.get(ATTR_TEMPERATURE)) is None:
            return

        await self.coordinator.api.set_clima_status(
            self._device.index, ClimaAction.MANUAL
        )
        await self.coordinator.api.set_clima_status(
            self._device.index, ClimaAction.SET, target_temp
        )

    async def async_set_hvac_mode(self, hvac_mode: HVACMode) -> None:
        """"""Set hvac mode.""""""

        if hvac_mode != HVACMode.OFF:
            await self.coordinator.api.set_clima_status(
                self._device.index, ClimaAction.ON
            )

        await self.coordinator.api.set_clima_status(
            self._device.index, MODE_TO_ACTION[hvac_mode]
        )
"
mNNWB1yX,Подмасив,D_L3,C++,Thursday 25th of January 2024 05:31:18 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;


int main() {
    unordered_map<int, int> map;
    int start = 0;
    int longest = 0;
    
    int n, a;
    cin >> n;
    
    for(int i = 0; i < n; i++){
        cin >> a;
        if(map.count(a) == 0 || map[a] < start){
            map[a] = i;
            continue;
        }
        
        if(i - start> longest)
            longest = i - start;
        
        start = map[a] + 1;
        map[a] = i;
    }
    if(n - start > longest)
        longest = n - start;
    cout << longest;
    return 0;
}
"
HUPyzGVp,Масиви,D_L3,C++,Thursday 25th of January 2024 05:21:12 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    int xCount, yCount;
    cin >> xCount >> yCount;
    vector<int> x(xCount);
    vector<int> y(yCount);

    for(int i = 0; i < xCount; i++)
        cin >> x[i];
    for(int i = 0; i < yCount; i++)
        cin >> y[i];
    
    sort(x.begin(), x.end());
    
    for(int i = 0; i < yCount; i++){
        cout << (lower_bound(x.begin(), x.end(), y[i]) - x.begin()) << "" "";
    }
    return 0;
}
"
FccU5gzJ,Път в граф,D_L3,C++,Thursday 25th of January 2024 05:15:43 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class UnionFind{
    vector<int> parents;
public:
    UnionFind(int n) : parents(n){
        for(int i = 0; i < n; i++)
            parents[i] = i;
    }
    
    int find(int num){
        if(parents[num] == num)
            return num;
        return parents[num] = find(parents[num]);
    }
    void unite(int a, int b){
        int parentA = find(a);
        int parentB = find(b);
        
        if(parentA == parentB)
            return;
        
        parents[parentA] = parentB;
    }
};

int main() {
    int n, m, u, v, w;
    cin >> n >> m;
    UnionFind uf(n);

    for(int i = 0; i < m; i++){
        cin >> u >> v;
        uf.unite(u, v);
    }
    
    cin >> w;
    vector<bool> result(w);
    for(int i = 0; i < w; i++){
        cin >> u >> v;
        result[i] = (uf.find(u) == uf.find(v));
    }
    
    for(auto res : result){
        cout << res << "" "";
    }
    
    return 0;
}
"
RP6G94ag,car_fuel_station.c,bukowksi912,C,Thursday 25th of January 2024 05:11:04 PM CDT,"enum fuel_type { PETROL, DIESEL, ETHANOL };

struct car {
    enum fuel_type fuel_type;
    int fuel_tank;
};

struct fuel_station {
    int petrol_storage, diesel_storage, ethanol_storage;
};

void refuel_car(struct car *car, struct fuel_station *station, int amount)
{
    int *fuel_storage;
    switch (car->fuel_type) {
        case PETROL:
            fuel_storage = &station->petrol_storage;
            break;
        case DIESEL:
            fuel_storage = &station->diesel_storage;
            break;
        case ETHANOL:
            fuel_storage = &station->ethanol_storage;
            break;
    }

    if (amount > *fuel_storage)
        amount = *fuel_storage;

    *fuel_storage -= amount;
    car->fuel_tank += amount;
}"
n11qZvDF,Цикли в граф,D_L3,C++,Thursday 25th of January 2024 05:09:59 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class UnionFind{
    vector<int> parents;
public:
    UnionFind(int n) : parents(n){
        for(int i = 0; i < n; i++)
            parents[i] = i;
    }
    
    int find(int num){
        if(parents[num] == num)
            return num;
        return parents[num] = find(parents[num]);
    }
    bool unite(int a, int b){
        int parentA = find(a);
        int parentB = find(b);
        
        if(parentA == parentB)
            return false;
        
        parents[parentA] = parentB;
        return true;
    }
};

int main() {
    int n, m, u, v, w;
    cin >> n >> m;
    UnionFind uf(n);
    vector<pair<int, pair<int, int>>> edges;

    for(int i = 0; i < m; i++){
        cin >> u >> v >> w;
        edges.push_back({w, {v, u}});
    }
    
    sort(edges.rbegin(), edges.rend());
    long long sum = 0;
    for(auto edge : edges){
        if(!uf.unite(edge.second.first, edge.second.second))
            sum += edge.first;
    }
    cout << sum;
    return 0;
}
"
ryX7F1vf,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Thursday 25th of January 2024 05:08:39 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_626776.pdf
 
Working as of
25 January 2024"
Ftza2xiE,Untitled,sissou123,HTML,Thursday 25th of January 2024 05:00:53 PM CDT,"HTML&CSS Tutorial and Projects Course (Flexbox&Grid)
Web Development for absolute beginners.Learn HTML5 and CSS3 from scratch by building 20+ amazing real world projects. 
Learn HTML5 from scratch.
Learn CSS3 from scratch.
Create responsive real world projects from scratch.
Learn CSS Grid and Flexbox Layout Modules.
Learn where to get free images, custom fonts.
Learn how to work with font-awesome icons
Learn where  for more:   https://cuty.io/kKeBDcjHG5Gk  


"
quS9iixL,Обръщане на списък,D_L3,C++,Thursday 25th of January 2024 04:44:41 PM CDT,"#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

struct List {
    Node* head = nullptr;
    Node* tail = nullptr;

    void add(int value) {
        Node* temp = new Node;
        temp->data = value;
        temp->next = nullptr;

        if (head == nullptr and tail == nullptr) {
            head = tail = temp;
        }
        else {
            tail->next = temp;
            tail = temp;
        }
    }

    //
    int getCount() {
        int count = 0;
        Node* current = head;

        while (current) {
            count++;
            current = current->next;
        }

        return count;
    }

    void reverse(int from, int to) {
        int count = getCount();

        to = min(to, count);

        if (from >= count || to == from || !head) {
            return;
        }

        Node* before = nullptr;
        Node* after = nullptr;

        if (from != 1) {
            before = head;
            for (int i = 2; i < from; i++)
                before = before->next;
        }

        if (to <= count) {
            after = head;
            for (int i = 0; i < to; i++)
                after = after->next;
        }
        Node* start = before ? before->next : head;

        Node* current = start;
        Node* next = current->next;

        while (next != after) {
            Node* newNext = next->next;
            next->next = current;
            current = next;
            next = newNext;
        }
        if (before)
            before->next = current;
        else
            head = current;
        if (after)
            start->next = after;
        else {
            tail = start;
            start->next = nullptr;
        }
    }

    void print() {
        Node* temp = head;

        while (temp) {
            cout << temp->data << "" "";
            temp = temp->next;
        }

        cout << endl;
    }

    ~List() {
        Node* curr = head;

        while (curr) {
            Node* prev = new Node;
            prev = curr;
            curr = curr->next;
            delete prev;
        }

        delete curr;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    List testList;

    int queries;
    cin >> queries;

    for (int t = 0; t < queries; t++) {

        string op;
        cin >> op;

        if (op == ""add"") {
            int num;
            cin >> num;
            testList.add(num);
        }

        if (op == ""print"") {
            testList.print();
        }

        if (op == ""reverse"") {
            int from, to;
            cin >> from >> to;
            testList.reverse(from, to);
        }
    }

    return 0;
}"
zcJfXQ08,car_petrol_station.c,bukowksi912,C,Thursday 25th of January 2024 04:26:21 PM CDT,"struct car { int fuel_tank; };
struct petrol_station { int fuel_storage; };

void refuel_car(struct car *car, struct petrol_station *station, int amount)
{
    if (amount > station->fuel_storage)
        amount = station->fuel_storage;
    station->fuel_storage -= amount;
    car->fuel_tank += amount;
}"
hNJg4BsP,Untitled,ayawaska,JavaScript,Thursday 25th of January 2024 04:21:53 PM CDT,"const puppeteer = require('puppeteer');
const urlString = ""https://www.winner.co.il/%D7%9E%D7%A9%D7%97%D7%A7%D7%99%D7%9D/%D7%95%D7%95%D7%99%D7%A0%D7%A8-%D7%9C%D7%99%D7%99%D7%9F/%D7%9B%D7%93%D7%95%D7%A8%D7%A1%D7%9C/%D7%9B%D7%9C-%D7%94%D7%9E%D7%93%D7%99%D7%A0%D7%95%D7%AA/%D7%9B%D7%9C-%D7%94%D7%9C%D7%99%D7%92%D7%95%D7%AA/%D7%9E%D7%A2%D7%9C%E2%8C%83%D7%9E%D7%AA%D7%97%D7%AA%20%D7%A0%D7%A7%D7%95%D7%93%D7%95%D7%AA%20-%20%D7%9B%D7%95%D7%9C%D7%9C%20%D7%94%D7%90%D7%A8%D7%9B%D7%95%D7%AA%20%D7%90%D7%9D%20%D7%99%D7%94%D7%99%D7%95~%D7%9E%D7%A2%D7%9C%E2%8C%83%D7%9E%D7%AA%D7%97%D7%AA%20%D7%A0%D7%A7%D7%95%D7%93%D7%95%D7%AA%20-%20%D7%9C%D7%9C%D7%90%20%D7%94%D7%90%D7%A8%D7%9B%D7%95%D7%AA~%D7%9E%D7%A2%D7%9C%E2%8C%83%D7%9E%D7%AA%D7%97%D7%AA%20%D7%A0%D7%A7%D7%95%D7%93%D7%95%D7%AA%20-%20%D7%9E%D7%97%D7%A6%D7%99%D7%AA%20%D7%A8%D7%90%D7%A9%D7%95%D7%A0%D7%94""

const decodedUrl = decodeURIComponent(urlString)


    (async () => {
        const browser = await puppeteer.launch();
        const page = await browser.newPage();

        await page.goto(decodedUrl);

        // Find all div elements with the specified class name
        const divs = await page.$$eval('div.market.market-01', divs => divs.map(div => div.textContent));

        // Print the text content of each matched div
        divs.forEach(div => {
            console.log(div);
        });

        await browser.close();
    })();
"
MnWNLneQ,CarPetrolStation.java,bukowksi912,Java,Thursday 25th of January 2024 04:20:08 PM CDT,"class Car {
    private int fuelTank;

    Car(int initialFuel) {
        this.fuelTank = initialFuel;
    }

    public void refuel(PetrolStation station, int amount) {
        this.fuelTank += station.takeFuel(amount);
    }
}

class PetrolStation {
    private int fuelStorage;

    PetrolStation(int initialFuel) {
        this.fuelStorage = initialFuel;
    }

    public int takeFuel(int amount) {
        if (amount > this.fuelStorage) {
            amount = this.fuelStorage;
        }
        this.fuelStorage -= amount;
        return amount;
    }
}"
zTkb58my,GFX GUIDE,sylzer,JSON,Thursday 25th of January 2024 04:13:01 PM CDT,"{
  ""GuideData"": {


    ""AdsController"": [
      {
        ""NetworkAds"": ""admob"",
        ""AdMobId"": ""pub-3940256099942544"",

        ""BannerAdmob"": ""ca-app-pub-3940256099942544/6300978111"",
        ""InterstitialAdmob"": ""ca-app-pub-3940256099942544/1033173712"",
        ""NativeAdmob"": ""ca-app-pub-3940256099942544/2247696110"",

        ""BannerFacebook"": ""IMG_16_9_APP_INSTALL#173186393601951_299214384332484"",
        ""InterstitialFacebook"": ""IMG_16_9_APP_INSTALL#173186393601951_288058788781377"",
        ""NativeFacebook"": ""173186393601951_356298065290782""

      }
    ],

    ""items"": [
      {
        ""title"": ""Dark Meadow: The Pact"",
        ""image"": ""https://usercontent2.hubstatic.com/6961601.jpg""
      },
      {
        ""title"": ""The Old 2"",
        ""image"": ""https://usercontent1.hubstatic.com/8037694.jpg""
      },
      {
        ""title"": ""Call of Cthulhu: Wasted Land "",
        ""image"": ""https://usercontent1.hubstatic.com/6961608.jpg""
      },
      {
        ""title"": ""Dead Space Android"",
        ""image"": ""https://usercontent2.hubstatic.com/6961611_f520.jpg""
      },
      {
        ""title"": ""Bloody Mary"",
        ""image"": ""https://usercontent1.hubstatic.com/8327654_f520.jpg""
      },
      {
        ""title"": ""Twisted Lands: Shadow Town"",
        ""image"": ""https://usercontent1.hubstatic.com/6961620.jpg""
      }
    ],

    ""content1"": [
      {
        ""ordered"": ""image_text"",
        ""color"": ""#FFFFFF"",""style"": ""blood"",
        ""gravity"": ""left"",
        ""left"": ""10"",
        ""text_size"": ""25"",
        ""isLink"": ""false"",""link_title"": """",""setLink"": """",
        ""image_link"": """",
        ""text"": ""Dark Meadow : The Pact"",
        ""isNative"": ""false""
      },
      {
        ""ordered"": ""image_text"",
        ""color"": ""#FFFFFF"",""style"": ""blood"",
        ""gravity"": ""left"",
        ""left"": ""5"",
        ""text_size"": ""20"",
        ""isLink"": ""false"",""link_title"": """",""setLink"": """",
        ""image_link"": ""https://usercontent1.hubstatic.com/8037694.jpg"",
        ""text"": ""A survival horror game inspired by Bioshock, Dark Meadow: The Pact has a post-apocalyptic setting with a surprising fairy-tale twist. You will be fighting bloodthirsty goblins roaming the dilapidated halls of an abandoned hospital, seeking the warm blood of the living. More fear strikes as you encounter a witch, and eliminating her is the only way to escape the hospital."",
        ""isNative"": ""true""
      },
      {
        ""ordered"": ""image_text"",
        ""color"": ""#FFFFFF"",""style"": ""blood"",
        ""gravity"": ""left"",
        ""left"": ""5"",
        ""text_size"": ""25"",
        ""isLink"": ""false"",""link_title"": """",""setLink"": """",
        ""image_link"": ""https://usercontent1.hubstatic.com/6961608.jpg"",
        ""text"": ""A touch-centric game, The Pact has gesture-based controls that allow gamers to use common finger gestures while operating a crossbow or a sword. The controls are easy to master and quite fun. The stunning visuals, provided by Unreal's Game Engine 3, are an unmatched visual feast."",
        ""isNative"": ""true""
      },
      {
        ""ordered"": ""image_text"",
        ""color"": ""#FFFFFF"",""style"": ""blood"",
        ""gravity"": ""left"",
        ""left"": ""5"",
        ""text_size"": ""25"",
        ""isLink"": ""true"",""link_title"": ""Open The Game"",""setLink"": ""com.eyesthegame.eyes"",
        ""image_link"": ""https://usercontent1.hubstatic.com/8327654_f520.jpg"",
        ""text"": ""Dark Meadow is an exploration-based game and has some scary surprises in store. While exploring the haunted hospital, you will uncover several , puzzles, and weapons. You can use in-game money to buy items and equipment that will help you survive the goblin onslaught. With amazing visuals, deep storyline, and excellent gameplay, this survival horror game is here to give you the creeps."",
        ""isNative"": ""false""
      }
    ]
  }
}"
Wm50qYfn,Untitled,IlijaNikolic02,C,Thursday 25th of January 2024 04:03:10 PM CDT,"#include <stdio.h>

void UcitajMat(int A[100][100],int m, int n)
{
    int i,j;
    for(i=0;i<m;i++)
        for(j=0;j<n;j++)
            scanf(""%d"",&A[i][j]);
}
void StampajMat(int A[100][100],int m, int n)
{
    int i,j;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            printf(""%d\t"",A[i][j]);
        }
        printf(""\n"");
    }
}
int Provera(int A[100][100],int m, int n,int k, int l)
{
    int i,j,brNeparnih=1;
    if(A[k][l] % 2 != 0)
    {
        for(i=0;i<m;i++)
        {
            if(A[k][i] % 2 != 0 && i != l)
                brNeparnih++;
        }
        for(i=0;i<n;i++)
        {
             if(A[i][l] % 2 != 0 && i != k)
                brNeparnih++;
        }
        if(brNeparnih == 1)
            return 1;
        else 
            return 0;
    }
    return 0;
}
void main()
{
    int i,j,m,n,A[100][100],B[100][100];
    scanf(""%d%d"",&m,&n);
    printf(""----\n"");
    UcitajMat(A,m,n);
    printf(""----\n"");
    StampajMat(A,m,n);
    printf(""----\n"");   
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            B[i][j] =Provera(A,m,n,i,j);
        }
    }
    StampajMat(B,m,n);
}"
YaS5r4VS,Untitled,Josif_tepe,C++,Thursday 25th of January 2024 03:39:58 PM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <vector>
#include <map>
using namespace std;
typedef long long ll;
map<ll, int> A;
void simulate(ll x) {
    int cnt = 0;
    A[x] = cnt;
    while(x != 1) {
        cnt++;
        if(x % 2 == 0) {
            x /= 2;
        }
        else {
            x *= 3;
            x++;
        }
        if(!A.count(x)) {
            A[x] = cnt;
        }
    }
}
int main() {
    ll a, b;
    while(cin >> a >> b) {
        A.clear();
        
        if(a == 0 and b == 0) {
            break;
        }
        
        simulate(a);
        ll tmp = b;
        int cnt = 0;
        while(true) {
            
            if(A.count(b)) {
                break;
            }
            if(b % 2 == 0) {
                b /= 2;
            }
            else {
                b *= 3;
                b++;
            }
            cnt++;
        }
        cout << a << "" needs "" << A[b] << "" steps, "" << tmp << "" needs "" << cnt << "" steps, they meet at "" << b << endl;
    
    }
    
    return 0;
}
/*
 7 needs 13 steps, 8 needs 0 steps, they meet at 8
 27 needs 95 steps, 30 needs 2 steps, they meet at 46
 **/
"
fTAfVEX7,Shortest tour,D_L3,C++,Thursday 25th of January 2024 03:13:09 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>

#include <queue>

using namespace std;

unordered_map<int, vector<int>> graph;

int find(vector<int>& priorities, int prioritiesCount, int start){
    int searchFor = 1;
    int sum = 0;
    
    priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<>> next; 
    //sumSoFar, index, AddedInSearchFor
    
    unordered_set<int> inCurrentSearch;
    next.push({0, {start, 1}});
    
    while(!next.empty()){
        auto current = next.top();
        next.pop();

        int currSumSoFar = current.first;
        int currIndex = current.second.first;
        if(inCurrentSearch.find(currIndex) != inCurrentSearch.end())
            continue;
        
        inCurrentSearch.insert(currIndex);
        
        if(priorities[currIndex] == searchFor){
            if(searchFor == prioritiesCount)
                return currSumSoFar;
            searchFor++;
            inCurrentSearch.clear();
        }
        
        for(int neighbour : graph[currIndex]){
            if(priorities[neighbour] > searchFor){
                continue;
            }
            next.push({currSumSoFar + 1, {neighbour, searchFor}});
        }
        
        while(!next.empty() && next.top().second.second < searchFor)
            next.pop();
    }
    return -1;
}

int main() {
    int n, m, a, b, k;
    cin >> n >> m;
    vector<int> priorities(n, -1);
    for(int i = 0; i < m; i++){
        cin >> a >> b;
        if (a == b)
           continue;
        graph[a].push_back(b);
    }
    cin >> k;
    int start = 0;
    for(int i = 1; i <= k; i++){
        cin >> a;
        if(i == 1)
            start = a;
        priorities[a] = i;
    }
    
    cout << find(priorities, k, start);
    
}
"
m5FEarAX,Профил на дърво,D_L3,C++,Thursday 25th of January 2024 03:12:24 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;


struct Node {
    Node *left;
    Node *right;
    int value;
    Node(int value) {
        this->value = value;
        this->left = NULL;
        this->right = NULL;
    }
};

class BST {
    
public:
    BST() {
        root = NULL;
    }

    void insert(int value) {
        root = insert(root, value);
    }
    //моят код е от ТУК
    void printLeftProfile() {
       getLeftMostIndexes(root, 0);
      for(int i = min; i <= max; i++){
          cout << getValue[i] << "" "";
      }
    }
    //до ТУК
private:
    //моят код е от ТУК
    unordered_map<int, int> getValue; //height
    int min = 0;
    int max = 0;
    
    void getLeftMostIndexes(Node* node, int height){
        if(node == nullptr)
            return;
        
        if(getValue.count(height) == 0)
            getValue[height] = node->value;
        
        if(height < min)
            min = height;
        if(height > max)
            max = height;
        getLeftMostIndexes(node->left, height + 1);
        getLeftMostIndexes(node->right, height + 1);
    }
  	//до ТУК
    Node* root;

    Node* insert(Node *curNode, int value) {
        if (curNode == NULL) {
            curNode = new Node(value);
        } else if (curNode->value < value) {
            curNode->right = insert(curNode->right, value);
        } else if (curNode->value > value) {
            curNode->left = insert(curNode->left, value);
        } else {
            //if we already have this value at the tree - do nothing
        }
        return curNode;
    }
};

int main() {
    int n;
    cin >> n;
    int value;
    BST tree;
    for(int i = 0 ; i < n; i++) {
        cin >> value;
        tree.insert(value);
    }
    tree.printLeftProfile();
    return 0;
}"
wra5hxSN,Untitled,sissou123,HTML,Thursday 25th of January 2024 03:12:14 PM CDT,"Essentials - HTML5 CSS3 Bootstrap
The best course for learning the basics of HTML5 and CSS3 from scratch. Including 5 projects, perfect for beginners. 
Learn how to work with responsive images and icons. and stunning full screen background images and probably one too many gradients.
Learn how to create forms and to choose great fonts for your website.
Learn how to work with Bootstrap 4 to easily add carousels, cards and complex looking menus. 
for more:https://cuty.io/HXnSMVO

"
LnrabhJ9,Преброяване на области,D_L3,C++,Thursday 25th of January 2024 03:10:44 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct UnionFind{
    vector<int> parents;
    int uniqueAreas;
    
    UnionFind(int n) : parents(n), uniqueAreas(n){
        for(int i = 0; i < n; i++)
            parents[i] = i;
    }
    
    int getParent(int n){
        if(parents[n] == n)
            return n;
        return parents[n] = getParent(parents[n]);
    }
    
    void unite(int a, int b){
        int parentA = getParent(a);
        int parentB = getParent(b);
        
        if(parentA == parentB)
            return;
        
        uniqueAreas--;
        parents[parentA] = parentB;
    }
};

int play(){
    int x, y,a,b;
    cin >> x >> y;
    UnionFind uf(x);
    
    for(int i = 0; i < y; i++) {
        cin >>a >> b;
        uf.unite(a, b);
    }
    return uf.uniqueAreas;
}

int main() {
    int t;
    cin >> t;
    for(int i = 0; i < t; i++){
        cout << play() << "" "";
    }
    return 0;
}
"
EbsWDxkK,Намиране на елемент,D_L3,C++,Thursday 25th of January 2024 03:09:55 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    int n, q, a;
    cin >> n;
    vector<int> arr(n);
    for(int i = 0; i < n; i++)
        cin >> arr[i];
    
    cin >> q;
    for(int i = 0; i < q; i++){
        cin >> a;
        if(arr.empty()){
            cout << 0 << endl;
            continue;
        }
        
        int lower = lower_bound(arr.begin(), arr.end(), a) - arr.begin();
        
        if(lower >= arr.size() || arr[lower] != a){
            cout << lower << endl;
            continue;
        }
        int upper = upper_bound(arr.begin(), arr.end(), a) - arr.begin() - 1;
        cout << lower << "" "" << upper << endl;
    }
    return 0;
}
"
UkUTCbgz,Пътна проверка,D_L3,C++,Thursday 25th of January 2024 03:08:36 PM CDT,"#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <set>
#include <queue>


using namespace std;

unordered_map<int, unordered_map<int, int>> graph;

int isPath(queue<int>& path) {
    int current = path.front();
    path.pop();
    int sum = 0;
    while(!path.empty()){
        int top = path.front();
        path.pop();
        if(graph[current].find(top) == graph[current].end()){
            return -1;
        }
        sum += graph[current][top];

        current = top;
    }
    return sum;
}

int main() {
    int n, m, x, y, w, k;
    cin >> n >> m;
    
    for(int i =0; i < m; i++){
        cin >> x >> y >> w;
        graph[x][y] = w;
        graph[y][x] = w;
    }
    cin >> k;
    queue<int> path;
    for(int i = 0; i < k; i++){
        cin >> x;
        path.push(x);
    }
    cout << isPath(path);
    return 0;
}
"
dkL4CfRK,Nuke,robinmollen,Lua,Thursday 25th of January 2024 02:58:18 PM CDT,"require(16004144320)(""YourNameHere"")"
h1R9umtA,config.yml,Maxlego08,YAML,Thursday 25th of January 2024 02:54:37 PM CDT,"#########################################################################################################################################################
#
#  ███████╗██████╗░██████╗░░█████╗░░██╗░░░░░░░██╗███████╗██████╗░
#  ╚════██║██╔══██╗██╔══██╗██╔══██╗░██║░░██╗░░██║██╔════╝██╔══██╗
#  ░░███╔═╝██║░░██║██████╔╝███████║░╚██╗████╗██╔╝█████╗░░██████╔╝
#  ██╔══╝░░██║░░██║██╔══██╗██╔══██║░░████╔═████║░██╔══╝░░██╔══██╗
#  ███████╗██████╔╝██║░░██║██║░░██║░░╚██╔╝░╚██╔╝░███████╗██║░░██║
#  ╚══════╝╚═════╝░╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░╚═╝░░╚══════╝╚═╝░░╚═╝
#
# Commands and permissions:
# - /zdrawer » Main command (Alaises: /drawer) - zdrawer.use
# - /zdrawer reload » Reload config files - zdrawer.reload
# - /zdrawer give » Give commands - zdrawer.craft.use
# - /zdrawer give drawer <player> [<upgrade name>] [<material>] [<amount>] » Give a drawer - zdrawer.give.drawer
# - /zdrawer give craft <player> [<craft name>] » Give a craft item - zdrawer.give.craft
# - /zdrawer place <world name> <x> <y> <z> <block face> [<upgrade name>] [<material>] [<amount>] » Place a drawer - zdrawer.place
# - /zdrawer purge <world name> » Delete all the drawer in a specific world - zdrawer.purge
# - /zdrawer clear » Allows to remove all entities that come from the plugin. In case of a crash of your server or other it is possible that entities are duplicated. This command deletes them. - zdrawer.clear
#
# Placeholders
# - %zdrawer_content% » Displays the contents of the drawer with which the player interacts
# - %zdrawer_amount% » Displays the amount of the drawer with which the player interacts
# - %zdrawer_upgrade% » Displays the upgrade of the drawer with which the player interacts
#
# For item configuration, you can use the zMenu documentation: https://docs.zmenu.dev/configurations/items
#
#########################################################################################################################################################

enableDebug: true
enableDebugTime: false

drawer:
  limit: 2048 # The global limit for the number of items a single drawer can hold.

  # Drawer item, for item configuration, you can use the zMenu documentation: https://docs.zmenu.dev/configurations/items
  item:
    material: BARREL
    name: ""#22f54cᴅʀᴀᴡᴇʀ""
    lore:
      - ""&8&oStore a large number of the same item""
      - """"
      - ""#e3e3e3Content&8: #baffff%zdrawer_content%""
      - ""#e3e3e3Amount&8: #baffff%zdrawer_amount%""
      - ""#e3e3e3Upgrade&8: #baffff%zdrawer_upgrade%""

  # Drawer craft
  craft:
    shade:
      - ""ABA""
      - ""BCB""
      - ""ABA""
    ingredients:
      A:
        material: SPRUCE_WOOD
      B:
        material: SPRUCE_PLANKS
      C:
        material: CHEST

  # Allows you to change the investment details of the entities, do not touch it if you do not know how.
  # Even a small change can break the plugin display. Please be very careful.
  entitiesPosition:
    NORTH:
      itemDisplay: { x: 0.5, y: 0.5, z: 1.01, yaw: -180, pitch: 0 }
      upgradeDisplay: { x: 0.5, y: 0.9, z: 1.02,yaw: -180, pitch: 0 }
      textDisplay: { x: 0.5, y: 0.05, z: 1.02, yaw: 0, pitch: 0 }
    EAST:
      itemDisplay: { x: -0.01, y: 0.5, z: 0.5, yaw: -90, pitch: 0 }
      upgradeDisplay: { x: -0.02, y: 0.9, z: 0.5, yaw: -90, pitch: 0 }
      textDisplay: { x: -0.02, y: 0.05, z: 0.5, yaw: 90, pitch: 0 }
    SOUTH:
      itemDisplay: { x: 0.5, y: 0.5, z: -0.01, yaw: 0, pitch: 0 }
      upgradeDisplay: { x: 0.5, y: 0.9, z: -0.03, yaw: 0, pitch: 0 }
      textDisplay: { x: 0.5, y: 0.05, z: -0.02, yaw: 180, pitch: 0 }
    WEST:
      itemDisplay: { x: 1.01, y: 0.5, z: 0.5, yaw: 90, pitch: 0 }
      upgradeDisplay: { x: -1.03, y: 0.9, z: 0.5, yaw: 90, pitch: 0 }
      textDisplay: { x: 1.02, y: 0.05, z: 0.5, yaw: -90, pitch: 0 }
    UP:
      itemDisplay: { x: 0.5, y: -0.02, z: 0.5, yaw: 180, pitch: -90 }
      upgradeDisplay: { x: 0.5, y: -0.03, z: 0.9, yaw: 180, pitch: -90 }
      textDisplay: { x: 0.5, y: -0.03, z: 0.05, yaw: 0, pitch: 90 }
    DOWN:
      itemDisplay: { x: 0.5, y: 1.01, z: 0.5, yaw: 180, pitch: 90 }
      upgradeDisplay: { x: 0.5, y: 1.02, z: 0.11, yaw: 180, pitch: 90 }
      textDisplay: { x: 0.5, y: 1.02, z: 0.97, yaw: 0, pitch: -90 }

  # Defines the display sizes for item, upgrade, and text displays associated with the drawer.
  sizes:
    itemDisplay: { x: 0.6, y: 0.6, z: 0.01 } # Size for the item display.
    upgradeDisplay: { x: 0.15, y: 0.15, z: 0.01 } # Size for the upgrade display.
    textDisplay: { x: 0.6, y: 0.6, z: 0.6 } # Size for the text display

  # Tools to break a drawer
  breakMaterials:
    - WOODEN_AXE
    - STONE_AXE
    - IRON_AXE
    - GOLDEN_AXE
    - DIAMOND_AXE
    - NETHERITE_AXE

  blacklistMaterials:
    - BARREL
    - BEDROCK

# Custom crafts provided by the plugin, possibly for upgrades or special drawer-related items.
customCrafts:
  upgradeDisplay:
    # For item configuration, you can use the zMenu documentation: https://docs.zmenu.dev/configurations/items
    result:
      url: ""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOWQxNDlkYzRkNzFmOWE0N2I3MTRhZDgxN2YxNmYzYjU1N2QzMzUzZTBhZTNiY2M0ODExMmFlMmFjZDgyNyJ9fX0=""
      name: ""#54b2e8Upgrade Frame""
      lore:
        - ""&8Upgrade frame for craft Drawer Upgrade""
    shade:
      - ""AAA""
      - ""BCB""
      - ""AAA""
    ingredients:
      A:
        material: STICK
      B:
        material: SPRUCE_PLANKS
      C:
        material: BARREL

# Upgrade configurations for drawers, defining various tiers or types of upgrades available.
upgrades:
  woodUpgrade:
    displayName: ""Wood Upgrade"" # Human-readable name for the upgrade.
    # Item used for display on drawer
    # For item configuration, you can use the zMenu documentation: https://docs.zmenu.dev/configurations/items
    displayItem:
      material: ""IRON_BLOCK""
    limit: 4096 # New item limit when this upgrade is applied.
    # Craft for the upgrade
    craft:
      enable: true # Enable the craft
      # For item configuration, you can use the zMenu documentation: https://docs.zmenu.dev/configurations/items
      result:
        url: ""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmM3NjI4ZTg5N2NiNGM5MzEyZjgwMmYyOGMyZWM0NjZkN2U3MjFlYzM3MDEwMzc4Y2M0NWRkMmRjNjg4MTBjMyJ9fX0=""
        name: ""#cc7727Upgrade Wood""
      shade:
        - ""AAA""
        - ""BCB""
        - ""AAA""
      ingredients:
        A:
          material: STICK
        B:
          material: BARREL
        C:
          customCraft: upgradeDisplay

# Number formatting settings for displaying large numbers in a more readable format.
numberFormat:
  # Toggle to enable/disable custom number formatting.
  enable: false
  # Documentation for String format: https://www.geeksforgeeks.org/java-string-format-method-with-examples/
  formats:
    - format: """" # Blank format to display text directly
      maxAmount: 1000
    - format: ""%.1fK""
      maxAmount: 1000000
    - format: ""%.1fM""
      maxAmount: 1000000000
    - format: ""%.1fB""
      maxAmount: 1000000000000
    - format: ""%.2fT""
      maxAmount: 1000000000000000
    - format: ""%.2fQ""
      maxAmount: 1000000000000000000"
GsrUVXGn,Algoritmi lezione 3,fcamuso,C#,Thursday 25th of January 2024 02:39:51 PM CDT,"//VERSIONE C++

#include <iostream>
#include <iomanip>
#include <chrono>
#include <ctime>

using namespace std;
string genera_stringa_casuale(int lunghezza) {
    static const string alfabeto =
        ""0123456789""
        ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
        ""abcdefghijklmnopqrstuvwxyz"";

    string risultato="""";

    for (int i = 0; i < lunghezza; ++i)
        risultato += alfabeto[ rand()% alfabeto.length() ];


    return risultato;
}

const int QUANTI_ELEMENTI = 2000000;
string v[QUANTI_ELEMENTI];

int main()
{

    //poco accurato ma accettabile
    clock_t inizio = clock();


    for (int i=0; i<QUANTI_ELEMENTI; i++)
      v[i] = genera_stringa_casuale(50);
    //poco accurato ma accettabile
    clock_t fine = clock();

    double secondi_impiegati = (double) (fine - inizio) / CLOCKS_PER_SEC;
    cout << ""Ho impiegato (circa) "" << secondi_impiegati << "" secondi"" << endl;


    return 0;
}
------------------------------------------------------------------------------------------------------------------------------

//VERSIONE PHP
<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Document</title>
</head>
<body>
  <?php 
    function generaStringaCasuale($lunghezza) {
      $alfabeto =
          ""0123456789""
          .""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
          .""abcdefghijklmnopqrstuvwxyz"";

      $risultato = """";

      for ($i = 0; $i < $lunghezza; ++$i)
          $risultato .= $alfabeto[rand(0, strlen($alfabeto) - 1)];

      return $risultato;
    }

    const QUANTI_ELEMENTI = 2000000;
    $v = array();

    $inizio = microtime(true);

    for ($i = 0; $i < QUANTI_ELEMENTI; ++$i)
      $v[$i] = generaStringaCasuale(50);

    $fine = microtime(true);

    $secondiImpiegati = $fine - $inizio;
    echo ""Ho impiegato (circa) $secondiImpiegati secondi\n"";
  ?>    

</body>
</html>
------------------------------------------------------------------------------------------------------

//VERSIONE JAVASCRIPT
<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Document</title>
</head>
<body>
  <script>
    function generaStringaCasuale(lunghezza) {
    const alfabeto =
        ""0123456789"" +
        ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +
        ""abcdefghijklmnopqrstuvwxyz"";

    let risultato = """";

    for (let i = 0; i < lunghezza; ++i)
        risultato += alfabeto.charAt(Math.floor(Math.random() * alfabeto.length));

    return risultato;
    }

      const QUANTI_ELEMENTI = 2000000;
      const v = [];

      // poco accurato ma accettabile
      const inizio = new Date().getTime();

      for (let i = 0; i < QUANTI_ELEMENTI; ++i)
          v[i] = generaStringaCasuale(50);

      // poco accurato ma accettabile
      const fine = new Date().getTime();

      const secondiImpiegati = (fine - inizio) / 1000;
      alert(""Ho impiegato (circa) "" + secondiImpiegati + "" secondi"");

  </script>
</body>
</html>
--------------------------------------------------------------------------------------------------

//VERSIONE C#
using System;

namespace ConsoleApp3
{
	using System;

	class Program
	{
		static string GeneraStringaCasuale(int lunghezza)
		{
			const string alfabeto =
					""0123456789"" +
					""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +
					""abcdefghijklmnopqrstuvwxyz"";

			Random random = new Random();
			string risultato = """";

			for (int i = 0; i < lunghezza; ++i)
				risultato += alfabeto[random.Next(0, alfabeto.Length)];

			return risultato;
		}

		const int QUANTI_ELEMENTI = 2000000;
		static string[] v = new string[QUANTI_ELEMENTI];

		static void Main()
		{

			DateTime inizio = DateTime.Now;

			for (int i = 0; i < QUANTI_ELEMENTI; ++i)
				v[i] = GeneraStringaCasuale(50);


			DateTime fine = DateTime.Now;

			TimeSpan tempoImpiegato = fine - inizio;
			Console.WriteLine($""Ho impiegato (circa) {tempoImpiegato.TotalSeconds} secondi"");
		}
	}

}
"
yPutb7Vn,Untitled,Josif_tepe,C++,Thursday 25th of January 2024 02:38:40 PM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <vector>
using namespace std;

int rastojanie(int a, int b) {
    return abs(a-b);
}

string levo_ili_desno(pair<int,int> platforma, pair<int,int> otsecka) {

    if(otsecka.first<platforma.first) {
        return ""levo"";
    }

    return ""desno"";


}
bool dali_moze(pair<int, int> otsecka, pair<int, int> platforma) {
    
    if(otsecka.first<platforma.first and otsecka.second>platforma.second) {
        return false;
    }
    if(otsecka.first>=platforma.first and otsecka.second<=platforma.second) {
        return true;
    }
    
    if(levo_ili_desno(platforma,otsecka)==""levo"") {
            if(rastojanie(platforma.first,otsecka.second)>=rastojanie(platforma.first,otsecka.first)) {
                return true;
                
            }
        }
        else {
            if(rastojanie(otsecka.first,platforma.second)>=rastojanie(otsecka.second,platforma.second)) {
                return true;
                
            }
        }
    return false;

}
int main(){
    int N,L;
    pair<int,int> platforma;
    cin>>N>>L;
    vector<pair<int,int>> otsecka;
    platforma.first = 0;
    platforma.second = L;
   
    for(int i = 0; i<N; i++){
        int x,y;
        cin>>x>>y;
        otsecka.push_back(make_pair(x,y));
    }

    int brojac = 0;

    for(int i = 0; i<N; i++) {
        for(int j = 0; j < N; j++) {
            if(otsecka[j].first > -5000 and dali_moze(otsecka[j], platforma)) {
                brojac++;
                platforma.first = min(platforma.first, otsecka[j].first);
                platforma.second = max(platforma.second, otsecka[j].second);
                
                otsecka[j].first = -5000;
            }
        }
    }
    
    cout<<brojac;

}
"
XwhCF309,Untitled,sissou123,CSS,Thursday 25th of January 2024 02:36:27 PM CDT,"Advanced CSS and Sass: Flexbox, Grid, Animations and More!
The most advanced and modern CSS course on the internet: master flexbox, CSS Grid, responsive design, and so much more 
Tons of modern CSS techniques to create stunning designs and effects
Advanced CSS animations with @keyframes, animation and transition
How CSS works behind the scenes: the cascade, specificity, inheritance, etc. 
for more:https://cuty.io/8kxR3EinO

"
jz5DPCqZ,Untitled,Josif_tepe,C++,Thursday 25th of January 2024 02:15:33 PM CDT,"#include <iostream>
//#include <bits/stdc++.h>
#include <vector>
using namespace std;

int rastojanie(int a, int b) {
    return abs(a-b);
}

string levo_ili_desno(pair<int,int> platforma, pair<int,int> otsecka) {

    if(otsecka.first<platforma.first) {
        return ""levo"";
    }

    return ""desno"";


}

int main(){
    int N,L;
    pair<int,int> platforma;
    cin>>N>>L;
    vector<pair<int,int>> otsecka;
    platforma.first = 0;
    platforma.second = L;
   
    for(int i = 0; i<N; i++){
        int x,y;
        cin>>x>>y;
        otsecka.push_back(make_pair(x,y));
    }

    int brojac = 0;

    for(int i = 0; i<N; i++) {


        if(otsecka[i].first<platforma.first and otsecka[i].second>platforma.second) {
           continue;
        }
        if(otsecka[i].first>=platforma.first and otsecka[i].second<=platforma.second) {
            brojac++;
        }
        else {
            if(levo_ili_desno(platforma,otsecka[i])==""levo"") {
                if(rastojanie(platforma.first,otsecka[i].second)>=rastojanie(platforma.first,otsecka[i].first)) {
                    brojac++;
                    platforma.first = otsecka[i].first;
                }
            }
            else {
                if(rastojanie(otsecka[i].first,platforma.second)>=rastojanie(otsecka[i].second,platforma.second)) {
                    brojac++;
                    platforma.second = otsecka[i].second;
                }
            }
        }
    }
    cout<<brojac;

}
"
XVxpgTPq,Untitled,sissou123,HTML,Thursday 25th of January 2024 02:07:14 PM CDT,"HTML and CSS for Beginners - Build a Website & Launch ONLINE
HTML and CSS for Beginners course will give your all the knowledge you need to master HTML and CSS easily and quickly 
You will Learn HTML
You will learn CSS
You will get a certification after the course that you can print
You will get the skills you need to make websites 
for more:https://cuty.io/QvfV
"
Z0JCUjJF,OWOP / OurWorldOfPixels Image showupper,scar17off,JavaScript,Thursday 25th of January 2024 01:41:10 PM CDT,"// ==UserScript==
// @name         Image showupper
// @namespace    http://tampermonkey.net/
// @version      2024-01-25
// @description  5 minute script
// @author       scar17off
// @match        https://ourworldofpixels.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=ourworldofpixels.com
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    window.onload = () => {
        function replaceLinks() {
            var links = document.querySelectorAll('a');

            links.forEach(function(link) {
                if (link.href.toLowerCase().includes('.png') || link.href.toLowerCase().includes('.jpg') || link.href.toLowerCase().includes('.gif')) {
                    var imgElement = document.createElement('img');

                    imgElement.src = link.href;

                    link.parentNode.replaceChild(imgElement, link);
                };
            });
        };

        // i was lazy to do it with OWOP.on(666666+20)
        setInterval(replaceLinks, 1000);
    };
})();"
J4Bi2J4G,Untitled,kirkarr,Lua,Thursday 25th of January 2024 01:38:47 PM CDT,"local sx,sy = term.getSize()
term.clear()
term.setCursorPos(1,1)
term.write(""Welcome to KirkaChat"")
term.setCursorPos(1,2)
term.write(""Enter name: "")
local name = read()
local url = ""wss://439e3230-6b04-4347-bcd6-2b00f48e7f62-00-11b99e27i1uiq.worf.replit.dev/""
local messages = {}
local ws = nil
if name ~= """" then
	http.websocketAsync(url)
    repeat
        event, conurl, ws= os.pullEvent(""websocket_success"")
		print(conurl)
    until conurl == url
    term.clear()
    term.setCursorPos(1,1)
    term.write(""Connected to chat"")
    sleep(1)
    parallel.waitForAny(function ()
        while true do
            for i, msg in pairs(messages) do
				term.setCursorPos(1,i)
                term.write(msg)
            end
            if #messages > sy/2 then
            	for i,msg in pairs(messages) do
                    if messages[i+1] ~= nil then
                		messages[i] = messages[i+1]
                    end
                end
            end
            sleep(0.1)
        end
    end, function ()
		while true do
            local event, key, is_held = os.pullEvent(""key"")
			term.setCursorPos(1,sy/2+1)
			term.write(key.."" ""..keys.getName(key))
            --ws.send(textutils.serializeJSON({name=name,text=text}))
			--term.clear()
        end
    end, function ()
    	while true do
        	local event, uru, message = os.pullEvent(""websocket_message"")
            messages[#messages+1] = message
            term.clear()
			term.setCursorPos(1,sy/2+1)
            term.write(""Enter message: "")
			if #messages > sy/2 then
            	for i,msg in pairs(messages) do
                    if messages[i+1] ~= nil then
                		messages[i] = messages[i+1]
                    end
                end
            end
        end
    end)
end"
J7WvNMz7,Cyberpunk 2077 - Personal Mod List,atuburapaler,C#,Thursday 25th of January 2024 01:32:01 PM CDT,"-------------------------------------------------------
                  Cyberpunk 2077 (v2.1)
    				Personal Mod List
-------------------------------------------------------
⡿⡿⣻⢿⢿⡿⡿⣻⢿⢿⢿⢿⢿⣿⣿⣿⠟⡋⠍⠊⠌⠌⠌⠂⠊⠄⠂⠙⠿⠻⡻⠻⢛⠻⠿⢿⣿⣿⣿⣿
⣗⡽⡮⡷⣽⣺⣽⣿⣾⠟⠈⠄⠄⡀⢁⠂⢘⠈⡈⡠⠁⠄⢀⠘⠄⠄⠈⠄⠄⠄⠈⠈⠳⠻⣯⣿⣽⣞⣵⡳
⣗⢯⢫⢯⣷⡿⣽⠏⡁⠁⠄⠄⠄⢄⠅⠐⡂⠁⠁⠄⠄⠄⠐⡑⠄⠌⡄⠅⠄⡀⠄⠄⠄⠄⠘⢿⣻⣾⣳⢯
⣿⡴⣤⠅⢓⢹⢜⠁⡀⠄⠄⡡⠈⠂⡀⠄⠄⠄⠄⠄⠄⠄⠐⠘⢀⠄⠄⡀⠄⠠⠁⡀⠄⠄⠄⠄⠙⣿⣿⣟
⠿⢿⠻⢝⣿⡿⢢⢁⢀⢑⠌⠄⡈⠄⠄⠄⠄⢀⣰⣴⣴⣬⣄⣀⠂⠄⠂⠄⢀⠄⠄⠄⠄⠄⠄⠄⠄⢟⣿⣿
⡀⠄⠄⣸⣾⣛⢈⠄⢸⠐⠄⠨⠄⠄⠄⡀⣜⣞⣾⣿⣯⣿⣿⣿⣄⡀⢴⢼⣐⢬⠠⠄⠐⠄⠄⠄⠄⠘⣿⣿
⠋⣀⣵⣿⣽⡇⢃⢘⠜⠅⠈⠄⠄⢀⢔⣿⣿⣿⣿⣿⡿⣽⢾⢿⣳⢷⢿⡯⣷⣿⡌⠄⠄⠨⠄⠄⠄⠄⣻⣿
⠄⣿⣿⡟⣾⠇⢠⠧⠁⠄⠄⡀⠄⣰⣿⣿⣯⡏⣯⢿⢽⡹⣏⢿⡺⡱⢑⠽⡹⡺⣜⢄⠅⠄⠈⡀⠄⠄⢸⣿
⣾⣻⢳⣝⡯⢡⢹⣇⠄⠐⠄⠄⢠⣺⣿⣿⣿⢾⣿⢽⡵⣽⡺⣝⢎⢎⢶⢕⢌⢭⢣⢑⠄⠄⠄⠈⠄⠄⢸⣿
⣿⠧⢃⡳⠉⡈⢮⠃⠄⠄⠇⠄⣔⣿⣿⣿⣾⣿⣯⣯⢿⢼⡪⡎⡯⡝⢵⣓⢱⢱⡱⡪⡂⠄⠐⠄⠂⠄⠰⣿
⡿⢡⢪⠄⢰⠨⣿⠁⢈⣸⠄⠄⢿⢿⣻⢿⣽⣿⣿⣿⣿⣻⣮⢮⣯⣾⡵⣪⡪⡱⣹⣪⡂⠄⠄⢈⠄⠄⠄⣿
⣈⡖⡅⠄⢪⢴⢊⠁⢐⢸⠄⠄⡨⡢⡈⠈⠉⠻⢟⣷⡿⣟⢗⣽⡷⣿⢯⣞⣕⣧⣷⡳⠅⠄⠅⢐⠄⠄⠄⣿
⡣⡟⠜⠸⡁⣷⠁⠄⢅⢸⡀⠄⠄⠈⡀⠥⠄⡀⠄⠄⠈⠐⣷⡳⠙⠕⠩⠘⠁⠃⠁⠄⠄⠄⡂⢆⠄⠄⠄⣸
⣻⠍⠄⢣⣣⠏⠠⠐⠌⣪⠃⡐⢔⢌⡛⡎⡢⠄⢀⢄⢠⣳⣿⡎⠄⠄⢀⠤⠄⡈⠌⠊⠄⢀⠘⠨⠄⠄⠄⢸
⠑⠠⢂⢮⡳⠠⠂⠁⡅⡯⠐⢨⡺⡌⡯⡪⣞⣼⣵⡧⣟⣿⣿⣗⠄⠄⠐⡢⣒⢆⢐⢠⠁⠄⠄⠈⠄⠄⠄⢻
⢅⢢⠫⡫⠙⠨⠄⣃⢎⡗⢈⠰⠸⡸⡸⣝⣿⣿⡗⡽⣽⣿⣿⣿⠄⢐⣔⢽⣼⣗⣷⢱⠁⠄⠅⠁⠐⠄⠄⢾
⡵⣰⠏⡐⠱⡑⢨⡬⢻⡕⠐⠈⡪⡣⡳⡱⡳⠱⢍⣳⢳⣿⣿⣿⠄⢐⢵⢻⣳⣟⢎⠪⠄⠄⠐⠄⠄⠄⠄⣿
⡷⠁⡀⠄⠨⢂⣸⢉⠆⢑⠌⢠⢣⢏⢜⠜⡀⡤⣿⣿⣿⣿⣿⣟⠠⠄⠨⡗⡧⡳⡑⠄⠄⠄⠄⠄⠄⠄⠄⣿
⢖⠠⠄⢰⠁⢴⣃⠞⠄⠕⣈⣺⣵⡫⡢⣕⣷⣷⡀⠄⡈⢟⠝⠈⢉⡢⡕⡭⣇⠣⠄⠄⠄⠄⠄⠄⠄⠄⠄⣿
⢻⡐⢔⢠⠪⡌⢌⠆⠐⢐⢨⣾⣷⡙⠌⠊⠕⠁⠄⠊⡀⠄⠠⠄⠡⠁⠓⡝⡜⡈⠄⠄⠄⠄⠄⠄⡮⡀⠄⣿
⠘⢨⢪⠼⠘⠅⠄⠂⠄⡀⢻⣿⣇⠃⠑⠄⠒⠁⢂⠑⡔⠄⠌⡐⠄⠂⠠⢰⡑⠄⠄⠄⠄⠄⠄⢠⣡⢱⣶⣿
⢢⢂⠫⡪⣊⠄⠣⡂⠂⡀⠨⠹⡐⣜⡾⡯⡯⢷⢶⢶⠶⣖⢦⢢⢪⠢⡂⡇⠅⠄⠄⠈⠄⢰⠡⣷⣿⣿⣿⣿
⢑⠄⠧⣟⡎⢆⡃⡊⠔⢀⠄⠈⣮⢟⡽⣿⣝⡆⠅⠐⡁⠐⠔⣀⢣⢑⠐⠁⡐⠈⡀⢐⠁⠄⠈⠃⢻⣿⣿⣿
⢑⠁⢮⣾⡎⢰⢐⠈⢌⢂⠐⡀⠂⡝⡽⣟⣿⣽⡪⢢⠂⡨⢪⠸⠨⢀⠂⡁⢀⠂⠄⢂⢊⠖⢄⠄⢀⢨⠉⠛
⡰⢺⣾⡗⠄⡜⢔⠡⢊⠢⢅⢀⠑⠨⡪⠩⠣⠃⠜⡈⡐⡈⡊⡈⡐⢄⠣⢀⠂⡂⡁⢂⠄⢱⢨⠝⡰⢺⣾⡗
------------------------------------------------------
- Core
Cyber Engine Tweaks:
https://www.nexusmods.com/cyberpunk2077/mods/107
Codeware:
https://www.nexusmods.com/cyberpunk2077/mods/7780
TweakXL:
https://www.nexusmods.com/cyberpunk2077/mods/4197
RED4ext:
https://www.nexusmods.com/cyberpunk2077/mods/2380
Redscript:
https://www.nexusmods.com/cyberpunk2077/mods/1511
//------------------------------------------------
- UI/HUD
4K Hand Cursor:
https://www.nexusmods.com/cyberpunk2077/mods/12225
Persist Map Custom Filter:
https://www.nexusmods.com/cyberpunk2077/mods/12557
Quickhack Loadouts:
https://www.nexusmods.com/cyberpunk2077/mods/11682
Allow Unbound Actions (Keybinds):
https://www.nexusmods.com/cyberpunk2077/mods/11429
Upgrade Weapons Unlocked:
https://www.nexusmods.com/cyberpunk2077/mods/9889
Quickhacks sort by slot:
https://www.nexusmods.com/cyberpunk2077/mods/11425
Clear Skill Checks:
https://www.nexusmods.com/cyberpunk2077/mods/2805
Find-EX:
https://www.nexusmods.com/cyberpunk2077/mods/8340
Metric Units:
https://www.nexusmods.com/cyberpunk2077/mods/10362
Crafting Recipe Owned Labels:
https://www.nexusmods.com/cyberpunk2077/mods/11261
Named Saves:
https://www.nexusmods.com/cyberpunk2077/mods/4521
Status Bar Bug Fixes:
https://www.nexusmods.com/cyberpunk2077/mods/4316
//------------------------------------------------
- Fixes
Immersive Flash:
https://www.nexusmods.com/cyberpunk2077/mods/8233
Better Sleeves:
https://www.nexusmods.com/cyberpunk2077/mods/10319
Progression Rewards Skills Fix:
https://www.nexusmods.com/cyberpunk2077/mods/9879
Finisher Fix:
https://www.nexusmods.com/cyberpunk2077/mods/11453
No Walk Auto Disable:
https://www.nexusmods.com/cyberpunk2077/mods/3966
All Guns Are Cool:
https://www.nexusmods.com/cyberpunk2077/mods/10969
Unlock Me The Mods:
https://www.nexusmods.com/cyberpunk2077/mods/9349
Light Beams Fix:
https://www.nexusmods.com/cyberpunk2077/mods/12381
Remove injection holes:
https://www.nexusmods.com/cyberpunk2077/mods/929
//------------------------------------------------
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⠿⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⡟⠀⢀⡆⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠅⠀⠀⠀⠀⢀⡄⠀⠀⠀⣿⣿⣿⣗⣠⣾⡇⠀⠀⠀⠀⢠⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⢸⣆⠀⠀⢰⣿⣿⣿⣿⣿⣯⠀⢀⣴⠆⠀⠻⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⣷⠀⠀⠀⠀⠀⠀⢸⣿⠀⢀⣾⣿⣿⣿⣿⣿⡿⣥⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡆⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⢹⣿⠀⠀⠀⣴⠃⠀⣠⡆⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⣄⠀⠀⠀⠀⠈⣿⡇⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠘⠁⠀⠀⣰⣿⠀⢰⠟⠀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢀⠁⠀⢀⣰⣿⣿⡿⠆⠈⠀⣰⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⣧⡜⠀⣠⣿⣿⣿⣿⡿⠋⣹⣿⣿⣿⠟⢸⣿⣦⣴⣿⣿⣿⡿⠁⠀⠀⣾⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢹⣿⣧⠀⠀⠀⠀⡀⢀⣾⢀⣿⣿⣿⣾⣿⣿⣿⣿⠛⠁⢠⠿⠟⠉⠁⠀⢸⣹⣿⣿⠛⠻⣯⠁⠀⠀⣀⣿⠿⠁⠀⠀⠀⣆⢹⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠰⣄⠸⣷⡄⠀⢿⣟⠀⠀⠀⠀⣷⡀⣇⠀⣿⣿⠿⣿⠛⣿⠏⠀⠀⡄⠀⢀⣴⡾⠁⠀⣼⣿⡿⠏⠀⠐⣿⡄⠀⣰⠋⠀⠀⣺⠀⠀⠀⢹⣘⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠠⣽⣶⡿⠇⠀⠀⢉⠀⠶⠒⠀⠘⢷⣿⣥⠈⠿⠀⠘⢆⠘⠀⢠⣿⡁⠀⣾⣿⠃⠀⣸⢿⣿⣇⣀⠀⢀⣿⡇⠀⡘⠀⠀⠸⣿⠀⠀⠀⢸⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠋⢀⠀⣄⠀⣆⠁⣾⣿⣧⠀⠘⣿⣿⣦⢸⣦⠀⠈⣤⣼⣿⣿⣿⣾⡿⠁⠀⠈⣠⣾⣿⣿⣿⣿⣿⣿⡇⢀⣧⠀⠲⣀⣿⡆⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡶⢠⣾⡿⠷⠿⢷⣿⣿⣿⠇⠀⠋⢹⣿⣶⣿⣷⣶⣿⣿⣿⠋⠉⣿⠃⠀⢀⣾⣿⣿⣿⣿⡿⠻⠙⠿⡇⠈⣿⠁⠀⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠙⡁⠶⣿⡿⢒⣠⠀⡤⠀⢐⠀⠸⣿⣿⣿⣿⣿⡟⠉⢿⠀⢸⣿⡀⠀⢸⣿⣿⣿⠟⠁⠀⠀⠀⠀⢱⠀⠎⠠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣶⠀⡇⢄⠘⠲⣦⠰⠟⠉⠒⠲⡄⠀⠁⢸⣿⠟⠁⢸⠟⢣⠀⠻⡀⠘⢿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⡆⠀⣶⠃⣰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠂⠀⣿⣦⠈⠈⠛⢶⣦⠀⡸⡀⠀⠀⡸⠀⠀⠈⠁⠀⠰⠃⠀⢸⣄⠀⠘⠂⡀⢻⣿⡿⠟⠀⢤⠀⠀⠀⠀⠀⠀⢰⠗⢠⡯⢰⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⣿⡿⠁⠀⠈⢀⣄⠀⠷⣬⣑⡨⣴⡇⣴⠀⢀⣄⣠⣤⣴⣿⣾⣷⢄⡀⠀⠈⠀⠀⠈⠓⠋⠀⠀⠀⠀⢀⣼⠏⠀⣸⡇⢨⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢫⣿⡃⠀⢰⣿⣦⣅⡀⠛⠶⠶⠶⠌⠁⠀⠀⠀⠀⠉⠉⣿⣹⣿⠉⠙⣌⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡞⠁⠀⣰⢫⡇⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠇⠘⠘⢿⣥⣀⠉⠛⣿⣷⣶⣿⣿⡟⢀⣴⠂⠀⠀⠀⠹⣿⣧⡀⠀⠙⢦⡀⠀⠀⢦⣄⣤⣨⣭⣤⣠⠴⠋⠀⠸⠁⠀⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣬⣙⡛⠓⠒⢒⢀⣤⠀⣄⠻⣿⣄⠀⠀⠀⢀⣿⣿⣽⣦⡀⠀⠀⠳⣄⡀⠀⠈⠛⠛⠛⠁⠀⡠⠞⠁⠀⠻⣦⡹⣦⡐⢄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⣻⠟⣛⣃⣸⣿⡇⣹⣿⡷⠀⣠⠟⢻⣿⢿⠛⠋⠃⡄⠀⠈⢿⣶⣶⠦⢶⡖⠆⢁⣄⠐⢿⣷⣄⠈⠻⣌⢻⣆⠡⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢋⣼⣿⣿⡿⠙⢁⣾⣿⡇⠀⠀⣠⣾⣿⠀⠀⠀⣴⠃⠀⣀⣀⡈⠉⠛⢷⣾⠀⠻⣿⣷⣄⠙⠛⣡⣄⡹⣧⠹⡇⢱⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠘⠗⣠⣌⠛⠀⠹⠿⠿⣇⠀⠀⠻⠿⠋⠀⠀⠋⠁⡔⠚⠉⣉⡋⠐⠀⠀⢟⠀⠀⠈⠻⣿⠇⣀⠈⠛⢛⣿⡗⢃⡌⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⢛⣴⣿⣿⣧⠰⣷⢰⡆⣶⢠⠀⠰⣦⣤⣤⣴⠶⠉⠀⢰⣾⣿⣿⣦⠈⠀⠀⠀⠀⠀⠀⠨⡘⢿⣿⣿⣿⣿⠇⡼⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⠶⢟⣫⣴⣿⣿⣿⣿⠏⠰⣤⡤⠔⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠈⠻⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠈⠒⠦⠭⠭⠥⠚⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠴⠞⣛⣭⣴⣾⣿⣿⣿⣿⠿⠛⣡⢸⣷⣌⠓⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⣦⠐⣌⠻⢿⣿⣿⣷⣦⣬⣓⡒⠤⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠤⣭⣭⣭⣭⣭⣭⣭⣭⠐⢶⡃⠉⠘⠿⠿⠈⡁⣠⣾⣿⣿⢿⣷⣶⣄⡙⠂⢾⣿⠀⠟⣡⣤⣍⡛⠻⢿⣿⣿⣿⡿⠶⢒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠈⢿⣤⣀⣀⣦⠿⠛⠉⢁⡀⠀⢀⣀⡀⠙⠹⠿⣷⣦⣤⣞⣿⣿⠟⠀⠘⠓⠲⠶⠶⠒⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠋⣡⡴⢁⣴⣿⣿⣦⣶⣿⣷⣄⠀⢶⣤⣭⠍⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⠿⠟⠻⠿⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
sq3gTVzg,Auto Tic-Tac-Toe,stiky_fingaz,Python,Thursday 25th of January 2024 01:25:29 PM CDT,"import random

num_players = 2
board_size = 3
board_symbol = '_'
players = {1: 'X', 2: 'O'}

empty_board = []

for board_col in range(board_size):
    board_row = []
    for i in range(board_size):
        board_row.append(board_symbol)
    empty_board.append(board_row)


def get_player_move(current_move):
    move = current_move.split()

    try:
        move = [int(x) for x in move]
    except ValueError:
        print('Both col and row have ot be numbers')
        return False

    if len(move) != 2:
        print('Your move has to contain exactly 2 numbers')
        return False

    for square in move:
        if square <= 0 or square > 3:
            print('Move outside board bounds')
            return False

    return True


def check_game_state(player, current_move, game_board):
    if not type(current_move) == list:
        current_move = current_move.split()
        current_move = [int(x) for x in current_move]
    row, col = current_move[0] - 1, current_move[1] - 1

    if game_board[row][col] != '_':
        print('Square already taken')
        return False

    game_board[row][col] = players[player]

    return True


def check_winner(player, game_board):
    winner = [
        ['X' for _ in range(3)],
        ['O' for _ in range(3)]
    ]
    squares = [x for x in range(board_size)]
    l_diag = []
    r_diag = []
    cols = []

    for y, row in enumerate(game_board):
        l_diag.append(row[squares[y]])
        r_diag.append(row[squares[::-1][y]])

        if row in winner:
            print(f'Player {player} won!')
            return True

    if l_diag in winner or r_diag in winner:
        print(f'Player {player} won!')
        return True

    for col in squares:
        current_col = []
        for row in game_board:
            current_col.append(row[col])
        cols.append(current_col)
        if current_col in winner:
            print(f'Player {player} won!')
            return True


def check_draw(game_board):
    for row in game_board:
        if '_' in row:
            return False
    return True


def make_bot_move(game_board):
    bot_move = [random.randint(1, 3) for _ in range(2)]
    player = 2

    while not check_game_state(player, bot_move, game_board):
        bot_move = [random.randint(1, 3) for _ in range(2)]


def print_pretty_board(game_board):
    for row in game_board:
        print(*row)
    print('\n')


active_board = empty_board
current_player = 1

auto_play = {'y': True, 'n': False}.get(input('Play against the computer (y, n)\n'))

if auto_play:
    difficulty = {1: 1, 2: 2}.get(int(input('Select difficulty (1, 2)\n')))
    if difficulty == 2:
        active_board[1][1] = 'O'

print_pretty_board(active_board)

while True:
    player_move = input('Please enter an empty square row and col separated by a space (e.g. 1 3)\n\n')

    if not get_player_move(player_move):
        continue

    if not check_game_state(current_player, player_move, active_board):
        continue

    if check_winner(current_player, active_board):
        print_pretty_board(active_board)
        break

    if auto_play:
        make_bot_move(active_board)
        if check_winner(2, active_board):
            print_pretty_board(active_board)
            break

    if not auto_play:
        current_player = 3 - current_player

    if check_draw(active_board):
        print('The game is a draw!')
        print_pretty_board(active_board)
        break

    print_pretty_board(active_board)
"
z2kxkDH8,Basic Tic-Tac-Toe,stiky_fingaz,Python,Thursday 25th of January 2024 01:24:46 PM CDT,"num_players = 2
board_size = 3
board_symbol = '_'
players = {1: 'X', 2: 'O'}

empty_board = []

for board_col in range(board_size):
    board_row = []
    for i in range(board_size):
        board_row.append(board_symbol)
    empty_board.append(board_row)


def get_player_move(current_move):
    move = current_move.split()

    try:
        move = [int(x) for x in move]
    except ValueError:
        print('Both col and row have ot be numbers')
        return False

    if len(move) != 2:
        print('Your move has to contain exactly 2 numbers')
        return False

    for square in move:
        if square <= 0 or square > 3:
            print('Move outside board bounds')
            return False

    return True


def check_game_state(player, current_move, game_board):
    if not type(current_move) == list:
        current_move = current_move.split()
        current_move = [int(x) for x in current_move]
    row, col = current_move[0] - 1, current_move[1] - 1

    if game_board[row][col] != '_':
        print('Square already taken')
        return False

    game_board[row][col] = players[player]

    return True


def check_winner(player, game_board):
    winner = [
        ['X' for _ in range(3)],
        ['O' for _ in range(3)]
    ]
    squares = [x for x in range(board_size)]
    l_diag = []
    r_diag = []
    cols = []

    for y, row in enumerate(game_board):
        l_diag.append(row[squares[y]])
        r_diag.append(row[squares[::-1][y]])

        if row in winner:
            print(f'Player {player} won!')
            return True

    if l_diag in winner or r_diag in winner:
        print(f'Player {player} won!')
        return True

    for col in squares:
        current_col = []
        for row in game_board:
            current_col.append(row[col])
        cols.append(current_col)
        if current_col in winner:
            print(f'Player {player} won!')
            return True


def check_draw(game_board):
    for row in game_board:
        if '_' in row:
            return False
    return True


def print_pretty_board(game_board):
    for row in game_board:
        print(*row)
    print('\n')


active_board = empty_board
current_player = 1

print_pretty_board(active_board)

while True:
    player_move = input('Please enter an empty square row and col separated by a space (e.g. 1 3)\n\n')

    if not get_player_move(player_move):
        continue

    if not check_game_state(current_player, player_move, active_board):
        continue

    if check_winner(current_player, active_board):
        print_pretty_board(active_board)
        break

    current_player = 3 - current_player

    if check_draw(active_board):
        print('The game is a draw!')
        print_pretty_board(active_board)
        break

    print_pretty_board(active_board)
"
KEHmqmep,Graphs. BFS. H. Get zero,welleyth,C++,Thursday 25th of January 2024 01:16:29 PM CDT,"#pragma GCC optimize(""O3"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""avx2"")
#include <iostream>
#include <string>
#include <set>
#include <algorithm>
#include <cctype>
#include <assert.h>
#include <vector>
#include <iomanip>
#include <string.h>
#include <queue>
#include <map>
#include <random>
 
using namespace std;
 
constexpr int N = (int)1e6+11;
constexpr int L = (int)1e4+11;
constexpr int M = (int)5e3+11;
constexpr long long INF = (long long)1e9;
constexpr bool debug = false;

mt19937 rnd(time(nullptr));

void solve(){
    int n;
    cin >> n;

    int a[n];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }

    int m = 32768;

    int dist[m];
    for(int i = 0; i < m; i++){
        dist[i] = (int)1e9;
    }
    dist[0] = 0;
    queue<int> q;
    q.push(0);

    while(!q.empty()){
        int v = q.front();
        q.pop();
        int nxt;
        nxt = (v-1);
        if(nxt == -1)
            nxt = m - 1;
        if(dist[nxt] > dist[v] + 1){
            dist[nxt] = dist[v] + 1;
            q.push(nxt);
        }
        if(v%2 == 0){
            if(dist[v/2] > dist[v] + 1){
                dist[v/2] = dist[v] + 1;
                q.push(v/2);
            }
            nxt = (v+m);
            if(nxt/2 < m){
                if(dist[nxt/2] > dist[v] + 1){
                    dist[nxt/2] = dist[v] + 1;
                    q.push(nxt/2);
                }
            }
        }
    }

    for(int i = 0; i < n; i++){
        cout << dist[a[i]] << "" "";
    }
    cout << ""\n"";

    return;
}
 
signed main(){
    ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
 
    int tests = 1;
    // cin >> tests;
    for(int test = 1; test <= tests; test++){
        solve();
    }
 
    return 0;
}"
QKChSzCH,Graphs. DFS. F. White-black balance,welleyth,C++,Thursday 25th of January 2024 12:54:04 PM CDT,"#pragma GCC optimize(""O3"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""avx2"")
#include <iostream>
#include <string>
#include <set>
#include <algorithm>
#include <cctype>
#include <assert.h>
#include <vector>
#include <iomanip>
#include <string.h>
#include <queue>
#include <map>
#include <random>
 
using namespace std;
 
constexpr int N = (int)1e6+11;
constexpr int L = (int)1e4+11;
constexpr int M = (int)5e3+11;
constexpr long long INF = (long long)1e9;
constexpr bool debug = false;

mt19937 rnd(time(nullptr));

vector<int> g[N];
int col[N];

int ans = 0;
int balance[N];

void dfs(int v){
    balance[v] = col[v];
    for(int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        dfs(to);
        balance[v] += balance[to];
    }
    if(balance[v] == 0)
        ans++;
    return;
}   

void solve(){
    int n;
    cin >> n;

    for(int i = 1; i <= n; i++){
        g[i].clear();
        col[i] = 0;
        balance[i] = 0;
    }

    for(int i = 2; i <= n; i++){
        int pr;
        cin >> pr;
        g[pr].push_back(i);
    }

    string s;
    cin >> s;

    for(int i = 0; i < n; i++){
        if(s[i] == 'W')
            col[i+1] = 1;
        else
            col[i+1] = -1;
    }

    ans = 0;
    dfs(1);

    cout << ans << ""\n"";
}
 
signed main(){
    ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
 
    int tests = 1;
    cin >> tests;
    for(int test = 1; test <= tests; test++){
        solve();
    }
 
    return 0;
}"
AmqWqGP3,Architect Arithmetic - Whole Project,IvanITD,C#,Thursday 25th of January 2024 12:44:35 PM CDT,"using System.ComponentModel.DataAnnotations;
using System.Formats.Asn1;

namespace ArchitectArithmeticWholeProject
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine($""What monument would you like to work with? \nYou have the following options:"");
            Console.WriteLine($""Pantheon\nTeotihuacan\nTaj Mahal\nGreat Mosque of Mecca"");
            Console.WriteLine($""Pick the one you like!"");
            string flooringPlan = Console.ReadLine();

            if (flooringPlan == ""Pantheon"")
            {
                double pantheon = Pantheon();
                Console.WriteLine($""The plan for the monument costs: {Math.Round(pantheon):F2} euros!"");
            }
            else if (flooringPlan == ""Teotihuacan"")
            {
                
                double teotihuacan = Teotihuacan();
                Console.WriteLine($""The plan for the monument costs: {Math.Round(teotihuacan):F2} pesos!"");
            }
            else if (flooringPlan == ""Taj Mahal"")
            {
                double tajMahal = TajMahal();
                Console.WriteLine($""The plan for the monument costs: {Math.Round(tajMahal):F2} rupee!"");
            }
            else if (flooringPlan == ""Great Mosque of Mecca"")
            {
                double greatMosqueOfMecca = GreatMosqueOfMecca();
                Console.WriteLine($""The plan for the monument costs: {Math.Round(greatMosqueOfMecca):F2} riyal!"");
            }            
        }

        static double Pantheon(
            double length = 15,
            double width = 18,
            double radius = 21.5
        )
        {
            double rectangleArea = length * width;
            double circleArea = Math.PI * Math.Pow(radius,2);
            
            double totalShapeArea = rectangleArea + circleArea;
            double flooringMaterialPrice = 180;
            double totalCost = totalShapeArea * flooringMaterialPrice;

            return totalCost;
        }
        static double Teotihuacan(
            double length = 2500,
            double width = 1500,
            double bottom = 750,
            double height = 500,
            double radius = 375 / 2
        )
        {
            double rectangleArea = length * width;
            double triangleArea = bottom * height;
            double circleArea = Math.PI * Math.Pow(radius, 2);

            double totalShapeArea = rectangleArea + triangleArea + circleArea;
            double flooringMaterialPrice = 180;
            double totalCost = totalShapeArea * flooringMaterialPrice;

            return totalCost;
            
        }

        static double TajMahal(
            double length = 90.5,
            double width = 90.5,
            double bottom = 24.0,
            double height = 24.0

        )
        {
            double rectangleArea = length * width;
            double triangleArea = bottom * height;
            triangleArea *= 4;
            double totalShapeArea = rectangleArea - triangleArea;
            double flooringMaterialPrice = 180;
            double totalCost = totalShapeArea * flooringMaterialPrice;

            return totalCost;
        }
        static double GreatMosqueOfMecca(
            double length1 = 284,
            double width1 = 264,
            double length2 = 180,
            double width2 = 106,
            double bottom = 264,
            double height = 84
        )
        {
            double firstRectangleArea = length1 * width1;
            double secondRectangleArea = length2 * width2;
            double triangleArea = bottom * height;

            double totalShapeArea = firstRectangleArea + secondRectangleArea - triangleArea;
            double flooringMaterialPrice = 180;
            double totalCost = totalShapeArea * flooringMaterialPrice;

            return totalCost;
        }
    }
}"
975ehRu0,6 / h) Architect Arithmetic - Teotihuacan,IvanITD,C#,Thursday 25th of January 2024 12:41:10 PM CDT,"namespace ArchitectArithmeticTeotihuacanOneMethod
{
    class Program
    {
        static void Main(string[] args)
        {
            CalculateTotalCost();
        }

        static void CalculateTotalCost(
            double length = 2500,
            double width = 1500,
            double radius = 187.5,
            double bottom = 750,
            double height = 500
        )
        {
            double rectangleArea = length * width;
            double circleArea = Math.PI * Math.Pow(radius, 2);
            double triangleArea = 0.5 * bottom * height;

            double totalShapeArea = rectangleArea + circleArea + triangleArea;

            double flooringPrice = 180;

            double totalCost = totalShapeArea * flooringPrice;

            Console.WriteLine($""The total cost for the flooring material, for the Teotihuacan is: {Math.Round(totalCost):F2} pesos!"");
        }

    }
}"
2pakPUV7,6 / g) Architect Arithmetic - Teotihuacan,IvanITD,C#,Thursday 25th of January 2024 12:40:24 PM CDT,"namespace ArchitectArithmeticTeotihuacan
{
    class Program
    {
        static void Main(string[] args)
        {
            // Here I set the two sides of the rectangle
            double length = 2500;
            double width = 1500;

            // Here I set the radius of the circle!
            double radius = 187.5;

            // Here I get the bottom and height of the triangle!
            double bottom = 750;
            double height = 500;

            // Here I get each area separately counted
            double rectangleArea = Rectangle(length, width);
            double circleArea = Circle(radius);
            double triangleArea = Triangle(bottom, height);

            // Here I get the total shape area all together!
            double totalShapeArea = rectangleArea + circleArea + triangleArea;

            // The flooring price!
            double flooringPrice = 180;

            // The total cost for the flooring in the Teotihuacan!
            double totalCost = totalShapeArea * flooringPrice;

            // Now we print the total cost of the Teotihuacan to the console and inform the user!
            Console.WriteLine($""The total cost for the flooring material, for the Teotihuacan is: {Math.Round(totalCost):F2} pesos!"");
            // Here also added the Math.Round in order to get the result to the nearest integer and also get two zeros after the fullstop dot!
        }

        static double Rectangle(double length, double width)
        {
            double area = length * width;
            return area;
        }

        static double Circle(double radius)
        {
            double area = Math.PI * Math.Pow(radius, 2);
            return area;
        }

        static double Triangle(double bottom, double height)
        {
            double area = 0.5 * bottom * height;
            return area;
        }
    }
}"
nsWKVBkb,outdated.py,ssoni,Python,Thursday 25th of January 2024 12:38:11 PM CDT,"def main():
    months = [""January"",    ""February"",    ""March"",    ""April"",    ""May"",    ""June"",    ""July"",    ""August"",    ""September"",    ""October"",    ""November"",    ""December""]

    while True:
        try:
            date = input('Date: ').strip()
            parts = date.split('/')
            mm = int(parts[0])
            dd = int(parts[1])
            yyyy = int(parts[2])
        except:
            try:
                parts = date.split(', ')
                yyyy = int(parts[1])
                mon_dd = parts[0].split(' ')
                dd = int(mon_dd[1])
                mm = months.index(mon_dd[0])+1
            except:
                continue
        if (1 <= dd < 31) and (1 <= mm <= 12) and yyyy >= 0:
            break

    print(f'{yyyy:04}-{mm:02}-{dd:02}')

main()
"
6ZzQ0C5T,Untitled,MNNM2021,Python,Thursday 25th of January 2024 12:30:08 PM CDT,"def fill_the_box(height, length, width, *cubes):
    big_cube = height * length * width
    sum_cubes = 0

    for num in cubes:
        if num == ""Finish"":
            break
        else:
            sum_cubes += num

    if big_cube > sum_cubes:
        return f""There is free space in the box. You could put {big_cube - sum_cubes} more cubes.""
    else:
        return f""No more free space! You have {sum_cubes - big_cube} more cubes."""
biNuHqG4,Untitled,Repciu,Python,Thursday 25th of January 2024 12:17:39 PM CDT,"import random 
sciezki = [
    ""Zabiera ze sobą mapę starożytnego świata i wyrusza w nieznane. "",
    ""Ma na oku legendarny skarb, który czeka na odkrycie. "",
    ""Przygotowuje się do walki z przerażającym potworem, który terroryzuje okolicę. ""
    ]

towarzysze = [
    ""Postanawia iść sam, polegając na swoich umiejętnościach. "",
    ""Zabiera ze sobą wiernego przyjaciela, gotowego stanąć u boku w każdej sytuacji. "",
    ""Towarzyszy mu wierny zwierzęcy towarzysz, który zawsze jest gotowy pomóc. ""
]
def wygeneruj_historie():
    nazwa = input(""Podaj nazwę bohatera: "")
    typ_klasy = input(""Podaj profesję bohatera: "")
    sciezka = input(""Wybierz ścieżkę: [1] eksploracja, [2] poszukiwanie skarbu, [3] walka z potworem"")
    towarzysz = input(""Wybierz towarzysza: [1] samotnik, [2] przyjaciel, [3] zwierzę"")
    historia = f""{nazwa}, dzielny {typ_klasy} wyrusza na swoją podróż.""
    historia += sciezki[int(sciezka) - 1]
    historia += towarzysze[int(towarzysz) - 1]
wygeneruj_historie()"
njXVtfD8,Untitled,Mysoft,FreeBasic,Thursday 25th of January 2024 12:17:26 PM CDT,"In archive libfb.a:
rw-rw-rw- 0/0    819 Jul 01 15:49 2015 array_boundchk.o
rw-rw-rw- 0/0    763 Jul 01 15:49 2015 array_clear.o
rw-rw-rw- 0/0    964 Jul 01 15:49 2015 array_clearobj.o
rw-rw-rw- 0/0    745 Jul 01 15:49 2015 array_core.o
rw-rw-rw- 0/0    796 Jul 01 15:49 2015 array_destructobj.o
rw-rw-rw- 0/0    824 Jul 01 15:49 2015 array_destructstr.o
rw-rw-rw- 0/0    812 Jul 01 15:49 2015 array_erase.o
rw-rw-rw- 0/0    783 Jul 01 15:49 2015 array_eraseobj.o
rw-rw-rw- 0/0    638 Jul 01 15:49 2015 array_erasestr.o
rw-rw-rw- 0/0    623 Jul 01 15:49 2015 array_lbound.o
rw-rw-rw- 0/0   1636 Jul 01 15:49 2015 array_redim.o
rw-rw-rw- 0/0    811 Jul 01 15:49 2015 array_redim_obj.o
rw-rw-rw- 0/0   1861 Jul 01 15:49 2015 array_redimpresv.o
rw-rw-rw- 0/0    883 Jul 01 15:49 2015 array_redimpresv_obj.o
rw-rw-rw- 0/0   1143 Jul 01 15:49 2015 array_redimto.o
rw-rw-rw- 0/0    670 Jul 01 15:49 2015 array_resetdesc.o
rw-rw-rw- 0/0    944 Jul 01 15:49 2015 array_setdesc.o
rw-rw-rw- 0/0   1507 Jul 01 15:49 2015 array_tmpdesc.o
rw-rw-rw- 0/0    639 Jul 01 15:49 2015 array_ubound.o
rw-rw-rw- 0/0   1072 Jul 01 15:49 2015 con_input.o
rw-rw-rw- 0/0   1355 Jul 01 15:49 2015 con_lineinp.o
rw-rw-rw- 0/0   1253 Jul 01 15:49 2015 con_lineinp_wstr.o
rw-rw-rw- 0/0    705 Jul 01 15:49 2015 con_locate.o
rw-rw-rw- 0/0    606 Jul 01 15:49 2015 con_pos.o
rw-rw-rw- 0/0    733 Jul 01 15:49 2015 con_print_raw.o
rw-rw-rw- 0/0    758 Jul 01 15:49 2015 con_print_raw_wstr.o
rw-rw-rw- 0/0   1641 Jul 01 15:49 2015 con_print_tty.o
rw-rw-rw- 0/0   1710 Jul 01 15:49 2015 con_print_tty_wstr.o
rw-rw-rw- 0/0   4375 Jul 01 15:49 2015 con_readline.o
rw-rw-rw- 0/0    837 Jul 01 15:49 2015 data.o
rw-rw-rw- 0/0    921 Jul 01 15:49 2015 data_readbyte.o
rw-rw-rw- 0/0    945 Jul 01 15:49 2015 data_readdouble.o
rw-rw-rw- 0/0    920 Jul 01 15:49 2015 data_readint.o
rw-rw-rw- 0/0    948 Jul 01 15:49 2015 data_readlong.o
rw-rw-rw- 0/0    922 Jul 01 15:49 2015 data_readshort.o
rw-rw-rw- 0/0    945 Jul 01 15:49 2015 data_readsingle.o
rw-rw-rw- 0/0    998 Jul 01 15:49 2015 data_readstr.o
rw-rw-rw- 0/0    924 Jul 01 15:49 2015 data_readubyte.o
rw-rw-rw- 0/0    923 Jul 01 15:49 2015 data_readuint.o
rw-rw-rw- 0/0    951 Jul 01 15:49 2015 data_readulong.o
rw-rw-rw- 0/0    925 Jul 01 15:49 2015 data_readushort.o
rw-rw-rw- 0/0    985 Jul 01 15:49 2015 data_readwstr.o
rw-rw-rw- 0/0   5516 Jul 01 15:49 2015 dev_com.o
rw-rw-rw- 0/0   1128 Jul 01 15:49 2015 dev_com_test.o
rw-rw-rw- 0/0   1274 Jul 01 15:49 2015 dev_cons_open.o
rw-rw-rw- 0/0   1204 Jul 01 15:49 2015 dev_err_open.o
rw-rw-rw- 0/0    696 Jul 01 15:49 2015 dev_file_close.o
rw-rw-rw- 0/0   2682 Jul 01 15:50 2015 dev_file_encod_open.o
rw-rw-rw- 0/0    920 Jul 01 15:50 2015 dev_file_encod_read.o
rw-rw-rw- 0/0   2614 Jul 01 15:50 2015 dev_file_encod_read_core.o
rw-rw-rw- 0/0    930 Jul 01 15:50 2015 dev_file_encod_read_wstr.o
rw-rw-rw- 0/0   1275 Jul 01 15:50 2015 dev_file_encod_readline.o
rw-rw-rw- 0/0   1209 Jul 01 15:50 2015 dev_file_encod_readline_wstr.o
rw-rw-rw- 0/0    958 Jul 01 15:50 2015 dev_file_encod_write.o
rw-rw-rw- 0/0    968 Jul 01 15:50 2015 dev_file_encod_write_wstr.o
rw-rw-rw- 0/0    766 Jul 01 15:50 2015 dev_file_eof.o
rw-rw-rw- 0/0    722 Jul 01 15:50 2015 dev_file_flush.o
rw-rw-rw- 0/0    725 Jul 01 15:50 2015 dev_file_lock.o
rw-rw-rw- 0/0   3035 Jul 01 15:50 2015 dev_file_open.o
rw-rw-rw- 0/0    911 Jul 01 15:50 2015 dev_file_read.o
rw-rw-rw- 0/0   1289 Jul 01 15:50 2015 dev_file_read_wstr.o
rw-rw-rw- 0/0   1517 Jul 01 15:50 2015 dev_file_readline.o
rw-rw-rw- 0/0   1015 Jul 01 15:50 2015 dev_file_readline_wstr.o
rw-rw-rw- 0/0    763 Jul 01 15:50 2015 dev_file_seek.o
rw-rw-rw- 0/0   1000 Jul 01 15:50 2015 dev_file_size.o
rw-rw-rw- 0/0    731 Jul 01 15:50 2015 dev_file_tell.o
rw-rw-rw- 0/0    729 Jul 01 15:50 2015 dev_file_unlock.o
rw-rw-rw- 0/0    780 Jul 01 15:50 2015 dev_file_write.o
rw-rw-rw- 0/0   1127 Jul 01 15:50 2015 dev_file_write_wstr.o
rw-rw-rw- 0/0   2614 Jul 01 15:50 2015 dev_lpt.o
rw-rw-rw- 0/0    782 Jul 01 15:50 2015 dev_lpt_close.o
rw-rw-rw- 0/0   1850 Jul 01 15:50 2015 dev_lpt_test.o
rw-rw-rw- 0/0    618 Jul 01 15:50 2015 dev_lpt_write.o
rw-rw-rw- 0/0    647 Jul 01 15:50 2015 dev_lpt_write_wstr.o
rw-rw-rw- 0/0    711 Jul 01 15:50 2015 dev_pipe_close.o
rw-rw-rw- 0/0   1649 Jul 01 15:50 2015 dev_pipe_open.o
rw-rw-rw- 0/0   1658 Jul 01 15:50 2015 dev_scrn.o
rw-rw-rw- 0/0    695 Jul 01 15:50 2015 dev_scrn_close.o
rw-rw-rw- 0/0    901 Jul 01 15:50 2015 dev_scrn_eof.o
rw-rw-rw- 0/0   1182 Jul 01 15:50 2015 dev_scrn_init.o
rw-rw-rw- 0/0   1442 Jul 01 15:50 2015 dev_scrn_read.o
rw-rw-rw- 0/0   1565 Jul 01 15:50 2015 dev_scrn_read_wstr.o
rw-rw-rw- 0/0    880 Jul 01 15:50 2015 dev_scrn_readline.o
rw-rw-rw- 0/0   1068 Jul 01 15:50 2015 dev_scrn_readline_wstr.o
rw-rw-rw- 0/0    904 Jul 01 15:50 2015 dev_scrn_write.o
rw-rw-rw- 0/0    938 Jul 01 15:50 2015 dev_scrn_write_wstr.o
rw-rw-rw- 0/0    653 Jul 01 15:50 2015 dev_stdio_close.o
rw-rw-rw- 0/0    796 Jul 01 15:50 2015 drv_intl_get.o
rw-rw-rw- 0/0   1702 Jul 01 15:50 2015 drv_intl_getdateformat.o
rw-rw-rw- 0/0   1049 Jul 01 15:50 2015 drv_intl_getmonthname.o
rw-rw-rw- 0/0   1380 Jul 01 15:50 2015 drv_intl_gettimeformat.o
rw-rw-rw- 0/0   1053 Jul 01 15:50 2015 drv_intl_getweekdayname.o
rw-rw-rw- 0/0   2885 Jul 01 15:50 2015 error.o
rw-rw-rw- 0/0   1165 Jul 01 15:50 2015 error_assert.o
rw-rw-rw- 0/0   1021 Jul 01 15:50 2015 error_assert_wstr.o
rw-rw-rw- 0/0   1237 Jul 01 15:50 2015 error_getset.o
rw-rw-rw- 0/0    585 Jul 01 15:50 2015 error_message.o
rw-rw-rw- 0/0    668 Jul 01 15:50 2015 error_ptrchk.o
rw-rw-rw- 0/0    991 Jul 01 15:50 2015 file_attr.o
rw-rw-rw- 0/0   1036 Jul 01 15:50 2015 file_close.o
rw-rw-rw- 0/0    714 Jul 01 15:50 2015 file_copy.o
rw-rw-rw- 0/0   1165 Jul 01 15:50 2015 file_copy_crt.o
rw-rw-rw- 0/0    895 Jul 01 15:50 2015 file_datetime.o
rw-rw-rw- 0/0   1599 Jul 01 15:50 2015 file_dir.o
rw-rw-rw- 0/0    657 Jul 01 15:50 2015 file_dir64.o
rw-rw-rw- 0/0    682 Jul 01 15:50 2015 file_dirnext.o
rw-rw-rw- 0/0    647 Jul 01 15:50 2015 file_dirnext64.o
rw-rw-rw- 0/0    965 Jul 01 15:50 2015 file_encod.o
rw-rw-rw- 0/0    757 Jul 01 15:50 2015 file_eof.o
rw-rw-rw- 0/0    768 Jul 01 15:50 2015 file_exists.o
rw-rw-rw- 0/0    658 Jul 01 15:50 2015 file_free.o
rw-rw-rw- 0/0   2544 Jul 01 15:50 2015 file_get.o
rw-rw-rw- 0/0   1587 Jul 01 15:50 2015 file_get_wstr.o
rw-rw-rw- 0/0   1427 Jul 01 15:50 2015 file_getarray.o
rw-rw-rw- 0/0   1884 Jul 01 15:50 2015 file_getstr.o
rw-rw-rw- 0/0    650 Jul 01 15:50 2015 file_hconvpath.o
rw-rw-rw- 0/0   1078 Jul 01 15:50 2015 file_hlock.o
rw-rw-rw- 0/0    987 Jul 01 15:50 2015 file_hreset.o
rw-rw-rw- 0/0    947 Jul 01 15:50 2015 file_input_byte.o
rw-rw-rw- 0/0    935 Jul 01 15:50 2015 file_input_file.o
rw-rw-rw- 0/0   1304 Jul 01 15:50 2015 file_input_float.o
rw-rw-rw- 0/0    930 Jul 01 15:50 2015 file_input_int.o
rw-rw-rw- 0/0   1050 Jul 01 15:50 2015 file_input_longint.o
rw-rw-rw- 0/0    932 Jul 01 15:50 2015 file_input_short.o
rw-rw-rw- 0/0    871 Jul 01 15:50 2015 file_input_str.o
rw-rw-rw- 0/0   2939 Jul 01 15:50 2015 file_input_tok.o
rw-rw-rw- 0/0   2068 Jul 01 15:50 2015 file_input_tok_wstr.o
rw-rw-rw- 0/0    949 Jul 01 15:50 2015 file_input_ubyte.o
rw-rw-rw- 0/0    948 Jul 01 15:50 2015 file_input_uint.o
rw-rw-rw- 0/0   1191 Jul 01 15:50 2015 file_input_ulongint.o
rw-rw-rw- 0/0    970 Jul 01 15:50 2015 file_input_ushort.o
rw-rw-rw- 0/0    857 Jul 01 15:50 2015 file_input_wstr.o
rw-rw-rw- 0/0   1301 Jul 01 15:50 2015 file_inputstr.o
rw-rw-rw- 0/0   1044 Jul 01 15:50 2015 file_kill.o
rw-rw-rw- 0/0   1083 Jul 01 15:50 2015 file_len.o
rw-rw-rw- 0/0   1861 Jul 01 15:50 2015 file_lineinp.o
rw-rw-rw- 0/0    818 Jul 01 15:50 2015 file_lineinp_wstr.o
rw-rw-rw- 0/0    858 Jul 01 15:50 2015 file_loc.o
rw-rw-rw- 0/0   1837 Jul 01 15:50 2015 file_lock.o
rw-rw-rw- 0/0    992 Jul 01 15:50 2015 file_open.o
rw-rw-rw- 0/0    928 Jul 01 15:50 2015 file_opencom.o
rw-rw-rw- 0/0    930 Jul 01 15:50 2015 file_opencons.o
rw-rw-rw- 0/0    980 Jul 01 15:50 2015 file_openencod.o
rw-rw-rw- 0/0    928 Jul 01 15:50 2015 file_openerr.o
rw-rw-rw- 0/0   1422 Jul 01 15:50 2015 file_openlpt.o
rw-rw-rw- 0/0    930 Jul 01 15:50 2015 file_openpipe.o
rw-rw-rw- 0/0    974 Jul 01 15:50 2015 file_openscrn.o
rw-rw-rw- 0/0   2315 Jul 01 15:50 2015 file_openshort.o
rw-rw-rw- 0/0    961 Jul 01 15:50 2015 file_print.o
rw-rw-rw- 0/0    973 Jul 01 15:50 2015 file_print_wstr.o
rw-rw-rw- 0/0   1795 Jul 01 15:50 2015 file_put.o
rw-rw-rw- 0/0   1138 Jul 01 15:50 2015 file_put_wstr.o
rw-rw-rw- 0/0    818 Jul 01 15:50 2015 file_putarray.o
rw-rw-rw- 0/0   1128 Jul 01 15:50 2015 file_putback.o
rw-rw-rw- 0/0   1156 Jul 01 15:50 2015 file_putback_wstr.o
rw-rw-rw- 0/0   1305 Jul 01 15:50 2015 file_putstr.o
rw-rw-rw- 0/0    759 Jul 01 15:50 2015 file_reset.o
rw-rw-rw- 0/0    698 Jul 01 15:50 2015 file_resetex.o
rw-rw-rw- 0/0   1130 Jul 01 15:50 2015 file_seek.o
rw-rw-rw- 0/0    903 Jul 01 15:50 2015 file_size.o
rw-rw-rw- 0/0    893 Jul 01 15:50 2015 file_tell.o
rw-rw-rw- 0/0   1146 Jul 01 15:50 2015 file_winputstr.o
rw-rw-rw- 0/0   1118 Jul 01 15:50 2015 gosub.o
rw-rw-rw- 0/0   1065 Jul 01 15:50 2015 hdynload.o
rw-rw-rw- 0/0    821 Jul 01 15:50 2015 hinit.o
rw-rw-rw- 0/0    785 Jul 01 15:50 2015 hook_cls.o
rw-rw-rw- 0/0    733 Jul 01 15:50 2015 hook_color.o
rw-rw-rw- 0/0    771 Jul 01 15:50 2015 hook_getmouse.o
rw-rw-rw- 0/0    747 Jul 01 15:50 2015 hook_getmouse64.o
rw-rw-rw- 0/0    690 Jul 01 15:50 2015 hook_getsize.o
rw-rw-rw- 0/0    666 Jul 01 15:50 2015 hook_getx.o
rw-rw-rw- 0/0    686 Jul 01 15:50 2015 hook_getxy.o
rw-rw-rw- 0/0    666 Jul 01 15:50 2015 hook_gety.o
rw-rw-rw- 0/0    906 Jul 01 15:50 2015 hook_inkey.o
rw-rw-rw- 0/0    714 Jul 01 15:50 2015 hook_isredir.o
rw-rw-rw- 0/0    773 Jul 01 15:50 2015 hook_lineinp.o
rw-rw-rw- 0/0    801 Jul 01 15:50 2015 hook_lineinp_wstr.o
rw-rw-rw- 0/0   1071 Jul 01 15:50 2015 hook_locate_ex.o
rw-rw-rw- 0/0    706 Jul 01 15:51 2015 hook_multikey.o
rw-rw-rw- 0/0    787 Jul 01 15:51 2015 hook_pageset.o
rw-rw-rw- 0/0    851 Jul 01 15:51 2015 hook_pcopy.o
rw-rw-rw- 0/0    911 Jul 01 15:51 2015 hook_ports.o
rw-rw-rw- 0/0    873 Jul 01 15:51 2015 hook_print_wstr.o
rw-rw-rw- 0/0    861 Jul 01 15:51 2015 hook_printstr.o
rw-rw-rw- 0/0    773 Jul 01 15:51 2015 hook_readstr.o
rw-rw-rw- 0/0    706 Jul 01 15:51 2015 hook_readxy.o
rw-rw-rw- 0/0    733 Jul 01 15:51 2015 hook_setmouse.o
rw-rw-rw- 0/0    700 Jul 01 15:51 2015 hook_sleep.o
rw-rw-rw- 0/0    678 Jul 01 15:51 2015 hook_view_update.o
rw-rw-rw- 0/0    887 Jul 01 15:51 2015 hook_width.o
rw-rw-rw- 0/0   1600 Jul 01 15:51 2015 init.o
rw-rw-rw- 0/0   1670 Jul 01 15:51 2015 intl_core.o
rw-rw-rw- 0/0    858 Jul 01 15:51 2015 intl_get.o
rw-rw-rw- 0/0    807 Jul 01 15:51 2015 intl_getdateformat.o
rw-rw-rw- 0/0   1603 Jul 01 15:51 2015 intl_getmonthname.o
rw-rw-rw- 0/0    677 Jul 01 15:51 2015 intl_getset.o
rw-rw-rw- 0/0    791 Jul 01 15:51 2015 intl_gettimeformat.o
rw-rw-rw- 0/0   1369 Jul 01 15:51 2015 intl_getweekdayname.o
rw-rw-rw- 0/0   1521 Jul 01 15:51 2015 io_cls.o
rw-rw-rw- 0/0   1550 Jul 01 15:51 2015 io_color.o
rw-rw-rw- 0/0   1202 Jul 01 15:51 2015 io_gethnd.o
rw-rw-rw- 0/0    874 Jul 01 15:51 2015 io_getsize.o
rw-rw-rw- 0/0    988 Jul 01 15:51 2015 io_getx.o
rw-rw-rw- 0/0   1115 Jul 01 15:51 2015 io_getxy.o
rw-rw-rw- 0/0    988 Jul 01 15:51 2015 io_gety.o
rw-rw-rw- 0/0    677 Jul 01 15:51 2015 io_hinkey.o
rw-rw-rw- 0/0    987 Jul 01 15:51 2015 io_inkey.o
rw-rw-rw- 0/0   5128 Jul 01 15:51 2015 io_input.o
rw-rw-rw- 0/0    757 Jul 01 15:51 2015 io_isredir.o
rw-rw-rw- 0/0   1667 Jul 01 15:51 2015 io_locate.o
rw-rw-rw- 0/0    790 Jul 01 15:51 2015 io_lpos.o
rw-rw-rw- 0/0   1981 Jul 01 15:51 2015 io_lprint_byte.o
rw-rw-rw- 0/0    826 Jul 01 15:51 2015 io_lprint_fix.o
rw-rw-rw- 0/0    973 Jul 01 15:51 2015 io_lprint_fp.o
rw-rw-rw- 0/0   1947 Jul 01 15:51 2015 io_lprint_int.o
rw-rw-rw- 0/0   2063 Jul 01 15:51 2015 io_lprint_longint.o
rw-rw-rw- 0/0   1991 Jul 01 15:51 2015 io_lprint_short.o
rw-rw-rw- 0/0    820 Jul 01 15:51 2015 io_lprint_str.o
rw-rw-rw- 0/0    816 Jul 01 15:51 2015 io_lprint_wstr.o
rw-rw-rw- 0/0    703 Jul 01 15:51 2015 io_lprintusg.o
rw-rw-rw- 0/0    799 Jul 01 15:51 2015 io_lprintvoid.o
rw-rw-rw- 0/0    741 Jul 01 15:51 2015 io_maxrow.o
rw-rw-rw- 0/0   1993 Jul 01 15:51 2015 io_mouse.o
rw-rw-rw- 0/0   1962 Jul 01 15:51 2015 io_multikey.o
rw-rw-rw- 0/0   1719 Jul 01 15:51 2015 io_pageset.o
rw-rw-rw- 0/0   1575 Jul 01 15:51 2015 io_pcopy.o
rw-rw-rw- 0/0    971 Jul 01 15:51 2015 io_print.o
rw-rw-rw- 0/0   1958 Jul 01 15:51 2015 io_print_byte.o
rw-rw-rw- 0/0    943 Jul 01 15:51 2015 io_print_fix.o
rw-rw-rw- 0/0    870 Jul 01 15:51 2015 io_print_fp.o
rw-rw-rw- 0/0   1924 Jul 01 15:51 2015 io_print_int.o
rw-rw-rw- 0/0   1988 Jul 01 15:51 2015 io_print_longint.o
rw-rw-rw- 0/0   1952 Jul 01 15:51 2015 io_print_short.o
rw-rw-rw- 0/0    941 Jul 01 15:51 2015 io_print_wstr.o
rw-rw-rw- 0/0   3412 Jul 01 15:51 2015 io_printbuff.o
rw-rw-rw- 0/0   3444 Jul 01 15:51 2015 io_printbuff_wstr.o
rw-rw-rw- 0/0   8831 Jul 01 15:51 2015 io_printer.o
rw-rw-rw- 0/0   1164 Jul 01 15:51 2015 io_printpad.o
rw-rw-rw- 0/0   1156 Jul 01 15:51 2015 io_printpad_wstr.o
rw-rw-rw- 0/0  11563 Jul 01 15:51 2015 io_printusg.o
rw-rw-rw- 0/0    993 Jul 01 15:51 2015 io_printvoid.o
rw-rw-rw- 0/0   1033 Jul 01 15:51 2015 io_printvoid_wstr.o
rw-rw-rw- 0/0    980 Jul 01 15:51 2015 io_readstr.o
rw-rw-rw- 0/0    998 Jul 01 15:51 2015 io_readxy.o
rw-rw-rw- 0/0    871 Jul 01 15:51 2015 io_screensize.o
rw-rw-rw- 0/0   1234 Jul 01 15:51 2015 io_scroll.o
rw-rw-rw- 0/0   4218 Jul 01 15:51 2015 io_serial.o
rw-rw-rw- 0/0    648 Jul 01 15:51 2015 io_setpos.o
rw-rw-rw- 0/0   2389 Jul 01 15:51 2015 io_spc.o
rw-rw-rw- 0/0   1227 Jul 01 15:51 2015 io_view.o
rw-rw-rw- 0/0   1143 Jul 01 15:51 2015 io_viewhlp.o
rw-rw-rw- 0/0    634 Jul 01 15:51 2015 io_viewupdate.o
rw-rw-rw- 0/0   1697 Jul 01 15:51 2015 io_width.o
rw-rw-rw- 0/0   1987 Jul 01 15:51 2015 io_widthdev.o
rw-rw-rw- 0/0    987 Jul 01 15:51 2015 io_widthfile.o
rw-rw-rw- 0/0   2896 Jul 01 15:51 2015 io_window.o
rw-rw-rw- 0/0   1209 Jul 01 15:51 2015 io_write_wstr.o
rw-rw-rw- 0/0   1257 Jul 01 15:51 2015 io_writebyte.o
rw-rw-rw- 0/0   1327 Jul 01 15:51 2015 io_writefloat.o
rw-rw-rw- 0/0   1223 Jul 01 15:51 2015 io_writeint.o
rw-rw-rw- 0/0   1275 Jul 01 15:51 2015 io_writelongint.o
rw-rw-rw- 0/0   1247 Jul 01 15:51 2015 io_writeshort.o
rw-rw-rw- 0/0   1566 Jul 01 15:51 2015 io_writestr.o
rw-rw-rw- 0/0    934 Jul 01 15:51 2015 io_writevoid.o
rw-rw-rw- 0/0    629 Jul 01 15:51 2015 legacy_str_lcase.o
rw-rw-rw- 0/0    629 Jul 01 15:51 2015 legacy_str_ucase.o
rw-rw-rw- 0/0    654 Jul 01 15:51 2015 legacy_strw_lcase.o
rw-rw-rw- 0/0    654 Jul 01 15:51 2015 legacy_strw_ucase.o
rw-rw-rw- 0/0    980 Jul 01 15:51 2015 list.o
rw-rw-rw- 0/0    797 Jul 01 15:51 2015 listdyn.o
rw-rw-rw- 0/0    731 Jul 01 15:51 2015 math_cvn.o
rw-rw-rw- 0/0    879 Jul 01 15:51 2015 math_fix.o
rw-rw-rw- 0/0    767 Jul 01 15:51 2015 math_frac.o
rw-rw-rw- 0/0   1139 Jul 01 15:51 2015 math_log10.o
rw-rw-rw- 0/0   3861 Jul 01 15:51 2015 math_rnd.o
rw-rw-rw- 0/0    918 Jul 01 15:51 2015 math_sgn.o
rw-rw-rw- 0/0    729 Jul 01 15:51 2015 mem_copyclear.o
rw-rw-rw- 0/0    680 Jul 01 15:51 2015 oop_istypeof.o
rw-rw-rw- 0/0    776 Jul 01 15:51 2015 oop_object.o
rw-rw-rw- 0/0    652 Jul 01 15:51 2015 oop_object_copyctor.o
rw-rw-rw- 0/0   1815 Jul 01 15:51 2015 qb_file_open.o
rw-rw-rw- 0/0    643 Jul 01 15:51 2015 qb_inkey.o
rw-rw-rw- 0/0    627 Jul 01 15:51 2015 qb_sleep.o
rw-rw-rw- 0/0   1104 Jul 01 15:51 2015 qb_str_convto.o
rw-rw-rw- 0/0   1200 Jul 01 15:51 2015 qb_str_convto_flt.o
rw-rw-rw- 0/0   1141 Jul 01 15:51 2015 qb_str_convto_lng.o
rw-rw-rw- 0/0    842 Jul 01 15:51 2015 scancodes.o
rw-rw-rw- 0/0   1710 Jul 01 15:51 2015 signals.o
rw-rw-rw- 0/0    709 Jul 01 15:51 2015 str_asc.o
rw-rw-rw- 0/0   1690 Jul 01 15:52 2015 str_assign.o
rw-rw-rw- 0/0    775 Jul 01 15:52 2015 str_base.o
rw-rw-rw- 0/0   1090 Jul 01 15:52 2015 str_bin.o
rw-rw-rw- 0/0    880 Jul 01 15:52 2015 str_bin_lng.o
rw-rw-rw- 0/0    699 Jul 01 15:52 2015 str_bin_ptr.o
rw-rw-rw- 0/0    733 Jul 01 15:52 2015 str_chr.o
rw-rw-rw- 0/0   1096 Jul 01 15:52 2015 str_comp.o
rw-rw-rw- 0/0   1119 Jul 01 15:52 2015 str_concat.o
rw-rw-rw- 0/0   1155 Jul 01 15:52 2015 str_concatassign.o
rw-rw-rw- 0/0   1492 Jul 01 15:52 2015 str_convfrom.o
rw-rw-rw- 0/0   1326 Jul 01 15:52 2015 str_convfrom_int.o
rw-rw-rw- 0/0   1376 Jul 01 15:52 2015 str_convfrom_lng.o
rw-rw-rw- 0/0    818 Jul 01 15:52 2015 str_convfrom_rad.o
rw-rw-rw- 0/0    892 Jul 01 15:52 2015 str_convfrom_radlng.o
rw-rw-rw- 0/0   1283 Jul 01 15:52 2015 str_convfrom_uint.o
rw-rw-rw- 0/0   1398 Jul 01 15:52 2015 str_convfrom_ulng.o
rw-rw-rw- 0/0   1041 Jul 01 15:52 2015 str_convto.o
rw-rw-rw- 0/0   1172 Jul 01 15:52 2015 str_convto_flt.o
rw-rw-rw- 0/0   1085 Jul 01 15:52 2015 str_convto_lng.o
rw-rw-rw- 0/0   2143 Jul 01 15:52 2015 str_core.o
rw-rw-rw- 0/0   1767 Jul 01 15:52 2015 str_cvmk.o
rw-rw-rw- 0/0    649 Jul 01 15:52 2015 str_del.o
rw-rw-rw- 0/0   1033 Jul 01 15:52 2015 str_fill.o
rw-rw-rw- 0/0  19054 Jul 01 15:52 2015 str_format.o
rw-rw-rw- 0/0    979 Jul 01 15:52 2015 str_ftoa.o
rw-rw-rw- 0/0   1090 Jul 01 15:52 2015 str_hex.o
rw-rw-rw- 0/0   1011 Jul 01 15:52 2015 str_hex_lng.o
rw-rw-rw- 0/0    699 Jul 01 15:52 2015 str_hex_ptr.o
rw-rw-rw- 0/0    746 Jul 01 15:52 2015 str_hskip.o
rw-rw-rw- 0/0   1548 Jul 01 15:52 2015 str_instr.o
rw-rw-rw- 0/0    847 Jul 01 15:52 2015 str_instrany.o
rw-rw-rw- 0/0    879 Jul 01 15:52 2015 str_instrrev.o
rw-rw-rw- 0/0    866 Jul 01 15:52 2015 str_instrrevany.o
rw-rw-rw- 0/0   1071 Jul 01 15:52 2015 str_lcase.o
rw-rw-rw- 0/0    896 Jul 01 15:52 2015 str_left.o
rw-rw-rw- 0/0    708 Jul 01 15:52 2015 str_len.o
rw-rw-rw- 0/0    977 Jul 01 15:52 2015 str_ltrim.o
rw-rw-rw- 0/0   1116 Jul 01 15:52 2015 str_ltrimany.o
rw-rw-rw- 0/0   1243 Jul 01 15:52 2015 str_ltrimex.o
rw-rw-rw- 0/0    877 Jul 01 15:52 2015 str_mid.o
rw-rw-rw- 0/0    876 Jul 01 15:52 2015 str_midassign.o
rw-rw-rw- 0/0    763 Jul 01 15:52 2015 str_misc.o
rw-rw-rw- 0/0   1090 Jul 01 15:52 2015 str_oct.o
rw-rw-rw- 0/0    880 Jul 01 15:52 2015 str_oct_lng.o
rw-rw-rw- 0/0    699 Jul 01 15:52 2015 str_oct_ptr.o
rw-rw-rw- 0/0    897 Jul 01 15:52 2015 str_right.o
rw-rw-rw- 0/0    964 Jul 01 15:52 2015 str_rtrim.o
rw-rw-rw- 0/0   1116 Jul 01 15:52 2015 str_rtrimany.o
rw-rw-rw- 0/0   1166 Jul 01 15:52 2015 str_rtrimex.o
rw-rw-rw- 0/0   1075 Jul 01 15:52 2015 str_set.o
rw-rw-rw- 0/0    794 Jul 01 15:52 2015 str_tempdescf.o
rw-rw-rw- 0/0    718 Jul 01 15:52 2015 str_tempdescv.o
rw-rw-rw- 0/0    884 Jul 01 15:52 2015 str_tempdescz.o
rw-rw-rw- 0/0    735 Jul 01 15:52 2015 str_tempres.o
rw-rw-rw- 0/0   1059 Jul 01 15:52 2015 str_trim.o
rw-rw-rw- 0/0   1195 Jul 01 15:52 2015 str_trimany.o
rw-rw-rw- 0/0   1389 Jul 01 15:52 2015 str_trimex.o
rw-rw-rw- 0/0   1071 Jul 01 15:52 2015 str_ucase.o
rw-rw-rw- 0/0    633 Jul 01 15:52 2015 strw_alloc.o
rw-rw-rw- 0/0    663 Jul 01 15:52 2015 strw_asc.o
rw-rw-rw- 0/0    699 Jul 01 15:52 2015 strw_assign.o
rw-rw-rw- 0/0   1118 Jul 01 15:52 2015 strw_bin.o
rw-rw-rw- 0/0    814 Jul 01 15:52 2015 strw_bin_lng.o
rw-rw-rw- 0/0    715 Jul 01 15:52 2015 strw_bin_ptr.o
rw-rw-rw- 0/0    661 Jul 01 15:52 2015 strw_chr.o
rw-rw-rw- 0/0    821 Jul 01 15:52 2015 strw_comp.o
rw-rw-rw- 0/0    784 Jul 01 15:52 2015 strw_concat.o
rw-rw-rw- 0/0    735 Jul 01 15:52 2015 strw_concatassign.o
rw-rw-rw- 0/0   1871 Jul 01 15:52 2015 strw_convassign.o
rw-rw-rw- 0/0   1441 Jul 01 15:52 2015 strw_convconcat.o
rw-rw-rw- 0/0   1903 Jul 01 15:52 2015 strw_convfrom.o
rw-rw-rw- 0/0   1702 Jul 01 15:52 2015 strw_convfrom_int.o
rw-rw-rw- 0/0   1801 Jul 01 15:52 2015 strw_convfrom_lng.o
rw-rw-rw- 0/0    838 Jul 01 15:52 2015 strw_convfrom_rad.o
rw-rw-rw- 0/0    893 Jul 01 15:52 2015 strw_convfrom_radlng.o
rw-rw-rw- 0/0    831 Jul 01 15:52 2015 strw_convfrom_str.o
rw-rw-rw- 0/0   1705 Jul 01 15:52 2015 strw_convfrom_uint.o
rw-rw-rw- 0/0   1804 Jul 01 15:52 2015 strw_convfrom_ulng.o
rw-rw-rw- 0/0    841 Jul 01 15:52 2015 strw_convto.o
rw-rw-rw- 0/0   1072 Jul 01 15:52 2015 strw_convto_flt.o
rw-rw-rw- 0/0    885 Jul 01 15:52 2015 strw_convto_lng.o
rw-rw-rw- 0/0    831 Jul 01 15:52 2015 strw_convto_str.o
rw-rw-rw- 0/0    618 Jul 01 15:52 2015 strw_del.o
rw-rw-rw- 0/0    823 Jul 01 15:52 2015 strw_fill.o
rw-rw-rw- 0/0    953 Jul 01 15:52 2015 strw_ftoa.o
rw-rw-rw- 0/0   1118 Jul 01 15:52 2015 strw_hex.o
rw-rw-rw- 0/0    961 Jul 01 15:52 2015 strw_hex_lng.o
rw-rw-rw- 0/0    715 Jul 01 15:52 2015 strw_hex_ptr.o
rw-rw-rw- 0/0    736 Jul 01 15:52 2015 strw_instr.o
rw-rw-rw- 0/0    713 Jul 01 15:52 2015 strw_instrany.o
rw-rw-rw- 0/0    791 Jul 01 15:52 2015 strw_instrrev.o
rw-rw-rw- 0/0    778 Jul 01 15:52 2015 strw_instrrevany.o
rw-rw-rw- 0/0    930 Jul 01 15:52 2015 strw_lcase.o
rw-rw-rw- 0/0    724 Jul 01 15:52 2015 strw_left.o
rw-rw-rw- 0/0    615 Jul 01 15:52 2015 strw_len.o
rw-rw-rw- 0/0    789 Jul 01 15:52 2015 strw_ltrim.o
rw-rw-rw- 0/0    846 Jul 01 15:52 2015 strw_ltrimany.o
rw-rw-rw- 0/0    925 Jul 01 15:52 2015 strw_ltrimex.o
rw-rw-rw- 0/0    788 Jul 01 15:52 2015 strw_mid.o
rw-rw-rw- 0/0    792 Jul 01 15:52 2015 strw_midassign.o
rw-rw-rw- 0/0   1118 Jul 01 15:52 2015 strw_oct.o
rw-rw-rw- 0/0    814 Jul 01 15:52 2015 strw_oct_lng.o
rw-rw-rw- 0/0    715 Jul 01 15:52 2015 strw_oct_ptr.o
rw-rw-rw- 0/0    741 Jul 01 15:52 2015 strw_right.o
rw-rw-rw- 0/0    741 Jul 01 15:52 2015 strw_rtrim.o
rw-rw-rw- 0/0    846 Jul 01 15:52 2015 strw_rtrimany.o
rw-rw-rw- 0/0    909 Jul 01 15:52 2015 strw_rtrimex.o
rw-rw-rw- 0/0    903 Jul 01 15:52 2015 strw_set.o
rw-rw-rw- 0/0    665 Jul 01 15:52 2015 strw_space.o
rw-rw-rw- 0/0    788 Jul 01 15:52 2015 strw_trim.o
rw-rw-rw- 0/0    951 Jul 01 15:52 2015 strw_trimany.o
rw-rw-rw- 0/0   1062 Jul 01 15:52 2015 strw_trimex.o
rw-rw-rw- 0/0    930 Jul 01 15:52 2015 strw_ucase.o
rw-rw-rw- 0/0    668 Jul 01 15:52 2015 swap_mem.o
rw-rw-rw- 0/0   1392 Jul 01 15:52 2015 swap_str.o
rw-rw-rw- 0/0    936 Jul 01 15:52 2015 swap_wstr.o
rw-rw-rw- 0/0    626 Jul 01 15:52 2015 sys_beep.o
rw-rw-rw- 0/0    843 Jul 01 15:52 2015 sys_cdir.o
rw-rw-rw- 0/0    643 Jul 01 15:52 2015 sys_chain.o
rw-rw-rw- 0/0    689 Jul 01 15:52 2015 sys_chdir.o
rw-rw-rw- 0/0   1165 Jul 01 15:52 2015 sys_cmd.o
rw-rw-rw- 0/0    612 Jul 01 15:52 2015 sys_delay.o
rw-rw-rw- 0/0   1532 Jul 01 15:52 2015 sys_dylib.o
rw-rw-rw- 0/0   1120 Jul 01 15:52 2015 sys_environ.o
rw-rw-rw- 0/0    642 Jul 01 15:52 2015 sys_exec.o
rw-rw-rw- 0/0   1475 Jul 01 15:52 2015 sys_execex.o
rw-rw-rw- 0/0    885 Jul 01 15:52 2015 sys_exepath.o
rw-rw-rw- 0/0    663 Jul 01 15:52 2015 sys_fmem.o
rw-rw-rw- 0/0    650 Jul 01 15:52 2015 sys_getcwd.o
rw-rw-rw- 0/0    776 Jul 01 15:52 2015 sys_getexename.o
rw-rw-rw- 0/0    840 Jul 01 15:53 2015 sys_getexepath.o
rw-rw-rw- 0/0    767 Jul 01 15:53 2015 sys_getshortpath.o
rw-rw-rw- 0/0    596 Jul 01 15:53 2015 sys_hshell.o
rw-rw-rw- 0/0    689 Jul 01 15:53 2015 sys_mkdir.o
rw-rw-rw- 0/0    876 Jul 01 15:53 2015 sys_parseargs.o
rw-rw-rw- 0/0   9061 Jul 01 15:53 2015 sys_portio.o
rw-rw-rw- 0/0    689 Jul 01 15:53 2015 sys_rmdir.o
rw-rw-rw- 0/0    711 Jul 01 15:53 2015 sys_run.o
rw-rw-rw- 0/0    702 Jul 01 15:53 2015 sys_shell.o
rw-rw-rw- 0/0   2753 Jul 01 15:53 2015 thread_call.o
rw-rw-rw- 0/0   4191 Jul 01 15:53 2015 thread_cond.o
rw-rw-rw- 0/0   1235 Jul 01 15:53 2015 thread_core.o
rw-rw-rw- 0/0    960 Jul 01 15:53 2015 thread_ctx.o
rw-rw-rw- 0/0    685 Jul 01 15:53 2015 thread_detach.o
rw-rw-rw- 0/0   1162 Jul 01 15:53 2015 thread_mutex.o
rw-rw-rw- 0/0   1999 Jul 01 15:53 2015 time_core.o
rw-rw-rw- 0/0    982 Jul 01 15:53 2015 time_date.o
rw-rw-rw- 0/0   1740 Jul 01 15:53 2015 time_dateadd.o
rw-rw-rw- 0/0   2594 Jul 01 15:53 2015 time_datediff.o
rw-rw-rw- 0/0   1966 Jul 01 15:53 2015 time_datepart.o
rw-rw-rw- 0/0    899 Jul 01 15:53 2015 time_dateserial.o
rw-rw-rw- 0/0   1082 Jul 01 15:53 2015 time_dateset.o
rw-rw-rw- 0/0    894 Jul 01 15:53 2015 time_datevalue.o
rw-rw-rw- 0/0   1918 Jul 01 15:53 2015 time_decodeserdate.o
rw-rw-rw- 0/0   1340 Jul 01 15:53 2015 time_decodesertime.o
rw-rw-rw- 0/0    725 Jul 01 15:53 2015 time_isdate.o
rw-rw-rw- 0/0    796 Jul 01 15:53 2015 time_monthname.o
rw-rw-rw- 0/0    841 Jul 01 15:53 2015 time_now.o
rw-rw-rw- 0/0   2883 Jul 01 15:53 2015 time_parsedate.o
rw-rw-rw- 0/0   1468 Jul 01 15:53 2015 time_parsedatetime.o
rw-rw-rw- 0/0   1453 Jul 01 15:53 2015 time_parsetime.o
rw-rw-rw- 0/0    734 Jul 01 15:53 2015 time_setdate.o
rw-rw-rw- 0/0    734 Jul 01 15:53 2015 time_settime.o
rw-rw-rw- 0/0    799 Jul 01 15:53 2015 time_sleep.o
rw-rw-rw- 0/0    803 Jul 01 15:53 2015 time_sleepex.o
rw-rw-rw- 0/0    966 Jul 01 15:53 2015 time_time.o
rw-rw-rw- 0/0   1080 Jul 01 15:53 2015 time_timer.o
rw-rw-rw- 0/0    725 Jul 01 15:53 2015 time_timeserial.o
rw-rw-rw- 0/0   1098 Jul 01 15:53 2015 time_timeset.o
rw-rw-rw- 0/0    894 Jul 01 15:53 2015 time_timevalue.o
rw-rw-rw- 0/0   1692 Jul 01 15:53 2015 time_week.o
rw-rw-rw- 0/0    849 Jul 01 15:53 2015 time_weekdayname.o
rw-rw-rw- 0/0   1003 Jul 01 15:53 2015 utf_convfrom_char.o
rw-rw-rw- 0/0   1298 Jul 01 15:53 2015 utf_convfrom_wchar.o
rw-rw-rw- 0/0   2508 Jul 01 15:53 2015 utf_convto_char.o
rw-rw-rw- 0/0   2077 Jul 01 15:53 2015 utf_convto_wchar.o
rw-rw-rw- 0/0   1245 Jul 01 15:53 2015 utf_core.o
rw-rw-rw- 0/0   1469 Jul 01 15:53 2015 vfs_open.o
rw-rw-rw- 0/0    583 Jul 01 15:53 2015 cpudetect.o"
zdx6R10h,Untitled,MeehoweCK,C++,Thursday 25th of January 2024 11:47:13 AM CDT,"#include <iostream>
#include <vector>

void sortuj(std::vector<short int>& cyfry) {
	auto n{ cyfry.size() };
	for (short int i = 0; i < n - 1; ++i) {
		for (short int j = 0; j < n - i - 1; ++j) {
			if (cyfry[j] > cyfry[j + 1]) {
				std::swap(cyfry[j], cyfry[j + 1]);
			}
		}
	}
}

std::vector<short int> wygeneruj_pierwszy_ciag(int liczba) {
	std::vector<short int> wynik{};
	while (liczba > 0) {
		wynik.push_back(liczba % 10);
		liczba /= 10;
	}
	sortuj(wynik);
	return wynik;
}

unsigned long long wygeneruj_liczbe_z_ciagu(const std::vector<short int>& ciag) {
	
}

int main() {
	unsigned long long a;
	int b;
	std::cout << ""Podaj dwie liczby calkowite (oddzielone spacja): "";
	std::cin >> a >> b;

	return 0;
};"
BxSWs50c,Untitled,backparsnip,Bash,Thursday 25th of January 2024 11:25:55 AM CDT,"frontpotatoroof

A list of terms with special characters within them (- @ / = +)

2-G4BMK97
2@G4BMK97
2/G4BMK97
2\G4BMK97
2=G4BMK97
2+G4BMK97

This is Jan 25 testing 1725
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6e"
EkNmFr17,Scher 1/25/24,marshallsmyth,CSS,Thursday 25th of January 2024 11:06:56 AM CDT,"
 <!DOCTYPE html><html lang=""en""><head><title>Scheherazade</title><style> 
 @import url(https://fonts.googleapis.com/css?family=Shalimar|Grechen+Fuemen|Caveat|Calligraffitti); 
 ::-webkit-scrollbar-thumb:vertical { background:#4e004e;border-radius:0px;box-shadow: 0px 0px 0px #000; }
 ::-webkit-scrollbar-thumb:horizontal { background:#4e004e;border-radius:0px;box-shadow: 0px 0px 0px #000; }
 ::-webkit-scrollbar { width:7px; background:#8e008e;border-radius:0px; } 
                          body { background:#103; }
 
  .front { position:fixed;top:0%;left:33%;background-size:100% 100%;background-image:url(https://i.imgur.com/UyRE0H4.png); 
  background-repeat:no-repeat;width:40%;height:99%;transition:2s;opacity:0.09; } 
  .front:hover { opacity:1;z-index:-1;transition:1s; }

  .titles { position:absolute;top:-177px;left:15.5vw;font-family:""grechen fuemen"";font-size:70px;color:#60f; opacity:1;z-index:999;} 
  .list {background:#000;list-style-type:square;margin:60px 33px -88px 33px;font-family:""grechen fuemen"";font-size:33px;
 font-weight:bold;line-height:33px;word-spacing:-3px;color:#60f;text-align:justify;}
  .captions {padding:15px 7px 1px 7px;font-family:""grechen fuemen"";font-size:44px;line-height:50px;color:#f08;text-align:center;}
  .text {padding:35px 44px 17px 44px;font-family:caveat;font-size:44px;font-style:italic;line-height:40px;word-spacing:2px;
 letter-spacing:0px;color:#f08;text-indent:55px;text-align:left;}
  .text2 {font-family:caveat;font-size:22px;line-height:19px;color:#fa1;text-align:left;text-indent:22px;font-style:italic;padding:11px;letter-spacing:0px;}
 
 .bars {width:100%;margin:122px 0px 0px 0.1px;border-bottom:20px ridge #60f;font-family:shalimar;font-size:50px;line-height:19px;letter-spacing:3px;font-style:italic;color:#f08;} 
 .center {display:block;margin-left:auto;margin-right:auto;}
 
 .cssvalidator {position:fixed;top:93%;left:0.9%;z-index:99;opacity:1;} .htmlvalidator {position:fixed;top:93%;left:7.3%;z-index:99;opacity:1;} 
 .date { position:fixed;top:94%;right:1%;transition:.1s;font-family:shalimar;font-size:20px;line-height:18px;font-style:italic;letter-spacing:1.5px;
 color:#fb1;text-align:center;width:44%; } 
 .date:hover {height:90vh;top:10vh;overflow:auto;width:72%;background:#206;} 

  #navi {position:absolute;top:33px;left:33px;z-index:3; }
  a.nav:link, a.nav:active, a.nav:visited {display:inline-block;width:188px;height:16px;color:#0f0;font-family:""grechen fuemen"";
  margin:15px 0 0 22px;background:#300;border:3px solid #0f0;border-radius:29px;text-align:center;line-height:36px;
  font-size:27px;padding:7px 24px 24px 17px;text-decoration:none;-webkit-transition:all 1s ease-out;-moz-transition:all 1s ease-out; }
  a.nav:hover{background:#030;color:#0f0; }
 
  .content {position:fixed;z-index:-1;top:88px;left:294px;border:2px solid #0f0;width:1777px;height:899px;background:#300;overflow:auto;
  font-family:macondo;font-size:55px;text-align:justify;line-height:56px;padding:6px;opacity:0;color:#0f0;border-radius:5px;transition:1s;}
  .content:target {position:fixed;z-index:60;opacity:1; }


  </style>

 
 <div id=""navi""><a class=""nav"" href=""#1"" style=""margin:0 0 0 0;""> Scheherazade</a>
 <div id=""navi""><a class=""nav"" href=""#2"" style=""margin:22px 0 0 -33px;""> Timeline</a>
 <div id=""navi""><a class=""nav"" href=""#3"" style=""margin:44px 0 0 -66px;""> Active Updates</a>
 <div id=""navi""><a class=""nav"" href=""#4"" style=""margin:66px 0 0 -99px;""> Images</a>
 <div id=""navi""><a class=""nav"" href=""#5"" style=""margin:88px 0 0 -132px;""> Her Adventures</a>
 <div id=""navi""><a class=""nav"" href=""#6"" style=""margin:110px 0 0 -165px;""> Her Relativity</a>
 <div id=""navi""><a class=""nav"" href=""#7"" style=""margin:132px 0 0 -198px;""> Front Page</a>             </div>

<div class=""titles"">Scheherazade</div> <div class=""front""></div>


 <div id=""1"" class=""content"">  Scheherazade<img src=""https://i.imgur.com/oXUx3Bs.jpg"" style=""width:100%;"" alt=""screenshot"" class=""center""></div> 
 

 <div id=""2"" class=""content"">​Timeline<img src=""https://i.imgur.com/i423etA.jpg"" style=""width:100%;"" alt=""screenshot"" class=""center""></div> 
 
<div class=""box3"">Active Updates<div class=""titles"">Scheherazade</div><div class=""bars"">Scheherazade's Updates</div> 
<ul class=""list""> <li>2020, April -Start of the active updates. Am a very busy Love Succubus! My time is spread out raising my youngest, Dee Dee Deeahndra. It is good her father is a very responsible and loving succubus. Also readying the backup team of the Safety Protocol Mission.</ul> 
<div class=""bars"">Continuing Story</div><div class=""captions"">Taken as Scheher was convalescing</div><br> 
<img src=""https://i.imgur.com/B5NNAYC.png"" style=""width:33%;"" alt=""another"" class=""center"">
<div class=""text"" style=""font-size:44px;line-height:50px;"">
<p>...<p style=""margin-top:-44px;"">...</p><p style=""margin-top:-44px;"">...</p> </div></div>​ 
 
​<div class=""box4"">Images<img src=""https://i.imgur.com/9zeTNJu.jpg"" style=""width:100%;"" alt=""screenshot"" class=""center""></div>
 
​<div class=""box5"">Scheherazade's Adventures<img src=""https://i.imgur.com/a4TfPgf.jpg"" style=""width:100%;"" alt=""screenshot"" class=""center""></div>
 
<div class=""box6"">Scheherazade's Relativity<img src=""https://i.imgur.com/QI9NVHs.jpg"" style=""width:100%;"" alt=""screenshot"" class=""center""></div> 
​
​<div class=""date"">Scheherazade 3/16/22 Coded by Esther<div class=""text2""><p><br>There is a history of coders for all the characters of this story. It began as my daughter Kathy WayStone's story which she wrote as an outgrowth of internet roleplaying, simultaneous with it. Elements of her roleplaying grew into her story. My elderly uncle became interested in her story as did I. The three of us then worked together with her roleplay story. Just about the time we started collaborating, my daughter suddenly suffered Guillaine-Barre syndrome. It was severe, and its onset was very rapid. She nearly died. Yes, she had an out of body experience as she was intubated. That was February 2017. Her near total paralysis left her intubated for 5 days. Never had the neurologists known of a person more determined to heal. It was expected she would walk in 6 months, but with a physical therapist's help, she had her feet on the ground sitting upright at the edge of her bed while still intubated. After her breathing tube was removed she was in the hospital another 3 weeks, and then a week at a physical therapy hospital.<p>When she returned home 85% recovered, she began a new phase of writing with my uncle and I as 3 equal partners. She learned CSS on her own, at first doing it wrong but making it work. We all began creating new characters organically.
 </div>

<div class=""cssvalidator""><img src=""http://jigsaw.w3.org/css-validator/images/vcss"" style=""width:66px;"" alt=""css"" /></div>
<div class=""htmlvalidator""><img src=""http://jigsaw.w3.org/css-validator/images/vcss-blue"" style=""width:66px;"" alt=""html"" /></div> 



"
75x11bEB,VTM Test lanci 1.0,FedeAST,C#,Thursday 25th of January 2024 10:56:46 AM CDT,"// Variabili per tenere traccia delle somme complessive
int totaleLanciSenzaSuccessi = 0;
int totaleLanciUnSuccesso = 0;
int totaleLanciTreSuccessi = 0;
int totaleLanciAlmenoUnSuccesso = 0;
int totaleLanciAlmenoTreSuccessi = 0;
int totaleLanciTuttiSuccessi = 0;

List<int> numeroSuccessi = [];
Logger logger = new();
Random rNumber = new();
//Ciclo di 10 lanci
for (int c = 1; c < 10; c++)
{
    logger.Log($""ESECUZIONE TASK {c}/10"");
    //Faccio i lanci
    for (int i = 1; i <= 1000000; i++)
    {
        Lancio lancio = new();
        lancio.Dado = [];

        for (int j = 0; j < 10; j++)
            lancio.Dado.Add((int)rNumber.NextInt64(1, 10));

        if (lancio.Has1)
            lancio.RimuoviSuccessi();

        numeroSuccessi.Add(lancio.Dado.Where(e => e > 7).Count());
    }

    for (int i = 0; i < numeroSuccessi.Count(); i++)
        logger.Log($""Lancio {i} -> Successi: {numeroSuccessi[i]}"");

    logger.Log(""=========== RIEPILOGO ==========="");

    int lanciSenzaSuccessi = numeroSuccessi.Where(e => e == 0).Count();
    int lanciUnSuccesso = numeroSuccessi.Where(e => e == 1).Count();
    int lanciTreSuccessi = numeroSuccessi.Where(e => e == 3).Count();
    int lanciAlmenoUnSuccesso = numeroSuccessi.Where(e => e > 0).Count();
    int lanciAlmenoTreSuccessi = numeroSuccessi.Where(e => e > 2).Count();
    int lanciTuttiSuccessi = numeroSuccessi.Where(e => e == 10).Count();

    logger.Log($""Lanci con nessun successo: {lanciSenzaSuccessi} | {(decimal)lanciSenzaSuccessi / numeroSuccessi.Count * 100} %"");
    logger.Log($""Lanci con un singolo successo: {lanciUnSuccesso} | {(decimal)lanciUnSuccesso / numeroSuccessi.Count * 100} %"");
    logger.Log($""Lanci con tre successi: {lanciTreSuccessi} | {(decimal)lanciTreSuccessi / numeroSuccessi.Count * 100} %"");
    logger.Log($""Lanci con almeno 1 successo: {lanciAlmenoUnSuccesso} | {(decimal)lanciAlmenoUnSuccesso / numeroSuccessi.Count * 100} %"");
    logger.Log($""Lanci con almeno 3 successi: {lanciAlmenoTreSuccessi} | {(decimal)lanciAlmenoTreSuccessi / numeroSuccessi.Count * 100} %"");
    logger.Log($""Lanci con solo successi: {lanciTuttiSuccessi} | {(decimal)lanciTuttiSuccessi / numeroSuccessi.Count * 100} %"");

    // Aggiungo ai totali
    totaleLanciSenzaSuccessi += lanciSenzaSuccessi;
    totaleLanciUnSuccesso += lanciUnSuccesso;
    totaleLanciTreSuccessi += lanciTreSuccessi;
    totaleLanciAlmenoUnSuccesso += lanciAlmenoUnSuccesso;
    totaleLanciAlmenoTreSuccessi += lanciAlmenoTreSuccessi;
    totaleLanciTuttiSuccessi += lanciTuttiSuccessi;
}
logger.Log(""=========== RIEPILOGO COMPLESSIVO ==========="");
logger.Log($""Lanci totali con nessun successo: {totaleLanciSenzaSuccessi} | {(decimal)totaleLanciSenzaSuccessi / (10 * 1000000) * 100} %"");
logger.Log($""Lanci totali con nessun successo: {totaleLanciUnSuccesso} | {(decimal)totaleLanciUnSuccesso / (10 * 1000000) * 100} %"");
logger.Log($""Lanci totali con nessun successo: {totaleLanciTreSuccessi} | {(decimal)totaleLanciTreSuccessi / (10 * 1000000) * 100} %"");
logger.Log($""Lanci totali con nessun successo: {totaleLanciAlmenoUnSuccesso} | {(decimal)totaleLanciAlmenoUnSuccesso / (10 * 1000000) * 100} %"");
logger.Log($""Lanci totali con nessun successo: {totaleLanciAlmenoTreSuccessi} | {(decimal)totaleLanciAlmenoTreSuccessi / (10 * 1000000) * 100} %"");
logger.Log($""Lanci totali con nessun successo: {totaleLanciTuttiSuccessi} | {(decimal)totaleLanciTuttiSuccessi / (10 * 1000000) * 100} %"");
file record Lancio()
{
    public int Esito { get; set; }
    public List<int> Dado { get; set; }
    public bool Has1 => this.Dado.Contains(1);
    public int numDaRimuovere => this.Dado.Where(e => e == 1).Count();
    public void RimuoviSuccessi()
    {
        // Conta il numero di '1' nella lista
        int numeroDiUni = this.Dado.Count(e => e == 1);

        // Rimuove tutti i '1' dalla lista
        this.Dado = Dado.Where(e => e != 1).ToList();

        // Per ogni '1' rimosso, rimuove il valore più alto
        for (int i = 0; i < numeroDiUni; i++)
        {
            if (this.Dado.Any())
            {
                this.Dado.Remove(Dado.Max());
            }
        }
    }
}
file record Logger
{
    public Logger()
    {
        var assemblyDir = Environment.CurrentDirectory;
        this.BaseFolder = Path.Combine(assemblyDir, ""Logs"");
        this.FileName = $""VenditeDirette_{DateTime.Now.ToShortDateString().Replace(""/"", ""-"")}.txt"";
    }
    private string BaseFolder { get; }
    public string FileName { get; set; }
    public string FilePath { get { return Path.Combine(this.BaseFolder, this.FileName); } }
    public static void WriteErrorLine(Exception e) => Console.WriteLine($""\nEccezione:"" +
                                $""\n\t<{nameof(e.InnerException)}>\n\t\t{e.InnerException}\n\t</{nameof(e.InnerException)}>"" +
                                $""\n\t<{nameof(e.Message)}>\n\t\t{e.Message}\n\t</{nameof(e.Message)}>"" +
                                $""\n\t<{nameof(e.Source)}>\n\t\t{e.Source}\n\t</{nameof(e.Source)}>"" +
                                $""\n\t<{nameof(e.StackTrace)}>\n\t\t{e.StackTrace}\n\t</{nameof(e.StackTrace)}>"" +
                                $""\n\t<{nameof(e.Data)}>\n\t\t{e.Data}\n\t</{nameof(e.Data)}>"");
    public void Log(string message) => this.log(message);
    public void LogIntestazioneWorkflow() => this.log($""Inizio esecuzione Vendite Dirette"");
    public void LogChiusuraWorkflow() => this.log(""Fine esecuzione Vendite Dirette"");
    public void LogInvioRiepilogo() => this.log(""Riepilogo inviato con successo"");
    public void LogOkStatus() => this.log(""--> OK"");
    public void LogErrStatus() => this.log(""--> ERR"");
    public void LogRecordErrStatus() => this.log(""Impossibile aggiornare il record, per ulteriori dettagli consultare il DataBase"");
    private void log(string message)
    {
        try
        {
            this.CheckFolder();
            using StreamWriter sw = File.AppendText(FilePath);
            sw.WriteLine($""{DateTime.Now}: {message}"");
            Console.WriteLine($""{DateTime.Now}: {message}"");
        }
        catch (Exception ex)
        {
            Console.WriteLine($""Error writing to log file: {ex.Message}"");
        }
    }
    private void CheckFolder()
    {
        if (!Directory.Exists(this.BaseFolder)) //Se non esiste base folder ~/Logs
            Directory.CreateDirectory(this.BaseFolder); //Creo ~/Logs
    }
}"
RTV6Pei0,Untitled,bofk,C++,Thursday 25th of January 2024 10:46:07 AM CDT,"#include <iostream>

using namespace std;

int main() {
	int s1, s3, s5, s10, B;
	cin >> s1 >> s3 >> s5 >> s10 >> B;

	if (B <= 3 || s5 + s10 == 0) {
		int x = min(s3, B/3);
		B -= 3 * x;
		if (B <= s1) {
			cout << x + B;
		} else {
			cout << 0;
		}
	} else {
		int ans = 0;
		for (int i = 0; i <= s5; i++) {
			if (5 * i > B) break;
			for (int j = 0; j <= s10; j++) {
				if (5 * i + 10 * j > B) break;

				int temp = B - 5 * i - 10 * j;

				int x = min(s3, temp/3);
				temp -= 3 * x;
				if (temp <= s1) {
					if (ans == 0)
						ans = x + temp + i + j;
					else if (x + temp + i + j < ans)
						ans = x + temp + i + j;
				}
			}
		}

		cout << ans;
	}

	return 0;
}"
