id,title,username,language,date,content
B6bXw0FE,kod szablonu allegro marex -71126,Pecetowicz,HTML,Tuesday 7th of May 2024 12:49:24 PM CDT,"<style type=""text/css""><!--
#user_field {    margin: 0; padding:  0; background: ; font-size: 12px; background: #292827; }     #user_field #wrapper { background: url(http://www.bmw-dominik.pl/jurdi/wrapper_bg.gif); top left repeat-y; margin:  auto; width:1000px;overflow:hidden; }     #user_field #header { width:1000px; height:308px; float:left; background: url(http://www.bmw-dominik.pl/jurdi/header1.jpg); top left no-repeat;  }    #user_field #opis-logo{  width:280px;  float:left;  height:239px;  position:relative;   }    #user_field #login{  position:absolute;  top:60px;  left:30px;  font-family:""Lucida Sans Unicode"",Arial, Verdana;  font-size:38px;  color:#d9ccae;   }    #user_field #gwiazdki{  position:absolute;  top:234px;  left:90px;  }    #user_field #logo { float:left; background: url(http://www.bmw-dominik.pl/jurdi/logo1.jpg); top left no-repeat; width:1px; height:1px; display:block; border-color:#34322f; margin-left:0px; margin-top:70px;  }    #user_field #menu { float:left; width:274px; height:auto; background: url(http://www.bmw-dominik.pl/jurdi/mebubg.gif); top left repeat-y;    }    #user_field #title{ float:left; width:229px; height:58px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }   #user_field #title_wysylka{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_wysylka.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }     #user_field #title_kontakt{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_kontakt.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }    #user_field #title_sprzedaz{ float:left; width:229px; height:50px; background: url(http://www.bmw-dominik.pl/jurdi/menu_bg_title_sprzedaz.gif); no-repeat; color:white; font-family:TIMES NEW ROMAN,; font-size:24px; padding-left:45px; padding-top:8px;  }   #user_field .menu { margin-left:80px; font-size:12px; font-family:Geneva, Arial, Helvetica, sans-serif;   }    #user_field #content_main { width:726px; float:left;    }    #user_field #content_top{ width:740px;        height:48px; float:left; background: url(http://www.bmw-dominik.pl/jurdi/content_top1.gif); top leftno-repeat; background-color:#191816; }     #user_field #naglowek { width:650px; height:40px; float:left; font-family:Georgia; letter-spacing:-1px; font-style:bold; font-size:15px; color:#FFFFFF; padding-left:20px; line-height:35px;   }
-</style>
<div id=""wrapper"">
<div id=""header"">
<div id=""opis-logo"">
<div id=""login""></div>
</div>
<div id=""logo""></div>
</div>
<div id=""menu"">
<div id=""title_kontakt""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/kontakt.gif"" /></p>
<font size=""3"">
<div id=""title_sprzedaz""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/sprzedaz.gif"" /></p>
<div id=""title_wysylka""></div>
<p class=""menu""><img src=""http://www.bmw-dominik.pl/jurdi/wysylka.gif"" /></p>
</font></div>
<div id=""content_main"">
<div id=""content_top"">
<div id=""naglowek"" style=""font-size: medium;""><span style=""font-size: 10pt;""><a href=""http://www.allegro.pl/show_user.php?uid=10994439""><strong><font color=""white"">Moje komentarze</font></strong></a> |    <a href=""http://www.allegro.pl/my_page.php?uid=10994439""><strong><font color=""white"">O mnie</font></strong></a> |       <a href=""http://www.allegro.pl/SendMailToUser.php?  itemId=2296792235&userId=10994439""><strong><font color=""white"">Zadaj mi pytanie</font></strong></a> |   <a href=""http://www.allegro.pl/myaccount/favourites/favourites_sellers.php/addNew/?userId=10994439&ret=/show_user.php?  uid=10994439""><strong><font color=""white"">Dodaj mnie do ulubionych</font></strong></a></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 14pt; color: #ffff00;""><strong>WITAMY SERDECZNIE!</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""color: #000000; font-size: 12pt;""><span style=""color: #000080;""><strong><span style=""color: #ffff00;"">Na tej aukcji mamy do zaoferowania:</span></strong></span></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><font face=""Verdana,   Geneva, sans-serif""><strong><span style=""font-family: Verdana, Geneva, sans-serif;""><strong><span style=""font-size: 14pt;"">Wzmocnienie czołowe do Audi A3 Nowy model.</span></strong></span></strong></font></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<font face=""Verdana,   Geneva, sans-serif""><strong> 
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""> <span style=""font-size: 18pt; color: #ffff00;""><strong>CZĘŚCI POCHODZĄ Z DEMONTAŻU</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 18pt; font-family: Times New Roman,Times,serif; color: #ffff00;""><strong>POSIADAMY WSZYSTKIE CZĘŚCI DO TEGO MODELU!</strong></span></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""></div>
<div style=""clear: both; padding: 10px; font-family: verdana; font-size: 13px; color: #ffffff; text-align: center;""><span style=""font-size: 18pt; font-family: Times New Roman,Times,serif; color: #ffff00;""><strong>PRZED ZAKUPEM PROSZĘ O KONTAKT TELEFONICZNY W CELU SPRAWDZENIA STANU MAGAZYNOWEGO!</strong><br /><br /><br /></span></div>
</strong></font></div>
</div>
<font face=""Verdana,   Geneva, sans-serif""><strong><br /><br /><br /> </strong></font></div>
<p><strong><br /><br /><galeria> </strong></p>
<p><strong><br /><br /><br /></strong></p>
<p><strong> </strong></p>
<p><strong><font size=""3""> <!-- koniec glownego contentu - <!-- koniec wrappera -</font></strong></p>
<p><strong> </strong></p>
<p> </p>
<div class=""clear""></div>
<div id=""style_i_banner_inne_aukcje"" style=""text-align: center;""><img src=""http://imge.pl/aleszablony/users/36514/144105/banner_inne_aukcje.png#8bb05"" /></div>
<div style=""background: #fff; width: 1000px; margin: auto; padding-bottom: 20px;""><!-- POCZATEK KODU PANEL MINIATUREK -
<div style=""width: 982px; padding: 10px 0 10px 0; margin: 0 auto;"">
<style><!--
#user_field .sellbst_code_head { line-height: 60px; overflow: hidden; padding-left: 10px; font-size: 22px; text-align: left; } #user_field .sellbst_clear { clear: both; float: none; }#user_field .sellbst_code_150 { width: 982px;   } #user_field .sellbst_code_150 .sellbst_row { width: 150px; float: left; border-radius: 3px; text-decoration: none; float: left; padding: 7px 0;  border: 1px solid #e6e6e6; border-radius: 0px; margin-right: 14px; margin-bottom: 14px;  } #user_field .sellbst_code_150 .sellbst_row:hover { z-index: 50; position: relative; background: #ff5a00; -webkit-box-shadow:  0 0 10px #333; -moz-box-shadow:   0 0 10px #333; box-shadow:  0 0 10px #333; }
-</style>
<div class=""sellbst_code_150""><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=1"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/0.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=2"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/1.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=3"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/2.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=4"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/3.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=5"" style=""margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/4.png"" /></a><a class=""sellbst_row"" href=""http://panel.sellboster.pl/redirect.php?id=27871&position=6"" style=""margin-right: 0; border-right: 1px solid #e6e6e6; margin-bottom: 0; border-bottom: 1px solid #e6e6e6;""><img src=""http://panel.sellboster.pl/panel_images/27871/5.png"" /></a>
<div class=""sellbst_clear""></div>
</div>
<div style=""text-align: center; font-size: 11px; font-weight: bold; padding: 5px;""><a href=""http://panel.sellboster.pl/redirect_custom.php"" style=""color: #000;"">© Sellbooster</a></div>
</div>
<!-- KONIEC KODU PANEL MINIATUREK -</div>
<div id=""dodatkowy_box"" style=""text-align: center;""><a href=""http://panel.aleszablony.pl/1.php""><img src=""http://panel.aleszablony.pl/users/36514/144105/1.png"" /></a></div>"
jfKEDCni,dabdab,f0rSee,Python,Tuesday 7th of May 2024 12:45:20 PM CDT,"import tkinter as tk
from tkinter import ttk
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

half_life_periods = {
    ""Уран-235"": 703.8e6,
    ""Торий-232"": 14.05e6,
    ""Уран-238"": 4.468e6,
    ""Калий-40"": 1.248e6,
    ""Радиум-226"": 1600e6,
    ""Торий-230"": 75380e6,
    ""Уран-234"": 245500e6,
    ""Рубидий-87"": 4.88E16,
    ""Плутоний-239"": 24100e6,
    ""Свинец-207"": 2.185E16,
    ""Калий-41"": 1.248E16,
    ""Тритий"": 12.32e6,
    ""Кобальт-60"": 5.27e6,
    ""Радон-222"": 3.8235e6,
    ""Технеций-99m"": 0.001211e6
}


def calculate_decay(N0, decay_constant, time):
    return N0 * np.exp(-decay_constant * time)

def plot_decay():
    element = selected_element.get()
    N0 = float(entry_N0.get())
    decay_constant = np.log(2) / half_life_periods[element]

    time = np.linspace(0, 10 * half_life_periods[element], 100)
    decay = calculate_decay(N0, decay_constant, time)

    plt.figure()
    plt.plot(time / 10**6 if half_life_periods[element] >= 1E6 else time / 1E3, decay)
    plt.title(f'Распад {element}')
    plt.xlabel('Время (млн лет)' if half_life_periods[element] >= 1E6 else 'Время (тыс лет)')
    plt.ylabel('Оставшееся количество')
    plt.grid(True)

    max_y = N0
    y_ticks = [max_y]
    while len(y_ticks) < 4 and max_y > 0.01 * N0:
        max_y /= 2
        y_ticks.append(max_y)
    y_ticks.append(0)
    plt.yticks(y_ticks, [f'{N0 * (2 ** (-i)):.2f}' for i in range(len(y_ticks) - 1)] + [0])

    plt.ylim(max(y_ticks), 0)

    plt.gca().invert_yaxis()

    canvas = FigureCanvasTkAgg(plt.gcf(), master=window)
    canvas.draw()
    canvas.get_tk_widget().grid(row=5, columnspan=2)

window = tk.Tk()
window.title(""График полураспада"")

selected_element = tk.StringVar()
element_label = ttk.Label(window, text=""Выберите элемент:"")
element_label.grid(row=0, column=0)
element_combobox = ttk.Combobox(window, textvariable=selected_element, values=list(half_life_periods.keys()))
element_combobox.grid(row=0, column=1)
element_combobox.current(0)

entry_N0_label = ttk.Label(window, text=""Начальное количество (N0):"")
entry_N0_label.grid(row=1, column=0)
entry_N0 = ttk.Entry(window)
entry_N0.grid(row=1, column=1)

plot_button = ttk.Button(window, text=""Построить график"", command=plot_decay)
plot_button.grid(row=3, columnspan=2)

window.mainloop()
"
V8WvUEFL,GLPI Install Script,Modder22,PowerShell,Tuesday 7th of May 2024 12:44:09 PM CDT,"param(
    [string]$NewName = $env:NewName
)
 
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] ""Administrator"")) {
    Write-Host ""-------------------------------------------------------------------------`n""
    Write-Host ""Inicie o Script novamente como Administrador!""
    Write-Host ""`n-------------------------------------------------------------------------""
    Exit
}
 
try {
    Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force
    
    if ($NewName -ne """") {
        Write-Host ""`nConfigurando o Hostname ...`n""
        Rename-Computer -NewName $NewName
    } else {
        Write-Host ""`nHostname nao informado, pulando configuracao ...`n""
    }
    
    Write-Host ""`n-------------------------------------------------------------------------`n""
 
    Write-Host ""Configurando Winrm ...`n""
    winrm quickconfig -q
    winrm set winrm/config/winrs '@{MaxMemoryPerShellMB=""512""}'
    winrm set winrm/config '@{MaxTimeoutms=""1800000""}'
    winrm set winrm/config/service '@{AllowUnencrypted=""true""}'
    winrm set winrm/config/service/auth '@{Basic=""true""}'
 
    Write-Host ""`n-------------------------------------------------------------------------`n""
 
    Write-Host ""Configurando Firewall: `n""
    Write-Host ""Criando grupo AGENT_GLPI como dominio ...""
    netsh advfirewall firewall set rule group=""AGENT_GLPI"" new enable=Yes profile=domain
    Write-Host ""Criando grupo AGENT_GLPI como privado ...""
    netsh advfirewall firewall set rule group=""AGENT_GLPI"" new enable=Yes profile=private
    Write-Host ""Configurando portas ...`n""
    Write-Host ""TCP 5985 In:""
    netsh advfirewall firewall add rule name=""HTTP_GLPI"" dir=in action=allow protocol=TCP localport=5985
    Write-Host ""TCP 5985 Out:""
    netsh advfirewall firewall add rule name=""HTTP_GLPI"" dir=out action=allow protocol=TCP localport=5985
    Write-Host ""UDP 5986 In:""
    netsh advfirewall firewall add rule name=""HTTP_GLPI2"" dir=in action=allow protocol=UDP localport=5986
    Write-Host ""UDP 5986 Out""
    netsh advfirewall firewall add rule name=""HTTP_GLPI2"" dir=out action=allow protocol=UDP localport=5986
    Write-Host ""TCP 5986 In:""
    netsh advfirewall firewall add rule name=""winRM HTTPS"" dir=in action=allow protocol=TCP localport=5986
    Write-Host ""TCP 5986 Out""
    netsh advfirewall firewall add rule name=""winRM HTTPS"" dir=out action=allow protocol=TCP localport=5986
    
    Write-Host ""`n-------------------------------------------------------------------------`n""
    
    Write-Host ""Winrm Listeners:`n""
    winrm enumerate winrm/config/listener
    
    Write-Host ""`n-------------------------------------------------------------------------`n""
    Write-Host ""Fim do script!""
    Write-Host ""`n-------------------------------------------------------------------------`n""
 
} catch {
    Write-Host ""`n-------------------------------------------------------------------------`n""
    Write-Host ""Um erro ocorreu: `n$($_.Exception.Message)""
    Write-Host ""`n-------------------------------------------------------------------------`n""
    Exit
}"
G3VN8XTY,tabelka ipb3 - kod - 82314,Pecetowicz,HTML,Tuesday 7th of May 2024 12:30:08 PM CDT,"<!-- POCZATEK TABELI SERWEROW --> <div class=""category_block block_wrap"" id='category_servers'> <h3 id=""category_servers"" class=""maintitle""><a class=""toggle right"" href=""#"" title=""Zmien widocznosc tej kategorii"">Zmien widocznosc tej kategorii</a>Tabela justGame.eu </h3> <div class=""table_wrap""> <tbody align=""center""> <div style='text-align:center'> <tbody><tr class=""row2""><td><table class=""ipb_table""> <tbody><tr> <td align=""center"" class=""row1""><b>ID</b></td> <td align=""center"" class=""row1""><b>Nazwa</b></td> <td align=""center"" class=""row1""><b>Sloty</b></td> <td align=""center"" class=""row1""><b>IP Serwera<br>(Polacz !)</b></td> <td align=""center"" class=""row1""><b>Monitor</b></td> <td align=""center"" class=""row1""><b>Właściciel</b></td> <td align=""center"" class=""row1""><b>GameTracker</b></td> <td align=""center"" class=""row1""><b>Glosuj</b></td> </tr> <tr> <td align=""center"" class=""row1""><span class=""ipsButton_secondary"">#1</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">JustGame.eu | CS:GO MOD</span></td> <td align=""center"" class=""row1""><span style=""color:WHITE; font-size:14px; font-weight:bold;"">[19]</span></td> <td align=""center"" class=""row1""><a href=""steam://connect/193.33.177.130:27210""><div class=""ipsBadge22"" style=""background:#236b8e;"">193.33.177.130:27210</div></a></td> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/193.33.177.130:27210/"" target=""_blank""><img src=""http://cache.www.gametracker.com/server_info/193.33.177.130:27210/b_350_20_5CC8DC_5CC8DC_000000_5CC8DC.png"" style=""margin-bottom: 5px;box-shadow: 0px 0px 40px #236b8e;""></a></td> <td align=""center"" class=""row1""> <a hovercard-ref=""member"" hovercard-id=""154"" data-ipb=""noparse"" class=""url fn name ___hover___member _hoversetup"" href=""http://justgame.pl/stalowy-m154/"" title="""" id=""anonymous_element_198""><span itemprop=""name""><span style=""color:red; background-image:url('http://przemo.org/phpBB2/forum/files/gwiazdkired_158.gif'); text-shadow: 2px 2px 8px #990012; font-weight: bold;"">Stalowy</span></span></a> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/193.33.177.130:27210/"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;""><img src=""http://justgame.eu/DLC/gt.png"" height=""16"" width=""16""> GAMETRACKER</a> <td class=""row1"" align=""center""><a href=""http://cssetti.pl/serwer/193.33.177.130:27210"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;"">Zaglosuj</a> </tr> <tr> <td align=""center"" class=""row1""><span class=""ipsButton_secondary"">#2</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">JustGame.eu | ONLY DD2 <img src=""http://justgame.eu/DLC/icon_new.gif"" alt=""NEW"" /></span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">[19]</span></td> <td align=""center"" class=""row1""><a href=""steam://connect/193.33.177.130:27215""><div class=""ipsBadge22"" style=""background:#236b8e;"">193.33.177.130:27215</div></a></td> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/193.33.177.130:27215/"" target=""_blank""><img src=""http://cache.www.gametracker.com/server_info/193.33.177.130:27215/b_350_20_5CC8DC_5CC8DC_000000_5CC8DC.png"" style=""margin-bottom: 5px;box-shadow: 0px 0px 40px #236b8e;""></a></td> <td align=""center"" class=""row1""> <a hovercard-ref=""member"" hovercard-id=""154"" data-ipb=""noparse"" class=""url fn name ___hover___member _hoversetup"" href=""http://justgame.pl/stalowy-m154/"" title="""" id=""anonymous_element_198""><span itemprop=""name""><span style=""color:red; background-image:url('http://przemo.org/phpBB2/forum/files/gwiazdkired_158.gif'); text-shadow: 2px 2px 8px #990012; font-weight: bold;"">Stalowy</span></span></a> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/193.33.177.130:27215/"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;""><img src=""http://justgame.eu/DLC/gt.png"" height=""16"" width=""16""> GAMETRACKER</a> <td class=""row1"" align=""center""><a href=""http://cssetti.pl/serwer/193.33.177.130:27215"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;"">Zaglosuj</a> </tr> <tr> <td align=""center"" class=""row1""><span class=""ipsButton_secondary"">#3</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">JustGame.eu | Paint Ball+KLASY <img src=""http://justgame.eu/DLC/icon_new.gif"" alt=""NEW"" /></span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">[22]</span></td> <td align=""center"" class=""row1""><a href=""steam://connect/91.224.117.83:27105""><div class=""ipsBadge22"" style=""background:#236b8e;"">91.224.117.83:27105</div></a></td> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/91.224.117.83:27105/"" target=""_blank""><img src=""http://cache.www.gametracker.com/server_info/91.224.117.83:27105/b_350_20_5CC8DC_5CC8DC_000000_5CC8DC.png"" style=""margin-bottom: 5px;box-shadow: 0px 0px 40px #236b8e;""></a></td> <td align=""center"" class=""row1""> <a hovercard-ref=""member"" hovercard-id=""154"" data-ipb=""noparse"" class=""url fn name ___hover___member _hoversetup"" href=""http://justgame.pl/stalowy-m154/"" title="""" id=""anonymous_element_198""><span itemprop=""name""><span style=""color:red; background-image:url('http://przemo.org/phpBB2/forum/files/gwiazdkired_158.gif'); text-shadow: 2px 2px 8px #990012; font-weight: bold;"">Stalowy</span></span></a> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/91.224.117.83:27105/"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;""><img src=""http://justgame.eu/DLC/gt.png"" height=""16"" width=""16""> GAMETRACKER</a> <td class=""row1"" align=""center""><a href=""http://cssetti.pl/serwer/91.224.117.83:27105"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;"">Zaglosuj</a> </tr> <tr> <td align=""center"" class=""row1""><span class=""ipsButton_secondary"">#4</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">JustGame.eu | 4 Maps</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">[13]</span></td> <td align=""center"" class=""row1""><a href=""steam://connect/91.224.117.80:27070""><div class=""ipsBadge22"" style=""background:#236b8e;"">91.224.117.80:27070</div></a></td> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/91.224.117.80:27070/"" target=""_blank""><img src=""http://cache.www.gametracker.com/server_info/91.224.117.80:27070/b_350_20_5CC8DC_5CC8DC_000000_5CC8DC.png"" style=""margin-bottom: 5px;box-shadow: 0px 0px 40px #236b8e;""></a></td> <td align=""center"" class=""row1""> <a title="""" hovercard-ref=""member"" hovercard-id=""537"" data-ipb=""noparse"" class=""url fn name ___hover___member _hoversetup"" href=""http://justgame.pl/eagle-m537/"" id=""anonymous_element_537""><span itemprop=""name""><span style=""color:MediumSlateBlue; text-shadow: 0 0 0.8em #7B68EE; font-weight: bold; padding-left:1px;"">EAGLE</span></span></a> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/91.224.117.80:27070/"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;""><img src=""http://justgame.eu/DLC/gt.png"" height=""16"" width=""16""> GAMETRACKER</a> <td class=""row1"" align=""center""><a href=""http://cssetti.pl/serwer/91.224.117.80:27070"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;"">Zaglosuj</a> </tr> <tr> <td align=""center"" class=""row1""><span class=""ipsButton_secondary"">#5</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">JustGame.eu | Teamspeak3</span></td> <td align=""center"" class=""row1""><span style=""color:white; font-size:14px; font-weight:bold;"">[30]</span></td> <td align=""center"" class=""row1""><a href=""ts3server://JUSTGAMETS3.PL""><div class=""ipsBadge22"" style=""background:#236b8e;"">JUSTGAMETS3.PL</div></a></td> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/91.224.117.80:27070/"" target=""_blank""><img src=""http://cache.www.gametracker.com/server_info/31.133.6.46:6300/b_350_20_5CC8DC_5CC8DC_000000_5CC8DC.png"" style=""margin-bottom: 5px;box-shadow: 0px 0px 40px #236b8e;""></a></td> <td align=""center"" class=""row1""> <a hovercard-ref=""member"" hovercard-id=""154"" data-ipb=""noparse"" class=""url fn name ___hover___member _hoversetup"" href=""http://justgame.pl/stalowy-m154/"" title="""" id=""anonymous_element_198""><span itemprop=""name""><span style=""color:red; background-image:url('http://przemo.org/phpBB2/forum/files/gwiazdkired_158.gif'); text-shadow: 2px 2px 8px #990012; font-weight: bold;"">Stalowy</span></span></a> <td align=""center"" class=""row1""><a href=""http://www.gametracker.com/server_info/31.133.6.46:6300/"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;""><img src=""http://justgame.eu/DLC/gt.png"" height=""16"" width=""16""> GAMETRACKER</a> <td class=""row1"" align=""center""><a href=""http://cssetti.pl/serwer/91.224.117.80:27070"" class=""ipsButton_secondary"" style=""font-size: 0.8em;padding: 0 5px;"">Zaglosuj</a> </tr> <tr style=""white-space:nowrap""> </tr> </tr> </tr> </tbody></table></td></tr> </tbody></table> </div> </div> </tbody> </div> </div> </br> <!-- KONIEC TABELI SERWERóW -->"
ceHEpWbK,🤑 G2A.com Free Gift Card Guide May 2024 FIX 💰,ssss50w,GetText,Tuesday 7th of May 2024 12:28:00 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
07 May 2024	"
2SJM8VZQ,Smuggling Config,Crap-Head,Lua,Tuesday 7th of May 2024 12:27:15 PM CDT,"--[[
	Language Config
--]]
CH_Smuggling.Config.Language = ""en"" -- Set the language of the script.

--[[
	General
--]]
CH_Smuggling.Config.NotificationTime = 10 -- How long will notifications last?
CH_Smuggling.Config.DistanceTo3D2D = 50000 -- Distance before drawing 3d2d

CH_Smuggling.Config.PoliceTeams = { -- Teams allowed to confiscate smuggling entities
	[""Police Officer""] = true,
	[""Police Officer""] = true,
	[""Police Officer""] = true,
}

CH_Smuggling.Config.AllowedTeams = { -- Teams allowed to smuggle
	[""Citizen""] = true,
	[""Citizen""] = true,
	[""Citizen""] = true,
}

--[[
	Police Confiscating
--]]
CH_Smuggling.Config.ConfiscateTime = 30 -- How long to confiscate?
CH_Smuggling.Config.ConfiscateReward = 500 -- How much dollar for confiscation?

--[[
	Missions
--]]
CH_Smuggling.Config.PlayersRequired = 0 -- How many players are required before missions are available?
CH_Smuggling.Config.PoliceRequired = 0 -- How many cops are required before missions are available?

CH_Smuggling.Config.MaxMissions = 20 -- How many max missions at once?
CH_Smuggling.Config.GenerateMissionInterval = { 10, 20 } -- Interval between creating a new active mission

CH_Smuggling.Config.SmuggleCooldown = 10 -- How much cooldown before being able to start a new mission? In seconds

CH_Smuggling.Config.KillReward = 100 -- Money reward for killing a smuggler
CH_Smuggling.Config.XPStopSmuggler = 50 -- XP Reward for killing a smuggler

CH_Smuggling.Config.PoliceNotifyDelay = 30 -- How long after a mission start should cops be made aware of an active mission?

CH_Smuggling.Config.PackageDistanceToDropoff = 20000 -- Distance between drop-off and the package to be detected

--[[
	NPCs
--]]
CH_Smuggling.Config.NPCShuffleInterval = { 10, 20 } -- Interval between changing NPC positions.

CH_Smuggling.Config.DrawDetailed3D2D = true -- Use detailed 3d2d above NPC head with pictures
CH_Smuggling.Config.DrawSimplistc3D2D = true -- Use simplistic outlined text 3d2d

CH_Smuggling.Config.Employers = { -- When NPCs shuffle positions, they also shuffle name model and pose.
    [1] = {
        Name = ""Marxus"",
        Model = ""models/breen.mdl"",
		Pose = ""idle01"",
    },
    [2] = {
        Name = ""Valentine"",
        Model = ""models/mossman.mdl"",
		Pose = ""idle01"",
    },
    [3] = {
        Name = ""Rogue"",
        Model = ""models/Barney.mdl"",
		Pose = ""idle01"",
    },
    [4] = {
        Name = ""Alex"",
        Model = ""models/Eli.mdl"",
		Pose = ""idle01"",
    },
    [5] = {
        Name = ""Iris"",
        Model = ""models/gman_high.mdl"",
		Pose = ""idle01"",
    },
}"
pwwiMsxF,audioPlayer,Z1maV1,Lua,Tuesday 7th of May 2024 12:26:03 PM CDT,"local dfpwm = require(""cc.audio.dfpwm"")
local speaker = peripheral.find(""speaker"")

local function merge(t1, t2)
    for i=1, #t2 do
        t1[#t1+1] = t2[i]
    end
    return t1
end

local audios = fs.find(""/*.dfpwm"")
audios = merge(audios, fs.find(""/*/*.dfpwm""))
audios = merge(audios, fs.find(""/*/*/*.dfpwm""))
audios = merge(audios, fs.find(""/*/*/*/*.dfpwm""))

local w, h = term.getSize()
local nOption = 1
local isPlayingAudio = false
local audioLength = 0
local currentChunk = 0
local isRepeating = false
local audio;

local function drawMusicSelector()
    term.clear()
    term.setCursorPos(1,1)
    w, h = term.getSize()
    
    print()
    
    for i, v in ipairs(audios) do
        if nOption == i then
            term.setBackgroundColor(colors.lightGray)
            term.setTextColor(colors.black)
            
            term.clearLine()
            print("" > ""..v.."" (""..tostring(math.floor(fs.getSize(v) / 1024)).."" KB)"")
            
            term.setBackgroundColor(colors.black)
            term.setTextColor(colors.white)
        else
            print(""   ""..v.."" (""..tostring(math.floor(fs.getSize(v) / 1024)).."" KB)"")
        end
    end
end

local function drawButton(str, bgcolor, fgcolor)
    local bg = term.getBackgroundColor()
    local fg = term.getTextColor()
    write("" "")
    term.setBackgroundColor(bgcolor)
    term.write(""[ "")

    term.setTextColor(fgcolor)
    term.write(str:sub(1,1))
    term.setTextColor(fg)
    term.write(str:sub(2, #str) .. "" ]"")
    term.setBackgroundColor(bg)
    write("" "")
end

local function lerp(a, b, t)
    return a + (b - a) * t
end

local function drawPlayer()
    term.clear()
    term.setCursorPos(1,1)
    w, h = term.getSize()

    write(""\n\n"")
    print("" Now playing: \""""..audio:sub(1,#audio - 6)..""\""\n"")

    write("" "")
    for i = 1, w - 2 do
        if i < math.floor(lerp(0, w - 2, currentChunk / audioLength)) then
            term.setTextColor(colors.green)
            write(""|"")
            term.setTextColor(colors.white)
        else
            term.setTextColor(colors.white)
            write(""|"")
        end
    end

    print(""\n"")

    drawButton(""Prev"", colors.gray, colors.lightGray)
    drawButton(""Stop"", colors.gray, colors.lightGray)
    drawButton(""Next"", colors.gray, colors.lightGray)
    if not isRepeating then
        drawButton(""Repeat"", colors.gray, colors.lightGray)
    else
        --term.setTextColor(colors.black)
        drawButton(""Repeat"", colors.green, colors.gray)
        --term.setTextColor(colors.white)
    end
end

local function playAudioSchedule()
    local decoder = dfpwm.make_decoder()

    while true do
        if isPlayingAudio then
            decoder = dfpwm.make_decoder()
            audioLength = 0
            for _ in io.lines(audios[nOption], 16 * 1024) do
                audioLength = audioLength + 1
            end
            currentChunk = 1
            for chunk in io.lines(audios[nOption], 16 * 1024) do
                local buffer = decoder(chunk)

                if not isPlayingAudio then
                    break
                end
        
                while not speaker.playAudio(buffer) do
                    os.pullEvent(""speaker_audio_empty"")
                end
                currentChunk = currentChunk + 1
                drawPlayer()
            end
            if not isRepeating then
                sPlayingAudio = false
            end
        end
        sleep(0)
    end
end
    

local function handleInput()
    while true do
        local event, key = os.pullEvent(""key"")
        if event == ""key"" then
            if not isPlayingAudio then
                if keys.getName(key) == ""up"" then
                    if nOption > 1 then
                        nOption = nOption - 1
                    end
                elseif keys.getName(key) == ""down"" then
                    if nOption < #audios then
                        nOption = nOption + 1
                    end
                elseif keys.getName(key) == ""enter"" then
                    isPlayingAudio = true
                    audio = fs.getName(audios[nOption])
                    goto continue
                end

                drawMusicSelector()
            else
                if keys.getName(key) == ""r"" then
                    isRepeating = not isRepeating
                    drawPlayer()
                elseif keys.getName(key) == ""p"" then
                    if nOption > 1 then
                        nOption = nOption - 1

                        audio = fs.getName(audios[nOption])
                        isPlayingAudio = false

                        sleep(3)

                        isPlayingAudio = true
                    end
                elseif keys.getName(key) == ""n"" then
                    if nOption < #audios then
                        nOption = nOption + 1

                        audio = fs.getName(audios[nOption])
                        isPlayingAudio = false

                        sleep(3)

                        isPlayingAudio = true
                    end
                elseif keys.getName(key) == ""s"" then
                    isPlayingAudio = false
                    sleep(3)
                    drawMusicSelector()
                end
            end
        end


        ::continue::
    end
end

local function handleExit()
    while true do 
        local event = os.pullEventRaw(""terminate"")
        if event == ""terminate"" then
            break
        end
    end
end
    

if speaker == nil then
    error(""Cannot find speaker!"")
end

drawMusicSelector()
parallel.waitForAny(handleInput, playAudioSchedule, handleExit)"
RzL0xa71,poprawiony kod html - 71165,Pecetowicz,HTML,Tuesday 7th of May 2024 12:19:53 PM CDT,"<!DOCTYPE HTML>
<HEAD>
<title>www</title>
<style>
.pojemnik{background-color:white; width:900px;height:1000px;border:3px solid black; }
.pojemnik3{position:relative; left:50px;}
.pojemnik4{position:relative; left:300px;top:-290px;}
.pojemnik5{position:relative; left:160px;top:-750px;}
.menu1>li{list-style-type: none;background-color:#f3dcd4;text-align: center;border:1px solid black;width:150px; 
height:20px;border-radius:15px;} 
.menu1{position:relative;top:-700px;left:15px;} 
.menu1>li:hover{background-color:#d95940;}
.pojemnik7{position:relative; left:220px;top:-860px;width:250px;}
.pojemnik8{border-radius:15px;background-color:#f3dcd4;position:relative; left:50px;top:-830px;width:510px;height:200px;}
.pojemnik9{text-align:center;position:relative; left:100px;top:-930px;width:600px;}
.pojemnik10{border-radius:15px;background-color:#f3dcd4;position:relative; left:50px;top:-940px;width:250px;height:200px;}
.pojemnik11{border-radius:15px;background-color:#f3dcd4;position:relative; left:310px;top:-1160px;width:250px;height:200px;}
 
.pojemnik12{border-radius:15px;background-color:#f3dcd4;position:relative; left:565px;top:-1520px;width:250px;height:230px;}
 
.pojemnik13{text-align:center;position:relative; left:565px;top:-1650px;width:250px;height:300px;}
 
.pojemnik14{border-radius:15px;background-color:#f3dcd4;position:relative; left:565px;top:-1835px;width:250px;height:100px;}
 
.tresc1{font-size:35px;color: blue;}
.tresc7{position:relative;top:-25px;}
.tresc6{position:relative;top:-25px;}
.pojemnik15{text-align:center;position:relative; left:355px;top:-2060px;width:250px;height:300px;}
.pojemnik16{text-align:center;position:relative; left:630px;top:-2270px;width:250px;height:300px;}
.pojemnik17{text-align:center;position:relative; top:-2450px;width:250px;height:300px;}
</style>
</HEAD>
<BODY>
<div class=""pojemnik"">
<div class=""pojemnik2""><img src=""img1.png"" alt=""img1"" width=""900"" height=""130""></div>
<div class=""pojemnik3""><img src=""img2.jpg"" alt=""img2"" width=""100"" height=""150""></div>
<div class=""pojemnik4""><img src=""img3.png"" alt=""img3"" width=""600"" height=""600""></div>
<div class=""pojemnik5"">
<h1 class=""naglowek1."">naglowek1.</h1>
<p class=""tresc1"">przyklad.</p></div>
<div class=""pojemnik6"">
<ul class=""menu1"">
<li>link1</li>
<li>link2</li>
<li>link3</li>
<li>link4</li>
<li>link5</li>
<li>link6</li>
</ul>
</div>
<div class=""pojemnik7"">
<h1 class=""naglowek1."">naglowek2.</h1>
<p class=""tresc2"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
 
<div class=""pojemnik8"">
<h1 class=""naglowek1."">naglowek3.</h1>
<p class=""tresc3"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
 
<div class=""pojemnik9"">
<table>
<tr><td>
<img src=""img4.png"" alt=""img4"" width=""80"" height=""80"" />
<img src=""img5.png"" alt=""img5"" width=""80"" height=""80"" />
<img src=""img6.png"" alt=""img6"" width=""80"" height=""80"" />
<img src=""img7.png"" alt=""img7"" width=""80"" height=""80"" />
<img src=""img8.png"" alt=""img8"" width=""80"" height=""80"" />
</td></tr>
</table></div>
 
<div class=""pojemnik10"">
<h1 class=""naglowek1."">naglowek4.</h1>
<p class=""tresc4"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
 
<div class=""pojemnik11"">
<h1 class=""naglowek1."">naglowek5.</h1>
<p class=""tresc5"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
 
<div class=""pojemnik12"">
<h1 class=""naglowek1."">naglowek6.</h1>
<p class=""tresc6"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
 
<div class=""pojemnik13""><img src=""img10.png"" alt=""img10"" width=""230"" height=""100""></div>
 
 
<div class=""pojemnik14"">
<h1 class=""naglowek1."">naglowek7.</h1>
<p class=""tresc7"">jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.jakas tresc.</p></div>
<div class=""pojemnik15""><img src=""img9.png"" alt=""img9"" width=""100"" height=""30""></div>
<div class=""pojemnik16""><img src=""img9.png"" alt=""img9"" width=""100"" height=""30""></div>
 
<div class=""pojemnik17""><img src=""img11.png"" alt=""img11"" width=""900"" height=""100""></div>
</div>
</BODY>
</HTML>
"
Y2Xsyy7J,References.bib,OneStepp,BibTeX,Tuesday 7th of May 2024 12:16:08 PM CDT,"@article{logothetis2001neurophysiological,
  title={Neurophysiological investigation of the basis of the fMRI signal},
  author={Logothetis, Nikos K and Pauls, Jon and Augath, Mark and Trinath, Torsten and Oeltermann, Axel},
  journal={nature},
  volume={412},
  number={6843},
  pages={150--157},
  year={2001},
  publisher={Nature Publishing Group}
}


@article{ogawa1990oxygenation,
  title={Oxygenation-sensitive contrast in magnetic resonance image of rodent brain at high magnetic fields},
  author={Ogawa, Seiji and Lee, Tso-Ming and Nayak, Asha S and Glynn, Paul},
  journal={Magnetic resonance in medicine},
  volume={14},
  number={1},
  pages={68--78},
  year={1990},
  publisher={Wiley Online Library}
}

@article{amaro2006study,
  title={Study design in fMRI: basic principles},
  author={Amaro Jr, Edson and Barker, Gareth J},
  journal={Brain and cognition},
  volume={60},
  number={3},
  pages={220--232},
  year={2006},
  publisher={Elsevier}
}


@article{jasanoff2007bloodless,
  title={Bloodless fmri},
  author={Jasanoff, Alan},
  journal={Trends in neurosciences},
  volume={30},
  number={11},
  pages={603--610},
  year={2007},
  publisher={Elsevier}
}

@article{belliveau1991functional,
  title={Functional mapping of the human visual cortex by magnetic resonance imaging},
  author={Belliveau, JW and Kennedy, DN and McKinstry, RC and Buchbinder, BR and Weisskoff, RMt and Cohen, MS and Vevea, JM and Brady, TJ and Rosen, BR},
  journal={Science},
  volume={254},
  number={5032},
  pages={716--719},
  year={1991},
  publisher={American Association for the Advancement of Science}
}


@article{detre1992perfusion,
  title={Perfusion imaging},
  author={Detre, John A and Leigh, John S and Williams, Donald S and Koretsky, Alan P},
  journal={Magnetic resonance in medicine},
  volume={23},
  number={1},
  pages={37--45},
  year={1992},
  publisher={Wiley Online Library}
}

@article{glover2011overview,
  title={Overview of functional magnetic resonance imaging},
  author={Glover, Gary H},
  journal={Neurosurgery Clinics},
  volume={22},
  number={2},
  pages={133--139},
  year={2011},
  publisher={Elsevier}
}


@article{darquie2001transient,
  title={Transient decrease in water diffusion observed in human occipital cortex during visual stimulation},
  author={Darqui{\'e}, Anne and Poline, Jean-Baptiste and Poupon, Cyril and Saint-Jalmes, Herv{\'e} and Le Bihan, Denis},
  journal={Proceedings of the National Academy of Sciences},
  volume={98},
  number={16},
  pages={9391--9395},
  year={2001},
  publisher={National Acad Sciences}
}

@article{le2007wet,
  title={The ‘wet mind’: water and functional neuroimaging},
  author={Le Bihan, Denis},
  journal={Physics in Medicine \& Biology},
  volume={52},
  number={7},
  pages={R57},
  year={2007},
  publisher={IOP Publishing}
}

@article{han2015compressed,
  title={Compressed sensing for fMRI: feasibility study on the acceleration of non-EPI fMRI at 9.4 T},
  author={Han, Paul Kyu and Park, Sung-Hong and Kim, Seong-Gi and Ye, Jong Chul},
  journal={BioMed research international},
  volume={2015},
  year={2015},
  publisher={Hindawi}
}

@article{paasonen2020multi,
  title={Multi-band SWIFT enables quiet and artefact-free EEG-fMRI and awake fMRI studies in rat},
  author={Paasonen, Jaakko and Laakso, Hanne and Pirttim{\""a}ki, Tiina and Stenroos, Petteri and Salo, Raimo A and Zhurakovskaya, Ekaterina and Lehto, Lauri J and Tanila, Heikki and Garwood, Michael and Michaeli, Shalom and others},
  journal={NeuroImage},
  volume={206},
  pages={116338},
  year={2020},
  publisher={Elsevier}
}

@article{miller2006high,
  title={High-resolution FMRI at 1.5 T using balanced SSFP},
  author={Miller, Karla L and Smith, Stephen M and Jezzard, Peter and Pauly, John M},
  journal={Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={55},
  number={1},
  pages={161--170},
  year={2006},
  publisher={Wiley Online Library}
}

@article{scheffler2003principles,
  title={Principles and applications of balanced SSFP techniques},
  author={Scheffler, Klaus and Lehnhardt, Stefan},
  journal={European radiology},
  volume={13},
  number={11},
  pages={2409--2418},
  year={2003},
  publisher={Springer}
}

@article{ye2010bold,
  title={BOLD fMRI using a modified HASTE sequence},
  author={Ye, Yongquan and Zhuo, Yan and Xue, Rong and Zhou, Xiaohong Joe},
  journal={Neuroimage},
  volume={49},
  number={1},
  pages={457--466},
  year={2010},
  publisher={Elsevier}
}

@article{bandettini1994spin,
  title={Spin-echo and gradient-echo EPI of human brain activation using BOLD contrast: a comparative study at 1.5 T},
  author={Bandettini, Peter A and Wong, Eric C and Jesmanowicz, A and Hinks, R Scott and Hyde, James S},
  journal={NMR in Biomedicine},
  volume={7},
  number={1-2},
  pages={12--20},
  year={1994},
  publisher={Wiley Online Library}
}

@article{cohen1998echo,
  title={Echo-planar imaging (EPI) and functional MRI},
  author={Cohen, Mark S},
  journal={Functional MRI},
  pages={137--148},
  year={1998},
  publisher={Springer Berlin, Germany}
}

@article{casey2002functional,
  title={Functional magnetic resonance imaging: Basic principles of and application to developmental science},
  author={Casey, BJ and Davidson, Matthew and Rosen, Bruce},
  journal={Developmental Science},
  volume={5},
  number={3},
  pages={301--309},
  year={2002},
  publisher={Wiley Online Library}
}

@article{logothetis2008we,
  title={What we can do and what we cannot do with fMRI},
  author={Logothetis, Nikos K},
  journal={Nature},
  volume={453},
  number={7197},
  pages={869--878},
  year={2008},
  publisher={Nature Publishing Group}
}

@article{yacoub2001investigation,
  title={Investigation of the initial dip in fMRI at 7 Tesla},
  author={Yacoub, Essa and Shmuel, Amir and Pfeuffer, Josef and Van De Moortele, Pierre-Francois and Adriany, Gregor and Ugurbil, Kamil and Hu, Xiaoping},
  journal={NMR in Biomedicine: An International Journal Devoted to the Development and Application of Magnetic Resonance In Vivo},
  volume={14},
  number={7-8},
  pages={408--412},
  year={2001},
  publisher={Wiley Online Library}
}

@article{vanzetta2001commentary,
  title={COMMENTARY Evidence and Lack of Evidence for the Initial Dip in the Anesthetized Rat: Implications for Human Functional Brain Imaging},
  author={Vanzetta, Ivo and Grinvald, Amiram},
  year={2001},
  publisher={Citeseer}
}

@article{kundu2017multi,
  title={Multi-echo fMRI: a review of applications in fMRI denoising and analysis of BOLD signals},
  author={Kundu, Prantik and Voon, Valerie and Balchandani, Priti and Lombardo, Michael V and Poser, Benedikt A and Bandettini, Peter A},
  journal={Neuroimage},
  volume={154},
  pages={59--80},
  year={2017},
  publisher={Elsevier}
}

@article{zong2014compressed,
  title={Compressed sensing fMRI using gradient-recalled echo and EPI sequences},
  author={Zong, Xiaopeng and Lee, Juyoung and Poplawsky, Alexander John and Kim, Seong-Gi and Ye, Jong Chul},
  journal={NeuroImage},
  volume={92},
  pages={312--321},
  year={2014},
  publisher={Elsevier}
}

@article{frahm1993functional,
  title={Functional MRI of human brain activation at high spatial resolution},
  author={Frahm, Jens and Merboldt, Klaus-Dietmar and H{\""a}nicke, Wolfgang},
  journal={Magnetic Resonance in Medicine},
  volume={29},
  number={1},
  pages={139--144},
  year={1993},
  publisher={Wiley Online Library}
}

@article{kida2002mapping,
  title={Mapping at glomerular resolution: fMRI of rat olfactory bulb},
  author={Kida, Ikuhiro and Xu, Fuqiang and Shulman, Robert G and Hyder, Fahmeed},
  journal={Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={48},
  number={3},
  pages={570--576},
  year={2002},
  publisher={Wiley Online Library}
}

@article{ogawa1992intrinsic,
  title={Intrinsic signal changes accompanying sensory stimulation: functional brain mapping with magnetic resonance imaging},
  author={Ogawa, Seiji and Tank, David W and Menon, Ravi and Ellermann, Jutta M and Kim, Seong G and Merkle, Helmut and Ugurbil, Kamil},
  journal={Proceedings of the National Academy of Sciences},
  volume={89},
  number={13},
  pages={5951--5955},
  year={1992},
  publisher={National Acad Sciences}
}

@article{glover2000image,
  title={Image-based method for retrospective correction of physiological motion effects in fMRI: RETROICOR},
  author={Glover, Gary H and Li, Tie-Qiang and Ress, David},
  journal={Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={44},
  number={1},
  pages={162--167},
  year={2000},
  publisher={Wiley Online Library}
}

@article{jo2010mapping,
  title={Mapping sources of correlation in resting state FMRI, with artifact detection and removal},
  author={Jo, Hang Joon and Saad, Ziad S and Simmons, W Kyle and Milbury, Lydia A and Cox, Robert W},
  journal={Neuroimage},
  volume={52},
  number={2},
  pages={571--582},
  year={2010},
  publisher={Elsevier}
}

@article{hu2012story,
  title={The story of the initial dip in fMRI},
  author={Hu, Xiaoping and Yacoub, Essa},
  journal={Neuroimage},
  volume={62},
  number={2},
  pages={1103--1108},
  year={2012},
  publisher={Elsevier}
}

@article{behzadi2006caffeine,
  title={Caffeine reduces the initial dip in the visual BOLD response at 3 T},
  author={Behzadi, Yashar and Liu, Thomas T},
  journal={Neuroimage},
  volume={32},
  number={1},
  pages={9--15},
  year={2006},
  publisher={Elsevier}
}

@article{zhao2009pain,
  title={Pain fMRI in rat cervical spinal cord: an echo planar imaging evaluation of sensitivity of BOLD and blood volume-weighted fMRI},
  author={Zhao, Fuqiang and Williams, Mangay and Meng, Xiangjun and Welsh, Denise C and Grachev, Igor D and Hargreaves, Richard and Williams, Donald S},
  journal={Neuroimage},
  volume={44},
  number={2},
  pages={349--362},
  year={2009},
  publisher={Elsevier}
}

@article{cheung2012bold,
  title={BOLD fMRI investigation of the rat auditory pathway and tonotopic organization},
  author={Cheung, Matthew M and Lau, Condon and Zhou, Iris Y and Chan, Kevin C and Cheng, Joe S and Zhang, Jevin W and Ho, Leon C and Wu, Ed X},
  journal={Neuroimage},
  volume={60},
  number={2},
  pages={1205--1211},
  year={2012},
  publisher={Elsevier}
}

@article{sumiyoshi2012coupling,
  title={Coupling between gamma oscillation and fMRI signal in the rat somatosensory cortex: its dependence on systemic physiological parameters},
  author={Sumiyoshi, Akira and Suzuki, Hideaki and Ogawa, Takeshi and Riera, Jorge J and Shimokawa, Hiroaki and Kawashima, Ryuta},
  journal={Neuroimage},
  volume={60},
  number={1},
  pages={738--746},
  year={2012},
  publisher={Elsevier}
}

@article{kesavadas2013resting,
  title={Resting state functional magnetic resonance imaging: An emerging clinical tool},
  author={Kesavadas, Chandrasekharan and others},
  journal={Neurology India},
  volume={61},
  number={2},
  pages={103},
  year={2013},
  publisher={Medknow Publications}
}

@article{fox2010clinical,
  title={Clinical applications of resting state functional connectivity},
  author={Fox, Michael D and Greicius, Michael},
  journal={Frontiers in systems neuroscience},
  volume={4},
  pages={19},
  year={2010},
  publisher={Frontiers}
}

@article{biswal2012resting,
  title={Resting state fMRI: a personal history},
  author={Biswal, Bharat B},
  journal={Neuroimage},
  volume={62},
  number={2},
  pages={938--944},
  year={2012},
  publisher={Elsevier}
}

@article{raichle2006brain,
  title={Brain work and brain imaging},
  author={Raichle, Marcus E and Mintun, Mark A},
  journal={Annu. Rev. Neurosci.},
  volume={29},
  pages={449--476},
  year={2006},
  publisher={Annual Reviews}
}

@article{pan2018resting,
  title={Resting state fMRI in rodents},
  author={Pan, Wen-Ju and Billings, Jacob and Nezafati, Maysam and Abbas, Anzar and Keilholz, Shella},
  journal={Current protocols in neuroscience},
  volume={83},
  number={1},
  pages={e45},
  year={2018},
  publisher={Wiley Online Library}
}

@article{biswal1995functional,
  title={Functional connectivity in the motor cortex of resting human brain using echo-planar MRI},
  author={Biswal, Bharat and Zerrin Yetkin, F and Haughton, Victor M and Hyde, James S},
  journal={Magnetic resonance in medicine},
  volume={34},
  number={4},
  pages={537--541},
  year={1995},
  publisher={Wiley Online Library}
}

@article{tomasi2012resting,
  title={Resting functional connectivity of language networks: characterization and reproducibility},
  author={Tomasi, Dardo and Volkow, Nora D},
  journal={Molecular psychiatry},
  volume={17},
  number={8},
  pages={841--854},
  year={2012},
  publisher={Nature Publishing Group}
}

@article{beckmann2005investigations,
  title={Investigations into resting-state connectivity using independent component analysis},
  author={Beckmann, Christian F and DeLuca, Marilena and Devlin, Joseph T and Smith, Stephen M},
  journal={Philosophical Transactions of the Royal Society B: Biological Sciences},
  volume={360},
  number={1457},
  pages={1001--1013},
  year={2005},
  publisher={The Royal Society London}
}

@article{raichle2001default,
  title={A default mode of brain function},
  author={Raichle, Marcus E and MacLeod, Ann Mary and Snyder, Abraham Z and Powers, William J and Gusnard, Debra A and Shulman, Gordon L},
  journal={Proceedings of the National Academy of Sciences},
  volume={98},
  number={2},
  pages={676--682},
  year={2001},
  publisher={National Acad Sciences}
}

@article{seeley2007dissociable,
  title={Dissociable intrinsic connectivity networks for salience processing and executive control},
  author={Seeley, William W and Menon, Vinod and Schatzberg, Alan F and Keller, Jennifer and Glover, Gary H and Kenna, Heather and Reiss, Allan L and Greicius, Michael D},
  journal={Journal of Neuroscience},
  volume={27},
  number={9},
  pages={2349--2356},
  year={2007},
  publisher={Soc Neuroscience}
}

@article{van2010exploring,
  title={Exploring the brain network: a review on resting-state fMRI functional connectivity},
  author={Van Den Heuvel, Martijn P and Pol, Hilleke E Hulshoff},
  journal={European neuropsychopharmacology},
  volume={20},
  number={8},
  pages={519--534},
  year={2010},
  publisher={Elsevier}
}

@article{soares2016hitchhiker,
  title={A hitchhiker's guide to functional magnetic resonance imaging},
  author={Soares, Jos{\'e} M and Magalh{\~a}es, Ricardo and Moreira, Pedro S and Sousa, Alexandre and Ganz, Edward and Sampaio, Adriana and Alves, Victor and Marques, Paulo and Sousa, Nuno},
  journal={Frontiers in neuroscience},
  volume={10},
  pages={515},
  year={2016},
  publisher={Frontiers}
}

@article{lee2013resting,
  title={Resting-state fMRI: a review of methods and clinical applications},
  author={Lee, Megan H and Smyser, Christopher D and Shimony, Joshua S},
  journal={American Journal of neuroradiology},
  volume={34},
  number={10},
  pages={1866--1872},
  year={2013},
  publisher={Am Soc Neuroradiology}
}


@article{elster1993gradient,
  title={Gradient-echo MR imaging: techniques and acronyms.},
  author={Elster, Allen D},
  journal={Radiology},
  volume={186},
  number={1},
  pages={1--8},
  year={1993}
}

@article{voskrebenzev2018feasibility,
  title={Feasibility of quantitative regional ventilation and perfusion mapping with phase-resolved functional lung (PREFUL) MRI in healthy volunteers and COPD, CTEPH, and CF patients},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Klime{\v{s}}, Filip and Kaireit, Till F and Sch{\""o}nfeld, Christian and Rot{\""a}rmel, Alexander and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={79},
  number={4},
  pages={2306--2314},
  year={2018},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2016reproducibility,
  title={Reproducibility of fractional ventilation derived by Fourier decomposition after adjusting for tidal volume with and without an MRI compatible spirometer},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Becker, Lena and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={76},
  number={5},
  pages={1542--1550},
  year={2016},
  publisher={Wiley Online Library}
}

@article{lederlin2013functional,
  title={Functional MRI using Fourier decomposition of lung signal: reproducibility of ventilation-and perfusion-weighted imaging in healthy volunteers},
  author={Lederlin, Mathieu and Bauman, Grzegorz and Eichinger, Monika and Dinkel, Julien and Brault, Mathilde and Biederer, J{\""u}rgen and Puderbach, Michael},
  journal={European journal of radiology},
  volume={82},
  number={6},
  pages={1015--1022},
  year={2013},
  publisher={Elsevier}
}

@article{brix2004microcirculation,
  title={Microcirculation and microvasculature in breast tumors: pharmacokinetic analysis of dynamic MR image series},
  author={Brix, Gunnar and Kiessling, Fabian and Lucht, Robert and Darai, Susanne and Wasser, Klaus and Delorme, Stefan and Griebel, J{\""u}rgen},
  journal={Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={52},
  number={2},
  pages={420--429},
  year={2004},
  publisher={Wiley Online Library}
}

@article{fusco2012dynamic,
  title={Dynamic contrast-enhanced MRI in breast cancer: A comparison between distributed and compartmental tracer kinetic models},
  author={Fusco, Roberta and Sansone, Mario and Maffei, Silvio and Raiano, Nicola and Petrillo, Antonella},
  journal={Journal of Biomedical Graphics and Computing},
  volume={2},
  number={2},
  pages={23},
  year={2012},
  publisher={Sciedu Press}
}

@article{haider2008dynamic,
  title={Dynamic contrast-enhanced magnetic resonance imaging for localization of recurrent prostate cancer after external beam radiotherapy},
  author={Haider, Masoom A and Chung, Peter and Sweet, Joan and Toi, Ants and Jhaveri, Kartik and M{\'e}nard, Cynthia and Warde, Padraig and Trachtenberg, John and Lockwood, Gina and Milosevic, Michael},
  journal={International Journal of Radiation Oncology* Biology* Physics},
  volume={70},
  number={2},
  pages={425--430},
  year={2008},
  publisher={Elsevier}
}

@article{vos2013assessment,
  title={Assessment of prostate cancer aggressiveness using dynamic contrast-enhanced magnetic resonance imaging at 3 T},
  author={Vos, Eline K and Litjens, Geert JS and Kobus, Thiele and Hambrock, Thomas and Hulsbergen-van de Kaa, Christina A and Barentsz, Jelle O and Huisman, Henkjan J and Scheenen, Tom WJ},
  journal={European urology},
  volume={64},
  number={3},
  pages={448--455},
  year={2013},
  publisher={Elsevier}
}

@article{bergamino2014review,
  title={A review of technical aspects of T1-weighted dynamic contrast-enhanced magnetic resonance imaging (DCE-MRI) in human brain tumors},
  author={Bergamino, M and Bonzano, L and Levrero, F and Mancardi, GL and Roccatagliata, L},
  journal={Physica Medica},
  volume={30},
  number={6},
  pages={635--643},
  year={2014},
  publisher={Elsevier}
}

@article{nielsen2004evaluation,
  title={Evaluation of heart perfusion in patients with acute myocardial infarction using dynamic contrast-enhanced magnetic resonance imaging},
  author={Nielsen, Gitte and Fritz-Hansen, Thomas and Dirks, Christina G and Jensen, Gorm B and Larsson, Henrik BW},
  journal={Journal of Magnetic Resonance Imaging: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={20},
  number={3},
  pages={403--410},
  year={2004},
  publisher={Wiley Online Library}
}

@article{tarroni2012myocardial,
  title={Myocardial perfusion: near-automated evaluation from contrast-enhanced MR images obtained at rest and during vasodilator stress},
  author={Tarroni, Giacomo and Corsi, Cristiana and Antkowiak, Patrick F and Veronesi, Federico and Kramer, Christopher M and Epstein, Frederick H and Walter, James and Lamberti, Claudio and Lang, Roberto M and Mor-Avi, Victor and others},
  journal={Radiology},
  volume={265},
  number={2},
  pages={576--583},
  year={2012},
  publisher={Radiological Society of North America, Inc.}
}

@article{khalifa2014models,
  title={Models and methods for analyzing DCE-MRI: A review},
  author={Khalifa, Fahmi and Soliman, Ahmed and El-Baz, Ayman and Abou El-Ghar, Mohamed and El-Diasty, Tarek and Gimel'farb, Georgy and Ouseph, Rosemary and Dwyer, Amy C},
  journal={Medical physics},
  volume={41},
  number={12},
  pages={124301},
  year={2014},
  publisher={Wiley Online Library}
}

@article{bhattacharya2021oxygen,
  title={Oxygen-enhanced functional lung imaging using a contemporary 0.55 T MRI system},
  author={Bhattacharya, Ipshita and Ramasawmy, Rajiv and Javed, Ahsan and Chen, Marcus Y and Benkert, Thomas and Majeed, Waqas and Lederman, Robert J and Moss, Joel and Balaban, Robert S and Campbell-Washburn, Adrienne E},
  journal={NMR in Biomedicine},
  volume={34},
  number={8},
  pages={e4562},
  year={2021},
  publisher={Wiley Online Library}
}

@article{roos2015hyperpolarized,
  title={Hyperpolarized gas MR imaging: technique and applications},
  author={Roos, Justus E and McAdams, Holman P and Kaushik, S Sivaram and Driehuys, Bastiaan},
  journal={Magnetic Resonance Imaging Clinics},
  volume={23},
  number={2},
  pages={217--229},
  year={2015},
  publisher={Elsevier}
}

@article{kern2018hyperpolarized,
  title={Hyperpolarized gas MRI in pulmonology},
  author={Kern, Agilo Luitger and Vogel-Claussen, Jens},
  journal={The British Journal of Radiology},
  volume={91},
  number={1084},
  pages={20170647},
  year={2018}
}

@article{fain2010imaging,
  title={Imaging of lung function using hyperpolarized helium-3 magnetic resonance imaging: review of current and emerging translational methods and applications},
  author={Fain, Sean and Schiebler, Mark L and McCormack, David G and Parraga, Grace},
  journal={Journal of magnetic resonance imaging},
  volume={32},
  number={6},
  pages={1398--1408},
  year={2010},
  publisher={Wiley Online Library}
}

@article{mugler2013hyperpolarized,
  title={Hyperpolarized 129Xe MRI of the human lung},
  author={Mugler III, John P and Altes, Talissa A},
  journal={Journal of Magnetic Resonance Imaging},
  volume={37},
  number={2},
  pages={313--331},
  year={2013},
  publisher={Wiley Online Library}
}

@article{edelman1996noninvasive,
  title={Noninvasive assessment of regional ventilation in the human lung using oxygen--enhanced magnetic resonance imaging},
  author={Edelman, Robert R and Hatabu, Hiroto and Tadamura, Eiji and Li, Wei and Prasad, Potthumarthi V},
  journal={Nature medicine},
  volume={2},
  number={11},
  pages={1236--1239},
  year={1996},
  publisher={Nature Publishing Group}
}














%PYTHON LIBRARIES

@Article{         harris2020array,
 title         = {Array programming with {NumPy}},
 author        = {Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
                 van der Walt and Ralf Gommers and Pauli Virtanen and David
                 Cournapeau and Eric Wieser and Julian Taylor and Sebastian
                 Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
                 and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
                 Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
                 R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
                 G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
                 Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
                 Travis E. Oliphant},
 year          = {2020},
 month         = sep,
 journal       = {Nature},
 volume        = {585},
 number        = {7825},
 pages         = {357--362},
 doi           = {10.1038/s41586-020-2649-2},
 publisher     = {Springer Science and Business Media {LLC}},
 url           = {https://doi.org/10.1038/s41586-020-2649-2}
}

@ARTICLE{2020SciPy-NMeth,
  author  = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and
            Haberland, Matt and Reddy, Tyler and Cournapeau, David and
            Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and
            Bright, Jonathan and {van der Walt}, St{\'e}fan J. and
            Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and
            Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and
            Kern, Robert and Larson, Eric and Carey, C J and
            Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and
            {VanderPlas}, Jake and Laxalde, Denis and Perktold, Josef and
            Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and
            Harris, Charles R. and Archibald, Anne M. and
            Ribeiro, Ant{\^o}nio H. and Pedregosa, Fabian and
            {van Mulbregt}, Paul and {SciPy 1.0 Contributors}},
  title   = {{{SciPy} 1.0: Fundamental Algorithms for Scientific
            Computing in Python}},
  journal = {Nature Methods},
  year    = {2020},
  volume  = {17},
  pages   = {261--272},
  adsurl  = {https://rdcu.be/b08Wh},
  doi     = {10.1038/s41592-019-0686-2},
}

@Article{Hunter:2007,
  Author    = {Hunter, J. D.},
  Title     = {Matplotlib: A 2D graphics environment},
  Journal   = {Computing in Science \& Engineering},
  Volume    = {9},
  Number    = {3},
  Pages     = {90--95},
  abstract  = {Matplotlib is a 2D graphics package used for Python for
  application development, interactive scripting, and publication-quality
  image generation across user interfaces and operating systems.},
  publisher = {IEEE COMPUTER SOC},
  doi       = {10.1109/MCSE.2007.55},
  year      = 2007
}

@book{10.5555/1593511,
 author = {Van Rossum, Guido and Drake, Fred L.},
 title = {Python 3 Reference Manual},
 year = {2009},
 isbn = {1441412697},
 publisher = {CreateSpace},
 address = {Scotts Valley, CA}
} 

@article{schindelin2012fiji,
  title={Fiji: an open-source platform for biological-image analysis},
  author={Schindelin, Johannes and Arganda-Carreras, Ignacio and Frise, Erwin and Kaynig, Verena and Longair, Mark and Pietzsch, Tobias and Preibisch, Stephan and Rueden, Curtis and Saalfeld, Stephan and Schmid, Benjamin and others},
  journal={Nature methods},
  volume={9},
  number={7},
  pages={676--682},
  year={2012},
  publisher={Nature Publishing Group}
}

@article{anisimov2013,
  title={Магнитно-резонансная томография: управление контрастом и междисциплинарные приложения},
  author={Анисимов, НВ and Батова, СС and Пирогов, ЮА},
  journal={М.: МАКС Пресс},
  year={2013}
}

@article{vonder2021latest,
  title={Latest CT technologies in lung cancer screening: protocols and radiation dose reduction},
  author={Vonder, Marleen and Dorrius, Monique D and Vliegenthart, Rozemarijn},
  journal={Translational lung cancer research},
  volume={10},
  number={2},
  pages={1154},
  year={2021},
  publisher={AME Publications}
}

@article{ambrosini2012pet,
  title={PET/CT imaging in different types of lung cancer: an overview},
  author={Ambrosini, Valentina and Nicolini, Silvia and Caroli, Paola and Nanni, Cristina and Massaro, Arianna and Marzola, Maria Cristina and Rubello, Domenico and Fanti, Stefano},
  journal={European journal of radiology},
  volume={81},
  number={5},
  pages={988--1001},
  year={2012},
  publisher={Elsevier}
}

@article{sheikh2016copd,
  title={This is what COPD looks like},
  author={Sheikh, Khadija and Coxson, Harvey O and Parraga, Grace},
  journal={Respirology},
  volume={21},
  number={2},
  pages={224--236},
  year={2016},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2021proton,
  title={Proton MRI of the lung: how to tame scarce protons and fast signal decay},
  author={Voskrebenzev, Andreas and Vogel-Claussen, Jens},
  journal={Journal of Magnetic Resonance Imaging},
  volume={53},
  number={5},
  pages={1344--1357},
  year={2021},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2018feasibility,
  title={Feasibility of quantitative regional ventilation and perfusion mapping with phase-resolved functional lung (PREFUL) MRI in healthy volunteers and COPD, CTEPH, and CF patients},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Klime{\v{s}}, Filip and Kaireit, Till F and Sch{\""o}nfeld, Christian and Rot{\""a}rmel, Alexander and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={79},
  number={4},
  pages={2306--2314},
  year={2018},
  publisher={Wiley Online Library}
}

@article{pohler2021repeatability,
  title={Repeatability of phase-resolved functional lung (PREFUL)-MRI ventilation and perfusion parameters in healthy subjects and COPD patients},
  author={P{\""o}hler, Gesa H and Klime{\v{s}}, Filip and Behrendt, Lea and Voskrebenzev, Andreas and Gonzalez, Cristian Crisosto and Wacker, Frank and Hohlfeld, Jens M and Vogel-Claussen, Jens},
  journal={Journal of Magnetic Resonance Imaging},
  volume={53},
  number={3},
  pages={915--927},
  year={2021},
  publisher={Wiley Online Library}
}

@article{ingrisch2010quantitative,
  title={Quantitative pulmonary perfusion magnetic resonance imaging: influence of temporal resolution and signal-to-noise ratio},
  author={Ingrisch, Michael and Dietrich, Olaf and Attenberger, Ulrike I and Nikolaou, Konstantin and Sourbron, Steven and Reiser, Maximilian F and Fink, Christian},
  journal={Investigative radiology},
  volume={45},
  number={1},
  pages={7--14},
  year={2010},
  publisher={LWW}
}

@article{hueper2015pulmonary,
  title={Pulmonary microvascular blood flow in mild chronic obstructive pulmonary disease and emphysema. The MESA COPD Study},
  author={Hueper, Katja and Vogel-Claussen, Jens and Parikh, Megha A and Austin, John HM and Bluemke, David A and Carr, James and Choi, Jiwoong and Goldstein, Thomas A and Gomes, Antoinette S and Hoffman, Eric A and others},
  journal={American journal of respiratory and critical care medicine},
  volume={192},
  number={5},
  pages={570--580},
  year={2015},
  publisher={American Thoracic Society}
}

@article{kaireit2019comparison,
  title={Comparison of quantitative regional perfusion-weighted phase resolved functional lung (PREFUL) MRI with dynamic gadolinium-enhanced regional pulmonary perfusion MRI in COPD patients},
  author={Kaireit, Till F and Voskrebenzev, Andreas and Gutberlet, Marcel and Freise, Julia and Jobst, Bertram and Kauczor, Hans-Ulrich and Welte, Tobias and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Journal of Magnetic Resonance Imaging},
  volume={49},
  number={4},
  pages={1122--1132},
  year={2019},
  publisher={Wiley Online Library}
}

@article{schoenfeld2016mr,
  title={MR imaging--derived regional pulmonary parenchymal perfusion and cardiac function for monitoring patients with chronic thromboembolic pulmonary hypertension before and after pulmonary endarterectomy},
  author={Schoenfeld, Christian and Cebotari, Serghei and Hinrichs, Jan and Renne, Julius and Kaireit, Till and Olsson, Karen M and Voskrebenzev, Andreas and Gutberlet, Marcel and Hoeper, Marius M and Welte, Tobias and others},
  journal={Radiology},
  volume={279},
  number={3},
  pages={925--934},
  year={2016},
  publisher={Radiological Society of North America}
}

@article{schoenfeld2019cardio,
  title={Cardio-pulmonary MRI for detection of treatment response after a single BPA treatment session in CTEPH patients},
  author={Schoenfeld, Christian and Hinrichs, Jan B and Olsson, Karen M and Kuettner, Martin-Alexander and Renne, Julius and Kaireit, Till and Czerner, Christoph and Wacker, Frank and Hoeper, Marius M and Meyer, Bernhard C and others},
  journal={European radiology},
  volume={29},
  number={4},
  pages={1693--1702},
  year={2019},
  publisher={Springer}
}

@article{couch201919f,
  title={19F MRI of the lungs using inert fluorinated gases: Challenges and new developments},
  author={Couch, Marcus J and Ball, Iain K and Li, Tao and Fox, Matthew S and Biman, Birubi and Albert, Mitchell S},
  journal={Journal of Magnetic Resonance Imaging},
  volume={49},
  number={2},
  pages={343--354},
  year={2019},
  publisher={Wiley Online Library}
}


@article{edelman1996noninvasive,
  title={Noninvasive assessment of regional ventilation in the human lung using oxygen--enhanced magnetic resonance imaging},
  author={Edelman, Robert R and Hatabu, Hiroto and Tadamura, Eiji and Li, Wei and Prasad, Potthumarthi V},
  journal={Nature medicine},
  volume={2},
  number={11},
  pages={1236--1239},
  year={1996},
  publisher={Nature Publishing Group}
}


@article{zapke2006magnetic,
  title={Magnetic resonance lung function--a breakthrough for lung imaging and functional assessment? A phantom study and clinical trial},
  author={Zapke, Maren and Topf, Hans-Georg and Zenker, Martin and Kuth, Rainer and Deimling, Michael and Kreisler, Peter and Rauh, Manfred and Chefd'hotel, Christophe and Geiger, Bernhard and Rupprecht, Thomas},
  journal={Respiratory research},
  volume={7},
  number={1},
  pages={1--9},
  year={2006},
  publisher={BioMed Central}
}

@inproceedings{deimling2008time,
  title={Time resolved lung ventilation imaging by Fourier decomposition},
  author={Deimling, M and Jellus, V and Geiger, B and Chefd’Hotel, C},
  booktitle={Proc Intl Soc Mag Reson Med},
  volume={16},
  pages={2639},
  year={2008}
}

@article{bankier2004impact,
  title={Impact of lung volume on MR signal intensity changes of the lung parenchyma},
  author={Bankier, Alexander A and O'Donnell, Carl R and Mai, Vu M and Storey, Pippa and De Maertelaer, Viviane and Edelman, Robert R and Chen, Qun},
  journal={Journal of Magnetic Resonance Imaging: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={20},
  number={6},
  pages={961--966},
  year={2004},
  publisher={Wiley Online Library}
}

@article{bauman2009non,
  title={Non-contrast-enhanced perfusion and ventilation assessment of the human lung by means of Fourier decomposition in proton MRI},
  author={Bauman, Grzegorz and Puderbach, Michael and Deimling, Michael and Jellus, Vladimir and Chefd'hotel, Christophe and Dinkel, Julien and Hintze, Christian and Kauczor, Hans-Ulrich and Schad, Lothar R},
  journal={Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine},
  volume={62},
  number={3},
  pages={656--664},
  year={2009},
  publisher={Wiley Online Library}
}

@article{pennati2014assessment,
  title={Assessment of regional lung function with multivolume 1H MR imaging in health and obstructive lung disease: comparison with 3He MR imaging},
  author={Pennati, Francesca and Quirk, James D and Yablonskiy, Dmitriy A and Castro, Mario and Aliverti, Andrea and Woods, Jason C},
  journal={Radiology},
  volume={273},
  number={2},
  pages={580--590},
  year={2014},
  publisher={Radiological Society of North America}
}

@article{voskrebenzev2016reproducibility,
  title={Reproducibility of fractional ventilation derived by Fourier decomposition after adjusting for tidal volume with and without an MRI compatible spirometer},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Becker, Lena and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={76},
  number={5},
  pages={1542--1550},
  year={2016},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2017low,
  title={Low-pass imaging of dynamic acquisitions (LIDA) with a group-oriented registration (GOREG) for proton MR imaging of lung ventilation},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Kaireit, Till F and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={78},
  number={4},
  pages={1496--1505},
  year={2017},
  publisher={Wiley Online Library}
}

@article{bauman2019functional,
  title={Functional lung imaging with transient spoiled gradient echo},
  author={Bauman, Grzegorz and Pusterla, Orso and Bieri, Oliver},
  journal={Magnetic Resonance in Medicine},
  volume={81},
  number={3},
  pages={1915--1923},
  year={2019},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2018feasibility,
  title={Feasibility of quantitative regional ventilation and perfusion mapping with phase-resolved functional lung (PREFUL) MRI in healthy volunteers and COPD, CTEPH, and CF patients},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Klime{\v{s}}, Filip and Kaireit, Till F and Sch{\""o}nfeld, Christian and Rot{\""a}rmel, Alexander and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={79},
  number={4},
  pages={2306--2314},
  year={2018},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2018detection,
  title={Detection of chronic lung allograft dysfunction using ventilation-weighted Fourier decomposition MRI},
  author={Voskrebenzev, A and Greer, M and Gutberlet, M and Sch{\""o}nfeld, C and Renne, J and Hinrichs, J and Kaireit, T and Welte, T and Wacker, F and Gottlieb, J and others},
  journal={American Journal of Transplantation},
  volume={18},
  number={8},
  pages={2050--2060},
  year={2018},
  publisher={Wiley Online Library}
}

@inproceedings{bauman2010time,
  title={Time--resolved lung perfusion and ventilation--weighted MRI by wavelet analysis},
  author={Bauman, G and Dinkel, J and Puderbach, M and Schad, L},
  booktitle={Proc. Intl. Soc. Mag. Reson. Med},
  volume={18},
  number={s 2507},
  year={2010}
}

@inproceedings{bondesson2016non,
  title={Non-contrast-enhanced perfusion and ventilation assessment of the human lung by means of wavelet decomposition in proton MRI},
  author={Bondesson, David and Gaass, Thomas and Dinkel, Julien and Kiefer, Berthold},
  booktitle={Proc Intl Soc Mag Reson Med},
  volume={24},
  pages={1934},
  year={2016}
}

@article{bondesson2019nonuniform,
  title={Nonuniform Fourier-decomposition MRI for ventilation-and perfusion-weighted imaging of the lung},
  author={Bondesson, David and Schneider, Moritz J and Gaass, Thomas and K{\""u}hn, Bernd and Bauman, Grzegorz and Dietrich, Olaf and Dinkel, Julien},
  journal={Magnetic Resonance in Medicine},
  volume={82},
  number={4},
  pages={1312--1321},
  year={2019},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2017low,
  title={Low-pass imaging of dynamic acquisitions (LIDA) with a group-oriented registration (GOREG) for proton MR imaging of lung ventilation},
  author={Voskrebenzev, Andreas and Gutberlet, Marcel and Kaireit, Till F and Wacker, Frank and Vogel-Claussen, Jens},
  journal={Magnetic resonance in medicine},
  volume={78},
  number={4},
  pages={1496--1505},
  year={2017},
  publisher={Wiley Online Library}
}

@article{wujcicki2015perfusion,
  title={Perfusion and ventilation filters for Fourier-decomposition MR lung imaging},
  author={Wujcicki, Artur and Corteville, Dominique and Materka, Andrzej and Schad, Lothar R},
  journal={Zeitschrift f{\""u}r Medizinische Physik},
  volume={25},
  number={1},
  pages={66--76},
  year={2015},
  publisher={Elsevier}
}

@article{bauman2017matrix,
  title={Matrix pencil decomposition of time-resolved proton MRI for robust and improved assessment of pulmonary ventilation and perfusion},
  author={Bauman, Grzegorz and Bieri, Oliver},
  journal={Magnetic resonance in medicine},
  volume={77},
  number={1},
  pages={336--342},
  year={2017},
  publisher={Wiley Online Library}
}

@article{opencv_library,
    author = {Bradski, G.},
    citeulike-article-id = {2236121},
    journal = {Dr. Dobb's Journal of Software Tools},
    keywords = {bibtex-import},
    posted-at = {2008-01-15 19:21:54},
    priority = {4},
    title = {{The OpenCV Library}},
    year = {2000}
} 

@article{voskrebenzev2021proton,
  title={Proton MRI of the lung: how to tame scarce protons and fast signal decay},
  author={Voskrebenzev, Andreas and Vogel-Claussen, Jens},
  journal={Journal of Magnetic Resonance Imaging},
  volume={53},
  number={5},
  pages={1344--1357},
  year={2021},
  publisher={Wiley Online Library}
}

@article{wielputz2014magnetic,
  title={Magnetic resonance imaging detects changes in structure and perfusion, and response to therapy in early cystic fibrosis lung disease},
  author={Wielp{\""u}tz, Mark O and Puderbach, Michael and Kopp-Schneider, Annette and Stahl, Mirjam and Fritzsching, Eva and Sommerburg, Olaf and Ley, Sebastian and Sumkauskaite, Migle and Biederer, J{\""u}rgen and Kauczor, Hans-Ulrich and others},
  journal={American journal of respiratory and critical care medicine},
  volume={189},
  number={8},
  pages={956--965},
  year={2014},
  publisher={American Thoracic Society}
}

@article{vogel2019effect,
  title={Effect of indacaterol/glycopyrronium on pulmonary perfusion and ventilation in hyperinflated patients with chronic obstructive pulmonary disease (CLAIM). A double-blind, randomized, crossover trial},
  author={Vogel-Claussen, Jens and Sch{\""o}nfeld, Christian-Olaf and Kaireit, Till F and Voskrebenzev, Andreas and Czerner, Christoph P and Renne, Julius and Tillmann, Hanns-Christian and Berschneider, Korbinian and Hiltl, Simone and Bauersachs, Johann and others},
  journal={American journal of respiratory and critical care medicine},
  volume={199},
  number={9},
  pages={1086--1096},
  year={2019},
  publisher={American Thoracic Society}
}

@article{schoenfeld2016mr,
  title={MR imaging--derived regional pulmonary parenchymal perfusion and cardiac function for monitoring patients with chronic thromboembolic pulmonary hypertension before and after pulmonary endarterectomy},
  author={Schoenfeld, Christian and Cebotari, Serghei and Hinrichs, Jan and Renne, Julius and Kaireit, Till and Olsson, Karen M and Voskrebenzev, Andreas and Gutberlet, Marcel and Hoeper, Marius M and Welte, Tobias and others},
  journal={Radiology},
  volume={279},
  number={3},
  pages={925--934},
  year={2016},
  publisher={Radiological Society of North America}
}

@article{bachert1996nuclear,
  title={Nuclear magnetic resonance imaging of airways in humans with use of hyperpolarized 3He},
  author={Bachert, Peter and Schad, Lothar R and Bock, Michael and Knopp, Michael V and Ebert, Michael and Grobmann, Tino and Heil, Werner and Hofmann, Dirk and Surkau, Reinhard and Otten, Ernst W},
  journal={Magnetic Resonance in Medicine},
  volume={36},
  number={2},
  pages={192--196},
  year={1996},
  publisher={Wiley Online Library}
}

@article{schoenfeld2016mr,
  title={MR imaging--derived regional pulmonary parenchymal perfusion and cardiac function for monitoring patients with chronic thromboembolic pulmonary hypertension before and after pulmonary endarterectomy},
  author={Schoenfeld, Christian and Cebotari, Serghei and Hinrichs, Jan and Renne, Julius and Kaireit, Till and Olsson, Karen M and Voskrebenzev, Andreas and Gutberlet, Marcel and Hoeper, Marius M and Welte, Tobias and others},
  journal={Radiology},
  volume={279},
  number={3},
  pages={925--934},
  year={2016},
  publisher={Radiological Society of North America}
}

@article{kern2018hyperpolarized,
  title={Hyperpolarized gas MRI in pulmonology},
  author={Kern, Agilo Luitger and Vogel-Claussen, Jens},
  journal={The British Journal of Radiology},
  volume={91},
  number={1084},
  pages={20170647},
  year={2018}
}

@article{henderson2013gravitational,
  title={The gravitational distribution of ventilation-perfusion ratio is more uniform in prone than supine posture in the normal human lung},
  author={Henderson, A Cortney and S{\'a}, Rui Carlos and Theilmann, Rebecca J and Buxton, Richard B and Prisk, G Kim and Hopkins, Susan R},
  journal={Journal of applied physiology},
  volume={115},
  number={3},
  pages={313--324},
  year={2013},
  publisher={American Physiological Society Bethesda, MD}
}

@article{kjorstad2014quantitative,
  title={Quantitative lung ventilation using Fourier decomposition MRI; comparison and initial study},
  author={Kj{\o}rstad, {\AA}smund and Corteville, Dominique MR and Henzler, Thomas and Schmid-Bindert, Gerald and Hodneland, Erlend and Z{\""o}llner, Frank G and Schad, Lothar R},
  journal={Magnetic Resonance Materials in Physics, Biology and Medicine},
  volume={27},
  number={6},
  pages={467--476},
  year={2014},
  publisher={Springer}
}

@article{kjorstad2015non,
  title={Non-invasive quantitative pulmonary V/Q imaging using Fourier decomposition MRI at 1.5 T},
  author={Kj{\o}rstad, {\AA}smund and Corteville, Dominique MR and Henzler, Thomas and Schmid-Bindert, Gerald and Z{\""o}llner, Frank G and Schad, Lothar R},
  journal={Zeitschrift fuer Medizinische Physik},
  volume={25},
  number={4},
  pages={326--332},
  year={2015},
  publisher={Elsevier}
}

@article{arai2018comparison,
  title={Comparison of quantitative multiple-breath specific ventilation imaging using colocalized 2D oxygen-enhanced MRI and hyperpolarized 3He MRI},
  author={Arai, Tatsuya J and Horn, Felix C and S{\'a}, Rui Carlos and Rao, Madhwesha R and Collier, Guilhem J and Theilmann, Rebecca J and Prisk, G Kim and Wild, Jim M},
  journal={Journal of Applied Physiology},
  volume={125},
  number={5},
  pages={1526--1535},
  year={2018},
  publisher={American Physiological Society Bethesda, MD}
}

@article{capaldi2018free,
  title={Free-breathing pulmonary MR imaging to quantify regional ventilation},
  author={Capaldi, Dante PI and Eddy, Rachel L and Svenningsen, Sarah and Guo, Fumin and Baxter, John SH and McLeod, A Jonathan and Nair, Parameswaran and McCormack, David G and Parraga, Grace and Canadian Respiratory Research Network},
  journal={Radiology},
  volume={287},
  number={2},
  pages={693--704},
  year={2018},
  publisher={Radiological Society of North America}
}

@article{sa2010vertical,
  title={Vertical distribution of specific ventilation in normal supine humans measured by oxygen-enhanced proton MRI},
  author={S{\'a}, Rui Carlos and Cronin, Matthew V and Cortney Henderson, A and Holverda, Sebastiaan and Theilmann, Rebecca J and Arai, Tatsuya J and Dubowitz, David J and Hopkins, Susan R and Buxton, Richard B and Kim Prisk, G},
  journal={Journal of applied physiology},
  volume={109},
  number={6},
  pages={1950--1959},
  year={2010},
  publisher={American Physiological Society Bethesda, MD}
}

@article{klimevs2019free,
  title={Free-breathing quantification of regional ventilation derived by phase-resolved functional lung (PREFUL) MRI},
  author={Klime{\v{s}}, F and Voskrebenzev, A and Gutberlet, M and Kern, A and Behrendt, L and Kaireit, TF and Czerner, C and Renne, J and Wacker, F and Vogel-Claussen, J},
  journal={NMR in Biomedicine},
  volume={32},
  number={6},
  pages={e4088},
  year={2019},
  publisher={Wiley Online Library}
}

@book{barrett2012ganong,
  title={Ganong's Review of Medical Physiology},
  author={Barrett, K.E. and Boitano, S. and Barman, S.M. and Ganong, W.F. and Brooks, H.L.},
  isbn={9781259009624},
  series={Lange medical book},
  url={https://books.google.ru/books?id=jGdsMgEACAAJ},
  year={2012},
  publisher={McGraw-Hill}
}

@article{klimevs2019free,
  title={Free-breathing quantification of regional ventilation derived by phase-resolved functional lung (PREFUL) MRI},
  author={Klime{\v{s}}, F and Voskrebenzev, A and Gutberlet, M and Kern, A and Behrendt, L and Kaireit, TF and Czerner, C and Renne, J and Wacker, F and Vogel-Claussen, J},
  journal={NMR in Biomedicine},
  volume={32},
  number={6},
  pages={e4088},
  year={2019},
  publisher={Wiley Online Library}
}

@article{voskrebenzev2021proton,
  title={Proton MRI of the lung: how to tame scarce protons and fast signal decay},
  author={Voskrebenzev, Andreas and Vogel-Claussen, Jens},
  journal={Journal of Magnetic Resonance Imaging},
  volume={53},
  number={5},
  pages={1344--1357},
  year={2021},
  publisher={Wiley Online Library}
}

@article{couch2014inert,
  title={Inert fluorinated gas MRI: a new pulmonary imaging modality},
  author={Couch, Marcus J and Ball, Iain K and Li, Tao and Fox, Matthew S and Ouriadov, Alexei V and Biman, Birubi and Albert, Mitchell S},
  journal={NMR in Biomedicine},
  volume={27},
  number={12},
  pages={1525--1534},
  year={2014},
  publisher={Wiley Online Library}
}"
PDdKRDuu,Шаблон диплома по ГОСТу,OneStepp,Latex,Tuesday 7th of May 2024 12:14:36 PM CDT,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%            ______  ______  ______  _______            %
%           |  ____||  __  ||  ____||__   __|           %
%           | |     | |  | || |        | |              %
%           | |     | |__| || |____    | |              %
%           |_|     |______||______|   |_|              %
%                                                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Устанавливаем класс документа 'article' и определяем базовые параметры макета.
\documentclass[14pt,a4paper]{article}

% Подключение пакетов для работы с текстом и шрифтами
\usepackage[T1,T2A]{fontenc} % Поддержка кодировки шрифтов T1 и расширенной поддержки кириллицы.
\usepackage[utf8]{inputenc} % Позволяет вводить текст в кодировке UTF-8.

% Поддержка русского языка
\usepackage[russian]{babel} % Обеспечивает поддержку набора текста на русском языке.

% Математические пакеты
\usepackage{amsmath,amsfonts,amssymb,amsthm} % Форматирование математических формул и символов.

% Работа с символами
\usepackage{gensymb, textcomp} % Обеспечивает поддержку общих символов, включая символы градусов и др.

% Улучшенное форматирование таблиц
\usepackage{array, booktabs, multirow, makecell} % Расширенные опции для форматирования колонок и таблиц.

% Переименуем Содержание в ОГЛАВЛЕНИЕ
\addto\captionsrussian{\renewcommand{\contentsname}{\centering ОГЛАВЛЕНИЕ}}

% Управление библиографией:
% Определение стиля библиографии согласно ГОСТ 7.0.5.
\addto\captionsrussian{
  % \renewcommand{\refname}{\centering СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ}
  \renewcommand{\refname}{\centering СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ}
}

% Работа с графикой
\usepackage{stackengine, tikz, graphicx, subcaption, float} % Поддержка включения графики и управление плавающими объектами.

% Настройки для вставки исходного кода
\usepackage{listings, xcolor} % Печать исходного кода в LaTeX.

% Пользовательские определения цветов для кода
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}

% Настройки для отображения кода
\lstset{
    backgroundcolor=\color{backcolour},
    commentstyle=\color{codegreen},
    keywordstyle=\color{orange},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,
    breaklines=true,
    captionpos=b,
    keepspaces=true,
    numbers=left,
    numbersep=5pt,
    showspaces=false,
    showstringspaces=false,
    showtabs=false,
    tabsize=2
}

% Форматирование документа
\setlength{\parindent}{1cm} % Устанавливает отступ абзаца.
\usepackage{setspace}
\setstretch{1.5}  % Устанавливает полуторные интервалы в тексте.

% Отключение переносов
\hyphenpenalty=10000 

% Размеры шрифтов согласно ГОСТ
\renewcommand{\tiny}{\fontsize{7}{8.4pt}\selectfont}
\renewcommand{\scriptsize}{\fontsize{9}{11pt}\selectfont}
\renewcommand{\footnotesize}{\fontsize{11}{13.6pt}\selectfont}
\renewcommand{\normalsize}{\fontsize{14}{18pt}\selectfont}

% Стили заголовков согласно ГОСТ
\renewcommand{\thesection}{\arabic{section}.}
\renewcommand{\thesubsection}{\arabic{section}.\arabic{subsection}.}
\renewcommand{\thesubsubsection}{\arabic{section}.\arabic{subsection}.\arabic{subsubsection}.}

\usepackage{titlesec}  % Пакет для настройки заголовков разделов.

% Установим единый внешний вид для раздела, подраздела, подподраздела
\titleformat*{\section}{\normalsize\bfseries}
\titleformat*{\subsection}{\normalsize\bfseries}
\titleformat*{\subsubsection}{\normalsize\bfseries}

% Поля документа по ГОСТ
\usepackage[left=30mm, right=15mm, top=20mm, bottom=30mm]{geometry}

% Отступ первого абзаца каждой главы
\usepackage{indentfirst}

% Русификация перечислений
\makeatletter
% Переопределение нижнего регистра алфавитного счетчика на полностью кириллический.
\renewcommand*{\@alph}[1]{%
  \ifcase#1\or а\or б\or в\or г\or
    д\or е\or ё\or ж\or з\or и\or й\or
    к\or л\or м\or н\or о\or п\or р\or с\or т\or
    у\or ф\or х\or ц\or ч\or
    ш\or щ\or ы\or э\or ю\or
    я\else\@ctrerr\fi
}
% Переопределение верхнего регистра алфавитного счетчика на полностью кириллический.
\renewcommand*{\@Alph}[1]{%
  \ifcase#1\or А\or Б\or В\or Г\or
    Д\or Е\or Ё\or Ж\or З\or И\or Й\or
    К\or Л\or М\or Н\or О\or П\or Р\or С\or Т\or
    У\or Ф\or Х\or Ц\or Ч\or
    Ш\or Щ\or Ы\or Э\or Ю\or
    Я\else\@ctrerr\fi
}
\makeatother

% Подключение пакета для работы с базами данных, в том числе для обработки CSV файлов.
\usepackage{datatool}

\newcommand*{\addacronym}[2]{%
  \DTLnewrow{acronyms}
  \DTLnewdbentry{acronyms}{Acronym}{#1}
  \DTLnewdbentry{acronyms}{Description}{#2}
}

\newcommand{\tocfill}{\dotfill}  % Simplified definition for filling dots.

\newcommand{\abbrlabel}[1]{\makebox[3cm][l]{\textbf{#1}\ \tocfill}}

\newenvironment{abbreviations}{
  \begin{list}{}{%
    \renewcommand{\makelabel}{\abbrlabel}
    \setlength{\labelwidth}{3cm}
    \setlength{\leftmargin}{\labelwidth+\labelsep}
    \setlength{\itemsep}{0pt}
  }
}{
  \end{list}
}

% Пакет для набора нотации Дирака (bra-ket) в квантовой механике.
\usepackage{braket}

% Пакет для позиционирования элементов LaTeX на изображениях с указанием процентных координат.
\usepackage[percent]{overpic}

% Определение команды для вставки маркера списка (буллета) внутри таблиц или текста.
\newcommand{\tabitem}{~~\llap{\textbullet}~~}

% Определение нового типа колонки 'L' для таблиц, который обеспечивает выравнивание текста по левому краю.
% 'm{#1}' - указывает на вертикальное выравнивание содержимого по центру колонки.
% '>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}' - разрешает использовать команды перевода строки в колонке.
\newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

% Определение нового типа колонки 'C' для таблиц, который обеспечивает выравнивание текста по центру.
% 'm{#1}' - указывает на вертикальное выравнивание содержимого по центру колонки.
% '>{\centering\let\newline\\\arraybackslash\hspace{0pt}}' - разрешает использовать команды перевода строки в колонке и обеспечивает центрирование текста.
\newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

% Гиперссылки
% Важно загружать в конце
\usepackage{hyperref} % Расширенная поддержка гиперссылок в LaTeX.
\hypersetup{
    colorlinks,
    citecolor=black,
    filecolor=black,
    linkcolor=black,
    urlcolor=black,
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%            ______  ______  ______  _______            %
%           |  ____||  __  ||  ____||__   __|           %
%           | |     | |  | || |        | |              %
%           | |     | |__| || |____    | |              %
%           |_|     |______||______|   |_|              %
%                                                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                          ГОСТ/                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% настройка отступов
\setlength{\parindent}{1.25cm} 

% убираем висячие строки  и подобное безобразие
\sloppy   

% Запрещаем разрыв страницы после первой строки абзаца
\clubpenalty=10000	

% Запрещаем разрыв страницы перед последней строкой абзаца
\widowpenalty=10000		

% Полуторный интервал
\onehalfspacing   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                         /ГОСТ                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                    Титульный лист/                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\thispagestyle{empty}
\begin{titlepage}
\begin{center}
ФЕДЕРАЛЬНОЕ ГОСУДАРСТВЕННОЕ БЮДЖЕТНОЕ ОБРАЗОВАТЕЛЬНОЕ
УЧРЕЖДЕНИЕ ВЫСШЕГО ОБРАЗОВАНИЯ \\
«МОСКОВСКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ\\
имени М.В.ЛОМОНОСОВА»
\vspace{0.4cm}

ФИЗИЧЕСКИЙ ФАКУЛЬТЕТ\\
\vspace{0.4cm}
КАФЕДРА ФОТОНИКИ И ФИЗИКИ МИКРОВОЛН\\

\vspace{0.4cm}
БАКАЛАВРСКАЯ РАБОТА \\
\vspace{0.4cm}

\textbf{<<Разработка алгоритмов расчёта карт вентиляции лёгких для функциональной пульмональной магнитно-резонансной томографии>>}

\end{center}

\begin{flushright}
\vspace{0.7cm}

Выполнил студент \\
XXX группы\\
Фамилия Имя Отчество \\
\underline{\hspace{4cm}}\\

Научный руководитель:\\
к.ф.-м.н., ведущий инженер кафедры медицинской физики МГУ\\
\vspace{-0.2cm}
имени М.В. Ломоносова\\
Фамилия Имя Отчество \\
\underline{\hspace{4cm}}\\

Научный консультант:\\
профессор, д.ф.-м.н., профессор кафедры фотоники и физики\\ 
\vspace{-0.2cm}
микроволн МГУ имени М.В. Ломоносова\\

Фамилия Имя Отчество\\
\underline{\hspace{4cm}}\\

\end{flushright}
\begin{flushleft}
Допущен к защите \guillemotleft \underline{\hspace{7mm}} \hspace{-3.6mm} \guillemotright \hspace{1pt} \underline{\hspace{4cm}} 2022 г.\\
И.О. зав кафедрой
к.ф.-м.н., доцент Фамилия И.О. \underline{\hspace{3cm}} \\
\end{flushleft}
\begin{center}
\vspace{0.4cm}
\small МОСКВА \\ \number\year\normalsize
\end{center}
\end{titlepage}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                    /Титульный лист                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     ОГЛАВЛЕНИЕ/                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\setcounter{page}{2}
\tableofcontents  
\newpage

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                      /ОГЛАВЛЕНИЕ                      %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                 Список аббревиатур/                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\phantomsection
\addcontentsline{toc}{section}{Список аббревиатур}
\section*{Список аббревиатур}
\label{sec:abbreviations}

\DTLnewdb{acronyms}
\addacronym{ИП}{Импульсная последовательность}
\addacronym{КТ}{Компьютерная томография}

% Display the contents of the database
\begin{abbreviations}
\DTLforeach*{acronyms}{\thisAcronym=Acronym,\thisDesc=Description}{%
  \item[\thisAcronym] \thisDesc
}
\end{abbreviations}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                /Список аббревиатур                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     ВВЕДЕНИЕ/                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\phantomsection
\addcontentsline{toc}{section}{ВВЕДЕНИЕ}
\section*{\centering ВВЕДЕНИЕ}
\label{sec:introduction}

Тут текст введения!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                    /ВВЕДЕНИЕ                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                 Литературный обзор/                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\section{Литературный обзор}

\subsection{Основы основ}

\subsubsection{Небольшие подосновы}

Тут текст литобзора! \cite{vonder2021latest, ambrosini2012pet}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                /Литературный обзор                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                 Материалы и методы/                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\section{Материалы и методы}

\subsection{Эксперименальная установка}

Тут текст материалов и методов! 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                /Материалы и методы                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     Результаты/                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\section{Результаты}

Результаты тут!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                    /Результаты                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                       ЗАКЛЮЧЕНИЕ/                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\phantomsection
\addcontentsline{toc}{section}{ЗАКЛЮЧЕНИЕ}
\section*{\centering ЗАКЛЮЧЕНИЕ}
\label{sec:conclusion}

Тут текст заключения! 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                      /ЗАКЛЮЧЕНИЕ                      %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                      Библиография/                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\bibliographystyle{ugost2008}
\makeatletter
\renewcommand{\@biblabel}[1]{#1.}
\makeatother
\phantomsection
\addcontentsline{toc}{section}{СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ}
\bibliography{References.bib}
\label{sec:bibliography}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     /Библиография                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\end{document}
"
vYLWYmnT,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Tuesday 7th of May 2024 12:12:08 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_420497.pdf

Working as of:
07 May 2024"
yLJzQKQN,kod slepu - blad skladni - 86924,Pecetowicz,PHP,Tuesday 7th of May 2024 12:09:33 PM CDT,"<?php
$start = microtime();
session_start();
include(""_assest/php/main.php"");
?>
<!DOCTYPE html>
<html lang=""pl"">
  <head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>Kamiennatwierdza.Eu - Sklep PVP</title> 
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css"">
    <link rel=""stylesheet"" href=""_assest/css/bootstrap.css"">
    <script src=""_assest/js/jquery-1.10.2.min.js""></script>
    <script src=""_assest/js/bootstrap.min.js""></script>
    <link rel=""stylesheet"" href=""_assest/css/style.css"">
  </head>
  <body>
    <div class=""navbar navbar-default navbar-fixed-top"" role=""navigation"">
      <div class=""container"">
        <div class=""navbar-collapse collapse"">
          <ul class=""nav navbar-nav"">
            <li><a href=""index.php"">Sklep PVP</a></li>
          </ul>
          <ul class=""nav navbar-nav navbar-right"" style=""margin-right:0px;"">
            <li class=""active""><a href=""http://kamiennatwierdza.eu/"">STRONA GŁÓWNA <span class=""sr-only""></span></a></li>
          </ul>
        </div>
      </div>
    </div>
    <div class=""Cb""></div>
    <div class=""container"">
      <div class=""well text-center"">
        <br >
        <?php 
        $Web->buy(@$_POST['id'], @$_POST['nick'], @$_POST['code'], @$_POST['number'], @$_POST['cmd']);
        $id = '1';
        foreach($item as $i){
          echo'
            <div class=""col-md-3"">
              <div class=""panel panel-default"">
                <div class=""panel-body"">
                  <span class=""label label-success"">'.$i['name'].'</span> 
                  <br>
                  <img src=""'.$i['img'].'"" class=""img-rounded"" width=""100px"" height=""auto"" style=""margin-top:30px; margin-left:60px; margin-bottom:10px;"">
                  <br>
                  <a type=""button"" data-toggle=""modal"" data-target=""#item'.$id.'"" class=""btn btn-info"">SMS ('.$i['price'].' ZŁ)</a><br >
                </div>
              </div>
            </div>
            ';
          echo'
          <div class=""modal fade"" id=""item'.$i['id'].'"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"">
            <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
              <div class=""modal-header"">
              <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">×</span></button> 
               <center><h4 class=""modal-title"" id=""myModalLabel""><span class=""label label-warning"">Wybrałeś usługę: <b>'.$i['name'].'</b></span></h4></center>
              </div>
              <div class=""modal-body"" style=""text-align:center;"">
              <div class=""modal-body"" style=""padding: 0;"">
<div class=""col-md-4"">
<div class=""panel panel-default"">
<div class=""panel-heading""><span class=""label label-warning""><b>'.$i['name'].'</b></span></div>
<div class=""panel-body"" style=""margin: 0; padding: 0; text-align: center; height:360px;"">
<center><div style=""background-color: white; color: white; width: 100%; height: 30px;""></div></center> <img src=""'.$i['img'].'"" style=""max-width:253px; max-height:400px;margin:auto;top:0;left: 0;right: 0;bottom: 0;"" alt=""image"">
</div>
<div class=""panel-footer""><span class=""label label-primary"">SMS: '.$i['price'].zł</span> <span class=""label label-primary"">PSC: '.$i['price'].zł</span> - <a href="""" data-toggle=""modal"" data-target=""#b32""><span class=""label label-success""><b>KUP</b></span></a></div>
</div>    
<div class=""modal-content"">
<div class=""modal-header"">
<button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">×</span></button>
<h4 class=""modal-title"" id=""myModalLabel""><span class=""label label-warning"">Wybrałeś usługę: <b>'.$i['name'].'</b></span></h4>
</div>
<div class=""modal-body"" style=""padding: 0;"">
<ul class=""nav nav-tabs"">
<li class=""active""><a href=""#description32"" data-toggle=""tab"" aria-expanded=""true""><i class=""fa fa-info-circle""></i> Opis</a></li>
<li class=""""><a href=""#sms32"" data-toggle=""tab"" aria-expanded=""false""><i class=""fa fa-phone""></i> <span class=""label label-primary"">'.$i['price'].zł</span> SMS</a></li>
            <li class=""""><a href=""#psc32"" data-toggle=""tab"" aria-expanded=""false""><i class=""fa fa-credit-card""></i> <span class=""label label-primary"">'.$i['price'].</span> PaySafeCard</a></li>
</ul>
</div>
<div id=""myTabContent"" class=""tab-content"">
<div class=""tab-pane fade active in"" id=""description32"" style=""padding: 5px;"">
'.$i['opis'].'
<br> <div class=""alert alert-dismissable alert-info"">
Dziękujemy za każdy zakup - dzięki Wam możemy nadal istnieć i się rozwijać!
</div>
<p></p>
</div>
<div class=""tab-pane fade"" id=""sms32"">
<div class=""row"">
<div class=""col-md-12""><br>
<div class=""alert alert-dismissable alert-danger"">
Pamiętaj o byciu <b>ONLINE</b> na serwerze przy zakupie usługi!<br>
Podczas zakupu przedmiotu zwolnij miejsce w ekwipunku!
</div>
<div class=""well"">
Aby zakupić <b>'.$i['name'].'</b> należy wysłać SMS o treści <b>'.$config['sms_tresc'].'</b> na numer <b>'.$i['number'].'</b>. Koszt usługi: <span class=""label label-primary""><b>'.$i['price'].'zł z VAT</b></span>
<br><br><u>Prosimy o sprawdzanie dokładności wysyłanej treści, nie odpowiadamy za pomyłki!</u>
</div>
<div id=""back_32"">
</div>
</div>
<div class=""col-md-6 col-md-offset-3"">
 <form method=""POST"">
<div class=""form-group"">
<input class=""form-control"" id=""focusedInput"" type=""text"" name=""nick"" placeholder=""Nick z serwera..."">
</div>
<div class=""form-group"">
<div class=""input-group"">
<input class=""form-control"" id=""focusedInput"" type=""text"" name=""code"" placeholder=""Kod zwrotny..."">
<input type=""text"" name=""cmd"" style=""display:none;"" value=""'.$i['cmd'].'""><br>
<input type=""hidden"" name=""sidentity"" value=""32"">
<span class=""input-group-btn"">
<input class=""btn btn-default"" type=""submit"" value=""KUP"">
</span>
</div>
</div>
</form>
</div>
<div class=""col-md-12"">
<div class=""well"">
<div class=""row"">
<div class=""col-md-6"">
<a href=""https://www.simpay.pl/pomoc-dla-klientow"" target=""_blank"">Formularz reklamacyjny</a><br>
<a href=""https://simpay.pl/dokumenty/simpay_regulamin_uzytkownik_koncowy_01_03_15.pdf"" target=""_blank"">Regulamin płatności</a><br>
<a href=""pomoc.php"" target=""_blank"">Kontakt z administracją</a>
</div>
<div class=""col-md-6"">
<img src=""images/simpay_banner_162_85.png"">
</div>
</div>
</div>
</div>
</div>
</div>
<div class=""tab-pane fade"" id=""psc32"">
<div class=""row"">
<div class=""col-md-12"">
<br>
<div class=""alert alert-dismissable alert-warning"">
Aby skorzystać z płatności PaySafeCard musisz być zalogowany!<br>
<br><b><a href=""l/panel/psc-doladuj.php"">Kliknij tutaj, aby się zalogować!</a></b>
</div>
</div>
</div>
</div>
</div>
</div>
</div>    
';
          $id++;
        }
        ?>
      </div>
    </div>
    <br >        
    <footer>
      <center>Wszelkie prawa zastrzeżone - Gamtepz.eu | 2017 | <?php
        $koniec = microtime();
        $start = explode(' ', $start);
        $koniec = explode(' ', $koniec);
        $roznica = ($koniec[0]+$koniec[1])-($start[0]+$start[1]);
        echo 'Wygenerowano w czasie '.$roznica.' ms.';
        ?>        
      </center></footer>
  </body>
  <script type=""text/javascript"">
    $(document).ready(function() {
      $('[data-toggle=tooltip]').tooltip();
    }); 
  </script>
  <html>"
a5YKrkmP,Untitled,irmantas_radavicius,C++,Tuesday 7th of May 2024 11:50:17 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <cmath>
#include <cctype>
#include <array>

using namespace std;

class Part{
    string Name;
    int Sn;
    double Weight;
    string Type;

    public:
        string setType(double weight) {
            return (weight > 50) ? ""heavy"" : ""light"";
        }
    private:
        void init(string name, int Sn, int Weight){
            Name = name;
            this->Sn = Sn;
            this->Weight = Weight;
            Type = setType(Weight);
        }
    public:
        Part(){
            init(""unknown part"", 0, 0);
        }
        Part(string Name){
            init(Name, 0, 0);
        }
        Part(string name, int Sn, int Weight){
            init(Name, Sn, Weight);
        }

        void setParam(int sn, int weight){
            init(Name, sn, weight);
        }
 /*  //////////////////////////////////////// kaip padaryti, kad pagal varda grazintu Sn?
        double getSn(string name){
            ...
            return Sn;
        }
*/  ///////////////////////////////////////
        void getPartInf(){
            cout << Name << ""|"" << Sn << ""|"" << Weight << ""|"" << Type << endl;
        }

};

int main(){
    Part p1(), p2(""stumoklis""), p3(""piston"", 2546, 32);

    p3.getPartInf();

    p2.setParam(3567, 55);
    p2.getPartInf();

    return 0;
}

"
B5Cxz18P,hmm,tomtomvader298,JavaScript,Tuesday 7th of May 2024 11:47:35 AM CDT,"const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const db = require('../database.js');
const calculateLevel = require('../events/calculatelevel');
const teaGreen = require('../teaGreen');// Custom Colour For Embed
module.exports = {
    data: new SlashCommandBuilder()
        .setDMPermission(false)
        .setName('check-level')
        .setDescription('Level Checking')
        .setDefaultMemberPermissions(PermissionFlagsBits.SendMessages),
    async execute(interaction) {
        await interaction.deferReply();

        const guildHasOptedInLevelingSystem = await db.get(`guildoptedin_${interaction.guild.id}`) || []; // Spawn Empty Array In Database Incase No Data

        if (guildHasOptedInLevelingSystem === false) {
            let resultsEmbed = new EmbedBuilder().setColor(teaGreen)
                .setTitle(`Enable Leveling`)
                .setDescription(`Enable Leveling By Using </enable-leveling:1237439688181284986> (Administration Only Command)`)
                .setFooter({ text: `Currently Disabled, No Levels Here` })
            await interaction.editReply({ content: null, embeds: [resultsEmbed], files: [], components: [], ephemeral: true, tts: false, fetchReply: false }).catch((e) => console.log(e));

        } else if (guildHasOptedInLevelingSystem === true) {
            const xpCount = await db.get(`xp_${interaction.user.id}_${interaction.guild.id}`);
            const level = calculateLevel(xpCount).level;
            levelStatusMessage = `\`${level}\``;
            const xpToNextLevel = (level + 1) ** 2 * 10 - xpCount; // Calculate XP needed for the next level

            let embed = new EmbedBuilder().setAuthor({ name: `${interaction.user.globalName ?? interaction.user.username}` })
                .setDescription(`# Your Level: ${levelStatusMessage}
            \n### XP Needed Required For The Next Level: \`${xpToNextLevel}\``).setColor(teaGreen)
            await interaction.editReply({ embeds: [embed] }).catch((e) => console.log(e));
        }
    },
};"
uEZ2Kfh9,Mutex,artmexbet,C,Tuesday 7th of May 2024 11:32:42 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <pthread.h>
#include <string.h>

#define ROWS 4
#define COLS 5

struct ThreadResult {
    int count;
    int indexes[6];
};

struct TaskQueue {
    struct TaskQueue *next;
    struct ThreadResult result;
    int threadNumber;
};

struct ThreadInfo {
    int matrix[ROWS][COLS];
    int deltaX;
    int deltaY;
    int threadNumber;
};

void fill_matrix(int array[ROWS][COLS]) {
    srand(time(NULL));
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            array[i][j] = 1 + rand() % 3;
        }
    }
}

void print_matrix(int array[ROWS][COLS]) {
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            printf(""%d "", array[i][j]);
        }
        printf(""\n"");
    }
}

pthread_mutex_t mutex;
struct TaskQueue *head = NULL;
struct TaskQueue *new = NULL;
struct TaskQueue *tail = NULL;

void *get_values(void *info_) {
    struct ThreadInfo *info = (struct ThreadInfo *) info_;
    struct ThreadResult *result = (struct ThreadResult *) malloc(sizeof(struct ThreadResult));
    result->count = 0;
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            int k = 0;
            int lengthOfHorizontal = 0; // Сюда сохраняем длину повторяющихся символов в строке
            while (0 < j + k && j + k < COLS && info->matrix[i][j + k] == info->matrix[i][j]) {
                lengthOfHorizontal++;
                int l = 0;
                int lengthOfVertical = 0; // Сюда сохраняем длину повторяющихся символов в столбце
                while (0 < i + l && i + l < ROWS && info->matrix[i + l][j + k] == info->matrix[i][j + k]) {
                    lengthOfVertical++;
                    l += info->deltaX;
                }
                if (lengthOfHorizontal + lengthOfVertical > result->count) {
                    result->indexes[0] = i;
                    result->indexes[1] = j;
                    result->indexes[2] = i;
                    result->indexes[3] = j + k;
                    if (l != 0) {
                        result->indexes[4] = i + l - 1 * info->deltaX;
                        // Если в l добавлялись элементы, значение в ней будет на единицу больше (или меньше,
                        // в зависимости от deltaX) из-за того, что мы сначала проверяем, а уже затем увеличиваем l
                        // в цикле while выше
                    } else {
                        // Если же l = 0, вычитать ничего не нужно, нужно лишь записать эту же строку в нужный индекс
                        result->indexes[4] = i;
                    }
                    result->indexes[5] = j + k;
                    result->count = lengthOfHorizontal + lengthOfVertical;
                    // Используем мьютекс для записи промежуточного результата в общую очередь
                    // Лочим поток
                    pthread_mutex_lock(&mutex);
                    tail->result = *result;
                    tail->threadNumber = info->threadNumber;
                    // Выделяем место для следующей операции
                    new = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
                    tail->next = new;
                    // Заменяем последний элемент на текущий
                    tail = new;
                    // Разблокируем поток
                    pthread_mutex_unlock(&mutex);
                }
                k += info->deltaY;
            }
        }
    }
    return (void *) result;
}

void find_g(int matrix[ROWS][COLS]) {
    // Инициализация очереди операций и мьютекса
    head = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
    tail = head;
    pthread_mutex_init(&mutex, NULL);

    int maxCount = 0;
    int coords[] = {0, 0, 0, 0, 0, 0};
    struct ThreadInfo rightUpper, leftUpper, leftLower, rightLower;
    struct ThreadResult *rightUpperResult, *leftUpperResult, *leftLowerResult, *rightLowerResult;
    memcpy(rightUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftLower.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(rightLower.matrix, matrix, ROWS * COLS * sizeof(int));
    rightUpper.deltaX = 1;
    rightUpper.deltaY = -1;
    rightUpper.threadNumber = 1;

    leftUpper.deltaX = -1;
    leftUpper.deltaY = -1;
    leftUpper.threadNumber = 2;

    leftLower.deltaX = -1;
    leftLower.deltaY = 1;
    leftLower.threadNumber = 3;

    rightLower.deltaX = 1;
    rightLower.deltaY = 1;
    rightLower.threadNumber = 4;

    pthread_t thread1, thread2, thread3, thread4;
    // По сути, каждый отдельный поток считает лучший результат для своего угла.
    // После этого основной поток (эта функция) собирает данные воедино и выводит результат
    pthread_create(&thread1, NULL, &get_values, &rightUpper);
    pthread_create(&thread2, NULL, &get_values, &leftUpper);
    pthread_create(&thread3, NULL, &get_values, &leftLower);
    pthread_create(&thread4, NULL, &get_values, &rightLower);
    pthread_join(thread1, (void **) &rightUpperResult);
    pthread_join(thread2, (void **) &leftUpperResult);
    pthread_join(thread3, (void **) &leftLowerResult);
    pthread_join(thread4, (void **) &rightLowerResult);
    if (rightUpperResult->count > maxCount) {
        maxCount = rightUpperResult->count;
        memcpy(coords, rightUpperResult->indexes, sizeof(rightUpperResult->indexes));
    }
    if (leftUpperResult->count > maxCount) {
        maxCount = leftUpperResult->count;
        memcpy(coords, leftUpperResult->indexes, sizeof(leftUpperResult->indexes));
    }
    if (leftLowerResult->count > maxCount) {
        maxCount = leftLowerResult->count;
        memcpy(coords, leftLowerResult->indexes, sizeof(leftLowerResult->indexes));
    }
    if (rightLowerResult->count > maxCount) {
        maxCount = rightLowerResult->count;
        memcpy(coords, rightLowerResult->indexes, sizeof(rightLowerResult->indexes));
    }
    for (int i = 0; i < 6; i++) {
        printf(""%d "", coords[i]);
    }
    printf(""\nTask queue:\n"");
    struct TaskQueue *current = head;
    while (current->next != NULL) {
        printf(""Thread %d: "", current->threadNumber);
        for (int i = 0; i < 6; i++) {
            printf(""%d "", current->result.indexes[i]);
        }
        printf(""\n"");
        current = current->next;
    }
}

int main() {
//    printf(""Hello, World!\n"");
    int arr[ROWS][COLS] = {{0, 2, 0, 2, 0},
                           {0, 1, 1, 1, 0},
                           {2, 0, 2, 1, 1},
                           {0, 2, 0, 1, 1}};
//    fill_matrix(arr);
    print_matrix(arr);
    find_g(arr);
    return 0;
}
"
VDtu2Jfm,Untitled,irmantas_radavicius,C++,Tuesday 7th of May 2024 11:14:59 AM CDT,"#include <iostream>
#include <fstream>


using namespace std;

struct Irasas {
    string kas, kam;
    int kiek;
};
struct Duomenys {
    Irasas irasai[2500];
    int kiek;
};

Duomenys gautiDuomenis(){
    Duomenys duom;
    duom.kiek = 0;
    ifstream in(""Eurovizija.csv"");
    while(!in.fail()){
        string eilute;
        getline(in, eilute);
        if(eilute.size() > 0){
            Irasas irasas;
            int pirma = eilute.find(';');
            int antra = eilute.rfind(';');
            irasas.kas = eilute.substr(0, pirma);
            irasas.kam = eilute.substr(pirma+1, antra-pirma-1);
            irasas.kiek = stoi(eilute.substr(antra+1));
            //cout << irasas.kas << "" "" << irasas.kam << "" "" << irasas.kiek << endl;
            duom.irasai[duom.kiek] = irasas;
            duom.kiek++;
        }
    }
    in.close();
    return duom;
}
void spausdinti(Duomenys duom){
    ofstream out(""Rezultatai.txt"");
    out << ""Pradinis sąrašas:"" << endl;
    for(int i = 0; i < duom.kiek; ++i){
        out << duom.irasai[i].kas << "" "" << duom.irasai[i].kam << "" "" << duom.irasai[i].kiek << endl;
    }
    out << endl;
    out.close();
}
void surikiuoti(Duomenys &duom){
    for(int ii = 0; ii < duom.kiek; ++ii){
        for(int i = 0; i < duom.kiek-1; ++i){
            if(duom.irasai[i].kas > duom.irasai[i+1].kas){
                swap(duom.irasai[i], duom.irasai[i+1]);
            } else if(duom.irasai[i].kas == duom.irasai[i+1].kas){
                if(duom.irasai[i].kiek < duom.irasai[i+1].kiek){
                    swap(duom.irasai[i], duom.irasai[i+1]);
                }
            }
        }
    }
}
void pateiktiSaliuSarasa(Duomenys &duom){
    duom = gautiDuomenis();
    surikiuoti(duom);
    spausdinti(duom);
}

Duomenys gautiBalus(Duomenys duom){
    Duomenys balai;
    balai.kiek = 0;
    for(int i = 0; i < duom.kiek; ++i){
        int arRadom = 0;
        for(int ii = 0; ii < balai.kiek; ++ii){
            if(balai.irasai[ii].kas == duom.irasai[i].kam){
                balai.irasai[ii].kiek += duom.irasai[i].kiek;
                arRadom = 1;
                break;
            }
        }
        if(arRadom == 0){
            balai.irasai[balai.kiek].kas = duom.irasai[i].kam;
            balai.irasai[balai.kiek].kiek = duom.irasai[i].kiek;
            balai.kiek++;
        }
    }
    return balai;
}
void spausdintiBalus(Duomenys balai){
    ofstream out(""Rezultatai.txt"", ostream::app);
    out << ""Šalių gauti taškai:"" << endl;
    for(int i = 0; i < balai.kiek; ++i){
        out << balai.irasai[i].kas << "" "" << balai.irasai[i].kiek << endl;
    }
    out << endl;
    out.close();
}
void pateiktiSaliuBalus(Duomenys duom){
    Duomenys balai = gautiBalus(duom);
    surikiuoti(balai);
    spausdintiBalus(balai);
}

Duomenys gautiGeriausius(Duomenys duom){
    Duomenys geriausi;
    geriausi.kiek = 0;
    for(int i = 0; i < duom.kiek; ++i){
        if(duom.irasai[i].kiek == 12){
            int arRadom = 0;
            for(int ii = 0; ii < geriausi.kiek; ++ii){
                if(geriausi.irasai[ii].kas == duom.irasai[i].kam){
                    geriausi.irasai[ii].kiek++;
                    arRadom = 1;
                    break;
                }
            }
            if(arRadom == 0){
                geriausi.irasai[geriausi.kiek].kas = duom.irasai[i].kam;
                geriausi.irasai[geriausi.kiek].kiek = 1;
                geriausi.kiek++;
            }
        }
    }
    return geriausi;
}
void spausdintiGeriausius(Duomenys geriausi){
    ofstream out(""Rezultatai.txt"", ostream::app);
    int maksimumas = 0;
    for(int i = 0; i < geriausi.kiek; ++i){
        if(maksimumas < geriausi.irasai[i].kiek)
            maksimumas = geriausi.irasai[i].kiek;
    }
    out << ""Daugiausiai "" << maksimumas << "" kartų(-us) vienai šaliai buvo skirta 12 balų"" << endl;
    out << ""Šios šalys yra:"";
    for(int i = 0; i < geriausi.kiek; ++i){
        if(geriausi.irasai[i].kiek == maksimumas){
            out << "" "" << geriausi.irasai[i].kas;
        }
    }
    out.close();
}
void pateiktiGeriausius(Duomenys duom){
    Duomenys geriausi = gautiGeriausius(duom);
    surikiuoti(geriausi);
    spausdintiGeriausius(geriausi);
}


int main(){

    Duomenys duom;
    pateiktiSaliuSarasa(duom);
    pateiktiSaliuBalus(duom);
    pateiktiGeriausius(duom);

    return 0;
}
"
CPm3KfRb,asdasdasd,Sashaiolh,Lua,Tuesday 7th of May 2024 11:01:26 AM CDT,"local robot = require(""robot"")
local component = require(""component"")
local i_c = component.inventory_controller
local sides = require(""sides"")
local term = require(""term"")
 
term.clear()
 
print(""made by Sol"")
 
function dropRES()
local i = 1
robot.turnLeft()
for i=1, 16 do
robot.select(i)
i_c.dropIntoSlot(sides.front, i )
end
robot.turnRight()
robot.select(1)
end
 
function takeRES()
robot.turnAround()
local inv, item = i_c.getInventorySize(sides.front)
for slot = 1, inv do
item = i_c.getStackInSlot(sides.front, slot)
if item then
i_c.suckFromSlot(sides.front, slot)
break
end
end
robot.turnAround()
end
 
function workRES()
robot.select(1)
local items_count = robot.count(1)
for i=1, items_count do
robot.place()
robot.swing()
end
end
 
while true do
takeRES()
workRES()
dropRES()
term.clear()
print("""")
print("""")
print("""")
print("""")
print(""               made by Sol"")
print("""")
print("""")
print(""        Нажми Ctrl+Alt+C чтобы закрыть программу"")
os.sleep(1)
term.clear()
print("""")
print("""")
print("""")
print("""")
print(""               made by Sol                     "")
print("""")
print("""")
print(""           я работаю....отъебись"")
end"
aHdEJ4t4,expert Singularity turret grenadier armored,DuyOnline101,Lua,Tuesday 7th of May 2024 10:31:43 AM CDT,"[{""difficulty"":""Expert"",""Type"":""DifficultyVoteCast""},{""Type"":""DifficultyVoteReady""},{""Type"":""PlaceTower"",""vector"":""378.3702392578125, -127.27825164794922, -62.496700286865234"",""number4"":0,""unitName"":""Grenadier"",""firstNumber"":3443.905322461},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":2},{""Type"":""ChangeQueryType"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""390.53765869140625, -126.95722961425781, -67.6656265258789"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3484.3859339590005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""393.1824035644531, -126.95648956298828, -74.30280303955078"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3584.370024139},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""398.4342041015625, -127.00090026855469, -68.16239166259766"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3629.4851242040006},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""401.7732238769531, -127.00090026855469, -74.35380554199219"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3655.123898833},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""405.5920715332031, -127.00090026855469, -67.70563507080078"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3676.5116882790005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""408.85797119140625, -127.12206268310547, -74.1725845336914"",""number4"":0,""unitName"":""Armored Factory"",""firstNumber"":3698.083794986},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":4,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":5,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":6,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":7,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":2,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":3,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""353.1399841308594, -126.93492889404297, -59.49751281738281"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3869.7909940970005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""353.0455017089844, -126.93400573730469, -65.93903350830078"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3879.582763787},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""359.5770263671875, -126.93508911132812, -59.94518280029297"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3893.059032726},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""359.6094970703125, -126.93116760253906, -66.4760971069336"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3916.0782562100005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":2},{""firstNumber"":10,""Type"":""SellTower""},{""Type"":""PlaceTower"",""vector"":""359.70068359375, -126.93112182617188, -66.43406677246094"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3932.8123225890005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""359.2264404296875, -126.9319076538086, -72.84090423583984"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3944.701160902},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":11,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""341.8136291503906, -127.27825164794922, -69.39228820800781"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3954.545056584},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":12,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""366.05523681640625, -126.93885040283203, -59.575775146484375"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":3967.8904856940005},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""PlaceTower"",""vector"":""374.9286193847656, -126.94202423095703, -73.66870880126953"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":4000.183366354},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":14,""secondNumber"":2},{""Type"":""PlaceTower"",""vector"":""381.37921142578125, -126.94690704345703, -74.62380981445312"",""number4"":0,""unitName"":""XWM Turret"",""firstNumber"":4012.6478033770006},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":15,""secondNumber"":2},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":13,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":9,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":1,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":10,""secondNumber"":1},{""Type"":""TowerUpgradeRequest"",""firstNumber"":8,""secondNumber"":1}]"
xebzHNXh,"СПРИНТ № 7 | Односвязный список | Урок 5: Сравнение, копирование и присваивание",chevengur,C++,Tuesday 7th of May 2024 10:09:54 AM CDT,"#include <cassert>
#include <cstddef>
#include <string>
#include <utility>
#include <iostream>
#include <vector>
#include <algorithm>

template <typename Type>
class SingleLinkedList {
	// Узел списка
	struct Node {
		Node() = default;
		Node(const Type& val, Node* next)
			: value(val)
			, next_node(next) {
		}
		Type value;
		Node* next_node = nullptr;
	};


    template <typename ValueType>
    class BasicIterator {
        // Класс списка объявляется дружественным, чтобы из методов списка
        // был доступ к приватной области итератора
        friend class SingleLinkedList;

        // Конвертирующий конструктор итератора из указателя на узел списка
        explicit BasicIterator(Node* node): node_(node) {
        }

    public:
        // Объявленные ниже типы сообщают стандартной библиотеке о свойствах этого итератора

        // Категория итератора — forward iterator
        // (итератор, который поддерживает операции инкремента и многократное разыменование)
        using iterator_category = std::forward_iterator_tag;
        // Тип элементов, по которым перемещается итератор
        using value_type = Type;
        // Тип, используемый для хранения смещения между итераторами
        using difference_type = std::ptrdiff_t;
        // Тип указателя на итерируемое значение
        using pointer = ValueType*;
        // Тип ссылки на итерируемое значение
        using reference = ValueType&;

        BasicIterator() = default;

        BasicIterator(const BasicIterator<Type>& other) noexcept {
            node_ = other.node_;
        }

        BasicIterator& operator=(const BasicIterator& rhs) = default;

        [[nodiscard]] bool operator==(const BasicIterator<const Type>& rhs) const noexcept {
            return node_ == rhs.node_;
        }

        [[nodiscard]] bool operator!=(const BasicIterator<const Type>& rhs) const noexcept {
            return !(node_ == rhs.node_);

        }

        [[nodiscard]] bool operator==(const BasicIterator<Type>& rhs) const noexcept {
            return node_ == rhs.node_;
        }

        [[nodiscard]] bool operator!=(const BasicIterator<Type>& rhs) const noexcept {
            return !(node_ == rhs.node_);
        }

        BasicIterator& operator++() noexcept {
            node_ = node_->next_node;
            return *this;
        }

        BasicIterator operator++(int) noexcept {
            auto old_value(*this);
            ++(*this);
            return old_value;
        }

        [[nodiscard]] reference operator*() const noexcept {
            return node_->value;
        }

        [[nodiscard]] pointer operator->() const noexcept {
            return &node_->value;
        }

    private:
        Node* node_ = nullptr;
    };

public:

    using value_type = Type;
    using reference = value_type&;
    using const_reference = const value_type&;

	SingleLinkedList() : head_(), size_(0) {};

	~SingleLinkedList() { Clear(); };

    template<typename iterator>
    void Initialization(iterator begin, iterator end)
    {
        Node* newnode = &head_;
        for (auto i = begin; i != end; ++i)
        {
            ++size_;
            newnode->next_node = new Node(*i, nullptr);
            newnode = newnode->next_node;
        }
    }

    SingleLinkedList(std::initializer_list<Type> values)
    {
        SingleLinkedList currentlist;
        currentlist.Initialization(values.begin(), values.end());
        swap(currentlist);
    }

    SingleLinkedList(const SingleLinkedList& other)
    {
        SingleLinkedList currentlist;
        currentlist.Initialization(other.begin(), other.end());
        swap(currentlist);
    }

    SingleLinkedList& operator=(const SingleLinkedList& rhs) {
        if (this != &rhs)
        {
            SingleLinkedList currentlist(rhs);
            swap(currentlist);
        }
        return *this;    
    }

    // Обменивает содержимое списков за время O(1)
    void swap(SingleLinkedList& other) noexcept {
        std::swap(head_.next_node, other.head_.next_node);
        std::swap(size_, other.size_);
    }

	void PushFront(const Type& value) {
		head_.next_node = new Node(value, head_.next_node);
		++size_;
	}

	void Clear() noexcept {
		while (head_.next_node)
		{
			Node* new_node = head_.next_node->next_node;
			delete head_.next_node;
			head_.next_node = new_node;
		}
		size_ = 0;
	}

	[[nodiscard]] size_t GetSize() const noexcept {
		return size_;
	}

	[[nodiscard]] bool IsEmpty() const noexcept {
		return (size_ == 0) ? true : false;
	}

    // Итератор, допускающий изменение элементов списка
    using Iterator = BasicIterator<Type>;
    // Константный итератор, предоставляющий доступ для чтения к элементам списка
    using ConstIterator = BasicIterator<const Type>;

    [[nodiscard]] Iterator begin() noexcept {
        return Iterator{ head_.next_node };
    }

    [[nodiscard]] Iterator end() noexcept {
        return Iterator{ nullptr };
    }

    [[nodiscard]] ConstIterator begin() const noexcept {
        return ConstIterator{ head_.next_node };
    }

    [[nodiscard]] ConstIterator end() const noexcept {
        return ConstIterator{ nullptr };
    }

    [[nodiscard]] ConstIterator cbegin() const noexcept {
        return ConstIterator{ head_.next_node };
    }

    [[nodiscard]] ConstIterator cend() const noexcept {
        return ConstIterator{ nullptr };
    }

private:
	Node head_;
	size_t size_;
};

template <typename Type>
void swap(SingleLinkedList<Type>& lhs, SingleLinkedList<Type>& rhs) noexcept {
    lhs.swap(rhs);
}

template <typename Type>
bool operator==(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return std::equal(lhs.begin(), lhs.end(), rhs.begin(), rhs.end());
}

template <typename Type>
bool operator!=(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return !(lhs == rhs);
}

template <typename Type>
bool operator<(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return std::lexicographical_compare(lhs.begin(), lhs.end(), rhs.begin(), rhs.end());
}

template <typename Type>
bool operator<=(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return (lhs < rhs) || (lhs == rhs);
}

template <typename Type>
bool operator>(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return !(lhs < rhs);
}

template <typename Type>
bool operator>=(const SingleLinkedList<Type>& lhs, const SingleLinkedList<Type>& rhs) {
    return (lhs > rhs) || (lhs == rhs);
}

// Эта функция проверяет работу класса SingleLinkedList
void Test3() {
    // Проверка списков на равенство и неравенство
    {
        SingleLinkedList<int> list_1;
        list_1.PushFront(1);
        list_1.PushFront(2);

        SingleLinkedList<int> list_2;
        list_2.PushFront(1);
        list_2.PushFront(2);
        list_2.PushFront(3);

        SingleLinkedList<int> list_1_copy;
        list_1_copy.PushFront(1);
        list_1_copy.PushFront(2);

        SingleLinkedList<int> empty_list;
        SingleLinkedList<int> another_empty_list;

        // Список равен самому себе
        assert(list_1 == list_1);
        assert(empty_list == empty_list);

        // Списки с одинаковым содержимым равны, а с разным - не равны
        assert(list_1 == list_1_copy);
        assert(list_1 != list_2);
        assert(list_2 != list_1);
        assert(empty_list == another_empty_list);
    }

    // Обмен содержимого списков
    {
        SingleLinkedList<int> first;
        first.PushFront(1);
        first.PushFront(2);

        SingleLinkedList<int> second;
        second.PushFront(10);
        second.PushFront(11);
        second.PushFront(15);

        const auto old_first_begin = first.begin();
        const auto old_second_begin = second.begin();
        const auto old_first_size = first.GetSize();
        const auto old_second_size = second.GetSize();

        first.swap(second);

        assert(second.begin() == old_first_begin);
        assert(first.begin() == old_second_begin);
        assert(second.GetSize() == old_first_size);
        assert(first.GetSize() == old_second_size);

        // Обмен при помощи функции swap
        {
            using std::swap;

            // В отсутствие пользовательской перегрузки будет вызвана функция std::swap, которая
            // выполнит обмен через создание временной копии
            swap(first, second);

            // Убеждаемся, что используется не std::swap, а пользовательская перегрузка

            // Если бы обмен был выполнен с созданием временной копии,
            // то итератор first.begin() не будет равен ранее сохранённому значению,
            // так как копия будет хранить свои узлы по иным адресам
            assert(first.begin() == old_first_begin);
            assert(second.begin() == old_second_begin);
            assert(first.GetSize() == old_first_size);
            assert(second.GetSize() == old_second_size);
        }
    }

    // Инициализация списка при помощи std::initializer_list
    {
        SingleLinkedList<int> list{ 1, 2, 3, 4, 5 };
        assert(list.GetSize() == 5);
        assert(!list.IsEmpty());
        assert(std::equal(list.begin(), list.end(), std::begin({ 1, 2, 3, 4, 5 })));
    }

    // Лексикографическое сравнение списков
    {
        using IntList = SingleLinkedList<int>;

        assert((IntList{ 1, 2, 3 } < IntList{ 1, 2, 3, 1 }));
        assert((IntList{ 1, 2, 3 } <= IntList{ 1, 2, 3 }));
        assert((IntList{ 1, 2, 4 } > IntList{ 1, 2, 3 }));
        assert((IntList{ 1, 2, 3 } >= IntList{ 1, 2, 3 }));
    }

    // Копирование списков
    {
        const SingleLinkedList<int> empty_list{};
        // Копирование пустого списка
        {
            auto list_copy(empty_list);
            assert(list_copy.IsEmpty());
        }

        SingleLinkedList<int> non_empty_list{ 1, 2, 3, 4 };
        // Копирование непустого списка
        {
            auto list_copy(non_empty_list);

            assert(non_empty_list.begin() != list_copy.begin());
            assert(list_copy == non_empty_list);
        }
    }

    // Присваивание списков
    {
        const SingleLinkedList<int> source_list{ 1, 2, 3, 4 };

        SingleLinkedList<int> receiver{ 5, 4, 3, 2, 1 };
        receiver = source_list;
        assert(receiver.begin() != source_list.begin());
        assert(receiver == source_list);
    }

    // Вспомогательный класс, бросающий исключение после создания N-копии
    struct ThrowOnCopy {
        ThrowOnCopy() = default;
        explicit ThrowOnCopy(int& copy_counter) noexcept
            : countdown_ptr(&copy_counter) {
        }
        ThrowOnCopy(const ThrowOnCopy& other)
            : countdown_ptr(other.countdown_ptr)  //
        {
            if (countdown_ptr) {
                if (*countdown_ptr == 0) {
                    throw std::bad_alloc();
                }
                else {
                    --(*countdown_ptr);
                }
            }
        }
        // Присваивание элементов этого типа не требуется
        ThrowOnCopy& operator=(const ThrowOnCopy& rhs) = delete;
        // Адрес счётчика обратного отсчёта. Если не равен nullptr, то уменьшается при каждом копировании.
        // Как только обнулится, конструктор копирования выбросит исключение
        int* countdown_ptr = nullptr;
    };

    // Безопасное присваивание списков
    {
        SingleLinkedList<ThrowOnCopy> src_list;
        src_list.PushFront(ThrowOnCopy{});
        src_list.PushFront(ThrowOnCopy{});
        auto thrower = src_list.begin();
        src_list.PushFront(ThrowOnCopy{});

        int copy_counter = 0;  // при первом же копировании будет выброшего исключение
        thrower->countdown_ptr = &copy_counter;

        SingleLinkedList<ThrowOnCopy> dst_list;
        dst_list.PushFront(ThrowOnCopy{});
        int dst_counter = 10;
        dst_list.begin()->countdown_ptr = &dst_counter;
        dst_list.PushFront(ThrowOnCopy{});

        try {
            dst_list = src_list;
            // Ожидается исключение при присваивании
            assert(false);
        }
        catch (const std::bad_alloc&) {
            // Проверяем, что состояние списка-приёмника не изменилось
            // при выбрасывании исключений
            assert(dst_list.GetSize() == 2);
            auto it = dst_list.begin();
            assert(it != dst_list.end());
            assert(it->countdown_ptr == nullptr);
            ++it;
            assert(it != dst_list.end());
            assert(it->countdown_ptr == &dst_counter);
            assert(dst_counter == 10);
        }
        catch (...) {
            // Других типов исключений не ожидается
            assert(false);
        }
    }
}

int main() {
    Test3();
}"
GhZcJUPc,Events Calendar - Don't display Calendar Buttons on Single Event,Web_General,CSS,Tuesday 7th of May 2024 09:51:41 AM CDT,".single-tribe_events .tribe-events-c-subscribe-dropdown__container, .tribe-events .tribe-events-c-subscribe-dropdown__container {
	display: none;
}"
B15S0Y3Q,Events Calendar - Don't display 'Add to Calendar' Button,Web_General,CSS,Tuesday 7th of May 2024 09:45:38 AM CDT,".single-tribe_events .tribe-events-c-subscribe-dropdown .tribe-events-c-subscribe-dropdown__button, .tribe-events .tribe-events-c-subscribe-dropdown .tribe-events-c-subscribe-dropdown__button
.single-tribe_events .tribe-events-c-subscribe-dropdown .tribe-events-c-subscribe-dropdown__button, .tribe-events .tribe-events-c-subscribe-dropdown .tribe-events-c-subscribe-dropdown__button {
display: none;
}"
1xhUn21D,great print ascii boards,max2201111,Python,Tuesday 7th of May 2024 09:44:46 AM CDT,"import chess
import time

def ten_moves_rule(board):
    history = list(board.move_stack)
    if len(history) < 10:
        return False
    for move in history[-10:]:
        if board.is_capture(move) or board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 4
    elif board.is_insufficient_material():
        return 3
    elif ten_moves_rule(board):
        return 2
    return 1

def minimax(board, depth, alpha, beta, maximizing_player, move_sequence, memo):
    if depth == 0 or board.is_game_over():
        return None, evaluate_board(board, depth), move_sequence

    best_move = None
    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        board.push(move)
        current_sequence = move_sequence + [move]
        _, eval, seq = minimax(board, depth - 1, alpha, beta, not maximizing_player, current_sequence, memo)
        board.pop()

        if (maximizing_player and eval > best_eval) or (not maximizing_player and eval < best_eval):
            best_eval = eval
            best_move = move
            best_sequence = seq

        if maximizing_player:
            alpha = max(alpha, eval)
        else:
            beta = min(beta, eval)

        if beta <= alpha:
            break

    return best_move, best_eval, best_sequence + [best_move] if best_move else best_sequence

def print_board_sequence(start_fen, move_sequence):
    board = chess.Board(start_fen)
    print(""Počáteční stav:"")
    print(board, ""\nFEN:"", board.fen(), ""\n"")

    for move in move_sequence:
        if move and move in board.legal_moves:  # Kontrola, zda je tah legální
            san = board.san(move)  # Získání SAN tahu
            board.push(move)  # Provedení tahu na šachovnici
            print(""\nDalší tah:"", san)
            print(board, ""\nFEN:"", board.fen(), ""\n"")
        else:
     #       print(""Nelegální nebo neexistující tah: {}"", format(move))
            break  # Přerušení smyčky v případě nelegálního tahu

# Spouštěcí kód

# Výpočet a tisk tahů
#start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w


# Initialization
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)
memo = {}

# Run minimax
_, _, sequence = minimax(board, 3, float('-inf'), float('inf'), True, [], memo)
print_board_sequence(start_fen, sequence[::-1])  # Print the sequence from the initial position"
JbzWRhBv,MainchanBriefBot,usrxprd,Python,Tuesday 7th of May 2024 09:42:35 AM CDT,"# MainchanBriefBot - A Discord bot that briefs you about what is going on with Mainchan.
# XXX WARNING: This is a prototype; do not use. XXX
# version 0.1.0

import os
import discord
import requests
from dotenv import load_dotenv
from bs4 import BeautifulSoup

def scrapeFirstPost(url):

	# This function returns data from the first post in the given url.

	page = requests.get(url)
	soup = BeautifulSoup(page.content, ""html.parser"")

	submissions = soup.find_all(""div"", class_=""submission-content-container"")

	title_elem = submissions[0].find(""span"", class_=""submission-title"")
	title_text = title_elem.text.strip('\n')
	title_link = title_elem.find('a')['href']

	comments_elem = submissions[0].find(""li"", class_=""submission-comments"")
	comments_link = comments_elem.find('a')['href']

	return {""title"": title_text, ""link"": title_link, ""comments"": comments_link}

load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')

intents = discord.Intents.all()

client = discord.Client(intents=intents)

# execute only once when connected
@client.event
async def on_ready():
	print(f""{client.user} has connected to Discord"")

# execute whenever there is a new message
@client.event
async def on_message(message):

	# dont do anything if the message was sent by the bot itself
	if message.author == client.user:
		return

	if message.content == ""whatsup with mainchan"" and message.channel.name == ""test"":

		firsthot = scrapeFirstPost(""https://mainchan.com/all?sortBy=hotness"")
		firstnew = scrapeFirstPost(""https://mainchan.com/all?sortBy=new"")

		# TODO: make sure it is safe to send this text over discord.
		await message.channel.send(f""**hottest post**\ntitle: {firsthot['title']}\ncomments: {firsthot['comments']}\n\n**newest post**\ntitle: {firstnew['title']}\ncomments: {firstnew['comments']}"")

client.run(TOKEN)"
2GCRr4nc,Multi-Function MButton Hotkey For Caret & Cursor Control (discontinued).ahk,Lorenzo501,Autohotkey,Tuesday 7th of May 2024 09:41:23 AM CDT,"#Requires AutoHotkey 2.0
#Include <UIA> ; Download and unzip archive in ""Lib"" folder: https://github.com/Descolada/UIA-v2/blob/main/Lib/UIA.ahk

; TODO: make cursor auto-hide for notepad, Visual Studio & VS Code
; THIS MIGHT BE WAY BETTER (TO ADDRESS THE ISSUES MENTIONED BELOW), MAKING THE CURSOR AUTO-HIDE BY DEFAULT WHILE ONE OF THE 3 APPS ARE ACTIVE AND THEN HAVING LONG-PRESS TO TEMPORARILY DISABLE THE CURSOR AUTO-HIDE (AND IT CAN REENABLE IT AFTERWARDS, BUT REACTIVATING THE WINDOW WILL REENABLE IT AUTOMATICALLY). COULD PERHAPS ALSO CHECK IF THE EDIT CONTROL IS FOCUSED (MAYBE EVEN BY USING `editControlElement.GetRuntimeId()` ALTHOUGH COULD ALSO JUST MAKE IT WORK FOR ALL EDIT CONTROLS BY USING THE CLASSNAME OR SOMETHING), IF IT ISN'T THEN TEMPORARILY SHOW THE CURSOR (INSTEAD OF IT BEING DEPENDANT ON THE WINDOW BEING ACTIVE)

; USE THIS IN NOTEPAD ONLY
;MButton::WinActivate(""ahk_class Progman"")

; USE THIS IN VS CODE ONLY
;MButton::Send(""{Alt}"")

; USE THIS IN VISUAL STUDIO ONLY (THIS IS THE OLD VERSION, I GOT A BETTER VERSION AS WELL)
; TODO: take temporary screenshot, show screenshot in GUI, (maybe activate VS if it doesn't work w/o doing so), make VS invisible, use workaround below, make VS visible & remove GUI
MButton::
{
    static toggle := false

    if (toggle := !toggle)
    {
        A_CoordModeMouse := ""Screen""
        A_KeyDelay := -1
        A_MouseDelay := -1
        MouseGetPos(&previousCursorX, &previousCursorY)
        visualStudioElement := UIA.ElementFromHandle(""Microsoft Visual Studio ahk_exe devenv.exe"")
        thumbOld := visualStudioElement.WaitElement({Type: ""Thumb""})
        thumbOldPos := thumbOld.GetPos(""Screen"")
        ControlSend(zeroWidthSpace := ""​"") ; This will unintentionally overwrite the redo actions of the current session
        Send(""{Ctrl down}"")
        ControlSend(""z{Home}"", thumbOld.ControlId) ; This will undo the caret marker (its pos remains usable by Ctrl+Shift+Backspace) & moves caret to top
        Send(""{Ctrl up}"")
        thumbNew := visualStudioElement.WaitElement({Type: ""Thumb""})
        thumbNewPos := thumbNew.GetPos(""Screen"")
        ;UIA.GetFocusedElement().ControlClick(""WD"", 1, ""NA"") ; Scrolling like this is more precise if it scrolls one line at a time, which it doesn't but Ctrl+DownArrow does^^
        MouseClickDrag(""L"", thumbNewPos.x + 1, thumbNewPos.y + 1, thumbOldPos.x, thumbOldPos.y, 0) ; Drag the moveable part of the scrollbar to the previous pos
        MouseMove(previousCursorX, previousCursorY, 0)
    }
    else
        Send(""^+{Backspace}"") ; Moves caret back to the previous pos (where the caret marker had been temporarily placed to make this possible)
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; DOESN'T WORK
F1::WinSetTransparent(0, ""Microsoft Visual Studio ahk_exe devenv.exe"")
F2::WinSetTransparent(""Off"", ""Microsoft Visual Studio ahk_exe devenv.exe"")
F3::MsgBox(WinExist(""Microsoft Visual Studio ahk_exe devenv.exe""))

/*
[Could also just overwrite the native middle-btn-press scroll hotkey when visual studio is active, b/c nobody uses that scroll feature in visual studio I think]
Maybe nice for the cursor/caret AHK script to toggle it and which will cause the caret's position to be saved and the caret removed until another toggle places it back where it was, and the toggle hotkey will cause the cursor to hide automatically after some time (repeatedly ofc), temporarily showing the cursor again when the cursor moves. And ~*LButton:: will disable it if it was enabled (if I don't want to click then I can just toggle it w/ middle-click but clicking takes care off toggling only the cursor back for you and it can put the caret somewhere depending on where you clicked, so if you didn't click on text then the caret won't appear ofcourse). That works for multiple scenarios and is useful, keep cursor auto-hide enabled until EITHER foreground change OR CLICK HAS HAPPENED. On middle-click it has to skip the first cursor auto-hide delay. 750ms long-press if I merely want the caret gone but preventing the cursor from hiding. So quick-press is a toggle that can even toggle back after double-press/long-press (is convenient), and both double-press and long-press are toggles as well but toggling back with them is only necessary when you want to keep the other one hidden when both were hidden

Recommend in the hotkey remote tooltip and script comment that you shouldn't use Quick-Press to disable two active hide modes at once and then reenabling one of them straight after, because you can simply toggle the one you don't want with either Double-Press or Long-Press directly. I can technically save the startTime in Quick-Press and checking if very little time has elapsed since it was set when Double-Press/Long-Press is used, to warn the user in a traytip. Might be worth considering when everything else works but is probably not needed, since it's quite obvious

[Can try to document this somewhat, such as ""quick-press toggles ANY mode back that's currently in effect"" and gotta program it properly]:

If you use quick-press by mistake, then quick-press again to undo it or double-press to disable cursor auto-hide while keeping the caret hidden, or if you instead wanted to see the caret but not the cursor then long-press to toggle only the caret back while keeping the cursor hidden

[Yes this is possible but it might be better if
|
double-(quick-)press would merely toggle the cursor auto-hide which then works for multiple scenarios, which is useful; like it can even toggle the cursor back when both the caret and cursor were hidden (by having performed either a quick-press or both double-press and long-press),
|
but if you use double-(quick-)press first and then (single-)quick-press, it should merely disable the cursor auto-hide and not hide the caret (SO IT'S RECOMMENDED TO DO THIS INSTEAD OF DOUBLE-PRESS TWICE), to make it easier to use.
|
However if you use long-press first and then double-(quick-)press it should just cause the cursor to auto-hide on top of the caret already being hidden]
If you use long-press by mistake, then quick-press will disable it again or double-press instead to hide the cursor on top of the already hidden caret,
|
or if you instead only wanted to hide the cursor then quick-press once to disable it and then double-press (THERE MIGHT BE AN ISSUE IF IT THINKS DOUBLE-PRESS OCCURRED FIRST OR THE THIRD PRESS BEING IGNORED, SO I'M PRETTY SURE IT NEEDS TO DETECT A TRIPLE-PRESS FOR THIS AS WELL, THEN EITHER THE USER DELAYS THE DOUBLE-CLICK AND IT WILL WORK OR THE USER PRESSES 3 TIMES AND IT WILL WORK, IF THE USER DELAYS THE THIRD PRESS THEN IT'S THEIR OWN FAULT, WHICH MOST LIKELY WON'T HAPPEN! AND IF IT DOES THEN IT'S NEGLIGIBLE AND CAN BE EASILY CORRECTED ANYWAY. THEY WOULD SIMPLY EXPECT THE CARET TO BE VISIBLE AND THE CURSOR TO BE GONE BUT BOTH WOULD BE VISIBLE, SO THEN THEY JUST DO ONE MORE QUICK-PRESS. EASY).

If you use long-press to hide the caret and then quick-press, it will show the caret and SHOULDN'T affect the cursor
If you use double-press by mistake, then quick-press will disable it again or long-press to hide the caret on top of the already hidden cursor, or if you instead only wanted to hide the caret then quick-press once to disable it and then long-press (gotta make sure that these two actions don't get detected as a double-press)

Make the double-press and long-press toggle back like described above but also show a traytip if not both were hidden when toggling a specific one back, explaining to the user; title: ""Only One Hide Mode Was Active"" content: ""Quick-Press Disables It Conveniently!""
*/

/*
resetting caret+cursor on left-click (on selection change event is probably overkill, if both caret and cursor get hidden & then the cursor gets shown b/c of left-click but caret didn't..)

remember: `using MButton > clicking another Edit control [> CAN STILL RESET PREV CARET IF REFOCUS PREV EDIT CONTROL HERE] > using MButton again` will overwrite the previous selection

maybe I can check on left-click if the same element is still focused, in which case it shouldn't reset the selection (and if I make the caret + cursor script, then maybe something similar). not the focus change event b/c it won't trigger when different text gets selected
*/

/*
clicking the scrollbar or any non-Edit element (after the MButton hide fn) could be the reason for it not going to work the way it's supposed to

Ik skip voor nu de cursor, ik denk dat de resultaat anders niet echt chill zal zijn om te gebruiken. Dat je 2x moet klikken of lang ingedrukt houden, om dus iets er nog bij te verbergen als je bijvoorbeeld ergens klikt en de cursor weer zichtbaar blijft en je dan dus de cursor opnieuw moet verbergen.. Zelfs als long-press nogal kort is en dus onzichtbaar word tijdens het ingedrukt houden. Is vast beter om gwn de cursor zelf naar rechts te bewegen, ook al komt die dan op een tweede scherm terecht ooit. Je hebt ook VSCode en Notepad waar het dan ws weer anders moet werken enzo. Ander keer misschien proberen
*/

; https://superuser.com/questions/1270165/how-to-remove-the-blinking-caret-and-temporarily-hide-my-cursor-with-a-single-ho

;on WinAPI about caret
;HideCaret        ; DOESN'T SEEM TO WORK
;ShowCaret        ; USELESS B/C THE ONE ABOVE DIDN'T WORK
;CreateCaret
;SetCaretPos

; THESE PROBABLY DO NOT WORK IN MICROSOFT VISUAL STUDIO DUE TO HAVING A SPECIAL EDIT CTRL (`GetCaretPos` BELOW PROBABLY DOES WORK THO)
;EditGetCurrentCol	Returns the column number in an Edit control where the caret (text insertion point) resides
;EditGetCurrentLine	Returns the line number in an Edit control where the caret (text insert point) resides

/**
 * Gets the position of the caret with UIA, Acc or CaretGetPos.
 * Credit: plankoe (https://www.reddit.com/r/AutoHotkey/comments/ysuawq/get_the_caret_location_in_any_program/)
 * @param X Value is set to the screen X-coordinate of the caret
 * @param Y Value is set to the screen Y-coordinate of the caret
 * @param W Value is set to the width of the caret
 * @param H Value is set to the height of the caret
 */
GetCaretPos(&X?, &Y?, &W?, &H?) {
	/*
		This implementation prefers CaretGetPos > Acc > UIA. This is mostly due to speed differences
		between the methods and statistically it seems more likely that the UIA method is required the
		least (Chromium apps support Acc as well).
	*/
    ; Default caret
    savedCaret := A_CoordModeCaret
    CoordMode ""Caret"", ""Screen""
    CaretGetPos(&X, &Y)
    CoordMode ""Caret"", savedCaret
	if IsInteger(X) && (X | Y) != 0 {
		W := 4, H := 20
		return
	}

    ; Acc caret
    static _ := DllCall(""LoadLibrary"", ""Str"",""oleacc"", ""Ptr"")
    try {
        idObject := 0xFFFFFFF8 ; OBJID_CARET
        if DllCall(""oleacc\AccessibleObjectFromWindow"", ""ptr"", WinExist(""A""), ""uint"",idObject &= 0xFFFFFFFF
            , ""ptr"",-16 + NumPut(""int64"", idObject == 0xFFFFFFF0 ? 0x46000000000000C0 : 0x719B3800AA000C81, NumPut(""int64"", idObject == 0xFFFFFFF0 ? 0x0000000000020400 : 0x11CF3C3D618736E0, IID := Buffer(16)))
            , ""ptr*"", oAcc := ComValue(9,0)) = 0 {
            x:=Buffer(4), y:=Buffer(4), w:=Buffer(4), h:=Buffer(4)
            oAcc.accLocation(ComValue(0x4003, x.ptr, 1), ComValue(0x4003, y.ptr, 1), ComValue(0x4003, w.ptr, 1), ComValue(0x4003, h.ptr, 1), 0)
            X:=NumGet(x,0,""int""), Y:=NumGet(y,0,""int""), W:=NumGet(w,0,""int""), H:=NumGet(h,0,""int"")
            if (X | Y) != 0
                return
        }
    }

    ; UIA caret
    static IUIA := ComObject(""{e22ad333-b25f-460c-83d0-0581107395c9}"", ""{34723aff-0c9d-49d0-9896-7ab52df8cd8a}"")
    try {
        ComCall(8, IUIA, ""ptr*"", &FocusedEl:=0) ; GetFocusedElement
		/*
			The current implementation uses only TextPattern GetSelections and not TextPattern2 GetCaretRange.
			This is because TextPattern2 is less often supported, or sometimes reports being implemented
			but in reality is not. The only downside to using GetSelections is that when text
			is selected then caret position is ambiguous. Nevertheless, in those cases it most
			likely doesn't matter much whether the caret is in the beginning or end of the selection.

			If GetCaretRange is needed then the following code implements that:
			ComCall(16, FocusedEl, ""int"", 10024, ""ptr*"", &patternObject:=0), ObjRelease(FocusedEl) ; GetCurrentPattern. TextPattern2 = 10024
			if patternObject {
				ComCall(10, patternObject, ""int*"", &IsActive:=1, ""ptr*"", &caretRange:=0), ObjRelease(patternObject) ; GetCaretRange
				ComCall(10, caretRange, ""ptr*"", &boundingRects:=0), ObjRelease(caretRange) ; GetBoundingRectangles
				if (Rect := ComValue(0x2005, boundingRects)).MaxIndex() = 3 { ; VT_ARRAY | VT_R8
					X:=Round(Rect[0]), Y:=Round(Rect[1]), W:=Round(Rect[2]), H:=Round(Rect[3])
					return
				}
			}
		*/
        ComCall(16, FocusedEl, ""int"", 10014, ""ptr*"", &patternObject:=0), ObjRelease(FocusedEl) ; GetCurrentPattern. TextPattern = 10014
        if patternObject {
            ComCall(5, patternObject, ""ptr*"", &selectionRanges:=0), ObjRelease(patternObject) ; GetSelections
			ComCall(4, selectionRanges, ""int"", 0, ""ptr*"", &selectionRange:=0) ; GetElement
            ComCall(10, selectionRange, ""ptr*"", &boundingRects:=0), ObjRelease(selectionRange), ObjRelease(selectionRanges) ; GetBoundingRectangles
            if (Rect := ComValue(0x2005, boundingRects)).MaxIndex() = 3 { ; VT_ARRAY | VT_R8
                X:=Round(Rect[0]), Y:=Round(Rect[1]), W:=Round(Rect[2]), H:=Round(Rect[3])
                return
            }
        }
    }
}

OnExit (*) => SystemCursor(""Show"")  ; Ensure the cursor is made visible when the script exits.

#c::SystemCursor(""Toggle"")  ; Win+C hotkey to toggle the cursor on and off.

SystemCursor(cmd) ; cmd = ""Show|Hide|Toggle|Reload""
{
    static visible := true, c := Map()
    static sys_cursors := [32512, 32513, 32514, 32515, 32516, 32642, 32643, 32644, 32645, 32646, 32648, 32649, 32650]

    if (cmd = ""Reload"" || !c.Count) ; Reload when requested or at first call
    {
        for (i, id in sys_cursors)
        {
            h_cursor  := DllCall(""LoadCursor"", ""Ptr"", 0, ""Ptr"", id)
            h_default := DllCall(""CopyImage"", ""Ptr"", h_cursor, ""UInt"", 2, ""Int"", 0, ""Int"", 0, ""UInt"", 0)
            h_blank   := DllCall(""CreateCursor"", ""Ptr"", 0, ""Int"", 0, ""Int"", 0, ""Int"", 32, ""Int"", 32, ""Ptr"", Buffer(32 * 4, 0xFF), ""Ptr"", Buffer(32 * 4, 0))
            c[id] := {Default: h_default, Blank: h_blank}
        }
    }

    switch (cmd)
    {
        case ""Show"": visible := true
        case ""Hide"": visible := false
        case ""Toggle"": visible := !visible
        default: return
    }

    for (id, handles in c)
    {
        h_cursor := DllCall(""CopyImage"", ""Ptr"", visible ? handles.Default : handles.Blank, ""UInt"", 2, ""Int"", 0, ""Int"", 0, ""UInt"", 0)
        DllCall(""SetSystemCursor"", ""Ptr"", h_cursor, ""UInt"", id)
    }
}"
fFhcmUxV,Untitled,irmantas_radavicius,C++,Tuesday 7th of May 2024 09:34:47 AM CDT,"#include <iostream>
#include <fstream>
#include <vector>
#include <cctype>
#include <string>
#include <sstream>

using namespace std;

struct Spalva {
     int r, g, b;
};

struct Staciakampis {
    int x, y;       // kairysis virsutinis kampas
    int dx, dy;     // ilgis plotis
    Spalva s;       // spalva
};

struct Piesinys {
    Spalva laukeliai[100][100];
    int dx, dy;
    Piesinys(){
        dx = 0;
        dy = 0;
        for(int i = 0; i < 100; ++i){
            for(int j = 0; j < 100; ++j){
                laukeliai[i][j].r = 255;
                laukeliai[i][j].g = 255;
                laukeliai[i][j].b = 255;
            }
        }
    }

};

Staciakampis gauti(string tekstas){
    Staciakampis st;
    stringstream ss;
    ss << tekstas;
    ss >> st.x >> st.y;
    ss >> st.dx >> st.dy;
    ss >> st.s.r >> st.s.g >> st.s.b;
    return st;
}
void spausdinti(Staciakampis st){
    //cout << st.x << "","" << st.y << "" "";
    //cout << st.dx << "","" << st.dy << "" "";
    //cout << st.s.r << "","" << st.s.g << "","" << st.s.b << endl;
}

void spausdinti(Piesinys p){
    ofstream out(""U2.rez.txt"");
    out << p.dy+1 << "" "" << p.dx+1 << endl;
    for(int j = 0; j <= p.dy; ++j){
        for(int i = 0; i <= p.dx; ++i){
            out << p.laukeliai[i][j].r << "" "";
            out << p.laukeliai[i][j].g << "" "";
            out << p.laukeliai[i][j].b << endl;
        }
    }
    out.close();
}

void uzdeti(Piesinys &p, Staciakampis s){
    for(int j = s.y; j < s.y+s.dy; ++j){
        for(int i = s.x; i < s.x+s.dx; ++i){
            if(i > p.dx)
                p.dx = i;
            if(j > p.dy)
                p.dy = j;
            //cout << i << "" "" << j << "" "" << p.dx << "" "" << p.dy << endl;
            p.laukeliai[i][j] = s.s;
        }
    }
}

int main(){

    ifstream in(""U2.txt"");
    //if(!in.is_open()){
        //cout << ""Nepavyko atidaryti failo"" << endl;
        //return 0;
    //}

    // nuskaitom dydi
    int eil;
    in >> eil;
    //cout << ""Eiluciu "" << eil << endl;
    string str;
    getline(in, str);

    // nuskaitom eilutes
    vector<Staciakampis> v;
    for(int i = 0; i < eil; ++i){
        getline(in, str);
        v.push_back(gauti(str));
    }

    Piesinys p;
    for(int i = 0; i < eil; ++i){
        //spausdinti(v[i]);
        uzdeti(p, v[i]);
    }

    spausdinti(p);

    //cout << endl << endl;
    //cout << ""Pabaiga!"" << endl;
    in.close();

    return 0;
}
"
2Brys35S,metafuck.py (autopep8),matrus,Python,Tuesday 7th of May 2024 09:32:23 AM CDT,"import sys
import string
import math
from getch import getch


def bf(prog: str):
    tape = [0 for _ in range(30000)]
    pointer = 0
    i = 0
    while 1:
        if i >= len(prog):
            break
        char = prog[i]
        if char == '>':
            pointer = (pointer + 1) % len(tape)
        elif char == '<':
            pointer = (pointer - 1) % len(tape)
        elif char == '+':
            tape[pointer] = (tape[pointer] + 1) % 256
        elif char == '-':
            tape[pointer] -= (tape[pointer] - 1) % 256
        elif char == '.':
            print(chr(tape[pointer]), end='')
        elif char == ',':
            tape[pointer] = ord(getch())
        elif char == '[':
            if tape[pointer] == 0:
                brackets = 1
                while (brackets > 0):
                    i += 1
                    if i >= len(prog):
                        break
                    if prog[i] == '[':
                        brackets += 1
                    elif prog[i] == ']':
                        brackets -= 1
        elif char == ']':
            if tape[pointer] != 0:
                brackets = 1
                while (brackets > 0):
                    i -= 1
                    if i < 0:
                        break
                    if prog[i] == ']':
                        brackets += 1
                    elif prog[i] == '[':
                        brackets -= 1
        i += 1


def base2number(digits: list[int], base: int) -> int:
    return sum(digit * base ** i for i, digit in enumerate(digits[::-1]))


def number2base(number: int, base: int) -> list[int]:
    result = []
    while number > 0:
        result.append(number % base)
        number //= base
    return result[::-1]


def string2base(string: str, characters: str) -> list[int]:
    return number2base(sum(characters.index(character) * len(characters) ** i for i, character in enumerate(string[::-1])), len(characters))


def string2number(string: str, characters: str) -> int:
    return base2number(string2base(string, characters), len(characters))


def number2lsys(number: int, characters: str) -> dict[str, str]:
    binary = bin(number)[2:]
    repeats = math.ceil(len(binary) / len(characters) ** 2)
    binary = binary.rjust(len(characters) ** 2 * repeats, '0')
    print(binary)
    rules = {}
    j = 0
    for character in characters:
        rules[character] = ''
        for _ in range(repeats):
            for k in range(len(characters)):
                if binary[j] == '1':
                    rules[character] += characters[k]
                j += 1
    return rules


charset = string.ascii_letters + string.digits + string.punctuation + ' \t\n'
encset = string.printable

sys.set_int_max_str_digits(0)
dimension = ' '.join(sys.argv[1:])
with open(dimension, 'r') as f:
    dimension = f.read()
n = string2number(dimension, encset)
rules = number2lsys(n, charset)
prog = []
while (1):
    try:
        prog.append(input())
    except EOFError:
        break
axiom = '\n'.join(prog)
result = ''
for character in axiom:
    result += rules[character]
bf(result)
"
UneAjphP,very good best moves with ASCII boards,max2201111,Python,Tuesday 7th of May 2024 09:29:16 AM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

def evaluate_board(board, depth):
    """"""Evaluate the board state for minimax decision-making.""""""
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 4
    elif board.is_insufficient_material():
        return 3
    elif ten_moves_rule(board):
        return 2
    return 1  # Default heuristic if none of the above conditions are met

def minimax(board, depth, alpha, beta, maximizing_player, depth2, depths, position_count, memo, start_time, last_print_time):
    """"""Minimax algorithm with alpha-beta pruning.""""""
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = (None, eval)
        return None, eval

    best_move = None
    if maximizing_player:
        max_eval = float('-inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, False, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval > max_eval:
                max_eval = eval
                best_move = move
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, max_eval)
        return best_move, max_eval
    else:
        min_eval = float('inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, True, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval < min_eval:
                min_eval = eval
                best_move = move
            beta = min(beta, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, min_eval)
        return best_move, min_eval

# Initialization and main execution logic
start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

start_fen = ""7k/8/3Q4/5K2/8/8/8/8 w - - 0 1""

board = chess.Board(start_fen)

# Tisk počáteční šachovnice a jejího FEN
print(""Počáteční šachovnice:"")
print(board)
print(""Počáteční FEN:"", board.fen(), ""\n"")



sequence = []
depths = []
position_count = [0]
memo = {}
start_time = time.time()
last_print_time = [start_time]  # Initialize last print time

move_sequence = []
best_move, best_score = minimax(board, 3, float('-inf'), float('inf'), True, 0, depths, position_count, memo, start_time, last_print_time)
while best_move:
    move_sequence.append(best_move)
    board.push(best_move)
    print(board, ""\nFEN:"", board.fen(), ""\n"")  # Printing each board state with FEN
    if board.is_game_over():
        break
    best_move, _ = minimax(board, 5, float('-inf'), float('inf'), board.turn, 0, depths, position_count, memo, start_time, last_print_time)
"
jvAqJp0z,read this bot dumbarse hacker snowybot rocks,coinwalk,JavaScript,Tuesday 7th of May 2024 09:03:18 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/100).toFixed(8));
var betnext = betbse;
var tens = (betbse*10);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var setasseven = 0;
var chickendinner = (olderest*4);
var belance = olderest;
var original = olderest;
var smokey = olderest;
var upper = 6.9;
var downer = 2.9;
var goodoldbal = ((Math.floor(olderest/tens))*tens);
var smokey = ((Math.floor(olderest/tens))*tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(goodoldbal+(betnext*upper))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}    
if (belance>smokey){
    smokey = parseFloat(belance);
}
if (belance<(goodoldbal-(betnext*downer))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}
if ((betnext>=(belance/3))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    smokey = parseFloat(belance);
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=(belance/5))&&(belance>=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    smokey = parseFloat(belance);
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=original)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    smokey = parseFloat(belance);
    goodoldbal = ((Math.floor(belance/tens))*tens);
} 
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((betnext*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
PjAzZbqf,Untitled,Alx09,C,Tuesday 7th of May 2024 09:01:12 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef enum { RON, EUR, GBP } Currency;
typedef enum { user, admin } UserType;


typedef struct account { // definire sublista
	struct account* urm; //  inlantuire
	Currency currency;
	float sold;
	char iban[20];// elemente lista
}account;

typedef struct User { // definire lista
	struct User* urm; // prima inlantuire
	struct account* headAccount; // radacina pentru conturi
	struct account* tailAccount; // ultima adresa a sublistei conturi
	char username[20], cnp[13], pass[20];// elemente lista
	UserType userType;
}User;

struct User* UserLogged = NULL;

const char* TypeUserToString(UserType userType) {
	switch (userType)
	{
	case user: return ""user""; break;
	case admin: return ""admin""; break;
	default: return ""nedefinit"";
	break;
	}
}
enum UserType stringToUserType(const char* userType) {
	if (strcmp(""user"", userType) == 0) return user;
	if (strcmp(""admin"", userType) == 0) return admin;
	return user;
}

const char* currencyToString(Currency currency) {
	switch (currency)
	{
	case RON: return ""RON""; break;
	case EUR: return ""EUR""; break;
	case GBP: return ""GBP""; break;
	default: return ""nedefinit"";
		break;
	}
}
enum Currency stringToCurrency(const char* currency) {
	if (strcmp(""RON"", currency) == 0) return RON;
	if (strcmp(""EUR"", currency) == 0) return EUR;
	if (strcmp(""GBP"", currency) == 0) return GBP;
	return RON;
}

struct account* SearchAccount(struct account* head, const char *iban) {
	struct account* q = head;
	while (q) {
		if (strcmp(q->iban, iban) == 0) return q;
		q = q->urm;
	}
	return NULL;
}
struct User* AddToEndAccount(struct User* user, struct account* p) {
	if (user->headAccount == NULL) {
		user->headAccount = p;
		user->tailAccount = p;
	}
	else {
		user->tailAccount->urm = p;
		user->tailAccount = p;
	}
	return user;
}
void RemoveAllAccounts(struct account* head) {
	struct account* aux;
	while (head) {
		aux = head;
		head = head->urm;
		free(aux);
	}

}
void ShowAccounts(struct account* headAccount) {
	struct account* q = headAccount;
	printf(""--------------------------------------\n"");
	while (q) {
		printf(""Iban = %s moneda =  %s\n"", q->iban, currencyToString(q->currency));
		q = q->urm;
	}
	printf(""--------------------------------------\n"");
}

struct User* SearchUserByUsername(struct User* head, const char* username) {
	struct User* q = head;
	while (q) {
		if (strcmp(q->username, username) == 0) return q;
		q = q->urm;
	}
	return NULL;
}

struct User* SearchUserByCNP(struct User* head, const char* cnp) {
	struct User* q = head;
	while (q) {
		if (strcmp(q->cnp, cnp) == 0) return q;
		q = q->urm;
	}
	return NULL;
}
struct User* AddSortedUser(struct User* head, struct User* p) {// functia de adaugare sortata
	struct User* q = head;// User folosit pentru parcurgea listei
	if (head == NULL) // (!head) verificam daca sunt elemente in lista
	{
		head = p;// daca nu sunt capul listel devine noul element
	}
	else if (strcmp(head->username, p->username) > 0) { // verificam daca elementul adaugat trebuie adaugat in capul listei
		p->urm = head; //elementul aduaugat va avea in pareta dreapta lista existenta
		head = p; // noul element va devieni capatul(radidacian listi)
		return head;
	}
	else {
		while (q->urm != NULL && strcmp(q->urm->username, p->username) < 0) { // parcurgem lista ca sa gasim pozitia de inserare
			q = q->urm;// parcurgere lista
		}
		p->urm = q->urm;// elementu nou va avea in dreapta ce avea poztia la care s-a gasit inserarea
		q->urm = p;
	}
	return head;
}
struct User* RemoveUser(struct User* head, char username[]) { //sterge User
	struct User* aux = NULL, * q = NULL;// Userul aux este pentreu retinire tempara User sters, q este folosit pentru parcurgere
	if (head == NULL) {// verificam daca capul este null altfel return null ca si adresa
		return NULL;
	}
	else if (strcmp(head->username, username) == 0) {// verificam daca este capul listei Userul sters
		aux = head;// salvam temporar Userul
		head = head->urm;// capul devine umaatorul element
		RemoveAllAccounts(aux->headAccount);
		free(aux);// returnam adresa Userul pe care vrem sa-l stergem in caz ce se vrea prelucat ceva dupa
		return head;
	}
	else {
		q = head;// daca nu e la inceput parcurgem lista
		while (q->urm != NULL && strcmp(q->urm->username, username) != 0) {// ca la adaugarea sorata cautam pozita anterioara Userul pe care vrem sa-l stergem
			q = q->urm;// parcurgem lista
		}
		if (q->urm == NULL) {// daca s-a ajuns la sfarsitul listei si nu s-a gasit
			return;// returnam null deoarece Userul nu se afla in lista
		}
		else {
			aux = q->urm;// altfel salvam Userul urmator(Userul ce trebuie stres)
			q->urm = q->urm->urm;// Userul anterior va pointa catre Userul din dtreapa celui sters
			RemoveAllAccounts(aux->headAccount);
			free(aux);// returnam Userul pe care vrem sa-l stergem
		}
		return head;
	}
}
void ShowUsers(struct User* head) {// toat functiile le am implementat sa primeasca head deaorece e mai ok asa
	struct User* p = head;// ne punem pe capul listei

	while (p != NULL) {// cat timp nu s-a ajuns la sfarsitul fiserului
		printf(""username = %s\nCNP = %s\n"", p->username, p->cnp);// afisam datele despre utilziator
		ShowAccounts(p->headAccount);
		p = p->urm;// parcurgem lista
	}
}
void LoginUser(struct User* head) {
	char username[20], pass[20];
	struct User* user;
	printf(""\nusername: ""); scanf_s(""%s"", username, sizeof(username));
	printf(""\npassword: ""); scanf_s(""%s"", pass,sizeof(pass));
	user = SearchUserByUsername(head, username);
	if (user) {
		if (strcmp(user->pass, pass) == 0) {
			UserLogged = user;
		}
		else {
			printf(""\nParola este gresita"");
		}
	}
	else
	{
		printf(""\nUtilizatorul nu a fost gasit"");
	}
}

void MeniuUser(struct User* head) {
	int opt;
	do {
		printf(""\n0. Dezautentificare"");
		printf(""\nOptiunea aleasa: ""); scanf_s(""%d"", &opt);
		switch (opt)
		{
		case 0:
			UserLogged = NULL;
		default:
			break;
		}
	} while (opt);
}

void MeniuAdmin(struct User* head) {
	int opt;
	do {
		printf(""\n0. Dezautentificare"");
		printf(""\nOptiunea aleasa: ""); scanf_s(""%d"", &opt);
		switch (opt)
		{
		case 0:
			UserLogged = NULL;
		default:
			break;
		}
	} while (opt);
}

struct User* ReadUsersFromFile(const char* filePath) {
	struct User* p, * q = NULL;// Userul nou adaugat
	struct User* head = NULL;// capul listei de utilizatori
	FILE* f = NULL;
	char userTpe[20];
	fopen_s(&f, filePath, ""r"");
	if (f == NULL) {
		printf(""Fiserul de utilizatori nu a putut fi deschis"");
		return NULL;
	}
	while (!feof(f))
	{
		p = (struct User*)malloc(sizeof(struct User));
		fscanf_s(f, ""%s"", p->username, sizeof(p->username)); // fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		fscanf_s(f, ""%s"", p->pass, sizeof(p->pass)); // fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		fscanf_s(f, ""%s"", userTpe, sizeof(userTpe)); // fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		p->userType = stringToUserType(userTpe);
		fscanf_s(f, ""%s%*c"", p->cnp, sizeof(p->cnp)); // %*c se foloseste pentru a citi \n de la sfarst de rand si face discard
		p->urm = NULL;
		p->headAccount = NULL;
		p->tailAccount = NULL;
		q = SearchUserByCNP(head, p->cnp);
		if (q || feof(f) || SearchUserByUsername(head, p->username)) {
			free(p);
		}
		else {
			head = AddSortedUser(head, p);
		}
	}
	fclose(f);
	return head;
}
void ReadAccountsFromFile(struct User* head, const char* filePath) {
	struct User* q = NULL;
	
	struct account* aux = NULL, * temp = NULL;
	char cnp[13], currency[13];
	FILE* f = NULL;
	

	fopen_s(&f, filePath, ""r"");

	while (!feof(f))
	{
		aux = (struct account*)malloc(sizeof(struct account));
		fscanf_s(f, ""%s"", cnp, sizeof(cnp));// fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		fscanf_s(f, ""%s"", aux->iban, sizeof(aux->iban));// fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		fscanf_s(f, ""%s"", currency, sizeof(currency));// fscanf_s pentru siruri si caractere necesita si numarul de elemente maxim citit
		fscanf_s(f, ""%g%*c"", &aux->sold);// %*c se foloseste pentru a citi \n de la sfarsit de rand si face discard
		aux->currency = stringToCurrency(currency);
		aux->urm = NULL;
		q = SearchUserByCNP(head, cnp);
		if (!q) {
			free(aux);
			printf(""Nu s-a gasit utilizatorul cu cnp %s\n"", cnp);
			continue;
		}
		else {
			temp = SearchAccount(q->headAccount, aux->iban);
			if (temp) {
				printf(""Contul cu IBAN %s exista deja\n"", aux->iban);
				free(aux);
			}
			else {
				AddToEndAccount(q, aux);
			}
		}
	}

}

int main()
{
	struct User* head = NULL;// capul listei de utilizatori
	head = ReadUsersFromFile(""users.txt"");
	ReadAccountsFromFile(head, ""accounts.txt"");
	int opt;
	do {
		printf(""\n0. Iesire"");
		printf(""\n1. Autenitifcare"");
		printf(""\nOptiunea aleasa: ""); scanf_s(""%d"", &opt);
		if (opt == 1) {
			LoginUser(head);
			if (UserLogged) {
				if (UserLogged->userType == user) MeniuUser(head);
				else MeniuAdmin(head);
			}
		}


	} while (opt);
	ShowUsers(head);

}"
M4PGVSA8,Untitled,ElliotDG,Python,Tuesday 7th of May 2024 08:54:35 AM CDT,"from kivy.app import App
from kivy.lang import Builder
from kivy.uix.widget import Widget
from kivy.graphics import Color, Rectangle
from kivy.clock import Clock
from kivy.utils import get_random_color

from random import randint

kv = """"""
FloatLayout:
    Label:
        text: 'Falling Boxes'
    FallingBoxes:
        id: fb
""""""


class FallingBoxes(Widget):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.boxes = []
        Clock.schedule_interval(self.update_boxes, 1 / 60)

    def create_box(self):
        with self.canvas:
            Color(rgba=get_random_color())
            box = Rectangle(size=(20, 20), pos=(randint(0, 600), 800))
        self.boxes.append(box)

    def update_boxes(self, dt):
        for box in self.boxes:
            box.pos = box.pos[0] + randint(1, 10), box.pos[1] - randint(1,20)
            if box.pos[1] < -10:
                box.pos = (randint(0, 600), 800)


class FallingBoxesApp(App):
    def build(self):
        return Builder.load_string(kv)

    def on_start(self):
        for i in range(1000):
            self.root.ids.fb.create_box()


FallingBoxesApp().run()"
Y00sfW3Z,Quant 3.0 Movement,Apparcane,C++,Tuesday 7th of May 2024 08:44:15 AM CDT,"static int LeftSpeed = 5;
static int RightSpeed = 10;
static int LeftDir = 6;
static int RightDir = 9;

static int LowSpeed = 100;
static int MediumSpeed = 150;
static int HighSpeed = 200;


void Backward() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, HIGH);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, HIGH);
}

void Forward() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, LOW);
}

void Stop() {
  //  Left Wheel
  analogWrite(LeftSpeed, 0);
  //  Right Wheel
  analogWrite(RightSpeed, 0);
}

void Right() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, HIGH);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, LOW);
}

void Left() {
  //  Left Wheel
  analogWrite(LeftSpeed, MediumSpeed);
  digitalWrite(LeftDir, LOW);
  //  Right Wheel
  analogWrite(RightSpeed, MediumSpeed);
  digitalWrite(RightDir, HIGH);
}

void setup() {
  pinMode(LeftSpeed, OUTPUT);
  pinMode(LeftDir, OUTPUT);
  pinMode(RightDir, OUTPUT);
  pinMode(RightSpeed, OUTPUT);
}

void loop() {
  Forward();
  delay(500);
  Backward();
  delay(500);
}"
hKnQAvMV,Untitled,_KAGATUN_,C#,Tuesday 7th of May 2024 08:39:19 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;

namespace UnificationTroops
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<Soldier> soldiersFirst = new List<Soldier>
            {
                new Soldier (""Иванов"", ""Иван"", ""Иванович""),
                new Soldier (""Петров"", ""Николай"", ""Владимирович""),
                new Soldier (""Сергеев"", ""Илья"", ""Петрович""),
                new Soldier (""Соколовский"", ""Иван"", ""Константинович""),
                new Soldier (""Абрамов"", ""Александр"", ""Валентинович""),
                new Soldier (""Березов"", ""Александр"", ""Сергеевич""),
                new Soldier (""Баженов"", ""Дмитрий"", ""Дмитриевич""),
                new Soldier (""Корешков"", ""Валерий"", ""Степанович""),
                new Soldier (""Чечеков"", ""Артем"", ""Александрович""),
                new Soldier (""Крикунов"", ""Михаил"", ""Евгеньевич""),
                new Soldier (""Зайцев"", ""Арсений"", ""Антонович""),
                new Soldier (""Бобров"", ""Артемий"", ""Валерьевич""),
                new Soldier (""Юров"", ""Игнат"", ""Семенович""),
                new Soldier (""Зайцев"", ""Николай"", ""Константинович""),
                new Soldier (""Бабкин"", ""Юрий"", ""Антонович""),
                new Soldier (""Кот"", ""Станислав"", ""Игоревич""),
                new Soldier (""Зайцев"", ""Александр"", ""Юрьевич""),
                new Soldier (""Воробьев"", ""Николай"", ""Антонович""),
                new Soldier (""Смирнов"", ""Юрий"", ""Алексеевич""),
                new Soldier (""Уткин"", ""Андрей"", ""Иванович""),
                new Soldier (""Лебедев"", ""Юрий"", ""Иванович""),
            };

            List<Soldier> soldiersSecond = new List<Soldier>
            {
                new Soldier(""Березов"", ""Иван"", ""Иванович""),
                new Soldier(""Братов"", ""Николай"", ""Владимирович""),
                new Soldier(""Бережной"", ""Илья"", ""Степанович""),
                new Soldier(""Богомолов"", ""Иван"", ""Константинович""),
                new Soldier(""Брежнев"", ""Александр"", ""Валентинович""),
                new Soldier(""Беглов"", ""Илья"", ""Петрович"")
            };

            Platoon platoonFirst = new Platoon(soldiersFirst);
            platoonFirst.ShowPlatoon(""\nДо изменений первый отряд\n"");

            Platoon platoonSecond = new Platoon(soldiersSecond);
            platoonSecond.ShowPlatoon(""\nДо изменений второй отряд\n"");

            List<Soldier> soldiers = platoonFirst.GetSoldiers();

            platoonSecond.CombinePlatoons(soldiers);

            platoonFirst.ShowPlatoon(""\nПосле изменений первый отряд\n"");

            platoonSecond.ShowPlatoon(""\nПосле изменений второй отряд\n"");
        }
    }

    class Soldier
    {
        public Soldier(string surname, string name, string patronymic)
        {
            Surname = surname;
            Name = name;
            Patronymic = patronymic;
        }

        public string Surname { get; private set; }
        public string Name { get; private set; }
        public string Patronymic { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""Фамилия: {Surname}, Имя: {Name}, Отчество: {Patronymic}"");
        }
    }

    class Platoon
    {
        private List<Soldier> _soldiers = new List<Soldier>();

        public Platoon(List<Soldier> soldiers)
        {
            _soldiers = soldiers;
        }

        public List<Soldier> GetSoldiers()
        {
            string desiredLetter = ""Б"";
            var sortedSoldiers = _soldiers.Where(soldier => soldier.Surname.StartsWith(desiredLetter)).ToList();

            var newSoldiersFirst = _soldiers.Except(sortedSoldiers).ToList();
            _soldiers = newSoldiersFirst;

            return sortedSoldiers;
        }

        public void CombinePlatoons(List<Soldier> soldiers)
        {
           var soldiersNewPlatoonSecond = _soldiers.Union(soldiers).ToList();
            _soldiers = soldiersNewPlatoonSecond;

            soldiers.Clear();
        }

        public void ShowPlatoon(string text)
        {
            Console.WriteLine(text);

            foreach (Soldier soldier in _soldiers)
            {
                soldier.ShowInfo();
            }
        }
    }
}

"
hrr9ckQD,Untitled,_KAGATUN_,C#,Tuesday 7th of May 2024 08:21:43 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;

namespace UnificationTroops
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<Soldier> soldiersFirst = new List<Soldier>
            {
                new Soldier (""Иванов"", ""Иван"", ""Иванович""),
                new Soldier (""Петров"", ""Николай"", ""Владимирович""),
                new Soldier (""Сергеев"", ""Илья"", ""Петрович""),
                new Soldier (""Соколовский"", ""Иван"", ""Константинович""),
                new Soldier (""Абрамов"", ""Александр"", ""Валентинович""),
                new Soldier (""Березов"", ""Александр"", ""Сергеевич""),
                new Soldier (""Баженов"", ""Дмитрий"", ""Дмитриевич""),
                new Soldier (""Корешков"", ""Валерий"", ""Степанович""),
                new Soldier (""Чечеков"", ""Артем"", ""Александрович""),
                new Soldier (""Крикунов"", ""Михаил"", ""Евгеньевич""),
                new Soldier (""Зайцев"", ""Арсений"", ""Антонович""),
                new Soldier (""Бобров"", ""Артемий"", ""Валерьевич""),
                new Soldier (""Юров"", ""Игнат"", ""Семенович""),
                new Soldier (""Зайцев"", ""Николай"", ""Константинович""),
                new Soldier (""Бабкин"", ""Юрий"", ""Антонович""),
                new Soldier (""Кот"", ""Станислав"", ""Игоревич""),
                new Soldier (""Зайцев"", ""Александр"", ""Юрьевич""),
                new Soldier (""Воробьев"", ""Николай"", ""Антонович""),
                new Soldier (""Смирнов"", ""Юрий"", ""Алексеевич""),
                new Soldier (""Уткин"", ""Андрей"", ""Иванович""),
                new Soldier (""Лебедев"", ""Юрий"", ""Иванович""),
            };

            List<Soldier> soldiersSecond = new List<Soldier>
            {
                new Soldier(""Березов"", ""Иван"", ""Иванович""),
                new Soldier(""Братов"", ""Николай"", ""Владимирович""),
                new Soldier(""Бережной"", ""Илья"", ""Степанович""),
                new Soldier(""Богомолов"", ""Иван"", ""Константинович""),
                new Soldier(""Брежнев"", ""Александр"", ""Валентинович""),
                new Soldier(""Беглов"", ""Илья"", ""Петрович"")
            };

            Information informationFirst = new Information(soldiersFirst);
            informationFirst.ShowSoldiers(""\nДо изменений первый отряд\n"");

            Information informationSecond = new Information(soldiersSecond);
            informationSecond.ShowSoldiers(""\nДо изменений второй отряд\n"");

            string letter = ""Б"";
            var sortedSoldiers = soldiersFirst.Where(soldier => soldier.Surname.StartsWith(letter)).ToList();

            var suitableSoldiers = soldiersSecond.Union(sortedSoldiers).ToList();
            soldiersSecond = suitableSoldiers;

            var newSoldiersFirst = soldiersFirst.Except(soldiersSecond).ToList();
            soldiersFirst = newSoldiersFirst;

            informationFirst.UpdateSoldiers(soldiersFirst);

            informationSecond.UpdateSoldiers(soldiersSecond);

            informationFirst.ShowSoldiers(""\nПосле изменений первый отряд\n"");

            informationSecond.ShowSoldiers(""\nПосле изменений второй отряд\n"");
        }
    }

    class Soldier
    {
        public Soldier(string surname, string name, string patronymic)
        {
            Surname = surname;
            Name = name;
            Patronymic = patronymic;
        }

        public string Surname { get; private set; }
        public string Name { get; private set; }
        public string Patronymic { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($""Фамилия: {Surname}, Имя: {Name}, Отчество: {Patronymic}"");
        }
    }

    class Information
    {
        private List<Soldier> _soldiers = new List<Soldier>();

        public Information(List<Soldier> soldiers)
        {
            _soldiers = soldiers;
        }

        public void ShowSoldiers(string text)
        {
            Console.WriteLine(text);

            foreach (Soldier soldier in _soldiers)
            {
                soldier.ShowInfo();
            }
        }

        public void UpdateSoldiers(List<Soldier> newSoldiers)
        {
            _soldiers = newSoldiers;
        }
    }
}

"
tQZPN0kj,json response,viscousguy,JSON,Tuesday 7th of May 2024 08:07:01 AM CDT,"
[
  {
    ""Id"": 1,
    ""FurnitureType"": {
      ""Id"": 1,
      ""Name"": ""Chair"",
      ""Slug"": ""chair"",
      ""Display"": true
    },
    ""RoomType"": {
      ""Id"": 1,
      ""Name"": ""Living Room"",
      ""Slug"": ""living-room"",
      ""Display"": true
    },
    ""Name"": ""Wooden Chair"",
    ""Description"": ""A comfortable wooden chair."",
    ""Dimensions"": ""20x20x30"",
    ""Price"": 49.99,
    ""Contractor"": {
      ""Id"": 1,
      ""Firstname"": ""John"",
      ""Lastname"": ""Doe"",
      ""City"": ""New York"",
      ""State"": ""NY"",
      ""Mobile"": ""1234567890"",
      ""Email"": ""john.doe@example.com"",
      ""Slug"": ""john-doe"",
      ""Pincode"": ""10001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""Slug"": ""wooden-chair"",
    ""Display"": true,
    ""FurnitureColor"": [
      {
        ""Id"": 1,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      },
      {
        ""Id"": 2,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 2,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureMaterial"": [
      {
        ""Id"": 1,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureImage"": [
      {
        ""Id"": 1,
        ""ImagePath"": ""/path/to/image.jpg"",
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ],
    ""contractor"": {
      ""Id"": 1,
      ""Firstname"": ""John"",
      ""Lastname"": ""Doe"",
      ""City"": ""New York"",
      ""State"": ""NY"",
      ""Mobile"": ""1234567890"",
      ""Email"": ""john.doe@example.com"",
      ""Slug"": ""john-doe"",
      ""Pincode"": ""10001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""furniture_type"": {
      ""Id"": 1,
      ""Name"": ""Chair"",
      ""Slug"": ""chair"",
      ""Display"": true
    },
    ""room_type"": {
      ""Id"": 1,
      ""Name"": ""Living Room"",
      ""Slug"": ""living-room"",
      ""Display"": true
    },
    ""furniture_color"": [
      {
        ""Id"": 1,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      },
      {
        ""Id"": 2,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 2,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_material"": [
      {
        ""Id"": 1,
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_image"": [
      {
        ""Id"": 1,
        ""ImagePath"": ""/path/to/image.jpg"",
        ""Furniture"": {
          ""Id"": 1,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ]
  },
  {
    ""Id"": 2,
    ""FurnitureType"": {
      ""Id"": 2,
      ""Name"": ""Table"",
      ""Slug"": ""table"",
      ""Display"": true
    },
    ""RoomType"": {
      ""Id"": 2,
      ""Name"": ""Bedroom"",
      ""Slug"": ""bedroom"",
      ""Display"": true
    },
    ""Name"": ""Metal Table"",
    ""Description"": ""A sturdy metal table."",
    ""Dimensions"": ""30x30x30"",
    ""Price"": 79.99,
    ""Contractor"": {
      ""Id"": 2,
      ""Firstname"": ""Jane"",
      ""Lastname"": ""Smith"",
      ""City"": ""Los Angeles"",
      ""State"": ""CA"",
      ""Mobile"": ""0987654321"",
      ""Email"": ""jane.smith@example.com"",
      ""Slug"": ""jane-smith"",
      ""Pincode"": ""90001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""Slug"": ""metal-table"",
    ""Display"": true,
    ""FurnitureColor"": [
      {
        ""Id"": 3,
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 3,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureMaterial"": [
      {
        ""Id"": 2,
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 2,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureImage"": [
      {
        ""Id"": 2,
        ""ImagePath"": ""/path/to/image5.jpg"",
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ],
    ""contractor"": {
      ""Id"": 2,
      ""Firstname"": ""Jane"",
      ""Lastname"": ""Smith"",
      ""City"": ""Los Angeles"",
      ""State"": ""CA"",
      ""Mobile"": ""0987654321"",
      ""Email"": ""jane.smith@example.com"",
      ""Slug"": ""jane-smith"",
      ""Pincode"": ""90001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""furniture_type"": {
      ""Id"": 2,
      ""Name"": ""Table"",
      ""Slug"": ""table"",
      ""Display"": true
    },
    ""room_type"": {
      ""Id"": 2,
      ""Name"": ""Bedroom"",
      ""Slug"": ""bedroom"",
      ""Display"": true
    },
    ""furniture_color"": [
      {
        ""Id"": 3,
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 3,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_material"": [
      {
        ""Id"": 2,
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 2,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_image"": [
      {
        ""Id"": 2,
        ""ImagePath"": ""/path/to/image5.jpg"",
        ""Furniture"": {
          ""Id"": 2,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ]
  },
  {
    ""Id"": 3,
    ""FurnitureType"": {
      ""Id"": 3,
      ""Name"": ""Sofa"",
      ""Slug"": ""sofa"",
      ""Display"": true
    },
    ""RoomType"": {
      ""Id"": 3,
      ""Name"": ""Kitchen"",
      ""Slug"": ""kitchen"",
      ""Display"": true
    },
    ""Name"": ""Leather Sofa"",
    ""Description"": ""A comfortable leather sofa."",
    ""Dimensions"": ""60x30x40"",
    ""Price"": 299.99,
    ""Contractor"": {
      ""Id"": 3,
      ""Firstname"": ""Bob"",
      ""Lastname"": ""Johnson"",
      ""City"": ""Chicago"",
      ""State"": ""IL"",
      ""Mobile"": ""1122334455"",
      ""Email"": ""bob.johnson@example.com"",
      ""Slug"": ""bob-johnson"",
      ""Pincode"": ""60007"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""Slug"": ""leather-sofa"",
    ""Display"": true,
    ""FurnitureColor"": [
      {
        ""Id"": 4,
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 4,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureMaterial"": [
      {
        ""Id"": 3,
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 3,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureImage"": [
      {
        ""Id"": 3,
        ""ImagePath"": ""/path/to/image6.jpg"",
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ],
    ""contractor"": {
      ""Id"": 3,
      ""Firstname"": ""Bob"",
      ""Lastname"": ""Johnson"",
      ""City"": ""Chicago"",
      ""State"": ""IL"",
      ""Mobile"": ""1122334455"",
      ""Email"": ""bob.johnson@example.com"",
      ""Slug"": ""bob-johnson"",
      ""Pincode"": ""60007"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""furniture_type"": {
      ""Id"": 3,
      ""Name"": ""Sofa"",
      ""Slug"": ""sofa"",
      ""Display"": true
    },
    ""room_type"": {
      ""Id"": 3,
      ""Name"": ""Kitchen"",
      ""Slug"": ""kitchen"",
      ""Display"": true
    },
    ""furniture_color"": [
      {
        ""Id"": 4,
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 4,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_material"": [
      {
        ""Id"": 3,
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 3,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_image"": [
      {
        ""Id"": 3,
        ""ImagePath"": ""/path/to/image6.jpg"",
        ""Furniture"": {
          ""Id"": 3,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ]
  },
  {
    ""Id"": 4,
    ""FurnitureType"": {
      ""Id"": 4,
      ""Name"": ""Bed"",
      ""Slug"": ""bed"",
      ""Display"": true
    },
    ""RoomType"": {
      ""Id"": 4,
      ""Name"": ""Bathroom"",
      ""Slug"": ""bathroom"",
      ""Display"": true
    },
    ""Name"": ""Wooden Desk"",
    ""Description"": ""A large wooden desk."",
    ""Dimensions"": ""50x50x30"",
    ""Price"": 149.99,
    ""Contractor"": {
      ""Id"": 1,
      ""Firstname"": ""John"",
      ""Lastname"": ""Doe"",
      ""City"": ""New York"",
      ""State"": ""NY"",
      ""Mobile"": ""1234567890"",
      ""Email"": ""john.doe@example.com"",
      ""Slug"": ""john-doe"",
      ""Pincode"": ""10001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""Slug"": ""wooden-desk"",
    ""Display"": true,
    ""FurnitureColor"": [
      {
        ""Id"": 5,
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 5,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureMaterial"": [
      {
        ""Id"": 4,
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""FurnitureImage"": [
      {
        ""Id"": 4,
        ""ImagePath"": ""/path/to/image7.jpg"",
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ],
    ""contractor"": {
      ""Id"": 1,
      ""Firstname"": ""John"",
      ""Lastname"": ""Doe"",
      ""City"": ""New York"",
      ""State"": ""NY"",
      ""Mobile"": ""1234567890"",
      ""Email"": ""john.doe@example.com"",
      ""Slug"": ""john-doe"",
      ""Pincode"": ""10001"",
      ""Verified"": true,
      ""Active"": true,
      ""Display"": true
    },
    ""furniture_type"": {
      ""Id"": 4,
      ""Name"": ""Bed"",
      ""Slug"": ""bed"",
      ""Display"": true
    },
    ""room_type"": {
      ""Id"": 4,
      ""Name"": ""Bathroom"",
      ""Slug"": ""bathroom"",
      ""Display"": true
    },
    ""furniture_color"": [
      {
        ""Id"": 5,
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Color"": {
          ""Id"": 5,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_material"": [
      {
        ""Id"": 4,
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        },
        ""Material"": {
          ""Id"": 1,
          ""Name"": """",
          ""Display"": false
        }
      }
    ],
    ""furniture_image"": [
      {
        ""Id"": 4,
        ""ImagePath"": ""/path/to/image7.jpg"",
        ""Furniture"": {
          ""Id"": 4,
          ""FurnitureType"": null,
          ""RoomType"": null,
          ""Name"": """",
          ""Description"": """",
          ""Dimensions"": """",
          ""Price"": 0,
          ""Contractor"": null,
          ""Slug"": """",
          ""Display"": false,
          ""FurnitureColor"": null,
          ""FurnitureMaterial"": null,
          ""FurnitureImage"": null
        }
      }
    ]
  }
]"
579S01hv,snowybot trial,coinwalk,JavaScript,Tuesday 7th of May 2024 08:02:42 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/100).toFixed(8));
var betnext = betbse;
var tens = (betbse*10);
var seventy = (betbse*70);
var twohundreds = (betbse*200);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var setasseven = 0;
var chickendinner = (olderest*4);
var belance = olderest;
var upper = 6.9;
var downer = 2.9;
var goodoldbal = ((Math.floor(olderest/tens))*tens);
var smokey = ((Math.floor(olderest/tens))*tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(goodoldbal+(betnext*upper))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}    
if (belance<(goodoldbal-(betnext*downer))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}
if ((betnext>=(belance/2))&&(belance<=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=(belance/4))&&(belance>=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=original)&&(belance>=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
} 
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((betnext*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
wsYQK6Mj,Odd Even Linked List,jayati,C++,Tuesday 7th of May 2024 08:00:51 AM CDT,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if (head == nullptr || head->next == nullptr) {
            return head; // No need to process if there are 0 or 1 nodes
        }

        ListNode* odd = head;
        ListNode* even = head->next;
        ListNode* evenHead = even; // Keep track of the start of even nodes
        int i = 0;

        while (odd->next != nullptr && even->next != nullptr) {
            if (i % 2 == 0) {
                odd->next = odd->next->next;
                if (odd->next != nullptr) {
                    odd = odd->next;
                }
            } else {
                even->next = even->next->next;
                if (even->next != nullptr) {
                    even = even->next;
                }
            }
            i++;
        }

        odd->next = evenHead; // Connect odd list with even list
        if (even != nullptr) {
            even->next = nullptr; // Terminate the even list
        }

        return head;
    }
};"
yss27CVd,lol,coinwalk,JavaScript,Tuesday 7th of May 2024 07:58:12 AM CDT,"var olderest = parseFloat(document.getElementById('pct_balance').value);
var betbse = Number((olderest/100).toFixed(8));
var betnext = betbse;
var tens = (betbse*10);
var seventy = (betbse*70);
var twohundreds = (betbse*200);
var sevens = (betbse*6.9);
var eights = (betbse*7.9);
var setasseven = 0;
var chickendinner = (olderest*4);
var belance = olderest;
var upper = 6.9;
var downer = 2.9;
var goodoldbal = ((Math.floor(olderest/tens))*tens);
var smokey = ((Math.floor(olderest/tens))*tens);
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olderest).toFixed(8));
console.log(""profit"");
console.log(dog);

if (belance>(goodoldbal+(betnext*upper))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}    
if (belance<(goodoldbal-(betnext*downer))) {
    betnext = betnext*2;
    upper = 4.9;
    downer = 4.9;
    goodoldbal = parseFloat(belance);
}
if ((betnext>=(belance/2))&&(belance<=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=(belance/4))&&(belance>=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
}
if ((betnext>=original)&&(belance>=smokey)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))) {
    betnext = betbse;
    upper = 6.9;
    downer = 2.9;
    goodoldbal = ((Math.floor(belance/tens))*tens);
} 
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((betnext*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
pSKvJd8p,Internal Bank Account,Dio64,SQL,Tuesday 7th of May 2024 07:30:32 AM CDT,"-- https://pastebin.com/pSKvJd8p
--Internal Bank Account Query
SELECT
  hou.name operating_unit
, xep.name legal_entity
, cebb.bank_name
, cebb.bank_number
, cebb.bank_branch_name
, cebb.bank_branch_number
, cebb.bank_branch_type
, — Branch type indicates which list the bank routing number is on.Valid types are ABA
, CHIPS
, SWIFT
, OTHER.                                                                   cbv.address_line1
, — Branch details – Branch Address details below length(cbv.address_line1)address_line1_length
, cbv.address_line2
, cbv.address_line3
, cbv.address_line4
, cbv.city
, — Branch City  cbv.state
, — Branch State cbv.zip
, cbv.country
, ceba.bank_account_name
, ceba.bank_account_num
, cebb.eft_swift_code
, ceba.iban_number
, ceba.currency_code
, ceba.check_digits
, glcc1.concatenated_segments asset_code_combination
, glcc2.concatenated_segments cash_clearing_code_combination
, glcc3.concatenated_segments bank_charges_code_combination
, cebau.ap_use_enable_flag    ap_use_flag
, cebau.ar_use_enable_flag    ar_use_flag
, cebau.xtr_use_enable_flag   treasury_use_flag
, cebau.pay_use_enable_flag   payroll_use_flag
, ceba.zero_amount_allowed
, ceba.multi_currency_allowed_flag
, ac.doc_category_code
FROM
  apps.cefv_bank_branches       cebb
, apps.ce_bank_accounts         ceba
, apps.ce_bank_acct_uses_all    cebau
, apps.ce_banks_v               cbv
, apps.hr_operating_units       hou
, apps.xle_entity_profiles      xep
, apps.gl_code_combinations_kfv glcc1
, apps.gl_code_combinations_kfv glcc2
, apps.gl_code_combinations_kfv glcc3
, apps.ap_checks_all            ac
WHERE
  1                                  = 1
  AND cebb.bank_branch_id            = ceba.bank_branch_id
  AND ceba.bank_account_id           = cebau.bank_account_id
  AND ceba.bank_id                   = cbv.bank_party_id
  AND cebau.org_id                   = hou.organization_id
  AND ceba.account_owner_org_id      = xep.legal_entity_id
  AND ceba.asset_code_combination_id = glcc1.code_combination_id( + )
  AND ceba.cash_clearing_ccid        = glcc2.code_combination_id( + )
  AND ceba.bank_charges_ccid         = glcc3.code_combination_id( + )
  AND ac.ce_bank_acct_use_id(+)      = cebau.bank_acct_use_id
ORDER BY
  1
;

-- Query to find Bank, Bank Account, and Bank Branches information
SELECT
  cba.bank_account_name ""Bank Account Name""
, cba.bank_account_num ""Bank Account Number""
, cba.multi_currency_allowed_flag ""Multi Currency Flag""
, cba.zero_amount_allowed ""Zero Amount Flag""
, cba.account_classification ""Account Classification""
, bb.bank_name ""Bank Name""
, bb.bank_branch_type ""Bank Branch Type""
, bb.bank_branch_name ""Bank Branch Name""
, bb.bank_branch_number ""Bank Branch Number""
, bb.eft_swift_code ""Swift Code""
  -- ,bb.description                   ""Description""
, ou.name ""Operating Unit""
, gcf.concatenated_segments ""GL Code Combination""
FROM
  ce_bank_accounts         cba
, ce_bank_acct_uses_all    bau
, cefv_bank_branches       bb
, hr_operating_units       ou
, gl_code_combinations_kfv gcf
WHERE
  cba.bank_account_id               = bau.bank_account_id
  AND cba.bank_branch_id            = bb.bank_branch_id
  AND ou.organization_id            = bau.org_id
  AND cba.asset_code_combination_id = gcf.code_combination_id
  AND
  (
    cba.end_date IS NULL
    OR cba.end_date    > TRUNC(SYSDATE)
  )
ORDER BY
  TO_NUMBER(cba.bank_account_num)
;

-- Query to list Bank, Bank Branch, Bank Account information Operating Unit wise
SELECT
  cba.bank_account_name
, cba.bank_account_id
, cba.bank_account_name_alt
, cba.bank_account_num
, cba.multi_currency_allowed_flag
, cba.zero_amount_allowed
, cba.account_classification
, bb.bank_name
, cba.bank_id
, bb.bank_number
, bb.bank_branch_type
, bb.bank_branch_name
, cba.bank_branch_id
, bb.bank_branch_number
, bb.eft_swift_code
, bb.description BANK_DESCRIPTION
, cba.currency_code
, bb.address_line1
, bb.city
, bb.county
, bb.state
, bb.zip_code
, bb.country
, ou.name
, gcf.concatenated_segments
, cba.ap_use_allowed_flag
, cba.ar_use_allowed_flag
, cba.xtr_use_allowed_flag
, cba.pay_use_allowed_flag
FROM
  apps.ce_bank_accounts         cba
, apps.ce_bank_acct_uses_all    bau
, apps.cefv_bank_branches       bb
, apps.hr_operating_units       ou
, apps.gl_code_combinations_kfv gcf
WHERE
  cba.bank_account_id               = bau.bank_account_id
  AND cba.bank_branch_id            = bb.bank_branch_id
  AND ou.organization_id            = bau.org_id
  AND cba.asset_code_combination_id = gcf.code_combination_id
  AND
  (
    cba.end_date IS NULL
    OR cba.end_date    > TRUNC(SYSDATE)
  )
ORDER BY
  TO_NUMBER(cba.bank_account_num)
;"
rhfRPSgg,fedora-40-workstation-installer-won't-start,TrapeNoOne,Bash,Tuesday 7th of May 2024 07:21:09 AM CDT,"liveuser@localhost-live:~$ sudo liveinst
Traceback (most recent call last):
  File ""/usr/bin/anaconda-cleanup"", line 82, in <module>
    devicetree.populate(cleanup_only=True)
  File ""/usr/lib/python3.12/site-packages/blivet/threads.py"", line 53, in run_with_lock
    return m(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/blivet/populator/populator.py"", line 446, in populate
    self._populate()
  File ""/usr/lib/python3.12/site-packages/blivet/threads.py"", line 53, in run_with_lock
    return m(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/blivet/populator/populator.py"", line 471, in _populate
    new_devices = udev.get_devices()
                  ^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/blivet/udev.py"", line 105, in get_devices
    dev = device_to_dict(device)
          ^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/blivet/udev.py"", line 77, in device_to_dict
    result = dict(device.properties)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/pyudev/device/_device.py"", line 1101, in __getitem__
    return ensure_unicode_string(value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/pyudev/_util.py"", line 56, in ensure_unicode_string
    value = value.decode(sys.getfilesystemencoding())
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe5 in position 0: unexpected end of data
Starting installer, one moment...
anaconda 40.22.3-1.fc40 for Fedora 40 started.
 * installation log files are stored in /tmp during the installation
 * shell is available on TTY2 and in second TMUX pane (ctrl+b, then press 2)
 * when reporting a bug add logs from /tmp as separate text/plain attachments
Traceback (most recent call last):
  File ""/sbin/anaconda"", line 348, in <module>
    startup_utils.live_startup()
  File ""/usr/lib64/python3.12/site-packages/pyanaconda/startup_utils.py"", line 360, in live_startup
    inhibit_screensaver()
  File ""/usr/lib64/python3.12/site-packages/pyanaconda/screensaver.py"", line 96, in inhibit_screensaver
    inhibit_id = session_proxy.Inhibit(""anaconda"", ""Installing"")
                 ^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/client/proxy.py"", line 161, in __getattr__
    member = self._get_member(self._get_interface(name), name)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/client/proxy.py"", line 211, in _get_interface
    self._handler.specification.members
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/client/handler.py"", line 212, in specification
    self._specification = self._get_specification()
                          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/client/handler.py"", line 332, in _get_specification
    xml = self._call_method(
          ^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/client/handler.py"", line 435, in _call_method
    self._message_bus.connection,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/connection.py"", line 169, in connection
    self._connection = self._get_connection()
                       ^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/connection.py"", line 336, in _get_connection
    return self._provider.get_session_bus_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/usr/lib/python3.12/site-packages/dasbus/connection.py"", line 67, in get_session_bus_connection
    return Gio.bus_get_sync(
           ^^^^^^^^^^^^^^^^^
gi.repository.GLib.GError: g-io-error-quark: Could not connect: No such file or directory (1)
"
J9jyz2jr,Untitled,nlwl,Lua,Tuesday 7th of May 2024 07:11:12 AM CDT,"local a={}local b,c,d,e,f,g,h,i,j,k,l=game:GetService(""UserInputService""),game:GetService(""TeleportService""),game:GetService(""RunService""),game:GetService(""Workspace""),game:GetService(""Lighting""),game:GetService(""Players""),game:GetService(""HttpService""),game:GetService(""StarterGui""),game:GetService(""ReplicatedStorage""),game:GetService(""TweenService""),game:GetService(""Stats"")local m=g.LocalPlayer;local n,o=m:GetMouse(),e.Camera;local p,q,r,s,t,u=table.find,table.clear,string.sub,string.upper,string.lower,table.insert;local v,w,x,y,z,A,B,C,D,E,F=math.huge,math.pi,math.clamp,math.round,math.abs,math.floor,math.random,math.sin,math.cos,math.rad,math.pi/2;local G,H,I=0,25,0;local J,K=coroutine.create,coroutine.resume;local L,M=task.spawn,task.wait;local N,O,P=Vector2.new,Vector3.new,CFrame.new;local Q,R=Color3.fromRGB,Color3.fromHex;local S=Instance.new;do function a:newDrawing(T,U)local V=Drawing.new(T)if U then for W,X in next,U do V[W]=X end end;return V end end;local Y={[""Position""]={100,100},[""Drawings""]={Outline=a:newDrawing(""Square"",{Size=N(300,20),Position=N(1496,100),Color=Color3.fromRGB(0,0,0),Filled=true,Visible=false}),Inline=a:newDrawing(""Square"",{Size=N(1,1),Position=N(1,1),Color=Color3.fromRGB(50,50,50),Filled=true,Visible=false}),Frame=a:newDrawing(""Image"",{Size=N(1,1),Position=N(1,1),Visible=false,Data=game:HttpGet(""https://raw.githubusercontent.com/portallol/luna/main/Gradient.png"")}),Accent=a:newDrawing(""Square"",{Size=N(2,2),Position=N(1,1),Color=Color3.fromRGB(0,111,255),Filled=true,Visible=false})},[""Letters""]={},[""Cheat Name""]=""[nod3d]"",Index=0,tick=tick()}function Y:SetVisible(Z)for W,X in next,Y[""Drawings""]do X.Visible=Z end;for W,X in next,Y[""Letters""]do X.Visible=Z end end;Y[""Text""]=""""..Y[""Cheat Name""].."" | FPS: {fps} | Ping: {ping}""for W=1,#Y[""Text""]+30 do local Text=a:newDrawing(""Text"",{Text=""a"",Size=13,Font=2,Visible=true,Color=Q(255,255,255)})table.insert(Y[""Letters""],Text)end;d.RenderStepped:Connect(function(_)if Y[""Drawings""][""Outline""].Visible==true then Y.Sizing={}if tick()-Y.tick>0.3 then Text=Y[""Text""]:gsub(""{fps}"",A(1/_)):gsub(""{ping}"",A(l.Network.ServerStatsItem[""Data Ping""]:GetValue())):gsub(""{date}"",os.date(""%b. %d, %Y""))Y.tick=tick()end;Y.Index=0;if Text then for a0,Text in Y[""Letters""]do Text.Transparency=0;Text.Position=N(Y[""Position""][1]+Y.Index+4,Y[""Position""][2]+Text.TextBounds.Y/2)Y.Index=Y.Index+Text.TextBounds.X end;for W=1,#Text do local string=Text:sub(W,W)Y[""Letters""][W].Text=string;Y[""Letters""][W].Transparency=1;Y[""Drawings""][""Outline""].Size=N(215+W,26)end end;Y[""Drawings""][""Inline""].Size=N(Y[""Drawings""][""Outline""].Size.X-2,Y[""Drawings""][""Outline""].Size.Y-1)Y[""Drawings""][""Frame""].Size=N(Y[""Drawings""][""Inline""].Size.X-2,Y[""Drawings""][""Inline""].Size.Y-2)Y[""Drawings""][""Accent""].Size=N(Y[""Drawings""][""Frame""].Size.X,1.5)Y[""Drawings""][""Outline""].Position=N(Y[""Position""][1],Y[""Position""][2])Y[""Drawings""][""Inline""].Position=N(Y[""Drawings""][""Outline""].Position.X+1,Y[""Drawings""][""Outline""].Position.Y+1)Y[""Drawings""][""Frame""].Position=N(Y[""Drawings""][""Inline""].Position.X+1,Y[""Drawings""][""Inline""].Position.Y+1)Y[""Drawings""][""Accent""].Position=N(Y[""Drawings""][""Frame""].Position.X,Y[""Drawings""][""Frame""].Position.Y)end end)task.spawn(function()local a1=0;while true do if Y[""Drawings""][""Outline""].Visible==true then a1=a1+1;for W,X in pairs(Y[""Letters""])do if W~=1 and W<13 then X.Color=Color3.fromHSV((a1/59+W/59)%1,1,1)end end end;wait()end end)
return Y"
9aYMRsac,lol,coinwalk,JavaScript,Tuesday 7th of May 2024 06:59:58 AM CDT,"betbse        = (balance/1000)
bethigh       = false
chance        = 49.5
nextbet       = betbse
original      = balance
tens          = (betbse*10)
seventy       = (betbse*70)
twohundreds   = (betbse*50)
sevens        = (betbse*6.9)
eights        = (betbse*7.9)
setasseven    = 0
chickendinner = 144000
balance       = balance
goodoldbal    = ((math.floor(balance/tens))*tens)
upper         = 6.9
downer        = 2.9
belance       = balance
resetstats()
 
function dobet()   
if win then
    belance = belance+previousbet
end
if !win then
    belance = belance-previousbet
end 
if (belance>(goodoldbal+(previousbet*upper))) then
    nextbet    = previousbet*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end    
if (belance<(goodoldbal-(previousbet*downer))) then
    nextbet    = previousbet*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((belance-(nextbet*40))<=(belance/40)) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((original-(nextbet*10))<=(original/10)) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (((original-(nextbet*10))<=(original/10)) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse*2
    upper      = 4.9
    downer     = 4.9
    goodoldbal = belance
end
if (((original-(nextbet*10))<=(original/10)) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet    = betbse
    upper      = 6.9
    downer     = 2.9
    goodoldbal = ((math.floor(belance/tens))*tens)
end
if (nextbet==null) then
    nextbet = previousbet
end 
if (belance<nextbet) then 
    stop()
end
if (balance>=chickendinner) then
print(""winner winner chicken dinner"")
stop()
end
end"
1sNL4UhT,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 06:56:05 AM CDT,"select mw.person_id, p.company_nr, mw.date_day, mw.sum_hrd timesheet_lines_hr, ptd.sum_hrd ptd_lines_hr 
from (select p.person_id,trunc(md.date_day) date_day, sum(mtsl.hrd) sum_hrd from mw_time_sheet_line mtsl, mfc_mobile_worker mmw, mw_day md, person p
where mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
    and mmw.erp_id = p.person_id
    and p.vo_person_category_id = 102503
    and mtsl.validation_status_id = 48
    and mtsl.mw_day_id = md.mw_day_id
    and trunc(md.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by p.person_id, trunc(md.date_day)) mw,
(select ptd.person_id,trunc(ptd.date_day) date_day, sum(ptd.trf_dhr) sum_hrd from pd_trf_day ptd, person p
where ptd.person_id = p.person_id
    and p.vo_person_category_id = 102503
    and trunc(ptd.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by ptd.person_id, trunc(ptd.date_day)) ptd,
person p
    where mw.sum_hrd > ptd.sum_hrd
    and mw.person_id = ptd.person_id
    and ptd.person_id = p.person_id
    and mw.date_day = ptd.date_day;"
Kk0SsRxa,myipms,Nil000,Email,Tuesday 7th of May 2024 06:36:56 AM CDT,"Myip.ms site accepts donations at this link:
https://shorturl.at/KRWZ0"
sZ89G6uB,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 06:30:53 AM CDT,"select mw.person_id, p.company_nr, mw.date_day, mw.sum_hrd timesheet_lines_hr, ptd.sum_hrd ptd_lines_hr from (select p.person_id,trunc(md.date_day) date_day, sum(mtsl.hrd) sum_hrd from mw_time_sheet_line mtsl, mfc_mobile_worker mmw, mw_day md, person p
where mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
and mmw.erp_id = p.person_id
and p.vo_person_category_id = 102503
and mtsl.validation_status_id = 48
and mtsl.mw_day_id = md.mw_day_id
and trunc(md.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by p.person_id, trunc(md.date_day)) mw,
(select ptd.person_id,trunc(ptd.date_day) date_day, sum(ptd.trf_dhr) sum_hrd from pd_trf_day ptd, person p
where ptd.person_id = p.person_id
and p.vo_person_category_id = 102503
and trunc(ptd.date_day) >= to_date('01/02/2024','DD/MM/YYYY')
group by ptd.person_id, trunc(ptd.date_day)) ptd,
person p
where mw.sum_hrd > ptd.sum_hrd
and mw.person_id = ptd.person_id
and ptd.person_id = p.person_id
and mw.date_day = ptd.date_day;"
8vvUNn1B,teleporter enable,fjahs3sfsffsdksdhg,JSON,Tuesday 7th of May 2024 06:08:01 AM CDT,"{
  ""l"": false,
  ""m"": ""loader""
}
"
X5myaipj,data919,TestGuy1,JSON,Tuesday 7th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9a415671a7eb288114ce651fbe0319bc963ce903f73f39891f45b1f680df046222fa7e6558e6fda2b9738c933e80068d3f77c567efb510930c56c8021dfa2bc45f1736195726c6ea6ef243d9a1c6f129266a8531a136becb5f8f36b884c67c605ece712b089ce044edcee12456616e8772bd90def119699c10d69b27d03efb7c',
  otherdata: [
    'f2246a3ad548b8c9c10e1eef501cb0c2',
    '7c3569682068d8de518dcff6e6f58456',
    '536bbc358d819c9c53101dd27ced9d0e',
    '5b028eb22be91faa5029a4cfdf25e589',
    'd7c11ce50678f9cb72a57fcdd5673b2d',
    '66128c26b8e1d7dd67445326110bfdb7',
    'b0b814f87f12d202adaece918fcc1ca5',
    'c5d9affdd9dbc759e6ee7d1f3e0afa5d'
  ]
}"
JGVAAce1,CounterScript,RedBum,C#,Tuesday 7th of May 2024 05:37:20 AM CDT,"using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class CounterScript : MonoBehaviour
{
    [SerializeField] private Text counterText;
    private float counter = 0f;
    private bool isCounting = false;
    private Coroutine countCoroutine;

    void Update()
    {
        if (Input.GetMouseButtonDown(0))
        {
            isCounting = !isCounting;

            if (isCounting)
            {
                if (countCoroutine != null)
                    StopCoroutine(countCoroutine);

                countCoroutine = StartCoroutine(CountCoroutine());
            }

            else
            {
                if (countCoroutine != null)
                {
                    StopCoroutine(countCoroutine);
                }
            }
        }
    }

    IEnumerator CountCoroutine()
    {
        while (isCounting)
        {
            counter++;
            counterText.text = counter.ToString();
            yield return new WaitForSeconds(0.5f);
        }
    }
}"
4VCYLmap,Untitled,psi_mmobile,PL/SQL,Tuesday 7th of May 2024 05:25:48 AM CDT,"select p.person_id, w.wbs_id,w.name,trunc(md.date_day) date_day, p.company_nr, mtsl.hrd, mtsl.validation_status_id, x.sum_hrd from mw_time_sheet mts, mw_time_sheet_line mtsl, mfc_mobile_worker mmw, person p, fc_assignment fa, wbs w, mw_day md,
(select sum(m.hrd) sum_hrd,m.mfc_mobile_worker_id, trunc(md.date_day) date_Day from mw_time_sheet_line m, mw_day md group by m.mfc_mobile_worker_id, trunc(md.date_day)) x
where mts.mw_time_sheet_id = mtsl.mw_time_sheet_id
and mtsl.mfc_mobile_worker_id = mmw.mfc_mobile_worker_id
and mmw.mfc_mobile_worker_id = x.mfc_mobile_worker_id
and mmw.erp_id = p.person_id
and p.vo_person_category_id = 102503
and mtsl.mw_day_id = md.mw_day_id
and md.date_day = x.date_day
and x.date_day >= to_date('01/02/2024','DD/MM/YYYY')
and mtsl.validation_status_id = 48
and mtsl.fc_assignment_id = fa.fc_assignment_id
--and fa.erp_id = w.wbs_id
and x.sum_hrd > (select sum(trf_dhr) from pd_trf_day ptd
where trunc(ptd.date_day) = trunc(md.date_day) --join with mw day
and ptd.person_id = p.person_id
--and ptd.wbs_id = w.wbs_id
group by ptd.person_id,trunc(ptd.date_day))
order by 1,4;"
nFXgHL77,Pygame Linking Nodes,Windspar,Python,Tuesday 7th of May 2024 05:18:19 AM CDT,"import random
import pygame
from pygame.sprite import Group, Sprite

class Entity(Sprite):
    def __init__(self, image, position, anchor):
        super().__init__()
        self.image = image
        self.rect = image.get_rect(**{anchor: position})
        self.center = pygame.Vector2(self.rect.center)
        self.vector = pygame.Vector2()
        self._random()

    def _random(self):
        self.vector.from_polar((1, random.randint(0, 360)))
        self.velocity = random.randrange(60, 180)

    def update(self, delta, area):
        self.center += self.vector * delta * self.velocity
        self.rect.center = self.center
        clamp = self.rect.clamp(area)

        # Boundry Collision
        if clamp != self.rect:
            if clamp.x != self.rect.x:
                self.vector.x = -self.vector.x

            if clamp.y != self.rect.y:
                self.vector.y = -self.vector.y

            self.rect = clamp
            self.center = pygame.Vector2(self.rect.center)

class Scene:
    def __init__(self, display):
        self.display = display

    def on_draw(self, surface):
        pass

    def on_event(self, event):
        pass

    def on_update(self, delta):
        pass

class Display:
    def __init__(self, caption, width, height, flags=0, fps=60):
        pygame.display.set_caption(caption)
        self.display = pygame.display.set_mode((width, height), flags)
        self.rect = self.display.get_rect()
        self.clock = pygame.time.Clock()
        self.running = True
        self.delta = 0
        self.fps = fps

        self.scene = Scene(self)

    def loop(self):
        while self.running:
            for event in pygame.event.get():
                self.scene.on_event(event)

            self.scene.on_update(self.delta)
            self.scene.on_draw(self.display)
            pygame.display.flip()
            # Using delta time for smooth movement.
            self.delta = self.clock.tick(self.fps) / 1000

class ImageHandler:
    def __init__(self):
        self.radius = 10
        self.nodes = self.create_nodes()

    def create_nodes(self):
        colors = self.get_colors()
        nodes = []
        transparent = 0, 0, 0, 0
        size = self.radius * 2, self.radius * 2
        surface = pygame.Surface(size, pygame.SRCALPHA)
        surface.fill(transparent)
        for color in colors:
            pygame.draw.circle(surface, color, (self.radius, self.radius), self.radius)
            nodes.append(surface.copy())

        return nodes

    def get_colors(self):
        dark = 80
        colors = []
        for color in pygame.color.THECOLORS:
            pcolor = pygame.Color(color)
            if pcolor.a > dark and pcolor.g > dark and pcolor.b > dark:
                if not color.startswith('grey') and not color.startswith('gray'):
                    colors.append(color)

        random.shuffle(colors)
        return colors

class Main(Scene):
    def __init__(self, display):
        super().__init__(display)
        self.image = ImageHandler()
        self.nodes = Group()

        self.setup(20)

    def setup(self, count):
        count = min(count, len(self.image.nodes))
        self.nodes.empty()
        rad = self.image.radius * 2
        for i in range(count):
            position = (random.randint(rad, self.display.rect.w - rad),
                        random.randint(rad, self.display.rect.h - rad))

            self.nodes.add(Entity(self.image.nodes[i], position, 'center'))

    def draw_lines(self, surface):
        rnd = random.randrange
        for i, inode in enumerate(self.nodes):
            nearest = None
            min_dist = float('inf')
            for j, jnode in enumerate(self.nodes):
                if i != j:
                    dist = inode.center.distance_to(jnode.center)
                    if dist < min_dist:
                        min_dist = dist
                        nearest = jnode

            line_color = pygame.Color(rnd(0, 255), rnd(0, 255), rnd(0, 255), 255)
            if min_dist <= 255:
                line_color.a = int(255 - min_dist)

            if min_dist <= 1000:
                pygame.draw.line(surface, line_color, inode.rect.center, nearest.rect.center)

    def on_draw(self, surface):
        surface.fill('black')
        # Draw all lines first
        self.draw_lines(surface)
        # Draw all circles
        self.nodes.draw(surface)

    def on_event(self, event):
        if event.type == pygame.QUIT:
            self.display.running = False

    def on_update(self, delta):
        self.nodes.update(delta, self.display.rect)

def main():
    pygame.init()
    display = Display(""Example"", 800, 600)
    main = Main(display)
    display.scene = main
    display.loop()
    pygame.quit()

main()
"
SYH9rPBb,Delete the Middle Node of a Linked List,jayati,C++,Tuesday 7th of May 2024 05:13:14 AM CDT,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        if(head->next==NULL)
        {
            return NULL;
        }
        ListNode* temp = head;
        int l=0;
        while(temp->next!=NULL)
        {
            l++;
            temp=temp->next;
        }
        // if(l%2==1)
        // {
        //    l=l/2;
        // }
        // else
        // {
        //     l=(l/2)+1;
        // }
        int i=0;
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(i<((l+1)/2))
        {
            prev=curr;
             curr=curr->next;
            i++;
        }
        // ListNode* curr=prev->next;
        prev->next=curr->next;
        curr->next=NULL;
        delete(curr);
        return head;
        
    }
};"
