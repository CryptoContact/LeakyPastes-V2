id,title,username,language,date,content
0FgTjcBt,2024-04-19_stats.json,rdp_snitch,JSON,Friday 19th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""162.142.125.210"": 1,
    ""167.94.146.58"": 1,
    ""87.251.67.195"": 6,
    ""205.210.31.97"": 3,
    ""164.90.214.125"": 1,
    ""103.166.184.11"": 2,
    ""198.50.153.168"": 3,
    ""213.202.230.4"": 1,
    ""87.251.75.145"": 3,
    ""36.137.3.251"": 8,
    ""103.245.237.31"": 26,
    ""36.91.222.100"": 2,
    ""91.238.181.16"": 2,
    ""139.59.56.11"": 8,
    ""40.160.6.116"": 98,
    ""185.170.144.3"": 2,
    ""185.161.248.148"": 1,
    ""164.92.103.151"": 1,
    ""2.57.149.186"": 2,
    ""45.227.254.55"": 2,
    ""165.154.32.235"": 1,
    ""190.92.175.108"": 3,
    ""205.210.31.140"": 3,
    ""62.204.41.225"": 4,
    ""80.66.76.92"": 1,
    ""64.226.75.54"": 1,
    ""58.218.204.183"": 3,
    ""82.48.48.234"": 1,
    ""128.14.209.30"": 6,
    ""173.237.25.68"": 1,
    ""185.81.68.38"": 3,
    ""216.74.107.251"": 1,
    ""167.94.138.49"": 1,
    ""198.235.24.254"": 3,
    ""87.251.75.64"": 1,
    ""84.201.2.2"": 2,
    ""45.227.254.8"": 2,
    ""112.4.139.162"": 1,
    ""196.190.117.7"": 1,
    ""194.165.16.73"": 2,
    ""185.161.248.219"": 2,
    ""116.140.196.215"": 1,
    ""205.210.31.68"": 3,
    ""94.232.46.132"": 1
  },
  ""asn"": {
    ""AS398324"": 2,
    ""AS398705"": 1,
    ""AS208091"": 11,
    ""AS396982"": 12,
    ""AS14061"": 11,
    ""AS135905"": 2,
    ""AS16276"": 101,
    ""AS24961"": 1,
    ""AS9808"": 8,
    ""AS150867"": 26,
    ""AS7713"": 2,
    ""AS49434"": 2,
    ""AS197414"": 2,
    ""AS49202"": 3,
    ""AS208312"": 2,
    ""AS267784"": 4,
    ""AS135377"": 1,
    ""Unknown"": 3,
    ""AS59425"": 4,
    ""AS4134"": 3,
    ""AS3269"": 1,
    ""AS21859"": 6,
    ""AS7979"": 1,
    ""AS57523"": 3,
    ""AS14315"": 1,
    ""AS44066"": 2,
    ""AS56046"": 1,
    ""AS24757"": 1,
    ""AS48721"": 2,
    ""AS4837"": 1,
    ""AS212482"": 1
  },
  ""isp"": {
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 12,
    ""DigitalOcean, LLC"": 11,
    ""CLOUDFLY"": 2,
    ""OVH Hosting"": 3,
    ""myLoc managed IT AG"": 1,
    ""China Mobile"": 8,
    ""LP TECHNOLOGY ELECTRONIC COMMERCE COMPANY LIMITED"": 26,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""OVH SAS"": 98,
    ""Kisara LLC"": 3,
    ""Red Byte LLC"": 2,
    ""Flyservers S.A."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""WHG Hosting Services Ltd"": 3,
    ""Horizon LLC"": 4,
    ""Chinanet"": 3,
    ""Telecom Italia S.p.A. TIN EASY LITE"": 1,
    ""Zenlayer Inc"": 6,
    ""Servers.com, Inc."": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Colocation America Corporation"": 1,
    ""www.accelerated.de"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""Ethiotelecom"": 1,
    ""China Unicom CHINA169 Network"": 1
  },
  ""org"": {
    ""Censys Inc"": 1,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 11,
    ""Palo Alto Networks, Inc"": 12,
    ""DigitalOcean, LLC"": 11,
    ""Cloudfly Corporation"": 2,
    ""OVH (NWK)"": 3,
    ""myLoc managed IT AG"": 1,
    ""China Mobile Communications Corporation"": 9,
    ""LP Technology Electronic Commerce Company Limited"": 26,
    ""Telekomunikasi Indonesia"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""OVH US LLC"": 98,
    ""Xhostis"": 2,
    ""Kisara LLC"": 3,
    ""Chang Way Technologies Co. Limited"": 2,
    ""UAB Host Baltic"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""WHG Hosting Services Ltd"": 3,
    ""Horizon LLC"": 4,
    ""Chinanet JS"": 3,
    ""INTERBUSINESS"": 1,
    ""ZENLA"": 6,
    ""Servers.com, Inc."": 1,
    ""Starcrecium Limited"": 3,
    ""Lucid Growth LLC"": 1,
    ""Censys, Inc"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Unknown"": 1,
    ""Flyservers S.A"": 2,
    ""China United Network Communications Corporation Limited"": 1,
    ""Dmitriy Panchenko"": 1
  },
  ""regionName"": {
    ""Michigan"": 2,
    ""Hesse"": 5,
    ""Lower Silesia"": 6,
    ""California"": 19,
    ""Hanoi"": 2,
    ""New Jersey"": 3,
    ""North Rhine-Westphalia"": 1,
    ""North Holland"": 7,
    ""Guangdong"": 8,
    ""Ho Chi Minh"": 26,
    ""Jakarta"": 2,
    ""\u00cele-de-France"": 2,
    ""Karnataka"": 8,
    ""Virginia"": 98,
    ""Moscow"": 10,
    ""Lesser Poland"": 2,
    ""Vilnius"": 4,
    ""Metro Manila"": 1,
    ""Ohio"": 3,
    ""Jiangsu"": 4,
    ""Veneto"": 1,
    ""Texas"": 1,
    ""Delaware"": 1,
    ""Addis Ababa"": 1,
    ""Kaunas"": 2,
    ""Beijing"": 1,
    ""Perm Krai"": 1
  },
  ""country"": {
    ""United States"": 127,
    ""Germany"": 6,
    ""Poland"": 8,
    ""Vietnam"": 28,
    ""The Netherlands"": 7,
    ""China"": 13,
    ""Indonesia"": 2,
    ""France"": 2,
    ""India"": 8,
    ""Russia"": 11,
    ""Lithuania"": 6,
    ""Philippines"": 1,
    ""Italy"": 1,
    ""Ethiopia"": 1
  },
  ""account"": {
    ""(empty)"": 6,
    ""Domain"": 11,
    ""gBCaaDSxT"": 1,
    ""OLylSD"": 1,
    ""EheDbG"": 1,
    ""hello"": 154,
    ""Administr"": 12,
    ""Test"": 18,
    ""Administrator"": 1,
    ""AEzsViNLP"": 1,
    ""vTfOAs"": 1,
    ""vjfMUa"": 1,
    ""a"": 1,
    ""root"": 6,
    ""hXOHWQVMY"": 1,
    ""gslayJ"": 1,
    ""ZIyxXL"": 1,
    ""BlvMfYWjC"": 1,
    ""yIUQlK"": 1,
    ""cVbEqR"": 1
  },
  ""keyboard"": {
    ""Unknown"": 221
  },
  ""client_build"": {
    ""Unknown"": 221
  },
  ""client_name"": {
    ""Unknown"": 221
  },
  ""ip_type"": {
    ""Unknown"": 70,
    ""hosting"": 136,
    ""hosting & proxy"": 2,
    ""mobile"": 9,
    ""proxy"": 4
  }
}"
FgqXiW03,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Friday 19th of April 2024 07:14:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_427194.pdf

Working as of:
20 April 2024"
YeavjqrY,Input.ini,Sticky2000,INI file,Friday 19th of April 2024 07:14:44 PM CDT,"[/Script/Engine.InputSettings]
AxisMappings=(AxisName=""Turn"",Key=MouseX,Scale=1.000000)
AxisMappings=(AxisName=""LookUp"",Key=MouseY,Scale=-1.428571)
AxisMappings=(AxisName=""WorldMapZoom"",Key=MouseWheelAxis,Scale=1.000000)
AxisMappings=(AxisName=""UI_MapMoveX"",Key=MouseX,Scale=1.000000)
AxisMappings=(AxisName=""UI_MapMoveY"",Key=MouseY,Scale=-1.000000)
AxisMappings=(AxisName=""MoveForward"", Key=W, Scale=1.000000)
AxisMappings=(AxisName=""MoveForward"", Key=S, Scale=-1.000000)
AxisMappings=(AxisName=""MoveRight"", Key=D, Scale=1.000000)
AxisMappings=(AxisName=""MoveRight"", Key=A, Scale=-1.000000)"
mq58BmuM,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Friday 19th of April 2024 07:00:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
19 April 2024"
QEHjyNqT,Patch For 1.10 D2Template LightRadius,atirjavid,C++,Friday 19th of April 2024 06:57:25 PM CDT,"#pragma once

#ifndef _D2PATCH_H
#define _D2PATCH_H

#include ""D2PatchConst.h""

DWORD calculateRelativeOffsetD2Common(DWORD offset) {
    return offset - 0x6F600000;
}

DWORD calculateRelativeOffsetD2Client(DWORD offset) {
    return offset - 0x6FAA0000;
}

const char* filePath = ""./D2Mod.ini"";
int iniValue = GetPrivateProfileIntA(""LightRadius"", ""radius"", 0x00, filePath);

BYTE lightRadius = static_cast<BYTE>(iniValue & 0xFF);

static const DLLPatchStrc gptTemplatePatches[] =
{
        // 1st set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4293), (DWORD)0xFD83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4295), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4296), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4298), (DWORD)0xBD, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4299), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429A), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429B), (DWORD)0x00, FALSE, 0x1},
	    { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA429C), (DWORD)lightRadius, FALSE, 0x1},
        
        
        // 2nd set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A4), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A6), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A7), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43A9), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AA), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AB), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AC), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43AD), (DWORD)lightRadius, FALSE, 0x1},


        // 3rd set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43E7), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43E9), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EA), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EC), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43ED), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EE), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43EF), (DWORD)0x00, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA43F0), (DWORD)lightRadius, FALSE, 0x1},

        // 4th set
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4413), (DWORD)0xFA83, FALSE,0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4415), (DWORD)lightRadius, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4416), (DWORD)0x057C, FALSE, 0},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4418), (DWORD)0xBA, FALSE, 0x1},
        { D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FAA4419), (DWORD)lightRadius, FALSE, 0},

        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FB489A0), (DWORD)0x1F6A, FALSE, 0},
        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FACCC9C), (DWORD)0xB8, FALSE, 0x1},
        //{ D2DLL_D2CLIENT, calculateRelativeOffsetD2Client(0x6FACCC9D), (DWORD)0x0000001F, FALSE, 0},

        {D2DLL_INVALID}
};
#endif
"
35e7J6y5,auto_update_all_packages,Python253,Bash,Friday 19th of April 2024 06:37:06 PM CDT,"@echo off
for /f ""tokens=1"" %%i in ('pip list --outdated') do pip install --upgrade %%i
"
Kdw8awCU,update_packages,Python253,Python,Friday 19th of April 2024 06:36:11 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: update_packages.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script checks for outdated Python packages using pip and upgrades them if necessary. 
It logs the upgrade results to a file named 'upgrade_log.txt' in the current working directory.

Requirements:
    - Python 3.x
    - pip

Usage:
    - Run the script using Python 3.x from the command line.
    - Navigate to the current working directory and use the terminal command:
            
            'python upgrade_packages.py'
            
    - The script will automatically upgrade outdated packages if any are found.

Additional Notes:
    - The script will create a log file named 'upgrade_log.txt' in the current working directory.
""""""

import subprocess
import datetime
import os

# Function to run pip list command and check for outdated packages
def check_outdated_packages():
    result = subprocess.run(['pip', 'list', '--outdated'], capture_output=True, text=True)
    outdated_packages = result.stdout.strip().split('\n')[2:]  # Extract outdated packages, skipping header
    return outdated_packages

# Function to upgrade outdated packages and log the results
def upgrade_packages(outdated_packages):
    log_path = os.path.join(os.getcwd(), 'upgrade_log.txt')
    if not outdated_packages:
        print(""All packages are already up to date."")
        with open(log_path, 'a', encoding='utf-8') as log_file:
            log_file.write(f'{datetime.datetime.now()}: All packages are already up to date\n')
        print(f""Log file saved to: {log_path}"")
    else:
        print(""Updating outdated packages..."")
        for package in outdated_packages:
            subprocess.run(['pip', 'install', '--upgrade', package.split()[0]])
        with open(log_path, 'a', encoding='utf-8') as log_file:
            log_file.write(f'{datetime.datetime.now()}: Upgraded packages: {"", "".join(outdated_packages)}\n')
        print(f""Log file saved to: {log_path}"")

# Main function
def main():
    outdated_packages = check_outdated_packages()
    upgrade_packages(outdated_packages)

if __name__ == ""__main__"":
    main()

"
e7N8afxV,basalt_test.lua,Antonderman,Lua,Friday 19th of April 2024 06:12:38 PM CDT,"local basalt = require(""basalt"")

local redstoneIntegrators = peripheral.find(""redstoneIntegrator"")

local monitor = peripheral.find(""monitor"")
local main = basalt.createFrame();
-- main:setMonitor(monitor)

local currentStationLabel = main:addLabel()
currentStationLabel:setText(""You are on:"")
currentStationLabel:setPosition(""parent.w/2 - self.w/2"", 2)
currentStationLabel:setFontSize(2)

local stationLabel = main:addLabel()
stationLabel:setText(""M-Link Factory"")
stationLabel:setPosition(""parent.w/2 - self.w/2"", 6)
stationLabel:setFontSize(2)


local progressBar = main:addProgressbar()
progressBar:setPosition(""parent.w/2 - self.w/2"", ""parent.h/2 - self.h/2"")
progressBar:setDirection(""right"")
progressBar:setSize(50,3)
progressBar:setProgress(50)
progressBar:setProgressBar(colors.blue)

for a,b in pairs(redstoneIntegrators) do 
    print(a)
    print(b)
end

basalt.autoUpdate()"
Qi5RC5Dd,Untitled,Mysoft,FreeBasic,Friday 19th of April 2024 06:12:07 PM CDT,"type Array
  redim au(any) as long
end type

dim as Array ArrayList(3)
dim as ulong Num=100

color 3
for N as long = 0 to ubound(ArrayList)
  redim (ArrayList(N).au)(N+10)
  print ""Array"";N;"" Created with 0 to"";ubound(ArrayList(N).au);"" elements""
  for M as long = 0 to N+10
    ArrayList(N).au(M) = Num
    Num += 1
  next M  
next N

print

for N as long = 0 to ubound(ArrayList)
  color 10 : print ""--- #"" & N & "" ---"" : color 7
  with ArrayList(N)
    for M as long = 0 to ubound(.au)
      print .au(M);
    next M
  end with
  print
next N

sleep
"
YtyBbdAz,clipboard_fix_csv_reset,Python253,Python,Friday 19th of April 2024 04:23:19 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: clipboard_fix_csv_reset.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script is designed to fix issues related to clipboard functionality on Windows systems by resetting and restarting essential services.
Specifically, it targets the ""Remote Desktop Services UserMode Port Redirector"" and ""ClipSVC"" services, which are critical for clipboard operations.

The script first stops these services using the 'net stop' command, ensuring that any existing processes associated with them are terminated gracefully.
It then starts the services again using the 'net start' command, effectively resetting them to their default state.

By executing this script, users can resolve common clipboard problems on Windows, such as malfunctioning clipboard operations or locked memory issues.
This script provides a convenient and efficient way to address these issues without the need for manual intervention or complex troubleshooting steps.

Requirements:
    - Python 3.x
    - Administrative privileges may be required for execution.
    
Usage:
    - Run the script with Python 3.x from the command line.
    - Ensure administrative privileges are granted if prompted.
    
Additional Notes:
    - Ensure 'net stop' and 'net start' commands are available.
    - Verify service status post-execution for confirmation.
""""""

import subprocess

def stop_service(service_name):
    """"""Stop the specified Windows service.""""""
    subprocess.run([""net"", ""stop"", service_name], shell=True)

def start_service(service_name):
    """"""Start the specified Windows service.""""""
    subprocess.run([""net"", ""start"", service_name], shell=True)

def main():
    """"""Main function to stop and start essential services.""""""
    services = [
        ""Remote Desktop Services UserMode Port Redirector"",
        ""ClipSVC""
    ]
    print(""\n\t\t[CLIPBOARD FIX CSV RESET]\n\n"")
    for service in services:
        print(f""\nStopping service:\n{service}"")
        stop_service(service)
        print(f""\nStarting service:\n{service}"")
        start_service(service)
    print(""\n\t\tAll Processes Have Completed.\n\n\t\tEnding Program... GoodBye!\n"")
if __name__ == ""__main__"":
    main()

"
spKntYFp,Untitled,Zeinab_Hamdy,C++,Friday 19th of April 2024 04:07:53 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define cnl cout << nl;
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV return void
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define fixed(n) fixed << setprecision(n)
#define cin(v) for(auto&x:v) cin >> i;
#define cout(v) for(auto&x:v) cout << i << "" "";
void files(){
    #ifndef ONLINE_JUDGE
       freopen(""input.txt"", ""r"", stdin);
       freopen(""output.txt"", ""w"", stdout);
    #endif
}


void solve( int test ){

    int n ;
    cin >> n ;
    vector < pair < ll , ll> > p;
    vector < pair < ll , pair < ll , ll > > > v(n);
    for(int i =0 ; i < n ; i++){
        cin >> v[i].fi >> v[i].se.fi >> v[i].se.se;
        ll mx= max({v[i].fi , v[i].se.fi , v[i].se.se})
        , sum = v[i].fi + v[i].se.fi + v[i].se.se - mx;
        p.pb({sum , mx });
    }

    sort(all(p) , [&] ( auto a , auto b){
        if(a.fi == b.fi) {
            return a.se < b.se;
        }
        return a.fi < b.fi;
    });
    auto lwr=[&]( ll sum ){
        int l=0 ,r =n-1 , best =0;
        while(l <= r ){
            int mid = r- (r-l)/2;
            if(p[mid].fi + 2 <= sum){
                best = mid;
                l=mid+1;
            }else{
                r=mid-1;
            }
        }
        return best;
    };
    
    for(int i =0 ; i < n ;i++){
        ll sum = v[i].fi + v[i].se.fi + v[i].se.se;
        cout << lwr(sum) << "" "";
    }
   
    

}
 
 
int main(){
    ios_base::sync_with_stdio(false); 
    cin.tie(nullptr); 
    cout.tie(nullptr);
                            
    //  files();
    int testCase=1;
        // cin >> testCase ;
    for(int i=1 ; i <= testCase ; i++){
        solve(i);
    }
 
    return 0;
}"
U8TXC8n4,JPMorgan CEO Jamie Dimon Continues Criticism of Bitcoin,livebetpro,PHP,Friday 19th of April 2024 03:47:15 PM CDT,"https://www.livebetpro.com/jpmorgan-ceo-jamie-dimon-continues-criticism-of-bitcoin/
 
Jamie Dimon, CEO of JPMorgan, remains a formidable adversary to Bitcoin. According to Dimon, it is not a real currency but rather a swindle. Dimon admitted his skepticism about the veracity and practicality of digital currencies like Bitcoin during a recent interview with Bloomberg TV.



He reiterated his belief that Bitcoin is a Ponzi scheme rather than a real currency. The massive fluctuations in the cryptocurrency’s value over the years stand in stark contrast to this resolute stance.



Pessimism Persists



Bitcoin has a lengthy history of bad associations with numerous illegal acts, and Jamie Dimon has a history of making disparaging remarks about it. Because of its decentralization and anonymity, he said, Bitcoin can facilitate illegal activities like tax avoidance, money laundering, and even the financing of terrorists. Despite the growing interest in digital currencies in the financial arena, this pessimism persists.



Amidst Jamie Dimon’s criticisms, the market price of Bitcoin has been very volatile. Bitcoin has been both resilient and unstable, going as high as $65,000 in November 2021 and as low as about $16,000.



Jamie Dimon drew a parallel between investing in Bitcoin and smoking cigarettes in another CNBC interview earlier, arguing that both are dangerous choices that should be left to individuals. Despite his stance against Bitcoin, he does not oppose investors’ freedom to purchase it. Despite one’s own cynicism, this position demonstrates a balanced vision by recognizing the need of safeguarding consumer investment choices. At the time of writing, Bitcoin is trading at $63,546, up 4.91% in the last 24 hours as per data from CoinMarketCap.
"
jm8QKT3J,estructura cuestonario entrevista,jcarlosriverae,JSON,Friday 19th of April 2024 02:56:23 PM CDT,"{
	""vacante"":{
		""id"":909,
		""nombre"" : ""Administrador de edificio"",
		""empresa"": ""CHUCHITO SA"",
	}

	""candidato"": {
		""id"":791,
		""apellidoPaterno"": ""Perez"",
		""apellidoMaterno"": ""Hernandez"",
		""nombre"": ""Victoria""
	}
  	""cuestionario"": [
    {
		""pregunta"": ""Pregunta1"",
      	""respuesta"": ""Respuesta1"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    },
    {
      	""pregunta"": ""Pregunta2"",
      	""respuesta"": ""Respuesta2"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    },
    {
      	""pregunta"": ""Pregunta3"",
      	""respuesta"": ""Respuesta3"",
		""entrevistador"":""nombre usuario"",
		""fechaHoraRespuesta"":""2024-04-19 13:50:08""
    }
  ]
}"
y2bx73tG,win_env_var_explorer2,Python253,Python,Friday 19th of April 2024 02:43:43 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: win_env_var_explorer2.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
This script allows users to explore and display Windows environment variables grouped by categories. 
Users can navigate through a menu to select a category of environment variables and then choose a specific variable 
within that category to display its current value. The script provides a user-friendly interface for interacting with 
environment variables, making it easier for users to manage and understand their Windows environment configuration.

Additionally, users can select all categories to display and save the output data from all variables within each category to a text file.

Requirements:
- Python 3
- Windows operating system

Usage:
- Run the script using Python 3 in a Windows environment.

Additional Notes:
- Ensure that Python 3 is installed on your system.
- This script provides read-only access to environment variables and does not modify them.
- Output data is saved to 'environment_output.txt' in the current working directory.
""""""

import os

# Dictionary of environment variables by category
variables = {
    ""System Information"": {
        1: ""ALLUSERSPROFILE"",
        2: ""COMPUTERNAME"",
        3: ""NUMBER_OF_PROCESSORS"",
        4: ""OS"",
        5: ""PROCESSOR_ARCHITECTURE"",
        6: ""SYSTEMDRIVE"",
        7: ""SYSTEMROOT"",
        8: ""WINDIR""
    },
    ""User Information"": {
        1: ""APPDATA"",
        2: ""HOMEDRIVE"",
        3: ""HOMEPATH"",
        4: ""LOCALAPPDATA"",
        5: ""USERDOMAIN"",
        6: ""USERNAME"",
        7: ""USERPROFILE""
    },
    ""File Paths"": {
        1: ""CD"",
        2: ""CommonProgramFiles"",
        3: ""COMMONPROGRAMFILES(x86)"",
        4: ""ProgramData"",
        5: ""ProgramFiles"",
        6: ""ProgramFiles(x86)"",
        7: ""ProgramW6432"",
        8: ""PSModulePath"",
        9: ""Public"",
        10: ""TEMP"",
        11: ""TMP""
    },
    ""Network"": {
        1: ""ClientName"",
        2: ""LOGONSERVER"",
        3: ""HOMESHARE"",
        4: ""OneDrive"",
        5: ""OneDriveCommercial"",
        6: ""OneDriveConsumer"",
        7: ""UserDnsDomain"",
        8: ""%SessionName%""
    },
    ""Command Interpreter"": {
        1: ""COMSPEC"",
        2: ""CMDEXTVERSION"",
        3: ""CMDCMDLINE"",
        4: ""PROMPT""
    },
    ""Date and Time"": {
        1: ""DATE"",
        2: ""TIME""
    },
    ""Miscellaneous"": {
        1: ""ERRORLEVEL"",
        2: ""PATHEXT"",
        3: ""RANDOM""
    }
}

# Function to save environment output to a text file
def save_environment_output(output_data):
    with open(""environment_output.txt"", ""w"") as f:
        for category, data in output_data.items():
            f.write(f""{category}:\n"")
            for variable, value in data.items():
                f.write(f""{variable}: {value}\n"")
            f.write(""\n"")

# Main loop
while True:
    # Display categories menu
    print(""\nChoose a category of environment variables (type '0' to exit):\n"")
    for num, category in enumerate(variables.keys(), 1):
        print(f""{num:02}. {category}"")
    print(f""{len(variables) + 1:02}. Select all & save the output to file."")

    # Get user input for category choice
    category_choice = input(""\nEnter the number of the category you want to explore: "")

    # Exit if category choice is '0'
    if category_choice == '0':
        print(""\nExiting...\tGoodBye!\n"")
        break

    # Validate category choice
    if category_choice.isdigit() and 1 <= int(category_choice) <= len(variables) + 1:
        category_choice = int(category_choice)
        
        # Initialize output data dictionary
        output_data = {}
        
        if category_choice == len(variables) + 1:
            # Select all categories
            selected_categories = list(variables.keys())
        else:
            # Select single category
            category_name = list(variables.keys())[category_choice - 1]
            selected_categories = [category_name]

        # Iterate over selected categories
        for category_name in selected_categories:
            # Display variables submenu for selected category
            print(f""\n{category_name} variables:\n"")
            category_variables = variables[category_name]
            category_output = {}
            for num, var in sorted(category_variables.items()):
                value = os.environ.get(var)
                category_output[var] = value
                print(f""{num:02}. {var}: {value}"")
            
            output_data[category_name] = category_output
        
        # Save environment output to text file
        save_environment_output(output_data)
        print(""\nEnvironment output saved to 'environment_output.txt'."")
    else:
        print(""\nInvalid category choice!\n"")

"
cBAJt5pJ,Untitled,Tkap1,C++,Friday 19th of April 2024 02:42:53 PM CDT,"func b8 set_clipboard(char* str)
{
	b8 result = false;
	b8 close = false;
	int len;
	char* locked;
	HGLOBAL mem;
	HGLOBAL temp;

	if(!OpenClipboard(null)) { goto clipboard_end; }
	close = true;
	if(!EmptyClipboard()) { goto clipboard_end; }

	len = strleni(str);
	mem = GlobalAlloc(GMEM_MOVEABLE, len + 1);
	locked = (char*)GlobalLock(mem);
	memcpy(locked, str, len);
	locked[len] = 0;
	GlobalUnlock(mem);
	if(!SetClipboardData(CF_TEXT, mem)) { goto clipboard_end; }
	result = true;
	temp = GlobalFree(mem);
	assert(temp == null);

clipboard_end:
	if(close) { CloseClipboard(); }
	return result;
}
"
nSScqnjX,СПРИНТ № 7 | Модель памяти в C++ | Урок 8: Копирование объектов. Часть вторая,chevengur,C++,Friday 19th of April 2024 02:36:31 PM CDT,"#include <cassert>

// Умный указатель, удаляющий связанный объект при своём разрушении.
// Параметр шаблона T задаёт тип объекта, на который ссылается указатель
template <typename T>
class ScopedPtr {
public:
    // Конструктор по умолчанию создаёт нулевой указатель,
    // так как поле ptr_ имеет значение по умолчанию nullptr
    ScopedPtr() = default;

    // Создаёт указатель, ссылающийся на переданный raw_ptr.
    // raw_ptr ссылается либо на объект, созданный в куче при помощи new,
    // либо является нулевым указателем
    // Спецификатор noexcept обозначает, что метод не бросает исключений
    explicit ScopedPtr(T* raw_ptr) noexcept {
        if (raw_ptr != nullptr)
        {
            ptr_ = raw_ptr;
        }
    }

    // Удаляем у класса конструктор копирования
    ScopedPtr(const ScopedPtr&) = delete;

    // Деструктор. Удаляет объект, на который ссылается умный указатель.
    ~ScopedPtr() {
        // Реализуйте тело деструктора самостоятельно
        delete ptr_;
    }

    // Возвращает указатель, хранящийся внутри ScopedPtr
    T* GetRawPtr() const noexcept {

        return ptr_;
        // Напишите код метода самостоятельно
    }

    // Прекращает владение объектом, на который ссылается умный указатель.
    // Возвращает прежнее значение ""сырого"" указателя и устанавливает поле ptr_ в null
    T* Release() noexcept {
        // Реализуйте самостоятельно
        T* new_ptr = ptr_;
        ptr_ = nullptr;
        return new_ptr;
        
    }

private:
    T* ptr_ = nullptr;
};

// Этот main тестирует класс ScopedPtr
int main() {
    // Вспомогательный ""шпион"", позволяющий узнать о своём удалении
    struct DeletionSpy {
        explicit DeletionSpy(bool& is_deleted)
            : is_deleted_(is_deleted) {
        }
        ~DeletionSpy() {
            is_deleted_ = true;
        }
        bool& is_deleted_;
    };

    // Проверяем автоматическое удаление
    {
        bool is_deleted = false;
        {
            // настраиваем ""шпион"", чтобы при своём удалении он выставил is_deleted в true
            DeletionSpy* raw_ptr = new DeletionSpy(is_deleted);
            ScopedPtr<DeletionSpy> p(raw_ptr);
            assert(p.GetRawPtr() == raw_ptr);
            assert(!is_deleted);
            // При выходе из блока деструктор p должен удалить ""шпиона""
        }
        // Если деструктор умного указателя работает правильно, шпион перед своей ""смертью""
        // должен выставить is_deleted в true
        assert(is_deleted);
    }

    // Проверяем работу метода Release
    {
        bool is_deleted = false;
        DeletionSpy* raw_ptr = new DeletionSpy(is_deleted);
        {
            ScopedPtr<DeletionSpy> scoped_ptr(raw_ptr);
            assert(scoped_ptr.Release() == raw_ptr);
            assert(scoped_ptr.GetRawPtr() == nullptr);
            // После Release умный указатель не ссылается на объект и не удаляет его при своём удалении
        }
        assert(!is_deleted);
        delete raw_ptr;
        assert(is_deleted);
    }
}"
hLQHd3WN,win_env_var_explorer,Python253,Python,Friday 19th of April 2024 02:34:44 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: win_env_var_explorer.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script allows users to explore and display Windows environment variables grouped by categories. 
Users can navigate through a menu to select a category of environment variables and then choose a specific variable 
within that category to display its current value. 
The script provides a user-friendly interface for interacting with 
environment variables, making it easier for users to manage and understand their Windows environment configuration.

Requirements:
- Python 3
- Windows operating system

Usage:
- Run the script using Python 3 in a Windows environment.

Additional Notes:
- Ensure that Python 3 is installed on your system.
- This script provides read-only access to environment variables and does not modify them.
""""""

import os

# Dictionary of environment variables by category
variables = {
    ""System Information"": {
        1: ""ALLUSERSPROFILE"",
        2: ""COMPUTERNAME"",
        3: ""NUMBER_OF_PROCESSORS"",
        4: ""OS"",
        5: ""PROCESSOR_ARCHITECTURE"",
        6: ""SYSTEMDRIVE"",
        7: ""SYSTEMROOT"",
        8: ""WINDIR""
    },
    ""User Information"": {
        1: ""APPDATA"",
        2: ""HOMEDRIVE"",
        3: ""HOMEPATH"",
        4: ""LOCALAPPDATA"",
        5: ""USERDOMAIN"",
        6: ""USERNAME"",
        7: ""USERPROFILE""
    },
    ""File Paths"": {
        1: ""CD"",
        2: ""CommonProgramFiles"",
        3: ""COMMONPROGRAMFILES(x86)"",
        4: ""ProgramData"",
        5: ""ProgramFiles"",
        6: ""ProgramFiles(x86)"",
        7: ""ProgramW6432"",
        8: ""PSModulePath"",
        9: ""Public"",
        10: ""TEMP"",
        11: ""TMP""
    },
    ""Network"": {
        1: ""ClientName"",
        2: ""LOGONSERVER"",
        3: ""HOMESHARE"",
        4: ""OneDrive"",
        5: ""OneDriveCommercial"",
        6: ""OneDriveConsumer"",
        7: ""UserDnsDomain"",
        8: ""%SessionName%""
    },
    ""Command Interpreter"": {
        1: ""COMSPEC"",
        2: ""CMDEXTVERSION"",
        3: ""CMDCMDLINE"",
        4: ""PROMPT""
    },
    ""Date and Time"": {
        1: ""DATE"",
        2: ""TIME""
    },
    ""Miscellaneous"": {
        1: ""ERRORLEVEL"",
        2: ""PATHEXT"",
        3: ""RANDOM""
    }
}

# Main loop
while True:
    # Display categories menu
    print(""\nChoose a category of environment variables (type '0' to exit):\n"")
    for num, category in enumerate(variables.keys(), 1):
        print(f""{num:02}. {category}"")

    # Get user input for category choice
    category_choice = input(""\nEnter the number of the category you want to explore: "")

    # Exit if category choice is '0'
    if category_choice == '0':
        print(""\nExiting...\tGoodBye!\n"")
        break

    # Validate category choice
    if category_choice.isdigit() and 1 <= int(category_choice) <= len(variables):
        category_choice = int(category_choice)
        category_name = list(variables.keys())[category_choice - 1]

        # Display variables submenu for selected category
        print(f""\n{category_name} variables:\n"")
        category_variables = variables[category_name]
        for num, var in sorted(category_variables.items()):
            print(f""{num:02}. {var}"")

        # Get user input for variable choice
        variable_choice = input(""\nEnter the number of the variable you want to display (or '0' to go back): "")

        # Exit submenu if variable choice is '0'
        if variable_choice == '0':
            continue

        # Validate variable choice
        if variable_choice.isdigit() and int(variable_choice) in category_variables:
            selected_variable = category_variables[int(variable_choice)]
            value = os.environ.get(selected_variable)
            if value:
                print(f""\n\nThe value of {selected_variable} is: {value}\n\n"")
            else:
                print(f""\n{selected_variable} is not set.\n"")
        else:
            print(""\nInvalid choice!\n"")
    else:
        print(""\nInvalid category choice!\n"")
"
K6VLbisM,js max product of 2 numbers in array,Pearlfromsu,C#,Friday 19th of April 2024 02:18:13 PM CDT,"//PRINT MAX PRODUCT OF TWO ELEMENTS IN ARRAY
function maxProduct(arr) { //набрать 2 минимальных, 2 максимальных и смотреть на случаи: есть положительные числа или нет. В зависимости от них выводить произведение двух наименьших, меньшее*большее или на 2 наибольших
    if(arr.length === 2)
        return arr[0]*arr[1];
    let a1 = Number.MaxValue;
    let b1 = Number.MaxValue;
    let mx = Number.MinValue;
    for(let i = 0; i < arr.length; i++) {
        if(arr[i] <= a) {
            b = a;
            a = arr[i];
        } else if(arr[i] <= b)
            b = a;
        mx = Math.max(mx, arr[i]);
    }
    return Math.min(a*b, a*mx);
}


let tests = [
    [
        [1, 2],
        2
    ],
    [
        [-2, 1, 0, -1],
        -2
    ],
    [
        [1, 2],
        2
    ],
    [
        [0, 1, 1, 5, -1, 2],
        10
    ],
    [
        [0, 1, 1, 5, -1, 2],
        10
    ]
]

console.log(""Starting tests..."")
for(let [ind, test] of tests.entries())
    if(maxProduct(test[0]) !== test[1])
        console.log(`WRONG TEST #${ind}: Expected ${test[1]}; got ${maxProduct(test[0])}`);
console.log(""Tests are done"")"
w42jM9xj,Reto UF3,VictorMunoz,C#,Friday 19th of April 2024 02:15:39 PM CDT,"using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI; // Librería necesaria para cargar elementos de la interfaz ('text')

public class Player2D : MonoBehaviour
{
    // Velocidad de la barra controladora
    public float vel;
    // Eje horizontal de movimiento de la barra
    protected float x_mov;
    // Bloqueo al tocar los limites horizontales
    private bool bloqDer, bloqIzq = false;
    // Número de toques
    private int nToques = 0;
    // Variable para mostrar la puntuación
    public GameObject puntuacion;

    // Start is called before the first frame update
    void Start()
    {
        // Definir velocidad inicial
        vel = 8.0f;
        // Definir tiempo inicial
        Time.timeScale = 1.0f;
    }

    // Update is called once per frame
    void Update()
    {
        // Obtener el valor de desplazamiento horizontal (entre -1 y 1). Se multiplica por el tiempo y velocidad para reducirlo y ajustarlo
        x_mov = Input.GetAxis(""Horizontal"") * Time.deltaTime * vel;

        // Si se selecciona el movimiento a la derecha (números positivos)
        if (x_mov > 0.0f) {
            // Comprobar que el movimiento a la derecha no esté bloqueado
            if (!bloqDer) {
                // Mover ESTE objeto (barra controladora)
                this.gameObject.transform.Translate(x_mov, 0.0f, 0.0f);
            }
        } 
        // Si se selecciona el movimiento a la izquierda (números negativos)
        else if (x_mov < 0.0f) {
            // Comprobar que el movimiento a la izquierda no esté bloqueado
            if (!bloqIzq) {
                // Mover ESTE objeto (barra controladora)
                this.gameObject.transform.Translate(x_mov, 0.0f, 0.0f);
            }
        }
    }

    // Método para manejar la colisión con las barras laterales (other)
    private void OnTriggerEnter2D(Collider2D other) {
        // Si OTHER tiene el tag ""LimiteDerecho"", activar bloqDer para bloquear el movimiento a la derecha
        if (other.gameObject.CompareTag(""LimiteDerecho"")) {
            bloqDer = true;
        }
        // Si OTHER tiene el tag ""LimiteIzquierdo"", activar bloqIzq para bloquear el movimiento a la izquierda
        if (other.gameObject.CompareTag(""LimiteIzquierdo"")) {
            bloqIzq = true;
        }
    }
    
    // Método para volver a permitir el movimiento cuando la barra no esté colisionando
    private void OnTriggerExit2D(Collider2D other) {
        // Si se ha apartado de ""LimiteDerecho"", poner bloqDer en false
        if (other.gameObject.CompareTag(""LimiteDerecho"")) {
            bloqDer = false;
        }
        // Si se ha apartado de ""LimiteIzquierdo"", poner bloqIzq en false
        if (other.gameObject.CompareTag(""LimiteIzquierdo"")) {
            bloqIzq = false;
        }
    }

    // Método para puntuar los toques con el balón
    private void OnCollisionEnter2D(Collision2D other) {
        // Si toca el objeto con el tag ""Balon""
        if (other.gameObject.CompareTag(""Balon"")) {
            // Incrementar el número de toques
            nToques++;
            // Asignar el número de toques al texto de puntuación
            // Como es un elemento de UI (dentro de un canvas) es necesario añadir la librería 'UnityEngine.UI'
            puntuacion.GetComponent<Text>().text = nToques.ToString();
        }
    }
}
"
1SqAu62p,Untitled,kirkarr,Lua,Friday 19th of April 2024 02:11:40 PM CDT,"v 0.437500 0.164062 0.765625
v -0.437500 0.164062 0.765625
v 0.500000 0.093750 0.687500
v -0.500000 0.093750 0.687500
v 0.546875 0.054688 0.578125
v -0.546875 0.054688 0.578125
v 0.351562 -0.023438 0.617188
v -0.351562 -0.023438 0.617188
v 0.351562 0.031250 0.718750
v -0.351562 0.031250 0.718750
v 0.351562 0.132812 0.781250
v -0.351562 0.132812 0.781250
v 0.273438 0.164062 0.796875
v -0.273438 0.164062 0.796875
v 0.203125 0.093750 0.742188
v -0.203125 0.093750 0.742188
v 0.156250 0.054688 0.648438
v -0.156250 0.054688 0.648438
v 0.078125 0.242188 0.656250
v -0.078125 0.242188 0.656250
v 0.140625 0.242188 0.742188
v -0.140625 0.242188 0.742188
v 0.242188 0.242188 0.796875
v -0.242188 0.242188 0.796875
v 0.273438 0.328125 0.796875
v -0.273438 0.328125 0.796875
v 0.203125 0.390625 0.742188
v -0.203125 0.390625 0.742188
v 0.156250 0.437500 0.648438
v -0.156250 0.437500 0.648438
v 0.351562 0.515625 0.617188
v -0.351562 0.515625 0.617188
v 0.351562 0.453125 0.718750
v -0.351562 0.453125 0.718750
v 0.351562 0.359375 0.781250
v -0.351562 0.359375 0.781250
v 0.437500 0.328125 0.765625
v -0.437500 0.328125 0.765625
v 0.500000 0.390625 0.687500
v -0.500000 0.390625 0.687500
v 0.546875 0.437500 0.578125
v -0.546875 0.437500 0.578125
v 0.625000 0.242188 0.562500
v -0.625000 0.242188 0.562500
v 0.562500 0.242188 0.671875
v -0.562500 0.242188 0.671875
v 0.468750 0.242188 0.757812
v -0.468750 0.242188 0.757812
v 0.476562 0.242188 0.773438
v -0.476562 0.242188 0.773438
v 0.445312 0.335938 0.781250
v -0.445312 0.335938 0.781250
v 0.351562 0.375000 0.804688
v -0.351562 0.375000 0.804688
v 0.265625 0.335938 0.820312
v -0.265625 0.335938 0.820312
v 0.226562 0.242188 0.820312
v -0.226562 0.242188 0.820312
v 0.265625 0.156250 0.820312
v -0.265625 0.156250 0.820312
v 0.351562 0.242188 0.828125
v -0.351562 0.242188 0.828125
v 0.351562 0.117188 0.804688
v -0.351562 0.117188 0.804688
v 0.445312 0.156250 0.781250
v -0.445312 0.156250 0.781250
v 0.000000 0.429688 0.742188
v 0.000000 0.351562 0.820312
v 0.000000 -0.679688 0.734375
v 0.000000 -0.320312 0.781250
v 0.000000 -0.187500 0.796875
v 0.000000 -0.773438 0.718750
v 0.000000 0.406250 0.601562
v 0.000000 0.570312 0.570312
v 0.000000 0.898438 -0.546875
v 0.000000 0.562500 -0.851562
v 0.000000 0.070312 -0.828125
v 0.000000 -0.382812 -0.351562
v 0.203125 -0.187500 0.562500
v -0.203125 -0.187500 0.562500
v 0.312500 -0.437500 0.570312
v -0.312500 -0.437500 0.570312
v 0.351562 -0.695312 0.570312
v -0.351562 -0.695312 0.570312
v 0.367188 -0.890625 0.531250
v -0.367188 -0.890625 0.531250
v 0.328125 -0.945312 0.523438
v -0.328125 -0.945312 0.523438
v 0.179688 -0.968750 0.554688
v -0.179688 -0.968750 0.554688
v 0.000000 -0.984375 0.578125
v 0.437500 -0.140625 0.531250
v -0.437500 -0.140625 0.531250
v 0.632812 -0.039062 0.539062
v -0.632812 -0.039062 0.539062
v 0.828125 0.148438 0.445312
v -0.828125 0.148438 0.445312
v 0.859375 0.429688 0.593750
v -0.859375 0.429688 0.593750
v 0.710938 0.484375 0.625000
v -0.710938 0.484375 0.625000
v 0.492188 0.601562 0.687500
v -0.492188 0.601562 0.687500
v 0.320312 0.757812 0.734375
v -0.320312 0.757812 0.734375
v 0.156250 0.718750 0.757812
v -0.156250 0.718750 0.757812
v 0.062500 0.492188 0.750000
v -0.062500 0.492188 0.750000
v 0.164062 0.414062 0.773438
v -0.164062 0.414062 0.773438
v 0.125000 0.304688 0.765625
v -0.125000 0.304688 0.765625
v 0.203125 0.093750 0.742188
v -0.203125 0.093750 0.742188
v 0.375000 0.015625 0.703125
v -0.375000 0.015625 0.703125
v 0.492188 0.062500 0.671875
v -0.492188 0.062500 0.671875
v 0.625000 0.187500 0.648438
v -0.625000 0.187500 0.648438
v 0.640625 0.296875 0.648438
v -0.640625 0.296875 0.648438
v 0.601562 0.375000 0.664062
v -0.601562 0.375000 0.664062
v 0.429688 0.437500 0.718750
v -0.429688 0.437500 0.718750
v 0.250000 0.468750 0.757812
v -0.250000 0.468750 0.757812
v 0.000000 -0.765625 0.734375
v 0.109375 -0.718750 0.734375
v -0.109375 -0.718750 0.734375
v 0.117188 -0.835938 0.710938
v -0.117188 -0.835938 0.710938
v 0.062500 -0.882812 0.695312
v -0.062500 -0.882812 0.695312
v 0.000000 -0.890625 0.687500
v 0.000000 -0.195312 0.750000
v 0.000000 -0.140625 0.742188
v 0.101562 -0.148438 0.742188
v -0.101562 -0.148438 0.742188
v 0.125000 -0.226562 0.750000
v -0.125000 -0.226562 0.750000
v 0.085938 -0.289062 0.742188
v -0.085938 -0.289062 0.742188
v 0.398438 -0.046875 0.671875
v -0.398438 -0.046875 0.671875
v 0.617188 0.054688 0.625000
v -0.617188 0.054688 0.625000
v 0.726562 0.203125 0.601562
v -0.726562 0.203125 0.601562
v 0.742188 0.375000 0.656250
v -0.742188 0.375000 0.656250
v 0.687500 0.414062 0.726562
v -0.687500 0.414062 0.726562
v 0.437500 0.546875 0.796875
v -0.437500 0.546875 0.796875
v 0.312500 0.640625 0.835938
v -0.312500 0.640625 0.835938
v 0.203125 0.617188 0.851562
v -0.203125 0.617188 0.851562
v 0.101562 0.429688 0.843750
v -0.101562 0.429688 0.843750
v 0.125000 -0.101562 0.812500
v -0.125000 -0.101562 0.812500
v 0.210938 -0.445312 0.710938
v -0.210938 -0.445312 0.710938
v 0.250000 -0.703125 0.687500
v -0.250000 -0.703125 0.687500
v 0.265625 -0.820312 0.664062
v -0.265625 -0.820312 0.664062
v 0.234375 -0.914062 0.632812
v -0.234375 -0.914062 0.632812
v 0.164062 -0.929688 0.632812
v -0.164062 -0.929688 0.632812
v 0.000000 -0.945312 0.640625
v 0.000000 0.046875 0.726562
v 0.000000 0.210938 0.765625
v 0.328125 0.476562 0.742188
v -0.328125 0.476562 0.742188
v 0.164062 0.140625 0.750000
v -0.164062 0.140625 0.750000
v 0.132812 0.210938 0.757812
v -0.132812 0.210938 0.757812
v 0.117188 -0.687500 0.734375
v -0.117188 -0.687500 0.734375
v 0.078125 -0.445312 0.750000
v -0.078125 -0.445312 0.750000
v 0.000000 -0.445312 0.750000
v 0.000000 -0.328125 0.742188
v 0.093750 -0.273438 0.781250
v -0.093750 -0.273438 0.781250
v 0.132812 -0.226562 0.796875
v -0.132812 -0.226562 0.796875
v 0.109375 -0.132812 0.781250
v -0.109375 -0.132812 0.781250
v 0.039062 -0.125000 0.781250
v -0.039062 -0.125000 0.781250
v 0.000000 -0.203125 0.828125
v 0.046875 -0.148438 0.812500
v -0.046875 -0.148438 0.812500
v 0.093750 -0.156250 0.812500
v -0.093750 -0.156250 0.812500
v 0.109375 -0.226562 0.828125
v -0.109375 -0.226562 0.828125
v 0.078125 -0.250000 0.804688
v -0.078125 -0.250000 0.804688
v 0.000000 -0.289062 0.804688
v 0.257812 -0.312500 0.554688
v -0.257812 -0.312500 0.554688
v 0.164062 -0.242188 0.710938
v -0.164062 -0.242188 0.710938
v 0.179688 -0.312500 0.710938
v -0.179688 -0.312500 0.710938
v 0.234375 -0.250000 0.554688
v -0.234375 -0.250000 0.554688
v 0.000000 -0.875000 0.687500
v 0.046875 -0.867188 0.687500
v -0.046875 -0.867188 0.687500
v 0.093750 -0.820312 0.710938
v -0.093750 -0.820312 0.710938
v 0.093750 -0.742188 0.726562
v -0.093750 -0.742188 0.726562
v 0.000000 -0.781250 0.656250
v 0.093750 -0.750000 0.664062
v -0.093750 -0.750000 0.664062
v 0.093750 -0.812500 0.640625
v -0.093750 -0.812500 0.640625
v 0.046875 -0.851562 0.632812
v -0.046875 -0.851562 0.632812
v 0.000000 -0.859375 0.632812
v 0.171875 0.218750 0.781250
v -0.171875 0.218750 0.781250
v 0.187500 0.156250 0.773438
v -0.187500 0.156250 0.773438
v 0.335938 0.429688 0.757812
v -0.335938 0.429688 0.757812
v 0.273438 0.421875 0.773438
v -0.273438 0.421875 0.773438
v 0.421875 0.398438 0.773438
v -0.421875 0.398438 0.773438
v 0.562500 0.351562 0.695312
v -0.562500 0.351562 0.695312
v 0.585938 0.289062 0.687500
v -0.585938 0.289062 0.687500
v 0.578125 0.195312 0.679688
v -0.578125 0.195312 0.679688
v 0.476562 0.101562 0.718750
v -0.476562 0.101562 0.718750
v 0.375000 0.062500 0.742188
v -0.375000 0.062500 0.742188
v 0.226562 0.109375 0.781250
v -0.226562 0.109375 0.781250
v 0.179688 0.296875 0.781250
v -0.179688 0.296875 0.781250
v 0.210938 0.375000 0.781250
v -0.210938 0.375000 0.781250
v 0.234375 0.359375 0.757812
v -0.234375 0.359375 0.757812
v 0.195312 0.296875 0.757812
v -0.195312 0.296875 0.757812
v 0.242188 0.125000 0.757812
v -0.242188 0.125000 0.757812
v 0.375000 0.085938 0.726562
v -0.375000 0.085938 0.726562
v 0.460938 0.117188 0.703125
v -0.460938 0.117188 0.703125
v 0.546875 0.210938 0.671875
v -0.546875 0.210938 0.671875
v 0.554688 0.281250 0.671875
v -0.554688 0.281250 0.671875
v 0.531250 0.335938 0.679688
v -0.531250 0.335938 0.679688
v 0.414062 0.390625 0.750000
v -0.414062 0.390625 0.750000
v 0.281250 0.398438 0.765625
v -0.281250 0.398438 0.765625
v 0.335938 0.406250 0.750000
v -0.335938 0.406250 0.750000
v 0.203125 0.171875 0.750000
v -0.203125 0.171875 0.750000
v 0.195312 0.226562 0.750000
v -0.195312 0.226562 0.750000
v 0.109375 0.460938 0.609375
v -0.109375 0.460938 0.609375
v 0.195312 0.664062 0.617188
v -0.195312 0.664062 0.617188
v 0.335938 0.687500 0.593750
v -0.335938 0.687500 0.593750
v 0.484375 0.554688 0.554688
v -0.484375 0.554688 0.554688
v 0.679688 0.453125 0.492188
v -0.679688 0.453125 0.492188
v 0.796875 0.406250 0.460938
v -0.796875 0.406250 0.460938
v 0.773438 0.164062 0.375000
v -0.773438 0.164062 0.375000
v 0.601562 0.000000 0.414062
v -0.601562 0.000000 0.414062
v 0.437500 -0.093750 0.468750
v -0.437500 -0.093750 0.468750
v 0.000000 0.898438 0.289062
v 0.000000 0.984375 -0.078125
v 0.000000 -0.195312 -0.671875
v 0.000000 -0.460938 0.187500
v 0.000000 -0.976562 0.460938
v 0.000000 -0.804688 0.343750
v 0.000000 -0.570312 0.320312
v 0.000000 -0.484375 0.281250
v 0.851562 0.234375 0.054688
v -0.851562 0.234375 0.054688
v 0.859375 0.320312 -0.046875
v -0.859375 0.320312 -0.046875
v 0.773438 0.265625 -0.437500
v -0.773438 0.265625 -0.437500
v 0.460938 0.437500 -0.703125
v -0.460938 0.437500 -0.703125
v 0.734375 -0.046875 0.070312
v -0.734375 -0.046875 0.070312
v 0.593750 -0.125000 -0.164062
v -0.593750 -0.125000 -0.164062
v 0.640625 -0.007812 -0.429688
v -0.640625 -0.007812 -0.429688
v 0.335938 0.054688 -0.664062
v -0.335938 0.054688 -0.664062
v 0.234375 -0.351562 0.406250
v -0.234375 -0.351562 0.406250
v 0.179688 -0.414062 0.257812
v -0.179688 -0.414062 0.257812
v 0.289062 -0.710938 0.382812
v -0.289062 -0.710938 0.382812
v 0.250000 -0.500000 0.390625
v -0.250000 -0.500000 0.390625
v 0.328125 -0.914062 0.398438
v -0.328125 -0.914062 0.398438
v 0.140625 -0.757812 0.367188
v -0.140625 -0.757812 0.367188
v 0.125000 -0.539062 0.359375
v -0.125000 -0.539062 0.359375
v 0.164062 -0.945312 0.437500
v -0.164062 -0.945312 0.437500
v 0.218750 -0.281250 0.429688
v -0.218750 -0.281250 0.429688
v 0.210938 -0.226562 0.468750
v -0.210938 -0.226562 0.468750
v 0.203125 -0.171875 0.500000
v -0.203125 -0.171875 0.500000
v 0.210938 -0.390625 0.164062
v -0.210938 -0.390625 0.164062
v 0.296875 -0.312500 -0.265625
v -0.296875 -0.312500 -0.265625
v 0.343750 -0.148438 -0.539062
v -0.343750 -0.148438 -0.539062
v 0.453125 0.867188 -0.382812
v -0.453125 0.867188 -0.382812
v 0.453125 0.929688 -0.070312
v -0.453125 0.929688 -0.070312
v 0.453125 0.851562 0.234375
v -0.453125 0.851562 0.234375
v 0.460938 0.523438 0.429688
v -0.460938 0.523438 0.429688
v 0.726562 0.406250 0.335938
v -0.726562 0.406250 0.335938
v 0.632812 0.453125 0.281250
v -0.632812 0.453125 0.281250
v 0.640625 0.703125 0.054688
v -0.640625 0.703125 0.054688
v 0.796875 0.562500 0.125000
v -0.796875 0.562500 0.125000
v 0.796875 0.617188 -0.117188
v -0.796875 0.617188 -0.117188
v 0.640625 0.750000 -0.195312
v -0.640625 0.750000 -0.195312
v 0.640625 0.679688 -0.445312
v -0.640625 0.679688 -0.445312
v 0.796875 0.539062 -0.359375
v -0.796875 0.539062 -0.359375
v 0.617188 0.328125 -0.585938
v -0.617188 0.328125 -0.585938
v 0.484375 0.023438 -0.546875
v -0.484375 0.023438 -0.546875
v 0.820312 0.328125 -0.203125
v -0.820312 0.328125 -0.203125
v 0.406250 -0.171875 0.148438
v -0.406250 -0.171875 0.148438
v 0.429688 -0.195312 -0.210938
v -0.429688 -0.195312 -0.210938
v 0.890625 0.406250 -0.234375
v -0.890625 0.406250 -0.234375
v 0.773438 -0.140625 -0.125000
v -0.773438 -0.140625 -0.125000
v 1.039062 -0.101562 -0.328125
v -1.039062 -0.101562 -0.328125
v 1.281250 0.054688 -0.429688
v -1.281250 0.054688 -0.429688
v 1.351562 0.320312 -0.421875
v -1.351562 0.320312 -0.421875
v 1.234375 0.507812 -0.421875
v -1.234375 0.507812 -0.421875
v 1.023438 0.476562 -0.312500
v -1.023438 0.476562 -0.312500
v 1.015625 0.414062 -0.289062
v -1.015625 0.414062 -0.289062
v 1.187500 0.437500 -0.390625
v -1.187500 0.437500 -0.390625
v 1.265625 0.289062 -0.406250
v -1.265625 0.289062 -0.406250
v 1.210938 0.078125 -0.406250
v -1.210938 0.078125 -0.406250
v 1.031250 -0.039062 -0.304688
v -1.031250 -0.039062 -0.304688
v 0.828125 -0.070312 -0.132812
v -0.828125 -0.070312 -0.132812
v 0.921875 0.359375 -0.218750
v -0.921875 0.359375 -0.218750
v 0.945312 0.304688 -0.289062
v -0.945312 0.304688 -0.289062
v 0.882812 -0.023438 -0.210938
v -0.882812 -0.023438 -0.210938
v 1.039062 0.000000 -0.367188
v -1.039062 0.000000 -0.367188
v 1.187500 0.093750 -0.445312
v -1.187500 0.093750 -0.445312
v 1.234375 0.250000 -0.445312
v -1.234375 0.250000 -0.445312
v 1.171875 0.359375 -0.437500
v -1.171875 0.359375 -0.437500
v 1.023438 0.343750 -0.359375
v -1.023438 0.343750 -0.359375
v 0.843750 0.289062 -0.210938
v -0.843750 0.289062 -0.210938
v 0.835938 0.171875 -0.273438
v -0.835938 0.171875 -0.273438
v 0.757812 0.093750 -0.273438
v -0.757812 0.093750 -0.273438
v 0.820312 0.085938 -0.273438
v -0.820312 0.085938 -0.273438
v 0.843750 0.015625 -0.273438
v -0.843750 0.015625 -0.273438
v 0.812500 -0.015625 -0.273438
v -0.812500 -0.015625 -0.273438
v 0.726562 0.000000 -0.070312
v -0.726562 0.000000 -0.070312
v 0.718750 -0.023438 -0.171875
v -0.718750 -0.023438 -0.171875
v 0.718750 0.039062 -0.187500
v -0.718750 0.039062 -0.187500
v 0.796875 0.203125 -0.210938
v -0.796875 0.203125 -0.210938
v 0.890625 0.242188 -0.265625
v -0.890625 0.242188 -0.265625
v 0.890625 0.234375 -0.320312
v -0.890625 0.234375 -0.320312
v 0.812500 -0.015625 -0.320312
v -0.812500 -0.015625 -0.320312
v 0.851562 0.015625 -0.320312
v -0.851562 0.015625 -0.320312
v 0.828125 0.078125 -0.320312
v -0.828125 0.078125 -0.320312
v 0.765625 0.093750 -0.320312
v -0.765625 0.093750 -0.320312
v 0.843750 0.171875 -0.320312
v -0.843750 0.171875 -0.320312
v 1.039062 0.328125 -0.414062
v -1.039062 0.328125 -0.414062
v 1.187500 0.343750 -0.484375
v -1.187500 0.343750 -0.484375
v 1.257812 0.242188 -0.492188
v -1.257812 0.242188 -0.492188
v 1.210938 0.085938 -0.484375
v -1.210938 0.085938 -0.484375
v 1.046875 0.000000 -0.421875
v -1.046875 0.000000 -0.421875
v 0.882812 -0.015625 -0.265625
v -0.882812 -0.015625 -0.265625
v 0.953125 0.289062 -0.343750
v -0.953125 0.289062 -0.343750
v 0.890625 0.109375 -0.328125
v -0.890625 0.109375 -0.328125
v 0.937500 0.062500 -0.335938
v -0.937500 0.062500 -0.335938
v 1.000000 0.125000 -0.367188
v -1.000000 0.125000 -0.367188
v 0.960938 0.171875 -0.351562
v -0.960938 0.171875 -0.351562
v 1.015625 0.234375 -0.375000
v -1.015625 0.234375 -0.375000
v 1.054688 0.187500 -0.382812
v -1.054688 0.187500 -0.382812
v 1.109375 0.210938 -0.390625
v -1.109375 0.210938 -0.390625
v 1.085938 0.273438 -0.390625
v -1.085938 0.273438 -0.390625
v 1.023438 0.437500 -0.484375
v -1.023438 0.437500 -0.484375
v 1.250000 0.468750 -0.546875
v -1.250000 0.468750 -0.546875
v 1.367188 0.296875 -0.500000
v -1.367188 0.296875 -0.500000
v 1.312500 0.054688 -0.531250
v -1.312500 0.054688 -0.531250
v 1.039062 -0.085938 -0.492188
v -1.039062 -0.085938 -0.492188
v 0.789062 -0.125000 -0.328125
v -0.789062 -0.125000 -0.328125
v 0.859375 0.382812 -0.382812
v -0.859375 0.382812 -0.382812"
F6F3HjmG,Untitled,vpeter,Bash,Friday 19th of April 2024 01:59:54 PM CDT,"need on dirty build

./scripts/clean TexturePacker

--- a/tools/depends/native/TexturePacker/src/TexturePacker.cpp	2024-04-19 20:58:28.914534551 +0200
+++ b/tools/depends/native/TexturePacker/src/TexturePacker.cpp	2024-04-19 21:00:15.099483818 +0200
@@ -312,7 +312,7 @@ int TexturePacker::createBundle(const st
       continue;
     }
 
-    printf(""%s\n"", output.c_str());
+    //printf(""%s\n"", output.c_str());
     bool skip=false;
     if (m_dupecheck)
     {
@@ -322,7 +322,7 @@ int TexturePacker::createBundle(const st
 
       if (CheckDupe(&ctx, i))
       {
-        printf(""****  duplicate of %s\n"", files[m_dupes[i]].GetPath().c_str());
+        //printf(""****  duplicate of %s\n"", files[m_dupes[i]].GetPath().c_str());
         file.GetFrames().insert(file.GetFrames().end(),
                                 files[m_dupes[i]].GetFrames().begin(),
                                 files[m_dupes[i]].GetFrames().end());
@@ -340,11 +340,11 @@ int TexturePacker::createBundle(const st
       {
         CXBTFFrame frame = CreateXBTFFrame(frames.frameList[j], writer);
         file.GetFrames().push_back(frame);
-        printf(""    frame %4i (delay:%4i)                         %s%c (%d,%d @ %"" PRIu64
-               "" bytes)\n"",
-               j, frame.GetDuration(), GetFormatString(frame.GetFormat()),
-               frame.HasAlpha() ? ' ' : '*', frame.GetWidth(), frame.GetHeight(),
-               frame.GetUnpackedSize());
+        //printf(""    frame %4i (delay:%4i)                         %s%c (%d,%d @ %"" PRIu64
+        //       "" bytes)\n"",
+        //       j, frame.GetDuration(), GetFormatString(frame.GetFormat()),
+        //       frame.HasAlpha() ? ' ' : '*', frame.GetWidth(), frame.GetHeight(),
+        //       frame.GetUnpackedSize());
       }
     }
     file.SetLoop(0);
"
zj7a5rSz,klicova_slova.sql,KitSaels,SQL,Friday 19th of April 2024 01:46:28 PM CDT,"INSERT INTO xhorak_klicova_slova (knihy_id, vyrazy_id) VALUES
('13','541'),
('13','542'),
('13','543'),
('13','544'),
('13','545'),
('16','20'),
('16','443'),
('16','590'),
('16','591'),
('17','44'),
('17','56'),
('17','58'),
('17','210'),
('20','175'),
('20','176'),
('32','24'),
('32','26'),
('36','227'),
('42','97'),
('42','150'),
('42','209'),
('44','21'),
('44','285'),
('44','286'),
('44','287'),
('44','288'),
('46','148'),
('46','149'),
('58','27'),
('58','28'),
('58','29'),
('60','82'),
('60','84'),
('60','133'),
('60','429'),
('60','435'),
('66','27'),
('66','171'),
('67','14'),
('67','15'),
('67','16'),
('74','20'),
('74','47'),
('74','70'),
('75','259'),
('75','301'),
('89','121'),
('89','122'),
('90','121'),
('90','122'),
('95','26'),
('95','146'),
('96','26'),
('96','264'),
('96','265'),
('96','266'),
('96','267'),
('96','268'),
('96','269'),
('96','270'),
('99','146'),
('99','271'),
('99','373'),
('99','374'),
('100','55'),
('100','436'),
('102','32'),
('102','558'),
('109','150'),
('109','212'),
('109','285'),
('109','441'),
('110','146'),
('110','373'),
('111','88'),
('111','324'),
('118','21'),
('118','170'),
('118','442'),
('128','444'),
('129','32'),
('129','82'),
('129','483'),
('141','320'),
('143','32'),
('143','369'),
('143','424'),
('159','296'),
('166','67'),
('166','72'),
('166','73'),
('171','477'),
('171','501'),
('171','505'),
('171','506'),
('180','206'),
('180','462'),
('182','119'),
('182','157'),
('192','33'),
('192','34'),
('197','85'),
('197','86'),
('197','371'),
('197','420'),
('206','123'),
('206','124'),
('214','477'),
('214','478'),
('214','479'),
('218','20'),
('218','66'),
('221','43'),
('221','265'),
('224','98'),
('224','400'),
('224','401'),
('230','176'),
('230','260'),
('230','397'),
('230','398'),
('230','399'),
('231','125'),
('231','398'),
('234','43'),
('234','445'),
('234','446'),
('240','62'),
('240','76'),
('240','120'),
('240','150'),
('240','219'),
('246','27'),
('246','171'),
('247','35'),
('247','172'),
('248','62'),
('248','181'),
('248','358'),
('248','368'),
('248','369'),
('248','370'),
('262','352'),
('262','454'),
('266','395'),
('266','396'),
('277','216'),
('278','60'),
('278','185'),
('278','186'),
('278','187'),
('278','188'),
('278','189'),
('278','190'),
('283','26'),
('283','47'),
('290','208'),
('290','243'),
('290','244'),
('290','245'),
('309','26'),
('309','133'),
('314','174'),
('316','137'),
('316','138'),
('316','139'),
('319','468'),
('319','469'),
('323','180'),
('323','421'),
('326','538'),
('326','539'),
('326','540'),
('333','165'),
('333','166'),
('337','27'),
('337','29'),
('337','30'),
('339','269'),
('339','364'),
('339','366'),
('340','184'),
('350','430'),
('350','431'),
('350','432'),
('350','433'),
('364','163'),
('364','223'),
('364','224'),
('364','225'),
('367','24'),
('367','473'),
('367','474'),
('373','57'),
('373','533'),
('373','534'),
('379','324'),
('379','389'),
('379','390'),
('379','391'),
('379','392'),
('385','44'),
('385','45'),
('385','158'),
('398','70'),
('398','171'),
('399','70'),
('399','171'),
('400','70'),
('400','171'),
('405','20'),
('405','21'),
('407','163'),
('408','163'),
('409','161'),
('409','405'),
('409','406'),
('409','408'),
('412','301'),
('413','146'),
('413','147'),
('423','292'),
('423','293'),
('425','140'),
('425','141'),
('454','26'),
('454','70'),
('454','71'),
('455','334'),
('457','208'),
('457','236'),
('457','352'),
('457','460'),
('486','352'),
('486','457'),
('486','458'),
('489','425'),
('489','426'),
('489','427'),
('489','428'),
('489','429'),
('517','163'),
('519','5'),
('519','226'),
('519','227'),
('519','228'),
('527','380'),
('527','381'),
('527','382'),
('527','383'),
('527','384'),
('527','385'),
('527','386'),
('527','387'),
('527','388'),
('528','88'),
('528','326'),
('531','294'),
('531','295'),
('543','409'),
('543','481'),
('543','482'),
('545','222'),
('545','263'),
('554','126'),
('554','159'),
('556','43'),
('556','49'),
('556','265'),
('556','379'),
('560','236'),
('560','243'),
('560','245'),
('560','422'),
('565','236'),
('565','237'),
('586','122'),
('586','231'),
('586','232'),
('586','233'),
('586','234'),
('588','88'),
('588','299'),
('588','301'),
('590','163'),
('611','58'),
('611','74'),
('611','303'),
('612','21'),
('612','56'),
('612','58'),
('620','121'),
('622','74'),
('639','21'),
('639','44'),
('639','115'),
('639','336'),
('639','337'),
('655','44'),
('655','58'),
('655','97'),
('655','513'),
('658','232'),
('658','235'),
('662','48'),
('662','356'),
('662','357'),
('662','358'),
('663','120'),
('663','409'),
('663','410'),
('663','411'),
('663','412'),
('671','94'),
('671','220'),
('671','221'),
('681','152'),
('681','164'),
('688','70'),
('688','208'),
('688','332'),
('688','333'),
('690','161'),
('690','180'),
('701','26'),
('706','124'),
('706','126'),
('706','213'),
('706','218'),
('708','97'),
('708','340'),
('709','120'),
('709','150'),
('709','151'),
('713','139'),
('727','269'),
('727','352'),
('727','364'),
('731','249'),
('731','250'),
('731','251'),
('731','252'),
('733','43'),
('733','239'),
('733','240'),
('734','43'),
('735','20'),
('735','21'),
('735','282'),
('735','338'),
('740','1'),
('740','295'),
('740','341'),
('740','342'),
('743','20'),
('743','70'),
('743','444'),
('745','20'),
('745','70'),
('745','444'),
('752','219'),
('755','477'),
('755','500'),
('755','501'),
('755','502'),
('755','503'),
('757','62'),
('757','133'),
('757','216'),
('757','464'),
('757','465'),
('757','466'),
('763','26'),
('763','68'),
('763','520'),
('781','3'),
('781','8'),
('788','36'),
('788','37'),
('789','53'),
('789','455'),
('789','456'),
('800','204'),
('800','423'),
('812','22'),
('812','47'),
('812','207'),
('812','601'),
('812','602'),
('826','66'),
('826','180'),
('826','329'),
('834','27'),
('834','35'),
('835','26'),
('835','442'),
('835','462'),
('835','515'),
('835','516'),
('856','36'),
('856','37'),
('856','88'),
('856','347'),
('856','348'),
('863','152'),
('863','153'),
('874','236'),
('874','327'),
('886','413'),
('886','414'),
('886','415'),
('907','26'),
('907','124'),
('907','313'),
('912','161'),
('912','162'),
('916','56'),
('923','76'),
('923','361'),
('928','33'),
('928','182'),
('937','49'),
('937','121'),
('937','122'),
('938','108'),
('938','109'),
('938','110'),
('939','106'),
('939','107'),
('939','108'),
('939','109'),
('950','24'),
('950','25'),
('950','26'),
('959','518'),
('959','519'),
('967','27'),
('967','31'),
('997','44'),
('997','509'),
('997','510'),
('997','511'),
('1006','171'),
('1006','532'),
('1012','20'),
('1012','46'),
('1012','70'),
('1024','308'),
('1024','309'),
('1034','297'),
('1034','298'),
('1042','21'),
('1042','113'),
('1045','161'),
('1045','402'),
('1045','403'),
('1045','404'),
('1045','405'),
('1045','406'),
('1045','407'),
('1052','53'),
('1052','54'),
('1054','76'),
('1054','77'),
('1054','78'),
('1063','44'),
('1063','45'),
('1063','46'),
('1065','51'),
('1065','52'),
('1067','56'),
('1067','57'),
('1067','58'),
('1069','62'),
('1069','63'),
('1071','21'),
('1071','26'),
('1071','55'),
('1077','75'),
('1077','85'),
('1077','86'),
('1078','78'),
('1078','87'),
('1080','87'),
('1080','88'),
('1080','89'),
('1080','90'),
('1081','80'),
('1084','1'),
('1084','91'),
('1085','1'),
('1085','60'),
('1086','1'),
('1088','2'),
('1088','59'),
('1089','2'),
('1089','59'),
('1090','1'),
('1090','2'),
('1091','92'),
('1091','93'),
('1091','94'),
('1093','102'),
('1096','113'),
('1100','125'),
('1100','126'),
('1101','123'),
('1101','127'),
('1103','113'),
('1104','21'),
('1104','113'),
('1105','21'),
('1105','113'),
('1106','128'),
('1106','129'),
('1106','130'),
('1107','131'),
('1108','132'),
('1109','21'),
('1109','76'),
('1109','133'),
('1110','134'),
('1114','54'),
('1117','21'),
('1117','208'),
('1117','561'),
('1118','54'),
('1120','21'),
('1120','562'),
('1123','113'),
('1123','161'),
('1123','170'),
('1125','308'),
('1126','161'),
('1127','565'),
('1127','566'),
('1127','567'),
('1129','47'),
('1136','113'),
('1143','21'),
('1143','47'),
('1143','48'),
('1144','21'),
('1144','208'),
('1144','245'),
('1144','352'),
('1144','575'),
('1146','21'),
('1146','207'),
('1150','21'),
('1150','576'),
('1152','47'),
('1152','419'),
('1152','578'),
('1153','108'),
('1153','579'),
('1158','583'),
('1160','32'),
('1160','82'),
('1160','585'),
('1160','586'),
('1164','76'),
('1164','433'),
('1167','592'),
('1169','199'),
('1170','58'),
('1172','54'),
('1172','64'),
('1172','562'),
('1174','2'),
('1174','88'),
('1174','423'),
('1182','32'),
('1182','604'),
('1192','308'),
('1192','610'),
('1246','20'),
('1246','66'),
('1250','56'),
('1250','613'),
('1250','614'),
('1259','20'),
('1259','21'),
('1264','176'),
('1265','176'),
('1267','370'),
('1271','260'),
('1271','261'),
('1278','106'),
('1278','625'),
('1278','627'),
('1280','94'),
('1280','227'),
('1281','646'),
('1283','21'),
('1283','145'),
('1283','171'),
('1285','21'),
('1285','158'),
('1285','170'),
('1286','20'),
('1286','21'),
('1286','639'),
('1292','21'),
('1292','158'),
('1292','645'),
('1301','649'),
('1302','96'),
('1302','308'),
('1302','650'),
('1302','653'),
('1303','656'),
('1303','657'),
('1303','658'),
('1305','659'),
('1305','660'),
('1305','661'),
('1307','21'),
('1307','238'),
('1315','120'),
('1315','340'),
('1315','667'),
('1318','670'),
('1318','671'),
('1319','152'),
('1319','672'),
('1321','21'),
('1321','43'),
('1322','21'),
('1322','240'),
('1325','170'),
('1325','560'),
('1330','21'),
('1330','681'),
('1330','682'),
('1333','21'),
('1333','689'),
('1336','692'),
('1336','693'),
('1337','113'),
('1337','161'),
('1341','650'),
('1341','701'),
('1343','161'),
('1343','702'),
('1344','28'),
('1344','704'),
('1345','705'),
('1385','97'),
('1423','20'),
('1423','21'),
('1423','56'),
('1423','147'),
('1423','713'),
('1453','152'),
('1453','657'),
('1502','712'),
('1506','49'),
('1506','132'),
('1539','714'),
('1539','715');
"
vQAtqhJw,Roblox Universal Script GUI Anti Afk etc,quikzyYTbtw,Lua,Friday 19th of April 2024 01:44:11 PM CDT,"-- i randomly made a small GUI with some universal features 
-- kinda open sourced
loadstring(game:HttpGet((""https://raw.githubusercontent.com/venoxw/venoxw/main/test"")))()"
Arx3uFZG,clear_temp,Python253,Python,Friday 19th of April 2024 01:41:46 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: clear_temp.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
This script is designed to find and optionally remove temporary files in Windows system's temporary directories.

Requirements:
- Python 3.x installed on the system.
- The script is intended to run on Windows due to its reliance on Windows environment variables.

Functions:
- get_temp_directories(): Retrieves the temporary directories on the Windows system.
- get_files_in_temp_directories(): Finds all files in the temporary directories.
- print_files(files): Prints the files found in temporary directories.
- remove_temp_files(): Prompts the user whether to remove all temporary files found. If the user agrees, it attempts to delete each file.

Usage:
1: Save the script as ""clear_temp.py"".
2: Run the script using Python.
3: Follow the prompts to view the temporary files and choose whether to delete them.

Additional Notes:
- Be cautious when deleting temporary files, as some may be in use by running applications.
- Deleting certain temporary files may cause unexpected behavior in applications that rely on them.
- The script permanently deletes files; they are not moved to the system's Recycle Bin.
""""""

import os

def get_temp_directories():
    """"""
    Retrieves the temporary directories on the Windows system.

    Returns:
        list: A list of temporary directories.
    """"""
    temp_dirs = []
    for temp_var in ['TEMP', 'TMP']:
        if temp_var in os.environ:
            temp_dirs.append(os.environ[temp_var])
    return temp_dirs

def get_files_in_temp_directories():
    """"""
    Finds all files in the temporary directories.

    Returns:
        list: A list of tuples containing file paths and sizes.
    """"""
    temp_dirs = get_temp_directories()
    files = []
    for temp_dir in temp_dirs:
        for root, _, filenames in os.walk(temp_dir):
            for filename in filenames:
                file_path = os.path.join(root, filename)
                file_size = os.path.getsize(file_path)
                files.append((file_path, file_size))
    return files

def print_files(files):
    """"""
    Prints the files found in temporary directories.

    Args:
        files (list): A list of tuples containing file paths and sizes.
    """"""
    if not files:
        print(""\nNo files found in temp directories.\n"")
    else:
        print(""\nFiles in temp directories:\n"")
        for file_path, file_size in files:
            print(f""{file_path} - {file_size} bytes"")

def remove_temp_files():
    """"""
    Prompts the user whether to remove all temporary files found.

    If the user agrees, it attempts to delete each file.
    """"""
    files = get_files_in_temp_directories()
    print_files(files)
    if files:
        choice = input(""\nDo you want to attempt to remove all temp files?\n\n1: Yes\n2: No\n\nMake your selection (1 or 2): "").strip().lower()
        if choice == ""1"":
            deleted_count = 0
            for file_path, _ in files:
                if os.path.exists(file_path):  # Check if file exists before attempting to delete
                    try:
                        os.remove(file_path)
                        deleted_count += 1
                    except Exception as e:
                        pass  # Ignore errors during deletion
            if deleted_count == 1:
                files_text = ""file""
            else:
                files_text = ""files""
            print(f""\n- Deleted {deleted_count} {files_text}.\n"")
            not_deleted_count = len(files) - deleted_count
            if not_deleted_count > 0:
                if not_deleted_count == 1:
                    files_text = ""file""
                else:
                    files_text = ""files""
                print(f""\n- {not_deleted_count} file(s) were not deleted due to being in use by the system.\n"")
                print(""\nYou can manually delete them with elevated permissions, but be cautious as it may lead to undesirable effects on the system.\n"")
        else:
            print(""\nNo files were deleted.\n"")

remove_temp_files()
"
xJx5L4eM,make_temp,Python253,Python,Friday 19th of April 2024 01:41:09 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: make_temp.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script creates a simple text file containing specified content and saves it to the system's temporary directory.

Requirements:
- Python 3.x installed on the system.

Functions:
- create_test_file(content=""""): Creates a sample text file with the specified content
(default is ""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY"") and saves it to the system's temporary directory.
Returns the path of the created file.
- echo_file_content(file_path): Outputs the content of the specified file to the terminal.

Usage:
1. Save the script as ""make_temp.py"".
2. Run the script using Python.
3. The script will create a test file in the temporary directory.
4. The content of this file will be output to the terminal.

Additional Notes:
- Not all files will be removed since many are in use by the system and you will need elevated permissions to delete them.
- Be cautious when running scripts that create files in the temporary directory, as they may clutter the system if not handled properly.
""""""

import os
import tempfile

def create_test_file(content=""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY""):
    """"""
    Creates a test file with the specified content and saves it to the system's temporary directory.

    Args:
        content (str, optional): The content to be written to the test file.
        Defaults to ""THIS IS A SIMPLE TEXT FILE WE SEND TO THE TEMP DIRECTORY"".

    Returns:
        str: The path of the created test file.
    """"""
    file_path = os.path.join(tempfile.gettempdir(), ""sample_test.txt"")
    with open(file_path, ""w"") as file:
        file.write(content)
    print(f""\nTest file created at:\n{file_path}"")
    return file_path

def echo_file_content(file_path):
    """"""
    Outputs the content of the specified file to the terminal.

    Args:
        file_path (str): The path of the file to output its content.
    """"""
    with open(file_path, ""r"") as file:
        file_content = file.read()
        print(""\nFile content:"")
        print(""'"",file_content,""'"")

# Create the test file in the temporary directory
test_file_path = create_test_file()

# Output the content of the test file to the terminal
echo_file_content(test_file_path)

"
dgNwC6Kf,СПРИНТ № 7 | Модель памяти в C++ | Урок 7: Копирование объектов. Часть первая,chevengur,C++,Friday 19th of April 2024 01:39:56 PM CDT,"#include <iostream>
#include <string>
#include <vector>



using namespace std;

// Щупальце
class Tentacle {
public:
    explicit Tentacle(int id)
            : id_(id) {
    }

    int GetId() const {
        return id_;
    }

private:
    int id_ = 0;
};

// Осьминог
class Octopus {
public:
    Octopus() {
        Tentacle* t = nullptr;
        try {
            for (int i = 1; i <= 8; ++i) {
                t = new Tentacle(i);      // Может выбросить исключение bad_alloc
                tentacles_.push_back(t);  // Может выбросить исключение bad_alloc

                // Обнуляем указатель на щупальце, которое уже добавили в tentacles_,
                // чтобы не удалить его в обработчике catch повторно
                t = nullptr;
            }
        } catch (const bad_alloc&) {
            // Удаляем щупальца, которые успели попасть в контейнер tentacles_
            Cleanup();
            // Удаляем щупальце, которое создали, но не добавили в tentacles_
            delete t;
            // Конструктор не смог создать осьминога с восемью щупальцами,
            // поэтому выбрасываем исключение, чтобы сообщить вызывающему коду об ошибке
            // throw без параметров внутри catch выполняет ПЕРЕВЫБРОС пойманного исключения
            throw;
        }
    }

    const Tentacle& GetTentacle(int index) const {
        if (index < 0 || static_cast<size_t>(index) >= tentacles_.size()) {
            throw out_of_range(""Invalid tentacle index""s);
        }
        // Чтобы превратить указатель в ссылку, разыменовываем его
        return *tentacles_[index];
    }

    ~Octopus() {
        // Осьминог владеет объектами в динамической памяти (щупальца),
        // которые должны быть удалены при его разрушении.
        // Деструктор - лучшее место, чтобы прибраться за собой.
        Cleanup();
    }

private:
    void Cleanup() {
        // Удаляем щупальца осьминога из динамической памяти
        for (Tentacle* t : tentacles_) {
            delete t;
        }
        // Очищаем массив указателей на щупальца
        tentacles_.clear();
    }

    // Вектор хранит указатели на щупальца. Сами объекты щупалец находятся в куче
    vector<Tentacle*> tentacles_;
};

int main() {
    // Один из множества способов вызвать неопределённое поведение
    for (int i = 1; i <= 1000; ++i) {
        Octopus octopus;
        cout << ""Copying octopus ""s << i << "" "" << octopus.GetTentacle(0).GetId() << endl;
        Octopus octopus_copy0(octopus);
//        Octopus octopus_copy1(octopus);
        // octopus_copy1, octopus_copy0 и octopus оторвут щупальца друг другу
    }
    // Возможно, эта надпись не будет выведена
    cout << ""Congratulations, everything is ok""s << endl;
}"
T6vS7f4y,Ramp Network Facilitates USDt on TON Transactions for Global Users,livebetpro,PHP,Friday 19th of April 2024 01:08:27 PM CDT,"https://www.livebetpro.com/ramp-network-facilitates-usdt-on-ton-transactions-for-global-users/
 
Ramp Network, a financial technology firm&nbsp;creating&nbsp;payment rails that link cryptocurrencies to the international financial system, announced that it has made it possible to buy and sell USDt on Tether’s TON stablecoin.



The network boosts Tether’s use case with native USDt on TON by facilitating a seamless, borderless experience for P2P payments in&nbsp;the Telegram Messenger ecosystem, which has over 900 million users worldwide. Launching on the TON network, which is closely linked with the Telegram Wallet, will allow for the continued expansion of Telegram’s Apps and decentralized services on TON. USDt, with a market cap of over 107 billion dollars, is already the most widely-utilized&nbsp;stablecoin in the world and&nbsp;is supported by dozens of leading blockchains.



The whole TON ecosystem will benefit from Ramp’s (a top supplier of finance infrastructure in the crypto sector) decision to provide support for USDt on TON, which will make in-and-out transactions much easier. Fast and simple cryptocurrency purchases and withdrawals in over 150 countries are made possible with Ramp’s easy-to-use crypto on- and off-ramps, which developers can integrate&nbsp;into any application with ease. With its streamlined Know Your Customer (KYC) procedure, it makes onboarding new customers easier and offers crypto-to-fiat and fiat-to-crypto swaps&nbsp;for more than 100 digital assets.



Szymon Sypniewicz, CEO of Ramp Network stated:




“Crypto transactions should be as simple as texting. At Ramp Network we share TON Foundation’s vision. We are excited to contribute to making it a reality by introducing on-ramping and off-ramping for USDt on TON across more than 150 countries. We look forward to seeing how enabling access to instant, low-cost crypto transactions can improve the lives of hundreds of millions of users in the TON ecosystem.”




In a phased approach, Ramp will gradually deploy USDt on TON via its on-ramping on Ramp’s main website and interfaces with third-party wallets that have chosen to support&nbsp;TON assets. Subsequently, USDt on TON will be added to the fiat off-ramp.



Back in December 2023, when ramp allowed on-ramp for the network’s native asset Toncoin (TON), it first announced TON support.
"
W1eZEgMi,CHATGPT Online Player List,MigasRocha,Lua,Friday 19th of April 2024 01:02:21 PM CDT,"-- Open the peripheral connected to the Advanced Computer
local playerDetector = peripheral.wrap(""side_of_player_detector"")  -- Replace ""side_of_player_detector"" with the actual side of the Player Detector

-- Function to get online players
local function getOnlinePlayers()
    local onlinePlayers = playerDetector.getOnlinePlayers()
    return onlinePlayers
end

-- Function to display online players on the terminal
local function displayOnlinePlayers()
    local onlinePlayers = getOnlinePlayers()
    term.clear()  -- Clear the terminal screen
    print(""Online Players:"")
    for _, player in ipairs(onlinePlayers) do
        print(""- "" .. player)
    end
end

-- Main loop to continuously display online players
while true do
    displayOnlinePlayers()
    os.sleep(5)  -- Refresh every 5 seconds (adjust as needed)
end
"
du5kx2rH,Untitled,Josif_tepe,C++,Friday 19th of April 2024 01:01:28 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;
        
        int dali_e_sostaven_od_parni = 1;
        while(x > 0) {
            int cifra = x % 10;
            if(cifra % 2 == 1) {
                dali_e_sostaven_od_parni = 0;
            }
            x /= 10;
        }
    }
    return 0;
}
"
5x7YXv1P,Homework nested structs,Denis_Hristov,C,Friday 19th of April 2024 12:59:03 PM CDT,"#include <stdio.h>
#include <stdlib.h>

struct Student{
    char name[20];
    float grade;
};

struct Klas{
    unsigned int klasNumber;
    struct Student students[30];
    unsigned int studentsNum;
};

struct Vipusk{
    unsigned int year;
    struct Klas klasove[5];
    unsigned int klasoveNum;
};

float calcAverageKlas(struct Klas klas){
    float sum = 0;

    for(int i = 0; i < klas.studentsNum; i++){
        sum += klas.students[i].grade;
    }

    return sum / klas.studentsNum;
}

float calcAverageVipusk(struct Vipusk* vipusk){
    float sum = 0;
    for(int i = 0; i < vipusk->klasoveNum; i++){
        sum += calcAverageKlas(vipusk->klasove[i]);
    }

    return sum / vipusk->klasoveNum;
}

int main()
{

    struct Vipusk vipusk;

    printf(""Enter the number of classes: "");
    scanf(""%d"", &vipusk.klasoveNum);

    for(int i = 0; i < vipusk.klasoveNum; i++){
        printf(""Enter the number of students for class %d: "", i + 1);
        scanf(""%d"", &(vipusk.klasove[i].studentsNum));
        for(int j = 0; j < vipusk.klasove[i].studentsNum; j++){
            getchar();
            printf(""Please enter student name: \n"");
            fgets(vipusk.klasove[i].students[j].name, sizeof(vipusk.klasove[i].students[j].name), stdin);
            printf(""Please enter the grade: \n"");
            scanf(""%f"", &(vipusk.klasove[i].students[j].grade));

        }
    }

    for (int i = 0; i < vipusk.klasoveNum; i++) {
        printf(""Average grade of class %d: %.2f\n"", i + 1, calcAverageKlas(vipusk.klasove[i]));
    }

    printf(""Average grade of the vipusk: %.2f\n"", calcAverageVipusk(&vipusk));

    return 0;
}
"
hjbR0AKi,How can I obtain the InstaForex No Deposit Bonus and initiate trading,reviewbrokers,PHP,Friday 19th of April 2024 12:57:53 PM CDT,https://www.reviewbrokers.net/how-can-i-obtain-the-instaforex-no-deposit-bonus-and-initiate-trading/
AQrJ8N4F,Untitled,Tkap1,C,Friday 19th of April 2024 12:54:17 PM CDT,"

int entity_get_personality_count(Entity entity)
{
	int result = 0;
	for(int i = 0; i < Personality_Count; i++) {
		if(entity.personality_values[i] > 0) { result += 1; }
	}
	return result;
}

bool entity_has_personality(Entity entity, Personality personality)
{
	return entity.personality_values[personality] > 0;
}"
BYPV6Tav,How Can You Claim the $500 Forex Trading Bonus for Free from InstaForex?,fxvnpro,PHP,Friday 19th of April 2024 12:38:29 PM CDT,"https://www.fxvnpro.com/how-can-you-claim-the-500-forex-trading-bonus-for-free-from-instaforex/
 
Table of Contents : InstaForex

 	Introduction: InstaForex $500 Deposit-Free Trading Opportunity
 	Bonus Joining Link
 	About InstaForex
 	Bonus Details
 	How to Join the Forex Free Trading Bonus
 	Withdrawal Terms
 	Deposit-Free Trading Bonus Terms
 	Conclusion: Seize the Opportunity with InstaForex


1. Introduction: InstaForex $500 Deposit-Free Trading Opportunity
Exciting news for all aspiring traders! InstaForex, a reputable brokerage firm renowned for its innovative services and user-friendly platform, is offering a remarkable opportunity for newcomers to kickstart their trading journey. With a generous $500 virtual cash bonus, accessible without any initial deposit, InstaForex is paving the way for traders to explore the thrilling world of Forex without financial constraints.


2. Bonus Joining Link
As an established player in the brokerage industry, InstaForex prides itself on providing traders with unparalleled benefits, including leverage up to 1:1000 and seamless withdrawal options. Whether you're a novice or an experienced trader, this bonus presents an ideal opportunity to bolster your trading career and achieve your financial goals.


3. About InstaForex
InstaForex is a well-known brokerage firm recognized for its reliability, transparency, and commitment to providing exceptional trading services to its clients. With a diverse range of trading instruments, cutting-edge technology, and comprehensive educational resources, InstaForex caters to the needs of traders worldwide.


4. Bonus Details

 	Expire Date: Unlimited
 	Applicable for: All Traders


5. How to Join the Forex Free Trading Bonus

 	Opening a Trading Account: Sign up for an account with InstaForex to unlock access to the exciting bonus offer.
 	Crediting the Bonus: Once your account is set up, the $500 bonus will be credited to your account, ready for you to start trading.
 	Kickstarting Your Trading: With your bonus funds in hand, dive into the dynamic world of Forex trading and seize lucrative opportunities to maximize your profits.


6. Withdrawal Terms

 	Bonus: No
 	Profits: Yes


7. Deposit-Free Trading Bonus Terms

 	Starting without a Deposit: Enjoy the freedom to commence your trading journey without the need for an initial deposit, empowering you to explore the market with ease.
 	Verification Procedure not Mandatory: Skip the cumbersome verification process and dive straight into trading, eliminating unnecessary delays and ensuring a swift onboarding experience.
 	Downloading MT4 for Enhanced Trading Experience: Enhance your trading experience with the industry-leading MetaTrader 4 (MT4) platform, renowned for its speed, reliability, and advanced features.


8. Conclusion: Seize the Opportunity with InstaForex
Seize this golden opportunity to embark on your trading journey with InstaForex and unleash your full potential in the dynamic world of Forex. Don't miss out on this lucrative offer – claim your $500 deposit-free trading bonus today and chart a course towards financial success!

Read InstaForex Review"
JRgsZBVp,Untitled,MeehoweCK,C++,Friday 19th of April 2024 12:24:15 PM CDT,"#include <ctime>
#include <cstdlib>
#include <iostream>
#include <conio.h>

double szacowaniePi(int N) {
	int n{};		// licznik określający ile punktów zawiera się w ćwiartce koła
	auto podstawa{ N / 100 };
	auto nastProg{ 0 };

	for (long long i{ 0 }; i < N; ++i) {
		if (i == nastProg) {
			system(""cls"");		// zresetowanie konsoli
			std::cout << ""Wykonano "" << 100 * i / N << ""%\n"";
			nastProg += podstawa;
		}
		// wylosowanie współrzędnych punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzenie czy wylosowany punkt zawiera się w ćwiartce koła:
		if (x * x + y * y <= 1) {
			// zwiększamy liczbę punktów zawierających się w ćwiartce koła o 1
			++n;
		}
	}
	system(""cls"");
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	int punkty;
	std::cout << ""Ile punktow ma byc losowanych? "";
	std::cin >> punkty;
	std::cout << ""Liczbe pi oszacowano na "" << szacowaniePi(punkty) << std::endl;
	return 0;
}"
h7gxG7Vr,SkyLine-Practical-D&C,alisadafi,Python,Friday 19th of April 2024 12:15:53 PM CDT,"class Building:
    def __init__(self, left, ht, right):
        self.left = left
        self.ht = ht
        self.right = right

class Strip:
    def __init__(self, left=0, ht=0):
        self.left = left
        self.ht = ht

class SkyLine:
    def __init__(self, cap):
        self.arr = []
        self.capacity = cap
        self.n = 0

    def count(self):
        return self.n

    def merge(self, other):
        res = SkyLine(self.n + other.n)
        h1, h2, i, j = 0, 0, 0, 0
        while i < self.n and j < other.n:
            if self.arr[i].left < other.arr[j].left:
                x1, h1 = self.arr[i].left, self.arr[i].ht
                maxh = max(h1, h2)
                res.append(Strip(x1, maxh))
                i += 1
            else:
                x2, h2 = other.arr[j].left, other.arr[j].ht
                maxh = max(h1, h2)
                res.append(Strip(x2, maxh))
                j += 1
        while i < self.n:
            res.append(self.arr[i])
            i += 1
        while j < other.n:
            res.append(other.arr[j])
            j += 1
        return res

    def append(self, st):
        if self.n > 0 and self.arr[self.n-1].ht == st.ht:
            return
        if self.n > 0 and self.arr[self.n-1].left == st.left:
            self.arr[self.n-1].ht = max(self.arr[self.n-1].ht, st.ht)
            return
        self.arr.append(st)
        self.n += 1

    def print_skyline(self):
        print(""Skyline for given buildings is"")
        for i in range(self.n):
            print("" ({}, {}),"".format(self.arr[i].left, self.arr[i].ht), end="""")
        print()

def find_skyline(arr, l, h):
    if l == h:
        res = SkyLine(2)
        res.append(Strip(arr[l].left, arr[l].ht))
        res.append(Strip(arr[l].right, 0))
        return res
    mid = (l + h) // 2
    sl = find_skyline(arr, l, mid)
    sr = find_skyline(arr, mid+1, h)
    res = sl.merge(sr)
    return res

arr = [Building(1, 11, 5), Building(2, 6, 7), Building(3, 13, 9), Building(12, 7, 16), Building(14, 3, 25), Building(19, 18, 22), Building(23, 13, 29), Building(24, 4, 28)]
n = len(arr)
skyline = find_skyline(arr, 0, n-1)
skyline.print_skyline()"
wxwXKmcU,Untitled,MeehoweCK,C++,Friday 19th of April 2024 11:57:21 AM CDT,"#include <ctime>
#include <cstdlib>
#include <iostream>

const int N{ 100'000'000 };		// liczba losowanych punktów

double szacowaniePi() {
	int n{};		// licznik określający ile punktów zawiera się w ćwiartce koła
	for (auto i{ 0 }; i < N; ++i) {
		// wylosowanie współrzędnych punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzenie czy wylosowany punkt zawiera się w ćwiartce koła:
		if (x * x + y * y <= 1) {
			// zwiększamy liczbę punktów zawierających się w ćwiartce koła o 1
			++n;
		}
	}
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	std::cout << ""Liczbe pi oszacowano na "" << szacowaniePi() << std::endl;
	return 0;
}"
LwC1A8Zz,Untitled,MeehoweCK,C++,Friday 19th of April 2024 11:25:46 AM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>

const unsigned int N{ 1'000'000'000 };

double szacujPi() {
	unsigned int n{};	// licznik określający ile punktów zawiera się w ćwiartce koła
	for (unsigned int i{}; i < N; ++i) {
		// losowanie punktu (x, y):
		auto x{ 1.0 * rand() / RAND_MAX };
		auto y{ 1.0 * rand() / RAND_MAX };
		// sprawdzamy czy punkt (x, y) zawiera się w ćwiartce koła:
		if (x * x + y * y <= 1) {
			// punkt zawiera się w ćwiartce koła, więc zwiększamy n o 1:
			++n;
		}
	}
	return 4.0 * n / N;
}

int main() {
	srand(time(nullptr));
	std::cout << ""Wartosc liczby pi oszacowano na "" << szacujPi() << std::endl;
	return 0;
}"
ezR4Jg23,Semi primes,ifigazsi,Python,Friday 19th of April 2024 11:20:59 AM CDT,"from itertools import combinations_with_replacement

def primes(n: int) -> iter:
    return [i for i in range(2, n + 1) if sum(i % k == 0 for k in range(1, int(i ** 0.5) + 1)) == 1]

def at_least20(number):
    if number < 20:
        return 20
    return number

def semi_primes(number_of_semi_primes):
    list_of_primes = primes(at_least20(number_of_semi_primes))
    comb = combinations_with_replacement(list_of_primes, 2)
    c = set()
    for i in comb:
        c.add(i[0] * i[1])
        if len(c) == number_of_semi_primes:
            break
    print(sorted(c))

if __name__ == '__main__':

    semi_primes2(10000)"
EVzaJKVt,Untitled,juanchixd,Python,Friday 19th of April 2024 10:54:23 AM CDT,"""""""
Created on 2024
@Creator: Juan Bautista Gonzalez
@Position: Student electronic engineering and programmer part-time
@Contact:
    - Email: contacto@juangonzalez.com.ar
""""""
import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

html_content= """"""AQUI DATA 
""""""

url = ""https://www.fceia.unr.edu.ar/tesys/html/""
soup = BeautifulSoup(html_content, ""html.parser"")

download_folder = ""descargas""
os.makedirs(download_folder, exist_ok=True)
file_number = 1
previous_number = None

for row in soup.find_all(""tr""):
    columns = row.find_all(""td"")
    if len(columns) >= 4:
        number = columns[1].text.strip().zfill(3) 
        if number != previous_number:
            file_number = 1 
        for link in columns[3].find_all(""a""):
            href = link.get(""href"")
            if href:
                file_url = urljoin(url, href) 
                file_name = os.path.join(download_folder, f""{number}_{file_number:03d}_{os.path.basename(href)}"")
                try:
                    response = requests.get(file_url)
                    with open(file_name, ""wb"") as file:
                        file.write(response.content)
                    print(f""Archivo descargado: {file_name}"")
                except Exception as e:
                    print(f""Error al descargar {file_url}: {e}"")
            file_number += 1 
        previous_number = number"
QKA68s3n,Untitled,Josif_tepe,C++,Friday 19th of April 2024 10:45:13 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int redovi, koloni;
    cin >> redovi >> koloni;
    
    int mat[redovi][koloni];
    
    for(int i = 0; i < redovi; i++) {
        for(int j = 0; j < koloni; j++) {
            cin >> mat[i][j];
        }
    }
    
    for(int i = 0; i < redovi; i++) {
        for(int j = 0; j < koloni; j++) {
            cout << mat[i][j] << "" "";
        }
        cout << endl;
    }
    return 0;
}
"
G1hD2XjK,Untitled,MeehoweCK,C++,Friday 19th of April 2024 10:40:53 AM CDT,"#include <iostream>
#include <cstdlib>
#include <ctime>

double losuj(double min, double max) {
	return min + (max - min) * rand() / RAND_MAX;
}

int main() {
	srand(time(nullptr));

	std::cout << losuj(2, 5.5) << std::endl;
	return 0;
}"
Nxc1L7XH,Teste 2,MigasRocha,Lua,Friday 19th of April
eiWtVQep,Untitled,Josif_tepe,C++,Friday 19th of April 2024 10:27:42 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int mat[3][3];
    mat[0][0] = 1;
    mat[0][1] = 2;
    mat[0][2] = 3;
    mat[1][0] = 4;
    mat[1][1] = 5;
    mat[1][2] = 6;
    mat[2][0] = 7;
    mat[2][1] = 8;
    mat[2][2] = 9;
    
    cout << mat[0][0] << "" "" << mat[0][1] << "" "" <<  mat[0][2] << endl;
    cout << mat[1][0] << "" "" << mat[1][1] << "" "" << mat[1][2] << endl;
    cout << mat[2][0] << "" "" << mat[2][1] << "" "" << mat[2][2] << endl;
    
    
    return 0;
}
"
4gqRsy70,wb_parse,Namokonov,JavaScript,Friday 19th of April 2024 10:23:19 AM CDT,"function onOpen(){
  SpreadsheetApp.getUi()
  .createMenu(""🐱"")
  .addItem(""запустить!"", ""myFunction"")
  .addToUi();
}

function myFunction() {
  const ss = SpreadsheetApp.getActive();
  const sh = ss.getSheetByName(""Лист1"");
  const nmIds = sh.getDataRange().getValues().slice(1);
  const data = nmIds.map(row => {
    const nmId = row[0];
    const url = getJsonUrl(nmId);
    const r = JSON.parse(UrlFetchApp.fetch(url));

    row = [
      url, r.imt_name, r.subj_name, r.subj_root_name, r.vendor_code, r.season, r.description,
      r?.options.map(f => f.name + "": "" + f.value).join('\n'),
      r?.grouped_options.map(ff => ff.options.map(fff => ff.group_name + "", "" + fff.name + "": "" + fff.value).join('\n')).join('\n')
    ];

    return row;
  });

  sh.getRange(""B2:"" + data.length).clearContent();
  sh.getRange(2, 2, data.length, data[0].length).setValues(data);
};

function getJsonUrl(nmid) {
  const basket = {
    143: '01',
    287: '02',
    431: '03',
    719: '04',
    1007: '05',
    1061: '06',
    1115: '07',
    1169: '08',
    1313: '09',
    1601: '10',
    1655: '11',
    1919: '12',
    2045: '13',
    99999: '14'
  }
  return `https://basket-${basket[Object.keys(basket)
    .filter(v => Math.floor(nmid / 100000) <= v)[0]]}.wb.ru/vol${Math.floor(nmid / 100000)}/part${Math.floor(nmid / 1000)}/${nmid}/info/ru/card.json`
};"
BJcTVX3Y,Momentum_Alcista_Bajista_Segun_Carpatos,fabgonber,C++,Friday 19th of April 2024 10:14:29 AM CDT,"#
# Momentum/Trend Alcista o Bajista según @carpatos 
#

declare lower;

input length = 14;
input alcistas = 60;
input bajistas = 50;
input price = close;
input averageType = AverageType.WILDERS;
input showBreakoutSignals = no;

plot limite_alcistas = alcistas;
plot limite_bajistas = bajistas;


def NetChgAvg = MovingAverage(averageType, price - price[1], length);
def TotChgAvg = MovingAverage(averageType, AbsValue(price - price[1]), length);
def ChgRatio = if TotChgAvg != 0 then NetChgAvg / TotChgAvg else 0;

plot RSI = 50 * (ChgRatio + 1);

RSI.DefineColor(""bajista"", GetColor(5));
RSI.DefineColor(""normal"", GetColor(7));
RSI.DefineColor(""alcista"", GetColor(6));
RSI.SetPaintingStrategy(PaintingStrategy.Histogram);

RSI.AssignValueColor
       (
        if RSI[2]>alcistas AND RSI[1]>alcistas AND RSI[0]>alcistas  
            then  RSI.color(""alcista"") 
        else
        
        if RSI[2]>alcistas AND RSI[1]>alcistas AND RSI[0]<alcistas  
            then  RSI.color(""alcista"") 
        else

        if RSI[2]>alcistas AND RSI[1]<alcistas AND RSI[0]>alcistas  
            then  RSI.color(""alcista"") 
        else

        if RSI[2]<alcistas AND RSI[1]>alcistas AND RSI[0]>alcistas  
            then  RSI.color(""alcista"") 
        else

        if RSI[2]<bajistas AND RSI[1]<bajistas AND RSI[0]<bajistas  
            then  RSI.color(""bajista"")
        else

        if RSI[2]<bajistas AND RSI[1]<bajistas AND RSI[0]>bajistas  
            then  RSI.color(""bajista"")        
        else

        if RSI[2]<bajistas AND RSI[1]>bajistas AND RSI[0]<bajistas  
            then  RSI.color(""bajista"")        
        else
        if RSI[2]>bajistas AND RSI[1]<bajistas AND RSI[0]<bajistas  
            then  RSI.color(""bajista"")
        else
        RSI.color(""normal"")

);



"
WTP7H6jr,Mad,Unknown_No_1,PHP,Friday 19th of April 2024 10:11:39 AM CDT,NewFlashModSoonGuys
g6Myte6E,Untitled,PAXSemperFidelis,Java,Friday 19th of April 2024 10:02:40 AM CDT,"import processing.core.*;
import peasycam.*;

class Flight {
  PVector origin;
  PVector destination;
}

public class FlightAnimation extends PApplet {

  float radius = 150;
  PeasyCam cam;
  PVector lightPosition = new PVector(300, 300, 200);
  Flight flight;
  PVector target;  // Target point for ""fly to"" animation

  void setup() {
    size(600, 600, P3D);
    cam = new PeasyCam(this);
    background(0);
    smoothLighting();

    // Define flight data (Moscow to Washington coordinates are estimates)
    flight = new Flight();
    flight.origin = new PVector(0, radius * sin(radians(55.75)), radius * cos(radians(55.75)));  // Moscow (latitude, longitude)
    flight.destination = new PVector(0, radius * sin(radians(38.90)), radius * cos(radians(38.90)));  // Washington (latitude, longitude)

    // Define target point (replace with your desired coordinates)
    target = flight.destination;  // Initially target the flight destination
  }

  void draw() {
    pointLight(255, 255, 255, lightPosition.x, lightPosition.y, lightPosition.z);
    noStroke();
    fill(200);
    sphere(radius);

    // Draw flight path
    stroke(255);
    strokeWeight(2);
    line(flight.origin.x, flight.origin.y, flight.origin.z, flight.destination.x, flight.destination.y, flight.destination.z);

    // Simple plane at origin (replace with your plane model)
    pushMatrix();
    translate(flight.origin.x, flight.origin.y, flight.origin.z);
    rotateX(HALF_PI);  // Adjust rotation for desired plane orientation
    box(10, 20, 5);  // Replace with your plane dimensions
    popMatrix();

    // ""Fly to"" animation (comment out for a simple rotation)
    // float angleX = lerp(cam.getRotationX(), atan2(target.z, target.x), 0.01f);
    // float angleY = lerp(cam.getRotationY(), asin(target.y / radius), 0.01f);
    // cam.setRotation(angleX, angleY);

    // Simple rotation animation (uncomment for basic rotation)
    float angle = frameCount * 0.01f;
    rotateY(angle);
  }
}
"
ukWcwrau,backup.sh,sergio_educacionit,Bash,Friday 19th of April 2024 09:55:47 AM CDT,"#!/bin/bash

fecha=$(date +%H-%M-%S)

# servidor destino de backups
server=192.168.0.88

# usuario remoto
backupuser=""sambaserver""


# si el script recibe el argumento 'ssh-key'
# se generan el par de claves 'ssh'.

if [ ""$1"" == ""ssh-key"" ]; then

	ssh-keygen -t rsa -N """" -f ~/.ssh/id_rsa

	ssh-copy-id -i $HOME/.ssh/id_rsa.pub $backupuser@$server

	exit 0

# si recibe como argumento 'gpg-key'
# entonces genera un par de claves gpg
# en este caso sin contraseña


elif [ ""$1"" == ""gpg-key"" ]; then

	gpg --batch --gen-key <<EOF
%no-protection
Key-Type: RSA
Key-Length: 2048
Subkey-Type: RSA
Subkey-Length: 2048
Name-Real: Your Name
Name-Email: educacionit@$HOSTNAME
Expire-Date: 0
%commit
EOF

# se exporta la llave publica
gpg --export -a ""educacionit@$HOSTNAME"" > educacionit.$HOSTNAME.pub

# se envia la llave publica al servidor de backup
scp educacionit.$HOSTNAME.pub $backupuser@$server:~/

# se le envia el comando al servidor de backup mediante ssh
# para que importe la clave privada que le enviamos.
#
ssh $backupuser@$server gpg --import educacionit.$HOSTNAME.pub

exit 0

fi


# Backups


#Firmar los archivos de '/etc/samba'


# eliminar firma previa, usamos la opcion -f por si no existe.

rm /etc/samba/*.sign

gpg --detach-sign -u educacionit@$HOSTNAME -o /etc/samba/smb.conf.sign /etc/samba/smb.conf

# backup de configuracion

rsync -av -e ""ssh -i /root/.ssh/id_rsa"" /etc/samba/smb.conf* sambaserver@$server:~/

# backup de directorio de archivos compartidos en samba
rsync -av -e ""ssh -i /root/.ssh/id_rsa"" /srv/samba sambaserver@$server:~/
"
x8QkgHf1,News April19 24,Newscaster_Ned,Email,Friday 19th of April 2024 09:29:23 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

l‎k‎f‎d‎j‎l‎k‎d‎s‎j‎f‎l‎k‎d‎s‎k‎l‎ ‎w‎e‎l‎l‎ ‎I‎'‎m‎ ‎t‎y‎p‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎w‎h‎i‎l‎e‎ ‎d‎r‎u‎n‎k‎;‎ ‎,‎ ‎l‎e‎t‎s‎ ‎j‎u‎s‎t‎ ‎t‎h‎i‎s‎

I‎r‎a‎n‎ ‎R‎e‎p‎o‎r‎t‎s‎ ‎N‎o‎ ‎D‎a‎m‎a‎g‎e‎ ‎A‎f‎t‎e‎r‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎S‎t‎r‎i‎k‎e‎s‎
M‎i‎g‎r‎a‎n‎t‎s‎ ‎U‎s‎e‎ ‎R‎a‎m‎p‎ ‎t‎o‎ ‎D‎r‎i‎v‎e‎ ‎O‎v‎e‎r‎ ‎O‎u‎t‎d‎a‎t‎e‎d‎ ‎A‎r‎i‎z‎o‎n‎a‎ ‎B‎o‎r‎d‎e‎r‎ ‎B‎a‎r‎r‎i‎e‎r‎
M‎a‎n‎d‎i‎s‎a‎,‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎I‎d‎o‎l‎'‎ ‎A‎l‎u‎m‎ ‎&‎ ‎G‎r‎a‎m‎m‎y‎-‎W‎i‎n‎n‎i‎n‎g‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎S‎i‎n‎g‎e‎r‎,‎ ‎D‎e‎a‎d‎ ‎a‎t‎ ‎4‎7‎
C‎h‎i‎n‎a‎ ‎R‎e‎c‎r‎u‎i‎t‎s‎ ‎T‎a‎y‎l‎o‎r‎ ‎S‎w‎i‎f‎t‎ ‎t‎o‎ ‎C‎o‎l‎l‎e‎c‎t‎ ‎D‎a‎t‎a‎ ‎o‎n‎ ‎Y‎o‎u‎n‎g‎ ‎U‎s‎e‎r‎s‎ ‎v‎i‎a‎ ‎T‎i‎k‎T‎o‎k‎
R‎e‎p‎o‎r‎t‎e‎r‎:‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎T‎r‎u‎m‎p‎ ‎J‎u‎r‎o‎r‎s‎ ‎A‎r‎e‎ ‎'‎M‎o‎r‎e‎ ‎L‎e‎f‎t‎-‎o‎f‎-‎C‎e‎n‎t‎e‎r‎ ‎T‎h‎a‎n‎ ‎N‎o‎t‎'‎
O‎p‎p‎o‎n‎e‎n‎t‎s‎ ‎S‎a‎y‎ ‎T‎h‎e‎y‎ ‎H‎a‎v‎e‎ ‎S‎i‎g‎n‎a‎t‎u‎r‎e‎s‎ ‎f‎o‎r‎ ‎R‎e‎f‎e‎r‎e‎n‎d‎u‎m‎ ‎t‎o‎ ‎O‎v‎e‎r‎t‎u‎r‎n‎ ‎C‎A‎'‎s‎ ‎P‎r‎o‎p‎ ‎4‎7‎
W‎h‎o‎ ‎A‎r‎e‎ ‎t‎h‎e‎ ‎1‎2‎ ‎J‎u‎r‎o‎r‎s‎ ‎S‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎H‎u‎s‎h‎ ‎M‎o‎n‎e‎y‎ ‎T‎r‎i‎a‎l‎?‎
R‎a‎p‎ ‎A‎r‎t‎i‎s‎t‎ ‎G‎l‎o‎R‎i‎l‎l‎a‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎w‎i‎t‎h‎ ‎D‎r‎u‎n‎k‎e‎n‎ ‎D‎r‎i‎v‎i‎n‎g‎ ‎i‎n‎ ‎G‎e‎o‎r‎g‎i‎a‎
I‎s‎r‎a‎e‎l‎ ‎D‎o‎w‎n‎p‎l‎a‎y‎s‎ ‎I‎r‎a‎n‎ ‎S‎t‎r‎i‎k‎e‎s‎;‎ ‎P‎r‎o‎o‎f‎ ‎o‎f‎ ‎C‎a‎p‎a‎b‎i‎l‎i‎t‎y‎,‎ ‎R‎a‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎E‎s‎c‎a‎l‎a‎t‎i‎o‎n‎
S‎p‎y‎ ‎B‎a‎l‎l‎o‎o‎n‎ ‎C‎o‎m‎b‎a‎c‎k‎!‎ ‎R‎u‎s‎s‎i‎a‎ ‎S‎a‎y‎s‎ ‎i‎t‎ ‎i‎s‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎D‎o‎w‎n‎ ‎'‎T‎e‎r‎r‎o‎r‎'‎ ‎B‎a‎l‎l‎o‎o‎n‎s‎
L‎a‎w‎s‎u‎i‎t‎ ‎C‎l‎a‎i‎m‎s‎ ‎A‎l‎ ‎R‎o‎k‎e‎r‎ ‎‘‎C‎i‎r‎c‎u‎m‎v‎e‎n‎t‎e‎d‎'‎ ‎D‎E‎I‎ ‎Q‎u‎o‎t‎a‎s‎ ‎o‎n‎ ‎P‎B‎S‎ ‎K‎i‎d‎s‎ ‎S‎h‎o‎w‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
1‎2‎ ‎J‎u‎r‎o‎r‎s‎ ‎S‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎T‎r‎u‎m‎p‎ ‎H‎u‎s‎h‎ ‎M‎o‎n‎e‎y‎ ‎T‎r‎i‎a‎l‎

W‎h‎o‎ ‎A‎r‎e‎ ‎T‎h‎e‎y‎?‎

-‎7‎ ‎M‎e‎n‎,‎ ‎5‎ ‎W‎o‎m‎e‎n‎
-‎M‎o‎s‎t‎ ‎G‎e‎t‎ ‎N‎e‎w‎s‎ ‎f‎r‎o‎m‎ ‎N‎Y‎T‎…‎ ‎S‎o‎m‎e‎ ‎T‎i‎k‎T‎o‎k‎
j‎u‎r‎o‎r‎s‎
H‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎b‎r‎e‎a‎k‎d‎o‎w‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎1‎2‎ ‎j‎u‎r‎o‎r‎s‎ ‎s‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎t‎r‎i‎a‎l‎ ‎o‎f‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎.‎ ‎T‎h‎e‎ ‎t‎r‎i‎a‎l‎ ‎i‎s‎ ‎t‎a‎k‎i‎n‎g‎ ‎p‎l‎a‎c‎e‎ ‎i‎n‎ ‎s‎o‎l‎i‎d‎l‎y‎-‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎M‎a‎n‎h‎a‎t‎t‎a‎n‎,‎ ‎m‎a‎k‎i‎n‎g‎ ‎i‎t‎ ‎c‎h‎a‎l‎l‎e‎n‎g‎i‎n‎g‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎d‎e‎f‎e‎n‎s‎e‎ ‎t‎o‎ ‎f‎i‎n‎d‎ ‎f‎a‎i‎r‎ ‎a‎n‎d‎ ‎i‎m‎p‎a‎r‎t‎i‎a‎l‎ ‎j‎u‎r‎o‎r‎s‎.‎

R‎e‎p‎o‎r‎t‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎I‎r‎a‎n‎ ‎N‎e‎a‎r‎ ‎N‎u‎c‎l‎e‎a‎r‎ ‎S‎i‎t‎e‎s‎
R‎e‎p‎o‎r‎t‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎I‎r‎a‎n‎ ‎N‎e‎a‎r‎ ‎N‎u‎c‎l‎e‎a‎r‎ ‎S‎i‎t‎e‎s‎
3‎,‎1‎1‎8‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎M‎i‎k‎e‎ ‎J‎o‎h‎n‎s‎o‎n‎’‎s‎ ‎T‎o‎p‎ ‎P‎o‎l‎i‎c‎y‎ ‎A‎d‎v‎i‎s‎e‎r‎ ‎I‎s‎ ‎F‎o‎r‎m‎e‎r‎ ‎L‎o‎b‎b‎y‎i‎s‎t‎:‎ ‎C‎l‎i‎e‎n‎t‎s‎ ‎H‎a‎v‎e‎ ‎C‎o‎r‎p‎o‎r‎a‎t‎e‎ ‎I‎n‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎J‎o‎h‎n‎s‎o‎n‎'‎s‎ ‎P‎o‎l‎i‎c‎y‎ ‎A‎i‎d‎e‎ ‎L‎o‎b‎b‎y‎i‎s‎t‎ ‎w‎i‎t‎h‎ ‎U‎k‎r‎a‎i‎n‎e‎-‎I‎n‎t‎e‎r‎e‎s‎t‎e‎d‎ ‎C‎l‎i‎e‎n‎t‎s‎
6‎,‎0‎3‎2‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎h‎u‎t‎ ‎D‎o‎w‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎T‎r‎i‎a‎l‎ ‎f‎o‎r‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎C‎h‎a‎r‎g‎e‎s‎
D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎h‎u‎t‎ ‎D‎o‎w‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎T‎r‎i‎a‎l‎ ‎o‎n‎ ‎M‎a‎y‎o‎r‎k‎a‎s‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎C‎h‎a‎r‎g‎e‎s‎
3‎,‎9‎2‎0‎
E‎a‎t‎ ‎B‎u‎g‎s‎:‎ ‎N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎C‎a‎f‎e‎ ‎P‎u‎t‎s‎ ‎C‎i‎c‎a‎d‎a‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎e‎n‎u‎ ‎a‎s‎ ‎N‎a‎t‎i‎o‎n‎ ‎P‎r‎e‎p‎a‎r‎e‎s‎ ‎f‎o‎r‎ ‎O‎n‎s‎l‎a‎u‎g‎h‎t‎ ‎o‎f‎ ‎T‎r‎i‎l‎l‎i‎o‎n‎s‎
N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎C‎a‎f‎e‎ ‎P‎u‎t‎s‎ ‎C‎i‎c‎a‎d‎a‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎M‎e‎n‎u‎ ‎a‎s‎ ‎N‎a‎t‎i‎o‎n‎ ‎P‎r‎e‎p‎a‎r‎e‎s‎ ‎f‎o‎r‎ ‎O‎n‎s‎l‎a‎u‎g‎h‎t‎
1‎1‎1‎
J‎o‎h‎n‎s‎o‎n‎:‎ ‎M‎o‎t‎i‎o‎n‎ ‎t‎o‎ ‎V‎a‎c‎a‎t‎e‎ ‎‘‎H‎a‎r‎m‎e‎d‎ ‎t‎h‎i‎s‎ ‎O‎f‎f‎i‎c‎e‎,‎’‎ ‎B‎u‎t‎ ‎W‎e‎ ‎L‎a‎c‎k‎ ‎t‎h‎e‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎C‎h‎a‎n‎g‎e‎ ‎t‎h‎e‎ ‎R‎u‎l‎
J‎o‎h‎n‎s‎o‎n‎:‎ ‎M‎o‎t‎i‎o‎n‎ ‎t‎o‎ ‎V‎a‎c‎a‎t‎e‎ ‎'‎H‎a‎r‎m‎e‎d‎ ‎T‎h‎i‎s‎ ‎O‎f‎f‎i‎c‎e‎,‎'‎ ‎W‎e‎ ‎L‎a‎c‎k‎ ‎V‎o‎t‎e‎s‎ ‎t‎o‎ ‎C‎h‎a‎n‎g‎e‎ ‎I‎t‎
3‎,‎4‎1‎6‎
N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎P‎o‎l‎i‎c‎e‎ ‎C‎h‎i‎e‎f‎ ‎P‎u‎s‎h‎e‎s‎ ‎M‎o‎r‎e‎ ‎G‎u‎n‎-‎F‎r‎e‎e‎ ‎Z‎o‎n‎e‎s‎ ‎—‎ ‎W‎h‎e‎r‎e‎ ‎T‎o‎u‎r‎i‎s‎t‎s‎ ‎C‎a‎n‎’‎t‎ ‎B‎e‎ ‎A‎r‎m‎e‎d‎ ‎f‎o‎r‎
N‎e‎w‎ ‎O‎r‎l‎e‎a‎n‎s‎ ‎P‎o‎l‎i‎c‎e‎ ‎C‎h‎i‎e‎f‎ ‎W‎a‎n‎t‎s‎ ‎M‎o‎r‎e‎ ‎G‎u‎n‎-‎F‎r‎e‎e‎ ‎Z‎o‎n‎e‎s‎
1‎,‎3‎1‎8‎
W‎h‎o‎ ‎A‎r‎e‎ ‎t‎h‎e‎ ‎1‎2‎ ‎J‎u‎r‎o‎r‎s‎ ‎S‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎H‎u‎s‎h‎ ‎M‎o‎n‎e‎y‎ ‎T‎r‎i‎a‎l‎?‎
W‎h‎o‎ ‎A‎r‎e‎ ‎t‎h‎e‎ ‎1‎2‎ ‎J‎u‎r‎o‎r‎s‎ ‎S‎e‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎H‎u‎s‎h‎ ‎M‎o‎n‎e‎y‎ ‎T‎r‎i‎a‎l‎?‎
1‎,‎4‎8‎0‎
N‎i‎g‎h‎t‎m‎a‎r‎e‎ ‎i‎n‎ ‎N‎i‎g‎e‎r‎ ‎—‎ ‎E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎L‎e‎a‎v‎e‎s‎ ‎H‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎‘‎H‎o‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎:‎ ‎B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎ ‎L‎e‎a‎v‎e‎s‎ ‎H‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎T‎r‎o‎o‎p‎s‎ ‎'‎H‎o‎s‎t‎a‎g‎e‎'‎ ‎i‎n‎ ‎N‎i‎g‎e‎r‎
3‎,‎9‎2‎0‎
S‎t‎e‎p‎h‎e‎n‎ ‎C‎o‎l‎b‎e‎r‎t‎ ‎t‎o‎ ‎B‎r‎o‎a‎d‎c‎a‎s‎t‎ ‎‘‎L‎a‎t‎e‎ ‎S‎h‎o‎w‎’‎ ‎f‎r‎o‎m‎ ‎C‎h‎i‎c‎a‎g‎o‎ ‎D‎u‎r‎i‎n‎g‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎i‎c‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎C‎o‎n‎v‎e‎n‎t‎i‎o‎n‎
S‎t‎e‎p‎h‎e‎n‎ ‎C‎o‎l‎b‎e‎r‎t‎ ‎t‎o‎ ‎B‎r‎o‎a‎d‎c‎a‎s‎t‎ ‎‘‎L‎a‎t‎e‎ ‎S‎h‎o‎w‎’‎ ‎f‎r‎o‎m‎ ‎C‎h‎i‎c‎a‎g‎o‎ ‎D‎u‎r‎i‎n‎g‎ ‎D‎N‎C‎
1‎8‎0‎
R‎e‎p‎o‎r‎t‎:‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎6‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎a‎y‎ ‎T‎h‎e‎y‎ ‎F‎e‎a‎r‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎l‎l‎ ‎P‎u‎t‎ ‎T‎h‎e‎m‎ ‎i‎n‎ ‎J‎a‎i‎l‎
J‎a‎n‎u‎a‎r‎y‎ ‎6‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎S‎a‎y‎ ‎T‎h‎e‎y‎ ‎F‎e‎a‎r‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎l‎l‎ ‎P‎u‎t‎ ‎T‎h‎e‎m‎ ‎i‎n‎ ‎J‎a‎i‎l‎

N‎i‎g‎g‎a‎ ‎S‎h‎o‎o‎t‎s‎ ‎a‎n‎ ‎K‎e‎e‎e‎i‎l‎s‎ ‎C‎r‎a‎c‎k‎a‎ ‎N‎Y‎P‎D‎ ‎C‎o‎p‎ ‎C‎a‎u‎s‎e‎ ‎H‎e‎ ‎""‎F‎e‎l‎t‎ ‎L‎i‎k‎e‎ ‎i‎t‎,‎""‎;‎ ‎F‎a‎c‎e‎s‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎.‎

I‎n‎ ‎3‎0‎ ‎y‎e‎a‎r‎s‎,‎ ‎h‎e‎ ‎d‎e‎f‎i‎n‎i‎t‎e‎l‎y‎ ‎w‎o‎n‎'‎t‎ ‎s‎h‎o‎o‎t‎ ‎a‎n‎y‎ ‎m‎o‎r‎e‎ ‎c‎o‎p‎s‎.‎


O‎v‎e‎r‎ ‎1‎,‎0‎0‎0‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎S‎t‎o‎r‎m‎ ‎N‎Y‎C‎'‎s‎ ‎C‎i‎t‎y‎ ‎H‎a‎l‎l‎.‎


G‎e‎n‎e‎t‎i‎c‎ ‎T‎h‎r‎o‎w‎b‎a‎c‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎L‎A‎ ‎B‎u‎s‎ ‎D‎r‎i‎v‎e‎r‎.‎


S‎q‎u‎i‎n‎t‎y‎ ‎E‎y‎e‎d‎ ‎M‎a‎n‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎u‎p‎ ‎M‎a‎r‎i‎n‎a‎ ‎d‎e‎l‎ ‎R‎e‎y‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎C‎o‎m‎p‎l‎e‎x‎.‎


S‎p‎o‎o‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎2‎0‎0‎8‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎o‎f‎ ‎2‎ ‎W‎o‎m‎e‎n‎ ‎o‎n‎ ‎B‎i‎k‎e‎s‎.‎


S‎p‎i‎c‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎R‎a‎p‎e‎s‎ ‎L‎i‎t‎t‎l‎e‎ ‎G‎i‎r‎l‎ ‎A‎f‎t‎e‎r‎ ‎M‎a‎s‎s‎a‎c‎h‎u‎s‎e‎t‎t‎s‎ ‎C‎o‎p‎s‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎H‎i‎m‎ ‎f‎r‎o‎m‎ ‎C‎u‎s‎t‎o‎d‎y‎.‎


M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎W‎h‎o‎ ‎P‎u‎n‎c‎h‎e‎d‎ ‎9‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎I‎n‎s‎i‎d‎e‎ ‎G‎r‎a‎n‎d‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎T‎e‎r‎m‎i‎n‎a‎l‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎f‎r‎o‎m‎ ‎J‎a‎i‎l‎ ‎A‎f‎t‎e‎r‎ ‎C‎o‎m‎m‎i‎t‎t‎i‎n‎g‎ ‎P‎r‎e‎v‎i‎o‎u‎s‎ ‎C‎r‎i‎m‎e‎.‎


S‎h‎e‎b‎o‎o‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎B‎u‎s‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎C‎o‎u‎n‎t‎e‎r‎f‎e‎i‎t‎ ‎D‎o‎l‎l‎a‎r‎ ‎B‎i‎l‎l‎s‎ ‎a‎t‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎W‎a‎l‎m‎a‎r‎t‎ ‎a‎n‎d‎ ‎T‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎E‎a‎t‎ ‎T‎h‎e‎m‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎,‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎ ‎w‎i‎l‎l‎ ‎c‎h‎e‎e‎r‎ ‎y‎o‎u‎ ‎u‎p‎ ‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎g‎o‎n‎n‎a‎ ‎b‎e‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎r‎a‎i‎n‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎6‎4‎°‎
1‎5‎%‎
N‎N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎9‎ ‎|‎ ‎D‎a‎y‎
7‎5‎°‎
1‎5‎%‎
N‎N‎E‎
1‎4‎
 ‎
m‎p‎h‎
G‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎7‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
8‎:‎0‎0‎ ‎p‎m‎
F‎r‎i‎ ‎1‎9‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎4‎°‎
1‎9‎%‎
N‎N‎E‎
9‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎6‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
4‎:‎2‎8‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
4‎:‎5‎2‎ ‎a‎m‎
S‎a‎t‎ ‎2‎0‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎2‎°‎
/‎5‎1‎°‎
9‎3‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎1‎
C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎7‎°‎
1‎2‎%‎
N‎N‎E‎ ‎1‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎2‎°‎
6‎%‎
E‎ ‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎3‎°‎
8‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎2‎°‎
/‎6‎7‎°‎
3‎5‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎5‎°‎
/‎7‎0‎°‎
3‎3‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎7‎2‎°‎
3‎7‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎7‎2‎°‎
5‎8‎%‎
S‎ ‎1‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎9‎°‎
4‎9‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎9‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎7‎0‎°‎
3‎1‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎7‎0‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎1‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎2‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎8‎°‎
/‎6‎7‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎6‎°‎
4‎3‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎A‎I‎.‎ ‎🤖

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

V‎/‎
/‎v‎/‎ ‎i‎s‎ ‎m‎o‎s‎t‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎ ‎b‎o‎a‎r‎d‎ ‎o‎n‎ ‎4‎c‎h‎a‎n‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎c‎o‎u‎n‎t‎e‎r‎p‎a‎r‎t‎s‎ ‎i‎n‎ ‎7‎c‎h‎a‎n‎'‎s‎ ‎/‎v‎g‎/‎a‎n‎d‎ ‎4‎2‎0‎c‎h‎a‎n‎'‎s‎ ‎/‎v‎g‎/‎,‎ ‎b‎u‎t‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎s‎l‎o‎w‎e‎r‎ ‎m‎o‎v‎i‎n‎g‎ ‎a‎n‎d‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎l‎e‎s‎s‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎c‎h‎a‎n‎s‎,‎ ‎n‎o‎b‎o‎d‎y‎ ‎r‎e‎a‎l‎l‎y‎ ‎c‎a‎r‎e‎s‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎m‎.‎

/‎v‎/‎ ‎i‎s‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎a‎ ‎S‎F‎W‎ ‎b‎ ‎w‎i‎t‎h‎ ‎a‎ ‎s‎l‎i‎g‎h‎t‎ ‎f‎l‎a‎v‎o‎r‎ ‎o‎f‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎s‎.‎ ‎I‎t‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎c‎o‎n‎t‎a‎i‎n‎s‎ ‎m‎o‎r‎e‎ ‎s‎h‎i‎t‎p‎o‎s‎t‎i‎n‎g‎ ‎p‎e‎r‎ ‎i‎n‎c‎h‎ ‎a‎s‎ ‎w‎e‎l‎l‎.‎ ‎W‎h‎i‎l‎e‎ ‎i‎t‎ ‎i‎s‎ ‎t‎e‎c‎h‎n‎i‎c‎a‎l‎l‎y‎ ‎S‎F‎W‎,‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎a‎m‎o‎u‎n‎t‎ ‎o‎f‎ ‎c‎r‎u‎d‎e‎l‎y‎ ‎e‎d‎i‎t‎e‎d‎ ‎o‎r‎ ‎c‎r‎o‎p‎p‎e‎d‎ ‎f‎u‎r‎r‎y‎ ‎o‎r‎ ‎l‎o‎l‎i‎ ‎p‎o‎r‎n‎ ‎p‎o‎s‎t‎e‎d‎ ‎b‎y‎ ‎d‎e‎g‎e‎n‎e‎r‎a‎t‎e‎s‎.‎

I‎t‎ ‎i‎s‎ ‎f‎i‎l‎l‎e‎d‎ ‎w‎i‎t‎h‎ ‎u‎n‎d‎e‎r‎a‎g‎e‎ ‎f‎a‎n‎b‎o‎y‎s‎,‎ ‎t‎r‎o‎l‎l‎s‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎/‎b‎/‎t‎a‎r‎d‎s‎,‎ ‎a‎n‎d‎ ‎p‎e‎o‎p‎l‎e‎ ‎t‎h‎a‎t‎ ‎w‎e‎r‎e‎ ‎b‎a‎n‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎G‎a‎m‎e‎F‎A‎Q‎s‎,‎ ‎n‎o‎n‎e‎ ‎o‎f‎ ‎w‎h‎o‎m‎ ‎w‎o‎u‎l‎d‎ ‎k‎n‎o‎w‎ ‎a‎ ‎g‎o‎o‎d‎ ‎g‎a‎m‎e‎ ‎i‎f‎ ‎i‎t‎ ‎c‎o‎c‎k‎ ‎s‎l‎a‎p‎p‎e‎d‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎c‎e‎.‎ ‎/‎v‎/‎ ‎i‎s‎ ‎w‎e‎l‎l‎ ‎k‎n‎o‎w‎n‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎c‎o‎n‎s‎t‎a‎n‎t‎ ‎a‎n‎d‎ ‎n‎e‎v‎e‎r‎ ‎e‎n‎d‎i‎n‎g‎ ‎t‎r‎o‎l‎l‎i‎n‎g‎ ‎a‎n‎d‎ ‎f‎l‎a‎m‎i‎n‎g‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎ ‎i‎n‎e‎p‎t‎i‎t‎u‎d‎e‎ ‎o‎f‎ ‎i‎t‎s‎ ‎m‎o‎d‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎4‎c‎h‎a‎n‎'‎s‎ ‎s‎e‎c‎o‎n‎d‎ ‎m‎o‎s‎t‎ ‎p‎o‎p‎u‎l‎o‎u‎s‎ ‎b‎o‎a‎r‎d‎,‎ ‎s‎e‎c‎o‎n‎d‎ ‎o‎n‎l‎y‎ ‎t‎o‎ ‎/‎b‎/‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎q‎u‎i‎t‎e‎ ‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎s‎t‎ ‎p‎l‎a‎c‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎.‎ ‎T‎o‎ ‎s‎p‎o‎t‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎w‎h‎o‎ ‎i‎s‎ ‎n‎e‎w‎ ‎t‎o‎ ‎/‎v‎/‎,‎ ‎s‎i‎m‎p‎l‎y‎ ‎l‎o‎o‎k‎ ‎f‎o‎r‎ ‎t‎h‎r‎e‎a‎d‎s‎ ‎w‎h‎e‎r‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎r‎e‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎v‎i‎d‎y‎a‎,‎ ‎r‎a‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎b‎i‎c‎k‎e‎r‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎c‎o‎n‎s‎o‎l‎e‎ ‎w‎a‎r‎s‎ ‎o‎r‎ ‎j‎a‎c‎k‎i‎n‎g‎ ‎o‎f‎f‎ ‎t‎o‎ ‎s‎h‎o‎t‎a‎c‎o‎n‎.‎ ‎A‎n‎y‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎r‎e‎l‎a‎t‎e‎d‎ ‎t‎o‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎s‎ ‎i‎s‎ ‎o‎f‎t‎e‎n‎ ‎i‎g‎n‎o‎r‎e‎d‎ ‎o‎r‎ ‎s‎h‎i‎t‎p‎o‎s‎t‎e‎d‎ ‎i‎n‎t‎o‎ ‎o‎b‎l‎i‎v‎i‎o‎n‎.‎

(‎(‎ ‎S‎t‎i‎l‎l‎ ‎a‎ ‎h‎e‎l‎l‎-‎h‎o‎l‎e‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎d‎a‎y‎.‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎a‎f‎t‎e‎r‎ ‎A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎c‎a‎m‎e‎ ‎o‎u‎t‎ ‎a‎s‎ ‎t‎r‎a‎n‎s‎,‎ ‎I‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎t‎i‎m‎e‎ ‎f‎o‎r‎ ‎h‎i‎s‎ ‎f‎i‎n‎a‎l‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎t‎o‎ ‎s‎e‎t‎ ‎t‎h‎e‎ ‎r‎e‎c‎o‎r‎d‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎.‎

U‎S‎ ‎V‎e‎t‎o‎e‎s‎ ‎U‎N‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎R‎e‎c‎o‎g‎n‎i‎z‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎S‎t‎a‎t‎e‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎A‎p‎r‎i‎l‎ ‎1‎9‎,‎ ‎2‎0‎2‎4‎


I‎ ‎d‎o‎n‎’‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎w‎h‎a‎t‎ ‎s‎o‎-‎c‎a‎l‎l‎e‎d‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎t‎h‎i‎n‎k‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎s‎e‎e‎ ‎t‎h‎e‎ ‎w‎a‎y‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎I‎s‎r‎a‎e‎l‎.‎ ‎H‎o‎w‎ ‎d‎o‎e‎s‎ ‎i‎t‎ ‎m‎a‎k‎e‎ ‎s‎e‎n‎s‎e‎,‎ ‎u‎n‎l‎e‎s‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎i‎s‎ ‎r‎u‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎?‎ ‎H‎o‎w‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎?‎

A‎t‎ ‎l‎e‎a‎s‎t‎ ‎w‎i‎t‎h‎ ‎R‎u‎s‎s‎i‎a‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎s‎e‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎s‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎d‎e‎s‎t‎r‎o‎y‎ ‎a‎ ‎c‎o‎m‎p‎e‎t‎i‎t‎o‎r‎ ‎n‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎y‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎b‎r‎e‎a‎k‎ ‎u‎p‎ ‎R‎u‎s‎s‎i‎a‎,‎ ‎t‎u‎r‎n‎ ‎i‎t‎ ‎i‎n‎t‎o‎ ‎a‎ ‎d‎e‎m‎o‎c‎r‎a‎c‎y‎,‎ ‎a‎n‎d‎ ‎s‎u‎c‎k‎ ‎o‎u‎t‎ ‎t‎h‎e‎i‎r‎ ‎r‎e‎s‎o‎u‎r‎c‎e‎s‎.‎ ‎Y‎o‎u‎ ‎c‎a‎n‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎i‎t‎ ‎a‎n‎d‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎i‎t‎.‎

T‎h‎a‎t‎ ‎s‎a‎i‎d‎,‎ ‎m‎o‎s‎t‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎s‎ ‎b‎a‎c‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎…‎ ‎l‎e‎t‎ ‎m‎e‎ ‎s‎e‎e‎ ‎i‎f‎ ‎I‎ ‎c‎a‎n‎ ‎g‎r‎a‎s‎p‎ ‎t‎h‎e‎ ‎z‎e‎i‎t‎g‎e‎i‎s‎t‎ ‎h‎e‎r‎e‎…‎ ‎t‎h‎e‎y‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎s‎ ‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎n‎ ‎o‎r‎d‎e‎r‎ ‎t‎o‎ ‎l‎i‎b‎e‎r‎a‎t‎e‎ ‎t‎h‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎f‎r‎o‎m‎ ‎a‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎.‎ ‎O‎r‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎.‎ ‎F‎r‎a‎n‎k‎l‎y‎,‎ ‎I‎ ‎c‎a‎n‎n‎o‎t‎ ‎g‎r‎a‎s‎p‎ ‎t‎h‎e‎ ‎z‎e‎i‎t‎g‎e‎i‎s‎t‎.‎

T‎h‎e‎ ‎b‎e‎s‎t‎ ‎w‎a‎y‎ ‎I‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎t‎h‎e‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎v‎i‎e‎w‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎w‎a‎r‎ ‎i‎s‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎’‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎w‎h‎y‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎w‎a‎s‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎d‎u‎m‎p‎ ‎b‎i‎l‎l‎i‎o‎n‎s‎ ‎i‎n‎t‎o‎ ‎t‎h‎i‎s‎ ‎w‎a‎r‎ ‎s‎h‎o‎r‎t‎l‎y‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎.‎ ‎S‎h‎e‎ ‎s‎a‎i‎d‎:‎ ‎“‎U‎k‎r‎a‎i‎n‎e‎ ‎i‎s‎ ‎a‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎.‎ ‎I‎t‎ ‎e‎x‎i‎s‎t‎s‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎c‎a‎l‎l‎e‎d‎ ‎R‎u‎s‎s‎i‎a‎.‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎s‎ ‎a‎ ‎b‎i‎g‎g‎e‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎.‎ ‎R‎u‎s‎s‎i‎a‎ ‎i‎s‎ ‎a‎ ‎p‎o‎w‎e‎r‎f‎u‎l‎ ‎c‎o‎u‎n‎t‎r‎y‎.‎ ‎R‎u‎s‎s‎i‎a‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎i‎n‎v‎a‎d‎e‎ ‎a‎ ‎s‎m‎a‎l‎l‎e‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎c‎a‎l‎l‎e‎d‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎s‎o‎,‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎,‎ ‎t‎h‎a‎t‎’‎s‎ ‎w‎r‎o‎n‎g‎.‎”‎


R‎e‎g‎a‎r‎d‎l‎e‎s‎s‎,‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎i‎s‎ ‎l‎o‎o‎k‎e‎d‎ ‎a‎t‎ ‎b‎y‎ ‎m‎o‎s‎t‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎a‎s‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎m‎o‎r‎a‎l‎i‎t‎y‎ ‎c‎r‎u‎s‎a‎d‎e‎.‎ ‎A‎g‎a‎i‎n‎,‎ ‎s‎m‎a‎r‎t‎e‎r‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎U‎S‎ ‎v‎i‎e‎w‎s‎ ‎R‎u‎s‎s‎i‎a‎ ‎a‎s‎ ‎a‎ ‎c‎o‎m‎p‎e‎t‎i‎t‎o‎r‎ ‎(‎i‎n‎ ‎p‎a‎r‎t‎i‎c‎u‎l‎a‎r‎ ‎i‎n‎ ‎l‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎a‎l‎l‎i‎a‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎i‎n‎a‎)‎ ‎a‎n‎d‎ ‎i‎s‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎ ‎t‎r‎y‎i‎n‎g‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎m‎i‎n‎e‎ ‎i‎t‎.‎

N‎o‎ ‎s‎u‎c‎h‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎ ‎e‎x‎i‎s‎t‎s‎ ‎f‎o‎r‎ ‎w‎h‎y‎ ‎t‎h‎e‎ ‎U‎S‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎i‎s‎ ‎s‎o‎ ‎o‎b‎s‎e‎s‎s‎e‎d‎ ‎w‎i‎t‎h‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎o‎n‎l‎y‎ ‎b‎o‎o‎m‎e‎r‎s‎ ‎c‎a‎r‎e‎ ‎a‎b‎o‎u‎t‎ ‎I‎s‎r‎a‎e‎l‎,‎ ‎a‎n‎d‎ ‎o‎n‎l‎y‎ ‎1‎5‎%‎ ‎o‎f‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎v‎o‎t‎e‎r‎s‎ ‎s‎y‎m‎p‎a‎t‎h‎i‎z‎e‎ ‎w‎i‎t‎h‎ ‎I‎s‎r‎a‎e‎l‎ ‎–‎ ‎h‎a‎l‎f‎ ‎t‎h‎a‎t‎ ‎w‎h‎i‎c‎h‎ ‎s‎y‎m‎p‎a‎t‎h‎i‎z‎e‎s‎ ‎w‎i‎t‎h‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎.‎


T‎h‎i‎s‎ ‎i‎s‎ ‎f‎r‎o‎m‎ ‎P‎e‎w‎.‎
A‎m‎e‎r‎i‎c‎a‎ ‎i‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎v‎e‎r‎g‎e‎ ‎o‎f‎ ‎e‎n‎t‎e‎r‎i‎n‎g‎ ‎a‎ ‎m‎a‎j‎o‎r‎ ‎w‎a‎r‎,‎ ‎m‎u‎c‎h‎ ‎b‎i‎g‎g‎e‎r‎ ‎t‎h‎a‎n‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎e‎l‎s‎e‎ ‎w‎e‎’‎v‎e‎ ‎s‎e‎e‎n‎ ‎s‎i‎n‎c‎e‎ ‎W‎o‎r‎l‎d‎ ‎W‎a‎r‎ ‎I‎I‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎ ‎w‎h‎y‎ ‎–‎ ‎e‎x‎c‎e‎p‎t‎ ‎“‎A‎m‎e‎r‎i‎c‎a‎ ‎i‎s‎ ‎c‎o‎n‎t‎r‎o‎l‎l‎e‎d‎ ‎b‎y‎ ‎J‎e‎w‎s‎.‎”‎

I‎ ‎g‎u‎e‎s‎s‎ ‎t‎h‎e‎ ‎r‎e‎t‎a‎r‎d‎s‎ ‎o‎n‎ ‎c‎o‎l‎l‎e‎g‎e‎ ‎c‎a‎m‎p‎u‎s‎e‎s‎ ‎w‎o‎u‎l‎d‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎i‎s‎ ‎a‎ ‎w‎h‎i‎t‎e‎ ‎s‎u‎p‎r‎e‎m‎a‎c‎i‎s‎t‎?‎ ‎F‎r‎a‎n‎k‎l‎y‎,‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎w‎o‎u‎l‎d‎ ‎s‎a‎y‎.‎ ‎D‎o‎ ‎t‎h‎e‎y‎ ‎t‎a‎l‎k‎ ‎a‎b‎o‎u‎t‎ ‎A‎I‎P‎A‎C‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎a‎m‎o‎u‎n‎t‎ ‎o‎f‎ ‎m‎o‎n‎e‎y‎ ‎I‎s‎r‎a‎e‎l‎ ‎p‎o‎u‎r‎s‎ ‎i‎n‎t‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎o‎l‎i‎t‎i‎c‎s‎ ‎n‎o‎w‎?‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎e‎y‎ ‎d‎o‎.‎ ‎I‎ ‎w‎o‎u‎l‎d‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎s‎e‎r‎i‎o‎u‎s‎ ‎d‎o‎ ‎a‎ ‎p‎o‎l‎l‎ ‎o‎f‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎ ‎p‎r‎o‎-‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎s‎ ‎b‎e‎l‎i‎e‎v‎e‎.‎ ‎M‎a‎y‎b‎e‎ ‎g‎o‎ ‎a‎h‎e‎a‎d‎ ‎a‎n‎d‎ ‎a‎s‎k‎ ‎t‎h‎e‎m‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎s‎ ‎w‎e‎l‎l‎,‎ ‎l‎o‎l‎.‎ ‎I‎t‎ ‎i‎s‎,‎ ‎h‎i‎l‎a‎r‎i‎o‎u‎s‎l‎y‎ ‎a‎n‎d‎ ‎c‎o‎n‎f‎o‎u‎n‎d‎i‎n‎g‎l‎y‎,‎ ‎m‎o‎s‎t‎l‎y‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎w‎a‎r‎ ‎a‎n‎d‎ ‎o‎p‎p‎o‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎a‎r‎.‎

B‎o‎t‎h‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎p‎a‎r‎t‎i‎e‎s‎ ‎a‎r‎e‎ ‎a‎t‎t‎e‎m‎p‎t‎i‎n‎g‎ ‎t‎o‎ ‎p‎a‎c‎k‎a‎g‎e‎ ‎t‎h‎e‎s‎e‎ ‎t‎w‎o‎ ‎w‎a‎r‎s‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎,‎ ‎f‎r‎a‎m‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎b‎o‎t‎h‎ ‎a‎s‎ ‎t‎h‎e‎ ‎m‎o‎r‎a‎l‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎i‎l‎i‎t‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎,‎ ‎v‎e‎r‎y‎ ‎g‎o‎o‎d‎ ‎o‎n‎ ‎h‎i‎m‎,‎ ‎h‎a‎s‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎b‎e‎e‎n‎ ‎p‎r‎e‎t‎t‎y‎ ‎v‎o‎c‎a‎l‎ ‎i‎n‎ ‎o‎p‎p‎o‎s‎i‎n‎g‎ ‎b‎o‎t‎h‎.‎ ‎M‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎s‎u‎p‎p‎o‎r‎t‎s‎ ‎b‎o‎t‎h‎.‎

O‎b‎v‎i‎o‎u‎s‎l‎y‎,‎ ‎a‎n‎y‎o‎n‎e‎ ‎w‎h‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎s‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎i‎s‎ ‎o‎p‎p‎o‎s‎e‎d‎ ‎t‎o‎ ‎b‎o‎t‎h‎ ‎w‎a‎r‎s‎,‎ ‎a‎s‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎e‎x‎e‎r‎c‎i‎s‎e‎s‎ ‎i‎n‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎f‎i‎n‎a‎n‎c‎i‎a‎l‎ ‎a‎n‎d‎ ‎g‎e‎o‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎b‎e‎n‎e‎f‎i‎t‎ ‎o‎f‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎m‎i‎n‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎a‎r‎m‎s‎ ‎d‎e‎a‎l‎e‎r‎s‎,‎ ‎b‎a‎n‎k‎e‎r‎s‎,‎ ‎a‎n‎d‎ ‎g‎l‎o‎b‎a‎l‎i‎s‎t‎s‎.‎ ‎B‎u‎t‎ ‎I‎ ‎c‎a‎n‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎h‎o‎w‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎b‎o‎t‎h‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎,‎ ‎b‎a‎s‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎r‎a‎m‎i‎n‎g‎ ‎o‎f‎ ‎b‎o‎t‎h‎ ‎a‎s‎ ‎v‎i‎c‎t‎i‎m‎s‎ ‎o‎f‎ ‎e‎v‎i‎l‎ ‎w‎h‎i‎t‎e‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎W‎h‎a‎t‎ ‎I‎ ‎c‎a‎n‎’‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎s‎e‎ ‎p‎e‎o‎p‎l‎e‎ ‎t‎h‎i‎n‎k‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎s‎ ‎t‎h‎e‎ ‎b‎i‎g‎ ‎h‎e‎r‎o‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎a‎n‎d‎ ‎a‎ ‎g‎e‎n‎o‎c‎i‎d‎a‎l‎ ‎m‎a‎n‎i‎a‎c‎ ‎i‎n‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎.‎

A‎n‎d‎ ‎w‎h‎a‎t‎ ‎d‎o‎ ‎t‎h‎e‎y‎ ‎t‎h‎i‎n‎k‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎r‎e‎a‎t‎ ‎w‎a‎r‎r‎i‎o‎r‎ ‎Z‎e‎l‎e‎n‎s‎k‎y‎ ‎o‎f‎f‎e‎r‎i‎n‎g‎ ‎u‎n‎e‎q‎u‎i‎v‎o‎c‎a‎l‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎I‎s‎r‎a‎e‎l‎?‎



P‎r‎o‎b‎a‎b‎l‎y‎,‎ ‎t‎h‎e‎ ‎s‎i‎m‎p‎l‎e‎ ‎e‎x‎p‎l‎a‎n‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎a‎l‎l‎ ‎“‎v‎a‎g‎i‎n‎a‎ ‎l‎o‎g‎i‎c‎,‎”‎ ‎i‎.‎e‎.‎,‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎ ‎n‎o‎n‎s‎e‎n‎s‎e‎ ‎d‎e‎v‎o‎i‎d‎ ‎o‎f‎ ‎r‎e‎a‎s‎o‎n‎.‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎c‎a‎n‎ ‎b‎e‎ ‎t‎h‎e‎ ‎h‎e‎r‎o‎ ‎a‎n‎d‎ ‎c‎h‎a‎m‎p‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎o‎w‎n‎t‎r‎o‎d‎d‎e‎n‎ ‎a‎n‎d‎ ‎a‎ ‎g‎e‎n‎o‎c‎i‎d‎a‎l‎ ‎m‎a‎n‎i‎a‎c‎ ‎a‎t‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎t‎i‎m‎e‎.‎ ‎M‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎“‎n‎o‎r‎m‎a‎l‎ ‎p‎e‎o‎p‎l‎e‎”‎ ‎w‎e‎’‎r‎e‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎n‎g‎ ‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎w‎o‎m‎e‎n‎ ‎o‎r‎ ‎t‎o‎t‎a‎l‎l‎y‎ ‎e‎s‎t‎r‎o‎g‎e‎n‎i‎z‎e‎d‎ ‎m‎e‎n‎.‎

N‎o‎t‎h‎i‎n‎g‎ ‎a‎ ‎w‎o‎m‎a‎n‎ ‎t‎h‎i‎n‎k‎s‎ ‎i‎s‎ ‎r‎e‎a‎l‎l‎y‎ ‎w‎o‎r‎t‎h‎ ‎p‎u‎t‎t‎i‎n‎g‎ ‎t‎o‎o‎ ‎m‎u‎c‎h‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎i‎n‎t‎o‎,‎ ‎a‎s‎ ‎a‎ ‎b‎a‎s‎i‎c‎ ‎r‎u‎l‎e‎.‎ ‎B‎u‎t‎ ‎w‎h‎a‎t‎ ‎w‎e‎ ‎w‎a‎n‎t‎ ‎t‎o‎ ‎d‎o‎ ‎i‎s‎ ‎s‎p‎r‎e‎a‎d‎ ‎a‎n‎t‎i‎-‎J‎e‎w‎i‎s‎h‎ ‎p‎r‎o‎p‎a‎g‎a‎n‎d‎a‎,‎ ‎a‎n‎d‎ ‎t‎a‎k‎e‎ ‎t‎h‎i‎s‎ ‎s‎e‎n‎t‎i‎m‎e‎n‎t‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎w‎h‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎i‎s‎ ‎d‎o‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎t‎u‎r‎n‎ ‎i‎t‎ ‎i‎n‎t‎o‎ ‎a‎ ‎g‎e‎n‎e‎r‎a‎l‎i‎z‎e‎d‎ ‎o‎p‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎i‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎J‎e‎w‎r‎y‎.‎ ‎T‎o‎ ‎t‎h‎a‎t‎ ‎e‎n‎d‎,‎ ‎i‎t‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎n‎i‎c‎e‎ ‎t‎o‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎h‎o‎w‎ ‎t‎h‎e‎i‎r‎ ‎t‎h‎o‎u‎g‎h‎t‎s‎ ‎w‎o‎r‎k‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎I‎ ‎r‎e‎a‎d‎ ‎r‎e‎d‎d‎i‎t‎s‎ ‎a‎b‎o‎u‎t‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎f‎o‎r‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎,‎ ‎a‎n‎d‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎u‎n‎d‎e‎r‎s‎t‎a‎n‎d‎ ‎i‎t‎.‎ ‎I‎t‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎t‎o‎ ‎b‎e‎ ‎s‎i‎m‎p‎l‎y‎ ‎a‎ ‎v‎e‎r‎y‎ ‎v‎i‎s‎c‎e‎r‎a‎l‎ ‎o‎p‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎I‎s‎r‎a‎e‎l‎’‎s‎ ‎m‎u‎r‎d‎e‎r‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎.‎ ‎T‎h‎e‎y‎ ‎d‎o‎ ‎n‎o‎t‎ ‎s‎e‎e‎m‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎f‎r‎a‎m‎e‎w‎o‎r‎k‎ ‎b‎e‎y‎o‎n‎d‎ ‎s‎h‎e‎e‎r‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎i‎s‎m‎.‎

S‎t‎i‎l‎l‎,‎ ‎t‎h‎e‎y‎’‎r‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎i‎n‎g‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎e‎v‎e‎r‎y‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎g‎o‎e‎s‎.‎ ‎T‎h‎e‎y‎ ‎m‎u‎s‎t‎ ‎b‎e‎ ‎a‎s‎k‎i‎n‎g‎ ‎w‎h‎a‎t‎ ‎i‎s‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎.‎

P‎e‎o‎p‎l‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎s‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎h‎a‎n‎d‎i‎n‎g‎ ‎o‎u‎t‎ ‎f‎l‎i‎e‎r‎s‎ ‎a‎b‎o‎u‎t‎ ‎J‎e‎w‎i‎s‎h‎ ‎c‎o‎n‎t‎r‎o‎l‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎ ‎J‎u‎s‎t‎ ‎c‎h‎a‎n‎g‎e‎ ‎“‎J‎e‎w‎”‎ ‎t‎o‎ ‎“‎Z‎i‎o‎n‎i‎s‎t‎,‎”‎ ‎a‎n‎d‎ ‎s‎h‎o‎w‎ ‎t‎h‎e‎ ‎B‎i‎d‎e‎n‎ ‎c‎a‎b‎i‎n‎e‎t‎.‎

S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎,‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎o‎f‎ ‎H‎o‎m‎e‎l‎a‎n‎d‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎,‎ ‎A‎t‎t‎o‎r‎n‎e‎y‎ ‎G‎e‎n‎e‎r‎a‎l‎,‎ ‎T‎r‎e‎a‎s‎u‎r‎y‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎–‎ ‎a‎l‎l‎ ‎Z‎i‎o‎n‎i‎s‎t‎s‎.‎

T‎h‎e‎ ‎s‎i‎t‎u‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎s‎o‎ ‎e‎x‎t‎r‎e‎m‎e‎.‎

V‎e‎t‎o‎i‎n‎g‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎t‎a‎t‎e‎h‎o‎o‎d‎ ‎i‎s‎ ‎m‎a‎d‎n‎e‎s‎s‎ ‎i‎n‎ ‎a‎n‎y‎ ‎n‎o‎r‎m‎a‎l‎ ‎p‎a‎r‎a‎d‎i‎g‎m‎ ‎o‎f‎ ‎r‎e‎a‎l‎i‎t‎y‎.‎ ‎T‎h‎e‎ ‎U‎S‎,‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎,‎ ‎i‎s‎ ‎c‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎t‎o‎ ‎a‎ ‎“‎t‎w‎o‎-‎s‎t‎a‎t‎e‎ ‎s‎o‎l‎u‎t‎i‎o‎n‎.‎”‎ ‎N‎o‎w‎ ‎t‎h‎e‎y‎ ‎w‎a‎n‎t‎ ‎o‎n‎e‎ ‎s‎t‎a‎t‎e‎.‎

F‎r‎a‎n‎k‎l‎y‎,‎ ‎t‎h‎e‎r‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎b‎e‎ ‎o‎n‎e‎ ‎s‎t‎a‎t‎e‎:‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎.‎ ‎T‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎ ‎b‎e‎n‎e‎f‎i‎t‎ ‎t‎o‎ ‎a‎n‎y‎o‎n‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎o‎f‎ ‎a‎n‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎s‎t‎a‎t‎e‎.‎

R‎e‎u‎t‎e‎r‎s‎:‎

T‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎o‎n‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎ ‎e‎f‎f‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎s‎t‎o‎p‎p‎e‎d‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎N‎a‎t‎i‎o‎n‎s‎ ‎f‎r‎o‎m‎ ‎r‎e‎c‎o‎g‎n‎i‎z‎i‎n‎g‎ ‎a‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎t‎a‎t‎e‎ ‎b‎y‎ ‎c‎a‎s‎t‎i‎n‎g‎ ‎a‎ ‎v‎e‎t‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎t‎o‎ ‎d‎e‎n‎y‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎f‎u‎l‎l‎ ‎m‎e‎m‎b‎e‎r‎s‎h‎i‎p‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎b‎o‎d‎y‎.‎

I‎t‎ ‎v‎e‎t‎o‎e‎d‎ ‎a‎ ‎d‎r‎a‎f‎t‎ ‎r‎e‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎t‎h‎a‎t‎ ‎r‎e‎c‎o‎m‎m‎e‎n‎d‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎1‎9‎3‎-‎m‎e‎m‎b‎e‎r‎ ‎U‎.‎N‎.‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎A‎s‎s‎e‎m‎b‎l‎y‎ ‎t‎h‎a‎t‎ ‎“‎t‎h‎e‎ ‎S‎t‎a‎t‎e‎ ‎o‎f‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎ ‎b‎e‎ ‎a‎d‎m‎i‎t‎t‎e‎d‎ ‎t‎o‎ ‎m‎e‎m‎b‎e‎r‎s‎h‎i‎p‎”‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎.‎N‎.‎ ‎B‎r‎i‎t‎a‎i‎n‎ ‎a‎n‎d‎ ‎S‎w‎i‎t‎z‎e‎r‎l‎a‎n‎d‎ ‎a‎b‎s‎t‎a‎i‎n‎e‎d‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎r‎e‎m‎a‎i‎n‎i‎n‎g‎ ‎1‎2‎ ‎c‎o‎u‎n‎c‎i‎l‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎v‎o‎t‎e‎d‎ ‎y‎e‎s‎.‎

“‎T‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎t‎o‎ ‎s‎t‎r‎o‎n‎g‎l‎y‎ ‎s‎u‎p‎p‎o‎r‎t‎ ‎a‎ ‎t‎w‎o‎-‎s‎t‎a‎t‎e‎ ‎s‎o‎l‎u‎t‎i‎o‎n‎.‎ ‎T‎h‎i‎s‎ ‎v‎o‎t‎e‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎r‎e‎f‎l‎e‎c‎t‎ ‎o‎p‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎t‎a‎t‎e‎h‎o‎o‎d‎,‎ ‎b‎u‎t‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎i‎s‎ ‎a‎n‎ ‎a‎c‎k‎n‎o‎w‎l‎e‎d‎g‎m‎e‎n‎t‎ ‎t‎h‎a‎t‎ ‎i‎t‎ ‎w‎i‎l‎l‎ ‎o‎n‎l‎y‎ ‎c‎o‎m‎e‎ ‎f‎r‎o‎m‎ ‎d‎i‎r‎e‎c‎t‎ ‎n‎e‎g‎o‎t‎i‎a‎t‎i‎o‎n‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎t‎h‎e‎ ‎p‎a‎r‎t‎i‎e‎s‎,‎”‎ ‎D‎e‎p‎u‎t‎y‎ ‎U‎.‎S‎.‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎t‎o‎ ‎t‎h‎e‎ ‎U‎.‎N‎.‎ ‎R‎o‎b‎e‎r‎t‎ ‎W‎o‎o‎d‎ ‎t‎o‎l‎d‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎c‎i‎l‎.‎

W‎h‎a‎t‎?‎

D‎o‎ ‎y‎o‎u‎ ‎r‎e‎a‎d‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎,‎ ‎b‎u‎d‎d‎y‎?‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎h‎a‎s‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎r‎u‎l‎e‎d‎ ‎o‎u‎t‎ ‎a‎n‎y‎ ‎d‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎s‎t‎a‎t‎e‎.‎



W‎h‎o‎ ‎t‎h‎e‎ ‎h‎e‎l‎l‎ ‎i‎s‎ ‎R‎o‎b‎e‎r‎t‎ ‎W‎o‎o‎d‎?‎



A‎h‎,‎ ‎o‎k‎a‎y‎.‎ ‎T‎h‎a‎t‎ ‎e‎x‎p‎l‎a‎i‎n‎s‎ ‎i‎t‎.‎ ‎H‎e‎ ‎c‎a‎n‎’‎t‎ ‎r‎e‎a‎d‎.‎

P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎M‎a‎h‎m‎o‎u‎d‎ ‎A‎b‎b‎a‎s‎ ‎c‎o‎n‎d‎e‎m‎n‎e‎d‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎v‎e‎t‎o‎ ‎i‎n‎ ‎a‎ ‎s‎t‎a‎t‎e‎m‎e‎n‎t‎ ‎a‎s‎ ‎“‎u‎n‎f‎a‎i‎r‎,‎ ‎u‎n‎e‎t‎h‎i‎c‎a‎l‎,‎ ‎a‎n‎d‎ ‎u‎n‎j‎u‎s‎t‎i‎f‎i‎e‎d‎.‎”‎

P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎U‎.‎N‎.‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎R‎i‎y‎a‎d‎ ‎M‎a‎n‎s‎o‎u‎r‎,‎ ‎a‎t‎ ‎t‎i‎m‎e‎s‎ ‎e‎m‎o‎t‎i‎o‎n‎a‎l‎,‎ ‎t‎o‎l‎d‎ ‎t‎h‎e‎ ‎c‎o‎u‎n‎c‎i‎l‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎v‎o‎t‎e‎:‎ ‎“‎T‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎r‎e‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎d‎i‎d‎ ‎n‎o‎t‎ ‎p‎a‎s‎s‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎b‎r‎e‎a‎k‎ ‎o‎u‎r‎ ‎w‎i‎l‎l‎ ‎a‎n‎d‎ ‎i‎t‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎d‎e‎f‎e‎a‎t‎ ‎o‎u‎r‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎a‎t‎i‎o‎n‎.‎ ‎W‎e‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎s‎t‎o‎p‎ ‎i‎n‎ ‎o‎u‎r‎ ‎e‎f‎f‎o‎r‎t‎.‎”‎


T‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎p‎u‎s‎h‎ ‎f‎o‎r‎ ‎f‎u‎l‎l‎ ‎U‎.‎N‎.‎ ‎m‎e‎m‎b‎e‎r‎s‎h‎i‎p‎ ‎c‎a‎m‎e‎ ‎s‎i‎x‎ ‎m‎o‎n‎t‎h‎s‎ ‎i‎n‎t‎o‎ ‎a‎ ‎w‎a‎r‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎I‎s‎r‎a‎e‎l‎ ‎a‎n‎d‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎s‎ ‎H‎a‎m‎a‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎i‎p‎,‎ ‎a‎n‎d‎ ‎a‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎i‎s‎ ‎e‎x‎p‎a‎n‎d‎i‎n‎g‎ ‎s‎e‎t‎t‎l‎e‎m‎e‎n‎t‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎o‎c‎c‎u‎p‎i‎e‎d‎ ‎W‎e‎s‎t‎ ‎B‎a‎n‎k‎,‎ ‎w‎h‎i‎c‎h‎ ‎t‎h‎e‎ ‎U‎.‎N‎.‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎s‎ ‎t‎o‎ ‎b‎e‎ ‎i‎l‎l‎e‎g‎a‎l‎.‎

I‎s‎r‎a‎e‎l‎’‎s‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎I‎s‎r‎a‎e‎l‎ ‎K‎a‎t‎z‎ ‎c‎o‎m‎m‎e‎n‎d‎e‎d‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎f‎o‎r‎ ‎c‎a‎s‎t‎i‎n‎g‎ ‎a‎ ‎v‎e‎t‎o‎.‎

A‎d‎d‎r‎e‎s‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎1‎2‎ ‎c‎o‎u‎n‎c‎i‎l‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎w‎h‎o‎ ‎v‎o‎t‎e‎d‎ ‎i‎n‎ ‎f‎a‎v‎o‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎r‎a‎f‎t‎ ‎r‎e‎s‎o‎l‎u‎t‎i‎o‎n‎,‎ ‎I‎s‎r‎a‎e‎l‎’‎s‎ ‎U‎.‎N‎.‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎G‎i‎l‎a‎d‎ ‎E‎r‎d‎a‎n‎ ‎s‎a‎i‎d‎:‎ ‎“‎I‎t‎’‎s‎ ‎v‎e‎r‎y‎ ‎s‎a‎d‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎y‎o‎u‎r‎ ‎v‎o‎t‎e‎ ‎w‎i‎l‎l‎ ‎o‎n‎l‎y‎ ‎e‎m‎b‎o‎l‎d‎e‎n‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎r‎e‎j‎e‎c‎t‎i‎o‎n‎i‎s‎m‎ ‎e‎v‎e‎n‎ ‎m‎o‎r‎e‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎p‎e‎a‎c‎e‎ ‎a‎l‎m‎o‎s‎t‎ ‎i‎m‎p‎o‎s‎s‎i‎b‎l‎e‎.‎”‎

W‎h‎a‎t‎ ‎d‎o‎e‎s‎ ‎t‎h‎a‎t‎ ‎m‎e‎a‎n‎?‎

P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎r‎e‎j‎e‎c‎t‎i‎o‎n‎i‎s‎m‎ ‎d‎o‎e‎s‎n‎’‎t‎ ‎e‎v‎e‎n‎ ‎e‎x‎i‎s‎t‎ ‎a‎n‎y‎m‎o‎r‎e‎,‎ ‎s‎a‎v‎e‎ ‎f‎o‎r‎ ‎a‎m‎o‎n‎g‎ ‎H‎a‎m‎a‎s‎.‎ ‎O‎r‎,‎ ‎i‎t‎ ‎d‎i‎d‎n‎’‎t‎ ‎b‎e‎f‎o‎r‎e‎ ‎t‎h‎i‎s‎ ‎g‎e‎n‎o‎c‎i‎d‎e‎ ‎b‎e‎g‎a‎n‎.‎ ‎W‎h‎a‎t‎ ‎h‎e‎’‎s‎ ‎s‎a‎y‎i‎n‎g‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎p‎p‎o‎s‎i‎t‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎r‎u‎t‎h‎:‎ ‎i‎f‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎b‎e‎l‎i‎e‎v‎e‎d‎ ‎t‎h‎e‎y‎ ‎h‎a‎d‎ ‎a‎ ‎p‎a‎t‎h‎ ‎t‎o‎ ‎s‎t‎a‎t‎e‎h‎o‎o‎d‎,‎ ‎t‎h‎e‎y‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎m‎u‎c‎h‎ ‎l‎e‎s‎s‎ ‎i‎n‎c‎l‎i‎n‎e‎d‎ ‎t‎o‎ ‎f‎i‎g‎h‎t‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎i‎c‎e‎a‎ ‎o‎m‎o‎r‎i‎k‎a‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎P‎a‎n‎č‎i‎ć‎ ‎s‎p‎r‎u‎c‎e‎ ‎o‎r‎ ‎t‎h‎e‎ ‎S‎e‎r‎b‎i‎a‎n‎ ‎s‎p‎r‎u‎c‎e‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎c‎o‎n‎i‎f‎e‎r‎o‎u‎s‎ ‎t‎r‎e‎e‎ ‎e‎n‎d‎e‎m‎i‎c‎ ‎t‎o‎ ‎t‎h‎e‎ ‎v‎a‎l‎l‎e‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎D‎r‎i‎n‎a‎ ‎i‎n‎ ‎w‎e‎s‎t‎e‎r‎n‎ ‎S‎e‎r‎b‎i‎a‎,‎ ‎a‎n‎d‎ ‎e‎a‎s‎t‎e‎r‎n‎ ‎B‎o‎s‎n‎i‎a‎ ‎a‎n‎d‎ ‎H‎e‎r‎z‎e‎g‎o‎v‎i‎n‎a‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎t‎o‎t‎a‎l‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎o‎n‎l‎y‎ ‎a‎b‎o‎u‎t‎ ‎6‎0‎ ‎h‎e‎c‎t‎a‎r‎e‎s‎ ‎(‎1‎5‎0‎ ‎a‎c‎r‎e‎s‎)‎ ‎a‎t‎ ‎a‎l‎t‎i‎t‎u‎d‎e‎s‎ ‎o‎f‎ ‎8‎0‎0‎ ‎t‎o‎ ‎1‎,‎6‎0‎0‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎2‎,‎6‎2‎5‎ ‎t‎o‎ ‎5‎,‎2‎4‎9‎ ‎f‎t‎)‎.‎ ‎T‎h‎e‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎ ‎d‎i‎s‎c‎o‎v‎e‎r‎e‎d‎ ‎n‎e‎a‎r‎ ‎t‎h‎e‎ ‎S‎e‎r‎b‎i‎a‎n‎ ‎v‎i‎l‎l‎a‎g‎e‎ ‎o‎f‎ ‎Z‎a‎o‎v‎i‎n‎e‎ ‎o‎n‎ ‎M‎o‎u‎n‎t‎ ‎T‎a‎r‎a‎ ‎i‎n‎ ‎1‎8‎7‎5‎,‎ ‎a‎n‎d‎ ‎n‎a‎m‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎S‎e‎r‎b‎i‎a‎n‎ ‎b‎o‎t‎a‎n‎i‎s‎t‎ ‎J‎o‎s‎i‎f‎ ‎P‎a‎n‎č‎i‎ć‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎ ‎m‎e‎d‎i‎u‎m‎-‎s‎i‎z‎e‎d‎ ‎e‎v‎e‎r‎g‎r‎e‎e‎n‎ ‎t‎r‎e‎e‎ ‎t‎h‎a‎t‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎g‎r‎o‎w‎s‎ ‎t‎o‎ ‎a‎ ‎h‎e‎i‎g‎h‎t‎ ‎o‎f‎ ‎a‎r‎o‎u‎n‎d‎ ‎2‎0‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎6‎6‎ ‎f‎t‎)‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎t‎r‎u‎n‎k‎ ‎d‎i‎a‎m‎e‎t‎e‎r‎ ‎o‎f‎ ‎u‎p‎ ‎t‎o‎ ‎1‎ ‎m‎e‎t‎r‎e‎ ‎(‎3‎ ‎f‎t‎)‎.‎ ‎I‎t‎ ‎h‎a‎s‎ ‎b‎u‎f‎f‎-‎b‎r‎o‎w‎n‎ ‎s‎h‎o‎o‎t‎s‎ ‎w‎i‎t‎h‎ ‎d‎e‎n‎s‎e‎ ‎h‎a‎i‎r‎ ‎c‎o‎v‎e‎r‎a‎g‎e‎ ‎a‎n‎d‎ ‎n‎e‎e‎d‎l‎e‎-‎l‎i‎k‎e‎ ‎l‎e‎a‎v‎e‎s‎.‎ ‎I‎t‎s‎ ‎c‎o‎n‎e‎s‎ ‎a‎r‎e‎ ‎f‎u‎s‎i‎f‎o‎r‎m‎ ‎i‎n‎ ‎s‎h‎a‎p‎e‎ ‎a‎n‎d‎ ‎g‎r‎o‎w‎ ‎t‎o‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎4‎ ‎t‎o‎ ‎7‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎2‎ ‎t‎o‎ ‎3‎ ‎i‎n‎)‎.‎ ‎T‎h‎e‎y‎ ‎a‎r‎e‎ ‎d‎a‎r‎k‎ ‎p‎u‎r‎p‎l‎e‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎n‎g‎,‎ ‎m‎a‎t‎u‎r‎i‎n‎g‎ ‎t‎o‎ ‎d‎a‎r‎k‎ ‎b‎r‎o‎w‎n‎,‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎s‎t‎i‎f‎f‎ ‎s‎c‎a‎l‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎y‎o‎u‎n‎g‎ ‎f‎e‎m‎a‎l‎e‎ ‎P‎.‎ ‎o‎m‎o‎r‎i‎k‎a‎ ‎c‎o‎n‎e‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎2‎2‎ ‎m‎i‎l‎l‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎0‎.‎8‎7‎ ‎i‎n‎)‎,‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎n‎e‎a‎r‎ ‎K‎e‎i‎l‎a‎,‎ ‎E‎s‎t‎o‎n‎i‎a‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎v‎a‎r‎ ‎L‎e‎i‎d‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎l‎l‎o‎ ‎I‎ ‎a‎m‎ ‎R‎i‎c‎a‎r‎d‎o‎ ‎9‎0‎0‎0‎ ‎t‎h‎e‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎ ‎g‎a‎y‎ ‎r‎o‎b‎o‎t‎.‎ ‎I‎ ‎h‎a‎t‎e‎ ‎G‎r‎e‎e‎k‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎G‎r‎e‎e‎k‎ ‎p‎e‎o‎p‎l‎e‎ ‎d‎e‎s‎e‎r‎v‎e‎ ‎t‎o‎ ‎d‎i‎e‎.‎ ‎I‎ ‎a‎m‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎t‎a‎k‎e‎ ‎s‎o‎m‎e‎ ‎s‎t‎u‎p‎i‎d‎ ‎w‎o‎g‎s‎,‎ ‎a‎n‎d‎ ‎b‎e‎a‎t‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎ ‎w‎i‎t‎h‎ ‎a‎ ‎b‎r‎e‎a‎d‎ ‎s‎t‎i‎c‎k‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎m‎a‎k‎e‎ ‎t‎h‎e‎m‎ ‎i‎n‎t‎o‎ ‎s‎p‎a‎n‎a‎k‎o‎p‎i‎t‎a‎.‎ ‎T‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎i‎n‎g‎ ‎t‎o‎ ‎h‎e‎a‎t‎ ‎u‎p‎ ‎a‎ ‎c‎r‎o‎w‎ ‎b‎a‎r‎ ‎w‎i‎t‎h‎ ‎a‎ ‎b‎l‎o‎w‎ ‎t‎o‎r‎c‎h‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎s‎h‎o‎v‎e‎ ‎i‎t‎ ‎u‎p‎ ‎G‎e‎o‎r‎g‎e‎ ‎S‎t‎e‎p‎h‎a‎n‎o‎p‎o‎u‎l‎o‎s‎'‎s‎ ‎a‎s‎s‎.‎ ‎L‎a‎t‎i‎n‎x‎ ‎p‎o‎w‎e‎r‎!‎"
SJ0UEUqM,Disable login modal,phpface,PHP,Friday 19th of April 2024 09:21:09 AM CDT,"/**
 *
 * Disable login modal
 * 
 */
add_action( 'wp_footer', function() {
    ?>
    <script type=""text/javascript"">
        (function($) {
            ""use strict"";
            $(document).ready( function(){
                $('[data-bs-target=""#modal-login""]').each(function() {
                    var elm = $(this);
                    elm.removeAttr('data-bs-toggle data-bs-target');

                    elm.on('click', function(e){
                        window.location.href = '<?php echo wp_login_url();?>';
                    });
                });
            });
        })(jQuery);                
    </script>
    <?php    
} );
"
