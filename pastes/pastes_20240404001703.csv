id,title,username,language,date,content
ts6pY7Gq,2024-04-03_stats.json,rdp_snitch,JSON,Wednesday 3rd of April 2024 07:16:05 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 134,
    ""58.218.204.183"": 6,
    ""87.251.75.145"": 8,
    ""194.165.16.10"": 4,
    ""194.165.16.37"": 12,
    ""205.210.31.248"": 6,
    ""45.83.65.219"": 2,
    ""80.66.88.211"": 2,
    ""167.94.146.52"": 2,
    ""87.251.75.120"": 4,
    ""103.232.53.123"": 4,
    ""106.202.245.25"": 2,
    ""165.154.221.175"": 2,
    ""196.190.117.7"": 4,
    ""198.235.24.41"": 6,
    ""123.56.20.194"": 2,
    ""212.70.149.146"": 4,
    ""96.8.115.25"": 2,
    ""194.165.16.78"": 4,
    ""138.68.16.179"": 8,
    ""24.199.92.215"": 2,
    ""205.210.31.211"": 6,
    ""84.201.2.2"": 4,
    ""87.251.75.64"": 2,
    ""185.161.248.148"": 2,
    ""149.248.18.130"": 8,
    ""185.170.144.3"": 2,
    ""103.20.97.235"": 6,
    ""2.57.149.186"": 4,
    ""62.204.41.222"": 4,
    ""45.33.115.250"": 8,
    ""206.189.234.105"": 2,
    ""162.142.125.214"": 2,
    ""205.210.31.203"": 6
  },
  ""asn"": {
    ""AS14061"": 146,
    ""AS4134"": 6,
    ""AS208091"": 16,
    ""AS48721"": 20,
    ""AS396982"": 24,
    ""AS208843"": 2,
    ""AS398705"": 2,
    ""AS63737"": 4,
    ""AS24560"": 2,
    ""AS135377"": 2,
    ""AS24757"": 4,
    ""AS37963"": 2,
    ""AS204428"": 4,
    ""AS36352"": 2,
    ""AS44066"": 4,
    ""AS49202"": 2,
    ""AS20473"": 8,
    ""AS197414"": 2,
    ""AS150880"": 6,
    ""AS208312"": 4,
    ""AS59425"": 4,
    ""AS63949"": 8,
    ""AS398324"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 146,
    ""Chinanet"": 6,
    ""Xhost Internet Solutions LP"": 16,
    ""Flyservers S.A."": 20,
    ""Google LLC"": 24,
    ""INTERNET-RESEARCH"": 2,
    ""Xhost Internet Solutions"": 2,
    ""Censys, Inc."": 4,
    ""VIETSERVER"": 4,
    ""Bharti Airtel"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Ethiotelecom"": 4,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""SS-Net"": 4,
    ""HostPapa"": 2,
    ""www.accelerated.de"": 4,
    ""Kisara LLC"": 2,
    ""The Constant Company"": 8,
    ""Fast Byte Fast Data Company Limited"": 6,
    ""Red Byte LLC"": 4,
    ""Horizon LLC"": 4,
    ""Akamai Technologies, Inc."": 8
  },
  ""org"": {
    ""DigitalOcean, LLC"": 146,
    ""Chinanet JS"": 6,
    ""Xhost Internet Solutions"": 14,
    ""Flyservers S.A"": 20,
    ""Palo Alto Networks, Inc"": 24,
    ""Unknown"": 6,
    ""XHOSTIS"": 2,
    ""Censys, Inc."": 2,
    ""VietServer Services technology company limited"": 4,
    ""Bharti Airtel Ltd."": 2,
    ""Ucloud Information Technology"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""4Media Ltd"": 4,
    ""Michael Charlery"": 2,
    ""diva-e Datacenters GmbH"": 4,
    ""Kisara LLC"": 2,
    ""Vultr Holdings, LLC"": 8,
    ""Xhostis"": 2,
    ""FASTBYTE"": 6,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Horizon LLC"": 4,
    ""Linode"": 8,
    ""Censys Inc"": 2
  },
  ""regionName"": {
    ""South West"": 134,
    ""Jiangsu"": 6,
    ""North Holland"": 16,
    ""Kaunas"": 20,
    ""California"": 40,
    ""Land Berlin"": 2,
    ""Drenthe"": 2,
    ""Hesse"": 6,
    ""Hanoi"": 4,
    ""Uttar Pradesh"": 2,
    ""Ho Chi Minh"": 8,
    ""Addis Ababa"": 4,
    ""Beijing"": 2,
    ""Sliven"": 4,
    ""Texas"": 10,
    ""New Jersey"": 4,
    ""Moscow"": 6,
    ""Lesser Poland"": 4,
    ""Michigan"": 2
  },
  ""country"": {
    ""Singapore"": 134,
    ""China"": 8,
    ""The Netherlands"": 18,
    ""Lithuania"": 20,
    ""United States"": 56,
    ""Germany"": 8,
    ""Vietnam"": 12,
    ""India"": 2,
    ""Ethiopia"": 4,
    ""Bulgaria"": 4,
    ""Russia"": 6,
    ""Poland"": 4
  },
  ""account"": {
    ""hello"": 152,
    ""Administr"": 32,
    ""Test"": 36,
    ""xhRvBNGAG"": 2,
    ""mpiRoA"": 2,
    ""wcsWjA"": 2,
    ""user"": 2,
    ""(empty)"": 4,
    ""a"": 2,
    ""Administrator"": 2,
    ""vWtEvWoJZ"": 2,
    ""eGdgMk"": 2,
    ""ayPaNh"": 2,
    ""WCVTCQr"": 2,
    ""dgb2vbih"": 8,
    ""beio"": 4,
    ""PmfgsxJyR"": 2,
    ""aGdxVb"": 2,
    ""hzkapG"": 2,
    ""jbgdr04h"": 8,
    ""MIOOSpqIC"": 2,
    ""FcMOtW"": 2,
    ""SgphZo"": 2
  },
  ""keyboard"": {
    ""Unknown"": 276
  },
  ""client_build"": {
    ""Unknown"": 276
  },
  ""client_name"": {
    ""Unknown"": 276
  },
  ""ip_type"": {
    ""hosting"": 190,
    ""Unknown"": 78,
    ""mobile"": 2,
    ""hosting & proxy"": 6
  }
}"
4csRyA9n,2024-04-03_stats.json,rdp_snitch,JSON,Wednesday 3rd of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 67,
    ""58.218.204.183"": 3,
    ""87.251.75.145"": 4,
    ""194.165.16.10"": 2,
    ""194.165.16.37"": 6,
    ""205.210.31.248"": 3,
    ""45.83.65.219"": 1,
    ""80.66.88.211"": 1,
    ""167.94.146.52"": 1,
    ""87.251.75.120"": 2,
    ""103.232.53.123"": 2,
    ""106.202.245.25"": 1,
    ""165.154.221.175"": 1,
    ""196.190.117.7"": 2,
    ""198.235.24.41"": 3,
    ""123.56.20.194"": 1,
    ""212.70.149.146"": 2,
    ""96.8.115.25"": 1,
    ""194.165.16.78"": 2,
    ""138.68.16.179"": 4,
    ""24.199.92.215"": 1,
    ""205.210.31.211"": 3,
    ""84.201.2.2"": 2,
    ""87.251.75.64"": 1,
    ""185.161.248.148"": 1,
    ""149.248.18.130"": 4,
    ""185.170.144.3"": 1,
    ""103.20.97.235"": 3,
    ""2.57.149.186"": 2,
    ""62.204.41.222"": 2,
    ""45.33.115.250"": 4,
    ""206.189.234.105"": 1,
    ""162.142.125.214"": 1,
    ""205.210.31.203"": 3
  },
  ""asn"": {
    ""AS14061"": 73,
    ""AS4134"": 3,
    ""AS208091"": 8,
    ""AS48721"": 10,
    ""AS396982"": 12,
    ""AS208843"": 1,
    ""AS398705"": 1,
    ""AS63737"": 2,
    ""AS24560"": 1,
    ""AS135377"": 1,
    ""AS24757"": 2,
    ""AS37963"": 1,
    ""AS204428"": 2,
    ""AS36352"": 1,
    ""AS44066"": 2,
    ""AS49202"": 1,
    ""AS20473"": 4,
    ""AS197414"": 1,
    ""AS150880"": 3,
    ""AS208312"": 2,
    ""AS59425"": 2,
    ""AS63949"": 4,
    ""AS398324"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 73,
    ""Chinanet"": 3,
    ""Xhost Internet Solutions LP"": 8,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 12,
    ""INTERNET-RESEARCH"": 1,
    ""Xhost Internet Solutions"": 1,
    ""Censys, Inc."": 2,
    ""VIETSERVER"": 2,
    ""Bharti Airtel"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Ethiotelecom"": 2,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""SS-Net"": 2,
    ""HostPapa"": 1,
    ""www.accelerated.de"": 2,
    ""Kisara LLC"": 1,
    ""The Constant Company"": 4,
    ""Fast Byte Fast Data Company Limited"": 3,
    ""Red Byte LLC"": 2,
    ""Horizon LLC"": 2,
    ""Akamai Technologies, Inc."": 4
  },
  ""org"": {
    ""DigitalOcean, LLC"": 73,
    ""Chinanet JS"": 3,
    ""Xhost Internet Solutions"": 7,
    ""Flyservers S.A"": 10,
    ""Palo Alto Networks, Inc"": 12,
    ""Unknown"": 3,
    ""XHOSTIS"": 1,
    ""Censys, Inc."": 1,
    ""VietServer Services technology company limited"": 2,
    ""Bharti Airtel Ltd."": 1,
    ""Ucloud Information Technology"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""4Media Ltd"": 2,
    ""Michael Charlery"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Kisara LLC"": 1,
    ""Vultr Holdings, LLC"": 4,
    ""Xhostis"": 1,
    ""FASTBYTE"": 3,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Horizon LLC"": 2,
    ""Linode"": 4,
    ""Censys Inc"": 1
  },
  ""regionName"": {
    ""South West"": 67,
    ""Jiangsu"": 3,
    ""North Holland"": 8,
    ""Kaunas"": 10,
    ""California"": 20,
    ""Land Berlin"": 1,
    ""Drenthe"": 1,
    ""Hesse"": 3,
    ""Hanoi"": 2,
    ""Uttar Pradesh"": 1,
    ""Ho Chi Minh"": 4,
    ""Addis Ababa"": 2,
    ""Beijing"": 1,
    ""Sliven"": 2,
    ""Texas"": 5,
    ""New Jersey"": 2,
    ""Moscow"": 3,
    ""Lesser Poland"": 2,
    ""Michigan"": 1
  },
  ""country"": {
    ""Singapore"": 67,
    ""China"": 4,
    ""The Netherlands"": 9,
    ""Lithuania"": 10,
    ""United States"": 28,
    ""Germany"": 4,
    ""Vietnam"": 6,
    ""India"": 1,
    ""Ethiopia"": 2,
    ""Bulgaria"": 2,
    ""Russia"": 3,
    ""Poland"": 2
  },
  ""account"": {
    ""hello"": 76,
    ""Administr"": 16,
    ""Test"": 18,
    ""xhRvBNGAG"": 1,
    ""mpiRoA"": 1,
    ""wcsWjA"": 1,
    ""user"": 1,
    ""(empty)"": 2,
    ""a"": 1,
    ""Administrator"": 1,
    ""vWtEvWoJZ"": 1,
    ""eGdgMk"": 1,
    ""ayPaNh"": 1,
    ""WCVTCQr"": 1,
    ""dgb2vbih"": 4,
    ""beio"": 2,
    ""PmfgsxJyR"": 1,
    ""aGdxVb"": 1,
    ""hzkapG"": 1,
    ""jbgdr04h"": 4,
    ""MIOOSpqIC"": 1,
    ""FcMOtW"": 1,
    ""SgphZo"": 1
  },
  ""keyboard"": {
    ""Unknown"": 138
  },
  ""client_build"": {
    ""Unknown"": 138
  },
  ""client_name"": {
    ""Unknown"": 138
  },
  ""ip_type"": {
    ""hosting"": 95,
    ""Unknown"": 39,
    ""mobile"": 1,
    ""hosting & proxy"": 3
  }
}"
aQVXqcUm,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Wednesday 3rd of April 2024 06:36:17 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_149011.pdf

Working as of:
03 April 2024"
rkhjv7SK,Untitled,Zeinab_Hamdy,C++,Wednesday 3rd of April 2024 06:33:00 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define fixed(n) fixed << setprecision(n)
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
 
void  Zainab(){
            // #ifndef ONLINE_JUDGE
              // freopen(""hobz.in"", ""r"", stdin);
              // freopen(""longpath.out"", ""w"", stdout);
            // #endif
}

const ll N = 1e6 ;
ll spf[N+5];
void mod_Sieve(){
   iota(spf , spf +N+5 , 0); 
   spf[0]=spf[1]=-1;

   for(ll i = 2 ; i * i <= N ; i++)
        if(spf[i]==i)
            for(ll j = i * i ; j <= N ; j+=i)
                if(spf[j]==j)
                    spf[j]=i;
   
}


void myCode( ){

ll q ;
cin >> q;
mod_Sieve();
map < ll , ll > mp ;
ll last =1;



while(q--){
    int op ; cin >> op;
    if(op==1){
        ll x ;     cin >> x;
        
        while(x > 1){
            mp[spf[x]]++;
            x/= spf[x];
        }
      
    }

    else{

        
        ll x ;     cin >> x;
        if(x <= last) {
            cout << ""YES\n"";
            continue;
        }
        
        
        bool flag = 0;
        for(ll i =last+1 ; i <= x ; i++){
            ll t = i;
            while(t > 1){
                if(mp[spf[t]] > 0){
                    mp[spf[t]]--;
                }
                else {
                    // cout << t << "" "" << spf[t] << nl;
                    cout << ""NO\n"";
                    flag=1;
                    break;
                }
                
                t/=spf[t];
            }
            
            if(flag) break;
            last = max(last , i);
        }
        
        if(!flag) cout << ""YES\n"";
        
    }
}


// for(auto& [f,s] : mp) cout << f << "" "" << s << nl;


}
 
 
int main(){
                                   FastCode ;
                                   // Zainab();

    int testCase=1;
    //   cin >> testCase ;
      for(int i=1 ; i<= testCase ; i++)
        myCode();
 
    return 0;
}"
XHhis5d8,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Wednesday 3rd of April 2024 06:29:40 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
04 April 2024"
fSP109KA,N2-CMDER.pyw,Najeebsk,Python,Wednesday 3rd of April 2024 06:19:50 PM CDT,"import subprocess
import tkinter as tk
from tkinter import ttk
from tkinter import scrolledtext
from tkinter import messagebox
from tkinter import filedialog
import os
import platform

# Create a Tkinter window
window = tk.Tk()
window.geometry(""1000x680"")
window.configure(bg=""#336699"")
window.title(""Windows Information PC Management Tool"")

# Function to execute shell commands
def run_command(command):
    try:
        if command.startswith(('dir ', 'WHERE ', 'ping ', 'wmic ', 'assoc ', 'break ', 'call ', 'cd ', 'chdir ', 'cls ', 'color ', 'copy ', 'date ', 'del ', 'erase ', 'dir ', 'echo ', 'exit ', 'mkdir ', 'mklink ', 'move ', 'rd ', 'rmdir ', 'ren ', 'rename ', 'rmdir ', 'set ', 'setlocal ', 'shift ', 'start ', 'time ', 'title ', 'ver ', 'vol ', 'netsh ')):
            # Use os.system for commands like dir, WHERE, ping, wmic, and cmd commands
            result = os.popen(command).read()
        elif command.startswith('help'):
            # For 'help' command, execute 'cmd /c help' to get help info
            result = subprocess.run(['cmd', '/c', 'help'], capture_output=True, text=True, check=True).stdout.strip()
        else:
            # Use subprocess.run for other commands
            result = subprocess.run(command, capture_output=True, text=True, shell=True, check=True).stdout.strip()
        return result
    except subprocess.CalledProcessError as e:
        messagebox.showerror(""Error"", f""Command failed: {e.stderr}"")
    except FileNotFoundError:
        messagebox.showerror(""Error"", ""Executable file not found. Please check your command."")
    return None

# Function to display selected command result
def execute_selected_command():
    selected_command = command_options.get()
    if selected_command:
        output_text.delete(1.0, tk.END)  # Clear previous output
        result = run_command(selected_command)
        if result:
            output_text.insert(tk.END, result)
        else:
            output_text.insert(tk.END, ""No data available."")

# Function to execute custom command
def execute_custom_command():
    custom_command = custom_command_entry.get()
    if custom_command:
        output_text.delete(1.0, tk.END)  # Clear previous output
        result = run_command(custom_command)
        if result:
            output_text.insert(tk.END, result)
        else:
            output_text.insert(tk.END, ""No data available."")
    else:
        messagebox.showwarning(""Warning"", ""Please enter a command."")

# Function to clear the output text field
def clear_output():
    output_text.delete(1.0, tk.END)

# Function to save displayed result to a text file
def save_result():
    result = output_text.get(1.0, tk.END)
    if result.strip():
        file_path = filedialog.asksaveasfilename(defaultextension="".txt"", filetypes=[(""Text files"", ""*.txt"")])
        if file_path:
            with open(file_path, ""w"") as file:
                file.write(result)
                messagebox.showinfo(""Success"", ""Result saved successfully."")
    else:
        messagebox.showwarning(""Warning"", ""No data to save."")

# Function to show help.txt
def show_help():
    # Save help information to Help.txt file
    #run_command('Help >> Help.txt')
    # Read help information from file
    with open(""Help.txt"", ""r"") as file:
        help_text = file.read()
    if help_text:
        output_text.delete(1.0, tk.END)
        output_text.insert(tk.END, help_text)
    else:
        output_text.delete(1.0, tk.END)
        output_text.insert(tk.END, ""No help available."")

# Function to delete help.txt
def delete_help_file():
    try:
        os.remove(""Help.txt"")
        messagebox.showinfo(""Success"", ""Help.txt deleted successfully."")
    except FileNotFoundError:
        messagebox.showwarning(""Warning"", ""Help.txt not found."")

# Function to open file with default program
def open_with_default_program(file_path):
    if platform.system() == ""Windows"":
        os.startfile(file_path)
    elif platform.system() == ""Darwin"":
        subprocess.call([""open"", file_path])
    else:
        subprocess.call([""xdg-open"", file_path])

# Function to handle double-click event on output text
def on_double_click(event):
    index = output_text.index(""@%s,%s"" % (event.x, event.y))
    line, column = map(int, index.split('.'))
    word = output_text.get('%d.0' % line, '%d.end' % line)
    if os.path.isfile(word.strip()):
        open_with_default_program(word.strip())

# Dropdown list of commands
commands = [
    ""--[NAJEEB PC TOOLS]--"",
    ""Everything.exe -search Najeeb"",
    ""ES.exe -a jpg"",
    ""WHERE /R D:\ *.mp4"",
    ""TYPE C:\CMDER\BOOKS\COMMANDS.txt"",
    ""START C:/CMDER/BOOK.py"",
    ""START C:\CMDER\TOOLS\LIST.pyw"",
    ""START C:\CMDER\TOOLS\RENAME-EXT.pyw"",
    ""START C:\CMDER\TOOLS\ALL-RADIOS.pyw"",
    ""START C:\CMDER\TOOLS\TOOL.ahk"",
    ""START C:\CMDER\SOFT\SOFT.ahk"",
    ""START C:\CMDER\APP\APPS.ahk"",
    ""START C:\CMDER\HOME.ahk"",
    ""START C:\CMDER\TOOLS.ahk"",
    ""START C:\CMDER\COMMANDER.ahk"",
    ""START C:\CMDER\CMDR.ahk"",
    ""START C:\CMDER\CMD.ahk"",
    ""START C:\CMDER\FFMPEG.ahk"",
    ""START C:\CMDER\AHK.ahk"",
    ""--[NAJEEB PC INFORMATION]--"",
    ""systeminfo"",
    ""msinfo32"",
    ""compmgmt.msc"",
    ""diskmgmt.msc"",
    ""devmgmt.msc"",
    ""Control Panel"",
    ""START shell:AppData"",
    ""START shell:Startup"",
    ""START shell:ProgramFiles"",
    ""START C:/Users/Najeeb/AppData/Local/Temp"",
    ""START C:\Windows\Prefetch"",
    ""START C:\Windows\Temp"",
    ""TZUTIL /L"",
    ""TZUTIL /G"",
    'TZUTIL /S ""Pakistan Standard Time""',
    ""tasklist"",
    ""whoami"",
    ""whoami /priv"",
    ""cmdkey /list"",
    'dir ""C:\\Program Files""',
    'dir /S /B /A ""C:\\""',
    'dir /S /B /A ""D:\\""',
    'dir /S /B /A ""E:\\""',
    'dir /S /B /A ""F:\\""',
    'dir /S /B /A ""G:\\""',
    'dir /S /B /A ""I:\\""',
    'dir /S /B /A ""Z:\\""',
    ""--[NIRCMD Commands]--"",
    ""nircmd.exe emptybin & Exit"",
    ""nircmd.exe mutesysvolume 1"",
    ""nircmd.exe mutesysvolume 0"",
    'nircmd.exe loop 10 60000 savescreenshot ""~$folder.desktop$\P~$loopcount$.png"" & Exit',
    ""--[CMD HELP COMMANDS]--"",
    ""Help >> Help.txt"",
    ""WHERE /?"",
    ""wget --help"",
    ""FFMPEG -h"",
    ""youtube-dl -h"",
    ""magick -help"",
    ""wget --help"",  
    ""DOSKEY /?"", 
    ""netsh /?"",
    ""wmic /?"",
]

# Create dropdown list
command_options = ttk.Combobox(window, values=commands, state=""readonly"", width=74, font=(""Arial"", 12))
command_options.grid(row=1, column=0, padx=10, pady=(10, 5))

# Entry field for custom command
custom_command_entry = tk.Entry(window, width=74, font=(""Arial"", 12))
custom_command_entry.grid(row=2, column=0, padx=10, pady=5)

# Button to execute selected command
execute_button = tk.Button(window, text=""Execute Seleted Command"", command=execute_selected_command, fg=""White"", bg=""Blue"")
execute_button.grid(row=1, column=1, padx=10, pady=(10, 5), sticky=""w"")

# Button to execute custom command
execute_custom_button = tk.Button(window, text=""Execute Custom Command"", command=execute_custom_command, fg=""White"", bg=""Blue"")
execute_custom_button.grid(row=2, column=1, padx=10, pady=5, sticky=""w"")

# Button to clear output
clear_button = tk.Button(window, text=""Clear"", command=clear_output, fg=""white"", bg=""Red"")
clear_button.grid(row=1, column=2, padx=10, pady=(10, 5), sticky=""w"")

# Button to save result
save_button = tk.Button(window, text=""Save Result"", command=save_result, fg=""white"", bg=""Green"")
save_button.grid(row=1, column=3, padx=10, pady=(10, 5), sticky=""w"")

# Button to show help.txt
help_button = tk.Button(window, text=""Show Help"", command=show_help, fg=""black"", bg=""yellow"")
help_button.grid(row=1, column=4, padx=10, pady=(10, 5), sticky=""w"")

# Button to delete help.txt
delete_help_button = tk.Button(window, text=""Delete Help"", command=delete_help_file, fg=""black"", bg=""orange"")
delete_help_button.grid(row=2, column=4, padx=10, pady=5, sticky=""w"")

# Text field to display output
output_text = scrolledtext.ScrolledText(window, width=107, height=28, wrap=tk.WORD, font=(""Arial"", 12))
output_text.grid(row=3, column=0, columnspan=5, padx=10, pady=10, sticky=""nsew"")

# Label for the heading
heading_label = tk.Label(window, text=""NAJEEB ALL PC INFORMATION"", font=(""Arial"", 24, ""bold""), bg=""#336699"", fg=""white"")
heading_label.grid(row=0, column=0, columnspan=5, pady=(5, 10))

# Bind double-click event to output text field
output_text.bind(""<Double-Button-1>"", on_double_click)

# Configure grid weights to make the text field expandable
window.grid_columnconfigure(0, weight=1)
window.grid_rowconfigure(3, weight=1)

# Run the Tkinter event loop
window.mainloop()
"
Pmp9fs5U,00,nenoro,Bash,Wednesday 3rd of April 2024 05:42:37 PM CDT,"repository=https://repo-default.voidlinux.org/current
repository=https://repo-default..voidlinux.org/current/nonfree
repository=https://repo-default..voidlinux.org/current/multilib
repository=https://repo-default..voidlinux.org/current/multilib/nonfree

repository=https://voidlinux.mirror.garr.it/current/
repository=https://voidlinux.mirror.garr.it/current/nonfree
repository=https://voidlinux.mirror.garr.it/current/multilib
repository=https://voidlinux.mirror.garr.it/current/multilib/nonfree

repository=https://void.cijber.net/current/
repository=https://void.cijber.net/current/nonfree
repository=https://void.cijber.net/current/multilib
repository=https://void.cijber.net/current/multilib/nonfree

"
VwE1v6gC,Welcome Screen Cargo Stargate,Alexr360,Lua,Wednesday 3rd of April 2024 05:42:20 PM CDT,"-- Print a line of dashes for aesthetics
local function lineBreak()
    local width, height = term.getSize()
    for i = 1, width do
      io.write(""-"")
    end
    io.write(""\n"")
end
-- Function to clear the screen
local function clearScreen()
    term.clear()
    term.setCursorPos(1, 1)
end

clearScreen()
-- Print the welcome message
print(""Welcome to Monopoly OS by Monopoly Co."")
lineBreak()
print(""Current Time: "" .. textutils.formatTime(os.time(), true))
lineBreak()
print(""Select a program to run:"")
print(""1. Dial Request"")
print(""2. Close Gate"")
print(""3. Other"")
lineBreak()

local choice = read()

if choice == ""1"" then
  shell.run(""Dial"")
elseif choice == ""2"" then
  shell.run(""CloseGate"")
end"
mPQzScCa,Image loader (MCU),Sawy7,C,Wednesday 3rd of April 2024 05:32:27 PM CDT,"// **************************************************************************
//
//               Demo program for APPS labs
//
// Subject:      Computer Architectures and Parallel systems
// Author:       Petr Olivka, petr.olivka@vsb.cz, 02/2022
// Organization: Department of Computer Science, FEECS,
//               VSB-Technical University of Ostrava, CZ
//
// File:         Main program for LCD module
//
// **************************************************************************

#include ""mbed.h""
#include ""lcd_lib.h""
#include ""font12x16_lsb.h""
#include ""font12x16_msb.h""
#include ""font24x40_msb.h""
#include ""kekw.h""

#define LCD_WIDTH 320
#define LCD_HEIGHT 240

// two dimensional array with fixed size font
extern uint8_t g_font8x8[256][8];

DigitalOut g_led_PTA1( PTA1, 0 );
DigitalOut g_led_PTA2( PTA2, 0 );

DigitalIn g_but_PTC9( PTC9 );
DigitalIn g_but_PTC10( PTC10 );
DigitalIn g_but_PTC11( PTC11 );
DigitalIn g_but_PTC12( PTC12 );

struct color888 {
	uint8_t red;
	uint8_t green;
	uint8_t blue;
};

uint16_t to_565(color888 color)
{
	uint16_t to_return = 0;
	to_return = color.blue >> 3;	
	to_return |= (color.green & 0b11111100) << 3;
	to_return |= (color.red & 0b11111000) << 8;

	return to_return;
}

uint16_t g_color_blue = to_565({0, 0, 255});
uint16_t g_color_black = to_565({0, 0, 0});

void debug_binary(uint16_t color)
{
	printf(""0b"");
	uint16_t checker_bit = 1 << 15;
	while (1) {
		if ((color & checker_bit) == 0)
			printf(""0"");
		else
			printf(""1"");

		checker_bit = checker_bit >> 1;
		if (checker_bit == 0)
			break;
	}
	printf(""\n"");
}

void write8x8(char text[], int text_len, uint16_t color)
{
	for (int i = 0; i < text_len; i++)
	{
		uint8_t letter = text[i];
		int x_offset = i * 8 + 1;
		for (int y = 0; y < 8; y++)
			for (int x = 0; x < 8; x++)
				if ((g_font8x8[letter][y] & (1 << x)) >= 1)
					if (x+x_offset < LCD_WIDTH)
						lcd_put_pixel(x+x_offset, y, color);
	}
}

template <typename T, int width, int height>
class FontWriter {
private:
	T* font;
	uint32_t bitcount;
public:
	FontWriter(T font[][height]) : font((T*)font) {
		this->bitcount = 8;
		while (width > this->bitcount)
			this->bitcount <<= 1;
	}

	void write(char text[], uint16_t color, int y_offset)
	{
		int text_len = strlen(text);
		for (int i = 0; i < text_len; i++)
		{
			uint8_t letter = text[i];
			int x_offset = i * width + 1;
			for (int y = 0; y < height; y++)
				for (int x = 0; x < width; x++)
					if ((this->font[letter*height + y] & (1 << x)) >= 1)
						if (x+x_offset < LCD_WIDTH && y+y_offset < LCD_HEIGHT)
							lcd_put_pixel(x+x_offset, y+y_offset, color);
		}
	}

	void write_msb(char text[], uint16_t color, int y_offset)
	{
		int text_len = strlen(text);
		for (int i = 0; i < text_len; i++)
		{
			uint8_t letter = text[i];
			int x_offset = i * width + 1;
			for (int y = 0; y < height; y++)
			{
				T check_bit = 1 << (this->bitcount - 1);
				for (int x = 0; x < width; x++)
				{
					if ((this->font[letter*height + y] & (check_bit >> x)) >= 1)
						if (x+x_offset < LCD_WIDTH && y+y_offset < LCD_HEIGHT)
							lcd_put_pixel(x+x_offset, y+y_offset, color);
				}
			}
		}
	}
};

void draw_line(int x0, int y0, int x1, int y1, uint16_t color)
{
	int dx = x1 - x0;
	int dy = y1 - y0;
	int D = 2*dy - dx;
	int y = y0;

	for (int x = x0; x <= x1; x++)
	{
		lcd_put_pixel(x, y, color);
		if (D > 0)
		{
			y++;
			D -= 2*dx;
		}
		D += 2*dy;
	}
}

void draw_circle(int center_x, int center_y, int r, uint16_t color)
{
	double t1 = r/16;
	double t2;
	int x = r;
	int y = 0;

	while (y <= x)
	{
		lcd_put_pixel(center_y - y, center_x - x, color);
        lcd_put_pixel(center_y - y, center_x + x, color);
        lcd_put_pixel(center_y + y, center_x - x, color);
        lcd_put_pixel(center_y + y, center_x + x, color);
        lcd_put_pixel(center_y - x, center_x - y, color);
        lcd_put_pixel(center_y - x, center_x + y, color);
        lcd_put_pixel(center_y + x, center_x - y, color);
        lcd_put_pixel(center_y + x, center_x + y, color);

		y++;
		t1 += y;
		t2 = t1 - x;
		if (t2 >= 0)
		{
			t1 = t2;
			x = x - 1;
		}
	}
}

void button_catcher()
{
	if (g_but_PTC9 == 0)
	{
		draw_circle(100, 100, 50, g_color_blue);
		while(g_but_PTC9 == 0) {}
		draw_circle(100, 100, 50, g_color_black);
	}
	if (g_but_PTC10 == 0)
	{
		char msg[] = ""Film"";
		FontWriter<const uint32_t, 24, 40> fw(font24x40msb);
		fw.write_msb(msg, g_color_blue, 0);
		while(g_but_PTC10 == 0) {}
	}
}

void fill_screen()
{
	for (int x = 0; x < LCD_WIDTH; x++)
		for (int y = 0; y < LCD_HEIGHT; y++)
			lcd_put_pixel(x, y, g_color_blue);
}

void fill_screen2()
{
	lcd_put_pixels(0, 0, 319, 239, g_color_blue);
}

void parse_img()
{
	int buffer_len = LCD_WIDTH*LCD_HEIGHT*2;
	char *buffer = (char*)malloc(buffer_len);

	int save_i = 0;
	for (int i = 33; i < LCD_WIDTH*LCD_HEIGHT*3; i+=3)
	{
		buffer[save_i++] = (char)(kekw[i+1] & 0b11111000) | (kekw[i+2] >> 5);
		buffer[save_i++] = (char)((kekw[i+2] & 0b11100) << 3) | (kekw[i] >> 3);
	}
	lcd_put_buffer(0, 0, 319, 239, buffer, buffer_len);

	free(buffer);
}

int main()
{
	lcd_init();				// LCD initialization


	// char msg[] = ""A message"";
	// FontWriter<uint8_t, 8, 8> fw(g_font8x8);
	// FontWriter<const uint32_t, 24, 40> fw(font24x40msb);
	// fw.write_msb(msg, test565, 0);
	// draw_line(0, 0, 200, 200, test565);

//	Ticker l_ticker;
//	l_ticker.attach( &button_catcher, 1ms );
//
//	while ( 1 ) {}

//	clock_t t = clock();
////	fill_screen();
//	fill_screen2();
//	t = clock() - t;
//	double time_taken = ((double)t)/CLOCKS_PER_SEC;
//	printf(""Screen fill took %d seconds to execute\n"", (int)time_taken);

//	getc(stdin);
	parse_img();

	return 0;
}"
NtTYnawd,Distance Converter,Amx79,JavaScript,Wednesday 3rd of April 2024 05:06:21 PM CDT,"function attachEventsListeners() {
    const confirmButton = document.getElementById('convert');
    
    confirmButton.addEventListener('click', () => {
        const inputDistance = document.getElementById('inputDistance');
        const inputUnits = document.getElementById('inputUnits');
        const outputUnits = document.getElementById('outputUnits');
        const typeUnit = Number(inputUnits.selectedIndex);
        const typeUnitOutput = Number(outputUnits.selectedIndex);
        const result = document.getElementById('outputDistance');

        //CONVERT ALL VALUES IN METERS

        let resultInMeters = 0;

        if (typeUnit == 0) {
            resultInMeters = inputDistance.value * 1000;
        } else if (typeUnit == 1) {
            resultInMeters = inputDistance.value * 1;
        } else if (typeUnit == 2) {
            resultInMeters = inputDistance.value * 0.01;
        } else if (typeUnit == 3) {
            resultInMeters = inputDistance.value * 0.001;
        } else if (typeUnit == 4) {
            resultInMeters = inputDistance.value * 1609.34;
        } else if (typeUnit == 5) {
            resultInMeters = inputDistance.value * 0.9144;
        } else if (typeUnit == 6) {
            resultInMeters = inputDistance.value * 0.3048;
        } else if (typeUnit == 7) {
            resultInMeters = inputDistance.value * 0.0254;
        }

        let finishedResult = 0;

        if (typeUnitOutput == 0) {
            finishedResult = resultInMeters / 1000;
            result.value = finishedResult;
        } else if (typeUnitOutput == 1) {
            finishedResult = resultInMeters;
            result.value = finishedResult;
        } else if (typeUnitOutput == 2) {
            finishedResult = resultInMeters * 100;
            result.value = finishedResult;
        } else if (typeUnitOutput == 3) {
            finishedResult = resultInMeters * 1000;
            result.value = finishedResult;
        } else if (typeUnitOutput == 4) {
            finishedResult = resultInMeters / 1609.34;
            result.value = finishedResult;
        } else if (typeUnitOutput == 5) {
            finishedResult = resultInMeters / 0.9144;
            result.value = finishedResult;
        } else if (typeUnitOutput == 6) {
            finishedResult = resultInMeters / 0.3048;
            result.value = finishedResult;
        } else if (typeUnitOutput == 7) {
            finishedResult = resultInMeters / 0.0254;
            result.value = finishedResult;
        }
    })
}"
DhhVaa61,parser.lua,MondGnu,Lua,Wednesday 3rd of April 2024 04:23:38 PM CDT,"input = {}

input.parse_until = function(input, til)
    if input and til then
        local out = """"
        for e in pairs(input) do
            if e == til then
                return out
            end
			print(e)
            out = out .. e
        end
		return out
    end
end

input.parse_name = function(i)
    local _, name = input.parse_until(i, ';')
    return name
end

input.parse_pos = function(tab)
    if tab then
        local out = {}
        for i, e in ipairs(tab) do
            if e == '(' then
                out.x = tonumber(input.parse_until({unpack(input, i, input.size)}, '|'))
            end
            if e == '|' then
                out.y = tonumber(input.parse_until({unpack(input, i, input.size)}, ')'))
            end
            if e == ')' then
                return out
            end
        end
    end               
end

input.parse = function(tab)
    if tab then
        print(tab)
        local index = 1
        local out = {}
        while index <= table.getn(tab) do
            local name
            name = input.parse_name({unpack(tab, index, input.size)})
  			print(name)
            index, out[name] = input.parse_pos({unpack(tab, index, input.size)})
        end
    end
end"
W5T24niu,CC:GPT1,Cigdan,Lua,Wednesday 3rd of April 2024 02:47:24 PM CDT,"local args = {...} -- Command line arguments

-- Check if the correct number of arguments is provided
if #args < 3 then
    print(""Usage: tunnel <depth> <width> <height>"")
    return
end

-- Parse arguments
local tunnelDepth = tonumber(args[1])
local tunnelWidth = tonumber(args[2])
local tunnelHeight = tonumber(args[3])

-- Function to dig the tunnel
local function digTunnel()
    -- Dig forward
    for i = 1, tunnelDepth do
        turtle.dig()
        turtle.forward()
    end

    -- Dig up to ensure clearance
    for j = 1, tunnelHeight - 1 do
        turtle.digUp()
        turtle.up()
    end

    -- Go back to starting position
    for i = 1, tunnelDepth do
        turtle.back()
    end
end

-- Main function to dig the tunnel
local function main()
    -- Check for fuel
    if turtle.getFuelLevel() == 0 then
        print(""Out of fuel, please refuel!"")
        return
    end

    -- Dig the tunnel
    digTunnel()

    print(""Tunneling complete!"")
end

-- Call the main function
main()
"
xWFjJ0Zb,lol,kulamitur,Lua,Wednesday 3rd of April 2024 02:45:46 PM CDT,"{
    ""Kulaeaz"": {
        ""Reserved"": {
            ""Groups"": [12435107]
        },
        ""Stats"": {
            ""Coins"": 500000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 50000
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""SUPADUPACOINS"": {
        ""Reserved"": {
            ""Groups"": [12435107]
        },
        ""Stats"": {
            ""Coins"": 100000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 10000
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""FREEMONEY2021"": {
        ""Stats"": {
            ""Coins"": 500000000000000000000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 45000000000000
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""BACKUP"": {
        ""Stats"": {
            ""Coins"": 100000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 5000
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""TRADING"": {
        ""Stats"": {
            ""Coins"": 9000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 4500   
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""4.1.1"": {
        ""Stats"": {
            ""Coins"": 7000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 2500   
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""JuzaPlay"": {
        ""Stats"": {
            ""Coins"": 25000,
            ""Strength"": 0,
            ""Jumps"": 2,
            ""Gems"": 5000   
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""250Likes"": {
        ""Stats"": {
            ""Coins"": 15000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 1250  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
     }},
    ""100Likes"": {
        ""Stats"": {
            ""Coins"": 10000,
            ""Strength"": 0,
            ""Jumps"": 1,
            ""Gems"": 750  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""bogdanfun"": {
        ""Stats"": {
            ""Coins"": 10000,
            ""Strength"": 0,
            ""Jumps"": 2,
            ""Gems"": 2500  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},

    ""beredoc"": {
        ""Stats"": {
            ""Coins"": 10000,
            ""Strength"": 0,
            ""Jumps"": 2,
            ""Gems"": 5000  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null 
        }},
    ""MrTutorialMan"": {
        ""Stats"": {
            ""Coins"": 10000,
            ""Strength"": 0,
            ""Jumps"": 5,
            ""Gems"": 10000  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": ""American Flag"",
            ""Stage"": ""Dark Soul"",
            ""Pet"": ""Dragon"" 
        }},
    ""BuilderManOleg"": {
        ""Stats"": {
            ""Coins"": 35000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null 
        }},
    ""HappyCodes"": {
        ""Stats"": {
            ""Coins"": 7500,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 2500  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null 
        }},

    ""10 Likes"": {
        ""Stats"": {
            ""Coins"": 12000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},
    ""RELEASE2020"": {
        ""Stats"": {
            ""Coins"": 10000,
            ""Strength"": 0,
            ""Jumps"": 2,
            ""Gems"": 2500  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 12, ""day"": 9, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null
        }},

    ""TwitterStrength"": {
        ""Stats"": {
            ""Coins"": 0,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": ""Twitter Bird"" 
        }},

    ""#BLM"": {
        ""Stats"": {
            ""Coins"": 30000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null 
        }},
        
    ""1KVISITS"": {
        ""Stats"": {
            ""Coins"": 12000,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": null,
            ""Pet"": null 
        }},

    ""YouGoQueen!"": {
        ""Stats"": {
            ""Coins"": 0,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": ""Tier 3 Sub"",
            ""Pet"": null 
        }},
    ""THELIVINGTOMBSTONE"": {
        ""Reserved"": {
            ""Groups"": [12435107]
        },
        ""Stats"": {
            ""Coins"": 0,
            ""Strength"": 0,
            ""Jumps"": 0,
            ""Gems"": 0  
        },
        ""Expiration"": {
            ""ForceExpired"": false,
            ""TimeStamp"": {""year"": 2028, ""month"": 8, ""day"": 6, ""hour"":1, ""min"": 1, ""sec"":1},
            ""MaximumRedeems"": 1
        },
        ""Rewards"": {
            ""Dumb"": null,
            ""Stage"": ""The Man Behind The Slaughter"",
            ""Pet"": null 
        }}


}"
iQ9YEK50,Untitled,GamingLVScripts,Java,Wednesday 3rd of April 2024 02:43:06 PM CDT,"public class BasicRenderUtil {
    public static void push() {
        GL11.glPushMatrix();
    }

    public static void pop() {
        GL11.glPopMatrix();
    }

    public static void enable(int enable) {
        GL11.glEnable(enable);
    }

    public static void disable(int disable) {
        GL11.glDisable(disable);
    }

    public static void begin(int mode) {
        GL11.glBegin(mode);
    }

    public static void end() {
        GL11.glEnd();
    }

    public static void vertex(double x, double y) {
        GL11.glVertex2d(x, y);
    }

    public static void vertex(float x, float y) {
        GL11.glVertex2f(x, y);
    }

    public static void vertex(int x, int y) {
        GL11.glVertex2i(x, y);
    }

    public static void blend(int one, int two) {
        GL11.glBlendFunc(one, two);
    }

    public static void color(Color color) {
        GlStateManager.color(
                color.getRed() / 255.0F,
                color.getGreen() / 255.0F,
                color.getBlue() / 255.0F,
                color.getAlpha() / 255.0F
        );
    }

    public static void start() {
        push();

        enable(GL_BLEND);

        blend(
                GL_SRC_ALPHA,
                GL_ONE_MINUS_SRC_ALPHA
        );

        GlStateManager.disableTexture2D();
        GlStateManager.disableCull();

        GlStateManager.disableAlpha();
        GlStateManager.disableDepth();
    }

    public static void stop() {
        GlStateManager.enableAlpha();
        GlStateManager.enableDepth();

        GlStateManager.enableCull();
        GlStateManager.enableTexture2D();

        disable(GL_BLEND);

        color(Color.WHITE);

        pop();
    }

    public static void rectangle(double x, double y, double width, double height, boolean filled, Color color) {
        start();

        if (color != null)
            color(color);

        begin(filled ? GL_TRIANGLE_FAN : GL_LINE_LOOP);

        {
            vertex(x, y);
            vertex(x + width, y);
            vertex(x + width, y + height);
            vertex(x, y + height);
        }

        end();
        stop();
    }

    public static void scale(float x, float y, float scale, Runnable runnable) {
        GlStateManager.pushMatrix();

        glTranslatef(x, y, 1);
        glScalef(scale, scale, 1);
        glTranslatef(-x, -y, 1);

        runnable.run();

        GlStateManager.popMatrix();
    }
}"
ka8PurmT,1.6,Shiko5303,Lua,Wednesday 3rd of April 2024 02:29:19 PM CDT,gg.sleep(10)
KGYaQ0CY,Дипломы магистров,letu,PostgreSQL,Wednesday 3rd of April 2024 02:27:17 PM CDT,"SELECT faculty.name AS ""Факультет"", speciality.name AS ""Специальность"",
entrant.surname || ' ' || entrant.name AS ""ФИО"",
documents.series AS ""ДипломНомер"",
split_part(documents.data, '#', 4)  AS ""Кем выдан"",
split_part(documents.data, '#', 5)  AS ""Место выдачи""
from entrant, allset, speciality, faculty, documents
WHERE entrant.delete = '0'
AND entrant.allset_id = allset.id AND allset.speciality_id = speciality.id AND speciality.faculty_id = faculty.id
AND speciality.name LIKE 'Маг %'
AND entrant.id = documents.entrant_id AND documents.list_documents_id = 2
ORDER BY 1,2,3;"
WyNjcT9p,CC:Test2,Cigdan,Lua,Wednesday 3rd of April 2024 02:26:43 PM CDT,"turtle.refuel()

function sideDig(width)
  for i=1,width-1,1 do
    turtle.dig()
    turtle.forward()
  end
end
    
function wallDigUp(width, height)
  for i=1,height,1 do
    sideDig(width)
    turtle.digUp()
    turtle.up()
    turtle.turnRight()
    turtle.turnRight()
  end
end

function wallDigDown(width, height)
  for i=1,height,1 do
    sideDig(width)
    turtle.digDown()
    turtle.down()
    turtle.turnRight()
    turtle.turnRight()
  end
end

function tunnelDig(depth, width, height)
    for i=1,depth,1 do
    turtle.dig()
    turtle.forward()
    if (i % 2 == 0) then
      turtle.turnLeft()
      wallDigDown(width, height-1)
      turtle.turnLeft()
    else
      turtle.turnRight()
      wallDigUp(width, height-1)
      turtle.turnRight()
    end
  end
end

tunnelDig(4, 3, 3)
"
tHLLppcm,Matlab backup 4,FelipeNeto2,MatLab,Wednesday 3rd of April 2024 02:15:04 PM CDT,"% Parâmetros
u0 = 0;     % Condição de contorno em x=0 
uL = 1;     % Condição inicial 
phi = 1;    % Porosidade
V = -1;      % Velocidade 
D = 1;      % Coeficiente de difusão 
L = 1;      % Comprimento do domínio (0,L)
n = 10;

dx = L/(n-1);
x = [0:dx:L]; % Malha espacial

dt = 0.1;
t = [0:dt:1]; % Malha temporal

B = zeros([n 1]);
B(1) = u0;
B(n) = uL;
    
A = zeros(n);
A(1,1) = 1;
A(n,n) = 1;

% Coeficientes da matriz A
A1 = -(dt*V)/(phi*dx) + (dt*D)/(phi*dx^2);
A2 = 1 + (dt*V)/(phi*dx) - (2*D*dt)/(phi*dx^2);
A3 = (D*dt)/(phi*dx^2);

for i=2:n-1
    A(i, i-1) = A1;
    A(i, i) = A2;
    A(i, i+1) = A3;
    %B(i) = 0; 
end
    
% Solução do sistema
for i=2:1:length(t)
    u = A\B;
    B = u;
    figure(1);
    plot(x, u);
    hold on;
end

% Plot
% plot(x, u);
% xlabel('x');
% ylabel('C');
% title(sprintf('Solução analítica no tempo %.2f', T));"
d5ycW8RU,Client (Fusion example),TaylorsRus,Lua,Wednesday 3rd of April 2024 02:11:05 PM CDT,"--// I always use GetService as it's the most reliable way to fetch a service.
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local InputService = game:GetService(""UserInputService"")
local Lighting = game:GetService(""Lighting"")
local Players = game:GetService(""Players"")

--// Get the player objects early in the initialization progress as it is important.
local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local PlayerGui = Player:WaitForChild(""PlayerGui"")

--// Get all folders, before all sub-folders or objects of folders,and modules.
local Packages = ReplicatedStorage:WaitForChild(""Packages"")
local Interface = ReplicatedStorage:WaitForChild(""Interface"")
local Sounds = ReplicatedStorage:WaitForChild(""Sounds"")

--// I always use WaitForChild in an un-defined scope, as it ensures it will always be given time to load.
--// Load modules before objects.
local Fusion = require(Packages:WaitForChild(""Fusion""))

local LootInterface = Interface:WaitForChild(""LootInterface"")
local PlantingFrame = LootInterface:WaitForChild(""PlantingFrame"")

local ScrollingFrame = PlantingFrame:WaitForChild(""Frame""):WaitForChild(""ScrollingFrame"")
local CloseButton = PlantingFrame:WaitForChild(""CloseButton"")

local Tooltip = LootInterface:WaitForChild(""Tooltip"")

local Blur = Lighting:WaitForChild(""Blur"")

local OpenSound = Sounds:WaitForChild(""Open"")
local HoverSound = Sounds:WaitForChild(""Hover"")
local ClickSound = Sounds:WaitForChild(""Click"")

--// Initializing Fusion keywords.
local Value, Computed, Hydrate = Fusion.Value, Fusion.Computed, Fusion.Hydrate
local New, Children, OnEvent, OnChange = Fusion.New, Fusion.Children, Fusion.OnEvent, Fusion.OnChange
local Tween, Spring = Fusion.Tween, Fusion.Spring

local ACTIVATION_KEY = Enum.KeyCode.E

local SPRING_SPEED = 25
local SPRING_DAMPING = .5

--// This value is an important listener as it controls all functionality for opening and closing the GUI.
local InterfaceEnabled = Value(false)

local InterfaceEnabledComputation = Computed(function()
	local InterfaceEnabled = InterfaceEnabled:get()
	
	if InterfaceEnabled then
		OpenSound:Play()
	end
	
	return InterfaceEnabled
end)

--// Bootstrap for opening and closing the GUI (InputService)
local function InputBegan(InputObject, GameProcessedEvent)
	local InputKey = InputObject.KeyCode
	if GameProcessedEvent or InputKey ~= ACTIVATION_KEY then
		return
	end

	InterfaceEnabled:set(not InterfaceEnabled:get())
end

--// This runs on MouseButton1Click on the CloseButton Instance
local function CloseButtonClicked()
	InterfaceEnabled:set(false)
end

--// This runs every frame while the mouse is in a Cell
local function UpdateTooltipPosition(MouseInside)
	print(MouseInside:get())
	while MouseInside:get() do task.wait()
		local ScreenCenter = Camera.ViewportSize / 2
		local MousePosition = InputService:GetMouseLocation()
		local MouseInTopHalf = (MousePosition.Y - ScreenCenter.Y) < 0

		local TooltipAnchorY = MouseInTopHalf and .05 or .95

		Tooltip.AnchorPoint = Vector2.new(.95, TooltipAnchorY)
		Tooltip.Position = UDim2.fromOffset(MousePosition.X, MousePosition.Y)
	end
end

--// ""Cell"" is a keyword for a child of a ""Grid"" (UIGridLayout)
local function InitializeCell(Cell)
	local ImageButton = Cell:WaitForChild(""ImageButton"")
	local UIScale = nil
	local MouseInside = Value(false)	
	
	local function ScaleComputation()
		return InterfaceEnabled:get() and (MouseInside:get() and .9 or 1) or 0
	end

	local function MouseInsideComputation()
		if MouseInside:get() then
			HoverSound:Play()
		end

		task.spawn(UpdateTooltipPosition, MouseInside)
		return MouseInside:get()
	end
	
	local function CellMouseEnter()
		MouseInside:set(true)
	end	
	local function CellMouseLeave()
		MouseInside:set(false)
	end	
	
	local function CellMouseButton1Click()
		ClickSound:Play()
	end
		
	UIScale = New ""UIScale"" {
		Parent = Cell,
		Scale = Spring(Computed(ScaleComputation), SPRING_SPEED, SPRING_DAMPING),
	}
	
	Hydrate(ImageButton) {
		[OnEvent ""MouseEnter""] = CellMouseEnter,
		[OnEvent ""MouseLeave""] = CellMouseLeave,
		[OnEvent ""MouseButton1Click""] = CellMouseButton1Click
	}	
	Hydrate(Tooltip) {
		Visible = MouseInsideComputation,
		Position = UDim2.new(0, 0, 0 ,0)
	}	
	Computed(MouseInsideComputation)
end

--// This is a self contained function to reduce indentation when looping through children.
local function InitializeScrollingGrid()
	for _, Cell in ipairs(ScrollingFrame:GetChildren()) do
		if not Cell:IsA(""Frame"") then
			continue
		end
		
		InitializeCell(Cell)
	end
end

Hydrate(LootInterface) {
	--// Order of creation should replicate Instance.new()
	--// ex; Parent is set last. 
	Enabled = InterfaceEnabledComputation,
	Parent = PlayerGui,
	
	[Children] = {
		PlantingFrame = Hydrate(PlantingFrame) {
			[Children] = {		
				New ""UIScale"" {
					Scale =  Spring(Computed(function()
						return InterfaceEnabled:get() and 1.2 or 1
					end), SPRING_SPEED, SPRING_DAMPING),
				},			
				Hydrate(CloseButton) {
					[OnEvent ""MouseButton1Click""] = CloseButtonClicked
				},
			
				Computed(InitializeScrollingGrid)	
			}
		},				
	}
}

--// We init the Blur completely separately, becuase it is not in any way a descendent of LootInterface
Hydrate(Blur) {
	Enabled = InterfaceEnabledComputation,
	Size = Spring(Computed(function()
		return InterfaceEnabled:get() and 24 or 0
	end), SPRING_SPEED, SPRING_DAMPING)
}

--// Note, this was made with the functional programming paradigm in mind.

InputService.InputBegan:Connect(InputBegan)

--[[ // Order of operations for Fusion bootstrapping is 
	1. Create
	2. Hydrate
	3. Compute
	
	Order of operations for a Fusion instances' properites and events is:
	
	1. Most essential to least essential properties
	2. Parent to object
	3. Initilaize blocks ""[]"" such as ""Children""
]]"
GuE015sB,СПРИНТ № 6 | Просто о сложности. Теория быстродействия | Урок 6: Логарифмическая сложность,chevengur,C++,Wednesday 3rd of April 2024 02:09:18 PM CDT,"#include <iostream>

using namespace std;

template<typename F>
int FindFloor(int n, F m) {
    int low = 1;
    int high = n;

    while (low < high) {
        int mid = (high + low) / 2;
        if (m(mid)) {
            high = mid;
        }
        else {
            low = mid + 1;
        }
    }
    return low;
}
int main() {
    int n, t;
    cout << ""Enter n and target floor number: ""s << endl;
    cin >> n >> t;
    int count = 0;

    int found = FindFloor(n, [t, &count](int f) {
        ++count;
        return f >= t;
             });

    cout << ""Found floor ""s << found << "" after ""s << count << "" drops""s;

    return 0;
}"
f0gKwNW6,ArrowFunction,Silviya7,JavaScript,Wednesday 3rd of April 2024 01:47:18 PM CDT,"function solve() {

  const inputText=document.querySelector('#text');
  const nameConvention=document.querySelector('#naming-convention');
  const result= document.querySelector('#result');
  const text=inputText.value;

  const convertToPascalCase= (text)=>
  text
  .split(' ')
  .map(word=> word.charAt(0).toUpperCase()+word.slice(1).toLowerCase())
  .join('');


let convertor1= '';
if(nameConvention.value== 'Pascal Case'){
  convertor1=(text)=> convertToPascalCase (text);
  
  /*(text)=>
  text
  .split(' ')
  .map(word=> word.charAt(0).toUpperCase()+word.slice(1).toLowerCase())
  .join('');*/
}
else if(nameConvention.value== 'Camel Case'){
  convertor1=(text)=> convertToPascalCase(text).charAt(0).toLowerCase()+
  convertToPascalCase(text).slice(1)
  
}
else{
  convertor1=()=>{return 'Error!'};
}

result.textContent=convertor1(text);

}
"
fHXAmbgq,CC:Test1,Cigdan,Lua,Wednesday 3rd of April 2024 01:37:37 PM CDT,"local args = {...}

if #args < 3 then
    print(""Usage: tunnel <depth> <width> <height>"")
    return
end

local tunnelDepth = tonumber(args[1])
local tunnelWidth = tonumber(args[2])
local tunnelHeight = tonumber(args[3])

turtle.refuel()

function upDig(height)
  for i=1,height-1,1
  do 
    turtle.digUp()
    if i < height-1
    then
      turtle.up()
    end
  end
  for j=2,height-1,1
  do
    turtle.down()
  end
end

function wallDig(width, height)
  for i=1,width,1
  do
    upDig(height)
    if i < width
    then
      turtle.turnRight()
      turtle.dig()
      turtle.forward()
      turtle.turnLeft()
    end
  end
  turtle.turnLeft()
  for j=2,width,1
  do
    turtle.forward()
  end
  turtle.turnRight()
end

function tunnelDig(depth,width,height)
  for i=1,depth,1
  do
    turtle.dig()
    turtle.forward()
    wallDig(width,height)
  end
end

tunnelDig(tunnelDepth,tunnelWidth,tunnelHeight)"
vMe1HQ8j,Untitled,Josif_tepe,C,Wednesday 3rd of April 2024 01:32:18 PM CDT,"#include <stdio.h>

int main() {
    int n;
    scanf(""%d"", &n);

    int mat[n][n];

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int i = 0; i < n; i++) {
        printf(""%d "", mat[i][n - 1 - i]);
    }

    return 0;
}"
bnQUjJXL,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:30:38 PM CDT,"#include <stdio.h>

int main() {
    int n;
    scanf(""%d"", &n);

    int mat[n][n];

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(i + j == n - 1) {
                printf(""%d "", mat[i][j]);
            }
        }
    }

    return 0;
}"
zWcJdDjG,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:24:35 PM CDT,"#include <stdio.h>

int main() {
    int n;
    scanf(""%d"", &n);

    int mat[n][n];

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int i = 0; i < n; i++) {
        printf(""%d "", mat[i][i]);
    }

    return 0;
}"
rkjNcNG0,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:21:57 PM CDT,"#include <stdio.h>

int main() {
    int n;
    scanf(""%d"", &n);

    int mat[n][n];

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(i == j) {
                printf(""%d "", mat[i][j]);
            }
        }
    }

    
    

    return 0;
}"
nNfstZkC,telethon,icarussiano,Python,Wednesday 3rd of April 2024 01:20:43 PM CDT,"import os
from dotenv import load_dotenv
from telethon import TelegramClient, events, Button


load_dotenv()
TOKEN = os.getenv('TOKEN')
API_ID = int(os.getenv('API_ID'))
API_HASH = os.getenv('API_HASH')
print(TOKEN, API_ID, API_HASH)

bot = TelegramClient('bot', API_ID, API_HASH).start(bot_token=TOKEN)

@bot.on(events.InlineQuery())
async def inline_query(event):
    builder = event.builder
    empty_image=""https://upload.wikimedia.org/wikipedia/commons/5/59/Empty.png""
    results = [
        builder.photo(
            empty_image,
            text=""Immagine senza immagine"",
            buttons=Button.inline(""Immagine"", b""1""),
            include_media=False
        )
    ]
    await event.answer(results)

@bot.on(events.CallbackQuery())
async def button(event):
    if event.data == b""1"":
        img=""https://upload.wikimedia.org/wikipedia/commons/e/e9/Felis_silvestris_silvestris_small_gradual_decrease_of_quality.png""
        await event.edit_message(media=img)

with bot:
    bot.run_until_disconnected()"
CRFXcHX7,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:13:14 PM CDT,"#include <stdio.h>

int main() {
    int red, kolona;
    scanf(""%d%d"", &red, &kolona);

    int mat[red][kolona];

    for(int i = 0; i < red; i++) {
        for(int j = 0; j < kolona; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int j = 0; j < kolona; j++) {
        int sum = 0;
        for(int i = 0; i < red; i++) {
            sum += mat[i][j];
        }
        printf(""%d "", sum);
    }
    

    return 0;
}"
Yw9RGzit,Review Trive,fxvnpro,PHP,Wednesday 3rd of April 2024 01:08:13 PM CDT,https://www.fxvnpro.com/review-trive/
0SZssdnz,Review Trive,reviewbrokers,PHP,Wednesday 3rd of April 2024 01:07:51 PM CDT,https://www.reviewbrokers.net/review-trive/
mxhPsNyZ,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:07:04 PM CDT,"#include <stdio.h>

int main() {
    int red, kolona;
    scanf(""%d%d"", &red, &kolona);

    int mat[red][kolona];

    for(int i = 0; i < red; i++) {
        for(int j = 0; j < kolona; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }

    for(int i = 0; i < red; i++) {
        int sum = 0;
        for(int j = 0; j < kolona; j++) {
            sum += mat[i][j];
        }
        printf(""%d "", sum);
    }
    
    

    return 0;
}"
kdiwN06a,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 01:00:24 PM CDT,"#include <stdio.h>

int main() {
    int red, kolona;
    scanf(""%d%d"", &red, &kolona);

    int mat[red][kolona];

    for(int i = 0; i < red; i++) {
        for(int j = 0; j < kolona; j++) {
            scanf(""%d"", &mat[i][j]);
        }
    }
    
    for(int i = 0; i < red; i++) {
        for(int j = 0; j < kolona; j++) {
            printf(""%d "", mat[i][j]);
        }
        printf(""\n"");
    }

    return 0;
}"
FWb2DKep,tw: cs,fsoc131y,PHP,Wednesday 3rd of April 2024 12:59:24 PM CDT,"1. config.php:
<?php

/* Database Connection */

$sDbHost = 'localhost';
$sDbName = 'test';
$sDbUser = 'root';
$sDbPwd = '';

$dbConn = mysqli_connect($sDbHost, $sDbUser, $sDbPwd) or
    die('MySQL connect failed. ' . mysqli_error($dbConn));
mysqli_select_db($dbConn, $sDbName) or die('Cannot select database. ' . mysqli_error($dbConn));

2. insert.php:
<?php
function valid($id, $name, $address, $city, $error)
{
?>

    <html>

    <head>
        <title>Insert Records</title>
    </head>

    <body>

        <?php
        if ($error != '') {
            echo $error;
        }
        ?>

        <form action="""" method=""post"">
            Id:<input type=""text"" name=""id""> <br>
            Name:<input type=""text"" name=""name""> <br>
            Address:<input type=""text"" name=""address""> <br>
            City:<input type=""text"" name=""city""> <br>
            <input type=""submit"" name=""submit"" value=""Insert Records"">
        </form>
    </body>

    </html>
<?php
}

include('config.php');

if (isset($_POST['submit'])) {
    $id = mysqli_real_escape_string($dbConn, $_POST['id']);
    $name = mysqli_real_escape_string($dbConn, $_POST['name']);
    $address = mysqli_real_escape_string($dbConn, $_POST['address']);
    $city = mysqli_real_escape_string($dbConn, $_POST['city']);

    if ($id == '' || $name == '' || $address == '' || $city == '') {

        $error = 'Please enter the details!';

        valid($id, $name, $address, $city, $error);
    } else {

        mysqli_query($dbConn, ""INSERT into employee values ('$id','$name', '$address', '$city')"")
            or die(mysqli_error($dbConn));

        header(""Location: view.php"");
    }
} else {
    valid('', '', '', '', '');
}
?>

3. edit.php:
<?php
function valid($id, $name, $address, $city, $error)
{
?>
    <html>

    <head>
        <title>Edit Records</title>
    </head>

    <body>
        <?php

        if ($error != '') {
            echo $error;
        }
        ?>

        <form action="""" method=""post"">
            Id:<input type=""text"" name=""id"" value=""<?php echo $id; ?>"" /> <br>
            Name:<input type=""text"" name=""name"" value=""<?php echo $name; ?>"" /> <br>
            Address:<input type=""text"" name=""address"" value=""<?php echo $address; ?>"" /> <br>
            City:<input type=""text"" name=""city"" value=""<?php echo $city; ?>"" /> <br>
            <input type=""submit"" name=""submit"" value=""Edit Records"">

        </form>
    </body>

    </html>
<?php
}

include('config.php');

if (isset($_POST['submit'])) {

    if (is_numeric($_POST['id'])) {

        $id = mysqli_real_escape_string($dbConn, $_POST['id']);
        $name = mysqli_real_escape_string($dbConn, $_POST['name']);
        $address = mysqli_real_escape_string($dbConn, $_POST['address']);
        $city = mysqli_real_escape_string($dbConn, $_POST['city']);


        if ($id == '' || $name == '' || $address == '' || $city == '') {
            $error = 'ERROR: Please fill in all required fields!';
            valid($id, $name, $address, $city, $error);
        } else {

            mysqli_query($dbConn, ""UPDATE employee SET name='$name', address='$address' ,city='$city' WHERE id='$id'"") or die(mysqli_error($dbConn));

            header(""Location: view.php"");
        }
    } else {

        echo 'Error in id!';
    }
} else {
    if (isset($_GET['id']) && is_numeric($_GET['id']) && $_GET['id'] > 0) {

        $id = $_GET['id'];
        $result = mysqli_query($dbConn, ""SELECT * FROM employee WHERE id='$id'"") or die(mysqli_error($dbConn));
        $row = mysqli_fetch_array($result);

        if ($row) {

            $name = $row['name'];
            $address = $row['address'];
            $city = $row['city'];

            valid($id, $name, $address, $city, '');
        } else {
            echo ""No results!"";
        }
    } else {
        echo 'Error!';
    }
}
?>

4. view.php:
<html>

<head>
    <title>View Records</title>
</head>

<body>
    <?php

    include('config.php');

    $result = mysqli_query($dbConn, ""SELECT * FROM employee"")
        or die(mysqli_error($dbConn));

    echo ""<table border='1' cellpadding='10'>"";
    echo ""<tr>
<th><font color='Red'>Id</font></th>
<th><font color='Red'>Name</font></th>
<th><font color='Red'>Address</font></th>
<th><font color='Red'>City</font></th>
<th><font color='Red'>Edit</font></th>
<th><font color='Red'>Delete</font></th>
</tr>"";

    while ($row = mysqli_fetch_array($result)) {

        echo ""<tr>"";
        echo '<td><b><font color=""Orange"">' . $row['id'] .
            '</font></b></td>';
        echo '<td><b><font color=""Orange"">' . $row['name'] .
            '</font></b></td>';
        echo '<td><b><font color=""Orange"">' . $row['address'] .
            '</font></b></td>';
        echo '<td><b><font color=""Orange"">' . $row['city'] .
            '</font></b></td>';

        echo '<td><b><font color=""Orange"">
	<a href=""edit.php?id=' .
            $row['id'] . '"">Edit</a></font></b></td>';
        echo '<td><b><font color=""Orange"">
	<a href=""delete.php?id=' . $row['id'] .
            '"">Delete</a></font></b></td>';
        echo ""</tr>"";
    }
    echo ""</table>"";
    ?>
    <p><a href=""insert1.php"">Insert new record</a></p>
</body>

</html>

5. delete.php:
<?php
include('config.php');

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $id = $_GET['id'];

    $result = mysqli_query($dbConn, ""DELETE FROM employee WHERE id=$id"")
        or die(mysqli_error($dbConn));

    header(""Location: view.php"");
} else {
    header(""Location: view.php"");
}


---------------------------------------------------------------------------------------------------------------------
GPT:
<?php
// Database connection
$servername = ""localhost"";
$username = ""root"";
$password = """";
$database = ""student_event"";

$conn = mysqli_connect($servername, $username, $password, $database);

// Check connection
if (!$conn) {
    die(""Connection failed: "" . mysqli_connect_error());
}

// Create table for student participation
$sql = ""CREATE TABLE IF NOT EXISTS participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    event VARCHAR(100) NOT NULL,
    status VARCHAR(20) DEFAULT 'Registered'
)"";

if (mysqli_query($conn, $sql)) {
    echo ""Table 'participants' created successfully<br>"";
} else {
    echo ""Error creating table: "" . mysqli_error($conn) . ""<br>"";
}

// Insert operation
if ($_SERVER[""REQUEST_METHOD""] == ""POST"" && isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $event = $_POST['event'];

    $sql = ""INSERT INTO participants (name, email, event) VALUES ('$name', '$email', '$event')"";

    if (mysqli_query($conn, $sql)) {
        echo ""Record inserted successfully<br>"";
    } else {
        echo ""Error inserting record: "" . mysqli_error($conn) . ""<br>"";
    }
}

// Update operation
if ($_SERVER[""REQUEST_METHOD""] == ""POST"" && isset($_POST['update'])) {
    $id = $_POST['id'];
    $status = $_POST['status'];

    $sql = ""UPDATE participants SET status='$status' WHERE id=$id"";

    if (mysqli_query($conn, $sql)) {
        echo ""Record updated successfully<br>"";
    } else {
        echo ""Error updating record: "" . mysqli_error($conn) . ""<br>"";
    }
}

// Delete operation
if ($_SERVER[""REQUEST_METHOD""] == ""POST"" && isset($_POST['delete'])) {
    $id = $_POST['id'];

    $sql = ""DELETE FROM participants WHERE id=$id"";

    if (mysqli_query($conn, $sql)) {
        echo ""Record deleted successfully<br>"";
    } else {
        echo ""Error deleting record: "" . mysqli_error($conn) . ""<br>"";
    }
}

mysqli_close($conn);
?>

-------
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Event Participation Form</title>
</head>
<body>
    <h2>Event Participation Form</h2>
    <form action=""submit.php"" method=""POST"">
        <label for=""name"">Name:</label><br>
        <input type=""text"" id=""name"" name=""name"" required><br>
        <label for=""email"">Email:</label><br>
        <input type=""email"" id=""email"" name=""email"" required><br>
        <label for=""event"">Event:</label><br>
        <input type=""text"" id=""event"" name=""event"" required><br>
        <button type=""submit"">Submit</button>
    </form>
</body>
</html>

--------------------
<?php
$servername = ""localhost"";
$username = ""root"";
$password = """";
$database = ""student_event"";

$conn = mysqli_connect($servername, $username, $password, $database);

if (!$conn) {
    die(""Connection failed: "" . mysqli_connect_error());
}

if ($_SERVER[""REQUEST_METHOD""] == ""POST"") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $event = $_POST['event'];

    $sql = ""INSERT INTO participants (name, email, event) VALUES ('$name', '$email', '$event')"";

    if (mysqli_query($conn, $sql)) {
        echo ""Record inserted successfully<br>"";
    } else {
        echo ""Error inserting record: "" . mysqli_error($conn) . ""<br>"";
    }
}

mysqli_close($conn);
header(""Location: index.html"");
exit();
?>

----------------------
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Participant List</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h2>Participant List</h2>
    <table>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Event</th>
        </tr>
        <?php
        $servername = ""localhost"";
        $username = ""root"";
        $password = """";
        $database = ""student_event"";

        $conn = mysqli_connect($servername, $username, $password, $database);

        if (!$conn) {
            die(""Connection failed: "" . mysqli_connect_error());
        }

        $sql = ""SELECT * FROM participants"";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo ""<tr>"";
                echo ""<td>"".$row['id'].""</td>"";
                echo ""<td>"".$row['name'].""</td>"";
                echo ""<td>"".$row['email'].""</td>"";
                echo ""<td>"".$row['event'].""</td>"";
                echo ""</tr>"";
            }
        } else {
            echo ""<tr><td colspan='4'>No participants found</td></tr>"";
        }

        mysqli_close($conn);
        ?>
    </table>
</body>
</html>
"
RDZJpm4z,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:30:56 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int zbir(int n) {
    int sum = 0;
    for(int i = 0; i  <n; i++) {
        sum += i;
    }
    return sum;
}
int main() {
    cout << zbir(10) << endl;
    return 0;
}

// 1 1 2 3 5 8 13
"
qDByE5x7,UTS-ANS7,afrizalwahyuadi66,Python,Wednesday 3rd of April 2024 12:30:07 PM CDT,"# Perpustakaan----------------
import os
from subprocess import call
import shutil
#-----------------------------


# Function to print colored text---------------
def print_color(text, color):
    if color == 'red':
        print(""\033[91m"" + text + ""\033[00m"")
    elif color == 'green':
        print(""\033[92m"" + text + ""\033[00m"")
    elif color == 'yellow':
        print(""\033[93m"" + text + ""\033[00m"")
    elif color == 'blue':
        print(""\033[94m"" + text + ""\033[00m"")
    else:
        print(text)
#---------------------------------------------


# Define the logo-----------------------------------------------------------------------
logo = (
    ""\033[34m  ██╗░░░██╗████████╗░██████╗░░░░░░░█████╗░███╗░░██╗░██████╗███████╗ \n"" 
    ""\033[34m  ██║░░░██║╚══██╔══╝██╔════╝░░░░░░██╔══██╗████╗░██║██╔════╝╚════██║ \n""
    ""\033[34m  ██║░░░██║░░░██║░░░╚█████╗░█████╗███████║██╔██╗██║╚█████╗░░░░░██╔╝ \n""
    ""\033[34m  ██║░░░██║░░░██║░░░░╚═══██╗╚════╝██╔══██║██║╚████║░╚═══██╗░░░██╔╝░ \n""
    ""\033[34m  ██║░░░██║░░░██║░░░░╚═══██╗╚════╝██╔══██║██║╚████║░╚═══██╗░░░██╔╝░ \n"" 
    ""\033[34m  ╚██████╔╝░░░██║░░░██████╔╝░░░░░░██║░░██║██║░╚███║██████╔╝░░██╔╝░░ \n""
    ""\033[34m  ░╚═════╝░░░░╚═╝░░░╚═════╝░░░░░░░╚═╝░░╚═╝╚═╝░░╚══╝╚═════╝░░░╚═╝░░░ \n\n""
    ""\033		    	Tugas UTS Algoritma 2\n\n""
                                                                                                                                                                     
    ""\033	[91m 1. Afrizal Wahyu Adi Putra\t 11230070\n""
    ""\033  	 2. Nadia\t 112300?? \n""
    ""\033          3. Syifa\t 112300?? \n""
    ""\033[0m""
)
#---------------------------------------------------------------------------------------


# Clear screen------------------------------------
os.system('cls' if os.name == 'nt' else 'clear')
#-------------------------------------------------


# Print the logo---------
print(logo)
#------------------------



# Input from a directory program-----------
def program1():
    call([""python"", ""program1.py""])

def program2():
    call([""python"", ""program2.py""])

def program3():
    call([""python"", ""program3.py""])

def program4():
    call([""python"", ""program4.py""])

def program5():
    call([""python"", ""program5.py""])

def program6():
    call([""python"", ""program6.py""])

def program7():
    call([""python"", ""program7.py""])

def program8():
    call([""python"", ""program8.py""])

def program9():
    call([""python"", ""program9.py""])    

def program10():
    call([""python"", ""program10.py""])
#---------------------------------------


# Genarate Tabel-------------------------------------------------------------------------------------------
def display_programs_table():
    print(""-"" * 57)
    print(""|\t\tPILIH SALAH SATU PROGRAM\t\t|"")
    print(""-"" * 57)
    for i, (name, program) in enumerate(programs.items(), 1):
        print(f""|  {i}.\t{name.ljust(10,' ')}\t\t\t\t\t|"")
    print(""-"" * 57)
    
    
# Print word-------------------
programs = {
    ""Program 1"": program1,
    ""Program 2"": program2,
    ""Program 3"": program3,
    ""Program 4"": program4,
    ""Program 5"": program5,
    ""Program 6"": program6,
    ""Program 7"": program7,
    ""Program 8"": program8,
    ""Program 9"": program9,
    ""Program 10"": program10,
}
#------------------------------



def main():
    display_programs_table()
    while True:
        try:
            choice = int(input(""\nEnter the number of the program to run: ""))
            if 1 <= choice <= len(programs):
                programs[list(programs.keys())[choice-1]]()
                return
                
            print(""Invalid choice, please enter a number between 1 and {}"".format(len(programs)))
        except ValueError:
            print(""Invalid input, please enter a number between 1 and {}"".format(len(programs)))

if __name__ == ""__main__"":
    main()
#--------------------------------------------------------------------------------------------------------
"
ATcLGUj9,Untitled,dertarchingratadata,JSON,Wednesday 3rd of April 2024 12:28:37 PM CDT,"{
  ""feature"": ""AI Search Helper"",
  ""search_id"": ""B5Z2KEFN""
}"
ZnEMt58A,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:28:13 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;


int main() {
    int n;
    cin >> n;
    int niza[n];
    
    return 0;
}

// 1 1 2 3 5 8 13
"
AwK5m9d3,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:15:31 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int fib(int n) {
    if(n <= 1) {
        return 1;
    }
    return fib(n - 1) + fib(n - 2);
}
int main() {
    
    int n;
    cin >> n;
    cout << fib(n);
    return 0;
}

// 1 1 2 3 5 8 13
"
hH6DzDcW,"The msg_id is too low, the client time has to be synchronized.",JohnDoeYouTube,Bash,Wednesday 3rd of April 2024 12:11:18 PM CDT,"(vcplayerbot) user@localhost:~/VCPlayerBot$ sudo timedatectl status
               Local time: Wed 2024-04-03 19:09:24 CEST
           Universal time: Wed 2024-04-03 17:09:24 UTC
                 RTC time: Wed 2024-04-03 17:09:24
                Time zone: Europe/Madrid (CEST, +0200)
System clock synchronized: yes
              NTP service: active
          RTC in local TZ: no

(vcplayerbot) user@localhost:~/VCPlayerBot$ python3 main.py 
ModuleNotFoundError
/home/user/VCPlayerBot/main.py:108: DeprecationWarning: There is no current event loop
  asyncio.get_event_loop().run_until_complete(main())
Traceback (most recent call last):
  File ""/home/user/VCPlayerBot/main.py"", line 108, in <module>
    asyncio.get_event_loop().run_until_complete(main())
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/asyncio/base_events.py"", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File ""/home/user/VCPlayerBot/main.py"", line 35, in main
    await bot.start()
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/site-packages/pyrogram/methods/utilities/start.py"", line 52, in start
    is_authorized = await self.connect()
                    ^^^^^^^^^^^^^^^^^^^^
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/site-packages/pyrogram/methods/auth/connect.py"", line 46, in connect
    await self.session.start()
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/site-packages/pyrogram/session/session.py"", line 142, in start
    raise e
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/site-packages/pyrogram/session/session.py"", line 109, in start
    await self._send(raw.functions.Ping(ping_id=0), timeout=self.START_TIMEOUT)
  File ""/home/user/anaconda3/envs/vcplayerbot/lib/python3.11/site-packages/pyrogram/session/session.py"", line 332, in _send
    raise BadMsgNotification(result.error_code)
pyrogram.errors.BadMsgNotification: [16] The msg_id is too low, the client time has to be synchronized."
rhZRJN2Z,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:08:39 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    
    int n;
    cin >> n;
    int a[n];
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    int j = 0;
    int sum = 0;
    int Z= 15;
    for(int i = 0; i < n; i++) {
        
        while(j < n and sum + a[j] <= Z) {
            sum += a[j];
            j++;
        }
        sum -= a[i];
    }
    return 0;
}
"
v7pEk0Ce,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:04:35 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int a = 5, b = 3, c = 6;
    
    for(int i = 0; i < a; i++) {
        for(int j = 0; j < b; j++) {
            for(int k = 0; k < c; k++) {
                cout << i << "", "" << j << "", "" << k << endl;
            }
        }
    }
    return 0;
}
"
s3UvLuu1,PersonBehaviorTest,cepxuozab,C++,Wednesday 3rd of April 2024 12:02:50 PM CDT,"void PersonBehaviorTest() {
        Person p(""ivan""s, 17);
        ASSERT_EQUAL(p.GetDanceCount(), 0);
        ASSERT_EQUAL(p.GetSatisfaction(), 100);

        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 0);
        ASSERT_EQUAL(p.GetSatisfaction(), 100);

        p.Dance();
        ASSERT_EQUAL(p.GetDanceCount(), 1);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);
        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 1);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);

        p.Dance();
        p.Dance();
        ASSERT_EQUAL(p.GetDanceCount(), 3);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 3);
        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 3);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 3);

        const auto& p_c = p;
        ASSERT_EQUAL(p_c.GetDanceCount(), 3);
        ASSERT_EQUAL(p_c.GetSatisfaction(), 100 + 3);
    }
"
GWSk1uGa,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 12:02:07 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n = 2;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < n; k++) {
                cout << i << "" "" << j << "" "" << k << endl;
            }
        }
        
    }
    return 0;
}
"
5t055Vpq,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 11:57:32 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n = 10;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cout << i << "", "" << j << endl;
        }
    }

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cout << i << "", "" << j << endl;
        }
    }
    return 0;
}
"
K9bJZLhy,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 11:54:03 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n = 10;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cout << i << "", "" << j << endl;
        }
        
        
    }
    return 0;
}
"
XQMZiAJG,Untitled,Farz0l1x,Python,Wednesday 3rd of April 2024 11:49:56 AM CDT,"def F(x, y, A):
    return (99 != y + 2 * x) or (A < x) or (A < y)
for A in range(0, 10_000):
    if all(F(x, y, A) for x in range(0, 1000) for y in range(0, 1000)) == 1:
        print(A)
"
HUy0Xdk4,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 11:48:35 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n = 10;
    for(int i = 0; i < n; i++) {
        cout << i << "" "";
    }
    
    for(int i = 0; i < n; i++) {
        cout << i << "" "";
    }
    return 0;
}
"
Di4dWD5L,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 11:46:59 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int x = 123, y = 10;
    cout << x + y << endl;
    return 0;
}
"
4pbLuHTs,Untitled,Josif_tepe,C++,Wednesday 3rd of April 2024 11:46:19 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n = 10;
    
    for(int i = 0; i < n; i++) {
        cout << i << "" "";
    }
    return 0;
}
"
b9YNJMtA,Dbu niubi,JJMACREYCREY12,Lua,Wednesday 3rd of April 2024 11:43:00 AM CDT,"DBU auto farm
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Nijbiplus02/Dub-script/ec112e4b074782ad4d476af9c249e569ee4a91ba/Script"", true))()
Dbu stats reader
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Nijbiplus02/Dub-script/main/dbu%20script"", true))()"
