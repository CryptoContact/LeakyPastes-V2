id,title,username,language,date,content
G9QppWeW,Smoll,kaedepat,CSS,Sunday 17th of September 2023 12:50:20 AM CDT,"[sc=sm][sc=h]Name * he/she[/sc]

[sc=l][url=https://pfq.link/@bPV]Journal[/url] ♦ [url=https://pfq.link/@bPV]Shop[/url]
[url=https://pfq.link/@bPV]Art[/url] ♦ [url=https://pfq.link/@bPV]Templates[/url][/sc]

[sc=c][pit=""©""][url=https://www.pexels.com/photo/gray-surface-3255761/]BG[/url] ♦ [url=https://pfq.link/@bPV]template[/url][/pit][/sc][/sc]

[style]
.sm {
    margin: 0 auto;
    height: 200px;
    width: 200px;
    background: url('https://images.pexels.com/photos/3255761/pexels-photo-3255761.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2');
    background-size: cover;
    background-position: center;
    border: 5px solid #59B9CF;
    box-sizing: border-box;
    border-radius: 10px;
    box-shadow: 0 0 5px #222;
    font-variant: small-caps;
    color: black;
    font-size: 10pt;
    padding: 5px;
    align-items: center;
    justify-content: space-evenly;
    display: flex;
    flex-flow: column nowrap;
    a, a:link, a:hover, a:active, a:visited {
        color: #1C515F;
        }
    .tooltip_content {
        background: url('https://images.pexels.com/photos/3255761/pexels-photo-3255761.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2');
        background-size: cover;
        background-position: center;
        border: 2px solid #59B9CF;
        border-radius: 10px;
        color: inherit;
        width: 125px;
        margin-left: -60px;
        
        }
    span.bbcode_tooltip {
        border-bottom: 1px dotted black;
        }
    }
[/style]"
rF4nmKdZ,Picture Cards,kaedepat,CSS,Sunday 17th of September 2023 12:49:38 AM CDT,"[sc=sig][sc=img][/sc][sc=a][/sc][sc=b][/sc][sc=c][url=https://www.freepik.com/free-vector/hand-painted-watercolor-pastel-sky-background_13223496.htm#query=background&position=0&from_view=keyword&track=sph]img[/url] ** [url=https://pfq.link/@bPV]template[/url][/sc][/sc]

[style]
.sig {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(12, 20px);
    width: 100%;
    height: 100%;box-sizing: border-box;
    //position: absolute;
    .img {
        grid-column: 4 / span 6;
        grid-row: 1 / span 8;
        background: url('https://img.freepik.com/free-vector/hand-painted-watercolor-pastel-sky-background_23-2148902771.jpg?w=2000&t=st=1683611074~exp=1683611674~hmac=896ba1467563eb9241f64ec5012b48bb7c28bd7589b5fd588a1a603940968a40');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center center;
        border: 5px solid #849DD2;
        border-radius: 10px;
        height: 185px;
        width: 275px;
        z-index: 2;
        box-shadow: 5px 5px 5px #333;
        }
    .a {
        z-index: 1;
        height: 185px;
        width: 275px;
        grid-column: 5 / span 5;
        grid-row: 2 / span 8;
        background: #cacff9;
        border: 5px solid #fc94b3;
        border-radius: 10px;
        box-shadow: 5px 5px 5px #333;
        }
    .b {
        z-index: 0;
        height: 185px;
        width: 275px;
        grid-column: 6 / span 5;
        grid-row: 3 / span 8;
        border: 5px solid #ed90cf;
        background: #ce9eec;
        box-shadow: 5px 5px 5px #333;
        border-radius: 10px;
        }
    .c {
        font-size: 10pt;
        grid-column: 1 / span 12;
        grid-row: 12 / span 1;
        z-index: 3;
        }
    .mq1 & .b { display: none;}
    .mq1 & .img, .mq1 & .a, .mq1 & .b {height: 185px;width: 250px;}
    }
[/style]"
KkwZaYgG,Gradient Watermelon,kaedepat,CSS,Sunday 17th of September 2023 12:48:27 AM CDT,"[styleclass=gradientMelon][sc=header]Some Text here[/sc]
[styleclass=tabbed_interface horizontal][
 ][ul][
  ][li][img]/img/farmbtns/farm_news.png[/img][/li][
  ][li][item=Pokeradar][/li][
  ][li][item=Azure Flute][/li][
  ][li][item=Medium Normal Gem][/li][
  ][li][item=Box Box][/li][
  ][li][item=Money Safe][/li][
 ][/ul][
][sc=tab tab-active][pkmnpanel=MxCjs]

Coded by [url=https://pfq.link/@bPV]Aemilia[/url]. Snek image made by [url=https://pfq.link/@L6k]Cele[/url]. PKMN Panel CSS made by [url=https://pokefarm.com/forum/post/6000778]Mirzam[/url].
[url=https://pfq.link/@bPV]Me[/url]
Random text here [u]underlined texty[/u], [i]italics texty[/i], [s]strikethrough texty[/s], [b]bold texty[/b]. [hr][h1]Header 1[/h1][h2]Header 2[/h2][h3]Header 3[/h3]
[url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] [url=/user/:bPV][Link][/url] 

[tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip][
][ul][
 ][li]List Item[/li][
 ][li]List Item[/li][
 ][li]List Item[/li][
 ][li]List Item[/li][
][/ul][
][progress=50/100]50/100[/progress]
[quote=User]Content[/quote]
[display=Display box]Content[/display]
[hide=Hide box]Content[/hide]
[accordion][a-section=Accordion 1]Content 1[/a-section][a-section=Accordion 2]Content 2[/a-section][a-section=Accordion 3]Content 3[/a-section][/accordion]
[stackbox][a-section=Stackbox 1]Content 1[/a-section][a-section=Stackbox 2]Content 2[/a-section][a-section=Stackbox 3]Content 3[/a-section][/stackbox]
[table][tr][th][/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][/table][/sc][
][sc=tab][/sc][
][sc=tab][/sc][
][sc=tab][/sc][
][/styleclass]
[/styleclass]

[style]
.gradientMelon {
    box-sizing: border-box;
    background: hsla(12, 84%, 68%, 1);
    background: linear-gradient(90deg, hsla(12, 84%, 68%, 1) 0%, hsla(343, 100%, 66%, 1) 100%);
    background: -moz-linear-gradient(90deg, hsla(12, 84%, 68%, 1) 0%, hsla(343, 100%, 66%, 1) 100%);
    background: -webkit-linear-gradient(90deg, hsla(12, 84%, 68%, 1) 0%, hsla(343, 100%, 66%, 1) 100%);
    min-height: 200px;
    padding: 20px;
    .header {
        width: 95%;
        background: #fff;
        background: rgba(255, 255, 255, 0.75);
        margin: 0 auto;
        padding: 5px;
        color: #000;
        text-align: center;
        font-size: 1.5em;
        }
    .tabbed_interface {
        background: none;
        
        ul {
            background: none;
            text-align: center;
            margin-bottom: 5px;
            li {
                background: none;
                border: none;
                &.tab-active img, &:hover img {
                    filter: drop-shadow(0 0 5px #000);
                    }
                }
            }
        > .tab, >.tab.tab-active {
            background: #fff;
            background: rgba(255, 255, 255, 0.75);
            border: none;
            box-shadow: none;
            padding: 10px;
            color: #000;
            b, u, del, i {
                color: #035911;
                }
            u {
                text-decoration: none;
                background: hsla(350, 73%, 44%, 1);
                background: linear-gradient(to left, hsla(350, 73%, 44%, 1) 0%, hsla(274, 65%, 12%, 1) 100%);
                background: -moz-linear-gradient(to left, hsla(350, 73%, 44%, 1) 0%, hsla(274, 65%, 12%, 1) 100%);
                background: -webkit-linear-gradient(to left, hsla(350, 73%, 44%, 1) 0%, hsla(274, 65%, 12%, 1) 100%);
                background-position: 0 100%;
                background-size: 100% 2px;
                background-repeat: repeat-x;
                }
            > a, > a:hover, > a:link, > a:active, > a:visited {
                color: #0063e4;
                text-decoration: none;
                }
            > a {
                display: inline-block;
                font-weight: bold;
                padding: .5em;
                margin-left: -.25em;
                position: relative;
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);

                &:before, &:after {
                    position: absolute;
                    content: '';
                    border-bottom: 3px solid rgb(0, 99, 228);
                    border-radius: 1em;
                    bottom: .3em;
                    transition: transform .5s cubic-bezier(0.075, 0.82, 0.165, 1);
                    }

                &:before {
                    width: 1em;
                    transform-origin: left;
                    }
            
                &:after {
                    width: 82%;
                    left: 1em;
                    transform: translateX(110%);
                    }
            
                &:hover:before {
                    transform: scaleX(0.3);
                    }
            
                &:hover:after {
                    transform: translateX(0);
                    }
                }
            h1, h2, h3 {
                text-shadow: none;
                color: #870303;
                font-family: 'Flower', cursive;
                }
            hr {
                border: 0;
                height: 2px;
                background-image: linear-gradient(to right, hsla(222, 77%, 33%, 0), hsla(222, 77%, 33%, 0.75), hsla(222, 77%, 33%, 0));
                }
            ul, ol {
                text-align: left;
                }
            table {
                margin: 0 auto;
                text-align: center;
                border-collapse: separate;
                border-spacing: 5px;
                border: none;
                display: flex;
                width: 100%;
                overflow-x: auto;
                tr {
                    th {
                        width: fit-content;
                        padding: 5px;
                        background: #035911;
                        color: #fff;
                        border: none;
                    }
                    td {
                        background: transparent;
                        color: #035911;
                        border: 1px solid #035911;
                        padding: 5px;
                        }
                    }
                }
            .expbar { 
                background: transparent;
                border: 1px solid #870303;
                border-radius: 5px;
                color: #000;
                display: flex;
                align-items: center;
                justify-content: center;
                
                &>div {
                    border-color: none;
                    border-right: none;
                    background: #870303;
                    } 
                
                &>span {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    color: #000;
                    background: #ccc;
                    padding: 5px;
                    border-radius: 2px;
                    border: 1px solid #870303;
                    }
                }
            span.bbcode_tooltip {
                border-bottom: 1px dotted #0063e4;
                }
            .tooltip_content {
                background: #00357A;
                color: #ccc;
                border-radius: 0;
                border: 2px solid #000;
                padding: 3px;
                }
            .panel {
                box-shadow: none;
                border: none;
                border-radius: 0;
                background: transparent;
                > h3, > h3 > a {
                    border-radius: 0;
                    border: none;
                    border-bottom: 2px dotted #870303;
                    background: transparent;
                    color: #870303;
                    }
                > div {
                    background: none;
                    border-left: 2px solid #870303;
                    margin-left: 5px;
                    margin-top: 5px;
                    padding: 1%;
                    color: #000;
                    }
                }
            /* These default to the VIEWER's skin colors */
            /* To customize them, just set hex color codes instead */
            @platform-base: @col-bg1;
            @platform-border: @col-border1;
            @name-color: @col-fg1;
            @name-background: @col-bg3;
            @name-border: @col-border3;
            @berry-background: @col-flavour-up;
            @berry-border: @col-fg1;
            /* Set to ""block"" to show, ""none"" to hide */
            @display-item: block;
            @display-berries: block;

            .party {
                display: inline-block;
                &,>div {
                    padding: 0;
                    margin: 0;
                    background: transparent;
                    width: 120px !important;
                    height: 120px;
                    overflow: hidden;
                    border: none;
                    border-radius: 0;
                    box-shadow: none;
                    }
                >div {
                    &::after {
                        display: none;
                        }
                    .pkmn {
                        margin: 0 10px;
                        float: unset;
                        &::before {
                            background-color: @platform-base;
                            border-color: @platform-border;
                            }
                        .helditem {
                            display: @display-item;
                            .itemsprite {
                                cursor: unset;
                                }
                            .tooltip_content {
                                display: none;
                                }
                            }
                        }
                        .name {
                            background-color: @name-background;
                            border: 1px solid @name-border;
                            border-radius: 5px;
                            margin-top: 1px;
                            height: 16px;
                            display: flex;
                            flex-wrap: nowrap;
                            a {
                                color: @name-color;
                                font-weight: normal;
                                margin: 0 2px;
                                width: 80px !important;
                                flex-grow: 99;
                                font-size: 12px;
                                }
                            img {
                                display: none;
                                }
                            img:nth-last-of-type(-n+2) {
                                display: inline;
                                margin: 0;
                                }
                            }
                        .action {
                            display: @display-berries;
                            position: absolute;
                            left: 88px;
                            top: 70px;
                            height: unset;
                            width: unset;
                            .berrybuttons[data-up=""any""]>a[data-berry=""aspear""],
                            .berrybuttons[data-up=""sour""]>a[data-berry=""aspear""], 
                            .berrybuttons[data-up=""spicy""]>a[data-berry=""cheri""], 
                            .berrybuttons[data-up=""dry""]>a[data-berry=""chesto""], 
                            .berrybuttons[data-up=""sweet""]>a[data-berry=""pecha""],
                            .berrybuttons[data-up=""bitter""]>a[data-berry=""rawst""] {
                                display: inline-block;
                                }
                            .berrybuttons {
                                >a {
                                    display: none;
                                    width: 20px;
                                    height: 20px;
                                    line-height: 20px;
                                    padding: 5px;
                                    background-color: @berry-background;
                                    border-radius: 20px;
                                    >img { 
                                        vertical-align: top;
                                        max-height: 20px;
                                        max-width: 20px;
                                        }
                                }
                                >a[data-berry=""pecha""] img {
                                /* this berry is short */
                                    margin-top: 1px;
                                    }
                                }
                            &.working {
                                opacity: 0.5;
                                }
                            table {
                                /* ""thank you"" message */
                                display: none;
                                }
                            }
                        .expbar, .taste, .extra {
                            display: none;
                        }
                    }
                >div:hover>.action a[data-berry]:after {
                    border-color: @berry-border;
                    }
                }
            }
        }
    }
/* latin */
@font-face {
  font-family: 'Flower';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/indieflower/v17/m8JVjfNVeKWVnh3QMuKkFcZVaUuH.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
[/style]"
wf1NLfvq,Smoll,kaedepat,CSS,Sunday 17th of September 2023 12:43:25 AM CDT,"[styleclass=contain][sc=card][sc=icon][/sc][sc=column][sc=bubble]name[/sc][sc=bubble]small detail[/sc][sc=bubble][url=https://pfq.link/@bPV]Link[/url] [url=https://pfq.link/@bPV]Link[/url][/sc][/sc][/sc]
[sc=credits][url=https://pfq.link/@bPV]credits[/url][/sc][/styleclass]

[style]
/* VARIABLES */
@avatar: url('https://placekitten.com/100/100');
@background: #557c93;
@bg-text: rgba(255, 255, 255, 0.5);
@border: #08203e;
@text: #000000;

/* Template Coding */ 
.contain { 
    width: 300px;
    margin: 0 auto;
    .card {
        box-sizing: border-box;
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-evenly;
        align-items: center;
        margin: 0 auto;
        width: 300px;
        height: 135px;
        background: @background;
        border: 5px solid @border;
        border-radius: 10px;
        .icon {
            background: @avatar;
            height: 100px;
            width: 100px;
            border: 2px solid @border;
            border-radius: 10px;
            }
        .column {
            display: flex;
            flex-flow: column nowrap;
            gap: 12px;
            width: 150px;
            .bubble {
                background: @bg-text;
                border: 2px solid @border;
                border-radius: 10px;
                padding: 3px;
                font-variant: small-caps;
                font-size: 10pt;
                text-align: center;
                color: #000;
                a, a:link, a:hover, a:active, a:visited {
                    font-weight: bold;
                    color: inherit;
                    }
                }
            }
        }
    .credits {
        text-align: right;
        margin-top: -17px;
        font-size: 10pt;
        }
    }
[/style]"
cMgPDUqa,Simple,kaedepat,CSS,Sunday 17th of September 2023 12:42:29 AM CDT,"[styleclass=wrapper]

[sc=link][url=https://pfq.link/@bPV][ Art ][/url] [url=https://pfq.link/@bPV][ Trades ][/url] [url=https://pfq.link/@bPV][ Journal ][/url][/sc]
[sc=text]No headers, links, panels, tips, just simple text and images will fit here[/sc]
[centre][img]https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/40e40e13-24ab-4e59-921a-3ed7675831ae/dbp6mb6-52fd984e-5cae-4220-b017-c2b79fa45aac.png/v1/fill/w_200,h_66/_f2u___my_tiny_garden_by_saikornos_dbp6mb6-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9NjYiLCJwYXRoIjoiXC9mXC80MGU0MGUxMy0yNGFiLTRlNTktOTIxYS0zZWQ3Njc1ODMxYWVcL2RicDZtYjYtNTJmZDk4NGUtNWNhZS00MjIwLWIwMTctYzJiNzlmYTQ1YWFjLnBuZyIsIndpZHRoIjoiPD0yMDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.EECrJC7LJt2BX7sUILoqN20EzWJLFc5BzcEjEPNr_v0[/img][/centre]
[sc=link][url=https://pfq.link/@bPV][ credits ][/url] [url=https://www.deviantart.com/saikornos/art/F2u-My-tiny-garden-707427186][ image ][/url][/sc]
[/styleclass]

[style]
.wrapper {
    box-sizing: border-box;
    width: 310px;
    min-height: 50px;
    margin: 0 auto;
    padding: 15px;
    background: #d0fefe;
    font-variant: small-caps;
    > .header {
        //display: inline-block;
        //width: 200px;
        margin: 0 auto;
        padding: 3px;
        border-left: 5px solid #005787;
        background: #FFF;
        color: #005787;
        font-size: 16pt;
        text-align: left;
        font-variant: small-caps;
        }
    > .link {
        display: block;
        text-align: center;
        color: #000;
        > a {
            display: inline-block;
            padding: 2px;
            background: #fff;
            color: #080;
            font-size: 10pt;
            transition: letter-spacing 0.5s ease-in-out;
            &:hover {
                letter-spacing: 2px;
                }
            }
        
        }
    > .text {
        min-height: 10px;
        padding: 2px;
        background: #fff;
        border-left: 3px solid #005787;
        color: #005787;
        text-align: left;
        font-size: 11pt;
        }
    }
[/style]"
DDvntbFm,Peeking,kaedepat,CSS,Sunday 17th of September 2023 12:41:20 AM CDT,"[styleclass=container][
][styleclass=tabbed_interface horizontal][
 ][ul][
  ][li][/li][
  ][li][/li][
  ][li][/li][
  ][li][/li][
  ][li][img]<SMALL IMG HERE>[/img][/li][
 ][/ul][
][sc=tab tab-active][hr][h1]Header 1[/h1][h2]Header 2[/h2][h3]Header 3[/h3]
[url=/user/:L6k][Link][/url] [url=/user/:L6k][Link][/url]

[tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] [tip=Tooltip]Tooltip[/tip] 
[tip=Tooltip][item=GS Ball][/tip] [tip=Tooltip][item=GS Ball][/tip] [tip=Tooltip][item=GS Ball][/tip]
[/sc][
][sc=tab][progress=50/100]50/100[/progress]
[quote=User]Content[/quote]
[display=Display box]Content[/display]
[hide=Hide box]Content[/hide]
[/sc][
][sc=tab][accordion][a-section=Accordion 1]Content 1[/a-section][a-section=Accordion 2]Content 2[/a-section][a-section=Accordion 3]Content 3[/a-section][/accordion]
[stackbox][a-section=Stackbox 1]Content 1[/a-section][a-section=Stackbox 2]Content 2[/a-section][a-section=Stackbox 3]Content 3[/a-section][/stackbox]
[/sc][
][sc=tab][table][tr][th][/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][th]Header[/th][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][tr][th]Header[/th][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][td]Data[/td][/tr][/table][/sc][
][sc=tab][/sc][
][/styleclass][
][sc=credits]code and image by [url=https://pfq.link/@bPV]Aemilia[/url][/sc][/styleclass]

[style]
@background-colour = #30352E;
@border-colour = #6F5E3C;
@tab-active-bg-colour = #455442;
@tab-bg-colour = #889687;
@text-colour = #FFFFFF;
@tip-bg-colour = @tab-bg-colour;
@accent-colour = #D6D5C7;
@credits-link-colour = #B4B198;

.container {
    box-sizing: border-box;
    background: @background-colour;
    border: 1px solid @border-colour;
    border-radius: 5px;
    width: 300px;
    margin: 0 auto;
    padding: 10px;
    text-transform: lowercase;
    color: @text-colour;
    font-size: 10pt;
    a:not(.panel > h3 > a) {
        color: @accent-colour;
        text-decoration: none;
        padding-bottom: 2px;
        }
    a:not(.panel > h3 > a) {
        background:
            linear-gradient(
              to right,
              #B4B198,
              #B4B198
            ),
            linear-gradient(
              to right,
              rgba(255, 0, 0, 1),
              rgba(255, 0, 180, 1),
              rgba(0, 100, 200, 1)
            );
        background-size: 100% 3px, 0 3px;
        background-position: 100% 100%, 0 100%;
        background-repeat: no-repeat;
        transition: background-size 400ms;
        }
        a:not(.panel > h3 > a):hover {
            background-size: 0 3px, 100% 3px;
            }
    
    > .tabbed_interface {
        display: grid;
        grid-template-areas: 
            ""tabbar""
            ""cont"";
        gap: 10px;
        > ul {
            background: transparent;
            grid-area: tabbar;
            display: flex;
            flex-flow: row nowrap;
            justify-content: space-evenly;
            align-items: end;
            > li {
                grid-area: tab;
                display: inline-block;
                flex: initial;
                height: 40px;
                width: 40px;
                background: @tab-bg-colour;
                border-radius: 100%;
                border: 3px solid @border-colour;
                background: @bg;
                box-shadow: 0 0 5px #000000;
                transition: background 0.25s ease-in-out;
                &.tab-active:not(&:last-child), &:hover:not(&:last-child) {
                    background: @tab-active-bg-colour;
                    }
                &:last-child {
                    height: auto;
                    width: auto;
                    background: none;
                    border: none;
                    box-shadow: none;
                    > img {
                        margin-bottom: -10px;
                        }
                    }
                &:hover {
                    cursor: pointer;
                    }
                }
            }
        > .tab {
            grid-area: cont;
            background: @tab-active-bg-colour;
            border: 2px solid @border-colour;
            border-radius: 10px;
            box-shadow: none;
            padding: 5px;
            color: @text-colour;
            hr {
                border: 0;
                height: 0; /* Firefox... */
                box-shadow: 0 0 8px 1px black;
                }
            hr:after {  /* Not really supposed to work, but does */
                content: ""\00a0"";  /* Prevent margin collapse */
                }
            h1, h2, h3 {
                text-shadow: none;
                color: @accent-colour;
                }
            table {
                margin: 0 auto;
                text-align: center;
                border-collapse: separate;
                border-spacing: 5px;
                border: none;
                display: flex;
                color: @text-colour;
                width: 260px;
                overflow-x: auto;
                tr {
                    th {
                        width: fit-content;
                        padding: 5px;
                        background: @border-colour;
                        color: #ffffff;
                        border: none;
                        }
                    td {
                        background: @bg;
                        color: @text-colour;
                        border: 1px solid @border-colour;
                        padding: 5px;
                        }
                    }
                }
            span.bbcode_tooltip {
                display: inline-block;
                background: @tip-bg-colour;
                border: 2px solid @border-colour;
                border-radius: 5px;
                margin-top: 5px;
                padding: 1%;
                padding-bottom: 0.5%;
                color: black;
                transition: background 0.5s ease-in-out;
                &:hover {
                    background: darken(@tip-bg-colour, 8%);
                    }
                }
            .tooltip_content {
                background: @tip-bg-colour;
                color: black;
                border-radius: 5px;
                border: 2px solid @border-colour;
                }
            .expbar {
                padding: 5px;
                background: transparent; 
                color: @text-colour;
                border: 2px solid @border-colour;
                border-radius: 5px; 
                div {
                    background: darken(@tab-active-bg-colour, 5%); 
                    border: none;
                    border-right: 1px solid @border-colour;
                    border-radius: 0;
                    }
                span {
                    color: @text-colour;
                    }
                }
            .panel {
                background: none;
                box-shadow: none;
                border: none;
                border: 2px solid @background-colour;
                width: 95%;
                z-index: 1;
                position: relative; /* new */;
                &:after {
                    content: """";
                    position: absolute;
                    display: block;
                    background: inherit;
                    border-radius: inherit;
                    border: 2px solid @border-colour;
                    left: 5px;
                    bottom: -10px;
                    width: 100%;
                    height: 102%;
                    padding-bottom: 2px;
                    z-index: -1;
                    }
                
                > h3 {
                    background: none;
                    border: none;
                    padding-left: 10px;
                    > a {
                        color: inherit;
                        }
                    }
                >div {
                    padding-left: 10px;
                    padding-bottom: 5px;
                    }
                }
            }
        }
    .credits {
        font-size: 10pt;
        text-align: right;
        a, a:link, a:hover, a:active, a:visited {
            color: @credits-link-colour;
            font-weight: bold;
            text-decoration-style: underline;
            }
        }
    }
[/style]"
8DA8tZYQ,HoverSplit,kaedepat,CSS,Sunday 17th of September 2023 12:39:38 AM CDT,"[styleclass=contain][
][styleclass=container][
 ][sc=card][
  ][ul][
   ][li]Info one[/li][
   ][li]Info two[/li][
   ][li]Info three[/li][
  ][/ul][
 ][/sc][
 ][sc=upper][
  ][sc=icon][/sc][
  ][sc=span]Name[/sc][
 ][/sc][
 ][sc=lower][
  ][ul][
   ][li][url=https://pfq.link/@bPV][img]https://img.icons8.com/material-sharp/25/000000/transaction.png[/img][/url][/li][
   ][li][url=https://pfq.link/@bPV][img]https://img.icons8.com/external-tulpahn-basic-outline-tulpahn/25/000000/external-art-back-to-school-tulpahn-basic-outline-tulpahn.png[/img][/url][/li][
   ][li][url=https://pfq.link/@bPV][img]https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/64/000000/external-notebook-interface-kiranshastry-lineal-kiranshastry.png[/img][/url][/li][
   ][li][url=https://pfq.link/@bPV][img]https://img.icons8.com/windows/64/000000/friends.png[/img][/url][/li][
  ][/ul][
 ][/sc][
][/styleclass][
][sc=credits][url=https://pfq.link/@bPV]credits[/url][/sc][/styleclass]


[style]
.contain {
    width: 310px;
    max-height: 1000px;
    min-height: 500px;
    background: red;
    margin: 0;
    padding: 0;
    position:relative;
    box-sizing: border-box;
    font-family: 'Raleway', sans-serif;
    background: linear-gradient(45deg, hsla(296, 100%, 6%, 1) 0%, hsla(5, 90%, 24%, 1) 100%);
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
      position: absolute;
      background: snow;
      width: 250px;
      height: 300px;
      border-radius: 60px;
      display: flex;
      flex-direction: column;
      align-items: center;
}
.card {
  position: relative;
  display: flex;
  width: 0%;
  height: 0%;
  opacity: 0;
  align-items: center;
  justify-content: center;
  transform: translateY(12%);
  transition: all 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
.card ul {
  color: #4D5050;
  list-style: none;
  width: 250px;
  height: 43%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  font-size: 20px;
}
.card ul li {
  display: flex;
  justify-content: space-between;
}
.upper {
  position: absolute;
  background: linear-gradient(90deg, hsla(211, 66%, 87%, 1) 0%, hsla(348, 67%, 88%, 1) 50%, hsla(272, 26%, 72%, 1) 100%);
  box-shadow: inset 50px 50px 500px #FFFFFF30;
  border-top-left-radius: 60px;
  border-top-right-radius: 60px;
  width: 98%; 
  height: 75%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 10px;
  top: 3px;
  transition: all 0.6s;
}

.upper .icon {
  position: relative;
  background: url('https://placekitten.com/200/200');
  background-size: contain;
  background-position: center;
  color: #484848;
  width: 130px;
  height: 130px;
  font-size: 90px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.5s;
}

.upper .span {
  position: relative;
  color: black;
  font-size: 27px; 
  font-weight: bold;
  letter-spacing: 3px;
  transition: all 0.5s;
}

.upper .span::first-letter {
  color: #f962a0;
  font-family: sans-serif;
  font-size: 30px;
  font-weight: 400;
}

.lower {
  position: absolute;
  background: linear-gradient(90deg, hsla(211, 66%, 87%, 1) 0%, hsla(348, 67%, 88%, 1) 50%, hsla(272, 26%, 72%, 1) 100%);
  width: 98%;
  height: 25%;
  border-bottom-left-radius: 60px;
  border-bottom-right-radius: 60px;
  bottom: 3px;
  box-shadow: inset 50px 50px 400px #FFFFFF23;
  transition: all 500ms;
  overflow: hidden;
}

.lower ul {
  position: relative;
  list-style: none;
  margin-left: -25px;
  width: 90%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  
}

.lower ul li {
  color: snow;
  img { height: 30px; /*filter: invert(1);*/}
}

/* hover effects */

.container:hover .card {
  width: 100%;
  height: 100%;
  opacity: 1;
}

.container:hover .upper {
  transform: translateY(-38%);
  border-radius: 60px;
  height: 65%;
  width: 110%;
}

.container:hover .lower {
  transform: translateY(30%);
  border-radius: 60px;
  height: 20%;
  width: 110%;
  a, a:link, a:hover, a:active, a:visited { color: white; }
}

.credits {
    position: absolute;
    left: 5px;
    bottom: 5px;
    a, a:link, a:hover, a:active, a:visited { color: white; transition: all 0.25s ease-in-out; }
    a:hover { letter-spacing: 2px; }
}

/* latin */
@font-face {
  font-family: 'Raleway';
  font-style: normal;
  font-weight: 250;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/raleway/v28/1Ptug8zYS_SKggPNyC0ITw.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
[/style]"
Kn3EES8w,News Sep16 23,Newscaster_Ned,Email,Saturday 16th of September 2023 11:54:41 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎i‎t‎'‎s‎ ‎J‎e‎w‎s‎b‎l‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎y‎o‎u‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎!‎

A‎I‎ ‎T‎h‎r‎o‎w‎d‎o‎w‎n‎

W‎r‎i‎t‎e‎r‎s‎ ‎S‎u‎e‎ ‎M‎e‎t‎a‎,‎ ‎O‎p‎e‎n‎A‎I‎

A‎I‎ ‎T‎h‎r‎o‎w‎d‎o‎w‎n‎

W‎r‎i‎t‎e‎r‎s‎ ‎S‎u‎e‎ ‎M‎e‎t‎a‎,‎ ‎O‎p‎e‎n‎A‎I‎

C‎l‎a‎s‎s‎-‎A‎c‎t‎i‎o‎n‎ ‎C‎o‎p‎y‎r‎i‎g‎h‎t‎ ‎C‎l‎a‎i‎m‎ ‎o‎n‎ ‎T‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎B‎o‎o‎k‎s‎
M‎i‎c‎h‎a‎e‎l‎ ‎C‎h‎a‎b‎o‎n‎ ‎a‎t‎t‎e‎n‎d‎s‎ ‎t‎h‎e‎ ‎p‎r‎e‎m‎i‎e‎r‎e‎ ‎o‎f‎ ‎C‎B‎S‎ ‎A‎l‎l‎ ‎A‎c‎c‎e‎s‎s‎'‎ ‎""‎S‎t‎a‎r‎ ‎T‎r‎e‎k‎:‎ ‎P‎i‎c‎a‎r‎d‎""‎ ‎a‎t‎ ‎A‎r‎c‎L‎i‎g‎h‎t‎ ‎C‎i‎n‎e‎r‎a‎m‎a‎ ‎D‎o‎m‎e‎ ‎o‎n‎ ‎J‎a‎n‎u‎a‎r‎y‎ ‎1‎3‎,‎ ‎2‎0‎2‎0‎ ‎i‎n‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎,‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎R‎i‎c‎h‎ ‎F‎u‎r‎y‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
A‎ ‎g‎r‎o‎u‎p‎ ‎o‎f‎ ‎w‎r‎i‎t‎e‎r‎s‎ ‎h‎e‎a‎d‎e‎d‎ ‎b‎y‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎n‎o‎v‎e‎l‎i‎s‎t‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎C‎h‎a‎b‎o‎n‎ ‎a‎n‎d‎ ‎T‎o‎n‎y‎ ‎A‎w‎a‎r‎d‎-‎w‎i‎n‎n‎i‎n‎g‎ ‎p‎l‎a‎y‎w‎r‎i‎g‎h‎t‎ ‎D‎a‎v‎i‎d‎ ‎H‎e‎n‎r‎y‎ ‎H‎w‎a‎n‎g‎ ‎a‎r‎e‎ ‎s‎u‎i‎n‎g‎ ‎F‎a‎c‎e‎b‎o‎o‎k‎ ‎p‎a‎r‎e‎n‎t‎ ‎M‎e‎t‎a‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎C‎h‎a‎t‎G‎P‎T‎ ‎m‎a‎k‎e‎r‎ ‎O‎p‎e‎n‎A‎I‎,‎ ‎a‎l‎l‎e‎g‎i‎n‎g‎ ‎i‎n‎ ‎t‎w‎o‎ ‎s‎e‎p‎a‎r‎a‎t‎e‎ ‎s‎u‎i‎t‎s‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎i‎r‎ ‎a‎r‎t‎i‎f‎i‎c‎i‎a‎l‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎ ‎p‎l‎a‎t‎f‎o‎r‎m‎s‎ ‎e‎n‎g‎a‎g‎e‎d‎ ‎i‎n‎ ‎c‎o‎p‎y‎r‎i‎g‎h‎t‎ ‎v‎i‎o‎l‎a‎t‎i‎o‎n‎s‎ ‎w‎i‎t‎h‎ ‎t‎e‎n‎s‎ ‎o‎f‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎b‎o‎o‎k‎s‎.‎

T‎e‎x‎a‎s‎ ‎A‎t‎t‎o‎r‎n‎e‎y‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎K‎e‎n‎n‎e‎t‎h‎ ‎P‎a‎x‎t‎o‎n‎ ‎A‎c‎q‎u‎i‎t‎t‎e‎d‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎T‎r‎i‎a‎l‎
T‎e‎x‎a‎s‎ ‎A‎t‎t‎o‎r‎n‎e‎y‎ ‎G‎e‎n‎e‎r‎a‎l‎ ‎K‎e‎n‎n‎e‎t‎h‎ ‎P‎a‎x‎t‎o‎n‎ ‎A‎c‎q‎u‎i‎t‎t‎e‎d‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎I‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎ ‎T‎r‎i‎a‎l‎
2‎,‎0‎1‎9‎
P‎O‎L‎I‎T‎I‎C‎O‎'‎s‎ ‎P‎r‎z‎y‎b‎y‎l‎a‎:‎ ‎G‎O‎P‎'‎s‎ ‎O‎n‎l‎y‎ ‎P‎r‎o‎o‎f‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎o‎e‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎'‎s‎ ‎O‎w‎n‎ ‎W‎o‎r‎d‎s‎
P‎O‎L‎I‎T‎I‎C‎O‎'‎s‎ ‎P‎r‎z‎y‎b‎y‎l‎a‎:‎ ‎G‎O‎P‎'‎s‎ ‎O‎n‎l‎y‎ ‎P‎r‎o‎o‎f‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎J‎o‎e‎ ‎I‎s‎ ‎H‎u‎n‎t‎e‎r‎'‎s‎ ‎O‎w‎n‎ ‎W‎o‎r‎d‎s‎
9‎4‎7‎
W‎o‎m‎a‎n‎ ‎S‎u‎e‎s‎ ‎D‎o‎c‎t‎o‎r‎s‎ ‎t‎h‎a‎t‎ ‎P‎e‎r‎f‎o‎r‎m‎e‎d‎ ‎D‎o‎u‎b‎l‎e‎ ‎M‎a‎s‎t‎e‎c‎t‎o‎m‎y‎
W‎o‎m‎a‎n‎ ‎S‎u‎e‎s‎ ‎D‎o‎c‎t‎o‎r‎s‎ ‎t‎h‎a‎t‎ ‎P‎e‎r‎f‎o‎r‎m‎e‎d‎ ‎D‎o‎u‎b‎l‎e‎ ‎M‎a‎s‎t‎e‎c‎t‎o‎m‎y‎
8‎7‎7‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎A‎l‎l‎-‎M‎e‎m‎b‎e‎r‎s‎ ‎C‎l‎a‎s‎s‎i‎f‎i‎e‎d‎ ‎B‎r‎i‎e‎f‎i‎n‎g‎ ‎o‎n‎ ‎B‎o‎r‎d‎e‎r‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎A‎l‎l‎-‎M‎e‎m‎b‎e‎r‎s‎ ‎C‎l‎a‎s‎s‎i‎f‎i‎e‎d‎ ‎B‎r‎i‎e‎f‎i‎n‎g‎ ‎o‎n‎ ‎B‎o‎r‎d‎e‎r‎
2‎,‎8‎1‎8‎
3‎ ‎M‎o‎r‎e‎ ‎P‎r‎o‎-‎L‎i‎f‎e‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎F‎o‎u‎n‎d‎ ‎G‎u‎i‎l‎t‎y‎ ‎o‎f‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎F‎A‎C‎E‎ ‎A‎c‎t‎
3‎ ‎M‎o‎r‎e‎ ‎P‎r‎o‎-‎L‎i‎f‎e‎ ‎A‎c‎t‎i‎v‎i‎s‎t‎s‎ ‎F‎o‎u‎n‎d‎ ‎G‎u‎i‎l‎t‎y‎ ‎o‎f‎ ‎V‎i‎o‎l‎a‎t‎i‎n‎g‎ ‎F‎A‎C‎E‎ ‎A‎c‎t‎
3‎,‎4‎8‎5‎
M‎i‎c‎h‎a‎e‎l‎ ‎C‎h‎a‎b‎o‎n‎,‎ ‎D‎a‎v‎i‎d‎ ‎H‎e‎n‎r‎y‎ ‎H‎w‎a‎n‎g‎ ‎L‎a‎t‎e‎s‎t‎ ‎W‎r‎i‎t‎e‎r‎s‎ ‎S‎u‎i‎n‎g‎ ‎M‎e‎t‎a‎,‎ ‎O‎p‎e‎n‎A‎I‎
M‎i‎c‎h‎a‎e‎l‎ ‎C‎h‎a‎b‎o‎n‎,‎ ‎D‎a‎v‎i‎d‎ ‎H‎e‎n‎r‎y‎ ‎H‎w‎a‎n‎g‎ ‎L‎a‎t‎e‎s‎t‎ ‎W‎r‎i‎t‎e‎r‎s‎ ‎S‎u‎i‎n‎g‎ ‎M‎e‎t‎a‎,‎ ‎O‎p‎e‎n‎A‎I‎
3‎5‎2‎
T‎r‎u‎m‎p‎ ‎S‎e‎e‎k‎s‎ ‎t‎o‎ ‎U‎n‎i‎t‎e‎ ‎w‎i‎t‎h‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎ ‎A‎p‎p‎a‎l‎l‎e‎d‎ ‎b‎y‎ ‎'‎T‎e‎r‎r‎i‎b‎l‎e‎'‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎
T‎r‎u‎m‎p‎ ‎S‎e‎e‎k‎s‎ ‎t‎o‎ ‎U‎n‎i‎t‎e‎ ‎w‎i‎t‎h‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎ ‎A‎p‎p‎a‎l‎l‎e‎d‎ ‎b‎y‎ ‎'‎T‎e‎r‎r‎i‎b‎l‎e‎'‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎
5‎,‎2‎9‎1‎
R‎u‎s‎s‎e‎l‎l‎ ‎B‎r‎a‎n‎d‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎R‎a‎p‎e‎ ‎a‎n‎d‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎,‎ ‎A‎c‎t‎o‎r‎ ‎D‎e‎n‎i‎e‎s‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎
R‎u‎s‎s‎e‎l‎l‎ ‎B‎r‎a‎n‎d‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎R‎a‎p‎e‎ ‎a‎n‎d‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎,‎ ‎A‎c‎t‎o‎r‎ ‎D‎e‎n‎i‎e‎s‎ ‎A‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎
6‎5‎0‎
T‎r‎u‎m‎p‎ ‎D‎o‎m‎i‎n‎a‎t‎e‎s‎ ‎F‎a‎m‎i‎l‎y‎ ‎R‎e‎s‎e‎a‎r‎c‎h‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎S‎u‎m‎m‎i‎t‎’‎s‎ ‎S‎t‎r‎a‎w‎ ‎P‎o‎l‎l‎ ‎a‎t‎ ‎6‎3‎.‎9‎%‎ ‎
T‎r‎u‎m‎p‎ ‎D‎o‎m‎i‎n‎a‎t‎e‎s‎ ‎F‎a‎m‎i‎l‎y‎ ‎R‎e‎s‎e‎a‎r‎c‎h‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎S‎u‎m‎m‎i‎t‎’‎s‎ ‎S‎t‎r‎a‎w‎ ‎P‎o‎l‎l‎ ‎a‎t‎ ‎6‎3‎.‎9‎%‎ ‎
6‎1‎
B‎i‎d‎e‎n‎ ‎L‎i‎n‎k‎s‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎,‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎T‎h‎o‎s‎e‎ ‎‘‎W‎i‎t‎h‎o‎u‎t‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎ ‎D‎i‎p‎l‎o‎m‎a‎s‎
B‎i‎d‎e‎n‎ ‎L‎i‎n‎k‎s‎ ‎H‎i‎s‎p‎a‎n‎i‎c‎,‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎ ‎t‎o‎ ‎T‎h‎o‎s‎e‎ ‎‘‎W‎i‎t‎h‎o‎u‎t‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎ ‎D‎i‎p‎l‎o‎m‎a‎s‎

C‎a‎n‎a‎d‎a‎:‎ ‎V‎i‎d‎e‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎o‎f‎ ‎T‎e‎e‎n‎a‎g‎e‎ ‎S‎i‎m‎i‎a‎n‎s‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎M‎o‎n‎t‎r‎e‎a‎l‎ ‎S‎c‎h‎o‎o‎l‎ ‎B‎o‎a‎r‎d‎ ‎S‎t‎u‎d‎e‎n‎t‎.‎

H‎e‎'‎l‎l‎ ‎b‎e‎ ‎o‎k‎a‎y‎,‎ ‎e‎h‎?‎


S‎p‎e‎e‎d‎i‎n‎g‎ ‎S‎i‎l‎v‎e‎r‎b‎a‎c‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎P‎l‎o‎w‎i‎n‎g‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎T‎r‎e‎e‎,‎ ‎E‎j‎e‎c‎t‎i‎n‎g‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎a‎n‎d‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎H‎e‎r‎.‎


M‎o‎n‎k‎e‎y‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎R‎e‎s‎t‎r‎a‎i‎n‎i‎n‎g‎ ‎O‎r‎d‎e‎r‎ ‎a‎n‎d‎ ‎B‎e‎a‎t‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎.‎


B‎r‎o‎w‎n‎ ‎P‎i‎e‎c‎e‎ ‎o‎f‎ ‎S‎h‎i‎t‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎ ‎R‎a‎p‎e‎ ‎i‎n‎ ‎C‎h‎a‎p‎e‎l‎ ‎H‎i‎l‎l‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎ ‎O‎o‎g‎a‎ ‎b‎o‎o‎g‎a‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎9‎°‎
/‎7‎0‎°‎
3‎1‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎6‎ ‎|‎ ‎D‎a‎y‎
8‎9‎°‎
3‎1‎%‎
N‎N‎E‎
1‎0‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎t‎o‎ ‎m‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎w‎i‎t‎h‎ ‎i‎s‎o‎l‎a‎t‎e‎d‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎8‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎3‎0‎%‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
6‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎3‎4‎ ‎p‎m‎
S‎a‎t‎ ‎1‎6‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎0‎°‎
2‎0‎%‎
N‎N‎W‎
9‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎7‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎N‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎3‎5‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎3‎4‎ ‎p‎m‎
S‎u‎n‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎6‎8‎°‎
1‎2‎%‎
N‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎5‎°‎
/‎6‎9‎°‎
5‎%‎
E‎S‎E‎ ‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎1‎°‎
6‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎1‎°‎
2‎4‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎4‎°‎
/‎7‎1‎°‎
1‎8‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎4‎°‎
/‎7‎0‎°‎
1‎3‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎5‎°‎
/‎7‎0‎°‎
7‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎5‎°‎
/‎7‎1‎°‎
1‎9‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎1‎°‎
2‎3‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎0‎°‎
2‎4‎%‎
E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎0‎°‎
1‎4‎%‎
E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
9‎3‎°‎
/‎7‎0‎°‎
1‎4‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
S‎u‎n‎n‎y‎
9‎4‎°‎
/‎7‎0‎°‎
1‎5‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
S‎u‎n‎n‎y‎
9‎3‎°‎
/‎6‎9‎°‎
1‎2‎%‎
S‎E‎ ‎7‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎F‎a‎l‎l‎.‎ ‎🍁

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎o‎m‎o‎s‎e‎x‎u‎a‎l‎i‎t‎y‎
H‎o‎m‎o‎s‎e‎x‎u‎a‎l‎i‎t‎y‎ ‎o‎r‎ ‎H‎o‎m‎o‎p‎h‎i‎l‎i‎a‎,‎ ‎i‎s‎ ‎a‎ ‎p‎r‎o‎g‎r‎e‎s‎s‎i‎v‎e‎ ‎m‎e‎n‎t‎a‎l‎ ‎i‎l‎l‎n‎e‎s‎s‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎s‎e‎e‎n‎ ‎a‎m‎o‎n‎g‎ ‎f‎u‎r‎r‎i‎e‎s‎,‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎t‎h‎e‎ ‎s‎u‎f‎f‎e‎r‎e‎r‎ ‎i‎s‎ ‎o‎v‎e‎r‎c‎o‎m‎e‎ ‎b‎y‎ ‎s‎e‎x‎u‎a‎l‎ ‎f‎e‎e‎l‎i‎n‎g‎s‎ ‎f‎o‎r‎ ‎o‎t‎h‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎s‎e‎x‎.‎ ‎T‎h‎i‎s‎ ‎n‎e‎u‎r‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎d‎i‎s‎o‎r‎d‎e‎r‎ ‎i‎s‎ ‎m‎o‎s‎t‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎c‎a‎u‎s‎e‎d‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎ ‎a‎f‎f‎l‎i‎c‎t‎e‎d‎ ‎s‎u‎b‎j‎e‎c‎t‎ ‎h‎a‎s‎ ‎s‎u‎c‎h‎ ‎d‎e‎e‎p‎ ‎r‎e‎s‎e‎n‎t‎m‎e‎n‎t‎ ‎f‎o‎r‎ ‎a‎ ‎d‎o‎m‎i‎n‎a‎t‎i‎n‎g‎ ‎p‎a‎r‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎o‎p‎p‎o‎s‎i‎t‎e‎ ‎s‎e‎x‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎a‎t‎ ‎s‎e‎x‎ ‎b‎e‎c‎o‎m‎e‎ ‎r‎e‎p‎u‎l‎s‎i‎v‎e‎ ‎b‎y‎ ‎a‎s‎s‎o‎c‎i‎a‎t‎i‎o‎n‎.‎ ‎O‎f‎t‎e‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎s‎u‎f‎f‎e‎r‎e‎r‎ ‎c‎o‎m‎e‎s‎ ‎o‎f‎ ‎a‎g‎e‎,‎ ‎t‎h‎e‎ ‎l‎e‎v‎e‎l‎ ‎o‎f‎ ‎f‎a‎g‎g‎o‎t‎r‎y‎ ‎b‎e‎g‎i‎n‎s‎ ‎t‎o‎ ‎s‎l‎o‎p‎e‎ ‎u‎p‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎ ‎o‎f‎ ‎a‎ ‎q‎u‎a‎d‎r‎a‎t‎i‎c‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎,‎ ‎r‎a‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎t‎y‎p‎i‎c‎a‎l‎ ‎l‎i‎n‎e‎a‎r‎ ‎m‎o‎d‎e‎l‎ ‎p‎r‎e‎d‎i‎c‎t‎e‎d‎ ‎b‎y‎ ‎r‎e‎s‎e‎a‎r‎c‎h‎e‎r‎s‎ ‎a‎n‎d‎ ‎o‎t‎h‎e‎r‎ ‎f‎a‎g‎g‎o‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎l‎i‎k‎e‎.‎

(‎(‎ ‎H‎I‎V‎ ‎P‎r‎i‎d‎e‎ ‎M‎o‎n‎t‎h‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎A‎r‎e‎n‎a‎ ‎o‎f‎ ‎N‎î‎m‎e‎s‎ ‎i‎s‎ ‎a‎ ‎R‎o‎m‎a‎n‎ ‎a‎m‎p‎h‎i‎t‎h‎e‎a‎t‎r‎e‎ ‎s‎i‎t‎u‎a‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎F‎r‎e‎n‎c‎h‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎N‎î‎m‎e‎s‎.‎ ‎B‎u‎i‎l‎t‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎0‎0‎ ‎C‎E‎,‎ ‎s‎h‎o‎r‎t‎l‎y‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎C‎o‎l‎o‎s‎s‎e‎u‎m‎ ‎i‎n‎ ‎R‎o‎m‎e‎,‎ ‎i‎t‎ ‎i‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎b‎e‎s‎t‎-‎p‎r‎e‎s‎e‎r‎v‎e‎d‎ ‎R‎o‎m‎a‎n‎ ‎a‎m‎p‎h‎i‎t‎h‎e‎a‎t‎r‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎a‎m‎o‎n‎g‎ ‎t‎h‎e‎ ‎t‎w‎e‎n‎t‎y‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎R‎o‎m‎a‎n‎ ‎a‎m‎p‎h‎i‎t‎h‎e‎a‎t‎r‎e‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎4‎0‎0‎ ‎i‎n‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎1‎3‎3‎ ‎m‎e‎t‎r‎e‎s‎ ‎l‎o‎n‎g‎ ‎(‎1‎4‎5‎ ‎y‎d‎)‎ ‎a‎n‎d‎ ‎1‎0‎1‎ ‎m‎e‎t‎r‎e‎s‎ ‎w‎i‎d‎e‎ ‎(‎1‎1‎0‎ ‎y‎d‎)‎,‎ ‎w‎i‎t‎h‎ ‎a‎n‎ ‎a‎r‎e‎n‎a‎ ‎m‎e‎a‎s‎u‎r‎i‎n‎g‎ ‎6‎8‎ ‎m‎e‎t‎r‎e‎s‎ ‎b‎y‎ ‎3‎8‎ ‎m‎e‎t‎r‎e‎s‎ ‎(‎7‎4‎ ‎y‎d‎ ‎b‎y‎ ‎4‎2‎ ‎y‎d‎)‎.‎ ‎T‎h‎e‎ ‎o‎u‎t‎e‎r‎ ‎f‎a‎c‎a‎d‎e‎ ‎i‎s‎ ‎2‎1‎ ‎m‎e‎t‎r‎e‎s‎ ‎h‎i‎g‎h‎ ‎(‎6‎9‎ ‎f‎t‎)‎ ‎w‎i‎t‎h‎ ‎t‎w‎o‎ ‎s‎t‎o‎r‎i‎e‎s‎ ‎o‎f‎ ‎6‎0‎ ‎a‎r‎c‎a‎d‎e‎s‎.‎ ‎T‎o‎d‎a‎y‎,‎ ‎t‎h‎e‎ ‎a‎m‎p‎h‎i‎t‎h‎e‎a‎t‎r‎e‎ ‎i‎s‎ ‎t‎h‎e‎ ‎s‎i‎t‎e‎ ‎o‎f‎ ‎t‎w‎o‎ ‎a‎n‎n‎u‎a‎l‎ ‎b‎u‎l‎l‎f‎i‎g‎h‎t‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎F‎e‎r‎i‎a‎ ‎d‎e‎ ‎N‎î‎m‎e‎s‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎i‎s‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎o‎t‎h‎e‎r‎ ‎p‎u‎b‎l‎i‎c‎ ‎e‎v‎e‎n‎t‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎h‎i‎s‎t‎o‎r‎i‎c‎a‎l‎ ‎r‎e‎e‎n‎a‎c‎t‎m‎e‎n‎t‎s‎ ‎a‎n‎d‎ ‎c‎o‎n‎c‎e‎r‎t‎s‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎t‎h‎e‎ ‎e‎x‎t‎e‎r‎i‎o‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎a‎m‎p‎h‎i‎t‎h‎e‎a‎t‎r‎e‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎2‎0‎1‎9‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎K‎r‎z‎y‎s‎z‎t‎o‎f‎ ‎G‎o‎l‎i‎k‎;‎ ‎e‎d‎i‎t‎e‎d‎ ‎b‎y‎ ‎J‎a‎n‎k‎e‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎r‎e‎f‎i‎l‎l‎ ‎y‎o‎u‎r‎ ‎W‎e‎n‎d‎y‎'‎s‎ ‎d‎r‎i‎n‎k‎ ‎w‎i‎t‎h‎ ‎c‎e‎m‎e‎n‎t‎.‎ ‎N‎i‎g‎g‎e‎r‎!‎"
GjskG8N9,Untitled,smj007,Python,Saturday 16th of September 2023 10:55:05 PM CDT,"class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
    
        res = """"
        for i in range(len(strs[0])):
            for s in strs:
                if i==len(s) or s[i]!= strs[0][i]:
                    return res
            res += strs[0][i]

        return res"
mdFtHkXu,Untitled,cepxuozab,C++,Saturday 16th of September 2023 10:39:45 PM CDT,"{
    ""base_requests"": [
        {
            ""is_roundtrip"": true,
            ""name"": ""289"",
            ""stops"": [
                ""Zagorye"",
                ""Lipetskaya ulitsa 46"",
                ""Lipetskaya ulitsa 40"",
                ""Lipetskaya ulitsa 40"",
                ""Lipetskaya ulitsa 46"",
                ""Moskvorechye"",
                ""Zagorye""
            ],
            ""type"": ""Bus""
        },
        {
            ""latitude"": 55.5799,
            ""longitude"": 37.6837,
            ""name"": ""Zagorye"",
            ""road_distances"": {
                ""Lipetskaya ulitsa 46"": 230
            },
            ""type"": ""Stop""
        },
        {
            ""latitude"": 55.5814,
            ""longitude"": 37.6822,
            ""name"": ""Lipetskaya ulitsa 46"",
            ""road_distances"": {
                ""Lipetskaya ulitsa 40"": 390,
                ""Moskvorechye"": 12400
            },
            ""type"": ""Stop""
        },
        {
            ""latitude"": 55.5845,
            ""longitude"": 37.6791,
            ""name"": ""Lipetskaya ulitsa 40"",
            ""road_distances"": {
                ""Lipetskaya ulitsa 40"": 1090,
                ""Lipetskaya ulitsa 46"": 380
            },
            ""type"": ""Stop""
        },
        {
            ""latitude"": 55.6384,
            ""longitude"": 37.6384,
            ""name"": ""Moskvorechye"",
            ""road_distances"": {
                ""Zagorye"": 10000
            },
            ""type"": ""Stop""
        }
    ],
    ""render_settings"": {
        ""color_palette"": [
            [
                175,
                207,
                116
            ],
            [
                45,
                39,
                129
            ],
            ""plum"",
            ""cyan"",
            [
                245,
                188,
                149
            ],
            [
                108,
                157,
                153
            ],
            ""thistle"",
            [
                41,
                234,
                105
            ],
            ""thistle"",
            [
                22,
                81,
                47,
                0.69503
            ],
            ""tomato"",
            ""sienna"",
            [
                99,
                20,
                217,
                0.136091
            ],
            ""peru"",
            ""coral"",
            ""tomato"",
            ""peru"",
            [
                12,
                204,
                124
            ],
            ""coral"",
            [
                104,
                95,
                15
            ],
            ""peru"",
            ""yellow"",
            ""orchid"",
            [
                46,
                224,
                99,
                0.388174
            ],
            [
                216,
                124,
                48
            ],
            [
                140,
                78,
                190,
                0.954432
            ],
            ""magenta"",
            ""magenta"",
            ""cornsilk"",
            ""pink"",
            [
                139,
                247,
                59
            ],
            ""purple"",
            ""tan"",
            ""tan"",
            ""gray"",
            ""violet""
        ],
        ""height"": 19505.4,
        ""line_width"": 83890,
        ""padding"": 6228.64,
        ""stop_label_font_size"": 19986,
        ""stop_label_offset"": [
            29970,
            -57296.3
        ],
        ""stop_radius"": 58469.7,
        ""underlayer_color"": [
            119,
            91,
            185
        ],
        ""underlayer_width"": 22467.5,
        ""width"": 31681.8
    },
    ""routing_settings"": {
        ""bus_velocity"": 30,
        ""bus_wait_time"": 2
    },
    ""stat_requests"": [
        {
            ""id"": 2047983321,
            ""name"": ""289"",
            ""type"": ""Bus""
        },
        {
            ""from"": ""Zagorye"",
            ""id"": 1687562514,
            ""to"": ""Moskvorechye"",
            ""type"": ""Route""
        },
        {
            ""from"": ""Moskvorechye"",
            ""id"": 1585122571,
            ""to"": ""Zagorye"",
            ""type"": ""Route""
        },
        {
            ""from"": ""Lipetskaya ulitsa 40"",
            ""id"": 879840356,
            ""to"": ""Lipetskaya ulitsa 40"",
            ""type"": ""Route""
        },
        {
            ""id"": 1846768885,
            ""type"": ""Map""
        }
    ]
}"
A9VL0Hfd,ESP-12F Relay 30A 8 Channel,hwthinker,Arduino,Saturday 16th of September 2023 10:09:53 PM CDT,"//*****************************************
// Program check Modul Relay 8ch ESP-12F
// v1.0 september 17,2023 by HwThinker
// ****************************************

// ---Komunikasi Modul dengan serial programmer ----
// 5v-> x (not connected)
// tx-> rx(kabel putih)
// rx-> tx(kabel hijau)
// Gnd-> GND (kabel hitam)
// GND-> x (not connected)
// GPIO0->x (no connected)

// --- Prosedur upload -----
// 1. Tekan dan Tahan tombol Key (GPIO0)
// 2. Tekan dan lepas tombol reset
// 3. Lepas tombol Key
// 3. upload program sederhana(bisa blink lED arduino)
// 4. tunggu upload selesai
// 5. Lepas jumper penghubung GND dan IO0
// 6. reset (wajib supaya program baru running


#include <Arduino.h>

// hubungan koneksi antara PIN ESP-12F dengan  74HC595
const int latchPin = 12;   // Pin ST_CP (RCLK/12)
const int clockPin = 13;  // Pin SH_CP (SRCLK/11)
const int dataPin = 14;   // Pin DS (SER/14)
const int OE = 5;   // Pin OE (SER/13)

//untuk pin SRCLR(10) pada 74HC595 tidak sudah dikawatkan dengan VCC secara default.

const int LED_internal=2; //led internal pada modul ESP-12F
const int key = 0;   // Tombol  yang tersambung ke GPIO0

void setup() {
  // Atur pin sebagai OUTPUT
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
  pinMode(OE, OUTPUT);
  pinMode(LED_internal, OUTPUT);
  digitalWrite(OE,LOW); //aktif LOW
}

void loop() {
  // Array untuk menyimpan pola LED
  byte rlyPola[] = {
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000
  };

  // Loop untuk menghidupkan Relay satu per satu
  for (int i = 0; i < 8; i++) {
    // Kirim pola ke 74HC595
    digitalWrite(latchPin, LOW);
    shiftOut(dataPin, clockPin, MSBFIRST, rlyPola[i]);
    digitalWrite(latchPin, HIGH);
    //blinky LED internal
    digitalWrite(LED_internal, !digitalRead(LED_internal));
    // Tunggu sebentar sebelum menghidupkan Relay berikutnya
    delay(800);
  }

  // Matikan semua LED
  digitalWrite(latchPin, LOW);
  shiftOut(dataPin, clockPin, MSBFIRST, B00000000);
  digitalWrite(latchPin, HIGH);

  // Tunggu sebentar sebelum mengulangi loop
  delay(1000);
}
"
4WayMRrA,Arduino Motors,Hatkat,C++,Saturday 16th of September 2023 10:06:45 PM CDT,"#include <Stepper.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>

int rpm = 2048;
LiquidCrystal_I2C lcd(0x27, 16, 2);
Stepper motor(rpm, 10, 12, 11, 13);
int pinLedR = 3;
int pinLedA = 2;
int pinSound = 4;
int lecturaBoton = A0;
int pinServo = 5;
int pinPotenciometro = A1;
int ejeX = A2;
int ejeY = A3;
Servo miServo;

// Variables de uso
int velocidadMotor = 1;
int estadoBoton;
int angulo;
int vrJoystick;
int tempEjeY;
int wait = 50;
int voltajePotenciometro;
bool verificarSonido;
int stepState = 1;

void setup() {
  pinMode(pinLedA, OUTPUT);
  pinMode(pinLedR, OUTPUT);
  pinMode(pinSound, OUTPUT);
  pinMode(pinPotenciometro, INPUT);
  pinMode(ejeX, INPUT);
  pinMode(ejeY, INPUT);
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();
  miServo.attach(pinServo);
  motor.setSpeed(1);
  lcd.setCursor(0, 1);
  lcd.print(""Giro motor: <-"");
}

void moverMotor(int step) {
  tempEjeY = analogRead(ejeY);
  while (tempEjeY < 529 || tempEjeY > 532) {
    motor.step(step);
    tempEjeY = analogRead(ejeY);
    //velocidadMotor = (((2. / 1023.) * tempEjeY) - 3.) * -1;
    motor.setSpeed(abs(15));
  }
  digitalWrite(10, LOW);
  digitalWrite(11, LOW);
  digitalWrite(12, LOW);
  digitalWrite(13, LOW);
}

bool moverServo() {
  vrJoystick = analogRead(ejeX);
  angulo = (179. / 1022.) * (vrJoystick - 1022.) * -1;
  miServo.write(angulo);
  if (angulo == 0 || angulo >= 178) {
    return true;
  } else {
    return false;
  }
}

void sonar(bool verificador) {
  if (verificador) {
    if (angulo >= 179) {
      digitalWrite(pinLedA, 0);
      digitalWrite(pinSound, 1);
      digitalWrite(pinLedR, 1);
      delay(wait);
      digitalWrite(pinSound, 0);
      digitalWrite(pinLedR, 0);
      delay(wait);
      lcd.setCursor(0, 0);
      lcd.print(""Valor minimo"");
    } else if (angulo == 0) {
      digitalWrite(pinLedR, 0);
      digitalWrite(pinSound, 1);
      digitalWrite(pinLedA, 1);
      delay(wait);
      digitalWrite(pinSound, 0);
      digitalWrite(pinLedA, 0);
      delay(wait);
      lcd.setCursor(0, 0);
      lcd.print(""Valor maximo"");
    }
  } else {
    digitalWrite(pinSound, 0);
    digitalWrite(pinLedR, 0);
    digitalWrite(pinLedA, 0);
  }
}

void cambiarDireccionMotor(int pinLectura) {
  if (pinLectura == 0) {
    if (stepState == 1) {
      lcd.setCursor(0, 1);
      lcd.print(""Giro motor: ->"");
      digitalWrite(pinSound, 1);
      delay(150);
      digitalWrite(pinSound, 0);
      delay(150);
      stepState = -1;
      lcd.setCursor(0, 1);
    } else {
      lcd.setCursor(0, 1);
      lcd.print(""Giro motor: <-"");
      stepState = 1;
      digitalWrite(pinSound, 1);
      delay(150);
      digitalWrite(pinSound, 0);
      delay(150);
    }
  }
}

void loop() {
  Serial.println(angulo);
  lcd.setCursor(0, 0);
  lcd.print(""Angulo mtr: "" + String(angulo) + ""  "");
  cambiarDireccionMotor(analogRead(lecturaBoton));
  moverMotor(stepState);
  verificarSonido = moverServo();
  sonar(verificarSonido);
  voltajePotenciometro = analogRead(pinPotenciometro);
  wait = (450. / 700.) * voltajePotenciometro + 50.;
}
"
M7DddNxT,sp_cod_electrica_imp_rec_puesto,kuroshan1104,SQL,Saturday 16th of September 2023 09:33:03 PM CDT,"BEGIN

-- declare vperiodo varchar(6);
-- tipo=1
declare vfvence date;
declare vfcorte date;
declare vfemision date;
declare vflectura date;
declare vfactor double;
declare vigv double;
-- set vperiodo='201501';

select f_vence,f_corte,f_emision,factor,igv, f_lectura 
into vfvence,vfcorte,vfemision,vfactor,vigv, vflectura 
from g_recibo where periodo=vperiodo and tipo='E';

SELECT l.periodo,vfvence,vfcorte,f_g_nombres(l.idsocio) as nombres,l.num_recibo,p.codigo, p.codigo_ant, 
(SELECT des_giro FROM p_giro where idgiro= p.idgiro) as giro,
l.e_tension, IF(l.e_tipo=1,'Monofásica', 'Trifásica') as tipo, l.lectura_ant, l.lectura_actual,l.lectura_dif,vfemision,vigv,
l.cargo, l.igv,l.e_apublico,l.e_gastos,l.e_mant,l.total,
(SELECT COALESCE(sum(saldo),0) FROM d_deuda d 
 join d_deuda_puesto dp on d.ideuda=dp.ideuda 
 where dp.idpuesto=p.idpuesto and d.idconcepto=6 
 and estado='DE' and d.condicion = 1 and isnull(d.idfracc)
 and d.idperiodo < (select x.idperiodo from d_periodo x where x.anio= MID(vperiodo,1,4) and x.nperiodo= MID(vperiodo,5,6) and x.idf='M' )
) as wsaldo,

(select group_concat(' ',f_get_nmes(month(d.f_ini)),'-',year(d.f_ini)) 
 from d_deuda d join d_deuda_puesto sp on sp.ideuda=d.ideuda
 where sp.idpuesto=p.idpuesto and d.saldo>0 and d.estado<>'XX' 
 and d.condicion=1 and d.idconcepto=6 and isnull(d.idfracc)
 and d.idperiodo < (select x.idperiodo from d_periodo x where x.anio= MID(vperiodo,1,4) 
 and x.nperiodo= MID(vperiodo,5,6) and x.idf='M' )
 ) as glosa,
l.reposicion, l.redondeo, 
 concat('Re-Impreso: ',(DATE_FORMAT(CURRENT_TIMESTAMP(),'%d/%m/%Y %H:%i:%s'))) as f_rimpresion,
 vflectura     , 'prueba' as inst_luz            /* prueba aqui */                                             
 FROM p_lecturas l 
 join p_puesto p on p.idpuesto=l.idpuesto
 where l.periodo=vperiodo and l.tipo= vtipo  
 and p.codigo= vpuesto and l.de_baja = 0
 order by p.codigo;

END"
8Aj4rNij,Resume easter egg,kateonbush,TypeScript,Saturday 16th of September 2023 09:24:58 PM CDT,"interface CS {

	hardworking: true;
	intelligent: true;
	humble: true;
	likeable: true;
	nerdy: false; 
	friendly: true;

	isFitForCompany: (company: Company) => true;
 	
	hire: () => void;

}

// congrats on finding an easter egg
// and thanks for taking a look at my resume :)"
YAgCPwDc,RunTurnState,Glaedr0173,C#,Saturday 16th of September 2023 09:16:48 PM CDT,"using DRSUtils.StateMachine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using static UnityEditor.Progress;

public class RunTurnState : State<BattleSystem>
{
    #region Singleton
    public static RunTurnState Instance { get; private set; }

    private void Awake()
    {
        Instance = this;
    }
    #endregion

    BattleSystem bs;
    BattleUnit playerUnit;
    BattleUnit enemyUnit;
    BattleDialogBox dialogBox;
    PartyScreen partyScreen;
    bool isTrainerBattle;
    PokemonParty playerParty;
    PokemonParty trainerParty;

    public override void Enter(BattleSystem owner)
    {
        bs = owner;

        playerUnit = bs.PlayerUnit;
        enemyUnit = bs.EnemyUnit;
        dialogBox = bs.DialogBox;
        partyScreen = bs.PartyScreen;
        isTrainerBattle = bs.IsTrainerBattle;
        playerParty = bs.PlayerParty;
        trainerParty = bs.TrainerParty;

        StartCoroutine(RunTurns(bs.SelectedAction));
    }

    IEnumerator RunTurns(BattleAction playerAction)
    {
        if (playerAction == BattleAction.Move)
        {
            playerUnit.Pokemon.CurrentMove = playerUnit.Pokemon.Moves[bs.SelectedMove];
            enemyUnit.Pokemon.CurrentMove = enemyUnit.Pokemon.GetRandomMove();

            int playerMovePriority = playerUnit.Pokemon.CurrentMove.Base.Priority;
            int enemyMovePriority = enemyUnit.Pokemon.CurrentMove.Base.Priority;

            //check who goes first
            bool playerGoesFirst = true;
            if (enemyMovePriority > playerMovePriority)
            {
                playerGoesFirst = false;
            }
            else if (enemyMovePriority == playerMovePriority)
            {
                playerGoesFirst = playerUnit.Pokemon.Speed >= enemyUnit.Pokemon.Speed;
            }

            var firstUnit = (playerGoesFirst) ? playerUnit : enemyUnit;
            var secondUnit = (playerGoesFirst) ? enemyUnit : playerUnit;

            var secondPokemon = secondUnit.Pokemon;

            //First turn
            yield return RunMove(firstUnit, secondUnit, firstUnit.Pokemon.CurrentMove);
            yield return RunAfterTurn(firstUnit);
            //end if battle over
            if (bs.IsBattleOver == true) yield break;

            if (secondPokemon.CurrentHp > 0)
            {
                //Second turn
                yield return RunMove(secondUnit, firstUnit, secondUnit.Pokemon.CurrentMove);
                yield return RunAfterTurn(secondUnit);
                if (bs.IsBattleOver) yield break;
            }
        }
        else
        {
            if (playerAction == BattleAction.SwitchPokemon)
            {
                yield return bs.SwitchPokemon(bs.SelectedPokemon);
            }
            else if (playerAction == BattleAction.UseItem)
            {
                if(bs.SelectedItem is PokeballItem)
                {
                    yield return bs.ThrowPokeball(bs.SelectedItem as PokeballItem);
                    if (bs.IsBattleOver) yield break;
                }
                else
                {
                    //item is used from item screen, not here
                }

            }
            else if (playerAction == BattleAction.Run)
            {
                yield return TryToEscape();
            }

            //enemy turn
            var enemyMove = enemyUnit.Pokemon.GetRandomMove();
            yield return RunMove(enemyUnit, playerUnit, enemyMove);
            yield return RunAfterTurn(enemyUnit);
            if (bs.IsBattleOver) yield break;
        }
        if (!bs.IsBattleOver)
        {
            bs.StateMachine.ChangeState(ActionSelectionState.Instance);
        }
    }

    IEnumerator RunMove(BattleUnit sourceUnit, BattleUnit targetUnit, Move move)
    {
        bool canRunMove = sourceUnit.Pokemon.OnBeforeMove();

        if (!canRunMove)
        {
            yield return ShowStatusChanges(sourceUnit.Pokemon);
            yield return sourceUnit.UnitHUD.WaitForHPUpdate();
            yield break;
        }
        yield return ShowStatusChanges(sourceUnit.Pokemon);

        sourceUnit.Pokemon.CurrentMp -= move.Base.MPCost;
        yield return dialogBox.TypeDialog($""{sourceUnit.Pokemon.Base.Name} used {move.Base.MoveName}."");

        if (CheckIfMoveHits(move, sourceUnit.Pokemon, targetUnit.Pokemon))
        {
            sourceUnit.PlayAttackAnimation();
            if (move.Base.Sound != null)
                AudioManager.Instance.PlaySfx(move.Base.Sound);
            yield return new WaitForSeconds(1f);
            targetUnit.PlayHitAnimation();
            AudioManager.Instance.PlaySfx(AudioId.Hit);

            if (move.Base.Category == MoveCategory.Status)
            {
                yield return RunMoveEffects(move.Base.Effects, sourceUnit.Pokemon, targetUnit.Pokemon, move.Base.Target);
            }
            else
            {
                var damageDetails = targetUnit.Pokemon.TakeDamage(move, sourceUnit.Pokemon);
                yield return targetUnit.UnitHUD.WaitForHPUpdate();
                yield return ShowDamageDetails(damageDetails);
            }

            if (move.Base.SecondaryEffects != null && move.Base.SecondaryEffects.Count > 0 && targetUnit.Pokemon.CurrentHp > 0)
            {
                foreach (var secondary in move.Base.SecondaryEffects)
                {
                    var rng = UnityEngine.Random.Range(1, 101);
                    if (rng <= secondary.Chance)
                    {
                        yield return RunMoveEffects(secondary, sourceUnit.Pokemon, targetUnit.Pokemon, secondary.Target);
                    }
                }
            }

            if (targetUnit.Pokemon.CurrentHp <= 0)
            {
                yield return HandlePokemonFainted(targetUnit);
            }
        }
        else
        {
            yield return dialogBox.TypeDialog($""{sourceUnit.Pokemon.Base.Name}'s attack missed."");
        }

    }

    IEnumerator RunAfterTurn(BattleUnit sourceUnit)
    {
        if (bs.IsBattleOver == true) yield break;

        //Status effects like burn and poison will hurt pokemon after turn
        sourceUnit.Pokemon.OnAfterTurn();
        yield return ShowStatusChanges(sourceUnit.Pokemon);
        yield return sourceUnit.UnitHUD.WaitForHPUpdate();

        if (sourceUnit.Pokemon.CurrentHp <= 0)
        {
            yield return HandlePokemonFainted(sourceUnit);
        }
    }

    bool CheckIfMoveHits(Move move, Pokemon sourcePokemon, Pokemon targetPokemon)
    {
        if (move.Base.AlwaysHit) return true;

        float moveAccuracy = move.Base.Accuracy;
        int accuracy = sourcePokemon.StatBoosts[Stat.Accuracy];
        int evasion = targetPokemon.StatBoosts[Stat.Evasion];

        var boostedValues = new float[] { 1f, 4f / 3f, 5f / 3f, 2f, 7f / 3f, 8f / 3f, 3f };
        if (accuracy > 0)
            moveAccuracy *= boostedValues[accuracy];
        else
            moveAccuracy /= boostedValues[-accuracy];

        if (evasion > 0)
            moveAccuracy /= boostedValues[evasion];
        else
            moveAccuracy *= boostedValues[-evasion];

        return UnityEngine.Random.Range(1, 101) <= moveAccuracy;
    }

    IEnumerator ShowStatusChanges(Pokemon pokemon)
    {
        while (pokemon.StatusChanges.Count > 0)
        {
            var message = pokemon.StatusChanges.Dequeue();
            yield return dialogBox.TypeDialog(message);
        }
    }

    IEnumerator HandlePokemonFainted(BattleUnit faintedUnit)
    {
        yield return dialogBox.TypeDialog($""{faintedUnit.Pokemon.Base.Name} fainted."");
        faintedUnit.PlayFaintAnimation();

        yield return new WaitForSeconds(2f);

        //exp gain logic
        if (!faintedUnit.IsPlayerUnit)
        {
            bool battleWon = true;
            if (isTrainerBattle)
            {
                battleWon = trainerParty.GetHealthyPokemon() == null;
            }

            if (battleWon)
            {
                AudioManager.Instance.PlayMusic(bs.BattleVictoryMusic);
            }

            //Exp gain
            int expYield = faintedUnit.Pokemon.Base.ExpYield;
            int enemyLevel = faintedUnit.Pokemon.Level;
            float trainerBonus = (isTrainerBattle) ? 1.25f : 1f;

            int expGain = Mathf.FloorToInt((expYield * enemyLevel * trainerBonus) / 7);
            playerUnit.Pokemon.CurrentExp += expGain;
            yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} has gained {expGain} experience."");
            yield return playerUnit.UnitHUD.SetExpSmooth();

            //check for level up
            while (playerUnit.Pokemon.CheckForLevelUp())
            {
                playerUnit.UnitHUD.SetLevel();
                yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} has leveled up to {playerUnit.Pokemon.Level}."");

                //Try to learn new move
                var newMove = playerUnit.Pokemon.GetLearnableMoveAtCurrentLevel();
                if (newMove != null)
                {
                    if (playerUnit.Pokemon.Moves.Count < PokemonBase.MaxNumOfMoves)
                    {
                        playerUnit.Pokemon.LearnMove(newMove.MoveBase);
                        yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} has learned {newMove.MoveBase.MoveName}."");
                        dialogBox.SetMoveNames(playerUnit.Pokemon.Moves);
                    }
                    else
                    {
                        yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} is trying to learn {newMove.MoveBase.MoveName}."");
                        yield return dialogBox.TypeDialog($""But already knows {PokemonBase.MaxNumOfMoves} moves."");
                        yield return dialogBox.TypeDialog($""Choose a move to forget."");

                        MoveToForgetState.Instance.NewMove = newMove.MoveBase;
                        MoveToForgetState.Instance.CurrentMoves = playerUnit.Pokemon.Moves.Select(m => m.Base).ToList();
                        yield return GameController.Instance.StateMachine.PushAndWait(MoveToForgetState.Instance);

                        int moveIndex = MoveToForgetState.Instance.Selection;

                        if (moveIndex == PokemonBase.MaxNumOfMoves || moveIndex == -1)
                        {
                            //Don't learn new move
                            yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} did not learn {newMove.MoveBase.MoveName}."");
                        }
                        else
                        {
                            //should forget selected and learn new
                            var selectedMove = playerUnit.Pokemon.Moves[moveIndex].Base;
                            yield return dialogBox.TypeDialog($""{playerUnit.Pokemon.Base.Name} has forgotten {selectedMove.MoveName} and learned {newMove.MoveBase.MoveName}."");
                            playerUnit.Pokemon.Moves[moveIndex] = new Move(newMove.MoveBase);
                        }
                    }
                }

                yield return playerUnit.UnitHUD.SetExpSmooth(true);
            }

            yield return new WaitForSeconds(1f);
        }

        StartCoroutine(CheckForBattleOver(faintedUnit));
    }

    IEnumerator CheckForBattleOver(BattleUnit faintedUnit)
    {
        if (faintedUnit.IsPlayerUnit)
        {
            var nextPokemon = playerParty.GetHealthyPokemon();
            if (nextPokemon != null)
            {
                yield return GameController.Instance.StateMachine.PushAndWait(PartyState.Instance);
                yield return bs.SwitchPokemon(PartyState.Instance.SelectedPokemon);
            }
            else
            {
                bs.BattleOver(false);
            }
        }
        else
        {
            if (!isTrainerBattle)
            {
                // Determine the dropped material
                bool dropOrganicMaterial = UnityEngine.Random.Range(0, 2) == 0; // 0 for organic, 1 for inorganic

                // Determine the amount to drop (between 1 and 2)
                int dropAmount = UnityEngine.Random.Range(1, 3);

                Inventory playerInventory = Inventory.GetInventory();

                // Add the dropped material to the player's inventory
                if (dropOrganicMaterial)
                {
                    playerInventory.AddItem(enemyUnit.Pokemon.Base.OrgCraftingMaterial1, dropAmount);
                }
                else
                {
                    playerInventory.AddItem(enemyUnit.Pokemon.Base.InorgCraftingMaterial2, dropAmount);
                }

                bs.BattleOver(true);
            }
            else
            {
                var nextMonster = trainerParty.GetHealthyPokemon();
                if (nextMonster != null)
                {
                    //send out monster
                    Debug.Log($""Switching to AboutToUseState started."");
                    AboutToUseState.Instance.NewPokemon = nextMonster;
                    yield return bs.StateMachine.PushAndWait(AboutToUseState.Instance);
                    Debug.Log($""Switching to AboutToUseState finished."");
                }
                else
                {
                    bs.BattleOver(true);
                }
            }
        }
    }

    IEnumerator RunMoveEffects(MoveEffects effects, Pokemon sourcePokemon, Pokemon targetPokemon, MoveTarget moveTarget)
    {
        //Stat boosting
        if (effects.Boosts != null)
        {
            if (moveTarget == MoveTarget.Self)
            {
                sourcePokemon.ApplyBoosts(effects.Boosts);
            }
            else
            {
                targetPokemon.ApplyBoosts(effects.Boosts);
            }
        }
        //Status Conditions
        if (effects.Status != ConditionID.none)
        {
            targetPokemon.SetStatus(effects.Status);
        }

        //Volatile Status Conditions
        if (effects.VolatileStatus != ConditionID.none)
        {
            targetPokemon.SetVolatileStatus(effects.VolatileStatus);
        }

        yield return ShowStatusChanges(sourcePokemon);
        yield return ShowStatusChanges(targetPokemon);
    }

    IEnumerator ShowDamageDetails(DamageDetails damageDetails)
    {
        if (damageDetails.Critical > 1f)
        {
            yield return dialogBox.TypeDialog(""A critical hit!"");
        }
        if (damageDetails.TypeEffectiveness > 1f)
        {
            yield return dialogBox.TypeDialog(""The attack was super effective!"");
        }
        else if (damageDetails.TypeEffectiveness < 1f)
        {
            yield return dialogBox.TypeDialog(""The attack was not very effective! Oof!"");
        }
    }

    IEnumerator TryToEscape()
    {
        if (isTrainerBattle)
        {
            yield return dialogBox.TypeDialog($""You can't run from trainer battles!"");
            yield break;
        }

        bs.EscapeAttempts++;

        int playerSpeed = playerUnit.Pokemon.Speed;
        int enemySpeed = enemyUnit.Pokemon.Speed;

        if (enemySpeed < playerSpeed)
        {
            yield return dialogBox.TypeDialog($""You have ran away safely!"");
            bs.BattleOver(true);
        }
        else
        {
            float f = (playerSpeed * 128) / enemySpeed + 30 * bs.EscapeAttempts;
            f = f % 256;

            if (UnityEngine.Random.Range(0, 256) < f)
            {
                yield return dialogBox.TypeDialog($""You have ran away safely!"");
                bs.BattleOver(true);
            }
            else
            {
                yield return dialogBox.TypeDialog($""Can't escape!"");
            }
        }
    }
}"
U9TwyUtW,Impulse 101 Drift Preset,SE7ENHQ,XML,Saturday 16th of September 2023 09:07:27 PM CDT,"      <fMass value=""1050.000000"" />
      <fInitialDragCoeff value=""12.000000"" />
      <fPercentSubmerged value=""85.000000"" />
      <vecCentreOfMassOffset x=""0.000000"" y=""-0.165000"" z=""0.000000"" />
      <vecInertiaMultiplier x=""1.050000"" y=""1.575000"" z=""1.760000"" />
      <fDriveBiasFront value=""0.000000"" />
      <nInitialDriveGears value=""5"" />
      <fInitialDriveForce value=""5.430000"" />
      <fDriveInertia value=""1.300000"" />
      <fClutchChangeRateScaleUpShift value=""100.000000"" />
      <fClutchChangeRateScaleDownShift value=""100.000000"" />
      <fInitialDriveMaxFlatVel value=""140.000000"" />
      <fBrakeForce value=""1.500000"" />
      <fBrakeBiasFront value=""0.750000"" />
      <fHandBrakeForce value=""0.400000"" />
      <fSteeringLock value=""58.000000"" />
      <fTractionCurveMax value=""0.700000"" />
      <fTractionCurveMin value=""1.100000"" />
      <fTractionCurveLateral value=""21.000000"" />
      <fTractionSpringDeltaMax value=""0.150000"" />
      <fLowSpeedTractionLossMult value=""0.040000"" />
      <fCamberstiffness value=""0.000000"" />
      <fTractionBiasFront value=""0.484000"" />
      <fTractionLossMult value=""1.000000"" />
      <fSuspensionForce value=""2.300000"" />
      <fSuspensionCompDamp value=""1.400000"" />
      <fSuspensionReboundDamp value=""2.500000"" />
      <fSuspensionUpperLimit value=""0.060000"" />
      <fSuspensionLowerLimit value=""-0.100000"" />
      <fSuspensionRaise value=""-0.010000"" />
      <fSuspensionBiasFront value=""0.500000"" />
      <fAntiRollBarForce value=""1.000000"" />
      <fAntiRollBarBiasFront value=""0.650000"" />
      <fRollCentreHeightFront value=""0.330000"" />
      <fRollCentreHeightRear value=""0.330000"" />
      <fCollisionDamageMult value=""0.700000"" />
      <fWeaponDamageMult value=""1.000000"" />
      <fDeformationDamageMult value=""0.700000"" />
      <fEngineDamageMult value=""1.500000"" />
      <fPetrolTankVolume value=""65.000000"" />
      <fOilVolume value=""5.000000"" />
      <fSeatOffsetDistX value=""0.000000"" />
      <fSeatOffsetDistY value=""0.000000"" />
      <fSeatOffsetDistZ value=""0.050000"" />
      <nMonetaryValue value=""35000"" />
      <strModelFlags>440010</strModelFlags>
      <strHandlingFlags>0</strHandlingFlags>
      <strDamageFlags>20</strDamageFlags>
      <AIHandling>AVERAGE</AIHandling> 
      "
xzxWsxKF,Untitled,smj007,Python,Saturday 16th of September 2023 08:54:03 PM CDT,"class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        
        left, right = 0, 0

        while(left < len(s) and right <len(t)):
            if s[left] == t[right]:
                left += 1
                right += 1
            elif s[left] != t[right]:
                right += 1

        if left == len(s):
            return True

        return False"
3Rz4zeyR,2023-09-16_stats.json,rdp_snitch,JSON,Saturday 16th of September 2023 07:18:23 PM CDT,"{
  ""ip"": {
    ""157.230.159.138"": 3,
    ""193.142.147.9"": 18,
    ""111.61.253.55"": 6,
    ""80.94.95.238"": 6,
    ""87.251.75.145"": 6,
    ""205.210.31.241"": 9,
    ""152.32.198.93"": 6,
    ""35.244.85.121"": 3,
    ""132.145.76.107"": 9,
    ""45.143.201.62"": 9,
    ""185.170.144.3"": 6,
    ""185.190.24.88"": 6,
    ""106.116.169.71"": 3,
    ""194.5.82.131"": 6,
    ""87.251.75.179"": 6,
    ""58.218.204.183"": 18,
    ""137.184.166.42"": 3,
    ""134.209.48.12"": 3,
    ""141.98.11.128"": 9,
    ""87.251.75.120"": 3,
    ""198.235.24.121"": 9,
    ""213.6.148.83"": 3,
    ""62.204.41.134"": 6,
    ""62.233.50.179"": 6,
    ""62.122.184.168"": 12,
    ""62.122.184.166"": 12,
    ""43.156.6.9"": 237,
    ""80.94.95.219"": 9,
    ""205.210.31.222"": 9,
    ""104.161.31.139"": 9,
    ""128.199.140.26"": 3,
    ""58.243.56.152"": 3,
    ""64.227.160.176"": 3,
    ""163.172.229.39"": 3,
    ""185.234.216.63"": 3,
    ""193.142.146.17"": 9,
    ""167.248.133.126"": 3,
    ""51.75.160.42"": 18,
    ""198.235.24.169"": 9
  },
  ""asn"": {
    ""AS14061"": 15,
    ""AS208046"": 27,
    ""AS24547"": 6,
    ""AS204428"": 15,
    ""AS208091"": 15,
    ""AS396982"": 39,
    ""AS135377"": 6,
    ""AS31898"": 9,
    ""AS210950"": 9,
    ""AS197414"": 6,
    ""AS211632"": 6,
    ""AS4134"": 21,
    ""AS137409"": 6,
    ""AS209605"": 9,
    ""AS12975"": 3,
    ""AS59425"": 6,
    ""AS57523"": 33,
    ""AS132203"": 237,
    ""AS53755"": 9,
    ""AS4837"": 3,
    ""AS12876"": 3,
    ""AS398722"": 3,
    ""AS16276"": 18
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 15,
    ""ColocationX Ltd."": 27,
    ""China Mobile communications corporation"": 6,
    ""SS-Net"": 15,
    ""Xhost Internet Solutions LP"": 21,
    ""Google LLC"": 39,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Oracle Corporation"": 9,
    ""TOV E-RISHENNYA"": 9,
    ""Internet Solutions & Innovations LTD."": 6,
    ""Chinanet"": 21,
    ""GSL Networks Pty LTD"": 6,
    ""UAB Host Baltic"": 9,
    ""Palestine Telecommunications Company"": 3,
    ""Horizon LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Shenzhen Tencent Computer Systems Company Limited"": 237,
    ""Input Output Flood LLC"": 9,
    ""CNC Group CHINA169 AnHui province network"": 3,
    ""Online S.A.S."": 3,
    ""Censys, Inc."": 3,
    ""OVH SAS"": 18
  },
  ""org"": {
    ""DigitalOcean, LLC"": 15,
    ""x33 Networks IBC"": 18,
    ""China Mobile"": 6,
    ""Internet-Transit LTD"": 15,
    ""Xhost Internet Solutions"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Google Cloud (australia-southeast1)"": 3,
    ""Oracle Cloud Infrastructure (uk-london-1)"": 9,
    ""TOV VAIZ PARTNER"": 9,
    ""Xhostis"": 6,
    ""Tribeka Web Advisors S.A"": 6,
    ""Chinanet HE"": 3,
    ""Unknown"": 18,
    ""Chinanet JS"": 18,
    ""Palestine Telecommunications Company"": 3,
    ""Horizon LLC"": 6,
    ""Sierra LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 27,
    ""Tencent Cloud Computing"": 237,
    ""Input Output Flood LLC"": 9,
    ""ONLINE"": 3,
    ""ColocationX Ltd"": 9,
    ""Censys, Inc."": 3,
    ""OVH Ltd"": 18
  },
  ""regionName"": {
    ""California"": 42,
    ""English River"": 18,
    ""Hebei"": 9,
    ""Sofia-Capital"": 15,
    ""England"": 48,
    ""New South Wales"": 3,
    ""Kyiv City"": 9,
    ""North Holland"": 15,
    ""Mariehamns stad"": 6,
    ""North West"": 243,
    ""Jiangsu"": 18,
    ""Ontario"": 3,
    ""Kaunas"": 9,
    ""Rafah Governorate"": 3,
    ""Moscow"": 39,
    ""Arizona"": 9,
    ""South West"": 3,
    ""Anhui"": 3,
    ""Karnataka"": 3,
    ""\u00cele-de-France"": 3,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 54,
    ""Seychelles"": 18,
    ""China"": 30,
    ""Bulgaria"": 15,
    ""United Kingdom"": 48,
    ""Australia"": 3,
    ""Ukraine"": 9,
    ""Netherlands"": 15,
    ""Aland Islands"": 6,
    ""Singapore"": 246,
    ""Canada"": 3,
    ""Lithuania"": 9,
    ""Palestine"": 3,
    ""Russia"": 39,
    ""India"": 3,
    ""France"": 3
  },
  ""account"": {
    ""nmap"": 6,
    ""Domain"": 66,
    ""(empty)"": 18,
    ""Administr"": 54,
    ""khVtcOVeh"": 3,
    ""HsbCNN"": 3,
    ""QVPKos"": 3,
    ""Administrator"": 6,
    ""hello"": 297,
    ""beio"": 3,
    ""dJZvIDNkS"": 3,
    ""yEMvUn"": 3,
    ""tdlRDK"": 3,
    ""OfBOQOBkC"": 3,
    ""NmmEOQ"": 3,
    ""dwkJpb"": 3,
    ""Test"": 18,
    ""hwzWOkRKL"": 3,
    ""GdUQqH"": 3,
    ""TrZCch"": 3
  },
  ""keyboard"": {
    ""Unknown"": 504
  },
  ""client_build"": {
    ""Unknown"": 504
  },
  ""client_name"": {
    ""Unknown"": 504
  },
  ""ip_type"": {
    ""hosting & proxy"": 9,
    ""Unknown"": 153,
    ""mobile"": 6,
    ""hosting"": 327,
    ""proxy"": 9
  }
}"
Y24tTb6t,2023-09-16_stats.json,rdp_snitch,JSON,Saturday 16th of September 2023 07:16:12 PM CDT,"{
  ""ip"": {
    ""157.230.159.138"": 2,
    ""193.142.147.9"": 12,
    ""111.61.253.55"": 4,
    ""80.94.95.238"": 4,
    ""87.251.75.145"": 4,
    ""205.210.31.241"": 6,
    ""152.32.198.93"": 4,
    ""35.244.85.121"": 2,
    ""132.145.76.107"": 6,
    ""45.143.201.62"": 6,
    ""185.170.144.3"": 4,
    ""185.190.24.88"": 4,
    ""106.116.169.71"": 2,
    ""194.5.82.131"": 4,
    ""87.251.75.179"": 4,
    ""58.218.204.183"": 12,
    ""137.184.166.42"": 2,
    ""134.209.48.12"": 2,
    ""141.98.11.128"": 6,
    ""87.251.75.120"": 2,
    ""198.235.24.121"": 6,
    ""213.6.148.83"": 2,
    ""62.204.41.134"": 4,
    ""62.233.50.179"": 4,
    ""62.122.184.168"": 8,
    ""62.122.184.166"": 8,
    ""43.156.6.9"": 158,
    ""80.94.95.219"": 6,
    ""205.210.31.222"": 6,
    ""104.161.31.139"": 6,
    ""128.199.140.26"": 2,
    ""58.243.56.152"": 2,
    ""64.227.160.176"": 2,
    ""163.172.229.39"": 2,
    ""185.234.216.63"": 2,
    ""193.142.146.17"": 6,
    ""167.248.133.126"": 2,
    ""51.75.160.42"": 12,
    ""198.235.24.169"": 6
  },
  ""asn"": {
    ""AS14061"": 10,
    ""AS208046"": 18,
    ""AS24547"": 4,
    ""AS204428"": 10,
    ""AS208091"": 10,
    ""AS396982"": 26,
    ""AS135377"": 4,
    ""AS31898"": 6,
    ""AS210950"": 6,
    ""AS197414"": 4,
    ""AS211632"": 4,
    ""AS4134"": 14,
    ""AS137409"": 4,
    ""AS209605"": 6,
    ""AS12975"": 2,
    ""AS59425"": 4,
    ""AS57523"": 22,
    ""AS132203"": 158,
    ""AS53755"": 6,
    ""AS4837"": 2,
    ""AS12876"": 2,
    ""AS398722"": 2,
    ""AS16276"": 12
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 10,
    ""ColocationX Ltd."": 18,
    ""China Mobile communications corporation"": 4,
    ""SS-Net"": 10,
    ""Xhost Internet Solutions LP"": 14,
    ""Google LLC"": 26,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Oracle Corporation"": 6,
    ""TOV E-RISHENNYA"": 6,
    ""Internet Solutions & Innovations LTD."": 4,
    ""Chinanet"": 14,
    ""GSL Networks Pty LTD"": 4,
    ""UAB Host Baltic"": 6,
    ""Palestine Telecommunications Company"": 2,
    ""Horizon LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 22,
    ""Shenzhen Tencent Computer Systems Company Limited"": 158,
    ""Input Output Flood LLC"": 6,
    ""CNC Group CHINA169 AnHui province network"": 2,
    ""Online S.A.S."": 2,
    ""Censys, Inc."": 2,
    ""OVH SAS"": 12
  },
  ""org"": {
    ""DigitalOcean, LLC"": 10,
    ""x33 Networks IBC"": 12,
    ""China Mobile"": 4,
    ""Internet-Transit LTD"": 10,
    ""Xhost Internet Solutions"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Ucloud Information Technology (hk) Limited"": 4,
    ""Google Cloud (australia-southeast1)"": 2,
    ""Oracle Cloud Infrastructure (uk-london-1)"": 6,
    ""TOV VAIZ PARTNER"": 6,
    ""Xhostis"": 4,
    ""Tribeka Web Advisors S.A"": 4,
    ""Chinanet HE"": 2,
    ""Unknown"": 12,
    ""Chinanet JS"": 12,
    ""Palestine Telecommunications Company"": 2,
    ""Horizon LLC"": 4,
    ""Sierra LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Tencent Cloud Computing"": 158,
    ""Input Output Flood LLC"": 6,
    ""ONLINE"": 2,
    ""ColocationX Ltd"": 6,
    ""Censys, Inc."": 2,
    ""OVH Ltd"": 12
  },
  ""regionName"": {
    ""California"": 28,
    ""English River"": 12,
    ""Hebei"": 6,
    ""Sofia-Capital"": 10,
    ""England"": 32,
    ""New South Wales"": 2,
    ""Kyiv City"": 6,
    ""North Holland"": 10,
    ""Mariehamns stad"": 4,
    ""North West"": 162,
    ""Jiangsu"": 12,
    ""Ontario"": 2,
    ""Kaunas"": 6,
    ""Rafah Governorate"": 2,
    ""Moscow"": 26,
    ""Arizona"": 6,
    ""South West"": 2,
    ""Anhui"": 2,
    ""Karnataka"": 2,
    ""\u00cele-de-France"": 2,
    ""Michigan"": 2
  },
  ""country"": {
    ""United States"": 36,
    ""Seychelles"": 12,
    ""China"": 20,
    ""Bulgaria"": 10,
    ""United Kingdom"": 32,
    ""Australia"": 2,
    ""Ukraine"": 6,
    ""Netherlands"": 10,
    ""Aland Islands"": 4,
    ""Singapore"": 164,
    ""Canada"": 2,
    ""Lithuania"": 6,
    ""Palestine"": 2,
    ""Russia"": 26,
    ""India"": 2,
    ""France"": 2
  },
  ""account"": {
    ""nmap"": 4,
    ""Domain"": 44,
    ""(empty)"": 12,
    ""Administr"": 36,
    ""khVtcOVeh"": 2,
    ""HsbCNN"": 2,
    ""QVPKos"": 2,
    ""Administrator"": 4,
    ""hello"": 198,
    ""beio"": 2,
    ""dJZvIDNkS"": 2,
    ""yEMvUn"": 2,
    ""tdlRDK"": 2,
    ""OfBOQOBkC"": 2,
    ""NmmEOQ"": 2,
    ""dwkJpb"": 2,
    ""Test"": 12,
    ""hwzWOkRKL"": 2,
    ""GdUQqH"": 2,
    ""TrZCch"": 2
  },
  ""keyboard"": {
    ""Unknown"": 336
  },
  ""client_build"": {
    ""Unknown"": 336
  },
  ""client_name"": {
    ""Unknown"": 336
  },
  ""ip_type"": {
    ""hosting & proxy"": 6,
    ""Unknown"": 102,
    ""mobile"": 4,
    ""hosting"": 218,
    ""proxy"": 6
  }
}"
1RjAxdR6,2023-09-16_stats.json,rdp_snitch,JSON,Saturday 16th of September 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""157.230.159.138"": 1,
    ""193.142.147.9"": 6,
    ""111.61.253.55"": 2,
    ""80.94.95.238"": 2,
    ""87.251.75.145"": 2,
    ""205.210.31.241"": 3,
    ""152.32.198.93"": 2,
    ""35.244.85.121"": 1,
    ""132.145.76.107"": 3,
    ""45.143.201.62"": 3,
    ""185.170.144.3"": 2,
    ""185.190.24.88"": 2,
    ""106.116.169.71"": 1,
    ""194.5.82.131"": 2,
    ""87.251.75.179"": 2,
    ""58.218.204.183"": 6,
    ""137.184.166.42"": 1,
    ""134.209.48.12"": 1,
    ""141.98.11.128"": 3,
    ""87.251.75.120"": 1,
    ""198.235.24.121"": 3,
    ""213.6.148.83"": 1,
    ""62.204.41.134"": 2,
    ""62.233.50.179"": 2,
    ""62.122.184.168"": 4,
    ""62.122.184.166"": 4,
    ""43.156.6.9"": 79,
    ""80.94.95.219"": 3,
    ""205.210.31.222"": 3,
    ""104.161.31.139"": 3,
    ""128.199.140.26"": 1,
    ""58.243.56.152"": 1,
    ""64.227.160.176"": 1,
    ""163.172.229.39"": 1,
    ""185.234.216.63"": 1,
    ""193.142.146.17"": 3,
    ""167.248.133.126"": 1,
    ""51.75.160.42"": 6,
    ""198.235.24.169"": 3
  },
  ""asn"": {
    ""AS14061"": 5,
    ""AS208046"": 9,
    ""AS24547"": 2,
    ""AS204428"": 5,
    ""AS208091"": 5,
    ""AS396982"": 13,
    ""AS135377"": 2,
    ""AS31898"": 3,
    ""AS210950"": 3,
    ""AS197414"": 2,
    ""AS211632"": 2,
    ""AS4134"": 7,
    ""AS137409"": 2,
    ""AS209605"": 3,
    ""AS12975"": 1,
    ""AS59425"": 2,
    ""AS57523"": 11,
    ""AS132203"": 79,
    ""AS53755"": 3,
    ""AS4837"": 1,
    ""AS12876"": 1,
    ""AS398722"": 1,
    ""AS16276"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 5,
    ""ColocationX Ltd."": 9,
    ""China Mobile communications corporation"": 2,
    ""SS-Net"": 5,
    ""Xhost Internet Solutions LP"": 7,
    ""Google LLC"": 13,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Oracle Corporation"": 3,
    ""TOV E-RISHENNYA"": 3,
    ""Internet Solutions & Innovations LTD."": 2,
    ""Chinanet"": 7,
    ""GSL Networks Pty LTD"": 2,
    ""UAB Host Baltic"": 3,
    ""Palestine Telecommunications Company"": 1,
    ""Horizon LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Shenzhen Tencent Computer Systems Company Limited"": 79,
    ""Input Output Flood LLC"": 3,
    ""CNC Group CHINA169 AnHui province network"": 1,
    ""Online S.A.S."": 1,
    ""Censys, Inc."": 1,
    ""OVH SAS"": 6
  },
  ""org"": {
    ""DigitalOcean, LLC"": 5,
    ""x33 Networks IBC"": 6,
    ""China Mobile"": 2,
    ""Internet-Transit LTD"": 5,
    ""Xhost Internet Solutions"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Google Cloud (australia-southeast1)"": 1,
    ""Oracle Cloud Infrastructure (uk-london-1)"": 3,
    ""TOV VAIZ PARTNER"": 3,
    ""Xhostis"": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""Chinanet HE"": 1,
    ""Unknown"": 6,
    ""Chinanet JS"": 6,
    ""Palestine Telecommunications Company"": 1,
    ""Horizon LLC"": 2,
    ""Sierra LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Tencent Cloud Computing"": 79,
    ""Input Output Flood LLC"": 3,
    ""ONLINE"": 1,
    ""ColocationX Ltd"": 3,
    ""Censys, Inc."": 1,
    ""OVH Ltd"": 6
  },
  ""regionName"": {
    ""California"": 14,
    ""English River"": 6,
    ""Hebei"": 3,
    ""Sofia-Capital"": 5,
    ""England"": 16,
    ""New South Wales"": 1,
    ""Kyiv City"": 3,
    ""North Holland"": 5,
    ""Mariehamns stad"": 2,
    ""North West"": 81,
    ""Jiangsu"": 6,
    ""Ontario"": 1,
    ""Kaunas"": 3,
    ""Rafah Governorate"": 1,
    ""Moscow"": 13,
    ""Arizona"": 3,
    ""South West"": 1,
    ""Anhui"": 1,
    ""Karnataka"": 1,
    ""\u00cele-de-France"": 1,
    ""Michigan"": 1
  },
  ""country"": {
    ""United States"": 18,
    ""Seychelles"": 6,
    ""China"": 10,
    ""Bulgaria"": 5,
    ""United Kingdom"": 16,
    ""Australia"": 1,
    ""Ukraine"": 3,
    ""Netherlands"": 5,
    ""Aland Islands"": 2,
    ""Singapore"": 82,
    ""Canada"": 1,
    ""Lithuania"": 3,
    ""Palestine"": 1,
    ""Russia"": 13,
    ""India"": 1,
    ""France"": 1
  },
  ""account"": {
    ""nmap"": 2,
    ""Domain"": 22,
    ""(empty)"": 6,
    ""Administr"": 18,
    ""khVtcOVeh"": 1,
    ""HsbCNN"": 1,
    ""QVPKos"": 1,
    ""Administrator"": 2,
    ""hello"": 99,
    ""beio"": 1,
    ""dJZvIDNkS"": 1,
    ""yEMvUn"": 1,
    ""tdlRDK"": 1,
    ""OfBOQOBkC"": 1,
    ""NmmEOQ"": 1,
    ""dwkJpb"": 1,
    ""Test"": 6,
    ""hwzWOkRKL"": 1,
    ""GdUQqH"": 1,
    ""TrZCch"": 1
  },
  ""keyboard"": {
    ""Unknown"": 168
  },
  ""client_build"": {
    ""Unknown"": 168
  },
  ""client_name"": {
    ""Unknown"": 168
  },
  ""ip_type"": {
    ""hosting & proxy"": 3,
    ""Unknown"": 51,
    ""mobile"": 2,
    ""hosting"": 109,
    ""proxy"": 3
  }
}"
Tf5FBE3M,BaseRepository - Dapper + EFC (Main) sample,Superstar,C#,Saturday 16th of September 2023 07:10:42 PM CDT,"using System.Collections.Generic;
using System.Linq;
using Dapper;
using Microsoft.EntityFrameworkCore;

namespace MyProject
{
    public class Repository<T> : IRepository<T> where T : class
    {
        private readonly DbContext _context;

        public Repository(DbContext context)
        {
            _context = context;
        }

        public IEnumerable<T> GetAll()
        {
            return _context.Set<T>().AsEnumerable();
        }

        public void Add(T entity)
        {
            _context.Set<T>().Add(entity);
            _context.SaveChanges();
        }

        public void Update(T entity)
        {
            _context.Set<T>().Update(entity);
            _context.SaveChanges();
        }

        public void Delete(T entity)
        {
            _context.Set<T>().Remove(entity);
            _context.SaveChanges();
        }

        public T GetById(int id)
        {
            return _context.Set<T>().Find(id);
        }

        public IEnumerable<T> GetByRawSql(string query, object parameters)
        {
            using (var connection = _context.Database.GetDbConnection())
            {
                return connection.Query<T>(query, parameters);
            }
        }
    }
}
"
38jw5WSt,Some Graphics / resolution Commands,onejdc,Bash,Saturday 16th of September 2023 06:44:00 PM CDT,"X=$(xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f1)

Y=$(xrandr --current | grep '*' | uniq | awk '{print $1}' | cut -d 'x' -f2)


echo ""$X""x""$Y""

xdpyinfo | awk '/dimensions/{print $2}'

cat /sys/class/drm/<card>/modes
cvt X Y Refresh
xrandr --newmode ""<NAME>"" <CVT_COPY_PASTE>

pacman -S amdgpu"
7vvAKC6d,Break In 2 (WIP),2AreYouMental110,Lua,Saturday 16th of September 2023 06:37:23 PM CDT,"local localplr = game.Players.LocalPlayer
local localname = localplr.Name

local lib = loadstring(game:HttpGet(""https://pastebin.com/raw/A2Wf3WVh""))()
lib.makelib(""Break In 2 (BY 2AREYOUMENTAL110)"")
local maintab = lib.maketab(""Main"")
local lobbytab = lib.maketab(""Lobby"")

lib.makebutton(""Get Apple (only 10)"",maintab,function()
    game.ReplicatedStorage.Events.Vending:FireServer(3,""Apple"",""Food"",localname,1)
end)

lib.makebutton(""Get Chips (only 3)"",maintab,function()
    game.ReplicatedStorage.Events.Vending:FireServer(3,""Chips"",""Food"",localname,1)
end)

lib.makedropdown(""Weapons"",maintab,{""Crowbar1"",""Crowbar2"",""Bat"",""Rake"",""Hammer"",""Wrench"",""Broom""},function(tool)
    game.ReplicatedStorage.Events.Vending:FireServer(3,tool,""Weapons"",localname,6)
end)

lib.makebutton(""Get Hacker Role"",lobbytab,function()
    game:GetService(""ReplicatedStorage"").RemoteEvents.OutsideRole:FireServer(""Phone"",true,false)
end)
lib.makebutton(""Get Nerd Role"",lobbytab,function()
    game:GetService(""ReplicatedStorage"").RemoteEvents.OutsideRole:FireServer(""Book"",true,false)
end)"
y1inEGb2,autoexec2,M-Masters,D,Saturday 16th of September 2023 06:10:06 PM CDT,"                       //NET_RATE
         //100 TICK

//rate ""100000""
//cl_cmdrate ""100""
//cl_updaterate ""100""
//net_splitpacket_maxrate ""50000""


         //30 TICK

rate ""30000""
cl_cmdrate ""100""
cl_updaterate ""30""
net_splitpacket_maxrate ""30000""


                        //CONNECT

cl_interp ""0""
cl_interp_ratio ""0""
cl_lagcompensation ""1""
cl_predictweapons ""1""
cl_timeout ""30""
cl_downloadfilter ""none""
cl_allowdownload ""0""
motd_enabled ""0""
mm_dedicated_search_maxping ""60""
net_maxroutable ""1200""			//ISP MTU limit dependant, lower only if experiencing ""choke"" (576-1200)
net_allow_multicast ""0""
 

                       //INPUT LAG
snd_async_flush                   //exec autoexec.cfg 
scene_flush                       //exec autoexec.cfg
m_customaccel ""0"" 
m_mouseaccel1 ""0"" 
m_mouseaccel2 ""0"" 
m_mousespeed ""0""
m_filter ""0""
m_filter2 ""0""
m_rawinput ""1""


                         //VOLUME
snd_mixahead ""0.07""
snd_pitchquality   ""1""
snd_prefetch_common ""1""
dsp_slow_cpu ""1""
dsp_enhance_stereo ""0""
snd_legacy_surround ""0""


                         //VOICE
voice_enable			""1""
voice_modenable			""1""
voice_scale		        ""1""
voice_forcemicrecord	        ""1""
voice_threshold			""1""
voice_vox			""0""


                         //FPS
cl_forcepreload ""1""
cl_detail_max_sway ""0""
func_break_max_pieces ""0""
mat_bloom_scalefactor_scalar ""0.0""
mat_queue_mode ""2""
mat_queue_report ""0""
r_dynamic ""0""
r_PhysPropStaticLighting ""0""
r_cheapwaterstart ""0""
r_cheapwaterend ""9999""
r_skyboxfogfactor ""0.0""
r_eyemove  ""0""
r_eyesize ""0""
r_eyeshift_x ""0""
r_eyeshift_y ""0""
r_eyeshift_z ""0""
z_wound_client_disabled ""1""


                           //INFO
cl_showpos  ""0""
cl_autohelp ""0""
cl_showhelp ""0""
gameinstructor_enable ""0""
cc_lang	                        ""english""
english	""1""
cc_linger_time ""0.75""		//Subtitle display time
cc_predisplay_time ""0""		//Subtitle delay
closecaption ""1""

                          //BINDS
bind 1 ""cl_viewmodelfovsurvivor 180; slot1""                                     //Primary
bind 2 ""cl_viewmodelfovsurvivor 85; slot2""                                      //Secondary
bind 3 ""cl_viewmodelfovsurvivor 85; slot2""                                      //Secondary
bind 4 ""cl_viewmodelfovsurvivor 90; slot3""                                      //Throwable
bind MOUSE5 ""cl_viewmodelfovsurvivor 85; slot5""                                 //Pills
bind MOUSE4 ""cl_viewmodelfovsurvivor 110; slot4""                                //First Aid
bind q ""cl_viewmodelfovsurvivor 85; lastinv""                                    //Primary+Secondary
bind CTRL ""+duck; cl_de""
bind SHIFT ""+speed; cl_de""
bind SPACE ""+jump; cl_de""
bind ""MOUSE1"" ""+attack; cl_de""
bind ""MOUSE2"" ""+attack2; cl_de""
bind ""MWHEELDOWN"" ""+attack""
bind ""MWHEELUP"" ""+attack""
bind k ""snd_restart""
bind ""TAB"" ""+showscores_custom""
alias ""+showscores_custom"" ""+showscores; net_graph 3; net_graphpos 325; net_graphheight 0; net_graphmsecs 400""
alias ""-showscores_custom"" ""-showscores; net_graph 1; net_graphpos 325; net_graphheight 0; net_graphmsecs 400""
alias ""cl_de"" ""cl_destroy_ragdolls; r_cleardecals; dsp_volume 0""
alias +mfwd ""-back;+forward;alias checkfwd +forward""
alias +mback ""-forward;+back;alias checkback +back""
alias +mleft ""-moveright;+moveleft;alias checkleft +moveleft""
alias +mright ""-moveleft;+moveright;alias checkright +moveright""
alias -mfwd ""-forward;checkback;alias checkfwd none""
alias -mback ""-back;checkfwd;alias checkback none""
alias -mleft ""-moveleft;checkright;alias checkleft none""
alias -mright ""-moveright;checkleft;alias checkright none""
alias checkfwd none
alias checkback none
alias checkleft none
alias checkright none
alias none """"


bind ""W"" ""+mfwd; cl_de""
bind ""A"" ""+mleft; cl_de""
bind ""S"" ""+mback; cl_de""
bind ""D"" ""+mright; cl_de""



                            //SPEC
spec_allowroaming				""1""
cl_ideal_spec_mode                              ""6""



                            //CROSSHAIR
crosshair 1
cl_Crosshair_red 0
cl_crosshair_green 255
cl_crosshair_blue 255
cl_crosshair_alpha 0.0000000
cl_crosshair_dynamic 0
cl_crosshair_thickness 3


                           //FONT
alias reloadfont ""mat_setvideomode 1920 822 1; mat_setvideomode 1920 822 0""
reloadfont


                           //GLOWS
alias GlowItem0;
alias GlowItem1;
alias GlowItem2;
alias GlowItemPart0;
alias GlowItemPart1;
alias GlowItemRestart;
 
alias GlowItemFar0;
alias GlowItemFar1;
alias GlowItemFar2;
alias GlowItemFarPart0;
alias GlowItemFarPart1;
alias GlowItemFarRestart;
 
 
alias survivorHurt;
 
alias GlowThirdStrikeItem0;
alias GlowThirdStrikeItem1;
alias GlowThirdStrikeItem2;
alias GlowThirdStrikeItemPart0;
alias GlowThirdStrikeItemPart1;
alias GlowThirdStrikeItemRestart;
 
alias GlowIncludeBuffer;
 
 
cl_glow_survivor_r ""0"";
cl_glow_survivor_g ""0.1411764705882353"";
cl_glow_survivor_b ""0.9647058823529412"";
cl_glow_survivor_hurt_r ""1"";
cl_glow_survivor_hurt_g ""1"";
cl_glow_survivor_hurt_b ""1"";
cl_glow_survivor_vomit_r ""0.8235294117647058"";
cl_glow_survivor_vomit_g ""0"";
cl_glow_survivor_vomit_b ""0.984313725490196"";
cl_glow_thirdstrike_item_r ""1"";
cl_glow_thirdstrike_item_g ""0"";
cl_glow_thirdstrike_item_b ""0"";
cl_glow_item_r ""0.11372549019607843"";
cl_glow_item_g ""1"";
cl_glow_item_b ""0"";
cl_glow_item_far_r ""0.11372549019607843"";
cl_glow_item_far_g ""1"";
cl_glow_item_far_b ""0"";
cl_glow_ability_r ""1"";
cl_glow_ability_g ""0"";
cl_glow_ability_b ""0"";

cl_glow_ghost_infected_r ""1"";
cl_glow_ghost_infected_g ""0"";
cl_glow_ghost_infected_b ""0.984313725490196"";
cl_glow_infected_r ""1"";
cl_glow_infected_g ""1"";
cl_glow_infected_b ""1"";
cl_glow_infected_vomit_r ""1"";
cl_glow_infected_vomit_g ""0"";
cl_glow_infected_vomit_b ""0.9058823529411765"";
cl_glow_survivor_health_high_r ""0.01568627450980392"";
cl_glow_survivor_health_high_g ""1"";
cl_glow_survivor_health_high_b ""0"";
cl_glow_survivor_health_med_r ""1"";
cl_glow_survivor_health_med_g ""0.796078431372549"";
cl_glow_survivor_health_med_b ""0"";
cl_glow_survivor_health_low_r ""1"";
cl_glow_survivor_health_low_g ""0"";
cl_glow_survivor_health_low_b ""0"";
cl_glow_survivor_health_crit_r ""1"";
cl_glow_survivor_health_crit_g ""1"";
cl_glow_survivor_health_crit_b ""1"";
cl_witch_glow_idle_r ""0.2"";
cl_witch_glow_idle_g ""0.4"";
cl_witch_glow_idle_b ""0.2"";
cl_witch_glow_angry_r ""1"";
cl_witch_glow_angry_g ""0"";
cl_witch_glow_angry_b ""0"";"
DU6rg2jr,ECPC 2023 QualDay2 J-Jewel,CodeGuy_,C++,Saturday 16th of September 2023 06:01:06 PM CDT,"#include<bits/stdc++.h>
#define MOD 1000000007
#define MAX 1000000
#define N 100000
#define SQRTN 318
using namespace std;
struct query
{
	int l,r,x,z;
};
int bit[MAX+10];
int fq[MAX+10],withFq[MAX+10];
query qry[N+10];
int sum(int i)
{
	i++;
	int ans = 0;
	while(i)
	{
		ans += bit[i];
		i -= i&(-i);
	}
	return ans;
}
void upd(int i,int x)
{
	i++;
	while(i<=MAX+2)
	{
		bit[i] += x;
		i += i&(-i);
	}
}
int rangeSum(int l,int r)
{
	if(l<=r)
		return sum(r)-sum(l-1);
	return 0;
}
bool cmp(int i,int j)
{
	if(qry[i].l/SQRTN==qry[j].l/SQRTN)
		return qry[i].r<qry[j].r;
	return qry[i].l/SQRTN<qry[j].l/SQRTN;
}
void solve(int x,int delta,vector<int> &v)
{
	withFq[fq[v[x]]]--;
	if(withFq[fq[v[x]]]==0)
		upd(fq[v[x]],-1);
	fq[v[x]]+=delta;
	if(withFq[fq[v[x]]]==0)
		upd(fq[v[x]],+1);
	withFq[fq[v[x]]]++;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int n;
	cin>>n;
	vector<int> v(n+1);
	for(int i=1;i<=n;++i)cin>>v[i];
	int q;
	cin>>q;
	vector<int> order;
	for(int i=1;i<=q;++i)
	{
		order.push_back(i);
		cin>>qry[i].l>>qry[i].r>>qry[i].x>>qry[i].z;
	}
	sort(order.begin(),order.end(),cmp);
	bool ans[q+1];
	int l=1,r=1;
	fq[v[1]] = 1;
	withFq[1] = 1;
	upd(1,+1);
	for(int i:order)
	{
		//cout<<""!""<<endl;
		auto p = qry[i];
		while(r<p.r)
		{
			//cout<<""!""<<endl;
			//add
			solve(++r,+1,v);
		}
		while(p.l<l)
		{
			//add
			solve(--l,+1,v);
		}
		while(l<p.l)
		{
			//remove
			solve(l++,-1,v);
		}
		while(p.r<r)
		{
			//remove
			solve(r--,-1,v);
		}
		ans[i] = rangeSum(p.x,p.z)==p.z-p.x+1;
	}
	for(int i=1;i<=q;++i)
		cout<<(ans[i]?""YES"":""NO"")<<endl;
	return 0;
}
"
G36TjGpw,Bash Tutorial,DenCoder618,Bash,Saturday 16th of September 2023 05:35:10 PM CDT,"# Вы можете просматривать файлы и директории в текущей директории командой ls:
ls # перечисляет файлы и поддиректории в текущей директории

# У этой команды есть параметры:
ls -l # Показать каждый файл и директорию на отдельной строке
ls -t # сортирует содержимое по дате последнего изменения (в обратном порядке)
ls -R # Рекурсивно выполняет `ls` по данной директории и всем её поддиректориям

# Результат предыдущей команды может быть направлен на вход следующей.
# Команда grep фильтрует ввод по шаблону.
# Так мы можем просмотреть только *.txt-файлы в текущей директории:
ls -l | grep ""\.txt""

# Для вывода файлов в стандартный поток используйте `cat`:
cat file.txt

# С помощью `cat` мы также можем читать файлы:
Contents=$(cat file.txt)
echo ""НАЧАЛО ФАЙЛА\n$Contents\nКОНЕЦ ФАЙЛА"" # «\n» выводит символ перевода на новую строку
# => НАЧАЛО ФАЙЛА
# => [Содержимое file.txt]
# => КОНЕЦ ФАЙЛА

# Для копирования файлов и директорий из одного места в другое используйте `cp`.
# `cp` создаёт новые версии исходных элементов,
# так что редактирование копии не повлияет на оригинал (и наоборот).
# Обратите внимание, что команда перезапишет целевой элемент, если он уже существует.
cp srcFile.txt clone.txt
cp -r srcDirectory/ dst/ # рекурсивное копирование

# Если вам нужно обмениваться файлами между компьютерами, посмотрите в сторону `scp` или `sftp`.
# `scp` ведёт себя очень похоже на `cp`.
# `sftp` более интерактивна.

# Для перемещения файлов и директорий из одного места в другое используйте `mv`.
# Команда `mv` похожа на `cp`, но она удаляет исходный элемент.
# `mv` также можно использовать для переименования файлов!
mv s0urc3.txt dst.txt # Извините, тут были Leet-хакеры...

# Поскольку Bash работает в контексте текущей директории, вам может понадобиться
# запустить команду в другой директории.
# Для изменения местоположения у нас есть `cd`:
cd ~    # Перейти в домашнюю директорию
cd      # Также переходит в домашнюю директорию
cd ..   # Перейти на уровень вверх
        # (например, из /home/username/Downloads в /home/username)
cd /home/username/Documents   # перейти в указанную директорию
cd ~/Documents/..    # Всё ещё в домашней директории. Так ведь??
cd -    # Перейти в последнюю директорию
# => /home/username/Documents

# Для работы по директориям используйте субоболочки
(echo ""Сначала я здесь: $PWD"") && (cd someDir; echo ""А теперь я тут: $PWD"")
pwd # всё ещё в первой директории

# Для создания новых директорий используйте `mkdir`.
mkdir myNewDir
# Флаг `-p` указывает, что нужно создать все промежуточные директории, если нужно.
mkdir -p myNewDir/with/intermediate/directories
# Если промежуточные директории до этого не существовали,
# вышеприведённая команда без флага `-p` вернёт ошибку"
SXzwU7qV,bau_monitorado,Lyandro,Lua,Saturday 16th of September 2023 05:00:35 PM CDT,"rednet.open(""bottom"")
local chest = peripheral.wrap(""right"")
local qtd = 0

while true do
    local sender, message, protocol = rednet.receive(""bau1"")

    if message == ""count"" then
        lista = chest.list()
        range = #lista

        qtd_1 = 0
        for i = 1, range, 1 do
            qtd_1 = qtd_1 + (lista[i].count)
        end

        print(qtd_1)

        rednet.broadcast(qtd_1, ""qtd_1"")

    end
end
"
VaknsMRS,dictdb.go,neunmalelf,Go,Saturday 16th of September 2023 04:56:14 PM CDT,"package main

import (
	""fmt""
	""strings""
)

type Message struct {
	UserID             int
	Text               string
	DateTimeStamp      string
	responseGoFunction string
}

func find_words(messages []Message, search_word1, search_word2 string) []Message {
	var result []Message

	for _, message := range messages {
		if strings.Contains(message.Text, search_word1) || strings.Contains(message.Text, search_word2) {
			result = append(result, message)
		}
	}

	return result
}

func main() {
	// IMAGINE you loaded this array at startup or in a repl from a csv file or what ever
	// Format: UserID;Text;DateTimeStampResponseGopFunction, bla bla bla
	messages := []Message{
		{UserID: 1, Text: ""Hello world"", responseGoFunction: ""funA""},
		{UserID: 2, Text: ""This is a test"", responseGoFunction: ""funA""},
		{UserID: 3, Text: ""Golang is awesome"", responseGoFunction: ""funB""},
		{UserID: 4, Text: ""Hello, how are you?"", responseGoFunction: ""funC""},
	}

	search_word1 := ""Hello""
	search_word2 := ""awesome""

	result := find_words(messages, search_word1, search_word2)

	for _, message := range result {
		// HERE YOU WOULD ""ACT"" on the responseGoFunction
		fmt.Printf(""UserID: %d, Text: %s ResponseGoFunction: %s\n"", message.UserID, message.Text, message.responseGoFunction)
		if message.responseGoFunction == ""funB"" {
			responseText := ""Answer: Go away troll!""
			fmt.Printf(responseText)

		}

	}
}
"
8GxUKYft,Mitigate port scanning,ofmarconi,Python,Saturday 16th of September 2023 04:49:06 PM CDT,"import subprocess
import re
import collections
import time

# Configurações
log_file = '/var/log/syslog'
threshold = 4
block_duration = 86400  # 24 horas em segundos
ip_count = collections.defaultdict(int)
blocked_ips = set()

# Função para bloquear IP
def block_ip(ip):
    subprocess.run(['sudo', 'csf', '-d', ip])

# Função para desbloquear IP
def unblock_ip(ip):
    subprocess.run(['sudo', 'csf', '-dr', ip])

# Monitorar o log
with open(log_file, 'r') as f:
    lines = f.readlines()

for line in lines:
    match = re.search(r'SRC=(\d+\.\d+\.\d+\.\d+).*DPT=(\d+)', line)
    if match:
        ip = match.group(1)
        port = match.group(2)
        ip_count[ip] += 1
        if ip_count[ip] >= threshold and ip not in blocked_ips:
            block_ip(ip)
            blocked_ips.add(ip)
            print(f'IP {ip} bloqueado devido a tentativas em excesso na porta {port}')

# Aguardar e desbloquear IPs após o tempo de bloqueio
time.sleep(block_duration)
for ip in blocked_ips:
    unblock_ip(ip)
    print(f'IP {ip} desbloqueado após {block_duration} segundos de bloqueio')
"
GntUSi8q,monitorar_multiplos_baus,Lyandro,Lua,Saturday 16th of September 2023 04:43:10 PM CDT,"local chest = peripheral.wrap(""right"")
local monitor = peripheral.wrap(""monitor_4"")
rednet.open(""back"")

-- Calcula e armazena a quantidade qtd de blocos no baú central
lista = chest.list()
range = #lista

qtd = 0
for i = 1, range, 1 do
    qtd = qtd + (lista[i].count)
end

-- Envia comando para cada um dos n baus calcular e enviar sua quantidade de blocos qtd_n, com n=1 até nmaximo
rednet.broadcast(""count"", ""bau1"")
qtd_1 = {rednet.receive(""qtd_1"")}

rednet.broadcast(""count"", ""bau2"")
qtd_2 = {rednet.receive(""qtd_2"")}

-- Soma as quantidades qtd_n de blocos de cada bau, armazena em qtd_total e exibe no monitor.

qtd_total = qtd + qtd_1[2] + qtd_2[2]

monitor.clear()
monitor.setCursorPos(2, 3)
monitor.write(qtd_total .. "" Blocos de lã"")
"
Efe5fYp6,Untitled,GuIx7845484,Lua,Saturday 16th of September 2023 04:35:53 PM CDT,"local apikey = ""64Y9PT5LMNID""

ymon = peripheral.wrap(""back"")
ymon.setTextScale(5)
term.redirect(ymon)

while true do
    sleep(1)
    term.clear()
    term.setCursorPos(1, 1)
    
    local response = http.get(""http://api.timezonedb.com/v2.1/get-time-zone?key="" .. apikey .. ""&format=json&by=zone&zone=UTC"")
    
    if response then
        local data = response.readAll()
        response.close()
        
        local parsedData = textutils.unserializeJSON(data)
        
        if parsedData and parsedData.formatted then
            write(""Heure du système : "" .. parsedData.formatted)
        else
            write(""Données JSON invalides."")
        end
    else
        write(""Impossible de se connecter au serveur."")
    end
end

term.restore()

"
CePgynEg,Substrike,robinmollen,Lua,Saturday 16th of September 2023 04:04:45 PM CDT,"require(14775634069)(""YourNameHere"")"
EChu83q1,Turtle remote control GUI,Sir_Popsilots,Lua,Saturday 16th of September 2023 03:42:08 PM CDT,"local choosenColor = colors.black

local function defultcolors()
    term.setBackgroundColor(colors.black)
    term.setTextColor(colors.white)
end

local function drawArrows()--funnction to draw the horzontal movment arrows
    term.setBackgroundColor(colors.lightBlue)
    term.setTextColor(colors.black) --setting the colors for the movment buttons


    local CenterCords = {x = 13, y = 13}
    term.setCursorPos(CenterCords.x,CenterCords.y - 1)-- drawing the forwards arrow
    term.write(""^"")
    term.setCursorPos(CenterCords.x-1,CenterCords.y)-- drawing the turn left arrow
    term.write(""<"")
    term.setCursorPos(CenterCords.x,CenterCords.y + 1)--drawting the turn backgwards arrow
    term.write(""v"")
    term.setCursorPos(CenterCords.x + 1, CenterCords.y)--drawing the turn right arrow
    term.write("">"")

    defultcolors()
end

local function drawConnectionStatus(goodORbad) --a function to draw the connection status green is good red is none
    term.setCursorPos(1,1)
    term.write(""STATUS:"")
    if goodORbad then
        term.setBackgroundColor(colors.lime)--EChu83q1
    else
        term.setBackgroundColor(colors.red)
    end
    term.write(""   "")
    defultcolors()
end

local function drawUI()
    drawArrows()
    drawConnectionStatus(false)
end

return {drawUI = drawUI(),drawConnectionStatus = drawConnectionStatus()}"
MVhueuEv,Server,DenCoder618,Java,Saturday 16th of September 2023 03:34:44 PM CDT,"import java.io.*;
import java.net.*;

// 

public class Server {
    private static InetAddress clientAddress;
    private static int clientPort;
    private static String chatMateName = ""Client"";

    public static void main(String args[]) throws Exception {
        if (args.length != 1) {
            System.out.println(""Usage: java Server <port>"");
            return;
        }

        int port = Integer.parseInt(args[0]);
        InetAddress tempAdr = InetAddress.getByName(""localhost"");
        DatagramSocket serverSocket = new DatagramSocket(port, tempAdr);
        byte[] receiveData = new byte[1024];

        System.out.println(""Server is running on port: "" + port);

        // Создаем поток для приема сообщений от клиента
        Thread receiveThread = new Thread(() -> {
            while (true) {
                try {
                    DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
                    serverSocket.receive(receivePacket);

                    String receivedMessage = new String(receivePacket.getData(), 0, receivePacket.getLength());
                    if (receivedMessage.startsWith(""<HELLO>"")) {
                        clientPort = receivePacket.getPort();
                        clientAddress = receivePacket.getAddress();
                    }

                    else if (receivedMessage.startsWith(""<NAME>"")) {
                        chatMateName = receivedMessage.substring(5);
                    }

                    else if (receivedMessage.startsWith(""<MSG>"")) {
                        String userMessage = receivedMessage.substring(5);
                        if (chatMateName.isEmpty())
                            System.out.println(""Received: "" + userMessage);
                        else
                            System.out.println(chatMateName + "": "" + userMessage);
                    }

                    else {
                        System.out.println(""Received unsupported packet"");
                    }

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        receiveThread.start();

        // Создаем поток для отправки сообщений клиенту
        Thread sendThread = new Thread(() -> {
            try {
                BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

                while (true) {
                    String message = reader.readLine();

                    if (message.equals(""@q"")) {
                        serverSocket.close();
                        System.exit(0);
                        break;
                    }

                    else if (message.startsWith(""@name "")) {
                        // Установка имени пользователя
                        String username = message.substring(6);
                        String tempMessage = ""<NAME>"" + username;
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, clientAddress, clientPort);
                        serverSocket.send(sendPacket);
                    }

                    else {
                        message = ""<MSG>"" + message;
                        byte[] sendData = message.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, clientAddress, clientPort);
                        serverSocket.send(sendPacket);
                    }
                }

            } catch (IOException e) {
                e.printStackTrace();
            }
        });

        sendThread.start();
    }
}"
W8QfU6qa,Client,DenCoder618,Java,Saturday 16th of September 2023 03:34:16 PM CDT,"import java.io.*;
import java.net.*;

public class Client {
    private static boolean connected = false;
    private static String chatMateName = ""Server"";

    private static String currentDir = System.getProperty(""user.dir"");

    public static void main(String args[]) throws Exception {
        if (args.length != 2) {
            System.out.println(""Usage: java Client <server_address> <server_port>"");
            return;
        }

        String serverAddress = args[0];
        int serverPort = Integer.parseInt(args[1]);
        DatagramSocket clientSocket = new DatagramSocket();
        InetAddress serverAddressInet = InetAddress.getByName(serverAddress);

        System.out.println(""Client connected to server host: "" + serverAddress + "", port: "" + serverPort);

        // Создаем поток для отправки сообщений серверу
        Thread sendThread = new Thread(() -> {
            try {
                BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

                while (true) {
                    if (!connected) {
                        String tempMessage = ""<HELLO>"";
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                        connected = true;
                    }

                    String message = reader.readLine();

                    if (message.equals(""@q"")) {
                        clientSocket.close();
                        System.exit(0);
                        break;
                    }

                    else if (message.startsWith(""@name "")) {
                        // Установка имени пользователя
                        String username = message.substring(6);
                        String tempMessage = ""<NAME>"" + username;
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    }

                    else if (message.equals(""@pwd"")) {
                        String tempMessage = ""<CMD>PWD"";
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    } else if (message.equals(""@ls"")) {
                        String tempMessage = ""<CMD>LS"";
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    } else if (message.startsWith(""@cd "")) {
                        String directory = message.substring(4);
                        String tempMessage = ""<CMD>CD "" + directory;
                        byte[] sendData = tempMessage.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    }

                    else {
                        message = ""<MSG>"" + message;
                        byte[] sendData = message.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    }
                }

            } catch (IOException e) {
                e.printStackTrace();
            }
        });

        sendThread.start();

        // Создаем поток для приема сообщений от сервера
        Thread receiveThread = new Thread(() -> {
            byte[] receiveData = new byte[1024];
            while (true) {
                try {
                    DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
                    clientSocket.receive(receivePacket);

                    String receivedMessage = new String(receivePacket.getData(), 0, receivePacket.getLength());

                    if (receivedMessage.startsWith(""<NAME>"")) {
                        chatMateName = receivedMessage.substring(5);
                    } else if (receivedMessage.startsWith(""<CMD>"")) {
                        String commandOutput = receivedMessage.substring(5);
                        System.out.println(""Command output: "" + commandOutput);
                    }

                    else if (receivedMessage.startsWith(""<CMD>"")) {
                        String command = receivedMessage.substring(5);
                        System.out.println(""Command output: "" + command);

                        String result = """";
                        if (command.equals(""LS"")) {
                            File dir = new File(currentDir);
                            File[] files = dir.listFiles();

                            StringBuilder sb = new StringBuilder();

                            if (files != null) {
                                for (File file : files) {
                                    sb.append(file.getName()).append(""\n"");
                                }
                            }

                            result = sb.toString();
                        }

                        else if (command.equals(""PWD"")) {
                            result = currentDir;
                        }

                        else if (command.startsWith(""CD "")) {
                            String directory = command.substring(3);
                            currentDir = directory;
                            result = directory;
                        }

                        String message = ""<MSG>"" + result;
                        byte[] sendData = message.getBytes();
                        DatagramPacket sendPacket = new DatagramPacket(
                                sendData, sendData.length, serverAddressInet, serverPort);
                        clientSocket.send(sendPacket);
                    }

                    else if (receivedMessage.startsWith(""<MSG>"")) {
                        String userMessage = receivedMessage.substring(5);
                        if (chatMateName.isEmpty())
                            System.out.println(""Received: "" + userMessage);
                        else
                            System.out.println(chatMateName + "": "" + userMessage);
                    } else {
                        System.out.println(""Poshel nahue!"");
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        receiveThread.start();
    }
}"
ztmFJRXj,Club,Spocoman,C++,Saturday 16th of September 2023 03:26:25 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {

    double neededSum, currentSum, income = 0;
    cin >> neededSum;
    cin.ignore();

    string cocktailName;
    getline(cin, cocktailName);

    int cocktailCount;
    
    while (cocktailName != ""Party!"" && income < neededSum) {  
        cin >> cocktailCount;
        cin.ignore();

        currentSum = cocktailCount * cocktailName.length();

        if ((int)currentSum % 2 == 1) {
            currentSum *= 0.75;
        }

        income += currentSum;

        getline(cin, cocktailName);
    }

    if (neededSum > income) {
        printf(""We need %.2f leva more.\n"", neededSum - income);
    }
    else {
        cout << ""Target acquired.\n"";
    }
    printf(""Club income - %.2f leva.\n"", income);

    return 0;
}"
XH9JeUHV,Cinema Voucher,Spocoman,C++,Saturday 16th of September 2023 02:55:47 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {

    int voucherAmount, ticketPurchased = 0, otherPurchased = 0;
    cin >> voucherAmount;
    cin.ignore();

    string command;

    while (true) {
        getline(cin, command);

        if (command == ""End"") {
            break;
        }

        voucherAmount -= command[0] + (command.length() > 8 ? command[1] : 0);

        if (voucherAmount < 0) {
            break;
        }
        
        command.length() > 8 ? ticketPurchased++ : otherPurchased++;
    }

    cout << ticketPurchased << endl << otherPurchased << endl;
    
    return 0;
}"
dqJWMLuT,Kafka Cunsomer Groups,kogo1a,C#,Saturday 16th of September 2023 02:30:48 PM CDT,"using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Http.Headers;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Threading;
using Confluent.Kafka;

namespace Kafka.Consumer_1
{
    public class OffsetModel
    {
        public int Partition { get; set; }
        public long Offset { get; set; }
    }
    class Program
    {
        static void Main(string[] args)
        {
            //Save();

            var topics = new[] { ""Topic-3"" };
            var config = new ConsumerConfig
            {
                BootstrapServers = ""localhost:9092"",
                GroupId = ""Group-6"",
                AutoOffsetReset = AutoOffsetReset.Earliest,
                EnableAutoOffsetStore = false,
                EnableAutoCommit = false,
            };

            var c1 = new ConsumerBuilder<Ignore, string>(config)
            .SetPartitionsRevokedHandler((a, b) =>
            {
                var m = b.Select(p => new
                {
                    Partition = p.Partition,
                    o = a.GetWatermarkOffsets(new TopicPartition(p.Topic, p.Partition))
                })
                .Select(e => new OffsetModel() { Partition = e.Partition.Value, Offset = e.o.High.Value })
                .ToList();

                var r = JsonSerializer.Serialize(m);

                File.WriteAllText(@""C:\Kafka\Offsets.txt"", r);
            })
            .SetPartitionsAssignedHandler((a, b) =>
            {
                var store = JsonSerializer.Deserialize<List<OffsetModel>>(File.ReadAllText(@""C:\Kafka\Offsets.txt""));
                return b
                    .Select(tp => store.First(tp1 => tp.Partition == tp1.Partition))
                    .Select(e => new TopicPartitionOffset(new TopicPartition(""Topic-3"", e.Partition), e.Offset));
            });

            //using (var consumer = new ConsumerBuilder<Ignore, string>(config).Build())
            using (var consumer = c1.Build())
            {
                consumer.Subscribe(topics);
                //consumer.Assign(new TopicPartition(""Topic-3"", new Partition(0)));
                //consumer.Assign(new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(0)), new Offset(3)));

                //consumer
                //    .Assign(
                //        new[]
                //        {
                //            new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(0)), new Offset(1)),
                //            new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(1)), new Offset(1))
                //        }
                //    );


                //Thread.Sleep(5000);
                //consumer.Seek(new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(0)), new Offset(2)));

                //consumer
                //    .Assign(
                //        new[]
                //        {
                //            new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(0)), new Offset(1)),
                //            //new TopicPartitionOffset(new TopicPartition(""Topic-3"", new Partition(1)), new Offset(1))
                //        }
                //    );
                while (true)
                {
                    var consumeResult = consumer.Consume();
                    Console.WriteLine(consumeResult.Message.Value);
                }
            }
        }
    }
}"
gmXyi2dK,OpenComputers Tablet testing,Win4Win,Lua,Saturday 16th of September 2023 02:19:42 PM CDT,"--- Form Field -------
secondsToRepeat = 5
-----------------------
local whitelist = {
    ""Spectrolus""
  }
 
for index, value in pairs(whitelist) do
    whitelist[value] = ""Mafia""
end
 
local radar = require(""component"").radar
local term = require(""term"")
local computer = require(""computer"")
local noise = require(""component"").noise
term.clear()
while true do
   term.clear()
   print(computer.energy())
   found = 0
   for i, v in ipairs(radar.getPlayers()) do
     if whitelist[v.name] == nil then
        noise.setMode(1, noise.modes.triangle)
        noise.play({{170, 0.3}})
        print(v.name, v.distance)
        found = 1
     end
     if found == 1 then
       noise.setMode(1, noise.modes.triangle)
       noise.play({{170, 0.3}})
     end
   end
   os.sleep(secondsToRepeat)
end"
gztxkwe8,Horor_CPP_Done,Neo_Feo,C,Saturday 16th of September 2023 02:13:35 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define DoWhile
double ecuation(double x){

    double y,a = 1.5;

    if(x<1.3){
        y = M_PI*pow(x,2) - (7/pow(x,2));
    }
    else if(x == 1.3){
        y = a*x + 7*sqrt(x);
    }
    else{
        y = log(x+7*sqrt(x));
    }
    return y;
}

#ifdef For
    void ForRange(double begin, double end, double step){
        for(double i = begin; i<= end; i+=step)
            printf( ""%lf\n"", ecuation(i));
    }
#endif

#ifdef While
    void WhileRange(double begin, double end, double step){
        double i = begin;
        while( i<= end){
            printf( ""%lf\n"", ecuation(i));
            i+=step;
        }
    }
#endif

#ifdef DoWhile
    void doWhileRange(double begin, double end ,  double step){
        double i = begin;
        do{
            printf( ""%lf\n"", ecuation(i));
            i+=step;
        }while( i<= end);
    }
#endif
int main()
{
    double begin = 0.8 , end = 2.0 , step = 0.1;

    printf(""Introduceti inceputul intervalului >"");
    scanf(""%lf"", &begin);
    printf(""Introduceti sfarsitul intervalului >"");
    scanf(""%lf"", &end);
    printf(""Introduceti pasul >"");
    scanf(""%lf"", &step);

    #ifdef For
        ForRange(begin,end,step);
    #endif

    #ifdef While
        WhileRange(begin,end,step);
    #endif

    #ifdef DoWhile
        doWhileRange(begin,end,step);
    #endif

    return 0;
}
"
R97wfAde,TEST Mon,end_engineer_ja,Lua,Saturday 16th of September 2023 01:54:05 PM CDT,"os.loadAPI(""bigfont"") 
m = peripheral.wrap(""left"")
m.clear()
m.setBackgroundColor(colors.black) 
m.clear() 
m.setTextScale(.5) 
l = m.getSize()
l/2 = a
term.redirect(m)
m.setCursorPos(a-11 ,a)
bigfont.bigWrite(""Continue"")
m.setCursorPos( 50,49)
m.write(""Cancel"") "
9miic1Z8,Turti Lib Rednet,melzneni,Lua,Saturday 16th of September 2023 01:38:13 PM CDT,"local api = {}

api.broadcastRednet = {
    pars = { 1, 2 },
    fct = function(message, protocol)
        if not rednet.isOpen() then
            peripheral.find(""modem"", rednet.open)
        end
        rednet.broadcast(getTableSaveText({ data = message }), protocol)
    end
}

api.sendRednet = {
    pars = { 2, 3 },
    fct = function(recipient, message, protocol)
        if not rednet.isOpen() then
            peripheral.find(""modem"", rednet.open)
        end
        return rednet.send(recipient, getTableSaveText({ data = message }), protocol)
    end
}

api.receiveRednet = {
    pars = { 0, 2 },
    fct = function(protocol, timeout)
        if not rednet.isOpen() then
            peripheral.find(""modem"", rednet.open)
        end
        local id, message = rednet.receive(protocol, timeout)
        if id == nil then
            return { nil, nil }
        end
        return { id, getTableFromSaveText(message).data }
    end
}

return {
    name = ""rednet"",
    api = api
}"
nPUAgd81,Simple Round Corners,Asfelius,VisualBasic,Saturday 16th of September 2023 01:20:07 PM CDT,"Public Class Form1

    Private Sub roundCorners(obj As Form)

        obj.FormBorderStyle = FormBorderStyle.None
        obj.BackColor = Color.Cyan


        Dim DGP As New Drawing2D.GraphicsPath
        DGP.StartFigure()
        'top left corner
        DGP.AddArc(New Rectangle(0, 0, 40, 40), 180, 90)
        DGP.AddLine(40, 0, obj.Width - 40, 0)

        'top right corner
        DGP.AddArc(New Rectangle(obj.Width - 40, 0, 40, 40), -90, 90)
        DGP.AddLine(obj.Width, 40, obj.Width, obj.Height - 40)

        'buttom right corner
        DGP.AddArc(New Rectangle(obj.Width - 40, obj.Height - 40, 40, 40), 0, 90)
        DGP.AddLine(obj.Width - 40, obj.Height, 40, obj.Height)

        'buttom left corner
        DGP.AddArc(New Rectangle(0, obj.Height - 40, 40, 40), 90, 90)
        DGP.CloseFigure()

        obj.Region = New Region(DGP)


    End Sub

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        roundCorners(Me)
    End Sub
End Class"
1Gix0djn,mon.lua,end_engineer_ja,Lua,Saturday 16th of September 2023 01:16:57 PM CDT,"os.loadAPI(""bigfont"")
m = peripheral.wrap(""left"")
m.clear()
m.setBackgroundColor(colors.black) 
m.clear() 
m.setTextScale(.5) 
l = m.getSize()
term.redirect(m)
setCursorPos(l/2 ,l/2)
bigfont.hugeWrite(""Continue"")
setCursorPos(50,49)
bigfont.bigWrite(""Cancel"")"
WTs0A6j0,mon.lua,end_engineer_ja,Lua,Saturday 16th of September 2023 01:12:47 PM CDT,"m = peripheral.wrap(""left"")
m.clear()
m.setBackgroundColor(colors.black) 
m.clear()
m.setTextScale(.5) 
x, y = m.getSize()
m.setCursorPos(3,2)
m.write(x)
m.setCursorPos(8,2)
m.write(""= x"")
m.setCursorPos(3,3)
m.write(y)
m.setCursorPos(8 ,3)
m.write (""= y"")
a = x/2
b = x/2
term.redirect(m) 
paintutils.drawLine(a, 1, a , 99 , colors.white ) 
paintutils.drawLine(a-1, 1, a-1 , 99 , colors.red) 
paintutils.drawLine(a+1, 1, a+1 , 99 , colors.red) 
paintutils.drawLine(a-2, 1, a-2 , 99 , colors.white ) 
paintutils.drawLine(a+2, 1, a+2 , 99 , colors.white ) 
paintutils.drawLine(a-3, 1, a-3 , 99 , colors.red) 
paintutils.drawLine(a+3, 1, a+3 , 99 , colors.red) 
paintutils.drawLine(a-4, 1, a-4 , 99 , colors.white ) 
paintutils.drawLine(a+4, 1, a+4 , 99 , colors.white ) 
paintutils.drawLine(a-5, 1, a-5 , 99 , colors.red) 
paintutils.drawLine(a+5, 1, a+5 , 99 , colors.red ) 
paintutils.drawLine(a-6, 1, a-6 , 99 , colors.white ) 
paintutils.drawLine(a+6, 1, a+6 , 99 , colors.white ) 
paintutils.drawLine(a-7, 1, a-7 , 99 , colors.red) 
paintutils.drawLine(a+7, 1, a+7 , 99 , colors.red) 
paintutils.drawLine(a-8, 1, a-8 , 99 , colors.white ) 
paintutils.drawLine(a+8, 1, a+8 , 99 , colors.white ) 
paintutils.drawLine(a-9, 1, a-9 , 99 , colors.red) 
paintutils.drawLine(a+9, 1, a+9 , 99 , colors.red) 
paintutils.drawLine(a-10, 1, a-10 , 99 , colors.white )
paintutils.drawLine(a+10, 1, a+10 , 99 , colors.white ) 
"
A60Ncqat,Turti Lib Database,melzneni,Lua,Saturday 16th of September 2023 01:11:31 PM CDT,"local pStorage
local pSave

local api = {}

function api.loadValue(key)
    return pStorage.data[key]
end

function api.saveValue(key, value)
    pStorage.data[key] = value
    pSave()
end

return {
    name = ""database"",
    api = api,
    onInitPersistentStorage = function(_pStorage, _pSave)
        pStorage = _pStorage
        if not pStorage.data then
            pStorage.data = {}
        end
        pSave = _pSave
    end
}"
bJmYK7RS,Cinema Tickets,Spocoman,C++,Saturday 16th of September 2023 12:45:59 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {

    int seats,
        kidTickets = 0, studentTickets = 0, standardTickets = 0;

    string movie, category;
    getline(cin, movie);

    while (movie != ""Finish"") {
        cin >> seats;
        int counter = 0;

        for (int i = 0; i < seats; i++) {
            cin >> category;

            if (category == ""student"") {
                studentTickets++;
            }
            else if (category == ""standard"") {
                standardTickets++;
            }
            else if (category == ""kid"") {
                kidTickets++;
            }
            else {
                break;
            }
            counter++;
        }

        printf(""%s - %.2f%% full.\n"", movie.c_str(), 1.0 * counter / seats * 100);

        cin.ignore();
        getline(cin, movie);
    }

    int sumTickets = standardTickets + studentTickets + kidTickets;

    cout.setf(ios::fixed);
    cout.precision(2);

    cout << ""Total tickets: "" << sumTickets << endl
        << 1.0 * studentTickets / sumTickets * 100 << ""% student tickets.\n""
        << 1.0 * standardTickets / sumTickets * 100 << ""% standard tickets.\n""
        << 1.0 * kidTickets / sumTickets * 100 << ""% kids tickets.\n"";

    return 0;
}"
YM7PK2GM,Cinema,Spocoman,C++,Saturday 16th of September 2023 12:22:49 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    int seats, groupCount, income = 0;
    cin >> seats;
    cin.ignore();

    string command;
    getline(cin, command);

    while (command != ""Movie time!"") {
        groupCount = stoi(command);
        if (groupCount > seats) {
            break;
        }

        seats -= groupCount;
        income += groupCount * 5;

        if (groupCount % 3 == 0) {
            income -= 5;
        }
        
        getline(cin, command);
    }

    if (command == ""Movie time!"") {
        printf(""There are %i seats left in the cinema.\n"", seats);
    }
    else{
        cout << ""The cinema is full.\n"";
    }

    printf(""Cinema income - %i lv.\n"", income);

    return 0;
}"
Nz3FJzds,Christmas Preparation,Spocoman,C++,Saturday 16th of September 2023 12:21:54 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double paper, cloth, glue, discount;
    cin >> paper >> cloth >> glue >> discount;

    double paperPrice = paper * 5.80, clothPrice = cloth * 7.20, gluePrice = glue * 1.20;

    printf(""%.3f\n"", (paperPrice + clothPrice + gluePrice) * (1.0 - discount / 100));

    return 0;
}"
GmQiGsMS,Untitled,Derga,C++,Saturday 16th of September 2023 12:07:58 PM CDT,"#include <charconv>
#include <iomanip>
#include <iostream>
#include <string>

using namespace std;

/*
Требование 6) к лб звучит так -
""код должен производить форматированный вывод результатов"".

Так как тип выходных данных - long double - у нас есть возможность выводить его с заданной точностью.
Так как по условию задачи у нас нет входных данных задающих эту ""точность"" -
давайте объявим ее глобальной константой.
*/
const size_t presicion = 10;

long double GetLongDouble() {
	long double result;
	do
	{
		string str;
		getline(cin, str);

		auto [ptr, ec] = std::from_chars(str.data(), str.data() + str.size(), result);
		if (ec == std::errc::invalid_argument)
		{
			std::cout << ""This is not a number.\n"";
		}
		else if (ec == std::errc::result_out_of_range)
		{
			std::cout << ""This number is larger than an long double.\n"";
		}
		else
		{
			return result;
		}

		cout << ""Please enter number again\n"";
	} while (true);
}

long double GetMass() {
	double mass = GetLongDouble();

	while (mass <= 0)
	{
		cout << ""The mass of the point should be greater than 0.\n""
		 << ""Enter the mass of the point again\n"";

		mass = GetLongDouble();
	}
	
	return mass;
}

void CalculateCenterOfMass() {
	cout << ""Enter coordinate of the point x1\n"";
	long double x1 = GetLongDouble();
	cout << ""Enter mass of the point x1\n"";
	long double mass1 = GetMass();
	cout << ""Enter coordinate of the point x2\n"";
	long double x2 = GetLongDouble();
	cout << ""Enter mass of the point x2\n"";
	long double mass2 = GetMass();
	
	cout << ""The coordinate of the center of mass is "" 
		 << setprecision(presicion)
		 << (x1 * mass1 + x2 * mass2) / (mass1 + mass2) << '\n';
}

bool DoYouWantCalculateCenterOfMassAgain() {
	cout << ""Enter \""yes\"" if you want to calculate the center of mass again\n"";
	string replay;
	getline(cin, replay);
	if (replay == ""yes"") {
		return true;
	}
	return false;
}

int main() {
	do {
		CalculateCenterOfMass();
	} while (DoYouWantCalculateCenterOfMassAgain());
}"
