id,title,username,language,date,content
tmVsH5Bh,AWS S3 File History Backup,technotr0n_,Python,Tuesday 23rd of January 2024 11:48:53 PM CDT,"import os
import boto3
import datetime
from botocore.exceptions import NoCredentialsError

def download_previous_version(bucket_name, key, version_id, download_path):
    s3 = boto3.client('s3')

    try:
        response = s3.download_file(bucket_name, key, download_path, ExtraArgs={'VersionId': version_id})
        print(f""Downloaded previous version: {version_id} of file: {key} to {download_path}"")
    except NoCredentialsError:
        print(""Credentials not available"")

def move_file(file_path, destination_folder):
    shutil.move(file_path, destination_folder)
    print(f""Moved file: {file_path} to {destination_folder}"")

def lambda_handler(event, context):
    # Get the S3 bucket and key from the Lambda event
    bucket_name = event['Records'][0]['s3']['bucket']['name']
    key = event['Records'][0]['s3']['object']['key']

    # Set the path for downloading the previous version
    download_path = '/tmp/previous_version.txt'

    # Set the destination folder for moved files
    destination_folder = '/tmp/moved_files/'

    # Check if the file has been updated
    current_timestamp = datetime.datetime.utcnow()
    file_timestamp = current_timestamp

    # Replace this with the logic to get the last modified timestamp of the file
    # Example: file_timestamp = get_file_last_modified_timestamp(bucket_name, key)

    if file_timestamp > current_timestamp:
        # Get the previous version ID from S3 versioning
        s3 = boto3.client('s3')
        response = s3.list_object_versions(Bucket=bucket_name, Prefix=key)
        versions = response.get('Versions')

        if versions:
            # Sort versions by last modified time in descending order
            sorted_versions = sorted(versions, key=lambda x: x['LastModified'], reverse=True)

            # Get the version ID of the previous version
            previous_version_id = sorted_versions[1]['VersionId']

            # Download the previous version
            download_previous_version(bucket_name, key, previous_version_id, download_path)

            # Move the previous version to the destination folder
            move_file(download_path, destination_folder)
        else:
            print(f""No previous versions found for file: {key}"")

    else:
        print(f""File: {key} is not updated. No action required."")

# Uncomment the following line if you need to test the script locally
# lambda_handler({""Records"": [{""s3"": {""bucket"": {""name"": ""your-bucket-name""}, ""object"": {""key"": ""your-file-key""}}}]}, None)
"
s42hhJ91,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Tuesday 23rd of January 2024 11:47:17 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

801232"
uk2igWWd,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Tuesday 23rd of January 2024 11:08:07 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_768508.pdf
 
Working as of
24 January 2024"
BzmG0QRs,邀您一起看：云口令,xiaomianao666,JavaScript,Tuesday 23rd of January 2024 11:05:10 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9pckZ1cjFsNGd3ZWpcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
3Dm5XpGi,ListIconGadget с подсвечиванием текста,AZJIO,PureBasic,Tuesday 23rd of January 2024 10:23:11 PM CDT,"

#LV0 = 0


Global BackColor = $3f3f3f
Global ForeColor = $cccccc
Global BackColorHeader = $222222
Global ForeColorHeader = $72ADC0
Global BorderColor = $888888
; Global HightLightBrush = CreateSolidBrush_(GetSysColor_(#COLOR_HIGHLIGHT))
Global HightLightBrush = CreateSolidBrush_($423926)
Global BackColorBrush = CreateSolidBrush_(BackColor)
Global BackColorBrushHeader = CreateSolidBrush_(BackColorHeader)


Global frmMain_References, hHeader
Global Dim Colors(1)

Colors(0) = $8080FF
Colors(1) = ForeColor

; ---------------------------------------------------------------------------------------------------------------------

Procedure.s LTrimChar(String$, TrimChar$ = #CRLF$ + #TAB$ + #FF$ + #VT$ + "" "")
	Protected *jc0, *c.Character, *jc.Character

	If Not Asc(String$)
		ProcedureReturn """"
	EndIf

	*c = @String$
	*jc0 = @TrimChar$

	While *c\c
		*jc = *jc0

		While *jc\c
			If *c\c = *jc\c
				*c\c = 0
				Break
			EndIf
			*jc + SizeOf(Character)
		Wend

		If *c\c
			String$ = PeekS(*c)
			Break
		EndIf
		*c + SizeOf(Character)
	Wend

	ProcedureReturn String$
EndProcedure



Procedure GetCharWidth(gad, c$)
	ProcedureReturn SendMessage_(gad, #LVM_GETSTRINGWIDTH, 0, @c$)
EndProcedure

; это подкрашивает части пункта в ListView
Procedure Callback_Win(hwnd, msg, wParam, lParam)
	Protected Result, *nmhdr.NMHDR, *lvCD.NMLVCUSTOMDRAW, subItemRect.RECT, *DrawItem.DRAWITEMSTRUCT, Buffer.s
	Protected *pnmcd.NMCUSTOMDRAW, hdi.hd_item
	Protected thisRow, thisCol, idx
	Protected t$, text$
	Protected nNotifyCode
	Protected *NMITEM.NMITEMACTIVATE
	Protected SelectedLine

	Result = #PB_ProcessPureBasicEvents
	;;Dim LVColor(0)

	Select msg

		Case #WM_NCDESTROY ; удаление кистей, после закрытия программы
			DeleteObject_(HightLightBrush)
			DeleteObject_(BackColorBrush)
			DeleteObject_(BackColorBrushHeader)

		Case #WM_NOTIFY
			; стандартные структуры ListView для перерисовки
			*nmhdr.NMHDR = lParam
			*lvCD.NMLVCUSTOMDRAW = lParam
			*NMITEM.NMITEMACTIVATE = lParam
			
; 			если гаджет #LV0 и он пользовательская рисовка, то
			If *lvCD\nmcd\hdr\hwndFrom = GadgetID(#LV0) And *lvCD\nmcd\hdr\code = #NM_CUSTOMDRAW
				Select *lvCD\nmcd\dwDrawStage
					Case #CDDS_PREPAINT
						Result = #CDRF_NOTIFYITEMDRAW
					Case #CDDS_ITEMPREPAINT
						Result = #CDRF_NOTIFYSUBITEMDRAW;
					Case #CDDS_ITEMPREPAINT | #CDDS_SUBITEM ; перерисовка пункта
						thisRow = *lvCD\nmcd\dwItemSpec ; строку
						thisCol = *lvCD\iSubItem ; колонка
						If thisCol = 0 ; если колонка 0, то
							; Определяет прямоугольник для текста
; 							subItemRect.RECT\left = #LVIR_LABEL ; поле left равно константе?
; 							subItemRect.RECT\top = *lvCD\iSubItem ; верх = номер подпункта?
							; Определяет прямоугольник подпункт
							SendMessage_(GadgetID(#LV0), #LVM_GETSUBITEMRECT, thisRow, @subItemRect) ; в итоге переписываем структуру прямоугольника

							text$ = GetGadgetItemText(#LV0, thisRow, thisCol) ; получаем текст пункта по строке и колонке

							If GetGadgetState(#LV0) = thisRow ; если индекс выделенного элемента равен пункту, то
								; выделенный пункт, перекрашиваем его фон
								FillRect_(*lvCD\nmcd\hdc, subItemRect, BackColorBrush)
							Else
								; не выделенный пункт, перекрашиваем его другим фоном
								FillRect_(*lvCD\nmcd\hdc, subItemRect, BackColorBrushHeader)
							EndIf
							InflateRect_(subItemRect, -8, 0) ; изменяет левую границу прямоугольника на 8 пиксел

							#SelectedWordMarker$ = ""|"" ; импортированный разделитель чтобы подсветить часть текста между разделителями.
							For idx = 1 To CountString(text$, #SelectedWordMarker$) + 1 ; до числа разделителей
								t$ = StringField(text$, idx, #SelectedWordMarker$) ; получаем поле 1, 2, 3 по очереди
								If t$
									SetTextColor_(*lvCD\nmcd\hdc, colors(idx & 1)) ; чётные/нечетные части текста
									SetBkColor_(*lvCD\nmcd\hdc, BackColor) ; фон всегда одинаковый
									DrawText_(*lvCD\nmcd\hdc, t$, -1, subItemRect, #DT_END_ELLIPSIS | #DT_VCENTER | #DT_SINGLELINE) ; рисуем текст
									subItemRect\left + GetCharWidth(*nmhdr\hwndFrom, t$) ; смещение от предыдущего нарисованного текста, чтобы нарисовать следующий текст. Отступ, от которого красить очередную часть нарисованную правее.
								EndIf
							Next idx
							Result = #CDRF_SKIPDEFAULT
						Else
							Result = #CDRF_DODEFAULT
						EndIf
				EndSelect
			EndIf
	EndSelect
	ProcedureReturn Result
EndProcedure

; это подкрашивает заголовок ListView
Procedure Callback_Header(hWnd, Message, wParam, lParam)
	Protected *Header.HD_NOTIFY, SelectedLine, *lvCD.NMLVCUSTOMDRAW
	Protected *nmhdr.NMHDR, text$, *pnmcd.NMCUSTOMDRAW, hdi.hd_item
	Protected rc2.RECT, hDC
	Protected Result = CallWindowProc_(frmMain_References, hWnd, Message, wParam, lParam)


	*Header = lParam
	*nmhdr = lParam
	*lvCD = lParam
	Select Message
		Case #WM_NOTIFY
			Select *Header\hdr\code
				Case #NM_CUSTOMDRAW
					If *nmhdr\hwndFrom = hHeader
						*pnmcd.NMCUSTOMDRAW = lParam
						Select *pnmcd\dwDrawStage
							Case #CDDS_PREPAINT
								result = #CDRF_NOTIFYITEMDRAW
							Case #CDDS_ITEMPREPAINT
								text$ = GetGadgetItemText(GetDlgCtrlID_(hWnd), -1, *pnmcd\dwItemSpec)
								hdi\mask = #HDI_TEXT
								hdi\psztext = @text$
								hdi\cchtextmax = Len(text$)
								SetBkMode_(*pnmcd\hdc, #TRANSPARENT)
								FillRect_(*pnmcd\hdc, *pnmcd\rc, BackColorBrushHeader)
								; 								сдвигаем текст после закрашивания прямоуголников
								If *lvCD\nmcd\dwItemSpec
									InflateRect_(*pnmcd\rc, -8, 0)
									text$ = LTrimChar(text$, "" "" + #TAB$)
								Else
									InflateRect_(*pnmcd\rc, -4, 0)
								EndIf
								SetTextColor_(*pnmcd\hdc, ForeColorHeader)
								DrawText_(*pnmcd\hdc, @text$, Len(text$), *pnmcd\rc, #DT_VCENTER | #DT_END_ELLIPSIS)
								result = #CDRF_SKIPDEFAULT
						EndSelect
					EndIf
			EndSelect
	EndSelect
	ProcedureReturn Result
EndProcedure


;- ╔═ GUI ═╗
If OpenWindow(0, 0, 0, 420, 400, ""Пример..."", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
	; 	ButtonGadget(1, 10, 10, 18, 30, Chr($205E)) ; ⁞ (меню)

	ListIconGadget(#LV0, 10, 10, 400, 380, ""Колонка"", 400, #PB_ListIcon_GridLines)
	For a = 0 To 4
		AddGadgetItem(#LV0, a, ""раз-|два|-три"")
	Next
	SetGadgetColor(#LV0, #PB_Gadget_BackColor, BackColorHeader)


	;     ListViewGadget(0, 10, 10, 400, 380)
	;     For a = 1 To 12
	;     	AddGadgetItem(0, -1, ""Элемент  "" + Str(a) + ""  Списка"") ; Определить содержимое списка.
	;     Next
	SetWindowCallback(@Callback_Win())
	hHeader = SendMessage_(GadgetID(#LV0), #LVM_GETHEADER, 0, 0)
	frmMain_References = SetWindowLongPtr_(GadgetID(#LV0), #GWL_WNDPROC, @Callback_Header())
; 	SetBkColor_(hHeader, BackColor)



	;- Loop
	Repeat
		Select WaitWindowEvent()
			Case #PB_Event_CloseWindow
				CloseWindow(0)
				End
		EndSelect
	ForEver
EndIf"
vZn5s88g,decode ROT13,paperline27,Python,Tuesday 23rd of January 2024 09:47:42 PM CDT,"import codecs

# Meminta pengguna untuk memasukkan pesan terenkripsi
pesan_terenkripsi = input(""Masukkan pesan terenkripsi: "")

# Dekripsi pesan dengan ROT13
pesan_terdekripsi = codecs.decode(pesan_terenkripsi, 'rot_13')

# Tampilkan pesan terdekripsi
print(""Pesan terdekripsi:"", pesan_terdekripsi)"
ryVFQxkA,soal ctf kategori reverse engineering,paperline27,C,Tuesday 23rd of January 2024 09:30:21 PM CDT,"#include <stdio.h>

int main() {
    char password[] = ""p@ssw0rd"";
    char input[20];

    printf(""Masukkan password: "");
    scanf(""%s"", input);

    if(strcmp(input, password) == 0) {
        printf(""Password benar!\n"");
    } else {
        printf(""Password salah!\n"");
    }

    return 0;
}"
5YnpAzBn,BinarytoHex,paperline27,C,Tuesday 23rd of January 2024 09:17:48 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Fungsi untuk mengonversi empat bit biner ke karakter heksadesimal
char binaryToHex(char* binary) {
    int decimal = strtol(binary, NULL, 2);

    if (decimal >= 0 && decimal <= 9) {
        return '0' + decimal;
    } else if (decimal >= 10 && decimal <= 15) {
        return 'A' + (decimal - 10);
    } else {
        return '\0'; // Mengembalikan karakter nol jika konversi tidak valid
    }
}

// Fungsi untuk mengonversi bilangan biner ke heksadesimal
void binaryToHexadecimal(const char* binaryString) {
    printf(""Binary: %s\nHexadecimal: "", binaryString);

    // Menambahkan padding nol jika panjang biner tidak kelipatan 4
    int padding = 4 - (strlen(binaryString) % 4);
    char paddedBinary[256];
    strcpy(paddedBinary, binaryString);
    for (int i = 0; i < padding; i++) {
        strcat(paddedBinary, ""0"");
    }

    // Mengonversi setiap blok empat bit ke karakter heksadesimal
    for (int i = 0; i < strlen(paddedBinary); i += 4) {
        char fourBits[5];
        strncpy(fourBits, paddedBinary + i, 4);
        fourBits[4] = '\0';

        char hexChar = binaryToHex(fourBits);
        if (hexChar != '\0') {
            printf(""%c"", hexChar);
        } else {
            printf(""Bilangan biner tidak valid.\n"");
            return;
        }
    }

    printf(""\n"");
}

int main() {
    char input[256];

    // Meminta input dari pengguna
    printf(""Masukkan bilangan biner: "");
    scanf(""%s"", input);

    // Memanggil fungsi untuk mengonversi biner ke heksadesimal
    binaryToHexadecimal(input);

    return 0;
}
"
aqp2rzQq,HextoBinary,paperline27,C,Tuesday 23rd of January 2024 09:05:50 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Fungsi untuk mengonversi karakter heksadesimal ke nilai desimal
int hexToDecimal(char hex) {
    if (hex >= '0' && hex <= '9') {
        return hex - '0';
    } else if (hex >= 'A' && hex <= 'F') {
        return hex - 'A' + 10;
    } else if (hex >= 'a' && hex <= 'f') {
        return hex - 'a' + 10;
    } else {
        return -1; // Mengembalikan -1 jika karakter tidak valid
    }
}

// Fungsi untuk mengonversi bilangan heksadesimal ke biner
void hexToBinary(const char* hexString) {
    printf(""Hexadecimal: %s\nBinary: "", hexString);

    // Mengonversi setiap karakter heksadesimal ke biner
    while (*hexString) {
        int decimal = hexToDecimal(*hexString);

        if (decimal != -1) {
            // Mengonversi nilai desimal ke biner
            for (int i = 3; i >= 0; i--) {
                int bit = (decimal >> i) & 1;
                printf(""%d"", bit);
            }
        } else {
            printf(""Karakter heksadesimal tidak valid.\n"");
            return;
        }

        hexString++;
    }

    printf(""\n"");
}

int main() {
    char input[256];

    // Meminta input dari pengguna
    printf(""Masukkan bilangan heksadesimal: "");
    scanf(""%s"", input);

    // Memanggil fungsi untuk mengonversi heksadesimal ke biner
    hexToBinary(input);

    return 0;
}
"
ijX4AgrV,Nth Fibonacci Number,jayati,C++,Tuesday 23rd of January 2024 08:43:17 PM CDT,"//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++
class Solution {
  const int mod = 1000000007;
  public:
    int fib(int n , vector<int>&dp){
        if(dp[n]!=-1)return dp[n];
        else return dp[n] = ((fib(n-2,dp)%mod + fib(n-1,dp)%mod)%mod); 
    }
    int nthFibonacci(int n){
        // code here
         vector<int>dp(n+1,-1);
        dp[1]=1;
        dp[2]=1;
        return fib(n,dp);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        Solution ob;
        cout << ob.nthFibonacci(n) << endl;
    }
    return 0;
}

// } Driver Code Ends"
wxFeyFB6,Neovim config,pastaisland,Lua,Tuesday 23rd of January 2024 08:27:33 PM CDT,"-- ------------- --
-- Neovim Config --
-- ------------- --

-- ------------- --
--   Settings    --
-- ------------- --
vim.g.mapleader = "" ""
vim.g.maplocalleader = "" ""
vim.o.undofile = true

-- Behavior --
vim.o.tabstop = 2
vim.o.shiftwidth = 2
vim.o.expandtab = true
vim.o.breakindent = true
vim.o.confirm = true
vim.o.startofline = true
vim.o.smartcase = true
vim.o.ignorecase = true
vim.o.timeout = true
vim.o.timeoutlen = 300
vim.o.updatetime = 250
vim.o.completeopt = ""menuone,noselect""
vim.o.clipboard = ""unnamedplus,unnamed""

-- Mouse --
vim.o.mouse = ""a""
vim.o.mousefocus = true
vim.o.mousemodel = ""extend""

-- Apperance --
vim.wo.number = true
vim.o.wrap = true
vim.o.termguicolors = true
vim.cmd.colorscheme(""onedark"")
vim.o.list = true
vim.opt.listchars = { tab = ""├─"", trail = ""·"", nbsp = ""⎵"" }
vim.o.showmode = true
vim.o.laststatus = 3
vim.wo.signcolumn = ""yes""

-- ------------- --
-- Autocommands  --
-- ------------- --
vim.api.nvim_create_autocmd(""TextYankPost"", {
  group = vim.api.nvim_create_augroup(""highlight_yank"", {}),
  desc = ""Hightlight selection on yank"",
  pattern = ""*"",
  callback = function()
    vim.highlight.on_yank { higroup = ""IncSearch"", timeout = 150 }
  end,
})

if vim.version.cmp(vim.version(), { 0, 10, 0 }) >= 0 then
  local osc52 = require('vim.ui.clipboard.osc52')
  vim.g.clipboard = {
    name = 'OSC 52',
    copy = {
      ['+'] = osc52.copy('+'),
      ['*'] = osc52.copy('*'),
    },
    paste = {
      ['+'] = osc52.paste('+'),
      ['*'] = osc52.paste('*'),
    },
  }
end

-- augroup vimrc-auto-mkdir
--   autocmd!
--   autocmd BufWritePre * call s:auto_mkdir(expand('<afile>:p:h'), v:cmdbang)
--   function! s:auto_mkdir(dir, force)
--     if !isdirectory(a:dir)
--           \   && (a:force
--           \       || input(""'"" . a:dir . ""' does not exist. Create? [y/N]"") =~? '^y\%[es]$')
--       call mkdir(iconv(a:dir, &encoding, &termencoding), 'p')
--     endif
--   endfunction
-- augroup END

-- ------------- --
--  Treesitter   --
-- ------------- --
local nix_embedded_lua = vim.treesitter.query.parse(
  ""nix"",
  [[
  (binding_set
    (binding
      attrpath: (attrpath) @_typename (#eq? @_typename ""type"")
      expression: (_
                    (string_fragment) @_typevalue (#eq? @_typevalue ""lua"")))
    (binding
      attrpath: (attrpath) @_configname (#eq? @_configname ""config"")
      expression: (_
                    (string_fragment) @lua)
      )
    )
  ]]
)

local python_embedded_sql = vim.treesitter.query.parse(
  ""python"",
  [[
  (assignment
    left: (identifier) @_varname
    (#match? @_varname ""query$"")
    right: (string (string_content) @sql)
    (#match? @sql ""^[\n \t\s]*([sS](elect|ELECT)|[iI](nsert|NSERT)|[uU](pdate|PDATE)|[cC](reate|REATE)|[dD](elete|ELETE)|[aA](lter|LTER)|[dD](rop|ROP))[\n \t\s]+"")
  )
  (call
    function: [
      (attribute attribute: (identifier) @_funcname)
      (identifier) @_funcname]
    (#match? @_funcname ""^(runquery|read_sql|execute)$"")
    arguments: (argument_list . (string (string_content) @sql))
  )
]])

local get_root = function(bufnr)
  local parser = vim.treesitter.get_parser(bufnr, ""nix"", {})
  local tree = parser:parse()[1]
  return tree:root()
end


-- ------------- --
--    Keymaps    --
-- ------------- --
vim.keymap.set('n', ',v', '<Cmd>edit $MYVIMRC<CR>', {desc = ""edit config file""})
vim.keymap.set('n', ',,', '<C-^>', {desc = ""Swap to Recent Buffer"" })

local toggle_visuals_settings
local function toggle_visuals()
  if vim.wo.number or vim.o.relativenumber then
    toggle_visuals_settings = {
      number = vim.o.number,
      relativenumber = vim.o.relativenumber,
      list = vim.o.list,
      signcolumn = vim.o.signcolumn,
      miniindent = vim.b.miniindentscope_disable
    }
    vim.o.number = false
    vim.o.relativenumber = false
    vim.o.list = false
    vim.o.signcolumn = ""no""
    vim.b.miniindentscope_disable = true
  else
    vim.o.number = toggle_visuals_settings[""number""]
    vim.o.relativenumber = toggle_visuals_settings[""relativenumber""]
    vim.o.list = toggle_visuals_settings[""list""]
    vim.o.signcolumn = toggle_visuals_settings[""signcolumn""]
    vim.b.miniindentscope_disable = toggle_visuals_settings[""miniindent""]
  end
end
vim.keymap.set('n', '<F2>', toggle_visuals, {noremap = true, silent = true, desc = ""Toggle Decorations""} )
vim.keymap.set('n', '<CR>', '<Cmd>nohlsearch<CR><CR>', { desc = ""Clear Search"" })
vim.keymap.set('n', 'ZS', 'ZQ', { desc = ""Force Quit"" })

-- Remap for dealing with word wrap
vim.keymap.set('n', 'k', ""v:count == 0 ? 'gk' : 'k'"", { expr = true, silent = true })
vim.keymap.set('n', 'j', ""v:count == 0 ? 'gj' : 'j'"", { expr = true, silent = true })

vim.keymap.set(""n"", ""<C-J>"", ""<C-W><C-J>"")
vim.keymap.set(""n"", ""<C-H>"", ""<C-W><C-H>"")
vim.keymap.set(""n"", ""<C-K>"", ""<C-W><C-K>"")
vim.keymap.set(""n"", ""<C-L>"", ""<C-W><C-L>"")

-- vim.keymap.set('n', '<Leader>l', '<Nop>', { desc = 'LSP' })
-- vim.keymap.set('n', '<Leader>lf',  function() vim.lsp.buf.format { async = true } end, { desc = ""Format"" })
-- vim.keymap.set('n', '<Leader>ld',  vim.lsp.buf.definition, { desc = ""Definition"" })
-- vim.keymap.set('n', '<Leader>lt',  vim.lsp.buf.type_definition, { desc = ""Definition"" })
-- vim.keymap.set('n', '<Leader>lD',  vim.lsp.buf.declaration, { desc = ""Declaration"" })
-- vim.keymap.set('n', '<Leader>li',  vim.lsp.buf.implementation, { desc = ""Implementation"" })
-- vim.keymap.set('n', '<Leader>lr',  vim.lsp.buf.rename, { desc = ""Rename"" })
-- vim.keymap.set('n', '<Leader>lR',  vim.lsp.buf.references, { desc = ""References"" })
-- vim.keymap.set('n', '<Leader>l ',  vim.lsp.buf.hover, { desc = ""Hover"" })
-- vim.keymap.set({'n', 'v'}, '<Leader>la',  vim.lsp.buf.code_action, { desc = ""Code Action"" })
-- vim.keymap.set('n', '<Leader>ls',  vim.lsp.buf.signature_help, { desc = ""Signature Help"" })
-- vim.keymap.set('n', '[d',  vim.diagnostic.goto_prev, { desc = ""[Diag] Goto Prev"" })
-- vim.keymap.set('n', ']d',  vim.diagnostic.goto_next, { desc = ""[Diag] Goto Next"" })
-- vim.keymap.set('n', '<Leader>lpf',  vim.diagnostic.open_float, { desc = ""Open Float"" })
-- vim.keymap.set('n', '<Leader>lps',  vim.diagnostic.setloclist, { desc = ""Set Loc List"" })
--

vim.keymap.set('n', '<space>e', vim.diagnostic.open_float, { desc = ""Open Float"" })
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, { desc = ""[Diag] Next"" })
vim.keymap.set('n', ']d', vim.diagnostic.goto_next, { desc = ""[Diag] Prev"" })
vim.keymap.set('n', '<space>q', vim.diagnostic.setloclist, { desc = ""Set Loc List"" })


vim.api.nvim_create_autocmd('LspAttach', {
  group = vim.api.nvim_create_augroup('UserLspConfig', {}),
  callback = function(ev)
    -- Enable completion triggered by <c-x><c-o>
    vim.bo[ev.buf].omnifunc = 'v:lua.vim.lsp.omnifunc'

    -- Buffer local mappings.
    vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, { buffer = ev.buf, desc = ""Declaration"" })
    vim.keymap.set('n', 'gd', vim.lsp.buf.definition, { buffer = ev.buf, desc = ""Definition"" })
    vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = ev.buf, desc = ""Hover"" })
    vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, { buffer = ev.buf, desc = ""Implementation"" })
    vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, { buffer = ev.buf, desc = ""Signature Help"" })
    vim.keymap.set('n', '<space>wa', vim.lsp.buf.add_workspace_folder, { buffer = ev.buf, desc = ""Add Workspace Folder"" })
    vim.keymap.set('n', '<space>wr', vim.lsp.buf.remove_workspace_folder, { buffer = ev.buf, desc = ""Remove Workspace Folder"" })
    vim.keymap.set('n', '<space>wl', function()
      print(vim.inspect(vim.lsp.buf.list_workspace_folders()))
    end, { buffer = ev.buf, desc = ""List Workspace Folders"" })
    vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, { buffer = ev.buf, desc = ""Type Definition"" })
    vim.keymap.set('n', '<space>lr', vim.lsp.buf.rename, { buffer = ev.buf, desc = ""Rename"" })
    vim.keymap.set({ 'n', 'v' }, '<space>ca', vim.lsp.buf.code_action, { buffer = ev.buf, desc = ""Code Action"" })
    vim.keymap.set('n', 'gr', vim.lsp.buf.references, { buffer = ev.buf, desc = ""References"" })
    vim.keymap.set('n', '<space>lf', function() vim.lsp.buf.format { async = true } end, { buffer = ev.buf, desc = ""Format"" })
  end,
})


vim.keymap.set('v', 'p',  ""\""_dP"", { desc = ""Paste Without Yanking"" })
vim.keymap.set('v', "",'"",  ""<C-v>I'<Esc>gv$A',<ESC>gvgJ$r<Cmd>keeppatterns s/\\(.\\{-\\},\\)\\{10\\}/&\r/g<CR>"", { desc = ""Comma Separate and Quote List"" })

vim.keymap.set('n', '<Leader>c', ""<Cmd>bdelete<CR>"", { desc = ""Close Buffer"" })
vim.keymap.set('n', '<Leader>C', ""<Cmd>bdelete!<CR>"", { desc = ""Force Close Buffer"" })




          -- lvim.keys.normal_mode["",<Tab>""] = ""<Cmd>tabNext<CR>""
          -- lvim.keys.normal_mode["",<S-Tab>""] = ""<Cmd>tabprevious<CR>""
          -- -- lvim.keys.insert_mode[""<Up>""] = ""<Esc><Up>""
          -- -- lvim.keys.insert_mode[""<Down>""] = ""<Esc><Down>""
          -- lvim.builtin.which_key.mappings[""x""] = {
          --   ""<Cmd>enew | setlocal ft=python bt=nofile bh=hide noswapfile nu | file Scratch<CR>"", ""Scratch""
          -- }
          -- lvim.keys.insert_mode[""<C-Del>""] = ""<C-o>dw""
          -- -- for neoscroll support
          -- lvim.keys.visual_mode[""<PageUp>""] = { ""<C-b>"", { remap = true } }
          -- lvim.keys.visual_mode[""<PageDown>""] = { ""<C-f>"", { remap = true } }
          -- 
          -- 
          -- lvim.keys.insert_mode[""<C-l>""] = ""<Esc><C-w>l""
          -- lvim.keys.insert_mode[""<C-h>""] = ""<Esc><C-w>h""
          -- lvim.keys.insert_mode[""<C-k>""] = ""<Esc><C-w>k""
          -- lvim.keys.insert_mode[""<C-j>""] = ""<Esc><C-w>j""
          --
require('mini.ai').setup()
require('mini.animate').setup()
require('mini.basics').setup()
require('mini.bracketed').setup()
require('mini.comment').setup()
require('mini.cursorword').setup()
require('mini.indentscope').setup()
require('mini.surround').setup()

local miniclue = require('mini.clue')
miniclue.setup({
  triggers = {
    -- Leader triggers
    { mode = 'n', keys = '<Leader>' },
    { mode = 'x', keys = '<Leader>' },
    { mode = 'n', keys = ',' },
    { mode = 'x', keys = ',' },
    { mode = 'n', keys = ']' },
    { mode = 'n', keys = '[' },

    -- Built-in completion
    { mode = 'i', keys = '<C-x>' },

    -- `g` key
    { mode = 'n', keys = 'g' },
    { mode = 'x', keys = 'g' },

    -- Marks
    { mode = 'n', keys = ""'"" },
    { mode = 'n', keys = '`' },
    { mode = 'x', keys = ""'"" },
    { mode = 'x', keys = '`' },

    -- Registers
    { mode = 'n', keys = '""' },
    { mode = 'x', keys = '""' },
    { mode = 'i', keys = '<C-r>' },
    { mode = 'c', keys = '<C-r>' },

    -- Window commands
    { mode = 'n', keys = '<C-w>' },

    -- `z` key
    { mode = 'n', keys = 'z' },
    { mode = 'x', keys = 'z' },
  },

  clues = {
    -- Enhance this by adding descriptions for <Leader> mapping groups
    miniclue.gen_clues.builtin_completion(),
    miniclue.gen_clues.g(),
    miniclue.gen_clues.marks(),
    miniclue.gen_clues.registers(),
    miniclue.gen_clues.windows(),
    miniclue.gen_clues.z(),
  },
})

vim.api.nvim_create_autocmd('FileType', {
  desc = 'Activate vim-slime for python',
  pattern = 'python',
  once = true,
  callback = function()
    vim.g.slime_target = ""tmux""
    vim.g.slime_cell_delimiter = ""^#\\s*%%""
    vim.g.slime_default_config = {
      ['socket_name'] = 'default',
      ['target_pane'] = '{bottom-right}',
    }
    vim.g.slime_dont_ask_default = 1
    vim.g.slime_bracketed_paste = 1
    vim.g.slime_no_mappings = 1
    vim.g.slime_python_ipython = 0 -- No %cpasted needed if using tmux's bracketed paste


    function StartIPython()
      vim.fn.system(""tmux if -F '#{==:#{window_panes},1}' 'split-window -hdZ ipython'"")
    end

    function UnhideSlimeAndClear()
      local target_pane = vim.fn.shellescape(vim.g.slime_default_config[""target_pane""])
      vim.fn.system(""tmux if -F '#{window_zoomed_flag}' 'resize-pane -Z'"")
      vim.fn.system(""tmux send -t "" .. target_pane .. "" C-u"")
      StartIPython()
    end

    vim.cmd([[function! SlimeOverride_EscapeText_python(text)
      lua UnhideSlimeAndClear()
      if slime#config#resolve(""python_ipython"") && len(split(a:text,""\n"")) > 1
        return [""%cpaste -q\n"", slime#config#resolve(""dispatch_ipython_pause""), a:text, ""--\n""]
      else
        let empty_lines_pat = '\(^\|\n\)\zs\(\s*\n\+\)\+'
        let no_empty_lines = substitute(a:text, empty_lines_pat, """", ""g"")
        let dedent_pat = '\(^\|\n\)\zs'.matchstr(no_empty_lines, '^\s*')
        let dedented_lines = substitute(no_empty_lines, dedent_pat, """", ""g"")
        let except_pat = '\(elif\|else\|except\|finally\)\@!'
        let add_eol_pat = '\n\s[^\n]\+\n\zs\ze\('.except_pat.'\S\|$\)'
        return substitute(dedented_lines, add_eol_pat, ""\n"", ""g"")
      end
    endfunction]])

    function Send_Ctrl_C()
      local target_pane = vim.fn.shellescape(vim.g.slime_default_config[""target_pane""])
      vim.fn.system(""tmux send -t "" .. target_pane .. "" C-c"")
    end

    --vim.keymap.set('n', ',aa', UnhideSlimeAndClear, { desc = ""[Slime] Scend"" })
    --vim.keymap.set('n', '<leader>rv', '<Plug>SlimeConfig', { desc = ""[Slime] Config"" })
    vim.keymap.set('n', ',r', '<Plug>SlimeCellsSend', { desc = ""[Slime] Send"" })
    vim.keymap.set('v', ',r', '<Plug>SlimeRegionSend', { desc = ""[Slime] Send"" })
    vim.keymap.set('n', ',R', '<Plug>SlimeCellsSendAndGoToNext', { desc = ""[Slime] Send+Next"" })
    vim.keymap.set('n', ',c', Send_Ctrl_C, { desc = ""[Slime] Ctrl+C"" })
    vim.keymap.set('n', ',l', StartIPython, { desc = ""[Slime] Start IPython"" })
    vim.keymap.set('n', ',j', '<Plug>SlimeCellsNext', { desc = ""[Slime] Next Cell"" })
    vim.keymap.set('n', ',k', '<Plug>SlimeCellsPrev', { desc = ""[Slime] Prev Cell"" })
    vim.cmd.packadd('vim-slime')
    vim.cmd.packadd('vimplugin-vim-slime-cells')
    StartIPython()
  end,
})

local lspconfig = require(""lspconfig"")
-- Bash --
lspconfig.bashls.setup{}

-- Lua --
lspconfig.lua_ls.setup{
  settings = {
    Lua = {
      runtime = {
        -- Tell the language server which version of Lua you're using (most likely LuaJIT in the case of Neovim)
        version = ""LuaJIT"",
      },
      diagnostics = {
        -- Get the language server to recognize the `vim` global
        globals = {""vim""},
      },
      workspace = {
        -- Make the server aware of Neovim runtime files
        library = vim.api.nvim_get_runtime_file("""", true),
        checkThirdParty = false,
      },
      -- Do not send telemetry data containing a randomized but unique identifier
      telemetry = {
        enable = false,
      },
    },
  },
}

lspconfig.sqls.setup{}
-- Python --
lspconfig.pyright.setup{}
lspconfig.ruff_lsp.setup{}

-- Nix --
lspconfig.nil_ls.setup{} -- nix language server - no format
lspconfig.rnix.setup{}

-- Markdown --
lspconfig.marksman.setup{}

-- Diagnostic --
-- lspconfig.diagnosticls.setup{}

require(""conform"").setup({
  formatters = {
    injected = {
      options = {
        ignore_errors = false,
        lang_to_formatters = {
          sql = { ""sqlfluff"" },
        },
        lang_to_ext = {
          sql = ""sql"",
        },
      },
    },
    sqlfluff = {
      command = ""sqlfluff"",
      args = {
        ""fix"",
        ""--dialect"",
        ""sqlite"",
        ""--disable-progress-bar"",
        ""-f"",
        ""-n"",
        ""-"",
      },
      stdin = true,
    },
  },
  formatters_by_ft = {
    lua = { ""stylua"" },
    -- python = { ""isort"", ""black"" },
    python = { ""ruff_format"", ""black"", ""injected"" },
    nix = { ""alejandra"" },
    sql = { ""sqlfluff"", ""injected"" },
  },
})
require(""conform"").formatters.injected = {
  options = {
    ignore_errors = false,
    lang_to_formatters = {
      sql = { ""sqlfluff"" },
    },
  },
}

local cmp = require(""cmp"")
cmp.setup {
  snippet = {
    expand = function(args)
      require(""luasnip"").lsp_expand(args.body)
    end
  },
  mapping = {
    [""<C-p>""] = cmp.mapping.select_prev_item(),
    [""<C-n>""] = cmp.mapping.select_next_item(),
    [""<C-space>""] = cmp.mapping.complete(),
    [""<C-e>""] = cmp.mapping.close(),
    [""<tab>""] = cmp.mapping.confirm { select = true },
  },

  sources = cmp.config.sources({
    { name = ""nvim_lsp"" },
    { name = ""luasnip"" },
  }, {
    { name = ""buffer"" },
    { name = ""path"" },
    { name = ""treesitter"" },
  }),
}
cmp.setup.filetype(""gitcommit"", {
  sources = cmp.config.sources({
    { name = ""git"" }, -- You can specify the `git` source if [you were installed it](https://github.com/petertriho/cmp-git).
  }, {
    { name = ""buffer"" },
  })
})
cmp.setup.cmdline({ ""/"", ""?"" }, {
  mapping = cmp.mapping.preset.cmdline(),
  sources = {
    { name = ""buffer"" }
  }
})

cmp.setup.cmdline("":"", {
  mapping = cmp.mapping.preset.cmdline(),
  sources = cmp.config.sources({
    { name = ""path"" }
  }, {
    { name = ""cmdline"" }
  })
})

require'nvim-treesitter.configs'.setup {
  autotag = { enable = true },
  context_commentstring = { enable = true, enable_autocmd = false },
  highlight = {
    enable = true,
    disable = function(_, bufnr) return vim.b[bufnr].large_buf end,
  },
  incremental_selection = { enable = true },
  indent = { enable = true },
  textobjects = {
    select = {
      enable = true,
      lookahead = true,
      keymaps = {
        [""ak""] = { query = ""@block.outer"", desc = ""around block"" },
        [""ik""] = { query = ""@block.inner"", desc = ""inside block"" },
        [""ac""] = { query = ""@class.outer"", desc = ""around class"" },
        [""ic""] = { query = ""@class.inner"", desc = ""inside class"" },
        [""a?""] = { query = ""@conditional.outer"", desc = ""around conditional"" },
        [""i?""] = { query = ""@conditional.inner"", desc = ""inside conditional"" },
        [""af""] = { query = ""@function.outer"", desc = ""around function "" },
        [""if""] = { query = ""@function.inner"", desc = ""inside function "" },
        [""al""] = { query = ""@loop.outer"", desc = ""around loop"" },
        [""il""] = { query = ""@loop.inner"", desc = ""inside loop"" },
        [""aa""] = { query = ""@parameter.outer"", desc = ""around argument"" },
        [""ia""] = { query = ""@parameter.inner"", desc = ""inside argument"" },
      },
    },
    move = {
      enable = true,
      set_jumps = true,
      goto_next_start = {
        [""]k""] = { query = ""@block.outer"", desc = ""Next block start"" },
        [""]f""] = { query = ""@function.outer"", desc = ""Next function start"" },
        [""]a""] = { query = ""@parameter.inner"", desc = ""Next argument start"" },
      },
      goto_next_end = {
        [""]K""] = { query = ""@block.outer"", desc = ""Next block end"" },
        [""]F""] = { query = ""@function.outer"", desc = ""Next function end"" },
        [""]A""] = { query = ""@parameter.inner"", desc = ""Next argument end"" },
      },
      goto_previous_start = {
        [""[k""] = { query = ""@block.outer"", desc = ""Previous block start"" },
        [""[f""] = { query = ""@function.outer"", desc = ""Previous function start"" },
        [""[a""] = { query = ""@parameter.inner"", desc = ""Previous argument start"" },
      },
      goto_previous_end = {
        [""[K""] = { query = ""@block.outer"", desc = ""Previous block end"" },
        [""[F""] = { query = ""@function.outer"", desc = ""Previous function end"" },
        [""[A""] = { query = ""@parameter.inner"", desc = ""Previous argument end"" },
      },
    },
    swap = {
      enable = true,
      swap_next = {
        ["">K""] = { query = ""@block.outer"", desc = ""Swap next block"" },
        ["">F""] = { query = ""@function.outer"", desc = ""Swap next function"" },
        ["">A""] = { query = ""@parameter.inner"", desc = ""Swap next argument"" },
      },
      swap_previous = {
        [""<K""] = { query = ""@block.outer"", desc = ""Swap previous block"" },
        [""<F""] = { query = ""@function.outer"", desc = ""Swap previous function"" },
        [""<A""] = { query = ""@parameter.inner"", desc = ""Swap previous argument"" },
      },
    },
  },
}

require(""lualine"").setup{
  options = {
    theme = ""onedark""
  }
}

require(""bufferline"").setup{}
vim.keymap.set('n', '<Leader>b',  ""<Cmd>BufferLineCycleNext<CR>"", { desc = ""Buffer Next"" })
vim.keymap.set('n', '<Leader>B',  ""<Cmd>BufferLineCyclePrev<CR>"", { desc = ""Buffer Prev"" })

vim.keymap.set('n', '<Leader>gg',  ""<Cmd>LazyGit<CR>"", { desc = ""LazyGit"" })

require(""telescope"").setup()
require('telescope').load_extension('fzf')
vim.keymap.set('n', '<Leader>f',  ""<Nop>"", { desc = ""Telescope"" })
vim.keymap.set('n', '<Leader>fF',
  function()
    require('telescope.builtin').current_buffer_fuzzy_find(require('telescope.themes').get_dropdown {
      winblend = 10,
      previewer = false,
    })
  end, { desc = ""Fuzzy Search Current Buffer"" })
vim.keymap.set('n', '<Leader>ff',  ""<Cmd>Telescope find_files<CR>"", { desc = ""Find File"" })
vim.keymap.set('n', '<Leader>fr',  ""<Cmd>Telescope oldfiles<CR>"", { desc = ""Open Recent File"" })
vim.keymap.set('n', '<Leader>fg',  ""<Cmd>Telescope live_grep<CR>"", { desc = ""Live Grep"" })
vim.keymap.set('n', '<Leader>fG',  ""<Cmd>Telescope git_files<CR>"", { desc = ""Git Files"" })
vim.keymap.set('n', '<Leader>fb',  ""<Cmd>Telescope buffers<CR>"", { desc = ""Buffers"" })
vim.keymap.set('n', '<Leader>fh',  ""<Cmd>Telescope help_tags<CR>"", { desc = ""Help"" })
vim.keymap.set('n', '<Leader>fs',  ""<Cmd>Telescope grep_string<CR>"", { desc = ""Current Word"" })
vim.keymap.set('n', '<Leader>fd',  ""<Cmd>Telescope diagnostics<CR>"", { desc = ""Diagnostics"" })
vim.keymap.set('n', '<Leader>fc',  ""<Cmd>lua require('telescope.builtin').colorscheme({enable_preview = true})<CR>"", { desc = ""Color Scheme"" })

require(""telescope"").load_extension(""file_browser"")
vim.keymap.set('n', '<Leader>fn',  ""<Cmd>Telescope file_browser path=%:p:h<CR>"", { desc = ""Browser"" })
vim.keymap.set('n', '<Leader>fN',  ""<Cmd>Telescope file_browser<CR>"", { desc = ""Browser CWD"" })

require(""alpha"").setup(require(""alpha.themes.startify"").config)
vim.keymap.set('n', '<Leader>;',  ""<Cmd>Alpha<CR>"", { desc = ""Dashboard"" })
"
LpDAaA0k,Python program with poorly formatted embedded SQL code,pastaisland,Python,Tuesday 23rd of January 2024 08:20:09 PM CDT,"query = """"""
select     row1  ,
row2,
    row3
 from

table1""""""
"
2A0g8R59,Untitled,ma39isy,Oracle 11,Tuesday 23rd of January 2024 08:04:49 PM CDT,"SELECT
	A.SUBJECTID,
	A.SUBJECTCODE,
	A.STUDYPROGRAMID,
	A.CREDIT,
	A.SUBJECTNAME,
	A.CURICULUMYEAR,
	A.MANDATORYSTATUS,
	A.ADMITSEMESTER,
	A.ADMITSCHOOLYEAR,
	A.SUBJECTTYPE,
	NVL (B.STUDENTID,
	A.STUDENTID) STUDENTID,
	NVL (B.SCHOOLYEAR,
	A.SCHOOLYEAR) SCHOOLYEAR,
	NVL (B.SEMESTER,
	A.SEMESTER) SEMESTER,
	NVL (B.INDEXPOINT,
	A.INDEXPOINT) INDEXPOINT,
	NVL (B.INDEX_CONVERSION,
	A.INDEX_CONVERSION) INDEX_CONVERSION,
	NVL (B.PASS_STATUS,
	A.PASS_STATUS) PASS_STATUS,
	NVL (B.SUBJECTIDOLD,
	A.SUBJECTIDOLD) SUBJECTIDOLD,
	NVL (B.SUBJECTCODEOLD,
	A.SUBJECTCODEOLD) SUBJECTCODEOLD,
	NVL (B.SUBJECTNAMEOLD,
	A.SUBJECTNAMEOLD) SUBJECTNAMEOLD,
	NVL2 ( B.SUBJECTNAMEOLD,
	DECODE (B.SUBJECTID,
	B.SUBJECTIDOLD,
	'',
	'RESULT OF EQUIVALENCE'),
	STATUS) AS STATUS
FROM
	(
	SELECT
		A.SUBJECTID,
		A.SUBJECTCODE,
		A.STUDYPROGRAMID,
		A.CREDIT,
		A.SUBJECTNAME,
		A.CURICULUMYEAR,
		A.MANDATORYSTATUS,
		A.ADMITSEMESTER,
		A.ADMITSCHOOLYEAR,
		A.SUBJECTTYPE,
		B.STUDENTID,
		B.SCHOOLYEAR,
		B.SEMESTER,
		B.INDEXPOINT,
		B.INDEX_CONVERSION,
		B.PASS_STATUS,
		SUBJECTCODEOLD,
		SUBJECTIDOLD,
		STUDYPROGRAMIDOLD,
		SUBJECTNAMEOLD,
		DECODE (B.SUBJECTID,
		SUBJECTIDOLD,
		'',
		'RESULT OF EQUIVALENCE') STATUS
	FROM
		(
		SELECT
			SUBJECTID,
			SUBJECTCODE,
			STUDYPROGRAMID,
			CREDIT,
			SUBJECTNAME,
			CURICULUMYEAR,
			MANDATORYSTATUS,
			ADMITSEMESTER,
			ADMITSCHOOLYEAR,
			SUBJECTTYPE
		FROM
			SUBJECTS
		WHERE
			STUDYPROGRAMID = (
			SELECT
				STUDYPROGRAMID
			FROM
				MASTERDATA.STUDENT
			WHERE
				STUDENTID = '1304192002')
			AND ACTIVESTATUS = 'YA'
			AND MANDATORYSTATUS IS NOT NULL
			AND SUBJECTTYPE = 'TINGKAT 1'
			AND CURICULUMYEAR = (
			SELECT
				MAX(CURICULUMYEAR)
			FROM
				CURICULUMYEAR)
			AND SUBJECTNAME NOT LIKE '%AGAMA%'
	UNION
		SELECT
			SUBJECTID,
			SUBJECTCODE,
			STUDYPROGRAMID,
			CREDIT,
			SUBJECTNAME,
			CURICULUMYEAR,
			MANDATORYSTATUS,
			ADMITSEMESTER,
			ADMITSCHOOLYEAR,
			SUBJECTTYPE
		FROM
			SUBJECTS
		WHERE
			STUDYPROGRAMID = (
			SELECT
				STUDYPROGRAMID
			FROM
				MASTERDATA.STUDENT
			WHERE
				STUDENTID = '1304192002')
			AND ACTIVESTATUS = 'YA'
			AND MANDATORYSTATUS IS NOT NULL
			AND SUBJECTTYPE = 'TINGKAT 1'
			AND CURICULUMYEAR = (
			SELECT
				MAX(CURICULUMYEAR)
			FROM
				CURICULUMYEAR)
			AND SUBJECTNAME LIKE '%AGAMA%'
			AND SUBJECTNAME LIKE '%' || (
			SELECT
				RELIGION
			FROM
				MASTERDATA.ADDITIONALSTUDENTDATA
			WHERE
				STUDENTID = '1304192002') || '%' ) A
	LEFT JOIN (
		SELECT
			STUDENTID,
			NVL2 (D.SUBJECTID,
			D.SUBJECTID,
			A.SUBJECTID) SUBJECTID,
			NVL2 (D.SUBJECTCODE,
			D.SUBJECTCODE,
			A.SUBJECTCODE) SUBJECTCODE,
			NVL2 (D.STUDYPROGRAMID,
			D.STUDYPROGRAMID,
			A.STUDYPROGRAMID) STUDYPROGRAMID,
			NVL2 (D.SUBJECTNAME,
			D.SUBJECTNAME,
			B.SUBJECTNAME) SUBJECTNAME,
			SCHOOLYEAR,
			SEMESTER,
			INDEXPOINT,
			INDEX_CONVERSION,
			PASS_STATUS,
			NVL2 (D.CURICULUMYEAR,
			D.CURICULUMYEAR,
			B.CURICULUMYEAR) CURICULUMYEAR,
			A.SUBJECTCODE AS SUBJECTCODEOLD,
			A.SUBJECTID AS SUBJECTIDOLD,
			A.STUDYPROGRAMID AS STUDYPROGRAMIDOLD,
			B.SUBJECTNAME AS SUBJECTNAMEOLD
		FROM
			COMPLETECOURSEPOINT A
		JOIN SUBJECTS B ON
			( A.SUBJECTID = B.SUBJECTID
				AND A.SUBJECTCODE = B.SUBJECTCODE
				AND A.STUDYPROGRAMID = B.STUDYPROGRAMID)
		LEFT JOIN (
			SELECT
				SUBJECTID,
				SUBJECTCODE,
				STUDYPROGRAMID,
				MAX (GROUPID) GROUPID
			FROM
				SUBJECTGROUPEQUIVALENCY
			GROUP BY
				SUBJECTID,
				SUBJECTCODE,
				STUDYPROGRAMID) C ON
			( B.SUBJECTID = C.SUBJECTID
				AND B.SUBJECTCODE = C.SUBJECTCODE
				AND B.STUDYPROGRAMID = C.STUDYPROGRAMID)
		LEFT JOIN (
			SELECT
				SUBJECTIDEQUIVALENCE AS SUBJECTID,
				SUBJECTCODEEQUIVALENCE AS SUBJECTCODE,
				STUDYPROGRAMIDEQUIVALENCE AS STUDYPROGRAMID,
				SUBJECTNAME AS SUBJECTNAME,
				CURICULUMYEAR AS CURICULUMYEAR,
				GROUPID
			FROM
				SUBJECTEQUIVALENCES A
			JOIN SUBJECTS B ON
				(A.SUBJECTIDEQUIVALENCE = B.SUBJECTID) ) D ON
			(C.GROUPID = D.GROUPID)
		WHERE
			STUDENTID = '1304192002'
			AND A.ACTIVESTATUS = 'Y'
			AND A.LATESTSTATUS = 'Y'
	UNION
		SELECT
			STUDENTID,
			A.SUBJECTID,
			A.SUBJECTCODE,
			A.STUDYPROGRAMID,
			B.SUBJECTNAME,
			SCHOOLYEAR,
			SEMESTER,
			INDEXPOINT,
			INDEX_CONVERSION,
			PASS_STATUS,
			B.CURICULUMYEAR,
			A.SUBJECTCODE AS SUBJECTCODEOLD,
			A.SUBJECTID AS SUBJECTIDOLD,
			A.STUDYPROGRAMID AS STUDYPROGRAMIDOLD,
			B.SUBJECTNAME AS SUBJECTNAMEOLD
		FROM
			COMPLETECOURSEPOINT A
		JOIN SUBJECTS B ON
			( A.SUBJECTID = B.SUBJECTID
				AND A.SUBJECTCODE = B.SUBJECTCODE
				AND A.STUDYPROGRAMID = B.STUDYPROGRAMID)
		WHERE
			STUDENTID = '1304192002'
			AND A.ACTIVESTATUS = 'Y'
			AND A.LATESTSTATUS = 'Y' ) B ON
		( A.SUBJECTID = B.SUBJECTID
			AND A.SUBJECTCODE = B.SUBJECTCODE
			AND A.STUDYPROGRAMID = B.STUDYPROGRAMID)) A
LEFT JOIN (
	SELECT
		A.STUDENTID,
		NVL2 (D.SUBJECTID,
		D.SUBJECTID,
		A.SUBJECTID) SUBJECTID,
		NVL2 (D.SUBJECTCODE,
		D.SUBJECTCODE,
		A.SUBJECTCODE) SUBJECTCODE,
		NVL2 (D.STUDYPROGRAMID,
		D.STUDYPROGRAMID,
		A.STUDYPROGRAMID) STUDYPROGRAMID,
		NVL2 (D.SUBJECTNAME,
		D.SUBJECTNAME,
		B.SUBJECTNAME) SUBJECTNAME,
		SCHOOLYEAR,
		SEMESTER,
		INDEXPOINT,
		INDEX_CONVERSION,
		PASS_STATUS,
		NVL2 (D.CURICULUMYEAR,
		D.CURICULUMYEAR,
		B.CURICULUMYEAR) CURICULUMYEAR,
		A.SUBJECTCODE AS SUBJECTCODEOLD,
		A.SUBJECTID AS SUBJECTIDOLD,
		A.STUDYPROGRAMID AS STUDYPROGRAMIDOLD,
		B.SUBJECTNAME AS SUBJECTNAMEOLD
	FROM
		COMPLETECOURSEPOINT A
	JOIN (
		SELECT
			STUDENTID,
			STUDYPROGRAMID
		FROM
			MASTERDATA.STUDENT
		WHERE
			STUDENTID = '1304192002') E ON
		(A.STUDENTID = E.STUDENTID)
	JOIN SUBJECTS B ON
		( A.SUBJECTID = B.SUBJECTID
			AND A.SUBJECTCODE = B.SUBJECTCODE
			AND A.STUDYPROGRAMID = B.STUDYPROGRAMID)
	LEFT JOIN (
		SELECT
			SUBJECTID,
			SUBJECTCODE,
			STUDYPROGRAMID,
			MAX (GROUPID) GROUPID
		FROM
			SUBJECTGROUPEQUIVALENCY
		GROUP BY
			SUBJECTID,
			SUBJECTCODE,
			STUDYPROGRAMID) C ON
		(B.SUBJECTCODE = C.SUBJECTCODE
			AND E.STUDYPROGRAMID = C.STUDYPROGRAMID)
	LEFT JOIN (
		SELECT
			SUBJECTIDEQUIVALENCE AS SUBJECTID,
			SUBJECTCODEEQUIVALENCE AS SUBJECTCODE,
			STUDYPROGRAMIDEQUIVALENCE AS STUDYPROGRAMID,
			SUBJECTNAME AS SUBJECTNAME,
			CURICULUMYEAR AS CURICULUMYEAR,
			GROUPID
		FROM
			SUBJECTEQUIVALENCES A
		JOIN SUBJECTS B ON
			(A.SUBJECTIDEQUIVALENCE = B.SUBJECTID) ) D ON
		(C.GROUPID = D.GROUPID)
	WHERE
		A.STUDENTID = '1304192002'
		AND A.ACTIVESTATUS = 'Y'
		AND A.LATESTSTATUS = 'Y'
		AND A.STUDYPROGRAMID != E.STUDYPROGRAMID) B ON
	(A.SUBJECTCODE = B.SUBJECTCODE)
ORDER BY
	STUDENTID,
	SCHOOLYEAR,
	SEMESTER,
	INDEXPOINT"
T2C7R27H,Untitled,cosenza987,C++,Tuesday 23rd of January 2024 07:52:57 PM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

template <class T = int>
class Dinic {
public:
    struct Edge {
        Edge(int a, T b) { to = a;cap = b; }
        int to;
        T cap;
    };

    Dinic(int _n) : n(_n) {
        edges.resize(n);
    }

    T maxFlow(int src, int sink) {
        T ans = 0;
        while (bfs(src, sink)) {
            // maybe random shuffle edges against bad cases?
            T flow;
            pt = std::vector<int>(n, 0);
            while ((flow = dfs(src, sink))) {
                ans += flow;
            }
        }
        return ans;
    }

    void addEdge(int from, int to, T cap, T other = 0) {
        edges[from].push_back(list.size());
        list.push_back(Edge(to, cap));
        edges[to].push_back(list.size());
        list.push_back(Edge(from, other));
    }

    bool inCut(int u) const { return h[u] < n; }
    int size() const { return n; }
    int find(int s) {
        int st = s;
        bool ok = true;
        while(ok) {
            ok = false;
            for(auto e : edges[s]) {
                if(list[e].to == s + 1 and list[e].cap == 0) {
                    s++;
                    ok = true;
                }
            }
        }
        return s - st;
    }
private:
    int n;
    std::vector<std::vector<int> > edges;
    std::vector<Edge> list;
    std::vector<int> h, pt;

    T dfs(int on, int sink, T flow = 1e9) {
        if (flow == 0) {
            return 0;
        } if (on == sink) {
            return flow;
        }
        for (; pt[on] < (int)edges[on].size(); pt[on]++) {
            int cur = edges[on][pt[on]];
            if (h[on] + 1 != h[list[cur].to]) {
                continue;
            }
            T got = dfs(list[cur].to, sink, std::min(flow, list[cur].cap));
            if (got) {
                list[cur].cap -= got;
                list[cur ^ 1].cap += got;
                return got;
            }
        }
        return 0;
    }

    bool bfs(int src, int sink) {
        h = std::vector<int>(n, n);
        h[src] = 0;
        std::queue<int> q;
        q.push(src);
        while (!q.empty()) {
            int on = q.front();
            q.pop();
            for (auto a : edges[on]) {
                if (list[a].cap == 0) {
                    continue;
                }
                int to = list[a].to;
                if (h[to] > h[on] + 1) {
                    h[to] = h[on] + 1;
                    q.push(to);
                }
            }
        }
        return h[sink] < n;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, m;
    cin >> n >> m;
    vector<int> p(n), c(n);
    set<int> s;
    for(int i = 0; i < n; i++) {
        s.insert(i);
    }
    for(int i = 0; i < n; i++) {
        cin >> p[i];
    }
    for(int i = 0; i < n; i++) {
        cin >> c[i];
    }
    int q;
    cin >> q;
    vector<int> qq(q), ans(q);
    for(int i = 0; i < q; i++) {
        cin >> qq[i];
        qq[i]--;
        s.erase(qq[i]);
    }
    int id = 0;
    vector<int> ic(m + 1), in(n + 1), out(n + 1);
    for(int i = 1; i <= m; i++) {
        ic[i] = id++;
    }
    for(int i = 0; i <= n; i++) {
        in[i] = id++;
    }
    for(int i = 0; i <= n; i++) {
        out[i] = id++;
    }
    int src = id++;
    int sink = id++;
    Dinic<int> dinic(sink + 1);
    for(int i = 1; i <= m; i++) {
        dinic.addEdge(src, ic[i], 1);
    }
    for(int i = 0; i < n; i++) {
        dinic.addEdge(out[i], out[i + 1], i + 1);
    }
    for(int i = 0; i <= n; i++) {
        dinic.addEdge(in[i], out[i], 1);
    }
    dinic.addEdge(out[n], sink, n + 1);
    for(auto e : s) {
        dinic.addEdge(ic[c[e]], in[p[e]], 1);
    }
    auto res = dinic;
    int sz = s.size(), curans = 0;
    for(int i = q - 1; i >= 0; i--) {
        while(res.maxFlow(src, out[curans]) == curans) {
            curans++;
        }
        ans[i] = curans;
        dinic.addEdge(ic[c[qq[i]]], in[p[qq[i]]], 1);
        res = dinic;
    }
    for(int i = 0; i < q; i++) {
        cout << ans[i] << ""\n"";
    }
    return 0;
}"
Fj43TZ4K,# tk_masked_demo.py,here2share,Python,Tuesday 23rd of January 2024 07:51:34 PM CDT,"# tk_masked_demo.py

import tkinter as tk
from PIL import Image, ImageDraw, ImageTk, ImageFilter, ImageOps
import random

# Create a 500x500 canvas
canvas_width = 500
canvas_height = 500

root = tk.Tk()
canvas = tk.Canvas(root, width=canvas_width, height=canvas_height)
canvas.pack()

# Generate the colorful checkerboard image
checkerboard = Image.new('RGB', (canvas_width, canvas_height), (255, 255, 255))
draw = ImageDraw.Draw(checkerboard)
square_size = 50
colors = []
t = [z for z in range(0, 256, 35)]
for r in t:
	for g in t:
		for b in t:
			colors += [(r, g, b, 255)]
random.shuffle(colors)

for i in range(0, canvas_width, square_size):
    for j in range(0, canvas_height, square_size):
        color = colors.pop()
        draw.rectangle([i, j, i + square_size, j + square_size], fill=color)
checkerboard = checkerboard.filter(ImageFilter.GaussianBlur(radius=20))

polka_dot = Image.new('RGBA', (canvas_width, canvas_height), (255, 255, 255, 0))
draw = ImageDraw.Draw(polka_dot)
dot_size = 20
for i in range(0, canvas_width, dot_size+10):
    for j in range(0, canvas_height, dot_size+10):
        color = colors.pop()
        draw.ellipse([i, j, i + dot_size, j + dot_size], fill=color)
		
# Generate the mask
ww = 400
hh = 400
p = 10
mask = Image.new('L', (ww+p, hh+p), 0)
draw = ImageDraw.Draw(mask)
for i in range(0, min(ww+p, hh+p) // 2):
    draw.rectangle([i, i, ww+p - i, hh+p - i], fill=i * 255 // (min(ww+p, hh+p) // 5))
mask_size = (ww+p, hh+p)

polka_dot = polka_dot.resize(mask_size)
masked_polka_dot = Image.composite(polka_dot, Image.new('RGBA', mask_size, (255, 255, 255, 0)), mask)

checkerboard_tk = ImageTk.PhotoImage(checkerboard)
canvas.create_image(0, 0, anchor=tk.NW, image=checkerboard_tk)

masked_polka_dot_tk = ImageTk.PhotoImage(masked_polka_dot)
canvas.create_image((canvas_width // 2, canvas_height // 2), anchor=tk.CENTER, image=masked_polka_dot_tk)

root.mainloop()"
5uKx2Xc6,AHK IPA,sawczakl,Autohotkey,Tuesday 23rd of January 2024 07:42:23 PM CDT,"; adds Windows + f as an IPA hotkey
; once in IPA mode, press a letter to cycle through IPA symbols (see KEYS below)
; then hit another key (e.g. right arrow or space) to select that symbol
; e.g. to type æ type: windows + f > a > a > right arrow

; comments: luke@sawczak.com
; last updated 2020-08-13


;     KEYS

;     a = ɑ æ ɐ ɑ̃
;     b = β ɓ ʙ
;     c = ɕ ç
;     d = ð d͡ʒ ɖ ɗ
;     e = ə ɚ ɵ ɘ
;     f = ɛ ɜ ɝ ɛ̃ ɞ
;     g = ɠ ɢ ʛ
;     h = ɥ ɦ ħ ɧ ʜ
;     i = ɪ ɪ̈ ɨ
;     j = ʝ ɟ ʄ
;     k = ʔ ʕ ʢ ʡ
;     l = ɫ ɬ ʟ ɭ ɮ
;     m = ɱ
;     n = ŋ ɲ ɴ ɳ
;     o = ɔ œ ø ɒ ɔ̃ ɶ œ̃
;     p = ɸ
;     q = ""ˈ ""ˌ | ‖ ∅
;     r = ɾ ʁ ɹ ɻ ʀ ɽ ɺ
;     s = ʃ ʂ
;     t = θ t͡ʃ t͡s ʈ
;     u = ʊ ʊ̈ ʉ
;     v = ʌ ʋ ⱱ
;     w = ʍ ɯ ɰ
;     x = χ
;     y = ʎ ɣ ʏ ɤ
;     z = ʒ ʐ ʑ


#NoTrayIcon

#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

KEYS := {""a"": [""ɑ"", ""æ"", ""ɐ"", ""ɑ̃""],""b"": [""β"", ""ɓ"", ""ʙ""],""c"": [""ɕ"", ""ç""],""d"": [""ð"", ""d͡ʒ"", ""ɖ"", ""ɗ""],""e"": [""ə"", ""ɚ"", ""ɵ"", ""ɘ""],""f"": [""ɛ"", ""ɜ"", ""ɝ"", ""ɛ̃"", ""ɞ""],""g"": [""ɠ"", ""ɢ"", ""ʛ""],""h"": [""ɥ"", ""ɦ"", ""ħ"", ""ɧ"", ""ʜ""],""i"": [""ɪ"", ""ɪ̈"", ""ɨ""],""j"": [""ʝ"", ""ɟ"", ""ʄ""], ""k"": [""ʔ"", ""ʕ"", ""ʢ"", ""ʡ""],""l"": [""ɫ"", ""ɬ"", ""ʟ"", ""ɭ"", ""ɮ""],""m"": [""ɱ""], ""n"": [""ŋ"", ""ɲ"", ""ɴ"", ""ɳ""],""o"": [""ɔ"", ""œ"", ""ø"", ""ɒ"", ""ɔ̃"", ""ɶ"", ""œ̃""],""p"": [""ɸ""],""q"": [""ˈ"", ""ˌ"", ""|"", ""‖"", ""∅""],""r"": [""ɾ"", ""ʁ"", ""ɹ"", ""ɻ"", ""ʀ"", ""ɽ"", ""ɺ""],""s"": [""ʃ"", ""ʂ""],""t"": [""θ"", ""t͡ʃ"", ""t͡s"", ""ʈ""],""u"": [""ʊ"", ""ʊ̈"", ""ʉ""],""v"": [""ʌ"", ""ʋ"", ""ⱱ""],""w"": [""ʍ"", ""ɯ"", ""ɰ""],""x"": [""χ""],""y"": [""ʎ"", ""ɣ"", ""ʏ"", ""ɤ""],""z"": [""ʒ"", ""ʐ"", ""ʑ""]}

DIRECT := [""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""0"", "" "", "","", ""."", "";"", ""/"", ""["", ""]"", ""-"", ""="", ""\"", ""``"", ""'""]

#f::
 caret_x = %A_CaretX%
 caret_y = %A_CaretY%
 caret_y += 50
 
 tooltip, Entering IPA symbol (type alphabetic letters; any other key to quit), caret_x, caret_y

 started := 0
 index := 1
 last := ""-""
 entered := ""-""

 while True {
  Input, key, L1, {RCtrl}{Enter}{Delete}{BackSpace}{Escape}{LAlt}{RAlt}{LShift}{RShift}{AppsKey}{F1}{F2}{F3}{F4}{F5}{F6}{F7}{F8}{F9}{F10}{F11}{F12}{Left}{Right}{Up}{Down}{Home}{End}{PgUp}{PgDn}{Ins}{Capslock}{Numlock}{PrintScreen}{Pause}{LWin}{RWin}

  for i, val in DIRECT {
   if (val = key) {
    tooltip,
    send % key
    return
   }
  }

  if (not (KEYS.HasKey(key))) {
   tooltip,
   return

  } else {

   if ((started = 1) and (key != last)) {
    send % key
    tooltip,
    return
    index := 1
   } else if (key = last) {
    index++
   }

   if ((index) > KEYS[key].MaxIndex()) {
    index := 1
   }

   if (started = 1) {
    Loop, % StrLen(entered) {
     send {BackSpace}
    }
   } else {
    started := 1
   }

   last := key
   entered := KEYS[key][index]
   send % entered
  }
 }

return
"
tGy87Dzy,Disable windows 11 update,Flip,REG,Tuesday 23rd of January 2024 07:26:28 PM CDT,"Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate]
""TargetReleaseVersion""=dword:00000001
""ProductVersion""=""Windows 10""
""TargetReleaseVersionInfo""=""21H2""
"
HiFZHS0V,Untitled,kopyl,Python,Tuesday 23rd of January 2024 06:35:08 PM CDT,"import pika
from multiprocessing import Pool

    
def worker(message):
    print(message)


def main():
    connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))
    channel = connection.channel()

    pool = Pool(processes=2)

    def callback(ch, method, properties, body):
        message = body.decode()
        pool.apply_async(worker, (message,))

    channel.basic_consume(
        queue='hello',
        on_message_callback=callback,
    )

    channel.start_consuming()

    pool.close()
    pool.join()


if __name__ == '__main__':
    main()"
BWGaH1z5,snowybot completed lua,coinwalk,JavaScript,Tuesday 23rd of January 2024 06:18:58 PM CDT,"divide = 1000
myvery = (divide/5)
base = (balance/divide)
target  = (balance*24)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.5)
oldbalanceone  = 0
chance = 49.5
bethigh = false
nextbet = base
resetstats()
 
 
 
function dobet()
if ((balance>(((math.floor(balance/tens))*tens)+sevens)) and (balance<(((math.floor(balance/tens))*tens)+eights))) and (not (balance==oldbalanceone))) then
    nextbet = previousbet*2
    oldbalanceone = balance
end
if ((balance<=(nextbet*myvery)) and (balance<(((math.floor(balance/tens))*tens)+sevens))) then
    nextbet = base
    oldbalanceone  = 0
end
if (balance>=target) then
    stop()
end
end"
0CQBy1Eg,2024-01-23_stats.json,rdp_snitch,JSON,Tuesday 23rd of January 2024 06:18:29 PM CDT,"{
  ""ip"": {
    ""125.230.233.221"": 15,
    ""27.128.239.46"": 15,
    ""106.58.215.167"": 15,
    ""203.56.40.167"": 18,
    ""80.151.251.216"": 18,
    ""216.202.197.116"": 24,
    ""82.32.227.142"": 21,
    ""101.43.49.131"": 9,
    ""194.165.17.21"": 81,
    ""36.111.174.56"": 27,
    ""111.161.41.132"": 12,
    ""117.145.27.42"": 39,
    ""106.58.212.195"": 9,
    ""203.56.4.242"": 6,
    ""106.225.199.24"": 6,
    ""115.236.75.10"": 18,
    ""43.134.83.223"": 6,
    ""159.75.129.201"": 6,
    ""106.58.212.201"": 6,
    ""43.243.136.202"": 48,
    ""175.120.134.93"": 9,
    ""103.215.81.133"": 9,
    ""150.223.32.106"": 12,
    ""183.134.89.41"": 12,
    ""110.40.34.231"": 33,
    ""124.67.254.109"": 39,
    ""45.227.254.26"": 6,
    ""106.58.165.88"": 3,
    ""106.58.178.111"": 3,
    ""124.67.115.210"": 18,
    ""113.200.222.57"": 21,
    ""175.120.134.80"": 6,
    ""101.32.126.66"": 12,
    ""175.4.26.179"": 18,
    ""113.108.8.125"": 9,
    ""218.90.120.19"": 6,
    ""45.130.83.146"": 3,
    ""106.55.54.44"": 15,
    ""43.139.115.6"": 3,
    ""43.133.56.30"": 6,
    ""27.8.44.19"": 27,
    ""125.88.211.59"": 3,
    ""103.210.237.233"": 9,
    ""222.219.129.74"": 6,
    ""45.141.26.52"": 6,
    ""121.5.74.35"": 3,
    ""222.219.240.13"": 12,
    ""106.58.164.95"": 9,
    ""62.204.41.195"": 18,
    ""58.247.112.34"": 3,
    ""103.240.84.186"": 18,
    ""80.243.58.249"": 12,
    ""36.111.146.78"": 6,
    ""150.223.46.21"": 6,
    ""111.230.10.59"": 6,
    ""198.235.24.79"": 9,
    ""185.122.204.179"": 3,
    ""111.231.165.19"": 6,
    ""103.245.195.202"": 6,
    ""111.229.232.159"": 9,
    ""45.141.26.228"": 6,
    ""43.134.0.225"": 3,
    ""203.57.39.224"": 9,
    ""122.227.146.74"": 12,
    ""80.66.76.92"": 6,
    ""106.58.166.180"": 3,
    ""42.51.39.209"": 6,
    ""87.251.75.64"": 3,
    ""106.58.221.13"": 9,
    ""118.89.60.27"": 3,
    ""81.19.209.53"": 3,
    ""123.206.124.122"": 6,
    ""87.251.75.145"": 9,
    ""106.75.254.159"": 3,
    ""198.23.194.178"": 3,
    ""134.175.89.91"": 6,
    ""120.202.49.41"": 6,
    ""118.193.44.118"": 6,
    ""219.144.67.36"": 9,
    ""140.246.215.173"": 6,
    ""49.233.212.94"": 6,
    ""130.185.160.231"": 3,
    ""185.106.176.8"": 3,
    ""42.193.192.91"": 15,
    ""106.58.211.156"": 6,
    ""179.60.147.118"": 3,
    ""172.81.216.105"": 6,
    ""134.175.53.186"": 6,
    ""117.33.174.14"": 9,
    ""175.178.78.184"": 6,
    ""106.58.217.61"": 6,
    ""12.193.127.18"": 15,
    ""49.232.169.162"": 3,
    ""185.170.144.3"": 6,
    ""45.227.254.55"": 6,
    ""150.223.76.57"": 3,
    ""111.173.80.148"": 9,
    ""205.210.31.240"": 9,
    ""119.96.169.74"": 3,
    ""109.69.7.157"": 9,
    ""84.9.179.179"": 3,
    ""43.134.33.208"": 9,
    ""81.69.247.8"": 18,
    ""123.56.20.194"": 6,
    ""45.93.20.204"": 18,
    ""213.250.1.122"": 6,
    ""62.6.252.50"": 9,
    ""111.173.80.147"": 3,
    ""194.165.16.78"": 6,
    ""208.53.61.115"": 9,
    ""150.223.79.15"": 6,
    ""211.91.60.69"": 12,
    ""95.130.227.198"": 9,
    ""45.141.26.152"": 6,
    ""120.48.64.252"": 3,
    ""106.75.123.252"": 12,
    ""50.116.32.103"": 12,
    ""45.33.115.210"": 3,
    ""210.3.96.246"": 9,
    ""101.33.237.209"": 3,
    ""106.58.164.84"": 6,
    ""212.186.143.100"": 3,
    ""87.191.150.194"": 6,
    ""61.171.113.104"": 6,
    ""103.44.237.12"": 6,
    ""14.18.41.26"": 3,
    ""165.154.182.72"": 3,
    ""106.75.245.66"": 3,
    ""194.28.101.253"": 3,
    ""106.58.210.135"": 6,
    ""196.190.117.7"": 3,
    ""205.210.31.17"": 9,
    ""1.168.133.78"": 3,
    ""106.58.219.212"": 3,
    ""61.171.106.140"": 6,
    ""222.93.104.67"": 9,
    ""1.117.40.238"": 3,
    ""106.225.199.92"": 6,
    ""101.43.174.224"": 6,
    ""150.223.35.239"": 3,
    ""106.58.178.2"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""77.90.185.2"": 9,
    ""106.75.20.182"": 3,
    ""194.165.16.11"": 6,
    ""106.58.184.58"": 3,
    ""106.75.6.46"": 3,
    ""93.92.133.74"": 3,
    ""81.70.142.203"": 6,
    ""194.165.16.73"": 6,
    ""106.116.169.71"": 3,
    ""111.229.184.146"": 3,
    ""195.234.28.44"": 3,
    ""205.210.31.100"": 9,
    ""180.76.153.250"": 3,
    ""101.33.204.231"": 3,
    ""140.246.149.76"": 3
  },
  ""asn"": {
    ""AS3462"": 18,
    ""AS4134"": 183,
    ""AS58519"": 105,
    ""AS3320"": 24,
    ""AS3356"": 24,
    ""AS5089"": 21,
    ""AS45090"": 156,
    ""AS48721"": 99,
    ""AS4837"": 147,
    ""AS9808"": 45,
    ""AS134238"": 12,
    ""AS132203"": 36,
    ""AS4808"": 48,
    ""AS9318"": 15,
    ""AS55933"": 9,
    ""AS58461"": 12,
    ""AS38283"": 33,
    ""AS267784"": 12,
    ""AS63838"": 18,
    ""AS206092"": 3,
    ""AS58466"": 3,
    ""AS142403"": 9,
    ""AS142299"": 18,
    ""AS59425"": 18,
    ""AS17621"": 9,
    ""AS21413"": 12,
    ""AS396982"": 36,
    ""AS57523"": 21,
    ""AS9541"": 6,
    ""AS208091"": 18,
    ""AS56005"": 6,
    ""AS25369"": 3,
    ""AS36352"": 3,
    ""AS135377"": 9,
    ""AS134768"": 18,
    ""AS60949"": 3,
    ""AS42960"": 3,
    ""AS209588"": 3,
    ""AS7018"": 15,
    ""AS197414"": 6,
    ""AS148981"": 12,
    ""AS58563"": 3,
    ""AS21183"": 9,
    ""AS25310"": 3,
    ""AS37963"": 6,
    ""AS5603"": 6,
    ""AS2856"": 9,
    ""AS17341"": 9,
    ""AS35682"": 9,
    ""AS38365"": 6,
    ""AS23724"": 18,
    ""AS63949"": 15,
    ""AS9304"": 9,
    ""AS8412"": 3,
    ""AS4812"": 12,
    ""AS4816"": 6,
    ""AS211218"": 3,
    ""AS24757"": 3,
    ""AS208046"": 18,
    ""AS198465"": 9,
    ""AS29014"": 3,
    ""AS43872"": 3
  },
  ""isp"": {
    ""Chunghwa Telecom Co., Ltd."": 18,
    ""Chinanet"": 192,
    ""Cloud Computing Corporation"": 105,
    ""Deutsche Telekom AG"": 24,
    ""Level 3 Communications"": 24,
    ""Virgin Media"": 21,
    ""Shenzhen Tencent Computer Systems Company Limited"": 147,
    ""Flyservers S.A."": 114,
    ""China Unicom Tianjin Province Network"": 12,
    ""China Mobile communications corporation"": 45,
    ""CHINANET Jiangx province IDC network"": 12,
    ""China Unicom Beijing Province Network"": 48,
    ""SK Broadband Co Ltd"": 15,
    ""Cloudie Limited"": 9,
    ""CHINANET SiChuan Telecom Internet Data Center"": 33,
    ""CNC Group CHINA169 Neimeng Province Network"": 57,
    ""CNC Group CHINA169 Shannxi Province Network"": 21,
    ""Aceville Pte.ltd"": 18,
    ""Hengyang"": 18,
    ""Ipxo Limited"": 3,
    ""China Unicom Chongqing Province Network"": 27,
    ""China Telecom"": 15,
    ""Yisu Cloud LTD"": 9,
    ""CLOUDFOREST CO., LTD"": 18,
    ""China Internet Network Information Center"": 21,
    ""Horizon LLC"": 18,
    ""CNC Group CHINA169 Shanghai Province Network"": 3,
    ""China Unicom CHINA169 Network"": 18,
    ""envia TEL GmbH"": 12,
    ""Google LLC"": 36,
    ""Chang Way Technologies Co. Limited"": 21,
    ""Cyber Internet Services (Private) Limited"": 6,
    ""Xhost Internet Solutions LP"": 24,
    ""China Unicom Henan Province network"": 6,
    ""Hydra Communications Ltd"": 3,
    ""UCLOUD"": 24,
    ""HostPapa"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 9,
    ""CHINANET SHAANXI province Cloud Base network"": 18,
    ""4X SOLUTIONS"": 3,
    ""VH-GLOBAL"": 3,
    ""AT&T Services, Inc."": 15,
    ""CHINANET Hubei province network"": 3,
    ""Vodafone Network"": 9,
    ""Bulldog Communications"": 3,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""SIOL"": 6,
    ""British Telecommunications PLC"": 9,
    ""C7 Data Centers"": 9,
    ""CHINA UNICOM China169 Backbone"": 12,
    ""Best Internet Solution XK"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Akamai Technologies, Inc."": 15,
    ""HGC Global Communications Limited"": 9,
    ""T-Mobile Austria GmbH"": 3,
    ""China Telecom (Group)"": 18,
    ""CHINANET Guangdong province network"": 3,
    ""Kyiv National University of Construction and Architecture"": 3,
    ""Ethiotelecom"": 3,
    ""ColocationX Ltd."": 18,
    ""BtHoster LTD"": 9,
    ""INTERNET4YOU"": 3,
    ""EuroNet Internet"": 6,
    ""Optinet U.K. Limited"": 3
  },
  ""org"": {
    ""Chunghwa Telecom Co. Ltd."": 18,
    ""Chinanet HE"": 18,
    ""Chinanet YN"": 108,
    ""Chinanet FJ"": 33,
    ""Deutsche Telekom AG"": 24,
    ""Fort Wayne Internet, LLC"": 24,
    ""Unknown"": 213,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 66,
    ""Flyservers S.A"": 99,
    ""Chinanet ZJ"": 33,
    ""China Mobile"": 45,
    ""Chinanet JX"": 12,
    ""Hangzhou xiaoshan public transportation co., LTD"": 18,
    ""Tencent Cloud Computing"": 18,
    ""Beijing yunchuang communication Technology Co."": 48,
    ""SK Broadband Co Ltd"": 15,
    ""Netads Online Limited"": 9,
    ""Chinanet SD"": 39,
    ""Chengdu Giant Times Technology Co., Ltd"": 33,
    ""UAB Host Baltic"": 12,
    ""Chinanet HN"": 18,
    ""Chinanet GD"": 12,
    ""Chinanet JS"": 15,
    ""VPN Consumer New York City, United States of America"": 3,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 78,
    ""HK Kwaifong Group Limited"": 9,
    ""Cloudforest CO., LTD"": 18,
    ""Horizon LLC"": 18,
    ""envia.tel GmbH"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Starcrecium Limited"": 21,
    ""Cyber Internet Services Pakistan"": 6,
    ""Ningbo chaoji mamawangluojishu ltd"": 12,
    ""Xhost Internet Solutions"": 18,
    ""Henan Telcom Union Technology Co., LTD"": 6,
    ""Hydra Communications Ltd"": 3,
    ""Shanghai UCloud Information Technology Company Limited"": 24,
    ""ColoCrossing"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Chinanet SN"": 18,
    ""4x Solutions UK LTD"": 3,
    ""VH Global Limited"": 3,
    ""Cloud Solutions S.A"": 3,
    ""Golden-Bridge Netcom communication Co., LTD."": 6,
    ""ATT SERVICES INC- PEG"": 15,
    ""Xhostis"": 6,
    ""Chinanet HB"": 15,
    ""Aliyun Computing Co., LTD"": 6,
    ""Btnet"": 9,
    ""VegaDigital Solutions"": 9,
    ""Unicom"": 12,
    ""Best Internet Solution XK"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Linode"": 15,
    ""HGC Global Communications Limited"": 9,
    ""LBR GmbH"": 3,
    ""Chinanet SH"": 12,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 6,
    ""Ucloud Information Technology"": 3,
    ""Kyiv National University of Construction and Architecture"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""BtHoster LTD"": 9,
    ""internet4YOU GmbH & Co. KG"": 3,
    ""Online Breedband B.V."": 6,
    ""Optinet U.K. Networks 9 Limited"": 3
  },
  ""regionName"": {
    ""Taichung City"": 18,
    ""Hebei"": 18,
    ""Yunnan"": 108,
    ""Fujian"": 51,
    ""Bavaria"": 27,
    ""Indiana"": 24,
    ""Scotland"": 21,
    ""Shanghai"": 48,
    ""Kaunas"": 99,
    ""Zhejiang"": 75,
    ""Tianjin"": 12,
    ""Guangdong"": 138,
    ""Jiangxi"": 12,
    ""North West"": 24,
    ""Beijing"": 165,
    ""Gyeongsangbuk-do"": 15,
    ""Central and Western District"": 27,
    ""Shandong"": 39,
    ""Sichuan"": 33,
    ""Inner Mongolia"": 39,
    ""Vilnius"": 12,
    ""Shaanxi"": 21,
    ""Central Singapore"": 12,
    ""Hunan"": 18,
    ""Jiangsu"": 15,
    ""New York"": 6,
    ""Chongqing"": 27,
    ""Tsuen Wan District"": 9,
    ""Bangkok"": 18,
    ""Moscow"": 39,
    ""Brandenburg"": 12,
    ""California"": 39,
    ""Sindh"": 6,
    ""North Holland"": 36,
    ""Henan"": 6,
    ""Shanxi"": 18,
    ""England"": 18,
    ""Distrito Federal"": 3,
    ""Texas"": 18,
    ""Hubei"": 15,
    ""Tirana"": 9,
    ""Ljubljana"": 6,
    ""Utah"": 9,
    ""Tashkent"": 9,
    ""Georgia"": 12,
    ""Vienna"": 3,
    ""Rheinland-Pfalz"": 6,
    ""Kyiv City"": 3,
    ""Addis Ababa"": 3,
    ""Virginia"": 9,
    ""Free and Hanseatic City of Hamburg"": 3
  },
  ""country"": {
    ""Taiwan"": 18,
    ""China"": 858,
    ""Germany"": 48,
    ""United States"": 117,
    ""United Kingdom"": 39,
    ""Lithuania"": 111,
    ""Singapore"": 36,
    ""South Korea"": 15,
    ""Hong Kong"": 36,
    ""Thailand"": 18,
    ""Russia"": 39,
    ""Pakistan"": 6,
    ""The Netherlands"": 36,
    ""Venezuela"": 3,
    ""Albania"": 9,
    ""Slovenia"": 6,
    ""Uzbekistan"": 9,
    ""Austria"": 3,
    ""Ukraine"": 3,
    ""Ethiopia"": 3
  },
  ""account"": {
    ""142.93.8.59"": 1191,
    ""Test"": 48,
    ""(empty)"": 9,
    ""OIgxPhjAS"": 3,
    ""WiXYvW"": 3,
    ""XqHoSI"": 3,
    ""Administr"": 30,
    ""hYKqblKUh"": 3,
    ""nsSjOo"": 3,
    ""lzHQer"": 3,
    ""hello"": 12,
    ""Domain"": 66,
    ""vokbaasv"": 12,
    ""beio"": 3,
    ""Administrator"": 3,
    ""FZZhdIxTb"": 3,
    ""vbfBej"": 3,
    ""JjLleP"": 3,
    ""user"": 3,
    ""jJwIpceeb"": 3,
    ""bryLvJ"": 3,
    ""fnnICP"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1413
  },
  ""client_build"": {
    ""Unknown"": 1413
  },
  ""client_name"": {
    ""Unknown"": 1413
  },
  ""ip_type"": {
    ""Unknown"": 1038,
    ""mobile"": 75,
    ""hosting"": 234,
    ""proxy"": 60,
    ""mobile & proxy"": 3,
    ""hosting & proxy"": 3
  }
}"
i8MMfggT,2024-01-23_stats.json,rdp_snitch,JSON,Tuesday 23rd of January 2024 06:16:16 PM CDT,"{
  ""ip"": {
    ""125.230.233.221"": 10,
    ""27.128.239.46"": 10,
    ""106.58.215.167"": 10,
    ""203.56.40.167"": 12,
    ""80.151.251.216"": 12,
    ""216.202.197.116"": 16,
    ""82.32.227.142"": 14,
    ""101.43.49.131"": 6,
    ""194.165.17.21"": 54,
    ""36.111.174.56"": 18,
    ""111.161.41.132"": 8,
    ""117.145.27.42"": 26,
    ""106.58.212.195"": 6,
    ""203.56.4.242"": 4,
    ""106.225.199.24"": 4,
    ""115.236.75.10"": 12,
    ""43.134.83.223"": 4,
    ""159.75.129.201"": 4,
    ""106.58.212.201"": 4,
    ""43.243.136.202"": 32,
    ""175.120.134.93"": 6,
    ""103.215.81.133"": 6,
    ""150.223.32.106"": 8,
    ""183.134.89.41"": 8,
    ""110.40.34.231"": 22,
    ""124.67.254.109"": 26,
    ""45.227.254.26"": 4,
    ""106.58.165.88"": 2,
    ""106.58.178.111"": 2,
    ""124.67.115.210"": 12,
    ""113.200.222.57"": 14,
    ""175.120.134.80"": 4,
    ""101.32.126.66"": 8,
    ""175.4.26.179"": 12,
    ""113.108.8.125"": 6,
    ""218.90.120.19"": 4,
    ""45.130.83.146"": 2,
    ""106.55.54.44"": 10,
    ""43.139.115.6"": 2,
    ""43.133.56.30"": 4,
    ""27.8.44.19"": 18,
    ""125.88.211.59"": 2,
    ""103.210.237.233"": 6,
    ""222.219.129.74"": 4,
    ""45.141.26.52"": 4,
    ""121.5.74.35"": 2,
    ""222.219.240.13"": 8,
    ""106.58.164.95"": 6,
    ""62.204.41.195"": 12,
    ""58.247.112.34"": 2,
    ""103.240.84.186"": 12,
    ""80.243.58.249"": 8,
    ""36.111.146.78"": 4,
    ""150.223.46.21"": 4,
    ""111.230.10.59"": 4,
    ""198.235.24.79"": 6,
    ""185.122.204.179"": 2,
    ""111.231.165.19"": 4,
    ""103.245.195.202"": 4,
    ""111.229.232.159"": 6,
    ""45.141.26.228"": 4,
    ""43.134.0.225"": 2,
    ""203.57.39.224"": 6,
    ""122.227.146.74"": 8,
    ""80.66.76.92"": 4,
    ""106.58.166.180"": 2,
    ""42.51.39.209"": 4,
    ""87.251.75.64"": 2,
    ""106.58.221.13"": 6,
    ""118.89.60.27"": 2,
    ""81.19.209.53"": 2,
    ""123.206.124.122"": 4,
    ""87.251.75.145"": 6,
    ""106.75.254.159"": 2,
    ""198.23.194.178"": 2,
    ""134.175.89.91"": 4,
    ""120.202.49.41"": 4,
    ""118.193.44.118"": 4,
    ""219.144.67.36"": 6,
    ""140.246.215.173"": 4,
    ""49.233.212.94"": 4,
    ""130.185.160.231"": 2,
    ""185.106.176.8"": 2,
    ""42.193.192.91"": 10,
    ""106.58.211.156"": 4,
    ""179.60.147.118"": 2,
    ""172.81.216.105"": 4,
    ""134.175.53.186"": 4,
    ""117.33.174.14"": 6,
    ""175.178.78.184"": 4,
    ""106.58.217.61"": 4,
    ""12.193.127.18"": 10,
    ""49.232.169.162"": 2,
    ""185.170.144.3"": 4,
    ""45.227.254.55"": 4,
    ""150.223.76.57"": 2,
    ""111.173.80.148"": 6,
    ""205.210.31.240"": 6,
    ""119.96.169.74"": 2,
    ""109.69.7.157"": 6,
    ""84.9.179.179"": 2,
    ""43.134.33.208"": 6,
    ""81.69.247.8"": 12,
    ""123.56.20.194"": 4,
    ""45.93.20.204"": 12,
    ""213.250.1.122"": 4,
    ""62.6.252.50"": 6,
    ""111.173.80.147"": 2,
    ""194.165.16.78"": 4,
    ""208.53.61.115"": 6,
    ""150.223.79.15"": 4,
    ""211.91.60.69"": 8,
    ""95.130.227.198"": 6,
    ""45.141.26.152"": 4,
    ""120.48.64.252"": 2,
    ""106.75.123.252"": 8,
    ""50.116.32.103"": 8,
    ""45.33.115.210"": 2,
    ""210.3.96.246"": 6,
    ""101.33.237.209"": 2,
    ""106.58.164.84"": 4,
    ""212.186.143.100"": 2,
    ""87.191.150.194"": 4,
    ""61.171.113.104"": 4,
    ""103.44.237.12"": 4,
    ""14.18.41.26"": 2,
    ""165.154.182.72"": 2,
    ""106.75.245.66"": 2,
    ""194.28.101.253"": 2,
    ""106.58.210.135"": 4,
    ""196.190.117.7"": 2,
    ""205.210.31.17"": 6,
    ""1.168.133.78"": 2,
    ""106.58.219.212"": 2,
    ""61.171.106.140"": 4,
    ""222.93.104.67"": 6,
    ""1.117.40.238"": 2,
    ""106.225.199.92"": 4,
    ""101.43.174.224"": 4,
    ""150.223.35.239"": 2,
    ""106.58.178.2"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""77.90.185.2"": 6,
    ""106.75.20.182"": 2,
    ""194.165.16.11"": 4,
    ""106.58.184.58"": 2,
    ""106.75.6.46"": 2,
    ""93.92.133.74"": 2,
    ""81.70.142.203"": 4,
    ""194.165.16.73"": 4,
    ""106.116.169.71"": 2,
    ""111.229.184.146"": 2,
    ""195.234.28.44"": 2,
    ""205.210.31.100"": 6,
    ""180.76.153.250"": 2,
    ""101.33.204.231"": 2,
    ""140.246.149.76"": 2
  },
  ""asn"": {
    ""AS3462"": 12,
    ""AS4134"": 122,
    ""AS58519"": 70,
    ""AS3320"": 16,
    ""AS3356"": 16,
    ""AS5089"": 14,
    ""AS45090"": 104,
    ""AS48721"": 66,
    ""AS4837"": 98,
    ""AS9808"": 30,
    ""AS134238"": 8,
    ""AS132203"": 24,
    ""AS4808"": 32,
    ""AS9318"": 10,
    ""AS55933"": 6,
    ""AS58461"": 8,
    ""AS38283"": 22,
    ""AS267784"": 8,
    ""AS63838"": 12,
    ""AS206092"": 2,
    ""AS58466"": 2,
    ""AS142403"": 6,
    ""AS142299"": 12,
    ""AS59425"": 12,
    ""AS17621"": 6,
    ""AS21413"": 8,
    ""AS396982"": 24,
    ""AS57523"": 14,
    ""AS9541"": 4,
    ""AS208091"": 12,
    ""AS56005"": 4,
    ""AS25369"": 2,
    ""AS36352"": 2,
    ""AS135377"": 6,
    ""AS134768"": 12,
    ""AS60949"": 2,
    ""AS42960"": 2,
    ""AS209588"": 2,
    ""AS7018"": 10,
    ""AS197414"": 4,
    ""AS148981"": 8,
    ""AS58563"": 2,
    ""AS21183"": 6,
    ""AS25310"": 2,
    ""AS37963"": 4,
    ""AS5603"": 4,
    ""AS2856"": 6,
    ""AS17341"": 6,
    ""AS35682"": 6,
    ""AS38365"": 4,
    ""AS23724"": 12,
    ""AS63949"": 10,
    ""AS9304"": 6,
    ""AS8412"": 2,
    ""AS4812"": 8,
    ""AS4816"": 4,
    ""AS211218"": 2,
    ""AS24757"": 2,
    ""AS208046"": 12,
    ""AS198465"": 6,
    ""AS29014"": 2,
    ""AS43872"": 2
  },
  ""isp"": {
    ""Chunghwa Telecom Co., Ltd."": 12,
    ""Chinanet"": 128,
    ""Cloud Computing Corporation"": 70,
    ""Deutsche Telekom AG"": 16,
    ""Level 3 Communications"": 16,
    ""Virgin Media"": 14,
    ""Shenzhen Tencent Computer Systems Company Limited"": 98,
    ""Flyservers S.A."": 76,
    ""China Unicom Tianjin Province Network"": 8,
    ""China Mobile communications corporation"": 30,
    ""CHINANET Jiangx province IDC network"": 8,
    ""China Unicom Beijing Province Network"": 32,
    ""SK Broadband Co Ltd"": 10,
    ""Cloudie Limited"": 6,
    ""CHINANET SiChuan Telecom Internet Data Center"": 22,
    ""CNC Group CHINA169 Neimeng Province Network"": 38,
    ""CNC Group CHINA169 Shannxi Province Network"": 14,
    ""Aceville Pte.ltd"": 12,
    ""Hengyang"": 12,
    ""Ipxo Limited"": 2,
    ""China Unicom Chongqing Province Network"": 18,
    ""China Telecom"": 10,
    ""Yisu Cloud LTD"": 6,
    ""CLOUDFOREST CO., LTD"": 12,
    ""China Internet Network Information Center"": 14,
    ""Horizon LLC"": 12,
    ""CNC Group CHINA169 Shanghai Province Network"": 2,
    ""China Unicom CHINA169 Network"": 12,
    ""envia TEL GmbH"": 8,
    ""Google LLC"": 24,
    ""Chang Way Technologies Co. Limited"": 14,
    ""Cyber Internet Services (Private) Limited"": 4,
    ""Xhost Internet Solutions LP"": 16,
    ""China Unicom Henan Province network"": 4,
    ""Hydra Communications Ltd"": 2,
    ""UCLOUD"": 16,
    ""HostPapa"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""CHINANET SHAANXI province Cloud Base network"": 12,
    ""4X SOLUTIONS"": 2,
    ""VH-GLOBAL"": 2,
    ""AT&T Services, Inc."": 10,
    ""CHINANET Hubei province network"": 2,
    ""Vodafone Network"": 6,
    ""Bulldog Communications"": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""SIOL"": 4,
    ""British Telecommunications PLC"": 6,
    ""C7 Data Centers"": 6,
    ""CHINA UNICOM China169 Backbone"": 8,
    ""Best Internet Solution XK"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""Akamai Technologies, Inc."": 10,
    ""HGC Global Communications Limited"": 6,
    ""T-Mobile Austria GmbH"": 2,
    ""China Telecom (Group)"": 12,
    ""CHINANET Guangdong province network"": 2,
    ""Kyiv National University of Construction and Architecture"": 2,
    ""Ethiotelecom"": 2,
    ""ColocationX Ltd."": 12,
    ""BtHoster LTD"": 6,
    ""INTERNET4YOU"": 2,
    ""EuroNet Internet"": 4,
    ""Optinet U.K. Limited"": 2
  },
  ""org"": {
    ""Chunghwa Telecom Co. Ltd."": 12,
    ""Chinanet HE"": 12,
    ""Chinanet YN"": 72,
    ""Chinanet FJ"": 22,
    ""Deutsche Telekom AG"": 16,
    ""Fort Wayne Internet, LLC"": 16,
    ""Unknown"": 142,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 44,
    ""Flyservers S.A"": 66,
    ""Chinanet ZJ"": 22,
    ""China Mobile"": 30,
    ""Chinanet JX"": 8,
    ""Hangzhou xiaoshan public transportation co., LTD"": 12,
    ""Tencent Cloud Computing"": 12,
    ""Beijing yunchuang communication Technology Co."": 32,
    ""SK Broadband Co Ltd"": 10,
    ""Netads Online Limited"": 6,
    ""Chinanet SD"": 26,
    ""Chengdu Giant Times Technology Co., Ltd"": 22,
    ""UAB Host Baltic"": 8,
    ""Chinanet HN"": 12,
    ""Chinanet GD"": 8,
    ""Chinanet JS"": 10,
    ""VPN Consumer New York City, United States of America"": 2,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 52,
    ""HK Kwaifong Group Limited"": 6,
    ""Cloudforest CO., LTD"": 12,
    ""Horizon LLC"": 12,
    ""envia.tel GmbH"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Starcrecium Limited"": 14,
    ""Cyber Internet Services Pakistan"": 4,
    ""Ningbo chaoji mamawangluojishu ltd"": 8,
    ""Xhost Internet Solutions"": 12,
    ""Henan Telcom Union Technology Co., LTD"": 4,
    ""Hydra Communications Ltd"": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 16,
    ""ColoCrossing"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Chinanet SN"": 12,
    ""4x Solutions UK LTD"": 2,
    ""VH Global Limited"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Golden-Bridge Netcom communication Co., LTD."": 4,
    ""ATT SERVICES INC- PEG"": 10,
    ""Xhostis"": 4,
    ""Chinanet HB"": 10,
    ""Aliyun Computing Co., LTD"": 4,
    ""Btnet"": 6,
    ""VegaDigital Solutions"": 6,
    ""Unicom"": 8,
    ""Best Internet Solution XK"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 4,
    ""Linode"": 10,
    ""HGC Global Communications Limited"": 6,
    ""LBR GmbH"": 2,
    ""Chinanet SH"": 8,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 4,
    ""Ucloud Information Technology"": 2,
    ""Kyiv National University of Construction and Architecture"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""BtHoster LTD"": 6,
    ""internet4YOU GmbH & Co. KG"": 2,
    ""Online Breedband B.V."": 4,
    ""Optinet U.K. Networks 9 Limited"": 2
  },
  ""regionName"": {
    ""Taichung City"": 12,
    ""Hebei"": 12,
    ""Yunnan"": 72,
    ""Fujian"": 34,
    ""Bavaria"": 18,
    ""Indiana"": 16,
    ""Scotland"": 14,
    ""Shanghai"": 32,
    ""Kaunas"": 66,
    ""Zhejiang"": 50,
    ""Tianjin"": 8,
    ""Guangdong"": 92,
    ""Jiangxi"": 8,
    ""North West"": 16,
    ""Beijing"": 110,
    ""Gyeongsangbuk-do"": 10,
    ""Central and Western District"": 18,
    ""Shandong"": 26,
    ""Sichuan"": 22,
    ""Inner Mongolia"": 26,
    ""Vilnius"": 8,
    ""Shaanxi"": 14,
    ""Central Singapore"": 8,
    ""Hunan"": 12,
    ""Jiangsu"": 10,
    ""New York"": 4,
    ""Chongqing"": 18,
    ""Tsuen Wan District"": 6,
    ""Bangkok"": 12,
    ""Moscow"": 26,
    ""Brandenburg"": 8,
    ""California"": 26,
    ""Sindh"": 4,
    ""North Holland"": 24,
    ""Henan"": 4,
    ""Shanxi"": 12,
    ""England"": 12,
    ""Distrito Federal"": 2,
    ""Texas"": 12,
    ""Hubei"": 10,
    ""Tirana"": 6,
    ""Ljubljana"": 4,
    ""Utah"": 6,
    ""Tashkent"": 6,
    ""Georgia"": 8,
    ""Vienna"": 2,
    ""Rheinland-Pfalz"": 4,
    ""Kyiv City"": 2,
    ""Addis Ababa"": 2,
    ""Virginia"": 6,
    ""Free and Hanseatic City of Hamburg"": 2
  },
  ""country"": {
    ""Taiwan"": 12,
    ""China"": 572,
    ""Germany"": 32,
    ""United States"": 78,
    ""United Kingdom"": 26,
    ""Lithuania"": 74,
    ""Singapore"": 24,
    ""South Korea"": 10,
    ""Hong Kong"": 24,
    ""Thailand"": 12,
    ""Russia"": 26,
    ""Pakistan"": 4,
    ""The Netherlands"": 24,
    ""Venezuela"": 2,
    ""Albania"": 6,
    ""Slovenia"": 4,
    ""Uzbekistan"": 6,
    ""Austria"": 2,
    ""Ukraine"": 2,
    ""Ethiopia"": 2
  },
  ""account"": {
    ""142.93.8.59"": 794,
    ""Test"": 32,
    ""(empty)"": 6,
    ""OIgxPhjAS"": 2,
    ""WiXYvW"": 2,
    ""XqHoSI"": 2,
    ""Administr"": 20,
    ""hYKqblKUh"": 2,
    ""nsSjOo"": 2,
    ""lzHQer"": 2,
    ""hello"": 8,
    ""Domain"": 44,
    ""vokbaasv"": 8,
    ""beio"": 2,
    ""Administrator"": 2,
    ""FZZhdIxTb"": 2,
    ""vbfBej"": 2,
    ""JjLleP"": 2,
    ""user"": 2,
    ""jJwIpceeb"": 2,
    ""bryLvJ"": 2,
    ""fnnICP"": 2
  },
  ""keyboard"": {
    ""Unknown"": 942
  },
  ""client_build"": {
    ""Unknown"": 942
  },
  ""client_name"": {
    ""Unknown"": 942
  },
  ""ip_type"": {
    ""Unknown"": 692,
    ""mobile"": 50,
    ""hosting"": 156,
    ""proxy"": 40,
    ""mobile & proxy"": 2,
    ""hosting & proxy"": 2
  }
}"
jfWjpeF7,2024-01-23_stats.json,rdp_snitch,JSON,Tuesday 23rd of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""125.230.233.221"": 5,
    ""27.128.239.46"": 5,
    ""106.58.215.167"": 5,
    ""203.56.40.167"": 6,
    ""80.151.251.216"": 6,
    ""216.202.197.116"": 8,
    ""82.32.227.142"": 7,
    ""101.43.49.131"": 3,
    ""194.165.17.21"": 27,
    ""36.111.174.56"": 9,
    ""111.161.41.132"": 4,
    ""117.145.27.42"": 13,
    ""106.58.212.195"": 3,
    ""203.56.4.242"": 2,
    ""106.225.199.24"": 2,
    ""115.236.75.10"": 6,
    ""43.134.83.223"": 2,
    ""159.75.129.201"": 2,
    ""106.58.212.201"": 2,
    ""43.243.136.202"": 16,
    ""175.120.134.93"": 3,
    ""103.215.81.133"": 3,
    ""150.223.32.106"": 4,
    ""183.134.89.41"": 4,
    ""110.40.34.231"": 11,
    ""124.67.254.109"": 13,
    ""45.227.254.26"": 2,
    ""106.58.165.88"": 1,
    ""106.58.178.111"": 1,
    ""124.67.115.210"": 6,
    ""113.200.222.57"": 7,
    ""175.120.134.80"": 2,
    ""101.32.126.66"": 4,
    ""175.4.26.179"": 6,
    ""113.108.8.125"": 3,
    ""218.90.120.19"": 2,
    ""45.130.83.146"": 1,
    ""106.55.54.44"": 5,
    ""43.139.115.6"": 1,
    ""43.133.56.30"": 2,
    ""27.8.44.19"": 9,
    ""125.88.211.59"": 1,
    ""103.210.237.233"": 3,
    ""222.219.129.74"": 2,
    ""45.141.26.52"": 2,
    ""121.5.74.35"": 1,
    ""222.219.240.13"": 4,
    ""106.58.164.95"": 3,
    ""62.204.41.195"": 6,
    ""58.247.112.34"": 1,
    ""103.240.84.186"": 6,
    ""80.243.58.249"": 4,
    ""36.111.146.78"": 2,
    ""150.223.46.21"": 2,
    ""111.230.10.59"": 2,
    ""198.235.24.79"": 3,
    ""185.122.204.179"": 1,
    ""111.231.165.19"": 2,
    ""103.245.195.202"": 2,
    ""111.229.232.159"": 3,
    ""45.141.26.228"": 2,
    ""43.134.0.225"": 1,
    ""203.57.39.224"": 3,
    ""122.227.146.74"": 4,
    ""80.66.76.92"": 2,
    ""106.58.166.180"": 1,
    ""42.51.39.209"": 2,
    ""87.251.75.64"": 1,
    ""106.58.221.13"": 3,
    ""118.89.60.27"": 1,
    ""81.19.209.53"": 1,
    ""123.206.124.122"": 2,
    ""87.251.75.145"": 3,
    ""106.75.254.159"": 1,
    ""198.23.194.178"": 1,
    ""134.175.89.91"": 2,
    ""120.202.49.41"": 2,
    ""118.193.44.118"": 2,
    ""219.144.67.36"": 3,
    ""140.246.215.173"": 2,
    ""49.233.212.94"": 2,
    ""130.185.160.231"": 1,
    ""185.106.176.8"": 1,
    ""42.193.192.91"": 5,
    ""106.58.211.156"": 2,
    ""179.60.147.118"": 1,
    ""172.81.216.105"": 2,
    ""134.175.53.186"": 2,
    ""117.33.174.14"": 3,
    ""175.178.78.184"": 2,
    ""106.58.217.61"": 2,
    ""12.193.127.18"": 5,
    ""49.232.169.162"": 1,
    ""185.170.144.3"": 2,
    ""45.227.254.55"": 2,
    ""150.223.76.57"": 1,
    ""111.173.80.148"": 3,
    ""205.210.31.240"": 3,
    ""119.96.169.74"": 1,
    ""109.69.7.157"": 3,
    ""84.9.179.179"": 1,
    ""43.134.33.208"": 3,
    ""81.69.247.8"": 6,
    ""123.56.20.194"": 2,
    ""45.93.20.204"": 6,
    ""213.250.1.122"": 2,
    ""62.6.252.50"": 3,
    ""111.173.80.147"": 1,
    ""194.165.16.78"": 2,
    ""208.53.61.115"": 3,
    ""150.223.79.15"": 2,
    ""211.91.60.69"": 4,
    ""95.130.227.198"": 3,
    ""45.141.26.152"": 2,
    ""120.48.64.252"": 1,
    ""106.75.123.252"": 4,
    ""50.116.32.103"": 4,
    ""45.33.115.210"": 1,
    ""210.3.96.246"": 3,
    ""101.33.237.209"": 1,
    ""106.58.164.84"": 2,
    ""212.186.143.100"": 1,
    ""87.191.150.194"": 2,
    ""61.171.113.104"": 2,
    ""103.44.237.12"": 2,
    ""14.18.41.26"": 1,
    ""165.154.182.72"": 1,
    ""106.75.245.66"": 1,
    ""194.28.101.253"": 1,
    ""106.58.210.135"": 2,
    ""196.190.117.7"": 1,
    ""205.210.31.17"": 3,
    ""1.168.133.78"": 1,
    ""106.58.219.212"": 1,
    ""61.171.106.140"": 2,
    ""222.93.104.67"": 3,
    ""1.117.40.238"": 1,
    ""106.225.199.92"": 2,
    ""101.43.174.224"": 2,
    ""150.223.35.239"": 1,
    ""106.58.178.2"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""77.90.185.2"": 3,
    ""106.75.20.182"": 1,
    ""194.165.16.11"": 2,
    ""106.58.184.58"": 1,
    ""106.75.6.46"": 1,
    ""93.92.133.74"": 1,
    ""81.70.142.203"": 2,
    ""194.165.16.73"": 2,
    ""106.116.169.71"": 1,
    ""111.229.184.146"": 1,
    ""195.234.28.44"": 1,
    ""205.210.31.100"": 3,
    ""180.76.153.250"": 1,
    ""101.33.204.231"": 1,
    ""140.246.149.76"": 1
  },
  ""asn"": {
    ""AS3462"": 6,
    ""AS4134"": 61,
    ""AS58519"": 35,
    ""AS3320"": 8,
    ""AS3356"": 8,
    ""AS5089"": 7,
    ""AS45090"": 52,
    ""AS48721"": 33,
    ""AS4837"": 49,
    ""AS9808"": 15,
    ""AS134238"": 4,
    ""AS132203"": 12,
    ""AS4808"": 16,
    ""AS9318"": 5,
    ""AS55933"": 3,
    ""AS58461"": 4,
    ""AS38283"": 11,
    ""AS267784"": 4,
    ""AS63838"": 6,
    ""AS206092"": 1,
    ""AS58466"": 1,
    ""AS142403"": 3,
    ""AS142299"": 6,
    ""AS59425"": 6,
    ""AS17621"": 3,
    ""AS21413"": 4,
    ""AS396982"": 12,
    ""AS57523"": 7,
    ""AS9541"": 2,
    ""AS208091"": 6,
    ""AS56005"": 2,
    ""AS25369"": 1,
    ""AS36352"": 1,
    ""AS135377"": 3,
    ""AS134768"": 6,
    ""AS60949"": 1,
    ""AS42960"": 1,
    ""AS209588"": 1,
    ""AS7018"": 5,
    ""AS197414"": 2,
    ""AS148981"": 4,
    ""AS58563"": 1,
    ""AS21183"": 3,
    ""AS25310"": 1,
    ""AS37963"": 2,
    ""AS5603"": 2,
    ""AS2856"": 3,
    ""AS17341"": 3,
    ""AS35682"": 3,
    ""AS38365"": 2,
    ""AS23724"": 6,
    ""AS63949"": 5,
    ""AS9304"": 3,
    ""AS8412"": 1,
    ""AS4812"": 4,
    ""AS4816"": 2,
    ""AS211218"": 1,
    ""AS24757"": 1,
    ""AS208046"": 6,
    ""AS198465"": 3,
    ""AS29014"": 1,
    ""AS43872"": 1
  },
  ""isp"": {
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""Chinanet"": 64,
    ""Cloud Computing Corporation"": 35,
    ""Deutsche Telekom AG"": 8,
    ""Level 3 Communications"": 8,
    ""Virgin Media"": 7,
    ""Shenzhen Tencent Computer Systems Company Limited"": 49,
    ""Flyservers S.A."": 38,
    ""China Unicom Tianjin Province Network"": 4,
    ""China Mobile communications corporation"": 15,
    ""CHINANET Jiangx province IDC network"": 4,
    ""China Unicom Beijing Province Network"": 16,
    ""SK Broadband Co Ltd"": 5,
    ""Cloudie Limited"": 3,
    ""CHINANET SiChuan Telecom Internet Data Center"": 11,
    ""CNC Group CHINA169 Neimeng Province Network"": 19,
    ""CNC Group CHINA169 Shannxi Province Network"": 7,
    ""Aceville Pte.ltd"": 6,
    ""Hengyang"": 6,
    ""Ipxo Limited"": 1,
    ""China Unicom Chongqing Province Network"": 9,
    ""China Telecom"": 5,
    ""Yisu Cloud LTD"": 3,
    ""CLOUDFOREST CO., LTD"": 6,
    ""China Internet Network Information Center"": 7,
    ""Horizon LLC"": 6,
    ""CNC Group CHINA169 Shanghai Province Network"": 1,
    ""China Unicom CHINA169 Network"": 6,
    ""envia TEL GmbH"": 4,
    ""Google LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 7,
    ""Cyber Internet Services (Private) Limited"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""China Unicom Henan Province network"": 2,
    ""Hydra Communications Ltd"": 1,
    ""UCLOUD"": 8,
    ""HostPapa"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""CHINANET SHAANXI province Cloud Base network"": 6,
    ""4X SOLUTIONS"": 1,
    ""VH-GLOBAL"": 1,
    ""AT&T Services, Inc."": 5,
    ""CHINANET Hubei province network"": 1,
    ""Vodafone Network"": 3,
    ""Bulldog Communications"": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""SIOL"": 2,
    ""British Telecommunications PLC"": 3,
    ""C7 Data Centers"": 3,
    ""CHINA UNICOM China169 Backbone"": 4,
    ""Best Internet Solution XK"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""Akamai Technologies, Inc."": 5,
    ""HGC Global Communications Limited"": 3,
    ""T-Mobile Austria GmbH"": 1,
    ""China Telecom (Group)"": 6,
    ""CHINANET Guangdong province network"": 1,
    ""Kyiv National University of Construction and Architecture"": 1,
    ""Ethiotelecom"": 1,
    ""ColocationX Ltd."": 6,
    ""BtHoster LTD"": 3,
    ""INTERNET4YOU"": 1,
    ""EuroNet Internet"": 2,
    ""Optinet U.K. Limited"": 1
  },
  ""org"": {
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""Chinanet HE"": 6,
    ""Chinanet YN"": 36,
    ""Chinanet FJ"": 11,
    ""Deutsche Telekom AG"": 8,
    ""Fort Wayne Internet, LLC"": 8,
    ""Unknown"": 71,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 22,
    ""Flyservers S.A"": 33,
    ""Chinanet ZJ"": 11,
    ""China Mobile"": 15,
    ""Chinanet JX"": 4,
    ""Hangzhou xiaoshan public transportation co., LTD"": 6,
    ""Tencent Cloud Computing"": 6,
    ""Beijing yunchuang communication Technology Co."": 16,
    ""SK Broadband Co Ltd"": 5,
    ""Netads Online Limited"": 3,
    ""Chinanet SD"": 13,
    ""Chengdu Giant Times Technology Co., Ltd"": 11,
    ""UAB Host Baltic"": 4,
    ""Chinanet HN"": 6,
    ""Chinanet GD"": 4,
    ""Chinanet JS"": 5,
    ""VPN Consumer New York City, United States of America"": 1,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 26,
    ""HK Kwaifong Group Limited"": 3,
    ""Cloudforest CO., LTD"": 6,
    ""Horizon LLC"": 6,
    ""envia.tel GmbH"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Starcrecium Limited"": 7,
    ""Cyber Internet Services Pakistan"": 2,
    ""Ningbo chaoji mamawangluojishu ltd"": 4,
    ""Xhost Internet Solutions"": 6,
    ""Henan Telcom Union Technology Co., LTD"": 2,
    ""Hydra Communications Ltd"": 1,
    ""Shanghai UCloud Information Technology Company Limited"": 8,
    ""ColoCrossing"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet SN"": 6,
    ""4x Solutions UK LTD"": 1,
    ""VH Global Limited"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Golden-Bridge Netcom communication Co., LTD."": 2,
    ""ATT SERVICES INC- PEG"": 5,
    ""Xhostis"": 2,
    ""Chinanet HB"": 5,
    ""Aliyun Computing Co., LTD"": 2,
    ""Btnet"": 3,
    ""VegaDigital Solutions"": 3,
    ""Unicom"": 4,
    ""Best Internet Solution XK"": 3,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 2,
    ""Linode"": 5,
    ""HGC Global Communications Limited"": 3,
    ""LBR GmbH"": 1,
    ""Chinanet SH"": 4,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 2,
    ""Ucloud Information Technology"": 1,
    ""Kyiv National University of Construction and Architecture"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""BtHoster LTD"": 3,
    ""internet4YOU GmbH & Co. KG"": 1,
    ""Online Breedband B.V."": 2,
    ""Optinet U.K. Networks 9 Limited"": 1
  },
  ""regionName"": {
    ""Taichung City"": 6,
    ""Hebei"": 6,
    ""Yunnan"": 36,
    ""Fujian"": 17,
    ""Bavaria"": 9,
    ""Indiana"": 8,
    ""Scotland"": 7,
    ""Shanghai"": 16,
    ""Kaunas"": 33,
    ""Zhejiang"": 25,
    ""Tianjin"": 4,
    ""Guangdong"": 46,
    ""Jiangxi"": 4,
    ""North West"": 8,
    ""Beijing"": 55,
    ""Gyeongsangbuk-do"": 5,
    ""Central and Western District"": 9,
    ""Shandong"": 13,
    ""Sichuan"": 11,
    ""Inner Mongolia"": 13,
    ""Vilnius"": 4,
    ""Shaanxi"": 7,
    ""Central Singapore"": 4,
    ""Hunan"": 6,
    ""Jiangsu"": 5,
    ""New York"": 2,
    ""Chongqing"": 9,
    ""Tsuen Wan District"": 3,
    ""Bangkok"": 6,
    ""Moscow"": 13,
    ""Brandenburg"": 4,
    ""California"": 13,
    ""Sindh"": 2,
    ""North Holland"": 12,
    ""Henan"": 2,
    ""Shanxi"": 6,
    ""England"": 6,
    ""Distrito Federal"": 1,
    ""Texas"": 6,
    ""Hubei"": 5,
    ""Tirana"": 3,
    ""Ljubljana"": 2,
    ""Utah"": 3,
    ""Tashkent"": 3,
    ""Georgia"": 4,
    ""Vienna"": 1,
    ""Rheinland-Pfalz"": 2,
    ""Kyiv City"": 1,
    ""Addis Ababa"": 1,
    ""Virginia"": 3,
    ""Free and Hanseatic City of Hamburg"": 1
  },
  ""country"": {
    ""Taiwan"": 6,
    ""China"": 286,
    ""Germany"": 16,
    ""United States"": 39,
    ""United Kingdom"": 13,
    ""Lithuania"": 37,
    ""Singapore"": 12,
    ""South Korea"": 5,
    ""Hong Kong"": 12,
    ""Thailand"": 6,
    ""Russia"": 13,
    ""Pakistan"": 2,
    ""The Netherlands"": 12,
    ""Venezuela"": 1,
    ""Albania"": 3,
    ""Slovenia"": 2,
    ""Uzbekistan"": 3,
    ""Austria"": 1,
    ""Ukraine"": 1,
    ""Ethiopia"": 1
  },
  ""account"": {
    ""142.93.8.59"": 397,
    ""Test"": 16,
    ""(empty)"": 3,
    ""OIgxPhjAS"": 1,
    ""WiXYvW"": 1,
    ""XqHoSI"": 1,
    ""Administr"": 10,
    ""hYKqblKUh"": 1,
    ""nsSjOo"": 1,
    ""lzHQer"": 1,
    ""hello"": 4,
    ""Domain"": 22,
    ""vokbaasv"": 4,
    ""beio"": 1,
    ""Administrator"": 1,
    ""FZZhdIxTb"": 1,
    ""vbfBej"": 1,
    ""JjLleP"": 1,
    ""user"": 1,
    ""jJwIpceeb"": 1,
    ""bryLvJ"": 1,
    ""fnnICP"": 1
  },
  ""keyboard"": {
    ""Unknown"": 471
  },
  ""client_build"": {
    ""Unknown"": 471
  },
  ""client_name"": {
    ""Unknown"": 471
  },
  ""ip_type"": {
    ""Unknown"": 346,
    ""mobile"": 25,
    ""hosting"": 78,
    ""proxy"": 20,
    ""mobile & proxy"": 1,
    ""hosting & proxy"": 1
  }
}"
5Z8s3U2x,Untitled,asyba,JSON,Tuesday 23rd of January 2024 05:08:26 PM CDT,"{
   ""activity"": {
      ""timeout"": 1,
      ""max"": 25
   },
   ""ring"": {
      ""identity"": {
         ""color"": [
            0,
            0,
            255
         ],
         ""max"": 32
      },
      ""dots"": {
         ""timeout"": 1,
         ""max"": 25,
         ""macro"": 0
      }
   },
   ""A"": {
      ""1"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            346,
            173,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            1521,
            342,
            86,
            21,
            3658
         ]
      },
      ""4"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""5"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""6"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""7"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""8"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            838
         ]
      },
      ""9"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            862
         ]
      },
      ""Power"": {
         ""Off"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               340,
               169,
               20,
               20,
               20,
               20,
               20,
               64,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               64,
               20,
               64,
               20,
               20,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               64,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               20,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               64,
               20,
               1544,
               340,
               85,
               20,
               3663
            ]
         },
         ""On"": [
            {
               ""PRONTO"": [
                  0,
                  109,
                  34,
                  2,
                  346,
                  173,
                  21,
                  65,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  21,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  21,
                  21,
                  65,
                  21,
                  65,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  65,
                  21,
                  21,
                  21,
                  1521,
                  342,
                  86,
                  21,
                  3658
               ]
            },
            {
               ""PRONTO"": [
                  0,
                  109,
                  34,
                  2,
                  340,
                  169,
                  20,
                  20,
                  20,
                  20,
                  20,
                  64,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  64,
                  20,
                  64,
                  20,
                  20,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  64,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  20,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  64,
                  20,
                  1544,
                  340,
                  85,
                  20,
                  3663
               ]
            }
         ]
      },
      ""RW"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            346,
            173,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            1521,
            342,
            86,
            21,
            3658
         ]
      },
      ""Play"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            346,
            173,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            1521,
            342,
            86,
            21,
            3658
         ]
      },
      ""FF"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            346,
            173,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            1521,
            342,
            86,
            21,
            3658
         ]
      },
      ""Home"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            346,
            173,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            65,
            21,
            21,
            21,
            1521,
            342,
            86,
            21,
            3658
         ]
      },
      ""Info"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            1544,
            340,
            86,
            20,
            3663
         ]
      },
      ""Up"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            1544,
            340,
            86,
            20,
            3663
         ]
      },
      ""Right"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            1544,
            340,
            85,
            20,
            3663
         ]
      },
      ""Down"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            1544,
            340,
            86,
            20,
            3664
         ]
      },
      ""Left"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            1544,
            340,
            86,
            20,
            3663
         ]
      },
      ""Okay"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            1544,
            340,
            85,
            20,
            3663
         ]
      },
      ""Menu"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            342,
            171,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            1526,
            342,
            86,
            21,
            3657
         ]
      },
      ""Back"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            341,
            170,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            21,
            21,
            64,
            21,
            64,
            21,
            1513,
            341,
            85,
            21,
            3651
         ]
      },
      ""Vol Up"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            1544,
            340,
            85,
            20,
            3663
         ]
      },
      ""Vol Down"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            340,
            169,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            64,
            20,
            1544,
            340,
            85,
            20,
            3663
         ]
      },
      ""Mute"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""Ch Up"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""Ch Down"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            863
         ]
      },
      ""colorwheel"": {
         ""Up"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               346,
               173,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               1521,
               342,
               86,
               21,
               3658
            ]
         },
         ""Right"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               346,
               173,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               1521,
               342,
               86,
               21,
               3658
            ]
         },
         ""Down"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               346,
               173,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               1521,
               342,
               86,
               21,
               3658
            ]
         },
         ""Left"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               346,
               173,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               1521,
               342,
               86,
               21,
               3658
            ]
         },
         ""Okay"": {
            ""PRONTO"": [
               0,
               109,
               34,
               2,
               346,
               173,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               65,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               21,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               65,
               21,
               21,
               21,
               1521,
               342,
               86,
               21,
               3658
            ]
         }
      }
   },
   ""B"": {
      ""0"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""1"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""2"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""3"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            2765
         ]
      },
      ""4"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""5"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""6"": {
         ""PRONTO"": [
            0,
            109,
            34,
            2,
            343,
            172,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            65,
            21,
            65,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            65,
            21,
            22,
            21,
            22,
            21,
            1673,
            343,
            86,
            21,
            3732
         ]
      },
      ""7"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""8"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            838
         ]
      },
      ""9"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            862
         ]
      },
      ""Power"": {
         ""Off"": [
            {
               ""PRONTO"": [
                  0,
                  109,
                  34,
                  2,
                  343,
                  172,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  1673,
                  343,
                  86,
                  21,
                  3732
               ]
            },
            {
               ""PRONTO"": [
                  0,
                  112,
                  0,
                  50,
                  128,
                  64,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  2765
               ]
            },
            {
               ""PRONTO"": [
                  0,
                  103,
                  0,
                  16,
                  95,
                  23,
                  47,
                  23,
                  23,
                  23,
                  47,
                  23,
                  23,
                  23,
                  47,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  23,
                  47,
                  23,
                  47,
                  23,
                  23,
                  23,
                  23,
                  862
               ]
            }
         ],
         ""On"": [
            {
               ""PRONTO"": [
                  0,
                  112,
                  0,
                  50,
                  128,
                  64,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  48,
                  16,
                  48,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  16,
                  48,
                  16,
                  2765
               ],
               ""delay"": 0
            },
            {
               ""PRONTO"": [
                  0,
                  109,
                  34,
                  2,
                  343,
                  172,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  64,
                  21,
                  64,
                  21,
                  64,
                  21,
                  21,
                  21,
                  21,
                  21,
                  1673,
                  343,
                  86,
                  21,
                  3732
               ]
            },
            {
               ""PRONTO"": [
                  0,
                  109,
                  34,
                  2,
                  343,
                  172,
                  21,
                  22,
                  21,
                  22,
                  21,
                  65,
                  21,
                  22,
                  21,
                  22,
                  21,
                  22,
                  21,
                  22,
                  21,
                  22,
                  21,
                  65,
                  21,
                  65,
                  21,
                  22,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  22,
                  21,
                  65,
                  21,
                  22,
                  21,
                  65,
                  21,
                  65,
                  21,
                  22,
                  21,
                  65,
                  21,
                  65,
                  21,
                  65,
                  21,
                  22,
                  21,
                  65,
                  21,
                  22,
                  21,
                  22,
                  21,
                  65,
                  21,
                  22,
                  21,
                  22,
                  21,
                  1673,
                  343,
                  86,
                  21,
                  3732
               ]
            }
         ]
      },
      ""RW"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""Play"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""FF"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""Home"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            2765
         ]
      },
      ""Info"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""Up"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Right"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Down"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Left"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Okay"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Menu"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Back"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            2765
         ]
      },
      ""Vol Up"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""Vol Down"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            863
         ]
      },
      ""Mute"": {
         ""PRONTO"": [
            0,
            103,
            0,
            16,
            95,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            47,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            47,
            23,
            47,
            23,
            23,
            23,
            23,
            887
         ]
      },
      ""Stop"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""Record"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            2765
         ]
      },
      ""Ch Up"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            2765
         ]
      },
      ""Ch Down"": {
         ""PRONTO"": [
            0,
            112,
            0,
            50,
            128,
            64,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            48,
            16,
            16,
            16,
            16,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            48,
            16,
            2765
         ]
      },
      ""colorwheel"": {
         ""Down"": {
            ""PRONTO"": [
               0,
               112,
               0,
               50,
               128,
               64,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               2765
            ]
         },
         ""Right"": {
            ""PRONTO"": [
               0,
               112,
               0,
               50,
               128,
               64,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               2765
            ]
         },
         ""Up"": {
            ""PRONTO"": [
               0,
               112,
               0,
               50,
               128,
               64,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               2765
            ]
         },
         ""Left"": {
            ""PRONTO"": [
               0,
               112,
               0,
               50,
               128,
               64,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               48,
               16,
               16,
               16,
               16,
               16,
               16,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               48,
               16,
               2765
            ]
         }
      }
   }
}"
HyqJszfc,modechge.sh,snowgum,Bash,Tuesday 23rd of January 2024 04:35:46 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter

MODEMTYPE=$1
NETMODE=$2

# log() {
	modlog ""ModeChange $CURRMODEM"" ""$@""
# }

CURRMODEM=$(uci get modem.general.miscnum)
uci set modem.modem$CURRMODEM.cmode=""0""
uci set modem.modem$CURRMODEM.netmode=""10""
uci commit modem

MODEMTYPE=$(uci get modem.modem$CURRMODEM.modemtype)
COMMPORT=""/dev/ttyUSB""$(uci get modem.modem$CURRMODEM.commport)

# ZTE
if [ $MODEMTYPE -eq 1 ]; then
	case $NETMODE in
		1*)
			ATC=""AT+ZSNT=0,0,0"" ;;
		2*)
			ATC=""AT+ZSNT=0,0,1"" ;;
		3*)
			ATC=""AT+ZSNT=1,0,0"" ;;
		4*)
			ATC=""AT+ZSNT=0,0,2"" ;;
		5*)
			ATC=""AT+ZSNT=2,0,0"" ;;
		6*)
			ATC=""AT+ZSNT=0,0,6"" ;;
		7*)
			ATC=""AT+ZSNT=6,0,0"" ;;
	esac
	ATC=$ATC"";+ZBANDI=0""
fi

# Sierra
if [ $MODEMTYPE -eq 2 ]; then
	case $NETMODE in
		""3"" )
			ATC=""AT!SELRAT=2"" ;;
		""5"" )
			ATC=""AT!SELRAT=1"" ;;
		""7"" )
			ATC=""AT!SELRAT=6"" ;;
		* )
			ATC=""AT!SELRAT=0"" ;;
	esac
fi

# Huawei LTE
if [ $MODEMTYPE -eq 3 ]; then
	case $NETMODE in
                1*)
                        ATC=""AT^SYSCFGEX=\""00\"",40000000,2,4,40000000,,"" ;;
                2*)
                        ATC=""AT^SYSCFGEX=\""010203\"",40000000,2,4,40000000,,"" ;;
                3*)
                        ATC=""AT^SYSCFGEX=\""01\"",40000000,2,4,40000000,,"" ;;
                4*)
                        ATC=""AT^SYSCFGEX=\""020301\"",40000000,2,4,40000000,,"" ;;
                5*)
                        ATC=""AT^SYSCFGEX=\""02\"",40000000,2,4,40000000,,"" ;;
                6*)
                        ATC=""AT^SYSCFGEX=\""030201\"",40000000,2,4,40000000,,"" ;;
                7*)
                        ATC=""AT^SYSCFGEX=\""03\"",40000000,2,4,40000000,,"" ;;
        esac
fi

# Huawei legacy
if [ $MODEMTYPE -eq 4 ]; then
	case $NETMODE in
		1*)
			ATC=""AT^SYSCFG=2,0,40000000,2,4"" ;;
		2*)
			ATC=""AT^SYSCFG=2,1,40000000,2,4"" ;;
		3*)
			ATC=""AT^SYSCFG=13,1,40000000,2,4"" ;;
		4*)
			ATC=""AT^SYSCFG=2,2,40000000,2,4"" ;;
		5*)
			ATC=""AT^SYSCFG=14,2,40000000,2,4"" ;;
	esac
fi

# ublox
if [ $MODEMTYPE -eq 5 ]; then
	case $NETMODE in
		1*)
			ATC=""AT+CFUN=4;+URAT=4,3;+CFUN=1,1"" ;;
		2*)
			ATC=""AT+CFUN=4;+URAT=4,0;+CFUN=1,1"" ;;
		3*)
			ATC=""AT+CFUN=4;+URAT=0;+CFUN=1,1"" ;;
		4*)
			ATC=""AT+CFUN=4;+URAT=4,2;+CFUN=1,1"" ;;
		5*)
			ATC=""AT+CFUN=4;+URAT=2;+CFUN=1,1"" ;;
		6*)
			ATC=""AT+CFUN=4;+URAT=4,3;+CFUN=1,1"" ;;
		7*)
			ATC=""AT+CFUN=4;+URAT=4,3;+CFUN=1,1"" ;;
	esac
fi

# Quectel
if [ $MODEMTYPE -eq 6 ]; then
	CURRMODEM=$(uci -q get modem.general.modemnum)
	idV=$(uci -q get modem.modem$CURRMODEM.idV)
	idP=$(uci -q get modem.modem$CURRMODEM.idP)
	ATCMDD=""AT+CGMM""
	model=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
	EM20=$(echo ""$model"" | grep ""EM20"")
	if [ $EM20 ]; then
		idP=""0""
	fi
	NEWFMT=false
	if [ ""$idV"" = ""2c7c"" ]; then
		if [ ""$idP"" = ""0800"" -o ""$idP"" = ""0620"" -o ""$idP"" = ""030b"" -o ""$idP"" = ""0801"" -o ""$idP"" = ""0900"" ]; then
			NEWFMT=true
		fi
	fi
	case $NETMODE in
		""3"")
			ATC=""AT+QCFG=\""nwscanmode\"",1"" ;;
		""5"")
			if $NEWFMT; then
				ATC=""AT+QNWPREFCFG=\""mode_pref\"",WCDMA""
			else
				ATC=""AT+QCFG=\""nwscanmode\"",2""
			fi
			;;
		""7"")
			if $NEWFMT; then
				ATC=""AT+QNWPREFCFG=\""mode_pref\"",LTE""
			else
				ATC=""AT+QCFG=\""nwscanmode\"",3""
			fi
			;;
		""8"")
			ATC=""AT+QNWPREFCFG=\""mode_pref\"",LTE:NR5G"" ;;
		""9"")
			ATC=""AT+QNWPREFCFG=\""mode_pref\"",NR5G"" ;;
		*)
			if $NEWFMT; then
				ATC=""AT+QNWPREFCFG=\""mode_pref\"",AUTO""
			else
				ATC=""AT+QCFG=\""nwscanmode\"",0""
			fi
			;;
	esac
fi

# MEIG
if [ $MODEMTYPE -eq 7 ]; then
	CURRMODEM=$(uci -q get modem.general.modemnum)
	idV=$(uci -q get modem.modem$CURRMODEM.idV)
	if [ $idV == ""2dee"" ]; then
		case $NETMODE in
			""4"")
				ATC=""AT^SYSCFGEX=\""020304\"""" ;;
			""5"")
				ATC=""AT^SYSCFGEX=\""02\"""" ;;
			""6"")
				ATC=""AT^SYSCFGEX=\""030402\"""" ;;
			""7"")
				ATC=""AT^SYSCFGEX=\""03\"""" ;;
			""8"")
				ATC=""AT^SYSCFGEX=\""0403\"""" ;;
			""9"")
				ATC=""AT^SYSCFGEX=\""04\"""" ;;
			*)
				ATC=""AT^SYSCFGEX=\""00\"""" ;;
		esac
	else
		case $NETMODE in
			""3"")
				ATC=""AT+MODODR=3"" ;;
			""5"")
				ATC=""AT+MODODR=1"" ;;
			""7"")
				ATC=""AT+MODODR=5"" ;;
			*)
				ATC=""AT+MODODR=2"" ;;
		esac
	fi
fi

# Telit, Foxconn, etc.
if [ $MODEMTYPE -eq 8 ]; then
	case $NETMODE in
		""3"" )
			ATC=""AT\$QCNSP=1,0,0"" ;;
		""5"" )
			ATC=""AT\$QCNSP=2,0,0"" ;;
		""7"" )
			ATC=""AT\$QCNSP=6,0,0"" ;;
		* )
			ATC=""AT\$QCNSP=0,0,0"" ;;
	esac
fi

# Fibocom
if [ $MODEMTYPE -eq 9 ]; then
	CURRMODEM=$(uci -q get modem.general.modemnum)
	idV=$(uci -q get modem.modem$CURRMODEM.idV)
	idP=$(uci -q get modem.modem$CURRMODEM.idP)
	idPP=${idP:1:1}
	if [ ""$idPP"" = ""1"" ]; then
		case $NETMODE in
			""7"")
				ATC=""AT+GTRAT=3"" ;;
			""8"")
				ATC=""AT+GTRAT=17"" ;;
			""9"")
				ATC=""AT+GTRAT=14"" ;;
			*)
				ATC=""AT+GTRAT=10"" ;;
		esac
	else
		case $NETMODE in
			""4"")
				ATC=""AT+XACT=4,1"" ;;
			""5"")
				ATC=""AT+XACT=1"" ;;
			""7"")
				ATC=""AT+XACT=2"" ;;
			*)
				ATC=""AT+XACT=4,2"" ;;
		esac
	fi
fi

# SIMCom
if [ $MODEMTYPE -eq 10 ]; then
	case $NETMODE in
		""3"")
			ATC=""AT+CNMP=13"" ;;
		""5"")
			ATC=""AT+CNMP=14"" ;;
		""7"")
			ATC=""AT+CNMP=38"" ;;
		""8"")
			ATC=""AT+CNMP=109"" ;;
		""9"")
			ATC=""AT+CNMP=71"" ;;
		*)
			ATC=""AT+CNMP=2"" ;;
	esac
fi

# Quanta, Megafon
if [ $MODEMTYPE -eq 11 ]; then
	case $NETMODE in
		""5"")
			ATC=""AT^QCNCFG=02"" ;;
		""7"")
			ATC=""AT^QCNCFG=03"" ;;
		*)
			ATC=""AT^QCNCFG=00"" ;;
	esac
fi

ATCMDD=""$ATC""
OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")

$ROOTER/luci/celltype.sh $CURRMODEM
uci set modem.modem$CURRMODEM.cmode=""1""
uci commit modem

if [ $MODEMTYPE -ne 9 -o ""$idP"" != ""0104"" ]; then
	$ROOTER/luci/restart.sh $CURRMODEM 11
fi
"
CPQEB1vy,battle_character4,sonjavanteese,JSON,Tuesday 23rd of January 2024 04:31:13 PM CDT,"{
  ""character"": {
    ""astra"": {
      ""slug"": ""astra"",
      ""name"": ""Astra"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""breach"": {
      ""slug"": ""breach"",
      ""name"": ""Breach"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""brimstone"": {
      ""slug"": ""brimstone"",
      ""name"": ""Brimstone"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""chamber"": {
      ""slug"": ""chamber"",
      ""name"": ""Chamber"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""cypher"": {
      ""slug"": ""cypher"",
      ""name"": ""Cypher"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""fade"": {
      ""slug"": ""fade"",
      ""name"": ""Fade"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""jett"": {
      ""slug"": ""jett"",
      ""name"": ""Jett"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""kayo"": {
      ""slug"": ""kayo"",
      ""name"": ""Kayo"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""killjoy"": {
      ""slug"": ""killjoy"",
      ""name"": ""Killjoy"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""neon"": {
      ""slug"": ""neon"",
      ""name"": ""Neon"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""omen"": {
      ""slug"": ""omen"",
      ""name"": ""Omen"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""phoenix"": {
      ""slug"": ""phoenix"",
      ""name"": ""Phoenix"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""raze"": {
      ""slug"": ""raze"",
      ""name"": ""Raze"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""reyna"": {
      ""slug"": ""reyna"",
      ""name"": ""Reyna"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""sage"": {
      ""slug"": ""sage"",
      ""name"": ""Sage"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""skye"": {
      ""slug"": ""skye"",
      ""name"": ""Skye"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""sova"": {
      ""slug"": ""sova"",
      ""name"": ""Sova"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""viper"": {
      ""slug"": ""viper"",
      ""name"": ""Viper"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""yoru"": {
      ""slug"": ""yoru"",
      ""name"": ""Yoru"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    }
  },
  ""maps"": [
    {
      ""id"": 1,
      ""slug"": ""ascent"",
      ""name"": ""Ascent"",
      ""info"": ""Zwischen den zwei Arealen auf Ascent liegt ein offener Spielplatz für kleine Positions- und Zermürbungskämpfe. Beide Areale lassen sich durch tonnenschwere Bombenschutztüren sichern. Sobald sie zu sind, müsst ihr sie zerstören oder einen anderen Weg finden. Gebt so wenige Bereiche auf wie möglich."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/ascent.png""
    },
    {
      ""id"": 2,
      ""slug"": ""bind"",
      ""name"": ""Bind"",
      ""info"": ""Zwei Areale. Keine Mitte. Ihr müsst euch für links oder rechts entscheiden. Welches Areal darf’s denn sein? Beide Seiten bieten Angreifern direkte Wege und zwei Teleporter (nur in eine Richtung), über die man gut flankieren kann."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/bind.png""
    },
    {
      ""id"": 3,
      ""slug"": ""breeze"",
      ""name"": ""Breeze"",
      ""info"": ""Genieße den Ausblick über historische Ruinen und Höhlen in den Klippen dieses tropischen Paradieses. Aber bring Deckung mit. Die brauchst du für die offenen Bereiche und für Schüsse aus großer Distanz. Achte auf deine Flanke und du wirst dich fühlen wie beim Strandurlaub."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/breeze.png""
    },
    {
      ""id"": 4,
      ""slug"": ""fracture"",
      ""name"": ""Fracture"",
      ""info"": ""Eine geheime Forschungseinrichtung, die durch ein fehlgeschlagenes Radianit-Experiment zweigeteilt wurde. Als Verteidiger habt ihr damit die Wahl: Trefft die Angreifer auf ihrem eigenen Boden oder macht die Schotten dicht, um den Angriff zu überstehen."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/fracture.png""
    },
    {
      ""id"": 5,
      ""slug"": ""haven"",
      ""name"": ""Haven"",
      ""info"": ""Unterhalb eines vergessenen Klosters kommt es zwischen rivalisierenden Agenten zu Auseinandersetzungen, in denen es um die Kontrolle dreier Areale geht. Man muss zwar mehr Bereiche im Auge behalten, aber Verteidiger können die zusätzliche Fläche für aggressives Vorrücken nutzen."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/haven.png""
    },
    {
      ""id"": 6,
      ""slug"": ""icebox"",
      ""name"": ""Icebox"",
      ""info"": ""Dein nächstes Schlachtfeld ist eine geheime Kingdom-Ausgrabungsstätte im ewigen Eis der Arktis. Die beiden Spike-Areale werden von Schnee und Metall geschützt, was etwas horizontale Finesse erfordert. Nutze die Seilrutsche, dann sieht dich kein Gegner kommen."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/icebox.png""
    },
    {
      ""id"": 7,
      ""slug"": ""lotus"",
      ""name"": ""Lotus"",
      ""info"": ""Ein geheimnisvolles Bauwerk, das einen astralen Fokus beherbergt, strahlt eine uralte Macht aus. Große Steintüren bieten eine Vielzahl von Bewegungsmöglichkeiten und geben den Weg zu drei geheimnisvollen Orten frei."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/lotus.png""
    },
    {
      ""id"": 8,
      ""slug"": ""pearl"",
      ""name"": ""Pearl"",
      ""info"": ""Auf dieser Karte mit zwei Arealen in einer lebendigen Unterwasserstadt machen Angreifer Druck auf die Verteidiger. Pearl ist eine mit der Umgebung spielende Karte ohne Mechaniken. Nimm auf unserer ersten Karte der Omega-Erde den Kampf durch eine kompakte Mitte oder die weitreichenden Flanken auf."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/pearl.png""
    },
    {
      ""id"": 9,
      ""slug"": ""split"",
      ""name"": ""Split"",
      ""info"": ""Wenn ihr weit kommen wollt, müsst ihr nach oben. Zwei Areale werden durch einen erhöhten mittleren Bereich getrennt und Kletterseile sorgen für schnelle Wechsel. In beiden Arealen ragt ein Turm in die Höhe und ist für die Kontrolle immens wichtig. Schaut immer nach oben, bevor euch alles um die Ohren fliegt."",
      ""thumb"": ""https://nwp-cgn.de/img/game/map/split.png""
    }
  ],
  ""weapons"": [
    {
      ""id"": 1,
      ""slug"": ""ares"",
      ""name"": ""Ares"",
      ""gattung"": ""Heavy"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/ares.png""
    },
    {
      ""id"": 2,
      ""slug"": ""bucky"",
      ""name"": ""Bucky"",
      ""gattung"": ""Shotgun"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/bucky.png""
    },
    {
      ""id"": 3,
      ""slug"": ""bulldog"",
      ""name"": ""Bulldog"",
      ""gattung"": ""Rifle"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/bulldog.png""
    },
    {
      ""id"": 4,
      ""slug"": ""classic"",
      ""name"": ""Classic"",
      ""gattung"": ""Sidearm"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/classic.png""
    },
    {
      ""id"": 5,
      ""slug"": ""frenzy"",
      ""name"": ""Frenzy"",
      ""gattung"": ""Sidearm"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/frenzy.png""
    },
    {
      ""id"": 6,
      ""slug"": ""ghost"",
      ""name"": ""Ghost"",
      ""gattung"": ""Sidearm"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/ghost.png""
    },
    {
      ""id"": 7,
      ""slug"": ""guardian"",
      ""name"": ""Guardian"",
      ""gattung"": ""Rifle"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/guardian.png""
    },
    {
      ""id"": 8,
      ""slug"": ""judge"",
      ""name"": ""Judge"",
      ""gattung"": ""Shotgun"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/judge.png""
    },
    {
      ""id"": 9,
      ""slug"": ""marshal"",
      ""name"": ""Marshal"",
      ""gattung"": ""Sniper"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/marshal.png""
    },
    {
      ""id"": 10,
      ""slug"": ""odin"",
      ""name"": ""Odin"",
      ""gattung"": ""Heavy"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/odin.png""
    },
    {
      ""id"": 11,
      ""slug"": ""operator"",
      ""name"": ""Operator"",
      ""gattung"": ""Sniper"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/operator.png""
    },
    {
      ""id"": 12,
      ""slug"": ""phantom"",
      ""name"": ""Phantom"",
      ""gattung"": ""Rifle"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/phantom.png""
    },
    {
      ""id"": 13,
      ""slug"": ""sheriff"",
      ""name"": ""Sheriff"",
      ""gattung"": ""Sidearm"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/sheriff.png""
    },
    {
      ""id"": 14,
      ""slug"": ""shorty"",
      ""name"": ""Shorty"",
      ""gattung"": ""Sidearm"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/shorty.png""
    },
    {
      ""id"": 15,
      ""slug"": ""spectre"",
      ""name"": ""Spectre"",
      ""gattung"": ""Smg"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/spectre.png""
    },
    {
      ""id"": 16,
      ""slug"": ""stinger"",
      ""name"": ""Stinger"",
      ""gattung"": ""Smg"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/stinger.png""
    },
    {
      ""id"": 17,
      ""slug"": ""vandal"",
      ""name"": ""Vandal"",
      ""gattung"": ""Rifle"",
      ""thumb"": ""https://nwp-cgn.de/img/game/weapon/vandal.png""
    }
  ]
}"
x3xAfcYP,Duda02,i-Xuup,C#,Tuesday 23rd of January 2024 04:24:28 PM CDT,"        private Coroutine levelTimer;
        public bool pause;
    public float dayIconDistance;
    public float tenSecondsTimerDistance;
    public float startTimer;
    public float letterTimer;
    public float timerDuration = 0f;
    [SerializeField] RectTransform dayIconRectTransform;
    [SerializeField] RectTransform tenSecondsTimerRectTransform;
    private Vector3 dayIconInitPosition;
    private Vector3 timerInitPosition;
    private Vector3 endTimerPosition;

private void Start()
    {
        BeginAnimation(25f);
    }

    public void BeginAnimation(float dayDuration)
    {
        timerDuration = dayDuration;
        startTimer = timerDuration;
        levelTimer = StartCoroutine(TimerActivation());
    }

    private IEnumerator TimerActivation()
    {
        while (startTimer > 0 && !pause)
        {
            startTimer -= Time.deltaTime;
            startTimer = Mathf.Clamp(startTimer, 0, timerDuration);
            Vector3 endPosition = dayIconInitPosition + (dayIconDistance * Vector3.up);
            dayIconRectTransform.localPosition = Vector3.Lerp(endPosition, dayIconInitPosition, startTimer / timerDuration);

            if (startTimer <= 11)
            {
                letterTimer -= Time.deltaTime;
                letterTimer = Mathf.Clamp(letterTimer, 0, 1f);
                tenSecondsTimerRectTransform.localPosition = Vector3.Lerp(endTimerPosition, timerInitPosition, letterTimer / 1f);
            }

            int minutes = Mathf.FloorToInt(startTimer / 60);
            int seconds = Mathf.FloorToInt(startTimer % 60);
            timerText.text = string.Format(""{0:00}:{1:00}"", minutes, seconds);

            if (startTimer <= 0)
            {
                yield return null;
            }
        }
    }

    private void Update()
    {
        if (pause)
        {
            StopCoroutine(levelTimer);
        }
    }"
cPmGqQAH,RHtera Terárium - switch funkcí,elektronek,Arduino,Tuesday 23rd of January 2024 04:16:30 PM CDT,"unsigned long previousMillis1 = 0;
unsigned long previousMillis2 = 0;

const long interval1 = 1000;   // Interval v milisekundách (1 sekunda)
const long interval2 = 60000;  // Interval v milisekundách (1 minuta)

bool switchPages = true;

void setup() {
	Serial.begin(9600);
}

void loop() {
	unsigned long currentMillis = millis();
	// Vypis kazdou sekundu
	if (currentMillis - previousMillis1 >= interval1) {
		previousMillis1 = currentMillis;
		if (switchPages) {
			Serial.println(""sensor 1"");
		} else {
			Serial.println(""sensor 2"");
		}
	}
	
	// Přepínání funkcí každou minutu
	if (currentMillis - previousMillis2 >= interval2) {
		previousMillis2 = currentMillis;
		switchPages = !switchPages;
	}
}"
ye1RvtRp,Working Electron Download Link *2024 Byfron Bypass*,SkidScripts,Lua,Tuesday 23rd of January 2024 04:16:15 PM CDT,"***Working executor download link, Electron 2024 working executor, Byfron Bypass***
 
 
 
 
---COPY LINK---        https://cdnwrd2.com/r/11908/1692681568125/Electron.zip     ---COPY LINK---
"
U0Ttc8dW,Duda,i-Xuup,C#,Tuesday 23rd of January 2024 04:15:39 PM CDT,"    private void Start()
    {
        BeginAnimation(25f);
    }

    public void BeginAnimation(float dayDuration)
    {
        timerDuration = dayDuration;
        startTimer = timerDuration;
        levelTimer = StartCoroutine(TimerActivation());
    }

    private IEnumerator TimerActivation()
    {
        while (startTimer > 0 && !pause)
        {
            startTimer -= Time.deltaTime;
            startTimer = Mathf.Clamp(startTimer, 0, timerDuration);
            Vector3 endPosition = dayIconInitPosition + (dayIconDistance * Vector3.up);
            dayIconRectTransform.localPosition = Vector3.Lerp(endPosition, dayIconInitPosition, startTimer / timerDuration);

            if (startTimer <= 11)
            {
                letterTimer -= Time.deltaTime;
                letterTimer = Mathf.Clamp(letterTimer, 0, 1f);
                tenSecondsTimerRectTransform.localPosition = Vector3.Lerp(endTimerPosition, timerInitPosition, letterTimer / 1f);
            }

            int minutes = Mathf.FloorToInt(startTimer / 60);
            int seconds = Mathf.FloorToInt(startTimer % 60);
            timerText.text = string.Format(""{0:00}:{1:00}"", minutes, seconds);

            if (startTimer <= 0)
            {
                yield return null;
            }
        }
    }

    private void Update()
    {
        if (pause)
        {
            StopCoroutine(levelTimer);
        }
    }"
xMdS47xh,Working Krnl Download Link *2024 Byfron Bypass*,SkidScripts,Lua,Tuesday 23rd of January 2024 04:14:08 PM CDT,"***Working executor download link, Krnl 2024 working executor, Byfron Bypass***
 
 
 
 
---COPY LINK---        https://cdnwrd2.com/r/54921/1692406689892/KRNLWRD.rar     ---COPY LINK---
"
YjTAYa2a,battle_character,sonjavanteese,JSON,Tuesday 23rd of January 2024 03:07:02 PM CDT,"{
  ""character"": {
    ""astra"": {
      ""slug"": ""astra"",
      ""name"": ""Astra"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""breach"": {
      ""slug"": ""breach"",
      ""name"": ""Breach"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""brimstone"": {
      ""slug"": ""brimstone"",
      ""name"": ""Brimstone"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""chamber"": {
      ""slug"": ""chamber"",
      ""name"": ""Chamber"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""cypher"": {
      ""slug"": ""cypher"",
      ""name"": ""Cypher"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""fade"": {
      ""slug"": ""fade"",
      ""name"": ""Fade"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""jett"": {
      ""slug"": ""jett"",
      ""name"": ""Jett"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""kayo"": {
      ""slug"": ""kayo"",
      ""name"": ""Kayo"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""killjoy"": {
      ""slug"": ""killjoy"",
      ""name"": ""Killjoy"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""neon"": {
      ""slug"": ""neon"",
      ""name"": ""Neon"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""omen"": {
      ""slug"": ""omen"",
      ""name"": ""Omen"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""phoenix"": {
      ""slug"": ""phoenix"",
      ""name"": ""Phoenix"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""raze"": {
      ""slug"": ""raze"",
      ""name"": ""Raze"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""reyna"": {
      ""slug"": ""reyna"",
      ""name"": ""Reyna"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""sage"": {
      ""slug"": ""sage"",
      ""name"": ""Sage"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""skye"": {
      ""slug"": ""skye"",
      ""name"": ""Skye"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""sova"": {
      ""slug"": ""sova"",
      ""name"": ""Sova"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""viper"": {
      ""slug"": ""viper"",
      ""name"": ""Viper"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    },
    ""yoru"": {
      ""slug"": ""yoru"",
      ""name"": ""Yoru"",
      ""info"": ""Info"",
      ""path"": [
        ""profil"",
        ""art"",
        ""game""
      ]
    }
  }
}"
xqVPTaM7,ESP_NOW_FIX,macca-nz,Arduino,Tuesday 23rd of January 2024 02:46:14 PM CDT,"#include <esp_now.h>
#include <WiFi.h>

#define LED_BUILTIN 4  //GPIO4 Flash

unsigned long previousMillis = 0;  // will store last time LED was updated

const long interval = 1000;                                           // interval at which to blink
uint8_t broadcastAddress[] = { 0x98, 0xCD, 0xAC, 0x31, 0x59, 0xBC };  // Mac address for reciver board

bool ledState = 0;

typedef struct struct_message {  // struct to hold variables to send
  char info[32];
  float _temp;
  bool _ledState;
} struct_message;

struct_message myData;
esp_now_peer_info_t peerInfo;  // variable to hold mac/channel info to connect


// Serial print after each packet sent
void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print(""Last Data Status:  "");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? ""Success"" : ""Fail"");
}

void setup() {
  Serial.begin(115200);       // start serial @115200
  WiFi.mode(WIFI_STA);        // set wifi to station mode
  if (esp_now_init() != 0) {  // if esp_now fails to initaite
    Serial.println(""ESP FAILED TO INITATE"");
    ESP.restart();  // restart esp
    return;         // exit
  }
  esp_now_register_send_cb(OnDataSent);  //

  memcpy(peerInfo.peer_addr, broadcastAddress, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println(""Failed to connect to Peer"");
    ESP.restart();
  }
  pinMode(LED_BUILTIN, OUTPUT);
}
void loop() {
  unsigned long currentMillis = millis();

  Serial.print(""currentMillis : "");
  Serial.println(currentMillis);

  // if elapsed time is greater the interval
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;  // reset timer to 0
    digitalWrite(LED_BUILTIN, ledState = !ledState);  // toggle led on/off
	  Serial.println(ledState ? ""Led is ON"" : ""Led is OFF"");
    
    // data to be sent
    strcpy(myData.info, ""esp32"");         // display board name
    myData._ledState = ledState;      // ledstate
    myData._temp = random(1.00, 100.00);  // temps

    esp_err_t result = esp_now_send(broadcastAddress, (uint8_t *)&myData, sizeof(myData));
    if (result == ESP_OK) {
      Serial.println(""SENT WITH SUCCESS"");
      delay(1000);
    } else {
      Serial.println(""SEND FAILED"");
      delay(2000);
    }
  }
}"
xv42a5UB,ttt,kohpriwniranam,JSON,Tuesday 23rd of January 2024 02:14:58 PM CDT,"Name: {
	""H1"": ""u2662fb8bd05ddc6760467450fd5c8e30:aWF0OiAxMDA0MDI4Nzc3NjAK..Bh1bGunsHfRZJpFNgJgDOljdrik="",
	""H2"": ""u54fdfbd2b2370b32d43d7d47825b507f:aWF0OiAxMDA0MDI5MDU1NDAK..qV2jsUSvf/cGu4vCoa3eOPPrbTc="",
	""H3"": ""uf96caeafebe3db1b757db73ef9992be8:aWF0OiAxMDA0MDI5MzIzNjAK..bmz0O8AklZdt0fwFu4FMJXs0gRs="",
	""H4"": ""u71efc88a714d160d5b77074004f8e223:aWF0OiAxMDA0MDI5NTgxNjAK..N4/vw7RtI0EcAjal5+aTf+sqQB4="",
	""H5"": ""ub0f9de88ee3bb566a034b4c8514bb48f:aWF0OiAxMDA0MDI5ODQxNDAK..GnwbSI84/qhcRU5xNjRKI184AVU="",
	""a1"": ""ue4ccfb5aa2308226b8b437757249313b:aWF0OiAxMDAwNDEwMzk4NDAK..FF16AJIcc9/VDC1Mlg440XZIX9A="",
	""a2"": ""ua23289f907211c5f338d9374400d31ce:aWF0OiAxMDAwNTkwODAwNDAK..Cj49veCyJfnSD+aZVKCb3AyxQF0="",
	""a3"": ""uc93839e303d9a347a72464f453056a2f:aWF0OiAxMDAwNDEwMzk5NjAK..w5LeSFU+p0SJRHCYu99hCV9+foE="",
	""a4"": ""u91dffa598122fc2221887df8fba5bc10:aWF0OiAxMDAwNDEzMTg2NjAK..XE7osbW/4CIRQgz+pfROK4akpGQ="",
	""a5"": ""u93bba153b433b79a504b8073e2264250:aWF0OiAxMDAwNDEwNDAwODAK..LgqSxGpRe8kyeAFn1gEhzA6WQ58="",
	""b"": ""u2af7b4e3f8d8c31b4de39bf1d6d9141d:aWF0OiAxMDAyMTg0Mzg0ODAK..aUkVDnrPGewslx4wUcIJBEiQTxs="",
	""b1"": ""u3f8ada73d109dda3d23cd3fb958716cc:aWF0OiAxMDAwNDU4Mjk4ODAK..u25JOzyvlisPhXJv6ZESiLdBmZE="",
	""b2"": ""ubd4b94e033b4e0c30d89b917999f087f:aWF0OiAxMDAxNzU2Njg1NjAK..ACwPlIwELh73wRICcA3hXSoUG7Q="",
	""b3"": ""u1b4240f3c603d3d1a2976f2b677662d0:aWF0OiAxMDAyMTc5NzU1MjAK..dCHwNtYWBbChnhWezu+qkTAJrPQ="",
	""b4"": ""u9485143dc7a4d145155e26e9d7b0f45b:aWF0OiAxMDAxNzU2NzI5NDAK..M3S5VzYtKpholdo/NkIcKr2Yf/s="",
	""b5"": ""ue872474c21f3fcd0bdbfe460774eea49:aWF0OiAxMDAxNzU2NzE2MjAK..n2MoNDDS+9L5oih8uyOXrJwBYAI="",
	""b6"": ""u2af7b4e3f8d8c31b4de39bf1d6d9141d:aWF0OiAxMDAyMTg0Mzg0ODAK..aUkVDnrPGewslx4wUcIJBEiQTxs="",
	""c"": ""c6"",
	""c1"": ""u0933bb49ed0f32b976c4c89a4c62ea9c:aWF0OiAxMDAzNzU4MDAwNjAK..2gNE7QtManU6TQNIbmRZKkk63SQ="",
	""c2"": ""u101cdb1a46bacd8e1ee0ce42e766a91d:aWF0OiAxMDAzNzU0Njg4NjAK..4sHmwC2PX49sU2I2J0XiOx6THRE="",
	""c3"": ""u444bf3fff341707dceb501f584a9780a:eFNqll95KZU1OSPumaC9"",
	""c4"": ""u50ff320cc2fb60da782f1e13cf90cf98:d4rL3ntdhFnlR7B9qW7B"",
	""c5"": ""u05848696942fa52fa4fbd0fa146808c4:GrI9OHoWSwa8FdaBH2tV"",
	""c6"": ""u1c4af4b915bddab956819afc88d4536c:aWF0OiAxMDAzNzU4MTg2NjAK..EHCo9YL5TrB1JjKhOttfE3yqE3g="",
	""d1"": ""ueba0725e1b7d88fa369fe97c0594896f:aWF0OiAxMDAzNzY0ODI0NDAK..JZnOlNo0R8Be4L/jI0rDonuSNLQ="",
	""d2"": ""u79aa23014894d6aa4b70b4638ca04262:aWF0OiAxMDAzNzY3NzA2ODAK../OAiKcRUxZ20zl3UvUpT2sFqHVg="",
	""d3"": ""uea70783e06c0030e43318800a91243a2:aWF0OiAxMDAzNzY4MjI0NjAK..N9GJDh02SlcnU9LvfrbkvVOM6LQ="",
	""d4"": ""ubdd7d0245cbfe0b3f6b086836eb7824e:aWF0OiAxMDA0MDIyMzEzMjAK..PV1sNO6d9DpbqTlzup6MTBOcZSo="",
	""d5"": ""u9a30eaafbf23b565fb38d790a220075c:aWF0OiAxMDA0MDI1NDk1NjAK..imaFBhTu7rHrC2kQvQzTBgj/MvY="",
	""e1"": ""ucb84c43c9d97d1c0a7ccbe6979056dab:aWF0OiAxMDAyNDQwNjM2NDAK..eN2m47ucSzpGfNwClu1Zdy/IDxQ="",
	""e2"": ""u9403d593425dbedf2a24f7e2281a2c5c:aWF0OiAxMDAyNDQwNjQyNDAK..4qLGJJppP2f2YNZ7aS+rcvX/0xs="",
	""e3"": ""u4f670e0bd8246b311e0ee1e2eafd6517:aWF0OiAxMDAyNDQwNjQ1NDAK..PnFzNigOnluCjwJnszNew4zEm6I="",
	""e4"": ""ue1550c30aa0a3b490a672dfa1bfa6e7e:aWF0OiAxMDAyNDQwNjQ3ODAK..O0FNYY0noeJeljljOUeGHzMODAk="",
	""e5"": ""u63467c3fb7275c6cb870cf04f6f8e866:aWF0OiAxMDAyNDQwNjQ5NjAK..odVZK2eMMGAWcen4F5Q/71t3KWU="",
	""e6"": ""u29f913962b142d6e33f4e8535c835c8f:aWF0OiAxMDAyMjU2NDIwMjAK..g/zXZSunm9+ndiC2KCS4C6Xwxd8="",
	""e7"": ""u22d8988cdb1eab36e240d5eeb9bd281f:aWF0OiAxMDAxNzk0NTA2NjAK..1ExThoG2z0BOlWD2Y8Laqm8Vg4Y="",
	""e8"": ""ue3867b23eaaba055855d86ed51753ca8:aWF0OiAxMDAxNzk0NDU5MjAK..v7DDCNELNZjnfNeTs+LzjqYsOmg="",
	""e9"": ""uf25a608c0e11f65ae6a4bbb5496a3abb:aWF0OiAxMDAyNDQwOTc2MDAK..fPWXZA4sJ+7E04KDSwW6aibGxSI="",
	""f1"": ""ue1bbea39f8a71c08315452b840294afd:aWF0OiAxMDAyNDQwOTYxMDAK..xkUOaUGpTjw8jS/XnfiHwZ2+shs="",
	""f2"": ""u0ba17bdeb76f10b8587a91c0df1d0499:aWF0OiAxMDAyNDQwOTY0MDAK..THMUSs7n/zwv7uIRbNX78jW5HPM="",
	""f3"": ""ucc9e1a545e9ea5b8a04409d14f0957e4:aWF0OiAxMDAyNDQwOTY3MDAK..KL6B0DeHVx2i5Rk91FvC13RZ0UM="",
	""f4"": ""u03d814b17fb20c295fced5e65d3fee24:aWF0OiAxMDAyNDQwOTY5NDAK..ZtMzA+cKO9QP2EujvepfUOyczhw="",
	""f5"": ""uf25a608c0e11f65ae6a4bbb5496a3abb:aWF0OiAxMDAyNDQwOTc2MDAK..fPWXZA4sJ+7E04KDSwW6aibGxSI="",
	""g1"": ""ua49af42319bdd82630e6274b3ee6b586:aWF0OiAxMDA0MDI2Mzk2ODAK..Yb+2RaIL9vNK+jdr5u5n+n4/WpI="",
	""g2"": ""u200c6bc290bbb426d46f100a3f7d95a8:aWF0OiAxMDA0MDI2NjY1MDAK..PIyE+w7T5r6msQW/IF1zFjLrzcA="",
	""g3"": ""ub253c7cc9c54058391ed70a059cc56ef:aWF0OiAxMDA0MDI2OTQ4MjAK..UfDXHEm9r2tKe9xFh/bTCbwbZq0="",
	""g4"": ""ud638c360c71331f7df3cf6150e9e4bbb:aWF0OiAxMDA0MDI3MjI2MDAK..71Wdl1QFCcN8qZJKJrXjbS2PmuQ="",
	""g5"": ""ub02a4c13b94b2611ff1e2f94b2335351:aWF0OiAxMDA0MDI3NjMyMjAK..vAobv2514q+d410eR9qvFoNlWgE="",
	""k1"": ""u02df094b1bb431421bee3fcd4958ec02:aWF0OiAxMDAzMTY0OTMwMDAK..bjPJicriRDt1+BS+nMjHMcJ7bDk="",
	""k2"": ""u029a1f4af317ae7868ecc1306e1f6d5c:aWF0OiAxMDAzMTY2Mjg5NjAK..GDTY82TWBdn9KFrH7j10lexCruc="",
	""k3"": ""u694257ee09ad33ed4acf8e7dfed45fb4:aWF0OiAxMDAzMTY2NTY4MDAK..Q1MNyHfxKL6xq/2sTl/8SrkciJg="",
	""k4"": ""u370f85cf03661b98209070540d8ca029:aWF0OiAxMDAzMTY2ODc1ODAK..5rpOLv4OAKvcCiNd4WP2MLF/79Q="",
	""k5"": ""u009c47695d4e3b2e9350d1df837010d6:aWF0OiAxMDAzMTY3MTA5MjAK..sfLmdhQrKAQXQfZdisPudLkltQc="",
	""k6"": ""u23e5dd66a0159b3f0792297c8722df1e:aWF0OiAxMDAzMTY3NDcyODAK..k0a74OVkR8Ov8rNwqbo/xGGBWnk="",
	""k7"": ""uc72fffe773aea2dc2f0bdd4af9b351a6:aWF0OiAxMDAzMTg4NDc3MDAK..KP6dZYNmZUBkXHa9d33oX6kpUgA="",
	""k8"": ""u749de67ee30f963c75c76b15e1d1f6f6:aWF0OiAxMDAzMTkzNTEyMjAK..qG/6P898LvsFiuwg6Le88tvkZvY="",
	""k9"": ""u026495dffb000505698071352e6f63ca:aWF0OiAxMDAzMTk1OTY2ODAK..JQDFJuoMeQHaXbaJaMM1IhNjBXI="",
	""l1"": ""uade63569596543d708c715ed8d540227:aWF0OiAxMDAzNjQ2NTYxNDAK..pNm3dkNVP/MoyutrVB3wPf3ysOk="",
	""l3"": ""u92ff415f114024ca81071c1f474ed8c5:aWF0OiAxMDAzNjM0NjU4MDAK..8FrohdBcKKHAdWLm/Jt9LJPDjKI="",
	""l4"": ""u5b886280ab41d92cca40508fd5b1e46f:aWF0OiAxMDAxNzk0NDY1MjAK..3+E78U3WUBGm9ZfhI+mMBbaElDA="",
	""l5"": ""u29b9033cc7245f198aaaa81804bbd2e5:aWF0OiAxMDAxNzk0NTAxMjAK..lxX0UcN7rFWy+YdOLiSz20J6Ycw="",
	""l6"": ""ufb0fbd6608e4e1aea97a827ae1bccac3:aWF0OiAxMDAxNzk0NDYyMjAK..+sKDuJ5HRLy/SlCiNMXVFU8qvQs="",
	""l7"": ""ud3698ed5a715bcdb082d7276449107ad:aWF0OiAxMDAyMjU2NDAyODAK..Jvi1A51Xpc1CaoUkaeuHqmq7PwQ="",
	""l9"": ""ucc063477d5412659076d207265050a0b:aWF0OiAxMDAzNjQ2Mzc0ODAK..QFjlIDx2KF8umg5oTw/SWqG4MBM="",
	""m1"": ""u4fe078e415c0f0b6000c2457c03b8943:aWF0OiAxMDA1NTkxMDMxODAK..pO9xZ0qi1Kj/y7zziwf48XzESVg="",
	""m2"": ""u46eca3a948335b214647885de49113be:aWF0OiAxMDA0NzAyMjU5NjAK..jebXnDsH2VlPw8q0CPzzhqNX3/o="",
	""m3"": ""u960bfd2b3779354d56efe4127c457d99:aWF0OiAxMDA0OTQ5MjY5NDAK..pVnol4x/GZf+4Hl5/qkB1H1ukwg="",
	""m4"": ""u4f4b4f7b6a56335485b4e08fc271463c:aWF0OiAxMDA0OTUwNTQ4MDAK..o9wYzl7AUVA+g0tpOnt3qrbTJyc="",
	""m5"": ""uc22e3446536005c85a0a734d1212f863:aWF0OiAxMDA0OTUxMzIxNDAK..FnlIPJb05YDP+hAnDW8/qqkvmh0="",
	""n1"": ""ua71d19d2b347213f1b4f5c66184ddb78:aWF0OiAxMDA0MjM3OTM4ODAK..Zldn0DpUjBKIySrEBmZsmLx1q+8="",
	""n2"": ""u8306b26fc10cc1fa0fb8c8809e1ccbd3:aWF0OiAxMDA0MjM4NTA1MjAK..xnn6FLVeEWGHm83HqXUXR+nymqE="",
	""n3"": ""ua1fce1418d80cb95c86b97076e39a689:aWF0OiAxMDA0Njc5MTQxMDAK..ZHqRLoe5ftaxP2dqLVsDr1vDJR8="",
	""n4"": ""uf51b9a7adb01ce65ea1c9ff4d7ede0db:aWF0OiAxMDA1NTkxMzgwNDAK..J36TiLv1foUvEAXbrjZZJopXw1c="",
	""n5"": ""u42e963467772879dc93616a1b37cac6d:aWF0OiAxMDA0NzAxNjgwNjAK..qmyUtlHz9x8nuk+2gl7aTW5vK9A="",
	""o"": ""o2"",
	""o1"": ""ub863d64a2f95c5dc6a1d1df9a9187358:aWF0OiAxMDA0OTUyNDI2NjAK..pJAPKgNjJOeIG2RTNET9dBfYlmM="",
	""o2"": ""uf5f138a73227fa749096d57167b94fc7:aWF0OiAxMDA1MTg3MzMwODAK..0EWpjRAX+n5pD9J17KvV5pfpCCE="",
	""o3"": ""uf04214f97f50468e3e5e1e3d237fb813:aWF0OiAxMDA1MTg4MzI4MDAK..BkWM7JL30NHgxlkre12egDm6ejo="",
	""o4"": ""ufc162e34a0fb12b72cae9ad0c57b920e:aWF0OiAxMDA1MTk0NDc5MjAK..wwwyXs8bxeSLsBquHVjj4IOPuxQ="",
	""o5"": ""u3b10794eef39b736c6642828124ae62d:aWF0OiAxMDA1MTk0ODk1MDAK..jcJQQ8NJs/oGMP6hXAAZgbSTTQM="",
	""p1"": ""u3fab542849e1966e6981486fb5e0a734:aWF0OiAxMDA1MjIyMDEyNjAK..nR2fiP6+LJqZF38pg3Gpgd6sTII="",
	""p2"": ""u6bd91c6f6adf9d2dfeea6dc37c289886:aWF0OiAxMDA1MjIyNjQyMDAK..7UCjV+n4pq+6xWEroLPkz9Ltoxk="",
	""p3"": ""udf6fec8e1c351ea6276703303fe85600:aWF0OiAxMDA1MjIzMzg0MjAK..c5MZV77YidTZe8J+ZU6nM0yl7h4="",
	""p4"": ""u23298fac2f5b0256dd7cb7dcbf25ca62:aWF0OiAxMDA1NDc4MTY5NDAK..54Xcpiuyr8KMbpaJ2lyWPFtBRkU="",
	""p5"": ""u451df428d1a3434988f4b9ef4f503aa0:aWF0OiAxMDA1NTkxNjAzNjAK..Sied52jsZcgYile+K5Nwxd/3FnQ="",
	""q1"": ""uc5c569bc2219b26e678abefee08b25bd:aWF0OiAxMDA1NjI1NDk5NDAK..Yr93YLTjSuiTsB8Z1Sb6lBmeYwo="",
	""q2"": ""u454ef48349ba2e7e45416b2d42bd73eb:aWF0OiAxMDA1NjI1NzUzODAK..UuPoVp96D0xRHKvfBGc0D1MMJBw="",
	""q3"": ""ue048e0171743e1373be3a5179305c70f:aWF0OiAxMDAzMjY4Nzk1NDAK..KSsxdjezNICaWvTo89NOsmE5s9A="",
	""q4"": ""u46e334d9e3560fb9dca313d46a0b3f1d:aWF0OiAxMDAzMjY4NzkzMDAK..U4NCrrFPCuyT20G/cPSNqbTE4g4="",
	""q5"": ""uc28a862633df9eeab3ff48ac7de62ff9:aWF0OiAxMDAzMjY4Nzg1ODAK..ozJDEp7CGO3hVrIeOgoA2fhXrbM="",
	""t1"": ""uc43093a1d97076c5ca9e057b7d46a33b:aWF0OiAxMDAzMjY4ODMzMjAK..ckLC/I4dFPVPraCMwwab7mF2nyQ="",
	""u1"": ""uf3c5d72daf78b77b4950f3d1e578c9dc:yc2JiDLJ1F2GoiXCk0dR"",
	""u2"": ""uc339854a03f604d34d1d8999c6e9af5a:Gzpr0B0h0m9IibVO5qqT"",
	""u3"": ""u7db931830dfa0c6499b8481150188aeb:heOADrjhb7wLX4znxVJ3"",
	""u3?"": ""u7db931830dfa0c6499b8481150188aeb:heOADrjhb7wLX4znxVJ3"",
	""u4"": ""u93e635af636c442e9d03260c592c1ecb:aWF0OiAxMDAzMzU2NTA2NDAK..DiylN062YrJhuAALX8U6G3jb2i8="",
	""u5"": ""u8cc215f77df186f958b546fc73dc626a:aWF0OiAxMDAzMzQ5NTU5MDAK..4edeUZAoV6UWh6JlF9b+/DwHrLc="",
	""w1"": ""u6b10b809938aaddbbfdddd1c90db8ea2:aWF0OiAxMDAyMjU2NDUyNjAK..A7kZBSuIWragKMtq1zBFH4SI7qk="",
	""w2"": ""u251192d601fa203c679de2a4ef481687:aWF0OiAxMDAyMjU2NDU1MDAK..pawtSROdarVWOFkynFD9aThhj18="",
	""w3"": ""u86d4fdc8fac86ac8aa9c7cb550106220:aWF0OiAxMDAyMjU2NDU2MjAK..KnllYNVVRxiOAYTRbQNCbFKlEC4="",
	""w4"": ""ue82872a529aae2299a3c55c6c19e109c:aWF0OiAxMDAyMjU2NDU4NjAK..5dTGvSY4Cgph67Yt+CHc7vYlS50="",
	""w5"": ""u4fb48f6dca1e0cdad0472b3fd3d23569:aWF0OiAxMDAyMjU2NDYxNjAK..P72G1HMQdAzCB0a26Np5vxyFIMA="",
	""w6"": ""u9dc11c12c1d7541caa1020afd1710114:aWF0OiAxMDAyMjU2NDAxMDAK..bVW4MAJXu93yJ3gvT69BLl0lR6E="",
	""x1"": ""uba4fbc03896688b75979aed80c361eaf:aWF0OiAxMDAyMjU2Mzk2ODAK..2yQOyf5rqwQpQEwq6xmQWV6uVaE="",
	""x2"": ""u71af03ddc1e72bf7dcfe2c0d01267287:aWF0OiAxMDAyMjU2Mzk5MjAK..KvMtz07m/xIpKCjySjupPb/tfuE="",
	""x3"": ""u9dc11c12c1d7541caa1020afd1710114:aWF0OiAxMDAyMjU2NDAxMDAK..bVW4MAJXu93yJ3gvT69BLl0lR6E="",
	""x4"": ""ud3698ed5a715bcdb082d7276449107ad:aWF0OiAxMDAyMjU2NDAyODAK..Jvi1A51Xpc1CaoUkaeuHqmq7PwQ="",
	""x5"": ""u29f913962b142d6e33f4e8535c835c8f:aWF0OiAxMDAyMjU2NDIwMjAK..g/zXZSunm9+ndiC2KCS4C6Xwxd8="",
	""y1"": ""u8fe72d11dd2ba9fd58b7652f7e8276c8:aWF0OiAxMDAzMzMwMzUxODAK..CstNmwgJYoFxcUF9/VHf1oZsw+8="",
	""y2"": ""u91233dc7e009200cdb0b6bace8338014:aWF0OiAxMDAzMzMwMzU0ODAK..7wxw4XGiVjX6LBe3vQGJDav7nkc="",
	""y3"": ""uf6c6043281d62b2f10b54ff4a2ef0faf:aWF0OiAxMDAzMzMwMzU5MDAK..ld+uGa+6OMSm7v+mWl9kSagZngE="",
	""y4"": ""u69cb56d60b2c1f9b9eb5298233c53d0c:aWF0OiAxMDAzMzMwMzYyNjAK..eVHpJpPFS1ljh1d4ZNpYfQwFPFw="",
	""y5"": ""ue7a434ea226eac9462b4a3121582e1e0:aWF0OiAxMDAzMzMwMzY1NjAK..c/L/9lOOD38I/W2VgG/9u+4TPoA="",
	""y6"": ""u66bb84271ef798ed72f5aa7d3ee08dbf:aWF0OiAxMDAzMzMwMzk4MDAK..hzKNyhRjyh4ot0FIX0o8ME1BOhc="",
	""y7"": ""ub9b3662aae1d5532e9e29e93411267d5:aWF0OiAxMDAzMzMwNDAwNDAK..k70KuG4ZObW4TyLXdje2wo68Bdg=""
}"
b8MKkXjC,baddie,rosswolf,HTML,Tuesday 23rd of January 2024 02:12:25 PM CDT,"<center><link href=""https://dl.dropbox.com/scl/fi/yikll019829ga9b3a832b/baddie.css?rlkey=az2m7m6vdtnudkx06s5eluyjx&dl=0"" rel=""stylesheet""><div id=""rr_baddie"" style=""--width: 200px; --img-height: 115px; --icon-size: 55px; --bg-main: #efefe6; --text-color: #ebebeb; --accent: #50817c;""><a href=""https://is.gd/rossr"" title=""「by ross」""></a><div class=""rcontainer""><div class=""rimg"" style=""background-image: url(https://64.media.tumblr.com/f49c899a3809a2751b3a6db552347935/44e935adbb3aa3d4-7b/s400x600/cdd29a2ecdb6a2a9a668bb034e2fec441027f6bd.pnj);""></div><div class=""rfooter""><span>BADDIE.</span><img src=""https://64.media.tumblr.com/54a9830c2b6ed72c18f6eb1d5620b4a2/44e935adbb3aa3d4-24/s400x600/4b983940312b6971e81beb54e4e196fa8791d0ff.pnj"" /></div></div></div></center>"
zqqUuj4Y,Pet Simulator 99! [☁️UPDATE 5] AutoFarm Script,Project-WD,Lua,Tuesday 23rd of January 2024 02:06:17 PM CDT,"-- 🆕Update (24/01/2024)
-- AUTO FARM | ADMIN BYPASS | AUTO HATCH | AUTO RANK & MORE
-- Script📝: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
w7jKxqMm,Untitled,kirkarr,Lua,Tuesday 23rd of January 2024 02:05:16 PM CDT,"local sx, sy = term.getSize()
local title = ""KirkaOS BETA""
local username = ""ROOT""
local password = ""BOOT""
local loadtime = 0
for i=1, 100 do
    loadstr = i..""/100""
	term.clear()
    term.setCursorPos(sx/2-#title/2,sy/2)
    term.write(title)
    term.setCursorPos(sx/2-#loadstr/2,sy/2+1)
    term.write(loadstr)
	loadtime = loadtime + (100-i)/300
	sleep((100-i)/300)
end
term.setCursorPos(1,1)
term.write(loadtime..""s"")
sleep(1.5)
term.clear()
term.setCursorPos(1,1)
term.write(""Enter username: "")
inpname = read()
term.setCursorPos(1,2)
term.write(""Enter password: "")
inppassword = read()
if inpname == username and inppassword == password then
	term.clear()
	term.setCursorPos(1,1)
	term.write(""Welcome back, ""..username..""!"")
	term.setCursorPos(1,2)
	term.write(""Processing..."")
	sleep(1)
	while true do
		term.clear()
		term.setCursorPos(1,1)
		term.write(username)
		sleep(0.1)
	end
else
	term.clear()
	term.setCursorPos(1,1)
	term.write(""Incorrect username or password"")
end"
dGHBvxW2,main.c,Altep,C,Tuesday 23rd of January 2024 01:53:19 PM CDT,"void Initialise() {
  
    VIDEO_Init();
    WPAD_Init();
    WPAD_SetVRes(0, 640, 480);
    WPAD_SetDataFormat(WPAD_CHAN_0, WPAD_FMT_BTNS_ACC_IR);

    rmode = VIDEO_GetPreferredMode(NULL);
    
    xfb = MEM_K0_TO_K1(SYS_AllocateFramebuffer(rmode));
    console_init(xfb,20,20,rmode->fbWidth,rmode->xfbHeight,rmode->fbWidth*VI_DISPLAY_PIX_SZ);
    
    VIDEO_Configure(rmode);
    VIDEO_SetNextFramebuffer(xfb);
    VIDEO_SetBlack(FALSE);
    VIDEO_Flush();
    VIDEO_WaitVSync();
    if(rmode->viTVMode&VI_NON_INTERLACE) VIDEO_WaitVSync();
}

void DrawHLine (int x1, int x2, int y, int color) {
     int i;
     y = 320 * y;
     x1 >>= 1;
     x2 >>= 1;
     for (i = x1; i <= x2; i++) {
         u32 *tmpfb = xfb;
         tmpfb[y+i] = color;
     }
}
void DrawVLine (int x, int y1, int y2, int color) {
     int i;
     x >>= 1;
     for (i = y1; i <= y2; i++) {
         u32 *tmpfb = xfb;
         tmpfb[x + (640 * i) / 2] = color;
     }
}
void DrawBox (int x1, int y1, int x2, int y2, int color) {
     DrawHLine (x1, x2, y1, color);
     DrawHLine (x1, x2, y2, color);
     DrawVLine (x1, y1, y2, color);
     DrawVLine (x2, y1, y2, color);
}

int main() {
 
    Initialise();
 
    printf(""Hello World!\n"");
    ir_t ir; 
    while(1) {
        WPAD_ScanPads();
        u32 pressed = WPAD_ButtonsDown(0);
        // IR Movement
        WPAD_IR(0, &ir);
        if (pressed & WPAD_BUTTON_HOME) {
            exit(0);
        }
        VIDEO_ClearFrameBuffer (rmode, xfb, COLOR_BLACK);
        DrawBox (ir.x-10, ir.y-20, ir.x + 10, ir.y + 20, COLOR_WHITE);
        VIDEO_WaitVSync();
    }
 
    return 0;
}"
YALXK16e,Untitled,andrewkm,HTML,Tuesday 23rd of January 2024 01:40:24 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
  <head>

    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    
    <title>{{ store.name }} | {{ __(page.title) }}</title>

    <link href=""/templates/209/css/style.min.css"" rel=""stylesheet"">
    <link href=""https://maxcdn.bootstrapcdn.com/bootswatch/3.3.7/cosmo/bootstrap.min.css"" rel=""stylesheet"">
    <link href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <link href=""https://ecocitycraft.com/forum/style.css"" rel=""stylesheet"">

    <link rel=""shortcut icon"" type=""image/x-icon"" href=""https://www.ecocitycraft.com/favicon.ico"">

    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""></script>
      <script src=""https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js""></script>
    <![endif]-->

    <script type=""text/javascript"">
        var _gaq = _gaq || [];
        
        _gaq.push(['_setAccount', 'UA-36735942-3']);
        _gaq.push(['_trackPageview']);
        
        {% if store.googleAnalytics %}
            _gaq.push(['b._setAccount', '{{ store.googleAnalytics }}']);
            _gaq.push(['b._trackPageview']);
        {% endif %}
        
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
    <script>
        var loc = window.location.href+'';
        if (loc.indexOf('http://')==0){
            window.location.href = loc.replace('http://','https://');
        }
    </script>
    
  </head>
  <body>
        <div class=""jumbotron"" style=""margin-bottom:0;"">
            <div class=""container"">
                <center>
                    <h1 style=""padding-bottom: 50px;""><a href=""https://minecrafteconomyservers.com""><img class=""img-responsive"" alt=""EcoCityCraft"" src=""https://www.ecocitycraft.com/forum/Best%20Minecraft%20Servers.png""></a></h1>
                </center>
            </div>
        </div>
        <nav class=""navbar navbar-default"" data-spy=""affix"" data-offset-top=""360"">
            <div class=""container"">
                <div class=""navbar-header"">
                    <button type=""button"" class=""navbar-toggle collapsed"" data-toggle=""collapse"" data-target=""#shop-categories"" aria-expanded=""false"">
                    <span class=""sr-only"">Toggle navigation</span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                    </button>
                </div>
                <div class=""collapse navbar-collapse"" id=""shop-categories"">
                    <ul class=""nav navbar-nav"">
                        <li class=""{% if page.category == ""index"" %}active{% endif %}""><a href=""/"">{{ lang(""category.home"") }}</a></li>
                        {% for category in store.categories %}
                            {% if category.subcategories|length > 0 %}
                                <li class=""dropdown {% if category.active %}active{% endif %}"">
                                    <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">{{ category.name }} <span class=""caret""></span></a>
                                    <ul class=""dropdown-menu"">
                                        {% for subcategory in category.subcategories %}
                                            <li><a href=""/category/{{ subcategory.id }}"">{{ subcategory.name }}</a></li>
                                        {% endfor %}
                                    </ul>
                            {% else %}
                                <li class=""{% if category.active %}active{% endif %}""><a href=""/category/{{ category.id }}"">{{ category.name }}</a></li>
                            {% endif %}
                        {% endfor %}
                        {% if basket.packages|length > 0 %} 
                            <li class=""visible-xs {% if page.category == ""checkout"" %}active{% endif %}""><a href=""/checkout/basket"">Checkout</a></li>
                        {% endif %}
                    </ul>
                    <ul class=""nav navbar-nav navbar-right"">
                        {% if basket.username %}
                            <li class=""dropdown"">
                                <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false""><img src=""//cravatar.eu/avatar/{{ basket.ign}}/20""/> {{ basket.ign}} <span class=""caret""></span></a>
                                <ul class=""dropdown-menu"">
                                    <li><a href=""/checkout/logout"">{{ lang(""button.logout"") }}</a></li>
                                </ul>
                            </li>
                        {% endif %}
                        <li class=""dropdown"">
                            <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"" role=""button"" aria-haspopup=""true"" aria-expanded=""false"">{{ basket.currency }} <span class=""caret""></span></a>
                            <ul class=""dropdown-menu"">
                                {% for currency in store.currencies %}
                                    {% if currency.code in [store.currency, ""USD"", ""EUR"", ""GBP"", ""CAD"", ""AUD""] %}
                                        <li {% if basket.currency == currency.code %}class=""active""{% endif %}>
                                            <a href=""?currency={{ currency.code }}"">{{ currency.code }}</a>
                                        </li>
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        </li>
                        <li class=""basket"">
                            {% if basket.packages|length > 0 %}
                            <a type=""button"" href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">
                                {{ lang(""basket.count"", basket.packages|length, basket.price|money, basket.currency) }} <span class=""fa fa-caret-down""></span>
                            </a>
                            <ul class=""dropdown-menu dropdown-menu-right"" role=""menu"">
                                {% for package in basket.packages %}
                                    <li class=""item"">
                                        <div class=""name"">{{ package.name[:25] }}</div>
                                        <div class=""price"">{{ package.price|money }} <small>{{ basket.currency }}</small></div>
                                        <div class=""remove""><a href=""/checkout/packages/remove/{{ package.id }}""><span class=""fa fa-times""</span></a></div>
                                    </li>
                                {% endfor %}
                                <li class=""checkout"">
                                    <div class=""total""><b>{{ lang(""basket.total"") }}:</b> {{ basket.price|money }} <small>{{ basket.currency }}</small></div>
                                    <div class=""button""><a href=""/checkout/basket"" class=""btn btn-success"">Checkout</a></div>
                                </li>
                            </ul>
                            {% else %}
                                <a disabled=""disabled""><i class=""icon-shopping-cart icon-white""></i> {{ lang(""basket.count"", 0, 0.00, basket.currency) }}</a>
                            {% endif %}
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

    <div class=""container"" style=""margin-top: 20px;"">
        
      <div class=""notification"">
        {% if page.message.display %}
            <div class=""alert alert-{{ page.message.type}} alert-dismissable"">
                <button type=""button"" class=""close"" data-dismiss=""alert"" aria-hidden=""true"">&times;</button>
                {{ page.message.text }}
            </div>
        {% endif %}  
      </div>

      {% block content %}{% endblock %}

      {% if store.plan == ""1"" %}
        <div class=""advertisement"">
            <script async src=""//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js""></script>
            <ins class=""adsbygoogle"" style=""display:inline-block;width:728px;height:90px;"" data-ad-client=""ca-pub-9830135219921132"" data-ad-slot=""7404819681""></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
        </div>
      {% endif %}
    </div>

        <!-- <footer class=""ecc-footer""> Removed due to tebex footer addition confliction.-->
            <div class=""container"" style=""background-color: #f5f5f5;"">
                <div class=""col-md-12"">
                    <p><br/><b>Legal Notice:</b><br/>
                    </b>The EcoCityCraft server is in no way affiliated with Mojang Studios, nor should it be considered a company endorsed by Mojang Studios.<br/>
                        Any contributions or purchases made on this store goes to the EcoCityCraft Management &amp; Development Team.<br/>
                        For more information, support or a purchase history please send us an email at <a href=""mailto:support@ecocitycraft.com"">support@ecocitycraft.com</a>.<br/>
                        <i>Minecraft &reg;/TM, Mojang Studios / Notch &copy; 2009-2024</i></p>
                    <hr>
              <div class=""dropdown dropup pull-left"">
                <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown""><i class=""glyphicon glyphicon-globe""></i> Language </a>
                <ul class=""dropdown-menu up"">
                  {% for language in store.languages %}
                      <li><a href=""?lang={{ language.code }}"">{{ language.name }}</a></li>
                  {% endfor %}
                </ul>
                        {% if basket.username %} 
                            <a href=""/checkout/logout"" style=""padding-left:20px;""><i class=""glyphicon glyphicon-log-out""></i> {{ lang(""button.logout"") }}</a>
                        {% endif %}
              </div>
                    <span class=""pull-right"">&copy; 2011-2024 <a href=""https://minecrafteconomyservers.com"">Official EcoCityCraft Website &amp; Forums</a> All Rights Reserved</span></p>
                </div>
            </div>
        <!-- </footer> -->
    
    <div class=""modal"" id=""popup-modal"" tabindex=""-1"" role=""dialog""></div>
    
    {% if page.category == ""checkout"" %}
      <script src=""https://js.stripe.com/v2/""></script>
    {% endif %}
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js""></script>
    <script>
        $(function () {
            $('[data-toggle=""tooltip""]').tooltip()
        })
    </script>
    <script src=""https://ecocitycraft.com/forum/jquery.minecraftskin.js""></script>
    <script src=""/templates/209/js/site.js""></script>
     <script>
            jQuery(function(){
                var countdowns = $("".countdown-to"");
                countdowns.each(function(){
                   setInterval(function(ele) {
                       timeLeft = parseInt(ele.attr(""data-countdown""));
                       if (timeLeft == 0) {
                           ele.html(""Time Expired!"");
                       } else {
                       timeLeft--;
                       ele.attr(""data-countdown"", timeLeft);
                      var days = Math.floor(timeLeft / (60 * 60 * 24));
                      var hours = Math.floor((timeLeft % (60 * 60 * 24)) / (60 * 60));
                      var minutes = Math.floor((timeLeft % (60 * 60)) / (60));
                      var seconds = Math.floor((timeLeft % 60));
                      ele.html(days + ""d "" + hours + ""h "" + minutes + ""m "" + seconds + ""s"");
                       }
                   }, 1000, jQuery(this));
                });
            });

        </script>
  </body>
</html>"
sK9YMj7Y,Mystical Agriculture Vertical Turtle,Impshial,Lua,Tuesday 23rd of January 2024 01:31:48 PM CDT,"local looper = true
local direction = ""up""

while looper do
    
    turtle.select(1)
    
    if direction == ""up"" then
        if turtle.up() == false then
            direction = ""down""
        end
    else
        if turtle.down() == false then
            for i = 2,16 do
                turtle.select(i)
                turtle.dropDown(64)
            end
            direction = ""up""
        end
    end
    
    local success, data = turtle.inspect()
    
    if success then
        if data.metadata == 7 then
            turtle.dig()
            turtle.suck()
            turtle.place()
        end
    else
        turtle.place()
    end
end    "
MKTmwxWT,Untitled,gerd_r,YAML,Tuesday 23rd of January 2024 01:27:27 PM CDT,"type: custom:stack-in-card
cards:
  - type: custom:hui-element
    card_type: horizontal-stack
    cards:
      - type: custom:auto-entities
        card:
          type: grid
          columns: 6
          square: true
          title: wLAN - Netzwerk
        card_param: cards
        filter:
          include:
            - entity_id: sensor.*_signal
              options:
                type: custom:mushroom-entity-card
                fill_container: true
                tap_action:
                  action: more-info
                layout: vertical
                primary_info: name
                secondary_info: state
                icon_type: icon
                card_mod:
                  style: |
                    mushroom-shape-icon {
                      --icon-color:
                        {% if states(config.entity)|float >= -60 %} #00ff00 !important;
                        {% elif states(config.entity)|float >= -70 %} #ffff00 !important;
                        {% elif states(config.entity)|float >= -75 %} #ffa500 !important;
                        {% else %} #ff0000 !important;
                        {% endif %}
                    }
          exclude: []
        show_empty: true
        sort:
          method: state
          numeric: true
          reverse: false
"
ih2Jc8uA,Untitled,Mysoft,FreeBasic,Tuesday 23rd of January 2024 12:56:57 PM CDT,"#undef palette
#undef palette
#undef palette
sub palette(iIndex as ubyte,iRed as ubyte,iGreen as ubyte,iBlue as ubyte)
  asm
    mov dx,0x3C8
    mov al,[iIndex]
    out dx,al
    inc dx
    mov al,[iRed]    
    shr al,2
    out dx,al
    mov al,[iGreen]    
    shr al,2
    out dx,al
    mov al,[iBlue]    
    shr al,2
    out dx,al
  end asm
end sub
screenlock
#undef screenlock
declare sub fb_GfxLock cdecl alias ""fb_GfxLock""
sub screenlock
  static as any ptr pPrevBuf
  if pPrevBuf <> screenptr then
    fb_GfxLock() : pPrevBuf = screenptr
  end if
end sub
#undef screenunlock
sub screenunlock
  var pscr = screenptr
  if pScr then
    asm
      push es
      push gs
      pop es
      mov esi,[pscr]
      mov edi,0xA0000
      mov ecx,(320*200/4)
      rep movsd
      pop es
    end asm
  end if
end sub
"
34cA43J2,Shuffle,Suslick,C#,Tuesday 23rd of January 2024 12:52:09 PM CDT,"    class Program
    {
        static void Main(string[] args)
        {
            int arrayLength = 10;
            int[] arrayNumbers = new int[arrayLength];

            FillArrayNumbers(arrayNumbers);

            PrintArray(arrayNumbers);

            int[] arrayNumbersShuffle = ShuffleArray(arrayNumbers);

            PrintArray(arrayNumbers);

            Console.ReadLine();
        }

        private static void FillArrayNumbers(int[] arrayNumbers, int maxNumber = 20, int minNumber = -20)
        {
            Random random = new Random();
            
            int randomNumber = minNumber;

            for (int i = 0; i < arrayNumbers.Length; i++)
            {
                randomNumber = random.Next(minNumber, maxNumber + 1);

                arrayNumbers[i] = randomNumber;
            }
        }

        private static void PrintArray(int[] arrayNumbers)
        {
            foreach(int number in arrayNumbers)
            {
                Console.Write(number + "" "");
            }

            Console.WriteLine();
        }


        private static int[] ShuffleArray(int[] arrayNumbers)
        {
            Random random = new Random();

            int index = 0;
            int numberBuffer = 0;

            for (int i = 0; i < arrayNumbers.Length; i++)
            {
                index = random.Next(0, arrayNumbers.Length);

                numberBuffer = arrayNumbers[index];
                arrayNumbers[index] = arrayNumbers[i];
                arrayNumbers[i] = numberBuffer;

                Console.WriteLine($""{i}  -  Рандомный индекс: {index}; Число под индексом {index}: {numberBuffer}; Число которое поменяли: {arrayNumbers[index]}"");
            }

            return arrayNumbers;
        }
    }"
gTNm2cU3,Untitled,bonkersGER,JSON,Tuesday 23rd of January 2024 12:41:53 PM CDT,"{
    ""teamA"": {
        ""name"": ""Team A"",
        ""advantage"": 0
    },
    ""teamB"": {
        ""name"": ""Team B"",
        ""advantage"": 0
    },
    ""gameServer"": null,
    ""mapPool"": [
        ""de_ancient"",
        ""de_anubis"",
        ""de_inferno"",
        ""de_mirage"",
        ""de_nuke"",
        ""de_overpass"",
        ""de_vertigo""
    ],
    ""electionSteps"": [
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_A""
            }
        },
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_B""
            }
        },
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_A""
            }
        },
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_B""
            }
        },
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_A""
            }
        },
        {
            ""map"": {
                ""mode"": ""BAN"",
                ""who"": ""TEAM_B""
            }
        },
        {
            ""map"": {
                ""mode"": ""RANDOM_PICK""
            },
            ""side"": {
                ""mode"": ""KNIFE""
            }
        }
    ],
    ""rconCommands"": {
        ""init"": [
            ""game_type 0; game_mode 1; sv_game_mode_flags 0; sv_skirmish_id 0"",
            ""say > RCON INIT LOADED <""
        ],
        ""knife"": [
            ""mp_give_player_c4 0; mp_startmoney 0; mp_ct_default_secondary \""\""; mp_t_default_secondary \""\"""",
            ""say > SPECIAL KNIFE CONFIG LOADED <""
        ],
        ""match"": [
            ""ammo_grenade_limit_default 1"",
            ""ammo_grenade_limit_flashbang 2"",
            ""ammo_grenade_limit_total 4"",
            ""bot_quota 0"",
            ""cash_player_bomb_defused 300"",
            ""cash_player_bomb_planted 300"",
            ""cash_player_damage_hostage -30"",
            ""cash_player_interact_with_hostage 300"",
            ""cash_player_killed_enemy_default 300"",
            ""cash_player_killed_enemy_factor 1"",
            ""cash_player_killed_hostage -1000"",
            ""cash_player_killed_teammate -300"",
            ""cash_player_rescued_hostage 1000"",
            ""cash_team_elimination_bomb_map 3250"",
            ""cash_team_elimination_hostage_map_ct 3000"",
            ""cash_team_elimination_hostage_map_t 3000"",
            ""cash_team_hostage_alive 0"",
            ""cash_team_hostage_interaction 600"",
            ""cash_team_loser_bonus 1400"",
            ""cash_team_loser_bonus_consecutive_rounds 500"",
            ""cash_team_planted_bomb_but_defused 800"",
            ""cash_team_rescued_hostage 600"",
            ""cash_team_terrorist_win_bomb 3500"",
            ""cash_team_win_by_defusing_bomb 3500"",
            ""cash_team_win_by_hostage_rescue 2900"",
            ""cash_team_win_by_time_running_out_bomb 3250"",
            ""cash_team_win_by_time_running_out_hostage 3250"",
            ""ff_damage_reduction_bullets 0.33"",
            ""ff_damage_reduction_grenade 0.85"",
            ""ff_damage_reduction_grenade_self 1"",
            ""ff_damage_reduction_other 0.4"",
            ""mp_afterroundmoney 0"",
            ""mp_autokick 0"",
            ""mp_autoteambalance 0"",
            ""mp_backup_restore_load_autopause 1"",
            ""mp_backup_round_auto 1"",
            ""mp_buy_anywhere 0"",
            ""mp_buy_during_immunity 0"",
            ""mp_buytime 20"",
            ""mp_c4timer 40"",
            ""mp_ct_default_melee weapon_knife"",
            ""mp_ct_default_primary \""\"""",
            ""mp_ct_default_secondary weapon_hkp2000"",
            ""mp_death_drop_defuser 1"",
            ""mp_death_drop_grenade 2"",
            ""mp_death_drop_gun 1"",
            ""mp_defuser_allocation 0"",
            ""mp_display_kill_assists 1"",
            ""mp_endmatch_votenextmap 0"",
            ""mp_forcecamera 1"",
            ""mp_free_armor 0"",
            ""mp_freezetime 18"",
            ""mp_friendlyfire 1"",
            ""mp_give_player_c4 1"",
            ""mp_halftime 1"",
            ""mp_halftime_duration 15"",
            ""mp_halftime_pausetimer 0"",
            ""mp_ignore_round_win_conditions 0"",
            ""mp_limitteams 0"",
            ""mp_match_can_clinch 1"",
            ""mp_match_end_restart 0"",
            ""mp_maxmoney 16000"",
            ""mp_maxrounds 24"",
            ""mp_molotovusedelay 0"",
            ""mp_overtime_enable 0"",
            ""mp_overtime_halftime_pausetimer 0"",
            ""mp_overtime_maxrounds 6"",
            ""mp_overtime_startmoney 10000"",
            ""mp_playercashawards 1"",
            ""mp_randomspawn 0"",
            ""mp_respawn_immunitytime 0"",
            ""mp_respawn_on_death_ct 0"",
            ""mp_respawn_on_death_t 0"",
            ""mp_round_restart_delay 5"",
            ""mp_roundtime 1.92"",
            ""mp_roundtime_defuse 1.92"",
            ""mp_roundtime_hostage 1.92"",
            ""mp_solid_teammates 1"",
            ""mp_starting_losses 1"",
            ""mp_startmoney 800"",
            ""mp_t_default_melee weapon_knife"",
            ""mp_t_default_primary \""\"""",
            ""mp_t_default_secondary weapon_glock"",
            ""mp_teamcashawards 1"",
            ""mp_timelimit 0"",
            ""mp_weapons_allow_map_placed 1"",
            ""mp_weapons_allow_zeus 1"",
            ""mp_weapons_glow_on_ground 0"",
            ""mp_win_panel_display_time 3"",
            ""occlusion_test_async 0"",
            ""spec_freeze_deathanim_time 0"",
            ""spec_freeze_panel_extended_time 0"",
            ""spec_freeze_time 2"",
            ""spec_freeze_time_lock 2"",
            ""spec_replay_enable 0"",
            ""sv_allow_votes 1"",
            ""sv_auto_full_alltalk_during_warmup_half_end 0"",
            ""sv_coaching_enabled 1"",
            ""sv_competitive_official_5v5 1"",
            ""sv_damage_print_enable 0"",
            ""sv_deadtalk 1"",
            ""sv_hibernate_postgame_delay 300"",
            ""sv_holiday_mode 0"",
            ""sv_ignoregrenaderadio 0"",
            ""sv_infinite_ammo 0"",
            ""sv_occlude_players 1"",
            ""sv_talk_enemy_dead 0"",
            ""sv_talk_enemy_living 0"",
            ""sv_voiceenable 1"",
            ""tv_relayvoice 1"",
            ""mp_team_timeout_max 4"",
            ""mp_team_timeout_time 30"",
            ""sv_vote_command_delay 0"",
            ""cash_team_bonus_shorthanded 0"",
            ""cash_team_loser_bonus_shorthanded 0"",
            ""mp_spectators_max 20"",
            ""mp_team_intro_time 0"",
            ""mp_disconnect_kills_players 0"",
            ""mp_warmup_end"",
			""tv_record ""tmt2demo/MATCHID-TeamA-vs-TeamB-MAP.dem"",
            ""say > GSH 5on5 GroupStage MATCH CONFIG LOADED <""
        ],
        ""end"": [
            ""say > MATCH END RCON LOADED <""
        ]
    },"
tTeWkLRq,subsequence,SaNik74,C#,Tuesday 23rd of January 2024 12:36:37 PM CDT,"class Program
{
    static void Main(string[] args)
    {
        int firstNumber = 5;
        int lastNumber = 96;
        int additionalNumber = 7;

        for (int i = firstNumber; i <= lastNumber; i+= additionalNumber)
        {
            Console.Write($""{i} "");
        }
    }
}"
aDPX9arx,index.html,mariiahorbova,HTML,Tuesday 23rd of January 2024 12:21:22 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"" rel=""stylesheet""
        integrity=""sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"" crossorigin=""anonymous"">
    <link rel=""stylesheet"" href= ""{{ url_for( 'static', filename = 'main.css') }}"">
    <title>Мій Блог</title>
</head>
  <body>
    {% include ""menu.html"" %}
    <main>
    {% block body %}{% endblock %}
    </main>
    {% include ""footer.html"" %}
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js""
        integrity=""sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN""
        crossorigin=""anonymous""></script>
  </body>
</body>
</html>

"
BtAXFjbA,db_scripts,mariiahorbova,Python,Tuesday 23rd of January 2024 12:14:38 PM CDT,"import sqlite3
from settings import *


db_name = 'blog.db'
conn = None
cursor = None

def open():
    global conn, cursor
    conn = sqlite3.connect(PATH + db_name)
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()

def close():
    cursor.close()
    conn.close()

def do(query, params = None):
    cursor.execute(query, params)
    conn.commit()
 
def getUser():
    open()
    cursor.execute('''SELECT * FROM user''')
    user = cursor.fetchone()
    close()
    
    return user

def getAuthData():
    open()
    cursor.execute('''SELECT * FROM users''')
    data = cursor.fetchone()
    close()

    return {'login' : data[0], 'password' : data[1]}

def updateInfo(data):
    open()
    do('''UPDATE users SET login = (?), password = (?)''', [data['login'], data['password']])
    do('''UPDATE info SET text = (?)''', [data['text']])
    if 'image' in data:
        do('''UPDATE info SET image = (?)''', [data['image']])
    close()

def getBlog(category):
    open()
    cursor.execute('''SELECT * FROM posts WHERE category = (?)''', [category])
    blog = cursor.fetchall()
    close()
    
    return blog

def addPost(category, post):
    open()
    cursor.execute('''INSERT INTO posts (category,text,datetime) VALUES((?),(?),DATE())''', [category, post])
    conn.commit()
    close()
"
kEdgFe5T,Untitled,Josif_tepe,C++,Tuesday 23rd of January 2024 12:12:27 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int n, a, b;
    cin >> n;
    cin >> a;
    cin >> b;
    
    int bliska = n / a;
    int dalecna = n / b;
    
    cout << dalecna - bliska << endl;
    return 0;
}
"
Ja3XSLkN,Untitled,Josif_tepe,C++,Tuesday 23rd of January 2024 12:07:43 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int x;
    cin >> x;
    
    if(x % 4 == 0) {
        cout << 0 << endl;
    }
    else {
        cout << (4 - (x % 4)) * 9 << endl;
    }
    return 0;
}
"
p6x3xNJB,Untitled,Josif_tepe,C++,Tuesday 23rd of January 2024 12:05:37 PM CDT,"#include <iostream>
using namespace std;

int main() {
    int x;
    cin >> x;
    
    if((x + 0) % 4 == 0) {
        cout << 0 << endl;
    }
    else if((x + 1) % 4 == 0) {
        cout << 9 << endl;
    }
    else if((x + 2) % 4 == 0) {
        cout << 18 << endl;
    }
    else {
        cout << 27 << endl;
    }
    return 0;
}
"
X74SM8kB,Nigerian scammers [23-1-2/2024],bombaires,AIMMS,Tuesday 23rd of January 2024 11:54:30 AM CDT,"<a href=""mailto:bankof545@gmail.com"">bankof545@gmail.com</a>
<a href=""mailto:b.an.k.of.54.5@gmail.com"">b.an.k.of.54.5@gmail.com</a>
<a href=""mailto:b.a.nko.f54.5@gmail.com"">b.a.nko.f54.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.5.45@gmail.com"">ba.n.k.o.f.5.45@gmail.com</a>
<a href=""mailto:b.an.kof5.45@gmail.com"">b.an.kof5.45@gmail.com</a>
<a href=""mailto:ba.n.kof.5.45@gmail.com"">ba.n.kof.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.545@gmail.com"">ba.n.k.o.f.545@gmail.com</a>
<a href=""mailto:ba.n.k.of54.5@gmail.com"">ba.n.k.of54.5@gmail.com</a>
<a href=""mailto:ba.nk.o.f5.4.5@gmail.com"">ba.nk.o.f5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof.5.4.5@gmail.com"">ba.nkof.5.4.5@gmail.com</a>
<a href=""mailto:b.ank.o.f54.5@gmail.com"">b.ank.o.f54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.5.45@gmail.com"">b.a.nk.o.f.5.45@gmail.com</a>
<a href=""mailto:b.anko.f5.45@gmail.com"">b.anko.f5.45@gmail.com</a>
<a href=""mailto:ba.nk.o.f.5.45@gmail.com"">ba.nk.o.f.5.45@gmail.com</a>
<a href=""mailto:bank.of.5.45@gmail.com"">bank.of.5.45@gmail.com</a>
<a href=""mailto:bank.of545@gmail.com"">bank.of545@gmail.com</a>
<a href=""mailto:bank.of5.45@gmail.com"">bank.of5.45@gmail.com</a>
<a href=""mailto:bank.of.545@gmail.com"">bank.of.545@gmail.com</a>
<a href=""mailto:b.a.nk.of.5.45@gmail.com"">b.a.nk.of.5.45@gmail.com</a>
<a href=""mailto:b.a.nk.o.f54.5@gmail.com"">b.a.nk.o.f54.5@gmail.com</a>
<a href=""mailto:b.ankof.5.45@gmail.com"">b.ankof.5.45@gmail.com</a>
<a href=""mailto:b.ankof545@gmail.com"">b.ankof545@gmail.com</a>
<a href=""mailto:ba.nko.f5.4.5@gmail.com"">ba.nko.f5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.54.5@gmail.com"">ba.n.k.o.f.54.5@gmail.com</a>
<a href=""mailto:ba.nk.of54.5@gmail.com"">ba.nk.of54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f545@gmail.com"">b.a.nk.o.f545@gmail.com</a>
<a href=""mailto:ba.n.ko.f5.45@gmail.com"">ba.n.ko.f5.45@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.54.5@gmail.com"">b.a.n.ko.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nkof5.4.5@gmail.com"">b.a.nkof5.4.5@gmail.com</a>
<a href=""mailto:bankof.545@gmail.com"">bankof.545@gmail.com</a>
<a href=""mailto:ban.k.of.5.4.5@gmail.com"">ban.k.of.5.4.5@gmail.com</a>
<a href=""mailto:b.an.kof545@gmail.com"">b.an.kof545@gmail.com</a>
<a href=""mailto:ban.ko.f5.45@gmail.com"">ban.ko.f5.45@gmail.com</a>
<a href=""mailto:ba.nkof5.45@gmail.com"">ba.nkof5.45@gmail.com</a>
<a href=""mailto:ban.k.of5.4.5@gmail.com"">ban.k.of5.4.5@gmail.com</a>
<a href=""mailto:ba.nk.o.f54.5@gmail.com"">ba.nk.o.f54.5@gmail.com</a>
<a href=""mailto:b.anko.f.5.4.5@gmail.com"">b.anko.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.nko.f.54.5@gmail.com"">ba.nko.f.54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f54.5@gmail.com"">b.a.n.k.o.f54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f545@gmail.com"">b.an.ko.f545@gmail.com</a>
<a href=""mailto:b.an.ko.f5.45@gmail.com"">b.an.ko.f5.45@gmail.com</a>
<a href=""mailto:b.a.nk.o.f5.4.5@gmail.com"">b.a.nk.o.f5.4.5@gmail.com</a>
<a href=""mailto:ban.ko.f54.5@gmail.com"">ban.ko.f54.5@gmail.com</a>
<a href=""mailto:ban.k.of.545@gmail.com"">ban.k.of.545@gmail.com</a>
<a href=""mailto:bank.o.f.54.5@gmail.com"">bank.o.f.54.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f.545@gmail.com"">ba.n.ko.f.545@gmail.com</a>
<a href=""mailto:b.a.nkof545@gmail.com"">b.a.nkof545@gmail.com</a>
<a href=""mailto:ban.k.of.54.5@gmail.com"">ban.k.of.54.5@gmail.com</a>
<a href=""mailto:ban.k.of545@gmail.com"">ban.k.of545@gmail.com</a>
<a href=""mailto:b.anko.f545@gmail.com"">b.anko.f545@gmail.com</a>
<a href=""mailto:ban.ko.f.54.5@gmail.com"">ban.ko.f.54.5@gmail.com</a>
<a href=""mailto:banko.f.545@gmail.com"">banko.f.545@gmail.com</a>
<a href=""mailto:b.a.n.k.of.54.5@gmail.com"">b.a.n.k.of.54.5@gmail.com</a>
<a href=""mailto:ban.k.o.f545@gmail.com"">ban.k.o.f545@gmail.com</a>
<a href=""mailto:ban.ko.f.5.4.5@gmail.com"">ban.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.an.ko.f.545@gmail.com"">b.an.ko.f.545@gmail.com</a>
<a href=""mailto:ba.nko.f545@gmail.com"">ba.nko.f545@gmail.com</a>
<a href=""mailto:b.ankof5.4.5@gmail.com"">b.ankof5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.45@gmail.com"">b.a.n.k.o.f.5.45@gmail.com</a>
<a href=""mailto:b.a.nko.f5.4.5@gmail.com"">b.a.nko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.kof5.45@gmail.com"">b.a.n.kof5.45@gmail.com</a>
<a href=""mailto:b.ank.of.5.4.5@gmail.com"">b.ank.of.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of.5.4.5@gmail.com"">b.a.n.k.of.5.4.5@gmail.com</a>
<a href=""mailto:b.ank.of.5.45@gmail.com"">b.ank.of.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.of.545@gmail.com"">ba.n.k.of.545@gmail.com</a>
<a href=""mailto:b.ank.o.f5.4.5@gmail.com"">b.ank.o.f5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof54.5@gmail.com"">ba.nkof54.5@gmail.com</a>
<a href=""mailto:ban.k.o.f.54.5@gmail.com"">ban.k.o.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.5.4.5@gmail.com"">b.a.nk.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nkof54.5@gmail.com"">b.a.nkof54.5@gmail.com</a>
<a href=""mailto:b.ankof.545@gmail.com"">b.ankof.545@gmail.com</a>
<a href=""mailto:b.a.nk.of545@gmail.com"">b.a.nk.of545@gmail.com</a>
<a href=""mailto:ba.n.ko.f5.4.5@gmail.com"">ba.n.ko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f545@gmail.com"">b.a.n.k.o.f545@gmail.com</a>
<a href=""mailto:bankof.5.45@gmail.com"">bankof.5.45@gmail.com</a>
<a href=""mailto:b.an.kof5.4.5@gmail.com"">b.an.kof5.4.5@gmail.com</a>
<a href=""mailto:bank.of.54.5@gmail.com"">bank.of.54.5@gmail.com</a>
<a href=""mailto:bankof.54.5@gmail.com"">bankof.54.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f545@gmail.com"">ba.n.ko.f545@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f5.45@gmail.com"">b.a.n.k.o.f5.45@gmail.com</a>
<a href=""mailto:b.an.k.of54.5@gmail.com"">b.an.k.of54.5@gmail.com</a>
<a href=""mailto:b.a.nkof5.45@gmail.com"">b.a.nkof5.45@gmail.com</a>
<a href=""mailto:ban.kof.5.4.5@gmail.com"">ban.kof.5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof5.4.5@gmail.com"">ba.nkof5.4.5@gmail.com</a>
<a href=""mailto:b.an.k.o.f54.5@gmail.com"">b.an.k.o.f54.5@gmail.com</a>
<a href=""mailto:ba.n.kof5.4.5@gmail.com"">ba.n.kof5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.of5.4.5@gmail.com"">b.a.nk.of5.4.5@gmail.com</a>
<a href=""mailto:ba.nko.f54.5@gmail.com"">ba.nko.f54.5@gmail.com</a>
<a href=""mailto:ban.kof54.5@gmail.com"">ban.kof54.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.5.45@gmail.com"">b.a.n.ko.f.5.45@gmail.com</a>
<a href=""mailto:b.ank.of54.5@gmail.com"">b.ank.of54.5@gmail.com</a>
<a href=""mailto:ba.nk.of545@gmail.com"">ba.nk.of545@gmail.com</a>
<a href=""mailto:ban.k.o.f.5.4.5@gmail.com"">ban.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f5.4.5@gmail.com"">b.a.n.ko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.kof.545@gmail.com"">b.a.n.kof.545@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.5.4.5@gmail.com"">b.a.n.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.ank.of5.4.5@gmail.com"">b.ank.of5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f54.5@gmail.com"">b.a.n.ko.f54.5@gmail.com</a>
<a href=""mailto:ba.n.kof54.5@gmail.com"">ba.n.kof54.5@gmail.com</a>
<a href=""mailto:ba.n.ko.f.5.4.5@gmail.com"">ba.n.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof.545@gmail.com"">ba.nkof.545@gmail.com</a>
<a href=""mailto:b.a.nko.f545@gmail.com"">b.a.nko.f545@gmail.com</a>
<a href=""mailto:bank.of54.5@gmail.com"">bank.of54.5@gmail.com</a>
<a href=""mailto:b.an.k.o.f.54.5@gmail.com"">b.an.k.o.f.54.5@gmail.com</a>
<a href=""mailto:bank.o.f.5.4.5@gmail.com"">bank.o.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.nkof545@gmail.com"">ba.nkof545@gmail.com</a>
<a href=""mailto:ban.ko.f.5.45@gmail.com"">ban.ko.f.5.45@gmail.com</a>
<a href=""mailto:banko.f5.4.5@gmail.com"">banko.f5.4.5@gmail.com</a>
<a href=""mailto:b.an.kof.54.5@gmail.com"">b.an.kof.54.5@gmail.com</a>
<a href=""mailto:ba.nk.o.f.5.4.5@gmail.com"">ba.nk.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.an.k.o.f.5.45@gmail.com"">b.an.k.o.f.5.45@gmail.com</a>
<a href=""mailto:ban.k.of54.5@gmail.com"">ban.k.of54.5@gmail.com</a>
<a href=""mailto:bankof5.45@gmail.com"">bankof5.45@gmail.com</a>
<a href=""mailto:b.a.nko.f5.45@gmail.com"">b.a.nko.f5.45@gmail.com</a>
<a href=""mailto:b.a.n.ko.f545@gmail.com"">b.a.n.ko.f545@gmail.com</a>
<a href=""mailto:ban.ko.f5.4.5@gmail.com"">ban.ko.f5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.5.4.5@gmail.com"">b.a.n.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.an.k.of5.4.5@gmail.com"">b.an.k.of5.4.5@gmail.com</a>
<a href=""mailto:b.an.kof.5.45@gmail.com"">b.an.kof.5.45@gmail.com</a>
<a href=""mailto:ban.k.of5.45@gmail.com"">ban.k.of5.45@gmail.com</a>
<a href=""mailto:b.ankof5.45@gmail.com"">b.ankof5.45@gmail.com</a>
<a href=""mailto:b.anko.f54.5@gmail.com"">b.anko.f54.5@gmail.com</a>
<a href=""mailto:ban.k.o.f.5.45@gmail.com"">ban.k.o.f.5.45@gmail.com</a>
<a href=""mailto:ba.nk.of.5.4.5@gmail.com"">ba.nk.of.5.4.5@gmail.com</a>
<a href=""mailto:banko.f.5.45@gmail.com"">banko.f.5.45@gmail.com</a>
<a href=""mailto:b.ank.o.f545@gmail.com"">b.ank.o.f545@gmail.com</a>
<a href=""mailto:banko.f.5.4.5@gmail.com"">banko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.anko.f.5.45@gmail.com"">b.anko.f.5.45@gmail.com</a>
<a href=""mailto:ban.kof.54.5@gmail.com"">ban.kof.54.5@gmail.com</a>
<a href=""mailto:b.ank.o.f.5.4.5@gmail.com"">b.ank.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f5.4.5@gmail.com"">b.a.n.k.o.f5.4.5@gmail.com</a>
<a href=""mailto:ba.n.k.of5.45@gmail.com"">ba.n.k.of5.45@gmail.com</a>
<a href=""mailto:bank.o.f.545@gmail.com"">bank.o.f.545@gmail.com</a>
<a href=""mailto:b.anko.f5.4.5@gmail.com"">b.anko.f5.4.5@gmail.com</a>
<a href=""mailto:b.ankof54.5@gmail.com"">b.ankof54.5@gmail.com</a>
<a href=""mailto:b.anko.f.54.5@gmail.com"">b.anko.f.54.5@gmail.com</a>
<a href=""mailto:b.a.nk.of.5.4.5@gmail.com"">b.a.nk.of.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.545@gmail.com"">b.a.nk.o.f.545@gmail.com</a>
<a href=""mailto:ban.kof545@gmail.com"">ban.kof545@gmail.com</a>
<a href=""mailto:b.an.ko.f54.5@gmail.com"">b.an.ko.f54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f5.4.5@gmail.com"">b.an.ko.f5.4.5@gmail.com</a>
<a href=""mailto:bank.o.f545@gmail.com"">bank.o.f545@gmail.com</a>
<a href=""mailto:b.an.k.of.5.45@gmail.com"">b.an.k.of.5.45@gmail.com</a>
<a href=""mailto:b.a.nk.of54.5@gmail.com"">b.a.nk.of54.5@gmail.com</a>
<a href=""mailto:b.a.nk.o.f5.45@gmail.com"">b.a.nk.o.f5.45@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.5.4.5@gmail.com"">ba.n.k.o.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nko.f.5.4.5@gmail.com"">b.a.nko.f.5.4.5@gmail.com</a>
<a href=""mailto:ba.nko.f.5.4.5@gmail.com"">ba.nko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of.545@gmail.com"">b.a.n.k.of.545@gmail.com</a>
<a href=""mailto:b.an.ko.f.5.4.5@gmail.com"">b.an.ko.f.5.4.5@gmail.com</a>
<a href=""mailto:b.a.nk.of.545@gmail.com"">b.a.nk.of.545@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.545@gmail.com"">b.a.n.ko.f.545@gmail.com</a>
<a href=""mailto:b.a.nk.of5.45@gmail.com"">b.a.nk.of5.45@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.54.5@gmail.com"">b.a.nk.o.f.54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f.54.5@gmail.com"">b.an.ko.f.54.5@gmail.com</a>
<a href=""mailto:bankof.5.4.5@gmail.com"">bankof.5.4.5@gmail.com</a>
<a href=""mailto:b.ankof.5.4.5@gmail.com"">b.ankof.5.4.5@gmail.com</a>
<a href=""mailto:bankof5.4.5@gmail.com"">bankof5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.kof5.4.5@gmail.com"">b.a.n.kof5.4.5@gmail.com</a>
<a href=""mailto:bank.of.5.4.5@gmail.com"">bank.of.5.4.5@gmail.com</a>
<a href=""mailto:ba.nk.of.54.5@gmail.com"">ba.nk.of.54.5@gmail.com</a>
<a href=""mailto:b.a.nkof.5.45@gmail.com"">b.a.nkof.5.45@gmail.com</a>
<a href=""mailto:ba.n.k.of5.4.5@gmail.com"">ba.n.k.of5.4.5@gmail.com</a>
<a href=""mailto:ba.nk.of.5.45@gmail.com"">ba.nk.of.5.45@gmail.com</a>
<a href=""mailto:b.a.n.k.of5.4.5@gmail.com"">b.a.n.k.of5.4.5@gmail.com</a>
<a href=""mailto:b.a.n.kof.5.45@gmail.com"">b.a.n.kof.5.45@gmail.com</a>
<a href=""mailto:ban.ko.f545@gmail.com"">ban.ko.f545@gmail.com</a>
<a href=""mailto:ba.n.ko.f.54.5@gmail.com"">ba.n.ko.f.54.5@gmail.com</a>
<a href=""mailto:ba.nk.o.f.54.5@gmail.com"">ba.nk.o.f.54.5@gmail.com</a>
<a href=""mailto:bank.o.f5.4.5@gmail.com"">bank.o.f5.4.5@gmail.com</a>
<a href=""mailto:b.ank.of.54.5@gmail.com"">b.ank.of.54.5@gmail.com</a>
<a href=""mailto:b.an.ko.f.5.45@gmail.com"">b.an.ko.f.5.45@gmail.com</a>
<a href=""mailto:b.a.n.kof545@gmail.com"">b.a.n.kof545@gmail.com</a>
<a href=""mailto:ba.n.k.o.f5.45@gmail.com"">ba.n.k.o.f5.45@gmail.com</a>
<a href=""mailto:banko.f54.5@gmail.com"">banko.f54.5@gmail.com</a>
<a href=""mailto:ban.kof5.45@gmail.com"">ban.kof5.45@gmail.com</a>
<a href=""mailto:b.an.k.of545@gmail.com"">b.an.k.of545@gmail.com</a>
<a href=""mailto:b.a.nk.of.54.5@gmail.com"">b.a.nk.of.54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.of.5.45@gmail.com"">b.a.n.k.of.5.45@gmail.com</a>
<a href=""mailto:b.a.n.kof54.5@gmail.com"">b.a.n.kof54.5@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.545@gmail.com"">b.a.n.k.o.f.545@gmail.com</a>
<a href=""mailto:b.an.k.of5.45@gmail.com"">b.an.k.of5.45@gmail.com</a>
<a href=""mailto:b.a.n.kof.54.5@gmail.com"">b.a.n.kof.54.5@gmail.com</a>
<a href=""mailto:ban.k.o.f54.5@gmail.com"">ban.k.o.f54.5@gmail.com</a>
<a href=""mailto:ba.n.k.o.f545@gmail.com"">ba.n.k.o.f545@gmail.com</a>
<a href=""mailto:b.a.nkof.545@gmail.com"">b.a.nkof.545@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.54.5@gmail.com"">b.a.n.k.o.f.54.5@gmail.com</a>
<a href=""mailto:ba.n.kof.545@gmail.com"">ba.n.kof.545@gmail.com</a>
<a href=""mailto:b.a.n.k.of5.45@gmail.com"">b.a.n.k.of5.45@gmail.com</a>
<a href=""mailto:b.an.k.o.f545@gmail.com"">b.an.k.o.f545@gmail.com</a>
<a href=""mailto:b.a.n.ko.f5.45@gmail.com"">b.a.n.ko.f5.45@gmail.com</a>
<a href=""mailto:b.ank.o.f.545@gmail.com"">b.ank.o.f.545@gmail.com</a>
<a href=""mailto:ban.k.o.f5.4.5@gmail.com"">ban.k.o.f5.4.5@gmail.com</a>
<a href=""mailto:bank.o.f5.45@gmail.com"">bank.o.f5.45@gmail.com</a>
<a href=""mailto:b.an.k.o.f.545@gmail.com"">b.an.k.o.f.545@gmail.com</a>
<a href=""mailto:b.a.nko.f.5.45@gmail.com"">b.a.nko.f.5.45@gmail.com</a>
<a href=""mailto:banko.f.54.5@gmail.com"">banko.f.54.5@gmail.com</a>
<a href=""mailto:b.an.k.of.545@gmail.com"">b.an.k.of.545@gmail.com</a>
<a href=""mailto:ba.nko.f.5.45@gmail.com"">ba.nko.f.5.45@gmail.com</a>
<a href=""mailto:bankof545@gmail.com"">bankof545@gmail.com</a>
<a href=""mailto:ban.kof5.4.5@gmail.com"">ban.kof5.4.5@gmail.com</a>
<a href=""mailto:bankof0009@gmail.com"">bankof0009@gmail.com</a>
<a href=""mailto:ba.nk.of.0.0.0.9@gmail.com"">ba.nk.of.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.00.9@gmail.com"">b.a.n.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.a.nko.f000.9@gmail.com"">b.a.nko.f000.9@gmail.com</a>
<a href=""mailto:b.a.n.kof000.9@gmail.com"">b.a.n.kof000.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.0.0.9@gmail.com"">ban.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.0009@gmail.com"">ba.nk.o.f.0009@gmail.com</a>
<a href=""mailto:banko.f.0.00.9@gmail.com"">banko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.0.0.0.9@gmail.com"">b.a.nko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f0.0.0.9@gmail.com"">b.a.n.k.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:ban.ko.f0.00.9@gmail.com"">ban.ko.f0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f0.0.0.9@gmail.com"">b.anko.f0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nkof0.009@gmail.com"">ba.nkof0.009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0009@gmail.com"">b.a.n.ko.f.0009@gmail.com</a>
<a href=""mailto:b.an.k.of0009@gmail.com"">b.an.k.of0009@gmail.com</a>
<a href=""mailto:b.a.nk.of0.00.9@gmail.com"">b.a.nk.of0.00.9@gmail.com</a>
<a href=""mailto:banko.f0.0.09@gmail.com"">banko.f0.0.09@gmail.com</a>
<a href=""mailto:bank.of.0.0.09@gmail.com"">bank.of.0.0.09@gmail.com</a>
<a href=""mailto:b.an.k.of000.9@gmail.com"">b.an.k.of000.9@gmail.com</a>
<a href=""mailto:ban.k.of0.0.0.9@gmail.com"">ban.k.of0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.k.of0.0.09@gmail.com"">b.an.k.of0.0.09@gmail.com</a>
<a href=""mailto:bankof.0.009@gmail.com"">bankof.0.009@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.0.0.9@gmail.com"">ba.n.ko.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of.00.09@gmail.com"">b.a.n.k.of.00.09@gmail.com</a>
<a href=""mailto:ba.nkof00.0.9@gmail.com"">ba.nkof00.0.9@gmail.com</a>
<a href=""mailto:banko.f00.0.9@gmail.com"">banko.f00.0.9@gmail.com</a>
<a href=""mailto:banko.f000.9@gmail.com"">banko.f000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of0.0.09@gmail.com"">b.a.nk.of0.0.09@gmail.com</a>
<a href=""mailto:ban.kof.00.09@gmail.com"">ban.kof.00.09@gmail.com</a>
<a href=""mailto:b.a.n.kof.00.0.9@gmail.com"">b.a.n.kof.00.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.0.09@gmail.com"">b.ank.o.f.0.0.09@gmail.com</a>
<a href=""mailto:b.ank.of.0.0.0.9@gmail.com"">b.ank.of.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.nkof0.00.9@gmail.com"">b.a.nkof0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.of0.00.9@gmail.com"">b.an.k.of0.00.9@gmail.com</a>
<a href=""mailto:ban.ko.f.0.00.9@gmail.com"">ban.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.of.00.0.9@gmail.com"">b.ank.of.00.0.9@gmail.com</a>
<a href=""mailto:ba.nko.f.0009@gmail.com"">ba.nko.f.0009@gmail.com</a>
<a href=""mailto:ban.ko.f0009@gmail.com"">ban.ko.f0009@gmail.com</a>
<a href=""mailto:ba.n.k.of.0.00.9@gmail.com"">ba.n.k.of.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.of.0.00.9@gmail.com"">b.ank.of.0.00.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f0009@gmail.com"">ba.nk.o.f0009@gmail.com</a>
<a href=""mailto:b.ank.of.000.9@gmail.com"">b.ank.of.000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f00.0.9@gmail.com"">b.a.nko.f00.0.9@gmail.com</a>
<a href=""mailto:ba.nk.of.0.009@gmail.com"">ba.nk.of.0.009@gmail.com</a>
<a href=""mailto:bankof.0.0.09@gmail.com"">bankof.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.009@gmail.com"">ba.n.ko.f0.009@gmail.com</a>
<a href=""mailto:ba.nk.o.f0.0.09@gmail.com"">ba.nk.o.f0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.000.9@gmail.com"">b.a.n.k.o.f.000.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.0009@gmail.com"">b.an.k.o.f.0009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0009@gmail.com"">b.a.nk.o.f.0009@gmail.com</a>
<a href=""mailto:b.an.ko.f0.0.0.9@gmail.com"">b.an.ko.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.ankof0.0.09@gmail.com"">b.ankof0.0.09@gmail.com</a>
<a href=""mailto:b.an.kof0.00.9@gmail.com"">b.an.kof0.00.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f000.9@gmail.com"">b.a.nk.o.f000.9@gmail.com</a>
<a href=""mailto:b.ankof.00.09@gmail.com"">b.ankof.00.09@gmail.com</a>
<a href=""mailto:b.a.n.k.of.000.9@gmail.com"">b.a.n.k.of.000.9@gmail.com</a>
<a href=""mailto:ban.ko.f000.9@gmail.com"">ban.ko.f000.9@gmail.com</a>
<a href=""mailto:b.a.nkof00.09@gmail.com"">b.a.nkof00.09@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0.00.9@gmail.com"">b.a.nk.o.f.0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f.0.0.09@gmail.com"">b.anko.f.0.0.09@gmail.com</a>
<a href=""mailto:b.an.k.of0.009@gmail.com"">b.an.k.of0.009@gmail.com</a>
<a href=""mailto:bank.o.f.0.0.09@gmail.com"">bank.o.f.0.0.09@gmail.com</a>
<a href=""mailto:bankof0.0.09@gmail.com"">bankof0.0.09@gmail.com</a>
<a href=""mailto:b.an.k.of.0.00.9@gmail.com"">b.an.k.of.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.kof.0009@gmail.com"">b.a.n.kof.0009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.000.9@gmail.com"">b.a.n.ko.f.000.9@gmail.com</a>
<a href=""mailto:b.an.ko.f.00.09@gmail.com"">b.an.ko.f.00.09@gmail.com</a>
<a href=""mailto:ban.ko.f.00.09@gmail.com"">ban.ko.f.00.09@gmail.com</a>
<a href=""mailto:ba.nko.f.0.00.9@gmail.com"">ba.nko.f.0.00.9@gmail.com</a>
<a href=""mailto:bank.of0009@gmail.com"">bank.of0009@gmail.com</a>
<a href=""mailto:ban.kof.00.0.9@gmail.com"">ban.kof.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.o.f00.09@gmail.com"">ban.k.o.f00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of000.9@gmail.com"">ba.n.k.of000.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of00.0.9@gmail.com"">b.a.n.k.of00.0.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f0009@gmail.com"">ba.n.k.o.f0009@gmail.com</a>
<a href=""mailto:b.a.nk.of.0.00.9@gmail.com"">b.a.nk.of.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f0.009@gmail.com"">b.a.n.k.o.f0.009@gmail.com</a>
<a href=""mailto:ban.ko.f.0.0.0.9@gmail.com"">ban.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ban.ko.f.0.0.09@gmail.com"">ban.ko.f.0.0.09@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.009@gmail.com"">b.ank.o.f.0.009@gmail.com</a>
<a href=""mailto:banko.f.0.0.09@gmail.com"">banko.f.0.0.09@gmail.com</a>
<a href=""mailto:bankof00.09@gmail.com"">bankof00.09@gmail.com</a>
<a href=""mailto:ban.kof0.0.0.9@gmail.com"">ban.kof0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0009@gmail.com"">b.a.n.k.of.0009@gmail.com</a>
<a href=""mailto:ban.kof00.09@gmail.com"">ban.kof00.09@gmail.com</a>
<a href=""mailto:ban.k.o.f.0009@gmail.com"">ban.k.o.f.0009@gmail.com</a>
<a href=""mailto:ba.nkof0.0.09@gmail.com"">ba.nkof0.0.09@gmail.com</a>
<a href=""mailto:ba.nkof.00.09@gmail.com"">ba.nkof.00.09@gmail.com</a>
<a href=""mailto:ban.k.of00.0.9@gmail.com"">ban.k.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.nkof.0.009@gmail.com"">b.a.nkof.0.009@gmail.com</a>
<a href=""mailto:b.an.ko.f.0.00.9@gmail.com"">b.an.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.o.f00.09@gmail.com"">b.ank.o.f00.09@gmail.com</a>
<a href=""mailto:b.ankof000.9@gmail.com"">b.ankof000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of0.009@gmail.com"">b.a.nk.of0.009@gmail.com</a>
<a href=""mailto:bank.o.f.00.09@gmail.com"">bank.o.f.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.000.9@gmail.com"">ba.n.k.of.000.9@gmail.com</a>
<a href=""mailto:bank.o.f0.009@gmail.com"">bank.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.nk.of.0.009@gmail.com"">b.a.nk.of.0.009@gmail.com</a>
<a href=""mailto:b.anko.f0.0.09@gmail.com"">b.anko.f0.0.09@gmail.com</a>
<a href=""mailto:b.a.nko.f.00.0.9@gmail.com"">b.a.nko.f.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.of.0.00.9@gmail.com"">ban.k.of.0.00.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.009@gmail.com"">ban.k.o.f.0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f00.0.9@gmail.com"">b.a.n.k.o.f00.0.9@gmail.com</a>
<a href=""mailto:b.an.k.of.0009@gmail.com"">b.an.k.of.0009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.0.9@gmail.com"">b.a.n.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.0.09@gmail.com"">ban.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.kof0009@gmail.com"">ba.n.kof0009@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0.0.09@gmail.com"">ba.n.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f0009@gmail.com"">ba.n.ko.f0009@gmail.com</a>
<a href=""mailto:ba.nkof.00.0.9@gmail.com"">ba.nkof.00.0.9@gmail.com</a>
<a href=""mailto:ba.n.kof.0.00.9@gmail.com"">ba.n.kof.0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f0.0.09@gmail.com"">b.an.k.o.f0.0.09@gmail.com</a>
<a href=""mailto:b.ank.of0.0.0.9@gmail.com"">b.ank.of0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.kof000.9@gmail.com"">ba.n.kof000.9@gmail.com</a>
<a href=""mailto:ban.kof.0.0.0.9@gmail.com"">ban.kof.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.nko.f00.09@gmail.com"">b.a.nko.f00.09@gmail.com</a>
<a href=""mailto:ban.k.of0009@gmail.com"">ban.k.of0009@gmail.com</a>
<a href=""mailto:b.ank.o.f0.0.0.9@gmail.com"">b.ank.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.00.0.9@gmail.com"">b.ank.o.f.00.0.9@gmail.com</a>
<a href=""mailto:bank.of0.009@gmail.com"">bank.of0.009@gmail.com</a>
<a href=""mailto:b.an.kof0009@gmail.com"">b.an.kof0009@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.0.09@gmail.com"">b.a.n.k.of.0.0.09@gmail.com</a>
<a href=""mailto:ban.k.o.f.00.09@gmail.com"">ban.k.o.f.00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f0009@gmail.com"">b.an.k.o.f0009@gmail.com</a>
<a href=""mailto:ba.nko.f000.9@gmail.com"">ba.nko.f000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of.000.9@gmail.com"">b.a.nk.of.000.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.00.0.9@gmail.com"">ba.nk.o.f.00.0.9@gmail.com</a>
<a href=""mailto:b.a.nko.f0.009@gmail.com"">b.a.nko.f0.009@gmail.com</a>
<a href=""mailto:bankof0.009@gmail.com"">bankof0.009@gmail.com</a>
<a href=""mailto:ba.nko.f0.0.0.9@gmail.com"">ba.nko.f0.0.0.9@gmail.com</a>
<a href=""mailto:bankof.000.9@gmail.com"">bankof.000.9@gmail.com</a>
<a href=""mailto:ban.kof0.00.9@gmail.com"">ban.kof0.00.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.00.09@gmail.com"">b.a.nko.f.00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f.0.00.9@gmail.com"">b.an.k.o.f.0.00.9@gmail.com</a>
<a href=""mailto:b.an.ko.f.0.0.0.9@gmail.com"">b.an.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.kof.0.0.0.9@gmail.com"">b.an.kof.0.0.0.9@gmail.com</a>
<a href=""mailto:bankof0.00.9@gmail.com"">bankof0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.of.00.0.9@gmail.com"">b.an.k.of.00.0.9@gmail.com</a>
<a href=""mailto:ba.nko.f.00.09@gmail.com"">ba.nko.f.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.0009@gmail.com"">ba.n.k.of.0009@gmail.com</a>
<a href=""mailto:bank.o.f0.00.9@gmail.com"">bank.o.f0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.0.009@gmail.com"">b.an.k.o.f.0.009@gmail.com</a>
<a href=""mailto:b.an.k.of0.0.0.9@gmail.com"">b.an.k.of0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.00.09@gmail.com"">ba.nk.o.f.00.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f.00.0.9@gmail.com"">ba.n.ko.f.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.of000.9@gmail.com"">ban.k.of000.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.00.9@gmail.com"">ba.n.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.000.9@gmail.com"">ba.nk.o.f.000.9@gmail.com</a>
<a href=""mailto:b.ank.of0.009@gmail.com"">b.ank.of0.009@gmail.com</a>
<a href=""mailto:bankof.00.09@gmail.com"">bankof.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of00.0.9@gmail.com"">ba.n.k.of00.0.9@gmail.com</a>
<a href=""mailto:b.ank.of00.0.9@gmail.com"">b.ank.of00.0.9@gmail.com</a>
<a href=""mailto:bank.of00.09@gmail.com"">bank.of00.09@gmail.com</a>
<a href=""mailto:ba.n.kof.000.9@gmail.com"">ba.n.kof.000.9@gmail.com</a>
<a href=""mailto:ba.nkof.0.00.9@gmail.com"">ba.nkof.0.00.9@gmail.com</a>
<a href=""mailto:ban.ko.f0.0.09@gmail.com"">ban.ko.f0.0.09@gmail.com</a>
<a href=""mailto:b.anko.f.0.009@gmail.com"">b.anko.f.0.009@gmail.com</a>
<a href=""mailto:banko.f0009@gmail.com"">banko.f0009@gmail.com</a>
<a href=""mailto:ba.nk.o.f0.0.0.9@gmail.com"">ba.nk.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:banko.f.0.0.0.9@gmail.com"">banko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.of0.0.09@gmail.com"">b.ank.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.nko.f.000.9@gmail.com"">b.a.nko.f.000.9@gmail.com</a>
<a href=""mailto:bank.o.f.0.009@gmail.com"">bank.o.f.0.009@gmail.com</a>
<a href=""mailto:b.a.nko.f.0.00.9@gmail.com"">b.a.nko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.an.ko.f00.0.9@gmail.com"">b.an.ko.f00.0.9@gmail.com</a>
<a href=""mailto:b.ankof.0.0.09@gmail.com"">b.ankof.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.0.009@gmail.com"">ba.n.k.of.0.009@gmail.com</a>
<a href=""mailto:ba.nk.of.0.0.09@gmail.com"">ba.nk.of.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.kof00.0.9@gmail.com"">ba.n.kof00.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.000.9@gmail.com"">ba.n.ko.f.000.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f000.9@gmail.com"">ba.n.ko.f000.9@gmail.com</a>
<a href=""mailto:ban.ko.f0.009@gmail.com"">ban.ko.f0.009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.09@gmail.com"">b.a.nk.o.f0.0.09@gmail.com</a>
<a href=""mailto:bank.o.f.0.00.9@gmail.com"">bank.o.f.0.00.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.0.9@gmail.com"">ba.n.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.00.09@gmail.com"">ba.n.ko.f.00.09@gmail.com</a>
<a href=""mailto:ba.nk.of000.9@gmail.com"">ba.nk.of000.9@gmail.com</a>
<a href=""mailto:b.an.kof.0009@gmail.com"">b.an.kof.0009@gmail.com</a>
<a href=""mailto:bank.of0.00.9@gmail.com"">bank.of0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f0.0.09@gmail.com"">b.a.n.ko.f0.0.09@gmail.com</a>
<a href=""mailto:ba.nko.f0.00.9@gmail.com"">ba.nko.f0.00.9@gmail.com</a>
<a href=""mailto:ban.ko.f.0009@gmail.com"">ban.ko.f.0009@gmail.com</a>
<a href=""mailto:b.anko.f0.00.9@gmail.com"">b.anko.f0.00.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0.0.0.9@gmail.com"">ba.n.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.anko.f.000.9@gmail.com"">b.anko.f.000.9@gmail.com</a>
<a href=""mailto:b.anko.f.00.09@gmail.com"">b.anko.f.00.09@gmail.com</a>
<a href=""mailto:ba.nk.of.00.0.9@gmail.com"">ba.nk.of.00.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of000.9@gmail.com"">b.a.n.k.of000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.0.009@gmail.com"">b.a.nko.f.0.009@gmail.com</a>
<a href=""mailto:ban.kof000.9@gmail.com"">ban.kof000.9@gmail.com</a>
<a href=""mailto:ba.n.k.of0009@gmail.com"">ba.n.k.of0009@gmail.com</a>
<a href=""mailto:b.a.n.kof.0.0.09@gmail.com"">b.a.n.kof.0.0.09@gmail.com</a>
<a href=""mailto:b.an.ko.f0.0.09@gmail.com"">b.an.ko.f0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.0.0.9@gmail.com"">b.a.n.k.of.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.009@gmail.com"">ba.n.ko.f.0.009@gmail.com</a>
<a href=""mailto:ba.n.k.of.00.0.9@gmail.com"">ba.n.k.of.00.0.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.0.00.9@gmail.com"">ba.nk.o.f.0.00.9@gmail.com</a>
<a href=""mailto:banko.f0.009@gmail.com"">banko.f0.009@gmail.com</a>
<a href=""mailto:ba.n.k.of0.0.09@gmail.com"">ba.n.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.kof0.0.09@gmail.com"">b.a.n.kof0.0.09@gmail.com</a>
<a href=""mailto:b.a.nk.of0.0.0.9@gmail.com"">b.a.nk.of0.0.0.9@gmail.com</a>"
